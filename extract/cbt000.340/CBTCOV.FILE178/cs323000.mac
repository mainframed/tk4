C          DATA SET CS323000   AT LEVEL 015 AS OF 03/27/79
C          DATA SET CS323000   AT LEVEL 014 AS OF 02/07/79
C     PGM-ID.  CS323000.    (COPIED AND MODIFIED FROM CS301000)
C     AUTHOR.  DON HIGGINS.
C     DATE.    01/29/79.
C     REMARKS. FPC MANAGEMENT BY RESULTS MONTHLY STATISTICS.
C              READ SMF FILE AND CREATE THE FOLLOWING SUMMARY REPORTS
C
C            CS323R01    TABLE OF CONTENTS
C            CS323R02    MESSAGES AND EXCEPTIONS
C            CS323R03    SMF RECORD COUNT TOTALS
C            CS323R04    CPU UTILIZATION GRAPH
C            CS323R05    JOB TURNAROUND STATISTICS
C            CS323R06    JOB TURNAROUND GRAPH FOR 8-5 PERIOD
C            CS323R07    DEVICE EXCP STATISTICS FOR 24 HOUR DAY
C            CS323R08    DEVICE EXCP GRAPH FOR 24 HOUR DAY
C            CS323R09    DEVICE EXCP STATISTICS FOR 8-5 PERIOD
C            CS323R10    DEVICE EXCP GRAPH FOR 8-5 PERIOD
C            CS323R11    HASP LOCAL SYSOUT STATISTICS
C            CS323R12    SYSTEM PROBLEM STATISTICS
C            CS323R13    OPERATOR ACTION STATISTICS
C            CS323R14    MONTHLY SYSTEM PROBLEM SUMMARY
C            CS323R15    MONTHLY OPERATOR ACTION SUMMARY
C            CS323R16    SYSTEM RESOURCE MANAGEMENT REPORT
C            CS323R17    SYSTEM WORKLOAD REPORT
C            CS323R18    TOTAL COST BY COMPONENT
C            CS323R19    TOTAL ABENDS BY AREA AND TYPE
C
C
C
C
C
C
C
C
C
C     FILES.
C              FT05F001 - CONTROL CARDS
C
C                   COLUMN    DESCRIPTION
C                    01-02     YEAR TO BE ANALIZED
C                    03-05     LAST DAY OF JAN (031)
C                    06-38     LAST DAY OF FEB-DEC (059, ETC.)
C                    39-39     DAY OF WEEK FOR JAN 1 (MON=1)
C
C              FT06F001 - SYSTEM ERROR MESSAGES
C              FT10F001 - CONTROL DATE FILE FOR SELECTING SMF RECS.
C
C                   COLUMN    DESCRIPTION
C
C              CARD 1 - COPY CONTROL FOR DETAIL JOB REPORTING
C
C                    01-05     YYDDD START DATE
C                    06-09     HHMM  START TIME
C                    10-14     YYDDD END   DATE
C                    15-18     HHMM  END   TIME
C                    19        TYPE OF COPY
C                                 0 - MANUAL DATE/TIME
C                                 1 - AUTOMATIC UPDATE OF DATES
C                    20        TYPE OF PROCESSING
C                                 0 - ALL YEAR
C                                 1 - CURRENT MONTH ONLY
C                    21        SNAP DUMP OF ALL COPIED SMF RECORDS
C                                 0 - NO
C                                 1 - YES
C                    22        COPY ONLY - NO REPORTS
C                                 0 - NO
C                                 1 - YES
C                    23        SAVE DATA ON FT22F001
C                                 0 - NO
C                                 1 - YES
C                    24-28     TERMINATE INPUT AFTER NNNNN RECORDS
C                              HAVE BEEN READ IF NOT ZERO OR BLANK
C
C
C              CARD 2 - COPY SELECTION OPTION IF IN MANUAL MODE
C
C                    01-02 PREFIX
C                    03-05 JOB NUMBER
C                    06    FREQ CODE
C                    07    AREA CODE
C                    08    TYPE CODE
C                    09-13 CSR NUMBER
C                    14    CSR SUFFIX
C                    15-18 USER-ID
C
C
C                    THE ABOVE MAY BE USED IN ANY COMBINATION TO
C                    CONTROL SELECTION OF JOB DATA
C              FT16F001 - REPORTS PASSED TO CS312000
C              FT21F001 - TABLE OF CONTENTS REPORT
C              FT22F001 - SAVE DATA FILE (OPTIONAL)
C              SMFDUMP - SYSOUT FOR SNAPS OF SELECTED SMF RECORDS
C              SMFCOPY - COPIED SELECTED SMF RECORDS
C              SMFINPUT - SMF FILE ACCESSED VIA SMFIO (GU016400)
C     EXTERNAL.
C              TIMER   - GENERAL TIME AND DATE SUPPORT (GU701000)
C              CS306   - SUPPORT
C              SMFIO   - READ SMF (GU016400)
C              HHMMSS  - CONVERT 0.01 SEC TO HOURS, MINUTES, SECONDS
C              CS302   - SUPPORT
C              CS305   - MISC ALC SUPPORT
C     NOTES.
C              1.  THIS PGM WILL NOT HANDLE MULTIPLE SYSTEM SMF DATA
C                  FOR OVERLAPING TIME PERIODS (WILL HANDLE SVS AND
C                  MVS ALTERNATING ON SINGLE SYSTEM).
C
C
C     REFERENCES.
C                   1.   OS/VS SMF  GC35-0004-4
C                   2.   OS/VS2 MVS GC28-0706-1
C                   3.   OS/VS2 RMF SC28-0922-0
C     MAINTENANCE.   REMEMBER TO UPDATE FORMAT 1 WITH MAINT. DATE ****
C
C     09/04/77 DSH ADD LOGIC TO PROCESS MVS OR SVS SMF DATA
C     09/12/77 DSH FIX BAD OFFSETS DUE TO BAD SMF DOC FOR MVS
C     10/08/77 DSH ADD MVS REPORTING CHANGES AS FOLLOWS
C                  1.  FIX CPU DEFAULT TO ZERO ON R16
C                  2.  ADD CHANNEL USAGE TO R16
C                  3.  ADD T70, T71, T73 PROCESSING FOR R16
C                  4.  ADD DISK AND TAPE MOUNTS TO R16
C                  5.  FIX T6 ERROR MESSAGE TO ADD JOBNAME
C                  6.  CHANGE FRPT TO 16 AND USE FT06F001 FOR ERRS
C     10/18/77 DSH FIX R16 ERROR IN PROCESSING T70 CPU OVER MID
C     10/21/77 DSH MISC. FIXES
C                  1.  R16 FIX BAD CPU DUE TO SVS T1 PROBLEMS
C                  2.  R12 FIX TP4 AND TP5 DUE TO NAME CHANGES (TC)
C                  3.  R04 FIX CPU GRAPHS
C                  4.  R05 FIX BAD PQ AND PRT TIMES DUE TO T6 PROBS.
C     10/31/77 DSH MISC. FIXES AND CHANGES FOR MVS
C                  1.  DROP B, D, F FROM R04 PLOT
C                  2.  USE MFINT TO SET ENDING TIME ON RMF INTS.
C                  3.  USE T31 TO DETECT TSO STARTS ON MVS
C                  4.  FIX PRINT TIMING BY DROPPING TIMING OF T6
C                      AND NOT COUNTING TSO SESSIONS AS JOBS DUE
C                      TO NEW T26 FOR ALL TSO SESSIONS ON MVS.
C                  5.  USE TIMER FOR TOD AND OSDATE INTERFACES.
C                  6.  FIX T71 PROCESSING USING BAD CPF FOR PAGING.
C     11/03/77 DSH - FIXES TO 10/31/77 CHANGES
C                  1.  CORRECT NSLOTS TO NSLOT IN T71 PROCESSING.
C                  2.  DROP TSO SESSIONS FROM JOB COUNT ON R05.
C     11/28/77 DSH - FIXES AS FOLLOWS
C                  1.  FIX MISSING DAYS AND BAD CPU %  ON R04
C                  2.  CHANGE I/O ERR MSG TO SINGLE SPACE
C                  3.  FIX MISSING R11
C     01/30/78 DSH - FIXES AND CHANGES AS FOLLOWS
C                  1.  FIX BAD SUBSCRIPTING DUE TO T70 SPANNING YEAR
C                  2.  ADD TEST OPTION TO JUST PROCESS SPECIFIED
C                      NUMBER OF RECORDS FROM SMFINPUT FILE FOR
C                      TESTING.
C     03/30/78 DSH - FIXES FOR 370-158-AP UPGRADEAND MISC.
C                  1.  FIX R04 AND R16 TO HANDLE UP TO 200% CPU
C                  2.  DROP HASP SPOOL ERROR MESSAGE.
C                  3.  ALLOW PROCESSING TODAYS RECORDS IN MANUAL.
C     04/18/78 DSH - FIXES FOR 3350 ADDITIONS ON NEW CHANNEL 4
C                  1.  COUNT ALL CHANNEL 4 I/O IN DISK EXCPS FOR R16
C                  2.  FIX PAGING TOTALS FROM T71 RECORD FOR R9
C     10/23/78 DSH - CHANGE MIS TO MTX (MINUTES THROUGH EXECUTION)
C                    TO AVOID DISTORTION CAUSED BY FETCH QUEUE TIME.
C     12/15/78 DSH - CHANGE R12 TO SHOW TC4, TC5 AND TC6 HITS
C
C     01/22/79 DSH - FOLLOWING CHANGES
C               1.   ADD NON USER PRODUCTION JOB ABEND AND LATE
C                    STATISTICS TO R05
C               2.   ADD PROCEDURE USAGE RECORD PROCESSING
C                    (USER SMF RECORD 231 OUTPUT BY IEFUJV RDR EXIT)
C               3.   ADD SYSTEM ACTIVITY INDICATOR TO R16 USING
C                    NUMBER OF SMF RECORDS WRITTEN PER MINUTE AS
C                    GOOD INDICATOR OF SYSTEM ACTIVITY.
C               4.   FIX BUG IN R04 - SET NPLOT=4 INSTEAD OF 7.
C               5.   ADD SYSTEM WORKLOAD BY PERF. GROUP REPORT R17.
C
C     01/28/79 DSH - FOLLOWING
C
C               1.   FIX BAD INCREMENT FOR MULT PERIODS IN TYPE 72.
C               2.   ADD TSO PERIOD 1 TRANSACTIONS AND RESPONSE TO R16
C
C     02/06/79 DSH - CREATE CS323000 FROM CS301000 AND ADD R18 AND R19.
C
C     03/27/79 DSH - FIX BUG CAUSING ZERO PAGING DATA IN R07-R10
C
C
C     DATA DEFINITION
C
      IMPLICIT INTEGER(A-Z)
      INTEGER  EOF/0/,FALSE/0/,TRUE/1/
      INTEGER  NTYPES(256)/256*0/,TRCDS/0/
      INTEGER NUSED(256)/256*0/,NCOPYD(256)/256*0/
      INTEGER CTYPES/0/,TTYPES/0/,TUSED/0/,TCOPYD/0/
      INTEGER  SDATE,EDATE,YEAR,MDAYS(12)
      INTEGER DOW,DOWS(366)
      INTEGER  RDIO/1/,MOVE/2/,     RTIME,RDATE,REOF/3/,RTYPE
      INTEGER COPY/4/,DUMP/5/
      INTEGER  LINE/0/,MAXLN/50/,PAGE/0/,TIME(6)
      REAL*8  GDATE
      INTEGER  FRPT/16/,FCTL/5/,FSYS/6/
      INTEGER FDAT/10/
      INTEGER  PCHAR(10)/'A','B','C','D','E','F','G','H','I','J'/
      INTEGER  PLOT(101)/101*' '/,PSAVE(10),NPLOT,BLANK/' '/
      INTEGER MAXCDS/0/
      INTEGER SELCDS(9)/8*' ',0/,SELWRK(9)/8*' ',0/,SELIDX(9)/9*0/
      INTEGER BLK/' '/
      REAL*8 BLK8/' '/
      REAL*8 JOB
      INTEGER RPTNO/0/,FTOC/21/
      INTEGER FSAVE/22/,TSAVE/0/
      INTEGER CPUID/0/,CPUIDS(3)/'A158','MVS1','****'/,CPUIDT(3)/3*0/
C
C     DATA FOR CS323R18 TOTAL COST BY COMPONENT
C
      INTEGER TOTTAB(16)/16*0/,RCPTAB(16)/16*0/,TOTPCT(16)/16*0/
      INTEGER CSTTAB(16)/16*0/,RATTAB(16)/16*0/
      EQUIVALENCE (RCPTAB(11),RCPCST),(CSTTAB(16),CSTGTL)
      EQUIVALENCE
     *  (TOTTAB(01),TOTCPU)
     * ,(TOTTAB(02),TOTMKM)
     * ,(TOTTAB(03),TOTDCP)
     * ,(TOTTAB(04),TOTTCP)
     * ,(TOTTAB(05),TOTRCP)
     * ,(TOTTAB(06),TOTLCP)
     * ,(TOTTAB(07),TOTPCP)
     * ,(TOTTAB(08),TOTSCP)
     * ,(TOTTAB(09),TOTDAL)
     * ,(TOTTAB(10),TOTTAL)
     * ,(TOTTAB(11),TOTCST)
     * ,(TOTTAB(12),TOTDTM)
     * ,(TOTTAB(14),TOTICP)
     * ,(TOTTAB(15),TOTTGP)
      REAL*8  TOTDSC(16)/
     *  'CPU-MIN '
     * ,'K-MIN   '
     * ,'DISK-IO '
     * ,'TAPE-IO '
     * ,'RDR-IO  '
     * ,'PRT-LINE'
     * ,'PCH-CARD'
     * ,'SCAN-IO '
     * ,'DISK-ALC'
     * ,'TAPE-ALC'
     * ,'(N/A)   '
     * ,'D/T-MNTS'
     * ,'(N/A)   '
     * ,'INTRDR  '
     * ,'TSO-IO  '
     * ,'G-TOTAL '/
C
C     DATA FOR CPU REPORTS
C
      INTEGER  T1DATE/99999/,T1TIME/0/
      REAL     TPT,CPT,CPF
      REAL     F24HR
      INTEGER  WAIT(366)/366*0/
      INTEGER  NIPLS(366)/366*0/,NIP85(366)/366*0/
      INTEGER  W85(366)/366*0/,W50(366)/366*0/
      INTEGER  PC(366)/366*0/,TPC(366)/366*0/,JOBID/' '/
      INTEGER  PC85(366)/366*0/,PC50(366)/366*0/,TC/'TC'/
C
C     DATA FOR JOB TURNAROUND REPORT FROM TYPE 26 DATA
C
      INTEGER NJ85(366)/366*0/,TJ85(366)/366*0/
      INTEGER LJ(366)/366*0/,NJ(366)/366*0/,HJ(366)/366*0/
      INTEGER CANJ(366)/366*0/
      INTEGER NCJ85(366)/366*0/,TCJ85(366)/366*0/
      INTEGER NPJ85(366)/366*0/,TPJ85(366)/366*0/
      INTEGER TXQ85(366)/366*0/,TX85(366)/366*0/
      INTEGER TPQ85(366)/366*0/,TP85(366)/366*0/
      INTEGER JOBFL/0/
      INTEGER JOBTYP/0/,JCLASS/' '/,JC/'C'/,JP/'P'/
C
C     DEVICE DATA
C
      INTEGER T28X(366)/366*0/,T15X(366)/366*0/,T36X(366)/366*0/
      INTEGER TA28X(366)/366*0/,DA28X(366)/366*0/
      INTEGER T0XX(366)/366*0/,TXXX(366)/366*0/
      INTEGER D28X(366)/366*0/,D15X(366)/366*0/,D36X(366)/366*0/
      INTEGER D0XX(366)/366*0/,DXXX(366)/366*0/
      INTEGER TPAGE(366)/366*0/,DPAGE(366)/366*0/
      INTEGER UCB,CHAN,CU,UNIT
      INTEGER EXCPS
C
C     DATA FOR HASP SYSOUT
C
      INTEGER TPR(366)/366*0/,TPR85(366)/366*0/
      INTEGER LPR(366)/366*0/,LPR85(366)/366*0/
      INTEGER PPR(366)/366*0/,PPR85(366)/366*0/
      INTEGER TPU(366)/366*0/,TPU85(366)/366*0/
      INTEGER LPU(366)/366*0/,LPU85(366)/366*0/
      INTEGER PR/'PR'/,PU/'PU'/
      INTEGER LODNM/' '/
      INTEGER SYSOUT/' '/,SYSA/'A'/,SYSJ/'J'/,SYSP/'P'/
      INTEGER TPRPU(11)/11*0/
C
C     DATA FOR SYSTEM PROBLEMS AND AVAIL. 8-5
C
      INTEGER TSO(366)/366*0/,TC4(366)/366*0/,TC5(366)/366*0/
      INTEGER TC6(366)/366*0/
      INTEGER LOST(366)/366*0/,NLOST/0/
      INTEGER JOBNO/' '/,JN4/'004'/,JN5/'005'/,JN6/'006'/
      INTEGER STEPNO/0/
      INTEGER NUPJOB/0/,NUPLAT/0/,NUPABN/0/
      INTEGER NUPSTI/0/,NUPJT/' '/,NUPJA/' '/
      INTEGER P/'P'/,U/'U'/
      REAL    NUPL,NUPA
C
C     DATA FOR OPERATOR ACTIVITY
C
      INTEGER TM(366)/366*0/,DM(366)/366*0/,AR(366)/366*0/
      INTEGER SA(366)/366*0/,SJ(366)/366*0/,SP(366)/366*0/
      INTEGER VON(366)/366*0/,VOFF(366)/366*0/
C
C     DATA FOR SRM
C
      INTEGER  SRMMAX/48/
      INTEGER  SRMSP(48),SRMEP(48),SRMST(48),SRMET(48)
      INTEGER  SRMCPU(48)/48*0/,SRMPAG(48)/48*0/,SRMSWP(48)/48*0/
      INTEGER  SRMCHA(4,48)/192*0/,LCHAN/1/,HCHAN/4/
      INTEGER  SRMDM(48)/48*0/,SRMTM(48)/48*0/
      INTEGER  MFTYPE/'XX'/,MF1/'01'/,RMF3/'03'/
      INTEGER  MFNCPU/0/,MFLCPU/0/
      INTEGER  MFNCHN/0/,MFLCHN/0/,MFCHAN/0/
      REAL*8 MFWTOD
      INTEGER  SRMDCP(48)/48*0/,SRMTCP(48)/48*0/,SRMHCP(48)/48*0/
      INTEGER  SRMINT(48)/48*0/,SRMTSO(48)/48*0/,SRMALC(48)/48*0/
      INTEGER  SRMXCP(48)/48*0/,SRMMKM(48)/48*0/,SRMRCM(48)/48*0/
      INTEGER  SRMSMF(48)/48*0/,SRMMNA(48)/48*0/
      INTEGER  SRMT1T(48)/48*0/,SRMT1E(48)/48*0/
      REAL     SRMT1R(48)/48*0./
      INTEGER*2 SMFA(1440)/1440*0/
      INTEGER  SRMT1,SRMT2,NSLOT,NSLOT1,NSLOT2,PT1,PT2
      INTEGER  T30MIN
      REAL     F30MIM
      REAL*8 PGM/' '/,TSOTMP/'IKJEFT01'/
      INTEGER MEMORY/0/,TMKM/0/
C
C     DATA FOR SYSTEM WORKLOAD REPORT - R17
C
      INTEGER MAXPG/40/,MAXPD/5/,PG/0/,PD/0/,NPD/0/
      INTEGER PGTT(40,5)/200*0/,PGET(40,5)/200*0/,PGSR(40,5)/200*0/
      REAL    AVGTT,AVGSR
C
C     DATA FOR TOTAL ABENDS BY AREA AND TYPE
C
      INTEGER TABA(20)/20*' '/,TABT(20)/20*' '/
      INTEGER TABAI/0/,TABAM/20/,TABTI/0/,TABTM/20/
      INTEGER TABATT(20,20)/400*0/,TABATA(20,20)/400*0/
      REAL    TABPCT
      INTEGER NBLK/' '/,ASTRK/'*'/
      INTEGER FOUND/0/
C
C     FORMATS
C
    1 FORMAT(
     *    '1','CS323R',I2,' SMF ANALYSIS REPORT'
     *   ,1X
     *   ,A8,6A4,5X,'PAGE',I5
     *   ,T100,'CS323000-V1-R01/30/79'
     *    /)
    2 FORMAT(
     *    I2,12I3,I1
     *)
   10 FORMAT(
     *    1X,'SMF RECORD COUNT TOTALS'//
     *    1X,'TYPE     TOTAL     USED    COPIED'
     */)
   20 FORMAT(
     *    1X,I4,10I10
     *)
   30 FORMAT(
     *   /1X,I4,10I10
     *)
   40 FORMAT(
     *   /1X,'CPU UTILIZATION GRAPH'
     *  //1X,'A - CPU USED BY BATCH OVER 24 HOUR DAY'
     *   /1X,'B - CPU USED BY BATCH 8 AM - 5 PM'
     *   /1X,'C - CPU USED BY TOTAL SYSTEM OVER 24 HOUR DAY'
     *   /1X,'D - CPU USED BY TOTAL SYSTEM 8 AM - 5 PM'
     *   //1X,'YYDDD IPLS  0  ',20(I3,2X)
     *   /12X,103('*')
     *)
   50 FORMAT(
     *    1X,I5,I3,I2,' *',101A1,'*'
     *)
   60 FORMAT(
     *   /1X,'JOB TURNAROUND ANALYSIS REPORT'
     *  //7X,'TOTAL HELD CANC LATE'
     *   ,4X,'8-5 AVG'
     *   ,6X,'XQ XEQ  PQ PRT'
     *   ,'    8-5 AVG    8-5  AVG'
     *      ,'    8-5  AVG'
     *   /1X,' DATE  JOBS JOBS JOBS JOBS'
     *   ,4X,'TOT MTX'
     *   ,5X,'MIN MIN MIN MIN'
     *   ,'    C=C MTX    C=P  MTX'
     *      ,'    C=X  MTX'
     */)
   70 FORMAT(
     *    1X,I5,I6,3I5,I7,I4
     *   ,I8,3I4
     *   ,I7,I4,I7,I5,I7,I5
     *)
   75 FORMAT(
     *    /1X,'MONTH-TO-DATE NON-USER PRODUCTION JOB STATISTICS'
     *   //1X,'TOTAL JOBS ',I6
     *    /1X,'JOBS  LATE ',I6
     *    /1X,'  %   LATE ',F6.2
     *    /1X,'JOBS ABEND ',I6
     *    /1X,'  %  ABEND ',F6.2
     *)
   80 FORMAT(
     *   /1X,'DEVICE EXCP ANALYSIS BY 24 HR DAY'
     *  //1X,'  DAY      TOTAL    UR-0XX  TAPE-28X  DISK-15X  DISK-36X'
     *       ,'     SPOOL'
     *   ,'     PAGES'
     *   ,'  TAPE-MIN'
     */)
   90 FORMAT(
     *    2X,I5,12I10
     *)
  100 FORMAT(
     *   /1X,'DEVICE EXCP ANALYSIS DURING 8-5 DAY SHIFT'
     *  //1X,'  DAY      TOTAL    UR-0XX  TAPE-28X  DISK-15X  DISK-36X'
     *       ,'     SPOOL'
     *   ,'     PAGES'
     *   ,'  TAPE-MIN'
     */)
  110 FORMAT(
     *   /1X,'JOB TURNAROUND GRAPH FOR 8-5 SHIFT'
     * //1X,'A - TOTAL JOBS - AVG MINUTES IN SYSTEM'
     * //1X,'B - CLASS C    - AVG MINUTES IN SYSTEM'
     * //1X,'C - CLASS P    - AVG MINUTES IN SYSTEM'
     * //1X,'D - CLASS OTHER- AVG MINUTES IN SYSTEM'
     * //1X,'E - TOTAL JOBS - AVG MINUTES IN EXECUTION QUEUE'
     * //1X,'F - TOTAL JOBS - AVG MINUTES IN EXECUTION'
     * //1X,'G - TOTAL JOBS - AVG MINUTES IN PRINT QUEUE'
     * //1X,'H - TOTAL JOBS - AVG MINUTES IN PRINT'
     *  //1X,'YYDDD JOBS  0  ',20(I3,2X)
     *   /12X,103('*')
     *)
  120 FORMAT(
     *    1X,I5,I5,' *',101A1,'*'
     *)
  130 FORMAT(
     *   /1X,'DEVICE EXCP GRAPH FOR 24 HR DAY - SCALED 0 TO 100 PER SEC'
     *  //1X,'A - 28X TAPE'
     *  //1X,'B - 15X DISK'
     *  //1X,'C - 36X DISK'
     *  //1X,'D - SPOOL'
     *  //1X,'E - PAGES'
     *  //1X,'YYDDD IPLS  0  ',20(I3,2X)
     *   /12X,103('*')
     *)
  140 FORMAT(
     *    1X,I5,I5,' *',101A1,'*'
     *)
  150 FORMAT(
     *   /1X,'DEVICE EXCP GRAPH FOR 8-5 DAY SHIFT - 0 TO 100 PER SEC'
     *  //1X,'A - 28X TAPE'
     *  //1X,'B - 15X DISK'
     *  //1X,'C - 36X DISK'
     *  //1X,'D - SPOOL'
     *  //1X,'E - PAGES'
     * //1X,'YYDDD IPLS  0  ',20(I3,2X)
     *   /12X,103('*')
     *)
  160 FORMAT(
     *   /1X,'HASP LOCAL SYSOUT ANALYSIS'
     *  //11X,'---------------------- 24 HOUR -------------------'
     *   ,1X
     *       , '---------------------- 8 TO 5  ------------------'
     *   /1X, '     YYDDD'
     *      , '    PR-MIN  PR-LINES  PR-PAGES    PU-MIN  PU-CARDS'
     *      , '    PR-MIN  PR-LINES  PR-PAGES    PU-MIN  PU-CARDS'
     */)
  170 FORMAT(
     *    1X,11I10
     *)
  180 FORMAT(
     *   /1X,'SYSTEM PROBLEM ANALYSIS'
     *  //1X, '     YYDDD'
     *      , '  TOT-IPLS LOST-RECS  8-5-IPLS   8-5 TSO'
     *      , '   8-5-TC4   8-5-TC5   8-5-TC6'
     */)
  190 FORMAT(
     *    1X,13I10
     *)
  200 FORMAT(
     *   /1X,'OPERATOR ACTION ANALYSIS'
     *  //1X, '     YYDDD'
     *      , '  TOT-JOBS HELD-JOBS CANC-JOBS     TAPES     DISKS'
     *      , ' ALLOC-REC   VARY-ON  VARY-OFF'
     *      , '  SYSOUT-A  SYSOUT-J  SYSOUT-P'
     */)
  210 FORMAT(
     *    1X,13I10
     *)
  220 FORMAT(
     *    I5,I4,I5,I4
     *   ,5I1,I5
     *)
  240 FORMAT(
     *   /1X,'     TOTAL',12I10
     *)
  250 FORMAT(
     *    A2,A3,3A1,A4,A1,A1,I4
     *)
  260 FORMAT(
     *  //1X,'MESSAGES AND EXCEPTIONS'
     */)
  270 FORMAT(
     *   /1X,'COPY START ',I6,I5
     *   ,'   COPY END ',I6,I5
     *   ,'     SELECT CODES  ',8A4,I4
     *)
  280 FORMAT(
     *   /1X,'TABLE OF CONTENTS'
     *  //1X,'REPORT DESCRIPTION'
     *  //1X,'     1     TABLE OF CONTENTS'
     *   /1X,'     2     MESSAGES AND EXCEPTIONS'
     *   /1X,'     3     SMF RECORD COUNT TOTALS'
     *   /1X,'     4     CPU UTILIZATION GRAPH'
     *   /1X,'     5     JOB TURNAROUND STATISTICS'
     *   /1X,'     6     JOB TURNAROUND GRAPH FOR 8-5 PERIOD'
     *   /1X,'     7     DEVICE EXCP STATISTICS FOR 24 HOUR DAY'
     *   /1X,'     8     DEVICE EXCP GRAPH FOR 24 HOUR DAY'
     *   /1X,'     9     DEVICE EXCP STATISTICS FOR 8-5 PERIOD'
     *   /1X,'    10     DEVICE EXCP GRAPH FOR 8-5 PERIOD'
     *   /1X,'    11     HASP LOCAL SYSOUT STATISTICS'
     *   /1X,'    12     SYSTEM PROBLEM STATISTICS'
     *   /1X,'    13     OPERATOR ACTION STATISTICS'
     *   /1X,'    14     MONTHLY SYSTEM PROBLEM SUMMARY'
     *   /1X,'    15     MONTHLY OPERATOR ACTION SUMMARY'
     *   /1X,'    16     SYSTEM RESOURCE MANAGEMENT REPORT'
     *)
  285 FORMAT(
     *    1X,'    17     SYSTEM WORKLOAD REPORT'
     *   /1X,'    18     TOTAL COST BY COMPONENT'
     *   /1X,'    19     TOTAL ABENDS BY AREA AND TYPE'
     *)
  290 FORMAT(
     *   /1X,'SYSTEM RESOURCE REPORT FOR DAY ',I5
     *  //1X,'---TIME-- PCT --CHANNELS- '
     *                    ,'-----I/O RATES PER SECOND--------- '
     *   ,'STEP  AVG FILE   AVG           TOTAL  MIN. NO -TSO PD=1--'
     *   /1X,'STRT-STOP CPU C1 C2 C3 C4 '
     *                    ,'PAGE RCLM SWAP DISK TAPE HASP  MUX '
     *   ,'INIT  TSO ALLOC  MEM(K) TM DM SMF-REC SMF-REC TRANS-RESP.'
     *   /(1X,I4,I5,I4,4I3
     *    ,9I5,I6,I8,2I3,I8,I8,I6,F6.1
     *    )
     *)
  300 FORMAT(
     *   /1X,'SMF CPUIDS',3(6X,A4)
     *   /1X,'RECORDS   ',3I10
     *)
  310 FORMAT(
     *   /1X,'SYSTEM WORKLOAD REPORT FOR DAY ',I5
     *  //1X,'PERF.GP PERIOD AVG.RESP.   AVG.SRV. TOT-TRAN   TOT-SRV'
     */)
  320 FORMAT(
     *    1X,I7,I7,F10.2,F11.2,I9,I10
     *)
  330 FORMAT(
     *   /1X,'TOTAL COST BY COMPONENT FOR MONTH TO DATE'
     *  //1X,'COMPONENT     USAGE     RATE          COST($)   COST(%)'
     */)
  340 FORMAT(
     *    1X,A8,I11,I9,I14,I10
     *)
  350 FORMAT(
     *   /1X,'TOTAL ABENDS BY AREA AND TYPE'
     *  //1X,'AREA TYPE JOBS ABENDS    %'
     */)
  360 FORMAT(
     *    3X,A1,4X,A1,I6,I6,F8.2
     *)
C
C     MAINLINE
C
      PM  INIT
      PM  GETSMF
      DO  WHILE,(EOF.NE.TRUE)
          PM   SELECT
          PM   GETSMF
      OD
      CALL HHMMSS(STIME,HH,MM,SS)
      STIME=HH*100+MM
      CALL HHMMSS(ETIME,HH,MM,SS)
      ETIME=HH*100+MM
      IF  (TCOPY.EQ.1)
          REWIND FDAT
          WRITE(FDAT,220)
     *    SCOPY,STIME,ECOPY,ETIME
     *   ,TCOPY,TPROC,TDUMP,TCONLY
      FI
      IF  (TSAVE.EQ.1)
          WRITE(FSAVE)WAIT,NIPLS,NIP85,W85,W50
          WRITE(FSAVE)PC,TPC,PC85,PC50
          WRITE(FSAVE)NJ85,TJ85,LJ,NJ,HJ
          WRITE(FSAVE)CANJ,NCJ85,TCJ85,NPJ85,TPJ85
          WRITE(FSAVE)TXQ85,TX85,TPQ85,TP85
          WRITE(FSAVE)T28X,T15X,T36X,TA28X,DA28X
          WRITE(FSAVE)T0XX,TXXX,D28X,D15X,D36X
          WRITE(FSAVE)D0XX,DXXX,TPAGE,DPAGE
          WRITE(FSAVE)TPR,TPR85,LPR,LPR85,PPR
          WRITE(FSAVE)PPR85,TPU,TPU85,LPU,LPU85
          WRITE(FSAVE)TSO,TC4,TC5,TC6,LOST
          WRITE(FSAVE)TM,DM,AR,SA,SJ
          WRITE(FSAVE)SP,VON,VOFF
      FI
      PM  EOFRPT
      IF  (TPROC.EQ.0)
          PM   MTHRPT
      FI
      PM  SRMRPT
      PM  TCOSTS
      PM  TABEND
      STOP
C
C     INITIAL PROCESSING
C
      PENTRY INIT
      CALL TIMER(13,GDATE)
      CALL TIMER(12,TIME)
      RPTNO=1
      LINE=0
      PAGE=0
      PM  PRTCTL
      WRITE(FRPT,280)
      WRITE(FRPT,285)
      RPTNO=2
      LINE=0
      PAGE=0
      MAXCPU=1440*60*100
      READ(FCTL,2)YEAR,MDAYS,DOW
      SDATE=YEAR*1000+1
      EDATE=YEAR*1000+MDAYS(12)
      YEAR=YEAR*1000
      T7AM=7*60*60*100
      T8AM=8*60*60*100
      T5PM=17*60*60*100
      T24HR=24*60*60*100
      F24HR=T24HR
      T30MIN=30*60*100
      F30MIN=T30MIN
      READ(FDAT,220)
     *    SCOPY,STIME,ECOPY,ETIME
     *   ,TCOPY,TPROC,TDUMP,TCONLY
     *   ,TSAVE,TMAXR
      IF   (TMAXR.EQ.0)TMAXR=9999999
      HH=STIME/100
      MM=STIME-HH*100
      STIME=(HH*60+MM)*60*100
      HH=ETIME/100
      MM=ETIME-HH*100
      ETIME=(HH*60+MM)*60*100
      CALL CS306(HCOPY)
      IF  (TCOPY.EQ.1)
          IF   (HCOPY.GT.ECOPY)
               SCOPY=ECOPY
               ECOPY=HCOPY
               STIME=ETIME
               ETIME=0
          FI
      ELSE
          READ(FDAT,250)SELCDS
C
C         INITIALIZE INDEX ARRAY FOR ANY SELECTION CODES
C
          J=0
          DO  I=1,8
              IF  (SELCDS(I).NE.BLK)
                  J=J+1
                  SELIDX(J)=I
              FI
          OD
          IF  (SELCDS(9).NE.0)
              J=J+1
              SELIDX(J)=9
          FI
          MAXCDS=J
      FI
      IF  (TPROC.EQ.1)
          I=1
          DO   WHILE,(YEAR+MDAYS(I).LT.SCOPY)
               SDATE=YEAR+MDAYS(I)+1
               I=I+1
          OD
          EDATE=YEAR+MDAYS(I)
      FI
      TDOW=DOW
      DO  I=1,366
          DOWS(I)=TDOW
          TDOW=TDOW+1
          IF   (TDOW.GT.7)TDOW=1
      OD
C
C     INIT FOR SRM PERIOD TIMES
C
      HH=0
      MM=0
      SS=0
      DO  I=1,SRMMAX
          SRMSP(I)=HH*100+MM
          IF   (MM.EQ.0)
               MM=30
          ELSE
               HH=HH+1
               MM=0
          FI
          SRMEP(I)=HH*100+MM
          SRMST(I)=SS
          SS=SS+T30MIN
          SRMET(I)=SS
      OD
      PEXIT
C
C     GETSMF - GET NEXT SMF RECORD WITHIN CURRENT YEAR
C
      PENTRY GETSMF
      CALL SMFIO(RDIO,RTYPE,RTIME,RDATE)
      IF  (RDIO.EQ.REOF)EOF=TRUE
      TRCDS=TRCDS+1
      IF  (TRCDS.GT.TMAXR)EOF=TRUE
      PEXIT
C
C     SELECT SMF PROCESS ROUTINES
C
      PENTRY SELECT
      NTYPES(RTYPE+1)=NTYPES(RTYPE+1)+1
      CALL SMFIO(MOVE,RTYPE,10,4,0,CPUID)
      IF   (CPUID.EQ.CPUIDS(1))
           CPUID=1
      ELSEIF (CPUID.EQ.CPUIDS(2))
           CPUID=2
      ELSE
           CPUID=3
      FI
      CPUIDT(CPUID)=CPUIDT(CPUID)+1
      IF  (TCONLY.EQ.1)PEXIT
      IF  (((RDATE.GE.HCOPY).AND.(TCOPY.EQ.1))
     *    .OR.(RDATE.LT.SDATE)
     *    .OR.(RDATE.GT.EDATE)
     *   )
          PEXIT
      FI
      NUSED(RTYPE+1)=NUSED(RTYPE+1)+1
      DAY=RDATE-YEAR
      IF   (RDATE.EQ.SCOPY)
           I=RTIME/6000+1
           IF   ((I.GE.1).AND.(I.LE.1440))
                SMFA(I)=SMFA(I)+1
           FI
      FI
      DOCASE RTYPE
          CASE ELSE
            IF (RTYPE.EQ.0)
               PM   TYPE0
            ELSE
               IF   (RTYPE.EQ.240)
                    PM   TYP240
               FI
            FI
          ESAC
          CASE 1
            PM TYPE1
          ESAC
          CASE 4
            PM TYPE4
          ESAC
          CASE 5
            PM TYPE5
          ESAC
          CASE 6
            PM TYPE6
          ESAC
          CASE 7
            PM TYPE7
          ESAC
          CASE 9
            PM TYPE9
          ESAC
          CASE 10
            PM TYPE10
          ESAC
          CASE 11
            PM TYPE11
          ESAC
          CASE 12
            PM TYPE12
          ESAC
          CASE 19
            PM TYPE19
          ESAC
          CASE 21
            PM TYPE21
          ESAC
          CASE 26
            PM TYPE26
          ESAC
          CASE 30
            PM TYPE30
          ESAC
          CASE 31
            PM TYPE31
          ESAC
          CASE 34
            PM TYPE34
          ESAC
          CASE 35
            PM TYPE35
          ESAC
          CASE 40
            PM TYPE40
          ESAC
          CASE 70
            PM TYPE70
          ESAC
          CASE 71
            PM TYPE71
          ESAC
          CASE 72
            PM TYPE72
          ESAC
          CASE 73
            PM TYPE73
          ESAC
      ESACOD
      PEXIT
C
C     PRINT EOF REPORTS
C
      PENTRY EOFRPT
      PM  TYPRPT
      IF  (TCONLY.EQ.1)PEXIT
      PM  CPURPT
      PM  CLSRPT
      PM  DEVRPT
      PM  PRTRPT
      PM  PRBRPT
      PM  OPRRPT
      PEXIT
C
C     PRINT CONTROL
C
      PENTRY PRTCTL
      IF  (LINE.LE.0)
          LINE=MAXLN
          PAGE=PAGE+1
          WRITE(FRPT,1)RPTNO,GDATE,TIME,PAGE
      FI
      PEXIT
C
C     PLOT SUPPORT ROUTINES
C
      PENTRY PSCALE
      VT=100*V/PMAX+1
      IF  (VT.LT.1)VT=1
      IF  (VT.GT.101)VT=101
      PLOT(VT)=PCHAR(NV)
      PSAVE(NV)=VT
      PEXIT
      PENTRY PCLEAR
      DO  I=1,NPLOT
          PLOT(PSAVE(I))=BLANK
      OD
      PEXIT
C*********************************************************************
C
C     REPORT SECTION
C
C*********************************************************************
C
C     TYPE REPORT
C
      PENTRY TYPRPT
      RPTNO=3
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,10)
      DO  I=1,256
          IF   (NTYPES(I).NE.0)
               CTYPES=CTYPES+1
               LINE=LINE-1
               PM   PRTCTL
               V=I-1
               WRITE(FRPT,20)V,NTYPES(I),NUSED(I),NCOPYD(I)
               TTYPES=TTYPES+NTYPES(I)
               TUSED=TUSED+NUSED(I)
               TCOPYD=TCOPYD+NCOPYD(I)
          FI
      OD
      LINE=LINE-2
      PM  PRTCTL
      WRITE(FRPT,30)CTYPES,TTYPES,TUSED,TCOPYD
      WRITE(FRPT,270)
     *    SCOPY,STIME,ECOPY,ETIME
     *   ,SELCDS
      WRITE(FRPT,300)CPUIDS,CPUIDT
      PEXIT
C
C     CPU UTILIZATION REPORT
C
      PENTRY CPURPT
      RPTNO=4
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,40)(I,I=10,200,10)
      NPLOT=4
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (WAIT(DAY).NE.0)
               V=PC(DAY)
               PMAX=MAXCPU*2
               NV=1
               PM   PSCALE
               V=PC85(DAY)
               PMAX=9*60*60*100*2
               NV=2
               PM   PSCALE
               PMAX=MAXCPU*2
               V=PMAX-WAIT(DAY)
               NV=3
               PM   PSCALE
               PMAX=9*60*60*100*2
               V=PMAX-W85(DAY)
               NV=4
               PM   PSCALE
               WRITE(FRPT,50)SDATE,NIPLS(DAY),NIP85(DAY),PLOT
               PM   PCLEAR
          FI
      OD
      PEXIT
C
C     JOB CLASS REPORT
C
      PENTRY CLSRPT
      RPTNO=5
      PAGE=0
      LINE=0
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (NJ(DAY).NE.0)
               AJ85=TJ85(DAY)/(NJ85(DAY)*6000+1)
               ACJ85=TCJ85(DAY)/(NCJ85(DAY)*6000+1)
               AXQ=TXQ85(DAY)/(NJ85(DAY)*6000+1)
               AXEQ=TX85(DAY)/(NJ85(DAY)*6000+1)
               APQ=TPQ85(DAY)/(NJ85(DAY)*6000+1)
               APRT=TP85(DAY)/(NJ85(DAY)*6000+1)
               APJ85=TPJ85(DAY)/(NPJ85(DAY)*6000+1)
               NXJ85=NJ85(DAY)-NCJ85(DAY)-NPJ85(DAY)
               TXJ85=TJ85(DAY)-TCJ85(DAY)-TPJ85(DAY)
               AXJ85=TXJ85/(NXJ85*6000+1)
               LINE=LINE-1
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,60)
               WRITE(FRPT,70)
     *              SDATE,NJ(DAY),HJ(DAY),CANJ(DAY),LJ(DAY)
     *             ,NJ85(DAY),AJ85,AXQ,AXEQ,APQ,APRT
     *             ,NCJ85(DAY),ACJ85
     *             ,NPJ85(DAY),APJ85,NXJ85,AXJ85
          FI
      OD
      NUPL=FLOAT(NUPLAT)*100./FLOAT(NUPJOB+1)
      NUPA=FLOAT(NUPABN)*100./FLOAT(NUPJOB+1)
      WRITE(FRPT,75)
     *    NUPJOB,NUPLAT,NUPL,NUPABN,NUPA
      RPTNO=6
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,110)(I,I=10,200,10)
      PMAX=200
      NPLOT=8
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (NJ85(DAY).NE.0)
               NV=1
               V=TJ85(DAY)/(NJ85(DAY)*6000+1)
               PM   PSCALE
               NV=2
               V=TCJ85(DAY)/(NCJ85(DAY)*6000+1)
               PM   PSCALE
               NV=3
               V=TPJ85(DAY)/(NPJ85(DAY)*6000+1)
               PM   PSCALE
               NV=4
               NXJ85=NJ85(DAY)-NCJ85(DAY)-NPJ85(DAY)
               TXJ85=TJ85(DAY)-TCJ85(DAY)-TPJ85(DAY)
               V=TXJ85/(NXJ85*6000+1)
               PM   PSCALE
               NV=5
               V=TXQ85(DAY)/(NJ85(DAY)*6000+1)
               PM   PSCALE
               NV=6
               V=TX85(DAY)/(NJ85(DAY)*6000+1)
               PM   PSCALE
               NV=7
               V=TPQ85(DAY)/(NJ85(DAY)*6000+1)
               PM   PSCALE
               NV=8
               V=TP85(DAY)/(NJ85(DAY)*6000+1)
               PM   PSCALE
               WRITE(FRPT,120)SDATE,NJ85(DAY),PLOT
               PM   PCLEAR
          FI
      OD
      PEXIT
C
C     DEVICE UTILIZATION REPORT
C
      PENTRY DEVRPT
C
C     EXCP REPORT FOR 24 HR DAY
C
      RPTNO=7
      PAGE=0
      LINE=0
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (TXXX(DAY).NE.0)
               LINE=LINE-1
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,80)
               SPOOL=TXXX(DAY)-T0XX(DAY)-T28X(DAY)-T15X(DAY)-T36X(DAY)
               TAPMIN=TA28X(DAY)/6000
               WRITE(FRPT,90)
     *              SDATE,TXXX(DAY),T0XX(DAY),T28X(DAY),T15X(DAY)
     *             ,T36X(DAY),SPOOL
     *             ,TPAGE(DAY)
     *              ,TAPMIN
          FI
      OD
      RPTNO=8
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,130)(I,I=3,60,3)
      PMAX=60*24*60*60
      NPLOT=5
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (TXXX(DAY).NE.0)
               NV=1
               V=T28X(DAY)
               PM   PSCALE
               NV=2
               V=T15X(DAY)
               PM   PSCALE
               NV=3
               V=T36X(DAY)
               PM   PSCALE
               NV=4
               V=TXXX(DAY)-T0XX(DAY)-T28X(DAY)-T15X(DAY)-T36X(DAY)
               PM   PSCALE
               NV=5
               V=TPAGE(DAY)
               PM   PSCALE
               WRITE(FRPT,140)SDATE,NIPLS(DAY),PLOT
               PM   PCLEAR
          FI
      OD
C
C     EXCP REPORT FOR 8-5 DAY SHIFT
C
      RPTNO=9
      PAGE=0
      LINE=0
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (DXXX(DAY).NE.0)
               LINE=LINE-1
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,100)
               SPOOL=DXXX(DAY)-D0XX(DAY)-D28X(DAY)-D15X(DAY)-D36X(DAY)
               TAPMIN=DA28X(DAY)/6000
               WRITE(FRPT,90)
     *              SDATE,DXXX(DAY),D0XX(DAY),D28X(DAY),D15X(DAY)
     *             ,D36X(DAY),SPOOL
     *             ,DPAGE(DAY)
     *             ,TAPMIN
          FI
      OD
      RPTNO=10
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,150)(I,I=3,60,3)
      PMAX=60*9*60*60
      NPLOT=5
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (DXXX(DAY).NE.0)
               NV=1
               V=D28X(DAY)
               PM   PSCALE
               NV=2
               V=D15X(DAY)
               PM   PSCALE
               NV=3
               V=D36X(DAY)
               PM   PSCALE
               NV=4
               V=DXXX(DAY)-D0XX(DAY)-D28X(DAY)-D15X(DAY)-D36X(DAY)
               PM   PSCALE
               NV=5
               V=DPAGE(DAY)
               PM   PSCALE
               WRITE(FRPT,140)SDATE,NIPLS(DAY),PLOT
               PM   PCLEAR
          FI
      OD
      PEXIT
C
C     HASP LOCAL SYSOUT REPORT
C
      PENTRY PRTRPT
      RPTNO=11
      PAGE=0
      LINE=0
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (SA(DAY).NE.0)
               LINE=LINE-1
C**********
C              UNTIL T6 TIMING FIXED, TIME FOR PRINT AND PUNCH ******
C              IS ESTIMATED USING 1100 LPM AND 300 CPM ***************
C**********
               MTPR=LPR(DAY)/1100
               MTPU=LPU(DAY)/300
               MTPR85=LPR85(DAY)/1100
               MTPU85=LPU85(DAY)/300
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,160)
               WRITE(FRPT,170)
     *              SDATE,MTPR,LPR(DAY),PPR(DAY),MTPU,LPU(DAY)
     *             ,MTPR85,LPR85(DAY),PPR85(DAY),MTPU85,LPU85(DAY)
               TPRPU(01)=TPRPU(01)+1
               TPRPU(02)=TPRPU(02)+MTPR
               TPRPU(03)=TPRPU(03)+LPR(DAY)
               TPRPU(04)=TPRPU(04)+PPR(DAY)
               TPRPU(05)=TPRPU(05)+MTPU
               TPRPU(06)=TPRPU(06)+LPU(DAY)
               TPRPU(07)=TPRPU(07)+MTPR85
               TPRPU(08)=TPRPU(08)+LPR85(DAY)
               TPRPU(09)=TPRPU(09)+PPR85(DAY)
               TPRPU(10)=TPRPU(10)+MTPU85
               TPRPU(11)=TPRPU(11)+LPU85(DAY)
          FI
      OD
      WRITE(FRPT,170)
      WRITE(FRPT,170)TPRPU
      PEXIT
C
C     SYSTEM PROBLEM ANALYSIS
C
      PENTRY PRBRPT
      RPTNO=12
      PAGE=0
      LINE=0
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (NJ(DAY).NE.0)
               LINE=LINE-1
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,180)
               WRITE(FRPT,190)
     *              SDATE,NIPLS(DAY),LOST(DAY),NIP85(DAY)
     *             ,TSO(DAY),TC4(DAY),TC5(DAY),TC6(DAY)
          FI
      OD
      CALL MSUM(MDAYS,NIPLS)
      CALL MSUM(MDAYS,LOST)
      CALL MSUM(MDAYS,NIP85)
      CALL MSUM(MDAYS,TSO)
      CALL MSUM(MDAYS,TC4)
      CALL MSUM(MDAYS,TC5)
      CALL MSUM(MDAYS,TC6)
      I=13
      WRITE(FRPT,240)
     *    NIPLS(I),LOST(I),NIP85(I)
     *   ,TSO(I),TC4(I),TC5(I),TC6(I)
      PEXIT
C
C     OPERATOR ACTION ANALYSIS
C
      PENTRY OPRRPT
      RPTNO=13
      PAGE=0
      LINE=0
      DO  DAY=1,366
          SDATE=YEAR+DAY
          IF   (NJ(DAY).NE.0)
               LINE=LINE-1
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,200)
               WRITE(FRPT,210)
     *              SDATE,NJ(DAY),HJ(DAY),CANJ(DAY)
     *             ,TM(DAY),DM(DAY),AR(DAY)
     *             ,VON(DAY),VOFF(DAY)
     *             ,SA(DAY),SJ(DAY),SP(DAY)
          FI
      OD
      CALL MSUM(MDAYS,NJ)
      CALL MSUM(MDAYS,HJ)
      CALL MSUM(MDAYS,CANJ)
      CALL MSUM(MDAYS,TM)
      CALL MSUM(MDAYS,DM)
      CALL MSUM(MDAYS,AR)
      CALL MSUM(MDAYS,VON)
      CALL MSUM(MDAYS,VOFF)
      CALL MSUM(MDAYS,SA)
      CALL MSUM(MDAYS,SJ)
      CALL MSUM(MDAYS,SP)
      I=13
      WRITE(FRPT,240)
     *    NJ(I),HJ(I),CANJ(I)
     *   ,TM(I),DM(I),AR(I)
     *   ,VON(I),VOFF(I)
     *   ,SA(I),SJ(I),SP(I)
      PEXIT
C
C     MONTHLY REPORTS
C
      PENTRY MTHRPT
C
C     MONTHLY PROBLEM ANALYSIS
C
      RPTNO=14
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,180)
      DO  I=1,12
          SDATE=YEAR/10+I
          WRITE(FRPT,190)SDATE,
     *    NIPLS(I),LOST(I),NIP85(I)
     *   ,TSO(I),TC4(I),TC5(I),TC6(I)
      OD
      I=13
      WRITE(FRPT,240)
     *    NIPLS(I),LOST(I),NIP85(I)
     *   ,TSO(I),TC4(I),TC5(I),TC6(I)
C
C     MONTHLY OPERATOR ANALYSIS
C
      RPTNO=15
      PAGE=0
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,200)
      DO  I=1,12
          SDATE=YEAR/10+I
          WRITE(FRPT,210)SDATE,
     *    NJ(I),HJ(I),CANJ(I)
     *   ,TM(I),DM(I),AR(I)
     *   ,VON(I),VOFF(I)
     *   ,SA(I),SJ(I),SP(I)
      OD
      I=13
      WRITE(FRPT,240)
     *    NJ(I),HJ(I),CANJ(I)
     *   ,TM(I),DM(I),AR(I)
     *   ,VON(I),VOFF(I)
     *   ,SA(I),SJ(I),SP(I)
      PEXIT
C
C     SYSTEM RESOURCE REPORT FOR A SINGLE DAY
C
      PENTRY SRMRPT
      RPTNO=16
      PAGE=0
      LINE=0
      PM  PRTCTL
      K=1
      DO  I=1,SRMMAX
          L=0
          M=0
          DO  J=1,30
              IF   (SMFA(K).EQ.0)M=M+1
              L=L+SMFA(K)
              K=K+1
          OD
          SRMSMF(I)=L
          SRMMNA(I)=M
          SRMCPU(I)=FLOAT(SRMCPU(I))*100./F30MIN+0.5
          SRMPAG(I)=SRMPAG(I)/1800
          SRMRCM(I)=SRMRCM(I)/1800
          SRMSWP(I)=SRMSWP(I)/1800
          SRMDCP(I)=SRMDCP(I)/1800
          SRMTCP(I)=SRMTCP(I)/1800
          SRMHCP(I)=SRMHCP(I)/1800
          SRMXCP(I)=SRMXCP(I)/1800
          SRMTSO(I)=(SRMTSO(I)+T30MIN/2)/T30MIN
          SRMMKM(I)=SRMMKM(I)/30
          IF   (SRMT1T(I).NE.0)
               AVGTT=FLOAT(SRMT1E(I))/FLOAT(SRMT1T(I))
               AVGTT=AVGTT*0.001024
          ELSE
               AVGTT=0.
          FI
          SRMT1R(I)=AVGTT
      OD
      WRITE(FRPT,290)
     *    SCOPY
     *   ,(SRMSP(I),SRMEP(I)
     *   ,SRMCPU(I),(SRMCHA(J,I),J=LCHAN,HCHAN)
     *   ,SRMPAG(I),SRMRCM(I),SRMSWP(I)
     *   ,SRMDCP(I),SRMTCP(I),SRMHCP(I),SRMXCP(I)
     *   ,SRMINT(I),SRMTSO(I),SRMALC(I),SRMMKM(I)
     *   ,SRMTM(I),SRMDM(I),SRMSMF(I),SRMMNA(I)
     *   ,SRMT1T(I),SRMT1R(I)
     *   ,I=1,SRMMAX)
C
C     SYSTEM WORK LOAD REPORT
C
      RPTNO=17
      PAGE=0
      LINE=0
      PM   PRTCTL
      WRITE(FRPT,310)SCOPY
      DO   I=1,MAXPG
           DO   J=1,MAXPD
                IF   (PGTT(I,J).NE.0)
                     AVGTT=FLOAT(PGET(I,J))/FLOAT(PGTT(I,J))
                     AVGTT=AVGTT*0.001024
                     AVGSR=FLOAT(PGSR(I,J))/FLOAT(PGTT(I,J))
                     WRITE(FRPT,320)I,J,AVGTT,AVGSR,PGTT(I,J),PGSR(I,J)
                FI
           OD
      OD
      PEXIT
C
C     R18 - TOTAL COSTS BY COMPONENT REPORT
C
      PENTRY TCOSTS
      RPTNO=18
      PAGE=0
      LINE=0
      PM   PRTCTL
      WRITE(FRPT,330)
      TOTDTM=TOTTAL
      DO   I=1,15
           RCPTAB(I)=TOTTAB(I)
           CALL CS305(5,RCPTAB)
           CSTTAB(I)=RCPCST
           CSTGTL=CSTGTL+RCPCST
           RCPTAB(I)=0
      OD
      CALL CS305(6,RCPTAB)
      RATTAB(01)=RCPTAB(03)
      RATTAB(02)=RCPTAB(04)
      RATTAB(03)=RCPTAB(05)
      RATTAB(04)=RCPTAB(06)
      RATTAB(05)=RCPTAB(07)
      RATTAB(06)=RCPTAB(08)
      RATTAB(07)=RCPTAB(09)
      RATTAB(08)=RCPTAB(10)
      RATTAB(12)=RCPTAB(12)
      RATTAB(15)=RCPTAB(14)
      CSTTAB(2)=TOTTAB(2)*RATTAB(2)/10
      CSTTAB(12)=TOTTAB(12)*RATTAB(12)
      CSTGTL=CSTGTL+CSTTAB(2)+CSTTAB(12)
      DO   I=1,15
           TOTPCT(I)=CSTTAB(I)*100/(CSTGTL+1)
      OD
      TOTTAB(1)=TOTTAB(1)/6000
      TOTPCT(16)=100
      DO   I=1,16
           CSTTAB(I)=CSTTAB(I)/100
           WRITE(FRPT,340)
     *     TOTDSC(I),TOTTAB(I),RATTAB(I),CSTTAB(I),TOTPCT(I)
      OD
      PEXIT
C
C     R19 - TOTAL ABENDS BY AREA AND TYPE
C
      PENTRY TABEND
      RPTNO=19
      PAGE=0
      LINE=0
      TOTATJ=0
      TOTATA=0
      DO   I=1,TABAM
           DO   J=1,TABTM
                IF   (TABATT(I,J).GT.0)
                     LINE=LINE-1
                     PM   PRTCTL
                     IF   (LINE.EQ.MAXLN)WRITE(FRPT,350)
                     TABPCT=FLOAT(TABATA(I,J))*100./FLOAT(TABATT(I,J))
                     TOTATJ=TOTATJ+TABATT(I,J)
                     TOTATA=TOTATA+TABATA(I,J)
                     WRITE(FRPT,360)TABA(I),TABT(J),TABATT(I,J)
     *                 ,TABATA(I,J),TABPCT
                FI
           OD
      OD
      TABPCT=FLOAT(TOTATA)*100./FLOAT(TOTATJ+1)
      WRITE(FRPT,360)
      WRITE(FRPT,360)NBLK,NBLK,TOTATJ,TOTATA,TABPCT
      PEXIT
C*********************************************************************
C
C     PROCESS SECTION
C
C*********************************************************************
C
C     PROCESS TYPE 0 - IPL RECORDS PG 116
C
      PENTRY TYPE0
      T1TIME=RTIME
      T1DATE=RDATE
      NIPLS(DAY)=NIPLS(DAY)+1
      IF  (DOWS(DAY).GT.5)PEXIT
      IF  ((RTIME.GE.T8AM).AND.(RTIME.LE.T5PM))NIP85(DAY)=NIP85(DAY)+1
      PEXIT
C
C     PROCESS TYPE 1 WAIT RECORDS  PG 117
C
      PENTRY TYPE1
      PM  SWAITS
      PEXIT
C
C     PROCESS INFO FROM TYPE 1 AND TYPE 12 WAIT INFO
C
      PENTRY SWAITS
      SRMT1=T1TIME
      SRMD1=T1DATE
      SRMT2=RTIME
      SRMD2=RDATE
      T1TIME=RTIME
      T1DATE=RDATE
      IF  (SRMD1.GT.SRMD2)PEXIT
      IF  ((SRMD1.EQ.SRMD2).AND.(SRMT1.GE.SRMT2))PEXIT
      CALL SMFIO(MOVE,RTYPE,14,4,0,TWAIT,
     *                      22,4,0,PGIN,
     *                      26,4,0,PGOUT,
     *                      30,4,0,RCLAIM,
     *                      38,4,0,SWPIN,
     *                      42,4,0,SWPOUT)
      TPT=(SRMD2-SRMD1)*F24HR+(SRMT2-SRMT1)
      DAY1=SRMD1-YEAR
      DAY2=SRMD2-YEAR
      DO  DAY=DAY1,DAY2
          IF   (DAY.EQ.DAY1)
               PT1=SRMT1
          ELSE
               PT1=0
          FI
          IF   (DAY.EQ.DAY2)
               PT2=SRMT2
          ELSE
               PT2=T24HR
          FI
          CPT=PT2-PT1
          CPF=CPT/TPT
          TPAGE(DAY)=TPAGE(DAY)+CPF*(PGIN+PGOUT)
          WAIT(DAY)=WAIT(DAY)+CPF*TWAIT
          IF   (PT1.GE.T8AM)
               IF   (PT1.GE.T5PM)
                    W50(DAY)=W50(DAY)+CPF*TWAIT
               ELSE
                    IF   (PT2.GT.T5PM)
                         CPT=PT2-T5PM
                         CPF=CPT/TPT
                         W50(DAY)=W50(DAY)+CPF*TWAIT
                         CPT=T5PM-PT1
                         CPF=CPT/TPT
                    FI
                    DPAGE(DAY)=DPAGE(DAY)+CPF*(PGIN+PGOUT)
                    W85(DAY)=W85(DAY)+CPF*TWAIT
               FI
          ELSEIF (PT2.GT.T8AM)
               IF   (PT2.GT.T5PM)
                    CPT=PT2-T5PM
                    CPF=CPT/TPT
                    W50(DAY)=W50(DAY)+CPF*TWAIT
                    CPT=T5PM-T8AM
               ELSE
                    CPT=PT2-T8AM
               FI
               CPF=CPT/TPT
               DPAGE(DAY)=DPAGE(DAY)+CPF*(PGIN+PGOUT)
               W85(DAY)=W85(DAY)+CPF*TWAIT
          FI
      OD
C
C     CALCULATE SRM 30 MINUTE CPU, PAGE, AND SWAP INFO FOR DAY
C
      IF  ((SRMD1.GT.SCOPY).OR.(SRMD2.LT.SCOPY))PEXIT
      PM  CSLOTS
      DO  NSLOT=NSLOT1,NSLOT2
          PM   CALCPF
          SRMCPU(NSLOT)=SRMCPU(NSLOT)+CPF*(TPT-TWAIT)
          SRMPAG(NSLOT)=SRMPAG(NSLOT)+CPF*(PGIN+PGOUT)
          SRMRCM(NSLOT)=SRMRCM(NSLOT)+CPF*RCLAIM
          SRMSWP(NSLOT)=SRMSWP(NSLOT)+CPF*(SWPIN+SWPOUT)
      OD
      PEXIT
C
C     CSLOTS - CALCUALTE FIRST AND LAST SLOT BASED ON SRMT1-T2
C
      PENTRY CSLOTS
      IF  (SRMD1.LT.SCOPY)SRMT1=0
      IF  (SRMD2.GT.SCOPY)SRMT2=T24HR
      CALL HHMMSS(SRMT1,HH,MM,SS)
      NSLOT1=2*HH+1
      IF  (MM.GE.30)NSLOT1=NSLOT1+1
      CALL HHMMSS(SRMT2,HH,MM,SS)
      NSLOT2=2*HH+1
      IF  (MM.GE.30)NSLOT2=NSLOT2+1
      IF  (NSLOT2.GT.SRMMAX)NSLOT2=SRMMAX
      PEXIT
C
C     CALCPF - CALCULATE REAL SCALE FACTOR FOR CURRENT PERIOD
C
      PENTRY CALCPF
      IF  (NSLOT.EQ.NSLOT1)
          PT1=SRMT1
      ELSE
          PT1=SRMST(NSLOT)
      FI
      IF  (NSLOT.EQ.NSLOT2)
          PT2=SRMT2
      ELSE
          PT2=SRMET(NSLOT)
      FI
      CPT=PT2-PT1
      CPF=CPT/TPT
      PEXIT
C
C     PROCESS TYPE 4 STEP RECORDS PG 80
C
      PENTRY TYPE4
      L=0
      CALL SMFIO(MOVE,RTYPE,102,2,2,L)
      STEPC=0
      STEPCR=0
      STEPM=0
      SYSTM=0
      CALL SMFIO(MOVE,RTYPE,103+L,3,1,STEPC,
     *                      95,3,1,STEPCR,
     *                      74,2,2,STEPM,
     *                      72,2,2,SYSTM,
     *                      14,2,0,JOBID,
     *                      20,1,0,NUPJA,
     *                      21,1,0,NUPJT,
     *                      39,4,0,SST,
     *                      43,4,0,SSD,
     *                      83,1,3,NUPSTI)
      TOTCPU=TOTCPU+STEPC+STEPCR
      TOTMKM=TOTMKM+(STEPM+SYSTM)*(STEPC+STEPCR)/6000
      NUPSTI=NUPSTI/2
      IF   (NUPSTI/2*2.NE.NUPSTI)
           PM   TABADA
           IF   ((NUPJT.EQ.P).AND.(NUPJA.NE.U))NUPABN=NUPABN+1
      FI
      CALL CVTPB(SSD)
      ATIME=RTIME-SST
      IF  (ATIME.LT.0)ATIME=ATIME+T24HR
      DSHFT=FALSE
      IF (JOBID.EQ.TC)
C
C         COLLECT INFO ON TP SYSTEM PROBLEMS DURING 8-5
C
          CALL SMFIO(MOVE,RTYPE,16,3,0,JOBNO)
          IF   ((JOBNO.EQ.JN4)
     *          .OR.(JOBNO.EQ.JN5)
     *          .OR.(JOBNO.EQ.JN6)
     *         )
               TPC(DAY)=TPC(DAY)+STEPC+STEPCR
               IF  ((SST.GE.T8AM)
     *              .AND.(SST.LE.T5PM)
     *              .AND.(SSD.GE.SDATE)
     *              .AND.(SSD.LE.EDATE)
     *             )
                    SSD=SSD-YEAR
                    CALL SMFIO(MOVE,RTYPE,38,1,3,STEPNO)
                    IF  ((DOWS(SSD).LE.5).AND.(STEPNO.EQ.1))
                    IF   (JOBNO.EQ.JN4)TC4(SSD)=TC4(SSD)+1
                    IF   (JOBNO.EQ.JN5)TC5(SSD)=TC5(SSD)+1
                    IF   (JOBNO.EQ.JN6)TC6(SSD)=TC6(SSD)+1
                    FI
               FI
          FI
      ELSE
          PC(DAY)=PC(DAY)+STEPC+STEPCR
          IF(RTIME.GT.T8AM)
               IF   (RTIME.GT.T5PM)
                    PC50(DAY)=PC50(DAY)+STEPC+STEPCR
               ELSE
                    DSHFT=TRUE
                    PC85(DAY)=PC85(DAY)+STEPC+STEPCR
               FI
          FI
      FI
      PM  PDEV
      PM  SRMCPS
      PEXIT
C
C     PROCESS DEVICE ENTRIES FOR TYPE 4 AND 34 RECORDS
C
      PENTRY PDEV
      L=0
      IF  (RTYPE.NE.40)
          CALL SMFIO(MOVE,RTYPE,102,2,2,L)
          M=104
          N=102+L
      ELSE
          CALL SMFIO(MOVE,RTYPE,60,2,2,L)
          M=62
          N=60+L
      FI
      TDCP=0
      TTCP=0
      THCP=0
      TXCP=0
      DO  WHILE,(M.LT.N)
          CALL SMFIO(MOVE,RTYPE,M,4,0,UCB,
     *                          M+4,4,0,EXCPS)
          CALL CS302(UCB,CHAN,CU,UNIT)
          TXXX(DAY)=TXXX(DAY)+EXCPS
          IF   (DSHFT.EQ.TRUE)DXXX(DAY)=DXXX(DAY)+EXCPS
          DOCASE CHAN
               CASE 1
                    IF   ((CU.EQ.2).AND.(UNIT.EQ.7))
                         TOTSCP=TOTSCP+EXCPS
                    FI
                    TXCP=TXCP+EXCPS
                    T0XX(DAY)=T0XX(DAY)+EXCPS
                    IF   (DSHFT.EQ.TRUE)D0XX(DAY)=D0XX(DAY)+EXCPS
               ESAC
               CASE 2
                    IF   (CU.EQ.6)
                         TOTDCP=TOTDCP+EXCPS
                         TDCP=TDCP+EXCPS
                         T15X(DAY)=T15X(DAY)+EXCPS
                         IF   (DSHFT.EQ.TRUE)D15X(DAY)=D15X(DAY)+EXCPS
                    FI
               ESAC
               CASE 3
                    IF   (CU.EQ.9)
                         TOTTCP=TOTTCP+EXCPS
                         TOTTAL=TOTTAL+1
                         TTCP=TTCP+EXCPS
                         T28X(DAY)=T28X(DAY)+EXCPS
                         TA28X(DAY)=TA28X(DAY)+ATIME
                         IF   (DSHFT.EQ.TRUE)
                              D28X(DAY)=D28X(DAY)+EXCPS
                              DA28X(DAY)=DA28X(DAY)+ATIME
                         FI
                    FI
               ESAC
               CASE 4
                    IF   (CU.EQ.7)
                         TOTDCP=TOTDCP+EXCPS
                         TDCP=TDCP+EXCPS
                         T36X(DAY)=T36X(DAY)+EXCPS
                         IF   (DSHFT.EQ.TRUE)D36X(DAY)=D36X(DAY)+EXCPS
                    FI
               ESAC
               CASE 5
                    TOTDCP=TOTDCP+EXCPS
                    TDCP=TDCP+EXCPS
               ESAC
          ESACOD
          M=M+8
      OD
      PEXIT
C
C     CALCULATE I/O DATA FOR SRM REPORT
C
      PENTRY SRMCPS
      IF  (RTYPE.EQ.4)
          CALL SMFIO(MOVE,RTYPE,39,4,0,SRMT1,
     *                          43,4,0,SRMD1)
      ELSE
          CALL SMFIO(MOVE,RTYPE,22,4,0,SRMT1,
     *                          26,4,0,SRMD1)
      FI
      CALL CVTPB(SRMD1)
      SRMT2=RTIME
      SRMD2=RDATE
      IF  ((SRMD1.GT.SCOPY).OR.(SRMD2.LT.SCOPY))PEXIT
      TPT=(SRMD2-SRMD1)*F24HR+(SRMT2-SRMT1)
      IF  (RTYPE.NE.40)
          CALL SMFIO(MOVE,RTYPE,74,2,2,MEMORY,
     *                          54,8,0,PGM)
      ELSE
          MEMORY=0
          PGM=BLK8
      FI
      IF  ((RTYPE.EQ.34).AND.(PGM.NE.TSOTMP))MEMORY=0
      IF(MEMORY.LT.0)MEMORY=0
      TMKM=MEMORY*TPT/6000
      PM  CSLOTS
      DO  NSLOT=NSLOT1,NSLOT2
          PM  CALCPF
          SRMDCP(NSLOT)=SRMDCP(NSLOT)+CPF*TDCP
          SRMTCP(NSLOT)=SRMTCP(NSLOT)+CPF*TTCP
          SRMHCP(NSLOT)=SRMHCP(NSLOT)+CPF*THCP
          SRMXCP(NSLOT)=SRMXCP(NSLOT)+CPF*TXCP
          IF   (PGM.EQ.TSOTMP)SRMTSO(NSLOT)=SRMTSO(NSLOT)+(PT2-PT1)
          SRMMKM(NSLOT)=SRMMKM(NSLOT)+CPF*TMKM
      OD
      IF  (RTYPE.EQ.4)
          SRMINT(NSLOT1)=SRMINT(NSLOT1)+1
      FI
      PEXIT
C
C     PROCESS TYPE 5 JOB RECORDS PG 83
C
      PENTRY TYPE5
      JOBRDC=0
      CALL SMFIO(MOVE,RTYPE,47,4,0,JOBRCP,
     *                      69,1,3,JOBRDC)
      IF   (JOBRDC.NE.0)
           TOTRCP=TOTRCP+JOBRCP
      ELSE
           TOTICP=TOTICP+JOBRCP
      FI
      PEXIT
C
C     PROCESS TYPE 6 HASP SYSOUT RECORDS PG 86
C
      PENTRY TYPE6
      IOSTAT=0
      CALL SMFIO(MOVE,RTYPE,51,1,3,IOSTAT,14,8,0,JOB)
      IF  (IOSTAT.NE.0)
          PEXIT
      FI
      CALL SMFIO(MOVE,RTYPE,39,4,0,SST,
     *                      43,4,0,SSD,
     *                      02,4,0,SET,
     *                      06,4,0,SED,
     *                      68,2,0,LODNM,
     *                      47,4,0,SREC)
      IF  (LODNM.EQ.PR)
          CALL SMFIO(MOVE,RTYPE,84,4,0,SPAGE)
          LPR(DAY)=LPR(DAY)+SREC
          TOTLCP=TOTLCP+SREC
          PPR(DAY)=PPR(DAY)+SPAGE
          IF   ((SED.EQ.SSD)
     *         .AND.((SST.GE.T8AM).AND.(SET.LE.T5PM))
     *         )
               LPR85(DAY)=LPR85(DAY)+SREC
               PPR85(DAY)=PPR85(DAY)+SPAGE
          FI
      ELSE
          TOTPCP=TOTPCP+SREC
          LPU(DAY)=LPU(DAY)+SREC
          IF   ((SED.EQ.SSD)
     *          .AND.(SST.GE.T8AM)
     *          .AND.(SET.LE.T5PM))
               LPU85(DAY)=LPU85(DAY)+SREC
          FI
      FI
      CALL SMFIO(MOVE,RTYPE,38,1,0,SYSOUT)
      IF  (SYSOUT.EQ.SYSJ)
          SJ(DAY)=SJ(DAY)+1
      ELSE
          IF   (SYSOUT.EQ.SYSP)
               SP(DAY)=SP(DAY)+1
          ELSE
               SA(DAY)=SA(DAY)+1
          FI
      FI
      PEXIT
C
C     PROCESS TYPE 7 - DATA LOST - PG 122
C
      PENTRY TYPE7
      CALL SMFIO(MOVE,RTYPE,14,2,2,NLOST)
      LOST(DAY)=LOST(DAY)+NLOST
      PEXIT
C
C     PROCESS TYPE 9 - VARY ONLINE - PG 124
C
      PENTRY TYPE9
      VON(DAY)=VON(DAY)+1
      PEXIT
C
C     PROCESS TYPE 10 - ALLOCATION RECOVERY - PG 125
C
      PENTRY TYPE10
      AR(DAY)=AR(DAY)+1
      PEXIT
C
C     PROCESS TYPE 11 - VARY OFFLINE - PG 126
C
      PENTRY TYPE11
      VOFF(DAY)=VOFF(DAY)+1
      PEXIT
C
C     PROCESS TYPE 12 WAIT RECORDS DUE TO Z OR SWITCH PG 119
C
      PENTRY TYPE12
      PM  SWAITS
      PEXIT
C
C     PROCESS TYPE 19 - DASD VOLUMES - PG 112
C
      PENTRY TYPE19
      IF   (RDATE.EQ.SCOPY)
           CALL HHMMSS(RTIME,HH,MM,SS)
           NSLOT=2*HH+1
           IF   (MM.GT.30)NSLOT=NSLOT+1
           SRMDM(NSLOT)=SRMDM(NSLOT)+1
      FI
      DM(DAY)=DM(DAY)+1
      PEXIT
C
C     PROCESS TYPE 21 - TAPE VOLUMES - PG 113
C
      PENTRY TYPE21
      IF   (RDATE.EQ.SCOPY)
           CALL HHMMSS(RTIME,HH,MM,SS)
           NSLOT=2*HH+1
           IF   (MM.GT.30)NSLOT=NSLOT+1
           SRMTM(NSLOT)=SRMTM(NSLOT)+1
      FI
      TM(DAY)=TM(DAY)+1
      PEXIT
C
C     PROCESS TYPE 26 JOB PURGE RECORDS PG 88 OR 124 MVS
C
      PENTRY TYPE26
      IF   (CPUID.EQ.1)
           CALL SMFIO(MOVE,RTYPE,14,2,0,JOBID,
     *                           20,1,0,NUPJA,
     *                           21,1,0,NUPJT,
     *                           46+5,1,3,JOBTYP,
     *                           46+39,1,0,JCLASS,
     *                           22,4,0,RST,
     *                           26,4,0,RSD,
     *                           132+28,4,0,XST,
     *                           132+36,4,0,XET,
     *                           132+44,4,0,PST,
     *                           132+52,4,0,PET,
     *                           132+56,4,0,PED)
      ELSEIF (CPUID.EQ.2)
           CALL SMFIO(MOVE,RTYPE,14,2,0,JOBID,
     *                           20,1,0,NUPJA,
     *                           21,1,0,NUPJT,
     *                           50,1,3,JOBFL,
     *                           51,1,3,JOBTYP,
     *                           85,1,0,JCLASS,
     *                           22,4,0,RST,
     *                           26,4,0,RSD,
     *                        16+168,4,0,XST,
     *                        16+176,4,0,XET,
     *                        16+184,4,0,PST,
     *                        16+192,4,0,PET,
     *                        16+196,4,0,PED)
           JOBFL=JOBFL/64
           IF   (JOBFL/2*2.NE.JOBFL)PEXIT
      ELSE
          PEXIT
      FI
C
C     COUNT ALL JOBS
C
      NJ(DAY)=NJ(DAY)+1
      IF   ((NUPJT.EQ.P).AND.(NUPJA.NE.U))NUPJOB=NUPJOB+1
      PM   TABADT
C
C     COUNT CANCELLED OR FLUSHED JOBS
C
      IF  ((JOBTYP/2*2.NE.JOBTYP)
     *     .OR.(XST.EQ.0))
          CANJ(DAY)=CANJ(DAY)+1
          PEXIT
      FI
C
C     COUNT HELD JOBS
C
      V=JOBTYP/32
      IF  (V/2*2.NE.V)
          HJ(DAY)=HJ(DAY)+1
          PEXIT
      FI
C
C     COUNT LATE JOBS (ENTERED BEFORE 7 AM AND OUT AFTER 8 AM)
C
      IF  ((PET.GE.T8AM)
     *     .AND.((RSD.LT.PED).OR.(RST.LT.T7AM))
     *    )
          LJ(DAY)=LJ(DAY)+1
          IF   ((NUPJT.EQ.P).AND.(NUPJA.NE.U))NUPLAT=NUPLAT+1
          PEXIT
      FI
C
C     ACCUMULATE 8-5 AVERAGES BY CLASS
C
      IF  (RSD.NE.PED)PEXIT
      IF  ((RST.GE.T8AM).AND.(PET.LE.T5PM))
          NJ85(DAY)=NJ85(DAY)+1
          TJ85(DAY)=TJ85(DAY)+(XET-RST)
          TXQ85(DAY)=TXQ85(DAY)+(XST-RST)
          TX85(DAY)=TX85(DAY)+(XET-XST)
          TPQ85(DAY)=TPQ85(DAY)+(PST-XET)
          TP85(DAY)=TP85(DAY)+(PET-PST)
          IF   (JCLASS.EQ.JC)
               NCJ85(DAY)=NCJ85(DAY)+1
               TCJ85(DAY)=TCJ85(DAY)+(XET-RST)
          ELSE
               IF   (JCLASS.EQ.JP)
                    NPJ85(DAY)=NPJ85(DAY)+1
                    TPJ85(DAY)=TPJ85(DAY)+(XET-RST)
               FI
          FI
      FI
      PEXIT
C
C     PROCESS TYPE 30 - TSO START - PG 129
C
      PENTRY TYPE30
      IF  (DOWS(DAY).GT.5)PEXIT
      IF  (RTIME.LT.T8AM)PEXIT
      IF  (RTIME.GT.T5PM)PEXIT
      TSO(DAY)=TSO(DAY)+1
      PEXIT
C
C     PROCESS TYPE 31 - TIOC INIT. MVS PG 131
C
      PENTRY TYPE31
      IF  (DOWS(DAY).GT.5)PEXIT
      IF  (RTIME.LT.T8AM)PEXIT
      IF  (RTIME.GT.T5PM)PEXIT
      TSO(DAY)=TSO(DAY)+1
      PEXIT
C
C     PROCESS TYPE 34 TSO SESSION PG 90
C
      PENTRY TYPE34
      L=0
      CALL SMFIO(MOVE,RTYPE,102,2,2,L)
      STEPC=0
      STEPCR=0
      STEPM=0
      SYSTM=0
      CALL SMFIO(MOVE,RTYPE,103+L,3,1,STEPC,
     *                      95,3,1,STEPCR,
     *                      74,2,2,STEPM,
     *                      72,2,2,SYSTM,
     *                      54,8,0,PGM,
     *                      43,4,0,TPLPUT,
     *                      47,4,0,TPLGET)
      IF   (PGM.EQ.TSOTMP)
           TPC(DAY)=TPC(DAY)+STEPC+STEPCR
           TOTCPU=TOTCPU+STEPC+STEPCR
           TOTMKM=TOTMKM+(STEPM+SYSTM)*(STEPC+STEPCR)/6000
           TOTTGP=TOTTGP+TPLPUT+TPLGET
      FI
      DSHFT=FALSE
      IF  ((RTIME.GE.T8AM).AND.(RTIME.LE.T5PM))DSHFT=TRUE
      PM  PDEV
      PM  SRMCPS
      PEXIT
C
C     PROCESS TYPE 35 - TSO LOGOFF
C
      PENTRY TYPE35
C
C     CURRENTLY NOT USED SINCE TYPE 34 HAVE MORE INFO
C
      PEXIT
C
C     PROCESS TYPE 40 - TSO DYNAMIC ALLOCATE - PG 95
C
      PENTRY TYPE40
      DSHFT=TRUE
      PM  PDEV
      IF  (RDATE.EQ.SCOPY)
          CALL HHMMSS(RTIME,HH,MM,SS)
          NSLOT=2*HH+1
          IF   (MM.GE.30)NSLOT=NSLOT+1
          SRMALC(NSLOT)=SRMALC(NSLOT)+1
      FI
      PEXIT
C
C     PROCESS TYPE 70 - CPU ACTIVITY FROM MF/1 OR RMF-V3
C
C     NOTE THIS RECORD IS USED FOR R07-R10 AND R16.
C
      PENTRY TYPE70
      PM   MFTIME
      IF   ((SRMD1.LT.SDATE).OR.(SRMD2.GT.EDATE))PEXIT
      IF   (MFTYPE.EQ.MF1)
           CALL SMFIO(MOVE,RTYPE,46,2,2,MFNCPU,
     *                           48,2,2,MFLCPU)
           MFOCPU=52
      ELSEIF (MFTYPE.EQ.RMF3)
           CALL SMFIO(MOVE,RTYPE,50,2,2,MFNCPU,
     *                           52,2,2,MFLCPU)
           MFOCPU=72
      ELSE
           PEXIT
      FI
      TWAIT=0
      DO   I=1,MFNCPU
           CALL SMFIO(MOVE,RTYPE,MFOCPU+0,8,0,MFWTOD)
           CALL CS305(4,MFWTOD,TTWAIT)
           TWAIT=TWAIT+TTWAIT
           MFOCPU=MFOCPU+MFLCPU
      OD
      DAY1=SRMD1-YEAR
      DAY2=SRMD2-YEAR
      DO  DAY=DAY1,DAY2
          IF   (DAY.EQ.DAY1)
               PT1=SRMT1
          ELSE
               PT1=0
          FI
          IF   (DAY.EQ.DAY2)
               PT2=SRMT2
          ELSE
               PT2=T24HR
          FI
          CPT=PT2-PT1
          CPF=CPT/TPT
          WAIT(DAY)=WAIT(DAY)+CPF*TWAIT
          IF   (PT1.GE.T8AM)
               IF   (PT1.GE.T5PM)
                    W50(DAY)=W50(DAY)+CPF*TWAIT
               ELSE
                    IF   (PT2.GT.T5PM)
                         CPT=PT2-T5PM
                         CPF=CPT/TPT
                         W50(DAY)=W50(DAY)+CPF*TWAIT
                         CPT=T5PM-PT1
                         CPF=CPT/TPT
                    FI
                    W85(DAY)=W85(DAY)+CPF*TWAIT
               FI
          ELSEIF (PT2.GT.T8AM)
               IF   (PT2.GT.T5PM)
                    CPT=PT2-T5PM
                    CPF=CPT/TPT
                    W50(DAY)=W50(DAY)+CPF*TWAIT
                    CPT=T5PM-T8AM
               ELSE
                    CPT=PT2-T8AM
               FI
               CPF=CPT/TPT
               W85(DAY)=W85(DAY)+CPF*TWAIT
          FI
      OD
      IF   ((SRMD1.GT.SCOPY).OR.(SRMD2.LT.SCOPY))PEXIT
      PM   CSLOTS
      DO   NSLOT=NSLOT1,NSLOT2
           PM   CALCPF
           SRMCPU(NSLOT)=SRMCPU(NSLOT)+CPF*(TPT*2-TWAIT)
      OD
      PEXIT
C
C     MFTIME - CALCULATE TIMES FOR T70, T71, AND T73 MF/1 OR RMF RECS
C
      PENTRY MFTIME
      CALL SMFIO(MOVE,RTYPE,40,2,0,MFTYPE,
     *                      16,4,0,MFSTIM,
     *                      20,4,0,MFSDAT,
     *                      24,4,0,MFINT)
      CALL CVTPB(MFINT)
      CALL CVTPB(MFSTIM)
      CALL CVTPB(MFSDAT)
      HH=MFSTIM/10000
      MMSS=MFSTIM-HH*10000
      MM=MMSS/100
      SS=MMSS-MM*100
      SRMT1=(HH*60+MM)*60*100
      SRMD1=MFSDAT
      MM=MFINT/100000
      SS=(MFINT-MM*100000)/1000
      SRMT2=SRMT1+(MM*60+SS)*100
      SRMD2=SRMD1
      DO   WHILE,(SRMT2.GT.T24HR)
           SRMT2=SRMT2-T24HR
           SRMD2=SRMD2+1
      OD
      TPT=(SRMD2-SRMD1)*F24HR+(SRMT2-SRMT1)
      PEXIT
C
C     PROCESS TYPE 71 - PAGING ACTIVITY FROM MF/1 OR RMF/3
C
C
C     NOTE THIS RECORD IS USED FOR R07-R10 AND R16.
C
C
C
      PENTRY TYPE71
      PM  MFTIME
      IF  ((SRMD1.LT.SDATE).OR.(SRMD2.GT.EDATE))PEXIT
      IF  (MFTYPE.EQ.MF1)
          CALL SMFIO(MOVE,RTYPE,48,4,0,PVNPIN,
     *                          52,4,0,PVNPOT,
     *                          56,4,0,PVNPRC,
     *                          60,4,0,PVADSW,
     *                          64,4,0,PVADWI,
     *                          68,4,0,PVADWO,
     *                          72,4,0,PVVPIN,
     *                          76,4,0,PVVPOT,
     *                          80,4,0,PVVPRC,
     *                          84,4,0,PVNCPI,
     *                          88,4,0,PVNCPO,
     *                          92,4,0,PVNCRC)
      ELSEIF (MFTYPE.EQ.RMF3)
          CALL SMFIO(MOVE,RTYPE,52,4,0,PVNPIN,
     *                          56,4,0,PVNPOT,
     *                          60,4,0,PVNPRC,
     *                          64,4,0,PVADSW,
     *                          68,4,0,PVADWI,
     *                          72,4,0,PVADWO,
     *                          76,4,0,PVVPIN,
     *                          80,4,0,PVVPOT,
     *                          84,4,0,PVVPRC,
     *                          88,4,0,PVNCPI,
     *                          92,4,0,PVNCPO,
     *                          96,4,0,PVNCRC)
      ELSE
           PEXIT
      FI
      MFPAG=PVNPIN+PVNPOT+PVVPIN+PVVPOT+PVNCPI+PVNCPO
      MFRCM=PVNPRC+PVVPRC+PVNCRC
      MFSWP=PVADWI+PVADWO
      DAY1=SRMD1-YEAR
      DAY2=SRMD2-YEAR
      DO  DAY=DAY1,DAY2
          IF   (DAY.EQ.DAY1)
               PT1=SRMT1
          ELSE
               PT1=0
          FI
          IF   (DAY.EQ.DAY2)
               PT2=SRMT2
          ELSE
               PT2=T24HR
          FI
          CPT=PT2-PT1
          CPF=CPT/TPT
          TPAGE(DAY)=TPAGE(DAY)+CPF*MFPAG
          IF   (PT1.GE.T8AM)
               IF   (PT1.LT.T5PM)
                    IF   (PT2.GT.T5PM)
                         CPT=PT2-T5PM
                         CPF=CPT/TPT
                         CPT=T5PM-PT1
                         CPF=CPT/TPT
                    FI
                    DPAGE(DAY)=DPAGE(DAY)+CPF*MFPAG
               FI
          ELSEIF (PT2.GT.T8AM)
               IF   (PT2.GT.T5PM)
                    CPT=PT2-T5PM
                    CPF=CPT/TPT
                    CPT=T5PM-T8AM
               ELSE
                    CPT=PT2-T8AM
               FI
               CPF=CPT/TPT
               DPAGE(DAY)=DPAGE(DAY)+CPF*MFPAG
          FI
      OD
      IF  ((SRMD1.GT.SCOPY).OR.(SRMD2.LT.SCOPY))PEXIT
      PM   CSLOTS
      DO   NSLOT=NSLOT1,NSLOT2
           PM   CALCPF
           SRMPAG(NSLOT)=SRMPAG(NSLOT)+CPF*MFPAG
           SRMRCM(NSLOT)=SRMRCM(NSLOT)+CPF*MFRCM
           SRMSWP(NSLOT)=SRMSWP(NSLOT)+CPF*MFSWP
      OD
      PEXIT
C
C     PROCESS TYPE 72 - WORKLOAD ACTIVITY FROM MF/1 OR RMF/3
C                                              168     227
C******* NOTE RMF MANUAL OFFSETS INCLUDE 4 BYTE RECORD LENGTH
C******* MF/1 RECORDS IN SMF MANUAL DO NOT
C
C
C     NOTE THIS RECORD IS ONLY USED FOR R16 AND R17 ON SCOPY.
C
C
C
      PENTRY TYPE72
      PM   MFTIME
      IF   ((SRMD1.GT.SCOPY).OR.(SRMD2.LT.SCOPY))PEXIT
      IF   (MFTYPE.EQ.MF1)
           CALL SMFIO(MOVE,RTYPE,30,2,2,PG,
     *                           46,2,2,NPD)
           L=60
      ELSE
           CALL SMFIO(MOVE,RTYPE,30,2,2,PG,
     *                           50,2,2,NPD)
           L=88
      FI
      IF  ((PG.LT.1).OR.(PG.GT.MAXPG))PG=MAXPG
      IF  (NPD.GT.MAXPD)NPD=MAXPD
      PM  CSLOTS
      DO   J=1,NPD
           CALL SMFIO(MOVE,RTYPE,L,4,0,TPGTT,
     *                           L+8,4,0,TPGSR,
     *                           L+12,4,0,TPGET)
           PGTT(PG,J)=PGTT(PG,J)+TPGTT
           PGSR(PG,J)=PGSR(PG,J)+TPGSR
           PGET(PG,J)=PGET(PG,J)+TPGET
           IF   ((PG.EQ.2).AND.(J.EQ.1))
                DO   NSLOT=NSLOT1,NSLOT2
                     PM   CALCPF
                     SRMT1T(NSLOT)=SRMT1T(NSLOT)+CPF*TPGTT
                     SRMT1E(NSLOT)=SRMT1E(NSLOT)+CPF*TPGET
                OD
           FI
           IF   (MFTYPE.EQ.MF1)
                L=L+20
           ELSE
                L=L+44
           FI
      OD
      PEXIT
C
C     PROCESS TYPE 73 -CHANNEL ACTIVITY FROM MF/1 OR RMF/3
C
C     NOTE THIS RECORD IS ONLY USED FOR R16 ON SCOPY DATE.
C
C
C
C
      PENTRY TYPE73
      PM   MFTIME
      IF   ((SRMD1.GT.SCOPY).OR.(SRMD2.LT.SCOPY))PEXIT
      IF   (MFTYPE.EQ.MF1)
           CALL SMFIO(MOVE,RTYPE,32,4,0,MFNSAM,
     *                           46,2,2,MFNCHN,
     *                           48,2,2,MFLCHN)
           MFOCHN=52
      ELSEIF (MFTYPE.EQ.RMF3)
           CALL SMFIO(MOVE,RTYPE,32,4,0,MFNSAM,
     *                           50,2,2,MFNCHN,
     *                           52,2,2,MFLCHN)
           MFOCHN=76
      ELSE
           PEXIT
      FI
      IF   (MFNSAM.LE.0)PEXIT
      PM   CSLOTS
      DO   I=1,MFNCHN
           CALL SMFIO(MOVE,RTYPE,MFOCHN+2,1,3,MFCHAN,
     *                           MFOCHN+8,4,0,MFCBSY)
           IF   ((MFCHAN.GT.0).AND.(MFCHAN.LE.HCHAN))
                MFCPCT=MFCBSY*100/MFNSAM
                DO   NSLOT=NSLOT1,NSLOT2
                     PM   CALCPF
                     SRMCHA(MFCHAN,NSLOT)=SRMCHA(MFCHAN,NSLOT)
     *                                    +CPF*MFCPCT
                OD
           FI
           MFOCHN=MFOCHN+MFLCHN
      OD
      PEXIT
C
C     PROCESS TYPE 240 - TLMS BACKUP - SEE TLMSEXTR FOR LAYOUT
C
      PENTRY TYP240
      PEXIT
C
C     TABADT - COUNT JOBS BY AREA AND TYPE
C
      PENTRY TABADT
      PM   FINDAT
      TABATT(I,J)=TABATT(I,J)+1
      PEXIT
C
C     TABADA - COUNT ABENDS BY AREA AND TYPE
C
      PENTRY TABADA
      PM   FINDAT
      TABATA(I,J)=TABATA(I,J)+1
      PEXIT
C
C     FINDAT - FIND AREA AND TYPE FOR JOB
C
      PENTRY FINDAT
      I=0
      FOUND=FALSE
      DO   UNTIL,(FOUND.EQ.TRUE)
           I=I+1
           IF   (I.GT.TABAI)
                FOUND=TRUE
                IF   (I.GT.TABAM)
                     I=TABAM
                     TABA(I)=ASTRK
                ELSE
                     TABA(I)=NUPJA
                     TABAI=I
                FI
           ELSEIF (TABA(I).EQ.NUPJA)
                FOUND=TRUE
           FI
      OD
      J=0
      FOUND=FALSE
      DO   UNTIL,(FOUND.EQ.TRUE)
           J=J+1
           IF   (J.GT.TABTI)
                FOUND=TRUE
                IF   (J.GT.TABTM)
                     J=TABTM
                     TABT(J)=ASTRK
                ELSE
                     TABT(J)=NUPJT
                     TABTI=J
                FI
           ELSEIF (TABT(J).EQ.NUPJT)
                FOUND=TRUE
           FI
      OD
      PEXIT
      END
      SUBROUTINE MSUM(MDAYS,A)
      IMPLICIT INTEGER (A-Z)
      INTEGER MDAYS(12),A(366)
C
C     SUM UP DAY DATA INTO MONTH DATA STORED IN 1-12 AND TOTAL IN 13
C
      CMS=1
      GT=0
      DO  M=1,12
          CME=MDAYS(M)
          MT=0
          DO   DAY=CMS,CME
               MT=MT+A(DAY)
          OD
          GT=GT+MT
          A(M)=MT
          CMS=CME+1
      OD
      A(13)=GT
      RETURN
      END
