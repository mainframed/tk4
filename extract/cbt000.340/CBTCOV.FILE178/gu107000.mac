*          DATA SET GU107000   AT LEVEL 011 AS OF 03/12/80
         TITLE 'GU107000 - PDS DIRECTORY FILE GENERATOR'
*              PGM-ID. GU107000.
*              AUTHOR. DON HIGGINS.
*              DATE.   03/07/80.
*              REMARKS.
*                      THIS PROGRAM READS 1 OR MORE PARTITIONED
*                      LOAD MODULE LIBRARY DIRECTORIES AND CREATES
*                      A SEQUENTIAL 80 BYTE RECORD DIRECTORY FILE.
*                      THE DIRECTORY FILE CAN BE COMPARED WITH A
*                      PREVIOUS VERSION TO PRODUCE A CHANGE LIST.
*
*              FILES.
*                      PDSLIBXX - PARTITIONED LOAD MODULE LIBRARY
*                                 WHERE XX IS ANY UNIQUE CODE.
*                      SYSUT2 - SEQUENTIAL 80 BYTE FIXED BLOCKED FILE.
*
*                        01-08 MEMBER NAME
*                        10-16 SIZE IN BYTES
*                        18-25 DATE OF LINK-EDIT MM/DD/YY
*                        27-31 TIME OF LINK-EDIT HH.MM
*                        33-38 VOLUME OF PDS LIBRARY
*                        40-72 NAME OF LIBRARY
*              REFERENCES.
*
*                1.  OS/VS LINKAGE EDITOR LOGIC SY26-3815-0.
*                2.  OS/VS2 DEBUGGING HANDBOOK  GC28-0708-1.
*
*              NOTES.
*
*                1.  FOR MODULES WITHOUT USER SUPPLIED SSI
*                    TIME AND DATE, THIS PROGRAM CAN BE MODIFIED
*                    TO READ IDR RECORDS FROM EACH MODULE WHICH
*                    CONTAIN TIME AND DATE SUPPLIED BY LKED.
*                2.  THE ABOVE TAKES A LOT OF RANDOM IO SO I
*                    SETTLED FOR USING SSI AND SIZE AS AN
*                    ACCEPTABLE INDICATOR OF CHANGE FOR NOW.
*
GU107000 SUBENTRY
         OPEN  (SYSUT2,(OUTPUT))
         DTIME TIMEDATE
         PUT   SYSUT2,HEADER
         PM    GETDE
         DO    WHILE,(CLI,EOF,TRUE,NE)
               PM   PUTDE
               PM   GETDE
         OD
         CLOSE (SYSUT2)
         SUBEXIT
         TITLE 'GETDE - GET NEXT DIRECTORY ENTRY'
GETDE    PENTRY
         DO    UNTIL,(CLC,DE,=A(1),GT)
               SCALL GETPDSDD,(JFCB,DE)
               IF   (CLC,JFCB,=A(0),EQ)
                    MVI   EOF,TRUE
                    PEXIT
               FI
         OD
         PEXIT
         TITLE 'PUTDE - WRITE 80 BYTE DIRECTORY ENTRY RECORD'
PUTDE    PENTRY
         L     R2,JFCB
         MVC   VOLUME,JFCBVOLS(R2)
         MVC   DSNAME,JFCBDSNM(R2)
         L     R3,DE
         MVC   MEMBER,DEMEM(R3)
         PM    GETUSER
         PUT   SYSUT2,RECORD
         PEXIT
         TITLE 'GETUSER - GET SIZE, DATE, AND TIME FROM USER DATA'
GETUSER  PENTRY
         ZR    R1
         IC    R1,DELNG(R3)
         N     R1,=X'0000001F'    R1= # OF USER HALF WORDS IN DE
         IF    (CH,R1,=AL2(DEHMIN),LT)
               MVC  SIZE,=CL7' '          BLANK FIELDS AND EXIT
               MVC  DATE,=CL8' '          IF NOT LONG ENOUGH FOR
               MVC  TIME,=CL5' '          LKED DE
               PEXIT
         FI
         ZR   R0
         ICM  R0,7,DESIZE(R3)
         CVD  R0,PWORK
         EDIT TO=SIZE-1,FROM=PWORK+4,MASK=' ZZZZZ99'   MODULE SIZE
         IF   (CH,R1,=AL2(DEHMINVS),LT),                               X
               OR,(TM,DEATTR2(R3),DESSIVS,NO)          BLANK DATE+TIME
               MVC  DATE,=CL8' '                       IF NO VS SSI
               MVC  TIME,=CL5' '
               PEXIT
         FI
         SLL   R1,1                 R1= # OF USER BYTES
         LA    R1,DEUSER-6(R1,R3)   R1=A(SSI INFO AT 6 BYTES FROM END)
         UNPK  YDDDHHMM,0(5,R1)     GET DATE AND TIME FROM SSI
         IF    (TRT,YDDDHHMM(8),NUMERIC,NE),                           X
               OR,(CLC,YDDDHHMM+1(3),=C'001',LT),                      X
               OR,(CLC,YDDDHHMM+1(3),=C'366',GT),                      X
               OR,(CLC,YDDDHHMM+4(2),=C'23',GT),                       X
               OR,(CLC,YDDDHHMM+6(2),=C'59',GT)
               MVC  DATE,=CL8' '  IF VS SSI IS NOT IN DATE+TIME FORMAT
               MVC  TIME,=CL5' '  BLANK IT OUT
               PEXIT
         FI
         SCALL TIMER,(F13,DATE)     SET DATE TO CURRENT MM/DD/YY
         MVC   YY(1),DATE+6         USE CURRENT FIRST DIGIT
         MVC   YY+1(1),YDDDHHMM     USE SSI SECOND DIGIT
         PACK  PWORK,YY
         CVB   R1,PWORK
         IF    (CLC,YY,DATE+6,H)    BACK 10 YEARS IF FUTURE DATE
               SH   R1,=H'10'
         FI
         MH    R1,=H'1000'
         PACK  PWORK,YDDDHHMM+1(3)
         CVB   R0,PWORK             R0=  DDD
         AR    R1,R0                R1=YYDDD
         ST    R1,YYDDD
         SCALL TIMER,(F11,YYDDD,DATE)  CVT SSI DATE TO MM/DD/YY
         MVC   TIME(2),YDDDHHMM+4      HH
         MVI   TIME+2,C'.'               .
         MVC   TIME+3(2),YDDDHHMM+6       MM
         PEXIT
         EQUAL
PWORK    DC    D'0'
DEMEM    EQU   0  OS/VS LINKAGE EDITOR LOGIC SY26-3815 FIG. 41 PG 188
DELNG    EQU   11 0=ALIAS,1-2=# TTR'S,3-7=# USER HALFWORDS
DEUSER   EQU   12 START OF USER HALFWORDS
DESIZE   EQU   22 SIZE IN BYTES
DEHMIN   EQU   11 MINIMUM # OF HALFWORDS IN LINK-EDIT DE
DEHMINVS EQU   12 MINIMUM # OF HALFWORDS IN OS/VS LINK-EDIT DE
DEATTR2  EQU   30 ATTRIBUTE BYTE 2 (BIT 0 IS OS/VS, AND BIT 3 IS SSI)
DESSIVS  EQU   X'90' OS/VS AND SSI BITS
YDDDHHMM DC    CL9' ' UNPACKED FORM OF OS/VS LINK-EDIT SSI FIELD
YY       DC    CL2' '
F11      DC    F'11'
F13      DC    F'13'
YYDDD    DC    F'0'
EOF      LOGICAL FALSE,(TRUE,FALSE)
JFCB     DC    A(0)
DE       DC    A(0)
JFCBDSNM EQU   000  FE PG 501
JFCBVOLS EQU   118  FE PG 501
HEADER   DS    0CL80
         DC    C'GU107R01 PDS DIRECTORY AS OF '
TIMEDATE DC    CL22' '
         FILL  HEADER
RECORD   DS    0CL80
MEMBER   DC    CL8' ',C' '          NAME
SIZE     DC    CL7' ',C' '          SIZE IN BYTES
DATE     DC    CL8'MM/DD/YY',C' '   DATE OF LKED
TIME     DC    CL5'HH.MM',C' '      TIME OF LKED
VOLUME   DC    CL6' ',C' '          FILE VOLUME
DSNAME   DC    CL33' '              FILE NAME (FIRST 33 CHAR.)
         FILL  RECORD
SYSUT2   DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,DDNAME=SYSUT2
NUMERIC  TRTTAB NUMERIC
         END   GU107000
