*          DATA SET GU019500   AT LEVEL 017 AS OF 05/08/77
*          DATA SET GU019500   AT LEVEL 015 AS OF 02/10/75
         TITLE 'GU019500 - COPY HASP SPOOL DATA TO QSAM FILE'
*              AUTHOR.   DON HIGGINS.
*              DATE.     02/23/73.
*              REMARKS.  COPY HASP SPOOL PRINT DATA FOR JOB TO QSAM
*                        FILE.
*              FILES.
*                SPOOL1- SYS1.HASPACE USED BY HASPXDAP
*                SPOOL2- SYS1.HASPACE USED BY HASPXDAP
*                QSAMOUT- PRINT FILE OUTPUT.
*                SYSIN - CONTROL CARD INPUT WITH JOBS TO BE COPIED.
*                        COL.      DESCRIPTION
*                        1-8        JOBNAME TO BE PRINTED
*                          9        'S' IF TIME STAMP DESIRED
*                SYSPRINT - MESSAGES AND RECORD COUNTS.
*              NOTES.
*                1. SEE DATA SECTION CONTAINING HASPGEN DEPENDENT
*                   PARAMETERS.
*                2. THERE IS NO SEPARATION BETWEEN EACH SYSOUT OR
*                   BETWEEN MULTIPLE JOBS ON OUTPUT PRINT FILE.
*                3. THIS PGM COULD BE SPEEDED UP BY WRITING DOUBLE
*                   BUFFER ROUTINE TO RETRIEVE CHAINED DATA BLOCKS
*                   OFF SPOOL.
*              REFERENCES.
*                1. XDAP - SYS. PGMR. GUIDE  GC28-6550.
*                2. HASP CHECK POINT INFO.
*                   A. RECORD LAYOUTS - HASPMISC CHECK POINT PROCESSOR
*                   B. RECORD LOCATION- HASPINIT SEE $CKPTRAK XREF.
*                3. HASP MTTR CONVERSION - HASPNUC SEE $EXCP ROUTINE.
*                4. HASP DATA BLOCK FORMAT - HASP MANUAL SECTION 8.15.
*
*              REVISIONS.
*                  1.    01/22/75 DSH - REVISE FOR HASP V4.0
*
*              REGISTERS.
*
*                   R0   WORK
*                   R1   WORK
*                   R2   JOBQUE ENTRY
*                   R3   LAST PDDB IN CURRENT IOT
*                   R4   CURRENT PDDB
*                   R5   BUFFER DATA POINTER
*                   R6   JCT
*                   R7   IOT
*                   R8   INPUT DD * DATA BUFFER POINTER
*                   R10  PGM BASE
*                   R11  PGM BASE
*                   R12  PGM BASE
*                   R13  PGM BASE
*                   R14
*                   R15
         TITLE 'HASP DATA DEFINITIONS'
         COPY  $GLOBAL
         COPY  $HASPGEN
         $HASPCB BUFFER,JQE,JIT,JCT,IOT,PDDB,JOE,JOT,PRC
         DROP
         TITLE 'MAINLINE'
         PRINT NOGEN
GU019500 SUBENTRY BASES=(R13,R12,R11,R10)
         ZR    R4
         USING PDBDSECT,R4
         L     R6,=A(JCTREC-BUFSTART+BUFDSECT)
         USING JCTDSECT,R6
         L     R7,=A(IOTREC-BUFSTART+BUFDSECT)
         USING IOTDSECT,R7
         OPEN  (QSAMOUT,(OUTPUT),SYSIN,,SYSPRINT,(OUTPUT))
         DTIME TIMEDATE
R000LOOP PERFORM R100FJOB,R170EXIT      FIND JOB IN CHECK POINT REC
         CLI   STATUS,FOUND
         BNE   EXIT
R010NEXT TAG
         PERFORM R200FSYS,R260EXIT      FIND NEXT SYSOUT IN JCT
         CLI   STATUS,FOUND
         BNE   R000LOOP
R020READ PERFORM R300FRDR,R330EXIT      READ LOGICAL PRINT RECORD
         CLI   STATUS,EOF
         BE    R010NEXT
         AP    RCOUNT,=P'1'
         CLI   SEQREC,C'S'
         BNE   PUTREC
         MVC   RECORD+100(22),TIMEDATE
         EDIT  TO=RECORD+125,FROM=RCOUNT,MASK=' 9999999'
PUTREC   TAG
         PUT   QSAMOUT,RECORD           WRITE PRINT RECORD
         B     R020READ
EXIT     TAG
         CLOSE (QSAMOUT,,SYSIN,,SYSPRINT)
         SUBEXIT
         TITLE 'R100FJOB - FIND HASP JOB BY NAME'
R100FJOB PENTRY
         GET   SYSIN,CTLCARD
         SCALL HASPXDAP,(CKP1MTTR,CKP1REC,CKP1LNG)
         SCALL HASPXDAP,(CKP2MTTR,CKP2REC,CKP2LNG)
         SCALL HASPXDAP,(CKP3MTTR,CKP3REC,CKP3LNG)
         MVC   TJQENT,$JQENT       ALIGN
         MVC   TJOBQPTR,$JOBQPTR
         L     R1,TJQENT           R1=A(FIRST ACTIVE JQE)
R130     TAG
         S     R1,TJOBQPTR         R1=REL ADDR JQE
         LA    R2,$JOBQUE(R1)      R2=A(CURRENT ACTIVE JOB QUEUE)
         SRL   R1,1
         LA    R3,$JIT(R1)         R3=A(CORRESPONDING JOB NAME)
         CLC   JOBNAME,0(R3)       IS THIS THE JOB
         BE    R150                YES, CHECK QUEUE TYPE
R140     TAG
         L     R1,QUECHAIN(R2)
         LA    R1,0(R1)
         LTR   R1,R1
         BP    R130
         LA    R2,=CL133' *** JOB NOT FOUND ***'
         PM    R400PRNT
         B     R100FJOB
R150     TAG
         IF    (TM,QUETYPE(R2),$INPUT,O)
               LA   R2,=CL133' *** JOB STILL IN INPUT SERVICE ***'
               PM   R400PRNT
               B    R100FJOB
         FI
         MVC   MTTR,QUETRAK(R2)
         SCALL HASPXDAP,(MTTR,JCTREC,&BUFSIZE)
         IF    (TM,QUETYPE(R2),$XEQ,O)
               MVI  RECTYPE,RDRJCL
               MVC  MTTR,JCTINJCT
               SCALL HASPXDAP,(MTTR,JCTREC,&BUFSIZE)
         ELSE
               MVI  RECTYPE,PRPU
         FI
         MVC   MTTR,JCTIOTTR
         PM    GETIOT
         MVI   STATUS,FOUND        SHOW JOB FOUND
R170EXIT PEXIT
GETIOT   PENTRY
         SCALL HASPXDAP,(MTTR,IOTREC,&BUFSIZE)
         LA    R4,IOTPDDB     R4=A(CURRENT PDDB)
         L     R1,IOTPDDBP
         LA    R3,IOTDSECT(R1)     R3=A(END OF PDDBS IN THIS IOT)
         PEXIT
         TITLE 'R200FSYS - FIND NEXT PDDB AND SET DATA MTTR'
R200FSYS PENTRY
         MVI   STATUS,FOUND
         IF    (CLR,R4,R3,NL)  IS IT END OF PDDBS
               IF   (CLC,IOTIOTTR,=4X'00',EQ) IS IT END OF IOTS
                    MVI  STATUS,NOGO
                    B    R235TOT
               ELSE
                    MVC  MTTR,IOTIOTTR
                    PM   GETIOT
               FI
         FI
         MVC   MTTR,PDBMTTR
         ZR    R1
         IC    R1,PDBLENG
         AR    R4,R1
         LA    R5,=X'FF' DUMMY BUFFER EOB
         PEXIT
R235TOT  TAG
         EDIT  TO=DRCOUNT,FROM=RCOUNT,MASK=' Z,ZZZ,ZZZ'
         LA    R2,DTOTLINE
         MOVE  DNAME,JOBNAME
         PERFORM R400PRNT,R410EXIT
         ZAP   RCOUNT,=P'0'
R260EXIT PEXIT
         TITLE 'R300FRDR - READ LOGICAL RECORD FROM BUFFER'
*
*              THE FOLLOWING INFO HAS BEEN GLEENED FROM READING
*              HASPRDR AND HASPPRPU.  ALL BUFFER RECORDS ARE OF
*              THE FORM LCDDDLCDDDLCDDDF.
*
*                   L - ONE BYTE LENGTH OF DATA (ALWAYS 80 FOR INPUT)
*                   C - CONTROL CODES.
*
*                        OUTPUT
*                            1.  MACHINE CARRIAGE CONTROL
*                        INPUT
*                            1.  X'00' - JCL OR DATA CARDS
*                            2.  X'03' - INTERNALLY GENERATED RECORD
*                            3.  X'04' - SUPERFLUOUS CARD
*                            4.  X'73' - DD * TRACK ADDRESS RECORD WITH
*                                        MTTR IN POSITIONS 1-4
*                            5.  X'19' - LAST NULL CARD AND FLUSH MSG
*                                        ADDED TO END OF JCL
*
*                   DDD - DATA
*                   F - X'FF' END OF BLOCK
R300FRDR PENTRY
         IF    (CLI,RECTYPE,RDRDATA,EQ)
               PM   GETDATA
               IF   (CLI,STATUS,EOF,NE)
                    PEXIT
               FI
               MVI  RECTYPE,RDRJCL
               MVI  STATUS,FOUND
         FI
         PM    GETREC
R330EXIT PEXIT
         TITLE 'GET NEXT RECORD'
GETREC   PENTRY
         IF    (CLI,0(R5),X'FF',EQ)
               IF   (CLC,MTTR,=4X'00',EQ)
                    MVI  STATUS,EOF
                    PEXIT
               FI
               SCALL HASPXDAP,(MTTR,BUFFER,&BUFSIZE)
               L    R5,=A(BUFFER-BUFSTART+BUFDSECT)
               USING BUFDSECT,R5
               MVC  MTTR,HDBNXTRK
               LA   R5,HDBSTART
               DROP R5
         FI
         ZR    R1
         IC    R1,0(R5)
         IF    (CLI,RECTYPE,RDRJCL,EQ),AND,(CLI,1(R5),X'00',NE)
               IF   (CLI,1(R5),X'73',EQ)
                    MVI  RECTYPE,RDRDATA
                    MVC  MTTRDATA,2(R5)
                    LA   R5,2(R1,R5)
                    LA   R8,=X'FF'
                    PM   GETDATA
                    PEXIT
               ELSE
                    IF   (CLI,1(R5),X'04',NE)
                         LA   R5,2(R1,R5)
                         B    GETREC
                    FI
               FI
         FI
         MVC   RECORD,RECORD-1
         EX    R1,MVCREC
         LA    R5,2(R1,R5)
         PEXIT
         TITLE 'GET NEXT DD * DATA RECORD'
GETDATA  PENTRY
         IF    (CLI,0(R8),X'FF',EQ)
               IF   (CLC,MTTRDATA,=4X'00',EQ)
                    MVI  STATUS,EOF
                    PEXIT
               FI
               SCALL HASPXDAP,(MTTRDATA,DATABUF,&BUFSIZE)
               L    R8,=A(DATABUF-BUFSTART+BUFDSECT)
               USING BUFDSECT,R8
               MVC  MTTRDATA,HDBNXTRK
               LA   R8,HDBSTART
               DROP R8
         FI
         ZR    R1
         IC    R1,0(R8)
         MVC   RECORD,RECORD-1
         EX    R1,MVCDATA
         LA    R8,2(R1,R8)
         PEXIT
         TITLE 'R400PRNT - PRINT LINE'
R400PRNT PENTRY
         PUT   SYSPRINT,(R2)
R410EXIT PEXIT
         TITLE 'COMMON DATA'
EQ       EQU   8
         EQUI
         LTORG
MVCREC   MVC   RECORD(0),1(R5)
MVCDATA  MVC   RECORD(0),1(R8)
STATUS   LOGICAL NOGO,(NOGO,FOUND,EOF,GO)
RECTYPE  LOGICAL PRPU,(PRPU,RDRJCL,RDRDATA)
MTTRDATA DC    F'0'
CTLCARD  DS    0CL80
JOBNAME  DC    CL8' '              JOB NAME IN PRINT QUEUE TO COPY
SEQREC   DC    C' '
         FILL  CTLCARD
RCOUNT   DC    PL4'0'
TIMEDATE DC    CL22' '
         DC    C' '
RECORD   DC    CL133' '
DTOTLINE DS    0CL133
         DC    C' ',C'TOTAL RECORDS COPIED'
DRCOUNT  DC    CL10' ',C' FOR JOB '
DNAME    DC    CL8' '
         FILL  DTOTLINE
QSAMOUT  DCB   DSORG=PS,MACRF=PM,DDNAME=QSAMOUT,                       X
               RECFM=FB,LRECL=133
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EXIT,              X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FA,BLKSIZE=133
TJQENT   DC    F'0'
TJOBQPTR DC    F'0'
MTTR     DC    F'0'
         SPOOLDAT
         DC    0D'0',CL8'JCT'
JCTREC   DC    (&BUFSIZE)X'00'
         DC    0D'0',CL8'IOT'
IOTREC   DC    (&BUFSIZE)X'00'
         DC    0D'0',CL8'BUFFER'
BUFFER   DC    (&BUFSIZE)X'00'
         DC    0D'0',CL8'DATABUF'
DATABUF  DC    (&BUFSIZE)X'00'
         END   GU019500
