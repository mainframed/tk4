C          DATA SET CS317000   AT LEVEL 022 AS OF 11/03/77
C          DATA SET CS317000   AT LEVEL 012 AS OF 10/19/77
C     PGM-ID.  CS317000.
C     AUTHOR.  DDN HIGGINS.
C     DATE.    10/12/76.
C     REMARKS. CSD USER REPORT GENERATOR.
C              1.  READ SMF FILE.
C              2.  CALCULATE STATISTICS.
C              3.  SORT AND REPORT.
C     FILES.
C              SMFINPUT - SMF FILE READ BY SMFIO (GU016400)
C              FT06F001 - SYSTEM ERROR MESSAGES
C              FT10F001 - DEPT FILE (EI.DEPTMENT) ALIAS OT780RS.CS317S10
C                           01-04 DEPT NUMBER
C                           05-34 DESCRIPTION
C                           35-38 RESPONSIBILITY AREA NUMBER
C                           39-39 HIRE CENTER
C                           40-40 MAJOR AREA CODE
C                                 1 FINANCIAL SERVICES
C                                 2 ADMINISTRATIVE SERVICES
C                                 3 CUSTOMER OPERATIONS
C                                 4 ENGINEERING AND CONSTRUCTION
C                                 5 PRESIDENT'S OFFICE
C                           41-49 FILLER
C              FT16F001 - USER SUMMARY REPORTS
C              FT17F001 - INDIVIDUAL USER REPORTS
C              UI005D01 - CSD USER MASTER FILE VIA UI010000
C     REPORTS.
C              CS317R01 - ALL USERS BY USERID
C              CS317R02 - TOP 50 USERS BY BATCH JOB COST
C              CS317R03 - TOP 50 USERS BY TSO COST
C              CS317R04 - TOP 50 USERS BY TOTAL COST
C              CS317R05 - TOP 50 USERS BY TSO CONNECT HOURS
C              CS317R06 - ALL USERS BY TOTAL COST WITHIN DEPT.
C              CS317R07 - DEPT. SUMMARY
C     EXTERNAL REFERENCES.
C        1. DCALL    - DYNAMIC CALL INTERFACE
C        2. CS305    - MISC. ALC ROUTINES
C        3. RCPCALC  - SVS/MVS COMMON RATE CALCULATION ROUTINE
C        4. SMFIO    - SMF READ ROUTNE
C        5. TIMER    - GENERAL TIME AND DATE SUPPORT
C        6. UI010000 - USER MASTER INTERFACE
C
C     REFERENCE.
C                   1.   OS/VS SMF GC35-0004-4  (OS/VS2-R1)
C                   2.   OS/VS2 MVS GC28-0706-1 (OS/VS2-R3.7)
C     MAINTENANCE.   REMEMBER TO UPDATE FORMAT 10 *********************
C
C        10/28/77 DSH - ADD R06+R07 AND GRAND TOTALS TO R01
C
C
C     NOTES.
C
C     DATA DEFINITIONS
C
      IMPLICIT INTEGER(A-Z)
      INTEGER  EOF/0/,TRUE/1/,FALSE/0/
      INTEGER  RDIO/1/,MOVE/2/,REOF/3/
      INTEGER DUMP/5/
      INTEGER RTYPE,RTIME,RDATE
      INTEGER FRPT/16/,FSYS/6/,FURPT/17/,FDEPT/10/
      INTEGER LINE/0/,MAXLN/50/,PAGE/0/,SDATE/99999/,EDATE/0/
      REAL*8 GEDATE/' '/,GSDATE/' '/
      REAL*8 GDATE
      INTEGER CPUID/0/,CPUIDS(3)/'A158','MVS1','****'/,CPUIDT(3)/3*0/
      INTEGER SYSID/' '/,NEWID/'*'/,OLDID/' '/
C
C     DATA FOR USER REPORTS
C
      REAL*8   CSR/' '/,JOB/' '/,PGM/' '/,TSOTMP/'IKJEFT01'/
      REAL*8   DSNVOL/' '/,DDNAME/' '/
      INTEGER*2 DSN(22)
      INTEGER  CSRSUF,PGMR(5)
      INTEGER  MEMORY,CPU
      INTEGER  DEXCP,TEXCP,LINES,COST
      INTEGER  RCPTAB(15)
      EQUIVALENCE
     *  (RCPTAB(01),CPU)
     * ,(RCPTAB(02),MEMORY)
     * ,(RCPTAB(03),DEXCP)
     * ,(RCPTAB(04),TEXCP)
     * ,(RCPTAB(05),RDRXCP)
     * ,(RCPTAB(06),LINES)
     * ,(RCPTAB(07),PCHXCP)
     * ,(RCPTAB(08),TSCAN)
     * ,(RCPTAB(09),DALLC)
     * ,(RCPTAB(10),TALLC)
     * ,(RCPTAB(11),COST)
     * ,(RCPTAB(12),DTMNTS)
      INTEGER USERID/0/,USNO/0/
      INTEGER BADIDS/0/
      REAL*8  UIFIP/'UI010000'/
      INTEGER USINDX(1300)/1300*0/,MAXUS/1300/,MAXIX/300/,CINDX/0/
      INTEGER USJOBS(300)/300*0/,USJCST(300)/300*0/
      INTEGER USJPCT(300)/300*0/
      INTEGER USTLOG(300)/300*0/,USTMIN(300)/300*0/
      INTEGER USTCST(300)/300*0/,USTPCT(300)/300*0/
      INTEGER USUCST(300)/300*0/,USUPCT(300)/300*0/
      INTEGER USID  (300)/300*0/,USIA  (300)/300*0/
      INTEGER USWA  (300)/300*0/,USDEPT(300)/300*0/
      INTEGER USNAME(7,300)/2100*' '/,USWA1(300)/300*0/
      INTEGER DPNO(300)/300*0/,DPRA(300)/300*0/
      INTEGER DPNAME(8,300)/2400*' '/
C
C     FORMATS
C
   10 FORMAT(
     *    1H1,'CS317R',I2,' CSD MONTHLY USER SUMMARY REPORT '
     *   ,A8
     *   ,'  START=',A8,'  END=',A8,5X,'PAGE',I5
     *   ,T100,'CS317000 V1-R10/26/77'
     */)
   20 FORMAT(
     *  /1X,'ALL USERS BY USER IDENTIFICATION NUMBER'
     */)
   30 FORMAT(
     *  /1X,' NO USERID DEPT --------- USER NAME -------'
     *     ,'    JOBS J-$CST J-%CST LOGONS  HOURS T-$CST T-%CST'
     *     ,' $TOTAL %TOTAL'
     */)
   40 FORMAT(
     *   1X,I3,I7,I5,1X,7A4,9I7
     *)
   45 FORMAT(
     *   /17X,'GRAND TOTAL',17X,2I7,7X,3I7,7X,I7
     *)
   50 FORMAT(/1X,'TOP 50 USERS BY BATCH JOB COST'/)
   60 FORMAT(/1X,'TOP 50 USERS BY TSO COST'/)
   70 FORMAT(/1X,'TOP 50 USERS BY TOTAL COST'/)
   80 FORMAT(/1X,'TOP 50 USERS BY TSO CONNECT HOURS'/)
   90 FORMAT(/1X,'ALL USERS BY TOTAL COST WITHIN DEPARTMENT'/)
   95 FORMAT(
     *   /12X,I4,1X,8A4
     */)
  100 FORMAT(
     *    /1X,'DEPARTMENT SUMMARY'
     */)
  110 FORMAT(
     *  /1X,' NO  USERS DEPT --------- DEPT NAME -----------'
     *     ,'    JOBS J-$CST J-%CST LOGONS  HOURS TS$CST TS%CST'
     *     ,' $TOTAL %TOTAL'
     */)
  120 FORMAT(
     *   1X,I3,I7,I5,1X,8A4,9I7
     *)
  125 FORMAT(
     *   /17X,'GRAND TOTAL',21X,2I7,7X,3I7,7X,I7
     *)
  130 FORMAT(I4,7A4,A2,I4)
C****************************************************************
C     MAINLINE
C****************************************************************
      PM  INIT
      PM  GETSMF
      DO  WHILE,(EOF.NE.TRUE)
          PM   PROCES
          PM   GETSMF
      OD
      PM  CALCS
      PM  RPT01
      PM  RPT02
      PM  RPT03
      PM  RPT04
      PM  RPT05
      PM  RPT06
      PM  RPT07
      STOP
C***************************************************************
C     SECOND LEVEL SUPPORT ROUTINES
C
C***************************************************************
C
C     INITIALIZE CONSTANTS AND TABLES
C
      PENTRY INIT
      T24HR=24*60*60*100
      CALL TIMER(12,TIME)
      CALL TIMER(13,GDATE)
      CALL DCALL(UIFIP,3,4,0,0,UISTAT)
      DO   I=1,MAXIX
           READ(FDEPT,130,END=2000)DPNO(I),(DPNAME(J,I),J=1,8),DPRA(I)
      OD
      I=MAXIX+1
 2000 MAXDP=I-1
      PEXIT
C
C     GETSMF
C
      PENTRY GETSMF
      CALL SMFIO(RDIO,RTYPE,RTIME,RDATE)
      IF  (RDIO.EQ.REOF)EOF=TRUE
      PEXIT
C
C     PROCESS SMF RECORDS TO COLLECT DATA
C
      PENTRY PROCES
      DOCASE RTYPE
          CASE 4,5,6,14,15,17,18,20,26,34,35,40
               CALL SMFIO(MOVE,RTYPE,10,4,0,CPUID,
     *                               36,2,2,USERID)
          ESAC
          CASE ELSE
               PEXIT
      ESACOD
      IF  (RDATE.LT.SDATE)SDATE=RDATE
      IF  (RDATE.GT.EDATE)EDATE=RDATE
      IF  ((USERID.LT.1).OR.(USERID.GT.MAXUS))
          BADIDS=BADIDS+1
          PEXIT
      FI
      INDX=USINDX(USERID)
      IF   (INDX.EQ.0)
           IF   (CINDX.GE.MAXIX)
                BADIDS=BADIDS+1
                PEXIT
           FI
           CINDX=CINDX+1
           USINDX(USERID)=CINDX
           INDX=CINDX
           USID(INDX)=USERID
      FI
      DO   I=1,15
           RCPTAB(I)=0
      OD
      IF   (CPUID.EQ.CPUIDS(1))
           CPUID=1
      ELSEIF (CPUID.EQ.CPUIDS(2))
           CPUID=2
           SYSID=NEWID
      ELSE
           CPUID=3
      FI
      DOCASE RTYPE
          CASE 4
            PM TYPE4
          ESAC
          CASE 5
            PM TYPE5
          ESAC
          CASE 6
            PM TYPE6
          ESAC
          CASE 14
            PM TYPE14
          ESAC
          CASE 15
            PM TYPE15
          ESAC
          CASE 17
            PM TYPE17
          ESAC
          CASE 18
            PM TYPE18
          ESAC
          CASE 20
            PM TYPE20
          ESAC
          CASE 26
            PM TYPE26
          ESAC
          CASE 34
            PM TYPE34
          ESAC
          CASE 35
            PM TYPE35
          ESAC
          CASE 40
            PM TYPE40
          ESAC
      ESACOD
      PEXIT
C
C     PRINT CONTROL
C
      PENTRY PRTCTL
      IF  (LINE.LE.0)
          LINE=MAXLN
          PAGE=PAGE+1
          WRITE(FRPT,10)RPTNO,GDATE,GSDATE,GEDATE,PAGE
      FI
      PEXIT
C
C     CALCS - CALCULATE STATISTICAL DATA FROM RAW DATA FOR REPORTS
C
      PENTRY CALCS
      CALL TIMER(11,SDATE,GSDATE)
      CALL TIMER(11,EDATE,GEDATE)
      GTJOBS=0
      GTTLOG=0
      GTTMIN=0
      GTJCST=0
      GTTCST=0
      GTUCST=0
      DO   I=1,CINDX
           CALL DCALL(UIFIP,15,4,USID(I),USNAME(1,I),UISTAT)
           CALL DCALL(UIFIP,13,4,USID(I),USDEPT(I),UISTAT)
           GTJOBS=GTJOBS+USJOBS(I)
           GTTLOG=GTTLOG+USTLOG(I)
           GTTMIN=GTTMIN+USTMIN(I)
           USJCST(I)=USJCST(I)/100
           USTCST(I)=USTCST(I)/100
           GTJCST=GTJCST+USJCST(I)
           GTTCST=GTTCST+USTCST(I)
           USUCST(I)=USJCST(I)+USTCST(I)
           GTUCST=GTUCST+USUCST(I)
      OD
      GTTHRS=GTTMIN/60
      DO   I=1,CINDX
           USJPCT(I)=100*USJCST(I)/GTJCST
           USTPCT(I)=100*USTCST(I)/GTTCST
           USUPCT(I)=100*USUCST(I)/GTUCST
      OD
      PEXIT
C*************************************************************
C     REPORT SECTION
C
C*************************************************************
C
C     RPT01 - MONTHLY SUMMARY REPORT OF ALL USERS
C
      PENTRY RPT01
      RPTNO=1
      LINE=0
      DO   USERID=1,MAXUS
           INDX=USINDX(USERID)
           IF   (INDX.GT.0)
                LINE=LINE-1
                PM   PRTCTL
                IF   (LINE.EQ.MAXLN)
                     WRITE(FRPT,20)
                     WRITE(FRPT,30)
                FI
                USNO=USNO+1
                USTHRS=USTMIN(INDX)/60
                WRITE(FRPT,40)USNO,USERID
     *          ,USDEPT(INDX),(USNAME(J,INDX),J=1,7)
     *          ,USJOBS(INDX),USJCST(INDX),USJPCT(INDX)
     *          ,USTLOG(INDX),USTHRS,USTCST(INDX),USTPCT(INDX)
     *          ,USUCST(INDX),USUPCT(INDX)
           FI
      OD
      WRITE(FRPT,45)GTJOBS,GTJCST,GTTLOG,GTTHRS,GTTCST,GTUCST
      PEXIT
C
C     RPT02 - TOP 50 USERS BY BATCH JOB COST
C
      PENTRY RPT02
      CALL DSORT(USJCST,USIA,USWA,CINDX)
      RPTNO=2
      USNO=0
      LINE=0
      DO   I=1,50
           IF   (I.GT.CINDX)PEXIT
           INDX=USIA(I)
           USERID=USID(INDX)
                LINE=LINE-1
                PM   PRTCTL
                IF   (LINE.EQ.MAXLN)
                     WRITE(FRPT,50)
                     WRITE(FRPT,30)
                FI
                USNO=USNO+1
                USTHRS=USTMIN(INDX)/60
                WRITE(FRPT,40)USNO,USERID
     *          ,USDEPT(INDX),(USNAME(J,INDX),J=1,7)
     *          ,USJOBS(INDX),USJCST(INDX),USJPCT(INDX)
     *          ,USTLOG(INDX),USTHRS,USTCST(INDX),USTPCT(INDX)
     *          ,USUCST(INDX),USUPCT(INDX)
      OD
      PEXIT
C
C     RPT03 - TOP 50 USERS BY TSO COST
C
      PENTRY RPT03
      CALL DSORT(USTCST,USIA,USWA,CINDX)
      RPTNO=3
      USNO=0
      LINE=0
      DO   I=1,50
           IF   (I.GT.CINDX)PEXIT
           INDX=USIA(I)
           USERID=USID(INDX)
                LINE=LINE-1
                PM   PRTCTL
                IF   (LINE.EQ.MAXLN)
                     WRITE(FRPT,60)
                     WRITE(FRPT,30)
                FI
                USNO=USNO+1
                USTHRS=USTMIN(INDX)/60
                WRITE(FRPT,40)USNO,USERID
     *          ,USDEPT(INDX),(USNAME(J,INDX),J=1,7)
     *          ,USJOBS(INDX),USJCST(INDX),USJPCT(INDX)
     *          ,USTLOG(INDX),USTHRS,USTCST(INDX),USTPCT(INDX)
     *          ,USUCST(INDX),USUPCT(INDX)
      OD
      PEXIT
C
C     RPT04 - TOP 50 USERS BY TOTAL COST
C
      PENTRY RPT04
      CALL DSORT(USUCST,USIA,USWA,CINDX)
      RPTNO=4
      USNO=0
      LINE=0
      DO   I=1,50
           IF   (I.GT.CINDX)PEXIT
           INDX=USIA(I)
           USERID=USID(INDX)
                LINE=LINE-1
                PM   PRTCTL
                IF   (LINE.EQ.MAXLN)
                     WRITE(FRPT,70)
                     WRITE(FRPT,30)
                FI
                USNO=USNO+1
                USTHRS=USTMIN(INDX)/60
                WRITE(FRPT,40)USNO,USERID
     *          ,USDEPT(INDX),(USNAME(J,INDX),J=1,7)
     *          ,USJOBS(INDX),USJCST(INDX),USJPCT(INDX)
     *          ,USTLOG(INDX),USTHRS,USTCST(INDX),USTPCT(INDX)
     *          ,USUCST(INDX),USUPCT(INDX)
      OD
      PEXIT
C
C     RPT05 - TOP 50 USERS BY TSO CONNECT HOURS
C
      PENTRY RPT05
      CALL DSORT(USTMIN,USIA,USWA,CINDX)
      RPTNO=5
      USNO=0
      LINE=0
      DO   I=1,50
           IF   (I.GT.CINDX)PEXIT
           INDX=USIA(I)
           USERID=USID(INDX)
                LINE=LINE-1
                PM   PRTCTL
                IF   (LINE.EQ.MAXLN)
                     WRITE(FRPT,80)
                     WRITE(FRPT,30)
                FI
                USNO=USNO+1
                USTHRS=USTMIN(INDX)/60
                WRITE(FRPT,40)USNO,USERID
     *          ,USDEPT(INDX),(USNAME(J,INDX),J=1,7)
     *          ,USJOBS(INDX),USJCST(INDX),USJPCT(INDX)
     *          ,USTLOG(INDX),USTHRS,USTCST(INDX),USTPCT(INDX)
     *          ,USUCST(INDX),USUPCT(INDX)
      OD
      PEXIT
C
C     RPT06 - ALL USERS BY TOTAL COST WITHIN DEPARTMENT
C
      PENTRY RPT06
      CALL ADSORT(USDEPT,USUCST,USIA,USWA,USWA1,CINDX)
      RPTNO=6
      USNO=0
      LINE=0
      PDEPT=1
      LDEPT=0
      DO   I=1,CINDX
           INDX=USIA(I)
           USERID=USID(INDX)
           DEPT=USDEPT(INDX)
           LINE=LINE-1
           IF   (DEPT.NE.LDEPT)
                LDEPT=DEPT
                LINE=LINE-3
                PM   NEWDPT
                IF   (LINE.GT.0)
                     WRITE(FRPT,95)
     *               DEPT,(DPNAME(J,CDEPT),J=1,8)
                FI
           FI
           PM   PRTCTL
           IF   (LINE.EQ.MAXLN)
                WRITE(FRPT,90)
                WRITE(FRPT,30)
                WRITE(FRPT,95)DEPT,(DPNAME(J,CDEPT),J=1,8)
           FI
           USNO=USNO+1
           USTHRS=USTMIN(INDX)/60
           WRITE(FRPT,40)USNO,USERID
     *          ,USDEPT(INDX),(USNAME(J,INDX),J=1,7)
     *          ,USJOBS(INDX),USJCST(INDX),USJPCT(INDX)
     *          ,USTLOG(INDX),USTHRS,USTCST(INDX),USTPCT(INDX)
     *          ,USUCST(INDX),USUPCT(INDX)
      OD
      PEXIT
C
C     NEWDPT - SET CDEPT TO POINT TO NEW DEPARTMENT DATA
C
      PENTRY NEWDPT
      IF   (PDEPT.GT.MAXDP)PEXIT
      DO   WHILE,(DPNO(PDEPT).LT.DEPT)
           PDEPT=PDEPT+1
           IF   (PDEPT.GT.MAXDP)
                CDEPT=MAXIX
                PEXIT
           FI
      OD
      IF   (DPNO(PDEPT).GT.DEPT)
           CDEPT=MAXIX
      ELSE
           CDEPT=PDEPT
      FI
      PEXIT
C
C     RPT07 - DEPARTMENT SUMMARY
C
      PENTRY RPT07
      RPTNO=7
      USNO=0
      LINE=0
      PDEPT=1
      LDEPT=0
      DO   I=1,CINDX
           INDX=USIA(I)
           USERID=USID(INDX)
           DEPT=USDEPT(INDX)
           IF   (DEPT.NE.LDEPT)
                PM   PRTDPT
           FI
           DPUSER=DPUSER+1
           DPJOBS=DPJOBS+USJOBS(INDX)
           DPJCST=DPJCST+USJCST(INDX)
           DPTLOG=DPTLOG+USTLOG(INDX)
           DPTMIN=DPTMIN+USTMIN(INDX)
           DPTCST=DPTCST+USTCST(INDX)
           DPUCST=DPUCST+USUCST(INDX)
      OD
      PM   PRTDPT
      WRITE(FRPT,125)GTJOBS,GTJCST,GTTLOG,GTTHRS,GTTCST,GTUCST
      PEXIT
C
C     PRTDPT - PRINT DEPT SUMMARY LINE AND RESET
C
      PENTRY PRTDPT
      IF   (LDEPT.GT.0)
           DEPT=LDEPT
           PM   NEWDPT
           USNO=USNO+1
           DPJPCT=DPJCST*100/GTJCST
           DPTHRS=DPTMIN/60
           DPTPCT=DPTCST*100/GTTCST
           DPUPCT=DPUCST*100/GTUCST
           LINE=LINE-1
           PM   PRTCTL
           IF   (LINE.EQ.MAXLN)
                WRITE(FRPT,100)
                WRITE(FRPT,110)
           FI
           WRITE(FRPT,120)USNO,DPUSER
     *     ,LDEPT,(DPNAME(J,CDEPT),J=1,8)
     *     ,DPJOBS,DPJCST,DPJPCT
     *     ,DPTLOG,DPTHRS,DPTCST,DPTPCT
     *     ,DPUCST,DPUPCT
      FI
      LDEPT=USDEPT(INDX)
      DPUSER=0
      DPJOBS=0
      DPJCST=0
      DPTLOG=0
      DPTMIN=0
      DPTCST=0
      DPUCST=0
      PEXIT
C**************************************************************
C     PROCESS SMF RECORD SECTION
C
C**************************************************************
C
C     PROCESS TYPE 4 - STEP RECORDS PG 80
C
      PENTRY TYPE4
      L=0
      CALL SMFIO(MOVE,RTYPE,102,2,2,L)
      CALL SMFIO(MOVE,RTYPE,103+L,3,1,CPU,
     *                      30,5,0,CSR,
     *                      35,1,0,CSRSUF,
     *                      74,2,2,MEMORY)
      PM  PDEV
      CALL CS305(5,RCPTAB)
      USJCST(INDX)=USJCST(INDX)+COST
      PEXIT
C
C     PROCESS DEVICE ENTRIES FOR TYPE 4 AND 34
C
      PENTRY PDEV
      STEPTX=0
      STEPDX=0
      STEPHX=0
      STEPXX=0
      L=0
      IF  (RTYPE.NE.40)
          CALL SMFIO(MOVE,RTYPE,102,2,2,L)
          M=104
          N=102+L
      ELSE
          CALL SMFIO(MOVE,RTYPE,60,2,2,L)
          M=62
          N=60+L
      FI
      DO  WHILE,(M.LT.N)
          CALL SMFIO(MOVE,RTYPE,M,4,0,UCB,
     *                          M+4,4,0,EXCPS)
          CALL CS302(UCB,CHAN,CU,UNIT)
          DOCASE CHAN
               CASE 2
                    IF   (CU.EQ.6)
                         STEPDX=STEPDX+EXCPS
                    FI
               ESAC
               CASE 3
                    IF   (CU.EQ.9)
                         STEPTX=STEPTX+EXCPS
                    FI
               ESAC
               CASE 4
                    IF   (CU.EQ.7)
                         STEPDX=STEPDX+EXCPS
                    FI
               ESAC
               CASE 5
                    STEPHX=STEPHX+EXCPS
               ESAC
               CASE ELSE
                    STEPXX=STEPXX+EXCPS
C****
C     FPC 1287 SCANNER AT 016
C****
                    IF   ((CU.EQ.2).AND.(UNIT.EQ.7))
                         TSCAN=TSCAN+EXCPS
                    FI
               ESAC
          ESACOD
          M=M+8
      OD
      DEXCP=DEXCP+STEPDX
      TEXCP=TEXCP+STEPTX
      PEXIT
C
C     PROCESS TYPE 5 - JOB TERMINATION RECORDS - PG 85
C
      PENTRY TYPE5
      CALL SMFIO(MOVE,RTYPE,38,1,3,JSTEPS,
     *                      30,5,0,CSR,
     *                      72,1,0,JINIT,
     *                      35,1,0,CSRSUF)
      USJOBS(INDX)=USJOBS(INDX)+1
      PEXIT
C
C     PROCESS TYPE 6 - SYSOUT RECORDS - PG 86
C
      PENTRY TYPE6
      CALL SMFIO(MOVE,RTYPE,53,4,0,FORM,
     *                      84,4,0,FPAGE,
     *                      47,4,0,FLINE,
     *                      68,4,0,FDEVN,
     *                      39,4,0,SST,
     *                      02,4,0,SET)
      LINES=FLINE
      CALL CS305(5,RCPTAB)
      USJCST(INDX)=USJCST(INDX)+COST
      PEXIT
C
C     PROCESS TYPE 14 - INPUT DATA SET - PG 98
C
      PENTRY TYPE14
      PM  CHKDSN
      PEXIT
C
C     PROCESS TYPE 15 - OUTPUT DATA SET - PG 101
C
      PENTRY TYPE15
      PM  CHKDSN
      PEXIT
C
C     PROCESS TYPE 17 - SCRATCH DATA SET - PG 104
C
      PENTRY TYPE17
      CALL SMFIO(MOVE,RTYPE,40,44,0,DSN,
     *                      42,1,0,DSNPER,
     *                      88+2,6,0,DSNVOL)
      PEXIT
C     PROCESS TYPE 18 - RENAME DATA SET - PG 105
C
      PENTRY TYPE18
      CALL SMFIO(MOVE,RTYPE,40,44,0,DSN,
     *                      42,1,0,DSNPER,
     *                      132+2,6,0,DSNVOL)
      PEXIT
C
C     CHECK COMMON DSN DATA FOR 14 AND 15 RECORDS (REF JFCB FE PG 96)
C
      PENTRY CHKDSN
      CALL SMFIO(MOVE,RTYPE,38,1,3,DSORG)
      CALL SMFIO(MOVE,RTYPE,64,44,0,DSN,
     *                      66,1,0,DSNPER,
     *                      48+4,8,0,DDNAME,
     *                      64+102,2,0,BLKSI,
     *                      64+118,6,0,DSNVOL,
     *                      264+16,4,0,DSNXCP,
     *                      240+0,1,3,DSORG,
     *                      240+3,1,3,MACRF1,
     *                      240+4,1,3,MACRF2)
      PEXIT
C
C     PROCESS TYPE 20 - JOB COMMENCEMENT - PG 106
C
      PENTRY TYPE20
      CALL SMFIO(MOVE,RTYPE,30,5,0,CSR,
     *                      35,1,0,CSRSUF)
      PEXIT
C
C     PROCESS TYPE 26 - HASP JOB PURGE - PG 88 OR 124 (MVS)
C
      PENTRY TYPE26
      IF   (CPUID.EQ.1)
           CALL SMFIO(MOVE,RTYPE,30,5,0,CSR,
     *                      35,1,0,CSRSUF,
     *                      46+5,1,3,JOBTYP,
     *                      46+6,4,0,HASP,
     *                      46+18,20,0,PGMR,
     *                      46+39,1,0,JCLS,
     *                      46+40,2,2,JPRY,
     *                      46+42,2,2,PRTPRY,
     *                      132+04,4,0,RET,
     *                      132+28,4,0,XST,
     *                      132+36,4,0,XET,
     *                      132+44,4,0,PST,
     *                      132+52,4,0,PET,
     *                      132+08,4,0,RED,
     *                      132+32,4,0,XSD)
      ELSEIF (CPUID.EQ.2)
           CALL SMFIO(MOVE,RTYPE,30,5,0,CSR,
     *                      35,1,0,CSRSUF,
     *                      51,1,3,JOBTYP,
     *                      52,4,0,HASP,
     *                      64,20,0,PGMR,
     *                      85,1,0,JCLS,
     *                      86,1,3,JPRY,
     *                      88,1,3,PRTPRY,
     *                   16+144,4,0,RET,
     *                   16+168,4,0,XST,
     *                   16+176,4,0,XET,
     *                   16+184,4,0,PST,
     *                   16+192,4,0,PET,
     *                   16+148,4,0,RED,
     *                   16+172,4,0,XSD)
      ELSE
          PEXIT
      FI
      PEXIT
C
C     PROCESS TYPE34 - TSO SESSION - PG 90
C
      PENTRY TYPE34
      L=0
      CALL SMFIO(MOVE,RTYPE,102,2,2,L)
      CALL SMFIO(MOVE,RTYPE,86,4,0,AWSTRT,
     *                      94,4,0,QSTEPC,
     *                      78,4,0,QSTPIO,
     *                      90,4,0,AWEND,
     *                      51,2,2,STEPAC,
     *                      83,1,0,STEPAT,
     *                      54,8,0,PGM,
     *                      30,5,0,CSR,
     *                      35,1,0,CSRSUF,
     *                      2,4,0,XET,
     *                      22,4,0,XST,
     *                      26,4,0,STRTD,
     *                      22,4,0,STRTT,
     *                      2,4,0,ENDT,
     *                      74,2,2,MEMORY,
     *                      103+L,3,1,CPU,
     *                      43,4,0,TPLPUT,
     *                      47,4,0,TPLGET)
      PM  PDEV
      LINES=TPLPUT+TPLGET
      IF   (PGM.NE.TSOTMP)
           CPU=0
           MEMORY=0
      FI
      CALL CS305(5,RCPTAB)
      USTCST(INDX)=USTCST(INDX)+COST
      PEXIT
C
C     PROCESS TYPE 35 - TSO LOGOFF - PG 93
C
      PENTRY TYPE35
      CALL SMFIO(MOVE,RTYPE,30,5,0,CSR,
     *                      22,4,0,JTIME,
     *                      35,1,0,CSRSUF)
      MM=RTIME-JTIME
      IF   (MM.LT.0)MM=MM+T24HR
      USTMIN(INDX)=USTMIN(INDX)+MM/6000
      USTLOG(INDX)=USTLOG(INDX)+1
      PEXIT
C
C     PROCESS TYPE 40 - TSO ALLOC - PG 95
C
      PENTRY TYPE40
      PM  PDEV
      CALL CS305(5,RCPTAB)
      USTCST(INDX)=USTCST(INDX)+COST
      PEXIT
      END
      SUBROUTINE DSORT(A,IA,WA,MAX)
C
C     DESCENDING 1 ARRAY SORT
C
C     REF. ACM ALGORITHN 201 BY J.BOOTHROYD- SHELL SORT
C
C
      IMPLICIT INTEGER(A-Z)
      INTEGER  A(1),IA(1),WA(1)
      DO   I=1,MAX
           IA(I)=I
           WA(I)=A(I)
      OD
      I=1
      M=2*I-1
      DO   WHILE,(M.LT.MAX)
           I=I+I
           M=2*I-1
      OD
      M=M/2
      DO   WHILE,(M.GT.0)
           K=MAX-M
           DO   J=1,K
                I1=J
                DO   WHILE,(I1.GE.1)
                     I2=I1+M
                     IF   (WA(I1).LT.WA(I2))
                          IT=WA(I1)
                          WA(I1)=WA(I2)
                          WA(I2)=IT
                          IT=IA(I1)
                          IA(I1)=IA(I2)
                          IA(I2)=IT
                     FI
                     I1=I1-M
                OD
           OD
           M=M/2
      OD
      RETURN
      END
      SUBROUTINE ADSORT(A,A1,IA,WA,WA1,MAX)
C
C     ASCENDING/DESCENDING 2 ARRAY INTEGER SORT
C
C     REF. ACM ALGORITHN 201 BY J.BOOTHROYD- SHELL SORT
C
C
      IMPLICIT INTEGER(A-Z)
      INTEGER  A(1),A1(1),IA(1),WA(1),WA1(1)
      DO   I=1,MAX
           IA(I)=I
           WA(I)=A(I)
           WA1(I)=A1(I)
      OD
      I=1
      M=2*I-1
      DO   WHILE,(M.LT.MAX)
           I=I+I
           M=2*I-1
      OD
      M=M/2
      DO   WHILE,(M.GT.0)
           K=MAX-M
           DO   J=1,K
                I1=J
                DO   WHILE,(I1.GE.1)
                     I2=I1+M
                     IF  (    (WA(I1).GT.WA(I2))
     *                    .OR.(      (WA(I1).EQ.WA(I2))
     *                          .AND.(WA1(I1).LT.WA1(I2))
     *                        )
     *                   )
                          IT=WA(I1)
                          WA(I1)=WA(I2)
                          WA(I2)=IT
                          IT=WA1(I1)
                          WA1(I1)=WA1(I2)
                          WA1(I2)=IT
                          IT=IA(I1)
                          IA(I1)=IA(I2)
                          IA(I2)=IT
                     FI
                     I1=I1-M
                OD
           OD
           M=M/2
      OD
      RETURN
      END
