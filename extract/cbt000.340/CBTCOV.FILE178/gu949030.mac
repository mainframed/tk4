C          DATA SET GU949030   AT LEVEL 006 AS OF 11/12/79
C          DATA SET GU949030   AT LEVEL 005 AS OF 11/03/79
C          DATA SET GU949030   AT LEVEL 004 AS OF 10/19/79
C              PGM-ID.   GU949030.
C              DATE.     09/28/79.
C              AUTHOR.   DON HIGGINS
C              REMARKS.  THIS IS F/M PROGRAM FOR MONITOR FILE.
C                        IT CAN BE USED TO INITIALIZE FILE AND
C                        CHANGE PARAMETER RECORD 1.
C              REFERENCES.
C                  GC28-0708-0 OS/VS2 DEBUGGING HANDBOOK VOL. 1
C                  GC28-0709-1 OS/VS2 DEBUGGING HANDBOOK VOL. 2
C                  GC28-0710-0 OS/VS2 DEBUGGING HANDBOOK VOL. 3
C                  GC28-0886-0 OS/VS2 MVS PERFORMANCE NOTEBOOK
C                  GC28-0648-2 OS/VS2 TSO GUIDE TO COMMAND PROCESSORS
C                  GC28-0683-1 OS/VS2 SUPR. SERVICES MACRO INSTR.
C                  SY28-0715-1 OS/VS2 SYSTEM LOGIC LIBRARY
C
C              MAINTENANCE.
C
C                  11/03/79 DSH - ADD DISK UCB IO COUNT SECTION TO
C                                 RECORD FOR TRACKING IO.
C
C                  11/04/79 DSH - EXPAND UCB SECTION TO HANDLE UP
C                                 TO 200 ONLINE UCBS.
C
C
C              FILES.
C
C
C                  FT10F001 - DIRECT ACCESS LOG FILE
C
C                     THIS FILE CONTAINS A RECORD FOR EACH INTERVAL
C                     AND WRAPS AROUND EACH TIME THE FILE FILLS UP.
C
C                     RECORD LAYOUT IN WORDS (ALL VALUES ARE BINARY)
C
C                     FIRST RECORD IS USED TO STORE FIXED DATA
C                       1 INTERVAL  - INTERVAL IN MINUTES
C                       2 MAXREC    - MAXIMUM RECORDS ON FILE
C                      10 FNAME(10)   ASCBS TO BE ALWAYS LOGGED
C
C                     SECOND THROUGH LAST RECORD ARE AS FOLLOWS
C
C
C
C                     MVS(10)
C
C                       1 YYDDD    JULIAN DATE
C                       2 TIME     TIME OF DAY (0.01 SECONDS)
C                       3 IPLDAT   IPL JULIAN DATE
C                       4 IPLTIM   IPL TIME
C                       5 CURSTC   CURRENT SYSTEM TASKS
C                       6 CURTSO   CURRENT TSO TASKS
C                       7 CURJOB   CURRENT JOBS
C                       8 XCOMIO   XCOM I/O TOTAL SINCE IPL
C                       9 SPARE
C                      10 SPARE
C
C                     ANAME(10)    ADDRESS SPACE NAMES
C                                    (8 CHARACTER NAMES)
C
C                     ACPU(10)     ADDRESS SPACE CPU
C
C                     AIO(10)      ADDRESS SPACE I/O
C
C                     APG(10)      ADDRESS SPACE PAGING
C
C                       THE ABOVE 4 ARRAYS CONTAIN DATA
C                       ON THE ADDRESS SPACES NAMED IN
C                       THE ARRAY FNAME(10).
C
C                     UCB(200)     UP TO 200 UCB SIO
C                                  COUNT ENTRIES AS FOLLOWS
C                                    0-1 UCB IB X'0CUU'
C                                    2-3 UCB SIO COUNT IN
C                                        UNSIGNED BINARY
C
C
C
C
C
C     FILE DATA
C
      IMPLICIT INTEGER(A-Z)
      DEFINE FILE 10(2017,260,U,IX10)
      INTEGER MAXREC/2017/,MAXWDS/260/,MAXC/1040/
      INTEGER REC(260),LREC(260)
      INTEGER UCB(200),LUCB(200),MAXUCB/200/
      INTEGER ACPU(10),AIO(10),APG(10),MAXAS/10/
      INTEGER LCPU(10),LIO(10),LPG(10)
      REAL*8 LNAME(10),GDATE
      REAL*8 ANAME(10),FNAME(10)/10*' '/,BLANK/' '/
      INTEGER FMAST/10/,FRPT/6/,FCTL/5/
      INTEGER EOF/0/,FALSE/0/,TRUE/1/
      INTEGER TLAST/0/,TINTVL/5/
      EQUIVALENCE
     *   (LREC(01),LYYDDD)
     *  ,(LREC(02),LTIME)
     *  ,(LREC(08),LXCOM)
     *  ,(LREC(11),LNAME(1))
     *  ,(LREC(31),LCPU(1))
     *  ,(LREC(41),LIO(1))
     *  ,(LREC(51),LPG(1))
     *  ,(LREC(61),LUCB(1))
      EQUIVALENCE
     *   (REC(01),YYDDD)
     *  ,(REC(02),TIME)
     *  ,(REC(03),IPLDAT)
     *  ,(REC(04),IPLTIM)
     *  ,(REC(05),CURSTC)
     *  ,(REC(06),CURTSO)
     *  ,(REC(07),CURJOB)
     *  ,(REC(08),XCOM)
     *  ,(REC(11),ANAME(1))
     *  ,(REC(31),ACPU(1))
     *  ,(REC(41),AIO(1))
     *  ,(REC(51),APG(1))
     *  ,(REC(61),UCB(1))
C
C     FORMATS
C
   10 FORMAT(/1X,'FPCMON GU949030'
     * /' VER. 79.05.00 11/11/79'
     * /' TIME ',A8,I6,2I3
     *)
   20 FORMAT(/1X,'ENTER NEXT COMMAND OR 0')
   40 FORMAT(
     * /1X,' 0 - HELP INFORMATION'
     * /1X,'21 - RESET INTERVAL AND FIXED TASKS TO MONITOR'
     * /1X,'22 - INITIALIZE FILE'
     * /1X,'99 - END'
     *)
C
C     MAINLINE
C
      PM INIT
      PM   GET
      DO   WHILE,(EOF.NE.TRUE)
           PM PROC
           PM GET
      OD
      STOP
C
C     INIT  - INITIALIZATION
C
      PENTRY INIT
      CALL SBREAK(ECB)
      CALL NOSTAE
      CALL NOSPIE
      CALL OSDATE(GDATE)
      CALL TIMER(17,TODAY)
      CALL TIMER(9,TIME)
      CALL HHMMSS(TIME,HH,MM,SS)
      WRITE(FRPT,10)GDATE,TODAY,HH,MM
      PEXIT
C
C     GET
C
      PENTRY GET
      WRITE(FRPT,20)
      IF   (ECB.NE.0)ECB=0
      READ(FCTL,*,END=500)CMD
      PEXIT
  500 EOF=TRUE
      PEXIT
C
C     PROC - PROCESS TRANSACTION
C
      PENTRY PROC
      DOCASE CMD
        CASE 21
          PM CMD21
        ESAC
        CASE 22
          PM CMD22
        ESAC
        CASE 99
          IF  (CMD.EQ.99)STOP
        ESAC
        CASE ELSE
          WRITE(FRPT,40)
        ESAC
      ESACOD
      PEXIT
C
C     CMD21 - RESET INTERVAL AND ASCB'S TO BE MONITORED
C
      PENTRY CMD21
      WRITE(FRPT,21000)
21000 FORMAT(/1X,'CMD21 - RESET INTERVAL AND FIXED TASKS TO MONITOR')
21010 FORMAT(/1X,'INTERVAL=',I2,' MAXREC=',I5
     * //' ASCBS=',10(A8,1X))
21020 FORMAT(
     * /1X,'ENTER NEW INTERVAL AND FIXED TASKS (I2/10A8) OR BREAK')
21030 FORMAT(I2/10A8)
      READ(FMAST'1)REC
      WRITE(FRPT,21010)REC(1),REC(2),ANAME
      WRITE(FRPT,21020)
      READ(FCTL,21030)REC(1),ANAME
      IF   (ECB.NE.0)PEXIT
      REC(2)=MAXREC
      WRITE(FMAST'1)REC
      READ(FMAST'1)REC
      WRITE(FRPT,21010)REC(1),REC(2),ANAME
      PEXIT
C
C     CMD22 - INITIALIZE FILE
C
      PENTRY CMD22
      WRITE(FRPT,22000)
22000 FORMAT(/1X,'CMD22 - INITIALIZE FILE'/1X,'ENTER PASSWORD')
      CALL TIMER(17,TODAY)
      READ(FCTL,*)PASSWD
      IF   (PASSWD.NE.TODAY)PEXIT
      DO   I=1,MAXWDS
           REC(I)=0
      OD
      REC(1)=TINTVL
      REC(2)=MAXREC
      DO   I=1,MAXAS
           ANAME(I)=BLANK
      OD
      DO   I=1,MAXREC
           WRITE(FMAST'I)REC
      OD
      PEXIT
      END
