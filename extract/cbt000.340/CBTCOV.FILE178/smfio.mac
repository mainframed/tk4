*          DATA SET GU016400   AT LEVEL 002 AS OF 01/20/77
         TITLE 'GU0164000 - SMFIO'
*              AUTHOR.   DON HIGGINS.
*              DATE.     05/10/71.
*              REMARKS.  SMF IO INTERFACE FOR FORTRAN.
*
*                   ARGUMENT  TYPE      VALUE     DESCRIPTION
*
*                  1   IO     INTEGER     1       READ NEXT RECORD
*                                         2       RETURN FIELD VALUE
*                                         3       VALUE RETURNED AT EOF
*                                         4       COPY SMF RECORD
*                                         5       DUMP SMF RECORD
*
*                  2 RTYPE    INTEGER    0-20     RECORD TYPE CODE
*
*                  3 TIME     INTEGER             TIME OF DAY FOR READ
*                  3 OFFSET   INTEGER    0-UP     BYTE COUNT TO FIELD
*
*                  4 DATE     INTEGER             DATE FOR READ
*                  4 LENGTH   INTEGER    1-256    BYTE LENGTH OF FIELD
*
*                  5 OFFSET   INTEGER    0-UP     BYTE COUNT TO
*                                                 RECEIVING FIELD
*
*                  6 FIELD                        RECEIVING FIELD LABEL
*
*              FILES.
*                        SMFINPUT - VBS SMF INPUT FILE
*                        SMFCOPY  - VBS SMF OUTPUT FILE
*                        SMFDUMP  - FBA SMF SNAP DUMP FILE
*
*
*              REV1 06/07/76 DSH - CONVERT TO STRUCTURED FORM
*              REV2 06/28/76 DSH - ADD COPY AND DUMP OPTIONS
*              REV3 01/20/77 DSH - HANDLE MULTIPLE MOVES IN
*                                  ONE CALL TO INCREASE EFFICIENCY
*                                  OF HIGH USE SMF PGMS.
*
         TITLE 'MAINLINE'
SMFIO    SUBENTRY
         LM    R2,R7,0(R1)         LOAD ARGUMENT ADDRESSES
         IF    (CLI,STATUS,CLOSED,EQ)
               MVI  STATUS,OPENED
               OPEN (SMFINPUT)
         ELSEIF (CLI,STATUS,EOFSET,EQ)
               WTO  'SMFIO EOF IGNORED'
               ABEND 101,DUMP
         FI
         IF    (CLC,0(4,R2),=F'2',EQ)
               PM   MOVE
         ELSEIF (CLC,0(4,R2),=F'1',EQ)
               PM   READ
         ELSEIF (CLC,0(4,R2),=F'4',EQ)
               PM   COPY
         ELSEIF (CLC,0(4,R2),=F'5',EQ)
               PM   DUMP
         ELSE
               WTO  'SMFIO INVALID OPERATION CODE'
               ABEND 102,DUMP
         FI
         SUBEXIT
         TITLE 'READ NEXT SMF RECORD'
READ     PENTRY
         GET   SMFINPUT,BUFFER
         SR    R0,R0
         IC    R0,BUFFER+5
         ST    R0,0(R3)            SET RECORD TYPE
         MVC   0(4,R4),BUFFER+6    SET TIME OF DAY
         UNPK  DWORK,BUFFER+10(4)
         OI    DWORK+6,X'F0'
         TR    DWORK,EDITTAB-240
         PACK  PWORK,DWORK
         CVB   R0,PWORK
         ST    R0,0(R5)            SET DATE
         PEXIT
MOVE     PENTRY
         TITLE 'MOVE SMF FIELD'
         LA    R8,20(R1)                 R8=A(LAST ARG FLAG BYTE)
         DO    FOREVER
               LA    R0,BUFFER+4
               A     R0,0(R4)            R0=A(SENDING FIELD)
               L     R1,0(R5)            R1=LENGTH
               LR    R15,R1              R15=LENGTH
               LA    R14,0(R7)
               A     R14,0(R6)           R14=A(RECEIVING FIELD)
               MVCL  R14,R0
               IF    (CLI,0(R8),0,NE)
                     PEXIT
               FI
               LM    R4,R7,4(R8)
               LA    R8,16(R8)
         OD
         PEXIT
         TITLE 'COPY SMF RECORD'
COPY     PENTRY
         IF    (CLI,CFOPEN,TRUE,NE)
               OPEN (SMFCOPY,(OUTPUT))
               MVI  CFOPEN,TRUE
         FI
         PUT   SMFCOPY,BUFFER
         PEXIT
SMFCOPY  DCB   DSORG=PS,MACRF=PM,DDNAME=SMFCOPY
CFOPEN   LOGICAL FALSE,(TRUE,FALSE)
         TITLE 'DUMP SMF RECORD'
DUMP     PENTRY
         IF    (CLI,DFOPEN,TRUE,NE)
               MVI  DFOPEN,TRUE
               OPEN (SMFDUMP,(OUTPUT))
         FI
         LH    R1,BUFFER
         LA    R1,BUFFER(R1)
         ST    R1,LIST+4
         MVI   LIST+4,X'80'
         SNAP  DCB=SMFDUMP,LIST=LIST
         PEXIT
LIST     DS    0F
         DC    A(BUFFER,0)
SMFDUMP  DCB   DSORG=PS,RECFM=VBA,MACRF=W,BLKSIZE=1632,LRECL=125,      X
               DDNAME=SMFDUMP
DFOPEN   LOGICAL FALSE,(TRUE,FALSE)
         TITLE 'COMMON DATA'
EOF      TAG
         MVI   STATUS,EOFSET
         LA    R1,3
         ST    R1,0(R2)            SET EOF SWITCH
         SUBEXIT
         TITLE 'COMON DATA'
         EQUAL
STATUS   LOGICAL CLOSED,(CLOSED,OPENED,EOFSET)
SMFINPUT DCB   DDNAME=SMFINPUT,MACRF=GM,EODAD=EOF,DSORG=PS
PWORK    DC    D'0'
DWORK    DC    CL7' '
EDITTAB  DC    C'0123456789000000'
BUFFER   DS    0D
         DS    XL10000
         END
