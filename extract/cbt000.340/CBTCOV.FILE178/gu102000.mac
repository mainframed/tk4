*          DATA SET GU102000   AT LEVEL 046 AS OF 08/31/78
*          DATA SET GU102000   AT LEVEL 045 AS OF 08/31/78
*          DATA SET GU102000   AT LEVEL 044 AS OF 08/30/78
*          DATA SET GU102000   AT LEVEL 043 AS OF 07/29/78
*          DATA SET GU102000   AT LEVEL 039 AS OF 07/25/78
*          DATA SET GU102000   AT LEVEL 037 AS OF 06/27/78
*          DATA SET GU102000   AT LEVEL 036 AS OF 06/21/78
*          DATA SET GU102000   AT LEVEL 035 AS OF 06/20/78
*          DATA SET GU102000   AT LEVEL 023 AS OF 06/02/78
         TITLE 'GU102000 - SOURCE FILE COMPARE UTILITY'
*
*              PGM-ID. GU102000
*              AUTHOR. DON HIGGINS
*              DATE.   05/18/78
*              REMARKS.
*                      COMPARE TWO SOURCE FILES AND LIST CHANGES
*                      INCLUDING
*
*                        1. ADDITIONS
*                        2. DELETIONS
*                        3. BEGINNING OF MOVED BLOCKS
*                        4. ENDING OF MOVED BLOCKS
*
*              FILES
*
*                        1. SYSUT1 - NEW SOURCE FILE
*                        2. SYSUT2 - OLD SOURCE FILE
*                        3. SYSPRINT - LIST OF CHANGES
*                        4. PANDD1 - PAN LIBRARY (ONLY FOR OPTION 3)
*                        5. PANDD2 - PAN LIBRARY (ONLY FOR OPTION 4)
*
*
*              PARMETERS  -  PARM='1234'
*
*                    1.  LIST ALL RECORDS
*
*                           'F' - LIST ONLY DELETES AND ADDITIONS
*                                 TO NEW FILE (SYSUT1) - DEFAULT
*                           'T' - LIST ALL RECORDS IN NEW FILE SHOWING
*                                 ADDITIONS, DELETIONS, AND
*                                 MOVEMENT OF RECORDS.
*                    2.  COBOL SOURCE OPTION
*
*                           'F' - USE ALL COLUMNS 1-72 FOR MATCH (DEF)
*                           'T' - USE ONLY COL 7-72 FOR COBOL
*
*                    3.  PAN MEMBER NAME FOR PAN FILE PANDD1 (8 BYTES)
*
*                    4.  PAN MEMBER NAME FOR PAN FILE PANDD2 (8 BYTES)
*
*                        IF THE SECOND NAME IS NOT PRESENT, THE FIRST
*                        WILL BE USED FOR BOTH FILES.  IF THE SECOND
*                        FILE IS NOT DEFINED, BOTH PAN MEMBERS WILL
*                        BE READ FROM PANDD1.
*
*              REFERENCES
*
*                        1. "A TECHNIQUE FOR ISOLATING DIFFERENCES
*                            BETWEEN FILES" BY PAUL HECKEL OF
*                            INTERACTIVE SYSTEMS CONSULTANTS
*                            PUBLISHED IN APRIL 1978 ISSUE OF
*                            ACM COMMUNICATIONS. PROGRAM SYMBOLS
*                            NA, OA, ETC. REFER TO THIS DOCUMENT
*              NOTES.
*
*                1.  THIS PROGRAM USES DYNAMIC STORAGE ALLOCATION TO
*                    DETERMINE CHANGES. THE STORAGE REQUIREMENTS ARE
*                    AS FOLLOWS.
*                    A.  ONE 20 BYTE LINE CONTROL BLOCK (LCB) IS
*                        REQUIRED FOR EACH LINE IN EACH FILE.
*                    B.  ONE 88 BYTE KEY CONTROL BLOCK (KCB) IS
*                        REQUIRED FOR EACH UNIQUE LINE IN THE FILES.
*                        (MATCHING LINES ONLY REQUIRE ONE KCB)
*
*                2.  KCBS ARE LOCATED BY A KEY CONSISTING OF A 4
*                    BYTE HASH CODE AND THE 72 CHARACTER RECORD TEXT.
*                    THE HASH CODE IS CALCULATED BY ADDING UP THE
*                    TEXT 4 BYTES AT A TIME.  THE HASH CODE IS
*                    DIVIDED BY PRIME TO OBTAIN REMAINDER WHICH
*                    IS USED AS AN INDEX TO POINTER TO THE TOP
*                    KCB IN A BINARY TREE STRUCTURE FOR ALL KCBS
*                    WITH THE SAME HASH REMAINDER.  THE HASH CODE
*                    IS USED AS THE FIRST PART OF THE KEY TO
*                    BETTER BALANCE THE BINARY TREES AS THEY ARE
*                    BUILT FROM THE TWO FILES READ SEQUENTIALLY.
*
*              MAINTENANCE.
*
*                    07/25/78 DSH - ADD PRINTOUT OF PAN MEMBER
*                                   NAMES ON REPORT.
*
*                    07/29/78 DSH - ADD BLOCK COUNT TO STATISTICS
*                                   AND PRINT BLANK LINE BETWEEN
*                                   NON-ADJACENT ADDS AND DELETES.
*
*                    08/30/78 DSH - PRINT ERROR MESSAGE ON MISSING
*                                   ++INCLUDES BUT DON'T STOP COMPARE.
*                                   POLITELY TERMINATE WITH RC=16 WHEN
*                                   THERE IS INSUFFICIENT MEMORY.
*
*
*
*
*
*
*
*
         TITLE 'MAINLINE'
GU102000 SUBENTRY BASES=(R13,R12)
         PM    PARMS
         PM    INIT
         USING LCB,R10
         USING KCB,R11
         MVI   PASS,NEW
         LA    R8,NAPTRS
         PM    LOAD
         MVI   PASS,OLD
         LA    R8,OAPTRS
         PM    LOAD
         IF    (CLI,ERROR,TRUE,NE)
               PM    MATCHF NA(I+1)=J+1, OA(J+1)=I+1
               PM    MATCHB NA(I-1)=J-1, OA(J-1)=I-1
               PM    CHAIN  ADD DELETES FROM OA TO NA FOR LISTING
               PM    LIST
         ELSE
               LA    R2,=CL133' *** NO INPUT - COMPARE IMPOSSIBLE ***'
               PM    PRINT
         FI
         PM    STATS
         CLOSE (SYSPRINT)
         SUBEXIT
         TITLE 'PARMS - PROCESS PARMS'
PARMS    PENTRY
         L     R1,0(R1)
         IF    (CLC,0(2,R1),=H'1',NL)
               MVC  OPTION1,2(R1)
         FI
         IF    (CLC,0(2,R1),=H'2',NL)
               MVC  OPTION2,3(R1)
         FI
         IF    (CLC,0(2,R1),=H'10',NL)
               MVI  OPTION3,C'T'
               MVC  PGM1,4(R1)
         FI
         IF    (CLC,0(2,R1),=H'18',NL)
               MVI  OPTION4,C'T'
               MVC  PGM2,12(R1)
         FI
         PEXIT
         TITLE 'INIT - INITIALIZE DATA AREAS AND ACCESS METHODS'
INIT     PENTRY
         DTIME TIMEDATE
         SCALL SROSDATE,(GDATE)
         IF    (CLI,OPTION3,C'T',NE)
               OPEN  (SYSUT1,,SYSUT2,,SYSPRINT,(OUTPUT))
         ELSE
               MVI   PAN,TRUE
               MVC   DMEMBERS,=CL8'MEMBERS='
               OPEN  (SYSPRINT,(OUTPUT))
               LOAD  EP=PAM
               ST    R0,APAM
               L     R15,APAM
               LA    R15,POPEN(R15)
               CALL  (15),(ACTION,DDNAME,BACKUP),VL
               MVC   DOP,=CL8'POPEN'
               PM    CHKOP
               IF    (CLC,ACTION,=F'0',NE)
                     MVI  ERROR,TRUE
               FI
               MVC  NAME(8),PGM1
               L    R15,APAM
               LA   R15,PSRCH(R15)
               CALL (15),(ACTION,DIRENTRY,NAME,NAME2,COMMENT,SUBSET)
               MVC  DOP,=CL8'PSRCH'
               PM   CHKOP
               IF   (CLC,DIRENTRY+18(5),=C'COBOL',EQ)
                    MVI  OPTION2,C'T'
               FI
         FI
         L     R0,LINDEX
         PM    GETMAIN
         ST    R1,AINDEX
         ZR    R14
         ZR    R15
         LR    R0,R1
         L     R1,LINDEX
         MVCL  R0,R14
         PEXIT
         TITLE 'LOAD  - LOAD FILE SYSUT1 OR SYSUT2'
LOAD     PENTRY
         MVI   EOF,FALSE
         LR    R10,R8
         PM    GET
         DO    WHILE,(CLI,EOF,TRUE,NE)
               PM   ADDLCB
               PM   FINDKCB
               IF   (LTR,R11,R11,NZ)
                    IF   (CLI,PASS,OLD,EQ),AND,(CLI,KCBNCOC,KCBNC1,EQ)
                         ST   R10,KCBLCB
                         MVI  KCBNCOC,KCBNCOC1
                    ELSE
                         MVI  KCBNCOC,KCBNCOCX
                    FI
               ELSE
                    PM   ADDKCB
               FI
               ST   R11,LCBKCB
               MVI  LCBFLAGS,LCBADD
               PM   GET
         OD
         ST    R10,4(R8)
         L     R10,0(R8)
         IF    (LTR,R10,R10,NZ)
               ZR   R0
               ST   R0,LCBLAST
         ELSE
               MVI  ERROR,TRUE
         FI
         PEXIT
         TITLE 'GET RECORD FROM SYSUT1, SYSUT2, PANDD1, OR PANDD2'
GET      PENTRY
         IF    (CLI,PAN,FALSE,EQ)
               IF    (CLI,PASS,NEW,EQ)
                     GET   SYSUT1,RECORD
                     AP    PNEW,=P'1'
               ELSE
                     GET   SYSUT2,RECORD
                     AP    POLD,=P'1'
               FI
         ELSE
               PM    GETPAN
         FI
         PEXIT
GETEOF   MVI   EOF,TRUE
         PEXIT
GETPAN   PENTRY
         MVC   ACTION,=F'0'
         MVC   COMMENT(8),=CL8'NO-ENTRY'
         L     R15,APAM
         LA    R15,PREAD(R15)
         CALL  (15),(ACTION,RECORD,NAME,INCLUDES,COMMENT),VL
         MVC   DOP,=CL8'PREAD'
         PM    CHKOP
         IF    (CLC,RECORD(2),=C'$*',EQ)
               MVI   EOF,TRUE
               IF    (CLI,PASS,NEW,EQ)
                     FINDDD =CL8'PANDD2'
                     IF  (LTR,R1,R1,NZ)
                         MVC   ACTION,=F'0'
                         L     R15,APAM
                         LA    R15,PCLOSE(R15)
                         CALL  (15),(ACTION),VL
                         MVC   DOP,=CL8'PCLOSE'
                         PM    CHKOP
                         MVC   DDNAME,=CL8'PANDD2'
                         L     R15,APAM
                         LA    R15,POPEN(R15)
                         CALL  (15),(ACTION,DDNAME,BACKUP),VL
                         MVC   DOP,=CL8'POPEN'
                         PM    CHKOP
                         IF    (CLC,ACTION,=F'0',NE)
                               MVI  ERROR,TRUE
                         FI
                     FI
                     IF  (CLI,OPTION4,C'T',EQ)
                         MVC  NAME(8),PGM2
                     FI
               FI
         ELSE
               IF   (CLI,PASS,NEW,EQ)
                    AP   PNEW,=P'1'
               ELSE
                    AP   POLD,=P'1'
               FI
         FI
         PEXIT
         TITLE 'CHKOP - CHECK PAN OPERATION'
CHKOP    PENTRY
         IF    (CLC,ACTION,=F'0',EQ)
               PEXIT
         FI
         L     R0,ACTION
         IF    (CH,R0,=H'4',H)
               MVI  EOF,TRUE
               MVI  ERROR,TRUE
         FI
         CVD   R0,PWORK
         EDIT  TO=DACTION,FROM=PWORK+6,MASK=' Z99'
         LA    R2,DERRMSG
         PM    PRINT
         PEXIT
         TITLE 'ADDLCB - ADD LCB TO CURRENT LIST'
ADDLCB   PENTRY
         PM    GETLCB
         ST    R1,LCBNEXT
         ST    R10,LCBLAST-LCB(R1)
         LR    R10,R1
         IF    (CLI,OPTION2,C'T',EQ)
               MVC  LCBSEQ(6),RECORD
               MVC  RECORD(6),=CL6' '
         ELSE
               MVC  LCBSEQ,RECORD+72
         FI
         PEXIT
         TITLE 'FINDKCB - FIND MATCHING KCB IF PRESENT'
*
*        R11=ADDRESS OF MATCHING KCB OR ZERO
*        R2 =ADDRESS OF POINTER FOR NEW KCB IF R11 ZERO
*
FINDKCB  PENTRY
         L     R0,RECORD+00
         AL    R0,RECORD+04
         AL    R0,RECORD+08
         AL    R0,RECORD+12
         AL    R0,RECORD+16
         AL    R0,RECORD+20
         AL    R0,RECORD+24
         AL    R0,RECORD+28
         AL    R0,RECORD+32
         AL    R0,RECORD+36
         AL    R0,RECORD+40
         AL    R0,RECORD+44
         AL    R0,RECORD+48
         AL    R0,RECORD+52
         AL    R0,RECORD+56
         AL    R0,RECORD+60
         AL    R0,RECORD+64
         AL    R0,RECORD+68
         ST    R0,HASH
         LR    R1,R0
         ZR    R0
         D     R0,=A(PRIME)
         LR    R2,R0
         SLL   R2,2
         AL    R2,AINDEX
         L     R11,0(R2)
         IF    (LTR,R11,R11,Z)
               PEXIT
         FI
         ZR    R3
         DO    FOREVER
               IF   (CLC,KEY,KCBKEY,EQ)
                    PEXIT
               ELSEIF (L)
                    L    R1,KCBLOW
                    IF   (LTR,R1,R1,Z)
                         LA   R2,KCBLOW
                         ZR   R11
                         PM   CHKCNT
                         PEXIT
                    FI
               ELSE
                    L    R1,KCBHIGH
                    IF   (LTR,R1,R1,Z)
                         LA   R2,KCBHIGH
                         ZR   R11
                         PM   CHKCNT
                         PEXIT
                    FI
               FI
               AAI  R3,1
               LR   R11,R1
         OD
         TITLE 'ADDKCB - ADD NEW KCB'
ADDKCB   PENTRY
         PM    GETKCB
         LR    R11,R1
         ST    R11,0(R2)       STORE KCB ADDRESS IN FINDKCB POINTER
         MVC   KCBHASH,HASH
         MVC   KCBREC,RECORD
         IF    (CLI,PASS,NEW,EQ)
               MVI  KCBNCOC,KCBNC1
         ELSE
               MVI  KCBNCOC,KCBNCOCX
         FI
         PEXIT
         TITLE 'CHKCNT - CHECK SEARCH COUNTS'
CHKCNT   PENTRY
         IF    (CL,R3,MAXCNT,H)
               ST   R3,MAXCNT
         FI
         A     R3,TOTCNT
         ST   R3,TOTCNT
         PEXIT
         TITLE 'GETLCB - GET LCB USING BLOCKED GETMAINS'
GETLCB   PENTRY
         AP    PLCB,=P'1'
         LM    R14,R15,ALCBS
         IF    (S,R15,=A(LLCB),M)
               L    R0,=A(LLCBS)
               PM   GETMAIN
               LR   R14,R1
               L    R15,=A(LLCBS-LLCB)
         FI
         LR    R1,R14
         A     R14,=A(LLCB)
         STM   R14,R15,ALCBS
         XC    0(LLCB,R1),0(R1)
         PEXIT
         TITLE 'GETKCB - GET KCB USING BLOCKED GETMAINS'
GETKCB   PENTRY
         AP    PKCB,=P'1'
         LM    R14,R15,AKCBS
         IF    (S,R15,=A(LKCB),M)
               L    R0,=A(LKCBS)
               PM   GETMAIN
               LR   R14,R1
               L    R15,=A(LKCBS-LKCB)
         FI
         LR    R1,R14
         A     R14,=A(LKCB)
         STM   R14,R15,AKCBS
         XC    0(LKCB,R1),0(R1)
         PEXIT
         TITLE 'GETMAIN - OBTAIN MEMORY IF AVAIL OR TERMINATE RC=16'
GETMAIN  PENTRY
         ST    R2,GETMSAVE
         LR    R2,R0
         GETMAIN RC,LV=(R2)
         IF    (LTR,R15,R15,NZ)
               LA   R2,GETMMSG
               PM   PRINT
               PM   STATS
               SUBEXIT RC=16
         FI
         L     R2,GETMSAVE
         PEXIT
         TITLE 'MATCHF - MATCH RECORDS IN FORWARD DIRECTION'
MATCHF   PENTRY
         L     R10,NAPTRS
         DO    WHILE,(LTR,R10,R10,NZ)
               L    R11,LCBKCB
               IF   (CLI,KCBNCOC,KCBNCOC1,EQ)   FIND UNIQUE MATCH
                    MVI  LCBFLAGS,LCBMATCH+LCBSBLK
                    LR   R6,R10
                    L    R9,KCBLCB
                    ST   R10,LCBKCB-LCB(R9)     POINT OA(I) TO NA(I)
                    MVI  LCBFLAGS-LCB(R9),LCBMATCH+LCBALCB
                    L    R2,LCBNEXT
                    L    R3,LCBNEXT-LCB(R9)
                    PM   SCANF
                    LR   R10,R2
               ELSE
                    L    R10,LCBNEXT
               FI
         OD
         PEXIT
         TITLE 'SCANF - SCAN MATCHING RECORDS UNTIL EOF OR MISMATCH'
SCANF    PENTRY
         DO    WHILE,(LTR,R2,R2,NZ),AND,(LTR,R3,R3,NZ),AND,            X
               (CLC,LCBKCBA-LCB(3,R2),LCBKCBA-LCB(R3),EQ)
               LR   R6,R2
               MVI  LCBFLAGS-LCB(R2),LCBMATCH
               ST   R2,LCBKCB-LCB(R3)
               MVI  LCBFLAGS-LCB(R3),LCBMATCH+LCBALCB
               L    R2,LCBNEXT-LCB(R2)
               L    R3,LCBNEXT-LCB(R3)
         OD
         OI   LCBFLAGS-LCB(R6),LCBEBLK
         PEXIT
         TITLE 'MATCHB - MATCH RECORDS IN BACKWARD DIRECTION'
MATCHB   PENTRY
         L     R10,NAPTRS+4
         DO    WHILE,(LTR,R10,R10,NZ)
               L    R11,LCBKCB
               IF   (TM,LCBFLAGS,LCBMATCH+LCBSBLK,O) FIND START BLOCK
                    NI   LCBFLAGS,X'FF'-LCBSBLK
                    LR   R6,R10
                    L    R9,KCBLCB
                    L    R2,LCBLAST
                    L    R3,LCBLAST-LCB(R9)
                    PM   SCANB
                    LR   R10,R2
               ELSE
                    L    R10,LCBLAST
               FI
         OD
         PEXIT
         TITLE 'SCANB - SCAN MATCHING RECORDS UNTIL EOF OR MISMATCH'
SCANB    PENTRY
         DO    WHILE,(LTR,R2,R2,NZ),AND,(LTR,R3,R3,NZ),AND,            X
               (CLC,LCBKCBA-LCB(3,R2),LCBKCBA-LCB(R3),EQ)
               LR   R6,R2
               MVI  LCBFLAGS-LCB(R2),LCBMATCH
               ST   R2,LCBKCB-LCB(R3)
               MVI  LCBFLAGS-LCB(R3),LCBMATCH+LCBALCB
               L    R2,LCBLAST-LCB(R2)
               L    R3,LCBLAST-LCB(R3)
         OD
         OI   LCBFLAGS-LCB(R6),LCBSBLK
         AP   PBLOCK,=P'1'
         PEXIT
         TITLE 'CHAIN - CHAIN DELETES FROM OA TO NA FOR LISTING'
CHAIN    PENTRY
         LA    R9,NAPTRS
         L     R10,OAPTRS
         DO    WHILE,(LTR,R10,R10,NZ)
               L    R11,LCBKCB
               IF   (TM,LCBFLAGS,LCBMATCH+LCBALCB,O)
                    L    R9,LCBKCB
                    L    R10,LCBNEXT
               ELSE
                    L    R2,LCBNEXT
                    MVC  LCBNEXT,LCBNEXT-LCB(R9)
                    ST   R10,LCBNEXT-LCB(R9)
                    LR   R9,R10
                    MVI  LCBFLAGS,LCBDEL
                    LR   R10,R2
               FI
         OD
         PEXIT
         TITLE 'LIST - PRINT ADDITIONS, DELETIONS, AND BLOCKS'
LIST     PENTRY
         L     R10,NAPTRS
         DO    WHILE,(LTR,R10,R10,NZ)
               L    R11,LCBKCB
               IF   (TM,LCBFLAGS,LCBADD,O)
                    AP   PADD,=P'1'
               ELSEIF (TM,LCBFLAGS,LCBDEL,O)
                    AP   PDEL,=P'1'
               ELSE
                    AP   PMATCH,=P'1'
               FI
               MVC  DTYPE,=C'   '
               IF   (TM,LCBFLAGS,LCBADD+LCBDEL,NZ),OR,                 X
               (CLI,OPTION1,C'T',EQ)
                    IF   (TM,LCBFLAGS,LCBSBLK,O)
                         MVI  DTYPE,C'('
                    FI
                    IF   (TM,LCBFLAGS,LCBEBLK,O)
                         MVI  DTYPE+2,C')'
                    FI
                    IF   (TM,LCBFLAGS,LCBADD,O)
                         IF   (CLI,LTYPE,C' ',EQ),                     X
               AND,(CLI,OPTION1,C'T',NE)
                              LA   R2,HEAD3
                              PM   PRINT
                         FI
                         MVI  DTYPE+1,C'A'
                    ELSEIF (TM,LCBFLAGS,LCBDEL,O)
                         IF   (CLI,LTYPE,C'D',NE),                     X
               AND,(CLI,OPTION1,C'T',NE)
                              LA   R2,HEAD3
                              PM   PRINT
                         FI
                         MVI  DTYPE+1,C'D'
                    FI
                    IF   (CLI,OPTION2,C'T',EQ)
                         MVC  DREC(6),LCBSEQ
                         MVC  DREC+6(66),KCBREC+6
                         MVC  DREC+72(8),=CL8' '
                    ELSE
                         MVC  DREC(72),KCBREC
                         MVC  DREC+72(8),LCBSEQ
                    FI
                    LA   R2,DETAIL
                    PM   PRINT
               FI
               MVC  LTYPE,DTYPE+1
               L    R10,LCBNEXT
         OD
         PEXIT
         TITLE 'STATS - PRINT STATISTICS'
STATS    PENTRY
         EDIT  TO=DADD,FROM=PADD,MASK=' ZZ,Z99'
         EDIT  TO=DDEL,FROM=PDEL,MASK=' ZZ,Z99'
         EDIT  TO=DMATCH,FROM=PMATCH,MASK=' ZZ,Z99'
         EDIT  TO=DBLOCK,FROM=PBLOCK,MASK=' ZZ,Z99'
         LA    R2,HEAD3
         PM    PRINT
         LA    R2,DSTAT1
         PM    PRINT
         EDIT  TO=DNEW,FROM=PNEW,MASK=' ZZ,Z99'
         EDIT  TO=DOLD,FROM=POLD,MASK=' ZZ,Z99'
         LA    R2,DSTAT2
         PM    PRINT
         EDIT  TO=DLCB,FROM=PLCB,MASK=' ZZ,Z99'
         EDIT  TO=DKCB,FROM=PKCB,MASK=' ZZ,Z99'
         LA    R2,DSTAT3
         PM    PRINT
         ZAP   PWORK,POLD
         AP    PWORK,PNEW
         CVB   R2,PWORK
         ZR    R0
         L     R1,TOTCNT
         DR    R0,R2
         CVD   R1,PWORK
         EDIT  TO=DAVG,FROM=PWORK+6,MASK=' Z99'
         L     R0,MAXCNT
         CVD   R0,PWORK
         EDIT  TO=DMAX,FROM=PWORK+6,MASK=' Z99'
         LA    R2,DSTAT4
         PM    PRINT
         PEXIT
         TITLE 'PRINT - PRINT LINE WITH PAGE CONTROL'
PRINT    PENTRY
         IF    (SP,LINE,=P'1',NP)
               ZAP  LINE,=P'50'
               AP   PAGE,=P'1'
               EDIT TO=DPAGE,FROM=PAGE,MASK=' Z99'
               LA   R0,HEAD1
               PM   PUT
               LA   R0,HEAD2
               PM   PUT
               LA   R0,HEAD3
               PM   PUT
         FI
         LR    R0,R2
         PM    PUT
         PEXIT
         TITLE 'PUT - PUT SYSPRINT'
PUT      PENTRY
         PUT   SYSPRINT
         PEXIT
         TITLE 'COMMON DATA'
         EQUAL
PWORK    DC    D'0'
SYSUT1   DCB   DSORG=PS,RECFM=FB,LRECL=80,MACRF=GM,                    X
               DDNAME=SYSUT1,EODAD=GETEOF
SYSUT2   DCB   DSORG=PS,RECFM=FB,LRECL=80,MACRF=GM,                    X
               DDNAME=SYSUT2,EODAD=GETEOF
SYSPRINT DCB   DSORG=PS,RECFM=FA,BLKSIZE=133,DDNAME=SYSPRINT,MACRF=PM
LINE     DC    PL2'0'
PAGE     DC    PL2'0'
HEAD1    DS    0CL133
         DC    C'1GU102R01 FILE COMPARE LIST '
GDATE    DC    CL8' '
TIMEDATE DC    CL22' ',C'   PAGE'
DPAGE    DC    CL4' '
         FILL  HEAD1
HEAD2    DS    0CL133
         DC    C' TYPE  RECORD',CL10' '
DMEMBERS DC    CL8' ',C' '
PGM1     DC    CL8' ',C' '
PGM2     DC    CL8' '
         FILL  HEAD2
HEAD3    DC    CL133' '
DETAIL   DS    0CL133
         DC    C'  '
DTYPE    DC    C'   ',C'   '
DREC     DC    CL80' '
         FILL  DETAIL
PADD     DC    PL3'0'
PDEL     DC    PL3'0'
PMATCH   DC    PL3'0'
PBLOCK   DC    PL3'0'
POLD     DC    PL3'0'
PNEW     DC    PL3'0'
PLCB     DC    PL3'0'
PKCB     DC    PL3'0'
DSTAT1   DS    0CL133
         DC    C' STATISTICS  ADDS='
DADD     DC    CL7' ',C'  DELETES='
DDEL     DC    CL7' ',C'  MATCHES='
DMATCH   DC    CL7' ',C'  BLOCKS='
DBLOCK   DC    CL7' '
         FILL  DSTAT1
DSTAT2   DS    0CL133
         DC    C' STATISTICS  NEW FILE='
DNEW     DC    CL7' ',C'  OLD FILE='
DOLD     DC    CL7' '
         FILL  DSTAT2
DSTAT3   DS    0CL133
         DC    C' STATISTICS  LCBS(LINES)='
DLCB     DC    CL7' ',C'  KCBS(UNIQUE KEYS)='
DKCB     DC    CL7' '
         FILL  DSTAT3
DSTAT4   DS    0CL133
         DC    C' STATISTICS  AVG KCB SEARCH='
DAVG     DC    CL4' ',C'  MAX KCB SEARCH='
DMAX     DC    CL4' '
         FILL  DSTAT4
EOF      LOGICAL FALSE,(TRUE,FALSE)
ERROR    LOGICAL FALSE,(TRUE,FALSE)
PASS     LOGICAL NEW,(NEW,OLD)
LTYPE    DC    C' '
OPTION1  DC    C'F'
OPTION2  DC    C'F'
OPTION3  DC    C'F'
OPTION4  DC    C'F'
         DC    C'*** TOTCNT AND MAXCNT ***'
TOTCNT   DC    F'0'  TOTAL SEARCHES
MAXCNT   DC    F'0'  HIGH WATER MARK FOR LENGTH OF TABLE SEARCH
NAPTRS   DC    2A(0)
OAPTRS   DC    2A(0)
         DS    0F
KEY      DS    0CL(4+72)
HASH     DC    CL4' '
RECORD   DC    CL80' '
PRIME    EQU   997
LINDEX   DC    A(4*PRIME)
AINDEX   DC    A(0)
ALCBS    DC    2F'0'
AKCBS    DC    2F'0'
*
* PAN DATA
*
PAN      LOGICAL FALSE,(TRUE,FALSE)
ACTION   DC    F'0'
DIRENTRY DC    CL80' '
NAME2    DC    CL11'NO-ENTRY'
SUBSET   DC    CL27'NO-ENTRY'
DDNAME   DC    CL8'PANDD1'
BACKUP   DC    CL8'NO-ENTRY'
NAME     DC    CL22' '
INCLUDES DC    CL8'YES'
COMMENT  DC    CL52'NO-ENTRY'
APAM     DC    A(0)
POPEN    EQU   0
PSRCH    EQU   8
PREAD    EQU   16
PCLOSE   EQU   24
DERRMSG  DS    0CL133
         DC    C' ** GU102000 PAM ERROR IN '
DOP      DC    CL8' ',C' RC='
DACTION  DC    CL4' ',C'  ***'
         FILL  DERRMSG
GETMSAVE DC    F'0'
GETMMSG  DC    CL133' ** GU102000 GETMAIN ERROR - COMPARE TERMINATED'
         TITLE 'DSECTS'
*
* LCB - LINE CONTROL BLOCK
*
LCB      DSECT
LCBNEXT  DS    A      NEXT LCB
LCBLAST  DS    A      LAST LCB
LCBKCB   DS    0A     KCB OR LCB
LCBFLAGS DS    X
LCBMATCH EQU   X'80'  NA AND OA MATCH
LCBADD   EQU   X'40'  NA ADDITION
LCBDEL   EQU   X'20'  NA DELETION (CHAINED FROM OA)
LCBSBLK  EQU   X'10'  START OF MATCHING BLOCK
LCBEBLK  EQU   X'04'  END   OF MATCHING BLOCK
LCBALCB  EQU   X'02'  LCBKCB IN OA CONTAINS MATCHING NA LCB ADDRESS
LCBKCBA  DS    AL3
LCBSEQ   DS    CL8    SEQUENCE NUMBER (72-80 OR 1-6)
LLCB     EQU   *-LCB
LLCBS    EQU   200*LLCB
*
* KCB - KEY CONTROL BLOCK
*
KCB      DSECT
KCBLOW   DS    A    LOW  KCB
KCBHIGH  DS    A    HIGH KCB
KCBLCB   DS    0A   OA LCB
KCBNCOC  DS    X    SWITCHES TO DETERMINE UNIQUE MATCHES
KCBNC1   EQU   1       SET ON FIRST KCB IN NEW FILE
KCBNCOC1 EQU   2       SET ON FIRST KCB IN OLD FILE
KCBNCOCX EQU   3       SET IF NOT UNIQUE MATCH
KCBLCBA  DS    AL3
KCBKEY   DS    0CL(4+72)   COMPARE KEY
KCBHASH  DS    CL4         HASH CODE = 4 BYTE SUM OF KCBREC
KCBREC   DS    CL72        COMPARE RECORD
LKCB     EQU   *-KCB
LKCBS    EQU   100*LKCB
         END
