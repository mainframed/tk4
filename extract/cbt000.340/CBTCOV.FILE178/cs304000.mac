C          DATA SET CS304000   AT LEVEL 083 AS OF 12/05/79
C          DATA SET CS304000   AT LEVEL 082 AS OF 09/24/79
C          DATA SET CS304000   AT LEVEL 081 AS OF 09/23/79
C     PGM-ID.  CS304000
C     AUTHOR.  DON HIGGINS.
C     DATE.    07/09/76.
C     REMARKS. FPC SMF ANALIZER STEP 3
C              READ SORTED RECORDS FROM CS303000 AND PRODUCE
C              FOLLOWING REPORTS
C
C              CS304R41  PRODUCTION JOB ABNORMAL RUNS
C              CS304R42  PGM WHERE USED REPORT
C              CS304R43  CSR XREF AND COST REPORT
C              CS304R44  AREA PROGRAMMER XREF
C              CS304R45  JOB SCHEDULING REPORT
C              CS304R46  FORMS XREF AND USAGE REPORT
C              CS304R47  ABEND CROSS REFERENCE TO JOBS
C              CS304R48  JOB SCHEDULING EXCEPTION REPORT
C              CS304R49  USER ID COST SUMMARY REPORT
C              CS304R50  FILE CORSS REFERENCE REPORT
C
C     FILES.
C              FT06F001 - SYSTEM ERROR MESSAGES
C              FT10F001 - INITIATOR CLASS DEFINITIONS
C                         COL 1 = INITIATOR ID (A-H)
C                         COL 2-11= INITIATOR CLASSES
C              FT11F001 - USER DAILY SUMMARY AND EXCEPTION REPORTS
C
C                         THIS REPORT PRINTS A SEPARATE REPORT FOR
C                         EACH USER WITH THE FOLLOWING INFO.
C
C                            1. BATCH AND TSO JOB COST SUMMARY.
C                            2. EXCEPTIONS BY JOBNAME.
C                            3. DAILY OPERATIONS NOTES.
C
C
C              FT12F001 - INPUT FROM CS303000 SORTED
C              FT13F001 - OUTPUT TO CS314000 FOR PGM UPDATE
C              FT16F001 - REPORTS PASSED TO CS312000
C              FT21F001 - TABLE OF CONTENTS
C              UI005D01 - CSD USER MASTER FILE VIA UI010000
C     EXTERNAL.
C              TIMER    - TIME AND DATE INTERFACE (GU701000)
C              DCALL    - DYNAMIC CALL INTERFACE  (SR201000)
C              UI010000 - USER MASTER INTERFACE
C              HHMMSS   - CONVERT 0.01 SEC TO HOURS, MIN, SECS
C              AMOVE    - MOVE ANY LENGTH FIELD
C              CLCL     - COMPARE ANY LENGTH FIELD
C     REFERENCES.
C              OS/VS2-R1 SMF GC35-0004-4
C              OS/VS2-R3.7 SMF GC28-0706-1
C              OS/VS2-R3   RMF SC28-0922-0
C     MAINTENANCE.  REMEMBER TO CHANGE FORMAT DATE  *************
C
C     10/07/77 DSH - MISC. ENHANCEMENTS
C               1. SET FRPT=16 AND USE FT06F001 ONLY FOR ERRORS
C               2. PRINT ABEND TIME, DATE, AND COST ON R41
C               3. CHANGE WORDING ON USER EXCEPTION MESSAGES
C     10/18/77 DSH - FIX R48 TO IGNORE BAD INIT ID FOR MVS
C     10/31/77 DSH - MISC. FIXES AND CHANGES FOR MVS
C               1.  ADD USER MSG FOR PGM ACCESS EXCPT. AND IPLS
C               2.  EXTERNAL DOC. AND REF.
C               3.  CHANGE MREC TO XR WITH SAME SUBSCRIPT AS CS303
C
C     07/11/78 DSH - CORRECT WRONG RPT # WHEN SOME RPTS ARE NULL
C                    DATA DEFINITIONS.
C
C     01/22/79 DSH - SURPRESS PGM MASTER UPDATE RECORD FOR
C                    PROCEDURE RECORDS WITH 0 COST.
C
C     03/27/79 DSH - FIX COST RATES FOR RELEASE 79.1
C                    SEE OT780RS.SHRDOC(SMFDOC)
C
C     09/23/79 DSH - REL 79.2.0 REPLACE R45 WITH JOB SCHED REPORT
C
C     12/05/79 DSH - REL 79.2.2 FIX R41 ABEND/JOBLOG DATE AND TIME
C
      IMPLICIT INTEGER(A-Z)
      REAL*8 GDATE
      INTEGER  EOF/0/,TRUE/1/,FALSE/0/
      INTEGER  FRPT/16/,FMAST/12/,FPGM/13/,FINIT/10/,FURPT/11/
      INTEGER  LINE/0/,PAGE/0/,TIME(6),MAXLN/50/,FSYS/6/
      INTEGER  XR(20)
      INTEGER  TYPES/6/,CTYPE/0/,EOFR/0/
      INTEGER RPTNO/40/,FTOC/21/
      INTEGER TABEND/0/
      INTEGER WI(2)
      REAL*8  WR
      EQUIVALENCE (WR,WI(1))
C
C     PGM/JOB XREF DATA
C
      INTEGER  LPGM1/0/,LPGM2/0/,JOBS(26),JSTK/1/,JMAX/26/
      INTEGER  LJOB1/0/,LJOB2/0/,PJTYPE/'P'/
      INTEGER NPGMS/0/,TPGMC/0/
      INTEGER TPGMDX/0/,TPGMTX/0/,TPGMHX/0/,TPGMXX/0/
      INTEGER  RCPTAB(15)
      EQUIVALENCE
     *  (RCPTAB(01),CPU)
     * ,(RCPTAB(02),MEMORY)
     * ,(RCPTAB(03),DEXCP)
     * ,(RCPTAB(04),TEXCP)
     * ,(RCPTAB(05),RDRXCP)
     * ,(RCPTAB(06),LINES)
     * ,(RCPTAB(07),PCHXCP)
     * ,(RCPTAB(08),TSCAN)
     * ,(RCPTAB(09),DALLC)
     * ,(RCPTAB(10),TALLC)
     * ,(RCPTAB(11),COST)
     * ,(RCPTAB(12),DTMNTS)
     * ,(RCPTAB(15),TSOGPS)
C
C     CSR XREF DATA
C
      INTEGER  LCSR1/0/,LCSR2/0/,LSUF/0/,CSRS(24),CSTK/1/,CMAX/24/
      INTEGER  TCSRC/0/,TCSRJ/0/
C
C     PROGRAMMER NAME XREF DATA
C
      INTEGER NCOL/50/
      INTEGER LAREA/0/,NBLK/' '/,NSTK/1/,DAYT/'D'/
      INTEGER NAMES(8,200),NMAX/200/,NE/8/
C
C     JOB SCHEDULE DATA
C
      REAL*8  HJOB,BLKJOB/' '/,JN
      REAL*8  STKJN(13)/13*' '/
      INTEGER STKSD(13)/13*0/,STKST(13),STKED(13),STKET(13)
      INTEGER MAXSTK/13/,TJ/0/
C
C     FORMS DATA
C
      INTEGER  LFORM/0/,FORMS(24),FSTK/1/,FMAX/24/
      INTEGER TFJ/0/
C
C     ABEND XREF DATA
C
      INTEGER ABENDS(400,3)
      INTEGER ABSTK/1/,ABMAX/400/
      INTEGER ABROW/50/,ABCOL/8/
C
C     JOB SCHEDULING DATA
C
      INTEGER  LXSD,LXST,LRED,LRET,LHASP,LJCLS,LJPRY,LJINIT,LJTYP
      DATA     LXSD/0/,NEXCPT/0/,HOLD/'H'/
      INTEGER  TYPJOB/' '/
      INTEGER  INITC(10,10)/100*' '/,MAXIN/10/,MAXIC/10/
      INTEGER  INID(10)/10*' '/,INITMC(10)/10*10/,INITJ(10)/10*0/
      INTEGER  LSTIJ1(10)/10*0/,LSTIJ2(10)/10*0/
C
C     USER ID DATA
C
      REAL*8  UIFIP/'UI010000'/
      INTEGER USERID/0/,LUSER/-1/
      INTEGER UJOBS/0/,UJCOST/0/,UTSO/0/,UTMIN/0/,UTCOST/0/
      INTEGER TUSERS/0/,TUJOBS/0/,TUJC/0/,TUTSO/0/,TUTMIN/0/,TUTC/0/
      INTEGER UTOT/0/,TUTOT/0/
      INTEGER UJTYPE/' '/,UJTSO/'OT'/,UNAME(7)/'BAD ','JOB',5*' '/
      INTEGER CMAIL(7)/'CSD ','B-3',5*' '/
      REAL*8 REASON,CLSERR(6)/
     * 'CPU','MEMORY','I/O','LINES','TAPES','DISKS'/
      INTEGER TUPJOB/0/,TUERRS/0/,UPJTST/' '/,PJOB/'P'/
      INTEGER CDEPT/1360/
      INTEGER CUSERS/0/,CUJOBS/0/,CUJC/0/,CUTSO/0/
      INTEGER CUTMIN/0/,CUTC/0/,CUTOT/0/,CUPJOB/0/,CUERRS/0/
C
C     DSN XREF DATA
C
      INTEGER DSNS(18,100)
      INTEGER DSNSTK/0/,DSNMAX/100/
      INTEGER LDSN(11)/11*' '/,LDSNV(2)/2*' '/,LDSNJ(2)/2*' '/
C
C     SAVE SPACE BY OVERLAPING REPORT TABLES
C
      EQUIVALENCE (NAMES(1,1),JOBS(1),CSRS(1),FORMS(1)
     *    ,DSNS(1,1))
C
C     FORMATS
C
   10 FORMAT(
     *    '1','CS304R',I2,' SMF ANALYSIS REPORT '
     *   ,A8
     *   ,6A4,5X,'PAGE',I5
     *   ,T100,'CS304000 REL 79.2.2 12/05/79'
     */)
   20 FORMAT(
     *    1X,'ABNORMAL JOB REPORT'
     *  //1X,'JOBNAME   SMF-JOB-LOG-  ABEND  PGMNAME HHMM USID   COST'
     */)
   30 FORMAT(
     *    1X,2A4,2X,I7,I5,2X,A4,2X,2A4,I3,I2,I5,I7
     *)
   40 FORMAT(
     *   /1X,'TOTAL =',I5
     *)
   50 FORMAT(
     *    1X,'PROGRAM/JOB CROSS-REFERENCE REPORT'
     *  //1X,'PROGRAM  ',13('JOBNAME  ')
     */)
   60 FORMAT(
     *    1X,2A4,1X,13(2A4,1X)
     *)
   70 FORMAT(
     *    1X,'CSR CHARGES REPORT'
     *  //1X,' CSR  SUF ',8('JOBNAME   COST ')
     */)
   80 FORMAT(
     *    1X,A4,A1,2X,A1,2X,8(2A4,I6,1X)
     *)
   90 FORMAT(
     *    1X,A4,A1,2X,A1,2X,'TOTAL JOBS =',I5
     *   ,'   TOTAL COST =',I7
     */)
  100 FORMAT(
     *    1X,'PROGRAMMER NAME CROSS-REFERENCE WITHIN AREA'
     *  //1X,4('---PROGRAMMER-NAME---JOBNAME--T  ')
     */)
  110 FORMAT(
     *    1X,4(5A4,1X,2A4,1X,A1,2X)
     *)
  120 FORMAT(
     *    1X,'JOB SCHEDULING REPORT'
     * //'  DATE HH.MM.SS',13(' JOBNAME ')
     */)
  130 FORMAT(
     *   1X,I5,I3,'.',I2,'.',I2,13(1X,A8)
     *)
  140 FORMAT(
     *    1X,'FORMS CROSS-REFERENCE AND USAGE REPORT'
     *  //1X,'FORM ',6('JOBNAME  PAGES LINES ')
     */)
  150 FORMAT(
     *    1X,A4,1X,6(2A4,2I6,1X)
     *)
  160 FORMAT(
     *    1X,A4,2X,'TOTAL JOBS =',I5
     *   ,'   TOTAL PAGES =',I7
     *    ,'  TOTAL LINES =',I7
     */)
  170 FORMAT(
     *    1X,'    41     ABNORMAL JOB REPORT'
     *  / 1X,'    42     PROGRAM/JOB CROSS-REFERENCE'
     *  / 1X,'    43     CSR CHARGE REPORT'
     *  / 1X,'    44     PROGRAMMER CROSS-REFERENCE'
     *  / 1X,'    45     JOB SCHEDULING REPORT'
     *  / 1X,'    46     FORMS USAGE REPORT'
     *  / 1X,'    47     ABNORMAL JOB CROSS-REFERENCE'
     *  / 1X,'    48     JOB SCHEDULING EXECPTION REPORT'
     *  / 1X,'    49     USER ID COST SUMMARY'
     *  / 1X,'    50     FILE/JOB CROSS REFERENCE'
     *)
  180 FORMAT(
     *    1X,2A4,1X,2A4
     *   ,2X,'USES=',I5
     *   ,2X,'CPU-MIN=',I5
     *   ,2X,'D-EXCP=',I7
     *   ,2X,'T-EXCP=',I7
     *   ,2X,'LINES=',I7
     *   ,2X,'X-EXCP=',I7
     *   ,2X,'EST.COST=',I7
     *)
  190 FORMAT(
     *    1X,'ABNORMAL JOB CROSS-REFERENCE'
     *   //1X,8(' ABEND--JOBNAME')
     */)
  200 FORMAT(
     *   1X,8(2X,A4,1X,2A4)
     *)
  210 FORMAT(
     *    1X,'JOB SCHEDULING EXCEPTION REPORT'
     *  //1X,'NO. JOBNAME  START-TIME READR-TIME '
     *    ,'HASP CLS PRTY INIT TYP'
     */)
  220 FORMAT(
     *    1X,I3,1X,2A4,I6,I3,I2,I6,I3,I2,1X
     *   ,A4,2X,A1,I6,3X,A1,3X,A1
     *)
  230 FORMAT(
     *    1X,'USER ID COST SUMMARY REPORT'
     *  //1X,'USERID ---- USER NAME ------------- DEPT'
     *      ,'      JOBS      COST TSO-LOGON   TSO-MIN'
     *      ,'  TSO-COST  TOT-COST    P-JOBS     FLAGS'
     */)
  240 FORMAT(
     *    1X,I6,1X,7A4,1X,I4,8I10
     *)
  250 FORMAT(
     *   /1X,I6,1X,'RUNNING TOTAL',20X,8I10
     *)
  255 FORMAT(
     *   /1X,I6,1X,'CSD ONLY     ',20X,8I10
     *)
  270 FORMAT(
     *    1X,'FILE/JOB CROSS REFERENCE'
     *  //1X,2('JOBNAME  RFWF IOK VOLUME DATA-SET-NAME',28X)
     */)
  280 FORMAT(
     *    1X,2(2A4,I3,I2,1X,I3,1X,A4,A2,1X,10A4,1X)
     *)
  290 FORMAT(
     *    A1,10A1
     *)
  300 FORMAT(
     *    1X,'INIT=',A1,' CLASSES=',10A1,' TOTAL 8-5 JOBS=',I5
     *)
  310 FORMAT(
     *    '1','CS303R11 CSD USER EXCEPTION MEMO FOR ',7A4
     *    /1X,'                                     ',7A4
     *   //1X,'USER-ID = ',I4,' REPORT DATE = ',A8
     *   //1X,'FOR INFORMATION OR CHANGES CONTACT CSD STAFF SERVICES'
     *       ,' AT 866-4144'
     */)
  320 FORMAT(
     *   /1X,'JOB ',2A4,' CLASS ',A1,' SHOULD BE CLASS ',A1
     *   /1X,'DUE TO ',I1,' EXCEPTION(S) - THE FIRST EXCEPTION WAS ',A8
     *)
  330 FORMAT(
     *   /1X,'JOB ',2A4,' ACCESS EXCEPTION ON FILE ',11A4
     *)
  340 FORMAT(
     *   /1X,'JOB ',2A4,' ACCESS EXCEPTION ON PROGRAM ',2A4
     *)
  350 FORMAT(
     *   11X,'JOB ',2A4,I7,I5,' TERMINATED DUE TO SYSTEM PROBLEMS'
     *      ,' - SORRY ABOUT THAT')
C
C     MAINLINE
C
      CALL TIMER(12,TIME)
      CALL TIMER(13,GDATE)
      WRITE(FTOC,170)
      PM  INITS
      T8AM=8*60*60*100
      T5PM=17*60*60*100
      CALL DCALL(UIFIP,3,4,0,0,UISTAT)
      PM  GET
      DO  WHILE,(EOF.NE.TRUE)
          PM   RPTS
          PM   GET
      OD
      XR(1)=-1
      PM  RPTS
      STOP
C
C     INITS - INITIALIZE INITATOR CLASS TABLES
C
      PENTRY INITS
      DO  I=1,MAXIN
          READ(FINIT,290,END=2000)
     *    INID(I),(INITC(I,J),J=1,MAXIC)
          K=MAXIC
          DO   WHILE,(INITC(I,K).EQ.NBLK)
               K=K-1
          OD
          INITMC(I)=K
      OD
      PEXIT
 2000 MAXIN=I-1
      PEXIT
C
C     GET
C
      PENTRY GET
      READ(FMAST,END=1000)XR
      PEXIT
 1000 EOF=TRUE
      PEXIT
C
C     REPORTS DRIVER
C
      PENTRY RPTS
      IF  (CTYPE.NE.XR(1))
          EOFR=TRUE
          PM   SELECT
          EOFR=FALSE
          IF   (EOF.EQ.TRUE)PEXIT
          CTYPE=XR(1)
          RPTNO=CTYPE+40
          PAGE=0
          LINE=0
      FI
      PM  SELECT
      PEXIT
C
C     SELECT REPORT PROCESSOR
C
      PENTRY SELECT
      DOCASE   CTYPE
          CASE 1
            PM RPT1
          ESAC
          CASE 2
            PM RPT2
          ESAC
          CASE 3
            PM RPT3
          ESAC
          CASE 4
            PM RPT4
          ESAC
          CASE 5
            PM RPT5
          ESAC
          CASE 6
            PM RPT6
          ESAC
          CASE 7
            PM RPT7
          ESAC
          CASE 8
            PM RPT8
          ESAC
          CASE 9
            PM RPT9
          ESAC
          CASE 10
            PM RPT10
          ESAC
      ESACOD
      PEXIT
C
C     RPT1 - ABENDS
C
      PENTRY RPT1
      IF  (EOFR.EQ.TRUE)
          WRITE(FRPT,40)TABEND
          PEXIT
      FI
      LINE=LINE-1
      PM  PRTCTL
      IF  (LINE.EQ.MAXLN)WRITE(FRPT,20)
      CALL HHMMSS(XR(13),HH,MM,SS)
      WRITE(FRPT,30)
     *    XR(3),XR(4),XR(9),XR(8),XR(5),XR(6),XR(7)
     *   ,HH,MM,XR(10),XR(11)
      TABEND=TABEND+1
      PEXIT
C
C     PRTCTL - PAGE CONTROL
C
      PENTRY PRTCTL
      IF  (LINE.LE.0)
          LINE=MAXLN
          PAGE=PAGE+1
          WRITE(FRPT,10)
     *    RPTNO,
     *    GDATE,TIME,PAGE
      FI
      PEXIT
C
C     RPT2 - PGM XREF REPORT
C
      PENTRY RPT2
      IF ((EOFR.EQ.TRUE)
     *    .OR.(LPGM1.NE.XR(2))
     *    .OR.(LPGM2.NE.XR(3))
     *   )
          IF   (JSTK.GT.3)
               PM   PRTPGM
          FI
          IF   (JSTK.EQ.1)
               JOBS(1)=NBLK
               JOBS(2)=NBLK
          FI
          JSTK=1
          DO   I=1,15
               RCPTAB(I)=0
          OD
          CPU=TPGMC
          DEXCP=TPGMDX
          TEXCP=TPGMTX
          LINES=TPGMHX
          CALL CS305(5,RCPTAB)
          TCPUM=TPGMC/6000
          IF   (NPGMS.NE.0)
               LINE=LINE-1
               PM   PRTCTL
               IF   (LINE.EQ.MAXLN)WRITE(FRPT,50)
               WRITE(FRPT,180)
     *         LPGM1,LPGM2,JOBS(1),JOBS(2),NPGMS,TCPUM
     *        ,TPGMDX,TPGMTX,TPGMHX,TPGMXX,COST
C
C              WRITE RECORD FOR PGM MASTER UPDATE(SKIP PROCS)
C
               IF   (COST.NE.0)
                    WRITE(FPGM)
     *              LPGM1,LPGM2,LJOB1,LJOB2,JDATE,JTIME
     *             ,NPGMS,TPGMC,TPGMDX,TPGMTX,TPGMHX,COST
               FI
          FI
          NPGMS=0
          TPGMC=0
          TPGMDX=0
          TPGMTX=0
          TPGMHX=0
          TPGMXX=0
          LPGM1=XR(2)
          LPGM2=XR(3)
          LJOB1=0
          LJOB2=0
      FI
      NPGMS=NPGMS+1
      TPGMC=TPGMC+XR(6)
      TPGMDX=TPGMDX+XR(7)
      TPGMTX=TPGMTX+XR(8)
      TPGMHX=TPGMHX+XR(9)
      TPGMXX=TPGMXX+XR(10)
      IF ((LJOB1.EQ.XR(4)).AND.(LJOB2.EQ.XR(5)))PEXIT
      CALL AMOVE(1,3,LJOB2,0,TYPJOB)
      IF  (TYPJOB.NE.PJTYPE)
          LJOB1=XR(4)
          LJOB2=XR(5)
      FI
      JDATE=XR(11)
      JTIME=XR(12)
      JOBS(JSTK)=XR(4)
      JOBS(JSTK+1)=XR(5)
      JSTK=JSTK+2
      IF  (JSTK.GT.JMAX)
          PM   PRTPGM
      FI
      PEXIT
C
C     PRINT JOBS USED BY PGM
C
      PENTRY PRTPGM
      IF  (JSTK.EQ.1)PEXIT
      LINE=LINE-1
      PM  PRTCTL
      IF  (LINE.EQ.MAXLN)WRITE(FRPT,50)
      JSTK=JSTK-1
      WRITE(FRPT,60)
     *    LPGM1,LPGM2,(JOBS(I),I=1,JSTK)
      JSTK=1
      PEXIT
C
C     RPT3 - CSR XREF AND COST
C
      PENTRY RPT3
      IF  ((EOFR.EQ.TRUE)
     *     .OR.(LCSR1.NE.XR(2))
     *     .OR.(LCSR2.NE.XR(3))
     *     .OR.(LSUF.NE.XR(4))
     *    )
          PM   PRTCSR
          IF   (TCSRJ.GT.0)
               LINE=LINE-2
               WRITE(FRPT,90)
     *              LCSR1,LCSR2,LSUF,TCSRJ,TCSRC
          FI
          TCSRJ=0
          TCSRC=0
          LCSR1=XR(2)
          LCSR2=XR(3)
          LSUF=XR(4)
      FI
      TCSRJ=TCSRJ+1
      TCSRC=TCSRC+XR(7)
      CSRS(CSTK)=XR(5)
      CSRS(CSTK+1)=XR(6)
      CSRS(CSTK+2)=XR(7)
      CSTK=CSTK+3
      IF  (CSTK.GT.CMAX)
          PM   PRTCSR
      FI
      PEXIT
C
C     PRINT JOBS AND COSTS CHARGED TO CSRS
C
      PENTRY PRTCSR
      IF  (CSTK.EQ.1)PEXIT
      LINE=LINE-1
      PM  PRTCTL
      IF  (LINE.EQ.MAXLN)WRITE(FRPT,70)
      CSTK=CSTK-1
      WRITE(FRPT,80)
     *    LCSR1,LCSR2,LSUF,(CSRS(I),I=1,CSTK)
      CSTK=1
      PEXIT
C
C     RPT4 - PGMR XREF
C
      PENTRY RPT4
      IF  ((EOFR.EQ.TRUE)
     *     .OR.(LAREA.NE.XR(2))
     *    )
          PM   PRTNAM
          LAREA=XR(2)
      FI
      DO  I=1,7
          NAMES(I,NSTK)=XR(I+2)
      OD
      IF  ((XR(10).EQ.XR(12))
     *     .AND.(XR(11).GT.T8AM)
     *     .AND.(XR(13).LT.T5PM)
     *    )
          NAMES(8,NSTK)=DAYT
      ELSE
          NAMES(8,NSTK)=NBLK
      FI
      NSTK=NSTK+1
      IF  (NSTK.GT.NMAX)
          PM   PRTNAM
      FI
      PEXIT
C
C     PRINT PGMR NAME XREF PAGE
C
      PENTRY PRTNAM
      IF  (NSTK.EQ.1)PEXIT
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,100)
      DO  WHILE,(NSTK.LE.NMAX)
          DO   I=1,NE
               NAMES(I,NSTK)=NBLK
          OD
          NSTK=NSTK+1
      OD
      DO  I=1,NCOL
          J=I+3*NCOL
          WRITE(FRPT,110)
     *    ((NAMES(K,L),K=1,NE),L=I,J,NCOL)
      OD
      NSTK=1
      PEXIT
C
C     RPT5 - JOB SCHEDULE REPORT
C
      PENTRY RPT5
      IF   (EOFR.EQ.TRUE)
          NSJ=0
          JSD=99999
          DO  WHILE,(TJ.GT.0)
              PM   JENDS
          OD
          PEXIT
      FI
      JSD=XR(2)
      JST=XR(3)
      JED=XR(4)
      JET=XR(5)
      WI(1)=XR(6)
      WI(2)=XR(7)
      JN=WR
      PM   SETNSJ
      PM   JENDS
      IF   (NSJ.EQ.0)PEXIT
      TJ=TJ+1
      STKSD(NSJ)=JSD
      STKST(NSJ)=JST
      STKED(NSJ)=JED
      STKET(NSJ)=JET
      STKJN(NSJ)=JN
      JD=JSD
      JT=JST
      PM   PRTLN
      PEXIT
C
C     SET NSJ TO FIRST FREE SLOT IF ANY
C
      PENTRY SETNSJ
      NSJ=0
      DO   I=1,MAXSTK
           IF   (STKSD(I).EQ.0)
                NSJ=I
                PEXIT
           FI
      OD
      PEXIT
C
C     PRINT ALL JOBS ENDING BEFORE NEXT ONE STARTS
C
      PENTRY JENDS
      PM   FINDEJ
      DO   WHILE,(NEJ.NE.0)
           PM   DELJOB
           PM   FINDEJ
      OD
      PEXIT
C
C     FINDEJ - FIND EARLIEST END BEFORE CURRENT START JOB IF ANY
C
      PENTRY FINDEJ
      NEJ=0
      JD=JSD
      JT=JST
      DO   I=1,MAXSTK
        IF (STKSD(I).NE.0)
           IF   ((STKED(I).LT.JD)
     *           .OR.((STKED(I).EQ.JD).AND.(STKET(I).LT.JT))
     *          )
                NEJ=I
                JD=STKED(I)
                JT=STKET(I)
           FI
        FI
      OD
      PEXIT
C
C     DELJOB- PRINT END OF JOB AND DELETE FROM STACK
C
      PENTRY DELJOB
      PM   PRTLN
      STKSD(NEJ)=0
      STKJN(NEJ)=BLKJOB
      TJ=TJ-1
      PEXIT
C
C     PRTLN - PRINT LINE
C
      PENTRY PRTLN
      LINE=LINE-1
      PM   PRTCTL
      IF   (LINE.EQ.MAXLN)WRITE(FRPT,120)
      CALL HHMMSS(JT,HH,MM,SS)
      WRITE(FRPT,130)JD,HH,MM,SS,STKJN
      PEXIT
C
C     RPT6 - FORMS XREF AND USAGE
C
      PENTRY RPT6
      IF  ((EOFR.EQ.TRUE)
     *     .OR.(LFORM.NE.XR(2))
     *    )
          PM   PRTFRM
          IF   (TFJ.GT.1)
               LINE=LINE-2
               WRITE(FRPT,160)
     *              LFORM,TFJ,TFP,TFL
          ELSE
               LINE=LINE-1
               WRITE(FRPT,160)
          FI
          TFJ=0
          TFL=0
          TFP=0
          LFORM=XR(2)
      FI
      TFJ=TFJ+1
      TFL=TFL+XR(6)
      TFP=TFP+XR(5)
      FORMS(FSTK)=XR(3)
      FORMS(FSTK+1)=XR(4)
      FORMS(FSTK+2)=XR(5)
      FORMS(FSTK+3)=XR(6)
      FSTK=FSTK+4
      IF  (FSTK.GT.FMAX)
          PM   PRTFRM
      FI
      PEXIT
C
C     PRINT FORMS XREF AND USAGE
C
      PENTRY PRTFRM
      IF  (FSTK.EQ.1)PEXIT
      LINE=LINE-1
      PM  PRTCTL
      IF  (LINE.EQ.MAXLN)WRITE(FRPT,140)
      FSTK=FSTK-1
      WRITE(FRPT,150)
     *    LFORM,(FORMS(I),I=1,FSTK)
      FSTK=1
      PEXIT
C
C     RPT7 - ABEND CORSS-REFERENCE
C
      PENTRY RPT7
      IF  (EOFR.EQ.TRUE)
          PM   PRTAB
          PEXIT
      FI
      ABENDS(ABSTK,1)=XR(2)
      ABENDS(ABSTK,2)=XR(3)
      ABENDS(ABSTK,3)=XR(4)
      ABSTK=ABSTK+1
      IF  (ABSTK.GT.ABMAX)
          PM   PRTAB
      FI
      PEXIT
C
C     PRTAB - PRINT PAGE OF ABEND XREF
C
      PENTRY PRTAB
      IF  (ABSTK.EQ.1)PEXIT
      DO  WHILE,(ABSTK.LE.ABMAX)
          ABENDS(ABSTK,1)=NBLK
          ABENDS(ABSTK,2)=NBLK
          ABENDS(ABSTK,3)=NBLK
          ABSTK=ABSTK+1
      OD
      LINE=0
      PM  PRTCTL
      WRITE(FRPT,190)
      DO  I=1,ABROW
          J=I+(ABCOL-1)*ABROW
          WRITE(FRPT,200)
     *         ((ABENDS(K,L),L=1,3),K=I,J,ABROW)
      OD
      ABSTK=1
      PEXIT
C
C     RPT8 - JOB SCHEDULING EXCEPTION REPORT
C
      PENTRY RPT8
      IF  (EOFR.EQ.TRUE)
          LINE=LINE-12
          PM  PRTCTL
          IF  (LINE.EQ.MAXLN)WRITE(FRPT,210)
          WRITE(FRPT,250)
          WRITE(FRPT,300)
     *    (INID(I),(INITC(I,J),J=1,10),INITJ(I),I=1,MAXIN)
          PEXIT
      FI
      IF  (LXSD.EQ.0)
          PM   SAVE8
          PEXIT
      FI
      PM  CHK8
      IF  (EXCPT.EQ.TRUE)
          NEXCPT=NEXCPT+1
          LINE=LINE-3
          PM   PRTCTL
          IF   (LINE.EQ.MAXLN)WRITE(FRPT,210)
          CALL  HHMMSS(LXST,HH1,MM1,SS)
          CALL  HHMMSS(LRET,HH2,MM2,SS)
          WRITE(FRPT,220)
          WRITE(FRPT,220)
     *    NEXCPT,LJOB1,LJOB2,LXSD,HH1,MM1,LRED,HH2,MM2
     *   ,LHASP,LJCLS,LJPRY,LJINIT,LJTYP
          CALL HHMMSS(XR(3),HH1,MM1,SS)
          CALL HHMMSS(XR(7),HH2,MM2,SS)
          WRITE(FRPT,220)
     *    NEXCPT,XR(4),XR(5),XR(2),HH1,MM1,XR(6),HH2,MM2
     *   ,(XR(I),I=8,12)
      FI
      PM  SAVE8
      PEXIT
C
C     SAVE8 - SAVE CURRENT JOB INFO TO COMPARE WITH NEXT JOB
C
      PENTRY SAVE8
      LXSD  =XR( 2)
      LXST  =XR( 3)
      LJOB1 =XR( 4)
      LJOB2 =XR( 5)
      LRED  =XR( 6)
      LRET  =XR( 7)
      LHASP =XR( 8)
      LJCLS =XR( 9)
      LJPRY =XR(10)
      LJINIT=XR(11)
      LJTYP =XR(12)
      PEXIT
C
C     CHK8 - CHECK LAST JOB AGAINST CURRENT JOB FOR SCH. EXCEPTION
C
      PENTRY CHK8
      EXCPT=FALSE
      IF  ((LXST.LT.T8AM).OR.(LXST.GT.T5PM))PEXIT
      INITNO=0
      DO   I=1,MAXIN
           IF   (LJINIT.EQ.INID(I))INITNO=I
      OD
      IF   (INITNO.EQ.0)
C
C          INVALID CLASS FOR INITIATOR (IGNORE UNTIL MOD BACK ON)
C
C********  IF   (LJINIT.LT.0)EXCPT=TRUE
           PEXIT
      FI
      INITJ(INITNO)=INITJ(INITNO)+1
      LSTIJ1(INITNO)=LJOB1
      LSTIJ2(INITNO)=LJOB2
      LASTCN=0
      NEXTCN=0
      MAXIC=INITMC(INITNO)
      DO   I=1,MAXIC
           IF   (LJCLS.EQ.INITC(INITNO,I))LASTCN=I
           IF   (XR(9).EQ.INITC(INITNO,I))NEXTCN=I
      OD
      IF   (LASTCN.EQ.0)
           EXCPT=TRUE
           PEXIT
      FI
      IF  (LXSD.LT.XR(6))PEXIT
      IF  ((LXSD.EQ.XR(6)).AND.(LXST-12000.LT.XR(7)))PEXIT
C
C     BOTH JOBS WERE IN SYSTEM FOR  2 MIN WHEN LJOB WAS SELECTED
C
      IF  (XR(12).EQ.HOLD)PEXIT
      IF  (LJCLS.EQ.XR(9))
C
C         BOTH JOBS HAVE SAME CLASS AND NO HOLD
C
          IF   (LJPRY.EQ.XR(10))
C
C              BOTH JOBS HAVE SAME PRTY
C
               IF   (LRED.LT.XR(6))PEXIT
               IF  ((LRED.EQ.XR(6)).AND.(LRET.LE.XR(7)))PEXIT
C
C              EXCEPTION 1 BASED ON RDR TIME FOR EQUAL CLS AND PRTY
C
          ELSE
               IF   (LJPRY.GT.XR(10))PEXIT
C
C              EXCEPTION 2 BASED ON PRTY FOR EQUAL CLASS
C
          FI
      ELSE
C
C         JOBS HAVE UNEQUAL CLASS
C
          IF   (NEXTCN.EQ.0)PEXIT
C
C         BOTH ARE VALID AND UNEQUAL CLASSES FOR INITIATOR
C
          IF   (LASTCN.LT.NEXTCN)PEXIT
C
C         EXCEPTION 3 BASED ON INVALID CLASS SEQUENCE FOR INITIATOR
C
      FI
      DO   I=1,MAXIN
           IF  ((XR(4).EQ.LSTIJ1(I))
     *          .AND.(XR(5).EQ.LSTIJ2(I))
     *         )PEXIT
C
C              EXIT IF SECOND JOB DELAYED DUE TO DUPLICATE JOB
C
      OD
      EXCPT=TRUE
      PEXIT
C
C     RPT9 - USER ID COST SUMMARY
C
      PENTRY RPT9
      IF   ((EOFR.EQ.TRUE)
     *      .OR.(LUSER.NE.XR(2))
     *     )
           IF   (LUSER.NE.-1)
                LINE=LINE-1
                PM   PRTCTL
                IF   (LINE.EQ.MAXLN)WRITE(FRPT,230)
                UTOT=UJCOST+UTCOST
                WRITE(FRPT,240)
     *               LUSER,UNAME,DEPT
     *              ,UJOBS,UJCOST,UTSO,UTMIN,UTCOST,UTOT
     *              ,UPJOB,UERRS
                IF  (DEPT.EQ.CDEPT)
                    CUSERS=CUSERS+1
                    CUJOBS=CUJOBS+UJOBS
                    CUJC=CUJC+UJCOST
                    CUTSO=CUTSO+UTSO
                    CUTMIN=CUTMIN+UTMIN
                    CUTC=CUTC+UTCOST
                    CUTOT=CUTOT+UTOT
                    CUPJOB=CUPJOB+UPJOB
                    CUERRS=CUERRS+UERRS
                FI
                TUSERS=TUSERS+1
                TUJOBS=TUJOBS+UJOBS
                TUJC=TUJC+UJCOST
                TUTSO=TUTSO+UTSO
                TUTMIN=TUTMIN+UTMIN
                TUTC=TUTC+UTCOST
                TUTOT=TUTOT+UTOT
                TUPJOB=TUPJOB+UPJOB
                TUERRS=TUERRS+UERRS
           FI
           IF  ((XR(2).GE.1000).AND.(LUSER.LT.1000))
                WRITE(FRPT,250)
     *          TUSERS,TUJOBS,TUJC,TUTSO,TUTMIN,TUTC,TUTOT
     *         ,TUPJOB,TUERRS
                WRITE(FRPT,255)
     *          CUSERS,CUJOBS,CUJC,CUTSO,CUTMIN,CUTC,CUTOT
     *         ,CUPJOB,CUERRS
                LINE=0
           FI
           IF  (EOFR.EQ.TRUE)
                WRITE(FRPT,250)
     *          TUSERS,TUJOBS,TUJC,TUTSO,TUTMIN,TUTC,TUTOT
     *         ,TUPJOB,TUERRS
                PEXIT
           FI
           LUSER=XR(2)
           CALL AMOVE(20,0,XR(8),0,UNAME)
           DEPT=0
           UJOBS=0
           UJCOST=0
           UTSO=0
           UTMIN=0
           UTCOST=0
           UPJOB=0
           UERRS=0
           IF   (LUSER.GT.0)
                CALL DCALL(UIFIP,14,4,LUSER,CMAIL,UISTAT)
                CALL DCALL(UIFIP,15,4,LUSER,UNAME,UISTAT)
                CALL DCALL(UIFIP,13,4,LUSER,DEPT,UISTAT)
           FI
      FI
      IF   (XR(3).GT.1)
           IF   (LUERR.NE.LUSER)
                WRITE(FURPT,310)UNAME,CMAIL,LUSER,GDATE
                LUERR=LUSER
           FI
           STX=XR(3)
           DOCASE STX
             CASE 2
                  REASON=CLSERR(XR(10))
                  WRITE(FURPT,320)XR(4),XR(5),XR(7),XR(8)
     *               ,XR(9),REASON
             ESAC
             CASE 3
                  WRITE(FURPT,330)XR(4),XR(5),(XR(I),I=6,16)
             ESAC
             CASE 4
                  WRITE(FURPT,340)(XR(I),I=4,7)
             ESAC
             CASE 5
                  WRITE(FURPT,350)(XR(I),I=4,7)
             ESAC
           ESACOD
           PEXIT
      FI
      CALL AMOVE(2,0,XR(4),0,UJTYPE)
      IF   (UJTYPE.EQ.UJTSO)
           UTSO=UTSO+1
           UTMIN=UTMIN+XR(7)
           UTCOST=UTCOST+XR(6)
      ELSE
           UJOBS=UJOBS+1
           UJCOST=UJCOST+XR(6)
      FI
      CALL AMOVE(1,3,XR(5),0,UPJTST)
      IF   (UPJTST.EQ.PJOB)
           UPJOB=UPJOB+1
      FI
      UERRS=UERRS+XR(13)
      PEXIT
C
C     RPT 10 FILE/JOB CROSS REFERENCE REPORT
C
      PENTRY RPT10
      CALL CLCL(XR(2),44,LDSN,44,0,CLDSN)
      CALL CLCL(XR(13),6,LDSNV,6,0,CLDSNV)
      CALL CLCL(XR(15),8,LDSNJ,8,0,CLDSNJ)
      IF   ((EOFR.EQ.TRUE)
     *      .OR.(CLDSN.NE.2)
     *      .OR.(CLDSNV.NE.2)
     *      .OR.(CLDSNJ.NE.2)
     *     )
           PM   ADDDSN
           IF   (EOFR.EQ.TRUE)
                PM   PRTDSN
           FI
           CALL AMOVE(44,0,XR(2),0,LDSN)
           CALL AMOVE(6,0,XR(13),0,LDSNV)
           CALL AMOVE(8,0,XR(15),0,LDSNJ)
           LDSNR=0
           LDSNW=0
           LDSNIO=0
      FI
      IF   (XR(17).EQ.14)
           LDSNR=LDSNR+1
      ELSE
           LDSNW=LDSNW+1
      FI
      LDSNIO=LDSNIO+XR(18)
      PEXIT
C
C     ADD DSN ENTRY TO STACK FOR 2-UP PRINTING
C
      PENTRY ADDDSN
      IF   (DSNSTK.EQ.0)
           DSNSTK=1
           PEXIT
      FI
      CALL AMOVE(8,0,LDSNJ,0,DSNS(1,DSNSTK))
      DSNS(3,DSNSTK)=LDSNR
      DSNS(4,DSNSTK)=LDSNW
      DSNS(5,DSNSTK)=LDSNIO/1000
      CALL AMOVE(6,0,LDSNV,0,DSNS(6,DSNSTK))
      CALL AMOVE(44,0,LDSN,0,DSNS(8,DSNSTK))
      DSNSTK=DSNSTK+1
      IF   (DSNSTK.GT.DSNMAX)
           PM   PRTDSN
      FI
      PEXIT
C
C     PRINT DSN XREF REPORT PAGE 2-UP
C
      PENTRY PRTDSN
      IF   (DSNSTK.LE.1)PEXIT
      DO   WHILE,(DSNSTK.LE.DSNMAX)
           DO   I=1,17
                DSNS(I,DSNSTK)=0
           OD
           DSNSTK=DSNSTK+1
      OD
      LINE=0
      PM   PRTCTL
      WRITE(FRPT,270)
      DO   I=1,50
           J=I+50
           WRITE(FRPT,280)
     *          (DSNS(K,I),K=1,17)
     *         ,(DSNS(K,J),K=1,17)
      OD
      DSNSTK=1
      PEXIT
      END
