*          DATA SET GU014300   AT LEVEL 007 AS OF 01/25/73
GETPDSDE SUBENTRY
*              AUTHOR.   DON HIGGINS.
*              DATE.     11/11/72.
*              REMARKS.  GET NEXT DIRECTORY ENTRY NAME FROM PDS
*                        DIRECTORY.
*
*                        ARGUMENTS
*
*                          1. ADDRESS OF DCB FOR PDS DIRECTORY. IT
*                             MUST HAVE FOLLOWING CHARACTERISTICS AND
*                             BE OPEN FOR INPUT WITH NO EDDAD
*
*                             PDSDCB DCB DSORG=PS,MACRF=GL,         X
*                                        RECFM=F,BLKSIZE=256,       X
*                                            LRECL=256
*                                        DDNAME=XXXXXXXX
*                          2. ADDRESS OF END OF DIRECTORY ROUTINE
*
*                          3.  ADDRESS OF FULL WORD WHERE ADDRESS OF
*                              NEXT DE ENTRY NAME WILL BE PLACED.
*
*                        THIS ROUTINE IS REUSEABLE AND MAY BE USED
*                        TO READ SEVERAL DIRECTORIES CONCURRENTLY.
*
*
         LM    R2,R4,0(R1)
         USING IHADCB,R2
         L     R5,DCBEODAD
         TM    DCBEODAD+3,X'03'         IS IT ODD
         BZ    RELOAD                   NO, RELOAD LOD REGS
         LA    R0,WKLENGTH
         GETMAIN R,LV=(0)          NO,  GET WORKAREA
         LR    R5,R1
         USING WORKAREA,R5         R5=A(ADDR OF AREA SAVED IN EODAD)
         ST    R5,WKADDR           PUT ADDRESS OF AREA IN AREA FOR MVC
         XC    WKREGS,WKREGS       CLEAR AREA FOR WORK REGS
RELOAD   TAG
         LM    R6,R9,WKREGS        RELOAD
         AR    R6,R9               R6=A(NEXT ENTRY)
TESTEOB  CR    R6,R7               IS IT END OF BLOCK
         BNL   NEXTBLK             YES, GET NEXT BLOCK
         CLI   0(R6),X'FF'              IS IT END OF DIRECTORY
         BE    EOF                      YES, GO TO EOF
         ST    R6,0(R4)            STORE ADDRESS OF DE
         NI    11(R6),X'1F'        TURN OFF ALIAS AND POINT CNT BITS
         IC    R8,11(R6)
         LA    R9,12(R8,R8)        R9=12 + 2 X (HALF WORDS)
         STM   R6,R9,WKREGS        SAVE WORK REGS
         SUBEXIT
NEXTBLK  TAG
         MVC   DCBEODAD+1(3),=AL3(EOF)  SET LOCAL EOF IN DCB
         GET   (R2)                     GET NEXT BLOCK
         LR    R6,R1                    R6=A(BLOCK)
         MVC   WKREGS(2),0(R6)          ALIGN HALF WORK BLOCK LENGTH
         LH    R9,WKREGS           R9=LENGTH OF BLOCK
         LA    R7,0(R6,R9)         R7=A(END OF BLOCK)
         LA    R6,2(R6)            R6=A(FIRST ENTRY)
         MVC   DCBEODAD+1(3),WKADDR+1   SAVE WORK AREA ADDR IN EODAD
         B     TESTEOB                  PROCESS BLOCK
EOF      TAG
         MVC   DCBEODAD+1(3),=AL3(1) RESET EODAD
         LA    R0,WKLENGTH
         LR    R1,R5
         FREEMAIN R,LV=(0),A=(1)        FREE WORKAREA
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         L     R14,4(R1)
         BR    R14                 EXIT TO EOF ADDRESS
         LTORG
         EQUREGS
         DCBD  DSORG=PS
WORKAREA DSECT
WKADDR   DS    F                   ADDRESS OF GETMAIN WORKAREA
WKREGS   DS    0XL16
         DS    F                   R6=A(CURRENT DE)
         DS    F                   R7=A(END OF BLOCK)
         DS    F                   R8=INSERT WORK REG
         DS    F                   R9=LENGTH OF DE
WKLENGTH EQU   *-WORKAREA
         END   GETPDSDE
