*          DATA SET GU716001   AT LEVEL 008 AS OF 08/31/79
*          DATA SET GU716001   AT LEVEL 003 AS OF 08/28/79
*          DATA SET GU716001   AT LEVEL 002 AS OF 10/20/77
*          DATA SET GU716000   AT LEVEL 012 AS OF 08/14/75
         TITLE 'GU716000 - FPC JCL RDR PREPROCESSOR'
*              AUTHOR.   FRED BRISARD
*              DATE.     10/16/77.
*              REMARKS.  THIS PROGRAM IS A JOB CONTROL PREPROCESSOR
*                        WHICH PERFORMS THE FOLLOWING FUNCTION.
*
*                   1.   SUBMIT JCL AND/OR COMMANDS FROM A PAN.VALET
*                        FILE AT SPECIFIED TIMES.
*
*              FILES.
*
*                   SYSUT2    OUTPUT JCL FILE (HASP INTERNAL READER)
*                   SYSUT4    INPUT TIMING CONTROL FILE.
*
*                             1-4   HOUR AND MINUTE TO SUBMIT JCL
*                             5-12  MEMBER NAME ON PAN.VALET FILE
*                             13-19 DAYS OF WEEK TO SUBMIT MEMBER
*                                  (PUT ANY CHARACTER IN POSITION
*                                   FOR DESIRED DAYS IN SEQ. MTWRFSS)
*
*                   PANDD1    PAN MASTER
*
*
*        REV#1 TIMER FILE IS NOW CLOSED BETWEEN TIMER POPS TO
*              PREVENT I/O OR BAD DATA PROBLEMS RESULTING FROM
*              THE PDS BEING COMPRESSED. THIS ALSO CAUSES TIMER
*              FILE CHANGES TO BECOME EFFEACTIVE ON OR AFTER THE
*              THE NEXT TIMER POP RATHER THAN THE NEXT DAY.
*                                      08/30/79  R M JINKINS
*
*
         SPACE 3
         MACRO
&L       CALLPAM  &EP,&PARMS
         LCLC  &OFFSET
         AIF   ('&EP' NE 'POPEN').NPOPEN
&OFFSET  SETC  '0'
.NPOPEN  AIF   ('&EP' NE 'PSRCH').NPSRCH
&OFFSET  SETC  '8'
.NPSRCH  AIF   ('&EP' NE 'PREAD').NPREAD
&OFFSET  SETC  '16'
.NPREAD  AIF   ('&EP' NE 'PCLOSE').NPCLOSE
&OFFSET  SETC  '24'
.NPCLOSE ANOP
&L       L     15,PAMEP
         LA    15,&OFFSET.(,15)
         CALL  (15),&PARMS,VL,MF=(E,CALLMFL)
         MEND
         TITLE 'MAINLINE'
         PRINT ON,GEN
GU716000 SUBENTRY
         WTO   'FPCRDR STARTED'
         PM    PANRDR
         SUBEXIT
         TITLE 'PANRDR - PROCEDURE TO SUPPORT TIMED INPUT FROM PAN'
PANRDR   PENTRY
         LOAD  EP=PAM
         ST    R0,PAMEP
         SPACE 2                                                    RMJ
         DTIME TIMEDATE            GET STARTING TIME AND DATE       RMJ
         MVC  TOD(2),TIMEDATE+1                                     RMJ
         MVC  TOD+2(2),TIMEDATE+4                                   RMJ
         OC   TOD(4),=4C'0'                                         RMJ
         SPACE 2                                                    RMJ
*                                                                   RMJ
*  PREPARE AND WAIT FOR NEXT SUBMIT                                 RMJ
*                                                                   RMJ
         DO    FOREVER                                              RMJ
         SPACE 2                                                    RMJ
         IF    (TM,SYSUT4+48,X'10',Z)  IS TIMER FILE OPEN ?         RMJ
               OPEN (SYSUT4)       OPEN TIMER FILE                  RMJ
               MVI  CTLLOOP,TRUE   SHOW NOTHING READ                RMJ
         FI                                                         RMJ
         SPACE 2                                                    RMJ
         DO    UNTIL,(CLC,HHMM,TOD,NL)  SKIP ALL UNDER CURRENT TIME RMJ
               PM   GETCTL         GET NEXT TIMER CONTROL CARD      RMJ
         OD                                                         RMJ
         SPACE 2                                                    RMJ
         IF    (CLC,HHMM,TOD,EQ)   SUBMIT IF EQUAL CURRENT TIME     RMJ
               IF   (TM,SYSUT2+48,X'10',Z)  OPEN INTRDR IF NEEDED   RMJ
                    OPEN (SYSUT2,(OUTPUT))                          RMJ
               FI                                                   RMJ
               PM   SUBMIT                                          RMJ
         ELSE  ,                   THAT'S ALL TILL NEXT TIMER POP   RMJ
               IF   (TM,SYSUT2+48,X'10',O)  CLOSE INTRDR IF OPEN    RMJ
                    CLOSE (SYSUT2)                                  RMJ
               FI                                                   RMJ
               CLOSE (SYSUT4)      CLOSE TIMER FILE WHILE WE WAIT   RMJ
               SCALL GU719000,(DOW)
               L    R1,DOW
               SLL  R1,2
               LA   R1,DAYTAB-4(R1)
               MVC  DDAY,0(R1)
               SCALL SROSDATE,(MMDDYY)
               TIME DEC
               ST   R1,PWORK+4
               EDIT TO=DYYDDD,FROM=PWORK+5,MASK=' 99.999'
               MVC  DHHMM,HHMM
               WTO  MF=(E,WTONEXT)
               MVC  TOD(4),HHMM
               STIMER WAIT,TOD=TOD
         FI
         SPACE 2                                                    RMJ
         OD                        PLAY IT AGAIN SAM                RMJ
         TITLE 'GETCTL - GET NEXT TIMER CONTROL RECORD'
GETCTL   PENTRY
         GET   SYSUT4,CTLREC
         MVI   CTLLOOP,FALSE
         OC    HHMM,=4C'0'
         PEXIT
EOFUT4   TAG
         IF    (CLI,CTLLOOP,TRUE,EQ)
               WTO 'FPCRDR TIMER FILE EMPTY - TIMER INACTIVE'
         FI
         CLOSE (SYSUT4)
         STIMER WAIT,DINTVL=ONEMIN  WAIT A MINUTE AND TRY AGAIN     RMJ
         DTIME TIMEDATE             GET CURRENT TIME AND DATE       RMJ
         MVC  TOD(2),TIMEDATE+1                                     RMJ
         MVC  TOD+2(2),TIMEDATE+4                                   RMJ
         OC   TOD(4),=4C'0'                                         RMJ
         OPEN  (SYSUT4)
         MVI   CTLLOOP,TRUE         SHOW NO TIMER CNTL RECORDS READ RMJ
         B     GETCTL
         TITLE 'SUBMIT MEMBER FOR THIS TIME STOP'
SUBMIT   PENTRY
         SCALL GU719000,(DOW)
         L     R1,DOW
         LA    R1,DAYS-1(R1)
         IF    (CLI,0(R1),C' ',EQ) SUBMIT IT TODAY
               PEXIT
         FI
         SPACE 2
         MVI   ERR,0               RESET ERROR INDICATOR
         MVI   STATUS,0            RESET STATUS INDICATOR
         SPACE 2
         PM    PAMINIT             INITIALIZE THE PAN ACCESS METHOD
         SPACE 5
         IF    (CLI,ERR,0,EQ)      IF NO INIT ERR
               PM    PAMREAD       PROCESS THE PANVALET LIB MEMBER
         FI
         SPACE 5
         PM    PAMCLOSE            CLOSE THE PAN FILE
         SPACE 2
         PEXIT
         SPACE 5
*
*        PAN LIBRARY INITIALIZATION ROUTINE
*
         SPACE 2
PAMINIT  PENTRY
         SPACE 2
         SR    R0,R0               CLEAR
         ST    R0,PANACTN          INIT PAM FIELDS FOR A POPEN
         MVC   PANDDNM,=CL8'PANDD1'
         MVC   PANBKUP,NOENTRY
         CALLPAM POPEN,(PANACTN,PANDDNM,PANBKUP)
         SPACE 2
         IF    (CLI,PANACTN3,0,NE) IF PAM ERROR OCCURED
               PM    PANANAL       ANALYZE PAN RETURN
               OI    ERR,PANERR    INDICATE PAN ERROR
               PEXIT
         FI
         OI    STATUS,PANOPN       SHOW PAN LIB OPEN
         SPACE 2
         SR    R0,R0               CLEAR
         ST    R0,PANACTN          INIT PAM FIELDS FOR A PSRCH
         MVC   PANDIR,BLANKS
         MVC   PANNAME1,BLANKS
         MVC   PANNAME1(L'MEMBER),MEMBER
         MVC   PANNAME2,NOENTRY
         MVC   PANCMNT,NOENTRY
         MVC   PANSUBST,NOENTRY
         SPACE 2
         CALLPAM  PSRCH,                                               X
               (PANACTN,PANDIR,PANNAME1,PANNAME2,PANCMNT,PANSUBST)
         SPACE 1
         IF    (CLI,PANACTN3,0,NE) TEST PAN ACTION CODE
               PM    PANANAL       ANALYZE RETURN CODE
               OI   ERR,PANERR     SET ERROR INDICATOR
         FI
         PEXIT
         SPACE 5
*
*        PANVALET LIBRARY TO INTRDR COPY ROUTINE
*
         SPACE 2
PAMREAD  PENTRY
         SPACE 2
         DO    UNTIL,(CLC,=C'$* ',PANRECD,EQ)  LOOP UNTIL PAN EOF
         SPACE 2
               SR    R0,R0         SET UP FOR PAM PREAD
               ST    R0,PANACTN
               MVC   PANINCLD,=CL8'YES'
               MVC   PANCMNT,NOENTRY
               CALLPAM  PREAD,                                         X
               (PANACTN,PANRECD,PANNAME1,PANINCLD,PANCMNT)
               IF    (CLI,PANACTN3,0,NE)
                     PM    PANANAL CHECK FOR POSSIBLE ERROR
                     OI    ERR,PANERR  FLAG ERROR
                     PEXIT         EXIT IMMEDIATELY
               FI
               IF    (CLC,=C'$* ',PANRECD,EQ)
                     PUT   SYSUT2,=CL80'/*EOF'
               ELSE
                     PUT   SYSUT2,PANRECD PASS THE REC TO THE INTRDR
               FI
         SPACE 2
         OD
         PEXIT
         SPACE 2
*
*  PAN LIBRARY CLOSE ROUTINE
*
         SPACE 2
PAMCLOSE PENTRY
         SPACE 2
         IF    (TM,STATUS,PANOPN,O)
               SR    R0,R0         SET UP FOR PAM PCLOSE
               ST    R0,PANACTN
               CALLPAM PCLOSE,(PANACTN)
         FI
         SPACE 2
         PEXIT
         SPACE 5
*
*        PANVALET LIBRARY ERROR ANALYSIS ROUTINE
*
         SPACE 2
PANANAL  PENTRY
         IF    (CLI,PANACTN3,0,NE)
  WTO   'FPCRDR -- ERROR ON PANVALET LIBRARY...NOTIFY TECH SUPPORT'
         FI
         PEXIT
         SPACE 5
         TITLE 'COMMON DATA'
         EQUAL
SYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2
SYSUT4   DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT4,EODAD=EOFUT4
MODE     LOGICAL DRAINED,(DRAINED,WAITING,BUSY)
EOF      LOGICAL FALSE,(TRUE,FALSE)
CTLLOOP  LOGICAL TRUE,(TRUE,FALSE)
WTONEXT  DC    AL2(WTOEND-*,0)
         DC    C'FPCRDR '
DDAY     DC    CL4' ',C' '
MMDDYY   DC    CL8' ',C' '
DYYDDD   DC    CL7' '
         DC    C' NEXT FPCRDR CHECK AT '
DHHMM    DC    CL4' '
         DC    C' HOURS XXXXX'
WTOEND   EQU   *
DAYTAB   DC    C'MON TUESWED THURFRI SAT SUN '
TIMEDATE DC    CL22' '
TOD      DC    0D'0',8C'0'
ONEMIN   DC    0D'0',CL8'00010000'                                  RMJ
ZEROPARM DC    A(*+4,0)
CTLREC   DS    0CL80
HHMM     DS    CL4
MEMBER   DS    CL8
DAYS     DS    CL7
         FILL  CTLREC
PANMEM   DC    CL8' '
DOW      DC    F'0'
PWORK    DC    D'0'
INTERVAL DC    F'0'
TAD      DC    CL22' '
         SPACE 2
CALLMFL  CALL  ,(0,0,0,0,0,0),MF=L
         SPACE 2
STATUS   DC    X'00'               PANVALET INTERFACE STATUS FLAGS
PANOPN   EQU   X'80'                 PAN LIBRARY OPEN FOR BUSINESS
ERR      DC    X'00'               PANVALET INTERFACE ERROR FLAGS
PANERR   EQU   X'80'                 SOME TYPE OF ERROR ON PAN LIB
         SPACE 2
NOENTRY  DC    C'NO-ENTRY'
BLANKS   DC    CL80' '
         SPACE 2
*
*  PAM WORK AREAS
*
PAMEP    DS    A                   PAM ENTRY POINT ADDRESS
         SPACE 1
PANACTN  DS    F                   ACTION
PANACTN3 EQU   *-1
PANDIR   DS    CL80                DIRECTORY
PANNAME1 DS    CL22                NAME1
PANNAME2 DS    CL11                NAME2
PANCMNT  DS    CL52                COMMENT
PANSUBST DS    CL27                SUBSET
PANRECD  DS    CL80                OUTPUT RECORD FROM PAM
PANINCLD DS    CL8                 INCLUDE
PANDDNM  DS    CL8                 DDNAME
PANBKUP  DS    CL8                 BACKUP TAPE
         SPACE 2
         END   GU716000
