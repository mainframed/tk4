*          DATA SET GU027800   AT LEVEL 001 AS OF 06/21/77
*          DATA SET RA010500   AT LEVEL 001 AS OF 03/19/76
INFQ     TITLE 'INFILQ'
*************************************************************
*                                                           *
*                  CORE READ AND WRITE SUBROUTINE           *
*                                                           *
*************************************************************
*                                                           *
*  FORTRAN CALL:  CALL INFILQ (ARRAY,NBYTES)                *
*                                                           *
*      WHERE    ARRAY = A TEMPORARY INCORE BUFFER           *
*               NBYTES = NUMBER OF BYTES IN THE INCORE      *
*                        BUFFER                             *
*                                                           *
*************************************************************
INFILQ CSECT ,
       EXTRN IBCOM#
       EXTRN FIOCS#
*            FIRST ENTRY POINT. THIS ROUTINE PICKS UP OPERANDS
*            ONE AND TWO AND STORES THEM AT THE TWO FULL WORDS
*            AT BUFLOC.
       USING *,15
       SAVE  (14,12),T,*
       LM    2,3,0(1)        FETCH OPERAND ADDRESSES
       L     3,0(3)          FETCH OPERAND 2 (LENGTH)
       STM   2,3,BUFADR      STORE ADR BUFFER AND LENGTH
       LA    1,STRNG2        R1=A(SECOND ENTRY POINT)
       LA    3,CLOAD         SET BASE REGISTER FOR CLOAD
       BALR  2,3             LINK TO MODIFY IBCOM ADCON
       RETURN (14,12),T,RC=0
       DROP  15
*
*            SECOND ENTRY POINT.  IBCOM ENTERS AT STRNG2
*            THINKING IT WENT TO FIOCS. THIS ROUTINE
*            SIMULATES FIOCS BY POINTING TO BUFFER ADDRESS AND LENGTH
*            STORED BY FIRST ROUTINE.  IBCOM IS RESTORED TO
*            NORMAL, FOLLOWED BY RETURN TO IBCOM.  A WRITE BUFFER
*            IS INITIALIZED TO BLANKS BEFORE IBCOM FILLS IT
*            TO ALLOW T FORMAT TO WORK CORRECTLY.
       USING *,1
STRNG2 ST    4,SAVE4         SAVE R4
       LR    4,1             R4=A(STRNG2)
       USING STRNG2,4
       DROP  1
       LR    1,0             R1 POINTS TO FIOCS CALL PARAMETERS
       TM    1(1),X'0F'      TEST FOR OUTPUT, FIRST TIME
       BC    1,OUTPUT        BRANCH TO FIRST OUTPUT ROUTINE
       L     1,VFIOCS        R1=A(FIOCS) TO RESTORE IBCOM
       LA    3,CLOAD         SET BASE REGISTER FOR CLOAD
       BALR  2,3             LINK TO MODIFY IBCOM ADCON
       LM    2,3,BUFADR      LOAD ARRAY ADR AND LENGTH
       BC    15,RETURN       BRANCH TO RETURN TO IBCOM
OUTPUT LM    2,3,BUFADR      LOAD REGISTER WITH ARRAY ADR AND LENGTH
       MVI   0(2),X'40'      BLANK FIRST BUFFER LOCATION
       BCTR  3,0             -1 L-1 CHAR TO BE BLANKED
       BCTR  3,0             -1 LENGTH CODE FOR MOVE=LENGTH-1
       EX    3,DMOVE         EXECUTE DUMMY MOVE TO CLEAR BUFFER
       LA    3,2(3)          R3=R3+2 RESTORE ORIGINAL BUFFER LENGTH
RETURN L     4,SAVE4         RESTORE R4
       LR    1,0             R1=A(IBCOM ARGUMENTS)
       DROP  4
       B     6(1)            RETURN TO IBCOM
DMOVE  MVC   1(0,2),0(2)     EXECUTED. CLEARS UP TO 257 BYTE BUFFER
**           R1=AN ADDRESS CALLER WANTS STORED AT VFIOCS IN IBCOM
**           R15 MUST BE A(IBCOM) TO SATISFY BASE REGISTER REQMTS
**           IN IBCOM.  CALLER LOADS R3=A(CLOAD) FOR ME.
       USING *,3
CLOAD  ST    15,SAVE         SAVE R15
       L     15,VIBCOM       R15=A(IBCOM) FOR IBCOM BASE REGISTER
       MVI   74(15),X'50'    MAKE LOAD A STORE INSTRUCTION
       EX    0,74(15)        STORES R1 AT VFIOCS IN IBCOM
       MVI   74(15),X'58'    MAKE STORE A LOAD AGAIN IN IBCOM
       L     15,SAVE         RESTORE R15
       BCR   15,2            RETURN TO CALLER
BUFADR DS    2F              STORAGE FOR A(BUFFER) AND LENGTH
SAVE   DS    F
SAVE4  DS    F
VIBCOM DC    A(IBCOM#)       A(L 1,VIBCOM INSTN IN IBCOM-74)
VFIOCS DC    A(FIOCS#)       ADDRESS OF FIOCS ROUTINE
       END
