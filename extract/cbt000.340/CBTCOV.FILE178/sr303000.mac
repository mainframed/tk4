*          DATA SET SR303000   AT LEVEL 021 AS OF 03/15/78
*          DATA SET SR303000   AT LEVEL 020 AS OF 03/15/78
*          DATA SET SR303000   AT LEVEL 018 AS OF 03/14/78
*          DATA SET SR303000   AT LEVEL 015 AS OF 03/13/78
*          DATA SET SR303000   AT LEVEL 014 AS OF 03/06/78
*          DATA SET SR303000   AT LEVEL 013 AS OF 03/03/78
*          DATA SET SR303000   AT LEVEL 012 AS OF 03/02/78
*          DATA SET SR303000   AT LEVEL 008 AS OF 03/02/78
         TITLE 'SR303000 - CROSS MEMORY CALL INTERFACE SUBROUTINE'
*              PGMID.  SR303000.
*              AUTHOR. DON HIGGINS.
*              DATE.   02/27/78.
*              REMARKS.CROSS MEMORY CALL INTERFACE SUBROUTINE
*                            LOADED AND CALLED BY SR302000.
*              REFERENCES.
*                      SR301000 - CROSS MEMORY SVC #206 STORED IN LPA
*                      SR302000 - CALL INTERFACE IN FPC.SUBLIB WITH
*                                 THE FOLLOWING ENTRIES (ALIASES)
*                                 XCPATH - DEFINE PATH
*                                 XCTERM - TERMINATE PATH
*                                 XCGET  - GET MESSAGE
*                                 XCPUT  - PUT MESSAGE
*                                 XCWAIT - WAIT FOR MESSAGE
*                      SR304000 - TEST PROGRAM FOR CALL INTERFACE
*                      SR305000 - TSO DRIVER TO INTERFACE WITH
*                                 OTHER SYSTEMS VIA CALL INTERFACE
*                      AM013700 - XCOM MACRO FOR SVC INTERFACE
*
*
*              CALLS.
*                 1.   CALL XCPATH(PATH,ECB)
*
*                      DEFINE PATH
*
*                 2.   CALL XCTERM(PATH)
*
*                      TERMINATE PATH
*
*                 3.   CALL XCGET (PATH,TERM,MSG,LMSG)
*
*                      GET MESSAGE FROM PATH
*
*                 4.   CALL XCPUT (PATH,TERM,MSG,LMSG)
*
*                      PUT MESSAGE ON QUEUE TO PATH
*
*                 5.   CALL XCWAIT(PATH,ECB)
*
*                      WAIT FOR MESSAGE ON PATH
*
*                 6.   CALL XCSET(RMAX)
*
*                      SET MAXIMUM MSGS ALLOWED IN CSA QUEUE
*
*                 7.   CALL XCTP(TERM,PATH)
*
*                      SET PATH AS A FUNCTION OF TERM AND THE
*                      CURRENT OPERATING INVIRONMENT.
*
*                      A.  IF PATH IS ZERO, THERE IS NO PATH FOR
*                          THIS TERM.
*
*                      B.  IF TERM IS XGET, SCAN DDNAMES AND SET PATH
*                          TO XXXX IF DDNAME OF XGETXXXX IS FOUND.
*
*                      C.  IF TERM IS XNNN, SET PATH TO XNNN.
*
*                      D.  IF DDNAME XPUTYYYY IS FOUND, SET PATH
*                          TO YYYY FOR ALL TERM EXCEPT B AND C ABOVE.
*
*                      E.  IF LAST 4 BYTES OF TERM IS ZZZZ AND NOT
*                          BLANK, SET PATH TO ZZZZ. (THIS OPTION IS
*                          USED ONLY IF THERE IS NO XPUTYYYY DDNAME.
*
*              ARGUMENTS.
*                 1.   PATH  - 4 BYTE PATH NAME
*                 2.   ECB   - 4 BYTE EVENT CONTROL BLOCK
*                 3.   TERM  - 8 BYTE TERMINAL IDENTIFICATION
*                 4.   MSG   - MESSAGE AREA (UP TO 1988 BYTES)
*                 5.   LMSG  - 4 BYTE BINARY LENGTH OF MESSAGE
*                      A.  VALUE OF ZERO ON GET MEANS NO MESSAGES
*                          QUEUED AND XCWAIT CAN BE ISSUED.
*                      B.  NEGATIVE VALUES ARE COMPLIMENTED NON
*                          ZERO RETURN CODES FROM SVC
*                          1.  -12 MEANS CRITICAL STORAGE ERROR
*                              SUCH AS RMAX EXCEEDED.
*                          2.  -8  MEANS PARAMETER ERROR.
*                          3.  -16 MEANS NO USER CVT.
*                          4.  -20 MEANS CROSS MEMORY POST ERROR
*
*                 6.   RMAX - 4 BYTE BINARY MAX RECORD LIMIT
*
         TITLE 'MAINLINE'
SR303000 SUBENTRY
         DOCASE (R0)
               CASE 1
                 PM XCPATH
               ESAC
               CASE 2
                 PM XCTERM
               ESAC
               CASE 3
                 PM XCGET
               ESAC
               CASE 4
                 PM XCPUT
               ESAC
               CASE 5
                 PM XCWAIT
               ESAC
               CASE 6
                 PM XCSET
               ESAC
               CASE 7
                 PM XCTP
               ESAC
               CASE ELSE
                 LA R15,16
               ESAC
         ESACOD
         SUBEXIT RC=(R15)
         TITLE 'XCPATH - DEFINE PATH'
XCPATH   PENTRY
         IF   (TM,0(R1),X'80',O) IF NO ECB IN PARM SKIP DEF
              LA   R15,4
              PEXIT
         FI
         LM    R2,R3,0(R1)
         MVC   RNAME,0(R2)
         ENQ   (QNAME,RNAME,E,,SYSTEM)
         XCOM  DEF,PID=(R2),ECB=(R3),MF=(E,XCOMPARM)
         PEXIT
         TITLE 'XCTERM - TERMINATE PATH'
XCTERM   PENTRY
         L     R2,0(R1)
         MVC   RNAME,0(R2)
         ENQ   (QNAME,RNAME,E,,SYSTEM),RET=TEST
         IF    (LTR,R15,R15,NZ)
               DEQ   (QNAME,RNAME,,SYSTEM)
         FI
         XCOM  TRM,PID=(R2),MF=(E,XCOMPARM)
         PEXIT
         TITLE 'XCGET - GET MESSAGE'
XCGET    PENTRY
         LM    R2,R5,0(R1)
         L     R7,16
         L     R7,CVTUSER(R7)
         L     R7,UCVTXCVT(R7)
         L     R7,VTPCBH(R7)
         DO    WHILE,(LTR,R7,R7,NZ),AND,(CLC,PCBPID(4,R7),0(R2),NE)
               L    R7,PCBNEXT(R7)
         OD
         IF    (LTR,R7,R7,Z),OR,(CLC,PCBASCB(4,R7),PSAAOLD,NE)
               MVC  0(4,R5),=F'0'  IF NO PATH OR NOT MY PATH
               LA   R15,4          RETURN LMSG=0 AND SKIP GET
               PEXIT
         FI
         XCOM  GET,PID=(R2),MSG=XCMSG,MF=(E,XCOMPARM)
         IF    (CH,R15,=H'4',EQ)  DID WE GET A MESSAGE
               MVC  0(4,R5),=F'0' NO, RETURN LMSG=0
               PEXIT
         ELSEIF (CH,R15,=H'4',GT)
               LCR  R15,R15
               ST   R15,0(R5)
               PEXIT
         FI
         MVC   0(8,R3),MSGTERM  RETURN TERM FROM MESSAGE AREA
         LR    R0,R4
         L     R1,0(R5)
         LA    R14,MSGTEXT
         L     R15,MSGLMSG
         ICM   R15,8,=C' '
         MVCL  R0,R14
         SR    R15,R15
         PEXIT
         TITLE 'XCPUT - PUT MESSAGE'
XCPUT    PENTRY
         LM    R2,R5,0(R1)
         L     R7,16
         L     R7,CVTUSER(R7)
         L     R7,UCVTXCVT(R7)
         L     R7,VTPCBH(R7)
         DO    WHILE,(LTR,R7,R7,NZ),AND,(CLC,PCBPID(4,R7),0(R2),NE)
               L    R7,PCBNEXT(R7)
         OD
         IF    (LTR,R7,R7,Z)       IS THE PATH DEFINED NOW
               MVC  0(4,R5),=F'0'  NO, RETURN LMSG=0 AND SKIP PUT
               LA   R15,4
               PEXIT
         FI
         MVC   MSGTERM,0(R3) MOVE TERM TO MY MESSAGE AREA
         MVC   MSGLMSG,0(R5)    MOVE LMSG TO BY MESSAGE AREA
         LR    R0,R4
         L     R1,0(R5)
         IF    (CL,R1,=A(L'MSGTEXT),H)  IS MESSAGE TOO LONG
               MVC  0(4,R5),=F'-16'     YES, RETURN LMSG=0
               LA   R15,16
               PEXIT
         FI
         LA    R14,MSGTEXT
         LR    R15,R1
         MVCL  R14,R0  MOVE MSG TO MY MESSAGE TEXT AREA
         XCOM  PUT,PID=(R2),MSG=XCMSG,MF=(E,XCOMPARM)
         IF    (LTR,R15,R15,NZ)
               LCR  R15,R15
               ST   R15,0(R5)
         FI
         PEXIT
         TITLE 'XCWAIT - WAIT FOR MESSAGE ON PATH'
XCWAIT   PENTRY
         LM    R2,R3,0(R1)
         L     R7,16
         L     R7,CVTUSER(R7)
         L     R7,UCVTXCVT(R7)
         L     R7,VTPCBH(R7)
         DO    WHILE,(LTR,R7,R7,NZ),AND,(CLC,PCBPID(4,R7),0(R2),NE)
               L    R7,PCBNEXT(R7)
         OD
         IF    (LTR,R7,R7,NZ)       IS THERE A PCB
               L    R7,PCBECB(R7)
               LA   R3,0(R3)
               LA   R7,0(R7)
               IF   (CLR,R7,R3,EQ)  DOES PCB ECB MATCH PARM ECB
                    MVI  0(R7),0
                    WAIT ECB=(R7)   YES, TRY IT YOU'LL LIKE IT
               ELSE
                    LA   R15,16     NO, SOMETHING IS WRONG
               FI
         ELSE
               LA   R15,16
         FI
         PEXIT
         TITLE 'XCSET - SET MAXIMUM RECORDS IN CSA QUEUE'
XCSET    PENTRY
         L     R2,0(R1)
         XCOM  SET,RMAX=(R2),MF=(E,XCOMPARM)
         PEXIT
         TITLE 'XCTP - SET PATH AS A FUNCTION OF TERM'
XCTP     PENTRY
         LM    R2,R3,0(R1)
         IF    (CLI,XCTPSW,FALSE,EQ)
               MVI  XCTPSW,TRUE
               FINDDD =CL4'XPUT',DDLNG=4
               IF   (LTR,R1,R1,NZ)
                    MVI  XPUT,TRUE
                    MVC  XPUTPATH,8(R1)
               FI
               FINDDD =CL4'XGET',DDLNG=4
               IF   (LTR,R1,R1,NZ)
                    MVI  XGET,TRUE
                    MVC  XGETPATH,8(R1)
               FI
         FI
         IF    (CLC,0(4,R2),=C'XGET',EQ)
               MVC  0(4,R3),XGETPATH
         ELSEIF (CLI,XGET,TRUE,NE)
               MVC  0(4,R3),=F'0'
         ELSEIF (CLI,0(R2),C'X',EQ)
               MVC  0(4,R3),0(R2)
         ELSEIF (CLI,XPUT,TRUE,EQ)
               MVC  0(4,R3),XPUTPATH
         ELSEIF (CLC,4(4,R2),=CL4' ',NE)
               MVC  0(4,R3),4(R2)
         ELSE
               MVC  0(4,R3),=F'0'
         FI
         PEXIT
         TITLE 'COMMON DATA'
         EQUAL
XCOMPARM XCOM  MF=L
QNAME    DC    CL8'XCOMPATH'
RNAME    DC    CL4' '
XCTPSW   LOGICAL FALSE,(TRUE,FALSE)
XGET     LOGICAL FALSE,(TRUE,FALSE)
XPUT     LOGICAL FALSE,(TRUE,FALSE)
XGETPATH DC    F'0'
XPUTPATH DC    F'0'
CVTUSER  EQU   X'CC'
UCVTXCVT EQU   X'84'
PSAAOLD  EQU   X'224'
VTPCBH   EQU   X'0C'
PCBNEXT  EQU   X'00'
PCBPID   EQU   X'04'
PCBASCB  EQU   X'0C'
PCBECB   EQU   X'1C'
         DS    0D
XCMSG    DS    0XL2012
MSGTERM  DC    CL8' '
MSGLMSG  DC    F'0'
MSGTEXT  DS    XL2000
         END
