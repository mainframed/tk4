*          DATA SET UI011000   AT LEVEL 028 AS OF 10/25/78
         TITLE 'UI011000 - DATA SET SECURITY FILE INTERFACE'
*              AUTHOR.   DON HIGGINS.
*              DATE.     03/30/77.
*              REMARKS.  THIS SUBROUTINE DETERMINES IF A DATA
*                        SET NAME REQUIRES AUTHORIZATION TO
*                        ACCESS IT FOR READ OR WRITE.
*              CALL.     CALL DCALL('UI011000',RTYPE,USERID,DSN,UISTAT)
*
*                        RTYPE - TYPE OF ACCESS REQUESTED(SMF TYPE)
*
*                                  14 - READ ONLY
*                                  15 - WRITE OR UPDATE
*                                  17 - SCRATCH
*                                  18 - RENAME
*
*                        USERID - USER IDENTIFICATION NUMBER
*
*
*                        DSN - 44 CHARACTER DATA SET NAME.
*
*                        UISTAT - 4 BYTE BINARY STATUS
*
*                          0 -  AUTHORIZATION OK
*
*                          1 -  READ VIOLATION
*
*                          2 -  WRITE VIOLATION
*
*                          3 -  INVALID DSN ACCESS VIOLATION
*                               (REQ.SPECIFIC AUTH. TO SURPRESS)
*              FILES.
*                    UI011S01 - QSAM FILE DEFINING DSN CONTROLS
*
*                      RECORD   COLUMN  DESCRIPTION
*
*                           1      1    '1' - RECORD TYPE 1
*                           1      2    '0' - NO CONTROL
*                                       '1' - CONTROL WRITE ONLY
*                                       '2' - CONTROL READ AND WRITE
*                           1      3-46 DSN QUALIFIER
*                           2      1    '2' - RECORD TYPE 2
*                           2      2    '1' - USER AUTH. TO READ ONLY
*                                       '2' - USER AUTH. TO R/WRITE
*                           2      3-6  USER-ID
*                           2      7-76 (SAME AS 2-6)
*
*                      SAMPLE DATA.
*
*                           11FPC.         CONTROL WRITE TO FPC.
*                           220887           ALLOW 887 TO R/W
*                           10FPC.TESTLIB  ANYONE CAN R/W TO TESTLIB
*                           11SYS1.        CONTROL WRITE TO SYS1.
*                           220001           ALLOW 001 TO R/W
*                           12SYS1.UADS    CONTROL R/W ON SYS1.UADS
*                           220887           ALLOW 887 TO R/W
*                           12EI.          CONTROL R/W ON EI.
*                           220111           ALLOW 111 TO R/W
*                           12EI.PAYTIME   CONTROL R/W ON EI.PAYTIME
*                           210222           ALLOW 222 TO READ ONLY
*        NOTES.
*           1.  DATA SET QUALIFIERS MUST BE IN ORDER.
*
*        MAINTENANCE.
*
*        10/18/77 DSH - ADD LEVEL OPTION AND DOCUMENT PGM.
*        11/01/77 DSH - CHANGE RW AND RO TABLES TO 2 BYTE ENTRIES.
*        11/04/77 DSH - ALLOW PREFIX CONTROL OF TSO DSNS (OT)
*        10/24/78 DSH - FIX BUG IN TRT TABLE FOR NON-NUMERIC PREFIX
*
*
         TITLE 'MAINLINE'
UI011000 SUBENTRY BASES=(R13,R8)
         LM    R3,R6,0(R1)
         USING ARG1,R3  RTYPE
         USING ARG2,R4  USERID
         USING ARG3,R5  DSN
         USING ARG4,R6  UISTAT
         IF    (CLI,FIRST,TRUE,EQ)
                MVI  FIRST,FALSE
                PM   INIT
         FI
         PM    GETAC
         PM    VALIDATE
         MVC   UISTAT,FSTATUS
         SUBEXIT
         TITLE 'INIT - INITIALIZE DSN TREE STRUCTURE'
INIT     PENTRY
         OPEN  (UI011S01)
         ZR    R11
         PM    GET
         DO    WHILE,(CLI,EOF,TRUE,NE)
               LR   R12,R1
               USING REC,R12
               DOCASE    RECTYPE
                    CASE C'1'
                         PM   ADDDSN
                    ESAC
                    CASE C'2'
                         PM   ADDULIST
                    ESAC
                    CASE C'D'
                         ABEND 901,DUMP
                    ESAC
                    CASE ELSE
                         WTO  'UI011 - INVALID RECORD TYPE - IGNORED'
                    ESAC
               ESACOD
               PM   GET
         OD
         CLOSE (UI011S01)
         PEXIT
GET      PENTRY
         GET   UI011S01
         PEXIT
UI011EOF MVI   EOF,TRUE
         PEXIT
ADDDSN   PENTRY
         ZR    R11
         MVC   DSNAC,RECAC
         NC    DSNAC,=X'03'
         MVC   PREFIX,RECDSN
         PM    GETTAB1
         LR    R10,R1                   R10=A(PREFIX TABLE ENTRY)
         IF    (CLI,RECDSN+2,C' ',EQ)
               NC   0(1,R10),=X'FC'     SET PREFIX TABLE CODE IF
               OC   0(1,R10),DSNAC      JUST A PREFIX
               PEXIT
         FI
*
*        BUILD BLOCK FOR NEW TREE ENTRY
*
         IF    (TRT,RECDSN,BLANK,EQ)
               LA   R1,44
         ELSE
               LA   R0,RECDSN
               SR   R1,R0
         FI
         LR    R2,R1
         LA    R0,LBLK(R2)
         PM    GETBLK
         LR    R11,R1
         USING BLK,R11
         ST    R2,BLKLNG
         MVC   BLKAC,DSNAC
         LA    R0,RECDSN
         LR    R1,R2
         LA    R14,BLKDSN
         LR    R15,R2
         MVCL  R14,R0
*
*        CHAIN BLOCK INTO PREFIX TABLE OR GET PTR TO EXISTING TREE
*
         IF    (TM,0(R10),X'FC',Z)
               L    R1,DSNPTR
               AAI  R1,4
               IF   (CL,R1,=A(64*4),NL)
                    LA   R1,4
               FI
               ST   R1,DSNPTR
               OC   0(1,R10),DSNPTR+3
               L    R0,DSNINDEX-4(R1)
               IF   (LTR,R0,R0,Z)
                    ST   R11,DSNINDEX-4(R1)
                    PEXIT
               FI
         FI
         ZR    R1
         IC    R1,0(R10)
         SRL   R1,2
         SLL   R1,2
         L     R9,DSNINDEX-4(R1)
*
*        SCAN TREE AND ADD BLOCK
*
         DO    FOREVER
               LA   R14,BLKDSN
               L    R15,BLKLNG
               LA   R0,BLKDSN-BLK(R9)
               L    R1,BLKLNG-BLK(R9)
               IF   (CLR,R1,R15,L)
                    LR   R15,R1
               ELSE
                    LR   R1,R15
               FI
               IF   (CLCL,R14,R0,L)
                    L    R1,BLKLOW-BLK(R9)
                    IF   (LTR,R1,R1,Z)
                         ST   R11,BLKLOW-BLK(R9)
                         PEXIT
                    FI
                    LR   R9,R1
               ELSEIF (H)
                    L    R1,BLKHIGH-BLK(R9)
                    IF   (LTR,R1,R1,Z)
                         ST   R11,BLKHIGH-BLK(R9)
                         PEXIT
                    FI
                    LR   R9,R1
               ELSE
                    IF   (CLC,BLKLNG,BLKLNG-BLK(R9),LE)
                         WTO  'UI011S01 - QUALIFIER OUT OF ORDER'
                         PEXIT
                    FI
                    L    R1,BLKEQUAL-BLK(R9)
                    IF   (LTR,R1,R1,Z)
                         ST   R11,BLKEQUAL-BLK(R9)
                         PEXIT
                    FI
                    LR   R9,R1
               FI
         OD
         TITLE 'ADDULIST - ADD USER LIST TO PREVIOUS DSN BLK'
ADDULIST PENTRY
         IF    (LTR,R11,R11,Z)
               WTO  'UI011 - NO PREVIOUS DSN FOR USER LIST - IGNORED'
               PEXIT
         FI
         USING BLK,R11
         LA    R2,RECULIST
         USING UDATA,R2
         DO    WHILE,(CLI,UDAC,C' ',NE)
               LA   R0,LULIST
               PM   GETBLK
               USING ULIST,R1
               MVC  ULNEXT,BLKULIST
               ST   R1,BLKULIST
               PACK PWORK,UDID
               CVB  R0,PWORK
               ST   R0,ULID
               MVC  ULAC(1),UDAC
               NC   ULAC(1),=X'03'
               LA   R2,LUDATA(R2)
         OD
         PEXIT
         TITLE 'GETBLK - GET BLOCK OF MEMORY WITH ZEROS'
GETBLK   PENTRY
         LM    R14,R15,MSAVE
         AH    R0,=H'7'
         SRL   R0,3
         SLL   R0,3
         IF    (SR,R15,R0,M)
               ST   R0,RSAVE
               LA   R0,LMBLK
               GETMAIN R,LV=(0)
               LR   R14,R1
               LR   R0,R1
               LA   R1,LMBLK
               ZR   R15
               MVCL R0,R14
               LA   R15,LMBLK
               L    R0,RSAVE
               SR   R15,R0
         FI
         LR    R1,R14
         AR    R14,R0
         STM   R14,R15,MSAVE
         PEXIT
         TITLE 'GETTAB1 - SET R1 TO TAB1 ENTRY FOR DSN PREFIX'
GETTAB1  PENTRY
         TR    PREFIX,TRTAB
         ZR    R1
         IC    R1,PREFIX+1
         MH    R1,=H'26'
         AH    R1,PREFIX-1
         LA    R1,PFXTAB-27(R1)
         PEXIT
         TITLE 'GETAC - GET ACCESS CODE FOR DSN'
GETAC    PENTRY
         ZR    R11
         MVC   PREFIX,DSN
         PM    GETTAB1
         LR    R10,R1
         ZR    R1
         IC    R1,0(R10)
         IF    (TM,0(R10),X'FC',Z)
               IF   (CLI,DSN+2,C'.',NE),AND,(CLC,DSN(2),=C'OT',NE)
                    MVI  DSNAC,3
               ELSE
                    STC  R1,DSNAC
               FI
               PEXIT
         FI
         SRL   R1,2
         SLL   R1,2
         L     R11,DSNINDEX-4(R1)
         USING BLK,R11
         PM    FINDBLK
         IF    (LTR,R11,R11,NZ)
               MVC  DSNAC,BLKAC
               PEXIT
         FI
         IF    (CLI,DSN+2,C'.',NE),AND,(CLC,DSN(2),=C'OT',NE)
               MVI  DSNAC,3
         ELSE
               IC    R1,0(R10)
               LA    R0,3
               NR    R1,R0
               STC   R1,DSNAC
         FI
         PEXIT
         TITLE 'FINDBLK - FIND DSN BLOCK IN TREE STRUCTURE'
FINDBLK  PENTRY
         ZR    R12
         DO    WHILE,(LTR,R11,R11,NZ)
               LA   R14,BLKDSN
               L    R15,BLKLNG
               LA   R0,DSN
               LR   R1,R15
               IF   (CLCL,R0,R14,L)
                    L    R11,BLKLOW
               ELSEIF (H)
                    L    R11,BLKHIGH
               ELSE
                    LR   R12,R11
                    L    R11,BLKEQUAL
               FI
         OD
         LR    R11,R12
         PEXIT
         TITLE 'VALIDATE - CHECK IF ACCESS IS VALID FOR USER'
VALIDATE PENTRY
         DOCASE DSNAC
           CASE 1
                IF   (CLC,RTYPE,=F'14',EQ)
                     MVI  STATUS,0
                ELSE
                     MVI  STATUS,2
                     PM   CHKRW
                FI
           ESAC
           CASE 2
                MVI  STATUS,2
                PM   CHKRW
                IF   (CLI,STATUS,2,EQ),AND,(CLC,RTYPE,=F'14',EQ)
                     MVI  STATUS,1
                     PM   CHKRO
                FI
           ESAC
           CASE 3
                MVI  STATUS,3
                PM   CHKULIST
           ESAC
           CASE ELSE
                IF   (CLI,DSNAC,0,EQ)
                     MVI  STATUS,0
                ELSE
                     ABEND 201,DUMP
                FI
           ESAC
         ESACOD
         IF    (CLI,STATUS,0,GT),AND,(CLC,DSN(2),=C'OT',EQ)
               L    R0,USERID
               CVD  R0,PWORK
               EDIT TO=DWORK,FROM=PWORK+6,MASK='0999'
               IF   (CLC,DSN+2(3),DWORK+1,EQ),OR,(CLC,RTYPE,=F'14',EQ)
                    MVI  STATUS,0
               ELSE
                    MVI  STATUS,2
               FI
         FI
         PEXIT
         TITLE 'CHKULIST - CHECK USER LIST TO AUTHORIZE USER FOR DSN'
CHKULIST PENTRY
         IF    (LTR,R11,R11,Z)
               PEXIT
         FI
         L     R1,BLKULIST
         USING ULIST,R1
         DO    WHILE,(LTR,R1,R1,NZ)
               IF    (CLC,USERID+1(3),ULID+1,EQ)
                     IF   (CLC,RTYPE,=F'14',EQ)
                          MVI  STATUS,0
                     ELSEIF (CLI,ULAC,X'02',GE)
                          MVI  STATUS,0
                     FI
                     PEXIT
               FI
               L     R1,ULNEXT
         OD
         PEXIT
         TITLE 'GETUSER - GET USER AUTHORIZATION LISTS'
GETUSER  PENTRY
         IF    (CLC,LUSER,USERID,NE)
               MVC  LUSER,USERID
               LA   R1,FIPLIST2
               SCALL DCALL
               LA   R1,FIPLIST3
               SCALL DCALL
         FI
         PEXIT
         TITLE 'CHKRW - CHECK READ/WRITE AUTHORIZATION LIST'
CHKRW    PENTRY
         PM    GETUSER
         LA    R1,RWLIST
         LA    R2,RWLIST+40
         DO    WHILE,(CLR,R1,R2,L)
               IF   (CLC,0(2,R1),DSN,EQ)
                    MVI  STATUS,0
                    PEXIT
               FI
               AAI  R1,2
         OD
         PM    CHKULIST
         PEXIT
         TITLE 'CHKRO - CHECK READ AUTHORIZATION LIST'
CHKRO    PENTRY
         PM    GETUSER
         LA    R1,ROLIST
         LA    R2,ROLIST+40
         DO    WHILE,(CLR,R1,R2,L)
               IF   (CLC,0(2,R1),DSN,EQ)
                    MVI  STATUS,0
                    PEXIT
               FI
               AAI  R1,2
         OD
         PM    CHKULIST
         PEXIT
         TITLE 'COMMON DATA'
         EQUAL
FIRST    LOGICAL    TRUE,(TRUE,FALSE)
DSNINDEX DC    64A(0)    INDEX TO DSN TREE STRUCTURE
DSNPTR   DC    F'0' POINTER TO LAST INDEX ASSIGNED
DSNAC    DC    X'00'
EOF      LOGICAL    FALSE,(TRUE,FALSE)
UI011S01 SDCB  R=FB,L=80,E=UI011EOF,M=GL
BLANK    TRTTAB SCAN,FIND=C' '
PWORK    DC    D'0'
DWORK    DC    CL4' '
MSAVE    DC    2F'0'
RSAVE    DC    F'0'
LMBLK    EQU   4000
PFXTAB   DC    (26*26)X'01'
         DC    H'0'
         ORG   *-1
PREFIX   DC    CL2' '
FSTATUS  DC    F'0'
STATUS   EQU   FSTATUS+3
TRTAB    DC    256X'01'
         ORG   TRTAB+C'A'
         DC    AL1(1,2,3,4,5,6,7,8,9)
         ORG   TRTAB+C'J'
         DC    AL1(10,11,12,13,14,15,16,17,18)
         ORG   TRTAB+C'S'
         DC    AL1(19,20,21,22,23,24,25,26)
         ORG
FIPLIST2 DC    A(FIPNAME,OP11,TYPE4,LUSER,RWLIST,FIPSTAT)
FIPLIST3 DC    A(FIPNAME,OP12,TYPE4,LUSER,ROLIST,FIPSTAT)
FIPNAME  DC    CL8'UI010000'
OP11     DC    F'11'
OP12     DC    F'12'
TYPE4    DC    F'4'
LUSER    DC    F'0'
FIPSTAT  DC    F'0'
RWLIST   DC    20H'0'
ROLIST   DC    20H'0'
OPENED   LOGICAL    FALSE,(TRUE,FALSE)
         TITLE 'DSECTS'
ULIST    DSECT
ULNEXT   DS    A
ULID     DS    F
ULAC     EQU   ULID
LULIST   EQU   *-ULIST
UDATA    DSECT
UDAC     DS    C
UDID     DS    CL4
LUDATA   EQU   *-UDATA
REC      DSECT
RECTYPE  DS    C
*
*  1 - ADD DSN
*  2 - ADD USER LIST TO PREVIOUS DSN
*
*
RECAC    DS    C
*
*              0 - NO CONTROL
*              1 - CONTROL WRITE ONLY
*              2 - CONTROL READ AND WRITE
*
RECDSN   DS    CL44
RECULIST EQU   RECAC
BLK      DSECT
BLKLOW   DS    A
BLKHIGH  DS    A
BLKEQUAL DS    A
BLKULIST DS    A
BLKLNG   DS    F
BLKAC    DS    X
BLKDSN   DS    0CL44
LBLK     EQU   *-BLK
ARG1     DSECT
RTYPE    DS    F
ARG2     DSECT
USERID   DS    F
ARG3     DSECT
DSN      DS    CL44
ARG4     DSECT
UISTAT   DS    F
         END
