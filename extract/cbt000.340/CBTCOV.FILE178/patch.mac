*          DATA SET GU017700   AT LEVEL 007 AS OF 01/11/73
         PRINT NOGEN
GU017700 SUBENTRY
*              AUTHOR.   DON HIGGINS.
*              DATE.     12/26/72.
*              REMARKS.  LOAD, SUPERZAP, AND EXECUTE A PROGRAM.
*
*                   THIS PROGRAM READS CARDS IDENTICAL TO
*                   SUPERZAP NAME, VERIFY, REP,DUMP,COMMENT CARDS FROM
*                   A SEQUENTIAL FILE NAMED 'PATCH'.
*
*                   THE PROGRAM ON THE NAME CARD IS 'LOADED'.
*                   THE VERIFY-REP CARDS ARE READ AND PROCESSED
*                   AGAINST THE LOADED PROGRAM IN CORE.
*                   THE MODIFIED PROGRAM IS EXECUTED.
*
*                        DUMP COMMAND CAUSES THE PROGRAM TO BE LOADED
*                        AND THEN AN ABEND DUMP 999 IS TAKEN.
*                        AN ABEND DUMP 999 IS ALSO TAKEN AFTER ALL
*                        VERIFY / REP CARDS HAVE BEEN PROCESSED IF
*                        ANY VERIFY FAILED.
*
*                   IF A VERIFY FAILS, THE PROGRAM IS NOT EXECUTED.
*
*                   ALL MESSAGES ARE PRINTED ON 'PATCHOUT'.
*              REGISTERS.
*
*                   R0  - WORK
*                   R1  - WORK
*                   R2  - LOAD MODULE ADDRESS
*                   R3  - LOAD MODULE SIZE
*                   R4  - WORK
*                   R5  - DATE LENGTH FOR VERIFY/REP
*                   R6  - OFFSET FOR VERIFY/REP
*                   R7  - SCAN POINTER
*                   R8  - SCAN INCREMENT
*                   R9  - SCAN LIMIT
*                   R10 - INPUT CARD BUFFER, LINK FOR DFLUSH
*                   R11 - PROGRAM ENTRY POINT
*                   R12 - LINK FOR DECODE
*                   R13 - BASE
*                   R14 - LINK FOR SCAN, DIGIT
*                   R15 - WORK
         OPEN  (PATCH,,PATCHOUT,(OUTPUT))
         DTIME TIMEDATE
         PUT   PATCHOUT,HEADING
*
NAMEL    TAG                       FIND NAME/DUMP CARD
         BAL   R12,DECODE
         CLI   TYPE,C'D'
         BE    LOAD
         CLI   TYPE,C'N'
         BE    LOAD
         BAL   R10,DFLUSH
         B     NAMEL
LOAD     TAG                       LOAD PROGRAM
         LOAD  EPLOC=PGMNAME
         LR    R11,R0
         L     R1,CVTADDR
         L     R1,0(R1)
         L     R1,4(R1)
         L     R1,TCBLLS(R1)
         LA    R2,LRBSIZE(R1)      R2=A(LAST LOAD MODULE)
         LH    R3,XRBSZ(R1)
         SLL   R3,3                R3=LOAD MODULE SIZE
         SH    R3,=H'32'           SUBTRACT RB LENGTH
         MVI   LSTATUS,OK
         CLI   TYPE,C'D'
         BNE   MODIFYL
DUMP     TAG
         ABEND 999,DUMP            ABEND WITH DUMP
MODIFYL  TAG
         BAL   R12,DECODE
         CLI   TYPE,C'V'
         BE    VERIFY              VERIFY DATA
         CLI   TYPE,C'R'
         BE    REP                 REP DATA
         BAL   R10,DFLUSH
         B     MODIFYL
EOF      TAG
         CLOSE (PATCH,,PATCHOUT)
         CLI   STATUS,OK
         BE    EXECUTE
         CLI   LSTATUS,OK
         BE    DUMP
         B     EOJ
EXECUTE  TAG
         WTO   'FPC PATCH EXECUTION BEGINNING'
         LR    R15,R11
         BALR  R14,R15             EXECUTE PROGRAM
EOJ      TAG
         SUBEXIT
DECODE   TAG
         GET   PATCH               GET CARD
         LR    R10,R1
         PUT   PATCHOUT,(R10)      PRINT IT
         LR    R7,R10
         LA    R9,79(R7)
         LA    R8,1
         BAL   R14,SCAN
         MVC   TYPE,0(R7)
         CLC   0(5,R7),=C'NAME '
         BE    DNAME
         CLC   0(5,R7),=C'DUMP '
         BE    DDUMP
         CLC   0(7,R7),=C'VERIFY '
         BE    DVERIFY
         CLC   0(4,R7),=C'REP '
         BE    DREP
         CLI   0(R7),C'*'          LOOP THROUGH COMMENTS
         BE    DECODE
FLUSH    TAG
         BAL   R10,DFLUSH
         B     DECODE
DFLUSH   TAG
         MVI   STATUS,NOGO         SET NOGO SWITCH
         PUT   PATCHOUT,NOGOMSG
         BR    R10
DNAME    TAG
DDUMP    TAG
         LA    R7,4(R7)
         BAL   R14,SCAN
         MVC   PGMNAME,0(R7)
         BR    R12
DVERIFY  TAG
         LA    R7,3(R7)
DREP     TAG
         LA    R7,3(R7)
         BAL   R14,SCAN
         SR    R6,R6               R6=OFFSET
OFFSETL  TAG
         BAL   R14,DIGIT
         SLL   R6,4
         OR    R6,R0
         CLI   0(R7),C' '
         BNE   OFFSETL
         BAL   R14,SCAN
         LR    R4,R10
         SR    R5,R5               R5=DATA LENGTH
DATAL    TAG
         BAL   R14,DIGIT
         LR    R1,R0
         SLL   R1,4
         BAL   R14,DIGIT
         OR    R1,R0
         STC   R1,0(R4)
         AR    R4,R8
         AR    R5,R8
         CLI   0(R7),C' '
         BNE   DATAL
         LA    R1,0(R6,R5)
         CLR   R1,R3               IS IT WITHIN LOAD MODULE
         BH    FLUSH               NO, FLUSH
         BR    R12
SCAN     TAG                       FIND FIRST NON BLANK
         CLI   0(R7),C' '
         BCR   7,R14
         BXLE  R7,R8,SCAN
         B     FLUSH
DIGIT    TAG                       RETURN HEX VALUE '00' - 'OF' IN R0
         CLI   0(R7),C','          SKIP UP TO 1 COMMA PER ENTRY
         BNE   *+8
         BXH   R7,R8,FLUSH
         SR    R0,R0
         IC    R0,0(R7)
         CLI   0(R7),C'9'
         BH    FLUSH
         CLI   0(R7),C'0'
         BNL   DIGIT09
         CLI   0(R7),C'A'
         BL    FLUSH
         CLI   0(R7),C'F'
         BH    FLUSH
DIGITAF  TAG
         SH    R0,=H'183'          CHANGE C1-C6 TO 0A-0F
         B     DIGITNXT
DIGIT09  TAG
         SH    R0,=H'240'          CHANGE F0-F9 TO 00-09
DIGITNXT TAG
         BXH   R7,R8,FLUSH
         BR    R14
VERIFY   TAG
         LA    R6,0(R6,R2)         R6=A(VERIFY AREA)
         LR    R1,R5
         BCTR  R1,R0
         EX    R1,CLCDATA
         BNE   FLUSH
         B     MODIFYL
REP      TAG
         CLI   STATUS,OK
         BNE   MODIFYL
         LA    R6,0(R6,R2)         R6=A(REP AREA)
         LR    R1,R5
         BCTR  R1,R0
         EX    R1,MVCDATA
         B     MODIFYL
CLCDATA  CLC   0(0,R6),0(R10)
MVCDATA  MVC   0(0,R6),0(R10)
         LTORG
         EQUREGS
CVTADDR  EQU   X'4C'
TCBLLS   EQU   X'24'
LRBSIZE  EQU   8+32
XRBSZ    EQU   8+8
PGMNAME  DC    CL8' '
TYPE     DC    C'F'
LSTATUS  DC    AL1(NOGO)
STATUS   DC    AL1(OK)
NOGO     EQU   0
OK       EQU   1
PATCH    DCB   DSORG=PS,MACRF=GL,DDNAME=PATCH,EODAD=EOF
HEADING  DS    0CL80
         DC    C'FPC CORE SUPERZAP AND EXECUTE MONITOR'
         DC    C' V1M0 GU017700'
TIMEDATE DC    CL22' '
         FILL  HEADING
NOGOMSG  DC    CL80'NO GO SET DUE TO ABOVE CARD'
PATCHOUT DCB   DSORG=PS,MACRF=PM,DDNAME=PATCHOUT,                      X
               RECFM=F,BLKSIZE=80
         END   GU017700
