C          DATA SET CS314000   AT LEVEL 028 AS OF 12/19/78
C          DATA SET CS314000   AT LEVEL 024 AS OF 12/15/78
C          DATA SET CS314000   AT LEVEL 022 AS OF 10/25/78
C     PGM-ID.  CS314000.
C     AUTHOR.  DON HIGGINS
C     DATE.    12/22/76.
C     REMARKS. CREATE CSD PROGRAM MASTER FILE.
C     MAINTENANCE.
C
C       10/25/78 DSH - FIX SEQUENCE ERRORS DUE TO $ NAMES.
C       12/15/78 DSH - USE NSC CODE IN DIRECTORY TO SURPRESS EXCEPTION
C
C     FILES.
C         FT06F001 - REPORTS
C         FT10F001 - PGM DIRECTORY FILE. (RR0123000 ON FPC.WORK)
C                       01-02 BLANK      (SEE PGM RR012200)
C                       03-10 PGM-ID
C                       11-50 DESCRIPTION
C                       51-61 MAINT. PGMR.
C                       62-64 LEVEL OR NSC FOR NO SOURCE CODE REQ.
C                       66-77 ALIAS OR TYPE
C                       78-80 POST LIST VOLUME
C         FT11F001 - PGM SOURCE FILE 0-UP STATUS FILE (PAN V9 PG 52)
C                       01-10 PGM-ID (9-10 NOT USED AT FPC)
C                       11-13 LEVEL
C                       14-17 USER-CODE
C                          18 SECURITY CODE
C                       19-23 LANGUAGE TYPE (COBOL,FORT ,ASMB,RPG )
C                       24-26 STATUS   (P/T,A/I,E/D)
C                       27-34 MM/DD/YY DATE OF LAST MAINT
C                       35-42 MM/DD/YY DATE OF LAST ACCESS
C                       43-47 NUMBER OF BLOCKS USED
C                       48-55 NUMBER OF STATEMENTS IN DATA SET
C                          56 * OR BLANK
C                       57-59 LAST ACTION TAKEN
C                       60-61 AVERAGE BYTES
C                       62-65 SUBSETS
C                       66-75 DATA SET NAME(RIGHT JUSTIFIED)
C                          76 BLANK
C                          77 N/T
C                       78-80 BLANK
C         FT13F001 - PGM SMF USAGE FILE (FROM CS304000 FILE FT13F001)
C
C              WORDS     DESCRIPTION
C              01-02     PGM-NAME
C              03-04     NAME OF LAST JOB USING PGM (DIP PREFERED)
C                 05     DATE OF LAST USE (BINARY YYDDD)
C                 06     TIME OF LAST USE (BINARY 0.01 SEC)
C                 07     TOTAL USES
C                 08     TOTAL CAU
C                 09     TOTAL DISK
C                 10     TOTAL TAPE
C                 11     TOTAL LINES
C                 12     TOTAL EST.COST
C         FT21F001 - TABLE OF CONTENTS
C         CS314I01 - OLD PGM MASTER
C         CS314I02 - NEW PGM MASTER
C              WORDS     DESCRIPTION
C              01-02     PGM NAME
C              03-12     PGM DESC
C              13-16     PGM MAINTENANCE PGMR
C              17-20     PGM ALIAS OR TYPE
C                 21     PGM LIST VOLUME
C                 22     PAN SOURCE LEVEL
C              23-24     DATE OF LAST MAINT
C                 25     NUMBER OF STATEMENTS
C              26-27     NAME OF LAST JOB USING PGM
C                 28     DATE OF LAST JOB USING PGM
C                 29     TIME OF LAST JOB USING PGM
C                 30     TOTAL USES
C                 31     TOTAL CPU
C                 32     TOTAL DISK
C                 33     TOTAL TAPE
C                 34     TOTAL LINES
C                 35     TOTAL EST.COST
C              36-50     SPARE
C
C     COMMON DATA
C
      IMPLICIT INTEGER(A-Z)
      REAL*8   DIRPGM,PANPGM,OLDPGM,NEWPGM,SMFPGM
      REAL*8   EOFPGM/ZFFFFFFFFFFFFFFFF/
      REAL*8   LSTPGM/Z0000000000000000/
      INTEGER  DIRDSC(10),DIRMPG(3),DIRTYP(4),DIRVOL,DIRNSC
      INTEGER  PANLVL,PANSTM
      INTEGER  SMFILD,SMFJLT,SMFUSE,SMFCPU,SMFDSK,SMFTAP,SMFLIN,SMFCST
      INTEGER  OLDDSC(10),OLDMPG(3),OLDTYP(4),OLDVOL,OLDNSC
      INTEGER  NEWDSC(10),NEWMPG(3),NEWTYP(4),NEWVOL,NEWNSC
      INTEGER  OLDLVL,OLDSTM
      INTEGER  NEWLVL,NEWSTM
      INTEGER  OLDJLD,OLDJLT,OLDUSE,OLDCPU,OLDDSK,OLDTAP,OLDLIN,OLDCST
      INTEGER  NEWJLD,NEWJLT,NEWUSE,NEWCPU,NEWDSK,NEWTAP,NEWLIN,NEWCST
      INTEGER  EOF/0/,TRUE/1/,FALSE/0/,SMF/0/
      REAL*8   BLK8/' '/
      INTEGER  BLK4/' '/
      INTEGER  PANDAT(2),NEWDAT(2)
      INTEGER  SMFJOB(2),NEWJOB(2)
      INTEGER  NEWREC(50)/50*0/,OLDREC(50)/50*0/,LRECL/50/
      REAL*8   FOLD/'CS314I01'/,FNEW/'CS314I02'/
      INTEGER  FDIR/10/,FPAN/11/,FSMF/13/,FTOC/21/,FRPT/6/
      REAL*8   FIP/'SR203000'/
      REAL*8   GDATE
      INTEGER  TIME(6),PAGE/0/,LINE/0/,MAXLN/50/
      INTEGER TOLD/0/,TNEW/0/,TDIR/0/,TPAN/0/,TSMF/0/,TERR/0/
      INTEGER TYPJOB/' '/,PJOB/'P'/
      INTEGER TSYS/'SYS1'/,TFPC/'FPC.'/,TNSC/'NSC'/
      EQUIVALENCE (OLDREC(1),OLDPGM)
      EQUIVALENCE
     *   (NEWREC(01),NEWPGM)
     *  ,(NEWREC(03),NEWDSC)
     *  ,(NEWREC(13),NEWMPG)
     *  ,(NEWREC(16),NEWNSC)
     *  ,(NEWREC(17),NEWTYP)
     *  ,(NEWREC(21),NEWVOL)
     *  ,(NEWREC(22),NEWLVL)
     *  ,(NEWREC(23),NEWDAT)
     *  ,(NEWREC(25),NEWSTM)
     *  ,(NEWREC(26),NEWJOB)
     *  ,(NEWREC(28),NEWJLD)
     *  ,(NEWREC(29),NEWJLT)
     *  ,(NEWREC(30),NEWUSE)
     *  ,(NEWREC(31),NEWCPU)
     *  ,(NEWREC(32),NEWDSK)
     *  ,(NEWREC(33),NEWTAP)
     *  ,(NEWREC(34),NEWLIN)
     *  ,(NEWREC(35),NEWCST)
C
C     FORMATS
C
   10 FORMAT(
     *    2X,A8,10A4,2A4,A3,A3,1X,2A4,A3,A1,A3
     *)
   20 FORMAT(
     *    A8,2X,I3,13X,2A4,13X,I8
     *)
   30 FORMAT(
     *    '1','CS314R61'
     *   ,' SMF ANALYSIS REPORT '
     *   ,A8,6A4,5X,'PAGE',I5
     *   ,T100,'CS314000 V3 R10/25/78'
     *  //1X,'PROGRAMS USED BUT NOT REGISTERED OR NOT ON FPC.SOURCE'
     *  //1X,'PROGRAM  SRC-LVL JOBNAME  MAINT-PGMR      '
     8      ,'PROGRAM DESCRIPTION'
     */)
   40 FORMAT(
     *    1X,A8,1X,I7,1X,2A4,1X,2A4,A3,5X,10A4
     *)
   50 FORMAT(
     *    1X,' SEQUENCE ERROR',5(1X,A8)
     *)
   60 FORMAT(
     *   /1X,'TOTAL OLD MASTER =',I6
     *   /1X,'TOTAL NEW MASTER =',I6
     *   /1X,'TOTAL DIRECTORY  =',I6
     *   /1X,'TOTAL FPC.SOURCE =',I6
     *   /1X,'TOTAL SMF        =',I6
     *   /1X,'TOTAL ERRORS     =',I6
     *)
   70 FORMAT(
     *    1X,'    61     PROGRAM ANALYSIS REPORT'
     *   /1X,'    62     FPC.SOURCE CHANGE REPORT'
     *   /1X,'    63     FPC.WORK CHANGE REPORT'
     *   /1X,'    64     FPC.PROCLIB CHANGE REPORT'
     *)
C
C     MAINLINE
C
      WRITE(FTOC,70)
      CALL DCALL(FIP,3,1,FOLD,OLDPGM,OLDREC,STAT)
      CALL DCALL(FIP,3,2,FNEW,NEWPGM,NEWREC,STAT)
      CALL TOD(TIME)
      CALL OSDATE(GDATE)
      PM  GETOLD
      PM  GETDIR
      PM  GETPAN
      PM  GETSMF
      DO  WHILE,(EOF.NE.TRUE)
          PM   BUILD
      OD
      CALL DCALL(FIP,4,1,FOLD,OLDPGM,OLDREC,STAT)
      CALL DCALL(FIP,4,2,FNEW,NEWPGM,NEWREC,STAT)
      LINE=LINE-7
      PM   PRTCTL
      WRITE(FRPT,60)
     *     TOLD,TNEW,TDIR,TPAN,TSMF,TERR
      IF   (TNEW.EQ.0)STOP 16
      STOP
C
C     BUILD NEXT RECORD
C
      PENTRY BUILD
      NEWPGM=EOFPGM
      CALL CLCL(NEWPGM,8,OLDPGM,8,0,COND)
      IF  (COND.EQ.3)NEWPGM=OLDPGM
      CALL CLCL(NEWPGM,8,DIRPGM,8,0,COND)
      IF  (COND.EQ.3)NEWPGM=DIRPGM
      CALL CLCL(NEWPGM,8,PANPGM,8,0,COND)
      IF  (COND.EQ.3)NEWPGM=PANPGM
      CALL CLCL(NEWPGM,8,SMFPGM,8,0,COND)
      IF  (COND.EQ.3)NEWPGM=SMFPGM
      CALL CLCL(NEWPGM,8,EOFPGM,8,0,COND)
      IF  (COND.NE.1)
          EOF=TRUE
          PEXIT
      FI
      CALL CLCL(NEWPGM,8,OLDPGM,8,0,COND)
      IF  (COND.EQ.2)
          DO   I=3,LRECL
               NEWREC(I)=OLDREC(I)
          OD
          PM   GETOLD
      ELSE
          DO   I=3,LRECL
               NEWREC(I)=0
          OD
      FI
      CALL CLCL(NEWPGM,8,DIRPGM,8,0,COND)
      IF  (COND.EQ.2)
          DO   I=1,10
               NEWDSC(I)=DIRDSC(I)
          OD
          DO   I=1,3
               NEWMPG(I)=DIRMPG(I)
          OD
          NEWNSC=DIRNSC
          DO   I=1,4
               NEWTYP(I)=DIRTYP(I)
          OD
          NEWVOL=DIRVOL
          PM   GETDIR
      FI
      CALL CLCL(NEWPGM,8,PANPGM,8,0,COND)
      IF  (COND.EQ.2)
          NEWLVL=PANLVL
          NEWDAT(1)=PANDAT(1)
          NEWDAT(2)=PANDAT(2)
          NEWSTM=PANSTM
          PM   GETPAN
      FI
      CALL CLCL(NEWPGM,8,SMFPGM,8,0,COND)
      IF  (COND.EQ.2)
          SMF=TRUE
          NEWJOB(1)=SMFJOB(1)
          NEWJOB(2)=SMFJOB(2)
          NEWJLD=SMFJLD
          NEWJLT=SMFJLT
          NEWUSE=NEWUSE+SMFUSE
          NEWCPU=NEWCPU+SMFCPU
          NEWDSK=NEWDSK+SMFDSK
          NEWTAP=NEWTAP+SMFTAP
          NEWLIN=NEWLIN+SMFLIN
          NEWCST=NEWCST+SMFCST
          PM   GETSMF
      FI
      CALL CLCL(NEWPGM,8,LSTPGM,8,0,COND)
      IF  (COND.NE.3)
          PM   PRTCTL
          TERR=TERR+1
          WRITE(FRPT,50)OLDPGM,NEWPGM,DIRPGM,PANPGM,SMFPGM
          PEXIT
      FI
      LSTPGM=NEWPGM
      CALL DCALL(FIP,2,2,FNEW,NEWPGM,NEWREC,STAT)
      TNEW=TNEW+1
      PM  CHKPGM
      PEXIT
C
C     GET OLD MASTER
C
      PENTRY GETOLD
      CALL DCALL(FIP,1,1,FOLD,OLDPGM,OLDREC,STAT)
      IF  (STAT.EQ.3)
          OLDPGM=EOFPGM
      ELSE
          TOLD=TOLD+1
      FI
      PEXIT
C
C     GET DIRECTORY UPDATES
C
      PENTRY GETDIR
      READ(FDIR,10,END=1000)
     *    DIRPGM,DIRDSC,DIRMPG,DIRNSC,DIRTYP,DIRVOL
      TDIR=TDIR+1
      PEXIT
 1000 DIRPGM=EOFPGM
      PEXIT
C
C     GET PAN UPDATES
C
      PENTRY GETPAN
      READ(FPAN,20,END=1100)
     *    PANPGM,PANLVL,PANDAT,PANSTM
      TPAN=TPAN+1
      PEXIT
 1100 PANPGM=EOFPGM
      PEXIT
C
C     GET SMF UPDATES
C
      PENTRY GETSMF
      READ(FSMF,END=1200)
     *    SMFPGM
     *   ,SMFJOB,SMFJLD,SMFJLT,SMFUSE
     *   ,SMFCPU,SMFDSK,SMFTAP,SMFLIN
     *   ,SMFCST
      TSMF=TSMF+1
      PEXIT
 1200 SMFPGM=EOFPGM
      PEXIT
C
C     CHECK PGM AND REPORT EXCEPTIONS
C
      PENTRY CHKPGM
      IF   (SMF.NE.TRUE)PEXIT
      SMF=FALSE
C
C     LIST PGMS USED WHICH ARE NOT ON SOURCE
C
      CALL AMOVE(1,7,NEWJOB(1),0,TYPJOB)
      IF ((TYPJOB.EQ.PJOB)
     *    .AND.((NEWLVL.EQ.0).OR.(NEWNSC.EQ.0))
     *    .AND.(NEWNSC.NE.TNSC)
     *   )
          PM   PRTCTL
          TERR=TERR+1
          WRITE(FRPT,40)NEWPGM,NEWLVL,NEWJOB,NEWMPG,NEWDSC
      FI
      PEXIT
C
C     PAGE CONTROL
C
      PENTRY PRTCTL
      LINE=LINE-1
      IF  (LINE.LE.0)
          LINE=MAXLN
          PAGE=PAGE+1
          WRITE(FRPT,30)GDATE,TIME,PAGE
      FI
      PEXIT
      END
