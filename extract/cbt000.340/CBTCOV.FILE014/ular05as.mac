PAGMON   ASSMAIN (13,12)              .
         LA    R0,1                   .
         LA    R1,4080                .
         SVC   235                    .
         STAX  RET                    .
         MODESET KEY=ZERO,MODE=SUP    .
BEGIN    CLI   SWRET+3,X'FF'          .
         BE    ASSEND                 .
         LA    R14,L4                 .
         ST    R14,IOSTORE            .
         TIME  DEC                    .
         IC    R0,X'C0'               . PACK SIGN
         SRL   R0,4                   . DROP LEADING ZERO
         ST    R0,SYSTIM              . GET SYSTEM TIME
         MVC   PRTIME,=X'402120204B20204B2020'
         ED    PRTIME,SYSTIM          . TIME TO PRINT
         MVC   L1(73),HDING           .
         MVC   L4+2(9),=C'SQA CHAIN'  .
DISP0    LA    R2,16                  . CVT PTR
         L     R2,0(R2)               . A(CVT)
         L     R1,560(R2)             . A(GDA)
         L     R2,24(R1)              . A(SPQE) SQA
DISP00   SR    R4,R4                  .
         IC    R4,10(R2)              . SUBPOOL IDENTIFICATION
         L     R2,4(R2)               . A(FIRST DQE)
         SR    R4,R4                  . FREE  COUNT
         SR    R6,R6                  . ALLOC COUNT
DISP1    L     R5,0(R2)               . A(FQE)
         CH    R5,=H'0'               . NO FQE CHAINED
         BE    DISP3                  . YES
DISP2    L     R7,4(R5)               .
         AR    R4,R7                  . ADD FREE AREA
         L     R5,0(R5)               . A(NEXT FQE)
         CH    R5,=H'0'               . LAST
         BH    DISP2                  . NO
DISP3    A     R6,12(R2)              . ADD DQE USED AREA
         L     R2,4(R2)               . A(NEXT DQE) OR ZERO
         LR    R10,R2                 . SAVE NEXT DQE
         CLI   SW,X'00'               . FIRST DQE
         BE    DISP4                  . YES
         CH    R2,=H'0'               . FINALLY LAST DQE
         BH    DISP1                  . NO
DISP4    XC    DW,DW                  .
         LR    R1,R6                  .
         SRL   R1,10                  . / 1024
         CVD   R1,DW                  .
         L     R2,IOSTORE             .
         MVC   72(6,R2),MASK          .
         ED    72(6,R2),DW+5          .
         MVI   78(R2),C'K'            .
         LR    R1,R6                  .
         LR    R15,R4                 .
         L     R9,IOSTORE             .
         BAL   R14,CONVX              . CONVERT AND EDIT %
         CLI   SW,X'FF'               .
         BE    DISP5                  .
         LA    R2,81(R2)              .
         ST    R2,IOSTORE             .
         MVC   2(19,R2),=C'SQA EXTENSION (CSA)'
         OI    SW,X'FF'               .
DISP5    LR    R2,R10                 .
         SR    R4,R4                  .
         SR    R6,R6                  .
         CH    R10,=H'0'              . LAST DQE
         BH    DISP1                  . NO
         L     R9,IOSTORE             .
         LA    R9,81(R9)              .
         MVC   2(9,R9),=C'CSA CHAIN'  .
         MVI   SW,X'00'               .
DISP6    LA    R2,16                  . CVT PTR
         L     R2,0(R2)               . A(CVT)
         L     R1,560(R2)             . A(GDA)
         L     R2,52(R1)              . A(FIRST CSA SPQE)
         SR    R1,R1                  .
         SR    R4,R4                  . FREE  COUNT
         SR    R6,R6                  . ALLOC COUNT
         LR    R10,R2                 . SAVE
DISP7    L     R2,4(R2)               . A(FIRST DQE)
         CH    R2,=H'0'               . NO DQE CHAINED?
         BE    DISP11                 . YES
DISP8    L     R5,0(R2)               . A(FQE)
         SLL   R5,8                   . POINT OUT FLAG BYTE
         SRL   R5,8                   .
         CH    R5,=H'0'               . NO FQE CHAINED OR LAST?
         BE    DISP10                 . YES
         CR    R5,R1                  . SAME DATA?
         BE    DISP10                 . YES, MUST BE LAST
         LR    R1,R5                  . SAME DATA?
DISP9    L     R7,4(R5)               .
         AR    R4,R7                  . ADD FREE AREA
         L     R5,0(R5)               . A(NEXT FQE)
         SLL   R5,8                   . POINT OUT FLAG BYTE
         SRL   R5,8                   .
         CH    R5,=H'0'               . LAST
         BE    DISP10                 . NO
         CR    R5,R1                  . SAME DATA?
         BE    DISP10                 . YES, MUST BE LAST
         LR    R1,R5                  .
         B     DISP9                  . LOOP
DISP10   CH    R2,=H'0'               . NO DQE CHAINED OR LAST?
         BE    DISP11                 . YES
         A     R6,12(R2)              . ADD DQE USED AREA
         L     R2,4(R2)               . A(NEXT DQE) OR ZERO
         B     DISP10                 . LOOP
DISP11   L     R2,0(R10)              . NEXT SPQE
         CH    R2,=H'0'               . LAST SPQE?
         BH    DISP7-2                . NO
         LA    R15,6                  .
         L     R14,=F'500000'         .
         L     R1,=F'1000000'         .
DISP12   CR    R14,R6                 .
         BH    DISP13                 .
         A     R1,=F'1000000'         .
         A     R14,=F'1000000'        .
         BCT   R15,DISP12             .
DISP13   LR    R15,R1                 . TOTAL
         CVD   R15,DWD                . TOT TO DECIMAL
         MVC   72(7,R9),MASK          . MASK TO PRINT
         L     R14,DWD+4              .
         SRL   R14,4                  .
         ST    R14,DWD+4              .
         OI    DWD+7,X'0C'            .
         ED    72(7,R9),DWD+4         .
         MVI   78(R9),C'K'            .
         SR    R15,R6                 . FREE
         BAL   R14,CONVX              .
         L     R2,16                  . POINT TO CVT
         L     R3,556(R2)             . GET ASVT POINTER
         ST    R3,ASVTAD              . AND SAVE IT
         L     R2,X'2C0'(R2)          . POINT TO ASMVT FROM CVT-OFFSET
         L     R5,8(R2)               . GET PART ADDR
         L     R4,4(R2)               . GET SART ADDR
         LA    R3,X'70'(R2)           . GET TOTAL ADDR
         L     R8,0(R3)               . SAVE OVERALL TOTAL
         S     R8,X'6C'(R2)           .
**  GET TOTALS OF SLOT COUNTS         .
         LA    R9,L7+2                .
         MVC   2(16,R9),=C'SLOTS UNRESERVED'
         L     R7,0(R3)               . TOTAL TO REG
         CVD   R7,DWD                 . TOT TO DECIMAL
         MVC   73(6,R9),MASK          . MASK TO PRINT
         ED    73(6,R9),DWD+5         . TOTAL TO PRINT
         LR    R1,R7                  . SAVE TOTAL
         LR    R15,R1                 .
         S     R15,X'6C'(R2)          . GET UNRESERVED TOTAL
         BAL   R14,CONVX              . CONVERT TO PERCENT
         LA    R9,L9+2                .
         MVC   2(16,R9),=C'VIO   SLOTS     '
         LA    R3,4(R3)               .
         S     R8,0(R3)               .
         L     R14,0(R3)              . TOTAL VIO
         LA    R3,4(R3)               .
         S     R8,0(R3)               .
         L     R1,0(R3)               . TOTAL NONVIO
         AR    R1,R14                 . TOTAL
         LR    R15,R1                 .
         SR    R15,R14                . FREE
         CVD   R1,DWD                 . TOT TO DECIMAL
         MVC   73(6,R9),MASK          . MASK TO PRINT
         ED    73(6,R9),DWD+5         . TOTAL TO PRINT
         BAL   R14,CONVX              . EDIT
         L     R3,24(R5)              . ADDR OF DSN LIST
         L     R10,4(R5)              . TOTAL NBR PARTES
         LA    R6,80(R5)              . ADDR OF PARTES
         B     TSTPRT                 .
NXTLOT   DS    0H                     .
         LA    R6,64(R6)              . NEXT PARTE
NXTDSN   LA    R3,44(R3)              . NEXT DSN
TSTPRT   DS    0H                     .
         CLI   8(R6),X'20'            . DUPLEX PARTE?
         BE    UPNXT                  . YES GET NEXT PARTE & DSN
         CLI   0(R3),C' '             . BLANK DSN
         BE    UPNXT                  . YES GET NEXT DSN
         BAL   R11,GETYPE             . GET PAGE TYPE
UPNXT    DS    0H                     .
         BCT   R10,NXTLOT             . AND PROCESS
         L     R15,PLPATOTA           . SIZE TOTAL
         S     R15,PLPAALOC           . - ALLOC COUNT = FREE COUNT
         L     R1,PLPATOTA            . SIZE TOTAL
         LA    R9,LA+2                .
         MVC   2(12,R9),=C'PLPA  SLOTS '
         CVD   R1,DW                  .
         MVC   73(6,R9),MASK          . EDIT PLPA TOTAL
         ED    73(6,R9),DW+5          .
         BAL   R14,CONVX              .
         LA    R9,L8+2                .
         L     R15,LOCATOTA           . SIZE TOTAL
         S     R15,LOCAALOC           . - ALLOC COUNT = FREE COUNT
         L     R1,LOCATOTA            . SIZE TOTAL
         MVC   2(12,R9),=C'LOCAL SLOTS '
         CVD   R1,DW                  .
         MVC   73(6,R9),MASK          . EDIT PLPA TOTAL
         ED    73(6,R9),DW+5          .
         BAL   R14,CONVX              .
         LA    R9,LB+2                .
         XC    LOCAALOC,LOCAALOC      .
         XC    PLPAALOC,PLPAALOC      .
         XC    LOCATOTA,LOCATOTA      .
         XC    PLPATOTA,PLPATOTA      .
         MVC   2(12,R9),=C'SWAP  SLOTS '
** SARTE INFO PROCESSED **            .
         L     R10,4(R4)              . NBR OF SARTES
         L     R3,24(R4)              . POINT TO DSN LIST
         LA    R6,80(R4)              . POINT TO SARTES
         SR    R4,R4                  .
         SR    R7,R7                  .
         B     TSTSRT                 .
SRTNXT   DS    0H                     .
         LA    R3,44(R3)              . NEXT DSN
         LA    R6,48(R6)              . NEXT SARTE
TSTSRT   DS    0H                     .
         CLI   0(R3),C' '             . IS DSN BLANK
         BE    UPSRT                  . NO OK
         A     R4,20(R6)              . ALLOC COUNT
         A     R7,16(R6)              . SIZE TOTAL
UPSRT    BCT   R10,SRTNXT             .
         CVD   R7,DW                  .
         MVC   73(6,R9),MASK          .
         ED    73(6,R9),DW+5          .
         LR    R1,R7                  .
         LR    R15,R4                 .
         BAL   R14,CONVX              .
         LA    R9,80(R9)              .
         SR    R6,R6                  . CLEAR NON 8 CHAR BATCH COUNT
         SR    R7,R7                  . CLEAR BATCH COUNT
         SR    R10,R10                . CLEAR TSO COUNT
         L     R1,ASVTAD              . RESTORE ASVT ADDRESS
         L     R2,516(R1)             . MAX NUMBER OF ADDRESS SPACES
         LA    R3,524(R1)             . FIRST ASVT ENTRY MINUS 4
         MVC   2(80,R9),L3            . PERCENT LINE
         LA    R9,1(R9)               .
         MVC   0(2,R9),=X'1DE8'       . HIGH PRINT
         LA    R9,81(R9)              .
ASVTLOOP DS    0H                     .
         LA    R3,4(R3)               . GET ASVT ENTRY
         ICM   R4,B'1111',0(R3)       . IS HIGH ORDER BIT ON
         BM    GETNXT                 . ASID NOT ASSIGNED-GETNXT
         ICM   R5,B'1111',60(R4)      . IS THERE A TSB ADR
         BNZ   TSOJOB                 . YES -MUST BE TSO JOB
         L     R1,176(R4)             . 2ND JOB POINTER
         CLC   =C'INIT',0(R1)         . IS NAME INIT
         BE    BATCH                  . YES THERFORE BATCH JOB
         LA    R7,1(R7)               . UP STASK COUNT BY 1
         B     GETNXT                 . AND GET NEXT ASCB
BATCH    DS    0H                     .
         ICM   R14,B'1111',172(R4)    .
         BZ    GETNXT                 .
         LA    R6,1(R6)               . UP BATCH COUNT BY 1
         B     GETNXT                 . AND GET NEXT ASCB
TSOJOB   DS    0H                     .
         L     R1,60(R4)              . TSB ADDRESS
         CLC   82(2,R1),=X'0000'      . VTAM?
         BNE   TSOJOB1                . NO
         L     R1,VTAMZ               .
         LA    R1,1(R1)               .
         ST    R1,VTAMZ               .
         B     GETNXT                 .
TSOJOB1  LA    R10,1(R10)             . UP TSO COUNT
GETNXT   DS    0H                     .
         BCT   R2,ASVTLOOP            . AND ROUND AGAIN
         BCTR  R7,R0                  . LOSE *MASTER*
         LA    R9,80(R9)              .
         LA    R1,14(R9)              . PRINT POINTER
         BAL   R8,CNVT                . DEAL WITH STASK COUNT
         MVC   2(12,R9),=C'STASK TOTAL-'
         LR    R7,R6                  . GET BATCH TOTAL
         LA    R1,34(R9)              . PRINT POINTER
         BAL   R8,CNVT                . DEAL WITH BATCH COUNT
         MVC   22(12,R9),=C'BATCH TOTAL-'
         LR    R7,R10                 . GET TSO TOTAL
         LA    R1,52(R9)              . PRINT POINTER
         BAL   R8,CNVT                . DEAL WITH TSO COUNT
         MVC   42(11,R9),=C'TSO TOTAL -'
         L     R7,VTAMZ               . GET VTAM TOTAL
         LA    R1,72(R9)              . PRINT POINTER
         BAL   R8,CNVT                . DEAL WITH TSO COUNT
         MVC   61(12,R9),=C'VTAM TOTAL -'
         MVC   0(2,R9),=X'1DE8'       . HIGH PRINT
         LA    R9,160(R9)             .
         L     R1,16                  . CVT
         L     R1,604(R1)             . RMCT
         L     R2,20(R1)              . RMCA
         LH    R7,6(R2)               . COUNT OF IN-CORE USERS
         LA    R1,14(R9)              . PRINT POINTER
         BAL   R8,CNVT                . DEAL WITH STASK COUNT
         MVC   2(15,R9),=C'IN CORE USERS- '
PRT      LA    R1,LINE                .
         LA    R0,SISE                .
         ICM   R1,8,TPUTFLG           .
         TPUT  (1),(0),R              .
         XC    VTAMZ,VTAMZ            .
*        TGET  DW,1
         STIMER WAIT,BINTVL=BINVAL    . WAIT
         B     BEGIN                  .
CNVT     DS    0H                     .
         CVD   R7,DWD                 . TO DECIMAL
         MVC   0(6,R1),MASK           . MOVE IN MASK
         ED    0(6,R1),DWD+5          . EDIT IN TOTAL
         BR    R8                     .
*                                     .
*                                     .
         DS    F                      . CONVERT TO PERCENT
CONVX    ST    R14,*-4                .
         ST    R1,QUOT                .
         SR    R1,R15                 . R1    TOTAL
         LR    R14,R1                 . R15   FREE
         MH    R14,=H'50'             .
         SRDA  R14,32                 .
         D     R14,QUOT               .
         LA    R14,50                 .
         ST    R9,IOSTORE             .
         LA    R9,22(R9)              . ADJUST
         MVI   0(R9),X'40'            . BLANK OUT
         LA    R9,1(R9)               .
         BCT   R14,*-8                .
         CH    R15,=H'0'              .
         BE    CONVX9                 .
         L     R9,IOSTORE             . ******************************
         LA    R9,22(R9)              . ****INSTALLATION DEPENDENT****
         MVI   0(R9),X'E0' <========= . ****** SPECIAL CHARACTER *****
         LA    R9,1(R9)               . ******** USED FOR GRAPH ******
         BCT   R15,*-8                . ******************************
CONVX9   L     R9,IOSTORE             .
         L     R14,CONVX-4            .
         BR    R14                    .
*                                     .
*                                     .
GETYPE   DS    0H                     .
         CLI   8(R6),X'80'            . PLPA DS?
         BNE   COMDS                  . NO
         L     R1,PLPATOTA            .
         L     R15,PLPAALOC           .
         A     R15,20(R6)             . ALLOC COUNT
         A     R1,16(R6)              . SIZE TOTAL
         ST    R1,PLPATOTA            .
         ST    R15,PLPAALOC           .
         BR    R11                    .
*                                     .
*                                     .
COMDS    DS    0H                     .
         CLI   8(R6),X'40'            . COMMON DS?
         BNE   LOCLDS                 . NO
         L     R1,LOCATOTA            .
         L     R15,LOCAALOC           .
         A     R15,20(R6)             . ALLOC COUNT
         A     R1,16(R6)              . SIZE TOTAL
         ST    R1,LOCATOTA            .
         ST    R15,LOCAALOC           .
         BR    R11                    .
*                                     .
*                                     .
LOCLDS   DS    0H                     .
         CLI   8(R6),X'10'            . LOCAL DS?
         BNE   NXTDSN                 . NO GET NEXT DSN
         L     R1,LOCATOTA            .
         L     R15,LOCAALOC           .
         A     R15,20(R6)             . ALLOC COUNT
         A     R1,16(R6)              . SIZE TOTAL
         ST    R1,LOCATOTA            .
         ST    R15,LOCAALOC           .
         BR    R11                    .
*                                     .
ASSEND   LA    R1,CLR                 .
         LA    R0,L'CLR               .
         ICM   R1,8,TPUTFLG           .
         TPUT  (1),(0),R              .
         MODESET KEY=NZERO,MODE=PROB  .
         XR    R0,R0                  .
         LA    R1,4080                .
         SVC   235                    .
         ASSEND                       .
*                                     .
SWRET    DC    F'0'                   .
RET      EQU   *                      .
         USING *,15                   .
         LR    R1,R15                 .
         BCTR  R1,0                   .
         MVI   0(R1),X'FF'            .
         STAX  RET                    .
         BR    R14                    .
         LTORG                        .
*                                     .
TPUTFLG  DC    X'03'                  .
CLR      DC    X'C71140403C40400011404013'
LINE     DC    X'27F5C71140403C4040001140401D40401DE8'
LI       DC    C' '                   .
         DC    X'11C260'              .
L1       DC    CL80' '                .
L2       DC    CL80' '                .
L3       DS    0CL80                  .
         DC    21C' '                 .
         DC    C'1%.....20%.......40%.......60%.......80%......100%'
         DC    09C' '                 .
L4       DC    X'1D60',CL78' '        .
L5       DC    X'1D60',CL78' '        .
L6       DC    X'1D60',CL78' '        .
L7       DC    X'4040',CL78' '        .
L8       DC    X'4040',CL78' '        .
L9       DC    X'4040',CL78' '        .
LA       DC    X'4040',CL78' '        .
LB       DC    X'4040',CL78' '        .
LC       DC    X'4040',CL78' '        .
LD       DC    X'4040',CL78' '        .
LE       DC    X'4040',CL78' '        .
LF       DC    X'4040',CL78' '        .
L10      DC    X'4040',CL78' '        .
L11      DC    X'4040',CL78' '        .
L12      DC    X'4040',CL78' '        .
L13      DC    X'4040',CL78' '        .
L14      DC    X'4040',CL78' '        .
L15      DC    X'4040',CL78' '        .
L16      DC    X'4040',CL78' '        .
         DC    X'1D401140C113'        .
SISE     EQU   *-LINE                 .
PSLIN    DS    0CL78                  .
TYP      DS    CL17                   . TEXT
         DS    CL3                    .
COUNT    DS    CL50                   . # PERCENT
         DS    CL3                    .
SIZE     DS    CL6                    . SIZE (K)
K        DS    CL1                    . K
SYSTIM   DS    F                      .
VTAMZ    DC    F'0'                   .
ASVTAD   DS    F                      .
QUOT     DS    F                      .
DWD      DS    D                      .
HDING    DS    0CL73                  .
         DC    CL5' TIME'             .
PRTIME   DS    CL10                   .
SYS      DC    CL40'      ROCHE QUEUE MONITOR               '
         DC    CL19' '                .
MASK     DC    X'402020202021'        .
MASK1    DC    X'40204B20202021'      .
HD2      DC    CL52' '                .
RES      DS    CL6                    .
WORK     DS    CL8                    .
IOSTORE  DS    F                      .
PLPAALOC DC    F'0'                   .
PLPATOTA DC    F'0'                   .
LOCAALOC DC    F'0'                   .
LOCATOTA DC    F'0'                   .
SW       DC    X'00'                  .
DW       DC    D'0'                   .
BINVAL   DC    F'200'                 . 2000 MS
         END
