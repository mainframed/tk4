****************************************
*
*        MODULENAME  : IPLDATE
*
*        DESCRIBTION : IPLDATE VERIFIES THE DATE ENTERED BY THE
*                      OPERATOR DURING IPL. IT INFORMS THE OPERATOR
*                      ABOUT THE STATUS OF THE DATE.
*
*        FUNCTION    : IPLDATE IS CALLED DURING NIP AFTER THE OPERATOR
*                      REPLIED WITH 'U' IN RESPONSE TO MESSAGE IEA888A.
*                      FIRST  > IT CHECKS THAT NO DIFFERENCE EXISTS
*                      BETWEEN THE LOCAL- AND GMT- TIME/DATE.
*                      SECOND > IT READS IN THE DATE FROM LAST IPL AND
*                      CALCULATES THE DIFFERENCE BETWEEN THIS DATE AND
*                      THE DATE FROM THE CURRENT IPL.
*                      THIRD  > IT INFORMS THE OPERATOR ABOUT THE
*                      STATUS OF THE DATE AND LET HIM DECIDE IF HIS
*                      ENTERED DATE IS GOOD OR BAD.
*                      FORTH  > IF THE DATE IS GOOD, IT IS WRITTEN TO
*                      DISK AND THE IPL CAN CONTINUE. IF THE DATE IS IN
*                      ERROR, THE SYSTEM IS SET IN THE WAIT STATE AND
*                      THE OPERATOR SHOULD RE-IPL THE SYSTEM.
*
*        DATE        : THE DATE FROM THE CURRENT IPL IS STORED IN THE
*                      USERDATA SECTION OF THE DIRECTORY ENTRY OF
*                      MODULE IPLDATED. THIS MODULE IS LINKED INTO
*                      SYS1.LINKLIB(IPLDATED).
*
*        ENTRY       : ENTRY AT ENTRY IPLDATE THROUGH BALR R14,R15
*                      FROM IEAVRTOD. THE ENTRY ADDRESS IS LOADED FROM
*                      FIELD 'IPLDATE' IN THE OBRZ-CVT-EXTENSION.
*
*        EXIT        : NORMAL END  BY BR R14 TO IEAVRTOD.
*                      AFTER ERROR BY BR R14 TO IEAVRTOD VIA RECOVERY
*                      RETRY ROUTINE.
*
*        REGISTERS   : REGISTERS ARE SAVED AT THE BEGINNING OF THE
*                      MODULE IN A PROGRAM OWNED SAVE AREA.
*                      R2  BASE FOR WORKAREA
*                      R10 BASE FOR MAINLINE PROCESSING
*                      R11 BASE FOR RECOVERY/RETRY PROCESSING
*                      R13 POINTER TO REGISTER SAVE AREA OF IPLDATE
*                      R3...R9,R12 WORKREGISTERS
*
*        MACROS      : ESTAE/SETRP
*                      GETMAIN/FREEMAIN
*                      BLDL/STOW
*                      WTO/WTOR
*                      IHADCB
*                      IEZDEB
*                      IHASDWA
*                      CVT
*                      DIFF. MACROS FOR STRUCTURED PROGRAMMING
*
*        LINKAGE     : NON REENTREND, NON REUSABLE
*
*        LIBRARY     : SYS1.NUCLEUS
*
*        LOAD MODULE : IEANUC01
*
*        BYPASS      : THE ROUTINE CAN BE BYPASSED BY REPLYING
*                      'BYP' INSTEAD OF YES OR NO TO THE FIRST REPLY,
*                      WHICH IS 'REPLY WITH YES OR NO'.
*
*        DIAGNOSTIC  : IN CASE OF AN ABEND DO THE FOLLOWING;
*        AID           PRINT OUT THE MODULE 'IPLDATE' FROM THE NUCLEUS
*                      USING THE INCOREZAP (DUMP IEANUC01 IPLDATE).
*                      LOOK FOR THE EYECATCHER 'XXXXXXDIAGNOSTIC AREA'
*                      IN THE PRINTOUT. THE EYECATCHER HAS AN INDEX.
*                      INDEX '11' MEANS FIRST AND ONLY ABEND.
*                      INDEX '22' MEANS THIS IS A RECURSIVE ABEND.
*                      IMMEDIATLY AFTER THE EYECATCHER YOU CAN FIND
*                      THE INTERNAL TRACE TABLE FOLLOWED BY REGISTERS
*                      0...15 AT TIME OF ERROR. THE TRACE AND REGISTERS
*                      ARE ALLWAYS FROM THE FIRST ABEND. USE THESE
*                      INFORMATIONS TOGETHER WITH THE MESSAGE DISPLAYED
*                      ON THE OPERATOR CONSOLE TO SOLVE THE ERROR.
*
****************************************
         EJECT
****************************************
*
*        INSTALLATION: THE ID FOR THIS USERMOD IS OBRIPF0. ALL
*                      NECESSARY INFORMATION FOR A SUCCESSFULL IN-
*                      STALLATION CAN BE FOUND IN THE SYS4.LIB.___
*                      LIBRARIES.
*                      LINK IPLDATE  INTO SYS1.NUCLEUS(IEANUC01)
*                      LINK IPLDATED INTO SYS1.LINKLIB(IPLDATED)
*                      ZAP MODULE SYS1.LPALIB(IEAVRTOD)
*                      IPL THE SYSTEM WITH OPTION 'CLPA'
*
****************************************
         EJECT
****************************************
*
*        ERRORHANDLING:  THE MODULE IS ESTAE PROTECTED. PROGRAM CHECKS
*                        AND SYSTEM ABENDS ARE INTERCEPTED BY A RETRY
*                        ROUTINE.
*                        IN CASE OF AN ERROR A MESSAGE IS WRITTEN TO
*                        THE SYSTEM CONSOLE CONTAINING A REASON- AND
*                        A RETURNCODE. THE CONTROL IS PASSED BACK TO
*                        NIP THROUGH THE NORMAL RETURN ROUTINE.
*
*        REASON CODES :  01  ERROR DURING ESTAE
*                        02  ERROR DURING GETMAIN
*                        03  ERROR DURING BLDL
*                        04  ERROR DURING STOW
*
*        RETURN CODES :  FOR A DESCRIPTION SEE IN THE APPROPRIATE
*                        ERROR ROUTINE OR REFER TO
*                        OS/VS2 MVS SUPERVISOR SERVICES AND MACRO
*                        INSTRUCTIONS (GC28-0683)
*
*
****************************************
         EJECT
IPLDATE  CSECT                          START CSECT IPLDATE
         ENTRY IPLDATE
         PRINT NOGEN
****************************************
*        DEFINE REGISTERS.
****************************************
R0       EQU 0
R1       EQU 1
R2       EQU 2
R3       EQU 3
R4       EQU 4
R5       EQU 5
R6       EQU 6
R7       EQU 7
R8       EQU 8
R9       EQU 9
R10      EQU 10
R11      EQU 11
R12      EQU 12
R13      EQU 13
R14      EQU 14
R15      EQU 15
RBASE    EQU R10
         EJECT
*
****************************************
*        SAVE REGISTERS    THEY CAN'T BE STORED TO R13.
****************************************
*
         STM R0,R15,12(R15)             STORE ALL REGS
         LA R13,12(R15)                 SAVE ADRESS OF SAVE AREA
         BC 15,76(R15)                  BRANCH TO THE BEGIN
*
****************************************
*        SAVEAREA.
****************************************
*
SAVE     DS 16F                         SAVE AREA FOR REGS ENTRY
SAVER0   EQU 0                          REG0
SAVER1   EQU SAVER0+4                   REG1
SAVER2   EQU SAVER1+4                   REG2
SAVER3   EQU SAVER2+4                   REG3
SAVER4   EQU SAVER3+4                   REG4
SAVER5   EQU SAVER4+4                   REG5
SAVER6   EQU SAVER5+4                   REG6
SAVER7   EQU SAVER6+4                   REG7
SAVER8   EQU SAVER7+4                   REG8
SAVER9   EQU SAVER8+4                   REG9
SAVER10  EQU SAVER9+4                   REG10
SAVER11  EQU SAVER10+4                  REG11
SAVER12  EQU SAVER11+4                  REG12
SAVER13  EQU SAVER12+4                  REG13
SAVER14  EQU SAVER13+4                  REG14
SAVER15  EQU SAVER14+4                  REG15
         EJECT
*
****************************************
*        ESTABLISH ADRESSABILITY.
****************************************
*
         BALR RBASE,0
         USING START,RBASE
START    B BEGIN
ID       DC C'IPLDATE '                 MODULE ID
         DC CL8'&SYSDATE'
         DC CL6' &SYSTIME'
         EJECT
BEGIN    DS 0H
*
****************************************
*        PROTECT SYSTEM AGAINST ABNORMAL TERMINATION.
****************************************
*
         LA R12,3                       LOAD RETRY COUNTER
ESTAE1   DS 0H                          ENTRY FOR RETRY OF ESTAE
         ESTAE ESTAE,CT,TERM=YES
         IF (LTR,R15,R15,NZ) THEN       TEST R15
           B ERROR1                     NOT ZERO GO TO ERROR ROUTINE
         ENDIF
         XC RECURSE,RECURSE             CLEAR SAVE FOR ABEND CODE
*
****************************************
*        GET STORAGE FOR A WORKAREA.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         LA R12,3                       LOAD RETRY COUNTER
GETMAIN1 DS 0H                          ENTRY FOR RETRY OF GETMAIN
         LA R0,(AREAEND-AREA)           LOAD LENGTH FOR GETMAIN
         GETMAIN R,LV=(R0)              GET THE STORAGE SP=000
         IF (LTR,R15,R15,NZ) THEN       TEST R15
           B ERROR2                     NOT ZERO GO TO ERROR ROUTINE
         ENDIF
         LR R2,R1                       SAVE R1
*
****************************************
*        INITIALIZE THE WORKAREA.
****************************************
*
         USING AREA,R2                  POINT TO THE CONSTANT PART
         MVC AREAID,ID                  MOVE ID INTO WORK
*
****************************************
*        GIVE SYSTEMPROGRAMMER A CHANCE TO BYPASS THIS ROUTINE.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         BAL R14,WTOR                   ISSUE WTOR
         IF (LTR,R15,R15,P) THEN        TEST REPLY
           B RETURN                     POSITIVE MEANS BYPASS
         ENDIF
         EJECT
*
****************************************
*        LOCAL AND GMT TIME/DATE SHOULD BE EQUAL.
*        THE OPERATOR HAS NO CHANCE TO OVERCOME THIS SITUATION.
****************************************
*
TZONE    DS 0H
         L R5,16                        LOAD A(CVT)
         USING CVT,R5                   ADDRESS CVT
         L R5,CVTTZ                     LOAD DIFFERENCE LOCAL GMT TIME
         DROP R5                        FORGET ADDRESSING OF CVT
         IF (LTR,R5,R5,NZ) THEN
           MVI MESSAGE,X'40'            INIT MESSAGE BUFFER
           MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
           MVC MESSAGE(L'MESSD),MESSD   MOVE MESSAGE TO BUFFER
           BAL R14,WTO                  ISSUE MESSAGE
           B CONFIRM2                   TERMINATE IPL
         ENDIF
*
****************************************
*        SAVE THE IPL DATE FROM CVT FOR LATER USE.
****************************************
*
         L R5,16                        LOAD A(CVT)
         USING CVT,R5                   ADDRESS CVT
         MVC DATECVT,CVTDATE            MOVE THE DATE
         DROP R5                        FORGET ADDRESSING OF CVT
*
****************************************
*        ISSUE MONTH AND DATE MESSAGE.
*        AFTER MSG IEA888A THE JULIAN DATE WILL BE DISPLAYED TO THE
*        OPERATOR IN THE FORM YEAR= YYYY  MONTH= MMMMMMMMM DAY= DD.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         BAL R14,MONTH                  ISSUE YYMMDD MESSAGE
         EJECT
*
****************************************
*        READ IN THE DIRECTORY ENTRY WITH BLDL.
****************************************
*
READ     DS 0H
*
****************************************
*        BUILD THE LIST FOR BLDL.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         LA R3,BLDL                     POINT TO THE VARIABL1 PART
         USING BLDLHEAD,R3              ADDRESS HEADER
         LA R0,1
         STH R0,BLDLFF                  STORE NUMBER OF ENTRIES =1
         LA R0,(BLDLLEND-BLDLLIST)
         STH R0,BLDLLL                  STORE L'ENTRY
         LA R3,(BLDLHEND-BLDLHEAD)(R3)  POINT TO LIST ENTRY
         DROP R3
         USING BLDLLIST,R3              ADDRESS ENTRY
         MVC BLDLNAME,MEMBER1           MOVE IN NAME OF MODULE
         DROP R3                        FORGET ADDRESSING OF LIST ENTRY
*
****************************************
*        GET THE DIRECTORY ENTRY FROM SYS1.LINKLIB(IPLDATED).
*        DCB AND DEB FROM THE SYSTEM ARE USED THEREFOR.
****************************************
*
         LA R12,3                       LOAD RETRY COUNTER
BLDL1    DS 0H                          ENTRY FOR RETRY OF BLDL
         L R5,16                        LOAD A(CVT)
         USING CVT,R5                   ADDRESS CVT
         L R5,CVTLINK                   GET DCB FROM SYS1.LINKLIB
         DROP R5                        FORGET ADDRESSING OF CVT
         LA R3,BLDL                     GET BLDL LIST
         BLDL (R5),(R3)                 ISSUE BLDL
         IF (LTR,R15,R15,NZ) THEN       TEST RC
           B ERROR3                     NOT ZERO  GO TO ERROR ROUTINE
         ENDIF
         EJECT
*
****************************************
*        ADDRESS THE USERDATA IN DIRECTORY ENTRY FOR THE TESTS.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         LA R3,BLDL                     POINT TO BLBL LIST
         LA R3,(BLDLHEND-BLDLHEAD)(R3)  POINT TO LIST ENTRY
         USING BLDLLIST,R3              ADDRESS ENTRY
         LA R3,BLDLUSER                 ADDRESS USERDATA
         DROP R3                        FORGET ADDRESSING OF LIST ENTRY
         USING BLDLDATA,R3              ADDRESS USERDATA
         EJECT
*
****************************************
*        TESTS.
*        TESTS ARE MADE FOR THE FOLLOWING CONDITIONES:
*        CURRENT DATE IS EQUAL TO THE DATE FROM LAST IPL.
*        CURRENT DATE IS GREATER AS THE DATE FROM LAST IPL.
*        CURRENT DATE IS LESS AS THE DATE FROM LAST IPL.
****************************************
*
         L R5,DATECVT                   GET DATE FROM CURRENT IPL
         L R6,DATENEW                   LOAD DATE FROM LAST IPL
         SRL R5,4                       SHIFT OUT THE SIGN
         SRL R6,4                       SHIFT OUT THE SIGN
         IF (CR,R5,EQ,R6) THEN          COMP CURRENT WITH LAST
           B TEST1                      CURRENT = LAST
         ELSEIF (CR,R5,GT,R6)
           B TEST2                      CURRENT > LAST
         ELSE
           B TEST3                      CURRENT < LAST
         ENDIF
         EJECT
*
****************************************
*        WRITE BACK THE DIRECTORY ENTRY WITH STOW.
****************************************
*
UPDATE   DS 0H
*
****************************************
*        FIRST CONSTRUCT DCB AND DEB FOR STOW.
*        THE DCB AND DEB FOR SYS1.LINKLIB ARE COPIED FROM THE SYSTEM
*        TO A WORKAREA AND UPDATED.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         L R5,16                        LOAD A(CVT)
         USING CVT,R5                   ADDRESS CVT
         L R5,CVTLINK                   GET DCB OF SYS1.LINKLIB
         DROP R5                        FORGET ADDRESSING OF CVT
         USING IHADCB,R5                ADDRESS DCB
         L R5,DCBDEBAD                  GET DEB FROM DCB
         DROP R5                        FORGET ADDRESSING OF DCB
         MVC AREADEB(166),0(R5)         MOVE DEB
         LA R5,AREADCB                  GET ADDRESS OF DCB COPIE
         USING IHADCB,R5                ADDRESS DCB COPIE
         OI DCBOFLGS,DCBOFOPN           SET DCB IS OPEN
         LA R1,AREADEB                  GET ADDRESS OF DEB COPIE
         ST R1,DCBDEBAD                 STORE ADDRESS INTO DCB COPIE
         DROP R5                        FORGET ADDRESSING OF DCB COPIE
         LA R5,AREADEB                  GET ADDRESS OF DEB COPIE
         USING DEBBASIC,R5              ADDRESS DEB COPIE
         OI DEBOPATB,DEBACCS            SET DEB IS OPEN FOR OUTPUT
         LA R1,AREADCB                  GET ADDRESS OF DCB COPIE
         STCM R1,7,DEBDCBAD+1           STORE BACKWARD ADDRESS INTO DEB
         DROP R5                        FORGET ADDRESSING OF DEB COPIE
         EJECT
*
****************************************
*        CONSTRUCT THE BLDL LIST FOR STOW.
****************************************
*
         LA R3,BLDL                     POINT TO BLDL LIST
         LA R3,(BLDLHEND-BLDLHEAD)(R3)  POINT TO BLDL LIST ENTRY
         USING BLDLLIST,R3              ADDRESS BLDL LIST ENTRY
         LA R4,STOW                     POINT TO STOW LIST
         USING STOWLIST,R4              ADDRESS STOW LIST
         MVC STOWNAME,BLDLNAME          MOVE MEMBER NAME
         MVC STOWTTR,BLDLTTR            MOVE TTR
         MVC STOWUSER,BLDLUSER          MOVE USERDATA
         DROP R3                        FORGET ADDRESSING OF BLDL LIST
         MVI STOWC,X'30'                MEANS NO ALIAS/1 TTR/16 HALFWDS
         LA R4,STOWUSER                 ADDRESS USER ENTRY
         DROP R4                        FORGET ADDRESSING OF STOW LIST
*                                       UPDATE USER DATA
         USING BLDLDATA,R4              ADDRESS USERDATA IN STOW LIST
         MVC DATEOLD,DATENEW            NEW BECOMES NOW OLD
         MVC DATENEW,DATECVT            NEW BECOMES NOW CURRENT
         DROP R4                        FORGET ADDRESSING OF STOW DATA
         EJECT
*
****************************************
*        UPDATE DIRECTORY ENTRY.
****************************************
*
         BAL R14,TRACE                  TRACE THE EVENT
         LA R12,3                       LOAD RETRY COUNTER
STOW1    DS 0H                          ENTRY FOR RETRY
         LA R4,AREADCB                  LOAD ADDRESS OF DCB COPIE
         LA R5,STOW                     LOAD ADDRESS OF DCB COPIE
         STOW (R4),(R5),R               REPLACE THE DIRECTORY ENTRY
         IF (LTR,R15,R15,NZ) THEN       TEST RC
           B ERROR4                     NOT ZERO  GO TO ERROR ROUTINE
         ENDIF
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESS9),MESS9     MOVE MESSAGE TO BUFFER
         LA R1,MESSAGE                  LOAD ADDRESS OF MESSAGE
         USING MESSD1,R1                ADDRESS MESSAGE
         UNPK DD11,DATECVT              MOVE DATE TO MESSAGE
         DROP R1                        FORGET ADDRESSING OF MESSAGE
         BAL R14,WTO                    ISSUE WTO
         B RETURN                       GO TO FINISH
         EJECT
*
****************************************
*        RETURN TO NIP.
****************************************
*
RETURN   DS 0H
         BAL R14,TRACE                  TRACE THE EVENT
         ESTAE 0                        CANCEL THE ESTAE EXIT
         IF (LTR,R15,R15,NZ) THEN       TEST RC
           B ERROR1                     NOT ZERO  GO TO ERROR ROUTINE
         ENDIF
RETURN1  DS 0H
         IF (CLC,AREAID,EQ,ID) THEN     TEST IS WORKAREA EXISTING
           LA R0,(AREAEND-AREA)         LOAD SPID & LENGTH OF AREA
           FREEMAIN R,LV=(R0),A=(R2)    RELEASE THE AREA
         ENDIF
         LM R0,R15,0(R13)               RELOAD ALL REGISTERS
         SR R15,R15                     CLEAR RC
         BR R14                         BRANCH BACK TO IPL
         EJECT
*
****************************************
*        WTO ROUTINE.
*        THIS ROUTINE IS USED TO WRITE A MESSAGE TO THE SYSTEM CONSOLE
*        THE MESSAGE TEXT IS SUPPLIED BY THE CALLING ROUTINE.
****************************************
*
WTO      DS 0H
         ST R14,RETREG                  SAVE RETURN
         LA R1,WTO1                     GET ADDRESS START OF WTO
         DO WHILE=(CLC,OBRZ,NE,0(R1))   SEARCH UNTIL 'OBRZ IS FOUND
           LA R1,1(R1)                  INCREMENT ADDRESS BY 1
         ENDDO
         MVC (L'OBRZ+1)(L'MESSAGE,R1),MESSAGE   MOVE MESSAGE TO WTO
WTO1     DS 0H
         WTO 'OBRZ999                                                  *
                              ',                                       *
               ROUTCDE=(2)
         L R14,RETREG                   RELOAD RETURN ADDRESS
         BR R14                         BRANCH BACK
         EJECT
*
****************************************
*        WTOR ROUTINE.
*        THIS ROUTINE IS USED TO WRITE A MESSAGE TO THE SYSTEM CONSOLE
*        AND TO ANALYSE THE OPERATORS RESPONSE.
****************************************
*
WTOR     DS 0H
         ST R14,RETREG                  SAVE RETURN
         DO INF                         LOOP UNTIL VALID REPLY
           XC ECB,ECB                   CLEAR ECB
           XC REPLY,REPLY               CLEAR REPLY
           LA R3,REPLY                  LOAD ADDRESS OF REPLY BUFFER
           WTOR 'REPLY WITH YES OR NO',                                *
               (3),L'YES,ECB,ROUTCDE=(2)
           WAIT 1,ECB=ECB,LONG=NO       WAIT ON OPERATOR REPLY
           IF (CLC,YES,EQ,REPLY) THEN   THEN YES
             SR R15,R15                 ZERO MEANS YES
             EXIT                       EXIT LOOP
           ELSEIF (CLC,NO,EQ,REPLY)     THEN NO
             SR R15,R15
             BCTR R15,0                 NEGATIV MEANS NO
             EXIT                       EXIT LOOP
           ELSEIF (CLC,BYPASS,EQ,REPLY) THEN BYP
             LA R15,1                   POSITIV MEANS BYPASS
             EXIT                       EXIT LOOP
           ENDIF
         ENDDO
         L R14,RETREG                   RELOAD RETURN ADDRESS
         BR R14                         BRANCH BACK
         EJECT
*
****************************************
*        CALCULATE MONTH AND DAY.
*        THIS ROUTINE TRANSLATES THE JULIAN DATE INTO THE FORM
*        YEAR= YYYY MONTH= MMMMMMMMM DAY= DD AND ISSUES A MESSAGE TO
*        THE SYSTEM CONSOLE.
****************************************
*
MONTH    DS 0H
         ST R14,RETREG1                 SAVE R14
         L R8,DATECVT                   LOAD IPLDATE IN REG8
         SRL R8,16                      SHIFT OUT THE DAYS & SIGN
         STC R8,WORK                    STORE YEAR FOR TESTS
         SR R4,R4                       CLEAR INDEX REG
         IF (TM,WORK,X'01',Z) THEN      EVENTUALLY A LEAPYEAR
           IF (TM,WORK,X'12',NM) THEN   THIS IS A LEAPYEAR
             LA R4,2                    LOAD DISPL. INTO INDEX REG
           ENDIF
         ENDIF
         L R8,DATECVT                   LAOD IPLDATE IN REG8
         SLL R8,16                      SHIFT OUT YEAR
         SRL R8,20
         LA R3,DATETAB                  ADDRESS TABLE
         DO WHILE=(CH,R8,GT,0(R4,R3))   LOOP UNTIL MONTH IS FOUND
           LA R3,(MONTH1-MONTH0)(R3)    ADDRESS NEXT ENTRY
         ENDDO
         LA R5,(MONTH1-MONTH0)          LOAD L'TABLE ENTRY
         SR R4,R5                       ADDRESS NEXT LOWER ENTRY
         LH R9,0(R4,R3)                 LOAD DAYS FROM TABLE
         SLL R8,4                       SHIFT DAYS TO INCLUDE SIGN
         SLL R9,4                       "
         ST R8,WORK                     STORE TO WORKFIELD
         ST R9,CONVERT                  "
         OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
         OI WORK+(L'WORK-1),X'0F'       "
         SP WORK,CONVERT                GET THE DAY IN MONTH
         OI WORK+(L'WORK-1),X'0F'       SET THE SIGN
         SLR R9,R9                      CLEAR R9
         L R8,DATECVT                   GET THE IPL DATE
         SRL R8,16                      SHIFT OUT THE DAYS & SIGN
         SRDL R8,8                      SAVE THE YEAR
         LA R8,X'19'                    INSERT 19 IN REG
         SLDL R8,12                     GET THE SAVED YEAR PLUS SIGN
         ST R8,CONVERT                  SAVE YEAR FOR LATER USE
         OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESSA),MESSA     MOVE MESSAGE TO BUFFER
         LA R1,MESSAGE                  LOAD ADDRESS OF MESSAGE
         USING MESSD3,R1                ADDRESS MESSAGE
         UNPK DD31,DATECVT              MOVE DATE TO MESSAGE
         UNPK DD32,CONVERT              MOVE YEAR TO MESSAGE
         MVC DD33,4(R3)                 MOVE MONTH TO MESSAGE
         UNPK DD34,WORK                 MOVE DAYS TO MESSAGE
         DROP R1                        FORGET ADDRESSING OF MESSAGE
         BAL R14,WTO                    ISSUE WTO
         L R14,RETREG1                  RELOAD RETURN ADDRESS
         BR R14                         BRANCH BACK
         EJECT
*
****************************************
*        TEST1.
*        THE DATE FROM THE CURRENT IPL IS EQUAL TO THE DATE FROM LAST
*        IPL.
*        NORMAL CASE : SEVERALES IPL'S DURING THE DAY.
*        ERROR CASE  : AFTER A BREAK, WEEKEND OR HOLLIDAY THE IPL
*                      DATE SHOULD BE GREATER.
*        ACTION      : INFORM THE OPERATOR AND LET HIM DECIDE THAT
*                      THE DATE IS RIGHT OR WRONG.
*                      FOR RIGHT: THE IPL CAN CONTINUE
*                      FOR WRONG: THE SYSTEM GOES INTO THE WAITSTATE
****************************************
*
TEST1    DS 0H
         BAL R14,TRACE                  TRACE THE EVENT
*
*        *******************************
*        INFORM THE OPERATOR THAT THE DATES ARE EQUAL.
*        *******************************
*
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESS1),MESS1     MOVE MESSAGE TO BUFFER
         LA R1,MESSAGE                  LOAD ADDRESS OF MESSAGE
         USING MESSD1,R1                ADDRESS MESSAGE
         UNPK DD11,DATECVT              MOVE DATE TO MESSAGE
         DROP R1                        FORGET ADDRESSING OF MESSAGE
         BAL R14,WTO                    ISSUE WTO
*
*        *******************************
*        LET THE OPERATOR CONFIRM THE DATE.
*        *******************************
*
         B CONFIRM                      GO TO CONFIRM
         EJECT
*
****************************************
*        TEST2
*        THE DATE FROM THE CURRENT IPL IS GREATER AS THE DATE FROM
*        LAST IPL.
*        NORMAL CASE : AFTER A BREAK, WEEKEND OR HOLLIDAY THE IPL
*                      DATE IS GREATER AS THE DATE FROM LAST IPL.
*        ERROR CASE  : SEVERALES IPL'S DURING THE DAY.
*        ACTION      : INFORM THE OPERATOR AND LET HIM DECIDE THAT
*                      THE DATE IS RIGHT OR WRONG.
*                      FOR RIGHT: UPDATE DIRECTORY AND CONTINUE IPL
*                      FOR WRONG: THE SYSTEM GOES INTO THE WAITSTATE
****************************************
*
TEST2    DS 0H
         BAL R14,TRACE                  TRACE THE EVENT
*
*        *******************************
*        AFTER A SYSGEN OR AN IOGEN THE DATE STORED IN THE DIRECTORY
*        COULD BE ZERO. IN THIS CASE INFORM THE OPERATOR.
*        *******************************
*
         IF (LTR,R6,R6,Z) THEN          LAST IPL DATE IS ZERO
           MVI MESSAGE,X'40'            INIT MESSAGE BUFFER
           MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
           MVC MESSAGE(L'MESS7),MESS7   MOVE MESSAGE TO BUFFER
           BAL R14,WTO                  ISSUE WTO
           B UPDATE                     UPDATE THE DATE
         ENDIF
*
*        *******************************
*        CALCULATE THE DIFFERENCE BETWEEN THE TWO DATES.
*        *******************************
*
         LR R8,R5                       CURRENT DATE
         LR R9,R6                       LAST IPL DATE
         SRL R8,12                      SHIFT OUT THE DAYS
         SRL R9,12                      SHIFT OUT THE DAYS
         SR R8,R9                       GET THE DIFERENCE IN YEARS
*
         IF (LTR,R8,R8,Z) THEN          SAME YEAR
*
*          *****************************
*          ONLY THE DAYS ARE DIFFERENT.
*          INFORM THE OPERATOR THAT THE DATE IS GREATER.
*          *****************************
*
           LR R8,R5                     CURRENT DATE
           LR R9,R6                     LAST IPL DATE
           SLL R8,4                     SHIFT DAYS TO INCLUDE THE SIGN
           SLL R9,4                     SHIFT DAYS TO INCLUDE THE SIGN
           ST R8,CONVERT                STORE DAYS FOR LATER USE
           ST R9,WORK                   STORE DAYS FOR LATER USE
           OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
           OI WORK+(L'WORK-1),X'0F'     SET THE SIGN
           SP CONVERT,WORK              GET THE DIFERENCE IN DAYS
           OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
           MVI MESSAGE,X'40'            INIT MESSAGE BUFFER
           MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
           MVC MESSAGE(L'MESS2),MESS2   MOVE MESSAGE TO BUFFER
           LA R1,MESSAGE                LOAD ADDRESS OF MESSAGE
           USING MESSD1,R1              ADDRESS MESSAGE
           UNPK DD11,DATECVT            MOVE DATE TO MESSAGE
           UNPK DD12,CONVERT            MOVE DAY TO WTO MESSAGE
           DROP R1                      FORGET ADDRESSING OF WTO
           BAL R14,WTO                  ISSUE WTO
*
         ELSE                           THE YEAR IS GREATER
*
*          *****************************
*          THE YEAR IS DIFFERENT.
*          INFORM THE OPERATOR THAT THE DATE IS SIGNIFICANT DIFFERENT.
*          *****************************
*
           SLR R9,R9                    CLEAR R9
           LR R8,R5                     GET THE IPL DATE
           SRL R8,12                    SHIFT OUT THE DAYS
           SRDL R8,8                    SAVE THE YEAR
           LA R8,X'19'                  INSERT 19 IN REG
           SLDL R8,12                   GET THE SAVED YEAR PLUS SIGN
           ST R8,CONVERT                SAVE YEAR FOR LATER USE
           OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
           MVI MESSAGE,X'40'            INIT MESSAGE BUFFER
           MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
           MVC MESSAGE(L'MESS5),MESS5   MOVE MESSAGE TO BUFFER
           LA R1,MESSAGE                LOAD ADDRESS OF MESSAGE
           USING MESSD2,R1              ADDRESS MESSAGE
           UNPK DD21,CONVERT            MOVE DATE TO MESSAGE
           DROP R1                      FORGET ADDRESSING OF MESSAGE
           BAL R14,WTO                  ISSUE WTO
*
         ENDIF
*
*        *******************************
*        LET THE OPERATOR CONFIRM THE DATE.
*        *******************************
*
         B CONFIRM                      GO TO CONFIRM
         EJECT
*
****************************************
*        TEST3.
*        THE DATE FROM THE CURRENT IPL IS LESS AS THE DATE FROM LAST
*        IPL.
*        NORMAL CASE : TO CORRECT A DATE FORM AN EARLIER IPL.
*                      TO RUN A PROGRAMM WHICH REQUIRES A SPECIAL
*                      IPL DATE.
*        ERROR CASE  : THE OPERATOR HAS MISSED TO ENTER THE RIGHT DATE
*        ACTION      : INFORM THE OPERATOR AND LET HIM DECIDE THAT
*                      THE DATE IS RIGHT OR WRONG.
*                      FOR RIGHT: UPDATE DIRECTORY AND CONTINUE IPL
*                      FOR WRONG: THE SYSTEM GOES INTO THE WAITSTATE
****************************************
*
TEST3    DS 0H
         BAL R14,TRACE                  TRACE THE EVENT
*
*        *******************************
*        CALCULATE THE DIFFERENCE BETWEEN THE TWO DATES.
*        *******************************
*
         LR R8,R5                       CURRENT DATE
         LR R9,R6                       LAST IPL DATE
         SRL R8,12                      SHIFT OUT THE DAYS
         SRL R9,12                      SHIFT OUT THE DAYS
         SR R9,R8                       GET THE DIFERENCE IN YEARS
*
         IF (LTR,R9,R9,Z) THEN          SAME YEAR
*
*          *****************************
*          ONLY THE DAYS ARE DIFFERENT.
*          INFORM THE OPERATOR THAT THE DATE IS LESS.
*          *****************************
*
           LR R8,R5                     CURRENT DATE
           LR R9,R6                     LAST IPL DATE
           SLL R8,4                     SHIFT DAYS TO INCLUDE THE SIGN
           SLL R9,4                     SHIFT DAYS TO INCLUDE THE SIGN
           ST R9,CONVERT                STORE DAYS FOR LATER USE
           ST R8,WORK                   STORE DAYS FOR LATER USE
           OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
           OI WORK+(L'WORK-1),X'0F'     SET THE SIGN
           SP CONVERT,WORK              GET THE DIFERENCE IN DAYS
           OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
           MVI MESSAGE,X'40'            INIT MESSAGE BUFFER
           MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
           MVC MESSAGE(L'MESS3),MESS3   MOVE MESSAGE TO BUFFER
           LA R1,MESSAGE                LOAD ADDRESS OF MESSAGE
           USING MESSD1,R1              ADDRESS MESSAGE
           UNPK DD11,DATECVT            MOVE DATE TO MESSAGE
           UNPK DD12,CONVERT            MOVE DAY TO WTO MESSAGE
           DROP R1                      FORGET ADDRESSING OF WTO
           BAL R14,WTO                  ISSUE WTO
*
         ELSE                           THE YEAR IS LESS
*
*         ******************************
*         THE YEAR IS DIFFERENT.
*         INFORM THE OPERATOR THAT THE DATE IS SIGNIFICANT DIFFERENT.
*         ******************************
*
           SLR R9,R9                    CLEAR R9
           LR R8,R5                     GET THE IPL DATE
           SRL R8,12                    SHIFT OUT THE DAYS
           SRDL R8,8                    SAVE THE YEAR
           LA R8,X'19'                  INSERT 19 IN REG
           SLDL R8,12                   GET THE SAVED YEAR PLUS SIGN
           ST R8,CONVERT                SAVE YEAR FOR LATER USE
           OI CONVERT+(L'CONVERT-1),X'0F' SET THE SIGN
           MVI MESSAGE,X'40'            INIT MESSAGE BUFFER
           MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
           MVC MESSAGE(L'MESS5),MESS5   MOVE MESSAGE TO BUFFER
           LA R1,MESSAGE                LOAD ADDRESS OF MESSAGE
           USING MESSD2,R1              ADDRESS MESSAGE
           UNPK DD21,CONVERT            MOVE DATE TO MESSAGE
           DROP R1                      FORGET ADDRESSING OF WTO
           BAL R14,WTO                  ISSUE WTO
*
         ENDIF
*
*        *******************************
*        LET THE OPERATOR CONFIRM THE DATE.
*        *******************************
*
         B CONFIRM                      GO TO CONFIRM
         EJECT
*
****************************************
*        LET OPERATOR CONFIRM THE DATE AND TAKE THE APPROPRIATE ACTION.
****************************************
*
CONFIRM  DS 0H
*
*        *******************************
*        LET THE OPERATOR CONFIRM THE DATE.
*        *******************************
*
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESS8),MESS8     MOVE MESSAGE TO BUFFER
         BAL R14,WTO                    ISSUE WTO
         BAL R14,WTOR                   ISSUE WTOR
         IF (LTR,R15,R15,Z) THEN
           B CONFIRM1                   REPLY IS YES CONTINUE IPL
         ELSE
           B CONFIRM2                   REPLY IS NO TERMINATE IPL
         ENDIF
*
*        *******************************
*        THE DATE IS OK. WRITE A MESSAGE TO THE OPERATOR THAT THE
*        DATE WAS CONSIDERED AS GOOD.
*        *******************************
*
CONFIRM1 DS 0H
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESS4),MESS4     MOVE MESSAGE TO BUFFER
         LA R1,MESSAGE                  LOAD ADDRESS OF MESSAGE
         USING MESSD1,R1                ADDRESS MESSAGE
         UNPK DD11,DATECVT              MOVE DATE TO MESSAGE
         DROP R1                        FORGET ADDRESSING OF WTO
         BAL R14,WTO                    ISSUE WTO
         B UPDATE                       BACK TO UPDATE
*
*        *******************************
*        THE OPERATOR HAS DECIDED THAT THE DATE IS IN ERROR. HE WILL
*        BE INFORMED WHICH ACTION SHOULD BE PERFORMED AND THE IPL IS
*        STOPPED.
*        *******************************
*
CONFIRM2 DS 0H
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESS6),MESS6     MOVE MESSAGE TO BUFFER
         BAL R14,WTO                    ISSUE MESSAGE
         CHAP 0                         SET TCB AT THE END OF QUEUE
         CALLDISP BRANCH=NO             GIVE CONTROL TO COMUNICATION
         LPSW WAIT                      DATE IS WRONG GO INTO WAITSTATE
         EJECT
*
****************************************
*        INTERNAL TRACE ROUTINE.
*        THE DISPLACEMENT FROM THE CALLING ROUTINE IS SAVED IN A WRAP
*        AROUND TABLE AT THE END OF THIS MODULE.
*        THE TRACE IS DISABLED IN CASE OF AN RECURSIVE ABEND.
****************************************
*
TRACE    DS 0H
         L R0,RECURSE                    SEE IF ABEND
         IF (LTR,R0,R0,NZ) THEN          YES GO BACK
           BR R14
         ENDIF
         LR R0,R14                       GET LAST INSTRUCTION ADDRESS
         S R0,SAVER15(R13)               CALCULATE DISPLACEMENT
         LA R15,4                        POINT BACK TO TRACE INSTR.
         SR R0,R15
         LA R15,TRACETAB                 ADDRESS ENTRY
         AH R15,TRACETAB                 GET NEXT ENTRY
         STH R0,L'ENTRY(R15)             TRACE DISPLACEMENT IN MODULE
         MVC TRACETAB,L'TRACETAB(R15)    POINT TO NEXT FREE ENTRY
         BR R14                          BACK TO MAINLINE
         EJECT
*
****************************************
*        ERROR DURING ESTAE.
*          REASON CODE : 01
*          RETURN CODE : 0C  CANCEL WAS SPECIFIED AND EITHER THERE ARE
*                            NO EXITS FOR THIS TCB, THE MOST RECENT
*                            EXIT IS NOT OWEND BY THE CALLER, OR THE
*                            MOST RECENT EXIT IS NOT AN ESTAE EXIT.
*                        10  AN UNEXPECTED ERROR WAS ENCOUNTERED WHILE
*                            PROCESSING THIS REQUEST.
*                        14  ESTAE WAS UNABLE TO OBTAIN STORAGE FOR AN
*                            SCB.
*          RETRY       :     FOR RC= 14 ISSUE ESTAE 3 TIMES.
****************************************
*
ERROR1   DS 0H
         LA R1,X'14'                    LOAD RC FOR TEST
         IF (CR,R1,EQ,R15) THEN         RETRY IS POSSIBLE
           BCT R12,ESTAE1               BRANCH BACK FOR RETRY 3 TIMES
         ENDIF
         LA R1,X'01'                    LOAD REASON CODE
         ST R1,CODE1                    STORE REASON CODE
         ST R15,CODE2                   STORE REASON CODE
         BAL R14,ERRORM                 ISSUE ERROR MESSAGE
         B RETURN1                      GO BACK TO IPL
         EJECT
*
****************************************
*        ERROR DURING GETMAIN.
*          REASON CODE : 02
*          RETURN CODE : 04  NO VIRTUAL STORAGE WAS ALLOCATED
*                        08  ON REQUEST FOR SQA OR LSQA, NO REAL
*                            STORAGE PAGE WAS AVAILABLE.
*          RETRY       :     FOR RC= 04,08 ISSUE GETMAIN 3 TIMES.
****************************************
*
ERROR2   DS 0H
         BCT R12,GETMAIN1               BRANCH BACK FOR RETRY
         LA R1,X'02'                    LOAD REASON CODE
         ST R1,CODE1                    STORE REASON CODE
         ST R15,CODE2                   STORE REASON CODE
         BAL R14,ERRORM                 ISSUE ERROR MESSAGE
         B RETURN                       GO BACK TO IPL
         EJECT
*
****************************************
*        ERROR DURING BLDL.
*          REASON CODE : 03
*          RETURN CODE : 04/00  ONE ORE MORE ENTRIES IN THE LIST
*                               COULD NOT BE FILLED; THE LIST SUPPLIED
*                               MAY BE INVALID. IF A SEARCH IS ATTEMPT.
*                               BUT THE ENTRY IS NOT FOUND, THE R FIELD
*                               FOR THAT ENTRY IS SET TO ZERO.
*                        08/00  A PERMANENT I/O ERROR WAS DETECTED WHEN
*                               THE SYSTEM ATTEMPTED TO SEARCH THE
*                               DIRECTORY.
*                        08/04  INSUFFICIENT VIRTUAL STORAGE WAS
*                               AVAILABLE.
*          RETRY       :        FOR RC= 08/04 ISSUE BLDL 3 TIMES.
****************************************
*
ERROR3   DS 0H
         LA R1,X'08'                    LOAD RC FOR TEST
         IF (CR,R1,EQ,R15) THEN         YES RC= 8
           SRL R1,1                     CONSTRUCT REASON CODE =4
           IF (CR,R1,EQ,R0) THEN        YES REASON= 4
             LA R3,(BLDLHEND-BLDLHEAD)(R3)  POINT TO LIST ENTRY
             USING BLDLLIST,R3          ADDRESS BLDL ENTRY
             XC BLDLTTR(BLDLUSER-BLDLTTR),BLDLTTR   CLEAR TTR K Z C
             DROP R3                    FORGET ADDRESSING OF LIST ENTRY
             BCT R12,BLDL1              BRANCH BACK FOR RETRY
           ENDIF
         ENDIF
         LA R1,X'03'                    LOAD REASON CODE
         ST R1,CODE1                    STORE REASON CODE
         SLL R15,4                      MAKE PLACE FOR REASON CODE
         OR R15,R0                      LOAD REASON INTO RC REGISTER
         ST R15,CODE2                   STORE REASON CODE
         BAL R14,ERRORM                 ISSUE ERROR MESSAGE
         B RETURN                       GO BACK TO IPL
         EJECT
*
****************************************
*        ERROR DURING STOW.
*          REASON CODE : 04     ONLY FOR OPTION= R
*          RETURN CODE : 08/XX  THE SPECIFIED NAME COULD NOT BE FOUND.
*                        0C/XX  NO SPACE LEFT IN THE DIRECTORY. THE
*                               ENTRY COULD NOT BE ADDED, REPLACED OR
*                               CHANGED.
*                        10/XX  A PERMANENT I/O ERROR WAS DETECTED.
*                               CONTROL WAS NOT GIVEN TO THE SYNAD
*                               ROUTINE.
*                        14/XX  THE SPECIFIED DCB IS NOT OPEN OR IS
*                               OPENED FOR INPUT.
*                        18/XX  INSUFFICIENT VIRTUAL STORAGE WAS AVAI-
*                               LABLE TO PERFORM THE STOW FUNCTION.
*                        XX=01  A PERMANENT I/O ERROR OCCURED WHILE
*                               READING OR WRITING DIRECTORY BLOCKS.
*                        XX=02  A PERMANENT I/O ERROR OCCURED WHILE
*                               WRITING AN EOF MARK AFTER THE MEMBER.
*          RETRY       :        FOR RC= 18/00 ISSUE STOW 3 TIMES.
****************************************
*
ERROR4   DS 0H
         LA R1,X'18'                    LOAD RC FOR TEST
         IF (CR,R1,EQ,R15) THEN
           IF (LTR,R0,R0,Z) THEN
             BCT R12,STOW1              BRANCH BACK FOR RETRY
           ENDIF
         ENDIF
         LA R1,X'04'                    LOAD REASON CODE
         ST R1,CODE1                    STORE REASON CODE
         SLL R15,4                      MAKE PLACE FOR REASON CODE
         OR R15,R0                      LOAD REASON INTO RC REGISTER
         ST R15,CODE2                   STORE REASON CODE
         BAL R14,ERRORM                 ISSUE ERROR MESSAGE
         B RETURN                       GO BACK TO IPL
         EJECT
*
****************************************
*        ISSUE ERROR MESSAGE.
****************************************
*
ERRORM   DS 0H
         ST R14,RETREG1                 STORE RETURN ADDRESS
         LA R8,CODE                     LOAD ADDRESS WORKFIELD
         DO FROM=(R12,2)                MAIN LOOP PREPARE MESSAGE
           L R4,0(R8)                   LOAD CODE INTO REGISTER
           DO FROM=(R9,3)               MAINOR LOOP PREPARE FIELD
             SRDL R4,4                  SHIFT NUMBERTO R5
             SRL R5,28                  ALIGNE NUMBER
             STC R5,0(R9,R8)            STORE TO NUMBER TO WORKFIELD
           ENDDO                        LOOP UNTIL FIELD IS COMPLETE
           TR 0(L'CODE1,R8),TRTAB       TRANSLATE TO PRINTABLE
           LA R8,L'CODE1(R8)            ADDRESS NEXT CODE FIELD
         ENDDO                          LOOP UNTIL ALL CODES ARE TRANS.
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESSC),MESSC     MOVE MESSAGE TO BUFFER
         LA R1,MESSAGE                  LOAD ADDRESS OF MESSAGE
         USING MESSD5,R1                ADDRESS MESSAGE
         MVC DD51,CODE1                 MOVE REASON CODE
         MVC DD52,CODE2                 MOVE RETURN CODE
         DROP R1                        FORGET ADDRESSING OF WTO
         BAL R14,WTO                    ISUE MESSAGE
         L R14,RETREG1                  RELOAD RETURN ADDRESS
         BR R14                         BRANCH BACK
         EJECT
*
****************************************
*        ESTAE EXIT ROUTINE.
*        THIS ROUTINE GETS CONTROL AFTER AN ABNORMAL CONDITION FROM
*        NORMAL- ABNORMAL TERMINATION.
****************************************
*
ESTAE    DS 0H
         DROP RBASE                     FORGET BASE ADDRESSING
         USING ESTAE,R11                SET NEW BASE
         LR R11,R15                     LOAD NEW BASE ADDRESS
         SLR R15,R15                    SET RC FOR TERMINATION NO SDWA
         LA R3,12
         IF (CR,R0,EQ,R3) THEN          RETRY NOT POSSIBLE
           BR R14                       CONTINUE ABNORMAL TERMINATION
         ELSE                           RETRY POSSIBLE
           SETRP RC=4,RETADDR=RETRY,DUMP=NO    SETUP FOR RETRY
           BR R14                       BACK TO TERMINATION FOR RETRY
         ENDIF
         EJECT
*
****************************************
*        RETRY ROUTINE.
*        THIS ROUTINE GETS CONTROL FROM ESTAE RECOVERY EXIT.
*        THE REGS 0...15 AT TIME OF ERROR ARE SAVED IN AN AREA.
*        THE DISPLACEMENT TO THE INTERRUPTED INSTRUCTION IS CALCULATED
*        AND TOGETHER WITH THE ABENDCODE DISPLAYED TO THE OPERATOR.
*        THE REGISTER ARE RESTORED TO THE CONTENTS AT THE TIME OF ERROR
*        AND THE CONTROL IS GIVEN TO THE RETURN ROUTINE TO PASS CONTROL
*        BACK TO NIP. IN CASE OF A RECUSIVE ABEND GO BACK TO IPL
*        WITHOUT A MESSAGE .
****************************************
*
RETRY    DS 0H
         DROP R11                       FORGET ADDRESSING ESTAE/RETRY
         USING START,RBASE              ADDRESS CONSTANTS
         LR R11,R1                      LAOD ADDRESS OF SDWA
         USING SDWA,R11                 ADDRESS SDWA
         LM R2,R10,SDWAGR02             RELOAD REGS AT TIME OF ERROR
         IF (CLC,SDWACMPC,EQ,RECURSE) THEN   IF ABEND IS RECURSIVE
           MVC TRACETAB,SECOND          SET SECOND ABEND INDICATOR
           B RETURN                     THEN GO BACK TO IPL
         ELSE                           ELSE
           MVC TRACETAB,FIRST           SET FIRST ABEND INDICATOR
           MVC RECURSE,SDWACMPC         SAVE ABEND CODE
         ENDIF
         MVC ABNDREGS,SDWAGRSV          SAVE REGS FOR DEBUGGING
         L R4,SDWACMPF                  GET ABENDCODE FROM SDWA
         SLL R4,8                       CLEAR HIGH ORDER BYTE
         SRL R4,16                      ALIGNE CMP
         LA R8,(CMP-1)                  LOAD ADDRESS WORKFIELD
         DO FROM=(R9,4)                 LOOP CONVERT CMP
           SRDL R4,4                    SHIFT CMP TO R5
           SRL R5,28                    ALIGNE CMP
           STC R5,0(R9,R8)              STORE TO CMP WORKFIELD
         ENDDO                          LOOP UNTIL CMP IS COMPLETE
         TR CMP,TRTAB
         IF (CLI,CMP+3,EQ,X'F0') THEN   TEST IF ZERO
           MVI CMP+3,X'40'              BLANK OUT THE ZERO
         ENDIF
         SLR R4,R4                      CLEAR REG4
         ICM R4,7,SDWANXTA              GET NEXT ADDRESS FROM PSW
         IF (CLI,CMP+1,NE,X'C3') THEN   NOT PGM CHECK
           ICM R4,7,SDWANXTP            GET NEXT ADDRESS FROM PRB PSW
         ENDIF
         L R13,SDWAGR13                 GET ADDRESS OF SAVE AREA
         L R5,SAVER15(R13)              GET ENTRYPOINT
         SLL R5,1                       MAKE REG POSITIVE
         SRL R5,1
         SR R4,R5                       GET DISPLACEMENT TO INTERUPT
         IF (CLI,CMP+1,EQ,X'C3') THEN   IT IS PGM CHECK
           IF (TM,SDWAPMKA,X'C0',Z) THEN  TEST WICH ILC
             LA R5,2                    ZERO LENGTH =2
           ELSEIF (TM,SDWAPMKA,X'C0',M)
             LA R5,4                    MIXED LENGTH =4
           ELSE
             LA R5,6                    ONES LENGTH =6
           ENDIF
         ELSE                           NOT PGM CHECK
           IF (TM,SDWAPMKP,X'C0',Z) THEN  TEST WICH ILC
             LA R5,2                    ZERO LENGTH =2
           ELSEIF (TM,SDWAPMKP,X'C0',M)
             LA R5,4                    MIXED LENGTH =4
           ELSE
             LA R5,6                    ONES LENGTH =6
           ENDIF
         ENDIF
         SR R4,R5                       THAT'S THE INTERUPT ADDRESS
         LA R8,CONVERT                  LOAD ADDRESS WORKFIELD
         DO FROM=(R9,3)                 LOOP CONVERT ADDRESS
           SRDL R4,4                    SHIFT ADR TO R5
           SRL R5,28                    ALIGNE ADR
           STC R5,0(R9,R8)              STORE TO ADR WORKFIELD
         ENDDO                          LOOP UNTIL ADR IS COMPLETE
         TR CONVERT,TRTAB
         MVI MESSAGE,X'40'              INIT MESSAGE BUFFER
         MVC MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVC MESSAGE(L'MESSB),MESSB     MOVE MESSAGE TO BUFFER
         LA R1,MESSAGE                  LOAD ADDRESS OF MESSAGE
         USING MESSD4,R1                ADDRESS MESSAGE
         MVC DD41,CMP                   MOVE CMP TO MESSAGE
         MVC DD42,CONVERT+1             MOVE DISP TO MESSAGE
         DROP R1                        FORGET ADDRESSING OF WTO
         BAL R14,WTO                    ISUUE MESSAGE
         L R0,SDWASPID                  LOAD SPID & LENGTH OF SDWA
         LR R1,R11                      SAVE ADDRESS OF SDWA
         LM R2,R13,SDWAGR02             RELOAD REGS AT TIME OF ERROR
         DROP R11                       FORGET ADDRESSING OF SDWA
         FREEMAIN R,LV=(R0),A=(R1)      RELEASE THE SDWA
         B RETURN                       BACK TO MAINLINE
         EJECT
*
****************************************
*        CONSTANTS.
****************************************
*
********
         DS 0D
WAIT     DC X'070E000000000000'         WAIT PSW
********
MEMBER1  DC CL8'IPLDATED'               NAME OF MODULE TO BE SEARCHED
********
TRTAB    DC X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  TRANSLATE TABLE 0...F
********
ECB      DS F                           ECB
********
YES      DC C'YES'                      CONSTANT YES
********
NO       DC C'NO'                       CONSTANT NO
********
BYPASS   DC C'BYP'                      CONSTANT BYPASS
********
DAY      DC C'DAY'                      CONSTANT DAY
********
DATE     DC C'DATE'                     CONSTANT DATE
********
OBRZ     DC C'OBRZ999  '                CONSTANT OBRZ999
********
CODE     DS 0D
CODE1    DS F                           WORKFIELD REASON CODE
CODE2    DS F                           WORKFIELD RETURN CODE
********
RETREG   DS F                           SAVE R14
RETREG1  DS F                           SAVE R14
********
RECURSE  DS F                           SAVE ABEND CODE
********
FIRST    DC C'11'                       CONSTANT 1111
********
SECOND   DC C'22'                       CONSTANT 2222
********
         EJECT
********
DATETAB  DS 0H                          DATE TABLE
MONTH0   DC XL2'0000',XL2'0000',CL10'DUMMY     '
MONTH1   DC XL2'0031',XL2'0031',CL10'JANUARY   '
MONTH2   DC XL2'0059',XL2'0060',CL10'FEBRUARY  '
MONTH3   DC XL2'0090',XL2'0091',CL10'MARCH     '
MONTH4   DC XL2'0120',XL2'0121',CL10'APRIL     '
MONTH5   DC XL2'0151',XL2'0152',CL10'MAY       '
MONTH6   DC XL2'0181',XL2'0182',CL10'JUNE      '
MONTH7   DC XL2'0212',XL2'0213',CL10'JULY      '
MONTH8   DC XL2'0243',XL2'0244',CL10'AUGUST    '
MONTH9   DC XL2'0273',XL2'0274',CL10'SEPTEMBER '
MONTH10  DC XL2'0304',XL2'0305',CL10'OCTOBER   '
MONTH11  DC XL2'0334',XL2'0335',CL10'NOVEMBER  '
MONTH12  DC XL2'0365',XL2'0366',CL10'DECEMBER  '
********
MESSAGE  DS CL60
MESS1    DC C'(YYDDD) IS EQUAL TO THE DATE FROM LAST IPL'
MESS2    DC C'(YYDDD) IS DAYS (DDD) GREATER THAN THE DATE OF LAST IPL'
MESS3    DC C'(YYDDD) IS DAYS (DDD) LESS THAN THE DATE OF LAST IPL'
MESS4    DC C'(YYDDD) WAS CONFIRMED BY OPERATOR  IPL CONTINUES'
MESS5    DC C'(YYYY) IS THE YEAR FOR THIS IPL  <<<<<<<<<<<<<<<'
MESS6    DC C'SYSTEM IS IN WAIT  PERFORM AN IPL'
MESS7    DC C'DATE FROM LAST IPL IS ZERO INFORM SYSTEMGROUP'
MESS8    DC C'IS THE DATE OK'
MESS9    DC C'(YYDDD) WAS SAVED BY IPLDATE'
MESSA    DC C'(YYDDD) IS YEAR= YYYY  MONTH= MMMMMMMMM  DAY= DD'
MESSB    DC C'ABENDCODE XXXX IN IPLDATE AT XXX'
MESSC    DC C'IPLDATE TERMINATED DUE TO ERROR REASON= XXXX RC= XXXX'
MESSD    DC C'GMT AND LOCAL TIME/DATE SHOULD BE EQUAL'
         EJECT
******** DIAGNOSTIC SECTION FOR MODULE IPLDATE
         DS 0F
         DC C'XXXXXXDIAGNOSTIC AEREA'   FOR DEBUGGING
********* TRACETABLE
TRACETAB DC X'0000'                     INDEX TO THE CURRENT ENTRY
ENTRY    DC X'00040000'                 THE FIRST HALFWORD CONTAINS AN
         DC X'00080000'                 INDEX TO THE NEXT ENTRY IN THE
         DC X'000C0000'                 TABLE.
         DC X'00100000'                 THE SECOND HALFWORD CONTAINS
         DC X'00140000'                 THE DISPLACEMENT FROM THE START
         DC X'00180000'                 OF THE MODULE TO THE TRACED IN-
         DC X'001C0000'                 STRUCTION.
         DC X'00000000'                 POINT BACK TO START OF TABLE
         DS 0F                          ALLIGNE SAVE AREA TO FULLWORD
******** THE REGS FROM THE SDWA ARE STORED HERE BY ESTAE/RETRY
ABNDREGS DS XL64                        REGS 0...15 AT TIME OF ERROR
********
         EJECT
*
****************************************
*        DATA-DEFINITIONS
****************************************
*
********
AREA     DSECT                          DEFINE WORKSTORAGE FOR GETMAIN
CONSTANT DS 0XL200                      START OF CONSTANT SECTION
AREAID   DS CL8                         ID FOR WORKSTORAGE
DATECVT  DS F                           SAVED CVTDATE
CONVERT  DS F                           WORKFIELD FOR CONVERSIONS
WORK     DS F                           WORKFIELD
CMP      DS F                           CMP WORKFIELD
REPLY    DS XL119                       BUFFER FOR WTOR REPLY
         DS XL57                        UNUSED
BLDL     DS 0XL80                       START OF VARIABL1 SECTION
         DS XL80                        BLDL LIST
STOW     DS 0XL80                       START OF VARIABL1 SECTION
         DS XL80                        BLDL LIST
AREADCB  DS 0XL100                      SPACE FOR DCB
         DS XL100
         DS XL8                         RESERVE 8 BYTE FOR PREFIX
AREADEB  DS 0XL192                      SPACE FOR DEB
         DS XL192
AREAEND  DS 0H                          END OF WORKSTORAGE
         EJECT
********
BLDLHEAD DSECT                          HEADER FOR BLDL LIST
BLDLFF   DS XL2                         NUMBER OF MEMBERS IN LIST
BLDLLL   DS XL2                         L'BLDLENTRY
BLDLHEND DS 0H
********
BLDLLIST DSECT                          LIST FOR BLDL
BLDLNAME DS CL8                         MEMBER NAME
BLDLTTR  DS XL3                         TTR OF MEMBER
BLDLK    DS XL1
BLDLZ    DS XL1
BLDLC    DS XL1                         LENGTH OF USER DATA
BLDLUSER DS XL32                        USER DATA
BLDLLEND DS 0H
********
BLDLDATA DSECT                          DEFINE USERDATA IN DIRECTORY
SYSTEM   DS 12H                         USED BY SYSTEM
USER     DS 0XL8                        USED BY USER
DATEOLD  DS XL4                         DATE OF PREVIOUSE IPL
DATENEW  DS XL4                         DATE OF CURRENT IPL
********
STOWLIST DSECT                          LIST FOR STOW
STOWNAME DS CL8                         MEMBER NAME
STOWTTR  DS XL3                         TTR OF MEMBER
STOWC    DS XL1                         LENGTH OF USER DATA
STOWUSER DS XL32                        USER DATA
STOWLEND DS 0H
********
MESSD1   DSECT                          USED TO MOVE DAYS TO MESSAGE
         DS CL1                         FILLER
DD11     DS CL5                         DATE IN FORM YYDDD
         DS CL11                        FILLER
DD12     DS CL3                         DIFFERENCE IN DAYS IN FORM DDD
********
MESSD2   DSECT                          USED TO MOVE YEAR TO MESSAGE
         DS CL1                         FILLER
DD21     DS CL4                         YEAR IN FORM YYYY
********
MESSD3   DSECT                          USED TO MOVE DATE ETC TO MESS
         DS CL1                         FILLER
DD31     DS CL5                         DATE IN FORM YYDDD
         DS CL11                        FILLER
DD32     DS CL4                         YEAR IN FORM 19YY
         DS CL9                         FILLER
DD33     DS CL9                         MONTH IN FORM MMMMMMMMM
         DS CL7                         FILLER
DD34     DS CL2                         DAYS IN FORM DD
********
MESSD4   DSECT                          USED TO MOVE DATA TO MESSAGE
         DS CL10                        FILLER
DD41     DS CL4                         COMPL CODE
         DS CL15                        FILLER
DD42     DS CL3                         DISPLACEMENT TO ERROR LOCATION
********
         EJECT
********
MESSD5   DSECT                          USED TO MOVE DATA TO MESSAGE
         DS CL40                        FILLER
DD51     DS CL4                         REASON CODE
         DS CL5                         FILLER
DD52     DS CL4                         RETURN CODE FROM MACRO
********
         IHADCB
********
         IEZDEB
********
         IHASDWA
********
         CVT DSECT=YES
********
         EJECT                          RELOAD R13
*
****************************************
*        END IPLDATE
****************************************
*
         END IPLDATE                    END CSECT IPLDATE
