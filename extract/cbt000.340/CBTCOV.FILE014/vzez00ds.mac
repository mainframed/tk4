//Z00302  JOB  (208000,00,5,000),KREBS,CLASS=S,MSGCLASS=X,
//        NOTIFY=Z00302,REGION=4096K
//  EXEC JES3ASM
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*        SEE SUBROUTINE    'MSGWRAP'                                  *
*                                                                     *
*        32XX MODEL 4 ONLY SUPPORTED.                                 *
*        32XX MODEL 4 ONLY SUPPORTED.                                 *
*        32XX MODEL 4 ONLY SUPPORTED.                                 *
*        32XX MODEL 4 ONLY SUPPORTED.                                 *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         LCLC  &GLOBAL
         LCLC  &LOCAL
&GLOBAL  SETC  'ST1'
&LOCAL   SETC  'ST2'
         MACRO
         MSG   &M,&D,&P
         LCLA  &C
&C       SETA  K'&M
         DC    AL1(&C-1)                L'MSGID -1.
         DC    CL7'&M'                  MESSAGE-ID.
         AIF   (T'&D EQ 'O').NOD
         DC    CL4'&D'                  DESTINATION.
         AGO   .D1
.NOD     ANOP
         DC    CL4' '                   DUMMY , NOT USED.
.D1      ANOP
         DC    AL4(&P)                  PROCESSING ROUTINE.
         MEND
IATUX31  TITLE 'CONSOLE OUTPUT MESSAGE USER EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*        FUNCTION      EXAMINES ALL CONSOLE OUTPUT MESSAGES           *
*                      MESSAGES.                                      *
*                                                                     *
*        OPERATION     IATUX31 RECEIVES CONTROL FROM IATCNMR. IT HAS  *
*                      THE OPPORTUNITY TO CHANGE DESTINATION AND/OR   *
*                      THE TEXT OF THE CONSOLE MESSAGE.               *
*                                                                     *
*        NOTE          NO MESSAGE-MACRO MAY BE ISSUED FROM IATUX31.   *
*                                                                     *
*        REGISTERS     R0  - CONSOLE NUMBER/MSG DEST CLASS            *
*                      R1  - ADDRESS OF COUNT AND TEXT                *
*                      R10 - BASE                                     *
*                      R11 - CALLING DSP'S FCT                        *
*                      R12 - TVT                                      *
*                      R13 - DATA CSECT                               *
*                      R15 - RETURN CODE                              *
*                                                                     *
*                                                                     *
*                                                                     *
*                     R0 CONTAINS THE OUTPUT CONSOLE NUMBER (OR ZEROS *
*                     IF NONE) IN THE HIGH ORDER TWO BYTES,AND THE    *
*                     MSG DESTINATION CLASS (ZEROS, IF NONE) IN THE   *
*                     LOW ORDER 2 BYTES.THE DESTINATION CLASS IS IN A *
*                     FORM OF 1 BYTE DISPLACEMENT AND A ONE BYTE MASK.*
*                     R1 POINTS TO A ONE BYTE COUNT FIELD, FOLLOWED   *
*                     BY THE MESSAGE TEXT.                            *
*                                                                     *
*        OUTPUT       R0 MAY BE CHANGED TO CHANGE THE MESSAGE ROUTING *
*                     AND REGISTER 1 MAY BE CHANGED TO INDICATE A     *
*                     DIFFERENT MESSAGE TEXT.                         *
*                                                                     *
*        EXIT         THE RETURN CODE IN R15 INDICATES THE ACTION     *
*                     TO BE TAKEN. THESE RETURN CODES ARE:            *
*                     0   - NORMAL RETURN (NO CHANGE TO MESSAGE)      *
*                     4   - CHANGE TO ROUTING AND/OR TEXT             *
*                     8   - LOG MESSAGE ON MLOG/DLOG ONLY             *
*                     12  - DELETE THE MESSAGE WITHOUT MLOG/DLOG      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*  FUNCTIONS:      THIS JES3 USER-EXIT IS ENTERED EACH TIME A CONSOLE *
*                  MESSAGE IS PROCESSED. JES3- AND MVS-MESSAGES, WTO- *
*                  AND WTOR-MESSAGES ARE SCANNED TO TAKE ACTIONS AC-  *
*                  CCORDING TO THE MESSAGE-IDENTIFICATIONS.           *
*                                                                     *
*                  2) THE DESTINATIONS OF SOME MESSAGES (SPECIFIED IN *
*                     THE MESSAGE-ACTION-TABLE) WILL BE CHANGED AND   *
*                     ROUTED TO THOSE CONSOLES WHERE THEY ARE REALLY  *
*                     USED.                                           *
*                                                                     *
*                  4) THIS EXIT WILL RESPOND TO THE IAT2645-CONNECT-  *
*                     MESSAGE SENT FROM A LOCAL SYSTEM AND TO SEND    *
*                     BACK A SET DATE/CLOCK-COMMAND TO SYNCHRONIZE    *
*                     THE TOD-CLOCKS OF ALL PROCESSORS IN THE JES3-   *
*                     COMPLEX.                                        *
*                                                                     *
*                  6) THIS EXIT WILL INDICATE THE JES3-GLOBAL/LOCAL-  *
*                     CPU IN THE SETUP-INQUIRY-MSG IAT5638.           *
*                                                                     *
*                  7) THIS EXIT WILL START THE JES3-JOB-SEGMENT-SCHE- *
*                     DULER AFTER A JES3-START.                       *
*                                                                     *
*                  8) THIS EXIT WILL CALL 2 JES3-INTERNAL-READERS     *
*                     AFTER A JES3 COLDSTART.                         *
*                                                                     *
*                  9) THIS EXIT ACTIVATES DLOG AND MLOG.              *
*                                                                     *
*                 10) THIS EXIT MODIFIES ALL CONSOLES IN THE JES3-    *
*                     COMPLEX TO INDICATE THAT JES3 IS TO PROCESS     *
*                     ALL ENTERED COMMANDS.                           *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
IATUX31A START 0
         PRINT NOGEN
         IATYCNS TYPE=INPUT
         IATYCNC  TYPE=DSECT
         IATYCND
         IATYEQU
         IATYFCT
         IATYREG
         IATYTVT  TYPE=DSECT
         IATYRSQ
         IATYJQE
         IATYJCT
         IATYMPC  ,
         ZEDVCVT
         CVT   DSECT=YES
         PRINT GEN
         TITLE 'INIT'
*---------------------------------------------------------------------*
*                                                                     *
*        INITIALIZATION:                                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
IATUX31A CSECT                          MODIFIED FOR UCC1.
         USING *,R15                    TEMPORARY BASE.
         IATYMOD BR=YES                 IDENTIFY JES3-MODULE.
         LR    R10,R15                  SET BASE-REGISTER.
         USING IATUX31A,R10             USE REG10 AS BASE.
         DROP  R15                      DROP TEMPORARY BASE-REGISTER.
         LR    R8,R0                    CONSOLE-NBR/CONSOLE-DEST.
         LR    R9,R1                    MSG (LENGTH + TEXT).
         TITLE 'JES3 MESSAGES'
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS JES3-MESSAGES:                                       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
MSGIAT   EQU   *
         LA    R5,1(,R1)                SKIP LENGTH-FIELD.
         CLC   IATMSG,1(R1)             JES3-MESSAGE (IAT....) ?
         BNE   MSGWTO                   NO.
         LA    R15,RC0                  EXIT ADDRESS IF NOT FOUND.
         B     TABSCAN                  IS MESSAGE IN TABLE ?
         TITLE 'MVS MESSAGES'
*---------------------------------------------------------------------*
*                                                                     *
*        MVS MESSAGES                                                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
MSGWTO   EQU   *
         L     R6,MAINDATA              FIRST MAIN-PROC-TABLE.
         USING MPCSTART,R6
MSGWTO1  EQU   *
         LH    R2,MPRIDSIZ              LENGTH OF RECEIVE-ID + PREFIX
         SH    R2,H4                    L - 4 (EX-INSTR AND ' R=')
         EX    R2,MSGWTOC               RIGHT MAIN-PROC-ENTRY ?
         BE    MSGWTO2                  YES.
         CLC   MPNEXT,TVTZERO           LAST MAIN-PROC-ENTRY ?
         BE    RC0                      YES , NON-STANDARD MSG.
         L     R6,MPNEXT                NEXT MAIN-PROC-ENTRY.
         B     MSGWTO1                  TRY IT.
MSGWTO2  EQU   *
         LA    R2,14(,R2)               MESSAGE-ID.
         AR    R5,R2                    SKIP RECEIVE-PREFIX & JOBNAME.
         CLI   0(R5),C'+'               PROBLEM-PROGRAM INDICATOR ?
         BNE   MSGWTO3                  NO.
         LA    R5,1(,R5)                SKIP '+' INDICATOR.
MSGWTO3  EQU   *
         LA    R15,MSGWTOR              EXIT ADDRESS IF NOT FOUND.
         B     TABSCAN                  MESSAGE IN TABLE ?
MSGWTOC  CLC   MPRECID(0),0(R5)         MAIN-PROC-TABLE-ENTRY FOUND ?
         DROP  R6
         TITLE 'WTOR MESSAGES'
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS WTOR-MESSAGES:                                       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
MSGWTOR  EQU   *
         MVZ   MRPL,0(R5)               KEEP ZONES.
         CLC   TRPL,MRPL                2 DIGITS AND 1 BLANK ?
         BNE   RC0                      NO ,NON-STANDARD MSG.
         LA    R5,3(,R5)                SKIP REPLY-NMBR AND BLANK.
         LA    R15,RC0                  EXIT ADDRESS IF NOT FOUND.
         B     TABSCAN                  MESSAGE IN TABLE ?
         TITLE 'SCAN MESSAGE TABLE'
*---------------------------------------------------------------------*
*                                                                     *
*        SEARCH SPECIFIC MESSAGE-ID'S AND BRANCH TO DESIRED ROUTINE   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
TABSCAN  EQU   *
         LA    R3,MSGTAB                START OF TABLE.
         LA    R7,MSGTABE               END OF TABLE.
         SLR   R2,R2                    ZERO FOR IC.
TABSCAN1 EQU   *
         CR    R3,R7                    END OF TABLE ?
         BER   R15                      YES.
         IC    R2,0(,R3)                L'MESSAGE IN TABLE.
         EX    R2,TABCLC                MATCH ?
         BE    TABSCAN2                 YES.
         LA    R3,16(,R3)               NEXT ENTRY IN TABLE.
         B     TABSCAN1                 TRY IT.
TABSCAN2 EQU   *
         L     R15,12(,R3)              A(PROCESSING-ROUTINE).
         BR    R15                      LINK IT.
TABCLC   CLC   0(0,R5),1(R3)            MESSAGE FOUND IN TABLE ?
         TITLE 'SETUP INQUIRY MESSAGE'
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS SETUP-INQUIRY-MESSAGES:                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
SETUP    EQU   *
         CLI   10(R1),X'7E'             HEADER-MSG OF THIS INQUIRY ?
         BE    RC0                      YES.
         L     R6,MAINDATA              FIRST MAIN-PROC-TABLE.
         USING MPCSTART,R6
         LA    R5,9(,R1)                PROCESSOR-ID.
SETUP1   EQU   *
         CLC   MPNAME,0(R5)             MAIN-PROC-TABLE-ENTRY FOUND ?
         BE    SETUP2                   YES.
         CLC   MPNEXT,TVTZERO           LAST MAIN-PROC-TABLE ?
         BE    RC0                      YES.
         L     R6,MPNEXT                NEXT MAIN-PROC-TABLE.
         B     SETUP1                   TRY IT.
SETUP2   EQU   *
         TM    MPSYSTEM,MPGLBL          JES3-GLOBAL-PROCESSOR ?
         BNO   SETUP3                   NO.
         DROP  R6
         MVC   12(3,R1),GLOBAL          SET GLOBAL-IDENTIFICATION.
         B     SETUP4                   EXIT.
SETUP3   EQU   *
         MVC   12(3,R1),LOCAL           SET LOCAL INDICATION.
SETUP4   EQU   *
         SLR   R5,R5                    CLEAR FOR IC.
         IC    R5,0(R1)                 L'MESSAGE.
         SH    R5,H4                    - 3 BYTES SHIFT -1 FOR EX.
         STC   R5,0(R1)                 ADJUST LENGTH.
         EX    R5,SETUPMVC              SHIFT MSG 3 BYTES TO LEFT.
         B     RC4A
SETUPMVC MVC   21(0,R1),25(R1)          SHIFT MSG 3 BYTES TO LEFT.
         TITLE 'MISC. FUNCTIONS AT START-UP'
*---------------------------------------------------------------------*
*                                                                     *
*        ACTIVATE THE DLOG AND START THE JES3-JOB-SEGMENT-SCHEDULER:  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
JSS0     EQU   *
         NOP   RC0                      BRANCH AFTER JSS-START.
         TM    JSSFLG2,JSSSTART         *S JSS JUST BEEN ISSUED ?
         BO    JSS1                     YES.
         OI    JSSFLG1,JSSGPOST         POST JSS.
         OI    JSSFLG2,JSSSTART         START JSS.
JSS1     EQU   *
         OI    AFGFLAG2,AFGDLOG+AFGMLOG ACTIVATE DLOG AND MLOG.
JSS2     EQU   *
         L     R6,ACST                  A(CONSOLE STATUS TABLE).
         L     R4,MASK                  CONSOLE-AUTHORITY-MASK.
         USING CONSDATA,R6
JSS3     EQU   *
         CLC   CONSNO,DUMMYNO           DUMMY-CONSOLE'S ENTRY ?
         BE    JSS4                     YES.
         STCM  R4,7,CONSMAIN+1          PROCESS ALL COMMANDS.
         LA    R6,CONCSTLT(,R6)         NEXT ENTRY.
         B     JSS3                     PROCESS IT.
JSS4     EQU   *
         DROP  R6
         MVI   JSS0+1,X'F0'             CHANGE NOP.
         LA    R3,JSMA                  CALL JSM - SPOOL MAINTENANCE.
         BAL   R4,COMM                  ISSUE INTRDR-CALL.
         LR    R0,R8                    RELOAD REG0.
         LR    R1,R9                    RELOAD REG9.
         B     RC0
         TITLE 'SYNCHRONIZE PROCESSORS AFTER COLD-START'
*---------------------------------------------------------------------*
*                                                                     *
*        ISSUE THE NECESSARY COMMANDS AFTER A JES3-COLDSTART OR ISSUE *
*        A SET DATE/CLOCK COMMAND ON THE CONNECTING LOCAL-PROCESSOR:  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
COLD     EQU   *
         TM    TVRSTFLG,HOTSTRT         HAS JES3 BEEN HOT STARTED ?
         BO    RC0                      YES.
         L     R6,MAINDATA              FIRST MAIN-PROC-TABLE.
         USING MPCSTART,R6
         LA    R5,16(,R1)               PROCESSOR-ID ON MESSAGE.
COLD1    EQU   *
         CLC   MPNAME,0(R5)             MAIN-PROC-ENTRY FOUND ?
         BE    COLD2                    YES.
         CLC   MPNEXT,TVTZERO           END OF MAIN-PROC-TABLE ?
         BE    RC0                      YES.
         L     R6,MPNEXT                NEXT MAIN-PROC-TABLE.
         B     COLD1                    TRY IT.
COLD2    EQU   *
         TM    MPSYSTEM,MPLCL           LOCAL-PROCESSOR ?
         BO    COLD3                    YES.
         TM    MPSYSTEM,MPGLBL          GLOBAL PROCESSOR ?
         BNO   RC0                      NO.
         TM    TVRSTFLG,COLDSTRT        COLDSTART DONE ?
         BNO   RC0                      NO.
         LA    R3,INTA                  *
         BAL   R4,COMM                  * START
         LA    R3,INTA                  * 2 INTRDR.
         BAL   R4,COMM                  *
         SPACE
*KR      LA    R3,DRDA                  A(COMMAND).
*KR      BAL   R4,COMM                  DISK-READER-CALL.
*KR      LA    R3,XDLA                  A(COMMAND).
*KR      BAL   R4,COMM                  DEADLINE-FUNCTION.
*KR      LA    R3,DLNA                  A(COMMAND).
*KR      BAL   R4,COMM                  HOLD PRIORITY-0-QUEUE.
         LR    R0,R8                    RELOAD REG0.
         LR    R1,R9                    RELOAD REG1.
         B     RC0
COLD3    EQU   *
         MVC   MPC,MPNAME               PROCESSOR-ID INTO COMMAND.
         IATXTOD BIN                    GET DATE.
         ST    R1,TOD                   STORE IT.
         MVC   DTE,DPAT                 EDIT THE DATE.
         ED    DTE,TOD+1
         IATXTOD                        GET TIME.
         MVC   CLK(2),0(R1)             TIME INTO COMMAND.
         MVC   CLK+3(2),2(R1)
         MVC   CLK+6(2),4(R1)
         LR    R0,R8                    RELOAD REG0.
         LA    R3,CLKA                  A(COMMAND).
         BAL   R4,COMM                  SET THE CLOCK.
         LR    R0,R8                    RELOAD REG0.
         LR    R1,R9                    RELOAD REG1.
         B     RC0
         TITLE 'ISSUE INTERCOM'
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS JES3-COMMANDS VIA INTERCOM:                          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
COMM     EQU   *
         INTERCOM CONS=(R0),TEXT=(R3) ISSUE JES3-COMMANDS
         BR    R4                       BACK TO CALLER.
         TITLE 'EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*        EXIT                                                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
RC0      EQU   *
         BAL   R7,MSGWRAP
         SLR   R15,R15                  NO PROCESSING.
         B     EXIT
DELETE   EQU   *
         LA    R15,12                   DELETE MESSAGE.
         B     EXIT
RC4      EQU   *
         LR    R1,R2                    RESTORE R1.
         LR    R0,R9                    RESTORE R0.
RC4A     EQU   *
         BAL   R7,MSGWRAP
         LA    R15,4                    CHANGE DESTINATION.
EXIT     EQU   *
         ARETURN RC=(R15)
         TITLE 'INCORE MESSAGE TRACE'
*---------------------------------------------------------------------*
*                                                                     *
*        MESSAGE TRACE                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
MSGWRAP  DS    0H
         LR    R2,R1
         LR    R9,R0
         USING ZEDVCVT,R5
         L     R5,16                    CVT-POINTER.
         ICM   R5,15,CVTUSER-CVT(R5)    ADDR. ZEDVCVT.
         BZ    NOWRAP                   NONE , STOP PROCESSING.
         MODESET EXTKEY=SUPR            KEY=ZERO.
         ICM   R6,15,ZIAMBUF            ANY BUFFER ?
         BNZ   BUFOK                    YES.
         L     R3,BUFL                  BUFFER LENGTH.
         GETMAIN R,LV=(R3),SP=241
         LR    R3,R1                    SAVE ADDRESS.
         ST    R3,ZIAMBUF               START OF BUFFER.
         ST    R3,ZIACURR               CURRENT ENTRY.
         LA    R6,ZIANBUF-1             N'ELEMENTS IN BUFFER -1.
BUFINIT  EQU   *
         LA    R4,ZIAENTL(,R3)          NEXT ENTRY
         ST    R4,0(,R3)                INTO CURRENT.
         LR    R3,R4                    SET CURRENT TO NEXT.
         BCT   R6,BUFINIT               TRAMPLE , TRAMPLE.
         L     R4,ZIAMBUF               FIRST ENTRY AGAIN.
         ST    R4,0(,R3)                WRAP IT.
BUFOK    EQU   *
         L     R3,ZIACURR               GET CURRENT.
         L     R4,0(,R3)                GET NEXT.
         ST    R4,ZIACURR               MAKE CURRENT.
         MVC   4(ZIAENTL-4,R3),BLANKS   CLEAN IT.
         SLR   R1,R1
         IC    R1,0(,R2)                MESSAGE-LENGTH.
         LA    R4,ZIAENTL-4             MAX. LENGTH OF DATA.
         CR    R1,R4                    IF MSG IS NOT LONGER USE FULL
         BNH   LENGTHOK                 LENGTH.
         LR    R1,R4                    ELSE TRUNCATE THE MESSAGE.
LENGTHOK EQU   *
         BCTR  R1,0                     -1 FOR EX.
         EX    R1,MSGMVC                TRANSFER MESSAGE.
         MODESET EXTKEY=SCHED           KEY=1.
NOWRAP   EQU   *
         LR    R1,R2                    RESTORE
         LR    R0,R9                    PARAMETER-REGS.
         BR    R7                       BACK TO MAINLINE.
MSGMVC   MVC   4(0,R3),1(R2)
         TITLE 'CHANGE DESTINATION'
*---------------------------------------------------------------------*
*                                                                     *
*        CHANGE DESTINATION:                                          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
CDEST    EQU   *
         PRINT GEN
         LA    R0,8(,R3)                NEW DESTINATION.
         CONCNVRT CLASS=(R0)
         LR    R1,R9                    RESTORE R1.
         B     RC4A
         TITLE 'MESSAGE ACTION-TABLE'
*---------------------------------------------------------------------*
*                                                                     *
*        MESSAGE-ACTION-TABLE WITH POINTER TO DESIRED ROUTINE:        *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
MSGTAB   DS    0F
         MSG   IEF403I,D1,CDEST         JOB STARTED
         MSG   IEF404I,D1,CDEST         JOB ENDED
*
         MSG   IOS003A,D21,CDEST        INTERVENTION REQUIRED NOT OK.
*
         PRINT NOGEN
         MSG   IAT1600,D7,CDEST         D7
         MSG   IAT2000,,DELETE          ... SELECTED ...
         MSG   IAT2001,,DELETE          MVS WAITING FOR WORK
         MSG   IAT2810,,DELETE          ... SESSION ESTABLISHED.
         MSG   IAT2645,,COLD
         MSG   IAT3100,,JSS0
         MSG   IAT5200,,DELETE          DELETE
         MSG   IAT5410,,DELETE          DELETE
         MSG   IAT5638,,SETUP
         MSG   IAT5900,,DELETE          DELETE
         MSG   IAT6101,,DELETE          DELETE
         MSG   IAT6118,,DELETE          DELETE
         MSG   IAT6285,,DELETE          DELETE
         MSG   IAT7001,D7,CDEST         D7
         MSG   IAT7007,,DELETE          DELETE
         MSG   IAT7024,,DELETE          DELETE
         MSG   IAT7030,D7,CDEST         D7
         MSG   IAT7310,D9,CDEST         D9
         MSG   IAT7425,D9,CDEST         D9
         MSG   IAT7450,D7,CDEST         D7
MSGTABE  EQU   *
         TITLE 'CALL COMMANDS'
*---------------------------------------------------------------------*
*                                                                     *
*        CALL COMMANDS                                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
*        INTRDR
         SPACE
INTA     DC    AL1(INTZ-*-1)            LENGTH OF COMMAND-1
         DC    CL9'*X INTRDR'           JES3-CALL-COMMAND
INTZ     EQU   *
         SPACE
*        S CMDJSM-COMMAND
         SPACE
JSMA     DC    AL1(JSMZ-*-1)            LENGTH OF COMMAND-1
         DC    C'*T,ST1,S CMDJSM '      START COMMAND
JSMZ     EQU   *
         SPACE
*        DISK-READER-CALL-COMMAND:
         SPACE
DRDA     DC    AL1(DRDZ-*-1)            LENGTH OF COMMAND-1
         DC    CL5'*X DR'               JES3-CALL-COMMAND
         DC    CL1','
         DC    CL1'K'                   KEEP-PARAMETER
DRDZ     EQU   *
         SPACE
*        PRTY0=HOLD-COMMAND (FOR DEADLINE-JOBS)
         SPACE
DLNA     DC    AL1(DLNZ-*-1)            LENGTH OF COMMAND-1
         DC    CL6'*F Q P'              JES3-MODIFY-COMMAND
         DC    CL1'='
         DC    CL1'0'                   PRIORITY
         DC    CL1','
         DC    CL1'H'                   HOLD-PARAMETER
DLNZ     EQU   *
         SPACE
*        DEADLINE-CALL-COMMAND
         SPACE
XDLA     DC    AL1(XDLZ-*-1)            LENGTH OF COMMAND-1
         DC    CL11'*X DEADLINE'        JES3-DR-COMMAND
XDLZ     EQU   *
         SPACE
*        SET DATE/CLOCK COMMAND
         SPACE
DPAT     DC    X'7E21204B202020'
TOD      DC    F'0'
CLKA     DC    AL1(CLKZ-*-1)            LENGTH OF COMMAND-1
         DC    CL2'T '
MPC      DC    CL8'XXXXXXXX'
         DC    CL9' SET DATE'
DTE      DC    CL7'=XX.XXX'
         DC    CL7',CLOCK='
CLK      DC    CL8'XX.XX.XX'
CLKZ     EQU   *
         TITLE 'NUTS AND BOLTS'
*---------------------------------------------------------------------*
*                                                                     *
*        NUTS AND BOLTS                                               *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         DS    0A
BUFL     DC    AL1(241),AL3(ZIAMBUFL)
MASK     DC    X'0F000000'              CONSOLE-AUTHORITY-MASK
MRPL     DC    XL3'00'                  MOVE FOR TEST OF REPLY-MSG
TRPL     DC    XL3'F0F040'              FIELD FOR TEST OF REPLY-MSG
H4       DC    H'4'
GLOBAL   DC    C'&GLOBAL'               NAME OF GLOBAL PROCESSOR.
LOCAL    DC    C'&LOCAL'                NAME OF LOCAL  PROCESSOR.
IATMSG   DC    C'IAT'                   JES3 MESSAGE-PREFIX.
BLANKS   DC    CL80' '
         LTORG
         END
//L.SYSLMOD DD DSN=SYS1.JES3TLIB,DISP=SHR,VOL=SER=ST1RES,
//     UNIT=SYSDA
//L.SYSIN  DD  *
 INCLUDE SYSLMOD(IATUX31)
 ENTRY IATUX31
 NAME IATUX31(R)
