         TITLE 'HASP CONTROL BLOCK GENERATION MACRO'
         SPACE 3
*
*****    $HASPCB    *****    GENERATE HASP CONTROL BLOCKS
         SPACE 1
         MACRO
         $HASPCB &DOC=NO,&LIST=NO
         GBLC  &PRINT,&GEN,&DATA
         PUSH  PRINT
         PRINT &PRINT
         $SVT  DOC=&DOC
         $PSA  LIST=&LIST
         $ASCB LIST=&LIST
         $CVT  LIST=&LIST
         $WPL  LIST=&LIST
         $JQE  DOC=&DOC            GENERATE HASP JQE DSECT
         $LRC  DOC=&DOC
         $PCE  DOC=&DOC            GENERATE HASP PCE DSECT
         $RDRWORK DOC=&DOC         GENERATE HASP RDR PCE EXTENSION
         $PPPWORK DOC=&DOC         GENERATE HASP PPPWORK
         $BUFFER DOC=&DOC          GENERATE HASP BUFFER DSECT
         $CMB  DOC=&DOC            GENERATE HASP CMB DSECT
         $ERA  DOC=&DOC
         $PDDB DOC=&DOC
         $TAB  DOC=&DOC
         $IOT  DOC=&DOC
         $JCT  DOC=&DOC            GENERATE HASP JCT DSECT
         $JOE  DOC=&DOC            GENERATE HASP JOE DSECT
         $CAT  DOC=&DOC            GENERATE HASP CAT DSECT
         $PRE  DOC=&DOC
         $PIT  DOC=&DOC            GENERATE HASP PIT DSECT
         $CSA  DOC=&DOC            GENERATE HASP CSA DSECT
         $DCT  DOC=&DOC            GENERATE HASP DCT DSECT
         $HCT  DOC=&DOC            GENERATE HASP HCT DSECT
         $KIT  DOC=&DOC            GENERATE HASP KIT DSECT
         $XIT  DOC=&DOC            GENERATE HASP XIT DSECT
         $MITETBL DOC=&DOC
         $MIT  DOC=&DOC            GENERATE HASP MIT DSECT
         $EXITPL DOC=&DOC          GENERATE HASP EXITPL DSECT
         $TEXT LIST=&LIST
         $KEYS LIST=&LIST
         $TGM  DOC=&DOC
         SPACE 1
         POP   PRINT
         PRINT &GEN,&DATA
         MEND
         TITLE 'HASP CONSOLE ROUTINES'
         SPACE 3
USER03   START 0
         SPACE 3
         COPY  $HASPGEN
         TITLE 'HASP MODULE INFORMATION TABLE'
USER03   $MODULE
         SPACE 3
         TITLE 'HASP CONSOLE ROUTINES'
HA$PUS03 CSECT ,
         SPACE 3
*
*                             EXTERNAL REFERENCES
*
         SPACE 5
         TITLE 'HASP CONTROL BLOCKS'
         SPACE 3
*
*                             DOCUMENTATION OPTIONS FOR THIS ASSEMBLY
*
         SPACE 3
         $SYSPARM (OFF,NOGEN,NODATA,NO,NO)
         SPACE 3
*
*                             GENERATE HASP CONTROL BLOCKS
*
         $HASPCB DOC=&DOC,LIST=&LIST
         TITLE 'JOB ACCOUNTING FIELD SCAN'
ACTINFOS $ENTRY CSECT=YES
         $SAVE                     SAVE CALLER'S REGISTERS
         SPACE 1
         LR    BASE3,R15           ESTABLISH BASE REGISTER
         SPACE 3
BAL010   LM    WC,WE,0(R1)         WC ---> JCTWORK
*                                  WD ---> RXITFLAG
*                                  WE ---> JCTXWRK
         SPACE 1
BAL020   MVI   0(WE),C' '
         MVC   1(79,WE),0(WE)      CLEAR JCTXWRK FOR ACCT
         LTR   R0,R0               NO ACCOUNT INFO
         BZ    BALRET
         LA    R1,1(,WC)           ASSUME ACCNT START'S WITH '('
         LR    R2,WC               LAST CHAR ADDRESS
         AR    R2,R0
         CR    R2,R1               TEST ACCNT FIELD
         BNL   BAL030              BR IF MORE THAN ONE CHAR
*        MVI   0(WE),X'FF'         SET INDICATOR FOR NO ACCNT
         B     BALRET              BR TO END
BAL030   CLI   0(WC),C'('          ACCNT FIELD STARTS WITH '(' ?
         BE    BAL040              BYPASS ADJUST SCAN START
         BCTR  R1,0                ADJUST START ADDRESS OF SCAN
         LA    R2,1(R2)            AND END ADDR OF SCAN
         B     BAL050
BAL040   BCTR  R2,0
BAL050   LR    WF,WE               START ADDR OF DESTINATION
         LA    R14,80(WE)          END ADDR OF DESTINATION
         CLI   0(R1),C','          TEST IF BYPASS ACCT NUMBER
         BNE   BAL060              NO
         LA    R1,1(R1)            ADJUST START
BAL060   CLC   0(2,R1),=C'0,'      TEST IF NULL ACCT NUMBER
         BNE   BALLOOP             NO
         LA    R1,2(R1)            ADJUST START
BALLOOP  CLC   0(3,R1),=C''','''   TEST IF CONTINUATION
         BNE   BAL070              NO
         LA    R1,3(R1)            INCREMENT SCAN ADDRESS
         B     BALLOOP             RETURN ON TOP OF LOOP
BAL070   CLI   0(R1),C''''         TEST IF DELIMITER
         BNE   BAL080              NO
         CLC   0(2,R1),=C''''''
         BE    BAL075
         LA    R1,1(R1)            INCREMENT SCAN ADDRESS
         B     BALLOOP             RETURN ON TOP OF LOOP
BAL075   MVI   0(WF),C''''
         LA    WF,1(WF)
         LA    R1,2(R1)
         B     BALLOOP
BAL080   CR    R2,R1               TEST IF END SCAN
         BNH   BALRET              YES
         CR    R14,WF              TEST IF FIELD OVERFLOW
         BNH   BALERR              YES --> JCL ERROR
         MVC   0(1,WF),0(R1)       MOVE CHAR
         LA    WF,1(WF)            INCREMENT DEST. ADDR
         LA    R1,1(R1)            INCREMENT SCAN ADDR
         B     BALLOOP
BALERR   EQU   *
         LM    BASE2,R3,$REGSAVC
         LA    R15,12
         $STORE R15
         LA    R15,12
         B     RETURN
BALRET   EQU   *
         LA    R15,4
         $STORE R15
         LA    R15,4
RETURN   EQU   *
         $RETURN RC=(R15)
         EJECT
         LTORG
ACTINFOS CSECT
         TITLE 'COMPLETE MODULE INFORMATION TABLE'
         $MODEND
         TITLE 'COMPUTE LENGTHS FOR PRIMARY CSECT'
$DLENGTH $DLENGTH ,
         END
