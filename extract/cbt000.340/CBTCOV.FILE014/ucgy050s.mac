CDSYSL01 TITLE '   W R I T E R   M O D U L E   F O R   S Y S L O G'
CDSYSL01 CDMSAVE
         LM    R8,R9,4(R1)         POINT TO DCB'S
         LA    R0,GMLNGT           GET STORAGE LENGTH
         GETMAIN R,LV=(0)          GET STORAGE
         XC    0(255,R1),0(R1)     AND CLEAR IT
         MVC   256(GMLNGT-255,R1),0(R1)
         ST    R13,4(,R1)          FORWARD CHAIN
         ST    R1,8(,R13)          BACKWARD CHAIN
         LR    R13,R1              POINT TO NEW SAVE AREA
         USING DGM,R13
         USING IHADCB,R9
         MVC   DCBSYNA,=AL3(EODAD) SET EODAD ROUTINE ADDR
         MVC   DCBEODA,=AL3(EODAD1) SET EODAD ROUTINE ADDR
         MVC   GMSYSUT3(LENGTH),SYSUT3 MOVE OPENLIST'S AND DCB'S
         STCM  R9,7,GMOPENL1+1     SET INPUT DCB ADDR
         LA    R1,GMSYSUT3         POINT TO OUTPUT DCB
         STCM  R1,7,GMOPENL1+5     AND SET INTO OPENL
         OPEN  MF=(E,GMOPENL1)     OPEN INPUT AND OUTPUT DCB
         STCM  R8,7,GMOPENL2+1     SET FOR TEMP CLOSE
         SR    R2,R2               CLEAR FOR NO RECORD'S TEST
         SR    R10,R10             CLEAR SEQUENCE COUNTER
GET      GET   (R9)                GET NEXT INPUT RECORD
         LA    R2,0(,R1)           POINT TO INPUT RECORD
         LH    R4,DCBLRECL         GET ITS LENGTH
         BCTR  R4,0                THIS IS LENGTH-1
         LA    R4,0(R4,R2)         POINT TO LAST CHARACTER
         TM    0(R4),X'3F'         CHECK FOR POSSIBLE BLANK
         BNZ   *+8                 NO, CONTINUE BELOW
         BCT   R4,*-8              YES, DECREASE AND CONTINUE ABOVE
         LA    R3,1(,R4)           POINT AFTER LAST CHARACTER
         SR    R3,R2               CALCULATE NEW LENGTH
         CH    R3,=H'6'            CHECK FOR MINIMUM LENGTH
         BL    DELETE              DELETE IF TOO SMALL
         CLI   0(R2),C' '          CHECK FOR POSSIBLE MLWTO CONT.
         BE    MLWTOCNT            YES, CONTINUE THERE
         CH    R3,=H'25'           CHECK FOR MIN LENGTH AGAIN
         BL    DELETE              DELETE IF TOO SMALL
         MVN   TEST,=13X'FF'       MOVE IN NUMERICS
         MVZ   TEST,0(R2)          AND HOPEFULLY ZONES
         CLC   TEST,=13X'FF'       THIS SHOULD BE TRU
         BNE   DELETE              IF NOT, IS NOT NUMERIC
         SH    R3,=H'6'            SWITCH TO NEW LENGTH
         CLC   =C'$HASP',24(R2)    TEST IF HASP MESSAGE
         BNE   OUT                 NO ,SKIP NEXT INSTR
         LR    R5,R3               GET LENGTH
         SH    R5,=H'22'           NEW LENGTH OF MESSAGE TEXT
         EX    R5,MVCHASP          REDUCE $HASPXXX IN $XXX
         SH    R3,=H'4'            NEW LENGTH FOR LRECL
OUT      BAL   R11,PUT             PREPARE OUTPUT BUFFER
         PACK  4(7,R1),0(13,R2)    PACK TIME STAMP
         BAL   R11,SEQ             SET CORRECT SEQ NUMBER
         MVC   12(1,R1),14(R2)     SET 'J', 'S' OR 'T'
         MVC   13(4,R1),18(R2)     SET JOB-NUMBER
         SH    R3,=H'18'           SWITCH TO TEXT LENGTH-1
         EX    R3,MVC              AND MOVE IT INTO OUTPUT RECORD
         SH    R4,=H'3'            POINT TO POSSIBLE MLWTOID
         CLI   0(R4),C' '          IS THERE A BLANK
         BNE   GET                 NO, FORGET IT
         MVN   TEST(3),=13X'FF'    MOVE NUMERICS
         MVZ   TEST(3),1(R4)       AND HOPEFULLY ZONES
         CLC   TEST(3),=13X'FF'    SHOULD BE TRU
         BNE   GET                 IF NOT, WAS NOT NUMERIC
         MVC   MLWTOID,0(R4)       SAVE FOR LATER
         MVC   MLWTOTST,4(R1)      SAVE FOR LATER
         B     GET                 AND GET NEXT RECORD
MVC      MVC   17(*-*,R1),23(R2)   EXECUTE SUBJECT INSTRUCTION
MVCHASP  MVC   25(*-*,R2),29(R2)   EXECUTE ONLY
*
MLWTOCNT CLC   MLWTOID,0(R2)       DO ID'S MATCH
         BNE   DELETE              IF NOT, FORGET IT
         LA    R3,13(,R3)          ADJUST LENGTH
         BAL   R11,PUT             PREPARE OUTPUT BUFFER
         MVC   4(7,R1),MLWTOTST    SET TIME STAMP
         BAL   R11,SEQ             SET SEQUENCE NUMBER
         MVI   12(R1),C' '         FILL REST
         MVC   13(6,R1),12(R1)        WITH BLANKS
         SH    R3,=H'19'           SWITCH TO TEXT LENGTH-1
         EX    R3,MVCML            AND ADD TEXT
         B     GET                 AND GET NEXT RECORD
MVCML    MVC   18(*-*,R1),5(R2)    EXECUTE SUBJECT INSTRUCTION
*
PUT      STH   R3,82(,R8)          SET LRECL INTO DCB
         PUT   (R8)                POINT TO BUFFER
         STH   R3,0(,R1)           SET FIRST PART OF RDW
         XC    2(2,R1),2(R1)       SET SECOND PART OF RDW
         BR    R11                 RETRUN TO CALLER
*
SEQ      MVI   11(R1),0            INITIALYZE SEQUENCE BY ZERO
         CLC   STAMP,4(R1)         HAS TIME STAMP CHANGED
         BNE   CHANGED             YES, CONTINUE BELOW
         LA    R10,1(,R10)         NO, ADD ONE TO SEQ NUMBER
         STC   R10,11(,R1)         AND SET IT INTO RECORD
         BR    R11                 RETURN TO CALLER
*
CHANGED  SR    R10,R10             CLEAR REG 10
         MVC   STAMP,4(R1)         SAVE TIME STAMP FOR NEXT PASS
         BR    R11                 RETURN TO CALLER
*
DELETE   CH    R3,=H'1'            CHECK FOR MIN RECORD LENGTH
         BL    GET                 FORGET IT IF TOO SMALL
         STH   R3,GMSYSUT3+82      SET INTO LRECL
         LR    R0,R2               GET RECORD ADDRESS
         PUT   GMSYSUT3,(0)        AND PUT IT ON ERROR LIST
         B     GET                 AND GET NEXT RECORD
*
EODAD    LA    R1,GMWTO2           LOAD WTO2 (SYNAD)
         WTO   MF=(E,(1))
EODAD1   LTR   R2,R2               TEST IF NO INPUT RECORD'S
         BNZ   EODAD2              SKIP WTO
         LA    R1,GMWTO1           LOAD WTO1 (NO RECORD'S)
         WTO   MF=(E,(1))
EODAD2   CLOSE MF=(E,GMOPENL1)     CLOSE INPUT AND SYSUT3
         FREEPOOL GMSYSUT3         FREEPOOL SYSUT3
         FREEPOOL (R9)             FREEPOOL INPUT DCB
         CLOSE MF=(E,GMOPENL2),TYPE=T TEMP CLOSE OUTPUT DCB
         LR    R1,R13              POINT TO GM-AREA
         L     R13,4(,R13)         POINT TO OLD SAVE AREA
         LA    R0,GMLNGT           GET GM AREA LENGTH
         FREEMAIN R,LV=(0),A=(1)   FREE STORAGE
         RETURN (14,12),RC=0       RETURN TO CALLER
*
SYSUT3   DCB   DDNAME=SYSUT3,DSORG=PS,MACRF=PM,RECFM=U,BLKSIZE=156
         OPEN  (0,,0,OUTPUT),MF=L
         OPEN  (0,OUTPUT),MF=L
         PRINT GEN
WTO1     WTO   'NO RECORD FOR SYSLOG WL',ROUTCDE=(1,2),MF=L
WTO2     WTO   'SYNAD FOR SYSLOG WL',ROUTCDE=(1,2),MF=L
         PRINT NOGEN
LENGTH   EQU   *-SYSUT3
*
DGM      DSECT
         DS    18F
GMSYSUT3 DCB   DDNAME=SYSUT3,DSORG=PS,MACRF=PM,RECFM=U,BLKSIZE=156
GMOPENL1 OPEN  (0,,0,OUTPUT),MF=L
GMOPENL2 OPEN  (0,OUTPUT),MF=L
GMWTO1   WTO   'NO RECORD FOR SYSLOG WL',ROUTCDE=(1,2),MF=L
GMWTO2   WTO   'SYNAD FOR SYSLOG WL',ROUTCDE=(1,2),MF=L
TEST     DS    XL13
MLWTOTST DS    XL7
MLWTOID  DS    CL4
STAMP    DS    XL7
GMLNGT   EQU   *-DGM
         DCBD  DSORG=PS,DEVD=DA
         END
