         TITLE '   U C B - L O O K U P   R O U T I N E'
***********************************************************************
* THIS ROUTINE RETURNS IN R1 THE UCB ADDRESS CORRESPONDING TO THE     *
* DEVICE NAME POINTED TO BY R1 AT ENTRY. USE ENTRY POINT CDUCBLKE FOR *
* EBCDIC NAMES AND ENTRY POINT CDUCBLKX FOR HEX DEVICE NAMES.         *
* RETURN IS TO LOCATION R14+4 NORMALLY AND TO R14 IN CASE OF ERROR.   *
* ALL REGISTERS (EXCEPT R1 AND R14 FOR NORMAL RETURN) ARE RESTORED TO *
* ORIGINAL CONTENTS UPON RETURN. R13 MUST POINT TO A STANDARD 18-WORD *
* SAVE AREA UPON ENTRY.                                               *
* INTERNAL REGISTER USAGE:                                            *
*   R2  CVT POINTER                                                   *
*   R3  CVTILK1                                                       *
*   R4  CVTILK2                                                       *
*   R5  MASK OF X'0000000F'                                           *
*   R6  WORK                                                          *
*   R7  WORK                                                          *
*   R8  WORK FOR EXTRACTING HEX DIGITS                                *
*   R9  HOLDING HEX DEVICE NAME                                       *
***********************************************************************
CDUCBLKE CDMSAVE B=15
         L     R2,CVTPTR           POINTER TO CVT
         USING CVT,R2
         LM    R3,R4,CVTILK1       GET POINTER TO UCB-LOOKUP TABLE
         LA    R5,15               MASK FOR NR
         IC    R6,0(R1)            GET CHANNEL INDEX
         NR    R6,R5               CLEAR LEFTMOST GARBAGE
         TM    0(R1),X'30'         CHECK FOR 0-9 AND A-F
         BO    UCBLK0              YES CONTINUE
         BM    UCBLKER             NOT 0-9 OR A-F
         LA    R6,9(,R6)           MUST BE A-F
UCBLK0   LR    R10,R6              SAVE CHANNEL ADDR
         SLL   R10,4               SHIFT ONE HALF BYTE
         IC    R6,0(R6,R3)         R6 = K
         IC    R7,1(,R1)           GET CONTROL UNIT INDEX
         NR    R7,R5               CLEAR LEFTMOST GARBAGE
         TM    1(R1),X'30'         CHECK FOR 0-9 AND A-F
         BO    UCBLK00             YES CONTINUE
         BM    UCBLKER             NOT 0-9 AND NOT A-F
         LA    R7,9(,R7)           MUST BE A-F
UCBLK00  LA    R10,0(R10,R7)       SAVE CONTROL UNIT ADDR
         SLL   R10,4               SHIFT ONE HALF BYTE
         LA    R6,0(R6,R7)         ADD K
         AR    R6,R6               MULTIPLY BY TWO
         LH    R6,0(R6,R3)         R6 = L
         IC    R7,2(R1)            GET DEVICE INDEX
         NR    R7,R5               CLEAR LEFTMOST GARBAGE
         TM    2(R1),X'30'         CHECK FOR 0-9 AND A-F
         BO    UCBLK01             YES CONTINUE
         BM    UCBLKER             NOT 0-9 AND NOT A-F
         LA    R7,9(R7)            MUST BE A-F
UCBLK01  LA    R10,0(R10,R7)       SAVE DEVICE ADDR
         LA    R6,0(R6,R7)         ADD L
         AR    R6,R6               MULTIPLY BY TWO
         LH    R6,0(R6,R4)         R6 = UCB ADDR
         USING UCB,R6
         CLC   UCBNAME,0(R1)       COMPARE UNIT NAME
         BE    UCBIDCK             ITS THE SAME
         CH    R10,UCBCHAN         COMPARE HEX ADDR
UCBLKRET BNE   UCBLKER             NOT EQUAL RETURN WITH ERROR
UCBIDCK  CLI   UCBID,UCBSTND       CHECK UCB IDENTIFIER
         BNE   UCBLKER             BAD, ERROR RETURN
         LR    R1,R6               R1 = UCB ADDR
         LA    R14,4(,R14)         MODIF. RETURN ADDR
UCBLKER  RETURN (2,12)             RETURN TO CALLER
         DROP  R15
*
CDUCBLKX CDMSAVE B=15,TYP=ENTRY
         SH    R15,=AL2(CDUCBLKX-CDUCBLKE) SWITCH TO MAIN BASE
         DROP  R15
         USING CDUCBLKE,R15
         L     R2,CVTPTR           POINT TO CVT
         LM    R3,R4,CVTILK1       AND TO UCB LOOKUP TABLES
         ICM   R9,12,0(R1)         GET DEVICE NAME
         SLL   R9,4                GET RID OF LEFTMOST HEX DIGIT
         SR    R8,R8               CLEAR FOR LEFTSHIFT
         SLDL  R8,4                GET CHANNEL INDEX
         LR    R6,R8               SET IT INTO R6
         IC    R6,0(R6,R3)         GET "K" VALUE
         SR    R8,R8               CLEAR FOR LEFTSHIFT
         SLDL  R8,4                GET CU INDEX
         LA    R6,0(R6,R8)         ADD IT TO K
         AR    R6,R6               DOUBLE THIS VALUE
         LH    R6,0(R6,R3)         GET "L" VALUE
         SR    R8,R8               CLEAR FOR LEFTSHIFT
         SLDL  R8,4                GET DEVICE INDEX
         LA    R6,0(R6,R8)         ADD DEVICE INDEX
         AR    R6,R6               DOUBLE THIS VALUE
         LH    R6,0(R6,R4)         POINT TO UCB
         CLC   UCBUA,1(R1)         COMPARE UCBNAME WITH INPUT NAME
         B     UCBLKRET            CONTINUE IN MAIN PART
         LTORG
         CDMDSECT (CVT,UCB)
         END
