CDPDSCLR TITLE '   P D S   C L E A R   R O U T I N E'
*                    ABEND=4  SYSLIB IS NOT A PDS
*                    ABEND=8  CLEAR DIRECTORY: ECB NOT X'41'
*                    ABEND=12 STATUS INDICATES NEITHER EOT NOR EOF
*                    ABEND=16 ERASE: ECB NOT X'41' (PERMANENT I/O ERR)
*                    ABEND=20 ERASE: SENSE BYTES NOT X'0040'
*                    ABEND=24 ERASE: STATUS IN CSW NOT X'0E'
*                    ABEND=28 EXEC PARM LENGTH GT 8
CDPDSCLR CDMSAVE B=3
         MVC   SYSLIB+40,=CL8'SYSLIB' RESTORE DDNAME
         MVC   EMPTY(18),EMPTY2    INITIALYZE FIRST DIRECTORY ENTRY
         L     R1,0(,R1)           POINT TO EXEC PARM
         LH    R2,0(,R1)           AND GET ITS LENGTH
         CH    R2,=H'0'            ANY PARAMETER HERE
         BE    NOPARM              NO, CONTINUE BELOW
         CH    R2,=H'8'            YES, CHECK LENGTH
         BNH   *+12                OK, CONTINUE BELOW
         MVI   RETCDE,28           BAD, SET ABEND CODE
         B     RETURN              AND TERMINATE
         MVI   SYSLIB+40,C' '      BLANK OUT
         MVC   SYSLIB+41(7),SYSLIB+40 DDNAME IN DCB
         BCTR  R2,0                SWITCH TO MACHINE LENGTH
         EX    R2,MVC              AND SET DDNAME INTO DCB
NOPARM   LR    R8,R13              SAVE R13
         OPEN  MF=(E,OPENL)        OPEN SYSLIB
         TM    SYSLIB+26,X'02'     DSORG=PO
         BO    *+12                YES, CONTINUE
         MVI   RETCDE,4            NO, SET ABENDCODE 4
         B     RETURN              AND TERMINATE
         LA    R1,CP               POINT TO CHANNEL PGM
         ST    R1,IOBCP            STORE TO IOB
         LA    R4,256              TRK 0,REC 1
         B     INTO                AND BEGIN PROCESSING
MVC      MVC   SYSLIB+40(*-*),2(R1) EXECUTE SUBJECT INSTRUCTION
*
NEXTTRCK EQU   *
         A     R4,=X'00010000'     ADD ONE TO TRACK NUMBER
INTO     LR    R0,R4               SET TTRN INTO R0 FOR CONVERT ROUTINE
         L     R1,SYSLIB+44        SET R1 TO DEB FOR CONVERT ROUTINE
         LA    R2,ABSADDR          POINT TO OUTPUT FOR CONVERT ROUTINE
         L     R15,CVTPTR          POINT TO CVT
         USING CVT,R15
         L     R15,CVTPCNVT        POINT TO CONVERT ROUTINE
         DROP  R15
         BALR  R14,R15             AND LINK TO CONVERT ROUTINE
         LR    R13,R8              RESTORE R13
         MVI   ECB,0               CLEAR ECB
         EXCP  IOB                 EXECUTE THE CHANNEL PROGRAM
         WAIT  ECB=ECB             WAIT FOR ITS COMPLETION
         XC    EMPTY(18),EMPTY     CLEAR FOR 2. AND FURTHER DIR.TRACKS
         CLI   ECB,X'41'           CHECK ECB COMPLETION CODE
         BE    *+12                GOOD, CONTINUE
         MVI   RETCDE,8            BAD, SET ABEND CODE
         B     RETURN              AND TERMINATE
         CLC   =X'0008',IOB+2      TEST SENSE BYTES FOR END-OF-TRACK
         BNE   NOTETRCK            IT IS NOT, CHECK FOR END-OF-FILE
         CLC   =X'0E400005',IOB+12 TEST CSW-STATUS FOR END-OF-TRACK
         BE    NEXTTRCK            IT IS, SWITCH TO NEXT TRACK
NOTETRCK CLI   IOB+12,X'0D'        TEST FOR END OF FILE CONDITION
         BE    *+12                IT IS, CONTINUE BELOW
         MVI   RETCDE,12           IT IS NOT, SET ABEND CODE
         B     RETURN              AND TERMINATE
         LA    R1,CP1              SWITCH TO
         ST    R1,IOBCP              SECONDARY CP
         MVI   ECB,0               CLEAR ECB
         EXCP  IOB                 ISSUE LAST EXCP
         WAIT  ECB=ECB             WAIT FOR COMPLETION
         CLI   ECB,X'41'
         BE    *+12
         MVI   RETCDE,16
         B     RETURN
         CLC   =X'0040',IOB+2
         BE    *+12
         MVI   RETCDE,20
         B     RETURN
         CLI   IOB+12,X'0E'
         BE    *+12
         MVI   RETCDE,24
         B     RETURN
         LH    R0,CP1+22
         SH    R0,IOB+14
         STH   R0,SYSLIB+18
         MVC   SYSLIB+5(8),ABSADDR SET CCHHR INTO DCB
         CLOSE MF=(E,OPENL)        CLOSE SYSLIB (EOF WILL BE WRITTEN)
         SR    R15,R15             CLEAR RETURN CODE
         RETURN (14,12),RC=(15)    AND RETURN TO CALLER
*
RETURN   LA    R1,*-*              SET ABEND CODE
RETCDE   EQU   *-1                 RETURN CODE PLACE
         ABEND (1),DUMP            TERMINATE ABNORMALLY
*
         DS    0D                  DOUBLE WORD BOUNDARY FOR IOB
IOB      DC    X'42',AL3(0),A(ECB)
         DC    D'0'
IOBCP    DC    A(0,SYSLIB)
         DC    D'0'
ABSADDR  DC    D'0'
         DC    F'0'
ECB      DC    F'0'
OPENL    OPEN  (SYSLIB,OUTPUT),MF=L
CP       CCW   X'31',ABSADDR+3,X'40',5
         CCW   X'08',CP,0,0
         CCW   X'0D',EMPTY,X'40',264
CP0      CCW   X'12',ABSADDR+3,X'40',8
         CCW   X'31',ABSADDR+3,X'40',5
         CCW   X'08',*-8,0,0
         CCW   X'0D',EMPTY+18,X'40',264
         CCW   X'08',CP0,0,0
CP1      CCW   X'31',ABSADDR+3,X'40',5
         CCW   X'08',CP1,0,0
         CCW   X'11',ERASEREC,X'20',X'7FFF'
ERASEREC DC    X'0000000000007FFF'
EMPTY    DC    8X'FF',H'14',8X'FF',264X'0'
EMPTY2   DC    8X'FF',H'14',8X'FF'
SYSLIB   DCB   DDNAME=SYSLIB,MACRF=E,DEVD=DA
         LTORG
         DS    64CL256
         CVT   DSECT=YES
         END
