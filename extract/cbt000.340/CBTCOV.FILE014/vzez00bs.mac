//Z00302  JOB  (208000,00,5,000),KREBS,CLASS=S,MSGCLASS=X,
//        NOTIFY=Z00302
// EXEC SERVASM
         GBLB  &BVTAUTH
SPY      TITLE 'MVS CONSOLE SIMULATION'
*---------------------------------------------------------------------*
*                                                                     *
*                         C O N S O L E                               *
*                                                                     *
*                       OPERATOR CONSOLE MONITOR                      *
*                                                                     *
*     THIS PROGRAM DISPLAYS ALL ACTIVE OPERATORS CONSOLES ON          *
*     A 3270 TSO TERMINAL. SINCE THIS BUFFER CAN BE 35 LINES LONG,    *
*     IT MUST BE DISPLAYED IN TWO 'PAGES'. VARIOUS CONTROL            *
*     COMMANDS ARE AVAILABLE AND ARE DESCRIBED BELOW.                 *
*                                                                     *
*     COMMAND      DESCRIPTION                                        *
*                                                                     *
*        ?         DISPLAYS HELP FOR CONSOLE                          *
*        END       END; END THE PROGRAM                               *
*        WAITXX    AUTOMATICALLY REFRESH THE SCREEN                   *
*                  XX TIMES, THEN RETURN TO NORMAL MODE.              *
*                  IF XX IS NOT ENTERED, 30 ITERATIONS ARE ASSUMED.   *
*                  IF XX = 0, THE COMMAND WILL REFRESH THE SCREEN     *
*                  UNTIL THE TSO USER PRESSES THE ATTENTION KEY       *
*                  TO EXIT FROM THE DISPLAY.  NOTE THAT THE ATTN      *
*                  KEY IS NOT THE PA1 KEY ON AN IBM 3278 TERMINAL.    *
*        DELAYXX   SET DELAY TIME BETWEEN REFRESHES TO XX TENTHS      *
*                  OF A SECOND.                                       *
*        RECALL    RECALL LAST ENTERED COMMAND FOR UPDATE             *
*        Z         HALT: END THE PROGRAM                              *
*                                                                     *
*     HITTING THE ATTENTION KEY WHILE IN TIMER MODE WILL CAUSE        *
*     THE TIMER TO BE RESET TO ZERO AND WAIT MODE TERMINATED.         *
*                                                                     *
*     ONLY TSO USERS WITH OPERATOR AUTHORITY MAY USE THIS PROGRAM.    *
*     AS A SECOND LEVEL OF CONTROL THE PCF LEVEL IS CHECKED. PCF      *
*     LEVEL(0,0) USERS MAY ISSUE ALL OS AND JES COMMANDS, WHILE       *
*     OTHERS MAY ISSUE OS AND JES DISPLAY AND REPLY COMMANDS ONLY.    *
*     AN AUTHORIZATION SUPERVISOR CALL IS REQUIRED AND THE SVC 34     *
*     INTERFACE IS USED TO ISSUE COMMANDS FROM TSO. TO UTILIZE THIS   *
*     FACILITY REQUIRES PROTECT KEY ZERO AND THEREFORE MUST BE        *
*     APF AUTHORIZED.  ALSO THE CONSOLE BUFFERS ARE NOW IN FETCH      *
*     PROTECTED STORAGE AND CONSOLE MUST GO INTO PROTECT KEY ZERO TO  *
*     ACCESS THEIR CONTENTS.                                          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
SPY      BVINIT
         SPACE
         L     R3,=V(BUFFER)
         USING BUFFER,R3
         GTTERM PRMSZE=PRIME,ALTSZE=ALT
         CLI   ALT,27
         BE    SET27
         B     NOSET
SET27    EQU   *
         STSIZE SIZE=80,LINE=24
NOSET    EQU   *
         BVTAUTH PSCB2SPY
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         ESAR  R9                  GET SECONDARY ASID
         ST    R9,SASID            AND SAVE IT
         AXSET AX=ONE              SET AX TO ALLOW SSAR
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         SPACE
         STAX  ATTNEXIT,MF=(E,STAXLIST)
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*          BUILD A TABLE OF ALL UCM ADDRESSES                         *
*                                                                     *
*---------------------------------------------------------------------*
BLDUCMS  EQU   *
         L     R4,16               R4 = ADDR OF CVT
         L     R4,CVTCUCB-CVT(,R4) R4 = ADDR OF 'CUCB' (UCM BASE)
         USING UCM,R4              SET ADDRESSABILITY TO UCM BASE
         L     R5,UCMVEA           ADDRESS OF FIRST UCM ENTRY
         L     R6,UCMVEZ           LOAD LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL           ADDRESS OF LAST UCM ENTRY
         DROP  R4                  DROP ADDRESSABILITY TO UCM BASE
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         LA    R8,UCMTAB+4         LOAD ADDR OF 1ST UCM ADDR (REL 1)
         LA    R15,UCMTABC         LOAD NUMBER OF ENTRIES IN TABLE
UCMTBLP  EQU   *
         SLR   R8,R8               ZERO REGISTER FOR IC
         IC    R8,UCMID            LOAD UCMID
         CR    R8,R15              SEE IF UCMID OUTSIDE OUR TABLE
         BH    UCMTBLP1            YES, IGNORE IT
         SLL   R8,2                MULTIPLY BY 4
         LA    R8,UCMTAB(R8)       POINT WITHIN TABLE
         ST    R5,0(R8)            SAVE UCM ADDRESS
UCMTBLP1 EQU   *
         LA    R8,4(,R8)           INCREMENT TO NEXT UCMTAB ENTRY
         AR    R5,R6               INCREMENT TO NEXT UCM ENTRY
         CR    R5,R7               SEE IF END OF UCM ENTRIES
         BL    UCMTBLP             NO, LOOP
UCMTDONE EQU   *
         STH   R15,NUMUCMS         SAVE MAX NUMBER OF UCMS
         DROP  R5                  DROP ADDRESSABILITY TO UCM
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*          FIND THE MASTER CONSOLE UCM AND DCM ADDRESS                *
*                                                                     *
*---------------------------------------------------------------------*
FINDUCM  EQU   *
         SLR   R5,R5               CLEAR REG FOR IC
         IC    R5,CNSLNUM          LOAD CONSOLE NUMBER
         CLI   CNSLNUM,C'M'        WAS MASTER REQUESTED?
         BE    UCMMAST             YES, BRANCH
         SLR   R15,R15             ZERO REG FOR IC
         IC    R15,CNSLNUM         LOAD CONSOLE NUMBER
         CH    R15,NUMUCMS         SEE IF TOO HIGH
         BH    UCMERR6             YES, INVALID
         SLA   R15,2               MULTIPLY BY 4
         L     R4,UCMTAB(R15)      LOAD UCM ENTRY
         LTR   R4,R4               TEST ADDRESS
         BZ    UCMERR6             ZERO, CONSOLE IS NOT A CRT
         USING UCMLIST,R4          SET ADDRESSABILITY TO UCM
         TM    UCMATR,UCMUF        IS THE DEVICE ACTIVE?
         BO    ACTIVE              YES, BRANCH
UCMERR5  MVC   ERROR(26),ERRMSG5   SET INACTIVE CONSOLE MESSAGE
         B     UCMMAST             GO SET TO MASTER
UCMERR6  MVC   ERROR(26),ERRMSG6   SET INVALID CONSOLE MESSAGE
UCMMAST  LA    R5,1                SET STARTING CONSOLE NUMBER
         LH    R15,NUMUCMS         LOAD NUMBER OF UCMS
         LA    R14,UCMTAB+4        LOAD ADDRESS OF UCM TABLE
UCMMLOOP ICM   R4,15,0(R14)        LOAD UCM ENTRY
         BZ    UCMMLOO1            ZERO, CONSOLE IS NOT A CRT
         TM    UCMDISP1,UCMDISPA   IS THIS A MASTER CONSOLE?
         BNO   UCMMLOO1            NO, LOOP
         TM    UCMATR,UCMUF        IS THE DEVICE ACTIVE?
         BO    ACTIVE              YES, BRANCH
         TPUT  ERRMSG1,26          WRITE ERROR MSG
         ABEND 002                 ABEND THE COMMAND
UCMMLOO1 LA    R14,4(,R14)         INCREMENT TO NEXT UCM TABLE ENTRY
         LA    R5,1(,R5)           ADD 1 TO CONSOLE NUMBER
         BCT   R15,UCMMLOOP        LOOP ON UCM TABLE ENTRIES
         TPUT  ERRMSG1,26          WRITE ERROR MSG
         ABEND 002                 ABEND THE COMMAND
ACTIVE   ST    R4,CONFLG1          SAVE UCM ADDRESS
         STC   R5,CNSLNUM          STORE CONSOLE NUMBER
         DROP  R4                  DROP ADDRESSABILITY TO UCM
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*              LOCATE SCREEN BUFFER AND PREPARE TO TPUT               *
*                                                                     *
*              OUTPUT LOOP RETURNS TO HERE TO HANDLE POSSIBLE         *
*              MASTER CONSOLE SWITCH                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
NEXTPAGE EQU   *
         CLI   ATTNFLG,X'00'       WAS ATTN HIT?
         BE    NOATTN              NO
*                                  ATTENTION KEY HIT; PROCESS IT
         STFSMODE ON
         MVI   ATTNFLG,X'00'       YES, RESET FLAG
         MVC   TIME(3),BLANKS      BLANK OUT TIMER FIELD
         MVI   WAITFLG,X'00'       TURN OFF WAIT FLAG
         XC    TIMER,TIMER         SET TIMER TO 0
NOATTN   EQU   *
         L     R5,CONFLG1          R5 = ADDR OF UCM
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         USING DCM,R6              SET ADDRESSABILITY TO DCM
         ICM   R6,15,UCMXB         R6 = ADDR OF RDCM
         BP    GRAPHICS            YES
         MVC   ERROR(26),ERRMSG4   NON-GRAPHIC CONSOLE
         B     DONE                GET OUT
         SPACE
GRAPHICS MVC   CTYPE(28),BLANKS    BLANK OUT CONSOLE TYPE FIELD
         TM    UCMDISP1,UCMDISPA   IS THIS A MASTER CONSOLE?
         BNO   AUTH                NO
         MVC   MASTER(6),=CL6'MASTER' YES
AUTH     TM    UCMAUTHA,UCMAUTH1   IS THIS CONSOLE SYSTEM AUTHORIZED?
         BNO   AUTH1               NO
         MVC   SYS(3),=CL3'SYS'    YES
AUTH1    TM    UCMAUTHA,UCMAUTH2   IS IT I/O AUTHORIZED?
         BNO   AUTH2               NO
         MVC   IO(3),=CL3'I/O'     YES
AUTH2    TM    UCMAUTHA,UCMAUTH3   IS IT CONS AUTHORIZED?
         BNO   AUTHDONE            NO
         MVC   CONS(4),=CL4'CONS'  YES
AUTHDONE L     R7,UCMUCB           R7 = ADDR OF UCB
         MVC   UNIT(3),13(R7)      MOVE UNIT ADDR INTO LINE
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         LA    R9,CONASID          GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
         L     R8,DCMADTRN         R8 = ADDR OF PAGEABLE DCM
         LA    R4,LOCDCM           R4 = ADDR OF COPY OF PDCM
         LA    R5,L'LOCDCM         R5 = LENGTH OF PDCM
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
MVLOOP   MVCP  0(R5,R4),0(R8),R15  MOVE IT
         BZ    MVDONE              FINISHED
         LA    R4,256(R4)          INCREMENT 'TO' ADDRESS
         LA    R8,256(R8)          INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          DECREMENT LENGTH LEFT TO MOVE
         B     MVLOOP              MOVE NEXT 256 BYTES
MVDONE   L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
         LA    R7,LOCDCM           R7 = ADDR OF COPY OF TDCM
         USING PDCM,R7             SET ADDRESSABILITY TO PAGEABLE DCM
         SPACE
         MVC   LASTLINE(40),DCMINPUT  FILLIN TRAILER.
         SPACE
         LH    R15,DCMMSGAL        LOAD NUMBER OF MESSAGE LINES
         STH   R15,NUMIN           SAVE NUMBER OF INPUT LINES
         LH    R15,DCMCORLN        LOAD LENGTH OF MESSAGE LINE
         STH   R15,LENIN           SAVE LENGTH OF INPUT LINE
         XC    BUFINDEX,BUFINDEX   ZERO BUFFER INDEX AMOUNT
         CH    R15,=H'84'          SEE IF 3277, 3278, OR 3036 CONSOLE
         BNE   NOCTRL              NO, NO CONTROL CHARACTERS
         LH    R15,=H'6'           SET INDEX TO 6 FOR CTRL CHARS
         STH   R15,BUFINDEX        AND SAVE BUFFER INDEX AMOUNT
NOCTRL   LH    R15,LENIN           LOAD LENGTH OF BUFFER LINE
         MH    R15,NUMIN           MULTIPLY BY NUMBER OF LINES
         STH   R15,MOVEL           SAVE LENGTH OF CONSOLE BUFFERS
         EJECT
*---------------------------------------------------------------------*
*                                                                   *
*        ASSUME 3277 TYPE CONSOLE WHICH MEANS THAT NO PAGE2 WILL    *
*        REQUIRED FOR EITHER A 3277 OR A 3278 TSO CRT.              *
*                                                                   *
*---------------------------------------------------------------------*
         LH    R15,NUMIN           LOAD NUMBER OF LINES IN BUFFER
         MH    R15,LENIN           MULTIPLY BY LINE LENGTH
         STH   R15,PAGEML          AND SAVE MOVE LENGTH
         LH    R15,NUMIN           LOAD NUMBER OF LINES IN BUFFER
         SPACE
*        MOVE CONSOLE BUFFER TO TSO ADDRESS-SPACE
         SPACE
MOVEBUFF EQU   *
         LA    R9,CONASID          GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
         L     R8,DCMASCRN         R8 = ADDR OF SCREEN BUFFER
         SH    R8,BUFINDEX         SUBTRACT BUFFER INDEX (IF ANY)
         LA    R4,BUF              R4 = ADDR OF OUTPUT BUFFER
         LH    R5,MOVEL            R5 = LENGTH OF ALL CONSOLE BUFFERS
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
MOVELOOP EQU   *
         MVCP  0(R5,R4),0(R8),R15  MOVE IT
         BZ    MOVEDONE            FINISHED
         LA    R4,256(R4)          INCREMENT 'TO' ADDRESS
         LA    R8,256(R8)          INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          DECREMENT LENGTH LEFT TO MOVE
         B     MOVELOOP            MOVE NEXT 256 BYTES
MOVEDONE EQU   *
         L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         SPACE
         LH    R15,PAGEML          LOAD LENGTH OF MESSAGE LINES
         LA    R15,TRAILEN(,R15)   ADD TRAILER LENGTH
         ST    R15,TPUTLEN         SET LENGTH FOR FULL SCREEN
         LA    R4,BUF              R4 = ADDR OF OUTPUT BUFFER
         AH    R4,PAGEML           R4 = ADDR OF TRAILER
         MVC   0(TRAIL1L,R4),TRAIL1
         MVC   TRAIL1L(TRAIL2L,R4),TRAIL2
         MVC   TRAIL1L+TRAIL2L(TRAIL3L,R4),TRAIL3
         DROP  R5,R6,R7
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*               DISPLAY THE OPERATORS SCREEN ON A 3277                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         LA    R1,WCC              R1 = ADDR OF OUTPUT STREAM
         L     R0,TPUTLEN          R0 = LENGTH OF TPUT
         TPUT  (1),(0),NOEDIT,NOWAIT,NOHOLD
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
INPUT    EQU   *
         MVC   ERROR(32),BLANKS    BLANK OUT ERROR FIELD
         CLI   WAITFLG,X'FF'       IS THE WAIT FLAG ON?
         BNE   READCHAR            NO, SO GO GET A COMMAND
         STIMER WAIT,BINTVL=DELAY WAIT FOR DELAY*.01 SECONDS
         L     R2,TIMER            R2 = CURRENT VALUE OF TIMER
         BCTR  R2,0                TIMER = TIMER - 1
         ST    R2,TIMER            STORE NEW VALUE OF TIMER
         CVD   R2,WORK             CONVERT TO DECIMAL.
         MVC   SCRATCH(4),PATTERN  MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6   EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1   MOVE TIME LEFT INTO PLACE
         LTR   R2,R2               HAS TIMER HIT ZERO?
         BNZ   NEXTPAGE            NO, CONTINUE TO COUNT
         MVC   TIME(3),BLANKS      CLEAR COUNTER FIELD
         XI    WAITFLG,X'FF'       TOGGLE WAIT FLAG OFF
         B     NEXTPAGE            AND GO ON AS IF NOTHING HAPPENED..
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                       READ COMMAND FROM USER                        *
*                                                                     *
*---------------------------------------------------------------------*
READCHAR EQU   *
         MVC   REPLY,BLANKS        SHOW NO COMMAND
         TGET  REPLYBUF,85,ASIS    GET 79 CHARACTERS FROM TERMINAL
         CH    R15,=H'20'          SEE IF RETURN CODE VALID
         BH    INVALID             NO, BRANCH
         B     BRTAB(R15)          BRANCH TO BRANCH TABLE
BRTAB    B     OK                  RC=0
         B     NEXTPAGE            RC=4  (NO DATA AVAILABLE)
         B     ATTN                RC=8  (ATTENTION WAS HIT)
         B     NEXTPAGE            RC=12 (IGNORE DATA)
         B     INVALID             RC=16 (INVALID TPUT)
         B     IOERROR             RC=20 (TERMINAL DISCONNECTED)
INVALID  TPUT  ERRMSG9,26          WRITE ERROR MSG
         ABEND 004                 ABEND THE COMMAND
IOERROR  EQU   *
         ABEND 005                 ABEND THE COMMAND
ATTN     MVI   ATTNFLG,X'FF'       SET ATTENTION INDICATOR
         B     NEXTPAGE            AND CONTINUE AS IF ENTER PRESSED
OK       CLI   REPLYBUF,X'7D'      ENTER KEY ?
         BE    NOPFK               YES, SKIP PFK LOGIC
         CLI   REPLYBUF,X'60'      ERROR (NO AID)?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6B'      PA3 KEY ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6C'      PA1 KEY ?
         BE    ATTN                YES, PROCESS AS IF ATTN
         CLI   REPLYBUF,X'6D'      CLEAR KEY ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6E'      IS THIS A RESHOW? (VTAM ONLY)
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'F0'      TEST REQ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'7A'      PFK10 (RECALL) ?
         BE    RECALL              YES, GO DO RECALL COMMAND
         NI    REPLYBUF,X'0F'      TURN OFF HIGH BYTE
         SR    R1,R1               CLEAR REGISTER
         IC    R1,REPLYBUF         GET PFK NUMBER
         LTR   R1,R1               TEST PFK NUMBER
         BNP   NEXTPAGE            ZERO OR NEGATIVE, CONTINUE
         BCTR  R1,0                DECREMENT BY 1
         CH    R1,=H'9'            HIGHEST DEFINED PFK IS 10
         BH    NEXTPAGE            SO SKIP OTHERS OR BUF TRANSFER ERROR
         MH    R1,=H'80'           GET OFFSET INTO TABLE
         LA    R1,PFKTABLE(R1)     GET ADDRESS OF COMMAND
         MVC   REPLY,0(R1)         INSERT COMMAND
NOPFK    CLI   REPLY,C' '          JUST A BLANK?
         BE    NEXTPAGE            YES, JUST GO REFRESH
         MVC   USERLINE,BLANKS     BLANK OUT INPUT FIELD
         OC    REPLY(79),BLANKS    CONVERT CHARS TO UPPER CASE
         CLC   REPLY(6),=C'RECALL' RECALL COMMAND ?
         BE    RECALL              YES, GO DO IT
         CLC   REPLY(4),=C'SWAP'   XCTL TO SPYJ ?
         BE    SWAP                YES, GO DO IT
         CLC   REPLY(3),=C'RCL'    RECALL COMMAND (SHORT FORM) ?
         BNE   CHEKWAIT            NO, CHECK FOR WAIT COMMAND
RECALL   EQU   *
         MVC   LASTUSER,LASTRPLY   RESTORE LAST ENTERED COMMAND
         MVC   USERLINE(L'LASTRPLY),LASTRPLY   RECALL LAST COMMAND
         B     NEXTPAGE            GIVE OPER THE CHANCE TO CHANGE
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        XCTL TO SPYJ                                                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
SWAP     EQU   *
         STFSMODE OFF              TURN OFF FS MODE
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         LA    R9,SWAP                 NEW BASE.
         L     R13,SAVEAREA+4          UNCHAIN.
         PUSH  USING
         USING SWAP,R9
         XCTL  (2,12),EP=SPYJ
         POP   USING
*---------------------------------------------------------------------*
*                                                                     *
*                    WAIT  --  ENTER WAIT MODE                        *
*                                                                     *
*---------------------------------------------------------------------*
CHEKWAIT EQU   *
         CLC   REPLY(4),=C'WAIT'   DO WE SHIFT TO WAIT MODE?
         BNE   CDELAY              NO, SO CONTINUE
         LA    R1,REPLY+4          LOAD START ADDRESS OF VALUE
         XI    WAITFLG,X'FF'       TURN ON WAIT FLAG
         LA    R2,30               SET DEFAULT VALUE = 30
         LA    R15,CONVBIN         BRANCH TO CONVERSION RTN
         BALR  R14,R15             EBCDIC TO BINARY
         MVC   SCRATCH(4),PATTERN  MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6   EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1   MOVE TIME LEFT INTO PLACE
         ST    R2,TIMER            STORE STARTING TIMER VALUE
         B     NEXTPAGE            ALL SET - GO DISPLAY NEXT PAGE
*---------------------------------------------------------------------*
*                                                                     *
*        DELAY  --  SET TIMER DELAY IN TENTHS OF A SECOND             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
CDELAY   EQU   *
         CLC   REPLY(5),=C'DELAY'  ARE WE CHANGING THE TIME DELAY?
         BNE   CNSL                NO, SO CONTINUE
         LA    R1,REPLY+5          LOAD START ADDRESS OF VALUE
         LA    R2,10               SET DEFAULT VALUE = 10 TENTHS SECOND
         LA    R15,CONVBIN         BRANCH TO CONVERSION RTN
         BALR  R14,R15             EBCDIC TO BINARY
         MVC   SCRATCH(5),DPATTRN  MOVE IN EDIT PATTERN
         ED    SCRATCH(5),WORK+6   EDIT IN DELAY TIME
         MVC   PAUSE(3),SCRATCH+2  MOVE TIME LEFT INTO PLACE
         MH    R2,=H'10'           CONVERT TO 100THS OF A SECOND
         ST    R2,DELAY            STORE WAIT DELAY VALUE
         B     NEXTPAGE            ALL SET - GO DISPLAY NEXT PAGE
*---------------------------------------------------------------------*
*                                                                     *
*                   CONSOLE --  CHANGE CONSOLE ADDRESS                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
CNSL     EQU   *
         CLC   REPLY(2),=C'C='     IS THIS A CONSOLE CHANGE REQUEST
         BNE   HALT                NO, BRANCH
         MVI   CNSLNUM,C'M'        SET DEFAULT TO MASTER
         LA    R1,REPLY+2          LOAD START ADDRESS OF VALUE
         CLI   0(R1),C'M'          IS THE MASTER CONSOLE REQUESTED?
         BE    FINDUCM             YES, BRANCH
         LA    R2,0                SET DEFAULT VALUE = 00
         LA    R15,CONVBIN         BRANCH TO CONVERSION RTN
         BALR  R14,R15             EBCDIC TO BINARY
         LTR   R2,R2               TEST VALUE
         BZ    FINDUCM             ZERO, USE 'M'
         STC   R2,CNSLNUM          SAVE CONSOLE NUMBER
         B     FINDUCM             GO PROCESS CONSOLE SWITCH
*---------------------------------------------------------------------*
*                                                                     *
*                        Z  --  TERMINATE CONSOLE                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
HALT     EQU   *
         CLC   REPLY(4),=C'Z   '   IS IT AN 'Z'?
         BE    DONE                YES, SO QUIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           ?  --  LIST HELP FOR CONSOLE COMMANDS ON TERMINAL         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
GETHELP  EQU   *
         CLI   REPLY,C'?'          IS HE ASKING FOR HELP?
         BNE   NOHELP              NO,SO CONTINUE
         L     R1,=V(HELP)         R1 = ADDR OF HELP PAGE
         LA    R0,HLENGTH          R0 = LENGTH OF HELP PAGE
         TPUT  (1),(0),FULLSCR     DISPLAY HELP
         B     READCHAR
*---------------------------------------------------------------------*
*                                                                     *
*   CHECK FOR THE 'VIP' PASSWORD. THIS IS THE THIRD AND LAST LEVEL    *
*   OF AUTHORIZATION REQUIRED TO ISSUE OS/JES COMMANDS.               *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
NOHELP   EQU   *
         MVC   LASTRPLY,REPLY      SAVE THIS COMMAND FOR RECALL
         MVC   LASTUSER,REPLY      SHOW LAST ENTERED USER COMMAND
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*        MVS COMMANDS                                                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         MVC   COMMDATA+4(50),REPLY    SETUP COMMAND FOR SVC 34.
         MVC   REPLY(79),BLANKS    BLANK OUT REPLY FIELD
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         SLR   R0,R0               CLEAR REG 0
         IC    R0,CNSLNUM          SET UCMID FOR COMMAND
         LA    R1,COMMDATA         LOAD ADDRESS OF WTO LIST FORM
         MGCR  (1)                 ISSUE COMMAND
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         B     NEXTPAGE            LOOP
COMMDATA WTO   '                                                  ',   X
               ROUTCDE=(2),DESC=4,MF=L
*---------------------------------------------------------------------*
*                                                                     *
*                      COMMAND WAS INVALID                            *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
DONE     EQU   *
         STFSMODE OFF              TURN OFF FS MODE
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         B     RETURN
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*            CONVERT EBCDIC NUMBERS FROM USER INTO BINARY             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
CONVBIN  EQU   *
         CVD   R2,WORK             CONVERT TO DECIMAL.
         CLI   0(R1),C' '          DID HE ENTER A NUMBER?
         BER   R14                 NO, USE THE DEFAULT
         CLI   0(R1),C'0'          IS THE HEX CODE < 'F0' ?
         BL    BADCHAR             YES, ERROR
         CLI   0(R1),C'9'          IS THE HEX CODE > 'F9' ?
         BH    BADCHAR             YES, ERROR
         PACK  WORK(8),0(1,R1)     PACK EBCDIC (ASSUME 1 DIGIT)
         CLI   1(R1),C' '          DID HE ENTER 2 DIGITS?
         BE    CVB                 NO, DONT DO THE 2 DIGIT PACK
         CLI   1(R1),C'0'          IS THE HEX CODE < 'F0' ?
         BL    BADCHAR             YES, ERROR
         CLI   1(R1),C'9'          IS THE HEX CODE > 'F9' ?
         BH    BADCHAR             YES, ERROR
         PACK  WORK(8),0(2,R1)     PACK AGAIN, WITH 2 DIGITS THIS TIME
CVB      EQU   *
         CVB   R2,WORK             GET BINARY
         BR    R14                 RETURN TO MAINLINE
BADCHAR  MVC   ERROR(26),ERRMSG2   CONSOLE NUMBER ERROR
         BR    R14                 RETURN TO MAINLINE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                          A T T N E X I T                            *
*                                                                     *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
ATTNEXIT LR    R7,R15              ESTABLISH
         USING ATTNEXIT,R7         ADDRESSABILITY.
         MVI   ATTNFLG,X'FF'       SET ATTN FLAG
         BR    R14                 RETURN TO CALLER
         DROP  R7
         EJECT                                                   ERZ-BV
PFKTABLE DS    0H
PFK1     DC    CL80'?'
PFK2     DC    CL80'Z    '
PFK3     DC    CL80'Z  '
PFK4     DC    CL80'*I A'
PFK5     DC    CL80'$DF'
PFK6     DC    CL80'$DI'
PFK7     DC    CL80'$DA'
PFK8     DC    CL80'D A,L'
PFK9     DC    CL80'SWAP  '
PFK10    DC    CL80'RECALL'
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         DS    0D
WORK     DS    D                   WORK AREA FOR PACKS
SCRATCH  DS    D                   SCRATCH AREA FOR CHAR. MANIP
CONFLG1  DC    F'1'                CONSOLE TO BE LOOKED AT
TPUTLEN  DC    F'0'                LENGTH OF FULLSCREEN TPUT
LPSCREEN DC    F'0'                LINES PER SCREEN
CPLINE   DC    F'0'                CHARACTERS PER LINE
LENIN    DC    H'0'                LENGTH OF LINE IN DCM
NUMIN    DC    H'0'                NUMBER OF LINES IN DCM
PAGEML   DC    H'0'                SIZE OF 1 PAGE OF BUFFERS
MOVEL    DC    H'0'                TOTAL SIZE OF LINES IN DCM
BUFINDEX DC    H'0'                INDEX (0 OR 6) FOR CONTROL CHARS
TIMER    DC    F'30'               SECONDS LEFT ON TIMER
DELAY    DC    F'100'              DELAY FOR 100 HUNDREDTHS OF A SECOND
ATTNFLG  DC    X'00'               X'FF' INDICATES ATTN WAS TRAPPED
CRTFLAG  DC    X'FF'               X'FF' INDICATES CRT IN USE
WAITFLG  DC    X'00'               X'00' INDICATES NOT IN WAIT MODE
PATTERN  DC    X'40202020'         EDIT PATTERN FIELD
DPATTRN  DC    X'4021204B20'       EDIT PATTERN FIELD
REPLYBUF DS    0CL85               TGET REPLY BUFFER
REPLYAID DS    CL6                 TGET ATTENTION IDENTIFICATION VALUES
REPLY    DC    CL79' '             USERS COMMAND INPUT FIELD
LASTRPLY DC    CL79' '             USERS LAST COMMAND INPUT
PAD      DC    C' '                PAD CHARACTER FOR MOVEBUFF MVC
STAXLIST STAX  ATTNEXIT,MF=L
BLANKS   DC    CL80' '             CHARACTER STRING OF BLANKS
         CNOP  0,4
PRIME    DC    AL2(0)              PRIMARY SIZE.
ALT      DC    AL2(0)              ALTERN. SIZE.
SASID    DS    F                   SAVE PREVIOUS SECONDARY ASID
CONASID  EQU   7                   ASID OF 'CONSOLE'
ONE      DC    H'1'                TO SET AX 1
ZERO     DC    H'0'                TO SET AX 0
CNSLNUM  DC    C'M'                DEFAULT TO MASTER CONSOLE
UCMTAB   DC    F'0'                NULL FIRST UCM ADDRESS FOR REL 1
         DC    20F'0'              ROOM FOR 20 UCM ADDRESSES
UCMTABC  EQU   (*-(UCMTAB+4))/4    NUMBER OF UCM ADDRESSES
NUMUCMS  DS    H                   NUMBER OF UCM ENTRIES
         LTORG
         SPACE
ERRMSG1  DC    CL26'ERROR - NO MASTER CONSOLE '
ERRMSG2  DC    CL26'ERROR - NON-NUMERIC VALUE '
ERRMSG4  DC    CL26'ERROR - NON-CRT CONSOLE   '
ERRMSG5  DC    CL26'ERROR - CONSOLE INACTIVE  '
ERRMSG6  DC    CL26'ERROR - CONSOLE INVALID   '
ERRMSG9  DC    CL26'INVALID TGET COMMAND      '
LOCDCM   DS    CL(ENDDCM-STRTDCM)  LOCAL COPY OF PDCM
         EJECT
         PRINT NOGEN
DCM      DSECT
         IEECRDCM
PDCM     DSECT
         IEECDCM DEVICE=D
         IEECUCM FORMAT=NEW
         CVT   DSECT=YES
         SPACE 5
*---------------------------------------------------------------------*
*                                                                     *
*                  DISPLAY SCREEN - HEADER SECTION                    *
*                                                                     *
*---------------------------------------------------------------------*
BUFFER   CSECT
WCC      DC    X'F1C31140403C404000'
         DC    X'1D60'             ATTR BYTE - PROTECTED FIELD
BUF      DC    3000C' '            TPUT BUFFER
         SPACE
TRAIL1   EQU   *
         DC    X'115A50'           SBA TO ROW 22, COL 1
         DC    X'2903C06042F44100'
LASTLINE DS    0CL79               OPERATORS COMMAND INPUT LINE
LASTOPER DC    CL40' '             LAST OPERATOR INPUT BUFFER
LASTUSER DC    CL39' '             LAST USER INPUT BUFFER
TRAIL1L  EQU   *-TRAIL1
TRAIL2   DC    X'115B60'           SBA TO ROW 23, COL 1
         DC    X'2903C0E842F641F4'
HEADING  DC    CL8'CONSOLE '
CONNUM   DC    CL2'  '             CONSOLE NUMBER
CTYPE    DC    CL4' '
MASTER   DC    CL8' '              MASTER CONSOLE
SYS      DC    CL4' '              SYS  AUTHORIZATION
IO       DC    CL4' '              I/O  AUTHORIZATION
CONS     DC    CL5' '              CONS AUTHORIZATION
         DC    CL3' '
         DC    CL5'UNIT'
UNIT     DC    CL4' '              UNIT ADDR OF CONSOLE
HEADING1 DC    CL7'TIMER: '
TIME     DC    CL3' '              SECONDS REMAINING ON TIMER
SLASH    DC    CL1'/'
PAUSE    DC    CL3'1.0'            DELAY IN SECONDS
         DC    CL19' '
TRAIL2L  EQU   *-TRAIL2
TRAIL3   DC    X'115CF0'           SBA TO ROW 24, COL 1
         DC    X'2903C04042F74100'
         DC    X'13'               INSERT CURSOR
USERLINE DC    CL13' '             USERS COMMAND INPUT LINE
ERROR    DC    CL66' '             ERROR MSG FIELD
TRAIL3L  EQU   *-TRAIL3            LENGTH OF TRAILER
TRAILEN  EQU   *-TRAIL1
         SPACE 5
*---------------------------------------------------------------------*
*                                                                     *
*                           USER HELP PAGE                            *
*                                                                     *
*---------------------------------------------------------------------*
HELP     CSECT
         DC    X'C1'               WCC
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C404000'         FILL SCREEN WITH NULLS
R1C01    DC    X'114040',X'1DE8',C'COMMAND     DESCRIPTION'
R2C01    DC    X'11C150'
R3C01    DC    X'11C260'
R4C01    DC    X'11C3F0'
R5C01    DC    X'11C540',C' DELAYXX    SET DELAY TO XX TENTHS SECONDS'
R6C01    DC    X'11C650',C' END        END CONSOLE'
R7C01    DC    X'11C760',C' FREEZE     FREEZE DISPLAY ON CURRENT PAGE'
R8C01    DC    X'11C8F0',C' RECALL     RECALL LAST COMMAND FOR UPDATE'
R9C01    DC    X'114A40',C' C=NN       SWITCH TO CONSOLE NUMBER NN'
R10C01   DC    X'114B50',C' RELEASE    RELEASE DISPLAY'
R11C01   DC    X'114C60',C' WAIT       START TIMER MODE FOR 30 SECONDS'
R12C01   DC    X'114DF0',C' WAITXX     START TIMER MODE FOR XX SECONDS'
R13C01   DC    X'114F40',C' WAIT0      START UNLIMITED TIMER MODE'
R14C01   DC    X'115050',C' Z          END CONSOLE'
R15C01   DC    X'11D160',C' ?          DISPLAY THIS PAGE'
R16C01   DC    X'11D2F0',C'                          '
R17C01   DC    X'11D440'
R18C01   DC    X'11D550',C'HITTING ATTENTION WILL STOP THE WAIT TIMER'
R19C01   DC    X'11D660'
R20C01   DC    X'11D7F0',C' PFK 1=HELP    PFK 2=Z        PFK 3=Z  '
R21C01   DC    X'11D940',C' PFK 4=*I A    PFK 5=$DF      PFK 6=$DI'
R22C01   DC    X'115A50',C' PFK 7=$DA     PFK 8=D A,L    PFK 9=D TS,L'
R23C01   DC    X'115B60',C' PFK10=RECALL  PFK11=         PFK12=  '
R24C01   DC    X'115CF0'
         DC    C'HIT ENTER TO CONTINUE'
         DC    X'115DC6'           ROW 24, COL 23
         DC    X'1D40'
         DC    X'1340'
         DC    X'1DE8'
HLENGTH  EQU   *-HELP              LENGTH OF HELP TPUT
         END
//L.SYSLMOD DD DSN=SYS1.CMDLIB1,DISP=SHR
  SETCODE AC(1)
  NAME SPY(R)
