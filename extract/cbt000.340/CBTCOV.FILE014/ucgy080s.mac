         MACRO
&NAME    ENDE
&NAME    L     13,4(13)
         L     14,12(13)
         LM    0,12,20(13)
         BR    14
*
         MEND
         MACRO
&N       OSDATUM
*                          BEREITSTELLEN TAGESDATUM
&N       LA    1,2
         SVC   11                      TIME
         CNOP 6,8
         ZAP   *+X'54'(2),=P'01'
         ZAP   *+X'52'(2),=P'28'
         MVC   *+X'62'(8),=X'20204B20204B2020'
         ST    1,*+X'64'
         ED    *+X'5E'(2),*+X'61'
         TM    *+X'5B',1
         BNZ   *+18
         TM    *+X'53',X'12'
         BM    *+10
         AP    *+X'2C'(2),=P'1'
         LA    1,*+X'24'
         CP    *+X'42'(2),0(2,1)
         BNH   *+X'3E'
         SP    *+X'38'(2),0(2,1)
         AP    *+14(2),=P'1'
         LA    1,2(1)
         B     *-X'1A'
         DC    P'01,31,28,31,30,31,30,31,31,30,31,30,31'
         DC    X'20204B20204B2020'
         DC    F'0'
         OI    *-X'25',15
         UNPK  *-13(2),*-X'2A'(2)
         OI    *-11,15
         UNPK  *-X'1A'(2),*-X'10'(2)
         LA    1,*-X'20'        R1 = ADR. DES DATUMS XX.XX.XX
*
         MEND
         MACRO
&N     BEGINN   &R1,&R2,&R3,&R4,&SA=SAVEAREA,&GEN=NOGEN
         GBLB  &L26REG
         LCLC  &TAG,&MON,&JAHR,&DATE
&TAG     SETC  '&SYSDATE'(4,2)
&MON     SETC  '&SYSDATE'(1,2)
&JAHR    SETC  '&SYSDATE'(7,2)
&DATE    SETC  '&TAG..'.'&MON..'.'&JAHR'
         MNOTE ' '
         CNOP  0,4
&N       STM   14,12,12(13)
         BALR  1,0
         L     1,98+16(1)
         SPM   1
         ST    1,8(13)
         ST    13,4(1)
         B     76(1)
         DC    CL24' &SYSTIME &DATE &SYSECT'
         AGO   .P08
.P05     AIF   ('&N' EQ '').P06
         DC    CL8'&N'
         AGO   .P08
.P06     DC    CL8'BEGINN'
.P08     AIF   ('&R1' NE '').P08C
         USING *,13
         AGO   .P09
.P08C    USING *,&R1
.P09     AIF   ('&R2' EQ '').P10
         USING *+4095,&R2
         AIF   ('&R3' EQ '').P10
         USING *+2*4095,&R3
         AIF   ('&R4' EQ '').P10
         USING *+3*4095,&R4
.P10     ANOP
&SA      DC    18F'0',B'1100',AL3(*-73)
         LR    13,1
         L     1,4(1)
         L     1,24(1)
         AIF   ('&R1' NE '').P20
         AIF   ('&R2' EQ '').P50
         LA    &R2,4095(13)
         AGO   .P40
.P20     AIF   ('&R1' EQ '13' OR '&R1' EQ 'R13').P30
         LR    &R1,13
.P30     AIF   ('&R2' EQ '').P50
         LA    &R2,4095(&R1)
.P40     AIF   ('&R3' EQ '').P50
         LA    &R3,4095(&R2)
         AIF   ('&R4' EQ '').P50
         LA    &R4,4095(&R3)
.P50     ANOP
         AIF   ('&R1' EQ '').MEND
         AIF   ('&R1'(1,1) NE 'R').MEND
&L26REG  SETB  1
         MNOTE ' '
R0       EQU   0                  RESERVED
R1       EQU   1                  RESERVED ODER ADR.DER PARMLISTE
R2       EQU   2                  RESERVED
R3       EQU   3                  WORKREGISTER
R4       EQU   4                  WORKREGISTER
R5       EQU   5                  WORKREGISTER
R6       EQU   6                  WORKREGISTER
R7       EQU   7                  WORKREGISTER
R8       EQU   8                  WORKREGISTER
R9       EQU   9                  WORKREGISTER
R10      EQU   10                 WORKREGISTER ODER 4.BASISREGISTER
R11      EQU   11                 WORKREGISTER ODER 3.BASISREGISTER
R12      EQU   12                 WORKREGISTER ODER 2.BASISREGISTER
R13      EQU   13                 1.BASISREGISTER
R14      EQU   14                 BAL-REGISTER
R15      EQU   15                 RETURNCODE-REGISTER
         MNOTE ' '
GR0      EQU   0                  GLEITKOMMAREG. 0
GR2      EQU   2                  GLEITKOMMAREG. 2
GR4      EQU   4                  GLEITKOMMAREG. 4
GR6      EQU   6                  GLEITKOMMAREG. 6
.MEND    MNOTE ' '
         PRINT &GEN
         MEND
K1VIRT   CSECT
* PGM ZUM ERMITTELN DES VIRT. SPEICHERS  KN. APRIL 1982
         BEGINN R13
*
* HEADLINE
*
         L    R3,16                     A(CVT)
         L    R3,196(R3)                A(SMCA)
         MVC  HEAD+36(4),16(R3)         SID
*
         OSDATUM
         MVC  HEAD+24(8),0(R1)          DATUM
*
* OPEN OUTPUT
*
         OPEN  (PRINT,OUTPUT)
*
*
* VIRTUAL STORAGE AUS CVT
*
         L    R3,CVTPTR                 LOAD CVT
         USING CVT,R3
* NUCLEUS BOUNDARY
         L    R6,CVTNUCB
         BAL  R10,CONV
         MVC  CVT80+1(6),VIRT+1
* V=V BOUNDARY
         L    R6,CVTREAL
         BAL  R10,CONV
         MVC  CVT11C+1(6),VIRT+1
         MVC  CVT11C1+27(6),VIRT+1
* CSA BOUNDARY
         L    R6,CVTSHRVM
         BAL  R10,CONV
         MVC  CVT1A0+1(6),VIRT+1
         MVC  CVT1A01+27(6),VIRT+1
*
         L     R2,CVTGDA           AND TO GDA
         USING GDA,R2
         L     R4,CSAPQEP          POINT TO PQE OF CSA
         L     R7,20(,R4)          GET CSA SIZE
         SRL   R7,10               SWITCH TO UNITS OF K
         MH    R7,=H'10000'        SHIFT LEFT 4 UNITS
         SR    R0,R0               CLEAR FREE COUNTER
         LR    R5,R4
LOOPFBQE L     R5,0(,R5)           POINT TO NEXT FBQE
         CR    R5,R4               IS THIS END OF CHAIN
         BE    ENDFBQE             YES, CONTINUE BELOW
         A     R0,8(,R5)           NO, COUNT NUMBER OF BYTES
         B     LOOPFBQE            AND LOOP THROUGH FBQE'S
*
ENDFBQE  SRL   R0,10               SWITCH TO UNITS OF K
         AR    R7,R0
         CVD   R7,DW               AND PUT FREE COUNT
         ED    SIZE,DW+3               INTO LINE
         MVC   CSASIZ+22(11),SIZE
*
* LPA BOUNDARY
         SR   R6,R6
         ICM  R6,7,CVTLPDIR
         BAL  R10,CONV
         ST   R7,LPA
         MVC  CVT169+1(6),VIRT+1
* VIRT BOUNDARY
         L    R6,CVTMZ00
         BAL  R10,CONV2
         ST   R7,HIGHEST
         MVC  CVTA4+1(6),VIRT+1
         L     R4,CVTGDA           GDA ADDR
         L     R5,24(0,R4)         SQA SPQE
         L     R6,4(0,R5)          SQA DQE CHAIN START
*
DQESTART L     R12,12(0,R6)        LOAD FIRST DQE SIZE
         L     R7,4(0,R6)          NEXT DQE
*
DQELOOP  LTR   R7,R7               ANY MORE DQES
         BZ    CONT                NO, GO PRINT AND WAIT
         A     R12,12(0,R7)        ADD TO SQA SIZE
         L     R7,4(0,R7)          NEXT DQE ADDR
         B     DQELOOP             GO CHECK NEXT
CONT     LR   R6,R12
         BAL  R10,CONV
         ST   R7,SQA
         MVC  SQASIZ+27(6),VIRT+1
* LPA SIZE
         L    R6,HIGHEST
         S    R6,SQA
         S    R6,LPA
         CVD  R6,DW
         MVC  VIRT(7),=X'4020204B202120'
         ED   VIRT(7),DW+5
         MVC  LPASIZ+27(6),VIRT+1
* USER REG (CALCULATE)
         L    R6,CVTSHRVM
         L    R7,CVTREAL
         SR   R6,R7
         BAL  R10,CONV
         MVC  UREG+27(6),VIRT+1
*
* DISPLAY VIRTUAL STORAGE VIA WTO
*
         LA    R6,(TABEND-TABANF)/52
         LA    R7,TABANF
*
AA10     MVC   WTO+8(52),0(R7)
         BAL   R10,WTO
*
         LA    R7,52(R7)
         BCT   R6,AA10
*
*
*CLOSE PRINT
*
         CLOSE PRINT
         ENDE
*
WTO      WTO   '1234567890123456789012345678901234567890123456789012'
         MVC   DRUBER(52),WTO+8
         PUT   PRINT,DRUBER
         BR    R10
*
CONV     XC    DW,DW
         LA    R8,1024
         SRDA  R6,32
         DR    R6,R8
         CVD   R7,DW
         MVC   VIRT(7),=X'4020204B202120'
         ED    VIRT(7),DW+5
         BR    R10
*
CONV2    XC    DW,DW
         LA    R8,1024
         SRDA  R6,32
         DR    R6,R8
         LA    R7,1(,R7)
         CVD   R7,DW
         MVC   VIRT(7),=X'4020204B202120'
         ED    VIRT(7),DW+5
         BR    R10
*
DRUBER   DC    CL52' '
PRINT    DCB   DDNAME=PRINT,MACRF=(PM),RECFM=FB,BLKSIZE=520,LRECL=52,  *
               DSORG=PS
*
DW       DS    D
LPA      DC    F'0'
SQA      DC    F'0'
HIGHEST  DC    F'0'
VIRT     DC    C'ABCDEFG'
SIZE     DC    X'402020202020612020202020'
*
TABANF   EQU   *
HEAD     DC    CL52' VIRTUAL STORAGE LAYOUT XX.XX.XX    SSSS          '
         DC    CL52'                                                  '
CVTA4    DC    CL52' 00.000 K --> ×=======================×   BOUND.  '
         DC    CL52'              ×SYSTEM QUEUE AREA      ×           '
SQASIZ   DC    CL52'              ×            000000 K   ×           '
         DC    CL52'              ×-----------------------×--> 64K    '
         DC    CL52'              ×PAGEABLE LINK PACK AREA×           '
LPASIZ   DC    CL52'              ×            000000 K   ×           '
CVT169   DC    CL52' 00.000 K --> ×-----------------------×-->  4K    '
         DC    CL52'              ×MODIFIED LPA  (OPT.)   ×           '
         DC    CL52'              ×-----------------------×-->  4K    '
         DC    CL52'              ×PAG. BLDL TABLE (OPT.) ×           '
         DC    CL52'              ×-----------------------×-->  4K    '
         DC    CL52'              ×PSA              4 K   ×           '
         DC    CL52'              ×-----------------------×-->  4K    '
         DC    CL52'              ×COMMON SERVICE AREA    ×           '
CSASIZ   DC    CL52'              ×       00000000000 K   ×           '
         DC    CL52'              ×        TOTAL/FREE     ×           '
CVT1A0   DC    CL52' 00.000 K --> ×=======================×--> 64K    '
         DC    CL52'              ×LSQA U. SWA            ×           '
         DC    CL52'              ×-----------------------×           '
CVT1A01  DC    CL52'              ×V=V REGION  000000 K   ×           '
CVT11C1  DC    CL52'              ×         -  000000 K   ×           '
         DC    CL52'              ×         -----------   ×           '
UREG     DC    CL52'              ×         =  000000 K   ×           '
         DC    CL52'              ×                       ×           '
CVT11C   DC    CL52' 00.000 K --> ×-----------------------×-->  4K    '
         DC    CL52'              ×V=R  REGION            ×           '
         DC    CL52'              ×-----------------------×           '
         DC    CL52'              ×SYSTEM REGION   16 K   ×           '
CVT80    DC    CL52' 00.000 K --> ×=======================×--> 64K    '
         DC    CL52'              ×RMS NUC. EXTENSION     ×           '
         DC    CL52'              ×-----------------------×           '
         DC    CL52'              ×FIXED LPA    (OPT.)    ×           '
         DC    CL52'              ×-----------------------×           '
         DC    CL52'              ×FIXED BLDL   (OPT.)    ×           '
         DC    CL52'              ×-----------------------×           '
         DC    CL52'              ×NUCLEUS LOAD MODULE    ×           '
         DC    CL52'              ×                       ×           '
         DC    CL52'      0 K --> ×=======================×           '
         DC    CL52'                                                  '
         DC    CL52' CF. DEBUGGING HANDBOOK VOLUME 1 S. 5.69          '
TABEND   EQU   *
*
         CDMDSECT (CVT,GDA)
         END
