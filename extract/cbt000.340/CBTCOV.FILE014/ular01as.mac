         ISEQ  73,80
*        TITLE 'TAPE-TO-TAPE COPY PLUS PROFILE:  COPYT'               *
***********************************************************************
*                                                                     *
* COPYT: READ TAPE AND PRODUCE SELECTIVE PRINTOUT AND COPY ON DD      *
*        SYSUT2.  LOAD MODULE NAME IS P9900361.                       *
*                                                                     *
* PARM='P1P2P3,P4,P5,P6,P7' (N.B. P1-P3 HAVE NO SEPARATOR) WITH :     *
*                                                                     *
*    P1 = 'X' PRINT OF RECORD TO BE IN HEXADECIMAL. OTHERWISE PRINTED *
*             WITHOUT CONVERTION.                                     *
*             DEFAULT = 'C' FOR CHAR PRINT                            *
*                                                                     *
*    P2 = 'U' INDICATES RECORDS ARE OF UNDEFINED FORMAT AND NO PRINT  *
*             OF LENGTH OF RECORDS IS DONE, ONLY A COUNT.  OTHERWISE  *
*             FIXED LENGTH ASSUMED AND THE RECORD LENGTH IS PRINTED   *
*             DEFAULT = 'U'   I.E. UNDEFINED BLOCKS                   *
*                                                                     *
*    P3 = 'Y' RECORDS WITH PERMANENT ERRORS WILL BE PRINTED.          *
*             DEFAULT = 'N' FOR NO ERROR RECORD PRINT.                *
*                                                                     *
*    P4 = NUMBER OF RECORDS TO BE PRINTED PER FILE.  A FILE IS A SET  *
*         OF RECORDS BETWEEN TWO TAPE MARKS.                          *
*             DEFAULT = 2, THE MINIMUM IS  2.  THE COUNT IS INCREASED *
*             BY 1 FOR THE FIRST FILE TO ALLOW FOR THE TAPE LABEL.    *
*                                                                     *
*    P5 = NUMBER OF BYTES TO BE PRINTED FROM THE PRINTED RECORDS      *
*             DEFAULT = 80, MINIMUM IS 80 AND MAXIMUM IS 20600.       *
*                                                                     *
*    P6 = NUMBER OF TAPE MARKS TO BE READ BEFORE TERMINATION OF COPYT.*
*         IF THIS COUNT IS OMITTED OR EQUALS 0 THEN THE TAPE IS READ  *
*         UNTIL THE END OF TAPE (TWO CONSECUTIVE TAPE MARKS).         *
*             DEFAULT = 0                                             *
*                                                                     *
*    P7 = NUMBER OF PERMANENT ERRORS BEFORE TERMINATION OF COPYT.     *
*             DEFAULT = 3.                                            *
*                                                                     *
*    IF THE OUTPUT UCB HAS A VOL SER NO. OTHER THAN 'OUTPUT' THEN IT  *
*    IS SUBSTITUTED IN ALL VOL1, HDR1, EOF1 AND EOV1 RECORDS.         *
*                                                                     *
*         DEFAULT PARM LIST IS 'CUN,2,80,0,3'                         *
*                                                                     *
*    WHEN PRINTING WITH NO CONVERTION ANY UNPRINTABLE CHARACTER       *
*    WILL BE REPLACED WITH '*'                                        *
         EJECT
*                                                                     *
*    RETURN CODES :    0 = NO ERRORS ENCOUNTED                        *
*                      8 = ERROR IN INPUT TAPE  (RUN CONTINUES)       *
*                     12 = ERROR IN PARM FIELD   )                    *
*                     20 = INPUT RECORD TOO LONG ) RUN ENDS           *
*                     24 = ERROR ON OUTPUT TAPE  )                    *
*                                                                     *
*                                    B. HOUSLEY.    17.02.78          *
*    P.S. :                                                           *
*    BLOCK-SIZES OF > 32KB ARE ALSO POSSIBLE                          *
*    CURRENT BLKSIZE VALUE DEFINED IS : 40KB                          *
*                                                                     *
*        MODIFICATION DATE : 22.5.81                A.LAAGER          *
*                                                                     *
*    JCL         :                                                    *
*                                                                     *
*//DEF PROC CONV=C,TM=0,ERR=3,RF=U,P=2,L=100,EP=N,U1=T,VL1=INPUT,     *
*//             U2=T,VL2=OUTPUT,D=4,REG=512K,SC=D                     *
*//ST1 EXEC PGM=P9900361,PARM='&CONV&RF&EP,&P,&L,&TM,&ERR',REGION=&REG*
*//SYSPRINT  DD  SYSOUT=&SC,SPACE=(TRK,(100,50))                      *
*//SYSUT1  DD  UNIT=(&U1,,DEFER),VOL=SER=&VL1,DISP=OLD,LABEL=(,BLP)   *
*//SYSUT2 DD UNIT=(&U2,,DEFER),VOL=SER=&VL2,LABEL=(,BLP),DISP=(,KEEP),*
*//  DCB=DEN=&D                                                       *
*                                                                     *
*                                                                     *
* INSTALLATION  : F.HOFFMANN-LA ROCHE & CO. A.G. BASEL SWITZERLAND    *
***********************************************************************
         EJECT
COPYT    CSECT
         SAVE  (14,12),,*
         USING COPYT,R15
         LR    R2,R13
         LA    R13,SAVE
         ST    R2,4(,R13)
         ST    R13,8(,R2)
*
         B     L47
SAVE     DS    18F
RETW     DC    A(0)            REG 15 FOR RETURN
RETC     EQU   RETW+3          RETCODE POSITION
VCON     DC    V(COMM)
L47      EQU   *
         DROP  R15
         USING SAVE,R13
         L     R12,VCON
         USING COMM,R12
*
         L     R4,0(,R1)            POINT TO PARM LIST
         OPEN  MF=(E,OPEN)     OPEN ALL DATA FILES
         GETMAIN MF=(E,GETM)        GET THE SINGLE BUFFER
         L     R5,IOA+4             PICKUP LENGTH
         STH   R5,CCWL1             SET AS CCW LENGTH
         MVC   CCWS+1(3),IOA+1      SET ADDRESS OF BUFFER
         MVC   CCW3+1(3),IOA+1        INTO CCWS
* DECODE PARM LIST
*
         TIME
         ST    R1,DBL
         ED    H01,DBL+1
         ED    CDATE,DBL+1
         ST    R0,DBL
         ED    H02,DBL
         ED    CTIME,DBL
         LH    R3,0(,R4)
         SH    R3,=H'5'
         CLI   5(R4),C','
         BNE   PER
         MVC   CPCNL,2(R4)
         MVC   CRF,3(R4)
         CLI   4(R4),C'Y'
         BNE   L19
         OI    SWT1,EP1      SET TO PRINT ERROR RECORDS
         MVI   CMPP,C'P'
         MVC   EMSGF3,=C', RECORD FOLLOWS '
L19      LA    R5,6(,R4)     POINT TO VARIABLE FIELDS
         LA    R4,4        SET COUNT FOR FIELDS
         LA    R7,ADDL
*
* PARM STRING SEPERATE LOOP
L41      LR    R1,R5
         EX    R3,INST2
         BC    8,L45
         SR    R1,R5    CALC FIELD LENGTH
         BZ    L43      B IF NULL FIELD
         CH    R1,=H'5'
         BH    PER      ERROR IF FIELD > 4 CHARS
L42      L     R6,0(,R7)     SET PARM SAVE ADDR
         SR    R6,R1
         BCTR  R1,0        EX LNGTH = L-1
         EX    R1,INST3    MOVE PARM TO SAVE FIELD
         LA    R1,1(,R1)   ACTUAL LNGTH
L43      LA    R7,4(,R7)   BUMP ADDR LIST POINTER
         LA    R5,1(R1,R5)  RESET PARM LIST POINTER
         LA    R1,1(,R1)
         SR    R3,R1       SET NEW LENGTH
         BM    L44         B IF END OF PARM FIELD
         BCT   R4,L41      GO TO START OF SEPERATE LOOP
*
         SPACE 2
*  SET TAPE-MARK COUNT
L44      CLC   CMTM,=CL6' '
         BE    L32     B IF NO TM COUNT TO SET SCAN TO END
         PACK  DBL,CMTM
         CVB   R8,DBL     SET TM COUNT
         LTR   R8,R8
         BZ   L32     B IF TM COUNT=0 TO SET SCAN TO END
         SPACE 2
* SET MAXIMUM ERROR COUNT
L02      CLC   CMPE,=CL6' '
         BE    L24
         PACK  DBL,CMPE
         CVB   R9,DBL     SET MAX ERR CNT
         LTR   R9,R9
         BNZ   L03
L24      LA    R9,3       IF ZERO USE DEFAULT =3
         MVC   CMPE,=C'   3'
         SPACE 2
* SET MAXIMUM NUMBER OF RECORDS TO BE PRINTED
L03      CLC   CMRP,=CL6' '
         BE    L25
         PACK  DBL,CMRP
         CVB   R2,DBL     SET MAX RECS TO BE PRINTED
         C     R2,=F'2'
         BH    L04
L25      L     R2,=F'2'   IF LESS THAN MIN SET MIN = 2
         MVC   CMRP,=C'    2'
L04      ST    R2,SMPR
         SPACE 2
* SET LENGTH OF RECORD TO BE PRINTED
         CLC   CPRL,=CL6' '
         BE    L26
         PACK  DBL,CPRL
         CVB   R2,DBL     SETPPRINT LENGTH
         CH    R2,MAXPRT
         BNL   L05
L26      LH    R2,MAXPRT  IF < MIN SET MIN=80
         MVC   CPRL,MINPRTC
         B     L12
L05      EQU   *        PRT LRECL GE. 80 BYTES(P5)             LAA81167
         MVC   CCWL2+2(2),CCWL1     FULLWORD ALIGNMENT         LAA81167
         C     R2,CCWL2             PRINT SIZE                 LAA81167
         BNH   L06
         LH    R2,CCWL1    SET MAX PRINT SIZE
         MVC   CPRL,MAXPRTC
L06      STH   R2,MAXPRT     SAVE PRINT LENGTH
         SPACE 2
* SET TYPE OF PRINT, HEX OR CHAR
L12      CLI   CPCNL,C'X'
         BNE   L33
         OI    SWT1,SPCN1       INDICATE HEX PRINT
         SPACE 2
* INDICATE IF BLOCK LENGTH TO BE PRINTED FOR NOT PRINTED RECORDS
L33      CLI   CRF,C'F'
         BE    L07      B IF FIXED BLOCKS
         OI    SWT2,RFS    SET SWT2 FOR RECFM=U
         MVC   L2F3+1(25),L2F3
*
*  END DECODE OF PARMS
*
         EJECT
* INIT SEQUENCE
L07      LA    R2,DCB2          ADDR OF OUTPUT DATA TAPE
         USING IHADCB,R2
         TM    DCBOFLGS,X'10'      IS OUTPUT TAPE OPEN
         BZ    L08              NO SO END
         L     R3,DCBDEBAD      PICKUP ADDR OF DEB
         L     R3,32(,R3)       PICKUP ADDR OF UCB
         CLC   NELAB,28(R3)     IS OUTPUT VOL SER 'OUTPUT'
         BE    L57              B IF IT IS TO AVOID RELABEL OPTION
         OI    SWT1,RELAB       SET RELABELING ON
         MVC   CUNRL,=C'* NEW LABEL *'       SAY SO ON HEADING
         MVC   NELAB,28(R3)     SAVE VOL SER NUMBER OF OUTPUT
L57      MVC   CUN2,13(R3)      SET UNIT NAME INTO HEADING
         CLI   19(R3),X'01'     IS IT 2400 SERIES
         LA    R3,22(,R3)       ADJUST SENSE POINTER
         BE    *+8
         L     R3,2(,R3)        NO SO PICKUP EXTENDED SENSE ADDR
         ST    R3,ADDERR2       SAVE SENSE AREA ADDRESS
         CLI   DCBDEN,X'C3'        IS IT DEN=3 ON DD CARD ?
         BE    L50              B IF IT IS
         MVC   CDEN2,=C'6250'   ASSUME 6250 BPI
         BH    L50              IT IS DEN=4 (OR HIGHER !)
         MVC   CDEN2,=C'800 '      MUST BE DEN=2 OR LESS
*
L50      MVC   OPENFAIL+14(3),=C' IN'    SET MSG FOR INPUT TAPE
         LA    R2,DCB
         TM    DCBOFLGS,X'10'
         BZ    L08              B IF OPEN FAILED
*
         L     R3,DCBDEBAD      PICKUP ADDR OF DEB
         L     R3,32(,R3)       PICKUP ADDR OF UCB
         MVC   OLLAB,28(R3)     SAVE VOL SER OF OLD TAPE
         MVC   CUN1,13(R3)       SET UNIT NAME INTO HEADING
         CLI   19(R3),X'01'      IS IT 2400 SERIES
         LA    R3,22(,R3)        ADJUST SENSE POINTER
         BE    *+8               OK IT IS 2400
         L     R3,2(,R3)         3400 HAVE EXTRA SENSE AREA
         ST    R3,ADDERR1        SAVE SENSE AREA POINTER
         EXCP  IOB               CHECK INPUT TAPE AND UNIT IS OK
         WAIT  ECB=ECB
         CLI   ECB,X'7F'         WAS READ, SENSE, REWIND OK
         BE    L48               IF OK WE ARE THROUGH
         LA    R3,CCW2+8         IF NOT TRY SENSE AND REWIND
         ST    R3,IOBCPAD-1
         XC    ECB,ECB
         EXCP  IOB               TRY AGAIN
         WAIT  ECB=ECB
         CLI   ECB,X'7F'         SENSE AND REWIND SHOULD GO
         BE    L48               OK - PHEW !
         ABEND 100,DUMP          NO? SOMETHING VERY ODD WITH UNIT
*
L48      LA    R3,CCWS
         ST    R3,IOBCPAD-1        SET CCW ADDR FOR NORMAL READ
         TM    SNS+6,X'10'        -DEFAULT IS 1600BPI - IS IT RIGHT
         BZ    L01                 B IF IT IS OK
         MVC   CDEN1,=C'6250'      ASSUME 6250 BPI
         TM    SNS+6,X'08'         WOULD BE OK FOR MODEL 4,6 OR 8
         BO    L01                 IT IS ONE OF THOSE - SO OK
         MVC   CDEN1,=C'800 '      MODELS 3,5 AND 7 HAVE 800 BPI
*
L01      EXTRACT MF=(E,EXT)
         L     R1,CIBA
         LTR   R1,R1
         BZ    L38              B IF NO COMM AREA
         OI    SWT2,STS          INDICATE COMM AREA EXISTS
         L     R2,0(,R1)        ADDR OF ECB
         ST    R2,CIBA          SAVE ECB ADDR
         LA    R0,4(,R1)
         L     R1,4(,R1)
         LA    R1,0(,R1)
         LTR   R1,R1
         BZ    L38              B IF NO START CIB
         LNR   R1,R1
         SVC   34               FREE CIB
*
L38      L     R10,SMPR         SET RES TO BE PRINTED
         LA    R10,1(,R10)    ALLOW FOR LABEL IN FIRST FILE
         SR    R4,R4
         DROP  R2
*
         PUT   OUT,NEWPAGE         **   HEADING OUTPUT   **
         PUT   OUT,HDR0
         PUT   OUT,HDR1
         PUT   OUT,HDR2
         PUT   OUT,STAR
         SPACE 1
         TM    SNS+1,X'02'   IS INPUT TAPE FILE PROTECTED
         BO    L49           YES SO DO COPY
         WTOR  MF=(E,WTO)    NO - TELL OPERATOR
         ST    R3,ECB         RESET ECB
         WAIT  ECB=ECB       AND WAIT FOR REPLY
         CLI   RPLY,C'U'     IS O.K.
         BE    L49           YES - GO COPY
         PUT   OUT,ERRM3     NO SO SAY WHY AND
         B     L99            GO TO FINISH
L49      SR    R3,R3
         SPACE 1
         EJECT
*  MAIN PROGRAM SECTION:  READ TAPE LOOP
*
L10      TM    SWT2,STS
         BZ    L39       B IF NO COMM AREA
         L     R1,CIBA    ADDR OF ECB
         TM    0(R1),X'40'
         BO    L40       B IF STOP GIVEN
*
L39      SR    R2,R2
         ST    R2,ECB
         NI    IOB,X'FB'
         STH   R2,IOBSNS
         ST    R2,IOBCSW2      SETUP IOB
         EXCP  IOB
         WAIT  ECB=ECB
         CH    R2,IOBCSW3     IS RESIDUAL COUNT ZERO
         BE    L51            B IF YES TO SAY NO-GO
         MVC   CCWL2+2(2),CCWL1                                LAA81167
         L     R11,CCWL2                                       LAA81167
         MVC   IOBFCSW+2(2),IOBCSW3                            LAA81167
         S     R11,IOBFCSW                                     LAA81167
         C     R11,MAXREC        IS THIS ONE LARGER THAN MAX
         BNH   *+8               NO, SO KEEP OLD MAX
         ST    R11,MAXREC        SAVE NEW MAX RECL
         CLI   ECB,X'7F'
         BNE   L11         B IF ABNORMAL END TO I/O OP
L09      STH   R11,CCWL3
         L     R6,IOA      SET BUFFER POINTER
         BAL   R14,SR2                  ***  WRITE TO OUTPUT TAPE  ***
         NI    SWT1,ES2R    SET TM INDICATE OFF
         LTR   R10,R10
         BZ    L13       B IF MAX RECS PRINTED FOR THIS FILE
         BCTR  R10,0
         C     R11,=F'80'                                      LAA81167
         BNE   L35         B IF NOT LABEL LENGTH
         CLC   =C'EOV',0(R6)     IS IT AN E0V LABEL
         BNE   L35         B IF NOT EOV LABEL
         OI    SWT1,EOV     INDICATE EOV LABEL READ
L35      LR    R7,R11      SET PRINT LNGTH =RECL
         CH    R7,MAXPRT
         BNH   L14    B IF NOT > MAX PRINT LNGTH
         LH    R7,MAXPRT
L14      MVC   LF3,=C'RECORD LENGTH ='
         MVC   LF4,=X'4020202020202120'
         CVD   R11,DBL
         ED    LF4,DBL+4
*
         TM    SWT1,SPCN1
         BO    L15            B IF HEX PRINT REQUEST
         LA    R5,K1
L16      SR    R7,R5
         BNM   L17        B IF NOT LAST TIME
         MVI   LF1,C' '
         MVC   LF1+1(79),LF1    BLANK LINE
         AR    R5,R7
L17      LR    R1,R5
         BCTR  R1,0
         EX    R1,INST1
         MVI   CNTL,X'09'
         TR    LF1,TRANT
         PUT   OUT,LINE
         MVC   LF3(23),LF3-1    BLANK TEXT
         LA    R6,0(R6,R5)
         LTR   R7,R7
         BH    L16
L31      PUT   OUT,SKIP
         TM    SWT1,EP2
         BO    L36           B IF PRINTING ERROR REC
         B     L10
*  OPEN FAIL
L08      PUT   OUT,OPENFAIL
         B     L99
*
         EJECT
*  CODE TO DEAL WITH UNUSUAL END TO EXCP
*
L11      TM    IOBCSW2,X'01'
         BZ    L20     B IF NOT EXEPT END, I.E. NOT TM
         BAL   R15,SR1   PRINT NO OF RECS IF NECC
         PUT   OUT,SKIP
         PUT   OUT,TPMK     WRITE THAT TM READ
L58      MVC   IOB2CA,=AL3(CCW4)
         BAL   R14,SR3             GOTO WRITE OUT ONLY
         MVC   IOB2CA,=AL3(CCW3)      RESET TO DATA WRITE
         TM    SWT1,ES12
         BO    L99      EXIT IF 2 CONSEC TMS
         TM    SWT1,EOVT
         BO    L46         B IF 'READ-TO-END' AND EOV READ
         OI    SWT1,ES2
         L     R10,SMPR   RESET RECS TO PRINT
         BCT   R8,L10     B IF MAX TMS NOT READ
         MVC   PFL,REASON4       SET REASON = MAX TMS READ
*
*
*   END OF CURRENT REQUEST
*
*****    END OF PROGRAM    *****
*
L99      PUT   OUT,SKIP
         L     R2,MAXREC         CONV MAX RECL READ
         CVD   R2,DBL
         ED    ERQF1,DBL+5
         PUT   OUT,ERQ             WRITE TERMINATION MSG
*
*   WRITE OUT AUDIT TRAIL    - HIHI
         NI    ENDSWT,X'0F'            SAY NO ERROR MSGS
         L     R6,IOA
         MVC   0(30,R6),OLLAB
         MVC   30(2,R6),ERQF2          SET RETURN CODE IN AUDIT RECORD
         LA    R11,32
         STH   R11,CCWL3
         MVI   CCW3+4,X'60'             MAKE TO CHAIN
         BAL   R14,SR3          **  WRITE OUT **
         SPACE 2
         CLOSE MF=(E,OPEN)        CLOSE ALL FILES
*
         FREEMAIN MF=(E,GETM)
         L     R15,RETW           SET RETURN CODE
         L     R13,4(,R13)
         RETURN (14,12),RC=(15)
*
         EJECT
*   PRINT ERROR DETAILS
*
L20      TM    IOBCSW2,X'02'
         BO    L27          B  UNIT CHECK
         TM    IOBCSW2+1,X'40'
         BO    L09          B IF LENGTH ERROR TO ACCEPT
L27      BAL   R15,SR1     PRINT NO OF RECS IF NECC
         NI    SWT1,ES2R    SET TM INDICATE OFF
         UNPK  EMSGF1,IOBCSW1(8)
         TR    EMSGF1(14),TAB
         MVI   EMSGF1+14,C','
         L     R1,ADDERR1
         UNPK  EMSGF2,0(7,R1)
         TR    EMSGF2(12),TAB
         MVI   EMSGF2+12,C','
         MVC   EMSGF4,=X'402020202120'
         CVD   R11,DBL
         ED    EMSGF4,DBL+5     SET NO. BYTES READ
         PUT   OUT,SKIP
         PUT   OUT,ERRMSG
         PUT   OUT,NEWMSG1
         MVI   RETC,8
         MVI   ERQF2+1,C'8'
         TM    SWT1,EP1
         BNO   L37       B IF NO ERROR PRINT REQ
         OI    SWT1,EP2
         B     L09
L36      NI    SWT1,EP2F
L37      TM    IOBSNS,X'50'
         BO    L23       B IF TAPE UNIT NOT READY
         BCT   R9,L10    B IF MAX ERRORS NOT READ
L59      OI    SWT1,ES12         PRETEND A TM WAS READ
         B     L58               GO WRITE A TAPE MARK
*
* PRINT RECORD SUMMARY
*
L13      TM    SWT1,EP2
         BO    L35       B IF ERROR PRINT REQ
         LTR   R4,R4
         BZ    L21
         TM    SWT2,RFS
         BO    L22     B IF RECFM=U
         CR    R11,R3
         BE    L22    B IF LRECL SAME AS PREV
         BAL   R15,SR1     PRINT PREV RECS READ
L21      LA    R4,1     SET REC COUNT
         LR    R3,R11      SET PREV RECL
         B     L10
*
L40      MVC   PFL,REASON1
         BAL   R15,SR1            PRINT OUT WHAT HAS BEEN READ
         B     L59
*
L46      MVC   PFL,REASON2
         B     L99
*
L22      LA    R4,1(,R4)    BUMP REC COUNT
         B     L10
*
L23      MVC   PFL,REASON3
         B     L59
*
*   PRINT HEX RTN
*
L15      MVI   CNTL,X'09'
L30      LA    R1,LF6
         LA    R15,8
         MVI   LF6,C' '
         MVC   LF6+1(80),LF6
L28      UNPK  0(9,R1),0(5,R6)
         MVI   8(R1),C' '
         TR    0(8,R1),TAB
         LA    R1,9(,R1)
         LA    R6,4(,R6)
         S     R7,=F'4'
         BM    L18
         BZ    L29
         BCT   R15,L28
L29      PUT   OUT,LINE
         MVC   LF3(23),LF3-1   BLANK TEXT
         LTR   R7,R7
         BH    L30
         B     L31
*
*  SET FOR PROCESS TO END
*
L32      OI    SWT1,ES1       INDICATE PROCESS TO END
         L     R8,=F'999999'  SET MAX TM  COUNT
         MVC   HDF1,HDF1K     SET READ TO END TEXT
         B     L02
*
*
L18      AR    R1,R7
         AR    R1,R7
         BCTR  R1,0        CALC EXTRA BYTES TO BE BLANKED
         MVC   0(6,R1),=CL6' '
         B     L29
*
L45      LA    R1,1(,R3)    SET COUNT FOR END OF PARM STRING
         B     L42
*
PER      MVC   PFL,REASON5       MSG FOR PARM ERROR
         MVI   RETC,12
         MVC   ERQF2,=C'12'
         B     L99
*
L51      BAL   R15,SR1
         PUT   OUT,NEWMSG4
         WTO   MF=(E,LOM)
         MVI   RETC,20
         MVC   ERQF2,=C'20'
         B     L59
         EJECT
*   SR TO PRINT NO OF RECORDS READ WITH LRECL
*
SR1      LTR   R4,R4
         BCR   8,R15     RETURN IF NO RECS
         LR    R2,R15   SAVE RTN ADDR
         CVD   R4,DBL
         MVC   L2F1,=X'4020202020202120'
         ED    L2F1,DBL+4
         TM    SWT2,RFS
         BO    L34     B IF RECFM=U
         MVC   L2F2,=X'4020202020202120'
         CVD   R3,DBL
         ED    L2F2,DBL+4
L34      PUT   OUT,LINE2
         SR    R3,R3
         SR    R4,R4
         BR    R2
         SPACE 3
* WRITE TO OUTPUT TAPE
*                   R6 POINTS TO AREA, R11 HAS LENGTH OF RECORD.
SWT3     EQU   *+1           FIRST TIME THROUGH SWITCH
SR2      NOP   L53
SWT4     EQU   *+1
         NOP   L56
         MVI   SWT4,X'F0'    SET SO NOT 1ST. TIME
         CLC   =C'VOL1',0(R6)
         BNE   L55           B IF NOT SL TAPE
         C     R11,=F'80'                                      LAA81167
         BNE   L55           B IF NOT SL TAPE
         MVC   OLLAB,4(R6)        SAVE BETTER OLD TAPE I.D.
         TM    SWT1,RELAB         IS NEW LABEL REQUESTED
         BNO   *+10               B IF IS IS NOT  UESTED
         MVC   4(6,R6),NELAB      SET NEW SERIAL NUMBER
         MVC   41(10,R6),CTXT     SET COPYT STAMP
         B     L52
L56      OI    SWT1,ES2       PRETEND THAT THERE HAS BEEN A TM
L55      MVI   SWT3,X'F0'     SET TO SAY NO PREVIOUS VOL1 REC
L53      TM    SWT1,RELAB+ES2     SERIAL WORK PLUS TM JUST READ ?
         BNO   L52
         CLI   3(R6),C'1'
         BNE   L52
         C     R11,=F'80'                                      LAA81167
         BNE   L52
         CLC   =C'HDR',0(R6)
         BE    L54
         CLC   =C'EOF',0(R6)
         BE    L54
         CLC   =C'EOV',0(R6)
         BNE   L52
L54      MVC   21(6,R6),NELAB
*
SR3      EQU   *
L52      STM   14,2,SR2SV
         SR    R2,R2
         ST    R2,ECB2
         NI    IOB2,X'FB'
         STH   R2,IOB2SNS
         ST    R2,IOB2C2
         EXCP  IOB2
         WAIT  ECB=ECB2
         CLI   ECB2,X'7F'
ENDSWT   EQU   *+1                SWITCH TO STOP ERROR MESSAGE
         BNE   SR2L1
         LM    14,2,SR2SV
         BR    R14
*
SR2L1    BAL   R15,SR1            WRITE OUT HOW MANY REC PROCESSED
         PUT   OUT,NEWMSG2
         UNPK  NMF1,IOB2C1(8)
         TR    NMF1(14),TAB
         MVI   NMF1+14,C' '
         L     R1,ADDERR2
         UNPK  NMF2,0(7,R1)
         TR    NMF2(12),TAB
         MVI   NMF2+12,C' '
         PUT OUT,NEWMSG3
         MVI   RETC,24
         MVC   ERQF2,=C'24'
         B     L99
*
SR2SV    DS    5F
         EJECT
* CONSTANTS AND EQUATES
COMM     CSECT
*
DBL      DS    D
         LTORG
SMPR     DS    F      SAVE MPR
SPRL     DS    F      LNGTH REC TO BE PRINTED
MAXREC   DC    F'0'       MAX RECL READ
OPEN     OPEN  (DCB,(INPUT),DCB2,(OUTPUT),OUT,(OUTPUT)),MF=L
EXT      EXTRACT CIBA,FIELDS=COMM,MF=L
CIBA     DC    A(0)
         PRINT NOGEN
DCB      DCB   DDNAME=SYSUT1,MACRF=(E),DEVD=TA
DCB2     DCB   DDNAME=SYSUT2,MACRF=(E),DEVD=TA
OUT      DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,RECFM=FM,          **
               LRECL=133,BLKSIZE=133
         PRINT GEN
LINE     DS    0CL133
CNTL     DC    X'09'
LF1      DC    CL80' '
LF2      DC    CL5' '
LF3      DC    CL15' '      FOR TEXT
LF4      DC    CL8' '           MASK
LF5      DC    CL24' '
         ORG   LF1
LF6      DS    5CL16
         ORG
K1       EQU   80
K2       EQU   40         CHARS/LINE FOR=HEX
*
HDR0     DC    X'11'
         DC    C'****   RZ  ROCHE  -  COPY-TAPE UTILITY  -  V81.169 '
         DC    CL45' '
         DC    C'DATE :'
H01      DC    X'40212061202020'
         DC    C',   TIME :'
H02      DC    X'4021204B2020'
         DC    C'   ****'
LHDR0    EQU   *-HDR0               LENGTH OF RECORD
*
*  HEADER FOR REQUEST
HDR1     DC    X'11'
         DC    C'****       PRINT '
HDF1     DS    0CL16
CMTM     DC    CL5' '
         DC    C' TAPE MARKS,   ERROR COUNT = '
CMPE     DC    CL5' '
CMPP     DC    C' '
         DC    C',   CONV = '
CPCNL    DC    C'C'
         DC    C',   PRINT '
CPRL     DC    CL5' '
         DC    C' BYTES OF 1ST. '
CMRP     DC    CL5' '
         DC    C' RECORDS PER FILE       ****'
LHDR1    EQU   *-HDR1             LENGTH OF HDR1
*
HDR2     DC    X'11'
         DC    C'****       INPUT :  UNIT = '
CUN1     DC    CL3' '
         DC    C',   DENSITY = '
CDEN1    DC    C'1600'
         DC    CL11' BPI.'
CUNRL    DC    CL13' '
         DC    C'      OUTPUT :  UNIT = '
CUN2     DC    C'XXX'
         DC    C',   DENSITY = '
CDEN2    DC    C'1600'
         DC    C' BPI.       ****'
LHDR2    EQU   *-HDR2           LENGTH OF RECORD HDR2
*
HDF1K    DC    CL16' TO END OF TAPE '
*
CRF      DS    CL1
*
ERRM3    DC    X'11'
         DC    CL132'INPUT TAPE NOT FILE PROTECTED - RUN TERMINATED'
*
         EJECT
*  TRANS TAB FOR HEX CONVERTION
         ORG   *-240
TAB      DS    XL240
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
*
ADDL     DC    A(CMRP+5)
         DC    A(CPRL+5)
         DC    A(CMTM+5)
         DC    A(CMPE+5)
*
TABLE    DC    107X'00'
         DC    X'04'     COMMA
         DC    148X'00'
*
GETM     GETMAIN VU,LA=LA,A=IOA,MF=L
*
WTO      WTOR  'INPUT TAPE NOT FILE PROTECTED, REPLY U TO CONTINUE',  **
               RPLY,1,ECB,MF=L
*
LA       DC    A(80)     MIN CORE REQUEST
         DC    A(40960)        MAX CORE REQUEST(40 KB)         LAA81167
IOA      DC    2A(0)     GETMAIN REPLY AREA
*
SNS      DC    XL24'00'  SENSE FROM INPUT TAPE
*
RPLY     DC    CL1' '    OPERATOR RESPONSE
*
         SPACE 2
* DEF IOB
         CNOP  0,4
IOB      DC    B'10000010'
         DC    AL1(0)
IOBSNS   DC    AL2(0)
IOBECBCD DC    XL1'00'
IOBECBAD DC    AL3(ECB)
IOBFLG3  DC    XL1'00'
IOBCSW1  DC    AL3(0)     COMMAND ADDR
IOBCSW2  DC    AL2(0)     STATUS
IOBCSW3  DC    AL2(0)     BYTE COUNT
IOBSIO   DC    XL1'00'
IOBCPAD  DC    AL3(CCW2)
         DC    XL1'00'
IOBDCB   DC    AL3(DCB)
         DC    A(0)
IOBBLKCI DC    AL2(1)
IOBERRC  DC    AL2(0)
*
ADDERR1  DS    A
* IOB2
         CNOP  0,4
IOB2     DC    B'10000010'
         DC    AL1(0)
IOB2SNS  DC    AL2(0)
         DC    XL1'00'
         DC    AL3(ECB2)
         DC    XL1'00'
IOB2C1   DC    AL3(0)
IOB2C2   DC    AL2(0)
IOB2C3   DC    AL2(0)
         DC    XL1'00'
IOB2CA   DC    AL3(CCW3)
         DC    XL1'00'
         DC    AL3(DCB2)
         DC    A(0)
         DC    AL2(1)
         DC    AL2(0)
*
ADDERR2  DS    A
*
         SPACE 2
*  CCW FOR READING INPUT TAPE
CCWS     CCW   2,0,X'20',*-*
         ORG   CCWS+6
CCWL1    DS    H
         ORG
         SPACE 2
*  CCWS TO READ INPUT TAPE (DATA SUPR), SENSE AND REWIND.
CCW2     CCW   2,SNS,X'70',24            READ NO DATA
         CCW   4,SNS,X'60',24            READ 24 SENSE BYTES
         CCW   7,0,X'20',1
         SPACE 2
*  CCW TO WRITE TO OUTPUT TAPE
CCW3     CCW   X'01',0,X'20',80
         ORG   CCW3+6
CCWL3    DS    H
         ORG
         SPACE 2
*   CCW TO WRITE TAPE MARK TO OUTPUT TAPE
CCW4     CCW   X'1F',0,X'20',2          WRITE TM
ECB      DC    F'0'
ECB2     DC    F'0'
MAXPRT   DC    H'80'
CCWL2    DC    F'0'                                            LAA81167
IOBFCSW  DC    F'0'                                            LAA81167
* THIS VALUE ALSO DEFINES THE DEFAULT MINIMUM
MINPRTC  DC    C'   80'
MAXPRTC  DC    C'20600'
*   MISC CONSTANTS
*
SWT1     DC    BL1'0'        **  SWITCHES  **
*
SPCN1    EQU   X'80'        ON IF HEX PRINT REQUESTED
ES1      EQU   X'40'        ON IF PROCESSING TO END-OF-TAPE
ES2      EQU   X'20'        ON IF LAST READ READ A TAPE MARK
ES12     EQU   X'60'        TEST ES1 AND ES2 TOGETHER
ES2R     EQU   X'DF'        RESET TM READ SWITCH, ES2
*        EQU   X'10'        ***
EP1      EQU   X'08'        ON IF REQUEST TO PRINT ERROR RECORDS
EP2      EQU   X'04'        ON DURING PRINT OF ERROR RECORD
EP2F     EQU   X'FB'        RESET EP2
EOV      EQU   X'02'        ON IF EOV LABEL HAS BEEN READ
EOVT     EQU   X'42'        TEST READ-TO-END AND EOV READ TOGETHER
RELAB    EQU   X'01'        ON IF SERIAL NO. SUBSTN. REQUESTED
*
SWT2     DC    BL1'0'
*
RFS      EQU   X'80'        ON IF RF=U SPECIFIED
STS      EQU   X'40'        ON IF CIB AREA PRESENT
         SPACE 2
*  INFO FOR OUTPUT TAPE
OLLAB    DS    CL6             OLD VOL SERIAL NUMBER
         DC    C' COPYTO '
NELAB    DC    C'OUTPUT'       NEW VOL SERIAL NUMBER
CTXT     DC    C'C'
CDATE    DC    X'2120202020'
CTIME    DC    X'21202020'
         SPACE 2
*   END MESSAGES
REASON1  DC    CL20'STOP FROM CONSOLE   '
REASON2  DC    CL20'EOV LABEL READ      '
REASON3  DC    CL20'TAPE NO LONGER READY'
REASON4  DC    CL20'MAX TAPE MARKS READ '
REASON5  DC    CL20'EXEC PARM IS INVALID'
         SPACE 2
NEWPAGE  DC    X'8B'
INST1    MVC   LF1(0),0(R6)
INST2    TRT   0(0,R5),TABLE
INST3    MVC   0(0,R6),0(R5)
SKIP     DC    X'0B'
LINE2    DC    X'11'
L2F1     DS    CL8
         DC    C' RECORDS HERE'
L2F3     DC    C' OF LENGTH'
L2F2     DS    CL8
         DC    CL93' BYTES.'
*
TPMK     DC    X'19'
         DC    10C'*  '
         DC    C'     TAPE   MARK     '
         DC    27C'  *'
*
ERQ      DC    X'89'
         DC    25C'*'
         DC    C'     END OF CURRENT REQUEST, MAX REC ='
ERQF1    DC    X'402020202120'
         DC    C', RC = '
ERQF2    DC    C'00'
         DC    CL5' '
         DC    25C'*'
         DC    CL4' '
PFL      DC    CL20'TWO CONSECUTIVE TMS '
         DC    CL1' '
*
ERRMSG   DC    X'11'
         DC    C'PERMANENT ERROR: CSW = '
EMSGF1   DS    CL15
         DC    C' SENSE = '
EMSGF2   DS    CL13
         DC    C' BYTES READ ='
EMSGF4   DS    CL6
EMSGF3   DC    CL17' ****************'
         DC    36C'*'
*
OPENFAIL DC    X'17'
         DC    CL132' CANNOT OPEN OUT TAPE FILE,  REQUEST IGNORED'
*
STAR     DC    X'19'
         DC    66C'* '
NEWMSG1  DC    X'19'
         DC    C'OUTPUT TAPE NOW MISSING THIS RECORD '
         DC    48C' *'
NEWMSG2  DC    X'19'
         DC    C'ERROR ON OUTPUT TAPE - RUN TERMINATED  '
         DC    93C'*'
NEWMSG3  DC    X'19'
         DC    C'CSW = '
NMF1     DS    CL15
         DC    C', SENSE = '
NMF2     DS    CL13
         DC    C'.  '
         DC    85C'*'
NEWMSG4  DC    X'19'
NM4F     DC    C'*****     INPUT RECORD TOO LONG FOR PROGRAM - RERUN IN*
                LARGER REGION     '
         DC    (132-L'NM4F)C'*'
*
LOM      WTO   '*COPYT INPUT RECORD TOO LARGE - RE-RUN IN LARGER REGION*
               *',MF=L
*
         EJECT
*  TABLE TO REPLACE UNPRINTABLE CHARS WITH '*'
*
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
TRANT    DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  0
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  1
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  2
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  3
         DC    X'405C5C5C5C5C5C5C5C5C5C4B4C4D4E4F'  4
         DC    X'505C5C5C5C5C5C5C5C5C5C5B5C5D5E5F'  5
         DC    X'60615C5C5C5C5C5C5C5C5C6B6C6D6E6F'  6
         DC    X'5C5C5C5C5C5C5C5C5C5C7A7B7C7D7E7F'  7
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  8
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  9
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  A
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'  B
         DC    X'5CC1C2C3C4C5C6C7C8C95C5C5C5C5C5C'  C
         DC    X'5CD1D2D3D4D5D6D7D8D95C5C5C5C5C5C'  D
         DC    X'5C5CE2E3E4E5E6E7E8E95C5C5C5C5C5C'  E
         DC    X'F0F1F2F3F4F5F6F7F8F95C5C5C5C5C5C'  F
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
*
*
         SPACE 2
ENDPROG  EQU   *
         SPACE 2
         PRINT NOGEN
         DCBD  DSORG=BS,DEVD=TA
*   DEFINE REGS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2         WORKING
R3       EQU   3         PREVIOUS LRECL
R4       EQU   4         REC COUNT
R5       EQU   5         LINE COUNT IN PRINT
R6       EQU   6         IOA PRINT POSN POINTER
R7       EQU   7         PRINT COUNT
R8       EQU   8   MTM     MAX TAPE-MARK COUNT
R9       EQU   9   MPE     MAX PERM ERRORS
R10      EQU   10  MRP     MAX RECS TO BE PRINTED PER FILE
R11      EQU   11        LENGTH OF CURRENT RECORD
R12      EQU   12        BASE FOR MAIN PROGRAMM
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*
         END   COPYT
