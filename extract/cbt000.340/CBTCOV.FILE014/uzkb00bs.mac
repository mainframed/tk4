* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        MODULE NAME =  STDDINIT                                      *
*                                                                     *
*        DESCRIPTIVE NAME =  STRESS TEST FOR DASD DEVICES,            *
*                            INITIALISATION MODULE                    *
*                                                                     *
*        AUTHOR : M.BURKHARDT                                         *
*                 ZUERCHER KANTONALBANK                               *
*                 DEPT. EDV - SE                                      *
*                 P.O.BOX                                             *
*                 CH 8022 ZUERICH                                     *
*                                                                     *
*                 PHONE : 01/275 71 11  EXT. 7149                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CREATION DATE 05. AUGUST 1983                                *
*                                                                     *
*        FUNCTION =  DASD-SPACE INITIALISATION FOR USE BY STDDEXEC    *
*                                                                     *
*        NOTES =  FOR USE OF DEVTYPE MACRO SEE:                       *
*                                                                     *
*                 OS/VS2 SYSTEM PROGRAMMING LIRARY: DATA MANAGEMENT   *
*                                                                     *
*                                                                     *
*        MODULE TYPE = CSECT                                          *
*                                                                     *
*        PROCESSOR = ASM                                              *
*                                                                     *
*        ENTRY POINTS =  SINGLE ENTRY POINT                           *
*                                                                     *
*        CALLS TO OTHER ROUTINES =  NONE                              *
*                                                                     *
*        REGISTER CONVENTIONS = STANDARD CONVENTIONS                  *
*                                                                     *
*           REGISTER  0        = UNUSED                               *
*           REGISTER  1        = WORK                                 *
*           REGISTER  2        = WORK                                 *
*           REGISTER  3        = UNUSED                               *
*           REGISTER  4        = WORK                                 *
*           REGISTER  5        = WORK                                 *
*           REGISTER  6        = WORK                                 *
*           REGISTER  7        = WORK, POINTER TO DCB                 *
*           REGISTER  8        = WORK                                 *
*           REGISTER  9        = WORK, POINTER TO DEB DA SECTION      *
*           REGISTER  10       = WORK                                 *
*           REGISTER  11       = BASE REGISTER                        *
*           REGISTER  12       = UNUSED                               *
*           REGISTER  13       = SAVE AREA POINTER                    *
*           REGISTER  14       = RETURN REGISTER                      *
*           REGISTER  15       = RETURN CODE                          *
*                                                                     *
*                                                                     *
*        OPERATION =                                                  *
*                    THIS PROGRAM INITIALIZES A CONTIGUOUS SPACE      *
*                    STARTING AND ENDING ON CYLINDER BOUNDARIES       *
*                    WITH A TEST PATTERN OF (X'AA').                  *
*                    THE LENGTH OF THE BLOCK WRITTEN IS FULL TRACK.   *
*                    THE FIRST 4 BYTES ARE USED AS COUNTER FOR        *
*                    PROGRAM STDDEXEC.                                *
*                    THE SECOND 4 BYTES CONTAIN THE RELATIVE          *
*                    TRACK NUMBER.                                    *
*                                                                     *
*                    IF SPACE IS NOT ALLOCATED ON CYL. BOUNDARIES     *
*                    THE PROGRAM WORKS AS FOLLOWS:                    *
*                    SPACE-ALLOC: CC:A/HH:B    TO  CC:C/HH:D          *
*                    FIRST CYL:   CC:A/HH:B    TO  CC:A/HH:D          *
*                    NEXT CYLS:   CC:(A+N)/00  TO  CC:(A+N)/HH:D      *
*                                 N = 1 TO (C-A)                      *
*                                                                     *
*                    NO ERROR RECOVERY IS DONE. IN CASE OF AN         *
*                    I/O-ERROR THE PROGRAM TERMINATES WITH A          *
*                    SNAP-DUMP (ID=02) OF THE RELEVANT CONTROL        *
*                    BLOCKS AND A RETURN CODE OF 4.                   *
*                                                                     *
*        ENTRY POINT =  STDDINIT                                      *
*                                                                     *
*           PURPOSE =   SEE UNDER 'OPERATION'                         *
*                                                                     *
*           LINKAGE =   STANDARD LINKAGE CONVENTIONS                  *
*                                                                     *
*           INPUT   =   NONE                                          *
*                                                                     *
*           OUTPUT  =   ON DD-NAMES SYSUT2 AND SNAP                   *
*                                                                     *
*           EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14     *
*                           RETURN - CODE IN REGISTER 15              *
*                                                                     *
*                                                                     *
*                                                                     *
*        RETURN CODES =                                               *
*                00 = NORMAL RETURN                                   *
*                   04 = PERMANENT I/O-ERROR                          *
*                   08 = SPACE NOT IN ONE CONTIGUOS EXTEND            *
*                                                                     *
*        TABLES = NONE                                                *
*                                                                     *
*        EXTERNAL - REFERENCES = NONE                                 *
*                                                                     *
*        MACROS = SAVE,RETURN,OPEN,CLOSE,DEVTYPE,EXCP,DCB             *
*                                                                     *
*        CONTROL BLOCKS = IOB                                         *
*                                                                     *
*        MESSAGES = NONE                                              *
*                                                                     *
*        ABEND CODES = NONE                                           *
*                                                                     *
*        CHANGE ACTIVITY = NONE                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT ON,NOGEN
STDDINIT CSECT
         SAVE  (14,12),,STDDINIT&SYSDATE.__&SYSTIME    SAVE REGISTERS
*---------------------------------------------------------------------*
*        EQUATES                                                      *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
DCBOFOPN EQU   X'10'                   OPEN BIT
DCBTRBAL EQU   18                      OFFSET TO TRACK BALANCE FIELD
DCBFDAD  EQU   5                       OFFSET TO MBBCCHHR
DCBDEBAD EQU   44                      ADDR OF DEB IN DCB
DCBDDNAM EQU   X'28'                   OFFSET TO DDNAME
DCBOFLGS EQU   48                      OFFSET TO OPENFLAGS
DEBDASEC EQU   32                      OFFSET OF DA SECTION
DEBSTRCC EQU   6                       START CCHH
DEBENDCC EQU   10                      END   CCHH
DEBNMEXT EQU   16                      OFFSET TO # OF EXTENDS
         EJECT
         BALR R11,0
         USING *,R11                   SET UP BASE ADDRESSABILITY
         ST    R13,SAVE+4              SAVE CALLER'S SAVE AREA ADDR
         LR    R10,R13
         LA    R13,SAVE                LOAD SAVE AREA ADDRESS
         ST    R13,8(R10)              SAVE MY SAVE AREA ADDRESS
         B     BEG
SAVE     DS    9D
BEG      DS    0H
         EJECT
*---------------------------------------------------------------------*
*        INIT THE OUTPUT RECORD TO X'AA'                              *
*        AND SET THE FIRST TWO WORDS TO ZERO                          *
*---------------------------------------------------------------------*
         MVI   IOAREA1,X'AA'
         LA    R6,IOAREA1
         L     R7,LOUT
         SR    R8,R8
         LR    R9,R8
         ICM   R9,B'1000',IOAREA1
         MVCL  R6,R8
         SR    R1,R1
         ST    R1,IOAREA1              SET FIRST TWO
         ST    R1,IOAREA1+4                WORDS OF RECORD TO ZERO
*---------------------------------------------------------------------*
*        PICK UP DEVICE CHARACTERISTICS                               *
*---------------------------------------------------------------------*
         LA    R4,SYSUT2               LOAD ADDR OF DCB
         MVC   DDN1,DCBDDNAM(R4)       PICK UP DDNAME
         DEVTYPE DDN1,DDW1,DEVTAB,RPS
*---------------------------------------------------------------------*
*        CALCULATE MAX BLKSIZE                                        *
*---------------------------------------------------------------------*
         TM    DDW14+1,X'10'           IS BIT 3 BYTE 1 WORD 4 ON ?
         BO    LX00                    YES, MODULO DEVICE
*---------------------------------------------------------------------*
*        THIS IS NOT A 3375 OR 3380, SO THE TRACK CAPACITY            *
*        IS LESS THEN THE MAX BLOCKSIZE ALLOWED BY THE OS             *
*---------------------------------------------------------------------*
         L     R4,DDW11                LOAD MAX BLOCK LENGTH
         B     LX01
         EJECT
*---------------------------------------------------------------------*
*        THIS IS A 3375 OR 3380 SO CALCULATE THE CAPACITY             *
*        OF THE TRACK.                                                *
*        THIS VALUE IS GREATER THAN THE MAX BLOCKSIZE                 *
*        ALLOWED BY THE OS                                            *
*---------------------------------------------------------------------*
LX00     DS    0H
         SLR   R4,R4                   CLEAR  FOR INSERT
         ICM   R4,B'0001',DDW14        PICK UP MODULO FACTOR
         S     R4,ONE                  SUBTRACT 1
         SLR   R5,R5                   CLEAR  FOR INSERT
         ICM   R5,B'0011',DDW13        LOAD BYTES 0 AND 1 OF WORD 3
         AR    R4,R5
         ICM   R5,B'0011',DDW14+2      LOAD BYTES 2 AND 3 OF WORD 4
         SR    R4,R5
         ICM   R5,B'0011',DDW13+2      LOAD BYTES 2 AND 3 OF WORD 3
         SR    R4,R5
*---------------------------------------------------------------------*
*        COMPLETE CKD AREA AND CCW'S                                  *
*---------------------------------------------------------------------*
LX01     DS    0H
         LR    R5,R4                   LOAD MAX BLOCK LENGTH
         STCM  R5,B'0011',WCKDL        STORE IN CKD LENGTH FIELD
         SRL   R5,1                    HALF OF  BLOCK LENGTH
         STCM  R5,B'0011',CCW4+6       STORE IN CCW4
         SR    R4,R5                   REMAINDER OF BLOCK LENGTH
         STCM  R4,B'0011',CCW5+6       STORE IN CCW5
*---------------------------------------------------------------------*
*        OPEN  DATASETS                                               *
*---------------------------------------------------------------------*
         OPEN (SNAPDCB,(OUTPUT),SYSUT2,(OUTPUT))
*        STM   R0,R15,REGS
*        SNAP  DCB=SNAPDCB,ID=01,STORAGE=(SNAPBEG,SNAPEND)
*---------------------------------------------------------------------*
*        CHECK IF CONTIG EXTEND                                       *
*---------------------------------------------------------------------*
         MVI   RETCD,X'08'             SET RETURN CODE TO 8
         L     R9,SYSUT2+DCBDEBAD      LOAD ADDR DEB
         MVC   NOEXT,DEBNMEXT(R9)      SAVE NUMBER OF EXTENDS
         CLI   DEBNMEXT(R9),X'01'      IS IT A CONTIG SPACE ?
         BNE   LX04                    NO, EXIT
         MVI   RETCD,X'00'             SET RETURN CODE TO 0
         LA    R9,DEBDASEC(R9)         LOAD ADDR OF FIRST DA SECTION
         MVC   IOBSARG(4),DEBSTRCC(R9) MOVE CCHH (BEG OF EXTEND)
         MVC   ENDEXT,DEBENDCC(R9)     MOVE CCHH (END OF EXT), NUMTRCK
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        M A I N   L O O P                                            *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
*        SET RECORD NUMBER IN DATA RECORD                             *
*---------------------------------------------------------------------*
LX02     DS    0H
         L     R5,IOAREA1+4            LOAD RECORD NUMBER
         A     R5,ONE                  ADD 1
         ST    R5,IOAREA1+4            STORE BACK
         MVC   WCKD(4),IOBSARG         MOVE CCHH TO COUNT AREA
*---------------------------------------------------------------------*
*        WRITE ONE TRACK                                              *
*---------------------------------------------------------------------*
         XC    ECB,ECB                 CLEAR ECB
         EXCP  IOB
         WAIT  ECB=ECB                 AWAIT IO COMPLETION
         CLI   ECB,X'7F'               IO OK ?
         BE    LX03                    YES, UPDATE DCB AND IOB
         STM   R0,R15,REGS
         SNAP  DCB=SNAPDCB,ID=02,STORAGE=(SNAPBEG,SNAPEND)
         MVI   RETCD,X'04'             SET RETURN CODE
         B     LX05                    EXIT
LX03     DS    0H
         LA    R7,SYSUT2
         MVC   DCBFDAD(8,R7),IOBM      MOVE DASD ADDR TO DCB
         MVI   DCBFDAD+7(R7),X'01'     MOVE ADDR OF RECORD JUST WRITTEN
         MVC   DCBTRBAL(2,R7),TRBAL    MOVE NUMBER OF BYTES REM. ON TRK
         SLR   R2,R2                   CLEAR  FOR INSERT
         ICM   R2,B'0011',IOBHH        LOAD HH
         LA    R2,1(R2)                INCREMENT BY ONE
         STCM  R2,B'0011',IOBHH        STORE HH IN IOB
         CLC   IOBHH,ENDEXT+2          END OF CYL ?
         BNH   LX02                    NO, GO WRITE NEXT TRACK
         SLR   R2,R2                   CLEAR  FOR INSERT
         STCM  R2,B'0011',IOBHH        STORE HH IN IOB  TRACK 0
         ICM   R2,B'0011',IOBCC        LOAD CC
         LA    R2,1(R2)                INCREMENT BY ONE
         STCM  R2,B'0011',IOBCC        STORE CC IN IOB
         CLC   IOBCC,ENDEXT            LAST TRACK WRITTEN ?
         BNH   LX02                    NO, GO WRITE NEXT TRACK
LX04     DS    0H                      THAT'S IT
*        STM   R0,R15,REGS
*        SNAP  DCB=SNAPDCB,ID=03,STORAGE=(SNAPBEG,SNAPEND)
         EJECT
*---------------------------------------------------------------------*
*        CLOSE DATASETS, RETURN TO OS                                 *
*---------------------------------------------------------------------*
LX05     DS    0H
         CLOSE (SYSUT2,,SNAPDCB)
         SR    R15,R15                 CLEAR REGISTER
         ICM   R15,B'0001',RETCD       SET RETURN CODE
         L     R13,SAVE+4
         RETURN (14,12),T,RC=(15)
*---------------------------------------------------------------------*
*        SNAP DCB                                                     *
*---------------------------------------------------------------------*
SNAPDCB  DCB   DSORG=PS,MACRF=(W),BLKSIZE=1632,LRECL=125,RECFM=VBA,    X
               DDNAME=SNAP
SNAPBEG  DS    0H
*---------------------------------------------------------------------*
*        CONSTANTS                                                    *
*---------------------------------------------------------------------*
LOUT     DC    A(IOEND-IOAREA1)        MUST NOT EXCEED MAX FOR MVCL
ONE      DC    F'1'
*---------------------------------------------------------------------*
*        OUTPUT DCB                                                   *
*---------------------------------------------------------------------*
SYSUT2   DCB   DDNAME=SYSUT2,MACRF=E,DSORG=PS
*---------------------------------------------------------------------*
*        I/O  CONTROL BLOCK                                           *
*---------------------------------------------------------------------*
IOB      DS    0D
         DC    X'C2'                   UNREL FLAG/CMD/DATA-CHAINING
         DC    3X'00'
IOBECBCC DC    X'00'
         DC    AL3(ECB)
         DC    4X'00'
IOBUSTAT DC    X'00'
         DC    4X'00'
IOBSTRTB DC    AL3(CCW)
         DC    AL4(SYSUT2)
         DC    8X'00'
IOBM     DC    X'00'                   FIRST IOBEXTEND -> 0
         DC    2X'00'                  BB
IOBSARG  DS    0X
IOBCC    DC    X'FFFF'                 CC
IOBHH    DC    X'FFFF'                 HH
IOBR     DC    X'00'                   SEARCH FOR RECORD 0
*---------------------------------------------------------------------*
*        SIO ECB                                                      *
*---------------------------------------------------------------------*
ECB      DC    F'0'
         EJECT
*---------------------------------------------------------------------*
*        CCW                                                          *
*---------------------------------------------------------------------*
CCW      CCW   X'23',SECTOR1,X'40',X'01'
         CCW   X'31',IOBSARG,X'40',X'05'
         CCW   X'08',*-8,X'00',X'00'
INOUT    CCW   X'1D',IOAREA0,X'A0',X'0008'       WRITE KEY + COUNT
CCW4     CCW   X'1D',IOAREA1,X'A0',X'0000'       WRITE RECORD
CCW5     CCW   X'1D',IOAREA2,X'20',X'0000'       WRITE RECORD
*---------------------------------------------------------------------*
*        WORK FIELDS / CONSTANTS                                      *
*---------------------------------------------------------------------*
ENDEXT   DC    X'FFFFFFFFFFFF'         CCHH, NR OF TRACKS IN EXTEND
NOEXT    DC    X'FF'                   NUMBER OF EXTENDS
SECTOR1  DC    X'00'                   SECTOR ADDRESS
RETCD    DC    X'FF'                   RETURN CODE
TRBAL    DC    H'0'                    FULL TRACK WRITE, TRBAL = 0
         DC    C'REG0'                 EYE CATCHER
REGS     DS    16F                     REGISTER AREA
*---------------------------------------------------------------------*
*        AREA FOR DEVTYPE MACRO                                       *
*---------------------------------------------------------------------*
DDN1     DC    CL8'XXXXXXXX'
DDW1     DS    0F
DDW10    DS    F
DDW11    DS    F
DDW12    DS    F
DDW13    DS    F
DDW14    DS    F
DDW15    DS    F
*---------------------------------------------------------------------*
*        DATA RECORD                                                  *
*---------------------------------------------------------------------*
IOAREA0  DS    0D                      COUNT AND KEY AREA
WCKD     DC    X'FFFFFFFF'             CC HH
WCKDR    DC    X'01'                   RECORD NUMBER
         DC    X'00'                   UNKEYED RECORDS -> KL = 0
WCKDL    DC    X'FFFF'                 DATA LENGTH
IOAREA1  DS    0D                      DATA AREA
         DS    10F
SNAPEND  DS    0H
IOAREA2  DS    32000C
IOEND    DS    0H
         END
