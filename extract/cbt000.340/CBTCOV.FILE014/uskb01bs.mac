         TITLE '*** P9020600 ***  FIND TRUE SPACE IN PDS-DATASET AND COX
               MPRESS IF NECESSARY  ***'
**********************************************************************
*/*P9020600    CALC TRUE PDS-SPACE AND COMPRESS                      *
*                                                                    *
*1 FUNCTION    DAS PROGRAMM BERECHNET DEN EFFEKTIVEN FREIEN PLATZ    *
*              EINES PDS-DATASETS UND STARTED DAS IEBCOPY-UTILITY    *
*              (COMPRESS-FUNKTION) FALLS EIN VORGEGEBENES %-LIMIT    *
*              UEBERSCHRITTEN WURDE.                                 *
*2 SUMMARY                                                           *
*  TYPE        MAIN      UTLITIY                                     *
*  ACCOUNT     90                                                    *
*  EXTERNAL    IEBCOPY                  SYSTEM-UTILITY               *
*              SVC219                   AUTHORIZATION ON/OFF         *
*  ENTRY       P9020600                                              *
*  MACRO       BEGIN                    MODULE-START                 *
*              ENDE                     MODULE-AUSGANG               *
*              KB90LABL                 CREATE HEADER-LINES          *
*              KB90VERS                 WRITE LEVEL,VERSION          *
*              KB90SCAN                 SCAN VARIABLE PARAMETER      *
*  HISTORY     1982.05   HE   GRUNDVERSION                           *
*              1983.07   HE   ALLOC DATASETS DYNAMICALLY             *
*              1983.11   HE   SYSOUT = DUMMY                         *
*              1984.03   HE   ISSUE WTO AFTER COMPLETION             *
*3 USAGE       SIEHE PROGRAMMIER-RICHTLINIEN, HAUPTKAPITEL 01        *
*              PROGRAM SHOULD BE LINKED WITH AC=1                    *
*                                                                    *
*              PARM='XX,TETSXX.SOURCE.CNTL'                          *
*                    XX - PERCENTAGE MAXIMAL USED SPACE              *
*                    TETSXX - DATASET-NAME TO BE TESTED              *
*                                                                    *
*              RETURN-CODES:  32 - DATASET NOT CATALOGED             *
*                             28 - INVALID DEVICE                    *
*                             24 - FORMAT-1-DSCB NOT FOUND           *
*                             20 - INVALID DATASET (NOT PDS)         *
*                             XX - SEE IEBCOPY RETURN-CODES          *
*                             00 - SUCCESSFUL COMPLETION             *
*              ABENDS:      2061 - DYNAMIC ALLOCATION FAILED         *
**/                                                                  *
**********************************************************************
         SPACE 1
         PRINT NOGEN
P9020600 BEGIN PARM=YES,AREA=PARM,SETEQ=YES
         USING DSCBD,RG10               ADDRESSABILITY DSCB
         LA    RG10,DSN
         MVC   DSN,PARM+3               SAVE DSNAME
         LA    RG11,DSN
         KB90SCAN FROMR=11,TO=TXTDSN1,MAXL=44,DELIM=' ',LERR=PHEND01
         PACK  QSPFREE,PARM(2)          SAVE % OF FREE SPACE
         EJECT
         KB90LABL PHLOC01,'GET SERIAL-NO AND DEVICE-CONSTANTS',S=L
         MVI   RC01+3,S20               SET RETURN-CODE = 32
         LOCATE CLIST                   GET VOLUME SERIAL
         LTR   RG15,RG15
         BNZ   PHEND01
         MVC   SERIAL,CATBLK+6          SERIAL-NO. FROM CATALOG
         MVI   RC01+3,S10+S08+S04       SET RETURN-CODE = 28
         MVC   QTRKCYL,=H'19'           19 TRK/CYL
         CLI   CATBLK+5,S08+S01         TEST FOR 3330 DEVICE
         BE    PHFMT01
         MVC   QTRKCYL,=H'30'           30 TRK/CYL
         CLI   CATBLK+5,S08+S02+S01     TEST FOR 3350 DEVICE
         BE    PHFMT01
         MVC   QTRKCYL,=H'15'           15 TRK/CYL
         CLI   CATBLK+5,S08+S04+S02     TEST FOR 3380 DEVICE
         BNE   PHEND01
         SPACE 2
         KB90LABL PHFMT01,'GET FORMAT-1 DSCB',S=L
         MVI   RC01+3,S10+S08           SET RETURN-CODE = 24
         OBTAIN SEARCH                  GET DSCB
         LTR   RG15,RG15                ON ERROR
         BNZ   PHEND01
         MVI   RC01+3,S10+S04           SET RETURN-CODE = 20
         TM    DS1DSORG,S02             TEST FOR PDS-DATASET
         BNO   PHEND01                  IT'S NOT
         XC    RC01,RC01                RESET RETURN-CODE
         SR    RG1,RG1
         SR    RG2,RG2
         ICM   RG2,X'1',DS1NOEPV        GET EXTENT COUNT
         MVC   QEMTCYL,DS1LSTAR         INIT TTR OF LAST TRACK
         LA    RG3,DS1EXT1              ADDRESS EXTENT-TABLE
         EJECT
         KB90LABL PHSPC01,'CALCULATE FREE SPACE OF DATASET',S=L
         MVC   EXTENT,2(RG3)            EXTENT DESC TO ALIGNED WORKA
         LH    RG4,HICC                 GET HI-CYL
         MH    RG4,QTRKCYL              * TRK/CYL
         AH    RG4,HIHH                 + HIGH HH = HI TRACK ADDRESS
         LH    RG5,LOCC                 GET LO-CYL
         MH    RG5,QTRKCYL              * TRK/CYL
         AH    RG5,LOHH                 + LOW HH = LOW TRACK ADDRESS
         SR    RG4,RG5                  NB TRACKS ALLOCATED
         LA    RG4,1(RG4)               CORRECT COUNT
         AR    RG1,RG4                  ACCUMULATE
         LA    RG3,10(RG3)              ADDRESS NEXT EXTENT
         BCT   RG2,PHSPC01              PROCESS EXTENT
         LR    RG5,RG1                  SAVE ALLOCATED TRACKS
         NC    QEMTCYL,QEMTCYL          IF NO EOF AT ALL
         BZ    *+6                      DON'T SUBTRACT 1
         BCTR  RG5,RGNL                 -1 = HI RELATIVE TRACK ADDRESS
         LH    RG2,QEMTCYL              REL TRACK ADDRESS OF EOF
         SR    RG1,RG2                  TRACKS REMAINING (FREE)
         LR    RG3,RG1                  SAVE FREE TRACKS
         MH    RG3,=H'100'              * 100 FOR PERCENT
         SR    RG2,RG2
         DR    RG2,RG5                  XXX % FREE
         CVD   RG3,ZX01                 CONVERT TO DEC
         CP    QSPFREE,ZX01+6(2)        TEST FOR COMPRESS
         BL    PHEND01                  NO, RETURN TO USER
         SPACE 2
         KB90LABL ,'ALLOCATE DATASETS DYNAMICALLY VIA SVC99',S=L
         LA    RG1,RBCOMPR              ADDRESS LIST REQUEST POINTER
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         LA    RG1,RBSYSIN              ADDRESS LIST REQUEST POINTER
         MVC   RBADDR,=A(RTXT02)
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         LA    RG1,RBSYSU3              ADDRESS LIST REQUEST POINTER
         MVC   RBADDR,=A(RTXT03)
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         LA    RG1,RBSYSU4              ADDRESS LIST REQUEST POINTER
         MVC   RBADDR,=A(RTXT04)
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         LA    RG1,RBSYSPR              ADDRESS LIST REQUEST POINTER
         MVC   RBADDR,=A(RTXT05)
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         EJECT
         KB90LABL PHCMP01,'LINK TO IEBCOPY-UTILITY',S=L
         LA    RGNL,1                   REQUEST AUTHORIZATION ON
         SVC   219                      SET ON
         LINK EP=IEBCOPY,PARAM=(CPYOPT,CPYDDN),VL=1
         ST    RG15,RC01                SAVE RETURN-CODE
         CVD   RG15,ZX01                CONVERT TO DECIMAL
         MVC   WTOMSG+29(3),ZX02        SET MASK
         ED    WTOMSG+29(3),ZX01+6      MAKE IT PRINTABLE
         MVC   WTOMSG+57(L'DSN),DSN     DATASET NAME
WTOMSG   WTO   '** P9020600 **  RC = XXX FOR COMPRESS OF DATASET XXXXXX*
               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ***',ROUTCDE=(2)
         SR    RGNL,RGNL                REQUEST AUTHORIZATION OFF
         SVC   219                      SET OFF
         SPACE 2
         KB90LABL PHDYN02,'DEALLOCATE DATASETS',S=L
         LA    RG1,RBUCOMPR
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         MVC   RBUADDR,=A(RBUTXT2)      DDN-ENTRY
         LA    RG1,RBUSYSIN
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         MVC   RBUADDR,=A(RBUTXT3)      DDN-ENTRY
         LA    RG1,RBUSYSU3
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         MVC   RBUADDR,=A(RBUTXT4)      DDN-ENTRY
         LA    RG1,RBUSYSU4
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         MVC   RBUADDR,=A(RBUTXT5)      DDN-ENTRY
         LA    RG1,RBUSYSPR
         BAL   RG12,PHDYN01             CALL DYNAMIC ALLOCATION
         SPACE 2
         KB90LABL PHEND01,'RETURN TO SYSTEM',S=L
         ENDE  RC=RC01
         SPACE 2
         KB90LABL PHDYN01,'CALL DYNAMIC ALLOCATION'
         DYNALLOC
         LTR   RG15,RG15                TEST FOR COMPLETION
         BZ    PHDYN01R
         ABEND 2061,DUMP
         EJECT
         LTORG
         KB90LABL ,'D A T A   -   A R E A S'
CLIST    CAMLST NAME,DSN,,CATBLK
SEARCH   CAMLST SEARCH,DSN,SERIAL,DSCBAREA
         SPACE 1
ZX01     DC    1D'0'
EXTENT   DS    0D
LOCC     DC    1H'0'
LOHH     DC    1H'0'
HICC     DC    1H'0'
HIHH     DC    1H'0'
RC01     DC    1F'0'
QTRKCYL  DC    1H'0'
QSPFREE  DC    1H'0'
QEMTCYL  DC    1XL3'00'
ZX02     DC    1XL3'212020'
         SPACE 1
         CNOP  2,4
CPYOPT   DC    1H'0'
         CNOP  2,4
CPYDDN   DC    1H'56'
         DC    8F'0'
         DC    1CL24'SYSIN   SYSPRINTCOMPRESS'
         SPACE 1
PARM     DC    1CL100' '
DSN      DC    1CL44' '
DSCBAREA DC    140X'00'            FORMAT-1 DSCB OUTPUT AREA
SERIAL   DC    1CL6' '
         DS    0D
CATBLK   DC    265X'00'            CATALOG BLOCK INPUT AREA
         SPACE 1
RBCOMPR  DC    0A(0),AL1(128),AL3(RBLK01)
RBLK01   DC    AL1(20),AL1(S99VRBAL),AL2(0),A(0)
RBADDR   DC    A(RTXT01),1A(0),1A(0)
RTXT01   DC    A(TXTCOM),A(TXTCOM1)
         DC    AL1(128),AL3(TXTDISP)
RBSYSIN  DC    0A(0),AL1(128),AL3(RBLK01)
RTXT02   DC    A(TXTSYS),A(TXTSYS2),A(TXTMEMB)
         DC    AL1(128),AL3(TXTDISP)
RBSYSU3  DC    0A(0),AL1(128),AL3(RBLK01)
RTXT03   DC    A(TXTUT3),A(TXTSTAT),A(TXTCYLS),A(TXTPRIME)
         DC    AL1(128),AL3(TXTSECND)
RBSYSU4  DC    0A(0),AL1(128),AL3(RBLK01)
RTXT04   DC    A(TXTUT4),A(TXTSTAT),A(TXTCYLS),A(TXTPRIME)
         DC    AL1(128),AL3(TXTSECND)
RBSYSPR  DC    0A(0),AL1(128),AL3(RBLK01)
RTXT05   DC    A(TXTPRT),AL1(128),AL3(TXTSYSOU)
RBUCOMPR DC    0A(0),AL1(128),AL3(RBUDDN1)
RBUSYSIN DC    0A(0),AL1(128),AL3(RBUDDN1)
RBUSYSU3 DC    0A(0),AL1(128),AL3(RBUDDN1)
RBUSYSU4 DC    0A(0),AL1(128),AL3(RBUDDN1)
RBUSYSPR DC    0A(0),AL1(128),AL3(RBUDDN1)
RBUDDN1  DC    AL1(20),AL1(S99VRBUN),AL2(0),A(0)
RBUADDR  DC    A(RBUTXT1),2A(0)
RBUTXT1  DC    AL1(128),AL3(TXTCOM)
RBUTXT2  DC    AL1(128),AL3(TXTSYS)
RBUTXT3  DC    AL1(128),AL3(TXTUT3)
RBUTXT4  DC    AL1(128),AL3(TXTUT4)
RBUTXT5  DC    AL1(128),AL3(TXTPRT)
         SPACE 1
TXTCOM   DC    AL2(DALDDNAM),AL2(1),AL2(L'TXTDDN1)
TXTDDN1  DC    1CL8'COMPRESS'
TXTSYS   DC    AL2(DALDDNAM),AL2(1),AL2(L'TXTDDN2)
TXTDDN2  DC    1CL8'SYSIN   '
TXTUT3   DC    AL2(DALDDNAM),AL2(1),AL2(L'TXTDDN3)
TXTDDN3  DC    1CL8'SYSUT3  '
TXTUT4   DC    AL2(DALDDNAM),AL2(1),AL2(L'TXTDDN4)
TXTDDN4  DC    1CL8'SYSUT4  '
TXTPRT   DC    AL2(DALDDNAM),AL2(1),AL2(L'TXTDDN5)
TXTDDN5  DC    1CL8'SYSPRINT'
TXTCOM1  DC    AL2(DALDSNAM),AL2(1),AL2(L'TXTDSN1)
TXTDSN1  DC    1CL44' '
TXTSYS2  DC    AL2(DALDSNAM),AL2(1),AL2(L'TXTDSN2)
TXTDSN2  DC    1CL12'SYS2.PARMLIB'
TXTMEMB  DC    AL2(DALMEMBR),AL2(1),AL2(L'TXTMEM1)
TXTMEM1  DC    1CL8'COMPRESS'
TXTDISP  DC    AL2(DALSTATS),AL2(1),AL2(1),AL1(08)
TXTSTAT  DC    AL2(DALUNIT),AL2(1),AL2(L'TXTUNIT)
TXTUNIT  DC    1CL4'DISK'
TXTCYLS  DC    AL2(DALCYL),AL2(0)
TXTPRIME DC    AL2(DALPRIME),AL2(1),AL2(3),AL3(000009)
TXTSECND DC    AL2(DALSECND),AL2(1),AL2(3),AL3(000004)
TXTSYSOU DC    AL2(DALDUMMY),AL2(0)
         SPACE 1
         IEFZB4D0
         IEFZB4D2
         SPACE 1
         KB90LABL ,'D U M M Y   -   S E C T I O N S'
DSCBD    DSECT
         IECSDSL1 1
         SPACE 1
         END   P9020600
