./ ADD NAME=CMDS     0107-90176-90263-1327-00469-00362-00105-$A1019
/***********************************************************************
*                                                                      *
* ISPF Commands Table Utility                                          *
*                                                                      *
* This utility is an alternative to ISPF/PDF option 3.9.               *
* It supports all the function of option 3.9 plus the following:       *
*  (1) Any application ID may be specified, even a currently active    *
*      one (including ISP and ISR) -- if a table for an active         *
*      application is changed, it is stored on DASD, but the active    *
*      copy is not affected;                                           *
*  (2) The application ID defaults to the currently active one;        *
*  (3) The output table library may be specified (the default is the   *
*      data set currently allocated to ISPTABL;                        *
*  (4) The following additional commands are supported:                *
*      (a) FIND finds a character string within the verb, action or    *
*          description fields;                                         *
*      (b) LOCATE positions the display by verb;                       *
*      (c) RFIND repeats the FIND action;                              *
*      (d) SORT sorts by verb, except that all aliases are sorted at   *
*          the beginning of the commands table (aliases must precede   *
*          the commands they reference) -- the order of duplicate      *
*          verbs is preserved.                                         *
*                                                                      *
* Additional members required:                                         *
* Msgs:   CMDS00                                                       *
* Panels: CMDSA, CMDSB                                                 *
* Tables: CMDSCMDS                                                     *
*                                                                      *
* Douglas H. Adams                                                     *
* Mail code 110-SH28                                                   *
* Rockwell International Corporation                                   *
* 2201 Seal Beach Boulevard                                            *
* P. O. Box 2515                                                       *
* Seal Beach, California 90740-1515                                    *
*                                                                      *
* (213) 797-2618                                                       *
*                                                                      *
* September 19, 1990                                                   *
*                                                                      *
***********************************************************************/

Signal on novalue
Signal on syntax
Address ISPEXEC
"CONTROL ERRORS RETURN"
"VGET (ZAPPLID ZSCREEN)"
File = "CMDS"zscreen
Sort = "SORT"zscreen

/***********************************************************************
* Invoke recursively to use application commands table for RFIND       *
***********************************************************************/
Arg applid
If applid == ""
Then do
   "SELECT CMD(%CMDS" zapplid") NEWAPPL(CMDS) PASSLIB"
   Exit 0
   End

/***********************************************************************
* Display command table selection panel                                *
***********************************************************************/
Call listdsi "ISPTABL FILE"
Tabledsn = "'"sysdsname"'"
"DISPLAY PANEL(CMDSA)"
Do while rc = 0
   Applcmds = applid"CMDS"
   Appltemp = applid"TEMP"
   Address TSO "ALLOCATE FILE("file") DATASET("tabledsn") SHR REUSE"
   If rc = 0
   Then do
      Call build
      If result = 0
      Then call commands
      "TBSTATS DUMMY LIBRARY(DUMMY)"
      Address TSO "FREE FILE("file")"
      End
   "DISPLAY PANEL(CMDSA)"
   End
Exit 0

/***********************************************************************
* Alias resolution                                                     *
***********************************************************************/
Alias: procedure expose appltemp

"TBGET" appltemp "ROWID(ROWID)"
Parse var zctact action zctverb .
Do level = 1 by 1 until action ^== "ALIAS" | rc ^= 0
   "TBTOP" appltemp
   "TBSCAN" appltemp "ARGLIST(ZCTVERB)"
   Parse var zctact action zctverb .
   End level
"TBSKIP" appltemp "ROW("rowid") NOREAD"
Return level

/***********************************************************************
* Build temporary command table                                        *
***********************************************************************/
Build:

"TBCREATE" appltemp "NAMES(ZCTVERB ZCTTRUNC ZCTACT ZCTDESC)",
         "LIBRARY("file")"
If rc ^= 0
Then do
   "SETMSG MSG(CMDS003)"
   Return 8
   End
Rowcurr = 0
"TBSTATS" applcmds "STATUS1(STATUS1) STATUS2(STATUS2)",
         "ROWCURR(ROWCURR)"
Exist? = status1 = 1
Closed? = status2 = 1
If ^ exist? | rowcurr = 0
Then do
   Zctverb = copies("_",8)
   Zcttrunc = "_"
   Zctact = copies("_",60)
   Zctdesc = copies("_",57)
   "TBADD" appltemp
   End
Else do
   If closed?
   Then "TBOPEN" applcmds "NOWRITE"
   "TBTOP" applcmds
   Do rowcurr
      "TBSKIP" applcmds
      "TBADD" appltemp "MULT("rowcurr")"
      End
   If closed?
   Then "TBEND" applcmds
   End
"TBTOP" appltemp
Return 0

/***********************************************************************
* Command Processing                                                   *
***********************************************************************/
Commands:

Parse value "0" with csrpos cursor zverb verb operand
Changed? = 0
"TBDISPL" appltemp "PANEL(CMDSB) POSITION(CRP)"
Do while rc < 8
   If crp = 0
   Then crp = ztdtop
   "VGET (ZVERB ZSCROLLN)"
   Do ztdsels
      Changed? = 1
      Parse upper var sel linecmd +1 number
      If number == ""
      Then number = 1
      Select
         When linecmd == "D" then call delete
         When linecmd == "I" then call insert
         When linecmd == "R" then call repeat
         Otherwise                call update
         End
      If ztdsels > 1
      Then "TBDISPL" appltemp
      End
   "TBTOP" appltemp
   "TBSKIP" appltemp "NUMBER("ztdtop")"
   Select
      When verb  == "CANCEL" then leave
      When zverb == "DOWN"   then call down
      When verb  == "FIND"   then call find
      When verb  == "LOCATE" then call locate
      When verb  == "RFIND"  then call rfind
      When verb  == "SORT"   then call sort
      When zverb == "UP"     then call up
      Otherwise nop
      End
   "TBDISPL" appltemp "PANEL(CMDSB) CURSOR("cursor") CSRROW("crp")",
           "CSRPOS("csrpos") AUTOSEL(NO) POSITION(CRP)"

   End
Call end
Return 0

/***********************************************************************
* Delete command                                                       *
***********************************************************************/
Delete:

Do number
   "TBDELETE" appltemp
   "TBSKIP" appltemp "NOREAD"
   End
If ztdsels = 1
Then crp = max(crp-1,0)
Return 0

/***********************************************************************
* Down command                                                         *
***********************************************************************/
Down:

"TBSKIP" appltemp "NUMBER("zscrolln") NOREAD"
If rc ^= 0
Then "TBBOTTOM" appltemp "NOREAD"
Return 0

/***********************************************************************
* End command                                                          *
***********************************************************************/
End:

If verb == "CANCEL" | ^ changed?
Then do
   "TBEND" appltemp
   Return 0
   End
"TBTOP" appltemp
"TBSKIP" appltemp
Do while rc = 0
   If translate(zctverb," ","_") = ""
   Then "TBDELETE" appltemp
   "TBSKIP" appltemp
   End
"TBQUERY" appltemp "ROWNUM(ROWNUM)"
If rownum = 0
Then do
   "TBERASE" applcmds "LIBRARY("file")"
   "TBEND" appltemp
   End
Else do
   "TBQUERY" appltemp "ROWNUM(CURSIZE)"
   Cursize = format(cursize)
   Moddate = date("Ordered")
   Modtime = substr(time("Normal"),1,5)
   User = sysvar("SYSUID")
   "TBCLOSE" appltemp "NAME("applcmds") LIBRARY("file")"
   "LMINIT DATAID(DATAID) DDNAME("file")"
   "LMMSTATS DATAID("dataid") MEMBER("applcmds") MODDATE("moddate")",
            "MODTIME("modtime") CURSIZE("cursize") INITSIZE("cursize")",
            "USER("user")"
   "LMFREE DATAID("dataid")"
   End
"SETMSG MSG(CMDS002)"
Return 0

/***********************************************************************
* Find command                                                         *
***********************************************************************/
Find:

"TBGET" appltemp
Csrpos = 1
Cursor = ""
Call search
Save_operand = operand
Save_crp = crp
Save_csrpos = csrpos
Save_cursor = cursor
Return 0

/***********************************************************************
* Insert command                                                       *
***********************************************************************/
Insert:

Call update
Zctverb = copies("_",8)
Zcttrunc = "_"
Zctact = copies("_",60)
Zctdesc = copies("_",57)
Do number
   "TBADD" appltemp "MULT("number")"
   End
If ztdsels = 1
Then crp = crp+1
Return 0

/***********************************************************************
* Locate command                                                       *
***********************************************************************/
Locate:

Zctverb = operand"*"
"TBSCAN" appltemp "ARGLIST(ZCTVERB) NOREAD POSITION(CRP)"
If rc ^= 0
Then do
   "TBTOP" appltemp
   "TBSCAN" appltemp "ARGLIST(ZCTVERB) NOREAD POSITION(CRP)"
   End
If rc = 0
Then "TBSKIP" appltemp "NUMBER(-1)"
Return 0

/***********************************************************************
* Repeat command                                                       *
***********************************************************************/
Repeat:

Call update
Do number
   "TBADD" appltemp "MULT("number")"
   End
If ztdsels = 1
Then crp = crp+1
Return 0

/***********************************************************************
* Rfind command                                                        *
***********************************************************************/
Rfind:

If symbol("save_operand") ^== "VAR"
Then do
   "SETMSG MSG(CMDS004)"
   Return 4
   End
Operand = save_operand
If crp = save_crp
Then do
   Cursor = save_cursor
   Csrpos = save_csrpos+1
   End
Else do
   Cursor = ""
   Csrpos = 1
   End
Call search
Save_crp = crp
Save_cursor = cursor
Save_csrpos = csrpos
Return 0

/***********************************************************************
* Search for character string                                          *
***********************************************************************/
Search:

Operand = strip(operand,"Both","'")
Operand = strip(operand,"Both","""")
If operand = ""
Then do
   "SETMSG MSG(CMDS000)"
   Return 0
   End
Select
   When cursor == "ZCTVERB"
   Then do
      Pos_verb = pos(operand,zctverb,csrpos)
      Pos_act = pos(operand,zctact)
      Pos_desc = pos(operand,zctdesc)
      End
   When cursor == "ZCTACT"
   Then do
      Pos_verb = 0
      Pos_act = pos(operand,zctact,csrpos)
      Pos_desc = pos(operand,zctdesc)
      End
   When cursor == "ZCTDESC"
   Then do
      Pos_verb = 0
      Pos_act = 0
      Pos_desc = pos(operand,zctdesc,csrpos)
      End
   Otherwise
      Pos_verb = pos(operand,zctverb)
      Pos_act = pos(operand,zctact)
      Pos_desc = pos(operand,zctdesc)
   End
Do while rc = 0 & pos_verb = 0 & pos_act = 0 & pos_desc = 0
   "TBSKIP" appltemp "POSITION(CRP)"
   Pos_verb = pos(operand,zctverb)
   Pos_act = pos(operand,zctact)
   Pos_desc = pos(operand,zctdesc)
   End
Select
   When rc = 0 & pos_verb ^= 0
   Then do
      Cursor = "ZCTVERB"
      Csrpos = pos_verb
      End
   When rc = 0 & pos_act ^= 0
   Then do
      Cursor = "ZCTACT"
      Csrpos = pos_act
      End
   When rc = 0 & pos_desc ^= 0
   Then do
      Cursor = "ZCTDESC"
      Csrpos = pos_desc
      End
   Otherwise do
      Cursor = ""
      Csrpos = 0
      "SETMSG MSG(CMDS001)"
      "TBTOP" appltemp
      "TBSKIP" appltemp "NUMBER("ztdtop") POSITION(CRP)"
      End
   End
Return 0

/***********************************************************************
* Sort command                                                         *
***********************************************************************/
Sort:

"TBCREATE" sort "NAMES(ZCTVERB ZCTTRUNC ZCTACT ZCTDESC LEVEL ORDER)",
         "REPLACE LIBRARY("file")"
"TBSORT" sort "FIELDS(LEVEL,N,D ZCTVERB,C,A ORDER,C,A)"
"TBQUERY" appltemp "ROWNUM(ROWNUM)"
"TBTOP" appltemp
Do rownum
   "TBSKIP" appltemp "POSITION(ORDER)"
   Parse var zctact action .
   If action == "ALIAS"
   Then level = alias()
   Else level = 0
   "TBADD" sort "ORDER MULT("rownum")"
   End
"TBTOP" sort
"TBEND" appltemp
"TBCREATE" appltemp "NAMES(ZCTVERB ZCTTRUNC ZCTACT ZCTDESC)",
         "LIBRARY("file")"
Do rownum
   "TBSKIP" sort
   "TBADD" appltemp "MULT("rownum")"
   End
"TBEND" sort
"TBTOP" appltemp
Changed? = 1
Return 0

/***********************************************************************
* Up command                                                           *
***********************************************************************/
Up:

"TBSKIP" appltemp "NUMBER("||-zscrolln")"
Return 0

/***********************************************************************
* Update selected row                                                  *
***********************************************************************/
Update:
   Zctverb = translate(zctverb," ","_")
   Zcttrunc = translate(zcttrunc," ","_")
   Zctact = translate(zctact," ","_")
   Zctdesc = translate(zctdesc," ","_")
   "TBPUT" appltemp
Return 0

/***********************************************************************
* Trap uninitialized variables                                         *
***********************************************************************/
Novalue:

Say "Uninitialized variable in line" sigl":"
Say sourceline(sigl)
Trace "?Results"
Nop
Exit 16

/***********************************************************************
* Trap syntax errors                                                   *
***********************************************************************/
Syntax:

Say "REXX error" rc "in line" sigl":"
Say sourceline(sigl)
Say errortext(rc)
Trace "?Results"
Nop
Exit
