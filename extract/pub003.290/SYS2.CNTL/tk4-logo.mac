//TK4MLOGO JOB  (SETUP),
//             'Build Netsol',
//             CLASS=A,
//             MSGCLASS=X,
//             MSGLEVEL=(1,1),
//             COND=(0,NE),
//             NOTIFY=HERC01
//********************************************************************
//*
//* Name: SYS2.CNTL(TK4-LOGO)
//*
//* Desc: Build new NETSOL logon screen
//*
//********************************************************************
//CLEANUP EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE SYS1.UMODMAC(TK4MLOG)
 SET MAXCC=0
 SET LASTCC=0
//COMP    EXEC COMPRESS,LIB='SYS1.UMODMAC'
//COPY    EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=SYS1.MACLIB
//SYSUT2   DD  DISP=SHR,DSN=SYS1.UMODMAC
//SYSIN    DD  *
 COPY INDD=SYSUT1,OUTDD=SYSUT2
 SELECT MEMBER=((NETSOL,,R))
//UPDATE  EXEC PGM=IEBUPDTE
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=SYS1.UMODMAC
//SYSUT2   DD  DISP=SHR,DSN=SYS1.UMODMAC
//SYSIN    DD  *
./ ADD NAME=TK4MLOG
* >>>>>>>>>>>>>>>>>>>>>> Sample Screen Layout <<<<<<<<<<<<<<<<<<<<<<<<
*
* ----+----1----5----2----+----3----+----4----+----5----+----6----+---
* Terminal                                                          Dat
*                                                                   Tim
*
*                            ************   ****  *****          ××
*                            **   **   **    **    **           ×××
*                            **   **   **    **   **           ××××
*                                 **         **  **           ×× ××
*         ×l      _,,,---,,_      **         ** **           ××  ××
*  ZZZzz /,'.-'`'    -.  ;-;;,    **         ****           ××   ××
*       ×,4-  ) )-,_. ,( (  ''-'  **         *****         ××    ××
*      '---''(_/--'  `-')_)       **         **  **       ××     ××
*                                 **         **   **      ×××××××××××
*        The MVS 3.8j             **         **    **            ××
*      Tur(n)key System           **         **     **           ××
*                               ******      ****     ***       ××××××
*
*             TK3 created by Volker Bandke       vbandke@bsp-gmbh.com
*             TK4- update by Juergen Winkelmann  winkelmann@id.ethz.ch
*                      see TK4-.CREDITS for complete credits
*
*                               MVS 3.8j Level 8505
*
* Logon ===>
*                                                             RUNNING
         PUSH  PRINT
         PRINT OFF
TK4MLOG  DS    0D
TK4MLOGW $WCC  (RESETKBD,MDT)
         $SBA  (1,1)
         DC    C'Terminal'
         $SBA  (1,9)
         $SF   (SKIP,HI)
         $SBA  (1,11)
         $SF   (SKIP,HI)
TK4MDEV  DC    CL8' '
         $SBA  (1,20)
         $SF   (SKIP,HI)
         $SBA  (1,66)
         $SF   (SKIP,HI)
         DC    C'Date'
         $SBA  (1,71)
         $SF   (SKIP,HI)
         $SBA  (1,72)
         $SF   (SKIP,HI)
TK4MDATE DC    CL8' '
         $SBA  (2,1)
         $SF   (SKIP,HI)
         $SBA  (2,66)
         $SF   (SKIP,HI)
         DC    C'Time'
         $SBA  (2,71)
         $SF   (SKIP,HI)
         $SBA  (2,72)
         $SF   (SKIP,HI)
TK4MTIME DC    CL8' '
         $SBA  (3,1)
         $SF   (SKIP)
         $SBA  (4,27)
         $SF   (SKIP)
         DC    C'************'
         $SBA  (4,40)
         $SF   (SKIP)
         $SBA  (4,42)
         $SF   (SKIP)
         DC    C'****'
         $SBA  (4,47)
         $SF   (SKIP)
         $SBA  (4,48)
         $SF   (SKIP)
         DC    C'*****'
         $SBA  (4,54)
         $SF   (SKIP)
         $SBA  (4,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (4,66)
         $SF   (SKIP)
         $SBA  (5,27)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (5,30)
         $SF   (SKIP)
         $SBA  (5,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (5,35)
         $SF   (SKIP)
         $SBA  (5,37)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (5,40)
         $SF   (SKIP)
         $SBA  (5,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (5,46)
         $SF   (SKIP)
         $SBA  (5,49)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (5,52)
         $SF   (SKIP)
         $SBA  (5,62)
         $SF   (SKIP)
         DC    C'×××'
         $SBA  (5,66)
         $SF   (SKIP)
         $SBA  (6,27)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (6,30)
         $SF   (SKIP)
         $SBA  (6,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (6,35)
         $SF   (SKIP)
         $SBA  (6,37)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (6,40)
         $SF   (SKIP)
         $SBA  (6,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (6,46)
         $SF   (SKIP)
         $SBA  (6,48)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (6,51)
         $SF   (SKIP)
         $SBA  (6,61)
         $SF   (SKIP)
         DC    C'××××'
         $SBA  (6,66)
         $SF   (SKIP)
         $SBA  (7,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (7,35)
         $SF   (SKIP)
         $SBA  (7,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (7,46)
         $SF   (SKIP)
         $SBA  (7,47)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (7,50)
         $SF   (SKIP)
         $SBA  (7,60)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (7,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (7,66)
         $SF   (SKIP)
         $SBA  (8,8)
         $SF   (SKIP,HI)
         DC    C'×l'
         $SBA  (8,11)
         $SF   (SKIP,HI)
         $SBA  (8,16)
         $SF   (SKIP,HI)
         DC    C'_,,,---,,_'
         $SBA  (8,27)
         $SF   (SKIP,HI)
         $SBA  (8,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (8,35)
         $SF   (SKIP)
         $SBA  (8,43)
         $SF   (SKIP)
         DC    C'** **'
         $SBA  (8,49)
         $SF   (SKIP)
         $SBA  (8,59)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (8,62)
         $SF   (SKIP)
         $SBA  (8,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (8,66)
         $SF   (SKIP)
         $SBA  (9,1)
         $SF   (SKIP,HI)
         DC    C'ZZZzz /,''.-''`''    -.  ;-;;,'
         $SBA  (9,29)
         $SF   (SKIP,HI)
         $SBA  (9,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (9,35)
         $SF   (SKIP)
         $SBA  (9,43)
         $SF   (SKIP)
         DC    C'****'
         $SBA  (9,48)
         $SF   (SKIP)
         $SBA  (9,58)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (9,61)
         $SF   (SKIP)
         $SBA  (9,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (9,66)
         $SF   (SKIP)
         $SBA  (10,6)
         $SF   (SKIP,HI)
         DC    C'×,4-  ) )-,_. ,( (  ''''-'''
         $SBA  (10,31)
         $SF   (SKIP,HI)
         $SBA  (10,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (10,35)
         $SF   (SKIP)
         $SBA  (10,43)
         $SF   (SKIP)
         DC    C'*****'
         $SBA  (10,49)
         $SF   (SKIP)
         $SBA  (10,57)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (10,60)
         $SF   (SKIP)
         $SBA  (10,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (10,66)
         $SF   (SKIP)
         $SBA  (11,5)
         $SF   (SKIP,HI)
         DC    C'''---''''(_/--''  `-'')_)'
         $SBA  (11,26)
         $SF   (SKIP,HI)
         $SBA  (11,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (11,35)
         $SF   (SKIP)
         $SBA  (11,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (11,46)
         $SF   (SKIP)
         $SBA  (11,47)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (11,50)
         $SF   (SKIP)
         $SBA  (11,56)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (11,59)
         $SF   (SKIP)
         $SBA  (11,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (11,66)
         $SF   (SKIP)
         $SBA  (11,69)
         $SF   (SKIP)
         DC    C'××××××××××'
         $SBA  (11,80)
         $SF   (SKIP)
         $SBA  (12,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (12,35)
         $SF   (SKIP)
         $SBA  (12,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (12,46)
         $SF   (SKIP)
         $SBA  (12,48)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (12,51)
         $SF   (SKIP)
         $SBA  (12,56)
         $SF   (SKIP)
         DC    C'×××××××××××'
         $SBA  (12,68)
         $SF   (SKIP)
         $SBA  (13,7)
         $SF   (SKIP,HI)
         DC    C'The MVS 3.8j'
         $SBA  (13,20)
         $SF   (SKIP,HI)
         $SBA  (13,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (13,35)
         $SF   (SKIP)
         $SBA  (13,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (13,46)
         $SF   (SKIP)
         $SBA  (13,49)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (13,52)
         $SF   (SKIP)
         $SBA  (13,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (13,66)
         $SF   (SKIP)
         $SBA  (14,5)
         $SF   (SKIP,HI)
         DC    C'Tur(n)key System'
         $SBA  (14,22)
         $SF   (SKIP,HI)
         $SBA  (14,32)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (14,35)
         $SF   (SKIP)
         $SBA  (14,43)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (14,46)
         $SF   (SKIP)
         $SBA  (14,50)
         $SF   (SKIP)
         DC    C'**'
         $SBA  (14,53)
         $SF   (SKIP)
         $SBA  (14,63)
         $SF   (SKIP)
         DC    C'××'
         $SBA  (14,66)
         $SF   (SKIP)
         $SBA  (15,30)
         $SF   (SKIP)
         DC    C'******'
         $SBA  (15,37)
         $SF   (SKIP)
         $SBA  (15,42)
         $SF   (SKIP)
         DC    C'****'
         $SBA  (15,47)
         $SF   (SKIP)
         $SBA  (15,51)
         $SF   (SKIP)
         DC    C'***'
         $SBA  (15,55)
         $SF   (SKIP)
         $SBA  (15,61)
         $SF   (SKIP)
         DC    C'××××××'
         $SBA  (15,68)
         $SF   (SKIP)
         $SBA  (17,12)
         $SF   (SKIP)
         DC    C'TK3 created by Volker Bandke       vbandke@bsp-gmbh.coC
               m'
         $SBA  (17,68)
         $SF   (SKIP)
         $SBA  (18,12)
         $SF   (SKIP)
         DC    C'TK4- update by Juergen Winkelmann  winkelmann@id.ethz.C
               ch'
         $SBA  (18,69)
         $SF   (SKIP)
         $SBA  (19,21)
         $SF   (SKIP)
         DC    C'see TK4-.CREDITS for complete credits'
         $SBA  (19,59)
         $SF   (SKIP)
         $SBA  (21,30)
         $SF   (SKIP)
         DC    C'MVS 3.8j Level 8505'
         $SBA  (21,50)
         $SF   (SKIP)
         $SBA  (22,80)
         $SF   (SKIP,HI)
         DC    C'Logon ===>'
         $SBA  (23,11)
         $SF   (UNPROT,HI)
         $IC
TK4MINP  DC    CL128' '
         $SBA  (24,60)
         $SF   (SKIP,HI)
         DC    C'RUNNING  TK4-'
         $SBA  (24,74)
         $SF   (SKIP,HI)
         $SBA  (24,80)
         $SF   (SKIP,HI)
TK4MLOGL EQU   *-TK4MLOG
         POP   PRINT
./ CHANGE NAME=NETSOL
         CLI   MSGINDEX,X'0C'             , is this msg to be shown?
         BNE   NOUSS                      , bif not
*                                         , update logo screen
         LA    R15,DATETIME               , call DATETIME ..
         LA    R3,TK4MDATE                , .. to fill date and ..
         LA    R4,TK4MTIME                , .. time fields ..
         BALR  R14,R15                    , .. on the logo screen
         MVC   SYNARG(FOUR),CID           , get CID into SYNCHRPL
         OI    MFLAGS2,INQUIRE            , indicate INQUIRE
         OI    MACFLAGS,INQCIDX           , indicate INQ CIDXLATE
         NI    SRPLEXT1,FF-RPLNIB         , synch RPL has CID in
*                                         ,  ARG field
       INQUIRE RPL=SYNCHRPL,              , get terminal name          *
               OPTCD=CIDXLATE,            ,  from CID and put          *
               AREA=TK4MDEV,              ,  it on the logo screen     *
               AREALEN=D8
         NI    MFLAGS2,FF-INQUIRE         , INQUIRE is done
*                                         , Now write the screen
         LA    R3,TK4MLOGL                , load length of screen data
         L     R4,=A(TK4MLOG)             , load address of screen data
         WRITE RPL=(PTRRPL),              , send data                  X
               OPTCD=(LBT,ERASE),         , erase screen first         X
               AREA=(R4),                 , address is in R4           X
               RECLEN=(R3),               , length is in R3            X
               EXIT=WRITEND
         B     USSOK                      , continue normal processing
NOUSS    DS    0H                         , issue netsol message <> 12
USSOK    DS    0H                         , logon screen has been sent
         COPY TK4MLOG                     , logon screen copy book
DATETIME DS    0H              adapted from Jim Morrison's U370DATE
         STM   R14,R12,12(R13) save registers
         LR    R12,R15         establish ..
         USING DATETIME,R12               .. addressability
         GETMAIN RU,LV=LWORKA   get savearea storage
         ST    R13,4(,R1)       chain the ..
         ST    R1,8(,R13)                  .. saveareas
         LR    R13,R1           establish own savearea
         MVC   72(LWORKA-72,R13),WORKAREA+72 copy workarea ..
         USING WORKAREA,R13     .. and establish addressability
         LR    R9,R3            remember address of date field on logo
         TIME  DEC              get system date and time packed decimal
*----------------------------------------------------------------------
*  Convert HHMMSSth, YYYY to EBCDIC
*----------------------------------------------------------------------
         STM   R0,R1,SAARG             store packed decimal date & time
         AP    SAARG+4(4),P19          Y2K: add S/370 epoch century
         UNPK  SACHR,SAARG             packed to EBCDIC
         OI    SACHRX,X'F0'            repair sign
*----------------------------------------------------------------------
*  Convert year to binary
*----------------------------------------------------------------------
         L     R3,SAARG+4              Y2K: YYYYDDDF
         SRL   R3,16-4                 000YYYY.
         ST    R3,SAPAKY
         OI    SAPAKY+3,X'0F'          packed year
         CVB   R3,SADWD
         ST    R3,SABINY               binary year
*----------------------------------------------------------------------
*  Select month table
*----------------------------------------------------------------------
         LA    R8,NOTLEAP              not a leap year
         TM    SABINY+3,X'03'          divisible by 4?
         BC    5,CALCMON               no, can't be leap year
         SLR   R6,R6
         LA    R10,400                 divisible by 400 is leap year
         LR    R7,R3
         DR    R6,R10
         LTR   R6,R6
         BZ    SETLEAP                 evenly divisible
         XR    R6,R6
         LA    R10,100                 divisible by 100 not leap year
         LR    R7,R3
         DR    R6,R10
         LTR   R6,R6
         BZ    CALCMON                 evenly divisible
SETLEAP  LA    R8,LEAP                 leap year
*----------------------------------------------------------------------
*  Find month & month day, given Julian days DDD in year
*----------------------------------------------------------------------
CALCMON  DS    0H                      R8 @ month table
         LH    R0,SAPAKDDD             DDDF
         STH   R0,SAPAKD
         CVB   R5,SADWD2
         ST    R5,SABIND               binary ddd
*
         LA    R1,1
         SLR   R14,R14                 month minus one
         SLR   R15,R15
SCANMON  IC    R15,0(R14,R8)           # days in month
         CR    R5,R15                  too many?
         BNH   SETMON                  no, br; now know month
         SR    R5,R15                  reduce ddd
         AR    R14,R1                  bump month
         B     SCANMON
SETMON   DS    0H
         LA    R1,100                  decimal shift factor
         SLR   R6,R6
         LA    R7,1(,R14)              month
         MR    R6,R1
         AR    R7,R5                   binary month, day of month
         CVD   R7,SADWD3               decimal: 0000 0000 000M MDDF
         OI    SAPAKMDX,X'0F'          assure reasonable sign
         UNPK  SACHRMD,SAPAKMD         MMDD to EBCDIC
*----------------------------------------------------------------------
*  Return data to caller
*----------------------------------------------------------------------
         MVC   0(2,R9),SARESULT+14 DD  R9 holds address of logo date
         MVI   2(R9),C'.'
         MVC   3(2,R9),SARESULT+12 MM
         MVI   5(R9),C'.'
         MVC   6(2,R9),SARESULT+10 YY
         MVC   0(2,R4),SARESULT+0  HH  R4 holds address of logo time
         MVI   2(R4),C':'
         MVC   3(2,R4),SARESULT+2  MM
         MVI   5(R4),C':'
         MVC   6(2,R4),SARESULT+4  SS
         LR    R1,R13           get own savearea address
         L     R13,4(,R13)      restore caller's savearea address
         FREEMAIN RU,A=(R1),LV=LWORKA free savearea storage
         LM    R14,R12,12(R13)  restore caller's regs
         SLR   R15,R15          set return code of zero
         BR    R14              return to caller
*                  J  F  M  A  M  J  J  A  S  O  N  D
NOTLEAP  DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31)
LEAP     DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31)
P19      DC    P'1900000'              packed EPOCH
WORKAREA DS    0F                      working storage for DATETIME
         DS    18F                     DATETIME's save area
SADWD    DS    D                       year
SABINY   EQU   SADWD+0,4               binary
SAPAKY   EQU   SADWD+4,4               packed 000Y,YYYF
*
SADWD2   DS    D                       julian day of year
SABIND   EQU   SADWD2+0,4              binary
SAPAKD   EQU   SADWD2+6,2              packed DDDF
*
SADWD3   DS    D                       gregorian month, day of month
SABINMD  EQU   SADWD3+0,4              binary 0000MMDD
SAPAKMD  EQU   SADWD3+5,3              packed   0MMDDF
SAPAKMDX EQU   *-1,1                   sign repair
*
SAARG    DS    D                       HHMMSSth,YYYYDDDF
SAPAKDDD EQU   SAARG+6,2              +0 1 2 3  4 5 6 7
*
SARESULT DS    0CL16                   nearly final result
SACHR    DS    0CL15
SACHRTM  DS    C'HHMMSSth'
SACHRY   DS    C'19YY'
SACHRD   DS    C'DDD'
SACHRX   EQU   *-1,1                   sign repair
         DS    C' '
SACHRMD  EQU   SACHRD,4                C'MMDD'
         DS    0D                      align
LWORKA   EQU  *-WORKAREA
//ASM     EXEC PGM=IFOX00,REGION=1024K
//SYSLIB   DD  DISP=SHR,DSN=SYS1.UMODMAC,DCB=LRECL=32720
//         DD  DISP=SHR,DSN=SYS2.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD  UNIT=VIO,SPACE=(1700,(600,100))
//SYSUT2   DD  UNIT=VIO,SPACE=(1700,(300,50))
//SYSUT3   DD  UNIT=VIO,SPACE=(1700,(300,50))
//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1089
//SYSPUNCH DD  DISP=(NEW,PASS,DELETE),
//             UNIT=VIO,SPACE=(TRK,(2,2)),
//             DCB=(BLKSIZE=80,LRECL=80,RECFM=F)
//SYSIN    DD  *
ISTNSC00 CSECT ,
         NETSOL SYSTEM=VS2
         END   ,
//LKED    EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL',REGION=1024K
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DISP=(OLD,DELETE,DELETE),DSN=*.ASM.SYSPUNCH
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.VTAMLIB(ISTNSC00)
//SYSUT1   DD  UNIT=VIO,SPACE=(1024,(200,20))
//*
//
