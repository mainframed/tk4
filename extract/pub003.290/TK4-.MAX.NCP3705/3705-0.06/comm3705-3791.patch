--- a/comm3705.c.orig	2012-02-22 10:34:52.002875723 -0500
+++ b/comm3705.c	2012-02-22 10:39:12.419864547 -0500
@@ -124,6 +124,7 @@
     {"switched","%s"},
     {"lnctl","%s"},
     {"debug","%s"},
+    {"emu3791","%s"},
     {NULL,NULL}
 };
 
@@ -138,7 +139,8 @@
     COMMADPT_KW_ENABLETO,
     COMMADPT_KW_SWITCHED,
     COMMADPT_KW_LNCTL,
-    COMMADPT_KW_DEBUG
+    COMMADPT_KW_DEBUG,
+    COMMADPT_KW_EMU3791
 } comm3705_kw;
 
 //////////////////////////////////////////////////////////////////////
@@ -1473,6 +1475,7 @@
         dev->commadpt->sfd=-1;
         dev->commadpt->lport=0;
         dev->commadpt->debug_sna=0;
+        dev->commadpt->emu3791=0;
 
         for(i=0;i<argc;i++)
         {
@@ -1520,6 +1523,10 @@
                         errcnt++;
                     }
                     break;
+                case COMMADPT_KW_EMU3791:
+                    if(strcasecmp(res.text,"yes")==0 || strcmp(res.text,"1"))
+                        dev->commadpt->emu3791=1;
+                    break;
                 default:
                     break;
             }
@@ -2157,6 +2164,64 @@
         put_bufpool(&ca->sendq, eleptr);
 }
 
+enum fid_remap {
+	MAP_FID1_FID2,
+	MAP_FID2_FID1
+};
+
+static void th_remap(enum fid_remap r, BYTE * thptr)
+{ /* for 3791 support, remaps SNA FID1 <--> FID2 TH headers */
+int     thmpf;
+int     thm2;
+int     thdaf;
+int     thoaf;
+int     thsnf;
+int     len;
+
+    if (r == MAP_FID1_FID2)
+    {
+        thmpf = thptr[0];
+        thm2  = thptr[1];
+        thdaf = (thptr[2] << 8) + thptr[3];
+        thoaf = (thptr[4] << 8) + thptr[5];
+        thsnf = (thptr[6] << 8) + thptr[7];
+        len = (thptr[8] << 8) + thptr[9];
+        len += 10;
+        thptr[0] = (len >> 8) & 0xff;
+        thptr[1] = len & 0xff;
+        thptr[2] = 0x00;
+        thptr[3] = 0x00;
+        thptr[4] = 0x20 | (thmpf & 0x0f);
+        thptr[5] = thm2;
+        thptr[6] = thdaf & 0xff;
+        thptr[7] = thoaf & 0xff;
+        thptr[8] = (thsnf >> 8) & 0xff;
+        thptr[9] = thsnf & 0xff;
+    }
+    else
+    { /* map fid2 to fid1 */
+        len = (thptr[0] << 8) + thptr[1];
+        thmpf = thptr[4];
+        thm2  = thptr[5];
+        thdaf = thptr[6];
+        thoaf = thptr[7];
+        thsnf = (thptr[8] << 8) + thptr[9];
+        thdaf |= 0x3800;   /* subarea = 7 (maxsuba=31) */
+        thoaf |= 0x0800;   /* subarea = 1 (maxsuba=31) */
+        len -= 10;
+        thptr[0] = 0x10 | (thmpf & 0x0f);
+        thptr[1] = thm2;
+        thptr[2] = (thdaf >> 8) & 0xff;
+        thptr[3] = thdaf & 0xff;
+        thptr[4] = (thoaf >> 8) & 0xff;
+        thptr[5] = thoaf & 0xff;
+        thptr[6] = (thsnf >> 8) & 0xff;
+        thptr[7] = thsnf & 0xff;
+        thptr[8] = (len >> 8) & 0xff;
+        thptr[9] = len & 0xff;
+    }
+}
+
 /*-------------------------------------------------------------------*/
 /* Execute a Channel Command Word                                    */
 /*-------------------------------------------------------------------*/
@@ -2168,6 +2233,7 @@
 BYTE    *piudata;
 int     piusize;
 void    *eleptr;
+int     llsize;
     
     UNREFERENCED(flags);
     UNREFERENCED(chained);
@@ -2215,6 +2281,12 @@
                     piusize += 10;    // for FID1 TH
                     iobuf[0] = BUFPD;
                     memcpy (&iobuf[BUFPD], piudata, piusize);
+                    if (dev->commadpt->emu3791) {
+                        llsize = piusize + BUFPD;
+                        iobuf[0] = (llsize >> 8) & 0xff;
+                        iobuf[1] = llsize & 0xff;
+                        th_remap(MAP_FID1_FID2, &iobuf[BUFPD]);
+                    }
                     *residual=count - (piusize + BUFPD);
                     logdump("READ", dev, &iobuf[BUFPD], piusize);
                     if (dev->commadpt->debug_sna)
@@ -2231,6 +2303,15 @@
                 break;
 
         /*---------------------------------------------------------------*/
+        /* 3791 WRITE BLOCK                                              */
+        /*---------------------------------------------------------------*/
+        case 0x05:
+                logdump("WRITE BLOCK", dev, iobuf, count);
+                *residual=0;
+                *unitstat=CSW_CE|CSW_DE;
+                break;
+
+        /*---------------------------------------------------------------*/
         /* WRITE type CCWs                                               */
         /*---------------------------------------------------------------*/
         case 0x09:   /* WRITE BREAK */
@@ -2238,6 +2319,8 @@
                 dev->commadpt->write_ccw_count++;
                 dev->commadpt->unack_attn_count = 0;
                 logdump("WRITE", dev, iobuf, count);
+                if (dev->commadpt->emu3791 && (iobuf[4] & 0xf0) == 0x20)
+                    th_remap(MAP_FID2_FID1, iobuf);
                 if ((iobuf[0] & 0xf0) == 0x10) {  // if FID1
                     if (dev->commadpt->debug_sna)
                         format_sna(iobuf, "WR", dev->ssid, dev->devnum);
--- a/comm3705.h.orig	2012-02-22 11:13:21.203718914 -0500
+++ b/comm3705.h	2012-02-22 11:12:06.542866702 -0500
@@ -39,7 +39,8 @@
         hangup:1,               /* host initated shutdown                   */
         is_3270:1,              /* 0=tty 1=3270                             */
         eol_flag:1,             /* 1 = CR has been received                 */
-        debug_sna:1;            /* 1 = write debug messages                 */
+        debug_sna:1,            /* 1 = write debug messages                 */
+        emu3791:1;              /* mode (0=default=3705;1=3791)             */
     U32 rlen3270;               /* amt of data in 3270 recv buf             */
     BYTE telnet_cmd;            /* telnet command */
 
