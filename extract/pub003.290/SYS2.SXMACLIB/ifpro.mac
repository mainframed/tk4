         MACRO
         IFPRO &TRUE,&FALSE,&P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8,&P9,&P10,  *
               &P11,&P12,&P13,&P14,&P15,&P16,&P17,&P18,&P19,&P20
.*#-------------------------------------------------------------------*
.*#  IFPRO  PROCESSES CONDITION STATEMENTS IN STUCTURED PROGRAMMING   *
.*#-------------------------------------------------------------------*
         COPY  IFGLO
         LCLC  &INST                       INSTRUCTION
         LCLC  &COND                       CONDITION CODE
         LCLC  &OPND                       WORK-FIELD
         LCLA  &I
         LCLC  &OP1
         LCLC  &OP2
         LCLC  &OP3
         LCLC  &OP4
         LCLA  &CCNUM                      NUMERIC CC MASK          SLB
.*--------------------------------------------------------------------*
.*       FORMAL TEST: NUMBER OF OPERANDS  AND 'AND' OR  'OR' PROCESS. *
.*--------------------------------------------------------23-09-80-RS-*
&I       SETA  2                           SKIP TRUE AND FALSE PARAM
         AIF   ('&P1' NE 'DOEXIT').FOR01   HANDLE DOEXIT IDENTIFIER SLB
&DOXITLB SETA  &DOXITLB+1                  COMPUTE FOR DOEXIT LABEL SLB
&I       SETA  3                       SKIP TRUE, FALSE, & 'DOEXIT' SLB
.FOR01   ANOP                                                       SLB
&I       SETA  &I+1
         AIF   ('&SYSLIST(&I)' EQ '').FEHL10
&I       SETA  &I+1
         AIF   ('&SYSLIST(&I)' EQ 'AND').FOR01
         AIF   ('&SYSLIST(&I)' EQ 'OR').FOR01
         AIF   ('&SYSLIST(&I)' NE '').FEHL10
.*--------------------------------------------------------------------*
.*       SCANNING OF THE OPERANDS                                     *
.*--------------------------------------------------------23-09-80-RS-*
&I       SETA  2
         AIF   ('&P1' NE 'DOEXIT').BIGLOP  HANDLE DOEXIT IDENTIFIER SLB
&I       SETA  3                       SKIP TRUE, FALSE, & 'DOEXIT' SLB
.BIGLOP  ANOP
&I       SETA  &I+1
         AIF   ('&SYSLIST(&I)' EQ '').MACEND
.*-----------------------------------------------------------------SLB*
.*       HANDLE POSSIBLE CONDITION CODE MASK                       SLB*
.*-----------------------------------------------------------------SLB*
         AIF   (N'&SYSLIST(&I) NE 1).NOTCC
&COND    SETC  '&SYSLIST(&I,1)'                 GET POSSIBLE CC VAL SLB
         AGO   .ER00                                                SLB
.NOTCC   ANOP                                                       SLB
.*--------------------------------------------------------------------*
.*       WORK ON ASSEMBLE INSTRUCTIONS AND GENERATE CODE              *
.*--------------------------------------------------------23-09-80-RS-*
         AIF   ('&SYSLIST(&I)'(1,1) NE '(').FEHL05 NOT IN PARENTHESES
         AIF   (N'&SYSLIST(&I) GT 6).FEHL08        TOO MANY OPERANDS
         AIF   (N'&SYSLIST(&I) LT 1).FEHL09        TOO FEW OPERANDS
.*--------------------------------------------------------------------*
.*       ELIMINATE OP-CODE AND BRANCH CONDITION                       *
.*--------------------------------------------------------------------*
&INST    SETC  '&SYSLIST(&I,1)'                    GET OP CODE
&OP1     SETC  '&SYSLIST(&I,2)'
         AIF   (N'&SYSLIST(&I) EQ 4).OP4
.*
&OP2     SETC  '&SYSLIST(&I,3)'
         AIF   ('&INST'(1,2) EQ 'CF').OP2C         NOT COMPARE INST SLB
         AIF   ('&INST'(1,4) EQ 'CSST').OP2C       NOT COMPARE INST SLB
         AIF   ('&INST'(1,1) EQ 'C').OP5C          COMPARE INSTRUCTION
.OP2C    ANOP                                      NOT COMPARE INST SLB
         AIF   (N'&SYSLIST(&I) NE 2).OP1C                           SLB
&COND    SETC  '&SYSLIST(&I,2)'                    OP,CC            SLB
         AGO   .OP5END                                              SLB
.OP1C    ANOP                                                       SLB
         AIF   (N'&SYSLIST(&I) NE 3).OP1CA                          SLB
&COND    SETC  '&SYSLIST(&I,3)'                    OP,OP1,CC        SLB
         AGO   .OP5END                                              SLB
.OP1CA   ANOP                                                       SLB
.*
&OP3     SETC  '&SYSLIST(&I,4)'
         AIF   (N'&SYSLIST(&I) EQ 6).OP6C                           SLB
&COND    SETC  '&SYSLIST(&I,5)'                  OP,OP1,OP2,OP3,CC  SLB
         AGO   .OP5END
.OP6C    ANOP                                                       SLB
&OP4     SETC  '&SYSLIST(&I,5)'               OP,OP1,OP2,OP3,OP4,CC SLB
&COND    SETC  '&SYSLIST(&I,6)'                                     SLB
         AGO   .OP5END                                              SLB
.*
.OP5C    ANOP
         AIF   ('&INST'(1,4) EQ 'CLCL').OP5C1      CLCLE/CLCLU      SLB
         AIF   ('&INST'(1,5) EQ 'CLFIT').OP5C1     CLFIT            SLB
         AIF   ('&INST'(1,4) EQ 'CLRT').OP5C1      CLRT             SLB
         AIF   ('&INST'(1,3) EQ 'CRT').OP5C1       CRT              SLB
&OP3     SETC  '&SYSLIST(&I,5)'                   OP,OP1,OP2,CC,OP3 SLB
&COND    SETC  '&SYSLIST(&I,4)'
         AGO   .OP5END                                              SLB
.OP5C1   ANOP                                                       SLB
&OP2     SETC  '&SYSLIST(&I,4)'                   OP,OP1,CC,OP2,OP3 SLB
&OP3     SETC  '&SYSLIST(&I,5)'                                     SLB
&COND    SETC  '&SYSLIST(&I,3)'                                     SLB
.*
.OP5END  ANOP
&OPND    SETC  '&OP1'.','.'&OP2'.','.'&OP3'
         AGO   .OPEND
.OP4     ANOP                                      OP,OP1,OP2,OP3
         AIF   ('&INST'(1,2) EQ 'CK').OP3C         NOT COMPARE INST SLB
         AIF   ('&INST'(1,2) EQ 'CM').OP3C         NOT COMPARE INST SLB
         AIF   ('&INST'(1,4) EQ 'CUSE').OP4C       COMPARE INST     SLB
         AIF   ('&INST'(1,2) EQ 'CU').OP3C         NOT COMPARE INST SLB
         AIF   ('&INST'(1,1) EQ 'C').OP4C          COMPARE INSTRUCTION
         AIF   ('&INST'(1,2) EQ 'KD').OP4C         COMPARE INST     SLB
         AIF   ('&INST'(1,2) EQ 'KE').OP4C         COMPARE INST     SLB
         AIF   ('&INST'(1,2) EQ 'KX').OP4C         COMPARE INST     SLB
.OP3C    ANOP
&OP2     SETC  '&SYSLIST(&I,3)'                       OP,OP1,OP2,CC SLB
&COND    SETC  '&SYSLIST(&I,4)'
         AGO   .OP4END
.*
.OP4C    ANOP
&OP2     SETC  '&SYSLIST(&I,4)'                       OP,OP1,CC,OP2 SLB
&COND    SETC  '&SYSLIST(&I,3)'
.*
.OP4END  ANOP
&OPND    SETC  '&OP1,&OP2'
.*
.OPEND   ANOP
.*--------------------------------------------------------------------*
.*       GENERATE ASSEMBLER INSTRUCTION                               *
.*--------------------------------------------------------23-09-80-RS-*
         COPY  S37XOPS                                              SLB
         AGO   .ER00                                                SLB
.GENIT   ANOP                                                       SLB
         &INST &OPND
.*--------------------------------------------------------------------*
.*       COMPUTE INVERTED CONDITION CODE                              *
.*--------------------------------------------------------23-09-80-RS-*
.ER00    ANOP
         AIF   ('&COND' NE 'H').ER01
&COND    SETC  '2'
         AGO   .ER99
.*
.ER01    ANOP
         AIF   ('&COND' NE 'EQ').ER02
&COND    SETC  '8'
         AGO   .ER99
.*
.ER02    ANOP
         AIF   ('&COND' NE 'L').ER03
&COND    SETC  '4'
         AGO   .ER99
.*
.ER03    ANOP
         AIF   ('&COND' NE 'LE').ER04
&COND    SETC  '13'
         AGO   .ER99
.*
.ER04    ANOP
         AIF   ('&COND' NE 'NH').ER05
&COND    SETC  '13'
         AGO   .ER99
.*
.ER05    ANOP
         AIF   ('&COND' NE 'NL').ER06
&COND    SETC  '11'
         AGO   .ER99
.*
.ER06    ANOP
         AIF   ('&COND' NE 'NE').ER07
&COND    SETC  '7'
         AGO   .ER99
.*
.ER07    ANOP
         AIF   ('&COND' NE 'O').ER08
&COND    SETC  '1'
         AGO   .ER99
.*
.ER08    ANOP
         AIF   ('&COND' NE 'P').ER09
&COND    SETC  '2'
         AGO   .ER99
.*
.ER09    ANOP
         AIF   ('&COND' NE 'M').ER10
&COND    SETC  '4'
         AGO   .ER99
.*
.ER10    ANOP
         AIF   ('&COND' NE 'NP').ER11
&COND    SETC  '13'
         AGO   .ER99
.*
.ER11    ANOP
         AIF   ('&COND' NE 'NM').ER12
&COND    SETC  '11'
         AGO   .ER99
.*
.ER12    ANOP
         AIF   ('&COND' NE 'Z').ER13
&COND    SETC  '8'
         AGO   .ER99
.*
.ER13    ANOP
         AIF   ('&COND' NE 'NZ').ER14
&COND    SETC  '7'
         AGO   .ER99
.*
.ER14    ANOP
         AIF   ('&COND' NE 'NO').ER15
&COND    SETC  '14'
         AGO   .ER99
.*
.ER15    ANOP
         AIF   ('&COND' NE 'E').ER16
&COND    SETC  '8'
         AGO   .ER99
.*
.ER16    ANOP
         AIF   ('&COND' NE 'GE').ER17
&COND    SETC  '11'
         AGO   .ER99
.*
.ER17    ANOP
         AIF   ('&COND' NE 'GT').ER18
&COND    SETC  '2'
         AGO   .ER99
.*
.ER18    ANOP
         AIF   ('&COND' NE 'LT').ER19
&COND    SETC  '4'
         AGO   .ER99
.*
.ER19    ANOP
&CCNUM   SETA  &COND                       S37X EXTENSION ALLOWS    SLB
         AIF   (&CCNUM LT 1).ER20          NUMERIC CONDITION MASK   SLB
         AIF   (&CCNUM GT 14).ER20         FOR COMPATIBLITY WITH    SLB
&COND    SETC  '&CCNUM'                    HLASM TOOLKIT            SLB
         AGO   .ER99                                                SLB
.*
.ER20    ANOP                                                       SLB
         AGO   .FEHL11
.*
.ER99    ANOP
&I       SETA  &I+1
.*-----------------------------------------------------------------SLB*
.*       HANDLE CONDITION CODE TESTING FOR DOEXIT CONDITIONS       SLB*
.*-----------------------------------------------------------------SLB*
         AIF   ('&P1' NE 'DOEXIT').NOTEXIT                          SLB
.*-----------------------------------------------------------------SLB*
.*       GENERATE BRANCH IF TRUE LABEL FOR 'OR' (OR LAST PARAM)    SLB*
.*-----------------------------------------------------------------SLB*
         AIF   ('&SYSLIST(&I)' EQ 'AND').BIGAND                     SLB
&OPND    SETC  '&COND,&IFPRAEF&TRUE'                                SLB
         AIF   ('&ASMMREL' NE 'ON').BASE02 CHECK MACRO LEVEL        SLB
         BRC   &COND,&IFPRAEF&TRUE         BRANCH IF TRUE           SLB
         AGO   .BIGLOP                                              SLB
.BASE02  ANOP                                                       SLB
         BC    &OPND                       BRANCH IF TRUE           SLB
         AGO   .BIGLOP                                              SLB
.*-----------------------------------------------------------------SLB*
.*       GENERATE BRANCH IF NOT TRUE LABEL FOR 'AND'               SLB*
.*-----------------------------------------------------------------SLB*
.BIGAND  ANOP                                                       SLB
&OPND    SETC  '15-&COND,##XT&DOXITLB'                              SLB
         AIF   ('&ASMMREL' NE 'ON').BASE01 CHECK MACRO LEVEL        SLB
         BRC   15-&COND,##XT&DOXITLB       BRANCH IF FALSE          SLB
         AGO   .BIGLOP                                              SLB
.BASE01  ANOP                                                       SLB
         BC    &OPND                       BRANCH IF FALSE          SLB
         AGO   .BIGLOP                                              SLB
.*--------------------------------------------------------------------*
.*       GENERATE BRANCH IF NOT TRUE LABEL (FOR 'AND' OR LAST PARAM)  *
.*--------------------------------------------------------23-09-80-RS-*
.NOTEXIT ANOP                                                       SLB
         AIF   ('&SYSLIST(&I)' EQ 'OR').BIGOR
&OPND    SETC  '15-&COND,&IFPRAEF&FALSE'                            SLB
         AIF   ('&ASMMREL' NE 'ON').BASE11 CHECK MACRO LEVEL        SLB
         BRC   15-&COND,&IFPRAEF&FALSE     BRANCH IF NOT TRUE       SLB
         AGO   .BIGLOP                                              SLB
.BASE11  ANOP                                                       SLB
         BC    &OPND                       BRANCH IF NOT TRUE
         AGO   .BIGLOP
.*--------------------------------------------------------------------*
.*       GENERATE BRANCH IF NOT TRUE LABEL FOR 'OR' PROCESSING        *
.*--------------------------------------------------------23-09-80-RS-*
.BIGOR   ANOP
&OPND    SETC  '&COND,&IFPRAEF&TRUE'
         AIF   ('&ASMMREL' NE 'ON').BASE12 CHECK MACRO LEVEL        SLB
         BRC   &COND,&IFPRAEF&TRUE         BRANCH IF TRUE           SLB
         AGO   .BIGLOP                                              SLB
.BASE12  ANOP                                                       SLB
         BC    &OPND                       BRANCH IF TRUE
         AGO   .BIGLOP
.*
         COPY  IFERR
.*
.MACEND  ANOP
         AIF   ('&P1' NE 'DOEXIT').PRODONE                          SLB
&OPND    SETC  '##XT&DOXITLB'                                       SLB
&OPND    DS    0H                                                   SLB
.PRODONE ANOP                                                       SLB
         MEXIT
         MEND
