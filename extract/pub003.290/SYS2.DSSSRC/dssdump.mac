DSSDUMP  TITLE 'D S S D U M P  ***  DATA SET DUMP IN ADRDSSU FORMAT'
         PUNCH '   SETCODE AC(1) '
         PUNCH ' ORDER DSSDUMP(P) '   ***** MAKE DUMPS EASIER *****
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES    SET LOCAL OPTIONS
         SPACE 1
***********************************************************************
*                                                                     *
*    DSSDUMP - QUICK AND DIRTY SUBSTITUTE FOR MVS 3.8J USERS          *
*                                                                     *
*    PROGRAM IS AUTHORIZED, AND REENTRANT (but not all subroutines)   *
*    REQUIRED DD CARDS:                                               *
*      SYSPRINT - PROCESSING LOG                                      *
*      SYSIN    - REQUESTS:                                           *
*             Note that all reserved words may be abbreviated to the  *
*             first three characters (e.g., OPT for OPTIONS)          *
*        OPTIONS {ENQ,NOENQ,TEST,DEBUG,NODEBUG}   <anwhere in SYSIN>  *
*                {ALLDATA,EXPORT,LIST,SHOW}       <anwhere in SYSIN>  *
*             ENQ       issues an exclusive ENQ TEST for each data    *
*                       set. Dump continues if DS not available,      *
*                       and issues RC=4. Applies from prior DUMP on.  *
*             NOENQ     (default). Dumps DS as is.                    *
*             ALLDATA × ALLEXCP   Causes all tracks, including unused *
*                       ones, to be written out. May be needed to     *
*                       recover from invalid, non-zero LSTAR.         *
*                       This option also preserves LABEL=SUL data.    *
*             EXPORT    modifies the output DSCB1 by removing any     *
*                       expiration date and password flags.           *
*             TEST      bypasses all TAPE output. Note that file has  *
*                       been opened already, and will be empty.       *
*             DEBUG     -not implemented-                             *
*             NODEBUG   -not implemented-                             *
*             LIST × SHOW   - display current OPTION settings.        *
*        INCLUDE mask × DUMP mask - one or more dump requests per run *
*             mask      specifies a data set name (unquoted). If it   *
*                       contains an asterisk, question mark, or       *
*                       percent sign, it is treated as a mask.        *
*                       A name ending in a period is treated as a     *
*                       mask followed by an implied **                *
*                       In MVS (VSAM catalog), the first index level  *
*                       may not contain a mask character. Also note   *
*                       that VSAM catalog processing does not support *
*                       detection or processing of alias entries.     *
*                       Note that a percent sign is treated as a      *
*                       positional mask (one to one correspondence    *
*                       of characters/mask to dsname).                *
*                       Any number of DUMP cards may be used in a run *
*                       but only about 700 data sets will fit in the  *
*                       name table (assembly option)                  *
*        DUMP mask VOLUME(serial)   Processes matching data sets on   *
*                       that volume serial only. If this results in   *
*                       duplicate data set names, a .D#nnnnnn is      *
*                       appended to duplicates on higher volume       *
*                       serials (i.e., the cataloged entry may be the *
*                       one that gets renamed). Masking bytes are     *
*                       valid in any position in the mask.            *
*        EXCLUDE mask        (optional) follows relevant DUMP card    *
*             mask      as above. Excludes matching data sets chosen  *
*                       by the previous DUMP/INCLUDE/SELECT card.     *
*        PREFIX name    causes all data set names to be prefixed by   *
*                       the specified text string. It is not required *
*                       to be an index level (e.g., SYS9.), but if    *
*                       not, generated names may be syntactically     *
*                       invalid. Result names are truncated to 44     *
*                       characters, and a trailing period is blanked. *
*                       Only one PREFIX card may be used per run,     *
*                       and it is mutually exclusive of RENAME and    *
*                       STRIP options.                                *
*        STRIP name     The specified string is removed from any DSN  *
*                       where it is found. Multiple STRIP and RENAME  *
*                       requests are supported (up to 16; ASM option) *
*        RENAME oldname newname   The specified string is replaced in *
*                       any DSN found and replaced by prefix newname. *
*                       Up to 16 RENAME and STRIP requests are legal. *
*                       All strings in PREFIX/RENAME/STRIP are        *
*                       limited to 23 characters (assembly option).   *
*                                                                     *
*      TAPE     - UNIT,DSN,VOLSER - dump tape(s) - in DSS format,     *
*                            uncompressed; TEST assumed if missing.   *
*        RECFM=U, BLKSIZE=65520 is the default for tape output.       *
*        RECFM=U  7892<block size<65520 is supported.                 *
*        RECFM=V  is supported, with blocks 7900<block size<32760     *
*                                                                     *
*        For DASD output, the range is 7892<data size<32760, with     *
*        the default being either the track size (if >=7892) or the   *
*        half-track size for modulo devices.                          *
*                                                                     *
*      PARM=EXPORT is the only supported PARM OPTION at present.      *
*                                                                     *
*                                                                     *
*    DSSDUMP MAY BE INVOKED AUTHORIZED FROM ANOTHER AUTHORIZED        *
*    PROGRAM, USING A PARM, AND A DD NAME LIST OVERRIDE:              *
*                                                                     *
*    LA   R1,PARMDD          COMBINED LIST                            *
*    LINK/ATTACH/SYNCH/L =V,BALR  etc. to invoke                      *
*                                                                     *
*    PARMDD  DC  A(PARMFLD),X'80',AL3(DDNMLST)                        *
*    PARMFLD DC  AL2(L'TEXT),C'parm text'                             *
*    DDNMLST DC  AL2(L'DDN),CL8'SYSIN',CL8'SYSPRINT',CL8'TAPE'        *
*        unwanted override positions may be blank or zero             *
*                                                                     *
***********************************************************************
*                                                                     *
*   The mapping in the DSSBLOCK DSECT adapted from material supplied  *
*   by Charlie, the DSSREST author, at OS_390@hotmail.com             *
*                                                                     *
***********************************************************************
*                                                                     *
*        COPYRIGHT 2009  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                        gerhard@valley.net                           *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
*   Not-for-profit use permitted, and distribution rights granted to  *
*   Hercules and CBT projects.                                        *
***********************************************************************
         PRINT &PRTSOR
DSSDUMP  PGMHEAD ZERO31,BASE=(R11,R12),PARM=R9,BNDRY=PAGE,AM=24,RM=24
         L     R10,=A(DSSDUMPD)   GET SUBROUTINES AND STATIC DATA
         USING DSSDUMPD,R10  DECLARE SUBROUTINE AREA
         MVC   DYNIOWK(DYNIOLEN),PATIOWK    INIT I/O WORK AREAS GP09194
         TM    0(R9),X'80'   NORMAL OS PARM ?                   GP09194
         BNZ   SKIPORID      YES; NO DD NAME LIST               GP09194
         L     R14,0(,R1)    LOAD PARM POINTER                  GP09247
         CLI   2(R14),0      POSSIBLE TSO CP PARM ?             GP09247
         BE    SKIPORID      YES; NO DD NAME LIST               GP09247
         L     R1,4(,R9)     GET DD NAME LIST                   GP09194
         LA    R1,0(,R1)     CLEAN                              GP09194
         LTR   R1,R1         TEST                               GP09194
         BZ    SKIPORID      NULL LIST                          GP09194
         LH    R15,0(,R1)    GET PURPORTED LENGTH               GP09194
         LTR   R15,R15       NULL OR INVALID ?                  GP09194
         BM    BADPARM       INVALID                            GP09194
         BZ    SKIPORID      NULL LIST                          GP09194
         CH    R15,=H'24'    ROOM FOR THREE NAMES?              GP09194
         BL    TWOORID       NO                                 GP09194
         CLI   18(R1),C' '   ANYTHING THERE ?                   GP09194
         BNH   TWOORID       NO; IGNORE                         GP09194
         MVC   SYSDDNM,18(R1)   MOVE TAPE DD OVERRIDE           GP09194
TWOORID  CH    R15,=H'16'    ROOM FOR TWO NAMES?                GP09194
         BL    ONEORID       NO                                 GP09194
         CLC   10(8,R1),ZEROES  ANYTHING THERE ?                GP09194
         BE    ONEORID       NO; IGNORE                         GP09194
         CLC   10(8,R1),BLANKS  ANYTHING THERE ?                GP09194
         BE    ONEORID       NO; IGNORE                         GP09194
         MVC   SYSPRINT(8),10(R1)   MOVE SYSPRINT DD OVERRIDE   GP09194
ONEORID  CH    R15,=H'8'     ROOM FOR ONE NAME ?                GP09194
         BL    SKIPORID      NO                                 GP09194
         CLC   10(8,R1),ZEROES  ANYTHING THERE ?                GP09194
         BE    SKIPORID      NO; IGNORE                         GP09194
         CLC   10(8,R1),BLANKS  ANYTHING THERE ?                GP09194
         BE    SKIPORID      NO; IGNORE                         GP09194
         MVC   SYSIN(8),2(R1)   MOVE SYSIN DD OVERRIDE          GP09194
         B     SKIPORID      RESUME NORMAL CODE                 GP09194
BADPARM  WTO   'DSSDUMP: INVALID PARM OR DD NAME LIST'          GP09194
         ABEND 1234,DUMP                                        GP09194
         SPACE 1
SKIPORID PARMLOAD R8         LOOK AT PARM FIELD                 GP09247
         LTR   R9,R9         ANY TEXT?                          GP09247
         BNP   DONEPARM      USE IT                             GP09197
SKIPPRLP CLI   0(R8),C' '    CP SPACER ?                        GP09247
         BNE   SKIPPRCM      NO                                 GP09197
         LA    R8,1(,R8)     SKIP ONE SPACER                    GP09197
         BCT   R9,SKIPPRLP   TRY AGAIN                          GP09247
SKIPPRCM CH    R9,=H'6'      PARM=EXPORT ?                      GP09197
         BL    FAILPARM      NO; IGNORE                         GP09197
         OI    OPTFLAGS,FGEXP     (PRE)SET FOR EXPORT           GP09197
         CLC   =C'EXPORT',0(R8)  REALLY EXPECTED PARM?          GP09197
         BE    DONEPARM      USE IT                             GP09197
FAILPARM WTO   'DSSDUMP: INVALID PARM IGNORED'                  GP09197
         SPACE 1
DONEPARM LA    R8,RECREC     USE RECORD AREA IN MACRO EXPANSION
         USING CELLSECT,R8   DECLARE IT
         SERVINIT ,          INITIALIZE SUPPORT SERVICES
         SERVLOAD @INPREAD,@PARSER,@PRINTER              DYNAMIC
         SERVLOAD SUBCAT,SUBCOMP,SUBTREE,SUBVERB,SUBVTVAL,LFETCH=LINK
         MVC   #SUBCAT,@SUBCAT    COPY
         MVC   #SUBCOMP,@SUBCOMP  COPY
         PRTOPEN SYSPRINT,OPT=(ABEND,WTO)   MUST HAVE
         PRTL  '#  Version 0.97       DSS Format Data Set Dump',TITLE=1
*DEFER*  BANDAID INIT        *****DEBUG*****
*DEFER*  BANDAID SPIE        *****DEBUG*****
*---------------------------------------------------------------------*
*   WE NEED TO RUN AUTHORIZED FOR @VOLREAD'S DEB USE                  *
*---------------------------------------------------------------------*
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?
         BXLE  R15,R15,HAVEAUTH   YES; WHOOPPEE
         PRTL  '*** DSSDUMP must run authorized ***'
         PRTCLOSE ,
         ABEND 047,DUMP
         SPACE 1
*---------------------------------------------------------------------*
*   @VOLREAD USES A //VOLMOUNT DD DUMMY.  IF USER DIDN'T SUPPLY,      *
*     WE BUILD ONE HERE, BUT NEVER UNALLOCATE IT.                     *
*---------------------------------------------------------------------*
HAVEAUTH SERVCALL TIODD,DCVOLMNT  DID USER SUPPLY A VOLMOUNT DD ?
         LTR   R0,R0         ANY ADDRESS RETURNED ?
         BNZ   HAVEVMNT
         MVC   BUFTAPE(PATALLEN),PATALLOC   COPY ALLOCATION REQUEST
         LA    R1,BUFTAPE    POINT TO IT
         ST    R1,DB
         OI    DB,X'80'
         LA    R1,DB         PASS PRB
         DYNALLOC ,          ALLOCATE IT
*   NOTE THAT I NEVER UNALLOCATE - TOO BAD
         LTR   R15,R15
         BZ    HAVEVMNT      SUCCESSFUL
         ST    R15,DB
         PRTL  '*** No VOLMOUNT DD DUMMY found ***',NL,CC=NO
 PRTDATA '*** Dynamic Allocation failed: R15=',(DB,I,PADR),' Reason=',(*
               BUFTAPE+4,2,HEX,PADR),' Info=',(BUFTAPE+6,2,HEX)
         SPACE 1
*---------------------------------------------------------------------*
*   WE NEED TO KEEP THE FILE INFORMATION IN ORDER BY VOLUME SERIAL    *
*     AND DSNAME (PROCESSING ALL FILES PER VOLUME IS FASTER)          *
*   RATHER THAN SORTING STUFF, WE USE TREE ALGORITHM, BASED ON ONE    *
*   IN DONALD KNUTH'S ART OF COMPUTER PROGRAMMING, VOLUME 3.          *
*---------------------------------------------------------------------*
HAVEVMNT MVC   ROOTBALL(RECSIZE),ROOTPATT   INIT TREE STUMP
         SUBCALL INITREE     BUILD THE DUMP REQUEST TREE
         LTR   R15,R15       GOOD ?
         BZ    HAVETREE      OK
         PRTDATA '*** Fatal error - SUBTREE routine failed ***'
         B     PGMEXIT8      NO; QUIT
         SPACE 2
*---------------------------------------------------------------------*
*   INITIALIZE THE @VOLREAD ROUTINE. WE DO THIS NOW TO AVOID          *
*     STORAGE FRAGMENTATION PROBLEMS LATER.                           *
*---------------------------------------------------------------------*
HAVETREE VOLREAD LOAD        LOAD THE VOLUME READ ROUTINE
         SPACE 1
*---------------------------------------------------------------------*
*   OUTPUT GOES TO DDNAME TAPE. IF MISSING, WE RUN IN TEST MODE ONLY. *
*   1) SET DEFAULT BUFFER OF 65520 {<=32760 FOR DASD & RECFM=V(B)}    *
*   2) GET THE TIOT ENTRY AND CHECK THE UNIT TYPE                     *
*   3) GET THE JFCB - FAIL INVALID RECFM; ACCEPT BLKSIZE= OVERRIDE    *
*   4) USE EXCP FOR TAPE, AND BSAM FOR DASD                           *
*   5) BUILD APPROPRIATE CONTROL BLOCKS                               *
*   6) FOR BSAM OPEN, ALLOW JFCB/DSCB MERGE BLKSIZE OVERRIDE.         *
*   7) SET BLKSIZE DEPENDENT VALUES                                   *
*   N.B. ADRDSSU REQUIRES 7892 AS A MINIMUM SIZE                      *
MINBLOCK EQU   7892          SO WE SET IT HERE                  GP09207
*---------------------------------------------------------------------*
         LA    R3,BUFTAPE    GET TAPE OUTPUT BUFFER
         ST    R3,@BUF       SAVE BUFFER START
         ST    R3,@BUFCUR    SAVE AVAILABLE ADDRESS
         L     R4,=A(65520)  GET MAXIMUM BUFFER SIZE
         ST    R4,#BUFMAX    PROVISIONALLY SAVE MAXIMUM BUFFER SIZE
         LA    R0,BUFTAPE(R4)     PHYSICAL MEMORY LIMIT
         ST    R0,@MEMEND    SAVE FOR DSN TABLE
         SERVCALL TIODD,SYSDDNM   FIND TAPE DD                  GP09194
         LTR   R2,R0         FOUND IT ?
         BZ    TAPEDDNO      NO
         USING TIOENTRY,R2   DECLARE IT                         GP09207
         SERVCALL RJFCB,SYSDDNM   LOOK FOR JFCB                 GP09194
         BXH   R15,R15,TAPEDDNO
         USING INFMJFCB,R1                                      GP09207
         SR    R14,R14
         ICM   R14,3,JFCLRECL     CHECK LRECL                   GP09207
         ICM   R15,3,JFCBLKSI     CHECK BLOCK SIZE              GP09207
         MVC   DUMPDSN,JFCBDSNM   SAVE FOR VALIDITY CHECK       GP09317
         MVC   DUMPVOL,JFCBVOLS     (CAN'T DUMP OPEN DS)        GP09317
         CLI   JFCRECFM,0         UNSPECIFIED? -> U             GP09207
         BE    TAPERFUU
         CLI   JFCRECFM,X'C0'     RECFM=U ?                     GP09207
         BE    TAPERFUU
         TM    JFCRECFM,255-(DCBRECV+DCBRECBR+DCBRECSB) V(B)(S) GP09207
         BZ    TAPERFVV      NO
         DROP  R1                                               GP09207
 PRTDATA '*** Output DD',(SYSDDNM,DEB,PAD),'RECFM= not supported ***'
         B     PGMEXIT8
TAPERFVV MINH  R4,=H'32760'  SET RECFM=V DATA MAXIMUM
         OI    OPTFLAGS,FGVAR     SET VARIABLE MODE
         LTR   R14,R14       ANY RECORD LENGTH?
         BZ    TAPERVNL      NO
         LA    R14,4(,R14)   ALLOWANCE FOR RDW
TAPERVNL LTR   R15,R15       ANY BLOCK SIZE ?
         BZ    TAPELROK      NO; USE DEFAULT
         LTR   R14,R14       ANY RECORD LENGTH?
         BZ    TAPELROK      NO
         MIN   R15,(R14)     USE SMALLER VALUE
         B     TAPELROK
TAPERFUU LTR   R14,R14       ANY LRECL ?
         BZ    TAPELROK
         CR    R14,R15       SAME AS BLOCK SIZE?
         BE    TAPELROK
 PRTDATA '*** Output DD',(SYSDDNM,DEB,PAD),'LRECL ignored ***'
TAPELROK LTR   R15,R15       ANY BLOCK SIZE ?
         BZ    TAPEDFLT
         MIN   R4,(R15)      USE SMALLER VALUE
TAPEDFLT ICM   R6,7,TIOEFSRT      GET UCB                       GP09207
         BZ    TAPEDDNO      NONE
         DROP  R2            DONE WITH TIOT                     GP09207
         USING UCBOB,R6      HAVE UCB                           GP09207
         CLI   UCBTBYT3,UCB3TAPE                                GP09207
         BE    TAPEDDEX      REALLY TAPE
         MINH  R4,=H'32760'  SET DASD MAXIMUM
         CLI   UCBTBYT3,UCB3DACC  DASD ?                        GP09207
         BNE   TAPENU        ELSE DEVICE TYPE UNSUPPORTED
         IC    R15,UCBTBYT4  GET DEVICE TYPE                    GP09207
         N     R15,=X'0000000F'             MASK WHAT I KNOW
         BZ    TAPENU        ?
         SLL   R15,1         CONVERT TO HALFWORD OFFSET
         LH    R1,DASDSIZE-2(R15)           GET PREFERRED VALUE
         CH    R1,=AL2(MINBLOCK)  TOO SMALL FOR MINIMUM?        GP09207
         BL    DASD2WEE      YES; REGRETS                       GP09207
         MIN   (R4),(R1)     USE SMALLER OF DEFAUT OR JFCB      GP09201
         MVC   TAPEDCB(TAPELEN),PATTAPE   INIT TAPE DCB
         MVC   DCBDDNAM-IHADCB+TAPEDCB(8),SYSDDNM  UPDATE DDN   GP09194
 PRTDATA '   === Using BSAM mode for output DD',(SYSDDNM,DEB,PAD),'==='
         B     TAPEDDCM      YES; PROCEES
         SPACE 1
DASD2WEE PRTDATA '*** Output DD',(SYSDDNM,DEB,PAD),'not supported due t*
               o small track size ***'                          GP09207
         B     PGMEXIT8                                         GP09207
         SPACE 1
DASDSIZE DC    H'3625,20483,4892,27998,6144,14136,14660,7294' 2311-2314
         DC    H'13030,8368,19069,17600,13030,23476,27998' 3330-3390
         SPACE 1
TAPENU PRTDATA '*** Output DD',(SYSDDNM,DEB,PAD),'neither TAPE nor DASD*
                - TEST mode forced ***'
         OI    OPTFLAGS,FGTEST    SET TEST MODE
         B     TAPEDDCM
         DROP  R6                                               GP09207
TAPEDDEX MVC   TAPEDCB(TAPEXLEN),PATEXCP   INIT FOR EXCP MODE
         MVC   DCBDDNAM-IHADCB+TAPEDCB(8),SYSDDNM  UPDATE DDN   GP09194
         XC    DUMPVOL,DUMPVOL    INVALIDATE DUMP DSN CHECK     GP09317
         LA    R2,TAPEIOB    FOR EASIER SETTINGS
         USING IOBSTDRD,R2
         MVI   IOBFLAG1,IOBDATCH+IOBCMDCH   COMMAND CHAINING IN USE
         MVI   IOBFLAG2,IOBRRT2
         LA    R1,TAPEECB
         ST    R1,IOBECBPT
         LA    R1,TAPECCW
         ST    R1,IOBSTART   CCW ADDRESS
         ST    R1,IOBRESTR   CCW ADDRESS
         LA    R1,TAPEDCB
         ST    R1,IOBDCBPT   DCB
         LA    R0,1          SET BLOCK COUNT INCREMENT
         STH   R0,IOBINCAM
         DROP  R2
         MVC   TAPECCW+1(3),@BUF+1  WRITE FROM BUFFER
         TM    OPTFLAGS,FGTEST    SET TEST MODE
         BNZ   TAPEDDCM
 PRTDATA '   === Using EXCP mode for output DD',(SYSDDNM,DEB,PAD),'==='
         B     TAPEDDCM
TAPEDDNO PRTDATA '*** Output DD',(SYSDDNM,DEB,PAD),'not found - running*
                in TEST mode ***'
         OI    OPTFLAGS,FGTEST    SET TEST MODE
TAPEDDCM ST    R4,#BUFMAX    SAVE MAXIMUM BUFFER SIZE
         CH    R4,=AL2(MINBLOCK)   IS ADRDSSU MINIMUM?          GP09207
         BNL   TAPEGBLK      YES
 PRTDATA '*** Output block size',(#BUFMAX,I,PAD),'too small ***'
         B     PGMEXIT8
TAPEGBLK TM    OPTFLAGS,FGTEST    SET TEST MODE
         BNZ   TAPESETZ      DONE WITH TAPE; BUILD SIZES
         MVI   OCLIST,X'8F'  OPEN OUTPUT
         LA    R2,TAPEDCB    POINT TO DCB
         OPEN  ((R2),OUTPUT),MF=(E,OCLIST)  OPEN TAPE
         TM    DCBOFLGS-IHADCB(R2),DCBOFOPN
         BNZ   TAPEIMRG      CHECK FOR OPEN EXIT UPDATE
     PRTL  '*** Output DD won''t open - running in TEST mode ***',CC=NO
         OI    OPTFLAGS,FGTEST    SET TEST MODE
         B     TAPESETZ
TAPEIMRG TM    DCBMACR1-IHADCB+TAPEDCB,DCBMRECP  EXCP MODE?
         BNZ   TAPESETZ      USING EXCP
         TM    DCBRECFM-IHADCB+TAPEDCB,X'80'     RECFM=U ?
         BNZ   TAPESETZ
         OI    OPTFLAGS,FGVAR     RECFM=V
         SPACE 1
TAPESETZ L     R4,#BUFMAX    GET MERGED SIZE
         TM    OPTFLAGS,FGVAR     USING RECFM=V?
         BZ    TAPESETX      NO                                 GP09201
         SH    R4,=H'8'      ALLOW FOR BDW AND RDW
TAPESETX L     R3,@BUF
         AR    R3,R4         GET END ADDRESS
         ST    R3,@BUFEND    AND SAVE IT
         LR    R15,R4        COPY BUFMAX
         SH    R15,=AL2(DTPSIZE)  CONTROL BLOCK OVERHEAD
         ST    R15,#DATMAX   MAX DATA PER BLOCK
    PRTDATA '   === Data block size adjusted to',(#BUFMAX,I,PAD),'==='
         SPACE 2
*---------------------------------------------------------------------*
*   READ A RECORD FROM SYSIN. ABEND 2540 IF NOT SUPPLIED.             *
*   READ CARDS UNTIL A DUMP TYPE IS FOUND (DUMP/INCLUDE/SELECT)       *
*     IF SO, PUT THE CURRENT CARD BACK ON THE STACK, AND PROCESS      *
*     PREVIOUS REQUEST.                                               *
*   ECHO CARD AS APPROPRIATE                                          *
*---------------------------------------------------------------------*
         INPOPEN SYSIN,OPT=(ABEND,FOLD)     UPPER-CASE INPUT
         SPACE 2
CARDNEXT INPGET ,            CONTROL CARD LOOP
         BXH   R15,R15,CARDEOD   TREAT ERROR AS EOF
         LR    R7,R0         COPY INPUT LENGTH
         LR    R6,R1         COPY INPUT ADDRESS
         LR    R3,R7         PRESERVE CARD LENGTH
         MINH  R3,=H'72'     IGNORE SEQUENCE NUMBERS
         MVI   PAR$RQFG,PAR$PARK+PAR$COUQ+PAR$COUP
         PARSE (R6),(R3),OPT=KEYWORD
         LTR   R15,R15
         BNZ   PARSFAIL
         TM    PROFLAGS,PFGDUMP   DUMP PENDING ?
         BZ    CARDPRNT           NO; OK TO PRINT
         ICM   R3,15,PAR@TABL
         BZ    CARDPRNT      ALL BLANK
         USING PRSDSECT,R3   DECLARE RESULT LIST
         LA    R0,PRS$TEXT   VERB TO BE LOCATED
         LA    R1,WAITBXLE   DEFER PRINT ?
         SUBCALL SUBVERB
         LTR   R15,R15       DID IT WORK ?
         BNZ   CARDNPRT      YES; SKIP PRINT
CARDPRNT PRTDATA (' --> ''',NL),(0(R6),(R7)),''''
CARDNPRT ICM   R3,15,PAR@TABL
         BZ    CARDNEXT      ALL BLANK
         CLI   PRS$TEXT,C'*'  COMMENT CARD ?
         BE    CARDNEXT      YES; JUST GET ANOTHER
         LA    R0,PRS$TEXT   VERB TO BE LOCATED
         LA    R1,VERBBXLE   VERB TABLE
         SUBCALL SUBVERB
         LTR   R15,R15       DID IT WORK ?
         BNZR  R1            YES; INVOKE MATCHING ADDRESS
         SPACE 1
PARSBCD  PRTL  ' *** UNRECOGNIZED CONTROL CARD ***'
         OICC  4,4,RESULT=RETCODE
         B     CARDNEXT      GET ANOTHER CARD
         SPACE 1
PARSFAIL OICC  12
         PRTL  '0*** Unexpected PARSER failure ***'
         PRTCLOSE ,          WRITE MESSAGE BEFORE DUMP
         ABEND 666,DUMP
         SPACE 1
VERBBXLE PARKEYBX VERBTAB    DEFINE PARM VALUES
         SPACE 1
WAITBXLE PARKEYBX WAITTAB    DEFINE PARM VALUES
WAITTAB  PARKEYAD 'INCLUDE ',SETDUMP   SPECIFY DS MASK
WAITTAB2 PARKEYAD 'SELECT  ',SETDUMP   SPECIFY DS MASK
         PARKEYAD 'DUMP    ',SETDUMP   BEGIN DS SELECTION
WAITTABN PARKEYAD 'COPY    ',SETDUMP   BEGIN DS SELECTION
         SPACE 1
SETALLTK OI    OPTFLAGS,FGADAT   DUMP ALL ALLOCATED TRACKS
    PRTL  ' ***** All allocated tracks will be dumped *****',MODE=DEBUG
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETBUGON OI    OPTFLAGS,FGBUG  SET DEBUG MODE ON
         PRTL  ' ***** Debug mode now on *****',MODE=DEBUG
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETBUGOF NI    OPTFLAGS,255-FGBUG  SET DEBUG MODE OFF
         PRTL  ' ***** Debug mode now off *****',MODE=DEBUG
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETTSTON OI    OPTFLAGS,FGTEST   SET TAPE OUTPUT INHIBITED
         PRTL  ' ***** Output inhibited *****',MODE=DEBUG
         B     CARDNEXT      NEXT CARD
         SPACE 1
*---------------------------------------------------------------------*
*   SAVE RENAME/PREFIX DATA.                                          *
*     PREFIX index.          ALL DATA SET NAMES PREFIXED WITH .index  *
*     RENAME oldpfx. newpfx.   OLD PREFIX REPLACED BY NEW ONE.        *
*   NOTE THAT RENAME MAY NOT BE USED WHEN PREFIX IS SPECIFIED         *
*   IF newpfx. IS OMITTED, oldpfx. IS STRIPPED AND NOT REPLACED       *
*   A MAXIMUM OF MAXPFX RENAME CARDS MAY BE USED IN ONE RUN           *
*---------------------------------------------------------------------*
         SPACE 1
SETPFX   ICM   R3,15,PRSLINK      GET SECOND OPERAND            GP09197
         BZ    OPMISS                                           GP09197
         L     R0,PRS#TEXT        GET LENGTH                    GP09197
         CL    R0,=A(L'PFXNEW)    VALID ?                       GP09197
         BH    OP2LONG            NO                            GP09197
         OC    PRS$TEXT,BLANKS    UPPER-CASE                    GP09197
         SPACE 1                                                GP09197
         XC    PFXOLDL(PFXLEN),PFXOLDL   CLEAR RENAME STUFF     GP09197
         STC   R0,PFXNEWL         SAVE TEXT LENGTH              GP09197
         MVC   PFXNEW,PRS$TEXT    SAVE PREFIX TO BE DELETED     GP09197
         OI    PROFLAGS,PFPREF    SHOW PREFIX FOUND             GP09197
         ICM   R15,15,NUMPFX      OTHER PREFIX REQUESTS?        GP09197
         BZ    SETPFXCT           NO; SET ONE                   GP09197
         PRTV  MSGEXPFX           SHOW ERROR                    GP09197
         OICC  4             MINOR ERROR                        GP09197
SETPFXCT LA    R0,1                                             GP09197
         ST    R0,NUMPFX     FORCE ONE AND ONLY                 GP09197
         B     CARDNEXT                                         GP09197
MSGEXPFX VCON  ' *** RENAME/REPLACE IGNORED; NOT VALID WITH PREFIX ***'
         SPACE 1
SETREN   ICM   R3,15,PRSLINK      GET SECOND OPERAND            GP09197
         BZ    OPMISS                                           GP09197
         TM    PROFLAGS,PFPREF    WAS THERE A PREFIX REQUEST?   GP09197
         BZ    SETRENEW           NO; ADD THIS ONE              GP09197
         PRTV  MSGEXPFX           SHOW ERROR                    GP09197
         OICC  4             MINOR ERROR                        GP09197
         B     CARDNEXT                                         GP09197
         SPACE 1
SETRENEW L     R4,NUMPFX     GET PRIOR RENAME COUNT             GP09197
         CH    R4,=AL2(MAXPFX)  ROOM FOR MORE ?                 GP09197
         BL    SETRENAD      YES; GET ADDRESS                   GP09197
         PRTL  ' *** TOO MANY RENAME REQUESTS - IGNORED'        GP09197
         OICC  8                                                GP09197
         B     CARDNEXT                                         GP09197
         SPACE 1
SETRENAD LA    R4,1(,R4)     SET NEW COUNT                      GP09197
         ST    R4,NUMPFX     UPDATE                             GP09197
         MH    R4,=AL2(PFXLEN)    TIMES ENTRY SIZE              GP09197
         LA    R4,PFXOLDL-PFXLEN(R4)   POINT TO NEW ENTRY       GP09197
         L     R0,PRS#TEXT        GET LENGTH                    GP09197
         CL    R0,=A(L'PFXOLD)    VALID ?                       GP09197
         BH    OP2LONG            NO                            GP09197
         OC    PRS$TEXT,BLANKS    UPPER-CASE                    GP09197
         SPACE 1                                                GP09197
*TEST*   XC    PFXOLDL(PFXLEN),PFXOLDL   CLEAR RENAME STUFF     GP09197
         STC   R0,PFXOLDL         SAVE TEXT LENGTH              GP09197
         MVC   PFXOLD,PRS$TEXT    SAVE PREFIX TO BE DELETED     GP09197
         ICM   R3,15,PRSLINK      GET THIRD OPERAND             GP09197
         BZ    CARDNEXT                                         GP09197
         L     R0,PRS#TEXT        GET LENGTH                    GP09197
         CL    R0,=A(L'PFXNEW)    VALID ?                       GP09197
         BH    OP2LONG            NO                            GP09197
         OC    PRS$TEXT,BLANKS    UPPER-CASE                    GP09197
         SPACE 1                                                GP09197
         STC   R0,PFXNEWL         SAVE TEXT LENGTH              GP09197
         MVC   PFXNEW,PRS$TEXT    SAVE PREFIX TO BE PREPENDED   GP09197
         B     CARDNEXT                                         GP09197
         SPACE 1
*---------------------------------------------------------------------*
*   ACCEPT EXCLUSION MASKS FOR THE PREVIOUS DUMP REQUEST              *
*       EXCLUDE name×mask                                             *
*     MASKS END WITH A PERIOD, OR CONTAIN *, ?, OR %                  *
*     NONE OF THE ABOVE DEFINES A SIMPLE DATA SET NAME                *
*                                                                     *
*   THE ALLOWED NUMBER OF EXCLUDES IS DEFINED BY EXCMASKS REPEAT CNT  *
*---------------------------------------------------------------------*
         SPACE 1
GETXMASK TM    PROFLAGS,PFGDUMP   FOLLOWS A DUMP CARD ?
         BNZ   GETXMAS2           YEAH
 PRTL '*** Exclusion mask valid after a DUMP/SELect only ***',NL,CC=NO
         OICC  4                  MINOR ERROR?
         B     CARDNEXT
GETXMAS2 ICM   R3,15,PRSLINK      GET SECOND OPERAND
         BZ    OPMISS
         L     R0,PRS#TEXT        GET LENGTH
         CL    R0,=A(L'COMPMASK)  VALID ?
         BH    OP2LONG            NO
         ST    R0,DB              SAVE TEXT LENGTH
         OC    PRS$TEXT,BLANKS    UPPER-CASE
         SPACE 1
         INC   EXC#MASK,WORK=R15
         CH    R15,=AL2((EXC#MASK-EXCMASKS)/L'EXCMASKS)
         BNH   GETXMAS3           YES; CONTINUE
         PRTL  '*** Too many EXClude statements ***',NL,CC=NO
         OICC  4                  TOO BAD
         B     CARDNEXT
         SPACE 1
GETXMAS3 BCTR  R15,0              RELATIVE TO ZERO
         M     R14,=A(L'EXCMASKS)  (RE-USE LITERAL)
         LA    R4,EXCMASKS(R15)   FIND CURRENT ENTRY
         MVC   0(L'COMPMASK,R4),PRS$TEXT    USE IT
         LR    R1,R4         POINT TO MASK NAME
         BAL   R9,WHATMASK   ANALYZE WHAT WE ARE LOOKING AT
         CH    R15,=H'4'
         BNL   GETXSHOM      MASK
         PRTDATA '       Excluding data set',(0(R4),L'COMPMASK,PADL)
         B     CARDNEXT
         SPACE 1
GETXSHOM PRTDATA '       Excluding by mask:',(0(R4),L'COMPMASK,PADL)
         B     CARDNEXT
         SPACE 1
GETXMBAD PRTDATA '*** Mask',(0(R4),44,DEB,PAD),'invalid ***'
         B     PGMEXIT8
         SPACE 1
*---------------------------------------------------------------------*
*   SET ONE OR MORE OPTIONS BITS, ACCORDING TO SELF-DEFINING KEYWORDS *
*   ON OPTION CARDS.                                                  *
*---------------------------------------------------------------------*
         SPACE 1
SETOPT   ICM   R3,15,PRSLINK      GET SECOND OPERAND            GP09197
         BZ    OPMISS                                           GP09197
SETOFLAG OC    PRS$TEXT,BLANKS    UPPER CASE                    GP09197
         PARFGSET OPTSETP,ERR=SETOBAD,DONE=SETONEXT             GP09197
SETONEXT ICM   R3,15,PRSLINK      ANY MORE ?                    GP09197
         BZ    SETOSHOW           NO; READ ANOTHER CARD         GP09197
         CLI   PRS$TEXT,C'*'      COMMENTS?                     GP09197
         BNE   SETOFLAG           NO; CHECK IT                  GP09197
SETOSHOW PRTLIST MSGOPTS                                        GP09197
         B     CARDNEXT           READ NEXT CARD                GP09197
         SPACE 1
SETOBAD  PRTDATA '*** UNRECOGNIZED OPTION',(PRS$TEXT,DEB,PAD),'***'
         OICC  8                                                GP09197
         B     CARDNEXT                                         GP09197
         SPACE 1
MSGOPTS  FDPRT '      Options now on are : ',NL                 GP09197
         FDTM   OPTFLAGS,255-FGPSPO-FGWRITE,BZ=MSGOPTS0         GP09197
         FDFLAG OPTFLAGS,TABLE=OPTSHO,SPACE=1,LEN=80            GP09197
         FD    *END                                             GP09197
MSGOPTS0 FDPRT 'all off'                                        GP09197
         FD    *END                                             GP09197
         SPACE 1
OPTSHO   FLGTAB FGENQ,'ENQUEUE',MLEN=1                          GP09197
         FLGTAB FGVAR,'RECFM=V'                                 GP09197
         FLGTAB FGADAT,'ALLDATA'                                GP09197
         FLGTAB FGEXP,'EXPORT'                                  GP09197
         FLGTAB FGTEST,'TEST-MODE'                              GP09197
         FLGTAB FGBUG,'DEBUG-MODE'                              GP09197
         FLGTAB *END                                            GP09197
         SPACE 1
         PARKEYBX OPTSET     BXLE                               GP09197
OPTSET   PARKEYFG 'ENQUEUE',OPTFLAGS,0,FGENQ     ENQTEST        GP09197
OPTSET2  PARKEYFG 'NOENQUE',OPTFLAGS,FGENQ,0     SKIPENQ        GP09197
         PARKEYFG 'SKIPENQ',OPTFLAGS,FGENQ,0     SKIPENQ        GP09197
         PARKEYFG 'ALLDATA',OPTFLAGS,0,FGADAT    WRITE ALL      GP09197
         PARKEYFG 'ALLEXCP',OPTFLAGS,0,FGADAT    WRITE ALL      GP09197
         PARKEYFG 'TEST',OPTFLAGS,0,FGTEST       NO WRITE       GP09197
         PARKEYFG 'EXPORT',OPTFLAGS,0,FGEXP      RESET PROTECT  GP09197
         PARKEYFG 'LIST',OPTFLAGS,0,0            SHOW SETTINGS  GP09212
         PARKEYFG 'SHOW',OPTFLAGS,0,0            SHOW SETTINGS  GP09212
OPTSETN  PARKEYFG 'DEBUG',OPTFLAGS,0,FGBUG       TEST MODE      GP09197
         SPACE 2
***********************************************************************
*                                                                     *
*   Examine contents of COPY/DUMP CARD.                               *
*     COPY level.            Uses catalog lookup to find candidates.  *
*     COPY mask VOLUME(serial)   Uses VTOC entries                    *
*     COPY VOLUME(serial) mask   Uses VTOC entries                    *
*                                                                     *
***********************************************************************
SETDUMP  TM    PROFLAGS,PFGDUMP   DUMP REQUEST PENDING ?
         BZ    SETDUMP1           NO; EXAMINE THIS ONE
         INPKEEP ,                PUT THE INPUT CARD BACK
         B     ACTDUMP
SETDUMP1 ICM   R3,15,PRSLINK      GET SECOND OPERAND
         BZ    OPMISS
         XC    DB,DB              CLEAR LENGTHS
         MVC   CELLKEY,BLANKS     CLEAR VOL/DSN×MASK
SETDUMPC L     R0,PRS#TEXT        GET LENGTH
         CLC   =C'VOL',PRSKEYWD   IS IT VOL() OR VOL= ?
         BE    SETDUMPV           YES; DIFFERENT PROCESSING
         CLC   =C'SER',PRSKEYWD   IS IT SER() OR SER= ?
         BE    SETDUMPV           YES; DIFFERENT PROCESSING
         CLI   PRS$TEXT,C'*'      COMMENT OR MASK ?             GP09207
         BNE   SETDUMPM           NO                            GP09207
         CH    R0,=H'1'           COMMENTS FIELD ?              GP09207
         BE    SETDUMPX           YES; SEE WHAT WE HAVE         GP09207
SETDUMPM ICM   R14,15,DB          DONE DSN×MASK BEFORE?         GP09207
         BNZ   OP2MANY            YES; FAIL
         CL    R0,=A(L'CELLDSN)   VALID ?
         BH    OP2LONG            NO
         ST    R0,DB              SAVE TEXT LENGTH
         OC    CELLDSN,PRS$TEXT   COPY TEXT
         TRT   CELLDSN,TRTDSNM    DSN, POSSIBLE MASK?
         CLM   R2,1,=X'4'         FULL 44, OR BLANK STOP?
         BNH   SETDUMPN           ACCEPT IT
OPCHAR   PRTDATA '***',(PRS$TEXT,PAD,DEB),'contains illegal characters *
               ***'
         OICC  8
         B     ACTRESET           QUIT THIS ONE
         SPACE 1
SETDUMPN ICM   R3,15,PRSLINK      ANY MORE ?
         BNZ   SETDUMPC           YES; EXAMINE
SETDUMPX OI    PROFLAGS,PFGDUMP+PFGONCE   SHOW DUMP REQUESTED
         B     CARDNEXT
         SPACE 1
SETDUMPV ICM   R14,15,DB+4        DID WE GET A VOLUME SERIAL?   GP09207
         BNZ   OP2MANY            YES; DUPLICATE
         LTR   R0,R0              TEST LENGTH                   GP09207
         BZ    OPMISS             NEED A SERIAL
         CL    R0,=A(L'CELLVOL)   VALID ?
         BH    OP2LONG            NO
         ST    R0,DB+4            SAVE TEXT LENGTH
         OC    CELLVOL,PRS$TEXT
         SERVCALL UCBVS,CELLVOL   VALID SERIAL ?
         BXH   R15,R15,VOLNTMNT   NO
         LR    R15,R0
         CLI   UCBTBYT3-UCBOB(R15),UCB3DACC  DASD ?
         BE    SETDUMPN      LOOK FOR ANOTHER OPERAND
         PRTDATA '***',(CELLVOL,PAD),'is not DASD ***'
         OICC  8
         B     ACTRESET
VOLNTMNT PRTDATA '***',(CELLVOL,PAD),'is not available ***'
         OICC  8
         B     ACTRESET
         SPACE 1
ACTDUMP  CLI   CELLVOL,C' '       DID WE GET A VOLUME SERIAL?
         BH    SEARCHVL           YES; RUN VTOC
         CLI   CELLDSN,C' '       DID WE GET A MASK OR DSN
         BNE   SEARCHCT           YES; SEARCH CATALOG
OPMISS   PRTL  '*** DSname/Mask operand required; VOL(serial) optional *
               ***',CC=NO
         OICC  8
         B     ACTRESET
         SPACE 1
OP2MANY  PRTL  '*** Too many operands ***',CC=NO
         OICC  4
         B     ACTRESET
         SPACE 1
OP2LONG  PRTDATA '*** Operand',(PRS$TEXT,PAD,DEB),'too long ***'
         OICC  8                                                GP09197
         B     ACTRESET
         DROP  R3
         EJECT ,
***********************************************************************
*                                                                     *
*   PROCESS DATA SET SELECTION FOR 'DUMP level '                      *
*     Use IGGCSI00 OR SuperLocate to get non-VSAM data sets,          *
*     screen for DSORG, etc. and compare to mask.                     *
*                                                                     *
***********************************************************************
SEARCHCT MVC   COMPMASK,CELLDSN   COPY TO PERMANENT SPACE
         LA    R1,COMPMASK
         BAL   R9,WHATMASK   EXAMINE IT
         CH    R15,=H'4'     IS IT NAME OR MASK?
CATMASK  CATCALL INIT,COMPMASK,MODE=(@,BALR)
         BXH   R15,R15,CATNOLOC  FAILED
         PRTDATA '   === Processing catalog',(CSPRCAT,PAD,DEB)
         B     CATNEXT2
         SPACE 1
CATNOLOC PRTDATA '*** Catalog lookup failed',(CELLDSN,DEB,PAD),'***'
         OICC  8
         B     ACTRESET
         SPACE 1
*---------------------------------------------------------------------*
*  GET NEXT CATALOG ENTRY                                             *
*---------------------------------------------------------------------*
CATNEXT  CATCALL LOOP,MODE=(@,BALR)   GET NEXT ENTRY
         BXH   R15,R15,CATDONE   DONE WITH THIS MASK
CATNEXT2 CLI   CSPRTYP,C'A'  NON-VSAM ENTRY?
         BNE   CATNEXT       NO; SKIP TO NEXT ENTRY
         MVC   CMPREQ,=C'DSN'    'NORMAL' MASKING
         TM    COMPMASK+L'COMPMASK,X'10'    POSITIONAL ?
         BZ    *+10
         MVC   CMPREQ,=C'POS'    POSITIONAL MASKING
         SUBCALL SUBCOMP,(CMPREQ,CSPRDSN,COMPMASK,CMP@STOR),VL,        *
               MF=(E,CALLPARM)
         BXH   R15,R15,CATNEXT  SKIP IF NO MATCH
         SPACE 1
         ICM   R2,15,EXC#MASK     ANY EXCLUSION MASKS ?
         BNP   CATXDONE           NO; ACCEPT
         LA    R3,EXCMASKS        POINT TO FIRST
CATXLOOP L     R15,CSP@SCMP  GET COMPARE ROUTINE ADDRESS
         TM    L'COMPMASK(R3),X'80'    MASK PROCESING ?
         BNZ   CATXMASK      YES
         CLC   CSPRDSN,0(R3)      DSN MATCHES EXCLUDE ?
         BNE   CATXBUMP      NO; TRY AGAIN
         B     CATNEXT       REJECT THIS ONE
CATXMASK MVC   CMPREQ,=C'DSN'    'NORMAL' MASKING
         TM    L'COMPMASK(R3),X'10'    POSITIONAL ?
         BZ    *+10
         MVC   CMPREQ,=C'POS'    POSITIONAL MASKING
         SUBCALL SUBCOMP,(CMPREQ,CSPRDSN,0(R3),CMP@STOR),VL,           *
               MF=(E,CALLPARM)
         BXLE  R15,R15,CATNEXT    SKIP IF MATCH ON EXCLUDE
CATXBUMP LA    R3,L'EXCMASKS(,R3)
         BCT   R2,CATXLOOP        TRY NEXT
         SPACE 1
CATXDONE SLR   R2,R2
         ICM   R2,1,CSP#VOL LOAD VOLUME COUNT
         BNP   CAT0VOL
         BCT   R2,CAT2VOL    DON'T DO MULTI-VOLUME (YET?)
*LATER*  LA    R6,CSPRVOL    POINT TO FIRST VOLUME SERIAL
*LATER*  LA    R5,CSPRDTY    AND MATCHING DEVICE TYPE
         MVC   CELLVOL,CSPRVOL    MOVE VOLUME
         MVC   CELLDSN,CSPRDSN    AND SERIAL
         SERVICE DSDS1,CELLVOL    GET DSCB 1
         BXH   R15,R15,CATNEXT
         LR    R3,R1         COPY DSCB ADDRESS
         USING DS1FMTID,R3   DECLARE RETURN
         CLI   DS1FMTID,C'1'   REALLY A FORMAT 1 ?
         BNE   CATNEXT       IF NOT, SKIP
         BAL   R9,TESTDS     EXAMINE
         B     CATNEXT       AND TRY NEXT
         SPACE 1
CAT2VOL  PRTDATA '*** Multi-volume DS',(CSPRDSN,PAD,DEB),'skipped ***'
CATSKIP  INC   NUMSKIP       COUNT SKIPPED DATA SETS
         B     CATNEXT       TRY NEXT ENTRY
         SPACE 1
CAT0VOL PRTDATA '*** No VOLSER information for',(CSPRDSN,PAD,DEB),'***'
         B     CATNEXT       SKIP THIS
         SPACE 1
CATDONE  CATCALL CLOSE,CSPMASK,MODE=(@,BALR)  FREE IT UP
         PRTL  '   === End of requested catalog search ===',NL,CC=NO
         B     ACTRESET
         EJECT ,
***********************************************************************
*                                                                     *
*   PROCESS DATA SET SELECTION FOR 'DUMP mask VOLUME(xyz)'            *
*     Read the VTOC, screen DSORG, etc., and compare mask.            *
*                                                                     *
***********************************************************************
SEARCHVL VOLREAD OPEN,CELLVOL   INITIALIZE VOLUME PROCESSING
         MVC   VOLVOL,CELLVOL   REMEMBER WHAT'S OPEN
         BXH   R15,R15,SKIPVOL    IGNORE IF BAD
         MVC   COMPMASK,CELLDSN   PROPAGATE MASK
         CLI   COMPMASK,C' '      ANY MASK ?                    GP09194
         BH    DSCBTMSK           YES; TEST IT                  GP09194
         MVC   COMPMASK(2),=C'**'   MAKE UNIVERSAL MATCH        GP09194
DSCBTMSK LA    R1,COMPMASK
         BAL   R9,WHATMASK   EXAMINE MASK
DSCBFMT4 VOLREAD DSCB        READ THE FORMAT 4
         BXH   R15,R15,SKIPVOL   ERROR
         B     DSCBNEX4      JOIN NORMAL PROCESSING              82137
         SPACE 1
SKIPVOL  PRTDATA '*** Error reading VTOC',(VOLVOL,PAD),'***'
         OICC  8
         B     ACTRESET
         SPACE 1
DSCBNEXT VOLREAD DSCB        GET ANOTHER DSCB
         CH    R15,=H'4'     DID WE GET ONE ?
         BE    DSCBNDVL      NO; END OF VOLUME
         BH    SKIPVOL       NO; I/O ERROR
DSCBNEX4 LR    R3,R0         COPY DSCB ADDRESS
         USING DS1DSNAM,R3   DECLARE RETURN
         MVC   CELLDSN,DS1DSNAM   PROPAGATE DS NAME
         LA    R3,DS1FMTID   FOR TESTDS COMMON MAPPING
         USING DS1FMTID,R3
         CLI   DS1FMTID,C'1'   REALLY A FORMAT 1 ?
         BNE   DSCBNEXT      IF NOT, SKIP
*   SUBMIT TO COMPARE TESTS
         MVC   CMPREQ,=C'DSN'    'NORMAL' MASKING
         TM    COMPMASK+L'COMPMASK,X'10'    POSITIONAL ?
         BZ    *+10
         MVC   CMPREQ,=C'POS'    POSITIONAL MASKING
         SUBCALL SUBCOMP,(CMPREQ,CELLDSN,COMPMASK,CMP@STOR),VL,        *
               MF=(E,COMPPARM)
         CH    R15,=H'4'
         BNL   DSCBNEXT      SKIP IT
         SPACE 1
         ICM   R2,15,EXC#MASK     ANY EXCLUSION MASKS ?
         BNP   DSCXDONE           NO; ACCEPT
         LA    R4,EXCMASKS        POINT TO FIRST
DSCXLOOP L     R15,CSP@SCMP  GET COMPARE ROUTINE ADDRESS
         TM    L'COMPMASK(R4),X'80'    MASK PROCESING ?
         BNZ   DSCXMASK      YES
         CLC   CELLDSN,0(R4)      DSN MATCHES EXCLUDE ?         GP10163
         BNE   DSCXBUMP      NO; TRY AGAIN
         B     DSCBNEXT      REJECT THIS ONE
DSCXMASK MVC   CMPREQ,=C'DSN'    'NORMAL' MASKING
         TM    L'COMPMASK(R4),X'10'    POSITIONAL ?
         BZ    *+10
         MVC   CMPREQ,=C'POS'    POSITIONAL MASKING
         SUBCALL SUBCOMP,(CMPREQ,CELLDSN,0(R4),CMP@STOR),VL,           *
               MF=(E,CALLPARM)
         BXLE  R15,R15,DSCBNEXT   SKIP IF MATCH ON EXCLUDE
DSCXBUMP LA    R4,L'EXCMASKS(,R4)
         BCT   R2,DSCXLOOP        TRY NEXT
         SPACE 1
DSCXDONE BAL   R9,TESTDS     EXAMINE
         B     DSCBNEXT      AND TRY NEXT
         SPACE 1
DSCBNDVL PRTL  '   === End of requested volume search ===',NL,CC=NO
ACTRESET XC    EXC#MASK,EXC#MASK  RESET EXCLUSION MASKS
         ZI    PROFLAGS,PFGDUMP   NO LONGER DUMP MODE
         B     CARDNEXT      AND TRY NEXT
         SPACE 1
***********************************************************************
**  End of input on SYSIN - see what to do                           **
***********************************************************************
CARDEOD  TM    PROFLAGS,PFGDUMP   DUMP REQUEST PENDING ?
         BNZ   ACTDUMP            COLLECT DS INFORMATION
         SPACE 1
CARDEODX PRTL  '   === End file on SYSIN ===',NL,CC=NO
         L     R15,=A(DSSDUMP2)   GO TO DUMP PHASE
         L     R0,RETCODE    LOOK AT ERRORS SO FAR
         CH    R0,=H'4'      ANY ERRORS?
         BNHR  R15           NO; CONTINUE
         PRTL  '0*** Dump not attempted due to errors ***',CC=ASA
         B     PGMEXIT1      AND QUIT
         SPACE 2
***********************************************************************
**  TESTDS - CHECK DSCB1 TO SEE WHETHER THIS IS A FILE TYPE WE       **
**    SUPPORT. 1) DSORG = PS, PO, DA                                 **
**             2) LSTAR > 0                                          **
***********************************************************************
         USING DS1FMTID,R3
TESTDS   TM    DS1DSORG,DS1DSGPS+DS1DSGDA+DS1DSGPO  xSAM/BDAM ?
         BNM   TESTSKIP      NO; SKIP
         CLI   DS1DSORG+1,0  VSAM, ETC. ?                       GP09186
         BNE   TESTSKIP      YES; SKIP                          GP09186
         CLC   CELLDSN,DUMPDSN    ACTIVE DUMP DS ?              GP09317
         BNE   TESTNSLF      NO                                 GP09317
         CLC   CELLVOL,DUMPVOL    SAME SERIAL ?                 GP09317
         BNE   TESTNSLF      NO
         PRTDATA '*** Data set',(CELLDSN,PAD,DEB),' bypassed - is activ*
               e DSSDUMP output ***'                            GP09317
         MVICC 4                                                GP09317
         B     TESTSKNO                                         GP09317
TESTNSLF CLI   DS1NOEPV,0    ANY DATA ?                         GP09193
         BE    TESTSKEM      NO; NOTHING TO DUMP                GP09193
         ICM   R0,7,DS1LSTAR  EVER USED ?
         BZ    TESTSKIP      SKIP EMPTY AND PDS/E, HFS, ETC.
         SPACE 1
         TM    OPTFLAGS,FGENQ     ENQUEUE TEST REQUESTED        GP09212
         BZ    TESTNENQ           NO                            GP09212
         LOCBYTE CELLDSN          GET DSN LENGTH                GP09212
         SR    R15,R14            LENGTH OF DSN                 GP09212
         LR    R6,R15             USE BETTER REGISTER           GP09212
         MVC   ENQLIST(PATENQL),PATENQ      REFRESH             GP09212
         ENQ   (,CELLDSN,,(R6),),RET=TEST,MF=(E,ENQLIST)        GP09212
         BXH   R15,R15,TESTNBAD                                 GP09212
         ENQ   (QJAM,CELLDSN,,(R6),),RET=TEST,MF=(E,ENQLIST)    GP09212
         BXLE  R15,R15,TESTNENQ   PASSED                        GP09212
TESTNBAD PRTDATA '*** Data set',(CELLDSN,PAD,DEB),' bypassed - ENQ test*
                unsuccessful ***'                               GP09212
         MVICC 4                                                GP09212
         B     TESTSKNO                                         GP09212
         SPACE 1
TESTNENQ MVI   CELLFLAG,CFPICK    FLAG DS AS SELECTED
         MVC   CELLALI,CELLDSN    SET ALIAS SAME AS TRUE NAME
         ICM   R6,15,NUMPFX  DOING PREFIXING ?                  GP09197
         BZ    TESTUPD       NO, LEAVE DSN ALONE                GP09197
         LA    R5,PFXOLDL    POINT TO RENAME/PREFIX LIST        GP09197
TESTPFX  MVI   LOCFMT1,C' '  PREPARE A WORK AREA                GP09197
         MVC   LOCFMT1+1(43+44),LOCFMT1    MORE THAN ENOUGH     GP09197
         MVC   LOCFMT1(L'PFXNEW),PFXNEW-PFXOLDL(R5) NEW PREFIX  GP09197
         SR    R14,R14                                          GP09197
         SR    R1,R1                                            GP09197
         IC    R1,PFXNEWL-PFXOLDL(,R5)                          GP09197
         LA    R1,LOCFMT1(R1)   TO ADDRESS                      GP09197
         IC    R14,PFXOLDL-PFXOLDL(R5)                          GP09197
         LA    R15,CELLALI(R14)  SET SOURCE ADDRESS             GP09197
         LTR   R14,R14       ANY COMPARE ?                      GP09197
         BNP   TESTNOLD      NO                                 GP09197
         BCTR  R14,0         EX LENGTH                          GP09197
         EX    R14,EXCLCPFX  MATCHING PREFIX ?                  GP09197
         BNE   TESTBUMP      NO; TRY ANOTHER                    GP09197
         LA    R14,1(,R14)   FIX UP                             GP09317
TESTNOLD LA    R0,44-1       GET LENGTH - 1 TO MOVE             GP09197
         SR    R0,R14        GET EX LENGTH                      GP09197
         BM    TESTNNEW                                         GP09197
         LR    R14,R0        SWAP                               GP09197
         EX    R14,EXMVCPFX  MOVE                               GP09197
TESTNNEW MVC   CELLALI,LOCFMT1    MOVE NEW NAME                 GP09197
         CLI   CELLALI+L'CELLALI-1,C'.'   TRAILING INDEX POINT? GP09197
         BNE   TESTUPD       NO                                 GP09197
         MVI   CELLALI+L'CELLALI-1,C' '   YES; FIX IT           GP09197
         B     TESTUPD            AND USE IT                    GP09197
EXCLCPFX CLC   CELLALI(0),PFXOLD-PFXOLDL(R5)   MATCHING PREFIX? GP09197
EXMVCPFX MVC   0(0,R1),0(R15)   MOVE TRAILER                    GP09197
         SPACE 1
TESTBUMP LA    R5,PFXLEN(,R5)
         BCT   R6,TESTPFX    CHECK FOR PREFIX MATCH             GP09197
TESTUPD  LOCBYTE CELLALI     GET NAME LENGTH                    GP09197
         SR    R15,R14       GET LENGTH                         GP09197
         STC   R15,CELLALIL  AND SAVE FOR PASS 2                GP09197
         SUBCALL SUBTREE,('UPD',ROOTBALL,RECREC),VL,MF=(E,CALLPARM)
         CH    R15,=H'8'     ACCEPTABLE RESULT ?
         BL    TESTGOOD
         PRTL  '0*** List update failed ***',CC=ASA
         B     PGMEXIT8
         SPACE 1
TESTSKEM DS    0H            NO EXTENTS                         GP09193
 PRTDATA ' ? ',CELLVOL,(CELLDSN,PAD),'skipped (no extents).        DSOR*
               G=',(DS1DSORG,2,HEX,PAD),'LSTAR=',(DS1LSTAR,3,HEX)
         B     TESTSKNO
         SPACE 1
TESTSKIP DS    0H            BAD DSORG OR LSTAR                 GP09193
 PRTDATA ' ? ',CELLVOL,(CELLDSN,PAD),'skipped (unsupported/empty). DSOR*
               G=',(DS1DSORG,2,HEX,PAD),'LSTAR=',(DS1LSTAR,3,HEX)
TESTSKNO INC   NUMSKIP       COUNT DATA SETS SKIPPED
         BR    R9            RETURN TO CALLER
         SPACE 1
TESTGOOD BXH   R15,R15,TESTADDD
 PRTDATA '   ',CELLVOL,(CELLDSN,PAD),'already queued'
         BR    R9            RETURN TO CALLER
         SPACE 1
TESTADDD INC   NUMPICK
         SERVCALL DSFMT,DS1DSORG  MAKE ATTRIBUTES PRINTABLE
         LR    R3,R1         SAVE RETURN
   PRTDATA '   ',CELLVOL,(CELLDSN,PAD),'queued:    ',(0(R3),3,PAD),(3(R*
               3),6,PAD),(22(R3),5,PAD),(17(R3),5)
         BR    R9            RETURN TO CALLER
         DROP  R3
         SPACE 1
         LTORG ,
         SPACE 1
VERBTAB  PARKEYAD 'EXCLUDE ',GETXMASK  SPECIFY DS MASK
VERBTAB2 PARKEYAD 'INCLUDE ',SETDUMP   SPECIFY DS MASK
         PARKEYAD 'SELECT  ',SETDUMP   SPECIFY DS MASK
         PARKEYAD 'DUMP    ',SETDUMP   BEGIN DS SELECTION
         PARKEYAD 'COPY    ',SETDUMP   BEGIN DS SELECTION
         PARKEYAD 'RENAME  ',SETREN    SET PFX RENAME           GP09197
         PARKEYAD 'REPLACE ',SETREN    SET PFX RENAME           GP09197
         PARKEYAD 'STRIP   ',SETREN    DELETE LEADING DSN CHARS GP09197
         PARKEYAD 'PREFIX  ',SETPFX    SET PREFIX (NO RENAME)   GP09197
         PARKEYAD 'OPTIONS ',SETOPT    SET OPTION BITS ON/OFF
         PARKEYAD 'ALLDATA ',SETALLTK  DUMP ALL TRACKS
         PARKEYAD 'ALLEXCP ',SETALLTK  DUMP ALL TRACKS
         PARKEYAD 'NODEBUG ',SETBUGOF
         PARKEYAD 'TEST    ',SETTSTON
VERBTABN PARKEYAD 'DEBUG   ',SETBUGON
         TITLE 'D S S D U M P  ***  MAKE DUMP TAPE'
DSSDUMP2 CSECT ,             SUBROUTINE AND DATA AREA
         LA    R11,0(,R15)   COPY NEW BASE
         LA    R12,2048(,R11)
         LA    R12,2048(,R12)
         USING DSSDUMP2,R11,R12
         PRTL  ' ',NL,CC=NO       PRETTIFY OUTPUT
         SPACE 1
*---------------------------------------------------------------------*
*   Note that the catalog name isn't available for VOL() lookup,      *
*   and I didn't keep it from the catalog retrieval.                  *
*   So we use the master catalog name for laughs.                     *
*---------------------------------------------------------------------*
         PUSH  USING
         L     R5,CVTPTR
         NUSE  CVT,R5
         ICM   R5,15,CVTCBSP    -> AMCBS
         BZ    NONECAX       HUH?
         USING AMCBS,R5
         LA    R5,CBSCAXCN-(CAXCHN-IGGCAXWA)
         USING IGGCAXWA,R5
CAXNEXT  ICM   R5,15,CAXCHN
         BZ    NONECAX
         TM    CAXFLGS,CAXMCT     MASTER CATALOG ?
         BZ    CAXNEXT            NO; IGNORE
         MVC   CSPRCAT,CAXCNAM    REMEMBER IT
         LOCBYTE CSPRCAT                                        GP09192
         SR    R15,R14       NON-BLANK LENGTH                   GP09192
         STC   R15,CSPRTYP   SAVE IN STOLEN FIELD               GP09192
         POP   USING
         SPACE 1
*---------------------------------------------------------------------*
*   Check for at least one queued entry. Quit if none.                *
*   Else build tape header record.                                    *
*---------------------------------------------------------------------*
NONECAX  SUBCALL LISTREE     INITIALIZE SEQUENTIAL READING
         LTR   R15,R15       ANY PROBLEM ?
         BZ    DSNLINIT
         PRTDATA '*** No data sets to dump ***'
         B     PGMEXIT8
         SPACE 1
DSNLINIT L     R8,REC@REC    UPDATE THE CELL ADDRESS
         L     R2,@BUF       POINT TO START OF BUFFER
         BAL   R9,BUILDHED   BUILD A HEADER RECORD
         USING DSSBLOCK,R2   DECLARE IT
         XC    DTHTIMD(DTHSIZE),DTHTIMD  CLEAR UNUSED
         MVI   DTPRCID1,DTPTHDR   IDENTIFY HEADER
         TIME  DEC
         ST    R1,DTHTIMD    SET DAY
         ST    R0,DTHTIMD+4  AND TIME
         MVI   DTHIND2,DTHGVI     NON-VSAM ONLY
         LA    R1,DTHSIZE    SIZE OF HEADER - HEADER
         STCM  R1,3,DTHLEN
         LA    R1,DTPSIZE(,R1)
         STCM  R1,3,DTPSEGLN      SEGMENT SIZE
         MVI   DTHVERNO,X'1F'
         MVI   DTHLVLNO,X'50'
         L     R0,#BUFMAX    MAXIMUM BLOCK
         STCM  R0,3,DTHBLKSZ
         L     R0,NUMPICK
         STCM  R0,3,DTHNDS   NUMBER OF DATA SETS
         LA    R2,DTHSIZE+DTPSIZE(,R2)
         ST    R2,@BUFCUR    SET SIZE USED
         BAL   R9,TAPEOUT    WRITE A BLOCK
         SPACE 1
*---------------------------------------------------------------------*
*   Now run through the queued data sets just to build the data set   *
*   name block. Check for duplicate names (on separate volumes) and   *
*   assign them a fake name.                                          *
*   The table is built in the output buffer, even though larger than  *
*   the block size, and is then written as multiple blocks.           *
*---------------------------------------------------------------------*
         SPACE 1
         L     R2,@BUF
         BAL   R9,BUILDHED   BUILD COMMON HEADER
         MVI   DTPRCID1,DTPDSNL   DS NAME LIST
         LA    R2,DSSHEDND   POINT TO START OF LIST
         ST    R2,@MEMCUR    SAVE FOR REFERENCE
         B     DSNLCOMM
         SPACE 1
DSNLNEXT SUBCALL NEXTREE     GET NEXT ENTRY
         BXH   R15,R15,DSNLTEND   DONE
         L     R8,REC@REC    UPDATE THE CELL ADDRESS
         SPACE 1
         SR    R15,R15                                          GP09197
         IC    R15,CELLALIL  GET LENGTH BACK                    GP09197
         L     R2,@BUF
         SR    R14,R14       CLEAR FOR IC
DSNLDLUP CLM   R15,1,DTLLEN  SAME LENGTH ?
         BNE   DSNLDBMP      NO; IGNORE
         LR    R14,R15
         BCTR  R14,0         EXECUTE LENGTH FOR COMPARE
         EX    R14,EXCLCDSN  IS IT A DUPLICATE ?
         BE    DSNLDDUP      YES; RENAME
DSNLDBMP IC    R14,DTLLEN         GET ENTRY LENGTH
         LA    R2,DTLSIZE(R14,R2)   NEXT ENTRY
         C     R2,@MEMCUR    IS THAT IT ?
         BL    DSNLDLUP      NO; CHECK AGAIN
         B     DSNLCOM2      RE-USE R15
EXCLCDSN CLC   CELLALI(0),DTLDSN  DUPE CHECK
         SPACE 1
DSNLDDUP MINH  R15,=AL2(L'CELLALI-9) IF TOO LONG, TRUNCATE
         LA    R1,CELLALI-1(R15)
         CLI   0(R1),C'.'    HIT ON A PERIOD ?
         BNE   *+4+2
         BCTR  R1,0          REUSE IT
         MVC   1(9,R1),=C'.D#nnnnnn'   MAKE FAKE NAME
         INC   NUMDUPE,WORK=R0
         CVD   R0,DB
         OI    DB+7,X'0F'    FORCE SIGN
         MVC   DB2(8),=X'F021202020202020'
         ED    DB2(8),DB+4
         MVC   4(6,R1),DB2+2   MAKE UNIQUE (?) NAME
         SPACE 1
DSNLCOMM SR    R15,R15                                          GP09197
         IC    R15,CELLALIL  LENGTH TO FIRST BLANK              GP09197
DSNLCOM2 L     R2,@MEMCUR    GET CURRENT USE
         USING DTLLEN,R2     SKIP PAST HEADER
         LA    R3,DTLSIZE(R15,R2)  SIZE AFTER MOVE
         C     R3,@MEMEND    WILL IT FIT
         BL    DSNLMOVE      YES (NOTE IT TAKES ONE MORE)
      PRTL '*** Data set name table overflow - split job? ***',NL,CC=NO
         PRTDATA '    at data set',(NUMPICK,I,PAD)
         B     PGMEXIT8
         SPACE 1
DSNLMOVE STC   R15,DTLLEN    SET DSN LENGTH
         MVC   DTLCAT,CSPRCAT  CATALOG NAME (IRRELEVANT?)
         EX    R15,EXMVCDSN  MOVE NAME + ONE CRUD BYTE
         ST    R3,@MEMCUR    UPDATE BUFFER
         B     DSNLNEXT      PROCESS NEXT DATA SET
EXMVCDSN MVC   DTLDSN(0),CELLALI       MOVE NAME
         SPACE 1
DSNLTEND L     R3,@MEMCUR    POINT TO END OF BUFFER
         MVI   0(R3),X'0'    END FLAG - NO DSN
         LA    R3,1(,R3)     ADJUST LENGTH
         ST    R3,@MEMCUR
         ST    R3,@BUFCUR    FOR SINGLE BLOCK
         L     R2,@BUF       BUFFER START
         USING DSSBLOCK,R2        HEADER
         C     R3,@BUFEND         SINGLE BLOCK ?
         BNH   DSNL1BLK           YES; WRITE DSN TABLE AS SINGLE BLOCK
         SPACE 1
*---------------------------------------------------------------------*
*    The Data Set Name Table is larger than the block size, but less  *
*    than 65KB. Break it into block-sized chunks.                     *
*    To make life more interesting, a simple break was too easy for   *
*    IBM - each chunk must end with a DSN length field, artificially  *
*    set to zero. And we need to examine data to get segment count!   *
*---------------------------------------------------------------------*
         LA    R15,DTLLEN    GET FIRST DATUM
         SR    R1,R1         CLEAR IC REGISTER
         LA    R5,1          AT LEAST ONE SEGMENT
         LA    R4,1          ALLOW FOR ZERO END BYTE
DSNLSLUP LR    R14,R15       CURRENT DSN ENTRY
         ICM   R1,1,0(R14)   DSN LENGTH
         BZ    DSNLSDON      DONE
         LA    R15,DTLSIZE(R1,R14)  NEXT ENTRY
         LA    R4,DTLSIZE(R1,R4)    PURPORTED DATA SIZE IN BLOCK
         C     R4,#DATMAX    WILL IT FIT ?
         BL    DSNLSLUP      YES; TRY AGAIN
         LA    R4,1+DTLSIZE(R1)     SIZE IN NEXT BLOCK
         LA    R5,1(,R5)     NEW SEGMENT COUNT
         B     DSNLSLUP        TRY NEXT
DSNLSDON STC   R5,DTPNOSEG   SAVE SEGMENT COUNT
         LR    R5,R3         COPY END ADDRESS
         SR    R5,R2         LESS START
         SH    R5,=AL2(DTPSIZE)   LESS HEADER
         LA    R4,DTLLEN          POINT TO START OF DATA
DSNLBLKN L     R7,#DATMAX         SIZE WE'RE WRITING
         AR    R7,R2              LAST BYTE+1
         LR    R15,R4             POINT TO DATA START
         SR    R1,R1              CLEAR FOR IC
DSNLHLUP LR    R14,R15            COPY TO WORKING REGISTER
         ICM   R1,1,0(14)         GET NEXT DSN LENGTH
         BZ    DSNLHDON              BUT SHOULD NOT HAPPEN?
         LA    R15,DTLSIZE(R1,R14)   NEXT LENGTH BYTE
         CR    R15,R7             AT END OF CHUNK?
         BNH   DSNLHLUP           AND AGAIN
DSNLHDON ICM   R6,8,0(R14)        SAVE OLD LENGTH
         MVI   0(R14),0           SET END FLAG
         LR    R7,R14             END ADDRESS
         SR    R7,R4              GET DATA LENGTH USED
         BNP   COPYINIT      SHOULD NOT HAPPEN?
         LA    R7,1(,R7)         CURRENT BYTE OF ZERO (NOT DATA)
         LA    R3,DTPSIZE(,R7)    PLUS HEADER
         STCM  R3,3,DTPSEGLN      SET LENGTH INTO RECORD
         MVC   DB3,DTPNOSEG  SAVE
         BAL   R9,TAPEOUTR   WRITE ONE BLOCK
         CR    R5,R7         FINISHED ?
         BNH   COPYINIT      YES
         BCTR  R7,0          ACCOUNT FOR EXTRA LENGTH FIELD
         SR    R5,R7         ACCOUNT FOR PORTION WRITTEN
         AR    R4,R7         NEXT BUFFER START
         STCM  R6,8,0(R4)    RESTORE DSN LENGTH
         LR    R2,R4         GET DATA START
         SH    R2,=AL2(DTPSIZE)  ROOM FOR NEXT HEADER
         BAL   R9,BUILDHED   BUILD BASICS
         MVC   DTPNOSEG(8),DB3   RESTORE
         SR    R15,R15
         IC    R15,DTPSEGNO  PREVIOUS
         LA    R15,1(,R15)
         STC   R15,DTPSEGNO  NEXT SEGMENT
         B     DSNLBLKN      WRITE THIS SEGMENT
         SPACE 1
DSNL1BLK SR    R3,R2              LENGTH
         STCM  R3,3,DTPSEGLN      SET LENGTH INTO RECORD
         BAL   R9,TAPEOUT
         SPACE 1
*---------------------------------------------------------------------*
*   Copy Data Set information - fake as SMS.                          *
*---------------------------------------------------------------------*
         SPACE 1
COPYINIT SUBCALL LISTREE     INITIALIZE SEQUENTIAL READ BACK
         LTR   R15,R15       ANY PROBLEM ?
         BNZ   COPYIBAD
         L     R8,REC@REC         GET RECORD ADDRESS
         CLC   CELLVOL,VOLVOL     NEW SERIAL ?
         BE    COPYTYPE           NO; JUST GET DEVICE TYPE
         B     COPYFILE           YES; SWITCH PACKS
COPYIBAD PRTDATA '*** Program error in SUBTREE ***'
         PRTCLOSE ,          WRITE MESSAGE BEFORE DUMP
         ABEND 1001,DUMP
         SPACE 1
COPYNEXT SUBCALL NEXTREE     GET NEXT ENTRY
         BXH   R15,R15,COPYTEND   DONE
         L     R8,REC@REC         GET RECORD ADDRESS
COPYFILE CLC   CELLVOL,VOLVOL     NEW SERIAL ?
         BE    COPYSAME           NO
         VOLREAD OPEN,CELLVOL
         BXH   R15,R15,COPYBADV
         MVC   VOLVOL,CELLVOL
COPYTYPE MVC   GENERIC,BLANKS
         SERVCALL UCBVS,VOLVOL    GET UCB BACK
         LTR   R1,R0              TEST
         BZ    COPYSAME           WILL FAIL ?
         LR    R2,R1         SAVE OVER SUBROUTINE CALL          GP09210
         SUBCALL SUBVTVAL    GET TRACK SIZE, ETC FOR UCB IN R1  GP09210
         LTR   R15,R15       SUCCESSFUL ?                       GP09210
         BZ    COPYN4VL      NO; SKIP                           GP09210
         STM   R15,R0,DB     TEMP STASH                         GP09210
         MVI   LOCFMT1,X'04'                                    GP09210
         MVC   LOCFMT1+1(L'LOCFMT1-1),LOCFMT1                   GP09210
         VOLREAD DSCB        READ THE FORMAT 4                  GP09210
         BXH   R15,R15,COPYN4VL   ERROR                         GP09210
         LR    R1,R0              COPY ADDRESS                  GP09210
         LA    R6,44(,R1)         SKIP NAME                     GP09210
         USING DS4IDFMT,R6                                      GP09210
         CLI   DS4IDFMT,C'4'      REALLY?                       GP09210
         BNE   COPYN4VL           NO; SKIP                      GP09210
         LM    R15,R0,DB          RESTORE TRK.CAP, DSCB, DE     GP09210
         CLM   R15,3,DS4DEVTK     MATCHING TRACK CAPACITY?      GP09210
         BNE   COPY4IFF           NO; MAY NOT WORK              GP09210
         CLM   R0,3,DS4DEVDT      TEST DSCB,DE COUNT            GP09210
         BE    COPYN4VL           GOOD                          GP09210
COPY4IFF PRTDATA '***',(VOLVOL,PAD),'device constants do not match IBM'*
               's; like device restore with ADRDSSU questionable ***'
         PRTDATA 'VTOC track size',(DS4DEVTK,IA,PAD),' DSCBs/tk',(DS4DE*
               VDT,IA,PAD),' DirBlk/tk',(DS4DEVDB,IA,PAD)       GP09210
         PRTDATA 'DVCT track size',(DB+2,2,IA,PAD),' DSCBs/tk',(DB+6,1,*
               IA,PAD),' DirBlk/tk',(DB+7,1,IA,PAD)             GP09210
         OICC  4                  SET WARNING                   GP09210
         DROP  R6                                               GP09210
COPYN4VL SERVCALL UCBGN,(R2)      GET GENERIC                   GP09210
         LM    R14,R15,0(R1)      LOAD RESULT
         LA    R0,7               SHOW SOME RESTRAINT
COPYSGLP CLM   R15,1,BLANKS       TRAILING BLANK ?
         BNE   COPYSGEN
         SRDL  R14,8
         ICM   R14,8,BLANKS       LEFT FILL
         BCT   R0,COPYSGLP
COPYSGEN STM   R14,R15,GENERIC    COPY RESULT OR BLANK
         SPACE 1
*---------------------------------------------------------------------*
*   Finally we can actually write a data set:                         *
*   1) Get the format 1 DSCB, and a format 3 if present               *
*   2) Write the data set header record                               *
*   3) Write the volume header                                        *
*   4) Write the track data  (up to LSTAR+1 tracks; all if ALLDATA)   *
*---------------------------------------------------------------------*
COPYSAME XC    DSN#TRAK(NUMPCYL-DSN#TRAK),DSN#TRAK  RESET COUNTERS
         ZI    OPTFLAGS,FGPSPO    RESET DSORG FLAG
         ZI    PROFLAGS,PFSOME    RESET NOT ALLDATA FLAG        GP09202
         MVC   DSN#TMAX,=X'7FFFFFFF'    DUMP ALL TRACKS
         L     R2,@BUF
         BAL   R9,BUILDHED        BUILD HEADER
         XC    DTDLEN(DTDSIZE),DTDLEN  CLEAR UNUSED
         MVI   DTPRCID1,DTPDSHDR  DATA SET HEADER
         LA    R3,DTPSIZE+DTDSIZE  SEGMENT SIZE
         STCM  R3,3,DTPSEGLN      SET
         AR    R3,R2
         ST    R3,@BUFCUR
         MVC   DTDLEN,CELLALIL    GET DATA SET NAME LENGTH      GP09197
         MVC   DTDCATLN,CSPRTYP   COPY CATALOG NAME LENGTH      GP09192
         MVI   DTDNVOL,1          ONLY VOLUME SUPPORTED AT PRESENT
         MVI   DTDIND,DTDSMS           FAKE SMS AND RACF        GP09193
*DOC*    XC    DTDPSWD,DTDPSWD    NO PASSWORD                   GP09193
         MVC   DTDDSN-L'CSPRCAT(L'CSPRCAT),CSPRCAT
         MVC   DTDDSN,CELLALI
         MVI   DTDVCTD,1          VOLUME COUNT
*DOC*    MVI   DTDVCTD+1,0        VSAM COMPONENT COUNT
         VOLREAD SEARCH,CELLDSN     GET FORMAT 1 DSCB
         BXH   R15,R15,COPYBAD1   NONE ?
         LR    R6,R0
         USING IECSDSL1,R6
         MVC   LOCFMT1(DS1END-IECSDSL1),IECSDSL1   SAVE FOR LATER
         LA    R6,LOCFMT1         USE PERMANENT COPY
         MVC   DS1DSNAM,CELLALI   FAKE USING ALIAS NAME
         MVC   DTDDSORG,DS1DSORG
         MVC   DTDOPTCD,DS1OPTCD
         LA    R1,DS1CREDT        POINT TO DATE                 GP09194
         BAL   R9,FIXDATE         FIX IT UP                     GP09194
         LA    R1,DS1EXPDT        POINT TO DATE                 GP09194
         BAL   R9,FIXDATE         FIX IT UP                     GP09194
         LA    R1,DS1REFD         POINT TO DATE                 GP09194
         BAL   R9,FIXDATE         FIX IT UP                     GP09194
         TM    OPTFLAGS,FGEXP     EXPORTING THIS ?              GP09197
         BZ    COPYNSET           NO                            GP09197
         NI    DS1DSIND,255-(DS1IND40+DS1IND10+DS1IND04)        GP09197
         XC    DS1EXPDT,DS1EXPDT  KILL EXPIRATION               GP09197
         NI    DS1DSORG,255-DS1DSGU   RESET UNMOVEABLE          GP09197
COPYNSET TM    OPTFLAGS,FGADAT    ALLDATA/ALLEXCP ?
         BNZ   COPYALLT      YES; COPY ALL ALLOCATED TRACKS
         TM    DS1DSORG,DS1DSGPS+DS1DSGPO   SEQUENTIAL OR PARTITIONED?
         BNM   COPYALLT      NEITHER - COPY ALL
         TM    DS1DSORG+1,0  VSAM, ETC.?                        GP09186
         BNE   COPYALLT      FUNNY - COPY ALL                   GP09186
         OI    OPTFLAGS,FGPSPO    INDICATE LSTAR VALID
         SR    R1,R1
         ICM   R1,3,DS1LSTAR
         LA    R1,1(,R1)     NUMBER TO BE DONE
         ST    R1,DSN#TMAX   SAVE
         OI    DTDIND2,DTDNTALL   SHOW SKIPPING UNUSED TRACKS
         OI    PROFLAGS,PFSOME    SHOW SKIPPING TRACKS          GP09202
COPYALLT BAL   R9,TAPEOUT         WRITE THE DATA SET HEADER
         SPACE 1
*---------------------------------------------------------------------*
*   Write volume information. Create fake VVRS; fake indexed VTOC     *
*---------------------------------------------------------------------*
COPYVTOC L     R2,@BUF
         BAL   R9,BUILDHED        BUILD HEADER
         MVI   DTPRCID1,DTPVOLD   VOLUME HEADER
         XC    DTMVOL(256),DTMVOL  CLEAR UNUSED ITEMS           GP09193
         XC    DTMVOL+256(256),DTMVOL+256  CLEAR MORE           GP09193
         MVC   DTMVSERL,CELLVOL   SERIAL
         SERVCALL UCBDK,CELLVOL   GET UCB
         LTR   R1,R0         DID WE FIND IT ?
         BZ    COPYNUCB        BUT HOW/
         MVC   DTMDEVTY,UCBTBYT1-UCBOB(R1)
         SR    R14,R14
         IC    R14,UCBTBYT4-UCBOB(R1)  GET DEVICE TYPE
         N     R14,=A(DVCTYPMK)    REMOVE EXTRANEOUS BITS
         L     R15,CVTPTR    GET CVT
         L     R15,CVTZDTAB-CVTMAP(,R15)
         IC    R14,DVCTIOFF-DVCTI(R14,R15)   GET DEVICE OFFSET
         AR    R14,R15       GET DEVICE ENTRY
         MVC   DTMTRKCP+2(2),DVCTRKLN-DVCT(R14)  RAW TRACK SIZE
         MVC   DTMLOGCY(L'DTMLOGCY+L'DTMTRKCY),DVCCYL-DVCT(R14)
         MVC   NUMPCYL+2(2),DVCCYL+2-DVCT(R14)
COPYNUCB MVI   DTM#DSCB,1    FOR NOW
         MVI   DTM#VVRS,1         FAKE VVRS                     GP09193
         MVI   DTMFLAGS,DTMCVAF   INDEXED VTOC                  GP09193
         MVC   DTMDSCB(DS1END-IECSDSL1),LOCFMT1
         XC    LOCFMT3,LOCFMT3    CLEAR PROPOSED FMT3 INPUT
         OC    DS1PTRDS,DS1PTRDS  IS THERE A FORMAT 3?
         BZ    COPY3NOT
         VOLREAD DSC3 DS1PTRDS    GET FMT3 FOR PREVIOUS FMT 1
         LR    R1,R0
         BXH   R15,R15,COPY3NOT   OOPS?
         LR    R1,R0
         CLI   DS3FMTID-IECSDSL3(R1),C'3'
         BNE   COPY3NOT
         MVC   LOCFMT3(DS3END-IECSDSL3),0(R1)    SAVE FOR LATER
COPY3NOT SR    R3,R3
         IC    R3,DS1NOEPV   GET EXTENTS                        GP09193
         TM    OPTFLAGS,FGADAT    ALLDATA/ALLEXCP ?             GP09314
         BZ    COPYNSUL      NO                                 GP09314
         CLI   DS1EXT1,X'40' LABEL TRACK PRESENT?               GP09314
         BNE   COPYNSUL      NO                                 GP09314
         LA    R3,1(,R3)     SET PHYSICAL EXTENTS               GP09314
COPYNSUL STC   R3,DTM#EXT    AND UPDATE                         GP09314
         LR    R5,R3         EXTENTS ON THIS VOLUME             GP09238
         MH    R3,=AL2(DS1EXT2-DS1EXT1)     EXTENT DATA         GP09193
         LA    R3,DTPSIZE+DTMSIZE-(DS1EXT2-DS1EXT1)(,R3)        GP09193
         SR    R15,R15                                          GP09193
         IC    R15,CSPRTYP        LENGTH OF CATALOG NAME        GP09193
         AR    R3,R15                                           GP09193
         IC    R15,CELLALIL       LENGTH OF DATA SET NAME       GP09197
         AR    R3,R15                                           GP09193
         STCM  R3,3,DTPSEGLN
         AR    R3,R2
         ST    R3,@BUFCUR
*   MAKE ALL (16) EXTENTS CONTIGUOUS FOR EASIER USE
         MVC   DS1EXT1+3*10(4*10),DS3EXTNT-IECSDSL3+LOCFMT3     GP09193
         MVC   DS1EXT1+7*10(9*10),DS3ADEXT-IECSDSL3+LOCFMT3     GP09193
         LR    R15,R5                                           GP09193
         MH    R15,=AL2(DS1EXT2-DS1EXT1)
         BCTR  R15,0         TOTAL EXTENT SIZE -1
         LA    R4,DS1EXT1    POINT TO FIRST EXTENT IN LIST      GP09193
         CLI   DS1EXT1,X'40'      LABEL TRACK ?
         BNE   COPYNLBL      NO
         TM    OPTFLAGS,FGADAT    ALLDATA/ALLEXCP ?             GP09314
         BNZ   COPYNLBL      YES; COPY LABEL TRACK ALSO         GP09314
         LA    R4,DS1EXT2    SKIP LABEL TRACK
COPYNLBL MVC   CURCCHH,2(R4)   COPY STARTING CC HH
EXMVCEXT MVC   DTMEXTS(0),0(R4)   COPY EXTENTS                  GP09193
         STM   R4,R5,CUREXT       SAVE FOR COPY                 GP09238
         TM    PROFLAGS,PFSOME    PARTIAL DUMP ?                GP09202
         BZ    COPYXALL           NO; DUMP ALL                  GP09202
*---------------------------------------------------------------------*
*   WE ARE DUMPING ONLY SOME OF THE TRACKS IN THE DATA SET.           *
*   WE NEED TO MOVE ALL EXTENTS NECESSARY TO SATISFY LSTAR(+1), AND   *
*   CLIP THE LAST EXTENT TO MATCH THE LSTAR TRACK                     *
*---------------------------------------------------------------------*
         LR    R9,R2         TEMP RE-ASSIGNEMNT                 GP09202
         DROP  R2            GONE, BUT NOT FORGOTTEN            GP09202
         USING DSSBLOCK,R9                                      GP09202
         ICM   R6,3,DS1LSTAR   GET LSTAR BACK                   GP09202
         DROP  R6                                               GP09202
         N     R6,=X'0000FFFF'    KILL SIGN EXTENSION           GP09202
         LA    R6,1(,R6)     NUMBER OF USED TRACKS              GP09202
         LA    R3,DTMEXTS    FIRST EXTENT DESTINATION           GP09202
         L     R2,NUMPCYL    TRACKS PER CYLINDER                GP09202
         MVI   DTM#EXT,0     RESET EXTENT COUNT                 GP09202
         SPACE 1
COPYXSLP LR    R1,R4         CURRENT EXTENT ADDRESS             GP09202
         LA    R0,1          ONE AT A TIME                      GP09202
         L     R15,=V(SUBXTSUM)    EXTENT SIZER                 GP09202
         BALR  R14,R15       GET EXTENT SIZE                    GP09202
         LTR   R15,R15       ANY ?                              GP09202
         BNP   COPYXSUP      SKIP BAD EXTENT                    GP09202
         SR    R14,R14                                          GP09202
         IC    R14,DTM#EXT   GET CURRENT COUNT                  GP09202
         LA    R14,1(,R14)   BUMP                               GP09202
         STC   R14,DTM#EXT   STASH BACK                         GP09202
         MVC   0(10,R3),0(R4)   COPY EXTENT                     GP09202
         CR    R15,R6        SATISFIED LSTAR YET ?              GP09202
         BH    COPYXSTK      YES; NEED TO ADJUST END CCHH       GP09202
         BE    COPYXSTX      YES, EXACTLY                       GP09202
         SR    R6,R15        NEW RESIDUAL                       GP09202
         LA    R3,10(,R3)    NEXT OUTPUT                        GP09202
COPYXSUP LA    R4,10(,R4)    NEXT INPUT                         GP09202
         BCT   R5,COPYXSLP   TRY NEXT                           GP09202
         B     COPYXSTY      ?  SHOULD GET HERE                 GP09202
COPYXSTK SR    R15,R15       COPY RESIDUAL LSTAR COUNT          GP09202
         SR    R14,R14                                          GP09202
         ICM   R15,3,2(R3)   START CC                           GP09202
         MR    R14,R2        CONVERT TO TRACKS                  GP09202
         ICM   R14,3,4(R3)   GET TRACKS                         GP09202
         AR    R15,R14       ADD RESIDUAL TRACKS                GP09202
         AR    R15,R6        ADD LSTAR TRACKS                   GP09202
         BCTR  R15,0         ALLOW FOR LSTAR BUMP               GP09202
         SR    R14,R14       CLEAR FOR DIVIDE                   GP09202
         DR    R14,R2        GET TRACKS / CYLINDERS OF END      GP09202
         STCM  R15,3,6(R3)   STASH END CYLINDER                 GP09202
         STCM  R14,3,8(R3)     AND END TRACK                    GP09202
COPYXSTX LA    R3,10(,R3)    SET FOR VVRS ADDRESS               GP09202
COPYXSTY LR    R2,R9         RESTORE                            GP09202
         SR    R14,R14                                          GP09202
         IC    R14,DTM#EXT   GET CURRENT COUNT                  GP09202
         ST    R14,CUREXT+4  SAVE EXTENT COUNT                  GP09238
         DROP  R9                                               GP09202
         USING DSSBLOCK,R2                                      GP09202
         B     COPYXCOM      AND BUILD IT
         SPACE 1
*---------------------------------------------------------------------*
*   ALLDATA/ALLEXCP MODE, OR NOT A PS/PO DATA SET - USE ALL EXTENTS   *
*---------------------------------------------------------------------*
COPYXALL EX    R15,EXMVCEXT    COPY EXTENTS                     GP09193
         LA    R3,DTMEXTS+1(R15)  VVRS LOCATION                 GP09193
*PRTDATA '>>> Extent',(0(R4),2,HEX,PAD),(2(R4),4,HEX),(6(R4),4,HEX,PAD)
         PUSH  USING                                            GP09193
         USING DTMVVRS,R3    DECLARE FAKE VVRS RECORD           GP09193
COPYXCOM SR    R15,R15       DATA SET LENGTH                    GP09193
         SR    R14,R14       CATALOG LENGTH                     GP09193
         IC    R15,CELLALIL  GET LENGTH OF DSN                  GP09193
         LA    R15,1(,R15)     FINAGLE ??                       GP09193
         IC    R14,CSPRTYP   GET LENGTH OF CDSN                 GP09193
         LA    R0,12(R14,R15)   LENGTH OF NAME SEGMENT          GP09193
         STCM  R0,3,DTMVL2   SET LENGTH OF N SEGMENT            GP09193
         LA    R0,L'DTMREST+14(R14,R15)  LENGTHS + OHD          GP09193
         STCM  R0,3,DTMVL1   SET TOTAL LENGTH OF RECORD         GP09193
         MVC   DTMVT1,=XL6'D50000000000'                        GP09193
         STC   R15,DTMVDSL   DSN LENGTH                         GP09193
         BCTR  R15,0           FINAGLE ??                       GP09193
EXMVCCDS MVC   DTMVDSN(0),CELLALI   MOVE DSN                    GP09247
         EX    R15,EXMVCCDS  MOVE DSN (+1 GARBAGE)              GP09193
         LA    R15,DTMVDSN(R15)  POINT PAST DSN                 GP09193
         XC    0(2,R15),0(R15)   MAKE SURE IT'S CLEAR           GP09193
         STC   R14,2(,R15)       SET CATALOG DSN LENGTH         GP09193
         EX    R14,EXMVCCAT      MOVE CATALOG NAME              GP09193
         LA    R15,3(R14,R15)    PAST CATALOG NAME              GP09193
         MVI   0(R15),0          CLEAR                          GP09193
         MVC   1(L'VVRSREST,R15),VVRSREST  MOVE REST            GP09193
         POP   USING                                            GP09193
         BAL   R9,TAPEOUT         WRITE THE DATA SET HEADER
         B     COPYTGET                                         GP09193
         SPACE 1
EXMVCCAT MVC   3(0,R15),CSPRCAT  MOVE CATALOG NAME              GP09193
         SPACE 1
*---------------------------------------------------------------------*
*   Loop through extents and write track images.                      *
*---------------------------------------------------------------------*
         SPACE 1
COPYTGET LM    R4,R5,CUREXT  GET CURRENT EXTENT AND COUNT       GP09247
COPYTRAK STM   R4,R5,CUREXT  SAVE CURRENT EXTENT AND COUNT LEFT GP09247
         CLI   0(R4),0       NULL EXTENT?
         BE    COPYDONE      YES; DONE WITH THIS DATA SET
COPYTTWO L     R2,@BUFCUR    GET CURRENT SLOT
         L     R0,@BUFEND
         SR    R0,R2         ROOM LEFT IN CURRENT BUFFER
         CH    R0,=H'40'     ARBITRARY MINIMUM
         BNL   COPYSOME
         BAL   R9,TAPEOUT    WRITE OUT THE CURRENT BUFFER
         L     R2,@BUFCUR    LOAD NEW BUFFER START
COPYSOME BAL   R9,BUILDHED   MAKE TRACK HEADER
         XC    DTTTRK(DTTSIZE),DTTTRK   CLEAR UNUSED
         MVI   DTPRCID1,DTPDATA   TRACK RECORD
         MVC   DTTCCHH,CURCCHH    COPY ADDRESS
         VOLREAD TRACK,CURCCHH    READ NEXT TRACK
         LR    R6,R1
         USING MAPVOLRD,R6
         BXLE  R15,R15,COPYTROK   HAVE IT
         OI    DTTTRKID,DTTIOER   SET FOR ERROR
         OICC  4,8           SET BAD TRACK
         PRTDATA '*** Track',(CURCCHH,HEX,PAD),'failed ***'
COPYTROK SR    R5,R5         SIZE FOR I/O ERROR
         TM    DTTTRKID,DTTIOER   TEST FOR ERROR
         BNZ   *+8           YES; NO DATA
         A     R5,TRKCURSZ
         LA    R4,DB         ANY VALID ADDRESS (FOR I/O ERROR)
         LA    R1,8(,R5)     ALLOW FOR R0 DATA
         STH   R1,DTTTRKLN   DATA LENGTH
         LA    R1,DTPSIZE+DTTSIZE(,R5)      FULL TRACK SIZE
         STH   R1,DTPSEGLN   STASH FOR FIT
         INC   DSN#TRAK      COUNT TRACKS WRITTEN
         TM    DTTTRKID,DTTIOER   TEST FOR ERROR
         BNZ   COPYNOST      YES; NO DATA
         L     R4,TRK@DATA   FIRST COUNT FIELD
         L     R14,TRK#BLOK  RECORDS ON TRACK
         A     R14,DSN#REC   COUNT
         ST    R14,DSN#REC   BLOCKS WRITTEN
         TM    OPTFLAGS,FGPSPO    SEQUENTIAL ?
         BNZ   COPYNOST      YES; DON'T NEED R0
         MVC   DTTR0DAT,TRKR0DAT   R0 DATA
COPYNOST LA    R14,DTTCOUNT  TRACK START
         L     R15,@BUFEND   END OF BUFFER
         SR    R15,R14       SIZE LEFT IN BUFFER
         CR    R5,R15        DOES TRACK FIT ?
         BNH   COPYMOVE
         L     R0,@BUFEND
         SR    R0,R2         HEADER+DATA LENGTH
         STH   R0,DTPSEGLN   SET PARTIAL SIZE
         LR    R1,R5         RESIDUAL SIZE
         SR    R1,R15        LESS CURRENT BUFFER
         SR    R0,R0
         D     R0,#DATMAX    DATA SIZE OF ONE BUFFER
         LTR   R0,R0         ANY REMAINDER
         BZ    *+8           NO
         LA    R1,1(,R1)     PARTIAL
         LA    R1,1(,R1)     PLUS CURRENT = NUMBER OF SEGMENTS
         STC   R1,DTPNOSEG   FIRST SEGMENT OF #
COPYSPLT MVC   DB3,DTPNOSEG  SAVE IT
         MVCL  R14,R4        COPY PARTIAL TRACK DATA
         ST    R14,@BUFCUR   UPDATE FOR NEXT TIME
         LTR   R5,R5         ANYTHING LEFT ?
         BNP   COPYBUMP      NO; DO NEXT TRACK
         BAL   R9,TAPEOUT    WRITE FIRST/NEXT BUFFER
         L     R2,@BUFCUR    NEXT AVAILABLE ADDRESS
         BAL   R9,BUILDHED   MAKE NEW HEADER
         MVC   DTPNOSEG(8),DB3   SET OLD HEADER INFO
         SR    R1,R1
         IC    R1,DTPSEGNO   PREVIOUS SEGMENT
         LA    R1,1(,R1)     INCREASE
         STC   R1,DTPSEGNO   AND WRITE BACK
         LA    R14,DSSHEDND  DATA START
         L     R15,#DATMAX   SIZE IN THIS BUFFER
         LR    R1,R15
         MIN   R1,(R5)       MAX MOVEABLE
         LR    R15,R1        COPY
         LA    R1,DTPSIZE(R1)  SIZE OF THIS PORTION
         STH   R1,DTPSEGLN   SET SIZE
         B     COPYSPLT      WRITE NEXT SEGMENT
COPYMOVE LR    R15,R5        NOT MORE THAN WHAT'S AVAILABLE
         MVCL  R14,R4        COPY TRACK DATA
         ST    R14,@BUFCUR   FOR NEXT TIME
         SPACE 1
COPYBUMP BAL   R9,TAPEOUT         WRITE BLOCK, IF USED          GP09210
         LM    R4,R5,CUREXT  GET CURRENT EXTENT ADDRESS / COUNT
         CLI   0(R4),X'40'   LABEL TRACK ?
         BE    COPYBLAB      YES; IGNORE IT
         INC   DSN#DATA,WORK=R0   COUNT DATA TRACKS
         C     R0,DSN#TMAX   PAST END?
         BNL   COPYDONE      DONE WITH LOGICAL DATA
COPYBLAB SR    R14,R14
         SR    R15,R15
         ICM   R15,3,CURCCHH+2    CURRENT HEAD ADDRESS
         LA    R15,1(,R15)   UP
         STH   R15,CURCCHH+2      SET IT BACK
         CLC   CURCCHH,6(R4)      IN CURRENT EXTENT ?
         BH    COPYBUMR             NO; GET NEXT EXTENT
         C     R15,NUMPCYL        IN CURRENT CYLINDER ?
         BL    COPYTRAK             YES; GET IT                 GP09238
         STH   R14,CURCCHH+2      ELSE SET TO ZERO
         ICM   R14,3,CURCCHH      GET CYLINDER
         LA    R14,1(,R14)        BUMP IT
         STH   R14,CURCCHH        STASH BACK
         CLC   CURCCHH,6(R4)      IN CURRENT EXTENT ?
         BNH   COPYTRAK             YES; GET THIS TRACK         GP09238
COPYBUMR LA    R4,10(,R4)         NEXT EXTENT
         MVC   CURCCHH,2(R4)      SET NEXT ADDRESS
*PRTDATA '>>> Extent',(0(R4),2,HEX,PAD),(2(R4),4,HEX),(6(R4),4,HEX,PAD)
         SH    R5,=H'1'           IS THERE ONE ?
         BP    COPYTRAK           YES; DO IT                    GP09238
COPYDONE BAL   R9,TAPEOUT         WRITE BLOCK, IF USED
         SPACE 1
         PRTLIST FDDSDONE
         INC   NUMCOPY
         LA    R5,2          TRAILER WRITTEN TWICE
COPYTRAL L     R2,@BUF       GET BUFFER START
         BAL   R9,BUILDHED   BUILD A HEADER RECORD
         LA    R4,DTRSIZE+DTPSIZE  SIZE OF HEADER + TRAILER
         STCM  R4,3,DTPSEGLN UPDATE LENGTH
         AR    R4,R2         BUFFER USED
         ST    R4,@BUFCUR    SET IT
         MVI   DTPRCID1,DTPDTRLR  IDENTIFY TRAILER
         XC    DTRDLR,DTRDLR      CLEAR DATA
         BAL   R9,TAPEOUT    WRITE FINAL RECORD
         BCT   R5,COPYTRAL
         B     COPYNEXT           TRY ANOTHER
         SPACE 1
FDDSDONE FDPRT '     ',NL
         FDPRT GENERIC,PAD
         FDPRT CELLVOL
         FDPRT CELLDSN,PAD
         FDPRT 'dumped'
         FDPRT DSN#TRAK,I,PAD,RADJ,LEN=10
         FDPRT 'Tracks,'
         FDPRT DSN#REC,I,PAD,RADJ,LEN=10
         FDPRT 'Blocks'
         FDCLC CELLDSN,CELLALI,BE=FDDSDONX
         FDPRT 'as',NL,RADJ,LEN=14                              GP09197
         FDPRT CELLALI,PAD
FDDSDONX FDPRT *END
         DROP  R6
         SPACE 1
COPYTEND B     PGMEXIT
         SPACE 1
COPYBAD1 PRTDATA '*** FMT1 read on',(CELLVOL,PAD),'failed'
         B     COPYBADC
         SPACE 1
COPYBADV PRTDATA '*** VTOC read for',(CELLVOL,PAD),'failed'
COPYBADC PRTDATA '    ',(CELLDSN,PAD),'not dumped'
         INC   NUMFAIL
         B     COPYNEXT
         SPACE 1
*---------------------------------------------------------------------*
*   BUILD A SEGMENT HEADER AT (R2)                                    *
*     NOTE THAT HEADER TYPE AND SEGMENT LENGTH WILL BE COMPLETED      *
*     BY THE CALLER                                                   *
*---------------------------------------------------------------------*
BUILDHED INC   OUT#SEQ,WORK=R0    INCREASE SEGMENT COUNT
         ST    R0,DTPSEQNO   SET SEGMENT
         MVI   DTPNOSEG,1    SEGMENTS/RECORD
         MVI   DTPSEGNO,1    SEGMENT IN RECORD
         LA    R0,DTPSIZE    PROVISIONAL SIZE
         STC   R0,DTPPFXLN   PREFIX LENGTH
         STCM  R0,3,DTPSEGLN   SEGMENT LENGTH
         MVI   DTPDMPID,DTPLOGCL  LOGICAL DUMP
         MVI   DTPRCID1,DTPDATA   SET MOST FREQUENT
         MVI   DTPRCFL1,0    NO DISPLACEMENT
         XC    DTPRESVD,DTPRESVD  RESERVED WORD
         BR    R9
         SPACE 1
*---------------------------------------------------------------------*
*   FIX DATES APPEARING TO BE PRIOR TO 1964                           *
*---------------------------------------------------------------------*
FIXDATE  ICM   R14,7,0(R1)   IS THE DATE ALL ZERO ?             GP09194
         BZR   R9            YES; LEAVE IT ALONE                GP09194
         SRL   R14,16        ISOLATE YEAR                       GP09194
         CH    R14,=H'64'    IS IT 1964 OR LATER ?              GP09194
         BNLR  R9            YES; KEEP IT                       GP09194
         LA    R14,100(,R14)    CHANGE 1900 -> 2000             GP09194
         STC   R14,0(,R1)    UPDATE IT                          GP09194
         BR    R9            RETURN TO CALLER                   GP09194
         SPACE 1
*---------------------------------------------------------------------*
*   TAPE OUTPUT ROUTINE                                               *
*   FOR BSAM USE PLAIN WRITE WITH NO FRILLS                           *
*                                                                     *
*   FOR EXCP, USE WRITE/NOP CCW. NOTE THAT I CAN'T GET UNIT EXCEPTION *
*   WHEN END OF TAPE MARKER IS PASSED. INSTEAD THE TAPE SWITCH IS     *
*   TRIGGERED BY AN EQUIPMENT CHECK (DDR IS INHIBITED).               *
*---------------------------------------------------------------------*
TAPEOUT  L     R2,@BUF
         L     R3,@BUFCUR
         SR    R3,R2
TAPEOUTR STM   R2,R3,SUBSAVE
         LTR   R3,R3         VALID LENGTH ?                     GP09207
         BNP   TAPEOUTY      PROGRAM ERROR
         TM    OPTFLAGS,FGVAR     RECFM=V OR U ?
         BZ    TAPEOUTL      U
         SH    R2,=H'8'      BACK UP TO BDW
         MVC   HOLDBDW,0(R2)     PRESERVE OLD DATA, IF ANY      GP09207
         LA    R15,4(,R3)    LENGTH FOR RDW
         LA    R14,4(,R15)   LENGTH FOR BDW
         LR    R3,R14        NEW WRITE LENGTH
         SLDL  R14,16        ALIGN
         STM   R14,R15,0(R2)  BUILD BDW/RDW
TAPEOUTL TM    OPTFLAGS,FGTEST    RUNNING IN TEST MODE ?
         BNZ   TAPEOUTX      YES; BYPASS I/O
         TM    DCBMACRF-IHADCB+TAPEDCB,DCBMRECP  EXCP MODE?
         BNZ   XDAPST        USING EXCP
         WRITE TAPEDECB,SF,TAPEDCB,(R2),(R3),MF=E   WRITE A BIG BLOCK
         CHECK TAPEDECB          WAIT FOR COMPLETION
         B     TAPEOUTX
         SPACE 1
XDAPST   STH   R3,TAPECCW+6
         STCM  R2,7,TAPECCW+1     WRITE FROM TEXT
         ZI    DCBIFLGS-IHADCB+TAPEDCB,DCBIFEC   ENABLE ERP
         OI    DCBIFLGS-IHADCB+TAPEDCB,X'40'     SUPPRESS DDR
         STCM  R3,12,IOBSENS0-IOBSTDRD+TAPEIOB   CLEAR SENSE
         OI    DCBOFLGS-IHADCB+TAPEDCB,DCBOFLWR  SHOW WRITE DONE
         XC    TAPEECB,TAPEECB
         EXCP  TAPEIOB
         WAIT  ECB=TAPEECB
         TM    TAPEECB,X'7F'      GOOD COMPLETION?
         BNO   TAPEN7F            NO
         B     TAPEOUTX
         SPACE 1
TAPEN7F  TM    IOBUSTAT-IOBSTDRD+TAPEIOB,IOBUSB7  END OF TAPE MARKER?
         BNZ   TAPEEND       YES; SWITCH TAPES
         CLC   =X'1020',IOBSENS0-IOBSTDRD+TAPEIOB  EXCEEDED AWS/HET ?
         BNE   TAPEB001
         INC   DCBBLKCT-IHADCB+TAPEDCB,INC=-1    FIX BLOCK COUNT
         EOV   TAPEDCB       TRY TO RECOVER
 PRTDATA '--- New tape at block',(OUT#BLOK,I,PAD),'***'
         B     XDAPST
         SPACE 1
TAPEB001 LA    R9,TAPEIOB    GET IOB FOR QUICK REFERENCE
         PRTLIST FDTAPIOB    PRINT INFO
         PRTCLOSE
         ABEND 001,DUMP
         SPACE 1
         USING IOBSTDRD,R9   DECLARE IT
FDTAPIOB FDOPT NL,CC=C'0'
         FDPRT '*** TAPE WRITE ERROR; ECB='
         FDPRT TAPEECB,HEX,PADR
         FDPRT '***'
         FDFD  IOBFLAG1,OPTL=NL
         FDFD  IOBFLAG2
         FDFD  IOBSENS0
         FDFD  IOBSENS1
         FDFD  IOBCSW
         FDFD  IOBSTART
         FDFD  IOBINCAM
         FDFD  IOBERRCT
         FDPRT *END
         DROP  R9
         SPACE 1
TAPEEND  INC   DCBBLKCT-IHADCB+TAPEDCB   UPDATE BLOCKCOUNT
         OI    DCBOFLGS-IHADCB+TAPEDCB,DCBOFLWR  SHOW WRITE DONE
         EOV   TAPEDCB            GET ANOTHER TAPE
         B     TAPEOUTX      CONTINUE ON NEW TAPE
         SPACE 1
TAPEOUTX TM    OPTFLAGS,FGVAR     RECFM=V OR U ?                GP09207
         BZ    TAPEOUT2      U                                  GP09207
         MVC   0(8,R2),HOLDBDW    RESTORE OLD DATA              GP09207
TAPEOUT2 LM    R2,R3,SUBSAVE
         INC   OUT#BLOK      INCREMENT BLOCK COUNT
         STMAX R3,OUT#MAX    SAVE LARGEST BLOCK SIZE
         A64F  OUT#BYTE,(R3)   COUNT OUTPUT BYTES
TAPEOUTY L     R2,@BUF
         ST    R2,@BUFCUR    RESET BUFFER USE
         BR    R9
         SPACE 1
         LTORG ,
         TITLE 'D S S D U M P  ***  SUBROUTINES AND DATA'
DSSDUMPD CSECT ,             SUBROUTINE AND DATA AREA
         DROP  R11,R12       USING R10 FOR THIS
PGMEXIT8 PRTL  '0*** Unable to continue due to errors',CC=ASA
         OICC  8
         SPACE 1
PGMEXIT  ICM   R0,15,NUMCOPY   CHECK DATA SETS COPIED
         BZ    PGMEXWRN      THAT'S NOT GOOD ?
         S     R0,NUMPICK     COMPARE TO COUNT SELECTED
         BZ    PGMEXIT1      OK
PGMEXWRN LA    R0,4
         STMAX R0,RETCODE    SET WARNING CODE
PGMEXIT1 TM    TAPEDCB+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    PGMEXIT2      TAPE OPEN ?
         TM    OPTFLAGS,FGWRITE   OUTSTANDING WRITE ?
         BZ    PGMEXCLS
         CHECK TAPEDCB       CHECK LAST BLOCK
         ZI    OPTFLAGS,FGWRITE   OUTSTANDING WRITE
PGMEXCLS CLOSE MF=(E,OCLIST)    YES; CLOSE IT
         L     R15,OUT#MAX        IN CASE CAN'T DIVIDE
         ICM   R0,15,OUT#BLOK     GET BLOCK COUNT
         BZ    PGMEXWAT           USE MAX AS AVERAGES
         LM    R14,R15,OUT#BYTE   GET OUTPUT BYTE COUNT
         DR    R14,R0             GET AVERAGE BLOCK SIZE
PGMEXWAT ST    R15,OUT#AVG          AND SAVE IT
         PRTROOM 6
         PRTLIST FDSTAT      PRINT TAPE STATISTICS
PGMEXIT2 PRTROOM 6
         PRTLIST FDFINAL
         BAL   R14,ENDTREE   TERMINATE TREE IF NOT DONE EARLIER
         SUBCALL SUBCOMP,('END',,,CMP@STOR),VL,MF=(E,COMPPARM)
         PRTCLOSE DEV=255    LFETCH=LINK DOESN'T CLOSE
         SERVTERM ,          CLOSE AND FREE EVERYTHING
         PGMEXIT COPYRET=(RETCODE,8)   RETURN R15 & R0
         SPACE 1
INITREE  SUBCALL SUBTREE,('INI',ROOTBALL),VL,MF=(E,CALLPARM)
         ORG   *-2           OVERLAY BALR
         BR    R15           RETURN TO CALLER
         SPACE 1
ENDTREE  SUBCALL SUBTREE,('END',ROOTBALL),VL,MF=(E,CALLPARM)
         ORG   *-2           OVERLAY BALR
         BR    R15           RETURN TO CALLER
         SPACE 1
LISTREE  SUBCALL SUBTREE,('LIST',ROOTBALL),VL,MF=(E,CALLPARM)
         ORG   *-2           OVERLAY BALR
         BR    R15           RETURN TO CALLER
         SPACE 1
NEXTREE  SUBCALL SUBTREE,('NEXT',ROOTBALL),VL,MF=(E,CALLPARM)
         ORG   *-2           OVERLAY BALR
         BR    R15           RETURN TO CALLER
         SPACE 2
***********************************************************************
**  WHATMASK - LOOK AT WHATEVER USER IS PASSING OFF AS A MASK, AND   **
**    CLASSIFY IT AS NAME, MASK, or POSITIONAL MASK                  **
**                rc  0      4          8                            **
**              flag  00    80         90                            **
***********************************************************************
WHATMASK STM   R1,R5,SUBSAVE SAVE A LITTLE
         LR    R5,R1         PRESERVE MASK ADDRESS
         MVI   L'COMPMASK(R5),X'00'    SET FOR NAME
         SUBCALL SUBCOMP,('AST',0(R5),0(R5),CMP@STOR),VL,              *
               MF=(E,CALLPARM)
*DEFER*  CH    R15,=H'8'     IS MASK VALID ?
*DEFER*  BNL   WHATMBAD
         SR    R15,R15       SET RETURN CODE
         TRT   0(L'COMPMASK,R5),TRTMASK   ANY MASK CHARACTERS?
         BZ    WHATMEXT      NO; RETURN NAME
         MVI   L'COMPMASK(R5),X'80'    SHOW MASK
         SR    R2,R2         CLEAR FOR TRT IC
         TRT   0(L'COMPMASK,R5),TRTMASKP  ANY POSITIONALS ?
         LA    R15,4(,R2)    SET MASK=4, POSITIONAL=8
         BZ    WHATMEXT      NO
         OI    L'COMPMASK(R5),X'10'    SHOW POSITIONAL
WHATMEXT LM    R1,R5,SUBSAVE
         BR    R9            RETURN TO CALLER
         SPACE 1
*---------------------------------------------------------------------*
*   PHASE I DATA                                                      *
*---------------------------------------------------------------------*
         DS    0D            FORCE ALIGNMENT                    GP09207
PATTAPE  DCB   DDNAME=TAPE,MACRF=W,DSORG=PS,EXLST=TAPEXLST  WAS RECFM=U
         WRITE PATDECB,SF,TAPEDCB-TAPEDCB,2-2,3-3,MF=L   WRITE A BLOCK
PATTAPEL EQU   *-PATTAPE
TAPEXLST DC    0A(0),X'85',AL3(TAPEMERG)
         DS    0D            ALIGN CCW(S)
PATEXCP  DCB   DDNAME=TAPE,MACRF=E,DSORG=PS,REPOS=Y
PATCCW   CCW   1,2-2,X'40',3-3
         CCW   3,2-2,X'20',1
PATXLEN  EQU   *-PATEXCP     PATTERN TO MOVE
         SPACE 1
PATALLOC DS    0F            ALLOCATION REQUEST BLOCK
         DC    AL1(PATTUPTR-PATALLOC)   RB LENGTH
         DC    AL1(S99VRBAL)   ALLOCATE
         DC    AL1(0,0)      (NO) FLAGS
         DC    AL4(0)        ERROR/INFO CODE RETURN
         DC    AL4(PATTUPTR) TEXT UNIT POINTER LIST ADDRESS
         DC    AL4(0)        RB EXTENSION
         DC    4AL1(0)       MORE FLAGS
PATALLEN EQU   *-PATALLOC    LENGTH TO MOVE
PATTUPTR DC    A(TUPDDN)     SPECIFY DDN
         DC    AL1(X'80'),AL3(TUPDUM) AND REQUEST DUMMY DD
TUPDDN   DC    AL2(DALDDNAM,1,8)    DDN 1 ENTRY, LEN 8
DCVOLMNT DC    CL8'VOLMOUNT'
TUPDUM   DC    AL2(DALDUMMY)
         SPACE 1
TRTMASK  DC    256AL1(0)     ALLOW ALL CHARACTERS
         TRENT TRTMASK,4,C'*',C'?',  NORMAL WILD CARD
         TRENT ,8,C'%'        POSITIONAL WILD CARD
         SPACE 1
TRTMASKP DC    256AL1(0)     ALLOW ALL CHARACTERS
         TRENT TRTMASKP,4,C'%'   POSITIONAL WILD CARD ?
         SPACE 1
TRTDSNM  DC    256AL1(8)     FAIL ALL
         TRENT TRTDSNM,0,(C'A',9),(C'J',9),(C'S',8),  ALPHA
         TRENT ,0,(C'0',10),C'@',C'#',C'$', -MERIC + INTEGER
         TRENT ,0,C'?',C'*',C'.',C'%',        INDEX + MASKING
         TRENT ,4,C' '       SCAN STOPPER
         SPACE 1
PATIOWK  DS    0F            START OF WORK PATTERN              GP09194
PATPRINT PRTWORK SYSPRINT,SYSOUT,TITLE=3                        GP09194
PATIN    INPWORK SYSIN,EODAD=CARDEOD,EDIT=128                   GP09194
PATDDNM  DC    CL8'TAPE'                                        GP09194
PATIOLEN EQU   *-PATIOWK     LENGTH TO MOVE                     GP09194
VVRSREST DC    X'0054220000000000000000000048240002000000000000000008E2*
               E3C1D5C4C1D9C400000008E2E3C1D5C4C1D9C4'          GP09193
         SPACE 1
QMAJ     DC    CL8'SYSDSN '                                     GP09212
QJAM     DC    CL8'SPFEDIT'                                     GP09212
PATENQ   ENQ   (QMAJ,1-1,E,44,SYSTEM),RET=TEST,MF=L             GP09212
PATENQL  EQU   *-PATENQ                                         GP09212
         SPACE 1
FDFINAL  FDOPT NL,CC=C'0'    DOUBLE SPACE
         FDPRT 'Completion code',NL
         FDPRT RETCODE,I,PAD
         FDPRT NUMPICK,I,RADJ,NL,LEN=12
         FDPRT 'Data Sets selected',PAD
         FDPRT NUMSKIP,I,RADJ,NL,LEN=12
         FDPRT 'Data Sets skipped',PAD
         FDPRT NUMFAIL,I,RADJ,NL,LEN=12
         FDPRT 'Data Sets failed',PAD
         FDPRT NUMCOPY,I,RADJ,NL,LEN=12
         FDPRT 'Data Sets copied',PAD
         FDCLC NUMDUPE,ZEROES,BE=FDFINALX
         FDPRT NUMDUPE,I,RADJ,NL,LEN=12
         FDPRT 'Data Sets renamed',PAD
FDFINALX FDPRT *END
         SPACE 1
FDSTAT   FDOPT NL,CC=C'0'    DOUBLE-SPACE
         FDPRT OUT#BLOK,I,RADJ,NL,LEN=12
         FDPRT 'Blocks written',PAD
         FDPRT OUT#SEQ,I,RADJ,NL,LEN=12
         FDPRT 'Segments written',PAD
         FDPRT OUT#MAX,I,RADJ,NL,LEN=12
         FDPRT 'Maximum block size',PAD
         FDPRT OUT#AVG,I,RADJ,NL,LEN=12
         FDPRT 'Average block size',PAD
         FDPRT *END
         SPACE 1
*---------------------------------------------------------------------*
*   BSAM DCB OPEN EXIT                                                *
*   USE BLKSIZE FROM JFCB OR DSCB, BUT NO LESS THAN MINBLOCK          *
*   AND NO MORE THAN TRACK SIZE (OR HALF-TRACK FOR MODULO DEVICES)    *
*---------------------------------------------------------------------*
         PUSH  USING
         DROP  ,
         USING TAPEMERG,R15
         USING IHADCB,R1
TAPEMERG L     R3,#BUFMAX-TAPEDCB(,R1)    CURRENT BUFMAX        GP09207
         SR    R2,R2
         ICM   R2,3,DCBBLKSI   GET JFCB OR DSCB SIZE
         BNZ   *+6
         LR    R2,R3         USE DEFAULT
         MIN   R2,(R3)       USE SMALLER VALUE
         MAXH  R2,=AL2(MINBLOCK)   BUT AT LEAST 1K              GP09207
         LR    R3,R2         ALSO UPDATE BUFMAX
         TM    DCBRECFM,X'C0'     RECFM=U?
         BO    TAPEMERX      YES; JUST SET BLOCK SIZE
         BM    TAPEMERV      F OR V (F WILL FAIL)
         OI    DCBRECFM,X'C0'     SET =U
         B     TAPEMERX          AND EXIT
TAPEMERV SH    R3,=H'4'      LESS FOUR FOR RDW
         STH   R3,DCBLRECL
         SH    R3,=H'4'      LESS FOUR FOR BDW
TAPEMERX STH   R2,DCBBLKSI
         ST    R3,#BUFMAX-TAPEDCB(,R1)    UPDATE BUFMAX         GP09207
         BR    R14           RETURN TO OPEN
         POP   USING
         SPACE 1
         LTORG ,
         TITLE 'D S S D U M P  ***  DYNAMIC DATA AND MAPPINGS'
CELLSECT DSECT ,             TREE DEFINITION
CELLVOL  DS    CL6           VOLUME SERIAL
CELLDSN  DS    CL44          DATA SET NAME
CELLKEY  EQU   CELLVOL,L'CELLVOL+L'CELLDSN,C'C'  KEY
CELLALIL DS    X             LENGTH OF ALIAS NAME               GP09197
CELLALI  DS    CL44          ALIAS SDATA SET NAME
CELLFLAG DS    X             FLAGS
CFPICK   EQU   X'01'           TO BE DUMPED
CFFAIL   EQU   X'02'           FAILED
CFSKIP   EQU   X'04'           NOT SELECTED
CFENQ    EQU   X'08'           ENQ FAILED
CFDUMP   EQU   X'80'           DUMPED SUCCESSFULLY
CELLLEN  EQU   *-CELLSECT    LENGTH OF ONE ENTRY
         SPACE 1
DSSDUMPD CSECT ,             DEFINE AFTER CELL
ROOTPATT SERVTREE PFX=PAT,KEYLEN=L'CELLKEY,KEYOFF=CELLKEY-CELLSECT,    *
               RECLEN=CELLLEN,RECNUM=(64*1024-48)/CELLLEN  USE 64K
BLANKS   EQU   PATREC,CELLLEN,C'C'     REDEFINE
         SPACE 1
SAVE     DSECT ,
ZEROES   DS    D             CONSTANT
DB       DS    D
DB2      DS    D
DB3      DS    D
         SERVDEFS ,          DEFINE NEEDED CONSTANTS
DYNIOWK  DS    0F            START OF WORK PATTERN              GP09194
SYSPRINT PRTWORK SYSPRINT,SYSOUT,TITLE=3                        GP09194
SYSIN    INPWORK SYSIN,EODAD=CARDEOD,EDIT=128                   GP09194
SYSDDNM  DC    CL8'TAPE'                                        GP09194
DYNIOLEN EQU   *-DYNIOWK     LENGTH TO MOVE                     GP09194
@VOLREAD DS    A             VOLUME READER
NUMCOPY  DS    F             NUMBER OF DATA SETS COPIED
NUMPICK  DS    F             NUMBER OF DATA SETS SELECTED
NUMSKIP  DS    F             NUMBER OF DATA SETS SKIPPED
NUMFAIL  DS    F             NUMBER OF DATA SETS FAILED
NUMDUPE  DS    F             NUMBER OF DUPLICATE NAMES REPLACED
NUMPFX   DS    F             NUMBER OF PREFIX/RENAME ENTRIES    GP09197
         SPACE 1
SUBSAVE  DS    5A
         SPACE 1
COMPPARM DS    4A            SUBCOMP SUBROUTINE PARAMETERS
CMP@STOR DC    A(0)          MORE STORAGE
COMPMASK DS    CL44,X        (CURRENT) COMPARE MASK
         SPACE 1
ROOTBALL SERVTREE PFX=REC,KEYLEN=L'CELLKEY,KEYOFF=CELLKEY-CELLSECT,    *
               RECLEN=CELLLEN,RECNUM=(64*1024-48)/CELLLEN  USE 64K
         SPACE 1
VOLVOL   DS    CL6           SERIAL LAST USED IN VOLREAD OPEN
         SPACE 2
*     PARAMETER LIST AND WORK AREA
*
***********************************************************************
**   THESE FIELDS MUST STAY CONTIGUOUS FOR CLEARING                  **
**                                                                   **
         CATSPARM PFX=CSP,DSECT=   SUBCAT INTERFACE PARAMETER AREA
#SUBCAT  EQU   CSP@SCAT,4,C'V'
#SUBCOMP EQU   CSP@SCMP,4,C'V'
CATCALL  SUBCALL (1,2,3),MF=L  SUBCAT REMOTE PARAMETER LIST
CMP@WORK DC    A(0)          ADDRESS OF GETMAINED WORK AREA
CALLLIST DC    A(CMPREQ,CSPMASK,DSNMASK,CMP@WORK)
GENERIC  DS    CL8           GENERIC UNIT NAME FOR CURRENT VOLUME
DSNMASK  DC    CL44' '       USER'S REQUESTED DS NAME OR MASK
VOLMASK  DC    CL6' ',CL2' '    REFERENCED VOLUME (COMPARE PAD)
CMPREQ   DC    C'DSN'        COMPARE DSN TO MASK (DSN OR POS)
         SPACE 1
DUMPDSN  DC    CL44' '       CURRENT NON-TAPE DUMP DSN          GP09317
DUMPVOL  DC    CL6'------'     AND VOLUME SERIAL                GP09317
         SPACE 1
OUT#BYTE DS    D             OUTPUT BYTES
OUT#BLOK DS    F             OUTPUT BLOCKS
OUT#SEQ  DS    F             OUTPUT SEGMENTS
OUT#MAX  DS    F             LARGEST BLOCK WRITTEN
OUT#AVG  DS    F             AVERAGE BLOCK WRITTEN
         SPACE 1
DSN#TRAK DS    F       1/5   DATA SET TRACKS (PHYSICAL)
DSN#TMAX DS    F       2/5   MAX TO PROCESS (DS1LSTAR+1)
DSN#DATA DS    F       3/5   DATA SET TRACKS (LOGICAL)
DSN#REC  DS    F       4/5   DATA SET RECORDS
NUMPCYL  DS    F       5/5   TRACKS PER CYLINDER
CURCCHH  DS    0XL4,2XL2     CURRENT TRACK ADDRESS
CUREXT   DS    AL4           ADDRESS OF CURRENT EXTENT
CUR#EXT  DS    FL4           EXTENTS LEFT TO DO
         SPACE 1
         MAPPARSE DSECT=NO   @PARSER INVOCATION ADDRESS
         SPACE 1
OPTFLAGS DS    X             PROCESSING OPTIONS
FGENQ    EQU   X'80'           GET ENQUEUE WHILE DUMPING DS
FGVAR    EQU   X'40'           USE RECFM=V FOR OUTPUT
FGPSPO   EQU   X'20'           CURRENT DATA SET IS PS OR PO
FGADAT   EQU   X'10'           DUMP ALL ALLOCATED TRACKS
FGTEST   EQU   X'08'           TEST MODE - NO OUTPUT WRITTEN
FGBUG    EQU   X'04'           DEBUG MODE - LOTS OF OUTPUT
FGEXP    EQU   X'02'           EXPORTING DATA - RESET LOCALS    GP09197
FGWRITE  EQU   X'01'           UNCHECKED WRITE OUTSTANDING
         SPACE 1
PROFLAGS DS    X             PROCESSING OPTIONS
PFGDUMP  EQU   X'80'           DUMP REQUEST PENDING
PFPREF   EQU   X'20'           PREFIX (ONLY) FORM OF RENAME     GP09197
PFSOME   EQU   X'02'           NOT USING ALLDATA FOR THIS DS    GP09202
PFGONCE  EQU   X'01'           AT LEAST ONE DUMP REQUEST
         SPACE 1
OCLIST   OPEN  (TAPEDCB,OUTPUT),MF=L
         SPACE 1
         DS    0D            ALIGN CCW(S)
TAPEDCB  DCB   DDNAME=TAPE,MACRF=W,DSORG=PS
         WRITE TAPEDECB,SF,TAPEDCB,1-1,2-2,MF=L  WRITE A BLOCK
TAPELEN  EQU   *-TAPEDCB
         SPACE 1
         ORG   TAPEDCB
TAPEEXCP DCB   DDNAME=TAPE,MACRF=E,DSORG=PS,REPOS=Y
TAPECCW  CCW   1,3-3,X'40',4-4
         CCW   3,3-3,X'20',1
TAPEXLEN EQU   *-TAPEEXCP    PATTERN TO MOVE
TAPEECB  DC    A(0)
TAPEIOB  DC    X'42,00,00,00'
         DC    A(TAPEECB)
         DC    2A(0)
         DC    A(TAPECCW)
         DC    A(TAPEDCB)
         DC    2A(0)
         SPACE 1
         ORG   ,             LONGER OF BSAM AND EXCP DATA
         SPACE 1
@BUF     DS    A             ADDRESS OF TAPE BUFFER
#BUFMAX  DS    F             (LOGICAL) SIZE OF BUFFER
#DATMAX  DS    F             MAXIMUM TRACK DATA SIZE IN BUFFER
@BUFCUR  DS    A             NEXT AVAILABLE SPACE
@BUFEND  DS    A             (LOGICAL) BUFFER END
@MEMCUR  DS    A             DITTO FOR DS NAME TABLE
@MEMEND  DS    A             (PHYSICAL) BUFFER END
         SPACE 1
ENQLIST  ENQ   (QMAJ,1-1,E,44,SYSTEM),RET=TEST,MF=L             GP09212
         ORG   ENQLIST                                          GP09212
LOCFMT1  DS    (44+96)X      FORMAT 1 DSCB
LOCFMT2  DS    (140)X        FORMAT 2 DSCB
LOCFMT3  DS    (140)X        FORMAT 3 DSCB
         SPACE 1
EXCMASKS DS    16CL45  1/2   EXCLUSION MASKS FOR ONE SELECT
EXC#MASK DS    F       2/2   CURRENT EXCLUSION MASK REQUESTS
         SPACE 1
PFXOLDL  DS    X             LENGTH OF OLD PREFIX (0<= <23)     GP09197
PFXOLD   DS    CL23          OLD PREFIX (0<= <23)               GP09197
PFXNEWL  DS    X             LENGTH OF NEW PREFIX (0<= <23)     GP09197
PFXNEW   DS    CL23          NEW PREFIX (0<= <23)               GP09197
PFXLEN   EQU   *-PFXOLDL     ONE RENAME ENTRY                   GP09197
         DS    (15)XL(PFXLEN)     16 ENTRIES MAX PER RUN        GP09197
MAXPFX   EQU   (*-PFXOLDL)/PFXLEN   ENTRIES ASSEMBLED           GP09197
         SPACE 1
HOLDBDW  DS    CL8           TEMP STORAGE FOR HELD DATA
BUFBDW   DS    2AL4          RECFM=V BDW/RDW PREFIX
BUFTAPE  DS    256XL256      65K TAPE BUFFER
         SPACE 1
SAVEEND  EQU   *
         SPACE 1
         PRINT &PRTSYS
CRUDFMT1 DSECT ,
         IECSDSL1 1
CRUDFMT3 DSECT ,
         IECSDSL1 3
CRUDFMT4 DSECT ,
         IECSDSL1 4
         IEFUCBOB ,
         IEZIOB ,
         IEFTIOT1 ,
         DCBD  DSORG=PS,DEVD=(TA,DA)
         IHADVCT ,
         CVT   ,
         IEFZB4D0 ,          SVC 99 RB DEFINITION
         IEFZB4D2 ,          SVC 99 TEXT UNIT DEFS
         SPACE 1
*        NO USABLE IBM AMCBS MACRO
*
AMCBS    DSECT ,
CBSID    DS    CL2           ID
CBSSIZ   DS    AL2           LENGTH
CBSMCSTA DS    A             CCHH OF MASTER CATLG
CBSACB   DS    A             MASTER CAT ACB
CBSCBP   DS    A             C B MANIP
CBSCMP   DS    0A            CAT RTNE
CBSMCUCB DS    A             MASTER CAT UCB
CBSCAXCN DS    A             CAXWA CHAIN
CBSCRACA DS    A             CRA CAXWA CHAIN
CBSCRTCB DS    A             CRA TASK TCB
CBSVSRT  DS    A
CBSVUSE  DS    A             VSRT USE COUNT
CBSVPTR  DS    A             VSRT
CBSFLAGS DS    X             FLAGS
CBSMICF  EQU   X'80'           MAST IS ICF CATALOG
         DS    XL3           SPARE
CBSVVDSA DS    A             VVDS MANAGER
CBSDEVNT DS    A             DEVICE NAME TABLE
CBSVSICN DS    A             IDAVSI CHAIN
CBSFLG1  DS    X             AMCBS FLAGS
CBSCUVSI EQU   X'80'           VSI CHAIN CLEAN-UP REQUIRED
         DS    XL3           SPARE
         SPACE 1
         IGGCAXWA ,          (PVTMACS)
MYJFCB   DSECT ,
         IEFJFCBN ,
         MAPPARST ,
         SPACE 1
         PRINT ON,GEN
         MAPVOLRD ,          RETURN VALUES FROM VOLREAD TRACK
         TITLE 'D S S D U M P  ***  TAPE RECORD DESCRIPTION'
* MAP OF ADRDSSU BLOCKS - ORG TO COMMON HEADER
*
DSSBLOCK DSECT ,
*** Common Header
*
DTPSEQNO DS    F           Segment sequence number
DTPNOSEG DS    XL1         Number of segments per record
DTPSEGNO DS    XL1         Segment number of record
DTPSEGLN DS    XL2         Segment length including prefix
DTPPFXLN DS    XL1         Length of prefix (constant 16)
DTPDMPID DS    XL1         Type of dump
DTPLOGCL EQU   X'10'         Logical dump
DTPRCID1 DS    XL1         Record Identifier 1
DTPTHDR  EQU   X'80'         Tape Header (see DTHDR)
DTPDSNL  EQU   X'40'         DSName/Catalog Lst (see DTLDSN)
DTPDSHDR EQU   X'20'         Dataset Header (see DTDSHDR)
DTPVOLD  EQU   X'10'         Volume Definition (see DTMVOL)
DTPDATA  EQU   X'08'         Data Track (see  DTTTRK)
DTPDTRLR EQU   X'04'         Dataset Trailer (see DTRTLR)
DTPRCFL1 DS    XL1         Flag Byte
DTPDDISP EQU   X'80'         If on, 16 bytes of track data has been
*                            displaced from this segment to the end of
*                            the last segment for this track.
DTPRESVD DS    F                  RESERVED
DTPSIZE  EQU   *-DSSBLOCK      SIZE OF COMMON HEADER
DSSHEDND DS    0F            END OF COMMON HEADER
*
         ORG   DSSHEDND      X'80'
DTHTIMD  DS    CL8         Date & time of dump
DTHIND2  DS    XL1         Dataset type indicators
DTHGNVI  EQU   X'80'         no non-VSAM datasets
DTHGVI   EQU   X'40'         no VSAM datasets
DTHGT64K EQU   X'20'         more than 65535 datasets on volume
DTHLEN   DS    XL2         Header length
DTHVERNO DS    XL1         DSS Version number
DTHLVLNO DS    XL1         DSS modification number (level)
DTHBLKSZ DS    XL2         Maximum blksize
DTHNDS   DS    XL2         Number of datasets in list
DTHIND1  DS    XL1         Indicators
DTHFCMP  EQU   X'80'         file compressed
DTHUNLCD EQU   X'40'         unallocated space dumped
DTHSFER  EQU   X'20'         sphere option
DTHSIZE  EQU   *-DSSHEDND      SIZE OF TAPE HEADER
*
*** Dataset Contents List    X'40'
*
         ORG   DSSHEDND
DTLLEN   DS    XL1         Length of dataset name
DTLCAT   DS    CL44        Catalog DSN
DTLDSN   DS    0CL44       Data Set name 1-44
* ENDED BY X'00' = DTP SIZE
DTLSIZE  EQU   *-DSSHEDND      SIZE OF ONE ENTRY + DSN
*
*** Dataset Header record    X'20'
*
         ORG   DSSHEDND
DTDLEN   DS    XL1         Length of dataset name
DTDCATLN DS    XL1         Length of catalog name
DTDDSORG DS    XL2         Dataset org (from FMT 1)
DTDOPTCD DS    XL1         Dataset option code (from FMT 1)
DTDNVOL  DS    XL1         Number of volumes for dataset
DTDIND   DS    XL1         Dataset indicator
DTDRACFG EQU   X'08'         Generic RACF profile               GP09193
DTDALIAS EQU   X'04'         User catalog alias
DTDSPER  EQU   X'02'         Sphere record follows
DTDSMS   EQU   X'01'         SMS Managed dataset
DTDPSWD  DS    XL8         pswd
         DS    CL44        catlg name
DTDDSN   DS    CL44        dataset name
DTDVCTD  DS    XL1         Volume count for non-vsam
         DS    XL1         VSAM index component vol cnt or zero
DTDIND2  DS    XL1
DTDAIXSP EQU   X'80'       AIX and part of a sphere
DTDCDF   EQU   X'40'       Common format dataset
DTDPDSE  EQU   X'20'       PDSE dataset
DTDNTALL EQU   X'10'       Dumped without ALLD or ALLX
DTDSAI   EQU   X'08'       DS additional information
DTDNOIDX EQU   X'04'       VSAM indexed DS dumped using VALIDATE
DTDPDSET EQU   X'02'       PDSE dumped as track images
DTDSDM   EQU   X'01'       Use system data mover
DTDSIZE  EQU   *-DSSHEDND
*
*** Volume Definition Record (1 per volume)
*
         ORG   DSSHEDND    X'10'
DTMVOL   EQU   *
DTMVSERL DS    CL6         Volume serial number
DTMDEVTY DS    XL4         DEVTYPE (UCBTBYT4)
         DS    XL2
DTMTRKCP DS    XL4         Bytes per track
DTMLOGCY DS    XL2         Cylinders per volume
DTMTRKCY DS    XL2         Tracks per cylinder
         DS    XL2         max compress buffer in words
DTMFLAGS DS    XL2         flags
DTMCVAF  EQU   X'20'         Indexed VTOC                       GP09193
DTM#VVRS DS    XL1         Number of VVRS/NVRS dumped
DTM#DSCB DS    XL1         Number of DSCBs dumped
DTM#EXT  DS    XL1         Number of extents dumped
DTMMODNO DS    XL1         Model number (looks like zero for logical)
DTMDSCB  DS    XL(DS1END-IECSDSL1)  DSCB 1
DTMEXTS  DS    1XL10          1-16 EXTENTS (?)
DTMVVRS  DS    XL126       Not sure what goes in here           GP09193
         ORG   DTMVVRS     REDEFINE                             GP09193
DTMVL1   DS    XL2         Total VVRS LENGTH (x'7E')            GP09193
DTMVL2   DS    XL2         Length of N segment                  GP09193
DTMVT1   DS    XL6'D50000000000'                                GP09193
DTMVDSL  DS    X           Data set name length                 GP09193
DTMVDSN  DS    0CL44       Data set name                        GP09193
DTMVT2   DS    XL2'0000'                                        GP09193
DTMVCSL  DS    X           Catalog  name length                 GP09193
DTMVCSN  DS    0CL44       Catalog  name                        GP09193
DTMVT3   DS    X'00'                                            GP09193
DTMREST  DS    XL84'005422'   Length, x'22' record, zeros       GP09193
DTMSIZE  EQU   *-DSSHEDND
         ORG   ,           RESTORE MAX SIZE                     GP09193
*
*** Data Track Record
*
         ORG   DSSHEDND    X'08'
DTTTRK   EQU   *
DTTTRKLN DS    XL2         Length of data on track
DTTTRKID DS    XL1         Track indicators
DTTIOER  EQU   X'80'         I/O Error
DTTTROVF EQU   X'40'         Last rec on trk is overflow record
DTTTCMP  EQU   X'20'         Track compressed
DTTVFRST EQU   X'10'         First VVDS record
DTTINVT  EQU   X'08'         Invalid track format
DTTSTAT  EQU   X'04'         User statisical record
DTTCCHH  DS    XL4         CCHH of track
         DS    XL4         VSAM stuff
         DS    XL5         reserved
DTTR0DAT DS    XL8         Record 0 data
DTTCOUNT DS    0X            FIRST COUNT FIELD
DTTSIZE  EQU   *-DSSHEDND
*
*** Dataset Trailer record
*
         ORG   DSSHEDND      X'04'
DTRDLR   DS    XL6           ZEROES ?
DTRSIZE  EQU   *-DSSHEDND
*
         END
