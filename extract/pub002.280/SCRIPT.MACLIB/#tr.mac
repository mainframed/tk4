***********************************************************************
*                                                                     *
*              .TRANSLATE (.TR) --- SPECIFY TRANSLATE TABLE.          *
*                                                                     *
***********************************************************************
         SPACE
TR      $ENTER ,
         MVC   TRANAD,TRANADO      ADDR OF OUTPUT TRANSLATE TABLE
        $CALL  TRSCN               GO DO THE WORK
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
TRSCN   $ENTER ,
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION IN ARG. FETCH
        $CALL  GETARG              OBTAIN FIRST SOURCE CHAR
         BC    BPOS,TR02           BRANCH IF SOME ARGUMENT(S)
        $CALL  TRRESET             RESET TRANSLATE TABLE
         B     TR07                AND GO TO RETURN
         SPACE
TR01     DS    0H
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION
        $CALL  GETARG              OBTAIN NEXT SOURCE CHARACTER
         BC    BOMIT,TR05          IF NO MORE, QUIT
TR02     DS    0H
        $CALL  TRHEX               GET HEX OFFSET OF SOURCE
         BC    BDNO,TR06           BRANCH IF INVALID OPERAND
         LR    X1,R1               SAVE IT
         SPACE
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION
        $CALL  GETARG              GET TRANSLATED CHARACTER
         BC    BPOS,TR03           IF FOUND, SKIP AHEAD
         LR    R1,X1               IF NO ARGUMENT, SOURCE -> SOURCE
         B     TR04                ..
TR03     DS    0H
        $CALL  TRHEX               GET HEX OFFSET
         BC    BDNO,TR06           BRANCH IF INVALID OPERAND
         SPACE
TR04     DS    0H
         A     X1,TRANAD           PLUS BASE ADDR OF TABLE
         STC   R1,0(,X1)           STORE VALUE IN TRANSLATE TABLE
         B     TR01                DO MORE PAIRS
         SPACE
TR05     DS    0H
        $ON    SWITCHS,TRSWS       TURN ON TRANSLATE SWITCH
         B     TR07                AND GO TO RETURN
         SPACE
TR06     DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         SPACE
TR07     DS    0H
        $EXIT  RC=0                AND RETURN
         SPACE
*        ON ENTRY   (COUNT) ADDR OF STRING TO CONVERT
*                   (TEMP)  LENGTH-1 OF STRING
*        ON EXIT    (R1)    HEX VALUE OF OPERAND
*                   CC = BPOS IF SUCCESSFUL
*                      = BDNO IF ERROR
         SPACE
TRHEX   $ENTER ,                   SAVE CALLER'S REGISTERS
         C     TEMP,F1             TEST LENGTH-1
         BH    TRHEX03             ERROR IF HIGH
         BE    TRHEX01             BRANCH IF TWO CHARS
         SR    R1,R1               CLEAR RETURN REGISTER
         IC    R1,0(,COUNT)        GET RETURN VALUE
         B     TRHEX02             BRANCH TO SUCCESSFUL RETURN
         SPACE
TRHEX01  DS    0H
         L     X1,HEXTABAD         HEX TRANSLATE TABLE ADDR
         XC    SAVEF0,SAVEF0       CLEAR WORK AREA
         MVC   SAVEF0+3(1),0(COUNT)     FIRST CHARACTER
         TR    SAVEF0+3(1),0(X1)   HEX EQUIVALENT
         CLI   SAVEF0+3,15         TOO BIG .Q
         BH    TRHEX03             ERROR IF YES
         L     R1,SAVEF0           FIRST HEX DIGIT
         SLL   R1,4                SHIFT SUM TO POWER OF SIXTEEN
         MVC   SAVEF0+3(1),1(COUNT)     SECOND CHARACTER
         TR    SAVEF0+3(1),0(X1)   HEX EQUIVALENT
         CLI   SAVEF0+3,15         TOO BIG FOR HEX
         BH    TRHEX03             ERROR IF YES
         A     R1,SAVEF0           FINAL RESULT
         SPACE
TRHEX02  DS    0H
        $CC    POS                 OK CONDITION CODE
         B     TRHEX04             BRANCH TO RETURN
         SPACE
TRHEX03  DS    0H
        $CC    DNO                 ERROR CONDITION CODE
         SPACE
TRHEX04  DS    0H
        $RESTOR KEEP=(R1)          RESTORE CALLER'S REGISTERS
         BR    RETURN              RETURN TO CALLER
         SPACE
TRRESET $ENTER ,
         L     TEMP,TRANAD         POINT TO TRANSLATE TABLE TARGET
         L     R1,TRINITAD         IDENTITY TRANSLATE ADDRESS
         MVC   0(256,TEMP),0(R1)   ENTER THE IDENTITY TRANS TABLE
        $OFF   SWITCHS,TRSWS       NO NEED TO TRANSLATE
        $IFOFF SWITCHS,TROSWS,TRRESETF TEST TRANSLATE OPTION
         OC    X'81'(9,TEMP),BLANKS  UPPER 'A' TO 'I'
         OC    X'91'(9,TEMP),BLANKS  UPPER 'J' TO 'R'
         OC    X'A2'(8,TEMP),BLANKS  UPPER 'S' TO 'Z'
        $ON    SWITCHS,TRSWS       TURN ON TRANSLATE SWITCH
TRRESETF DS    0H
        $EXIT  RC=0                RETURN TO CALLER
