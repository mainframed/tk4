***********************************************************************
*                                                                     *
*        INTERNAL ROUTINE 'DUMPIT' -- FORMAT MINI DUMP                *
*                                                                     *
***********************************************************************
         SPACE
*        TO ENTER:    LA    R1,ADDR OF DUMP AREA
*                    $CALL  DUMPIT
         SPACE
DUMPIT  $ENTER ,
         LR    X1,R1               AREA TO FORMAT FROM
         USING DUMPAREA,X1         AND TELL THE ASSEMBLER
         OC    DUMPPSW,DUMPPSW     ANY DATA PRESENT .Q
         BZ    DUMP04              BRANCH BACK IF NOT
         SPACE
         BAL   RETURN,DUMPCLR      CLEAR PRINT BUFFER
         LA    TEMP,ADBASE         POINT TO ENTRY ADDRESS FOR SCRIPT
         BAL   RETURN,DUMPFMT      HEX FORMAT PLEASE
         L     R1,ADBASE           MAIN SCRIPT ENTRY POINT
         SR    COUNT,COUNT         ZERO LENGTH REGISTER
         IC    COUNT,4(,R1)        LENGTH OF VERSION IDENT
         BCTR  COUNT,0             LENGTH-1 FOR MOVE
         EX    COUNT,DUMPMVC       MOVE IDENTIFICATION TO LINE
         MVI   0(X3),C'0'          DOUBLE SPACED PLEASE
         LA    X3,3(COUNT,X3)      POINT AFTER IDENTIFICATION
         MVI   0(X3),C'='          ADD AN EQUAL SIGN
         MVC   2(6,X3),DUMPWRK+2   ADD ENTRY ADDRESS
         BAL   RETURN,DUMPPRT      AND PRINT THE RESULT
         SPACE
         MVC   0(L'DMES01,X3),DMES01  FIRST MESSAGE
         LA    X3,1+L'DMES01(,X3)  BUMP MESSAGE POINTER
         LA    TEMP,DUMPPSW        FIRST HALF OF PSW
         BAL   RETURN,DUMPFMT      TO EXTERNAL FORMAT
         MVC   0(4,X3),DUMPWRK+4   ABEND CODE
         CLI   0(X3),C'0'          0XXX ABEND .Q
         BNE   DUMP01              BRANCH IF NOT
         MVI   0(X3),C' '          CLEAR THE LEADING ZERO
         CLI   1(X3),C'0'          0XX ABEND CODE .Q
         BNE   DUMP01              BRANCH IF NOT
         CLI   2(X3),C'0'          X0X ABEND CODE .Q
         BNE   DUMP01              BRANCH IF NOT
         MVI   2(X3),C'C'          XCX ABEND NOW
DUMP01   DS    0H
         BAL   RETURN,DUMPPRT      PRINT THE RESULT
         SPACE
         OC    DUMPPSW+4(4),DUMPPSW+4  ANY ADDRESS
         BZ    DUMP04              BRANCH BACK IF NOT
         MVC   0(L'DMES02,X3),DMES02  SECOND MESSAGE
         LA    X3,2+L'DMES02(,X3)  BUMP MESSAGE POINTER
         MVC   0(8,X3),DUMPWRK     FIRST HALF PSW
         LA    TEMP,DUMPPSW+4      POINT SECOND HALF
         BAL   RETURN,DUMPFMT      FORMAT SECOND HALF
         MVC   9(8,X3),DUMPWRK     SECOND HALF PSW
         BAL   RETURN,DUMPPRT      PRINT THE RESULT
         SPACE
         MVC   0(L'DMES03,X3),DMES03  THIRD MESSAGE
         BAL   RETURN,DUMPPRT      PRINT THE RESULT
         SPACE
         OC    DUMPREG(16*4),DUMPREG  ANY REGISTERS SAVED .Q
         BZ    DUMP04              BRANCH BACK IF NOT
         SR    COUNT,COUNT         START AT THE BEGINNING
DUMP02   DS    0H
         LR    TEMP,COUNT          REGISTER NUMBER
         BAL   RETURN,DUMPDEC      CONVERT TO DECIMAL
         MVC   2(2,X3),DUMPWRK+10  REGISTER NUMBER
         SLL   TEMP,2              REGISTER TIMES FOUR
         LA    TEMP,DUMPREG(TEMP)  POINTER TO SAVED REG
         BAL   RETURN,DUMPFMT      HEX FORMAT
         MVC   5(8,X3),DUMPWRK     ADD THAT TO MESSAGE
         L     TEMP,0(,TEMP)       REGISTER VALUE
         BAL   RETURN,DUMPDEC      MAKE THAT PRINTABLE
         MVC   13(12,X3),DUMPWRK   ADD THAT TOO
         LR    TEMP,COUNT          REGISTER NUMBER
         SLL   TEMP,2              REGISTER TIMES FOUR
         L     TEMP,DUMPREG(TEMP)  REGISTER CONTENTS
         LA    TEMP,0(,TEMP)       CLEAR HIGH BYTE
         C     TEMP,ADBASE         BEFORE SCRIPT START .Q
         BL    DUMP03              BRANCH IF YES
         C     TEMP,VSCRLAST       AFTER THE END .Q
         BH    DUMP03              BRANCH IF YES
         BAL   RETURN,DUMPFMT      HEX FORMAT OF FIRST WORD
         MVC   27(8,X3),DUMPWRK    FIRST WORD
         LA    TEMP,4(,TEMP)       POINT TO SECOND WORD
         BAL   RETURN,DUMPFMT      HEX FORMAT OF SECOND WORD
         MVC   36(8,X3),DUMPWRK    SECOND WORD
         LA    TEMP,4(,TEMP)       POINT TO THIRD WORD
         BAL   RETURN,DUMPFMT      HEX FORMAT OF THIRD WORD
         MVC   45(8,X3),DUMPWRK    THIRD WORD
         SPACE
DUMP03   DS    0H
         BAL   RETURN,DUMPPRT      PRINT THE RESULT
         LA    COUNT,1(,COUNT)     BUMP REGISTER COUNTER
         C     COUNT,F15           AT THE END .Q
         BNH   DUMP02              BRANCH BACK IF NOT YET
DUMP04   DS    0H
        $EXIT  RC=0                AND RETURN
         DROP  X1
         SPACE
DUMPFMT  DS    0H
         UNPK  DUMPWRK(9),0(5,TEMP)  UNPACK HEX VALUE
         TR    DUMPWRK(8),DUMPTR   AND MAKE IT PRINTABLE
         BR    RETURN              RETURN TO CALLER
         SPACE
DUMPDEC  DS    0H
         LA    R0,C' '             ASSUME PLUS
         LTR   TEMP,TEMP           IS IT POSITIVE .Q
         BNM   DUMPDEC1            BRANCH IF YES
         LA    R0,C'-'             MINUS SIGN AT START
         LPR   TEMP,TEMP           POSITIVE VALUE
DUMPDEC1 DS    0H
         CVD   TEMP,DECM           CONVERT TO DECIMAL
         OI    DECM+7,X'0F'        FIX THE SIGN
         MVC   DUMPWRK,DUMPMSK     ENTER EDIT MASK
         LA    R1,DUMPWRK+11       IN CASE NO SIG SET
         EDMK  DUMPWRK,DECM+2      ENTER THE DATA
         BCTR  R1,0                PULL BACK ONE
         STC   R0,0(,R1)           AND SET THE SIGN
         BR    RETURN              AND RETURN TO CALLER
         SPACE
DUMPPRT  DS    0H
        $SAVE  ,                   SAVE CALLER'S REGISTERS
         L     X3,BUFF3AD          PRINT BUFFER
         LA    R1,84(,X3)          LAST POSSIBLE PRINT POSN
DUMPPRT1 DS    0H
         CLI   0(R1),C' '          TRAILING BLANK
         BNE   DUMPPRT2            BRANCH IF NOT
         BCT   R1,DUMPPRT1         DECREMENT AND TRY AGAIN
DUMPPRT2 DS    0H
         SR    R1,X3               LENGTH-1
         BNP   DUMPPRT3            BRANCH IF NOTHING
         LA    R1,1(,R1)           LENGTH INC RDW
         STH   R1,0(,X3)           SET RDW LENGTH
         LR    R0,X3               POINT TO RDW AND DATA
        $CALL  PUTTERM             OUTPUT THE RESULT
DUMPPRT3 DS    0H
        $RESTOR ,                  RESTORE CALLER'S REGISTERS
         B     DUMPCLR             RETURN VIA RECORD CLEAR
         SPACE
DUMPCLR  DS    0H
         L     X3,BUFF3AD          PRINT BUFFER
         XC    0(4,X3),0(X3)       CLEAR THE RDW
         LA    X3,4(,X3)           POINT TO DATA
         MVC   0(B2LG,X3),BLANKS   CLEAR DATA PORTION
         BR    RETURN              AND RETURN TO CALLER
         SPACE
DUMPMVC  MVC   1(*-*,X3),5(R1)     EXECUTED MOVE VERSION IDENT
DMES01   DC    C'0PROGRAM INTERRUPT'
DMES02   DC    C' PROGRAM STATUS WORD'
DMES03   DC    C'0REG      HEX     DECIMAL  CONTENTS'
DUMPTR   EQU   *-240
         DC    C'0123456789ABCDEF' MAKE HEX PRINTABLE
DUMPMSK  DC    XL12'402020202020202020202120'  DECIMAL MASK
DUMPWRK  DC    CL12'************'  FORMATTING WORK AREA
