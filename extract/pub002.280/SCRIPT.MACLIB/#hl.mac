***********************************************************************
*                                                                     *
*              .HL (HEAD LEVEL) --- CONTROL                           *
*                                                                     *
***********************************************************************
         SPACE
HL      $ENTER ,
         SPACE
         CLI   RMCW+1,C'0'         IS THIS A .HL CPMMAND .Q
         BL    HL01                BRANCH IF YES
         CLI   RMCW+1,C'9'         IS THIS A .HO - .H9 COMMAND .Q
         BNH   HL02                BRANCH IF YES
HL01     DS    0H
        $CALL  GETNUM              GET HEAD LEVEL NUMBER
         BC    BPOS,HL03           BRANCH IF POSITIVE
         BC    BOMIT,HLE1          ERROR IF OMITTED
         BC    BNEG,HLE2           ERROR IF NEGATIVE
         BC    BDNO,HLE3           ERROR IF NOT NUMERIC
HL02     DS    0H                  EXTRACT NO FROM H0-H9 CW
         IC    COUNT,RMCW+1        GET HEAD LEVEL NO
         N     COUNT,F15           ISOLATE HEAD LEVEL NUMBER
HL03     DS    0H                  COUNT NOW HAS HEAD LEVEL NO
         LA    R0,DHMAXTC          GET MAX NO OF CONTENTS LEVELS
         CR    R0,COUNT            CHECK OPERAND VS MAX
         BNH   HLE4                ARGUMENT TOO LARGE
         L     X1,DHNUMTC          FETCH TABLE OF CONTENTS NUMBER
         SLL   X1,2                TIMES 4
         L     X1,DHANCH(X1)       INDEX INTO ADDRESS VECTOR
         LA    TEMP,DHDLEN         GET LENGTH OF DH AREA
         STH   TEMP,SAVEH0         ALIGN ITEM LENGTH
         MH    COUNT,SAVEH0        TIMES HEAD LEVEL NUMBER
         LA    X2,0(COUNT,X1)      LOAD ITEM ADDRESS
         USING DHDSECT,X2          TELL ASSEMBLER OUR BASE
        $CALL  USARG               ISOLATE HEAD LEVEL ARGUMENT
         BC    BOMIT,HLE1          ERROR IF NULL
         SPACE
         L     X3,BUFF3AD          POINT TO WORK BUFFER
         LA    X3,4(,X3)           BUMP OVER DUMMY RDW
         SPACE
*                                  TO
        $IFON  DHFLAGS,DHTO,HL05   BRANCH IF TABLE OF CONTENTS ONLY
        $CALL  PRINTNB             FLUSH ANY PRINT LINES
         SPACE
*                                  SPAF
         SR    X1,X1               CLEAR SPACE REGISTER
         IC    X1,DHSPAF           GET NUMBER OF SPACES
         LTR   X1,X1               WAS .SP 0 REQUESTED .Q
         BZ    HL04                BRANCH IF YES
         LA    TEMP,L'HLSP+6       LENGTH-1 OF BUFFER
         BAL   RETURN,HLSETN       PLACE SPACE OPERAND IN CHAR
         MVC   0(L'HLSP,X3),HLSP   SET SPACE CONTROL WORD
         MVC   0(1,X3),PERIND      ADD CONTROL WORD INDICATOR
         LR    R1,X3               POINT TO BUFFER
        $CALL  HIDBADD             ADD LINE FIFO
         B     HL05                SKIP CHECK FOR 'BREAK'
         SPACE
*                                  BR
HL04     DS    0H
        $IFOFF DHFLAGS,DHBR,HL05   BRANCH IF NO BREAK REQUIRED
         LA    TEMP,L'HLBR-1       LENGTH-1 OF .BR
         MVC   0(L'HLBR,X3),HLBR   MOVE IN BREAK CONTROL WORD
         MVC   0(1,X3),PERIND      SET CONTROL WORD INDICATOR
         LR    R1,X3               POINT TO LINE
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  TC
HL05     DS    0H
        $IFOFF DHFLAGS,DHTC,HL07   BRANCH IF NO TABLE OF CONTENTS REQ'D
         MVC   0(L'HLPT,X3),HLPT   ENTER PUT COMMAND
         MVC   0(1,X3),PERIND      ADD CONTROL WORD INDICATOR
         LH    TEMP,BUFF2LGZ       LENGTH OF LINE
         BCTR  TEMP,0              LENGTH-1 OF LINE
         EX    TEMP,MOVBUF         MOVE ARG LINE TO WORK
         LA    TEMP,L'HLPT(,TEMP)  LENGTH-1 OF RESULT
         LR    R1,X3               POINT TO LINE
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  TCOF
         SR    X1,X1               CLEAR OFFSET REG
         IC    X1,DHTCOF           GET OFFSET VALUE
         LTR   X1,X1               WAS .OF 0 REQUESTED .Q
         BZ    HL06                BRANCH IF YES
         LA    TEMP,L'HLPTOF+6     LENGTH-1 OF COMMAND
         BAL   RETURN,HLSETN       PLACE OPERAND IN BUFFER
         MVC   0(L'HLPTOF,X3),HLPTOF    SET OFFSET CONTROL WORD
         MVC   0(1,X3),PERIND      ADD CONTROL WORD INDICATOR
         MVC   4(1,X3),PERIND      AND AGAIN
         LR    R1,X3               POINT TO BUFFER
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  TCIN
HL06     DS    0H
         SR    X1,X1               CLEAR INDENT REG
         IC    X1,DHTCIN           GET INDENT VALUE
         LA    TEMP,L'HLPTIN+6     LENGTH-1 OF COMMAND
         BAL   RETURN,HLSETN       PLACE OPERAND IN BUFFER
         MVC   0(L'HLPTIN,X3),HLPTIN    SET INDENT CONTROL WORD
         MVC   0(1,X3),PERIND      ADD CONTROL WORD INDICATOR
         MVC   4(1,X3),PERIND      AND AGAIN
         LR    R1,X3               POINT TO BUFFER
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  TS
        $IFOFF DHFLAGS,DHTS,HL07   BRANCH IF NO SPACE REQUIRED
         LA    TEMP,L'HLPTSP-1     LENGTH-1 OF COMMAND
         MVC   0(L'HLPTSP,X3),HLPTSP    SET SPACE CONTROL WORD
         MVC   0(1,X3),PERIND      ADD CONTROL WORD INDICATOR
         MVC   4(1,X3),PERIND      AND AGAIN
         LR    R1,X3               POINT TO LINE
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
HL07     DS    0H
        $IFON  DHFLAGS,DHTO,HL12   BRANCH IF TABLE OF CONTENTS ONLY
         SPACE
*                                  US/UP
         LA    R1,HLUC             .UP AND .US ASSUMED
        $IFON  DHFLAGS,(DHUP,DHUS),HL08 BRANCH IF TRUE
         LA    R1,HLUP             .UP ASSUMED
        $IFON  DHFLAGS,DHUP,HL08   BRANCH IF TRUE
         LA    R1,HLUS             .US ASSUMED
        $IFON  DHFLAGS,DHUS,HL08   BRANCH IF TRUE
         LH    R1,BUFF2LGZ         LENGTH OF BUFF2
         BCTR  R1,0                LENGTH-1
         EX    R1,MOVBUF           MOVE LINE TO WORK BUFFER
         LR    TEMP,R1             LENGTH-1 IN TEMP
         LA    R1,4(,X3)           POINT TO LINE
         B     HL09                CONTINUE
HL08     DS    0H
         MVC   0(L'HLUS,X3),0(R1)  MOVE IN CONTROL WORD
         MVC   0(1,X3),PERIND      SET CONTROL WORD INDICATOR
         LH    R1,BUFF2LGZ         LENGTH OF BUFF2
         BCTR  R1,0                LENGTH-1
         EX    R1,MOVBUF           MOVE .HL ARGUMENT TO WORK BUFFER
         LA    TEMP,L'HLUS         LENGTH OF .US/.UP/.UC
         AR    TEMP,R1             ADD LENGTH OF BUFF2
         LR    R1,X3               POINT TO LINE
HL09     DS    0H
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  OJ
        $IFOFF DHFLAGS,DHOJ,HL10   BRANCH IF NO .OJ REQUIRED
         LA    TEMP,L'HLOJ         LENGTH-1 OF .OJ
         MVC   0(L'HLOJ,X3),HLOJ   MOVE IN .OJ CONTROL WORD
         MVC   0(1,X3),PERIND      SET CONTROL WORD INDICATOR
         LR    R1,X3               POINT TO LINE
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  SKBF
HL10     DS    0H
         SR    X1,X1               CLEAR SKIP REGISTER
         IC    X1,DHSKBF           GET NUMBER OF SKIPS
         LTR   X1,X1               WAS .SK 0 REQUESTED .Q
         BZ    HL11                BRANCH IF YES
         LA    TEMP,L'HLSK+6       LENGTH-1 OF BUFFER
         BAL   RETURN,HLSETN       PLACE SKIP OPERAND IN CHARACTER
         MVC   0(L'HLSK,X3),HLSK   SET SKIP CONTROL WORD
         MVC   0(1,X3),PERIND      ADD CONTROL WORD INDICATOR
         LR    R1,X3               POINT TO BUFFER
        $CALL  HIDBADD             ADD LINE FIFO
         SPACE
*                                  PA
HL11     DS    0H
        $IFOFF DHFLAGS,DHPA,HL12   BRANCH IF .PA NOT REQUIRED
        $IFON  SWITCHS,FEMPTY,HL12 BRANCH IF ALREADY AT PAGE TOP
         LA    TEMP,L'HLPA-1       LENGTH-1 OF .PA
         MVC   0(L'HLPA,X3),HLPA   MOVE IN PAGE CONTROL WORD
         MVC   0(1,X3),PERIND      SET CONTROL WORD INDICATOR
         LR    R1,X3               POINT TO LINE
        $CALL  HIDBADD             ADD LINE FIFO
HL12     DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
HLSETN   DS    0H
        $SAVE  ,                   SAVE CALLER'S REGISTERS
         MVC   0(B2LG,X3),BLANKS   BLANK TARGET BUFFER
         CVD   X1,SAVED0           CONVERT NUMBER TO DECIMAL
         LA    R1,0(TEMP,X3)       END OF TARGET
         LA    R0,L'UREDPAT        LENGTH OF NUMBER PATTERN
         SR    R1,R0               NUMBER TARGET
         MVC   0(L'UREDPAT,R1),UREDPAT  INSERT EDIT PATTERN
         ED    0(L'UREDPAT,R1),SAVED0+4 UNPACK NUMBER TO CHARACTER
        $RESTOR ,                  RESTORE CALLER'S REGISTERS
         BR    RETURN              RETURN TO CALLER
         SPACE
MOVBUF   MVC   4(*-*,X3),BUFF2     MOVE OPERAND 'LINE'
         DROP  X2
         SPACE
HLSK     DC    C'.SK '
HLPA     DC    C'.PA'
HLOJ     DC    C'.OJ'
HLUS     DC    C'.US '
HLUP     DC    C'.UP '
HLUC     DC    C'.UC '
HLBR     DC    C'.BR'
HLSP     DC    C'.SP '
HLPTSP   DC    C'.PT .SP'
HLPTOF   DC    C'.PT .OF '
HLPTIN   DC    C'.PT .IN '
HLPT     DC    C'.PT '
         SPACE
HLE1     DS    0H
         MVI   EFLAG003,ERRSET     ARGUMENT OMITTED
         B     HL12
HLE2     DS    0H
         MVI   EFLAG014,ERRSET     ARGUMENT TOO SMALL
         B     HL12
HLE3     DS    0H
         MVI   EFLAG035,ERRSET     ARGUMENT MUST BE NUMERIC
         B     HL12
HLE4     DS    0H
         MVI   EFLAG013,ERRSET     ARGUMENT TOO LARGE
         B     HL12
