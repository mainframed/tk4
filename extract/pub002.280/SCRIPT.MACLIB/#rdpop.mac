***********************************************************************
*                                                                     *
*  THIS ROUTINE REMOVES THE CURRENT FILE FROM                         *
*  THE INPUT STACK                                                    *
*                                                                     *
***********************************************************************
         SPACE
RDPOP   $ENTER ,
         LH    R1,FILNEST          GET CURRENT FILE NEST LEVEL
         BCTR  R1,0                DECREMENT BY ONE
         STH   R1,FILNEST          UPDATE WITH NEW NEST LEVEL
         SPACE
         LTR   RFILE,RFILE         IS THERE A CURRENT FILE .Q
         BZ    POPUP07             IF NOT, EXIT RIGHT AWAY
         SPACE
        $CALL  RDFBUFF             FREE THE FILE BUFFER, IF ANY
         SPACE
         MVC   IFSTAK,FILIFSTK     RESTORE .IF STATUS
         LA    R1,FILSRAR          LOCAL SYMBOL DICT
        $CALL  SYMCLR              REMOVE ANY AND ALL ENTRIES
         SPACE
        $IFOFF FILFLAG,FIL$RM,POPUP03  BRANCH IF NOT A REMOTE
         LH    R1,RMNEST           GET CURRENT REMOTE NEST LEVEL
         BCTR  R1,0                LESS ONE
         STH   R1,RMNEST           NEW NESTED REMOTE LEVEL
        $IFOFF FILFLAG,FIL$AURM,POPUP01 BRANCH IF NOT AUTOMATIC REMOTE
         LH    R1,RMNMNEST         CURRENT AUTOMATIC REMOTE NEST LEVEL
         BCTR  R1,0                LESS ONE
         STH   R1,RMNMNEST         NEW NESTED AUTOMATIC REMOTE LEVEL
POPUP01  DS    0H
         TM    FILRMFLG,RMQKEEP    KEEP THE ENVIRONMENT .Q
         BO    POPUP02             BRANCH IF YES
         LA    RB,FILBLOCK+FILBLKLN     END OF FILBLOCK
         USING RMSAVE,RB           REST OF INFO STARTS HERE
         MVC   RMIMSAV(4*16),RMSREG     RESTORE IMBEDDER'S REGISTERS
        $IFON  FILFLAG,FIL$SYRM,POPUP02 BRANCH IF SYSTEM REMOTE
         MVC   FMTOLD1(EFMTOLD1),RMSOLD1     RESTORE LINK DESCRIPTORS
         MVC   SWCTL(SWCTLZ),RMSOLD1+EFMTOLD1  RESTORE LINK DESCRIPT
        $MVC   FMTOLD2,RMSOLD2     RESTORE PAGE DESCRIPTORS
         MVC   ICOLFLG,RMSICOL     RESTORE MULTIPLE COLUMN FORMAT
        $MVC   OCCNT,RMSOC         RESTORE OVERLAY CHARACTER STATUS
         LA    R1,TBANCHR          PTR TO CURRENT USER TAB ANCHOR
        $CALL  TBFREBLK            RELEASE CURRENT TAB CHAIN
         MVC   TBIND,RMSTABI       RESTORE USER TAB CHARACTER
         MVC   TBANCHR,RMSTABA     RESTORE FORMER TAB ANCHOR
POPUP02  DS    0H
        $MVC   ARGSTART,RMSARGS    RESTORE CURRENT BUFFER PTRS
        $MVC   BUFF2LGZ,RMSBUFF2   RESTORE CURRENT BUFFER
        $MVC   BUFF1LGZ,RMSBUFF1   RESTORE BUFFER ONE
         DROP  RB
         L     RRMQ,FILRMQAD       REMOTE QUEUE DESCRIPTOR
         LTR   RRMQ,RRMQ           DID REMOTE ALLOCATION FAIL .Q
         BZ    POPUP03             BRANCH IF YES
         USING RMQD,RRMQ           TELL THE ASSEMBLER
         L     R1,RMQUSE           GET REMOTE USE COUNT
         S     R1,F1               LESS ONE
         ST    R1,RMQUSE           UPDATE REMOTE USE COUNT
         L     R1,RMQCNT           GET REMOTE CALL COUNT
         S     R1,F1               LESS ONE
         ST    R1,RMQCNT           UPDATE REMOTE CALL COUNT
         BP    POPUP03             BRANCH IF NOT DONE
         OI    RMQFLAG,RMQDEL      MARK REMOTE FOR DELETION
         DROP  RRMQ
         SPACE
POPUP03  DS    0H
         LA    R1,HIDBANCH         POINT TO ANCHOR
        $CALL  HIDBPUR             PURGE ANY HIDDEN BUFFER LINES
         MVC   HIDBANCH,FILHIDB    RESTORE OLD HIDDEN BUFFER LINES
         LA    R1,HIDBANCH         POINT TO ANCHOR
        $CALL  HIDBDEL             DELETE ANY UNUSED ENTRIES
         LA    R1,PEANCH           PERFORM STACK ANCHOR
        $CALL  OVCLR               DELETE ANY AND ALL OUTSTANDING
         MVC   PEANCH,FILPEANC     RESTORE FORMER
        $CALL  LBCLR               CLEAR ANY LABEL BLOCKS
         MVC   LBANCH,FILLANCH     RESTORE OLD LABEL BLOCKS
         LA    R0,FILBLOCK         POINT TO AREA TO FREE
         LA    R1,FILBLKLN         LENGTH OF PREFIX
        $IFOFF FILFLAG,FIL$RM,POPUP04   BRANCH IF NOT A REMOTE
         LA    R1,RMSLEN(,R1)      LENGTH OF REMOTE SAVE PORTION
POPUP04  DS    0H
         L     RFILE,FILPREV       LINK TO PREVIOUS BLOCK
        $CALL  FREECELL            RELEASE THE AREA
         SPACE
         LTR   RDD,RDD             WAS THE CURRENT FILE UNDEFINED
         BZ    POPUP05             IF SO, DON'T CLOSE IT
         SPACE
         LH    RA,DDUSECT          DECREMENT USAGE COUNT IN THE
         BCTR  RA,0                CURRENT DDBLOCK
         STH   RA,DDUSECT
         SPACE
        $CALL  RDCLOSE             CLOSE THE DDBLOCK, IF NO LONGER USED
         SPACE
POPUP05  DS    0H
         LTR   RDD,RFILE           IF CURRENT FILE IS NULL, MAKE
         BZ    POPUP06             THE CURRENT DDBLOCK NULL ALSO
         SPACE
         L     RDD,FILDDADR        POINT TO NEW DDBLOCK
         SPACE
         LTR   RDD,RDD             IS THE FILE UNDEFINED
         BZ    POPUP06             IF SO, DON'T DO ANY MORE
         SPACE
         MVC   COMFILNM,FILDDNAM   COPY CORRECT FILE NAME
         MVC   COMMEMNM,FILMEMNM   COPY CORRECT MEMBER NAME
         MVC   COMFILIT,FILITEM    COPY CORRECT RECORD NUMBER
         MVC   COMFILNO,FILNUMBR   RESTORE DECIMAL LINE NUMBER
         SPACE
        $ON    FILFLAG,FIL$FIND    INDICATE REPOSITIONING NECESSARY
         SPACE
POPUP06  DS    0H
         STM   RFILE,RDD,CURFILE   UPDATE CURRENT FILE POINTERS
         SPACE
POPUP07  DS    0H
        $RESTOR KEEP=(RFILE,RDD)   RESTORE CALLER'S REGISTERS
         BR    RETURN              RETURN TO THE CALLER
