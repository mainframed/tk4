***********************************************************************
*                                                                     *
*              TO CLOSE A FILE                                        *
*                                                                     *
***********************************************************************
         SPACE
*  THIS ROUTINE CLOSES AND FREES THE CURRENT DDBLOCK IF               *
*        1)    IT HAS A ZERO USAGE COUNT                              *
*AND     2)    THE NEVER CLOSE OPTION HAS NOT BEEN SPECIFIED          *
*              FOR IT.                                                *
*                                                                     *
*        IF DDBLOCK POINTER IS IN COMPLEMENT FORM THEN                *
*        THAT DDBLOCK WILL BE CLOSED UNCONDITIONALLY                  *
         SPACE 2
RDCLOSE $ENTER ,
         LTR   RDD,RDD             IS THERE A CURRENT DDBLOCK .Q
         BZ    CLOSERET            IF NOT, EXIT AT ONCE
         BNM   CLOSEIF             BRANCH IF CONDITIONAL CLOSE
         LPR   RDD,RDD             REAL DDBLOCK POINTER
         B     CLOSEUNC            DO UNCONDITIONAL CLOSE
         SPACE
CLOSEIF  DS    0H
         OC    DDUSECT,DDUSECT     TEST USAGE COUNT
         BNZ   CLOSERET            AND EXIT IF NOT ZERO
         SPACE
         TM    DDFLAG,DD$NOCLO     WAS NEVER-CLOSE OPTION SELECTED
         BO    CLOSERET            IF SO, EXIT AT ONCE
         SPACE
CLOSEUNC DS    0H
         LA    RA,DDDCB            SET UP THE OPEN/CLOSE PARAMETER LIST
         O     RA,OPCLCLSE         INCLUDE CLOSE FLAGS
         ST    RA,OPCLPARM         AND CLOSE THE DCB IN THIS DDBLOCK
         CLOSE MF=(E,OPCLPARM)
         SPACE
         LM    RA,RB,DDNEXT        SET UP TO REMOVE THIS DDBLOCK
         LTR   R1,RA               FROM THE DOUBLY LINKED CHAIN
         BNZ   *+8
         LA    R1,FIRSTDD
         ST    RB,DDPREV-DDBLOCK(,R1) UPDTE 'PREV' PTR OF NEXT DDBLOCK
         SPACE
         LTR   R1,RB               NOW UPDATE 'NEXT' PTR OF THE PREV DD
         BNZ   *+8
         LA    R1,FIRSTDD
         ST    RA,DDNEXT-DDBLOCK(,R1)
         SPACE
         LR    R0,RDD              GET ADDRESS OF THE DDBLOCK
         LA    R1,DDBLKLN          AND THE LENGTH
        $CALL  FREECELL            FREE THE STORAGE
         SPACE
CLOSERET DS    0H
        $RESTOR ,                  RESTORE CALLER'S REGISTERS
         BR    RETURN              RETURN TO THE CALLER
