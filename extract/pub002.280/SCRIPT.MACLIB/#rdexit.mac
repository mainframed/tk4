***********************************************************************
*                                                                     *
*              INPUT FILE OPEN EXIT                                   *
*                                                                     *
***********************************************************************
         SPACE
*  THIS IS THE DCB EXIT ROUTINE.............IT'S FUNCTIONS ARE TO:    *
*        1)    ESTABLISH THE DSORG OF THE DCB, IF                     *
*              THIS DCB IS BEING INITIALLY OPENED                     *
*        2)    REALLOCATE THE BUFFERS OF THE CURRENT FILE, IF         *
*              THE ROUTINE IS ENTERED BECAUSE OF THE                  *
*              CONCATENATION OF DATA SETS WITH UNLIKE ATTRIBUTES      *
*        3)    SET THE ERROR FLAG IN THE CURRENT DDBLOCK, IF          *
*              THE INPUT DATA SET DOES NOT HAVE VARIABLE LENGTH       *
*              RECORDS.                                               *
*        4)    CHECK TO SEE THAT THE DCBBLKSI FIELD IS NON-ZERO       *
*              (THIS IS NECESSARY FOR FUTURE BUFFER ALLOCATION.       *
*              NOTE THAT DCBBLKSI MIGHT BE LEGITIMATELY ZERO, EG.,    *
*              IF A DUMMY DATA SET IS BEING READ IN.)                 *
         SPACE
RDEXIT   CSECT ,
        $SAVE  ,                   STACK CALLER'S REGISTERS
         LR    BASE2,R15           TRANSFER ENTRY ADDRESS
         USING RDEXIT,BASE2        AND TELL THE ASSEMBLER
         SPACE
         LH    RA,DCBBLKSI(,R1)    GET THE BLOCKSIZE FIELD
         LTR   RA,RA               IS BLKSIZE ZERO .Q
         BNZ   RDEXIT01            BRANCH IF NOT
         LA    RA,80               ASSUME THIS FOR DD DUMMY
         STH   RA,DCBBLKSI(,R1)    FILL IN THE DCB
         SPACE
RDEXIT01 DS    0H
         OC    DCBLRECL(2,R1),DCBLRECL(R1) DID USER SPECIFY LRECL .Q
         BNZ   RDEXIT02            BRANCH IF YES
         MVC   DCBLRECL(2,R1),DCBBLKSI(R1) SET LRECL EQUAL BLKSIZE
         SPACE
RDEXIT02 DS    0H
         NI    DDFLAG,255-DD$RECFM CLEAR RECORD FORMAT ERROR
         TM    DCBRECFM(R1),X'80'  IS RECFM 'V' .Q
         BZ    RDEXIT04            BRANCH IF YES
         TM    DCBRECFM(R1),X'40'  IS RECFM 'F' .Q
         BNO   RDEXIT04            YES, THEN NOT RECFM 'U'
         CLC   DCBBLKSI(2,R1),DCBLRECL(R1) BLKSIZE = LRECL .Q
         BNE   RDEXIT03            NOT SQUISHED FILE IF NOT
         CLC   DCBLRECL(2,R1),H2000 AND 2000 OR MORE .Q
         BNL   RDEXIT04            YES, THEN MAY BE SQUISHED
RDEXIT03 DS    0H
         OI    DDFLAG,DD$RECFM     SET ERROR FLAG IN DDBLOCK
         SPACE
RDEXIT04 DS    0H
         CLI   DCBDSORG(R1),X'00'  IS DSORG UNSPECIFIED .Q
         BNE   RDEXIT05            BRANCH IF NOT
         MVI   DCBDSORG(R1),DSORG$PS    MAKE IT SEQUENTIAL
         SPACE
RDEXIT05 DS    0H
         TM    DCBOFLGS(R1),X'20'  IS THIS A CONCATENATE OPEN .Q
         BZ    RDEXIT06            IF NOT, RETURN NOW TO SUPERVISOR
         SPACE
         OI    DDFLAG,DD$REISS     REISSUE I/O REQUEST
         MVI   DCBDSORG(R1),DSORG$PS    BETTER BE SEQUENTIAL AGAIN
         SPACE
        $OFF   FILFLAG,FIL$NONM    RESET NUMBERING FLAG
        $CALL  RDFBUFF             FREE CURRENT FILE BUFFER
        $CALL  RDGBUFF             AND REALLOCATE IT
         SPACE
RDEXIT06 DS    0H
        $RESTOR ,                  RESTORE EXIT REGISTERS
         BR    R14                 RETURN TO THE SUPERVISOR
