***********************************************************************
*                                                                     *
*              INTERNAL FUNCTION 'IXCLR' -- PURGE INDEX               *
*                                                                     *
***********************************************************************
         SPACE
*        TO ENTER  --   LA    R1,INDEX ANCHOR POINTER
*                      $CALL  IXCLR
         SPACE
IXCLR   $ENTER ,
         L     X1,0(,R1)           GET ANCHOR POINTER
         LTR   X1,X1               IS INDEX LEVEL EMPTY .Q
         BZ    IXCLR05             BRANCH IF YES
         XC    0(4,R1),0(R1)       CLEAR THE INDEX ANCHOR
         XC    IXPTRS(IXPTRL),IXPTRS  CLEAR LEVEL POINTERS
         ST    X1,IXPTR1           SAVE FIRST LEVEL POINTER
         SPACE
IXCLR01  DS    0H
         LA    X1,IXPTR3           THIRD LEVEL POINTER
         BAL   RETURN,IXCLR02      TRY IT
         LA    X1,IXPTR2           SECOND LEVEL POINTER
         BAL   RETURN,IXCLR02      TRY IT
         LA    X1,IXPTR1           FIRST LEVEL POINTER
         BAL   RETURN,IXCLR02      AND TRY IT
         B     IXCLR05             END OF LIST
         SPACE
IXCLR02  DS    0H
         L     X2,0(,X1)           ENTRY POINTER
         LA    X2,0(,X2)           CLEAR HIGH BYTE
         LTR   X2,X2                ANY PRESENT .Q
         BZR   RETURN              BRANCH BACK IF NOT
         USING IXHBLK,X2           TELL ASSEMBLER WHAT WE'VE GOT
         L     TEMP,IXHBNEXT       NEXT POINTER ACROSS
         ST    TEMP,0(,X1)         SAVE AWAY FOR FUTURE
         L     R1,IXHBLOWR         NEXT LOWER ENTRY
         LA    R0,IXPTR3           LAST ENTRY POINTER
         CR    X1,R0               IS THAT WHAT WE'RE DOING .Q
         BE    IXCLR03             BRANCH IF YES
         ST    R1,4(,X1)           PROCESS NEXT TIME
IXCLR03  DS    0H
         SR    TEMP,TEMP           PREPARE LENGTH REGISTER
         IC    TEMP,IXHBTXTL       LENGTH-1 OF STRING
         L     X1,IXHBENTA         REFERENCE DATA POINTER
         LA    R0,IXHBLK           WHERE IS BLOCK TO FREE
         DROP  X2
         LA    R1,IXHBLKL+2(TEMP,TEMP)  LENGTH OF SAME
        $CALL  FREECELL            FREE UP THE BLOCK
         SPACE
IXCLR04  DS    0H
         LA    X1,0(,X1)           CLEAR HIGH BYTE
         LTR   X1,X1               ANY REFERENCE DATA PRESENT .Q
         BZ    IXCLR01             BRANCH IF NOT
         USING IXEBLK,X1           INDEX ENTRY DATA
         LA    R0,IXEBLK           WHERE TO FREE
         LA    R1,IXEBLKL          HOW MUCH TO FREE
         L     X1,IXEBNEXT         NEXT ENTRY POINTER
        $CALL  FREECELL            AND FREE REF BLOCK
         B     IXCLR04             DO THEM ALL
         DROP  X1
         SPACE
IXCLR05  DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
