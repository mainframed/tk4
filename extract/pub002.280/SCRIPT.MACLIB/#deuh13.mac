*                             ********
* *            SOURCE BOOK *** DEUH13 ***  YES/NO SCAN
*                             ********
         SPACE 3
*
*              ALPHA YES / NO SCAN       **********
*
AYNSCAN  LA    REGWK3,0            INITIALIZE FOR YES/NO SCAN
         LR    REGWK1,REGWK3       PRIME DIGRAPH WORK AREA
         OI    YNWORK+2,X'40'
         BAL   REGRET,GTDGRF       * REGWK1 POINTS TO 1ST CHAR.OF DIGRF
NXTPNT   LA    REGWK1,1(REGWK1)    * REGWK3 POINTS TO ASTATUS POINT OF
         BAL   REGRET,GTDGRF
TSTHXX   TM    YNWORK+2,X'0C'       TEST  HXX FOR CURRENT WORD POINT
         BAL   REGRET,SET2YN
TSTXHX   TM    YNWORK+1,X'30'       TEST  XHX FOR CURRENT WORD POINT
         BAL   REGRET,SET2YN
TSTPNO   TM    YNWORK+1,X'20'       TEST  XHX POSSIBLE NO CONDITION
         BZ    TSTXXH
         LA    REG1,ASTATUS(REGWK3)
         OI   0(REG1),X'20'
TSTXXH   TM    YNWORK,X'C0'
         BAL   REGRET,SET2YN
TSTEND   CH    REGWK3,NUMCHR
         BNE   NEXT                IF NOT END OF WORD GET NEXT POINT
         B     WRDPRP              GO TO WORD PREP AT END OF YES / NO
NEXT     LA    REGWK3,1(REGWK3)    INCREMENT TO NEXT POINT IN WORD
         B     NXTPNT
* THIS ROUTINE IS DESIGNED TO RETRIEVE THE YES/NO MATRIX DIGRAPH WHICH
*  CORRESPONDS TO THE INTERSECT POINT OF TWO LETTERS IN A WORD
*  REGWK1 = GEN.REG. 9 POINTS TO RELATIVE LOCATION OF 1ST LETTER OF
*   PAIR IN HYFCOM    ROUTINE DESTROYS VALUE IN GEN.REG. 8 (REGWK2)
*
GTDGRF   L     REGWK2,YNWORK           * CLEAR  -XX BYTE OF WORK AREA
         SRL   REGWK2,8                * AND FORCE ZEROES
         SLL   REGWK2,16               *   TO HIGH ORDER BYTE OF 1ST
         CH    REGWK1,NUMCHR       TEST FOR  E-O-W
         ST    REGWK2,YNWORK           *  TEMP WORK AREA
         BNL   FRCEPOS              AND BRANCH IF YES
         LA    REGWK2,HYFCOM(REGWK1)   ADDRESS OF 1ST CHAR.IN REGWK2
         BAL   REG1,GTBYTE              GET 1ST CHAR.
         MH    REGWK2,=H'26'            MULT. BY '26'
         STH   REGWK2,TEMP13+2          & SAVE IN 2ND TEMP AREA(MAX650)
         LA    REGWK2,HYFCOM+1(REGWK1) ADDRESS OF 2ND CHAR.IN REGWK2
         BAL   REG1,GTBYTE              GET 2ND CHAR.
         AH    REGWK2,TEMP13+2          ADD 1ST CHAR(X26) FOR ADDR.OF
         A     REGWK2,AYNMTRX           DIGRAPH TO REGWK2
         MVC   YNWORK+2,0(REGWK2)  NEW DIGRAPH TO LOW BYTE OF WORK AREA
         BR    REGRET                  AND RETURN
FRCEPOS  MVI   YNWORK+2,X'04'      FORCE N-N-P ON LAST CHAR.OF WORD
         BR    REGRET               AND RETURN
GTBYTE   MVC   TEMP13+1(1),0(REGWK2)    GET 1 BYTE FROM LOC'N SPECIFIED
         LH    REGWK2,TEMP13        AFTER CLEARING REGWK2
         BR    REG1                AND RETURN
         DS    0F
YNWORK   DS    2X         DIGRAPH WORK AREA 3-BYTES USED -THUS A 1 BYTE
TEMP13   DS    2H          OVERLAY TO 1ST TEMP WORK AREA
SET2YN   LA    REG1,ASTATUS(REGWK3)
         BO    SET2Y
         BM    YNOUT                IF MIXED LEAVE POSS.
         TM     0(REG1),X'30'
         BO    SET2PN               SET TO POSS-NO (VARIABLE)
         NI    0(REG1),X'CF'
         B     YNOUT                & EXIT
SET2Y    TM    0(REG1),X'10'
         BZ    SET2PN
         OI    0(REG1),X'30'
         B     YNOUT
SET2PN   NI    0(REG1),X'CF'
         OI    0(REG1),X'20'
YNOUT    BR    REGRET
IASCN    TRT   0(0,REG1),ASCTBL
ASCTBL   DC    X'00010003'         * HITS FOR POSS.INDICATORS OFF
         DC    12X'00'             *
         DC    X'00010003'         * HITS FOR POSS.INDICATORS ON
SIGCHR   DC    X'0'
         LTORG
