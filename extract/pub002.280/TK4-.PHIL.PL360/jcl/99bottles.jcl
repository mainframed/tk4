//PL3CMPGO JOB  DUMMY,DUMMY,CLASS=A,MSGCLASS=A,MSGLEVEL=(1,1)
//STEP1 EXEC PL360CG
//STEPLIB DD DSN=SYS1.PL360LIB,DISP=SHR
BEGIN  |-- PL360 VERSION OF 99 BEERS ON THE WALL --|
   |--  BY RICHARD L GUERTIN - INTRODUCTION TO PL360 PROGRAMMING --|
   FUNCTION REDUCE(6,#0600);  |-- DECREMENT REGISTER VALUE --|
   LONG REAL VAL;  |-- NUMBER CONVERSION SPACE --|
   ARRAY DATAFILL BYTE PART1 = " XX BOTTLES OF BEER ON THE WALL, ";
   ARRAY DATAFILL BYTE PART2 = "XX BOTTLES OF BEER.";
   EQUATE PART1LEN SYN PART2 - PART1;
   ARRAY 134 BYTE BLANKS = 134(" ");
   ARRAY 134 BYTE MSG;

   R4 := 99;
   REPEAT  |-- SING THE SONG --|
      CVD(R4,VAL);  |-- CONVERT TO DECIMAL --|
      OI(#F,VAL(7));
      UNPK(1,7,PART1(1),VAL);
      IF PART1(1) = "0" THEN PART1(1) := " ";
      PART2(0/2) := PART1(1);
      IF PART1(1) = " " THEN R0 := @PART1(1) ELSE
      R0 := @PART1;  PRINT;  |-- PRINT 1ST SENTENCE --|
      MSG(0/134) := BLANKS;
      MSG := " TAKE ONE DOWN, PASS IT AROUND.";
      R0 := @MSG;  PRINT;  |-- PRINT 2ND SENTENCE --|
      REDUCE(R4);
      IF R4 > 1 THEN
      BEGIN  |-- MANY MORE BOTTLES --|
         MSG(0/134) := BLANKS;
         MSG(0/PART1LEN-2) := PART1;
         CVD(R4,VAL);  |-- CONVERT TO DECIMAL --|
         OI(#F,VAL(7));
         UNPK(1,7,MSG(1),VAL);
         IF MSG(1) = "0" THEN MSG(1) := " ";
         MSG(PART1LEN-2) := ".";
         IF MSG(1) = " " THEN R0 := @MSG(1) ELSE
         R0 := @MSG;  PRINT;   |-- PRINT 3RD SENTENCE --|
         R0 := @BLANKS;  PRINT;  |-- PRINT BLANK LINE --|
      END ELSE
      BEGIN  |-- ONLY ONE LEFT --|
         MSG := " ONLY 1 MORE BOTTLE OF BEER ON THE WALL!";
         R0 := @MSG;  PRINT;  |-- PRINT 3RD SENTENCE --|
         MSG(0/134) := BLANKS;
         MSG := " TAKE IT DOWN, PASS IT AROUND.";
         R0 := @MSG;  PRINT;  |-- PRINT NEXT TO LAST SENTENCE --|
         MSG(0/134) := BLANKS;
         MSG := " NO MORE BOTTLES OF BEER ON THE WALL  (BURP).";
         R0 := @MSG;  PRINT;  |-- PRINT LAST SENTENCE --|
         REDUCE(R4);
      END;
   UNTIL R4 <= 0;
END.
//

