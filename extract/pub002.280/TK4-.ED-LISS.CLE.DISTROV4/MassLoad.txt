                        HH        HH  EEEEEEEEEEEE  RRRRRRRRRRR    CCCCCCCCCC     00000000         11       TTTTTTTTTTTT
                       HH        HH  EEEEEEEEEEEE  RRRRRRRRRRRR  CCCCCCCCCCCC   0000000000       111       TTTTTTTTTTTT
                      HH        HH  EE            RR        RR  CC        CC  00      0000     1111            TT
                     HH        HH  EE            RR        RR  CC            00     00 00       11            TT
                    HH        HH  EE            RR        RR  CC            00    00  00       11            TT
                   HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRRR  CC            00   00   00       11            TT
                  HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRR   CC            00  00    00       11            TT
                 HH        HH  EE            RR    RR      CC            00 00     00       11            TT
                HH        HH  EE            RR     RR     CC            0000      00       11            TT
               HH        HH  EE            RR      RR    CC        CC  000       00       11            TT
              HH        HH  EEEEEEEEEEEE  RR       RR   CCCCCCCCCCCC   0000000000    1111111111        TT
             HH        HH  EEEEEEEEEEEE  RR        RR   CCCCCCCCCC     00000000     1111111111        TT

                    JJJJJJJJJJ   3333333333     00000000     9999999999    8888888888                  AAAAAAAAAA
                    JJJJJJJJJJ  333333333333   0000000000   999999999999  888888888888                AAAAAAAAAAAA
                        JJ      33        33  00      0000  99        99  88        88                AA        AA
                        JJ                33  00     00 00  99        99  88        88                AA        AA
                        JJ                33  00    00  00  99        99   88      88                 AA        AA
                        JJ             3333   00   00   00  999999999999    88888888                  AAAAAAAAAAAA
                        JJ             3333   00  00    00  999999999999    88888888                  AAAAAAAAAAAA
                        JJ                33  00 00     00            99   88      88                 AA        AA
                  JJ    JJ                33  0000      00            99  88        88                AA        AA
                  JJ    JJ      33        33  000       00  99        99  88        88                AA        AA
                  JJJJJJJJ      333333333333   0000000000   999999999999  888888888888                AA        AA
                   JJJJJJ        3333333333     00000000     9999999999    8888888888                 AA        AA

****A  START  JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098  START  A****
****A  START  JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098  START  A****
****A  START  JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098  START  A****
****A  START  JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098  START  A****

                                                J E S 2   J O B   L O G
01.53.35 JOB 3098  IEF677I WARNING MESSAGE(S) FOR JOB HERC01T  ISSUED
01.53.35 JOB 3098  $HASP373 HERC01T  STARTED - INIT  1 - CLASS A - SYS BSP1
01.53.35 JOB 3098  IEF403I HERC01T - STARTED - TIME=01.53.35
01.53.35 JOB 3098  IEFACTRT - Stepname  Procstep  Program   Retcode
01.53.35 JOB 3098  HERC01T    D0                  MAKESTMT  RC= 0000
01.53.35 JOB 3098  HERC01T    D1                  IDCAMS    RC= 0000
01.53.35 JOB 3098  HERC01T    S1                  IEBPTPCH  RC= 0000
01.53.35 JOB 3098  HERC01T    S2                  MEMFLTR   RC= 0000
01.53.36 JOB 3098  HERC01T    S3                  IEBPTPCH  RC= 0000
01.53.36 JOB 3098  HERC01T    S4                  MEMFLTR   RC= 0000
01.53.36 JOB 3098  HERC01T    S5                  IEFBR14   RC= 0000
01.53.36 JOB 3098  HERC01T    P1        G0        MAKESTMT  RC= 0000
01.53.36 JOB 3098  HERC01T    P1        S0        IDCAMS    RC= 0000
01.53.36 JOB 3098  HERC01T    P1        S1        IEFBR14   RC= 0000
01.53.36 JOB 3098  HERC01T    P2        G0        MAKESTMT  RC= 0000
01.53.36 JOB 3098  HERC01T    P2        S0        IDCAMS    RC= 0000
01.53.36 JOB 3098  HERC01T    P2        S1        IEFBR14   RC= 0000
01.53.36 JOB 3098  HERC01T    P3        G1        MAKESTMT  RC= 0000
01.53.37 JOB 3098  HERC01T    P3        G2        MAKESTMT  RC= 0000
01.53.37 JOB 3098  HERC01T    P3        S1        IEBUPDTX  RC= 0000
01.53.37 JOB 3098  HERC01T    P4        G1        MAKESTMT  RC= 0000
01.53.37 JOB 3098  HERC01T    P4        G2        MAKESTMT  RC= 0000
01.53.37 JOB 3098  HERC01T    P4        S1        IEBUPDTX  RC= 0000
01.53.37 JOB 3098  IEF404I HERC01T - ENDED - TIME=01.53.37
01.53.37 JOB 3098  $HASP395 HERC01T  ENDED

------ JES2 JOB STATISTICS ------

 16 NOV  8 JOB EXECUTION DATE

        78 CARDS READ

     3,168 SYSOUT PRINT RECORDS

         0 SYSOUT PUNCH RECORDS

      0.04 MINUTES EXECUTION TIME

    1     //HERC01T JOB CLASS=A,MSGCLASS=A,MSGLEVEL=(1,1)  ,TYPRUN=SCAN           JOB 3098
          **********************************************************************  00020000
    2     //D0  EXEC  PGM=MAKESTMT,PARM=('@DEL\HERC01.CLE.DISTRO.LOADLIB')        00030000
    3     //STEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00040000
    4     //SYSOUT  DD SYSOUT=*                                                   00050000
    5     //STMTS   DD DSN=&&STMTG0,DISP=(NEW,PASS),                              00060000
          //           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00070000
          //           DCB=BLKSIZE=3120                                           00080000
          **********************************************************************  00090000
    6     //D1  EXEC  PGM=IDCAMS                                                  00100000
    7     //SYSPRINT DD SYSOUT=*                                                  00110000
    8     //SYSIN    DD DSN=&&STMTG0,DISP=(OLD,DELETE)                            00120000
          **********************************************************************  00130000
    9     //S1     EXEC PGM=IEBPTPCH                                              00140000
   10     //SYSUT1  DD DSN=HERC01.OLD.DISTRO.CNTL,DISP=SHR                        00150000
   11     //SYSUT2  DD DSN=&&PASS,DISP=(NEW,PASS),                                00160000
          //        UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE),                          00170000
          //        DCB=(RECFM=F,LRECL=81,BLKSIZE=81)                             00180000
   12     //SYSPRINT DD SYSOUT=*                                                  00190000
   13     //SYSIN  DD *                                                           00200000
          **********************************************************************  00230000
   14     //S2     EXEC PGM=MEMFLTR                                               00240000
   15     //STEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00250000
   16     //SYSUT1  DD DSN=&&PASS,DISP=(OLD,DELETE)                               00260000
   17     //SYSUT2  DD DSN=&&CNTL,DISP=(NEW,PASS),                                00270000
          //        DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),                         00280000
          //        UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE)                           00290000
   18     //SYSPRINT DD SYSOUT=*                                                  00300000
          **********************************************************************  00310000
   19     //S3     EXEC PGM=IEBPTPCH                                              00320000
   20     //SYSUT1  DD DSN=HERC01.OLD.DISTRO.SOURCE,DISP=SHR                      00330000
   21     //SYSUT2  DD DSN=&&PASS,DISP=(NEW,PASS),                                00340000
          //        UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE),                          00350000
          //        DCB=(RECFM=F,LRECL=81,BLKSIZE=81)                             00360000
   22     //SYSPRINT DD SYSOUT=*                                                  00370000
   23     //SYSIN  DD *                                                           00380000
          **********************************************************************  00410000
   24     //S4     EXEC PGM=MEMFLTR                                               00420000
   25     //STEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00430000
   26     //SYSUT1  DD DSN=&&PASS,DISP=(OLD,DELETE)                               00440000
   27     //SYSUT2  DD DSN=&&SRC,DISP=(NEW,PASS),                                 00450000
          //        DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),                         00460000
          //        UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE)                           00470000
   28     //SYSPRINT DD SYSOUT=*                                                  00480000
          **********************************************************************  00490000
   29     //S5     EXEC PGM=IEFBR14                                               00500000
   30     //DD1     DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=(NEW,CATLG,DELETE),     00510000
          //        DCB=(RECFM=U,BLKSIZE=19069),                                  00520000
          //        UNIT=SYSDA,VOL=SER=PUB002,SPACE=(TRK,(10,10,10))              00530000
          **********************************************************************  00540000
   31     //P1 EXEC SLMCRE8,OUT='A',                                              00550000
          //        QUAL='HERC01',                                                00560000
          //        LIB1='CLE.DISTRO.CNTL',VOL1=PUB002,                           00570000
          //        LIB2='CLE.DISTRO.CNTLX',VOL2=PUB002                           00580000
   32     XXSLMCRE8 PROC OUT='*',                   SYSOUT CLASS
          XX        QUAL=,                          LIB HIGH LEVEL QUAL.
          XX        LIB1=,VOL1=,SP1='CYL,(1,1,15)',   MASTER LIB
          XX        LIB2=,VOL2=,SP2='TRK,(1,1,15)'    CHAINED LIB
          **********************************************************************
   33     XXG0  EXEC  PGM=MAKESTMT,PARM=('@PDEL\&QUAL..\',                        00030000
          XX          '&LIB1\&LIB2')                                              00040000
   34     XXSTEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00050000
   35     XXSYSOUT  DD SYSOUT=&OUT                                                00060000
   36     XXSTMTS   DD DSN=&&STMTG0,DISP=(NEW,PASS),                              00070000
          XX           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00080000
          XX           DCB=BLKSIZE=3120                                           00090000
          **********************************************************************
   37     XXS0  EXEC  PGM=IDCAMS                                                  00280000
   38     XXSYSPRINT DD SYSOUT=&OUT                                               00290000
   39     XXSYSIN    DD DSN=&&STMTG0,DISP=(OLD,DELETE)                            00300000
          **********************************************************************
   40     XXS1   EXEC PGM=IEFBR14
   41     XXSYSUT1   DD DSN=&QUAL..&LIB1,DISP=(NEW,CATLG,DELETE),                 00350000
          XX            UNIT=DISK,VOL=SER=&VOL1,SPACE=(&SP1),                     00360000
          ***           DCB=(RECFM=U,BLKSIZE=3156)                                00370000
          XX            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)                      00380000
   42     XXSYSUT2   DD DSN=&QUAL..&LIB2,DISP=(NEW,CATLG,DELETE),                 00350000
          XX            UNIT=DISK,VOL=SER=&VOL2,SPACE=(&SP2),                     00360000
          ***           DCB=(RECFM=U,BLKSIZE=3156)                                00370000
          XX            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)                      00380000
          **********************************************************************
          **********************************************************************
   43     //P2 EXEC SLMCRE8,OUT='A',                                              00590000
          //        QUAL='HERC01',                                                00600000
          //        LIB1='CLE.DISTRO.SOURCE',VOL1=PUB002,                         00610000
          //        LIB2='CLE.DISTRO.SOURCEX',VOL2=PUB002                         00620000
   44     XXSLMCRE8 PROC OUT='*',                   SYSOUT CLASS
          XX        QUAL=,                          LIB HIGH LEVEL QUAL.
          XX        LIB1=,VOL1=,SP1='CYL,(1,1,15)',   MASTER LIB
          XX        LIB2=,VOL2=,SP2='TRK,(1,1,15)'    CHAINED LIB
          **********************************************************************
   45     XXG0  EXEC  PGM=MAKESTMT,PARM=('@PDEL\&QUAL..\',                        00030000
          XX          '&LIB1\&LIB2')                                              00040000
   46     XXSTEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00050000
   47     XXSYSOUT  DD SYSOUT=&OUT                                                00060000
   48     XXSTMTS   DD DSN=&&STMTG0,DISP=(NEW,PASS),                              00070000
          XX           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00080000
          XX           DCB=BLKSIZE=3120                                           00090000
          **********************************************************************
   49     XXS0  EXEC  PGM=IDCAMS                                                  00280000
   50     XXSYSPRINT DD SYSOUT=&OUT                                               00290000
   51     XXSYSIN    DD DSN=&&STMTG0,DISP=(OLD,DELETE)                            00300000
          **********************************************************************
   52     XXS1   EXEC PGM=IEFBR14
   53     XXSYSUT1   DD DSN=&QUAL..&LIB1,DISP=(NEW,CATLG,DELETE),                 00350000
          XX            UNIT=DISK,VOL=SER=&VOL1,SPACE=(&SP1),                     00360000
          ***           DCB=(RECFM=U,BLKSIZE=3156)                                00370000
          XX            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)                      00380000
   54     XXSYSUT2   DD DSN=&QUAL..&LIB2,DISP=(NEW,CATLG,DELETE),                 00350000
          XX            UNIT=DISK,VOL=SER=&VOL2,SPACE=(&SP2),                     00360000
          ***           DCB=(RECFM=U,BLKSIZE=3156)                                00370000
          XX            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)                      00380000
          **********************************************************************
          **********************************************************************
   55     //P3 EXEC SLMADD,OUT='A',                                               00630000
          //        QUAL='HERC01',                                                00640000
          //        LIB1='CLE.DISTRO.CNTL',                                       00650000
          //        NAME=NULLFILE,CHAIN=TS,                                       00660000
          //        INPUT='NULLFILE'                                              00670000
   56     XXSLMADD  PROC OUT='*',                   SYSOUT CLASS
          XX        QUAL=,                          LIB HIGH LEVEL QUAL.
          XX        LIB1=,                            MASTER LIB
          *****     LIB2=,                            CHAINED LIB
          XX        NAME=,CHAIN=,                   MEMBER NAME/CHAIN ID
          XX        INPUT=                          SOURCE CODE TO ADD
          **********************************************************************
   57     XXG1  EXEC  PGM=MAKESTMT,                                               00110000
          ***         PARM=('./ ADD NAME=&NAME,LIST=ALL,VERSION=0\',              00120000
          XX          PARM=('./ ADD NAME=&NAME,VERSION=0\',                       00120000
          XX          './ NUMBER NEW1=1,INCR=1')                                  00130000
   58     XXSTEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00140000
   59     XXSYSOUT  DD SYSOUT=&OUT                                                00150000
   60     XXSTMTS   DD DSN=&&STMTG1,DISP=(NEW,PASS),                              00160000
          XX           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00170000
          XX           DCB=BLKSIZE=3200                                           00180000
          **********************************************************************
   61     XXG2  EXEC  PGM=MAKESTMT,                                               00200000
          XX          PARM=('./ ENDUP')                                           00210000
   62     XXSTEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00220000
   63     XXSYSOUT  DD SYSOUT=&OUT                                                00230000
   64     XXSTMTS   DD DSN=&&STMTG2,DISP=(NEW,PASS),                              00240000
          XX           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00250000
          XX           DCB=BLKSIZE=3200                                           00260000
          **********************************************************************
   65     XXS1   EXEC PGM=IEBUPDTX,REGION=128K,                                   00320000
          XX          PARM='CHAINUPD,CHAIN=&CHAIN,NOIMPLSEQ,LISTDEL'              00330000
   66     XXSYSUT1   DD DUMMY                                                     00340000
   67     XXSYSUT2   DD DSN=&QUAL..&LIB1,DISP=OLD                                 00350000
   68     XXSYSPRINT DD SYSOUT=&OUT                                               00390000
   69     XXSYSPUNCH DD SYSOUT=Z                                                  00400000
   70     XXSYSLIB   DD DUMMY                                                     00410000
   71     XXLIB1     DD DUMMY                                                     00420000
   72     XXLIB2     DD DUMMY                                                     00430000
   73     //S1.SYSIN DD DSN=&&CNTL,DISP=(OLD,PASS)                                00680000
          X/SYSIN  DD DSN=&&STMTG1,DISP=(OLD,DELETE)                              00440000
   74     //         DD DSN=&&STMTG2                                              00690000
          X/       DD DSN=&INPUT,DISP=OLD                                         00450000
   75     //         DD DUMMY                                                     00700000
          X/       DD DSN=&&STMTG2,DISP=(OLD,PASS)                                00460000
          *******************************************************************
          *******************************************************************
   76     //P4 EXEC SLMADD,OUT='A',                                               00710000
          //        QUAL='HERC01',                                                00720000
          //        LIB1='CLE.DISTRO.SOURCE',                                     00730000
          //        NAME=NULLFILE,CHAIN=TS,                                       00740000
          //        INPUT='NULLFILE'                                              00750000
   77     XXSLMADD  PROC OUT='*',                   SYSOUT CLASS
          XX        QUAL=,                          LIB HIGH LEVEL QUAL.
          XX        LIB1=,                            MASTER LIB
          *****     LIB2=,                            CHAINED LIB
          XX        NAME=,CHAIN=,                   MEMBER NAME/CHAIN ID
          XX        INPUT=                          SOURCE CODE TO ADD
          **********************************************************************
   78     XXG1  EXEC  PGM=MAKESTMT,                                               00110000
          ***         PARM=('./ ADD NAME=&NAME,LIST=ALL,VERSION=0\',              00120000
          XX          PARM=('./ ADD NAME=&NAME,VERSION=0\',                       00120000
          XX          './ NUMBER NEW1=1,INCR=1')                                  00130000
   79     XXSTEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00140000
   80     XXSYSOUT  DD SYSOUT=&OUT                                                00150000
   81     XXSTMTS   DD DSN=&&STMTG1,DISP=(NEW,PASS),                              00160000
          XX           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00170000
          XX           DCB=BLKSIZE=3200                                           00180000
          **********************************************************************
   82     XXG2  EXEC  PGM=MAKESTMT,                                               00200000
          XX          PARM=('./ ENDUP')                                           00210000
   83     XXSTEPLIB DD DSN=HERC01.TEST.LOADLIB,DISP=SHR                           00220000
   84     XXSYSOUT  DD SYSOUT=&OUT                                                00230000
   85     XXSTMTS   DD DSN=&&STMTG2,DISP=(NEW,PASS),                              00240000
          XX           UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),                         00250000
          XX           DCB=BLKSIZE=3200                                           00260000
          **********************************************************************
   86     XXS1   EXEC PGM=IEBUPDTX,REGION=128K,                                   00320000
          XX          PARM='CHAINUPD,CHAIN=&CHAIN,NOIMPLSEQ,LISTDEL'              00330000
   87     XXSYSUT1   DD DUMMY                                                     00340000
   88     XXSYSUT2   DD DSN=&QUAL..&LIB1,DISP=OLD                                 00350000
   89     XXSYSPRINT DD SYSOUT=&OUT                                               00390000
   90     XXSYSPUNCH DD SYSOUT=Z                                                  00400000
   91     XXSYSLIB   DD DUMMY                                                     00410000
   92     XXLIB1     DD DUMMY                                                     00420000
   93     XXLIB2     DD DUMMY                                                     00430000
   94     //S1.SYSIN DD DSN=&&SRC,DISP=(OLD,PASS)                                 00760000
          X/SYSIN  DD DSN=&&STMTG1,DISP=(OLD,DELETE)                              00440000
   95     //         DD DSN=&&STMTG2                                              00770000
          X/       DD DSN=&INPUT,DISP=OLD                                         00450000
   96     //         DD DUMMY                                                     00780000
          X/       DD DSN=&&STMTG2,DISP=(OLD,PASS)                                00460000
          *******************************************************************
          *******************************************************************

 STMT NO. MESSAGE
-
   33     IEF653I SUBSTITUTION JCL - PGM=MAKESTMT,PARM=('@PDEL\HERC01.\',
   33     IEF653I SUBSTITUTION JCL - 'CLE.DISTRO.CNTL\CLE.DISTRO.CNTLX')
   35     IEF653I SUBSTITUTION JCL - SYSOUT=A
   38     IEF653I SUBSTITUTION JCL - SYSOUT=A
   41     IEF653I SUBSTITUTION JCL - DSN=HERC01.CLE.DISTRO.CNTL,DISP=(NEW,CATLG,DELETE),
   41     IEF653I SUBSTITUTION JCL - UNIT=DISK,VOL=SER=PUB002,SPACE=(CYL,(1,1,15)),
   42     IEF653I SUBSTITUTION JCL - DSN=HERC01.CLE.DISTRO.CNTLX,DISP=(NEW,CATLG,DELETE),
   42     IEF653I SUBSTITUTION JCL - UNIT=DISK,VOL=SER=PUB002,SPACE=(TRK,(1,1,15)),
   45     IEF653I SUBSTITUTION JCL - PGM=MAKESTMT,PARM=('@PDEL\HERC01.\',
   45     IEF653I SUBSTITUTION JCL - 'CLE.DISTRO.SOURCE\CLE.DISTRO.SOURCEX')
   47     IEF653I SUBSTITUTION JCL - SYSOUT=A
   50     IEF653I SUBSTITUTION JCL - SYSOUT=A
   53     IEF653I SUBSTITUTION JCL - DSN=HERC01.CLE.DISTRO.SOURCE,DISP=(NEW,CATLG,DELETE),
   53     IEF653I SUBSTITUTION JCL - UNIT=DISK,VOL=SER=PUB002,SPACE=(CYL,(1,1,15)),
   54     IEF653I SUBSTITUTION JCL - DSN=HERC01.CLE.DISTRO.SOURCEX,DISP=(NEW,CATLG,DELETE),
   54     IEF653I SUBSTITUTION JCL - UNIT=DISK,VOL=SER=PUB002,SPACE=(TRK,(1,1,15)),
   57     IEF653I SUBSTITUTION JCL - PARM=('./ ADD NAME=NULLFILE,VERSION=0\',
   59     IEF653I SUBSTITUTION JCL - SYSOUT=A
   63     IEF653I SUBSTITUTION JCL - SYSOUT=A
   65     IEF653I SUBSTITUTION JCL - PARM='CHAINUPD,CHAIN=TS,NOIMPLSEQ,LISTDEL'
   67     IEF653I SUBSTITUTION JCL - DSN=HERC01.CLE.DISTRO.CNTL,DISP=OLD
   68     IEF653I SUBSTITUTION JCL - SYSOUT=A
   74     IEF653I SUBSTITUTION JCL - DSN=NULLFILE,DISP=OLD
   78     IEF653I SUBSTITUTION JCL - PARM=('./ ADD NAME=NULLFILE,VERSION=0\',
   80     IEF653I SUBSTITUTION JCL - SYSOUT=A
   84     IEF653I SUBSTITUTION JCL - SYSOUT=A
   86     IEF653I SUBSTITUTION JCL - PARM='CHAINUPD,CHAIN=TS,NOIMPLSEQ,LISTDEL'
   88     IEF653I SUBSTITUTION JCL - DSN=HERC01.CLE.DISTRO.SOURCE,DISP=OLD
   89     IEF653I SUBSTITUTION JCL - SYSOUT=A
   95     IEF653I SUBSTITUTION JCL - DSN=NULLFILE,DISP=OLD
   74     IEF648I INVALID DISP FIELD- PASS SUBSTITUTED
   95     IEF648I INVALID DISP FIELD- PASS SUBSTITUTED
IEF236I ALLOC. FOR HERC01T D0
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00111
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 190  ALLOCATED TO STMTS
IEF142I HERC01T D0 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0103                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG0        PASSED        *--------1
IEF285I   VOL SER NOS= WORK03.
IEF373I STEP /D0      / START 08321.0153
IEF374I STEP /D0      / STOP  08321.0153 CPU    0MIN 00.02SEC SRB    0MIN 00.00SEC VIRT    36K SYS   224K
************************************************************************************************************************************
*     1. Jobstep of job: HERC01T     Stepname: D0          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.35 to 01.53.35 *
*         elapsed time  24:00:00,09                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,02               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,02   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 190.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,03                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T D1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 190  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00002
IEF237I 280  ALLOCATED TO SYS00001
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF142I HERC01T D1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB03098.SO0104                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG0        DELETED       *--------2
IEF285I   VOL SER NOS= WORK03.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /D1      / START 08321.0153
IEF374I STEP /D1      / STOP  08321.0153 CPU    0MIN 00.06SEC SRB    0MIN 00.01SEC VIRT   208K SYS   220K
************************************************************************************************************************************
*     2. Jobstep of job: HERC01T     Stepname: D1          Program name: IDCAMS     Executed on 16.11.08 from 01.53.35 to 01.53.35 *
*         elapsed time  24:00:00,09                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,07               Virtual Storage used:    208K         Page-out:      0                           *
*           corr. CPU:  00:00:00,07   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 190.......2 240.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,11                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S1
IEF237I 280  ALLOCATED TO SYSUT1
IEF237I 240  ALLOCATED TO SYS00113
IEF237I 151  ALLOCATED TO SYSUT2
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSIN
IEF142I HERC01T S1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.OLD.DISTRO.CNTL                       KEPT          *-------21
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS08321.T015335.RA000.HERC01T.PASS          PASSED        *------158
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   JES2.JOB03098.SO0105                         SYSOUT
IEF285I   JES2.JOB03098.SI0101                         SYSIN
IEF373I STEP /S1      / START 08321.0153
IEF374I STEP /S1      / STOP  08321.0153 CPU    0MIN 00.04SEC SRB    0MIN 00.02SEC VIRT    32K SYS   192K
************************************************************************************************************************************
*     3. Jobstep of job: HERC01T     Stepname: S1          Program name: IEBPTPCH   Executed on 16.11.08 from 01.53.35 to 01.53.35 *
*         elapsed time  24:00:00,11                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,06               Virtual Storage used:     32K         Page-out:      0                           *
*           corr. CPU:  00:00:00,06   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      2                                                                           *
*     280......21 240.......0 151.....158 DMY.......0 DMY.......0                                                                  *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,10                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S2
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00115
IEF237I 151  ALLOCATED TO SYSUT1
IEF237I 149  ALLOCATED TO SYSUT2
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF142I HERC01T S2 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS08321.T015335.RA000.HERC01T.PASS          DELETED       *------159
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS08321.T015335.RA000.HERC01T.CNTL          PASSED        *--------5
IEF285I   VOL SER NOS= SMP001.
IEF285I   JES2.JOB03098.SO0106                         SYSOUT
IEF373I STEP /S2      / START 08321.0153
IEF374I STEP /S2      / STOP  08321.0153 CPU    0MIN 00.03SEC SRB    0MIN 00.01SEC VIRT    24K SYS   192K
************************************************************************************************************************************
*     4. Jobstep of job: HERC01T     Stepname: S2          Program name: MEMFLTR    Executed on 16.11.08 from 01.53.35 to 01.53.35 *
*         elapsed time  24:00:00,09                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,04               Virtual Storage used:     24K         Page-out:      0                           *
*           corr. CPU:  00:00:00,04   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 151.....159 149.......5 DMY.......0                                                                  *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,06                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S3
IEF237I 280  ALLOCATED TO SYSUT1
IEF237I 240  ALLOCATED TO SYS00117
IEF237I 14A  ALLOCATED TO SYSUT2
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSIN
IEF142I HERC01T S3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.OLD.DISTRO.SOURCE                     KEPT          *-------89
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS08321.T015335.RA000.HERC01T.PASS          PASSED        *----1,824
IEF285I   VOL SER NOS= SMP002.
IEF285I   JES2.JOB03098.SO0107                         SYSOUT
IEF285I   JES2.JOB03098.SI0102                         SYSIN
IEF373I STEP /S3      / START 08321.0153
IEF374I STEP /S3      / STOP  08321.0153 CPU    0MIN 00.19SEC SRB    0MIN 00.15SEC VIRT    32K SYS   192K
************************************************************************************************************************************
*     5. Jobstep of job: HERC01T     Stepname: S3          Program name: IEBPTPCH   Executed on 16.11.08 from 01.53.35 to 01.53.36 *
*         elapsed time  24:00:00,54                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,34               Virtual Storage used:     32K         Page-out:      0                           *
*           corr. CPU:  00:00:00,34   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      2                                                                           *
*     280......89 240.......0 14A....1824 DMY.......0 DMY.......0                                                                  *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,56                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S4
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00119
IEF237I 14A  ALLOCATED TO SYSUT1
IEF237I 149  ALLOCATED TO SYSUT2
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF142I HERC01T S4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS08321.T015335.RA000.HERC01T.PASS          DELETED       *----1,825
IEF285I   VOL SER NOS= SMP002.
IEF285I   SYS08321.T015335.RA000.HERC01T.SRC           PASSED        *-------48
IEF285I   VOL SER NOS= SMP001.
IEF285I   JES2.JOB03098.SO0108                         SYSOUT
IEF373I STEP /S4      / START 08321.0153
IEF374I STEP /S4      / STOP  08321.0153 CPU    0MIN 00.14SEC SRB    0MIN 00.15SEC VIRT    24K SYS   192K
************************************************************************************************************************************
*     6. Jobstep of job: HERC01T     Stepname: S4          Program name: MEMFLTR    Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,38                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,29               Virtual Storage used:     24K         Page-out:      0                           *
*           corr. CPU:  00:00:00,29   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 14A....1825 149......48 DMY.......0                                                                  *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,48                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S5
IEF237I 280  ALLOCATED TO DD1
IEF237I 240  ALLOCATED TO SYS00120
IEF142I HERC01T S5 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    CATALOGED     *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /S5      / START 08321.0153
IEF374I STEP /S5      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT     4K SYS   180K
************************************************************************************************************************************
*     7. Jobstep of job: HERC01T     Stepname: S5          Program name: IEFBR14    Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,03                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:      4K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 240.......0                                                                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T G0 P1
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00122
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 151  ALLOCATED TO STMTS
IEF142I HERC01T G0 P1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0109                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG0        PASSED        *--------1
IEF285I   VOL SER NOS= SPOOL0.
IEF373I STEP /G0      / START 08321.0153
IEF374I STEP /G0      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    36K SYS   196K
************************************************************************************************************************************
*     8. Jobstep of job: HERC01T     Stepname: G0          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,06                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 151.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S0 P1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 151  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00004
IEF237I 280  ALLOCATED TO SYS00003
IEF285I   HERC01.CLE.DISTRO.CNTL                       KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF237I 280  ALLOCATED TO SYS00005
IEF285I   HERC01.CLE.DISTRO.CNTLX                      KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF142I HERC01T S0 P1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB03098.SO0110                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG0        DELETED       *--------2
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /S0      / START 08321.0153
IEF374I STEP /S0      / STOP  08321.0153 CPU    0MIN 00.08SEC SRB    0MIN 00.01SEC VIRT   208K SYS   224K
************************************************************************************************************************************
*     9. Jobstep of job: HERC01T     Stepname: S0          Program name: IDCAMS     Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,11                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,09               Virtual Storage used:    208K         Page-out:      0                           *
*           corr. CPU:  00:00:00,09   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 151.......2 240.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,15                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S1 P1
IEF237I 280  ALLOCATED TO SYSUT1
IEF237I 240  ALLOCATED TO SYS00123
IEF237I 280  ALLOCATED TO SYSUT2
IEF142I HERC01T S1 P1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.CNTL                       CATALOGED     *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.CLE.DISTRO.CNTLX                      CATALOGED     *--------0
IEF285I   VOL SER NOS= PUB002.
IEF373I STEP /S1      / START 08321.0153
IEF374I STEP /S1      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT     4K SYS   180K
************************************************************************************************************************************
*    10. Jobstep of job: HERC01T     Stepname: S1          Program name: IEFBR14    Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,05                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:      4K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 240.......0 280.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T G0 P2
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00125
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 151  ALLOCATED TO STMTS
IEF142I HERC01T G0 P2 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0111                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG0        PASSED        *--------1
IEF285I   VOL SER NOS= SPOOL0.
IEF373I STEP /G0      / START 08321.0153
IEF374I STEP /G0      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    36K SYS   196K
************************************************************************************************************************************
*    11. Jobstep of job: HERC01T     Stepname: G0          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,06                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 151.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S0 P2
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 151  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00007
IEF237I 280  ALLOCATED TO SYS00006
IEF285I   HERC01.CLE.DISTRO.SOURCE                     KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF237I 280  ALLOCATED TO SYS00008
IEF285I   HERC01.CLE.DISTRO.SOURCEX                    KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF142I HERC01T S0 P2 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB03098.SO0112                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG0        DELETED       *--------2
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /S0      / START 08321.0153
IEF374I STEP /S0      / STOP  08321.0153 CPU    0MIN 00.08SEC SRB    0MIN 00.01SEC VIRT   208K SYS   224K
************************************************************************************************************************************
*    12. Jobstep of job: HERC01T     Stepname: S0          Program name: IDCAMS     Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,10                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,09               Virtual Storage used:    208K         Page-out:      0                           *
*           corr. CPU:  00:00:00,09   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 151.......2 240.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,15                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S1 P2
IEF237I 280  ALLOCATED TO SYSUT1
IEF237I 240  ALLOCATED TO SYS00126
IEF237I 280  ALLOCATED TO SYSUT2
IEF142I HERC01T S1 P2 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.SOURCE                     CATALOGED     *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.CLE.DISTRO.SOURCEX                    CATALOGED     *--------0
IEF285I   VOL SER NOS= PUB002.
IEF373I STEP /S1      / START 08321.0153
IEF374I STEP /S1      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT     4K SYS   180K
************************************************************************************************************************************
*    13. Jobstep of job: HERC01T     Stepname: S1          Program name: IEFBR14    Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,05                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:      4K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 240.......0 280.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T G1 P3
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00128
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 151  ALLOCATED TO STMTS
IEF142I HERC01T G1 P3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0113                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG1        PASSED        *--------1
IEF285I   VOL SER NOS= SPOOL0.
IEF373I STEP /G1      / START 08321.0153
IEF374I STEP /G1      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    36K SYS   200K
************************************************************************************************************************************
*    14. Jobstep of job: HERC01T     Stepname: G1          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.36 to 01.53.36 *
*         elapsed time  24:00:00,06                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 151.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T G2 P3
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00130
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 14B  ALLOCATED TO STMTS
IEF142I HERC01T G2 P3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0114                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG2        PASSED        *--------1
IEF285I   VOL SER NOS= SMP003.
IEF373I STEP /G2      / START 08321.0153
IEF374I STEP /G2      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    36K SYS   200K
************************************************************************************************************************************
*    15. Jobstep of job: HERC01T     Stepname: G2          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.36 to 01.53.37 *
*         elapsed time  24:00:00,06                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 14B.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S1 P3
IEF237I DMY  ALLOCATED TO SYSUT1
IEF237I 280  ALLOCATED TO SYSUT2
IEF237I 240  ALLOCATED TO SYS00132
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSPUNCH
IEF237I DMY  ALLOCATED TO SYSLIB
IEF237I DMY  ALLOCATED TO LIB1
IEF237I DMY  ALLOCATED TO LIB2
IEF237I 149  ALLOCATED TO SYSIN
IEF237I 14B  ALLOCATED TO
IEF237I DMY  ALLOCATED TO
IEF142I HERC01T S1 P3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.CNTL                       KEPT          *-------47
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0115                         SYSOUT
IEF285I   JES2.JOB03098.SO0116                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.CNTL          PASSED        *--------6
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG2        PASSED        *--------2
IEF285I   VOL SER NOS= SMP003.
IEF373I STEP /S1      / START 08321.0153
IEF374I STEP /S1      / STOP  08321.0153 CPU    0MIN 00.05SEC SRB    0MIN 00.01SEC VIRT    60K SYS   200K
************************************************************************************************************************************
*    16. Jobstep of job: HERC01T     Stepname: S1          Program name: IEBUPDTX   Executed on 16.11.08 from 01.53.37 to 01.53.37 *
*         elapsed time  24:00:00,09                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,06               Virtual Storage used:     60K         Page-out:      0                           *
*           corr. CPU:  00:00:00,06   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 280......47 240.......0 DMY.......0 DMY.......0 DMY.......0 DMY.......0 DMY.......0 149.......6 14B.......2      *
*     DMY.......0                                                                                                                  *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,10                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T G1 P4
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00134
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 170  ALLOCATED TO STMTS
IEF142I HERC01T G1 P4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0117                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG1        PASSED        *--------1
IEF285I   VOL SER NOS= WORK01.
IEF373I STEP /G1      / START 08321.0153
IEF374I STEP /G1      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    36K SYS   204K
************************************************************************************************************************************
*    17. Jobstep of job: HERC01T     Stepname: G1          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.37 to 01.53.37 *
*         elapsed time  24:00:00,06                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 170.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T G2 P4
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 240  ALLOCATED TO SYS00136
IEF237I JES2 ALLOCATED TO SYSOUT
IEF237I 140  ALLOCATED TO STMTS
IEF142I HERC01T G2 P4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.TEST.LOADLIB                          KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0118                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG2        PASSED        *--------1
IEF285I   VOL SER NOS= WORK00.
IEF373I STEP /G2      / START 08321.0153
IEF374I STEP /G2      / STOP  08321.0153 CPU    0MIN 00.01SEC SRB    0MIN 00.00SEC VIRT    36K SYS   212K
************************************************************************************************************************************
*    18. Jobstep of job: HERC01T     Stepname: G2          Program name: MAKESTMT   Executed on 16.11.08 from 01.53.37 to 01.53.37 *
*         elapsed time  24:00:00,05                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,01               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,01   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     240.......0 240.......0 DMY.......0 140.......1                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,01                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01T S1 P4
IEF237I DMY  ALLOCATED TO SYSUT1
IEF237I 280  ALLOCATED TO SYSUT2
IEF237I 240  ALLOCATED TO SYS00138
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSPUNCH
IEF237I DMY  ALLOCATED TO SYSLIB
IEF237I DMY  ALLOCATED TO LIB1
IEF237I DMY  ALLOCATED TO LIB2
IEF237I 149  ALLOCATED TO SYSIN
IEF237I 14B  ALLOCATED TO
IEF237I DMY  ALLOCATED TO
IEF142I HERC01T S1 P4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.SOURCE                     KEPT          *------153
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB03098.SO0119                         SYSOUT
IEF285I   JES2.JOB03098.SO0120                         SYSOUT
IEF285I   SYS08321.T015335.RA000.HERC01T.SRC           PASSED        *-------49
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG2        PASSED        *--------2
IEF285I   VOL SER NOS= SMP003.
IEF373I STEP /S1      / START 08321.0153
IEF374I STEP /S1      / STOP  08321.0153 CPU    0MIN 00.15SEC SRB    0MIN 00.03SEC VIRT    60K SYS   204K
************************************************************************************************************************************
*    19. Jobstep of job: HERC01T     Stepname: S1          Program name: IEBUPDTX   Executed on 16.11.08 from 01.53.37 to 01.53.37 *
*         elapsed time  24:00:00,23                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,18               Virtual Storage used:     60K         Page-out:      0                           *
*           corr. CPU:  00:00:00,18   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 280.....153 240.......0 DMY.......0 DMY.......0 DMY.......0 DMY.......0 DMY.......0 149......49 14B.......2      *
*     DMY.......0                                                                                                                  *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,30                                             *
************************************************************************************************************************************
IEF237I 149  ALLOCATED TO SYS00009
IEF285I   SYS08321.T015337.RA000.HERC01T.R0000009      KEPT          *--------0
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS08321.T015335.RA000.HERC01T.CNTL          DELETED
IEF285I   VOL SER NOS= SMP001.
IEF237I 149  ALLOCATED TO SYS00011
IEF285I   SYS08321.T015337.RA000.HERC01T.R0000011      KEPT          *--------0
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS08321.T015335.RA000.HERC01T.SRC           DELETED
IEF285I   VOL SER NOS= SMP001.
IEF237I 151  ALLOCATED TO SYS00013
IEF285I   SYS08321.T015337.RA000.HERC01T.R0000013      KEPT          *--------0
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG1        DELETED
IEF285I   VOL SER NOS= SPOOL0.
IEF237I 14B  ALLOCATED TO SYS00015
IEF285I   SYS08321.T015337.RA000.HERC01T.R0000015      KEPT          *--------0
IEF285I   VOL SER NOS= SMP003.
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG2        DELETED
IEF285I   VOL SER NOS= SMP003.
IEF237I 170  ALLOCATED TO SYS00017
IEF285I   SYS08321.T015337.RA000.HERC01T.R0000017      KEPT          *--------0
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG1        DELETED
IEF285I   VOL SER NOS= WORK01.
IEF237I 140  ALLOCATED TO SYS00019
IEF285I   SYS08321.T015337.RA000.HERC01T.R0000019      KEPT          *--------0
IEF285I   VOL SER NOS= WORK00.
IEF285I   SYS08321.T015335.RA000.HERC01T.STMTG2        DELETED
IEF285I   VOL SER NOS= WORK00.
IEF375I  JOB /HERC01T / START 08321.0153
IEF376I  JOB /HERC01T / STOP  08321.0153 CPU    0MIN 00.93SEC SRB    0MIN 00.40SEC


*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: @DEL\HERC01.CLE.DISTRO.LOADLIB
*** PARM 100:
*** MAKESTMT- DELETE 'HERC01.CLE.DISTRO.LOADLIB' NONVSAM PURGE

IDCAMS  SYSTEM SERVICES                                           TIME: 01:53:35        11/16/08     PAGE   1

 DELETE 'HERC01.CLE.DISTRO.LOADLIB' NONVSAM PURGE
IDC0550I ENTRY (A) HERC01.CLE.DISTRO.LOADLIB DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0

IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0

PRINT/PUNCH DATA SET UTILITY                                                                      PAGE 0001
         PUNCH  TYPORG=PO,MAXFLDS=1                                     00210000
         RECORD FIELD=(72,1,,1)                                         00220000
 EOF ON SYSIN
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
MEMFLTR V1.0.0

END OF FILE ON SYSUT1
000000158 RECORD(S) COPIED
000000006 RECORD(S) CHANGED

PRINT/PUNCH DATA SET UTILITY                                                                      PAGE 0001
         PUNCH  TYPORG=PO,MAXFLDS=1                                     00390000
         RECORD FIELD=(72,1,,1)                                         00400000
 EOF ON SYSIN
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
 END OF DATA FOR SDS OR MEMBER
MEMFLTR V1.0.0

END OF FILE ON SYSUT1
000001824 RECORD(S) COPIED
000000016 RECORD(S) CHANGED

*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: @PDEL\HERC01.\,CLE.DISTRO.CNTL\CLE.DISTRO.CNTLX
*** PARM 100:
*** MAKESTMT- DELETE 'HERC01.CLE.DISTRO.CNTL' NONVSAM PURGE
*** MAKESTMT- DELETE 'HERC01.CLE.DISTRO.CNTLX' NONVSAM PURGE

IDCAMS  SYSTEM SERVICES                                           TIME: 01:53:36        11/16/08     PAGE   1

 DELETE 'HERC01.CLE.DISTRO.CNTL' NONVSAM PURGE
IDC0550I ENTRY (A) HERC01.CLE.DISTRO.CNTL DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0

 DELETE 'HERC01.CLE.DISTRO.CNTLX' NONVSAM PURGE
IDC0550I ENTRY (A) HERC01.CLE.DISTRO.CNTLX DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0

IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0

*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: @PDEL\HERC01.\,CLE.DISTRO.SOURCE\CLE.DISTRO.SOURCEX
*** PARM 100:
*** MAKESTMT- DELETE 'HERC01.CLE.DISTRO.SOURCE' NONVSAM PURGE
*** MAKESTMT- DELETE 'HERC01.CLE.DISTRO.SOURCEX' NONVSAM PURGE

IDCAMS  SYSTEM SERVICES                                           TIME: 01:53:36        11/16/08     PAGE   1

 DELETE 'HERC01.CLE.DISTRO.SOURCE' NONVSAM PURGE
IDC0550I ENTRY (A) HERC01.CLE.DISTRO.SOURCE DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0

 DELETE 'HERC01.CLE.DISTRO.SOURCEX' NONVSAM PURGE
IDC0550I ENTRY (A) HERC01.CLE.DISTRO.SOURCEX DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0

IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0

*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: ./ ADD NAME=NULLFILE,VERSION=0\,./ NUMBER NEW1=1,INCR=1
*** PARM 100:
*** MAKESTMT-./ ADD NAME=NULLFILE,VERSION=0
*** MAKESTMT-./ NUMBER NEW1=1,INCR=1


*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: ./ ENDUP
*** PARM 100:
*** MAKESTMT-./ ENDUP

          IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 1
EXEC PARMS      CHAINUPD,CHAIN=TS,NOIMPLSEQ,LISTDEL
*** DDNAME=SYSUT2          OPEN FOR OUTPUT, DSORG=PO, DSNAME=HERC01.CLE.DISTRO.CNTL ON PUB002
*** CHAIN LIBRARY ID = 'TS', ALLOCATION NUMBER = 000
*** DDNAME=SYSUT1          OPEN FOR  INPUT, DSORG=PS, DSNAME=NULLFILE
*** DDNAME=SYSIN      <01> OPEN FOR  INPUT, DSORG=PS, DSNAME=SYS08321.T015335.RA000.HERC01T.CNTL ON SMP001
                                                          DSNAME=SYS08321.T015335.RA000.HERC01T.STMTG2 ON SMP003
                                                          DSNAME=NULLFILE

DYNALOAD  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 2
          <01>  ./  ADD NAME=DYNALOAD,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  //HERC01I JOB MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=HERC01                   00000001
                                    <01>  //*                                                                     00000002
                                    <01>  //*  ASSEMBLE AND LINK THE DYNALOAD ROUTINE                             00000003
                                    <01>  //*                                                                     00000004
                                    <01>  //STEP1 EXEC ASMFCL,PARM.ASM='OBJ,NODECK'                               00000005
                                    <01>  //ASM.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(DYNALOAD),DISP=SHR          00000006
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(DYNALOAD),DISP=SHR      00000007
                                    <01>  //*                                                                     00000008
                                    <01>  //*  NOW COMPILE THE COBOL DRIVER ROUTINE                               00000009
                                    <01>  //*                                                                     00000010
                                    <01>  //STEP2 EXEC COBUCL                                                     00000011
                                    <01>  //COB.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(TESTDYNA),DISP=SHR          00000012
                                    <01>  //LKED.SYSLIB DD                                                        00000013
                                    <01>  //         DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                    00000014
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(TESTDYNA),DISP=SHR      00000015
                                    <01>  //*                                                                     00000016
                                    <01>  //*  NOW COMPILE THE COBOL TEST SUBROUTINE                              00000017
                                    <01>  //*                                                                     00000018
                                    <01>  //STEP3 EXEC COBUCL                                                     00000019
                                    <01>  //COB.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(TESTDYN1),DISP=SHR          00000020
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(TESTDYN1),DISP=SHR      00000021

*** MEMBER DYNALOAD HAS BEEN ADDED             21 RECORDS WRITTEN
       NEW DYNALOAD ENTRY: TTR=000012 INDC=00

TESTDYNA  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 3
          <01>  ./  ADD NAME=TESTDYNA,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  //HERC01T JOB 'ME',MSGCLASS=A,MSGLEVEL=(1,1)                            00000001
                                    <01>  //S1  EXEC PGM=TESTDYNA                                                 00000002
                                    <01>  //STEPLIB DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                     00000003
                                    <01>  //SYSOUT  DD SYSOUT=*                                                   00000004

*** MEMBER TESTDYNA HAS BEEN ADDED              4 RECORDS WRITTEN
       NEW TESTDYNA ENTRY: TTR=000014 INDC=00

MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 4
          <01>  ./  ADD NAME=MYGENER,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  //HERC01A JOB 'ME',MSGCLASS=A,MSGLEVEL=(1,1)                            00000001
                                    <01>  //S1  EXEC ASMFCL,MAC1='HERC01.CLE.DISTRO.SOURCE',                      00000002
                                    <01>  //         IN='HERC01.CLE.DISTRO.SOURCE(MYGENER)'                       00000003
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(MYGENER),DISP=SHR       00000004
                                    <01>  //*                                                                     00000005

*** MEMBER MYGENER  HAS BEEN ADDED              5 RECORDS WRITTEN
       NEW MYGENER  ENTRY: TTR=000016 INDC=00

$$INDEX   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 5
          <01>  ./  ADD NAME=$$INDEX,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  1INDEX OF CNTL   PDS                                                    00000001
                                    <01>   MEMBER     APPLICATION  VERSION   COMMENTS                             00000002
                                    <01>   --------   --------     --------  -----------------------------------  00000003
                                    <01>   BLKPRT     BLKPRT       1.0.0     SEPERATOR PAGE/BLOCK LETTERS PRINT   00000004
                                    <01>              DYNALOAD     1.0.0     NO CHANGES MADE SINCE THE ORIGINAL   00000005
                                    <01>              DYNALOAD     1.0.0     DISTRIBUTION - JUST HOW DISTRIB.     00000006
                                    <01>   DYNALOAD   DYNALOAD     1.0.0     JCL TO ASSEMBLE AND COMPILE CODE     00000007
                                    <01>   TESTDYNA   DYNALOAD     1.0.0     JCL TO TEST THE DYNALOAD             00000008
                                    <01>   MAKESTMT   MAKESTMT     1.0.0     JCL TO COMPILE AND TEST MAKESTMT     00000009
                                    <01>   MYGENER    MYGENER      1.0.0     JCL TO ASSEMBLE MYGENER              00000010

*** MEMBER $$INDEX  HAS BEEN ADDED             10 RECORDS WRITTEN
       NEW $$INDEX  ENTRY: TTR=000018 INDC=00

BLKPRT    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 6
          <01>  ./  ADD NAME=BLKPRT,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  //HERC01D JOB MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=HERC01  ,TYPRUN=SCAN     00000001
                                    <01>  //********************************************************************  00000002
                                    <01>  //*                                                                     00000003
                                    <01>  //*  ASSEMBLE THE BLKPRT SUBROUTINE.  THEN COMPILE/ASSEMBLE THE         00000004
                                    <01>  //*  ASSEMBLER, COBOL, FORTRAN AND PL/I DEMO PROGRAMS.                  00000005
                                    <01>  //*                                                                     00000006
                                    <01>  //********************************************************************  00000007
                                    <01>  //*                                                                     00000008
                                    <01>  //*   ASSEMBLE AND LINK BANPRT SUBROUTINE                               00000009
                                    <01>  //*                                                                     00000010
                                    <01>  //********************************************************************  00000011
                                    <01>  //S1  EXEC ASMFCL,MAC1='HERC01.CLE.DISTRO.SOURCE'                       00000012
                                    <01>  //ASM.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(BLKPRT),DISP=SHR            00000013
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                00000014
                                    <01>  //LKED.SYSIN DD *                                                       00000015
                                    <01>   ALIAS BLKPRTF                                                          00000016
                                    <01>   NAME BLKPRT(R)                                                         00000017
                                    <01>  //********************************************************************  00000018
                                    <01>  //*                                                                     00000019
                                    <01>  //* ASSEMBLE AND EXECUTE THE ASSEMBLER CALLING MODULE                   00000020
                                    <01>  //*                                                                     00000021
                                    <01>  //********************************************************************  00000022
                                    <01>  //S2  EXEC ASMFCLG,PARM.LKED='MAP,PRINT,CALL,LET',                      00000023
                                    <01>  //         MAC1='HERC01.CLE.DISTRO.SOURCE'                              00000024
                                    <01>  //ASM.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(BLOCKASM),DISP=SHR          00000025
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(BLOCKASM),DISP=SHR,     00000026
                                    <01>  //       UNIT=,SPACE=                                                   00000027
                                    <01>  //LKED.SYSLIB DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                 00000028
                                    <01>  //GO.PRINTER DD SYSOUT=*                                                00000029
                                    <01>  //********************************************************************  00000030
                                    <01>  //*                                                                     00000031
                                    <01>  //* COMPILE AND EXECUTE THE COBOL CALLING MODULE                        00000032
                                    <01>  //*                                                                     00000033
                                    <01>  //********************************************************************  00000034
                                    <01>  //S3  EXEC COBUCLG,PARM.LKED='MAP,PRINT,CALL,LET'                       00000035
                                    <01>  //COB.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(BLOCKCOB),DISP=SHR          00000036
                                    <01>  //LKED.SYSLIB DD DSN=SYS1.COBLIB,DISP=SHR                               00000037
                                    <01>  //          DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                   00000038
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(BLOCKCOB),DISP=SHR,     00000039
                                    <01>  //       UNIT=,SPACE=                                                   00000040
                                    <01>  //GO.PRINTER DD SYSOUT=*                                                00000041
                                    <01>  //********************************************************************  00000042
                                    <01>  //*                                                                     00000043
                                    <01>  //* COMPILE AND EXECUTE THE FORTRAN G CALLING MODULE                    00000044
                                    <01>  //*                                                                     00000045
                                    <01>  //********************************************************************  00000046
                                    <01>  //S4  EXEC FORTGCLG                                                     00000047
                                    <01>  //FORT.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(BLOCKFOR),DISP=SHR         00000048
                                    <01>  //LKED.SYSLIB DD DSN=SYS1.FORTLIB,DISP=SHR                              00000049
                                    <01>  //          DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                   00000050
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(BLOCKFOG),DISP=SHR,     00000051
                                    <01>  //       UNIT=,SPACE=                                                   00000052
                                    <01>  //GO.FT06F001 DD SYSOUT=*,DCB=(LRECL=133,BLKSIZE=1330)                  00000053
BLKPRT    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 7
                                    <01>  //********************************************************************  00000054
                                    <01>  //*                                                                     00000055
                                    <01>  //* COMPILE AND EXECUTE THE FORTRAN H CALLING MODULE                    00000056
                                    <01>  //*                                                                     00000057
                                    <01>  //********************************************************************  00000058
                                    <01>  //S5  EXEC FORTHCLG                                                     00000059
                                    <01>  //FORT.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(BLOCKFOR),DISP=SHR         00000060
                                    <01>  //LKED.SYSLIB DD DSN=SYS1.FORTLIB,DISP=SHR                              00000061
                                    <01>  //          DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                   00000062
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(BLOCKFOH),DISP=SHR,     00000063
                                    <01>  //       UNIT=,SPACE=                                                   00000064
                                    <01>  //GO.FT06F001 DD SYSOUT=*,DCB=(LRECL=133,BLKSIZE=1330)                  00000065
                                    <01>  //********************************************************************  00000066
                                    <01>  //*                                                                     00000067
                                    <01>  //* COMPILE AND EXECUTE THE PL/1 F CALLING MODULE                       00000068
                                    <01>  //*                                                                     00000069
                                    <01>  //********************************************************************  00000070
                                    <01>  //S6 EXEC PL1LFCLG,PARM.PL1L='LOAD,NODECK,ATR,XREF,SIZE=0128000'        00000071
                                    <01>  //PL1L.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(BLOCKPLI),DISP=SHR         00000072
                                    <01>  //LKED.SYSLIB DD DSN=SYS1.PL1LIB,DISP=SHR                               00000073
                                    <01>  //          DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                   00000074
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(BLOCKPLI),DISP=SHR,     00000075
                                    <01>  //       UNIT=,SPACE=                                                   00000076
                                    <01>  //GO.STEPLIB DD DSN=SYS1.PL1LIB,DISP=SHR                                00000077

*** MEMBER BLKPRT   HAS BEEN ADDED             77 RECORDS WRITTEN
       NEW BLKPRT   ENTRY: TTR=00001A INDC=00

MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 8
          <01>  ./  ADD NAME=MAKESTMT,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  //HERC01S JOB MSGLEVEL=(1,1),NOTIFY=HERC01,                             00000001
                                    <01>  //        MSGCLASS=A                                                    00000002
                                    <01>  //TESTSTMT PROC P=                                                      00000003
                                    <01>  //S1     EXEC PGM=MAKESTMT,PARM='&P'                                    00000004
                                    <01>  //STEPLIB DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                     00000005
                                    <01>  //SYSOUT  DD SYSOUT=A                                                   00000006
                                    <01>  //STMTS   DD SYSOUT=Z                                                   00000007
                                    <01>  // PEND                                                                 00000008
                                    <01>  //********************************************************************  00000009
                                    <01>  //*                                                                     00000010
                                    <01>  //* COMPILE AND EXECUTE THE COBOL MAKESTMT MODULE                       00000011
                                    <01>  //*                                                                     00000012
                                    <01>  //********************************************************************  00000013
                                    <01>  //S1  EXEC COBUCL,PARM.LKED='MAP,PRINT,CALL,LET'                        00000014
                                    <01>  //COB.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(MAKESTMT),DISP=SHR          00000015
                                    <01>  //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(MAKESTMT),DISP=SHR,     00000016
                                    <01>  //       UNIT=,SPACE=                                                   00000017
                                    <01>  //*                                                                     00000018
                                    <01>  //*  STEP0 - TEST STREAM FOR MAKESTMT                                   00000019
                                    <01>  //*                                                                     00000020
                                    <01>  //*                                                                     00000021
                                    <01>  //T1  EXEC TESTSTMT,                                                    00000022
                                    <01>  //  P=' SORT FIELDS=(1,5,CH,A)'                                         00000023
                                    <01>  //T2  EXEC TESTSTMT,                                                    00000024
                                    <01>  //  P=' SORT FIELDS=(1,5,CH,A)\ END'                                    00000025
                                    <01>  //T3  EXEC TESTSTMT,                                                    00000026
                                    <01>  //  P='@R\ DELETE HERC01.VTOC\.DATA\2.DATA\3.DATA'                      00000027
                                    <01>  //T4  EXEC TESTSTMT,                                                    00000028
                                    <01>  //  P='@DEL\HERC01.VTOC\.DATA\2.DATA'                                   00000029
                                    <01>  //T5  EXEC TESTSTMT,                                                    00000030
                                    <01>  //  P='@DEL\HERC01.VTOC\.DATA\@2.DATA'                                  00000031
                                    <01>  //T6  EXEC TESTSTMT,                                                    00000032
                                    <01>  //  P='@PDEL\HERC01.VTOC\.DATA\2.DATA'                                  00000033
                                    <01>  //T7  EXEC TESTSTMT,                                                    00000034
                                    <01>  //  P='@PDEL\HERC01.VTOC\.DATA\@2.DATA'                                 00000035

*** MEMBER MAKESTMT HAS BEEN ADDED             35 RECORDS WRITTEN
       NEW MAKESTMT ENTRY: TTR=00001D INDC=00

____________________________________________________________________________________________________________________________________
          <01>  ./ ENDUP

*** END OF JOB IEBUPDTX.  STEP RETURN CODE = 00.


*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: ./ ADD NAME=NULLFILE,VERSION=0\,./ NUMBER NEW1=1,INCR=1
*** PARM 100:
*** MAKESTMT-./ ADD NAME=NULLFILE,VERSION=0
*** MAKESTMT-./ NUMBER NEW1=1,INCR=1


*** MAKESTMT: V1.0.0 STARTING
*** PARM 001: ./ ENDUP
*** PARM 100:
*** MAKESTMT-./ ENDUP

          IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 1
EXEC PARMS      CHAINUPD,CHAIN=TS,NOIMPLSEQ,LISTDEL
*** DDNAME=SYSUT2          OPEN FOR OUTPUT, DSORG=PO, DSNAME=HERC01.CLE.DISTRO.SOURCE ON PUB002
*** CHAIN LIBRARY ID = 'TS', ALLOCATION NUMBER = 000
*** DDNAME=SYSUT1          OPEN FOR  INPUT, DSORG=PS, DSNAME=NULLFILE
*** DDNAME=SYSIN      <01> OPEN FOR  INPUT, DSORG=PS, DSNAME=SYS08321.T015335.RA000.HERC01T.SRC ON SMP001
                                                          DSNAME=SYS08321.T015335.RA000.HERC01T.STMTG2 ON SMP003
                                                          DSNAME=NULLFILE

DYNALOAD  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 2
          <01>  ./  ADD NAME=DYNALOAD,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  *                                                                     * 00000001
                                    <01>           PRINT ON,GEN,NODATA                                            00000002
                                    <01>  *---------------------------------------------------------------------* 00000003
                                    <01>  *                                                                     * 00000004
                                    <01>  * THIS ROUTINE IS DESIGNED TO PROVIDE DYNAMIC PROGRAM LOADING         * 00000005
                                    <01>  * FOR PROGRAMS COMPILED WITH COMPILERS THAT ONLY SUPPORT STATIC       * 00000006
                                    <01>  * CALLS.  MVT COBOL IS AN EXAMPLE OF THIS.                            * 00000007
                                    <01>  *                                                                     * 00000008
                                    <01>  * EXAMPLE:   IN MVT COBOL,                                            * 00000009
                                    <01>  *      CALL 'PROGRAMA' USING PARM-1 PARM-2.                           * 00000010
                                    <01>  * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE PROGRAMA          * 00000011
                                    <01>  * ROUTINE TO EACH CALLING COBOL PROGRAM.  THE PROGRAM CODE AND        * 00000012
                                    <01>  * WORKING STORAGE ARE PRESERVED BETWEEN CALLS.                        * 00000013
                                    <01>  *                                                                     * 00000014
                                    <01>  * IN MVS COBOL, THE STATIC CALL WILL FUNCTION THE SAME WAY.  AN       * 00000015
                                    <01>  * EXTENSTION TO COBOL ALLOWS FOR DYNAMIC CALLS TO SUBROUTINES.        * 00000016
                                    <01>  *                                                                     * 00000017
                                    <01>  *     WORKING-STORAGE SECTION.                                        * 00000018
                                    <01>  *     ...                                                             * 00000019
                                    <01>  *         05  WS-PGM-NAME        PIC X(8)  VALUE SPACES.              * 00000020
                                    <01>  *     ...                                                             * 00000021
                                    <01>  *      ...                                                            * 00000022
                                    <01>  *      PROCEDURE DIVISION.                                            * 00000023
                                    <01>  *      ...                                                            * 00000024
                                    <01>  *      MOVE 'PROGRAMA' TO WS-PGM-NAME.                                * 00000025
                                    <01>  *      CALL WS-PGM-NAME USING PARM-1 PARM-2.                          * 00000026
                                    <01>  *                                                                     * 00000027
                                    <01>  * THIS CALL RESULTS IN 'PROGRAMA' BEING LOADED AT RUN TIME INTO       * 00000028
                                    <01>  * MEMORY AND THEN CALLED.   EACH TIME A MODULE IS DYNAMICALLY CALLED, * 00000029
                                    <01>  * MVS CHECKS TO SEE IF THE LOAD MODULE IS RENTRANT OR RESUABLE.  IF   * 00000030
                                    <01>  * SO, THE COPY OF THE PROGRAM IN MEMORY IS REUSED.  IF NOT, A NEW     * 00000031
                                    <01>  * COPY IF THE PROGRAM IS LOADED FROM DISK AND CALLED.                 * 00000032
                                    <01>  *                                                                     * 00000033
                                    <01>  * THE MVS COBOL DYNAMIC CALL CAN BE SIMULATED IN MVT COBOL BY         * 00000034
                                    <01>  * CALLING AN ASSEMBLER PROGRAM WHICH WILL LOAD THE SUBROUTINE AND     * 00000035
                                    <01>  * PASS THE OPTIONAL PARAMETERS.                                       * 00000036
                                    <01>  *                                                                     * 00000037
                                    <01>  * EXAMPLE:                                                            * 00000038
                                    <01>  *     WORKING-STORAGE SECTION.                                        * 00000039
                                    <01>  *     01  WS-PGM-BLK.                                                 * 00000040
                                    <01>  *         05  WS-PGM-NAME        PIC X(8)  VALUE SPACES.              * 00000041
                                    <01>  *         05  WS-PGM-ADDR        PIC X(4)  VALUE LOW-VALUES.          * 00000042
                                    <01>  *         05  WS-CALL-MODE       PIC X     VALUE 'K'.                 * 00000043
                                    <01>  *         05  FILLER             PIC X(3)  VALUE LOW-VALUES.          * 00000044
                                    <01>  *      ...                                                            * 00000045
                                    <01>  *      PROCEDURE DIVISION.                                            * 00000046
                                    <01>  *      ...                                                            * 00000047
                                    <01>  *                                                                     * 00000048
                                    <01>  *      MOVE 'PROGRAMA' TO WS-PGM-NAME.                                * 00000049
                                    <01>  *      CALL 'DYNALOAD' USING WS-PGM-BLK  PARM-1 PARM-2.               * 00000050
                                    <01>  *                                                                     * 00000051
                                    <01>  *                                                                     * 00000052
                                    <01>  *  NOTES:                                                             * 00000053
DYNALOAD  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 3
                                    <01>  *    - THE WS-PGM-ADDR FIELD MUST BE INITIALIZED TO LOW-VALUES        * 00000054
                                    <01>  *      BEFORE THE FIRST CALL.  DO NOT CHANGE THE VALUE OF             * 00000055
                                    <01>  *      THIS FIELD.  IF IT IS NOT LOW-VALUES, DYNALOAD ASSUMES         * 00000056
                                    <01>  *      THIS IS THE ADDRESS IN MEMORY OF PROGRAMA.                     * 00000057
                                    <01>  *                                                                     * 00000058
                                    <01>  *    - THE WS-CALL-MODE  MUST BE 'K' OR 'R'.                          * 00000059
                                    <01>  *        K INDICATES KEEP THE WORKING STORAGE AND MODULE FROM         * 00000060
                                    <01>  *          LAST CALL.  IF WS-PGM-ADDR IS NOT LOW-VALUES, THIS         * 00000061
                                    <01>  *          ADDRESS IS CALLED.                                         * 00000062
                                    <01>  *                                                                     * 00000063
                                    <01>  *        R INDICATE REFRESH MODULE FROM DISK, THUS CLEARING           * 00000064
                                    <01>  *          WORKING STORAGE BACK TO THE INITIAL VALUES.                * 00000065
                                    <01>  *                                                                     * 00000066
                                    <01>  *       YOU MAY DEFINE AND USE AS MANY WS-PGM-BLK AS NEEDED.          * 00000067
                                    <01>  *                                                                     * 00000068
                                    <01>  * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE DYNALOAD          * 00000069
                                    <01>  * ROUTINE TO EACH CALLING PROGRAM. IT IS ALSO NECESSARY TO LINK       * 00000070
                                    <01>  * THE PROGRAMA AS AN EXECUTABLE MODULE.  THE BENEFIT OF THIS IS THE   * 00000071
                                    <01>  * MODULE IS NOT STATIC LINKED INTO ALL MODULES WHICH CALL IT.         * 00000072
                                    <01>  * IF THE ROUTINE IS CHANGED, AS LONG AS THE PARM FORMATS ARE          * 00000073
                                    <01>  * THE SAME, THE CALLING MODULES WILL NOT NEED TO BE CHANGED.          * 00000074
                                    <01>  *                                                                     * 00000075
                                    <01>  * FOR EXAMPLE, AN MVT COBOL APPLICATION CONSISTS OF 100 PROGRAMS,     * 00000076
                                    <01>  * EACH OF WHICH CALL AN IO MODULE CALLED IOMOD.  USING STATIC CALLS,  * 00000077
                                    <01>  * A COPY OF IOMOD IS LINK EDITED INTO EACH OF THE 100 LOAD MODULES.   * 00000078
                                    <01>  * MAKING A CHANGE TO IOMOD WOULD REQUIRE 100 LOAD MODULES TO BE       * 00000079
                                    <01>  * RELINKED.  USING DYNALOAD, ONLY IOMOD WOULD NEED TO BE RELINKED.    * 00000080
                                    <01>  * THE 100 CALLING MODULES WOULD ONLY NEED TO BE TESTED.               * 00000081
                                    <01>  *                                                                     * 00000082
                                    <01>  * I HAVE USED THIS ROUTINE SINCE THE 1970'S.  IT WILL WORK WITH       * 00000083
                                    <01>  * MVS COBOL BUT IT COULD CONFUSE DEBUGGERS.                           * 00000084
                                    <01>  *                                                                     * 00000085
                                    <01>  * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     * 00000086
                                    <01>  * AND INCORPORATED INTO DERIVED WORKS AS LONG AS ATTRIBUTION TO THE   * 00000087
                                    <01>  * ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    * 00000088
                                    <01>  * SOURCE.                                                             * 00000089
                                    <01>  *                                                                     * 00000090
                                    <01>  * REWRITTEN DECEMBER, 2006 BY ED LISS                                 * 00000091
                                    <01>  * HTTP://WWW.SUMMERMOON.COM/HERCULES/                                 * 00000092
                                    <01>  *                                                                     * 00000093
                                    <01>  *---------------------------------------------------------------------* 00000094
                                    <01>           EJECT                                                          00000095
                                    <01>  *                                                                       00000096
                                    <01>           LCLC  &SYSECT                                                  00000097
                                    <01>  &SYSECT  SETC  'DYNALOAD'          ROUTINE IDENTIFICATION               00000098
                                    <01>  *                                                                       00000099
                                    <01>  &SYSECT  CSECT                                                          00000100
                                    <01>  *                                                                       00000101
                                    <01>  @IDENT01 B     @IDENT04(R15)       BRANCH AROUND IDENT CONSTANTS        00000102
                                    <01>           DC    AL1(@IDENT03-@IDENT02)                                   00000103
                                    <01>  @IDENT02 DC    C'&SYSECT V1'                                            00000104
                                    <01>           DC    C'&SYSDATE &SYSTIME - '                                  00000105
                                    <01>           DC    C'DYNAMIC LOAD ROUTINE FOR MVT COBOL'                    00000106
                                    <01>  @IDENT03 DS    0H                                                       00000107
                                    <01>  @IDENT04 EQU   *-@IDENT01                                               00000108
                                    <01>  *                                                                       00000109
                                    <01>           SAVE  (14,12)                                                  00000110
DYNALOAD  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 4
                                    <01>  *                                                                       00000111
                                    <01>           BALR  R12,0               BASE REGISTERS ARE 12                00000112
                                    <01>           USING *,R12                                                    00000113
                                    <01>  *                                                                       00000114
                                    <01>           LR    R5,R13              COPY CALLER'S SAVEAREA ADDR          00000115
                                    <01>           LA    R13,SAVEAREA        ESTABLISH MY SAVEAREA                00000116
                                    <01>           ST    R5,4(,R13)          BACK CHAIN SAVE AREAS                00000117
                                    <01>           ST    R13,8(,R5)          FORWARD CHAIN SAVE AREAS             00000118
                                    <01>  *                                                                       00000119
                                    <01>  *---------------------------------------------------------------------* 00000120
                                    <01>  * AT LEAST ONE PARM MUST BE PASSED.  THIS IS THE NAME OF THE LOAD     * 00000121
                                    <01>  * MODULE TO DYNAMICALY CALL.  IF THIS IS MISSING, THE MODULE WILL     * 00000122
                                    <01>  * ABORT WITH A U0001 ABEND CODE.                                      * 00000123
                                    <01>  * THIS MODULE WILL STRIP OFF THE PROGRAM NAME AND PASS THE REMAINING  * 00000124
                                    <01>  * PARMS, IF ANY, TO THE SUBROUTINE BEING CALLED.                      * 00000125
                                    <01>  * IF THERE ARE NO PARMS TO PASS, R1 IS SET TO ZEROS.                  * 00000126
                                    <01>  *---------------------------------------------------------------------* 00000127
                                    <01>           LTR   R1,R1                                                    00000128
                                    <01>           BNZ   PARMFND             BRANCH IF PARM LIST PRESENT          00000129
                                    <01>           ABEND 1,,,USER                                                 00000130
                                    <01>  PARMFND  DS    0H                                                       00000131
                                    <01>           LR    R2,R1               COPY PARMLIST ADDR TO R2             00000132
                                    <01>           L     R3,0(,R2)           GET ADDR OF PROGRAM NAME             00000133
                                    <01>           MVC   PGMBLK,0(R3)        GET PGMBLK - NAME, ADDR, FUNC        00000134
                                    <01>           TM    0(R2),X'80'         CHECK FOR LAST PARM                  00000135
                                    <01>           BZ    OPTPARMS            MORE PARMS FOUND                     00000136
                                    <01>           SR    R4,R4               SET PARM ADDR TO ZERO                00000137
                                    <01>           B     DYNACALL                                                 00000138
                                    <01>  OPTPARMS DS    0H                                                       00000139
                                    <01>           LA    R4,4(,R2)           ADVANCE TO NEXT PARM                 00000140
                                    <01>  DYNACALL DS    0H                                                       00000141
                                    <01>           L     R0,PGMADDR          GET ADDR IN MEMORY                   00000142
                                    <01>           CLC   PGMADDR,=4X'00'     IS IS ZEROS                          00000143
                                    <01>           BE    DOLOAD                                                   00000144
                                    <01>           CLI   PGMFUNC,C'K'        KEEP CALL?                           00000145
                                    <01>           BE    SKIPLOAD                                                 00000146
                                    <01>           CLI   PGMFUNC,C'R'                                             00000147
                                    <01>           BE    DOLOAD                                                   00000148
                                    <01>           ABEND 2,,,USER            ABORT IF NO CORRECT PARM             00000149
                                    <01>  *                                                                       00000150
                                    <01>  DOLOAD   DS    0H                                                       00000151
                                    <01>           LOAD  EPLOC=PGM                                                00000152
                                    <01>           ST    R0,PGMADDR                                               00000153
                                    <01>  SKIPLOAD DS    0H                                                       00000154
                                    <01>           MVC   0(L'PGMBLK,R3),PGMBLK PUT CTL BLK BACK IN CALLERS WS     00000155
                                    <01>           LR    R1,R4               PUT PARMLIST IN R1                   00000156
                                    <01>           LR    R15,R0              COPY MODULE ADDR TO R15              00000157
                                    <01>           BALR  R14,R15             CALL LOADED PGM                      00000158
                                    <01>  GOBACK   DS    0H                                                       00000159
                                    <01>  *---------------------------------------------------------------------* 00000160
                                    <01>  * RETURN TO CALLING PROGRAM WITH ZERO RETURN CODE IN R15              * 00000161
                                    <01>  *---------------------------------------------------------------------* 00000162
                                    <01>           L     R13,4(,R13)    RESET TO CALLERS SAVE AREA                00000163
                                    <01>           RETURN (14,12),RC=0                                            00000164
                                    <01>  *                                                                       00000165
                                    <01>           DS    0F                                                       00000166
                                    <01>  PGMBLK   DS    0CL16                                                    00000167
DYNALOAD  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 5
                                    <01>  PGM      DC    CL8' '                                                   00000168
                                    <01>  PGMADDR  DC    F'0'                                                     00000169
                                    <01>  PGMFUNC  DC    C' '                                                     00000170
                                    <01>           DS    CL3                                                      00000171
                                    <01>  *                                                                       00000172
                                    <01>  *---------------------------------------------------------------------* 00000173
                                    <01>  * MY REGISTER SAVE AREA                                               * 00000174
                                    <01>  *---------------------------------------------------------------------* 00000175
                                    <01>  SAVEAREA DS    18F                                                      00000176
                                    <01>  *                                                                       00000177
                                    <01>  R0       EQU   0                                                        00000178
                                    <01>  R1       EQU   1                                                        00000179
                                    <01>  R2       EQU   2                                                        00000180
                                    <01>  R3       EQU   3                                                        00000181
                                    <01>  R4       EQU   4                                                        00000182
                                    <01>  R5       EQU   5                                                        00000183
                                    <01>  R6       EQU   6                                                        00000184
                                    <01>  R7       EQU   7                                                        00000185
                                    <01>  R8       EQU   8                                                        00000186
                                    <01>  R9       EQU   9                                                        00000187
                                    <01>  R10      EQU   10                                                       00000188
                                    <01>  R11      EQU   11                                                       00000189
                                    <01>  R12      EQU   12                                                       00000190
                                    <01>  R13      EQU   13                                                       00000191
                                    <01>  R14      EQU   14                                                       00000192
                                    <01>  R15      EQU   15                                                       00000193
                                    <01>  *                                                                       00000194
                                    <01>           END                                                            00000195

*** MEMBER DYNALOAD HAS BEEN ADDED            195 RECORDS WRITTEN
       NEW DYNALOAD ENTRY: TTR=000012 INDC=00

MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 6
          <01>  ./  ADD NAME=MYGENER,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           TITLE '**** MYGENER - CONVERT RECORD FORMATS ****'             00000001
                                    <01>  *********************************************************************** 00000002
                                    <01>  *                                                                     * 00000003
                                    <01>  *  MYGENER - PROGRAM TO COPY AND CONVERT RECORD FORMATS               * 00000004
                                    <01>  *                                                                     * 00000005
                                    <01>  *    THIS PROGRAM COPIES AND CONVERT FIXED TO/FROM VARIABLE RECFM.    * 00000006
                                    <01>  *    TRUNCATION OF TRAILING SPACES OR PADDING WITH TRAILING SPACES    * 00000007
                                    <01>  *    WILL OCCUR.                                                      * 00000008
                                    <01>  *                                                                     * 00000009
                                    <01>  *    THESE RECFM CONVERSIONS ARE SUPPORTED - F->F, F->V, V->F, V->V   * 00000010
                                    <01>  *    BLOCKING/REBLOCKING IS SUPPORTED BY MVS.                         * 00000011
                                    <01>  *                                                                     * 00000012
                                    <01>  *  REQUIRED DD STATEMENTS:                                            * 00000013
                                    <01>  *    SYSPRINT   RECFM=VBA,LRECL=121,BLKSIZE=1210                      * 00000014
                                    <01>  *    SYSUT1     DCB FROM FROM INPUT DATASET                           * 00000015
                                    <01>  *    SYSUT2     DCB FROM FROM SYSUT2                                  * 00000016
                                    <01>  *                                                                     * 00000017
                                    <01>  *********************************************************************** 00000018
                                    <01>  *                                                                     * 00000019
                                    <01>  * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     * 00000020
                                    <01>  * AND INCORPORATED INTO DERIVED WORKS AS LONG AS ATTRIBUTION TO THE   * 00000021
                                    <01>  * ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    * 00000022
                                    <01>  * SOURCE.                                                             * 00000023
                                    <01>  *                                                                     * 00000024
                                    <01>  * RELEASE SEPTEMBER, 2008  BY ED LISS                                 * 00000025
                                    <01>  * HTTP://WWW.SUMMERMOON.COM/HERCULES/                                 * 00000026
                                    <01>  *                                                                     * 00000027
                                    <01>  *********************************************************************** 00000028
                                    <01>  MYGENER  ESTART DESC='MYGENER PGM',VER='1.0.0',BASE=R12,REGS=YES        00000029
                                    <01>           OPEN  (SYSPRINT,(OUTPUT))    OPEN SYSPRINT                     00000030
                                    <01>           PUT   SYSPRINT,HDRLN1          AND PRINT HEADINGS              00000031
                                    <01>           PUT   SYSPRINT,HDRLN2                                          00000032
                                    <01>           USING IHADCB,R11             ESTABLISH BASE FOR DCBD           00000033
                                    <01>           LA    R11,INDCB                                                00000034
                                    <01>           MVC   DTLDDN,DCBDDNAM         CAPTURE DDNAME FROM INDCB        00000035
                                    <01>           OPEN  (INDCB,(INPUT))                                          00000036
                                    <01>           MVC   INLRECL,DCBLRECL        CAPTURE DCB PARMS                00000037
                                    <01>           MVC   INBLKSI,DCBBLKSI                                         00000038
                                    <01>           MVC   INRECFM,DCBRECFM                                         00000039
                                    <01>           BAL   R10,PRTDCB                                               00000040
                                    <01>           LA    R11,OUTDCB                                               00000041
                                    <01>           MVC   DTLDDN,DCBDDNAM         CAPTURE DDNAME FROM OUTDCB       00000042
                                    <01>           OPEN  (OUTDCB,(OUTPUT))                                        00000043
                                    <01>           MVC   OUTLRECL,DCBLRECL       CAPTURE DCB PARMS                00000044
                                    <01>           MVC   OUTBLKSI,DCBBLKSI                                        00000045
                                    <01>           MVC   OUTRECFM,DCBRECFM                                        00000046
                                    <01>           BAL   R10,PRTDCB                                               00000047
                                    <01>           EJECT                                                          00000048
                                    <01>  *********************************************************************** 00000049
                                    <01>  *                                                                       00000050
                                    <01>  *   DETERMINE LARGEST LRECL AND ISSUE A GETMAIN FOR IT.                 00000051
                                    <01>  *                                                                       00000052
                                    <01>  *********************************************************************** 00000053
MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 7
                                    <01>           LH    R9,INLRECL              GET INPUT RECSIZE                00000054
                                    <01>           CH    R9,OUTLRECL                AND COMPARE TO OUTRECL        00000055
                                    <01>           BH    GMAIN                   BRACH IF INRECL>OUTRECL          00000056
                                    <01>           LH    R9,OUTLRECL             USE OUTRECL SINCE IT IS >        00000057
                                    <01>  GMAIN    EQU   *                                                        00000058
                                    <01>           ST   R9,GMAINLN                                                00000059
                                    <01>           GETMAIN R,LV=(R9)                                              00000060
                                    <01>           LR   R9,R1                                                     00000061
                                    <01>           USING LND,R9                                                   00000062
                                    <01>           EJECT                                                          00000063
                                    <01>  *********************************************************************** 00000064
                                    <01>  *                                                                       00000065
                                    <01>  *   DETERMINE TYPE OF COPY - F->F, F->V, V->F, V->V                     00000066
                                    <01>  *                                                                       00000067
                                    <01>  *   PRINT AN ERROR MESSAGE AND QUIT IF AN INVALID COPY IS ATTEMPTED.    00000068
                                    <01>  *                                                                       00000069
                                    <01>  *********************************************************************** 00000070
                                    <01>           LA    R11,INDCB                                                00000071
                                    <01>           TM    DCBRECFM,DCBRECF         RECFM F?                        00000072
                                    <01>           BO    COPYF                                                    00000073
                                    <01>           TM    DCBRECFM,DCBRECV         RECFM V?                        00000074
                                    <01>           BO    COPYV                                                    00000075
                                    <01>           PUT   SYSPRINT,ERRLN1                                          00000076
                                    <01>           B     ERREXIT                                                  00000077
                                    <01>  COPYF    EQU   *                                                        00000078
                                    <01>           LA    R11,OUTDCB                                               00000079
                                    <01>           TM    DCBRECFM,DCBRECF         RECFM F?                        00000080
                                    <01>           BO    COPYFF                                                   00000081
                                    <01>           TM    DCBRECFM,DCBRECV         RECFM V?                        00000082
                                    <01>           BO    COPYFV                                                   00000083
                                    <01>           PUT   SYSPRINT,ERRLN1                                          00000084
                                    <01>           B     ERREXIT                                                  00000085
                                    <01>  COPYV    EQU   *                                                        00000086
                                    <01>           LA    R11,OUTDCB                                               00000087
                                    <01>           TM    DCBRECFM,DCBRECF         RECFM F?                        00000088
                                    <01>           BO    COPYVF                                                   00000089
                                    <01>           TM    DCBRECFM,DCBRECV         RECFM V?                        00000090
                                    <01>           BO    COPYVV                                                   00000091
                                    <01>           PUT   SYSPRINT,ERRLN1                                          00000092
                                    <01>           B     ERREXIT                                                  00000093
                                    <01>           EJECT                                                          00000094
                                    <01>  *********************************************************************** 00000095
                                    <01>  *                                                                       00000096
                                    <01>  *   COPY - F->F                                                         00000097
                                    <01>  *                                                                       00000098
                                    <01>  *   READ, COUNT AND WRITE UNTIL EOF.                                    00000099
                                    <01>  *                                                                       00000100
                                    <01>  *********************************************************************** 00000101
                                    <01>  COPYFF   EQU   *                                                        00000102
                                    <01>           LA    R4,LN                   CLEAR RECORD AREA TO SPACES      00000103
                                    <01>           L     R5,GMAINLN                                               00000104
                                    <01>           LA    R6,SPACE                                                 00000105
                                    <01>           L     R7,SPACELN                                               00000106
                                    <01>           MVCL  R4,R6                                                    00000107
                                    <01>  NEXTFF   EQU   *                                                        00000108
                                    <01>           GET   INDCB,LN                                                 00000109
                                    <01>           AP    RECCNT,=P'1'                                             00000110
MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 8
                                    <01>           PUT   OUTDCB,LN                                                00000111
                                    <01>           CLC   INLRECL,OUTLRECL                                         00000112
                                    <01>           BNH   NEXTFF                                                   00000113
                                    <01>           AP    TRUNREC,=P'1'           COUNT TRUNCATED RECS             00000114
                                    <01>           B     NEXTFF                                                   00000115
                                    <01>           EJECT                                                          00000116
                                    <01>  *********************************************************************** 00000117
                                    <01>  *                                                                       00000118
                                    <01>  *   COPY - F->V                                                         00000119
                                    <01>  *                                                                       00000120
                                    <01>  *   READ, COUNT AND WRITE UNTIL EOF.   TRUNCATION CAN OCCUR.            00000121
                                    <01>  *                                                                       00000122
                                    <01>  *********************************************************************** 00000123
                                    <01>  COPYFV   EQU   *                                                        00000124
                                    <01>  NEXTFV   EQU   *                                                        00000125
                                    <01>           LA    R4,LN                   CLEAR IO AREA TO SPACES          00000126
                                    <01>           L     R5,GMAINLN                                               00000127
                                    <01>           LA    R6,SPACE                                                 00000128
                                    <01>           L     R7,SPACELN                                               00000129
                                    <01>           MVCL  R4,R6                                                    00000130
                                    <01>           GET   INDCB,LN+4                                               00000131
                                    <01>           AP    RECCNT,=P'1'                                             00000132
                                    <01>           L     R3,GMAINLN              GET LONGEST LRECL                00000133
                                    <01>           BCTR  R3,0                    SUBTRACT 1                       00000134
                                    <01>  TRFV     EQU   *                                                        00000135
                                    <01>           LA    R4,LN(R3)                                                00000136
                                    <01>           CLI   0(R4),C' '              BLANK?                           00000137
                                    <01>           BNE   DONEFV                                                   00000138
                                    <01>           BCT   R3,TRFV                                                  00000139
                                    <01>           LA    R3,5                    MAKE SURE REC IS AT 1 BYTE       00000140
                                    <01>           B     PUTFV                   BLANK LINE REDUCED TO 1 SPACE    00000141
                                    <01>  DONEFV   EQU   *                                                        00000142
                                    <01>           LA    R3,1(,R3)               ADD THE RDW TO THE LRECL         00000143
                                    <01>           CH    R3,OUTLRECL             CHECK FOR TRUNCATION             00000144
                                    <01>           BNH   PUTFV                   BRANCH IF <=                     00000145
                                    <01>  *                                                                       00000146
                                    <01>  *  TRUNCATED RECORD COULD STILL BE TOO LONG - TRUNCATE AGAIN            00000147
                                    <01>  *                                                                       00000148
                                    <01>           LH    R3,OUTLRECL             CHECK FOR TRUNCATION             00000149
                                    <01>           BCTR  R3,0                    SUBTRACT 1                       00000150
                                    <01>  TRFV2    EQU   *                                                        00000151
                                    <01>           LA    R4,LN(R3)                                                00000152
                                    <01>           CLI   0(R4),C' '              BLANK?                           00000153
                                    <01>           BNE   DONEFV2                                                  00000154
                                    <01>           BCT   R3,TRFV2                                                 00000155
                                    <01>  DONEFV2  EQU   *                                                        00000156
                                    <01>           LA    R3,1(,R3)               ADD THE RDW TO THE LRECL         00000157
                                    <01>           CH    R3,OUTLRECL             CHECK FOR TRUNCATION             00000158
                                    <01>           BL    PUTFV                   BRANCH IF <                      00000159
                                    <01>           LH    R3,OUTLRECL             TRUNCATE THE RECORD              00000160
                                    <01>           AP    TRUNREC,=P'1'           COUNT TRUNCATED RECS             00000161
                                    <01>  PUTFV    EQU   *                                                        00000162
                                    <01>           STH   R3,LN                   CREATE RDW                       00000163
                                    <01>           XC    LN+2(2),LN+2                                             00000164
                                    <01>           PUT   OUTDCB,LN                                                00000165
                                    <01>           B     NEXTFV                                                   00000166
                                    <01>           EJECT                                                          00000167
MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08    PAGE 9
                                    <01>  *********************************************************************** 00000168
                                    <01>  *                                                                       00000169
                                    <01>  *   COPY - V->F                                                         00000170
                                    <01>  *                                                                       00000171
                                    <01>  *   READ, COUNT AND WRITE UNTIL EOF.                                    00000172
                                    <01>  *                                                                       00000173
                                    <01>  *********************************************************************** 00000174
                                    <01>  COPYVF   EQU   *                                                        00000175
                                    <01>  NEXTVF   EQU   *                       CLEAR IO AREA TO SPACES          00000176
                                    <01>           LA    R4,LN                                                    00000177
                                    <01>           L     R5,GMAINLN                                               00000178
                                    <01>           LA    R6,SPACE                                                 00000179
                                    <01>           L     R7,SPACELN                                               00000180
                                    <01>           MVCL  R4,R6                                                    00000181
                                    <01>           GET   INDCB,LN                                                 00000182
                                    <01>           AP    RECCNT,=P'1'                                             00000183
                                    <01>           LH    R3,LN                   GET LRECL                        00000184
                                    <01>           SH    R3,=H'4'                TAKE OF THE RDW                  00000185
                                    <01>           CH    R3,OUTLRECL             COMPARE TO OUTPUT LRECL          00000186
                                    <01>           BNH   PUTVF                                                    00000187
                                    <01>  TRVF     EQU   *                                                        00000188
                                    <01>           AP    TRUNREC,=P'1'           COUNT TRUNCATED RECS             00000189
                                    <01>  PUTVF    EQU   *                                                        00000190
                                    <01>           PUT   OUTDCB,LN+4                                              00000191
                                    <01>           B     NEXTVF                                                   00000192
                                    <01>           EJECT                                                          00000193
                                    <01>  *********************************************************************** 00000194
                                    <01>  *                                                                       00000195
                                    <01>  *   COPY - V->V                                                         00000196
                                    <01>  *                                                                       00000197
                                    <01>  *   READ, COUNT AND WRITE UNTIL EOF.                                    00000198
                                    <01>  *                                                                       00000199
                                    <01>  *********************************************************************** 00000200
                                    <01>  COPYVV   EQU   *                                                        00000201
                                    <01>  NEXTVV   EQU   *                                                        00000202
                                    <01>           LA    R4,LN                                                    00000203
                                    <01>           L     R5,GMAINLN                                               00000204
                                    <01>           LA    R6,SPACE                                                 00000205
                                    <01>           L     R7,SPACELN                                               00000206
                                    <01>           MVCL  R4,R6                                                    00000207
                                    <01>           GET   INDCB,LN                                                 00000208
                                    <01>           AP    RECCNT,=P'1'                                             00000209
                                    <01>           LH    R3,LN                   GET LRECL                        00000210
                                    <01>           CH    R3,OUTLRECL             COMPARE TO OUTPUT LRECL          00000211
                                    <01>           BNH   PUTVV                                                    00000212
                                    <01>  TRVV     EQU   *                                                        00000213
                                    <01>           LH    R3,OUTLRECL                                              00000214
                                    <01>           AP    TRUNREC,=P'1'           COUNT TRUNCATED RECS             00000215
                                    <01>  PUTVV    EQU   *                                                        00000216
                                    <01>           STH   R3,LN                   CREATE RDW                       00000217
                                    <01>           XC    LN+2(2),LN+2                                             00000218
                                    <01>           PUT   OUTDCB,LN                                                00000219
                                    <01>           B     NEXTVV                                                   00000220
                                    <01>           EJECT                                                          00000221
                                    <01>  EOFIN    EQU   *                                                        00000222
                                    <01>           PUT   SYSPRINT,FTRLN1                                          00000223
                                    <01>           UNPK  FTRRECS,RECCNT                                           00000224
MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 10
                                    <01>           OI    FTRRECS+8,X'F0'                                          00000225
                                    <01>           PUT   SYSPRINT,FTRLN2                                          00000226
                                    <01>           UNPK  FTRTRUN,TRUNREC                                          00000227
                                    <01>           OI    FTRTRUN+8,X'F0'                                          00000228
                                    <01>           PUT   SYSPRINT,FTRLN3                                          00000229
                                    <01>           CLOSE (SYSPRINT,,INDCB,,OUTDCB)                                00000230
                                    <01>           ERETURN RC=0                                                   00000231
                                    <01>  ERREXIT  EQU   *                                                        00000232
                                    <01>           PUT   SYSPRINT,ERRLN1                                          00000233
                                    <01>           CLOSE (SYSPRINT,,INDCB,,OUTDCB)                                00000234
                                    <01>           ERETURN RC=16                                                  00000235
                                    <01>  PRTDCB   EQU   *                                                        00000236
                                    <01>           TM    DCBRECFM,DCBRECF         RECFM F?                        00000237
                                    <01>           BO    FIXIN                                                    00000238
                                    <01>           TM    DCBRECFM,DCBRECV         RECFM V?                        00000239
                                    <01>           BO    VARIN                                                    00000240
                                    <01>           PUT   SYSPRINT,ERRLN1                                          00000241
                                    <01>           B     ERREXIT                                                  00000242
                                    <01>  FIXIN    EQU   *                                                        00000243
                                    <01>           MVI   DTLRF1,C'F'                                              00000244
                                    <01>           B     BLKTEST                                                  00000245
                                    <01>  VARIN    EQU   *                                                        00000246
                                    <01>           MVI   DTLRF1,C'V'                                              00000247
                                    <01>           B     BLKTEST                                                  00000248
                                    <01>  BLKTEST  EQU   *                                                        00000249
                                    <01>           MVI   DTLRF2,C' '                                              00000250
                                    <01>           TM    DCBRECFM,DCBRECBR        BLOCKED?                        00000251
                                    <01>           BZ    ASATST                                                   00000252
                                    <01>           MVI   DTLRF2,C'B'                                              00000253
                                    <01>  ASATST   EQU   *                                                        00000254
                                    <01>  FMTRECL  EQU   *                                                        00000255
                                    <01>           LH    R2,DCBLRECL                                              00000256
                                    <01>           CVD   R2,DWORD                                                 00000257
                                    <01>           OI    DWORD+7,X'0F'                                            00000258
                                    <01>           UNPK  DTLRECL,DWORD+5(3)                                       00000259
                                    <01>           LH    R2,DCBBLKSI                                              00000260
                                    <01>           CVD   R2,DWORD                                                 00000261
                                    <01>           OI    DWORD+7,X'0F'                                            00000262
                                    <01>           UNPK  DTLBLKSI,DWORD+5(3)                                      00000263
                                    <01>  *                                                                       00000264
                                    <01>           PUT   SYSPRINT,DTLLN1                                          00000265
                                    <01>           BR    R10                                                      00000266
                                    <01>  DWORD    DS    D                                                        00000267
                                    <01>  GMAINLN  DS    F                                                        00000268
                                    <01>  RECCNT   DC    PL5'0'                                                   00000269
                                    <01>  TRUNREC  DC    PL5'0'                                                   00000270
                                    <01>  INRECFM  DS    CL1                                                      00000271
                                    <01>  INLRECL  DS    H                                                        00000272
                                    <01>  INBLKSI  DS    H                                                        00000273
                                    <01>  OUTRECFM DS    CL1                                                      00000274
                                    <01>  OUTLRECL DS    H                                                        00000275
                                    <01>  OUTBLKSI DS    H                                                        00000276
                                    <01>  SPACELN  DS    0F                                                       00000277
                                    <01>  SPACE    DC    C' '                                                     00000278
                                    <01>           DC    AL3(0)                                                   00000279
                                    <01>  SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,                    *00000280
                                    <01>                 RECFM=VBA,LRECL=121,BLKSIZE=1210                         00000281
MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 11
                                    <01>  ********                                                                00000282
                                    <01>  HDRLN1   DC    AL2(HDRLN1L)                                             00000283
                                    <01>           DC    AL2(0)                                                   00000284
                                    <01>           DC    C'1MYGENER V1.0.0'                                       00000285
                                    <01>  HDRLN1L  EQU   *-HDRLN1                                                 00000286
                                    <01>  ********                                                                00000287
                                    <01>  HDRLN2   DC    AL2(HDRLN2L)                                             00000288
                                    <01>           DC    AL2(0)                                                   00000289
                                    <01>           DC    C'0'                                                     00000290
                                    <01>  HDRLN2L  EQU   *-HDRLN2                                                 00000291
                                    <01>  ********                                                                00000292
                                    <01>  DTLLN1   DC    AL2(DTLLN1L)                                             00000293
                                    <01>           DC    AL2(0)                                                   00000294
                                    <01>           DC    C' '                                                     00000295
                                    <01>  DTLDDN   DC    CL8' '                                                   00000296
                                    <01>           DC    CL7' RECFM='                                             00000297
                                    <01>  DTLRF1   DC    C' '                                                     00000298
                                    <01>  DTLRF2   DC    C' '                                                     00000299
                                    <01>           DC    C' LRECL='                                               00000300
                                    <01>  DTLRECL  DS    CL5                                                      00000301
                                    <01>           DC    C' BLKSIZE='                                             00000302
                                    <01>  DTLBLKSI DS    CL5                                                      00000303
                                    <01>  DTLLN1L  EQU   *-DTLLN1                                                 00000304
                                    <01>  ********                                                                00000305
                                    <01>  ERRLN1   DC    AL2(ERRLN1L)                                             00000306
                                    <01>           DC    AL2(0)                                                   00000307
                                    <01>           DC    C' ERROR - INPUT MUST BE RECFM F OR V'                   00000308
                                    <01>  ERRLN1L  EQU   *-ERRLN1                                                 00000309
                                    <01>  ********                                                                00000310
                                    <01>  FTRLN1   DC    AL2(FTRLN1L)                                             00000311
                                    <01>           DC    AL2(0)                                                   00000312
                                    <01>           DC    C'-END OF FILE ON SYSUT1'                                00000313
                                    <01>  FTRLN1L  EQU   *-FTRLN1                                                 00000314
                                    <01>  ********                                                                00000315
                                    <01>  FTRLN2   DC    AL2(FTRLN2L)                                             00000316
                                    <01>           DC    AL2(0)                                                   00000317
                                    <01>           DC    C' '                                                     00000318
                                    <01>  FTRRECS  DC    CL9'        '                                            00000319
                                    <01>           DC    C' RECORD(S) COPIED'                                     00000320
                                    <01>  FTRLN2L  EQU   *-FTRLN2                                                 00000321
                                    <01>  ********                                                                00000322
                                    <01>  FTRLN3   DC    AL2(FTRLN3L)                                             00000323
                                    <01>           DC    AL2(0)                                                   00000324
                                    <01>           DC    C' '                                                     00000325
                                    <01>  FTRTRUN  DC    CL9'        '                                            00000326
                                    <01>           DC    C' RECORD(S) TRUNCATED'                                  00000327
                                    <01>  FTRLN3L  EQU   *-FTRLN3                                                 00000328
                                    <01>  ********                                                                00000329
                                    <01>  INDCB    DCB   DDNAME=SYSUT1,MACRF=(GM),EODAD=EOFIN,DSORG=PS            00000330
                                    <01>  OUTDCB   DCB   DDNAME=SYSUT2,MACRF=(PM),DSORG=PS                        00000331
                                    <01>           LTORG                                                          00000332
                                    <01>           DS    0D                                                       00000333
                                    <01>  LND      DSECT                                                          00000334
                                    <01>  LN       DS    CL32767                                                  00000335
                                    <01>  DDCB     DCBD  DSORG=PS                                                 00000336
                                    <01>           END   MYGENER                                                  00000337

MYGENER   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 12
*** MEMBER MYGENER  HAS BEEN ADDED            337 RECORDS WRITTEN
       NEW MYGENER  ENTRY: TTR=000018 INDC=00

BLKPRT    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 13
          <01>  ./  ADD NAME=BLKPRT,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           TITLE 'BLOCK LETTER ROUTINE'                                   00000001
                                    <01>  *********************************************************************** 00000002
                                    <01>  *                                                                     * 00000003
                                    <01>  *        CREATE BLOCK LETTERS                                         * 00000004
                                    <01>  *        --------------------                                         * 00000005
                                    <01>  *        THIS ROUTINE FORMATS BLOCK LETTERS.  THIS                    * 00000006
                                    <01>  *        CODE WAS EXTRACTED FROM HASPPRPU (JES2) PRINT DRIVER         * 00000007
                                    <01>  *        AND EXTENSIVELY MODIFIED TO SIMPLY PRODUCE A LINE OF BLOCK   * 00000008
                                    <01>  *        LETTERS VIA SUBROUTINE CALL.                                 * 00000009
                                    <01>  *                                                                     * 00000010
                                    <01>  *********************************************************************** 00000011
                                    <01>  *                                                                     * 00000012
                                    <01>  *     THREE PARMS MUST BE PASSED USING STANDARD IBM LINKAGE           * 00000013
                                    <01>  *       PARM1=SLANT INDICATOR - 1 CHARACTER (Y/N)                     * 00000014
                                    <01>  *       PARM2=TEXT FOR BLOCK LETTERS - 8 CHARACTERS                   * 00000015
                                    <01>  *       PARM3=BUFFER FOR BLOCK LETTERS - 12 LINES OF 132 CHARS        * 00000016
                                    <01>  *                                                                     * 00000017
                                    <01>  *********************************************************************** 00000018
                                    <01>  *                                                                     * 00000019
                                    <01>  *     V1.0.0 - NOV 1, 2008                                            * 00000020
                                    <01>  *        ADDED '/' CHARACTER AND OTHER COMMENTS                       * 00000021
                                    <01>  *                                                                     * 00000022
                                    <01>  *********************************************************************** 00000023
                                    <01>  BLKPRT   ESTART TYPE=START,DESC='BLOCK LETTER GENERATION',             *00000024
                                    <01>                 VER='1.0.0',REGS=YES,BASE=R12,PLIF=BLKPRTF               00000025
                                    <01>           BNE   NOTPLI                                                   00000026
                                    <01>           LM    R2,R4,0(R1)         GET PLI PARMLIST OF DDB              00000027
                                    <01>           L     R2,0(0,R2)          GET DATA ADDRS                       00000028
                                    <01>           L     R3,0(0,R3)                                               00000029
                                    <01>           L     R4,0(0,R4)                                               00000030
                                    <01>           B     COMM                                                     00000031
                                    <01>  NOTPLI   EQU   *                                                        00000032
                                    <01>           LM    R2,R4,0(R1)                                              00000033
                                    <01>  COMM     EQU   *                                                        00000034
                                    <01>           SLL   R4,8                GET RID OF HIGH ORDER BIT            00000035
                                    <01>           SRL   R4,8                   FROM LAST PARM                    00000036
                                    <01>           MVC   SLANTIND,0(R2)      GET SLANT IND                        00000037
                                    <01>           MVC   PCCWORK,0(R3)       GET TEXT                             00000038
                                    <01>           LR    R1,R4               GET BUFFER                           00000039
                                    <01>           MVC   PBLKWORK,PCCWORK    SAVE TEXT                            00000040
                                    <01>           OC    PCCWORK(8),=8X'C0'  SHIFT ALL TO 4TH QUADRANT            00000041
                                    <01>           TR    PCCWORK(8),BLOCKTR-X'C0'  TRANSLATE TO INDEX VALUE       00000042
                                    <01>           SLR   R4,R4               LINE 0 OF 12                         00000043
                                    <01>  BLKBLD   STH   R4,PCEFORM+8        SAVE LINE COUNTER                    00000044
                                    <01>           ST    R1,PLNDISPL         SAVE NEW LINE DISPLACEMENT           00000045
                                    <01>           MVI   0(R1),C' '          FILL LINE                            00000046
                                    <01>           MVC   1(131,R1),0(R1)      WITH BLANKS                         00000047
                                    <01>           LA    R7,7                SCAN FOR                             00000048
                                    <01>  BLKCENTR LA    R15,PBLKWORK(R7)      LAST                               00000049
                                    <01>           CLI   0(R15),C' '            NON-                              00000050
                                    <01>           BNE   SKIP510                 BLANK                            00000051
                                    <01>           BCT   R7,BLKCENTR              CHARACTER                       00000052
                                    <01>  SKIP510  LA    R7,1(,R7)           COMPUTE                              00000053
BLKPRT    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 14
                                    <01>           MH    R7,=H'7'             BEGINNING                           00000054
                                    <01>           SH    R7,=H'67'             PRINT POSITION                     00000055
                                    <01>           LCR   R7,R7                  TO CENTER                         00000056
                                    <01>           LA    R5,0(R7,R1)             BLOCK LETTERS                    00000057
                                    <01>           CLI   SLANTIND,C'N'       TEST FOR SLANTING OPTION             00000058
                                    <01>           BE    SKIP520             BR IF NO                             00000059
                                    <01>           LA    R5,6(,R5)           ELSE, SLANT                          00000060
                                    <01>           SRL   R4,1                 BLOCK                               00000061
                                    <01>           SLR   R5,R4                 LETTERS                            00000062
                                    <01>  SKIP520  SLR   R4,R4               SET FOR A LETTER INDEX OF 0          00000063
                                    <01>  BLKLUP   IC    R7,PBLKWORK(R4)     USE RELATIVE TEXT LETTER             00000064
                                    <01>           STC   R7,$POSTSAV          TO FORM BLOCK TEXT                  00000065
                                    <01>           LA    R7,PCCWORK(R4)      CURRENT LETTER INDEX                 00000066
                                    <01>           SLR   R15,R15             CLEAR REGISTER                       00000067
                                    <01>           ICM   R15,1,0(R7)         GET TRANSLATED LETTER INDEX          00000068
                                    <01>           BZ    BLKSTOR             BRANCH IF INDEX ZERO                 00000069
                                    <01>           BCTR  R15,0               DECREMENT BY ONE                     00000070
                                    <01>           MH    R15,=H'24'          CONVERT TO DISPLACEMENT              00000071
                                    <01>           AH    R15,PCEFORM+8       SELECT FOR LINE WITHIN LETTER        00000072
                                    <01>           LA    R15,BLOCKA(R15)     LETTER MASK ADDRESS                  00000073
                                    <01>           ICM   R15,12,0(R15)       LETTER MASK BITS                     00000074
                                    <01>  BLKSTOR  LA    R7,12               BLOCK WIDTH OF 12                    00000075
                                    <01>  BLKLOOP  ALR   R15,R15             SHIFT LEFT AND TEST HIGH BIT         00000076
                                    <01>           BC    12,SKIP530          BRANCH IF OFF                        00000077
                                    <01>           MVC   0(1,R5),$POSTSAV    OVERSTORE BLANK TO FORM BLOCK        00000078
                                    <01>  SKIP530  LA    R5,1(,R5)           INCREMENT COL NUMBER                 00000079
                                    <01>           BCT   R7,BLKLOOP          BRANCH TO FILL 12 COL'S              00000080
                                    <01>           LA    R5,2(,R5)           2 BLANKS BETWEEN BLOCKS              00000081
                                    <01>           LA    R4,1(,R4)           STEP TO NEXT LETTER INDEX            00000082
                                    <01>           CL    R4,=F'8'            HAVE WE DONE 8 BLOCKS                00000083
                                    <01>           BL    BLKLUP              BRANCH IF NO                         00000084
                                    <01>           L     R1,PLNDISPL         GET NEW                              00000085
                                    <01>           LA    R1,132(,R1)          LINE DISPLACEMENT                   00000086
                                    <01>           LH    R4,PCEFORM+8        GET LINE COUNTER                     00000087
                                    <01>           LA    R4,2(,R4)           STEP TO NEXT LINE                    00000088
                                    <01>           CH    R4,=H'24'           LAST LINE FINISHED                   00000089
                                    <01>           BL    BLKBLD              BRANCH IF NO                         00000090
                                    <01>           ST    R1,PLNDISPL         SAVE NEW LINE DISPLACEMENT           00000091
                                    <01>           ERETURN RC=0                                                   00000092
                                    <01>           TITLE 'MISCELLANEOUS TABLES'                                   00000093
                                    <01>  *********************************************************************** 00000094
                                    <01>  *                                                                     * 00000095
                                    <01>  *        BLOCK LETTER TABLE                                           * 00000096
                                    <01>  *                                                                     * 00000097
                                    <01>  *        BLOCKTR IS USED WITH A TR INSTRUCTION TO GET THE OFFSET OF   * 00000098
                                    <01>  *        THE BIT PATTERN FOR THE CHARACTER.                           * 00000099
                                    <01>  *                                                                     * 00000100
                                    <01>  *        EACH BLOCK? DEFINES THE BIT PATTERN FOR EACH CHARACTER.      * 00000101
                                    <01>  *        THE BLOCK IS 24 BYTES LONG.  EACH GROUP OF 2 BYTES DESCRIBE  * 00000102
                                    <01>  *        A LINE IN THE BLOCK LETTER.  BITS 1-12 ARE USED 13-16 ARE    * 00000103
                                    <01>  *        NOT USED.                                                    * 00000104
                                    <01>  *                                                                     * 00000105
                                    <01>  *********************************************************************** 00000106
                                    <01>           SPACE 1                                                        00000107
                                    <01>  BLOCKTR  DC    X'00010203040506070809000000000000'   +X'C0'             00000108
                                    <01>           DC    X'000A0B0C0D0E0F101112001300000000'   +X'D0'             00000109
                                    <01>           DC    X'00281415161718191A1B000000000000'   +X'E0'             00000110
BLKPRT    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 15
                                    <01>           DC    X'1C1D1E1F202122232425002627000000'   +X'F0'             00000111
                                    <01>           SPACE 2                                                        00000112
                                    <01>  BLOCKA   DC    X'7FE0FFF0C030C030C030FFF0FFF0C030C030C030C030C030'      00000113
                                    <01>  BLOCKB   DC    X'FFE0FFF0C030C030C060FFC0FFC0C060C030C030FFF0FFE0'      00000114
                                    <01>  BLOCKC   DC    X'7FE0FFF0C030C000C000C000C000C000C000C030FFF07FE0'      00000115
                                    <01>  BLOCKD   DC    X'FF80FFC0C060C030C030C030C030C030C030C060FFC0FF80'      00000116
                                    <01>  BLOCKE   DC    X'FFF0FFF0C000C000C000FF00FF00C000C000C000FFF0FFF0'      00000117
                                    <01>  BLOCKF   DC    X'FFF0FFF0C000C000C000FF00FF00C000C000C000C000C000'      00000118
                                    <01>  BLOCKG   DC    X'7FE0FFF0C030C000C000C000C1F0C1F0C030C030FFF07FE0'      00000119
                                    <01>  BLOCKH   DC    X'C030C030C030C030C030FFF0FFF0C030C030C030C030C030'      00000120
                                    <01>  BKOCKI   DC    X'7FE07FE0060006000600060006000600060006007FE07FE0'      00000121
                                    <01>  BLOCKJ   DC    X'3FF03FF0030003000300030003000300C300C300FF007E00'      00000122
                                    <01>  BLOCKK   DC    X'C030C060C0C0C180C300FE00FE00C300C180C0C0C060C030'      00000123
                                    <01>  BLOCKL   DC    X'C000C000C000C000C000C000C000C000C000C000FFF0FFF0'      00000124
                                    <01>  BLOCKM   DC    X'C030E070F0F0D9B0CF30C630C030C030C030C030C030C030'      00000125
                                    <01>  BLOCKN   DC    X'C030E030F030D830CC30C630C330C1B0C0F0C070C030C010'      00000126
                                    <01>  BLOCKO   DC    X'FFF0FFF0C030C030C030C030C030C030C030C030FFF0FFF0'      00000127
                                    <01>  BLOCKP   DC    X'FFE0FFF0C030C030C030FFF0FFE0C000C000C000C000C000'      00000128
                                    <01>  BLOCKQ   DC    X'7FE0FFF0C030C030C030C030C030C330C1B0C0F0FFE07FB0'      00000129
                                    <01>  BLOCKR   DC    X'FFE0FFF0C030C030C030FFF0FFE0C300C180C0C0C060C030'      00000130
                                    <01>  BLOCK$   DC    X'06007FE0FFF0C630E6007FC03FE00670C630FFF07FE00600'      00000131
                                    <01>  BLOCKS   DC    X'7FE0FFF0C030C000E0007FC03FE000700030C030FFF07FE0'      00000132
                                    <01>  BLOCKT   DC    X'FFF0FFF00600060006000600060006000600060006000600'      00000133
                                    <01>  BLOCKU   DC    X'C030C030C030C030C030C030C030C030C030C030FFF07FE0'      00000134
                                    <01>  BLOCKV   DC    X'C030C030C030C030C030C030C030606030C019800F000600'      00000135
                                    <01>  BLOCKW   DC    X'C030C030C030C030C030C030C630CF30D9B0F0F0E070C030'      00000136
                                    <01>  BLOCKX   DC    X'C030C030606030C019800F000F00198030C06060C030C030'      00000137
                                    <01>  BLOCKY   DC    X'C030C030606030C019800F00060006000600060006000600'      00000138
                                    <01>  BLOCKZ   DC    X'FFF0FFF0006000C001801FC01FC00C00180030007FF0FFF0'      00000139
                                    <01>  BLOCK0   DC    X'3FC07FE0C0F0C1B0C330C630CC30D830F030E0307FE03FC0'      00000140
                                    <01>  BLOCK1   DC    X'06000E001E0006000600060006000600060006007FE07FE0'      00000141
                                    <01>  BLOCK2   DC    X'7FE0FFF0C0300030003000600180060018006000FFF0FFF0'      00000142
                                    <01>  BLOCK3   DC    X'7FE0FFF0C0300030003001E001E000300030C030FFF07FE0'      00000143
                                    <01>  BLOCK4   DC    X'038007800D80198031807FF0FFF001800180018001800180'      00000144
                                    <01>  BLOCK5   DC    X'FFF0FFF0C000C000C000FF80FFC0006000300030FFF0FFE0'      00000145
                                    <01>  BLOCK6   DC    X'7FE0FFF0C030C000C000FFE0FFF0C030C030C030FFF07FE0'      00000146
                                    <01>  BLOCK7   DC    X'FFF0FFE0C0C0018003000600060006000600060006000600'      00000147
                                    <01>  BLOCK8   DC    X'7FE0FFF0C030C03060603FC03FC06060C030C030FFF07FE0'      00000148
                                    <01>  BLOCK9   DC    X'7FE0FFF0C030C030C030FFF0FFF000300030C030FFF07FE0'      00000149
                                    <01>  BLOCK#   DC    X'30C030C0FFF0FFF030C030C030C030C0FFF0FFF030C030C0'      00000150
                                    <01>  BLOCK@   DC    X'3FC07FE0C030003000301E303F306330C330C3307FE03FC0'      00000151
                                    <01>  *        DC    B'1234567812345678'                                      00000152
                                    <01>  BLOCKSL  EQU   *                                                        00000153
                                    <01>           DC    B'0000000000010000'                                      00000154
                                    <01>           DC    B'0000000000110000'                                      00000155
                                    <01>           DC    B'0000000001100000'                                      00000156
                                    <01>           DC    B'0000000011000000'                                      00000157
                                    <01>           DC    B'0000000110000000'                                      00000158
                                    <01>           DC    B'0000001100000000'                                      00000159
                                    <01>           DC    B'0000011000000000'                                      00000160
                                    <01>           DC    B'0000110000000000'                                      00000161
                                    <01>           DC    B'0001100000000000'                                      00000162
                                    <01>           DC    B'0011000000000000'                                      00000163
                                    <01>           DC    B'0110000000000000'                                      00000164
                                    <01>           DC    B'1100000000000000'                                      00000165
                                    <01>           EJECT                                                          00000166
                                    <01>  PLNDISPL DS    F                                                        00000167
BLKPRT    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 16
                                    <01>  PCCWORK  DS    CL8                                                      00000168
                                    <01>  PCEFORM  DS    3F                                                       00000169
                                    <01>  PBLKWORK DS    CL8                                                      00000170
                                    <01>  $POSTSAV DS    CL1                                                      00000171
                                    <01>  PBUF     DC    F'0'                                                     00000172
                                    <01>  SLANTIND DS    CL1                                                      00000173
                                    <01>           LTORG                                                          00000174
                                    <01>           END                                                            00000175

*** MEMBER BLKPRT   HAS BEEN ADDED            175 RECORDS WRITTEN
       NEW BLKPRT   ENTRY: TTR=000108 INDC=00

BLOCKASM  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 17
          <01>  ./  ADD NAME=BLOCKASM,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           TITLE 'PRINT SEPARATOR PAGE ROUTINE'                           00000001
                                    <01>  *********************************************************************** 00000002
                                    <01>  *                                                                     * 00000003
                                    <01>  *        SEPARATOR PAGE ROUTINE                                       * 00000004
                                    <01>  *        THIS ROUTINE PRINTS BLOCK LETTER SEPARATOR PAGES.  THE       * 00000005
                                    <01>  *        FORMATTING IS DONE BLKPRT.                                   * 00000006
                                    <01>  *                                                                     * 00000007
                                    <01>  *********************************************************************** 00000008
                                    <01>  *                                                                     * 00000009
                                    <01>  *       REGISTER USAGE                                                * 00000010
                                    <01>  *       R0,R1,R13,R14,R15   STANDARD MVS USAGE                        * 00000011
                                    <01>  *       R12                 BASE REGISTER FOR PROGRAM                 * 00000012
                                    <01>  *                                                                     * 00000013
                                    <01>  *                                                                     * 00000014
                                    <01>  *                                                                     * 00000015
                                    <01>  *                                                                     * 00000016
                                    <01>  *********************************************************************** 00000017
                                    <01>           SPACE 1                                                        00000018
                                    <01>  *                                                                       00000019
                                    <01>           MACRO                                                          00000020
                                    <01>  &NAME    FBLK  &TXT,&SLANT=YES                                          00000021
                                    <01>  &NAME    MVC   PCCTEXT,&TXT                                             00000022
                                    <01>           CNOP  0,4                                                      00000023
                                    <01>           BAL   R1,*+16                                                  00000024
                                    <01>           AIF   (T'&SLANT EQ 'O').SLPNO                                  00000025
                                    <01>           AIF   ('&SLANT' EQ 'NO').SLPNO                                 00000026
                                    <01>           AIF   ('&SLANT' EQ 'YES').SLPYES                               00000027
                                    <01>           MNOTE 12,'*** INVALID SLANT ***'                               00000028
                                    <01>           MEXIT                                                          00000029
                                    <01>  .SLPNO   ANOP                                                           00000030
                                    <01>           DC    A(NO)                                                    00000031
                                    <01>           AGO   .SLPDUN                                                  00000032
                                    <01>  .SLPYES  ANOP                                                           00000033
                                    <01>           DC    A(YES)                                                   00000034
                                    <01>  .SLPDUN  ANOP                                                           00000035
                                    <01>           DC    A(PCCTEXT)          GET ADDRESS OF TEXT                  00000036
                                    <01>           DC    AL1(128)                                                 00000037
                                    <01>           DC    AL3(PLN)            GET LINE DISPLACEMENT                00000038
                                    <01>           L     R15,=V(BLKPRT)      POINT TO BLOCK LETTER ROUTINE        00000039
                                    <01>           BALR  R14,R15                                                  00000040
                                    <01>           MEND                                                           00000041
                                    <01>           MACRO                                                          00000042
                                    <01>  &NAME    PRBLK                                                          00000043
                                    <01>  &NAME    LA    R2,PLN                                                   00000044
                                    <01>           LA    R3,12                                                    00000045
                                    <01>  PRLO&SYSNDX PUT   PRINTER,0(R2)                                         00000046
                                    <01>           LA    R2,132(,R2)                                              00000047
                                    <01>           BCT   R3,PRLO&SYSNDX                                           00000048
                                    <01>           PUT   PRINTER,BLANKLN                                          00000049
                                    <01>           MEND                                                           00000050
                                    <01>  *                                                                       00000051
                                    <01>           SPACE 1                                                        00000052
                                    <01>  BANNER   ESTART TYPE=START,DESC='SEPARATOR PAGE ROUTINE',              *00000053
BLOCKASM  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 18
                                    <01>                 VER='1.0.0',REGS=YES,BASE=R12                            00000054
                                    <01>  *                                                                       00000055
                                    <01>           OPEN  (PRINTER,(OUTPUT))                                       00000056
                                    <01>           FBLK  =C'$JOBNAME',SLANT=YES                                   00000057
                                    <01>           PRBLK                                                          00000058
                                    <01>           FBLK  =C'X X     ',SLANT=NO                                    00000059
                                    <01>           PRBLK                                                          00000060
                                    <01>           FBLK  =C'$JOBNAME',SLANT=NO                                    00000061
                                    <01>           PRBLK                                                          00000062
                                    <01>  *                                                                       00000063
                                    <01>           CLOSE (PRINTER)                                                00000064
                                    <01>           ERETURN RC=0                                                   00000065
                                    <01>  YES      DC    C'Y'                                                     00000066
                                    <01>  NO       DC    C'N'                                                     00000067
                                    <01>  PCCTEXT  DS    CL8                                                      00000068
                                    <01>  PLN      DS    12CL132                                                  00000069
                                    <01>  BLANKLN  DC    CL132' '                                                 00000070
                                    <01>  PRINTER  DCB   DDNAME=PRINTER,MACRF=(PM),                              *00000071
                                    <01>                 RECFM=F,LRECL=132,BLKSIZE=132,DSORG=PS                   00000072
                                    <01>           LTORG                                                          00000073
                                    <01>           END   BANNER                                                   00000074

*** MEMBER BLOCKASM HAS BEEN ADDED             74 RECORDS WRITTEN
       NEW BLOCKASM ENTRY: TTR=00010E INDC=00

BLOCKFOR  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 19
          <01>  ./  ADD NAME=BLOCKFOR,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  C23456789012                                                            00000001
                                    <01>  C                                                                       00000002
                                    <01>  C   FORTRAN BANNER DEMO                                                 00000003
                                    <01>  C                                                                       00000004
                                    <01>        DIMENSION BUFF(33,12),A(2),B(2),C(2)                              00000005
                                    <01>        DATA A,B,C/'$FOR','TRAN','CALL','ING ','11/0','4/08'/             00000006
                                    <01>        DATA Y,N/'Y','N'/                                                 00000007
                                    <01>  C                                                                       00000008
                                    <01>        CALL BLKPRT(Y,A,BUFF)                                             00000009
                                    <01>        WRITE(6,10) BUFF                                                  00000010
                                    <01>        WRITE(6,11)                                                       00000011
                                    <01>        CALL BLKPRT(N,B,BUFF)                                             00000012
                                    <01>        WRITE(6,10) BUFF                                                  00000013
                                    <01>        WRITE(6,11)                                                       00000014
                                    <01>        CALL BLKPRT(N,C,BUFF)                                             00000015
                                    <01>        WRITE(6,10) BUFF                                                  00000016
                                    <01>        WRITE(6,11)                                                       00000017
                                    <01>     10 FORMAT(33A4)                                                      00000018
                                    <01>     11 FORMAT(/)                                                         00000019
                                    <01>        STOP                                                              00000020
                                    <01>        END                                                               00000021

*** MEMBER BLOCKFOR HAS BEEN ADDED             21 RECORDS WRITTEN
       NEW BLOCKFOR ENTRY: TTR=000111 INDC=00

BLOCKPLI  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 20
          <01>  ./  ADD NAME=BLOCKPLI,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>   /*  PL/I BANNER DEMO PROGRAM  */                                       00000001
                                    <01>   BANNER:PROC OPTIONS(MAIN);                                             00000002
                                    <01>                                                                          00000003
                                    <01>        DECLARE 1 BUFF  UNALIGNED STATIC,                                 00000004
                                    <01>                      5 YLINE            CHAR(1584),                      00000005
                                    <01>                1 BLINES DEFINED BUFF UNALIGNED,                          00000006
                                    <01>                  5 XLINE(12)            CHAR(132),                       00000007
                                    <01>                1 YES   STATIC,                                           00000008
                                    <01>                  5 YES_5          CHAR(1) INITIAL('Y'),                  00000009
                                    <01>                1 NO    STATIC,                                           00000010
                                    <01>                  5 NO_5           CHAR(1) INITIAL('N'),                  00000011
                                    <01>                1 TEXT  STATIC,                                           00000012
                                    <01>                  5  TEXT_5        CHAR(8);                               00000013
                                    <01>                                                                          00000014
                                    <01>       OPEN FILE(SYSPRINT) LINESIZE(133);                                 00000015
                                    <01>                                                                          00000016
                                    <01>       TEXT_5='PL/1';                                                     00000017
                                    <01>       CALL CALL_BANNER;                                                  00000018
                                    <01>       DO I=1 TO 12;                                                      00000019
                                    <01>          PUT SKIP EDIT(XLINE(I)) (A);                                    00000020
                                    <01>       END;                                                               00000021
                                    <01>                                                                          00000022
                                    <01>       TEXT_5='CALLING';                                                  00000023
                                    <01>       CALL BLKPRTF(NO,TEXT,BUFF);                                        00000024
                                    <01>       DO I=1 TO 12;                                                      00000025
                                    <01>          PUT SKIP EDIT(XLINE(I)) (A);                                    00000026
                                    <01>       END;                                                               00000027
                                    <01>                                                                          00000028
                                    <01>   CALL_BANNER:PROC;                                                      00000029
                                    <01>       CALL BLKPRTF(YES,TEXT,BUFF);                                       00000030
                                    <01>   END CALL_BANNER;                                                       00000031
                                    <01>   END BANNER;                                                            00000032

*** MEMBER BLOCKPLI HAS BEEN ADDED             32 RECORDS WRITTEN
       NEW BLOCKPLI ENTRY: TTR=000202 INDC=00

ESTART    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 21
          <01>  ./  ADD NAME=ESTART,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           MACRO                                                          00000001
                                    <01>  &NAME    ESTART &TYPE=CSECT,&DESC=,&VER=,&BASE=,&REGS=NO,              *00000002
                                    <01>                 &PLIF=                                                   00000003
                                    <01>           AIF   (T'&TYPE EQ 'O').TYPERR                                  00000004
                                    <01>           AIF   (T'&VER EQ 'O').VERR                                     00000005
                                    <01>           AIF   (T'&DESC EQ 'O').DERR                                    00000006
                                    <01>           AIF   ('&TYPE' EQ 'CSECT').TYPEC                               00000007
                                    <01>           AIF   ('&TYPE' EQ 'START').TYPES                               00000008
                                    <01>  .TYPERR  MNOTE 12,'*** TYPE MUST BE CSECT OR START ***'                 00000009
                                    <01>           MEXIT                                                          00000010
                                    <01>  .VERR    MNOTE 12,'*** VER OMITTED ***'                                 00000011
                                    <01>           MEXIT                                                          00000012
                                    <01>  .DERR    MNOTE 12,'*** DESC OMITTED ***'                                00000013
                                    <01>           MEXIT                                                          00000014
                                    <01>  .TYPEC   ANOP                                                           00000015
                                    <01>  &NAME    CSECT                                                          00000016
                                    <01>           AGO   .OK                                                      00000017
                                    <01>  .TYPES   ANOP                                                           00000018
                                    <01>  &NAME    START                                                          00000019
                                    <01>  .OK      ANOP                                                           00000020
                                    <01>           AIF   (T'&REGS EQ 'O').REGOK                                   00000021
                                    <01>           AIF   ('&REGS' EQ 'YES').REGOK                                 00000022
                                    <01>           AIF   ('&REGS' EQ 'NO').REGOK                                  00000023
                                    <01>           MNOTE 12,'*** REGS INVALID ***'                                00000024
                                    <01>           MEXIT                                                          00000025
                                    <01>  .REGOK   ANOP                                                           00000026
                                    <01>  *                                                                       00000027
                                    <01>           AIF   (T'&PLIF EQ 'O').NOPL1                                   00000028
                                    <01>           MVI   18(15),C'N'            SET NO PLI ENTRY POINT            00000029
                                    <01>           B     12(15)                 SKIP HEADER STUFF                 00000030
                                    <01>           ENTRY &PLIF                                                    00000031
                                    <01>  &PLIF    MVI   10(15),C'Y'            SET PL1 ENTRY POINT               00000032
                                    <01>           BALR  15,0                                                     00000033
                                    <01>  ID1&SYSNDX B     ID4&SYSNDX.(15)        SKIP HEADER STUFF               00000034
                                    <01>  ID5&SYSNDX DS   C                                                       00000035
                                    <01>  IDP&SYSNDX EQU  ID5&SYSNDX-ID1&SYSNDX                                   00000036
                                    <01>           AGO   .NOPL12                                                  00000037
                                    <01>  .NOPL1   ANOP                                                           00000038
                                    <01>  ID1&SYSNDX B     ID4&SYSNDX.(15)       BRANCH AROUND IDENT CONSTANTS    00000039
                                    <01>  .NOPL12  ANOP                                                           00000040
                                    <01>           DC    AL1(ID3&SYSNDX-ID2&SYSNDX)                               00000041
                                    <01>  ID2&SYSNDX DC    CL8'&NAME'                                             00000042
                                    <01>           DC    C&VER                                                    00000043
                                    <01>           DC    C' &SYSDATE &SYSTIME - '                                 00000044
                                    <01>           DC    C&DESC                                                   00000045
                                    <01>           DS    0F                                                       00000046
                                    <01>  IDS&SYSNDX EQU   *-ID1&SYSNDX                                           00000047
                                    <01>           DS    18F                                                      00000048
                                    <01>  ID3&SYSNDX DS    0H                                                     00000049
                                    <01>           AIF   (T'&REGS EQ 'O').NOREG                                   00000050
                                    <01>           AIF   ('&REGS' EQ 'NO').NOREG                                  00000051
                                    <01>           EREGS                                                          00000052
                                    <01>  .NOREG   ANOP                                                           00000053
ESTART    IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 22
                                    <01>  ID4&SYSNDX EQU   *-ID1&SYSNDX                                           00000054
                                    <01>  *                                                                       00000055
                                    <01>           STM   14,12,12(13)                                             00000056
                                    <01>  *                                                                       00000057
                                    <01>           LR    5,13                COPY CALLER'S SAVEAREA ADDR          00000058
                                    <01>           LA    13,IDS&SYSNDX.(15)  ESTABLISH MY SAVEAREA                00000059
                                    <01>           ST    5,4(,13)            BACK CHAIN SAVE AREAS                00000060
                                    <01>           ST    13,8(,5)            FORWARD CHAIN SAVE AREAS             00000061
                                    <01>           AIF   (T'&BASE EQ 'O').NOBASE                                  00000062
                                    <01>           BALR  &BASE.,0            ESTABLISH BASE REG VALUE             00000063
                                    <01>           USING *,&BASE                                                  00000064
                                    <01>  .NOBASE  ANOP                                                           00000065
                                    <01>           AIF   (T'&PLIF EQ 'O').SKIPLI                                  00000066
                                    <01>           CLI   IDP&SYSNDX.(15),C'Y'     SET CC BASED ON PLI INDICATOR   00000067
                                    <01>  .SKIPLI  ANOP                                                           00000068
                                    <01>           MEND                                                           00000069

*** MEMBER ESTART   HAS BEEN ADDED             69 RECORDS WRITTEN
       NEW ESTART   ENTRY: TTR=000204 INDC=00

ERETURN   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 23
          <01>  ./  ADD NAME=ERETURN,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           MACRO                                                          00000001
                                    <01>  &NAME    ERETURN &RC=                                                   00000002
                                    <01>  .* RETURN TO SYSTEM WITH RETURN CODE                                    00000003
                                    <01>  &NAME    L     13,4(0,13)          RESET TO CALLERS SAVE AREA           00000004
                                    <01>           RETURN (14,12),RC=&RC                                          00000005
                                    <01>           MEND                                                           00000006

*** MEMBER ERETURN  HAS BEEN ADDED              6 RECORDS WRITTEN
       NEW ERETURN  ENTRY: TTR=000207 INDC=00

EREGS     IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 24
          <01>  ./  ADD NAME=EREGS,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           MACRO                                                          00000001
                                    <01>  &NAME    EREGS                                                          00000002
                                    <01>  .* SET UP REGISTER EQU                                                  00000003
                                    <01>           AIF   (T'&NAME EQ 'O').NONAME                                  00000004
                                    <01>  &NAME    EQU   *                                                        00000005
                                    <01>  .NONAME  ANOP                                                           00000006
                                    <01>  R0       EQU   0                                                        00000007
                                    <01>  R1       EQU   1                                                        00000008
                                    <01>  R2       EQU   2                                                        00000009
                                    <01>  R3       EQU   3                                                        00000010
                                    <01>  R4       EQU   4                                                        00000011
                                    <01>  R5       EQU   5                                                        00000012
                                    <01>  R6       EQU   6                                                        00000013
                                    <01>  R7       EQU   7                                                        00000014
                                    <01>  R8       EQU   8                                                        00000015
                                    <01>  R9       EQU   9                                                        00000016
                                    <01>  R10      EQU   10                                                       00000017
                                    <01>  R11      EQU   11                                                       00000018
                                    <01>  R12      EQU   12                                                       00000019
                                    <01>  R13      EQU   13                                                       00000020
                                    <01>  R14      EQU   14                                                       00000021
                                    <01>  R15      EQU   15                                                       00000022
                                    <01>           MEND                                                           00000023

*** MEMBER EREGS    HAS BEEN ADDED             23 RECORDS WRITTEN
       NEW EREGS    ENTRY: TTR=000209 INDC=00

DYNALDA   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 25
          <01>  ./  ADD NAME=DYNALDA,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           PRINT ON,GEN,NODATA                                            00000001
                                    <01>  *---------------------------------------------------------------------* 00000002
                                    <01>  *                                                                     * 00000003
                                    <01>  * THIS ROUTINE IS DESIGNED TO PROVIDE DYNAMIC PROGRAM LOADING         * 00000004
                                    <01>  * FOR PROGRAMS COMPILED WITH PL/I (F), WHICH ONLY SUPPORTS STATIC     * 00000005
                                    <01>  * CALLS.                                                              * 00000006
                                    <01>  *                                                                     * 00000007
                                    <01>  *---------------------------------------------------------------------* 00000008
                                    <01>  *                                                                     * 00000009
                                    <01>  * NOTE ABOUT PARMS AND PL/I(F)                                        * 00000010
                                    <01>  *                                                                     * 00000011
                                    <01>  * EACH ADDRESS IN THE PARM LIST POINTS TO A DATA DESCRIPTION BLOCK    * 00000012
                                    <01>  * (DDB).  THE FIRST WORD OF EACH DDB IS THE ADDRESS OF THE ACTUAL     * 00000013
                                    <01>  * DATA ITEM.  THIS MODULE ASSUMES THE CALLED MODULES EXPECTS THE      * 00000014
                                    <01>  * PARM LIST TO POINT TO THE ACTUAL DATA ITEMS.  THE PARM LIST MUST    * 00000015
                                    <01>  * BE REFORMATTED.  IF THE MODULE YOU WANT TO CALL EXPECT THE PARM     * 00000016
                                    <01>  * LIST TO BE PL/I FORMAT, USE DYNALDP RATHER THAN DYNADLA             * 00000017
                                    <01>  *                                                                     * 00000018
                                    <01>  *---------------------------------------------------------------------* 00000019
                                    <01>  *                                                                     * 00000020
                                    <01>  * EXAMPLE:   IN PL/I(F),                                              * 00000021
                                    <01>  *      CALL PROGRAMA(PARM_1,PARM_2);                                  * 00000022
                                    <01>  * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE PROGRAMA          * 00000023
                                    <01>  * ROUTINE TO EACH CALLING PL/I PROGRAM.                               * 00000024
                                    <01>  *                                                                     * 00000025
                                    <01>  * PROGRAMA SHOULD NOT BE A PL/I PROGRAM DUE TO COMPLEX RUNTIMES.      * 00000026
                                    <01>  *                                                                     * 00000027
                                    <01>  * IN PL/I(F), THERE IS NO NATIVE SUPPORT FOR DYNAMIC LOADS.  DYNALDA  * 00000028
                                    <01>  * IMPLEMENTS THIS SCHEME FOR PL/I(F) PROGRAMMERS.                     * 00000029
                                    <01>  *                                                                     * 00000030
                                    <01>  *     DECLARE                                                         * 00000031
                                    <01>  *      1  WS_PGM_BLK   UNALIGNED,                                     * 00000032
                                    <01>  *          5  WS_PGM_NAME        CHAR(8)       INIT((8)' '),          * 00000033
                                    <01>  *          5  WS_PGM_ADDR        FIXED BIN(31) INIT(0),               * 00000034
                                    <01>  *          5  WS_CALL_MODE       CHAR(1)       INIT('K'),             * 00000035
                                    <01>  *          5  FILLER             CHAR(3)       INIT((3)' ');          * 00000036
                                    <01>  *      ...                                                            * 00000037
                                    <01>  *      ...                                                            * 00000038
                                    <01>  *                                                                     * 00000039
                                    <01>  *      WS_PGM_NAME = 'PROGRAMA';                                      * 00000040
                                    <01>  *      CALL DYNALDA(WS_PGM_NAME,PARM_1,PARM_2);                       * 00000041
                                    <01>  *                                                                     * 00000042
                                    <01>  * THIS CALL RESULTS IN 'PROGRAMA' BEING LOADED AT RUN TIME INTO       * 00000043
                                    <01>  * MEMORY AND THEN CALLED.   EACH TIME A MODULE IS DYNAMICALLY CALLED, * 00000044
                                    <01>  * MVS CHECKS TO SEE IF THE LOAD MODULE IS RENTRANT OR RESUABLE.  IF   * 00000045
                                    <01>  * SO, THE COPY OF THE PROGRAM IN MEMORY IS REUSED.  IF NOT, A NEW     * 00000046
                                    <01>  * COPY IF THE PROGRAM IS LOADED FROM DISK AND CALLED.                 * 00000047
                                    <01>  *                                                                     * 00000048
                                    <01>  * EXAMPLE:                                                            * 00000049
                                    <01>  *     DECLARE                                                         * 00000050
                                    <01>  *      1  WS_PGM_BLK   UNALIGNED,                                     * 00000051
                                    <01>  *          5  WS_PGM_NAME        CHAR(8)       INIT((8)' '),          * 00000052
                                    <01>  *          5  WS_PGM_ADDR        FIXED BIN(31) INIT(0),               * 00000053
DYNALDA   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 26
                                    <01>  *          5  WS_CALL_MODE       CHAR(1)       INIT('K'),             * 00000054
                                    <01>  *          5  FILLER             CHAR(3)       INIT((3)' ');          * 00000055
                                    <01>  *      ...                                                            * 00000056
                                    <01>  *      ...                                                            * 00000057
                                    <01>  *                                                                     * 00000058
                                    <01>  *      WS_PGM_NAME = 'PROGRAMA';                                      * 00000059
                                    <01>  *      CALL DYNALDA(WS_PGM_NAME,PARM_1,PARM_2);                       * 00000060
                                    <01>  *                                                                     * 00000061
                                    <01>  *  NOTES:                                                             * 00000062
                                    <01>  *    - THE WS_PGM_ADDR FIELD MUST BE INITIALIZED TO ZERO              * 00000063
                                    <01>  *      BEFORE THE FIRST CALL.  DO NOT CHANGE THE VALUE OF             * 00000064
                                    <01>  *      THIS FIELD.  IF IT IS NOT ZERO, DYNALDA ASSUMES                * 00000065
                                    <01>  *      THIS IS THE ADDRESS IN MEMORY OF PROGRAMA.                     * 00000066
                                    <01>  *                                                                     * 00000067
                                    <01>  *    - THE WS_CALL_MODE  MUST BE 'K' OR 'R'.                          * 00000068
                                    <01>  *        K INDICATES KEEP THE WORKING STORAGE AND MODULE FROM         * 00000069
                                    <01>  *          LAST CALL.  IF WS_PGM_ADDR IS NOT ZERO, THIS ADDRESS       * 00000070
                                    <01>  *          IS CALLED.                                                 * 00000071
                                    <01>  *                                                                     * 00000072
                                    <01>  *        R INDICATE REFRESH MODULE FROM DISK, THUS CLEARING           * 00000073
                                    <01>  *          WORKING STORAGE BACK TO THE INITIAL VALUES.                * 00000074
                                    <01>  *                                                                     * 00000075
                                    <01>  *       YOU MAY DEFINE AND USE AS MANY WS_PGM_BLK AS NEEDED.          * 00000076
                                    <01>  *                                                                     * 00000077
                                    <01>  * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE DYNALDA           * 00000078
                                    <01>  * ROUTINE TO EACH CALLING PROGRAM. IT IS ALSO NECESSARY TO LINK       * 00000079
                                    <01>  * THE PROGRAMA AS AN EXECUTABLE MODULE.  THE BENEFIT OF THIS IS THE   * 00000080
                                    <01>  * MODULE IS NOT STATIC LINKED INTO ALL MODULES WHICH CALL IT.         * 00000081
                                    <01>  * IF THE ROUTINE IS CHANGED, AS LONG AS THE PARM FORMATS ARE          * 00000082
                                    <01>  * THE SAME, THE CALLING MODULES WILL NOT NEED TO BE CHANGED.          * 00000083
                                    <01>  *                                                                     * 00000084
                                    <01>  * FOR EXAMPLE, A PL/I (F)   APPLICATION CONSISTS OF 100 PROGRAMS,     * 00000085
                                    <01>  * EACH OF WHICH CALL AN IO MODULE CALLED IOMOD.  USING STATIC CALLS,  * 00000086
                                    <01>  * A COPY OF IOMOD IS LINK EDITED INTO EACH OF THE 100 LOAD MODULES.   * 00000087
                                    <01>  * MAKING A CHANGE TO IOMOD WOULD REQUIRE 100 LOAD MODULES TO BE       * 00000088
                                    <01>  * RELINKED.  USING DYNALOAD, ONLY IOMOD WOULD NEED TO BE RELINKED.    * 00000089
                                    <01>  * THE 100 CALLING MODULES WOULD ONLY NEED TO BE TESTED.               * 00000090
                                    <01>  *                                                                     * 00000091
                                    <01>  * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     * 00000092
                                    <01>  * AND INCORPORATED INTO DERIVED WORKS AS LONG AS ATTRIBUTION TO THE   * 00000093
                                    <01>  * ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    * 00000094
                                    <01>  * SOURCE.                                                             * 00000095
                                    <01>  *                                                                     * 00000096
                                    <01>  * REWRITTEN OCTOBER, 2009  BY ED LISS                                 * 00000097
                                    <01>  * HTTP://WWW.SUMMERMOON.COM/HERCULES/                                 * 00000098
                                    <01>  *                                                                     * 00000099
                                    <01>  *---------------------------------------------------------------------* 00000100
                                    <01>           EJECT                                                          00000101
                                    <01>  *                                                                       00000102
                                    <01>           LCLC  &SYSECT                                                  00000103
                                    <01>  &SYSECT  SETC  'DYNALDA'           ROUTINE IDENTIFICATION               00000104
                                    <01>  *                                                                       00000105
                                    <01>  &SYSECT  CSECT                                                          00000106
                                    <01>  *                                                                       00000107
                                    <01>  @IDENT01 B     @IDENT04(R15)       BRANCH AROUND IDENT CONSTANTS        00000108
                                    <01>           DC    AL1(@IDENT03-@IDENT02)                                   00000109
                                    <01>  @IDENT02 DC    C'&SYSECT V1'                                            00000110
DYNALDA   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 27
                                    <01>           DC    C'&SYSDATE &SYSTIME - '                                  00000111
                                    <01>           DC    C'DYNAMIC LOAD ROUTINE FOR MVT COBOL'                    00000112
                                    <01>  @IDENT03 DS    0H                                                       00000113
                                    <01>  @IDENT04 EQU   *-@IDENT01                                               00000114
                                    <01>  *                                                                       00000115
                                    <01>           SAVE  (14,12)                                                  00000116
                                    <01>  *                                                                       00000117
                                    <01>           BALR  R12,0               BASE REGISTERS ARE 12                00000118
                                    <01>           USING *,R12                                                    00000119
                                    <01>  *                                                                       00000120
                                    <01>           LR    R5,R13              COPY CALLER'S SAVEAREA ADDR          00000121
                                    <01>           LA    R13,SAVEAREA        ESTABLISH MY SAVEAREA                00000122
                                    <01>           ST    R5,4(,R13)          BACK CHAIN SAVE AREAS                00000123
                                    <01>           ST    R13,8(,R5)          FORWARD CHAIN SAVE AREAS             00000124
                                    <01>  *                                                                       00000125
                                    <01>  *---------------------------------------------------------------------* 00000126
                                    <01>  * AT LEAST ONE PARM MUST BE PASSED.  THIS IS THE NAME OF THE LOAD     * 00000127
                                    <01>  * MODULE TO DYNAMICALY CALL.  IF THIS IS MISSING, THE MODULE WILL     * 00000128
                                    <01>  * ABORT WITH A U0001 ABEND CODE.                                      * 00000129
                                    <01>  *---------------------------------------------------------------------* 00000130
                                    <01>  * EACH ADDRESS IN THE PARM LIST POINTS TO A DATA DESCRIPTION BLOCK    * 00000131
                                    <01>  * (DDB).  THE FIRST WORD OF EACH DDB IS THE ADDRESS OF THE ACTUAL     * 00000132
                                    <01>  * DATA ITEM.  THE PARM LIST POINTED TO BY REG 1 MUST BE REBUILT TO    * 00000133
                                    <01>  * BE ABLE TO PASS THE DATA TO WS_PGM_NAME.                            * 00000134
                                    <01>  *---------------------------------------------------------------------* 00000135
                                    <01>  * THIS MODULE WILL STRIP OFF THE PROGRAM NAME AND PASS THE REMAINING  * 00000136
                                    <01>  * PARMS, IF ANY, TO THE SUBROUTINE BEING CALLED.                      * 00000137
                                    <01>  * IF THERE ARE NO PARMS TO PASS, R1 IS SET TO ZEROS.                  * 00000138
                                    <01>  *---------------------------------------------------------------------* 00000139
                                    <01>           LTR   R1,R1                                                    00000140
                                    <01>           BNZ   PARMFND             BRANCH IF PARM LIST PRESENT          00000141
                                    <01>           ABEND 1,,,USER                                                 00000142
                                    <01>  PARMFND  DS    0H                                                       00000143
                                    <01>           LR    R2,R1               COPY PARMLIST ADDR TO R2             00000144
                                    <01>           LA    R3,128              GET MAX PARMS                        00000145
                                    <01>           LA    R4,NEWPARM          GET ADDRESS OF NEW PARM              00000146
                                    <01>  COPYPARM EQU   *                                                        00000147
                                    <01>           L     R5,0(0,R2)          GET ADDR OF DDB                      00000148
                                    <01>           L     R5,0(0,R5)          GET ADDR OF DATA                     00000149
                                    <01>           ST    R5,0(0,R4)          ADD TO NEWPARM                       00000150
                                    <01>           NI    0(R4),X'7F'         FORCE HIGH ORDER BIT OFF             00000151
                                    <01>           TM    0(R2),X'80'         END OF PARM LIST?                    00000152
                                    <01>           BO    PARMDONE            YES, BRANCH                          00000153
                                    <01>           LA    R2,4(0,R2)                                               00000154
                                    <01>           LA    R4,4(0,R4)                                               00000155
                                    <01>           BCT   R3,COPYPARM                                              00000156
                                    <01>           ABEND 3,,,USER            ABORT IF TOO MANY PARMS              00000157
                                    <01>  PARMDONE EQU   *                                                        00000158
                                    <01>           OI    0(R4),X'80'         FLAG END OF LIST                     00000159
                                    <01>  ***                                                                     00000160
                                    <01>           LA    R2,NEWPARM          GET ADDRESS OF NEWPARM INTO R2       00000161
                                    <01>           L     R3,0(,R2)           GET ADDR OF PROGRAM NAME             00000162
                                    <01>           MVC   PGMBLK,0(R3)        GET PGMBLK - NAME, ADDR, FUNC        00000163
                                    <01>           TM    0(R2),X'80'         CHECK FOR LAST PARM                  00000164
                                    <01>           BZ    OPTPARMS            MORE PARMS FOUND                     00000165
                                    <01>           SR    R4,R4               SET PARM ADDR TO ZERO                00000166
                                    <01>           B     DYNACALL                                                 00000167
DYNALDA   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 28
                                    <01>  OPTPARMS DS    0H                                                       00000168
                                    <01>           LA    R4,4(,R2)           ADVANCE TO NEXT PARM                 00000169
                                    <01>  DYNACALL DS    0H                                                       00000170
                                    <01>           L     R0,PGMADDR          GET ADDR IN MEMORY                   00000171
                                    <01>           CLC   PGMADDR,=4X'00'     IS IS ZEROS                          00000172
                                    <01>           BE    DOLOAD                                                   00000173
                                    <01>           CLI   PGMFUNC,C'K'        KEEP CALL?                           00000174
                                    <01>           BE    SKIPLOAD                                                 00000175
                                    <01>           CLI   PGMFUNC,C'R'                                             00000176
                                    <01>           BE    DOLOAD                                                   00000177
                                    <01>           ABEND 2,,,USER            ABORT IF NO CORRECT PARM             00000178
                                    <01>  *                                                                       00000179
                                    <01>  DOLOAD   DS    0H                                                       00000180
                                    <01>           LOAD  EPLOC=PGM                                                00000181
                                    <01>           ST    R0,PGMADDR                                               00000182
                                    <01>  SKIPLOAD DS    0H                                                       00000183
                                    <01>           MVC   0(L'PGMBLK,R3),PGMBLK PUT CTL BLK BACK IN CALLERS WS     00000184
                                    <01>           LR    R1,R4               PUT PARMLIST IN R1                   00000185
                                    <01>           LR    R15,R0              COPY MODULE ADDR TO R15              00000186
                                    <01>           BALR  R14,R15             CALL LOADED PGM                      00000187
                                    <01>  GOBACK   DS    0H                                                       00000188
                                    <01>  *---------------------------------------------------------------------* 00000189
                                    <01>  * RETURN TO CALLING PROGRAM WITH ZERO RETURN CODE IN R15              * 00000190
                                    <01>  *---------------------------------------------------------------------* 00000191
                                    <01>           L     R13,4(,R13)    RESET TO CALLERS SAVE AREA                00000192
                                    <01>           RETURN (14,12),RC=0                                            00000193
                                    <01>  *                                                                       00000194
                                    <01>           DS    0F                                                       00000195
                                    <01>  PGMBLK   DS    0CL16                                                    00000196
                                    <01>  PGM      DC    CL8' '                                                   00000197
                                    <01>  PGMADDR  DC    F'0'                                                     00000198
                                    <01>  PGMFUNC  DC    C' '                                                     00000199
                                    <01>           DS    CL3                                                      00000200
                                    <01>  NEWPARM  DC    128F'0'                                                  00000201
                                    <01>  *                                                                       00000202
                                    <01>  *---------------------------------------------------------------------* 00000203
                                    <01>  * MY REGISTER SAVE AREA                                               * 00000204
                                    <01>  *---------------------------------------------------------------------* 00000205
                                    <01>  SAVEAREA DS    18F                                                      00000206
                                    <01>  *                                                                       00000207
                                    <01>  R0       EQU   0                                                        00000208
                                    <01>  R1       EQU   1                                                        00000209
                                    <01>  R2       EQU   2                                                        00000210
                                    <01>  R3       EQU   3                                                        00000211
                                    <01>  R4       EQU   4                                                        00000212
                                    <01>  R5       EQU   5                                                        00000213
                                    <01>  R6       EQU   6                                                        00000214
                                    <01>  R7       EQU   7                                                        00000215
                                    <01>  R8       EQU   8                                                        00000216
                                    <01>  R9       EQU   9                                                        00000217
                                    <01>  R10      EQU   10                                                       00000218
                                    <01>  R11      EQU   11                                                       00000219
                                    <01>  R12      EQU   12                                                       00000220
                                    <01>  R13      EQU   13                                                       00000221
                                    <01>  R14      EQU   14                                                       00000222
                                    <01>  R15      EQU   15                                                       00000223
                                    <01>  *                                                                       00000224
DYNALDA   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 29
                                    <01>           END                                                            00000225

*** MEMBER DYNALDA  HAS BEEN ADDED            225 RECORDS WRITTEN
       NEW DYNALDA  ENTRY: TTR=00020B INDC=00

DYNALDP   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 30
          <01>  ./  ADD NAME=DYNALDP,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>           PRINT ON,GEN,NODATA                                            00000001
                                    <01>  *---------------------------------------------------------------------* 00000002
                                    <01>  *                                                                     * 00000003
                                    <01>  * THIS ROUTINE IS DESIGNED TO PROVIDE DYNAMIC PROGRAM LOADING         * 00000004
                                    <01>  * FOR PROGRAMS COMPILED WITH PL/I (F), WHICH ONLY SUPPORTS STATIC     * 00000005
                                    <01>  * CALLS.                                                              * 00000006
                                    <01>  *                                                                     * 00000007
                                    <01>  *---------------------------------------------------------------------* 00000008
                                    <01>  *                                                                     * 00000009
                                    <01>  * NOTE ABOUT PARMS AND PL/I(F)                                        * 00000010
                                    <01>  *                                                                     * 00000011
                                    <01>  * EACH ADDRESS IN THE PARM LIST POINTS TO A DATA DESCRIPTION BLOCK    * 00000012
                                    <01>  * (DDB).  THE FIRST WORD OF EACH DDB IS THE ADDRESS OF THE ACTUAL     * 00000013
                                    <01>  * DATA ITEM.  THIS MODULE ASSUMES THE CALLED MODULES EXPECTS THE      * 00000014
                                    <01>  * PARM LIST TO POINT TO THE DATA DESCRIPTIOR BLOCKS.  IN THIS CASE    * 00000015
                                    <01>  * THE PARM LIST CAN BE SIMPLY PASSED WITHOUT REFORMATING.             * 00000016
                                    <01>  *                                                                     * 00000017
                                    <01>  *---------------------------------------------------------------------* 00000018
                                    <01>  *                                                                     * 00000019
                                    <01>  * EXAMPLE:   IN PL/I(F),                                              * 00000020
                                    <01>  *      CALL PROGRAMA(PARM_1,PARM_2);                                  * 00000021
                                    <01>  * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE PROGRAMA          * 00000022
                                    <01>  * ROUTINE TO EACH CALLING PL/I PROGRAM.                               * 00000023
                                    <01>  *                                                                     * 00000024
                                    <01>  * PROGRAMA SHOULD NOT BE A PL/I PROGRAM DUE TO COMPLEX RUNTIMES.      * 00000025
                                    <01>  *                                                                     * 00000026
                                    <01>  * IN PL/I(F), THERE IS NO NATIVE SUPPORT FOR DYNAMIC LOADS.  DYNALDP  * 00000027
                                    <01>  * IMPLEMENTS THIS SCHEME FOR PL/I(F) PROGRAMMERS.                     * 00000028
                                    <01>  *                                                                     * 00000029
                                    <01>  *     DECLARE                                                         * 00000030
                                    <01>  *      1  WS_PGM_BLK   UNALIGNED,                                     * 00000031
                                    <01>  *          5  WS_PGM_NAME        CHAR(8)       INIT((8)' '),          * 00000032
                                    <01>  *          5  WS_PGM_ADDR        FIXED BIN(31) INIT(0),               * 00000033
                                    <01>  *          5  WS_CALL_MODE       CHAR(1)       INIT('K'),             * 00000034
                                    <01>  *          5  FILLER             CHAR(3)       INIT((3)' ');          * 00000035
                                    <01>  *      ...                                                            * 00000036
                                    <01>  *      ...                                                            * 00000037
                                    <01>  *                                                                     * 00000038
                                    <01>  *      WS_PGM_NAME = 'PROGRAMA';                                      * 00000039
                                    <01>  *      CALL DYNALDP(WS_PGM_NAME,PARM_1,PARM_2);                       * 00000040
                                    <01>  *                                                                     * 00000041
                                    <01>  * THIS CALL RESULTS IN 'PROGRAMA' BEING LOADED AT RUN TIME INTO       * 00000042
                                    <01>  * MEMORY AND THEN CALLED.   EACH TIME A MODULE IS DYNAMICALLY CALLED, * 00000043
                                    <01>  * MVS CHECKS TO SEE IF THE LOAD MODULE IS RENTRANT OR RESUABLE.  IF   * 00000044
                                    <01>  * SO, THE COPY OF THE PROGRAM IN MEMORY IS REUSED.  IF NOT, A NEW     * 00000045
                                    <01>  * COPY IF THE PROGRAM IS LOADED FROM DISK AND CALLED.                 * 00000046
                                    <01>  *                                                                     * 00000047
                                    <01>  * EXAMPLE:                                                            * 00000048
                                    <01>  *     DECLARE                                                         * 00000049
                                    <01>  *      1  WS_PGM_BLK   UNALIGNED,                                     * 00000050
                                    <01>  *          5  WS_PGM_NAME        CHAR(8)       INIT((8)' '),          * 00000051
                                    <01>  *          5  WS_PGM_ADDR        FIXED BIN(31) INIT(0),               * 00000052
                                    <01>  *          5  WS_CALL_MODE       CHAR(1)       INIT('K'),             * 00000053
DYNALDP   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 31
                                    <01>  *          5  FILLER             CHAR(3)       INIT((3)' ');          * 00000054
                                    <01>  *      ...                                                            * 00000055
                                    <01>  *      ...                                                            * 00000056
                                    <01>  *                                                                     * 00000057
                                    <01>  *      WS_PGM_NAME = 'PROGRAMA';                                      * 00000058
                                    <01>  *      CALL DYNALDP(WS_PGM_NAME,PARM_1,PARM_2);                       * 00000059
                                    <01>  *                                                                     * 00000060
                                    <01>  *  NOTES:                                                             * 00000061
                                    <01>  *    - THE WS_PGM_ADDR FIELD MUST BE INITIALIZED TO ZERO              * 00000062
                                    <01>  *      BEFORE THE FIRST CALL.  DO NOT CHANGE THE VALUE OF             * 00000063
                                    <01>  *      THIS FIELD.  IF IT IS NOT ZERO, DYNALDP ASSUMES                * 00000064
                                    <01>  *      THIS IS THE ADDRESS IN MEMORY OF PROGRAMA.                     * 00000065
                                    <01>  *                                                                     * 00000066
                                    <01>  *    - THE WS_CALL_MODE  MUST BE 'K' OR 'R'.                          * 00000067
                                    <01>  *        K INDICATES KEEP THE WORKING STORAGE AND MODULE FROM         * 00000068
                                    <01>  *          LAST CALL.  IF WS_PGM_ADDR IS NOT ZERO, THIS ADDRESS       * 00000069
                                    <01>  *          IS CALLED.                                                 * 00000070
                                    <01>  *                                                                     * 00000071
                                    <01>  *        R INDICATE REFRESH MODULE FROM DISK, THUS CLEARING           * 00000072
                                    <01>  *          WORKING STORAGE BACK TO THE INITIAL VALUES.                * 00000073
                                    <01>  *                                                                     * 00000074
                                    <01>  *       YOU MAY DEFINE AND USE AS MANY WS_PGM_BLK AS NEEDED.          * 00000075
                                    <01>  *                                                                     * 00000076
                                    <01>  * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE DYNALDP           * 00000077
                                    <01>  * ROUTINE TO EACH CALLING PROGRAM. IT IS ALSO NECESSARY TO LINK       * 00000078
                                    <01>  * THE PROGRAMA AS AN EXECUTABLE MODULE.  THE BENEFIT OF THIS IS THE   * 00000079
                                    <01>  * MODULE IS NOT STATIC LINKED INTO ALL MODULES WHICH CALL IT.         * 00000080
                                    <01>  * IF THE ROUTINE IS CHANGED, AS LONG AS THE PARM FORMATS ARE          * 00000081
                                    <01>  * THE SAME, THE CALLING MODULES WILL NOT NEED TO BE CHANGED.          * 00000082
                                    <01>  *                                                                     * 00000083
                                    <01>  * FOR EXAMPLE, A PL/I (F)   APPLICATION CONSISTS OF 100 PROGRAMS,     * 00000084
                                    <01>  * EACH OF WHICH CALL AN IO MODULE CALLED IOMOD.  USING STATIC CALLS,  * 00000085
                                    <01>  * A COPY OF IOMOD IS LINK EDITED INTO EACH OF THE 100 LOAD MODULES.   * 00000086
                                    <01>  * MAKING A CHANGE TO IOMOD WOULD REQUIRE 100 LOAD MODULES TO BE       * 00000087
                                    <01>  * RELINKED.  USING DYNALOAD, ONLY IOMOD WOULD NEED TO BE RELINKED.    * 00000088
                                    <01>  * THE 100 CALLING MODULES WOULD ONLY NEED TO BE TESTED.               * 00000089
                                    <01>  *                                                                     * 00000090
                                    <01>  * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     * 00000091
                                    <01>  * AND INCORPORATED INTO DERIVED WORKS AS LONG AS ATTRIBUTION TO THE   * 00000092
                                    <01>  * ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    * 00000093
                                    <01>  * SOURCE.                                                             * 00000094
                                    <01>  *                                                                     * 00000095
                                    <01>  * REWRITTEN OCTOBER, 2009  BY ED LISS                                 * 00000096
                                    <01>  * HTTP://WWW.SUMMERMOON.COM/HERCULES/                                 * 00000097
                                    <01>  *                                                                     * 00000098
                                    <01>  *---------------------------------------------------------------------* 00000099
                                    <01>           EJECT                                                          00000100
                                    <01>  *                                                                       00000101
                                    <01>           LCLC  &SYSECT                                                  00000102
                                    <01>  &SYSECT  SETC  'DYNALDP'           ROUTINE IDENTIFICATION               00000103
                                    <01>  *                                                                       00000104
                                    <01>  &SYSECT  CSECT                                                          00000105
                                    <01>  *                                                                       00000106
                                    <01>  @IDENT01 B     @IDENT04(R15)       BRANCH AROUND IDENT CONSTANTS        00000107
                                    <01>           DC    AL1(@IDENT03-@IDENT02)                                   00000108
                                    <01>  @IDENT02 DC    C'&SYSECT V1'                                            00000109
                                    <01>           DC    C'&SYSDATE &SYSTIME - '                                  00000110
DYNALDP   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 32
                                    <01>           DC    C'DYNAMIC LOAD ROUTINE FOR MVT COBOL'                    00000111
                                    <01>  @IDENT03 DS    0H                                                       00000112
                                    <01>  @IDENT04 EQU   *-@IDENT01                                               00000113
                                    <01>  *                                                                       00000114
                                    <01>           SAVE  (14,12)                                                  00000115
                                    <01>  *                                                                       00000116
                                    <01>           BALR  R12,0               BASE REGISTERS ARE 12                00000117
                                    <01>           USING *,R12                                                    00000118
                                    <01>  *                                                                       00000119
                                    <01>           LR    R5,R13              COPY CALLER'S SAVEAREA ADDR          00000120
                                    <01>           LA    R13,SAVEAREA        ESTABLISH MY SAVEAREA                00000121
                                    <01>           ST    R5,4(,R13)          BACK CHAIN SAVE AREAS                00000122
                                    <01>           ST    R13,8(,R5)          FORWARD CHAIN SAVE AREAS             00000123
                                    <01>  *                                                                       00000124
                                    <01>  *---------------------------------------------------------------------* 00000125
                                    <01>  * AT LEAST ONE PARM MUST BE PASSED.  THIS IS THE NAME OF THE LOAD     * 00000126
                                    <01>  * MODULE TO DYNAMICALY CALL.  IF THIS IS MISSING, THE MODULE WILL     * 00000127
                                    <01>  * ABORT WITH A U0001 ABEND CODE.                                      * 00000128
                                    <01>  *---------------------------------------------------------------------* 00000129
                                    <01>  * EACH ADDRESS IN THE PARM LIST POINTS TO A DATA DESCRIPTION BLOCK    * 00000130
                                    <01>  * (DDB).  THE FIRST WORD OF EACH DDB IS THE ADDRESS OF THE ACTUAL     * 00000131
                                    <01>  * DATA ITEM.  SINCE THE CALLED MODULE (WS_PGM_NAME) IS EXPECTING      * 00000132
                                    <01>  * THIS, THE PARM LIST DOES NOT TO BE REFORMATED LIKE IN DYNALDA.      * 00000133
                                    <01>  *---------------------------------------------------------------------* 00000134
                                    <01>  * THIS MODULE WILL STRIP OFF THE PROGRAM NAME AND PASS THE REMAINING  * 00000135
                                    <01>  * PARMS, IF ANY, TO THE SUBROUTINE BEING CALLED.                      * 00000136
                                    <01>  * IF THERE ARE NO PARMS TO PASS, R1 IS SET TO ZEROS.                  * 00000137
                                    <01>  *---------------------------------------------------------------------* 00000138
                                    <01>           LTR   R1,R1                                                    00000139
                                    <01>           BNZ   PARMFND             BRANCH IF PARM LIST PRESENT          00000140
                                    <01>           ABEND 1,,,USER                                                 00000141
                                    <01>  PARMFND  DS    0H                                                       00000142
                                    <01>           L     R3,0(0,R1)          GET ADDR OF PGMBLK DDB               00000143
                                    <01>           L     R3,0(0,R3)          GET ADDR OF PGMBLK                   00000144
                                    <01>           MVC   PGMBLK,0(R3)        GET PGMBLK - NAME, ADDR, FUNC        00000145
                                    <01>           TM    0(R1),X'80'         CHECK FOR LAST PARM                  00000146
                                    <01>           BZ    OPTPARMS            MORE PARMS FOUND                     00000147
                                    <01>           SR    R4,R4               SET PARM ADDR TO ZERO                00000148
                                    <01>           B     DYNACALL                                                 00000149
                                    <01>  OPTPARMS DS    0H                                                       00000150
                                    <01>           LA    R4,4(,R1)           ADVANCE TO NEXT PARM                 00000151
                                    <01>  DYNACALL DS    0H                                                       00000152
                                    <01>           L     R0,PGMADDR          GET ADDR IN MEMORY                   00000153
                                    <01>           CLC   PGMADDR,=4X'00'     IS IS ZEROS                          00000154
                                    <01>           BE    DOLOAD                                                   00000155
                                    <01>           CLI   PGMFUNC,C'K'        KEEP CALL?                           00000156
                                    <01>           BE    SKIPLOAD                                                 00000157
                                    <01>           CLI   PGMFUNC,C'R'                                             00000158
                                    <01>           BE    DOLOAD                                                   00000159
                                    <01>           ABEND 2,,,USER            ABORT IF NO CORRECT PARM             00000160
                                    <01>  *                                                                       00000161
                                    <01>  DOLOAD   DS    0H                                                       00000162
                                    <01>           LOAD  EPLOC=PGM                                                00000163
                                    <01>           ST    R0,PGMADDR                                               00000164
                                    <01>  SKIPLOAD DS    0H                                                       00000165
                                    <01>           MVC   0(L'PGMBLK,R3),PGMBLK PUT CTL BLK BACK IN CALLERS WS     00000166
                                    <01>           LR    R1,R4               PUT PARMLIST IN R1                   00000167
DYNALDP   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 33
                                    <01>           LR    R15,R0              COPY MODULE ADDR TO R15              00000168
                                    <01>           BALR  R14,R15             CALL LOADED PGM                      00000169
                                    <01>  GOBACK   DS    0H                                                       00000170
                                    <01>  *---------------------------------------------------------------------* 00000171
                                    <01>  * RETURN TO CALLING PROGRAM WITH ZERO RETURN CODE IN R15              * 00000172
                                    <01>  *---------------------------------------------------------------------* 00000173
                                    <01>           L     R13,4(,R13)    RESET TO CALLERS SAVE AREA                00000174
                                    <01>           RETURN (14,12),RC=0                                            00000175
                                    <01>  *                                                                       00000176
                                    <01>           DS    0F                                                       00000177
                                    <01>  PGMBLK   DS    0CL16                                                    00000178
                                    <01>  PGM      DC    CL8' '                                                   00000179
                                    <01>  PGMADDR  DC    F'0'                                                     00000180
                                    <01>  PGMFUNC  DC    C' '                                                     00000181
                                    <01>           DS    CL3                                                      00000182
                                    <01>  *                                                                       00000183
                                    <01>  *---------------------------------------------------------------------* 00000184
                                    <01>  * MY REGISTER SAVE AREA                                               * 00000185
                                    <01>  *---------------------------------------------------------------------* 00000186
                                    <01>  SAVEAREA DS    18F                                                      00000187
                                    <01>  *                                                                       00000188
                                    <01>  R0       EQU   0                                                        00000189
                                    <01>  R1       EQU   1                                                        00000190
                                    <01>  R2       EQU   2                                                        00000191
                                    <01>  R3       EQU   3                                                        00000192
                                    <01>  R4       EQU   4                                                        00000193
                                    <01>  R5       EQU   5                                                        00000194
                                    <01>  R6       EQU   6                                                        00000195
                                    <01>  R7       EQU   7                                                        00000196
                                    <01>  R8       EQU   8                                                        00000197
                                    <01>  R9       EQU   9                                                        00000198
                                    <01>  R10      EQU   10                                                       00000199
                                    <01>  R11      EQU   11                                                       00000200
                                    <01>  R12      EQU   12                                                       00000201
                                    <01>  R13      EQU   13                                                       00000202
                                    <01>  R14      EQU   14                                                       00000203
                                    <01>  R15      EQU   15                                                       00000204
                                    <01>  *                                                                       00000205
                                    <01>           END                                                            00000206

*** MEMBER DYNALDP  HAS BEEN ADDED            206 RECORDS WRITTEN
       NEW DYNALDP  ENTRY: TTR=000212 INDC=00

$$INDEX   IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 34
          <01>  ./  ADD NAME=$$INDEX,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>  1INDEX OF SOURCE PDS                                                    00000001
                                    <01>   MEMBER     APPLICATION  VERSION   COMMENTS                             00000002
                                    <01>   --------   --------     --------  -----------------------------------  00000003
                                    <01>   EREGS      MACRO        1.0.0     DEFINE SYMBOLIC REGISTERS            00000004
                                    <01>   ERETURN    MACRO        1.0.0     RETURN CONTROL MACRO                 00000005
                                    <01>   ESTART     MACRO        1.0.0     ENTRY MACRO                          00000006
                                    <01>                                                                          00000007
                                    <01>   BLKPRT     BLKPRT       1.0.0     SEPERATOR PAGE/BLOCK LETTERS PRINT   00000008
                                    <01>   BLOCKASM   BLKPRT       1.0.0     ASM TEST PROGRAM                     00000009
                                    <01>   BLOCKCOB   BLKPRT       1.0.0     COBOL TEST PROGRAM                   00000010
                                    <01>   BLOCKFOR   BLKPRT       1.0.0     FORTRAN TEST PROGRAM                 00000011
                                    <01>   BLOCKPLI   BLKPRT       1.0.0     PL/I TEST PROGRAM                    00000012
                                    <01>              DYNALOAD     1.0.0     NO CHANGES MADE SINCE THE ORIGINAL   00000013
                                    <01>              DYNALOAD     1.0.0     DISTRIBUTION - JUST HOW DISTRIB.     00000014
                                    <01>   DYNALOAD   DYNALOAD     1.0.0     ORIGINAL ASM VERSION OF DYNALOAD     00000015
                                    <01>   DYNALDA    DYNALOAD     1.0.0     PL/I(F)->? VERSION OF DYNALOAD       00000016
                                    <01>   DYNALDP    DYNALOAD     1.0.0     PL/I(F)->PL/I(F) VERSION OF DYNALOAD 00000017
                                    <01>   TESTDYNA   DYNALOAD     1.0.0     COBOL TEST CALLING MODULE            00000018
                                    <01>   TESTDYN1   DYNALOAD     1.0.0     COBOL TEST CALLED MODULE             00000019
                                    <01>   MAKESTMT   MAKESTME     1.0.0     MAKE CONTROL STATEMENTS FROM PARM    00000020
                                    <01>   MYGENER    MYGENER      1.0.0     MYGENER UTILITY PROGRAM              00000021

*** MEMBER $$INDEX  HAS BEEN ADDED             21 RECORDS WRITTEN
       NEW $$INDEX  ENTRY: TTR=000305 INDC=00

BLOCKCOB  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 35
          <01>  ./  ADD NAME=BLOCKCOB,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>         ID DIVISION.                                                     00000001
                                    <01>         PROGRAM-ID. BANNER.                                              00000002
                                    <01>         ENVIRONMENT DIVISION.                                            00000003
                                    <01>         INPUT-OUTPUT SECTION.                                            00000004
                                    <01>         FILE-CONTROL.                                                    00000005
                                    <01>             SELECT THE-PRINTER   ASSIGN TO   UT-S-PRINTER.               00000006
                                    <01>         DATA DIVISION.                                                   00000007
                                    <01>         FILE SECTION.                                                    00000008
                                    <01>         FD  THE-PRINTER                                                  00000009
                                    <01>             RECORDING MODE IS F                                          00000010
                                    <01>             LABEL RECORDS STANDARD                                       00000011
                                    <01>             BLOCK CONTAINS 0 CHARACTERS.                                 00000012
                                    <01>         01  THE-LINE           PIC X(132).                               00000013
                                    <01>         WORKING-STORAGE SECTION.                                         00000014
                                    <01>         77  WS-SLANT           PIC X.                                    00000015
                                    <01>         77  WS-TEXT            PIC X(8).                                 00000016
                                    <01>         77  WS-CTR             PIC S9(4) COMP SYNC.                      00000017
                                    <01>         01  WS-LINES.                                                    00000018
                                    <01>             05  WS-LINE  OCCURS 12 TIMES                                 00000019
                                    <01>                                PIC X(132).                               00000020
                                    <01>         PROCEDURE DIVISION.                                              00000021
                                    <01>         START-HERE.                                                      00000022
                                    <01>             OPEN OUTPUT THE-PRINTER.                                     00000023
                                    <01>             MOVE 'Y'         TO  WS-SLANT.                               00000024
                                    <01>             MOVE 'COBOL  '  TO  WS-TEXT.                                 00000025
                                    <01>             CALL 'BLKPRT' USING WS-SLANT                                 00000026
                                    <01>                                 WS-TEXT                                  00000027
                                    <01>                                 WS-LINES.                                00000028
                                    <01>             PERFORM PRINT-IT.                                            00000029
                                    <01>                                                                          00000030
                                    <01>             MOVE 'N'         TO  WS-SLANT.                               00000031
                                    <01>             MOVE 'CALLING '  TO  WS-TEXT.                                00000032
                                    <01>             CALL 'BLKPRT' USING WS-SLANT                                 00000033
                                    <01>                                 WS-TEXT                                  00000034
                                    <01>                                 WS-LINES.                                00000035
                                    <01>             PERFORM PRINT-IT.                                            00000036
                                    <01>             MOVE 'N'         TO  WS-SLANT.                               00000037
                                    <01>             MOVE '11/04/08'  TO  WS-TEXT.                                00000038
                                    <01>             CALL 'BLKPRT' USING WS-SLANT                                 00000039
                                    <01>                                 WS-TEXT                                  00000040
                                    <01>                                 WS-LINES.                                00000041
                                    <01>             PERFORM PRINT-IT.                                            00000042
                                    <01>                                                                          00000043
                                    <01>             CLOSE THE-PRINTER.                                           00000044
                                    <01>             GOBACK.                                                      00000045
                                    <01>         PRINT-IT.                                                        00000046
                                    <01>             PERFORM DISPLAY-LINE                                         00000047
                                    <01>                 VARYING WS-CTR FROM 1 BY 1                               00000048
                                    <01>                   UNTIL WS-CTR > 12.                                     00000049
                                    <01>             MOVE SPACE  TO  THE-LINE.                                    00000050
                                    <01>             WRITE THE-LINE.                                              00000051
                                    <01>         DISPLAY-LINE.                                                    00000052
                                    <01>             MOVE WS-LINE (WS-CTR) TO THE-LINE.                           00000053
BLOCKCOB  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 36
                                    <01>             WRITE THE-LINE.                                              00000054

*** MEMBER BLOCKCOB HAS BEEN ADDED             54 RECORDS WRITTEN
       NEW BLOCKCOB ENTRY: TTR=000307 INDC=00

MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 37
          <01>  ./  ADD NAME=MAKESTMT,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>         ID DIVISION.                                                     00000001
                                    <01>         PROGRAM-ID.  MAKESTMT.                                           00000002
                                    <01>        ***************************************************************** 00000003
                                    <01>        *                                                               * 00000004
                                    <01>        *  MAKESTMT - PROGRAM TO GENERATE CONTROL STATEMENTS.           * 00000005
                                    <01>        *                                                               * 00000006
                                    <01>        *    THIS PROGRAM TAKE THE PARM FIELD AND WRITES CONTROL CARDS  * 00000007
                                    <01>        *    TO A FILE.  THESE CARDS CAN BE A DATASET RATHER THAN AFTER * 00000008
                                    <01>        *    A 'DD *' STATEMENT.                                        * 00000009
                                    <01>        *                                                               * 00000010
                                    <01>        *    CARDS IN THE PARM ARE SEPARATED BY THE '\' CHARACTER.      * 00000011
                                    <01>        *    A PARM THE STARTS WITH AN '@' SIGNIFY A MACRO.  THESE      * 00000012
                                    <01>        *    MACROS GENERATE GROUPS OF SIMILAR STATEMENTS.  PLEASE      * 00000013
                                    <01>        *    SEE AND EXECUTE THE MAKETEST JCL TO SEE SAMPLES OF ALL     * 00000014
                                    <01>        *    OF THE MACROS.                                             * 00000015
                                    <01>        *                                                               * 00000016
                                    <01>        *                                                               * 00000017
                                    <01>        *  REQUIRED DD STATEMENTS:                                      * 00000018
                                    <01>        *    SYSOUT     RECFM=VBA,LRECL=121,BLKSIZE=1210                * 00000019
                                    <01>        *    STMTS      DCB LRECL 80 RECFM FB                           * 00000020
                                    <01>        *                                                               * 00000021
                                    <01>        ***************************************************************** 00000022
                                    <01>        *                                                               * 00000023
                                    <01>        * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY    * 00000024
                                    <01>        * USED AND INCORPORATED INTO DERIVED WORKS AS LONG AS           * 00000025
                                    <01>        * ATTRIBUTION TO THE ORIGINAL AUTHORSHIP REMAINS IN ANY         * 00000026
                                    <01>        * DISTRIBUTED COPIES OF THE COBOL SOURCE.                       * 00000027
                                    <01>        *                                                               * 00000028
                                    <01>        *                                                               * 00000029
                                    <01>        * RELEASE NOVEMBER, 2008  BY ED LISS                            * 00000030
                                    <01>        * HTTP://WWW.SUMMERMOON.COM/HERCULES/                           * 00000031
                                    <01>        *                                                               * 00000032
                                    <01>        ***************************************************************** 00000033
                                    <01>         ENVIRONMENT DIVISION.                                            00000034
                                    <01>         INPUT-OUTPUT SECTION.                                            00000035
                                    <01>         FILE-CONTROL.                                                    00000036
                                    <01>             SELECT STMT-FILE   ASSIGN TO UT-S-STMTS.                     00000037
                                    <01>         DATA DIVISION.                                                   00000038
                                    <01>         FILE SECTION.                                                    00000039
                                    <01>         FD  STMT-FILE                                                    00000040
                                    <01>             BLOCK CONTAINS 0 RECORDS                                     00000041
                                    <01>             LABEL RECORDS STANDARD                                       00000042
                                    <01>             RECORDING MODE IS F                                          00000043
                                    <01>             DATA RECORD IS STMT.                                         00000044
                                    <01>         01  STMT                    PICTURE X(80).                       00000045
                                    <01>         WORKING-STORAGE SECTION.                                         00000046
                                    <01>         01  WS-SUB                  PIC S9(4) COMP SYNC.                 00000047
                                    <01>         01  WS-PARM-PTR             PIC S9(4) COMP SYNC.                 00000048
                                    <01>         01  WS-SET-IND              PIC X     VALUE 'N'.                 00000049
                                    <01>             88  WS-GEN-SET                    VALUE 'Y'.                 00000050
                                    <01>             88  WS-GEN-NOT                    VALUE 'N'.                 00000051
                                    <01>                                                                          00000052
                                    <01>         01  WS-PRINT-LINE.                                               00000053
MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 38
                                    <01>             05  WS-PRINT-CHAR       PIC X     OCCURS 120 TIMES.          00000054
                                    <01>         01  FILLER  REDEFINES WS-PRINT-LINE.                             00000055
                                    <01>             05  WS-PRINT-LINE-1     PIC X(100).                          00000056
                                    <01>             05  WS-PRINT-LINE-2     PIC X(20).                           00000057
                                    <01>                                                                          00000058
                                    <01>         01  WS-STRING-SUB           PIC S9(4) COMP SYNC.                 00000059
                                    <01>         01  WS-STRING-AREA.                                              00000060
                                    <01>             05  WS-STRING-BYTE      OCCURS 80 TIMES PIC X(1).            00000061
                                    <01>                                                                          00000062
                                    <01>         01  WS-STMT-SUB             PIC S9(4) COMP SYNC VALUE ZERO.      00000063
                                    <01>         01  WS-STMT-SUB-MAX         PIC S9(4) COMP SYNC VALUE +64.       00000064
                                    <01>         01  WS-STMT-LINES.                                               00000065
                                    <01>             05  WS-STMT             OCCURS 64 TIMES PIC X(80).           00000066
                                    <01>                                                                          00000067
                                    <01>         01  WS-LITERAL-SUB          PIC S9(4) COMP SYNC.                 00000068
                                    <01>         01  WS-LITERAL-AREA.                                             00000069
                                    <01>             05  WS-LIT-LEN          PIC S9(4) COMP SYNC.                 00000070
                                    <01>             05  WS-LIT-BYTE         OCCURS 80 TIMES PIC X(1).            00000071
                                    <01>                                                                          00000072
                                    <01>         01  WS-PREFIX-AREA.                                              00000073
                                    <01>             05  WS-PREFIX-LEN       PIC S9(4) COMP SYNC   VALUE ZERO.    00000074
                                    <01>             05  WS-PREFIX-BYTE      OCCURS 80 TIMES PIC X(1).            00000075
                                    <01>                                                                          00000076
                                    <01>         01  WS-DEL-MACRO-1.                                              00000077
                                    <01>             05  FILLER              PIC S9(4) COMP SYNC VALUE +9.        00000078
                                    <01>             05  FILLER              PIC X(8)  VALUE ' DELETE '.          00000079
                                    <01>             05  FILLER              PIC X     VALUE QUOTE.               00000080
                                    <01>         01  WS-DEL-MACRO-2.                                              00000081
                                    <01>             05  FILLER              PIC S9(4) COMP SYNC VALUE +15.       00000082
                                    <01>             05  FILLER              PIC X     VALUE QUOTE.               00000083
                                    <01>             05  FILLER              PIC X(14) VALUE ' NONVSAM PURGE'.    00000084
                                    <01>                                                                          00000085
                                    <01>         LINKAGE SECTION.                                                 00000086
                                    <01>         01  LS-EXEC-PARM.                                                00000087
                                    <01>             05  LS-PARM-LEN         PIC S9(4) COMP SYNC.                 00000088
                                    <01>             05  LS-PARM             PIC X(128).                          00000089
                                    <01>             05  LS-PARM-BYTE  REDEFINES LS-PARM  PIC X                   00000090
                                    <01>                                     OCCURS 128 TIMES.                    00000091
                                    <01>             EJECT                                                        00000092
                                    <01>         PROCEDURE DIVISION USING LS-EXEC-PARM.                           00000093
                                    <01>             DISPLAY '*** MAKESTMT: V1.0.0 STARTING'.                     00000094
                                    <01>             IF LS-PARM-LEN = ZERO                                        00000095
                                    <01>                 DISPLAY '*** MAKESTMT: NO PARMS PASSED'                  00000096
                                    <01>                 MOVE 12 TO RETURN-CODE                                   00000097
                                    <01>                 GOBACK.                                                  00000098
                                    <01>                                                                          00000099
                                    <01>             MOVE SPACES TO WS-PRINT-LINE.                                00000100
                                    <01>             PERFORM 0000-MOVE-PARM                                       00000101
                                    <01>                 VARYING  WS-SUB FROM 1 BY 1                              00000102
                                    <01>                   UNTIL  WS-SUB > LS-PARM-LEN                            00000103
                                    <01>                      OR  WS-SUB > 120.                                   00000104
                                    <01>             DISPLAY '*** PARM 001: ' WS-PRINT-LINE-1.                    00000105
                                    <01>             DISPLAY '*** PARM 100: ' WS-PRINT-LINE-2.                    00000106
                                    <01>                                                                          00000107
                                    <01>             IF LS-PARM-BYTE (1) = '@'                                    00000108
                                    <01>                 PERFORM 1000-MACRO                                       00000109
                                    <01>             ELSE                                                         00000110
MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 39
                                    <01>                 PERFORM 0010-STMTS.                                      00000111
                                    <01>                                                                          00000112
                                    <01>                                                                          00000113
                                    <01>             IF WS-STMT-SUB > ZERO                                        00000114
                                    <01>                 OPEN OUTPUT STMT-FILE                                    00000115
                                    <01>                 PERFORM 9000-WRITE-STMT                                  00000116
                                    <01>                    VARYING WS-SUB FROM 1 BY 1                            00000117
                                    <01>                      UNTIL WS-SUB > WS-STMT-SUB                          00000118
                                    <01>                         OR WS-SUB > WS-STMT-SUB-MAX                      00000119
                                    <01>                 CLOSE STMT-FILE.                                         00000120
                                    <01>                                                                          00000121
                                    <01>             MOVE 0 TO RETURN-CODE.                                       00000122
                                    <01>             GOBACK.                                                      00000123
                                    <01>                                                                          00000124
                                    <01>         0000-MOVE-PARM.                                                  00000125
                                    <01>             MOVE LS-PARM-BYTE (WS-SUB)   TO  WS-PRINT-CHAR (WS-SUB).     00000126
                                    <01>                                                                          00000127
                                    <01>         0010-STMTS.                                                      00000128
                                    <01>             MOVE 1 TO WS-PARM-PTR.                                       00000129
                                    <01>             PERFORM 0020-COPY-PARM-TO-STMT                               00000130
                                    <01>                   UNTIL WS-PARM-PTR > LS-PARM-LEN.                       00000131
                                    <01>         0020-COPY-PARM-TO-STMT.                                          00000132
                                    <01>              IF LS-PARM-BYTE (WS-PARM-PTR) = ','                         00000133
                                    <01>                  ADD 1 TO WS-PARM-PTR.                                   00000134
                                    <01>              MOVE 1 TO WS-STRING-SUB.                                    00000135
                                    <01>              MOVE SPACES TO WS-STRING-AREA.                              00000136
                                    <01>              PERFORM 0030-COPY-BYTES                                     00000137
                                    <01>                 UNTIL WS-STRING-SUB > 80                                 00000138
                                    <01>                    OR WS-PARM-PTR > LS-PARM-LEN                          00000139
                                    <01>                    OR LS-PARM-BYTE (WS-PARM-PTR) = '\'.                  00000140
                                    <01>              ADD 1 TO WS-STMT-SUB.                                       00000141
                                    <01>              IF WS-STMT-SUB > WS-STMT-SUB-MAX                            00000142
                                    <01>                 MOVE 16 TO RETURN-CODE                                   00000143
                                    <01>                 STOP RUN                                                 00000144
                                    <01>              ELSE                                                        00000145
                                    <01>                  MOVE WS-STRING-AREA TO WS-STMT (WS-STMT-SUB).           00000146
                                    <01>              ADD 1 TO WS-PARM-PTR.                                       00000147
                                    <01>         0030-COPY-BYTES.                                                 00000148
                                    <01>              MOVE LS-PARM-BYTE (WS-PARM-PTR)                             00000149
                                    <01>                TO WS-STRING-BYTE (WS-STRING-SUB).                        00000150
                                    <01>              ADD 1 TO WS-PARM-PTR.                                       00000151
                                    <01>              ADD 1 TO WS-STRING-SUB.                                     00000152
                                    <01>              EJECT                                                       00000153
                                    <01>         1000-MACRO.                                                      00000154
                                    <01>             IF LS-PARM-BYTE (2) = 'D' AND                                00000155
                                    <01>                LS-PARM-BYTE (3) = 'E' AND                                00000156
                                    <01>                LS-PARM-BYTE (4) = 'L' AND                                00000157
                                    <01>                LS-PARM-BYTE (5) = '\'                                    00000158
                                    <01>                   MOVE 5 TO WS-PARM-PTR                                  00000159
                                    <01>                   PERFORM 3000-DEL-MACRO                                 00000160
                                    <01>             ELSE                                                         00000161
                                    <01>             IF LS-PARM-BYTE (2) = 'P' AND                                00000162
                                    <01>                LS-PARM-BYTE (3) = 'D' AND                                00000163
                                    <01>                LS-PARM-BYTE (4) = 'E' AND                                00000164
                                    <01>                LS-PARM-BYTE (5) = 'L' AND                                00000165
                                    <01>                LS-PARM-BYTE (6) = '\'                                    00000166
                                    <01>                   MOVE 7 TO WS-PARM-PTR                                  00000167
MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 40
                                    <01>                   PERFORM 8020-COPY-PREFIX-BYTES                         00000168
                                    <01>                   PERFORM 3000-DEL-MACRO                                 00000169
                                    <01>             ELSE                                                         00000170
                                    <01>             IF LS-PARM-BYTE (2) = 'R' AND                                00000171
                                    <01>                LS-PARM-BYTE (3) = '\'                                    00000172
                                    <01>                   MOVE 4 TO WS-PARM-PTR                                  00000173
                                    <01>                   PERFORM 8020-COPY-PREFIX-BYTES                         00000174
                                    <01>                   PERFORM 3020-R-MACRO                                   00000175
                                    <01>             ELSE                                                         00000176
                                    <01>                DISPLAY '*** MAKESTMT: UNDEFINED MACRO'                   00000177
                                    <01>                MOVE 16 TO RETURN-CODE                                    00000178
                                    <01>                STOP RUN.                                                 00000179
                                    <01>         3000-DEL-MACRO.                                                  00000180
                                    <01>             PERFORM 3010-COPY-PARM-TO-STMT                               00000181
                                    <01>                   UNTIL WS-PARM-PTR > LS-PARM-LEN.                       00000182
                                    <01>         3010-COPY-PARM-TO-STMT.                                          00000183
                                    <01>              ADD 1 TO WS-PARM-PTR.                                       00000184
                                    <01>              IF LS-PARM-BYTE (WS-PARM-PTR) = ','                         00000185
                                    <01>                  ADD 1 TO WS-PARM-PTR.                                   00000186
                                    <01>                                                                          00000187
                                    <01>              IF LS-PARM-BYTE (WS-PARM-PTR) = '@'                         00000188
                                    <01>                 MOVE 'Y'  TO  WS-SET-IND                                 00000189
                                    <01>                 ADD 1 TO WS-PARM-PTR                                     00000190
                                    <01>              ELSE                                                        00000191
                                    <01>                 MOVE 'N'  TO  WS-SET-IND.                                00000192
                                    <01>                                                                          00000193
                                    <01>              MOVE 1           TO WS-STRING-SUB                           00000194
                                    <01>                                  WS-LITERAL-SUB.                         00000195
                                    <01>              MOVE SPACES      TO WS-STRING-AREA.                         00000196
                                    <01>              MOVE WS-DEL-MACRO-1 TO WS-LITERAL-AREA.                     00000197
                                    <01>              PERFORM 8000-COPY-LIT-BYTES.                                00000198
                                    <01>                                                                          00000199
                                    <01>              IF WS-PREFIX-LEN > ZERO                                     00000200
                                    <01>                 MOVE 1              TO WS-LITERAL-SUB                    00000201
                                    <01>                 MOVE WS-PREFIX-AREA TO WS-LITERAL-AREA                   00000202
                                    <01>                 PERFORM 8000-COPY-LIT-BYTES.                             00000203
                                    <01>                                                                          00000204
                                    <01>              PERFORM 8010-COPY-BYTES                                     00000205
                                    <01>                 UNTIL WS-STRING-SUB > 80                                 00000206
                                    <01>                    OR WS-PARM-PTR > LS-PARM-LEN                          00000207
                                    <01>                    OR LS-PARM-BYTE (WS-PARM-PTR) = '\'.                  00000208
                                    <01>                                                                          00000209
                                    <01>              MOVE 1           TO WS-LITERAL-SUB.                         00000210
                                    <01>              MOVE WS-DEL-MACRO-2 TO WS-LITERAL-AREA.                     00000211
                                    <01>              PERFORM 8000-COPY-LIT-BYTES.                                00000212
                                    <01>              PERFORM 9010-ADD-TO-WS-STMT.                                00000213
                                    <01>                                                                          00000214
                                    <01>              IF WS-GEN-SET                                               00000215
                                    <01>                 MOVE ' SET MAXCC=0'  TO WS-STRING-AREA                   00000216
                                    <01>                 PERFORM 9010-ADD-TO-WS-STMT.                             00000217
                                    <01>         3020-R-MACRO.                                                    00000218
                                    <01>             PERFORM 3030-COPY-PARM-TO-STMT                               00000219
                                    <01>                   UNTIL WS-PARM-PTR > LS-PARM-LEN.                       00000220
                                    <01>         3030-COPY-PARM-TO-STMT.                                          00000221
                                    <01>              MOVE 1           TO WS-STRING-SUB                           00000222
                                    <01>                                  WS-LITERAL-SUB.                         00000223
                                    <01>              MOVE SPACES      TO WS-STRING-AREA.                         00000224
MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 41
                                    <01>                                                                          00000225
                                    <01>              ADD 1 TO WS-PARM-PTR.                                       00000226
                                    <01>              IF LS-PARM-BYTE (WS-PARM-PTR) = ','                         00000227
                                    <01>                  ADD 1 TO WS-PARM-PTR.                                   00000228
                                    <01>                                                                          00000229
                                    <01>              IF LS-PARM-BYTE (WS-PARM-PTR) = '@'                         00000230
                                    <01>                  ADD 1 TO WS-PARM-PTR                                    00000231
                                    <01>              ELSE                                                        00000232
                                    <01>                  IF WS-PREFIX-LEN > ZERO                                 00000233
                                    <01>                     MOVE 1              TO WS-LITERAL-SUB                00000234
                                    <01>                     MOVE WS-PREFIX-AREA TO WS-LITERAL-AREA               00000235
                                    <01>                     PERFORM 8000-COPY-LIT-BYTES.                         00000236
                                    <01>                                                                          00000237
                                    <01>              PERFORM 8010-COPY-BYTES                                     00000238
                                    <01>                 UNTIL WS-STRING-SUB > 80                                 00000239
                                    <01>                    OR WS-PARM-PTR > LS-PARM-LEN                          00000240
                                    <01>                    OR LS-PARM-BYTE (WS-PARM-PTR) = '\'.                  00000241
                                    <01>                                                                          00000242
                                    <01>              PERFORM 9010-ADD-TO-WS-STMT.                                00000243
                                    <01>                                                                          00000244
                                    <01>         8000-COPY-LIT-BYTES.                                             00000245
                                    <01>              PERFORM 8001-COPY-LIT-BYTES                                 00000246
                                    <01>                 UNTIL WS-LITERAL-SUB > WS-LIT-LEN                        00000247
                                    <01>                    OR WS-STRING-SUB  > 80.                               00000248
                                    <01>         8001-COPY-LIT-BYTES.                                             00000249
                                    <01>              MOVE WS-LIT-BYTE (WS-LITERAL-SUB)                           00000250
                                    <01>                TO WS-STRING-BYTE (WS-STRING-SUB).                        00000251
                                    <01>              ADD 1 TO WS-LITERAL-SUB.                                    00000252
                                    <01>              ADD 1 TO WS-STRING-SUB.                                     00000253
                                    <01>                                                                          00000254
                                    <01>         8010-COPY-BYTES.                                                 00000255
                                    <01>              MOVE LS-PARM-BYTE (WS-PARM-PTR)                             00000256
                                    <01>                TO WS-STRING-BYTE (WS-STRING-SUB).                        00000257
                                    <01>              ADD 1 TO WS-PARM-PTR.                                       00000258
                                    <01>              ADD 1 TO WS-STRING-SUB.                                     00000259
                                    <01>                                                                          00000260
                                    <01>         8020-COPY-PREFIX-BYTES.                                          00000261
                                    <01>              PERFORM 8021-COPY-PREFIX-BYTES                              00000262
                                    <01>                 UNTIL LS-PARM-BYTE (WS-PARM-PTR) = '\'                   00000263
                                    <01>                    OR WS-PARM-PTR > LS-PARM-LEN                          00000264
                                    <01>                    OR WS-PREFIX-LEN  > 80.                               00000265
                                    <01>         8021-COPY-PREFIX-BYTES.                                          00000266
                                    <01>              ADD 1 TO WS-PREFIX-LEN.                                     00000267
                                    <01>              MOVE LS-PARM-BYTE (WS-PARM-PTR)                             00000268
                                    <01>                TO WS-PREFIX-BYTE (WS-PREFIX-LEN).                        00000269
                                    <01>              ADD 1 TO WS-PARM-PTR.                                       00000270
                                    <01>                                                                          00000271
                                    <01>         9000-WRITE-STMT.                                                 00000272
                                    <01>             MOVE WS-STMT (WS-SUB)  TO  STMT.                             00000273
                                    <01>             DISPLAY '*** MAKESTMT-' WS-STMT (WS-SUB).                    00000274
                                    <01>             WRITE STMT.                                                  00000275
                                    <01>                                                                          00000276
                                    <01>         9010-ADD-TO-WS-STMT.                                             00000277
                                    <01>              ADD 1 TO WS-STMT-SUB.                                       00000278
                                    <01>              IF WS-STMT-SUB > WS-STMT-SUB-MAX                            00000279
                                    <01>                 MOVE 16 TO RETURN-CODE                                   00000280
                                    <01>                 STOP RUN                                                 00000281
MAKESTMT  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 42
                                    <01>              ELSE                                                        00000282
                                    <01>                  MOVE WS-STRING-AREA TO WS-STMT (WS-STMT-SUB).           00000283

*** MEMBER MAKESTMT HAS BEEN ADDED            283 RECORDS WRITTEN
       NEW MAKESTMT ENTRY: TTR=00030A INDC=00

TESTDYNA  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 43
          <01>  ./  ADD NAME=TESTDYNA,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>         ID DIVISION.                                                     00000001
                                    <01>         PROGRAM-ID.  TESTDYNA.                                           00000002
                                    <01>        ******************************************************************00000003
                                    <01>        *                                                                 00000004
                                    <01>        *  TESTDYNA - TEST DRIVER FOR THE DYNALOAD MODULE                 00000005
                                    <01>        *        THIS MODULE TESTS/DEMONSTRATES THE DYNAMIC LOADING OF    00000006
                                    <01>        *        SUBROUTINES.                                             00000007
                                    <01>        *                                                                 00000008
                                    <01>        ******************************************************************00000009
                                    <01>         ENVIRONMENT DIVISION.                                            00000010
                                    <01>         DATA DIVISION.                                                   00000011
                                    <01>         WORKING-STORAGE SECTION.                                         00000012
                                    <01>         01  FILLER PIC X(32)  VALUE '***** START TESTDYNA WKSTG *****'.  00000013
                                    <01>         01  WS-MODULE-BLK-1.                                             00000014
                                    <01>             05  WS-MODULE-NAME1     PIC X(8)   VALUE 'TESTDYN1'.         00000015
                                    <01>             05  WS-MODULE-ADDR      PIC X(4)   VALUE LOW-VALUES.         00000016
                                    <01>             05  WS-CALL-MODE1       PIC X      VALUE 'K'.                00000017
                                    <01>             05  FILLER              PIC XXX    VALUE LOW-VALUES.         00000018
                                    <01>         01  WS-MODULE-BLK-2.                                             00000019
                                    <01>             05  WS-MODULE-NAME2     PIC X(8)   VALUE 'TESTDYN1'.         00000020
                                    <01>             05  WS-MODULE-ADDR      PIC X(4)   VALUE LOW-VALUES.         00000021
                                    <01>             05  WS-CALL-MODE2       PIC X      VALUE 'R'.                00000022
                                    <01>             05  FILLER              PIC XXX    VALUE LOW-VALUES.         00000023
                                    <01>         01  WS-PARM-1.                                                   00000024
                                    <01>             05  WS-COUNTER          PIC 9(5)   VALUE ZEROS.              00000025
                                    <01>             05  WS-SUB              PIC 9(5)   VALUE ZEROS.              00000026
                                    <01>         01  FILLER PIC X(32)  VALUE '****** END TESTDYNA WKSTG ******'.  00000027
                                    <01>         PROCEDURE DIVISION.                                              00000028
                                    <01>         START-HERE.                                                      00000029
                                    <01>             DISPLAY 'STARTING TESTDYNA WITH DEFAULT K MODE.'.            00000030
                                    <01>                                                                          00000031
                                    <01>             PERFORM DYNA-CALL   10 TIMES.                                00000032
                                    <01>             PERFORM DYNA-CALL-R 10 TIMES.                                00000033
                                    <01>         E-O-J.                                                           00000034
                                    <01>             DISPLAY 'TESTDYNA ENDING'.                                   00000035
                                    <01>                                                                          00000036
                                    <01>             MOVE ZERO TO RETURN-CODE.                                    00000037
                                    <01>             STOP RUN.                                                    00000038
                                    <01>                                                                          00000039
                                    <01>         DYNA-CALL.                                                       00000040
                                    <01>                                                                          00000041
                                    <01>             DISPLAY 'CALLING ' WS-MODULE-NAME1 ' USING ' WS-CALL-MODE1.  00000042
                                    <01>             CALL 'DYNALOAD' USING WS-MODULE-BLK-1                        00000043
                                    <01>                                   WS-PARM-1.                             00000044
                                    <01>                                                                          00000045
                                    <01>             DISPLAY 'RETURNED FROM ' WS-MODULE-NAME1                     00000046
                                    <01>                     ',WS-CALL-MODE = ' WS-CALL-MODE1                     00000047
                                    <01>                     ',WS-COUNTER = ' WS-COUNTER                          00000048
                                    <01>                     ',WS-SUB = ' WS-SUB.                                 00000049
                                    <01>                                                                          00000050
                                    <01>         DYNA-CALL-R.                                                     00000051
                                    <01>                                                                          00000052
                                    <01>             DISPLAY 'CALLING ' WS-MODULE-NAME2 ' USING ' WS-CALL-MODE2.  00000053
TESTDYNA  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 44
                                    <01>             CALL 'DYNALOAD' USING WS-MODULE-BLK-2                        00000054
                                    <01>                                   WS-PARM-1.                             00000055
                                    <01>                                                                          00000056
                                    <01>             DISPLAY 'RETURNED FROM ' WS-MODULE-NAME2                     00000057
                                    <01>                     ',WS-CALL-MODE = ' WS-CALL-MODE2                     00000058
                                    <01>                     ',WS-COUNTER = ' WS-COUNTER                          00000059
                                    <01>                     ',WS-SUB = ' WS-SUB.                                 00000060

*** MEMBER TESTDYNA HAS BEEN ADDED             60 RECORDS WRITTEN
       NEW TESTDYNA ENTRY: TTR=000401 INDC=00

TESTDYN1  IEBUPDTX -- CORNELL EXTENDED UPDATE PROGRAM.  VERSION 1.12 (SLAC V.12/17/04)            DAY=321  01:53  11/16/08   PAGE 45
          <01>  ./  ADD NAME=TESTDYN1,LIST=ALL,VERSION=0

          <01>  ./ NUMBER NEW1=1,INCR=1
                                          ______________________________NEW_MASTER_________________________________NEWSEQ_____PREV__
                                    <01>         ID DIVISION.                                                     00000001
                                    <01>         PROGRAM-ID.  TESTDYN1.                                           00000002
                                    <01>        ******************************************************************00000003
                                    <01>        *                                                                 00000004
                                    <01>        *  TESTDYN1 - TEST STUB FOR THE DYNALOAD MODULE                   00000005
                                    <01>        *        THIS MODULE TESTS/DEMONSTRATES THE DYNAMIC LOADING OF    00000006
                                    <01>        *        SUBROUTINES.                                             00000007
                                    <01>        *                                                                 00000008
                                    <01>        ******************************************************************00000009
                                    <01>         ENVIRONMENT DIVISION.                                            00000010
                                    <01>         DATA DIVISION.                                                   00000011
                                    <01>         WORKING-STORAGE SECTION.                                         00000012
                                    <01>         01  WS-COUNTER              PIC 9(5)  VALUE ZERO.                00000013
                                    <01>         LINKAGE SECTION.                                                 00000014
                                    <01>         01  LS-PARM-1.                                                   00000015
                                    <01>             05  LS-COUNTER          PIC 9(5).                            00000016
                                    <01>             05  LS-SUB              PIC 9(5).                            00000017
                                    <01>         PROCEDURE DIVISION USING LS-PARM-1.                              00000018
                                    <01>         START-HERE.                                                      00000019
                                    <01>             DISPLAY 'STARTING TESTDYN1.'.                                00000020
                                    <01>             ADD 1 TO LS-COUNTER.                                         00000021
                                    <01>             ADD 1 TO WS-COUNTER.                                         00000022
                                    <01>             MOVE  WS-COUNTER   TO  LS-SUB.                               00000023
                                    <01>             DISPLAY 'RETURNING WS-COUNTER = ' LS-COUNTER                 00000024
                                    <01>                     ',WS-SUB = ' LS-SUB.                                 00000025
                                    <01>             MOVE ZERO TO RETURN-CODE.                                    00000026
                                    <01>             GOBACK.                                                      00000027

*** MEMBER TESTDYN1 HAS BEEN ADDED             27 RECORDS WRITTEN
       NEW TESTDYN1 ENTRY: TTR=000404 INDC=00

____________________________________________________________________________________________________________________________________
          <01>  ./ ENDUP

*** END OF JOB IEBUPDTX.  STEP RETURN CODE = 00.

                        HH        HH  EEEEEEEEEEEE  RRRRRRRRRRR    CCCCCCCCCC     00000000         11       TTTTTTTTTTTT
                       HH        HH  EEEEEEEEEEEE  RRRRRRRRRRRR  CCCCCCCCCCCC   0000000000       111       TTTTTTTTTTTT
                      HH        HH  EE            RR        RR  CC        CC  00      0000     1111            TT
                     HH        HH  EE            RR        RR  CC            00     00 00       11            TT
                    HH        HH  EE            RR        RR  CC            00    00  00       11            TT
                   HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRRR  CC            00   00   00       11            TT
                  HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRR   CC            00  00    00       11            TT
                 HH        HH  EE            RR    RR      CC            00 00     00       11            TT
                HH        HH  EE            RR     RR     CC            0000      00       11            TT
               HH        HH  EE            RR      RR    CC        CC  000       00       11            TT
              HH        HH  EEEEEEEEEEEE  RR       RR   CCCCCCCCCCCC   0000000000    1111111111        TT
             HH        HH  EEEEEEEEEEEE  RR        RR   CCCCCCCCCC     00000000     1111111111        TT

                    JJJJJJJJJJ   3333333333     00000000     9999999999    8888888888                  AAAAAAAAAA
                    JJJJJJJJJJ  333333333333   0000000000   999999999999  888888888888                AAAAAAAAAAAA
                        JJ      33        33  00      0000  99        99  88        88                AA        AA
                        JJ                33  00     00 00  99        99  88        88                AA        AA
                        JJ                33  00    00  00  99        99   88      88                 AA        AA
                        JJ             3333   00   00   00  999999999999    88888888                  AAAAAAAAAAAA
                        JJ             3333   00  00    00  999999999999    88888888                  AAAAAAAAAAAA
                        JJ                33  00 00     00            99   88      88                 AA        AA
                  JJ    JJ                33  0000      00            99  88        88                AA        AA
                  JJ    JJ      33        33  000       00  99        99  88        88                AA        AA
                  JJJJJJJJ      333333333333   0000000000   999999999999  888888888888                AA        AA
                   JJJJJJ        3333333333     00000000     9999999999    8888888888                 AA        AA

****A   END   JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098   END   A****
****A   END   JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098   END   A****
****A   END   JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098   END   A****
****A   END   JOB 3098  HERC01T                         ROOM        1.53.37 AM 16 NOV  8  PRINTER1  SYS BSP1  JOB 3098   END   A****
