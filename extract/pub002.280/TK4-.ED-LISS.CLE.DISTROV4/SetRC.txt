                        HH        HH  EEEEEEEEEEEE  RRRRRRRRRRR    CCCCCCCCCC     00000000         11        CCCCCCCCCC
                       HH        HH  EEEEEEEEEEEE  RRRRRRRRRRRR  CCCCCCCCCCCC   0000000000       111       CCCCCCCCCCCC
                      HH        HH  EE            RR        RR  CC        CC  00      0000     1111       CC        CC
                     HH        HH  EE            RR        RR  CC            00     00 00       11       CC
                    HH        HH  EE            RR        RR  CC            00    00  00       11       CC
                   HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRRR  CC            00   00   00       11       CC
                  HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRR   CC            00  00    00       11       CC
                 HH        HH  EE            RR    RR      CC            00 00     00       11       CC
                HH        HH  EE            RR     RR     CC            0000      00       11       CC
               HH        HH  EE            RR      RR    CC        CC  000       00       11       CC        CC
              HH        HH  EEEEEEEEEEEE  RR       RR   CCCCCCCCCCCC   0000000000    1111111111   CCCCCCCCCCCC
             HH        HH  EEEEEEEEEEEE  RR        RR   CCCCCCCCCC     00000000     1111111111    CCCCCCCCCC



                    JJJJJJJJJJ        444     555555555555    00000000     2222222222                  AAAAAAAAAA
                    JJJJJJJJJJ       4444     555555555555   0000000000   222222222222                AAAAAAAAAAAA
                        JJ          44 44     55            00      0000  22        22                AA        AA
                        JJ         44  44     55            00     00 00            22                AA        AA
                        JJ        44   44     55            00    00  00            22                AA        AA
                        JJ       44444444444  555555555     00   00   00           22                 AAAAAAAAAAAA
                        JJ      444444444444  5555555555    00  00    00         22                   AAAAAAAAAAAA
                        JJ             44              55   00 00     00       22                     AA        AA
                  JJ    JJ             44               55  0000      00     22                       AA        AA
                  JJ    JJ             44               55  000       00   22                         AA        AA
                  JJJJJJJJ             44     555555555555   0000000000   222222222222                AA        AA
                   JJJJJJ              44     55555555555     00000000    222222222222                AA        AA


****A  START  JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502  START  A****
****A  START  JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502  START  A****
****A  START  JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502  START  A****
****A  START  JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502  START  A****

                                                J E S 2   J O B   L O G


02.40.29 JOB 4502  $HASP373 HERC01C  STARTED - INIT  1 - CLASS A - SYS BSP1
02.40.29 JOB 4502  IEF403I HERC01C - STARTED - TIME=02.40.29
02.40.30 JOB 4502  IEFACTRT - Stepname  Procstep  Program   Retcode
02.40.30 JOB 4502  HERC01C    S1        COB       IKFCBL00  RC= 0000
02.40.30 JOB 4502  HERC01C    S1        LKED      IEWL      RC= 0000
02.40.30 JOB 4502  HERC01C    S1                  SETRC     RC= 1234
02.40.30 JOB 4502  HERC01C    S2                  SETRC     RC= 0003
02.40.30 JOB 4502  HERC01C    S3                  SETRC     RC= 0001
02.40.30 JOB 4502  HERC01C    S4                  SETRC     RC= 0002
02.40.30 JOB 4502  HERC01C    S5                  SETRC     RC= 0003
02.40.30 JOB 4502  IEF404I HERC01C - ENDED - TIME=02.40.30
02.40.30 JOB 4502  $HASP395 HERC01C  ENDED


------ JES2 JOB STATISTICS ------


 21 APR  9 JOB EXECUTION DATE


        55 CARDS READ


       595 SYSOUT PRINT RECORDS


         0 SYSOUT PUNCH RECORDS


      0.01 MINUTES EXECUTION TIME

    1     //HERC01C JOB 'ME',MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=HERC01              JOB 4502
    2     //JOBLIB  DD DSN=HERC01.CLE.DISTRO.LOADLIB,DISP=SHR                     00020000
    3     //S1  EXEC COBUCL                                                       00030000
    4     XXCOBUCL  PROC SOUT='*',                                                00010000
          XX           COPY1='USER1.COPYLIB',                                     00020000
          XX           COPY2='USER1.COPYLIB',                                     00030000
          XX           COPY3='USER1.COPYLIB',                                     00040000
          XX           COPY4='USER1.COPYLIB',                                     00050000
          XX           CAL1='USER1.NCALIB',                                       00060000
          XX           CAL2='USER1.NCALIB',                                       00070000
          XX           CAL3='USER1.NCALIB',                                       00080000
          XX           CAL4='USER1.NCALIB',                                       00090000
          XX           SUPMAP=,                                                   00100000
          XX           SIZE=2048K,                                                00110000
          XX           BUF=1024K,                                                 00120000
          XX           WORK='460,(700,100)', COMPILER SYSUT- SPACE                00130000
          XX           TEMP='TRK,(10,10)',   TEMP OBJ SPACE                       00140000
          XX           XREF=NO,     DATA NAME/PROCEDURE NAME CROSS REF            00150000
          XX           DMAP=NO,     DATA MAP                                      00160000
          XX           PMAP=NO,     PROCEDURE DIVISION MAP                        00170000
          XX           CLIST=,      CONDENSED LISTING                             00180000
          XX           LIB=,        PROCESS COPY BOOKS (NO/LIB)                   00190000
          XX           CAL=CAL,     LKED CAL OR NCAL                              00200000
          XX           IN=NULLFILE, SOURCE CODE TO COMPILE                        00210000
          XX           OUT=NULLFILE EXECUTABLE DESTINATION                        00220000
          **********************************************************************  00230000
    5     XXCOB  EXEC  PGM=IKFCBL00,REGION=4096K,                                 00240000
          XX PARM=('NODECK,LOAD,&SUPMAP.SUPMAP,SIZE=&SIZE,BUF=&BUF,',             00250000
          XX       '&LIB.LIB,&PMAP.PMAP,&DMAP.DMAP,&XREF.XREF,&CLIST.CLIST')      00260000
    6     XXSTEPLIB DD  DSN=SYSC.LINKLIB,DISP=SHR                                 00270000
    7     XXSYSLIB  DD  DSN=&COPY1,DISP=SHR                                       00280000
    8     XX        DD  DSN=&COPY2,DISP=SHR                                       00290000
    9     XX        DD  DSN=&COPY3,DISP=SHR                                       00300000
   10     XX        DD  DSN=&COPY4,DISP=SHR                                       00310000
   11     XX        DD  DSN=USER1.COPYLIB,DISP=SHR                                00320000
   12     XXSYSUT1  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00330000
   13     XXSYSUT2  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00340000
   14     XXSYSUT3  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00350000
   15     XXSYSUT4  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00360000
   16     XXSYSLIN  DD DSN=&&COBOBJ,DISP=(NEW,PASS),                              00370000
          XX           UNIT=SYSDA,SPACE=(&TEMP,RLSE),                             00380000
          XX           DCB=(RECFM=F,LRECL=80,BLKSIZE=80)                          00390000
   17     XXSYSPRINT DD SYSOUT=&SOUT                                              00400000
   18     XXSYSPUNCH DD DUMMY                                                     00410000
   19     //COB.SYSIN DD DSN=HERC01.CLE.DISTRO.SOURCE(SETRC),DISP=SHR             00040000
          X/SYSIN    DD DSN=&IN,DISP=SHR                                          00420000
          **********************************************************************  00430000
   20     XXLKED  EXEC PGM=IEWL,REGION=128K,COND=(5,LE,COB),                      00450000
          XX           PARM='LIST,XREF,LET,&CAL'                                  00460000
   21     XXSYSPRINT DD SYSOUT=&SOUT                                              00470000
   22     XXSYSLIN  DD  DSN=&&COBOBJ,DISP=(OLD,DELETE)                            00480000
   23     XX        DD  DDNAME=SYSIN                                              00490000
   24     XXSYSUT1  DD  UNIT=SYSDA,SPACE=(&TEMP)                                  00500000
   25     XXSYSLIB  DD DSN=SYSC.COBLIB,DISP=SHR,DCB=BUFSIZE=19069                 00510000
   26     XX        DD DSN=&CAL1,DISP=SHR                                         00520000
   27     XX        DD DSN=&CAL2,DISP=SHR                                         00530000
   28     XX        DD DSN=&CAL3,DISP=SHR                                         00540000
   29     XX        DD DSN=&CAL4,DISP=SHR                                         00550000
   30     //LKED.SYSLMOD DD DSN=HERC01.CLE.DISTRO.LOADLIB(SETRC),DISP=SHR         00050000
          ***                                                                     00060000
          X/SYSLMOD DD DSN=&OUT,DISP=SHR                                          00560000
   31     XXSYSIN   DD DUMMY                                                      00570000
   32     //S1  EXEC  PGM=SETRC,PARM='01234'                                      00070000
          ***                         A                                           00080000
          ***                         |                                           00090000
          ***                         0 = RETURN NEXT 4 DIGITS AS RETURN CODE     00100000
   33     //SYSOUT  DD SYSOUT=*                                                   00110000
   34     //S2  EXEC  PGM=SETRC,PARM='14234'                                      00120000
          ***                         A|                                          00130000
          ***                         ||                                          00140000
          ***                         ||                                          00150000
          ***                         |+- THIS IS THE ARGUMENT.  THE RETURN CODE  00160000
          ***                         |   WILL BE THE ORDINAL POSITION OF IT IN   00170000
          ***                         |   THE REMAINING PART OF THE PARM. IN THIS 00180000
          ***                         |   CASE, '4' IS THE 3RD BYTE OF '234'.     00190000
          ***                         |   THEREFORE, RET CODE IS 3.               00200000
          ***                         1 = ARGUMENT IS 1 CHARACTER LONG.           00210000
   35     //SYSOUT  DD SYSOUT=*                                                   00220000
   36     //S3  EXEC  PGM=SETRC,PARM='12234'                                      00230000
          ***                         A|                                          00240000
          ***                         ||                                          00250000
          ***                         ||                                          00260000
          ***                         |+- THIS IS THE ARGUMENT.  THE RETURN CODE  00270000
          ***                         |   WILL BE THE ORDINAL POSITION OF IT IN   00280000
          ***                         |   THE REMAINING PART OF THE PARM. IN THIS 00290000
          ***                         |   CASE, '2' IS THE 1ST BYTE OF '234'.     00300000
          ***                         |   THEREFORE, RET CODE IS 1.               00310000
          ***                         1 = ARGUMENT IS 1 CHARACTER LONG.           00320000
   37     //SYSOUT  DD SYSOUT=*                                                   00330000
   38     //S4  EXEC  PGM=SETRC,PARM='2ABAAABAC'                                  00340000
          ***                         A||                                         00350000
          ***                         |||                                         00360000
          ***                         |||                                         00370000
          ***                         |++ THIS IS THE ARGUMENT.  THE RETURN CODE  00380000
          ***                         |   WILL BE THE ORDINAL POSITION OF IT IN   00390000
          ***                         |   THE REMAINING PART OF THE PARM. IN THIS 00400000
          ***                         |   CASE, 'AB' IS THE 2ND SET OF 'AAABAC'.  00410000
          ***                         |   THEREFORE, RET CODE IS 2.               00420000
          ***                         + = ARGUMENT IS 2 CHARACTERS LONG.          00430000
   39     //SYSOUT  DD SYSOUT=*                                                   00440000
   40     //S5  EXEC  PGM=SETRC,PARM='2ACAAABAC'                                  00450000
          ***                         A||                                         00460000
          ***                         |||                                         00470000
          ***                         |||                                         00480000
          ***                         |++ THIS IS THE ARGUMENT.  THE RETURN CODE  00490000
          ***                         |   WILL BE THE ORDINAL POSITION OF IT IN   00500000
          ***                         |   THE REMAINING PART OF THE PARM. IN THIS 00510000
          ***                         |   CASE, 'AC' IS THE 3RD SET OF 'AAABAC'.  00520000
          ***                         |   THEREFORE, RET CODE IS 3.               00530000
          ***                         + = ARGUMENT IS 2 CHARACTERS LONG.          00540000
   41     //SYSOUT  DD SYSOUT=*                                                   00550000

 STMT NO. MESSAGE
-
    5     IEF653I SUBSTITUTION JCL - PARM=('NODECK,LOAD,SUPMAP,SIZE=2048K,BUF=1024K,',
    5     IEF653I SUBSTITUTION JCL - 'LIB,NOPMAP,NODMAP,NOXREF,CLIST')
    7     IEF653I SUBSTITUTION JCL - DSN=USER1.COPYLIB,DISP=SHR
    8     IEF653I SUBSTITUTION JCL - DSN=USER1.COPYLIB,DISP=SHR
    9     IEF653I SUBSTITUTION JCL - DSN=USER1.COPYLIB,DISP=SHR
   10     IEF653I SUBSTITUTION JCL - DSN=USER1.COPYLIB,DISP=SHR
   12     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   13     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   14     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   15     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   16     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE),
   17     IEF653I SUBSTITUTION JCL - SYSOUT=*
   19     IEF653I SUBSTITUTION JCL - DSN=NULLFILE,DISP=SHR
   20     IEF653I SUBSTITUTION JCL - PARM='LIST,XREF,LET,CAL'
   21     IEF653I SUBSTITUTION JCL - SYSOUT=*
   24     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(TRK,(10,10))
   26     IEF653I SUBSTITUTION JCL - DSN=USER1.NCALIB,DISP=SHR
   27     IEF653I SUBSTITUTION JCL - DSN=USER1.NCALIB,DISP=SHR
   28     IEF653I SUBSTITUTION JCL - DSN=USER1.NCALIB,DISP=SHR
   29     IEF653I SUBSTITUTION JCL - DSN=USER1.NCALIB,DISP=SHR
   30     IEF653I SUBSTITUTION JCL - DSN=NULLFILE,DISP=SHR
IEF236I ALLOC. FOR HERC01C COB S1
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I 240  ALLOCATED TO SYS00087
IEF237I 249  ALLOCATED TO STEPLIB
IEF237I 249  ALLOCATED TO SYS00089
IEF237I 270  ALLOCATED TO SYSLIB
IEF237I 270  ALLOCATED TO
IEF237I 270  ALLOCATED TO
IEF237I 270  ALLOCATED TO
IEF237I 270  ALLOCATED TO
IEF237I 241  ALLOCATED TO SYS00091
IEF237I 190  ALLOCATED TO SYSUT1
IEF237I 149  ALLOCATED TO SYSUT2
IEF237I 14A  ALLOCATED TO SYSUT3
IEF237I 151  ALLOCATED TO SYSUT4
IEF237I 14B  ALLOCATED TO SYSLIN
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I DMY  ALLOCATED TO SYSPUNCH
IEF237I 280  ALLOCATED TO SYSIN
IEF142I HERC01C COB S1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYSC.LINKLIB                                 KEPT          *--------0
IEF285I   VOL SER NOS= SYSCPK.
IEF285I   UCSYSCPK                                     KEPT          *--------0
IEF285I   VOL SER NOS= SYSCPK.
IEF285I   USER1.COPYLIB                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB001.
IEF285I   USER1.COPYLIB                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB001.
IEF285I   USER1.COPYLIB                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB001.
IEF285I   USER1.COPYLIB                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB001.
IEF285I   USER1.COPYLIB                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB001.
IEF285I   UCMVSUSR                                     KEPT          *--------0
IEF285I   VOL SER NOS= MVSUSR.
IEF285I   SYS09111.T024029.RA000.HERC01C.R0000001      DELETED       *--------6
IEF285I   VOL SER NOS= WORK03.
IEF285I   SYS09111.T024029.RA000.HERC01C.R0000002      DELETED       *--------6
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS09111.T024029.RA000.HERC01C.R0000003      DELETED       *--------9
IEF285I   VOL SER NOS= SMP002.
IEF285I   SYS09111.T024029.RA000.HERC01C.R0000004      DELETED       *--------6
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS09111.T024029.RA000.HERC01C.COBOBJ        PASSED        *-------58
IEF285I   VOL SER NOS= SMP003.
IEF285I   JES2.JOB04502.SO0101                         SYSOUT
IEF285I   HERC01.CLE.DISTRO.SOURCE                     KEPT          *--------7
IEF285I   VOL SER NOS= PUB002.
IEF373I STEP /COB     / START 09111.0240
IEF374I STEP /COB     / STOP  09111.0240 CPU    0MIN 00.18SEC SRB    0MIN 00.06SEC VIRT  2076K SYS   228K
************************************************************************************************************************************
*     1. Jobstep of job: HERC01C     Stepname: COB         Program name: IKFCBL00   Executed on 21.04.09 from 02.40.29 to 02.40.30 *
*         elapsed time  24:00:00,50                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,24               Virtual Storage used:   2076K         Page-out:      0                           *
*           corr. CPU:  00:00:00,24   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 240.......0 249.......0 249.......0 270.......0 270.......0 270.......0 270.......0 270.......0 241.......0      *
*     190.......6 149.......6 14A.......9 151.......6 14B......58 DMY.......0 DMY.......0 280.......7                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,40                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01C LKED S1
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 14B  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 170  ALLOCATED TO SYSUT1
IEF237I 249  ALLOCATED TO SYSLIB
IEF237I 241  ALLOCATED TO
IEF237I 241  ALLOCATED TO
IEF237I 241  ALLOCATED TO
IEF237I 241  ALLOCATED TO
IEF237I 241  ALLOCATED TO SYS00095
IEF237I 249  ALLOCATED TO SYS00093
IEF237I 280  ALLOCATED TO SYSLMOD
IEF237I 240  ALLOCATED TO SYS00097
IEF142I HERC01C LKED S1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   JES2.JOB04502.SO0102                         SYSOUT
IEF285I   SYS09111.T024029.RA000.HERC01C.COBOBJ        DELETED       *-------59
IEF285I   VOL SER NOS= SMP003.
IEF285I   SYS09111.T024029.RA000.HERC01C.R0000005      DELETED       *--------0
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYSC.COBLIB                                  KEPT          *-------23
IEF285I   VOL SER NOS= SYSCPK.
IEF285I   USER1.NCALIB                                 KEPT          *--------0
IEF285I   VOL SER NOS= MVSUSR.
IEF285I   USER1.NCALIB                                 KEPT          *--------0
IEF285I   VOL SER NOS= MVSUSR.
IEF285I   USER1.NCALIB                                 KEPT          *--------0
IEF285I   VOL SER NOS= MVSUSR.
IEF285I   USER1.NCALIB                                 KEPT          *--------0
IEF285I   VOL SER NOS= MVSUSR.
IEF285I   UCMVSUSR                                     KEPT          *--------0
IEF285I   VOL SER NOS= MVSUSR.
IEF285I   UCSYSCPK                                     KEPT          *--------0
IEF285I   VOL SER NOS= SYSCPK.
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    KEPT          *-------10
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /LKED    / START 09111.0240
IEF374I STEP /LKED    / STOP  09111.0240 CPU    0MIN 00.05SEC SRB    0MIN 00.01SEC VIRT   128K SYS   228K
************************************************************************************************************************************
*     2. Jobstep of job: HERC01C     Stepname: LKED        Program name: IEWL       Executed on 21.04.09 from 02.40.30 to 02.40.30 *
*         elapsed time  24:00:00,26                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,06               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,06   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 DMY.......0 14B......59 DMY.......0 170.......0 249......23 241.......0 241.......0 241.......0 241.......0      *
*     241.......0 249.......0 280......10 240.......0                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,10                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01C S1
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I JES2 ALLOCATED TO SYSOUT
IEF142I HERC01C S1 - STEP WAS EXECUTED - COND CODE 1234
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   JES2.JOB04502.SO0103                         SYSOUT
IEF373I STEP /S1      / START 09111.0240
IEF374I STEP /S1      / STOP  09111.0240 CPU    0MIN 00.00SEC SRB    0MIN 00.00SEC VIRT    12K SYS   196K
IEF236I ALLOC. FOR HERC01C S2
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I JES2 ALLOCATED TO SYSOUT
IEF142I HERC01C S2 - STEP WAS EXECUTED - COND CODE 0003
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   JES2.JOB04502.SO0104                         SYSOUT
IEF373I STEP /S2      / START 09111.0240
IEF374I STEP /S2      / STOP  09111.0240 CPU    0MIN 00.00SEC SRB    0MIN 00.00SEC VIRT    12K SYS   196K
IEF236I ALLOC. FOR HERC01C S3
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I JES2 ALLOCATED TO SYSOUT
IEF142I HERC01C S3 - STEP WAS EXECUTED - COND CODE 0001
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   JES2.JOB04502.SO0105                         SYSOUT
IEF373I STEP /S3      / START 09111.0240
IEF374I STEP /S3      / STOP  09111.0240 CPU    0MIN 00.00SEC SRB    0MIN 00.00SEC VIRT    12K SYS   196K
IEF236I ALLOC. FOR HERC01C S4
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I JES2 ALLOCATED TO SYSOUT
IEF142I HERC01C S4 - STEP WAS EXECUTED - COND CODE 0002
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   JES2.JOB04502.SO0106                         SYSOUT
IEF373I STEP /S4      / START 09111.0240
IEF374I STEP /S4      / STOP  09111.0240 CPU    0MIN 00.00SEC SRB    0MIN 00.00SEC VIRT    12K SYS   196K
IEF236I ALLOC. FOR HERC01C S5
IEF237I 280  ALLOCATED TO JOBLIB
IEF237I JES2 ALLOCATED TO SYSOUT
IEF142I HERC01C S5 - STEP WAS EXECUTED - COND CODE 0003
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    PASSED        *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   JES2.JOB04502.SO0107                         SYSOUT
IEF373I STEP /S5      / START 09111.0240
IEF374I STEP /S5      / STOP  09111.0240 CPU    0MIN 00.00SEC SRB    0MIN 00.00SEC VIRT    12K SYS   196K
IEF285I   HERC01.CLE.DISTRO.LOADLIB                    KEPT
IEF285I   VOL SER NOS= PUB002.
IEF375I  JOB /HERC01C / START 09111.0240
IEF376I  JOB /HERC01C / STOP  09111.0240 CPU    0MIN 00.23SEC SRB    0MIN 00.07SEC

  CB545 V2 LVL78 01MAY72                 IBM OS AMERICAN NATIONAL STANDARD COBOL                       DATE APR 21,1909


   1


00001          ID DIVISION.                                                     00000001
00002          PROGRAM-ID.  SETRC.                                              00000002
00003         ***************************************************************** 00000003
00004         *                                                               * 00000004
00005         * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY    * 00000005
00006         * USED AND INCORPORATED INTO DERIVED WORKS AS LONG AS           * 00000006
00007         * ATTRIBUTION TO THE ORIGINAL AUTHORSHIP REMAINS IN ANY         * 00000007
00008         * DISTRIBUTED COPIES OF THE COBOL SOURCE.                       * 00000008
00009         *                                                               * 00000009
00010         *                                                               * 00000010
00011         * RELEASE DECEMBER, 2008  BY ED LISS                            * 00000011
00012         * HTTP://WWW.SUMMERMOON.COM/HERCULES/                           * 00000012
00013         *                                                               * 00000013
00014         ***************************************************************** 00000014

   2


00015         ***************************************************************** 00000016
00016         *                                                               * 00000017
00017         *  SETRC - PROGRAM TO SET THE RETURN CODE                       * 00000018
00018         *                                                               * 00000019
00019         *    THIS PROGRAM TAKE THE PARM FIELD AND DEPENDING ON THE      * 00000020
00020         *    VALUE PASSED, SETS A RETURN CODE.  THIS RETURN CODE CAN    * 00000021
00021         *    BE USED TO CONTROL EXECUTION OF STEPS IN THE JOB.          * 00000022
00022         *                                                               * 00000023
00023         *    THE FORMAT OF THE PARM IS:                                 * 00000024
00024         *       TXXXX...X (UP TO 128 CHARACTERS).                       * 00000025
00025         *                                                               * 00000026
00026         *    WHERE T=TYPE OF PARM LIST.  THE X'S REPRESENT THE          * 00000027
00027         *       ARGUMENTS AND THE FUNCTIONS.                            * 00000028
00028         *                                                               * 00000029
00029         *    WHEN T='0',THE NEXT 4 CHARACTERS MUST BE NUMERIC AND       * 00000030
00030         *       IS THE VALUE THE RC IS TO BE SET TO.                    * 00000031
00031         *       EX: PARM='01234' RESULTS IN THE STEP RC=1234.           * 00000032
00032         *                                                               * 00000033
00033         *    WHEN T>'0',THE ARGUMENT IS T CHARACTERS LONG AND EACH      * 00000034
00034         *       FUNCTION IN THE LIST IS T CHARACTERS LONG.              * 00000035
00035         *                                                               * 00000036
00036         *     EX: PARM='1DABCD'                                         * 00000037
00037         *         T=1 SO EACH ARGUMENT IS 1 CHAR LONG.  THERE IS ONE    * 00000038
00038         *         ARGUMENT AND 4 FUNCTIONS.  THE FIRST 'D' IS THE       * 00000039
00039         *         ARGUMENT AND 'A','B','C','D' ARE FUNCTIONS.  SETRC    * 00000040
00040         *         COMPARE THE ARGUMENT TO EACH FUNCTION AND SETS THE    * 00000041
00041         *         RC TO THE ORDINAL NUMBER OF THE FUNCTION.  IN THIS    * 00000042
00042         *         EXAMPLE, THE RC WOULD BE SET TO 4 SINCE 'D'='D'.      * 00000043
00043         *         IF NO MATCH IS FOUND, THE RC IS SET TO 0.             * 00000044
00044         *                                                               * 00000045
00045         *     EX: PARM='2DQBCDQDA'                                      * 00000046
00046         *         T=2 SO EACH FUNCTION IS 2 CHAR LONG.  THERE IS ONE    * 00000047
00047         *         ARGUMENT AND 3 FUNCTIONS.  THE FIRST 'DA' IS THE      * 00000048
00048         *         ARGUMENT AND 'BC','DQ','DA' ARE FUNCTIONS.  SETRC     * 00000049
00049         *         COMPARES THE ARGUMENT TO EACH FUNCTION AND SETS THE   * 00000050
00050         *         RC TO THE ORDINAL NUMBER OF THE FUNCTION.  IF THIS    * 00000051
00051         *         EXAMPLE, THE RC WOULD BE SET TO 2 SINCE 'DQ' MATCHES. * 00000052
00052         *                                                               * 00000053
00053         *    THE LENGTH OF THE PARM MUST BE A MULTIPLE OF 'T' PLUE 1.   * 00000054
00054         *    IF THIS IS NOT OBSERVED, THE PROGRAM WILL ALWAYS END       * 00000055
00055         *    WITH 0 RETURN CODE.                                        * 00000056
00056         *                                                               * 00000057
00057         *  REQUIRED DD STATEMENTS:                                      * 00000058
00058         *      SYSOUT  (ONLY USED FOR ERROR MESSAGE).                   * 00000059
00059         *                                                               * 00000060
00060         ***************************************************************** 00000061

   3


00061          ENVIRONMENT DIVISION.                                            00000063
00062          INPUT-OUTPUT SECTION.                                            00000064
00063          DATA DIVISION.                                                   00000065
00064          FILE SECTION.                                                    00000066
00065          WORKING-STORAGE SECTION.                                         00000067
00066          01  WS-FOUND-SW             PIC X     VALUE 'N'.                 00000068
00067              88  WS-NOT-FOUND                  VALUE 'N'.                 00000069
00068              88  WS-FOUND                      VALUE 'Y'.                 00000070
00069          01  WS-RETURN-CODE          PIC S9(4) COMP SYNC.                 00000071
00070          01  WS-SUB                  PIC S9(4) COMP SYNC.                 00000072
00071          01  WS-PARM-CTR             PIC S9(4) COMP SYNC.                 00000073
00072          01  WS-PARM-TYPE            PIC S9(4) COMP SYNC.                 00000074
00073          01  WS-LEN-TBL.                                                  00000075
00074              05  FILLER              PIC S9(4) COMP SYNC VALUE +127.      00000076
00075              05  FILLER              PIC S9(4) COMP SYNC VALUE +63.       00000077
00076              05  FILLER              PIC S9(4) COMP SYNC VALUE +42.       00000078
00077              05  FILLER              PIC S9(4) COMP SYNC VALUE +31.       00000079
00078              05  FILLER              PIC S9(4) COMP SYNC VALUE +25.       00000080
00079              05  FILLER              PIC S9(4) COMP SYNC VALUE +21.       00000081
00080              05  FILLER              PIC S9(4) COMP SYNC VALUE +18.       00000082
00081              05  FILLER              PIC S9(4) COMP SYNC VALUE +15.       00000083
00082              05  FILLER              PIC S9(4) COMP SYNC VALUE +14.       00000084
00083          01  WS-MAX-TBL    REDEFINES    WS-LEN-TBL.                       00000085
00084              05  WS-MAX-CNT          PIC S9(4) COMP SYNC                  00000086
00085                                      OCCURS 9 TIMES.                      00000087

   4


00086          LINKAGE SECTION.                                                 00000089
00087          01  LS-EXEC-PARM.                                                00000090
00088              05  LS-PARM-LEN         PIC S9(4) COMP SYNC.                 00000091
00089              05  LS-PARM-TYPE        PIC 9.                               00000092
00090              05  LS-PARM             PIC X(127).                          00000093
00091              05  LS-PARM-BYTE1     REDEFINES LS-PARM  PIC X               00000094
00092                                      OCCURS 127 TIMES.                    00000095
00093              05  LS-PARM-BYTE2     REDEFINES LS-PARM  PIC XX              00000096
00094                                      OCCURS 63  TIMES.                    00000097
00095              05  LS-PARM-BYTE3     REDEFINES LS-PARM  PIC XXX             00000098
00096                                      OCCURS 42  TIMES.                    00000099
00097              05  LS-PARM-BYTE4     REDEFINES LS-PARM  PIC X(4)            00000100
00098                                      OCCURS 31  TIMES.                    00000101
00099              05  LS-PARM-BYTE5     REDEFINES LS-PARM  PIC X(5)            00000102
00100                                      OCCURS 25  TIMES.                    00000103
00101              05  LS-PARM-BYTE6     REDEFINES LS-PARM  PIC X(6)            00000104
00102                                      OCCURS 21  TIMES.                    00000105
00103              05  LS-PARM-BYTE7     REDEFINES LS-PARM  PIC X(7)            00000106
00104                                      OCCURS 18  TIMES.                    00000107
00105              05  LS-PARM-BYTE8     REDEFINES LS-PARM  PIC X(8)            00000108
00106                                      OCCURS 15  TIMES.                    00000109
00107              05  LS-PARM-BYTE9     REDEFINES LS-PARM  PIC X(9)            00000110
00108                                      OCCURS 14  TIMES.                    00000111
00109              05  LS-PARM-RC        REDEFINES LS-PARM  PIC 9(4).           00000112

   5


00110          PROCEDURE DIVISION USING LS-EXEC-PARM.                           00000114
00111              IF LS-PARM-LEN = ZERO                                        00000115
00112                  DISPLAY '*** SETRC: NO PARM PASSED'                      00000116
00113                  MOVE 0 TO RETURN-CODE                                    00000117
00114                  GOBACK.                                                  00000118
00115                                                                           00000119
00116              IF LS-PARM-TYPE IS NOT NUMERIC                               00000120
00117                  DISPLAY '*** SETRC: FIRST CHAR OF PARM MUST BE NUMERIC'  00000121
00118                  MOVE 0 TO RETURN-CODE                                    00000122
00119                  GOBACK                                                   00000123
00120               ELSE                                                        00000124
00121                  MOVE LS-PARM-TYPE  TO  WS-PARM-TYPE.                     00000125
00122                                                                           00000126
00123         *                                                                 00000127
00124         *  DETERMINE IF PARM LIST IS CORRENT LENGTH PARM LENGTH           00000128
00125         *                                                                 00000129
00126                                                                           00000130
00127              IF WS-PARM-TYPE = ZERO                                       00000131
00128                  IF LS-PARM-LEN = 5                                       00000132
00129                      IF LS-PARM-RC IS NUMERIC                             00000133
00130                          MOVE LS-PARM-RC TO RETURN-CODE                   00000134
00131                          GOBACK                                           00000135
00132                      ELSE                                                 00000136
00133                          DISPLAY '*** SETRC: RETURN CODE NOT NUMERIC'     00000137
00134                          MOVE 0          TO RETURN-CODE                   00000138
00135                          GOBACK                                           00000139
00136                  ELSE                                                     00000140
00137                      DISPLAY '*** SETRC: INCORRECT RETURN CODE'           00000141
00138                      MOVE 0 TO RETURN-CODE                                00000142
00139                      GOBACK.                                              00000143
00140                                                                           00000144
00141              COMPUTE WS-PARM-CTR = (LS-PARM-LEN - 1) / WS-PARM-TYPE.      00000145
00142              IF WS-PARM-CTR * WS-PARM-TYPE + 1 = LS-PARM-LEN              00000146
00143                  NEXT SENTENCE                                            00000147
00144              ELSE                                                         00000148
00145                  DISPLAY '*** SETRC: INCORRECT PARM LENGTH'               00000149
00146                  MOVE 0 TO RETURN-CODE                                    00000150
00147                  GOBACK.                                                  00000151
00148                                                                           00000152
00149              PERFORM 0000-COMPARE THRU 0010-EXIT                          00000153
00150                  VARYING  WS-SUB FROM 2 BY 1                              00000154
00151                    UNTIL  WS-SUB > WS-PARM-CTR                            00000155
00152                       OR  WS-SUB > WS-MAX-CNT (WS-PARM-TYPE)              00000156
00153                       OR  WS-FOUND.                                       00000157
00154                                                                           00000158
00155              IF WS-NOT-FOUND                                              00000159
00156                  MOVE 0 TO WS-RETURN-CODE                                 00000160
00157              ELSE                                                         00000161
00158                  SUBTRACT 2 FROM WS-SUB GIVING WS-RETURN-CODE.            00000162
00159                                                                           00000163
00160              MOVE WS-RETURN-CODE TO RETURN-CODE.                          00000164
00161              GOBACK.                                                      00000165
00162          0000-COMPARE.                                                    00000166
00163              GO TO 0001-COMPARE                                           00000167
00164                    0002-COMPARE                                           00000168
00165                    0003-COMPARE                                           00000169
00166                    0004-COMPARE                                           00000170

   6


00167                    0005-COMPARE                                           00000171
00168                    0006-COMPARE                                           00000172
00169                    0007-COMPARE                                           00000173
00170                    0008-COMPARE                                           00000174
00171                    0009-COMPARE                                           00000175
00172               DEPENDING ON WS-PARM-TYPE.                                  00000176
00173          0001-COMPARE.                                                    00000177
00174              IF LS-PARM-BYTE1 (1)  =  LS-PARM-BYTE1 (WS-SUB)              00000178
00175                      MOVE 'Y'  TO WS-FOUND-SW.                            00000179
00176              GO TO 0010-EXIT.                                             00000180
00177          0002-COMPARE.                                                    00000181
00178              IF LS-PARM-BYTE2 (1)  =  LS-PARM-BYTE2 (WS-SUB)              00000182
00179                      MOVE 'Y'  TO WS-FOUND-SW.                            00000183
00180              GO TO 0010-EXIT.                                             00000184
00181          0003-COMPARE.                                                    00000185
00182              IF LS-PARM-BYTE3 (1)  =  LS-PARM-BYTE3 (WS-SUB)              00000186
00183                      MOVE 'Y'  TO WS-FOUND-SW.                            00000187
00184              GO TO 0010-EXIT.                                             00000188
00185          0004-COMPARE.                                                    00000189
00186              IF LS-PARM-BYTE4 (1)  =  LS-PARM-BYTE4 (WS-SUB)              00000190
00187                      MOVE 'Y'  TO WS-FOUND-SW.                            00000191
00188              GO TO 0010-EXIT.                                             00000192
00189          0005-COMPARE.                                                    00000193
00190              IF LS-PARM-BYTE5 (1)  =  LS-PARM-BYTE5 (WS-SUB)              00000194
00191                      MOVE 'Y'  TO WS-FOUND-SW.                            00000195
00192              GO TO 0010-EXIT.                                             00000196
00193          0006-COMPARE.                                                    00000197
00194              IF LS-PARM-BYTE6 (1)  =  LS-PARM-BYTE6 (WS-SUB)              00000198
00195                      MOVE 'Y'  TO WS-FOUND-SW.                            00000199
00196              GO TO 0010-EXIT.                                             00000200
00197          0007-COMPARE.                                                    00000201
00198              IF LS-PARM-BYTE7 (1)  =  LS-PARM-BYTE7 (WS-SUB)              00000202
00199                      MOVE 'Y'  TO WS-FOUND-SW.                            00000203
00200              GO TO 0010-EXIT.                                             00000204
00201          0008-COMPARE.                                                    00000205
00202              IF LS-PARM-BYTE8 (1)  =  LS-PARM-BYTE8 (WS-SUB)              00000206
00203                      MOVE 'Y'  TO WS-FOUND-SW.                            00000207
00204              GO TO 0010-EXIT.                                             00000208
00205          0009-COMPARE.                                                    00000209
00206              IF LS-PARM-BYTE9 (1)  =  LS-PARM-BYTE9 (WS-SUB)              00000210
00207                      MOVE 'Y'  TO WS-FOUND-SW.                            00000211
00208          0010-EXIT.                                                       00000212
00209              EXIT.                                                        00000213

   7



                                                  CONDENSED LISTING

 110     ENTRY      000442                    111     IF         000454                    112     DISPLAY    000466
 113     MOVE       00047A                    114     GOBACK     000480                    116     IF         0004AE
 117     DISPLAY    0004C2                    118     MOVE       0004D6                    120     GOBACK     0004DC
 121     ELSE       00050A                    121     MOVE       000510                    127     IF         000522
 128     IF         000530                    129     IF         000542                    130     MOVE       000552
 132     GOBACK     000566                    133     ELSE       000594                    133     DISPLAY    00059A
 134     MOVE       0005AE                    136     GOBACK     0005B4                    137     ELSE       0005E2
 137     DISPLAY    0005E8                    138     MOVE       0005FC                    139     GOBACK     000602
 141     COMPUTE    000630                    142     IF         00064C                    145     ELSE       000668
 145     DISPLAY    000668                    146     MOVE       00067C                    147     GOBACK     000682
 149     PERFORM    0006B0                    155     IF         00072A                    156     MOVE       000736
 158     ELSE       00073C                    158     SUBTRACT   000742                    160     MOVE       00074E
 161     GOBACK     000754                    163     GO         000782                    174     IF         0007BC
 175     MOVE       0007E6                    176     GO         0007EC                    178     IF         0007F2
 179     MOVE       00081C                    180     GO         000822                    182     IF         000828
 183     MOVE       000852                    184     GO         000858                    186     IF         00085E
 187     MOVE       000888                    188     GO         00088E                    190     IF         000894
 191     MOVE       0008BE                    192     GO         0008C4                    194     IF         0008CA
 195     MOVE       0008F4                    196     GO         0008FA                    198     IF         000900
 199     MOVE       00092A                    200     GO         000930                    202     IF         000936
 203     MOVE       000960                    204     GO         000966                    206     IF         00096C
 207     MOVE       000996                    209     EXIT       00099C



*STATISTICS*     SOURCE RECORDS =   209     DATA DIVISION STATEMENTS =    33     PROCEDURE DIVISION STATEMENTS =    64
*OPTIONS IN EFFECT*     SIZE = 2097152  BUF = 1048576  LINECNT = 57  SPACE1, FLAGW,   SEQ,   SOURCE
*OPTIONS IN EFFECT*     NODMAP, NOPMAP,   CLIST,   SUPMAP, NOXREF,   LOAD, NODECK, APOST, NOTRUNC,   LIB,   VERB
*OPTIONS IN EFFECT*       ZWB


 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED LIST,XREF,LET,INVALID
          DEFAULT OPTION(S) USED -  SIZE=(98304,55296)



                                                CROSS REFERENCE TABLE


  CONTROL SECTION                       ENTRY

    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  SETRC         00     A54
  ILBODSP0*    A58     700
  ILBOSTP0*   1158      35
                                        ILBOSTP1    116E
  ILBOWTB0*   1190     100




  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
      2B8            ILBOSTP0        ILBOSTP0                     2BC            ILBODSP0        ILBODSP0
      2C0            ILBOSTP1        ILBOSTP0                     2C4            ILBOWTB0        ILBOWTB0

 ENTRY ADDRESS       00

 TOTAL LENGTH      1290
****SETRC     NOW REPLACED IN DATA SET
AUTHORIZATION CODE IS         0.


                        HH        HH  EEEEEEEEEEEE  RRRRRRRRRRR    CCCCCCCCCC     00000000         11        CCCCCCCCCC
                       HH        HH  EEEEEEEEEEEE  RRRRRRRRRRRR  CCCCCCCCCCCC   0000000000       111       CCCCCCCCCCCC
                      HH        HH  EE            RR        RR  CC        CC  00      0000     1111       CC        CC
                     HH        HH  EE            RR        RR  CC            00     00 00       11       CC
                    HH        HH  EE            RR        RR  CC            00    00  00       11       CC
                   HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRRR  CC            00   00   00       11       CC
                  HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRR   CC            00  00    00       11       CC
                 HH        HH  EE            RR    RR      CC            00 00     00       11       CC
                HH        HH  EE            RR     RR     CC            0000      00       11       CC
               HH        HH  EE            RR      RR    CC        CC  000       00       11       CC        CC
              HH        HH  EEEEEEEEEEEE  RR       RR   CCCCCCCCCCCC   0000000000    1111111111   CCCCCCCCCCCC
             HH        HH  EEEEEEEEEEEE  RR        RR   CCCCCCCCCC     00000000     1111111111    CCCCCCCCCC



                    JJJJJJJJJJ        444     555555555555    00000000     2222222222                  AAAAAAAAAA
                    JJJJJJJJJJ       4444     555555555555   0000000000   222222222222                AAAAAAAAAAAA
                        JJ          44 44     55            00      0000  22        22                AA        AA
                        JJ         44  44     55            00     00 00            22                AA        AA
                        JJ        44   44     55            00    00  00            22                AA        AA
                        JJ       44444444444  555555555     00   00   00           22                 AAAAAAAAAAAA
                        JJ      444444444444  5555555555    00  00    00         22                   AAAAAAAAAAAA
                        JJ             44              55   00 00     00       22                     AA        AA
                  JJ    JJ             44               55  0000      00     22                       AA        AA
                  JJ    JJ             44               55  000       00   22                         AA        AA
                  JJJJJJJJ             44     555555555555   0000000000   222222222222                AA        AA
                   JJJJJJ              44     55555555555     00000000    222222222222                AA        AA


****A   END   JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502   END   A****
****A   END   JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502   END   A****
****A   END   JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502   END   A****
****A   END   JOB 4502  HERC01C                         ROOM        2.40.30 AM 21 APR  9  PRINTER1  SYS BSP1  JOB 4502   END   A****
