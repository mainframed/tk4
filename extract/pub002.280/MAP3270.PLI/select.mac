 /*********************************************************************

   THE SELECT, WHEN AND OTHERWISE MACROS FOR USE WITH PL/I (F).

   THESE MACROS EMULATE THE PL/I SELECT STATEMENT WHICH WAS NOT
   IMPLEMENTED IN THE PL/I (F) COMPILER.

   TO USE, %INCLUDE THIS MEMBER IN YOUR PROGRAM AND COMPILE WITH
   THE MACRO OPTION. (NOMACRO IS THE DEFAULT).

   CODE THE SELECT:

       SELECT (A)                 SELECT (TRUE)
       WHEN(1)                    WHEN(A=1)
         CALL SUB1;                 CALL SUB1;
       WHEN(X)                    WHEN(A=X)
       DO;                        DO;
         CALL XRTN(X);              CALL XTRN(X);
         X=X+A;                     X=X+A;
       END;                       END;
       OTHERWISE                  OTHERWISE
       END;                       END;

   NOTE - USING THE MACROS, THE OTHERWISE IS REQUIRED, EVEN IF THE
       STATEMENT TO EXECUTE IS NULL.

 **********************************************************************/


 %DECLARE
     SELECT    ENTRY (CHARACTER) RETURNS (CHARACTER),
     WHEN      ENTRY (CHARACTER) RETURNS (CHARACTER),
     OTHERWISE ENTRY             RETURNS (CHARACTER);
 %DECLARE
      WHEN_CTR            FIXED,
     (SELEXPR,SPACES)     CHARACTER;
   %WHEN_CTR = 0;
   %SPACES = '
             ';
 %SELECT :
     PROCEDURE (A) RETURNS (CHARACTER);

       DECLARE  (A,L1,L2) CHARACTER;

       IF WHEN_CTR > 0 THEN
           RETURN('/*** THE SELECT MACRO CANNOT BE NESTED ***/');

       SELEXPR = A;
       WHEN_CTR = 1;

       L1 = '/* SELECT (' ×× SELEXPR ×× ') */';
       L2 = 'DO;              /* START OF SELECT EMULATION */';

       L1 = SUBSTR(L1××SPACES,1,71);
       L2 = SUBSTR(L2××SPACES,1,71);

       RETURN(L1××L2);
 %END;

 %WHEN :
     PROCEDURE (A) RETURNS (CHARACTER);

       DECLARE  (A,L1,L2,L3,L4,L5) CHARACTER;

       IF WHEN_CTR > 1 THEN
       DO;
          L1='END;';
          L2='/* WHEN (' ×× A ×× '); */';
          L3='ELSE';
       END;
       ELSE
       IF WHEN_CTR = 1 THEN
       DO;
          L1=' ';
          L2='/* WHEN (' ×× A ×× '); */';
          L3=' ';
       END;
       ELSE
          RETURN('/** WHEN WITHOUT A SELECT **/');

       WHEN_CTR = WHEN_CTR + 1;

       IF SELEXPR = 'TRUE' THEN
       L4='IF (' ×× A ×× ') THEN';
       ELSE
       L4='IF (' ×× SELEXPR ×× ')=(' ×× A ×× ') THEN';
       L5='DO;';

       L1 = SUBSTR(L1××SPACES,1,71);
       L2 = SUBSTR(L2××SPACES,1,71);
       L3 = SUBSTR(L3××SPACES,1,71);
       L4 = SUBSTR(L4××SPACES,1,71);
       L5 = SUBSTR(L5××SPACES,1,71);

       RETURN(L1××L2××L3××L4××L5);
 %END ;

 %OTHERWISE :
     PROCEDURE RETURNS (CHARACTER);

       DECLARE  (L1,L2,L3) CHARACTER;

       IF WHEN_CTR < 1 THEN
          RETURN('/** OTHERWISE OUT OF SEQUENCE **/');

       WHEN_CTR = 0;

       L1='END;';
       L2='/* OTHERWISE */';
       L3='ELSE';

       L1 = SUBSTR(L1××SPACES,1,71);
       L2 = SUBSTR(L2××SPACES,1,71);
       L3 = SUBSTR(L3××SPACES,1,71);

       RETURN(L1××L2××L3);
 %END;

 /*********************************************************************/
