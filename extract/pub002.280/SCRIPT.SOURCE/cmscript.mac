CMSCRIPT TITLE     'SCRIPT -- CMS WATERLOO SCRIPT INTERFACE'
***********************************************************************
*                                                                     *
*        WATERLOO SCRIPT INTERFACE FOR CMS                            *
*                                                                     *
***********************************************************************
         SPACE
         PRINT     NOGEN               OVERALL PRINT CONTROL
CMSCRIPT CSECT
         STM       R14,R12,12(R13)     SAVE INVOKER'S REGISTERS
         LR        R12,R15             ENTRY ADDRESS
         USING     CMSCRIPT,R12        AND TELL THE ASSEMBLER
         LA        R2,CMSSAREA         MY SAVE AREA
         ST        R2,8(,R13)          FORWARD CHAIN MINE
         ST        R13,4(,R2)          BACKWARD CHAIN TO CALLER'S
         LR        R13,R2              MY SAVE AREA POINTER
         SPACE
         LA        X2,8(,R1)           START OF PLIST TO CHECK
         CLI       0(X2),FF            END OF THE LINE .Q
         BE        ERROMIT             ERROR IF YES
         CLI       0(X2),C'('          START OF PARMS .Q
         BE        ERROMIT             ERROR IF YES
         SPACE
         LR        R1,X2               START OF OPERAND
         LA        R2,1                INCREMENT VALUE
         LA        R3,7(,X2)           END OF OPERAND
NEXTQCHK DS        0H
         CLI       0(R1),C'?'          A QUERY .Q
         BE        EXPLAIN             BRANCH IF YES
         BXLE      R1,R2,NEXTQCHK      LOOK AT ALL EIGHT
         SPACE
         MVC       PDDNAME+8(8),0(X2)  FOR OVERRIDING DDNAMES
         MVC       WMODE(2),DWMODE     SET DEFAULT MODE
         MVC       ISTATEN(8),0(X2)    SET INPUT FILE NAME
         XC        ODE(2),ODE          CLEAR ODE SPECIFICATION
         LA        R1,ISTATE           POINT TO STATE PLIST
         SVC       SVC202              CAN WE FIND IT .Q
         DC        AL4(NOINFILE)       ERROR EXIT
         L         X1,AFSTCOPY         GET ADDR OF FIRST COPY
         L         R1,FSTL(,X1)        GET A(ADT) FROM FSTCOPY
         USING     ADTSECT,R1          TELL ASSEMBLER
         TM        ADTFLG1,ADTFRW      IS ORIGIN OF SCRIPT FILE R/W .Q
         BO        USEIT               YES, WRITE BACK TO IT
         CLI       ADTMX,C' '          NO, IS IT AN EXTENSION .Q
         BE        CONTINUE            NO, DEFAULT TO PRIMARY DISK
         MVC       ADTPARM(1),ADTMX    YES
         LA        R1,ADTLIST          CALL ADTLKW FOR PARENT DISK
         USING     NUCON,R0            NEED NUCLEUS TEMPORARILY
         L         R15,AADTLKW         GET ENTRY ADDRESS
         DROP      R0                  FORGET R0
         BALR      R14,R15             DO THE LINE
         BP        CONTINUE            IF PARENT NOT R/W DEFAULT
USEIT    DS        0H
         MVC       WMODE(1),ADTM       IF R/W, USE FOR NEW FILES
         DROP      R1
CONTINUE DS        0H
         EJECT
*        BUMP TO OPTIONS
         SPACE
         LA        X2,8(,X2)           NEXT ENTRY IN PLIST
         SR        R0,R0               ZERO WORK REG
         STH       R0,PSPACE           ZERO O/S PARM
         MVI       OPTOUT1,OPTOTERM    TERMINAL OUTPUT BY DEFAULT
         MVI       OPTOUT2,OPTONOFI    NOT TO A FILE BY DEFAULT
         SPACE
         XC        PRFODE,PRFODE       CLEAR ODE SPECIFICATION
         LA        R1,PRFSTATE         POINT TO 'PROFILE' STATE
         SVC       SVC202              CAN WE FIND IT .Q
         DC        AL4(NOPROFIL)       BRANCH IF NOT
         LA        X1,PROFILE          POINT TO PARM
         LA        R1,L'PROFILE-1      LENGTH-1
         BAL       R14,SETENT          AND ENTER SAME
         SPACE
NOPROFIL DS        0H
         MVI       OPTSCRSW,OPTSCRNO   ASSUME 'NOSCREEN' OPTION
         USING     NUCON,R0            NEED NUCLEUS AGAIN
         L         R1,ADEVTAB          GET ADDR OF DEVICE TABLE
         DROP      R0
         USING     DEVTAB,R1           AND TELL THE ASSEMBLER
         LH        R3,CONSOLE          GET VIRT CONSOLE DEV ADDR
         DROP      R1
         DIAG      R3,R2,X'24'         DIAGNOSE FOR CONSOLE CLASS
         CLM       R3,B'1000',GRAFCON  DISPLAY TYPE TERMINAL .Q
         BNE       OPTSCHK             BRANCH IF NOT
         MVI       OPTSCRSW,OPTSCROK   SET 'SCREEN' OPTION
         SPACE
OPTSCHK  DS        0H
         CLI       0(X2),FF            AT THE END .Q
         BE        FDEFIT              YES, GO TO FILEDEFS
         CLI       0(X2),C'('          LEFT PAREN .Q
         BE        OPTS01              YES, GO TO OPTIONS
         B         ERRMUCH             TOO MANY FILES
         SPACE
OPTS01   DS        0H
         LA        X2,8(,X2)           PAST LEFT PARAM
         CLI       0(X2),FF            AT THE END .Q
         BE        FDEFIT              BRANCH IF YES
         CLI       0(X2),C')'          SAME THING
         BE        FDEFIT              BRANCH IF YES
         SPACE
         LA        R1,7(,X2)           END OF PLIST ENTRY
OPTS02   DS        0H
         CLI       0(R1),C' '          A BLANK .Q
         BNE       OPTS03              BRANCH OUT IF NOT
         BCT       R1,OPTS02           DECREMENT AND BRANCH
OPTS03   DS        0H
         LR        X1,X2               TEMP ENTRY POINTER
         SR        R1,X1               LENGTH-1 OF ENTRY
         BZ        OPTS06              IF ZERO, JUST SET IT
         SPACE
         LA        R2,OPTOUTS          OUTPUT OPTIONS
OPTS04   DS        0H
         CLI       0(R2),X'FF'         AT THE END .Q
         BE        OPTS06              BRANCH IF YES
         CH        R1,8(,R2)           TOO SHORT TO BE CONSIDERED .Q
         BL        OPTS05              BRANCH IF YES
         EX        R1,OPTSCLC          IS THIS IT .Q
         BNE       OPTS05              BRANCH IF NOT
         EX        R0,10(,R2)          DO AS OPTION WANTS
         EX        R0,14(,R2)          AND AGAIN
         B         OPTS01              GET NEXT PARM
OPTS05   DS        0H
         LA        R2,L'OPTOUTS(,R2)   NEXT CANDIDATE
         B         OPTS04              GO TRY IT
OPTSCLC  CLC       0(*-*,R2),0(X2)     COMPARE FOR OUTPUT OPTION
         SPACE
OPTS06   DS        0H
         CLI       0(X2),C'+'          START WITH '+' .Q
         BE        OPTKW               YES, THEN IT'S A REF VAR
         CLI       0(X2),C'&&'         START WITH '&' .Q
         BE        OPTKW               YES, THEN IT'S A REF VAR
         CLI       8(X2),C'('          NEXT ENTRY A LEFT PAREN .Q
         BNE       OPTS07              BRANCH IF NOT
         CLC       =CL8'SYSVAR',0(X2)  IS IT 'SYSVAR' .Q
         BE        OPTVAR              BRANCH IF YES
OPTS07   DS        0H
         BAL       R14,SETENT          ALL HAS FAILED
         B         OPTS01              GET NEXT PARM
         SPACE
SETENT   DS        0H
         LR        R3,R1               SAVE REGISTER ONE
         EX        R1,NUMCHK           CHECK FOR NUMERICS
         LR        R1,R3               RESTORE REGISTER ONE
         BNZ       SETALPH             IF NOT, ENTER WITH BLANK
SETKWOP  DS        0H
         LA        R2,PSPACE+1         PARM FIELD-1
         LH        R3,PSPACE           LENGTH SO FAR
         AR        R2,R3               CURRENT PTR
         CLI       0(R2),C'='          EQUAL SIGN
         BE        SETNEQ              BRANCH IF YES
         LA        R2,1(,R2)           BUMP CURRENT POINTER
         MVI       0(R2),C'='          ADD EQUALS
         LA        R3,1(,R3)           BUMP CURRENT LENGTH
SETNEQ   DS        0H
         EX        R1,SETMVC           ADD OPERAND
         LA        R3,1(R3,R1)         NEW LENGTH
         STH       R3,PSPACE           UPDATE LENGTH
         BR        R14                 RETURN TO CALLER
SETMVC   MVC       1(*-*,R2),0(X1)     EXECUTED ADD PARM STRING
NUMCHK   TRT       0(*-*,X1),NUMTABLE  EXECUTED CHECK FOR NUMERICS
         SPACE
SETALPH  DS        0H
         LA        R2,PSPACE+1         PARM FIELD-1
         LH        R3,PSPACE           LENGTH SO FAR
         LTR       R3,R3               FIRST OPERAND .Q
         BZ        SETNEQ              BRANCH IF YES
         LA        R2,0(R2,R3)         CURRENT END POINTER
         CLI       0(R2),C'='          ENDS WITH '=' .Q
         BE        SETNEQ              YES, SOMETHING FANCY
         LA        R2,1(,R2)           NEXT POSITION
         MVI       0(R2),C' '          ADD BLANK DELIMITER
         LA        R3,1(,R3)           BUMP CURRENT LENGTH
         B         SETNEQ              ADD PARM
         SPACE
SETADD   DS        0H
         LA        R2,PSPACE+1         PARM FIELD -1
         LH        R3,PSPACE           LENGTH OF PARM
         AR        R2,R3               NEXT CHARACTER
         B         SETNEQ              ENTER ASIS
         SPACE
OPTKW    DS        0H
         BAL       R14,SETENT          ENTER REF VARIABLE NAME
         CLI       8(X2),FF            END OF THE LINE .Q
         BE        OPTS01              YES, FORGET ELSE
         CLI       8(X2),C')'          END OF THE LINE .Q
         BE        OPTS01              YES, SAME THING
         LA        X2,8(,X2)           REF VAR OPERAND POINTER
         LA        R1,7(,X2)           END OF PLIST ENTRY
OPTKW01  DS        0H
         CLI       0(R1),C' '          A BLANK .Q
         BNE       OPTKW02             BRANCH IF NOT
         BCT       R1,OPTKW01          DECREMENT AND BRANCH
OPTKW02  DS        0H
         LR        X1,X2               TEMP ENTRY POINTER
         SR        R1,X1               LENGTH-1 OF ENTRY
         BNZ       OPTKW03             BRANCH IF NOT ZERO
         CLI       0(X2),C'?'          PROMPT FOR INPUT .Q
         BNE       OPTKW03             BRANCH IF NOT
         BAL       R14,OPTPROMP        GO PROMPT FOR INPUT
OPTKW03  DS        0H
         BAL       R14,SETKWOP         ENTER REF VAR OPERAND
         B         OPTS01              AND CONTINUE
         SPACE
OPTVAR   DS        0H
         LA        X2,8(,X2)           BUMP OVER FIRST
         CLI       8(X2),FF            END OF LINE .Q
         BE        OPTS01              BRANCH IF YES
         LA        X2,8(,X2)           BUMP OVER NEXT
         CLI       0(X2),C')'          END OF SYSVAR .Q
         BE        OPTS01              BRANCH IF YES
         CLI       8(X2),FF            A SECOND PART .Q
         BE        ERRMIS              NO, MISMATCHED PAIR
         CLI       8(X2),C')'          SECOND PART .Q
         BE        ERRMIS              NO, MISMATCHED PAIR
         LA        X1,PLSYSVAR         POINT TO '+SYSVAR'
         LA        R1,L'PLSYSVAR-1     LENGTH-1 OF SAME
         BAL       R14,SETENT          ENTER SAME
         LA        R1,7(,X2)           END OF FIRST HALF
OPTV01   DS        0H
         CLI       0(R1),C' '          TRAILING BLANK .Q
         BNE       OPTV02              BRANCH IF NOT
         BCT       R1,OPTV01           DECREMENT AND CONTINUE
OPTV02   DS        0H
         LR        X1,X2               OPTION POINTER
         SR        R1,X1               LENGTH-1 OF SYSVAR QUALIFIER
         BAL       R14,SETADD          ADD SAME TO END OF '+SYSVAR'
         LA        R1,15(,X2)          END OF OPERAND
OPTV03   DS        0H
         CLI       0(R1),C' '          TRAILING BLANK .Q
         BNE       OPTV04              BRANCH IF NOT
         BCT       R1,OPTV03           DECREMENT AND BRANCH
OPTV04   DS        0H
         LA        X1,8(,X2)           POINT TO OPERAND
         SR        R1,X1               LENGTH-1 OF OPERAND
         BNZ       OPTV05              BRANCH IF NOT ZERO
         CLI       0(X1),C'?'          PROMPT FOR INPUT .Q
         BNE       OPTV05              BRANCH IF NOT
         BAL       R14,OPTPROMP        GO PROMPT FOR INPUT
OPTV05   DS        0H
         BAL       R14,SETKWOP         ENTER OPERAND
         B         OPTVAR              CHECK FOR MORE
         SPACE
PLSYSVAR DC        C'+SYSVAR'          SYSTEM VARIABLE SYMBOL
         SPACE
OPTPROMP DS        0H
         LA        X1,PSPACE+1         PARM FIELD -1
         AH        X1,PSPACE           LAST CHARACTER POINTER
         LR        R1,X1               REMEMBER THAT
OPTPR01  DS        0H
         CLI       0(X1),C'+'          START OF KEYWORD .Q
         BE        OPTPR02             BRANCH IF YES
         CLI       0(X1),C'&&'         START OF KEYWORD .Q
         BE        OPTPR02             BRANCH IF YES
         BCT       X1,OPTPR01          DECREMENT AND TRY AGAIN
OPTPR02  DS        0H
         SR        R1,X1               LENGTH-1 OF ARGUMENT
         EX        R1,OPTPRMVC         MOVE KEYWORD TO PROMPT
         LA        R1,L'PROMPT+1(,R1)  TOTAL LENGTH SO FAR
         LA        X1,PROMPT(R1)       POINT TO END
         MVI       0(X1),C':'          ADD A COLON
         LA        X1,1(,R1)           TOTAL WRITE LENGTH
         WRTERM    PROMPT,(X1),EDIT=NO DISPLAY REQUEST TO USER
         SPACE
         LA        X1,PROMPT+L'PROMPT  READ AREA
         RDTERM    (X1),EDIT=NO        GET USER'S REPLY
         LTR       R1,R0               WAS IT NULL .Q
         BNZ       OPTPR03             BRANCH IF NOT
         LA        X1,PROMPT           POINT TO A BLANK
         LA        R1,1                LENGTH OF ONE
OPTPR03  DS        0H
         BCTR      R1,0                LENGTH-1 OF STRING
         BR        R14                 RETURN TO CALLER
OPTPRMVC MVC       PROMPT+L'PROMPT(*-*),0(X1)  ENTER PROMPT ARGUMENT
         EJECT
*        OUTPUT OPTIONS AND FILEDEFS
         SPACE
FDEFIT   DS        0H
         CLI       OPTSCRSW,OPTSCRNO   'NOSCREEN' OPTION REQUIRED .Q
         BE        FDEFIT01            BRANCH IF YES
         LA        X1,SCREEN           POINT TO OPTION
         LA        R1,L'SCREEN-1       LENGTH-1
         BAL       R14,SETENT          ENTER OPTION
         SPACE
FDEFIT01 DS        0H
         LA        X1,FDEFTERM         TERMINAL OUTPUT
         LA        R1,L'FDEFTERM-1     LENGTH-1
         CLI       OPTOUT1,OPTOTERM    IS IT TERMINAL .Q
         BE        FDEFIT02            BRANCH IF YES
         LA        X1,FDEFPRNT         PRINTER OUTPUT
         LA        R1,L'FDEFPRNT-1     LENGTH-1
FDEFIT02 DS        0H
         BAL       R14,SETENT          ENTER OPTION
         SPACE
         LA        X1,FDEFFILE         FILE OUTPUT
         LA        R1,L'FDEFFILE-1     LENGTH-1
         CLI       OPTOUT2,OPTOFILE    IS IT FILE .Q
         BE        FDEFIT03            BRANCH IF YES
         LA        X1,FDEFNOFI         NOFILE OUTPUT
         LA        R1,L'FDEFNOFI-1     LENGTH-1
FDEFIT03 DS        0H
         BAL       R14,SETENT          ENTER OPTION
         SPACE
         SR        R1,R1               CLEAR WORK REG
         IC        R1,OPTOUT1          GET OUTPUT TYPE
         SR        R15,R15             CLEAR WORK REG
         IC        R15,OPTOUT2         TER FILE TYPE
         OR        R15,R1              COMBINE THE TWO
         SLL       R15,2               TIMES FOUR
         B         *+4(R15)            INDEX BRANCH ACCORDINGLY
         B         FDEFTE                   TERMINAL
         B         FDEFME                   MEMO
         B         FDEFPR                   PRINTER
         B         FDEFDI                   DISK
         B         FDEFDU                   DUMMY
         B         FDEFDU                   DUMMY
         SPACE
FDEFTERM DC        C'TERM'             TERMINAL OUTPUT
FDEFPRNT DC        C'PRINT'            PRINTER OUTPUT
FDEFFILE DC        C'FILE'             FILE OUTPUT
FDEFNOFI DC        C'NOFILE'           NOFILE OUTPUT
         SPACE
FDEFPR   DS        0H
         LA        R1,OUTPUTP          OUTPUT TO PRINTER
FDEFSVC  DS        0H
         SVC       SVC202              DO IT
         DC        AL4(*+4)            IGNORE ERRORS
         B         FDEFSYP             GO TO SYSTERM
         SPACE
FDEFDI   DS        0H
         MVC       IERASEN(8),ISTATEN  FILE NAME
         MVC       IERASET(8),OUTDTYP  FILE TYPE
         MVC       IERASEM(2),WMODE    FILE MODE
         LA        R1,IERASE           POINT TO ERASE PLIST
         SVC       SVC202              ERASE LISTING FILE
         DC        AL4(*+4)            IF ANY
         LA        R1,OUTPUTD          OUTPUT TO DISK
         MVC       OUTDNAM(8),ISTATEN  FILE NAME
         MVC       OUTDMOD(2),WMODE    FILE MODE
         B         FDEFSVC             GO AND DO IT
         SPACE
FDEFTE   DS        0H
         LA        R1,OUTPUTT          OUTPUT TO TERMINAL
         B         FDEFSVC             GO AND DO IT
         SPACE
FDEFDU   DS        0H
         LA        R1,OUTPUTX          OUTPUT DUMMY
         B         FDEFSVC             GO AND DO IT
         SPACE
FDEFME   DS        0H
         MVC       IERASEN(8),ISTATEN  FILE NAME
         MVC       IERASET(8),OUTMTYP  FILE TYPE
         MVC       IERASEM(2),WMODE    FILE MODE
         LA        R1,IERASE           POINT TO ERASE PLIST
         SVC       SVC202              ERASE 'MEMO' FILE
         DC        AL4(*+4)            IF ANY
         LA        R1,OUTPUTM          OUTPUT TO DISK
         MVC       OUTMNAM(8),ISTATEN  FILE NAME
         MVC       OUTMMOD(2),WMODE    FILE MODE
         B         FDEFSVC             GO AND DO IT
         SPACE
FDEFSYP  DS        0H
         LA        R1,SYSTERM          ERROR FILE
         SVC       SVC202              FILEDEF THAT
         DC        AL4(*+4)            IGNORE ERRORS
         SPACE
         LA        R1,SYSCONS          INPUT TERMINAL FILE
         SVC       SVC202              FILEDEF THAT
         DC        AL4(*+4)            IGNORE ERRORS
         SPACE
         MVC       SYSUSRFM(2),WMODE   WORK FILE MODE
         LA        R2,9                MAX NUMBER OF USER FILES
         SR        R3,R3               START AT THE BEGINNING
FDEFUSR  DS        0H
         CVD       R3,DWORD            CONVERT TO DECIMAL
         OI        DWORD+7,X'0F'       FIX THE SIGN
         UNPK      SYSUSRDD+6(2),DWORD+6(2) ENTER FILE NUMBER
         UNPK      SYSUSRFN+6(2),DWORD+6(2) AND AGAIN
         LA        R1,SYSUSR           POINT TO FILEDEF
         SVC       SVC202              AND DEFINE IT
         DC        AL4(*+4)            IGNORE ERRORS
         LA        R3,1(,R3)           BUMP FILE NUMBER
         CR        R3,R2               DONE THEM ALL .Q
         BNH       FDEFUSR             BRANCH IF NOT
         SPACE
         CLI       OPTSCRSW,OPTSCRNO   'NOSCREEN' OPTION REQUIRED .Q
         BE        FDEFNSCR            BRANCH IF YES
         LA        R1,CLEARSCR         TO CLEAR A SCREEN
         SVC       SVC202              DO IT
         DC        AL4(*+4)            IGNORE AN ERROR
         SPACE
FDEFNSCR DS        0H
         STRINIT   ,                   INITIALIZE FREE STORAGE
         LA        R1,PARMLIST         POINT TO PARM ADDRESSES
         L         R15,VSCRIPT         GET SCRIPT ENTRY ADDRESS
         BALR      R14,R15             GO DO IT IF YOU CAN
         SPACE
CMSRET   DS        0H
         LR        R2,R15              SAVE RETURN CODE
         LA        R1,FINIS            TO TERMINATE
         SVC       SVC202              DO IT
         DC        AL4(*+4)            IGNORE ERRORS
         LA        R1,CLEARALL         CLEAR ALL MY FILEDEFS
         SVC       SVC202              DO IT
         DC        AL4(*+4)            IGNORING ALL ERRORS
         LR        R15,R2              RESTORE RETURN CODE
         L         R13,4(,R13)         RESTORE CALLER'S SAVE POINTER
         L         R14,12(,R13)        RESTORE RETURN REGISTER
         LM        R0,R12,20(R13)      RESTORE THE REST
         BR        R14                 GO BACK
         EJECT
*        ERROR MESSAGES
         SPACE
         PRINT     NOGEN
ERROMIT  DS        0H
         WRTERM    'OMITTED FILENAME'
         LA        R15,20              RETURN CODE
         B         CMSRET              AND QUIT
         SPACE
ERRMUCH  DS        0H
         WRTERM    'INVALID PARM SPECIFICATION'
         LA        R15,20              RETURN CODE
         B         CMSRET              AND QUIT
         SPACE
ERRMIS   DS        0H
         WRTERM    'ODD NUMBER OF SYSVAR ARGUMENTS'
         LA        R15,20              RETURN CODE
         B         CMSRET              AND QUIT
         SPACE
NOINFILE DS        0H
         LA        R2,NOINMSG          MESSAGE AREA
         MVC       NOINMSGN(8),ISTATEN      FILE NAME
         MVC       NOINMSGN+9(8),ISTATEN+8  FILE TYPE
         LA        R3,NOINMSGE-NOINMSG ERROR MESSAGE LENGTH
         WRTERM    (R2),(R3)           DO IT
         LA        R15,20              RETURN CODE
         B         CMSRET              AND QUIT
         SPACE
*        USER QUERY
         SPACE
EXPLAIN  DS        0H
         LA        R1,TYPEMEMO         POINT TO EXPLAIN PLIST
         SVC       SVC202              DO IT
         DC        AL4(*+4)            IGNORE ERRORS
         SR        R15,R15             SET RETURN CODE
         B         CMSRET              RETURN TO CALLER
         EJECT
*        DATA AND WORK AREA
         SPACE
CMSSAREA DC        18F'0'              O/S SAVE AREA
DWORD    DC        D'0'                DOUBLE WORD WORK AREA
PARMLIST DC        A(PSPACE)           PARM OPTIONS ADDRESS
         DC        A(PDDOVER)          OVERRIDING DDNAMES ADDRESS
         DC        X'80',AL3(SCRIPTTR) ROUTINE TRAP ADDRESSES
         SPACE
PSPACE   DC        H'0',CL256' '       O/S PARM AREA
PDDOVER  DC        AL2((PDDEND-*-2)/16)  OVERRIDE COUNT
PDDNAME  DC        CL8'SYSIN',CL8'*'     OVERRIDE NAMES
PDDEND   EQU       *
         SPACE
OPTOUT1  DC        X'00'               OUTPUT OPTION ONE
OPTOTERM EQU       X'00'*2                  TERMINAL OUTPUT
OPTOPRNT EQU       X'01'*2                  PRINTER OUTPUT
OPTODUMY EQU       X'02'*2                  DUMMY OUTPUT
OPTOUT2  DC        X'00'               OUTPUT OPTION TWO
OPTONOFI EQU       X'00'                    OUTPUT NOT TO A FILE
OPTOFILE EQU       X'01'                    OUTPUT TO A FILE
         SPACE
SVC202   EQU       202                 CMS SVC
         SPACE
NOINMSG  DC        C'FILE '''
NOINMSGN DC        CL17' '
         DC        C''' NOT FOUND'
NOINMSGE EQU       *
         SPACE
SCREEN   DC        C'SCREEN'           SCREEN PARM FOR CRTS
GRAFCON  DC        X'40'               GRAPHICS DEVICE
OPTSCRSW DC        X'00'               SCREEN OPTION SWITCH
OPTSCRNO EQU       X'00'                    'NOSCREEN' OPTION
OPTSCROK EQU       X'01'                    'SCREEN' OPTION
         SPACE
PROFILE  DC        C'PROFILE'          AUTO PROFILE OPTION
         SPACE
         DS        0H                  ALIGN POSSIBLE OPTIONS
OPTOUTS  DS        0CL18               OUTPUT OPTIONS
         DC        CL8'TERMINAL',AL2(1)
         MVI       OPTOUT1,OPTOTERM         TERMINAL OUTPUT
         MVI       OPTOUT2,OPTONOFI         AND NOT TO A FILE
         DC        CL8'ONLINE  ',AL2(1)
         MVI       OPTOUT1,OPTOTERM         TERMINAL OUTPUT
         OI        OPTOUT2,X'00'            TO FILE OR NOT
         DC        CL8'MEMO    ',AL2(3)
         MVI       OPTOUT1,OPTOTERM         TERMINAL OUTPUT
         MVI       OPTOUT2,OPTOFILE         AND TO A FILE
         DC        CL8'PRINTER ',AL2(1)
         MVI       OPTOUT1,OPTOPRNT         PRINTER OUTPUT
         MVI       OPTOUT2,OPTONOFI         AND NOT TO A FILE
         DC        CL8'PRT     ',AL2(1)
         MVI       OPTOUT1,OPTOPRNT         PRINTER OUTPUT
         MVI       OPTOUT2,OPTONOFI         AND NOT TO A FILE
         DC        CL8'OFFLINE ',AL2(1)
         MVI       OPTOUT1,OPTOPRNT         PRINTER OUTPUT
         OI        OPTOUT2,X'00'            AND TO A FILE OR NOT
         DC        CL8'DISK    ',AL2(1)
         MVI       OPTOUT1,OPTOPRNT         PRINTER OUTPUT
         MVI       OPTOUT2,OPTOFILE         AND TO A FILE
         DC        CL8'NOPRINT ',AL2(3)
         MVI       OPTOUT1,OPTODUMY         NO OUTPUT
         MVI       OPTOUT2,OPTONOFI         AND NOT TO A FILE
         DC        CL8'NOPRT   ',AL2(3)
         MVI       OPTOUT1,OPTODUMY         NO OUTPUT
         MVI       OPTOUT2,OPTONOFI         AND NOT TO A FILE
         DC        CL8'FILE    ',AL2(1)
         OI        OPTOUT1,X'00'            OUTPUT TARGET UNCHANGED
         MVI       OPTOUT2,OPTOFILE         AND TO A FILE
         DC        CL8'NOFILE  ',AL2(3)
         OI        OPTOUT1,X'00'            OUTPUT TARGET UNCHANGED
         MVI       OPTOUT2,OPTOFILE         AND TO A FILE
         SPACE
         DC        CL8'SCREEN  ',AL2(3)
         MVI       OPTSCRSW,OPTSCROK        SET 'SCREEN' OPTION
         OI        OPTSCRSW,X'00'           AND THAT'S ALL
         DC        CL8'NOSCREEN',AL2(5)
         MVI       OPTSCRSW,OPTSCRNO        SET 'NOSCREEN' OPTION
         OI        OPTSCRSW,X'00'           AND THAT'S ALL
         DC        8X'FF'
         SPACE
TYPEMEMO DC        0D'0',CL8'TYPE'
         DC        CL8'SCRIPT'
         DC        CL8'MEMO'
         DC        CL8'Y'
         DC        8X'FF'
         SPACE
ISTATE   DC        0D'0',CL8'STATE'
ISTATEN  DC        CL8'*'
         DC        CL8'SCRIPT'
ODE      DC        CL2'00'
         DC        CL2'00'
AFSTCOPY DC        A(*-*)              ADDR OF FST COPY LOCATION
         SPACE
PRFSTATE DC        0D'0',CL8'STATE'
         DC        CL8'PROFILE'
         DC        CL8'SCRIPT'
PRFODE   DC        CL2'00'
         DC        CL2'00'
PRFFST   DC        A(*-*)
         SPACE
ADTLIST  DC        0D'0',CL24' '
ADTPARM  DC        CL2'  '             CODE FOR ADTLKW CALLS
         SPACE
IERASE   DC        0D'0',CL8'ERASE'
IERASEN  DC        CL8'*'              ERASE FILE NAME
IERASET  DC        CL8'*'              ERASE FILE TYPE
IERASEM  DC        CL8'**'             ERASE FILE MODE
         DC        8X'FF'
         SPACE
FINIS    DC        0D'0',CL8'FINIS'
         DC        3CL8'*'
         DC        8X'FF'
         SPACE
CLEARALL DC        0D'0',CL8'FILEDEF'
         DC        CL8'*'
CLEARSCR DC        CL8'CLEAR'
         DC        8X'FF'
         SPACE
PROMPT   DC        C' ENTER ',CL130' ' DISPLAY AND READ
         SPACE
WMODE    DC        C'**'               SOME FILE MODE
DWMODE   DC        C'A1'               DEFAULT FILE MODE
         SPACE
NUMTABLE DC        256X'FF'
         ORG       NUMTABLE+C'('
         DC        X'00'               LEFT PAREN
         ORG       NUMTABLE+C')'
         DC        X'00'               RIGHT PAREN
         ORG       NUMTABLE+C':'
         DC        X'00'               COLON
         ORG       NUMTABLE+C'K'
         DC        X'00'               'K' FOR 1024
         ORG       NUMTABLE+C'0'
         DC        10X'00'             NUMBERS ZERO TO NINE
         ORG
         SPACE
OUTPUTT  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSPRINT'
         DC        CL8'TERMINAL'
         DC        CL8'('
         DC        CL8'RECFM'
         DC        CL8'VA'
         DC        CL8'BLOCK'
         DC        CL8'240'
         DC        CL8'LRECL'
         DC        CL8'236'
         DC        CL8'NOCHANGE'
         DC        8X'FF'
         SPACE
OUTPUTP  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSPRINT'
         DC        CL8'PRINTER'
         DC        CL8'('
         DC        CL8'RECFM'
         DC        CL8'VA'
         DC        CL8'BLOCK'
         DC        CL8'141'
         DC        CL8'LRECL'
         DC        CL8'137'
         DC        CL8'NOCHANGE'
         DC        8X'FF'
         SPACE
OUTPUTD  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSPRINT'
         DC        CL8'DISK'
OUTDNAM  DC        CL8'*'
OUTDTYP  DC        CL8'LISTING'
OUTDMOD  DC        CL8'*'
         DC        CL8'('
         DC        CL8'RECFM'
         DC        CL8'VA'
         DC        CL8'BLOCK'
         DC        CL8'141'
         DC        CL8'LRECL'
         DC        CL8'137'
         DC        CL8'NOCHANGE'
         DC        8X'FF'
         SPACE
OUTPUTM  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSPRINT'
         DC        CL8'DISK'
OUTMNAM  DC        CL8'*'
OUTMTYP  DC        CL8'MEMO'
OUTMMOD  DC        CL8'*'
         DC        CL8'('
         DC        CL8'RECFM',CL8'V'
         DC        CL8'BLOCK',CL8'141'
         DC        CL8'LRECL',CL8'137'
         DC        CL8'NOCHANGE',8X'FF'
         SPACE
OUTPUTX  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSPRINT',CL8'DUMMY'
         DC        CL8'('
         DC        CL8'RECFM',CL8'VA'
         DC        CL8'BLOCK',CL8'141'
         DC        CL8'LRECL',CL8'137'
         DC        CL8'NOCHANGE',8X'FF'
         SPACE
SYSTERM  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSTERM'
         DC        CL8'TERMINAL'
         DC        CL8'('
         DC        CL8'RECFM'
         DC        CL8'VA'
         DC        CL8'LRECL'
         DC        CL8'137'
         DC        CL8'BLOCK'
         DC        CL8'141'
         DC        CL8'NOCHANGE'
         DC        8X'FF'
         SPACE
SYSCONS  DC        0D'0',CL8'FILEDEF'
         DC        CL8'SYSCONS'
         DC        CL8'TERMINAL'
         DC        CL8'('
         DC        CL8'RECFM'
         DC        CL8'V'
         DC        CL8'LRECL'
         DC        CL8'137'
         DC        CL8'BLOCK'
         DC        CL8'141'
         DC        CL8'NOCHANGE'
         DC        8X'FF'
         SPACE
SYSUSR   DC        0D'0',CL8'FILEDEF'
SYSUSRDD DC        CL8'SYSUSR**'
         DC        CL8'DISK'
SYSUSRFN DC        CL8'SYSUSR**'
         DC        CL8'SCRIPT'
SYSUSRFM DC        CL8'**'
         DC        CL8'('
         DC        CL8'NOCHANGE'
         DC        8X'FF'
         SPACE
         DROP      ,                   FORGET ALL BASES
         LTORG
         EJECT
*        TABLE OF VCONS TO DRIVE CMS LOADER
         SPACE
VSCRIPT  DC        V(SCRIPTW)          MAIN SCRIPT ROUTINE AND ENTRY
         DC        V(SCRIPTFO)         FORMATTING AND LINKING ROUTINES
         DC        V(SCRIPTOU)         SUBROUTINE FUNCTIONS
         DC        V(SCRIPTCW)         CONTROL WORD PROCESSING
         DC        V(SCRIPTRD)         READER ROUTINES
         DC        V(SCRIPTHY)         HYPHENATION ROUTINES
         DC        V(SCRIPTMC)         INCORE FORMATTING ROUTINES
         DC        V(SCRIPTPM)         PARM SCANNER
         DC        V(SCRIPTSY)         SYSTEM INTERFACE INTERFACE
         DC        V(SYSINT)           SYSTEM INTERFACE
         SPACE
         ORG       CMSCRIPT+4096-8
         SPACE
         ADT
         DEVTAB
         FSTB
         NUCON
         EJECT
        $SCRCVT    DSECT=YES,DOC=NOGEN
         SPACE 2
        $NSCDAT    DSECT=YES,DOC=NOGEN
         SPACE 2
         COPY      #DSECTS
R2       EQU       COUNT               CMSCRIPT EQUIVALENT
R3       EQU       TEMP                CMSCRIPT EQUIVALENT
R12      EQU       BASE                CMSCRIPT EQUIVALENT
         EJECT
SCRIPTTR $VERSION ,                    IDENTIFY AND INITIALIZE
         EJECT
*        ENTER TEST ROUTINES HERE
************************
         SPACE
SCRIPTTR CSECT     ,
         DC        X'80',AL3(0)        MARK END OF THE LIST
         SPACE
         END
