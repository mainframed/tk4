.cm SCRIPT REFERENCE IF
.SUBT Purpose
The IF control word causes the next input line to be
processed or not depending on the result of a comparison.
.SUBT Format
×                S1  "op"  S2  <line>
×  .IF
×                n1  "op"  n2  <line>
.SUBT
.fo
.sp 1
Where:
.sp 1
.of 5
S1 and S2 are undelimited character strings, starting with an
alphabetic and not containing blanks
or delimited character strings that contain blanks,
.of 5
n1 and n2 are decimal integers or expressions containing no
blanks, and
.of 5
"op" is one of the following delimited before and after by
at least one blank:
.sp 1
     =    or   EQ   -   equal
     ^=   or   NE   -   not equal
     <    or   LT   -   less than
     >    or   GT   -   greater than
     <=   or   LE   -   less than or equal
     >=   or   GE   -   greater than or equal
.sp
.of 5
<line> is a command or text line starting one blank after the
second operand.
.SUBT Usage
If the comparison operation is true, the <line> operand is processed
normally.
If the <line> operand is omitted then the next logical
input line is processed normally.  Otherwise, the next input
line is skipped (ignored).  The next logical input line is up to the
first following control word separator (see .CW) or the next
physical input record, whichever occurs first.
.sp
As an alternative to the logical record immediately following
being used in the "true" case and ignored in the "false" case
the then (.TH) and else (.EL) control words may be used instead.
In this second mode the .TH case is executed if the .IF is "true"
and the .EL case if the .IF is "false".
A series of .IFs may be nested up to ten levels by making an .IF
the object of a .TH or an .EL.
See descriptions of THEN and ELSE for more information.
.sp 1
If the first operand begins with a delimiter, normally "'",
or with an alphabetic, the comparison
will be between two character strings using the standard EBCDIC
collating sequence.
.sp 1
If the first operand begins with "+", "-", "(" or a numeric,
the comparison will be
between two signed decimal integers.
.sp
Multiple comparisons may be done in one statement by using one of the
following operations between comparisons.
Evaluation of multiple comparisons is done left to right.
.sp
         AND or &, OR or ×
.SUBT Defaults
This command does not create a break when encountered.
.SUBT Notes
.of 4
(1) If the two character strings to be compared have unequal
lengths, then the comparison will be done from the start
of both strings with the minimum length of the two.
If that is equal then the shorter string is considered
to be the smaller.
.SUBT Examples
.tr ^ .
.of 4
(1) ^sr a % / 2 * 2 - %
.br
^ur .if &a = 0
.br
Will cause the next input line to be processed if the
current page number is even.
.sp 1
.of 4
(2) ^if 'A' eq A
.br
This will always be a true character comparison.
.sp 1
.of 4
(3) ^if 9 EQ +9
.br
This will always be a true numeric comparison.
.sp
.cp 5
.of 4
(4) ^if &number = 'roman' or &number = 'ROMAN'
.br
^th ^pn roman;^el ^pn arabic
.br
This will set subsequent page numbering to roman numerals or
arabic numerals depending on the value of variable "&number".
.tr ^
.cm End of IF
