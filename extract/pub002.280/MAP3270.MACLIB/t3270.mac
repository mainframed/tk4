         MACRO
&NAME    T3270 &MODE=,&BUFLEN=2048,&PLI=,&UCODE=3270,&DEBUG=NO
.*********************************************************************
.*
.*  (C) COPYRIGHT 2009  CEDAR LAKE EMPORIUM LLC   ALL RIGHTS RESERVED
.*
.*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS
.*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED
.*  AND FOR NON-COMERCIAL PURPOSES.
.*
.*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER.
.*
.*         REVISED     DESCRIPTION
.*         ----------  -----------------------------------------------
.*  1.0.0              RERELASED AND TEST USING HERCULES
.*  1.1.0  01/06/2011  ADDED SUPPORT FOR COLOR EXTENDED ATTRIBUTES.
.*
.*********************************************************************
         AIF   ('&MODE' EQ 'STANDALONE').MODEOK
         AIF   ('&MODE' EQ 'NORMAL').MODEOK
         MNOTE 12,'*** T3270 INVALID MODE ***'
         MEXIT
.*
.MODEOK  ANOP
         AIF   (T'&PLI EQ 'O').NOPLI
         AIF   ('&PLI' EQ 'NO').NOPLI
         AIF   ('&PLI' EQ 'F').YESPLI
         MNOTE 12,'*** PLI OPTION MUST BE F OR OMITTED ***'
         MEXIT
.YESPLI  AIF   ('&MODE' NE 'STANDALONE').NOPLI
         MNOTE 12,'*** STANDALONE CANNOT HAVE PLI SPECIFIED ***'
         MEXIT
.NOPLI   ANOP
         AIF   (T'&DEBUG EQ 'O').DBUGBAD
         AIF   ('&DEBUG' EQ 'NO').DBUGOK
         AIF   ('&DEBUG' EQ 'BOTH').DBUGOK
         AIF   ('&DEBUG' EQ 'TPUT').DBUGOK
         AIF   ('&DEBUG' EQ 'TGET').DBUGOK
.DBUGBAD ANOP
         MNOTE 12,'*** DEBUG INVALID VALUE ***'
         MEXIT
.DBUGOK  ANOP
         GBLC  &GMODE
         GBLC  &LANG
&GMODE   SETC  '&MODE'
&LANG    SETC  '&PLI'
.*
         AIF   ('&MODE' NE 'NORMAL').NOTNOR1
         AIF   ('&LANG' NE 'F').SKPPL1F
.* GENERATE PLI(F) LINKAGE
**NAME   ESTART TYPE=START,VER='2.0.0',REGS=YES,BASE=R12,
**             DESC='3270 FULLSCREEN IO FOR PL/I(F) BUFLEN=&BUFLEN'
&NAME    ESTART TYPE=START,VER='2.0.0',REGS=YES,BASE=R12,              *
               DESC='3270 FULLSCREEN IO FOR PL/I(F) BUFLEN=&BUFLEN'
*
*  GET ADDRESS OF PLI(F) PARM LIST. EACH ADDRESS POINTS TO A DATA
*      CONTROL BLOCK.  OFFSET +0 OF EACH BLOCK HAS THE ACTUAL
*      DATA
*
         MVC   USERPARM,4(R1)          SAVE INTERFACE AREA
         NI    USERPARM,X'7F'          TURN OF HIGH ORDER BIT
         L     R7,USERPARM
         L     R7,0(0,7)
         ST    R7,USERPARM
         L     R7,0(0,R1)              GET IOCB BLK ADDRESS
         L     R7,0(0,R7)              GET ACTUAL ADDRESS
         AGO   .PLIDONE
.SKPPL1F ANOP
**NAME   ESTART TYPE=START,DESC='3270 FULLSCREEN IO BUFLEN=&BUFLEN',
**             VER='2.0.0',REGS=YES,BASE=R12
&NAME    ESTART TYPE=START,DESC='3270 FULLSCREEN IO BUFLEN=&BUFLEN',   *
               VER='2.0.0',REGS=YES,BASE=R12
*
*  GET ADDRESS OF PARM LIST.  PARM1 IS THE IOCB, PARM2 IS
*      PANEL INTERFACE.
*
         L     R7,0(0,R1)              GET IOCB ADDRESS
         MVC   USERPARM,4(R1)          SAVE INTERFACE AREA
         NI    USERPARM,X'7F'          TURN OF HIGH ORDER BIT
.PLIDONE ANOP
         USING IOCB,R7                 ESTABLISH BR FOR IOCB
         CLC   IOCBFUNC,=C'STRT'       IS IT A STRT?
         BNE   NOTSTRT
         L     R2,IOCBADR             IOCBADR MUST BE ZEROS FOR STRT
         LTR   R2,R2
         BZ    STRTOK
**       WTO   'MAP3270-&NAME INVALID STRT',ROUTCDE=11
         WTO   'MAP3270-&NAME INVALID STRT',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
STRTOK   EQU   *
**       STFSMODE ON,INITIAL=YES
         STFSMODE ON,INITIAL=YES
**       STTMPMD ON,KEYS=ALL
         STTMPMD ON,KEYS=ALL
         LA    R2,INBUF                COPY ADDRESS OF
         ST    R2,IOCBADR                INBUF TO
         LA    R2,INBUFLN                   CONTROL
         STH   R2,IOCBLEN                     BLOCK
         B     LEAVE
NOTSTRT  EQU   *
         CLC   IOCBFUNC,=C'END '
         BNE   NOTEND
         L     R2,IOCBADR             IOCBADR MUST BE NON ZERO FOR END
         LTR   R2,R2
         BNZ   ENDOK
**       WTO   'MAP3270-&NAME INVALID END',ROUTCDE=11
         WTO   'MAP3270-&NAME INVALID END',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
ENDOK    EQU   *
         MVI   IOCB,X'00'
         MVC   IOCB+1(IOCBLN-2),IOCB
         B     EXIT
NOTEND   EQU   *
*
.NOTNOR1 ANOP
         AIF   ('&MODE' NE 'STANDALONE').NOTSA1
**       STFSMODE ON,INITIAL=YES
         STFSMODE ON,INITIAL=YES
**       STTMPMD ON
         STTMPMD ON,KEYS=ON
         LA    R11,TPARM           GET ADDR OF FAKE USER AREA
         ST    R11,USERPARM
LOOP     EQU   *
.NOTSA1  ANOP
*
*   GET THE ADDRESSES OF THE USERPARM, THE PANEL AND THE MAPPING TBL
*
         L     R11,USERPARM        GET ADDR OF USER PARM AREA
         USING USRPARM,R11
*
         LOAD  EPLOC=USRPNAM
         ST    R0,USRPADR
*
         LA    R2,USRTBL           GET ADDR OF USER TABLE
         USING USRMAP,R2
*
         L     R10,USRPADR         GET PANEL LOAD MODULE ADDRESS
         L     R1,0(0,R10)         GET PANEL ADDRESS
         ST    R1,PANLADDR
         L     R1,8(0,R10)         GET ADDR OF CURSOR
         MVC   0(2,R1),=X'4040'    RESET BUFFER ADDR
         CLC   UCUR,=X'0000'       IF THE CURSOR IS NULL
         BE    DEFLTSBA              DON'T MOVE IT
         MVC   0(2,R1),UCUR        MOVE THE PASSED BUFF ADDR
DEFLTSBA EQU   *
         L     R3,4(0,R10)         GET ADDR OF OUTPUT MAPPING
         ST    R3,MAPADDR
         USING TINPMAP,R3
         CLC   TISBA,=X'0000'      IS THE END OF TABLE FIRST ITEM?
         BZ    DONEOUT             YES, BRANCH
LOOPOUT  EQU *
         CLC   USRLEN,TILEN        COMPARE OUTLN:MAPLN
         BNE   NOMATCH             BRANCH IF MISMATCH
         LH    R4,TILEN            GEN LENGTH
         LTR   R4,R4               ZERO?
         BZ    DONEOUT             YES, BRANCH
         BCTR  R4,R0
         L     R5,TIFLD
         EX    R4,MVCOUT
         CLI   USRCUR,X'40'        IS CURSOR FLAG SET?
         BNH   NEXTFLD             NO, BRANCH
         MVC   0(2,R1),TISBA       MOVE THE PASSED BUFF ADDR
         MVI   USRCUR,X'40'        RESET USER CURSOR FLAG
NEXTFLD  EQU   *
         LA    R2,4(R4,R2)
         LA    R3,TINPMAPL(0,R3)
         B     LOOPOUT
MVCOUT   MVC 0(0,R5),USRFLD
NOMATCH  EQU *
**       WTO   'MAP3270-&NAME MAP MATCH ERROR',ROUTCDE=11
         WTO   'MAP3270-&NAME MAP MATCH ERROR',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
DONEOUT  EQU *
         L     R10,PANLADDR
         LH    R3,0(0,R10)
         SH    R3,=H'2'
**       TPUT  2(R10),(R3),FULLSCR
         TPUT  2(R10),(R3),FULLSCR
         LTR   R15,R15                 CHECK FOR FAILURE
         BNZ   TPUTERR                 YES, BRANCH
         CLC   IOCBFUNC,=C'PUT '       IF PUT ONLY,
         BNE   NOTPUT                    CLEAR UAID AND CURSOR
         MVC   UAID(3),=3X'00'             AND RETURN
         B     LEAVE
TPUTERR  EQU   *
**       WTO   'MAP3270-&NAME TPUT RC XX (DEC)',ROUTCDE=11
TPUTWTO1 WTO   'MAP3270-&NAME TPUT RC XX (DEC)',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
NOTPUT   EQU   *
         CLC   IOCBFUNC,=C'PG  '       IF PG OR IO
         BE    DOGET                      CONTINUE TO TGET
         CLC   IOCBFUNC,=C'IO  '       OTHERWISE
         BE    DOGET                      ABORT
**       WTO   'MAP3270-&NAME INVALID FUNCTION',ROUTCDE=11
         WTO   'MAP3270-&NAME INVALID FUNCTION',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
DOGET    EQU   *
         MVI   INBUF,X'00'
         MVC   INBUF+1(255),INBUF
*
**       TGET  INBUF,INBUFLN,ASIS
         TGET  INBUF,INBUFLN,ASIS
         LTR   R15,R15            CHECK FOR FAILURE
         BZ    TGETOK             NO, BRANCH
**       WTO   'MAP3270-&NAME TGET RC XX (DEC)',ROUTCDE=11
TGETWTO1 WTO   'MAP3270-&NAME TGET RC XX (DEC)',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
TGETOK   EQU   *
         MVC   UAID(3),INBUF       MOVE THE AID AND CUR
         AIF   ('&MODE' NE 'STANDALONE').SKPSA1
         CLI   UAID,X'F3'
         BE    EXIT
         MVC   R21C01D(79),INBUF
         MVC   R22C01D(79),INBUF
         MVC   R23C01D(79),INBUF
         TR    R21C01D(79),CHRTBL
         TR    R22C01D(79),HITBL
         TR    R23C01D(79),LOTBL
****
         UNPK  WORK3,TAID(2)
         TR    WORK3(2),TRTAB-C'0'
         MVC   R12C46D,WORK3
         MVC   CNVWRK(2),TSBA
         LH    R2,CNVWRK
         CVD   R2,DWORD
         UNPK  R12C49D(5),DWORD+5(3)
         OI    R12C49D+4,X'F0'
.SKPSA1  ANOP
**********************************************************************
*                                                                    *
*  THE BUFFER RETURNED BY TGET HAS EACH FIELD RETURNED WITH A 3      *
*  BYTE PREFIX - X'11' PLUS BUFFER ADDRESS.                          *
*                                                                    *
*  TO MAP BACK TO THE USER AREA, THERE IS A XREF MAP GENERATED AS    *
*  PART OF THE PANEL.  THIS XREF HAS THE BUFFER ADDR, THE ADDR OF    *
*  THE USER FIELD AND THE MAX LENGTH OF THE FIELD.  NOTE THAT THIS   *
*  ROUTINE DOES NOT MAP BACK TO THE PANEL BUT TO THE USER AREA.      *
*                                                                    *
**********************************************************************
         LA    R2,USRTBL           GET TO THE USER TABLE
         LA    R6,INBUF+3
         LA    R9,MAXFLDS          LIMIT INPUT FIELDS TO MAX POSSIBLE
**                                 TO PREVENT RUNAWAY LOOPS
         L     R3,MAPADDR
         CLC   TISBA,=X'0000'      SEE IF 1ST DATA FIELD IS END OF TAB.
         BE    ALLDONE             IF SO, BRANCH TO EXIT.
LOOPIN   EQU *
         L     R3,MAPADDR
*
*  FIND THE BUFFER ADDRESS IN THE XREF TABLE.
*
         CLI   0(R6),X'11'         CHECK FOR SBA
         BE    FNDSBA              IF SO, CONTINUE
         CLI   0(R6),X'00'         END OF MESSAGE FROM 3270?
         BE    DONEIN
**       WTO   'MAP3270-&NAME INVALID INPUT MSG',ROUTCDE=11
         WTO   'MAP3270-&NAME INVALID INPUT MSG',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
FNDSBA   EQU   *
         CLC   TISBA,1(R6)         COMPARE THE SBA.
         BE    FNDTSBA             IF SO, BRANCH
         LA    R3,TINPMAPL(,R3)    TRY NEXT ENTRY
         CLC   TISBA,=X'0000'      TEST FOR END OF TABLE
         BNE   FNDSBA              IF NOT END,  TRY NEXT THIS ENTRY
**       WTO   'MAP3270-&NAME INPUT MAPPING ERROR',ROUTCDE=11
         WTO   'MAP3270-&NAME INPUT MAPPING ERROR',ROUTCDE=11
**       ABEND &UCODE,DUMP,,USER
         ABEND &UCODE,DUMP,,USER
FNDTSBA  EQU   *
*
*   CALCULATE THE LENGTH OF THE DATAFIELD
*
         LA    R8,3(,R6)              GET ADDR OF 1ST BYTE
NXTSBA   CLI   0(R8),X'11'            IF THIS AN SBA?
         BE    GOTLEN                 YES, BRANCH
         CLI   0(R8),X'00'            IF END OF MSG?
         BE    GOTLEN
         LA    R8,1(,R8)              BUMP UP THE CHARACTER
         B     NXTSBA
GOTLEN   EQU   *
         SR    R8,R6                  CALCULATE FLD LEN
         S     R8,=F'3'
*
         LH    R4,TILEN               GEN LENGTH
         LTR   R4,R4                  ZERO?
         BZ    DONEIN                 YES, BRANCH
         BCTR  R4,0
         L     R5,TIFLD
         EX    R4,MVCSP
         LH    R4,TILEN               GEN LENGTH
         CR    R8,R4
         BE    LENOK
         BH    LENOK
         LR    R4,R8
LENOK    EQU   *
         BCTR  R4,R0
         EX    R4,MVCIN
         LA    R6,3(R8,R6)
         BCT   R9,LOOPIN
         B     DONEIN                 ONLY PROCESS LIMITED FIELDS
MVCIN    MVC   0(0,R5),3(R6)
MVCSP    MVC   0(0,R5),SPACES
NOMATCHI EQU *
**       WTO   'MAP3270-&NAME MAPPING ERROR',ROUTCDE=11
         WTO   'MAP3270-&NAME MAPPING ERROR',ROUTCDE=11
**       ABEND &UCODE,DUMP,,USER
         ABEND &UCODE,DUMP,,USER
DONEIN   EQU *
****     B     ALLDONE
*
*  MAP DATA BACK TO USER AREA
*
         LA    R9,MAXFLDS     LIMIT INPUT FIELDS
         L     R10,PANLADDR
         LA    R2,USRTBL           GET ADDR OF USER TABLE
         L     R3,MAPADDR
         USING TINPMAP,R3
LOOPRET  EQU *
         CLC   USRLEN,TILEN        COMPARE OUTLN:MAPLN
         BNE   NOMATCHR            BRANCH IF MISMATCH
         LH    R4,TILEN            GEN LENGTH
         LTR   R4,R4               ZERO?
         BZ    ALLDONE             YES, BRANCH
         BCTR  R4,R0
         L     R5,TIFLD
         EX    R4,MVCRET
         LA    R2,4(R4,R2)
         LA    R3,TINPMAPL(0,R3)
         BCT   R9,LOOPRET
         B     ALLDONE
MVCRET   MVC   USRFLD(0),0(R5)
NOMATCHR EQU *
**       WTO   'MAP3270-&NAME MAP BACK ERROR',ROUTCDE=11
         WTO   'MAP3270-&NAME MAP BACK ERROR',ROUTCDE=11
**       ABEND &UCODE,,,USER
         ABEND &UCODE,,,USER
****
ALLDONE  EQU   *
         AIF   ('&MODE' NE 'STANDALONE').ENDSTD1
         B     LOOP
         AGO   .EXIT
*
.ENDSTD1 ANOP
         B     LEAVE
.EXIT    ANOP
**IT     STLINENO LINE=1
EXIT     STLINENO LINE=1
**       STFSMODE OFF
         STFSMODE OFF
**       STTMPMD OFF
         STTMPMD OFF
**AVE    ERETURN RC=0
LEAVE    ERETURN RC=0
*
SPACES   DC    CL80' '
         AIF   ('&MODE' NE 'STANDALONE').SKPTRTS
CNVWRK   DS    F
DWORD    DS    D
WORK3    DC    XL3'00'
         DS    CL240
TRTAB    DC    C'0123456789ABCDEF'
*
MEMDISP  DS    0H
CHRTBL   DC    8CL16'................'
*                     A B C D E F G H I
         DC    XL16'4B8182838485868788894B4B4B4B4B4B' X'8X'
*                     J K L M N O P Q R
         DC    XL16'4B9192939495969798994B4B4B4B4B4B' X'9X'
*                       S T U V W X Y Z
         DC    XL16'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B' X'AX'
         DC    CL16'................'   X'BX'
         DC    CL16'.ABCDEFGHI......'   X'CX'
         DC    CL16'.JKLMNOPQR......'   X'DX'
         DC    CL16'..STUVWXYZ......'   X'EX'
         DC    CL16'0123456789......'   X'FX'
HITBL    DC    16C'0'
         DC    16C'1'
         DC    16C'2'
         DC    16C'3'
         DC    16C'4'
         DC    16C'5'
         DC    16C'6'
         DC    16C'7'
         DC    16C'8'
         DC    16C'9'
         DC    16C'A'
         DC    16C'B'
         DC    16C'C'
         DC    16C'D'
         DC    16C'E'
         DC    16C'F'
LOTBL    DC    16CL16'0123456789ABCDEF'
.SKPTRTS ANOP
USERPARM DS    F
PANLADDR DS    F
MAPADDR  DS    F
RCODE    DC    H'0'
ONE      DC    H'1'
         LTORG
         DC    CL16'**START INBUF**'
INBUF    DS    CL&BUFLEN
INBUFLN  EQU   &BUFLEN
MAXFLDS  EQU   960
         AIF   ('&MODE' NE 'NORMAL').MEXIT
*        T3270D
         T3270D
.MEXIT   ANOP
         MEND
