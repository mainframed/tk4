         MACRO
         ASMADATA &PRINT=NOGEN,&JID=NO,&OPT=NO,&ESD=NO,&SOURCE=NO,     X
               &SRCERR=NO,&DCDS=NO,&MACH=NO,&SYM=NO,&XREF=NO,          X
               &USING=NO,&RLD=NO,&MXREF=NO,&STATS=NO,&MXREFX=NO,       X
               &OUTPUT=NO,&USER=NO,&AID=NO,&COMPUNIT=NO,&DCDSX=NO,     X
               &RXREF=NO
.**************************************************************
.*   Licensed Materials - Property of IBM                     *
.*                                                            *
.*   5696-234                                                 *
.*                                                            *
.*   (c) Copyright IBM Corp. 1975, 1998. All Rights Reserved. *
.*                                                            *
.*   US Government Users Restricted Rights - Use,             *
.*   duplication or disclosure restricted by GSA ADP          *
.*   Schedule Contract with IBM Corp.                         *
.*                                                            *
.**************************************************************
.***START OF SPECIFICATIONS  ******************************************
.*                                                                    *
.*MACRO NAME: ASMADATA                                                *
.*                                                                    *
.*DESCRIPTIVE NAME: Associated Data file mapping DSECT                *
.*                                                                    *
.*                                                                    *
.*FUNCTION: This macro produces a DSECT to map the associated data    *
.*          file records depending on the parameters passed to this   *
.*          macro.                                                    *
.*          Associated data file records are written to SYSADATA      *
.*          in MVS and CMS, and to SYSADAT in VSE.                    *
.*                                                                    *
.*NOTES:                                                              *
.*                                                                    *
.*  DEPENDENCIES: None                                                *
.*                                                                    *
.*  RESTRICTIONS: NONE                                                *
.*                                                                    *
.*  REGISTER CONVENTIONS: N/A                                         *
.*                                                                    *
.*  PATCH LABEL: NONE                                                 *
.*                                                                    *
.*MODULE TYPE: MACRO                                                  *
.*                                                                    *
.*  PROCESSOR: ASSEMBLER                                              *
.*                                                                    *
.*  MODULE SIZE: N/A                                                  *
.*                                                                    *
.*  ATTRIBUTES: N/A                                                   *
.*                                                                    *
.*ENTRY POINT: N/A                                                    *
.*                                                                    *
.*  PURPOSE: SEE FUNCTION                                             *
.*                                                                    *
.*  LINKAGE: N/A                                                      *
.*                                                                    *
.*  INPUT:                                                            *
.*                                                                    *
.*    REGISTERS: NONE                                                 *
.*                                                                    *
.*    OTHER:                                                          *
.*       PARAMETERS RECEIVED = PRINT, JID, OPT, ESD, SOURCE, SRCERR,  *
.*                             DCDS, MACH, SYM, XREF, USING, RLD,     *
.*                             MXREF, STATS, MXREFX, OUTPUT, USER,    *
.*                             AID, COMPUNIT, DCDSX                   *
.*       HOW PASSED: OPTIONAL POSITIONAL KEYWORD                      *
.*       PRINT = NOGEN will suppress the listing                      *
.*                 GEN will not suppress the listing                  *
.*       JID   = YES   will produce the Job Identificatio DSECT       *
.*               NO    will not produce the JID DSECT                 *
.*       OPT   = YES   will produce the Options DSECT                 *
.*               NO    will not produce Options DSECT                 *
.*       ESD   = YES   will produce the ESD DSECT                     *
.*               NO    will not produce Options DSECT                 *
.*       SOURCE= YES   will produce the SOURCE DSECT                  *
.*               NO    will not produce the SOURCE DSECT              *
.*       SRCERR= YES   will produce the SOURCE error DSECT            *
.*               NO    will not produce the SOURCE error DSECT        *
.*       DCDS  = YES   will produce the DC/DS DSECT                   *
.*               NO    will not produce the DC/DS DSECT               *
.*       MACH  = YES   will produce the Machine Instruction DSECT     *
.*               NO    will not produce the Mach Inst DSECT           *
.*       SYM   = YES   will produce the SYMBOL DSECT                  *
.*               NO    will not produce the SYMBOL DSECT              *
.*       XREF  = YES   will produce the CROSS REFERENCE DSECT         *
.*               NO    will not produce the CROSS REFERENCE DSECT     *
.*       USING = YES   will produce the USING DSECT                   *
.*               NO    will not produce the USING DSECT               *
.*       RLD   = YES   will produce the RLD DSECT                     *
.*               NO    will not produce the RLD DSECT                 *
.*       MXREF = YES   will produce the MACRO SOURCE SUMMARY  DSECT   *
.*               NO    will not produce the MACRO SOURCE SUM DSECT    *
.*       STATS = YES   will produce the STATISTICS DSECT              *
.*               NO    will not produce STATISTICS DSECT              *
.*       MXREFX= YES   will produce the MACRO CROSS REFERENCE DSECT   *
.*               NO    will not produce the MACRO CROSS REF  DSECT    *
.*       OUTPUT= YES   will produce the OUTPUT FILE DSECT             *
.*               NO    will not produce the OUTPUT FILE DSECT         *
.*       USER  = YES   will produce the USER DATA RECORD DSECT        *
.*                     (the ADATA instruction produces these records) *
.*               NO    will not produce the USER DATA RECORD DSECT    *
.*       AID   = YES   will produce the ADATA ID DSECT                *
.*               NO    will not produce the ADATA ID DSECT            *
.*     COMPUNIT= YES   will produce the ADATA COMPILATION UNIT DSECT  *
.*               NO    will not produce the ADATA COMPILATION UNIT DS *
.*       DCDSX = YES   will produce the DC Extension DSECT            *
.*               NO    will not produce the DC Extension DSECT        *
.*       RXREF = YES   will produce the Register Cross Reference DSECT*
.*               NO    will not produce the Register cross ref DSECT  *
.*                                                                    *
.*  OUTPUT:                                                           *
.*                                                                    *
.*    REGISTERS: NONE                                                 *
.*                                                                    *
.*    OTHER: DSECT                                                    *
.*                                                                    *
.*EXTERNAL REFERENCES:                                                *
.*                                                                    *
.*  PROCEDURES INVOKED: NONE                                          *
.*                                                                    *
.*  CONTROL BLOCKS:                                                   *
.*                                                                    *
.*    SYSTEM CONTROL BLOCKS: NONE                                     *
.*                                                                    *
.*INTERNAL TABLES: NONE                                               *
.*                                                                    *
.*MACROS ISSUED:                                                      *
.*                                                                    *
.*  SYSTEM MACROS: NONE                                               *
.*                                                                    *
.*  PRODUCT MACROS: NONE                                              *
.*                                                                    *
.*MESSAGES ISSUED: NONE                                               *
.*                                                                    *
.*                                                                    *
.*CHANGE ACTIVITY:                                                    *
.*  Flag Reason  RLSE   Date     Origin    Comments                   *
.*  $L1= 3.12    1.3.0  11FEB98  ASTLSC  : Release 3 BFP DC extension *
.*  $L1= 3.6     1.3.0  25FEB98  ASTLMNA : Release 3 External Func.   *
.*  $L1= 3.4     1.3.0  16MAR98  ASTLSC  : Option changes             *
.*  $L1= 3.20    1.3.0  02JUN98  ASTLMNA : AINSERT changes            *
.*  $L1= 3.8     1.3.0  05JUN98  ASTLSC  : ADATA changes              *
.*  $L1= 3.4     1.3.0  08JUN98  ASTLSC  : Register Cross Reference   *
.*  $M1= 3.19    1.3.0  22JUN98  ASTLJRD : New USINGs                 *
.*  $P1= KH37005 1.3.0  21JUL98  ASTLMNA : Add COMPLEX flag to x'0042'*
.*  $P1= KH30063 1.3.0  28JUL98  ASTLJRD : Typo corrections to x'000a'*
.*                                                             @PQ22004
.*                                                             @PQ22004
.* Reason  Rlse    Date    Origin   Comments                   @PQ22004
.* ------- ------- ------- -------- ---------------------------@PQ22004
.* PQ22004 HMQ4130 21Dec98 ASTLSC   New option FLAG(PUSH)      @PQ22004
.*                                                                    *
.***END OF SPECIFICATIONS *********************************************
         PUSH  PRINT                    Push the PRINT status
         PRINT &PRINT                   and set it
ASMADATA DSECT
ADATA_LEN           DS    HL2     Variable length indicator
                    DS    HL2     Reserved
ADATA_VERSION       DS    FL1     Product version number
ADATA_VERASM        EQU   16  '   High Level Assembler R1&2
ADATA_RECTYPE       DS    XL2     The record type                      x
                                  (See labels ADATA_RECnnn following)
ADATA_LEVEL         DS    FL1     The ASMADATA level
ADATA_L1            EQU   1        - Associated DATA Level 1
ADATA_L2            EQU   2        - Associated DATA Level 2
ADATA_L3            EQU   3        - Associated DATA Level 3       @l1a
ADATA_LVL           EQU   3        - Current level                 @l1a
ADATA_CONT          DS    XL1     Continuation flag
ADATA_NOTCONT       EQU   X'00'    - This record not continued
ADATA_ISCONT        EQU   X'01'    - Continued on Next record
ADATA_EDITION       DS    FL1     Edition Number
ADATA_ED0           EQU   0        - Edition 0
ADATA_ED            EQU   0        - Current Edition               @l1a
                    DS    CL4     Reserved                         @l1c
ADATA_DATA_LEN      DS    HL2     Associated data field length     @l1a
ADATA_ORG           DS    0H      The length of the  record
ADATA_EQU_LEN       EQU   *-ASMADATA
*
         AIF ('&JID' EQ 'NO').OPT
         AIF ('&JID' EQ 'YES').JID
         MNOTE 4,'Invalid JID parameter. ''YES'' assumed'
.JID     ANOP
ADATA_RECJID        EQU   X'0000'  - Job Identification
ADJID_DATE            DS    CL8     Date ASMADATA record written
ADJID_TIME            DS    CL4     Time the ASMADATA record written
ADJID_PROD_NUMBER     DS    CL8     Product number
ADJID_PROD_VERSION    DS    CL8     Version Number of the product
ADJID_PTF             DS    CL8     PTF level number of the product
ADJID_SYSTEM_ID       DS    CL24    System Identification
ADJID_JOBNAME         DS    CL8     Jobname producing ASMADATA file
ADJID_STEPNAME        DS    CL8     MVS stepname
ADJID_PROCSTEP        DS    CL8     MVS procedure stepname
ADJID_NUM_INPUT_FILES DS    HL2     The number of input files
* The following 7 fields are repeated - for the count contained above
ADJID_INP_FILENUM     DS    HL2     The Input file number
ADJID_INP_FILE_LEN    DS    HL2     The Length of the input file
ADJID_INP_VOL_LEN     DS    HL2     The Length of the volume name
ADJID_INP_MEM_LEN     DS    HL2     The Length of the member name
ADJID_INPUT_FILENAME  DS    0CL256  Input file for the assembly
ADJID_INPUT_VOLNAME   DS    0CL256  Input volume name
ADJID_INPUT_MEMNAME   DS    0CL256  Input member name
ADJID_EQU_LEN         EQU   ADJID_INP_FILE_LEN-ASMADATA
*
.OPT     ANOP
         AIF ('&OPT' EQ 'NO').ESD
         AIF ('&OPT' EQ 'YES').OPT1
         MNOTE 4,'Invalid OPT parameter. ''YES'' assumed'
.OPT1    ANOP
*
         ORG   ADATA_ORG
ADATA_RECOPT        EQU   X'0010'  - Options
ADOPT_BYTE1        DS  XL1           Option byte 1
*                             (see values below)
ADOPT_ALIGN        EQU   X'80'       Align option set
ADOPT_ASA          EQU   X'40'       ASA option set
ADOPT_BATCH        EQU   X'20'       Batch option set
ADOPT_COMPAT       EQU   X'10'       Compat set
ADOPT_COMPATC      EQU   X'08'       Compat(CASE) set
ADOPT_COMPATS      EQU   X'04'       Compat(SYSLST) set
ADOPT_DBCS         EQU   X'02'       DBCS set
ADOPT_DECK         EQU   X'01'       DECK set
*
ADOPT_BYTE2        DS  XL1           Option byte 2
*                             (see values below)
ADOPT_DXREF        EQU   X'80'       Dxref option set
ADOPT_ESD          EQU   X'40'       ESD option set
ADOPT_FOLD         EQU   X'20'       FOLD option set
ADOPT_LIBMAC       EQU   X'10'       LIBMAC option set
ADOPT_LIST         EQU   X'08'       LIST option set
ADOPT_ADATA        EQU   X'04'       ADATA option set
ADOPT_MXREF        EQU   X'02'       MXREF option set
ADOPT_OBJECT       EQU   X'01'       OBJECT option set
*
ADOPT_BYTE3        DS  XL1           Option byte 3
*                             (see values below)
ADOPT_PCONT        EQU   X'80'       Pcontrol option set
ADOPT_PCONTON      EQU   X'40'       Pcontrol(on) option set
ADOPT_PCONTDATA    EQU   X'20'       Pcontrol(data) option set
ADOPT_PCONTGEN     EQU   X'10'       Pcontrol(gen) option set
ADOPT_PCONTUH      EQU   X'08'       Pcontrol(uhead) option set
ADOPT_PCONTMS      EQU   X'04'       Pcontrol(msource) option set
ADOPT_PCONTMC      EQU   X'02'       Pcontrol(mcall) option set
ADOPT_COMPATM      EQU   X'01'       COMPAT(MACROCASE)
*
ADOPT_BYTE4        DS  XL1           Option byte 4
*                             (see values below)
ADOPT_RENT         EQU   X'80'       RENT option set
ADOPT_RLD          EQU   X'40'       RLD option set
ADOPT_TERM         EQU   X'20'       TERM option set
ADOPT_TEST         EQU   X'10'       TEST option set
ADOPT_XREF         EQU   X'08'       XREF option set
ADOPT_XREFF        EQU   X'04'       XREF(FULL) option set
ADOPT_SUBLIB       EQU   X'02'       SUBLIB(DF) option set
ADOPT_XREFS        EQU   X'01'       XREF(SHORT) option set
*
ADOPT_BYTE5        DS  XL1           Option byte 5
*                             (see values below)
ADOPT_EXIT         EQU   X'80'       EXIT option set
ADOPT_INEXIT       EQU   X'40'       INEXIT option set
ADOPT_LIBEXIT      EQU   X'20'       LIBEXIT option set
ADOPT_OBJEXIT      EQU   X'10'       OBJEXIT option set
ADOPT_PRTEXIT      EQU   X'08'       PRTEXIT option set
ADOPT_ADEXIT       EQU   X'04'       ADEXIT option set
ADOPT_TRMEXIT      EQU   X'02'       TRMEXIT option set
*
ADOPT_BYTE6        DS  XL1           Option byte 6
*                             (see values below)
ADOPT_USINGW       EQU   X'80'       USING(WARN) option set
ADOPT_USINGL       EQU   X'40'       USING(LIMIT) option set
ADOPT_USINGM       EQU   X'20'       USING(MAP) option set
ADOPT_FLAG_ALIGN   EQU   X'10'       FLAG(ALIGN) option set
ADOPT_FLAG_CONT    EQU   X'08'       FLAG(CONT) option set
ADOPT_FLAG_RECORD  EQU   X'04'       FLAG(RECORD) option set
ADOPT_XOBJECT      EQU   X'02'       XOBJECT option set
ADOPT_XOBJECT_ADAT EQU   X'01'       XOBJECT(ADATA) option set
*
ADOPT_BYTE7        DS  XL1           Option byte 7
*                             (see values below)
ADOPT_PESTOP       EQU   X'80'       PESTOP option set
ADOPT_RA2          EQU   X'40'       RA2 option set
ADOPT_FLAG_SUBSTR  EQU   X'20'       FLAG(SUBSTR) Option Set
ADOPT_TRANSLATE    EQU   X'10'       TRANSLATE option set
ADOPT_LIST_121     EQU   X'04'       LIST(121) option set
ADOPT_LIST_133     EQU   X'08'       LIST(133) option set
ADOPT_LIST_MAX     EQU   X'0C'       LIST(MAX) option set
ADOPT_MXREF_FULL   EQU   X'01'       MXREF(FULL) option set
ADOPT_MXREF_SOURCE EQU   X'02'       MXREF(SOURCE) option set
ADOPT_MXREF_XREF   EQU   X'03'       MXREF(XREF) option set
*
ADOPT_BYTE8        DS  XL1           Option byte 8
*                             (see values below)
ADOPT_PROFILE      EQU   X'80'       PROFILE option set
ADOPT_PCONT_OFF    EQU   X'40'       PCONTROL(OFF) option set
ADOPT_PCONT_NODATA EQU   X'20'       PCONTROL(NOADATA) option set
ADOPT_PCONT_NOGEN  EQU   X'10'       PCONTROL(NOGEN) option set
ADOPT_PCONT_NOUH   EQU   X'08'       PCONTROL(NOUHEAD) option set
ADOPT_PCONT_NOMS   EQU   X'04'       PCONTROL(NOMSOURCE) option set
ADOPT_PCONT_NOMC   EQU   X'02'       PCONTROL(NOMCALL) option set
ADOPT_XREF_UNREFS  EQU   X'01'       XREF(UNREFS) option set
*
ADWARN_VALUE       DS  FL1           Value from USING(WARN(n))
ADOPT_FLAG_VALUE   DS  FL1           Value from FLAG(n)
*
ADOPT_BYTE9        DS  XL1           Option byte 9                 @l1a
*                             (see values below)
ADOPT_RXREF        EQU   X'80'       RXREF option set              @l1a
ADOPT_FLAG_IMPLEN  EQU   X'40'       FLAG(IMPLEN) option set       @l1a
ADOPT_FLAG_PAGE0   EQU   X'20'       FLAG(PAGE0) option set        @l1a
ADOPT_INFO         EQU   X'10'       INFO option set               @l1a
ADOPT_COMPATL      EQU   X'08'       COMPAT(LITTYPE) option set    @l1a
ADOPT_FLAG_PUSH    EQU   X'04'       FLAG(PUSH) option set     @PQ22004
*                  EQU   X'02'       Unused                        @l1a
*                  EQU   X'01'       Unused                        @l1a
*
                   DS  CL1           Reserved                      @l1c
ADOPT_TRANS_SUFFIX DS  CL2           Value from TRANSLATE(xx)
ADOPT_PROFMEM      DS  CL8           Value from PROFILE(member)
ADLIMIT_VALUE      DS  HL2           Value from USING(LIMIT(nnnn))
ADOPT_LAN          DS  CL3           Language option in effect
ADOPT_OPTTAB       DS  CL3           OPT table specified
ADOPT_LINCOUNT     DS  HL2           Linecount option
ADINEXIT_PROG_LEN  DS  HL2           Length of Inexit program name
ADLIBEXIT_PROG_LEN DS  HL2           Length of Libexit program name
ADOBJEXIT_PROG_LEN DS  HL2           Length of Objexit program name
ADPRTEXIT_PROG_LEN DS  HL2           Length of Prtexit program name
ADADEXIT_PROG_LEN  DS  HL2           Length of Adexit program name
ADTRMEXIT_PROG_LEN DS  HL2           Length of Trmexit program nam
ADINEXIT_STR_LEN   DS  HL2           Length of string supplied to exit
ADLIBEXIT_STR_LEN  DS  HL2           Length of string supplied to exit
ADOBJEXIT_STR_LEN  DS  HL2           Length of string supplied to exit
ADPRTEXIT_STR_LEN  DS  HL2           Length of string supplied to exit
ADADEXIT_STR_LEN   DS  HL2           Length of string supplied to exit
ADTRMEXIT_STR_LEN  DS  HL2           Length of string supplied to exit
ADOPT_SYSPARM_LEN  DS  HL2           SYSPARM length
ADOPT_PARM_LEN     DS  HL2           PARM Length
                   DS  CL8           Reserved
ADINEXIT_PROG      DS  0CL8          Inexit program name
ADLIBEXIT_PROG     DS  0CL8          Library exit program name
ADOBJEXIT_PROG     DS  0CL8          Object exit program name
ADPRTEXIT_PROG     DS  0CL8          Print exit program name
ADADEXIT_PROG      DS  0CL8          ADATA exit program name
ADTRMEXIT_PROG     DS  0CL8          TERM exit program name
ADINEXIT_STR       DS  0CL64         Field containing string
ADLIBEXIT_STR      DS  0CL64         Field containing string
ADOBJEXIT_STR      DS  0CL64         Field containing string
ADPRTEXIT_STR      DS  0CL64         Field containing string
ADADEXIT_STR       DS  0CL64         Field containing string
ADTRMEXIT_STR      DS  0CL64         Field containing string
ADOPT_SYSPARM      DS  0CL255        Field containing SYSPARM string
ADOPT_PARMS        DS  0CL255        Field containing PARM string
ADOPT_EQU_LEN      EQU ADINEXIT_PROG-ASMADATA  Length of part of record
ADOPT_EQU_LEN_1    EQU ADOPT_SYSPARM-ADOBJEXIT_STR_LEN
*
.*
.ESD     ANOP
         AIF ('&ESD' EQ 'NO').SOURCE
         AIF ('&ESD' EQ 'YES').ESD1
         MNOTE 4,'Invalid ESD parameter. ''YES'' assumed'
.ESD1    ANOP
*
         ORG   ADATA_ORG
ADATA_RECESD        EQU   X'0020'  - External Symbol Dictionary
ADESD_TYPE        DS  XL1           The section type of the ESD record
ADESD_FLAGS       DS  XL1           The ESD flag byte
                  DS  HL2           Reserved
ADESD_ESDID       DS  FL4           The ESDID
ADESD_ADDR        DS  AL4           The section address
ADESD_LEN         DS  FL4           The length of the section
ADESD_LDID        DS  FL4           The ESDID of the CSECT in which the
*                                   entry point was defined
                  DS  CL8           Reserved
ADESD_NAME_LEN    DS  HL2           The section name length
ADESD_ALIAS_LEN   DS  HL2           The ALIAS name length
ADESD_NAME        DS  0CL63         The section name
ADESD_ALIAS       DS  0CL63         The Alias name
ADESD_EQU_LEN     EQU *-ASMADATA    The length of the ESD record
*
.*
.SOURCE  ANOP
         AIF ('&SOURCE' EQ 'NO').SRCERR
         AIF ('&SOURCE' EQ 'YES').SOURCE1
         MNOTE 4,'Invalid SOURCE Parameter. ''YES'' assumed'
.SOURCE1 ANOP
         ORG   ADATA_ORG
ADATA_RECSOURCE     EQU   X'0030'  - Source
ADSRC_STMT        DS  FL4           The statement number
ADSRC_ESDID       DS  FL4           The ESD ID for the source record
ADSRC_INPUT_REC   DS  FL4           Input source record number
ADSRC_PARENT_REC  DS  FL4           Input source parent record numb
ADSRC_INPUT_NUM   DS  HL2           Input relative file number
ADSRC_PARENT_NUM  DS  HL2           Parent relative file number
ADSRC_LOCTR       DS  FL4           Source record location counter
ADSRC_REC_ORIGIN  DS  XL1           Where the source line comes from
ADSRC_REC_PINP    EQU X'01'         Source line from Primary Input
ADSRC_REC_MACGEN  EQU X'02'         Source line from Macro generation
ADSRC_REC_MAC     EQU X'03'         Source line from macro / copy code
*                 EQU X'04'         Reserved                      1@L1D
ADSRC_REC_AINSERT EQU X'05'         Source line from AINSERT buffr @L1A
ADSRC_PARENT_ORIGIN DS XL1          Where the parent line comes from   x
                                    (Values as above)
ADSRC_PRINT_GEN   EQU *,X'80'        Print Gen                     @l1a
ADSRC_PRINT_DATA  EQU *,X'40'        Print Data                    @l1a
ADSRC_PRINT_ON    EQU *,X'20'        Print On                      @l1a
ADSRC_PRINT_NOMSOURCE EQU *,X'10'    Print Nomsource (0=Print Msource)
ADSRC_PRINT_UHEAD EQU *,X'08'        Print Uhead                   @l1a
ADSRC_PRINT_MCALL EQU *,X'04'        Print Mcall                   @l1a
ADSRC_PRINT_FLAGS DS  XL1           Current print status flags     @l1a
                  DS  XL2           Reserved                       @l1c
ADSRC_REC_TYPE    DS  XL1           Source record type
ADSRC_REC_COMM    EQU X'01'         Comment
ADSRC_REC_MACH    EQU X'02'         Machine instruction
ADSRC_REC_ASM     EQU X'03'         Assembler instruction
ADSRC_REC_MACR    EQU X'04'         Macro instruction
ADSRC_REC_MACD    EQU X'05'         Macro definition
ADSRC_ASM_OPCODE  DS  XL1           The assembler opcode
ADSRC_FLAGS       DS  XL1           Flag bytes for address fields
ADSRC_FLAGA1      EQU X'80'         Address 1 present
ADSRC_FLAGA2      EQU X'40'         Address 2 present
ADSRC_ADDRESS1    DS  FL4           Address 1 field from assembly
ADSRC_ADDRESS2    DS  FL4           Address 2 field from assembly
ADSRC_NAME_OFFSET DS  HL2           Offset of name entry in statement
*                                   field
ADSRC_NAME_LEN    DS  HL2           Where the source line comes from
ADSRC_OP_ENTRY    DS  HL2           Offset of operation
ADSRC_OP_LEN      DS  HL2           Length of operation
ADSRC_OPND_ENTRY  DS  HL2           Offset of operand entry
ADSRC_OPND_LEN    DS  HL2           Length of operand entry
ADSRC_REM_ENTRY   DS  HL2           Offset of remarks entry
ADSRC_REM_LEN     DS  HL2           Length of Remarks entry
ADSRC_CONT_ENTRY  DS  HL2           Offset of Continuation indicator
                  DS  FL4           Reserved
ADSRC_COPY_LEN    DS  HL2           Length of macro/copy member name
ADSRC_PARENT_LEN  DS  HL2           Length of parent macro/copy mem
ADSRC_REC_LEN     DS  HL2           Length of source record
                  DS  CL8           Reserved
ADSRC_COPY_NAME   DS  0CL256        The macro/copy name
ADSRC_PARENT_NAME DS  0CL256        The parent macro/copy name
ADSRC_RECORD      DS  0CL80         The actual source record
ADSRC_EQU_LEN     EQU *-ASMADATA    Length of the rec - macro and srce
*
.*
.SRCERR  ANOP
         AIF ('&SRCERR' EQ 'NO').DCDS
         AIF ('&SRCERR' EQ 'YES').SRCERR1
         MNOTE 4,'Invalid SRCERR Parameter. ''YES'' assumed'
.SRCERR1 ANOP
*
         ORG   ADATA_ORG
ADATA_RECSRCERR     EQU   X'0032'  - Source Error
ADSRCERR_NUM      DS  FL4           Statement number in error
ADSRCERR_ID       DS  CL16          Error message identifier
ADSRCERR_SEV      DS  HL2           Error severity
ADSRCERR_MSG_LEN  DS  HL2           The error message length
                  DS  CL8           Reserved
ADSRCERR_MSG      DS  0CL80         The error message (variable length)
ADSRCERR_EQU_LEN  EQU ADSRCERR_MSG-ASMADATA    length of error record
.*
.DCDS    ANOP
         AIF ('&DCDS' EQ 'NO').DCDSX
         AIF ('&DCDS' EQ 'YES').DCDS1
         MNOTE 4,'Invalid DCDS Parameter. ''YES'' assumed'
.DCDS1   ANOP
         ORG   ADATA_ORG
ADATA_RECDCDS       EQU   X'0034'  - DC/DS
ADDCDS_ESDID      DS  FL4           ESDID for the source record
ADDCDS_NUMOPS     DS  HL2           Number of operands
ADDCDS_TYPE_FLAG  DS  XL1           Type flag
ADDCDS_TYPE_DC    EQU X'80'         Flag for DC
ADDCDS_TYPE_CXD   EQU X'40'         Flag for DXD within DC
ADDCDS_TYPE_CCW   EQU X'20'         Flag for CCW
ADDCDS_TEXT_REC   EQU X'10'         X'0035' Text record exits
                  DS  CL5           Reserved
ADDCDS_STMT       DS  FL4           Statement Number of source
ADDCDS_LOC_CTR    DS  FL4           Location counter
ADDCDS_DUP        DS  FL4           The duplication factor
ADDCDS_BIT_OFFSET DS  XL1           Offset within byte for B constant
ADDCDS_TYP_ATTR   DS  XL1           The type attribute
ADDCDS_NUM_NOM    DS  HL2           Number of nominal values
ADDCDS_TYPE_EXT   DS  CL1           Type extension                 @l1a
                  DS  CL7           Reserved                       @l1c
ADDCDS_BYTE_LEN   DS  HL2           Number of bytes in the nominal valu
ADDCDS_BIT_LEN    DS  HL2           Number of Bits if B type constant
ADDCDS_VALUE      DS  0X            The nominal value
ADDCDS_EQU_LEN    EQU *-ASMADATA    Length of record
.*
.*                                                               10
.DCDSX   ANOP
         AIF ('&DCDSX' EQ 'NO').MACH
         AIF ('&DCDSX' EQ 'YES').DCDSX1
         MNOTE 4,'Invalid DCDSX Parameter. ''YES'' assumed'
.DCDSX1  ANOP
         ORG   ADATA_ORG
ADATA_RECDCDSX      EQU   X'0035'  - DC/DS Extension
ADDCDSX_ESDID     DS  FL4           ESDID for the source record
ADDCDSX_LOCTR     DS  FL4           Location Count for instruction
ADDCDSX_STMT      DS  FL4           Statement Number of source
                  DS  FL8           Reserved
ADDCDSX_BYTE_LEN  DS  HL2           No of bytes of object text
ADDCDSX_VALUE     DS  0X            Object text
ADDCDSX_EQU_LEN   EQU *-ASMADATA    Length of record
.*
.MACH    ANOP
         AIF ('&MACH' EQ 'NO').SYM
         AIF ('&MACH' EQ 'YES').MACH1
         MNOTE 4,'Invalid MACH Parameter. ''YES'' assumed'
.MACH1   ANOP
         ORG   ADATA_ORG
ADATA_RECMACH       EQU   X'0036'  - Machine Instruction
ADMACH_ESDID      DS  FL4           ESDID for the source record
ADMACH_LOCTR      DS  FL4           Location counter for the instructio
                  DS  CL8           Reserved
ADMACH_INST_LEN   DS  HL2           Length of the machine instructions
ADMACH_INST_VAL   DS  0X            The actual machine instruction
ADMACH_EQU_LEN    EQU *-ASMADATA    The length of the record
.*
.SYM     ANOP
         AIF ('&SYM' EQ 'NO').XREF
         AIF ('&SYM' EQ 'YES').SYM1
         MNOTE 4,'Invalid SYM Parameter. ''YES'' assumed'
.SYM1    ANOP
         ORG   ADATA_ORG
ADATA_RECSYM        EQU   X'0042'  - Symbol
ADSYM_ESDID       DS  FL4           Rec number of the ESD record in
*                                   which it is defined
ADSYM_STMT        DS  FL4           Statement number
ADSYM_TYPE        DS  XL1           Symbol section typr
ADSYM_ATTR        DS  XL1           Symbol attribyte type
ADSYM_DUP         DS  FL4           Duplication factor
ADSYM_BYTE_LEN    DS  HL2           Length in bytes
ADSYM_INT         DS  HL2           Number of positions occupied by
*                                   integer portion of fixed-point
ADSYM_SCALE       DS  HL2           Number of positions occupied by
*                                   fractional portion of fixed-point
ADSYM_LOCTR       DS  FL4           Location counter
ADSYM_RELOC_FLAG  DS  XL1           Relocatable flag
ADSYM_RELOC       EQU X'80'         Operand points to a relocatable
*                                   expression
ADSYM_COMPLEX     EQU X'C0'         Operand points to a complex    @P1A
*                                   relocatable symbol             @P1A
ADSYM_RES         DS  CL7           Reserved
ADSYM_NAME_LEN    DS  HL2           Length of the symbol name
ADSYM_NAME        DS  0CL63         The symbol name (variable name)
ADSYM_EQU_LEN     EQU *-ASMADATA    Length of the record
*
.*
.XREF    ANOP
         AIF ('&XREF' EQ 'NO').RXREF
         AIF ('&XREF' EQ 'YES').XREF1
         MNOTE 4,'Invalid XREF Parameter. ''YES'' assumed'
.XREF1   ANOP
         ORG   ADATA_ORG
ADATA_RECXREF       EQU   X'0044'  - Symbol & Literal Cross-Referen
ADXREF_SYM_LEN     DS  HL2           Length of the symbol / literal
ADXREF_STMT        DS  FL4           Statement number sym / lit is on
ADXREF_NUMREF      DS  HL2           Number of references
ADXREF_REL_TYPE    DS  CL1           Relocatability type
                   DS  CL7           Reserved
ADXREF_SYM_NAME    DS  0CL63         Symbol / literal name (variable)
ADXREF_REF_FLAG    DS  XL1           Reference flag for the reference
ADXREF_STAT_NO     DS  FL4           Statment number that the symbol /
*                                    literal is referenced on
ADXREF_EQU_LEN     EQU *-ASMADATA    Length of the record
*
.*
.RXREF   ANOP                                                      @l1a
         AIF ('&RXREF' EQ 'NO').USING                              @l1a
         AIF ('&RXREF' EQ 'YES').RXREF1                            @l1a
         MNOTE 4,'Invalid RXREF Parameter. ''YES'' assumed'        @l1a
.RXREF1   ANOP                                                     @l1a
         ORG   ADATA_ORG                                           @l1a
ADATA_RECRXREF     EQU   X'0045'  -  Register Cross-Reference      @l1a
ADRXREF_REG_NO     DS  XL1           Register Number               @l1a
ADRXREF_REG_TYPE   DS  CL1           Register Type - G - general   @l1a
                   DS  XL2           Reserved                      @l1a
ADRXREF_TOT_NUMREF DS  FL4           Total number of references    @l1a
ADRXREF_NUMREF     DS  FL4           Number of references in this  @l1a
*                                     record
ADRXREF_OFFSET     DS  AL2           Offset to first entry in this @l1a
*                                     record
ADRXREF_STAT_NO    DS  FL4           Statement number containing re@l1a
ADRXREF_REF_FLAG   DS  CL1           Reference flag                @l1a
*                             (see values below)
*                                    ' ' No branch or modification
*                                    'M' Modified
*                                    'B' Branched to
*                                    'U' USING statement
*                                    'D' DROP statement
*                                    'N' Index register reference
ADRXREF_EQU_LEN    EQU *-ASMADATA    Length of the record
*
.*
.USING   ANOP
         AIF ('&USING' EQ 'NO').RLD
         AIF ('&USING' EQ 'YES').USING1
         MNOTE 4,'Invalid USING Parameter. ''YES'' assumed'
.USING1  ANOP
         ORG   ADATA_ORG
ADATA_RECUSING      EQU   X'0080'  - USING Map
ADUSING_RECTYPE    DS  XL1           ie. Using, push, pop, drop.
ADUSING_FLAG       DS  XL1           Using type
ADUSING_LOCID      DS  XL2           USING location ID
ADUSING_STMT       DS  FL4           The statement number of the using
ADUSING_LOCTR      DS  FL4           The location count of the using
ADUSING_VALUE      DS  FL4           The type value
ADUSING_LAST_STMT  DS  FL4           The last statement for the using
ADUSING_ID         DS  FL4           The ID of the using
ADUSING_REG        DS  XL1           The register used in the using
ADUSING_DISP       DS  XL2           The max displacement for the using
                   DS  XL1           Reserved                      @m1a
ADUSING_RANGE      DS  FL4           The range value               @m1a
                   DS  HL2           Reserved                      @m1c
ADUSING_LABEL_LEN  DS  HL2           Length of LABEL and using
*                                    text field
ADUSING_LABEL      DS  0CL63         The text for the label and text
*                                    from the source record
ADUSING_EQU_LEN    EQU *-ASMADATA    Length of the record
.*
.RLD     ANOP
         AIF ('&RLD' EQ 'NO').MXREF
         AIF ('&RLD' EQ 'YES').RLD1
         MNOTE 4,'Invalid RLD Parameter. ''YES'' assumed'
.RLD1    ANOP
         ORG   ADATA_ORG
ADATA_RECRLD        EQU   X'0040'  - Relocation Dictionary
ADRLD_POSID        DS  FL4           ESDID number
ADRLD_RELID        DS  FL4           ESDID number
ADRLD_ADDRESS      DS  FL4           Address of the field where tha
*                                    ADCON is stored
ADRLD_FLAGS        DS  XL1           Flags for the type of RLD
ADRLD_EQU_LEN      EQU *-ASMADATA    Length of the RLD record
.*
.MXREF   ANOP
         AIF ('&MXREF' EQ 'NO').MXREFX
         AIF ('&MXREF' EQ 'YES').MXREF1
         MNOTE 4,'Invalid MXREF Parameter. ''YES'' assumed'
.MXREF1  ANOP
         ORG   ADATA_ORG
ADATA_RECMXREF      EQU   X'0060'  - Library Record
ADMXREF_NUM        DS  HL2           The number of macros / copy code
ADMXREF_DAT_LEN    DS  HL2           The length of the dataset name
ADMXREF_VOL_LEN    DS  HL2           The length of the volume name
ADMXREF_CONCAT     DS  HL2           The dataset concat number
ADMXREF_DD_LEN     DS  HL2           The length of the ddname
                   DS  CL4           Reserved
ADMXREF_DATASET    DS  0CL256        Dataset name where the macro /
*                                    copy code was retrieved from
ADMXREF_VOL        DS  0CL256        Volume name where dataset resides
ADMXREF_DDNAME     DS  0CL256        DDNAME where dataset resides
ADMXREF_MAC_LEN    DS  HL2           The length of the macro name
ADMXREF_MAC_NAME   DS  0CL256        The macro / copy code name
ADMXREF_EQU_LEN    EQU *-ASMADATA    Length of the record
.*
.MXREFX  ANOP
         AIF ('&MXREFX' EQ 'NO').USER
         AIF ('&MXREFX' EQ 'YES').MXREFX1
         MNOTE 4,'Invalid MXREFX Parameter. ''YES'' assumed'
.MXREFX1  ANOP
         ORG   ADATA_ORG
ADATA_RECMXREFX     EQU   X'0062'  - Macro & Copy Code Cross Refere
ADMXRFX_CNUM       DS  FL4           Library Concatenation Number
ADMXRFX_DEFN       DS  FL4           Stmnt Number; 0=LIB; -1=Undef
ADMXRFX_CTYPE      DS  CL1           Concatenation Type
ADMXRFX_CTYPE_L    EQU C'L'          Library
ADMXRFX_CTYPE_P    EQU C'P'          Primary Input
ADMXRFX_DEFN_FLAG  DS  CL1           Definition Flag
ADMXRFX_DEFN_IMBED EQU C'X'          Macro imbedded due to LIBMAC
ADMXRFX_RES1       DS  CL8           Reserved
ADMXRFX_MAC_NAME   DS  CL64          The macro / copy code name
ADMXRFX_CALLED_BY  DS  CL64          The name of the macro CALL
ADMXRFX_NUMREF     DS  FL4           Reserved
ADMXRFX_REFS       DS  FL4           Number of References in this      +
                                     ADATA record
ADMXRFX_REF_STMT   DS  FL4           The Reference statement nums
ADMXRFX_REF_FLAG   DS  XL1           The Reference statement flags
ADMXRFX_REF_COPY   EQU C'C'          Caused by COPY statement
ADMXRFX_RES2       DS  XL1           Reserved
ADMXRFX_EQU_LEN    EQU *-ASMADATA    Length of the record
ADMXRFX_REF_LEN    EQU *-ADMXRFX_REF_STMT Len of ref statement
.*
.USER    ANOP
         AIF ('&USER' EQ 'NO').OUTPUT
         AIF ('&USER' EQ 'YES').USER1
         MNOTE 4,'Invalid USER Parameter. ''YES'' assumed'
.USER1   ANOP
         ORG   ADATA_ORG
ADATA_RECUSER       EQU   X'0070'  - User Data
ADUSER_FIELD1      DS  XL4           User Specified Binary Data
ADUSER_FIELD2      DS  XL4           User Specified Binary Data
ADUSER_FIELD3      DS  XL4           User Specified Binary Data
ADUSER_FIELD4      DS  XL4           User Specified Binary Data
ADUSER_DATA_LEN    DS  HL2           Length of ADUSER_DATA
ADUSER_DATA        DS  0C            User Specified Binary Data
ADUSER_EQU_LEN     EQU *-ASMADATA    Length of the record
.*
.OUTPUT  ANOP
         AIF ('&OUTPUT' EQ 'NO').AID
         AIF ('&OUTPUT' EQ 'YES').OUTPUT1
         MNOTE 4,'Invalid OUTPUT Parameter. ''YES'' assumed'
.OUTPUT1 ANOP
         ORG   ADATA_ORG
.* DEL   MNOTE 8,'OUTPUT Parameter Not Supported'
ADATA_RECOUTPUT     EQU   X'000A'  - Output File Information
ADOUT_NUM_OBJECT   DS  HL2           Number of object files written@p1c
ADOUT_NUM_PUNCH    DS  HL2           Number of punch files written @p1c
ADOUT_NUM_PRINT    DS  HL2           Number of listing files writte@p1c
ADOUT_NUM_TERM     DS  HL2           Number of term files written  @p1c
ADOUT_NUM_ADATA    DS  HL2           Number of adata files written @p1c
                   DS  XL10          Reserved
* The following 7 fields are repeat for the count in ADOUT_NUM_OBJECT
ADOUT_OBJ_FILENUM  DS  HL2           Assigned sequence number
ADOUT_OBJ_NAMELEN  DS  HL2           Length of output file name
ADOUT_OBJ_VOLLEN   DS  HL2           Length of output volser name
ADOUT_OBJ_MEMLEN   DS  HL2           Length of output member name
ADOUT_OBJ_FILENAME DS  0CL256        Output file name
ADOUT_OBJ_VOLNAME  DS  0CL256        Output volume serial number
ADOUT_OBJ_MEMNAME  DS  0CL256        Output member name
* The following 7 fields are repeat for the count in ADOUT_NUM_PUNCH
ADOUT_PUN_FILENUM  DS  HL2           Assigned sequence number
ADOUT_PUN_NAMELEN  DS  HL2           Length of output file name
ADOUT_PUN_VOLLEN   DS  HL2           Length of output volser name
ADOUT_PUN_MEMLEN   DS  HL2           Length of output member name
ADOUT_PUN_FILENAME DS  0CL256        Output file name
ADOUT_PUN_VOLNAME  DS  0CL256        Output volume serial number
ADOUT_PUN_MEMNAME  DS  0CL256        Output member name
* The following 7 fields are repeat for the count in ADOUT_NUM_PRINT
ADOUT_PRT_FILENUM  DS  HL2           Assigned sequence number
ADOUT_PRT_NAMELEN  DS  HL2           Length of output file name
ADOUT_PRT_VOLLEN   DS  HL2           Length of output volser name
ADOUT_PRT_MEMLEN   DS  HL2           Length of output member name
ADOUT_PRT_FILENAME DS  0CL256        Output file name
ADOUT_PRT_VOLNAME  DS  0CL256        Output volume serial number
ADOUT_PRT_MEMNAME  DS  0CL256        Output member name
* The following 7 fields are repeat for the count in ADOUT_NUM_TERM
ADOUT_TRM_FILENUM  DS  HL2           Assigned sequence number
ADOUT_TRM_NAMELEN  DS  HL2           Length of output file name
ADOUT_TRM_VOLLEN   DS  HL2           Length of output volser name
ADOUT_TRM_MEMLEN   DS  HL2           Length of output member name
ADOUT_TRM_FILENAME DS  0CL256        Output file name
ADOUT_TRM_VOLNAME  DS  0CL256        Output volume serial number
ADOUT_TRM_MEMNAME  DS  0CL256        Output member name
* The following 7 fields are repeat for the count in ADOUT_NUM_ADATA
ADOUT_ADT_FILENUM  DS  HL2           Assigned sequence number
ADOUT_ADT_NAMELEN  DS  HL2           Length of output file name
ADOUT_ADT_VOLLEN   DS  HL2           Length of output volser name
ADOUT_ADT_MEMLEN   DS  HL2           Length of output member name
ADOUT_ADT_FILENAME DS  0CL256        Output file name
ADOUT_ADT_VOLNAME  DS  0CL256        Output volume serial number
ADOUT_ADT_MEMNAME  DS  0CL256        Output member name
ADOUT_EQU_LEN      EQU *-ASMADATA    Length of the record
.*
.AID     ANOP
         AIF ('&AID' EQ 'NO').COMPUNIT
         AIF ('&AID' EQ 'YES').AID1
         MNOTE 4,'Invalid AID Parameter. ''YES'' assumed'
.AID1 ANOP
         ORG   ADATA_ORG
ADATA_RECAID        EQU   X'0001'  - ADATA Identification
ADAID_TIME         DS  XL8           Universal Time bit 63 = 1ms
ADAID_CCSID        DS  XL2           Coded Character Set ID
ADAID_EQU_LEN      EQU *-ASMADATA    Length of the record
.*
.COMPUNIT ANOP
         AIF ('&COMPUNIT' EQ 'NO').STATS
         AIF ('&COMPUNIT' EQ 'YES').COMPUNIT1
         MNOTE 4,'Invalid COMPUNIT Parameter. ''YES'' assumed'
.COMPUNIT1 ANOP
         ORG   ADATA_ORG
ADATA_RECCOMPUNIT   EQU   X'0002'  - Compilation Unit Start/End
ADCOMP_IND         DS  XL2           START/END Indicator
ADCOMP_IND_START   EQU X'0000'       START of Compilation Unit
ADCOMP_IND_END     EQU X'0001'       END of Compilation Unit
ADCOMP_RES         DS  CL2           Reserved
ADCOMP_RCOUNT      DS  FL4           Record Count for END record
ADCOMP_EQU_LEN     EQU *-ASMADATA    Length of the record
.*
.STATS   ANOP
         AIF ('&STATS' EQ 'NO').ENDIT
         AIF ('&STATS' EQ 'YES').STATS1
         MNOTE 4,'Invalid STATS Parameter. ''YES'' assumed'
.STATS1  ANOP
         ORG   ADATA_ORG
ADATA_RECSTATS      EQU   X'0090'  - Assembly Statistics
ADSTATS_BUFFP        DS  FL4         Size in KB of buffer pool
ADSTATS_REQ_INSTOR   DS  FL4         Size in KB to be incore assembly
ADSTATS_P_INPUT      DS  FL4         Number of primary input records
ADSTATS_LIB_INPUT    DS  FL4         Number of library records read
ADSTATS_WORK_FILE    DS  FL4         Number of work file reads
ADSTATS_P_PRINT      DS  FL4         Number of print records written
ADSTATS_P_PUNCH      DS  FL4         Number of punch records written
ADSTATS_WRK_WRITE    DS  FL4         Number of work file writes
ADSTATS_ADATA        DS  FL4         Number of adata ile writes
ADSTATS_ADATA_CALLS  DS  FL4         Number of adata exit calls
ADSTATS_ADATA_ADDED  DS  FL4         Number adata exit recs added
ADSTATS_ADATA_DELETE DS  FL4         Number adata exit recs deleted
ADSTATS_ADATA_DIAG   DS  FL4         Number adata exit diagnostics
ADSTATS_LIB_CALLS    DS  FL4         Number of library exit calls
ADSTATS_LIB_ADDED    DS  FL4         Number library exit recs added
ADSTATS_LIB_DELETE   DS  FL4         Number library exit recs delet
ADSTATS_LIB_DIAG     DS  FL4         Number library exit diagnostic
ADSTATS_LIST_CALLS   DS  FL4         Number of listing exit calls
ADSTATS_LIST_ADDED   DS  FL4         Number listing exit recs added
ADSTATS_LIST_DELETE  DS  FL4         Number listing exit recs delet
ADSTATS_LIST_DIAG    DS  FL4         Number listing exit diagnostic
ADSTATS_OBJ_CALLS    DS  FL4         Number of object exit calls
ADSTATS_OBJ_ADDED    DS  FL4         Number object exit recs added
ADSTATS_OBJ_DELETE   DS  FL4         Number object exit recs delete
ADSTATS_OBJ_DIAG     DS  FL4         Number object exit diagnostics
ADSTATS_INPUT_CALLS  DS  FL4         Number of input exit calls
ADSTATS_INPUT_ADDED  DS  FL4         Number input exit recs added
ADSTATS_INPUT_DELETE DS  FL4         Number input exit recs deleted
ADSTATS_INPUT_DIAG   DS  FL4         Number input exit diagnostics
ADSTATS_PUNCH_CALLS  DS  FL4         Number of punch exit calls
ADSTATS_PUNCH_ADDED  DS  FL4         Number punch exit recs added
ADSTATS_PUNCH_DELETE DS  FL4         Number punch exit recs deleted
ADSTATS_PUNCH_DIAG   DS  FL4         Number punch exit diagnostics
ADSTATS_TERM_CALLS   DS  FL4         Number of term exit calls
ADSTATS_TERM_ADDED   DS  FL4         Number term exit recs added
ADSTATS_TERM_DELETE  DS  FL4         Number term exit recs deleted
ADSTATS_TERM_DIAG    DS  FL4         Number term exit diagnostics
ADSTATS_START_TIME   DS  FL4         Local time assembly commenced
ADSTATS_STOP_TIME    DS  FL4         Local time assembly completed
ADSTATS_PROC_TIME    DS  FL4         Processor seconds used
                     DS  XL8         Reserved                      @L1A
ADSTATS_XFUNC_NUM    DS  FL4         Number of ext. func. loaded   @L1A
ADSTATS_FIXED_LEN  EQU *-ASMADATA    Length of the fixed part      @L1A
ADSTATS_XFUNC_VAR    EQU *           Symbol for USING              @L1A
                     DS  XL4         Reserved                      @L1A
ADSTATS_XFUNC_SETAF  DS  FL4         Number of SETAF calls         @L1A
ADSTATS_XFUNC_SETCF  DS  FL4         Number of SETCF calls         @L1A
ADSTATS_XFUNC_MSG    DS  FL4         Number of messages issued     @L1A
ADSTATS_XFUNC_MSEV   DS  HL2         Highest messages severity     @L1A
ADSTATS_XFUNC_NLEN   DS  HL2         Len of following name field   @L1A
ADSTATS_XFUNC_NAME   DS  0C          Name of the external function @L1A
ADSTATS_EQU_LEN    EQU *-ASMADATA    Length of the stats record
*
.ENDIT   ANOP
         POP   PRINT                   Restore PRINT status
         MEND
