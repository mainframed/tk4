* /*                                                                 */
* /* MACCOMP Y-2 SC1DE/SJD61                                         */
* /* MACSTAT Y-2 73103/Y02113                                        */
* /*                                                                 */
 @EJECT;
 /*  IDAEXITR-- EXIT TO USER ROUTINE
 01  FUNCTION = SAVE VSAM REGISTERS, LOAD USER ROUTINE IF IT IS
                NOT IN CORE, RESTORE USER REGISTERS, BALR TO
                THE USER ROUTINE, RESTORE THE VSAM REGISTERS,
                AND DELETE THE USER ROUTINE IF IT WAS LOADED.
 01  INPUT    = RPARM1 POINTS TO DESIRED EXIT LIST ENTRY
 01  OUTPUT   = REGISTERS ARE UNCHANGED. IF USER ROUTINE DID NOT RETURN
                CONTROL, THE USER EXIT ROUTINE IS LEFT LOADED.       */
 IDAEXITR:
  PROC OPTIONS (NOSAVE, NOSAVEAREA);       /* INTERFACE TO USER RTN  */
                                           /* SAVE VSAM REGISTERS    */
  GEN (IDASVR14);                        /* SAVE RETURN REG          */
  RESPECIFY IFGEXLEF BASED(RPARM1);      /* ENTRY BASE               */
  RPLPLHPT = RPLH;                         /* PUT PLH POINTER IN RPL */
  RFY (RWORK0, R13, R15) RSTD;             /* GET REGISTERS          */
  GEN SETS (PLHSAVE1, PLHSAVE5);
         STM   RAMB,RWORK2,PLHSAVE1(RPLH) SAVE RAMB,ETC
         STM   RPARM1,R13,PLHSAVE5(RPLH)  SAVE RPARM1 AND R13
 @ENDGEN
  R15 = EXLEXITP;                          /* GET ROUTINE ADDRESS    */
  RFY RWORK1 RSTD;                         /* GET REGISTER           */
  /* LOAD THE USER EXIT ROUTINE IF REQUESTED                         */
  IF EXLFLAG(EXLLINK) = ON                 /* SEE IF LOAD REQUIRED   */
    THEN                                   /* IF SO, COME HERE       */
      DO;
      RWORK1 = R1;                         /* SAVE REGISTER ONE      */
      GEN (LOAD  EPLOC=(R15));             /* LOAD ROUTINE           */
      R15 = RWORK0;                        /* GET ADDR INTO R15      */
      R1 = RWORK1;                         /* RESTORE REGISTER ONE   */
      END;                                 /* END OF LOAD CODE       */
      /* RESTORE USER REGISTERS AND BALR TO THE USER ROUTINE         */
      GEN (LM @02,@12,TWENTY8(R13));       /* RESTORE USER REGS      */
  /* TAKE USER EXIT                                                  */
 ?IDACALL (USEREXIT);
 /* RESTORE THE VSAM REGISTERS                                       */
  RPLH = RPLPLHPT;                         /* RESTORE PLH POINTER    */
  GEN;
         LM    RAMB,RWORK2,PLHSAVE1(RPLH) RESTORE RAMB,ETC.
         LM    RPARM1,R13,PLHSAVE5(RPLH)  RESTORE RPARM1 AND R13
 @ENDGEN
 /* DELETE THE USER EXIT ROUTINE IF IT WAS LOADED                    */
  IF EXLFLAG(EXLLINK) = ON                 /* SEE IF DELETE NEEDED   */
    THEN                                   /* IF SO, COME HERE       */
      DO;
      RFY RWORK1 RSTD;                     /* GET REGISTER           */
      RWORK1 = R1;                         /* SAVE REGISTER ONE      */
      R15 = EXLEXITP;                      /* POINT TO ROUTINE NAME  */
      GEN (DELETE EPLOC=(R15));            /* DELETE ROUTINE         */
      R1 = RWORK1;                         /* RESTORE REGISTER ONE   */
      RFY RWORK1 UNRSTD;                   /* DROP REGISTER          */
      END;                                 /* END OF DELETE CODE     */
  RFY (RWORK0, R13, R15) UNRSTD;           /* DROP REGISTERS         */
  GEN (IDARST14);                        /* RESTORE RETURN           */
  END IDAEXITR;                            /* END OF EXIT INTERFACE  */
