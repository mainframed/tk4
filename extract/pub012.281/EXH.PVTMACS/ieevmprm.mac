 /********************************************************************/
 /* A 000000-999999                                          @G878PPK*/
 /*                                                                  */
 /* NAME - IEEVMPRM                                                  */
 /*                                                                  */
 /* DESCRIPTIVE NAME - INTERFACE TO THE MESSAGE MODULE - IEEVMESS    */
 /*                                                                  */
 /* COPYRIGHT -                                                      */
 /*                                                                  */
 /*         5740-XYN COPYRIGHT IBM CORP 1981,                   @L1A */
 /*         LICENSED MATERIAL-PROGRAM,PROPERTY OF IBM,               */
 /*         REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083.   */
 /*                                                                  */
 /* STATUS - OS/VS2 JBB1329                                      @L2C*/
 /*                                                                  */
 /* FUNCTION - THIS MACRO PROVIDES A MAPPING OF THE FUNCTION         */
 /*            MAP FOR THE RECONFIGURATION MESSAGE MODULE.           */
 /*            IT ALSO MAPS A MESSAGE ENTRY WHICH IS ANOTHER         */
 /*            PART OF THE INTERFACE TO IEEVMESS.  ALSO INCLUDED     */
 /*            IS THE INDEX TABLE OF ALL MESSAGES CONTAINED          */
 /*            WITHIN IEEMTEXT, WHICH CONTAINS THE TEXT OF THE       */
 /*            MESSAGES AND THEIR ATTRIBUTES.                        */
 /*                                                                  */
 /* METHOD OF ACCESS -                                               */
 /*                                                                  */
 /*   %INCLUDE SYSLIB(IEEVMPRM) MUST BE CODED TO USE THIS MAPPING    */
 /*                             MACRO                                */
 /*     IF THE MACRO VARIABLE 'IEEVMNOB' CONTAINS 'NO' THE           */
 /*     DECLARATION OF IEEVMENT  AND IEEVMCML WILL NOT BE BASED.     */
 /*     OTHERWISE IEEVMPRM IS BASED ON IEEVMPTR, AND THE COMMAND     */
 /*     NAME ENTRY(IEEVMCML) IS BASED ON IEEVMCDP.                   */
 /*     MACRO VARIABLE 'IEEVMNOI' CONTAINS THE MAXIMUM NUMBER OF     */
 /*     INSERTS FOR IEEVMINS.  IF NONE IS SPECIFIED AND IEEVMINS IS  */
 /*     NOT BASED THE NUMBER USED IS 5.                              */
 /*     IF MACRO VARIABLE 'DCLIEE148T' CONTAINS THE VALUE 'YES'      */
 /*     THE TABLE INSERT VALUES FOR MESSAGE IEE148I WILL BE INCLUDED.*/
 /*                                                                  */
 /*   THE FUNCTION MAPS, 'IEEVMPRM', AND 'IEEVMENT' ARE SELF         */
 /*   DEFINING.                                                      */
 /*                                                                  */
 /* CHANGE ACTIVITY -                                                */
 /*       $L1=RAS,JBB1326,801208,PD22: - SP1.3                   @L1A*/
 /*       $L2=6872AU,JBB1329,810630,PD22: - SP1.3.3              @L2A*/
 /*                                                                  */
 /********************************************************************/
 @SPACE(3);
 % IF IEEVMNOB = 'NO'
 % THEN % GOTO LAB1;
 DCL 1 IEEVMPRM BASED(IEEVMPTR) BDY(WORD),
 % GOTO LAB2;
 % LAB1:     ;
 DCL 1 IEEVMPRM  BDY(WORD),
 % LAB2:   ;
       3 IEEVMFCC BIT(16),               /*  FUNCTION CODES          */
         5 IEEVMFST BIT(1),              /* START A NEW BUFFER       */
         5 IEEVMFSO BIT(1),              /* PUT MESSAGE IN BUFFER    */
         5 IEEVMFOL BIT(1),              /* OUTPUT BUFFER LAST, FIRST
                                            THEN FREE ALL BUFFERS    */
         5 IEEVMFFF BIT(1),              /* OUTPUT FIFO ORDER - THEN
                                            FREE ALL BUFFERS         */
         5 IEEVMFFR BIT(1),              /* FREE ALL BUFFERS         */
         5 IEEVMFWT BIT(1),              /* ISSUE WTOR WAIT ON ECB   */
         5 IEEVMFDT BIT(1),              /* ISSUE WTOR DONOT WAIT    */
         5 IEEVMFIM BIT(1),              /* ISSUE AS WTO IMMEDIATELY */
         5     *    BIT(8),              /* UNUSED AREA              */
       3 IEEVMCID BIN FIXED(15),         /*  CONSOLE ID              */
       3 IEEVMMBA PTR(31),               /*  MESSAGE BUFFER POINTER  */
       3 IEEVMMSG PTR(31),               /*  MESSAGE ENTRY POINTER   */
       3 IEEVMOPR BIN FIXED(31),         /*  OP. RESPONSE TO WTOR    */
       3 IEEVMECB PTR(31),               /*  ECB ADDRESS FOR WTOR    */
       3 IEEVMREP PTR(31),               /*  REPLY BUFFER ADDRESS    */
       3 IEEVMRLN BIN FIXED(31),         /*  MAXIMUM LENGTH OF REPLY */
       3 IEEVMCDP PTR(31),               /*  PTR TO COMMAND TEXT     */
       3 IEEVMDOM FIXED(31),             /*  DOM ID FROM WTOR        */
       3    *     CHAR(4);               /*  RESERVED                */
 @SPACE(3);
 % IF IEEVMNOB = 'NO'
 % THEN % GOTO LAB3;
 DCL 1 IEEVMENT BASED(IEEVMMSG),         /* MESSAGE ENTRY            */
 % GOTO LAB4;
 % LAB3: ;
 DCL 1 IEEVMENT ,                        /* MESSAGE ENTRY            */
 % LAB4: ;
       3 IEEVMNIN BIN FIXED(15),         /* NUMBER OF INSERTS        */
       3 IEEVMSGI BIN FIXED(15),         /* MESSAGE NUMBER           */
 % IF IEEVMNOI = ''
 % THEN % GOTO LAB5;

       3 IEEVMINS (IEEVMNOI),            /* INSERT INFORMATION       */
 % GOTO LAB6;
 % LAB5: ;
 % IF IEEVMNOB = 'NO'
 % THEN %GO TO LAB7;
       3 IEEVMINS (*),                   /* INSERT INFORMATION       */
 % GOTO LAB6;
 % LAB7: ;
       3 IEEVMINS (5),                   /* INSERT INFORMATION       */
 % LAB6: ;
         5 IEEVMLEN BIN FIXED(15),       /* INSERT LENGTH            */
         5  *       BIN FIXED(15),       /* UNUSED AREA              */
         5 IEEVMADD PTR(31);             /* INSERT TEXT ADDRESS      */
 % IF IEEVMNOB = 'NO'
 % THEN % GOTO LAB9;
 @SPACE;
 @SPACE;
 DCL 1 *              BASED(IEEVMCDP), /* COMMAND NAME ENTRY       */
       2 IEEVMCML BIN FIXED(15),       /* COMMAND NAME LENGTH      */
       2 IEEVMCMD CHAR(15);            /* COMMAND NAME TEXT        */
 % GOTO LAB20;
 % LAB9: ;
 @SPACE;
 @SPACE;
 DCL 1 *   ,                           /* COMMAND NAME ENTRY       */
       2 IEEVMCML BIN FIXED(15),       /* COMMAND NAME LENGTH      */
       2 IEEVMCMD CHAR(15);            /* COMMAND NAME TEXT        */
 % LAB20: ;
 @SPACE;
 DCL
   VMESSADR PTR(31) BASED(IEEVMMBA);   /* ADDRESS OF IEEVMESS      */
 @SPACE;
 DCL                                   /* INDEX INTO MESSAGE TABLE */
   IEE148I  BIN FIXED(15) CONSTANT(1),
   IEE345I  BIN FIXED(15) CONSTANT(3),
   IEE559I  BIN FIXED(15) CONSTANT(4),
   IEE560I  BIN FIXED(15) CONSTANT(5),
   IEE561I  BIN FIXED(15) CONSTANT(6),
   IEE712I  BIN FIXED(15) CONSTANT(7),
   IEE713I  BIN FIXED(15) CONSTANT(8),
   IEE715I  BIN FIXED(15) CONSTANT(9),
   IEE7601  BIN FIXED(15) CONSTANT(10),
   IEE562I  BIN FIXED(15) CONSTANT(11),
   IEE7602  BIN FIXED(15) CONSTANT(12),
   IEE517I  BIN FIXED(15) CONSTANT(13),
   IEE528I  BIN FIXED(15) CONSTANT(14),
   IEE766I  BIN FIXED(15) CONSTANT(15),
   IEE563I  BIN FIXED(15) CONSTANT(16),
   IEE564I  BIN FIXED(15) CONSTANT(17),
   IEE5241  BIN FIXED(15) CONSTANT(18),
   IEE5242  BIN FIXED(15) CONSTANT(19),
   IEE574I  BIN FIXED(15) CONSTANT(20),
   IEE073I  BIN FIXED(15) CONSTANT(22),
   IEE3451  BIN FIXED(15) CONSTANT(23),
   IEE502I  BIN FIXED(15) CONSTANT(24),
   IEE503I  BIN FIXED(15) CONSTANT(25),
   IEE504I  BIN FIXED(15) CONSTANT(26),
   IEE505I  BIN FIXED(15) CONSTANT(27),
   IEE7131  BIN FIXED(15) CONSTANT(28),
   IEE7151  BIN FIXED(15) CONSTANT(29),
   IEE100E  BIN FIXED(15) CONSTANT(30),
   IEE131D BIN FIXED(15) CONSTANT(31),
   IEE500I BIN FIXED(15) CONSTANT(32),
   IEE506I BIN FIXED(15) CONSTANT(33),
   IEE512I BIN FIXED(15) CONSTANT(34),
   IEE523I BIN FIXED(15) CONSTANT(35),
   IEE527I BIN FIXED(15) CONSTANT(36),
   IEE541I BIN FIXED(15) CONSTANT(37),
   IEE717D BIN FIXED(15) CONSTANT(38),
   IEE718I BIN FIXED(15) CONSTANT(39),
   IEE718D BIN FIXED(15) CONSTANT(40),
   IEE719I BIN FIXED(15) CONSTANT(41),
   IEE745I BIN FIXED(15) CONSTANT(42),
   IEE746I BIN FIXED(15) CONSTANT(43),
   IEE747I BIN FIXED(15) CONSTANT(44),
   IEE754I BIN FIXED(15) CONSTANT(45),
   IEE755I BIN FIXED(15) CONSTANT(46),
   IEE756I BIN FIXED(15) CONSTANT(47),
   IEE757I BIN FIXED(15) CONSTANT(48),
   IEE758I BIN FIXED(15) CONSTANT(49),
   IEE759I BIN FIXED(15) CONSTANT(50),
   IEE7603 BIN FIXED(15) CONSTANT(51),
   IEE761I BIN FIXED(15) CONSTANT(52),
   IEE762I BIN FIXED(15) CONSTANT(53),
   IEE763I BIN FIXED(15) CONSTANT(54),
   IEE771I BIN FIXED(15) CONSTANT(55),
   IEE772I BIN FIXED(15) CONSTANT(56),
   IEE773I BIN FIXED(15) CONSTANT(57),
   IEE774I BIN FIXED(15) CONSTANT(58),
   IEE099A BIN FIXED(15) CONSTANT(59),   /*                      @L2A*/
   IEE5591 BIN FIXED(15) CONSTANT(60),
   IEE582I BIN FIXED(15) CONSTANT(61),
   IEE1481 BIN FIXED(15) CONSTANT(63),
   IEEDUMMY BIN FIXED(15) CONSTANT(64),
   IEE5101  BIN FIXED(15) CONSTANT(79),
   IEE5102  BIN FIXED(15) CONSTANT(80),
   IEE575A  BIN FIXED(15) CONSTANT(81),
   IEE576I  BIN FIXED(15) CONSTANT(82),
   IEE5762  BIN FIXED(15) CONSTANT(83),
   IEE1482  BIN FIXED(15) CONSTANT(84),
   IEE577A  BIN FIXED(15) CONSTANT(85),
   IEE578I  BIN FIXED(15) CONSTANT(86),
   IEE5763  BIN FIXED(15) CONSTANT(87),
   IEE5764  BIN FIXED(15) CONSTANT(88),
   IEE507D  BIN FIXED(15) CONSTANT(89), /*                      @L1A */
   IEE508E  BIN FIXED(15) CONSTANT(90), /*                      @L1A */
   IEE511I  BIN FIXED(15) CONSTANT(91), /*                      @L1A */
   IEE514I  BIN FIXED(15) CONSTANT(92), /*                      @L1A */
   IEE516I  BIN FIXED(15) CONSTANT(93), /*                      @L1A */
   IEE518I  BIN FIXED(15) CONSTANT(94); /*                      @L1A */
 @SPACE(3);
 %IF DCLIEE148T ^= 'YES'
 %THEN
 %GO TO LAB23;
 DCL IEE148T(13) BIN FIXED(15) STATIC LOCAL /* TABLE ENTRIES FOR
                                    MESSAGE IEE148I.  THE POSITION
                                    IN THIS TABLE IS THE REJECT REASON
                                    CODE FROM THE MSF                */
   INIT(
         0,                     /* INVALID COMMAND CODE (01)         */
         0,                     /* INVALID CALLERS FLAG (02)         */
         5,                     /* INVALID ID (03)                   */
         7,                     /* ASSIGNED OTHER PARTITION (04)     */
         8,                     /* ASSIGNED S/M/R (05)               */
         9,                     /* NOT EXECUTABLE ON CONFIG (06)     */
         0,                     /* SOME SIDE NOT UNASSIGNED (07)     */
         9,                     /* NOT EXECUTABLE ON CONFIG (08)     */
         0,                     /* STARTING ADDRESS ERROR (09)       */
        10,                     /* CONTAINS HSA/ISA (0A)             */
        14,                     /* STORAGE KEYS NOT AVAILABLE (0B)   */
         0,                     /* ALL STORAGE ASSIGNED (0C)         */
         0   );                 /* I/O SIDE IN UNASSIGNED STATE (0D) */
 %LAB23: ;
