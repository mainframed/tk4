* %/* START OF SPECIFICATIONS  ***                             @Y30LB02
.*                                                             @Y30LB02
.*01  MODULE-NAME = ICBCOTB                                    @Y30LB02
.*                                                             @Y30LB02
.*01  DESCRIPTIVE-NAME = COPY TABLES                           @Y30LB02
.*                                                             @Y30LB02
.*01  COPYRIGHT = NONE                                         @Y30LB02
.*                                                             @Y30LB02
.*01  STATUS = OS/VS1 RELEASE 4.0,                             @Y30LB02
.*             OS/VS2 RELEASE 3.0                              @Y30LB02
.*                                                             @Y30LB02
.*01  FUNCTION = BUILDS A REQUEST BLOCK FOR A COPY             @Y30LB02
.*               TABLES REQUEST.  THE MACRO IS A               @Y30LB02
.*               COMMUNICATION LINK BETWEEN THE CALLER         @Y30LB02
.*               AND THE MSSC SVC MODULE.                      @Y30LB02
.*                                                             @Y30LB02
.*01  NOTES = ICBCOTB IS A BILINGUAL MACRO.                    @Y30LB02
.*                                                             @Y30LB02
.*02    DEPENDENCIES = NONE                                    @Y30LB02
.*                                                             @Y30LB02
.*02    RESTRICTIONS = THE PREFIXES ICB AND COTB SHOULD        @Y30LB02
.*                     BE AVOIDED WHEN INVOKING THIS MACRO.    @Y30LB02
.*                                                             @Y30LB02
.*02    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF           @Y30LB02
.*                             REGISTERS BY MACROS:            @Y30LB02
.*                             R0,R1,R14, AND R15.             @Y30LB02
.*                                                             @Y30LB02
.*01  MODULE-TYPE = MACRO                                      @Y30LB02
.*                                                             @Y30LB02
.*02    PROCESSOR = PLS2 AND ASSEM                             @Y30LB02
.*                                                             @Y30LB02
.*01  INPUT = PARAMETERS SPECIFIED ON THE PLS/BAL MACRO        @Y30LB02
.*            INVOCATION.                                      @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   THE COPY TABLES REQUEST IS ISSUED BY A HOST CALLER        @Y30LB02
.*   WHEN HE DESIRES TO HAVE THE MSC'S TABLES ON DASD          @Y30LB02
.*   MOVED TO THE VIRTUAL VOLUME SPECIFIED BY VOLID            @Y30LB02
.*   SPECIFIED BY VOLID AT THE LOCATION GIVEN                  @Y30LB02
.*   BY EXTS.                                                  @Y30LB02
.*                                                             @Y30LB02
.*   MACRO SYNTAX                                              @Y30LB02
.*                                                             @Y30LB02
.*   LIST FORM                                                 @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBCOTB  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02
.*                                                             @Y30LB02
.*   STANDARD FORM                                             @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBCOTB  VOLID=ADDR/(R)              NONE                    @Y30LB02
.*         ECB=ADDR/(R)                                        @Y30LB02
.*         EXTS=ADDR/(R)                                       @Y30LB02
.*         FLAGS=ADDR/(R)                                      @Y30LB02
.*                                                             @Y30LB02
.* EXECUTE FORM                                                @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBCOTB  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02
.*                              VOLID=ADDR/(R)                 @Y30LB02
.*                              ECB=ADDR/(R)                   @Y30LB02
.*                              EXTS=ADDR/(R)                  @Y30LB02
.*                              FLAGS=ADDR/(R)                 @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   KEYWORD PARAMETERS:                                       @Y30LB02
.*                                                             @Y30LB02
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02
.*          IS STORED.                                         @Y30LB02
.*                                                             @Y30LB02
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02
.*              AND LENGTH FIELDS.                             @Y30LB02
.*                                                             @Y30LB02
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02
.*                                                             @Y30LB02
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02
.*              PLS LIST FORM.                                 @Y30LB02
.*                                                             @Y30LB02
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02
.*              BUTE EXAMPLE:                                  @Y30LB02
.*                                                             @Y30LB02
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02
.*              BASED(*), ETC.                                 @Y30LB02
.*                                                             @Y30LB02
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02
.*              BINDING INSTRUCTIONS.                          @Y30LB02
.*                                                             @Y30LB02
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02
.*                                                             @Y30LB02
.*              SUB-PARAMETERS                                 @Y30LB02
.*                                                             @Y30LB02
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02
.*                                                             @Y30LB02
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02
.*                                                             @Y30LB02
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02
.*                   IN THE REQUEST BLOCK.                     @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   FLAGS--FLAGS:  THE 2 BYTE FIELD WHICH INDICATES THE       @Y30LB02
.*   TABLE TO BE COPIED.  THE FORMAT OF THE 'FLAGS' FIELD      @Y30LB02
.*   IS SHOWN BELOW:                                           @Y30LB02
.*                                                             @Y30LB02
.*     BITS 0-7                                                @Y30LB02
.*     ____________________________                            @Y30LB02
.*     × X ×X ×X × X× 0× 0 ×0 × 0×                             @Y30LB02
.*     ----------------------------                            @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*  BIT SPECIFICATIONS FOR BITS 0-7                            @Y30LB02
.*                                                             @Y30LB02
.*  BITS 0-3------------MAY BE SET TO 8                        @Y30LB02
.*                                                             @Y30LB02
.*  BITS 4-7------------UNUSED AND MUST BE SET TO ZERO         @Y30LB02
.*                                                             @Y30LB02
.*   IF BITS 0-3 OF THE FLAGS FIELD IS SET TO EIGHT, THE       @Y30LB02
.*   FOLLOWING TABLES WILL BE COPIED                           @Y30LB02
.*                                                             @Y30LB02
.*   TABLE ID  TABLE                                           @Y30LB02
.*                                                             @Y30LB02
.*       1     STAGING DRIVE                                   @Y30LB02
.*       2     MOUNTED VOLUME                                  @Y30LB02
.*       3     SCRATCH CARTRIDGE                               @Y30LB02
.*       4     VOLUME INVENTORY                                @Y30LB02
.*       5     TRANSIENT VOLUME                                @Y30LB02
.*       6     VDA/VOLID CROSS REFERENCE                       @Y30LB02
.*       7     CONFIGURATION                                   @Y30LB02
.*       9     CELL MAP                                        @Y30LB02
.*       A     VDA                                             @Y30LB02
.*       B     JOURNAL                                         @Y30LB02
.*       C     SCHEDULE QUEUE                                  @Y30LB02
.*       D     DIAGNOSTIC,EC AND OVERLAY                       @Y30LB02
.*                                                             @Y30LB02
.*   BITS 8-15 OF THE FLAGS FIELD WILL BE USED TO COPY THE     @Y30LB02
.*   TRACE TABLE IN ITS ENTIRETY OR SPECIFIC VARIATIONS        @Y30LB02
.*   THEREOF.                                                  @Y30LB02
.*                                                             @Y30LB02
.*    BITS 8-15                                                @Y30LB02
.*     ____________________________                            @Y30LB02
.*     × X ×X ×X × X× 0× 0 ×0 × 0×                             @Y30LB02
.*     ____________________________                            @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   *BIT 8--------------'1'B  COPY TRACE X                    @Y30LB02
.*                       '0'B  NO FUNCTION REQUESTED           @Y30LB02
.*                                                             @Y30LB02
.*   *BIT 9--------------'1'B  COPY TRACE Y                    @Y30LB02
.*                       '0'B  NO FUNCTION REQUESTED           @Y30LB02
.*                                                             @Y30LB02
.*     *NOTE:  IF BOTH BITS(8 AND 9) ARE SET TO 1,             @Y30LB02
.*         THE ENTIRE TRACE TABLE WILL BE COPIED.              @Y30LB02
.*         (TRACE X AND TRACE Y)                               @Y30LB02
.*                                                             @Y30LB02
.*   BIT 10--------------'1'B  COPY ACTIVE TRACE               @Y30LB02
.*                       '0'B  NO FUNCTION REQUESTED           @Y30LB02
.*                                                             @Y30LB02
.*   BIT 11--------------'1'B  COPY INACTIVE TRACE             @Y30LB02
.*                       '0'B   NO FUNCTION REQUESTED          @Y30LB02
.*                                                             @Y30LB02
.*   BITS 12-15----------UNUSED AND MUST BE SET TO ZERO        @Y30LB02
.*                                                             @Y30LB02
.*       **********            **********                      @Y30LB02
.*                                                             @Y30LB02
.*   NOTE 1: BITS 0-7 AND BITS 8-15 ARE MUTUALLY EXCLUSIVE.    @Y30LB02
.*       IF THE TABLE ID IS SPECIFIED IN BITS 0-7,             @Y30LB02
.*       THEN BITS 8-15 MUST BE SET TO ZERO.                   @Y30LB02
.*                                                             @Y30LB02
.*   NOTE 2: BITS 8 AND 9 MAY BOTH BE SPECIFIED AT             @Y30LB02
.*       THE SAME TIME, HOWEVER, NEITHER BIT                   @Y30LB02
.*       8 OR 9 CAN BE USED IN CONJUNCTION                     @Y30LB02
.*       WITH EITHER BIT 10 OR 11.                             @Y30LB02
.*                                                             @Y30LB02
.*   NOTE 3: BITS 10 AND 11 ARE MUTUALLY EXCLUSIVE.            @Y30LB02
.*                                                             @Y30LB02
.*   NOTE 4: THE MSC WILL BE RESPONSIBLE FOR RETURN OF         @Y30LB02
.*           A MESSAGE TO THE MESSAGE BUFFER.  THIS            @Y30LB02
.*           MESSAGE WILL GIVE THE 'START' AND 'END' CHR'S     @Y30LB02
.*           FOR THE TABLE THAT WAS COPIED.  THE CHRS WILL     @Y30LB02
.*           BE THE ADDRESS OF THE TABLE ON THE TARGET         @Y30LB02
.*           VIRTUAL VOLUME.  THE MSC WILL ALSO RETURN THE     @Y30LB02
.*           THE ORIGINAL 'START' CHR OF THE TABLE BEFORE      @Y30LB02
.*           IT WAS COPIED.  IF A TRACE TABLE WAS COPIED,      @Y30LB02
.*           THE MSC WILL ALSO RETURN THE 'CURRENT' CHR        @Y30LB02
.*           VALUE FOR THE TRACE TABLE; THIS CHR WILL BE       @Y30LB02
.*           THE ORIGINAL CHR BEFORE THE TRACE TABLE WAS       @Y30LB02
.*           COPIED.                                           @Y30LB02
.*                                                             @Y30LB02
.*   NOTE 5: THE MSC WILL RETURN CHRS FOR BOTH TRACE AREAS     @Y30LB02
.*           WHEN BOTH TRACE AREAS ARE COPIED.                 @Y30LB02
.*                                                             @Y30LB02
.*  VOLID -- VOLUME IDENTIFIER:  THE VOLUME IDENTIFIER OF      @Y30LB02
.*           THE VOLUME TO WHICH THE TABLES ARE TO BE          @Y30LB02
.*           COPIED.  THIS VOLUME MUST BE MOUNTED.             @Y30LB02
.*                                                             @Y30LB02
.*  ECB ---- EVENT CONTROL BLOCK:  ADDRESS OF AN EVENT         @Y30LB02
.*           CONTROL BLOCK.  THIS PARAMETER IS PROVIDED SINCE  @Y30LB02
.*           A DELAYED RESPONSE IS ALWAYS GIVEN FOR A COPY     @Y30LB02
.*           TABLES REQUEST.  THE ECB WILL BE POSTED WITH      @Y30LB02
.*           ONE OF THE FOLLOWING POST CODES: 70, 71, 72, 73,  @Y30LB02
.*           74, ETC.. THE POST CODE WILL BE PLACED IN THE     @Y30LB02
.*           LOW-ORDER BYTE OF THE ECB - '7F'X INDICATES       @Y30LB02
.*           SUCCESSFUL COMPLETION.  THE ECB AREA MUST BE      @Y30LB02
.*           CLEARED(SET TO BINARY 0) BEFORE INVOKING          @Y30LB02
.*           THE MACRO.                                        @Y30LB02
.*                                                             @Y30LB02
.*  EXTS --- EXTENTS:  A FOUR BYTE AREA WHICH CONTAINS         @Y30LB02
.*           THE BEGINNING CYLINDER (2 BYTES) AND ENDING       @Y30LB02
.*           CYLINDER (2 BYTES) OF THE EXTENT OF THE VIRTUAL   @Y30LB02
.*           VOLUME TO WHICH THE TABLES ARE TO BE COPIED.      @Y30LB02
.*           THE EXTENTS PARAMETER MUST SPECIFY SUFFICIENT     @Y30LB02
.*           CONTIGUOUS CYLINDERS TO ACCOMMODATE THE           @Y30LB02
.*           TABLE(S) TO BE COPIED AS THEY ARE MAPPED IN THE   @Y30LB02
.*           PAGES OF THE MSC TABLES.                          @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02
.*                                                             @Y30LB02
.*02    CONDITION = RETURN CODE = 0.                           @Y30LB02
.*                                                             @Y30LB02
.*02    OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM       @Y30LB02
.*               THE REQUESTED FUNCTION.                       @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02
.*                                                             @Y30LB02
.*02    CONDITION = RETURN CODE = 12.                          @Y30LB02
.*                                                             @Y30LB02
.*02    OUTPUT = ERROR MESSAGE                                 @Y30LB02
.*                                                             @Y30LB02
.*01  EXTERNAL-REFERENCES = NONE                               @Y30LB02
.*                                                             @Y30LB02
.*01  TABLES = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.*01 MESAGES = AS FOLLOWS:                                     @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*           ICB602I: A NAME FOR THE REQUEST BLOCK MUST        @Y30LB02
.*                    BE SPECIFIED IN MF(2)                    @Y30LB02
.*           ICB604I: WARNING-ONLY THE MF PARAMETER IS         @Y30LB02
.*                    VALID FOR THE LIST FORM                  @Y30LB02
.*           ICB605I: ECB MUST BE SPECIFIED FOR                @Y30LB02
.*                    STANDARD FORM MACRO                      @Y30LB02
.*           ICB606I: EXTS MUST BE SPECIFIED FOR               @Y30LB02
.*                    STANDARD FORM MACRO                      @Y30LB02
.*           ICB607I: FLAGS MUST BE SPECIFIED FOR              @Y30LB02
.*                    STANDARD FORM MACRO                      @Y30LB02
.*           ICB610I: VOLID MUST BE SPECIFIED FOR              @Y30LB02
.*                    STANDARD FORM MACRO                      @Y30LB02
.*           ICB612I: MF(2) MUST CONTAIN REQ BLK NAME          @Y30LB02
.*                    IF EXEC MACRO FORM REQUESTED             @Y30LB02
.*           ICB613I: MISSING REQ BLK NAME OR MORE             @Y30LB02
.*                    THAN 2 SUBPARAMETERS FOR MF              @Y30LB02
.*           ICB615I: INVALID MF PARAMETER SPECIFIED,          @Y30LB02
.*                    MUST BE L, E, OR NULL                    @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*01  INNER=MACRO = NONE                                       @Y30LB02
.*                                                             @Y30LB02
.*01  SYSTEM-MACROS = IHBINNRA                                 @Y30LB02
.*                                                             @Y30LB02
.*01  CHANGE-ACTIVITY = S/D = X04AC02 AND Y30LB02              @Y30LB02
.*                                                             @Y30LB02
.**** END OF SPECIFICATIONS ***                                @Y30LB02
         MACRO
&SYMBOL  ICBCOTB &MF=,&VOLID=,&ECB=,&EXTS=,&FLAGS=
         LCLB  &ESW                    EXIT-SWITCH             @Y30LB02
         LCLB  &BSW                    BRCH-SWITCH             @Y30LB02
         LCLC  &COTB                                           @Y30LB02
&COTB    SETC  'CT'.'&SYSNDX'                                  @Y30LB02
         AIF   ('&MF(1)' NE 'L').NLIST BRCH IF NOT LIST FORM   @Y30LB02
         AIF   ('&VOLID' NE '' OR '&ECB' NE '' OR '&EXTS' NE           *
               '' OR '&FLAGS' NE '').WARN                      @Y30LB02
         AGO   .LIST                                           @Y30LB02
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02
         MNOTE 4,'  IS VALID FOR THE LIST FORM  '              @Y30LB02
.LIST    ANOP                                                  @Y30LB02
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02
*  MACMEAN  MSSC COPY TABLES MACRO--INITIALIZED LIST FORM      @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  DS    0F                                              @Y30LB02
COTBLEN  DC    F'24'                   REQUEST BLK LENGTH      @Y30LB02
COTBOP   DC    XL1'16'                 COTB OPCODE             @Y30LB02
COTBRES1 DC    XL1'00'                 RESERVED FIELD          @Y30LB02
COTBFLAG DC    XL2'0000'               FLAGS FIELD             @Y30LB02
COTBEXT  DC    XL4'00000000'           EXTENTS FIELD           @Y30LB02
COTBVOL  DC    XL6'000000000000'       VOLID FIELD             @Y30LB02
COTBASID DC    XL2'0000'               ASID FIELD              @Y30LB02
COTBECB  DC    XL4'00000000'           ECB FIELD               @Y30LB02
         AGO   .EXIT                   BRANCH TO END           @Y30LB02
.*                                                             @Y30LB02
.LISTDS  ANOP                                                  @Y30LB02
*  MACMEAN  MSSC COPY TABLES MACRO--UNINITIALIZED LIST FORM    @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
ICBCOTB  DSECT                                                 @Y30LB02
COTBLEN  DS    F                       REQUEST LEN 18 HEX      @Y30LB02
COTBOP   DS    XL1                     COTB OPCODE 16 HEX      @Y30LB02
COTBRES1 DS    XL1                     RESERVED FIELD          @Y30LB02
COTBFLAG DS    XL2                     FLAGS FIELD             @Y30LB02
COTBEXT  DS    XL4                     EXTENTS FIELD           @Y30LB02
COTBVOL  DS    XL6                     VOLID FIELD             @Y30LB02
COTBASID DS    XL2                     ASID FIELD              @Y30LB02
COTBECB  DS    A                       ECB FIELD               @Y30LB02
         AGO   .EXIT                   BRANCH TO END           @Y30LB02
.NLIST   AIF   ('&MF(1)' NE '').EXCK   IF NOT STD FORM,BRCH    @Y30LB02
*  MACMEAN  MSSC COPY TABLES MACRO--STANDARD FORM              @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
         CNOP 0,4                                              @Y30LB02
&SYMBOL  BAL   1,&COTB                 BRCH AROUND REQBLK      @Y30LB02
COTBLEN  DC    A(&COTB-*)              REQUEST BLOCK LENGTH    @Y30LB02
COTBOP   DC    XL1'16'                 COTB OPCODE             @Y30LB02
COTBRES1 DC    XL1'00'                 RESERVED FIELD          @Y30LB02
COTBFLAG DC    XL2'0000'               FLAGS FIELD             @Y30LB02
COTBEXT  DC    XL4'00000000'           EXTENTS FIELD           @Y30LB02
COTBVOL  DC    XL6'000000000000'       VOLID FIELD             @Y30LB02
COTBASID DC    XL2'0000'               ASID FIELD              @Y30LB02
COTBECB  DC    XL4'00000000'           ECB FIELD               @Y30LB02
&COTB    EQU   *                                               @Y30LB02
         AGO   .TEST                   BRANCH                  @Y30LB02
.EXCK    AIF   ('&MF(1)' EQ 'E').EXEC  IF EXEC FORM,BRCH       @Y30LB02
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL '        @Y30LB02
         AGO   .TEST                   BRANCH                  @Y30LB02
.EXEC    AIF   (N'&MF EQ 2).CONT       IF 2 SUBPARAMETERS,BRCH @Y30LB02
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR MORE '  @Y30LB02
         MNOTE 12,'  THAN 2 SUBPARAMETERS FOR MF'              @Y30LB02
         AGO   .TEST                   BRANCH                  @Y30LB02
.CONT    ANOP                                                  @Y30LB02
.*                                                             @Y30LB02
*  MACMEAN  MSSC COPY TABLES MACRO--EXECUTE FORM               @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  IHBINNRA &MF(2)               ADDR OF REQUEST BLK     @Y30LB02
.*                                     USING IHBINNRA MACRO    @Y30LB02
         LA    15,24                   LENGTH(24) INTO R15     @Y30LB02
         ST    15,0(1)                 STORE R15 IN BLOCK      @Y30LB02
         MVI   4(1),X'16'              STORE  OPCODE           @Y30LB02
.TEST    AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02
         AIF   ('&FLAGS' NE '').TEST6  BRCH IF FLAGS SPECIFIED @Y30LB02
         AIF   ('&MF(1)' EQ '').SETESW0 BRCH IF STD FORM       @Y30LB02
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02
         AGO   .TEST6                  BRANCH                  @Y30LB02
.SETESW0 ANOP                                                  @Y30LB02
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
.TEST6   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02
         AIF   (&BSW).RESET0           BRCH IF BRCH-SWITCH ON  @Y30LB02
         AIF   ('&FLAGS'(1,1) EQ '(').RFLAGS BRCH IF IN REG    @Y30LB02
         MVC   6(2,1),&FLAGS           MV FLAGS INTO FLAGS FLD @Y30LB02
         AGO   .RESET0                 BRANCH                  @Y30LB02
.RFLAGS  ANOP                                                  @Y30LB02
         MVC   6(2,1),0(&FLAGS(1))     MV FLAGS TO FLAGS FLD   @Y30LB02
.RESET0  ANOP                                                  @Y30LB02
&BSW     SETB  0                                               @Y30LB02
         AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02
         AIF   ('&VOLID' NE '').TEST2  BRCH IF VOLID SPECIFIED @Y30LB02
         AIF   ('&MF(1)' EQ '').SETESW1 BRCH IF STD FORM       @Y30LB02
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02
         AGO   .TEST2                  BRANCH                  @Y30LB02
.SETESW1 ANOP                                                  @Y30LB02
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED '       @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
.TEST2   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02
         AIF   (&BSW).RESET1           BRCH IF BRCH-SWITCH ON  @Y30LB02
         AIF   ('&VOLID'(1,1) EQ '(').RVOLID BRCH IF IN REG    @Y30LB02
         MVC   8(6,1),&VOLID           MV VOLID INTO VOLID FLD @Y30LB02
         AGO   .RESET1                 BRANCH                  @Y30LB02
.RVOLID  ANOP                                                  @Y30LB02
         MVC   8(6,1),0(&VOLID(1))     MV VOLID TO VOLID FLD   @Y30LB02
.RESET1  ANOP                                                  @Y30LB02
&BSW     SETB  0                       RESET BRCH-SWITCH TO 0  @Y30LB02
         AIF   ('&ECB' NE '').TEST3    BRCH IF ECB SPECIFIED   @Y30LB02
         AIF   ('&MF(1)' EQ '').SETESW2 BRCH IF STD FORM       @Y30LB02
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02
         AGO   .TEST3                  BRANCH                  @Y30LB02
.SETESW2 ANOP                                                  @Y30LB02
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED FOR '     @Y30LB02
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02
.TEST3   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02
         AIF   (&BSW).RESET2           BRCH IF BRCH-SWITCH ON  @Y30LB02
         AIF   ('&ECB'(1,1) EQ '(').RECB BRCH IF IN REG        @Y30LB02
         LA    15,&ECB                 LOAD R15 WITH ADDR      @Y30LB02
         ST    15,16(1)                ST ADDR IN ECB FIELD    @Y30LB02
         AGO   .RESET2                 BRANCH                  @Y30LB02
.RECB    ANOP                                                  @Y30LB02
         ST    &ECB,16(1)              ST ADDR IN ECB FIELD    @Y30LB02
.RESET2  ANOP                                                  @Y30LB02
&BSW     SETB  0                       RESET BRCH-SWITCH TO 0  @Y30LB02
         AIF   ('&EXTS' NE '').TEST4   BRCH IF EXTS SPECIFIED  @Y30LB02
         AIF   ('&MF(1)' EQ '').SETESW3 BRCH IF STD FORM       @Y30LB02
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02
         AGO   .TEST4                  BRANCH                  @Y30LB02
.SETESW3 ANOP                                                  @Y30LB02
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02
         MNOTE 12,'  ICB606I - EXTS MUST BE SPECIFIED FOR '    @Y30LB02
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02
.TEST4   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02
         AIF   (&BSW).LINK             BRCH IF BRCH-SWITCH ON  @Y30LB02
         AIF   ('&EXTS'(1,1) EQ '(').REXTS BRCH IF IN REG      @Y30LB02
         MVC   20(4,1),&EXTS           MV EXTS INTO EXTS FLD   @Y30LB02
         AGO   .LINK                   BRANCH                  @Y30LB02
.REXTS   ANOP                                                  @Y30LB02
         MVC   20(4,1),0(&EXTS(1))     MV EXTS TO EXTS FLD     @Y30LB02
.LINK    ANOP                                                  @Y30LB02
         SVC   126                     ISSUE SVC INSTRUCTION   @Y30LB02
.EXIT    MEND                                                  @Y30LB02
**/
* ICBCOTB: MACRO KEYS(MF,VOLID,ECB,EXTS,FLAGS);            /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/* EXTERNAL DECLARES                                        @Y30LB02*/
*   DCL COTBTEST FIXED EXT;            /*USED AS A TEST TO   @Y30LB02*/
*                                      /*SEE IF STD FORM     @Y30LB02*/
*                                      /*ALREADY INVOKED     @Y30LB02*/
*   DCL COTESTR1 FIXED EXT;            /*USED AS A TEST TO   @Y30LB02*/
*                                      /*SEE IF R1 ALREADY   @Y30LB02*/
*                                      /*DECLARED            @Y30LB02*/
*/* INTERNAL DECLARES                                        @Y30LB02*/
*   DCL  RETCODE FIXED;                /*RETURN CODE         @Y30LB02*/
*   DCL  COPCODE CHAR;                 /*COPY TABLES OPCODE  @Y30LB02*/
*   DCL  LENGTH CHAR;                  /*LENGTH OF BLOCK     @Y30LB02*/
*   DCL  ESW FIXED;                    /*EXIT-SWITCH         @Y30LB02*/
*   DCL  BSW FIXED;                    /*BRCH-SWITCH         @Y30LB02*/
*   DCL  CTR FIXED;                    /*PARM-SWITCH         @Y30LB02*/
*   COPCODE='16';                      /*COPY TABLES OPCODE  @Y30LB02*/
*   LENGTH='18';                       /*DEFINE REQ LENGTH   @Y30LB02*/
*/* INITIALIZE SWITCHES TO ZERO                              @Y30LB02*/
*   ESW=0;                             /*INIT ERROR SWITCH   @Y30LB02*/
*   BSW=0;                             /*INIT BRANCH SWITCH  @Y30LB02*/
*   CTR=0;                             /*INIT PARM  SWITCH   @Y30LB02*/
*/* END OF DECLARES AND INITIALIZATION                       @Y30LB02*/
*   IF COTESTR1=0 THEN                 /*HAS R1 BEEN DCL'D?  @Y30LB02*/
*             DO;                      /*NO,DECLARE IT       @Y30LB02*/
*                  ANS('DCL COTBR1 PTR REG(1) ;'××         /*@Y30LB02*/
*                       '/*WILL CONTAIN BLOCK ADDRESS @Y30LB02*/')
*                       SKIP(1);                           /*@Y30LB02*/
*                  COTESTR1=1;         /*COTESTR1 SET TO 1   @Y30LB02*/
*             END;                     /*                    @Y30LB02*/
*   IF MF(1)^='L' THEN                 /*IF NOT LIST FORM    @Y30LB02*/
*        GO TO NOTLIST;                /*THEN BRANCH         @Y30LB02*/
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Y30LB02*/
*        DO;                           /*NO,TURN ESW ON AND  @Y30LB02*/
*             ESW=1;                   /*PRINT ERROR MSG     @Y30LB02*/
*             ANS MSG('  ICB602I - A NAME FOR THE '××
*                  'REQUEST BLOCK MUST BE SPECIFIED '××
*                  'IN MF(2)')SKIP(5);                     /*@Y30LB02*/
*             RETCODE=12;              /*SET RETURN CODE     @Y30LB02*/
*        END;                          /*                    @Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, BRANCH         @Y30LB02*/
*        IF FLAGS ^= '' THEN  /*FLAGS SPECIFIED?             @Y30LB02*/
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @Y30LB02*/
*        IF VOLID ^= '' THEN  /*VOLID SPECIFIED?             @Y30LB02*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @Y30LB02*/
*        IF EXTS ^= '' THEN   /*EXTENTS SPECIFIED?           @Y30LB02*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/
*        IF ECB ^= '' THEN    /*ECB SPECIFIED?               @Y30LB02*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @Y30LB02*/
*          DO;                /*YES,PRINT WARNING MSG        @Y30LB02*/
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @Y30LB02*/
*             ANS MSG('  ICB604I - WARNING-ONLY'××
*                 ' THE MF PARAMETER IS VALID FOR THE'××
*                 ' LIST FORM  ')SKIP;                     /*@Y30LB02*/
*          END;               /*                             @Y30LB02*/
*   IF MF(3) ^= '' THEN                /*PLS ATTR SPCD?      @Y30LB02*/
*        GO TO ATTRLST;                /*BRANCH              @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/* PRINT OUT DECLARES FOR LIST FORM                         @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ANS('/*******************************************'××
*       '************** @Y30LB02*/')SKIP;
*   ANS('/*    MACMEAN  MSSC COPY TABLES MACRO       '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*       '               @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************** @Y30LB02*/')SKIP;
*   ANS('DCL 1  '××MF(2)××'  STATIC LOCAL,') SKIP(1);      /*@Y30LB02*/
*   ANS('      2  COTBLL FIXED(31) INIT('××QUOTE('18')××
*        'X), /*LENGTH OF REQUEST BLOCK @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBOP FIXED(8) INIT('××QUOTE(COPCODE)××
*        'X), /*OPCODE @Y30LB02*/') SKIP(1);
*   ANS('      2  * CHAR(1) INIT('××QUOTE('00')××
*        'X), /*RESERVED AREA @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBFLG BIT(16) INIT('××
*        QUOTE('0000000000000000')××'B), /*FLAGS FIELD @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*   ANS('        3  COTBTID BIT(4),/*TABLE IDENTIFI'××
*        'CATION, MUST BE SET TO 8 FOR TABLES OTHER '××
*        'THAN TRACE  @Y30LB02*/') SKIP(1);
*   ANS('        3  *       BIT(4),/*RESERVED BITS'××
*        ' AND MUST BE ZERO @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRX BIT(1),/*COPY TRACEX'××
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRY BIT(1),/*COPY TRACEY'××
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRA BIT(1),/*COPY TRACE'××
*        ' ACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRI BIT(1),/*COPY TRACE'××
*        ' INACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  *       BIT(4),/*RESERVED BITS '××
*        'AND MUST BE ZERO @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBEXTS CHAR(4) INIT('××QUOTE('00000000')
*        ××'X), /*BEG AND END EXTENTS @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBVOL CHAR(6) INIT('××
*        QUOTE('000000000000')××'X), /*VOLID FIELD @Y30LB02*/')
*        SKIP(1);
*   ANS('      2  COTBASID CHAR(2) INIT('××QUOTE('0000')××
*        'X), /*ASID FIELD @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBECB FIXED(31) INIT(0);/*NAME OF ECB @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*   GO TO EXIT;                        /*BRANCH TO END       @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/* THIS IS ALL THAT IS DONE FOR LIST FORM                   @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*ATTRLST:
*/*                                                          @Y30LB02*/
*   ANS('/*******************************************'××
*       '************* @Y30LB02*/')SKIP;
*   ANS('/*     MACMEAN  MSSC COPY TABLES MACRO      '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @Y30LB02*/')SKIP;
*   ANS('DCL 1  '××MF(2)××' '××MF(3)××','××
*   '/*COPY TABLES REQUEST BLOCK*/ ') SKIP(1);
*   ANS('      2  COTBLL FIXED(31), /*LENGTH'××
*        ' = 18 BYTES HEX @Y30LB02*/')SKIP(1);
*   ANS('      2  COTBOP FIXED(8) , /*OPCODE='××
*        ' 16 HEX @Y30LB02*/') SKIP(1);
*   ANS('      2  * CHAR(1), /*RESERVED AREA @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBFLG BIT(16),'××
*        ' /*FLAGS FIELD @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTID BIT(4),/*TABLE IDENTIFI'××
*        'CATION, MUST BE SET TO 8 FOR TABLES OTHER '××
*        'THAN TRACE  @Y30LB02*/') SKIP(1);
*   ANS('        3  *       BIT(4),/*RESERVED BITS'××
*        ' AND MUST BE ZERO @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRX BIT(1),/*COPY TRACEX'××
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRY BIT(1),/*COPY TRACEY'××
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRA BIT(1),/*COPY TRACE'××
*        ' ACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRI BIT(1),/*COPY TRACE'××
*        ' INACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  *       BIT(4),/*RESERVED BITS '××
*        'AND MUST BE ZERO @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBEXTS CHAR(4),'××
*        ' /*BEG AND END EXTENTS @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBVOL CHAR(6),'××
*        ' /*VOLID FIELD @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBASID CHAR(2), /*ASID AREA '××
*        'USED BY THE SVC @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBECB FIXED(31);/*NAME OF ECB @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*   GO TO EXIT;                        /*BRANCH TO END       @Y30LB02*/
*NOTLIST:
*   IF MF(1)^='' THEN                  /*STD FORM REQUEST?   @Y30LB02*/
*        GO TO EXCHECK;                /*NO,BRANCH           @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/* THIS PART OF THE MACRO IS FOR STD FORM(MF(1)='')         @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF COTBTEST=1 THEN                 /*IF THE STD FRM HAS  @Y30LB02*/
*                                      /*BEEN INVOKED ALRDY  @Y30LB02*/
*        DO;                           /*SET UP REG1 TO PNT  @Y30LB02*/
*                                      /*TO REQUEST BLOCK    @Y30LB02*/
*           ANS('/***********************************'××
*               '********************* @Y30LB02*/')SKIP;
*           ANS('/*     MACMEAN  MSSC COPY TABLES    '××
*               ' MACRO                @Y30LB02*/')SKIP;
*           ANS('/*     VS1-4/VS2-3 VERSION--06/09/74'××
*               'LEVEL 00              @Y30LB02*/')SKIP;
*           ANS('/*     THIS IS THE OUTPUT FOR A     '××
*               'SECONDARY             @Y30LB02*/')SKIP;
*           ANS('/*     INVOCATION OF THE STANDARD   '××
*               'FORM MACRO            @Y30LB02*/')SKIP;
*           ANS('/***********************************'××
*               '********************* @Y30LB02*/')SKIP;
*             ANS('RFY(COTBR1)RSTD;'××                     /*@Y30LB02*/
*                '/*RESTRICT REGISTER 1 @Y30LB02*/')SKIP(1);
*             ANS('COTBR1=ADDR(COTBLL);'××                 /*@Y30LB02*/
*                '/*COTBR1 ADDRESS OF REQ BLOCK @Y30LB02*/')SKIP(1);
*             GO TO TEST1;                                 /*@Y30LB02*/
*        END;                                              /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/* OTHERWISE, PRINT OUT DECLARES FOR STD FORM               @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ANS('/*******************************************'××
*       '************* @Y30LB02*/')SKIP;
*   ANS('/*     MACMEAN  MSSC COPY TABLES MACRO      '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @Y30LB02*/')SKIP;
*   ANS ('DCL  1 COTBLIST  STATIC LOCAL,') SKIP(1);        /*@Y30LB02*/
*   ANS('      2  COTBLL FIXED(31) INIT('××QUOTE('18')××
*        'X), /*LENGTH OF REQUEST BLOCK @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBOP FIXED(8) INIT('××QUOTE(COPCODE)××
*        'X), /*OPCODE @Y30LB02*/') SKIP(1);
*   ANS('      2  * CHAR(1) INIT('××QUOTE('00')××
*        'X), /*RESERVED AREA @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBFLG BIT(16) INIT('××
*        QUOTE('0000000000000000')××'B), /*FLAGS FIELD @Y30LB02*/')
*        SKIP(1);
*   ANS('        3  COTBTID BIT(4),/*TABLE IDENTIFI'××
*        'CATION @Y30LB02*/') SKIP(1);
*   ANS('        3  *       BIT(4),/*RESERVED BITS'××
*        ' AND MUST BE ZERO @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRX BIT(1),/*COPY TRACEX'××
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRY BIT(1),/*COPY TRACEY'××
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRA BIT(1),/*COPY TRACE'××
*        ' ACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  COTBTRI BIT(1),/*COPY TRACE'××
*        ' INACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);
*   ANS('        3  *       BIT(4),/*RESERVED BITS '××
*        'AND MUST BE ZERO @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBEXTS CHAR(4) INIT('××QUOTE('00000000')
*        ××'X), /*BEG AND END EXTENTS @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBVOL CHAR(6) INIT('××
*        QUOTE('000000000000')××'X), /*VOLID FIELD @Y30LB02*/')
*        SKIP(1);
*   ANS('      2  COTBASID CHAR(2) INIT('××QUOTE('0000')××
*        'X), /*ASID FIELD @Y30LB02*/') SKIP(1);
*   ANS('      2  COTBECB FIXED(31) INIT(0);/*NAME OF ECB @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*   COTBTEST=1;                        /*SET SWITCH TO 1     @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/* END OF DECLARES FOR REQUEST BLOCK                        @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ANS('RFY(COTBR1)RSTD;/*RESTRICT REGISTER 1 @Y30LB02*/')SKIP;
*   ANS('COTBR1=ADDR(COTBLL);/*COTBR1  ADDR OF REQBLK @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*   GO TO TEST1;                       /*BRANCH              @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/* THE MACRO BRANCHES HERE FOR EXEC FORM                    @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM?          @Y30LB02*/
*             GO TO EXFORM;            /*YES, BRANCH         @Y30LB02*/
*   ESW=1;                             /*TURN EXIT-SWTCH ON  @Y30LB02*/
*   DO;                                /*PRINT THIS ERR MSG  @Y30LB02*/
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'××
*             ' SPECIFIED, MUST BE L, E, OR NULL') SKIP(5);/*@Y30LB02*/
*   END;                                /*                   @Y30LB02*/
*   RETCODE=12;                        /*SET RETURN CODE     @Y30LB02*/
*   GO TO TEST1;                       /*BRANCH              @Y30LB02*/
*EXFORM: IF MF(2)='' THEN              /*ADDR OF LIST GIVEN  @Y30LB02*/
*             DO;                      /*NO,PRINT ERROR MSG  @Y30LB02*/
*                  ESW=1;              /*TURN EXIT-SWTCH ON  @Y30LB02*/
*                  ANS MSG('  ICB612I - MF(2) MUST '××
*                  'CONTAIN REQ BLK NAME IF '××
*                  'EXEC MACRO FORM REQUESTED ') SKIP(5);  /*@Y30LB02*/
*                  RETCODE=12;         /*SET RETURN CODE     @Y30LB02*/
*                  GO TO TEST1;        /*BRANCH              @Y30LB02*/
*             END;                     /*                    @Y30LB02*/
*   ANS('/*******************************************'××
*       '************* @Y30LB02*/')SKIP;
*   ANS('/*     MACMEAN  MSSC COPY TABLES MACRO      '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*       '              @Y30LB02*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @Y30LB02*/')SKIP;
*   ANS('RFY(COTBR1)RSTD;/*RESTRICT REGISTER 1 @Y30LB02*/')SKIP;
*   ANS('COTBR1=ADDR('××MF(2)××
*        '); /*SET COTBR1 TO ADDR OF REQ BLK @Y30LB02*/') SKIP(1);
*  IF MF(3) = 'COMPLETE' THEN    /*REQUEST TO ZERO?          @Y30LB02*/
*   DO;                          /*YES,ZERO BLK              @Y30LB02*/
*   ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';'××         /*@Y30LB02*/
*       '/*ZERO REQUEST BLOCK @Y30LB02*/')SKIP;
*   END;                        /*                           @Y30LB02*/
*   ANS('COTBLL='××QUOTE(LENGTH)××'X;'××                   /*@Y30LB02*/
*       '/*SET LENGTH FIELD @Y30LB02*/')SKIP(1);
*   ANS('COTBOP='××QUOTE(COPCODE)××'X; /*OPCODE @Y30LB02*/') SKIP(1);
*TEST1: BSW=0;                                             /*@Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y30LB02*/
*   IF FLAGS='' THEN                   /*FLAGS SPECIFIED?    @Y30LB02*/
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/
*             IF MF(1)='' THEN         /*FORM                @Y30LB02*/
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/
*                                      /*PRINT ERROR MSG     @Y30LB02*/
*                       ANS MSG('  ICB607I - FLAGS'××
*                        ' MUST BE SPECIFIED FOR STANDARD'××
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/
*                  END;                /*                    @Y30LB02*/
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/
*        END;                          /*                    @Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/
*        GO TO VOLCHECK;               /*YES,GO CK FOR ECB   @Y30LB02*/
*   ANS('COTBFLG='××FLAGS××';/*FILL IN FLAGS FIELD @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*VOLCHECK:  BSW=0;                                         /*@Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y30LB02*/
*   IF VOLID='' THEN                   /*VOLID SPECIFIED?    @Y30LB02*/
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/
*             IF MF(1)='' THEN         /*FORM                @Y30LB02*/
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/
*                                      /*PRINT ERROR MSG     @Y30LB02*/
*                       ANS MSG('  ICB610I - VOLID'××
*                        ' MUST BE SPECIFIED FOR STANDARD'××
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/
*                  END;                /*                    @Y30LB02*/
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/
*        END;                          /*                    @Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/
*        GO TO ECBCHECK;               /*YES,GO CK FOR ECB   @Y30LB02*/
*   ANS('COTBVOL='××VOLID××';/*FILL IN VOLID FIELD @Y30LB02*/')
*        SKIP(1);
*ECBCHECK:  BSW=0;                     /*RESET BRCH-SWITCH   @Y30LB02*/
*   IF ECB='' THEN                     /*ECB   SPECIFIED?    @Y30LB02*/
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/
*             IF MF(1)='' THEN          /*FORM               @Y30LB02*/
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/
*                                      /*PRINT ERROR MSG     @Y30LB02*/
*                       ANS MSG('  ICB605I - ECB'××
*                        ' MUST BE SPECIFIED FOR STANDARD'××
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/
*                  END;                                    /*@Y30LB02*/
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/
*        END;                                              /*@Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/
*        GO TO EXTSCK;                 /*YES,GO CK FOR EXTS  @Y30LB02*/
*   ANS('COTBECB=ADDR'××ECB××';/*FILL IN ECB FIELD @Y30LB02*/')
*        SKIP(1);                                          /*@Y30LB02*/
*EXTSCK:  BSW=0;                       /*RESET BRCH-SWITCH   @Y30LB02*/
*   IF EXTS='' THEN                    /*EXTS  SPECIFIED?    @Y30LB02*/
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/
*             IF MF(1)='' THEN         /*FORM                @Y30LB02*/
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/
*                                      /*PRINT ERROR MSG     @Y30LB02*/
*                       ANS MSG('  ICB606I - EXTS'××
*                        ' MUST BE SPECIFIED FOR STANDARD'××
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/
*                  END;                /*                    @Y30LB02*/
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/
*        END;                          /*                    @Y30LB02*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/
*        GO TO LINK;                   /*YES,BR TO SVC INST  @Y30LB02*/
*   ANS('COTBEXTS='××EXTS××';/*FILL IN EXTS FIELD @Y30LB02*/') SKIP(1);
*LINK: ANS(' SVC (126); /*ISSUE SVC INSTRUCTION @Y30LB02*/')
*        SKIP(1);
*      ANS('RFY  COTBR1 UNRSTD;/*UNRESTRCT REG 1 @Y30LB02*/')SKIP;
*EXIT: RETURN CODE(RETCODE);                               /*@Y30LB02*/
*   %END;                                                  /*@Y30LB02*/
