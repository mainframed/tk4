*/*********************************************************************
**                                                                   **
**    MACRO-NAME = IGGSPW                                            **
**                                                                   **
**    COPYRIGHT = NONE                                               **
**                                                                   **
**    STATUS = VS2 RELEASE 3.7 LEVEL 2                               **
**                                                                   **
**    DESCRIPTIVE-NAME = SET PRINT WORKAREA                          **
**                                                                   **
**    FUNCTION = USED BY SET PRINT MODULES TO MAP                    **
**               THE SET PRINT WORKAREA                              **
**                                                                   **
**    MODULE-TYPE = MACRO                                            **
**                                                                   **
**      MACRO-SIZE = N/A FOR MAPPING MACRO.                          **
**                                                                   **
**      PARAMETER-RECEIVED = IF THIS MACRO IS TO BE USED FOR THE     **
**                           3800 DEVICE, MAKE THE FOLLOWING         **
**                           PLS MACRO STATEMENT BEFORE CALLING      **
**                           THIS MACRO:                             **
**                                %SPW3800 = 'YES'                   **
**                                                                   **
**    TABLES = NONE                                                  **
**                                                                   **
**    INNER-MACROS = NONE                                            **
**                                                                   **
**    SYSTEM-MACROS = IF SPW3800 ='YES', THE FOLLOWING SYSTEM        **
**                    MACROS WILL BE CALLED:                         **
**                                                                   **
**                           IHADCBDF                                **
**                           IHADCB                                  **
**                           IEZDEB                                  **
**                           IEZIOB                                  **
**                           IEFUCBOB                                **
**                           IHASPP                                  **
**                                                                   **
**    CHANGE-ACTIVITY = NONE                                         **
**                                                                   **
**********************************************************************/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*%GOTO SPW001;                          /* BYPASS ASSY MACRO @Z40MSAP*/
*                                       /* STATEMENTS        @Z40MSAP*/
         MACRO
         IGGSPW
***********************************************************************
*                                                                     *
*     MACRO-NAME = IGGSPW                                             *
*                                                                     *
*     COPYRIGHT = NONE                                                *
*                                                                     *
*     STATUS = VS2 RELEASE 3.7 LEVEL 2                                *
*                                                                     *
*     DESCRIPTIVE-NAME = SET PRINT WORKAREA                           *
*                                                                     *
*     FUNCTION = USED BY SET PRINT MODULES TO MAP                     *
*                THE SET PRINT WORKAREA                               *
*                                                                     *
*     MODULE-TYPE = MACRO                                             *
*                                                                     *
*       MACRO-SIZE = N/A FOR MAPPING MACRO.                           *
*                                                                     *
*       PARAMETER-RECEIVED = NONE                                     *
*                                                                     *
*     TABLES = NONE                                                   *
*                                                                     *
*     INNER-MACROS = NONE                                             *
*                                                                     *
*     SYSTEM-MACROS = NONE                                            *
*                                                                     *
*     CHANGE-ACTIVITY = NONE                                          *
*                                                                     *
***********************************************************************
.* /* START OF SPECIFICATIONS ****
.*
.*01  MODULE-NAME = IGGSPW
.*
.*01  COPYRIGHT = NONE
.*
.*01  STATUS = VS2 RELEASE 3.7 LEVEL 2
.*
.*01  DESCRIPTIVE-NAME = SETPRINT WORKAREA
.*
.*01  FUNCTION = USED BY SETPRINT MODULES TO MAP THE WORKAREA,
.*               SVRB EXTENDED SAVE AREA, AND THE BLDL PARAMETER LIST.
.*
.*01  MODULE-TYPE = MACRO
.*
.*02    MACRO-SIZE = NA FOR MAPPING MACRO
.*
.*02    PARAMETER-RECEIVED = NONE
.*
.*01  TABLES = NONE
.*
.*01  INNER-MACROS = NONE
.*
.*01  SYSTEM-MACROS = ESTAE (LIST FORM)
.*
.*01  CHANGE-ACTIVITY = SEE BELOW
.*    VS2 REL 2
.*       MACRO CREATED
.*                                                               YM5703
.*    VS2 REL 4                                                @Z40MSAP
.*       MACRO MODIFIED FOR 3800 PRINTER SUPPORT               @Z40MSAP
.*
.**** END OF SPECIFICATIONS ***/
*%SPW001:;                              /*                   @Z40MSAP*/
* /* MACCOMP Y-2 SC1D0/SJD48            */
* /* MACSTAT Y-2 73124/021160           */
*%GOTO SPW002;                                             /*@Z40MSAP*/
*
* THE FOLLOWING THREE DSECTS (SPW, SPW5, SPRBXSV) ARE USED BY
* THE SETPRT ROUTINES.
*
         EJECT                                                 @Z40MSAP
***********************************************************************
*    THIS IS THE DSECT FOR THAT PORTION OF THE SET PRINT WORK         *
*    AREA GOTTEN IN USER KEY.                                         *
***********************************************************************
         SPACE 2                                               @Z40MSAP
SPW      DSECT
         SPACE 1                                               @Z40MSAP
***********************************************************************
* BASIC SECTION                                                       *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWOPTSA DS    B                        SAVE AREA FOR OPTCD BYTE Y02072
*
SPWPARM1 DS    B                        SAVED REPLY FLAGS        Y02072
*                                       (SEE BELOW FOR BITS)
SPWFLG1  DS    B                        REPLY FLAGS              Y02072
*
SPWVRFCB EQU   X'80'                    VERIFY FCB
SPWALIGN EQU   X'01'                    ALIGN FORMS
*
SPWFLG2  DS    B                        ENTRY ID FOR 8101, 8102  Y02072
*
SPWFLG3  DS    B                        TO SAVE LINE/INCH INDIC  Y02072
*                                                              @Z40MSAP
SPW120RQ EQU   X'10'                    IEC120 MESSAGE REQUIRED
*
SPWFLG4  DS    0B                       FLAG BYTE                Y02072
SPWFLG5  DS    B                        FLAG BYTE                Y02072
SPWFCBDE EQU   X'80'                    FCB IMAGE LOADED AND     Y02072
*                                         MUST BE DELETED        Y02072
SPWECPAM EQU   X'40'                    INDICATES EXCP DCB WITH  YM3920
*                                         ACC METH SECT PRESENT  YM3920
*        EQU   X'20'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'10'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'08'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'04'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'02'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'01'                    UNUSED FLAG BIT        @Z40MSAP
SPWFLG8  DS    B                        FLAG BYTE                Y02072
*              THE FOLLOWING BITS USED BY IGG08104
SPWRETRY EQU   X'80'                    RETRY IN PROGRESS        Y02072
SPWVREND EQU   X'40'                    LAST VERIF LINE PRINTING Y02072
SPWNOMOV EQU   X'20'                    DO NOT MOVE RQSTD MSG    Y02072
SPWFCBOP EQU   X'10'                    FILL FCBOP AS WELL AS    Y02072
*                                       FCBID INTO UCB           Y02072
*        EQU   X'08'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'04'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'02'                    UNUSED FLAG BIT        @Z40MSAP
*        EQU   X'01'                    UNUSED FLAG BIT        @Z40MSAP
         DS    XL1                      UNUSED BYTE FOR ALIGN  @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
* WTOR PREFIX SECTION (MUST IMMEDIATELY PRECEED MESSAGE SECTION)      *
*        THIS PREFIX IS PART OF THE LIST FORM OF WTOR                 *
*        WHEN A WTO MESSAGE IS PLACED IN SPWMSGTX,                    *
*        THE COMBINATION MAKES A VALID WTOR PARAMETER LIST            *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWRPLYA DS    0A                       ADDRESS OF REPLY AREA
SPWMSGLB DS    FL1                      LENGTH OF REPLY AREA
SPWRPLYB DS    AL3                      ADDRESS OF REPLY AREA
SPWECBPA DS    A                        ADDRESS OF REPLY ECB
         SPACE 1                                               @Z40MSAP
***********************************************************************
* MESSAGE SECTION                                                     *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWMSGTX DS    CL64                     MESSAGE AND PRINT LINE   Y02072
         SPACE 1                                               @Z40MSAP
***********************************************************************
* WTOR REPLY AREA AND ASSOCIATED FIELDS                               *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWREPLY DS    0CL16                    OPERATOR REPLY AREA
         DS    X
SPWFCBOR DS    0CL15                    OFFSET OF 1 USED WHEN
*                                         INCREMENTING THROUGH OPER REP
SPWREPC1 DS    CL15                     OFFSET OF 1 USED TO CLEAR FIELD
*
SPWRPECB DS    F                        REPLY ECB FOR WTOR
SPWREPID DS    F                        UCS/FCB ID REPLIED BY OPERATOR
SPWFCBIM DS    0CL8                     FCBXXXXX - NAME OF FCB IMAGE
SPWUCSIM DS    0CL8                     UCSXXXXX - NAME OF UCS IMAGE
         DS    F                        FIRST HALF OF NAME
SPWUCS2H DS    0F                       SECOND HALF OF UCS NAME
SPWFCB2H DS    F                        SECOND HALF OF FCB NAME
         EJECT                                                 @Z40MSAP
***********************************************************************
* IOB FOR EXCP USERS
***********************************************************************
         SPACE 1                                               @Z40MSAP
         DS    0F                       FOR ALIGNMENT
SPWIOB   DS    0CL40                    TO CLEAR IOB
SPWLINK  DS    F                        LINK ADDRESS
SPWECB   DS    F                        ECB
SPWIOS   DS    F                        BEGINNING OF IOS IOB
SPWECBPT DS    F                        POINTER TO ECB
SPWCSW   DS    2F                       CHAN STATUS WORD
SPWCPPTR DS    F                        CHANNEL PROGRAM POINTER
SPWDCB   DS    F                        ADDR OF DCB
         DS    2F                       NOT USED
         SPACE 1                                               @Z40MSAP
***********************************************************************
* AREA TO SAVE FIELDS OF USERS IOB                             @Z40MSAP
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWFLGSV DS    F                        IOB FIRST WORD
SPWSTRSV DS    F                        IOBSTART
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        THE FOLLOWING STRUCTURE MAPS THE CHANNEL PROGRAM             *
*        SECTION OF THE SET PRINT WORKAREA.                           *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPWCCW1  DS    0D                       FIRST CCW              @Z40MSAP
SPWADD1A DS    0A                       BUFFER ADDRESS         @Z40MSAP
SPWOPCD1 DS    XL1                      OP CODE                @Z40MSAP
SPWADD1B DS    AL3                      BUFFER ADDRESS         @Z40MSAP
SPWCCWF1 DS    XL1                      CCW FLAGS              @Z40MSAP
SPWCC1   EQU   X'40'                    COMMAND CHAINING       @Z40MSAP
SPWSILI1 EQU   X'20'                    SILI BIT               @Z40MSAP
         DS    XL1                      FILLER                 @Z40MSAP
SPWBYTE1 DS    XL2                      BYTE COUNT             @Z40MSAP
SPWCCW2  DS    0D                       SECOND CCW             @Z40MSAP
SPWADD2A DS    0A                       BUFFER ADDRESS         @Z40MSAP
SPWOPCD2 DS    XL1                      OP CODE                @Z40MSAP
SPWADD2B DS    AL3                      BUFFER ADDRESS         @Z40MSAP
SPWCCWF2 DS    XL1                      CCW FLAGS              @Z40MSAP
SPWCC2   EQU   X'40'                    COMMAND CHAINING       @Z40MSAP
SPWSILI2 EQU   X'20'                    SILI BIT               @Z40MSAP
         DS    XL1                      FILLER                 @Z40MSAP
SPWBYTE2 DS    XL2                      BYTE COUNT             @Z40MSAP
SPWCCW3  DS    0D                       THIRD CCW              @Z40MSAP
SPWADD3A DS    0A                       BUFFER ADDRESS         @Z40MSAP
SPWOPCD3 DS    XL1                      OP CODE                @Z40MSAP
SPWADD3B DS    AL3                      BUFFER ADDRESS         @Z40MSAP
SPWCCWF3 DS    XL1                      CCW FLAGS              @Z40MSAP
SPWCC3   EQU   X'40'                    COMMAND CHAINING       @Z40MSAP
SPWSILI3 EQU   X'20'                    SILI BIT               @Z40MSAP
         DS    XL1                      FILLER                 @Z40MSAP
SPWBYTE3 DS    XL2                      BYTE COUNT             @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
* WORKAREA FOR UNPACKING LINE NUMBERS BEFORE VERIFYING IMAGES.
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWUNPKA DS    0F                       ADDR TO UNPACK INTO
         DS    C                        FILLER
SPWWKAR  DS    CL2                      FOR FINAL RESULT
SPWZONE  DS    X                        ZONE FOR LOW ORDER DIGIT
         DS    H                        FILLER
SPWLNENO DS    H                        FIELD STORED INTO BY CVD INST
         SPACE 2                                               @Z40MSAP
SPWFFSB  DS    F                        FIRST FOUR SENSE
*                                       BYTES FOR THE 3800
*                                       PRINTER
         SPACE 1                                               @Z40MSAP
***********************************************************************
* END OF USER KEY SET PRINT WORK AREA DSECT                    @Z40MSAP
***********************************************************************
         SPACE 1                                               @Z40MSAP
         ORG
SPWLNGTH EQU   *-SPW                    LENGTH OF WORK AREA
         EJECT
***********************************************************************
*                                                                     *
*    THIS IS THE DSECT FOR THAT PORTION OF THE SET PRINT WORK         *
*    AREA GOTTEN IN KEY 5.                                            *
*                                                                     *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPW5     DSECT                                                 @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
*
*  THE FOLLOWING IS THE BLDL PARAMETER LIST. IT IS GOTTEN FROM KEY 5
*  CORE AS IT MUST BE IN THE SAME KEY AS THE SYS1.IMAGELIB DCB.
*
***********************************************************************
         SPACE 2                                               @Z40MSAP
SPWBLDLA DS    0F                       BLDL LIST AREA         @Z40MSAP
SPWBLDLC DS    0F                       COUNT & LENGTH FIELDS FOR BLDL
SPWBLDCT DS    XL2                      COUNT FIELD            @Z40MSAP
SPWBLDLL DS    XL2                      LENGTH FIELD           @Z40MSAP
*              THE ABOVE FIELD SHOULD BE FILLED WITH
*              AL2(1,SPWBLDLN)          ONE ENTRY, LENGTH AVAILABLE
SPWBLNAM DS    0CL8                     IMAGE NAME FIELD       @Z40MSAP
SPWUCSMB DS    0CL4                     UCS IMAGE MEMBER NAME  'UCS1'
SPWFCBMB DS    CL4                      FCB IMAGE MEMBER NAME
         ORG   *-1                      REDEFINE FOURTH BYTE OF NAME
SPWFCB2  DS    0C
SPWUCS2  DS    C                        UCS IMAGE MEMBER NAME  'UCS2'
SPWBLFCB DS    0CL4                     FCBID FOR BLDL
SPWBLUCS DS    CL4                      USCID FOR BLDL
         DS    CL52                     FILLED BY BLDL FOR LOAD  Y02072
SPWBLDLN EQU   *-SPWUCSMB               LENGTH OF BLDL ENTRY     Y02072
SPWWKADR DS    A                        ADDRESS OF SETPRT WORKAREA
*                                         SAVED FOR ESTAE
         EJECT                                                 @Z40MSAP
***********************************************************************
* WTOR PREFIX SECTION (MUST IMMEDIATELY PRECEED MESSAGE SECTION)      *
*        THIS PREFIX IS PART OF THE LIST FORM OF WTOR                 *
*        WHEN A WTO MESSAGE IS PLACED IN SPWMSGTX,                    *
*        THE COMBINATION MAKES A VALID WTOR PARAMETER LIST            *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWMSGHS DS    0F                       HEADER SECTION FOR     @Z40MSAP
*                                       MESSAGE AREA           @Z40MSAP
SPWARPLA DS    0A                       ADDRESS OF THE         @Z40MSAP
*                                       REPLY AREA             @Z40MSAP
SPWLRPLA DS    XL1                      LENGTH OF THE REPLY    @Z40MSAP
*                                       AREA                   @Z40MSAP
SPWARPLB DS    AL3                      ADDRESS OF THE REPLY   @Z40MSAP
*                                       AREA                   @Z40MSAP
SPWARECB DS    A                        ADDRESS OF THE REPLY   @Z40MSAP
*                                       ECB                    @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
* MESSAGE SECTION                                                     *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWMSGA  DS    0CL52                    SPW MESSAGE AREA       @Z40MSAP
SPWMSGLN DS    F                        MESSAGE LENGTH         @Z40MSAP
SPWTXMSG DS    CL80                     MESSAGE TEXT           @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
* WTOR REPLY AREA AND ASSOCIATED FIELDS                               *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWORPLY DS    CL16                     OPERATOR REPLY AREA    @Z40MSAP
*                                       (16 BYTES)             @Z40MSAP
SPWMRECB DS    F                        REPLY ECB FOR WTOR     @Z40MSAP
SPWIMAGE DS    0CL8                     IMAGE NAME REQUESTED   @Z40MSAP
SPWFCBNM DS    0CL8                     NAME FCB IMAGE         @Z40MSAP
SPWFCBPF DS    CL4                      FIRST 1/2 OF NAME      @Z40MSAP
SPWFCBID DS    CL4                      2ND HALF FCB NAME      @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        THIS SECTION OF THE SET PRINT MAPPING MACRO HAS BEEN         *
*        ADDED FOR THE 3800 DEVICE.                                   *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPWEXTON DS    0F                       3800 AREA IN SET PRINT @Z40MSAP
*                                       WORKAREA               @Z40MSAP
SPWSPRB  DS    A                        POINTER TO SVRB        @Z40MSAP
*                                       EXTENDED SAVE AREA     @Z40MSAP
SPWTWAD1 DS    A                        TRANSLATE 1 WORKAREA   @Z40MSAP
*                                       ADDRESS                @Z40MSAP
SPWTWL1  DS    0F                       TRANSLATE 1 WORKAREA   @Z40MSAP
*                                       LENGTH AND SUBPOOL #   @Z40MSAP
SPWTWSP1 DS    XL1                      TRANSLATE 1 WORKAREA   @Z40MSAP
*                                       SUBPOOL NUMBER         @Z40MSAP
SPWTWLN1 DS    XL3                      TRANSLATE 1 WORKAREA   @Z40MSAP
*                                       LENGTH                 @Z40MSAP
SPWFLAG1 DS    XL1                      FIRST BYTE OF FLAGS    @Z40MSAP
SPWT3800 EQU   X'80'                    THIS SET PRINT REQUEST @Z40MSAP
*                                       IS FOR A 3800          @Z40MSAP
*                                       TYPE OF DEVICE         @Z40MSAP
SPWFCBUA EQU   X'40'                    FCB IMAGE IN USER AREA @Z40MSAP
SPWENDXL EQU   X'20'                    END OF DCB EXIT LIST   @Z40MSAP
SPWEXFLD EQU   X'10'                    EXCP FOR FCB LOAD      @Z40MSAP
SPWEXWPR EQU   X'08'                    EXCP FOR WRITING ON    @Z40MSAP
*                                       THE PRINTER            @Z40MSAP
SPWENDM  EQU   X'04'                    END SECTION IN         @Z40MSAP
*                                       MESSAGE AREA           @Z40MSAP
SPWEFCBP EQU   X'02'                    END OF FCB IMAGE       @Z40MSAP
*                                       PRINT FUNCTION         @Z40MSAP
SPWM128L EQU   X'01'                    MESSAGE IEC128D IN     @Z40MSAP
*                                       MESSAGE AREA           @Z40MSAP
SPWFLAG2 DS    XL1                      SECOND BYTE OF FLAGS   @Z40MSAP
SPWRVMSG EQU   X'80'                    REISSUE VERIFY         @Z40MSAP
*                                       MESSAGE TO 3800        @Z40MSAP
SPWVMHD  EQU   X'40'                    HEADER SECTION IN      @Z40MSAP
*                                       MESSAGE AREA           @Z40MSAP
SPWVMCH  EQU   X'20'                    'CHANNEL' IN           @Z40MSAP
*                                       MESSAGE AREA           @Z40MSAP
SPWBLIOB EQU   X'10'                    BUILD DUMMY IOB        @Z40MSAP
SPWM163L EQU   X'08'                    MESSAGE IEC163A        @Z40MSAP
*                                       IS BEING ISSUED        @Z40MSAP
SPWM164L EQU   X'04'                    MESSAGE IEC164A        @Z40MSAP
*                                       IS BEING ISSUED        @Z40MSAP
SPWNSTOR EQU   X'02'                    DETERMINES IF SPWN     @Z40MSAP
*                                       HAS BEEN STORED        @Z40MSAP
SPWNESOI EQU   X'01'                    NOT ENOUGH SPACE TO    @Z40MSAP
*                                       OPEN IMAGELIB          @Z40MSAP
SPWFLAG3 DS    XL1                      THIRD BYTE OF FLAGS    @Z40MSAP
SPWPLCPY EQU   X'80'                    THE SET PRINT PARM     @Z40MSAP
*                                       LIST HAS BEEN COPIED   @Z40MSAP
*                                       FROM THE CALLERS       @Z40MSAP
*                                       AREA TO KEY 5 SET      @Z40MSAP
*                                       PRINT WORK AREA        @Z40MSAP
SPWIMGLD EQU   X'40'                    IMAGE LOADED INTO CORE @Z40MSAP
*        EQU   X'20'                    UNUSED FLAG/SWITCH     @Z40MSAP
*        EQU   X'10'                    UNUSED FLAG/SWITCH     @Z40MSAP
*        EQU   X'08'                    UNUSED FLAG/SWITCH     @Z40MSAP
*        EQU   X'04'                    UNUSED FLAG/SWITCH     @Z40MSAP
*        EQU   X'02'                    UNUSED FLAG/SWITCH     @Z40MSAP
*        EQU   X'01'                    UNUSED FLAG/SWITCH     @Z40MSAP
SPWREASN DS    XL1                      REASON CODE            @Z40MSAP
SPWRETCD DS    0F                       RETURN CODE            @Z40MSAP
SPWRET0  DS    XL1                      BYTE 0 OF RETURN CODE  @Z40MSAP
SPWRET1  DS    XL1                      BYTE 1 OF RETURN CODE  @Z40MSAP
SPWRET2  DS    XL1                      BYTE 2 OF RETURN CODE  @Z40MSAP
SPWRET3  DS    XL1                      BYTE 3 OF RETURN CODE  @Z40MSAP
SPWIOBST DS    A                        POINTER IOB STANDARD   @Z40MSAP
*                                       SECTION                @Z40MSAP
SPWLNCNT DS    XL2                      FCB IMAGE LINE         @Z40MSAP
*                                       COUNTER                @Z40MSAP
SPWFCBIL DS    XL2                      LENGTH FCB IMAGE       @Z40MSAP
SPWCAVTA DS    A                        ADDRESS CALLERS AVT    @Z40MSAP
SPWWKBTS DS    0XL2                     WORK BYTES TO TEST     @Z40MSAP
*                                       FLAGS                  @Z40MSAP
SPWWKBT1 DS    XL1                      FIRST WORK BYTE        @Z40MSAP
SPWWKBT2 DS    XL1                      SECOND WORK BYTE       @Z40MSAP
SPWI     DS    XL1                      TOTAL NUMBER OF        @Z40MSAP
*                                       TRANSLATE TABLES       @Z40MSAP
SPWJ     DS    XL1                      TRANSLATE TABLE INDEX  @Z40MSAP
SPWK     DS    XL1                      INDEX OF CGM IN        @Z40MSAP
*                                       TRANSLATE TABLES       @Z40MSAP
SPWL     DS    XL1                                             @Z40MSAP
SPWM     DS    XL1                      INDEX IN CGM RECORD    @Z40MSAP
SPWN     DS    XL1                      INDEX IN CGM RECORD    @Z40MSAP
SPWP     DS    XL2                      TRANSLATE TABLE        @Z40MSAP
*                                       POSITION INDEX         @Z40MSAP
SPWMAX   DS    XL1                      NUMBER OF CGMS         @Z40MSAP
*                                       INSTALLED ON DEVICE    @Z40MSAP
SPWTCBKY DS    XL1                      TCB PROTECTION KEY     @Z40MSAP
SPWCGMID DS    F                        AREA TO BUILD          @Z40MSAP
*                                       LOAD CGM RECORD        @Z40MSAP
         ORG   SPWCGMID                                        @Z40MSAP
SPWCGMRC DS    XL1                      ARRAY OF CGM IDS       @Z40MSAP
         ORG   SPWCGMID+4                                      @Z40MSAP
SPWMEXIT DS    5F                       SETPRT MODULES         @Z40MSAP
*                                       EXIT LIST              @Z40MSAP
SPWMEIND DS    XL1                      INDEX FOR MODULE       @Z40MSAP
*                                       EXIT LIST              @Z40MSAP
SPWERIND DS    XL1                      ERROR EXIT IN THE      @Z40MSAP
*                                       MODULE EXIT LIST       @Z40MSAP
SPWRXIND DS    XL1                      INDEX INTO THE MODULE  @Z40MSAP
*                                       EXIT LIST FOR A        @Z40MSAP
*                                       MODULE TO PASS         @Z40MSAP
*                                       CONTROL TO IF          @Z40MSAP
*                                       RETRANSMIT IS          @Z40MSAP
*                                       SPECIFIED              @Z40MSAP
SPWPLNTH DS    XL1                      LENGTH OF SET PRINT    @Z40MSAP
*                                       PARAMETER LIST         @Z40MSAP
SPWADDCB DS    A                        ADDRESS OF THE         @Z40MSAP
*                                       CALLERS DCB            @Z40MSAP
SPWADDEB DS    A                        ADDRESS OF THE         @Z40MSAP
*                                       CALLERS DEB            @Z40MSAP
SPWADIOB DS    A                        ADDRESS OF THE IOB     @Z40MSAP
*                                       PREFIX SECTION         @Z40MSAP
SPWADUCB DS    A                        ADDRESS OF THE UCB     @Z40MSAP
SPWCFHIT DS    XL1                      COUNTER FOR FCB IMAGE  @Z48MSAP
*                                       HALF INCH TEST         @Z48MSAP
SPWCFB   DS    XL1                      CURRENT FCB BYTE       @Z48MSAP
*                                       BEING USED FOR HALF    @Z48MSAP
*                                       INCH TEST              @Z48MSAP
         DS    XL2                      UNUSED TWO BYTES       @Z48MSAP
         DS    A                        UNUSED FOUR BYTES      @Z48MSAP
SPWSAVE  DS    0F                       SET PRINT WORK AREA    @Z40MSAP
*                                       REGISTER SAVE AREA     @Z40MSAP
SPWSAV01 DS    F                        SAVE AREA NUMBER  1    @Z40MSAP
SPWSAV02 DS    F                        SAVE AREA NUMBER  2    @Z40MSAP
SPWSAV03 DS    F                        SAVE AREA NUMBER  3    @Z40MSAP
SPWSAV04 DS    F                        SAVE AREA NUMBER  4    @Z40MSAP
SPWSAV05 DS    F                        SAVE AREA NUMBER  5    @Z40MSAP
SPWSAV06 DS    F                        SAVE AREA NUMBER  6    @Z40MSAP
SPWSAV07 DS    F                        SAVE AREA NUMBER  7    @Z40MSAP
SPWSAV08 DS    F                        SAVE AREA NUMBER  8    @Z40MSAP
SPWSAV09 DS    F                        SAVE AREA NUMBER  9    @Z40MSAP
SPWSAV10 DS    F                        SAVE AREA NUMBER 10    @Z40MSAP
SPWSAV11 DS    F                        SAVE AREA NUMBER 11    @Z40MSAP
SPWSAV12 DS    F                        SAVE AREA NUMBER 12    @Z40MSAP
SPWSAV13 DS    F                        SAVE AREA NUMBER 13    @Z40MSAP
SPWSAV14 DS    F                        SAVE AREA NUMBER 14    @Z40MSAP
SPWSAV15 DS    F                        SAVE AREA NUMBER 15    @Z40MSAP
*                                                              @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*        THIS IS A RECEIVING FIELD FOR A CVD INSTRUCTION, AND         *
*        THEREFORE IS ALIGNED ON A DOUBLE WORD BOUNDARY.              *
***********************************************************************
*                                                              @Z40MSAP
SPWFLINU DS    0D                       FCB IMAGE LINE NUMBER  @Z40MSAP
SPWFCHNU DS    0D                       FCB IMAGE CHANNEL      @Z40MSAP
         DS    XL6                      FILLER                 @Z40MSAP
SPWFPAKL DS    0XL2                     FCB LINE NUMBER        @Z40MSAP
*                                       IN PACKED FORMAT       @Z40MSAP
SPWFPAKC DS    0XL2                     FCB CHANNEL NUMBER     @Z40MSAP
*                                       IN PACKED FORMAT       @Z40MSAP
         DS    XL1                      1ST HALF FCB           @Z40MSAP
*                                       IMAGE ENTRY            @Z40MSAP
SPWFSNUM DS    XL1                      SIGN PORTION OF        @Z40MSAP
*                                       FCB IMAGE ENTRY        @Z40MSAP
         EJECT
***********************************************************************
*        AREA FOR THE COPY OF THE CALLERS SET PRINT PARAMETER LIST.   *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWSPP   DS    XL48                     COPY SPP IN KEY 5      @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
*        SUBPOOL NUMBER AND LENGTH FOR USER KEY SECTION OF THE        *
*        SET PRINT WORKAREA GOTTEN IN USER KEY. THIS INFORMATION      *
*        WILL BE USED TO FREEMAIN THIS AREA AT THE PROPER TIME.       *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWUKSNL DS    0F                                              @Z40MSAP
SPWUKSN  DS    XL1                      SUBPOOL NUMBER         @Z40MSAP
SPWUKLTH DS    XL3                      LENGTH                 @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
*        SUBPOOL NUMBER AND LENGTH FOR KEY 5 SECTION OF THE SET       *
*        PRINT WORKAREA GOTTEN IN KEY 5. THIS INFORMATION WILL        *
*        BE USED TO FREEMAIN THIS AREA AT THE PROPER TIME.            *
***********************************************************************
         SPACE 1                                               @Z40MSAP
SPWK5SNL DS    0F                                              @Z40MSAP
SPWK5SN  DS    XL1                      SUBPOOL NUMBER         @Z40MSAP
SPWK5LTH DS    XL3                      LENGTH                 @Z40MSAP
         SPACE 1                                               @Z40MSAP
***********************************************************************
*       PUT ANY NEW REQUIREMENTS FOR SPACE IN FRONT OF THIS MESSAGE   *
***********************************************************************
*                                                              @Z40MSAP
SPWMODWK DS    XL20                     WORK AREA FOR THE      @Z40MSAP
*                                       COMPILER               @Z40MSAP
SPW5LNTH EQU   *-SPW5                   LENGTH OF BLDL LIST    @Z40MSAP
*                                       AND 3800 PRINTER       @Z40MSAP
*                                       WORK AREA IN KEY 5     @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        PRINTER CCW OP-CODES                                         *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPWNOP   EQU   X'03'                    NO OPERATION           @Z40MSAP
SPWSENSE EQU   X'04'                    SENSE I/O              @Z40MSAP
SPWWRTSP EQU   X'09'                    PRINT, SPACE 1         @Z40MSAP
SPWWRITE EQU   X'11'                    WRITE COMMAND          @Z40MSAP
SPWUNFLD EQU   X'23'                    UNFOLD COMMAND         @Z40MSAP
SPWFLDCD EQU   X'43'                    FOLD COMMAND           @Z40MSAP
SPWFCBLD EQU   X'63'                    LOAD FCB IMAGE         @Z40MSAP
SPWBLDC  EQU   X'73'                    BLOCK DATA CHECK       @Z40MSAP
SPWSKIP0 EQU   X'83'                    SKIP TO CHANNEL 0      @Z40MSAP
SPWSKIP  EQU   X'8B'                    SKIP COMMAND           @Z40MSAP
SPWCNTRL EQU   X'EB'                    CONTROL OP CODE        @Z40MSAP
SPWLDFLD EQU   X'F3'                    LOAD FOLD COMMAND      @Z40MSAP
SPWLDUCS EQU   X'FB'                    LOAD UCS COMMAND       @Z40MSAP
*                                                              @Z40MSAP
*                                                              @Z40MSAP
***********************************************************************
*                                                                     *
*        3800 PRINTER CCW OP-CODES                                    *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPWSTCNR EQU   X'23'                    LOAD STARTING COPY     @Z40MSAP
*                                       NUMBER                 @Z40MSAP
SPWLGCM  EQU   X'25'                    LOAD GRAPHIC           @Z40MSAP
*                                       CHARACTER MODULE       @Z40MSAP
SPWLCMOD EQU   X'35'                    LOAD COPY              @Z40MSAP
*                                       MODIFY RECORD          @Z40MSAP
SPWINIT  EQU   X'37'                    INITALIZE PRINTER      @Z40MSAP
*                                       OP CODE                @Z40MSAP
SPWLFOVL EQU   X'43'                    LOAD FORMS OVERLAY     @Z40MSAP
*                                       OP CODE                @Z40MSAP
SPWSLTT0 EQU   X'47'                    SELECT TRANSLATE       @Z40MSAP
*                                       TABLE 0                @Z40MSAP
SPWLWCGM EQU   X'53'                    LOAD WCGM OP CODE      @Z40MSAP
SPWSLTT1 EQU   X'57'                    SELECT TRANSLATE       @Z40MSAP
*                                       TABLE 1                @Z40MSAP
SPWSLTT2 EQU   X'67'                    SELECT TRANSLATE       @Z40MSAP
*                                       TABLE 2                @Z40MSAP
SPWSLTT3 EQU   X'77'                    SELECT TRANSLATE       @Z40MSAP
*                                       TABEL 3                @Z40MSAP
SPWTTLOD EQU   X'83'                    LOAD TRANSLATE TABLE   @Z40MSAP
*                                       OP CODE                @Z40MSAP
SPWCLRPT EQU   X'87'                    CLEAR PRINT OP CODE    @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        SET PRINT ERROR RETURN CODES. THESE CODES WILL BE            *
*        PLACED IN THE PROPER LOCATION IN REGISTER 15, TO             *
*        INDICATE THE ERROR CONDITION THAT HAS OCCURED.               *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPWSUCCP EQU   X'00'                    SUCCESSFUL COMPLETION  @Z40MSAP
SPWIMNO  EQU   X'04'                    IMAGE NOT FOUND        @Z40MSAP
SPWBLDLP EQU   X'08'                    BLDL PERMANENT         @Z40MSAP
*                                       I/O ERROR              @Z40MSAP
SPWLOADP EQU   X'0C'                    LOAD PERMANENT         @Z40MSAP
*                                       I/O ERROR              @Z40MSAP
SPWREADP EQU   X'10'                    READ PERMANENT         @Z40MSAP
*                                       I/O ERROR              @Z40MSAP
SPWFCBV  EQU   X'14'                    WRONG FCB IMAGE        @Z40MSAP
SPWNOOP  EQU   X'18'                    NO OPERATION PERFORMED @Z40MSAP
SPWUCERR EQU   X'1C'                    NOP, PREVIOUS          @Z40MSAP
*                                       UNCORRECTIABLE ERROR   @Z40MSAP
SPWSPACE EQU   X'20'                    INSUFFICIENT SPACE     @Z40MSAP
SPWIMLIB EQU   X'24'                    IMAGE LIBRARY CAN      @Z40MSAP
*                                       NOT BE OPENED          @Z40MSAP
SPWFOVLF EQU   X'28'                    CAN NOT LOAD FORMS     @Z40MSAP
*                                       OVERLAY FRAME          @Z40MSAP
SPWCANCL EQU   X'2C'                    OPERATOR CANCELED      @Z40MSAP
SPWMCGM  EQU   X'30'                    TOO MANY CGMS          @Z40MSAP
*                                       REQUESTED              @Z40MSAP
SPWTRCIN EQU   X'34'                    COPY MOD TRC           @Z40MSAP
*                                       FIELD INVALID          @Z40MSAP
SPWEODSR EQU   X'38'                    ERROR WHILE            @Z40MSAP
*                                       ISSUING EODS           @Z40MSAP
SPWNOBR  EQU   X'3C'                    NO BURSTER/SHEET       @Z40MSAP
*                                       STACKERFEATURE         @Z40MSAP
*                                       INSTALLED              @Z40MSAP
SPWPIOER EQU   X'40'                    A PERMENT I/O ERROR    @Z40MSAP
*                                       HAS OCCURED            @Z40MSAP
SPWNOCGM EQU   X'44'                    CGM NOT SPECIFIED IN   @Z40MSAP
*                                       CHARACTER ARRANGEMENT  @Z40MSAP
*                                       TABLE TRAILER          @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        SET PRINT 3800 REASON CODES. THESE CODES WILL APPEAR IN      *
*        REGISTER 0, WHEN AN ERROR CONDITION IS RETURNED.             *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPWTRTBL EQU   X'04'                    TRANSLATE TABLE        @Z40MSAP
SPWCPMOD EQU   X'08'                    COPY MODIFY RECORD     @Z40MSAP
SPWCPNR  EQU   X'0C'                    COPY NUMBER            @Z40MSAP
SPWGCMR  EQU   X'10'                    GRAPHIC CHARACTER      @Z40MSAP
*                                       MODULE RECORD          @Z40MSAP
SPWFOSEQ EQU   X'14'                    FORMS OVERLAY          @Z40MSAP
*                                       SEQUENCE CONTROL       @Z40MSAP
*                                       RECORD                 @Z40MSAP
SPWFOVL  EQU   X'18'                    FORMS OVERLAY FEATURE  @Z40MSAP
SPWCGMR  EQU   X'1C'                    CHARACTER GENERATION   @Z40MSAP
*                                       MODULE                 @Z40MSAP
SPWFCBRC EQU   X'20'                    FORMS CONTROL BUFFER   @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        COMMON SET PRINT CONSTANTS                                   *
*                                                                     *
***********************************************************************
SPWALG   EQU   X'FF'                    ALIGN MESSAGE RETRY    @Z40MSAP
SPWCC    EQU   X'40'                    COMMAND CHAINING BIT   @Z40MSAP
SPWCCWVR EQU   X'0F'                    VERIFY ONLY            @Z40MSAP
SPWDEIB1 EQU   X'01'                    USED TO DECREMENT      @Z40MSAP
*                                       INDEXES BY 1           @Z40MSAP
SPWENTVR EQU   X'1F'                    ENTRY FOR VERIFY       @Z40MSAP
SPWFOLD  EQU   X'40'                    FOLD SPECIFIED         @Z40MSAP
SPWIMCLO EQU   X'FF'                    IMAGELIB NOT OPEN      @Z40MSAP
SPWINIB1 EQU   X'01'                    USED TO INCREMENT      @Z40MSAP
*                                       INDEXES BY 1           @Z40MSAP
SPWMAXCH EQU   4                        MAX NUMBER OF          @Z40MSAP
*                                       TRANSLATE TABLES       @Z40MSAP
SPWNFCBL EQU   X'40'                    NO FCB LOAD            @Z40MSAP
SPWOKCC  EQU   X'7F'                    I/O COMPLETED OK       @Z40MSAP
SPWOVLAP EQU   X'20'                    LOAD OVERLAPPED        @Z40MSAP
SPWPOOL  EQU   230                      SUBPOOL FOR            @Z40MSAP
*                                       USER KEY CORE          @Z40MSAP
SPWRDLN  EQU   8                        FIELD FOR RECORDS      @Z40MSAP
*                                       PASSED IN CORE         @Z40MSAP
SPWRPVER EQU   X'10'                    OPERATOR REQUESTED     @Z40MSAP
*                                       VERIFY                 @Z40MSAP
SPWSILI  EQU   X'20'                    SILI BIT               @Z40MSAP
SPWUCS2C EQU   C'2'                     CHARACTER '2' FOR      @Z40MSAP
*                                       UCS2 MEMBER NAME       @Z40MSAP
SPWVERIF EQU   X'10'                    VERIFY SPECIFIED       @Z40MSAP
SPW5POOL EQU   230                      SUBPOOL FOR            @Z40MSAP
*                                       KEY 5 CORE             @Z40MSAP
SPW6LINE EQU   C'6'                     SIX LINES/INCH         @Z40MSAP
SPW8LINE EQU   C'8'                     EIGHT LINES/INCH       @Z40MSAP
         EJECT                                                 @Z40MSAP
***********************************************************************
*                                                                     *
*        THE FOLLOWING STRUCTURE MAPS THE SVRB EXTENDED SAVE          *
*        AREA AS SET PRINT USES IT.                                   *
*                                                                     *
***********************************************************************
*                                                              @Z40MSAP
SPRBXSV  DSECT                                                 @Z40MSAP
SPRMSG   DS    A                        ADDR OF MSG CSECT      @Z40MSAP
SPRIDCBA DS    A                        ADDRESS OF IMGLIB DCB  @Z40MSAP
SPREXIT  DS    A                        RETURN TO EXIT PROLOG  @Z40MSAP
SPRKEY   DS    X                        CALLER KEY FOR MODESET @Z40MSAP
*                                       KEY IS IN BITS 0-3     @Z40MSAP
SPRUSKEY EQU   X'80'                    BIT 0 IS ON IF KEY 8-F @Z40MSAP
*                                       (USER KEY, NOT SYSTEM) @Z40MSAP
SPRINDIC DS    B                        INDICATOR BYTE         @Z40MSAP
SPRNIOBS DS    X                        NO. OF IOBS - USED     @Z40MSAP
*                                         BY SETPRT ESTAE      @Z40MSAP
         DS    X                        RESERVED               @Z40MSAP
SPRBLDLA DS    A                        ADDRESS OF BLDL        @Z40MSAP
*                                       PARAMETER LIST         @Z40MSAP
SPRIOBSV DS    A                        ADDR OF IOB ALTERED    @Z40MSAP
*                                         BY IGC0008A          @Z40MSAP
         DS    A                        RESERVED               @Z40MSAP
SPRGETMN DS    A                        ADDR OF GTRACE BUFFER  @Z40MSAP
*                                         USED BY SETPRT ESTAE @Z40MSAP
         ORG   SPRGETMN                 REUSE SPACE            @Z40MSAP
*SPRELIST ESTAE MF=L                    SPACE FOR ESTAE LIST   @Z40MSAP
SPRELIST ESTAE MF=L                     INVOKE MACRO           @Z40MSAP
         ORG   SPRGETMN                 REUSE SPACE            @Z40MSAP
SPRSAVE  DS    5F                       REG SAVE AREA          @Z40MSAP
         ORG   ,                                               @Z40MSAP
SPRLEN   EQU   *-SPRBXSV,48-(*-SPRBXSV) SPRLEN IS BYTES USED   @Z40MSAP
*                                       IN EXTENDED SAVE AREA  @Z40MSAP
*                                       LTH (SPRLEN), BYTES    @Z40MSAP
*                                       REMAIN (ERROR MEANS    @Z40MSAP
*                                       TOO LARGE)             @Z40MSAP
         EJECT
         MEND                                                  @Z40MSAP
*%SPW002:;                              /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS IS THE MAPPING MACRO FOR THE SET PRINT WORK AREA       **
**                                                                   **
**********************************************************************/
*
*
*
*/*********************************************************************
**                                                                   **
**       THIS IS THE MAPPING MACRO FOR THAT PORTION OF THE SET       **
**       PRINT WORK AREA GOTTEN IN USER KEY.                         **
**                                                                   **
**********************************************************************/
*
*    DECLARE
*        1 SPW      BASED(SPWUCORE)     /*                   @Z40MSAP*/
*                   BDY(DWORD),         /*                   @Z40MSAP*/
*          2 SPWOPTSA PTR(8),           /* SAVE AREA FOR     @Z40MSAP*/
*                                       /* OP-CODE FOR       @Z40MSAP*/
*          2 SPWPARM1 BIT(8),           /* SAVED REPLY FLAGS @Z40MSAP*/
*          2 SPWFLG1  BIT(8),           /* REPLY FLAGS       @Z40MSAP*/
*            3 SPWVRFCB BIT(1),         /* VERIFY FCB        @Z40MSAP*/
*            3 *        BIT(6),         /*                   @Z40MSAP*/
*            3 SPWALIGN BIT(1),         /* ALIGN FORMS       @Z40MSAP*/
*          2 SPWFLG2  BIT(8),           /* ENTRY FOR MODULES @Z40MSAP*/
*                                       /* IGG08101 AND      @Z40MSAP*/
*                                       /* IGG08102          @Z40MSAP*/
*          2 SPWFLG3  BIT(8),           /* TO SAVE LINE/     @Z40MSAP*/
*                                       /* INCH INDICATOR    @Z40MSAP*/
*            3 *        BIT(3),         /*                   @Z40MSAP*/
*            3 SPW120RQ BIT(1),         /* IEC120 MESSAGE    @Z40MSAP*/
*                                       /* REQUIRED          @Z40MSAP*/
*            3 *        BIT(4),         /*                   @Z40MSAP*/
*          2 SPWFLG4  BIT(8),           /* FLAG BYTE         @Z40MSAP*/
*            3 SPWFLG5  BIT(8),         /* FLAG BYTE         @Z40MSAP*/
*              4 SPWFCBDE BIT(1),       /* FCB IMAGE LOADED  @Z40MSAP*/
*                                       /* AND MUST BE       @Z40MSAP*/
*                                       /* DELETED           @Z40MSAP*/
*              4 SPWECPAM BIT(1),       /* INDICATES EXCP    @Z40MSAP*/
*                                       /* DCB WITH ACCESS   @Z40MSAP*/
*                                       /* METHOD SECTION    @Z40MSAP*/
*                                       /* PRESENT           @Z40MSAP*/
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/
*              4 *        BIT(1),       /* UNUSED FLAG BIT   @Z40MSAP*/
*          2 SPWFLG8  BIT(8),           /* FLAG BYTE         @Z40MSAP*/
*            3 SPWRETRY BIT(1),         /* RETRY IN PROGRESS @Z40MSAP*/
*            3 SPWVREND BIT(1),         /* LAST VERIFY LINE  @Z40MSAP*/
*                                       /* IS PRINTING       @Z40MSAP*/
*            3 SPWNOMOV BIT(1),         /* DO NOT MOVE       @Z40MSAP*/
*                                       /* REQUESTED MESSAGE @Z40MSAP*/
*            3 SPWFCBOP BIT(1),         /* FILL FCBOP AS     @Z40MSAP*/
*
*                                       /* WELL AS FCBID     @Z40MSAP*/
*                                       /* INTO UCB          @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*          2 *        CHAR(1),          /* UNUSED BYTE       @Z40MSAP*/
*          2 SPWMSGHD CHAR(8)           /* HEADER SECTON     @Z40MSAP*/
*                     BDY(WORD),        /* FOR MESSAGE AREA  @Z40MSAP*/
*            3 SPWRPLYA PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* REPLY AREA        @Z40MSAP*/
*              4 SPWMSGLB PTR(8),       /* LENGTH OF THE     @Z40MSAP*/
*                                       /* REPLY AREA        @Z40MSAP*/
*              4 SPWRPLYB PTR(24),      /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* REPLY AREA        @Z40MSAP*/
*            3 SPWECBPA PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* REPLY ECB         @Z40MSAP*/
*          2 SPWMSGAR,                  /* SPW MESSAGE AREA  @Z40MSAP*/
*            3 SPWMSGTX CHAR(64),       /* MESSAGE TEXT      @Z40MSAP*/
*            3 SPWREPLY CHAR(16),       /* OPERATOR REPLY    @Z40MSAP*/
*                                       /* AREA (16 BYTES)   @Z40MSAP*/
*              4 *        CHAR(1),      /*                   @Z40MSAP*/
*              4 SPWFCBOR CHAR(15),     /* OFFSET OF 1 USED  @Z40MSAP*/
*                                       /* WHEN INCREMENTING @Z40MSAP*/
*                                       /* THROUGH THE       @Z40MSAP*/
*                                       /* OPERATOR REPLY    @Z40MSAP*/
*                5 SPWREPC1 CHAR(15),   /* OFFSET OF 1 USED  @Z40MSAP*/
*                                       /* TO CLEAR FIELD    @Z40MSAP*/
*          2 SPWRPECB PTR(31),          /* REPLY ECB FOR     @Z40MSAP*/
*                                       /* WTOR              @Z40MSAP*/
*          2 SPWREPID CHAR(4),          /* REPLIED ID        @Z40MSAP*/
*          2 SPWFCBIM CHAR(8)           /* NAME FCB IMAGE    @Z40MSAP*/
*                     BDY(WORD),        /*                   @Z40MSAP*/
*            3 SPWUCSIM CHAR(8),        /* NAME OF UCS IMAGE @Z40MSAP*/
*              4 *        CHAR(4),      /* FIRST 1/2 OF NAME @Z40MSAP*/
*              4 SPWUCS2H CHAR(4),      /* 2ND HALF UCS NAME @Z40MSAP*/
*                5 SPWFCB2H CHAR(4),    /* 2ND HALF OF NAME  @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**     THE FOLLOWING IOB WILL BE BUILT FOR EXCP USERS, AND           **
**     IF  THERE IS A NON-OPEN DCB IN KEY 5 FOR A 3800 PRINTER.      **
**                                                                   **
**********************************************************************/
*
*          2 SPWIOB   CHAR(40),         /*                   @Z40MSAP*/
*
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING INFORMATION WAS SAVED FROM THE USERS IOB.     **
**                                                                   **
**********************************************************************/
*
*          2 SPWFLGSV PTR(31),          /* IOB FIRST WORD    @Z40MSAP*/
*          2 SPWSTRSV PTR(31),          /* IOB START         @Z40MSAP*/
*    @ EJECT ASSEMBLE;                                     /*@Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING SECTION MAPS THE CHANNEL PROGRAM              **
**       SECTION OF THE SET PRINT WORKAREA.                          **
**                                                                   **
**********************************************************************/
*
*          2 SPWCCW1  CHAR(8)           /* FIRST CCW         @Z40MSAP*/
*                     BDY(DWORD),       /*                   @Z40MSAP*/
*            3 SPWADD1A PTR(31),        /* BUFFER ADDRESS    @Z40MSAP*/
*              4 SPWOPCD1 PTR(8),       /* OP CODE           @Z40MSAP*/
*              4 SPWADD1B PTR(24),      /* BUFFER ADDRESS    @Z40MSAP*/
*            3 SPWCCWF1 PTR(16),        /* CCW FLAGS         @Z40MSAP*/
*              4 *        BIT(1),       /* FILLER            @Z40MSAP*/
*              4 SPWCC1   BIT(1),       /* COMMAND CHAINING  @Z40MSAP*/
*              4 SPWSILI1 BIT(1),       /* SILI BIT          @Z40MSAP*/
*              4 *        BIT(13),      /* FILLER            @Z40MSAP*/
*            3 SPWBYTE1 PTR(16),        /* BYTE COUNT        @Z40MSAP*/
*          2 SPWCCW2  CHAR(8)           /* SECOND CCW        @Z40MSAP*/
*                     BDY(DWORD),       /*                   @Z40MSAP*/
*            3 SPWADD2A PTR(31),        /* BUFFER ADDRESS    @Z40MSAP*/
*              4 SPWOPCD2 PTR(8),       /* OP CODE           @Z40MSAP*/
*              4 SPWADD2B PTR(24),      /* BUFFER ADDRESS    @Z40MSAP*/
*            3 SPWCCWF2 PTR(16),        /* CCW FLAGS         @Z40MSAP*/
*              4 *        BIT(1),       /* FILLER            @Z40MSAP*/
*              4 SPWCC2   BIT(1),       /* COMMAND CHAINING  @Z40MSAP*/
*              4 SPWSILI2 BIT(1),       /* SILI BIT          @Z40MSAP*/
*              4 *        BIT(13),      /* FILLER            @Z40MSAP*/
*            3 SPWBYTE2 PTR(16),        /* BYTE COUNT        @Z40MSAP*/
*          2 SPWCCW3  CHAR(8)           /* THIRD CCW         @Z40MSAP*/
*                     BDY(DWORD),       /*                   @Z40MSAP*/
*            3 SPWADD3A PTR(31),        /* BUFFER ADDRESS    @Z40MSAP*/
*              4 SPWOPCD3 PTR(8),       /* OP CODE           @Z40MSAP*/
*              4 SPWADD3B PTR(24),      /* BUFFER ADDRESS    @Z40MSAP*/
*            3 SPWCCWF3 PTR(16),        /* CCW FLAGS         @Z40MSAP*/
*              4 *        BIT(1),       /* FILLER            @Z40MSAP*/
*              4 SPWCC3   BIT(1),       /* COMMAND CHAINING  @Z40MSAP*/
*              4 SPWSILI3 BIT(1),       /* SILI BIT          @Z40MSAP*/
*              4 *        BIT(13),      /* FILLER            @Z40MSAP*/
*            3 SPWBYTE3 PTR(16),        /* BYTE COUNT        @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*          2 SPWUNPKA PTR(31),          /* UNPACK AREA       @Z40MSAP*/
*            3 *        CHAR(1),        /* FILLER            @Z40MSAP*/
*            3 SPWKAR   CHAR(2),        /* FINAL RESULT      @Z40MSAP*/
*            3 SPWZONE  PTR(8),         /* ZONE FOR          @Z40MSAP*/
*                                       /* LOW ORDER         @Z40MSAP*/
*          2 *        PTR(16),          /* FILLER            @Z40MSAP*/
*          2 SPWLNENO PTR(16),          /* USED BY CONVERT   @Z40MSAP*/
*                                       /* INSTRUCTION       @Z40MSAP*/
*          2 SPWFFSB  FIXED(32);        /* FIRST FOUR SENSE  @Z40MSAP*/
*                                       /* BYTES FOR THE     @Z40MSAP*/
*                                       /* 3800 PRINTER      @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS IS THE MAPPING MACRO FOR THAT PORTION OF THE SET       **
**       PRINT WORK AREA GOTTEN IN KEY 5.                            **
**                                                                   **
**********************************************************************/
*
*
*
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING SECTION MAPS THE BLDL WORKAREA FOR            **
**       SET PRINT.                                                  **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        1 SPW5     BASED(SPW5CORE),    /*                   @Z40MSAP*/
*          2 SPWBLDLA CHAR(64)          /* BLDL LIST AREA    @Z40MSAP*/
*                     BDY(WORD),        /*                   @Z40MSAP*/
*            3 SPWBLDLC PTR(32),        /* COUNT AND LENGTH  @Z40MSAP*/
*              4 SPWBLDCT PTR(16),      /* COUNT             @Z40MSAP*/
*              4 SPWBLDLL PTR(16),      /* LENGTH            @Z40MSAP*/
*            3 SPWBLNAM CHAR(8),        /* IMAGE NAME FIELD  @Z40MSAP*/
*              4 SPWUCSMB CHAR(4),      /* UCS IMAGE MEMBER  @Z40MSAP*/
*                5 SPWFCBMB CHAR(4),    /* FCB IMAGE MEMBER  @Z40MSAP*/
*                  6 *        CHAR(3),  /* FILLER            @Z40MSAP*/
*                  6 SPWFCB2  CHAR(1),  /* FCB IMAGE NAME    @Z40MSAP*/
*                    7 SPWUCS2  CHAR(1),/* UCS IMAGE NAME    @Z40MSAP*/
*              4 SPWBLFCB CHAR(4),      /* FCB ID FOR BLDS   @Z40MSAP*/
*                5 SPWBLUCS CHAR(4),    /* UCS ID FOR BLDL   @Z40MSAP*/
*            3 *        CHAR(52),       /* FILLER            @Z40MSAP*/
*          2 SPWWKADR PTR(32),          /* ADDRESS OF SET    @Z40MSAP*/
*                                       /* PRINT WORKAREA    @Z40MSAP*/
*                                       /* (IN USER KEY)     @Z40MSAP*/
*                                       /* SAVED FOR ESTAE   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING SECTION MAPS THE MESSAGE AREA FOR THE KEY     **
**       5 SEGMENT OF THE SET PRINT WORK AREA.                       **
**                                                                   **
**********************************************************************/
*
*          2 SPWMSGHS CHAR(8)           /* HEADER SECTON     @Z40MSAP*/
*                     BDY(WORD),        /* FOR MESSAGE AREA  @Z40MSAP*/
*            3 SPWARPLA PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* REPLY AREA        @Z40MSAP*/
*              4 SPWLRPLA PTR(8),       /* LENGTH OF THE     @Z40MSAP*/
*                                       /* REPLY AREA        @Z40MSAP*/
*              4 SPWARPLB PTR(24),      /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* REPLY AREA        @Z40MSAP*/
*            3 SPWARECB PTR(31),        /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* REPLY ECB         @Z40MSAP*/
*          2 SPWMSGA,                   /* SPW MESSAGE AREA  @Z40MSAP*/
*            3 SPWMSGLN BIT(32),        /* MESSAGE LENGTH    @Z40MSAP*/
*            3 SPWTXMSG CHAR(80),       /* MESSAGE TEXT      @Z40MSAP*/
*            3 SPWORPLY CHAR(16),       /* OPERATOR REPLY    @Z40MSAP*/
*                                       /* AREA (16 BYTES)   @Z40MSAP*/
*          2 SPWMRECB PTR(31),          /* REPLY ECB FOR     @Z40MSAP*/
*                                       /* WTOR              @Z40MSAP*/
*          2 SPWIMAGE CHAR(8)           /* NAME IMAGE        @Z40MSAP*/
*                     BDY(WORD),        /* REQUESTED         @Z40MSAP*/
*            3 SPWFCBNM CHAR(8),        /* NAME FCB IMAGE    @Z40MSAP*/
*              4 SPWFCBPF CHAR(4),      /* FIRST 1/2 OF NAME @Z40MSAP*/
*              4 SPWFCBID CHAR(4),      /* 2ND HALF FCB NAME @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS SECTION OF THE SET PRINT MAPPING MACRO HAS BEEN        **
**       ADDED FOR THE 3800 DEVICE.                                  **
**                                                                   **
**********************************************************************/
*
*          2 SPWSPRB  PTR(31),          /* POINTER TO SVRB   @Z40MSAP*/
*                                       /* EXTENDED SAVE     @Z40MSAP*/
*                                       /* AREA              @Z40MSAP*/
*          2 SPWTWAD1 PTR(31),          /* TRANSLATE 1       @Z40MSAP*/
*                                       /* WORKAREA ADDRESS  @Z40MSAP*/
*          2 SPWTWL1  PTR(32),          /* TRANSLATE 1       @Z40MSAP*/
*                                       /* WORKAREA LENGTH   @Z40MSAP*/
*                                       /* AND SUBPOOL #     @Z40MSAP*/
*            3 SPWTWSP1 PTR(8),         /* TRANSLATE 1       @Z40MSAP*/
*                                       /* WORKAREA          @Z40MSAP*/
*                                       /* SUBPOOL NUMBER    @Z40MSAP*/
*            3 SPWTWLN1 PTR(24),        /* TRANSLATE 1       @Z40MSAP*/
*                                       /* WORKAREA LENGTH   @Z40MSAP*/
*          2 SPWFLAG1 BIT(8),           /* FIRST BYTE OF     @Z40MSAP*/
*                                       /* FLAGS             @Z40MSAP*/
*            3 SPWT3800 BIT(1),         /* THIS SET PRINT    @Z40MSAP*/
*                                       /* REQUEST IS FOR A  @Z40MSAP*/
*                                       /* 3800 TYPE DEVICE  @Z40MSAP*/
*            3 SPWFCBUA BIT(1),         /* FCB IMAGE IN      @Z40MSAP*/
*                                       /* USER AREA         @Z40MSAP*/
*            3 SPWENDXL BIT(1),         /* END OF DCB        @Z40MSAP*/
*                                       /* EXIT LIST         @Z40MSAP*/
*            3 SPWEXFLD BIT(1),         /* EXCP FOR FCB LOAD @Z40MSAP*/
*            3 SPWEXWPR BIT(1),         /* EXCP FOR WRITING  @Z40MSAP*/
*                                       /* ON THE PRINTER    @Z40MSAP*/
*            3 SPWENDM  BIT(1),         /* END SECTION IN    @Z40MSAP*/
*                                       /* MESSAGE AREA      @Z40MSAP*/
*            3 SPWEFCBP BIT(1),         /* END OF FCB IMAGE  @Z40MSAP*/
*                                       /* PRINT FUNCTION    @Z40MSAP*/
*            3 SPWM128L BIT(1),         /* MSG IEC128D IN    @Z40MSAP*/
*                                       /* MESSAGE AREA      @Z40MSAP*/
*          2 SPWFLAG2 BIT(8),           /* SECOND BYTE OF    @Z40MSAP*/
*                                       /* FLAGS             @Z40MSAP*/
*            3 SPWRVMSG BIT(1),         /* REISSUE VERIFY    @Z40MSAP*/
*                                       /* MESSAGE TO 3800   @Z40MSAP*/
*            3 SPWVMHD  BIT(1),         /* HEADER SECTION IN @Z40MSAP*/
*                                       /* MESSAGE AREA      @Z40MSAP*/
*            3 SPWVMCH  BIT(1),         /* 'CHANNEL' IN      @Z40MSAP*/
*                                       /* MESSAGE AREA      @Z40MSAP*/
*            3 SPWBLIOB BIT(1),         /* BUILD DUMMY IOB   @Z40MSAP*/
*            3 SPWM163L BIT(1),         /* MESSAGE IEC163A   @Z40MSAP*/
*                                       /* IS BEING ISSUED   @Z40MSAP*/
*            3 SPWM164L BIT(1),         /* MESSAGE IEC164A   @Z40MSAP*/
*                                       /* IS BEING ISSUED   @Z40MSAP*/
*            3 SPWNSTOR BIT(1),         /* DETERMINES IF     @Z40MSAP*/
*                                       /* SPWN HAS BEEN     @Z40MSAP*/
*                                       /* STORED            @Z40MSAP*/
*            3 SPWNESOI BIT(1),         /* NOT ENOUGH SPACE  @Z40MSAP*/
*                                       /* TO OPEN IMAGELIB  @Z40MSAP*/
*          2 SPWFLAG3 PTR(8),           /* THIRD BYTE OF     @Z40MSAP*/
*                                       /* FLAGS             @Z40MSAP*/
*            3 SPWPLCPY BIT(1),         /* THE SET PRINT     @Z40MSAP*/
*                                       /* PARM LIST HAS     @Z40MSAP*/
*                                       /* BEEN COPIED FROM  @Z40MSAP*/
*                                       /* THE CALLERS AREA  @Z40MSAP*/
*                                       /* TO KEY 5 SET      @Z40MSAP*/
*                                       /* PRINT WORK AREA   @Z40MSAP*/
*            3 SPWIMGLD BIT(1),         /* IMAGE LOADED      @Z40MSAP*/
*                                       /* INTO CORE         @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*          2 SPWREASN PTR(8),           /* REASON CODE       @Z40MSAP*/
*          2 SPWRETCD PTR(32),          /* RETURN CODE       @Z40MSAP*/
*            3 SPWRET0  PTR(8),         /* BYTE 0 OF         @Z40MSAP*/
*                                       /* RETURN CODE       @Z40MSAP*/
*            3 SPWRET1  PTR(8),         /* BYTE 1 OF         @Z40MSAP*/
*                                       /* RETURN CODE       @Z40MSAP*/
*            3 SPWRET2  PTR(8),         /* BYTE 2 OF         @Z40MSAP*/
*                                       /* RETURN CODE       @Z40MSAP*/
*            3 SPWRET3  PTR(8),         /* BYTE 3 OF         @Z40MSAP*/
*                                       /* RETURN CODE       @Z40MSAP*/
*          2 SPWIOBST PTR(31),          /* PTR IOB STANDARD  @Z40MSAP*/
*                                       /* SECTION           @Z40MSAP*/
*          2 SPWLNCNT FIXED(15),        /* FCB IMAGE LINE    @Z40MSAP*/
*                                       /* COUNTER           @Z40MSAP*/
*          2 SPWFCBIL FIXED(15),        /* LENGTH FCB IMAGE  @Z40MSAP*/
*          2 SPWCAVTA PTR(31),          /* ADDR CALLERS AVT  @Z40MSAP*/
*          2 SPWWKBTS PTR(16),          /* WORK BYTES TO     @Z40MSAP*/
*                                       /* TEST FLAGS        @Z40MSAP*/
*            3 SPWWKBT1 PTR(8),         /* FIRST WORK BYTE   @Z40MSAP*/
*            3 SPWWKBT2 PTR(8),         /* SECOND WORK BYTE  @Z40MSAP*/
*          2 SPWI     PTR(8),           /* TOTAL NUMBER OF   @Z40MSAP*/
*                                       /* TRANSLATE TABLES  @Z40MSAP*/
*          2 SPWJ     PTR(8),           /* TRANSLATE TABLE   @Z40MSAP*/
*                                       /* INDEX             @Z40MSAP*/
*          2 SPWK     PTR(8),           /* INDEX OF CGM IN   @Z40MSAP*/
*                                       /* TRANSLATE TABLES  @Z40MSAP*/
*          2 SPWL     PTR(8),           /*                   @Z40MSAP*/
*          2 SPWM     PTR(8),           /* INDEX IN CGM      @Z40MSAP*/
*                                       /* RECORD            @Z40MSAP*/
*          2 SPWN     PTR(8),           /* INDEX IN CGM      @Z40MSAP*/
*                                       /* RECORD            @Z40MSAP*/
*          2 SPWP     PTR(16),          /* TRANSLATE TABLE   @Z40MSAP*/
*                                       /* POSITION INDEX    @Z40MSAP*/
*          2 SPWMAX   PTR(8),           /* NUMBER OF CGM S   @Z40MSAP*/
*                                       /* INSTALLED ON      @Z40MSAP*/
*                                       /* DEVICE            @Z40MSAP*/
*          2 SPWTCBKY BIT(8),           /* UNUSED BYTE       @Z40MSAP*/
*          2 SPWCGMID BIT(32),          /* AREA TO BUILD     @Z40MSAP*/
*                                       /* LOADCGM RECORD    @Z40MSAP*/
*            3 SPWCGMRC(4) BIT(8),      /* ARRAY OF CGM IDS  @Z40MSAP*/
*          2 SPWMEXIT(5) PTR(31),       /* SETPRT MODULES    @Z40MSAP*/
*                                       /* EXIT LIST         @Z40MSAP*/
*          2 SPWMEIND FIXED(8),         /* INDEX FOR MODULE  @Z40MSAP*/
*                                       /* EXIT LIST         @Z40MSAP*/
*          2 SPWERIND FIXED(8),         /* INDEX FOR THE     @Z40MSAP*/
*                                       /* ERROR EXIT IN THE @Z40MSAP*/
*                                       /* MODULE EXIT LIST  @Z40MSAP*/
*          2 SPWRXIND FIXED(8),         /* INDEX INTO THE    @Z40MSAP*/
*                                       /* MODULE EXIT LIST  @Z40MSAP*/
*                                       /* FOR A MODULE TO   @Z40MSAP*/
*                                       /* PASS CONTROL TO   @Z40MSAP*/
*                                       /* IF RETRANSMIT IS  @Z40MSAP*/
*                                       /* SPECIFIED         @Z40MSAP*/
*          2 SPWPLNTH FIXED(8),         /* LENGTH OF THE     @Z40MSAP*/
*                                       /* SET PRINT         @Z40MSAP*/
*                                       /* PARAMETER LIST    @Z40MSAP*/
*          2 SPWADDCB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* CALLERS DCB       @Z40MSAP*/
*          2 SPWADDEB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* CALLERS DEB       @Z40MSAP*/
*          2 SPWADIOB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* IOB PREFIX        @Z40MSAP*/
*                                       /* SECTION           @Z40MSAP*/
*          2 SPWADUCB PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* UCB               @Z40MSAP*/
*          2 SPWCFHIT FIXED(8),         /* COUNTER FOR FCB   @Z48MSAP*/
*                                       /* IMAGE HALF INCH   @Z48MSAP*/
*                                       /* TEST              @Z48MSAP*/
*          2 SPWCFB   FIXED(8),         /* CURRENT FCB BYTE  @Z48MSAP*/
*                                       /* BEING USED FOR    @Z48MSAP*/
*                                       /* HALF INCH TEST    @Z48MSAP*/
*          2 *        FIXED(16),        /* UNUSED TWO BYTES  @Z48MSAP*/
*          2 *        FIXED(31),        /* UNUSED FOUR BYTES @Z48MSAP*/
*          2 SPWSAVE  CHAR(60)          /* SET PRINT WORK    @Z40MSAP*/
*                     BDY(WORD),        /* AREA REGISTER     @Z40MSAP*/
*                                       /* SAVE AREA         @Z40MSAP*/
*            3 SPWSAV01 FIXED(31),      /* SAVE AREA NUM  1  @Z40MSAP*/
*            3 SPWSAV02 FIXED(31),      /* SAVE AREA NUM  2  @Z40MSAP*/
*            3 SPWSAV03 FIXED(31),      /* SAVE AREA NUM  3  @Z40MSAP*/
*            3 SPWSAV04 FIXED(31),      /* SAVE AREA NUM  4  @Z40MSAP*/
*            3 SPWSAV05 FIXED(31),      /* SAVE AREA NUM  5  @Z40MSAP*/
*            3 SPWSAV06 FIXED(31),      /* SAVE AREA NUM  6  @Z40MSAP*/
*            3 SPWSAV07 FIXED(31),      /* SAVE AREA NUM  7  @Z40MSAP*/
*            3 SPWSAV08 FIXED(31),      /* SAVE AREA NUM  8  @Z40MSAP*/
*            3 SPWSAV09 FIXED(31),      /* SAVE AREA NUM  9  @Z40MSAP*/
*            3 SPWSAV10 FIXED(31),      /* SAVE AREA NUM 10  @Z40MSAP*/
*            3 SPWSAV11 FIXED(31),      /* SAVE AREA NUM 11  @Z40MSAP*/
*            3 SPWSAV12 FIXED(31),      /* SAVE AREA NUM 12  @Z40MSAP*/
*            3 SPWSAV13 FIXED(31),      /* SAVE AREA NUM 13  @Z40MSAP*/
*            3 SPWSAV14 FIXED(31),      /* SAVE AREA NUM 14  @Z40MSAP*/
*            3 SPWSAV15 FIXED(31),      /* SAVE AREA NUM 15  @Z40MSAP*/
*                                       /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**       THIS IS A RECEIVING FIELD FOR A CVD INSTRUCTION, AND        **
**       THEREFORE IS ALIGNED ON A DOUBLE WORD BOUNDARY.             **
**********************************************************************/
*          2 SPWFLINU BIT(64)           /* FCB IMAGE LINE    @Z40MSAP*/
*                     BDY(DWORD),       /* NUMBER            @Z40MSAP*/
*            3 SPWFCHNU BIT(64)         /* FCB IMAGE CHANNEL @Z40MSAP*/
*                       BDY(BYTE),      /* NUMBER            @Z40MSAP*/
*              4 *        CHAR(6),      /* FILLER            @Z40MSAP*/
*              4 SPWFPAKL BIT(16),      /* FCB LINE NUMBER   @Z40MSAP*/
*                                       /* IN PACKED FORMAT  @Z40MSAP*/
*                5 SPWFPAKC BIT(16),    /* FCB CHANNEL       @Z40MSAP*/
*                                       /* NUMBER IN         @Z40MSAP*/
*                                       /* PACKED FORMAT     @Z40MSAP*/
*                  6 *        FIXED(8), /* 1ST HALF FCB      @Z40MSAP*/
*                                       /* IMAGE ENTRY       @Z40MSAP*/
*                  6 SPWFSNUM BIT(8),   /* SIGN PORTION OF   @Z40MSAP*/
*                                       /* FCB IMAGE ENTRY   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                                     /*@Z40MSAP*/
*/*********************************************************************
**       AREA FOR THE COPY OF THE CALLERS SET PRINT PARAMETER LIST   **
**********************************************************************/
*
*          2 SPWSPP   CHAR(48),         /* COPY OF SPP KEY 5 @Z40MSAP*/
*
*/*********************************************************************
**       SUBPOOL NUMBER AND LENGTH FOR USER KEY SECTION OF THE       **
**       SET PRINT WORKAREA GOTTEN IN USER KEY. THIS INFORMATION     **
**       WILL BE USED TO FREEMAIN THIS AREA AT THE PROPER TIME.      **
**********************************************************************/
*
*          2 SPWUKSNL PTR(31),          /* THE GETMAIN       @Z40MSAP*/
*                                       /* SUBPOOL NUMBER    @Z40MSAP*/
*                                       /* AND LENGTH FOR    @Z40MSAP*/
*                                       /* THE SET PRINT     @Z40MSAP*/
*                                       /* WORKAREA GOTTEN   @Z40MSAP*/
*                                       /* IN USER KEY       @Z40MSAP*/
*            3 SPWUKSN  FIXED(8),       /* SUBPOOL NUMBER    @Z40MSAP*/
*            3 SPWUKLTH FIXED(24),      /* LENGTH            @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       SAVED SUBPOOL NUMBER AND LENGTH FOR KEY 5 SECTION OF        **
**       SET PRINT WORK AREA.                                        **
**                                                                   **
**********************************************************************/
*
*          2 SPWK5SNL PTR(31),          /* THE GETMAIN       @Z40MSAP*/
*                                       /* SUBPOOL NUMBER    @Z40MSAP*/
*                                       /* AND LENGTH FOR    @Z40MSAP*/
*                                       /* THE SET PRINT     @Z40MSAP*/
*                                       /* WORKAREA GOTTEN   @Z40MSAP*/
*                                       /* IN KEY 5          @Z40MSAP*/
*            3 SPWK5SN  FIXED(8),       /* SUBPOOL NUMBER    @Z40MSAP*/
*            3 SPWK5LTH FIXED(24),      /* LENGTH            @Z40MSAP*/
*/*********************************************************************
**      PUT ANY NEW REQUIREMENTS FOR SPACE IN FRONT OF THIS MESSAGE  **
**********************************************************************/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**     THIS IS THE WORK AREA FOR THE SET PRINT MODULES COMPLIERS     **
**                                                                   **
**********************************************************************/
*                                       /*                   @Z40MSAP*/
*          2 SPWMODWK CHAR(20);         /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       PRINTER CCW OP-CODES.                                       **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWNOP   BIT(8)                /* NO OPERATION      @Z40MSAP*/
*                 CONSTANT('03'X),      /*                   @Z40MSAP*/
*        SPWSENSE BIT(8)                /* SENSE I/O         @Z40MSAP*/
*                 CONSTANT('04'X),      /*                   @Z40MSAP*/
*        SPWWRTSP BIT(8)                /* PRINT, SPACE 1    @Z40MSAP*/
*                 CONSTANT('09'X),      /*                   @Z40MSAP*/
*        SPWWRITE BIT(8)                /* WRITE COMMAND     @Z40MSAP*/
*                 CONSTANT('11'X),      /*                   @Z40MSAP*/
*        SPWUNFLD BIT(8)                /* UNFOLD COMMAND    @Z40MSAP*/
*                 CONSTANT('23'X),      /*                   @Z40MSAP*/
*        SPWFLDCD BIT(8)                /* FOLD COMMAND      @Z40MSAP*/
*                 CONSTANT('43'X),      /*                   @Z40MSAP*/
*        SPWFCBLD BIT(8)                /* LOAD FCB IMAGE    @Z40MSAP*/
*                 CONSTANT('63'X),      /*                   @Z40MSAP*/
*        SPWBLDC  BIT(8)                /* BLOCK DATA CHECK  @Z40MSAP*/
*                 CONSTANT('73'X),      /*                   @Z40MSAP*/
*        SPWSKIP0 BIT(8)                /* SKIP TO CHANNEL 0 @Z40MSAP*/
*                 CONSTANT('83'X),      /*                   @Z40MSAP*/
*        SPWSKIP  BIT(8)                /* SKIP COMMAND      @Z40MSAP*/
*                 CONSTANT('8B'X),      /*                   @Z40MSAP*/
*        SPWCNTRL BIT(8)                /* CONTROL OP CODE   @Z40MSAP*/
*                 CONSTANT('EB'X),      /*                   @Z40MSAP*/
*        SPWLDFLD BIT(8)                /* LOAD FOLD         @Z40MSAP*/
*                 CONSTANT('F3'X),      /* COMMAND           @Z40MSAP*/
*        SPWLDUCS BIT(8)                /* LOAD UCS          @Z40MSAP*/
*                 CONSTANT('FB'X);      /* COMMAND           @Z40MSAP*/
*
*
*/*********************************************************************
**                                                                   **
**       3800 PRINTER CCW OP CODES.                                  **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWSTCNR BIT(8)                /* LOAD STARTING     @Z40MSAP*/
*                 CONSTANT('23'X),      /* COPY NUMBER       @Z40MSAP*/
*        SPWLGCM  BIT(8)                /* LOAD GRAPHIC      @Z40MSAP*/
*                 CONSTANT('25'X),      /* CHARACTER MODULE  @Z40MSAP*/
*        SPWLCMOD BIT(8)                /* LOAD COPY MODIFY  @Z40MSAP*/
*                 CONSTANT('35'X),      /* RECORD            @Z40MSAP*/
*        SPWINIT  BIT(8)                /* INITALIZE PRINTER @Z40MSAP*/
*                 CONSTANT('37'X),      /* OP CODE           @Z40MSAP*/
*        SPWLFOVL BIT(8)                /* LOAD FORMS        @Z40MSAP*/
*                 CONSTANT('43'X),      /* OVERLAY OP CODE   @Z40MSAP*/
*        SPWSLTT0 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/
*                 CONSTANT('47'X),      /* TABLE 0           @Z40MSAP*/
*        SPWLWCGM BIT(8)                /* LOAD WCGM         @Z40MSAP*/
*                 CONSTANT('53'X),      /* OP CODE           @Z40MSAP*/
*        SPWSLTT1 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/
*                 CONSTANT('57'X),      /* TABLE 1           @Z40MSAP*/
*        SPWSLTT2 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/
*                 CONSTANT('67'X),      /* TABLE 2           @Z40MSAP*/
*        SPWSLTT3 BIT(8)                /* SELECT TRANSLATE  @Z40MSAP*/
*                 CONSTANT('77'X),      /* TABLE 3           @Z40MSAP*/
*        SPWTTLOD BIT(8)                /* LOAD TRANSLATE    @Z40MSAP*/
*                 CONSTANT('83'X),      /* TABLE OP CODE     @Z40MSAP*/
*        SPWCLRPT BIT(8)                /* CLEAR PRINT       @Z40MSAP*/
*                 CONSTANT('87'X);      /* OP CODE           @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       SET PRINT ERROR RETURN CODES. THESE CODES WILL BE           **
**       PLACED IN THE PROPER LOCATION IN REGISTER 15, TO            **
**       INDICATE THE ERROR CONDITION THAT HAS OCCURED.              **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWSUCCP BIT(8)                /* SUCCESSFUL        @Z40MSAP*/
*                 CONSTANT('00'X),      /* COMPLETION        @Z40MSAP*/
*        SPWIMNO  BIT(8)                /* IMAGE NOT FOUND   @Z40MSAP*/
*                 CONSTANT('04'X),      /*                   @Z40MSAP*/
*        SPWBLDLP BIT(8)                /* BLDL PERMANENT    @Z40MSAP*/
*                 CONSTANT('08'X),      /* I/O ERROR         @Z40MSAP*/
*        SPWLOADP BIT(8)                /* LOAD PERMANENT    @Z40MSAP*/
*                 CONSTANT('0C'X),      /* I/O ERROR         @Z40MSAP*/
*        SPWREADP BIT(8)                /* READ PERMANENT    @Z40MSAP*/
*                 CONSTANT('10'X),      /* I/O ERROR         @Z40MSAP*/
*        SPWFCBV  BIT(8)                /* WRONG FCB IMAGE   @Z40MSAP*/
*                 CONSTANT('14'X),      /*                   @Z40MSAP*/
*        SPWNOOP  BIT(8)                /* NO OPERATION      @Z40MSAP*/
*                 CONSTANT('18'X),      /* PERFORMED         @Z40MSAP*/
*        SPWUCERR BIT(8)                /* NOP, PREVIOUS     @Z40MSAP*/
*                 CONSTANT('1C'X),      /* UNCORRECTIABLE    @Z40MSAP*/
*                                       /* ERROR             @Z40MSAP*/
*        SPWSPACE BIT(8)                /* INSUFFICIENT      @Z40MSAP*/
*                 CONSTANT('20'X),      /* SPACE             @Z40MSAP*/
*        SPWIMLIB BIT(8)                /* IMAGE LIBRARY CAN @Z40MSAP*/
*                 CONSTANT('24'X),      /* NOT BE OPENED     @Z40MSAP*/
*        SPWFOVLF BIT(8)                /* CAN NOT LOAD      @Z40MSAP*/
*                 CONSTANT('28'X),      /* FORMS OVERLAY     @Z40MSAP*/
*                                       /* FRAME             @Z40MSAP*/
*        SPWCANCL BIT(8)                /* OPERATOR          @Z40MSAP*/
*                 CONSTANT('2C'X),      /* CANCELED          @Z40MSAP*/
*        SPWMCGM  BIT(8)                /* TOO MANY CGMS     @Z40MSAP*/
*                 CONSTANT('30'X),      /* REQUESTED         @Z40MSAP*/
*        SPWTRCIN BIT(8)                /* COPY MOD TRC      @Z40MSAP*/
*                 CONSTANT('34'X),      /* FIELD INVALID     @Z40MSAP*/
*        SPWEODSR BIT(8)                /* ERROR WHILE       @Z40MSAP*/
*                 CONSTANT('38'X),      /* ISSUING EODS      @Z40MSAP*/
*        SPWNOBR  BIT(8)                /* NO BURSTER/SHEET  @Z40MSAP*/
*                 CONSTANT('3C'X),      /* STACKER FEATURE   @Z40MSAP*/
*                                       /* INSTALLED         @Z40MSAP*/
*        SPWPIOER BIT(8)                /* A PERMENT I/O     @Z40MSAP*/
*                 CONSTANT('40'X),      /* ERROR HAS OCCURED @Z40MSAP*/
*        SPWNOCGM BIT(8)                /* CGM NOT SPECIFIED @Z40MSAP*/
*                 CONSTANT('44'X);      /* IN CHARACTER      @Z40MSAP*/
*                                       /* ARRANGEMENT TABLE @Z40MSAP*/
*                                       /* TRAILER           @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       SET PRINT 3800 REASON CODES. THESE CODES WILL APPEAR IN     **
**       REGISTER 0, WHEN AN ERROR CONDITION IS RETURNED.            **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWTRTBL BIT(8)                /* TRANSLATE TABLE   @Z40MSAP*/
*                 CONSTANT('04'X),      /*                   @Z40MSAP*/
*        SPWCPMOD BIT(8)                /* COPY MODIFY       @Z40MSAP*/
*                 CONSTANT('08'X),      /* RECORD            @Z40MSAP*/
*        SPWCPNR  BIT(8)                /* COPY NUMBER       @Z40MSAP*/
*                 CONSTANT('0C'X),      /*                   @Z40MSAP*/
*        SPWGCMR  BIT(8)                /* GRAPHIC CHARACTER @Z40MSAP*/
*                 CONSTANT('10'X),      /* MODULE RECORD     @Z40MSAP*/
*        SPWFOSEQ BIT(8)                /* FORMS OVERLAY     @Z40MSAP*/
*                 CONSTANT('14'X),      /* SEQUENCE CONTROL  @Z40MSAP*/
*                                       /* RECORD            @Z40MSAP*/
*        SPWFOVL  BIT(8)                /* FORMS OVERLAY     @Z40MSAP*/
*                 CONSTANT('18'X),      /* FEATURE           @Z40MSAP*/
*        SPWCGMR  BIT(8)                /* CHARACTER         @Z40MSAP*/
*                 CONSTANT('1C'X),      /* GENETATION MODULE @Z40MSAP*/
*        SPWFCBRC BIT(8)                /* FORMS CONTROL     @Z40MSAP*/
*                 CONSTANT('20'X);      /* BUFFER            @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       COMMON SET PRINT CONSTANTS                                  **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWALG   BIT(8)                /* ALIGN MESSAGE     @Z40MSAP*/
*                 CONSTANT('FF'X),      /* RETRY             @Z40MSAP*/
*        SPWBLDLN PTR(16)               /* BLDL ENTRY        @Z40MSAP*/
*                 CONSTANT(64),         /* LENGTH            @Z40MSAP*/
*        SPWCC    BIT(8)                /* COMMAND CHAINING  @Z40MSAP*/
*                 CONSTANT('40'X),      /* BIT               @Z40MSAP*/
*        SPWCCWVR BIT(8)                /* VERIFY ONLY       @Z40MSAP*/
*                 CONSTANT('0F'X),      /*                   @Z40MSAP*/
*        SPWDEIB1 BIT(8)                /* USED TO DECREMENT @Z40MSAP*/
*                 CONSTANT('01'X),      /* INDEXES BY 1      @Z40MSAP*/
*        SPWENTVR BIT(8)                /* ENTRY FOR         @Z40MSAP*/
*                 CONSTANT('1F'X),      /* VERIFY            @Z40MSAP*/
*        SPWE1SIZ PTR(16)               /* TRANSLATE TABLE   @Z40MSAP*/
*                 CONSTANT(288),        /* ENTRY SIZE        @Z40MSAP*/
*        SPWFOLD  BIT(8)                /* FOLD SPECIFIED    @Z40MSAP*/
*                 CONSTANT('40'X),      /*                   @Z40MSAP*/
*        SPWHIC12 FIXED(8)              /* USED TO SEE WHEN  @Z48MSAP*/
*                 CONSTANT(12),         /* CONSECTIVE MIXED  @Z48MSAP*/
*                                       /* BYTES IN A FCB    @Z48MSAP*/
*                                       /* IMAGE EQUAL       @Z48MSAP*/
*                                       /* HALF AN INCH      @Z48MSAP*/
*        SPWHIC48 FIXED(8)              /* FACTOR OF 48      @Z48MSAP*/
*                 CONSTANT(48),         /* USED TO CONVERT   @Z48MSAP*/
*                                       /* A FCB IMAGE BYTE  @Z48MSAP*/
*                                       /* LPI VALUE TO      @Z48MSAP*/
*                                       /* TWENTY-FOURTHS    @Z48MSAP*/
*        SPWHI192 FIXED(8)              /* FACTOR OF 192     @Z48MSAP*/
*                 CONSTANT(192),        /* USED TO CONVERT   @Z48MSAP*/
*                                       /* A FCB IMAGE BYTE  @Z48MSAP*/
*                                       /* LPI VALUE TO      @Z48MSAP*/
*                                       /* TWENTY-FOURTHS    @Z48MSAP*/
*        SPWIMCLO BIT(8)                /* IMAGELIB NOT      @Z40MSAP*/
*                 CONSTANT('FF'X),      /* OPEN              @Z40MSAP*/
*        SPWINIB1 BIT(8)                /* USED TO INCREMENT @Z40MSAP*/
*                 CONSTANT('01'X),      /* INDEXES BY 1      @Z40MSAP*/
*        SPWLNGTA FIXED(15)             /* 3800 WORKAREA     @Z40MSAP*/
*                 CONSTANT(156),        /* SIZE              @Z40MSAP*/
*        SPWLNGTH FIXED(15)             /* WORKAREA SIZE     @Z40MSAP*/
*                 CONSTANT(92),         /*                   @Z40MSAP*/
*        SPWMAXCH PTR(8)                /* MAX NUMBER OF     @Z40MSAP*/
*                 CONSTANT(4),          /* TRANSLATE TABLES  @Z40MSAP*/
*        SPWNFCBL BIT(8)                /* NO FCB LOAD       @Z40MSAP*/
*                 CONSTANT('40'X),      /*                   @Z40MSAP*/
*        SPWOKCC  BIT(8)                /* I/O COMPLETED OK  @Z40MSAP*/
*                 CONSTANT('7F'X),      /*                   @Z40MSAP*/
*        SPWOVLAP BIT(8)                /* LOAD OVERLAPPED   @Z40MSAP*/
*                 CONSTANT('20'X),      /*                   @Z40MSAP*/
*        SPWPOOL  PTR(8)                /* SUBPOOL FOR       @Z40MSAP*/
*                 CONSTANT(230),        /* USER KEY CORE     @Z40MSAP*/
*        SPWRDLN  PTR(8)                /* LENGTH OF NAME    @Z40MSAP*/
*                 CONSTANT(8),          /* FIELD FOR RECORDS @Z40MSAP*/
*                                       /* PASSED IN CORE    @Z40MSAP*/
*        SPWRPVER BIT(8)                /* OPERATOR          @Z40MSAP*/
*                 CONSTANT('10'X),      /* REQUESTED VERIFY  @Z40MSAP*/
*        SPWSILI  BIT(8)                /* SILI BIT          @Z40MSAP*/
*                 CONSTANT('20'X),      /*                   @Z40MSAP*/
*        SPWTTNAM CHAR(4)               /* 1ST 4 CHARACTERS  @Z40MSAP*/
*                 CONSTANT('XTB1'),     /* OF TRANSLATE      @Z40MSAP*/
*                                       /* TABLE NAME        @Z40MSAP*/
*        SPWUCS2C CHAR(1)               /* CHARACTER '2'     @Z40MSAP*/
*                 CONSTANT('2'),        /* FOR UCS2          @Z40MSAP*/
*                                       /* MEMBER NAME       @Z40MSAP*/
*        SPWVERIF BIT(8)                /* VERIFY            @Z40MSAP*/
*                 CONSTANT('10'X),      /* SPECIFIED         @Z40MSAP*/
*        SPWXLATC BIT(16)               /* ATTRIBUTES FOR    @Z40MSAP*/
*                 CONSTANT('C378'X),    /* XCTL LIST         @Z40MSAP*/
*        SPWXLNMC CHAR(6)               /* MODULE NAME FOR   @Z40MSAP*/
*                 CONSTANT('IGG081'),   /* XCTL LIST         @Z40MSAP*/
*        SPW5POOL PTR(8)                /* SUBPOOL FOR       @Z40MSAP*/
*                 CONSTANT(230),        /* KEY 5 CORE        @Z40MSAP*/
*        SPW6LNE  CHAR(2)               /* SIX LINES/INCH    @Z40MSAP*/
*                 CONSTANT(' 6'),       /*                   @Z40MSAP*/
*        SPW8LNE  CHAR(2)               /* EIGHT LINES/INCH  @Z40MSAP*/
*                 CONSTANT(' 8'),       /*                   @Z40MSAP*/
*        SPW12LNE CHAR(2)               /* TWELVE LINES/     @Z48MSAP*/
*                 CONSTANT('12'),       /* INCH              @Z48MSAP*/
*        SPW6LPI  BIT(2)                /* USED TO TEST FOR  @Z48MSAP*/
*                 CONSTANT('00'B),      /*  6 LPI IN FCB     @Z48MSAP*/
*                                       /* IMAGE BYTES       @Z48MSAP*/
*        SPW8LPI  BIT(2)                /* USED TO TEST FOR  @Z48MSAP*/
*                 CONSTANT('01'B),      /*  8 LPI IN FCB     @Z48MSAP*/
*                                       /* IMAGE BYTES       @Z48MSAP*/
*        SPW12LPI BIT(2)                /* USED TO TEST FOR  @Z48MSAP*/
*                 CONSTANT('11'B);      /* 12 LPI IN FCB     @Z48MSAP*/
*                                       /* IMAGE BYTES       @Z48MSAP*/
*        %IF SPWESTAE = 'YES'           /* IF THIS MAPPING   @Z40MSAP*/
*                                       /* MACRO IS BEING    @Z40MSAP*/
*                                       /* INVOKED BY THE    @Z40MSAP*/
*                                       /* ESTAE ROUTINE     @Z40MSAP*/
*                                       /* (IGCT1081)        @Z40MSAP*/
*          %THEN                        /*                   @Z40MSAP*/
*            %GOTO SPW003;              /*                   @Z40MSAP*/
*          %ELSE;                       /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING STRUCTURE MAPS THE SVRB EXTENDED SAVE         **
**       AREA AS BY SET PRINT.                                       **
**                                                                   **
**********************************************************************/
*
*    DECLARE
*        1 SPRBXSV  BASED(SPWRSVR),     /*                   @Z40MSAP*/
*          2 SPRMSG   PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* MESSAGE CSECT     @Z40MSAP*/
*          2 SPRIDCBA PTR(31),          /* SYS1.IMAGELIB     @Z40MSAP*/
*                                       /* DCB ADDRESS       @Z40MSAP*/
*          2 SPREXIT  PTR(31),          /* EXIT PROLOG       @Z40MSAP*/
*            3 SPRREG13 PTR(31),        /* SAVE AREA FOR     @Z40MSAP*/
*                                       /* REGISTER 13       @Z40MSAP*/
*          2 SPRKEY   CHAR(1),          /* USER KEY          @Z40MSAP*/
*          2 SPRINDIC BIT(8),           /* FLAG BYTE         @Z40MSAP*/
*            3 SPRCNTRL BIT(1),         /* CONTROL BLOCK     @Z40MSAP*/
*                                       /* ROUTINE ENTERED   @Z40MSAP*/
*            3 SPRTRCNS BIT(1),         /* GETMAIN           @Z40MSAP*/
*                                       /* UNSUCCESSFUL      @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*          2 SPRNIOBS CHAR(1),          /* NUMBER OF IOBS    @Z40MSAP*/
*          2 *        CHAR(1),          /*                   @Z40MSAP*/
*          2 SPRBLDLA PTR(31),          /* ADDRESS OF BLDL   @Z40MSAP*/
*                                       /* PARAMETER LIST    @Z40MSAP*/
*          2 SPRIOBSV PTR(31),          /* ADDRESS OF IOB    @Z40MSAP*/
*                                       /* ALTERED BY        @Z40MSAP*/
*                                       /* IGC0008A          @Z40MSAP*/
*          2 SPRDCBBG PTR(31),          /* BEGINING ADDRESS  @Z40MSAP*/
*                                       /* OF DCB            @Z40MSAP*/
*          2 SPRGETMN PTR(31),          /* ADDRESS OF GTRACE @Z40MSAP*/
*                                       /* BUFFER            @Z40MSAP*/
*          2 SPRELIST CHAR(16),         /* ESTAE LIST        @Z40MSAP*/
*            3 SPRTRACE CHAR(8),        /* GTRACE LIST       @Z40MSAP*/
*              4 SPRDCBLN CHAR(1),      /* LENGTH OF DCB     @Z40MSAP*/
*              4 SPRDCBOF CHAR(1),      /* OFFSET FROM       @Z40MSAP*/
*                                       /* 'LOCATION 0' OF   @Z40MSAP*/
*                                       /* DCB TO WHERE      @Z40MSAP*/
*                                       /* DCB STARTS        @Z40MSAP*/
*            3 *        CHAR(8);        /*                   @Z40MSAP*/
*%SPW003:;                              /*                   @Z40MSAP*/
*        %IF SPW3800 ^= 'YES'           /* IF THIS MAPPING   @Z40MSAP*/
*          %THEN                        /* MACRO IS NOT      @Z40MSAP*/
*                                       /* BEING USED FOR A  @Z40MSAP*/
*                                       /* 3800 DEVICE, SKIP @Z40MSAP*/
*                                       /* THE FOLLOWING     @Z40MSAP*/
*                                       /* SECTION           @Z40MSAP*/
*            %GOTO SPW005;              /*                   @Z40MSAP*/
*          %ELSE;                       /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS AREA IS CREATED FOR, AND ONLY USED BY THE 3800         **
**       SET PRINT PROCESSING MODULES (IGG08110, IGG08111,           **
**       IGG08112, IGG08113, IGG08114, AND IGG08115).                **
**                                                                   **
**********************************************************************/
*
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING ARRAY OF STRUCTURES MAPS THE SET PRINT        **
**       TRANSLATE TABLE ENTRIES.                                    **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWE1(4) CHAR(288)             /* ARRAY FOR         @Z40MSAP*/
*                 BASED(SPWTWAD1),      /* TRANSLATE TABLES  @Z40MSAP*/
*
*
*        1 SPWTT    CHAR(288)           /* TRANSLATE TABLE   @Z40MSAP*/
*                   BASED(SPWTWAD1),    /*                   @Z40MSAP*/
*          2 SPPTTHDR CHAR(8),          /* HEADER SECTION    @Z40MSAP*/
*            3 SPWTTID  CHAR(4),        /* TRANSLATE TABLE   @Z40MSAP*/
*                                       /* ID                @Z40MSAP*/
*            3 *        CHAR(4),        /* FILLER            @Z40MSAP*/
*          2 SPWXLAT  CHAR(280),        /* TRANSLATE TABLE   @Z40MSAP*/
*                                       /* BASE SECTION      @Z40MSAP*/
*            3 SPWTRANS CHAR(256),      /* TRANSLATE TABLE   @Z40MSAP*/
*              4 SPWTTBYT(256) BIT(8),  /* ARRAY OF          @Z40MSAP*/
*                                       /* TRANSLATE TABLE   @Z40MSAP*/
*                                       /* BYTES             @Z40MSAP*/
*            3 SPWTRAIL CHAR(24),       /* TRAILER           @Z40MSAP*/
*              4 SPWTRL1(4) PTR(16)     /* FIRST ARRAY OF    @Z40MSAP*/
*                           BDY(BYTE),  /* THE TRAILER       @Z40MSAP*/
*                5 SPWCGM   PTR(8),     /* CGM ID FIELD      @Z40MSAP*/
*                5 SPWWCGM  PTR(8),     /* WCGM NUMBER FIELD @Z40MSAP*/
*              4 SPWGRAF(4) CHAR(4);    /* ARRAY OF GCM      @Z40MSAP*/
*                                       /* NAMES             @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING STRUCTURE MAPS THE HEADER SECTION OF THE      **
**       IMAGE ENTRY FOR THE 3800 DEVICE.                            **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        1 SPWIMOD  BASED,              /*                   @Z40MSAP*/
*          2 SPWIMODH CHAR(8),          /* HEADER SECTION OF @Z40MSAP*/
*            3 SPWIMODN CHAR(4),        /* IMAGE NAME FIELD  @Z40MSAP*/
*            3 SPWIMODR FIXED(16)       /* RESERVED AREA     @Z40MSAP*/
*                       BDY(BYTE),      /*                   @Z40MSAP*/
*            3 SPWIMODL FIXED(16)       /* LENGTH OF IMAGE   @Z40MSAP*/
*                       BDY(BYTE),      /*                   @Z40MSAP*/
*          2 SPWIMODB CHAR(8);          /* BASE SECTION OF   @Z40MSAP*/
*                                       /* THE IMAGE         @Z40MSAP*/
*
*
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING STRUCTURE MAPS THE FCB IMAGE ENTRY FOR        **
**       THE 3800 DEVICE.                                            **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        1 SPWFCBIE BIT(8)              /* FCB IMAGE ENTRY   @Z40MSAP*/
*                   BASED,              /*                   @Z40MSAP*/
*          2 *        BIT(2),           /* NOT USED          @Z48MSAP*/
*          2 SPWFCBLP BIT(2),           /* 00 =  6 LINES PER @Z48MSAP*/
*                                       /* INCH              @Z48MSAP*/
*                                       /* 01 =  8 LINES PER @Z48MSAP*/
*                                       /* INCH              @Z48MSAP*/
*                                       /* 11 = 12 LINES PER @Z48MSAP*/
*                                       /* INCH              @Z48MSAP*/
*          2 SPWFCBCH BIT(4);           /* CHANNEL NUMBER    @Z40MSAP*/
*        %IF SPWESTAE ^= 'YES'          /* IF THIS MAPPING   @Z40MSAP*/
*          %THEN                        /* MACRO IS BEING    @Z40MSAP*/
*                                       /* INVOKED BY THE    @Z40MSAP*/
*                                       /* ESTAE ROUTINE     @Z40MSAP*/
*                                       /* (IGCT1081)        @Z40MSAP*/
*                                       /* PERFORM THE       @Z40MSAP*/
*                                       /* FOLLOWING         @Z40MSAP*/
*                                       /* INSTRUCTIONS      @Z40MSAP*/
*                                       /* THEN EXIT THIS    @Z40MSAP*/
*                                       /* MAPPING MACRO     @Z40MSAP*/
*            %GOTO SPW004;              /*                   @Z40MSAP*/
*          %ELSE;                       /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING STRUCTURE MAPS THE SVRB EXTENDED SAVE         **
**       AREA AS USED BY THE ESTAE ROUTINE OF SET PRINT.             **
**                                                                   **
**********************************************************************/
*
*    DECLARE
*        1 SPRBXSV  DEF(RBEXSAVE),      /*                   @Z40MSAP*/
*          2 SPRMSG   PTR(31),          /* ADDRESS OF THE    @Z40MSAP*/
*                                       /* MESSAGE CSECT     @Z40MSAP*/
*          2 SPRIDCBA PTR(31),          /* SYS1.IMAGELIB     @Z40MSAP*/
*                                       /* DCB ADDRESS       @Z40MSAP*/
*          2 SPREXIT  PTR(31),          /* EXIT PROLOG       @Z40MSAP*/
*            3 SPRREG13 PTR(31),        /* SAVE AREA FOR     @Z40MSAP*/
*                                       /* REGISTER 13       @Z40MSAP*/
*          2 SPRKEY   CHAR(1),          /* USER KEY          @Z40MSAP*/
*          2 SPRINDIC BIT(8),           /* FLAG BYTE         @Z40MSAP*/
*            3 SPRCNTRL BIT(1),         /* CONTROL BLOCK     @Z40MSAP*/
*                                       /* ROUTINE ENTERED   @Z40MSAP*/
*            3 SPRTRCNS BIT(1),         /* GETMAIN           @Z40MSAP*/
*                                       /* UNSUCCESSFUL      @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*            3 *        BIT(1),         /* UNUSED FLAG BIT   @Z40MSAP*/
*          2 SPRNIOBS CHAR(1),          /* NUMBER OF IOBS    @Z40MSAP*/
*          2 *        CHAR(1),          /*                   @Z40MSAP*/
*          2 SPRBLDLA PTR(31),          /* ADDRESS OF BLDL   @Z40MSAP*/
*                                       /* PARAMETER LIST    @Z40MSAP*/
*          2 SPRIOBSV PTR(31),          /* ADDRESS OF IOB    @Z40MSAP*/
*                                       /* ALTERED BY        @Z40MSAP*/
*                                       /* IGC0008A          @Z40MSAP*/
*          2 SPRDCBBG PTR(31),          /* BEGINING ADDRESS  @Z40MSAP*/
*                                       /* OF DCB            @Z40MSAP*/
*          2 SPRGETMN PTR(31),          /* ADDRESS OF GTRACE @Z40MSAP*/
*                                       /* BUFFER            @Z40MSAP*/
*          2 SPRELIST CHAR(16),         /* ESTAE LIST        @Z40MSAP*/
*            3 SPRTRACE CHAR(8),        /* GTRACE LIST       @Z40MSAP*/
*              4 SPRDCBLN CHAR(1),      /* LENGTH OF DCB     @Z40MSAP*/
*              4 SPRDCBOF CHAR(1),      /* OFFSET FROM       @Z40MSAP*/
*                                       /* 'LOCATION 0' OF   @Z40MSAP*/
*                                       /* DCB TO WHERE      @Z40MSAP*/
*                                       /* DCB STARTS        @Z40MSAP*/
*            3 *        CHAR(8);        /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS SECTION DECLARES ALL OF THE POINTERS FOR THE SET       **
**       PRINT WORK AREA REQUIRED BY THE ESTAE MODULE (IGCT1081)     **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWUCORE PTR(31)               /* PTR SET PRINT     @Z40MSAP*/
*                 DEFINED(SPWWKADR),    /* WORKAREA          @Z40MSAP*/
*        SPW5CORE PTR(31)               /* PTR SET PRINT     @Z40MSAP*/
*                 DEFINED(SPRBLDLA);    /* WORKAREA          @Z40MSAP*/
*                                       /* (IN KEY 5)        @Z40MSAP*/
*        %GOTO SPW005;                  /*                   @Z40MSAP*/
*%SPW004:;                              /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THE FOLLOWING STRUCTURE MAPS THE FIRST FOUR SENSE           **
**       BYTES FOR THE 3800 PRINTER.                                 **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        1 SPWSENBY CHAR(4)             /* FIRST FOUR BYTES  @Z40MSAP*/
*                   DEF(SPWFFSB),       /* SENSE BYTES FOR   @Z40MSAP*/
*                                       /* THE 3800 PRINTER  @Z40MSAP*/
*          2 *        CHAR(3),          /* FILLER            @Z40MSAP*/
*          2 SPWSENB3 CHAR(1),          /* FOURTH SENSE BYTE @Z40MSAP*/
*            3 *        BIT(3),         /* FILLER            @Z40MSAP*/
*            3 SPWSENTL BIT(1),         /* LOCATION WERE     @Z40MSAP*/
*                                       /* PAPER IS THREADED @Z40MSAP*/
*                                       /*  IF = 1, PAPER    @Z40MSAP*/
*                                       /*   IS THREADED TO  @Z40MSAP*/
*                                       /*   THE SHEET       @Z40MSAP*/
*                                       /*   STACKER         @Z40MSAP*/
*                                       /*  IF = 0, PAPER    @Z40MSAP*/
*                                       /*   IS THREADED TO  @Z40MSAP*/
*                                       /*   THE CONTINOUS   @Z40MSAP*/
*                                       /*   FORMS STACKER   @Z40MSAP*/
*            3 *        BIT(4);         /* FILLER            @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS SECTION RESTRICTS THE REGISTERS THAT ARE PASSED        **
**       BY EACH OF THE 3800 SET PRINT ROUTINES.                     **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        SPWUCORE REG(04) PTR(31)       /* PTR SET PRINT     @Z40MSAP*/
*                         RESTRICTED,   /* WORKAREA          @Z40MSAP*/
*                                       /* (IN USER KEY)     @Z40MSAP*/
*        SPWRSVR  REG(06) PTR(31)       /* POINTER TO SVRB   @Z40MSAP*/
*                         RESTRICTED,   /* + 96 (EXTENDED    @Z40MSAP*/
*                                       /* SAVE AREA)        @Z40MSAP*/
*        SPW5CORE REG(08) PTR(31)       /* PTR SET PRINT     @Z40MSAP*/
*                        RESTRICTED;    /* WORKAREA          @Z40MSAP*/
*                                       /* (IN KEY 5)        @Z40MSAP*/
*
*/*********************************************************************
**       CREATE COMMON REGISTER NAMES FOR USE BY OTHER MACROS        **
**********************************************************************/
*
*        ?AHAREG;                       /*                   @Z40MSAP*/
*
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS SECTION DECLARES ALL OF THE POINTERS USED BY THE       **
**       SPW MACRO TABLES.                                           **
**                                                                   **
**********************************************************************/
*
*    DECLARE                            /*                   @Z40MSAP*/
*        DCBPTR   PTR(31)               /* PTR USERS DCB     @Z40MSAP*/
*                 DEF(SPWADDCB),        /*                   @Z40MSAP*/
*        DEBPTR   PTR(31)               /* PTR DEB           @Z40MSAP*/
*                 DEF(SPWADDEB),        /*                   @Z40MSAP*/
*        IOBPRPTR PTR(31)               /* PTR IOB PREFIX    @Z40MSAP*/
*                 DEF(SPWADIOB),        /*                   @Z40MSAP*/
*        IOBSTPTR PTR(31)               /* PTR IOB STANDARD  @Z40MSAP*/
*                 DEF(SPWIOBST),        /* SECTION           @Z40MSAP*/
*        UCBPTR   PTR(31)               /* PTR UCB           @Z40MSAP*/
*                 DEF(SPWADUCB),        /*                   @Z40MSAP*/
*        DEBDAPTR PTR(31)               /* NON               @Z40MSAP*/
*                 BASED,                /*                   @Z40MSAP*/
*        DEBEXPTR PTR(31)               /*   USED            @Z40MSAP*/
*                 BASED,                /*                   @Z40MSAP*/
*        DEBSBPTR PTR(31)               /*     DSECT         @Z40MSAP*/
*                 BASED,                /*                   @Z40MSAP*/
*        UCBDCPTR PTR(31)               /*        POINTERS   @Z40MSAP*/
*                 BASED;                /*                   @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS INSTRUCTION WILL SET UP THE BASE POINTER FOR THE       **
**       SET PRINT PARAMETER LIST (IHASPP) MAPING MACRO.             **
**                                                                   **
**********************************************************************/
*
*        RESPECIFY (SPPARM)             /* SET UP POINTER    @Z40MSAP*/
*                  BASED(ADDR(SPWSPP)); /* TO SET PRINT      @Z40MSAP*/
*                                       /* PARAMETER LIST    @Z40MSAP*/
*                                       /* ENTRY             @Z40MSAP*/
*    @ EJECT ASSEMBLE;                  /*                   @Z40MSAP*/
*/*********************************************************************
**                                                                   **
**       THIS SECTION WILL CALL THE FOLLOWING MAPING MACROS:         **
**                                                                   **
**                IHADCBDF                                           **
**                IHADCB                                             **
**                IEZDEB                                             **
**                IEZIOB                                             **
**                IEFUCBOB                                           **
**                IHASPP                                             **
**                                                                   **
**********************************************************************/
*
*    %INCLUDE SYSLIB (IHADCBDF);        /*                   @Z40MSAP*/
*    %DSORGPS = 1;                      /*                   @Z40MSAP*/
*    %DEVDPR = 1;                       /*                   @Z40MSAP*/
*    %INCLUDE SYSLIB (IHADCB);          /*                   @Z40MSAP*/
*    %INCLUDE SYSLIB (IEZDEB);          /*                   @Z40MSAP*/
*    %INCLUDE SYSLIB (IEZIOB);          /*                   @Z40MSAP*/
*    %INCLUDE SYSLIB (IEFUCBOB);        /*                   @Z40MSAP*/
*    %INCLUDE SYSLIB (IHASPP);          /*                   @Z40MSAP*/
*%SPW005:;                              /*                   @Z40MSAP*/
