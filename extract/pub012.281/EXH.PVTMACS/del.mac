         MACRO
&TAG     DEL   &TREE,&LV=,&T=,&TYPE=,&S=,&SP=,                         X
               &FREE=,&RECL=
.*********************** SEPTEMBER 27, 1973. **************************
.* THE DEL MACRO-INSTRUCTION IS USED TO DELETE A KEY-ADDRESS          *
.* ASSOCIATION PAIR FROM THE RADIX PARTITION TREE. THE MEANINGS OF THE*
.* PARAMETERS ARE AS FOLLOWS:                                         *
.**********************************************************************
.* TREE: THE TREE PARAMETER SPECIFIES THE ADDRESS OF THE RADIX        *
.*       PARTITION TREE, AS IT IS OBTAINED FROM USING THE STREE       *
.*       MACRO-INSTRUCTION. THE ADDRESS MAY EITHER BE IN MAIN STORAGE *
.*       OR IN A REGISTER. IF "LABEL" IS CODED FOR THE TREE PARAMETER,*
.*       THE ADDRESS IS IN A WORD IN MAIN STORAGE. IF "(TREE)" IS     *
.*       CODED, THE ADDRESS IS IN THE CORRESPONDING REGISTER.         *
.* LV:   LV MEANS "LENGTH VALUE", AND IS USED TO SPECIFY THE LENGTH OF*
.*       THE RECORD IF THE RECORD AREA IS TO BE RELEASED TO THE SYSTEM*
.*       VIA THE FSPACE MACRO-INSTRUCTION. IF THE LV PARAMETER IS NOT *
.*       CODED, THEN NO FSPACE OPERATION TAKES PLACE, BUT ONLY THE    *
.*       SPACE FOR THE RADIX PARTITION TREE ENTRY IS RELEASED.        *
.*       THE LV PARAMETER IS CODED EXACTLY THE SAME WAY AS IN THE     *
.*       FSPACE MACRO-INSTRUCTION. IF THE RECORD IS A VARIABLE LENGTH *
.*       RECORD WITH EITHER A ONE-BYTE OR HALFWORD COUNT AT THE FRONT *
.*       OF THE RECORD, THE LENGTH VALUE MAY BE CODED AS:             *
.*       LV=((15),1) FOR A ONE BYTE LENGTH;                           *
.*       LV=((15),2) FOR A HALFWORD LENGTH FIELD.                     *
.*       IF THE RECORD IS A FIXED LENGTH RECORD, THEN "LV=LENGTH"     *
.*       SHOULD BE CODED, WHERE "LENGTH" IS THE RECORD LENGTH.        *
.*                                                                    *
.* S,SP: THESE PARAMETERS ARE CODED EXACTLY THE SAME WAY AS IN THE    *
.*       FSPACE MACRO-INSTRUCTION; SEE THE DESCRIPTION OF FSPACE FOR  *
.*       DETAILS.                                                     *
.* FREE: THIS PARAMETER IS PRESENT ONLY FOR COMPATIBILITY WITH EARLIER*
.*       VERSIONS, AND SHOULD NOT BE USED.                            *
.* RECL: THIS PARAMETER IS PRESENT ONLY FOR COMPATIBILITY WITH EARLIER*
.*       VERSIONS, AND SHOULD NOT BE USED.                            *
.*       THE RETURN CODE IN REGISTER 15 IS THE ADDRESS THAT WAS       *
.*       ASSOCIATED WITH THE KEY BEFORE THE DELETE IF THE LENGTH VALUE*
.*       IS NOT CODED. THE CONDITION CODE SETTING DOES NOT ALWAYS     *
.*       AGREE WITH THE RETURN CODE IN THIS EVENT, SINCE THE CONDITION*
.*       CODE IS SET TO 01 (MINUS) WHEN THE DEL MACRO-INSTRUCTION     *
.*       DELETES THE LAST KEY-ADDRESS PAIR IN THE RPT. WHEN THE LV    *
.*       PARAMETER IS NOT CODED A BM INSTRUCTION WILL BRANCH WHEN THE *
.*       ADDRESS RETURNED IN REGISTER 15 IS THE LAST ADDRESS THAT WAS *
.*       IN THE RPT. A BNM INSTRUCTION WILL BRANCH WHEN THE ADDRESS   *
.*       RETURNED IN REGISTER 15 WAS NOT THE LAST ADDRESS IN THE RPT. *
.*       WHEN THE LENGTH VALUE IS CODED, THE CONDITION CODE SETTING IS*
.*       THE SAME AS ABOVE, BUT THE RETURN CODE IN REGISTER 15 IS SET *
.*       TO ZERO, SINCE THE FSPACE MACRO-INSTRUCTION SETS IT TO ZERO. *
.*       THE CONDITION CODE IS PRESERVED THROUGH THE FSPACE           *
.*       MACRO-INSTRUCTION, SO THAT IT IS THE SAME AS IT IS WHEN      *
.*       RETURNING FROM THE DEL SUBROUTINE IN THE MODULE IGARPT01.    *
.* AFTER THE DEL OPERATION, THE CURSOR IS SET BETWEEN THE TWO KEYS ON *
.* EITHER SIDE OF THE DELETED KEY, SO THAT IS A SCANL OR SCANR        *
.* MACRO-INSTRUCTION IS SUBSEQUENTLY EXECUTED THE CURSOR IS POSITIONED*
.* TO THE KEY LOWER OR HIGHER THAN THE DELETED KEY.                   *
.* THUS IT IS POSSIBLE TO PROCESS ALL THE ADDRESS IN THE RPT IN       *
.* ASCENDING ORDER, AND DELETE EACH PAIR AFTER IT HAS BEEN PROCESSED, *
.* BY USING ISCAN TO INITIALIZE THE CURSOR, AND THEN FOLLOWING EACH   *
.* SCANR BY A DEL, WHICH DELETES EACH ENTRY AFTER IT HAS BEEN         *
.* PROCESSED.                                                         *
.* A SAMPLE PROGRAM TO DO THIS IS AS FOLLOWS:                         *
.*       ISCAN TREE  SET THE CURSOR TO THE INITIAL STATE.             *
.* MORE: SCANR TREE,DONE=END  SET THE CURSOR TO THE NEXT.             *
.*       PROCESS THE RECORD AT THE ADDRESS IN REGISTER 15.            *
.*       DEL TREE,LV=80  DELETE THE CURSOR-SELECTED KEY-ADDRESS PAIR  *
.*                        FROM THE RADIX PARTITION TREE, AND RELEASE  *
.*                        THE 80-BYTE RECORD AREA TO THE SYSTEM VIA   *
.*                        THE FSPACE MACRO-INSTRUCTION.               *
.*       BNM MORE  BRANCH BACK TO SCAN MORE IF THERE IS STILL AT LEAST*
.*                        ONE ENTRY.                                  *
.**********************************************************************
         GBLC  &IGABLST  THE OFFSET INTO THE TREE HEADER FOR THE LIST  *
                         OF RPT ENTRY POINTS.
         GBLC  &IGADEL   INDEX OF THE ADDRESS OF THE DELETE ROUTINE    *
                         ADDRESS IN THE LIST OF ENTRY POINTS IN THE    *
                         TREE HEADER.
         GBLC  &IGADDR   THE ADDRESS OF THE MODULE IGARPTXX.
         GBLC  &IGARPT#  THE TYPE OF THE RADIX PARTITION TREE FROM ONE *
               OF THE PARAMETERS T OR TYPE.
         LCLC  &R,&Q
.*A000000                                                        Y02147
.**********************************************************************
         AIF   (K'&RECL EQ 0).NEW  SEE IF THE OLD PARAMETER RECL IS    *
                         CODED INSTEAD OF LV.
&TAG     DEL   &TREE,T=&T,TYPE=&TYPE,LV=&RECL,S=&S,SP=&SP
         AGO   .FIN
.NEW     ANOP
      RPTDSECT T=5,DS=NO
      RPTDSECT T=8,DS=NO
.**********************************************************************
&R       SETC  'R'
         AIF   (K'&TREE EQ K'&TREE(1)+2 AND N'&TREE EQ 1).LW2
&R       SETC  ' '
.LW2     AIF   ('&TREE' NE '(1)').LW3  SEE IF THE TREE ADDRESS IS      *
                         ALREADY IN R1.
         AIF   (K'&TAG EQ 0).LW4  SEE IF THERE IS NO TAG.
&TAG     EQU   *
         AGO   .LW4      SKIP THE LR INSTRUCTION.
.LW3     ANOP
&TAG     L&R   1,&TREE(1)
.LW4     ANOP
         L     15,(&IGABLST+&IGADEL)(,1)  ADDRESS OF THE DELETE ROUTINE
         BALR  14,15           LINK TO THE DELETE ROUTINE.
         AIF   (K'&LV EQ 0).FIN  SEE IF A LENGTH VALUE IS GIVEN.
         AIF   ('&LV' EQ '0').FIN  SEE IF THE LENGTH IS ZERO.
        FSPACE R,A=(15),S=&S,SP=&SP,LV=&LV  FREE THE RECORD AREA.
         SPM   14        RESTORE CONDITION CODE.
FIN&SYSNDX EQU *
.FIN     ANOP
         MEND
