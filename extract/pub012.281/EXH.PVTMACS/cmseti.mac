***********************************************************************
*                                                                     *
*01* MACRO-NAME = CMSETI                                              *
*                                                                     *
*01* DESCRIPTIVE-NAME = CROSS MEMORY SET INLINE                       *
*                                                                     *
*01* COPYRIGHT = 5740-XYN COPYRIGHT IBM CORP. 1980,                   *
*                LICENSED MATERIAL PROGRAM, PROPERTY OF IBM,          *
*                REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER          *
*                G120-2083.                                           *
*                                                                     *
*01* STATUS = OS/VS2 JBB1226                                          *
*                                                                     *
*01* FUNCTION = TO ESTABLISH ADDRESSABILTY TO A SPECIFIED ADDRESS     *
*               SPACE AND TO RETURN TO THE ORIGINAL ADDRESS SPACE.    *
*               CMSETI SUPPORTS THE FOLLOWING CMSET OPTIONS INLINE:   *
*                             SET                                     *
*                             RESET,CHKAUTH=YES                       *
*                             RESET,CHKAUTH=NO                        *
*               THE OPERANDS HAVE THE SAME FORMAT AS THE CMSET MACRO. *
*                                                                     *
*01* NOTES = PROGRAMS USING CMSETI MUST INCLUDE THE IHAASCB, IHAPSA,  *
*            AND IHASVT MAPPING MACROS.                               *
*                                                                     *
*01* MODULE-TYPE = MACRO                                              *
*                                                                     *
*02* PROCESSOR = ASSEMBLER                                            *
*                                                                     *
*02* MACRO SIZE = 100 LOC                                             *
*                                                                     *
*01* MACROS = CMSET, IHBERMAC, LASP                                   *
*                                                                     *
*01* CHANGE-ACTIVITY = @G38DPXT - CROSS MEMORY SUPPORT                *
*                      @ZMB0551                                       *
*                                                                     *
*01* MNOTES = SEE THE MNOTES SECTION OF THE MACRO FOR LIST            *
*              OF MNOTES ISSUED                                       *
*                                                                     *
***********************************************************************
* A-000000-999999                                              @G38DPXT
*
         MACRO
&LABEL   CMSETI &REQUEST,&ASCB=,&XMSAVE=,&CHKAUTH=,&CHKICMA=YES,       X
               &RELATED=
.*
.*
*        MACDATE = 06/03/80
.*
         LCLC  &LABEL1,&LABEL2
&LABEL1  SETC  'IHB&SYSNDX.A'
&LABEL2  SETC  'IHB&SYSNDX.B'
.*
         AIF   (T'&LABEL EQ 'O').NOLABEL   CHECK IF A LABEL WAS
.*                                     GIVEN, IF YES GENERATE LABEL
&LABEL   DS    0H                      .BRANCH LABEL
.*
.NOLABEL ANOP
.*
         AIF   (T'&REQUEST EQ 'O').MNNREQ   IF REQUEST NOT SPECIFIED
.*                                     THEN ISSUE MNOTE AND EXIT
         AIF   (N'&SYSLIST GT 1).MNEXTRA   IF MORE THAN ONE POSITIONAL
.*                                     PARAMETER SPECIFIED THEN ISSUE
.*                                     MNOTE AND EXIT
         AIF   ('&REQUEST' EQ 'SET').SET   IF REQUEST IS 'SET' GO TO
.*                                     SET SECTION OF MACRO
         AIF   ('&REQUEST' EQ 'RESET').RESET   IF REQUEST IS 'RESET'
.*                                     GO TO RESET SECTION OF MACRO
         AGO   .MNINVR                 REQUEST NOT VALID, GO ISSUE
.*                                     MNOTE AND EXIT
.*
.**********************************************************************
.*                                                                    *
.*   SET:  THIS SECTION OF THE MACRO PERFORMS THE VALIDITY CHECKING   *
.*       AND CODE GENERATION FOR THE 'SET' OPTION                     *
.*                                                                    *
.**********************************************************************
.*
.SET     ANOP
         AIF   (T'&ASCB EQ 'O').MNNASCB ASCB KEYWORD REQUIRED ON SET,
.*                                     ISSUE MNOTE AND EXIT
         AIF   (T'&CHKAUTH NE 'O').MNAUTHI  IF CHKAUTH IS SPECIFIED,
.*                                     ISSUE MNOTE AND EXIT
         AIF   ('&ASCB'(1,1) EQ '(').SETAREG   IF FIRST CHARACTER OF
.*                                     ASCB OPERAND IS AN OPEN PAREN
.*                                     THEN ASCB ADDRESS IS ALREADY
.*                                     IN A REGISTER, BRANCH TO HANDLE
         L     1,&ASCB                 .LOAD ASCB ADDRESS INTO R1
         AGO   .SETXMCK                GO CHECK XMSAVE OPERAND
.*
.SETAREG ANOP                          ASCB ADDRESS IS IN A REGISTER
         AIF   (N'&ASCB NE 1).MNASCBI  IF NUMBER OF ELEMENTS IN ASCB
.*                                     SUBLIST IS NOT ONE, ISSUE AN
.*                                     MNOTE AND EXIT
         AIF   ('&ASCB(1)' EQ '1').SETXMCK  IF ASCB ADDRESS IS ALREADY
.*                                     IN R1 THEN GO CHECK XMSAVE
         LR    1,&ASCB(1)              .LOAD ASCB ADDRESS INTO R1
.*
.SETXMCK ANOP
         AIF   (T'&XMSAVE EQ 'O').SETCODE  IF NO XMSAVE OPERAND, GO
.*                                     GENERATE LINKAGE CODE
         AIF   ('&XMSAVE'(1,1) EQ '(').SETXREG  IF FIRST CHARACTER OF
.*                                     XMSAVE OPERAND IS AN OPEN PAREN,
.*                                     BRANCH TO HANDLE
         LA    0,&XMSAVE               .GET XMSAVE ADDRESS IN R0
         AGO   .SETCODE                GO GENERATE LINKAGE CODE
.*
.SETXREG ANOP
         AIF   (N'&XMSAVE NE 1).MNSAVI IF NUMBER OF ELEMENTS IN XMSAVE
.*                                     SUBLIST IS NOT ONE, ISSUE AN
.*                                     MNOTE AND EXIT
         AIF   ('&XMSAVE(1)' EQ '0').SETCODE   IF XMSAVE ADDRESS IS IN
.*                                     R0, GO GENERATE LINKAGE CODE
         LR    0,&XMSAVE(1)            .LOAD XMSAVE ADDRESS IN R0
.*
.SETCODE ANOP
.**********************************************************************
         TM    PSAXMFB1-PSA(0),X'20'   .HARDWARE FEATURE?
         BNZ   &LABEL2                 .NO, GO CALL SERVICE ROUTINE
.**********************************************************************
.*
         AIF   (T'&XMSAVE EQ 'O').SETNXMS  IF XMSAVE IS NOT SPECIFIED,
.*                                     DO NOT SAVE CR3 AND CR4
         LR    15,0                    .GET XMSAVE ADDRESS FROM R0
         STCTL 3,4,0(15)               .SAVE CURRENT CR3 AND CR4
.SETNXMS ANOP
.*
         LH    15,ASCBASID-ASCB(,1)    .GET ASID FROM INPUT ASCB
         ST    15,PSASLSA-PSA(0,0)     .CREATE CR3 IMAGE IN PSA
         ST    15,PSASLSA-PSA+4(0,0)   .CREATE CR4 IMAGE IN PSA
         SLR   15,15                   .SET RETURN CODE IN R15 @ZMB0551
*        LASP  PSASLSA-PSA(0),B'100'   .LOAD XM CONTROL REGISTERS
         LASP  PSASLSA-PSA(0),B'100'   .LOAD XM CONTROL REGISTERS
         BZ    &LABEL1                 .CONTROL REGISTERS LOADED?
.**********************************************************************
&LABEL2  DS    0H
.**********************************************************************
         AIF   (T'&XMSAVE NE 'O').SETXMS IF XMSAVE OPERAND SPECIFIED,
.*                                     GO ISSUE XMSAVE CMSET MACRO
*        CMSET SET,ASCB=(1),CHKICMA=&CHKICMA
         CMSET SET,ASCB=(1),CHKICMA=&CHKICMA
         AGO   .SETLABL                GO GENERATE ENDING LABEL
.SETXMS  ANOP
*        CMSET SET,ASCB=(1),CHKICMA=&CHKICMA,XMSAVE=(0)
         CMSET SET,ASCB=(1),CHKICMA=&CHKICMA,XMSAVE=(0)
.SETLABL ANOP
&LABEL1  DS    0H
         MEXIT                         EXIT FROM MACRO
.*
.**********************************************************************
.*                                                                    *
.*   RESET:  THIS SECTION OF THE MACRO PERFORMS THE VALIDITY CHECKING *
.*       AND CODE GENERATION FOR THE 'RESET' OPTION                   *
.*                                                                    *
.**********************************************************************
.*
.RESET   ANOP
         AIF   (T'&XMSAVE EQ 'O').MNNXSAV   IF XMSAVE NOT SPECIFIED
.*                                     ISSUE MNOTE AND EXIT
         AIF   (T'&ASCB NE 'O').MNASCB   IF ASCB SPECIFIED ISSUE MNOTE
         AIF   (T'&CHKAUTH EQ 'O').MNNAUTH IF CHKAUTH IS NOT SPECIFIED
.*                                     THEN ISSUE MNOTE AND EXIT
         AIF   ('&CHKAUTH' NE 'YES' AND '&CHKAUTH' NE 'NO').MNAUTH
.*                                     IF CHKAUTH IS NOT 'YES' OR 'NO'
.*                                     THEN ISSUE MNOTE AND EXIT
.*
         AIF   ('&XMSAVE'(1,1) EQ '(').RERSAV   IF SAVE AREA ADDRESS
.*                                     ALREADY IN A REGISTER BRANCH
         LA    1,&XMSAVE               .GET XMSAVE ADDRESS IN R1
         AGO   .RECODE
.RERSAV  ANOP
         AIF   (N'&XMSAVE NE 1).MNSAVI IF NUMBER OF ELEMENTS IN
.*                                     XMSAVE SUBLIST IS NOT ONE THEN
.*                                     ISSUE MNOTE AND EXIT
         AIF   ('&XMSAVE(1)' EQ '1').RECODE    IF SAVE AREA ADDRESS
.*                                     ALREADY IN R1 THEN BRANCH
         LR    1,&XMSAVE(1)            .GET XMSAVE ADDRESS IN R1
.*
.RECODE  ANOP
.**********************************************************************
         TM    PSAXMFB1-PSA(0),X'20'   .HARDWARE FEATURE?
         BNZ   &LABEL2                 .NO, GO CALL SERVICE ROUTINE
.**********************************************************************
         AIF   ('&CHKAUTH' EQ 'NO').RENAUTH   IF NO AUTHORIZATION TEST
.*                                     THEN BRANCH
*        LASP  0(1),B'100'             .LOAD XM CONTROL REGISTERS
         LASP  0(1),B'100'             .LOAD XM CONTROL REGISTERS
         AGO   .RECRCHK
.RENAUTH ANOP
*        LASP  0(1),B'011'             .LOAD XM CONTROL REGISTERS
         LASP  0(1),B'011'             .LOAD XM CONTROL REGISTERS
.RECRCHK ANOP
         BZ    &LABEL1                 .CONTROL REGISTERS LOADED?
.**********************************************************************
&LABEL2  DS    0H
.**********************************************************************
*        CMSET RESET,XMSAVE=(1),CHKAUTH=&CHKAUTH
         CMSET RESET,XMSAVE=(1),CHKAUTH=&CHKAUTH
&LABEL1  DS    0H
         MEXIT
.*
.**********************************************************************
.*                                                                    *
.*    THIS SECTION OF THE MACRO ISSUES ALL THE MNOTES USED IN         *
.*       BY MACRO.                                                    *
.*                                                                    *
.**********************************************************************
.*
.*
.MNASCB  ANOP
.*  IHB280 ASCB INVALID WITH RESET
         IHBERMAC 1020,ASCB,&REQUEST
         MEXIT
.*
.MNASCBI ANOP
.*  IHB249 INVALID ASCB PARAMETER SPECIFIED
         IHBERMAC 1014,ASCB
         MEXIT
.*
.MNAUTH  ANOP
.*  IHB002 INVALID CHKAUTH OPERAND SPECIFIED - XXX
         IHBERMAC 1001,CHKAUTH,&CHKAUTH
         MEXIT
.*
.MNAUTHI ANOP
.*  IHB280 CHKAUTH INVALID WITH SET
         IHBERMAC 1020,CHKAUTH,&REQUEST
         MEXIT
.*
.MNEXTRA ANOP
.*  IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED
         IHBERMAC 238
         MEXIT
.*
.MNINVR  ANOP
.*  IHB002 INVALID REQUEST OPERAND SPECIFIED - XXX
         IHBERMAC 1001,REQUEST,&REQUEST
         MEXIT
.*
.MNNASCB ANOP
.*  IHB246 SET OPERAND SPECIFIED WITHOUT ASCB OPERAND
         IHBERMAC 1010,&REQUEST,ASCB
         MEXIT
.MNNAUTH ANOP
.*  IHB001 CHKAUTH OPERAND REQUIRED, NOT SPECIFIED
         IHBERMAC 1006,CHKAUTH
         MEXIT
.*
.MNNREQ  ANOP
.*  IHB001 REQUEST OPERAND REQUIRED, NOT SPECIFIED
         IHBERMAC 1006,REQUEST
         MEXIT
.*
.MNNXSAV ANOP
.*  IHB246 RESET OPERAND SPECIFIED WITHOUT XMSAVE OPERAND
         IHBERMAC 1010,&REQUEST,XMSAVE
         MEXIT
.*
.MNSAVI  ANOP
.*  IHB249 INVALID XMSAVE PARAMETER SPECIFIED
         IHBERMAC 1014,XMSAVE
         MEXIT
         MEND
