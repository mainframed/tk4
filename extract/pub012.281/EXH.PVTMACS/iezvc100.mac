*%GOTO VC100PRO;  /*
         MACRO
         IEZVC100 &DSECT=YES
         SPACE 1  */
*%VC100PRO: ;
*/********************************************************************/
*/*                                                                  */
*/*                         IEZVC100                                 */
*/*                                                                  */
*/* COPYRIGHT  -                                                 @L1C*/
*/*               5740-XYN COPYRIGHT IBM CORP 1979, 1981,            */
*/*               LICENSED MATERIAL-PROGRAM, PROPERTY OF IBM,        */
*/*               REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER        */
*/*               G120-2083.                                         */
*/*                                                                  */
*/* STATUS     -  OS/VS2 JBB1326                                 @L1C*/
*/*               11/07/80    LEVEL=3                            @L1C*/
*/*                                                                  */
*/* INVOCATION -                                                     */
*/*          BAL  - SPECIFY: IEZVC100                                */
*/*                 UNLESS A DSECT IS NOT WANTED. IN THAT CASE       */
*/*                 SPECIFY: IEZVC100 DSECT=NO                       */
*/*          PL/S - SPECIFY: %INCLUDE SYSLIB(IEZVC100)               */
*/*                 IF IT IS DESIRED THAT THE MAPPING BE BASED ON    */
*/*                 A POINTER, DEFINE A MACRO CHARACTER VARIABLE     */
*/*                 VC100BAS AND SET IT TO BE THE NAME OF THE        */
*/*                 POINTER TO USE.                                  */
*/*                   EX. %DCL VC100BAS CHAR                         */
*/*                       % VC100BAS = 'VC100PTR'                    */
*/*                                                                  */
*/*                 IF THE MAPPING IS NOT TO BE BASED AT ALL, DEFINE */
*/*                 A MACRO CHARACTER VARIABLE VC100BAS AND SET IT   */
*/*                 TO 'NONE'.                                       */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*          THIS MACRO MAPS THE PARAMETER LIST FOR THE COMM TASK    */
*/*          COMMAND QUEUER MODULE IEAVC700.                         */
*/*                                                                  */
*/* CHANGE ACTIVITY -                                                */
*/*          G741PSS - NEW FOR THIS SUPPORT                  @G741PSS*/
*/*          G81LPSS - NO CODE CHANGES                       @G81LPSS*/
*/* $L1=XMCTASK,  JBB1326,  801107,  L1SJ: ADD TOKEN SUPPORT     @L1A*/
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
* %GOTO VC100PLS;        %/*
         SPACE 1
         IEZBITS ,       SYMBOLIC BIT DEFINITIONS
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').VC100B1
C100PARM DSECT           IEAVC700 PARM LIST
         AGO   .VC100B2
.VC100B1 ANOP
         DS    0F
C100PARM EQU   *         IEAVC700 PARM LIST
.VC100B2 ANOP
C100FLGS DS    0F        COMMAND FLAGS
         SPACE 1
C100FLGA DS    0H        PART 1 OF COMMAND FLAGS
C100FLG1 DS    XL1       1ST FLAG BYTE
C100F11  EQU   BIT0      RESERVED
C100F12  EQU   BIT1      RESERVED
C100F13  EQU   BIT2      RESERVED
C100F14  EQU   BIT3      COMMAND SHOULD NOT BE HARDCOPIED
C100F15  EQU   BIT4      INPUT TOKEN IS PRESENT                    @L1C
C100F16  EQU   BIT5      RESERVED
C100F17  EQU   BIT6      RESERVED
C100F18  EQU   BIT7      RESERVED
         SPACE 1
C100FLG2 DS    XL1       2ND FLAG BYTE - RESERVED
C100FLGB DS    0H        PART 2 OF COMMAND FLAGS
C100FLG3 DS    XL1       3RD FLAG BYTE
C100F31  EQU   BIT0      QUEUE CMD TO BE ISSUED
C100F32  EQU   BIT1      DELETE CMD BUFFER
C100F33  EQU   BIT2      RESERVED
C100F34  EQU   BIT3      RESERVED
C100F35  EQU   BIT4      RESERVED
C100F36  EQU   BIT5      RESERVED
C100F37  EQU   BIT6      RESERVED
C100F38  EQU   BIT7      RESERVED
         SPACE 1
C100FLG4 DS    XL1       4TH FLAG BYTE - RESERVED
C100SRC  DS    F         CONTENTS OF REGISTER 0 WHEN THE CMD IS        X
                         RE-ISSUED (SOURCE CONSOLE ID)
C100BUFP DS    A         PTR TO LENGTH OF CMD AND CMD TEXT
C100DELE DS    A         PTR TO BUFFER TO DELETE
C100TOKN DS    CL4       INPUT TOKEN                               @L1A
C100SIZE EQU   *-C100PARM LENGTH OF PARAMETER LIST
         SPACE 2
***********************************************************************
*                                                                     *
*        MAPPING OF COMMAND TEXT FOR IEAVC700                         *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').VC100B3
C100CMD  DSECT           CMD TEXT FOR IEAVC700
         AGO   .VC100B4
.VC100B3 ANOP
         DS    0F
C100CMD  EQU   *         CMD TEXT FOR IEAVC700
.VC100B4 ANOP
C100CHED DS    0CL4      TEXT HEADER
C100CLEN DS    H         LENGTH OF TEXT + HEADER
C100CRSV DS    H         RESERVED
         SPACE 1
C100CTXT DS    CL126     CMD TEXT. MAX OF 126 CHARS
C100CTKN DS    CL4       INPUT TOKEN                               @L1A
C100CSZE EQU   *-C100CMD LENGTH OF COMMAND TEXT MAPPING
         MEND            */;
*%VC100PLS: ;
*%IF VC100BAS ^= 'NONE' %THEN %GOTO VC100P1;
* DCL 1 C100PARM          BDY(WORD),/* IEAVC700 PARM LIST            */
*%GOTO VC100P3;
*%VC100P1: ;
*%IF VC100BAS ^= '' %THEN %GOTO VC100P2;
* DCL 1 C100PARM          BDY(WORD) BASED,/* IEAVC700 PARM LIST      */
*%GOTO VC100P3;
*%VC100P2: ;
* DCL 1 C100PARM       BDY(WORD) BASED(VC100BAS),/* IEAVC700 PARM
*                                       LIST                         */
*%VC100P3: ;
*       3 C100FLGS      FIXED(32),  /* COMMAND FLAGS                 */
*         5 C100FLGA    FIXED(16),  /* PART 1 OF COMMAND FLAGS       */
*           7 C100FLG1  BIT(8),     /* 1ST FLAG BYTE                 */
*             9 C100F11 BIT(1),     /* RESERVED                      */
*             9 C100F12 BIT(1),     /* RESERVED                      */
*             9 C100F13 BIT(1),     /* RESERVED                      */
*             9 C100F14 BIT(1),     /* COMMAND SHOULD NOT BE
*                                      HARDCOPIED                    */
*             9 C100F15 BIT(1),     /* INPUT TOKEN IS PRESENT    @L1C*/
*             9 C100F16 BIT(1),     /* RESERVED                      */
*             9 C100F17 BIT(1),     /* RESERVED                      */
*             9 C100F18 BIT(1),     /* RESERVED                      */
*           7 C100FLG2  BIT(8),     /* 2ND FLAG BYTE - RESERVED      */
*         5 C100FLGB    FIXED(16),  /* PART 2 OF COMMAND FLAGS       */
*           7 C100FLG3  BIT(8),     /* 3RD FLAG BYTE                 */
*             9 C100F31 BIT(1),     /* QUEUE CMD TO BE ISSUED        */
*             9 C100F32 BIT(1),     /* DELETE CMD BUFFER             */
*             9 C100F33 BIT(1),     /* RESERVED                      */
*             9 C100F34 BIT(1),     /* RESERVED                      */
*             9 C100F35 BIT(1),     /* RESERVED                      */
*             9 C100F36 BIT(1),     /* RESERVED                      */
*             9 C100F37 BIT(1),     /* RESERVED                      */
*             9 C100F38 BIT(1),     /* RESERVED                      */
*           7 C100FLG4  BIT(8),     /* 4TH FLAG BYTE - RESERVED      */
*       3 C100SRC       FIXED(31),  /* CONTENTS OF REGISTER 0 WHEN THE
*                                      CMD IS RE-ISSUED (SOURCE
*                                      CONSOLE ID)                   */
*       3 C100BUFP      PTR(31),    /* PTR TO LENGTH OF CMD AND CMD
*                                      TEXT                          */
*       3 C100DELE      PTR(31),    /* PTR TO BUFFER TO DELETE   @L1C*/
*       3 C100TOKN      CHAR(4);    /* INPUT TOKEN               @L1A*/
*@SPACE(2);
*/********************************************************************/
*/*                                                                  */
*/*      MAPPING OF COMMAND TEXT FOR IEAVC700                        */
*/*                                                                  */
*/********************************************************************/
*%IF VC100BAS ^= 'NONE' %THEN %GOTO VC100P5;
* DCL 1 C100CMD    BDY(WORD),       /* CMD TEXT FOR IEAVC700         */
*%GOTO VC100P6;
*%VC100P5: ;
* DCL 1 C100CMD    BDY(WORD) BASED(C100BUFP),/* CMD TEXT FOR IEAVC700
*                                                                    */
*%VC100P6: ;
*       3 C100CHED,                 /* TEXT HEADER                   */
*         5 C100CLEN FIXED(15),     /* LENGTH OF TEXT + HEADER       */
*         5 C100CRSV FIXED(15),     /* RESERVED                      */
*       3 C100CTXT CHAR(126),       /* CMD TEXT MAX OF 126 CHARS @L1C*/
*       3 C100CTKN CHAR(4);         /* INPUT TOKEN               @L1A*/
