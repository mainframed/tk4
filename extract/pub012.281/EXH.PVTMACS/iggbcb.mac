*%;/*
         MACRO
         IGGBCB    &TYPE=BOTH
.* /* START OF SPECIFICATIONS ****
.*
.*01  MODULE-NAME = IGGBCB
.*
.*01  COPYRIGHT = NONE
.*
.*01  STATUS = CHANGE LEVEL 01
.*
.*01  DESCRIPTIVE-NAME = BUFFER CONTROL BLOCK FORMAT
.*
.*01  FUNCTION = FORMATS THE SAM/DAM BUFFER CONTROL BLOCKS AND LRI
.*
.*01  NOTES = NONE
.*
.*02    DEPENDENCIES = NA
.*
.*02    PERFORMANCE = NA
.*
.*02    RESTRICTIONS = NA
.*
.*02    REGISTER-CONVENTIONS = NA
.*
.*02    PATCH-LABEL = NA
.*
.*01  MODULE-TYPE = MACRO
.*
.*02  MACRO-SIZE =  NA
.*
.*02  EXTERNAL-REFERENCES = NA
.*
.*01INNER-MACROS = NONE
.*
.*01SYSTEM-MACROS = NONE
.*
.*01  CHANGE-ACTIVITY = SEE BELOW
.*
.*             VS2 RELEASE 2
.*
.**** END OF SPECIFICATIONS ***/
*/* MACCOMP Y-2 SC1D7/SJD48                                          */
*/* MACSTAT Y-2 73122/021160                                         */
*/********************************************************************/
*/*THE BUFFER POOL CONTROL BLOCK DSECTS APPLY TO BOTH SAM AND BDAM   */
*/*PROCESSING. TO GET THE MACRO EXPANSION FOR SAM DSECTS ONLY,INCLUDE*/
*/*KEYWORDS 'TYPE=SAM' WITH THE MACRO CALL. IF THE  MACRO EXPANSION  */
*/*FOR BDAM IS REQUIRED, INCLUDE KEYWORDS 'TYPE=DAM' WITH THE MACRO. */
*/*FOR BOTH SETS OF DSECTS INCLUDE THE KEYWORDS 'TYPE=BOTH' WITH THE */
*/*MACRO CALL. WHEN THE KEYWORDS ARE UNSPECIFIED,DEFAULT IS 'BOTH'.  */
*/*THE BDAM EXPANSION OF THE MACRO PROVIDES DSECTS FOR A) BCB WHEN   */
*/*ADDRESS SPACE = REAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED,    */
*/*B) BCB WHEN ADDRESS SPACE = VIRTUAL AND DYNAMIC BUFFERING HAS     */
*/*BEEN SPECIFIED, AND C) BCB FOR VARIABLE SPANNED RECORDS WHEN      */
*/*DYNAMIC BUFFERING WAS NOT SPECIFIED.  THE SAM EXPANSION OF THE    */
*/*MACRO PROVIDES A DSECT FOR THE STANDARD BCB AND THE USERS         */
*/*LOGICAL RECORD INTERFACE AREA. THE PLS2 MACRO FORMATS A COMPLETE  */
*/*SAM BCB AND LRI AND COMPLETE BDAM BCBS.                           */
*/********************************************************************/
*%GOTO BCBPLS1;                         /*                     Y02072*/
         AIF   ('&TYPE' EQ 'DAM').DAM
*/********************************************************************/
*/*THE FOLLOWING DSECT IS USED FOR SAM DATA SETS. THE DSECT IS FOR   */
*/*MAPPING TO A BUFFER POOL CONTROL BLOCK.                           */
*/********************************************************************/
BCBLK    DSECT
BCBBUFPT DS    0A                       SAME AS BCBBUFAD BELOW
         DS    X                        FILLER
BCBBUFAD DS    AL3                      ADDRESS OF FIRST BUFFER
BCBFLGS  DS    B                        FLAG BYTE
BCBLRI   EQU   X'80'                    LOG REC INTERFACE PRESENT
BCBEXTND EQU   X'40'                    BUFCB EXTENDED AREA PRESENT
BCBBUFNO DS    X                        NUMBER OF BUFFERS
BCBBUFSZ DS    H                        SIZE OF EACH BUFFER
BCBLRIAR DS    0A                       SAME AS BCBLRIAD BELOW
         DS    X                        FILLER
BCBLRIAD DS    AL3                      ADDRESS OF LOG REC AREA
BCBPAD   DS    F                        PADDING FOR DBL WD ALLIGN
BCBNLN   EQU   8                        LENGTH OF NORMFAL BCB
BCBEXLN  EQU   8                        ADD TO GET TOTAL LENGTH IF
*                                       BCB EXTENDED
*
* DSECT FOR REFERENCING USERS LOGICAL RECORD INTERFACE AREA IF PRESENT.
* THE DSECT IS USED ONLY FOR SAM DATA SETS.
*
LRIAREA  DSECT
LRILOC   DS    0D                       LOCATION OF LRI AREA
LRILGTH  DS    0A                       SAME AS LRILNGTH BELOW
LRIFLG1  DS    B                        FLAGS
LRIEOD   EQU   X'80'                    END OF DATA REACHED
LRICOB   EQU   X'40'                    COBOL DATA SET
LRIEOB   EQU   X'20'                    EOD AFTER FIRST END OF BLK
LRILNGTH DS    AL3                      LENGTH OF LRI AREA (LRECL + 32)
LRIFLAG2 DS    B                        FLAGS
LRIRELSE EQU   X'40'                    RELEASE HAS BEEN ISSUED
LRISEG   EQU   X'10'                    SEGMENTING IN PROGRESS
LRINTSPN EQU   X'04'                    NON-SPANNED RECORD
LRIASSEM EQU   X'01'                    ASSEMBLING IN PROGRESS
LRIINDEX DS    X                        INDEX TO BEGINNING OF DATA
LRIPOS   DS    H                        POSITION OF RECORD IN BLOCK
LRITRKAD DS    0D                       TRACK ADDRESS OF BEGINNING
*                                         SEGMENT OF RECORD
LRIMBBCC DS    XL5                      MBBCC OF TRACK ADDR (NOT USED
*                                         IF DCB IS FOR OUTPUT)
LRIRECAD DS    XL3                      RECAD WHEN RECORD TO BE WRITTEN
*                                         REQUIRES SEGMENTATION
LRINIOB  DS    0A                       SAME AS LRINXIOB BELOW
         DS    X                        FILLER
LRINXIOB DS    AL3                      NEXT IOB ADDRESS
LRICOUNT DS    XL2                      COUNT FIELD OF NUMBER OF BYTES
*                                         MOVED
         DS    XL2                      FILLER
LRIALIGN DS    0XL8                     FLOATING ALIGNMENT AREA
LRIDATA  DS    0C                       DATA
*
* THE FOLLOWING DSECT IS FOR REFRENCING A BUFFER.
*
BUFFER   DSECT                          BEGINNING OF BUFFER
BUFNXPTA DS    0F                       SAME AS BUFNXPTB BELOW
         DS    XL1                      FILLER
BUFNXPTB DS    XL3                      ADDR OF NEXT BUFFER OR 0 IF
*                                         LAST BUFFER. (THIS FIELD
*                                         IS PART OF BUFFER AND THUS
*                                         GETS DESTROYED BY RECORDS)
BUFER    DS    C                        FIRST BYTE OF BUFFER AFTER
*                                         POINTER TO NEXT
.DAM     AIF   ('&TYPE' EQ 'SAM').MEND
*/********************************************************************/
*/*THE FOLLOWING DSECT FORMATS A BDAM BUFFER POOL CONTROL BLOCK WHEN */
*/*ADDRESS SPACE = REAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED AS  */
*/*OPTION IN THE DCB.                                                */
*/********************************************************************/
BCBDEFR  DSECT                          BCB FOR BDAM ADDRSPAC=REAL
BCBIOBS  DS    0CL8                     IOB QUEUE PTRS--INITIALLY 0
BCBFRQT  DS    A                        ADDRESS OF FIRST IOB WAITING
*                                       FOR A BUFFER
BCBFRQB  DS    A                        ADDRESS OF LAST IOB WAITING
*                                       FOR A BUFFER
BCBNABFR DS    A                        ADDRESS OF THE NEXT AVAILABLE
*                                       BUFFER
BCBTBRS  DS    F                        SIZE OF BCB AND BUFFER POOL
*                                       IN BYTES
BCBLENTH EQU   *-BCBDEFR                SIZE OF BCB FOR REAL ADDRSPACE
*/********************************************************************/
*/*THE FOLLOWING DSECT FORMATS A BDAM BUFFER POOL CONTROL BLOCK WHEN */
*/*ADDRESS SPACE = VIRTUAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED  */
*/*AS OPTION IN THE DCB.                                             */
*/********************************************************************/
BCBDEFV  DSECT                          BCB FOR BDAM ADDRSPACE=VIRTUAL
BCBBUF1  DS    A                        ADDRESS OF FIRST BUFFER IN POOL
BCBBUFL  DS    F                        LENGTH OF EACH BUFFER, IN BYTES
BCBBFAVL DS    FL1                      BUFFER NUMBER OF FIRST AVAIL-
*                                       ABLE BUFFER
BCBRAOFS DS    FL3                      OFFSET OF RECORD AREA IN BUFFER
*                                       (VARIABLE SPANNED ONLY)
BCBTBRS1 DS    F                        SIZE OF BCB (+ SUFFIX) BUFFER
*                                       POOL, AND 1ST UNSCHEDULED LIST
BCBSUFFX DS    0F                       BUFFER SUFFIX, 1 BYTE/BUFFER,
*                                       USED AS AVAILABLE CHAIN
BCBLNTHV EQU   *-BCBDEFV                SIZE OF BCB FOR VIRTUAL ADDRSP
*/********************************************************************/
*/*THE FOLLOWING DSECT FORMATS A BDAM BUFFER POOL CONTROL BLOCK WHEN */
*/*VARIABLE SPANNED RECORDS WAS SPECIFIED AND DYNAMIC BUFFERING WAS  */
*/*NOT SPECIFIED.  ITS ADDRESS IS STORED IN DCBDYNB.                 */
*/********************************************************************/
BCBDEFS  DSECT                          BCB FOR SPANNED,NO DYN BUF
BCBNXBUF DS    F                        ADDRESS OF NEXT AVAILABLE
*                                       BUFFER (SEGMENT WORKAREA)
BCBFLAG  EQU   BCBNXBUF                 FLAG INDICATING IF THIS
*                                       BUFFER (SWA) IS IN USE
BUFINUSE EQU   X'FF'                    BUFFER (SWA) IS BEING USED
BUFAVAIL EQU   X'00'                    BUFFER (SWA) IS AVAILABLE
BCBBFNUM DS    H                        NUMBER OF BUFFERS (SWA)
BCBBFLG  DS    H                        BUFFER LENGTH
BCBLNTHS EQU   *-BCBDEFS                LENGTH OF THIS BUFFER CNTRL BLK
.MEND    MEND
*%BCBPLS1: ;                            /*                     Y02072*/
*/*                                                            Y02072*/
*/*THE FOLLOWING STRUCTURE IS USED FOR SAM DATA SETS. THE      Y02072*/
*/*STRUCTURE IS USED FOR MAPPING TO A BUFFER POOL CONTROL BLK. Y02072*/
*/*                                                            Y02072*/
*DCL 1 BCBLK CHAR(16) BDY(WORD) BASED,  /*BCB FOR SAM          Y02072*/
*      2 BCBBUFPT PTR(31),              /*SAME AS BCBBUFAD     Y02072*/
*        3 * CHAR(1),                   /*FILLER               Y02072*/
*        3 BCBBUFAD PTR(24),            /*ADDR OF FIRST BUFFER Y02072*/
*      2 BCBFLGS BIT(8),                /*FLAG BYTE            Y02072*/
*        3 BCBLRI BIT(1),               /*LOG REC INTER PRES   Y02072*/
*        3 BCBEXTND BIT(1),             /*BUFCB EXTENDED AREA  Y02072
*                                           PRESENT            Y02072*/
*      2 BCBBUFNO CHAR(1),              /*NUMBER OF BUFFERS    Y02072*/
*      2 BCBBUFSZ CHAR(2),              /*SIZE OF EACH BUFFER  Y02072*/
*      2 BCBLRIAR PTR(31),              /*SAME AS BCBLRIAD     Y02072*/
*        3 * CHAR(1),                   /*FILLER               Y02072*/
*        3 BCBLRIAD PTR(24),            /*ADDR OF LOG REC AREA Y02072*/
*      2 BCBPAD CHAR(4);                /*PADD TO DBL WD LEN   Y02072*/
*DCL  BCBNLN CONSTANT (8);              /*LEN OF NORMAL BCB    Y02072*/
*DCL  BCBEXLN CONSTANT (8);             /*ADD TO GET TOTAL LEN Y02072
*                                           IF BCB EXTENDED    Y02072*/
*/*                                                            Y02072*/
*/*STRUCTURE FOR REFERENCING USER LOGICAL RECORD INTERFACE ARE Y02072*/
*/*IF PRESENT. THE STRUCTURE IS USED ONLY FOR SAM DATA SETS.   Y02072*/
*/*                                                            Y02072*/
*DCL 1 LRIAREA CHAR(24) BDY(DWORD) BASED,  /*LRI AREA          Y02072*/
*      2 LRILOC CHAR(8),                /*LOC OF LRI AREA      Y02072*/
*        3 LRILGTH CHAR(4),             /*SAME AS LRILNGTH     Y02072*/
*          4 LRIFLG1 BIT(8),            /*FLAG BYTE 1          Y02072*/
*            5 LRIEOD BIT(1),           /*END OF DATA REACHED  Y02072*/
*            5 LRICOD BIT(1),           /*COBOL DATA SET       Y02072*/
*            5 LRIEOB BIT(1),           /*EOB AFTER FIRST EOB  Y02072*/
*          4 LRILNGTH CHAR(3),          /*LEN OF LRI AREA      Y02072
*                                           (LRECL + 32)       Y02072*/
*        3 LRIFLG2 BIT(8),              /*FLAG BYTE 2          Y02072*/
*          4 * BIT(1),                  /*NOT USED             Y02072*/
*          4 LRIRELSE BIT(1),           /*RELE HAS BEEN ISSUED Y02072*/
*          4 * BIT(1),                  /*NOT USED             Y02072*/
*          4 LRISEG BIT(1),             /*SEGMENTING IN PROG   Y02072*/
*          4 * BIT(1),                  /*NOT USED             Y02072*/
*          4 LRINTSPN BIT(1),           /*NON-SPAN RECS        Y02072*/
*          4 * BIT(1),                  /*NOT USED             Y02072*/
*          4 LRIASSEM BIT(1),           /*ASSEMBLING IN PROG   Y02072*/
*        3 LRIINDEX CHAR(1),            /*INDEX TO BEG OF DATA Y02072*/
*        3 LRIPOS CHAR(2),              /*POS OF REC IN BLK    Y02072*/
*      2 LRITRKAD CHAR(8),              /*TRK ADDR OF BEG      Y02072
*                                           SEGMENT OF REC     Y02072*/
*        3 LRIMBBCC CHAR(5),            /*MBBCC OF TRK ADDR    Y02072
*                                           (NOT IF DCB IS     Y02072
*                                           FOR OUTPUT)        Y02072*/
*        3 LRIRECAD CHAR(3),            /*RECAD WHEN REC TO BE Y02072
*                                           WRITTEN REQUIRES   Y02072
*                                           SEGMENTATION       Y02072*/
*      2 LRINIOB PTR(31),               /*SAME AS LRINXIOB     Y02072*/
*        3 * CHAR(1),                   /*FILLER               Y02072*/
*        3 LRINXIOB PTR(24),            /*NEXT IOB ADDR        Y02072*/
*      2 LRICOUNT CHAR(2),              /*COUNT FIELD OF NUM OFY02072
*                                           BYTES MOVED        Y02072*/
*      2 * CHAR(2);                     /*NOT USED             Y02072*/
*/*                                                            Y02072*/
*/*STRUCTURE USED FOR REFERENCING THE USERS FLOATING ALIGNMENT Y02072*/
*/*AREA.                                                       Y02072*/
*/*                                                            Y02072*/
*DCL 1 LRIALIGN BDY(WORD) BASED,        /*FLOATING ALIGN AREA  Y02072*/
*      2 LRIDATA CHAR;                  /*DATA                 Y02072*/
*/*                                                                  */
*/*THE FOLLOWING STRUCTURES ARE USED FOR REFRENCING BUFFERS.         */
*/*                                                                  */
*DCL BUFFER CHAR(*) BDY(WORD) BASED;    /*BEGINNING OF BUFFER        */
*/*                                                                  */
*DCL 1 BUFNXPTA PTR(31) BDY(WORD) DEF(BUFFER),  /*NEXT BUFFER POINTER*/
*      2 * FIXED(8),                    /*FILLER                     */
*      2 BUFNXPTB PTR(24);              /*NEXT BUFFER POINTER. (VALID*/
*                                       /* ONLY UNTIL FIRST RECORD   */
*                                       /* IS MOVED INTO BUFFER).    */
*/*                                                                  */
*/*STRUCTURE FOR A BDAM BUFFER POOL CONTROL BLOCK WHEN ADDRESS       */
*/*SPACE = VIRTUAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED.         */
*/*                                                                  */
*DCL 1 BCBDEFV CHAR(16) BDY(WORD) BASED, /* BCB FOR ADDRSPACE=VIRTUAL*/
*      2 BCBBUF1 PTR(31),               /* ADDR OF FIRST BUFFER      */
*      2 BCBBUFL FIXED(31),             /* LENGTH OF EACH BUFFER     */
*      2 BCBBFAVL FIXED(8),             /* BUFF NO OF 1ST AVAIL BUF  */
*      2 BCBRAOFS FIXED(24),            /* OFFSET OF RECORD AREA     */
*      2 BCBTBRS1 FIXED(31);            /* SIZE OF BCB,SUFFX,BUF POOL*/
*/*                                                                  */
*/*STRUCTURE FOR A BDAM BUFFER POOL CONTROL BLOCK WHEN ADDRESS       */
*/*SPACE = REAL AND DYNAMIC BUFFERING HAS BEEN SPECIFIED.            */
*/*                                                                  */
*DCL 1 BCBDEFR CHAR(16) BDY(WORD) BASED,  /* BCB - BDAM REAL ADRSPACE*/
*      2 BCBIOBS CHAR(8) BDY(WORD),     /* IOB QUEUE PTR-1ST & LAST  */
*        3 BCBFRQT PTR(31),             /* 1ST IOB WAITING FOR BUFFER*/
*        3 BCBFRQB PTR(31),             /* LAST IOB WAITING FOR BUFR */
*      2 BCBNABFR PTR(31),              /* NEXT AVAILABLE BUF ADDRESS*/
*      2 BCBTBRS FIXED(31);             /* SIZE OF BCB & BUFFER POOL */
*/*                                                                  */
*/*STRUCTURE FOR A BDAM BUFFER POOL CONTROL BLOCK FOR VARIABLE       */
*/*SPANNED RECORDS (N0N-DYNAMIC BUFFERING). ADDRESS IS STORED IN     */
*/*DCBDYNB.                                                          */
*/*                                                                  */
*DCL 1 BCBDEFS CHAR(8) BASED,           /* BCB FOR SPANNED, NO DYNBUF*/
*      2 BCBNXBUF CHAR(4),              /* ADDR OF NEXT AVAIL BUFFER */
*      2 BCBBFNUM CHAR(2),              /* NUMBER OF BUFFERS         */
*      2 BCBBFLG CHAR(2);               /* BUFFER LENGTH             */
