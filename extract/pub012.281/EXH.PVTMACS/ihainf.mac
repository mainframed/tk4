*        %GOTO INFL1;        /*
         MACRO
         IHAINF , */
*%INFL1: ;
*/*      IHAINF - TYPE 1 MESSAGE TABLE ENTRY MAPPING                 */
*/*      RELEASE 2.0 VS2, 5/8/73, LEVEL=1                            */
*/*                                                                  */
*/*      THIS MAPS A SINGLE ENTRY OF THE TYPE 1 MESSAGE TABLE WHICH  */
*/*      IS USED AS A DROP AREA FOR INFORMATION ASSOCIATED WITH A    */
*/*      FAILURE IN A TYPE 1 SVC.  THE INFORMATION IN THE ENTRY IS   */
*/*      PUT OUT VIA WTP BY RTM.  THE ONLY USER OF THIS TABLE        */
*/*      CURRENTLY IS GETMAIN/FREEMAIN.                              */
*/*                                                                  */
*/*      THE COMPLETE TABLE CONSISTS OF A FOUR BYTE POINTER FOLLOWED */
*/*      BY A NUMBER OF ENTRIES.  THE POINTER POINTS TO THE BYTE     */
*/*      FOLLOWING THE END OF THE COMPLETE TABLE.                    */
*/*                                                                  */
*%GOTO INFL2; /*
INFOLIST DSECT , INFPTR -     INFORMATION LIST
INFASCB  DS    A -            ADDRESS ASCB                      @Y02702
INFOBODY DS    0CL32          MAIN BODY OF ENTRY                @Y02702
INFTCB   DS    A -            ADDRESS TCB
INFBADDR DS    A -            REGISTER 14 IF A BRANCH ENTRY
INFRCL   DS    BL1 -          REASON CODE AND COUNT OF VARIABLE DATA.
INFCL    EQU   X'E0' -        REASON CODE ON BITS 0-2.
INFVARCT EQU   X'1F' -        COUNT OF VARIABLE DATA IN BITS 3-7.
INFFLG   DS    BL1 -          FLAG BYTE
INFFLG0  EQU   X'80' -        WHEN 1, INDICATES BRANCH ENTRY
INFCC    DS    0H -           COMPLETION CODE
         DS    C
INFCCSVC DS    C -            SVC NUMBER
INFVAR   DS    4F -           VARIABLE INFORMATION
         ORG   INFVAR         ORG BACK FOR VARIABLE FIELDS
INFVAR1  DS    F -            VARIABLE WORD 1
INFVAR2  DS    F -            VARIABLE WORD 2
INFVAR3  DS    F -            VARIABLE WORD 3
INFVAR4  DS    F -            VARIABLE WORD 4
INFRSV01 DS    H              RESERVED FOR EXPANSION            @Y02702
INFRSV02 DS    H              RESERVED FOR EXPANSION            @Y02702
INFEND   DS    0C -           END OF INFOLIST
INFLEN   EQU   INFEND-INFOLIST - LENGTH OF INFOLIST
         MEND  , */
*%INFL2 :  ;
*DECLARE
*  1 INFOLIST BASED(INFOPTR), /* INFORMATION LIST                    */
*   2 INFASCB PTR(31),        /* ADDRESS ASCB                 @Y02702*/
*   2 INFOBODY,               /* MAIN BODY OF ENTRY           @Y02702*/
*    4 INFTCB PTR(31),        /* ADDRESS TCB                         */
*    4 INFBADDR PTR(31),      /* REGISTER 14 IF BRANCH ENTRY         */
*    4 INFRCL CHAR(1),        /* REASON CODE AND COUNT OF VARIABLE
*                                DATA.                               */
*     8 INFCL BIT(3),         /* REASON CODE                         */
*     8 INFVARCT BIT(5),      /* COUNT OF VARIABLE DATA.             */
*    4 INFFLG CHAR(1),        /* FLAG BYTE                           */
*     8 INFFLG0 BIT(1),       /* WHEN 1, INDICATES BRANCH ENTRY      */
*    4 INFCC FIXED(15),       /* COMPLETION CODE                     */
*     8 * PTR(8),
*     8 INFCCSVC PTR(8),      /* SVC NUMBER                          */
*    4 INFVAR,                /* VARIABLE INFORMATION                */
*     8 INFVAR1 FIXED(31),    /* VARIABLE WORD 1                     */
*     8 INFVAR2 FIXED(31),    /* VARIABLE WORD 2                     */
*     8 INFVAR3 FIXED(31),    /* VARIABLE WORD 3                     */
*     8 INFVAR4 FIXED(31),    /* VARIABLE WORD 4              Y00489 */
*    4 INFRSV01 FIXED(15),    /* RESERVED                     @Y02702*/
*    4 INFRSV02 FIXED(15);    /* RESERVED                     @Y02702*/
*DECLARE INFEND CHAR(0) BASED(ADDR(INFOLIST)+LENGTH(INFOLIST));
