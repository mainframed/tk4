*%GOTO PLSRTMAC;  /*
          MACRO
&LABEL   IDARTMAC
*
*        LEVEL=1 02/24/75.
*
FORCORE   DSECT
IDARSTAT  EQU DXATEXC1 *     RECOVERY ROUTINE STATUS AREA.
          ORG DXATEXC1 *     THIS IS THE SAME AS DXATEXC1.
RSTAT     DS  0F *           STATUS BITS FOR RECOVERY.
RSTATOPT  DS  BL1 *          OPTION OR OPERATION.
*
IDARLOAD EQU X'80'                IFG0192A IN PROGRESS.
IDARIICL EQU X'40'                ISAM INTERFACE CLOSE IN PROGRESS.
IDARIIOP EQU X'20'                ISAM INTERFACE OPEN IN PROGRESS.
IDARTCLO EQU X'10'                VSAM TYPE=T CLOSE IN PROGRESS.
IDAREOV  EQU X'08'                VSAM EOV IN PROGRESS.
IDARCLOS EQU X'04'                VSAM CLOSE IN PROGRESS.
IDAROPEN EQU X'02'                VSAM OPEN IN PROGRESS.
IDARVRP  EQU X'01'                BLDVRP OR DLVRP IN PROGRESS.
*
RSTATCRO  DS  BL1 *          CHECKPOINT/RESTART OPTION         @Z30SSDT
*
IDARCKPT EQU X'80'                CHECKPOINT IN PROGRESS.      @Z30SSDT
IDARRSTR EQU X'40'                RESTART IN PROGRESS.         @Z30SSDT
IDARCRCU EQU X'20'                CHECKPOINT/RESTART CLEANUP.  @Z30SSDT
IDARCURS EQU X'10'                RECURSION IF ON.             @Z30SSDT
*
RSTATOP2  DS  BL1  *         SECOND BYTE OF O/C/E INDICATORS.  @Z30SSMD
*
RSTATCSA  EQU X'80'          O/C/E IS OBTAINING CSA STORAGE.   @Z30SSMD
*
          DS  CL1  *         RESERVED - UNUSED.
IDARRTN   EQU DXATEXC2 *     SECOND WORD OF STATUS
          ORG DXATEXC2 *     ROUTINE IN CNTL.
RSTATRTN  DS  CL4 *          ROUTINE IN CONTROL.
          ORG DXATCOM1 *     DEFINE THE BASE FOR IDAESPL.
IDAESPL   DS CL16  *         BLD/DLVRP ESTAE P/L AREA.
          ORG DXJBF *        BASE THE R/T SAVE AREA.
IDARTSA  DS CL72 *          SAVE AREA FOR R/T IF BLDVRP/DLVRP.
*
*
*
     MEND   */
*%PLSRTMAC:;
*        /* IDAVGTT */
*        /* -THE VGTT (VSAM GLOBAL TERMINATION TABLE) IS     @Z30SSMD*/
*        /*  USED BY VSAM I/O SUPPORT TO KEEP TRACK OF       @Z30SSMD*/
*        /*  GLOBAL RESOURCES WHICH MUST BE RELEASED UNDER   @Z30SSMD*/
*        /*  TERMINATION CONDITIONS.                         @Z30SSMD*/
*        /*                                                  @Z30SSMD*/
*        /*  LEVEL=2  07/23/75.                              @Z40WSRL*/
*        /*                                                  @Z30SSMD*/
*        DCL 1 IDAVGTT BASED BDY(WORD),/* IDAVGTT- VSAM GLOBAL
*                                         TERMINATION TABLE. */
*              3 VGTTID CHAR(4),       /* BLOCK NAME ALWAYS = 'VGTT' */
*              3 VGTTTYPE   BIT(8), /* TYPE OF VGTT          @Z30SSMD*/
*                5 VGTTSDS BIT(1), /* SYSTEM DATA SET VGTT   @Z40WSRL*/
*                5 VGTTGSR BIT(1), /* GSR VGTT, VGTT HAS USE COUNT.*/
*                5 VGTTLSR BIT(1), /* LSR VGTT.              @Z30SSMD*/
*                5 VGTTCTLG BIT(1), /* CTLG OPEN IN PROGRESS.*/
*                5 VGTTOPEN BIT(1), /* NORMAL DATA SET VGTT. @Z30SSMD*/
*                5 * BIT(3), /* RESERVED - UNUSED.           @Z30SSMD*/
*              3 * CHAR(1),       /* RESERVED- UNUSED.       @Z30SSMD*/
*              3 VGTTGSRK FIXED(8), /* GSR KEY IF VGTTGSR ON @Z40ESSR*/
*              3 VGTTSP FIXED(8),      /* SUBPOOL IN WHICH THE VGTT AND
*                                       THE CORE RESIDE.     @Z30SSMD*/
*              3 VGTTSIZE FIXED(31),   /* SIZE OF THE VGTT,BYTES.*/
*              3 VGTTNEXT PTR(31),     /* ADDRESS OF THE VGTT FOR
*                                       THE NEXT SPHERE,=0 IF LAST.*/
*              3 VGTTBIB PTR(31),     /* SPHERE IDENTIFIER @Z30SSMD*/
*              3 VGTTVUSE FIXED(31),      /* VSRT USE COUNT IF GSR.*/
*              3 VGTTPSB PTR(31),  /* PTR TO THE PROTECTED SPHERE BLK*/
*              3 * PTR(31),                      /* RESERVED, UNUSED */
*              3 VGTTCORE CHAR(*); /* IF LSR, THE CORE PREFIXED. */
*        /*                                                  @Z30SSMD*/
*        /* MISCELLANEOUS DECLARES.                          @Z30SSMD*/
*        /*                                                  @Z30SSMD*/
*        DCL VGTTNAME CHAR(4) CONSTANT('VGTT'); /* NAME OF VGTT USED TO
*                                       FILL IN VGTTID FIELD */
*        /* IDARTSA - RESERVES A STANDARD 72 BYTE SAVE AREA IF
*                     BLDVRP/DLVRP IS IN PROGRESS.           @Z30SSMD*/
*        DCL IDARTSA CHAR(72) DEFINED(DXJBF); /* R/T SAVE AREA.*/
*        /* IDAESPL - RESERVES 4 WORDS IN FORCORE FOR ESTAE IF
*           BLDVRP/DLVRP IS IN PROGRESS.                     @Z30SSMD*/
*        DCL  IDAESPL CHAR(16) BDY(WORD) DEFINED(DXATCOM1);/*ESTAE P/L.
*                                                            @Z30SSMD*/
*        /*  IDARRPL- PROVIDES IECRRPL COMPATABLITIY FOR IDAOCEA1. */
*        DCL 1 IDARRPL CHAR(4) DEFINED(DXATCOM1), /* VSAM R/T P/L.*/
*              2 * CHAR(1),/* IECRRPL COMPATABILITY.         @Z30SSMD*/
*              2 IDARRFLG CHAR(1), /* IECRRPL COMPATABILITY. @Z30SSMD*/
*                3 * BIT(4), /* IECRRPL COMPATABILITY.       @Z30SSMD*/
*                3 RRPLVSAM BIT(1), /* RRFAMSTR COMPATABILITY. */
*                3 * BIT(3), /* IECRRPL COMPATABILITY.       @Z30SSMD*/
*              2 * CHAR(2); /* IECRRPL COMPATABILITY.        @Z30SSMD*/
*
*        /*                                                  @Z30SSMD*/
*        /*     VSAM RECOVERY STATUS INDICATORS.             @Z30SSMD*/
*        /*                                                  @Z30SSMD*/
* DCL 1 IDARSTAT DEFINED(DXATEXC1),  /* RECOVERY ROUTINE STATUS AREA.*/
*       2 RSTAT BIT(32),             /* STATUS FOR RECOVERY. @Z30SSMD*/
*         3 RSTATOPT CHAR(1),        /* OPTION OR OPERATION.         */
*         3 RSTATCRO CHAR(1),        /* CHECKPOINT/RESTRT OP @Z30SSDT*/
*           4 IDARCKPT BIT(1),       /* CHECKPT IN PROGRESS  @Z30SSDT*/
*           4 IDARRSTR BIT(1),       /* RESTART IN PROGRESS  @Z30SSDT*/
*           4 IDARCRCU BIT(1),       /* C/R CLEANUP IN PROG  @Z30SSDT*/
*           4 IDARCURS BIT(1),       /* RECURSION IF ON      @Z30SSDT*/
*         3 RSTATOP2 CHAR(1),       /* O/C/E INDICATORS, 2ND BYTE.   */
*           4 RSTATCSA BIT(1),      /* O/C/E OBTAINING CSA CORE.     */
*           4 * BIT(7),             /* RESERVED - UNUSED, AVAILABLE. */
*         3 *        CHAR(1);       /* RESERVED-UNUSED.      @Z30SSMD*/
* DCL 1 IDARRTN DEFINED(DXATEXC2),  /* WORD TWO OF VSAM STATUS SWITCHES
*                                                            @Z30SSMD*/
*        2 RSTATRTN CHAR(4);        /* RTNE IN CNTL.         @Z30SSMD*/
*
*        /*                                                  @Z30SSMD*/
*        /*      CONSTANTS FOR SETTING RSTATOPT.             @Z30SSMD*/
*        /*                                                  @Z30SSMD*/
* DCL IDARLOAD BIT(8) CONSTANT('80'X); /*IFG0192A/2Y IN CNTL.
*                                                            @Z30SSMD*/
* DCL IDARIICL BIT(8) CONSTANT('40'X); /*II CLOSE IN PROGRESS. */
* DCL IDARIIOP BIT(8) CONSTANT('20'X); /*II OPEN IN PROGRESS. */
* DCL IDARTCLO BIT(8) CONSTANT('10'X); /*TCLOSE IN PROGRESS. */
* DCL IDAREOV  BIT(8) CONSTANT('08'X); /*EOV IN PROGRESS. */
* DCL IDARCLOS BIT(8) CONSTANT('04'X); /*CLOSE IN PROGRESS. */
* DCL IDAROPEN BIT(8) CONSTANT('02'X); /*OPEN IN PROGRESS. */
* DCL IDARVRP BIT(8) CONSTANT('01'X); /*BLDVRP/DLVRP IN PROGRESS.
*                                                            @Z30SSMD*/
*
*        /*                                                  @Z30SSMD*/
*        /*      CONSTANTS FOR SETTING RSTATRTN.             @Z30SSMD*/
*        /*                                                  @Z30SSMD*/
*
* DCL IDAR192A CHAR(4) CONSTANT('192A'); /*IDA0192A IN CNTL.@Z30SSMD*/
* DCL IDAR192B CHAR(4) CONSTANT('192B'); /*IDA0192B IN CNTL.@Z30SSMD*/
* DCL IDAR192C CHAR(4) CONSTANT('192C'); /*IDA0192C IN CNTL.@Z30SSMD*/
* DCL IDAR192D CHAR(4) CONSTANT('192D'); /*IDA0192D IN CNTL.@Z30SSMD*/
* DCL IDAR192F CHAR(4) CONSTANT('192F'); /*IDA0192F IN CNTL.@Z30SSMD*/
* DCL IDAR192G CHAR(4) CONSTANT('192G'); /*IDA0192G IN CNTL.@Z30SSMD*/
* DCL IDAR192M CHAR(4) CONSTANT('192M');/* IDA0192M IN CNTL.@Z30SSMD*/
* DCL IDAR192P CHAR(4) CONSTANT('192P'); /*IDA0192P IN CNTL.@Z30SSMD*/
* DCL IDAR192S CHAR(4) CONSTANT('192S'); /*IDA0192S IN CNTL.@Z30SSMD*/
* DCL IDAR192V CHAR(4) CONSTANT('192V'); /*IDA0192V IN CNTL.@Z30SSMD*/
* DCL IDAR192W CHAR(4) CONSTANT('192W'); /*IDA0192W IN CNTL.@Z30SSMD*/
* DCL IDAR192Y CHAR(4) CONSTANT('192Y');/* IDA0192Y IN CNTL.@Z30SSMD*/
* DCL IDAR192Z CHAR(4) CONSTANT('192Z'); /*IDA0192Z IN CNTL.@Z30SSMD*/
* DCL IDAR200B CHAR(4) CONSTANT('200B'); /*IDA0200B IN CNTL.@Z30SSMD*/
* DCL IDAR200T CHAR(4) CONSTANT('200T'); /*IDA0200T IN CNTL.@Z30SSMD*/
* DCL IDAR231B CHAR(4) CONSTANT('231B'); /*IDA0231B IN CNTL.@Z30SSMD*/
* DCL IDAR231T CHAR(4) CONSTANT('231T'); /*IDA0231T IN CNTL.@Z30SSMD*/
* DCL IDAR557A CHAR(4) CONSTANT('557A'); /*IDA0557A IN CNTL.@Z30SSMD*/
* DCL IDARA05B CHAR(4) CONSTANT('A05B'); /*IDA0A05B IN CNTL.@Z30SSDT*/
* DCL IDARC05B CHAR(4) CONSTANT('C05B'); /*IDA0C05B IN CNTL.@Z30SSDT*/
* DCL IDARC06C CHAR(4) CONSTANT('C06C'); /*IDA0C06C IN CNTL.@Z30SSDT*/
* DCL IDARI96C CHAR(4) CONSTANT('I96C'); /*IDA0I96C IN CNTL.@Z30SSDT*/
*
*        /*                                                  @Z30SSMD*/
*        /* END OF IDARTMAC.                                 @Z30SSMD*/
*        /*                                                  @Z30SSMD*/
