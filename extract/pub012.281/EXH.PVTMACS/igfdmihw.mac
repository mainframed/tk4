* /***************************************************************** */
* /*                                                                 */
* /*     MODULE NAME - IGFDMIHW                                      */
* /*                                                                 */
* /*     MIHW - Missing Interruption Handler Work Area DSECT         */
* /*                                                                 */
* ?CPYRIGHT DATE(JBB1326);
* /*                                                                 */
* /*     FUNCTION - This mapping macro describes the MIH             */
* /*                work area used by both the IGFTMCHK              */
* /*                and IGFTMC00 modules. The macro describes        */
* /*                the MIH message block, provides equates          */
* /*                for the MIH condition codes and ECB              */
* /*                completion codes, and provides a                 */
* /*                PLS mapping of the IGFINTVL CSECT.               */
* /*                                                                 */
* /*     DEPENDENCIES - None                                         */
* /*                                                                 */
* /*     RESTRICTIONS - None                                         */
* /*                                                                 */
* /*     MODULE TYPE - Control block                                 */
* /*                                                                 */
* /*     PROCESSOR - PLS3 compiler                               @L3C*/
* /*                                                                 */
* /*     CHANGE ACTIVITY -                                           */
* /*A000000-999999                                           @ZA31032*/
* /*PTM VS49698 ADDED FOR SU64                               @G64JPLE*/
* /*                                                                 */
* /* $MOD(IGFDMIHW),COMP(SC1CE),PROD(MIH): MIH DSECT             @L3A*/
* /* $L3=RAS,JBB1326,800801,PDLE: RAS enhancements                   */
* /* $D1=DCR35,JBB1326,800801,PDLE: Provide DOM facility             */
* /* $D2=DCR97,JBB1326,800801,PDLE: LRB macro updates                */
* /*                                                                 */
* /***************************************************************** */
*DECLARE
*  1 MIHWORK  BASED(WORKREG)         BDY(DWORD),
*   2 MIHIDFLD CHAR(16),             /* MIH WORK AREA IDENTIFICATION */
*   2 MIHAREA1                                 ,
*    4 MIHTQE  CHAR(LENGTH(TQE))      BDY(DWORD), /* TQE BLOCK       */
*    4 MIHSRB  CHAR(LENGTH(SRBSECT))  BDY(DWORD), /* SRB BLOCK       */
*    4 MIHECB       FIXED(32),       /* MIH ECB FOR POST AND WAIT    */
*     6 ECBCODE      BIT(8),         /* ECB COMPLETION CODE          */
*     6 COMPCODE     PTR(24),        /* ECB COMPLETION CODE          */
*    4 MIHRCNT             ,         /* MIH FRR RETRY COUNTERS       */
*     6 MIHKRETY  FIXED(15),         /* MCHK RETRY COUNT             */
*     6 MIH1RETY  FIXED(15),         /* MC01 RETRY COUNT             */
*    4 MIHMCHKF     CHAR(3),         /* IGFTMCHK FLAG BYTES----------
*                                                                @L3A*/
*     6 MIHFLAG1     BIT(8),         /* MIH MCHK FLAG BYTE 1------   */
*      8 MIHESTAA    BIT(1),         /* -ESTAE ACTIVE                */
*      8 MIHIPLRA    BIT(1),         /* -SVC76, IPL RCD ACT          */
*      8 MIHIPLOK    BIT(1),         /* -SVC76, IPL RCD WRITTEN      */
*      8 MIHUCBSK    BIT(1),         /* -UCB SCAN ACTIVE             */
*      8 MIHINITC    BIT(1),         /* -MCHK INIT COMPLETE          */
*      8 MIHSDIEA    BIT(1),         /* -SET DIE SUCCESSFUL          */
*      8 MIHRDEA     BIT(1),         /* -SVC76- RDE ACTIVE,
*                                         UPD TIME/DATE STAMP        */
*      8 *           BIT(1),         /*                              */
*     6 MIHFLAG2     BIT(8),         /* MIH MCHK FLAG BYTE 2-----    */
*      8 MIHLGRCA    BIT(1),         /* -LOGREC PROCESSING ACTIVE    */
*      8 MIHTIMEA    BIT(1),         /* -SVC 11 TIME MACRO ACTIVE    */
*      8 MIHRECDA    BIT(1),         /* -RECORD LOGREC ACTIVE        */
*      8 *           BIT(1),         /* -                            */
*      8 *           BIT(1),         /* -                            */
*      8 *           BIT(1),         /* -                            */
*      8 *           BIT(1),         /* -                            */
*      8 MIHNSDWA    BIT(1),         /* -IN ESTAE, NO SDWA PROVIDED  */
*     6 MIHFLAG3     BIT(8),         /* MIH MCHK FLAG BYTE 3-----    */
*      8 MIHMSGPA    BIT(1),         /* -MESSAGE PROCESSING ACTIVE   */
*      8 MIHMSGBA    BIT(1),         /* -MESSAGE BUILD ACTIVE        */
*      8 MIHMBLDA    BIT(1),         /* -MESSAGE BUILD ROUTINE ACTIVE
*                                                                @L3C*/
*      8 MIHWTOA     BIT(1),         /* -SVC35- WTO MESSAGE ACTIVE   */
*      8 MIHACTNF    BIT(1),         /* -Action message requires
*                                        DOMing processing flag  @D1C*/
*      8 MIHDMSET    BIT(1),         /* -DOM table search flag   @D1C*/
*      8 *           BIT(1),         /* -Reserved                    */
*      8 *           BIT(1),         /* -Reserved                    */
*    4 MIHMC01F     CHAR(3),         /* IGFTMC01 FLAG BYTES----------*/
*     6 MIHFLAG4     BIT(8),         /* MIH MC01 FLAG BYTE 1-----
*                                                                @L3C*/
*      8 MIHFRRA     BIT(1),         /* - FRR ACTIVE                 */
*      8 MIHEXT1A    BIT(1),         /* - MIH EXIT 1 ACTIVE          */
*      8 MIHUCBSA    BIT(1),         /* - UCB SCAN ACTIVE            */
*      8 MIHUCBVA    BIT(1),         /* - VALID UCB PROCESSING       */
*      8 MIHEXT2A    BIT(1),         /* - MIH EXIT 2 ACTIVE          */
*      8 MIHTQEA     BIT(1),         /* - MIH TQE ENQ ACTIVE         */
*      8 MIHEXITE    BIT(1),         /* - MIH PERM ERR IN EXIT       */
*      8 MIH01RTY    BIT(1),         /* - MIH FRR RETRY ACTIVE       */
*     6 MIHFLAG5     BIT(8),         /* MIH MC01 FLAG BYTE 2-----    */
*      8 *           BIT(8),         /*                              */
*     6 MIHPOSTF     BIT(8),         /* MIH POST FLAG BYTE ------    */
*      8 MIHPOST     BIT(1),         /* - MIH POSTING ACTIVE     @L3C*/
*      8 *           BIT(7),         /* - TS INST IS USED TO
*                                         SERIALIZE POSTING      @L3C*/
*    4 MIHFRRSA     CHAR(2),         /* MIH MC01 FRR FLAGS SAVE AREA */
*     6 MIHFLAG7     BIT(8),         /* MIH MC01 FRR FLAG BYTE 1--   */
*     6 MIHFLAG8     BIT(8),         /* MIH MC01 FRR FLAG BYTE 2--   */
*    4 MIHCODE      CHAR(1),         /* MIHCOND TRANSLATION CODE     */
*    4 MIHPSTCD     CHAR(1),         /* MIH POST CODE                */
*    4 MIHUCBTI     CHAR(1),         /* MIH EXIT INDEX IN ERROR      */
*    4 MIHRSV01     CHAR(1),         /* RESERVED                     */
*    4 MIHLRB              ,         /* LOGREC BUFFER                */
*     6 *      CHAR(LENGTH(LRB)),    /* LOGREC HEADER                */
*     6 *      CHAR(LENGTH(LRBNMIH)), /* MIH SECTION                 */
*    4 MIHWTO       CHAR(76),        /* WTO BUFFER                   */
*     6 MIHWTO1             ,        /*                              */
*      8 WTOLNTH    CHAR(02),        /* - MSG LNTH                   */
*      8 WTOMCSF    CHAR(02),        /* - MCS FLAGS                  */
*      8 WTOMSGID   CHAR(09),        /* - MSG ID                     */
*      8 MIHMSGV    CHAR(63),        /* - MSG TEXT                   */
*    4 MIHESTAE          BDY(DWORD), /* ESTAE PARAMETER LIST         */
*     6 ESTAFLG1    CHAR(1) ,        /*   - FLAGS                    */
*     6 ESTARETA     PTR(24),        /*   - EXIT ROUTINE ADDR        */
*     6 ESTAPARM     PTR(31),        /*   - PARAMETER LIST ADDR      */
*     6 ESTATCB      PTR(31),        /*   - TCB ADDRESS              */
*     6 ESTAFLG2    CHAR(1) ,        /*   - FLAGS                    */
*     6 ESTARSVD     PTR(24),        /*   - RESERVED                 */
*   2 MIHAREA2           BDY(DWORD), /* MIH WORK AREA                */
*    4 MIHTIMEP  BIT(64) BDY(DWORD), /* MIH TIME INTERVAL VALUE - PRI*/
*     6 MIHTMEPS FIXED(32) UNSIGNED, /* MIH TIME IN SECONDS          */
*     6 *        FIXED(32) UNSIGNED, /* MIH TIME IN MICRO SECONDS    */
*    4 MIHTIMES  BIT(64) BDY(DWORD), /* MIH TIME INTERVAL VALUE - SEC*/
*     6 MIHTMESS FIXED(32) UNSIGNED, /* MIH TIME IN SECONDS          */
*     6 *        FIXED(32) UNSIGNED, /* MIH TIME IN MICRO-SECONDS    */
*    4 MIHTACCM  BIT(64) BDY(DWORD), /* MIH ACCUMULATED SECONDARY TME*/
*     6 MIHTACMS FIXED(32) UNSIGNED, /* ACCUMULATED TIME IN SECONDS  */
*     6 *        FIXED(32) UNSIGNED, /* ACCUMULATED TIME IN MICRO-SEC*/
*    4 MIHTOD    BIT(64) BDY(DWORD), /* MIH CURRENT TOD VALUE        */
*     6 MIHTODS  FIXED(32) UNSIGNED, /* TOD TIME IN SECONDS          */
*     6 *        FIXED(32) UNSIGNED, /* TOD TIME IN MICRO-SECONDS    */
*    4 MIHTMCT CHAR(8) BDY(DWORD),   /* MIH TIME INTERVAL WA         */
*     6 TMCHR  CHAR(2),              /* MIH TIME INTERVAL- HOURS     */
*     6 TMCMM  CHAR(2),              /* MIH TIME INTERVAL - MINUTES  */
*     6 TMCSS  CHAR(2),              /* MIH TIME INTERVAL - SECONDS  */
*     6 TMCTH  CHAR(2),              /* MIH TIME INTERVAL - IGNORED  */
*    4 MIHWK1  CHAR(8) BDY(DWORD),   /* MIH WORK AREA #1-----------  */
*     6 PKWORK         CHAR(08),     /* CONVERT EBCDIC TO HEX WA     */
*      8 UPKWRK        CHAR(08),     /* CONVERT HEX TO EBCDIC WA     */
*       10 *           CHAR(06),     /*                              */
*       10 MIHOUR      CHAR(02),     /* MIH TIME INTVL IN DEC HOURS  */
*         12 MIHMIN    CHAR(02),     /* MIH TIME INTVL IN DEC MINUTES*/
*           14 MIHSEC  CHAR(02),     /* MIH TIME INTVL IN DEC SECONDS*/
*    4 MIHWK2,                       /* MIH WORK AREA #2-----------  */
*     6 MIHTMWK2,                    /*.MIH TIME INTERVAL IN BINARY  */
*      8 HR    FIXED(31),            /*  -INTERVAL IN BINARY HOURS   */
*      8 MM    FIXED(31),            /*  -INTERVAL IN BINARY HOURS   */
*      8 SS    FIXED(31),            /*  -INTERVAL IN BINARY SECONDS */
*    4 MIHREMDR CHAR(04),            /* MIH REMAINDER                */
*    4 MIHWK3   CHAR(08),            /* MIH WORK AREA #3 ----------  */
*     6 PKSERNO,                     /*.CPU SERIAL NUMBER BEING      */
*      8 SERNO  CHAR(6),             /*  PACKED FOR LOG-REC BFR      */
*      8 *      CHAR(1),             /*                              */
*     6 MIHWK3A CHAR(1),             /* WORK BYTE                    */
*    4 MIHMSGPR  PTR(31),            /* MIH MESSAGE CHAIN PTR        */
*    4 MIHR13SV  PTR(31),            /* REG 13 SAVE AREA             */
*    4 MIHR14SV  PTR(31),            /* REG 14 SAVE - CALLER ADDR    */
*    4 MIHR14SA  PTR(31),            /* REG 14 SAVE - MIHDR0 RTN     */
*    4 MIHR14SB  PTR(31),            /* REG 14 SAVE - MC01TQE RTN    */
*    4 MIHR14SC  PTR(31),            /* REG 14 SAVE - IGFTMFRR RTN   */
*    4 MIHINTVP  PTR(31),            /* MIH INTVL CSECT ADDRESS      */
*    4 MIHUCBLA CHAR(04),            /* UCB LOCK ADDRESS SAVE AREA   */
*    4 MIHR14SD  PTR(31),            /* REG 14 SAVE - IGFTMCHS RTN   */
*    4 MIHRSV02 CHAR(04),            /* RESERVED                     */
*    4 MIHEXT1P,                     /* MIH EXIT 1 PARM AREA-------  */
*     6 MIHINTVL    CHAR(8),         /* MIH TIME INTERVAL-EBCDIC     */
*      8 MIHINTHR   CHAR(2),         /* MIH TIME INTERVAL - HOURS    */
*      8 MIHINTMM   CHAR(2),         /* MIH TIME INTERVAL - MINUTES  */
*      8 MIHINTSS   CHAR(2),         /* MIH TIME INTERVAL - SECONDS  */
*      8 MIHINTTT   CHAR(2),         /* MIH TIME INTERVAL - IGNORED  */
*     6 MIHEXCON    CHAR(4),         /* MIH EXIT CONSTANTS           */
*      8 MIHCON1    CHAR(2),         /* MIH EXIT CONSTANT 1          */
*      8 MIHCON2    CHAR(2),         /* MIH EXIT CONSTANT 2          */
*     6 MIHRSV03    CHAR(4),         /* RESERVED                     */
*    4 MIHEXT2P,                     /* MIH EXIT 2 PARM AREA-------  */
*     6 MIHEXFLG     BIT(8),         /* MIH EXIT 2 FLAG BYTE         */
*      8 MIHIOR      BIT(1),         /* IF ON, IORESTART REQD        */
*      8 *           BIT(7),         /* RESERVED BITS                */
*     6 MIHRSV04    CHAR(2),         /* RESERVED                     */
*     6 MIHCOND      BIT(8),         /* MIH CONDITION BYTE           */
*      8 *           BIT(4),         /* RESERVED BITS                */
*      8 MIHSW       BIT(1),         /* MISSING SWAP CONDITION       */
*      8 MIHMT       BIT(1),         /* MISSING MOUNT CONDITION      */
*      8 MIHCE       BIT(1),         /* MISSING CHANNEL END INTERRUPT*/
*      8 MIHDE       BIT(1),         /* MISSING DEVICE END INTERRUPT */
*     6 MIHEX1PP     PTR(31),        /* MIH EXIT 1 PARM AREA POINTER */
*    4 MIHINDEX            ,         /* MIH INDEX CONSTANTS          */
*     6 I         FIXED(15),         /*  I                           */
*     6 J         FIXED(15),         /*  J                           */
*    4 MIHUASCB     CHAR(4),         /* MIH USER ASCB PTR            */
*    4 TMC01SAV     CHAR(72),        /* MC01 18 WORD SAVE AREA       */
*    4 TMCHKSAV     CHAR(72),        /* MCHK 18 WORD SAVE AREA       */
*    4 MIHFRRSV     CHAR(64),        /* MC01 FRR 16 WORD SAVE AREA   */
*    4 MIHPSTSV     CHAR(64),        /* MC01 POST routine 16 word
*                                            save area           @L3C*/
*    4 MIHDMCTR     CHAR(04),        /* MIH DOM table - Count of
*                                       active DOM entries       @D1A*/
*    4 MIHDMTBL(30) CHAR(06),        /* MIH DOM table - contains action
*                                       message number ids that
*                                       that have to be DOMed.   @D1A*/
*      6 MIHDMUCB   CHAR(02),        /* - UCB address            @D1A*/
*      6 MIHMSGWD   CHAR(04),        /* - FLags and message ID   @D1A*/
*        8 MIHDMFLG  BIT(08),        /* - DOM table flag byte    @D1A*/
*          10 MIHDOMF BIT(1),        /* - Indicates that this DOM
*                                         entry is to be DOMed.  @D1A*/
*          10 *       BIT(7),        /* - Reserved               @D1A*/
*        8 MIHMSGNM  BIT(24),        /* - Message number field   @D1A*/
*    4 MIHSCTNM     CHAR(02),        /* Number of secondary table
*                                       entries.                 @L3A*/
*    4 MIHULKTB(48) CHAR(02),        /* MIH secondary look-up table-
*                                       minimum size of table.
*                                                                @L3C*/
*    4 MIHULKTE     CHAR(*) ;        /* MIH secondary look-up table
*                                       extension (equal in size of
*                                       the installation device table
*                                       in IGFINTVL)             @L3C*/
*/*                                                                  */
*/* **************************************************************** */
*/* *                                                              * */
*/* *    Mapping of message block that contains data for           * */
*/* *    generating the IGF99X messages.                         @L3C*/
*/* *    - MC01 chains the messages that have to be written.       * */
*/* *    - MCHK removes the message block and generates the        * */
*/* *      appropriate IGF99X message.                           @L3C*/
*/* *                                                              * */
*/* **************************************************************** */
*DECLARE
*  1 MIHMSGBK  BASED(MSGPTR),        /* MESSAGE BLOCK                */
*   2 NEXTMSG    PTR(31),            /* PTR TO NEXT MESSAGE          */
*   2 EMIHCODE  CHAR(1),             /* MIH PENDING CONDITION CODE   */
*   2 EMIHCOND   BIT(8),             /* MIH PENDING CONDITION        */
*   2 EUCBMIHT   BIT(8),             /* UCB MIH BYTE             @L3C*/
*   2 ERRMSGFL   BIT(8),             /* ERROR MESSAGE FLAGS          */
*    4 MSGPSCAN  BIT(1),             /* .PRIMARY TIME SCAN ACTIVE    */
*    4 MSGIOR    BIT(1),             /* .I/O RESTART SCH     @ZM49689*/
*    4 *         BIT(6),             /* RESERVED                     */
*   2 ERRTIME   CHAR(8),             /* ERROR TIME STAMP             */
*    4 ERRTIMEL CHAR(4),             /* . 1ST FOUR BYTES             */
*    4 ERRTIMEU CHAR(4),             /* . 2ND FOUR BYTES             */
*   2 EJOBNAME  CHAR(8),             /* JOBNAME                      */
*   2 ERRASID   CHAR(2),             /* ASID FIELD                   */
*   2 ECSTCPU   CHAR(2),             /* CPU NUMBER-CST           @L3C*/
*   2 EUCBIOQ   CHAR(4),             /* UCBIOQ FIELD                 */
*   2 ERRUCB    CHAR(48),            /* UCB COMMON AND DEV DPT SECT  */
*    4 EUCBCOM  CHAR(24),            /* . UCB COMMON SECTION         */
*    4 EUCBDPT  CHAR(24),            /* . UCB DEVICE DEPENDENT SECT  */
*   2 ERRUCBPT   PTR(31),            /* UCB Address word         @L3C*/
*    4 *         PTR(16),            /* . Reserved               @L3A*/
*    4 ERRUCBAD  PTR(16),            /* . UCB common address ptr @L3A*/
*   2 ERRMSGNM  CHAR(4);             /* Message ID number field  @D1C*/
*/* **************************************************************** */
*/* *      Remap the UCBMIHDF bit in UCBFL7                        * */
*/* *      to force a Compare and Swap (CS) when setting           * */
*/* *      or resetting this bit.                                  * */
*/* *                                                            @D1A*/
*/* **************************************************************** */
*DECLARE
*  1 UCBFL7#    BIT(8)   DEF(UCBFL7), /* Remap the UCBFL7 byte   @D1A*/
*   2 *         BIT(2),               /*                         @D1A*/
*   2 UCBMIHD#  BIT(1)   ABNORMAL,    /* Action message to be DOMed
*                                        indication flag         @D1A*/
*   2 *         BIT(5);               /*                         @D1A*/
*/* **************************************************************** */
*/* *                                                              * */
*/* *      MIH condition code equates                              * */
*/* *                                                              * */
*/* **************************************************************** */
*DECLARE MIHCODE1 FIXED(8) CONSTANT(01); /* 01- SWAP PENDING         */
*DECLARE MIHCODE2 FIXED(8) CONSTANT(02); /* 02- DEVICE END MISSING   */
*DECLARE MIHCODE3 FIXED(8) CONSTANT(03); /* 03- CHANNEL END MISSING  */
*DECLARE MIHCODE4 FIXED(8) CONSTANT(04); /* 04- DE AND CE MISSING    */
*DECLARE MIHCODE5 FIXED(8) CONSTANT(05); /* 05- MOUNT PENDING        */
*DECLARE MIHCODE6 FIXED(8) CONSTANT(06); /* 06- I/O REQUEST PENDING
*                                                                @L3A*/
*/* **************************************************************** */
*/* *                                                                */
*/* *    MIH ECB completion code equates                             */
*/* *                                                                */
*/* **************************************************************** */
*DECLARE MECBPOST   BIT(8) CONSTANT('40'X); /* ECB HAS BEEN POSTED
*                                                                @L3C*/
*DECLARE MERREXIT   BIT(8) CONSTANT('44'X); /* MIH EXIT IN ERROR
*                                                                @L3C*/
*DECLARE MERRCOMP   BIT(8) CONSTANT('45'X); /* MIH MC01 IN ERROR
*                                                                @L3C*/
*/* **************************************************************** */
*/* *                                                                */
*/* *    PLS mapping of the IGFINTVL CSECT                       @L3C*/
*/* *                                                                */
*/* **************************************************************** */
*DECLARE
*  1 INTVLCST  CHAR(80)  BDY(DWORD) BASED(INTVLREG),
*   2 INTVLPRI CHAR(08),           /* EBCDIC TIME INTERVAL - PRIMARY */
*   2 INTVLSEC CHAR(08),           /* EBCDIC TIME INT - SECONDARY    */
*   2 INTVLCNT CHAR(01),           /* NUMBER OF INDEXED ENTRIES      */
*   2 INTVFLG1  BIT(08),           /* MIH STATUS FLAGS               */
*    3 MIHACTVE BIT(01),           /* .MIH ACTIVATED                 */
*    3 MIHMCHKW BIT(01),           /* .MCHK WAITING                  */
*    3 MIHMCHKT BIT(01),           /* .MCHK ESTAE RETRY TERMINATION  */
*    3 MIHGTMT  BIT(01),           /* .MIH WORK AREA GETMAIN TERMIN  */
*    3 MIHSETDT BIT(01),           /* .SETDIE TERMINATION            */
*    3 MIHESTAT BIT(01),           /* .ESTAE TERMINATION             */
*    3 MIHPOSTT BIT(01),           /* .POST TERMINATION              */
*    3 MIHFRRT  BIT(01),           /* .MC01 FRR TERMINATION          */
*   2 INTVFLG2  BIT(08),           /* MIH STATUS FLAGS               */
*    3 MIHTMERR BIT(01),           /* .MCHK TIME INTERVAL ERROR      */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*   2 INTVFLG3  BIT(08),           /* MIH STATUS FLAGS               */
*    3 MIHPSCAN BIT(01),           /* .MC01- SCANNING CVTILK2 TABLE  */
*    3 MIHDOMID BIT(01),           /* .MC01- Insure that MCHK is posted
*                                            to DOM message IDs  @L3C*/
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*    3 *        BIT(01),           /*                                */
*   2 INTVMC00 CHAR(04),           /* IGFTMC00 ADDRESS               */
*   2 INTVMC01 CHAR(04),           /* IGFTMC01 ADDRESS               */
*   2 INTVWRKA CHAR(04),           /* MIH GETMAINED WORK AREA        */
*   2 INTVLEXT CHAR(16),           /* MIH INDEX TABLE - SET FOR ONE
*                                     INDEX ENTRY                @L3C*/
*   2 INTVLTNB CHAR(02),           /* TOTAL NUMBER OF DEV ENTRIES
*                                                                @L3A*/
*   2 INTVLTBL CHAR(*);            /* INSTALLATION DEFINED DEVICE
*                                     ADDRESS TABLE              @L3C*/
*/* **************************************************************** */
*/* *                                                                */
*/* *    Mapping of an MIH index entry in the IGFINTVL CSECT         */
*/* *                                                                */
*/* **************************************************************** */
*DECLARE
*  1 INTVEXIT  CHAR(16) BDY(WORD) BASED(EXITPTR),
*   2 INTVEXT1 PTR(31)  BDY(WORD), /* MIH 1ST EXIT ADDR              */
*   2 INTVEXT2 PTR(31)  BDY(WORD), /* MIH 2ND EXIT ADDR              */
*   2 INTVCNST CHAR(04),           /* EXIT CONSTANTS                 */
*    4 INTVCON1 CHAR(02),          /* . EXIT CONSTANT FIELD #1       */
*    4 INTVCON2 CHAR(02),          /* . EXIT CONSTANT FIELD #2       */
*   2 INTVRSVD CHAR(02),           /* RESERVED                       */
*   2 INTVRTY1 CHAR(01),           /* 1ST EXIT RETRY COUNTER         */
*   2 INTVRTY2 CHAR(01);           /* 2ND EXIT RETRY COUNTER         */
