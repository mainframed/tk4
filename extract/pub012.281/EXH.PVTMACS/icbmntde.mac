* %/* START OF SPECIFICATIONS****
         MACRO
&SYMBOL  ICBMNTDE &MF=,&TYPE=,&FLAGS=,&VOLID=,&VUA=,                   *
               &HOSTID=,&MEXTN=,&ECB=,&MJFCB=
.************************************************************* @Y30LB02
.*                                                             @Y30LB02
.* MODULE-NAME = ICBMNTDE                                      @Y30LB02
.*                                                             @Y30LB02
.* DESCRIPTIVE-NAME = MOUNT/DEMOUNT MACRO                      @Y30LB02
.*                                                             @Y30LB02
.* COPYRIGHT = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.* STATUS = OPERATING SYSTEM = VS/2 REL 3                      @G18MB04
.*                                                             @Y30LB02
.* FUNCTION = REQUESTS MOUNT/DEMOUNT OF VIRTUAL VOLUMES        @Y30LB02
.*            FROM THE MSC USING SVC 126. THE                  @Y30LB02
.*            MOUNT REQUEST IS ISSUED WHEN A VIRTUAL           @Y30LB02
.*            VOLUME IS TO BE MADE AVAILABLE FOR               @Y30LB02
.*            PROCESSING. CONVERSELY, WHEN THE                 @Y30LB02
.*            VOLUME IS NO LONGER REQUIRED FOR                 @Y30LB02
.*            PROCESSING, THE DEMOUNT REQUEST IS               @Y30LB02
.*            ISSUED.                                          @Y30LB02
.*                                                             @Y30LB02
.* NOTES =                                                     @Y30LB02
.*                                                             @Y30LB02
.*   CODE = MACRO IS BILINGUALLY CODED. IN THE ORIGINAL        @Y30LB02
.*          VERSION OF THIS MACRO, THE BAL AND PL/S            @ZA28964
.*          SECTIONS ASSIGNED DIFFERENT LABELS TO THE          @ZA28964
.*          SAME REQUEST BLOCK STRUCTURE. TO MAINTAIN          @ZA28964
.*          COMPATABILITY, THE ALTERNATE PL/S LABELS HAVE      @ZA28964
.*          BEEN ADDED TO THE BAL REQUEST BLOCK DEFINITION     @ZA28964
.*          AND THE ALTERNATE BAL LABELS ADDED TO THE PL/S     @ZA28964
.*          REQUEST BLOCK DEFINITION.                          @ZA28964
.*                                                             @Y30LB02
.*   DEPENDENCIES = NONE                                       @Y30LB02
.*                                                             @Y30LB02
.*   RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE           @Y30LB02
.*                  AVOIDED IN THE INVOKING MODULE:            @Y30LB02
.*                  ICB, MD, DM AND MNT. SVC 126, WHICH        @Y30LB02
.*                  IS INVOKED BY THIS MACRO, REQUIRES THAT    @ZA28964
.*                  THE CALLER BE APF-AUTHORIZED, IN           @ZA28964
.*                  PROTECTION KEY 0, OR IN SUPERVISOR STATE.  @ZA28964
.*                                                             @Y30LB02
.*   REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS    @Y30LB02
.*                          BY MACROS: R0,R1,R14,AND R15.      @Y30LB02
.*                                                             @Y30LB02
.*   PATCH-LABEL = NONE                                        @Y30LB02
.*                                                             @Y30LB02
.* MODULE-TYPE = MACRO                                         @Y30LB02
.*                                                             @Y30LB02
.*   PROCESSOR = ASSEM                                         @Y30LB02
.*               PL/S                                          @Y30LB02
.*                                                             @Y30LB02
.*   ATTRIBUTES = REUSABLE                                     @Y30LB02
.*                RE-ENTRANT (EXECUTE FORM)                    @Y30LB02
.*                                                             @Y30LB02
.* ENTRY-POINT = ICBMNTDE                                      @Y30LB02
.*                                                             @Y30LB02
.*   PURPOSE = SEE FUNCTION                                    @Y30LB02
.*                                                             @Y30LB02
.*   LINKAGE = SEE INPUT                                       @Y30LB02
.*                                                             @Y30LB02
.* INPUT = CODE THE ICBMNTDE MACRO USING                       @Y30LB02
.*         ONE OF THE FOLLOWING SYNTAX FORMS (THE              @Y30LB02
.*         '(R)' REGISTER PARAMETER FORM IS VALID              @Y30LB02
.*         ONLY IN THE BAL VERSIONS):                          @Y30LB02
.*                                                             @Y30LB02
.*   LIST FORMS =                                              @Y30LB02
.*                                                             @Y30LB02
.*     BAL - ICBMNTDE MF=(L,MAP),TYPE=MNT×DMNT                 @Y30LB02
.*                                                             @ZA28964
.*       REQUIRED PARAMETERS - MF=L,TYPE                       @ZA28964
.*                                                             @Y30LB02
.*     PL/S- ICBMNTDE MF(L,NAME,ATTR) TYPE(MNT×DMNT)           @Y30LB02
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF(L,NAME) TYPE                 @Y30LB02
.*                                                             @Y30LB02
.*   STANDARD FORMS =                                          @ZDR2048
.*                                                             @Y30LB02
.*     BAL - ICBMNTDE TYPE=MNT×DMNT,VOLID=NAME×(R),            @Y30LB02
.*                    VUA=NAME×(R),ECB=NAME×(R),               @ZDR2048
.*                    FLAGS=NAME×(R),MEXTN=NAME×(R),           @G18MB04
.*                    MJFCB=NAME×(R),HOSTID=NAME×(R)           @G18MB04
.*                                                             @ZA28964
.*       REQUIRED PARAMETERS - TYPE,VOLID(FOR DMNT ONLY),      @ZA28964
.*                             VUA(FOR MNT ONLY)               @ZA28964
.*                                                             @Y30LB02
.*     PL/S- ICBMNTDE TYPE(MNT×DMNT) VOLID(NAME) VUA(NAME)     @ZDR2048
.*                    ECB(NAME) FLAGS(NAME) MEXTN(NAME)        @G18MB04
.*                    MJFCB(NAME) HOSTID(NAME)                 @G18MB04
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - TYPE, VOLID(FOR DMNT ONLY),     @ZA28964
.*                             VUA(FOR MNT ONLY)               @ZA28964
.*                                                             @Y30LB02
.*   EXECUTE FORMS =                                           @ZDR2048
.*                                                             @Y30LB02
.*     BAL - ICBMNTDE MF=(E,NAME×(R)),TYPE=MNT×DMNT,           @ZDR2048
.*                    VOLID=NAME×(R),VUA=NAME×(R),             @ZDR2048
.*                    ECB=NAME×(R),FLAGS=NAME×(R),             @ZDR2048
.*                    MEXTN=NAME×(R),MJFCB=NAME×(R),           @G18MB04
.*                    HOSTID=NAME×(R)                          @ZDR2048
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF=(E,NAME×(R)), TYPE           @Y30LB02
.*                                                             @Y30LB02
.*     PL/S- ICBMNTDE MF(E,NAME,COMPLETE) TYPE(MNT×DMNT)       @ZDR2048
.*                    VOLID(NAME) VUA(NAME) ECB(NAME)          @ZDR2048
.*                    FLAGS(NAME) MEXTN(NAME) MJFCB(NAME)      @G18MB04
.*                    HOSTID(NAME)                             @ZDR2048
.*                                                             @Y30LB02
.*       REQUIRED PARAMETERS - MF(E,NAME) TYPE                 @Y30LB02
.*                                                             @Y30LB02
.*   KEYWORD PARAMETERS =                                      @Y30LB02
.*                                                             @Y30LB02
.*     MF = MACRO FORMAT                                       @Y30LB02
.*                                                             @Y30LB02
.*       L = LIST FORM. THE EXPANSION OF THE LIST FORM         @Y30LB02
.*           WILL DEFINE A REQUEST BLOCK.                      @Y30LB02
.*                                                             @ZA28964
.*         NAME = LABEL ASSIGNED TO THE REQUEST BLOCK IN       @Y30LB02
.*             PL/S (REQUIRED IN PL/S VERSION).                @Y30LB02
.*                                                             @ZA28964
.*         MAP = SPECIFIES THAT AN ASSEMBLER VERSION           @Y30LB02
.*             INVOCATION WILL PRODUCE A MAPPING DSECT         @Y30LB02
.*             LABELED 'ICBMNTDE' (FOR DEMOUNT) OR             @Y30LB02
.*             'ICBMNTD1' (FOR MOUNT).                         @Y30LB02
.*                                                             @ZA28964
.*         ATTR = A PL/S ATTRIBUTE THAT WILL BE PLACED         @Y30LB02
.*             IN AN UNINITIALIZED REQUEST BLOCK DEFINITION.   @Y30LB02
.*             SOME ATTRIBUTE EXAMPLES ARE:                    @Y30LB02
.*               STATIC LOCAL, NONLOCAL, BASED(*), ETC         @Y30LB02
.*                                                             @Y30LB02
.*       NULL = STANDARD FORM IS INVOKED. THE EXPANSION OF     @Y30LB02
.*           THIS FORM CONSISTS OF A REQUEST BLOCK (ONLY       @Y30LB02
.*           IN THE FIRST INVOCATION OF THIS FORM IN ANY       @Y30LB02
.*           MODULE) LABELED ICBMLST OR ICBDMLST IN THE        @ZA28964
.*           PL/S VERSIONS, A LINKAGE INSTRUCTION AND          @ZA28964
.*           PARAMETER BINDING INSTRUCTIONS.                   @ZA28964
.*                                                             @Y30LB02
.*       E = EXECUTE FORM. THE EXPANSION OF THIS               @Y30LB02
.*           FORM CONSISTS OF A LINKAGE INSTRUCTION AND        @Y30LB02
.*           POSSIBLY PARAMETER BINDING INSTRUCTIONS.          @Y30LB02
.*                                                             @ZA28964
.*         NAME = LABEL OF THE REQUEST BLOCK TO USE.           @Y30LB02
.*                                                             @ZA28964
.*         COMPLETE = CAUSES THE MACRO TO ZERO OUT THE         @Y30LB02
.*             REQUEST BLOCK AND THEN INSERT THE FUNCTION      @Y30LB02
.*             OPCODE AND LENGTH INTO THE REQUEST BLOCK.       @Y30LB02
.*                                                             @Y30LB02
.*     TYPE = INDICATES WHETHER THE REQUEST IS FOR A           @Y30LB02
.*         MOUNT (MNT) OR DEMOUNT (DMNT).                      @Y30LB02
.*                                                             @Y30LB02
.*     VOLID = LABEL OF THE LOCATION CONTAINING THE VOLUME     @ZA28964
.*         SERIAL NUMBER OF THE VIRTUAL VOLUME TO              @ZA28964
.*         BE MOUNTED OR DEMOUNTED. VOLID IS NOT SPECIFIED     @Y30LB02
.*         WHEN A MOUNT SCRATCH IS REQUESTED, BUT IS           @ZDR2048
.*         REQUIRED FOR A DEMOUNT.                             @ZDR2048
.*                                                             @Y30LB02
.*     ECB = LABEL OF THE EVENT CONTROL BLOCK FOR              @Y30LB02
.*         NOTIFICATION WHEN THE DEMOUNT PROCESS HAS           @Y30LB02
.*         COMPLETED. THIS PARAMETER IS REQUIRED ONLY          @Y30LB02
.*         IF THE DELAYED RESPONSE ATTRIBUTE IS SPECIFIED      @Y30LB02
.*         WITH A DEMOUNT REQUEST OF A SUBSYSTEM VOLUME.       @Y30LB02
.*         A POST CODE IN THE RANGE '70'X - '7F'X WILL         @Y30LB02
.*         BE PLACED IN THE LOW-ORDER BYTE OF THE ECB ON       @Y30LB02
.*         COMPLETION OF THE DEMOUNT ('7F'X IS THE             @Y30LB02
.*         SUCCESSFUL COMPLETION CODE). THE ECB SHOULD BE      @Y30LB02
.*         SET TO BINARY ZERO BEFORE INVOKING THE MACRO.       @Y30LB02
.*         THIS PARAMETER MAY ONLY BE USED IN DEMOUNT          @ZA28964
.*         REQUESTS. THE DMNTASID FIELD OF THE REQUEST BLOCK   @ZA28964
.*         IS USED BY SVC 126 TO RECORD THE ADDRESS            @ZA28964
.*         SPACE ID OF THE INVOKING MODULE SO THAT THE         @ZA28964
.*         CORRECT ECB MAY BE LOCATED FOR POSTING.             @ZA28964
.*                                                             @Y30LB02
.*     VUA = LABEL OF THE LOCATION CONTAINING THE VIRTUAL      @ZA28964
.*         UNIT ADDRESS TO WHICH THE VOLUME IS TO BE           @ZA28964
.*         MOUNTED OR DEMOUNTED. A VUA IS REQUIRED FOR A       @ZA28964
.*         MOUNT.                                              @ZA28964
.*                                                             @Y30LB02
.*     FLAGS = LABEL OF TWO BYTES SPECIFYING THE ATTRIBUTES    @Y30LB02
.*         TO BE ASSOCIATED WITH THE REQUEST:                  @Y30LB02
.*                                                             @Y30LB02
.*       MOUNT REQUESTS =                                      @Y30LB02
.*                                                             @Y30LB02
.*         0... ....    RESERVED - ALWAYS ZERO                 @Y30LB02
.*         .1.. ....    MSVC IS ISSUING THE MOUNT. MSSC WILL   @Y30LB02
.*                        NOT CALL MSVC TO COMMUNICATE         @ZA28964
.*                        THE REQUEST.                         @ZA28964
.*         ..1. ....    MSVC SECONDARY VOLUME REQUEST. USED    @Y30LB02
.*                        WITH MOUNT SCRATCH TO INDICATE A     @ZA28964
.*                        NON-SPECIFIC SECONDARY VOLUME        @ZA28964
.*                        REQUEST FROM EOV. MSVC WILL SELECT   @ZA28964
.*                        A VOLUME BASED ON THE SECONDARY      @ZA28964
.*                        VOLUME ALGORITHM INSTEAD OF          @ZA28964
.*                        SELECTING A VOLUME BASED ON THE      @ZA28964
.*                        PRIMARY VOLUME ALGORITHM. THIS BIT   @ZA28964
.*                        IS IGNORED BY THE MSVC IF A MOUNT    @ZA28964
.*                        SCRATCH IS NOT INDICATED.            @ZA28964
.*         ...1 ....    MOUNT SCRATCH VOLUME AS SELECTED BY    @Y30LB02
.*                        THE MSVC.                            @ZA28964
.*         .... 1...    MOUNT EXTENSION PROVIDED.  SET BY THE  @G18MB04
.*                        MEXTN KEYWORD TO INDICATE THAT THE   @ZA28964
.*                        JFCB POINTER IS CONTAINED IN AN      @ZA28964
.*                        EXTENSION BLOCK RATHER THAN IN THE   @ZA28964
.*                        MOUNT REQUEST BLOCK.                 @ZA28964
.*         .... .000    RESERVED - ALWAYS ZERO                 @G18MB04
.*         0000 0000    SECOND BYTE - RESERVED - ALWAYS ZERO   @Y30LB02
.*                                                             @Y30LB02
.*       DEMOUNT REQUESTS =                                    @Y30LB02
.*                                                             @Y30LB02
.*         0... ....    RESERVED - ALWAYS ZERO                 @Y30LB02
.*         .1.. ....    DELAYED RESPONSE. ECB WILL BE POSTED   @Y30LB02
.*                        WHEN THE DEMOUNT IS COMPLETE.        @ZA28964
.*         ..1. ....    VUA FIELD HAS BEEN INITIALIZED AND     @ZDR2048
.*                        IS VALID.                            @ZA28964
.*         ...0 0000    RESERVED - ALWAYS ZERO                 @ZDR2048
.*         0000 0000    SECOND BYTE - RESERVED - ALWAYS ZERO   @Y30LB02
.*                                                             @Y30LB02
.*     HOSTID = LABEL OF A 5-BYTE FIELD WHICH CONTAINS THE     @Y30LB02
.*         MANUFACTURER'S CPU IDENTIFICATION. IF SET TO ZERO,  @Y30LB02
.*         SVC 126 WILL FILL IN THE ID OF THE CALLING CPU.     @ZA28964
.*                                                             @Y30LB02
.*     MJFCB = LABEL OF THE FIELD CONTAINING A POINTER         @G18MB04
.*         TO THE JFCB TO BE USED BY THE MSVC. MUTUALLY        @G18MB04
.*         EXCLUSIVE WITH THE MEXTN PARAMETER. USED IN         @G18MB04
.*         NONSPECIFIC MOUNT REQUESTS ONLY.                    @G18MB04
.*                                                             @Y30LB02
.*     MEXTN = LABEL OF THE MOUNT PARAMETER LIST               @G18MB04
.*         EXTENSION IN THE INVOKING PROGRAM. USED FOR         @G18MB04
.*         NON-SPECIFIC REQUESTS ONLY. MUTUALLY                @G18MB04
.*         EXCLUSIVE WITH THE MJFCB PARAMETER.                 @G18MB04
.*                                                             @Y30LB02
.* OUTPUT =                                                    @Y30LB02
.*                                                             @Y30LB02
.*   INLINE PL/S OR BAL STATEMENTS THAT PERFORM THE            @Y30LB02
.*   REQUESTED FUNCTION AND ERROR MESSAGES AS COMMENTS         @Y30LB02
.*   AT THE POINT OF INVOCATION.                               @Y30LB02
.*                                                             @Y30LB02
.*   SVC126 REQUEST BLOCK (LIST AND STANDARD FORMS):           @Y30LB02
.*                                                             @Y30LB02
.*     OFFSETS  LENGTH      BAL LABELS    DESCRIPTION          @ZA28964
.*     DEC HEX  (BYTES)   MOUNT   DEMOUNT                      @ZA28964
.*     -------  ------- -------- -------- ------------         @ZA28964
.*      0  (0)     4    MNTLEN   DMNTLEN  REQ BLK LENGTH       @ZA28964
.*      4  (4)     1    MNTOPCD  DMOPCODE REQUEST OPCODE       @ZA28964
.*      5  (5)     1    MNTRES1  DMNTRES1 RESERVED             @ZA28964
.*      6  (6)     2    MNTFLAGS DMNTFLAG FLAGS                @ZA28964
.*      8  (8)     6    MNTVOLID DMVOLID  VOLUME ID            @ZA28964
.*     14  (E)     2    MNTVUA   DMNTASID VUA × ASID           @ZA28964
.*     16  (10)    5    MNTHOSTD -------- HOST ID (MNT)        @ZA28964
.*     16  (10)    4    -------- DMNTECB  ECB (DMNT)           @ZA28964
.*     20  (14)    5    -------- DMHOSTID HOST ID (DMNT)       @ZA28964
.*     21  (15)    3    MNTRES2  -------- RESERVED AREA        @ZA28964
.*     24  (18)    4    MNTEXTP  -------- EXTN ADDR            @ZA28964
.*     24  (18)    4    MNTJFCB  -------- JFCB POINTER         @ZA28964
.*     25  (19)    1    -------- DMNTRES2 RESERVED             @ZA28964
.*     26  (1A)    2    -------- DMNTVUA  VUA FOR DMNT         @ZA28964
.*                                                             @Y30LB02
.* EXIT-NORMAL = VALID INVOCATION                              @Y30LB02
.*                                                             @Y30LB02
.*   CONDITION = RETURN CODE = 0 × 4                           @Y30LB02
.*                                                             @Y30LB02
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS GENERATED. IF       @ZA28964
.*            PL/S WARNING MESSAGES ARE GENERATED (RETCODE=4), @ZA28964
.*            THEY WILL ONLY APPEAR AS COMMENTS WHEN THE       @ZA28964
.*            'MSOURCE' PARAMETER IS USED IN THE PL/S          @ZA28964
.*            COMPILATION.                                     @ZA28964
.*                                                             @ZA28964
.*   MESSAGES =                                                @ZA28964
.*                                                             @ZA28964
.*     ICB603I - WARNING - ONLY MF AND TYPE PARAMETERS ARE     @Y30LB02
.*                VALID FOR LIST FORM                          @Y30LB02
.*     ICB618I - WARNING - ECB PARAMETER VALID ONLY FOR        @ZA28964
.*                DEMOUNT REQUEST                              @ZA28964
.*     ICB619I - WARNING - MEXTN/MJFCB PARAMETER VALID         @ZA28964
.*                ONLY FOR MOUNT REQUEST                       @ZA28964
.*                                                             @Y30LB02
.* EXIT-ERROR = INVALID INVOCATION                             @Y30LB02
.*                                                             @Y30LB02
.*   CONDITION = RETURN CODE = 12                              @Y30LB02
.*                                                             @Y30LB02
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS NOT GENERATED.      @Y30LB02
.*            PL/S ERROR MESSAGES WILL ONLY APPEAR AS COMMENTS @ZA28964
.*            WHEN THE 'MSOURCE' PARAMETER IS USED IN THE      @ZA28964
.*            PL/S COMPILATION.                                @ZA28964
.*                                                             @Y30LB02
.*   MESSAGES =                                                @ZA28964
.*                                                             @ZA28964
.*     ICB600I - TYPE MUST BE SPECIFIED                        @Y30LB02
.*     ICB601I - TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02
.*     ICB602I - A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02
.*                SPECIFIED IN MF(2)                           @Y30LB02
.*     ICB610I - VOLID MUST BE SPECIFIED FOR                   @Y30LB02
.*                STANDARD FORM MACRO                          @Y30LB02
.*     ICB611I - VUA MUST BE SPECIFIED FOR                     @Y30LB02
.*                STANDARD FORM MACRO                          @Y30LB02
.*     ICB612I - MF(2) MUST CONTAIN REQ BLK NAME IF            @Y30LB02
.*                EXECUTE MACRO FORM REQUESTED                 @Y30LB02
.*     ICB613I - MISSING REQ BLK NAME OR MORE                  @Y30LB02
.*                THAN 2 SUBPARAMETERS FOR MF                  @Y30LB02
.*     ICB615I - INVALID MF PARAMETER SPECIFIED, MUST BE       @Y30LB02
.*                L, E, OR NULL                                @Y30LB02
.*     ICB621I - MEXTN AND MJFCB MUTUALLY EXCLUSIVE PARAMETERS @G18MB04
.*                SPECIFIED                                    @G18MB04
.*                                                             @Y30LB02
.* EXTERNAL REFERENCES =                                       @Y30LB02
.*                                                             @ZA28964
.*   ROUTINES = NONE                                           @ZA28964
.*                                                             @ZA28964
.*   DATA-AREAS =                                              @ZA28964
.*                                                             @ZA28964
.*     BAL : GLOBAL VARIABLES USED                             @ZA28964
.*       &MNTTEST : > 0 IF THE MNT STANDARD FORM HAS BEEN      @ZA28964
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @ZA28964
.*       &DMNTTES : > 0 IF THE DMNT STANDARD FORM HAS BEEN     @ZA28964
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @ZA28964
.*                                                             @ZA28964
.*     PL/S: FIXED EXTERNAL DECLARATIONS USED                  @ZA28964
.*       MDTESTR1: > 0 IF MDREG1 HAS BEEN DECLARED AS REG1     @Y30LB02
.*           PREVIOUSLY IN THE INVOKING PROCEDURE              @Y30LB02
.*       MNTTEST: > 0 IF THE MNT STANDARD FORM HAS BEEN        @Y30LB02
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @Y30LB02
.*       DMTTEST: > 0 IF THE DMNT STANDARD FORM HAS BEEN       @Y30LB02
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @Y30LB02
.*                                                             @ZA28964
.*   CONTROL-BLOCKS = NONE                                     @ZA28964
.*                                                             @Y30LB02
.* TABLES = NONE                                               @Y30LB02
.*                                                             @Y30LB02
.* MACROS =  IHBINNRA (USED IN ASSEM TO LOAD REG 1)            @Y30LB02
.*                                                             @Y30LB02
.* CHANGE-ACTIVITY =                                           @Y30LB02
.*                                                             @ZA28964
.*   00 74/06/09 DEVELOPMENT                                   @Y30LB02
.*   01 76/01/19 DMOUNT VUA SUPPORT ADDED                      @ZDR2048
.*   02 76/02/06 MOUNT LIST EXTENSION SUPPORT ADDED            @G18MB04
.*   03 76/03/11 CORRECT INVALID HOSTID IN STD FORM            @ZA09524
.*   04 77/12/15 DOCUMENTATION ADDITIONS/RESTRUCTURE           @ZA28964
.*               BAL STD FORM MADE SERIALLY REUSABLE           @ZA28964
.*               PL/S LABELS DECLARED IN BAL VERSION           @ZA28964
.*               CHG ASSEM LOGIC TO AGREE WITH PL/S            @ZA28964
.*               PL/S MACRO INVOCATION ECHOED BACK TO CALLER   @ZA28964
.*               BAL LABELS DECLARED IN PL/S VERSION           @ZA28964
.*                                                             @Y30LB02
.************************************************************* @ZA28964
.*    END OF SPECIFICATIONS ********************************** @Y30LB02
         GBLB  &MNTTEST            MNT STD FORM FLAG           @ZA28964
         GBLB  &DMNTTES            DMT STD FORM FLAG           @ZA28964
         LCLC  &LBL                DEFINE MACRO INSTR INDX     @Y30LB02
         LCLC  &LBL1               DEFINE MACRO INSTR INDX     @Y30LB02
&LBL     SETC  'J'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02
&LBL1    SETC  'K'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02
.*                                                             @G18MB04
.*       CHECK FOR MUTUALLY EXCLUSIVE PARAMETERS               @G18MB04
.*                                                             @G18MB04
.PARM    AIF   ('&MJFCB' EQ '' OR '&MEXTN' EQ '').TYPE         @G18MB04
         MNOTE 12,'  ICB621I - MEXTN AND MJFCB MUTUALLY'       @G18MB04
         MNOTE 12,'  EXCLUSIVE PARAMETERS SPECIFIED.'          @G18MB04
         AGO   .FINISH                                         @G18MB04
.*                                                             @Y30LB02
.*       CHECK FOR VALID TYPE SPECIFICATION                    @Y30LB02
.*                                                             @Y30LB02
.TYPE    AIF   ('&TYPE' EQ '').NUL                             @Y30LB02
         AIF   ('&TYPE' EQ 'MNT' OR '&TYPE' EQ 'DMNT').START   @Y30LB02
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.NUL     MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02
.*                                                             @Y30LB02
.START   AIF   ('&MF(1)' EQ 'L').LFORM      LIST FORM?         @Y30LB02
         AIF   ('&MF(1)' EQ 'E').EFORM      EXECUTE FORM?      @Y30LB02
         AIF   ('&MF(1)' EQ '').SFORM       STANDARD FORM?     @Y30LB02
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER'           @Y30LB02
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL.'        @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.* *********************************************************** @ZA28964
.*             L I S T    F O R M                              @Y30LB02
.* *********************************************************** @ZA28964
.*                                                             @Y30LB02
.LFORM   AIF   ('&FLAGS' NE '' OR '&MEXTN' NE '').WARN         @G18MB04
         AIF   ('&VOLID' NE '' OR '&VUA' NE '').WARN           @Y30LB02
         AIF   ('&MJFCB' NE '' OR '&HOSTID' NE '').WARN        @ZA28964
         AIF   ('&ECB' EQ '').LISTOK                           @ZA28964
.*                                                             @Y30LB02
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02
.*                                                             @ZA28964
.LISTOK  AIF   ('&TYPE' EQ 'MNT').MOUNT    MOUNT REQUEST?      @Y30LB02
         AIF   ('&MF(2)' EQ 'MAP').DMNTDS  DSECT REQUESTED     @Y30LB02
*  MACMEAN MSSC DEMOUNT MACRO--INITIALIZED LIST FORM           @ZA28964
*          VERSION - VS/2  REL 3 77/12/15   LEVEL 04           @ZA28964
&SYMBOL  DS    0F                                              @Y30LB02
DMNTLEN  DC    F'28'               REQ BLK LENGTH              @Y30LB02
DMOPCODE DC    XL1'06'             DEMOUNT OPCODE              @Y30LB02
DMNTRES1 DC    XL1'00'             RESERVED                    @Y30LB02
DMNTFLAG DC    XL2'0000'           FLAGS                       @Y30LB02
DMVOLID  DC    XL6'000000000000'   VOLID                       @Y30LB02
DMNTASID DC    XL2'0000'           ASID                        @Y30LB02
DMNTECB  DC    XL4'00000000'       ECB                         @Y30LB02
DMHOSTID DC    XL5'0000000000'     HOST ID                     @Y30LB02
DMNTRES2 DC    XL1'00'             RESERVED                    @ZDR2048
DMNTVUA  DC    XL2'0000'           VUA                         @ZDR2048
DMLEN    EQU   DMNTLEN             COMPATABILITY DEFINITION    @ZA28964
DMOPCD   EQU   DMOPCODE            COMPATABILITY DEFINITION    @ZA28964
DMVOL    EQU   DMVOLID             COMPATABILITY DEFINITION    @ZA28964
DMHOST   EQU   DMHOSTID            COMPATABILITY DEFINITION    @ZA28964
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.DMNTDS  ANOP                                                  @Y30LB02
*  MACMEAN  MSSC DEMOUNT MACRO--UNINITIALIZED LIST FORM        @Y30LB02
*           VERSION - VS/2 REL 3  77/12/15   LEVEL 04          @ZA28964
ICBMNTDE DSECT                                                 @Y30LB02
DMNTLEN  DS    F                   REQ BLK LENGTH (1C HEX)     @Y30LB02
DMOPCODE DS    XL1                 DMNT OPCODE (06 HEX)        @Y30LB02
DMNTRES1 DS    XL1                 RESERVED                    @Y30LB02
DMNTFLAG DS    XL2                 FLAGS                       @Y30LB02
DMVOLID  DS    CL6                 VOLID                       @Y30LB02
DMNTASID DS    XL2                 ASID                        @Y30LB02
DMNTECB  DS    A                   ECB                         @ZA28964
DMHOSTID DS    CL5                 HOST ID                     @Y30LB02
DMNTRES2 DS    XL1                 RESERVED                    @ZDR2048
DMNTVUA  DS    XL2                 VUA                         @ZDR2048
DMLEN    EQU   DMNTLEN             COMPATABILITY DEFINITION    @ZA28964
DMOPCD   EQU   DMOPCODE            COMPATABILITY DEFINITION    @ZA28964
DMVOL    EQU   DMVOLID             COMPATABILITY DEFINITION    @ZA28964
DMHOST   EQU   DMHOSTID            COMPATABILITY DEFINITION    @ZA28964
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.MOUNT   AIF   ('&MF(2)' EQ 'MAP').MNTDS   DSECT REQUEST       @Y30LB02
*  MACMEAN  MSSC MOUNT MACRO--INITIALIZED LIST FORM            @Y30LB02
*           VERSION - VS/2 REL 3  77/12/15   LEVEL 04          @ZA28964
&SYMBOL  DS    0F                                              @Y30LB02
MNTLEN   DC    F'28'               REQ BLK LENGTH              @Y30LB02
MNTOPCD  DC    XL1'08'             MOUNT OPCODE                @Y30LB02
MNTRES1  DC    XL1'00'             RESERVED                    @Y30LB02
MNTFLAGS DC    XL2'0000'           FLAGS                       @Y30LB02
MNTVOLID DC    XL6'000000000000'   VOLID                       @Y30LB02
MNTVUA   DC    XL2'0000'           VUA                         @Y30LB02
MNTHOSTD DC    XL5'0000000000'     HOSTID                      @Y30LB02
MNTRES2  DC    XL3'000000'         RESERVED                    @Y30LB02
MNTEXTP  DC    XL4'00000000'       MNT LIST EXTN ADDR          @G18MB04
MNTJFCB  EQU   MNTEXTP             NAME RE-DEF FOR JFCB PTR    @G18MB04
MDLEN    EQU   MNTLEN              COMPATABILITY REDEFINITION  @ZA28964
MDOPCD   EQU   MNTOPCD             COMPATABILITY REDEFINITION  @ZA28964
MDFLG    EQU   MNTFLAGS            COMPATABILITY REDEFINITION  @ZA28964
MDVOL    EQU   MNTVOLID            COMPATABILITY REDEFINITION  @ZA28964
MDVUA    EQU   MNTVUA              COMPATABILITY REDEFINITION  @ZA28964
MDHOST   EQU   MNTHOSTD            COMPATABILITY REDEFINITION  @ZA28964
MDJFCB   EQU   MNTJFCB             COMPATABILITY REDEFINITION  @ZA28964
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.MNTDS   ANOP                                                  @Y30LB02
*  MACMEAN  MSSC MOUNT MACRO--UNINITIALIZED LIST FORM          @Y30LB02
*           VERSION - VS/2 REL 3  77/12/15   LEVEL 04          @ZA28964
ICBMNTD1 DSECT                                                 @Y30LB02
MNTLEN   DS    F                   REQ BLK LENGTH (1C HEX)     @Y30LB02
MNTOPCD  DS    XL1                 MOUNT OPCODE (08 HEX)       @Y30LB02
MNTRES1  DS    XL1                 RESERVED                    @Y30LB02
MNTFLAGS DS    XL2                 FLAGS                       @Y30LB02
MNTVOLID DS    CL6                 VOLID                       @Y30LB02
MNTVUA   DS    XL2                 VUA                         @Y30LB02
MNTHOSTD DS    CL5                 HOSTID                      @Y30LB02
MNTRES2  DS    XL3                 RESERVED                    @Y30LB02
MNTEXTP  DS    A                   MNT LIST EXTN ADDR          @ZA28964
MNTJFCB  EQU   MNTEXTP             NAME RE-DEF FOR JFCB PTR    @G18MB04
MDLEN    EQU   MNTLEN              COMPATABILITY REDEFINITION  @ZA28964
MDOPCD   EQU   MNTOPCD             COMPATABILITY REDEFINITION  @ZA28964
MDFLG    EQU   MNTFLAGS            COMPATABILITY REDEFINITION  @ZA28964
MDVOL    EQU   MNTVOLID            COMPATABILITY REDEFINITION  @ZA28964
MDVUA    EQU   MNTVUA              COMPATABILITY REDEFINITION  @ZA28964
MDHOST   EQU   MNTHOSTD            COMPATABILITY REDEFINITION  @ZA28964
MDJFCB   EQU   MNTJFCB             COMPATABILITY REDEFINITION  @ZA28964
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.* *********************************************************** @ZA28964
.*            E X E C U T E     F O R M                        @Y30LB02
.* *********************************************************** @ZA28964
.*                                                             @Y30LB02
.EFORM   AIF   (N'&MF EQ 2).PARMOK IF 2 SUB-PARAMETERS         @Y30LB02
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME '          @Y30LB02
         MNOTE 12,'  OR MORE THAN 2 SUBPARAMETERS FOR MF '     @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.PARMOK  ANOP                                                  @Y30LB02
*  MACMEAN MSSC MOUNT/DEMOUNT MACRO--EXECUTE FORM              @Y30LB02
*          VERSION - VS/2 REL 3  77/12/15  LEVEL 04            @ZA28964
&SYMBOL  IHBINNRA &MF(2)          LD ADDR OF REQUEST BLK       @Y30LB02
         AIF   ('&TYPE' EQ 'MNT').MNT1           TYPE MOUNT?   @Y30LB02
         LA    0,X'1C'             LD LENGTH OF DEMOUNT        @Y30LB02
         ST    0,0(1)              STORE LENGTH IN REQ BLK     @Y30LB02
         MVI   4(1),X'06'          MOVE OPCODE IN REQ BLK      @Y30LB02
         AGO   .PROCES                                         @Y30LB02
.*                                                             @Y30LB02
.MNT1    ANOP                                                  @Y30LB02
         LA    0,X'1C'             LENGTH OF MOUNT REQ BLK     @Y30LB02
         ST    0,0(1)              STORE LENGTH                @Y30LB02
         MVI   4(1),X'08'          MOVE MNT OPCODE IN REQBLK   @Y30LB02
         AGO   .PROCES                                         @Y30LB02
.*                                                             @Y30LB02
.* *********************************************************** @ZA28964
.*           S T A N D A R D     F O R M                       @Y30LB02
.* *********************************************************** @ZA28964
.*                                                             @Y30LB02
.SFORM   AIF   ('&TYPE' EQ 'MNT' OR '&VOLID' NE '').CKVUA      @ZDR2048
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED '       @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO'                  @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.CKVUA   AIF   ('&VUA' NE '' OR '&TYPE' EQ 'DMNT').SFORMOK     @Y30LB02
         MNOTE 12,'  ICB611I - VUA MUST BE SPECIFIED '         @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO'                  @Y30LB02
         AGO   .FINISH                                         @Y30LB02
.*                                                             @Y30LB02
.SFORMOK ANOP                                                  @Y30LB02
*  MACMEAN MSSC MOUNT/DEMOUNT MACRO--STANDARD FORM             @Y30LB02
*          VERSION - VS/2 REL 3  77/12/15  LEVEL 04            @ZA28964
         AIF   ('&TYPE' EQ 'MNT').MNT2           MOUNT?        @Y30LB02
         AIF   (&DMNTTES).MNT1SET  IF ^ 1ST STD FORM           @ZA28964
&DMNTTES SETB  1                   STD FORM INVOKED            @ZA28964
         CNOP  0,4                                             @ZA28964
&SYMBOL  BAL   1,&LBL1             SET REG1 POINTING TO LIST   @ZA28964
DMNTLEN  DC    A(&LBL-*)           REQ BLK LENGTH              @Y30LB02
DMOPCODE DC    XL1'06'             DEMOUNT OPCODE              @Y30LB02
DMNTRES1 DC    XL1'00'             RESERVED                    @Y30LB02
DMNTFLAG DC    XL2'0000'           FLAGS                       @Y30LB02
DMVOLID  DC    XL6'000000000000'   VOLID                       @Y30LB02
DMNTASID DC    XL2'0000'           ASID                        @Y30LB02
DMNTECB  DC    XL4'00000000'       ECB                         @Y30LB02
DMHOSTID DC    XL5'0000000000'     HOST ID                     @Y30LB02
DMNTRES2 DC    XL1'00'             RESERVED                    @ZDR2048
DMNTVUA  DC    XL2'0000'           VUA                         @ZDR2048
DMLEN    EQU   DMNTLEN             COMPATABILITY DEFINITION    @ZA28964
DMOPCD   EQU   DMOPCODE            COMPATABILITY DEFINITION    @ZA28964
DMVOL    EQU   DMVOLID             COMPATABILITY DEFINITION    @ZA28964
DMHOST   EQU   DMHOSTID            COMPATABILITY DEFINITION    @ZA28964
&LBL     EQU   *                                               @Y30LB02
&LBL1    DS    0F                                              @Y30LB02
         AGO   .PROCES                                         @Y30LB02
.*                                                             @Y30LB02
.MNT1SET ANOP                                                  @ZA28964
*          SUBSEQUENT STD FORM INVOCATION                      @ZA28964
&SYMBOL  LA    1,DMLEN             LOAD LIST ADDRESS IN REG1   @ZA28964
         AGO   .PROCES                                         @ZA28964
.*                                                             @ZA28964
.MNT2    AIF   (&MNTTEST).MNT2SET  IF ^ 1ST STD FORM           @ZA28964
&MNTTEST SETB  1                   STD FORM INVOKED            @ZA28964
         CNOP  0,4                                             @ZA28964
&SYMBOL  BAL   1,&LBL1             SET REG1 POINTING TO LIST   @ZA28964
MNTLEN   DC    A(&LBL-*)           REQ BLK LENGTH              @Y30LB02
MNTOPCD  DC    XL1'08'             MOUNT OPCODE                @Y30LB02
MNTRES1  DC    XL1'00'             RESERVED                    @Y30LB02
MNTFLAGS DC    XL2'0000'           FLAGS                       @Y30LB02
MNTVOLID DC    XL6'000000000000'   VOLID                       @Y30LB02
MNTVUA   DC    XL2'0000'           VUA                         @Y30LB02
MNTHOSTD DC    XL5'0000000000'     HOSTID                      @Y30LB02
MNTRES2  DC    XL3'000000'         RESERVED                    @Y30LB02
MNTEXTP  DC    XL4'00000000'       MNT LIST EXTN ADDR          @G18MB04
MNTJFCB  EQU   MNTEXTP             NAME RE-DEF FOR JFCB PTR    @G18MB04
MDLEN    EQU   MNTLEN              COMPATABILITY REDEFINITION  @ZA28964
MDOPCD   EQU   MNTOPCD             COMPATABILITY REDEFINITION  @ZA28964
MDFLG    EQU   MNTFLAGS            COMPATABILITY REDEFINITION  @ZA28964
MDVOL    EQU   MNTVOLID            COMPATABILITY REDEFINITION  @ZA28964
MDVUA    EQU   MNTVUA              COMPATABILITY REDEFINITION  @ZA28964
MDHOST   EQU   MNTHOSTD            COMPATABILITY REDEFINITION  @ZA28964
MDJFCB   EQU   MNTJFCB             COMPATABILITY REDEFINITION  @ZA28964
&LBL     EQU   *                                               @Y30LB02
&LBL1    DS    0F                                              @Y30LB02
         AGO   .PROCES                                         @ZA28964
.*                                                             @ZA28964
.MNT2SET ANOP                                                  @ZA28964
*          SUBSEQUENT STD FORM INVOCATION                      @ZA28964
&SYMBOL  LA    1,MDLEN             LOAD LIST ADDRESS IN REG1   @ZA28964
.*                                                             @Y30LB02
.*       PROCESS REQUEST BLOCK FOR STANDARD & EXECUTE FORMS    @Y30LB02
.*                                                             @Y30LB02
.PROCES  AIF   ('&FLAGS' EQ '').VOLID        FLAGS SPECIFIED?  @Y30LB02
         AIF   ('&FLAGS'(1,1) EQ '(').REGF  FLAGS IN REG-FORM? @Y30LB02
         MVC   6(2,1),&FLAGS       PUT FLAGS IN REQUEST BLK    @Y30LB02
         AGO   .VOLID              CHECK FOR VOLID             @Y30LB02
.*                                                             @Y30LB02
.REGF    ANOP                                                  @Y30LB02
         MVC   6(2,1),0(&FLAGS(1)) REG-FORM-STORE FLAGS        @Y30LB02
.*                                                             @Y30LB02
.VOLID   AIF   ('&VOLID' EQ '').YDMNT2                         @Y30LB02
         AIF   ('&VOLID'(1,1) EQ '(').VREG    REG-FORM?        @Y30LB02
         MVC   8(6,1),&VOLID       PUT VOLID IN REQBLK         @Y30LB02
         AGO   .YDMNT2                                         @Y30LB02
.*                                                             @Y30LB02
.VREG    ANOP                                                  @Y30LB02
         MVC   8(6,1),0(&VOLID(1)) REG-FORM--STORE VOLID       @Y30LB02
.*                                                             @Y30LB02
.YDMNT2  AIF   ('&VUA' EQ '').CKECB                            @ZA28964
         AIF   ('&VUA'(1,1) EQ '(').UREG     REGISTER FORM?    @Y30LB02
         AIF   ('&TYPE' EQ 'DMNT').DMTU   BRANCH ON DEMOUNT    @ZDR2048
         MVC   14(2,1),&VUA        STORE VUA                   @ZA28964
         AGO   .CKECB                                          @ZA28964
.*                                                             @ZDR2048
.DMTU    ANOP                                                  @ZDR2048
         MVC   26(2,1),&VUA        STORE VUA                   @ZDR2048
         OI    6(1),X'20'          SET VUA VALID FLAG          @ZDR2048
         AGO   .CKECB                                          @ZA28964
.*                                                             @Y30LB02
.UREG    AIF   ('&TYPE' EQ 'DMNT').DMTUREG BR ON DEMOUNT       @ZDR2048
         MVC   14(2,1),0(&VUA(1))  REG-FORM, STORE VUA         @Y30LB02
         AGO   .CKECB                                          @Y30LB02
.*                                                             @ZDR2048
.DMTUREG ANOP                                                  @ZDR2048
         MVC   26(2,1),0(&VUA(1))  REG FORM STORE VUA          @ZDR2048
         OI    6(1),X'20'          SET VUA VALID FLAG          @ZDR2048
.*                                                             @Y30LB02
.CKECB   AIF   ('&ECB' EQ '').CKHOST   ECB SPECIFIED?          @ZA28964
         AIF   ('&TYPE' EQ 'DMNT').CKECB1    IF DEMOUNT        @ZA28964
         MNOTE 4,'  ICB618I - WARNING - ECB PARAMETER '        @ZA28964
         MNOTE 4,'  VALID ONLY FOR DEMOUNT REQUEST '           @ZA28964
         AGO   .CKHOST                                         @ZA28964
.*                                                             @ZA28964
.CKECB1  AIF   ('&ECB'(1,1) EQ '(').RECB    REG FORM?          @ZA28964
         LA    15,&ECB            ADDRESS FORM ECB             @Y30LB02
         ST    15,16(1)           STORE ECB IN REQ BLK         @Y30LB02
         AGO   .CKHOST                                         @Y30LB02
.*                                                             @ZA28964
.RECB    ANOP                                                  @Y30LB02
         ST    &ECB,16(1)         REGFORM-STORE ECB            @Y30LB02
.*                                                             @Y30LB02
.CKHOST  AIF   ('&HOSTID' EQ '').CKJF   HOSTID NOT SPECD,BR    @Y30LB02
         AIF   ('&TYPE(1)' EQ 'DMNT').CKHOST1 BRCH IF DMNT     @Y30LB02
         AIF   ('&HOSTID'(1,1) EQ '(').RHOST  REG-FORM,BRCH    @Y30LB02
         MVC   16(5,1),&HOSTID     ADDR-FORM,STORE HOSTID      @Y30LB02
         AGO   .CKJF                                           @Y30LB02
.*                                                             @ZA28964
.RHOST   ANOP                                                  @Y30LB02
         MVC   16(5,1),0(&HOSTID(1)) STORE HOSTID              @Y30LB02
         AGO   .CKJF                                           @ZA09524
.*                                                             @Y30LB02
.CKHOST1 AIF   ('&HOSTID'(1,1) EQ '(').RHOST1 REG-FORM,BRCH    @Y30LB02
         MVC   20(5,1),&HOSTID     ADDR-FORM,STORE HOSTID      @Y30LB02
         AGO   .CKJF                                           @Y30LB02
.*                                                             @ZA28964
.RHOST1  ANOP                                                  @Y30LB02
         MVC   20(5,1),0(&HOSTID(1)) STORE HOSTID              @Y30LB02
.*                                                             @Y30LB02
.CKJF    AIF   ('&MJFCB' EQ '').CKMEXT      BR AND CK FOR EXT  @G18MB04
         AIF   ('&TYPE' EQ 'DMNT').JFEXER    IF BAD PARAMETER  @ZA28964
         AIF   ('&MJFCB'(1,1) EQ '(').RJF   BR FOR REG FORM    @G18MB04
         LA    15,&MJFCB           ADDR FORM MJFCB SPECD       @G18MB04
         ST    15,24(1)            STORE JFCB POINTER IN PARMS @G18MB04
         AGO   .CVS2               BR AROUND JFCB MEXT CODE    @G18MB04
.*                                                             @ZA28964
.RJF     ANOP                      REG FORM LABEL              @G18MB04
         MVC   24(4,1),0(&MJFCB(1)) REG FORM STORE JFCB PTR    @G18MB04
         AGO   .CVS2               BR AROUND MEXT CODE         @G18MB04
.*                                                             @ZA28964
.CKMEXT  AIF   ('&MEXTN' EQ '').CVS2   BR IF MEXTN IS NULL     @G18MB04
         AIF   ('&TYPE' EQ 'DMNT').JFEXER    IF BAD PARAMETER  @ZA28964
         AIF   ('&MEXTN'(1,1) EQ '(').RMEXT REG FORM SPECD     @G18MB04
         LA    15,&MEXTN           ADDRESS FORM SPECD          @G18MB04
         ST    15,24(1)            STORE MEXTN                 @G18MB04
         OI    6(1),X'08'          OR ON MNT EXT PROVIDED BIT  @G18MB04
         AGO   .CVS2               BRANCH                      @Y30LB02
.*                                                             @ZA28964
.RMEXT   ANOP                                                  @G18MB04
         MVC   24(4,1),0(&MEXTN(1))  STORE MEXTN               @G18MB04
         OI    6(1),X'08'          OR ON MNT EXT PROVIDED BIT  @G18MB04
         AGO   .CVS2                                           @ZA28964
.*                                                             @ZA28964
.JFEXER  MNOTE 4,'  ICB619I - WARNING - MEXTN/MJFCB '          @ZA28964
         MNOTE 4,'  PARAMETER VALID ONLY FOR MOUNT REQUEST '   @ZA28964
.*                                                             @Y30LB02
.CVS2    ANOP                                                  @Y30LB02
         SVC   126                 INVOKE  THE SVC             @Y30LB02
.FINISH  MEND                                                  @Y30LB02
************************************************************** @ZA28964
*************************************************************/
*   ICBMNTDE:  MACRO KEYS(MF,TYPE,FLAGS,VOLID,VUA,
*                  HOSTID,MJFCB,MEXTN,ECB);                /*@G18MB04*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*            EXTERNAL DECLARES                             @Y30LB02*/
*/********************************************************** @Y30LB02*/
*        DCL (MDTESTR1,         /*REGISTER ONE DECLARED      @Y30LB02*/
*             MNTTEST,          /*FLAG FOR STANDARD FORM     @Y30LB02*/
*             DMTTEST) FIXED EXT;/*FLAG FOR DMNT S-FORM      @Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*            INTERNAL DECLARES                             @Y30LB02*/
*/********************************************************** @Y30LB02*/
*   DCL RETCODE FIXED,       /*RETURN CODE AREA              @Y30LB02*/
*       (MLEN,               /*MOUNT LIST LENGTH             @Y30LB02*/
*        DLEN,               /*DEMOUNT LIST LENGTH           @Y30LB02*/
*        MOPCD,              /*MOUNT OPCODE                  @Y30LB02*/
*        DOPCD,              /*DEMOUNT OPCODE                @Y30LB02*/
*        VUAVAL,             /*VUA VALID SET BIT             @ZDR2048*/
*        MEXTVAL) CHAR;      /*MOUNT EXTENSION SET BIT       @G18MB04*/
*/*                                                          @ZA28964*/
*/********************************************************** @Y30LB02*/
*/*            VARIABLE INITIALIZATION                       @ZA28964*/
*/********************************************************** @Y30LB02*/
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/
*        MLEN = '1C';        /*INITIALIZE MOUNT LENGTH       @Y30LB02*/
*        DLEN = '1C';        /*INITIALIZE DEMOUNT LENGTH     @Y30LB02*/
*        MOPCD = '08';       /*INITIALIZE MOUNT OPCODE       @Y30LB02*/
*        DOPCD = '06';       /*INITIALIZE DEMOUNT OPCODE     @Y30LB02*/
*        VUAVAL='1';         /*INITIALIZE VUA VALID BIT      @ZDR2048*/
*        MEXTVAL='1';        /*INITIALIZE MNT EXT PROVIDED   @G18MB04*/
*/*                                                          @ZA28964*/
*/*    ANSWER TEXT IS AT THE END OF THE MACRO AND IS         @ZA28964*/
*/*    INCLUDED IN A SEGMENT-LIKE FASHION                    @ZA28964*/
*/*                                                          @ZA28964*/
*/********************************************************** @Y30LB02*/
*/*    ECHO INVOCATION BACK TO CALLING MODULE                @ZA28964*/
*/********************************************************** @Y30LB02*/
*  ANS('      /* MACRO INVOCATION:      @ZA28964*/')SKIP;  /*@ZA28964*/
*  ANS('      /*  ' ×× MACLABEL ×× ' ' ×× MACNAME ×× ' ' ××
*      MACLIST ×× ' ' ×× MACKEYS ×× ' @ZA28964*/')SKIP;    /*@ZA28964*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*            CHECK FOR MUTUALLY EXCLUSIVE PARAMETERS       @G18MB04*/
*/********************************************************** @Y30LB02*/
*   IF MEXTN ^= '' THEN IF MJFCB ^= '' THEN                /*@G18MB04*/
*     DO;                    /*ONE MUST BE NULL              @G18MB04*/
*       ANS MSG('  ICB621I - MEXTN AND MJFCB MUTUALLY'××
*               ' EXCLUSIVE PARAMETERS SPECIFIED. ')SKIP;
*       RETCODE=12;               /* SET RETURN CODE         @G18MB04*/
*       GO TO FINISH;             /* EXIT                    @G18MB04*/
*     END;                                                 /*@ZA28964*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*         DECLARE REGISTER 1                               @Y30LB02*/
*/********************************************************** @Y30LB02*/
*   IF MDTESTR1 = 0 THEN     /*REG 1 NOT DECLARED?           @ZA28964*/
*     DO;                    /*THEN DECLARE REG 1            @Y30LB02*/
*       ANS('DCL MDREG1 REG(1) PTR; /*'××
*           'ADDRESS OF REQUEST BLOCK @Y30LB02*/')SKIP;
*       MDTESTR1=1;          /*SET REG 1 DECLARED FLAG       @Y30LB02*/
*     END;                                                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*       CHECK FOR VALID TYPE SPECIFICATION                 @Y30LB02*/
*/********************************************************** @Y30LB02*/
*   IF TYPE(1) ^= 'MNT' THEN IF TYPE(1) ^= 'DMNT' THEN     /*@ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE='' THEN      /*IS THE TYPE PARM NULL?        @Y30LB02*/
*         ANS MSG('  ICB600I - TYPE MUST BE '××
*                 'SPECIFIED ')SKIP;                       /*@Y30LB02*/
*       ELSE                                               /*@Y30LB02*/
*         ANS MSG('  ICB601I - TYPE IS INCORRECTLY '××
*                 'SPECIFIED')SKIP;                        /*@ZA28964*/
*       RETCODE=12;          /*SET RETURN CODE TO 12         @ZA28964*/
*       GO TO FINISH;        /*BRANCH TO FINISH              @ZA28964*/
*     END;                                                 /*@ZA28964*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*        LIST FORM                                         @Y30LB02*/
*/********************************************************** @Y30LB02*/
*   IF MF(1) ^= 'L' THEN     /*REQUEST NOT FOR LIST FORM     @Y30LB02*/
*        GO TO CKFORM;       /*BRANCH, CK FOR EXECUTE        @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF MF(2) = '' THEN       /*LIST FORM, NAME ^ SPECIFIED   @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       ANS MSG('  ICB602I - A NAME FOR THE '××
*               'REQUEST BLOCK MUST BE SPECIFIED IN '××
*               'MF(2) ')SKIP;                             /*@ZA28964*/
*       RETCODE=12;          /*SET RETURN CODE TO 12         @ZA28964*/
*       GO TO FINISH;        /*BRANCH TO FINISH              @ZA28964*/
*     END;                                                 /*@ZA28964*/
*/*                                                          @Y30LB02*/
*   IF FLAGS ××              /*FLAGS SPECIFIED?              @ZA28964*/
*     VOLID ××               /*VOLID SPECIFIED?              @ZA28964*/
*     VUA ××                 /*VUA SPECIFIED?                @ZA28964*/
*     MEXTN ××               /*MEXTN SPECIFIED?              @G18MB04*/
*     HOSTID ××              /*HOST ID SPECIFIED?            @ZA28964*/
*     ECB ××                 /*ECB SPECIFIED?                @ZA28964*/
*     MJFCB ^= '' THEN       /*MJFCB SPECIFIED?              @G18MB04*/
*       DO;                  /*PRINT WARNING MESSAGE         @Y30LB02*/
*         RETCODE = 4;       /*SET RETURN CODE TO 4          @Y30LB02*/
*         ANS MSG('  ICB603I - WARNING-ONLY MF'××
*                 ' AND TYPE PARAMETERS ARE VALID FOR'××
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/
*       END;                                               /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF MF(3) = '' THEN      /*PLS ATTRIBUTE ^ SPECIFIED      @Y30LB02*/
*     DO;                   /*PRINT REQUEST BLOCK            @Y30LB02*/
*       IF TYPE(1)='MNT' THEN /*REQUEST FOR MOUNT?           @Y30LB02*/
*         GO TO LMNTINT;     /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  THEN GO TO FINISH           @ZA28964*/
*       ELSE                                               /*@ZA28964*/
*         GO TO LDMTINT;     /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  THEN GO TO FINISH           @ZA28964*/
*     END;                                                 /*@Y30LB02*/
*   ELSE                                                   /*@Y30LB02*/
*     DO;                    /* PLS ATTRIBUTE SPECIFIED      @Y30LB02*/
*       IF TYPE(1)='MNT' THEN   /*MOUNT REQUEST?             @Y30LB02*/
*         GO TO LMNTUN;      /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  THEN GO TO FINISH           @ZA28964*/
*       ELSE                 /*PROCESS DEMOUNT REQ BLK       @Y30LB02*/
*         GO TO LDMTUN;      /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  THEN GO TO FINISH           @ZA28964*/
*     END;                                                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*          EXECUTE FORM                                    @Y30LB02*/
*/********************************************************** @Y30LB02*/
*CKFORM:
*   IF MF(1) ^= 'E' THEN     /* EXECUTE FORM SPECIFIED?      @Y30LB02*/
*     GO TO SFORM;           /*BRANCH, CK  STANDARD FORM     @Y30LB02*/
*   IF MF(2)='' THEN         /* IS 2ND SUB-PARM SPECIFIED?   @Y30LB02*/
*     DO;                    /*PRINT OUT ERROR MESSAGE       @Y30LB02*/
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN'××
*                ' REQ BLK NAME IF EXEC'××
*                ' MACRO FORM REQUESTED')SKIP;             /*@Y30LB02*/
*        RETCODE=12;         /*SET RETURN CODE TO 12         @ZA28964*/
*        GO TO FINISH;                                     /*@ZA28964*/
*     END;                   /*                              @Y30LB02*/
*/*                                                          @Y30LB02*/
*   GO TO EMNTDMT;           /* CALL ANSWER TEXT BLOCK       @ZA28964*/
*                            /*  THEN GO TO EMNTDMTR         @ZA28964*/
*/*                                                          @ZA28964*/
*EMNTDMTR:                                                 /*@ZA28964*/
*   IF MF(3) = 'COMPLETE' THEN /*COMPLETE SPECIFIED?         @ZA28964*/
*     ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';/*ZERO'××
*         ' OUT BLOCK @Y30LB02*/')SKIP;
*   IF TYPE(1) = 'MNT' THEN /*MOUNT REQUEST?                 @Y30LB02*/
*     DO;                      /*MOUNT OPCD AND LEN          @Y30LB02*/
*       ANS('MDLEN='××QUOTE(MLEN)××'X;/*LENGTH OF '××
*           'MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
*       ANS('MDOPCD='××QUOTE(MOPCD)××'X;/*MOUNT'××
*           ' OPCODE @Y30LB02*/')SKIP;
*       GO TO COMPROC;         /*BRANCH, CK PARAMETERS       @Y30LB02*/
*     END;                     /*                            @Y30LB02*/
*   ELSE                       /*DEMOUNT LEN AND OPCD        @Y30LB02*/
*     DO;                      /*PUT OUT LEN AND OPCD        @Y30LB02*/
*       ANS('DMLEN='××QUOTE(DLEN)××'X;/*LENGTH OF '××
*           'DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
*       ANS('DMOPCD='××QUOTE(DOPCD)××'X;/*DEMOUNT'××
*          ' OPCODE @Y30LB02*/')SKIP;
*       GO TO COMPROC;         /*BRANCH, CK PARAMETERS       @Y30LB02*/
*     END;                     /*                            @Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*           STANDARD FORM                                  @Y30LB02*/
*/********************************************************** @Y30LB02*/
*SFORM:
*   IF MF(1) ^= '' THEN       /* FORM STANDARD?              @Y30LB02*/
*     DO;                     /*PRINT ERROR MESSAGE          @Y30LB02*/
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'××
*                ' SPECIFIED, MUST BE L, E, OR NULL')SKIP; /*@Y30LB02*/
*        RETCODE=12;          /*SET RETURN CODE TO 12        @Y30LB02*/
*        GO TO FINISH;                                     /*@ZA28964*/
*     END;                                                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF VOLID = '' THEN IF TYPE(1) = 'DMNT' THEN            /*@ZA28964*/
*     DO;                   /*PRINT ERROR MESSAGE            @Y30LB02*/
*        RETCODE = 12;      /*SET RETURN CODE TO 12          @Y30LB02*/
*        ANS MSG('  ICB610I - VOLID MUST BE SPECIFIED '××
*                'FOR STANDARD FORM MACRO')SKIP;           /*@Y30LB02*/
*        GO TO FINISH;                                     /*@ZA28964*/
*     END;                                                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF VUA = '' THEN IF TYPE(1) = 'MNT' THEN               /*@Y30LB02*/
*     DO;                       /*PRINT ERROR MSG            @Y30LB02*/
*        RETCODE = 12;          /*SET RETURN CODE TO 12      @Y30LB02*/
*        ANS MSG('  ICB611I - VUA MUST BE SPECIFIED FOR '××
*                'STANDARD FORM MACRO')SKIP;               /*@Y30LB02*/
*        GO TO FINISH;                                     /*@ZA28964*/
*     END;                                                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF TYPE(1) = 'MNT' THEN       /*MOUNT REQUEST?           @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF MNTTEST => 1 THEN      /*STD FORM INVOKED BEFORE  @ZA28964*/
*         GO TO SSMNT;            /* CALL ANSWER TEXT BLOCK  @Y30LB02*/
*                                 /* THEN GO TO COMPROC      @ZA28964*/
*       ELSE                 /*FIRST INVOCATION              @ZA28964*/
*         DO;                     /*PUT OUT DECLARES         @ZA28964*/
*           MNTTEST = 1;          /*SET STD FORM CTR         @ZA28964*/
*           GO TO SIMNT;         /* CALL ANSWER TEXT BLOCK   @ZA28964*/
*                                /*  THEN GO TO COMPROC      @ZA28964*/
*         END;                                             /*@Y30LB02*/
*     END;                   /* MOUNT REQUEST                @Y30LB02*/
*   ELSE                     /* DEMOUNT REQUEST              @Y30LB02*/
*     DO;                                                  /*@Y30LB02*/
*       IF DMTTEST => 1 THEN /*DMNT STD FM INVOKED BEFORE ?  @Y30LB02*/
*         GO TO SSDMT;      /*CALL ANSWER TEXT BLOCK         @Y30LB02*/
*                           /*  THEN GO TO COMPROC           @ZA28964*/
*       ELSE           /*PUT OUT DECLARES FOR STD FM         @Y30LB02*/
*         DO;          /*DECLARES FOR DEMOUNT                @Y30LB02*/
*           DMTTEST = 1;     /*SET DMNT STDFM FLAG           @Y30LB02*/
*           GO TO SIDMT;     /* CALL ANSWER TEXT BLOCK       @Y30LBO2*/
*                            /*  THEN GO TO COMPROC          @ZA28964*/
*         END;                                             /*@Y30LB02*/
*    END;                                                  /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/********************************************************** @Y30LB02*/
*/*   FILL IN STANDARD AND EXECUTE FORM PARAMETERS           @ZA28964*/
*/********************************************************** @Y30LB02*/
*COMPROC:                                                  /*@ZA28964*/
*   IF FLAGS^='' THEN    /*FLAGS SPECIFIED?                  @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE(1) = 'DMNT' THEN /*DEMOUNT REQUEST?          @ZA28964*/
*         ANS('DMNTFLAG=' ××FLAGS×× '; /*FLAGS @Y30LB02*/')SKIP;
*       ELSE             /*PUT FLAGS IN REQ BLOCK            @ZA28964*/
*         ANS('MDFLG=' ××FLAGS×× '; /*FLAGS @Y30LB02*/')SKIP;
*     END;                                                 /*@ZA28964*/
*/*                                                          @Y30LB02*/
*   IF VOLID ^= '' THEN        /*VOLID SPECIFIED?            @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE(1) = 'MNT' THEN  /*MOUNT REQUEST?            @ZA28964*/
*         ANS('MDVOL=' ××VOLID××';/*VALUE OF VOLID @Y30LB02*/')SKIP;
*       ELSE                  /*DEMOUNT REQUEST              @ZA28964*/
*         ANS('DMVOL=' ××VOLID×× '; /*VALUE OF VOLID @Y30LB02*/')SKIP;
*     END;                                                 /*@ZA28964*/
*/*                                                          @Y30LB02*/
*   IF VUA ^= '' THEN             /*VUA SPECIFIED?           @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE(1)='DMNT' THEN    /*TEST FOR DEMOUNT         @ZDR2048*/
*         DO;                     /*DEMOUNT REQUEST          @ZDR2048*/
*           ANS('DMNTVUA=' ××VUA×× '; /*FILL VUA @ZDR2048*/')SKIP;
*           ANS('DMVUAVAL='××QUOTE(VUAVAL)××'B;/* OR ON'××
*               ' THE VUA VALID ATTRIBUTE FLAG @ZDR2048*/')SKIP;
*         END;                    /*                         @ZDR2048*/
*       ELSE                  /*PUT VUA IN BLOCK FOR MNT     @ZDR2048*/
*         ANS('MDVUA=' ××VUA×× '; /*VALUE OF VUA    @Y30LB02*/')SKIP;
*     END;                                                 /*@ZA28964*/
*/*                                                          @Y30LB02*/
*   IF HOSTID ^= '' THEN     /*HOSTID SPECIFIED              @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE(1) = 'MNT' THEN  /*IS THE TYPE MOUNT?        @Y30LB02*/
*         ANS('MDHOST='××HOSTID××';/*FILL IN HOSTID @Y30LB02*/')SKIP;
*       ELSE                                               /*@ZA28964*/
*         ANS('DMHOST='××HOSTID××';/*FILL IN HOSTID @Y30LB02*/')SKIP;
*     END;                                                 /*@ZA28964*/
*/*                                                          @ZA28964*/
*   IF ECB ^= '' THEN                                      /*@ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE(1) = 'DMNT' THEN                           /*@ZA28964*/
*         ANS('DMNTECB =ADDR'××ECB××';/*ADDRESS OF THE EVENT'××
*             'CONTROL BLOCK @Y30LB02*/')SKIP;
*       ELSE                 /* TYPE MUST BE MOUNT           @ZA28964*/
*         DO;                                              /*@ZA28964*/
*           RETCODE = 4;                                   /*@ZA28964*/
*           ANS MSG('  ICB618I - WARNING - ECB PARAMETER ' ××
*                   'VALID ONLY FOR DEMOUNT REQUEST')SKIP; /*@ZA28964*/
*         END;                                             /*@ZA28964*/
*     END;                                                 /*@ZA28964*/
*/*                                                          @ZA28964*/
*   IF MEXTN ×× MJFCB ^= '' THEN   /* MEXTN, MJFCB GIVEN     @ZA28964*/
*     DO;                                                  /*@ZA28964*/
*       IF TYPE(1) = 'DMNT' THEN  /* ILLEGAL PARAMETER       @ZA28964*/
*         DO;                                              /*@ZA28964*/
*           RETCODE = 4;                                   /*@ZA28964*/
*           ANS MSG('  ICB619I - WARNING - MEXTN/MJFCB ' ××
*                   'PARAMETER VALID ONLY FOR MOUNT REQUEST')SKIP;
*         END;                                             /*@ZA28964*/
*       ELSE                 /* MOUNT REQUEST                @ZA28964*/
*         DO;                                              /*@ZA28964*/
*           IF MEXTN ^= '' THEN                            /*@ZA28964*/
*             DO;            /* PROCESS MOUNT EXTENSION      @G18MB04*/
*               ANS('MNTEXTP=ADDR' ×× MEXTN ××
*                   ';/*FILL IN MEXTN @G18MB04*/')SKIP;
*               ANS('MDMEXT='××QUOTE(MEXTVAL)××'B;/* SET'××
*                   ' THE MOUNT EXT PROVIDED BIT @G18MB04*/')SKIP;
*             END;           /* END PROCESS MOUNT EXTENSION  @G18MB04*/
*           ELSE             /* PROCESS MOUNT JFCB           @ZA28964*/
*             ANS('MDJFCB=ADDR' ×× MJFCB ××
*                 ';/*FILL MDJFCB @G18MB04*/')SKIP;
*         END;                                             /*@ZA28964*/
*     END;                                                 /*@ZA28964*/
*EXIT:
*   ANS('SVC  (126);/*INVOKE THE MSSC SVC  @Y30LB02*/')SKIP;
*   ANS('RFY  MDREG1 UNRSTD;/*UNREST REG 1 @Y30LB02*/')SKIP;
*   GO TO FINISH;            /* SKIP OVER THE ANSWER TEXTS   @ZA28964*/
*/*                                                          @ZA28964*/
*/********************************************************** @Y30LB02*/
*/*          MACRO ANSWER TEXT - EACH BLOCK IS INVOKED       @ZA28964*/
*/*          AT ONLY ONE POINT IN THE MACRO                  @ZA28964*/
*/********************************************************** @Y30LB02*/
*  LMNTINT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3    77/12/15 '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('DCL 1 ' ××MF(2)×× '  STATIC LOCAL,'××
*     ' /*MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
* ANS('    2  MDLEN  FIXED(31)INIT('××QUOTE('1C')××
*     'X),/*LENGTH 0F REQ BLOCK @Y30LB02*/')SKIP;
* ANS('    2  MDOPCD FIXED(8)INIT('××QUOTE('08')××
*     'X),/*MOUNT OPCODE @Y30LB02*/')SKIP;
* ANS('    2  MNTRES1 CHAR(1)INIT('××QUOTE('00')××
*     'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;
* ANS('    2  MDFLG BIT(16)INIT('××QUOTE
*     ('0000000000000000')××'B), /*FLAGS AREA @Y30LB02*/')SKIP;
* ANS('    3  * BIT(1), /*RESERVED '××
*     ' @YD00125*/')SKIP;
* ANS('    3  MDVISMNT BIT(1), /*MSVC ISSUING'××
*     ' THE MOUNT @Y30LB02*/')SKIP;
* ANS('    3  MDVSVRQ BIT(1), /*MSVC SECONDARY'××
*     ' VOLUME REQUEST @Y30LB02*/')SKIP;
* ANS('    3  MDSRTCH BIT(1), /*SCRATCH'××
*     '  @Y30LB02*/')SKIP;
* ANS('    3  MDMEXT  BIT(1), /*MOUNT EXTENSION'××
*     '  @G18MB04*/')SKIP;
* ANS('    3  *      BIT(11),'××
*     ' /* RESERVED BITS @G18MB04*/')SKIP;
* ANS('    2  MDVOL  CHAR(6) , /*VOLID @Y30LB02*/')SKIP;
* ANS('     3  *(6) CHAR(1)INIT((6)'××QUOTE
*     ('00')××'X),/*INIT VOLID AREA TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  MDVUA  FIXED(15)INIT(0), /*VIRTUAL'××
*     ' UNIT ADDRESS @Y30LB02*/')SKIP;
* ANS('    2  MDHOST CHAR(5),/*5-BYTES HOSTID '××
*     'AREA @Y30LB02*/')SKIP;
* ANS('     3  *(5) CHAR(1) INIT((5)'××QUOTE
*     ('00')××'X),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;
* ANS('    2  MNTRES2  CHAR(3) INIT('××QUOTE
*     ('')××'B),/*INIT RESERVED AREA  @Y30LB02*/')SKIP;
* ANS('    2  MNTEXTP PTR(31)INIT(0), /*ADDRESS'××
*     ' OF MOUNT LIST EXTENSION @G18MB04*/')SKIP;
* ANS('     3  MDJFCB PTR(31); /* ADDRESS'××
*     ' OF JFCB @ZA28964*/')SKIP;
* ANS('DCL MNTLEN FIXED(31) DEF(MDLEN), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTOPCD FIXED(8) DEF(MDOPCD), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTFLAGS BIT(16) DEF(MDFLG), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTVOLID CHAR(6) DEF(MDVOL), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTVUA FIXED(15) DEF(MDVUA), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTHOSTD CHAR(5) DEF(MDHOST), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTJFCB FIXED(31) DEF(MDJFCB); /*BAL LABEL @ZA28964*/')SKIP;
*        GO TO FINISH;                                     /*@ZA28964*/
*/*                                                          @ZA28964*/
*  LDMTINT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3  77/12/15   '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('DCL 1 ' ××MF(2)×× '  STATIC LOCAL,'××
*     ' /*DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
* ANS('    2  DMLEN  FIXED(31)INIT('××QUOTE('1C')××
*     'X),/*LENGTH DEMOUNT REQUEST BLK @Y30LB02*/')SKIP;
* ANS('    2  DMOPCD FIXED(8)INIT('××QUOTE('06')××
*     'X),/*DEMOUNT OPCODE @Y30LB02*/')SKIP;
* ANS('    2  DMNTRES1  CHAR(1)INIT('××QUOTE
*     ('00')××'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  DMNTFLAG BIT(16)INIT('××QUOTE
*     ('0000000000000000')××'B), /*FLAGS AREA @Y30LB02*/')SKIP;
* ANS('    3  DMBITRE1 BIT(1), /*ONE'××
*     ' RESERVED BIT @YM02186*/')SKIP;
* ANS('    3  DMDELRSP BIT(1), /*DEMOUNT '××
*     'DELAYED RESPONSE ATTRIBUTE @YM02186*/')SKIP;
* ANS('    3  DMVUAVAL BIT(1), /*DEMOUNT '××
*     'VUA VALID ATTRIBUTE @ZDR2048*/')SKIP;
* ANS('    3  DMBITRES BIT(13), /*THIRTEEN'××
*     ' RESERVED BITS @ZDR2048*/')SKIP;
* ANS('    2  DMVOL CHAR(6) INIT('××QUOTE
*     ('')××'B), /*INIT VOLID TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  DMNTASID  CHAR(2)INIT('××QUOTE
*     ('')××'B),/*INIT ASID AREA TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  DMNTECB  PTR(31)INIT(0), /*DEMOUNT'××
*     ' EVENT CONTROL BLOCK @ZA28964*/')SKIP;
* ANS('    2  DMHOST CHAR(5) INIT('××QUOTE
*     ('')××'B),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;
* ANS('    2  DMNTRES2  CHAR(1)INIT('××QUOTE
*     ('')××'B),/*INIT RESERVED AREA TO ZERO @ZDR2048*/')SKIP;
* ANS('    2  DMNTVUA   FIXED(15)INIT(0); /*VIRTUAL'××
*     ' UNIT ADDRESS @ZDR2048*/')SKIP;
* ANS('DCL DMNTLEN  FIXED(31) DEF(DMLEN), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMVOLID CHAR(6) DEF(DMVOL), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMOPCODE FIXED(8) DEF(DMOPCD),/*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMHOSTID CHAR(5) DEF(DMHOST); /*BAL LABEL @ZA28964*/')SKIP;
*       GO TO FINISH;                                      /*@ZA28964*/
*/*                                                          @ZA28964*/
*  LMNTUN:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('DCL 1 ' ××MF(2)××'  '××MF(3)××','××
*     ' /*MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
* ANS('    2  MDLEN  FIXED(31), /*LENGTH'××
*     ' OF BLOCK = 1C HEX BYTES @Y30LB02*/')SKIP;
* ANS('    2  MDOPCD FIXED(8), /*MOUNT'××
*     ' OPCODE = 08 HEX @Y30LB02*/')SKIP;
* ANS('    2  MNTRES1  CHAR(1),/*RESERVED @Y30LB02*/')SKIP;
* ANS('    2  MDFLG BIT(16) , /*FLAGS AREA @Y30LB02*/')SKIP;
* ANS('    3  * BIT(1), /*RESERVED '××
*     ' @YD00125*/')SKIP;
* ANS('    3  MDVISMNT BIT(1), /*MSVC ISSUING'××
*     ' THE MOUNT @Y30LB02*/')SKIP;
* ANS('    3  MDVSVRQ BIT(1), /*MSVC SECONDARY'××
*     ' VOLUME REQUEST @Y30LB02*/')SKIP;
* ANS('    3  MDSRTCH BIT(1), /*SCRATCH'××
*     '  @Y30LB02*/')SKIP;
* ANS('    3  MDMEXT  BIT(1), /*MOUNT EXTENSION'××
*     '  @G18MB04*/')SKIP;
* ANS('    3  *      BIT(11),'××
*     ' /* RESERVED BITS @YD00125*/')SKIP;
* ANS('    2  MDVOL  CHAR(6) , /*VOLID @Y30LB02*/')SKIP;
* ANS('    2  MDVUA  FIXED(15), /*VIRTUAL'××
*     ' UNIT ADDRESS @Y30LB02*/')SKIP;
* ANS('    2  MDHOST CHAR(5),/*5-BYTES HOSTID '××
*     'AREA @Y30LB02*/')SKIP;
* ANS('    2  MNTRES2  CHAR(3) , /*RESERVED @Y30LB02*/')SKIP;
* ANS('    2  MNTEXTP PTR(31), /*ADDRESS'××
*     ' OF MOUNT LIST EXTENSION @G18MB04*/')SKIP;
* ANS('     3  MDJFCB PTR(31); /* ADDRESS'××
*     ' OF JFCB @ZA28964*/')SKIP;
* ANS('DCL MNTLEN FIXED(31) DEF(MDLEN), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTOPCD FIXED(8) DEF(MDOPCD), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTFLAGS BIT(16) DEF(MDFLG), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTVOLID CHAR(6) DEF(MDVOL), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTVUA FIXED(15) DEF(MDVUA), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTHOSTD CHAR(5) DEF(MDHOST), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTJFCB FIXED(31) DEF(MDJFCB); /*BAL LABEL @ZA28964*/')SKIP;
*        GO TO FINISH;                                     /*@ZA28964*/
*/*                                                          @ZA28964*/
*  LDMTUN:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3    77/12/15 '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('DCL 1 ' ××MF(2)××'  '××MF(3)××','××
*     ' /*DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
* ANS('    2  DMLEN  FIXED(31),/*LENGTH OF'××
*     ' DEMOUNT REQ BLK = 1C HEX BYTES @Y30LB02*/')SKIP;
* ANS('    2  DMOPCD FIXED(8),/*DEMOUNT'××
*     ' OPCODE = 06 HEX @Y30LB02*/')SKIP;
* ANS('    2  DMNTRES1 CHAR(1), /*RESERVED @Y30LB02*/')SKIP;
* ANS('    2  DMNTFLAG BIT(16),/*FLAGS AREA @Y30LB02*/')SKIP;
* ANS('    3  DMBITRE1 BIT(1), /*ONE'××
*     ' RESERVED BIT @YM02186*/')SKIP;
* ANS('    3  DMDELRSP BIT(1), /*DEMOUNT '××
*     'DELAYED RESPONSE ATTRIBUTE @YM02186*/')SKIP;
* ANS('    3  DMVUAVAL BIT(1), /*DEMOUNT '××
*     'VUA VALID ATTRIBUTE @ZDR2048*/')SKIP;
* ANS('    3  DMBITRES BIT(13), /*THIRTEEN'××
*     ' RESERVED BITS @ZDR2048*/')SKIP;
* ANS('    2  DMVOL CHAR(6), /* VOLID FIELD @Y30LB02*/')SKIP;
* ANS('    2  DMNTASID CHAR(2), /*ASID AREA @Y30LB02*/')SKIP;
* ANS('    2  DMNTECB  PTR(31),/*DEMOUNT'××
*     ' EVENT CONTROL BLOCK @ZA28964*/')SKIP;
* ANS('    2  DMHOST CHAR(5),/*5-BYTE HOSTID '××
*     'AREA @Y30LB02*/')SKIP;
* ANS('    2  DMNTRES2 CHAR(1), /*RESERVED @ZDR2048*/')SKIP;
* ANS('    2  DMNTVUA  FIXED(15); /*VIRTUAL'××
*     ' UNIT ADDRESS @ZDR2048*/')SKIP;
* ANS('DCL DMNTLEN  FIXED(31) DEF(DMLEN), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMVOLID CHAR(6) DEF(DMVOL), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMOPCODE FIXED(8) DEF(DMOPCD),/*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMHOSTID CHAR(5) DEF(DMHOST); /*BAL LABEL @ZA28964*/')SKIP;
*        GO TO FINISH;                                     /*@ZA28964*/
*/*                                                          @ZA28964*/
*  EMNTDMT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC MOUNT/DEMOUNT MACRO         '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*     '               @Y30LB02*/')SKIP;
* ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
* ANS('MDREG1= ADDR('××MF(2)××'); /*R1'××
*     ' PTR TO REQ BLOCK @Y30LB02*/')SKIP;
* GO TO EMNTDMTR;            /* RETURN TO CALLING POINT      @ZA28964*/
*/*                                                          @ZA28964*/
* SSMNT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
* ANS('MDREG1=ADDR(MDLEN);/*PTR TO LIST @Y30LB02*/')SKIP;
* GO TO COMPROC;                 /* GO FILL IN BLOCK         @ZA28964*/
*/*                                                          @ZA28964*/
* SIMNT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE STANDARD FORM - MOUNT MACRO   '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
* ANS('MDREG1=ADDR(MDLEN);/*R1 PTR TO REQBLK @Y30LB02*/')SKIP;
* ANS('DCL 1  ICBMLST  STATIC LOCAL,'××
*     ' /*MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
* ANS('    2  MDLEN  FIXED(31)INIT('××QUOTE('1C')××
*     'X),/*LENGTH OF MOUNT REQ BLK @Y30LB02*/')SKIP;
* ANS('    2  MDOPCD FIXED(8)INIT('××QUOTE('08')××
*     'X),/*MOUNT OPCODE @Y30LB02*/')SKIP;
* ANS('    2  *    CHAR(1) INIT('××QUOTE('00')××
*     'X) ,/*RESERVED @Y30LB02*/')SKIP;
* ANS('    2  MDFLG BIT(16)INIT('××QUOTE
*     ('0000000000000000')××'B),/*FLAGS AREA @Y30LB02*/')SKIP;
* ANS('    3  * BIT(1), /* RESERVED '××
*     ' @YD00125*/')SKIP;
* ANS('    3  MDVISMNT BIT(1), /*MSVC ISSUING'××
*     ' THE MOUNT @Y30LB02*/')SKIP;
* ANS('    3  MDVSVRQ BIT(1), /*MSVC SECONDARY'××
*     ' VOLUME REQUEST @Y30LB02*/')SKIP;
* ANS('    3  MDSRTCH BIT(1), /*SCRATCH'××
*     '  @Y30LB02*/')SKIP;
* ANS('    3  MDMEXT  BIT(1), /*MOUNT EXTENSION'××
*     '  @G18MB04*/')SKIP;
* ANS('    3  *      BIT(11),'××
*     ' /*RESERVE BITS OF ZERO @Y30LB02*/')SKIP;
* ANS('    2  MDVOL CHAR(6),/*VOLUME ID @Y30LB02*/')SKIP;
* ANS('     3  *(6) CHAR(1) INIT((6)'××QUOTE
*     ('00')××'X),/*INIT VOLID AREA TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  MDVUA  FIXED(15) INIT(0),/*VIRTUAL '××
*     'UNIT ADDRESS @Y30LB02*/')SKIP;
* ANS('    2  MDHOST CHAR(5),/*5-BYTE HOSTID '××
*     'AREA @Y30LB02*/')SKIP;
* ANS('     3  *(5) CHAR(1) INIT((5)'××QUOTE
*     ('00')××'X),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;
* ANS('    2  * CHAR(3),/*2-BYTE RESERVED '××
*     'AREA @Y30LB02*/')SKIP;
* ANS('     3  *(3) CHAR(1) INIT((3)'××QUOTE
*     ('00')××'X),/*INIT RESERVED AREA  @Y30LB02*/')SKIP;
* ANS('    2  MNTEXTP PTR(31) INIT(0),/*ADDRESS '××
*     'OF MOUNT LIST EXTENSION @G18MB04*/')SKIP;
* ANS('     3  MDJFCB PTR(31); /* ADDRESS'××
*     ' OF JFCB @ZA28964*/')SKIP;
* ANS('DCL MNTLEN FIXED(31) DEF(MDLEN), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTOPCD FIXED(8) DEF(MDOPCD), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTFLAGS BIT(16) DEF(MDFLG), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTVOLID CHAR(6) DEF(MDVOL), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTVUA FIXED(15) DEF(MDVUA), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTHOSTD CHAR(5) DEF(MDHOST), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  MNTJFCB FIXED(31) DEF(MDJFCB); /*BAL LABEL @ZA28964*/')SKIP;
*        GO TO COMPROC;          /* GO FILL IN BLOCK         @ZA28964*/
*/*                                                          @ZA28964*/
* SSDMT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
* ANS('MDREG1=ADDR(DMLEN);/*PTR TO REQ BLK @Y30LB02*/')SKIP;
* GO TO COMPROC;                 /* GO FILL IN BLOCK         @ZA28964*/
*/*                                                          @ZA28964*/
* SIDMT:
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '××
*     'LEVEL 04       @ZA28964*/')SKIP;
* ANS('/*THIS IS THE STANDARD FORM - DEMOUNT MACRO '××
*     '               @Y30LB02*/')SKIP;
* ANS('/*******************************************'××
*     '************** @Y30LB02*/')SKIP;
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
* ANS('MDREG1=ADDR(DMLEN);/*R1 PTR TO LIST @Y30LB02*/')SKIP;
* ANS('DCL 1 ICBDMLST  STATIC LOCAL,'××
*     ' /*DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;
* ANS('    2 DMLEN  FIXED(31)INIT('××QUOTE('1C')××
*     'X),/*LENGTH OF DEMOUNT BLOCK @Y30LB02*/')SKIP;
* ANS('    2 DMOPCD FIXED(8)INIT('××QUOTE('06')××
*     'X),/*DEMOUNT OPCODE @Y30LB02*/')SKIP;
* ANS('    2  DMNTRES1  CHAR(1)INIT('××QUOTE
*     ('00')××'X),/*INIT RESERVED AREA TO ZERO @YM02186*/')SKIP;
* ANS('    2  DMNTFLAG BIT(16)INIT('××QUOTE
*     ('0000000000000000')××'B), /*FLAGS AREA @YM02186*/')SKIP;
* ANS('    3  DMBITRE1 BIT(1), /*ONE'××
*     ' RESERVED BIT @YM02186*/')SKIP;
* ANS('    3  DMDELRSP BIT(1), /*DEMOUNT '××
*     'DELAYED RESPONSE ATTRIBUTE @Y30LB02*/')SKIP;
* ANS('    3  DMVUAVAL BIT(1), /*DEMOUNT '××
*     'VUA VALID ATTRIBUTE @ZDR2048*/')SKIP;
* ANS('    3  DMBITRES BIT(13), /*THIRTEEN'××
*     ' RESERVED BITS @ZDR2048*/')SKIP;
* ANS('    2  DMVOL CHAR(6) INIT('××QUOTE
*     ('')××'B), /*INIT VOLID TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  DMNTASID  CHAR(2)INIT('××QUOTE
*     ('')××'B),/*INIT ASID AREA TO ZERO @Y30LB02*/')SKIP;
* ANS('    2  DMNTECB  PTR(31)INIT(0), /*DEMOUNT'××
*     ' EVENT CONTROL BLOCK @ZA28964*/')SKIP;
* ANS('    2  DMHOST CHAR(5) INIT('××QUOTE
*     ('')××'B),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;
* ANS('    2  DMNTRES2  CHAR(1)INIT('××QUOTE
*     ('')××'B),/*INIT RESERVED AREA TO ZERO @ZDR2048*/')SKIP;
* ANS('    2  DMNTVUA   FIXED(15)INIT(0); /*VIRTUAL'××
*     ' UNIT ADDRESS @ZDR2048*/')SKIP;
* ANS('DCL DMNTLEN  FIXED(31) DEF(DMLEN), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMVOLID CHAR(6) DEF(DMVOL), /*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMOPCODE FIXED(8) DEF(DMOPCD),/*BAL LABEL @ZA28964*/')SKIP;
* ANS('  DMHOSTID CHAR(5) DEF(DMHOST); /*BAL LABEL @ZA28964*/')SKIP;
*        GO TO COMPROC;          /* GO FILL IN BLOCK         @ZA28964*/
*/*                                                          @ZA28964*/
*/*                                                          @Y30LB02*/
*FINISH:  RETURN CODE(RETCODE);    /*SET RETURN CODE         @Y30LB02*/
*         %END;                                            /*@Y30LB02*/
