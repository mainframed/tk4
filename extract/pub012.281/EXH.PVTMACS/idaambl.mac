 /********************************************************************/
 /*                                                                  */
 /*   MACRO NAME = IDAAMBL                                           */
 /*                                                                  */
 /*   DESCRIPTIVE NAME = ACCESS METHOD BLOCK LIST.                   */
 /*                                                                  */
 /*   FUNCTION = THE AMBL DESCRIBES A VSAM CLUSTER AND POINTS TO THE */
 /*              CLUSTER'S DATA SET AND INDEX AMB'S. WHEN THE CLUSTER*/
 /*              IS OPENED, AN AMBL IS BUILT TO DESCRIBE THE CLUSTER.*/
 /*              IF THE CLUSTER IS SHARED WITH OTHER USERS, THE      */
 /*              EXISTING AMB'S ADDRESSES ARE PUT INTO THE AMBL.     */
 /*                                                                  */
 /*   CONTROL BLOCK STRUCTURE = THE AMBL IS POINTED TO BY AN ACB     */
 /*                             (ACBAMBL).                           */
 /*                                                                  */
 /*   INCLUDED MACROS = NONE                                         */
 /*                                                                  */
 /*   METHOD OF ACCESS = PL/S - RESPECIFY IDAAMBL BASED.             */
 /*                                                                  */
 /*   CREATED BY: VSAM OPEN MODULE IDA0192F.                         */
 /*                                                                  */
 /*   STATUS = VS1 RELEASE 4, VS2 RELEASE 3,  (CHANGE FLAGS @X04SVXX)*/
 /*                                                                  */
 /*   DATE OF LAST CHANGE = 29/07/75                         @Z40WSRL*/
 /*                                                                  */
 /********************************************************************/
         DCL 1 IDAAMBL BASED,
               2 AMBLPCHN     PTR(31),  /* PRIMARY CHAIN POINTER    */
               2 AMBLSCHN     PTR(31),  /* SECONDARY CHAIN POINTER  */
               2 AMBLACB      PTR(31),  /* POINTER TO ACB           */
               2 AMBLEOV      FIXED(31),/* EOV/RM INTERFACE         */
                 3 AMBLEFLG   CHAR(1),  /* EOV FLAGS                */
                   4 AMBLWAIT BIT(1),   /* EOV IS WAITING           */
                   4 AMBLESET BIT(1),   /* EOV RESET CONTROL BLOCKS. */
                 3 AMBLCOMP   CHAR(1),  /* EOV LOCK                 */
                 3 *          CHAR(2),  /* NOT USED                 */
               2 AMBLDDNM     CHAR(8),  /* DDNAME FROM ACB          */
                 3 AMBLIDF    CHAR(8),  /* CLUSTER ID        @X04SVLC*/
                   4 AMBLCACB PTR(31)BDY(BYTE),/* CAT ACB    @X04SVLC*/
                   4 AMBLDCI  FIXED(24)BDY(BYTE),/* CI NBR   @X04SVLC*/
                   4 AMBLQ    BIT(8),   /* QUALIFIER         @X04SVLC*/
                    5 AMBLDDC BIT(1),/* DD CONNECT ONLY      @X04SVLC*/
                    5 AMBLGSR BIT(1),/* OPENED FOR GSR       @X04SVLC*/
                    5 AMBLLSR BIT(1),/* OPENED FOR LSR       @X04SVLC*/
                    5 AMBLFSTP BIT(1),/* OPENED FOR FAST PATH
                                                             @X04SVLC*/
                    5 AMBLUBF BIT(1),/* OPENED FOR USER BFR  @X04SVLC*/
                    5 AMBLKSDS BIT(1),/* OPENED AS KSDS      @X04SVLC*/
                    5 AMBLESDS BIT(1),/* OPENED AS ESDS      @X04SVLC*/
                    5 AMBLDFR BIT(1),/* OPENED WITH DEFER OPTION
                                                             @X04SVLC*/
               2 AMBLXPT      PTR(31),  /* PTR FR BASE AMBL TO PATH
                                           AMBL & VICE-VERSA @X04SVLC*/
               2 AMBLVC       FIXED(15),/* VALID AMBL TABLE  @X04SVLC*/
                 3 AMBLVRT    FIXED(8), /* RELATIVE VAT      @X04SVLC*/
                 3 AMBLENO    FIXED(8), /* OFFSET WITHIN VAT @X04SVLC*/
               2 AMBLTYPE     BIT(8),   /* STRUCTURE TYPE    @X04SVLC*/
                 3 AMBLPATH   BIT(1),   /* ACB IS FOR PATH   @X04SVLC*/
                 3 AMBLUPGR   BIT(1),   /* ACB FOR UPGRADE   @X04SVLC*/
                 3 AMBLAIX    BIT(1),   /* ACB FOR AIX END USE-IMPLIES
                                           AMBLBASE ON       @X04SVLC*/
                 3 AMBLBASE   BIT(1),   /* ACB FOR BASE      @X04SVLC*/
                 3 AMBLFIX BIT(1),      /* STRUCTURE FIXED BY
                                           OPEN              @X04SVLC*/
                 3 *          BIT(3),   /* UNUSED            @X04SVLC*/
               2 *            CHAR(1),  /* UNUSED            @X04SVLC*/
               2 AMBLID       CHAR(1),  /* AMBL IDENTIFER           */
               2 AMBLSHAR     BIT(8),   /* SHARING INDICATORS       */
                 3 AMBLPRIM   BIT(1),   /* P-AMBL INDICATOR         */
                 3 AMBLCATO   BIT(1),   /* CATALOG OPEN IND IS ON   */
                 3 AMBLWRIT   BIT(1),   /* OUTPUT/UPDATE SPECIFIED  */
                 3 *          BIT(5),   /* RESERVED                 */
               2 AMBLLEN      PTR(8),   /* AMBL LENGTH              */
               2 AMBLFLG1     BIT(8),   /* FLAG BYTE ONE            */
                 3 AMBLFULL   BIT(1),   /* FULL ACCESS OK           */
                 3 AMBLCINV   BIT(1),   /* CINV ACCESS OK           */
                 3 AMBLUPD    BIT(1),   /* UPDATE ACCESS OK         */
                 3 AMBLVVIC   BIT(1),   /* AMBL FOR VVIC DATA SET
                                                             @X04SVRP*/
                   4 AMBLSDS  BIT(1),   /* AMBL FOR SYSTEM DATA SET
                                                             @Z40WSRL*/
                 3 AMBLSCRA   BIT(1),   /* AMBL FOR SYSTEM CATALOG
                                           RECOVERY AREA     @X04SVRP*/
                 3 AMBLUCRA   BIT(1),   /* AMBL FOR USER CATALOG
                                           RECOVERY AREA     @X04SVRP*/
                 3 AMBLCAT    BIT(1),   /* IND ACB FOR A CATALOG    */
                 3 AMBLDUMY   BIT(1),   /* DD DUMMY SPECIFIED       */
                                        /* TO SIMPLIFY TESTING  FOR  */
                                        /* SPECIAL DATA SETS IN      */
                                        /* EXISTING CODE THE AMBLCAT */
                                        /* AMBLVVIC AND AMBLSCRA     */
                                        /* BITS ARE SET AS FOLLOWS:  */
                                        /* VVIC SCRA X CAT TYPE OF   */
                                        /*                 DATA SET  */
                                        /*   0    0   X 0  CATALOG   */
                                        /*   1    0   X 1  VVIC      */
                                        /*   0    1   X 1  SCRA      */
               2 AMBLFLG2     BIT(8),   /* FLAG BYTE TWO            */
                 3 *          BIT(3),   /* RESERVED          @Z30SSDT*/
                 3 AMBLSTAG   BIT(1),   /* CLUSTER IS STAGED @X04ACPS*/
                 3 *          BIT(4),   /* RESERVED          @X04ACPS*/
               2 AMBLNST      CHAR(1),  /* NUMBER OF STRINGS         */
               2 AMBLNUM      FIXED(15),/* NUMBER OF AMB PTRS IN    */
                                        /* AMBL                     */
               2 *            CHAR(1),  /* RESERVED                 */
               2 AMBLNIDS     PTR(8),   /* NUMBER IF IDS            */
               2 AMBLMIDS(5)  CHAR(2),  /* IDS OF MODULES LOADED    */
               2 AMBLDTA      PTR(31),  /* POINTER TO DATA AMB      */
               2 AMBLIX       PTR(31),  /* POINTER TO INDEX AMB     */
               2 AMBLBIB      PTR(31),  /* PTR TO BIB        @X04SVLC*/
               2 AMBLCMB      PTR(31);  /* PTR TO CMB        @X04SVRP*/
