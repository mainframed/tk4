*        %GOTO PLSDPL;                                               /*
         MACRO
         ISGDPL
**/
*%PLSDPL: ;
*/*  START OF SPECIFICATIONS ****
*
*01*  MACRO-NAME = ISGDPL
*
*01*  MACDATE = 05/05/81
*
*01*  DESCRIPTIVE-NAME = DEQ PURGE LIST
*
*01*  COPYRIGHT =
*                5740-XYN COPYRIGHT IBM CORP 1980,1981,
*                LICENSED MATERIAL-PROGRAM, PROPERTY OF IBM,
*                REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083.
*
*01*  STATUS = OS/VS2 JBB1326
*
*01*  FUNCTION = DEFINES THE DATA REQUIRED TO COMPLETE A SYSID,
*                ASID, OR TCB DEQ PURGE REQUEST. THE DEQ PURGE
*                LIST (DPL) IS USED AS INPUT TO ISGGDEQP AND
*                ISGGQWB5 (ENTRY  POINT IN ISGGQWB0).
*
*01*  METHOD-OF-ACCESS = BAL - DSECT IS PRODUCED REQUIRING A
*                              USING ON THE DPL.
*                        PLS - DPL DECLARED AS A BASED STRUCTURE.
*                              DPLPTR MUST BE DECLARED.
*
*01*  CREATED-BY = CALLERS OF ISGGDEQP AND ISGGQWB5.
*
*02*    SUBPOOL = ANY IN THE GRS ADDRESS  SPACE OR COMMON AREA.
*
*02*    KEY     = 0
*
*02*    SIZE    = 20 BYTES
*
*01*  DELETED-BY = CALLERS OF ISGGDEQP AND ISGGQWB5.
*
*01*  POINTED-TO-BY = POINTER IS MAINTAINED BY USER OF THE MACRO.
*
*01*  SERIALIZATION = ANY - PROVIDED BY THE USER OF THE MACRO.
*
**** END OF SPECIFICATIONS **                                        */
*/*A000000-999999                                            @G387PYC*/
*        %GOTO PLSDPL1;                                              /*
DPL      DSECT
         DS    0F                 DEQ PURGE LIST
DPLTARGT DS    F                  DEQ PURGE TARGET
         ORG   DPLTARGT
DPLSYSID DS    H                  SYSTEM ID TO BE PURGED - VALID ONLY
*                                 FOR SYSID, ASID OR TCB PURGE REQUESTS
DPLASID  DS    H                  ASID TO BE PURGED - VALID ONLY FOR
*                                 ASID OR TCB PURGE REQUESTS.
DPLTCB   DS    A                  TCB TO BE PURGED - VALID ONLY FOR
*                                 TCB PURGE REQUESTS.
DPLRB    DS    A                  DEFINES THE RB TO BE POSTED WHEN
*                                 DPLASYNC=0.
DPLQELQP DS    A                  POINTER TO FIRST QEL ON QEL QUEUE
*                                 TO BE PURGED.
DPLFLAGS DS    2C                 FLAG BYTES
         ORG   DPLFLAGS
DPLPFLGS DS    B                  PROCESS FLAGS FOR ISGGQWB5 ONLY.
DPLASYNC EQU   X'80'              WHEN 1, REPRESENTS AN ASYNCHRONOUS
*                                 REQUEST.
*                                 WHEN 0, REPRESENTS A SYNCHRONOUS
*                                 REQUEST.
DPLLOCKH EQU   X'40'              WHEN 1, CMS ENQ/DEQ CLASS LOCK AND
*                                 GRS LOCAL LOCK HELD ON ENTRY.
*                                 WHEN 0, LOCKS NOT HELD ON ENTRY.
DPLLOCAL EQU   X'20'              WHEN 1, LOCAL RESOURCE PURGE.
*                                 WHEN 0, GLOBAL RESOURCE PURGE.
DPLSVQWB EQU   X'10'              WHEN 1, THE PURGE QWB IS TO BE
*                                 RETURNED IN REGISTER 1.
*                                 WHEN 0, THE CALLED ROUTINE MUST
*                                 FREE THE QWB.
DPLPRSV4 EQU   X'08'              RESERVED
DPLPRSV3 EQU   X'04'              RESERVED
DPLPRSV2 EQU   X'02'              RESERVED
DPLPRSV1 EQU   X'01'              RESERVED
DPLRFLGS DS    B                  REQUEST FLAGS FOR ISGGQWB5 AND
*                                 ISGGDEQP.
DPLRSYID EQU   X'80'              SYSID DEQ PURGE REQUEST.
DPLRASID EQU   X'40'              ASID DEQ PURGE REQUEST.
DPLRTCB  EQU   X'20'              TCB DEQ PURGE REQUEST.
DPLRABMC EQU   X'10'              THE TASK OR ADDRESS SPACE HAS
*                                 TERMINATED IN MUST COMPLETE. NOTE
*                                 THAT WHEN THE DPL IS INPUT TO
*                                 ISGGDEQP, PURGE MESSAGES ARE
*                                 RETURNED IN REGISTER 0. WHEN THE
*                                 DPL IS INPUT TO ISGGQWB5, PURGE
*                                 MESSAGES ARE RETURNED IN
*                                 QWBHMRBQ.
DPLRRSV4 EQU   X'08'              RESERVED
DPLRRSV3 EQU   X'04'              RESERVED
DPLRRSV2 EQU   X'02'              RESERVED
DPLRRSV1 EQU   X'01'              RESERVED
DPLRSV1  DS    CL2                RESERVED
DPLEND   EQU   *                  END OF DPL
         MEND
*                                                                    */
*%PLSDPL1: ;
* DCL 1 DPL BASED(DPLPTR) BDY(WORD),   /* DEQ PURGE LIST             */
*       3 DPLTARGT FIXED(32),          /* DEQ PURGE TARGET           */
*         5 DPLSYSID FIXED(16),        /* SYSTEM ID TO BE PURGED -
*                                         VALID ONLY FOR SYSID, ASID
*                                         OR TCB PURGE REQUESTS      */
*         5 DPLASID  FIXED(16),        /* ASID TO BE PURGED - VALID
*                                         ONLY FOR ASID OR TCB PURGE
*                                         REQUESTS                   */
*       3 DPLTCB   PTR(31),            /* TCB TO BE PURGED - VALID
*                                         ONLY FOR TCB PURGE REQUESTS*/
*       3 DPLRB    PTR(31),            /* DEFINES THE RB TO BE POSTED
*                                         WHEN DPLASYNC=0            */
*       3 DPLQELQP PTR(31),            /* POINTER TO FIRST QEL ON QEL
*                                         QUEUE TO BE PURGED.       */
*       3 DPLFLAGS CHAR(2),            /* FLAG BYTES                */
*         5 DPLPFLGS BIT(8),           /* PROCESS FLAGS FOR ISGGQWB5
*                                         ONLY.                     */
*           7 DPLASYNC BIT(1),         /* WHEN 1, REPRESENTS AN
*                                         ASYNCHRONOUS REQUEST.
*                                         WHEN 0, REPRESENTS A
*                                         SYNCHRONOUS REQUEST        */
*           7 DPLLOCKH BIT(1),         /* WHEN 1, CMS ENQ/DEQ CLASS
*                                         LOCK AND GRS LOCAL LOCK HELD
*                                         ON ENTRY.
*                                         WHEN 0, LOCKS NOT HELD ON
*                                         ENTRY.                     */
*           7 DPLLOCAL BIT(1),         /* WHEN 1, LOCAL RESOURCE PURGE.
*                                         WHEN 0, GLOBAL RESOURCE
*                                         PURGE.                     */
*           7 DPLSVQWB BIT(1),         /* WHEN 1, THE PURGE QWB IS TO
*                                         BE RETURNED IN REGISTER 1.
*                                         WHEN 0, THE CALLED ROUTINE
*                                         MUST FREE THE QWB.         */
*           7 DPLPRSV4 BIT(1),         /* RESERVED                   */
*           7 DPLPRSV3 BIT(1),         /* RESERVED                   */
*           7 DPLPRSV2 BIT(1),         /* RESERVED                   */
*           7 DPLPRSV1 BIT(1),         /* RESERVED                   */
*         5 DPLRFLGS BIT(8),           /* REQUEST FLAGS FOR ISGGQWB5
*                                         AND ISGGDEQP.              */
*           7 DPLRSYID BIT(1),         /* SYSID DEQ PURGE REQUEST    */
*           7 DPLRASID BIT(1),         /* ASID DEQ PURGE REQUEST     */
*           7 DPLRTCB  BIT(1),         /* TCB DEQ PURGE REQUEST      */
*           7 DPLRABMC BIT(1),         /* THE TASK OR ADDRESS SPACE
*                                         HAS TERMINATED IN MUST
*                                         COMPLETE. NOTE THAT WHEN THE
*                                         DPL IS INPUT TO ISGGDEQP,
*                                         PURGE MESSAGES ARE RETURNED
*                                         IN REGISTER 0. WHEN THE DPL
*                                         IS INPUT TO ISGGQWB5, PURGE
*                                         MESSAGES ARE RETURNED IN
*                                         QWBHMRBQ.                  */
*           7 DPLRRSV4 BIT(1),         /* RESERVED                   */
*           7 DPLRRSV3 BIT(1),         /* RESERVED                   */
*           7 DPLRRSV2 BIT(1),         /* RESERVED                   */
*           7 DPLRRSV1 BIT(1),         /* RESERVED                   */
*       3 DPLRSV1 CHAR(2),             /* RESERVED                   */
*       3 DPLEND  CHAR(0);             /* END OF DPL                 */
