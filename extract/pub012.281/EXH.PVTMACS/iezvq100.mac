*%GOTO VQ100PRO;  /*
         MACRO
         IEZVQ100 &DSECT=YES
         SPACE 1  */
*%VQ100PRO: ;
*/********************************************************************/
*/*                                                                  */
*/*                         IEZVQ100                                 */
*/*                                                                  */
*/* COPYRIGHT  -                                             @G81LPSS*/
*/*               5740-XYN COPYRIGHT IBM CORP 1979, 1980,            */
*/*               LICENSED MATERIAL-PROGRAM, PROPERTY OF IBM,        */
*/*               REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER        */
*/*               G120-2-83.                                         */
*/*                                                                  */
*/* STATUS     -  OS/VS2 JBB1126                             @G81LPSS*/
*/*               08/03/79    LEVEL=2                        @G81LPSS*/
*/*                                                                  */
*/* INVOCATION -                                                     */
*/*          BAL  - SPECIFY: IEZVQ100                                */
*/*                 UNLESS A DSECT IS NOT WANTED. IN THAT CASE       */
*/*                 SPECIFY: IEZVQ100 DSECT=NO                       */
*/*          PL/S - SPECIFY: %INCLUDE SYSLIB(IEZVQ100)               */
*/*                 IF IT IS DESIRED THAT THE MAPPING BE BASED       */
*/*                 ON A POINTER, DEFINE A MACRO CHARACTER           */
*/*                 VARIABLE VQ100BAS AND SET IT TO BE THE NAME      */
*/*                 OF THE POINTER TO USE.                           */
*/*                   EX. %DCL VQ100BAS CHAR                         */
*/*                       % VQ100BAS = 'VQ100PTR'                    */
*/*                                                                  */
*/*                 IF THE MAPPING IS NOT TO BE BASED AT ALL,        */
*/*                 DEFINE A MACRO CHARACTER VARIABLE VQ100BAS       */
*/*                 AND SET IT TO 'NONE'.                            */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*          THIS MACRO MAPS THE PARAMETER LIST FOR THE COMM         */
*/*          TASK QUEUE SCANNER MODULE IEAVQ700                      */
*/*                                                                  */
*/* CHANGE ACTIVITY -                                                */
*/*          G741PSS - NEW FOR THIS SUPPORT                  @G741PSS*/
*/*          G741P2L - CHG WORKAREA SIZE                     @G741P2L*/
*/*          G81LPSS - NO CODE CHANGE                        @G81LPSS*/
*/*                                                                  */
*/********************************************************************/
* %GOTO VQ100PLS;                  %/*
         SPACE 1
         IEZBITS ,       SYMBOLIC BIT DEFINITIONS
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').VQ100B1
SCANPARM DSECT           IEAVQ700 PARM LIST
         AGO   .VQ100B2
.VQ100B1 ANOP
         DS    0F
SCANPARM EQU   *         IEAVQ700 PARM LIST
.VQ100B2 ANOP
SCANFUNC DS    0XL3      SEARCH FUNCTION
SCANFC1  DS    XL1       1ST BYTE OF SEARCH FUNCTIONS
SCANMDSC EQU   BIT0      DESCRIPTOR CODE MATCH
SCANMASD EQU   BIT1      ASID MATCH
SCANMTCB EQU   BIT2      JOB STEP TCB MATCH
SCANMMID EQU   BIT3      MSG SEQ ID MATCH
SCANMIDR EQU   BIT4      MSG SEQ ID RANGE MATCH
SCANMTXT EQU   BIT5      MSG TEXT MATCH
SCANRSV1 EQU   BIT6      RESERVED
SCANRSV2 EQU   BIT7      RESERVED
SCANFC2  DS    XL1       2ND BYTE OF SEARCH FUNCTION - RESERVED
SCANFC3  DS    XL1       3RD BYTE OF SEARCH FUNCTION - RESERVED
SCANQUE  DS    XL1       CODE OF QUEUE TO SEARCH
SCANDESC DS    0H        DESCRIPTOR CODES TO MATCH
SCANDBY1 DS    XL1       1ST BYTE OF DESCRIPTOR CODES
SCANDC1  EQU   BIT0      DESCRIPTOR CODE 1
SCANDC2  EQU   BIT1      DESCRIPTOR CODE 2
SCANDC3  EQU   BIT2      DESCRIPTOR CODE 3
SCANDC4  EQU   BIT3      DESCRIPTOR CODE 4
SCANDC5  EQU   BIT4      DESCRIPTOR CODE 5
SCANDC6  EQU   BIT5      DESCRIPTOR CODE 6
SCANDC7  EQU   BIT6      DESCRIPTOR CODE 7
SCANDC8  EQU   BIT7      DESCRIPTOR CODE 8
SCANDBY2 DS    XL1       2ND BYTE OF DESCRIPTOR CODES
SCANDC9  EQU   BIT0      DESCRIPTOR CODE 9
SCANDC10 EQU   BIT1      DESCRIPTOR CODE 10
SCANDC11 EQU   BIT2      DESCRIPTOR CODE 11
SCANDC12 EQU   BIT3      DESCRIPTOR CODE 12 - RESERVED
SCANDC13 EQU   BIT4      DESCRIPTOR CODE 13 - RESERVED
SCANDC14 EQU   BIT5      DESCRIPTOR CODE 14 - RESERVED
SCANDC15 EQU   BIT6      DESCRIPTOR CODE 15 - RESERVED
SCANDC16 EQU   BIT7      DESCRIPTOR CODE 16 - RESERVED
SCANRSV3 DS    CL4       RESERVED
SCANASID DS    CL2       ASID TO MATCH
SCANTCBP DS    A         TCB TO MATCH
SCANMID  DS    F         MSG SEQ ID TO MATCH OR LOW END OF ID RANGE TO X
                         MATCH
SCANMRID DS    F         HIGH END OF ID RANGE TO MATCH
SCANCENT DS    A         ADDR OF ENTRY FOUND OR ZERO
SCANPENT DS    A         ADDR OF PRECEDING ENTRY OR ZERO. IF ENTRY IS  X
                         FOUND AND THIS IS ZERO, ENTRY FOUND IS 1ST    X
                         ON QUEUE
SCANWKPT DS    A         ADDR OF WORK AREA FOR IEAVQ700
SCANLGTH DS    FL1       LENGTH OF TEXT TO MATCH
SCANTEXT DS    CL8       TEXT TO MATCH
SCANRSV4 DS    CL19      RESERVED
         SPACE 1
SCANPMSZ EQU   *-SCANPARM SIZE OF IEAVQ700 PARAMETER LIST
         SPACE 2
***********************************************************************
*                                                                     *
*        WORK AREA FOR IEAVQ700                                       *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').VQ100B3
SCANWRK  DSECT
         DS    CL96      WORK AREA FOR IEAVQ700                @G741P2L
         AGO   .VQ100B4
.VQ100B3 ANOP
         DS    0F
SCANWRK  DS    CL96      WORK AREA FOR IEAVQ700                @G741P2L
.VQ100B4 ANOP
         SPACE 1
SCANWKSZ EQU   *-SCANWRK SIZE OR WORK AREA FOR IEAVQ700
SCANSIZE EQU   SCANPMSZ+SCANWKSZ SIZE OF TOTAL IEAVQ700 PARAMETER LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        CODES FOR QUEUES TO BE SEARCHED                              *
*                                                                     *
***********************************************************************
         SPACE 1
SCANORE  EQU   1         ORE QUEUE
SCANWQE  EQU   2         WQE QUEUE
SCANRMSG EQU   3         RETAINED MSG QUEUE
SCANRIAM EQU   4         RETAINED IMMEDIATE ACTION MSG QUEUE
SCANREAM EQU   5         RETAINED EVENTUAL ACTION MSG QUEUE
SCANMINQ EQU   1         MINIMUM QUEUE NUMBER
SCANMAXQ EQU   5         MAXIMUM QUEUE NUMBER
         MEND            */;
*%VQ100PLS: ;
*   %IF VQ100BAS ^= '' %THEN %GOTO VQ100P1;
*  DCL 1 SCANPARM       BDY(WORD) BASED,/* IEAVQ700 PARM LIST        */
*   %GOTO VQ100P3;
*%VQ100P1: ;
*   %IF VQ100BAS ^= 'NONE' %THEN %GOTO VQ100P2;
*  DCL 1 SCANPARM       BDY(WORD),  /* IEAVA700 PARM LIST            */
*   %GOTO VQ100P3;
*%VQ100P2: ;
*  DCL 1 SCANPARM       BDY(WORD) BASED(VQ100BAS),/* IEAVQ700 PARM LIST
*                                                                    */
*%VQ100P3: ;
*        3 SCANFUNC     BIT(24),    /* SEARCH FUNCTIONS              */
*          5 SCANFC1    BIT(8),     /* 1ST BYTE OF SEARCH FUNCTIONS  */
*            7 SCANMDSC BIT(1),     /* DESCRIPTOR CODE MATCH         */
*            7 SCANMASD BIT(1),     /* ASID MATCH                    */
*            7 SCANMTCB BIT(1),     /* JOB STEP TCB MATCH            */
*            7 SCANMMID BIT(1),     /* MSG SEQ ID MATCH              */
*            7 SCANMIDR BIT(1),     /* MSG SEQ ID RANGE MATCH        */
*            7 SCANMTXT BIT(1),     /* MSG TEXT MATCH                */
*            7 SCANRSV1 BIT(1),     /* RESERVED                      */
*            7 SCANRSV2 BIT(1),     /* RESERVED                      */
*          5 SCANFC2    BIT(8),     /* 2ND BYTE OF SEARCH FUNCTIONS -
*                                      RESERVED                      */
*          5 SCANFC3    BIT(8),     /* 3RD BYTE OF SEARCH FUNCTIONS -
*                                      RESERVED                      */
*        3 SCANQUE      FIXED(8),   /* CODE OF QUEUE TO SEARCH       */
*        3 SCANDESC     BIT(16) BDY(WORD), /* DESCRIPTOR CODES
*                                      TO MATCH                      */
*          5 SCANDBY1   BIT(8),     /* 1ST BYTE OF DESCRIPTOR CODES  */
*            7 SCANDC1  BIT(1),     /* DESCRIPTOR CODE 1             */
*            7 SCANDC2  BIT(1),     /* DESCRIPTOR CODE 2             */
*            7 SCANDC3  BIT(1),     /* DESCRIPTOR CODE 3             */
*            7 SCANDC4  BIT(1),     /* DESCRIPTOR CODE 4             */
*            7 SCANDC5  BIT(1),     /* DESCRIPTOR CODE 5             */
*            7 SCANDC6  BIT(1),     /* DESCRIPTOR CODE 6             */
*            7 SCANDC7  BIT(1),     /* DESCRIPTOR CODE 7             */
*            7 SCANDC8  BIT(1),     /* DESCRIPTOR CODE 8             */
*          5 SCANDBY2   BIT(8),     /* 2ND BYTE OF DESCRIPTOR CODES  */
*            7 SCANDC9  BIT(1),     /* DESCRIPTOR CODE 9             */
*            7 SCANDC10 BIT(1),     /* DESCRIPTOR CODE 10            */
*            7 SCANDC11 BIT(1),     /* DESCRIPTOR CODE 11            */
*            7 SCANDC12 BIT(1),     /* DESCRIPTOR CODE 12 - RESERVED */
*            7 SCANDC13 BIT(1),     /* DESCRIPTOR CODE 13 - RESERVED */
*            7 SCANDC14 BIT(1),     /* DESCRIPTOR CODE 14 - RESERVED */
*            7 SCANDC15 BIT(1),     /* DESCRIPTOR CODE 15 - RESERVED */
*            7 SCANDC16 BIT(1),     /* DESCRIPTOR CODE 16 - RESERVED */
*        3 SCANRSV3     CHAR(4),    /* RESERVED                      */
*        3 SCANASID     CHAR(2),    /* ASID TO MATCH                 */
*        3 SCANTCBP     PTR(31),    /* TCB TO MATCH                  */
*        3 SCANMID      FIXED(31),  /* MSG SEQ ID TO MATCH OR LOW END
*                                      OF ID RANGE TO MATCH          */
*        3 SCANMRID     FIXED(31),  /* HIGH END OF ID RANGE TO MATCH */
*        3 SCANCENT     PTR(31),    /* ADDR OF ENTRY FOUND OR ZERO   */
*        3 SCANPENT     PTR(31),    /* ADDR OF PRECEDING ENTRY OR ZERO.
*                                      IF ENTRY IS FOUND AND THIS IS
*                                      ZERO, ENTRY FOUND IS 1ST
*                                      ON QUEUE                      */
*        3 SCANWKPT     PTR(31),    /* ADDR OF WORK AREA FOR IEAVQ700
*                                                                    */
*        3 SCANLGTH     FIXED(8),   /* LENGTH OF TEXT TO MATCH       */
*        3 SCANTEXT     CHAR(8),    /* TEXT TO MATCH                 */
*        3 SCANRSV4     CHAR(19);   /* RESERVED                      */
*@SPACE(2);
*/********************************************************************/
*/*                                                                  */
*/*      WORK AREA FOR IEAVQ700                                      */
*/*                                                                  */
*/********************************************************************/
* %IF VQ100BAS ^= 'NONE' %THEN %GOTO VQ100P4;
*  DCL SCANWRK CHAR(96) BDY(WORD);  /* WORK AREA FOR IEAVQ700
                                                             @G741P2L*/
* %GOTO VQ100P5;
* %VQ100P4: ;
*  DCL SCANWRK CHAR(96) BDY(WORD) BASED(SCANWKPT); /* WORK AREA FOR
*                                      IEAVQ700              @G741P2L*/
* %VQ100P5: ;
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*      CODES FOR QUEUES TO BE SEARCHED                             */
*/*                                                                  */
*/********************************************************************/
*  DCL SCANORE   FIXED(8)  CONSTANT(1);/* ORE QUEUE                  */
*  DCL SCANWQE   FIXED(8)  CONSTANT(2);/* WQE QUEUE                  */
*  DCL SCANRMSG  FIXED(8)  CONSTANT(3);/* RETAINED MSG QUEUE         */
*  DCL SCANRIAM  FIXED(8)  CONSTANT(4);/* RETAINED IMMEDIATE ACTION MSG
*                                         QUEUE                      */
*  DCL SCANREAM  FIXED(8)  CONSTANT(5);/* RETAINED EVENTUAL ACTION MSG
*                                         QUEUE                      */
*  DCL SCANMINQ  FIXED(8)  CONSTANT(1);/* MINIMUM QUEUE NUMBER       */
*  DCL SCANMAXQ  FIXED(8)  CONSTANT(5);/* MAXIMUM QUEUE NUMBER       */
