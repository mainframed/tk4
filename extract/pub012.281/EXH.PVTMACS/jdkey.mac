         MACRO
&NAME    JDKEY &KEYWORD=,&SPOOL=NO,&USAGE=ANY,&CONVERT=,&STMTYPE=, @H1C+
               &LIST=NO                                            @H3A
.**********************************************************************
.*                                                                    *
.*   MODULE NAME = IEFJDKEY                                        @H1C
.*                                                                    *
.*   DESCRIPTIVE NAME = JCL KEYWORD DEFINITION                        *
.*                                                                    *
.*   COPYRIGHT = 5740-XYN COPYRIGHT IBM CORP. 1982,1983,              *
.*               LICENSED MATERIAL - PROGRAM                          *
.*               PROPERTY OF IBM, REFER TO COPYRIGHT                  *
.*               INSTRUCTIONS FORM G120-2083                          *
.*                                                                    *
.*   STATUS = OS/VS2 JBB1329                                          *
.*                                                                    *
.*   FUNCTION = JDKEY GENERATES THE KEYWORD SECTION IN THE JDT        *
.*              THAT IS ASSOCIATED WITH  THE VERB SPECIFIED ON        *
.*              THE PREVIOUS JDVERB MACRO.                            *
.*                                                                    *
.*     NOTES = NONE                                                   *
.*                                                                    *
.*      DEPENDENCIES = NONE                                           *
.*                                                                    *
.*      RESTRICTIONS = THE JDKEY MACRO CAN ONLY FOLLOW JDVERB,        *
.*                     JDPARM, OR ENDSUB MACROS.                      *
.*                                                                    *
.*   ENTRY POINT = N/A                                                *
.*                                                                    *
.*   MODULE TYPE = MACRO                                              *
.*                                                                    *
.*     PROCESSOR = ASSEMBLER                                          *
.*                                                                    *
.*     INPUT = THE FOLLOWING MAY BE SPECIFIED AS PARAMETERS TO JDKEY  *
.*                                                                    *
.*             KEYWORD           DESCRIPTION                          *
.*                                                                    *
.*             - &NAME           ONLY USED FOR OUTPUT LABEL           *
.*             - &KEYWORD=       FOR IDENTIFYING THE KEYWORD          *
.*             - &SPOOL=         FLAG BIT TO INDICATE SPOOLING        *
.*                               (YES OR NO)                          *
.*             - &USAGE=         FLAG BITS TO INDICATE TYPE OF        *
.*                               INTERFACE DESIRED                 @H1C
.*             - &CONVERT=       USED TO SPECIFY REFERRAL DATA     @H1A
.*             - &STMTYPE=       THE REFERRAL STATEMENT TYPE       @H1A
.*             - &LIST=          JDPARM PARAMETERS ARE LIST ITEMS  @H3A
.*                               IF LIST=YES                       @H3A
.*                                                                    *
.*     OUTPUT = KEYWORD SECTION OF JDT                                *
.*                                                                    *
.*   EXIT NORMAL =                                                    *
.*   CONDITION-NO ERRORS DETECTED                                     *
.*   OUTPUT    -NO MNOTE ISSUED. SEVERITY CODE=0.                     *
.*                                                                    *
.*   EXIT ERROR =                                                     *
.*   CONDITION-SEVERE ERROR DETECTED BY THE JDKEY MACRO.              *
.*   OUTPUT    -ERROR MNOTES WITH SEVERITY CODE 12                    *
.*              ISSUED WHEN PARAMETER SPECIFIED IS INCORRECT.         *
.*              (SEE RESTRICTIONS). THE MACRO WILL ATTEMPT TO SCAN    *
.*              FOR ADDITIONAL ERRORS. (SEE MESSAGES BELOW)           *
.*                                                                    *
.*   EXIT ERROR =                                                     *
.*   CONDITION-TERMINATING ERROR DETECTED BY THE JDKEY MACRO.         *
.*   OUTPUT    -ERROR MNOTES WITH SEVERITY CODE 16                    *
.*              ISSUED WHEN THERE HAS BEEN NO JDTMAC MACRO            *
.*              SPECIFIED. (SEE RESTRICTIONS AND MESSAGES)            *
.*                                                                    *
.*   EXTERNAL REFERENCES = JDSCAN MACRO IS USED FOR VALIDATION OF     *
.*                         KEYWORD AND STATEMENT KEYWORD PARAMETERS.  *
.*                         I.E., 1-8 CHARACTERS, FIRST CHARACTER      *
.*                         MUST BE ALPHABETIC OR NATIONAL (@,#,$);    *
.*                         2-7 MUST BE ALPHANUMERIC OR NATIONAL.   @R1A
.*                                                                    *
.*   TABLES = NONE                                                    *
.*                                                                    *
.*   MESSAGES = (MNOTES)                                              *
.*                                                                    *
.*   ERROR MNOTES =                                                   *
.*                                                                    *
.*    MNOTE 4,'CONVERT=REFERRAL NOT SPECIFIED; STMTYPE IGNORED'    @H1A
.*                                                                 @H1A
.*    MNOTE 12,'KEYWORD SPECIFICATION EXCEEDS 8 CHARACTERS'           *
.*    MNOTE 12,'KEYWORD=&KEYWORD HAS INVALID CHARACTERS'           @R1A
.*    MNOTE 12,'REQUIRED KEYWORD PARAMETER IS NOT SPECIFIED'          *
.*    MNOTE 12,'CONVERT=&CONVERT INVALID. MUST BE REFERRAL'        @H1A
.*    MNOTE 12,'SPOOL=&SPOOL INVALID. MUST BE YES, NO, Y, OR N'       *
.*    MNOTE 12,'USAGE=&USAGE INVALID. MUST BE ANY, SYSTEM, JOBONLY,   *
.*              OR STEPONLY'                                       @H1C
.*    MNOTE 12,'JDKEY MACRO SPECIFIED OUT OF ORDER'                   *
.*    MNOTE 12,'AN ENDSUB MACRO EXPECTED TO END A DEFINED SUBLIST,    *
.*              BUT WAS NOT SPECIFIED'                                *
.*    MNOTE 12,'REQUIRED STMTYPE PARAMETER IS NOT SPECIFIED'       @H1A
.*    MNOTE 12,'STMTYPE SPECIFICATION EXCEEDS 8 CHARACTERS'        @H1A
.*    MNOTE 12,'STMTYPE=&STMTYPE HAS INVALID CHARACTERS'           @H1A
.*    MNOTE 12,'LIST=&LIST INVALID. MUST BE YES, NO, Y, OR N'      @H3A
.*                                                                    *
.*    MNOTE 16,'JDTMAC MACRO MUST BE FIRST MACRO SPECIFIED BUT IS NOT'*
.*                                                                    *
.*   CHANGE ACTIVITY = H0,R1,H1,H2,R2,H3                           @H3A
.*    $H0= EXTJCL  JBB1328 810315 PDC5: SUPPORT FOR EXTENDED JCL   @H0A
.*    $R1= PPP0010 JBB1328 810508 PDC5: MISSING MNOTES             @R1A
.*    $H1= EXTJCL  JBB1328 811202 PDC5: SUPPORT FOR EXTENDED JCL   @H1A
.*    $H2= EXTJCL  JBB1328 820330 PDC5: SUPPORT FOR EXTENDED JCL   @H2A
.*    $R2= PPP0101 JBB1328 820521 PDC5: POSSIBLE ALIGNMENT ERROR   @R2A
.*    $H3= EXTJCL  JBB1329 820611 PDC5: SUPPORT FOR EXTENDED JCL   @H3A
.*                                                                    *
.**********************************************************************
.* A 000000-999999                                                 @H0A
.* A NO MNOTES WERE ISSUED FOR INVALID OWNER AND KEYWORD PARAMETERS,  *
.*   AND BLKID PARAMETER WAS BEING SET WITH INVALID DATA.          @R1A
.* ADD BITS TO INDICATE THAT A KEYWORD MAY APPEAR ONLY AT A JOB OR    *
.*   STEP LEVEL.                                                   @H1A
.* ADD NAME TYPE CONVERSION AND ITS ASSOCIATED STATEMENT TYPE      @H1A
.* DELETED OWNER NAME (&OWNER) AND BLOCK ID (&BLKID) KEYWORDS      @H1A
.* CHANGE REFERRAL BIT TO BE GLOBAL FOR USE BY JDPARM MACRO.       @H2A
.* DELETED FULLWORD ALIGNMENT BOUNDARY OF DS 0F FROM DEFINITION.   @R2A
.* ADD KEYWORD LIST=YES OR NO TO SET A GLOBAL BIT TO PASS TO JDPARM   *
.*   AND JDSUB MACROS TO INDICATE THE PARAMETERS ARE LIST ITEMS.   @H3A
.*--------------------------------------------------------------------*
         LCLB  &S0,&U0,&U1,&U2       BIT FLAGS USED                @H2C
         GBLB  &R1,&L2                                             @H3C
.*---------------------------------------------------------------*
.*   GLOBALS THAT MAY BE ACTIVE OR BE MADE ACTIVE IN THIS MACRO, *
.*   RESPECTIVELY: JDTMAC, JDVERB, JDKEY, JDPARM, JDSUB, ENDSUB, *
.*   AND ENDJDT.                                                 *
.*---------------------------------------------------------------*
         GBLB  &JACT,&VACT,&KACT,&PACT,&SPACT,&EPACT,&EJACT
         GBLA  &LEN                  USED FOR DETERMINING MACRO LENGTH
.*---------------------------------------------------------------*
.*   GLOBALS USED FOR OFFSETS. KEYWORD AND PARAMETER COUNTERS ONE*
.*   AND TWO.                                                    *
.*---------------------------------------------------------------*
         GBLA  &K1,&K2,&P1,&P2
.*---------------------------------------------------------------* @R1A
.*   GLOBALS USED FOR ERROR INDICATORS RETURNED FROM INTERNAL    * @R1A
.*   MACRO JDSCAN.                                               * @R1A
.*   &$ERRBAD IS THE INVALID CHARACTER ERROR BIT.                * @R1A
.*   &$ERRBIG IS THE GREATER THAN 8 CHARACTERS ERROR BIT.        * @R1A
.*   &$ERRBLK IS THE REQUIRED PARAMETER MISSING OR BLANKS BIT.   * @R1A
.*---------------------------------------------------------------* @R1A
         GBLB  &$ERRBAD,&$ERRBIG,&$ERRBLK                          @R1A
.*---------------------------------------------------------------* @R1A
.*  GLOBAL USE FOR PASSING VALUE TO INTERNAL MACRO JDSCAN.       * @R1A
.*---------------------------------------------------------------* @R1A
         GBLC  &ARGU                                               @R1A
.*---------------------------------------------------------------*
.*   CHECK FOR GLOBAL BITS ACTIVE. ONLY VERB, PARAMETER AND      *
.*   ENDSUB GLOBALS ARE ALLOWED.                                 *
.*---------------------------------------------------------------*
         AIF   (&VACT  EQ 1).ACTOFF
         AIF   (&PACT EQ 1 OR &EPACT EQ 1).SETEQU
.*---------------------------------------------------------------*
.*    IF NONE OF THE FOLLOWING BITS ARE ON THEN THIS MUST BE THE *
.*    FIRST MACRO INVOKED IN THE JDT DEFINITIONS.                *
.*---------------------------------------------------------------*
         AIF   (&JACT EQ 0 AND &KACT EQ 0 AND &EJACT EQ 0 AND &SPACT   +
               EQ 0).NOJDT     NONE ON?  GO MNOTE IT.
.*---------------------------------------------------------------*
.*    JDKEY DID NOT FOLLOW PROPER MACRO-> MNOTE IT.              *
.*---------------------------------------------------------------*
         MNOTE 12,'JDKEY MACRO SPECIFIED OUT OF ORDER'
         AGO   .RESET
.*---------------------------------------------------------------*
.*  JDTMAC MUST BE THE FIRST MACRO SPECIFIED, BUT IS NOT->       *
.*  BUT IS NOT-> MNOTE IT.                                       *
.*---------------------------------------------------------------*
.NOJDT   ANOP
       MNOTE 16,'JDTMAC MACRO MUST BE FIRST MACRO SPECIFIED BUT IS NOT'
         MEXIT
.*---------------------------------------------------------------*
.*     RESET APPROPRIATE ACTIVE GLOBAL BIT.                      *
.*     IF SPACT BIT IS ON HERE, MEANS THAT A SUBLIST             *
.*     WAS STARTED BUT THAT NO PARAMETERS (JDPARM MACROS)        *
.*     FOR IT HAD BEEN DEFINED YET.                              *
.*---------------------------------------------------------------*
.RESET   ANOP
&JACT    SETB  0                 RESET JDTMAC ACTIVE GLOBAL BIT
&SPACT   SETB  0                 RESET SUBLIST ACTIVE GLOBAL BIT
&EJACT   SETB  0                 RESET ENDJDT ACTIVE GLOBAL BIT
         AGO   .SETUP
.SETEQU  ANOP
PM&P2    EQU   PM&P1             ZEROES OFFSET OF THE LAST PARAMETER
&P1      SETA  &P1+1
&P2      SETA  &P2+1
*                                FOR THE PREVIOUS KEYWORD
.*---------------------------------------------------------------*
.*    RESET APPROPRIATE GLOBAL ACTIVE BIT                        *
.*---------------------------------------------------------------*
.ACTOFF  ANOP
&VACT    SETB  0                 RESET VERB ACTIVE GLOBAL BIT
&EPACT   SETB  0                 RESET END SUBLIST ACTIVE GLOBAL BIT
&PACT    SETB  0                 RESET PARAMETER ACTIVE GLOBAL BIT
         AIF   (&SPACT EQ 0).SETUP
.*---------------------------------------------------------------*
.*    JDKEY SPECIFIED BEFORE A SUBLIST WAS CLOSED-> MNOTE IT.    *
.*---------------------------------------------------------------*
         MNOTE 12,'AN ENDSUB MACRO EXPECTED TO END A DEFINED SUBLIST,  +
               BUT WAS NOT SPECIFIED'
&SPACT   SETB  0                 RESET SUBPARM ACTIVE GLOBAL BIT
.SETUP   ANOP
&KACT    SETB  1                 SET BIT ON FOR JDKEY ACTIVE GLOBAL
&K1      SETA  &K1+1             SET GLOBAL FOR KEYWORD OFFSET ONE
&K2      SETA  &K2+1             SET GLOBAL FOR KEYWORD OFFSET TWO
&LEN     SETA  &LEN+1            UPDATE LENGTH SETUP VARIABLE
.*---------------------------------------------------------------* @R1A
.*    SETUP ARGUMENT TO PASS TO JDSCAN MACRO.                    * @R1A
.*---------------------------------------------------------------* @R1A
&ARGU    SETC  '&KEYWORD'                                          @R1A
         JDSCAN &ARGU                                              @R1A
         AIF   (&$ERRBAD EQ 1).BADKEY     KEYWORD INVALID          @R1A
         AIF   (&$ERRBIG EQ 1).BIGKEY     EXCEEDS 8 CHARACTERS     @R1A
         AIF   (&$ERRBLK EQ 1).BLKKEY     KEYWORD IS BLANKS        @R1A
         AGO   .CONTK                     NO ERRORS-CONTINUE       @R1A
.*---------------------------------------------------------------* @R1A
.*    KEYWORD PARAMETER HAS INVALID CHARACTERS-> MNOTE IT.       * @R1A
.*---------------------------------------------------------------* @R1A
.BADKEY  ANOP                                                      @R1A
         MNOTE 12,'KEYWORD=&KEYWORD HAS INVALID CHARACTERS'        @R1A
         AGO   .BLANKK                                             @R1A
.*---------------------------------------------------------------*
.*    KEYWORD PARAMETER IS NOT 1 TO 8 CHARACTERS-> MNOTE IT.     *
.*---------------------------------------------------------------*
.BIGKEY  ANOP                                                      @R1A
         MNOTE 12,'KEYWORD SPECIFICATION EXCEEDS 8 CHARACTERS'
         AGO   .BLANKK                                             @R1A
.*---------------------------------------------------------------* @R1A
.*    KEYWORD PARAMETER IS NOT SPECIFIED-> MNOTE IT.             * @R1A
.*---------------------------------------------------------------* @R1A
.BLKKEY  ANOP                                                      @R1A
         MNOTE 12,'REQUIRED KEYWORD PARAMETER IS NOT SPECIFIED'    @R1M
.*---------------------------------------------------------------* @R1A
.*    JDKEY KEYWORD IS SET TO BLANKS IF ANY ERRORS DETECTED.     * @R1A
.*---------------------------------------------------------------* @R1A
.BLANKK  ANOP                                                      @R1A
B&LEN    EQU    *                BEGIN JDKEY LENGTH DEFINITION     @R1A
KY&K1    DC    CL8' '            KEYWORD NAME                      @R1A
         AGO   .JUMPK                                              @R1A
.*---------------------------------------------------------------*
.*    BEGIN JDKEY DEFINITIONS                                    *
.*---------------------------------------------------------------*
.CONTK   ANOP
B&LEN    EQU    *                BEGIN JDKEY LENGTH DEFINITION
KY&K1    DC    CL8'&KEYWORD'     KEYWORD NAME
.JUMPK   ANOP                                                      @R1A
         DC    AL2(E&LEN-B&LEN)  LENGTH OF KEY SECTION
         DC    AL2(KY&K2-KY&K1)  OFFSET TO NEXT KEYWORD (ZERO IF NONE)
         DC    XL1'01'           VERSION NUMBER OF JDKEY SECTION
.*---------------------------------------------------------------*
.*  THIS SECTION SETS THE BIT IN THE JDT BIT FLAG BYTE FOR SPOOL.*
.*  CHECK TO SEE IF SPOOL WAS SPECIFIED. (DEFAULT IS NO)         *
.*---------------------------------------------------------------*
         AIF   ('&SPOOL' EQ 'Y' OR '&SPOOL' EQ 'YES' OR '&SPOOL' EQ 'N'+
               OR '&SPOOL' EQ 'NO').S0
.*---------------------------------------------------------------*
.*    SPOOL PARAMETER SPECIFIES AN INVALID PARAMETER-> MNOTE IT. *
.*---------------------------------------------------------------*
         MNOTE 12,'SPOOL=&SPOOL INVALID. MUST BE YES, NO, Y, OR N'
.S0      ANOP
&S0      SETB  ('&SPOOL' EQ 'Y' OR '&SPOOL' EQ 'YES')
.*---------------------------------------------------------------*
.*   THIS SECTION SETS THE BIT IN THE JDT BIT FLAG BYTE FOR      *
.*   USAGE. CHECK TO SEE IF USAGE WAS SPECIFIED.                 *
.*---------------------------------------------------------------*
         AIF   ('&USAGE' EQ 'ANY' OR '&USAGE' EQ 'SYSTEM' OR '&USAGE'  +
               EQ 'JOBONLY' OR '&USAGE' EQ 'STEPONLY').U0          @H1C
.*---------------------------------------------------------------*
.*    USAGE PARAMETER SPECIFIES AN INVALID PARAMETER-> MNOTE IT. *
.*---------------------------------------------------------------*
         MNOTE 12,'USAGE=&USAGE INVALID. MUST BE ANY, SYSTEM, JOBONLY, +
               OR STEPONLY'                                        @H1C
.U0      ANOP
&U0      SETB  ('&USAGE' EQ 'SYSTEM')
&U1      SETB  ('&USAGE' EQ 'JOBONLY')                             @H1A
&U2      SETB  ('&USAGE' EQ 'STEPONLY')                            @H1A
.*---------------------------------------------------------------* @H1A
.*   THIS SECTION SETS THE BIT FOR REFERRAL IF IT IS INDICATED.  * @H1A
.*---------------------------------------------------------------* @H1A
        AIF ('&CONVERT' EQ 'REFERRAL' OR '&CONVERT' EQ '').SETCONV @H1A
.*---------------------------------------------------------------* @H1A
.*   CONVERT PARAMETER SPECIFIES AN INVALID PARAMETER-> MNOTE IT.* @H1A
.*---------------------------------------------------------------* @H1A
         MNOTE 12,'CONVERT=&CONVERT INVALID. MUST BE REFERRAL'     @H1A
.SETCONV ANOP                                                      @H1A
&R1      SETB  ('&CONVERT' EQ 'REFERRAL')                          @H1A
.*---------------------------------------------------------------* @H3A
.*  CHECK TO SEE IF LIST WAS SPECIFIED. (DEFAULT IS NO)          * @H3A
.*---------------------------------------------------------------* @H3A
         AIF   ('&LIST' EQ 'Y' OR '&LIST' EQ 'YES' OR '&LIST' EQ 'N' OR+
               '&LIST' EQ 'NO').L2                                 @H3A
.*---------------------------------------------------------------* @H3A
.*    LIST PARAMETER SPECIFIES AN INVALID PARAMETER-> MNOTE IT.  * @H3A
.*---------------------------------------------------------------* @H3A
         MNOTE 12,'LIST=&LIST INVALID. MUST BE YES, NO, Y, OR N'   @H3A
.L2      ANOP                                                      @H3A
&L2      SETB  ('&LIST' EQ 'Y' OR '&LIST' EQ 'YES')                @H3A
******************************************************************
*  SPOOL FLAG BYTE-                                              *
*  THE BIT IS :   BIT        (IF ON)                             *
*    FOR SPOOL=    0 -KEYWORD WILL BE SPOOLED TO SYSOUT DATASET  * @H1C
*                                                                *
******************************************************************
         DC    BL1'&S0.0000000'        JDT FLAG BYTE
         DC    XL1'00'                 RESERVED                    @H1C
******************************************************************
*        USAGE AND CONVERSION TYPE FLAG BYTE.                    *
*----------------------------------------------------------------*
*                 BIT        (IF ON)                             *
*    FOR USAGE=    0 -KEYWORD USED IN SYSTEM INTERFACE ONLY      *
*                  1 -KEYWORD MAY APPEAR ONLY ON A VERB THAT     * @H1A
*                     IS CODED BEFORE THE FIRST STEP.            * @H1A
*                  2 -KEYWORD MAY APPEAR ONLY ON A VERB THAT     * @H1A
*                     IS CODED AFTER AN EXEC.                    * @H1A
*                            (IF OFF)                            *
*                  0 -KEYWORD USED VIA JCL OR DYNAMIC            *
*                     ALLOCATION OR SYSTEM PROGRAMMING           *
*                     INTERFACE                                  *
*----------------------------------------------------------------*
*                 BIT        (IF ON)                             *
*      CONVERT=    4 -STATEMENT IS REFERRAL DATA TYPE            * @H1A
******************************************************************
         DC    BL1'&U0&U1&U2.0&R1.000' JDT FLAG BYTE TWO           @H1C
.*---------------------------------------------------------------* @H1A
.* CHECK TO SEE IF STMTYPE WAS SPECIFIED IF CONVERT=REFERRAL.    * @H1A
.*---------------------------------------------------------------* @H1A
         AIF   (&R1 EQ 0).ZEROES   CONVERT NOT= REFERRAL; SKIP IT  @H1A
&ARGU    SETC  '&STMTYPE'          SETUP ARGUMENT FOR PASSING      @H1A
         JDSCAN &ARGU                                              @H1A
         AIF   (&$ERRBAD EQ 1).BADSTM       INVALID CHARACTERS     @H1A
         AIF   (&$ERRBIG EQ 1).BIGSTM       EXCEEDS 8 CHARACTERS   @H1A
         AIF   (&$ERRBLK EQ 1).BLKSTM       MISSING PARAMETER      @H1A
         AGO   .CONTS                       NO ERRORS-CONTINUE     @H1A
.*---------------------------------------------------------------* @H1A
.* STMTYPE PARAMETER HAS INVALID CHARACTERS-> MNOTE IT.          * @H1A
.*---------------------------------------------------------------* @H1A
.BADSTM  ANOP                                                      @H1A
         MNOTE 12,'STMTYPE=&STMTYPE HAS INVALID CHARACTERS'        @H1A
         AGO   .ZEROES                                             @H1A
.*---------------------------------------------------------------* @H1A
.* STMTYPE PARAMETER EXCEEDS MAX 8 CHARACTERS-> MNOTE IT.        * @H1A
.*---------------------------------------------------------------* @H1A
.BIGSTM  ANOP                                                      @H1A
         MNOTE 12,'STMTYPE SPECIFICATION EXCEEDS 8 CHARACTERS'     @H1A
         AGO   .ZEROES                                             @H1A
.*---------------------------------------------------------------* @H1A
.* STMTYPE PARAMETER NOT SPECIFIED -> MNOTE IT.                  * @H1A
.*---------------------------------------------------------------* @H1A
.BLKSTM  ANOP                                                      @H1A
         MNOTE 12,'REQUIRED STMTYPE PARAMETER IS NOT SPECIFIED'    @H1A
.ZEROES  ANOP                                                      @H1A
         AIF   ('&STMTYPE' EQ '').OVERSTM                          @H1A
.*---------------------------------------------------------------* @H1A
.* STMTYPE SPECIFIED AND CONVERT=REFERRAL IS NOT-> MNOTE IT.     * @H1A
.*---------------------------------------------------------------* @H1A
         MNOTE 4,'CONVERT=REFERRAL NOT SPECIFIED; STMTYPE IGNORED' @H1A
.OVERSTM DC    XL8'00'           REFERRAL STATEMENT TYPE           @H1A
         AGO   .JUMPS                                              @H1A
.CONTS   ANOP                                                      @H1A
         DC    CL8'&STMTYPE'     REFERRAL STATEMENT TYPE           @H1A
.JUMPS   ANOP                                                      @H1A
E&LEN    EQU   *                 END JDKEY LENGTH DEFINITION
         MEND
