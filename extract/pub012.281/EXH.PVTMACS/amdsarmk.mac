 /********************************************************************/
 /*  START OF SPECIFICATIONS ****                                    */
 /*   MODULE NAME = AMDSARMK                                         */
 /*                                                                  */
 /*   DESCRIPTIVE NAME = MACROS AND MAPPINGS                 @G64APHE*/
 /*                                                                  */
 /********************************************************************/
 /*                                                                  */
 /*   STATUS = OS/VS2 JBB1328                                        */
 /*                                                                  */
 /*    VIRTUAL DUMP COMMON CONTROL BLOCKS -                          */
 /*      EXPANDS INTO BASED CONTROL BLOCKS UNLESS %RMKINIT IS        */
 /*      DECLARED AS CHAR AND INITIALIZED TO A NON-NULL CHARACTER    */
 /*      STRING.                                                     */
 /*                                                                  */
 /*CHANGE ACTIVITY =                                                 */
 /* CONSTANT DT3380 ADDED FOR JBB1126                        @G81BP1W*/
 /* CONSTANT DT3375 ADDED FOR JBB1127                        @G87UP1W*/
 /*$H1= BPF,JBB1327,810814,PD2T:         BPF SUPPORT             @H1A*/
 /* OZ58051: DECLARE FOR BIT INDICATING 4K KEYS PRESENT      @ZA58051*/
 /*                                                                  */
 /** END OF SPECIFICATIONS ***/
*/*******************************************************************/
 % DEACTIVATE OFF,PUSH,POP,ON;
 @EJECT NOC;
 %VCHK:MACRO KEYS(ITEM,TOBE,ERRET);                    /*@G64APHE*/
 /*                                                                  */
 /*  ITEM -- THING (CONTROL BLOCK, DATA AREA, ETC.) TO BE VALIDITY   */
 /*          CHECKED.                                                */
 /*  TOBE -- CONSTANT VALUE REPRESENTING WHAT THE ITEM IS SUPPOSED   */
 /*          TO BE.                                                  */
 /*  ERRET -- OPTIONAL. LABLE TO BE BRANCHED TO IF ITEM DOES NOT PASS*/
 /*           THE TEST.                                              */
 /*                                                      @G64APHE*/
 ANS('/*??????????????????????????????????????????????????????????*/')
 COLUMN(MACLMAR) SKIP;                                 /*@G64APHE*/
 ANS('DO; /*'××MACNAME××' '××MACKEYS××' */') SKIP; /*@G64APHE*/
 IF ERRET^='' THEN ANS('RFY RETCODE RSTD;') SKIP;      /*@G64APHE*/
 ANS('VCTCBADR=ADDR('××ITEM(1)××'); /* FILL IN THE VCHK PARM LIST */')
 SKIP;                                                 /*@G64APHE*/
 ANS('VCTCBIDN='××TOBE(1)××';') SKIP;                  /*@G64APHE*/
 ANS('SVC(VCKSVC); /* CALL AMDSAVCK TO CHECK THE VALIDITY OF '××ITEM(1)
 ××'.*/') SKIP;                                        /*@G64APHE*/
 IF ERRET^='' THEN                                     /*@G64APHE*/
 ANS('IF RETCODE^=0 THEN GO TO '××ERRET(1)××'; /* IF '××ITEM(1)××
 ' DOES NOT PASS THE VALIDITY CHECK */ RFY RETCODE UNRSTD;')
 SKIP;                                                 /*@G64APHE*/
 ANS('END; /*'××MACNAME××' '××MACKEYS××' */')SKIP; /*@G64APHE*/
 ANS('/*???????????????????????????????????????????????????????????*/')
 COLUMN(MACLMAR) SKIP;                                 /*@G64APHE*/
 %END;                                                 /*@G64APHE*/
 @EJECT NOC;
    DCL
          1 ARB BASED,              /* ADDRESS RANGE BLOCK           */
              3 ARBADDRB PTR(31),   /* BEGINNING ADDRESS OF RANGE    */
              3 ARBADDRE PTR(31);   /* ENDING ADDRESS OF RANGE       */
    %IF RMKINIT ^= '' %THEN         /* INITIALIZATION REQUIRED       */
      %GOTO BCTINIT;                /* YES - SKIP BASED CODE         */
    DCL
          1 BCTH BDY(WORD) BASED(VCTBCTH), /* BUFFER CONTROL TABLE
                                       HEAD                          */
              3 BCTHBCTH CHAR(4),   /* BCTH ACRONYM                  */
              3 BCTHFRST PTR(31),   /* ADDRESS OF FIRST BCT          */
              3 BCTHLAST PTR(31);   /* ADDRESS OF LAST BCT           */

 %BCTINIT:;
    DCL
          1 BCT BDY(WORD) BASED,    /* BUFFER CONTROL TABLE ENTRY    */
              3 BCTBCT CHAR(4),     /* EBCDIC ACRONYM                */
              3 BCTNEXT PTR(31),    /* NEXT BCT ON I/O QUEUE         */
              3 BCTKEY1 PTR(8),     /* STORAGE KEY OF FIRST 2K       */
              3 BCTKEY2 PTR(8),     /* STORAGE KEY OF LAST 2K        */
              3 BCTASID FIXED(16),  /* ASID OF DATA IN BUFFER        */
              3 BCTVADDR PTR(31),   /* VIRTUAL ADDRESS OF DATA IN
                                       BUFFER                        */
              3 BCTRADDR PTR(31),   /* REAL ADDRESS OF BUFFER        */
              3 BCTPGTE PTR(31),    /* ADDRESS OF PAGE TABLE ENTRY   */
              3 BCTMDCB PTR(31),    /* ADDRESS OF MDCB FOR BUFFER    */
              3 * CHAR(8) BDY(WORD), /* UNUSED               @Z40WI3F*/
              3 * PTR(31),          /* UNUSED                @Z40WI3F*/
              3 BCTLSID FIXED(31),  /* LOGICAL SLOT IDENTIFIER - PAGE'S
                                       AUX STORAGE ID        @Z40WI3F*/
                  5 * FIXED(8),     /* UNUSED                @Z40WI3F*/
                  5 BCTINDEX FIXED(8), /* PART/SART ENTRY NUMBER
                                                             @Z40WI3F*/
                  5 BCTRBA FIXED(16), /* RELATIVE BLOCK ADDR @Z40WI3F*/
              3 BCTFLGT BIT(8),     /* BUFFER TYPE FLAGS             */
                  5 * BIT(1),       /* RESERVED                      */
                  5 BCTWKFLE BIT(1), /* WORKFILE                     */
                  5 BCTPGT BIT(1),  /* PAGE TABLE                    */
                  5 BCTASM BIT(1),  /* ASM                           */
                  5 BCTLSQA BIT(1), /* LSQA                          */
                  5 BCTDUMP BIT(1), /* DUMP                          */
                  5 BCTPGTF BIT(1), /* FIXED PAGE TABLE              */
                  5 * BIT(1),       /* RESERVED                      */
              3 BCTFLGI BIT(8),     /* BUFFER STATUS FLAGS           */
                  5 BCTCOMP BIT(1), /* I/O COMPLETE FOR BUFFER       */
                  5 BCTALLOC BIT(1), /* BUFFER SCHEDULED FOR I/O     */
                  5 BCTIOERR BIT(1), /* I/O ERROR PROCESSING BUFFER  */
                  5 BCTRECLM BIT(1), /* VIRTUAL ADDRESS RECLAIMED FROM
                                       REAL STORAGE                  */
                  5 BCTSWPDS BIT(1), /* PAGE FROM SWAP DATA SET
                                                             @Z40WI3F*/
              3 * PTR(16);          /* RESERVED                      */
    %IF RMKINIT = '' %THEN          /* INITIALIZATION REQUIRED       */
      %GOTO CCTINIT;                /* NO - SKIP INITIALIZATION CODE */
    DCL
          1 BCTH BDY(WORD),         /* BUFFER CONTROL TABLE HEAD     */
              3 BCTHBCTH CHAR(4) INIT('BCTH'), /* BCTH ACRONYM       */
              3 BCTHFRST PTR(31) INIT(ADDR(BCTI)), /* ADDRESS OF
                                       FIRST BCT                     */
              3 BCTHLAST PTR(31) INIT(ADDR(BCTI) + 3 * LENGTH(BCT)); /*
                                       ADDRESS OF LAST BCT           */
    DCL
          1 BCTI(20) BDY(WORD),     /* BUFFER CONTROL TABLE ENTRY    */
              3 * CHAR(4) INIT((DIM(BCTI))'BCT '), /* EBCDIC ACRONYM */
              3 * PTR(31) INIT((DIM(BCTI))0), /*NEXT BCT ON I/O QUEUE*/
              3 * PTR(8) INIT((DIM(BCTI))0), /* STORAGE KEY OF 1ST 2K*/
              3 * PTR(8) INIT((DIM(BCTI))0), /*STORAGE KEY OF LAST 2K*/
              3 * FIXED(16) INIT((DIM(BCTI))0), /* ASID OF DATA      */
              3 * PTR(31)
                      INIT(0,0,0,0,
 '010000'X,'011000'X,'012000'X,'013000'X,'014000'X,'015000'X,'016000'X,
 '017000'X,'018000'X,'019000'X,'01A000'X,'01B000'X,'01C000'X,'01D000'X,
                '01E000'X,'01F000'X), /* VIRTUAL ADDRESS OF DATA IN
                                       BUFFER                        */
              3 * PTR(31)
                      INIT('3000'X,'4000'X,'5000'X,'6000'X,
 '010000'X,'011000'X,'012000'X,'013000'X,'014000'X,'015000'X,'016000'X,
 '017000'X,'018000'X,'019000'X,'01A000'X,'01B000'X,'01C000'X,'01D000'X,
                '01E000'X,'01F000'X), /* REAL ADDRESS OF BUFFER      */
              3 * PTR(31) INIT((DIM(BCTI))0), /*ADDR OF PGE TBL ENTRY*/
              3 * PTR(31) INIT((DIM(BCTI))0), /* ADDRESS OF MDCB     */
              3 * CHAR(8) BDY(WORD) INIT((DIM(BCTI))'00'X), /* LPID OF
                                       DATA IN BUFFER                */
              3 * PTR(31) INIT((DIM(BCTI))0), /* ADDRESS OF AMB      */
              3 * PTR(31) INIT((DIM(BCTI))0), /*RBA OF PAGE IN BUFFER*/
              3 * BIT(8) INIT((DIM(BCTI))0), /* BUFFER TYPE FLAGS    */
              3 * BIT(8) INIT((DIM(BCTI))0), /* BUFFER STATUS FLAGS  */
              3 * PTR(16) INIT((DIM(BCTI))0); /* RESERVED            */

 %CCTINIT:;
 @EJECT;
    DCL
          1 CCT BDY(WORD) BASED(CCTADDR), /* COMMON COMMUNICATION
                                       TABLE                         */
              3 CTWAIT PTR(8),      /* HIGHEST WAIT CODE             */
              3 CTFLG1 BIT(8),      /* FLAGS                         */
                  5 CTERROR BIT(1), /* CALLER PROCESSES ERROR
                                       RECOVERY                      */
                  5 CTDEVICE BIT(1), /* DIRECT ACCESS I/O IN PROGRESS*/
                  5 CTMORTPE BIT(1), /* END OF REEL                  */
                  5 CTWORK BIT(1),  /* WORK RECORD IN PROCESS        */
                  5 CTDEFO BIT(1),  /* DEFAULT ADDRESS USED FOR
                                       OUTPUT                        */
                  5 * BIT(1),       /* RESERVED                      */
                  5 CTMP BIT(1),    /* PROCESSING ON MP SYSTEM       */
                  5 CTERREC BIT(1), /* IGNORE CATASTROPHIC ERROR     */
              3 CTFLG2 BIT(8),      /* FLAGS                         */
                  5 CTDUPSW BIT(1), /* DUPLICATE LINE                */
                  5 CTSTOR BIT(1),  /* PROTECTION KEY IN PROCESS     */
                  5 CTPGEFLT BIT(1), /* PAGE FAULT IN PROCESS        */
                  5 CTNOSTAT BIT(1), /* STORE STATUS NOT PERFORMED   */
                  5 CTVIRTR BIT(1), /* VIRTUAL DUMP REQUESTED        */
                  5 CTWKDONE BIT(1), /* END OF WORK FILE PROCESSING  */
                  5 CTALTCON BIT(1), /* ALTERNATE CONSOLE IN USE     */
                  5 * BIT(1),       /* RESERVED                      */
              3 CTDEVTYP PTR(8),    /* IPL DEVICE TYPE               */
              3 CTSENSE FIXED(15),  /* SENSE INFORMATION AREA        */
              3 CTINADDR FIXED(15), /* IPL DEVICE ADDRESS            */
              3 CTCCHHR CHAR(7),    /* CCHHR FOR USE DURING IPL AND
                                       WORK RECORD PROCESSING        */
              3 CTPGECNT CHAR(1),   /* NUMBER OF RECORDS IN AMDSAPGE
                                       (D.A. IPL)                    */
              3 CTCCHHS FIXED(31),  /* STARTING CCHH OF SYS1.PAGEDUMP*/
              3 CTCCHHE FIXED(31),  /* ENDING CCHH OF SYS1.PAGEDUMP  */
              3 CTCCHHW FIXED(31),  /* BEGINNING CCHH FOR WORKFILE   */
              3 CTERBDA FIXED(31),  /* DIRECT ACCESS ERROR RECOVERY
                                       BLOCK                         */
 /* THE FOLLOWING IS THE CCT COMMON SECTION                          */
              3 CTERBTPE FIXED(31), /* TAPE ERROR RECOVERY BLOCK     */
              3 CTERBCON FIXED(31), /* CONSOLE ERROR RECOVERY BLOCK  */
              3 CTCPUI FIXED(15),   /* IPL CPU ADDRESS               */
              3 CTOUTAD FIXED(15),  /* OUTPUT DEVICE ADDRESS         */
              3 CTCONTYP PTR(8),    /* CONSOLE TYPE                  */
              3 CTEBCOPD CHAR(3),   /* DEFAULT OUTPUT DEVICE ADDRESS */
              3 CTLOWFLG BIT(8),    /* FLAGS                         */
                  5 CTVIRTD BIT(1), /* DEFAULT TO VIRTUAL DUMP       */
                  5 CTFP BIT(1),    /* FILE PROTECT                  */
                  5 CTINIT BIT(1),  /* RE-INITIALIZATION PERMITTED
                                       AFTER CHANNEL ERROR           */
                  5 CTWKSTUS BIT(1), /* STATUS OF INCOMPLETE WORKFILE -
                                       ON MEANS INSUFFICIENT SPACE,
                                       OFF MEANS I/O ERROR OCCURRED  */
                  5 * BIT(4),       /* RESERVED                      */
              3 CTEBCOPR CHAR(3),   /* REPLIED OUTPUT DEVICE ADDRESS */
 /* THE FOLLOWING IS THE DUMP TYPE SECTION OF THE CCT                */
            2 CTDMPTYP,
 /* HIGH SPEED DUMP -                                                */
              3 CTIOTYPE BIT(8),    /* I/O REQUEST FLAGS             */
                  5 CTIOTERM BIT(1), /* TERMINATE                    */
                  5 CTIOOUT BIT(1), /* OUTPUT TAPE                   */
                  5 CTIODA BIT(1),  /* DIRECT ACCESS                 */
                  5 CTIOWK BIT(1),  /* WORKFILE                      */
                  5 CTIOCON BIT(1), /* CONSOLE                       */
                  5 CTIOINT BIT(1), /* RETURN ON ANY INTERRUPT       */
                  5 CTIORSET BIT(1), /* RESET CPU ON CPU SWITCH      */
                  5 * BIT(1),       /* RESERVED                      */
              3 * BIT(8),           /* RESERVED                      */
              3 CTCONFLG BIT(8),    /* CONSOLE FLAGS                 */
                  5 CTMSGOUT BIT(1), /* MSG MUST COME OUT            */
                  5 CTREAD BIT(1),  /* CONSOLE READ IN PROGRESS      */
                  5 * BIT(6),       /* RESERVED                      */
              3 CTBUFTYP BIT(8),    /* BUFFER TYPE FLAGS             */
                  5 * BIT(1),       /* RESERVED                      */
                  5 CTWKFLE BIT(1), /* WORKFILE                      */
                  5 CTPGT BIT(1),   /* PAGE TABLE                    */
                  5 CTASM BIT(1),   /* ASM                           */
                  5 CTLSQA BIT(1),  /* LSQA                          */
                  5 CTDUMP BIT(1),  /* DUMP BUFFER                   */
                  5 * BIT(2),       /* RESERVED                      */
              3 CTCONSOL PTR(31),   /* ADDRESS OF CONSOLE I/O ROUTINE*/
              3 CTLWKAD PTR(31),    /* LAST ADDRESS ON WORKFILE      */
              3 CTCOMMIO PTR(31),   /* ADDRESS OF DUMPSIO ROUTINE    */
              3 CTEOR PTR(31),      /* ADDRESS OF END OF REEL ROUTINE*/
              3 CTVCCT PTR(31),     /* ADDRESS OF VCCT               */
              3 CTPRMT1 FIXED(15),  /* WRITE PROMPT POS. (3066 ONLY) */
                  5 CTPRMT1Y FIXED(8), /* Y COORDINATE               */
                  5 CTPRMT1X FIXED(8), /* X COORDINATE               */
              3 CTPRMT2 FIXED(15),  /* READ PROMPT POS. (3066 ONLY)  */
                  5 CTPRMT2Y FIXED(8), /* Y COORDINATE               */
                  5 CTPRMT2X FIXED(8), /* X COORDINATE               */
              3 CTHWM FIXED(8),     /* LOGICAL 3066 SCREEN LIMIT     */
              3 CTHWMAX FIXED(8);   /* PHYSICAL 3066 SCREEN LIMIT    */
    DCL
          1 CTLOWDMP DEFINED(CTDMPTYP), /* THIS IS THE LOW SPEED DUMP
                                       TYPE SECTION OF THE CCT       */
              3 CTADDRS PTR(31),    /* STARTING ADDRESS OF RANGE TO
                                       BE DUMPED                     */
              3 CTADDRE PTR(31);    /* ENDING ADDRESS OF RANGE TO BE
                                       DUMPED                        */
 @EJECT;
    DCL
          1 CCW BDY(DWORD) BASED,   /* FORMAT OF CCW                 */
              3 CCWCMD PTR(8),      /* COMMAND                       */
              3 CCWDADDR PTR(24),   /* DATA ADDRESS                  */
              3 CCWFLAGS BIT(8),    /* CCW FLAGS                     */
                  5 CCWDC BIT(1),   /* DATA CHAINING                 */
                  5 CCWCC BIT(1),   /* COMMAND CHAINING              */
                  5 CCWSLI BIT(1),  /* SUPPRESS INCORRECT LENGTH
                                       INDICATOR                     */
                  5 CCWSKIP BIT(1), /* SUPPRESS DATA TRANSFER        */
                  5 CCWPCI BIT(1),  /* PROGRAM-CONTROLLED INTERRUPT  */
                  5 CCWIDA BIT(1),  /* INDIRECT DATA ADDRESS         */
                  5 * BIT(2),       /* RESERVED                      */
              3 * PTR(8),           /* RESERVED                      */
              3 CCWCNT FIXED(16);   /* BYTE COUNT                    */
    DCL
          1 CSW BDY(WORD) BASED,    /* FORMAT OF CSW                 */
              3 CSWKEY00 BIT(8),
                  5 CSWKEY BIT(4),  /* PROTECT KEY                   */
                  5 * BIT(4),       /* RESERVED                      */
              3 CSWCADDR PTR(24),   /* COMMAND ADDRESS               */
              3 CSWUSTAT BIT(8),    /* CSW UNIT STATUS               */
                  5 CSWATTN BIT(1), /* ATTENTION                     */
                  5 CSWSTMOD BIT(1), /* STATUS MODIFIER              */
                  5 CSWCUE BIT(1),  /* CONTROL UNIT END              */
                  5 CSWBUSY BIT(1), /* BUSY                          */
                  5 CSWCE BIT(1),   /* CHANNEL END                   */
                  5 CSWDE BIT(1),   /* DEVICE END                    */
                  5 CSWUC BIT(1),   /* UNIT CHECK                    */
                  5 CSWUE BIT(1),   /* UNIT EXCEPTION                */
              3 CSWCSTAT BIT(8),    /* CSW CHANNEL STATUS            */
                  5 CSWPCI BIT(1),  /* PROGRAM-CONTROLLED INTERRUPT  */
                  5 CSWIL BIT(1),   /* INCORRECT LENGTH              */
                  5 CSWPGC BIT(1),  /* PROGRAM CHECK                 */
                  5 CSWPTC BIT(1),  /* PROTECTION CHECK              */
                  5 CSWCDC BIT(1),  /* CHANNEL DATA CHECK            */
                  5 CSWCCC BIT(1),  /* CHANNEL CONTROL CHECK         */
                  5 CSWICC BIT(1),  /* INTERFACE CONTROL CHECK       */
                  5 CSWCHC BIT(1),  /* CHAINING CHECK                */
              3 CSWCNT FIXED(16);   /* RESIDUAL BYTE COUNT           */
 @EJECT;
    %IF RMKINIT ^= '' %THEN         /* INITIALIZATION REQUIRED       */
      %GOTO IODINIT;                /* YES - SKIP BASED CODE         */
    DCL
          1 DSCE BDY(WORD) BASED(VCTDSCE), /* DYNAMIC STORAGE CONTROL
                                       ELEMENT                       */
              3 DSCEDSCE CHAR(4),   /* DSCE ACRONYM                  */
              3 DSCEBEGN PTR(31),   /* BEGINNING ADDRESS OF DYNAMIC
                                       STORAGE AREA                  */
              3 DSCENEXT PTR(31),   /* ADDRESS OF NEXT AVAILABLE
                                       STORAGE                       */
              3 DSCETBEG PTR(31),   /* ADDRESS OF FIRST TRACE ENTRY  */
              3 DSCETCUR PTR(31),   /* CURRENT TRACE ENTRY ADDRESS   */
              3 DSCETEND PTR(31);   /* END OF TRACE AND DYNAMIC AREA */
 @EJECT;
 %IODINIT:;
    DCL
          1 IODB BDY(WORD) BASED,   /* INPUT/OUTPUT DEVICE BLOCK     */
              3 IODBIODB CHAR(4),   /* IODB ACRONYM                  */
              3 IODBIDEN CHAR(4),   /* IODB TYPE                     */
              3 IODBFLAG BIT(16),   /* FLAGS                         */
                  5 IODBTERM BIT(1), /* CATASTROPHIC ERROR           */
                  5 IODBPTRM BIT(1), /* TERMINATE VIRTUAL DUMP       */
                  5 IODBINT BIT(1), /* INTERRUPT PROCESSED           */
                  5 IODBIOC BIT(1), /* I/O ERROR                     */
                  5 IODBHALT BIT(1), /* DEVICE QUIESCED              */
                  5 IODBACTV BIT(1), /* I/O ACTIVE ON DEVICE         */
                  5 IODBCONW BIT(1), /* WAIT ON NEXT FULL SCREEN (3066
                                       CONSOLE ONLY)                 */
                  5 IODBSTRT BIT(1), /* I/O STARTED BY ERROR RECOVERY
                                       ROUTINE                       */
                  5 IODBPGST BIT(1),/* DEVICE IS PAGING STORAGE  @H1A*/
              3 IODBDEV FIXED(15),  /* DEVICE ADDRESS                */
              3 IODBCLAS PTR(8),    /* DEVICE CLASS                  */
              3 IODBTYPE PTR(8),    /* UNIT TYPE                     */
              3 IODBCPU FIXED(15),  /* CPU ADDRESS                   */
              3 IODBBCT PTR(31),    /* ADDRESS OF FIRST BCT ON I/O
                                       REQUEST QUEUE                 */
              3 IODBCAW PTR(31),    /* CAW USED FOR CURRENT I/O
                                       OPERATION                     */
              3 IODBCSW CHAR(8),    /* CSW FOR CURRENT OPERATION     */
              3 IODBCCHH CHAR(8),   /* SEEK ADDRESS                  */
                  5 IODBM CHAR(1),  /* 'M' VALUE                     */
                  5 IODBSEEK CHAR(2), /* BEGINNING OF SEEK ADDRESS   */
                  5 IODBSRCH CHAR(4), /* SEARCH ADDRESS              */
                      7 IODBCC CHAR(2), /* CYLINDER NUMBER           */
                      7 IODBHH CHAR(2), /* TRACK NUMBER              */
                  5 IODBR CHAR(1),  /* RECORD NUMBER                 */
              3 IODBSENS CHAR(24);  /* SENSE INFORMATION             */
 @EJECT;
    %IF RMKINIT ^= '' %THEN         /* INITIALIZATION REQUIRED       */
      %GOTO DSCINIT;                /* YES - SKIP BASED CODE         */
    DCL
          1 MDCE BDY(WORD) BASED(VCTMDCE), /* MEMORY DISPATCHING
                                       CONTROL ELEMENT               */
              3 MDCEMDCE CHAR(4),   /* MDCE ACRONYM                  */
              3 MDCEACTV PTR(31),   /* ACTIVE MDCB QUEUE             */
              3 MDCEAVIL PTR(31);   /* AVAILABLE MDCB QUEUE          */
    DCL
          1 MDCB BDY(WORD) BASED,   /* MEMORY DISPATCHING CONTROL
                                       BLOCK                         */
              3 MDCBMDCB CHAR(4),   /* MDCB ACRONYM                  */
              3 MDCBNEXT PTR(31),   /* NEXT MDCB                     */
              3 MDCBPSW CHAR(8),    /* PSW AT TIME OF INTERRUPT      */
              3 MDCBGRS BDY(WORD) CHAR(64), /* GENERAL REGISTERS     */
                  5 MDCBGR0 PTR(31),
                  5 MDCBGR1 PTR(31),
                  5 MDCBGR2 PTR(31),
                  5 MDCBGR3 PTR(31),
                  5 MDCBGR4 PTR(31),
                  5 MDCBGR5 PTR(31),
                  5 MDCBGR6 PTR(31),
                  5 MDCBGR7 PTR(31),
                  5 MDCBGR8 PTR(31),
                  5 MDCBGR9 PTR(31),
                  5 MDCBGR10 PTR(31),
                  5 MDCBGR11 PTR(31),
                  5 MDCBGR12 PTR(31),
                  5 MDCBGR13 PTR(31),
                  5 MDCBGR14 PTR(31),
                  5 MDCBGR15 PTR(31),
              3 MDCBSTOR PTR(31),   /* CONTENTS OF CONTROL REGISTER 1*/
              3 MDCBPI FIXED(15),   /* PROGRAM INTERRUPT CODE        */
              3 MDCBFLGS BIT(8),    /* MDCB FLAGS                    */
                  5 MDCBASMI BIT(1), /* ASM FUNCTION STATUS          */
                  5 MDCBDUMP BIT(1), /* DUMP REQUEST STATUS          */
                  5 * BIT(6),       /* RESERVED                      */
              3 * BIT(8);           /* RESERVED                      */
    %GOTO PSWCOM;                   /* SKIP INITIALIZATION CODE      */
 %DSCINIT:;
 @EJECT;
    DCL
          1 DSCE BDY(WORD),         /* DYNAMIC STORAGE CONTROL
                                       ELEMENT                       */
              3 DSCEDSCE CHAR(4) INIT('DSCE'), /* DSCE ACRONYM       */
              3 DSCEBEGN PTR(31) INIT('1000'X), /* BEGINNING ADDRESS
                                       OF DYNAMIC STORAGE AREA       */
              3 DSCENEXT PTR(31) INIT('1000'X), /* ADDRESS OF NEXT
                                       AVAILABLE STORAGE             */
              3 DSCETBEG PTR(31) INIT('2F00'X), /* ADDRESS OF FIRST
                                       TRACE ENTRY                   */
              3 DSCETCUR PTR(31) INIT('2F00'X), /* CURRENT TRACE ENTRY
                                       ADDRESS                       */
              3 DSCETEND PTR(31) INIT('3000'X); /* END OF TRACE AND
                                       DYNAMIC AREA                  */
    DCL
          1 IODBI BDY(WORD),        /* INPUT/OUTPUT DEVICE BLOCK     */
              3 IODBDA,             /* DIRECT ACCESS IODB            */
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */
                  5 * CHAR(4) INIT('-DA '), /* IODB TYPE             */
                  5 * (14) FIXED(31) INIT((14)0),
              3 IODBOUT,            /* OUTPUT IODB                   */
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */
                  5 * CHAR(4) INIT('-OUT'), /* IODB TYPE             */
                  5 * (14) FIXED(31) INIT((14)0),
              3 IODBWORK,           /* WORKFILE IODB                 */
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */
                  5 * CHAR(4) INIT('-WK '), /* IODB TYPE             */
                  5 * (14) FIXED(31) INIT((14)0),
              3 IODBCON,            /* CONSOLE IODB                  */
                  5 * CHAR(4) INIT('IODB'), /* IODB ACRONYM          */
                  5 * CHAR(4) INIT('-CON'), /* IODB TYPE             */
                  5 * (14) FIXED(31) INIT((14)0);
    GENERATE DATA REFS(IODBDA,IODBOUT,IODBWORK,IODBCON);
          ENTRY IODBDA
          ENTRY IODBOUT
          ENTRY IODBWORK
          ENTRY IODBCON
 @ENDGEN
    DCL
          1 MDCE BDY(WORD),         /* MEMORY DISPATCHING CONTROL
                                       ELEMENT                       */
              3 MDCEMDCE CHAR(4) INIT('MDCE'), /* MDCE ACRONYM       */
              3 MDCEACTV PTR(31) INIT(0), /* ACTIVE MDCB QUEUE       */
              3 MDCEAVIL PTR(31) INIT(ADDR(MDCB)); /* AVAILABLE
                                       MDCB QUEUE                    */
    DCL
          1 MDCB(10) BDY(WORD),      /* MEMORY DISPATCHING CONTROL
                                       BLOCK                         */
              3 MDCBMDCB CHAR(4) INIT((DIM(MDCB))'MDCB'), /* MDCB
                                       ACRONYM                       */
              3 MDCBNEXT PTR(31) INIT(ADDR(MDCB) + LENGTH(MDCB),
               ADDR(MDCB) + 2*LENGTH(MDCB),ADDR(MDCB) + 3*LENGTH(MDCB),
               ADDR(MDCB) + 4*LENGTH(MDCB),ADDR(MDCB) + 5*LENGTH(MDCB),
               ADDR(MDCB) + 6*LENGTH(MDCB),ADDR(MDCB) + 7*LENGTH(MDCB),
               ADDR(MDCB) + 8*LENGTH(MDCB),ADDR(MDCB) + 9*LENGTH(MDCB),
               0),                   /* ADDRESS OF NEXT MDCB         */
              3 MDCBPSW CHAR(8) INIT((DIM(MDCB))'00'X), /* PSW AT TIME
                                       OF INTERRUPT                  */
              3 MDCBGRS BDY(WORD) CHAR(64) INIT((DIM(MDCB))'00'X), /*
                                       GENERAL REGISTERS             */
              3 MDCBSTOR PTR(31) INIT((DIM(MDCB))0), /* CONTENTS OF
                                       CONTROL REGISTER 1            */
              3 MDCBPI FIXED(15) INIT((DIM(MDCB))0), /* PROGRAM
                                       INTERRUPT CODE                */
              3 MDCBFLGS BIT(8) INIT((DIM(MDCB))0), /* MDCB FLAGS    */
                  5 MDCBASMI BIT(1), /* ASM FUNCTION STATUS          */
                  5 MDCBDUMP BIT(1), /* DUMP REQUEST STATUS          */
                  5 * BIT(6),       /* RESERVED                      */
              3 * BIT(8) INIT((DIM(MDCB))0); /* RESERVED             */

 %PSWCOM:;
 @EJECT;
    DCL
          1 PSW BASED,              /* OS/VS PSW (S/370 EC MODE)     */
            2 PSWSM CHAR(1),        /* SYSTEM MASK                   */
              3 * BIT(1),
              3 PSWPER BIT(1),      /* PROGRAM EVENT RECORDING       */
              3 * BIT(1),
              3 * BIT(1),
              3 * BIT(1),
              3 PSWDAT BIT(1),      /* DYNAMIC ADDRESS TRANSLATION   */
              3 PSWIO BIT(1),       /* INPUT / OUTPUT                */
              3 PSWXTRNL BIT(1),    /* EXTERNAL                      */
            2 * CHAR(1),
              3 PSWKEY BIT(4),      /* PROTECTION KEY                */
              3 PSWMODE BIT(1),     /* EXTENDED CONTROL MODE         */
              3 PSWMCH BIT(1),      /* MACHINE CHECK MASK            */
              3 PSWAIT BIT(1),      /* WAIT STATE                    */
              3 PSWPRBLM BIT(1),    /* PROBLEM STATE                 */
            2 PSWCCPM CHAR(1),
              3 * BIT(2),           /* UNDEFINED                     */
              3 * BIT(2),           /* CONDITION CODE                */
              3 PSWFPO BIT(1),      /* FIXED POINT OVERFLOW          */
              3 PSWDO BIT(1),       /* DIVIDE OVERFLOW               */
              3 PSWEU BIT(1),       /* EXPONENT UNDERFLOW            */
              3 PSWSIG BIT(1),      /* SIGNIFICANCE                  */
            2 * CHAR(1),
              3 PSWSP BIT(1),       /* SEGMENT PROTECTION            */
            2 PSWIA PTR(31),        /* INSTRUCTION ADDRESS           */
            2 PSWEND CHAR(0);       /* END OF PSW                    */
    DCL
          PTRTREAL PTR(31) CONSTANT(30712); /* PTRT LOCATION X'77F8' */
    DCL
          1 PTRT BASED(PTRTREAL),   /* PTRT DEFINITION               */
              3 PTRTPTRT CHAR(4),   /* EBCDIC ACRONYM                */
              3 PTRTLGID CHAR(4),   /* LOGICAL GROUP FOR MEMORY      */
              3 PTRTRS (NUMSEG) PTR(31), /* SEGMENT TABLE SECTION    */
              3 PTRTVS (NUMSEG) PTR(31); /* VIRTUAL ADDR SECTION     */
    DCL
          PTRTRSA PTR(31) BASED;    /* REAL STORAGE ADDRESS OF PAGE
                                       TABLE                         */
    DCL
          PTRTVSA PTR(31) BASED(ADDR(PTRTRSA)+NUMSEG*LENGTH(PTRTRSA));
                                    /* VIRTUAL ADDR OF PAGE TABLE    */
    DCL
          1 RCB BDY(WORD) BASED,    /* RECOVERY CONTROL BLOCK        */
              3 RCBNEXT PTR(31),    /* NEXT HIGHER RCB               */
              3 RCBSTOR PTR(31),    /* CONTROL REGISTER 1 FOR EXIT   */
              3 RCBSAVE PTR(31),    /* ADDRESS OF RECOVERY ROUTINE
                                       REGISTER SAVE AREA            */
              3 RCBEXIT PTR(31),    /* ADDRESS OF RECOVERY ROUTINE   */
              3 RCBBASE PTR(31);    /* BASE ADDRESS OF RECOVERY
                                       ROUTINE                       */
    %IF DEBUG ^= 'YES' %THEN        /* DEBUG AREAS TO BE INCLUDED    */
      %GOTO NODEBUG;                /* NO - SKIP DEBUG AREAS         */
 @EJECT;
    DCL
          1 DEBUGLSD LOCATION(3286), /* LOW CORE DEBUG COUNTERS      */
              3 PFTRCLM  FIXED(15), /* NUMBER OF PAGES RECLAIMED
                                       FROM REAL STORAGE             */
              3 PFBUFWAT FIXED(15), /* NUMBER OF TIMES WAT ENTERED FROM
                                       BUF TO WAIT FOR OUTPUT BUFFERS*/
              3 PFTAPCPU FIXED(15), /* NUMBER OF TIMES SWITCHED CPUS */
              3 PFSIODA  FIXED(15), /* NUMBER OF TIMES SIO ENTERED FOR
                                       I/O TO D.A.                   */
              3 PFSIOWK  FIXED(15), /* NUMBER OF TIMES SIO ENTERED FOR
                                       I/O TO WORKFILE               */
              3 PFSIOOUT FIXED(15), /* NUMBER OF TIMES SIO ENTERED FOR
                                       I/O TO OUTPUT                 */
              3 PFSIOPCI FIXED(15), /* NUMBER OF TIMES SIO QUEUED PCI
                                       CHANNEL PROGRAM TO OUTPUT     */
              3 PFSIOWAT FIXED(15), /* NUMBER OF TIMES WAT ENTERED FROM
                                       SIO TO WAIT (CHANNEL PROGRAMS)*/
              3 PFWATENW FIXED(15), /* NUMBER OF TIMES WAT ENTERED
                                       ENABLED WAIT STATE            */
              3 PFWATEN  FIXED(15), /* NUMBER OF TIMES WAT ENABLED   */
              3 PFWATDE  FIXED(15), /* NUMBER OF TIMES WAT RECEIVED
                                       DEVICE END FOR CHAIN          */
              3 PFWATOIP FIXED(15), /* NUMBER OF TIMES WAT PROCESSED
                                       INTERRUPTS OTHER THAN REQUEST */
              3 PFIOIRST FIXED(15); /* NUMBER OF TIMES IOI RESTARTED
                                       OUTPUT I/O FOLLOWING DEV END  */
 %NODEBUG:;
 @EJECT;
    DCL
          1 SADMPLSD LOCATION(3312), /* SADMP LOW CORE STORAGE
                                       DEFINITIONS                   */
              3 PSWSADMP CHAR(8),   /* EBCDIC IDENTIFIER             */
              3 SVIRPSW CHAR(8) BDY(DWORD), /* RETURN PSW TO AMDSASVI
                                       FOLLOWING MEMORY SWITCH       */
              3 AUDPSW CHAR(8) BDY(DWORD), /* AMDSAAUD PSW TO GIVE
                                    CONTROL TO RCB EXIT              */
              3 SAVEDUMP CHAR(8),   /* EBCDIC IDENTIFIER OF SAVE
                                       AREAS                         */
              3 LOWGRS CHAR(64),    /* SAVE AREA FOR GENERAL
                                       REGISTERS ACROSS CPU-CPU
                                       COMMUNICATIONS                */
              3 LOWCRS CHAR(64),    /* SAVE AREA FOR CONTROL
                                       REGISTERS ACROSS CPU-CPU
                                       COMMUNICATIONS                */
              3 SVINAME CHAR(4),    /* SAVE AREA ID                  */
              3 SVISAVE CHAR(100),  /* REGISTER SAVE AREA            */
              3 PGINAME CHAR(4),    /* SAVE AREA ID                  */
              3 PGISAVE CHAR(100),  /* REGISTER SAVE AREA            */
              3 IOINAME CHAR(4),    /* SAVE AREA ID                  */
              3 IOISAVE CHAR(100),  /* REGISTER SAVE AREA            */
              3 AUDNAME CHAR(4),    /* SAVE AREA ID                  */
              3 AUDSAVE CHAR(100),  /* REGISTER SAVE AREA            */
              3 FRMNAME CHAR(4),    /* SAVE AREA ID                  */
              3 FRMSAVE CHAR(100),  /* REGISTER SAVE AREA            */
              3 GTMNAME CHAR(4),    /* SAVE AREA ID                  */
              3 GTMSAVE CHAR(100);  /* REGISTER SAVE AREA            */
 @EJECT;
    %IF RMKINIT ^= '' %THEN         /* INITIALIZATION REQUIRED       */
      %GOTO VCTINIT;                /* YES - SKIP BASED CODE         */
    DCL
          1 VCCT BDY(WORD) BASED(VCCTREG), /* VIRTUAL COMMON
                                       COMMUNICATION TABLE           */
              3 VCTVCT CHAR(4),     /* VCCT ACRONYM                  */
              3 VCTRCB PTR(31),     /* RCB QUEUE POINTER             */
              3 VCTRECSN BIT(8),    /* RECURSION FLAGS               */
                  5 VCTPGIR BIT(1), /* PROGRAM INTERRUPT RECURSION
                                       INVALID                       */
                  5 VCTUPDR BIT(1), /* PROGRAM INTERRUPT RECURSION IN
                                       AMDSAUPD INVALID              */
                  5 VCTEXIR BIT(1), /* RECURSION THROUGH TERMINATION
                                       ROUTINE INVALID               */
                  5 VCTRSMR BIT(1), /* RECURSION THROUGH AMDSARSM
                                       INVALID                       */
                  5 * BIT(4),       /* RESERVED                      */
              3 VCTFLGS BIT(8),     /* FLAGS                         */
                  5 VCTSADMP BIT(1), /* RECOVERY DUMP REQUESTED      */
                  5 VCTMEMIN BIT(1), /* MEMORY IS IN STORAGE         */
                  5 VCTASMIC BIT(1), /* ASM IN CONTROL               */
                  5 VCTSARTB BIT(1), /* BAD SART             @Z40WI3F*/
                  5 VCTLRCLM BIT(1), /* NO RECLAIM FOR LOCAL MEMORY  */
                  5 VCTNOI22 BIT(1), /* INHIBIT I22 MSG      @YM5001 */
                  5 VCT4KK BIT(1),  /* INDICATES THAT 4K RATHER THAN
                                       2K KEYS ARE PRESENT   @ZA58051*/
                  5 * BIT(1),        /* RESERVED             @ZA58051*/
              3 VCTRECVA FIXED(16), /* SADMP RECOVERY DUMP ASID      */
              3 VCTMDCE PTR(31),    /* MDCE PTR                      */
              3 VCTSTOR PTR(31),    /* SEGMENT TABLE ORIGIN FOR
                                       MEMORY SWITCH                 */
              3 VCTDSCE PTR(31),    /* DSCE PTR                      */
              3 VCTBCTH PTR(31),    /* BCTH PTR                      */
              3 VCTBCTC PTR(31),    /* CURRENT BCT PTR               */
              3 VCTIODB PTR(31),    /* IODB PTR                      */
              3 VCTARB PTR(31),     /* ARB PTR                       */
              3 VCTSUBPL PTR(31),   /* SUBPOOL DUMP LIST POINTER     */
              3 VCTWKHI PTR(8),     /* NUMBER OF RECORDS ON WORKFILE */
              3 VCTWKC PTR(8),      /* CURRENT POSITION OF WORKFILE  */
              3 VCTCPUC FIXED(15),  /* CURRENT CPU ADDRESS           */
              3 VCTASCB PTR(31),    /* CURRENT ASCB ADDRESS IN
                                       PROCESS                       */
              3 * PTR(31),          /* UNUSED                @Z40WI3F*/
              3 VCTPTRT PTR(31),    /* ADDR OF PTRT                  */
              3 VCTASID FIXED(16),  /* CURRENT ASID                  */
              3 VCTAUDIT FIXED(15), /* ERROR CODE FOR INVOKING
                                       AMDSAAUD FOR A DUMP           */
              3 VCTCBID CHAR(8),    /* SYSTEM CONTROL BLOCK IN USE   */
                  5 * CHAR(7),
                  5 VCTCBIDN PTR(8), /* CONTROL BLOCK ID             */
              3 VCTJBNME CHAR(8),   /* JOBNAME CURRENTLY BEING
                                       PROCESSED                     */
              3 VCTCBADR PTR(31),   /* ADDRESS OF SYSTEM CONTROL
                                       BLOCK IN USE                  */
              3 VCTLPA PTR(31),     /* ADDRESS OF LPA FOR RELOCATION */
              3 VCTPGT PTR(31),     /* ADDRESS OF SADMP PAGE TABLE   */
              3 VCTSVCTB PTR(31),   /* ADDRESS OF SVCSADMP TABLE     */
              3 VCTCPOUT PTR(31),   /* ADDRESS OF CURRENT OUTPUT
                                       CHANNEL PROGRAM               */
              3 VCTEXTRA FIXED(15), /* NUMBER OF PAGES USED ABOVE 1
                                       SEGMENT                       */
              3 * FIXED(15),        /* RESERVED                      */
              3 VCTCCTV PTR(31),    /* VIRTUAL ADDRESS OF CCT        */
              3 VCTVCCTV PTR(31);   /* VIRTUAL ADDRESS OF VCCT       */
    %GOTO COMMON;                   /* SKIP INITIALIZATION CODE      */

 %VCTINIT:;
    DCL
          1 VCCT BDY(WORD) EXTERNAL LOCAL, /* VIRTUAL COMMON
                                       COMMUNICATION TABLE           */
              3 VCTVCT CHAR(4) INIT('VCCT'), /* VCCT ACRONYM         */
              3 VCTRCB PTR(31) INIT(0), /* RCB QUEUE POINTER         */
              3 VCTRECSN BIT(8) INIT('00'X), /* RECURSION FLAGS      */
                  5 VCTPGIR BIT(1), /* PROGRAM INTERRUPT RECURSION
                                       INVALID                       */
                  5 VCTUPDR BIT(1), /* PROGRAM INTERRUPT RECURSION IN
                                       AMDSAUPD INVALID              */
                  5 VCTEXIR BIT(1), /* RECURSION THROUGH TERMINATION
                                       ROUTINE INVALID               */
                  5 VCTRSMR BIT(1), /* RECURSION THROUGH AMDSARSM
                                       INVALID                       */
                  5 * BIT(4),       /* RESERVED                      */
              3 VCTFLGS BIT(8) INIT('00'X), /* FLAGS                 */
                  5 VCTSADMP BIT(1), /* RECOVERY DUMP REQUESTED      */
                  5 VCTMEMIN BIT(1), /* MEMORY IS IN STORAGE         */
                  5 VCTASMIC BIT(1), /* ASM IN CONTROL               */
                  5 VCTSARTB BIT(1), /* BAD SART             @Z40WI3F*/
                  5 VCTLRCLM BIT(1), /* NO RECLAIM FOR LOCAL MEMORY  */
                  5 VCTNTERM BIT(1), /* NORMAL TERMINATION           */
                  5 * BIT(2) ,      /* RESERVED                      */
              3 VCTRECVA FIXED(16) INIT('FFFD'X), /* SADMP RECOVERY
                                       DUMP ASID                     */
              3 VCTMDCE PTR(31) INIT(ADDR(MDCE)), /* MDCE PTR        */
              3 VCTSTOR PTR(31) INIT(0), /* SEGMENT TABLE ORIGIN FOR
                                       MEMORY SWITCH                 */
              3 VCTDSCE PTR(31) INIT(ADDR(DSCE)), /* DSCE PTR        */
              3 VCTBCTH PTR(31) INIT(ADDR(BCTH)), /* BCTH PTR        */
              3 VCTBCTC PTR(31) INIT(ADDR(BCTI)), /* CURRENT BCT PTR */
              3 VCTIODB PTR(31) INIT(ADDR(IODBI)), /* IODB PTR       */
              3 VCTARB PTR(31) INIT(ADDR(ARBH)), /* ARB PTR          */
              3 VCTSUBPL PTR(31) INIT(ADDR(SDLH)), /* SUBPOOL DUMP
                                       LIST POINTER                  */
              3 VCTWKHI PTR(8) INIT(0), /* NUMBER OF RECORDS ON
                                       WORKFILE                      */
              3 VCTWKC PTR(8) INIT(0), /* CURRENT POSITION OF
                                       WORKFILE                      */
              3 VCTCPUC FIXED(15) INIT(0), /* CURRENT CPU ADDRESS    */
              3 VCTASCB PTR(31) INIT(0), /* CURRENT ASCB ADDRESS IN
                                       PROCESS                       */
              3 * PTR(31),          /* UNUSED                @Z40WI3F*/
              3 VCTPTRT PTR(31) INIT(PTRTREAL), /* ADDR OF PTRT      */
              3 VCTASID FIXED(16) INIT(0), /* CURRENT ASID           */
              3 VCTAUDIT FIXED(15) INIT(0), /* ERROR CODE FOR INVOKING
                                       AMDSAAUD FOR A DUMP           */
              3 VCTCBID CHAR(8) INIT(' '), /* SYSTEM CONTROL BLOCK IN
                                       USE                           */
                  5 * CHAR(7),
                  5 VCTCBIDN PTR(8), /* CONTROL BLOCK ID             */
              3 VCTJBNME CHAR(8) INIT(' '), /* JOBNAME CURRENTLY
                                       BEING PROCESSED               */
              3 VCTCBADR PTR(31) INIT(0), /* ADDRESS OF SYSTEM
                                       CONTROL BLOCK IN USE          */
              3 VCTLPA PTR(31) INIT(0), /* ADDRESS OF LPA FOR
                                       RELOCATION                    */
              3 VCTPGT PTR(31) INIT(ADDR(SADMPPGT)), /* ADDRESS OF
                                       SADMP PAGE TABLE              */
              3 VCTSVCTB PTR(31) INIT(ADDR(SVCSADMP)), /* ADDRESS OF
                                       SVCSADMP TABLE                */
              3 VCTCPOUT PTR(31) INIT(ADDR(OUTCCW)), /* ADDRESS OF
                                       CURRENT OUTPUT CHANNEL PROGRAM*/
              3 VCTEXTRA FIXED(15) INIT(0), /* NUMBER OF PAGES USED
                                       ABOVE 1 SEGMENT               */
              3 * FIXED(15) INIT(0), /* RESERVED                     */
              3 VCTCCTV PTR(31) INIT(0), /* VIRTUAL ADDRESS OF CCT   */
              3 VCTVCCTV PTR(31) INIT(0); /* VIRTUAL ADDRESS OF VCCT */
 %COMMON:;
 @EJECT;
    DCL
          1 SDL BASED,              /* SUBPOOL DUMP LIST             */
              3 SDLNUM PTR(8),      /* NUMBER OF ENTRIES             */
              3 SDLSPN PTR(8);      /* SUBPOOL NUMBER TO BE DUMPED   */
    /* REGISTER DECLARES                                             */
    DCL   RETREG REG(14) PTR(31),   /* RETURN REGISTER               */
          RETCODE REG(15) FIXED(31), /* RETURN CODE REGISTER         */
          BASEREG REG(11) PTR(31) RESTRICTED, /* BASE REGISTER       */
          VCCTREG REG(12) PTR(31) RESTRICTED, /* VCCT ADDRESS        */
          R0 REG(0) PTR(31),
          R1 REG(1) PTR(31),
          R2 REG(2) PTR(31),
          R3 REG(3) PTR(31),
          R4 REG(4) PTR(31),
          R5 REG(5) PTR(31),
          R6 REG(6) PTR(31),
          R7 REG(7) PTR(31),
          R8 REG(8) PTR(31),
          R9 REG(9) PTR(31),
          R10 REG(10) PTR(31),
          R11 REG(11) PTR(31),
          R12 REG(12) PTR(31),
          R13 REG(13) PTR(31),
          R14 REG(14) PTR(31),
          R15 REG(15) PTR(31);
    /* SAVE AREA FORMATS                                             */
    DCL   1 REGLOCAL BDY(WORD) BASED, /* FORMAT OF LOW CORE SAVE
                                       AREAS                         */
              3 REGL0 PTR(31),
              3 REGL1 PTR(31),
              3 REGL2 PTR(31),
              3 REGL3 PTR(31),
              3 REGL4 PTR(31),
              3 REGL5 PTR(31),
              3 REGL6 PTR(31),
              3 REGL7 PTR(31),
              3 REGL8 PTR(31),
              3 REGL9 PTR(31),
              3 REGL10 PTR(31),
              3 REGL11 PTR(31),
              3 REGL12 PTR(31),
              3 REGL13 PTR(31),
              3 REGL14 PTR(31),
              3 REGL15 PTR(31);
    DCL   1 SAVEFORM BDY(WORD) BASED(R13), /* FORMAT OF STANDARD SAVE
                                       AREA                          */
              3 SAVEID CHAR(1),
              3 SAVENAME CHAR(3),   /* MODULE NAME - LAST 3 CHARS    */
              3 SAVEBACK PTR(31),   /* PREVIOUS SAVE AREA            */
              3 SAVENEXT PTR(31),   /* NEXT SAVE AREA                */
              3 SAVER14 PTR(31),
              3 SAVER15 PTR(31),
              3 SAVER0 PTR(31),
              3 SAVER1 PTR(31),
              3 SAVER2 PTR(31),
              3 SAVER3 PTR(31),
              3 SAVER4 PTR(31),
              3 SAVER5 PTR(31),
              3 SAVER6 PTR(31),
              3 SAVER7 PTR(31),
              3 SAVER8 PTR(31),
              3 SAVER9 PTR(31),
              3 SAVER10 PTR(31),
              3 SAVER11 PTR(31),
              3 SAVER12 PTR(31);
    /* MISCELLANEOUS CONSTANTS                                       */
    DCL   CCTADDR PTR(31) CONSTANT(28672); /* ADDR OF CCT ('7000'X)  */
    DCL   PGEMASK BIT(8) CONSTANT('01'X); /* SYSTEM MASK-ENABLED FOR
                                       EXTERNAL INTERRUPTS ONLY, DAT
                                       OFF                           */
    DCL   DATMASK BIT(8) CONSTANT('05'X); /* SYSTEM MASK-ENABLED FOR
                                       EXTERNAL INTERRUPTS ONLY, DAT
                                       ON                            */
    DCL   NUMSEG FIXED(31) CONSTANT(256); /* NUMBER OF SEGMENTS IN
                                       SYSTEM                        */
    DCL   ON BIT(1) CONSTANT('1'B), /* SWITCH ON                     */
          OFF BIT(1) CONSTANT('0'B); /* SWITCH OFF                   */
    /* SVC NUMBERS                                                   */
    DCL   SIOSVC FIXED(15) CONSTANT(0), /* SVC NUMBER FOR AMDSASIO   */
          WATSVC FIXED(15) CONSTANT(1), /* SVC NUMBER FOR AMDSAWAT   */
          TAPSVC FIXED(15) CONSTANT(2), /* SVC NUMBER FOR AMDSATAP   */
          CONSVC FIXED(15) CONSTANT(3), /* SVC NUMBER FOR AMDSACON   */
          GTMSVC FIXED(15) CONSTANT(4), /* SVC NUMBER FOR AMDSAGTM   */
          FRMSVC FIXED(15) CONSTANT(5), /* SVC NUMBER FOR AMDSAFRM   */
          ASMSVC FIXED(15) CONSTANT(6), /* SVC NUMBER FOR AMDSAASM   */
          ERMSVC FIXED(15) CONSTANT(7), /* SVC NUMBER FOR AMDSAERM   */
          SINSVC FIXED(15) CONSTANT(8), /* SVC NUMBER FOR AMDSASIN   */
          UPDSVC FIXED(15) CONSTANT(9), /* SVC NUMBER FOR AMDSAUPD   */
          TERSVC FIXED(15) CONSTANT(10), /* SVC NUMBER FOR AMDSATER  */
          CSASVC FIXED(15) CONSTANT(11), /* SVC NUMBER FOR AMDSACSA  */
          AIDSVC FIXED(15) CONSTANT(12), /* SVC NUMBER FOR AMDSAAID  */
          AUDSVC FIXED(15) CONSTANT(13), /* SVC NUMBER FOR AMDSAAUD  */
          BUFSVC FIXED(15) CONSTANT(14), /* SVC NUMBER FOR AMDSABUF  */
          DERSVC FIXED(15) CONSTANT(15), /* SVC NUMBER FOR AMDSADER  */
          ARDSVC FIXED(15) CONSTANT(16), /* SVC NUMBER FOR AMDSAARD  */
          MDMSVC FIXED(15) CONSTANT(17), /* SVC NUMBER FOR AMDSAMDM  */
          RSMSVC FIXED(15) CONSTANT(18), /* SVC NUMBER FOR AMDSARSM  */
          AMRSVC FIXED(15) CONSTANT(19), /* SVC NUMBER FOR AMDSAAMR  */
          ERBSVC FIXED(15) CONSTANT(20), /* SVC NUMBER FOR AMDSAERB  */
          ERPSVC FIXED(15) CONSTANT(21), /* SVC NUMBER FOR AMDSAERP  */
          GTFSVC FIXED(15) CONSTANT(22), /* SVC NUMBER FOR AMDSAGTF  */
          ERISVC FIXED(15) CONSTANT(23), /* SVC NUMBER FOR AMDSAERI  */
          UCBSVC FIXED(15) CONSTANT(24), /* SVC NUMBER FOR AMDSAUCB  */
          VCKSVC FIXED(15) CONSTANT(25), /* SVC NUMBER FOR AMDSAVCK  */
          SPQSVC FIXED(15) CONSTANT(26), /* SVC NUMBER FOR AMDSASPQ  */
          IOBSVC FIXED(15) CONSTANT(27), /* SVC NUMBER FOR AMDSAIOB  */
          BINSVC FIXED(15) CONSTANT(28), /* SVC NUMBER FOR AMDSABIN  */
          INRSVC FIXED(15) CONSTANT(29), /* SVC NUMBER FOR AMDSAINR  */
          VRTSVC FIXED(15) CONSTANT(30); /* SVC NUMBER FOR AMDSAVRT  */
    /* MESSAGE IDS                                                   */
    DCL   AMD002I BIT(8) CONSTANT('02'X), /* REFERENCE FOR MESSAGE   */
          AMD004A BIT(8) CONSTANT('04'X), /* REFERENCE FOR MESSAGE   */
          AMD010I BIT(8) CONSTANT('0A'X), /* REFERENCE FOR MESSAGE   */
          AMD012D BIT(8) CONSTANT('0C'X), /* REFERENCE FOR MESSAGE   */
          AMD014A BIT(8) CONSTANT('0E'X), /* REFERENCE FOR MESSAGE   */
          AMD015I BIT(8) CONSTANT('0F'X), /* REFERENCE FOR MESSAGE   */
          AMD016I BIT(8) CONSTANT('10'X), /* REFERENCE FOR MESSAGE   */
          AMD017I BIT(8) CONSTANT('11'X), /* REFERENCE FOR MESSAGE   */
          AMD018I BIT(8) CONSTANT('12'X), /* REFERENCE FOR MESSAGE   */
          AMD019A BIT(8) CONSTANT('13'X), /* REFERENCE FOR MESSAGE   */
          AMD020A BIT(8) CONSTANT('14'X), /* REFERENCE FOR MESSAGE   */
          AMD022I BIT(8) CONSTANT('16'X), /* REFERENCE FOR MESSAGE   */
          AMD023I BIT(8) CONSTANT('17'X), /* REFERENCE FOR MESSAGE   */
          AMD025I BIT(8) CONSTANT('19'X), /* REFERENCE FOR MESSAGE   */
          AMD029D BIT(8) CONSTANT('1D'X), /* REFERENCE FOR MESSAGE   */
          AMD030I BIT(8) CONSTANT('1E'X), /* REFERENCE FOR MESSAGE   */
          AMD031I BIT(8) CONSTANT('1F'X), /* REFERENCE FOR MESSAGE   */
          AMD032I BIT(8) CONSTANT('20'X), /* REFERENCE FOR MESSAGE   */
          AMD033I BIT(8) CONSTANT('21'X), /* REFERENCE FOR MESSAGE   */
          AMD034I BIT(8) CONSTANT('22'X), /* REFERENCE FOR MESSAGE   */
          MSGCR FIXED(8) CONSTANT(0), /* COMMAND REJECT ID           */
          MSGIR FIXED(8) CONSTANT(1), /* INTV REQUIRED ID            */
          MSGBOC FIXED(8) CONSTANT(2), /* BUS OUT CK ID              */
          MSGEC FIXED(8) CONSTANT(3), /* EQUIPMENT CK ID             */
          MSGDC FIXED(8) CONSTANT(4), /* DATA CK ID                  */
          MSGOR FIXED(8) CONSTANT(5), /* OVERRUN ID                  */
          MSGTCC FIXED(8) CONSTANT(6), /* TCC ID                     */
          MSGSCK FIXED(8) CONSTANT(7), /* SEEK CK ID                 */
          MSGPE FIXED(8) CONSTANT(8), /* PERMANENT ERR ID            */
          MSGEOC FIXED(8) CONSTANT(10), /* END OF CYL ID             */
          MSGEDP FIXED(8) CONSTANT(11), /* ENV DATA ID               */
          MSGNRF FIXED(8) CONSTANT(12), /* NO RCD FOUND ID           */
          MSGFP FIXED(8) CONSTANT(13), /* FILE PROT ID               */
          MSGOI FIXED(8) CONSTANT(14), /* OPER INCOMP ID             */
          MSGMAM FIXED(8) CONSTANT(15), /* MISS ADDR ID              */
          MSGATTN FIXED(8) CONSTANT(16), /* ATTENTION ID             */
          MSGSTM FIXED(8) CONSTANT(17), /* STATUS MOD ID             */
          MSGCUE FIXED(8) CONSTANT(18), /* CONTROL UNIT END ID       */
          MSGBUSY FIXED(8) CONSTANT(19), /* BUSY ID                  */
          MSGUE FIXED(8) CONSTANT(20), /* UNIT EXCEPTION ID          */
          MSGPCI FIXED(8) CONSTANT(21), /* PCI ID                    */
          MSGIL FIXED(8) CONSTANT(22), /* INCORRECT LNG ID           */
          MSGPCK FIXED(8) CONSTANT(23), /* PROG CK ID                */
          MSGPTK FIXED(8) CONSTANT(24), /* PROT CK ID                */
          MSGCDC FIXED(8) CONSTANT(25), /* CHAN DATA CK ID           */
          MSGCCC FIXED(8) CONSTANT(26), /* CHAN CTL CK ID            */
          MSGICC FIXED(8) CONSTANT(27), /* ICC ID                    */
          MSGCC FIXED(8) CONSTANT(28), /* CHAINING CK ID             */
          MSGUNK FIXED(8) CONSTANT(29), /* UNKNOWN ERR ID            */
          MSGERS FIXED(8) CONSTANT(30), /* ERR ON SENSE ID           */
          MSGERR FIXED(8) CONSTANT(31), /* ERR IN ERR REC ID         */
          MSGBLF FIXED(8) CONSTANT(32), /* BUFFERED LOG FULL ID      */
          MSGITF FIXED(8) CONSTANT(33), /* INVALID TRACK FORMAT ID   */
          MSGLP FIXED(8) CONSTANT(34), /* LOAD POINT ID              */
          MSGDCC FIXED(8) CONSTANT(35), /* DATA CONV CK ID           */
          MSGNC FIXED(8) CONSTANT(36), /* NOT CAPABLE ID             */
          MSGPEID FIXED(8) CONSTANT(37), /* PEID BURST CK ID         */
          MSGDI    FIXED(8) CONSTANT(38), /* DISABLED INTERFACE @H1A*/
          MSGWI    FIXED(8) CONSTANT(39), /* WRITE INHIBITED    @H1A*/
          MSGBUN   FIXED(8) CONSTANT(40), /* BASE DEVICE UNAVAILABLE
                             @H1A*/
          MSGMLE   FIXED(8) CONSTANT(41), /* MICROCODE LOGIC ERROR
                             @H1A*/
          MSGSSEC  FIXED(8) CONSTANT(42), /* SUBSYSTEM STORAGE
                      EQUIPMENT CHECK @H1A*/
          MSGSSATC FIXED(8) CONSTANT(43), /* SUBSYSTEM STORAGE
                     AVAILABILITY THRESHOLD CROSSED @H1A*/
          MSGSSUN  FIXED(8) CONSTANT(44), /* SUBSYSTEM STORAGE
                     UNUSABLE @H1A*/
          MSGSSMI  FIXED(8) CONSTANT(45), /* SUBSYSTEM STORAGE
                     MUST BE INITIALIZED @H1A*/
          MSGTIDO  FIXED(8) CONSTANT(46), /* TIMEOUT ON INTERNAL
                     DASD OPERATION @H1A*/
          MSGTFP   FIXED(8) CONSTANT(47); /* TRACK FORMAT NOT SUPPORTED
                     FOR PAGING OR NO RECORD FOUND @H1A*/
    /* CONTROL BLOCK IDS FOR VALIDITY CHECKING                       */
    DCL   VSPCTID PTR(8) CONSTANT(1), /* SPCT ID             @Z40WI3F*/
          VASCBID PTR(8) CONSTANT(2), /* ASCB ID                     */
          VASXBID PTR(8) CONSTANT(3), /* ASXB ID                     */
          VASVTID PTR(8) CONSTANT(4), /* ASVT ID                     */
          VCVTID PTR(8) CONSTANT(5), /* CVT ID                       */
          VEDBID PTR(8) CONSTANT(6), /* EDB ID                       */
          VDQEID PTR(8) CONSTANT(7), /* DQE ID                       */
          VBCBID PTR(8) CONSTANT(8), /* GTFBCB ID                    */
          VMCCEID PTR(8) CONSTANT(9), /* MCCE ID                     */
          VMCQEID PTR(8) CONSTANT(10), /* MCQE ID                    */
          VSPQEID PTR(8) CONSTANT(11), /* SPQE ID                    */
          VPARTID PTR(8) CONSTANT(12), /* PART ID            @Z40WI3F*/
          VSGTID PTR(8) CONSTANT(13), /* SEGMENT TABLE ID            */
          VRSMHID PTR(8) CONSTANT(14), /* RSM HEADER ID              */
          VLPMBID PTR(8) CONSTANT(15), /* LPMB ID                    */
          VUCBID PTR(8) CONSTANT(16), /* UCB ID                      */
          VASMVTID PTR(8) CONSTANT(17), /* ASMVT ID                  */
          VTCBID PTR(8) CONSTANT(18), /* TCB ID                      */
          VSARTID PTR(8) CONSTANT(19), /* SART ID            @Z40WI3F*/
          VPVTID PTR(8) CONSTANT(20); /* PVT ID                      */
    /* SUPPORTED DEVICE TYPE IDENTIFIERS.  THESE CONSTANTS ARE THE
       SAME AS THE DEVICE CODE VALUES FOR UCB FIELD UCBTBYT4         */
    DCL   DT2314 BIT(8) CONSTANT('08'X), /* 2314                     */
          DT3330 BIT(8) CONSTANT('09'X), /* 3330                     */
          DT33301 BIT(8) CONSTANT('0D'X), /* 3330-1                  */
          DT23051 BIT(8) CONSTANT('06'X), /* 2305-1                  */
          DT23052 BIT(8) CONSTANT('07'X), /* 2305-2                  */
          DT3340 BIT(8) CONSTANT('0A'X), /* 3340                     */
          DT3350 BIT(8) CONSTANT('0B'X), /* 3350             @Z30RSTA*/
          DT3380 BIT(8) CONSTANT('0E'X), /* 3380             @G81BP1W*/
          DT3375 BIT(8) CONSTANT('0C'X); /* 3375             @G87UP1W*/
