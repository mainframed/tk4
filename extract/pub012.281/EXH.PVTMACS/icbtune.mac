* %/* START OF SPECIFICATIONS****                              @Y30LB02
.*                                                             @Y30LB02
.*01   MODULE-NAME = ICBTUNE                                   @Y30LB02
.*                                                             @Y30LB02
.*01   DESCRIPTIVE-NAME = TUNING MACRO                         @Y30LB02
.*                                                             @Y30LB02
.*01   COPYRIGHT = NONE                                        @Y30LB02
.*                                                             @Y30LB02
.*01   FUNCTION = THIS MACRO WILL CAUSE TUNING                 @Y30LB02
.*     PARAMETERS TO BE MODIFIED OR DISPLAYED                  @Y30LB02
.*                                                             @Y30LB02
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02
.*                                                             @Y30LB02
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02
.*                                                             @Y30LB02
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02
.*                                                             @Y30LB02
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02
.*                      ICB AND TUN                            @Y30LB02
.*                                                             @Y30LB02
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF          @Y30LB02
.*                              REGISTERS BY MACROS:           @Y30LB02
.*                              R0,R1,R14, AND R15             @Y30LB02
.*                                                             @Y30LB02
.*01   MODULE-TYPE = MACRO                                     @Y30LB02
.*                                                             @Y30LB02
.*02     PROCESSOR = ASSEMBLER AND PLS                         @Y30LB02
.*                                                             @Y30LB02
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02
.*                                                             @Y30LB02
.*02     ENTRY-POINT = ICBTUNE                                 @Y30LB02
.*                                                             @Y30LB02
.*02     LINKAGE = SVC 126                                     @Y30LB02
.*                                                             @Y30LB02
.*01  INPUT =                                                  @Y30LB02
.*                                                             @Y30LB02
.*  THE TUNING REQUEST IS ISSUED IF A HOST WISHES TO           @Y30LB02
.*  TO UPDATE SPECIFIED LRU TUNING PARAMETERS.  THIS           @Y30LB02
.*  FUNCTION ALSO HAS THE CAPABILITY TO DISPLAY SPECIFIC       @Y30LB02
.*  LRU TUNING PARAMETERS.                                     @Y30LB02
.*                                                             @Y30LB02
.*   MACRO SYNTAX                                              @Y30LB02
.*                                                             @Y30LB02
.*   LIST FORM                                                 @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBTUNE  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02
.*                                                             @Y30LB02
.*   STANDARD FORM                                             @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBTUNE  FLAGS=ADDR/(R)        SDGNUM=ADDR/(R)               @Y30LB02
.*                               ECB=ADDR/(R)                  @Y30LB02
.*                               DATA=ADDR/(R)                 @Y30LB02
.*                                                             @Y30LB02
.* EXECUTE FORM                                                @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBTUNE  MF(E,NAME/(R)        MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02
.*                              ECB=ADDR/(R)                   @Y30LB02
.*                              SDGNUM=ADDR/(R)                @Y30LB02
.*                              DATA=ADDR/(R)                  @Y30LB02
.*                              FLAGS=ADDR/(R)                 @Y30LB02
.*                                                             @Y30LB02
.*  RESTRICTION:                                               @Y30LB02
.*                                                             @Y30LB02
.*  THE MF PARAMETER IS SPECIFIED WITH THE LIST AND            @Y30LB02
.*  EXECUTE FORMS.  THE DEFAULT (NULL) WILL REPRESENT          @Y30LB02
.*  STANDARD FORM.  IF STANDARD FORM IS INDICATED, THEN        @Y30LB02
.*  THE FLAGS PARAMETER IS NOT OPTIONAL.                       @Y30LB02
.*                                                             @Y30LB02
.*   KEYWORD PARAMETERS:                                       @Y30LB02
.*                                                             @Y30LB02
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02
.*          IS STORED.                                         @Y30LB02
.*                                                             @Y30LB02
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02
.*              AND LENGTH FIELDS.                             @Y30LB02
.*                                                             @Y30LB02
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02
.*                                                             @Y30LB02
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02
.*              PLS LIST FORM.                                 @Y30LB02
.*                                                             @Y30LB02
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02
.*              BUTE EXAMPLE:                                  @Y30LB02
.*                                                             @Y30LB02
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02
.*              BASED(*), ETC.                                 @Y30LB02
.*                                                             @Y30LB02
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02
.*              BINDING INSTRUCTION.                           @Y30LB02
.*                                                             @Y30LB02
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02
.*                                                             @Y30LB02
.*              SUB-PARAMETERS                                 @Y30LB02
.*                                                             @Y30LB02
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02
.*                                                             @Y30LB02
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02
.*                                                             @Y30LB02
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02
.*                   IN THE REQUEST BLOCK.                     @Y30LB02
.*                                                             @Y30LB02
.*  FLAGS - A 2 BYTE FIELD WHICH INDICATES THE FUNCTION TO     @Y30LB02
.*          BE PERFORMED.  (BITS 8, 9, 10 ARE MUTUALLY EX-     @Y30LB02
.*          EXCLUSIVE)  THE FORMAT OF THE FLAGS FIELD IS AS    @Y30LB02
.*          FOLLOWS:                                           @Y30LB02
.*                                                             @Y30LB02
.*  -----------------------------------------                  @Y30LB02
.*  × X ×0×0×0×0×0×0×0× X × X × X ×0×0×0×0×0×                  @Y30LB02
.*  -----------------------------------------                  @Y30LB02
.*                                                             @Y30LB02
.*  BIT 0-------'1'B    MODIFY MODE                            @Y30LB02
.*              '0'B    DISPLAY MODE                           @Y30LB02
.*                                                             @Y30LB02
.*  BITS 1-7---         ×RESERVED AND MUST BE ZERO×            @Y30LB02
.*                                                             @Y30LB02
.*  BIT 8-------'1'B    DISPLAY OR MODIFY THRESHOLDS           @Y30LB02
.*              '0'B    NO FUNCTION (DEFAULT)                  @Y30LB02
.*                                                             @Y30LB02
.*  BIT 9-------'1'B    DISPLAY OR MODIFY SLICE RANGE          @Y30LB02
.*                      PARAMETER                              @Y30LB02
.*              '0'B    NO FUNCTION (DEFAULT)                  @Y30LB02
.*                                                             @Y30LB02
.*  BIT 10------'1'B    DISPLAY OR MODIFY LRU CLOCK            @Y30LB02
.*                      RESOLUTION                             @Y30LB02
.*              '0'B    NO FUNCTION (DEFAULT)                  @Y30LB02
.*                                                             @Y30LB02
.*  BIT 11-15---        ×RESERVED AND MUST BE ZERO×            @Y30LB02
.*                                                             @Y30LB02
.*  MODIFY MODE                                                @Y30LB02
.*                                                             @Y30LB02
.*  THRESHOLDS:  IF MODIFY IS SPECIFIED WITH BIT 8 ON, THEN    @Y30LB02
.*  THE UPPER AND LOWER THRESHOLD DELTAS SPECIFIED WITH THE    @Y30LB02
.*  DATA PARAMETER WILL REPLACE THE UPPER AND LOWER THRESHOLD  @Y30LB02
.*  DELTAS IN THE STAGING DRIVE GROUP PAGE AVAILABILITY BLOCK. @Y30LB02
.*                                                             @Y30LB02
.*  SLICE RANGES:  IF MODIFY IS SPECIFIED WITH BIT 9 ON, THEN  @Y30LB02
.*  THE RANGES SPECIFIED WITH THE 'DATA' PARAMETER WILL RE-    @Y30LB02
.*  PLACE THE CURRENT SLICE RANGE FIELD.                       @Y30LB02
.*                                                             @Y30LB02
.*  LRU TIME DELTA:  IF MODIFY IS SPECIFIED WITH BIT 10 ON,    @Y30LB02
.*  THEN THE NEW TIME DELTA SPECIFIED WITH THE DATA PARAMETER  @Y30LB02
.*  WILL REPLACE THE OLD IN THE IMPL RECORD ON THE DASD TABLE  @Y30LB02
.*  PACK.  IF THE NEW DELTA SUCCESSFULLY REPLACES THE OLD,     @Y30LB02
.*  THEN THE 'IN CORE' LRU DELTA WILL BE CHANGED TO AGREE      @Y30LB02
.*  WITH THE NEW DELTA.                                        @Y30LB02
.*                                                             @Y30LB02
.*  DISPLAY MODE                                               @Y30LB02
.*                                                             @Y30LB02
.*  A MESSAGE WILL BE RETURNED TO THE USER IN THE AREA         @Y30LB02
.*  PROVIDED BY THE ECB PARAMETER.  THE DATA WILL HAVE THE     @Y30LB02
.*  FOLLOWING FORMAT:                                          @Y30LB02
.*                                                             @Y30LB02
.*  THRESHOLD DELTAS FOR THE SPECIFIED DRIVE GROUP:            @Y30LB02
.*                                                             @Y30LB02
.*    BYTE 0  -   THE UPPER THRESHOLD DELTA                    @Y30LB02
.*    BYTE 1  -   THE LOWER THRESHOLD DELTA                    @Y30LB02
.*    BYTES 2,3 - UNUSED                                       @Y30LB02
.*                                                             @Y30LB02
.*  SLICE RANGES FOR THE SPECIFIED STAGING DRIVE GROUP:        @Y30LB02
.*    BYTE 0  -   LRU TIME DELTA                               @Y30LB02
.*    BYTES 1-3 - UNUSED                                       @Y30LB02
.*                                                             @Y30LB02
.*  SDGNUM -  STAGING DRIVE GROUP NUMBER:  A ONE BYTE FIELD    @Y30LB02
.*            THAT CONTAINS THE STAGING DRIVE GROUP DESIGNA-   @Y30LB02
.*            TION.  THIS PARAMETER NEED NOT BE SPECIFIED      @Y30LB02
.*            IF BIT 10 (MODIFY OR DISPLAY LRU CLOCK           @Y30LB02
.*            RESOLUTION) IS SPECIFIED.                        @Y30LB02
.*                                                             @Y30LB02
.*  ECB    -  EVENT CONTROL BLOCK:  THE NAME OF THE EVENT      @Y30LB02
.*            CONTROL BLOCK.  THE USER MUST DECLARE A          @Y30LB02
.*            MINIMUM 12 BYTES CONTIGUOUS AREA TO CONTAIN      @Y30LB02
.*            THE MESSAGE.  THIS PARAMETER IS REQUIRED FOR     @Y30LB02
.*            DISPLAY MODE ONLY.  (THE ECB AND APPENDED        @Y30LB02
.*            DATA AREA MUST BE IN COMMON CORE IN VS/2.)       @Y30LB02
.*            THE ECB IS POSTED WITH ONE OF THE FOLLOWING      @Y30LB02
.*            POST CODES:  71, 72, 73, 74, AND ETC.  THE       @Y30LB02
.*            POST CODE WILL BE PLACED IN THE LOW-ORDER BYTE   @Y30LB02
.*            OF THE ECB - '7F'X INDICATES SUCCESSFUL          @Y30LB02
.*            COMPLETION.  THE MSC DATA WILL BE MOVED TO       @Y30LB02
.*            CORE LOCATION ADDR(ECB)+4.  THE ECB AREA MUST    @Y30LB02
.*            BE CLEARED(SET TO BINARY 0) BEFORE INVOKING      @Y30LB02
.*            THE MACRO.                                       @Y30LB02
.*                                                             @Y30LB02
.*  DATA   -  A FOUR BYTE FIELD THAT CONTAINS INFORMATION      @Y30LB02
.*            TO MODIFY THE MSC MEMORY, OR THE MSC TABLE       @Y30LB02
.*            BLOCK.  THIS PARAMETER IS REQUIRED FOR THE       @Y30LB02
.*            MODIFY MODE AND HAS THE FOLLOWING FORMAT:        @Y30LB02
.*                                                             @Y30LB02
.*  IF THRESHOLDS ARE TO BE MODIFIED THEN:                     @Y30LB02
.*                                                             @Y30LB02
.*    BYTE 0  -   NEW UPPER THRESHOLD DELTA VALUE              @Y30LB02
.*    BYTE 1  -   NEW LOWER THRESHOLD DELTA VALUE              @Y30LB02
.*    BYTES 2-3 - RESERVED                                     @Y30LB02
.*                                                             @Y30LB02
.*  IF SLICE RANGES ARE TO BE MODIFIED THEN:                   @Y30LB02
.*                                                             @Y30LB02
.*    BYTES 0-3 - NEW SLICE RANGE VALUES                       @Y30LB02
.*                                                             @Y30LB02
.*  IF LRU CLOCK DELTA IS TO BE MODIFIED THEN:                 @Y30LB02
.*                                                             @Y30LB02
.*    BYTE 0  -   NEW LRU CLOCK DELTA VALUE                    @Y30LB02
.*    BYTE 1-3  - RESERVED                                     @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02
.*                                                             @Y30LB02
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02
.*                                                             @Y30LB02
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02
.*       THE REQUESTED FUNCTION                                @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02
.*                                                             @Y30LB02
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02
.*                                                             @Y30LB02
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02
.*                INVOCATION                                   @Y30LB02
.*                                                             @Y30LB02
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02
.*                                                             @Y30LB02
.*01  TABLES = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.*01  TABLES = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02
.*               SPECIFIED IN MF(2)                            @Y30LB02
.*     ICB604I:  WARNING ONLY THE MF PARAMETER IS              @Y30LB02
.*               VALID FOR LIST FORM                           @Y30LB02
.*     ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD          @Y30LB02
.*               FORM MACRO                                    @Y30LB02
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME IF            @Y30LB02
.*               EXEC MACRO FORM REQUESTED                     @Y30LB02
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST BE       @Y30LB02
.*               L, E, OR NULL                                 @Y30LB02
.*                                                             @Y30LB02
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02
.*                                                             @Y30LB02
.*01  INNER MACROS = NONE                                      @Y30LB02
.*                                                             @Y30LB02
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02
.*                                                             @Y30LB02
.*01  CHANGE-ACTIVITY = S/D X04AC02 & Y30LB02                  @Y30LB02
.*                                                             @Y30LB02
.**** END OF SPECIFICATIONS ***                                @Y30LB02
         MACRO
&SYMBOL  ICBTUNE &MF=,&FLAGS=,&SDGNUM=,&ECB=,&DATA=
         LCLB &ERSW               ERROR SWITCH                 @Y30LB02
         LCLC &TUNEU              TUNE MACRO INSTR INDX        @Y30LB02
&TUNEU   SETC 'TU'.'&SYSNDX'      ASSIGN CHARACTER VALUE       @Y30LB02
.*                                                             @Y30LB02
.*       DETERMINATION OF DESIRED MACRO FORM,L MEANS           @Y30LB02
.*       THE LIST FORM, E REPRESENTS THE EXECUTE               @Y30LB02
.*       FORM AND THE DEFAULT IS STANDARD FORM                 @Y30LB02
.*                                                             @Y30LB02
         AIF  ('&MF(1)' NE 'L').EFORM       LIST FORM?         @Y30LB02
         AIF  ('&FLAGS' NE '' OR '&SDGNUM' NE '').WARN         @Y30LB02
         AIF  ('&ECB' NE '' OR '&DATA' NE '').WARN             @Y30LB02
         AGO  .LISTOK                                          @Y30LB02
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF  '           @Y30LB02
         MNOTE 4,'  PARAMETER IS VALID FOR LIST FORM '         @Y30LB02
.*                                                             @Y30LB02
.LISTOK  ANOP                                                  @Y30LB02
         AIF  ('&MF(2)' EQ 'MAP').LISTDS  MAPPING DSECT REQ?   @Y30LB02
*  MACMEAN  TUNING MACRO--INITIALIZED LIST FORM                @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  DS   0F                                               @Y30LB02
TUNELEN  DC   F'20'               LENGTH OF TUNE REQ BLK       @Y30LB02
TUNEOPCD DC   XL1'1C'             TUNING  FUNCTION OPCODE      @YM02853
TUNERES1 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02
TUNEFLAG DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02
TUNESDGN DC   XL1'00'             1-BYTE SDGNUM AREA           @Y30LB02
TUNERES2 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02
TUNEASID DC   XL2'0000'           2-BYTE ASID AREA             @Y30LB02
TUNEECB  DC   XL4'00000000'       4-BYTE ECB AREA              @Y30LB02
TUNEDATA DC   XL4'00000000'       2-BYTE RESERVED AREA         @Y30LB02
         AGO  .FINISH                                          @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.LISTDS  ANOP                                                  @Y30LB02
*  MACMEAN  TUNING MACRO--UNINITIALIZED LIST FORM              @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
ICBTUNE  DSECT                                                 @Y30LB02
TUNELEN  DS   F                   LEN OF 20 BYTES              @Y30LB02
TUNEOPCD DS   XL1                 TUNING OPCODE                @YM02853
TUNERES1 DS   XL1                 1-BYTE RESERVE-ZERO          @Y30LB02
TUNEFLAG DS   XL2                 2-BYTE FLAGS AREA            @Y30LB02
TUNESDGN DS   XL1                 1-BYTE SDGNUM AREA           @Y30LB02
TUNERES2 DS   XL1                 1-BYTE RESERVED AREA         @Y30LB02
TUNEASID DS   XL2                 2-BYTE ASID AREA             @Y30LB02
TUNEECB  DS   A                   4-BYTE ECB AREA              @Y30LB02
TUNEDATA DS   XL4                 4-BYTE DATA AREA             @Y30LB02
         AGO  .FINISH                                          @Y30LB02
.*                                                             @Y30LB02
.*       THE FOLLOWING PROCESSING IS ACCOMPLISHED FOR THE      @Y30LB02
.*       EXECUTABLE MACRO FORM                                 @Y30LB02
.*                                                             @Y30LB02
.EFORM   AIF  ('&MF(1)' NE 'E').SFORM       EXECUTE FORM?      @Y30LB02
         AIF  ('&MF(2)' EQ '').EXFAIL       MF(2) NULL?        @Y30LB02
*  MACMEAN  TUNING MACRO--EXECUTE FORM                         @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  IHBINNRA &MF(2)          LD ADDR OF REQUEST BLK       @Y30LB02
         LA   0,20                LD LEN OF TUNE BLK           @Y30LB02
         ST   0,0(1)              STORE LEN IN REQ BLK         @Y30LB02
         MVI  4(1),X'1C'          LD TUNING OPCODE IN BLK      @YM02853
         AGO  .CKSW1                                           @Y30LB02
.*                                                             @Y30LB02
.EXFAIL  ANOP                                                  @Y30LB02
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED '       @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
.*                                                             @Y30LB02
.CKSW1   AIF  (&ERSW).FINISH      IF ERROR-END PROCESSING      @Y30LB02
         AGO  .COMMON                                          @Y30LB02
.*                                                             @Y30LB02
.*       PROCESSING OF THE STANDARD FORM MACRO                 @Y30LB02
.*                                                             @Y30LB02
.SFORM   AIF  ('&MF(1)' NE '').BADFORM      STANDARD FORM?     @Y30LB02
         AIF  ('&FLAGS' NE '').CKSW2      FLAGS SPECIFIED?     @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO  .CKSW2                                           @Y30LB02
.*                                                             @Y30LB02
.BADFORM ANOP                                                  @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL.'        @Y30LB02
.*                                                             @Y30LB02
.*       THE FOLLOWING CODE CHECKS TO DETERMINE IF THE ERROR   @Y30LB02
.*       SWITCH IS ON.  IF YES, PROCESSING IS TERMINATED,      @Y30LB02
.*       OTHERWISE STANDARD FORM MACRO PROCESSING WILL BE      @Y30LB02
.*       CONTINUE                                              @Y30LB02
.*                                                             @Y30LB02
.CKSW2   AIF  (&ERSW).FINISH      IF YES-END PROCESSING        @Y30LB02
*  MACMEAN TUNING MACRO--STANDARD FORM                         @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
         CNOP 0,4                                              @Y30LB02
&SYMBOL  BAL  1,&TUNEU            LD R1 WITH ADDR REQ BLK      @Y30LB02
TUNELEN  DC   A(&TUNEU-*)         LEN OF TUN REQ BLK           @Y30LB02
TUNEOPCD DC   XL1'1C'             TUNING  FUNCTION OPCODE      @YM02853
TUNERES1 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02
TUNEFLAG DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02
TUNESDGN DC   XL1'00'             1-BYTE SDGNUM AREA           @Y30LB02
TUNERES2 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02
TUNEASID DC   XL2'0000'           2-BYTE ASID AREA             @Y30LB02
TUNEECB  DC   XL4'00000000'       4-BYTE ECB AREA              @Y30LB02
TUNEDATA DC   XL4'00000000'       2-BYTE RESERVED AREA         @Y30LB02
&TUNEU   EQU  *                                                @Y30LB02
.*                                                             @Y30LB02
.*       THE FOLLOWING CODE CHECKS FOR VALID PARAMETERS IF     @Y30LB02
.*       STANDARD OR EXECUTE FORM MACRO IS SPECIFIED.          @Y30LB02
.*       IF PARAMETERS ARE SPECIFIED, THEY WILL BE STORED      @Y30LB02
.*       IN THE REQUEST BLOCK.                                 @Y30LB02
.*                                                             @Y30LB02
.COMMON  AIF  ('&FLAGS' EQ '').SDGN   FLAGS SPECIFIED?         @Y30LB02
         AIF  ('&FLAGS'(1,1) EQ '(').FLREG   FLAGS REGFORM?    @Y30LB02
         MVC  6(2,1),&FLAGS       PUT FLAGS IN REQ BLOCK       @Y30LB02
         AGO  .SDGN               BRANCH TO CK HOSTID          @Y30LB02
.*                                                             @Y30LB02
.FLREG   ANOP                                                  @Y30LB02
         MVC  6(2,1),0(&FLAGS(1)) REGFORM PLACE FLAGS IN BLK   @Y30LB02
.*                                                             @Y30LB02
.SDGN    AIF  ('&SDGNUM' EQ '').CKECB       SDGNUM SPECIFIED?  @Y30LB02
         AIF  ('&SDGNUM'(1,1) EQ '(').HREG  REGISTER FORM?     @Y30LB02
         MVC  8(1,1),&SDGNUM      ADDRFORM-ST SDGNUM IN BLK    @Y30LB02
         AGO  .CKECB                                           @Y30LB02
.*                                                             @Y30LB02
.HREG    ANOP                                                  @Y30LB02
         MVC  8(1,1),0(&SDGNUM(1)) REGFORM-ST SDGNUM IN BLK    @Y30LB02
.*                                                             @Y30LB02
.CKECB   AIF  ('&ECB' EQ '').CKDATA       ECB SPECIFIED?       @Y30LB02
         AIF  ('&ECB'(1,1) EQ '(').EREG   REGISTER FORM?       @Y30LB02
         LA   15,&ECB             LOAD ECB IN REG 15           @Y30LB02
         ST   15,12(1)            ST ECB IN REQUEST BLK        @Y30LB02
         AGO  .CKDATA                                          @Y30LB02
.*                                                             @Y30LB02
.EREG    ANOP                                                  @Y30LB02
         ST   &ECB,12(1)          REGFORM-ST ECB IN BLK        @Y30LB02
.*                                                             @Y30LB02
.CKDATA  AIF  ('&DATA' EQ '').INVOKE      DATA SPECIFIED?      @Y30LB02
         AIF  ('&DATA'(1,1) EQ '(').DREG  REGISTER FORM?       @Y30LB02
         MVC  16(4,1),&DATA       MOVE DATA IN REQ BLK         @Y30LB02
         AGO  .INVOKE                                          @Y30LB02
.*                                                             @Y30LB02
.DREG    ANOP                                                  @Y30LB02
         MVC  16(4,1),0(&DATA(1)) REGFORM-PUT DATA IN BLK      @Y30LB02
.INVOKE  ANOP                                                  @Y30LB02
         SVC  126                 INVOKE THE SVC               @Y30LB02
.FINISH  MEND                                                  @Y30LB02
**/
*/*                                                          @Y30LB02*/
*   ICBTUNE: MACRO KEYS(MF,FLAGS,SDGNUM,ECB,DATA);         /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/*                     EXTERNAL DECLARES                    @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      TUNETES IS USED TO DETERMINE WHETHER THE STANDARD   @Y30LB02*/
*/*      FORM MACRO HAS BEEN INVOKED MORE THAN ONCE BY THE   @Y30LB02*/
*/*      SAME CALLER.                                        @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      TUTESTR1 WILL BE USED TO DETERMINE IF IT IS NECES-  @Y30LB02*/
*/*      SARY TO DECLARE R1 OR WHETHER IT IS ALREADY DCLD    @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*   DCL  TUTESTR1  FIXED  EXT;    /*REG1 DECLARE COUNTER     @Y30LB02*/
*   DCL  TUNETES  FIXED  EXT;     /*STANDARD INVOC COUNTER   @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*      INTERNAL DECLARES                                   @Y30LB02*/
*   DCL  OPCODE   CHAR;      /*DEFINE TUNE OPCODE            @Y30LB02*/
*   DCL  TUNLEN  CHAR;       /*DECLARE LENGTH OF ORDER       @Y30LB02*/
*   DCL  ERSW     FIXED;     /*DECLARE ERROR COND SWITCH     @Y30LB02*/
*   DCL  RETCODE  FIXED;     /*DECLARE RETURN CODE AREA      @Y30LB02*/
*   DCL  CTR      FIXED;     /*DECLARE CTR FOR LIST FORM     @Y30LB02*/
*        ERSW=0;             /*INITIALIZE ERROR SWITCH       @Y30LB02*/
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/
*        TUNLEN='14';        /*INITIALIZE LENGTH FIELD       @Y30LB02*/
*        OPCODE='1C';        /*INITIALIZE OPCODE VARIABLE    @YM02853*/
*        CTR=0;              /*INITIALIZE INCREMENT CTR      @Y30LB02*/
*/********************************************************   @Y30LB02*/
*/*      CHECK FOR VALID MACRO FORM--E INDICATES EXECUTE     @Y30LB02*/
*/*      FORM, L INDICATES LIST FORM AND IF THE MF PARA-     @Y30LB02*/
*/*      METER IS NULL THE STANDARD FORM MACRO IS INVOKED    @Y30LB02*/
*/********************************************************   @Y30LB02*/
*        IF TUTESTR1=0 THEN  /*REG1 DECLARED BEFORE?         @Y30LB02*/
*             DO;            /*                              @Y30LB02*/
*                  ANS('DCL TUNER1 REG(1) PTR ;/*PTR'××
*                  ' TO REQUEST BLOCK @Y30LB02*/')SKIP;
*                  TUTESTR1=TUTESTR1+1;/*INCREMENT CTR       @Y30LB02*/
*             END;           /*                              @Y30LB02*/
*   IF MF(1) ^= 'L' THEN     /*LIST FORM?                    @Y30LB02*/
*        GO TO EFORM;        /*CHECK FOR EXECUTE FORM        @Y30LB02*/
*   IF MF(2) = '' THEN       /*LIST NAME SPECIFIED           @Y30LB02*/
*        DO;                 /*SET UP ERROR MESSAGE          @Y30LB02*/
*             ERSW=1;        /*SET ERROR SWITCH ON           @Y30LB02*/
*             RETCODE=12;    /*SET RETURN CODE TO 12         @Y30LB02*/
*             ANS MSG('  ICB602I - A NAME FOR THE REQUEST BLOCK '××
*             'MUST BE SPECIFIED IN MF(2) ')SKIP;          /*@Y30LB02*/
*             GO TO FINISH;  /*BRANCH TO END                 @Y30LB02*/
*        END;                /*                              @Y30LB02*/
*/********************************************************   @Y30LB02*/
*/*  THE FOLLOWING CODE CHECKS TO INSURE THAT THE USER       @Y30LB02*/
*/*  DOES NOT ATTEMPT TO PASS ARGUMENTS OTHER THAN THE MF    @Y30LB02*/
*/*  PARAMETER ON THE LIST FORM MACRO INVOCATION.  IF A      @Y30LB02*/
*/*  VIOLATION IS DETECTED, A WARNING MESSAGE WILL BE        @Y30LB02*/
*/*  GIVEN AND PROCESSING WILL CONTINUE.                     @Y30LB02*/
*/********************************************************   @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF FLAGS ^= '' THEN      /*IS THE FLAGS AREA NULL        @Y30LB02*/
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/
*   IF SDGNUM ^= '' THEN     /*IS THE SDGNUM AREA NULL       @Y30LB02*/
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/
*   IF ECB ^= '' THEN        /*IS THE ECB AREA NULL          @Y30LB02*/
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/
*   IF DATA ^= '' THEN       /*IS THE DATA AREA NULL         @Y30LB02*/
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/
*   IF CTR > 0 THEN          /*INCREMENT CTR > ZERO?         @Y30LB02*/
*        DO;                 /*SET UP ERROR MESSAGE          @Y30LB02*/
*          RETCODE=4;     /*SET RETURN CODE TO 4             @Y30LB02*/
*          ANS MSG('  ICB604I - WARNING-ONLY THE MF PARAMETER'××
*             ' IS VALID FOR LIST FORM')SKIP;              /*@Y30LB02*/
*        END;                /*                              @Y30LB02*/
*   IF MF(3) ^= '' THEN      /*ARGUMENT THREE SPECIFIED      @Y30LB02*/
*        GO TO ATTRLST;      /*IF YES, THEN BRANCH           @Y30LB02*/
*/*                                                          @Y30LB02*/
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('/*MACMEAN  MSSC TUNING MACRO                '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('DCL 1 '××MF(2)××'  STATIC LOCAL,'××
*             ' /*TUNING REQUEST BLOCK @Y30LB02*/')SKIP;
*             ANS('    2  TUNELEN  FIXED(31)INIT('××QUOTE
*             ('14')××'X),/*LEN OF TUNING REQ BLK @Y30LB02*/')SKIP;
*             ANS('    2  TUNEOPCD CHAR(1)INIT('××QUOTE('1C')××
*             'X),/*TUNING OPCODE @YM02853*/')SKIP;
*             ANS('    2  TUNERES1 CHAR(1)INIT('××QUOTE('00')××'X),'××
*             '/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*             ANS('    2  TUNEFLAG BIT(16)INIT('××QUOTE
*             ('0000000000000000')××'B),/*TWO BYTE ATTRIBUTE '××
*             'AREA @Y30LB02*/')SKIP;
*             ANS('       3  TUNMODE BIT(1),/*IF ON, THEN'××
*             ' MODIFY MODE-OFF RESULT IN DISPLAY @Y30LB02*/')SKIP;
*             ANS('       3  TUNRES1 BIT(7),/*SEVEN BITS'××
*             ' RESERVED @Y30LB02*/')SKIP;
*             ANS('       3  TUNTHRES BIT(1),/*DISPLAY OR'××
*             ' MODIFY THRESHOLDS @Y30LB02*/')SKIP(1);
*             ANS('       3  TUNSLICE BIT(1),/*DISPLAY OR'××
*             ' MODIFY SLICE RANGES @Y30LB02*/')SKIP(1);
*             ANS('       3  TUNCLOCK BIT(1),/*DISPLAY OR'××
*             ' MODIFY LRU CLOCK @Y30LB02*/')SKIP(1);
*             ANS('       3  TUNRES2 BIT(5),/*5 BITS'××
*             ' RESERVED @Y30LB02*/')SKIP;
*             ANS('    2  TUNESDGN  FIXED(8) INIT(0),'××
*             '/*STAGING DRIVE GROUP NUMBER @Y30LB02*/')SKIP;
*             ANS('    2  TUNERES2  CHAR(1) INIT('××QUOTE
*             ('00')××'X),/*RESERVED AREA @Y30LB02*/')SKIP;
*             ANS('    2  TUNEASID  CHAR(2) INIT('××QUOTE
*             ('0000')××'X),/*ADDRESS SPACE ID @Y30LB02*/')SKIP;
*             ANS('    2  TUNEECB  FIXED(31) INIT(0),'××
*             '/*EVENT CONTROL BLOCK @Y30LB02*/')SKIP;
*             ANS('    2  TUNEDATA  FIXED(31)INIT(0);'××
*             '/*DATA PARAMETER @Y30LB02*/')SKIP;
*             GO TO FINISH;    /*BRANCH TO END               @Y30LB02*/
*/*                                                          @Y30LB02*/
*ATTRLST:
*/*                                                          @Y30LB02*/
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('/*MACMEAN  MSSC TUNING MACRO                '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('DCL 1 '××MF(2)××' '××MF(3)××','××
*             ' /*TUNING REQUEST BLOCK @Y30LB02*/')SKIP;
*             ANS('    2  TUNELEN  FIXED(31),'××
*             '/*LEN OF TUNING REQ BLK 20 BYTES @Y30LB02*/')SKIP;
*             ANS('    2  TUNEOPCD CHAR(1),'××
*             '/*TUNING MACRO OPCODE @YM02853*/')SKIP;
*             ANS('    2  TUNERES1 CHAR(1),'××
*             '/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*             ANS('    2  TUNEFLAG BIT(16),'××
*             '/*TWO BYTE ATTRIBUTE AREA @Y30LB02*/')SKIP;
*             ANS('       3  TUNMODE BIT(1),/*IF ON, THEN'××
*             ' MODIFY MODE-OFF RESULT IN DISPLAY @Y30LB02*/')SKIP;
*             ANS('       3  TUNRES1 BIT(7),/*SEVEN BITS'××
*             ' RESERVED @Y30LB02*/')SKIP;
*             ANS('       3  TUNTHRES BIT(1),/*DISPLAY OR'××
*             ' MODIFY THRESHOLDS @Y30LB02*/')SKIP;
*             ANS('       3  TUNSLICE BIT(1),/*DISPLAY OR'××
*             ' MODIFY SLICE RANGES @Y30LB02*/')SKIP;
*             ANS('       3  TUNCLOCK BIT(1),/*DISPLAY OR'××
*             ' MODIFY LRU CLOCK @Y30LB02*/')SKIP;
*             ANS('       3  TUNRES2 BIT(5),/*5 BITS'××
*             ' RESERVED @Y30LB02*/')SKIP;
*             ANS('    2  TUNESDGN  FIXED(8) ,'××
*             '/*STAGING DRIVE GROUP NUMBER @Y30LB02*/')SKIP;
*             ANS('    2  TUNERES2  CHAR(1) ,'××
*             '/*RESERVED AREA @Y30LB02*/')SKIP;
*             ANS('    2  TUNEASID  CHAR(2) ,'××
*             '/*ADDRESS SPACE ID @Y30LB02*/')SKIP;
*             ANS('    2  TUNEECB  FIXED(31) ,'××
*             '/*EVENT CONTROL BLOCK @Y30LB02*/')SKIP;
*             ANS('    2  TUNEDATA  FIXED(31);'××
*             '/*DATA PARAMETER @Y30LB02*/')SKIP;
*             GO TO FINISH;    /*BRANCH TO END               @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*      PROCESSING THE EXECUTE MACRO FORM                   @Y30LB02*/
*/*                                                          @Y30LB02*/
*EFORM:
*   IF MF(1) ^= 'E' THEN       /*EXECUTE FORM SPECIFIED?     @Y30LB02*/
*        GO TO SFORM;          /*NO, BRANCH TO CK FOR STD    @Y30LB02*/
*   IF MF(2) = '' THEN         /*LIST NAME SPECIFIED?        @Y30LB02*/
*        DO;                   /*SETUP ERROR MESSAGE         @Y30LB02*/
*             ERSW=1;          /*SET ERROR SWITCH ON         @Y30LB02*/
*             RETCODE=12;      /*SET RETURN CODE TO 12       @Y30LB02*/
*             ANS MSG('  ICB612I - MF(2) MUST CONTAIN '××
*                'REQ BLK NAME IF EXEC '××
*                'MACRO FORM REQUESTED ')SKIP;             /*@Y30LB02*/
*             GO TO CKSW;      /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/
*        END;                  /*                            @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ELSE              /*CONTINUE EXECUTE PROCESSING          @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*MACMEAN  MSSC TUNING MACRO                '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*        ANS('RFY(TUNER1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
*        ANS('TUNER1=ADDR('××MF(2)××');/*R1 POINTER TO'××
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;
*   IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?        @Y30LB02*/
*     DO;                       /*PREPARE TO ZERO BLK        @Y30LB02*/
*        ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';'××
*        '/*ZERO REQUEST BLOCK @Y30LB02*/')SKIP;
*     END;                      /*                           @Y30LB02*/
*        ANS('TUNELEN= '××QUOTE(TUNLEN)××'X;/*LENGTH '××
*        ' OF TUNING REQUEST @Y30LB02*/')SKIP;
*        ANS('TUNEOPCD= '××QUOTE(OPCODE)××'X;/*TUNING'××
*        ' OPCODE @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*CKSW:
*   IF ERSW=1 THEN          /*IS ERROR SWITCH ON?            @Y30LB02*/
*        GO TO FINISH;      /*YES, BRANCH TO END             @Y30LB02*/
*   ELSE                    /*PROCESS PARAMETERS             @Y30LB02*/
*        GO TO COMPROC;     /*BRANCH TO PROCESS PARAMETERS   @Y30LB02*/
*/*                                                          @Y30LB02*/
*SFORM:
*   IF MF(1) ^= '' THEN     /*STANDARD FORM?                 @Y30LB02*/
*     DO;                   /*                               @Y30LB02*/
*        ERSW=1;            /*SET ERROR SWITCH TO 1          @Y30LB02*/
*        RETCODE=12;        /*SET RETURN CODE TO 12          @Y30LB02*/
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'××
*                ' SPECIFIED, MUST BE L,E, OR NULL')SKIP;  /*@Y30LB02*/
*        GO TO CKSW2;       /*BRANCH TO CK SWITCH            @Y30LB02*/
*     END;                  /*                               @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF FLAGS = '' THEN      /*FLAGS SPECIFIED?               @Y30LB02*/
*     DO;                   /*                               @Y30LB02*/
*        ERSW=1;            /*SET ERROR SWITCH TO 1          @Y30LB02*/
*        RETCODE=12;        /*SET RETURN CODE TO 12          @Y30LB02*/
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED  '××
*        'FOR STANDARD FORM MACRO ')SKIP;                  /*@Y30LB02*/
*        GO TO CKSW2;       /*BRANCH TO CK SWITCH            @Y30LB02*/
*     END;                  /*                               @Y30LB02*/
*/*                                                          @Y30LB02*/
*CKSW2:
*/*                                                          @Y30LB02*/
*   IF ERSW = 1 THEN        /*ERROR SWITCH ON?               @Y30LB02*/
*        GO TO FINISH;      /*YES, BRANCH TO END             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF TUNETES = 1 THEN     /*STANDARD FORM INVOKED BEFORE?  @Y30LB02*/
*     DO;                   /*DO NOT PUT OUT DECLARES        @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*MACMEAN  MSSC TUNING MACRO                '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('RFY(TUNER1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
*        ANS('TUNER1=ADDR(TUNELEN);/*R1 PTR TO BLK @Y30LB02*/')SKIP;
*        ANS('TUNELEN= '××QUOTE(TUNLEN)××'X;/*LENGTH OF '××
*        'TUNING REQUEST @Y30LB02*/')SKIP;
*        ANS('TUNEOPCD='××QUOTE(OPCODE)××'X;/*TUNING'××
*        ' OPCODE @Y30LB02*/')SKIP;
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ELSE                      /*PUT OUT DECLARES             @Y30LB02*/
*     DO;                     /*                             @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*MACMEAN  MSSC TUNING MACRO                '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE STANDARD FORM - TUNING MACRO  '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*        ANS('RFY(TUNER1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;
*        ANS('TUNER1=ADDR(TUNELEN);/*R1 PTR  '××
*        'TO LIST @Y30LB02*/')SKIP;
*        ANS('DCL 1 TUNELST  STATIC LOCAL,'××
*        ' /*TUNING REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('    2  TUNELEN  FIXED(31)INIT('××QUOTE
*        ('14')××'X),/*LEN OF TUNING REQ BLK @Y30LB02*/')SKIP;
*        ANS('    2  TUNEOPCD CHAR(1)INIT('××QUOTE
*        ('1C')××'X),/*TUNING MACRO OPCODE @YM02853*/')SKIP;
*        ANS('    2  TUNERES1 CHAR(1)INIT('××QUOTE
*        ('00')××'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*        ANS('    2  TUNEFLAG BIT(16)INIT('××QUOTE
*        ('0000000000000000')××'B),/*TWO BYTE ATTRI'××
*        'BUTE AREA @Y30LB02*/')SKIP;
*        ANS('       3  TUNMODE BIT(1),/*IF ON, THEN'××
*        ' MODIFY MODE-OFF RESULT IN DISPLAY @Y30LB02*/')SKIP;
*        ANS('       3  TUNRES1 BIT(7),/*SEVEN BITS'××
*        ' RESERVED @Y30LB02*/')SKIP;
*        ANS('       3  TUNTHRES BIT(1),/*DISPLAY OR'××
*        ' MODIFY THRESHOLDS @Y30LB02*/')SKIP;
*        ANS('       3  TUNSLICE BIT(1),/*DISPLAY OR'××
*        ' MODIFY SLICE RANGES @Y30LB02*/')SKIP;
*        ANS('       3  TUNCLOCK BIT(1),/*DISPLAY OR'××
*        ' MODIFY LRU CLOCK @Y30LB02*/')SKIP;
*        ANS('       3  TUNRES2 BIT(5),/*5 BITS'××
*        ' RESERVED @Y30LB02*/')SKIP;
*        ANS('    2  TUNESDGN  FIXED(8) INIT(0),'××
*        '/*STAGING DRIVE GROUP NUMBER @Y30LB02*/')SKIP;
*        ANS('    2  TUNERES2  CHAR(1) INIT('××QUOTE
*        ('00')××'X),/*RESERVED AREA @Y30LB02*/')SKIP;
*        ANS('    2  TUNEASID  CHAR(2) INIT('××QUOTE
*        ('0000')××'X),/*ADDRESS SPACE ID @Y30LB02*/')SKIP;
*        ANS('    2  TUNEECB  FIXED(31) INIT(0),'××
*        '/*EVENT CONTROL BLOCK @Y30LB02*/')SKIP;
*        ANS('    2  TUNEDATA  FIXED(31)INIT(0);'××
*        '/*DATA PARAMETER @Y30LB02*/')SKIP;
*        TUNETES=TUNETES+1;   /*INCREMENT INVOCATION CTR     @Y30LB02*/
*        GO TO COMPROC;       /*BRANCH TO CHECK PARAMETERS   @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      COMMON PROCESSING FOR EXECUTE AND STANDARD FORMS    @Y30LB02*/
*/*      THE FOLLOWING CODE WILL CHECK TO DETERMINE WHAT     @Y30LB02*/
*/*      PARAMETERS ARE SPECIFIED AND PLACE THE VALUE IN     @Y30LB02*/
*/*      THE REQUEST BLOCK                                   @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*COMPROC:
*   IF FLAGS ^= '' THEN       /*FLAGS SPECIFIED?             @Y30LB02*/
*        ANS('TUNEFLAG= '××FLAGS××';/*VALUE OF FLAGS '××
*        'PARAMETER @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF SDGNUM ^= '' THEN      /*STAGING DRIVE GROUP SPECD    @Y30LB02*/
*        ANS('TUNESDGN= '××SDGNUM××';/*STAGING DRIVE'××
*        ' GROUP NUMBER LOADED @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF DATA ^= '' THEN        /*DATA SPECIFIED?              @Y30LB02*/
*        ANS('TUNEDATA= '××DATA××';/*VALUE OF DATA '××
*        'PARAMETER @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF ECB ^= '' THEN         /*ECB SPECIFIED?               @Y30LB02*/
*        ANS('TUNEECB=ADDR'××ECB××';/*EVENT CONTROL'××
         ' BLOCK ADDRESS LOADED @Y30LB02*/')SKIP;
*/********************************************************   @Y30LB02*/
*/*      THIS SECTION OF CODE WILL INVOKE SVC 126 AND        @Y30LB02*/
*/*      SET THE PROPER RETURN CODE, THEN END PROCESSING     @Y30LB02*/
*/********************************************************   @Y30LB02*/
*        ANS('SVC (126);/*INVOKE THE SVC  @Y30LB02*/')SKIP;
*        ANS('RFY (TUNER1)UNRSTD;/*UNRSTD REG ONE  @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*FINISH:
*        RETURN CODE(RETCODE);   /*SET THE RETURN CODE       @Y30LB02*/
*        %END;                   /*                          @Y30LB02*/
