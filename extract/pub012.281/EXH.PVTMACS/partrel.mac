*%/* START OF PL/X COMMENT ENDING ON %MACRO STATEMENT            @L2A
         MACRO
&LABEL   PARTREL &DSN=,                                                X
               &MF=,                                                   X
               &MODE=,                                                 X
               &UCB=,                                                  X
               &TIOT=,                                                 X
               &ERASE=,                                                X
               &VSAMTYPE=,                                             X
               &VSAMFMT=,                                              X
               &VSAMCLLR=,                                             X
               &VSAMSEC=,                                              X
               &VSAMTRKS=
.**** START OF SPECIFICATIONS ****************************************
.*
.*$MAC(PARTREL):     PARTREL INTERFACE TO PARTIAL RELEASE
.*
.*DESCRIPTIVE-NAME = PARTREL INTERFACE TO PARTIAL RELEASE
.*
.*PROPRIETARY V3 STATEMENT
.*LICENSED MATERIALS - PROPERTY OF IBM
.*"RESTRICTED MATERIALS OF IBM"
.*5695-DF1
.*(C) COPYRIGHT 1985  IBM CORP.
.*END PROPRIETARY V3 STATEMENT
.*
.*STATUS = DFSMS/MVS 1.3.0
.*
.*FUNCTION = THIS MACRO WILL SET UP THE PARTREL PARAMETER LIST TO
.*     ALLOW THE CALLER TO RELEASE UNUSED SPACE FROM A SEQUENTIAL OR
.*     PARTITIONED DATA SET.
.*
.*NOTES = THE PARTREL CALL TO DADSM IS USED TO RELEASE UNUSED SPACE
.*     STARTING WITH THE TRACK FOLLOWING THAT DEFINED IN THE FORMAT 1
.*     DSCB FIELD KNOWN AS DS1LSTAR.  IF THE FORMAT 1 DSCB INDICATES
.*     THAT THE ORIGINAL ALLOCATION WAS IN CYLINDER ALLOCATION, THE
.*     DS1LSTAR VALUE WILL BE INCREMENTED TO THE NEXT CYLINDER
.*     BOUNDARY.
.*
.*     PARTREL WILL SUPPORT BOTH INDEXED AND NON-INDEXED VTOCS.
.*
.*     THE CALLING PROGRAM:
.*       1. MUST BE APF AUTHORIZED.
.*       2. MUST HAVE ALLOCATED THE VOLUME TO THIS TASK AND ENSURE
.*          IT WILL STAY MOUNTED DURING THE PARTREL FUNCTION.
.*       3. MUST ENSURE THAT THE REQUESTED DATA SET IS NOT OPEN.
.*       4. MUST NOT BE HOLDING ANY LOCKS.
.*       5. MUST PROVIDE THE ADDRESS OF AN AVAILABLE STANDARD REGISTER
.*          SAVE AREA IN GENERAL REGISTER 13.
.*       6. MAY BE SET TO ANY STORAGE KEY.
.*       7. MAY BE IN EITHER SUPERVISOR OR PROBLEM PROGRAM STATE.
.*
.*     THE USER MAY INCLUDE THE CVAFTBL MAPPING MACRO (ICVAFPRM) IN
.*     THEIR PROGRAM AND TEST THE CVFDFPFT FIELD.  IF CVFPREL IS ON,
.*     THE PARTREL FUNCTION IS SUPPORTED.
.*
.*     THE PARTIAL RELEASE WILL FAIL IF THE DATA SET NAME CAN NOT BE
.*     ENQUEUED EXCLUSIVELY (TIOT=ENQ) OR IF THE DATA SET NAME IS  @01C
.*     NOT ALREADY ENQEUED EXCLUSIVELY (TIOT=NOENQ).               @01A
.*
.*     IF 'TTR' OF THE DS1LSTAR FIELD IS ZERO AND THE DATA SET IS
.*     SEQUENTIAL, ALL SPACE IS RELEASED.
.*
.*     'ADDR', IN KEYWORD=ADDR × MF=(E,ADDR)
.*             MUST BE SPECIFIED AS A LABEL OF AN AREA.
.*             THIS LABEL MUST REPRESENT A VALID RX-TYPE ADDRESS
.*             WHEN USED IN THE MACRO'S EXECUTE-FORM, AND A VALID
.*             A-TYPE ADDRESS WHEN USED IN THE MACRO'S LIST-FORM.
.*
.*     'REG', IN KEYWORD=(REG) × MF=(E,(REG))
.*             MAY BE SPECIFIED AS ANY REGISTER, 2 - 12.
.*
.*
.*KEYWORDS APPLICABLE TO THE PARTREL MACRO ARE:
.*
.*  MF=        THE 'MF' KEYWORD IS REQUIRED.  IT'S SUB-PARAMETERS WILL
.*             DETERMINE WHETHER THE PARTREL PARAMETER LIST IS EXPANDED
.*             AND/OR EXECUTABLE INSTRUCTIONS ARE GENERATED TO INVOKE
.*             DADSM PARTIAL RELEASE.  THE FOLLOWING SUB-PARAMETERS ARE
.*             VALID FOR THE 'MF' KEYWORD:
.*
.*  MF=D       THE SPECIFICATION OF MF=D WILL RESULT IN THE EXPANSION
.*             OF THE PARAMETER LIST IN DSECT FORMAT WITH LABELS FOR
.*             EACH OF THE FIELDS IN THE PARAMETER LIST.  IN THIS FORM
.*             OF THE MACRO, NO OTHER MACRO PARAMETERS WILL APPLY (IF
.*             THEY ARE SPECIFIED, THEY WILL BE IGNORED AND AN MNOTE
.*             ISSUED).  THIS FORM OF THE MACRO WILL NOT GENERATE THE
.*             LOAD, BRANCH, DELETE SEQUENCE FOR DADSM PARTIAL RELEASE.
.*
.*  MF=(E,ADDR) × MF=(E,(REG)) × MF=(E,(1))
.*             THE SPECIFICATION OF ANY OF THE ABOVE FORMATS FOR THE
.*             'MF' KEYWORD WILL RESULT IN THE MODIFICATION OF AN
.*             EXISTING PARAMETER LIST.  THE ADDRESS OF THE PARAMETER
.*             LIST IS PROVIDED VIA THE SECOND SUB-PARAMETER ('ADDR',
.*             'REG', OR '1').  THIS SPECIFICATION WILL ALSO RESULT IN
.*             THE GENERATION OF A LOAD FOR, BRANCH TO, AND DELETE OF
.*             THE DADSM PARTIAL RELEASE ENTRY POINT MODULE. THIS
.*             SPECIFICATION IS CALLED THE EXECUTE-FORM OF THE MACRO.
.*
.*  MF=L       THE SPECIFICATION OF MF=L WILL RESULT IN THE EXPANSION
.*             OF THE PARAMETER LIST AND INITIALIZE IT ACCORDING TO
.*             THE SPECIFIED KEYWORDS.  HOWEVER, IF A REGISTER IS USED
.*             INSTEAD OF AN ADDRESS, THE LIST WILL CONTAIN AN ADCON
.*             SPECIFICATION OF ZERO (AN MNOTE WILL BE ISSUED).  THIS
.*             FORM OF THE MACRO WILL NOT GENERATE THE LOAD, BRANCH,
.*             DELETE SEQUENCE FOR DADSM PARTIAL RELEASE.
.*
.*  DSN=ADDR × DSN=(REG)
.*             THE 'DSN' KEYWORD MAY BE USED TO SPECIFY THE ADDRESS
.*             OF AN AREA WHICH DESCRIBES A DATA SET NAME.
.*             THIS PARAMETER WILL NOT APPLY TO THE DSECT-FORM OF THIS
.*             MACRO.  IF THE LIST-FORM IS REQUESTED, THE 'REG' FORMAT
.*             FOR THIS PARAMETER WILL NOT APPLY.
.*             'ADDR', IN DSN=ADDR, MUST BE SPECIFIED AS THE LABEL
.*                   OF AN AREA WHICH DESCRIBES A DATA SET NAME.
.*             'REG', IN DSN=(REG), MUST REPRESENT ANY REGISTER,
.*                   2 - 12.  THE REGISTER WILL CONTAIN THE ADDRESS
.*                   OF AN AREA WHICH DESCRIBES A DATA SET NAME.
.*
.*  MODE=PGM   THE SPECIFICATION OF MODE=PGM IDENTIFIES THAT THE
.*             PROGRAM ISSUING THE PARTREL MACRO IS IN PROBLEM PROGRAM
.*             STATE.  THE PARTREL MACRO WILL DEFAULT TO MODE=PGM
.*             WHENEVER THE 'MODE' KEYWORD IS NOT CODED AS A PARAMETER.
.*             DADSM PARTIAL RELEASE WILL RETURN IN PROBLEM PROGRAM
.*             STATE WHENEVER MODE=PGM IS SPECIFIED OR DEFAULTED.
.*
.*  MODE=SUP   THE SPECIFICATION OF MODE=SUP IDENTIFIES THAT THE
.*             PROGRAM ISSUING THE PARTREL MACRO IS IN SUPERVISOR
.*             STATE.  IF PARTREL MODE=SUP IS ISSUED FROM A PROGRAM
.*             IN PROBLEM PROGRAM STATE, THE REQUESTING PROGRAM IS
.*             SUBJECT TO ABEND.  OTHERWISE DADSM PARTIAL RELEASE WILL
.*             RETURN IN SUPERVISOR STATE.
.*
.*  UCB=(REG)  THE 'UCB' KEYWORD MAY BE USED TO SPECIFY THE ADDRESS
.*             OF THE UCB WHICH DESCRIBES THE VOLUME UPON WHICH THE
.*             DATA SET IS TO BE ALLOCATED.
.*             THIS PARAMETER WILL ONLY APPLY TO THE EXECUTE-FORM
.*             OF THIS MACRO.
.*             'REG', IN UCB=(REG), MUST REPRESENT ANY REGISTER,
.*                   2 - 12.  THE REGISTER WILL CONTAIN THE ADDRESS
.*                   OF THE UCB.
.*                                                                 @01A
.*  TIOT=      THE 'TIOT' KEYWORD IS AN OPTIONAL PARAMETER.        @01A
.*             IT'S SUB-PARAMETERS DETERMINE IF PARTIAL RELEASE    @01A
.*             SHOULD OBTAIN EXCLUSIVE ENQUES ON SYSZTIOT AND      @01A
.*             SYSDSN.  THE PARTREL MACRO WILL DEFAULT TO THE      @01A
.*             SETTING IN THE LIST FORM OF THE PARAMETER LIST IF   @01A
.*             THE KEYWORD IS OMITTED.                             @01A
.*                                                                 @01A
.*  TIOT=ENQ   THE SPECIFICATION OF TIOT=ENQ IDENTIFIES THAT       @01A
.*             PARTIAL RELEASE WILL OBTAIN EXCLUSIVE ENQUES ON     @01A
.*             SYSZTIOT AND SYSDSN.  IF EITHER OF THESE EXCLUSIVE  @01A
.*             ENQUES CANNOT BE OBTAINED, THE REQUEST IS FAILED.   @01A
.*                                                                 @01A
.*  TIOT=NOENQ THE SPECIFICATION OF TIOT=NOENQ IDENTIFIES THAT     @01A
.*             PARTIAL RELEASE WILL NOT OBTAIN THE SYSZTIOT AND    @01A
.*             SYSDSN ENQUES.  THE CALLER IS REQUIRED TO HOLD AN   @01A
.*             EXCLUSIVE ENQUE ON SYSDSN.  PARTIAL RELEASE WILL    @01A
.*             FAIL THE REQUEST IF THIS ENQUE IS NOT ALREADY HELD. @01A
.*                                                                 @01A
.*  ERASE=     THE 'ERASE' KEYWORD IS AN OPTIONAL PARAMETER.       @02A
.*             SUB-PARAMETERS DETERMINE IF PARTIAL RELEASE         @02A
.*             SHOULD ERASE, NOT ERASE, OR TEST FOR ERASE OF       @02A
.*             RELEASED SPACE.  THE PARTREL MACRO WILL DEFAULT     @02A
.*             TO THE SETTINGS IN THE LIST FORM OF THE PARAMETER   @02A
.*             LIST IF THE KEYWORD IS OMITTED.                     @02A
.*                                                                 @02A
.*  ERASE=YES  THE SPECIFICATION OF ERASE=YES IDENTIFIES THAT      @02A
.*             PARTIAL RELEASE WILL ERASE THE RELEASED SPACE.      @02A
.*                                                                 @02A
.*  ERASE=NO   THE SPECIFICATION OF ERASE=NO IDENTIFIES THAT       @02A
.*             PARTIAL RELEASE WILL NOT ERASE THE RELEASED SPACE.  @02A
.*                                                                 @02A
.*  ERASE=TEST THE SPECIFICATION OF ERASE=TEST IDENTIFIED THAT     @02A
.*             PARTIAL RELEASE WILL ISSUE A RACROUTE TO DETERMINE  @02A
.*             IF RELEASED SPACE SHOULD BE ERASED.                 @02A
.*                                                                 @03A
.*  VSAMTYPE=  THE 'VSAMTYPE' KEYWORD IS AN OPTIONAL PARAMETER     @03A
.*             SUB-PARAMETERS DETERMINES THE TYPE OF VSAM          @03A
.*             DATASET.                                            @03A
.*                                                                 @03A
.*  VSAMTYPE=KSDS  THIS IS THE ONLY TYPE OF VSAM DATASET           @03A
.*                 WHICH PARTIAL RELEASE WILL ATTEMPT TO RELESE    @03A
.*                 ALLOCATED BUT UNUSED SPACE.                     @03A
.*                                                                 @03A
.*  VSAMTYPE=ESDS × RRDS × LDS × VRRDS                             @03A
.*                                                                 @03A
.*                 PARTIAL RELEASE WILL REJECT THESE FORMS         @03A
.*                 OF VSAM DATASETS.                               @03A
.*                                                                 @03A
.*  VSAMFMT=   THE 'VSAMFMT' KEYWORD IS AN OPTIONAL PARAMETER,     @03A
.*             BUT IS REQUIRED WHEN 'VSAMTYPE' IS ALSO SPECIFIED   @03A
.*             SUB-PARAMETERS DETERMINE THE FORMAT OF THE          @03A
.*             REQUESTED VSAM DATASET.                             @03A
.*                                                                 @03A
.*  VSAMFMT=EXTD  THIS INDICATES THAT THE REQUESTED VSAM DATASET   @03A
.*                IS AN EXTENDED FORMAT VSAM DATASET.  PARTIAL     @03A
.*                RELEASE WILL ATTEMPT TO FREE ALLOCATED BUT       @03A
.*                UNUSED SPACE.                                    @03A
.*                                                                 @03A
.*  VSAMFMT=STD   PARTIAL RELEASE WILL REJECT THIS FORMAT          @03A
.*                OF VSAM DATASET.                                 @03A
.*                                                                 @03A
.*  VSAMCLLR=  THE 'VSAMCALLR' KEYWORD IS AN OPTIONAL PARAMETER,   @03A
.*             BUT IS REQUIRED WHEN 'VSAMTYPE' IS ALSO SPECIFIED.  @03A
.*             SUB-PARAMETERS DETERMINE WHO IS THE CALLER OF       @03A
.*             PARTIAL RELEASE.                                    @03A
.*                                                                 @03A
.*  VSAMCLLR=VSAMCLSE                                              @03A
.*                                                                 @03A
.*             IF VSAM CLOSE IS SET AND THE CALLER IS              @03A
.*             AUTHORIZED (KEY < 8) THEN PARTIAL RELEASE WILL      @03A
.*             CALL CATALOG WITH 'VSAMCLSE' BEING SET.             @03A
.*                                                                 @03A
.*             IF VSAM CLOSE IS SET AND THE CALLER IS              @03A
.*             NOT-AUTORIZDED (KEY=8) THEN PARTIAL RELEASE         @03A
.*             WILL TURN OFF THE 'VSAMCLSE' BIT AND TURN ON THE    @03A
.*             NOTVSAM (PRLVCNV) BIT.                              @03A
.*                                                                 @03A
.*  VSAMCLLR=NOTVSAM                                               @03A
.*                                                                 @03A
.*             WHEN PARTIAL RELEASE CALLS CATALOG SERVICES         @03A
.*             PARTIAL RELEASE WILL INDICATE THAT THE CALLER OF    @03A
.*             PARTIAL RELEASE IS NOT VSAM CLOSE.                  @03A
.*                                                                 @03A
.*                                                                 @03A
.*  VSAMSEC=   THE 'VSAMSEC' KEYWORD IS AN OPTIONAL PARAMETER,     @03A
.*             BUT IS REQUIRED WHEN 'VSAMTYPE' IS ALSO SPECIFIED.  @03A
.*             SUB-PARAMETERS DETERMINE WHO IS THE CALLER OF       @03A
.*             PARTIAL RELEASE.                                    @03A
.*                                                                 @03A
.*  VSAMSEC=BYPASS                                                 @03A
.*                                                                 @03A
.*             IF THE CALLER OF PARTIAL RELEASE IS KEY < 8 THEN    @03A
.*             PARTIAL RELEASE WILL PASS TO CATALOG, THE           @03A
.*             BYPASS SECURITY CHECKING BIT INDICATING THAT        @03A
.*             CATALOG CAN BYPASS SECURITY CHECKING.               @03A
.*                                                                 @03A
.*             IF THE CALLER OF PARTIAL RELEASE IS KEY = 8 THEN    @03A
.*             PARTIAL RELEASE WILL TURN OFF THE BYPASS BIT        @03A
.*             BEFORE CALLING CATALOG.  THIS WILL FORCE CATALOG    @03A
.*             TO PERFORM SECURITY CHECKING.                       @03A
.*                                                                 @03A
.*  VSAMSEC=NOBYPASS                                               @03A
.*                                                                 @03A
.*             PARTIAL RELEASE WILL TURN OFF THE BYPASS BIT        @03A
.*             BEFORE CALLING CATALOG.  THIS WILL FORCE CATALOG    @03A
.*             TO PERFORM SECURITY CHECKING.                       @03A
.*                                                                 @03A
.*             THE 'VSAMTRKS' KEYWORD IS AN OPTIONAL PARAMETER,    @03A
.*             BUT IS REQUIRED WHEN 'VSAMTYPE' IS ALSO SPECIFIED.  @03A
.*             SUB-PARAMETERS DETERMINE WHO IS THE CALLER OF       @03A
.*             PARTIAL RELEASE.                                    @03A
.*                                                                 @03A
.*                                                                 @03A
.*                                                                 @03A
.*  VSAMTRKS=ADDR × VSAMTRKS=(REG)                                 @03A
.*                                                                 @03A
.*         THE 'VSAMTRKS' KEYWORD MAY BE USED TO SPECIFY THE       @03A
.*         ADDRESS OF AN AREA WHICH CONTAINS THE NUBER OF TRACKS   @03A
.*         RELEASED BY THE PARTIAL RELEASE FUNCTION.               @03A
.*         THIS PARAMETER WILL NOT APPLY TO THE DSECT-FORM OF THIS @03A
.*         MACRO.  IF THE LIST-FORM IS REQUESTED, THE 'REG' FORMAT @03A
.*         FOR THIS PARAMETER WILL NOT APPLY.                      @03A
.*         'ADDR', IN VSAMTRKS=ADDR, MUST BE SPECIFIED AS THE      @03A
.*         LABEL OF AN AREA WHICH WILL CONTAIN THE NUMBER OF       @03A
.*         TRACKS RELEASED.  THIS IS A 4 BYTE FIELD.               @03A
.*         'REG', IN VSAMTRKS=(REG), MUST REPRESENT ANY REGISTER,  @03A
.*         2 - 12.  THE REGISTER WILL CONTAIN THE ADDRESS          @03A
.*         OF AN AREA WHICH WILL CONTAIN THE NUMBER OF TRACKS      @03A
.*         RELEASED.                                               @03A
.*
.*SUMMARY OF PARAMETERS -- KEYWORD=OPTION COMBINATIONS:
.*
.*        THE 'MF' KEYWORD IS REQUIRED.  THE SPECIFICATION OF KEYWORDS
.*        'DSN' 'MODE' AND/OR 'UCB' IS DEFINED AS A FUNCTION OF 'MF'
.*
.*                MF   DSN    MODE   UCB    TIOT   ERASE           @01C
.*                --   ----   ----   ----   ----   -----           @01C
.*                D    IG     IG     IG     IG     IG              @01C
.*                E    OPT    KWD    REG    OPT    OPT             @01C
.*                L    ADDR   KWD    IG     OPT    OPT             @01C
.*
.*
.*                MF   VSAMTYPE   VSAMFMT   VSAMSEC   VSAMTRKS     @03A
.*                --   --------   -------   -------   --------     @03A
.*                D    IG         IG        IG        IG           @03A
.*                E    OPT        OPT       OPT       OPT          @03A
.*                L    OPT        OPT       OPT       ADDR         @03A
.*
.*        ENTRIES IN THE ABOVE TABLE IDENTIFY RESTRICTIONS ON THE
.*        PARTREL MACRO PARAMETERS AS:
.*
.*        ADDR THE PARAMETER IS OPTIONAL.  IF THE PARAMETER IS
.*             SPECIFIED, IT IS RESTRICTED TO THE KEYWORD=LABEL
.*             FORMAT.  IF THE PARAMETER IS SPECIFIED IN THE
.*             KEYWORD=(REG) FORMAT:
.*                1. THE PARAMETER IS IGNORED, AND
.*                2. ONE 4 LEVEL MNOTE IS ISSUED FOR THE MACRO CALL
.*                   (IF NO MAJOR ERROR IS FOUND).
.*
.*        IG   IF THE PARAMETER IS SPECIFIED:
.*                1. THE PARAMETER IS IGNORED, AND
.*                2. ONE 4 LEVEL MNOTE IS ISSUED FOR THE MACRO CALL
.*                   (IF NO MAJOR ERROR IS FOUND).
.*
.*        KWD  THE PARAMETER IS OPTIONAL.  THE 'MODE' PARAMETER
.*             MAY BE SPECIFIED AS EITHER MODE=PGM OR MODE=SUP.
.*             IF THE 'MODE' PARAMETER IS NOT SPECIFIED, MODE=PGM
.*             WILL BE ASSUMED.
.*
.*        OPT  THE PARAMETER IS OPTIONAL.  IF THE PARAMETER IS
.*             SPECIFIED, EITHER FORMAT:  KEYWORD=LABEL, OR
.*             KEYWORD=(REG) MAY BE USED.
.*
.*        REG  THE PARAMETER IS OPTIONAL.  IF THE PARAMETER IS
.*             SPECIFIED, IT IS RESTRICTED TO THE KEYWORD=(REG)
.*             FORMAT.
.*
.*        ALL REFERENCES TO THE WORD 'OPTIONAL' IS RELATIVE TO
.*        PARAMETER SPECIFICATION ON THE MACRO CALL.  WHEN DADSM
.*        PARTIAL RELEASE IS INVOKED, VALUES FOR BOTH 'DSN' AND 'UCB'
.*        MUST BE DEFINED OR THE PARTIAL RELEASE WILL FAIL.
.*
.*
.*MODULE-TYPE = MACRO
.*
.*PROCESSOR = ASSEMBLER LANGUAGE
.*
.*ATTRIBUTES = EXECUTABLE MACRO
.*
.*ENTRY-POINT = MACRO STATEMENT.
.*
.*INPUT = SEE DESCRIPTION OF KEYWORDS UNDER 'FUNCTION'.
.*
.*OUTPUT = PARTREL PARAMETER LIST WITH THE FLAGS AND THE ADDRESSES
.*         SET DEPENDING UPON THE KEYWORDS SPECIFIED AS DEFINED
.*         UNDER 'KEYWORDS' ABOVE.
.*
.*EXIT-NORMAL = MEND STATEMENT.
.*
.*EXIT-ERROR  = MNOTE AND MEND STATEMENT.  MNOTES WILL BE GENERATED
.*              FOR ANY OF THE FOLLOWING ERRORS ENCOUNTERED:
.*
.*              FOR ALL FORMS OF THE MACRO:
.*                 1. MF IS A REQUIRED KEYWORD.
.*                 2. INVALID OPERAND - KEYWORD=OPERAND.
.*                 3. ONE OR MORE PARAMETERS IGNORED DUE TO
.*                    MF=OPERAND.
.*
.*              FOR THE EXECUTE FORM OF THE MACRO:
.*                 1. MF=(E,ADDR) FORM: SUPPLY PARAMETER LIST ADDRESS.
.*
.*EXTERNAL-REFERENCES = NONE
.*
.*TABLES = NONE
.*
.*MACROS = DELETE, IHBINNRA, LOAD
.*
.*CHANGE-ACTIVITY = NEW MACRO
.*
.*$L0=MVS/XA,HDP2210,,STLAM: INTERFACE MACRO TO PARTIAL RELEASE
.*$01=OZ94340,HDP2210,,STLMC: SUPPORT SYSZTIOT BYPASS FOR HSM      @01A
.*$02=OZ94337,HDP2210,,STLMC: SUPPORT ERASE, NOERASE ON PARTREL    @02A
.*$03=OW03622,HDZ11B0,,SJPLMKD: SUPPORT VSAM PARTIAL RELEASE       @03A
.*
.**** END OF SPECIFICATIONS ******************************************
.*
         LCLB  &DSNA      DSN=ADDR WILL BE USED
         LCLB  &DSNR      DSN=(REG) WILL BE USED
         LCLB  &TRKSA     VSAMTRKS=ADDR WILL BE USED               @03A
         LCLB  &TRKSR     VSAMTRKS=(REG) WILL BE USED              @03A
         LCLB  &ERRORSW   A MAJOR ERROR WAS DETECTED
         LCLC  &L         LOCAL LABEL VARIABLE
         LCLB  &MFD       MF=D WAS SPECIFIED
         LCLB  &MFE       MF=(E,..) WAS SPECIFIED
         LCLB  &MFL       MF=L WAS SPECIFIED
         LCLA  &NO        BRANCH INDEX NUMBER
         LCLA  &NMASK1    USED TO RESET PARTREL FLAGS (BYTE1)      @03C
         LCLA  &OMASK1    USED TO SET PARTREL FLAGS   (BYTE1)      @03C
         LCLA  &NMASK2    USED TO RESET PARTREL FLAGS (BYTE2)      @03C
         LCLA  &OMASK2    USED TO SET PARTREL FLAGS   (BYTE2)      @03C
         LCLB  &UCBR      UCB=(REG) WILL BE USED
         LCLB  &WARNSW    A WARNING ERROR WAS DETECTED
         LCLB  &NB1(8)    BITS TO RESET PARTREL FLAG BYTE  (BYTE1) @03C
         LCLB  &OB1(8)    BITS TO SET PARTREL FLAG BYTE    (BYTE1) @03C
         LCLB  &NB2(8)    BITS TO RESET PARTREL FLAG BYTE  (BYTE2) @03C
         LCLB  &OB2(8)    BITS TO SET PARTREL FLAG BYTE    (BYTE2) @03C
&NO      SETA  &SYSNDX                  SET BRANCH INDEX NUMBER
.*
.* ********************************************************************
.* *  VERIFICATION 1: MF PARAMETER
.* ********************************************************************
.*
.V1      AIF   ('&MF' EQ '').V1ER2      IF NO MF GIVEN, BRANCH, ERROR
         AIF   ('&MF'(1,2) EQ '(E').V1E IF E FORM, BRANCH
         AIF   ('&MF' EQ 'L').V1L       IF L FORM, BRANCH
         AIF   ('&MF' NE 'D').V1ER1     IF NOT D FORM, BRANCH, ERROR
&MFD     SETB  1                        ELSE SET MF=D FOUND
         AGO   .V1X                       AND CONTINUE
.*
.V1L     ANOP
&MFL     SETB  1                        SET MF=L FOUND
         AGO   .V1X                     AND CONTINUE
.*
.V1E     ANOP
&MFE     SETB  1                        SET MF=E FOUND
         AIF   (N'&MF EQ 2).V1X         IF TWO PARMS ON MF, BRANCH
         AIF   (N'&MF EQ 1).V1ER3       IF ONE PARM, BRANCH, ERROR
.V1ER1   ANOP
         SPACE 1
         MNOTE 8,'***  IHB001 INVALID OPERAND - MF=&MF'
         AGO   .V1ERX                   GO SET ERROR FLAG
.*
.V1ER2   ANOP
         SPACE 1
         MNOTE 8,'***  IHB002 MF IS A REQUIRED KEYWORD'
         AGO   .V1ERX                   GO SET ERROR FLAG
.*
.V1ER3   ANOP
         SPACE 1
         MNOTE  8,'***  IHB004 MF=(E,ADDR) FORM: SUPPLY PARAMETER LIST X
               ADDRESS'
.V1ERX   ANOP
         SPACE 1
&ERRORSW SETB  1                        SET ERROR SWITCH ON
.V1X     ANOP
.*
.* ********************************************************************
.* *  V2: DSN= PARAMETER
.* ********************************************************************
.*
.V2      AIF   ('&DSN' EQ '').V2X       IF DSN NOT GIVEN, BRANCH
         AIF   (&MFD).V2NOTE            IF D FORM, BRANCH, WARNING
         AIF   ('&DSN'(1,1) EQ '(').V2R IF DSN=(REG), BRANCH
&DSNA    SETB  1                        ELSE SET DSN=ADDR
         AGO   .V2X                       AND CONTINUE
.*
.V2R     AIF   (&MFL).V2NOTE            IF L FORM, BRANCH, WARNING
         AIF   (N'&DSN NE 1).V2ER1      IF NE ONE PARM, BRANCH, ERROR
&DSNR    SETB  1                        SET DSN=(REG)
         AGO   .V2X                     AND CONTINUE
.*
.V2ER1   ANOP
         SPACE 1
         MNOTE 8,'***  IHB005 INVALID OPERAND - DSN=&DSN'
         SPACE 1
&ERRORSW SETB  1                        SET ERROR SWITCH ON
.V2NOTE  ANOP
&WARNSW  SETB  1                        SET WARNING SWITCH ON
.V2X     ANOP
.*
.* ********************************************************************
.* *  V3: MODE=  PARAMETER
.* ********************************************************************
.*
.V3      AIF   ('&MODE' EQ '').V3X      IF MODE NOT GIVEN, BRANCH
         AIF   (&MFD).V3NOTE            IF D FORM, BRANCH, WARNING
         AIF   ('&MODE' EQ 'PGM').V3X   IF MODE=PGM, BRANCH
         AIF   ('&MODE' NE 'SUP').V3ER1 IF NOT MODE=SUP, BRANCH, ERROR
&OB1(1)  SETB  1                        ELSE SET MODE=UP          @03C
         AGO   .V3X                       AND CONTINUE
.*
.V3ER1   ANOP
         SPACE 1
         MNOTE 8,'***  IHB006 INVALID OPERAND - MODE=&MODE'
         SPACE 1
&ERRORSW SETB  1                        SET ERROR SWITCH ON
.V3NOTE  ANOP
&WARNSW  SETB  1                        SET WARNING SWITCH ON
.V3X     ANOP
.*
.* ********************************************************************
.* *  V4: UCB= PARAMETER
.* ********************************************************************
.*
.V4      AIF   ('&UCB' EQ '').V4X       IF UCB NOT GIVEN, BRANCH
         AIF   (&MFD OR &MFL).V4NOTE    IF D OR L FORM, GO SET WARNING
         AIF   ('&UCB'(1,1) NE '(').V4ER1 IF NOT UCB=(REG), BRANCH, ERR
         AIF   (N'&UCB NE 1).V4ER1      IF NE ONE PARM, BRANCH, ERROR
&UCBR    SETB  1                       ELSE SET UCB=(REG)
         AGO   .V4X                       AND CONTINUE
.*
.V4ER1   ANOP
         SPACE 1
         MNOTE 8,'***  IHB007 INVALID OPERAND - UCB=&UCB'
         SPACE 1
&ERRORSW SETB  1                        SET ERROR SWITCH ON
.V4NOTE  ANOP
&WARNSW  SETB  1                        SET WARNING SWITCH ON
.V4X     ANOP
.*
.* ********************************************************************
.* *  V5: TIOT= PARAMETER                                          @01A
.* ********************************************************************
.*
.V5      ANOP                                                      @01A
&NB1(2)  SETB  ('&TIOT' EQ '')          SET 'AND' BIT              @03C
         AIF   ('&TIOT' EQ '').V5X      IF TIOT NOT GIVEN, BRANCH  @01A
         AIF   (&MFD).V5NOTE            IF D FORM, ISSUE WARNING   @01A
         AIF   ('&TIOT' EQ 'ENQ').V5X   IF TIOT=ENQ, BRANCH        @01A
&OB1(2)  SETB  ('&TIOT' EQ 'NOENQ')     SET 'OR' BIT               @03C
         AIF   ('&TIOT' EQ 'NOENQ').V5X IF TIOT=NOENQ, BRANCH      @01A
.V5ER1   ANOP                                                      @01A
         SPACE 1                                                   @01A
         MNOTE 8,'***  IHB008 INVALID OPERAND - TIOT=&TIOT'        @01A
         SPACE 1                                                   @01A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @01A
.V5NOTE  ANOP                                                      @01A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @01A
.V5X     ANOP                                                      @01A
.*
.* ********************************************************************
.* *  V6: ERASE= PARAMETER                                         @02A
.* ********************************************************************
.*
.V6      ANOP                                                      @02A
&NB1(3)  SETB  ('&ERASE' EQ '')         SET 'AND' BIT              @03C
&NB1(4)  SETB  (&NB1(3))                SET 'AND' BIT              @03C
         AIF   ('&ERASE' EQ '').V6X     IF ERASE NOT GIVEN, BRANCH @02A
         AIF   (&MFD).V6NOTE            IF D FORM, ISSUE WARNING   @02A
         AIF   ('&ERASE' EQ 'TEST').V6X IF ERASE=TEST, BRANCH      @02A
&OB1(3)  SETB  ('&ERASE' EQ 'NO')       SET 'OR' BIT               @03C
&OB1(4)  SETB  ('&ERASE' EQ 'YES')      SET 'OR' BIT               @03C
         AIF   (&OB1(3) OR &OB1(4)).V6X IF YES OR NO SPECIFIED, BR @02A
.V6ER1   ANOP                                                      @02A
         SPACE 1                                                   @02A
         MNOTE 8,'***  IHB009 INVALID OPERAND - ERASE=&ERASE'      @02A
         SPACE 1                                                   @02A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @02A
.V6NOTE  ANOP                                                      @02A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @02A
.V6X     ANOP                                                      @02A
.*                                                                 @03A
.* *************************************************************** @03A
.* *  V7: VSAMTYPE= PARAMETER                                      @03A
.* *************************************************************** @03A
.*                                                                 @03A
.V7      ANOP                                                      @03A
&NB2(1)  SETB  ('&VSAMTYPE' EQ '')    SET TYPE KSDS  = 0           @03A
&NB2(2)  SETB  (&NB2(1))              SET TYPE ESDS  = 0           @03A
&NB2(3)  SETB  (&NB2(1))              SET TYPE RRDS  = 0           @03A
&NB2(4)  SETB  (&NB2(1))              SET TYPE VRRDS = 0           @03A
&NB2(5)  SETB  (&NB2(1))              SET TYPE LDS   = 0           @03A
.*                                                                 @03A
         AIF   ('&VSAMTYPE' EQ '').V7W  VSAM DATASET NOT SPECIFIED @03A
         AIF   ('&VSAMFMT'  EQ '').V7ER1                           @03A
         AIF   ('&VSAMCLLR' EQ '').V7ER2                           @03A
         AIF   ('&VSAMSEC'  EQ '').V7ER3                           @03A
.*       AIF   ('&VSAMTRKS' EQ '').V7ER4                           @03A
         AGO   .V7T                                                @03A
.*                                                                 @03A
.V7W     ANOP                                                      @03A
         AIF   ('&VSAMFMT'  NE '').V7ER6                           @03A
         AIF   ('&VSAMCLLR' NE '').V7ER7                           @03A
         AIF   ('&VSAMSEC'  NE '').V7ER8                           @03A
         AIF   ('&VSAMTRKS' NE '').V7ER9                           @03A
.*                                                                 @03A
.V7T     ANOP                                                      @03A
         AIF   ('&VSAMTYPE' EQ '').V7X                             @03A
         AIF   (&MFD).V7NOTE            IF D FORM, ISSUE WARNING   @03A
.*                                                                 @03A
&OB2(1)  SETB  ('&VSAMTYPE' EQ 'KSDS')                             @03A
&OB2(2)  SETB  ('&VSAMTYPE' EQ 'ESDS')                             @03A
&OB2(3)  SETB  ('&VSAMTYPE' EQ 'RRDS')                             @03A
&OB2(4)  SETB  ('&VSAMTYPE' EQ 'VRRDS')                            @03A
&OB2(5)  SETB  ('&VSAMTYPE' EQ 'LDS')                              @03A
         AIF   (&OB2(1) OR &OB2(2) OR &OB2(3)).V7X                 @03A
         AIF   (&OB2(4) OR &OB2(5)).V7X                            @03A
.*                                                                 @03A
.V7ER5   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'***IHB010 INVALID OPERAND - VSAMTYPE=&VSAMTYPE'  @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER1   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB011 PARAMETER VSAMFMT MUST BE SPECIFIED'  @03A
         MNOTE 8,'***        WHEN PARAMETER VSAMTYPE IS SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER2   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB012 PARAMETER VSAMCLLR MUST BE SPECIFIED' @03A
         MNOTE 8,'***        WHEN PARAMETER VSAMTYPE IS SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER3   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB013 PARAMETER VSAMSEC MUST BE SPECIFIED'  @03A
         MNOTE 8,'***        WHEN PARAMETER VSAMTYPE IS SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER4   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB014 PARAMETER VSAMTRKS MUST BE SPECIFIED' @03A
         MNOTE 8,'***        WHEN PARAMETER VSAMTYPE IS SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER6   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB015 PARAMETER VSAMFMT MUST NOT BE'        @03A
         MNOTE 8,'***    SPECIFIED WHEN VSAMTYPE IS NOT SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER7   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB016 PARAMETER VSAMCLLR MUST NOT BE'       @03A
         MNOTE 8,'       SPECIFIED WHEN VSAMTYPE IS NOT SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER8   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB017 PARAMETER VSAMSEC MUST NOT BE'        @03A
         MNOTE 8,'       SPECIFIED WHEN VSAMTYPE IS NOT SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ER9   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'*** IHB018 PARAMETER VSAMTRKS MUST NOT BE'       @03A
         MNOTE 8,'       SPECIFIED WHEN VSAMTYPE IS NOT SPECIFIED' @03A
         SPACE 1                                                   @03A
         AGO   .V7ERROR                                            @03A
.*                                                                 @03A
.V7ERROR ANOP                                                      @03A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @03A
.V7NOTE  ANOP                                                      @03A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @03A
.V7X     ANOP                                                      @03A
.*                                                                 @03A
.* *************************************************************** @03A
.* *  V8: VSAMTRKS= PARAMETER                                      @03A
.* *************************************************************** @03A
.*                                                                 @03A
.V8      AIF   ('&VSAMTRKS' EQ '').V8X    IF VSAMTRKS NOT GIVEN,BR @03A
         AIF   (&MFD).V8NOTE            IF D FORM, BRANCH, WARNING @03A
         AIF   ('&VSAMTRKS'(1,1) EQ '(').V8R IF DSN=(REG), BRANCH  @03A
&TRKSA   SETB  1                        ELSE SET DSN=ADDR          @03A
         AGO   .V8X                       AND CONTINUE             @03A
.*                                                                 @03A
.V8R     AIF   (&MFL).V8NOTE            IF L FORM, BRANCH, WARNING @03A
         AIF   (N'&VSAMTRKS NE 1).V8ER1 IF NE 1 PARM, BRANCH, ERROR@03A
&TRKSR   SETB  1                        SET DSN=(REG)              @03A
         AGO   .V8X                     AND CONTINUE               @03A
.*                                                                 @03A
.V8ER1   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'***  IHB019 INVALID OPERAND - VSAMTRKS=&VSAMTRKS'@03A
         SPACE 1                                                   @03A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @03A
.V8NOTE  ANOP                                                      @03A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @03A
.V8X     ANOP                                                      @03A
.*                                                                 @03A
.* *************************************************************** @03A
.* *  V9: VSAMFMT= PARAMETER                                       @03A
.* *************************************************************** @03A
.*                                                                 @03A
.V9      ANOP                                                      @03A
&NB2(6)  SETB  ('&VSAMFMT' EQ '')       SET 'AND' BIT              @03A
&NB2(7)  SETB  (&NB2(6))                SET 'AND' BIT              @03A
         AIF   ('&VSAMFMT' EQ '').V9X   IF VSAMFMT NOT GIVEN, BR.  @03A
         AIF   (&MFD).V9NOTE            IF D FORM, ISSUE WARNING   @03A
&OB2(6)  SETB  ('&VSAMFMT' EQ 'EXTD')   SET 'OR' BIT               @03A
&OB2(7)  SETB  ('&VSAMFMT' EQ 'STD')    SET 'OR' BIT               @03A
         AIF   (&OB2(6) OR &OB2(7)).V9X IF YES OR NO SPECIFIED, BR @03A
.V9ER1   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'***IHB020 INVALID OPERAND - VSAMFMT=&VSAMFMT'    @03A
         SPACE 1                                                   @03A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @03A
.V9NOTE  ANOP                                                      @03A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @03A
.V9X     ANOP                                                      @03A
.*                                                                 @03A
.*                                                                 @03A
.* *************************************************************** @03A
.* *  VA: VSAMCLLR= PARAMETER                                      @03A
.* *************************************************************** @03A
.*                                                                 @03A
.VA      ANOP                                                      @03A
&NB1(5)  SETB  ('&VSAMCLLR' EQ '')      SET 'AND' BIT              @03A
&NB1(6)  SETB  (&NB1(5))                SET 'AND' BIT              @03A
         AIF   ('&VSAMCLLR' EQ '').VAX  IF VSAMCLLR NOT GIVEN, BR. @03A
         AIF   (&MFD).VANOTE            IF D FORM, ISSUE WARNING   @03A
&OB1(5)  SETB  ('&VSAMCLLR' EQ 'VSAMCLSE')  SET 'OR' BIT           @03A
&OB1(6)  SETB  ('&VSAMCLLR' EQ 'NOTVSAM')   SET 'OR' BIT           @03A
         AIF   (&OB1(5) OR &OB1(6)).VAX IF YES OR NO SPECIFIED, BR @03A
.VAER1   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'***IHB021 INVALID OPERAND - VSAMCLLR=&VSAMCLLR'  @03A
         SPACE 1                                                   @03A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @03A
.VANOTE  ANOP                                                      @03A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @03A
.VAX     ANOP                                                      @03A
.*                                                                 @03A
.*                                                                 @03A
.* *************************************************************** @03A
.* *  VB: VSAMSEC= PARAMETER                                       @03A
.* *************************************************************** @03A
.*                                                                 @03A
.VB      ANOP                                                      @03A
&NB1(7)  SETB  ('&VSAMSEC' EQ '')       SET 'AND' BIT              @03A
&NB1(8)  SETB  (&NB1(7))                SET 'AND' BIT              @03A
         AIF   ('&VSAMSEC' EQ '').VBX   IF VSAMSEC NOT GIVEN, BR.  @03A
         AIF   (&MFD).VBNOTE            IF D FORM, ISSUE WARNING   @03A
&OB1(7)  SETB  ('&VSAMSEC' EQ 'BYPASS')     SET 'OR' BIT           @03A
&OB1(8)  SETB  ('&VSAMSEC' EQ 'NOBYPASS')   SET 'OR' BIT           @03A
         AIF   (&OB1(7) OR &OB1(8)).VBX IF YES OR NO SPECIFIED, BR @03A
.VBER1   ANOP                                                      @03A
         SPACE 1                                                   @03A
         MNOTE 8,'***IHB022 INVBLID OPERAND - VSAMSEC=&VSAMSEC'    @03A
         SPACE 1                                                   @03A
&ERRORSW SETB  1                        SET ERROR SWITCH ON        @03A
.VBNOTE  ANOP                                                      @03A
&WARNSW  SETB  1                        SET WARNING SWITCH ON      @03A
.VBX     ANOP                                                      @03A
.*                                                                 @03A
.*                                                                 @03A
.* ********************************************************************
.* *  CHECK ERRORS
.* ********************************************************************
.*
         AIF   (&ERRORSW EQ 0).CONT     IF NO MAJOR ERROR, BRANCH
&LABEL   DS    0F  *** INVALID OPERAND(S) FOUND IN MACRO EXPANSION.***
         AGO   .FINISH
.*
.CONT    AIF   (&WARNSW EQ 0).BLD       IF NO WARNING ERROR, BRANCH
         SPACE 1
     MNOTE 4,'***  IHB023 ONE OR MORE PARAMETERS IGNORED DUE TO MF=&MF'
         SPACE 1
.BLD     ANOP                                                      @01A
&NMASK1  SETA  128*&NB1(1)+64*&NB1(2)+32*&NB1(3)+16*&NB1(4)        @03C
&NMASK1  SETA  &NMASK1+8*&NB1(5)+4*&NB1(6)+2*&NB1(7)+1*&NB1(8)     @03A
&OMASK1  SETA  128*&OB1(1)+64*&OB1(2)+32*&OB1(3)+16*&OB1(4)        @03C
&OMASK1  SETA  &OMASK1+8*&OB1(5)+4*&OB1(6)+2*&OB1(7)+1*&OB1(8)     @03A
.*                                                                 @03A
&NMASK2  SETA  128*&NB2(1)+64*&NB2(2)+32*&NB2(3)+16*&NB2(4)        @03A
&NMASK2  SETA  &NMASK2+8*&NB2(5)+4*&NB2(6)+2*&NB2(7)               @03A
&OMASK2  SETA  128*&OB2(1)+64*&OB2(2)+32*&OB2(3)+16*&OB2(4)        @03A
&OMASK2  SETA  &OMASK2+8*&OB2(5)+4*&OB2(6)+2*&OB2(7)               @03A
.*
         AIF   (&MFE).E1                IF E FORM, BRANCH          @01C
&L       SETC  '&LABEL'                 ELSE ASSUME A LABEL WAS GIVEN
         AIF   ('&L' NE '').TSTDL         IF A LABEL WAS GIVEN, BRANCH
&L       SETC  'PRL&NO.S'                 ELSE CONSTRUCT A LABEL
.TSTDL   AIF   (&MFL).L1                    IF L FORM, BRANCH
.*
.* ********************************************************************
.* *  BEGIN BUILD FOR DSECT FORM OF MACRO
.* ********************************************************************
.*
&L       DSECT                          DSECT FOR PARAMETER LIST
PRLPLID  DS    CL4                      EBCDIC 'PREL' FOR PARTREL
PRLNGTH  DS    AL2                      LENGTH OF PARAMETER LIST
PRERRCDE DS    H                        ERROR CODE RETURNED FROM
.*                                        PARTIAL RELEASE
PRLFLAG  DS    XL1                      PARAMETER FLAG BYTE
PRLPGM   EQU   X'00'                    MODE=PGM (PROBLEM PROGRAM)
PRLSUP   EQU   X'80'                    MODE=SUP (SUPERVISOR STATE)
PRLTIOT  EQU   X'40'                    TIOT=NOENQ                 @01A
PRLNERAS EQU   X'20'                    ERASE=NO                   @02A
PRLERASE EQU   X'10'                    ERASE=YES                  @02A
PRLVCLOS EQU   X'08'          VSAMCLLR=VSAMCLSE                    @03A
PRLVCNV  EQU   X'04'          VSAMCLLR=NOTVSAM                     @03A
PRLBYPS  EQU   X'02'          VSAM: BYPASS SECURITY CHECKING       @03A
PRLNBYPS EQU   X'01'          VSAM: SECURITY CHECKING TO BE DONE   @03A
PRLFLAG2 DS    XL1                                                 @03A
PRLVKSDS EQU   X'80'          VSAMTYPE=KSDS                        @03A
PRLVESDS EQU   X'40'          VSAMTYPE=ESDS                        @03A
PRLVRRDS EQU   X'20'          VSAMTYPE=RRDS                        @03A
PRLVVRRD EQU   X'10'          VSAMTYPE=VRRDS                       @03A
PRLVLDS  EQU   X'08'          VSAMTYPE=LDS                         @03A
PRLEXTD  EQU   X'04'          VSAMFMT=Extended format data set     @03A
PRLSTD   EQU   X'02'          VSAMFMT=Standard format data set     @03A
PRLFRES  EQU   X'01'                    RESERVED                   @02C
PRLRSVD  DS    XL2                      RESERVED                   @03C
PRLDSN   DS    A                        DATA SET NAME POINTER
PRLUCB   DS    A                        UCB POINTER
PRLTRKS  DS    A              Ptr to area to contain number of     @03A
.*                                tracks released by partial rel   @03A
.*                             (ONLY VALID FOR VSAM REQUESTS)      @03A
PRLCTGR  DS    F               CATALOG REASON CODE, ONLY VALID     @03A
*                              WHEN REQUEST IS FOR A VSAM DATASET  @03A
*                              (ONLY VALID FOR VSAM REQUESTS)      @03A
PRLEND   EQU   *                        END OF PARAMETER LIST
PRLENGTH EQU   PRLEND-&L                LENGTH OF PARAMETER LIST
         AGO   .FINISH
.*
.* ********************************************************************
.* *  BEGIN BUILD FOR EXECUTE FORM OF MACRO
.* ********************************************************************
.*
.E1      AIF   ('&LABEL' EQ '').E2      IF NO LABEL GIVEN, BRANCH
&LABEL   DS    0H
.E2      AIF   ('&MF(2)' EQ '(1)').E3   IF MF=(E,(1))  BRANCH
         LOAD  EP=IGG020P0              GET ADDR OF IGG020P0 IN REG 0
         IHBINNRA &MF(2)                GET PARM LIST ADDR IN REG 1
         AGO   .E4                      BRANCH AROUND MF=(E,(1)) FORM
.*
.E3      ANOP
         LR    14,1                     SAVE PARM LIST ADDR AROUND LOAD
         LOAD  EP=IGG020P0              GET ADDR OF IGG020P0 IN REG 0
         LR    1,14                     RESTORE PARM LIST ADDR
.*
.E4      ANOP                                                      @01C
         NI    8(1),&NMASK1             RESET FLAG BITS            @01C
         NI    9(1),&NMASK2             RESET FLAG BITS            @01C
.*                                                                 @01D
.E5      ANOP
         AIF   (&OMASK1 EQ 0).E5A       IF NO BITS TO SET, BRANCH  @03C
         OI    8(1),&OMASK1             SET FLAG BITS              @01C
.*                                                                 @03A
.E5A     ANOP                                                      @03A
         AIF   (&OMASK2 EQ 0).E6        IF NO BITS TO SET, BRANCH  @03A
         OI    9(1),&OMASK2             SET FLAG BITS              @03A
.*                                                                 @03A
.E6      AIF   (&DSNR).E7               IF DSN=(REG), BRANCH
         AIF   (&DSNA EQ 0).E6A         IF NOT DSN=ADDR, BRANCH    @03C
         LA    15,&DSN                  GET ADDR OF DATA SET NAME
         ST    15,12(,1)                AND STORE IN PARM LIST
         AGO   .E6A                     BRANCH AROUND DSN=(REG)    @03C
.E7      ANOP
         ST    &DSN(1),12(,1)           STORE ADDR OF DATA SET NAME
.*                                                                 @03A
.E6A     AIF   (&TRKSR).E7A             IF VSAMTRKS=(REG),  BRANCH @03A
         AIF   (&TRKSA EQ 0).E8         IF NOT DSN=ADDR, BRANCH    @03A
         LA    15,&VSAMTRKS              GET ADDR OF DATA SET NAME @03A
         ST    15,20(,1)                AND STORE IN PARM LIST     @03A
         AGO   .E8                      BRANCH AROUND DSN=(REG)    @03A
.E7A     ANOP                                                      @03A
         ST    &VSAMTRKS(1),20(,1)      STORE ADDR OF VSAMTRKS RET @03A
.*                                                                 @03A
.E8      AIF   (&UCBR EQ 0).E9          IF NOT UCB=(REG), BRANCH   @03A
         ST    &UCB(1),16(,1)           STORE UCB PTR IN PARM LIST @03A
.*                                                                 @03A
.E9      ANOP
         LR    15,0                     GET ENTRY ADDRESS TO IGG020P0
         L     14,16                    POINT TO CVT,  TEST FOR MVS/XA
         TM    116(14),X'80'               TM  CVTDCB,CVTMVSE
         BO    PRL&NO.B                 IF XA, BRANCH TO BASSM
         BALR  14,15                    ELSE BALR TO PARTIAL RELEASE
         B     PRL&NO.D                 BRANCH TO DELETE
*
PRL&NO.B DS    0H                       XA IS EXECUTING, USE BASSM
         DC    X'0CEF'                  BASSM 14,15  TO PARTIAL RELEASE
PRL&NO.D DS    0H                       DELETE EP=IGG020P0
         LR    14,15                    SAVE RETURN CODE AROUND DELETE
         DELETE EP=IGG020P0             FINISHED WITH IGG020P0
         LTR   15,14                    RESTORE RETURN CODE
         AGO   .FINISH                  EXECUTE FROM IS DONE
.*
.* ********************************************************************
.* *  BEGIN BUILD FOR LIST FORM OF MACRO
.* ********************************************************************
.*
.L1      ANOP
&L       DS    0F
         DC    CL4'PREL'                EBCDIC 'PREL' FOR PARTREL
         DC    AL2(PRL&NO.E-&L)         LENGTH OF PARAMETER LIST
         DC    H'0'                     ERROR CODE RETURNED FROM
.*                                        PARTIAL RELEASE
.*                                                               3 @01D
.L2      ANOP
         DC    AL1(&OMASK1)             PARAMETER FLAG BYTE1       @03C
         DC    AL1(&OMASK2)             PARAMETER FLAG BYTE2       @03A
.L3      ANOP
         DC    XL2'00'                  RESERVED
.*
         AIF   (&DSNA).L4               IF DSN=ADDR, BRANCH
         DC    A(0)                     ADDRESS OF DATA SET NAME
         AGO   .L5                      BRANCH AROUND DSN=ADDR
.L4      ANOP
         DC    A(&DSN)                  ADDRESS OF DATA SET NAME
.*
.L5      ANOP
         DC    A(0)                     UCB ADDRESS
.*                                                                 @03A
         AIF   (&TRKSA).L6              IF VSAMTRKS=ADDR, BRANCH   @03A
         DC    A(0)                     ADDRESS OF VSAMTRKS        @03A
         AGO   .L7                      BR AROUND VSAMTRKS=ADDR    @03A
.L6      ANOP                                                      @03A
         DC    A(&VSAMTRKS)             ADDRESS OF VSAMTRKS        @03A
.L7      ANOP                                                      @03A
         DC    F'0'                     CATALOG REASON CODE, ONLY  @03A
*                                       VALID WHEN CATALOG FAILED  @03A
*                                       THE PARTREL REQUEST FOR A  @03A
*                                       VSAM DATASET.              @03A
*                                                                  @03A
.*                                                                 @03A
PRL&NO.E EQU   *                        END OF PARTREL PARM LIST
.*
.FINISH  ANOP
         MEND
**/ PARTREL: MACRO KEYS(0:1(DSN_NAME,DSN_ADDR),
*                       MODE,
*                       RETCODE,
*                       RSNCODE,
*                       CATALOG_REASON_CODE,
*                       0:1(UCB_NAME,UCB_ADDR),
*                       TIOT,
*                       ERASE,
*                       VSAM_TYPE,
*                       VSAM_FORMAT,
*                       VSAM_CALLER,
*                       VSAM_SECURITY,
*                       0:1(VSAM_TRACKS_NAME,VSAM_TRACKS_ADDR),
*                       MF);
*  ANS('?' ×× MACLABEL ×× ' PARTRELP ' ×× MACKEYS ×× ';') RESCAN SKIP;
* %END PARTREL;
