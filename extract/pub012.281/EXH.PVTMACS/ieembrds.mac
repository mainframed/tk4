 /***** START OF SPECIFICATIONS **************************************/
 /*                                                                  */
 /*  MACRO-NAME = IEEMBRDS                                           */
 /*                                                                  */
 /*  DESCRIPTIVE-NAME = SMF RECORDING DATA SET CONTROL BLOCK         */
 /*                                                                  */
 /*  FUNCTION = PLS MAPPING MACRO FOR RDS.  AN RDS CONTAINS THE      */
 /*             DATA NECESSARY TO CONTROL AN SMF RECORDING           */
 /*             DATASET.  IT INCLUDES TH VSAM ACB AND RPL AND        */
 /*             OTHER FLAGS AND FIELDS DESCRIBING THE STATUS         */
 /*             OF THE DATASET.                                      */
 /*                                                                  */
 /*  MODULE-TYPE = PLS MACRO                                         */
 /*                                                                  */
 /*  CHANGE-ACTIVITY = SEE BELOW                                     */
 /*                                                                  */
 /*  A000000-999999                                          @G741PBB*/
 /*                                                                  */
 /***** END OF SPECIFICATIONS ****************************************/
 DCL 1 IEEMBRDS BDY(WORD) BASED,
       2 RDSID CHAR(4),            /* CONTROL BLOCK ID             */
       2 RDSNEXT PTR(31),          /* FORWARD CHAIN POINTER          */
       2 RDSPREV PTR(31),          /* BACKWARD CHAIN POINTER         */
       2 RDSFLAG BIT(32),          /* DATASET STATUS INDICATORS      */
         3 * BIT(8),               /*                                */
           4 * BIT(1),
           4 * BIT(1),
           4 * BIT(1),
           4 RDSFREE BIT(1),     /* 1- NEED TO FREE DATASET AND RDS */
           4 RDSDUMP BIT(1),     /* 1-OPER HAS BEEN TOLD TO DUMP DS */
           4 RDSREADY BIT(1),    /* 1-DS IS OPEN AND READY TO USE    */
           4 RDSCLOSE BIT(1),    /* 1-DS NEEDS TO BE CLOSED          */
           4 RDSNDOP  BIT(1),    /* 1-DS NEEDS TO BE OPENED          */
         3 * BIT(8),             /*                                  */
           4 RDSLOST BIT(1),     /* DUMMY RDS FOR LOST DATA          */
           4 RDSPHYER BIT(1),    /* 1 - PHYSICAL I/O ERROR           */
           4 RDSLOGER BIT(1),    /* 1 - LOGICAL I/O ERROR            */
         3 * BIT(8),             /*                                  */
         3 * BIT(8),             /*                                  */
       2 RDSNAME CHAR(10),       /* DATASET NAME                     */
       2 RDSVOLID CHAR(6),       /* VOLUME SERIAL                    */
       2 RDSDDN   CHAR(8),       /* DDNAME RETURNED BY DYNAMIC ALLOC */
       2 RDSCAPTY FIXED(31),     /* DATASET CAPACITY IN # OF BLOCKS  */
       2 RDSNXTBL FIXED(31),     /* NUMBER OF NEXT AVAILABLE BLOCK   */
       2 RDSBQE   FIXED(31),     /* ADDRESS OF BQE BEING WRITTEN     */
       2 RDSAVSPC FIXED(31),     /* AVAILABLE SPACE FROM SHOWCB      */
       2 RDSENRBA FIXED(31),     /* ENDRBA FROM SHOWCB               */
       2 RDSCINV FIXED(31),      /* CONTROL INTERVAL SIZE            */
       2 RDSDOMID FIXED(31),     /* MSG # OF DUMP MSG                */
       2 RDSRPL CHAR(76),        /* VSAM RPL                         */
       2 RDSACB CHAR(76);        /* VSAM ACB                         */
 DCL RDSFBQE PTR(31)             /* ADDR OF FIRST BQE                */
      DEFINED(RDSRPL);           /* TO BE PROCESSED AFTER LOST DATA
                                    RECOVERY (ONLY IN LOST DATA RDS) */
 @EJECT;
