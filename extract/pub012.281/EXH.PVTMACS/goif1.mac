         MACRO
&NAME    GOIF1 &LOC,&CMP,&EQ=,&NE=,&GT=,&LT=,&GE=,&LE=,&MODE=,         ,
               &ZERO=,&NOTZERO=,&POS=,&NOTPOS=,&NEG=,&NOTNEG=,&ELSE=
         LCLA  &W(4)
         LCLB  &B(3)
         LCLC  &R
.*
.*             CHANGES TO RELEASE 3
.*             CHANGES TO RELEASE 2
.*             CHANGES TO RELEASE 1
.*
.* INNER MACRO TO GOIF. GENERATES THE INSTRUCTIONS IF A
.* SWITCH IS TO BE TESTED
.*
         AIF   (K'&LOC EQ 0).ERR1
&W(1)    SETA  4
&W(2)    SETA  2
&W(3)    SETA  13
&W(4)    SETA  11
&B(1)    SETB  ('&EQ' NE '')
&B(2)    SETB  ('&NE' NE '')
&B(3)    SETB  ('&NE' NE '')
         AIF   ('&GT' EQ '').C1
         AIF   (&B(3)).ERR3
&B(3)    SETB  1
.C1      AIF   ('&LT' EQ '').C2
         AIF   (&B(2)).ERR3
&B(2)    SETB  1
.C2      AIF   ('&GE' EQ '').C3
         AIF   (&B(1) OR &B(3)).ERR3
&B(1)    SETB  1
&B(3)    SETB  1
.C3      AIF   ('&LE' EQ '').C4
         AIF   (&B(1) OR &B(2)).ERR3
&B(1)    SETB  1
&B(2)    SETB  1
.C4      AIF   (NOT(&B(1) AND &B(2) AND &B(3))OR '&ELSE' EQ '').C5
.ERR3    MNOTE 8,'REDUNDANT LOGIC, MACRO EXPANSION ATTEMPTED.'
.C5      AIF   (K'&CMP EQ 0).C6
.*
.*                       TWO OPERANDS SUPPLIED
.*
         AIF   ('&LOC'(1,1) EQ '(' AND '&LOC'(K'&LOC,1) EQ ')').RG1
         AIF   ('&CMP'(1,1) EQ '(' AND '&CMP'(K'&CMP,1) EQ ')').RG2
         AIF   (T'&CMP NE 'U').SS
.*
.*                       OPERAND 2 IS ASSUMED TO BE IMMEDIATE
.*
&NAME    CLI   &LOC,&CMP
         AGO   .C7
.*
.*                       ONE OPERAND ONLY
.*
.C6      AIF   ('&LOC'(1,1) EQ '(' AND '&LOC'(K'&LOC,1) EQ ')').LTR
&NAME    CLI   V&LOC,&LOC
.C7      AIF   (K'&ZERO+K'&NOTZERO+K'&POS+K'&NOTPOS+K'&NEG+K'&NOTNEG EQ,
                0).C7A
         MNOTE 8,'CALL CONTAINS OTHER THAN RELATIONAL CONDITIONS.'
.C7A     AIF   ('&EQ' EQ '').LE
         AIF   ('&EQ'EQ'&NE'OR'&EQ'EQ'&GT'AND'&EQ'EQ'&LT').ALL
         AIF   ('&EQ' EQ '&LT').LE1
         AIF   ('&EQ' EQ '&GT').GE1
         AIF   ('&EQ'(1,1) NE '(').EQ2
&R       SETC  'R'
.EQ2     BC&R  8,&EQ(1)                 BRANCH PER MACRO CALL
&R       SETC  ''
.LE      AIF   ('&LE' EQ '').GE
         AIF   ('&LE' EQ '&GT').ALL1
         AIF   ('&LE'(1,1) NE '(').LE2
&R       SETC  'R'
.LE2     BC&R  &W(3),&LE(1)             BRANCH PER MACRO CALL
&R       SETC  ''
         AGO   .GE
.LE1     AIF   ('&EQ'(1,1) NE '(').LE3
&R       SETC  'R'
.LE3     BC&R  &W(3),&EQ(1)             BRANCH PER MACRO CALL
&R       SETC  ''
.GE      AIF   ('&GE' EQ '').LT
         AIF   ('&GE' EQ '&LT').ALL2
         AIF   ('&GE'(1,1) NE '(').GE2
&R       SETC  'R'
.GE2     BC&R  &W(4),&GE(1)             BRANCH PER MACRO CALL
&R       SETC  ''
         AGO   .LT
.GE1     AIF   ('&EQ'(1,1) NE '(').GE3
&R       SETC  'R'
.GE3     BC&R  &W(4),&EQ(1)             BRANCH PER MACRO CALL
&R       SETC  ''
.LT      AIF   ('&LT' EQ '').NE
         AIF   ('&LT' EQ '&GT').NE1
         AIF   ('&LT'(1,1) NE '(').LT2
&R       SETC  'R'
.LT2     BC&R  &W(1),&LT(1)             BRANCH PER MACRO CALL
&R       SETC  ''
.NE      AIF   ('&NE' EQ '').GT
         AIF   ('&NE'(1,1) NE '(').NE2
&R       SETC  'R'
.NE2     BC&R  7,&NE(1)                 BRANCH PER MACRO CALL
&R       SETC  ''
         AGO   .END
.NE1     AIF   ('&LT'(1,1) NE '(').NE3
&R       SETC  'R'
.NE3     BC&R  7,&LT(1)                 BRANCH PER MACRO CALL
&R       SETC  ''
.GT      AIF   ('&GT' EQ '').END
         AIF   ('&GT'(1,1) NE '(').GT2
&R       SETC  'R'
.GT2     BC&R  &W(2),&GT(1)             BRANCH PER MACRO CALL
&R       SETC  ''
.END     AIF   ('&ELSE' EQ '').MEND
         AIF   ('&ELSE'(1,1) NE '(').ELSE2
&R       SETC  'R'
.ELSE2   BC&R  15,&ELSE(1)              BRANCH PER MACRO CALL
         MEXIT
.ALL     AIF   ('&EQ'(1,1) NE '(').ALL01
&R       SETC  'R'
.ALL01   BC&R  15,&EQ(1)                BRANCH PER MACRO CALL
         MEXIT
.ALL1    AIF   ('&LE'(1,1) NE '(').ALL11
&R       SETC  'R'
.ALL11   BC&R  15,&LE(1)                BRANCH PER MACRO CALL
         MEXIT
.ALL2    AIF   ('&GE'(1,1) NE '(').ALL21
&R       SETC  'R'
.ALL21   BC&R  15,&GE(1)                BRANCH PER MACRO CALL
         MEXIT
.LTRC    AIF   ('&ZERO'(1,1) NE '(').LTRV
&R       SETC  'R'
.LTRV    BC&R  15,&ZERO(1)              BRANCH PER MACRO CALL
         MEXIT
.LTRX    AIF   ('&NOTPOS'(1,1) NE '(').LTRZ
&R       SETC  'R'
.LTRZ    BC&R  15,&NOTPOS(1)            BRANCH PER MACRO CALL
         MEXIT
.LTRY    AIF   ('&NOTNEG'(1,1) NE '(').LTRW
&R       SETC  'R'
.LTRW    BC&R  15,&NOTNEG(1)            BRANCH PER MACRO CALL
         MEXIT
.RG1     AIF   ('&CMP'(1,1) EQ '(' AND '&CMP'(K'&CMP,1) EQ ')').RG12
         AIF   (L'&CMP NE 2).LNOT2
&NAME    CH    &LOC(1),&CMP
         AGO   .C7
.LNOT2   AIF   (L'&CMP EQ 4).LEQ4
         MNOTE *,'LENGTH ATTRIBUTE OF &CMP NOT 2 OR 4.'
.LEQ4    AIF   ('&MODE'(1,1) EQ 'A').NOTLOG
&NAME    CL    &LOC(1),&CMP
         AGO   .C7
.NOTLOG  ANOP
&NAME    C     &LOC(1),&CMP
         AGO   .C7
.RG2     AIF   (L'&LOC NE 2).LNOT22
&NAME    CH    &CMP(1),&LOC
         AGO   .C7R
.LNOT22  AIF   (L'&LOC EQ 4).LEQ42
         MNOTE *,'LENGTH ATTRIBUTE OF &LOC NOT 2 OR 4.'
.LEQ42   AIF   ('&MODE'(1,1) EQ 'A').NOTLOG2
&NAME    CL    &CMP(1),&LOC
         AGO   .C7R
.NOTLOG2 ANOP
&NAME    C     &CMP(1),&LOC
.C7R     ANOP
&W(1)    SETA  2
&W(2)    SETA  4
&W(3)    SETA  11
&W(4)    SETA  13
         AGO   .C7
.RG12    AIF   ('&MODE'(1,1) EQ 'A').RG12A
&NAME    CLR   &LOC(1),&CMP(1)
         AGO   .C7
.RG12A   ANOP
&NAME    CR    &LOC(1),&CMP(1)
         AGO   .C7
.SS      ANOP
&NAME    CLC   &LOC,&CMP
         AGO   .C7
.LTR     ANOP
&NAME    LTR   &LOC(1),&LOC(1)
         AIF   (&B(1)+&B(2)+&B(3) EQ 0).LTRA
         MNOTE 8,'CALL CONTAINS RELATIONAL CONDITIONS.'
.LTRA    AIF   (('&ZERO'EQ''OR'&NOTZERO'EQ''OR'&ELSE'EQ'')AND('&ZERO'EQ,
               ''OR'&POS'EQ''OR'&NEG'EQ''OR'&ELSE'EQ'')AND('&NOTPOS'EQ''
               'OR'&NEG'EQ''OR'&ELSE'EQ'')).LTRM
         MNOTE 8,'REDUNDANT LOGIC, MACRO EXPANSION ATTEMPTED.'
.LTRM    AIF   ('&NOTNEG'EQ''OR'&POS'EQ''OR'&ELSE'EQ'').LTRN
         MNOTE 8,'REDUNDANT LOGIC, MACRO EXPANSION ATTEMPTED.'
.LTRN    AIF   ('&NOTPOS' EQ '').LTRO
         AIF   ('&NOTPOS' EQ 'NEG').LTRX
         AIF   ('&NOTPOS'(1,1) NE '(').LTRP
&R       SETC  'R'
.LTRP    BC&R  13,&NOTPOS(1)            BRANCH PER MACRO CALL
&R       SETC  ''
.LTRO    AIF   ('&NOTNEG' EQ '').LTRQ
         AIF   ('&NOTNEG' EQ '&POS').LTRY
         AIF   ('&NOTNEG'(1,1) NE '(').LTRR
&R       SETC  'R'
.LTRR    BC&R  11,&NOTNEG(1)            BRANCH PER MACRO CALL
&R       SETC  ''
.LTRQ    AIF   ('&ZERO' EQ '').LTRB
         AIF   ('&ZERO' EQ '&NOTZERO' AND '&ZERO' EQ '&POS' AND '&ZERO',
                EQ '&NEG').LTRC
         AIF   ('&ZERO'(1,1) NE '(').LTRD
&R       SETC  'R'
.LTRD    BC&R  8,&ZERO(1)               BRANCH PER MACRO CALL
&R       SETC  ''
.LTRB    AIF   ('&NEG' EQ '').LTRE
         AIF   ('&NEG' EQ '&POS').LTRF
         AIF   ('&NEG'(1,1) NE '(').LTRG
&R       SETC  'R'
.LTRG    BC&R  4,&NEG(1)                 BRANCH PER MACRO CALL
&R       SETC  ''
.LTRE    AIF   ('&NOTZERO' EQ '').LTRH
         AIF   ('&NOTZERO'(1,1) NE '(').LTRI
&R       SETC  'R'
.LTRI    BC&R  7,&NOTZERO(1)            BRANCH PER MACRO CALL
&R       SETC  ''
         AGO   .LTRH
.LTRF    AIF   ('&POS'(1,1) NE '(').LTRK
&R       SETC  'R'
.LTRK    BC&R  7,&POS(1)                BRANCH PER MACRO CALL
&R       SETC  ''
.LTRH    AIF   ('&POS' EQ '').END
         AIF   ('&POS'(1,1) NE '(').LTRJ
&R       SETC  'R'
.LTRJ    BC&R  2,&POS(1)                BRANCH PER MACRO CALL
&R       SETC  ''
         AGO   .END
.ERR1    MNOTE 8,'REQUIRED OPERANDS NOT SUPPLIED.'
.MEND    MEND
