         MACRO
         GENOP &PHASE=,                 1=EDIT PHASE, 3=GENERATE PHASE *
               &SET=UNIV,               CHAR SET-UNIV,STD,COMM,SCNTF   X
               &LEVEL=1                 LEVEL OF TABLE
.*********************************************************************.
.*                                                                   *.
.* THIS MACRO GENERATES THE OP CODE TABLE FOR THE EDIT AND GENERATE  *.
.* PHASES.IT PERFORMS ITS WORK IN THE FOLLOWING STEPS:               *.
.*       1 - INITIALIZE  GLOBALS, COPY THE COMMON JUNK ETC.          *.
.*       2 - GENERATE THE OPCODE TABLE THROUGH A SERIES OF CALLS TO  *.
.*           THE MACRO 'OP', ONE CALL FOR EACH SYMBOLIC OPCODE.      *.
.*           NOTES - IF TAILORING OF THE TABLE ACCORDING TO INSTRUCT *.
.*                   SET BECOMES DESIRABLE,THIS CAN BE ACCOMPLISHED  *.
.*                   BY ADDING SOME PARAMETERS TO 'GENOP' AND DOING  *.
.*                   SOME SUITABLE BRANCHING ON THESE IN THIS STEP.  *.
.*                 - THE TABLE IS CHAINED BACKWARDS. IN ORDER TO GET *.
.*                   A FAST TABLE LOOKUP  FREQUENTLY USED OPCODES    *.
.*                   SUCH AS DC AND MVC SHOULD BE PUT TOWARDS THE END*.
.*                   AND UNFREQUENT ONES SUCH AS ICTL AND PRIVILEGED *.
.*                   OPS SHOULD BE IN THE BEGINNING.                 *.
.*       3 - GENERATE THE HASH TABLE, ONE POINTER FOR EACH CHAIN     *.
.*                                                                   *.
.*********************************************************************.
         GBLA  &SHIFT(8)                USED FOR FOLDING MNEMONIC
         GBLA  &CHAIN(71)               NO OF ENTRIES IN EACH CHAIN
         GBLC  &TABLE(71)               NAME OF PREVIOUS ENTRY IN CHAIN
         GBLC  &SEARCH(71)              CHAINS - FOR DOCUMENTATION ONLY
         GBLC  &CHARVAL                 VALID CHARACTERS FOR MNEMONIC
.*
         LCLA  &INDEX                   SCRATCH PAD
         LCLA  &COUNT                   SCRATCH PAD
         LCLC  &STRING                  SCRATCH PAD
         LCLC  &ID                      SCRATCH PAD
         LCLC  &COMMENT                 VARIABLE COMMENT FIELD
.*
.* CHECK PARAMETERS
.*
         AIF   (&PHASE EQ 1 OR &PHASE EQ 3).POK   GO IF PHASE OK
         MNOTE '***  ERROR  *** - PHASE=&PHASE'
.POK     AIF   (T'&LEVEL EQ 'N').LOK    GO IF LEVEL OK
         MNOTE '***  ERROR  *** - LEVEL=&LEVEL'
.LOK     ANOP
.*
&SHIFT(1) SETA X'1000000'
&SHIFT(2) SETA X'10000'
&SHIFT(3) SETA X'100'
&SHIFT(4) SETA X'1'
&SHIFT(5) SETA X'1000000'
&SHIFT(6) SETA X'10000'
&SHIFT(7) SETA X'100'
&SHIFT(8) SETA X'1'
.*
&CHARVAL SETC  'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
.*
&ID      SETC  '&SET'(1,2)
.* INITIALIZE &TABLE
.*
.INIT    ANOP
&COUNT   SETA  &COUNT+1                 NEXT ENTRY
&TABLE(&COUNT) SETC 'JOPTABLE'          INITIALIZE TO START OF JOPTABLE
         AIF   (&COUNT LT 71).INIT      GO IF NOT EXHAUSTED
         JHEAD 'OP CODE TABLE',                                        *
               PHASEID=X&PHASE.K,                                      *
               LEVEL=&LEVEL
*FUNCTION/OPERATION-                                                  *
*   THIS MODULE IS THE OP CODE TABLE. IT IS GENERATED ACCORDING TO    *
*   THE USER-SPECIFIED OPTIONS. IT IS GENERATED IN HASHED FORM. IT    *
*   IS INCLUDED AS PART OF BOTH THE EDIT PHASE AND THE GENERATE       *
*   PHASE.                                                            *
*                                                                     *
*ENTRY POINT-                                                         *
*        NONE                                                         *
*                                                                     *
*INPUT-                                                               *
*   NONE                                                              *
*                                                                     *
*OUTPUT-                                                              *
*   NONE                                                              *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*   NONE                                                              *
*                                                                     *
*EXITS,NORMAL-                                                        *
*   NONE                                                              *
*                                                                     *
*EXITS,ERROR-                                                         *
*   NONE                                                              *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*   NONE                                                              *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE                                                       *
*                                                                     *
*NOTES-                                                               *
*                                                                     *
*   THE FOLLOWING IS A DESCRIPTION OF THE OP CODE TABLE ENTRY(S)      *
*                                                                     *
*   ITEM            LENGTH         DESCRIPTION                        *
*   ----            ------         -----------                        *
*                                                                     *
*   CHAIN POINTER   2 BYTES        NON-ZERO = DISPLACEMENT FROM THE   *
*                                             BASE OF THE HASH TABLE  *
*                                             TO THE NEXT ENTRY IN    *
*                                             THE CHAIN               *
*                                                                     *
*                                  ZERO = LAST ENTRY IN THE CHAIN     *
*                                                                     *
*   FLAGS           1 BYTE         FLAGS REQUIRED BY THE EDITOR AND   *
*                                  OP CODE LOOK-UP ROUTINE            *
*                                                                     *
*                                  BITS 0-1                           *
*                                 01 = ONE BYTE OP CODE OR ASMOP      *
*                                 11 = TWO BYTE OP CODE OR EXT MNEMON.*
*                                                                     *
*                                  BITS 2-3                           *
*                                 00 = ONE BYTE MACHINE OP
*                                    01 = EXTENDED MNEMONIC           *
*                                 10 = TWO BYTE MACHINE OP
*                                    11 = ASSEMBLER OP                *
*                                                                     *
*                                  BIT 4                              *
*                                    0                                *
*                                                                     *
*                                  BITS 5-7                           *
*                                    LENGTH OF MNEMONIC-1             *
*                                                                     *
*   MNEMONIC        1-8 BYTES      MNEMONIC IN INTERNAL CHARACTERS    *
*                                                                     *
*   FLAGA           1 BYTE         FLAGS FOR MACHINE OPS AND          *
*                                  EXTENDED MNEMONICS, INSERTED       *
*                                  INTO JTFLGA IN THE EDITED TEXT     *
*                                  FOR USE BY ALL SUBSEQUENT PHASES   *
*                                                                     *
*                                  BIT 0                              *
*                                    0 = MACHINE OP                   *
*                                                                     *
*                                  BIT 1                              *
*                                    0 = ONE BYTE OP CODE             *
*                                    1 = EXTENDED MNEMONIC OR         *
*                                        TWO BYTE OP CODE             *
*                                                                     *
*                                  BIT 2                              *
*                                    1 = PRIVATE CODE INITIATED       *
*                                                                     *
*                                  BIT 3                              *
*                                    0                                *
*                                                                     *
*                                  BIT 4                              *
*                                    1 = STATEMENT MAY AFFECT         *
*                                        STORAGE ASSIGNMENT OR THE    *
*                                        ESD                          *
*                                                                     *
*                                  BIT 5                              *
*                                    1 = STATEMENT MAY CONTAIN        *
*                                        SYMBOL REFERENCES IN THE     *
*                                        OPERAND                      *
*                                                                     *
*                                  BITS 6-7                           *
*                                    00 = INSTRUCTION LENGTH 2 BYTES  *
*                                    01 = INSTRUCTION LENGTH 4 BYTES  *
*                                    10 = INSTRUCTION LENGTH 6 BYTES  *
*                                                                     *
*   FLAGA           1 BYTE         FLAGS FOR ASSEMBLER OPS, INSERTED  *
*                                  INTO JTFLGA IN THE EDITED TEXT     *
*                                  FOR USE BY ALL SUBSEQUENT PHASES   *
*                                                                     *
*                                  BIT 0                              *
*                                    1 = ASSEMBLER OP                 *
*                                                                     *
*                                  BIT 1                              *
*                                    1 = EXTRN, WXTRN, ENTRY          *
*                                        STATEMENT                    *
*                                                                     *
*                                  BIT 2                              *
*                                    1 = PRIVATE CODE INITIATED       *
*                                                                     *
*                                  BIT 3                              *
*                                    1 = PRIVATE CODE INITIATION      *
*                                        INHIBITED                    *
*                                                                     *
*                                  BIT 4                              *
*                                    1 = STATEMENT MAY AFFECT         *
*                                        STORAGE ASSIGNMENT OR THE    *
*                                        ESD                          *
*                                                                     *
*                                  BIT 5                              *
*                                    1 = STATEMENT MAY CONTAIN        *
*                                        SYMBOL REFERENCES IN THE     *
*                                        OPERAND                      *
*                                                                     *
*                                  BIT 6                              *
*                                    1 = OPERAND SCAN IS REQUIRED     *
*                                                                     *
*                                  BIT 7                              *
*                                    1 = DC, DS, DXD STATEMENT        *
*                                                                     *
*   INTERNAL OP     1-2 BYTES      VALUE INSERTED INTO JTIOP1 (AND,   *
*      CODE                        FOR TWO BYTE OP CODES, INTO        *
*                                  JTIOP2) IN EDITED TEXT RECORD FOR  *
*                                  USE BY ALL SUBSEQUENT PHASES       *
*                                                                     *
*                                  MACHINE OP - HEX VALUE OF MACHINE  *
*                                               INSTRUCTION           *
*                                                                     *
*                                  ASSEMBLER OP - HEX VALUE BASED ON  *
*                                                 JTEXT               *
*                                                                     *
*   MASK            1 BYTE         MASK FOR EXTENDED MNEMONICS        *
*                                  INSERTED INTO JTIOP2 IN THE        *
*                                  EDITED TEXT                        *
*                                                                     *
*                                  BITS 0-3                           *
*                                    MASK (0-F)                       *
*                                                                     *
*                                  BITS 4-7                           *
*                                    0                                *
*                                                                     *
         EJECT
         PRINT NOGEN    SUPPRESS PRINTING OF JCOMMON AND JTEXT
         COPY  JCOMMON                  GET INTERNAL CODES FOR LETTERS
         EJECT
         COPY  JTEXT                    GET INTERNAL OPCODES FOR ASMOPS
         EJECT
         PRINT GEN
         JCSECT (X&PHASE.K&ID)
*RELEASE 3.1 CHANGES
*A274100                                                        OX02977
         JMODID
         DC    CL2'&ID'
JOPTABLE EQU   *
         JENTRY (X&PHASE.K01=JOPTABLE)
         ORG   JOPTABLE+2*71
.********************************************************************.
.*                                                                   *.
.** END OF PRELIMINARIES - GENERATE THE OP CODE TABLE               **.
.*                                                                   *.
.*********************************************************************.
         AIF   ('&SET' NE 'UNIV').STEP0
RRB      OP    X'B213'
LRA      OP    X'B1'
PTLB     OP    X'B20D'
SCKC     OP    X'B206'
STCKC    OP    X'B207'
RDD      OP    X'85'
WRD      OP    X'84'
SIGP     OP    X'AE'
STAP     OP    X'B212'
SPX      OP    X'B210'
STPX     OP    X'B211'
.STEP0   ANOP
CLRIO    OP    X'9D01'
CS       OP    X'BA'
CDS      OP    X'BB'
SPKA     OP    X'B20A'
IPK      OP    X'B20B'
STIDP    OP    X'B202'
STIDC    OP    X'B203'
SCK      OP    X'B204'
STCK     OP    X'B205'
SPT      OP    X'B208'
STPT     OP    X'B209'
LCTL     OP    X'B7'
STCTL    OP    X'B6'
SSK      OP    X'08'
ISK      OP    X'09'
TCH      OP    X'9F'
HDV      OP    X'9E01'
HIO      OP    X'9E'
TIO      OP    X'9D'
SIOF     OP    X'9C01'
SIO      OP    X'9C'
STOSM    OP    X'AD'
STNSM    OP    X'AC'
SSM      OP    X'80'
LPSW     OP    X'82'
         AIF   (&PHASE EQ 3).STEP1
AGOB     OP    DEF=NO,REF=NO,INPC=NO
AIFB     OP    DEF=NO,REF=NO,INPC=NO
ICTL     OP    DEF=NO,REF=NO,INPC=NO
ISEQ     OP    DEF=NO,REF=NO,INPC=NO
REPRO    OP    REF=NO,INPC=NO
OPSYN    OP    DEF=NO,REF=NO,INPC=NO
ACTR     OP    DEF=NO,REF=NO,INPC=NO
.STEP1   ANOP
DXD      OP    REQOP=YES,INPC=NO
CXD      OP    REF=NO
COM      OP    REF=NO,INHB=YES,INPC=NO
WXTRN    OP    DEF=NO,INPC=NO
PUSH     OP    DEF=NO,REF=NO,INPC=NO
POP      OP    DEF=NO,REF=NO,INPC=NO
         AIF   ('&SET' EQ 'STD' OR '&SET' EQ 'COMM').STEP2
MXD      OP    X'67'
MXDR     OP    X'27'
MXR      OP    X'26'
SXR      OP    X'37'
AXR      OP    X'36'
LRDR     OP    X'25'
LRER     OP    X'35'
SWR      OP    X'2F'
SW       OP    X'6F'
SUR      OP    X'3F'
SU       OP    X'7F'
AWR      OP    X'2E'
AW       OP    X'6E'
AUR      OP    X'3E'
AU       OP    X'7E'
DDR      OP    X'2D'
DD       OP    X'6D'
DER      OP    X'3D'
DE       OP    X'7D'
HDR      OP    X'24'
HER      OP    X'34'
MDR      OP    X'2C'
MD       OP    X'6C'
MER      OP    X'3C'
ME       OP    X'7C'
CDR      OP    X'29'
CD       OP    X'69'
CER      OP    X'39'
CE       OP    X'79'
STD      OP    X'60'
STE      OP    X'70'
SDR      OP    X'2B'
SD       OP    X'6B'
SER      OP    X'3B'
SE       OP    X'7B'
ADR      OP    X'2A'
AD       OP    X'6A'
AER      OP    X'3A'
AE       OP    X'7A'
LTDR     OP    X'22'
LTER     OP    X'32'
LCDR     OP    X'23'
LCER     OP    X'33'
LDR      OP    X'28'
LD       OP    X'68'
LNDR     OP    X'21'
LNER     OP    X'31'
LPDR     OP    X'20'
LPER     OP    X'30'
LER      OP    X'38'
LE       OP    X'78'
.STEP2   AIF   ('&SET' EQ 'STD' OR '&SET' EQ 'SCNTF').STEP3
DP       OP    X'FD'
MP       OP    X'FC'
EDMK     OP    X'DF'
ED       OP    X'DE'
SRP      OP    X'F0'
CP       OP    X'F9'
SP       OP    X'FB'
AP       OP    X'FA'
ZAP      OP    X'F8'
.STEP3   ANOP
MC       OP    X'AF'
CLCL     OP    X'0F'
MVCL     OP    X'0E'
LCR      OP    X'13'
CLM      OP    X'BD'
STCM     OP    X'BE'
ICM      OP    X'BF'
         AIF   (&PHASE EQ 3).STEP4
GBLC     OP    DEF=NO,REF=NO,INPC=NO
GBLA     OP    DEF=NO,REF=NO,INPC=NO
LCLC     OP    DEF=NO,REF=NO,INPC=NO
MNOTE    OP    DEF=NO,REF=NO,INPC=NO
SETC     OP    DEF=NO,REF=NO,INPC=NO
AGO      OP    DEF=NO,REF=NO,INPC=NO
.STEP4   ANOP
SPM      OP    X'04'
ALR      OP    X'1E'
AL       OP    X'5E'
NR       OP    X'14'
N        OP    X'54'
NC       OP    X'D4'
BCR      OP    X'07'
BXH      OP    X'86'
BXLE     OP    X'87'
CLR      OP    X'15'
CL       OP    X'55'
DR       OP    X'1D'
D        OP    X'5D'
XR       OP    X'17'
X        OP    X'57'
XI       OP    X'97'
BNER     OP    X'077'
LNR      OP    X'11'
LPR      OP    X'10'
MVN      OP    X'D1'
MVO      OP    X'F1'
MVZ      OP    X'D3'
MR       OP    X'1C'
M        OP    X'5C'
MH       OP    X'4C'
OR       OP    X'16'
O        OP    X'56'
SLDA     OP    X'8F'
SLA      OP    X'8B'
SLDL     OP    X'8D'
SLL      OP    X'89'
SRDA     OP    X'8E'
SRA      OP    X'8A'
SRDL     OP    X'8C'
SRL      OP    X'88'
SLR      OP    X'1F'
SL       OP    X'5F'
TS       OP    X'93'
TRT      OP    X'DD'
CCW      OP
PUNCH    OP    REF=NO,INPC=NO
LTORG    OP    REF=NO
         AIF   (&PHASE EQ 3).STEP5
ANOP     OP    DEF=NO,REF=NO,INPC=NO
GBLB     OP    DEF=NO,REF=NO,INPC=NO
COPY     OP    DEF=NO,REF=NO,INPC=NO
.STEP5   ANOP
ORG      OP    REQOP=YES
PRINT    OP    DEF=NO,REF=NO,INPC=NO
SPACE    OP    DEF=NO,REF=NO,INPC=NO
EJECT    OP    DEF=NO,REF=NO,INPC=NO
BHR      OP    X'072'
BLR      OP    X'074'
BER      OP    X'078'
BNHR     OP    X'07D'
BNLR     OP    X'07B'
BNOR     OP    X'07E'
BOR      OP    X'071'
BPR      OP    X'072'
BMR      OP    X'074'
BZR      OP    X'078'
BNPR     OP    X'07D'
BNMR     OP    X'07B'
BNZR     OP    X'077'
TR       OP    X'DC'
OC       OP    X'D6'
CH       OP    X'49'
EX       OP    X'44'
LTR      OP    X'12'
XC       OP    X'D7'
CVB      OP    X'4F'
CVD      OP    X'4E'
C        OP    X'59'
CR       OP    X'19'
BCT      OP    X'46'
SH       OP    X'4B'
STH      OP    X'40'
AH       OP    X'4A'
DROP     OP    DEF=NO,INPC=NO
ENTRY    OP    DEF=NO,INPC=NO
EXTRN    OP    DEF=NO,INPC=NO
EQU      OP    REQOP=YES
DSECT    OP    REF=NO,INHB=YES,INPC=NO
CNOP     OP    REQOP=YES
TITLE    OP    DEF=NO,REF=NO,INPC=NO
START    OP    INHB=YES,REQOP=YES,INPC=NO
END      OP    INPC=NO
STC      OP    X'42'
IC       OP    X'43'
NI       OP    X'94'
OI       OP    X'96'
USING    OP
NOP      OP    X'470'
NOPR     OP    X'070'
BNP      OP    X'47D'
BP       OP    X'472'
BNM      OP    X'47B'
BM       OP    X'474'
BNO      OP    X'47E'
BO       OP    X'471'
BNL      OP    X'47B'
BNH      OP    X'47D'
BL       OP    X'474'
BH       OP    X'472'
BNZ      OP    X'477'
BZ       OP    X'478'
AR       OP    X'1A'
TM       OP    X'91'
SVC      OP    X'0A'
SR       OP    X'1B'
STM      OP    X'90'
ST       OP    X'50'
UNPK     OP    X'F3'
PACK     OP    X'F2'
LM       OP    X'98'
LH       OP    X'48'
MVI      OP    X'92'
BAL      OP    X'45'
BALR     OP    X'05'
BCTR     OP    X'06'
A        OP    X'5A'
S        OP    X'5B'
LR       OP    X'18'
BR       OP    X'07F'
BC       OP    X'47'
CSECT    OP    REF=NO,INHB=YES,INPC=NO
         AIF   (&PHASE EQ 3).STEP6
SETB     OP    DEF=NO,REF=NO,INPC=NO
SETA     OP    DEF=NO,REF=NO,INPC=NO
LCLB     OP    DEF=NO,REF=NO,INPC=NO
LCLA     OP    DEF=NO,REF=NO,INPC=NO
MEND     OP    DEF=NO,REF=NO,INPC=NO
MEXIT    OP    DEF=NO,REF=NO,INPC=NO
MACRO    OP    DEF=NO,REF=NO,INPC=NO
AIF      OP    DEF=NO,REF=NO,INPC=NO
.STEP6   ANOP
CLI      OP    X'95'
CLC      OP    X'D5'
L        OP    X'58'
BNE      OP    X'477'
BE       OP    X'478'
B        OP    X'47F'
LA       OP    X'41'
MVC      OP    X'D2'
DS       OP    REQOP=YES
DC       OP    REQOP=YES
         DC    CL1'0'                   DUMMY                   OX02977
.*********************************************************************.
.*                                                                   *.
.** END OF OP CODE TABLE GENERATION - GENERATE HASH TABLE           **.
.*                                                                   *.
.*********************************************************************.
         EJECT
         ORG   JOPTABLE                 PUT HASH TABLE BEFORE ENTRIES
         SPACE 2
&COUNT   SETA  0                        INITIALIZE LOOP COUNTER
&INDEX   SETA  0
.LOOP    ANOP
&COUNT   SETA  &COUNT+1
         MNOTE '* CHAIN &COUNT : &SEARCH(&COUNT)'    WRITE CHAIN
&STRING  SETC  '&TABLE(&COUNT)'         EXTRACT NAME OF LAST ENTRY
&COMMENT SETC  (12-K'&STRING)' '.'POINTER TO FIRST ENTRY OF &CHAIN(&COU*
               NT)'                     SET VARIABLE COMMENT
         DC    AL2(&STRING-JOPTABLE)&COMMENT
&INDEX   SETA  &INDEX+&CHAIN(&COUNT)    ACCUMULATE NO OF ENTRIES
         AIF   (&COUNT LT 71).LOOP      GO IF NOT EXHAUSTED
         SPACE 2
         MNOTE '** THE OPCODE TABLE CONTAINS A TOTAL OF &INDEX ENTRIES'
         SPACE 2
         MEND
