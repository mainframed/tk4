         MACRO
&LABEL   IGGIFF02 &DEB,&REG,&DEBD,&UCBD,&LANG
         EJECT
* STATUS -- CHANGE LEVEL 0
*
* FUNCTION -- GAM FORCE CLOSE MACRO
*     PURPOSE IS TO CLEAN UP IF A CLOSE FOR A GRAPHIC DEVICE
*     FAILS SO THAT THE DEVICE CAN BE USED AGAIN
*     1) NOP IF DEB IS NOT A GAM DEB
*     2) IF A GAM DEB
*        A. CLEAN UP THE UCBS FOR THE DEB (ZEROS THE
*        USE COUNT BYTE, GRAPHIC CONTROL BYTE, AND TASK ENTRY
*        BLOCK POINTER)
*        B. FREE THE TASK ENTRY BLOCK (TEB)
*
* ENTRY POINT -- NONE - GENERATED AS INLINE CODE
*
* INPUT
*     EXECUTION
*     1) DEB POINTER
*
*     MACRO OPERANDS (POSITIONAL)
*     1) SYMBOL OR NUMBER OF A REGISTER CONTAINING THE DEB
*        POINTER (2-13)
*     2) SYMBOL OR NUMBER OF A REGISTER THAT CAN BE USED BY
*        THE MACRO AS A WORK REGISTER (2-13)
*     3) Y OR N (N IS THE DEFAULT)
*        Y, THE CALLER'S CODE CONTAINS THE DEB DSECT
*        N, MACRO WILL GENERATE THE DEB DSECT
*     4) Y OR N (N IS THE DEFAULT)
*        Y, THE CALLER'S CODE CONTAINS THE UCB DSECT
*        N, MACRO WILL GENERATE THE UCB DSECT
*     5) PLS OR BAL (BAL IS THE DEFAULT)
*        PLS, THE CALLER IS CODED IN PLS
*        BAL, THE CALLER IS CODED IN BAL
*
* OUTPUT
*     1) CLEANED UP UCB
*     2) TEB FREED
*     3) DEB POINTER IN INPUT REG
*     4) CONTENTS OF REGS 0,1,14,15, WORK REG DESTROYED
*
* EXTERNAL REFERENCES -- FREEMAIN
*
* EXITS -- FALL OUT OF INLINE CODE
*
* TABLES/WORK AREAS -- DEB(READ-ONLY), UCB
*
* ATTRIBUTES -- REFRESHABLE
*
* NOTES
.*    -) THE METHOD OF ADDRESSING THE DEB AND UCB CONTROL
.*       BLOCKS WAS CHOSEN TO ENABLE GENERATION OF THE SAME
.*       CODE IN A BAL, PLS/1, OR PLS/2 PROGRAM, AS MUCH
.*       AS POSSIBLE
*     1) IF ANY DSECT IS GENERATED BY THIS MACRO, THE CALLER
*        MUST REESTABLISH HIS CSECT AFTER THE MACRO
         SPACE 3
* REGISTER EQUATES
IGGR0    EQU   0 -                 REGISTER 0
IGGR1    EQU   1 -                 REGISTER 1
IGGUCB   EQU   1 -                 UCB POINTER
IGGR14   EQU   14 -                REGISTER 14
IGGDEBAP EQU   14 -                DEB APPENDAGE POINTER
IGGDEBIN EQU   14 -                DEB INDEX
IGGTEBUC EQU   14 -                TEB USE COUNT
IGGR15   EQU   15 -                REGISTER 15
IGGTEB   EQU   15 -                TEB POINTER
         SPACE 2
.TSTGDEB ANOP
* IF THE DEB IS NOT A GRAPHIC DEB, CONTROL IS RETURNED TO THE
* CALLER
&LABEL   L     IGGDEBAP,DEBAPPAD-DEBBASIC(&DEB)  GET ADDRESS OF
*                                       DEB APPENDAGE VECTOR
*                                       TABLE
         CLI   DEBAMTYP-DEBAVT(IGGDEBAP),IGGGAM  Q. GAM
         BNE   IGGOUT -            NO, RETURN TO CALLER
         SPACE 3
* CLEAN UP ALL UCB'S ASSOCIATED WITH THE DEB
* FREE UP ANY TEB'S NO LONGER IN USE
         SR    &REG,&REG -         CLEAR REG
         IC    &REG,DEBNMEXT-DEBBASIC(&DEB) GET THE NUMBER OF
*                                       UCB(S) ASSOCIATED WITH
*                                       THE DEB
         SPACE
IGGNXUCB EQU   *                   LOOP THROUGH UCB'S
* THE ADDRESSES OF THE UCB'S TO BE RESET ARE PICKED UP FROM THE
* EXTENTS IN THE GAM DEPENDENT SECTION OF THE DEB
* (THE LOOP STARTS WITH THE LAST EXTENT AND WORKS BACK)
         LR    IGGDEBIN,&REG -     ESTABLISH ADDRESS OF A UCB
         BCTR  IGGDEBIN,IGG0 -          TO BE RESET FROM THE
         SLL   IGGDEBIN,IGGEXSCL -      NEXT EXTENT IN THE
         L     IGGUCB,DEBBASND-DEBBASIC(IGGDEBIN,&DEB)  DEB
         AIF   ('&LANG' EQ 'BAL' OR T'&LANG EQ 'O').BALCODE  IF
.*                                      &LANG IS OMITTED OR BAL
.*                                      GENERATE CODE FOR BAL
         AIF   ('&LANG' NE 'PLS').ERRLANG  IF &LANG IS NOT PLS
.*                                      GENERATE ERROR MSG
.PLSCODE ANOP
         L     IGGTEB,UCBTEB-UCBOBS04+UCBDEV(IGGUCB)  GET TEB ADDRESS
         XC    UCBOPEN-UCBOBS04+UCBDEV(IGG6,IGGUCB),UCBOPEN-UCBOBS04+UC*
               BDEV(IGGUCB) -      CLEAR UCBOPEN, UCBGCB, AND          *
                                        UCBTEB FIELDS
         AGO   .CONT
.BALCODE ANOP
         L     IGGTEB,UCBTEB-UCBOB(IGGUCB)  GET TEB ADDRESS
         XC    UCBOPEN-UCBOB(IGG6,IGGUCB),UCBOPEN-UCBOB(IGGUCB)
*                                       CLEAR UCBOPEN,UCBGCB,
*                                       AND UCBTEB FIELDS
.CONT    ANOP
         LTR   IGGTEB,IGGTEB -     Q. DOES TEB EXIST
         BZ    IGGENDLP -          NO TEB, BRANCH OVER
*                                       FREEMAIN
         L     IGGTEBUC,IGGUSECT(IGGTEB)  GET TEB USE COUNT
         BCTR  IGGTEBUC,IGG0 -     DECREMENT TEB USE COUNT
         LTR   IGGTEBUC,IGGTEBUC - Q. IS USE COUNT ZERO
         BNZ   IGGENDLP -          NO, BRANCH OVER FREEMAIN
IGGFRTEB EQU   *                   ISSUE FREEMAIN FOR TEB
         LR    IGGR1,IGGTEB -      LOAD TEB ADDRESS
         L     IGGR0,IGGTEBLN -    LOAD LENGTH AND SP
         FREEMAIN R,LV=(0),A=(1) - FREE TEB CORE
IGGENDLP EQU   *
         BCT   &REG,IGGNXUCB -     LOOP THROUGH UCBS
         B     IGGOUT -            EXIT
         SPACE 3
* CONSTANTS
         DS    0F
IGGTEBLN DC    AL1(235) -          TEB SUBPOOL
         DC    AL3(32) -           TEB LENGTH
IGG0     EQU   0 -                 ZERO
IGG6     EQU   6 -                 LENGTH OF UCBOPEN+UCBGCB+UCBTEB
IGGGAM   EQU   X'08' -             ACCESS METHOD CODE FOR GAM
IGGEXSCL EQU   X'02' -             EXTENT SCALE VALUE FOR
*                                       GRAPHIC DEB'S
IGGUSECT EQU   16 -                OFFSET OF TEB USE COUNT
         SPACE 2
* EXIT
IGGOUT EQU *
         AIF   (T'&DEBD EQ 'O').DEBD  IF &DEBD IS OMITTED OR N
.*                                      GENERATE DEB DSECT
         AIF   ('&DEBD' EQ 'Y').TSTUCBD  IF &DEBD = Y, DEB DSECT
.*                                      IS IN CALLER
         AIF   ('&DEBD' NE 'N').ERRDEBD  ANYTHING OTHER THAN Y
.*                                      OR N IS AN ERROR
.DEBD    ANOP
         EJECT
IGGDEBD  IEZDEB
.TSTUCBD ANOP
         AIF   (T'&UCBD EQ 'O').UCBD  IF &UCBD IS OMITTED OR N
.*                                      GENERATE UCB DSECT
         AIF   ('&UCBD' EQ 'Y').OUT  IF &UCBD = Y, UCB DSECT
.*                                      IS IN CALLER
         AIF   ('&UCBD' NE 'N').ERRUCBD  ANYTHING OTHER THAN Y
.*                                      OR N IS AN ERROR
.UCBD    ANOP
         EJECT
IGGUCBD  DSECT
         IEFUCBOB
         AGO   .OUT
.* ERROR MESSAGES
.ERRLANG ANOP
         SPACE 3
         MNOTE 1,'INVALID LANGUAGE OPERAND'
         SPACE 3
         AGO   .BALCODE
.ERRDEBD ANOP
         SPACE 3
         MNOTE 1,'INVALID DEB DSECT OPERAND'
         AGO   .TSTUCBD
.ERRUCBD ANOP
         SPACE 3
         MNOTE 1,'INVALID UCB DSECT OPERAND'
.OUT     ANOP
         EJECT
         MEND
