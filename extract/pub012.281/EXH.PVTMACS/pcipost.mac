         MACRO
&NAME    PCIPOST &ECB=,&SVAREA=,&RQE=,&CODE=
*
*        THIS MACRO MAY BE USED TO POST FROM PCI APPENDAGES.
*        IF THE I/O REQUEST IS A VIRTUAL REQUEST, THE NORMAL
*        BRANCH INTERFACE TO POST IS EFFECTED. IF THE I/O REQUEST
*        IS NOT A VIRTUAL REQUEST, THE CROSS MEMORY INTERFACE
*        TO POST IS EFFECTED.
*
*         PARAMETERS -
*              &ECB=LABEL OR (REG)  ADDRESS OF ECB
*
*              &SVAREA=LABEL OR (REG) ADDRESS OF 16 WORD SAVE AREA
*
*              &RQE=LABEL OR (REG)  ADDRESS OF RQE
*
*              &CODE=LABEL OR (REG) ADDRESS OF FULLWORD COMPLETION
*                                   CODE OR REGISTER CONTAINING THE
*                                   COMPLETION CODE. THE CODE MUST
*                                   BE LEFT JUSTIFIED WITHIN THE
*                                   WORD OR REGISTER.
*
*         IF &CODE IS OMITTED, THE COMPLETION CODE IN THE IOB
*         IS USED.  ALL OTHER PARAMETERS MUST BE SPECIFIED.
*
*        BASE ADDRESSABILITY OF THE CALLING MODULE IS ASSUMED.
*        REGISTER 9,10,11,12,13, OR 14 MUST NOT BE USED AS THE
*        MODULES BASE REGISTER  ACROSS THIS EXPANSION.
*        REGISTERS 1,9,10,11,12,13 ARE  USED. ALL REGS ARE RESTORED
*
*        MAPPING MACROS REQUIRED -
*              CVT,
*              IHASRB,
*              IHAASVT,
*              IECDRQE,
*              IECDIOSB
*
         AIF   (T'&ECB EQ 'O').NOECB
         AIF   (T'&SVAREA EQ 'O').NOSVARA
         AIF   (T'&RQE EQ 'O').NORQE
         AIF   ('&SVAREA'(1,1) EQ '(').RGST
&NAME    STM   0,15,&SVAREA        SAVE REGISTERS               @YM3186
         LA    9,&SVAREA           SAVE THE SAVE AREA ADDR IN R 9
         AGO   .GEN1
.RGST    ANOP
&NAME    STM   0,15,0&SVAREA       SAVE REGISTERS               @YM3186
         LR    9,&SVAREA(1)        SAVE THE SAVE AREA ADDR IN R 9
.GEN1    LA    14,Z&SYSNDX         POINT TO ZEROS
         AIF   ('&RQE'(1,1) EQ '(').RGRQE
         L     1,&RQE              LOAD POINTER TO RQE
         AGO   .GEN2
.RGRQE   AIF   ('&RQE(1)' EQ '1').GEN2
         L     1,4*&RQE(1).(,9)     LOAD POINTER TO RQE         @YM3186
.GEN2    TM    RQETYPE-RQE(1),X'50' VIRTUAL REQUEST
         BNZ   P&SYSNDX            YES, USE PRESENT MEMORY POST
         LA    14,F&SYSNDX         POINT TO X'80'
         L     13,RQESRB-RQE(1)    LOAD POINTER TO ASSOCIATED SRB
         L     13,SRBPARM-SRB(13)  LOAD POINTER TO IOSB         @YM3186
         LH    13,IOSASID-IOSB(13) LOAD THE ASID FROM THE IOSB  @YM3186
         L     12,CVTPTR           CVT ADDRESS                  @YM3186
         L     12,CVTASVT-CVT(,12) ADRESS SPACE VECTOR TABLE    @YM3186
         SLL   13,2                MULTIPLY ASID BY 4 TO FIND   @YM3186
*                                  * OFFSET IN ASVT FOR THIS ASID
         L     13,ASVTFRST-ASVT(13,12) GET ASCB ADDRESS         @YM3186
         L     12,E&SYSNDX         POINT TO DUMMY ERROR RECOVERY
         IC    0,RQEPRT-RQE(1)     SET REQUESTORS KEY IN 0.    @ZA15372
P&SYSNDX DS    0H
         AIF   ('&ECB'(1,1) EQ '(').RGECB
         L     11,&ECB             LOAD POINTER TO ECB           YM1085
         AGO   .GEN3
.RGECB   AIF   ('&ECB(1)' EQ '11').GEN3                          YM1085
         L     11,4*&ECB(1).(,9)   PLACE POINTER TO ECB IN REG  @YM3186
.GEN3    ICM   11,8,0(14)          SET THE HIGH BYTE             YM1085
         AIF   (T'&CODE EQ 'O').IOBCOD
         AIF   ('&CODE'(1,1) EQ '(').RGCODE
         L     10,&CODE            LOAD THE ECB COMPLETION CODE  YM1085
         AGO   .GEN4
.RGCODE  AIF   ('&CODE(1)' EQ '10').GEN4                         YM1085
         L     10,4*&CODE(1).(,9)  LOAD THE ECB COMPLETION CODE @YM3186
         AGO   .GEN4
.IOBCOD  L     10,RQEIOB-RQE(1)    LOAD IOB ADDRESS              YM1085
         IC    10,4(10)            LOAD THE ECB COMPLETION CODE  YM1085
         SLL   10,24(0)            SHIFT IT TO THE HIGH BYTE    YM2296P
.GEN4    TM    RQETYPE-RQE(1),X'50'  VIRTUAL REQUEST ?         @ZA15372
         BNZ   Q&SYSNDX              YES, BYPASS               @ZA15372
         O     10,F&SYSNDX           NO, SET TO VAL CK ECB     @ZA15372
Q&SYSNDX EQU   *                                               @ZA15372
         L     15,CVTPTR(0,0)      LOAD POINTER TO CVT         @ZA15372
         L     15,CVT0PT01-CVT(,15) LOAD POINTER TO POST ROUTINEYM2296P
         BALR  14,15               POST THE ECB COMPLETE
         LM    0,15,0(9)           RESTORE REGISTERS            @YM3186
         B     S&SYSNDX            SKIP ERROR ROUTINE
         SPACE 2
G&SYSNDX BR    14                  ERROR ROUTINE FOR XMPOST      YM1085
E&SYSNDX DS    0F                  WORD BOUNDARY ALIGNMENT     @ZA29188
         DC    X'80'               RECOVERY IN MASTER MEMORY   @ZA29188
         DC    AL3(G&SYSNDX)       ERROR ROUTINE ADDRESS       @ZA29188
F&SYSNDX DC    X'80000000'         CONSTANT                    @ZA15372
Z&SYSNDX DC    X'00'               ZEROS FOR HIGH BYTE
S&SYSNDX DS    0H                  RETURN TO PCI APPENDAGE      @YM3186
         MEXIT
.NOECB   MNOTE 8,'ECB OPERAND MUST BE SPECIFIED'
         MEXIT
.NOSVARA MNOTE 8,'SVAREA OPERAND MUST BE SPECIFIED'
         MEXIT
.NORQE   MNOTE 8,'RQE OPERAND MUST BE SPECIFIED'
         MEND
