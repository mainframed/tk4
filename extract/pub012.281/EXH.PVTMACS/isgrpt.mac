*%GOTO RPTPLS1;                                                      /*
         MACRO
         ISGRPT
**/
*%RPTPLS1:;
*/*  START OF SPECIFICATIONS ****
*
*01*  MACRO-NAME = ISGRPT
*
*01*  MACRO-DATE = 05/05/81
*
*01*  DESCRIPTIVE-NAME = RESOURCE POOL TABLE
*
*01*  COPYRIGHT =
*                5740-XYN COPYRIGHT IBM CORP 1980,1981,
*                LICENSED MATERIAL-PROGRAM, PROPERTY OF IBM,
*                REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083.
*
*01*  STATUS = OS/VS2 JBB1326
*
*01*  FUNCTION = THERE ARE TWO RESOURCE POOL TABLES - ONE FOR GLOBAL
*                RESOURCES AND ONE FOR LOCAL RESOURCES. EACH RESOURCE
*                POOL TABLE CONTAINS AN ENTRY FOR EACH CELL TYPE
*                ALLOWED.  THERE ARE ADDITIONAL ENTRIES FOR CELL
*                TYPES WITH MULTIPLE SIZES. EACH RESOURCE POOL TABLE
*                ENTRY POINTS TO THE FIRST AND LAST POOL EXTENT
*                BLOCK FOR THAT POOL.
*
*                THE FIRST SIXTEEN BYTES OF AN RPT ENTRY CORRESPOND
*                TO THE FIRST SIXTEEN BYTES OF A PEXB, SINCE AN RPT
*                ENTRY IS USED AS AN EMPTY PEXB.
*
*01*  METHOD-OF-ACCESS = PLS - DECLARE RPTPTR PTR(31)
*                              %INCLUDE SYSLIB(ISGRPT)
*                        BAL - TWO DSECTS ARE PRODUCED REQUIRING
*                              A USING ON THE RPT AND RPTENT
*
*01*  CREATED-BY = THE RESOURCE POOL TABLES ARE CREATED BY ISGNCBIM
*                  IN SQA AND BY ISGNASIM IN THE GRS ADDRESS SPACE.
*
*02*    SUBPOOL = 229
*
*02*    KEY     = 0
*
*02*    SIZE    = GLOBAL RESOURCE POOL TABLE - 288 BYTES
*                 LOCAL  RESOURCE POOL TABLE - 260 BYTES
*
*01*  DELETED-BY = THE RESOURCE POOL TABLES ARE NEVER DELETED.
*
*01*  POINTED-TO-BY = THE GLOBAL RESOURCE POOL TABLE IS POINTED
*                     TO BY GVTXGRPT. THE LOCAL RESOURCE POOL TABLE
*                     IS POINTED TO BY GVTXLRPT.
*
*01*  SERIALIZATION = LOCAL  RESOURCE POOL TABLE - CMS ENQ/DEQ
*                                                  CLASS LOCK
*                     GLOBAL RESOURCE POOL TABLE - GRS LOCAL LOCK
*                     (EXCEPT RPT ENTRY FOR QWBS
*                      WHICH IS SERIALIZED BY
*                      THE CMS ENQ/DEQ CLASS
*                      LOCK.)
*
*01*  CHANGE-ACTIVITY =
*                SUPPORTS PTMS:
*                     PBB0388                               @ZMB0388
*                     PBB0638                               @ZMB0638
*
**** END OF SPECIFICATIONS **                                        */
*/*A000000-999999                                            @G383P13*/
*        %GOTO RPTPLS2;                                              /*
RPT      DSECT                RESOURCE POOL TABLE
RPTHDR   DS    1D             RESOURCE POOL TABLE HEADER
         ORG   RPTHDR
RPTID    DS    CL4            CONTROL BLOCK ACRONYMN
*                             (GLOBAL - GRPT, LOCAL - LRPT)
         DS    CL1            RESERVED
RPTNENT  DS    XL1            NUMBER OF ENTRIES IN THIS RPT
         DS    CL2            RESERVED
         SPACE 3
RPTENT   DSECT                RESOURCE POOL TABLE ENTRY
RPTECOMM DS    4F             THIS STRUCTURE CORRESPONDS TO THE FIRST
*                             SIXTEEN BYTES OF A PEXB, SO THE RPT
*                             CAN BE USED AS A DUMMY PEXB WHEN THE
*                             POOL IS EMPTY
         ORG   RPTECOMM                                       @ZMB0638
RPTETYPE DS    CL4            CONTROL BLOCK ACRONYMN FOR THE CELLS
*                             CONTAINED IN THIS POOL
RPTEFPXB DS    A              ADDRESS OF THE FIRST POOL EXTENT BLOCK
*                             IN THIS POOL
RPTELPXB DS    A              ADDRESS OF THE LAST POOL EXTENT BLOCK IN
*                             THIS POOL
RPTEAVAL DS    H              NUMBER OF CELLS AVAILABLE IN THIS POOL
*                             EXTENT BLOCK (THIS FIELD MUST BE ZERO SO
*                             THAT THIS RPT ENTRY APPEARS TO BE AN
*                             EMPTY POOL EXTENT BLOCK)
RPTETOTL DS    H              TOTAL NUMBER OF CELLS IN THIS POOL EXTENT
*                             BLOCK (THIS FIELD MUST BE ZERO SO THAT
*                             THIS RPT ENTRY APPEARS TO BE AN EMPTY
*                             POOL EXTENT BLOCK)
         DS    CL2            RESERVED
RPTESIZE DS    H              SIZE OF CELL CONTAINED WITHIN THIS POOL
RPTEPTOT DS    F              TOTAL NUMBER OF CELLS IN THE ENTIRE
*                             POOL - USED BY THE DUMPING ROUTINES
RPTEIAPQ DS    A              INACTIVE PEXB QUEUE CONSISTING OF PEXBS
*                             CURRENTLY INACTIVE - THESE PEXBS ARE
*                             QUEUED BY ISGSDAL AND DEQUEUED BY
*                             ISGSALC OR ISGSPRLS
         MEND
**/
*%RPTPLS2:;
*DECLARE
*  1 RPT BASED(RPTPTR) BDY(DWORD),   /* RESOURCE POOL TABLE          */
*    3 RPTHDR CHAR(8) BDY(DWORD),    /* RESOURCE POOL TABLE HEADER   */
*      5 RPTID CHAR(4),              /* CONTROL BLOCK ACRONYM
*                                       (GLOBAL-GRPT,LOCAL-LRPT)     */
*      5 *     CHAR(1),              /* RESERVED                     */
*      5 RPTNENT FIXED(8),           /* NUMBER OF ENTRIES IN THIS RPT*/
*      5 * CHAR(2),                  /* RESERVED                     */
*    3 RPTENT(*) CHAR(28) BDY(WORD), /* RESOURCE POOL TABLE ENTRY    */
*      5 RPTECOMM CHAR(16)BDY(WORD), /* THIS STRUCTURE CORRESPONDS TO
*                                       THE FIRST SIXTEEN BYTES OF A
*                                       PEXB, SO THE RPT CAN BE USED
*                                       AS A DUMMY PEXB WHEN THE POOL
*                                       IS EMPTY             @ZMB0388*/
*        7 RPTETYPE CHAR(4),         /* CONTROL BLOCK ACRONYM FOR THE
*                                       CELLS CONTAINED IN THIS POOL */
*        7 RPTEFPXB PTR(31),         /* ADDRESS OF THE FIRST POOL
*                                       EXTENT BLOCK IN THIS POOL    */
*        7 RPTELPXB PTR(31),         /* ADDRESS OF THE LAST POOL
*                                       EXTENT BLOCK IN THIS POOL    */
*        7 RPTEAVAL FIXED(15),       /* NUMBER OF CELLS AVAILABLE IN
*                                       THIS POOL EXTENT BLOCK (THIS
*                                       FIELD MUST BE ZERO SO THAT
*                                       THIS RPT ENTRY APPEARS TO BE
*                                       AN EMPTY POOL EXTENT BLOCK)  */
*        7 RPTETOTL FIXED(15),       /* TOTAL NUMBER OF CELLS IN
*                                       THIS POOL EXTENT BLOCK (THIS
*                                       FIELD MUST BE ZERO SO THAT
*                                       THIS RPT ENTRY APPEARS TO BE
*                                       AN EMPTY POOL EXTENT BLOCK)  */
*      5 * CHAR(2),                  /* RESERVED                     */
*      5 RPTESIZE FIXED(15),         /* SIZE OF CELL CONTAINED
*                                       WITHIN THIS POOL             */
*      5 RPTEPTOT FIXED(31),         /* TOTAL NUMBER OF CELLS IN THE
*                                       ENTIRE POOL - USED BY THE
*                                       DUMPING ROUTINES             */
*      5 RPTEIAPQ PTR(31);           /* INACTIVE PEXB QUEUE
*                                       CONSISTING OF PEXBS CURRENTLY
*                                       INACTIVE - THESE PEXBS ARE
*                                       QUEUED BY ISGSDAL AND
*                                       DEQUEUED BY ISGSALC OR
*                                       ISGSPRLS                     */
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*   THE FOLLOWING CONSTANTS ARE TO BE USED ONLY BY GRS             */
*/*   INITIALIZATION AND STORAGE MANAGEMENT MODULES.                 */
*/*                                                                  */
*/********************************************************************/
*DECLARE
*  RPTINENT FIXED(16) CONSTANT(6),   /* NUMBER OF ENTRIES IN THE
*                                       LOCAL/GLOBAL RESOURCE
*                                       POOL TABLE WHILE IN SQA      */
*  RPTGNENT FIXED(16) CONSTANT(10),  /* NUMBER OF ENTRIES IN THE
*                                       GLOBAL RESOURCE POOL TABLE
*                                       WHILE IN THE GRS A.S.        */
*  RPTLNENT FIXED(16) CONSTANT(9),   /* NUMBER OF ENTRIES IN THE
*                                       LOCAL RESOURCE POOL TABLE
*                                       WHILE IN GRS A.S.            */
*  RPTIACNT FIXED(8)  CONSTANT((RPTLNENT+RPTGNENT)/3); /* THE
*                                       NUMBER OF INACTIVE PEXB PAGES
*                                       THAT WILL BE KEPT. WHEN THIS
*                                       NUMBER IS REACHED THE PAGES
*                                       WILL BE PAGE RELEASED        */
*@SPACE(3);
*/********************************************************************/
*/*                                                                  */
*/*   THE FOLLOWING CONSTANTS ARE SIZES FOR EACH TYPE OF             */
*/*   WORKAREA THAT GRS STORAGE MANAGER PROCESSES.                   */
*/*                                                                  */
*/********************************************************************/
*DECLARE
*  RPTTWKAS FIXED(16) CONSTANT(248),  /* SIZE OF A TINY WORK AREA    */
*  RPTHWKAS FIXED(16) CONSTANT(4000); /* SIZE OF A HUGE WORK AREA    */
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*   THE FOLLOWING CONSTANTS ARE THE RPT INDEX NUMBERS FOR          */
*/*   EACH TYPE OF CONTROL BLOCK THAT THE GRS STORAGE MANAGER        */
*/*   PROCESSES.                                                     */
*/*                                                                  */
*/********************************************************************/
*DECLARE
*  RPTQCB1I FIXED(8) CONSTANT(1),    /* INDEX FOR QCB WITH
*                                       24 BYTE RNAME                */
*  RPTQCB2I FIXED(8) CONSTANT(2),    /* INDEX FOR QCB WITH
*                                       44 BYTE RNAME                */
*  RPTQCB3I FIXED(8) CONSTANT(3),    /* INDEX FOR QCB WITH
*                                       256 BYTE RNAME               */
*  RPTQELI  FIXED(8) CONSTANT(4),    /* INDEX FOR QEL                */
*  RPTQXBI  FIXED(8) CONSTANT(5),    /* INDEX FOR QXB                */
*  RPTQWBI  FIXED(8) CONSTANT(6),    /* INDEX FOR QWB (GLOBAL ONLY)  */
*  RPTHWKAI FIXED(8) CONSTANT(6),    /* INDEX FOR HUGE WORK AREA
*                                       (LOCAL ONLY)                 */
*  RPTTWKAI FIXED(8) CONSTANT(7),    /* INDEX FOR TINY WORK AREA     */
*  RPTPQCBI FIXED(8) CONSTANT(8),    /* INDEX FOR PQCB               */
*  RPTMRBI  FIXED(8) CONSTANT(9),    /* INDEX FOR MRB                */
*  RPTCRBI  FIXED(8) CONSTANT(10);   /* INDEX FOR CRB (GLOBAL ONLY)  */
*@SPACE(3);
*/********************************************************************/
*/*                                                                  */
*/*   THE FOLLOWING CONSTANTS ARE THE CONTROL BLOCK ACRONYMS FOR     */
*/*   THE TYPE OF CELLS THAT THE GRS STORAGE MANAGER PROCESSES.      */
*/*                                                                  */
*/********************************************************************/
*DECLARE
*  RPTQCBT  CHAR(4) CONSTANT('QCB '), /* CONTROL BLOCK ACRONYM - QCB */
*  RPTQELT  CHAR(4) CONSTANT('QEL '), /* CONTROL BLOCK ACRONYM - QEL */
*  RPTQXBT  CHAR(4) CONSTANT('QXB '), /* CONTROL BLOCK ACRONYM - QXB */
*  RPTQWBT  CHAR(4) CONSTANT('QWB '), /* CONTROL BLOCK ACRONYM - QWB */
*  RPTHWKAT CHAR(4) CONSTANT('HWKA'), /* CONTROL BLOCK ACRONYM FOR
*                                        HUGE WORK AREA              */
*  RPTTWKAT CHAR(4) CONSTANT('TWKA'), /* CONTROL BLOCK ACRONYM FOR
*                                        TINY WORK AREA              */
*  RPTPQCBT CHAR(4) CONSTANT('PQCB'), /* CONTROL BLOCK ACRONYM - PQCB*/
*  RPTMRBT  CHAR(4) CONSTANT('MRB '), /* CONTROL BLOCK ACRONYM - MRB */
*  RPTCRBT  CHAR(4) CONSTANT('CRB '); /* CONTROL BLOCK ACRONYM - CRB */
