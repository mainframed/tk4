         MACRO
&LABEL   TESTMODE &FUNC,              SAVE/RESTORE FUNCTION INDICATOR  X
               &PROT,                 PSA PROTECTED/UNPROTECTED AREA   X
               &PSW=,                 PSW OF S BIT TO SAVE/RESTORE     X
               &DAT=ON,               DEFAULT DAT IS ENABLED           X
               &WORKREG=,             WORKREG                          X
               &ASCB=                 REG FOR RETURN OF ASCB
.*
.**********************************************************************
.*                                                                    *
.*01* MACRO-NAME = TESTMODE                                           *
.*                                                                    *
.*01* DESCRIPTIVE-NAME = TEST CROSS MEMORY MODE                       *
.*                                                                    *
.*01* COPYRIGHT: 5740-XYN COPYRIGHT IBM CORP. 1980,                   *
.*               LICENSED MATERIAL PROGRAM, PROPERTY OF IBM,          *
.*               REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER          *
.*               G120-2083.                                           *
.*                                                                    *
.*01* STATUS = OS/VS2 JBB1226                                         *
.*                                                                    *
.*01* FUNCTION = SAVE S BIT IN OLD PSW AND SET TO PRIMARY MODE,       *
.*               RESTORE S BIT AND MODE FROM OLD PSW, OR              *
.*               RETURN ASCB ADDRESS OF EXECUTION MODE                *
.*                                                                    *
.*01* MODULE-TYPE = MACRO                                             *
.*                                                                    *
.*02* PROCESSOR = ASSEMBLER                                           *
.*                                                                    *
.*01* MACROS = IHBERMAC                                               *
.*                                                                    *
.*01* CHANGE-ACTIVITY = NONE                                          *
.*                                                                    *
.*01* MNOTES =                                                        *
.*                                                                    *
.*       IHB001 SAVE/RESTORE/ASCB OPERAND REQUIRED, NOT SPECIFIED     *
.*       IHB002 INVALID XXX OPERAND SPECIFIED - UNAUTHORIZED CSECT    *
.*       IHB002 INVALID ASCB OPERAND SPECIFIED - XXX                  *
.*       IHB002 INVALID WORKREG OPERAND SPECIFIED - XXX               *
.*       IHB002 INVALID PSW OPERAND SPECIFIED - XXX                   *
.*       IHB002 INVALID DAT OPERAND SPECIFIED - XXX                   *
.*       IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED             *
.*       IHB246 SAVE/RESTORE OPERAND SPECIFIED WITHOUT PROTECT/UNPROT *
.*              OPERAND                                               *
.*       IHB246 SAVE/RESTORE OPERAND SPECIFIED WITHOUT PSW OPERAND    *
.*       IHB246 PROTECT/ASCB OPERAND SPECIFIED WITHOUT WORKREG OPERAND*
.*       IHB280 PSW INVALID WITH ASCB                                 *
.*                                                                    *
.**********************************************************************
.* A-000000-999999                                             @G381PXU
.*
*        MACDATE = 80.029              .TESTMODE
.*
         LCLC  &AS                     LOCAL VARIABLE FOR ASCB REG
         LCLC  &IN                     LOCAL VARIABLE FOR SYSINDX
         LCLC  &PWB                    LOCAL VARIABLE PSA BASE WORKREG
         LCLC  &PZB                    LOCAL VARIABLE PSA BASE R0
         LCLC  &WR                     LOCAL VARIABLE FOR WORKREG
         LCLC  &UC                     LOCAL VARIABLE FOR MESSAGE CHARS
.*
&IN      SETC  '&SYSNDX'               SYSNDX FOR LABEL GENERATION
.*
&PWB     SETC  ''                      DEFAULT BASE TO NONE
&PZB     SETC  ''                      DEFAULT BASE TO NONE
.*
         AIF   (T'&LABEL EQ 'O').NOLAB IF NO LABEL, SKIP GENERATION
&LABEL   DC    0H'0'                   .BRANCH LABEL
.*
.NOLAB   ANOP
         AIF   (T'&ASCB NE 'O').ASCB   BRANCH IF ASCB SPECIFIED
.*
         AIF   ('&SYSECT' EQ 'IEAVEDS0').AUTH AUTHORIZED CSECT DISPATCH
         AIF   ('&SYSECT' EQ 'IEAVEEXT').AUTH AUTHORIZED CSECT EXT FLIH
         AIF   ('&SYSECT' EQ 'IEAVEIO').AUTH  AUTHORIZED CSECT IO FLIH
         AIF   ('&SYSECT' EQ 'IEAVELK').AUTH  AUTHORIZED CSECT LOCK MGR
         AIF   ('&SYSECT' EQ 'IEAVEPC').AUTH  AUTHORIZED CSECT PC FLIH
         AIF   ('&SYSECT' EQ 'IEAVEPCO').AUTH AUTHORIZED CSECT PC FLIH
         AIF   ('&SYSECT' EQ 'IEAVERES').AUTH AUTHORIZED CSECT RES FLIH
         AIF   ('&SYSECT' EQ 'IEAVESRT').AUTH AUTHORIZED CSECT STOP/
.*                                            RESET
         AIF   ('&SYSECT' EQ 'IEAVESVC').AUTH AUTHORIZED CSECT SVC FLIH
         AIF   ('&SYSECT' EQ 'IEAVTRT1').AUTH AUTHORIZED CSECT RTM
         AIF   ('&SYSECT' EQ 'IEAVTRTS').AUTH AUTHORIZED CSECT RTM
         AIF   ('&SYSECT' EQ 'IGFPEXIT').AUTH AUTHORIZED CSECT MCH
         AIF   ('&SYSECT' EQ 'IGFPMCIH').AUTH AUTHORIZED CSECT MCH
         AGO   .MNNAUTH
.*
.AUTH    ANOP
         AIF   (N'&SYSLIST EQ 0).MNNSRA IF NO POSITIONAL PARAMETERS
.*                                     ARE SPECIFIED, MNOTE AND EXIT
.*
         AIF   (N'&SYSLIST GT 2).MNEPP IF MORE THAN 2 POSITIONAL PARMS
.*                                     ARE SPECIFIED, MNOTE AND EXIT
.*
         AIF   ('&FUNC' NE 'SAVE' AND '&FUNC' NE 'RESTORE').MNNSRA
.*                                     POSITIONAL PARAMETER NOT -SAVE-
.*                                     OR -RESTORE-, MNOTE AND EXIT
.*
.**********************************************************************
.*                                                                    *
.*       SAVE OR RESTORE SPECIFIED                                    *
.*                                                                    *
.**********************************************************************
.*
         AIF   ('&PROT' NE 'PROTECT' AND '&PROT' NE 'UNPROT').MNNPU
.*                                     POSITIONAL PARM NOT -PROTECT-
.*                                     OR -UNPROT-, MNOTE AND EXIT
.*
         AIF   (T'&PSW EQ 'O').MNNPSW  IF PSW NOT SPECIFIED
.*                                     GO ISSUE MNOTE AND EXIT
.*
         AIF   ('&PSW'(1,1) EQ '(').MNINPW IF PSW REGISTER SPECIFIED
.*                                     GO ISSUE MNOTE AND EXIT
.*
         AIF   ('&DAT' NE 'ON' AND '&DAT' NE 'OFF').MNINDT
.*                                     INVALID DAT PARAMETER
.*                                     GO ISSUE MNOTE AND EXIT
.*
         AIF   ('&PROT' EQ 'UNPROT').NOWRKR NO WORK REG REQUIRED
.*                                     WITH UNPROT
.*
&PZB     SETC  '-PSA(0)'               USE PSA BASE R0 FOR TEST
.*
         AIF   ('&DAT' EQ 'OFF').NOWRKR NO WORK REG REQUIRED
.*                                     WITH DAT OFF
.*
         AIF   (T'&WORKREG EQ 'O').MNNWKR IF WORKREG NOT SPECIFIED
.*                                     GO ISSUE MNOTE AND EXIT
.*
         AIF   ('&WORKREG'(1,1) NE '(').MNINWR IF WORKREG NOT SPECIFIED
.*                                     AS REG, GO ISSUE MNOTE AND EXIT
.*
         AIF   (N'&WORKREG NE 1).MNINWR IF WORKREG SPECIFIED AS LIST,
.*                                     GO ISSUE MNOTE AND EXIT
.*
&WR      SETC  '&WORKREG(1)'           WORKREG FOR CODE GENERATION
.*
&PWB     SETC  '-PSA(&WR)'             USE PSA BASE WORKREG (HIGH
.*                                     VIRTUAL ADDRESS) FOR STORE
.*
.NOWRKR  ANOP
*
*        PROGRAM NOTE - THE CONDITION CODE WILL BE CHANGED
*
         AIF   ('&FUNC' NE 'SAVE').RESTO BRANCH IF RESTORE
.*
.**********************************************************************
.*                                                                    *
.*       SAVE OPTION SPECIFIED                                        *
.*                                                                    *
.**********************************************************************
.*
.*       NO SIMULATION CHECK NECESSARY FOR SAVE OPTION.
.*       S BIT ON IN PSAMODEW IMPLIES SIMULATION.
.*
         TM    PSAXMFLG-PSA(0),X'80'   .CHECK S BIT
         BNO   IHA&IN.A                .BRANCH IF S BIT OFF
.*
         AIF   ('&PROT' NE 'PROTECT').SNOP BRANCH IF AREA NOT PROTECTED
         AIF   ('&DAT' NE 'OFF').SPDAT BRANCH IF DAT IS ON
.*                                     PROTECTED AREA, DAT OFF
&PWB     SETC  '-PSA(0)'               USE PSA BASE R0 FOR STORE
*        PROTPSA DISABLE               .DISABLE PSA PROTECT
         PROTPSA DISABLE               .DISABLE PSA PROTECT
         AGO   .SNOP
.SPDAT   ANOP                          PROTECTED AREA, DAT ON
         LA    &WR,X'FFF'              .PSW IN PROTECTED PSA,
         SLL   &WR,12                  .FORM HIGH VIRTUAL ADDRESS
.SNOP    ANOP
         OI    2+&PSW&PWB,X'80'        .SAVE S BIT IN OLD PSW
         MVI   PSAXMFLG-PSA(0),X'00'   .CHANGE TO PRIMARY MODE
         LCTL  1,1,PSAXMCR1-PSA(0)     .SET UP PRIMARY MODE STD
.*
         AIF   ('&PROT' NE 'PROTECT' OR '&DAT' NE 'OFF').SPEXIT
*        PROTPSA ENABLE                .ENABLE PSA PROTECT
         PROTPSA ENABLE                .ENABLE PSA PROTECT
*
*        PROGRAM NOTE - PSA PROTECTION IS NOW ENABLED.
*
.SPEXIT  ANOP
IHA&IN.A DC    0H'0'                   .BRANCH LABEL
*                                      .TESTMODE END
         MEXIT
.*
.**********************************************************************
.*                                                                    *
.*       RESTORE OPTION SPECIFIED                                     *
.*                                                                    *
.**********************************************************************
.RESTO   ANOP                          CODE FOR RESTORE
         TM    PSAXMFB1-PSA(0),X'20'   .CHECK FOR SIMULATION
         BNO   IHA&IN.A                .BRANCH IF NOT PRESENT
         TM    2+&PSW&PZB,X'80'        .CHECK S BIT
         BNO   IHA&IN.A                .BRANCH IF S BIT OFF
.*
         AIF   ('&PROT' NE 'PROTECT').RNOP CODE FOR PROTECT OPTION
         AIF   ('&DAT' NE 'OFF').RPDAT BRANCH IF DAT IS ON
.*                                     PROTECTED AREA, DAT OFF
&PWB     SETC  '-PSA(0)'               USE PSA BASE R0 FOR STORE
*        PROTPSA DISABLE               .DISABLE PSA PROTECT
         PROTPSA DISABLE               .DISABLE PSA PROTECT
         AGO   .RNOP
.RPDAT   ANOP                          PROTECTED AREA, DAT ON
         LA    &WR,X'FFF'              .PSW IN PROTECTED PSA,
         SLL   &WR,12                  .FORM HIGH VIRTUAL ADDRESS
.RNOP    ANOP
         NI    2+&PSW&PWB,X'7F'        .TURN S BIT OFF IN OLD PSW
         MVI   PSAXMFLG-PSA(0),X'80'   .RESTORE SECONDARY MODE
         LCTL  1,1,PSAXMCR7-PSA(0)     .SET UP SECONDARY MODE STD
.*
         AIF   ('&PROT' NE 'PROTECT' OR '&DAT' NE 'OFF').RPEXIT
*        PROTPSA ENABLE                .ENABLE PSA PROTECT
         PROTPSA ENABLE                .ENABLE PSA PROTECT
*
*        PROGRAM NOTE - PSA PROTECTION IS NOW ENABLED.
*
.RPEXIT  ANOP
IHA&IN.A DC    0H'0'                   .BRANCH LABEL
*                                      .TESTMODE END
         MEXIT
.*
.**********************************************************************
.*                                                                    *
.*       ASCB OPTION SPECIFIED                                        *
.*                                                                    *
.**********************************************************************
.*
.ASCB    ANOP                          CHECK FOR ASCB OPTION
         AIF   (N'&SYSLIST NE 0).MNEPP IF ANY POSITIONAL PARMS WITH
.*                                     ASCB, GO MNOTE AND EXIT
.*
         AIF   (T'&PSW NE 'O').MNIPSW  IF PSW SPECIFIED WITH ASCB,
.*                                     GO MNOTE AND EXIT
.*
         AIF   ('&ASCB'(1,1) NE '(').MNINAS IF ASCB NOT SPECIFIED AS
.*                                     REG, GO ISSUE MNOTE AND EXIT
.*
         AIF   (N'&ASCB NE 1).MNINAS   IF ASCB SPECIFIED AS LIST,
.*                                     GO ISSUE MNOTE AND EXIT
.*
&AS      SETC  '&ASCB(1)'              A.S. REG FOR CODE GENERATION
.*
         AIF   (T'&WORKREG EQ 'O').MNNWKR IF WORKREG NOT SPECIFIED
.*                                     WITH ASCB, GO MNOTE AND EXIT
.*
         AIF   ('&WORKREG'(1,1) NE '(').MNINWR IF WORKREG NOT SPECIFIED
.*                                     AS REG, GO ISSUE MNOTE AND EXIT
.*
         AIF   (N'&WORKREG NE 1).MNINWR IF WORKREG SPECIFIED AS LIST,
.*                                     GO ISSUE MNOTE AND EXIT
.*
&WR      SETC  '&WORKREG(1)'           WORKREG FOR CODE GENERATION
*
*        PROGRAM NOTE - THE CONDITION CODE WILL BE CHANGED
*
.*
.*       CHECK FOR DISABLED, PERFORMACE PATH REQUEST
.*
         AIF   ('&SYSECT' EQ 'IEAVGM00').AUTHP AUTHORIZED CSECT GETMAIN
         AIF   ('&SYSECT' EQ 'IEAVGM01').AUTHP AUTHORIZED CSECT GETMAIN
         AIF   ('&SYSECT' EQ 'IEAVCSEG').AUTHP AUTHORIZED CSECT RSM
         AIF   ('&SYSECT' EQ 'IEAVPREF').AUTHP AUTHORIZED CSECT RSM
         AIF   ('&SYSECT' EQ 'IEAVSQA').AUTHP  AUTHORIZED CSECT RSM
         AIF   ('&SYSECT' EQ 'ILRJTERM').AUTHP AUTHORIZED CSECT ASM
         AGO   .AUTHNP                 GENERATE NON PERFORMANCE OR
.*                                     ENABLED PATH
.AUTHP   ANOP
         TM    PSAXMFB1-PSA(0),X'20'   .CHECK FOR SIMULATION
         BNO   IHA&IN.M                .BRANCH IF NOT PRESENT
         TM    PSAXMFLG-PSA(0),X'80'   .CHECK FOR SECONDARY MODE
         BO    IHA&IN.A                .BRANCH TO ESAR IF S BIT ON
         LH    &AS,PSAXMPAS-PSA(0)     .GET PASID
         B     IHA&IN.Z                .BRANCH TO GET ASCB ADDRESS
IHA&IN.A DC    0H'0'                   .BRANCH LABEL
         LH    &AS,PSAXMSAS-PSA(0)     .GET SASID
         B     IHA&IN.Z                .BRANCH TO GET ASCB ADDRESS
IHA&IN.M DC    0H'0'                   .BRANCH LABEL
.AUTHNP  ANOP
*        IAC   ASCBREG                 .GET S BIT
         IAC   &AS                     .GET S BIT
         BC    B'1011',IHA&IN.N        .BRANCH TO EPAR IF S BIT OFF
*        ESAR  ASCBREG                 .GET SASID
         ESAR  &AS                     .GET SASID
         B     IHA&IN.Z                .BRANCH TO GET ASCB ADDRESS
IHA&IN.N DC    0H'0'                   .BRANCH LABEL
*        EPAR  ASCBREG                 .GET PASID
         EPAR  &AS                     .GET PASID
IHA&IN.Z DC    0H'0'                   .BRANCH LABEL
         L     &WR,X'10'               .GET CVT ADDR
         L     &WR,CVTASVT-CVT(&WR)    .GET ASVT ADDR
         SLL   &AS,2                   .SHIFT ASID FOR ASVT INDX
         L     &AS,ASVTENTY-ASVT-4(&AS,&WR) RETURN ASCB ADDRESS
*                                      .TESTMODE END
         MEXIT
.*
.**********************************************************************
.*                                                                    *
.*      MACRO INVOCATION ERRORS                                       *
.*                                                                    *
.**********************************************************************
.*
.MNNSRA  ANOP
.*       IHB001 SAVE/RESTORE/ASCB OPERAND REQUIRED, NOT SPECIFIED
         IHBERMAC 1006,SAVE/RESTORE/ASCB
         MEXIT
.*
.MNNAUTH ANOP
&UC      SETC  'UNAUTHORIZED CSECT'
         AIF   (T'&ASCB NE 'O').MNNAUT1 BRANCH IF ASCB SPECIFIED
.*
.*       IHB002 INVALID XXX OPERAND SPECIFIED - UNAUTHORIZED CSECT
         IHBERMAC 1001,&FUNC,&UC
         MEXIT
.MNNAUT1 ANOP
         IHBERMAC 1001,ASCB,&UC
         MEXIT
.*
.MNINDT  ANOP
.*       IHB002 INVALID DAT OPERAND SPECIFIED - XXX
         IHBERMAC 1001,DAT,&DAT
         MEXIT
.*
.MNINAS  ANOP
.*       IHB002 INVALID ASCB OPERAND SPECIFIED - XXX
         IHBERMAC 1001,ASCB,&ASCB
         MEXIT
.*
.MNINWR  ANOP
.*       IHB002 INVALID WORKREG OPERAND SPECIFIED - XXX
         IHBERMAC 1001,WORKREG,&WORKREG
         MEXIT
.*
.MNINPW  ANOP
.*       IHB002 INVALID PSW OPERAND SPECIFIED - XXX
         IHBERMAC 1001,PSW,&PSW
         MEXIT
.*
.MNEPP   ANOP
.*       IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED
         IHBERMAC 238
         MEXIT
.*
.MNNPU   ANOP
.*       IHB246 SAVE/RESTORE OPERAND SPECIFIED WITHOUT PROTECT/UNPROT
.*       OPERAND
         IHBERMAC 1010,SAVE/RESTORE,PROTECT/UNPROT
         MEXIT
.*
.MNNPSW  ANOP
.*       IHB246 SAVE/RESTORE OPERAND SPECIFIED WITHOUT PSW OPERAND
         IHBERMAC 1010,SAVE/RESTORE,PSW
         MEXIT
.*
.MNNWKR  ANOP
.*       IHB246 PROTECT/ASCB OPERAND SPECIFIED WITHOUT WORKREG OPERAND
         IHBERMAC 1010,PROTECT/ASCB,WORKREG
         MEXIT
.*
.MNIPSW  ANOP
.*       IHB280 PSW INVALID WITH ASCB
         IHBERMAC 1020,PSW,ASCB
         MEXIT
.*
         MEND
