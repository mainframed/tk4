         TITLE 'BLSR3270--BLSR327C--Pre-Process Attention Identifier'
*** START OF SPECIFICATIONS****************************************
*
* $MAC(BLSR327C) COMP(SC132) PROD(JIP1329): Pre-process AID
*
* COPYRIGHT= 5740-XYN, 5740-XYS Copyright IBM Corporation 1982.
*            Licenced material-Program property of IBM,
*            Refer to copyright instructions form number G120-2083.
*
* FUNCTION= Pre-process AID (attention identifier) for BLSR3270
*
*     CHANGE ACTIVITY:
* $L0= MVSIPCS,EIP1102,78001,DMGPKB: MVS IPCS INITIAL RELEASE CODE
* $L1= PKKEYS,HIP2102,82065,DSDPRW: Improved PFKEY suport
* $H1= NEW327X,HIP2102,82065,DSDPRW: Treat PF13-PF24 as PF01-PF12
* $D1= QUALITY,HIP2102,82065,DSDPRW: Improve comments, remarks
*
***** END OF SPECIFICATIONS****************************************
         SPACE
*------- Treat PF13-PF24 as PF01-PF12  ---------------------------
         CLI   0(RA),X'C9'             MAXIMUM NEW AID (PF21)      @H1A
         BH    LC000020                NOT PF13-PF24               @H1A
         CLI   0(RA),X'C1'             MINIMUM IN GROUP (PF13)     @H1A
         BNL   LC000010                EDIT PF13-PF24 TO PF1-PF12  @H1A
         CLI   0(RA),X'4A'             MINIMUM NEW AID (PF22)      @H1A
         BL    LC000020                NOT PF13-PF24               @H1A
         CLI   0(RA),X'4C'             MAXIMUM IN GROUP (PF24)     @H1A
         BH    LC000020                NOT PF13-PF24               @H1A
LC000010 OI    0(RA),X'30'             EDIT PF13-PF24 TO PF1-PF12  @H1A
*------- By convertion the attention ID back to the 3270 internal
*------- representation, we arrive at a collating sequence that
*------- starts with the 'SHORT-READ' IDs, through the PF keys, to
*------- the ENTER and light pen IDs.
LC000020 IC    RF,0(RA)           FIRST CHAR IN BUFFER IS AID      @H1C
         N     RF,=X'0000003F'    KEEP ONLY LOW SIX BITS
         CH    RF,=X'0000003E'    LIGHT PEN ATTENTION
         BE    LC000200           YES
         SH    RF,=Y(AIDIGNOR)    SHORT READ
         BNM   LC000300           NO
LC000200 OI    FLAG0,FLAG0FMT     MUST REWRITE ENTIRE SCREEN
         MVC   WKACORDS+1(2),PREVCURS RESTORE OLD CURSOR POSITION
         B     BLSR327B           PREPARE OUTPUT
LC000300 CH    RF,=H'2'           IS IT END?
         BE    LA005600           -YES SKIP REST
         ALR   RF,RF              DOUBLE TO INDEX YCON TABLE
         STH   RF,WKAAIDNX        SAVE INDEX
         B     BLSR327J           CHECK INPUT FOR ERRORS
         SPACE
LC000320 LA    RA,SCRNBUFR        -> INPUT BUFFER
         L     R7,SAVER7          RESTORE INPUT LENGTH
         LH    RF,WKAAIDNX        RESTORE INDEX
         LH    RF,YC000400(RF)    OFFSET TO ROUTINE
         B     BLSR327B(RF)       GO TO PROPER PRE-PROCESSOR
         SPACE 1                                                   @L1C
*------- Pre-process PF05--Change display format of current area
LC050000 CLI   ESAUDTY,C'C'       Is current data type CHARACTER?  @L1A
         BNE   LC050100           No, set format to C              @L1A
         MVI   ESAUDTY,C'B'       Set data type to BIT             @L1A
         MVI   EFMTVAL,C'X'       Set format to X                  @L1A
         B     LC050200           Simulate manual entry            @L1A
LC050100 MVI   ESAUDTY,C'C'       Set data type to CHARACTER       @L1A
         MVI   EFMTVAL,C'C'       Set format to C                  @L1A
LC050200 BAL   R3,LJ000660        Simulate manual entry            @L1A
         OI    FLAG1,FLAG1FMT     Signal change in format          @L1A
         B     BLSR327D           Continue                         @L1A
         SPACE 1                                                   @L1P
*------- Pre-process PF06--Change current area -------------------
LC060000 SLR   R3,R3              Clear work register              @L1A
         SLR   RF,RF              Clear work register              @L1A
         IC    R3,WKAAREA         Get display area identifier      @L1A
LC060100 LA    R3,1(0,R3)         Add one to area identifier       @L1A
         CLM   R3,1,=C'D'         Cycle from D to A?               @L1A
         BNH   LC060200           No, Verify area is displayed     @L1A
         LA    R3,C'A'            Set area identifier to A         @L1A
         B     LC060300           Simulate manual entry            @L1A
LC060200 IC    RF,WKALINES-C'A'(R3) Lines of area being displayed  @L1A
         LTR   RF,RF              Is area being displayed?         @L1A
         BZ    LC060100           No, skip area with no lines      @L1A
*        Move to new area without disturbing the data currently
*        displayed in that area.  Later processing of manual data
*        entry or cursor position as an indirect address request
*        may override this.
LC060300 STC   R3,WKAAREA         Current area identifier          @L1A
         STC   R3,EAREAVAL        New area identifier              @L1A
         LA    RF,C'A'            Convert area id to array index   @L1A
         SLR   R3,RF              ...                              @L1A
         ALR   R3,R3              ...                              @L1A
         ALR   R3,R3              ...                              @L1A
         L     RF,WKAVCTA(R3)     Address of new area              @L1A
         MVI   ESAULAD,X'00'      Current address--initial byte    @L1A
         STCM  RF,B'0111',ESAULAD+1 Current address--final bytes   @L1A
         MVI   EADDRVAL,X'00'     New address--initial byte        @L1A
         STCM  RF,B'0111',EADDRVAL+1 New address--final bytes      @L1A
         L     RF,WKAVCTC(R3)     Attributes of new area           @L1A
         XC    ESAUAS2(2),ESAUAS2 Current ASID--initial bytes      @L1A
         STCM  RF,B'1100',ESAUAS2+2 Current ASID--final bytes      @L1A
         STCM  RF,B'1100',EASIDVAL New ASID                        @L1A
         STCM  RF,B'0010',ESAUDTY Current data type                @L1A
         CLI   ESAUDTY,C'C'       CHARACTER data type?             @L1A
         BE    LC060400           Yes, simulate manual entry       @L1A
         MVI   ESAUDTY,C'B'       Set data type to BIT.            @L1A
LC060400 STCM  RF,B'0010',EFMTVAL New data type                    @L1A
         BAL   R3,LJ000760        Simulate manual entry            @L1A
         OI    FLAG1,FLAG1ADR+FLAG1ASI+FLAG1FMT+FLAG1ARE+FLAG1RLL  @L1A
         B     BLSR327D           Continue                         @L1A
         SPACE 2
*------------------------------------------------------------------
*        Attention identifier (AID) Pre-processor Vector Table
*        AID   AID&X'3F'          MEANING OF AID
*        --    ---------          --------------
*        60    00                 NOP TO POLL OF DISPLAY
*        E6    26                 CARD READER READ A STRIPE
*        E8    28                 NOP TO POLL OF PRINTER
*        6B    2B                 PA3
*        6C    2C                 PA1
*        6D    2D                 CLEAR
*        6E    2E                 PA2
*        F0    30                 TEST REQUEST
*------------------------------------------------------------------
         SPACE
YC000400 DC    Y(BLSR327D-BLSR327B) F1-->31, PF01 ==> ENTER        @D1C
         DC    Y(BLSR327D-BLSR327B) F2-->32, PF02 ==> ENTER        @D1C
         DC    Y(LA005600-BLSR327B) F3-->33, PF03 ==> END          @D1C
         DC    Y(BLSR327D-BLSR327B) F4-->34, PF04 ==> ENTER        @D1C
         DC    Y(LC050000-BLSR327B) F5-->35, PF05 ==> FORMAT       @L1C
         DC    Y(LC060000-BLSR327B) F6-->36, PF06 ==> AREA         @L1C
         DC    Y(LD001800-BLSR327B) F7-->37, PF07 ==> -SCROLL      @D1C
         DC    Y(LD001800-BLSR327B) F8-->38, PF08 ==> +SCROLL      @D1C
         DC    Y(LD001800-BLSR327B) F9-->39, PF09 ==> STACK        @D1C
         DC    Y(LD001800-BLSR327B) 7A-->3A, PF10 ==> -SKIP        @D1C
         DC    Y(LD001800-BLSR327B) 7B-->3B, PF11 ==> +SKIP        @D1C
         DC    Y(BLSR327D-BLSR327B) 7C-->3C, PF12 ==> ENTER        @D1C
         DC    Y(BLSR327D-BLSR327B) 7D-->3D, ENTER==> ENTER        @D1C
