*%GOTO RT1WPLS1;  /*
         MACRO
         IHART1W  ,     */
*%RT1WPLS1: ;
* /*******************************************************************/
* /* --BAL--                                                 @G382P2F*/
* /* THE IHART1W MAPPING MACRO MAPS THE RT1W, RT1RTRN, AND   @G382P2F*/
* /* THE RT1TRACK DSECTS.                                    @G382P2F*/
* /* --PLS--                                                 @G382P2F*/
* /* THE IHART1W MAPPING MACRO MAPS SIX AREAS USED BY THE    @G382P2F*/
* /* VARIOUS COMPONENTS OF THE RTM. COMPILE TIME VARIABLES           */
* /* HAVE BEEN ASSIGNED TO ALLOW SELECTIVE INCLUSION OF ANY          */
* /* OR ALL OF THE SIX AREAS. THE DEFAULT ACTION FOR EACH OF @G382P2F*/
* /* THE VARIABLES IS TEXT INCLUSION. THE VARIABLES ARE:             */
* /* RTM1WA, EEDS, ENPT, RTMB, RTMC AND MODE.                @G382P2F*/
* /* TO SUPPRESS INCLUSION OF ANY OF THE AREAS, SET THE COMPILE      */
* /* TIME VARIABLE TO THE CHARACTER STRING 'NO'.                     */
* /*                                                                 */
* /*  COPYRIGHT= 5740-XYN COPYRIGHT IBM CORP 1980,                   */
* /*             LICENSED MATERIAL-PROGRAM, PROPERTY OF IBM,         */
* /*             REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER         */
* /*             G120-2083.                                          */
* /*                                                                 */
* /* MACMEAN    RT1W MEANS RTM1 WORKAREA                     @G381P2F*/
* /* MACCOMP    SC1CM                                        @G381P2F*/
* /* MACSTAT    OS/VS2 JBB1226                               @G382P2F*/
* /* MACDATE    80058                                        @ZMB0189*/
* /*******************************************************************/
*%GOTO RT1WPLS;  /*
RT1W     DSECT ,     FRRSRTMW                                  @G382P2F
RT1WTRTM DS    0CL76        PART OF RT1W USED FROM IEAVTRTM ON @G382P2F
RT1WNPRS DS    0CL52        DATA NOT PRESERVED ON VALID        @G382P2F
*                           ANTICIPATED RECURSION              @G382P2F
RT1WLPTA DS    6F           TRACKING AREA FOR LOGICAL PHASE    @G382P2F
*                           RECOVERY PROCESSING (RT1TRACK)     @G382P2F
RT1WPSW1 DS    A            CHECKPOINTED PTR TO PSW1           @G382P2F
RT1WPSW2 DS    A            CHECKPOINTED PTR TO PSW2           @G382P2F
RT1WVARI DS    5F           VARIABLE FIELDS IN WA              @G382P2F
RT1WPRSV DS    0CL24        DATA TO BE PRESERVED ON VALID      @G382P2F
*                           ANTICIPATED RECURSION              @G382P2F
RT1WRTCA DS    A            POINTER TO THE SDWA CURRENTLY IN   @G382P2F
*                           USE (USED BY RTS)                  @G382P2F
RT1WSRBR DS    A            POINTER TO THE CHAIN PREFIX (SEE   @G382P2F
*                           RTMCHDR) AND SDWA AQUIRED FROM     @G382P2F
*                           SQA BY IEAVTRTS                    @G382P2F
RT1WEED  DS    A            POINTER TO EEDS ACQUIRED           @G382P2F
RT1WENTR DS    0CL4         ENTRY POINT DATA                   @G382P2F
RT1WMODE DS    CL1          SYSTEM MODE AT TIME OF ERROR (SEE  @G382P2F
*                           MODEBYTE AT THE END OF RT1W FOR A  @G382P2F
*                           DESCRIPTION OF THIS BYTE)          @G382P2F
RT1WSRMD DS    CL1          SYSTEM RECOVERY MODE               @G382P2F
RT1WCOVR DS    CL1          PRESERVED CARRY OVER INFORMATION   @G382P2F
*                           ON VALID RECURSIONS                @G382P2F
RT1WCLUP EQU   X'80'        CLEANUP AND PERCOLATE INDICATION   @G382P2F
RT1WRTM  EQU   X'40'        IF ON, INDICATES RTM'S FRR WAS IN  @G382P2F
*                           CONTROL AT THE TIME OF THE ERROR   @G382P2F
RT1WFAIL EQU   X'20'        IF ON, RTM1 ISSUED A CMSET MACRO   @G382P2F
*                           WHICH EITHER ISSUED ABEND OR       @G382P2F
*                           RETURNED A NON ZERO RETURN CODE    @G382P2F
RT1WRSTW EQU   X'10'        IF ON, RTS HAS ALREADY CLEARED THE @G382P2F
*                           CVT RESTART WORD (CVTRSTWD)        @G382P2F
RT1WEREX EQU   X'08'        USED IN EEDPROC TO INDICATE AN     @G382P2F
*                           ERRORID HAS BEEN PLACED IN AN EED. @G382P2F
*                           IT IS SET OFF BEFORE EXITING FROM  @G382P2F
*                           EEDPROC                            @G382P2F
RT1NODMP EQU   X'04'        SET BY SLIP TO INFORM DUMPING      @G382P2F
*                           PROGRAMS THAT DUMP REQUESTS SHOULD @G382P2F
*                           BE IGNORED FOR THIS INVOKATION OF  @G382P2F
*                           RTM                                @G382P2F
RT1WSLST EQU   X'02'        IF ON, AT LEAST ONE FRR HAS        @G382P2F
*                           SUPPLIED DUMP RANGES TO RTS OR     @G382P2F
*                           DUMP RANGES WERE SUPPLIED BY THE   @G382P2F
*                           ISSUER OF ABEND                    @G382P2F
RT1WGFAI EQU  X'01'         IF ON, RTS ATTEMPTED TO ACQUIRE AN @G382P2F
*                           SDWA FROM SQA BUT THE GETMAIN      @G382P2F
*                           REQUEST WAS UNSUCCESSFUL           @G382P2F
RT1WLPN  DS   CL1           INITIAL LOGICAL PHASE NUMBER ON    @G382P2F
*                           ENTRY TO RTM                       @G382P2F
RT1WASCB DS   A             ASCB ADDR OF CML ADDRESS SPACE     @G382P2F
RT1WENT2 DS   0CL4          ENTRY POINT DATA                   @G382P2F
RT1WCOV2 DS   CL1           PRESERVED CARRY OVER INFORMATION   @G382P2F
*                           ON VALID RECURSIONS                @G382P2F
RT1WSKIP EQU  X'80'         IF ON, AT LEAST ONE FRR IN THE     @G382P2F
*                           PERCOLATION PATH HAS BEEN SKIPPED  @G382P2F
RT1WRMGR EQU  X'40'         IF ON, RTM1 IS PROCESSING THE FRR  @G382PPY
*                           STACK ON  BEHALF OF A              @G382PPY
*                           CALLRTM TYPE=RMGRCML               @G382PPY
RT1WRSV  DS   CL3           RESERVED                           @G382P2F
RT1WTRT1 DS   0CL12         PART OF RT1W USED FROM IEAVTRT1 ON @G382P2F
RT1WXM   DS   0CL8          CROSS MEMORY INFORMATION AT TIME   @G382P2F
*                           OF ERROR                           @G382P2F
RT1WCR3  DS   0CL4          CONTROL REG 3 AT TIME OF ERROR     @G382P2F
RT1WKM   DS   CL2           KEY MASK                           @G382P2F
RT1WSAS  DS   CL2           SASID                              @G382P2F
RT1WCR4  DS   0CL4          CONTROL REG 4 AT TIME OF ERROR     @G382P2F
RT1WAX   DS   CL2           AUTHORIZATION INDEX                @G382P2F
RT1WPAS  DS   CL2           PASID                              @G382P2F
RT1WSAV1 DS   A             WORK/SAVE AREA FOR RTM             @G382P2F
RT1RTRN  DSECT , FRRSRTMW   THE RTM1 WORK AREA IS USED TO      @G382P2F
*                           CONTAIN RETRY REGISTERS IF AN FRR  @G382P2F
*                           SUCCESSFULLY RETRYS.  A LM         @G382P2F
*                           INSTRUCTION IS ISSUED FROM THE WA  @G382P2F
*                           BEFORE THE RETRY ROUTINE IS GIVEN  @G382P2F
*                           CONTROL                            @G382P2F
RT1RSAV1 DS    F            FIRST WORD NOT OVERLAID            @G382P2F
RT1RTRRG DS    0CL64        16 REGISTERS FOR RETRY             @G382P2F
RT1R0R14 DS    CL60         RETRY REGS 0 THRU 14               @G382P2F
RT1RTYAD DS    A            RETRY ADDRESS IN REG15 SLOT        @G382P2F
*     ****************************************************************
*     * THE RTM1 TRACKING AREA IS LOCATED IN ONE OF TWO PLACES       *
*     * DEPENDING ON THE TYPE OF RECOVERY APPROPRIATE FOR ANY SECTION*
*     * OF THE RTM1'S PROCESSING. WHEN ACTING AS A SECOND LEVEL      *
*     * INTERRUPT HANDLER, THE RTM1 DOES ITS TRACKING IN THE RTM1WA. *
*     * WHEN OPERATING IN A MODE THAT ALLOWS FRR PROTECTION, THE     *
*     * RTM1 DOES ITS TRACKING IN THE FRRPARMS FIELD ASSIGNED BY     *
*     * THE SETFRR MACRO. A COMMON MAPPING IS PROVIDED TO ALLOW FOR  *
*     * INDEPENDENCE IN THE MAINLINE RTM1 AND IN THE RECOVERY ROUTINE*
*     * WITH RESPECT TO THE TYPE OF RECOVERY SCHEME EMPLOYED.        *
*     ****************************************************************
RT1TRACK DSECT ,            COMMON TRACKING AREA MAPPING FOR   @G382P2F
*                           RTM1 RECOVERY                      @G382P2F
RT1TRECC DS    0CL4         RECURSION CONTROL DATA             @G382P2F
RT1TLPN  DS    CL1          LOGICAL PHASE NUMBER               @G382P2F
RT1TLPID DS    CL1          LOGICAL PHASE  REC RTN ID          @G382P2F
RT1TENPT DS    CL1          ORIGINAL ENTRY POINT               @G382P2F
RT1TACQR DS    CL1          RESOURCES ACQUIRED BY RTM1         @G382P2F
RT1TDISP EQU   X'80'        DISPATCHER LOCK ACQUIRED           @G382P2F
RT1TLLCK EQU   X'40'        LOCAL LOCK ACQUIRED BY RT1         @G382P2F
RT1TRETY EQU   X'20'        RT1 ATTEMPTED RETRY                @G382P2F
RT1TSBIT EQU   X'10'        PSW S-BIT FOR RETRY ROUTINE.       @G382P2F
*                           USED BY RT1 & RTM                  @G382P2F
RT1TSERP EQU   X'08'        IF ON, SERIALIZE SRB TO TASK       @G382P2F
*                           PERCOLATION (USED TO INDICATE      @G382P2F
*                           SDWASERP WAS SET)                  @G382P2F
RT1TTRTS EQU   X'04'        IF ON, IEAVTRTM HAS GONE TO IEAVTRTS
*                                                              @G382P1F
RT1TNSS  EQU   X'02'        IF ON, RT1 WAS ENTERED WITH THE PSANSS
*                           BIT ON                             @ZMB0189
RT1TREGS DS    5F           CHECKPOINTED REGISTERS             @G382P2F
*     ***************************************************************
*     * LOGICAL PHASE NUMBERS USED WITH THE RT1TLPN FIELD.          *
*     * THESE NUMBERS ARE ASSIGNED TO THE VARIOUS UNIQUE PHASES     *
*     * OF THE RTM1 TO ASSIST IN RECOVERY ACTIONS PERFORMED BY      *
*     * THE RTM1S FRRS OR LOGICAL PHASE RECOVERY ROUTINES (LPRRS).  *
*     ***************************************************************
VALIDREC EQU   X'FF'        ANTICIPATED VALID RECURSION IN RTM @G382P2F
*                           MGR                                @G382P2F
FRRRECUR EQU   X'FE'        ANTICIPATED VALID RECURSION IN AN  @G382P2F
*                           FRR                                @G382P2F
RMGRCML  EQU   X'FD'        ANTICIPATED VALID RECURSION FOR    @G382P2F
*                           INITIAL ENTRY OF CALLRTM           @G382P2F
*                           TYPE=RMGRCML                       @G382P2F
RT1MGRLO EQU   X'00'        BEGINNING OF MANAGEMENT FUNCTIONS  @G382P2F
*                           RANGE OF LPNS                      @G382P2F
MGRINIT  EQU   X'01'        LPN FOR MGR INITIALIZE PHASE       @G382P2F
POSTRTS  EQU   X'02'        COMPLETION OF SYSTEM RECOVERY      @G382P2F
*                           PROCESSING LPN                     @G382P2F
NORTS    EQU   X'03'        NO SYSTEM RECOVERY PROCESSING LPN  @G382P2F
*                           LPN                                @G382P2F
CPURSTRT EQU   X'04'        ISSUE RESTART ON LOOPING CPU LPN   @G382P2F
NORSTRT  EQU   X'05'        UNSUCCESSFUL ISSUANCE OF RESTART   @G382P2F
*                           LPN                                @G382P2F
RT1MGRHI EQU   X'1D'        ENDING OF MANAGEMENT FUNCTIONS     @G382P2F
*                           RANGE OF LPNS                      @G382P2F
RT1MCHLO EQU   X'1E'        BEGINNING OF MACHCK FUNCTIONS      @G382P2F
*                           RANGE OF LPNS                      @G382P2F
RTHEEDS  EQU   X'20'        RTHS EED PHASE LPN                 @G382P2F
RTHTIMER EQU   X'21'        RTHS CLOCK REPAIR PHASE LPN        @G382P2F
RTHSTRG1 EQU   X'22'        RTHS STORAGE REPAIR PHASE 1 LPN    @G382P2F
RTHPARMS EQU   X'23'        RTHS RSR PARAMETER LIST PHASE LPN  @G382P2F
RTHSTRG2 EQU   X'24'        RTHS STORAGE REPAIR PHASE 2 LPN    @G382P2F
RTHRECRD EQU   X'25'        RTHS ERROR RECORDING PHASE LPN     @G382P2F
RTHSOFTW EQU   X'26'        RTHS SOFTWARE INFORMATION PHASE    @G382P2F
*                           LPN                                @G382P2F
RTHEXIT  EQU   X'27'        RTHS EXIT PHASE LPN                @G382P2F
RT1MCHHI EQU   X'3B'        ENDING OF MACHINE CHECK FUNCTIONS  @G382P2F
*                           RANGE OF LPNS                      @G382P2F
RT1SRMLO EQU   X'3C'        BEGINNING OF RTS FUNCTIONS RANGE   @G382P2F
*                           OF LPN                             @G382P2F
RT1SRMHI EQU   X'59'        ENDING OF RTS FUNCTIONS RANGE OF   @G382P2F
*                           LPN                                @G382P2F
RT1RESLO EQU   X'5A'        BEGINNING OF RESCHEDULE FUNCTIONS  @G382P2F
*                           RANGE OF LPNS                      @G382P2F
RESRTYLO EQU   X'5A'        BEGINNING OF RESCHEDULE LPNS FOR   @G382P2F
*                           WHICH RETRY IS POSSIBLE            @G382P2F
SRBEED   EQU   X'5A'        EED PROCESSING TO OBTAIN AN SRB    @G382P2F
*                           LPN                                @G382P2F
XMEEDS   EQU   X'5B'        EED PROCESSING FOR XMABTRM LPN     @G382P2F
RT2EEDS  EQU   X'5C'        EED PROCESSING FOR RTM2 RESCHEDULE @G382P2F
*                           LPN                                @G382P2F
RT1EEDS  EQU   X'5D'        EED PROCESSING FOR RTM1 RESCHEDULE @G382P2F
*                           LPN                                @G382P2F
RESRTYHI EQU   X'5D'        END OF RESCHEDULE LPNS FOR WHICH   @G382P2F
*                           RETRY IS POSSIBLE RESCHEDULE       @G382P2F
RESCHED  EQU   X'5E'        FUNCTION LPN                       @G382P2F
FREESRB  EQU   X'60'        SRB PROCESSING PRIOR TO SCHEDULE   @G382P2F
*                           LPN                                @G382P2F
SRBCOMP  EQU   X'61'        SRB PROCESSING COMPLETE LPN        @G382P2F
RESRTM2  EQU   X'62'        RESCHEDULE RTM2 LPN                @G382P2F
TCBTERM  EQU   X'63'        LOGICAL TERMINATION OF TASK LPN    @G382P2F
RESRTM1  EQU   X'64'        RESCHEDULE RTM1 LPN                @G382P2F
MEMTERM  EQU   X'65'        ENQUEUE OF ASCB ON MEMTERM QUEUE   @G382P2F
MEMTCOMP EQU   X'66'        MEMTERM COMPLETION LPN             @G382P2F
RT1RESHI EQU   X'77'        ENDING OF RESCHEDULE FUNCTIONS     @G382P2F
*                           RANGES OF LPNS                     @G382P2F
RT1EXTLO EQU   X'78'        BEGINNING OF EXIT FUNCTIONS RANGE  @G382P2F
*                           OF LPNS                            @G382P2F
EEDFREE  EQU   X'78'        EED PROCESSING TO FREE UNNEEDED    @G382P2F
*                           EEDS LPNS                          @G382P2F
FREERTCA EQU   X'79'        FREEMAIN ACQUIRED SDWA LPN         @G382P2F
EEDFREE2 EQU   X'7A'        EED PROCESSING TO FREE UNNEEDED    @G382P2F
*                           EEDS LPN (FIRST CALL FROM          @G382P2F
*                           SRBTSKDQ)                          @G382P2F
EEDFREE3 EQU   X'7B'        EED PROCESSING TO FREE UNNEEDED    @G382P2F
*                           EEDS LPN (SECOND CALL FROM         @G382P2F
*                           SRBTSKDQ)                          @G382P2F
EEDFREE4 EQU   X'7C'        EED PROCESSING TO FREE UNNEEDED    @G382P2F
*                           EEDS LPN (THIRD CALL FROM          @G382P2F
*                           SRBTSKDQ)                          @G382P2F
RT1EXTHI EQU   X'95'        ENDING OF EXIT FUNCTOPMS RANGE OF  @G382P2F
*                           LPNS                               @G382P2F
         MEND           */
*%RT1WPLS: ;
*     %IF RTM1WA='NO'
*       %THEN %GOTO RTMCDCL;
*     /***************************************************************/
*     /*THE RTM1WA IS USED BY THE RTM1 (MODULES IEAVTRTM, IEAVTRTS)  */
*     /*WHENEVER THE RTM1 IS OPERATING IN SECOND LEVEL INTERRUPT     */
*     /*HANDLER MODE.  THE FIXED ASSIGMENTS SECTION OF THE WA IS USED*/
*     /*FOR RECOVERY.  THAT IS, SHOULD AN ERROR OCCUR DURING RTM1'S  */
*     /*PROCESSING, THIS PART OF THE RTM1WA WILL CONTAIN SUFFICIENT  */
*     /*DATA TO ALLOW THE RTM1S RECOVERY ROUTINES TO RESUME NORMAL   */
*     /*PROCESSING.  THE VARIABLE SECTION OF THE WORK AREA IS SPACE  */
*     /*AVAILABLE FOR DEFINITION BY THE PRIVATE SUBFUNCTIONS OF THE  */
*     /*RTM1 (I.E. IT IS MAPPED BY THE VARIOUS SUBFUNCTIONS).        */
*     /***************************************************************/
*     DECLARE
*        1 RT1W DEFINED(FRRSRTMW),     /*THE RTM1 WORK AREA          */
*          2 RT1WTRTM,                 /*PART OF RT1W USED FROM
*                                        IEAVTRTM ON         @G382P2F*/
*           3 RT1WNPRS BDY(WORD),      /*DATA NOT PRESERVED ON VALID
*                                        ANTICIPATED RECURSION       */
*              4 RT1WLPTA(6) FIXED(31),/*TRACKING AREA FOR LOGICAL
*                                        PHASE RECOVERY PROCESSING
*                                        MAPPED BY RT1TRACK BELOW    */
*              4 RT1WPSW1 PTR(31),     /*CHECKPOINTED PTR TO PSW1    */
*              4 RT1WPSW2 PTR(31),     /*CHECKPOINTED PTR TO PSW2    */
*              4 RT1WVARI(5) PTR(31),  /*VARIABLE FIELDS IN WA       */
*           3 RT1WPRSV BDY(WORD),      /*DATA TO BE PRESERVED ON
*                                        VALID ANTICIPATED RECURSION */
*              4 RT1WRTCA PTR(31),     /*POINTR TO THE SDWA CURNTLY IN
*                                        USE (USED BY RTS)   @Z40FQXH*/
*              4 RT1WSRBR PTR(31),     /*POINTER TO THE CHAIN PREFIX
*                                        (SEE RTMCHDR) AND SDWA
*                                        AQUIRED FROM SQA BY IEAVTRTS
*                                                            @G382PPY*/
*              4 RT1WEED PTR(31),      /*POINTER TO EEDS ACQUIRED    */
*              4 RT1WENTR FIXED(31),   /*ENTRY POINT DATA            */
*                 5 RT1WMODE BIT(8),   /*SYSTEM MODE AT TIME OF ERROR
*                                        (SEE MODEBYTE AT THE END OF
*                                        RT1W FOR A DESCRIPTION OF
*                                        THIS BYTE)                  */
*                 5 RT1WSRMD BIT(8),   /*SYSTEM RECOVERY MODE        */
*                 5 RT1WCOVR BIT(8),   /*PRESERVED CARRY OVER INFORM-
*                                        ATION ON VALID RECURSIONS    */
*                   6 RT1WCLUP BIT(1), /*CLEANUP AND PERCOLATE
*                                        INDICATION                  */
*                   6 RT1WRTM BIT(1),  /*IF ON, INDICATES RTM'S FRR
*                                        WAS IN CONTROL AT THE TIME
*                                        OF THE ERROR                */
*                   6 RT1WFAIL BIT(1), /*IF ON, RTM1 ISSUED A CMSET
*                                        MACRO WHICH EITHER ISSUED
*                                        ABEND OR RETURNED A NON ZERO
*                                        RETURN CODE         @G382PPY*/
*                   6 RT1WRSTW BIT(1), /*IF ON, RTS HAS ALREADY
*                                        CLEARED THE CVT RESTART WORD
*                                        (CVTRSTWD)          @G382PPY*/
*                   6 RT1WEREX BIT(1), /*USED IN EEDPROC TO INDICATE
*                                        AN ERRORID HAS BEEN PLACED
*                                        IN AN EED. IT IS SET OFF
*                                        BEFORE EXITING FROM EEDPROC
*                                                            @G17EP5W*/
*                   6 RT1NODMP BIT(1), /*SET BY SLIP TO INFORM DUMPING
*                                        PROGRAMS THAT DUMP REQUESTS
*                                        SHOULD BE IGNORED FOR THIS
*                                        INVOKATION OF RTM   @G33NPHE*/
*                   6 RT1WSLST BIT(1), /*IF ON, AT LEAST ONE FRR HAS
*                                        SUPPLIED DUMP RANGES TO RTS
*                                        OR DUMP RANGES WERE SUPPLIED
*                                        BY THE ISSUER OF ABEND
*                                                            @G382PPY*/
*                   6 RT1WGFAI BIT(1), /*IF ON, RTS ATTEMPTED TO
*                                        ACQUIRE AN SDWA FROM SQA BUT
*                                        THE GETMAIN REQUEST WAS
*                                        UNSUCCESSFUL        @G382PPY*/
*                 5 RT1WLPN PTR(8),    /*INITIAL LOGICAL PHASE NUMBER
*                                        ON ENTRY TO RTM     @ZA20321*/
*              4 RT1WASCB PTR(31),     /*ASCB ADDR OF CML ADDRESS
*                                        SPACE               @G382P1F*/
*              4 RT1WENT2 CHAR(4),     /*ENTRY POINT DATA    @G382P2F*/
*                 5 RT1WCOV2 BIT(8),   /*PRESERVED CARRY OVER
*                                        INFORMATION ON VALID
*                                        RECURSIONS          @ZA20321*/
*                   6 RT1WSKIP BIT(1), /*IF ON, AT LEAST ONE FRR IN
*                                        THE PERCOLATION PATH HAS
*                                        BEEN SKIPPED        @G382P2F*/
*                   6 RT1WRMGR BIT(1), /* IF ON, RTM1 IS PROCESSING THE
*                                        FRR STACK ON  BEHALF OF A
*                                        CALLRTM TYPE=RMGRCML
*                                                            @G382PPY*/
*                 5 RT1WRSV  CHAR(3),  /*RESERVED            @G382P2F*/
*          2 RT1WTRT1,                 /*PART OF RT1W USED FROM
*                                        IEAVTRT1 ON         @G382P2F*/
*           3 RT1WXM  CHAR(8),         /*CROSS MEMORY INFORMATION AT
*                                        TIME OF ERROR       @G382P2F*/
*              4 RT1WCR3  CHAR(4),     /*CONTROL REGISTER 3 AT TIME
*                                        OF ERROR            @G382P2F*/
*                 5 RT1WKM   CHAR(2),  /*KEY MASK            @G382P2F*/
*                 5 RT1WSAS  CHAR(2),  /*SASID               @G382P2F*/
*              4 RT1WCR4  CHAR(4),     /*CONTROL REGISTER 4 AT TIME
*                                        OF ERROR            @G382P2F*/
*                 5 RT1WAX   CHAR(2),  /*AUTHORIZATION INDEX @G382P2F*/
*                 5 RT1WPAS  CHAR(2),  /*PASID               @G382P2F*/
*           3 RT1WSAV1 PTR(31),        /*WORK/SAVE AREA FOR RTM
*                                                            @G382P2F*/
*        1 RT1RTRN  DEFINED(FRRSRTMW), /*THE RTM1 WORK AREA IS USED TO
*                                        CONTAIN RETRY REGISTERS IF
*                                        AN FRR SUCCESSFULLY RETRYS. A
*                                        LM INTRUCTION IS ISSUED FROM
*                                        THE WA BEFORE THE RETRY ROU-
*                                        TIME IS GIVEN CONTROL       */
*          2 *        FIXED(31),        /*FIRST WORD NOT OVERLAID    */
*          2 RT1RTRRG CHAR(64) BDY(WORD),/*16 REGISTERS FOR RETRY    */
*            3 RT1R0R14 CHAR(60),       /*RETRY REGS 0 THRU 14       */
*            3 RT1RTYAD PTR(31),        /*RETRY ADDRESS IN REG15 SLOT
*                                                            @G382P1F*/
*          2 *        CHAR(16),         /* RESERVED          @G382P1F*/
*          2 RT1RTRMK CHAR(4),          /* RETRY MASK        @G382P1F*/
*            3 *      CHAR(3),          /* RESERVED          @G382P1F*/
*            3 RT1RTMSK CHAR(1);        /* RETRY MASK-PASSED FROM
*                                          IEAVTRTM TO IEAVTRT1
*                                                            @G382P1F*/
*     /***************************************************************/
*     /*THE RTM1 TRACKING AREA IS LOCATED IN ONE OF TWO PLACES       */
*     /*DEPENDING ON THE TYPE OF RECOVERY APPROPRIATE FOR ANY SECTION*/
*     /*OF THE RTM1'S PROCESSING. WHEN ACTING AS A SECOND LEVEL      */
*     /*INTERRUPT HANDLER, THE RTM1 DOES ITS TRACKING IN THE RTM1WA. */
*     /*WHEN OPERATING IN A MODE THAT ALLOWS FRR PROTECTION, THE     */
*     /*RTM1 DOES ITS TRACKING IN THE FRRPARMS FIELD ASSIGNED BY     */
*     /*THE SETFRR MACRO. A COMMON MAPPING IS PROVIDED TO ALLOW FOR  */
*     /*INDEPENDENCE IN THE MAINLINE RTM1 AND IN THE RECOVERY ROUTINE*/
*     /*WITH RESPECT TO THE TYPE OF RECOVERY SCHEME EMPLOYED.        */
*     /***************************************************************/
*     DECLARE
*        1 RT1TRACK BASED,             /*COMMON TRACKING AREA MAPPING
*                                        FOR RTM1 RECOVERY           */
*           2 RT1TRECC FIXED(31),      /*RECURSION CONTROL DATA      */
*              3 RT1TLPN PTR(8),       /*LOGICAL PHASE NUMBER        */
*              3 RT1TLPID PTR(8),      /*LOGICAL PHASE  REC RTN ID   */
*              3 RT1TENPT CHAR(1),     /*ORIGINAL ENTRY POINT        */
*              3 RT1TACQR BIT(8),      /*RESOURCES ACQUIRED BY RTM1  */
*                4 RT1TDISP BIT(1),    /*DISPATCHER LOCK ACQUIRED    */
*                4 RT1TLLCK BIT(1),    /*LOCAL LOCK ACQUIRED BY RT1  */
*                4 RT1TRETY BIT(1),    /*RT1 ATTEMPTED RETRY         */
*                4 RT1TSBIT BIT(1),    /*PSW S-BIT FOR RETRY ROUTINE.
*                                        USED BY RT1 & RTM   @G382P1F*/
*                4 RT1TSERP BIT(1),    /*IF ON, SERIALIZE SRB TO TASK
*                                        PERCOLATION (USED TO INDICATE
*                                        SDWASERP WAS SET)   @G382P2F*/
*                4 RT1TTRTS BIT(1),    /*IF ON, IEAVTRTM HAS GONE TO
*                                        IEAVTRTS            @G382P1F*/
*                4 RT1TNSS BIT(1),     /*IF ON, RT1 WAS ENTERED WITH
*                                        PSANSS BIT ON       @ZMB0189*/
*           2 RT1TREGS(5) PTR(31),     /*CHECKPOINTED REGISTERS      */
*     /***************************************************************/
*     /* LOGICAL PHASE NUMBERS USED WITH THE RT1TLPN FIELD.          */
*     /* THESE NUMBERS ARE ASSIGNED TO THE VARIOUS UNIQUE PHASES     */
*     /* OF THE RTM1 TO ASSIST IN RECOVERY ACTIONS PERFORMED BY      */
*     /* THE RTM1S FRRS OR LOGICAL PHASE RECOVERY ROUTINES (LPRRS).  */
*     /***************************************************************/
*        VALIDREC PTR(8) CONSTANT(255),/*ANTICIPATED VALID RECURSION
*                                        IN RTM MGR          @ZA20321*/
*        FRRRECUR PTR(8) CONSTANT(254),/*ANTICIPATED VALID RECURSION
*                                        IN AN FRR           @ZA20321*/
*        RMGRCML PTR(8) CONSTANT(253), /*ANTICIPATED VALID RECURSION
*                                        FOR INITIAL ENTRY OF
*                                        CALLRTM TYPE=RMGRCML
*                                                            @G382PPY*/
*        RT1MGRLO PTR(8) CONSTANT(0),  /*BEGINNING OF MANAGEMENT FUNC-
*                                        TIONS RANGE OF LPNS         */
*        MGRINIT PTR(8) CONSTANT(1),   /*LPN FOR MGR INITIALIZE PHASE*/
*        POSTRTS PTR(8) CONSTANT(2),   /*COMPLETION OF SYSTEM RECOVERY
*                                        PROCESSING LPN              */
*        NORTS PTR(8) CONSTANT(3),     /*NO SYSTEM RECOVERY PROCESSING
*                                        LPN                         */
*        CPURSTRT PTR(8) CONSTANT(4),  /*ISSUE RESTART ON LOOPING CPU
*                                        LPN                         */
*        NORSTRT PTR(8) CONSTANT(5),   /*UNSUCCESSFUL ISSUANCE OF
*                                        RESTART LPN                 */
*        RT1MGRHI PTR(8) CONSTANT(29), /*ENDING OF MANAGEMENT FUNC-
*                                        TIONS RANGE OF LPNS         */
*        RT1MCHLO PTR(8) CONSTANT(30), /*BEGINNING OF MACHCK FUNC-
*                                        TIONS RANGE OF LPNS         */
*        RTHEEDS  PTR(8) CONSTANT(32), /*RTHS EED PHASE LPN          */
*        RTHTIMER PTR(8) CONSTANT(33), /*RTHS CLOCK REPAIR PHASE LPN */
*        RTHSTRG1 PTR(8) CONSTANT(34), /*RTHS STORAGE REPAIR PHASE 1
*                                        LPN                         */
*        RTHPARMS PTR(8) CONSTANT(35), /*RTHS RSR PARAMETER LIST
*                                        PHASE LPN                   */
*        RTHSTRG2 PTR(8) CONSTANT(36), /*RTHS STORAGE REPAIR PHASE 2
*                                        LPN                         */
*        RTHRECRD PTR(8) CONSTANT(37), /*RTHS ERROR RECORDING PHASE
*                                        LPN                         */
*        RTHSOFTW PTR(8) CONSTANT(38), /*RTHS SOFTWARE INFORMATION
*                                        PHASE LPN                   */
*        RTHEXIT  PTR(8) CONSTANT(39), /*RTHS EXIT PHASE LPN         */
*        RT1MCHHI PTR(8) CONSTANT(59), /*ENDING OF MACHINE CHECK FUNC-
*                                        TIONS RANGE OF LPNS         */
*        RT1SRMLO PTR(8) CONSTANT(60), /*BEGINNING OF RTS FUNCTIONS
*                                        RANGE OF LPNS       @Z40FQXH*/
*        RT1SRMHI PTR(8) CONSTANT(89), /*ENDING OF RTS FUNCTIONS
*                                        RANGE OF LPNS       @Z40FQXH*/
*        RT1RESLO PTR(8) CONSTANT(90), /*BEGINNING OF RESCHEDULE FUNC-
*                                        TIONS RANGE OF LPNS         */
*        RESRTYLO PTR(8) CONSTANT(90), /*BEGINNING OF RESCHEDULE LPNS
*                                        FOR WHICH RETRY IS POSSIBLE */
*        SRBEED PTR(8) CONSTANT(90),   /*EED PROCESSING TO OBTAIN AN
*                                        SRB LPN                     */
*        XMEEDS PTR(8) CONSTANT(91),   /*EED PROCESSING FOR XMABTRM
*                                        LPN                         */
*        RT2EEDS PTR(8) CONSTANT(92),  /*EED PROCESSING FOR RTM2
*                                        RESCHEDULE LPN              */
*        RT1EEDS PTR(8) CONSTANT(93),  /*EED PROCESSING FOR RTM1
*                                        RESCHEDULE LPN              */
*        RESRTYHI PTR(8) CONSTANT(93), /*END OF RESCHEDULE LPNS FOR
*                                        WHICH RETRY IS POSSIBLE     */
*        RESCHED PTR(8) CONSTANT(94),  /*RESCHEDULE FUNCTION LPN     */
*        FREESRB PTR(8) CONSTANT(96),  /*SRB PROCESSING PRIOR TO
*                                        SCHEDULE LPN                */
*        SRBCOMP PTR(8) CONSTANT(97),  /*SRB PROCESSING COMPLETE LPN */
*        RESRTM2 PTR(8) CONSTANT(98),  /*RESCHEDULE RTM2 LPN         */
*        TCBTERM PTR(8) CONSTANT(99),  /*LOGICAL TERMINATION OF TASK
*                                        LPN                         */
*        RESRTM1 PTR(8) CONSTANT(100), /*RESCHEDULE RTM1 LPN         */
*        MEMTERM PTR(8) CONSTANT(101), /*ENQUEUE OF ASCB ON MEMTERM
*                                        QUEUE LPN                   */
*        MEMTCOMP PTR(8) CONSTANT(102), /*MEMTERM COMPLETION LPN     */
*        RT1RESHI PTR(8) CONSTANT(119),/*ENDING OF RESCHEDULE FUNC-
*                                        TIONS RANGE OF LPNS         */
*        RT1EXTLO PTR(8) CONSTANT(120),/*BEGINNING OF EXIT FUNC-
*                                        TIONS RANGE OF LPNS         */
*        EEDFREE PTR(8) CONSTANT(120), /*EED PROCESSING TO FREE
*                                        UNNEEDED EEDS LPN           */
*        FREERTCA PTR(8) CONSTANT(121), /*FREEMAIN ACQUIRED SDWA LPN
*                                                            @Z40FQXH*/
*        EEDFREE2 PTR(8) CONSTANT(122), /*EED PROCESSING TO FREE
*                                        UNNEEDED EEDS LPN (FIRST CALL
*                                        FROM SRBTSKDQ)      @G382P2F*/
*        EEDFREE3 PTR(8) CONSTANT(123), /*EED PROCESSING TO FREE
*                                        UNNEEDED EEDS LPN (SECOND CALL
*                                        FROM SRBTSKDQ)      @G382P2F*/
*        EEDFREE4 PTR(8) CONSTANT(124), /*EED PROCESSING TO FREE
*                                        UNNEEDED EEDS LPN (THIRD CALL
*                                        FROM SRBTSKDQ)      @G382P2F*/
*        RT1EXTHI PTR(8) CONSTANT(149);/*ENDING OF EXIT FUNC-
*                                        TIONS RANGE OF LPNS         */
*%RTMCDCL:;
*     %IF RTMC='NO'
*       %THEN %GOTO ENPTDCL;
* /*******************************************************************/
* /*  THE FOLLOWING HEADER PRECEEDS ALL SDWAS GETMAINED BY   @G382PPY*/
* /*  RTM1. IT IS USED TO ANCHOR THE SDWAS OFF THE ASCB SO   @G382PPY*/
* /*  THAT THEY MAY BE FREED AT MEMORY TERMINATION TIME.     @G382PPY*/
* /*  THIS WOULD BE NECESSARY IF THEY WERE NOT SUCCESSFULLY  @G382PPY*/
* /*  FREED AT THE END OF RTM1 PROCESSING.                   @G382PPY*/
* /*******************************************************************/
* DCL 1 RTMCHDR BASED,              /*                       @G382PPY*/
*       2 RTMCCPTR PTR(31),         /*ADDRESS OF NEXT BLOCK ON
*                                     THE CHAIN              @G382PPY*/
*       2 RTMCSBLN FIXED(32),       /*SUBPOOL AND LENGTH OF AREA
*                                                            @G382PPY*/
*         3 RTMCSUBP PTR(8),        /*THE STORAGE SUBPOOL NUMBER
*                                                            @G382PPY*/
*         3 RTMCLNGT PTR(24);       /*THE STORAGE LENGTH. IT INCLUDES
*                                     THE LENGTH OF THIS HEADER AND
*                                     THE LENGTH OF THE SDWA @G382PPY*/
*%ENPTDCL:;
*     %IF ENPT='NO'
*       %THEN %GOTO RTMBDCL;
*     /***************************************************************/
*     /* THE FOLLOWING CONSTANTS ARE USED WITH THE RT1TENPT FIELD,   */
*     /* THE EEDERTYP FIELD, THE TCBERTYP FIELD, RTM1'S FUNCTION     */
*     /* REGISTER, AND THE RTITLPID FIELD.                           */
*     /***************************************************************/
*     DECLARE
*        SLIHLOW  PTR(8) CONSTANT(1),  /*BEGIN RANGE OF SLIH MODE EP */
*        RT1WPCFL PTR(8) CONSTANT(1),  /*PCFLIH ENTRY PT             */
*        RT1WREST PTR(8) CONSTANT(2),  /*RESTART ENTRY PT            */
*        RT1WSVC  PTR(8) CONSTANT(3),  /*SVCFLIH ENTRY PT            */
*        RT1WDAT  PTR(8) CONSTANT(4),  /*DATERR ENTRY PT             */
*        RT1WMCHR PTR(8) CONSTANT(5),  /*MACHINE CHECK REENTRY       */
*        RT1WSTM2 PTR(8) CONSTANT(6),  /*STERM REENTRY       @G381P2F*/
*        SLIHHI   PTR(8) CONSTANT(9),  /*END   RANGE OF SLIH MODE EP */
*        SRVCLOW  PTR(8) CONSTANT(10), /*BEGIN RANGE OF SRVCE RTN EP */
*        MODELOW  PTR(8) CONSTANT(10), /*BEGIN RANGE OF RESCH MODE   */
*        RT1WSTM1 PTR(8) CONSTANT(10), /*STERM ENTRY PT      @G381P2F*/
*        RT1WABT1 PTR(8) CONSTANT(11), /*ABTERM ENTRY PT             */
*        RT1WABT2 PTR(8) CONSTANT(12), /*CVTBTRM ENTRY PT            */
*        RT1WABT3 PTR(8) CONSTANT(13), /*XMABTRM ENTRY PT            */
*        ABTRMCUR PTR(8) CONSTANT(14), /*ABTERM THE CURRENT TCB      */
*        MODEHI   PTR(8) CONSTANT(14), /*END   RANGE OF RESCHD MODE  */
*        RT1WMEMT PTR(8) CONSTANT(15), /*MEMTERM ENTRY PT            */
*        RT1WXMAB PTR(8) CONSTANT(16), /*CROSS MEMORY ABTERM EP      */
*        RSCHDCPU PTR(8) CONSTANT(17), /*RESCHEDULE RTM1 ON OTHER CPU*/
*        SRVCHI   PTR(8) CONSTANT(19), /*END   RANGE OF SRVCE RTN EP */
*        RT1WMACH PTR(8) CONSTANT(20), /*MACHCK ENTRY PT             */
*        TAKEEXIT PTR(8) CONSTANT(30), /*FORCE PREMATURE EXIT        */
*        RT1RETRY PTR(8) CONSTANT(32), /*A RETRY EXIT IS TO BE TAKEN */
*        RT1MCHEX PTR(8) CONSTANT(33), /*A MCH EXIT IS TO BE TAKEN   */
*        RT1RESUM PTR(8) CONSTANT(34), /*RESTART RESUME TO BE TAKEN  */
*        RT1DISP  PTR(8) CONSTANT(35), /*DISPATCHER EXIT TO BE TAKEN */
*        RT1SRBEX PTR(8) CONSTANT(36), /*AN SRB EXIT IS TO BE TAKEN  */
*        RT1EXPRO PTR(8) CONSTANT(37), /*EXIT PROLOG EXIT TO BE TAKEN*/
*        RT1RET   PTR(8) CONSTANT(38), /*RETURN TO CALLER TO BE TAKEN*/
*        RECOVRY1 PTR(8) CONSTANT(1);  /*LPID TO INDICATE SIMPLEST
*                                        LEVEL OF RECOVERY           */
*%RTMBDCL:;
*     %IF RTMB='NO'
*       %THEN %GOTO MODEDCL;
*     /***************************************************************/
*     /* THE RTM BRANCH TABLE RESIDES IN MODULE IEAVTRT1 AND IS USED */
*     /* BY THE CALLRTM MACRO TO CALCULATE THE CORRECT ENTRY POINT   */
*     /* INTO THE RTM1 BASED ON USER SUPPLIED PARAMETERS TO THE      */
*     /* MACRO. THIS MAPPING IS PROVIDED TO ALLOW NIP TO BUILD A     */
*     /* DUMMY BRANCH TABLE TO INTERCEPT ALL CALLRTM REQUESTS DURING */
*     /* NIP PROCESSING.                                             */
*     /***************************************************************/
*     DECLARE
*      1 RTMBRTAB BDY(WORD) BASED(CVTBTERM),/*RTM BRANCH TABLE       */
*        2 RTMBTERM CHAR(8) BDY(WORD), /*INITIAL ENTRY POINT INSTRUC-
*                                        TIONS FOR CVTBTERM BRANCH   */
*          3 RTMBBALR CHAR(2),         /* BALR 15,0 INSTRUCTION      */
*          3 RTMBBRAN CHAR(4),         /* BRANCH INSTRUCTION         */
*          3 RTMBPAD2 CHAR(2),         /*2 BYTES OF PADDING          */
*        2 RTMBDAT  PTR(31),           /*ENTRY IF TYPE = DATERR      */
*        2 RTMBREST PTR(31),           /*ENTRY IF TYPE = RESTART     */
*        2 RTMBMACH PTR(31),           /*ENTRY IF TYPE = MACHCK      */
*        2 RTMBSVC  PTR(31),           /*ENTRY IF TYPE = SVCERR      */
*        2 RTMBSTRM PTR(31),           /*ENTRY IF TYPE = STERM
*                                                            @G381P2F*/
*        2 RTMBCABT PTR(31),           /*ENTRY IF TYPE = ABTERM AND
*                                        NO ASID WAS PROVIDED        */
*        2 RTMBMEMT PTR(31),           /*ENTRY IF TYPE = MEMTERM     */
*        2 RTMBPROG PTR(31),           /*ENTRY IF TYPE = PROGCK      */
*        2 RTMBACR  PTR(31),           /*ENTRY IF TYPE = ACR         */
*        2 RTMBXABT PTR(31),           /*ENTRY IF TYPE = ABTERM AND
*                                        AN ASID WAS PROVIDED        */
*        2 RTMBRMGR PTR(31);           /*ENTRY IF TYPE = RMGRCML
*                                                            @G381P2F*/
*%MODEDCL:;
*     %IF MODE='NO'
*       %THEN %GOTO EEDSDCL;
*     /***************************************************************/
*     /* THE FOLLOWING STRUCTURE DEFINES A ONE BYTE FIELD WHICH IS   */
*     /* USED TO MAP THE CONTENTS OF THE FOLLOWING FIELDS: RT1WMODE  */
*     /* AND EEDERMOD.                                               */
*     /***************************************************************/
*     DECLARE
*       1 MODEBYTE PTR(8) BASED,       /*SYSTEM MODE AT ERROR TIME   */
*         2 MODESUPR BIT(1),           /*SUPERVISOR CONTROL MODE     */
*         2 MODEDIS BIT(1),            /*PHYSICALLY DISABLED MODE    */
*         2 MODEGSPN BIT(1),           /*GLOBAL SPIN LOCK MODE       */
*         2 MODEGSUS BIT(1),           /*GLOBAL SUSPEND LOCK MODE    */
*         2 MODELOC BIT(1),            /*LOCALLY LOCKED MODE         */
*         2 MODETYP1 BIT(1),           /*TYPE 1 SVC MODE             */
*         2 MODESRB BIT(1),            /*SRB MODE                    */
*         2 MODETCB BIT(1);            /*TASK MODE                   */
*%EEDSDCL:;
*     %IF EEDS='NO'
*       %THEN %GOTO RT1WEND;
*     /***************************************************************/
*     /* EXTENDED ERROR DESCRIPTORS (EEDS) ARE USED TO PASS DATA     */
*     /* CONCERNING AN ERROR TO THE VARIOUS COMPONANTS OF THE RTM.   */
*     /* EEDS ARE ALLOCATED VIA GETCELL FROM THE RT1 QUICKCELL POOL. */
*     /* THE FORMAT OF THE EEDS IS GOVERNED BY THE TYPE OF DATA IT   */
*     /* CONTAINS. THERE IS AN EED TYPE FOR REGISTERS, PSW,          */
*     /* AND CROSS MEMORY INFORMATION,                       @G381P2F*/
*     /* FOR DUMP OPTIONS, AND FOR MACHINE CHECK REPAIR INFORMATION. */
*     /* EACH EED HAS A COMMON HEADER THAT CONTAINS A FORWARD CHAIN  */
*     /* POINTER, AN INDICATION OF THE TYPE OF  EED, AND INFORMATION */
*     /* CONCERNING THE CHAIN OF EEDS                                */
*     /***************************************************************/
*     DECLARE
*       1 EED CHAR(100) BDY(WORD) BASED, /*EXTENDED ERROR DESCRIPTOR
*                                                            @G381P2F*/
*         2 EEDFWRDP PTR(31),          /*POINTER TO NEXT EED ON CHAIN
*                                        OR ZERO                     */
*         2 EEDDES  CHAR(4) BDY(WORD), /*DESCRIPTION OF EED CONTENTS */
*           3 EEDID   CHAR(1),         /*TYPE OF INFORMATION IN EED  */
*           3 EEDFLAGS CHAR(1),        /*FLAGS DESCRIBING INFORMATION
*                                        IN EEDS             @G17EP5W*/
*            4 EEDERFL BIT(1),         /*ON MEANS ERRORID IN EED
*                                        THE ERRORID MAY BE IN THE
*                                        DUMPS OPTIONS EED, THE
*                                        HARDWARE REPAIR EED, OR MAY
*                                        RESIDE BY ITSELF IN AN EED
*                                                            @G17EP5W*/
*            4 EEDNODMP BIT(1),        /*USED TO COMMUNICATE DUMP
*                                      SUPPRESSION BY SLIP FROM RTM1
*                                      TO RTM2               @G33NPHE*/
*            4 EEDSPI   BIT(1),        /*ON MEANS THIS EED IS PART
*                                      OF AN SPI CONTROL BLOCK (NOT
*                                      FROM THE EED POOL)    @G33NPHE*/
*            4 EEDSRBTP BIT(1),        /*ON MEANS THIS EED WAS CREATED
*                                      FOR SRB-TO-TASK PERCOLATION
*                                      PROCESSING            @G388PPY*/
*            4 *       BIT(4),         /*RESERVED            @G388PPY*/
*           3 *       CHAR(2),         /*RESERVED            @G17EP5W*/
*         2 EEDERROR CHAR(4) BDY(WORD),/*DESCRIPTION OF THE ERROR
*                                        WHICH NECESSITATETED EEDS   */
*           3 EEDMODE  PTR(8),         /*SYSTEM MODE AT TIME OF ERR  */
*           3 EEDERTYP  CHAR(1),       /*ENTRY PT USED BY RTM1       */
*           3 EEDASID FIXED(15),       /*ASID OF ORIGINATING MEMORY
*                                        IN CROSS MEMORY ABENDS      */
*         2 EEDVARBL CHAR(88) BDY(WORD),/*VARIABLE PART OF EED, MAPPED
*                                        SEPERATELY BELOW    @G381P2F*/
*       /*************************************************************/
*       /* CONSTANTS USED WITH THE EEDID AND TCBRTM12 FIELDS         */
*       /*************************************************************/
*       EEDNULL PTR(31) CONSTANT(1),   /*THE TCBRTM12 FIELD IS SET TO
*                                        THIS VALUE IF AN EED COULD
*                                        NOT BE OBTAINED             */
*       REGSPTYP PTR(8) CONSTANT(1),   /*INDICATES THE EEDVARBL FIELD
*                                        IS MAPPED BY EEDREGSP       */
*       DUMPOTYP PTR(8) CONSTANT(2),   /*INDICATES THE EEDVARBL FIELD
*                                        IS MAPPED BY EEDDUMPO       */
*       HWREPTYP PTR(8) CONSTANT(3),   /*INDICATES THE EEDVARBL FIELD
*                                        IS MAPPED BY EEDHWREP       */
*       ERRIDTYP PTR(8) CONSTANT(4),   /*INDICATES THE EEDVARBL FIELD
*                                        IS MAPPED BY EEDERRID ONLY
*                                                            @G17EP5W*/
*       DUMPXTYP PTR(8) CONSTANT(5),   /*INDICATES THE EEDVARBL FIELD
*                                        IS MAPPED BY EEDDUMPX
*                                                            @G382P2F*/
*       /*************************************************************/
*       /*                                                           */
*       /*       CONSTANT USED TO DEFINE SIZE OF STANDARD EED AREA   */
*       /*                                                           */
*       /*************************************************************/
*       EEDBASE  FIXED(15) CONSTANT(12),/*DEFINES LENGTH OF THE FIXED
*                                         PORTION OF THE EED @G17EP5W*/
*       /*************************************************************/
*       /*                                                           */
*       /*   REGSPTYP EED--REGISTERS, PSW, AND CROSS MEMORY          */
*       /*                 INFORMATION AT THE TIME OF ERROR          */
*       /*                                                   @G381P2F*/
*       /*************************************************************/
*       1 EEDREGSP DEF(EEDVARBL) CHAR(88) BDY(WORD), /*REGISTERS, PSW,
*                                        AND CROSS MEMORY INFO AT
*                                        TIME OF ERROR       @G381P2F*/
*         2 EEDREGS CHAR(64) BDY(WORD),/*REGISTERS AT TIME OF ERROR  */
*           3 EEDREG0  PTR(31),        /*REGISTER 0  SLOT            */
*           3 EEDREG1  PTR(31),        /*REGISTER 1  SLOT            */
*           3 EEDREG2  PTR(31),        /*REGISTER 2  SLOT            */
*           3 EEDREG3  PTR(31),        /*REGISTER 3  SLOT            */
*           3 EEDREG4  PTR(31),        /*REGISTER 4  SLOT            */
*           3 EEDREG5  PTR(31),        /*REGISTER 5  SLOT            */
*           3 EEDREG6  PTR(31),        /*REGISTER 6  SLOT            */
*           3 EEDREG7  PTR(31),        /*REGISTER 7  SLOT            */
*           3 EEDREG8  PTR(31),        /*REGISTER 8  SLOT            */
*           3 EEDREG9  PTR(31),        /*REGISTER 9  SLOT            */
*           3 EEDREG10 PTR(31),        /*REGISTER 10 SLOT            */
*           3 EEDREG11 PTR(31),        /*REGISTER 11 SLOT            */
*           3 EEDREG12 PTR(31),        /*REGISTER 12 SLOT            */
*           3 EEDREG13 PTR(31),        /*REGISTER 13 SLOT            */
*           3 EEDREG14 PTR(31),        /*REGISTER 14 SLOT            */
*           3 EEDREG15 PTR(31),        /*REGISTER 15 SLOT            */
*         2 EEDPSW CHAR(16) BDY(WORD), /*EC MODE PSW + ILC INT CODE
*                                        AND TRANSLATION ADDRESS     */
*          3 EEDPSW1 CHAR(8) BDY(WORD),/*FIRST HALF OF PSW           */
*           4 EEDPSWMK FIXED(31),      /*SYTEM AND PROG MASK         */
*           4 EEDPSWIC PTR(31),        /*INSTRUCTION COUNTER         */
*          3 EEDPSW2 CHAR(8) BDY(WORD),/*SECND HALF OF PSW           */
*           4 EEDINILC FIXED(31),      /*INTERP CODE AND ILC         */
*             5 *       CHAR(1),       /*ALWAYS SET TO ZERO          */
*             5 EEDILC  PTR(8),        /*INSTRUCTION LEN COUNTER -
*                                        THE NUMBER OF BYTES TO
*                                        SUBTRACT FROM THE IC TO GET
*                                        LAST INSTRUCTION EXECUTED   */
*             5 EEDINTCD FIXED(16),    /*INTERRUPT CODE              */
*           4 EEDTRANS PTR(31),        /*TRANSLATION EXCEPTION ADDR  */
*         2 EEDXM   CHAR(8) BDY(WORD), /*CROSS MEMORY INFO   @G381P2F*/
*          3 EEDXMCR3 CHAR(4),         /*CONTROL REGISTER 3  @G381P2F*/
*          3 EEDXMCR4 CHAR(4),         /*CONTROL REGISTER 4  @G381P2F*/
*       /*************************************************************/
*       /*                                                           */
*       /*                DUMPOTYP EED--DUMP OPTIONS                 */
*       /*                                                           */
*       /*************************************************************/
*       1 EEDDUMPO CHAR(64) DEF(EEDVARBL) BDY(WORD), /*DUMP OPTIONS LEN
*                                        OF THIS AREA IS DEPENDENT ON
*                                        THE FORMAT OF THE SNAP PARM
*                                        LIST AND THE RTCA STARTING
*                                        AT LABEL SDWADUMP   @G382P2F*/
*         2 EEDSCDMP CHAR(8),          /*DUMP PARAMETERS COMMON TO THE
*                                        SNAP AND SDWA MAPPINGS      */
*           3 EEDSDUMP CHAR(4),        /* DUMP CHARACTERISTICS       */
*           3 EEDSDDAT  CHAR(4),       /* SDATA/PDATA OPTIONS        */
*             4 EEDSSDAT BIT(16),      /* DUMP SYSTEM DATA           */
*             4 EEDSPDAT BIT(16),      /*DUMP PROB PROG DATA         */
*         2 EEDSDPSL CHAR(56) BDY(WORD),/*DUMP STORAGE LISTS @G382P2F*/
*           3 EEDRGS(7) CHAR(8),       /* MAX OF 7 RANGES    @G382P2F*/
*       /*************************************************************/
*       /*                                                           */
*       /*   DUMPXTYP EED--DUMP EXTENSION FOR STORAGE LISTS  @G382P2F*/
*       /*                                                           */
*       /*************************************************************/
*       1 EEDDUMPX CHAR(88) DEF(EEDVARBL) BDY(WORD),  /*     @G382P2F*/
*         2 EEDSDSLX CHAR(88) BDY(WORD),   /*                @G382P2F*/
*           3 EEDXRGS(11) CHAR(8),     /* MAX OF 11 RANGES   @G382P2F*/
*       /*************************************************************/
*       /*                                                           */
*       /*       HWREPTYP EED--HARDWARE REPAIR STATUS EED            */
*       /*                                                           */
*       /*************************************************************/
*       1 EEDHWREP CHAR(28) BDY(WORD) DEF(EEDVARBL),/*HARDWARE REPAIR
*                                        STATUS INFORMATION          */
*         2 EEDHSCKB PTR(31),          /*STARTING VRT ADR OF STOR CK */
*         2 EEDHSCKE PTR(31),          /*ENDING VIRT ADDR OF STOR CK */
*         2 EEDHMCHS PTR(8),           /*RTM1 SOFTWARE STATUS FLAGS  */
*           3 EEDHSRVL BIT(1),         /*STORAGE RANGES AND RFSA VALD*/
*           3 EEDHRCDF BIT(1),         /*MCH RCRD NOT RECORDED       */
*           3 EEDHTSVL BIT(1),         /*TIME STAMP IS VALID         */
*           3 EEDINVP BIT(1),          /*STORAGE RECONFIGURED PAGE
*                                        INVALIDATED                 */
*           3 EEDRSRC BIT(1),          /*STORAGE RECONFIGURATION
*                                        STATUS IS AVAILABLE         */
*           3 EEDHRSRF BIT(1),         /*STORAGE RECONFIGURATION NOT
*                                        NOT ATTEMPTED               */
*           3 * BIT(1),                /*RESERVED                    */
*           3 * BIT(1),                /*RESERVED                    */
*         2 EEDHMCHD PTR(8),           /*RTM1 MACHINE CHECK DATA     */
*           3 EEDHSKYF BIT(1),         /*STORAGE KEY FAILURE         */
*           3 EEDHREGU BIT(1),         /*REGISTERS UNPREDICTABLE     */
*           3 EEDHPSWU BIT(1),         /*PSW UNPREDICTABLE           */
*           3 EEDHSCK  BIT(1),         /*STORAGE DATA CHK            */
*           3 EEDHACR  BIT(1),         /*ACR IN PROGRESS             */
*           3 EEDHINSF BIT(1),         /*INSTRUCTION FAILURE         */
*           3 EEDHSOFT BIT(1),         /*SOFT ERROR                  */
*           3 EEDHTERR BIT(1),         /*TIMER ERROR                 */
*         2 EEDHCPID FIXED(15),        /*CPU ADDR OF DEAD CPU - ACR  */
*         2 EEDHRSRS PTR(16),          /*STORAGE RECONFIG STATUS
*                                        BYTES                       */
*           3 EEDHRSR1 PTR(8),         /*STORAGE RECONFIG STATUS 1   */
*             4 * BIT(6),              /*RESERVED                    */
*             4 EEDHMSER BIT(1),       /*STOR ERR ALREDY SET IN FRAME*/
*             4 EEDHCHNG BIT(1),       /*FRAME HAD CHANG INDICATOR ON*/
*           3 EEDHRSR2 PTR(8),         /*STORAGE RECONFIG STATUS 2   */
*             4 EEDHOFLN BIT(1),       /*FRAME OFFLIN OR SCHED OFFLIN*/
*             4 EEDHINTC BIT(1),       /*INTERCEPT-FRAME IS SCHEDULED
*                                        OFFLINE, EITHER STORAGE ERR
*                                        OR V=R IND ALSO ON          */
*             4 EEDHSPER BIT(1),       /*PERM ERR OCCURS IN FRAME    */
*             4 EEDHNUCL BIT(1),       /*FRAME  CONTAINS PERMANENT
*                                        RESIDENT SYSTEM STORAGE     */
*             4 EEDHFSQA BIT(1),       /*FRAME IN USE FOR SQA        */
*             4 EEDHFLSQ BIT(1),       /*FRAME IN USE FOR LSQA       */
*             4 EEDHPGFX BIT(1),       /*FRAME CONTAINS PGFIXED DATA */
*             4 EEDHVERQ BIT(1),       /*FRAME IN USE FOR V=R OR IF
*                                        EEDHINTC IS ON IS SCHED V=R */
*         2 *        PTR(15),          /*RESERVED                    */
*         2 EEDHRFSA PTR(31),          /*REAL FAILING STORAGE ADDR   */
*         2 EEDHTIME CHAR(8),          /*TIMESTAMP OF MCH RECORD     */
*       /*************************************************************/
*       /*                                                           */
*       /*   ERRIDTYP EED--ERROR ID AND FRR TO ESTAE COMMUNICATION   */
*       /*                 BUFFER EED                        @G382P2F*/
*       /*************************************************************/
*       1 EEDERMAP CHAR(88) BDY(WORD) DEF(EEDVARBL), /*ERRORID AND FRR
*                                        TO ESTAE COMMUNICATION BUFFER
*                                        INFORMATION IN EED  @G382P2F*/
*         2 *      CHAR(70),           /*MAPPED BY EEDHWREP OR BY
*                                       EEDDUMPO OR RESERVED @G17EP5W*/
*         2 EEDERRID CHAR(10) BDY(HWORD),/*ERRORID           @G17EP5W*/
*           3 EEDESEQ# CHAR(2),        /*SEQUENCE NUMBER     @G17EP5W*/
*           3 EEDECPUI FIXED(16) BDY(HWORD),/*CPU ID         @G17EP5W*/
*           3 EEDEASID CHAR(2),        /*ASID                @G17EP5W*/
*           3 EEDETIME CHAR(4),        /*TIME STAMP          @G17EP5W*/
*         2 EEDCOMU CHAR(8) BDY(WORD); /*FRR TO ESTAE COMMUNICAITON
*                                        BUFFER (FROM SDWACOMU)
*                                                            @G382P2F*/
*%RT1WEND:;
*     %DEACTIVATE RTM1WA;
*     %DEACTIVATE EEDS;
*     %DEACTIVATE RTMB;
*     %DEACTIVATE ENPT;
*     %DEACTIVATE MODE;
*     %DEACTIVATE RTMC;
