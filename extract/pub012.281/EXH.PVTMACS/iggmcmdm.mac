 /********************************************************************/
 /*                                                                  */
 /*   MACRO NAME = IGGMCMDM                                          */
 /*                                                                  */
 /*   DESCRIPTIVE NAME = VSAM CATALOG MANAGEMENT COMMONLY-USED       */
 /*                      RECORD STRUCTURES                           */
 /*                                                                  */
 /*   FUNCTION = CONTAINING MACRO FOR MANY COMMON RECORD STRUCTURE   */
 /*              DECLARATIONS USED BY VSAM CATALOG MANAGEMENT        */
 /*              ROUTINES.                                           */
 /*                                                                  */
 /*   INCLUDED MACROS = NONE                                         */
 /*                                                                  */
 /*   METHOD OF ACCESS = PL/S - RESPECIFY BASE FOR SOME STRUCTURES   */
 /*                                                                  */
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40WSXX)       @Z40WSSG*/
 /*                                                                  */
 /*   DATE OF LAST CHANGE = 23 MAY 75                        @Z40WSSG*/
 /*                                                                  */
 /********************************************************************/
 /********************************************************************/
 /*        STRUCTURE FOR THE FIXED INFORMATION IN THE RECORDS        */
 /********************************************************************/
    DECLARE
      1 CTGRBASE DEF(NREPLF) POSITION(2), /* BASE FIXED INFO @Y30SSPJ*/
        2 CNAME    CHAR(44),        /* ENTRY NAME                    */
        2 COWNID   CHAR(8),         /* OWNER ID                      */
        2 CCRE     CHAR(3),         /* CREATION DATE                 */
        2 CEXP     CHAR(3),         /* EXPIRATION DATE               */
        2 CATTR    BIT(16),         /* DATA ATTRIBUTES               */
          3 CATTR1  BIT(8),         /*NON-SHARING ATTRIBUTES @Y30SSPJ*/
            4 CSP   BIT(1),         /* SPEED                 @Y30SSPJ*/
            4 CUNIQ BIT(1),         /* UNIQUE DATA SET       @Y30SSPJ*/
            4 CREUSE BIT(1),        /* REUSABLE              @Y30SSPJ*/
            4 CERASE BIT(1),        /* ERASE                 @Y30SSPJ*/
            4 CRECOV BIT(1),        /* RECOVERABLE CATALOG   @Y30SSPJ*/
            4 CINHIB BIT(1),        /* INHIBIT UPDATE        @Y30SSPJ*/
            4 CTEMP  BIT(1),        /* TEMPORARY EXPORT      @Y30SSPJ*/
            4 CTRKOV BIT(1),        /* TRACK OVERFLOW        @Y30SSPJ*/
          3 CATTR2   BIT(8),        /* SHARE OPTIONS                 */
            4 CATTRISH BIT(2),      /* CROSS REGION SHARE OPTIONS    */
            4 CATTRSSH BIT(2),      /* CROSS SYSTEM SHARE OPTIONS    */
            4 *        BIT(2),      /* RESERVED              @Z40WSSG*/
            4 CATTISDS BIT(1),      /* INTERNAL SYSTEM D.S.  @Z40WSSG*/
            4 CNUS     BIT(1),      /* DS NOT REUSABLE       @Y30SSPJ*/
        2 COPEN BIT(8),             /* OPEN INDICATOR                */
          3 COPENDS  BIT(1),        /* OPEN DATA SET                 */
          3 *        BIT(7),        /* RESERVED                      */
        2 CBUF     FIXED(31) BDY(BYTE), /* MINIMUM BUFFER SIZE       */
        2 CSPACPRM CHAR(7),         /* SPACE PARAMETERS              */
          3 CPRIM PTR(24) BDY(BYTE),/* PRIMARY SPACE QUANTITY        */
          3 CSEC  PTR(24) BDY(BYTE),/* SECONDARY SPACE QUANTITY      */
          3 CSORT BIT(8),           /* SPACE OPTIONS                 */
        2 CHIU PTR(32)   BDY(BYTE), /* HI-USED RBA                   */
        2 CHIA PTR(32)   BDY(BYTE), /* HI-ALLOCATED RBA              */
        2 CLRECL PTR(32) BDY(BYTE), /* AVERAGE LOGICAL RECORD SIZE   */
        2 CDOSUINF CHAR(2),         /* DOS USER INFORMATION  @Y30SSPJ*/
        2 CEXT CHAR(8);             /* EXCEPTION EXIT NAME   @Y30SSPJ*/
 /********************************************************************/
 /*     CLUSTER ATTRIBUTES FIELD: CREATED IN VS/2-2.6.  ALL          */
 /*     RELEASE 2 CLUSTERS ARE CREATED WITH THIS FIELD.              */
 /********************************************************************/
    DECLARE
      1 * DEFINED(CATTR1),          /* CATALOG ATTRIBUTES    @Y30SSPJ*/
        2 CCATTR PTR(8),            /* CATALOG ATTRIBUTES    @Y30SSPJ*/
          3 * BIT(8),               /* CATALOG ATTRIBUTES    @Y30SSPJ*/
            4 * BIT(6),             /* RESERVED              @Z40WSSG*/
            4 CSWAPSPC BIT(1),      /* SWAPSPACE             @Z40WSSG*/
            4 CPGSP BIT(1);         /* PAGE SPACE            @Y30SSPJ*/
 /********************************************************************/
 /*         ALTERNATE INDEX AND PATH ATTRIBUTES                      */
 /********************************************************************/
    DECLARE
      1 * DEFINED(CATTR1),          /* PATH/AIX ATTRIBUTES   @Y30SSPJ*/
        2 CRGATTR PTR(8),           /* PATH/AIX ATTRIBUTES   @Y30SSPJ*/
          3 CUPG BIT(1),            /* AIX UPGRADE           @Y30SSPJ*/
            4 CUPD BIT(1),          /* PATH UPDATE           @Y30SSPJ*/
          3 * BIT(7);               /* RESERVED              @Y30SSPJ*/
 /********************************************************************/
 /*        DECLARATION OF CONSTANT VALUES USED IN CMS DEFINE         */
 /********************************************************************/
    DECLARE
       CLNOVARC PTR(8) CONSTANT(0); /* NUMBER OF VARIABLE LENGTH
                                       FIELDS IN CLUSTER ENTRY       */
 /********************************************************************/
 /*        DECLARATION OF COUNT OF CI'S REQUIRED FOR CLUSTER         */
 /********************************************************************/
    DECLARE
       IXCLCICT PTR(8) CONSTANT(3), /* NO. OF CI'S FOR INDEX CLUSTER */
       NXCLCICT PTR(8) CONSTANT(2); /* NO. OF CI'S FOR NON-IND. CLUS */
 /********************************************************************/
 /*                DECLARATION OF MASTER CATALOG NAME                */
 /********************************************************************/
     DECLARE MCATNAME CHAR(44)
         CONSTANT('AMASTCAT                                    ');
 /********************************************************************/
 /*            DECLARATION OF CATALOG ENTRY RECORD AREA              */
 /********************************************************************/
     DECLARE CATRECRD(2) CHAR(256) BASED(CCACPE1);
 /********************************************************************/
 /*           DECLARATION OF ASSOCIATION GROUP OCCURRENCE            */
 /********************************************************************/
    DECLARE
      1 ASGO BASED(ADDR(LENFIX)) POS(2),
        2 ASTYPE PTR(8),            /* TYPE OF ENTRY ASSOCIATED      */
        2 ASCI   PTR(24);           /* CI NO. OF ENTRY ASSOCIATED    */
 /********************************************************************/
 /*           DECLARATION OF GROUP CODE OF ASSOCIATIONS              */
 /********************************************************************/
    DECLARE ASGC PTR(8)CONSTANT(2); /* ASSOCIATION GROUP CODE        */
 /********************************************************************/
 /*      DECLARATION OF ASSOCIATION GROUP CODE SEQUENCE NUMBERS      */
 /********************************************************************/
    DECLARE
      DASQN PTR(8) CONSTANT(1),     /* SEQUENCE NUMBER OF DATA       */
      IXSQN PTR(8) CONSTANT(2);     /* SEQUENCE NUMBER OF INDEX      */
 /********************************************************************/
 /*    DECLARATION OF MINIMUM NUMBER OF ASSOCIATIONS WITH CLUSTER    */
 /********************************************************************/
    DECLARE MINAS PTR(8) CONSTANT(1); /* MIN NO. OF ASSOCIATIONS     */
 /********************************************************************/
 /*            DECLARATION OF PASSWORD GROUP OCCURRENCE              */
 /********************************************************************/
    DECLARE
      1 PASSGO BASED(ADDR(LENFIX))  /* PASSWORD GROUP                */
               POS(2) BDY(WORD),    /* GROUP OCCURRENCE              */
        2 PASSWORD CHAR(32),        /* PASSWORD SET                  */
          3 MASTERPW CHAR(8),       /* MASTER                        */
          3 CIPW     CHAR(8),       /* CONTROL INTERVAL PROCESS      */
          3 UPDATEPW CHAR(8),       /* UPDATE                        */
          3 READPW   CHAR(8),       /* READ                          */
        2 PASSPRMT CHAR(8),         /* PROMPTING CODE NAME           */
        2 PASSATMP FIXED(15),       /* MAXIMUM NUMBER OF ATTEMPTS TO */
                                    /*   GIVE CORRECT PASSWORD       */
        2 USVRMDUL CHAR(8),         /* USER SECURITY VERIFICATON     */
                                    /* MODULE NAME                   */
        2 USERAREC,                 /* USER AUTHORIZATION RECORD     */
          3 USERAREL FIXED(15),     /* LENGTH OF USER AUTH. REC.     */
          3 USERAREV CHAR(256);     /* USER AUTH. REC. AREA          */
 /********************************************************************/
 /*               DEFINITION OF PASSWORD GROUP CODE                  */
 /********************************************************************/
    DECLARE PASSGC PTR(8) CONSTANT(4); /* PASSWORD GROUP CODE        */
 /********************************************************************/
 /*      DEFINITION OF PASSWORD GROUP OCCURRENCE SEQUENCE NUMBER     */
 /********************************************************************/
    DECLARE PASSSQN PTR(8) CONSTANT(1); /* PASSWORD G.O. SEQ.NUMBER  */
 /********************************************************************/
 /*     VOLUME SERIAL NUMBER LIST AS PASSED BY THE CALLER            */
 /********************************************************************/
    DECLARE
      1 USERLIST BASED,             /* VOLUME SERIAL NUMBER LIST     */
         2 LTLENGTH FIXED(15),      /* LENGTH OF VOLUME SERIAL LIST  */
         2 LTENTRY(*) CHAR(8) BDY(HWORD), /* 1 ENTRY PER VOLUME      */
           3 LTRETCOD FIXED(15),    /* FEEDBACK, RETURN CODES        */
             4 LTRETCD1 PTR(8),     /* NORMAL RETURN CODE            */
             4 LTRETCD2 PTR(8),     /* RESERVED                      */
           3 LTVOLSER CHAR(6);      /* VOLUME SERIAL NUMBER          */
 /********************************************************************/
 /*             DECLARATION OF SPACE PARAMETERS FIELDS               */
 /********************************************************************/
    DECLARE
      1 SPACEPRM CHAR(7) BASED,     /* SPACE PARAMETERS              */
         2 SPCPRIMQ PTR(24) BDY(BYTE), /* PRIMARY SPACE QUANTITY     */
         2 SPCSECDQ PTR(24) BDY(BYTE), /* SECONDARY SPACE QUANTITY   */
         2 SPCOPTNS BIT(8),          /* SPACE OPTIONS                */
           3 SPCRQTYP BIT(2),        /* REQUEST TYPE                 */
           3 *        BIT(2),        /* RESERVED                     */
           3 SPCCNTIG BIT(1),        /* CONTIGUOUS SPACE REQUEST     */
           3 SPCMXIGR BIT(1),        /* MAXIMUM CONTIG SPACE REQ     */
           3 SPCALXRQ BIT(1),        /* ALL EXTENTS SPACE REQ        */
           3 SPCROUND BIT(1);        /* ROUND UP TO CYL BOUNDARY     */
 /********************************************************************/
 /*             DECLARATION OF DATA SET ATTRIBUTES FIELD             */
 /********************************************************************/
    DECLARE
      1 CTGDSATR BIT(16) BASED(CTGFLPT), /* DATA SET ATTRIBUTES      */
        2 CTGATR1  BIT(8),          /* NON-SHARING ATTRIBUTES        */
          3 CTGDSSPD BIT(1),        /* SPEED                         */
          3 CTGDSUNQ BIT(1),        /* UNIQUE                        */
          3 CTGDSREU BIT(1),        /* REUSABLE              @Y30SSPJ*/
          3 CTGDSERA BIT(1),        /* ERASE                         */
          3 CTGDSREC BIT(1),        /* RECOVERABLE CATALOG   @Y30SSPJ*/
          3 CTGDSINH BIT(1),        /* INHIBIT UPDATE                */
          3 CTGDSTPX BIT(1),        /* TEMPORARY EXPORT              */
          3 CTGTRKOV BIT(1),        /* TRACK OVERFLOW          Y02020*/
        2 CTGATR2  BIT(8),          /* SHARE OPTIONS                 */
          3 CTGDSISH BIT(2),        /* CROSS REGION SHARE OPTIONS    */
          3 CTGDSSSH BIT(2),        /* CROSS SYSTEM SHARE OPTIONS    */
          3 *        BIT(3),        /* RESERVED              @Y30SSPJ*/
          3 CTGDSNUS BIT(1);        /* D.S. NOT REUSABLE     @Y30SSPJ*/
 /********************************************************************/
 /*         DECLARATION OF PATH/AIX ATTRIBUTE FIELD                  */
 /********************************************************************/
    DECLARE
      1 RGATTRFL CHAR(2) BASED(CTGFLPT(1)), /*               @Y30SSPJ*/
        2 RGATTR1 BIT(8),           /* PATH/AIX ATTRIBUTE    @Y30SSPJ*/
          3 RGATTUPG BIT(1),        /* UPDATE OR UPGRADE BIT @Y30SSPJ*/
          3 * BIT(7),               /* RESERVED              @Y30SSPJ*/
        2 RGATTSG1 BIT(8),          /* SIGNIFICANT MASK      @Y30SSPJ*/
          3 RGATSUP1 BIT(1),        /* UPDATE OR UPGRADE BIT @Y30SSPJ*/
          3 * BIT(7);               /* RESERVED              @Y30SSPJ*/
 /********************************************************************/
 /*                DECLARATION OF ENTRYNAME FIELD                    */
 /********************************************************************/
    DECLARE ENTRYNAM CHAR(44) BASED(CTGFLPT); /* ENTRYNAME FIELD     */
 /********************************************************************/
 /*         DECLARATION OF CREATION OR EXPIRATION DATE FIELD         */
 /********************************************************************/
    DECLARE DATEFLD PTR(24) BASED(CTGFLPT); /* DATE FIELD 'YDD' FORM */
                                            /* OF 'YYDDDF'X          */
 /********************************************************************/
 /*                DECLARATION OF OWNER ID FIELD                     */
 /********************************************************************/
    DECLARE OWNIDFLD CHAR(8) BASED(CTGFLPT); /* OWNER ID FIELD       */
 /********************************************************************/
 /*             DECLARATION OF MINIMUM BUFFER SIZE FIELD             */
 /********************************************************************/
    DECLARE BUFSIZE  PTR(31) BASED(CTGFLPT); /* MINIMUM BUFFER SIZE  */
 /********************************************************************/
 /*            DECLARATION OF AVERAGE LOGICAL RECORD SIZE            */
 /********************************************************************/
    DECLARE LRECL PTR(31) BASED(CTGFLPT); /* AVERAGE LOGICAL REC SIZE*/
 /********************************************************************/
 /*         DECLARATION OF EXCEPTION EXIT NAME                       */
 /********************************************************************/
    DECLARE EXCPNAME CHAR(8)BASED(CTGFLPT); /*EXCP EXIT NAME @Y30SSPJ*/
 /********************************************************************/
 /*     DEVICE CHARACTERISTICS OVERLAY STRUCTURE FOR RETURNED INFO   */
 /********************************************************************/
    DECLARE
      1 DEVCHARS BASED(ADDR(CCADESA)), /* DEVICE CHARACTERISTICS     */
        2 RTDEVUCB CHAR(4),         /* UCB DEVICE TYPE               */
          3 *        CHAR(2),       /* RESERVED               @XM4334*/
          3 RTCLSTYP CHAR(2),       /* DEV CLASS & TYPE       @XM4334*/
        2 RTMXDBLK PTR(31),         /* MAXIMUM DEVICE BLOCK SIZE     */
        2 RTNOCYLS FIXED(15),       /* NO. CYLINDERS ON DEVICE       */
        2 RTNOTRKS FIXED(15),       /* NO. TRACKS PER CYLINDER       */
        2 RTTRKSIZ FIXED(15),       /* BYTES PER TRACK               */
        2 RTBOKAB  PTR(16),         /* BLOCK OVERHEAD, KEYED ALL BLK */
          3 RTBOKNLB PTR(8),        /* BLOCK OVERHEAD, KEYED NOT LAST*/
          3 RTBOKLB  PTR(8),        /* BLOCK OVERHEAD, KEYED LAST    */
        2 RTBONK   PTR(8),          /* BLOCK OVERHEAD, NOT KEYED     */
        2 RTDVFLGS BIT(8),          /* FLAG BYTE             @Y30SSPJ*/
          3 *        BIT(4),        /* RESERVED              @Y30SSPJ*/
          3 RTKABFLG BIT(1),        /* IF ON, USE ALL BLOCK OVERHEAD */
                                    /*   VALUE 'RTBOKAB'     @Y30SSPJ*/
          3 *        BIT(2),        /* RESERVED              @Y30SSPJ*/
          3 RTTOLFLG BIT(1),        /* IF ON, USE TOLERANCE FACTOR   */
                                    /*   TO ALL BLOCKS EXCEPT LAST   */
        2 RTTOLFCT FIXED(15);       /* TOLERANCE FACTOR      @Y30SSPJ*/
 /********************************************************************/
 /*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */
 /********************************************************************/
   %DCL CLFXFALN CHAR;              /* FIXED LENGTH FIELDS   @Y30SSPJ*/
   %DCL CLFXFAR1 CHAR;              /* FIXED LENGTH FIELDS   @Y30SSPJ*/
   %DCL CLFXFADI CHAR;              /* FIXED LENGTH FIELDS   @Y30SSPJ*/
   %DCL PASSFIXD CHAR;              /* LENGTH OF FIXED FOR PASSWORD
                                       GROUP OCCURRENCE      @Y30SSPJ*/
   %CLFXFALN = 'LENGTH(CATRCD)+LENGTH(CNAME)+LENGTH(COWNID)+
        LENGTH(CCRE)+LENGTH(CEXP)+LENGTH(CCATTR)'; /* RELEASE 2
                                       CLUSTER, AIX, OR PATH
                                       FIXED LENGTH FIELDS   @Y30SSPJ*/
   %CLFXFAR1 = 'LENGTH(CATRCD)+LENGTH(CNAME)+LENGTH(COWNID)+
        LENGTH(CCRE)+LENGTH(CEXP)'; /* REL 1 CLUSTER OR REL 2 ALIEN
                                       FIXED LENGTH FIELDS   @Y30SSPJ*/
   %CLFXFADI = 'LENGTH(CATRCD)+LENGTH(CTGRBASE)'; /* REL 2 DATA/INDEX
                                       FIXED LENGTH FIELDS   @Y30SSPJ*/
   %PASSFIXD ='LENGTH(PASSWORD)+LENGTH(PASSPRMT)+LENGTH(PASSATMP)+
        LENGTH(USVRMDUL)';          /* LENGTH OF FIXED FOR PASSWORD
                                       GROUP OCCURRENCE      @Y30SSPJ*/
    DECLARE                         /* CROSS REGION SHARE OPTIONS    */
      CRRGOPT1 BIT(2) CONSTANT('00'B), /* ALL READ OR ONE UPD/OUTPUT */
      CRRGOPT2 BIT(2) CONSTANT('01'B), /* ALL READ AND ONE UPD/OUTPUT*/
      CRRGOPT3 BIT(2) CONSTANT('10'B), /* FULL SHARE                 */
      CRRGOPT4 BIT(2) CONSTANT('11'B); /* FULL SHARE WITH AM ASSIST  */
    DECLARE                         /* CROSS SYSTEM SHARE OPTIONS    */
      CRSYOPT3 BIT(2) CONSTANT('10'B), /* FULL SHARE                 */
      CRSYOPT4 BIT(2) CONSTANT('11'B); /* FULL SHARE WITH AM ASSIST  */
    DECLARE                         /* SPACE OPTIONS REQUEST TYPE    */
      CMSALCAN BIT(2) CONSTANT('00'B), /* CANDIDATE REQUEST          */
      CMSALTRK BIT(2) CONSTANT('10'B), /* TRACK REQUEST              */
      CMSALREC BIT(2) CONSTANT('01'B), /* RECORDS REQUEST            */
      CMSALCYL BIT(2) CONSTANT('11'B); /* CYLINDER REQUEST           */
    DECLARE                         /* DATA SET ATTRIBUTES           */
      DSUNQ    BIT(1) CONSTANT('1'B), /* UNIQUE DATA SET             */
      DSSPD    BIT(1) CONSTANT('1'B), /* SPEED SELECTED              */
      DSERA    BIT(1) CONSTANT('1'B), /* ERASE SPECIFIED             */
      DSINH    BIT(1) CONSTANT('1'B), /* INHIBIT UPDATE              */
      DSTPX    BIT(1) CONSTANT('1'B); /* TEMPORARILY EXPORTED        */
