*        %GOTO VSLPLS;                                               /*
         MACRO
         IHAVSL &DSECT=YES
         AGO   .VSLBIT         DO NOT GENERATE PROLOGUE
***********************************************************************
*                                                                     *
* STATUS -                                                            *
*    CHANGE LEVEL 0                                                   *
* FUNCTION -                                                          *
*    MAPPING MACRO FOR VSL                                            *
* ENTRY POINTS -                                                      *
*     IHAVSL MACRO CALL                                               *
* INPUT -                                                             *
*    SEE IHAVSL MACRO DEFINITION                                      *
* OUTPUT -                                                            *
*    VSL MAPPING MACRO                                                *
* EXTERNAL REFERENCES -                                               *
*    N/A                                                              *
* EXITS, NORMAL -                                                     *
*    N/A                                                              *
* EXITS, ERROR -                                                      *
*    N/A                                                              *
* TABLES/WORK AREAS -                                                 *
*    N/A                                                              *
* ATTRIBUTES -                                                        *
*    BILINGUAL MACRO                                                  *
* CHARACTER CODE DEPENDENCY -                                         *
*    NONE                                                             *
* NOTES -                                                             *
*    NONE                                                             *
*                                                                     *
***********************************************************************
.VSLBIT  ANOP
         IEZBITS , -           DEFINE BITS
***********************************************************************
**                     VIRTUAL SUBAREA LIST ENTRY     9/27/72         *
**                                                                    *
**                                                                    *
**   A VIRTUAL SUBAREA LIST IS THE PARAMETER LIST TO PSI WHICH        *
**   DESCRIBES A VIRTUAL SUBAREA THAT IS TO BE PROCESSED AND WHAT     *
**   PROCESSING IS TO BE DONE.                                        *
***********************************************************************
         AIF   ('&DSECT' EQ 'YES').VSL001 DOES USER WANT DSECT
VSL      DS    0F
         AGO   .VSL002         BRANCH AROUND DSECT
.VSL001  ANOP                  GEN THE DSECT
VSL      DSECT , VSLPTR
.VSL002  ANOP                  GEN MAPPING MACRO
VSLSTRT  DS    0A -            FULL WORD REFERENCE TO VSLSTRTA
VSLFLAG1 DS    BL1 -           FIRST FLAG FIELD
VSLCONT  EQU   BIT0 -          CONTINUATION FLAG.  IF ON, VSLSTRTA
*                              POINTS TO THE NEXT VSL ENTRY. OTHERWISE,
*                              THIS IS A NORMAL VSL.
VSLFIX   EQU   BIT1 -          PGFIX OPTION FLAG
VSLFREE  EQU   BIT2 -          PGFREE OPTION FLAG
VSLOAD   EQU   BIT3 -          PGLOAD OPTION FLAG
VSLRLS   EQU   BIT4 -          PGRLSE OPTION FLAG
VSLRSV1  EQU   BIT5 -          RESERVED
VSLONG   EQU   BIT6 -          LONG-TERM FIX OPTION FLAG FOR PGFIX
VSLRSV2  EQU   BIT7 -          RESERVED
VSLSTRTA DS    AL3 -           START ADDRESS OF THE VIRTUAL SUBAREA
*                              TO BE PROCESSED
VSLEND   DS    0A -            FULL WORD REFERENCE FOR VSLENDA
VSLFLAG2 DS    BL1 -           SECOND FLAG FIELD
VSLAST   EQU   BIT0 -          LAST ENTRY IN LIST OF REQUESTS FLAG
VSLNULL  EQU   BIT1 -          NULL ENTRY FLAG.  IF ON, INDICATES
*                              THAT THE ENTRY IS TO BE IGNORED.
VSLRAO   EQU   BIT2 -          REAL ADDRESS OPTION FLAG.  IF ON,
*                              THE REAL STORAGE ADDRESS ASSIGNED TO
*                              THE VIRTUAL AREA WILL BE STORED IN
*                              VSLENDA. NOT SUPPORTED IN VS2/2.
VSLERR   EQU   BIT3 -          ERROR FLAG FOR UNDEFINED VIRTUAL SPACE.
VSLRSV3  EQU   BIT4 -          RESERVED
VSLPGOUT EQU   BIT5 -          PERFORM A PAGE-OUT OPERATION
VSLKEPRL EQU   BIT6 -          KEEP REAL FRAME AFTER PAGE-OUT
VSLEXTRS EQU   BIT7 -          RESERVED FOR EXPANSION
VSLEND1A DS    AL3 -           END ADDRESS PLUS 1 OF THE VIRTUAL
*                              SUBAREA DESCRIBED BY THIS ENTRY.
VSLENDPT DS    0C -            END OF VIRTUAL SUBAREA LIST ENTRY
VSLLEN   EQU   VSLENDPT-VSL -  LENGTH OF VSL ENTRY
         MEND  , */
*%VSLPLS  :  ;
* /*******************************************************************/
* /*                   VIRTUAL SUBAREA LIST ENTRY     9/27/72        */
* /*                                                                 */
* /*                                                                 */
* /* A VIRTUAL SUBAREA LIST IS THE PARAMETER LIST TO PSI WHICH       */
* /* DESCRIBES A VIRTUAL SUBAREA THAT IS TO BE PROCESSED AND WHAT    */
* /* PROCESSING IS TO BE DONE.                                       */
* /*******************************************************************/
*      %IF VSL9999^=','             /* IS BLOCK PART OF STRUCTURE    */
*          %THEN %VSL9999=';';      /* NO, SET UP NORMAL END         */
*      %IF VSLLEVEL^=''             /* DID USER SUPPLY LEVEL NUMBER  */
*          %THEN %GOTO VSLPLS1;     /* YES, DO NOT GEN 1 LEVEL       */
*DECLARE
*  1 VSL BASED(VSLPTR)
*      %GOTO VSLPLS2;               /* SKIP GEN FOR USER-GIVEN LEVEL */
* %VSLPLS1: VSLDUM=VSLLEVEL××' VSL'; /* SET UP USER-SUPPLIED LEVELS  */
*  VSLDUM
* %VSLPLS2:;
*      BDY(WORD),
*    4 VSLSTRT PTR(31),             /* FULL WORD REFERENCE TO
*                                      VSLSTRTA.                     */
*      8 VSLFLAG1 BIT(8),           /* FIRST FLAG FIELD              */
*        12 VSLCONT BIT(1),         /* CONTINUATION FLAG. IF ON,
*                                      VSLSTRTA POINTS TO THE NEXT
*                                      VSL ENTRY. OTHERWISE, THIS IS
*                                      A NORMAL VSL.                 */
*        12 VSLFIX BIT(1),          /* PGFIX OPTION FLAG             */
*        12 VSLFREE BIT(1),         /* PGFREE OPTION FLAG            */
*        12 VSLOAD BIT(1),          /* PGLOAD OPTION FLAG            */
*        12 VSLRLS BIT(1),          /* PGRLSE OPTION FLAG            */
*        12 VSLRSV1 BIT(1),         /* RESERVED                      */
*        12 VSLONG BIT(1),          /* LONG-TERM FIX OPTION FLAG FOR
*                                      PGFIX.                        */
*        12 VSLRSV2 BIT(1),         /* RESERVED                      */
*      8 VSLSTRTA PTR(24),          /* START ADDRESS OF THE VIRTUAL
*                                      SUBAREA DESCRIBED BY THIS
*                                      ENTRY.                        */
*    4 VSLEND PTR(31),              /* FULL WORD REFERENCE FOR
*                                      VSLENDA.                      */
*      8 VSLFLAG2 BIT(8),           /* SECOND FLAG FIELD             */
*        12 VSLAST BIT(1),          /* LAST ENTRY IN LIST OF REQUESTS*/
*        12 VSLNULL BIT(1),         /* NULL ENTRY FLAG. IF ON,
*                                      INDICATES THAT THE ENTRY IS TO
*                                      BE IGNORED.                   */
*        12 VSLRAO BIT(1),          /* REAL ADDRESS OPTION FLAG.
*                                      IF ON, THE REAL STORAGE ADDRESS
*                                      ASSIGNED TO THE VIRTUAL AREA
*                                      WILL BE STORED IN VSLENDA.
*                                      NOT SUPPORTED IN VS2/2.       */
*        12 VSLERR BIT(1),          /* ERROR FLAG FOR UNDEFINED
*                                      VIRTUAL SPACE.                */
*        12 VSLRSV3 BIT(1),         /* RESERVED                      */
*        12 VSLPGOUT BIT(1),        /* PERFORM A PAGEOUT OPERATION   */
*        12 VSLKEPRL BIT(1),        /* KEEP REAL FRAME AFTER PAGEOUT */
*        12 VSLEXTRS BIT(1),        /* RESERVED FOR EXPANSION        */
*      8 VSLEND1A PTR(24) VSL9999   /* END ADDRESS PLUS 1 OF THE
*                                      VIRTUAL SUBAREA DESCRIBED BY
*                                      THIS ENTRY.                   */
*      %VSLLEN='LENGTH(VSL)';       /*GET LENGTH OF THE VSL          */
