*%GO TO BSLDISP;                        /*                     X03039*/
*/*                                                            X03039
         MACRO
         TDISPD &CSECT=NO                                      @Y17XAXA
.*A-000000-999999                                              @X31X8X0
.*CONVERTED TO BILINGUAL ON 5-23-73                              X03039
.*A000001,014000,938000                                          X03039
.*A937600                                                        S22027
.*A937300                                                        S22026
.*C028000,042000,049000,056000                                 @Y17XAXF
.*C091000,182000,280000,378000,462000                          @Y17XAXF
.*C497000,504000,553000,651000,749000,833000                   @Y17XAXF
.*C938900,939800,940100,940400                                 @Y17XAXF
.*C941900,942500,946100,946700                                 @Y17XAXF
.*C950600,951200,955400,956000,882000-937600,979400-991100     @Y17XAXF
.*C959600,960200,963800,964400,964700                          @Y17XAXF
.*C968300,968900,969200,969500,969800                          @Y17XAXF
.*C972800,973400,973700,977000,977600,977900                   @Y17XAXF
.*D483000,960500                                               @Y17XAXF
.*A854000,977900                                               @Y17XAXF
.*A040000,042000,044000,046000,068000,090000,094000,096000     @Y17XAXA
.*A118000,122000,128000,150000,158000,174000,194000,200000     @Y17XAXA
.*A232000,234000,256000,258000,280000,327000,594000            @Y17XAXA
         AIF   ('&CSECT' EQ 'NO').DSECT                        @Y17XAXA
         AIF   ('&CSECT' EQ 'YES').SAVEC                       @Y17XAXA
         MNOTE 12,'IHB300 CSECT OPTION INVALID '               @Y17XAXA
         AGO   .EXIT                                           @Y17XAXA
.DSECT   ANOP                                                  @Y17XAXA
IEDQDISP DSECT
DSPSAVE  DS    F                                               @Y17XAXF
         AGO   .SAVEE                                          @Y17XAXA
.SAVEC   ANOP                                                  @Y17XAXA
         USING IGG019RO,RENTRY                                 @Y17XAXA
DSPSAVE  B     SAVE                                            @Y17XAXA
         DROP  RENTRY                                          @Y17XAXA
         USING IGG019RO,RBASE                                  @Y17XAXA
.SAVEE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE IS THE FIRST ENTRY ROUTINE THAT GETS     @Y17XAXA
*             CONTROL INITIALLY .                              @Y17XAXA
         SPACE 1                                               @Y17XAXA
         AIF      ('&CSECT' EQ 'YES').DISPC                    @Y17XAXA
DSPDISP  DS    F                                               @Y17XAXA
         AGO   .DISPE                                          @Y17XAXA
.DISPC   ANOP                                                  @Y17XAXA
DSPDISP  B     DISPATCH                                        @Y17XAXA
.DISPE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE DISPATCHES TCAM SUBTASKS.IF NO TCAM      @Y17XAXF
*            SUBTASKS ARE READY TO RUN,IT WILL PLACE THE TCAM  @Y17XAXF
*            CONTROL PROGRAM INTO A SYSTEM WAIT.               @Y17XAXF
         SPACE 1
*         ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING      @Y17XAXA
*             INITIALIZED:                                     @Y17XAXA
*
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').LISTC                       @Y17XAXA
DSPLIST  DS    F                                               @Y17XAXA
         AGO   .LISTE                                          @Y17XAXA
.LISTC   ANOP                                                  @Y17XAXA
DSPLIST  B     LIST                                            @Y17XAXA
.LISTE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL TPOST ALL ITEMS IN A LIST.THE LAST  @Y17XAXA
*             ENTRY MUST HAVE ITS HI-ORDER BIT TURNED ON.      @Y17XAXA
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING       @Y17XAXA
*             REGISTERS INITIALIZED:                           @Y17XAXA
*
*         1       CONTAINS ADDRESS OF FIRST ENTRY IN A LIST OF
*                          ITEMS TO BE PLACED ON READY QUEUE BY
*                          PRIORITY
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
*        14       EXIT ADDRESS FROM SUBTASK                    @Y17XAXA
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').CHAINC                      @Y17XAXA
DSPCHAIN DS    F                                               @Y17XAXA
         AGO   .CHAINE                                         @Y17XAXA
.CHAINC  ANOP                                                  @Y17XAXA
DSPCHAIN B     CHAIN                                           @Y17XAXA
.CHAINE  ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL TPOST ALL ITEMS IN A PASSED CHAIN   @Y17XAXA
*             OF ITEMS                                         @Y17XAXA
         SPACE 1
*        THE LAST ITEM IN THE CHAIN MUST HAVE A LINK FIELD
*        CONTAINING X'000000'.
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING       @Y17XAXA
*             REGISTERS INITIALIZED:                           @Y17XAXA
*
*         1       CONTAINS ADDRESS OF FIRST ITEM IN A CHAIN OF
*                          ITEMS TO BE PLACED ON READY QUEUE BY
*                          PRIORITY
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
*        14       EXIT ADDRESS FROM SUBTASK                    @Y17XAXA
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').WAITC                       @Y17XAXA
DSPWAIT  DS    F                                               @Y17XAXA
         AGO   .WAITE                                          @Y17XAXA
.WAITC   ANOP                                                  @Y17XAXA
DSPWAIT  B     QWAIT                                           @Y17XAXA
.WAITE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL OBTAIN AN ELEMENT,IF AVAILABLE,FROM @Y17XAXA
*             A QCB AND PASS IT BACK TO THE SUBTASK.IF NOT     @Y17XAXA
*             AVAILABLE IT WILL QUEUE THE STCB TO WAIT FOR AN  @Y17XAXA
*             ELEMENT                                          @Y17XAXA
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING       @Y17XAXA
*             REGISTERS INITIALIZED:                           @Y17XAXA
*
*         3       CONTAINS ADDRESS OF QCB FROM WHICH ELEMENT IS
*                          DESIRED
*         7       CONTAINS ADDRESS OF QCB NOW CONTAINING THIS STCB
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').BYPASC                      @Y17XAXA
DSPBYPAS DS    F                                               @Y17XAXA
         AGO   .BYPASE                                         @Y17XAXA
.BYPASC  ANOP                                                  @Y17XAXA
DSPBYPAS B     BYPASS                                          @Y17XAXA
.BYPASE  ANOP                                                  @Y17XAXA
*        ENTRY AT THIS POINT WILL ACTIVATE THE STCB POINTED    @Y17XAXA
*             TO BY RSTCB IMMEDIATELY.                         @Y17XAXA
         SPACE 1
*        ENTRY HERE SHOULD HAVE THE FOLLOWING REGISTERS        @Y17XAXA
*             INITILIZED                                       @Y17XAXA
*
*         1       CONTAINS ADDRESS OF ELEMENT TO BE PASSED TO SUBTASK
*         3       CONTAINS ADDRESS OF STCB TO BE ACTIVATED
*         7       CONTAINS ADDRESS OF QCB CONTAINING STCB
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').POSTC                       @Y17XAXA
DSPPOST  DS    F                                               @Y17XAXA
DSPPOSTR DS    F                                               @Y17XAXA
         AGO   .POSTE                                          @Y17XAXA
.POSTC   ANOP                                                  @Y17XAXA
DSPPOST  B     POST                                            @Y17XAXA
DSPPOSTR B     POSTR                                           @Y17XAXA
.POSTE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL TPOST AN ELEMENT (PLACE IT ON READY @Y17XAXF
*             QUEUE BY PRIORITY).                              @Y17XAXF
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING
*             REGISTERS INITIALIZED:
*
*         1       CONTAINS ADDRESS OF ITEM TO BE PLACED ON READY
*                          QUEUE BY PRIORITY
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
*        14       EXIT ADDRESS FROM SUBTASK                    @Y17XAXA
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').TSTQC                       @Y17XAXA
DSPTSTQ  DS    F                                               @Y17XAXA
DSPTSTQR DS    F                                               @Y17XAXA
DSPUNAV  DS    F                                               @Y17XAXA
DSPUNAVR DS    F                                               @Y17XAXA
         AGO   .TSTQE                                          @Y17XAXA
.TSTQC   ANOP                                                  @Y17XAXA
DSPTSTQ  B     TESTQ                                           @Y17XAXA
DSPTSTQR B     TESTQR                                          @Y17XAXA
DSPUNAV  LA    RETURN,DISPATCH                                 @Y17XAXA
DSPUNAVR B     UNAVAILR                                        @Y17XAXA
.TSTQE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL MOVE AN STCB FROM ONE QCB TO ANOTHER@Y17XAXA
*             IF IT IS NOT ALREADY THERE.                      @Y17XAXA
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING       @Y17XAXA
*             REGISTERS INITIALIZED:                           @Y17XAXA
*
*         3       CONTAINS ADDRESS OF QCB FROM WHICH ELEMENT IS
*                          DESIRED
*         7       CONTAINS ADDRESS OF QCB NOW CONTAINING THE STCB
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').PRIOC                       @Y17XAXA
DSPPRIO  DS    F                                               @Y17XAXA
DSPPRIOR DS    F                                               @Y17XAXA
         AGO   .PRIOE                                          @Y17XAXA
.PRIOC   ANOP                                                  @Y17XAXA
DSPPRIO  LA    RETURN,DISPATCH                                 @Y17XAXA
DSPPRIOR B     PRIORITR                                        @Y17XAXA
.PRIOE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL INSERT AN ELEMENT INTO A CHAIN BY   @Y17XAXA
*             PRIORITY                                         @Y17XAXA
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING       @Y17XAXA
*             REGISTERS INITIALIZED:                           @Y17XAXA
*
*         1       CONTAINS ADDRESS OF ITEM TO BE PLACED IN CHAIN
*         7       CONTAINS ADDRESS OF CHAIN TO RECEIVE ITEM
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').LIFOC                       @Y17XAXA
DSPLIFO  DS    F                                               @Y17XAXA
DSPLIFOR DS    F                                               @Y17XAXA
         AGO   .LIFOE                                          @Y17XAXA
.LIFOC   ANOP                                                  @Y17XAXA
DSPLIFO  LA    RETURN,DISPATCH                                 @Y17XAXA
DSPLIFOR B     LIFOR                                           @Y17XAXA
.LIFOE   ANOP                                                  @Y17XAXA
*        THIS ROUTINE WILL INSERT AN ELEMENT AT THE TOP OF A   @Y17XAXA
*             CHAIN                                            @Y17XAXA
         SPACE 1
*        ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING       @Y17XAXA
*             REGISTERS INITIALIZED:                           @Y17XAXA
*
*         1       CONTAINS ADDRESS OF ITEM TO BE PLACED IN CHAIN
*         7       CONTAINS ADDRESS OF CHAIN TO RECEIVE ITEM
*        11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER      @Y17XAXF
*        13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2
         SPACE 1
         AIF   ('&CSECT' EQ 'YES').TRACEC                      @Y17XAXA
DSPTRACE DS    F                                               @Y17XAXA
         AGO   .TRACEE                                         @Y17XAXA
.TRACEC  ANOP                                                  @Y17XAXA
DSPTRACE DC    A(TRCQCB)                                       @Y17XAXA
.TRACEE    ANOP                                                @Y17XAXA
*        ADDRESS OF TRACE QCB/STCB TO WHICH OPERATOR CONTROL   @Y17XAXA
*             TPOSTS A BUFFER TO ACTIVATE /DEACTIVATE          @Y17XAXA
*             SUBTASK TRACE (S) .                              @Y17XAXA
         EJECT                                                 @Y17XAXA
*        STCBVTO VALUES                                        @Y17XAXA
         SPACE 2                                               @Y17XAXA
DSPCWAIT EQU   0                        ISSUE SYSTEM WAIT      @Y17XAXF
DSPCPOST EQU   2                        SYS POST ATTACHED TASK @Y17XAXF
DSPMCPL2 EQU   4                        ACTIVATE 2-BYTE STCB   @Y17XAXF
DSPMCPL4 EQU   6                        ACTIVATE 4-BYTE STCB   @Y17XAXF
DSPMCPL6 EQU   8                        ACTIVATE 6-BYTE STCB   @Y17XAXF
DSPMCPL8 EQU   10                       ACTIVATE 8-BYTE STCB   @Y17XAXF
DSPRCVSC EQU   12                       RECEIVE       SCHEDULER@Y17XAXF
DSPSNDSC EQU   14                       SEND          SCHEDULER@Y17XAXF
DSPGETSC EQU   16                       GET           SCHEDULER@Y17XAXF
DSPPUTSC EQU   18                       PUT           SCHEDULER@Y17XAXF
DSPGFFSC EQU   20                       GET FIFO      SCHEDULER@Y17XAXF
DSPLOGSC EQU   22                       LOG           SCHEDULER@Y17XAXF
DSPDIASC EQU   24                       DIAL          SCHEDULER@Y17XAXF
DSPBUFSC EQU   26                       BUFFERED TERM SCHEDULER@Y17XAXF
DSPRETSC EQU   28                       RETRIEVE      SCHEDULER@Y17XAXF
DSPLOCSC EQU   30                       LOCAL RECEIVE SCHEDULER@Y17XAXF
DSPCSCH  EQU   32 .                     CONCENTRATOR  SCHEDULER@Y17XAXF
DSPSEND  EQU   34 .                     3705 RES SEND SCHEDULER@Y17XAXF
DSPRCV   EQU   36 .                     3705 RES RECV SCHEDULER@Y17XAXF
DSPCBSCH EQU   38 .                     COMBUF        SCHEDULER@Y17XAXF
.EXIT    MEND                                                  @Y17XAXA
*                                                              X03039*/
*%BSLDISP: ;                            /*                     X03039*/
*  DCL   IEDQDISP  CHAR(68) BDY(HWORD) BASED(RDISP);       /*@Y17XAXF*/
*
*
*/*  THIS ROUTINE DISPATCHES TCAM SUBTASKS.  IF NO TCAM      @Y17XAXF*/
*/*      SUBTASKS ARE READY TO RUN, IT WILL PLACE THE TCAM   @Y17XAXF*/
*/*      MESSAGE CONTROL PROGRAM INTO A SYSTEM WAIT.         @Y17XAXF*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*     DCL DSPDISP  ENTRY BASED(ADDR(IEDQDISP)) POS(5)     /* @Y17XAXF*/
*         VALRG(*) OPTIONS(EXIT,NOSEQFLOW);               /* @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL TPOST ALL ITEMS IN A LIST.THE LAST ENTRYX03039*/
*/*      MUST HAVE ITS HI-ORDER BIT TURNED ON.                 X03039*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       1       CONTAINS ADDRESS OF FIRST ENTRY IN A LIST OF X03039*/
*/*                        ITEMS TO BE PLACED ON READY QUEUE BYX03039*/
*/*                        PRIORITY                            X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*/*      14       EXIT ADDRESS FROM SUBTASK                  @Y17XAXA*/
*   DCL DSPLIST  ENTRY BASED(ADDR(IEDQDISP)) POS(9)      /*  @Y17XAXF*/
*       VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /*  @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL TPOST ALL ITEMS IN A PASSED CHAIN.      X03039*/
*/*      THE LAST ITEM IN THE CHAIN MUST HAVE A LINK FIELD     X03039*/
*/*      CONTAINING X'000000'.                                 X03039*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       1       CONTAINS ADDRESS OF FIRST ITEM IN A CHAIN OF X03039*/
*/*                        ITEMS TO BE PLACED ON READY QUEUE BYX03039*/
*/*                        PRIORITY                            X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*/*      14       EXIT ADDRESS FROM SUBTASK                  @Y17XAXA*/
*   DCL DSPCHAIN ENTRY BASED(ADDR(IEDQDISP)) POS(13)      /* @Y17XAXF*/
*       VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                 /* @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL OBTAIN AN ELEMENT, IF AVAILABLE, FROM A X03039*/
*/*      QCB AND PASS IT BACK TO THE SUBTASK.  IF NOT AVAILABLEX03039*/
*/*      IT WILL QUEUE THE STCB TO WAIT FOR AN ELEMENT.        X03039*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       3       CONTAINS ADDRESS OF QCB FROM WHICH ELEMENT ISX03039*/
*/*                        DESIRED                             X03039*/
*/*       7       CONTAINS ADDRESS OF QCB NOW CONTAINING THIS  X03039*/
*/*                        STCB.                               X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*   DCL DSPWAIT  ENTRY BASED(ADDR(IEDQDISP)) POS(17)      /* @Y17XAXF*/
*       VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                 /* @Y17XAXF*/
*
*
*/*  ENTRY AT THIS POINT WILL ACTIVATE THE STCB POINTED TO BY  X03039*/
*/*      RSTCB IMMEDIATELY.                                    X03039*/
*
*/*  ENTRY HERE SHOULD HAVE THE FOLLOWING REGISTERS INITIALIZED:     */
*                                       /*                     X03039*/
*/*       1       CONTAINS ADDRESS OF ELEMENT TO BE PASSED TO SUBTASK*/
*/*                                                            X03039*/
*/*       3       CONTAINS ADDRESS OF STCB TO BE ACTIVATED     X03039*/
*/*       7       CONTAINS ADDRESS OF QCB CONTAINING STCB      X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*   DCL DSPBYPAS ENTRY BASED(ADDR(IEDQDISP)) POS(21)      /* @Y17XAXF*/
*       VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                 /* @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL TPOST AN ELEMENT(PLACE ON READY QUEUE)  X03039*/
*/*      BY PRIORITY).                                         X03039*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       1       CONTAINS ADDRESS OF ITEM TO BE PLACED ON RDY X03039*/
*/*                        QUEUE BY PRIORITY                   X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*/*      14       EXIT ADDRESS FROM SUBTASK                  @Y17XAXA*/
*   DCL DSPPOST  ENTRY BASED(ADDR(IEDQDISP)) POS(25)      /* @Y17XAXF*/
*       VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                 /* @Y17XAXF*/
*   DCL DSPPOSTR ENTRY BASED(ADDR(IEDQDISP)) POS(29)      /* @Y17XAXF*/
*       VALRG(*);                                         /* @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL MOVE AN STCB FROM ONE QCB TO ANOTHER IF IT    */
*/*      IS NOT ALREADY THERE.                                 X03039*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       3       CONTAINS ADDRESS OF QCB FROM WHICH ELEMENT ISX03039*/
*/*                        DESIRED                             X03039*/
*/*       7       CONTAINS ADDR OF QCB NOW CONTAINING THE STCB X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*    DCL DSPTSTQ  ENTRY BASED(ADDR(IEDQDISP)) POS(33)     /* @Y17XAXF*/
*        VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /* @Y17XAXF*/
*    DCL DSPTSTQR ENTRY BASED(ADDR(IEDQDISP)) POS(37)     /* @Y17XAXF*/
*        VALRG(*);                                        /* @Y17XAXF*/
*    DCL DSPUNAV  ENTRY BASED(ADDR(IEDQDISP)) POS(41)     /* @Y17XAXF*/
*        VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /* @Y17XAXF*/
*    DCL DSPUNAVR ENTRY BASED(ADDR(IEDQDISP)) POS(45)     /* @Y17XAXF*/
*        VALRG(*);                                        /* @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL INSERT AN ELEMENT INTO A CHAIN BY PRIORITY    */
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       1       CONTAINS ADDR OF ITEM TO BE PLACED IN CHAIN  X03039*/
*/*       7       CONTAINS ADDRESS OF CHAIN TO RECEIVE ITEM    X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*    DCL DSPPRIO  ENTRY BASED(ADDR(IEDQDISP)) POS(49)     /* @Y17XAXF*/
*        VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /* @Y17XAXF*/
*    DCL DSPPRIOR ENTRY BASED(ADDR(IEDQDISP)) POS(53)     /* @Y17XAXF*/
*        VALRG(*);                                        /* @Y17XAXF*/
*
*
*/*  THIS ROUTINE WILL INSERT AN ELEMENT AT THE TOP OF A CHAIN X03039*/
*
*/*  ENTRY TO THIS ROUTINE SHOULD HAVE THE FOLLOWING REGISTERS X03039*/
*/*      INITIALIZED:                                          X03039*/
*/*                                                            X03039*/
*/*       1       CONTAINS ADDRESS OF ITEM TO BE PLACED IN CHAIN     */
*/*                                                            X03039*/
*/*       7       CONTAINS ADDRESS OF CHAIN TO RECEIVE ITEM    X03039*/
*/*      11       CONTAINS ADDRESS ASSIGNED TO DISPATCHER    @Y17XAXF*/
*/*      13       CONTAINS ADDRESS ASSIGNED TO AVTSAVE2        X03039*/
*    DCL DSPLIFO  ENTRY BASED(ADDR(IEDQDISP)) POS(57)     /* @Y17XAXF*/
*        VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /* @Y17XAXF*/
*    DCL DSPLIFOR ENTRY BASED(ADDR(IEDQDISP)) POS(61)     /* @Y17XAXF*/
*        VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /* @Y17XAXF*/
*    DCL DSPTRACE ENTRY BASED(ADDR(IEDQDISP)) POS(65)     /* @Y17XAXA*/
*        VALRG(*) OPTIONS(EXIT,NOSEQFLOW);                /* @Y17XAXA*/
*
*
*/*  STCBVTO VALUES                                            X03039*/
*
*DCL DSPCWAIT BIT(8) CONSTANT('00'X);   /* ISSUE SYSTEM WAIT @Y17XAXF*/
*DCL DSPCPOST BIT(8) CONSTANT('02'X);   /* SYSTEM POST ATTACHED TASK */
*                                       /*                   @Y17XAXF*/
*DCL DSPMCPL2 BIT(8) CONSTANT('04'X);   /* ACTIVATE 2-BYTE STCB      */
*                                       /*                   @Y17XAXF*/
*DCL DSPMCPL4 BIT(8) CONSTANT('06'X);   /* ACTIVATE 4-BYTE STCB      */
*                                       /*                   @Y17XAXF*/
*DCL DSPMCPL6 BIT(8) CONSTANT('08'X);   /* ACTIVATE 6-BYTE STCB      */
*                                       /*                   @Y17XAXF*/
*DCL DSPMCPL8 BIT(8) CONSTANT('0A'X);   /* ACTIVATE 8-BYTE STCB      */
*                                       /*                   @Y17XAXF*/
*DCL DSPRCVSC BIT(8) CONSTANT('0C'X);   /* RECEIVE     SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPSNDSC BIT(8) CONSTANT('0E'X);   /* SEND        SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPGETSC BIT(8) CONSTANT('10'X);   /* GET         SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPPUTSC BIT(8) CONSTANT('12'X);   /* PUT         SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPGFFSC BIT(8) CONSTANT('14'X);   /* GET FIFO    SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPLOGSC BIT(8) CONSTANT('16'X);   /* LOG         SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPDIASC BIT(8) CONSTANT('18'X);   /* DIAL        SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPBUFSC BIT(8) CONSTANT('1A'X);   /* BUFF'D TERM SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPRETSC BIT(8) CONSTANT('1C'X);   /* RETRIEVE    SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPLOCSC BIT(8) CONSTANT('1E'X);   /* LOCAL REC   SCHEDULER     */
*                                       /*                   @Y17XAXF*/
*DCL DSPCSCH  BIT(8) CONSTANT('20'X);   /* CONCENTRATOR SCHEDULER    */
*                                       /*                   @Y17XAXF*/
*DCL DSPSEND  BIT(8) CONSTANT('22'X);   /* 3705 RES SEND SCHEDULER   */
*                                       /*                   @Y17XAXF*/
*DCL DSPRCV   BIT(8) CONSTANT('24'X);   /* 3705 RES RECV SCHEDULER   */
*                                       /*                   @Y17XAXF*/
*DCL DSPCBSCH BIT(8) CONSTANT('26'X);   /* COMBUF      SCHEDULER     */
*                                       /*                   @Y17XAXF*/
