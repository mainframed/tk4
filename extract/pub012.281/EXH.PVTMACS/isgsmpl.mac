* %GOTO SMPLPLS1;                                                    /*
         MACRO
         ISGSMPL
**/
*%SMPLPLS1:;
*/*  START OF SPECIFICATIONS ****
*
*01*  MACRO-NAME = ISGSMPL
*
*01*  MACRO-DATE = 05/05/81
*
*01*  DESCRIPTIVE-NAME = STORAGE MANAGEMENT PARAMETER LIST ENTRY
*
*01*  COPYRIGHT =
*                5740-XYN COPYRIGHT IBM CORP 1980,1981,
*                LICENSED MATERIAL-PROGRAM, PROPERTY OF IBM,
*                REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083.
*
*01*  STATUS = OS/VS2 JBB1326
*
*01*  FUNCTION = EACH STORAGE MANANGEMENT PARAMETER LIST ENTRY
*                REPRESENTS A REQUEST TO THE GRS STORAGE MANAGER.
*
*01*  METHOD-OF-ACCESS =
*                        NON-BASED:
*                        PLS - %SMPLPARM = 'Y'
*                              %INCLUDE SYSLIB(ISGSMPL)
*
*                        BASED:
*                        PLS - DECLARE SMPLPTR PTR(31)
*                              %INCLUDE SYSLIB(ISGSMPL)
*
*                        BAL - DSECT IS PRODUCED REQUIRING
*                              A USING ON THE SMPL
*
*01*  CREATED-BY = THE SMPL IS CREATED BY THE CALLER OF GRS
*                  STORAGE MANAGER.
*
*02*    SUBPOOL = DETERMINED BY CALLER.
*
*02*    KEY     = 0
*
*02*    SIZE    = 16 BYTES PER ENTRY
*
*
*01*  DELETED-BY = THE SMPL IS DELETED BY THE CALLER OF GRS
*                  STORAGE MANAGER.
*
*01*  POINTED-TO-BY = MAINTAINED BY CALLER OF GRS STORAGE MANAGER.
*
*01*  SERIALIZATION = NONE
*
**** END OF SPECIFICATIONS **                                        */
*/*A000000-999999                                            @G383P13*/
*    %GOTO SMPLPLS2;                                                 /*
SMPL     DSECT                       STORAGE MANAGEMENT PARM LIST ENTRY
         DS    0F
SMPFLAGS DS    B                     INDICATOR FLAGS
SMPEOPL  EQU   X'80'                 END OF PARM LIST INDICATOR -
*                                    WHEN 1, THIS ENTRY IS LAST ENTRY
*                                    OF THE PARAMETER LIST
SMPGLIND EQU   X'40'                 GLOBAL/LOCAL INDICATOR -
*                                    0 = LOCAL CONTROL BLOCK,
*                                    1 = GLOBAL CONTROL BLOCK
SMPRSV1  EQU   X'20'                 RESERVED
SMPRSV2  EQU   X'10'                 RESERVED
SMPRSV3  EQU   X'08'                 RESERVED
SMPRSV4  EQU   X'04'                 RESERVED
SMPRSV5  EQU   X'02'                 RESERVED
SMPRSV6  EQU   X'01'                 RESERVED
SMPRSV7  DS    CL1                   RESERVED
SMPINDEX DS    H                     INDEX NUMBER OF THE RESOURCE POOL
*                                    TABLE ENTRY FOR THE CELL REQUESTED
SMPRSV8  DS    CL4                   RESERVED
SMPCNUM  DS    F                     NUMBER OF CELLS TO BE ALLOCATED
SMPCADDR DS    A                     INPUT - ADDRESS OF FIRST CELL
*                                            TO BE DEALLOCATED,
*                                    OUTPUT- ADDRESS OF FIRST CELL
*                                            THAT WAS ALLOCATED
SMPEND   DS    0F                    END OF SMPL
         MEND
**/
*%SMPLPLS2:;
*%IF SMPLPARM = 'Y' %THEN            /* NON BASED SMPL REQUESTED ?   */
*   %GOTO NOTBASE;                   /* YES, GO GENERATE NON BASED DCL*/
*%BASE:;                             /* GENERATE BASED DCL           */
*DECLARE
*  1 SMPL BASED(SMPLPTR) BDY(WORD),  /* STORAGE MANAGEMENT PARM LIST
*                                       ENTRY                        */
*%GOTO BODY;                         /* GO GENERATE SMPL BODY        */
*%NOTBASE:;                          /* GENERATE NON BASED DCL       */
*DECLARE
*  1 SMPL BDY(WORD),                 /* STORAGE MANAGEMENT PARM LIST
*                                       ENTRY                        */
*%BODY:;                             /* GENERATE SMPL BODY           */
*    3 SMPFLAGS FIXED(8),            /* INDICATOR FLAGS              */
*      5 SMPEOPL  BIT(1),            /* END OF PARM LIST INDICATOR -
*                                       WHEN 1, THIS ENTRY IS LAST ENTRY
*                                       OF THE PARAMETER LIST        */
*      5 SMPGLIND BIT(1),            /* GLOBAL/LOCAL INDICATOR
*                                       0 = LOCAL CONTROL BLOCK,
*                                       1 = GLOBAL CONTROL BLOCK     */
*      5 SMPRSV1  BIT(1),            /* RESERVED                     */
*      5 SMPRSV2  BIT(1),            /* RESERVED                     */
*      5 SMPRSV3  BIT(1),            /* RESERVED                     */
*      5 SMPRSV4  BIT(1),            /* RESERVED                     */
*      5 SMPRSV5  BIT(1),            /* RESERVED                     */
*      5 SMPRSV6  BIT(1),            /* RESERVED                     */
*    3 SMPRSV7 CHAR(1),              /* RESERVED                     */
*    3 SMPINDEX FIXED(16),           /* INDEX NUMBER OF THE RESOURCE
*                                       POOL TABLE ENTRY FOR THE CELL
*                                       REQUESTED                    */
*    3 SMPRSV8 CHAR(4),              /* RESERVED                     */
*    3 SMPCNUM FIXED(32),            /* NUMBER OF CELLS REQUESTED TO
*                                       BE ALLOCATED.
*                                       NOT USED FOR DEALLOCATION    */
*    3 SMPCADDR PTR(31),             /* INPUT - ADDRESS OF FIRST CELL
*                                       TO BE DEALLOCATED,
*                                       OUTPUT - ADDRESS OF FIRST CELL
*                                       THAT WAS ALLOCATED           */
*    3 SMPEND CHAR(0) BDY(WORD);     /* END OF SMPL                  */
*@SPACE(5);
*/********************************************************************/
*/*                                                                  */
*/*   THE FOLLOWING IS THE DECLARATION FOR THE CELL CHAINING         */
*/*   WHEN MORE THAN ONE CELL OF THE SAME TYPE IS ALLOCATED          */
*/*                                                                  */
*/********************************************************************/
*DCL
*  1 SMPCELL BASED,                  /* STORAGE MANAGER CELL         */
*    3 SMPNCELL PTR(31),             /* ADDRESS OF NEXT CELL IN CHAIN*/
*    3 * CHAR(*);                    /* REMAINDER OF CELL            */
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*   THE FOLLOWING CONSTANTS ARE THE INDEX NUMBERS FOR              */
*/*   EACH TYPE OF CONTROL BLOCK THAT GRS STORAGE MANAGER            */
*/*   PROCESSES. THESES INDICES CORRESPOND TO THE ONE'S IN           */
*/*   THE RPT.                                                       */
*/*                                                                  */
*/********************************************************************/
*DECLARE
   SMPQCB1I FIXED(8) CONSTANT(1),    /* INDEX FOR QCB WITH
                                        24 BYTE RNAME                */
   SMPQCB2I FIXED(8) CONSTANT(2),    /* INDEX FOR QCB WITH
                                        44 BYTE RNAME                */
   SMPQCB3I FIXED(8) CONSTANT(3),    /* INDEX FOR QCB WITH
                                        256 BYTE RNAME               */
   SMPQELI  FIXED(8) CONSTANT(4),    /* INDEX FOR QEL                */
   SMPQXBI  FIXED(8) CONSTANT(5),    /* INDEX FOR QXB                */
   SMPQWBI  FIXED(8) CONSTANT(6),    /* INDEX FOR QWB (GLOBAL ONLY)  */
   SMPHWKAI FIXED(8) CONSTANT(6),    /* INDEX FOR HUGE WORK AREA
                                        (LOCAL ONLY)                 */
   SMPTWKAI FIXED(8) CONSTANT(7),    /* INDEX FOR TINY WORK AREA     */
   SMPPQCBI FIXED(8) CONSTANT(8),    /* INDEX FOR PQCB               */
   SMPMRBI  FIXED(8) CONSTANT(9),    /* INDEX FOR MRB                */
   SMPCRBI  FIXED(8) CONSTANT(10);   /* INDEX FOR CRB (GLOBAL ONLY)  */
 @SPACE(3);
 /********************************************************************/
 /*                                                                  */
 /*   THE FOLLOWING CONSTANTS ARE SIZES FOR EACH TYPE OF             */
 /*   WORKAREA THAT GRS STORAGE MANAGER PROCESSES.                   */
 /*                                                                  */
 /********************************************************************/
 DECLARE
   SMPTWKAS FIXED(16) CONSTANT(248),  /* SIZE OF A TINY WORK AREA    */
   SMPHWKAS FIXED(16) CONSTANT(4000); /* SIZE OF A HUGE WORK AREA    */
