* %/* START OF SPECIFICATIONS  ***                           @G24LB22
*                                                            @G24LB22
*01*  MODULE-NAME = ICBMODC                                  @G24LB22
*                                                            @G24LB22
*01*  DESCRIPTIVE-NAME = MODIFY CARTRIDGE                    @G24LB22
*                                                            @G24LB22
*01*  COPYRIGHT = NONE                                       @G24LB22
*                                                            @G24LB22
*01*  STATUS =  OS/VS2                                       @G24LB22
*                                                            @G24LB22
*01*  FUNCTION = BUILDS A REQUEST BLOCK FOR A MODIFYC        @G24LB22
*                REQUEST.  THE MACRO IS A COMMUNICATION LINK @G24LB22
*                BETWEEN THE CALLER AND THE MSSC SVC MODULE. @G24LB22
*                                                            @G24LB22
*01*  NOTES = ICBMODC IS CODED IN PLS ONLY.                  @G24LB22
*                                                            @G24LB22
*02*    DEPENDENCIES = NONE                                  @G24LB22
*                                                            @G24LB22
*02*    RESTRICTIONS = THE PREFIXES ICB AND MOD SHOULD BE    @G24LB22
*                      AVOIDED WHEN INVOKING THIS MACRO.     @G24LB22
*                                                            @G24LB22
*02*    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF         @G24LB22
*                              REGISTERS BY MACROS:          @G24LB22
*                              R0,R1,R14, AND R15.           @G24LB22
*                                                            @G24LB22
*01*  MODULE-TYPE = MACRO                                    @G24LB22
*                                                            @G24LB22
*02*    PROCESSOR = PLS2                                     @G24LB22
*                                                            @G24LB22
*01*  INPUT = PARAMETERS SPECIFIED ON THE PLS MACRO          @G24LB22
*             INVOCATION.                                    @G24LB22
*                                                            @G24LB22
*                                                            @G24LB22
*     MACRO SYNTAX                                           @G24LB22
*                                                            @G24LB22
*     LIST FORM                                              @G24LB22
*                                                            @G24LB22
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @G24LB22
*                                                            @G24LB22
*     ICBMODC     MF(L,NAME[,ATTRIBUTE])                     @G24LB22
*                                                            @G24LB22
*     EXECUTE FORM                                           @G24LB22
*                                                            @G24LB22
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @G24LB22
*                                                            @G24LB22
*     ICBMODC     MF(E,NAME)                                 @G24LB22
*                                           [,COMPLETE])     @G24LB22
*                                           ATTR1(NAME)      @G24LB22
*                                           ATTR2(NAME)      @G24LB22
*                                           VOLID(NAME)      @G24LB22
*                                           LOC1(NAME)       @G24LB22
*                                           CSN(NAME)        @G24LB22
*                                           NVOLID(NAME)     @G24LB22
*                                           LOC2(NAME)       @G24LB22
*                                           CSNPAIR(NAME)    @G24LB22
*                                           VOLFLG(NAME)     @G24LB22
*                                           SEQNO(NAME)      @G24LB22
*                                                            @G24LB22
*     KEYWORD PARAMETERS:                                    @G24LB22
*                                                            @G24LB22
*     MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE      @G24LB22
*            MACRO FORMAT AND MAY GIVE THE ADDRESS OR        @G24LB22
*            ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK   @G24LB22
*            IS STORED.                                      @G24LB22
*                                                            @G24LB22
*            L - LIST FORM:  THE EXPANSION OF THE L-FORM     @G24LB22
*                MACRO WILL RESULT IN AN UNINITIALIZED       @G24LB22
*                REQUEST BLOCK.                              @G24LB22
*                                                            @G24LB22
*            (1) NAME - THE MACRO INVOKER MUST SPECIFY A     @G24LB22
*                NAME FOR HIS STRUCTURE WHEN INVOKING THE    @G24LB22
*                PLS LIST FORM.                              @G24LB22
*                                                            @G24LB22
*            (2) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS    @G24LB22
*                ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION @G24LB22
*                IN AN UNINITIALIZED REQUEST BLOCK.          @G24LB22
*                ATTRIBUTE EXAMPLE:                          @G24LB22
*                                                            @G24LB22
*                CHAR, FIXED, STATIC LOCAL, NONLOCAL,        @G24LB22
*                BASED(*), ETC.                              @G24LB22
*                                                            @G24LB22
*            E - EXECUTABLE FORM:  THE EXPANSION OF THIS     @G24LB22
*                FORM CONSISTS OF A LINKAGE INSTRUCTION AND  @G24LB22
*                POSSIBLY, PARAMETER BINDING INSTRUCTIONS.   @G24LB22
*                                                            @G24LB22
*                SUB-PARAMETERS                              @G24LB22
*                (1)  AN E MUST BE SPECIFIED IN THE FIRST    @G24LB22
*                     SUB-PARAMETER POSITION.  THIS          @G24LB22
*                     INDICATES THAT THE MACRO IS IN         @G24LB22
*                     EXECUTABLE FORM.                       @G24LB22
*                                                            @G24LB22
*                (2)  A NAME MUST BE SPECIFIED IN THE SECOND @G24LB22
*                     SUB-PARAMETER.                         @G24LB22
*                                                            @G24LB22
*                (3)  'COMPLETE' - COMPLETE WILL CAUSE THE   @G24LB22
*                     MACRO TO ZERO OUT THE REQUEST BLOCK.   @G24LB22
*                     AFTER ZEROING THE REQUEST BLOCK THE    @G24LB22
*                     FUNCTION OPCODE AND LENGTH ARE         @G24LB22
*                     PLACED IN THE REQUEST BLOCK.           @G24LB22
*                                                            @G24LB22
*                                                            @G24LB22
*                REQUEST          × ORDER    × CODE          @G24LB22
*                --------------------------------------      @G24LB22
*                MODIFYC          × HEX'11'  × N/A           @G24LB22
*                                                            @G24LB22
*                                                            @G24LB22
*01*  EXIT-NORMAL = VALID INVOCATION                         @G24LB22
*                                                            @G24LB22
*02*    CONDITION = RETURN CODE = 0.                         @G24LB22
*                 = RETURN CODE = 4.                         @G24LB22
*                                                            @G24LB22
*02*    OUTPUT = IN-LINE PLS STATEMENTS THAT PERFORM THE     @G24LB22
*                REQUESTED FUNCTION.                         @G24LB22
*              = A WARNING MESSAGE WILL BE PRINTED, AND      @G24LB22
*                THE EXPANSION WILL CONTINUE.                @G24LB22
*                                                            @G24LB22
*01*  EXIT-ERROR = INVALID INVOCATION                        @G24LB22
*                                                            @G24LB22
*02*    CONDITION = RETURN CODE = 12.                        @G24LB22
*                                                            @G24LB22
*02*    OUTPUT = ERROR MESSAGE                               @G24LB22
*                                                            @G24LB22
*01*  EXTERNAL-REFERENCES = NONE                             @G24LB22
*                                                            @G24LB22
*01*  TABLES = NONE                                          @G24LB22
*                                                            @G24LB22
*01*  MESSAGES = AS FOLLOWS:                                 @G24LB22
*                                                            @G24LB22
*            ICB602I:  A NAME FOR THE REQUEST BLOCK MUST     @G24LB22
*                      BE SPECIFIED IN MF(2)                 @G24LB22
*            ICB604I:  WARNING - ONLY MF PARAMETER IS VALID  @G24LB22
*                      FOR LIST FORM                         @G24LB22
*            ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME       @G24LB22
*                      IF EXEC MACRO FORM REQUESTED          @G24LB22
*            ICB620I:  INVALID MF PARAMETER SPECIFIED,       @G24LB22
*                      MUST BE L  OR E.                      @G24LB22
*                                                            @G24LB22
*01*  INNER-MACRO = NONE                                     @G24LB22
*                                                            @G24LB22
*01*  SYSTEM-MACRO = NONE                                    @G24LB22
*                                                            @G24LB22
*01*  CHANGE-ACTIVITY = NONE                                 @G24LB22
*                                                            @G24LB22
**** END OF SPECIFICATIONS ***                               @G24LB22*/
*                                                          /*@G24LB22*/
*          ICBMODC: MACRO KEYS(MF,ATTR1,ATTR2,VOLID,LOC1,
*                              CSN,NVOLID,LOC2,CSNPAIR,
*                              VOLFLG,SEQNO);              /*@G24LB22*/
*/* EXTERNAL DECLARES                                        @G24LB22*/
*   DCL MODTSTR1 FIXED EXT;            /*USED AS A TEST TO   @G24LB22*/
*                                      /*SEE IF R1 ALREADY   @G24LB22*/
*                                      /*DECLARED            @G24LB22*/
*/* INTERNAL DECLARES                                        @G24LB22*/
*   DCL  RETCODE FIXED;                /*RETURN CODE         @G24LB22*/
*   DCL  MODCODE CHAR;                 /*MODIFYC ORDER       @G24LB22*/
*   DCL  LENGTH CHAR;                  /*LENGTH OF BLOCK     @G24LB22*/
*   DCL  ESW FIXED;                    /*EXIT-SWITCH         @G24LB22*/
*   DCL  BSW FIXED;                    /*BRCH-SWITCH         @G24LB22*/
*   DCL  CTR FIXED;                    /*PARM-SWITCH         @G24LB22*/
*/* INITIALIZE SWITCHES AND FIELDS                           @G24LB22*/
*   ESW=0;                             /*INIT ERROR SWITCH   @G24LB22*/
*   BSW=0;                             /*INIT BRANCH SWITCH  @G24LB22*/
*   CTR=0;                             /*INIT PARM  SWITCH   @G24LB22*/
*   MODCODE='11';                      /*ORDER CODE          @G24LB22*/
*   LENGTH='34';                       /*REQ BLK LEN         @G24LB22*/
*/* END OF DECLARES AND INITIALIZATION                       @G24LB22*/
*   IF MODTSTR1=0 THEN                 /*HAS R1 BEEN DCL'D?  @G24LB22*/
*             DO;                      /*NO,DECLARE IT       @G24LB22*/
*                  ANS('DCL MODBR1 PTR REG(1) ;'××
*                       '/*WILL CONTAIN BLOCK ADDRESS @G24LB22*/')
*                       SKIP(1);                           /*@G24LB22*/
*                  MODTSTR1=1;         /*MODTSTR1 SET TO 1   @G24LB22*/
*             END;                     /*                    @G24LB22*/
*   IF MF(1)^='L' THEN                 /*IF NOT LIST FORM    @G24LB22*/
*        GO TO EXCHECK;                /*THEN BRANCH         @G24LB22*/
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @G24LB22*/
*        DO;                           /*NO,TURN ESW ON AND  @G24LB22*/
*             ESW=1;                   /*PRINT ERROR MSG     @G24LB22*/
*             ANS MSG('  ICB602I - A NAME FOR THE '××
*                  'REQUEST BLOCK MUST BE SPECIFIED '××
*                  'IN MF(2)')SKIP(5);                     /*@G24LB22*/
*             RETCODE=12;              /*SET RETURN CODE     @G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH         @G24LB22*/
*        IF ATTR1 ^= '' THEN  /*ATTR1 SPECIFIED?             @G24LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @G24LB22*/
*        IF ATTR2 ^= '' THEN  /*ATTR2 SPECIFIED?             @G24LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @G24LB22*/
*        IF VOLID ^= '' THEN  /*VOLID SPECIFIED?             @G24LB22*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/
*        IF LOC1 ^= '' THEN    /*LOC1 SPECIFIED?             @G24LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @G24LB22*/
*        IF CSN ^= '' THEN    /*CSN SPECIFIED?               @G24LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @G24LB22*/
*        IF NVOLID ^= '' THEN  /*NVOLID SPECIFIED?           @G24LB22*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/
*        IF LOC2 ^= '' THEN    /*LOC2 SPECIFIED?             @G24LB22*/
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @G24LB22*/
*        IF CSNPAIR ^= '' THEN  /*CSNPAIR SPECIFIED?         @G24LB22*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/
*        IF VOLFLG ^= '' THEN  /*VOLFLG SPECIFIED?           @G24LB22*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/
*        IF SEQNO ^= '' THEN  /*SEQNO SPECIFIED?             @G24LB22*/
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @G24LB22*/
*          DO;                /*YES,PRINT WARNING MSG        @G24LB22*/
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @G24LB22*/
*             ANS MSG('  ICB604I - WARNING-ONLY'××
*                 ' THE MF PARAMETER IS VALID FOR THE'××
*                 ' LIST FORM  ')SKIP;                     /*@G24LB22*/
*          END;               /*                             @G24LB22*/
*/*                                                          @G24LB22*/
*/*********************************************************  @G24LB22*/
*/* PRINT OUT DECLARES FOR LIST FORM                         @G24LB22*/
*/*********************************************************  @G24LB22*/
*/*                                                          @G24LB22*/
*/*                                                          @G24LB22*/
*   ANS('/*******************************************'××
*       '************* @G24LB22*/')SKIP;
*   ANS('/*   MSSC MODIFY CARTRIDGE MACRO    '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*VS1-6/VS2-3 VERSION--04/23/76 LEVEL 00    '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @G24LB22*/')SKIP;
*   IF MF(3) ^= '' THEN DO;            /*PLS ATTR SPCD?      @G24LB22*/
*   ANS('DCL 1  '××MF(2)××' '××MF(3)××','××
*   '/*MODIFYC REQUEST BLOCK*/ ') SKIP(1);
*       END;
*     ELSE
*       DO;
*   ANS('DCL 1  '××MF(2)××','××' /*MF2 REQUEST BLOCK'××
*        '@G24LB22*/') SKIP(1);
*       END;
*   ANS('      2  MODLEN FIXED(31), /*LENGTH'××
*        ' = 52 BYTES (DEC.) @G24LB22*/')SKIP(1);
*   ANS('      2  MODORDER FIXED(8), /*OPCODE='××
*        ' 11 HEX @G24LB22*/') SKIP(1);
*   ANS('      2  MODRES1 CHAR(1), /*RESERVED @G24LB22*/') SKIP(1);
*   ANS('      2  MODFUNC BIT(8),'××
*        ' /*FUNCTION FIELD @G24LB22*/') SKIP(1);
*   ANS('        3  MODUPDTE BIT(1), /*UPDATE'××
*        'CARTRIDGE LABEL @G24LB22*/') SKIP(1);
*   ANS('        3  MODCREAT BIT(1), /*CREATE'××
*        'SCRATCH CARTRIDGE @G24LB22*/') SKIP(1);
*   ANS('        3  MODMOVE BIT(1), /*MOVE CARTRIDGE'××
*        'TO CAS @G24LB22*/') SKIP(1);
*   ANS('        3  *      BIT(5), /*RESERVED @G24LB22*/') SKIP(1);
*   ANS('      2  MODLOCAT BIT(8),'××
*        ' /*LOCATE ATTRIBUTE @G24LB22*/') SKIP(1);
*   ANS('        3  MODLCSN BIT(1), /*LOCATE'××
*        ' USING CSN @G24LB22*/') SKIP(1);
*   ANS('        3  MODLVOL BIT(1), /*LOCATE'××
*        ' USING VOLID @G24LB22*/') SKIP(1);
*   ANS('        3  MODLLXYZ BIT(1), /*LOCATE'××
*        ' USING LXYZ @G24LB22*/') SKIP(1);
*   ANS('        3  MODLSEQ1 BIT(1), /*UPDTE-MOVE'××
*        ' SEQ1 CART @G24LB22*/') SKIP(1);
*   ANS('        3  MODLSEQ2 BIT(1), /*UPDTE-MOVE'××
*        ' SEQ2 CART @G24LB22*/') SKIP(1);
*   ANS('        3  *       BIT(3), /*RESERVED BITS '××
*        'AND MUST BE ZERO @G24LB22*/') SKIP(1);
*   ANS('      2  MODVOLID CHAR(6),'××
*        ' /*CURRENT VOLID @G24LB22*/') SKIP(1);
*   ANS('      2  MODLXYZ FIXED(16), /*CURRENT '××
*        'LOC OF CART @G24LB22*/') SKIP(1);
*   ANS('      2  MODCSN CHAR(12),'××
*        ' /*CURRENT CSN @G24LB22*/') SKIP(1);
*   ANS('      2  MODNVOL CHAR(6), /*SUPPLIED '××
*        'VOLID FOR UPDTE @G24LB22*/') SKIP(1);
*   ANS('      2  MODNLXYZ FIXED(16), /*SUPPLIED '××
*        'LXYZ FOR UPDTE @G24LB22*/') SKIP(1);
*   ANS('      2  MODNCSN CHAR(12), /*CSN OF PAIR '××
*        'FOR UPDTE @G24LB22*/') SKIP(1);
*   ANS('      2  MODVFLG BIT(8), /*VOLUME FLAGS @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*   ANS('        3  *       BIT(2), /*RESERVED BITS '××
*        'AND MUST BE ZERO @G24LB22*/') SKIP(1);
*   ANS('        3  MODSECUR BIT(1), /*SECURE'××
*        ' VOLUME @G24LB22*/') SKIP(1);
*   ANS('        3  MODEXCL BIT(1), /*EXCLUSIVE'××
*        ' VOLUME @G24LB22*/') SKIP(1);
*   ANS('        3  MODSCR BIT(1), /*SCRATCH'××
*        ' CARTRIDGE @G24LB22*/') SKIP(1);
*   ANS('        3  MODBIND BIT(1), /*BOUND'××
*        ' VOLUME @G24LB22*/') SKIP(1);
*   ANS('        3  MODWINH BIT(1), /*WRITE'××
*        ' INHIBIT @G24LB22*/') SKIP(1);
*   ANS('        3  *       BIT(1), /*RESERVED BITS '××
*        'AND MUST BE ZERO @G24LB22*/') SKIP(1);
*   ANS('      2  MODSEQNO CHAR(1), /*ID OF CARTRIDGE '××
*        'OF PAIR @G24LB22*/') SKIP(1);
*   ANS('      2  *       CHAR(2); /*RESERVED @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*   GO TO EXIT;                        /*BRANCH TO END       @G24LB22*/
*/*********************************************************  @G24LB22*/
*/* THIS IS ALL THAT IS DONE FOR LIST FORM                   @G24LB22*/
*/*********************************************************  @G24LB22*/
*/* THE MACRO BRANCHES HERE FOR EXEC FORM                    @G24LB22*/
*/*********************************************************  @G24LB22*/
*/*                                                          @G24LB22*/
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM?          @G24LB22*/
*             GO TO EXFORM;            /*YES, BRANCH         @G24LB22*/
*   ESW=1;                             /*TURN EXIT-SWTCH ON  @G24LB22*/
*   DO;                                /*PRINT THIS ERR MSG  @G24LB22*/
*        ANS MSG('  ICB620I - INVALID MF PARAMETER'××
*             ' SPECIFIED, MUST BE L OR E') SKIP(5);       /*@G24LB22*/
*   END;                                /*                   @G24LB22*/
*   RETCODE=12;                        /*SET RETURN CODE     @G24LB22*/
*   GO TO TEST1;                       /*BRANCH              @G24LB22*/
*EXFORM: IF MF(2)='' THEN              /*ADDR OF LIST GIVEN  @G24LB22*/
*             DO;                      /*NO,PRINT ERROR MSG  @G24LB22*/
*                  ESW=1;              /*TURN EXIT-SWTCH ON  @G24LB22*/
*                  ANS MSG('  ICB612I - MF(2) MUST '××
*                  'CONTAIN REQ BLK NAME IF '××
*                  'EXEC MACRO FORM REQUESTED ') SKIP(5);  /*@G24LB22*/
*                  RETCODE=12;         /*SET RETURN CODE     @G24LB22*/
*                  GO TO TEST1;        /*BRANCH              @G24LB22*/
*             END;                     /*                    @G24LB22*/
*   ANS('/*******************************************'××
*       '************* @G24LB22*/')SKIP;
*   ANS('/*  MSSC MODIFY CARTRIDGE MACRO     '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*VS1-6/VS2-3 VERSION-- 04/23/76 LEVEL 00   '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*       '              @G24LB22*/')SKIP;
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*       '              @G24LB22*/')SKIP;
*   ANS('/*******************************************'××
*       '************* @G24LB22*/')SKIP;
*   ANS('RFY(MODBR1)RSTD; /*RESTRICT REGISTER 1 @G24LB22*/')SKIP;
*   ANS('MODBR1=ADDR('××MF(2)××
*        '); /*SET MODBR1 TO ADDR OF REQ BLK @G24LB22*/') SKIP(1);
*  IF MF(3) = 'COMPLETE' THEN    /*REQUEST TO ZERO?          @G24LB22*/
*   DO;                          /*YES,ZERO BLK              @G24LB22*/
*   ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';'××         /*@G24LB22*/
*       '/*ZERO REQUEST BLOCK @G24LB22*/')SKIP;
*   END;                        /*                           @G24LB22*/
*   ANS('MODLEN='××QUOTE(LENGTH)××'X;'××
*       '/*SET LENGTH FIELD @G24LB22*/')SKIP(1);
*   ANS('MODORDER='××QUOTE(MODCODE)××'X; /*OPCODE @G24LB22*/') SKIP(1);
*TEST1:                                                    /*@G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF ATTR1 ^='' THEN                 /*ATTR1 SPECIFIED?    @G24LB22*/
*        DO;
*   ANS('MODFUNC='××ATTR1××';/*FILL IN FUNCTION FIELD @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF ATTR2 ^='' THEN                 /*ATTR2 SPECIFIED?    @G24LB22*/
*        DO;
*   ANS('MODLOCAT='××ATTR2××';/*FILL IN SEARCH FIELD @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF VOLID ^='' THEN                 /*VOLID SPECIFIED?    @G24LB22*/
*        DO;
*   ANS('MODVOLID='××VOLID××';/*FILL IN CURRENT VOLID @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF LOC1 ^='' THEN                 /*LXYZ SPECIFIED?      @G24LB22*/
*        DO;
*   ANS('MODLXYZ='××LOC1××';/*FILL IN CURRENT LOCATION @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF CSN ^='' THEN                 /*CSN SPECIFIED?      @G24LB22*/
*        DO;
*   ANS('MODCSN='××CSN××';/*FILL IN CURRENT CSN @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF NVOLID ^='' THEN                /*VOLID SPECIFIED?    @G24LB22*/
*        DO;                           /*                    @G24LB22*/
*   ANS('MODVOLID='××NVOLID××';/*FILL IN NEW VOLID @G24LB22*/')
*        SKIP(1);
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, GO TO END      @G24LB22*/
*   IF LOC2 ^='' THEN                 /*LXYZ SPECIFIED?      @G24LB22*/
*        DO;
*   ANS('MODNLXYZ='××LOC2××';/*FILL IN NEW LOCATION @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF CSNPAIR ^='' THEN             /*CSN SPECIFIED?        @G24LB22*/
*        DO;
*   ANS('MODNCSN='××CSNPAIR××';/*FILL IN CURRENT CSN @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/
*   IF VOLFLG ^='' THEN              /*VOLFLG  SPECIFIED?    @G24LB22*/
*        DO;                           /*                    @G24LB22*/
*   ANS('MODVFLG='××VOLFLG××';/*FILL IN VOLUME FLAGS @G24LB22*/')
*        SKIP(1);                                          /*@G24LB22*/
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, GO TO END      @G24LB22*/
*   IF SEQNO ^='' THEN               /*SEQNO  SPECIFIED?     @G24LB22*/
*        DO;
*   ANS('MODSEQNO='××SEQNO××';/*FILL IN SEQUENCE NO. @G24LB22*/')
*        SKIP(1);
*        END;                          /*                    @G24LB22*/
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/
*        GO TO EXIT;                   /*YES, GO TO END      @G24LB22*/
*LINK: ANS(' SVC (126); /*ISSUE SVC INSTRUCTION @G24LB22*/')
*        SKIP(1);
*      ANS('RFY  MODBR1 UNRSTD;/*UNRESTRCT REG 1 @G24LB22*/')SKIP;
*EXIT: RETURN CODE(RETCODE);                               /*@G24LB22*/
*   %END;                                                  /*@G24LB22*/
