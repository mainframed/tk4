* %/*  START OF SPECIFICATIONS****                             @Y30LB02
.*                                                             @Y30LB02
.*01   MODULE-NAME = ICBTRACE                                  @Y30LB02
.*                                                             @Y30LB02
.*01   DESCRIPTIVE-NAME = TRACE MACRO                          @Y30LB02
.*                                                             @Y30LB02
.*01   COPYRIGHT = NONE                                        @Y30LB02
.*                                                             @Y30LB02
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02
.*                                                             @Y30LB02
.*01   FUNCTION = REQUEST THE MSC TO TRACE THE SCHEDULE        @Y30LB02
.*                QUEUES                                       @Y30LB02
.*                                                             @Y30LB02
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02
.*                                                             @Y30LB02
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02
.*                                                             @Y30LB02
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02
.*                      ICB AND TRAC                           @Y30LB02
.*                                                             @Y30LB02
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF          @Y30LB02
.*                              REGISTERS BY MACROS:           @Y30LB02
.*                              R0,R1,R14, AND R15.            @Y30LB02
.*                                                             @Y30LB02
.*01   MODULE-TYPE = MACRO                                     @Y30LB02
.*                                                             @Y30LB02
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02
.*                                                             @Y30LB02
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02
.*                                                             @Y30LB02
.*02     ENTRY-POINT = ICBTRACE                                @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*02     LINKAGE =  SVC 126                                    @Y30LB02
.*                                                             @Y30LB02
.*01  INPUT                                                    @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   THE TRACE REQUEST IS ISSUED IF A HOST WISHES TO FOLLOW    @Y30LB02
.*   THE STATUS OF THE SCHEDULE QUEUE(CARTRIDGE MOVEMENT,      @Y30LB02
.*   STAGING/ DESTAGING) ACTIVITY.                             @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.* MACRO SYNTAX                                                @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   LIST FORM                                                 @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBTRACE MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.*   STANDARD FORM                                             @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBTRACE FLAGS=ADDR/(R)            NONE                      @Y30LB02
.*         TIMDAT=ADDR/(R)                                     @Y30LB02
.*                                                             @Y30LB02
.*                                                             @Y30LB02
.* EXECUTE FORM                                                @Y30LB02
.*                                                             @Y30LB02
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02
.*                                                             @Y30LB02
.*ICBTRACE MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02
.*                              FLAGS=ADDR/(R)                 @Y30LB02
.*                              TIMDAT=ADDR/(R)                @Y30LB02
.*                                                             @Y30LB02
.*   KEYWORD PARAMETERS:                                       @Y30LB02
.*                                                             @Y30LB02
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02
.*          IS STORED.                                         @Y30LB02
.*                                                             @Y30LB02
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02
.*              AND LENGTH FIELDS.                             @Y30LB02
.*                                                             @Y30LB02
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02
.*                                                             @Y30LB02
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02
.*              PLS LIST FORM.                                 @Y30LB02
.*                                                             @Y30LB02
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02
.*              BUTE EXAMPLE:                                  @Y30LB02
.*                                                             @Y30LB02
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02
.*              BASED(*), ETC.                                 @Y30LB02
.*                                                             @Y30LB02
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02
.*              BINDING INSTRUCTION.                           @Y30LB02
.*                                                             @Y30LB02
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02
.*                                                             @Y30LB02
.*              SUB-PARAMETERS                                 @Y30LB02
.*                                                             @Y30LB02
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02
.*                                                             @Y30LB02
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02
.*                                                             @Y30LB02
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02
.*                   IN THE REQUEST BLOCK.                     @Y30LB02
.*                                                             @Y30LB02
.*   FLAGS - A 2 BYTE FIELD WHICH INDICATES THE FUNCTION       @Y30LB02
.*   TO BE PERFORMED.  THE FORMAT OF THE FLAGS FIELD IS AS     @Y30LB02
.*   FOLLOWS:                                                  @Y30LB02
.*                                                             @Y30LB02
.*   --------------------------------------------              @Y30LB02
.*   × X ×   BITS 1-15 NOT USED - ALWAYS ZERO   ×              @Y30LB02
.*   --------------------------------------------              @Y30LB02
.*                                                             @Y30LB02
.*   BIT 0 ------------'1'B     TRACE ON                       @Y30LB02
.*         ------------'0'B     TRACE OFF                      @Y30LB02
.*                                                             @Y30LB02
.*   BITS 1-15---------         ×NOT USED - ZERO×              @Y30LB02
.*                                                             @Y30LB02
.*   TRACE ON:                                                 @Y30LB02
.*                                                             @Y30LB02
.*   WHEN THIS ATTRIBUTE IS SPECIFIED, THE HOST WILL PASS      @Y30LB02
.*   CURRENT TIME AND DATE TO THE TRACE HEADER RECORD.  IF     @Y30LB02
.*   THE TRACE IS ALREADY ACTIVE THIS REQUEST IS CONSIDERED    @Y30LB02
.*   SATISFIED.  IF THE TRACE IS INACTIVE, IT WILL BE ACTI-    @Y30LB02
.*   VATED ON TRACEX AND THE HOST REQUESTING THE ORDER WILL    @Y30LB02
.*   BE NOTIFIED.                                              @Y30LB02
.*                                                             @Y30LB02
.*   TRACE OFF:                                                @Y30LB02
.*                                                             @Y30LB02
.*   WHEN THIS ATTRIBUTE IS SPECIFIED, THE MSC WILL CHECK TO   @Y30LB02
.*   DETERMINE WHETHER THE TRACE IS ACTIVE.  IF THE TRACE      @Y30LB02
.*   IS NOT ACTIVE, A MESSAGE IS SENT TO THE REQUESTING        @Y30LB02
.*   HOST, INDICATING THAT THE REQUEST HAS BEEN FULFILLED.     @Y30LB02
.*   OTHERWISE, THE MSC WILL DISABLE THE TRACE AND SEND A      @Y30LB02
.*   MESSAGE INDICATING TRACE ENDED.                           @Y30LB02
.*                                                             @Y30LB02
.* TIMDAT -  TIME AND DATE:  AN EIGHT BYTE FIELD WHICH         @Y30LB02
.*           CONTAINS THE TIME OF DAY AND DATE THE TRACE       @Y30LB02
.*           FUNCTION WAS ACTIVATED OR DEACTIVATED.  THE       @Y30LB02
.*           FIRST FOUR BYTES WILL CONTAIN THE DATE IN         @Y30LB02
.*           FIXED DECIMAL AND THE NEXT FOUR BYTES WILL CON-   @Y30LB02
.*           TAIN THE TIME IN FIXED BINARY.                    @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02
.*                                                             @Y30LB02
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02
.*                                                             @Y30LB02
.*02     OUTPUT = REQUESTED ORDER GENERATED FOR THE SVC        @Y30LB02
.*                                                             @Y30LB02
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02
.*                                                             @Y30LB02
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02
.*                                                             @Y30LB02
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02
.*                INVOCATION                                   @Y30LB02
.*                                                             @Y30LB02
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02
.*                                                             @Y30LB02
.*01  TABLES = NONE                                            @Y30LB02
.*                                                             @Y30LB02
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02
.*      ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE         @Y30LB02
.*                SPECIFIED IN MF(2)                           @Y30LB02
.*      ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID FOR   @Y30LB02
.*                THE LIST FORM                                @Y30LB02
.*      ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD         @Y30LB02
.*                FORM MACRO                                   @Y30LB02
.*      ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME              @Y30LB02
.*                IF EXEC MACRO FORM REQUESTED                 @Y30LB02
.*      ICB614I:  TIMDAT MUST BE SPECIFIED FOR STANDARD        @Y30LB02
.*                FORM MACRO                                   @Y30LB02
.*      ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST         @Y30LB02
.*                BE L, E, OR NULL                             @Y30LB02
.*                                                             @Y30LB02
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02
.*                                                             @Y30LB02
.*01  INNER MACROS = NONE                                      @Y30LB02
.*                                                             @Y30LB02
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02
.*                                                             @Y30LB02
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02
.*                                                             @Y30LB02
.**** END OF SPECIFICATIONS ***                                @Y30LB02
         MACRO                                                 @Y30LB02
&SYMBOL  ICBTRACE &MF=,&FLAGS=,&TIMDAT=                        @Y30LB02
         LCLB  &ERSW              ERROR SWITCH                 @Y30LB02
         LCLC  &TRACE             TRACE MACRO INSTR INDX       @Y30LB02
&TRACE   SETC 'T'.'&SYSNDX'       ASSIGN CHARACTER VALUE       @Y30LB02
.*                                                             @Y30LB02
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02
.*                                                             @Y30LB02
         AIF  ('&MF(1)' NE 'L').EFORM       LIST FORM?         @Y30LB02
         AIF  ('&FLAGS' EQ '' AND '&TIMDAT' EQ '').LISTOK      @Y30LB02
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02
         MNOTE 4,'  IS VALID FOR THE LIST FORM '               @Y30LB02
.*                                                             @Y30LB02
.LISTOK  ANOP                                                  @Y30LB02
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02
*  MACMEAN  MSSC TRACE MACRO--INITIALIZED LIST FORM            @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  DS   0F                                               @Y30LB02
TRACLEN  DC   F'16'               LEN OF TRACE REQUEST BLK     @Y30LB02
TRACOPC  DC   XL1'24'             TRACE  FUNCTION OPCODE       @Y30LB02
TRAC001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02
TRACFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02
TRACTIM  DC   XL8'0000'           8-BYTE TIME/DATE AREA        @Y30LB02
         AGO  .FINISH                                          @Y30LB02
.*                                                             @Y30LB02
.LISTDS  ANOP                                                  @Y30LB02
*  MACMEAN  MSSC TRACE MACRO--UNINITIALIZED LIST FORM          @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
ICBTRACE DSECT                                                 @Y30LB02
TRACLEN  DS   F                   LEN OF REQ BLK 10 HEX        @Y30LB02
TRACOPC  DS   XL1                 TRACE OPCODE 24 HEX          @Y30LB02
TRAC001  DS   XL1                 1-BYTE RESERVED AREA         @Y30LB02
TRACFLG  DS   XL2                 2-BYTE FLAGS AREA            @Y30LB02
TRACTIM  DS   XL8                 8-BYTE TIME/DATE AREA        @Y30LB02
         AGO  .FINISH                                          @Y30LB02
.*       THE FOLLOWING PROCESSING IS ACCOMPLISHED FOR THE      @Y30LB02
.*       EXECUTABLE MACRO FORM                                 @Y30LB02
.*                                                             @Y30LB02
.EFORM   AIF  ('&MF(1)' NE 'E').SFORM       EXECUTE FORM?      @Y30LB02
         AIF  ('&MF(2)' EQ '').EXFAIL       MF(2) NULL?        @Y30LB02
*  MACMEAN  MSSC TRACE MACRO--EXECUTE FORM                     @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02
.*                                 USING IHBINNRA MACRO        @Y30LB02
         LA    0,16                LENGTH OF REQ BLOCK         @Y30LB02
         ST    0,0(1)              STORE LENGTH IN BLK         @Y30LB02
         MVI   4(1),X'24'          STORE OPCODE                @Y30LB02
         AGO  .CKSW1               BR TO CK ERROR SWITCH       @Y30LB02
.*                                                             @Y30LB02
.EXFAIL  ANOP                                                  @Y30LB02
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED'        @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
.*                                                             @Y30LB02
.CKSW1   AIF  (&ERSW).FINISH      IF ERROR-END PROCESSING      @Y30LB02
         AGO  .COMMON                                          @Y30LB02
.*                                                             @Y30LB02
.*       PROCESSING OF THE STANDARD FORM MACRO                 @Y30LB02
.*                                                             @Y30LB02
.SFORM   AIF  ('&MF(1)' NE '').BADFORM      STANDARD FORM?     @Y30LB02
         AIF  ('&FLAGS' NE '').CKTIME       FLAGS SPECIFIED?   @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED'        @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO  .CKSW2                                           @Y30LB02
.CKTIME  AIF  ('&TIMDAT' NE '').CKSW2       TIME SPECIFIED?    @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
         MNOTE 12,'  ICB614I - TIMDAT MUST BE SPECIFIED'       @Y30LB02
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02
         AGO  .CKSW2                                           @Y30LB02
.*                                                             @Y30LB02
.BADFORM ANOP                                                  @Y30LB02
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02
         MNOTE 12,'  SPECIFIED, MUST BE, L,E, OR NULL'         @Y30LB02
.*                                                             @Y30LB02
.*       THE FOLLOWING CODE CHECKS TO DETERMINE IF THE ERROR   @Y30LB02
.*       SWITCH IS ON.  IF YES, PROCESSING IS TERMINATED, OTHER@Y30LB02
.*       WISE STANDARD FORM MACRO PROCESSING WILL BE CON-      @Y30LB02
.*       TINUED                                                @Y30LB02
.*                                                             @Y30LB02
.CKSW2   AIF  (&ERSW).FINISH      IF YES-END PROCESSING        @Y30LB02
*  MACMEAN  MSSC TRACE MACRO--STANDARD FORM                    @Y30LB02
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02
         CNOP 0,4                                              @Y30LB02
&SYMBOL  BAL  1,&TRACE            BRANCH AROUND REQ BLK        @Y30LB02
TRACLEN  DC   A(&TRACE-*)         LENGTH OF REQUEST BLOCK      @Y30LB02
TRACOPC  DC   XL1'24'             TRACE FUNCTION OPCODE        @Y30LB02
TRAC001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02
TRACFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02
TRACTIM  DC   XL8'0000'           8-BYTE TIME/DATE AREA        @Y30LB02
&TRACE   EQU  *                                                @Y30LB02
.*                                                             @Y30LB02
.*       THE FOLLOWING CODE CHECKS FOR VALID PARAMETERS IF     @Y30LB02
.*       STANDARD FOR EXECUTE FORM MACRO IS SPECIFIED.         @Y30LB02
.*       IF PARAMETERS ARE SPECIFIED, THEY WILL BE STORED      @Y30LB02
.*       IN THE REQUEST BLOCK.                                 @Y30LB02
.*                                                             @Y30LB02
.COMMON  AIF  ('&FLAGS' EQ '').TIMDAT       FLAGS SPECIFIED?   @Y30LB02
         AIF  ('&FLAGS'(1,1) EQ '(').FLREG  FLAGS IN REG-FORM? @Y30LB02
         MVC  6(2,1),&FLAGS        PUT FLAGS IN REQ BLK        @Y30LB02
         AGO  .TIMDAT             BRANCH TO CK TIME/DATE       @Y30LB02
.*                                                             @Y30LB02
.FLREG   ANOP                                                  @Y30LB02
         MVC  6(2,1),0(&FLAGS(1))  REG-FORM FLAGS PARM         @Y30LB02
.*                                                             @Y30LB02
.TIMDAT  AIF  ('&TIMDAT' EQ '').INVOKE    TIMDAT SPECIFIED?    @Y30LB02
         AIF  ('&TIMDAT'(1,1) EQ '(').TREG  REGISTER FORM?     @Y30LB02
         MVC  8(8,1),&TIMDAT       ADDRFORM-PUT TIMDAT PARM    @Y30LB02
         AGO  .INVOKE                                          @Y30LB02
.*                                                             @Y30LB02
.TREG    ANOP                                                  @Y30LB02
         MVC  8(8,1),0(&TIMDAT(1)) REGFORM-PUT TIMDAT PARM     @Y30LB02
.INVOKE  ANOP                                                  @Y30LB02
         SVC  126                  INVOKE THE SVC              @Y30LB02
.FINISH  MEND                                                  @Y30LB02
**/
*/*                                                          @Y30LB02*/
*   ICBTRACE: MACRO KEYS(MF,FLAGS,TIMDAT);                 /*@Y30LB02*/
*/*                                                          @Y30LB02*/
*/*                     EXTERNAL DECLARES                    @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      TRACTEST IS USED TO DETERMINE WHETHER THE STANDARD  @Y30LB02*/
*/*      FORM MACRO HAS BEEN INVOKED MORE THAN ONCE BY THE   @Y30LB02*/
*/*      SAME CALLER.                                        @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      TRTESTR1 WILL BE USED TO DETERMINE IF IT IS NECES-  @Y30LB02*/
*/*      SARY TO DECLARE R1 OR WHETHER IT IS ALREADY DCLD    @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*                                                          @Y30LB02*/
*   DCL  TRTESTR1  FIXED  EXT;    /*REG1 DECLARE COUNTER     @Y30LB02*/
*   DCL  TRACTEST  FIXED  EXT;    /*STANDARD INVOC COUNTER   @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*      INTERNAL DECLARES                                   @Y30LB02*/
*   DCL  TRACOP   CHAR;      /*DEFINE TRACE OPCODE           @Y30LB02*/
*   DCL  TRLEN  CHAR;        /*DECLARE LENGTH OF ORDER       @Y30LB02*/
*   DCL  ERSW     FIXED;     /*DECLARE ERROR COND SWITCH     @Y30LB02*/
*   DCL  RETCODE  FIXED;     /*DECLARE RETURN CODE AREA      @Y30LB02*/
*   DCL  CTR      FIXED;     /*DECLARE CTR FOR LIST FORM     @Y30LB02*/
*        ERSW=0;             /*INITIALIZE ERROR SWITCH       @Y30LB02*/
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/
*        TRLEN='10';         /*INITIALIZE LENGTH FLD         @Y30LB02*/
*        TRACOP='24';        /*TRACE OPCODE                  @Y30LB02*/
*        CTR=0;              /*INITIALIZE PARM CTR           @Y30LB02*/
*/********************************************************   @Y30LB02*/
*/*      CHECK FOR VALID MACRO FORM--E INDICATES EXECUTE     @Y30LB02*/
*/*      FORM, L INDICATES LIST FORM AND IF THE MF PARA-     @Y30LB02*/
*/*      METER IS NULL THE STANDARD FORM MACRO IS INVOKED    @Y30LB02*/
*/********************************************************   @Y30LB02*/
*        IF TRTESTR1=0 THEN /*REG 1 DECLARED?                @Y30LB02*/
*             DO;           /*NO,DECLARE IT                  @Y30LB02*/
*                  ANS('DCL TRACR1 REG(1) PTR ;/*PTR'××
*                  ' TO REQUEST BLOCK @Y30LB02*/')SKIP;
*                  TRTESTR1=TRTESTR1+1;  /*INCREM COUNTER    @Y30LB02*/
*             END;               /*                          @Y30LB02*/
*   IF MF(1) ^= 'L' THEN         /*LIST FORM REQUEST?        @Y30LB02*/
*        GO TO EFORM;            /*NO,CK FOR EXECUTE         @Y30LB02*/
*   IF MF(2) = '' THEN           /*LIST NAME SPECIFIED?      @Y30LB02*/
*        DO;                     /*NO,PRINT ERROR MSG        @Y30LB02*/
*         ERSW=1;                /*SET ERROR SWITCH          @Y30LB02*/
*         RETCODE=12;            /*SET RETURN CODE           @Y30LB02*/
*         ANS MSG('  ICB602I -  A NAME FOR THE '××
*         'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP; /*@Y30LB02*/
*         GO TO FINISH;       /*BRANCH TO END PROCESSING     @Y30LB02*/
*        END;                 /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF FLAGS ^= '' THEN      /*IS THE FLAGS AREA NULL        @Y30LB02*/
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/
*   IF TIMDAT ^= '' THEN     /*IS THE TIMDAT AREA NULL       @Y30LB02*/
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/
*   IF CTR > 0 THEN          /*INCREMENT CTR > ZERO?         @Y30LB02*/
*        DO;                 /*PRINT WARNING MESSAGE         @Y30LB02*/
*             RETCODE=4;     /*SET RETURN CODE               @Y30LB02*/
*             ANS MSG('  ICB604I - WARNING-ONLY'××
*                 ' THE MF PARAMETER IS VALID FOR'××
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/
*        END;                /*                              @Y30LB02*/
*    IF MF(3) ^= '' THEN     /*PLS ATTRIBUTE SPECIFIED?      @Y30LB02*/
*        GO TO ATTRLST;      /*BRANCH,PROCESS IT             @Y30LB02*/
*/*                                                          @Y30LB02*/
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('/*    MACMEAN  MSSC TRACE MACRO             '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*THIS IS THE INITIALIZED LIST FORM         '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('DCL 1 '××MF(2)××'  STATIC LOCAL,'××
*             ' /*TRACE REQUEST BLOCK @Y30LB02*/')SKIP;
*             ANS('    2  TRACLEN  FIXED(31)INIT('××QUOTE
*             ('10')××'X),/*LENGTH OF TRACE REQ BLK @Y30LB02*/')SKIP;
*             ANS('    2  TRACOPC  CHAR(1)INIT('××QUOTE('24')××
*             'X),/*TRACE OPCODE @Y30LB02*/')SKIP;
*             ANS('    2  *      CHAR(1)INIT('××QUOTE('00')××
*             'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*             ANS('    2  TRACFLG BIT(16)INIT('××QUOTE
*             ('0000000000000000')××'B),/*TWO BYTE ATTRI'××
*             'BUTE AREA @Y30LB02*/')SKIP;
*             ANS('       3  TRACEON BIT(1),/*TRACEON/OFF'××
*             ' ATTRIBUTE @Y30LB02*/')SKIP;
*             ANS('       3  *      BIT(15),/*RESERVED AND'××
*             ' MUST BE ZERO @Y30LB02*/')SKIP;
*             ANS('    2  TRACTIM  CHAR(8) INIT('××QUOTE
*             ('0000000000000000')××'X);/*TIME/DATE @Y30LB02*/')SKIP;
*             GO TO FINISH;    /*BRANCH TO END PROCESSING    @Y30LB02*/
*/*                                                          @Y30LB02*/
*ATTRLST:
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('/*     MACMEAN  MSSC TRACE MACRO            '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '××
*                 '               @Y30LB02*/')SKIP;
*             ANS('/*******************************************'××
*                 '************** @Y30LB02*/')SKIP;
*             ANS('DCL 1 '××MF(2)××' '××MF(3)××','××
*             ' /*TRACE REQUEST BLOCK @Y30LB02*/')SKIP;
*             ANS('    2  TRACLEN  FIXED(31),/*LENG'××
*             'TH OF TRACE REQ BLK = 10 HEX @Y30LB02*/')SKIP;
*             ANS('    2  TRACOPC  CHAR(1),'××
*             '/*TRACE OPCODE=24 HEX @Y30LB02*/')SKIP;
*             ANS('    2  * CHAR(1) ,/*RESERVED  @Y30LB02*/')SKIP;
*             ANS('    2  TRACFLG BIT(16),'××
*             '/*TWO BYTE ATTRIBUTE AREA @Y30LB02*/')SKIP;
*             ANS('       3  TRACEON BIT(1),/*TRACEON/OFF'××
*             ' ATTRIBUTE @Y30LB02*/')SKIP;
*             ANS('       3  *      BIT(15),/*RESERVED AND'××
*             ' MUST BE ZERO @Y30LB02*/')SKIP;
*             ANS('    2  TRACTIM  CHAR(8);'××
*             '/*TIME AND DATE @Y30LB02*/')SKIP;
*             GO TO FINISH;    /*BRANCH TO END               @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*      PROCESSING THE EXECUTE MACRO FORM                   @Y30LB02*/
*/*                                                          @Y30LB02*/
*EFORM:
*   IF MF(1) ^= 'E' THEN      /*EXECUTE FORM SPECIFIED?      @Y30LB02*/
*        GO TO SFORM;         /*NO,BRANCH,CK FOR STANDARD    @Y30LB02*/
*   IF MF(2) = '' THEN        /*LIST NAME SPECIFIED?         @Y30LB02*/
*        DO;                  /*NO,PRINNT ERROR MSG          @Y30LB02*/
*             ERSW=1;         /*SET ERROR SWITCH             @Y30LB02*/
*             RETCODE=12;     /*SET RETURN CODE              @Y30LB02*/
*             ANS MSG('  ICB612I - MF(2) MUST '××
*                'CONTAIN REQ BLK NAME IF '××
*                'EXEC MACRO FORM REQUESTED ')SKIP(3);     /*@Y30LB02*/
*             GO TO CKSW;     /*BRANCH TO CK SWITCH          @Y30LB02*/
*        END;                 /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ELSE                      /*                             @Y30LB02*/
*        ANS('/*******************************************'××
*            '************* @Y30LB02*/')SKIP;
*        ANS('/*     MACMEAN  MSSC TRACE MACRO            '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '××
*            '              @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************* @Y30LB02*/')SKIP;
*    IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?       @Y30LB02*/
*      DO;                       /*ZERO REQUSET BLOCK        @Y30LB02*/
*        ANS(' '××MF(2)××'='××MF(2)××'&&'××MF(2)××';'××    /*@Y30LB02*/
*        '/*ZERO OUT THE REQUEST BLOCK @Y30LB02*/')SKIP;
*      END;                      /*                          @Y30LB02*/
*/*                                                          @Y30LB02*/
*        ANS('RFY(TRACR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;
*        ANS('TRACR1=ADDR('××MF(2)××');/*R1 POINTER TO'××
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('TRACLEN= '××QUOTE(TRLEN)××'X;/*LENGTH '××
*        'OF TRACE REQUEST @Y30LB02*/')SKIP;
*        ANS('TRACOPC= '××QUOTE(TRACOP)××'X;/*TRACE'××
*        ' OPCODE @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*CKSW:
*   IF ERSW=1 THEN            /*ERROR SWITCH SET?            @Y30LB02*/
*        GO TO FINISH;        /*YES,END PROCESSING           @Y30LB02*/
*   ELSE                      /*NO,CONTINUE PROCESSING       @Y30LB02*/
*        GO TO COMPROC;       /*BRCH,CHECK PARAMETERS        @Y30LB02*/
*/*                                                          @Y30LB02*/
*SFORM:
*   IF MF(1) ^= '' THEN       /*STANDARD FORM SPECIFIED?     @Y30LB02*/
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/
*        RETCODE=12;          /*SET ERROR RETURN CODE        @Y30LB02*/
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '××
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/
*        GO TO CKSW2;         /*BRANCH TO CK SWITCH          @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF FLAGS = '' THEN        /*FLAGS PARAMETERS SPECIFIED?  @Y30LB02*/
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '××
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/
*        GO TO CKSW2;         /*BRANCH                       @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*   IF TIMDAT = '' THEN       /*TIME AND DATE SPECIFIED      @Y30LB02*/
*     DO;                     /*PRINT ERROR MESSAGE          @Y30LB02*/
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/
*        ANS MSG('  ICB614I - TIMDAT MUST BE SPECIFIED'××
*        ' FOR STANDARD FORM MACRO')SKIP;                  /*@Y30LB02*/
*     END;                   /*                              @Y30LB02*/
*/*                                                          @Y30LB02*/
*CKSW2:
*/*                                                          @Y30LB02*/
*   IF ERSW = 1 THEN          /*ERROR SWITCH SET?            @Y30LB02*/
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/
*/*                                                          @Y30LB02*/
*   IF TRACTEST = 1 THEN      /*STD FORM INVOKED BEFORE?     @Y30LB02*/
*     DO;                     /*YES,DON'T PRINT DECLARES     @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*     MACMEAN  MSSC TRACE MACRO            '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('RFY(TRACR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;
*        ANS('TRACR1=ADDR(TRACLEN);/*R1 PTR TO BLK @Y30LB02*/')SKIP;
*        ANS('TRACLEN= '××QUOTE(TRLEN)××'X;/*LENGTH '××
*        'OF TRACE REQUEST @Y30LB02*/')SKIP;
*        ANS('TRACOPC='××QUOTE(TRACOP)××'X;/*TRACE'××
*        ' OPCODE @Y30LB02*/')SKIP;
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*   ELSE                      /*1ST INVOC OF STD FORM        @Y30LB02*/
*     DO;                     /*PUT OUT THE DECLARES         @Y30LB02*/
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('/*    MACMEAN  MSSC TRACE MACRO             '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '××
*            '               @Y30LB02*/')SKIP;
*        ANS('/*******************************************'××
*            '************** @Y30LB02*/')SKIP;
*        ANS('RFY(TRACR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;
*        ANS('TRACR1=ADDR(TRACLEN);/*R1 PTR  '××
*        'TO LIST @Y30LB02*/')SKIP;
*        ANS('DCL 1 TRACLST  STATIC LOCAL,'××
*        ' /*TRACE REQUEST BLOCK @Y30LB02*/')SKIP;
*        ANS('    2  TRACLEN  FIXED(31)INIT('××QUOTE('10')××
*        'X),/*LENGTH OF TRACE REQ BLK @Y30LB02*/')SKIP;
*        ANS('    2  TRACOPC  CHAR(1)INIT('××QUOTE('24')××
*        'X),/*TRACE OPCODE @Y30LB02*/')SKIP;
*        ANS('    2  *      CHAR(1)INIT('××QUOTE('00')××
*        'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;
*        ANS('    2  TRACFLG BIT(16)INIT('××QUOTE
*        ('0000000000000000')××'B),/*TWO BYTE ATTRI'××
*        'BUTE AREA @Y30LB02*/')SKIP;
*        ANS('       3  TRACEON BIT(1),/*TRACEON/OFF'××
*        ' ATTRIBUTE @Y30LB02*/')SKIP;
*        ANS('       3  *      BIT(15),/*RESERVED AND'××
*        ' MUST BE ZERO @Y30LB02*/')SKIP;
*        ANS('    2  TRACTIM  CHAR(8) INIT('××QUOTE
*        ('0000000000000000')××'X);/*TIME/DATE @Y30LB02*/')SKIP;
*        TRACTEST=TRACTEST+1; /*INCREMENT STD FORM CTR       @Y30LB02*/
*        GO TO COMPROC;       /*BRCH TO CK PARAMETERS        @Y30LB02*/
*     END;                    /*                             @Y30LB02*/
*/*                                                          @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*/*      COMMON PROCESSING FOR EXECUTE AND STANDARD FORMS    @Y30LB02*/
*/*      THE FOLLOWING CODE WILL CHECK TO DETERMINE WHAT     @Y30LB02*/
*/*      PARAMETERS ARE SPECIFIED AND PLACE THE VALUE IN     @Y30LB02*/
*/*      THE REQUEST BLOCK                                   @Y30LB02*/
*/*********************************************************  @Y30LB02*/
*COMPROC:
*   IF FLAGS ^= '' THEN      /*FLAGS SPECIFIED?              @Y30LB02*/
*        ANS('TRACFLG= '××FLAGS××';/*VALUE OF FLAGS '××
*        'PARAMETER @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*   IF TIMDAT ^= '' THEN     /*TIME AND DATE SPECIFIED?      @Y30LB02*/
*        ANS('TRACTIM= '××TIMDAT××';/*TIME/DATE PARM @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*/********************************************************   @Y30LB02*/
*/*      THE FOLLOWING CODE WILL INVOKE SVC 126.             @Y30LB02*/
*/*      THE RETURN CODE IS SET AND PROCESSING IS ENDED      @Y30LB02*/
*/********************************************************   @Y30LB02*/
*/********************************************************   @Y30LB02*/
*        ANS('SVC  (126);/*INVOKE SVC 126 @Y30LB02*/')SKIP;
*        ANS('RFY  TRACR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;
*/*                                                          @Y30LB02*/
*FINISH:
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/
*        %END;                                             /*@Y30LB02*/
