 /********************************************************** @Y30LB12*/
 /* THE FOLLOWING STRUCTURES, COMTAB AND COMTAB2, ARE THE    @Y30LB12*/
 /* MAPPING OF THE GETMAIN AREA OBTAINED BY ICGDSINT.        @Y30LB12*/
 /* COMTAB IS BASED OFF REGISTER 4 (RESERVED THROUGHOUT      @Y30LB12*/
 /* TABLE CREATE) AND COMTAB2 IS BASED OFF THE POINTER       @Y30LB12*/
 /* COMPTR2 WITHIN COMTAB.                                   @Y30LB12*/
 /********************************************************** @Y30LB12*/
 DCL 1 COMTAB BOUNDARY(DWORD) BASED(R4),/*                   @Y30LB12*/
       2 PATCH CHAR(256),               /* PATCH, INIT 0     @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING AREA WILL CONTAIN THE DCB FOR SYSIN  @Y30LB12*/
       /* DURING SCAN AND THE DCB FOR SYSPUNCH DURING BUILD. @Y30LB12*/
       /* IN EACH CASE, A MODEL DCB IS COPIED INTO THIS AREA @Y30LB12*/
       /* AND THE OPEN IS PERFORMED ON THIS COPY.            @Y30LB12*/
       /* IN THIS AREA IS ALSO THE WORK AREA USED DURING     @Y30LB12*/
       /* READING FROM SYSIN                                 @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 READER BOUNDARY(DWORD),        /*                   @Y30LB12*/
         3 READDCB CHAR(96),            /* SYSIN/SYSPCH DCB  @Y30LB12*/
         3 READFLAG BIT(8),             /* SYSIN FLAG BITS   @Y30LB12*/
           4 READTERM BIT(1),           /* END OF DATA, S99  @Y30LB12*/
           4 KEYBIT BIT(1),             /* SCANNED KEYWORD   @Y30LB12*/
           4 PARMBIT BIT(1),            /* SCANNED PARAMETER @Y30LB12*/
           4 ENDSCAN BIT(1),            /* ABNORMAL END, S99 @Y30LB12*/
           4 LASTPARM BIT(1),           /* NORMAL END        @Y30LB12*/
           4 * BIT(3),                  /* UNUSED            @Y30LB12*/
         3 * CHAR(2),                   /* UNUSED            @Y30LB12*/
         3 PCHBF CHAR(1),               /* SYSPUNCH WORKAREA @Y30LB12*/
           4 SSELECT CHAR(1),           /* STACKER SELECT    @Y30LB12*/
         3 INBUF CHAR(80),              /* SYSIN WORK AREA   @Y30LB12*/
         3 STARTCOL PTR(31),            /* CURRENT START COL @Y30LB12*/
         3 NEXTCOL PTR(31),             /* START NEXT FIELD  @Y30LB12*/
         3 SAVESCOL PTR(31),            /* SAVED CURR START  @Y30LB12*/
         3 SAVENCOL PTR(31),            /* SAVED START NEXT  @Y30LB12*/
         3 SVSYNAD2 PTR(31),            /* SAVE, SYSIN SYNAD @Y30LB12*/
         3 SVEODAD PTR(31),             /* SAVE, SYSIN EODAD @Y30LB12*/
         3 SCANLEN FIXED(15),           /* LEN OF SCAN DATA  @Y30LB12*/
         3 * FIXED(15),                 /* UNUSED            @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THIS IS THE DCB FOR SYSPRINT.  IT WILL BE USED     @Y30LB12*/
       /* FOR THE ENTIRE DURATION OF THE RUN.                @Y30LB12*/
       /* INCLUDED ALSO IN THIS AREA IS THE WORK AREA        @Y30LB12*/
       /* USED FOR COMMUNICATIONS WITH THE MESSAGE           @Y30LB12*/
       /* WRITER                                             @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 PRINTER BOUNDARY(DWORD),       /*                   @Y30LB12*/
         3 DCBPRINT CHAR(96),           /* SYSPRINT DCB      @Y30LB12*/
         3 PAGENO CHAR(4),              /* STARTING PAGE NO. @Y30LB12*/
         3 LINECTR FIXED(15),           /* LINES LEFT TO PRT @Y30LB12*/
         3 LINECT FIXED(15),            /* LINES PER PAGE    @Y30LB12*/
         3 OUTBUF CHAR(121),            /* 1ST PRINT BUFFER  @Y30LB12*/
         3 OUTBUF2 CHAR(121),           /* 1ST PRINT BUFFER  @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THIS AREA IS USED FOR COMMUNICATIONS WITH THE      @Y30LB12*/
       /* MESSAGE WRITER (ICGDSMSG).                         @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 MESSAGES,                      /*                   @Y30LB12*/
         3 RETCODE FIXED(15),           /* HIGHEST RETURN CD @Y30LB12*/
         3 MSGNO FIXED(15),             /* MSG PTR, ICGDSMSG @Y30LB12*/
         3 WARNING FIXED(15),           /* COUNT WARNING MSG @Y30LB12*/
         3 TERMINAT FIXED(15),          /* COUNT TERM MSGS   @Y30LB12*/
         3 WARN CHAR(4),                /* PRINTABLE WARN CT @Y30LB12*/
         3 TERM CHAR(4),                /* PRINTABLE TERM CT @Y30LB12*/
         3 PRINTRC CHAR(2),             /* PRINTABLE RET CD  @Y30LB12*/
         3 SPECLMSG BIT(8),             /* ICGDSMSG FLAGS    @Y30LB12*/
           4 NEED101 BIT(1),            /* NEED ICGDS101 MSG @Y30LB12*/
           4 NEED102 BIT(1),            /* NEED ICGDS102 MSG @Y30LB12*/
           4 * BIT(1),                  /* UNUSED            @Y30LB12*/
           4 PRNTCARD BIT(1),           /* PRINT CARD IMAGE  @Y30LB12*/
           4 * BIT(1),                  /* UNUSED            @Y30LB12*/
           4 ENDPHASE BIT(1),           /* ICGDS103,4,5,OR 6 @Y30LB12*/
           4 NEEDEOJ BIT(1),            /* NEED ICGDS107     @Y30LB12*/
           4 PRNTBUF2 BIT(1),           /* PRINT FROM BUF2   @Y30LB12*/
         3 * CHAR(3),                   /* UNUSED            @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING AREA IS A GENERAL WORK AREA USED     @Y30LB12*/
       /* TO HANDLE I/O OPERATIONS.  IT ALSO CONTAINS THE    @Y30LB12*/
       /* POINTER TO THE COMMON WORK AREA FOR BUILD ROUTINES.@Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 GENIO,                         /*                   @Y30LB12*/
         3 OPENLIST CHAR(4) BOUNDARY(WORD),/* TO EXEC OPEN   @Y30LB12*/
         3 DCBPTR PTR(31),              /* FOR DCB OVERLAY   @Y30LB12*/
           4 DCBFLAG CHAR(1),           /* OPTIONS FLAG      @Y30LB12*/
           4 * CHAR(3),                 /*                   @Y30LB12*/
         3 EXLST CHAR(4),               /* EXIT LIST         @Y30LB12*/
         3 SAVE14 CHAR(4),              /* R14 DURING EXITS  @Y30LB12*/
         3 COMPTR2 PTR(31) BOUNDARY(WORD), /* PTR TO COMTAB2 @Y30LB12*/
         3 BUILDPTR PTR(31) BOUNDARY(WORD), /* PTR BUILDTAB  @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THIS AREA CONTAINS THE INVOKER'S REGISTER 1 AND    @Y30LB12*/
       /* THE NAMES OF USER SUPPLIED ALTERNATE DDNAMES.      @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 INVOKED,                       /*                   @Y30LB12*/
         3 PARMPTR PTR(31),             /* INVOKER'S PARM R1 @Y30LB12*/
         3 SAVEDDS,                     /* ALTERNATE DDNAMES @Y30LB12*/
           4 SVSYSIN CHAR(8),           /* ALT. SYSIN        @Y30LB12*/
           4 SVSYSPCH CHAR(8),          /* ALT. SYSPUNCH     @Y30LB12*/
           4 SVSYSUT1 CHAR(8),          /* ALT. SYSUT1       @Y30LB12*/
           4 SVSYSUT2 CHAR(8),          /* ALT. SYSUT2       @Y30LB12*/
           4 SVSYSUT3 CHAR(8),          /* ALT. SYSUT3       @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING STRUCTURE CONTAINS PART OF THE       @Y30LB12*/
       /* INFORMATION REQUIRED TO BUILD THE STAGING DRIVE    @YD00113*/
       /* GROUP TABLE AND TO VERIFY CONSISTENCY OF RSG       @Y30LB12*/
       /* ASSIGNMENT.  THE LRU THRESHOLD AND LRU TIMESTAMP   @Y30LB12*/
       /* INFORMATION IS OBTAINED FROM THE SDGXX CONTROL     @YD00113*/
       /* STATEMENT.  THE REMAINDER OF THE INFORMATION IS    @Y30LB12*/
       /* BUILT FROM INFORMATION CONTAINED IN THE DASD       @YD00113*/
       /* CONTROL STATEMENT.  THE INFORMATION IS USED TO     @Y30LB12*/
       /* COMPLETE FIELDS IN THE PAGE AVAILABILITY BLOCK     @Y30LB12*/
       /* OF THE SDG TABLE                                   @YD00113*/
       /*                                                    @Y30LB12*/
       /* TODS1 AND TODS2 ARE INITIALIZED IN ICGDSSCN TO     @Y30LB12*/
       /* 'FF'X.  ARE OTHER FIELDS ARE INITIALIZED TO BINARY @Y30LB12*/
       /* ZEROS.                                             @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 BUILDRSG,                      /*                   @Y30LB12*/
         3 RSGS (30) CHAR(9),           /* TABLE HOLDS 30    @Y30LB12*/
           4 RSG CHAR(9),               /* ONE GROUP         @Y30LB12*/
             5 RSGSPEC BIT(1),          /* GROUP SPECIFIED   @Y30LB12*/
             5 RSGABOX BIT(2),          /* A-BOX ATTACHMENT  @Y30LB12*/
               6 RSGABOX0 BIT(1),       /* ON LOGICAL ABOX 0 @Y30LB12*/
               6 RSGABOX1 BIT(1),       /* ON LOGICAL ABOX 1 @Y30LB12*/
             5 * BIT(5),                /* UNUSED            @Y30LB12*/
             5 RSGLDEL FIXED(8),        /* LOWER LRU DELTA   @Y30LB12*/
             5 RSGUDEL FIXED(8),        /* UPPER LRU DELTA   @Y30LB12*/
             5 RSGSLICE CHAR(4),        /* 4 TIME-STAMPS     @Y30LB12*/
             5 RSGTODS CHAR(2),         /* DS CONNECTIONS    @Y30LB12*/
               6 TODS1 CHAR(1),         /* FIRST (LOWER) DS  @Y30LB12*/
               6 TODS2 CHAR(1),         /* OPTIONAL 2ND DS   @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING AREA IS USED TO DESCRIBE THE         @Y30LB12*/
       /* MASS STORAGE FACILITIES ATTACHED TO THE SUBSYSTEM. @YD00113*/
       /* ONLY TWO MSFS ARE SUPPORTED, AND THE FIRST LOGICAL @YD00113*/
       /* MSF IDENTIFICATION MUST BE 0.  IF A SECOND MSF IS  @YD00113*/
       /* PRESENT, IT MUST BE MSF 1.                         @YD00113*/
       /**************************************************** @Y30LB12*/
       2 LIBRARY,                       /*                   @Y30LB12*/
         3 LIBS (4) CHAR(12),           /* POSITIONAL, LIBID @Y30LB12*/
           4 LIB CHAR(12),              /*                   @Y30LB12*/
             5 LIBBITS,                 /*                   @Y30LB12*/
               6 LIBSPEC BIT(1),        /* LIBRARY PRESENT   @Y30LB12*/
               6 * BIT(7),              /* UNUSED            @Y30LB12*/
             5 LIBSIZE CHAR(1),         /* NUMBER OF FRAMES  @Y30LB12*/
             5 LIBDSMID CHAR(1),        /* ADDRESS FROM DSM  @Y30LB12*/
             5 LIBMAP CHAR(1),          /* LOADMAP CHOSEN    @Y30LB12*/
             5 MAPEXIT CHAR(8),         /* USER EXIT NAME    @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THIS STRUCTURE CONTAINS THE INFORMATION NEEDED TO  @Y30LB12*/
       /* COMPLETE THE DEVICE PORTION OF THE PAB (PAGE       @Y30LB12*/
       /* AVAILABILITY BLOCK) OF THE RSG TABLE.  THE         @Y30LB12*/
       /* STRUCTURE IS ORGANIZED BY LOGICAL DEVICE WITHIN    @Y30LB12*/
       /* REAL SPINDLE GROUP.  THE FLAGS PABEXIST, PABIBERG, @Y30LB12*/
       /* AND PABBERG2, AND THE BYTE PABAADDD ARE COMPLETED  @Y30LB12*/
       /* FROM INFORMATION SCANNED FROM THE SPINDLES         @Y30LB12*/
       /* STATEMENT.  THE BYTE PABREAL IS COMPLETED FROM     @Y30LB12*/
       /* MOVING THE REAL INTERFACE INFORMATION SCANNED      @Y30LB12*/
       /* FROM THE UPPERCON STATEMENT INTO THIS TABLE        @Y30LB12*/
       /* DURING ANALYZE.  THE FLAG PABDSMTL (PACK CONTAINS  @Y30LB12*/
       /* DSM TABLES) IS SET DURING ANALYZE.  THE FLAG       @Y30LB12*/
       /* PABVOVIR (VOLUME AVAILABLE FOR STAGING) IS SET     @Y30LB12*/
       /* DURING ACTUAL OUTPUT OF THE DATA TO DASD.          @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 PABTABLE (30,8) CHAR(3),       /*                   @Y30LB12*/
         3 PABDEV CHAR(3),              /* EACH DEVICE       @Y30LB12*/
           4 PABFLAGS BIT(8),           /*                   @Y30LB12*/
             5 PABEXIST BIT(1),         /* LOGICAL DEVICE    @Y30LB12*/
             5 PABVOVIR BIT(1),         /* VARIED ON VIRTUAL @Y30LB12*/
             5 * BIT(1),                /* NOT INITIALIZED   @Y30LB12*/
             5 PABIBERG BIT(1),         /* PHYSICAL 3330-11  @Y30LB12*/
             5 PABDSMTL BIT(1),         /* CONTAINS TABLES   @Y30LB12*/
             5 * BIT(2),                /* NOT INITIALIZED   @Y30LB12*/
             5 PABBERG2 BIT(1),         /* 2ND HALF, 3330-11 @Y30LB12*/
           4 PABREAL BIT(8),            /* REAL INTERFACES   @Y30LB12*/
             5 PABIMPLR BIT(1),         /* REAL AT IMPL      @Y30LB12*/
             5 PAB1B BIT(1),            /* 1ST DS INT B      @Y30LB12*/
             5 PAB1C BIT(1),            /* 1ST DS INT C      @Y30LB12*/
             5 PAB1D BIT(1),            /* 1ST DS INT D      @Y30LB12*/
             5 * BIT(1),                /* NOT INITIALIZED   @Y30LB12*/
             5 PAB2B BIT(1),            /* 2ND DS INT B      @Y30LB12*/
             5 PAB2C BIT(1),            /* 2ND DS INT C      @Y30LB12*/
             5 PAB2D BIT(1),            /* 2ND DS INT D      @Y30LB12*/
           4 PABAADDD BIT(8),           /* PHYSICAL ADDRESS  @Y30LB12*/
             5 PABZEROS BIT(3),         /* ALWAYS ZEROS      @Y30LB12*/
             5 PABAA BIT(2),            /* DASD CONTROLLER   @Y30LB12*/
             5 PABDDD BIT(3),           /* PHYSICAL DEVICE   @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING TWO STRUCTURES CONTAIN THE DATA      @Y30LB12*/
       /* EXTRACTED FROM THE SPINDLES CONTROL STATEMENT.     @Y30LB12*/
       /*                                                    @Y30LB12*/
       /* THE STRUCTURE DSPAIRS IS ORGANIZED BY DASD         @Y30LB12*/
       /* CONTROLLER WITHIN DATA STAGER AND INDICATES THE    @Y30LB12*/
       /* SECOND DATA STAGER (IF ANY) TO WHICH THE DASD      @Y30LB12*/
       /* CONTROLLER ATTACHES.   IF 'A' POINTS TO 'B'        @Y30LB12*/
       /* 'B' ALSO POINTS AT 'A'. THIS STRUCTURE IS          @Y30LB12*/
       /* INITIALIZED TO 'FF'X IN ICGDSSCN.                  @Y30LB12*/
       /*                                                    @Y30LB12*/
       /* THE STRUCTURE PHYSTYPE IS ORGANIZED BY PHYSICAL    @Y30LB12*/
       /* DEVICE ADDRESS WITHIN DASD CONTROLLER WITHIN DATA  @Y30LB12*/
       /* DATA STAGER. THIS STRUCTURE IS USED TO INDICATE    @Y30LB12*/
       /* THETHER THE SPECIFIC PHYSICAL SPINDLE EXISTS       @Y30LB12*/
       /* WITHIN THE CONFIGURATION (NON-EXISTENT IS '00'B    @Y30LB12*/
       /* IN THE BITS 'MERLICEB'), WHERTHER THE SPINDLE IS   @Y30LB12*/
       /* A 3330 MODEL 1 ('01' IN 'MERLICEB) OR A 3330       @Y30LB12*/
       /* MODEL 11 ('10' IN 'MERLICEB), WHETHER THE SPINDLE  @Y30LB12*/
       /* HAS AN SSID OR WHETHER IT IS REAL, AND, FOR        @Y30LB12*/
       /* SPINDLES WITH SSID, THE REAL SPINDLE GROUP, THE    @Y30LB12*/
       /* LOGICAL A-BOX, AND THE LOGICAL DEVICE.             @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 DSPAIRS (16,4) CHAR(1),        /*                   @Y30LB12*/
         3 PHYSDS2 CHAR(1),             /* SECOND DS (OPT)   @Y30LB12*/
       2 PHYSTYPE (16,4,8) CHAR(2),     /* 16 DS 4 ABOX 8 DV @Y30LB12*/
         3 PHYSFLGS BIT(8),             /*                   @Y30LB12*/
           4 MERLICEB BIT(2),           /* IF 00, NO DEVICE  @Y30LB12*/
           4 PHYSREAL BIT(1),           /* NON-SUBSYSTEM     @Y30LB12*/
           4 PHYSSSID BIT(1),           /* SUBSYSTEM DASD    @Y30LB12*/
           4 LOGABOX1 BIT(1),           /* LOGICAL A-BOX 1   @Y30LB12*/
           4 LGDEVICE BIT(3),           /* LOGICAL DEVICE    @Y30LB12*/
         3 SPNRSGNO BIT(8),             /* RSG NUMBER        @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING STRUCTURE DESCRIBES THE CPU          @Y30LB12*/
       /* STRUCTURE OF THE CONFIGURATION TABLE (BYTES        @Y30LB12*/
       /* 128-255 OF THE FIRST BLOCK).  THIS PORTION OF THE  @Y30LB12*/
       /* CONFIGURATION TABLES DESCRIBES THE MANUFACTURER'S  @Y30LB12*/
       /* IDENTIFICATION OF THE CPUS THAT INTERFACE WITH THE @Y30LB12*/
       /* SUBSYSTEM, AND THOSE CPUS' CONNECTIONS WITH ONE    @Y30LB12*/
       /* ANOTHER.                                           @Y30LB12*/
       /* THE COUNTER 'CPUNUM' IS NOT PART OF THE OUTPUT IT  @Y30LB12*/
       /* TABLE.  IT IS USED INTERNALLY IN ICGDSS02 TO       @Y30LB12*/
       /* DEVELOP THE LOGICAL CPUID (0-F) TO BE USED TO      @Y30LB12*/
       /* PLACE ENTRIES IN THE TABLE.  IT IS ALSO THE        @Y30LB12*/
       /* NUMBER OF ENTRIES CURRENTLY IN THE TABLE.          @Y30LB12*/
       /* ALL OTHER FIELDS IN THE STRUCTURE ARE BUILT IN     @Y30LB12*/
       /* THE SAME FORMAT THAT THEY WILL HAVE IN THE         @Y30LB12*/
       /* OUTPUT TABLE.                                      @Y30LB12*/
       /* THE THREE BITS IN THIS STRUCTURE CALLED 'OPSYSTYP' @ZD02028*/
       /* ARE NOT PART OF THE CPU ASSOCIATION TABLE AND ARE  @ZD02028*/
       /* RESET IN THE STRUCTURE PRODUCED BY ICGDSB08.       @ZD02028*/
       /**************************************************** @Y30LB12*/
       2 CPUASSOC,                      /*                   @Y30LB12*/
         3 CPUNUM FIXED(15),            /* CURRENT ENTRIES   @Y30LB12*/
         3 CPUS (16) CHAR(8),           /* ENTIRE, 128 BYTES @Y30LB12*/
           4 CPU CHAR(8),               /* ONE OF 16 ENTRIES @Y30LB12*/
             5 CPUID CHAR(5),           /* MANUFACTURER'S ID @Y30LB12*/
             5 TOMPCPU BIT(8),          /* MPCPU, AS BIT SW  @Y30LB12*/
             5 CPUFLAG1 BIT(8),         /* FLAG BYTE         @Y30LB12*/
               6 * BIT(1),              /* NOT INITIALIZED   @Y30LB12*/
               6 CPUTIGHT BIT(1),       /* TIGHTLY-COUPLED   @Y30LB12*/
               6 CPUALTFL BIT(1),       /* CPU HAS ALT. INT. @YD00142*/
               6 OPSYSTYP BIT(3),       /* PRIMARY OP SYSTEM @ZD02028*/
                 7 OPVS1 BIT(1),        /* USE OS/VS1        @ZD02028*/
                 7 OPVS2 BIT(1),        /* USE OS/VS2        @ZD02028*/
                 7 OPJES3 BIT(1),       /* IN JES3 NETWORK   @Z40LB73*/
               6 CPUMSCIN BIT(2),       /* MSC INTERFACE     @Y30LB12*/
             5 CPUFLAG2 BIT(8),         /* FLAG BYTE         @Y30LB12*/
               6 CPUSPEC BIT(1),        /* SPEC. AS CPUID    @Y30LB12*/
               6 * BIT(1),              /* NOT INITIALIZED   @YD00142*/
               6 ALTMSGBF BIT(1),       /* MSG BUFFER FLAG   @YD00142*/
               6 * BIT(3),              /* NOT INITIALIZED   @YD00142*/
               6 ALTMSCIN BIT(2),       /* ALT MSC INTERFACE @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING TWO AREAS (LOWERCON AND LIBCTL) ARE  @Y30LB12*/
       /* USED TO HOLD THE VALUES SCANNED FROM THE           @Y30LB12*/
       /* 'LOWERCON' CONTROL STATEMENT                       @Y30LB12*/
       /* LOWERCON IS ORGANIZED BY DATA STAGER BY LIBRARY    @Y30LB12*/
       /* READ/WRITE CONTROL UNIT IDENTIFICATION.            @Y30LB12*/
       /* LIBCTL IS ORGANIZED BY LIBRARY BY LIBRARY          @Y30LB12*/
       /* READ/WRITE CONTROL UNIT POSITION AND IS USED TO    @Y30LB12*/
       /* INDICATE WHETHER THE POSITION IS AVAILABLE OR      @Y30LB12*/
       /* ALREADY IN USE.                                    @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 LOWERCON,                      /*                   @Y30LB12*/
         3 LOWDSS (16,4) CHAR(2),       /* CU WITHIN DS      @Y30LB12*/
           4 LOWFLGS BIT(8),            /* EACH CTL. UNIT    @Y30LB12*/
             5 LOWSPEC BIT(1),          /* CU ADDR SPECIFIED @Y30LB12*/
             5 LOWRW01 BIT(1),          /* TO READ/WRITES 01 @Y30LB12*/
             5 LOWRW23 BIT(1),          /* TO READ/WRITES 23 @Y30LB12*/
             5 LOWRW45 BIT(1),          /* TO READ/WRITES 45 @Y30LB12*/
             5 LOWRW67 BIT(1),          /* TO READ/WRITES 67 @Y30LB12*/
             5 LOWLEFT BIT(1),          /* TO LEFT INTERFACE @Y30LB12*/
             5 LOWRGHT BIT(1),          /* RIGHT INTERFACE   @Y30LB12*/
             5 * BIT(1),                /* UNUSED            @Y30LB12*/
           4 LOWLIB CHAR(1),            /* IN LIBRARY        @Y30LB12*/
       2 LIBCTL,                        /*                   @Y30LB12*/
         3 LIBCTLS (4) CHAR(1),         /* FOR LOGICAL LIB   @Y30LB12*/
           4 RW01LEFT BIT(1),           /* LEFT RW01 USED    @Y30LB12*/
           4 RW01RGHT BIT(1),           /* RIGHT RW01 USED   @Y30LB12*/
           4 RW23LEFT BIT(1),           /* LEFT RW23 USED    @Y30LB12*/
           4 RW23RGHT BIT(1),           /* RIGHT RW23 USED   @Y30LB12*/
           4 RW45LEFT BIT(1),           /* LEFT RW45 USED    @Y30LB12*/
           4 RW45RGHT BIT(1),           /* RIGHT RW45 USED   @Y30LB12*/
           4 RW67LEFT BIT(1),           /* LEFT RW67 USED    @Y30LB12*/
           4 RW67RGHT BIT(1),           /* RIGHT RW67 USED   @Y30LB12*/
 @ EJECT;
       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING AREA IS USED TO HOLD THE VALUES      @Y30LB12*/
       /* SCANNED FROM THE 'CREATE' CONTROL STATEMENT.       @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 CREATE,                        /*                   @Y30LB12*/
         3 * BIT(8),                    /*                   @Y30LB12*/
           4 CMDCREAT BIT(1),           /* STATEMENT PRESENT @Y30LB12*/
           4 NEWCREAT BIT(1),           /* NEW SPECIFIED     @Y30LB12*/
           4 UPDCREAT BIT(1),           /* UPDATE SPECIFIED  @Y30LB12*/
           4 PRNTONLY BIT(1),           /* ONLY PRINTED DATA @Y30LB12*/
           4 CYLFAULT BIT(1),           /* CYL FAULT OPTED   @G24LB42*/
           4 BINTIND BIT(1),            /* CI 'B' INDICATOR. @ZA20268*/
           4 CINTIND BIT(1),            /* CI 'C' INDICATOR  @ZA20268*/
           4 DINTIND BIT(1),            /* CI 'D' INDICATOR  @ZA20268*/
         3 VPAGES(4) FIXED(8),          /* LOG TO REAL MAP   @Y30LB12*/
         3 VOLSER CHAR(6),              /* VOLUME SERIAL NO. @Y30LB12*/
         3 LRUCLOCK CHAR(1),            /* MASTER LRU CLOCK  @Y30LB12*/
       2 COM2BASE CHAR(8) BOUNDARY(DWORD); /* START COMTAB2  @Y30LB12*/
  DCL  PHYSFNUL  BIT(2)  CONSTANT('00'B);  /* NO DEVICE      @X50RSPC*/
  DCL  PHYSFICE  BIT(2)  CONSTANT('01'B);  /* 3330 MODEL 11  @X50RSPC*/
  DCL  PHYSFMER  BIT(2)  CONSTANT('10'B);  /* 3330 MODEL 1   @X50RSPC*/
  DCL  PHYSFMAD  BIT(2)  CONSTANT('11'B);  /* 3350           @X50RSPC*/
 @ EJECT;
 /********************************************************** @Y30LB12*/
 /* THE FOLLOWING STRUCTURE (COMTAB2) IS A PHYSICAL AND      @Y30LB12*/
 /* LOGICAL CONTINUATION OF THE STRUCTURE COMTAB.            @Y30LB12*/
 /* PHYSICALLY THE STRUCTURE IS BASED ON THE POINTER COMPTR2 @Y30LB12*/
 /* WHICH CONTAINS THE ADDRESS OF COM2BASE.   THIS           @Y30LB12*/
 /* STURCTURE IS USED TO CONTAIN THE DATA SCANNED FROM THE   @Y30LB12*/
 /* UPPERCON CONTROL STATEMENT.                              @Y30LB12*/
 /********************************************************** @Y30LB12*/
 DCL 1 COMTAB2 BASED(COMPTR2),          /*                   @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING STRUCTURE IS BUILT DURING THE SCAN   @Y30LB12*/
       /* OF THE UPPERCON STATEMENT AND IS USED TO VERIFY    @Y30LB12*/
       /* THAT ALL THREE INTERFACES INTO A DATA STAGER       @Y30LB12*/
       /* INTERFACE TO NO MORE THAN TWO RSGS IN TOTAL        @Y30LB12*/
       /* THE STRUCTURE IS ORGANIZED BY DATA STAGER.         @Y30LB12*/
       /* THE STRUCTURE IS INITIALIZED TO 'FF'X IN ICGDSSCN  @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 DSTORSG (16) CHAR(2),          /*                   @Y30LB12*/
         3 DSENTRY CHAR(2),             /*                   @Y30LB12*/
           4 TORSG1 CHAR(1),            /*                   @Y30LB12*/
           4 TORSG2 CHAR(1),            /*                   @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING STRUCTURE IS ORGANIZED BY DATA       @Y30LB12*/
       /* STAGER/CHANNEL INTERFACE AND CONTAINS THE DATA     @Y30LB12*/
       /* THAT IS COMMON TO ALL DEVICE ADDRESSES THROUGH     @Y30LB12*/
       /* THAT INTERFACE (CPU/CHANNEL/CONTROL UNIT).  THE    @Y30LB12*/
       /* FIELD CPUREFNO IS DEVELOPED IN THE ANALYSIS        @Y30LB12*/
       /* ROUTINES BY FINDING THE LOGICAL (POSITIONAL)       @Y30LB12*/
       /* IDENTIFICATION OF THE CPU FROM CPUASSOC.  THE      @Y30LB12*/
       /* INFORMATION IN THIS STRUCTURE IS USED TO BUILD     @Y30LB12*/
       /* THE CONFIGURATION INDEX PORTION OF THE             @Y30LB12*/
       /* CONFIGURATION TABLE.                               @Y30LB12*/
       /**************************************************** @Y30LB12*/
       2 CONFGCON (48) CHAR(9),       /* COMMON ON INTERFACE @Y30LB12*/
         3 RSGUCB CHAR(9),            /*                     @Y30LB12*/
           4 RSGFLAGS,                /*                     @Y30LB12*/
             5 CISPEC BIT(1),         /* UPPERCON STATEMENT  @Y30LB12*/
             5 * BIT(7),              /*                     @Y30LB12*/
           4 RSGCPUID CHAR(5),        /* UPPERCON CPUID      @Y30LB12*/
           4 CPUREFNO CHAR(1),        /* LOGICAL CPUID       @Y30LB12*/
           4 RSGCHAN CHAR(1),         /* HOST CHANNEL        @Y30LB12*/
           4 RSGCUA CHAR(1),          /* DS CONTROL UNIT ADR @Y30LB12*/

       /**************************************************** @Y30LB12*/
       /* THE FOLLOWING STRUCTURE DESCRIBES EACH POSSIBLE    @Y30LB12*/
       /* DEVICE ADDRESS (64) THAT CAN BE GENERATED FOR A    @Y30LB12*/
       /* DATA STAGER/CHANNEL INTERFACE.  THIS STRUCTURE IS  @Y30LB12*/
       /* USED TO BUILD THE DEVICE DATA PORTION OF THE       @Y30LB12*/
       /* CONFIGURATION MAP AND ALSO TO HOLD THE DATA NEEDED @Y30LB12*/
       /* TO PRODUCE THE IODEVICE AND UNITNAME SYSGEN        @YD00113*/
       /* STATEMENTS.  THE STRUCTURE IS ORGANIZED BY DEVICE  @Y30LB12*/
       /* WITHIN STAGING ADAPTER/CHANNEL INTERFACE.          @YD00113*/
       /**************************************************** @Y30LB12*/
       2 CONFGUCB (48,64) CHAR(11),     /*                   @Y30LB12*/
         3 CONFGDEV CHAR(11),           /*                   @Y30LB12*/
           4 USEFLAGS BIT(8),           /* DEVICE USE FLAGS  @Y30LB12*/
             5 USESPEC BIT(1),          /* DEVICE IS USED    @Y30LB12*/
             5 USEV BIT(1),             /* USED VIRTUAL      @Y30LB12*/
             5 USEVS BIT(1),            /* USED SHARED VIRT  @Y30LB12*/
             5 USEREAL BIT(1),          /* USED REAL         @Y30LB12*/
             5 SUPPUNCH BIT(1),         /* NO SYSGEN CARD    @Y30LB12*/
             5 USECONVR BIT(1),         /* USE CONVERTIBLE   @Y30LB12*/
             5 ITISALTP BIT(1),         /* IS ALTERNATE PATH @Y30LB12*/
             5 ICEBERG BIT(1),          /* DEVICE IS 3330-11 @Y30LB12*/
           4 INDEXRSG BIT(8),           /* RSG NUMBER        @Y30LB12*/
           4 ALTPATH1 BIT(24),          /* 1ST ALT PATH      @Y30LB12*/
             5 ALTDS1 BIT(8),           /* 1ST ALT PATH DS   @Y30LB12*/
             5 ALTCI1 BIT(8),           /* 1ST ALT PATH CI   @Y30LB12*/
             5 ALTCH1 BIT(8),           /* 1ST ALT PATH CHAN @Y30LB12*/
           4 ALTPATH2 BIT(24),          /* 2ND ALT PATH      @Y30LB12*/
             5 ALTDS2 BIT(8),           /* 2ND ALT PATH DS   @Y30LB12*/
             5 ALTCI2 BIT(8),           /* 2ND ALT PATH CI   @Y30LB12*/
             5 ALTCH2 BIT(8),           /* 2ND ALT PATH CHAN @Y30LB12*/
           4 ALTPATH3 BIT(24),          /* 3RD ALT PATH      @Y30LB12*/
             5 ALTDS3 BIT(8),           /* 3RD ALT PATH DS   @Y30LB12*/
             5 ALTCI3 BIT(8),           /* 3RD ALT PATH CI   @Y30LB12*/
             5 ALTCH3 BIT(8);           /* 3RD ALT PATH CHAN @Y30LB12*/

 DCL SCANDATA CHAR(72) BASED(STARTCOL); /* OVERLAY OF INBUF  @Y30LB12*/
 DCL SCANBUF CHAR(72) BASED(NEXTCOL);   /* OVERLAY OF INBUF  @Y30LB12*/
