MVSMON   TITLE 'GU955000 MVSMON - MVS DISPLAY MONITOR'
NOP      OPSYN PRINT         **********DEBUG*************
*          DATA SET MVSMON     AT LEVEL 003 AS OF 03/16/81 - CBT F352
*          DATA SET GU955000   AT LEVEL 064 AS OF 02/14/80
*              DATE.     11/14/77.  REVISED 12/01/79 FROM TP421000.
*              AUTHOR.   DON HIGGINS
*              REMARKS.  MVSMON IS A COMMAND DRIVEN MVS DISPLAY MONITOR
*                        WHICH HAS THE FOLLOWING CHARACTERISTICS.
*
*                          1.  IT IS REENTRANT AND CAN BE PLACED IN
*                              PLPA FOR COMMON USE.
*                          2.  WHEN EXECUTED AS A SYSTEM TASK IT
*                              USES A WTOR/WTO INTERFACE TO THE
*                              MCS MASTER CONSOLE.
*                          3.  WHEN EXECUTED AS A TSO PROGRAM IT
*                              USES A TGET/TPUT INTERFACE TO TERMINAL.
*                          4.  WHEN EXECUTED AS A BATCH PROGRAM IT
*                              USES A GET/PUT INTERFACE TO SYSIN
*                              AND SYSPRINT QSAM FILES.
*                          5.  THE PROGRAM DOES NOT REQUIRE ANY
*                              AUTHORIZATION OR HOOKS.
*                          6.  IF A PARM IS PRESENT, IT IS EXECUTED
*                              AS A SINGLE INPUT COMMAND AND THEN THE
*                              PGM TERMINATES NORMALLY.  THIS IS FOR
*                              USE AS A STARTED TASK TO JUST GET A
*                              SINGLE RESPONSE WITHOUT USING WTOR.
*                              FOR EXAMPLE,  S MVSMON,,,PARM=DE
*                          7.  NOTE PROGRAM CONTAINS NO RLDS TO
*                              REDUCE I/O AND PROCESSING TIME FOR
*                              FETCH WHEN EXECUTING OUT OF PDS
*                              RATHER THAN PLPA.
*                          8.  WHEN EXECUTED AS A CALLED PROGRAM BY
*                              THE MESSAGE PROCESSING SUPERVISOR
*                              (MPS) GU640001 FOR ONLINE SYSTEMS, IT
*                              USES THE FOLLOWING INTERFACES
*
*                              INPUT/OUTPUT CALL ARGUMENTS
*                                1.  TCAM TERMINAL NAME (8 BYTES)
*                                2.  MESSAGE ADDRESS
*                                3.  MESSAGE LENGTH (4 BYTE BINARY)
*
*                              MVSMON IDENTIFIES THIS MODE BY
*                              LOCATING CDE ENTRY POINT NAMED MVSMONVT
*                              WHICH POINTS TO VECTOR TABLE WITH THE
*                              FOLLOWING ENTRIES.
*                                1.  ADDRESS OF MVSMON WORK AREA
*                                    CREATED ON FIRST CALL AND USED
*                                    FOR ALL SUCCEEDING CALLS.
*                                2.  ADDRESS OF OUTPUT MESSAGE
*                                    PROCESSOR CALLED BY MVSMON TO
*                                    OUTPUT MESSAGES.
*
*                          9.  SPIE PROGRAM INTERRUPTION HANDLER
*                              ATTEMPTS TO RECOVER FROM TEMPORARY
*                              INTERRUPTIONS CAUSED BY CONTROL
*                              BLOCK CHANGES DURING ACCESS.
*
*                         10.  STAX INTERRUPTION HANDLER ABORTS
*                              AND/OR SURPRESSES THE REMAINING
*                              OUTPUT FROM THE CURRENT COMMAND
*                              WHEN RUNNING IN TSO MODE.
*
*        MACRO DO RENAMED TO DODO TO AVOID MACLIB NAME COLLISION.
*        MACRO WRITE RENAMED TO OUTPT TO AVOID NAME COLLISION   \
*        FIXED A NUMBER OF ERRORS (UCB ADDRESS; CKUNIQUE)       \
*        CHANGED DEVICE COUNTS TO ALL ONLINE UCBS.              \
*
*
*              REGISTERS.
*                  R0-R7 WORK REGISTERS
*                  R8-R9 EXTENDED BASES
*                  R10   POINTER TO READ/WRITE WORK AREA
*                  R11   POINTER TO STACK FOR PERFORMS
*                  R12   BASE
*                  R13   SAVE AREA
*                  R14-R15 LINKAGE AND WORK
*              REFERENCES.
*                  GC28-0751-0 OS/VS2 BEBUGGING HANDBOOK VOL. 1
*                  GC28-0709-0 OS/VS2 DEBUGGING HANDBOOK VOL. 2
*                  GC28-0886-0 OS/VS2 MVS PERFORMANCE NOTEBOOK
*                  GC28-0648-2 OS/VS2 TSO GUIDE TO COMMAND PROCESSORS
*                  GC28-0683-1 OS/VS2 SUPR. SERVICES MACRO INSTR.
*                  SY28-0715-1 OS/VS2 SYSTEM LOGIC LIBRARY
*              FILES.
*                  SYSIN - INPUT COMANDS FOR BATCH MODE ONLY
*                  SYSPRINT - OUTPUT FOR BATCH MODE ONLY
*              MAINTENANCE.
* V1.1  K TRUE  FAIRCHILD CAMERA AND INSTRUMENT      11 MAR 81     FCI*
*               DOMAIN NAME MODS, FSEND CALL FOR CLEAN SCREEN      FCI*
*               FIX DJ,DS,DU FOR PROPER STEP NAME                  FCI*
*               ADD DIDOCS INVOKE VIA LINK - CMD=CO(NSOLE)         FCI*
*               ALTERED\PFK DEFINITIONS, ADDED PFK DISPLAY TO 'HS' FCI*
*               ADDED 'CKUNIQUE' ROUTINE FOR UCB ALT/PATH ELIMIN.  FCI*
*               FIXED BACKWARD TEST TO MAKE IT WORK             \
********************************************************************
*  STEPS TO FOLLOW DURING MAINTENANCE
*    1.  ENTER COMMENTS ABOVE DESCRIBING CHANGE
*    2.  ADD HELP DOCUMENTATION INCLUDING NEWS COMMAND
*    3.  ADD BATCH TEST TO J.CNTL(GU955TST) FOR ANY COMMANDS
*    4.  COPY MVSMON FROM FPC.TESTLIB TO FPC.CMDLIB AFTER TEST
*    5.  SUBMIT REQUEST TO MOVE GU955000 FROM WORK TO SOURCE
********************************************************************
         TITLE 'LOCAL MACROS'
         MACRO
         OUTPT &MSG
.*       WRITE LITERAL MESSAGE
         LA    R0,=CL80&MSG
         PM    PUT
         MEND
         MACRO
         EM    &FIELD
.*       EDIT MEMORY IN BYTES IN R0 TO 5 DIGIT MEMORY IN K
         SRL   R0,10
         CVD   R0,PWORK
         EDIT  TO=&FIELD,FROM=PWORK+5,MASK=' ZZZ99'
         MEND
         MACRO
         EMK   &FIELD
.*       EDIT MEMORY IN K IN R0 TO 5 DIGIT MEMORY IN K
         CVD   R0,PWORK
         EDIT  TO=&FIELD,FROM=PWORK+5,MASK=' ZZZ99'
         MEND
         MACRO
         EMF   &FIELD
.*       EDIT MEMORY IN FRAMES IN R0 TO 5 DIGIT MEMORY IN K
         SLL   R0,2
         CVD   R0,PWORK
         EDIT  TO=&FIELD,FROM=PWORK+5,MASK=' ZZZ99'
         MEND
         MACRO
         IHW   &HW
.*       INCREMENT HALF WORD BINARY COUNTER BY ONE
         LA    R0,1
         AH    R0,&HW
         STH   R0,&HW
         MEND
         MACRO ,                                                   FCI*
         $DOMAINS   ,                                              FCI*
*                                                                  FCI*
* DOMAIN TABLE AND NAMES AT FAIRCHILD CAMERA                       FCI*
*                                                                  FCI*
$DOMST$  EQU   *                                                   FCI*
         $DOMGEN  0,'MVS SYSTEM'                                   FCI*
$DOMNLEN EQU   *-$DOMST$                                           FCI*
         $DOMGEN  1,'BATCH'                                        FCI*
         $DOMGEN  2,'TSO-SHORT'                                    FCI*
         $DOMGEN  3,'TSO-LONG'                                     FCI*
         $DOMGEN  5,'LOW PRIO'                                     FCI*
         $DOMGEN  7,'IMS MSGRGN'                                   FCI*
         $DOMGEN  8,'SYS TASKS'                                    FCI*
         $DOMGEN  9,'MONITORS'                                     FCI*
         $DOMGEN 10,'SWAP-OUT'                                     FCI*
         MEND                                                      FCI*
         MACRO                                                     FCI*
         $DOMGEN  &NUMB,&TEXT                                      FCI*
         DC    AL2(&NUMB),CL12&TEXT                                FCI*
         MEND                                                      FCI*
         MACRO
&LABEL   APPEND &LIT,&PTR=R15
         LCLA  &LEN
&LEN     SETA  K'&LIT-2
         SPACE
         AIF   (&LEN EQ 1).SHORT                                   FCI*
&LABEL   MVC   0(&LEN,&PTR),=C&LIT     MOVE TEXT INTO STRING
         LA    &PTR,&LEN.(&PTR)    BUMP LENGTH TO AFTER STRING
         AGO   .MACFIN
.SHORT   ANOP
         MVI   0(&PTR),C&LIT    MOVE IN THE CHARACTER
         LA    &PTR,1(&PTR)     BUMP COUNT
.MACFIN  ANOP
         MEND
*DEBUG*  PRINT NOGEN
         TITLE 'MAINLINE'
MVSMON   SUBENTRY BASES=(R12),RENT=YES,STACK=10,                       X
               PSTACK=R11,PSAVE=NO,PCHECK=NO,PBASE=YES
         LR    R4,R1             SAVE PARM FOR GET
         PM    INIT              INITIALIZE WORK AREA
         USING WORK,R10
         USING WORK+4095,R9
         LA    R15,PGMCHK3
         STM   R0,R15,PGMCHKSA   SAVE MAINLINE REGS FOR RESTART
         SPIE  PGMCHK1,MF=(E,SPIELIST)
         ST    R1,SAVEPICA
PGMCHK4  TAG                 RESTART POINT FOLLOWING PGM CHECK
         PM    GET
         DODO  WHILE,(CLI,EOF,TRUE,NE)
               PM   PROCESS
               IF   (CLI,EOF,TRUE,NE)
                    PM   GET
               FI
         OD
         L     R1,SAVEPICA
         SPIE  MF=(E,(1))
         IF    (CLI,MODE,MPSMODE,NE)
               OUTPT 'MVSMON ENDED'
         FI
         IF    (CLI,MODE,TSOMODE,EQ)
               STAX
         FI
         IF    (CLI,MODE,IOMODE,EQ)
               CLOSE (SYSIN,,SYSPRINT),MF=(E,DCBLIST)
         FI
         IF    (CLI,MODE,TSOMODE,EQ)                               FCI*
               L    R15,AFSF        INVOKE                         FCI*
               LA   R1,FSWLPARM        FSEND                       FCI*
               LA   R0,FSCLCODE           TO END SPF FULLSCRN      FCI*
               BALR R14,R15                  MODE AND CLEAR SCREEN FCI*
         FI                                                        FCI*
         IF    (CLI,MODE,MPSMODE,NE)
               L     R0,=A(LWORK)
               LR    R1,R10
               FREEMAIN R,LV=(0),A=(1)
         FI
         SUBEXIT
PGMCHK3  TAG             THIRD STAGE OF PGMCHK PROCESSING
*
*        NOTE LM IN PGMCHK2 RESETS PSTACK R11 TO MAINLINE LEVEL
*
         ZR    R1
         ICM   R1,7,PGMPSW+5
         LA    R0,0(R12)
         SR    R1,R0
         AAI   R1,8
         ST    R1,PWORK
         UNPK  DWORK,PWORK+1(4)
         TR    DWORK(6),HEX-240
         MVC   DPGMCHK,DWORK
         LA    R0,PGMMSG
         PM    PUT        DISPLAY PGMCHK RELATIVE ADDRESS
         OUTPT 'IF PROBLEM PERSISTS CALL TECHNICAL SUPPORT'        FCI*
         B     PGMCHK4
         TITLE 'INIT - INITIALIZE MVSMON'
INIT     PENTRY
         FINDCDE EP=MVSMONVT
         IF    (LTR,R5,R1,NZ)
*
*        R5=A(TPPUT CDE)
*
               L    R5,CDENTPT(R5)
               IF   (ICM,R10,15,0(R5),NZ)
                    LA   R9,4095(R10)
                    MVI  PARM,FIRST
                    MVI  EOF,FALSE
                    PEXIT
               FI
         FI
         L     R0,=A(LWORK)
         GETMAIN R,LV=(0)
         LR    R10,R1           R10=A(USER WORK AREA)
         L     R1,4(R13)
         L     R0,16(R1)        R0=A(MVSMON FROM PREVIOUS SAVE)
         AL    R0,=A(WORK-MVSMON)
         L     R1,=A(LWORK)
         LR    R2,R10
         LR    R3,R1
         MVCL  R2,R0              INITIALIZE WORK AREA
         USING WORK,R10
         LA    R9,4095(R10)
         USING WORK+4095,R9
         ST    R4,APARM
         L     R1,4(R13)
         L     R0,16(R1)
         AL    R0,=A(GETEOF-MVSMON)
         ST    R0,SYSIN+DCBEODAD
         L     R2,PSATOLD
         LA    R1,=A(L'LINE)
         STCM  R1,7,ATPLMSG+1
         IF    (LTR,R5,R5,NZ)
               MVI  MODE,MPSMODE
               L    R0,4(R5)
               ST   R0,ATPPUT          SAVE TPPUT ADDR
               ST   R10,0(R5)          SAVE MVSMON WORK ADDR
         ELSEIF (ICM,R1,15,ASCBTSB(R2),NZ)
               MVI  MODE,TSOMODE
               STAX STAXRTN,OBUF=(STAXMSG,80),MF=(E,STAXLIST)
               LOAD EP=FCIMOD07
               ST   R0,AFSF
               LA   R1,LINE
               ST   R1,FSRLPARM
               LA   R1,ROW
               ST   R1,FSRLPARM+4
               LA   R1,COL
               ST   R1,FSRLPARM+8
               LA   R1,AID
               ST   R1,FSRLPARM+12
               LA   R1,PUTLINE
               ST   R1,FSWLPARM
         ELSEIF (ICM,R1,15,ASCBJBNI(R2),Z)
               MVI  MODE,WTOMODE
         ELSE
               MVI  MODE,IOMODE
               OPEN  (SYSIN,,SYSPRINT,(OUTPUT)),MF=(E,DCBLIST)
         FI
         IF    (CLI,MODE,MPSMODE,NE)
               LA    R0,TITLE1
               PM    PUT
               LA    R0,TITLE2
               PM    PUT
         FI
         L     R2,16
         L     R3,CVTASCVT(R2)
         L     R4,ASVTMAXU(R3)
         MH    R4,=AL2(L'RCT)
         LR    R0,R4
         GETMAIN    R,LV=(0)
         ST    R1,RCTABPTR      SAVE PTR TO CPU RATE TABLE FOR ASCBS
         LR    R0,R1
         LR    R1,R4
         ZR    R14
         ZR    R15
         MVCL  R0,R14
         L     R2,FLCTRACE
         IF    (LTR,R2,R2,NZ)
               LM   R3,R4,4(R2)
               SR   R4,R3
               LR   R0,R4
               GETMAIN R,LV=(0)
               LA   R2,0(R1,R4)
               STM  R1,R2,TTETAB
         FI
         L     R2,16
         L     R2,CVTILK2(R2)
         ZR    R0
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    AH   R0,=H'4'
               FI
               AAI  R2,2
         OD
         GETMAIN R,LV=(0)
         ST    R1,DISIOTAB
         EXTRACT PWORK,MF=(E,EXTRPSCB)                             FCI*
         L     R1,PWORK                                            FCI*
         USING PSCB,R1                                             FCI*
         IF    (LTR,R1,R1,NZ),AND,(TM,PSCBATR1,PSCBCTRL,O)         FCI*
             MVI  TSOOPER,TRUE                                     FCI*
         FI                                                        FCI*
         DROP  R1                                                  FCI*
         LOAD  EP=DEVNAMET      GET DEVICE NAME TABLE              FCI*
         IF    (LTR,R15,R15,Z)                                     FCI*
               ST   R0,DEVADDR    SAVE IT                          FCI*
         ELSE  ,                                                   FCI*
               MVI  DEVADDR,X'80'                                  FCI*
         FI                                                        FCI*
         PM    INTERVAL
         IF    (CLI,MODE,TSOMODE,EQ)
               PM   HS
         FI
         PEXIT
         TITLE 'PROCESS'
PROCESS  PENTRY
         IF    (CLI,PFKMODE,TRUE,EQ)
               OUTPT 'COMMAND DEFINED - ENTER NEW PF KEY'
               PEXIT
         FI
         DOCASE LINE
           CASE C'C'                                               FCI*
                PM   CO                                            FCI*
           ESAC                                                    FCI*
           CASE C'D'
                PM   DISPLAY
           ESAC
           CASE C'E'
                MVI  EOF,TRUE
           ESAC
           CASE C'H' HELP COMMANDS
                DOCASE LINE+1
                  CASE C'C'  COMMANDS BY TYPE
                    PM HC
                  ESAC
                  CASE C'D'  DETAIL ALPHABETICAL LIST
                    PM HD
                  ESAC
                  CASE C'K'  PFK DEFINITION MODE
                    PM HK
                  ESAC
                  CASE C'M'  HELP MODE
                    PM HM
                  ESAC
                  CASE C'S' HELP SUMMARY
                    PM HS
                  ESAC
                  CASE ELSE
                    PM HELP
                  ESAC
                ESACOD
           ESAC
           CASE C'I' HOLD/RELEASE INTERVAL CALCULATIONS
                PM   IHOLD
           ESAC
           CASE C'M'  DISPLAY MEMORY USAGE BY SYSTEM COMPONENT
                PM   MEMORY
           ESAC
           CASE C'P'  DISPLAY PAGE DATA SET INFO.
                PM    PDSNINFO
           ESAC
           CASE C'Q'
                PM    ENQDEQ
           ESAC
           CASE C'R'  DISPLAY CPU RATES BY SYSTEM COMPONENT
                PM    RATES
           ESAC
           CASE C'S' DISPLAY SRM STATUS
                PM   SRM
           ESAC
           CASE C'T'
                PM   TIME
           ESAC
           CASE C'W' WAIT FOR INTERVAL
                PM   WAIT
           ESAC
           CASE C'X'
                PM   XCOMINFO
           ESAC
           CASE ELSE
                PM   UNKNOWN
           ESAC
         ESACOD
         PEXIT
         TITLE 'IHOLD - HOLD/RELEASE INTERVAL UPDATING'
IHOLD    PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'I - HOLD OR RELEASE INTERVAL UPDATING'
               OUTPT ' '
               OUTPT 'THIS COMMAND ALLOWS EXECUTION OF MULTIPLE'
               OUTPT 'INTERVAL BASED COMMANDS USING SAME INTERVAL'
               OUTPT 'DATA'
               PEXIT
         FI
         IF  (CLI,INTHOLD,FALSE,EQ)
             MVI  INTHOLD,TRUE
             OUTPT 'INTERVAL CALCULATION HELD'
         ELSE
             MVI  INTHOLD,FALSE
             OUTPT 'INTERVAL CALCULATION RELEASED'
         FI
         PEXIT
         TITLE 'INTERVAL - PERFORM ALL INTERVAL CALCULATIONS'
INTERVAL PENTRY
         IF    (CLI,INTDONE,TRUE,EQ)
               PEXIT
         FI
         MVI   INTDONE,TRUE
         IF    (CLI,INTHOLD,TRUE,EQ)
               LA   R0,INTMSG
               PM   PUT
               PEXIT
         FI
         TIME  BIN
         LR    R1,R0
         S     R1,INTLAST
         IF    (CL,R1,=F'100',L)
               STIMER WAIT,BINTVL==F'100'
               TIME   BIN
               LR     R1,R0
               S      R1,INTLAST
         FI
         ST    R1,INTBIN
         ST    R0,INTLAST
         ZR    R0
         D     R0,=F'100'
         CVD   R1,PWORK
         EDIT  TO=DINTSEC,FROM=PWORK+5,MASK=' ZZZ99'
         TIME  DEC
         ST    R0,PWORK
         EDIT  TO=DINTEND,FROM=PWORK,MASK=' 99.99'
         PM    DC1
         PM    DP1
         PM    RC1
         PM    RT1
         PM    DI1
         IF    (CLC,INTBIN,INTLAST,NE)
               LA    R0,INTMSG
               PM    PUT
         FI
         PEXIT
         TITLE 'DISPLAY ROUTINE'
DISPLAY  PENTRY
         DOCASE LINE+1
               CASE C'A' DISPLAY ONLY ACTIVE JOBS, STCS, AND USERS
                    PM   DA
               ESAC
               CASE C'B' DISPLAY BASIC SYSTEM INFO.
                    PM   DB
               ESAC
               CASE C'C' DISPLAY CPU AND CHANNEL USAGE
                    PM   DC
               ESAC
               CASE C'D' DISPLAY DISKS
                    PM   DD
               ESAC
               CASE C'E' DISPLAY POSSIBLE ERROR CONDITIONS
                    PM   DE
               ESAC
               CASE C'I' DISPLAY IO COUNT FOR UCBS
                    PM   DI
               ESAC
               CASE C'J' DISPLAY BATCH JOBS
                    PM   DJ
               ESAC
               CASE C'K' DISPLAY ACTIVE LPA MODULES AND USAGE
                    PM   DK
               ESAC
               CASE C'L' DISPLAY COMMUNICATION LINES STATUS
                    PM   DL
               ESAC
               CASE C'M' DISPLAY MOUNTS
                    PM   DM
               ESAC
               CASE C'N' DISPLAY NUMBERS OF THINGS
                    PM   DN
               ESAC
               CASE C'P' DISPLAY PAGING
                    PM   DP
               ESAC
               CASE C'Q' DISPLAY ENQS
                    PM   DQ
               ESAC
               CASE C'R' DISPLAY WTOR REQUESTSAND MOUNTS
                    PM   DR
               ESAC
               CASE C'S' DISPLAY SYSTEM TASKS
                    PM   DS
               ESAC
               CASE C'T' DISPLAY TAPES
                    PM   DT
               ESAC
               CASE C'U' DISPLAY TSO USERS
                    PM   DU
               ESAC
               CASE C'V' DISPLAY VIRTUAL AND REAL STORAGE STATUS
                    PM   DV
               ESAC
               CASE C'W' DISPLAY WAITING JOBS AND TSO USERS
                    PM   DW
               ESAC
               CASE C'Z' DISPLAY TRACE TABLE STATUS
                    PM   DZ
               ESAC
               CASE ELSE
                    PM   UNKNOWN
               ESAC
         ESACOD
         PEXIT
         TITLE 'HELP - DISPLAY HELPFUL INFO'
HELP     PENTRY
         IF   (CLI,HMODE,FALSE,EQ)
              PM  HS
         ELSE
              PM  HC
         FI
         PEXIT
         TITLE 'HS - HELP SUMMARY'
HS       PENTRY
         OUTPT 'HS - HELP SUMMARY'
         OUTPT ' '
         OUTPT 'MVSMON IS A REAL TIME MVS OPERATING SYSTEM MONITOR.  '
         OUTPT '                                                     '
         OUTPT 'TO SWITCH HELP MODE ON OR OFF, ENTER ''HM''.         '
         OUTPT 'IN HELP MODE, ENTERING ANY COMMAND WILL PROVIDE HELP '
         OUTPT 'INFORMATION FOR THAT COMMAND.  IN HELP MODE, THE HELP'
         OUTPT 'COMMAND WILL LIST COMMANDS BY TYPE (HC COMMAND).     '
         OUTPT 'THE HD COMMAND WILL LIST ALL COMMANDS ALPHABETICALLY.'
         OUTPT 'NOTE PF KEYS 1-12 CAN BE REDEFINED BY ENTERING ''HK'''
         OUTPT 'COMMAND TO SWITCH TO PFK DEFINITION MODE. USE  '
         OUTPT 'THE HELP MODE TO OBTAIN FURTHER HELP ON HK COMMAND.  '
         OUTPT 'FOLLOWING KEYS ARE PERMANENTLY DEFINED AS FOLLOWS:   '
         OUTPT '                                                     '
         OUTPT ' PA1        STOP CURRENT COMMAND                     '
         OUTPT ' PA2   END  STOP MVSMON                              '
         OUTPT ' '                                                 FCI*
         OUTPT ' '                                                 FCI*
         OUTPT ' '                                                 FCI*
         OUTPT ' '                                                 FCI*
         OUTPT ' '                                                 FCI*
         OUTPT ' THE FOLLOWING ARE THE CURRENT PFK DEFINITIONS:       '
         OUTPT ' '                                                 FCI*
         LA    R2,PFKTAB
         LA    R3,PFKTAB+L'PFKTAB
         ZAP   PWORK,=P'0'
         DODO  WHILE,(CLR,R2,R3,L)
               AP   PWORK,=P'1'
               EDIT TO=DPFKNO,FROM=PWORK+6,MASK=' Z99'
               MVC  DPFK,0(R2)
               LA   R0,PFKLINE
               PM   PUT
               LA   R2,L'PFKENT(R2)
         OD
         PEXIT
         TITLE 'HD - DETAIL LIST OF COMMANDS ALPHABETICALLY'
HD       PENTRY
         OUTPT 'HD - DETAIL LIST OF COMMANDS ALPHABETICALLY'
         OUTPT ' '
         IF    (CLI,TSOOPER,TRUE,EQ)                               FCI*
             OUTPT '     CO - INVOKE DIDOCS SIMULATED OS CONSOLE ' FCI*
         FI                                                        FCI*
         OUTPT '     DA - DISPLAY ALL ACTIVE TASKS                   '
         OUTPT '     DB - DISPLAY BASIC SYSTEM STATUS                '
         OUTPT '     DC - DISPLAY CPU AND CHANNEL STATUS             '
         OUTPT '     DD - DISPLAY ONLINE DISKS                       '
         OUTPT '     DE - DISPLAY POSSIBLE ERROR CONDITIONS          '
         OUTPT '     DI - DISPLAY UCB I/O COUNTS                     '
         OUTPT '     DJ - DISPLAY BATCH JOBS ONLY                    '
         OUTPT '     DL - DISPLAY COMMUNICATION LINES STATUS         '
         OUTPT '     DK - DISPLAY ACTIVE LPA MODULES AND USAGE       '
         OUTPT '     DM - DISPLAY PENDING MOUNTS                     '
         OUTPT '     DN - DISPLAY NUMBERS OF THINGS                  '
         OUTPT '     DP - DISPLAY SYSTEM PAGING                      '
         OUTPT '     DQ - DISPLAY ENQUEUED RESOURCES                 '
         OUTPT '     DR - DISPLAY PENDING OPERATOR REPLIES           '
         OUTPT '     DS - DISPLAY SYSTEM TASKS ONLY                  '
         OUTPT '     DT - DISPLAY TAPES                              '
         OUTPT '     DV - DISPLAY VIRTUAL AND REAL STORAGE STATUS    '
         OUTPT '     DU - DISPLAY TSO USERS ONLY                     '
         OUTPT '     DW - DISPLAY WAITING TASKS                      '
         OUTPT '     DZ - DISPLAY TRACE TABLE USAGE                  '
         OUTPT '     DZS- TRACE TABLE SUMMARY INCLUDING SVC USAGE    '
         OUTPT '     E  - END                                        '
         OUTPT '     H  - DISPLAY HELP INFORMATION                   '
         OUTPT '     HC - LIST COMMANDS BY CONTROL BLOCK TYPE        '
         OUTPT '     HD - DETAIL LIST OF ALL COMMANDS ALPHABETICALLY '
         OUTPT '     HK - TURN PFK MODE ON/OFF AND LIST PFKS         '
         OUTPT '     HM - TURN HELP MODE ON/OFF                      '
         OUTPT '     HS - HELP SUMMARY                               '
         OUTPT '     I  - HOLD/RELEASE INTERVAL CALCULATIONS         '
         OUTPT '     M  - DISPLAY REAL MEMORY BY DOMAIN              '
         OUTPT '     P  - DISPLAY PAGE DATA SET INFO.                '
*        OUTPT '     QD - DEQ NAME                                   '
*        OUTPT '     QE - ENQ NAME                                   '
*        OUTPT '     QN - DEFINE ENQ/DEQ RESOURCE                    '
         OUTPT '     R  - DISPLAY CPU USAGE BY DOMAIN                '
         OUTPT '     S  - DISPLAY SRM UIC, CPU, PAGING, AND ASMQ     '
         OUTPT '     T  - TIME AND DATE NOW AND UPTIME FOR SYSTEM    '
         OUTPT '     W  - WAIT FOR SPECIFIED NUMBER OF SECONDS       '
         OUTPT '     X  - DISPLAY XCOM CROSS MEMORY COMM. INFO.      '
         PEXIT
         TITLE 'HC - LIST COMMANDS BY CONTROL BLOCKS USED'
HC       PENTRY
         OUTPT 'HC - LIST COMMANDS BY CONTROL BLOCK USED             '
         OUTPT '                                                     '
         OUTPT 'CONTROL BLOCKS   RESOURCE TYPE   COMMANDS            '
         OUTPT '                                                     '
         OUTPT '  UCVT           TIME,XCOM       T,X,DB              '
         OUTPT '  ASVT/ASCB      TASKS           DA,DJ,DU,DS,DE,R,   '
         OUTPT '                                 M,DN,DB             '
         OUTPT '  UCB            DEVICES         DI,DN,DE,DM,DL,DT,  '
         OUTPT '                                 DD,DW,DB            '
         OUTPT '  PVT            MEMORY          DV,DP,P,DE,DB       '
         OUTPT '  UCM            REPLIES         DR,DB               '
         OUTPT '  TTE            TRACE TABLE     DZ,DZS,DE           '
         OUTPT '  CSD            CPU, CHANNELS   DC,DB               '
         OUTPT '  CDE            LINK PACK AREA  DK                  '
         OUTPT '  QCB            ENQ/DEQ         DQ,QE,QD,QN,DB,DE   '
         OUTPT '  RMCT           SRM             S                   '
         OUTPT '                 HELP            H,HC,HM,HK          '
         OUTPT '                 CONTROL         E,I,W               '
         PEXIT
         TITLE 'CO - INVOKE DIDOCS COMMAND FOR CONSOLE SVCS'       FCI*
CO       PENTRY                                                    FCI*
         IF    (CLI,TSOOPER,FALSE,EQ),OR,(CLI,MODE,TSOMODE,NE)     FCI*
            PEXIT                                                  FCI*
         FI                                                        FCI*
         IF    (CLI,HMODE,TRUE,EQ)                                 FCI*
            OUTPT 'CO - INVOKE DIDOCS SERVICES UNDER TSO'          FCI*
            OUTPT ' '                                              FCI*
            OUTPT 'DIDOCS IS A OPERATOR PRIVLEDGE TSO COMMAND THAT' FCI
            OUTPT 'ALLOWS THE TSO USER TO ''MIMIC'' AN OS CONSOLE ' FCI
            OUTPT 'THE USER MAY TYPE JES2 OR MVS COMMANDS AND '    FCI*
            OUTPT 'SEE THE CONSOLE RESPONSE AT THE TSO TUBE'       FCI*
            PEXIT                                                  FCI*
         FI                                                        FCI*
         IF    (CLC,DIDOCADR,=F'0',EQ)                             FCI*
               LOAD EP=DIDOCS                                      FCI*
               IF   (LTR,R15,R15,Z)                                FCI*
                   ST  R0,DIDOCADR                                 FCI*
               ELSE ,                                              FCI*
                   MVI  DIDOCADR,X'80'                             FCI*
               FI                                                  FCI*
         FI                                                        FCI*
         L     R15,DIDOCADR                                        FCI*
         IF    (LTR,R15,R15,P)                                     FCI*
               LA    R1,0                                          FCI*
               LR    R2,R13                                        FCI*
               LA    R13,DIDOCSAV                                  FCI*
               BALR  R14,R15                                       FCI*
               LR    R13,R2                                        FCI*
         ELSE  ,                                                   FCI*
               OUTPT '--DIDOCS UNAVAILABLE (EP NOT FOUND)'         FCI*
         FI                                                        FCI*
         PEXIT                                                     FCI*
         TITLE 'HK - TURN PFK DEFINITON MODE ON/OFF AND LIST'
HK       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'HK - TURN PROGRAM FUNCTION KEY (PFK)           '
               OUTPT '     DEFINITION MODE ON OR OFF AND LIST        '
               OUTPT '     CURRENT PFK DEFINITONS.  WHENEVER THE     '
               OUTPT '     PFK MODE IS ON, THE NEXT PFK KEY ENTERED  '
               OUTPT '     WILL BE REDEFINED AS THE LAST COMMAND     '
               OUTPT '     THAT WAS ENTERED.                         '
               PEXIT
         FI
         IF   (CLI,PFKMODE,FALSE,EQ)
              OUTPT 'PFK DEFINITION MODE ON'
              MVI  PFKMODE,TRUE
         ELSEIF (CLI,PFKMODE,PFKDONE,EQ)
              OUTPT 'PFK DEFINITION MODE OFF'
              MVI  PFKMODE,FALSE
         FI
         OUTPT ' '
         LA    R2,PFKTAB
         LA    R3,PFKTAB+L'PFKTAB
         ZAP   PWORK,=P'0'
         DODO  WHILE,(CLR,R2,R3,L)
               AP   PWORK,=P'1'
               EDIT TO=DPFKNO,FROM=PWORK+6,MASK=' Z99'
               MVC  DPFK,0(R2)
               LA   R0,PFKLINE
               PM   PUT
               LA   R2,L'PFKENT(R2)
         OD
         PEXIT
         TITLE 'HM - TURN HELP MODE ON/OFF'
HM       PENTRY
         IF   (CLI,HMODE,TRUE,EQ)
              OUTPT 'HELP MODE OFF'
              MVI  HMODE,FALSE
         ELSE
              OUTPT 'HELP MODE ON'
              MVI  HMODE,TRUE
         FI
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT '                                             '
               OUTPT 'HM - TURN HELP MODE ON OR OFF                '
               OUTPT '     WHEN THE HELP MODE IS ON, THE DETAIL    '
               OUTPT '     HELP INFORMATION FOR EACH COMMAND WILL  '
               OUTPT '     BE DISPLAYED INSTEAD OF EXECUTING THE   '
               OUTPT '     COMMAND. HELP IN HELP MODE WILL LIST THE'
               OUTPT '     COMMANDS AVAILABLE.                     '
               PEXIT
         FI
         PEXIT
         TITLE 'ENQDEQ - COMMANDS'
ENQDEQ   PENTRY
         DOCASE     LINE+1
               CASE C'D' DEQ
                    PM   QD
               ESAC
               CASE C'E' ENQ
                    PM   QE
               ESAC
               CASE C'N' DEFINE ENQ/DEQ NAME
                    PM   QN
               ESAC
         ESACOD
         PEXIT
         TITLE 'QD - DEQ NAME'
QD       PENTRY
         OUTPT 'QD FUNCTION NOT IMPLEMENTED AT FCI'                FCI*
         PEXIT                                                     FCI*
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'QD - DEQUE RESOURCE DEFINED BY QN'
               PEXIT
         FI
         L     R2,RNAMELNG
         DEQ   (QNAME,RNAME,(R2),SYSTEM),MF=(E,DEQLIST)
         PEXIT
         TITLE 'QE - ENQ NAME'
QE       PENTRY
         OUTPT 'QE FUNCTION NOT IMPLEMENTED AT FCI'                FCI*
         PEXIT                                                     FCI*
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'QE - ENQUE RESOURCE DEFINED BY QN'
               PEXIT
         FI
         L     R2,RNAMELNG
         ENQ   (QNAME,RNAME,E,(R2),SYSTEM),MF=(E,ENQLIST)
         PEXIT
         TITLE 'QN - DEFINE NAME'
QN       PENTRY
         OUTPT 'QN FUNCTION NOT IMPLEMENTED AT FCI'                FCI*
         PEXIT                                                     FCI*
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'QN,QNAME,RNAME - DEFINE ENQUE/DEQUE RESOURCE'
               OUTPT ' '
               OUTPT 'QNAME - UP TO 8 CHARACTER MAJOR NAME'
               OUTPT 'RNAME - UP TO 44 CHARACTER MINOR NAME'
               OUTPT ' '
               OUTPT 'THIS COMMAND DEFINES NAMES USED IN QE AND QD'
               PEXIT
         FI
         MVC   QNAME,=CL8' '
         MVC   RNAME,=CL44' '
         LA  R2,QNAME
         LA  R3,LINE+3
         DODO WHILE,(CLI,0(R3),C',',NE),AND,(CLI,0(R3),C' ',NE)
             MVC  0(1,R2),0(R3)
             AAI  R2,1
             AAI  R3,1
         OD
         IF  (CLI,0(R3),C',',NE)
             OUTPT 'QN - INVALID SYNTAX QN,MAJ,MIN - RETRY'
             PEXIT
         FI
         AAI   R3,1
         LA    R2,RNAME
         ZR    R4
         DODO  WHILE,(CLI,0(R3),C' ',NE)
               MVC  0(1,R2),0(R3)
               AAI  R2,1
               AAI  R3,1
               AAI  R4,1
         OD
         ST    R4,RNAMELNG
         PEXIT
         TITLE 'SRM - DISPLAY SRM STATUS'
SRM      PENTRY
         OUTPT 'SRM - SYSTEM RESOURCE MANAGER STATUS DISPLAY'
         OUTPT ' '
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'UIC - UNREFERENCED INTERVAL COUNT FOR PAGES'
               OUTPT 'CPU - CENTRAL PROCESSOR PERCENT UTILIZATION'
               OUTPT 'PAG - PAGING RATE PER SECOND'
               OUTPT 'ASM - AUXILIARY STORAGE MANAGER REQUEST QUEUE'
               OUTPT ' '
               OUTPT 'WHEN ANY OF THE ABOVE VARIABLES EXCEEDS THE'
               OUTPT 'MAXIMUM, THE SRM SELECTS A TASK TO SWAP OUT'
               OUTPT 'UNTIL THE ACTIVATING VARIABLE DROPS TO THE'
               OUTPT 'LOW LIMIT AGAIN.'
               PEXIT
         FI
         L     R2,16
         L     R2,CVTOPCTP(R2)
         LA    R2,LRMCT(R2)
         MVC   DSTYP,=C'UIC'
         LH    R0,RCCUICTL(R2)
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCUICTH(R2)
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVUICA(R2)
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         MVC   DSTYP,=C'CPU'
         LH    R0,RCCCPUTL(R2)
         SRL   R0,4
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCCPUTH(R2)
         SRL   R0,4
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVCPUA(R2)
         SRL   R0,4
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         MVC   DSTYP,=C'PTR'
         LH    R0,RCCPTRTL(R2)
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCPTRTH(R2)
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVPTR(R2)
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         MVC   DSTYP,=C'ASM'
         LH    R0,RCCASMTL(R2)
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCASMTH(R2)
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVASMQA(R2)
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         PEXIT
         TITLE 'XCOMINFO - DISPLAY XCOM CROSS MEMORY INFO'
XCOMINFO PENTRY
         OUTPT 'XCOM IS NOT IMPLEMENTED AT FCI'
         PEXIT
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'XCOM - STATUS SUMMARY ON CROSS MEMORY'
               OUTPT '       COMMUNICATIONS FACILITY'
               OUTPT ' '
               OUTPT 'THIS IS A USER INSTALLED FACILITY TO MESSAGE'
               OUTPT 'SWITCH BETWEEN ADDRESS SPACES.'
               OUTPT ' '
               OUTPT 'RCUR  - CURRENT MESSAGES QUEUED IN CSA'
               OUTPT 'RMAX  - MAXIMUM ALLOWED IN CSA'
               OUTPT 'RTOT  - TOTAL MESSAGES SENT SINCE LAST IPL'
               OUTPT ' '
               OUTPT 'PID   - DESTINATION PATH NAME'
               OUTPT 'TID   - SOURCE PATH NAME'
               OUTPT 'ME#   - NUMBER OF MESSAGES FOR THIS PATH'
               PEXIT
         FI
*
*  SEE SR301000 - SR305000, CICS, AND GU640001 FOR MORE
*  INFORMATION ON XCOM.
*
         L     R2,16
         L     R2,CVTUSER(R2)
         IF    (LTR,R2,R2,Z)
               OUTPT 'XCOM - NO USER CVT DEFINED'
               PEXIT
         FI
         L     R2,UCVTXCVT(R2)
         IF    (LTR,R2,R2,Z)
               OUTPT 'XCOM - NO XCVT DEFINED'
               PEXIT
         FI
         L     R0,VTRCUR(R2)
         CVD   R0,PWORK
         EDIT  TO=DRCUR,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,VTRMAX(R2)
         CVD   R0,PWORK
         EDIT  TO=DRMAX,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,VTRTOT(R2)
         CVD   R0,PWORK
         EDIT  TO=DRTOT,FROM=PWORK+5,MASK=' ZZ,Z99'
         LA    R0,DXCOM1
         PM    PUT
         OUTPT ' '
         L     R3,VTPCBH(R2)
         IF    (LTR,R3,R3,Z)
               OUTPT 'XCOM - NO PATHS DEFINED AT THIS TIME'
         ELSE
               DODO  WHILE,(LTR,R3,R3,NZ)
                     MVC  DPATH,PCBPID(R3)
                     MVC  DPATHJOB,PCBJOBN(R3)
                     LA   R0,DXCOM2
                     PM   PUT
                     L    R3,PCBNEXT(R3)
               OD
         FI
         OUTPT ' '
         L     R3,VTMHBH(R2)
         IF    (LTR,R3,R3,Z)
               OUTPT 'XCOM - NO MESSAGES QUEUED AT THIS TIME'
         ELSE
               DODO  WHILE,(LTR,R3,R3,NZ)
                     MVC  DPID,MHBPID(R3)
                     IF   (CLC,MHBTID(4,R3),=4X'00',NE)
                          MVC  DTID,MHBTID(R3)
                     ELSE
                          MVC  DTID,=CL4'NONE'
                     FI
                     LH   R0,MHBME#(R3)
                     CVD  R0,PWORK
                     EDIT TO=DME#,FROM=PWORK+5,MASK=' ZZ,Z99'
                     LA   R0,DXCOM3
                     PM   PUT
                     L    R3,MHBNEXT(R3)
               OD
         FI
         OUTPT ' '
         MVC   LINE(20),=CL20'DQ,XCOMPATH'
         PM    DQ
         PEXIT
         TITLE 'UNKNOWN -UNKNOWN REQUEST'
UNKNOWN PENTRY
         OUTPT 'FOR HELP ENTER HELP OR PFK12'
         OUTPT ' '                                                 FCI*
         OUTPT 'HD - FOR LIST OF COMMANDS'                         FCI*
         OUTPT 'HS - FOR COMMAND SUMMARY'                          FCI*
         OUTPT 'HC - FOR CONTROL BLOCKS USED'                      FCI*
         PEXIT
         TITLE 'DA - DISPLAY ACTIVE JOBS, USERS, AND SYSTEM TASKS'
DA       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DA - DISPLAY ALL ACTIVE TASKS, JOBS, AND USERS'
               PM    DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBTSB(R5),NZ)
                         PM   DU1
                    ELSEIF (ICM,R1,15,ASCBJBNI(R5),NZ)
                         PM   DJ1
                    ELSE
                         PM   DS1
                    FI
                    IF   (CLC,DARCPU,=C'   0',GT),                     X
               OR,(CLC,DARIO,=C'   0',GT),                             X
               OR,(CLC,DARPG,=C'   0',GT),                             X
               OR,(CLC,DARSVC,=C'   0',GT),                            X
               OR,(CLC,DARSIO,=C'   0',GT),                            X
               OR,(CLC,DARPGM,=C'   0',GT),                            X
               OR,(CLC,DARINT,=C'   0',GT)
                         LA   R0,DALINE3
                         PM   PUT
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DAHELP - HELP INFO ON COMMON TASK, JOB, AND USER'
DAHELP   PENTRY
         OUTPT ' '
         OUTPT 'JOBNAME  - NAME OF JOB, TSO USER, OR STARTED TASK'
         OUTPT 'STEPNAME - NAME OF JOB STEP, TSO, OR STC'
         OUTPT 'DPG      - DOMAIN AND PERFORMANCE GROUP'
         OUTPT 'CPU %    - PERCENT CPU UTILIZATION IN LAST INTERVAL'
         OUTPT 'XIO/SEC  - RATE OF EXCP REQUESTS   IN LAST INTERVAL'
         OUTPT 'PG/SEC   - RATE OF PAGE FAULTS     IN LAST INTERVAL'
         OUTPT 'SVC TOT  - TOTAL MVS CALLS   IN LAST TRACE INTERVAL'
         OUTPT 'SIO TOT  - TOTAL START I/O   IN LAST TRACE INTERVAL'
         OUTPT 'PGM TOT  - TOTAL PAGE FAULTS IN LAST TRACE INTERVAL'
         OUTPT 'INT TOT  - TOTAL INTERRUPTIONS  LAST TRACE INTERVAL'
         OUTPT 'T-CPU    - TOTAL TCB AND SRB CPU'
         OUTPT 'T-IO     - TOTAL EXCP COUNT FOR JOB OR TSO STEP'
         OUTPT 'T-MEM    - TOTAL CURRENT REAL MEMORY IN USE'
         OUTPT 'T-XEQ    - TOTAL ELAPSED JOB OR TSO EXECUTION TIME'
         PEXIT
         TITLE 'DB - DISPLAY BASIC SYSTEM STATUS'
DB       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DB - DISPLAY BASIC SYSTEM STATUS'
               OUTPT ' '
               OUTPT 'CURRENT TIME AND DATE HH.MM.SS.TH  YY.DDD'
               OUTPT 'AND NUMBER OF DAYS AND HH:MM:SS SINCE LAST IPL'
               OUTPT ' '
               OUTPT 'NUMBER OF ACTIVE TASKS AND DEVICES IN SYSTEM'
               OUTPT ' '
               OUTPT 'SYSTEM PAGING RATES DURING LAST INTERVAL'
               OUTPT ' '
               OUTPT 'CPU AND CHANNEL USAGE DURING LAST INTERVAL'
               OUTPT ' '
               OUTPT 'OUTSTANDING DISK AND TAPE MOUNTS IF ANY'
               OUTPT 'TASKS WAITING ON ENQUEUED RESOURCES IF ANY'
               OUTPT 'NUMBER OF OUTSTANDING OPERATIOR REPLIES'
               OUTPT 'SYSTEM ERRORS IF ANY'
               OUTPT 'ADDRESS SPACE ERRORS IF ANY'
               OUTPT 'DEVICE ERRORS IF ANY'
               PEXIT
         FI
         PM    TIME
         OUTPT ' '
         PM    DN
         OUTPT ' '
         PM    DP
         OUTPT ' '
         PM    DC
         OUTPT ' '
         PM    DM
         PM    DQ
         PM    DR
         PM    DES
         PM    DEA
         PM    DEU
         PEXIT
         TITLE 'DC - DISPLAY CPU USAGE'
DC       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DC - DISPLAY CPU AND CHANNEL UTILIZATION'
               OUTPT ' '
               OUTPT 'CPU0 - PERCENT CPU UTILIZATION ON UP OR AP'
               OUTPT ' '
               OUTPT 'CPU1 - PERCENT CPU UTILIZATION ON MAIN CPU'
               OUTPT '       OF AN AP SYSTEM'
               OUTPT ' '
               OUTPT 'CHANNEL START I/O COUNTS AND PERCENT BUSY'
               OUTPT 'ARE OBTAINED FROM RMF CONTROL BLOCKS IF'
               OUTPT 'RMF IS ACTIVE IN SYSTEM'
               OUTPT ' '
               OUTPT 'NOTE PERCENT CHANNEL BUSY IS BASED ON RMF'
               OUTPT 'TEST CHANNEL SAMPLES DURING LAST INTERVAL'
               OUTPT ' '
               OUTPT 'BUSY IS NOT MEANINGFUL FOR MUX CHANNELS'
               PEXIT
         FI
         PM    INTERVAL
         PM    DC2
         PEXIT
DC1      PENTRY
         L     R2,16
         L     R3,CVTCSD(R2)
         L     R4,CVTLCCAT(R2)
         IF    (TM,CSDCPUAL(R3),X'80',O)
               L    R5,LCCAT00P(R4)
               LM   R0,R1,LCCAWTIM(R5)
               SRDL R0,12
               D    R0,=F'10000'
               LR   R6,R1            R6=ENDING WAIT TIME IN 0.01
               S    R6,DCSCPU0W      R6=INTERVAL WAIT TIME
               ST   R1,DCSCPU0W      SAVE ENDING WAIT TIME ACCUM.
               L    R1,INTBIN
               SR   R1,R6
               ST   R1,DCSCPU0I      SAVE INTERVAL CPU TIME
         FI
         IF    (TM,CSDCPUAL(R3),X'40',O)
               L    R5,LCCAT01P(R4)
               LM   R0,R1,LCCAWTIM(R5)
               SRDL R0,12
               D    R0,=F'10000'
               LR   R6,R1            R6=ENDING WAIT TIME IN 0.01
               S    R6,DCSCPU1W      R6=INTERVAL WAIT TIME
               ST   R1,DCSCPU1W      SAVE ENDING WAIT TIME ACCUM.
               L    R1,INTBIN
               SR   R1,R6
               ST   R1,DCSCPU1I      SAVE INTERVAL CPU TIME
         FI
*
*        CHANNEL DATA
*
         L     R2,16
         IF    (ICM,R2,15,CVTMFCTL(R2),Z) MF OR RMF REQUIRED
               PEXIT
         FI
         L     R2,STGSMMV(R2)  R2= STMMV
*
*        NEXT 2 INSTRUCTIONS LOAD ECCEDT ADDR OUT OF COMMON
*        STMMV MFROUTER TABLE ENTRY FOR MF AND RMF BASED ON
*        MVS PUBLISHED DUMP WITH MF AND ANOTHER DUMP WITH RMF
*
*
         L     R2,8(R2)
         L     R2,4(R2)        R2= ECCEDT
*
*
         L     R3,ECCECPEQ(R2) R3= ECCPE
*
*        NEXT INSTRUCTIONS DETERMINE IF UP OR AP RUNNING
*        IF UP, CHANNELS ARE ON CPU 0
*        IF AP, CHANNELS ARE ON CPU 1
*
         L     R4,ECCPCDBQ(R3) R4=ECCDBT FOR CPU 0
         IF    (ICM,R0,15,ECCDSIOS(R4),Z)   IF AP, SKIP TO CPU 1
               LA   R3,LECCPE(R3)
         FI
*
*
         L     R0,ECCESAMP(R2) R2= TOTAL SAMPLES
         LR    R1,R0
         S     R1,DCNTSAMP
         AAI   R1,1
         STM   R0,R1,DCNTSAMP  SAVE INTERVAL SAMPLE INFO.
         L     R4,ECCPCDBQ(R3) R4= ECCDBT FOR THIS CPU
         LH    R5,ECCPCNUM(R3) R5= NUMBER CHANNELS ON THIS CPU
         IF    (LTR,R5,R5,NP),OR,(CL,R5,=F'16',H)
               OUTPT 'MF/RMF CHANNEL DATA BAD - IGNORED'
               PEXIT
         FI
         ZR    R6              R6= CHANNEL NUMBER
         LA    R7,DCNCHANS
         DODO  WHILE,(LTR,R5,R5,NZ)
               IF   (ICM,R0,15,ECCDSIOS(R4),NZ)
                    LR   R1,R0
                    S    R1,0(R7)
                    STM  R0,R1,0(R7)
                    L    R0,ECCDBUSY(R4)
                    LR   R1,R0
                    S    R1,8(R7)
                    STM  R0,R1,8(R7)
               ELSE
                    XC   0(16,R7),0(R7)
               FI
               AAI  R6,1   INCR CHANNEL NUMBER
               AAI  R7,16  INCR SAVE  TABLE
               AAI  R4,20  INCR ECCDB TABLE
               SH   R5,=H'1'  DECREMENT TABLE ENTRY COUNT
         OD
         PEXIT
         TITLE 'DC2 - DISPLAY CPU AND CHANNEL INFO FOR INTERVAL'
DC2      PENTRY
         L    R1,DCSCPU0I
         MH   R1,=H'100'
         ZR   R0
         D    R0,INTBIN
         LR   R2,R1
         CVD  R1,PWORK
         EDIT TO=DCDCPU0,FROM=PWORK+6,MASK=' Z99'
         L    R1,DCSCPU1I
         MH   R1,=H'100'
         ZR   R0
         D    R0,INTBIN
         AR   R2,R1
         CVD  R1,PWORK
         EDIT TO=DCDCPU1,FROM=PWORK+6,MASK=' Z99'
         CVD  R2,PWORK
         EDIT TO=DCDCPUT,FROM=PWORK+6,MASK=' Z99'
         LA   R0,DCLINE
         PM   PUT
*
*        CHANNEL DATA
*
         L     R2,16
         IF    (ICM,R2,15,CVTMFCTL(R2),Z) MF OR RMF REQUIRED
               PEXIT
         FI
         ZR    R4              R4= CHANNEL NUMBER
         LA    R2,DCNCHANS
         LA    R3,DCNCHANS+L'DCNCHANS
         DODO  WHILE,(CLR,R2,R3,L)
               IF   (ICM,R1,15,0(R2),NZ)
                    L    R1,4(R2)
                    MH   R1,=H'100'
                    ZR   R0
                    D    R0,INTBIN   R1= SIOS/SEC
                    CVD  R1,PWORK
                    EDIT TO=DCSIOS,FROM=PWORK+6,MASK=' Z99'
                    L    R1,12(R2)
                    MH   R1,=H'100'
                    ZR   R0
                    D    R0,DCNTSAMP+4  PERCENT BUSY FOR INTERVAL
                    CVD  R1,PWORK
                    EDIT TO=DCBUSY,FROM=PWORK+6,MASK=' Z99'
                    CVD  R4,PWORK
                    EDIT TO=DCCHAN,FROM=PWORK+6,MASK=' Z99'
                    LA   R0,DCLINE2
                    PM   PUT
               FI
               AAI  R4,1       INCR CHANNEL NUMBER
               AAI  R2,16      INCR SAVE TABLE
         OD
         PEXIT
         TITLE 'DD - DISPLAY DISKS'
DD       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DD - DISPLAY ONLINE DISK STATUS'
               OUTPT ' '
               OUTPT 'UNIT ADDRESS'
               OUTPT 'VOLUME NAME'
               OUTPT 'DEVICE TYPE                                ' FCI*
               OUTPT 'UNIT STATUS PVT=PRIVATE,PUB=PUBLIC,STR=STORAGE'
               OUTPT '            RSDNT=RESIDENT,RSVED=RESERVED  ' FCI*
               OUTPT '            REMOV=REMOVABLE                ' FCI*
               OUTPT 'USE=    USE COUNT OF VOLUME                ' FCI*
               OUTPT 'OPN=    COUNT OF OPEN DDNAMES ON VOLUME    ' FCI*
               OUTPT 'QLN=    COUNT OF I/O REQUESTS QUEUED TO VOL' FCI*
               OUTPT 'STAT=   STATUS OF UNIT                     ' FCI*
               OUTPT '        O=ONLINE,A=ALLOC,S=SYSRES          ' FCI*
               OUTPT '        NRDY=NOT READY, VARY=VARY OFF PEND ' FCI*
               OUTPT '        UNLD=UNLOAD PENDING, MTPD=MOUNT PENDING'
               OUTPT '        BSY=DEVICE BUSY, CUBSY=CTL UNIT BUSY'
               PEXIT
         FI
         MVC   UCB$CNT,=H'0'         INITIALIZE CKUNIQUE           FCI*
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    IF   (TM,UCBSTAT(R3),X'80',O),                     X
               AND,(CLI,UCBTYP+2(R3),X'20',EQ)
                                   PM   DD1
                    FI
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'DD1 LIST ONE DISK'
DD1      PENTRY
         PM    CKUNIQUE         SEE IF                             FCI*
         IF    (LTR,R0,R0,NZ)      WE HAVE SEEN THIS ONE BEFORE \
            PEXIT                                                  FCI*
         FI                                                        FCI*
         MVC   DDUCB,UCBNAME(R3)
         MVC   DDVOL,UCBVOLI(R3)
         MVC   DDUSTAT,=CL40' '
         IF    (TM,UCBSTAB(R3),UCBBPRV,O)                          FCI*
               MVC  DDUMTYP,=CL4'PVT/'                             FCI*
         ELSEIF (TM,UCBSTAB(R3),UCBBPUB,O)                         FCI*
               MVC  DDUMTYP,=CL4'PUB/'                             FCI*
         ELSEIF (TM,UCBSTAB(R3),UCBBSTR,O)                         FCI*
               MVC  DDUMTYP,=CL4'STR/'                             FCI*
         ELSE  ,                                                   FCI*
               MVC  DDUMTYP,=CL4' '                                FCI*
         FI                                                        FCI*
         IF    (TM,UCBSTAT(R3),UCBRESV,O)                          FCI*
               MVC  DDUVSTAT,=CL5'RSVED'                           FCI*
         ELSEIF (TM,UCBSTAT(R3),UCBPRES,O)                         FCI*
               MVC  DDUVSTAT,=CL5'RSDNT'                           FCI*
         ELSE  ,                                                   FCI*
               MVC  DDUVSTAT,=CL5'REMOV'                           FCI*
         FI                                                        FCI*
         IF    (CLC,DDUMTYP,=CL4' ',EQ)                            FCI*
               MVC  DDUVSTAT,=CL5' '                               FCI*
         FI                                                        FCI*
*                                                                  FCI*
         ZR    R0                       CLEAR A REG                FCI*
         IC    R0,UCBUSER(R3)           GET USE COUNT              FCI*
         CVD   R0,PWORK                 CONVERT TO PRINT           FCI*
         EDIT  TO=DDUUCNT,FROM=PWORK+6,MASK=' Z99'                 FCI*
         IC    R0,UCBDMCT(R3)           GET USE COUNT              FCI*
         N     R0,X7F                   MASK OFF MOUNT STATUS BIT  FCI*
         CVD   R0,PWORK                 CONVERT TO PRINT           FCI*
         EDIT  TO=DDUOCNT,FROM=PWORK+6,MASK=' Z99'                 FCI*
         IC    R0,UCBCNT(R3)            GET Q LENGTH               FCI*
         CVD   R0,PWORK                 CONVERT TO PRINT           FCI*
         EDIT  TO=DDUQCNT,FROM=PWORK+6,MASK=' Z99'                 FCI*
*                                                                  FCI*
* DECODE UNIT STATUS                                               FCI*
*                                                                  FCI*
         LA    R15,DDUSTAT              LOAD ADDR TO START DECODE  FCI*
         IF    (TM,UCBSTAT(R3),UCBONLI,O)                          FCI*
            MVI   0(R15),C'O'              SET IT TO ONLINE        FCI*
            IF   (TM,UCBSTAT(R3),UCBSYSR,O)                        FCI*
                 APPEND 'S'        INDICATE 'SYSRES' STATUS        FCI*
            ELSE ,                                                 FCI*
               IF (TM,UCBSTAT(R3),UCBALOC,O)        IS IT ALLOC?   FCI*
                  APPEND 'A'                                       FCI*
               FI                                                  FCI*
               LA  R14,DDUSTAT                                     FCI*
               IF  (CR,R15,R14,EQ)      DID POINTER GET BUMPED?    FCI*
                   AAI  R15,1           NO, SO BUMP IT             FCI*
               FI                                                  FCI*
            FI                                                     FCI*
            IF   (TM,UCBSTAT(R3),UCBCHGS,O)                        FCI*
               APPEND ',VARY'                  VARY ISSUED         FCI*
            FI                                                     FCI*
            IF   (TM,UCBSTAT(R3),UCBUNLD,O)                        FCI*
               APPEND ',UNLD'                  UNLOAD ISSUED       FCI*
            FI                                                     FCI*
            IF   (TM,UCBFLA(R3),UCBBSY,O)                          FCI*
               APPEND ',BSY'                   DEVICE BUSY         FCI*
            FI                                                     FCI*
            IF   (TM,UCBFLA(R3),UCBNRY,O)                          FCI*
               APPEND ',NRDY'                  DEVICE NOT READY    FCI*
            FI                                                     FCI*
            IF   (TM,UCBFLA(R3),UCBCUB,O)                          FCI*
               APPEND ',CUBSY'                 CNTL UNIT BUSY      FCI*
            FI                                                     FCI*
            IF   (TM,UCBFL4(R3),UCBWDAV,O)                         FCI*
               APPEND ',MTP'                   DAVV MOUNT PENDING  FCI*
            FI                                                     FCI*
            IF   (TM,UCBDMCT(R3),UCBMOUNT,O)                       FCI*
               APPEND ',MTPD'                  MOUNT PENDING       FCI*
            FI                                                     FCI*
         ELSE   ,                                                  FCI*
            MVC   0(7,R4),=C'OFFLINE'                              FCI*
         FI                                                        FCI*
         L     R14,DEVADDR        ADDRESS OF DEVICE NAME TABLE     FCI*
         IF    (LTR,R14,R14,P)                                     FCI*
            L     R15,0(R14)         NUMBER OF ENTRIES             FCI*
            LA    R14,4(R14)         ADDRESS OF FIRST ENTRY        FCI*
*  FCI CODE FAILS FOR SHARED DASD
*           DODO  WHILE,(CLC,UCBTYP(4,R3),8(R14),NE),              FCI*X
               AND,(LTR,R15,R15,P)                                 FCI*
            DODO  WHILE,(CLC,UCBTYP+2(2,R3),8+2(R14),NE),              *
               AND,(LTR,R15,R15,P)                              \
                  AAI   R14,12       INCR POINTER                  FCI*
                  BCTR  R15,0        DECREMENT COUNT               FCI*
            OD                                                     FCI*
*   DITTO   IF    (CLC,8(4,R14),UCBTYP(R3),EQ)                     FCI*
            IF    (CLC,8+2(2,R14),UCBTYP+2(R3),EQ)              \
                  MVC   DDUUTYPE,0(R14)                            FCI*
            ELSE  ,                                                FCI*
                  MVC   DDUUTYPE,=CL8' *????* '                    FCI*
            FI                                                     FCI*
         ELSE  ,                                                   FCI*
               MVC   DDUUTYPE,=CL8' *UNKWN*'                       FCI*
         FI                                                        FCI*
         SPACE 2                                                   FCI*
         LA    R0,DDLINE
         PM    PUT
         PEXIT
         TITLE 'DE - DISPLAY ERROR CONDITIONS'
DE       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DE - DISPLAY ERROR CONDITIONS'
               OUTPT ' '
               OUTPT 'ASCB MEMORY FAILURE'
               OUTPT 'SQA STORAGE CRITICAL'
               OUTPT 'WAITING FOR V=R REGION'
               OUTPT 'SMF PRIMARY NOT AVAILABLE'
               OUTPT 'SMF SECONDARY NOT AVAILABLE'
               OUTPT 'SMF RECORDS LOST'
               OUTPT 'MEMORY ERRORS HAVE FLAGGED BAD FRAMES'
               OUTPT 'MEMORY FRAMES OFFLINE'
               OUTPT 'DEVICE NOT READY'
               OUTPT 'UNSOLICITED DEVICE END'
               OUTPT 'DDR SWAP PENDING'
               OUTPT ' '
               OUTPT 'SIO TRACE ENTRIES WITH NON-ZERO CONDITION CODE'
               OUTPT 'SVC TRACE ENTRIES FOR ABEND AND IO RETRY'
               OUTPT 'PGM TRACE ENTRIES IF NOT PAGE FAULT'
               OUTPT 'IO  TRACE ENTRIES FOR CHAN. AND DEVICE ERRORS'
               PEXIT
         FI
         PM    DV1
         PM    DES
         PM    DEA
         PM    DEU
         PM    DET
         PEXIT
         TITLE 'DEA - SCAN ASCBS FOR ERROR CONDITIONS'
DEA      PENTRY
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    PM   DEA1
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DEA1 - CHECK ASCB FOR ERRORS'
DEA1     PENTRY
         IF    (TM,ASCBFLG1(R5),X'08',O)
               MVC  DEAMSG,=CL40'MEMORY TERMINATING ABNORMALLY'
               IF   (ICM,R15,15,ASCBJBNI(R5),Z)
                    L    R15,ASCBJBNS(R5)
               FI
               MVC  DEAJOB,0(R15)
               LA   R0,DELINE3
               PM   PUT
         FI
         IF    (TM,ASCBDSP1(R5),X'40',O)
               MVC  DEAMSG,=CL40'ASCB MEMORY FAILURE'
               IF   (ICM,R15,15,ASCBJBNI(R5),Z)
                    L    R15,ASCBJBNS(R5)
               FI
               MVC  DEAJOB,0(R15)
               LA   R0,DELINE3
               PM   PUT
         FI
         PEXIT
         TITLE 'DES - DISPLAY SYSTEM ERROR CONDITIONS'
DES      PENTRY
         L     R2,16
         L     R3,CVTGDA(R2)
         IF    (TM,GDAFLAGS(R3),X'06',NZ)
               OUTPT 'SQA STORAGE CRITICAL'
         FI
         IF    (TM,GDAFLAGS(R3),X'02',O)
               OUTPT 'WAITING FOR V=R REGION'
         FI
         IF    (ICM,R3,15,CVTSMCA(R2),NZ)
               IF   (TM,SMCAPSTA(R3),X'80',O)
                    OUTPT 'SMF PRIMARY DSN NOT AVAIL.'
               FI
               IF   (TM,SMCAASTA(R3),X'80',O)
                    OUTPT 'SMF ALTERNATE DSN NOT AVAIL.'
               FI
               IF   (ICM,R0,15,SMCADSCT(R3),NZ)
                    CVD   R0,PWORK                                 FCI*
                    EDIT  TO=DEAJOB,FROM=PWORK+4,MASK=' ZZZZZ99'   FCI*
                    MVC   DEAMSG,=CL40'SMF RECORDS LOST'           FCI*
                    LA    R0,DELINE3                               FCI*
                    PM    PUT                                      FCI*
               FI
         FI
         IF    (CLC,DVBBAD,=H'0',NE)
               OUTPT 'MEMORY ERRORS HAVE FLAGGED BAD PAGES'
         FI
         IF    (CLC,DVBBAD,=H'0',NE)
               LH    R0,DVBBAD                                     FCI*
               CVD   R0,PWORK                                      FCI*
               EDIT  TO=DEAJOB,FROM=PWORK+4,MASK=' ZZZZZ99'        FCI*
               MVC   DEAMSG,=CL40'MEMORY PAGES OFFLINE'            FCI*
               LA    R0,DELINE3                                    FCI*
               PM    PUT                                           FCI*
         FI
         PEXIT
         TITLE 'DEU -  SCAN UCBS FOR ERROR CONDITIONS'
DEU      PENTRY
         MVC   UCB$CNT,=H'0'         INITIALIZE CKUNIQUE           FCI*
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    PM   DEU1
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'DEU1 CHECK A UCB FOR ERRORS'
DEU1     PENTRY
         IF    (TM,UCBSTAT(R3),X'88',NO) ONLINE AND ALLOCATED
               PEXIT
         FI
         PM    CKUNIQUE         SEE IF                             FCI*
         IF    (LTR,R0,R0,NZ)      WE HAVE SEEN THIS ONE BEFORE \
            PEXIT                                                  FCI*
         FI                                                        FCI*
         IF    (TM,UCBFLA(R3),X'40',O)
               MVC  DESNS2,=CL40'DEVICE NOT READY'
               PM   DEU2
         FI
         IF    (TM,UCBFLC(R3),X'20',O)
               MVC  DESNS2,=CL40'UNSOLICITED DEVICE END'
               PM   DEU2
         FI
         IF    (TM,UCBFLC(R3),X'01',O)
               MVC  DESNS2,=CL40'DDR SWAP PENDING'
               PM   DEU2
         FI
         PEXIT
DEU2     PENTRY
         MVC   DEUCB2,UCBNAME(R3)
         LA    R0,DELINE2
         PM    PUT
         PEXIT
         TITLE 'DET - SCAN TRACE TABLE FOR ERRORS'
DET      PENTRY
         L     R2,FLCTRACE
         IF    (LTR,R2,R2,Z)
               PEXIT
         FI
         LM    R2,R4,TTETAB
         LR    R5,R4
         DODO  UNTIL,(CLR,R4,R5,EQ)
               LH   R1,TTEASID(R4)
               PM   GETJOB
               MVC  DZJOB,JOBNAME
               ZR   R1
               IC   R1,TTETYP(R4)
               SRL  R1,4
               LR   R15,R1
               MH   R15,=H'3'
               LA   R15,TTENTAB(R15)
               MVC  DZTYP,0(R15)
               UNPK DZPSW(9),TTEPSW(5,R4)
               UNPK DZPSW+8(9),TTEPSW+4(5,R4)
               MVI  DZPSW+16,C' '
               TR   DZPSW,HEX-240
               UNPK DZCSW(9),TTECSW(5,R4)
               UNPK DZCSW+8(9),TTECSW+4(5,R4)
               MVI  DZCSW+16,C' '
               TR   DZCSW,HEX-240
               UNPK DZREGS(9),TTEREGS(5,R4)
               UNPK DZREGS+8(9),TTEREGS+4(5,R4)
               MVI  DZREGS+16,C' '
               TR   DZREGS,HEX-240
               UNPK DZTCBTM(9),TTETCBTM(5,R4)
               MVC  PWORK(4),TTETCBTM+4(R4) MVC TO PREVENT 0C4 ON B5
               UNPK DZTCBTM+8(9),PWORK(5)
               MVI  DZTCBTM+16,C' '
               TR   DZTCBTM,HEX-240
               DOCASE (R1)
                 CASE 0 SIO
                   IF   (CLI,TTESIOCC(R4),0,NE)
                        LA   R0,DZLINE
                        PM   PUT
                   FI
                 ESAC
                 CASE 2 SVC
                   IF   (CLI,TTEPSW+3(R4),13,EQ),                      X
               OR,(CLI,TTEPSW+3(R4),15,EQ)
                        LA   R0,DZLINE
                        PM   PUT
                   FI
                 ESAC
                 CASE 3 PGM
                   IF   (CLI,TTEPSW+3(R4),17,NE)
                        LA   R0,DZLINE
                        PM   PUT
                   FI
                 ESAC
                 CASE 5 I/O
                   IF   (TM,TTEIOUS(R4),X'03',NZ),                     X
               OR,(TM,TTEIOCS(R4),X'3F',NZ)
                        LA   R0,DZLINE
                        PM   PUT
                   FI
                 ESAC
               ESACOD
               LA   R4,LTTE(R4)
               IF   (CLR,R4,R3,NL)
                    LR   R4,R2
               FI
         OD
         PEXIT
         TITLE 'DIXXX - DISPLAY SIO COUNTS FOR 16 UCBS STARTING AT XXX'
DI       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DI - DISPLAY START IO RATES FOR DEVICES'
               OUTPT ' '
               OUTPT 'DI,S=XXX,E=YYY,M=ZZ'
               OUTPT ' '
               OUTPT ' XXX - OPTIONAL STARTING ADDR. (DEF.=000)'
               OUTPT ' YYY - OPTIONAL ENDING   ADDR. (DEF.=FFF)'
               OUTPT ' ZZZ - OPTIONAL MINIMUM  SIOS  (DEF.=10)'
               OUTPT ' '
               OUTPT 'DEVICE ADDRESS'
               OUTPT 'VOLUME IF ANY'
               OUTPT 'DEVICE TYPE'
               OUTPT 'SIO COUNT DURING LAST INTERVAL'
               OUTPT 'JOBNAME OF LAST USER IF ALLOCATED'
               OUTPT 'START IO PER SECOND DURING LAST INTERVAL'
               PEXIT
         FI
         PM    INTERVAL
         OUTPT ' '
         OUTPT ' '
         IF    (CLC,LINE+2(3),=C',S=',EQ)
               MVC  DISUCB,LINE+5
               IF   (CLC,LINE+8(3),=C',E=',EQ)
                    MVC  DIEUCB,LINE+11
                    IF   (CLC,LINE+14(3),=C',M=',EQ)
                         MVC  DIMSIOS,LINE+17
                    FI
               ELSEIF (CLC,LINE+8(3),=C',M=',EQ)
                    MVC  DIMSIOS,LINE+11
               FI
         ELSEIF (CLC,LINE+2(3),=C',E=',EQ)
               MVC  DIEUCB,LINE+5
               IF   (CLC,LINE+8(3),=C',M=',EQ)
                    MVC  DIMSIOS,LINE+11
               FI
         ELSEIF (CLC,LINE+2(3),=C',M=',EQ)
               MVC  DIMSIOS,LINE+5
         FI
         LA    R0,DILINE1
         PM    PUT
         OUTPT ' '
         MVC   DISCHN,DISUCB
         MVC   DIECHN,DIEUCB
         TR    DISCHN,EBCBIN
         TR    DIECHN,EBCBIN
         PACK  PWORK,DIMSIOS
         CVB   R4,PWORK       R4= MINIMUM SIOS TO DISPLAY
         L     R5,DISIOTAB    R5= SIO START/END INTERVAL COUNT TABLE
         ZR    R6             R6= TOTAL SIO COUNT FOR RANGE
         MVC   UCB$CNT,=H'0'         INITIALIZE CKUNIQUE           FCI*
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    PM   DI2
                    AAI  R5,4
               FI
               AAI  R2,2
         OD
         ZR    R0
         LR    R1,R6
         CVD   R1,PWORK
         EDIT  TO=DIRSIO,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'
         MH    R1,=H'100'
         D     R0,INTBIN
         CVD   R1,PWORK
         EDIT  TO=DIRSIOS,FROM=PWORK+6,MASK=' Z99'
         OUTPT ' '
         LA    R0,DILINE3
         PM    PUT
         PEXIT
         TITLE 'DI2 - DISPLAY SIO INFO FOR CURRENT UCB'
DI2      PENTRY
         MVC   DICHN,UCBNAME(R3)
         TR    DICHN,EBCBIN
         IF    (CLC,DISCHN,DICHN,H),OR,(CLC,DIECHN,DICHN,L)
               PEXIT
         FI
         ZR    R0
         ZR    R1
         ICM   R0,3,0(R5)
         ICM   R1,3,2(R5)
         IF    (SR,R1,R0,M)
               A    R1,=F'65536'
         FI
         AR    R6,R1          ACCUM. TOTAL SIO FOR RANGE
         CVD   R1,PWORK
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         IF    (CLR,R1,R4,L)
               PEXIT
         FI
         EDIT  TO=DISIO,FROM=PWORK+5,MASK=' ZZ,Z99'
         CVD   R1,PWORK
         EDIT  TO=DISIOS,FROM=PWORK+6,MASK=' Z99'
         MVC   DIUCB,UCBNAME(R3)
         IF    (TM,UCBTYP+2(R3),X'80'+X'20',NZ)
               MVC  DIVOL,UCBVOLI(R3)
               OC   DIVOL,=CL6' '
         ELSEIF (TM,UCBTYP+2(R3),X'40',NZ)
               MVC  DIVOL,=CL6'TP'
         ELSEIF (TM,UCBTYP+2(R3),X'10',NZ)
               MVC  DIVOL,=CL6'DISPLY'
         ELSEIF (TM,UCBTYP+2(R3),X'08',NZ)
               MVC  DIVOL,=CL6'U/R'
         ELSE
               MVC  DIVOL,=CL6'OTHER'
         FI
         IF    (TM,UCBSTAT(R3),X'88',O)   ONLINE AND ALLOCATED
               L     R1,UCBEXTPT(R3)
               LH    R1,UCBASID(R1)
               PM    GETJOB
               MVC   DIJOB,JOBNAME
         ELSE
               MVC   DIJOB,=CL8' '
         FI
         PM    CKUNIQUE         SEE IF                             FCI*
         IF    (LTR,R0,R0,NZ)      WE HAVE SEEN THIS ONE BEFORE \
            PEXIT                                                  FCI*
         FI                                                        FCI*
         LA    R0,DILINE2
         PM    PUT
         PEXIT
         TITLE 'DJ - DISPLAY JOBS ONLY'
DJ       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DJ - DISPLAY ACTIVE BATCH JOBS'
               PM   DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBJBNI(R5),NZ)
                         PM   DJ1
                         LA   R0,DALINE3
                         PM   PUT
                     FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DJ1 - PROCESS ONE ASCB ENTRY FOR DJ'
DJ1      PENTRY
         MVC   DAJOB,0(R1)
         MVC   DASTEP,=CL8' '
         MVI   DAPSTEP,C' '                                        FCI*
*                                                                  FCI*
* NOTE: ASCBJBNI POINTS TO CHKEY IN CSCB FOR THE JOB - THIS MEANS  FCI*
*  THAT WE MUST DECRMENT 8 BYTES FROM ADDRESS IN R1 TO USE THE     FCI*
*  CORRECT OFFSET TO EXTRACT THE JOB STEP INFO                     FCI*
*                                                                  FCI*
         IF    (CLC,CSCBPSTP-8(8,R1),=CL8' ',EQ) CHECK CHPROCSN    FCI*
               MVC   DASTEP,CSCBSTEP-8(R1)       USE CHSTEP        FCI*
         ELSE  ,                                                   FCI*
               MVC   DASTEP,CSCBPSTP-8(R1)       USE CHPROCSN      FCI*
               MVI   DAPSTEP,C'-'                                  FCI*
         FI                                                        FCI*
         PM    DA1
         PEXIT
         TITLE 'DA1 - DISPLAY INFO FROM ASCB FOR ALL DJ, DU, DS'
DA1      PENTRY
         L     R1,ASCBOUCB(R5)
         ZR    R0
         IC    R0,OUCBDMN(R1)
         MH    R0,=H'100'
         ZR    R15
         IC    R15,OUCBNPG(R1)
         AR    R0,R15
         CVD   R0,PWORK
         EDIT  TO=DADPG,FROM=PWORK+6,MASK=' Z99'
         LH    R1,ASCBASID(R5)
         MH    R1,=AL2(L'RCT)
         SH    R1,=AL2(L'RCT)
         L     R14,RCTABPTR
         LA    R14,0(R1,R14)
         L     R1,RCTICPU-RCT(R14)
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         EDIT  TO=DARCPU,FROM=PWORK+6,MASK=' Z99'
         L     R1,RCTIIO-RCT(R14)
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         EDIT  TO=DARIO,FROM=PWORK+6,MASK=' Z99'
         L     R1,RCTIPG-RCT(R14)
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         EDIT  TO=DARPG,FROM=PWORK+6,MASK=' Z99'
         ZR    R1
         IC    R1,RCTCSVC-RCT(R14)
*        MH    R1,=H'1000'
*        ZR    R0
*        D     R0,TRCINT
         CVD   R1,PWORK
         EDIT  TO=DARSVC,FROM=PWORK+6,MASK=' Z99'
         ZR    R1
         IC    R1,RCTCSIO-RCT(R14)
*        MH    R1,=H'1000'
*        ZR    R0
*        D     R0,TRCINT
         CVD   R1,PWORK
         EDIT  TO=DARSIO,FROM=PWORK+6,MASK=' Z99'
         ZR    R1
         IC    R1,RCTCPGM-RCT(R14)
*        MH    R1,=H'1000'
*        ZR    R0
*        D     R0,TRCINT
         CVD   R1,PWORK
         EDIT  TO=DARPGM,FROM=PWORK+6,MASK=' Z99'
         ZR    R1
         ZR    R1
         IC    R1,RCTCEXT-RCT(R14)
         ZR    R0
         IC    R0,RCTCIO-RCT(R14)
         AR    R1,R0
*        MH    R1,=H'1000'
*        ZR    R0
*        D     R0,TRCINT
         CVD   R1,PWORK
         EDIT  TO=DARINT,FROM=PWORK+6,MASK=' Z99'
         L     R1,RCTTCPU-RCT(R14)
         CVD   R1,PWORK
         EDIT  TO=DATCPU,FROM=PWORK+4,MASK=' ZZZZ9.99'
         L     R1,RCTTIO-RCT(R14)
         CVD   R1,PWORK
         EDIT  TO=DATIO,FROM=PWORK+4,MASK=' ZZZZZ99'
         L     R1,ASCBOUCB(R5)
         LH    R0,OUCBWSS(R1)
         IF    (CH,R0,ASCBFMCT(R5),L)
               LH   R0,ASCBFMCT(R5)
         FI
         SLL   R0,2
         CVD   R0,PWORK
         EDIT  TO=DATMEM,FROM=PWORK+5,MASK=' ZZZ99'
         TIME  STCK,PWORK
         LM    R0,R1,PWORK
         SRDL  R0,22               MICRO-SEC X 2*12 TO 1.024 MILLI-SEC
         L     R14,16
         L     R14,CVTOPCTP(R14)
         AL    R1,RMCTTBS(R14)     ADD SRM TOD BASE
         L     R14,ASCBOUCB(R5)
         SL    R1,OUCBTMO(R14)     SUBTRACT SRM TRANS. START TIME
         ZR    R0
         SLDL  R0,10               1.024 MILL-SEC TO MICRO-SECONDS
         D     R0,=F'60000000'     MICRO-SECONDS TO MINUTES
         CVD   R1,PWORK
         EDIT  TO=DATXEQ,FROM=PWORK+5,MASK=' ZZZ99'
         PEXIT
         TITLE 'DL - DISPLAY COMMUNICATION LINES STATUS'
DL       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DL - DISPLAY ALL TP LINE ERRORS'
               OUTPT ' '
               OUTPT 'LINE ADDRESS'
               OUTPT ' '
               OUTPT 'NOT READY'
               OUTPT 'INTERCEPT'
               OUTPT 'NO I/O ACTIVE'
               PEXIT
         FI
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    IF   (TM,UCBTYP+2(R3),X'40',O)
                         IF   (TM,UCBSTAT(R3),X'88',O)
                              PM   DL1
                         FI
                    FI
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'DL1 - DISPLAY A LINE'
DL1      PENTRY
         IF    (TM,UCBFLA(R3),X'40',O)
               MVC  DLMSG,=CL20'NOT READY'
               PM   DL2
         ELSEIF (TM,UCBFLC(R3),X'10',O)
               MVC  DLMSG,=CL20'INTERCEPT'
               PM   DL2
         ELSEIF (TM,UCBFLA(R3),X'02',Z)
               MVC  DLMSG,=CL20'NO I/O ACTIVE'
               PM   DL2
         FI
         PEXIT
         TITLE 'DL2 - DISPLAY MSG FOR LINE'
DL2      PENTRY
         MVC   DLUCB,UCBNAME(R3)
         LA    R0,DLLINE1
         PM    PUT
         PEXIT
         TITLE 'DK - DISPLAY ACTIVE LPA MODULES AND USAGE'
DK       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DK - DISPLAY ACTIVE LINK PACK AREA PROGRAMS'
               OUTPT ' '
               OUTPT 'MODULE NAME'
               OUTPT ' '
               OUTPT 'CURRENT USE COUNT'
               PEXIT
         FI
         L     R2,16
         L     R2,CVTQLPAQ(R2)
         L     R2,CDCHAIN(R2)
         DODO  WHILE,(LTR,R2,R2,NZ)
               MVC   DKNAME,CDNAME(R2)
               LH    R0,CDUSE(R2)
               IF    (CH,R0,=H'0',GT)
                     CVD   R0,PWORK
                     EDIT  TO=DKUSE,FROM=PWORK+6,MASK=' Z99'
                     LA    R0,DKLINE
                     PM    PUT
               FI
               L     R2,CDCHAIN(R2)
         OD
         PEXIT
         TITLE 'DM - DISPLAY MOUNTS'
DM       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DM - DISPLAY CURRENT OUTSTANDING MOUNTS'
               OUTPT ' '
               OUTPT 'DEVICE ADDRESS'
               OUTPT 'VOLUME REQUIRED'
               PEXIT
         FI
         MVC   UCB$CNT,=H'0'         INITIALIZE CKUNIQUE           FCI*
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    IF   (TM,UCBTYP+2(R3),X'FF'-X'80'-X'20',Z)
                         IF   (TM,UCBDMCT(R3),X'80',O)
                              IF   (TM,UCBFLA(R3),X'40',O),            X
               OR,(CLI,UCBTYP+2(R3),X'20',EQ)
                                   PM   DM1
                              FI
                         FI
                    FI
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'DM1 DISPLAY MOUNT'
DM1      PENTRY
         PM    CKUNIQUE         SEE IF                             FCI*
         IF    (LTR,R0,R0,NZ)      WE HAVE SEEN THIS ONE BEFORE \
            PEXIT                                                  FCI*
         FI                                                        FCI*
         MVC   DMUCB,UCBNAME(R3)
         MVC   DMVOL,UCBVOLI(R3)
         LA    R1,DMVOL
         PM    CHKVOL
         LA    R0,DMLINE
         PM    PUT
         PEXIT
         TITLE 'CHKVOL - EDIT UCB VOLUME FOR POSSIBLE SCRTCH'
CHKVOL   PENTRY
         IF    (CLI,0(R1),C'A',LT),OR,(CLI,0(R1),C'9',H)
               MVC  0(6,R1),=CL6'SCRTCH'
         FI
         PEXIT
         TITLE 'DN - DISPLAY NUMBERS OF THINGS'
DN       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DN - DISPLAY NUMBER OF TASKS AND DEVICES'
               OUTPT ' '
               OUTPT 'NUMBER OF ADDRESS SPACES DEFINED'
               OUTPT 'NUMBER OF TASKS READY TO RUN'
               OUTPT 'NUMBER OF BATCH JOBS RUNNING'
               OUTPT 'NUMBER OF TSO USERS LOGGED ON'
               OUTPT 'NUMBER OF SYSTEM TASKS RUNNING'
               OUTPT ' '
               OUTPT 'NUMBER OF UNIT ADDRESSES DEFINED'
               OUTPT 'NUMBER OF ONLINE ALLOCATED DISKS'
               OUTPT 'NUMBER OF ONLINE ALLOCATED TAPES'
               OUTPT 'NUMBER OF ONLINE ALLOCATED TP PORTS'
               OUTPT 'NUMBER OF ONLINE ALLOCATED UNIT RECORD DEVICES'
               OUTPT 'NUMBER OF ONLINE ALLOCATED OTHER DEVICES'
         FI
         PM    DNASCB
         PM    DNUCB
         PEXIT
         TITLE 'DNASCB - DISPLAY NUMBER OF ASCBS, READY TCBS'
DNASCB   PENTRY
         MVC   DNFRTCB,=F'0'
         ZAP   DNPASCB,=P'0'
         ZAP   DNPJOB,=P'0'
         ZAP   DNPTSO,=P'0'
         ZAP   DNPSTC,=P'0'
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    AP   DNPASCB,=P'1'
                    L    R0,DNFRTCB
                    A    R0,ASCBTCBS(R5)
                    ST   R0,DNFRTCB
                    IF   (ICM,R1,15,ASCBJBNI(R5),NZ)
                         AP   DNPJOB,=P'1'
                    ELSEIF (ICM,R1,15,ASCBTSB(R5),NZ)
                         AP   DNPTSO,=P'1'
                    ELSE
                         AP   DNPSTC,=P'1'
                    FI
               FI
               AAI  R3,4
         OD
         EDIT  TO=DNDASCB,FROM=DNPASCB,MASK=' Z99'
         L     R0,DNFRTCB
         CVD   R0,PWORK
         EDIT  TO=DNRTCB,FROM=PWORK+6,MASK=' Z99'
         EDIT  TO=DNJOB,FROM=DNPJOB,MASK=' Z99'
         EDIT  TO=DNTSO,FROM=DNPTSO,MASK=' Z99'
         EDIT  TO=DNSTC,FROM=DNPSTC,MASK=' Z99'
         LA    R0,DNLINE1
         PM    PUT
         PEXIT
         TITLE 'DNUCB  - DISPLAY NUMBER OF UCBS'
DNUCB    PENTRY
         MVC   DNDON,=C'ONLINE UCBS='                           \
         ZAP   DNPUCB,=P'0'
         ZAP   DNPDISK,=P'0'
         ZAP   DNPTAPE,=P'0'
         ZAP   DNPPORT,=P'0'
         ZAP   DNPUR,=P'0'
         ZAP   DNPOTHER,=P'0'
         ZAP   DNAUCB,=P'0'                                     \
         ZAP   DNADISK,=P'0'                                    \
         ZAP   DNATAPE,=P'0'                                    \
         ZAP   DNAPORT,=P'0'                                    \
         ZAP   DNAUR,=P'0'                                      \
         ZAP   DNAOTHER,=P'0'                                   \
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
*WANT ONLINE        IF   (TM,UCBSTAT(R3),X'88',O)
                    IF   (TM,UCBSTAT(R3),X'80',O)               \
                         PM   DNUCB1
                    FI
               FI
               AAI  R2,2
         OD
         EDIT  TO=DNDUCB,FROM=DNPUCB,MASK=' Z99'
         EDIT  TO=DNDISK,FROM=DNPDISK,MASK=' Z99'
         EDIT  TO=DNTAPE,FROM=DNPTAPE,MASK=' Z99'
         EDIT  TO=DNPORT,FROM=DNPPORT,MASK=' Z99'
         EDIT  TO=DNUR,FROM=DNPUR,MASK=' Z99'
         EDIT  TO=DNOTHER,FROM=DNPOTHER,MASK=' Z99'
         LA    R0,DNLINE2
         PM    PUT
         MVC   DNDON,=C'  ALLOCATED='                           \
         EDIT  TO=DNDUCB,FROM=DNAUCB,MASK=' Z99'                \
         EDIT  TO=DNDISK,FROM=DNADISK,MASK=' Z99'               \
         EDIT  TO=DNTAPE,FROM=DNATAPE,MASK=' Z99'               \
         EDIT  TO=DNPORT,FROM=DNAPORT,MASK=' Z99'               \
         EDIT  TO=DNUR,FROM=DNAUR,MASK=' Z99'                   \
         EDIT  TO=DNOTHER,FROM=DNAOTHER,MASK=' Z99'             \
         LA    R0,DNLINE2                                       \
         PM    PUT                                              \
         PEXIT
         TITLE 'DNUCB1 - PROCESS ONLINE UCBS'
DNUCB1   PENTRY
         AP    DNPUCB,=P'1'
               IF (TM,UCBSTAT(R3),X'08',O)                      \
                 AP  DNAUCB,=P'1'                               \
                 FI                                             \
         IF    (TM,UCBTYP+2(R3),X'40',O)
               AP   DNPPORT,=P'1'
               IF (TM,UCBSTAT(R3),X'08',O)                      \
                 AP  DNAPORT,=P'1'                              \
                 FI                                             \
         ELSEIF (TM,UCBTYP+2(R3),X'20',O)
               AP   DNPDISK,=P'1'
               IF (TM,UCBSTAT(R3),X'08',O)                      \
                 AP  DNADISK,=P'1'                              \
                 FI                                             \
         ELSEIF (TM,UCBTYP+2(R3),X'80',O)
               AP   DNPTAPE,=P'1'
               IF (TM,UCBSTAT(R3),X'08',O)                      \
                 AP  DNATAPE,=P'1'                              \
                 FI                                             \
         ELSEIF (TM,UCBTYP+2(R3),X'08',O)
               AP   DNPUR,=P'1'
               IF (TM,UCBSTAT(R3),X'08',O)                      \
                 AP  DNAUR,=P'1'                                \
                 FI                                             \
         ELSE
               AP   DNPOTHER,=P'1'
               IF (TM,UCBSTAT(R3),X'08',O)                      \
                 AP  DNAOTHER,=P'1'                             \
                 FI                                             \
         FI
         PEXIT
         TITLE 'DP - DISPLAY SYSTEM PAGING'
DP       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DP - DISPLAY SYSTEM PAGING STATUS'
               OUTPT ' '
               OUTPT 'DEMAND PAGING RATE PER SECOND'
               OUTPT ' '
               OUTPT 'VIRTUAL IO PAGING RATE PER SECOND'
               OUTPT ' '
               OUTPT 'SWAP PAGING RATE PER SECOND'
               PEXIT
         FI
         PM    INTERVAL
         PM    DP2
         PEXIT
         TITLE 'DP1 - SAVE INTERVAL PAGING DATA AND XCOM DATA'
DP1      PENTRY
         L     R2,16
         L     R3,CVTPVTP(R2)
         L    R0,PVTNPI(R3)
         A    R0,PVTNPOUT(R3)
         LR   R1,R0
         S    R1,DPSPAGE
         STM  R0,R1,DPSPAGE
         L    R0,PVTVAMI(R3)
         A    R0,PVTVAMO(R3)
         LR   R1,R0
         S    R1,DPSVIO
         STM  R0,R1,DPSVIO
         L    R0,PVTSPIN(R3)
         A    R0,PVTSPOUT(R3)
         LR   R1,R0
         S    R1,DPSSWAP
         STM  R0,R1,DPSSWAP
              PEXIT                  , NO XCOM AT FCI
         L    R2,16
         L    R2,CVTUSER(R2)
         IF   (LTR,R2,R2,Z)
              PEXIT
         FI
         L    R2,UCVTXCVT(R2)
         IF   (LTR,R2,R2,Z)
              PEXIT
         FI
         L    R0,VTRTOT(R2)
         LR   R1,R0
         S    R1,XCOMRATE
         STM  R0,R1,XCOMRATE
         PEXIT
         TITLE 'DP2 - PRINT PAGING INFO FOR INTERVAL'
DP2      PENTRY
         L    R1,DPSPAGE+4
         MH   R1,=H'100'
         ZR   R0
         D    R0,INTBIN
         CVD  R1,PWORK
         EDIT TO=DPDPAGE,FROM=PWORK+6,MASK=' Z99'
         L    R1,DPSVIO+4
         MH   R1,=H'100'
         ZR   R0
         D    R0,INTBIN
         CVD  R1,PWORK
         EDIT TO=DPDVIO,FROM=PWORK+6,MASK=' Z99'
         L    R1,DPSSWAP+4
         MH   R1,=H'100'
         ZR   R0
         D    R0,INTBIN
         CVD  R1,PWORK
         EDIT TO=DPDSWAP,FROM=PWORK+6,MASK=' Z99'
         L    R1,XCOMRATE+4
         MH   R1,=H'100'
         ZR   R0
         D    R0,INTBIN
         CVD  R1,PWORK
         EDIT TO=DPDXCOM,FROM=PWORK+6,MASK=' Z99'
         LA   R0,DPLINE
         PM   PUT
         PEXIT
         TITLE 'DQ - DISPLAY JOBS AND USERS WAITING FOR ENQ'
DQ       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DQ - DISPLAY ENQUED RESOURCE AND OWNER/REQUESTOR'
               OUTPT ' '
               OUTPT 'JOBNAME OF REQUESTOR'
               OUTPT 'JOBNAME OF OWNER'
               OUTPT 'TYPE OF REQUEST'
               OUTPT 'MAJOR RESOURCE NAME'
               OUTPT 'MINOR RESOURCE NAME'
               OUTPT ' '
               OUTPT 'DQ,ALL WILL LIST ALL OWNERS'
               OUTPT 'DQ,SYS WILL LIST ALL OWNERS EXCEPT FILES + USERS'
               OUTPT 'DQ,X   WILL LIST ALL OWNERS WITH X'
               OUTPT 'DQ,X,Y WILL LIST ALL RESOURCES WHICH MATCH X,Y'
               OUTPT ' '
               OUTPT ' X - UP TO 8 CHARACTER MAJOR RESOURCE NAME'
               OUTPT ' Y - UP TO 44 CHARACTER MINOR RESOURCE NAME'
               PEXIT
         FI
         PM    DQPARM
         L     R2,16
         L     R2,CVTFQCB(R2)     FIRST MAJOR QCB
         USING QCBMAJ,R2
         DODO  WHILE,(LTR,R2,R2,NZ)
               L    R3,QMJMINOR
               USING QCBMIN,R3
               DODO WHILE,(LTR,R3,R3,NZ)
                    L    R4,QMNQEL
                    USING QEL,R4
                    MVC  DQ2OWNER,=CL5'OWNER'
                    IF   (CLI,DQMODE,DQWAIT,NE)
                         PM   DQCHK
                         IF   (LTR,R15,R15,Z)
                              PM   DQ2
                         FI
                    FI
                    MVC  DQ2OWNER,=CL5'REQ.'
                    LR   R5,R4     SAVE QEL OF OWNER
                    IF   (TM,QELQFLGS,QELSHAR,O)
                         MVI  TYPE,SHARE
                    ELSE
                         MVI  TYPE,EXCLUDE
                    FI
                    L    R4,QELNQEL
                    ZHB  R4
                    DODO WHILE,(LTR,R4,R4,NZ)
                         IF   (CLI,DQMODE,DQWAIT,NE)
                              PM   DQCHK
                              IF   (LTR,R15,R15,Z)
                                   PM   DQ2
                              FI
                         FI
                         IF   (TM,QELQFLGS,QELSHAR,Z)
                              MVI  TYPE,EXCLUDE
                         FI
                         IF   (CLI,TYPE,EXCLUDE,EQ),                   X
               AND,(CLI,DQMODE,DQWAIT,EQ)
                              PM   DQ1
                         FI
                         L    R4,QELNQEL
                         ZHB  R4
                    OD
                    L    R3,QMNNEXT
               OD
               L    R2,QMJNEXT
         OD
         PEXIT
         TITLE 'DQ1 - DISPLAY INFO FOR WAITING ASID'
DQ1      PENTRY
*              R2   QCBMAJ
*              R3   QCBMIN
*              R4   QEL FOR WAITING TASK
*              R5   QEL FOR OWNER TASK
*
         LH    R1,QELASID-QEL(R4)
         PM    GETJOB
         MVC   DQ1WJOB,JOBNAME
         LH    R1,QELASID-QEL(R5)
         PM    GETJOB
         MVC   DQ1OJOB,JOBNAME
         MVC   DQ1QNAME,QMJNAME
         ZR    R1
         IC    R1,QMNLNM
         LA    R15,L'DQ1RNAME
         LA    R14,DQ1RNAME
         LA    R0,QMNNAME
         ICM   R1,8,=C' '
         MVCL  R14,R0
         LA    R0,DQLINE1
         PM    PUT
         PEXIT
         TITLE 'DQ2 - DISPLAY INFO FOR REQUESTED QCBS'
DQ2      PENTRY
*              R2   QCBMAJ
*              R3   QCBMIN
*              R4   QEL
*
         LH    R1,QELASID-QEL(R4)
         PM    GETJOB
         MVC   DQ2JOB,JOBNAME
         MVC   DQ2QNAME,QMJNAME
         ZR    R1
         IC    R1,QMNLNM
         LA    R15,L'DQ2RNAME
         LA    R14,DQ2RNAME
         LA    R0,QMNNAME
         ICM   R1,8,=C' '
         MVCL  R14,R0
         IF    (TM,QELQFLGS,QELSHAR,O)
               MVC  DQ2TYPE,=CL9'SHARED'
         ELSE
               MVC  DQ2TYPE,=CL9'EXCLUSIVE'
         FI
         LA    R0,DQLINE2
         PM    PUT
         PEXIT
         TITLE 'DQPARM - PROCESS DQ PARMS AND SET MODE'
DQPARM   PENTRY
         IF    (CLI,LINE+2,C' ',EQ)           DQ     - LIST ENQ WAITS
               MVI  DQMODE,DQWAIT
               PEXIT
         ELSEIF (CLC,LINE+2(5),=C',ALL ',EQ)  DQ,SYS - LIST ALL
               MVI  DQMODE,DQALL
               PEXIT
         ELSEIF (CLC,LINE+2(5),=C',SYS ',EQ)  DQ,SYS - LIST NON-DSN
               MVI  DQMODE,DQSYS
               PEXIT
         ELSE
               MVI  DQMODE,DQXY               DQ,X,Y - LIST MATCHING
         FI
         LA    R1,LINE+3
         LA    R0,L'DQMAJ(R1)
         LA    R14,DQMAJ
         ZR    R15
         DODO  WHILE,(CLR,R1,R0,L),                                    X
               AND,(CLI,0(R1),C' ',NE),AND,(CLI,0(R1),C',',NE)
               MVC  0(1,R14),0(R1)
               AAI  R1,1
               AAI  R14,1
               AAI  R15,1
         OD
         LA    R14,DQMAJ
         STM   R14,R15,DQMAJCL
         IF    (CLI,0(R1),C',',NE)
               ZR   R14
               ZR   R15
               STM  R14,R15,DQMINCL
               PEXIT
         FI
         AAI   R1,1
         LA    R0,L'DQMIN(R1)
         LA    R14,DQMIN
         ZR    R15
         DODO  WHILE,(CLR,R1,R0,L),                                    X
               AND,(CLI,0(R1),C' ',NE),AND,(CLI,0(R1),C',',NE)
               MVC  0(1,R14),0(R1)
               AAI  R1,1
               AAI  R14,1
               AAI  R15,1
         OD
         LA    R14,DQMIN
         STM   R14,R15,DQMINCL
         PEXIT
         TITLE 'DQCHK  - CHECK FOR MATCHING QCB'
DQCHK    PENTRY
         IF     (CLI,DQMODE,DQALL,EQ)                 DQ,ALL
                ZR   R15
         ELSEIF (CLI,DQMODE,DQSYS,EQ)                 DQ,SYS
                IF   (CLC,QMJNAME(6),=CL6'SYSDSN',NE),                 X
               AND,(CLC,QMJNAME(7),=CL7'SYSVSAM',NE),                  X
               AND,(CLC,QMJNAME(8),=CL8'SYSIKJUA',NE)
                     ZR   R15
                ELSE
                     LA   R15,1
                FI
         ELSE
               LM   R0,R1,DQMAJCL                     DQ,X,Y
               LA   R14,QMJNAME
               LA   R15,L'QMJNAME
               IF   (CLR,R1,R15,LT)
                    LR   R15,R1
               ELSE
                    LR   R1,R15
               FI
               IF   (CLCL,R0,R14,EQ)     CLCL MAJOR NAME
                    LM   R0,R1,DQMINCL
                    LA   R14,QMNNAME
                    ZR   R15
                    IC   R15,QMNLNM
                    IF   (CLR,R1,R15,LT)
                         LR   R15,R1
                    ELSE
                         LR   R1,R15
                    FI
                    IF   (CLCL,R0,R14,EQ)   CLCL MINOR NAME
                         ZR   R15
                    ELSE
                         LA   R15,1
                    FI
               ELSE
                    LA   R15,1
               FI
         FI
         PEXIT
         TITLE 'GET JOB NAME FROM ASCB'
GETJOB   PENTRY
         SLL   R1,2
         L     R15,16
         L     R15,CVTASCVT(R15)
         L     R1,ASVTENTY-4(R15,R1)
         IF    (LTR,R1,R1,P)
               IF    (ICM,R15,15,ASCBJBNI(R1),Z)
                     L    R15,ASCBJBNS(R1)
               FI
         ELSE
               LA    R15,=CL8' '
         FI
         MVC   JOBNAME,0(R15)
         PEXIT
         TITLE 'DR - DISPLAY OUTSTANDING OPERATOR REPLIES'
DR       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DR - DISPLAY NUMBER OF OUTSTANDING REPLIES'
               PEXIT
         FI
         L     R2,16          CVT
         L     R2,CVTCUCB(R2) UCM
         LH    R0,UCMRQNR(R2) # REPLIES OUTSTANDING
         CVD   R0,PWORK
         EDIT  TO=DRWTORS,FROM=PWORK+6,MASK=' Z99'
         LA    R0,DRLINE
         PM    PUT
         PEXIT
         TITLE 'DS - DISPLAY SYSTEM TASKS ONLY'
DS       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DS - DISPLAY ACTIVE SYSTEM TASKS'
               PM   DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBTSB(R5),Z),                    X
               AND,(ICM,R1,15,ASCBJBNI(R5),Z)
                         PM   DS1
                         IF  (CLC,DAJOB,=CL8'INIT',NE)             FCI*
                            LA   R0,DALINE3
                            PM   PUT
                         FI                                        FCI*
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DS1 - PROCESS ONE ASCB ENTRY FOR DS'
DS1      PENTRY
         L     R1,ASCBJBNS(R5)
         MVC   DAJOB,0(R1)
         MVI   DAPSTEP,C' '                                        FCI*
         MVC   DASTEP,=CL8' '                                      FCI*
         ICM   R1,B'1111',56(R5)    GET TOP CSCB POINTER           FCI*
         IF    (LTR,R1,R1,NZ)                                      FCI*
               IF  (CLI,4(R1),X'04',EQ),OR,(CLI,4(R1),X'0C',EQ)    FCI*
                   MVC   DASTEP,8(R1)                              FCI*
               ELSE ,                                              FCI*
                   MVC   DASTEP,16(R1)                             FCI*
               FI                                                  FCI*
         FI                                                        FCI*
         PM    DA1
         MVC   DATXEQ,=CL6' '
         PEXIT
         TITLE 'DT - DISPLAY TAPES'
DT       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DT - DISPLAY ONLINE ALLOCATED TAPE STATUS'
               OUTPT ' '
               OUTPT 'DEVICE ADDRESS'
               OUTPT 'VOLUME NAME'
               OUTPT 'JOBNAME'
               OUTPT 'CURRENT SIO COUNT'
               OUTPT 'TEMPORARY READ, WRITE, NOISE, ERG COUNT'
               OUTPT 'PERMANENT READ AND WRITE COUNT'
               PEXIT
         FI
         MVC   UCB$CNT,=H'0'         INITIALIZE CKUNIQUE           FCI*
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    IF   (TM,UCBSTAT(R3),X'88',O),                     X
               AND,(CLI,UCBTYP+2(R3),X'80',EQ)
                                   PM   DT1
                    FI
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'DT1 PRINT ONE TAPE'
DT1      PENTRY
         PM    CKUNIQUE         SEE IF                             FCI*
         IF    (LTR,R0,R0,NZ)      WE HAVE SEEN THIS ONE BEFORE \
            PEXIT                                                  FCI*
         FI                                                        FCI*
         MVC   DTUCB,UCBNAME(R3)
         MVC   DTVOL,UCBVOLI(R3)
         LA    R1,DTVOL
         PM    CHKVOL
         L     R4,UCBEXTPT(R3)
         LH    R1,UCBASID(R4)
         PM    GETJOB
         MVC   DTJOB,JOBNAME
         L     R4,UCBXTN(R3)
         ZR    R0
         ICM   R0,3,UCBSIO(R4)
         CVD   R0,PWORK
         EDIT  TO=DTSIO,FROM=PWORK+5,MASK=' ZZ,Z99'
         ZR    R0
         ZR    R1
         IC    R1,UCBTREAD(R4)
         AR    R0,R1
         IC    R1,UCBTWRIT(R4)
         AR    R0,R1
         IC    R1,UCBNOISE(R4)
         AR    R0,R1
         AH    R0,UCBERG(R4)
         CVD   R0,PWORK
         EDIT  TO=DTTERR,FROM=PWORK+6,MASK=' Z99'
         IC    R1,UCBPREAD(R4)
         LR    R0,R1
         IC    R1,UCBPWRIT(R4)
         AR    R0,R1
         CVD   R0,PWORK
         EDIT  TO=DTPERR,FROM=PWORK+6,MASK=' Z99'
         IF    (TM,UCBFLA(R3),X'40',O)
               MVC  DTMSG,=CL25'INTERVENTION REQUIRED'
         ELSE
               MVC  DTMSG,=CL25' '
         FI
         LA    R0,DTLINE
         PM    PUT
         PEXIT
         TITLE 'DU - DISPLAY TSO USERS ONLY'
DU       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DU - DISPLAY ACTIVE TSO USERS'
               PM   DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBTSB(R5),NZ)
                         PM   DU1
                         LA   R0,DALINE3
                         PM   PUT
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DU1 - PROCESS ONE ASCB ENTRY FOR DU'
DU1      PENTRY
         L     R1,ASCBJBNS(R5)
         MVI   DAPSTEP,C' '                                        FCI*
         MVC   DASTEP,8(R1)                                        FCI*
         MVC   DAJOB,0(R1)                                         FCI*
         PM    DA1
         PEXIT
         TITLE 'DV - DISPLAY VIRTUAL AND REAL STORAGE STATUS'
DV       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DV - DISPLAY VIRTUAL AND REAL STORAGE ALLOCATION'
               OUTPT ' '
               OUTPT 'VIRTUAL - 16 MILLION BYTE ADDRESS SPACE ALLOC.'
               OUTPT 'REAL    - CURRENT REAL STORAGE ALLOCATION'
               OUTPT 'FIXED   - CURRENT FIXED REAL STORAGE ALLOCATION'
               OUTPT ' '
               OUTPT 'NUC - NUCLEUS (MVS OPERATING SYSTEM)'
               OUTPT 'PVT - PRIVATE ADDRESS SPACES'
               OUTPT 'CSA - COMMON STORAGE AREA'
               OUTPT 'LPA - COMMON LINK PACK AREA FOR PROGRAMS'
               OUTPT 'SQA - SYSTEM QUEUE AREA'
               PEXIT
         FI
         PM    DV1
         PM    DV3
         PEXIT
         TITLE 'DV1 - COLLECT DATA FROM PAGE FRAME TABLE'
DV1      PENTRY
         XC    DVDATA(LDVDATA),DVDATA
         L     R2,16                         R2=CVT
         L     R3,CVTPVTP(R2)                R3=PVT
         L     R0,CVTSHRVM(R2)
         SRL   R0,12
         SLL   R0,4
         STH   R0,DVSCSA                     VBN FOR START OF CSA
         L     R0,CVTLPDIA(R2)
         SLL   R0,8
         SRL   R0,20
         SLL   R0,4
         STH   R0,DVSLPA                     VBN FOR START OF LPA
         L     R4,CVTGDA(R2)
         L     R4,GDASQASP(R4)
         L     R4,SPDQEPTR(R4)
         L     R0,DQEBLKAD(R4)
         SRL   R0,12
         SLL   R0,4
         STH   R0,DVSSQA                     VBN FOR START OF SQA
         L     R4,PVTPFTP(R3)
         LR    R5,R4
         AH    R4,PVTFPFN(R3)                R4=FIRST PFTE
         AH    R5,PVTLPFN(R3)                R5=LAST  PFTE
         DODO  WHILE,(CLR,R4,R5,NH)
               PM   DV2
               AAI  R4,16
         OD
         PEXIT
         TITLE 'DV2 - PROCESS ONE PAGE FRAME TABLE ENTRY'
DV2      PENTRY
         IHW  DVBREAL
         IF   (TM,PFTFLAG1(R4),PFTBADPG,O)
              IHW  DVBBAD
              IHW  DVBFIXED
              PEXIT
         FI
         IF   (TM,PFTFLAG2(R4),PFTOFFLN,O)
              IHW  DVBOFF
              IHW  DVBFIXED
              PEXIT
         FI
         IF   (TM,PFTFLAG2(R4),PFTIRRG,O)
              IHW  DVBVIO
              PEXIT
         FI
         IF   (TM,PFTFLAG1(R4),PFTONAVQ,O)
              IHW  DVBFREE
              PEXIT
         FI
         IHW  DVBALLOC
         IF   (TM,PFTFLAG1(R4),PFTLNGFX+PFTLSQA+PFTVRALC,NZ)
              IHW  DVBFIXED
         FI
         IF   (TM,PFTFLAG1(R4),PFTVRALC,O)
              IHW  DVBVR
         FI
         IF (CLC,PFTVBN(2,R4),DVSCSA,L)
               IHW  DVHRPVT
               IF   (TM,PFTFLAG1(R4),PFTLNGFX+PFTLSQA+PFTVRALC,NZ)
                    IHW  DVHFPVT
               FI
         ELSEIF (CLC,PFTVBN(2,R4),DVSLPA,L)
               IHW  DVHRCSA
               IF   (TM,PFTFLAG1(R4),PFTLNGFX,O)
                    IHW  DVHFCSA
               FI
         ELSEIF (CLC,PFTVBN(2,R4),DVSSQA,L)
               IHW  DVHRLPA
               IF   (TM,PFTFLAG1(R4),PFTLNGFX,O)
                    IHW  DVHFLPA
               FI
         ELSE
               IHW  DVHRSQA
               IHW  DVHFSQA
         FI
         PEXIT
         TITLE 'DV3 - DISPLAY VIRTUAL AND REAL STORAGE INFO'
DV3      PENTRY
*
*        VIRTUAL STORAGE
*
         L     R2,16                    R2=CVT
         L     R3,CVTPVTP(R2)           R3=PVT
         L     R0,CVTNUCB(R2)
         EM    DVVNUC
         L     R0,CVTSHRVM(R2)
         S     R0,CVTNUCB(R2)
         EM    DVVPVT
         L     R1,CVTLPDIA(R2)
         LA    R0,0(R1)
         S     R0,CVTSHRVM(R2)
         EM    DVVCSA
         L     R1,CVTLPDIA(R2)
         ZHB   R1
         L     R4,CVTGDA(R2)
         L     R4,GDASQASP(R4)
         L     R4,SPDQEPTR(R4)
         L     R0,DQEBLKAD(R4)
         SR    R0,R1
         EM    DVVLPA
         L     R0,DQELNTH(R4)
         EM    DVVSQA
         LA    R0,DVLINE1
         PM    PUT
*
*        REAL STORAGE
*
         LH    R0,PVTFPFN(R3)
         SLL   R0,8
         EM    DVRNUC
         LH    R0,DVHRPVT
         EMF   DVRPVT
         LH    R0,DVHRCSA
         EMF   DVRCSA
         LH    R0,DVHRLPA
         EMF   DVRLPA
         LH    R0,DVHRSQA
         EMF   DVRSQA
         LA    R0,DVLINE2
         PM    PUT
*
*        FIXED STORAGE
*
         LH    R0,PVTFPFN(R3)
         SLL   R0,8
         EM    DVFNUC
         LH    R0,DVHFPVT
         EMF   DVFPVT
         LH    R0,DVHFCSA
         EMF   DVFCSA
         LH    R0,DVHFLPA
         EMF   DVFLPA
         LH    R0,DVHFSQA
         EMF   DVFSQA
         LA    R0,DVLINE3
         PM    PUT
*
*        TOTAL1
*
         LA    R0,16
         AH    R0,PVTLPFN(R3)
         SLL   R0,8
         EM    DVTREAL
         LH    R0,DVBFREE
         EMF   DVTFREE
         LH    R1,PVTFPFN(R3)
         SRL   R1,4                 R1=PAGES IN NUC (ALLOC AND FIXED)
         LH    R0,DVBALLOC
         AR    R0,R1
         EMF   DVTALLOC
         LH    R0,DVBFIXED
         AR    R0,R1
         EMF   DVTFIXED
         LH    R0,DVBVIO
         EMF   DVTVIO
         LH    R0,DVBBAD
         EMF   DVTBAD
         LA    R0,DVLINE4
         PM    PUT
*
*        TOTAL2
*
         LH    R0,DVBBAD
         EMF   DVTBAD
         LH    R0,DVBOFF
         EMF   DVTOFF
         LH    R0,DVBVIO
         EMF   DVTVIO
         LH    R0,DVBVR
         EMF   DVTVR
         LA    R0,DVLINE5
         PM    PUT
         PEXIT
         TITLE 'DW - DISPLAY WAITING JOBS AND TSO USERS'
DW       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DW - DISPLAY DEVICES WITH IO WAITING TO END'
               OUTPT ' '
               OUTPT 'DEVICE ADDRESS'
               OUTPT 'VOLUME NAME'
               PEXIT
         FI
         MVC   UCB$CNT,=H'0'         INITIALIZE CKUNIQUE           FCI*
         L     R2,16
         L     R2,CVTILK2(R2)
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R3,R3                                  \
                    ICM  R3,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    IF   (TM,UCBTYP+2(R3),X'FF'-X'80'-X'20',Z)
                         IF   (TM,UCBFLA(R3),X'02',NZ)
                              PM   DW1
                         FI
                    FI
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'DW1 - LIST TAPE OR DISK PENDING IO'
DW1      PENTRY
         PM    CKUNIQUE         SEE IF                             FCI*
         IF    (LTR,R0,R0,NZ)      WE HAVE SEEN THIS ONE BEFORE \
            PEXIT                                                  FCI*
         FI                                                        FCI*
         MVC   DWUCB,UCBNAME(R3)
         MVC   DWVOL,UCBVOLI(R3)
         LA    R0,DWLINE
         PM    PUT
         PEXIT
         TITLE 'DZ - DISPLAY INTERVAL TRACE TABLE'
DZ       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'DZ - DISPLAY TRACE TABLE'
               OUTPT ' '
               OUTPT 'SIO - START IO       CC-UCB,CAW,CSW,IOSB'
               OUTPT 'EXT - ENTERNAL INT.  PSW,R15,R0,R1'
               OUTPT 'SVC - MVS CALL       PSW,R15,R0,R1'
               OUTPT 'PGM - PROGRAM INT.   PSW,R15,R0,R1'
               OUTPT 'ISD - INIT.SRB DISP. NEWPSW,ASID,R0,R1'
               OUTPT 'I/O - IO INTERRUPT   PSW,CSW'
               OUTPT 'SSR - SRB REDISP.    NEWPSW,ASID,R0,R1'
               OUTPT 'DSP - TASK DISP.     NEWPSW,R15,R0,R1'
               OUTPT ' '
               OUTPT 'LAST 3 WORDS ARE CPUID-ASID, TCB, AND TIMER'
               OUTPT ' '
               OUTPT 'DZS - SUMARIZES TRACE TABLE TYPES AND LISTS'
               OUTPT '      SVC COUNTS BY TYPE'
               PEXIT
         FI
         L     R2,FLCTRACE
         IF    (LTR,R2,R2,Z)
               OUTPT 'NO TRACE TABLE IN SYSTEM'
               PEXIT
         FI
         PM    INTERVAL
         IF    (CLI,LINE+2,C'S',EQ)
               PM   DZS
               PEXIT
         FI
         LM    R2,R4,TTETAB
         LR    R5,R4
         DODO  UNTIL,(CLR,R4,R5,EQ)
               LH   R1,TTEASID(R4)
               PM   GETJOB
               MVC  DZJOB,JOBNAME
               ZR   R1
               IC   R1,TTETYP(R4)
               SRL  R1,4
               MH   R1,=H'3'
               LA   R1,TTENTAB(R1)
               MVC  DZTYP(3),0(R1)
               UNPK DZPSW(9),TTEPSW(5,R4)
               UNPK DZPSW+8(9),TTEPSW+4(5,R4)
               MVI  DZPSW+16,C' '
               TR   DZPSW,HEX-240
               UNPK DZCSW(9),TTECSW(5,R4)
               UNPK DZCSW+8(9),TTECSW+4(5,R4)
               MVI  DZCSW+16,C' '
               TR   DZCSW,HEX-240
               UNPK DZREGS(9),TTEREGS(5,R4)
               UNPK DZREGS+8(9),TTEREGS+4(5,R4)
               MVI  DZREGS+16,C' '
               TR   DZREGS,HEX-240
               UNPK DZTCBTM(9),TTETCBTM(5,R4)
               MVC  PWORK(4),TTETCBTM+4(R4) MVC TO PREVENT 0C4 ON B5
               UNPK DZTCBTM+8(9),PWORK(5)
               MVI  DZTCBTM+16,C' '
               TR   DZTCBTM,HEX-240
               LA   R0,DZLINE
               PM   PUT
               LA   R4,LTTE(R4)
               IF   (CLR,R4,R3,NL)
                    LR   R4,R2
               FI
         OD
         PEXIT
         TITLE 'DZS - SUMMARIZE TRACE TABLE'
DZS      PENTRY
         LA    R0,DZSLINE1
         PM    PUT
         XC    TTEETAB,TTEETAB  CLEAR EXCEPTION TABLE
         XC    TTECTAB,TTECTAB  CLEAR TOTAL     TABLE
         LM    R2,R3,TTETAB
         L     R5,SVCTAB
         IF    (LTR,R5,R5,Z)
               LA   R0,256*4
               GETMAIN R,LV=(0)
               LR   R5,R1
               ST   R1,SVCTAB
         FI
         LR    R0,R5
         LA    R1,256*4
         ZR    R14
         ZR    R15
         MVCL  R0,R14
         DODO  WHILE,(CLR,R2,R3,L)
               ZR   R1
               IC   R1,TTETYP(R2)
               SRL  R1,4
               LR   R4,R1
               SLL  R4,2
               L    R15,TTECTAB(R4)
               AAI  R15,1
               ST   R15,TTECTAB(R4)
               DOCASE (R1)
                 CASE 0 SIO
                   IF   (CLI,TTESIOCC(R2),0,NE)
                        L    R15,TTEETAB(R4)
                        AAI  R15,1
                        ST   R15,TTEETAB(R4)
                   FI
                 ESAC
                 CASE 2 SVC
                   ZR   R15
                   IC   R15,TTEPSW+3(R2)
                   SLL  R15,2
                   LA   R15,0(R15,R5)
                   L    R14,0(R15)
                   AAI  R14,1
                   ST   R14,0(R15)
                   IF   (CLI,TTEPSW+3(R2),13,EQ),                      X
               OR,(CLI,TTEPSW+3(R2),15,EQ)
                        L    R15,TTEETAB(R4)
                        AAI  R15,1
                        ST   R15,TTEETAB(R4)
                   FI
                 ESAC
                 CASE 3 PGM
                   IF   (CLI,TTEPSW+3(R2),17,NE)
                        L    R15,TTEETAB(R4)
                        AAI  R15,1
                        L    R15,TTEETAB(R4)
                   FI
                 ESAC
                 CASE 5 I/O
                   IF   (TM,TTEIOUS(R2),X'03',NZ),                     X
               OR,(TM,TTEIOCS(R2),X'3F',NZ)
                        L    R15,TTEETAB(R4)
                        AAI  R15,1
                        L    R15,TTEETAB(R4)
                   FI
                 ESAC
               ESACOD
               LA   R2,LTTE(R2)
         OD
         LA    R2,TTENTAB
         LA    R3,TTECTAB
         LA    R4,TTEETAB
         LA    R5,TTENTAB+L'TTENTAB
         DODO  WHILE,(CLR,R2,R5,L)
               L    R0,0(R3)
               IF   (LTR,R0,R0,NZ)
                    MVC  DZSTYP,0(R2)
                    CVD  R0,PWORK
                    EDIT TO=DZSTOT,FROM=PWORK+5,MASK=' ZZZ99'
                    L    R0,0(R4)
                    CVD  R0,PWORK
                    EDIT TO=DZSERR,FROM=PWORK+5,MASK=' ZZZ99'
                    LA   R0,DZSLINE2
                    PM   PUT
               FI
               AAI  R2,3
               AAI  R3,4
               AAI  R4,4
         OD
         L     R5,SVCTAB
         LA    R6,256*4(R5)
         ZAP   PSVCNO,=P'0'
         LA    R0,BLANK
         PM    PUT
         LA    R0,DZSLINE3
         PM    PUT
         DODO  WHILE,(CLR,R5,R6,L)
               L    R1,0(R5)
               IF   (LTR,R1,R1,NZ)
                    CVD   R1,PWORK
                    EDIT  TO=DSVCTOT,FROM=PWORK+6,MASK=' Z99'
                    EDIT  TO=DSVCNO,FROM=PSVCNO,MASK=' Z99'
                    LA    R0,DZSLINE4
                    PM    PUT
               FI
               AP   PSVCNO,=P'1'
               AAI  R5,4
         OD
         PEXIT
         TITLE 'MEMORY - DISPLAY MEMORY USAGE BY COMPONENT'
MEMORY   PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'M - SUMMARIZE TOTAL REAL MEMORY USAGE BY DOMAIN'
               OUTPT ' '
               OUTPT 'FCI DOMAINS ARE AS FOLLOWS'
               OUTPT ' '
               LA   R2,DOM$NAME         PRINT DOMAIN NAME TABS     FCI*
               DODO WHILE,(CLC,0(R2,2),=X'FFFF',NE)                FCI*
                  MVC  DMNMSG$,2(R2)   MOVE IN DOMAIN NAME         FCI*
                  LH   R0,0(R2)        PICK UP DOMAIN NUMBER       FCI*
                  CVD  R0,PWORK                                    FCI*
                  EDIT TO=DMNMSG#,FROM=PWORK+6,MASK=' Z99'         FCI*
                  LA   R0,DMNMSG                                   FCI*
                  PM   PUT                                         FCI*
                  LA   R2,$DOMNLEN(R2)                             FCI*
               OD                                                  FCI*
               PEXIT
         FI
         PM    M1
         PM    M3
         PEXIT
         TITLE 'M1 - COLLECT REAL MEMORY BY DOMAIN'
M1       PENTRY
         L     R2,16
         L     R3,CVTPVTP(R2)
         L     R4,PVTPFTP(R3)
         LR    R5,R4
         AH    R4,PVTFPFN(R3)
         AH    R5,PVTLPFN(R3)
         XC    DOMAINK,DOMAINK
         LH    R7,PVTFPFN(R3)
         SRL   R7,4
         STH   R7,DOMAINK         D(0)=SYSTEM
         L     R6,CVTASCVT(R2)
         DODO  WHILE,(CLR,R4,R5,NH)
               PM   M2
               AH   R4,=AL2(LPFTE)
         OD
         PEXIT
         TITLE 'M2 - ASSIGN REAL PAGE FRAME TO DOMAIN'
M2       PENTRY
         LH    R1,PFTASID(R4)
         IF    (LTR,R1,R1,Z)
               LA   R1,DOMAINK
         ELSE
               SLL  R1,2
               L    R1,ASVTENTY-4(R1,R6)
               IF   (LTR,R1,R1,P)
                    L    R1,ASCBOUCB(R1)
                    ZR   R15
                    IC   R15,OUCBDMN(R1)
                    MH   R15,=AL2(LDOMKE)
                    LA   R1,DOMAINK(R15)
               ELSE
                    LA   R1,DOMAINK
               FI
         FI
         LH    R15,0(R1)
         AAI   R15,1      INCR DOMAIN PAGE COUNT
         STH   R15,0(R1)
         AAI   R7,1       INCR TOTAL  PAGE COUNT
         PEXIT
         TITLE 'M3 - PRINT REAL MEMORY BY DOMAIN'
M3       PENTRY
         MVC   DOMDESC,=CL6'DOMAIN'
         SLL   R7,2                  CONVERT TOTAL PAGES TO K
         LA    R2,DOMAINK
         LA    R3,DOMAINK+L'DOMAINK
         ZR    R4
         DODO  WHILE,(CLR,R2,R3,L)
               LH   R1,0(R2)
               IF   (LTR,R1,R1,NZ)
                    SLL  R1,2
                    CVD  R1,PWORK
                    EDIT TO=DOMK,FROM=PWORK+5,MASK=' ZZZ99'
                    MH   R1,=H'100'
                    ZR   R0
                    DR   R0,R7
                    CVD  R1,PWORK
                    EDIT TO=DOMPCT,FROM=PWORK+6,MASK=' Z99'
                    CVD  R4,PWORK
                    EDIT TO=DOMN,FROM=PWORK+6,MASK=' Z99'
                    LA   R15,DOM$NAME         ADDRESS OF DOMAIN NAMES *
                    MVC  DOMN$,=CL12' '                            FCI*
                    DODO WHILE,(CLC,0(R15,2),=X'FFFF',NE),         FCI*X
               AND,(CLC,DOMN$,=CL12' ',EQ)                         FCI*
                       IF (CH,R4,0(R15),EQ)                        FCI*
                          MVC  DOMN$,2(R15)                        FCI*
                       ELSE  ,                                     FCI*
                          LA   R15,$DOMNLEN(R15)                   FCI*
                       FI                                          FCI*
                    OD                                             FCI*
                    IF  (CLC,DOMN$,=CL12' ',EQ)                    FCI*
                       MVC   DOMN$,=CL12' *UNKNOWN*'               FCI*
                    FI                                             FCI*
                    LA   R0,DOMLINE
                    PM   PUT
               FI
               AH   R2,=AL2(LDOMKE)
               AAI  R4,1
         OD
         MVC   DOMN,=CL4' '
         MVC   DOMN$,=CL12' '                                      FCI*
         MVC   DOMDESC,=CL6' TOTAL'
         CVD   R7,PWORK
         EDIT  TO=DOMK,FROM=PWORK+5,MASK=' ZZZ99'
         MVC   DOMPCT,=CL4' 100'
         LA    R0,DOMLINE
         PM    PUT
         PEXIT
         TITLE 'PDSNINFO - DISPLAY PAGE DATA SET INFO.'
PDSNINFO PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'P - SUMMARIZE PAGING DATA SET USAGE'
               OUTPT ' '
               OUTPT 'SLOT - AREA FOR ONE 4K PAGE ON DISK'
               OUTPT ' '
               OUTPT 'VIO     - VIRTUAL IO SLOTS'
               OUTPT 'NON-VIO - VIRTUAL STORAGE SLOTS'
               OUTPT 'UNUSED  - NO REAL PAGE DATA IN SLOT'
               OUTPT 'UNRESV  - SLOT NOT RESERVED FOR POSSIBLE USE'
               OUTPT 'SWAP-SET- NUMBER OF SLOTS IN ONE SWAP BLOCK'
               OUTPT ' '
               OUTPT 'TYPE  - TYPE OF PAGES SWAPPED TO THIS DATASET'
               OUTPT 'AVAIL - SLOTS AVAILABLE FOR USE'
               OUTPT 'WEIGHT- SRM WEIGHT ASSIGNED TO BAL. IO LOAD'
               OUTPT 'ERRORS- SLOTS FLAGGED AS BAD DUE TO ERRORS'
               PEXIT
         FI
         LA    R0,PDHEAD1
         PM    PUT
         PM    PDTOTAL
         LA    R0,PDHEAD2
         PM    PUT
         PM    PDPAGE
         PM    PDSWAP
         PEXIT
         TITLE 'PDTOTAL - TOTALS ON ALL PAGE DATA SETS'
PDTOTAL  PENTRY
         L     R2,16
         L     R2,CVTASMVT(R2)
         L     R0,ASMSLOTS(R2)
         LR    R3,R0
         CVD   R0,PWORK
         EDIT  TO=PDSLOTS,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'   SLOTS
         L     R0,ASMVSC(R2)
         SR    R3,R0
         CVD   R0,PWORK
         EDIT  TO=PDVSC,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'  ALLOC VIO
         L     R0,ASMNVSC(R2)
         SR    R3,R0
         CVD   R0,PWORK
         EDIT  TO=PDNVSC,FROM=PWORK+4,MASK=' Z,ZZZ,Z99' ALLOC NON-VIO
         S     R3,ASMBKSLT(R2)
         CVD   R3,PWORK
         EDIT  TO=PDUNUSED,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'  UNUSED
         L     R0,ASMBKSLT(R2)
         CVD   R0,PWORK
         EDIT  TO=PDUNRESV,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'  UNRESERVED
         L     R1,ASMSART(R2)
         L     R0,SARSETSZ(R1)
         CVD   R0,PWORK
         EDIT  TO=PDSETSZ,FROM=PWORK+4,MASK=' Z,ZZZ,Z99' SWAP SET SIZE
         LA    R0,PDTLINE
         PM    PUT
         PEXIT
         TITLE 'PDPAGE- DISPLAY PAGING DATA SET INFO'
PDPAGE   PENTRY
         L     R2,16
         L     R2,CVTASMVT(R2)
         L     R3,ASMPART(R2)
         L     R4,PARTDSNL(R3)
         LA    R5,PARTENTS(R3)
         L     R6,PARTSIZE(R3)
         DODO  WHILE,(LTR,R6,R6,NZ)
               PM   PDPARTE
               LA   R4,LDSN(R4)
               LA   R5,LPARTE(R5)
               SH   R6,=H'1'
         OD
         PEXIT
         TITLE 'PDPARTE- DISPLAY INFO FOR ONE PARTE'
PDPARTE  PENTRY
         IF    (CLI,PARETYPE(R5),X'20',EQ),OR,(CLI,0(R4),C' ',EQ)
               PEXIT
         FI
         MVC   PDDSN,0(R4)
         IF    (CLI,PARETYPE(R5),X'80',EQ)
               MVC  PDTYPE,=CL6'PLPA'
         ELSEIF (CLI,PARETYPE(R5),X'40',EQ)
               MVC  PDTYPE,=CL6'COMMON'
         ELSEIF (CLI,PARETYPE(R5),X'10',EQ)
               MVC  PDTYPE,=CL6'LOCAL'
         ELSE
               PEXIT
         FI
         L     R1,PAREUCBP(R5)
         MVC   PDVOL,UCBVOLI(R1)
         MVC   PDUCB,UCBNAME(R1)
         L     R0,PARESZSL(R5)
         CVD   R0,PWORK
         EDIT  TO=PDSIZE,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,PARESLTA(R5)
         CVD   R0,PWORK
         EDIT  TO=PDAVAIL,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,PARERQTM(R5)
         CVD   R0,PWORK
         EDIT  TO=PDWEIGHT,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,PARERRCT(R5)
         CVD   R0,PWORK
         EDIT  TO=PDERRORS,FROM=PWORK+5,MASK=' ZZ,Z99'
         IF    (TM,PAREFLG1(R5),X'40',O)
               MVI  PDERRORS,C'*'         DSN OUT OF USE
         FI
         LA    R0,PDPSLINE
         PM    PUT
         PEXIT
PDSWAP   PENTRY
         L     R2,16
         L     R2,CVTASMVT(R2)
         L     R3,ASMSART(R2)
         L     R4,SARDSNL(R3)
         LA    R5,SARENTS(R3)
         L     R6,SARSIZE(R3)
         DODO  WHILE,(LTR,R6,R6,NZ)
               PM   PDSARTE
               LA   R4,LDSN(R4)
               LA   R5,LSARTE(R5)
               SH   R6,=H'1'
         OD
         PEXIT
         TITLE 'PDSARTE- DISPLAY INFO FOR ONE SARTE'
PDSARTE  PENTRY
         IF    (CLI,0(R4),C' ',EQ)
               PEXIT
         FI
         MVC   PDDSN,0(R4)
         MVC   PDTYPE,=CL6'SWAP'
         L     R1,SREUCB(R5)
         MVC   PDVOL,UCBVOLI(R1)
         MVC   PDUCB,UCBNAME(R1)
         L     R0,SRETOTSL(R5)
         CVD   R0,PWORK
         EDIT  TO=PDSIZE,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,SREAVLSL(R5)
         CVD   R0,PWORK
         EDIT  TO=PDAVAIL,FROM=PWORK+5,MASK=' ZZ,Z99'
         MVC   PDWEIGHT,=CL7' '
         L     R0,SRERRCT(R5)
         CVD   R0,PWORK
         EDIT  TO=PDERRORS,FROM=PWORK+5,MASK=' ZZ,Z99'
         IF    (TM,SREFLG(R5),X'40',O)
               MVI  PDERRORS,C'*'         DSN OUT OF USE
         FI
         LA    R0,PDPSLINE
         PM    PUT
         PEXIT
         TITLE 'RATES - CPU USAGE RATES BY COMPONENT'
RATES    PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'R - DISPLAY CPU AND REAL MEMORY USAGE BY DOMAIN'
               OUTPT ' '
               OUTPT 'FCI DOMAINS ARE AS FOLLOWS'
               OUTPT ' '
               LA   R2,DOM$NAME         PRINT DOMAIN NAME TABS     FCI*
               DODO WHILE,(CLC,0(R2,2),=X'FFFF',NE)                FCI*
                  MVC  DMNMSG$,2(R2)   MOVE IN DOMAIN NAME         FCI*
                  LH   R0,0(R2)        PICK UP DOMAIN NUMBER       FCI*
                  CVD  R0,PWORK                                    FCI*
                  EDIT TO=DMNMSG#,FROM=PWORK+6,MASK=' Z99'         FCI*
                  LA   R0,DMNMSG                                   FCI*
                  PM   PUT                                         FCI*
                  LA   R2,$DOMNLEN(R2)                             FCI*
               OD                                                  FCI*
               PEXIT
         FI
         PM    INTERVAL
         PM    RC2
         PM    RC3
         PEXIT
         TITLE 'RC1 - CALCULATE CPU, IO, AND PAGING FOR ASCBS'
RC1      PENTRY
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R1,ASVTMAXU(R2)
         SLL   R1,2
         LA    R4,0(R1,R3)
         L     R5,RCTABPTR
         DODO  WHILE,(CLR,R3,R4,L)
               IF   (ICM,R6,15,0(R3),P)
                    LM   R0,R1,ASCBEJST(R6)
                    SRDL R0,12
                    D    R0,=F'10000'
                    LR   R15,R1
                    LM   R0,R1,ASCBSRBT(R6)
                    SRDL R0,12
                    D    R0,=F'10000'
                    AR   R15,R1
                    LR   R14,R15
                    S    R15,RCTTCPU-RCT(R5)
                    IF   (LTR,R15,R15,M),OR,(CLR,R14,R15,EQ)
                         ZR   R15
                    FI
                    STM  R14,R15,RCTTCPU-RCT(R5)
                    L    R1,ASCBOUCB(R6)
                    L    R0,OUCBIOSM(R1)
                    LR   R1,R0
                    S    R1,RCTTIO-RCT(R5)
                    IF   (LTR,R15,R15,M),OR,(CLR,R0,R1,EQ)
                         ZR   R1
                    FI
                    STM  R0,R1,RCTTIO-RCT(R5)
                    L    R1,ASCBOUXB(R6)
                    L    R0,OUXBPIN(R1)
                    A    R0,OUXBPOUT(R1)
                    LR   R1,R0
                    S    R1,RCTTPG-RCT(R5)
                    IF   (LTR,R15,R15,M),OR,(CLR,R0,R1,EQ)
                         ZR   R1
                    FI
                    STM  R0,R1,RCTTPG-RCT(R5)
               ELSE
                    XC   0(L'RCT,R5),0(R5)
               FI
               AAI  R3,4
               AH   R5,=AL2(L'RCT)
         OD
         PEXIT
         TITLE 'RT1 - COLLECT TRACE TABLE RATES FOR ASCBS'
RT1      PENTRY
         L     R2,FLCTRACE
         IF    (LTR,R2,R2,Z)
               PEXIT
         FI
         LM    R3,R4,4(R2)    R3=TTE START, R4=TTE END
         LM    R5,R6,TTETAB   R5=TAB START, R6=TAB END
         LA    R7,10
         DODO  UNTIL,(LTR,R2,R2,Z),OR,(LTR,R7,R7,Z)
               LR   R0,R5
               LR   R1,R6
               SR   R1,R5    R1=LENGTH OF TABLE
               LR   R14,R3
               LR   R15,R1
               MVCL R0,R14   COPY TABLE
               LH   R2,=H'-1' COUNT TIME CHANGES (SHOULD BE 1)
               LR   R1,R6
               SH   R1,=AL2(LTTE)
               L    R0,TTETIME(R1) R0=LAST TTE TIME
               LR   R1,R5
               DODO WHILE,(CLR,R1,R6,L),AND,(LTR,R2,R2,NP)
                    IF   (CL,R0,TTETIME(R1),GT)
                         AH   R2,=H'1'
                         LR   R15,R1   SAVE LOCATION OF TIME CHANGE
                    FI
                    L    R0,TTETIME(R1)
                    LA   R1,LTTE(R1)
               OD
               BCTR R7,0
         OD
         IF   (LTR,R7,R7,NP)
              OUTPT 'TRACE TABLE INVALID DUE TO HIGH ACTIVITY'
              MVC  DTRCINT,=C' *****'
              MVC  TRCINT,=F'1'
         ELSE
              ST   R15,TTETAB+8 SAVE FIRST FOR USE IN DISPLAYS
              LR   R14,R15     R14=LAST, R15=FIRST
              SH   R14,=AL2(LTTE)
              IF   (CLR,R14,R5,L)
                   LR   R14,R6
                   SH   R14,=AL2(LTTE)
              FI
              L    R1,TTETIME(R14)
              SL   R1,TTETIME(R15)
              ZR   R0
              D    R0,=F'38'
              CVD  R1,PWORK
              EDIT TO=DTRCINT,FROM=PWORK+5,MASK=' ZZZ99'
              ST   R1,TRCINT
         FI
         L     R7,RCTABPTR
         L     R2,16
         L     R2,CVTASCVT(R2)
         L     R3,ASVTMAXU(R2)
         DODO  WHILE,(SH,R3,=H'1',NM)   CLEAR TRACE COUNTERS
               XC   RCTCTAB-RCT(L'RCTCTAB,R7),RCTCTAB-RCT(R7)
               LA   R7,L'RCT(R7)
         OD
         L     R7,RCTABPTR
         DODO  WHILE,(CLR,R5,R6,L)
               LH   R1,TTEASID(R5)
               IF   (SH,R1,=H'1',M)
                    ZR   R1
               FI
               MH   R1,=AL2(L'RCT)
               LA   R4,0(R1,R7)       R4=A(RCT ENTRY)
               ZR   R1
               IC   R1,TTETYP(R5)
               SRL  R1,4
               DOCASE (R1)
                 CASE 0
                         IC   R15,RCTCSIO-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCSIO-RCT(R4)
                 ESAC
                 CASE 1
                         IC   R15,RCTCEXT-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCEXT-RCT(R4)
                 ESAC
                 CASE 2
                         IC   R15,RCTCSVC-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCSVC-RCT(R4)
                 ESAC
                 CASE 3
                         IC   R15,RCTCPGM-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCPGM-RCT(R4)
                 ESAC
                 CASE 4
                         IC   R15,RCTCISD-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCISD-RCT(R4)
                 ESAC
                 CASE 5
                         IC   R15,RCTCIO-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCIO-RCT(R4)
                 ESAC
                 CASE 6
                         IC   R15,RCTCSRR-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCSRR-RCT(R4)
                 ESAC
                 CASE 7
                         IC   R15,RCTCDSP-RCT(R4)
                         IF   (CH,R15,=H'255',L)
                              AAI  R15,1
                         FI
                         STC  R15,RCTCDSP-RCT(R4)
                 ESAC
               ESACOD
               LA   R5,LTTE(R5)
         OD
         PEXIT
         TITLE 'DI1 - COLLECT SIO COUNTS FOR DI COMMANDS'
DI1      PENTRY
         L     R2,16
         L     R2,CVTILK2(R2)
         L     R3,DISIOTAB
         DODO  WHILE,(CLC,0(2,R2),=X'FFFF',NE),AND,(LTR,R5,R5,NZ)
               IF   (CLC,0(2,R2),=X'0000',NE)
                    SLR  R1,R1                                  \
                    ICM  R1,3,0(R2)    LOAD WITHOUT SIGN EXTEN. \
                    L    R1,UCBEXTPT(R1)
                    ICM  R0,12,2(R3)
                    ICM  R0,03,UCBMFCNT(R1)
                    ST   R0,0(R3)
                    AAI  R3,4
               FI
               AAI  R2,2
         OD
         PEXIT
         TITLE 'RC2 - CALCULATE CPU USAGE BY DOMAIN'
RC2      PENTRY
         L     R2,16
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R1,ASVTMAXU(R2)
         SLL   R1,2
         LA    R4,0(R1,R3)
         L     R5,RCTABPTR
         XC    DOMAINR,DOMAINR
         DODO  WHILE,(CLR,R3,R4,L)
               IF   (ICM,R6,15,0(R3),P)
                    L    R1,ASCBOUCB(R6)
                    ZR   R15
                    IC   R15,OUCBDMN(R1)
                    MH   R15,=AL2(LDOMRE)
                    LA   R1,DOMAINR(R15)
                    LH   R15,0(R1)
                    AAI  R15,1    COUNT ASCBS IN DOMAIN
                    STH  R15,0(R1)
                    IF   (TM,ASCBRCTF(R6),ASCBOUT,Z)
                         LH   R15,2(R1)
                         AAI  R15,1
                         STH  R15,2(R1)
                    FI
                    L    R0,4(R1)
                    A    R0,4(R5)   ADD ASCB INTERVAL CPU
                    ST   R0,4(R1)
               FI
               AAI  R3,4
               AH   R5,=AL2(L'RCT)
         OD
         PEXIT
         TITLE 'RC3 - PRINT INTERVAL CPU USAGE AND MEMORY BY DOMAIN'
RC3      PENTRY
         PM    M1
         LA    R2,DOMAINR
         LA    R3,DOMAINR+L'DOMAINR
         ZR    R4
         L     R5,INTBIN
         LA    R6,DOMAINK
         ZR    R7
         DODO  WHILE,(CLR,R2,R3,L)
               LH   R0,0(R2)
               IF   (LTR,R0,R0,P)
                    CVD  R0,PWORK
                    EDIT TO=DRCDMNAS,FROM=PWORK+6,MASK=' Z99'
                    LH   R0,2(R2)
                    CVD  R0,PWORK
                    EDIT TO=DRCDMNAR,FROM=PWORK+6,MASK=' Z99'
                    CVD  R4,PWORK
                    EDIT TO=DRCDMN,FROM=PWORK+6,MASK=' Z99'
                    LA   R15,DOM$NAME         ADDRESS OF DOMAIN NAMES *
                    MVC  DRCDMN$,=CL12' '                          FCI*
                    DODO WHILE,(CLC,0(R15,2),=X'FFFF',NE),         FCI*X
               AND,(CLC,DRCDMN$,=CL12' ',EQ)                       FCI*
                       IF (CH,R4,0(R15),EQ)                        FCI*
                          MVC  DRCDMN$,2(R15)                      FCI*
                       ELSE  ,                                     FCI*
                          LA   R15,$DOMNLEN(R15)                   FCI*
                       FI                                          FCI*
                    OD                                             FCI*
                    IF  (CLC,DRCDMN$,=CL12' ',EQ)                  FCI*
                       MVC   DRCDMN$,=CL12' *UNKNOWN*'             FCI*
                    FI                                             FCI*
                    L    R1,4(R2)
                    AR   R7,R1
                    MH   R1,=H'100'
                    ZR   R0
                    DR   R0,R5
                    CVD  R1,PWORK
                    EDIT TO=DRCDMNP,FROM=PWORK+6,MASK=' Z99'
                    LH   R0,0(R6)
                    SLL  R0,2
                    CVD  R0,PWORK
                    EDIT TO=DRCDMNK,FROM=PWORK+5,MASK=' ZZZ99'
                    LA   R0,RCLINE2
                    PM   PUT
               FI
               AH   R2,=AL2(LDOMRE)
               AAI  R4,1
               AH   R6,=AL2(LDOMKE)
         OD
         L     R2,DCSCPU0I
         A     R2,DCSCPU1I
         LR    R1,R2
         IF    (SR,R1,R7,M)
               ZR   R1
         FI
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         EDIT  TO=DRCSYSC,FROM=PWORK+6,MASK=' Z99'
         MVC   DRCSYST,=CL6'SYSTEM'
         LA    R0,RCLINE3
         PM    PUT
         LR    R1,R2
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         EDIT  TO=DRCSYSC,FROM=PWORK+6,MASK=' Z99'
         MVC   DRCSYST,=CL6'TOTAL '
         LA    R0,RCLINE3
         PM    PUT
         PEXIT
         TITLE 'TIME - PRINT CURRENT AND IPL DATE AND TIME'
TIME     PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
           OUTPT 'T - DISPLAY TIME AND DATE NOW AND UPTIME OF SYSTEM'
           PEXIT
         FI
                TIME  DEC
                STM   R0,R1,PWORK
                AP    PWORK,=P'1900000'  FIX CENTURY            \
                EDIT  TO=TIMEDATE,FROM=PWORK,                          X
               MASK=' 99/99/99.99F ZZ99.999'
*                                                                  FCI*
*  THIS CODE REMOVED BY FCI                                        FCI*
*               L     R3,16
*               L     R3,CVTUSER(R3)
*               IF    (LTR,R3,R3,NZ)
*                     EDIT TO=IPLTIME,FROM=UCVTIPL(R3),               X
*              MASK=' 99/99/99.99F ZZ99.999'
*               ELSE
*                     MVC  IPLTIME,=CL22'UNKNOWN - NO UCVT'
*               FI
*..................................................................FCI*
*                                                                  FCI*
         LA    R0,X'26'          SET SYSEVENT CODE                 FCI*
         ICM   R0,B'1100',=H'1'  SET ASID TO 1                     FCI*
         LA    R1,TIMEWORK       -> RETURN AREA                    FCI*
         SVC   95                DO IT                             FCI*
         IF    (LTR,R15,R15,Z)                                     FCI*
             L     R4,4(,R1)     GET TOTAL TRANSACTIVE TIME        FCI*
             SRDL  R4,32         MOVE INTO R5 FOR DIVIDE.          FCI*
             D     R4,=F'1024'   CONVERT TO SECONDS.               FCI*
             SLR   R4,R4         IGNORE REMAINDER.                 FCI*
             D     R4,=F'3600'     DIVIDE TO GET HOURS.            FCI*
             STM   R4,R5,TIMEWORK  SAVE HRS/REM FOR LATER          FCI*
             SLR   R4,R4                                           FCI*
             D     R4,=F'24'     DIVIDE TO GET TOTAL DAYS          FCI*
             CVD   R5,PWORK      CONVERT DAYS                      FCI*
             EDIT  TO=UPDAYS,FROM=PWORK+6,MASK=' Z99'              FCI*
             LR    R5,R4         ESTABLISH NEW HOURS....           FCI*
             L     R4,TIMEWORK   GET BACK HOURS REMAINDER          FCI*
             CVD   R5,PWORK      CONVERT HOURS -                   FCI*
             UNPK  UPHH,PWORK+6(2)  - TO PRINTABLE FORMAT.         FCI*
             OI    UPHH+1,X'F0'  FIXUP SIGN BYTE.                  FCI*
             MVI   UPHH+2,C':'   SEPARATOR.                        FCI*
             SRDL  R4,32         MOVE REMAINDER OVER FOR DIVIDE.   FCI*
             D     R4,=F'60'     GET MINUTES.                      FCI*
             CVD   R5,PWORK      CONVERT MINUTES -                 FCI*
             UNPK  UPMM(2),PWORK+6(2) - TO PRINTABLE FORMAT.       FCI*
             OI    UPMM+1,X'F0'  FIXUP SIGN BYTE.                  FCI*
             MVI   UPMM+2,C':'   SEPARATOR.                        FCI*
             CVD   R4,PWORK      REMAINDER IS SECONDS.             FCI*
             UNPK  UPSS(2),PWORK+6(2)  CVT   SEC TO PRNTBLE FORMAT.FCI*
             OI    UPSS+1,X'F0'  FIXUP SIGN.                       FCI*
         ELSE ,                                                    FCI*
             MVC   UPDAYS,=C'???'                                  FCI*
         FI                                                        FCI*
*..................................................................FCI*
                LA    R0,TIMELINE
                PM    PUT
         PEXIT
         TITLE 'WAIT - WAIT INTERVAL '
WAIT     PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               OUTPT 'W - WAIT SPECIFIED NUMBER OF SECONDS'
               OUTPT ' '
               OUTPT 'WXXX - XXX IS NUMBER OF SECONDS TO WAIT'
               OUTPT ' '
               OUTPT 'THIS COMMAND IS FOR BATCH EXECUTION TO ALLOW'
               OUTPT 'DEFINITION OF INTERVAL LENGTH TO BE FOLLOWED'
               OUTPT 'BY ANY OF THE INTERVAL COMMANDS'
               OUTPT ' '
               OUTPT 'MVSMON CAN BE EXECUTED IN BATCH AS FOLLOWS'
               OUTPT ' // EXEC PGM=MVSMON'
               OUTPT ' //SYSPRINT DD SYSOUT=A'
               OUTPT ' //SYSIN DD *'
               OUTPT ' W010 WAIT 10 SECONDS'
               OUTPT ' DB   BASIC SYSTEM INFO FOR PREVIOUS INTERVAL'
               OUTPT ' I    HOLD LAST INTERVAL'
               OUTPT ' DA   ACTIVE TASK ANALYSIS FOR SAME INTERVAL'
               OUTPT ' /*'
               PEXIT
         FI
         PM    TIME
         PACK  PWORK,LINE+1(4)
         OI    PWORK+7,X'0F'
         CVB   R0,PWORK
         MH    R0,=H'100'
         ST    R0,WINT
         STIMER WAIT,BINTVL=WINT
         PM    TIME
         PEXIT
         TITLE 'GET - GET NEXT DISPLAY COMMAND AND LIST IT'
GET      PENTRY
         MVI   INTDONE,FALSE
         MVI   ATTN,FALSE
         IF    (CLI,NOMSG,TRUE,EQ)
               OUTPT 'NONE'
         FI
         IF    (CLI,PARM,FALSE,NE)
               IF   (CLI,PARM,FIRST,EQ),AND,(CLI,MODE,TSOMODE,NE)
                    IF   (CLI,MODE,MPSMODE,EQ)
                         MVI  PARM,TRUE
                         MVI  NOMSG,TRUE
                         L    R1,APARM
                         L    R14,0(R1)
                         ST   R14,ATPTERM
                         L    R14,4(R1)
                         L    R15,8(R1)
                         L    R15,0(R15)
                         ICM  R15,8,=C' '
                         LA   R0,LINE
                         LA   R1,L'LINE
                         MVCL R0,R14
                         PEXIT
                    FI
                    L    R14,APARM
                    L    R14,0(R14)
                    LH   R15,0(R14)
                    IF   (LTR,R15,R15,NZ)
                         MVI  PARM,TRUE
                         MVI  NOMSG,TRUE
                         AAI  R14,2
                         LA   R0,LINE
                         LA   R1,L'LINE
                         ICM  R15,8,=C' '
                         MVCL R0,R14
                         LA   R0,LINE
                         PM   PUT
                         PEXIT
                    ELSE
                         MVI  PARM,FALSE
                    FI
               ELSEIF (CLI,PARM,TRUE,EQ)
                    MVI  EOF,TRUE
                    PEXIT
               ELSE
                    MVI  PARM,FALSE
               FI
         FI
         MVC   LINE,=CL80' '
         IF    (CLI,MODE,IOMODE,EQ)
               OUTPT '?'
               GET   SYSIN,LINE
         ELSEIF (CLI,MODE,WTOMODE,EQ)
               MVI   WTORECB,0
               WTOR  ,LINE,80,WTORECB,MF=(E,WTORLIST)
               WAIT  ECB=WTORECB
         ELSE
*              OUTPT '?'
*              LA   R1,LINE
*              ICM  R1,8,=X'80'
*              LA   R0,80
*              TGET  (1),(0),R
*
*  REPLACE TGET WITH FSRL AND SUPPORT PFKS
*
               L    R15,AFSF
               LA   R1,FSRLPARM
               LA   R0,FSRLCODE
               BALR R14,R15
               OC    LINE,=CL80' '
               DOCASE AID+3
                 CASE 1,2,3,4,5,6,7,8,9,10,11,12
                      ZR   R1
                      IC   R1,AID+3
                      MH   R1,=AL2(L'PFKENT)
                      LA   R1,PFKTAB-L'PFKENT(R1)
                      IF   (CLI,PFKMODE,TRUE,EQ)
                           MVI  PFKMODE,PFKDONE
                           MVC  0(L'PFKENT,R1),LASTLINE
                           LA   R1,=CL80'HK'
                      FI
                      MVC  LINE(L'PFKENT),0(R1)
                 ESAC
                 CASE 26
                      MVC LINE(3),=C'END'
                 ESAC
               ESACOD
*              IF    (LTR,R15,R15,NZ)
*                    LA   R0,=CL80'ERROR IN TGET - IGNORED'
*                    PM   PUT
*              FI
         FI
         IF    (CLI,LINE,C' ',EQ)
               MVC  LINE,LASTLINE
         ELSE
               MVC  LASTLINE,LINE
         FI
         IF    (CLI,MODE,IOMODE,EQ)
               LA    R0,LINE
               PM    PUT
         FI
         MVI   NOMSG,TRUE
         PEXIT
GETEOF   MVI   EOF,TRUE
         PEXIT
         TITLE 'PUT'
PUT      PENTRY
         LR    R1,R0
         TR    0(80,R1),PRINTTAB
         IF    (CLI,ATTN,TRUE,EQ)
               IF   (CLI,ABORT,TRUE,EQ)
                    SUBEXIT
               FI
               PEXIT
         FI
         MVI   NOMSG,FALSE
         IF    (CLI,MODE,MPSMODE,EQ)
               ST   R0,ATPMSG
               LA   R1,MPSPARM
               L    R15,ATPPUT
               BALR R14,R15
         ELSEIF (CLI,MODE,IOMODE,EQ)
               PUT  SYSPRINT
         ELSEIF (CLI,MODE,WTOMODE,EQ)
               LR   R1,R0
               MVC  WTODATA,0(R1)
               WTO  MF=(E,WTOLINE)
         ELSE
*              LR   R1,R0
*              ICM  R1,8,=X'00'
*              LA   R0,80
*              TPUT (1),(0),R
*
*  REPLACE TPUT WITH FSWL
*
               LR   R1,R0
               MVC  PUTLINE,0(R1)
               L    R15,AFSF
               LA   R1,FSWLPARM
               LA   R0,FSWLCODE
               BALR R14,R15
         FI
         PEXIT
         TITLE 'CKUNIQUE - CHECK IF WEVE SEEN THIS UCB BEFORE'     FCI*
*   NOTE THAT ADDED FCI CODE SKIPPED THE UNIT IF R0 WAS RETURNED
*     AS ZERO; FIXED THE TESTS TO MATCH THIS ROUTINE.           \
CKUNIQUE PENTRY                                                    FCI*
*                                                                  FCI*
* ENTER WITH R3 = ADDR OF UCB                                      FCI*
*                                                                  FCI*
* EXIT WITH  R0 = 0   IF NOT SEEN BEFORE                           FCI*
*            R0 = 1   IF SEEN BEFORE                               FCI*
*                                                                  FCI*
         ZR    R0     SAY WE HAVEN'T SEEN IT BEFORE                FCI*
         ZR    R15    WORK REGISTER                                FCI*
         DODO  WHILE,(CH,R15,UCB$CNT,NH),AND,(LTR,R0,R0,Z)         FCI*
               IF   (CH,R3,UCB$LIST(R15),EQ)                       FCI*
                    LA   R0,1    WEVE SEEN IT                      FCI*
               ELSE ,                                              FCI*
                    AAI  R15,2      NOPE - BUMP POINTER            FCI*
               FI                                                  FCI*
         OD                                                        FCI*
         IF    (LTR,R0,R0,NZ)                                      FCI*
              PEXIT              SEEN IT BEFORE..SPLIT             FCI*
         FI                                                        FCI*
         LH   R15,UCB$CNT                                          FCI*
         IF   (CH,R15,UCB$MAX,NH)                                  FCI*
              STH   R3,UCB$LIST(R15)                               FCI*
              AAI   R15,2                                          FCI*
              STH   R15,UCB$CNT                                    FCI*
         FI                                                        FCI*
         PEXIT                                                     FCI*
         TITLE 'LITERALS AND EQUATES'
         EQUAL
         TITLE 'WORK AREA'
WORK     DS    0D
DCBLIST  OPEN  (,,,(OUTPUT)),MF=L
EXTRPSCB EXTRACT ,'S',FIELDS=(PSB),MF=L                            FCI*
SYSIN    DCB   DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=80,DDNAME=SYSIN
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=F,BLKSIZE=80,DDNAME=SYSPRINT
*
* DATA FOR FSWR/FSWL
*
PUTLINE  DC    CL80' '
AID      DC    F'0'
ROW      DC    F'0'
COL      DC    F'0'
AFSF     DC    A(0)
FSRLPARM DC    4F'0'
FSWLPARM DC    F'0'
FSRLCODE EQU   7
FSWLCODE EQU   8
FSCLCODE EQU   11        CLEAR CODE                                FCI*
*                                                                  FCI*
DEVADDR  DC    AL4(0)                ADDRESS OF DEVNAME TABLE      FCI*
X7F      DC    XL4'0000007F'         MASK FOR USE COUNT            FCI*
*
* ADDRESS AREA FOR DIDOCS ROUTINE                                  FCI*
*                                                                  FCI*
DIDOCADR DC    F'0'      ADDRESS OF DIDOCS ROUTINE                 FCI*
DIDOCSAV DC    18F'0'    SAVE AREA FOR DIDOCS                      FCI*
*
*  DATA FOR QD, QE, QN
*
QNAME    DC    CL8' '
RNAME    DC    CL44' '
RNAMELNG DC    F'0'
DEQLIST  DEQ   (0,0,0,SYSTEM),MF=L
ENQLIST  ENQ   (0,0,E,0,SYSTEM),MF=L
*
*  MISC. DATA
*
LINE     DC    CL80' '
LASTLINE DC    CL80' '
PFKMODE  LOGICAL FALSE,(TRUE,FALSE,PFKDONE)
HMODE    LOGICAL FALSE,(TRUE,FALSE)
PFKENT   DC    CL20' '
PFKTAB   SDSA
PFK1DEF   DC   CL20'HD'
PFK2DEF   DC   CL20'DB'
PFK3DEF   DC   CL20'DA'
PFK4DEF   DC   CL20'DE'
PFK5DEF   DC   CL20'DI'
PFK6DEF   DC   CL20'DQ,SYS'
PFK7DEF   DC   CL20'DW'
PFK8DEF   DC   CL20'S '
PFK9DEF   DC   CL20'R '
PFK10DEF  DC   CL20'P '
PFK11DEF  DC   CL20'DJ'
PFK12DEF  DC   CL20'DQ'
         EDSA
PFKLINE  DS    0CL80
         DC    C'PFK='
DPFKNO   DC    CL4' ',C'  DEF='
DPFK     DC    CL(L'PFKENT)' '
         FILL  PFKLINE
NOMSG    LOGICAL FALSE,(TRUE,FALSE)
EOF      LOGICAL FALSE,(TRUE,FALSE)
MODE     LOGICAL IOMODE,(IOMODE,WTOMODE,TSOMODE,MPSMODE)
PARM     LOGICAL FIRST,(FIRST,TRUE,FALSE)
VALID    LOGICAL FALSE,(TRUE,FALSE)
TSOOPER  LOGICAL FALSE,(TRUE,FALSE)                                FCI*
ATPPUT   DC   A(0)
MPSPARM  DS   0XL12
ATPTERM  DS   A
ATPMSG   DS   A
ATPLMSG  DS   X'80',AL3(0)
APARM    DC   A(0)
WTORECB  DC   F'0'
PWORK    DC   D'0'
WTORLIST WTOR 'MVSMON - ENTER COMMAND OR ''END''',MF=L FCI*
WTOLINE  DS   0F
         DC   AL2(WTOEND-*,0)
WTODATA  DC   CL80' '
WTOEND   EQU  *
TITLE1   DS   0CL80
         DC   C'MVSMON (FCIMODS) VERSION='
         DC   C'&SYSDATE',C' '
         DC   C'&SYSTIME'
         FILL TITLE1
TITLE2   DS   0CL80
         DC   C'ENTER COMMAND OR HELP'
         FILL TITLE2
TIMELINE DS   0CL80
         DC   C'NOW='
TIMEDATE DC   CL22' ',C'  UP FOR '                                 FCI*
UPDAYS   DC   CL4' ',C' DAYS AND '                                 FCI*
UPHH     DC   CL2' ',C' '         FOR UP  TIME HH:MM:SS            FCI*
UPMM     DC   CL2' ',C' '                                          FCI*
UPSS     DC   CL2' ',C' '                                          FCI*
*PLTIME  DC   CL22' ' FCI*
         FILL TIMELINE
TIMEWORK DC    4F'0'                                               FCI*
*
*        INTERVAL PROCESSING DATA
*
WINT     DC    F'0'   INTERVAL FOR WAIT COMMAND
INTLAST  DC    F'0'   END OF LAST INTERVAL IN 0.01 SEC
INTBIN   DC    F'0'   INTERVAL IN 0.01 SEC
INTHOLD  LOGICAL FALSE,(TRUE,FALSE) DO NOT UPDATE INTERVAL INFO.
INTDONE  LOGICAL FALSE,(TRUE,FALSE) ONLY UPDATE ONCE PER INPUT
INTMSG   DS    0CL80
         DC    C'ELAPSED INTERVAL IS '
DINTSEC  DC    CL6' ',C' SECONDS ENDING '
DINTEND  DC    CL6' ',C' - TRACE INTERVAL IS'
DTRCINT  DC    CL6' ',C' MS'
         FILL  INTMSG
*
*        DISPLAY DATA AREAS
*
*
*        DA, DJ, DU, DS DISPLAY DATA
*
DALINE0  DS    0CL80
         DC    C'                      ---RATES--- -TRACE TOTALS--'
         FILL  DALINE0
DALINE1  DS    0CL80
         DC    C'                      CPU XIO PAG SVC SIO PGM INT'
         DC    C'    T-CPU    T-IO T-MEM T-XEQ'
         FILL  DALINE1
DALINE2  DS    0CL80
         DC    C'JOBNAME  STEPNAME DPG (%) SEC SEC TOT TOT TOT TOT'
         DC    C' SSSSS.TH   COUNT  (K)    MIN'
         FILL  DALINE2
DALINE3  DS    0CL80
DAJOB    DC    CL8' '
DAPSTEP  DC    CL1' '   =' ' FOR STEP, ='-' FOR PSTEP              FCI*
DASTEP   DC    CL8' '
DADPG    DC    CL4' '
DARCPU   DC    CL4' '
DARIO    DC    CL4' '
DARPG    DC    CL4' '
DARSVC   DC    CL4' '
DARSIO   DC    CL4' '
DARPGM   DC    CL4' '
DARINT   DC    CL4' '
DATCPU   DC    C' ZZZ99.99'
DATIO    DC    C' ZZZZZ99'
DATMEM   DC    C' ZZZ99'
DATXEQ   DC    C' ZZZ99'
         FILL  DALINE3
*
*        DC DATA
*
DCLINE   DS    0CL80
         DC    C'TOTAL CPU USAGE  CPU0='
DCDCPU0  DC    CL4' ',C'%  CPU1='
DCDCPU1  DC    CL4' ',C'%  TOTAL='
DCDCPUT  DC    CL4' ',C'%'
         FILL  DCLINE
DCLINE2  DS    0CL80
         DC    CL12'CHANNEL'
DCCHAN   DC    CL4' ',C' SIOS/S='
DCSIOS   DC    CL4' ',C'  BUSY='
DCBUSY   DC    CL4' ',C'%'
         FILL  DCLINE2
DCSCPU0W DC    F'0'
DCSCPU1W DC    F'0'
DCSCPU0I DC    F'0'
DCSCPU1I DC    F'0'
DCBINT   DC    F'0'
DCNTSAMP DC    XL8'00' LAST TOTAL SAMPLES AND INTERVAL SAMPLES
         DS    0D
DCNCHANS DC    XL(16*16)'00' LSIO, ISIO, LBUSY, IBUSY
*
*        DD DATA
*
DDLINE   DS    0CL80
DDUCB    DC    CL3' ',C' '         UCB
DDVOL    DC    CL6' ',C' '
DDUUTYPE DC    CL8' ',C' '                                         FCI*
DDUMTYP  DC    CL4' '                                              FCI*
DDUVSTAT DC    CL5' ',C' USE='                                     FCI*
DDUUCNT  DC    CL4' ',C' OPN='                                     FCI*
DDUOCNT  DC    CL4' ',C' QLN='                                     FCI*
DDUQCNT  DC    CL4' ',C' STAT='                                    FCI*
DDUSTAT  DC    CL40' '                                             FCI*
         FILL  DDLINE
*
*        DE DATA
*
DELINE2  DS    0CL80
DEUCB2   DC    CL3' ',C' '
DESNS2   DC    CL40' '
         FILL  DELINE2
DELINE3  DS    0CL80
DEAJOB   DC    CL8' ',C' '
DEAMSG   DC    CL40' '
         FILL  DELINE3
*
*        DI DATA
*
DISIOTAB DC    A(0)
DISCHN   DC    CL3' '
DIECHN   DC    CL3' '
DICHN    DC    CL3' '
DILINE1  DS    0CL80
         DC    C'UCB RANGE S='
DISUCB   DC    C'000',C' E='
DIEUCB   DC    C'FFF',C'  SIOS MINIMUM M='
DIMSIOS  DC    C'03'
         FILL  DILINE1
DILINE2  DS    0CL80
DIUCB    DC    CL3' ',C' '
DIVOL    DC    CL6' ',C' '
DIJOB    DC    CL8' ',C'  SIO='
DISIO    DC    CL7' ',C'  SIO/SEC='
DISIOS   DC    CL4' '
         FILL  DILINE2
DILINE3  DS    0CL80
         DC    C'RANGE TOTAL SIO='
DIRSIO   DC    CL10' ',C'   SIO/SEC='
DIRSIOS  DC    CL4' '
         FILL  DILINE3
EBCBIN   DC    256X'00'
         ORG   EBCBIN+C'A'
         DC    AL1(10,11,12,13,14,15)
         ORG   EBCBIN+C'0'
         DC    AL1(0,1,2,3,4,5,6,7,8,9)
         ORG
PRINTTAB TRTTAB PRINT
*
*        DL DATA
*
DLLINE1  DS    0CL80
DLUCB    DC    CL3' ',C' '
DLMSG    DC    CL20' '
         FILL  DLLINE1
*
*        DK DATA
*
DKLINE   DS    0CL80
DKNAME   DC    CL8' ',C' '
DKUSE    DC    CL4' '
         FILL  DKLINE
*
*        DM DATA
*
DMLINE   DS    0CL80
         DC    C'MOUNT PENDING FOR '
DMUCB    DC    CL3' ',C' '
DMVOL    DC    CL6' '
         FILL  DMLINE
*
*        DN DATA
*
DNFRTCB  DC    F'0'
DNPASCB  DC    PL2'0'
DNPJOB   DC    PL2'0'
DNPTSO   DC    PL2'0'
DNPSTC   DC    PL2'0'
DNPUCB   DC    PL2'0'
DNPDISK  DC    PL2'0'
DNPTAPE  DC    PL2'0'
DNPPORT  DC    PL2'0'
DNPUR    DC    PL2'0'
DNPOTHER DC    PL2'0'
DNAUCB   DC    PL2'0'                                           \
DNADISK  DC    PL2'0'                                           \
DNATAPE  DC    PL2'0'                                           \
DNAPORT  DC    PL2'0'                                           \
DNAUR    DC    PL2'0'                                           \
DNAOTHER DC    PL2'0'                                           \
DNLINE1  DS    0CL80
         DC    C'TOTAL ASCBS='
DNDASCB  DC    CL4' ',C'  READY TCBS='
DNRTCB   DC    CL4' ',C'  JOBS='
DNJOB    DC    CL4' ',C'  USERS='
DNTSO    DC    CL4' ',C'  STCS='
DNSTC    DC    CL4' '
         FILL  DNLINE1
DNLINE2  DS    0CL80
DNDON    DC    C'ONLINE UCBS='
DNDUCB   DC    CL4' ',C'  DISKS='
DNDISK   DC    CL4' ',C'  TAPES='
DNTAPE   DC    CL4' ',C'  PORTS='
DNPORT   DC    CL4' ',C'  UR='
DNUR     DC    CL4' ',C'  OTHER='
DNOTHER  DC    CL4' '
         FILL  DNLINE2
*
*        DP DATA
*
DPLINE   DS    0CL80
         DC    C'TOTAL PAGING DMD='
DPDPAGE  DC    CL4' ',C' P/S  VIO='
DPDVIO   DC    CL4' ',C' P/S  SWP='
DPDSWAP  DC    CL4' ',C' P/S  XCOM='
DPDXCOM  DC    CL4' ',C' MSG/S'
         FILL  DPLINE
         DS    0F
DPSPAGE  DC    XL8'00'
DPSVIO   DC    XL8'00'
DPSSWAP  DC    XL8'00'
*
*        DQ DISPLAY DATA
*
TYPE     LOGICAL SHARE,(SHARE,EXCLUDE)
DQMODE   LOGICAL DQWAIT,(DQWAIT,DQALL,DQSYS,DQXY)
DQMAJ    DC    CL8' '
DQMIN    DC    CL44' '
DQMAJCL  DC    A(0,0)
DQMINCL  DC    A(0,0)
JOBNAME  DC    CL8' '
DQLINE1  DS    0CL80
DQ1WJOB  DC    CL8' ',C' WAITING ON '
DQ1OJOB  DC    CL8' ',C' FOR '
DQ1QNAME DC    CL8' ',C' '
DQ1RNAME DC    CL30' '
         FILL  DQLINE1
DQLINE2  DS    0CL80
DQ2JOB   DC    CL8' ',C' '
DQ2QNAME DC    CL8' ',C' '
DQ2RNAME DC    CL30' ',C' '
DQ2OWNER DC    CL5' ',C' '
DQ2TYPE  DC    CL9' '
         FILL  DQLINE2
*
*        DR DATA
*
DRLINE   DS    0CL80
         DC    C'WTOR REPLIES OUTSTANDING='
DRWTORS  DC    CL4' '
         FILL  DRLINE
*
*        DT DATA
*
DTLINE   DS    0CL80
DTUCB     DC    CL3' ',C' '
DTVOL     DC    CL6' ',C' '
DTJOB     DC    CL8' ',C' SIO='
DTSIO     DC    CL7' ',C' TERR='
DTTERR    DC    CL4' ',C' PERR='
DTPERR    DC    CL4' ',C' '
DTMSG     DC    CL25' '
         FILL  DTLINE
*
*        DV
*
DVDATA   DS    0H       DATA COLLECTED BY DV1 AND DV2
DVSCSA   DC    H'0'     VBN OF CSA
DVSLPA   DC    H'0'     VBN OF LPA
DVSSQA   DC    H'0'     VBN OF SQA
DVHRPVT  DC    H'0'     REAL PVT
DVHRCSA  DC    H'0'          CSA
DVHRLPA  DC    H'0'          LPA
DVHRSQA  DC    H'0'          SQA
DVHFPVT  DC    H'0'     FIXED PVT
DVHFCSA  DC    H'0'           CSA
DVHFLPA  DC    H'0'           LPA
DVHFSQA  DC    H'0'           SQA
DVBREAL  DC    H'0'     TOTAL REAL
DVBFREE  DC    H'0'           FREE
DVBALLOC DC    H'0'           ALLOC
DVBFIXED DC    H'0'           FIXED
DVBBAD   DC    H'0'           FLAGGED AS BAD AND UNUSABLE
DVBOFF   DC    H'0'           OFFLINE
DVBVIO   DC    H'0'           IN USE FOR VIO
DVBVR    DC    H'0'           ALLOCATED FOR V=R REGION
LDVDATA  EQU   *-DVDATA
DVLINE1  DS    0CL80
         DC    CL7'VIRTUAL',C' NUC='
DVVNUC   DC    CL6' ',C'K PVT='
DVVPVT   DC    CL6' ',C'K CSA='
DVVCSA   DC    CL6' ',C'K LPA='
DVVLPA   DC    CL6' ',C'K SQA='
DVVSQA   DC    CL6' ',C'K'
         FILL  DVLINE1
DVLINE2  DS    0CL80
         DC    CL7'REAL',C' NUC='
DVRNUC   DC    CL6' ',C'K PVT='
DVRPVT   DC    CL6' ',C'K CSA='
DVRCSA   DC    CL6' ',C'K LPA='
DVRLPA   DC    CL6' ',C'K SQA='
DVRSQA   DC    CL6' ',C'K'
         FILL  DVLINE2
DVLINE3  DS    0CL80
         DC    CL7'FIXED',C' NUC='
DVFNUC   DC    CL6' ',C'K PVT='
DVFPVT   DC    CL6' ',C'K CSA='
DVFCSA   DC    CL6' ',C'K LPA='
DVFLPA   DC    CL6' ',C'K SQA='
DVFSQA   DC    CL6' ',C'K'
         FILL  DVLINE3
DVLINE4  DS    0CL80
         DC    CL7'TOTALS',C' REAL='
DVTREAL  DC    CL6' ',C'K  FREE='
DVTFREE  DC    CL6' ',C'K  ALLOC='
DVTALLOC DC    CL6' ',C'K  FIXED='
DVTFIXED DC    CL6' ',C'K'
         FILL  DVLINE4
DVLINE5  DS    0CL80
         DC    CL7'TOTALS',C' BAD='
DVTBAD   DC    CL6' ',C'K  OFFLINE='
DVTOFF   DC    CL6' ',C'K  VIO='
DVTVIO   DC    CL6' ',C'K  V=R='
DVTVR    DC    CL6' ',C'K'
         FILL  DVLINE5
*
*        DW DATA
*
DWLINE   DS    0CL80
DWUCB    DC    CL3' ',C' '
DWVOL    DC    CL6' ',C' I/O PENDING'
         FILL  DWLINE
*
*        DZ DATA
*
DZLINE   DS    0CL80
DZTYP    DC    CL3' ',C' '
DZJOB    DC    CL8' ',C' '
DZPSW    DC    CL16' ',C' '
DZCSW    DC    CL16' ',C' '
DZREGS   DC    CL16' ',C' '
DZTCBTM  DC    CL16' '
         FILL  DZLINE
         DC    C' ' PAD FOR UNPK AND TR CODE
DZSLINE1 DS    0CL80
         DC    C'TYPE TOTAL ERRORS'
         FILL  DZSLINE1
DZSLINE2 DS    0CL80
         DC    C' '
DZSTYP   DC    CL3' '
DZSTOT   DC    CL6' ZZZ99',C' '
DZSERR   DC    CL6' ZZZ99'
         FILL  DZSLINE2
BLANK    DC    CL80' '
DZSLINE3 DS    0CL80
         DC    C'SVC NO.  TOTAL'
         FILL  DZSLINE3
DZSLINE4 DS    0CL80
         DC    CL3' '
DSVCNO   DC    CL4' ',CL3' '
DSVCTOT  DC    CL4' '
         FILL  DZSLINE4
SVCTAB   DC    A(0)
PSVCNO   DC    PL2'0'
*
*        DATA FOR MEMORY USAGE BY DOMAIN
*
DOM$NAME DS    0H    FCI DOMAIN NAME TABLES                        FCI*
         PUSH  PRINT                                               FCI*
         PRINT GEN                                                 FCI*
         $DOMAINS                                                  FCI*
         POP   PRINT                                               FCI*
         DC    X'FFFF'      END OF TABLE                           FCI*
         DS    0F
DOMAINK  DC    XL(16*2)'00'  16 DOMAIN PAGE FRAME COUNTERS
LDOMKE   EQU   2
DOMLINE  DS    0CL80
DOMDESC  DC    CL6'DOMAIN',C'='
DOMN     DC    CL4' ',C' '                                         FCI*
DOMN$    DC    CL12' ',C' '                                        FCI*
DOMK     DC    CL6' ',C'K  '
DOMPCT   DC    CL4' ',C'%'
         FILL  DOMLINE
DMNMSG   DS    0CL80                                               FCI*
         DC    C' DOMAIN='                                         FCI*
DMNMSG#  DC    CL4' ',C' - '                                       FCI*
DMNMSG$  DC    CL12' '                                             FCI*
         FILL  DMNMSG                                              FCI*
*
*        CPU USAGE RATE BY ASCB AND DOMAIN DATA
*
RCTABPTR DC    A(0)   POINTER TO ASCB INTERVAL CPU USAGE TABLE
TTETAB   DC    A(0,0,0) TTE TABLE POINTERS (START, END, FIRST)
TTENTAB  DC    CL48'SIOEXTSVCPGMISDI/OSRRDSP' TRACE ENTRY TYPE NAMES
TTECTAB  DS    XL(4*16)  TRACE SUMMARY COUNTS
TTEETAB  DS    XL(4*16)   TRACE ERROR   COUNTS
TRCINT   DC    F'0'   TRACE TABLE INTERVAL IN MS
RCT     SDSA
RCTTCPU  DS    F  TOTAL TCB AND SRB CPU
RCTICPU  DS    F  INTERVAL CPU
RCTTIO   DS    F  TOTAL EXCP IO
RCTIIO   DS    F  INTERVAL EXCP IO
RCTTPG   DS    F  TOTAL PAGING
RCTIPG   DS    F  INTERVAL PAGING
RCTCTAB   SDSA
RCTCSIO    DS  X  SIO COUNTS FROM TRACE TABLE
RCTCEXT    DS  X  EXTERNAL INTERRUPTS
RCTCSVC    DS  X  SVC
RCTCPGM    DS  X  PGM INTERRUPTS
RCTCISD    DS  X  INITIAL SRB DISPATCH
RCTCIO     DS  X  IO INTERRUPTS
RCTCSRR    DS  X  SRB
RCTCDSP    DS  X  TASK DISPATCH
         EDSA
        EDSA
         DS    0F
DOMAINR  DC    XL(16*8)'00' 16 DOMAIN INTERVAL ASCBS AND CPU USAGE
LDOMRE   EQU   8
RCLINE2  DS    0CL80
         DC    C'DOMAIN='
DRCDMN   DC    CL4' ',C' '
DRCDMN$  DC    CL12' ',C'  TOT-ASCBS='
DRCDMNAS DC    CL4' ',C'  RDY-ASCBS='
DRCDMNAR DC    CL4' ',C'  CPU='
DRCDMNP  DC    CL4' ',C'%  '
DRCDMNK  DC    CL6' ',C'K'
         FILL  RCLINE2
RCLINE3  DS    0CL80
DRCSYST  DC    C'SYSTEM',CL52' ',C'CPU='                          FCI*
DRCSYSC  DC    CL4' ',C'% '
         FILL  RCLINE3
*
*        DATA FOR PD - PAGE DSN INFO.
*
PDHEAD1  DS    0CL80
         DC    CL10'     SLOTS'
         DC    CL10'       VIO'
         DC    CL10'   NON-VIO'
         DC    CL10'    UNUSED'
         DC    CL10'    UNRESV'
         DC    CL10'  SWAP-SET'
         FILL  PDHEAD1
PDTLINE  DS    0CL80
PDSLOTS  DC    CL10' '
PDVSC    DC    CL10' '
PDNVSC   DC    CL10' '
PDUNUSED DC    CL10' '
PDUNRESV DC    CL10' '
PDSETSZ  DC    CL10' '
         FILL  PDTLINE
PDHEAD2  DS    0CL80
         DC    CL15'--- DSNAME ----',C' '
         DC    CL6'VOLUME',C' '
         DC    CL3'UCB',C' '
         DC    CL6'TYPE'
         DC    CL7'  SLOTS'
         DC    CL7'  AVAIL'
         DC    CL7' WEIGHT'
         DC    CL7' ERRORS'
         FILL  PDHEAD2
PDPSLINE DS    0CL80
PDDSN    DC    CL15' ',C' '
PDVOL    DC    CL6' ',C' '
PDUCB    DC    CL3' ',C' '
PDTYPE   DC    CL6' '
PDSIZE   DC    CL7' '
PDAVAIL  DC    CL7' '
PDWEIGHT DC    CL7' '
PDERRORS DC    CL7' '
         FILL  PDPSLINE
*
*        DATA FOR  SRM DISPLAY
*
SLINE1   DS    0CL80
         DC    C'SRM '
DSTYP    DC    CL3' ',C' LOW='
DSLOW    DC    CL4' ',C' HIGH='
DSHIGH   DC    CL4' ',C' AVG='
DSAVG    DC    CL4' '
         FILL  SLINE1
*
*        DATA FOR XCOM DISPLAY
*
XCOMRATE DC    A(0,0) TOTAL AND INTERVAL XCOM COUNTS
DXCOM1   DS    0CL80
         DC    C'XCOM TOTALS - RCUR='
DRCUR    DC    CL7' ',C'  RMAX='
DRMAX    DC    CL7' ',C'  RTOT='
DRTOT    DC    CL7' '
         FILL  DXCOM1
DXCOM2   DS    0CL80
         DC    C'XCOM  PATHS - PID='
DPATH    DC    CL4' ',C' '
DPATHJOB DC    CL8' '
         FILL  DXCOM2
DXCOM3   DS    0CL80
         DC    C'XCOM   MSGS - PID='
DPID     DC    CL4' ',C'  TID='
DTID     DC    CL4' ',C'  ME#='
DME#     DC    CL7' '
         FILL  DXCOM3
*
*        DATA AND ROUTINES FOR PROGRAM INTERRUPTION HANDLER
*
         DROP
PGMCHK1  TAG                       STAGE 1 PGMCHK HANDLER
         USING *,R15
         MVC   PGMPSW,4(R1)        SAVE PSW
         LA    R15,PGMCHK2
         STCM  R15,7,9(R1)         CHANGE PSW TO EXIT TO STAGE 2
         BR    R14                 EXIT TO SUPVR FROM STAGE 1
PGMCHK2  BALR  R15,0               STAGE 2 PGMCHK HANDLER
         USING *,R15
         LM    R0,R15,PGMCHKSA
         BR    R15                 EXIT TO STAGE 3 AT END OF MAINLINE
PGMCHKSA DC    16F'0'
SAVEPICA DC    A(0)
SPIELIST SPIE  0,((1,15)),MF=L
         DC    CL8'*PGMPSW*'
PGMPSW   DC    D'0'
DWORK    DC    CL7' '
HEX      DC    C'0123456789ABCDEF'
PGMMSG   DS    0CL80
         DC    C'PROGRAM CHECK AT '
DPGMCHK  DC    CL6' '
         FILL  PGMMSG
*
*        TSO ATTENTION EXIT AND RELATED DATA AREAS
*
STAXRTN  TAG
         USING *,R15
         IF    (CLI,ATTN,TRUE,NE)
               MVI  ATTN,TRUE        REQ. SURPRESS REST OF COMMAND
         ELSEIF (CLI,ABORT,TRUE,NE)
               MVI  ABORT,TRUE       REQ. IMMEDIATE SUBEXIT
         ELSE
               ABEND 122,DUMP        DUMP IF THE ABOVE DON'T WORK
         FI
         BR    R14
         DROP  R15
ATTN     LOGICAL FALSE,(TRUE,FALSE)
ABORT    LOGICAL FALSE,(TRUE,FALSE)
STAXLIST STAX  MF=L
STAXMSG  DC    CL80'MVSMON COMMAND ABORTED BY ATTN KEY'
*
*        END OF WORK AREA CSECT
*
UCB$     EQU   500          500 ENTRIES IN LIST MAX                FCI*
UCB$CNT  DC    H'0'         CKUNIQUE - COUNT OF UCBS IN LIST       FCI*
UCB$MAX  DC    AL2(UCB$*2)  CKUNIQUE - REMEMBER UCB MAX ADDRESS    FCI*
UCB$LIST DC    (UCB$)H'0'   STORE UP TO UCB$ UCBS IN LIST          FCI*
LWORK    EQU   *-WORK
         TITLE 'DSECTS'
         IKJPSCB       ,                                           FCI*
*
*              ENQ/DEQ CONTROL BLOCKS  PG 549
*
*
*              MAJOR QCB
*
QCBMAJ   DSECT
QMJNEXT  DS    A    NEXT MAJOR QCB
QMJPREV  DS    A    PREVIOUS MAJOR QCB
QMJMINOR DS    A    FIRST MINOR QCB
QMJLMIN  DS    A    LAST  MINOR QCB ADDED IN MVS *****************
QMJNAME  DS    CL8  MAJOR QCB NAME
QMJLNE   EQU   *-QCBMAJ
*
*              MINOR QCB
*
QCBMIN   DSECT
QMNNEXT  DS    A NEXT MINOR
QMNPREV  DS    A PREVIOUS MINOR
QMNQEL   DS    A FIRST QEL
QMNLQEL  DS    A LAST  QEL
QMNLNM   DS    X LENGTH OF RNAME
QMNFLAGS DS    X
QMNASID  DS    H ASID NUMBER FOR STEP ONLY
QMNNAME  DS    C
*
*              QUEUE ELEMENT
*
QEL      DSECT
QELNQEL  DS    A  NEXT QEL
QELLQEL  DS    A  PREVIOUS QEL
QELTCB   DS    A  TCB
QELQFLGS DS    X  QEL FLAGS
QELSHAR  EQU   X'80'
QELLFLGS DS    X  QEL LIST FLAGS
QELASID  DS    H  ASID OF REQUESTOR
QELSVRB  DS    A  SVRB
QELLCNT  DS    H  # ACTIVE QEL COUNT
QELWCNT  DS    H  # QELS WAITING
         TITLE 'SYSTEM CONTROL BLOCK EQUATES'
*
*        ASVT
*
ASVTMAXU EQU  X'204'    87 NUMBER OF ASCB ENTRIES
ASVTENTY EQU  X'210'    87 START  OF ASCB ENTRIES
*
*        ASCB
*
ASCBASID EQU  X'24'     68 ASID NUMBER
ASCBCSCB EQU  X'38'     69 COMMAND SCHED. CONTROL BLOCK CHAIN
ASCBTSB  EQU  X'3C'     69 TERMINAL STATUS BLOCK FOR TSO ONLY
ASCBEJST EQU  X'40'     69 UNSIGNED 64 BIT TCB CPU TIME
ASCBRCTF EQU  X'66'     69 RCT FLAGS
ASCBOUT  EQU  X'04'     69 ASCB SWAPPED OUT
ASCBFLG1 EQU  X'67'     70 FLAG FIELD
ASCBDSP1 EQU  X'72'     70 DISPATCH FLAG FIELD
ASCBTCBS EQU  X'7C'     71 COUNT OF READY TCBS
ASCBOUCB EQU  X'90'     71 SRM USER CONTROL BLOCK
ASCBOUXB EQU  X'94'     43 SRM USER EXTENSION BLOCK
ASCBFMCT EQU  X'98'     71 PAGE FRAME COUNT - WORKING SET
ASCBJBNI EQU  X'AC'     72 JOBNAME OF INITS
ASCBJBNS EQU  X'B0'     72 JOBNAME OF STCS
ASCBSRBT EQU  X'C8'     72.1 SRB CPU TIME
*
*        ASM     AUX. STORAGE TABLE
*
ASMSART  EQU  X'04'     74   SWAP ACTIVITY TABLE
ASMPART  EQU  X'08'     74   PAGE ACTIVITY TABLE
ASMBKSLT EQU  X'6C'     77   UNRESERVED SLOTS
ASMSLOTS EQU  X'70'     77   TOTAL SLOTS
ASMVSC   EQU  X'74'     77   ALLOC VIO SLOTS
ASMNVSC  EQU  X'78'     77   ALLOC NON-VIO SLOTS
*
*        CDE
*
CDCHAIN  EQU  X'00'     160 NEXT CDE
CDNAME   EQU  X'08'     160 NAME
CDENTPT  EQU  X'10'     160 LOAD MODULE ENTRY POINT
CDUSE    EQU  X'18'     160 USE COUNT
*
*        CSCB
*
CSCBPTR  EQU  X'00'     173 NEXT CSCB
CSCBJOB  EQU  X'08'     174 JOB NAME
CSCBSTEP EQU  X'40'     176 STEP NAME
CSCBPSTP EQU  X'20'         PROC STEP NAME                         FCI*
*
*        CSD
*
CSDCPUAL EQU  X'08'    179 MASK OF AVAILABLE CPUS
*
*        CVT
*
CVTILK2  EQU  X'028'   184  UCB HALFWORD ADDR LIST
CVTCUCB  EQU  X'064'   185  UCM FOR MCS
CVTNUCB  EQU  X'080'   186  SIZE OF NUC
CVTMZ00  EQU  X'0A4'   187  SIZE OF VIRTUAL STORAGE
CVTQLPAQ EQU  X'BC'    188  POINTER TO ACTIVE LPA CDE LIST
CVTSMCA  EQU  X'0C4'   188  SMF COMMON AREA
CVTUSER  EQU  X'0CC'   188  POINTER TO FPC USER CVT
CVTPVTP  EQU  X'164'   193  PAGE VECTOR TABLE
CVTLPDIA EQU  X'168'   193  START OF LPA (SEE VOL1 5-64)
CVTSHRVM EQU  X'1A0'   195  START OF CSA
CVTASCVT EQU  X'22C'   197  ADDRESS SPACE VECTOR TABLE
CVTGDA   EQU  X'230'   197  GLOBAL DATA AREA
CVTOPCTP EQU  X'25C'   178  SRM CONTROL TABLE (RMCT)
CVTFQCB  EQU  X'280'   198  FIRST QCB
CVTCSD   EQU  X'294'   199  COMMON SYSTEM DATA
CVTASMVT EQU  X'2C0'   199  AUX. STORAGE TABLE
CVTLCCAT EQU  X'300'   200  LOGICAL CPU ADDR TABLE
CVTMFCTL EQU  X'31C'   202  STGST FOR MF/1 OR RMF
CVTRLSTG EQU  X'358'   203  REAL STORAGE IN K
*
*        DCB
*
DCBEODAD EQU  X'20'    221 END OF FILE ADDRESS
*
*        DQE
*
DQEBLKAD EQU  X'08'    311 START OF BLOCK
DQELNTH  EQU  X'0C'    311 LENGTH OF BLOCK
*
*        ECCDB  MF/RMF CHANNEL EVENT DATA
*
ECCDSIOS EQU  X'08'        TOTAL SIO COUNT
ECCDBUSY EQU  X'0C'        TOTAL CHANNEL BUSY SAMPLES
*
*        ECCEDT  MF/RMF CHANNEL EVENT DATA TABLE
*
ECCECPEQ EQU  X'00'        POINTER TO ECCPE FOR CPUS
ECCECPUS EQU  X'09'        NUMBER OF CPUS
ECCESAMP EQU  X'0C'        TOTAL CHANNEL SAMPLES
*
*        ECCPE MF/RMF CPU STATUS DATA
*
ECCPCNUM EQU  X'02'        NUMBER OF CHANNEL ECCDB ENTRIES
ECCPCDBQ EQU  X'04'        POINTER TO ECCDB TABLE
LECCPE   EQU  X'14'        LENGTH OF ECCPE ENTRY
*
*        GDA
*
GDAFLAGS EQU  X'00'    349 SYSTEM FLAGS
GDASQASP EQU  X'18'    349 SQA SPQE
*
*        LCCAT
*
LCCAT00P EQU  X'00'    432 CPU 0 LCCA POINTER
LCCAT01P EQU  X'04'    432 CPU 1 LCCA POINTER
*
*        LCCA
*
LCCAWTIM EQU  X'268'   428 CPU ACCUMULATED WAIT
*
*        XCOM MESSAGE HEADER CONTROL BLOCKS
*
MHBNEXT  EQU  X'00'        NEXT MHB
MHBPID   EQU  X'04'        DESTINATION PATH ID FOR MESSAGE
MHBTID   EQU  X'08'        DESTINATION TERM ID FOR MESSAGE OR ZERO
MHBME#   EQU  X'0E'        CURRENT MESSAGES QUEUED TO THIS MHB (H)
*
*        OUCB
*
OUCBNPG  EQU  X'18'    492 PERFORMANCE GROUP
OUCBDMN  EQU  X'24'    493 PERFORMANCE DOMAIN
OUCBTMO  EQU  X'48'     18 TRANSACTION START TIME
OUCBWSS  EQU  X'4E'    493 WORKING SET PAGES AT LAST SWAP IN
OUCBIOSM EQU  X'6C'     19 SMF EXCP COUNT
OUCBPSS  EQU  X'70'     19 CPU PAGE SECONDS
*
*        SRM USER EXTENSION BLOCK
*
OUXBPIN  EQU  X'10'     23 INTERVAL PAGE IN
OUXBPOUT EQU  X'14'     23 INTERVAL PAGE OUT
*
*        PART/SART PAGE AND SWAP ACTIVITY TABLES
*
PARTSIZE EQU  X'04'    499 NUMBER OF DSNS
PARTDSNL EQU  X'18'    500 LIST OF DSN NAMES
PARTENTS EQU  X'50'    501 START OF PARTE/SARTE
LPARTE   EQU  64
LDSN     EQU  44
*
*        PARTE/SARTE DSN ENTRIES
*
PARETYPE EQU  X'08'    501 TYPE INDICATORS
PAREFLG1 EQU  X'09'    501 DAMAGE FLAG
PARESZSL EQU  X'10'    502 TOTAL SLOTS
PARESLTA EQU  X'14'    501 ALLOCATED SLOTS
PARERQTM EQU  X'38'    502 WEIGHT FACTOR BASED ON USAGE
PARERRCT EQU  X'18'    502 PERM. I/O ERROR COUNT
PAREUCBP EQU  X'2C'    502 UCB POINTER
*
*        XCOM PATH CONTROL BLOCK (SEE SR301000-SR303000)
*
PCBNEXT  EQU  X'00'        NEXT PCB IN CHAIN
PCBPID   EQU  X'04'        NAME OF PATH
PCBJOBN  EQU  X'14'        NAME OF JOB WHICH CREATED PATH
*
*        PFTE
*
PFTASID  EQU  X'00'    518 ASID OF OWNER
PFTVBN   EQU  X'02'    518 VBN (HIGH ORDER 12 BITS OF ADDR
PFTFLAG1 EQU  X'0C'    518 FIRST FLAG BYTE
PFTONAVQ EQU  X'80'          AVAILABLE
PFTLSQA  EQU  X'20'          LSQA/SQA
PFTLNGFX EQU  X'10'          LONG FIXED
PFTBADPG EQU  X'04'          BAD PAGE
PFTVRALC EQU  X'02'          V=R ALLOCATED
PFTFLAG2 EQU  X'0D'    518 SECOND FLAG BYTE
PFTOFFLN EQU  X'40'          OFFLINE
PFTIRRG  EQU  X'10'          VIO PAGE
LPFTE    EQU  16
*
*        PSA
*
FLCTRACE EQU  X'54'    526 TRACE TABLE HEADER POINTER
PSATOLD  EQU  X'224'   528 CURRENT ASCB
*
*        PVT
*
PVTPOOL  EQU  X'008'   541 REAL PAGE FRAMES AVAIL. NOW
PVTPFTP  EQU  X'00C'   541 APPARENT ORIGIN OF PFTE
PVTFPFN  EQU  X'010'   541 RBN TO FIRST PFTE
PVTLPFN  EQU  X'012'   541 RBN TO LAST  PFTE
PVTNPI   EQU  X'0F8'   545 DEMAND IN
PVTNPOUT EQU  X'0FC'   545 DEMAND OUT
PVTVAMI  EQU  X'100'   545 VIO IN
PVTVAMO  EQU  X'104'   545 VIO OUT
PVTSPIN  EQU  X'10C'   545 SWAP IN
PVTSPOUT EQU  X'110'   545 SWAP OUT
PVTCFMCT EQU  X'12C'   545 CURRENT PAGABLE CSA/LPA REAL PAGES
PVTCNTFX EQU  X'726'   548 TOTAL FIXED
PVTSQAFX EQU  X'728'   548 SQA FIXED
PVTCOMFX EQU  X'72A'   548 CSA FIXED
*
*        RCT RESOURCE CONTROL TABLE
*
RCCUICTL EQU  X'04'    138 UIC LOW
RCCUICTH EQU  X'06'    138 UIC HIGH
RCCCPUTL EQU  X'08'    138 CPU LOW
RCCCPUTH EQU  X'0A'    138 CPU HIGH
RCCPTRTL EQU  X'0C'    138 PAG LOW
RCCPTRTH EQU  X'0E'    138 PAG HIGH
RCCASMTL EQU  X'10'    138 ASM LOW
RCCASMTH EQU  X'12'    138 ASM HIGH
RCVUICA  EQU  X'26'    139 UIC AVG
RCVCPUA  EQU  X'28'    139 CPU AVG
RCVASMQA EQU  X'2C'    139 AMS AVG
RCVPTR   EQU  X'2E'    139 PAG AVG
*
*        SRM RESOURCE CONTROL TABLE
*
RMCTTBS  EQU  X'78'    138 SRM TOD BASE
LRMCT    EQU  X'1F8'   138 OFFSET TO RCT
*
*        PART/SART PAGE AND SWAP ACTIVITY TABLES
*
SARSIZE  EQU  X'04'    628 NUMBER OF DSNS
SARDSNL  EQU  X'18'    628 LIST OF DSN NAMES
SARSETSZ EQU  X'38'    628 SWAP SET SIZE
SARENTS  EQU  X'50'    628 START OF PARTE/SARTE
LSARTE   EQU  48
*
*        PARTE/SARTE DSN ENTRIES
*
SREFLG   EQU  X'09'    628 DAMAGE FLAG
SRETOTSL EQU  X'10'    628 TOTAL SLOTS
SREAVLSL EQU  X'14'    628 AVAIL. SLOTS
SRERRCT  EQU  X'18'    628 PERM. I/O ERROR COUNT
SREUCB   EQU  X'2C'    628 UCB POINTER
*
*        SMCA (VS2-R1 SYS. DATA AREAS PG 209 AND MACRO IEESMCA)
*
SMCAPSTA EQU  X'1E'    210 PRIMARY STATUS
SMCAASTA EQU  X'2E'    211 ALTERNATE STATUS
SMCADSCT EQU  X'74'    212 LOST SMF RECORD COUNT
*
*        SPQE
*
SPDQEPTR EQU  X'04'    658 DQE PTR
*
*        STGST  MF/RMF GLOBAL DATA AREA
*
STGSMMV  EQU  X'10'        POINTER TO STMMV MFROUTER CALL INFO TABLE
*
*        TTE - TRACE TABLE ENTRY
*
TTEPSW   EQU  X'00'        740 PSW
TTESIOCC EQU  X'00'        435 SIO CONDITION CODE
TTETYP   EQU  X'02'        740 FIRST 4 BITS OF THIRD BYTE PSW
TTECSW   EQU  X'08'        436 CHANNEL STATUS FOR SIO AND I/O
TTEIOUS  EQU  X'0C'        436.2 I/O UNIT STATUS (BIT 6-UC,7-UE)
TTEIOCS  EQU  X'0D'        436.2 I/O CHANNEL STATUS
TTEREGS  EQU  X'10'        435 PARMS DEPENDING ON TYPE
TTEASID  EQU  X'16'        740 ASID OF CURRENT TASK
TTETCBTM EQU  X'18'        435 TCB ADDRESS AND TIMER VALUE
TTETIME  EQU  X'1C'        434 TIME
LTTE     EQU  32
*
*        UCM
*
UCMRQNR  EQU  X'038'   781
*
*        UCB - UNIT CONTROL BLOCK
*
UCBSTAT  EQU  X'03'    747
UCBONLI   EQU  X'80'         ONLINE                                FCI*
UCBCHGS   EQU  X'40'         CHANGE STATUS                         FCI*
UCBRESV   EQU  X'20'                                               FCI*
UCBUNLD   EQU  X'10'         UNLOAD ISSUED                         FCI*
UCBALOC   EQU  X'08'         ALLOCATED                             FCI*
UCBPRES   EQU  X'04'         PERM RESIDENT                         FCI*
UCBSYSR   EQU  X'02'         SYSRES VOLUME                         FCI*
UCBCHAN  EQU  X'04'    747
UCBFLA   EQU  X'06'    747 FLAG BYTE A
UCBBSY     EQU  X'80'        DEVICE BUSY                           FCI*
UCBNRY     EQU  X'40'        NOT READY                             FCI*
UCBCUB     EQU  X'08'        CU BUSY                               FCI*
UCBCNT   EQU  X'09'        COUNT OF REQUESTS QUEUED TO UCB         FCI*
UCBNAME  EQU  X'0D'    749
UCBTYP   EQU  X'10'    749
UCBFLC   EQU  X'14'    750 FLAG BYTE C
UCBEXTPT EQU  X'14'    750 UCB COMMON EXTENSION
UCBVOLI  EQU  X'1C'    751
UCBSTAB  EQU  X'22'    751
UCBBPRV    EQU  X'10'       PRIVATE                                FCI*
UCBBPUB    EQU  X'08'       PUBLIC                                 FCI*
UCBBSTR    EQU  X'04'       STORAGE                                FCI*
UCBDMCT  EQU  X'23'    752
UCBMOUNT   EQU  X'80'       MOUNT PENDING                          FCI*
UCBFL4   EQU  X'25'                                                FCI*
UCBWDAV    EQU  X'40'       DAVV MOUNT WAITING                     FCI*
UCBUSER  EQU  X'26'         UCB USE COUNT                          FCI*
UCBXTN   EQU  X'2C'    754 UCB MAG. TAPE EXTENSION
*
*        FPC USER CVT FOR LOCAL MODIFICATIONS TO MVS
*
UCVTIPL  EQU  X'08'        TIME AND DATE OF IPL (TIME DEC)
UCVTXCVT EQU  X'84'        POINTER TO XCOM CVT (SEE SR301000)
*
*        UCB COMMON EXTENSION
*
UCBMFCNT EQU  X'0C'    759 MF TOTAL SIO COUNT
UCBASID  EQU  X'0E'    759 ASID OF LAST MEMORY ALLOCATED
*
*        UCB MAG. TAPE EXTENSION
*
UCBTREAD EQU  X'04'    760 TEMPORARY READ ERRORS
UCBTWRIT EQU  X'05'    760 TEMPORARY WRITE ERRORS
UCBSIO   EQU  X'06'    760 START I/O COUNT
UCBPREAD EQU  X'08'    761 PERMANENT READ ERRORS
UCBPWRIT EQU  X'09'    761 PERMANENT WRITE ERRORS
UCBNOISE EQU  X'0A'    761 NOISE RECORDS READ
UCBERG   EQU  X'0C'    761 INTER RECORD GAPS WRITTEN
UCBCLN   EQU  X'0E'    761 CLEANER ACTIONS
*
*        XCVT - XCOM CVT FOR CROSS MEMORY MESSAGE FACILITY
*
VTPCBH   EQU  X'0C'        POINTER TO PCB CHAIN OR ZERO
VTMHBH   EQU  X'10'        POINTER TO MHB CHAIN OR ZERO
VTRCUR   EQU  X'40'        CURRENT MESSAGES IN CSA QUEUE
VTRMAX   EQU  X'44'        MAXIMUM MESSAGES ALLOWED IN CSA QUEUE
VTRTOT   EQU  X'48'        TOTAL MESSAGES PUT SINCE IPL
         END
