XAMON    TITLE 'GU955020 MVSMON - MVS/XA DISPLAY MONITOR'
*          DATA SET GU955020   AT LEVEL 002 AS OF 04/25/86
*          DATA SET GU955020   AT LEVEL 001 AS OF 03/07/86
*          MEMBER SP2MON IN Z904.MONSRC. CHANGES/FIXES BY GYP    94213
*              DATE.     02/05/86.  REVISED FROM GU955010 FOR MVS/SP
*              AUTHOR.   DON HIGGINS
*              REMARKS.  MVSMON IS A COMMAND DRIVEN MVS DISPLAY MONITOR
*                        WHICH HAS THE FOLLOWING CHARACTERISTICS.
*
*                          1.  IT IS REENTRANT AND CAN BE PLACED IN
*                              PLPA FOR COMMON USE.
*                          2.  WHEN EXECUTED AS A SYSTEM TASK IT
*                              USES A WTOR/WTO INTERFACE TO THE
*                              MCS MASTER CONSOLE.
*                          3.  WHEN EXECUTED AS A TSO PROGRAM IT
*                              USES A TGET/TPUT INTERFACE TO TERMINAL.
*                          4.  WHEN EXECUTED AS A BATCH PROGRAM IT
*                              USES A GET/PUT INTERFACE TO SYSIN
*                              AND SYSPRINT QSAM FILES.
*                          5.  THE PROGRAM DOES NOT REQUIRE ANY
*                              AUTHORIZATION OR HOOKS.
*                          6.  IF A PARM IS PRESENT, IT IS EXECUTED
*                              AS A SINGLE INPUT COMMAND AND THEN THE
*                              PGM TERMINATES NORMALLY.  THIS IS FOR
*                              USE AS A STARTED TASK TO JUST GET A
*                              SINGLE RESPONSE WITHOUT USING WTOR.
*                              FOR EXAMPLE,  S MVSMON,,,PARM=DE
*                          7.  NOTE PROGRAM CONTAINS NO RLDS TO
*                              REDUCE I/O AND PROCESSING TIME FOR
*                              FETCH WHEN EXECUTING OUT OF PDS
*                              RATHER THAN PLPA.
*
*                          8.  SPIE PROGRAM INTERRUPTION HANDLER
*                              ATTEMPTS TO RECOVER FROM TEMPORARY
*                              INTERRUPTIONS CAUSED BY CONTROL
*                              BLOCK CHANGES DURING ACCESS.
*
*                          9.  STAX INTERRUPTION HANDLER ABORTS
*                              AND/OR SURPRESSES THE REMAINING
*                              OUTPUT FROM THE CURRENT COMMAND
*                              WHEN RUNNING IN TSO MODE.
*
*
*              REGISTERS.
*                  R0-R8 WORK REGISTERS
*                  R9    WORK AREA BASE 2
*                  R10   WORK AREA BASE 1
*                  R11   POINTER TO STACK FOR PERFORMS
*                  R12   BASE
*                  R13   SAVE AREA
*                  R14-R15 LINKAGE AND WORK
*              REFERENCES.
*                  LC28-1164 MVS/XA DEBUGGING HANDBOOK   VOL. 1
*                  LC28-1165 MVS/XA DEBUGGING HANDBOOK   VOL. 2
*                  LC28-1166 MVS/XA DEBUGGING HANDBOOK   VOL. 3
*                  LC28-1167 MVS/XA DEBUGGING HANDBOOK   VOL. 4
*                  LC28-1168 MVS/XA DEBUGGING HANDBOOK   VOL. 5
*              FILES.
*                  SYSIN - INPUT COMANDS FOR BATCH MODE ONLY
*                  SYSPRINT - OUTPUT FOR BATCH MODE ONLY
*              MAINTENANCE.
*
*  02/05/86 DSH - MAJOR MODIFICATION FOR MVS/XA WITH
*                 MANY CONTROL BLOCKS NOW ABOVE 16 MK LINE
*
*  04/21/86 DSH - CONVERT LOWER CASE INPUT TO UPPER CASE
*
*  12/19/86 DSH - INCLUDE MACROS TO ALLOW ASSEMBLY WITH ONLY
*                 SYS1.MACLIB REQUIRED FOR SYSTEM MACROS.
*                 (THIS IS FOR SHARE DISTRIBUTION)
*
*   7/11/94 GYP - PULLED OUT TO REFERENCE FIXED/CHANGED MACROS   94213
*                 USED CONDITIONAL ASSEMBLY (GBLC &LOCAL) FOR    94213
*                 FPC DEPENDENT GOODIES                          94213
*                 FIXED ERROR IN PAGE/SWAP LISTING (1 ENTRY ONLY)
*                 ADDED VECTOR TABLE FOR EXTERNAL I/O (EXHIBIT)  94213
*                 MISCELLANEOUS CORRECTIONS/ENHANCEMENTS         94213
*
*
********************************************************************
*  STEPS TO FOLLOW DURING MAINTENANCE
*    1.  ENTER COMMENTS ABOVE DESCRIBING CHANGE
*    2.  ADD HELP DOCUMENTATION INCLUDING NEWS COMMAND
*    3.  ADD BATCH TEST TO J.CNTL(MVSMON) FOR ANY COMMANDS
*    4.  COPY MVSMON TO FPC.CMDLIB AFTER TEST
*    5.  SUBMIT REQUEST TO MOVE GU955020 FROM WORK TO SOURCE
********************************************************************
         TITLE 'LOCAL MACROS'
         MACRO ,                                                   FCI*
         $DOMAINS   ,                                              FCI*
         GBLC  &LOCAL                                            93149
*                                                                  FCI*
* DOMAIN TABLE AND NAMES AT FAIRCHILD CAMERA                       FCI*
*                                                                  FCI*
$DOMST$  EQU   *                                                   FCI*
         $DOMGEN  0,'MVS SYSTEM'                                   FCI*
$DOMNLEN EQU   *-$DOMST$                                           FCI*
         AIF   ('&LOCAL' NE  'FCI').PIDOMN                       93149
         $DOMGEN  1,'BATCH'                                        FCI*
         $DOMGEN  2,'TSO-SHORT'                                    FCI*
         $DOMGEN  3,'TSO-LONG'                                     FCI*
         $DOMGEN  5,'LOW PRIO'                                     FCI*
         $DOMGEN  7,'IMS MSGRGN'                                   FCI*
         $DOMGEN  8,'SYS TASKS'                                    FCI*
         $DOMGEN  9,'MONITORS'                                     FCI*
         $DOMGEN 10,'SWAP-OUT'                                     FCI*
         MEXIT ,                                                 93149
.PIDOMN  $DOMGEN  1,'BATCH 1'                                    93149
         $DOMGEN  2,'BATCH 2'                                    93149
         $DOMGEN  3,'BATCH 3'                                    93149
         $DOMGEN  4,'TSO 1'                                      93149
         $DOMGEN  5,'TSO 2'                                      93149
         $DOMGEN  6,'TSO 3'                                      93149
         $DOMGEN  7,'START TASK'                                 93149
         $DOMGEN  8,'CICS/DB'                                    93149
         $DOMGEN  9,'SYS TASKS'                                  93149
         $DOMGEN 10,'MONITORS'                                   93149
         $DOMGEN 11,'SWAP-OUT'                                   93149
.COMOUT  MEND                                                      FCI*
         MACRO                                                     FCI*
         $DOMGEN  &NUMB,&TEXT                                      FCI*
         DC    AL2(&NUMB),CL12&TEXT                                FCI*
         MEND                                                      FCI*
*          DATA SET AM001300   AT LEVEL 005 AS OF 01/17/80
*          DATA SET AM001300   AT LEVEL 004 AS OF 01/26/78
         MACRO
         XA31
         LA    R15,*+10
         O     R15,=X'80000000'
         BSM 0,R15
         MEND
         MACRO
         XA24
         LA    R15,*+6
         BSM 0,R15
         MEND
         MACRO
         CVTUCB &R
.*       GIVEN A(UCB) IN R, RETURN BINARY UCB DEV. ADDR IN R0
         ZR    R15
         IC    R15,UCBNAME(&R)
         IF    (SH,R15,=XL2'00F0',M)
               AH   R15,=AL2(X'F0'-X'C1'+10)
         FI
         LR    R0,R15
         SLL   R0,4
         ZR    R15
         IC    R15,UCBNAME+1(&R)
         IF    (SH,R15,=XL2'00F0',M)
               AH   R15,=AL2(X'F0'-X'C1'+10)
         FI
         AR    R0,R15
         SLL   R0,4
         ZR    R15
         IC    R15,UCBNAME+2(&R)
         IF    (SH,R15,=XL2'00F0',M)
               AH   R15,=AL2(X'F0'-X'C1'+10)
         FI
         AR    R0,R15
         MEND
         MACRO
&NM      WRITE &MSG                                              94213
.*       WRITE LITERAL MESSAGE
         AIF   ('&MSG' EQ '').PRVMSG                             94213
         AIF   ('&MSG'(1,1) NE '''').NONLIT                      94213
&NM      LA    R0,=CL80&MSG                                      94213
         LNR   R0,R0         SIGNAL LITERAL                      94213
         PM    PUT
         MEXIT ,                                                 94213
.PRVMSG  ANOP  ,                                                 94213
&NM      PM    PUT                                               94213
.NONLIT  ANOP  ,                                                 94213
&NM      LA    R0,&MSG                                           94213
         PM    PUT                                               94213
         MEND
         MACRO
         EM    &FIELD
.*       EDIT MEMORY IN BYTES IN R0 TO 7 DIGIT MEMORY IN K
         SRL   R0,10
         CVD   R0,PWORK
         EDIT  TO=&FIELD,FROM=PWORK+4,MASK=' ZZZZZ99'
         MEND
         MACRO
         EMK   &FIELD
.*       EDIT MEMORY IN K IN R0 TO 7 DIGIT MEMORY IN K
         CVD   R0,PWORK
         EDIT  TO=&FIELD,FROM=PWORK+4,MASK=' ZZZZZ99'
         MEND
         MACRO
         EMF   &FIELD
.*       EDIT MEMORY IN FRAMES IN R0 TO 7 DIGIT MEMORY IN K
         SLL   R0,2
         CVD   R0,PWORK
         EDIT  TO=&FIELD,FROM=PWORK+4,MASK=' ZZZZZ99'
         MEND
         MACRO
         IW    &W
.*       INCREMENT WORD BINARY COUNTER BY ONE
         LA    R0,1                                              94213
         A     R0,&W                                             94213
         ST    R0,&W
         MEND
*          DATA SET AM010500   AT LEVEL 002 AS OF 05/23/76
*
* MAINLINE
*
         PRINT NOGEN
         GBLC  &SYSSPLV                                          94213
         GBLC  &LOCAL                                            94213
         GBLB  &MVSXA        USED BY MACROS                      94213
         TITLE 'MAINLINE'
         SPLEVEL SET         MATCH ASSEMBLY MACLIB               94213
MVSMON   SUBENTRY BASES=(R12),RENT=YES,STACK=10,                       X
               PSTACK=R11,PSAVE=NO,PCHECK=NO,PBASE=YES
         AIF   ('&SYSSPLV' LT '2').NOMODE                        94213
MVSMON   AMODE 31            NEED ACCESS TO SYSTEM CONTROL BLOCKS
MVSMON   RMODE 24            BUT ALSO CODE BELOW THE LINE        94213
&MVSXA   SETB  1                                                 94213
         LA    R12,0(R12)   CLEAR HIGH BYTE
         LA    R13,0(R13)   CLEAR HIGH BYTE
.NOMODE  LR    R4,R1             SAVE PARM FOR GET
         XA31
         PM    INIT              INITIALIZE WORK AREA
         XA24
         USING WORK,R10
         USING WORK+4095,R9
         LA    R15,PGMCHK3
         STM   R0,R15,PGMCHKSA   SAVE MAINLINE REGS FOR RESTART
         SPIE  PGMCHK1,MF=(E,SPIELIST)
         ST    R1,SAVEPICA
PGMCHK4  TAG                 RESTART POINT FOLLOWING PGM CHECK
         XA31
         PM    GET
         DODO  WHILE,(CLI,EOF,TRUE,NE)
               PM   PROCESS
               IF   (CLI,EOF,TRUE,NE)
                    PM   GET
               FI
         OD
         L     R1,SAVEPICA
         XA24
         SPIE  MF=(E,(1))
         XA31
         WRITE 'MVSMON ENDED'
         IF    (CLI,MODE,TSOMODE,EQ)
               STAX
         FI
         IF    (CLI,MODE,IOMODE,EQ)
               XA24
               CLOSE (SYSIN,,SYSPRINT),MF=(E,DCBLIST)
               XA31
         FI
         ICM   R1,15,RCTABPTR  GETMAINED?                        94213
         BZ    QUITNRCT                                          94213
         L     R2,CVTPTR                                         94213
         L     R3,CVTASCVT(R2)
         L     R4,ASVTMAXU(R3)
         MH    R4,=AL2(L'RCT)
         FREEMAIN   R,LV=(R4),A=(1)                              94213
QUITNRCT L     R0,=A(LWORK)                                      94213
         FREEMAIN R,LV=(0),A=(R10)  FREE WORK AREA               94213
         SUBEXIT
PGMCHK3  TAG             THIRD STAGE OF PGMCHK PROCESSING
*
*        NOTE LM IN PGMCHK2 RESETS PSTACK R11 TO MAINLINE LEVEL
*
         ZR    R1
         ICM   R1,7,PGMPSW+5
         LA    R0,0(R12)
         SR    R1,R0
         AAI   R1,8
         ST    R1,PWORK
         UNPK  DWORK,PWORK+1(4)
         TR    DWORK(6),HEX-240
         MVC   DPGMCHK,DWORK
         LA    R0,PGMMSG
         PM    PUT        DISPLAY PGMCHK RELATIVE ADDRESS
         AIF   ('&LOCAL' NE 'FPC').NODON                         94213
         WRITE 'IF PROBLEM PERSISTS CALL DON AT (813) 866-4145'
.NODON   B     PGMCHK4                                           94213
         TITLE 'INIT - INITIALIZE MVSMON'
INIT     PENTRY
         FINDCDE EP=MVSMONVT  SEE IF INVOKED WITH VECTOR TABLE   94213
         IF (LTR,R5,R1,NZ)    TEST RETURN AND SAVE ADDRESS       94213
             L  R5,CDENTPT(,R5)   LOAD VECTOR TABLE ADDRESS      94213
         FI                                                      94213
         L     R0,=A(LWORK)
         GETMAIN RC,LV=(0)                                       94213
         BXH   R15,R15,INITNOST                                  94213
         LR    R10,R1           R10=A(USER WORK AREA)
         L     R1,4(R13)
         L     R0,16(R1)        R0=A(MVSMON FROM PREVIOUS SAVE)
         AL    R0,=A(WORK-MVSMON)
         L     R1,=A(LWORK)
         LR    R2,R10
         LR    R3,R1
         MVCL  R2,R0              INITIALIZE WORK AREA
         USING WORK,R10
         LA    R9,4095(R10)
         USING WORK+4095,R9
         ST    R4,APARM
         L     R1,4(R13)
         L     R0,16(R1)
         AL    R0,=A(GETEOF-MVSMON)
         ST    R0,SYSIN+DCBEODAD
         L     R2,PSATOLD
         IF  (LTR,R5,R5,NZ)  VECTOR TABLE MODE ?                 94213
               MVI   MODE,MPSMODE   YES                          94213
               L     R0,4(,R5)      GET PUT ROUTINE ADDRESS      94213
               ST    R0,ATPPUT      CREAM IT                     94213
               ST    R10,0(,R5)     RETURN WORK AREA ADDRESS     94213
*?*            LA    R0,PFKTAB      GIVE CALLER ACCESS TO PFKTAB 94213
*?*            ST    R0,8(,R5)                                   94213
         ELSEIF  (ICM,R1,15,ASCBTSB(R2),NZ)                      94213
               MVI  MODE,TSOMODE
               STAX STAXRTN,OBUF=(STAXMSG,80),MF=(E,STAXLIST)
         ELSEIF (ICM,R1,15,ASCBJBNI(R2),Z)
               MVI  MODE,WTOMODE
         ELSE
               XA24
               MVI  MODE,IOMODE
               OPEN  (SYSIN,,SYSPRINT,(OUTPUT)),MF=(E,DCBLIST)
               XA31
         FI
         L     R1,CVTPTR                                         94213
         A     R1,=A(CVTPRODN)
         MVC   DSCP,0(R1)
         LA    R0,TITLE1
         PM    PUT
         IF  (CLI,MODE,MPSMODE,NE)                               94213
              LA    R0,TITLE2
              PM    PUT
              FI                                                 94213
         L     R2,CVTPTR                                         94213
         L     R3,CVTASCVT(R2)
         L     R4,ASVTMAXU(R3)
         MH    R4,=AL2(L'RCT)
         LR    R0,R4
         GETMAIN    RC,LV=(0)                                    94213
         BXH   R15,R15,INITNOST                                  94213
         ST    R1,RCTABPTR      SAVE PTR TO CPU RATE TABLE FOR ASCBS
         LR    R0,R1
         LR    R1,R4
         ZR    R14
         ZR    R15
         MVCL  R0,R14
         PM    INTERVAL
         IF    (CLI,MODE,TSOMODE,EQ)
               PM   DJ
         FI
         PEXIT
INITNOST ABEND 804           NO ROOM AT THE INN                  94213
         TITLE 'PROCESS'
PROCESS  PENTRY
         DOCASE LINE
           CASE C'D'
                PM   DISPLAY
           ESAC
           CASE C'E'
                MVI  EOF,TRUE
           ESAC
           CASE C'H' HELP COMMANDS
                DOCASE LINE+1
                  CASE C'C'  COMMANDS BY TYPE
                    PM HC
                  ESAC
                  CASE C'D'  DETAIL ALPHABETICAL LIST
                    PM HD
                  ESAC
                  CASE C'M'  HELP MODE
                    PM HM
                  ESAC
                  CASE C'S' HELP SUMMARY
                    PM HS
                  ESAC
                  CASE ELSE
                    PM HELP
                  ESAC
                ESACOD
           ESAC
           CASE C'I' HOLD/RELEASE INTERVAL CALCULATIONS
                PM   IHOLD
           ESAC
           CASE C'M'         MEMORY USE BY DOMAIN                94213
                PM   MEMORY                                      94213
           ESAC                                                  94213
           CASE C'P'  DISPLAY PAGE DATA SET INFO.
                PM    PDSNINFO
           ESAC
           CASE C'R'  DISPLAY CPU RATES BY SYSTEM COMPONENT
                PM    RATES
           ESAC
           CASE C'S' DISPLAY SRM STATUS
                PM   SRM
           ESAC
           CASE C'T'
                PM   TIME
           ESAC
           CASE C'W' WAIT FOR INTERVAL
                PM   WAIT
           ESAC
           CASE C'X'
                PM   XCOMINFO
           ESAC
           CASE ELSE
                PM   UNKNOWN
           ESAC
         ESACOD
         PEXIT
         TITLE 'IHOLD - HOLD/RELEASE INTERVAL UPDATING'
IHOLD    PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'I - HOLD OR RELEASE INTERVAL UPDATING'
               WRITE BLANKS                                      94213
               WRITE 'THIS COMMAND ALLOWS EXECUTION OF MULTIPLE'
               WRITE 'INTERVAL BASED COMMANDS USING SAME INTERVAL'
               WRITE 'DATA'
               PEXIT
         FI
         IF  (CLI,INTHOLD,FALSE,EQ)
             MVI  INTHOLD,TRUE
             WRITE 'INTERVAL CALCULATION HELD'
         ELSE
             MVI  INTHOLD,FALSE
             WRITE 'INTERVAL CALCULATION RELEASED'
         FI
         PEXIT
         TITLE 'INTERVAL - PERFORM ALL INTERVAL CALCULATIONS'
INTERVAL PENTRY
         IF    (CLI,INTDONE,TRUE,EQ)
               PEXIT
         FI
         MVI   INTDONE,TRUE
         IF    (CLI,INTHOLD,TRUE,EQ)
               LA   R0,INTMSG
               PM   PUT
               PEXIT
         FI
         TIME  BIN
         LR    R1,R0
         S     R1,INTLAST
         IF    (CL,R1,=F'100',L)
               STIMER WAIT,BINTVL==F'100'
               TIME   BIN
               LR     R1,R0
               S      R1,INTLAST
         FI
         ST    R1,INTBIN
         ST    R0,INTLAST
         ZR    R0
         D     R0,=F'100'
         CVD   R1,PWORK
         EDIT  TO=DINTSEC,FROM=PWORK+5,MASK=' ZZZ99'
         TIME  DEC
         ST    R0,PWORK
         EDIT  TO=DINTEND,FROM=PWORK,MASK=' 99.99'
         PM    DCPU1                                             94213
         PM    DP1                                               94213
         PM    RC1
         IF    (CLC,INTBIN,INTLAST,NE)
               LA    R0,INTMSG
               PM    PUT
         FI
         PEXIT
         TITLE 'DISPLAY ROUTINE'
DISPLAY  PENTRY
         DOCASE LINE+1
               CASE C'A' DISPLAY ONLY ACTIVE JOBS, STCS, AND USERS
                    PM   DA
               ESAC
               CASE C'B' DISPLAY BASIC SYSTEM INFO.
                    PM   DB
               ESAC
               CASE C'C' DISPLAY CPU AND CHANNEL USAGE
                    PM   DC
               ESAC
               CASE C'D' DISPLAY DISKS
                    PM   DD
               ESAC
               CASE C'E' DISPLAY POSSIBLE ERROR CONDITIONS
                    PM   DE
               ESAC
               CASE C'J' DISPLAY BATCH JOBS
                    PM   DJ
               ESAC
               CASE C'K' DISPLAY ACTIVE LPA MODULES AND USAGE
                    PM   DK
               ESAC
               CASE C'L' DISPLAY COMMUNICATION LINES STATUS
                    PM   DL
               ESAC
               CASE C'M' DISPLAY MOUNTS
                    PM   DM
               ESAC
               CASE C'N' DISPLAY NUMBERS OF THINGS
                    PM   DN
               ESAC
               CASE C'P' DISPLAY PAGING INFORMATION              94213
                    PM   DP                                      94213
               ESAC                                              94213
               CASE C'R' DISPLAY WTOR REQUESTSAND MOUNTS
                    PM   DR
               ESAC
               CASE C'S' DISPLAY SYSTEM TASKS
                    PM   DS
               ESAC
               CASE C'T' DISPLAY TAPES
                    PM   DT
               ESAC
               CASE C'U' DISPLAY TSO USERS
                    PM   DU
               ESAC
               CASE C'V' DISPLAY VIRTUAL AND REAL STORAGE STATUS
                    PM   DV
               ESAC
               CASE C'W' DISPLAY WAITING JOBS AND TSO USERS
                    PM   DW
               ESAC
               CASE ELSE
                    PM   UNKNOWN
               ESAC
         ESACOD
         PEXIT
         TITLE 'HELP - DISPLAY HELPFUL INFO'
HELP     PENTRY
         IF   (CLI,HMODE,FALSE,EQ)
              PM  HS
         ELSE
              PM  HC
         FI
         PEXIT
         TITLE 'HS - HELP SUMMARY'
HS       PENTRY
         WRITE 'HS - HELP SUMMARY'
         WRITE BLANKS                                            94213
         WRITE 'MVSMON IS A REAL TIME MVS OPERATING SYSTEM MONITOR.  '
         WRITE BLANKS                                            94213
         WRITE ' HM - SET/RESET HELP MODE                            '
         WRITE ' HC - SUMMARIZE COMMANDS BY TYPE OF INFORMATION      '
         WRITE ' HD - LIST COMMANDS ALPHABETICALLY                   '
         WRITE BLANKS                                            94213
         WRITE 'IN HELP MODE, ENTERING ANY COMMAND WILL PROVIDE HELP '
         WRITE 'INFORMATION FOR THAT COMMAND.  IN HELP MODE, THE HELP'
         WRITE 'COMMAND WILL LIST COMMANDS BY TYPE (HC COMMAND).     '
         WRITE 'THE HD COMMAND WILL LIST ALL COMMANDS ALPHABETICALLY.'
         WRITE 'FOLLOWING KEYS ARE PERMANENTLY DEFINED AS FOLLOWS:   '
         WRITE BLANKS                                            94213
         WRITE ' PA1        STOP CURRENT COMMAND                     '
         WRITE ' PA2        STOP MVSMON                              '
         PEXIT
         TITLE 'HD - DETAIL LIST OF COMMANDS ALPHABETICALLY'
HD       PENTRY
         WRITE 'HD - DETAIL LIST OF COMMANDS ALPHABETICALLY'
         WRITE BLANKS                                            94213
         WRITE '     DA - DISPLAY ALL ACTIVE TASKS                   '
         WRITE '     DB - DISPLAY BASIC SYSTEM STATUS                '
         WRITE '     DC - DISPLAY CPU AND CHANNEL STATUS             '
         WRITE '     DD - DISPLAY ONLINE DISKS                       '
         WRITE '     DE - DISPLAY POSSIBLE ERROR CONDITIONS          '
         WRITE '     DJ - DISPLAY BATCH JOBS ONLY                    '
         WRITE '     DL - DISPLAY COMMUNICATION LINES STATUS         '
         WRITE '     DK - DISPLAY ACTIVE LPA MODULES AND USAGE       '
         WRITE '     DM - DISPLAY PENDING MOUNTS                     '
         WRITE '     DN - DISPLAY NUMBERS OF THINGS                  '
         WRITE '     DP - DISPLAY PAGING STATISTICS                  '
         WRITE '     DR - DISPLAY PENDING OPERATOR REPLIES           '
         WRITE '     DS - DISPLAY SYSTEM TASKS ONLY                  '
         WRITE '     DT - DISPLAY TAPES                              '
         WRITE '     DV - DISPLAY VIRTUAL AND REAL STORAGE STATUS    '
         WRITE '     DU - DISPLAY TSO USERS ONLY                     '
         WRITE '     DW - DISPLAY WAITING TASKS                      '
         WRITE '     E  - END                                        '
         WRITE '     H  - DISPLAY HELP INFORMATION                   '
         WRITE '     HC - LIST COMMANDS BY CONTROL BLOCK TYPE        '
         WRITE '     HD - DETAIL LIST OF ALL COMMANDS ALPHABETICALLY '
         WRITE '     HM - TURN HELP MODE ON/OFF                      '
         WRITE '     HS - HELP SUMMARY                               '
         WRITE '     I  - HOLD/RELEASE INTERVAL CALCULATIONS         '
         WRITE '     P  - DISPLAY PAGE DATA SET INFO.                '
         WRITE '     R  - DISPLAY CPU AND MEMORY BY DOMAIN           '
         WRITE '     S  - DISPLAY SRM UIC, CPU, PAGING, AND ASMQ     '
         WRITE '     T  - TIME AND DATE NOW AND AT LAST IPL          '
         WRITE '     W  - WAIT FOR SPECIFIED NUMBER OF SECONDS       '
         AIF   ('&LOCAL' NE 'FPC').NOWRX                         94213
         WRITE '     X  - DISPLAY XCOM CROSS MEMORY COMM. INFO.      '
.NOWRX   PEXIT                                                   94213
         TITLE 'HC - LIST COMMANDS BY CONTROL BLOCKS USED'
HC       PENTRY
         WRITE 'HC - LIST COMMANDS BY CONTROL BLOCK USED             '
         WRITE BLANKS                                            94213
         WRITE 'CONTROL BLOCKS   RESOURCE TYPE   COMMANDS            '
         WRITE BLANKS                                            94213
         WRITE '  UCVT           TIME,XCOM       T,X,DB              '
         WRITE '  ASVT/ASCB      TASKS           DA,DJ,DU,DS,DE,R,   '
         WRITE '                                 DN,DB               '
         WRITE '  UCB            DEVICES         DN,DE,DM,DL,DT,     '
         WRITE '                                 DD,DW,DB            '
         WRITE '  RIT/PFTE       MEMORY          DV,R                '
         WRITE '  UCM            REPLIES         DR,DB               '
         WRITE '  CMCT           CHANNELS        DC,DB               '
         WRITE '  CDE            LINK PACK AREA  DK                  '
         WRITE '  PARTE/SARTE    PAGE/SWAP       P                   '
         WRITE '  RMCT           SRM             S                   '
         WRITE '                 HELP            H,HC,HM,HK          '
         WRITE '                 CONTROL         E,I,W               '
         PEXIT
         TITLE 'HM - TURN HELP MODE ON/OFF'
HM       PENTRY
         IF   (CLI,HMODE,TRUE,EQ)
              WRITE 'HELP MODE OFF'
              MVI  HMODE,FALSE
         ELSE
              WRITE 'HELP MODE ON'
              MVI  HMODE,TRUE
         FI
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE BLANKS                                      94213
               WRITE 'HM - TURN HELP MODE ON OR OFF                '
               WRITE '     WHEN THE HELP MODE IS ON, THE DETAIL    '
               WRITE '     HELP INFORMATION FOR EACH COMMAND WILL  '
               WRITE '     BE DISPLAYED INSTEAD OF EXECUTING THE   '
               WRITE '     COMMAND. HELP IN HELP MODE WILL LIST THE'
               WRITE '     COMMANDS AVAILABLE.                     '
               PEXIT
         FI
         PEXIT
         TITLE 'SRM - DISPLAY SRM STATUS'
SRM      PENTRY
         WRITE 'SRM - SYSTEM RESOURCE MANAGER STATUS DISPLAY'
         WRITE BLANKS                                            94213
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'UIC - UNREFERENCED INTERVAL COUNT FOR PAGES'
               WRITE 'CPU - CENTRAL PROCESSOR PERCENT UTILIZATION'
               WRITE 'PAG - PAGING RATE PER SECOND'
               WRITE 'ASM - AUXILIARY STORAGE MANAGER REQUEST QUEUE'
               WRITE BLANKS                                      94213
               WRITE 'WHEN ANY OF THE ABOVE VARIABLES EXCEEDS THE'
               WRITE 'MAXIMUM, THE SRM SELECTS A TASK TO SWAP OUT'
               WRITE 'UNTIL THE ACTIVATING VARIABLE DROPS TO THE'
               WRITE 'LOW LIMIT AGAIN.'
               PEXIT
         FI
         L     R2,CVTPTR                                         94213
         L     R2,CVTOPCTP(R2)
         L     R2,RMCTRCT(R2)   NEW WITH MVS/SP3
         MVC   DSTYP,=C'UIC'
         LH    R0,RCCUICTL(R2)
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCUICTH(R2)
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVUICA(R2)
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         MVC   DSTYP,=C'CPU'
         LH    R0,RCCCPUTL(R2)
         SRL   R0,4
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCCPUTH(R2)
         SRL   R0,4
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVCPUA(R2)
         SRL   R0,4
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         MVC   DSTYP,=C'PAG'
         LH    R0,RCCPTRTL(R2)
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCPTRTH(R2)
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVPTR(R2)
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         MVC   DSTYP,=C'ASM'
         LH    R0,RCCASMTL(R2)
         CVD   R0,PWORK
         EDIT  TO=DSLOW,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCCASMTH(R2)
         CVD   R0,PWORK
         EDIT  TO=DSHIGH,FROM=PWORK+6,MASK=' Z99'
         LH    R0,RCVASMQA(R2)
         CVD   R0,PWORK
         EDIT  TO=DSAVG,FROM=PWORK+6,MASK=' Z99'
         LA    R0,SLINE1
         PM    PUT
         PEXIT
         TITLE 'XCOMINFO - DISPLAY XCOM CROSS MEMORY INFO'
XCOMINFO PENTRY
         AIF   ('&LOCAL' EQ 'FPC').DOXCMD                        94213
         WRITE 'XCOM - NOT IMPLEMENTED ON THIS SYSTEM'           94213
         AGO   .DOXCOM                                           94213
.DOXCMD  IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'XCOM - STATUS SUMMARY ON CROSS MEMORY'
               WRITE '       COMMUNICATIONS FACILITY'
               WRITE BLANKS                                      94213
               WRITE 'THIS IS A USER INSTALLED FACILITY TO MESSAGE'
               WRITE 'SWITCH BETWEEN ADDRESS SPACES.'
               WRITE BLANKS                                      94213
               WRITE 'RCUR  - CURRENT MESSAGES QUEUED IN CSA'
               WRITE 'RMAX  - MAXIMUM ALLOWED IN CSA'
               WRITE 'RTOT  - TOTAL MESSAGES SENT SINCE LAST IPL'
               WRITE BLANKS                                      94213
               WRITE 'PID   - DESTINATION PATH NAME'
               WRITE 'TID   - SOURCE PATH NAME'
               WRITE 'ME#   - NUMBER OF MESSAGES FOR THIS PATH'
               PEXIT
         FI
*
*  SEE SR301000 - SR305000, CICS, AND GU640001 FOR MORE
*  INFORMATION ON XCOM.
*
         L     R2,CVTPTR                                         94213
         L     R2,CVTUSER(R2)
         IF    (LTR,R2,R2,Z)
               WRITE 'XCOM - NO USER CVT DEFINED'
               PEXIT
         FI
         L     R2,UCVTXCVT(R2)
         IF    (LTR,R2,R2,Z)
               WRITE 'XCOM - NO XCVT DEFINED'
               PEXIT
         FI
         L     R0,VTRCUR(R2)
         CVD   R0,PWORK
         EDIT  TO=DRCUR,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,VTRMAX(R2)
         CVD   R0,PWORK
         EDIT  TO=DRMAX,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,VTRTOT(R2)
         CVD   R0,PWORK
         EDIT  TO=DRTOT,FROM=PWORK+5,MASK=' ZZ,Z99'
         LA    R0,DXCOM1
         PM    PUT
         WRITE BLANKS                                            94213
         L     R3,VTPCBH(R2)
         IF    (LTR,R3,R3,Z)
               WRITE 'XCOM - NO PATHS DEFINED AT THIS TIME'
         ELSE
               DODO  WHILE,(LTR,R3,R3,NZ)
                     MVC  DPATH,PCBPID(R3)
                     MVC  DPATHJOB,PCBJOBN(R3)
                     LA   R0,DXCOM2
                     PM   PUT
                     L    R3,PCBNEXT(R3)
               OD
         FI
         WRITE BLANKS                                            94213
         L     R3,VTMHBH(R2)
         IF    (LTR,R3,R3,Z)
               WRITE 'XCOM - NO MESSAGES QUEUED AT THIS TIME'
         ELSE
               DODO  WHILE,(LTR,R3,R3,NZ)
                     MVC  DPID,MHBPID(R3)
                     IF   (CLC,MHBTID(4,R3),=4X'00',NE)
                          MVC  DTID,MHBTID(R3)
                     ELSE
                          MVC  DTID,=CL4'NONE'
                     FI
                     LH   R0,MHBME#(R3)
                     CVD  R0,PWORK
                     EDIT TO=DME#,FROM=PWORK+5,MASK=' ZZ,Z99'
                     LA   R0,DXCOM3
                     PM   PUT
                     L    R3,MHBNEXT(R3)
               OD
         FI
         WRITE BLANKS                                            94213
         MVC   LINE(20),=CL20'DQ,XCOMPATH'
.DOXCOM  PEXIT                                                   94213
         TITLE 'UNKNOWN -UNKNOWN REQUEST'
UNKNOWN PENTRY
         MVC   LINE+5(74),BLANKS                                 94213
         MVC   LINE+6(27),=C'IS NOT A RECOGNIZED COMMAND'        94213
         WRITE LINE                                              94213
         WRITE 'FOR HELP ENTER HELP OR PFK1'                     94213
         PEXIT
         TITLE 'DA - DISPLAY ACTIVE JOBS, USERS, AND SYSTEM TASKS'
DA       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DA - DISPLAY ACTIVE TASKS, JOBS, AND USERS'
               WRITE '     WITH CPU AND IOC OVER 1% IN LINTERVAL'
               WRITE 'DA,XX - CHANGE DEFAULT FROM 1% TO XX%'
               PM    DAHELP
               PEXIT
         FI
         PM    INTERVAL
         ZAP   PMINPCT,=P'1'
         IF    (CLI,LINE+2,C',',EQ)
               PACK  PMINPCT,LINE+3(2)
               OI    PMINPCT+L'PMINPCT-1,X'0F'
         FI
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBTSB(R5),NZ)
                         PM   DU1
                    ELSEIF (ICM,R1,15,ASCBJBNI(R5),NZ)
                         PM   DJ1
                    ELSE
                         PM   DS1
                    FI
                    IF   (CP,PTOTPCT,PMINPCT,NL)
                         LA   R0,DALINE3
                         PM   PUT
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DAHELP - HELP INFO ON COMMON TASK, JOB, AND USER'
DAHELP   PENTRY
         WRITE BLANKS                                            94213
         WRITE 'JOBNAME  - NAME OF JOB, TSO USER, OR STARTED TASK'
         WRITE 'STEPNAME - NAME OF JOB STEP, TSO, OR STC'
         WRITE 'CL       - CLASS FOR PERFORMANCE GROUP'
         WRITE 'DMN      - DOMAIN FOR PERFORMANCE GROUP'
         WRITE 'DSP      - DISPATCHING PRIORITY 0-256'
         WRITE 'CPU %    - PERCENT CPU UTILIZATION IN LAST INTERVAL'
         WRITE 'IOC %    - PERCENT I/O CONNECT     IN LAST INTERVAL'
         WRITE 'MEM %    - PERCENT REAL MEMORY UTILIZATION'
         WRITE 'T-CPU    - TOTAL TCB AND SRB CPU TIME IN SECONDS'
         WRITE 'T-IOC    - TOTAL I/O CONNECT TIME IN SECONDS'
         WRITE 'T-MEM    - TOTAL CURRENT REAL MEMORY IN USE'
         WRITE 'T-XEQ    - TOTAL ELAPSED JOB OR TSO EXECUTION TIME'
         PEXIT
         TITLE 'DB - DISPLAY BASIC SYSTEM STATUS'
DB       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DB - DISPLAY BASIC SYSTEM STATUS'
               WRITE BLANKS                                      94213
               WRITE 'CURRENT TIME AND DATE HH.MM.SS.TH  YY.DDD'
               WRITE 'TIME AND DATE OF LAST IPL'
               WRITE BLANKS                                      94213
               WRITE 'NUMBER OF ACTIVE TASKS AND DEVICES IN SYSTEM'
               WRITE BLANKS                                      94213
               WRITE 'OUTSTANDING DISK AND TAPE MOUNTS IF ANY'
               WRITE 'NUMBER OF OUTSTANDING OPERATIOR REPLIES'
               WRITE 'SYSTEM ERRORS IF ANY'
               WRITE 'ADDRESS SPACE ERRORS IF ANY'
               WRITE 'DEVICE ERRORS IF ANY'
               PEXIT
         FI
         PM    TIME
         WRITE BLANKS                                            94213
         PM    DN
         WRITE BLANKS                                            94213
         PM    DP                                                94213
         WRITE BLANKS                                            94213
         PM    DC                                                94213
         WRITE BLANKS                                            94213
         PM    DM
         PM    DR
         PM    DES
         PM    DEA
         PM    DEU
         PEXIT
         TITLE 'DC - DISPLAY CPU USAGE'
DC       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DC - DISPLAY CPU AND CHANNEL UTILIZATION'  94213
               WRITE BLANKS                                      94213
               WRITE 'CPU AND CHANNEL PERCENT BUSY'              94213
               WRITE BLANKS                                      94213
               WRITE 'NOTE PERCENT CHANNEL BUSY IS BASED ON '
               WRITE 'TEST CHANNEL SAMPLES DURING LAST INTERVAL'
               WRITE BLANKS                                      94213
               WRITE 'BUSY IS NOT MEANINGFUL FOR MUX CHANNELS'
               PEXIT
         FI
         PM    INTERVAL                                          94213
         PM    DCPU2                                             94213
         PM    DC1
         PEXIT
DCPU1    PENTRY                                                  94213
         MODESET KEY=ZERO,MODE=SUP  GET PRIVIED                  93148
         L     R2,CVTPTR                                         94213
         L     R3,CVTCSD(R2)                                     94213
         SLR   R15,R15                                           93148
         ICM   R15,B'1100',CSDCPUAL(R3)  GET ALLOCATED CPU MASK  93148
         LA    R3,DCSCPU0W   POINT TO FIRST CPU COUNTER          93148
         SRL   R15,1         PREPARE FOR BXH                     93148
         LA    R14,16        16 CPUS IN CURRENT DESIGN           93148
         OR    R15,R14       MAKE AT LEAST ONE LOW NON-ZERO      93148
         L     R4,CVTLCCAT(R2)                                   94213
         SLR   R2,R2         CLEAR CPU COUNTER                   93148
DC1CPLP  BXH   R15,R15,DC1CPUP  BUMP TO NEXT CPU IF THIS NOT AVAIL
         LA    R2,1(,R2)     COUNT CPUS                          93148
         L     R5,LCCAT00P(R4)                                   93148
         LM    R0,R1,LCCAWTIM(R5)                                93148
         SRDL  R0,12                                             93148
         D     R0,=F'10000'                                      93148
         LR    R6,R1         R6=ENDINGWAITTIMEIN0.01             93148
         S     R6,DCSCPU0W-DCSCPU0W(,R3)  R6=INTERVALWAIT TIME   93148
         ST    R1,DCSCPU0W-DCSCPU0W(,R3)  SAVE ENDING WAIT TIME ACCUM.
         L     R1,INTBIN                                         93148
         SR    R1,R6                                             93148
         ST    R1,DCSCPU0I-DCSCPU0W(,R3)  SAVE INTERVAL CPU TIME 93148
DC1CPUP  LA    R4,LCCAT01P-LCCAT00P(,R4)  NEXT CPU POINTER       93148
         LA    R3,DCSCPU1W-DCSCPU0W(,R3)  NEXT WORK AREA         93148
         BCT   R14,DC1CPLP                                       93148
         ST    R2,NUMCPU     COUNT ACTIVE CPUS                   93148
         MODESET KEY=NZERO,MODE=PROB  RESTORE NORMALCY (?)       93148
    PEXIT      ,                                                 93148
         TITLE 'DCPU - DISPLAY CPU DATA FOR INTERVAL'            94213
DCPU2    PENTRY                                                  94213
         LA    R3,16         TOTAL NUMBER OF PROCESSORS POSSIBLE 93148
         LA    R4,DCSCPU0W   POINT TO FIRST COUNTER              93148
         ZR    R0                                                93148
         ZR    R1                                                93148
DC2TOTLP AL    R1,DCSCPU0I-DCSCPU0W(,R4)                         93148
         BC    8+4,*+8       SKIP IF NO CARRY                    93148
         AL    R0,=F'1'      ELSE PROPAGATE CARRY                93148
         LA    R4,DCSCPU1W-DCSCPU0W(,R4)                         93148
         BCT   R3,DC2TOTLP   ADD TOTAL TIMES                     93148
         M     R0,=F'10000'  SCALE FOR .01 PERCENT               93148
         D     R0,INTBIN     PER INTERVAL                        93148
         ZR    R0            CLEAR FOR NEXT                      93148
         D     R0,NUMCPU     DIVIDE BY NUMBER OF CPUS            93148
         CVD   R1,PWORK      PACK                                93148
         EDIT  TO=DCPCPU,FROM=PWORK+5,MASK=' ZZ9.99'             93148
         MVI   DCPCPU+L'DCPCPU-1,C'%'                            93149
         L     R0,NUMCPU     GET NUMBER OF CPUS                  93148
         CVD   R0,PWORK                                          93148
         EDIT  TO=DCNCPU,FROM=PWORK+6,MASK=' Z99'                93148
         LA    R0,DCLINE                                         93148
         PM    PUT           DISPLAY SUMMARY LINE                93148
         SPACE 1                                                 93148
         LA   R4,4           FOUR LINES                          93148
         LA   R3,DCSCPU0W    POINT TO FIRST ENTRY                93148
DC2LPLNE MVC  DCLINE1,BLANKS  CLEAR LINE                         93148
         LA   R2,DCICPU0     POINT TO FIRST ENTRY                93148
         LA   R5,4           FOUR CPUS PER LINE                  93148
DC2LPCPU ICM  R1,15,DCSCPU0I-DCSCPU0W(R3)  ANY CPU TIME ?        93148
         BNZ  DC2LPCNT                                           93148
         ICM  R0,15,DCSCPU0W-DCSCPU0W(R3)  ANY WAIT ?            93148
         BZ   DC2LPSKP       NO; INACTIVE CPU                    93148
DC2LPCNT MH   R1,=H'100'                                         94213
         ZR   R0                                                 94213
         D    R0,INTBIN                                          94213
         CVD  R1,PWORK                                           94213
         MVI  DCDCPU0+L'DCDCPU0-DCICPU0(R2),C'%'                 93148
         MVC  DCDCPU0-DCICPU0(4,R2),=X'40202120'                 93148
         ED   DCDCPU0-DCICPU0(4,R2),PWORK+6                      93148
         MVC  DCICPU0-DCICPU0(5,R2),=C'CPU?='                    93148
         LR   R0,R4          COPY LINES TO DO                    93148
         SLL  R0,2           *4                                  93148
         AR   R0,R5          +CPUS TO DO                         93148
         LA   R1,20          START VALUE                         93148
         SR   R1,R0          CURRENT CPU NUMBER                  93148
         AL   R1,=A(HEX)     POINT TO CPU HEX DIGIT              93148
         MVC  DCICPU0-DCICPU0+3(1,R2),0(R1)  IDENTIFY CPU        93148
DC2LPSKP LA   R2,DCDCPU1-DCDCPU0(,R2)  NEXT OUTPUT               93148
         LA   R3,DCSCPU1I-DCSCPU0I(,R3) AND INPUT                93148
         BCT  R5,DC2LPCPU    NEXT CPU                            93148
         CLC  DCLINE1,BLANKS  ANY DATA ?                         93148
         BE   DC2LPBLK       NO; SKIP                            93148
         LA   R0,DCLINE1                                         93148
         PM   PUT                                                94213
DC2LPBLK BCT  R4,DC2LPLNE                                        93148
    PEXIT ,        CHPID PROCESSING DONE ELSEWHERE               94213
         TITLE 'DC1 - DISPLAY CHANNEL INFO FOR INTERVAL'
DC1      PENTRY
         L     R4,CVTPTR                                         94213
         L     R4,CVTOPCTP(R4)
         L     R4,RMCTCMCT(R4)
         L     R5,CMCTCPMT(R4)
         L     R6,CMCTHICP(R4)
         LA    R5,12(R5)
         SLR   R7,R7         CHANNEL COUNTER                     94213
         L     R4,CVTPTR     RELOAD CVT                          94213
         L     R4,CVTCSD(R4)   COMMON SYSTEM DATA AREA           94213
         L     R4,CSDCMT(R4)   CHANNEL MEASUREMENT TABLE (?)     94213
         L     R4,CMTCHPTR(R4)  GET POINTER TO CHANNEL TABLE     94213
         SLR   R8,R8                                             94213
         DODO  WHILE,(CLR,R5,R6,LE)
                    PM   DC2
                    AAI  R5,12
                    AAI  R7,1
               IF  (CH,R8,=AL2(4*L'DCWORK),NL)                   94213
               LA   R0,DCLINE2
               PM   PUT
               MVC  DCLINE2,BLANKS                               94213
               SLR  R8,R8                                        94213
               FI                                                94213
         OD
               IF  (LTR,R8,R8,NZ)                                94213
               LA   R0,DCLINE2
               PM   PUT
               MVC  DCLINE2,BLANKS                               94213
               FI                                                94213
         PEXIT
         TITLE 'DC2 - DISPLAY CH# AND PERECNT BUSY'
DC2      PENTRY
         LR    R1,R7         COPY CHANNEL NUMBER                 94213
         SLL   R1,3          CONVERT TO INDEX                    94213
         ALR   R1,R4         POINT TO CHANNEL ENTRY              94213
         ICM   R0,15,0(R1)   CHANNEL DEFINED ?                   94213
         BZ    DC2EXIT       NO                                  94213
         MVC   DCCHAN+1(1),3(R1)  COPY CHPID                     94213
         UNPK  DCCHAN(1),DCCHAN+1(1)  FLIP UNITS AND TENS        94213
         NC    DCCHAN,=X'0F0F'  STRIP ZONES                      94213
         TR    DCCHAN,=C'0123456789ABCDEF'                       94213
         LH    R1,CPMTUTIL(R5)
         IF    (LTR,R1,R1,M)
               MVC   DCBUSY(L'DCBUSY+1),=C' OFF '  CHANNEL IS OFF-LINE
         ELSE
         ZR    R0
         D     R0,=F'100'
         CVD   R1,PWORK
         EDIT TO=DCBUSY,FROM=PWORK+6,MASK=' Z99'
         MVI   DCBUSY+L'DCBUSY,C'%'                              94213
*OLD*    CVD  R7,PWORK       CHANNEL 'NUMBER' REPLACED BY CHPID  94213
*OLD*    EDIT TO=DCCHAN,FROM=PWORK+6,MASK=' Z99'                 94213
         FI                                                      94213
                    LA   R1,DCAREA(R8)
                    MVC  0(L'DCWORK,R1),DCWORK
                    AH   R8,=AL2(L'DCWORK)
DC2EXIT  TAG                                                     94213
         PEXIT
         TITLE 'DD - DISPLAY DISKS'
DD       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DD   - DISPLAY STATUS OF ALL ONLINE DISKS'
               WRITE 'DD,D - DISPLAY CURRENT DISK DELAY TIME'
               WRITE 'DD,V=XXXXXX - DISPLAY STATUS OF VOLUME XXXXXX'
               WRITE 'DD,U=XXX    - DISPLAY STATUS OF UNIT XXX'
               WRITE BLANKS                                      94213
               WRITE 'UNIT ADDRESS'
               WRITE 'VOLUME NAME'
               WRITE BLANKS                                      94213
               WRITE 'UNIT STATUS - R=RESV., A=ALLOC., P=PERMANENT'
               WRITE BLANKS                                      94213
               WRITE 'VOL. STATUS - PV=PRIVATE'
               WRITE '              PB=PUBLIC'
               WRITE '              ST=STORAGE'
               WRITE BLANKS                                      94213
               WRITE 'DELTM - AVG. DELAY TIME IN MILLISECONDS'
               WRITE BLANKS                                      94213
               WRITE 'NUMBER OF OPEN FILES ON VOLUME'
               PEXIT
         FI
         MVC   DDDLTMSG,BLANKS                                   94213
         IF    (CLC,LINE+2(2),=C',D',NE)
               L     R4,CVTPTR                                   94213
               L     R3,CVTUCBA(R4)
               DODO  WHILE,(LTR,R3,R3,NZ)
                     CVTUCB R3
                    IF   (TM,UCBSTAT(R3),X'80',O),                     X
               AND,(CLI,UCBTYP+2(R3),X'20',EQ)                   94213
                         PM  DD1
                    FI
                    L    R3,UCBNXUCB(R3)
               OD
               PEXIT
         FI
         L     R4,CVTPTR                                         94213
         L     R4,CVTOPCTP(R4)
         L     R4,RMCTCMCT(R4)
         L     R4,CMCTDBVT(R4)
*CHEAT*  AAI   R4,4                     SKIP C'DBVT' PREFIX
         ZAP   PDBVT,=P'0'
         L     R6,4(,R4)     LOAD FIRST POINTER                  94223
         DODO  WHILE,(LTR,R6,R6,NZ)     SCAN DBVT QUEUE FOR DMBS 94223
               AP   PDBVT,=P'4'
               IF   (LTR,R6,R6,P)
*DEBUG*ONLY*        EDIT TO=DBVTOFF,FROM=PDBVT,MASK=' ZZZ99'
*DEBUG*ONLY*        LA   R0,DBVTLINE
*DEBUG*ONLY*        PM   PUT                    DISPLAY DBVT OFFSET
                    L  R3,DMBUCBP(R6)
                    CVTUCB R3
                    IF   (TM,UCBSTAT(R3),X'80',O)                94213
                    MVC   DDDLTMSG,=CL10'DELTM=XXXX'             94223
                    LH  R1,DMBDELTM(R6)
                    CVD R1,PWORK
                    EDIT TO=DDDELTM,FROM=PWORK+6,MASK=' Z99'
                    PM  DD1
                    MVC   DDDLTMSG,BLANKS                        94223
                    FI                                           94223
               FI
               AAI  R4,4     NEXT TABLE ENTRY
               L    R6,4(,R4)   LOAD NEXT POINTER                94223
         OD
         PEXIT
         TITLE 'DD1 LIST ONE DISK'
DD1      PENTRY
         MVC   DDVOL,BLANKS                                      94213
         MVC   DDUCB,UCBNAME(R3)
      IF  (CLI,UCBTYP+2(R3),X'20',EQ)                            94213
         MVC   DDVOL,UCBVOLI(R3)
         FI                                                      94213
         MVC   DDMSTAT,BLANKS                                    94213
         IF    (TM,UCBSTAT(R3),X'20',O) RESERVED
               MVI  DDMSTAT,C'R'
         FI
         IF    (TM,UCBSTAT(R3),X'08',O) ALLOCATED
               MVI  DDMSTAT+1,C'A'
         FI
         IF    (TM,UCBSTAT(R3),X'04',O) PERMANENTLY MOUNTED
               MVI  DDMSTAT+2,C'P'
         FI
      IF  (CLI,UCBTYP+2(R3),X'20',EQ)                            94213
         IF    (TM,UCBSTAB(R3),X'10',O) PRIVATE
               MVC  DDUSTAT,=C'PV'
         ELSE
               IF   (TM,UCBSTAB(R3),X'08',O) PUBLIC
                    MVC  DDUSTAT,=C'PB'
               ELSE
                    MVC  DDUSTAT,=C'ST'
               FI
         FI
         FI                                                      94213
         ZR    R0
         IC    R0,UCBDMCT(R3)
         CVD   R0,PWORK
         MVC   DDDCBS,BLANKS                                     94213
      IF   (TM,UCBTYP+2(R3),X'A0',M)                             94213
         EDIT  TO=DDDCBS,FROM=PWORK+6,MASK=' Z99'
         FI                                                      94213
         IF    (CLC,LINE+2(3),=C',V=',EQ)
               LA  R1,DDVOL
               PM  CLCPARM
               IF  (LTR,R0,R0,Z)
                   LA   R0,DDLINE
                   PM   PUT
               FI
         ELSEIF (CLC,LINE+2(3),=C',U=',EQ)
               LA  R1,DDUCB
               PM  CLCPARM
               IF  (LTR,R0,R0,Z)
                   LA   R0,DDLINE
                   PM   PUT
               FI
         ELSE
               LA    R0,DDLINE
               PM    PUT
         FI
         PEXIT
         TITLE 'CLCPARM - COMPARE R1 TO LINE+5 UP TO FIRST BLANK'
CLCPARM  PENTRY
         LA    R15,LINE+5
         DODO  WHILE,(CLI,0(R15),C' ',NE)
               IF   (CLC,0(1,R1),0(R15),NE)
                    LA   R0,1
                    PEXIT
               FI
               AAI  R1,1
               AAI  R15,1
         OD
         ZR    R0
         PEXIT
         TITLE 'TUCBCALC -CALCULATE TUCBNAME FROM TUCBCHAN'
TUCBCALC PENTRY
         ICM   R1,12,TUCBCHAN
         SLL   R1,4
         ZR    R0
         SLDL  R0,4   0X
         SLL   R0,4   0X0
         SLDL  R0,4   0X0Y
         SLL   R0,4   0X0Y0
         SLDL  R0,4   0X0Y0Z
         STCM  R0,7,TUCBNAME
         TR    TUCBNAME,HEX
         PEXIT
         TITLE 'DE - DISPLAY ERROR CONDITIONS'
DE       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DE - DISPLAY ERROR CONDITIONS'
               WRITE BLANKS                                      94213
               WRITE 'ASCB MEMORY FAILURE'
               WRITE 'SQA STORAGE OVERFLOW INTO CSA'
               WRITE 'SMF RECORDS LOST'
               WRITE 'MEMORY ERRORS HAVE FLAGGED BAD FRAMES'
               WRITE 'MEMORY FRAMES OFFLINE'
               WRITE 'DEVICE NOT READY'
               WRITE 'UNSOLICITED DEVICE END'
               WRITE 'DDR SWAP PENDING'
               WRITE BLANKS                                      94213
               PEXIT
         FI
         PM    DV1
         PM    DES
         PM    DEA
         PM    DEU
         PEXIT
         TITLE 'DEA - SCAN ASCBS FOR ERROR CONDITIONS'
DEA      PENTRY
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    PM   DEA1
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DEA1 - CHECK ASCB FOR ERRORS'
DEA1     PENTRY
         IF    (TM,ASCBFLG1(R5),X'08',O)
               MVC  DEAMSG,=CL40'MEMORY TERMINATING ABNORMALLY'
               IF   (ICM,R15,15,ASCBJBNI(R5),Z)
                    L    R15,ASCBJBNS(R5)
               FI
               MVC  DEAJOB,0(R15)
               LA   R0,DELINE3
               PM   PUT
         FI
         IF    (TM,ASCBDSP1(R5),X'40',O)
               MVC  DEAMSG,=CL40'ASCB MEMORY FAILURE'
               IF   (ICM,R15,15,ASCBJBNI(R5),Z)
                    L    R15,ASCBJBNS(R5)
               FI
               MVC  DEAJOB,0(R15)
               LA   R0,DELINE3
               PM   PUT
         FI
         PEXIT
         TITLE 'DES - DISPLAY SYSTEM ERROR CONDITIONS'
DES      PENTRY
         L     R2,CVTPTR                                         94213
         L     R3,CVTGDA(R2)
         IF    (CLC,GDACSACV(4,R3),=F'0',NZ)
               WRITE 'SQA OVERFLOW INTO CSA'
         FI
         IF    (ICM,R3,15,CVTSMCA(R2),NZ)
               IF   (ICM,R0,15,SMCADSCT(R3),NZ)
                    WRITE 'SMF RECORDS LOST DUE TO FILE NOT. AVAIL.'
               FI
               IF   (ICM,R0,15,SMCABFLS(R3),NZ)
                    WRITE 'SMF RECORDS LOST DUE TO BUFFER SHORTAGE'
               FI
         FI
         IF    (CLC,DVBBAD,=F'0',NE)
               WRITE 'MEMORY FRAMES FLAGGED AS BAD'
         FI
         PEXIT
         TITLE 'DEU -  SCAN UCBS FOR ERROR CONDITIONS'
DEU      PENTRY
         L     R2,CVTPTR                                         94213
         L     R3,CVTUCBA(R2)
         DODO  WHILE,(LTR,R3,R3,NZ)
               CVTUCB R3
               PM   DEU1
               L    R3,UCBNXUCB(R3)
         OD
         PEXIT
         TITLE 'DEU1 CHECK A UCB FOR ERRORS'
DEU1     PENTRY
         IF    (TM,UCBSTAT(R3),X'88',NO) ONLINE AND ALLOCATED
               PEXIT
         FI
         IF    (TM,UCBFLA(R3),X'40',O)
               MVC  DESNS2,=CL40'DEVICE NOT READY'
               PM   DEU2
         FI
         IF    (TM,UCBFLC(R3),X'20',O)
               MVC  DESNS2,=CL40'UNSOLICITED DEVICE END'
               PM   DEU2
         FI
         IF    (TM,UCBFLC(R3),X'01',O)
               MVC  DESNS2,=CL40'DDR SWAP PENDING'
               PM   DEU2
         FI
         PEXIT
DEU2     PENTRY
         MVC   DEUCB2,UCBNAME(R3)
         LA    R0,DELINE2
         PM    PUT
         PEXIT
         TITLE 'DJ - DISPLAY JOBS ONLY'
DJ       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DJ - DISPLAY ACTIVE BATCH JOBS'
               PM   DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBJBNI(R5),NZ)
                         PM   DJ1
                         LA   R0,DALINE3
                         PM   PUT
                     FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DJ1 - PROCESS ONE ASCB ENTRY FOR DJ'
DJ1      PENTRY
         MVC   DAJOB,0(R1)
         MVC   DASTEP,BLANKS                                     94213
         L     R1,ASCBCSCB(R5)
         DODO  WHILE,(LTR,R1,R1,NZ)
               IF   (CLC,DAJOB,CSCBJOB(R1),EQ)
                    MVC  DASTEP,CSCBSTEP(R1)
               FI
               L    R1,CSCBPTR(R1)
         OD
         PM    DA1
         PEXIT
         TITLE 'DA1 - DISPLAY INFO FROM ASCB FOR ALL DJ, DU, DS'
DA1      PENTRY
         L     R1,ASCBOUCB(R5)
         MVC   DACLS,OUCBCLS(R1)
         ZR    R0
         IC    R0,OUCBDMN(R1)
         CVD   R0,PWORK
         EDIT  TO=DADMN,FROM=PWORK+6,MASK=' Z99'
         IF    (TM,ASCBRCTF(R5),ASCBOUT,O)
               MVC  DADPG+1(3),=C'SWP'      SWAPPED OUT
         ELSE
               ZR    R0
               IC    R0,ASCBDP(R5)
               CVD   R0,PWORK
               EDIT  TO=DADPG,FROM=PWORK+6,MASK=' Z99'
         FI
         LH   R0,OUCBSWC(R1)
         IF   (CH,R0,=H'999',GT)
              MVC DASWP+1(3),=C'***'
         ELSE
              CVD R0,PWORK
              EDIT TO=DASWP,FROM=PWORK+6,MASK=' Z99'
         FI
         LH    R1,ASCBASID(R5)
         MH    R1,=AL2(L'RCT)
         SH    R1,=AL2(L'RCT)
         L     R14,RCTABPTR
         LA    R14,0(R1,R14)
         L     R1,RCTICPU-RCT(R14)
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         ZAP   PTOTPCT,PWORK+6(2)
         EDIT  TO=DARCPU,FROM=PWORK+6,MASK=' Z99'
         L     R1,RCTIIO-RCT(R14)
         MH    R1,=H'100'
         ZR    R0
         D     R0,INTBIN
         CVD   R1,PWORK
         AP    PTOTPCT,PWORK+6(2)
         EDIT  TO=DARIO,FROM=PWORK+6,MASK=' Z99'
         L     R1,ASCBOUXB(R5)
         LH    R0,OUXBSIPR(R1)
         CVD   R0,PWORK
         EDIT  TO=DARPAG,FROM=PWORK+6,MASK=' Z99'
         L     R1,RCTTCPU-RCT(R14)
         CVD   R1,PWORK
         EDIT  TO=DATCPU,FROM=PWORK+4,MASK=' ZZZZ9.99'
         L     R1,RCTTIO-RCT(R14)
         CVD   R1,PWORK
         EDIT  TO=DATIO,FROM=PWORK+4,MASK=' ZZZZZ99'             94213
         L     R1,ASCBOUCB(R5)
         LH    R1,OUCBWSS(R1)
         IF    (CH,R1,ASCBFMCT(R5),L)
               LH   R1,ASCBFMCT(R5)
         FI
         SLL   R1,2
         CVD   R1,PWORK
         EDIT  TO=DATMEM,FROM=PWORK+5,MASK=' ZZZ99'
         MH    R1,=H'100'
         ZR    R0
         L     R14,CVTPTR                                        94213
         D     R0,CVTRLSTG(R14)    CALC % MEMORY
         CVD   R1,PWORK
         EDIT  TO=DARMEM,FROM=PWORK+6,MASK=' Z99'
         TIME  STCK,PWORK
         LM    R0,R1,PWORK
         SRDL  R0,22               MICRO-SEC X 2*12 TO 1.024 MILLI-SEC
         L     R14,CVTPTR                                        94213
         L     R14,CVTOPCTP(R14)
         AL    R1,RMCTTBS(R14)     ADD SRM TOD BASE
         L     R14,ASCBOUCB(R5)
         SL    R1,OUCBTMO(R14)     SUBTRACT SRM TRANS. START TIME
         ZR    R0
         SLDL  R0,10               1.024 MILL-SEC TO MICRO-SECONDS
         D     R0,=F'60000000'     MICRO-SECONDS TO MINUTES
         CVD   R1,PWORK
         EDIT  TO=DATXEQ,FROM=PWORK+5,MASK=' ZZZ99'
         PEXIT
         TITLE 'DL - DISPLAY COMMUNICATION LINES STATUS'
DL       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DL - DISPLAY ALL TP LINE ERRORS'
               WRITE BLANKS                                      94213
               WRITE 'LINE ADDRESS'
               WRITE BLANKS                                      94213
               WRITE 'NOT READY'
               WRITE 'INTERCEPT'
               WRITE 'NO I/O ACTIVE'
               PEXIT
         FI
         L     R2,CVTPTR                                         94213
         L     R3,CVTUCBA(R2)
         DODO  WHILE,(LTR,R3,R3,NZ)
                  CVTUCB R3
                    IF   (CLI,UCBTYP+2(R3),X'40',EQ)             94213
                         IF   (TM,UCBSTAT(R3),X'88',O)
                              PM   DL1
                         FI
                    FI
               L    R3,UCBNXUCB(R3)
         OD
         PEXIT
         TITLE 'DL1 - DISPLAY A LINE'
DL1      PENTRY
         IF    (TM,UCBFLA(R3),X'40',O)
               MVC  DLMSG,=CL20'NOT READY'
         ELSEIF (TM,UCBFLC(R3),X'10',O)
               MVC  DLMSG,=CL20'INTERCEPT'
         ELSEIF (TM,UCBFLA(R3),X'18',NZ)                         94213
               MVC  DLMSG,=CL20'  SIO ACTIVE'                    94213
         ELSEIF (TM,UCBFLA(R3),X'02',Z)
               MVC  DLMSG,=CL20'NO I/O ACTIVE'
         FI
         PM   DL2                                                94213
         PEXIT
         TITLE 'DL2 - DISPLAY MSG FOR LINE'
DL2      PENTRY
         MVC   DLUCB,UCBNAME(R3)
         LA    R0,DLLINE1
         PM    PUT
         PEXIT
         TITLE 'DK - DISPLAY ACTIVE LPA MODULES AND USAGE'
DK       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DK - DISPLAY ACTIVE LINK PACK AREA PROGRAMS'
               WRITE BLANKS                                      94213
               WRITE 'MODULE NAME'
               WRITE BLANKS                                      94213
               WRITE 'CURRENT USE COUNT'
               PEXIT
         FI
         L     R2,CVTPTR                                         94213
         L     R2,CVTQLPAQ(R2)
         L     R2,CDCHAIN(R2)
         DODO  WHILE,(LTR,R2,R2,NZ)
               MVC   DKNAME,CDNAME(R2)
               LH    R0,CDUSE(R2)
               IF    (CH,R0,=H'0',GT)
                     CVD   R0,PWORK
                     EDIT  TO=DKUSE,FROM=PWORK+6,MASK=' Z99'
                     LA    R0,DKLINE
                     PM    PUT
               FI
               L     R2,CDCHAIN(R2)
         OD
         PEXIT
         TITLE 'DM - DISPLAY MOUNTS'
DM       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DM - DISPLAY CURRENT OUTSTANDING MOUNTS'
               WRITE BLANKS                                      94213
               WRITE 'DEVICE ADDRESS'
               WRITE 'VOLUME REQUIRED'
               PEXIT
         FI
         L     R2,CVTPTR                                         94213
         L     R3,CVTUCBA(R2)
         DODO  WHILE,(LTR,R3,R3,NZ)
                    CVTUCB R3
                    IF   (TM,UCBTYP+2(R3),X'FF'-X'80'-X'20',Z)
                         IF   (TM,UCBDMCT(R3),X'80',O)
                              IF   (TM,UCBFLA(R3),X'40',O),            X
               OR,(TM,UCBTYP+2(R3),X'20',O)
                                   PM   DM1
                              FI
                         FI
                    FI
               L    R3,UCBNXUCB(R3)
         OD
         PEXIT
         TITLE 'DM1 DISPLAY MOUNT'
DM1      PENTRY
         MVC   DMUCB,UCBNAME(R3)
         MVC   DMVOL,UCBVOLI(R3)
         LA    R1,DMVOL
         PM    CHKVOL
         LA    R0,DMLINE
         PM    PUT
         PEXIT
         TITLE 'CHKVOL - EDIT UCB VOLUME FOR POSSIBLE SCRTCH'
CHKVOL   PENTRY
         IF    (CLI,0(R1),C'A',LT),OR,(CLI,0(R1),C'9',H)
               MVC  0(6,R1),=CL6'SCRTCH'
         FI
         PEXIT
         TITLE 'DN - DISPLAY NUMBERS OF THINGS'
DN       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DN - DISPLAY NUMBER OF TASKS AND DEVICES'
               WRITE BLANKS                                      94213
               WRITE 'NUMBER OF ADDRESS SPACES DEFINED'
               WRITE 'NUMBER OF TASKS READY TO RUN'
               WRITE 'NUMBER OF BATCH JOBS RUNNING'
               WRITE 'NUMBER OF TSO USERS LOGGED ON'
               WRITE 'NUMBER OF SYSTEM TASKS RUNNING'
               WRITE BLANKS                                      94213
               WRITE 'NUMBER OF UNIT ADDRESSES DEFINED'
               WRITE 'NUMBER OF ONLINE DISKS'
               WRITE 'NUMBER OF ONLINE TAPES'
               WRITE 'NUMBER OF ONLINE TP PORTS'
               WRITE 'NUMBER OF ONLINE UNIT RECORD DEVICES'
               WRITE 'NUMBER OF ONLINE OTHER DEVICES'
         FI
         PM    DNASCB
         PM    DNUCB
         PEXIT
         TITLE 'DNASCB - DISPLAY NUMBER OF ASCBS, READY TCBS'
DNASCB   PENTRY
         MVC   DNFRTCB,=F'0'
         ZAP   DNPASCB,=P'0'
         ZAP   DNPJOB,=P'0'
         ZAP   DNPTSO,=P'0'
         ZAP   DNPSTC,=P'0'
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    AP   DNPASCB,=P'1'
                    L    R0,DNFRTCB
                    A    R0,ASCBTCBS(R5)
                    ST   R0,DNFRTCB
                    IF   (ICM,R1,15,ASCBJBNI(R5),NZ)
                         AP   DNPJOB,=P'1'
                    ELSEIF (ICM,R1,15,ASCBTSB(R5),NZ)
                         AP   DNPTSO,=P'1'
                    ELSE
                         AP   DNPSTC,=P'1'
                    FI
               FI
               AAI  R3,4
         OD
         EDIT  TO=DNDASCB,FROM=DNPASCB,MASK=' Z99'
         L     R0,DNFRTCB
         CVD   R0,PWORK
         EDIT  TO=DNRTCB,FROM=PWORK+6,MASK=' Z99'
         EDIT  TO=DNJOB,FROM=DNPJOB,MASK=' Z99'
         EDIT  TO=DNTSO,FROM=DNPTSO,MASK=' Z99'
         EDIT  TO=DNSTC,FROM=DNPSTC,MASK=' Z99'
         LA    R0,DNLINE1
         PM    PUT
         PEXIT
         TITLE 'DNUCB  - DISPLAY NUMBER OF UCBS'
DNUCB    PENTRY
         ZAP   DNPUCB,=P'0'
         ZAP   DNPDISK,=P'0'
         ZAP   DNPTAPE,=P'0'
         ZAP   DNPPORT,=P'0'
         ZAP   DNPUR,=P'0'
         ZAP   DNPOTHER,=P'0'
         L     R2,CVTPTR                                         94213
         L     R3,CVTUCBA(R2)
         DODO  WHILE,(LTR,R3,R3,NZ)
                    CVTUCB R3
                         IF   (TM,UCBSTAT(R3),X'80',O)
                              PM   DNUCB1
                         FI
               L    R3,UCBNXUCB(R3)
         OD
         EDIT  TO=DNDUCB,FROM=DNPUCB,MASK=' Z99'
         EDIT  TO=DNDISK,FROM=DNPDISK,MASK=' Z99'
         EDIT  TO=DNTAPE,FROM=DNPTAPE,MASK=' Z99'
         EDIT  TO=DNPORT,FROM=DNPPORT,MASK=' Z99'
         EDIT  TO=DNUR,FROM=DNPUR,MASK=' Z99'
         EDIT  TO=DNOTHER,FROM=DNPOTHER,MASK=' Z99'
         LA    R0,DNLINE2
         PM    PUT
         PEXIT
         TITLE 'DNUCB1 - PROCESS ONLINE UCBS'
DNUCB1   PENTRY
         AP    DNPUCB,=P'1'
         IF    (TM,UCBTYP+2(R3),X'50',NZ)
               AP   DNPPORT,=P'1'
         ELSEIF (TM,UCBTYP+2(R3),X'20',O)
               AP   DNPDISK,=P'1'
         ELSEIF (TM,UCBTYP+2(R3),X'80',O)
               AP   DNPTAPE,=P'1'
         ELSEIF (TM,UCBTYP+2(R3),X'08',O)
               AP   DNPUR,=P'1'
         ELSE
               AP   DNPOTHER,=P'1'
         FI
         PEXIT
         TITLE 'GET JOB NAME FROM ASCB'
GETJOB   PENTRY
         SLL   R1,2
         L     R15,CVTPTR O                                      94213
         L     R15,CVTASCVT(R15)
         L     R1,ASVTENTY-4(R15,R1)
         IF    (LTR,R1,R1,P)
               IF    (ICM,R15,15,ASCBJBNI(R1),Z)
                     L    R15,ASCBJBNS(R1)
               FI
         ELSE
               LA    R15,BLANKS   O                              94213
         FI
         MVC   JOBNAME,0(R15)
         PEXIT
         TITLE 'DP - DISPLAY SYSTEM PAGING'                      94213
DP       PENTRY                                                  94213
         IF    (CLI,HMODE,TRUE,EQ)                               94213
               WRITE 'DP - DISPLAY SYSTEM PAGING STATUS'         94213
               WRITE BLANKS                                      94213
               WRITE 'DEMAND PAGING RATE PER SECOND'             94213
               WRITE BLANKS                                      94213
               WRITE 'VIRTUAL IO PAGING RATE PER SECOND'         94213
               WRITE BLANKS                                      94213
               WRITE 'SWAP PAGING RATE PER SECOND'               94213
               PEXIT                                             94213
         FI                                                      94213
         PM    INTERVAL                                          94213
         PM    DP2                                               94213
         PEXIT                                                   94213
         TITLE 'DP1 - SAVE INTERVAL PAGING DATA AND XCOM DATA'   94213
DP1      PENTRY                                                  94213
         L     R2,CVTPTR                                         94213
         L    R3,CVTRCEP(,R2)  GET RCE                           93148
         L    R0,RCETOTPI(,R3)  PAGES IN                         93148
         A    R0,RCETOTPO(,R3)  +OUT (EXCL. VIO AND SWAP)        93148
         LR   R1,R0                                              94213
         S    R1,DPSPAGE                                         94213
         STM  R0,R1,DPSPAGE                                      94213
         L    R0,RCEVIOPI(,R3)  VIO IN                           93148
         A    R0,RCEVIOPO(,R3)  + OUT                            93148
         LR   R1,R0                                              94213
         S    R1,DPSVIO                                          94213
         STM  R0,R1,DPSVIO                                       94213
         L    R0,RCESWPPI(,R3)  SWAP IN                          93148
         A    R0,RCESWPPO(,R3)  + OUT                            93148
         LR   R1,R0                                              94213
         S    R1,DPSSWAP                                         94213
         STM  R0,R1,DPSSWAP                                      94213
         AIF   ('&LOCAL' NE 'FPC').NUCVTRT   NO XCOM AT FCI      94213
         L    R2,CVTPTR                                          94213
         L    R2,CVTUSER(R2)                                     94213
         IF   (LTR,R2,R2,Z)                                      94213
              PEXIT                                              94213
         FI                                                      94213
         L    R2,UCVTXCVT(R2)                                    94213
         IF   (LTR,R2,R2,Z)                                      94213
              PEXIT                                              94213
         FI                                                      94213
         L    R0,VTRTOT(R2)                                      94213
         LR   R1,R0                                              94213
         S    R1,XCOMRATE                                        94213
         STM  R0,R1,XCOMRATE                                     94213
.NUCVTRT PEXIT                                                   94213
         TITLE 'DP2 - PRINT PAGING INFO FOR INTERVAL'            94213
DP2      PENTRY                                                  94213
         L    R1,DPSPAGE+4                                       94213
         MH   R1,=H'100'                                         94213
         ZR   R0                                                 94213
         D    R0,INTBIN                                          94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDPAGE,FROM=PWORK+6,MASK=' Z99'                94213
         L    R1,DPSVIO+4                                        94213
         MH   R1,=H'100'                                         94213
         ZR   R0                                                 94213
         D    R0,INTBIN                                          94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDVIO,FROM=PWORK+6,MASK=' Z99'                 94213
         L    R1,DPSSWAP+4                                       94213
         MH   R1,=H'100'                                         94213
         ZR   R0                                                 94213
         D    R0,INTBIN                                          94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDSWAP,FROM=PWORK+6,MASK=' Z99'                94213
         L    R1,DPSPAGE                                         94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDPAGE2,FROM=PWORK+4,MASK=' ZZZZZ99'           94213
         L    R1,DPSVIO                                          94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDVIO2,FROM=PWORK+4,MASK=' ZZZZZ99'            94213
         L    R1,DPSSWAP                                         94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDSWAP2,FROM=PWORK+4,MASK=' ZZZZZ99'           94213
         AIF   ('&LOCAL' NE 'FPC').NOXCPG                        94213
         L    R1,XCOMRATE+4                                      94213
         MH   R1,=H'100'                                         94213
         ZR   R0                                                 94213
         D    R0,INTBIN                                          94213
         CVD  R1,PWORK                                           94213
         EDIT TO=DPDXCOM,FROM=PWORK+6,MASK=' Z99'                94213
.NOXCPG  LA   R0,DPLINE                                          94213
         PM   PUT                                                94213
         LA    R0,DPLINE2                                        94213
         PM    PUT                                               94213
         PEXIT                                                   94213
         TITLE 'DR - DISPLAY OUTSTANDING OPERATOR REPLIES'
DR       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DR - DISPLAY NUMBER OF OUTSTANDING REPLIES'
               PEXIT
         FI
         L     R2,CVTPTR      CVT                                94213
         L     R2,CVTCUCB(R2) UCM
         LH    R0,UCMRQNR(R2) # REPLIES OUTSTANDING
         CVD   R0,PWORK
         EDIT  TO=DRWTORS,FROM=PWORK+6,MASK=' Z99'
         LA    R0,DRLINE
         PM    PUT
         PEXIT
         TITLE 'DS - DISPLAY SYSTEM TASKS ONLY'
DS       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DS - DISPLAY ACTIVE SYSTEM TASKS'
               PM   DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBTSB(R5),Z),                    X
               AND,(ICM,R1,15,ASCBJBNI(R5),Z)
                         PM   DS1
                         LA   R0,DALINE3
                         PM   PUT
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DS1 - PROCESS ONE ASCB ENTRY FOR DS'
DS1      PENTRY
         L     R1,ASCBJBNS(R5)
         MVC   DAJOB,0(R1)
         MVC   DASTEP,=CL8'STC'
         PM    DA1
         MVC   DATXEQ,BLANKS                                     94213
         PEXIT
         TITLE 'DT - DISPLAY TAPES'
DT       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DT - DISPLAY ONLINE ALLOCATED TAPE STATUS'
               WRITE BLANKS                                      94213
               WRITE 'DEVICE ADDRESS'
               WRITE 'VOLUME NAME'
               WRITE 'JOBNAME'
               WRITE 'CURRENT SIO COUNT'
               WRITE 'TEMPORARY READ, WRITE, NOISE, ERG COUNT'
               WRITE 'PERMANENT READ AND WRITE COUNT'
               PEXIT
         FI
         L     R2,CVTPTR                                         94213
         L     R3,CVTUCBA(R2)
         DODO  WHILE,(LTR,R3,R3,NZ)
                  CVTUCB R3
                    IF   (TM,UCBSTAT(R3),X'88',O),                     X
               AND,(TM,UCBTYP+2(R3),X'80',O)
                                   PM   DT1
                    FI
               L    R3,UCBNXUCB(R3)
         OD
         PEXIT
         TITLE 'DT1 PRINT ONE TAPE'
DT1      PENTRY
         MVC   DTUCB,UCBNAME(R3)
         MVC   DTVOL,UCBVOLI(R3)
         LA    R1,DTVOL
         PM    CHKVOL
         SR    R4,R4
         ICM   R4,7,UCBEXTPT+1(R3)
         LH    R1,UCBASID(R4)
         PM    GETJOB
         MVC   DTJOB,JOBNAME
         SR    R4,R4
         ICM   R4,7,UCBXTN+1(R3)
         ZR    R0
         ICM   R0,3,UCBSIO(R4)
         CVD   R0,PWORK
         EDIT  TO=DTSIO,FROM=PWORK+5,MASK=' ZZ,Z99'
         ZR    R0
         ZR    R1
         IC    R1,UCBTREAD(R4)
         AR    R0,R1
         IC    R1,UCBTWRIT(R4)
         AR    R0,R1
         IC    R1,UCBNOISE(R4)
         AR    R0,R1
         AH    R0,UCBERG(R4)
         CVD   R0,PWORK
         EDIT  TO=DTTERR,FROM=PWORK+6,MASK=' Z99'
         IC    R1,UCBPREAD(R4)
         LR    R0,R1
         IC    R1,UCBPWRIT(R4)
         AR    R0,R1
         CVD   R0,PWORK
         EDIT  TO=DTPERR,FROM=PWORK+6,MASK=' Z99'
         IF    (TM,UCBFLA(R3),X'40',O)
               MVC  DTMSG,=CL25'INTERVENTION REQUIRED'
         ELSE
               MVC  DTMSG,BLANKS                                 94213
         FI
         LA    R0,DTLINE
         PM    PUT
         PEXIT
         TITLE 'DU - DISPLAY TSO USERS ONLY'
DU       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DU - DISPLAY ACTIVE TSO USERS'
               PM   DAHELP
               PEXIT
         FI
         PM    INTERVAL
         LA    R0,DALINE0
         PM    PUT
         LA    R0,DALINE1
         PM    PUT
         LA    R0,DALINE2
         PM    PUT
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R4,ASVTMAXU(R2)
         DODO  WHILE,(SH,R4,=H'1',NM)
               IF   (ICM,R5,15,0(R3),P)
                    IF   (ICM,R1,15,ASCBTSB(R5),NZ)
                         PM   DU1
                         LA   R0,DALINE3
                         PM   PUT
                    FI
               FI
               AAI  R3,4
         OD
         PEXIT
         TITLE 'DU1 - PROCESS ONE ASCB ENTRY FOR DU'
DU1      PENTRY
         L     R1,ASCBJBNS(R5)
         IF    (CLI,0(R1),C'A',NL)
               MVC  DAJOB,0(R1)
         ELSE
               MVC  DAJOB,=CL8'*LOGON*'
         FI
         MVC   DASTEP,=CL8'TSO'
         PM    DA1
         PEXIT
         TITLE 'DV - DISPLAY VIRTUAL AND REAL STORAGE STATUS'
DV       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DV - DISPLAY VIRTUAL AND REAL STORAGE ALLOCATION'
               WRITE 'DV,JOBNAME - DISPLAY REAL STORAGE FOR JOB'
               WRITE BLANKS                                      94213
               WRITE 'VIRTUAL - 31 BIT ADDRESS SPACE ALLOCATION'
               WRITE 'REAL    - CURRENT REAL STORAGE ALLOCATION'
               WRITE 'FIXED   - CURRENT FIXED REAL STORAGE ALLOCATION'
               WRITE BLANKS                                      94213
               WRITE 'PVT  - PRIVATE ADDRESS SPACES BELOW 16MK'
               WRITE 'COM  - COMMON STORAGE AREA BELOW 16MK'
               WRITE 'ECOM - EXTENDED COMMON AREA ABOVE 16MK'
               WRITE 'EPVT - EXTENDED PRIVATE AREAS ABOVE 16MK'
               PEXIT
         FI
         PM    DV1
         PM    DV3
         PEXIT
         TITLE 'DV1 - COLLECT DATA FROM PAGE FRAME TABLE'
DV1      PENTRY
         MVC   JOBASID,=H'0'
         IF    (CLI,LINE+2,C',',EQ)
               L     R2,CVTPTR                                   94213
               L     R2,CVTASCVT(R2)
               LA    R3,ASVTENTY(R2)
               L     R4,ASVTMAXU(R2)
               DODO  WHILE,(SH,R4,=H'1',NM)
                     IF   (ICM,R5,15,0(R3),P)
                          IF   (ICM,R1,15,ASCBJBNI(R5),Z)
                               L    R1,ASCBJBNS(R5)
                          FI
                          IF   (CLC,0(8,R1),LINE+3,EQ)
                               MVC  JOBASID,ASCBASID(R5)
                          FI
                     FI
                     AAI  R3,4
               OD
         FI
         XC    DVDATA(LDVDATA),DVDATA
         L     R2,CVTPTR                     R2=CVT              94213
         L     R3,CVTPVTP(R2)                R3=PVT
         L     R4,PVTRIT(R3)                 R4=RIT
         L     R0,RITFCSA(R4)
         ST    R0,DVSCOM                     START OF COMMON
         L     R0,=X'01000000'
         ST    R0,DVSECOM                    START OF EXT. COMMON
         L     R0,RITFPRVX(R4)
         ST    R0,DVSEPVT                    START OF EXT. PRIVATE
         L     R5,RITLPFTE(R4)              R5=LAST  PFTE
         L     R4,RITFPFTE(R4)              R4=FIRST PFTE
         DODO  WHILE,(CLR,R4,R5,NH)
             IF  (CLI,LINE+2,C',',NE),OR,(CLC,PFTASID(2,R4),JOBASID,EQ)
                 PM   DV2
             FI
             AAI  R4,32
         OD
         PEXIT
         TITLE 'DV2 - PROCESS ONE PAGE FRAME TABLE ENTRY'
DV2      PENTRY
         IW  DVBREAL
         IF   (TM,PFTFLGS1(R4),PFTBADFR,O)
              IW  DVBBAD
              IW  DVBFIXED
              PEXIT
         FI
         IF   (TM,PFTFLGS2(R4),PFTOFFLN,O)
              IW  DVBOFF
              IW  DVBFIXED
              PEXIT
         FI
         IF   (TM,PFTFLGS3(R4),PFTVIORU,O)
              IW  DVBVIO
              PEXIT
         FI
         IF   (TM,PFTFLGS2(R4),PFTONAFQ,O)
              IW  DVBFREE
              PEXIT
         FI
         IW  DVBALLOC
         IF (CLC,PFTFXCT(2,R4),=H'0',NZ)
              IW  DVBFIXED
         FI
         IF   (TM,PFTFLGS2(R4),PFTVRALC,O)
              IW  DVBVR
         FI
         IF (CLC,PFTVSA(4,R4),DVSCOM,L)
               IW  DVHRPVT
               IF (CLC,PFTFXCT(2,R4),=H'0',NZ)
                    IW  DVHFPVT
               FI
         ELSEIF (CLC,PFTVSA(4,R4),DVSECOM,L)
               IW  DVHRCOM
               IF   (CLC,PFTFXCT(2,R4),=H'0',NZ)
                    IW  DVHFCOM
               FI
         ELSEIF (CLC,PFTVSA(4,R4),DVSEPVT,L)
               IW  DVHRECOM
               IF   (CLC,PFTFXCT(2,R4),=H'0',NZ)
                    IW  DVHFECOM
               FI
         ELSE
               IW  DVHREPVT
               IF  (CLC,PFTFXCT(2,R4),=H'0',NZ)
                   IW  DVHFEPVT
               FI
         FI
         PEXIT
         TITLE 'DV3 - DISPLAY VIRTUAL AND REAL STORAGE INFO'
DV3      PENTRY
*
*        VIRTUAL STORAGE
*
         L     R2,CVTPTR                R2=CVT                   94213
         L     R3,CVTPVTP(R2)           R3=PVT
         L     R4,PVTRIT(R3)            R4=RIT
         L     R0,RITFCSA(R4)           PRIVATE
         S     R0,RITFPRV(R4)
         LR    R1,R0
         EM    DVVPVT
         L     R0,=X'01000000'          COMMON
         S     R0,RITFCSA(R4)
         AR    R1,R0
         EM    DVVCOM
         L     R0,RITFPRVX(R4)          EXTENDED COMMON
         S     R0,=X'01000000'
         AR    R1,R0
         EM    DVVECOM
         L     R0,=X'80000000'          EXTENDED PRIVATE
         SL    R0,RITFPRVX(R4)
         ALR   R1,R0
         EM    DVVEPVT
         LR    R0,R1
         EM    DVVTOT
         LA    R0,DVLINE1
         PM    PUT
*
*        REAL STORAGE
*
         L     R2,CVTPTR                R2=CVT                   94213
         L     R3,CVTPVTP(R2)           R3=PVT
         L     R4,PVTRIT(R3)            R4=RIT
         L     R0,DVHRPVT
         EMF   DVRPVT
         L     R0,DVHRCOM
         EMF   DVRCOM
         L     R0,DVHRECOM
         EMF   DVRECOM
         L     R0,DVHREPVT
         EMF   DVREPVT
         L     R0,DVHRPVT
         A     R0,DVHRCOM
         A     R0,DVHRECOM
         A     R0,DVHREPVT
         EMF   DVRTOT
         LA    R0,DVLINE2
         PM    PUT
*
*        FIXED STORAGE
*
         L     R2,CVTPTR                R2=CVT                   94213
         L     R3,CVTPVTP(R2)           R3=PVT
         L     R4,PVTRIT(R3)            R4=RIT
         L     R0,DVHFPVT
         EMF   DVFPVT
         L     R0,DVHFCOM
         EMF   DVFCOM
         L     R0,DVHFECOM
         EMF   DVFECOM
         L     R0,DVHFEPVT
         EMF   DVFEPVT
         L     R0,DVHFPVT
         A     R0,DVHFCOM
         A     R0,DVHFECOM
         A     R0,DVHFEPVT
         EMF   DVFTOT
         LA    R0,DVLINE3
         PM    PUT
*
*        TOTAL1
*
         L     R0,DVBREAL
         EMF   DVTREAL
         L     R0,DVBFREE
         EMF   DVTFREE
         L     R0,DVBALLOC
         EMF   DVTALLOC
         L     R0,DVBFIXED
         EMF   DVTFIXED
         L     R0,DVBVIO
         EMF   DVTVIO
         L     R0,DVBBAD
         EMF   DVTBAD
         LA    R0,DVLINE4
         PM    PUT
*
*        TOTAL2
*
         L     R0,DVBBAD
         EMF   DVTBAD
         L     R0,DVBOFF
         EMF   DVTOFF
         L     R0,DVBVIO
         EMF   DVTVIO
         L     R0,DVBVR
         EMF   DVTVR
         LA    R0,DVLINE5
         PM    PUT
*
*        TOTAL3
*
         L     R1,CVTPTR                                         94213
         L     R1,CVTGDA(R1)
         L     R0,GDACSASZ(R1)
         EM    DVTCSA
         L     R0,GDASQASZ(R1)
         EM    DVTSQA
         L     R0,GDACSARE(R1)
         EM    DVTUNA
         L     R0,GDACSACV(R1)
         EM    DVTCVT
         LA    R0,DVLINE6
         PM    PUT
         PEXIT
         TITLE 'DW - DISPLAY WAITING JOBS AND TSO USERS'
DW       PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'DW - DISPLAY DEVICES WITH IO WAITING TO END'
               WRITE BLANKS                                      94213
               WRITE 'DEVICE ADDRESS'
               WRITE 'VOLUME NAME'
               PEXIT
         FI
         L     R2,CVTPTR                                         94213
         L     R3,CVTUCBA(R2)
         DODO  WHILE,(LTR,R3,R3,NZ)
                  CVTUCB R3
                    IF   (TM,UCBTYP+2(R3),X'FF'-X'80'-X'20',Z)
                         IF   (TM,UCBFLA(R3),X'02',NZ)
                              PM   DW1
                         FI
                    FI
               L    R3,UCBNXUCB(R3)
         OD
         PEXIT
         TITLE 'DW1 - LIST TAPE OR DISK PENDING IO'
DW1      PENTRY
         MVC   DWUCB,UCBNAME(R3)
         MVC   DWVOL,UCBVOLI(R3)
         LA    R0,DWLINE
         PM    PUT
         PEXIT
         TITLE 'MEMORY - DISPLAY MEMORY USAGE BY COMPONENT'      94213
MEMORY   PENTRY                                                  94213
         IF    (CLI,HMODE,TRUE,EQ)                               94213
               WRITE 'M - SUMMARIZE TOTAL REAL MEMORY USAGE BY DOMAIN'
               WRITE BLANKS                                      94213
               WRITE 'FCI DOMAINS ARE AS FOLLOWS'                94213
               WRITE BLANKS                                      94213
               LA   R2,DOM$NAME         PRINT DOMAIN NAME TABS     FCI*
               DODO WHILE,(CLC,0(2,R2),=X'FFFF',NE)                FCI*
                  MVC  DMNMSG$,2(R2)   MOVE IN DOMAIN NAME         FCI*
                  LH   R0,0(R2)        PICK UP DOMAIN NUMBER       FCI*
                  CVD  R0,PWORK                                    FCI*
                  EDIT TO=DMNMSG#,FROM=PWORK+6,MASK=' Z99'         FCI*
                  LA   R0,DMNMSG                                   FCI*
                  PM   PUT                                         FCI*
                  LA   R2,$DOMNLEN(R2)                             FCI*
               OD                                                  FCI*
               PEXIT                                             94213
         FI                                                      94213
         PM    M1                                                94213
         PM    M3                                                94213
         PEXIT                                                   94213
         TITLE 'M1 - COLLECT REAL MEMORY BY DOMAIN'              94213
M1       PENTRY                                                  94213
         LA    R2,DOMAINK                                        93148
         LA    R3,L'DOMAINK                                      93148
         CLRL  (R2),(R3)     CLEAR DOMAIN COUNTERS               93148
         L     R2,CVTPTR                                         94213
         L     R3,CVTRCEP(R2)                                    93148
         LM    R4,R5,LRCE+RITFPFTE(R3)                           93148
*OLD*    LH    R7,PVTFPFN(R3)                                    94213
*OLD*    SRL   R7,4                                              94213
*OLD*    STH   R7,DOMAINK         D(0)=SYSTEM                    94213
         ZR    R7            CLEAR PAGE COUNTER                  93148
         L     R6,CVTASCVT(R2)                                   94213
         DODO  WHILE,(CLR,R4,R5,NH)                              94213
               PM   M2                                           94213
               AH   R4,=AL2(LPFTE)                               94213
         OD                                                      94213
         PEXIT                                                   94213
         TITLE 'M2 - ASSIGN REAL PAGE FRAME TO DOMAIN'           94213
M2       PENTRY                                                  94213
         AAI   R7,1       INCR TOTAL  PAGE COUNT                 94213
         SLR   R1,R1                                             93149
         ICM   R1,3,PFTASID(R4)                                  93149
         BM    M2EXIT     SKIP UNASSIGNED PAGES                  93149
         IF    (LTR,R1,R1,Z)                                     94213
               LA   R1,DOMAINK                                   94213
         ELSE  ,                                                 94213
               SLL  R1,2                                         94213
               L    R1,ASVTENTY-4(R1,R6)                         94213
               IF   (LTR,R1,R1,P)                                94213
                    L    R1,ASCBOUCB(R1)                         94213
                    ZR   R15                                     94213
                    IC   R15,OUCBDMN(R1)                         94213
                    MH   R15,=AL2(LDOMKE)                        94213
                    LA   R1,DOMAINK(R15)                         94213
               ELSE  ,                                           94213
                    LA   R1,DOMAINK                              94213
               FI                                                94213
         FI                                                      94213
         LH    R15,0(R1)                                         94213
         AAI   R15,1      INCR DOMAIN PAGE COUNT                 94213
         STH   R15,0(R1)                                         94213
M2EXIT   PEXIT                                                   94213
         TITLE 'M3 - PRINT REAL MEMORY BY DOMAIN'                94213
M3       PENTRY                                                  94213
         MVC   DOMDESC,=CL6'DOMAIN'                              94213
         SLL   R7,2                  CONVERT TOTAL PAGES TO K    94213
         LA    R2,DOMAINK                                        94213
         LA    R3,DOMAINK+L'DOMAINK                              94213
         ZR    R4                                                94213
         DODO  WHILE,(CLR,R2,R3,L)                               94213
               LH   R1,0(R2)                                     94213
               IF   (LTR,R1,R1,NZ)                               94213
                    SLL  R1,2                                    94213
                    CVD  R1,PWORK                                94213
                    EDIT TO=DOMK,FROM=PWORK+5,MASK=' ZZZ99'      94213
                    MH   R1,=H'100'                              94213
                    ZR   R0                                      94213
                    DR   R0,R7                                   94213
                    CVD  R1,PWORK                                94213
                    EDIT TO=DOMPCT,FROM=PWORK+6,MASK=' Z99'      94213
                    CVD  R4,PWORK                                94213
                    EDIT TO=DOMN,FROM=PWORK+6,MASK=' Z99'        94213
                    LA   R15,DOM$NAME         ADDRESS OF DOMAIN NAMES *
                    MVC  DOMN$,BLANKS                            94213
                    DODO WHILE,(CLC,0(2,R15),=X'FFFF',NE),         FCI*X
               AND,(CLC,DOMN$,BLANKS,EQ)                           FCI*
                       IF (CH,R4,0(R15),EQ)                        FCI*
                          MVC  DOMN$,2(R15)                        FCI*
                       ELSE  ,                                     FCI*
                          LA   R15,$DOMNLEN(R15)                   FCI*
                       FI                                          FCI*
                    OD                                             FCI*
                    IF  (CLC,DOMN$,BLANKS,EQ)                    94213
                       MVC   DOMN$,=CL12' *UNKNOWN*'               FCI*
                    FI                                             FCI*
                    LA   R0,DOMLINE                              94213
                    PM   PUT                                     94213
               FI                                                94213
               AH   R2,=AL2(LDOMKE)                              94213
               AAI  R4,1                                         94213
         OD                                                      94213
         MVC   DOMN,BLANKS                                       94213
         MVC   DOMN$,BLANKS                                      94213
         MVC   DOMDESC,=CL6' TOTAL'                              94213
         CVD   R7,PWORK                                          94213
         EDIT  TO=DOMK,FROM=PWORK+5,MASK=' ZZZ99'                94213
         MVC   DOMPCT,=CL4' 100'                                 94213
         LA    R0,DOMLINE                                        94213
         PM    PUT                                               94213
         PEXIT                                                   94213
         TITLE 'PDSNINFO - DISPLAY PAGE DATA SET INFO.'
PDSNINFO PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'P - SUMMARIZE PAGING DATA SET USAGE'
               WRITE BLANKS                                      94213
               WRITE 'SLOT - AREA FOR ONE 4K PAGE ON DISK'
               WRITE BLANKS                                      94213
               WRITE 'VIO     - VIRTUAL IO SLOTS'
               WRITE 'NON-VIO - VIRTUAL STORAGE SLOTS'
               WRITE 'UNUSED  - NO REAL PAGE DATA IN SLOT'
               WRITE 'UNRESV  - SLOT NOT RESERVED FOR POSSIBLE USE'
               WRITE 'SWAP-SET- NUMBER OF SLOTS IN ONE SWAP BLOCK'
               WRITE BLANKS                                      94213
               WRITE 'TYPE  - TYPE OF PAGES SWAPPED TO THIS DATASET'
               WRITE 'AVAIL - SLOTS AVAILABLE FOR USE'
               WRITE 'WEIGHT- SRM WEIGHT ASSIGNED TO BAL. IO LOAD'
               WRITE 'ERRORS- SLOTS FLAGGED AS BAD DUE TO ERRORS'
               PEXIT
         FI
         LA    R0,PDHEAD1
         PM    PUT
         PM    PDTOTAL
         LA    R0,PDHEAD2
         PM    PUT
         PM    PDPAGE
         PM    PDSWAP
         PEXIT
         TITLE 'PDTOTAL - TOTALS ON ALL PAGE DATA SETS'
PDTOTAL  PENTRY
         L     R2,CVTPTR                                         94213
         L     R2,CVTASMVT(R2)
         L     R0,ASMSLOTS(R2)
         LR    R3,R0
         CVD   R0,PWORK
         EDIT  TO=PDSLOTS,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'   SLOTS
         L     R0,ASMVSC(R2)
         SR    R3,R0
         CVD   R0,PWORK
         EDIT  TO=PDVSC,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'  ALLOC VIO
         L     R0,ASMNVSC(R2)
         SR    R3,R0
         CVD   R0,PWORK
         EDIT  TO=PDNVSC,FROM=PWORK+4,MASK=' Z,ZZZ,Z99' ALLOC NON-VIO
         S     R3,ASMBKSLT(R2)
         CVD   R3,PWORK
         EDIT  TO=PDUNUSED,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'  UNUSED
         L     R0,ASMBKSLT(R2)
         CVD   R0,PWORK
         EDIT  TO=PDUNRESV,FROM=PWORK+4,MASK=' Z,ZZZ,Z99'  UNRESERVED
         L     R1,ASMSART(R2)
         L     R0,SARSETSZ(R1)
         CVD   R0,PWORK
         EDIT  TO=PDSETSZ,FROM=PWORK+4,MASK=' Z,ZZZ,Z99' SWAP SET SIZE
         LA    R0,PDTLINE
         PM    PUT
         PEXIT
         TITLE 'PDPAGE- DISPLAY PAGING DATA SET INFO'
PDPAGE   PENTRY
         L     R2,CVTPTR                                         94213
         L     R2,CVTASMVT(R2)
         L     R3,ASMPART(R2)
         L     R4,PARTDSNL(R3)
         LA    R5,PARTENTS(R3)
         L     R6,PARTSIZE(R3)
         DODO  WHILE,(LTR,R6,R6,NZ)
               PM   PDPARTE
               LA   R4,LDSN(R4)
               LA   R5,LPARTE(R5)
               SH   R6,=H'1'
         OD
         PEXIT
         TITLE 'PDPARTE- DISPLAY INFO FOR ONE PARTE'
PDPARTE  PENTRY
         IF    (CLI,PARETYPE(R5),X'20',EQ),OR,(CLI,0(R4),C' ',EQ)
               PEXIT
         FI
         MVC   PDDSN,0(R4)
         IF    (CLI,PARETYPE(R5),X'80',EQ)
               MVC  PDTYPE,=CL6'PLPA'
         ELSEIF (CLI,PARETYPE(R5),X'40',EQ)
               MVC  PDTYPE,=CL6'COMMON'
         ELSEIF (CLI,PARETYPE(R5),X'10',EQ)
               MVC  PDTYPE,=CL6'LOCAL'
         ELSE
               PEXIT
         FI
         L     R1,PAREUCBP(R5)
         MVC   PDVOL,UCBVOLI(R1)
         MVC   PDUCB,UCBNAME(R1)
         L     R0,PARESZSL(R5)
         CVD   R0,PWORK
         EDIT  TO=PDSIZE,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,PARESLTA(R5)
         CVD   R0,PWORK
         EDIT  TO=PDAVAIL,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,PARERQTM(R5)
         CVD   R0,PWORK
         EDIT  TO=PDWEIGHT,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,PARERRCT(R5)
         CVD   R0,PWORK
         EDIT  TO=PDERRORS,FROM=PWORK+5,MASK=' ZZ,Z99'
         IF    (TM,PAREFLG1(R5),X'40',O)
               MVI  PDERRORS,C'*'         DSN OUT OF USE
         FI
         LA    R0,PDPSLINE
         PM    PUT
         PEXIT
PDSWAP   PENTRY
         L     R2,CVTPTR                                         94213
         L     R2,CVTASMVT(R2)
         L     R3,ASMSART(R2)
         L     R4,SARDSNL(R3)
         LA    R5,SARENTS(R3)
         L     R6,SARSIZE(R3)
         DODO  WHILE,(LTR,R6,R6,NZ)
               PM   PDSARTE
               LA   R4,LDSN(R4)
               LA   R5,LSARTE(R5)
               SH   R6,=H'1'
         OD
         PEXIT
         TITLE 'PDSARTE- DISPLAY INFO FOR ONE SARTE'
PDSARTE  PENTRY
         IF    (CLI,0(R4),C' ',EQ)
               PEXIT
         FI
         MVC   PDDSN,0(R4)
         MVC   PDTYPE,=CL6'SWAP'
         L     R1,SREUCB(R5)
         MVC   PDVOL,UCBVOLI(R1)
         MVC   PDUCB,UCBNAME(R1)
         L     R0,SRETOTSL(R5)
         CVD   R0,PWORK
         EDIT  TO=PDSIZE,FROM=PWORK+5,MASK=' ZZ,Z99'
         L     R0,SREAVLSL(R5)
         CVD   R0,PWORK
         EDIT  TO=PDAVAIL,FROM=PWORK+5,MASK=' ZZ,Z99'
         MVC   PDWEIGHT,BLANKS                                   94213
         L     R0,SRERRCT(R5)
         CVD   R0,PWORK
         EDIT  TO=PDERRORS,FROM=PWORK+5,MASK=' ZZ,Z99'
         IF    (TM,SREFLG(R5),X'40',O)
               MVI  PDERRORS,C'*'         DSN OUT OF USE
         FI
         LA    R0,PDPSLINE
         PM    PUT
         PEXIT
         TITLE 'RATES - CPU USAGE RATES BY COMPONENT'
RATES    PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'R - DISPLAY CPU AND REAL MEMORY USAGE BY DOMAIN'
               WRITE BLANKS                                      94213
               WRITE 'FPC DOMAINS ARE AS FOLLOWS'
               WRITE BLANKS                                      94213
               WRITE '0 - SYSTEM'
               WRITE '1 - ONLINE SYSTEMS'
               WRITE '2 - TSO'
               WRITE '3 - BATCH'
               PEXIT
         FI
         PM    INTERVAL
         PM    RC2
         PM    RC3
         PEXIT
         TITLE 'RC1 - CALCULATE CPU, IO, AND PAGING FOR ASCBS'
RC1      PENTRY
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R1,ASVTMAXU(R2)
         SLL   R1,2
         LA    R4,0(R1,R3)
         L     R5,RCTABPTR
         DODO  WHILE,(CLR,R3,R4,L)
               IF   (ICM,R6,15,0(R3),P)
                    LM   R0,R1,ASCBEJST(R6)
                    SRDL R0,12
                    D    R0,=F'10000'
                    LR   R15,R1
                    LM   R0,R1,ASCBSRBT(R6)
                    SRDL R0,12
                    D    R0,=F'10000'
                    AR   R15,R1
                    LR   R14,R15
                    S    R15,RCTTCPU-RCT(R5)
                    IF   (LTR,R15,R15,M),OR,(CLR,R14,R15,EQ)
                         ZR   R15
                    FI
                    STM  R14,R15,RCTTCPU-RCT(R5)
*OLD*REPLACED       ZR   R0
*OLD*BY             L    R1,ASCBDCTI(R6)  I/O CONNECT TIME
*OLD*I/O            D    R0,=F'100'       CVT TO .01 SEC
*OLD*COUNT          LR   R0,R1
                    L    R1,ASCBOUXB(R6)                         93148
                    L    R0,OUXBIOSM(R1)                         93148
                    LR   R1,R0                                   94213
                    S    R1,RCTTIO-RCT(R5)
                    IF   (LTR,R15,R15,M),OR,(CLR,R0,R1,EQ)
                         ZR   R1
                    FI
                    STM  R0,R1,RCTTIO-RCT(R5)
                    L    R1,ASCBOUXB(R6)
                    L    R0,OUXBPIN(R1)
                    A    R0,OUXBPOUT(R1)
                    LR   R1,R0
                    S    R1,RCTTPG-RCT(R5)
                    IF   (LTR,R15,R15,M),OR,(CLR,R0,R1,EQ)
                         ZR   R1
                    FI
                    STM  R0,R1,RCTTPG-RCT(R5)
               ELSE
                    XC   0(L'RCT,R5),0(R5)
               FI
               AAI  R3,4
               AH   R5,=AL2(L'RCT)
         OD
         PEXIT
         TITLE 'RC2 - CALCULATE CPU USAGE BY DOMAIN'
RC2      PENTRY
         L     R2,CVTPTR                                         94213
         L     R2,CVTASCVT(R2)
         LA    R3,ASVTENTY(R2)
         L     R1,ASVTMAXU(R2)
         SLL   R1,2
         LA    R4,0(R1,R3)
         L     R5,RCTABPTR
         CLRL  DOMAINR,DOMAINRL                                  94213
         DODO  WHILE,(CLR,R3,R4,L)
               IF   (ICM,R6,15,0(R3),P)
                    L    R1,ASCBOUCB(R6)
                    ZR   R15                                     94213
                    IC   R15,OUCBDMN(R1)                         94213
                    MH   R15,=AL2(LDOMRE)
                    LA   R1,DOMAINR(R15)
                    LH   R15,0(R1)
                    AAI  R15,1    COUNT ASCBS IN DOMAIN
                    STH  R15,0(R1)
                    IF   (TM,ASCBRCTF(R6),ASCBOUT,Z)
                         LH   R15,2(R1)
                         AAI  R15,1
                         STH  R15,2(R1)
                    FI
                    L    R0,4(R1)
                    A    R0,4(R5)   ADD ASCB INTERVAL CPU
                    ST   R0,4(R1)
               FI
               AAI  R3,4
               AH   R5,=AL2(L'RCT)
         OD
         PEXIT
         TITLE 'RC3 - PRINT INTERVAL CPU USAGE AND MEMORY BY DOMAIN'
RC3      PENTRY
         PM    M1
         LA    R2,DOMAINR
         LA    R3,DOMAINRL(R2)  END ADDRESS+1                    94213
         ZR    R4
         L     R5,INTBIN
         LA    R6,DOMAINK
         ZR    R7
         DODO  WHILE,(CLR,R2,R3,L)
               LH   R0,0(R2)
               IF   (LTR,R0,R0,P)
                    CVD  R0,PWORK
                    EDIT TO=DRCDMNAS,FROM=PWORK+6,MASK=' Z99'
                    LH   R0,2(R2)
                    CVD  R0,PWORK
                    EDIT TO=DRCDMNAR,FROM=PWORK+6,MASK=' Z99'
                    CVD  R4,PWORK
                    EDIT TO=DRCDMN,FROM=PWORK+6,MASK=' Z99'
                    L    R1,4(R2)
                    AR   R7,R1
                    MH   R1,=H'100'
                    ZR   R0
                    DR   R0,R5
                    CVD  R1,PWORK
                    EDIT TO=DRCDMNP,FROM=PWORK+6,MASK=' Z99'
                    LH   R0,0(R6)
                    SLL  R0,2
                    CVD  R0,PWORK
                    EDIT TO=DRCDMNK,FROM=PWORK+5,MASK=' ZZZ99'
                    LA   R0,RCLINE2
                    PM   PUT
               FI
               AH   R2,=AL2(LDOMRE)
               AAI  R4,1
               AH   R6,=AL2(LDOMKE)
         OD
         LA    R3,16         TOTAL NUMBER OF PROCESSORS POSSIBLE 93148
         LA    R4,DCSCPU0W   POINT TO FIRST COUNTER              93148
         ZR    R0                                                93148
         ZR    R1                                                93148
RC3TOTLP AL    R1,DCSCPU0I-DCSCPU0W(,R4)                         93148
         BC    8+4,*+8       SKIP IF NO CARRY                    93148
         AL    R0,=F'1'      ELSE PROPAGATE CARRY                93148
         LA    R4,DCSCPU1W-DCSCPU0W(,R4)                         93148
         BCT   R3,RC3TOTLP   ADD TOTAL TIMES                     93148
         LR    R2,R1                                             93148
         IF    (SR,R1,R7,M)                                      94213
               ZR   R1                                           94213
         FI                                                      94213
         MH    R1,=H'100'                                        94213
         ZR    R0                                                94213
         D     R0,INTBIN                                         94213
         ZR    R0                                                93148
         D     R0,NUMCPU                                         93148
         CVD   R1,PWORK                                          94213
         EDIT  TO=DRCSYSC,FROM=PWORK+6,MASK=' Z99'               94213
         MVC   DRCSYST,=CL6'SYSTEM'                              94213
         LA    R0,RCLINE3                                        94213
         PM    PUT                                               94213
         LR    R1,R2                                             94213
         MH    R1,=H'100'                                        94213
         ZR    R0                                                94213
         D     R0,INTBIN                                         94213
         ZR    R0                                                93148
         D     R0,NUMCPU                                         93148
         CVD   R1,PWORK                                          94213
         EDIT  TO=DRCSYSC,FROM=PWORK+6,MASK=' Z99'               94213
         MVC   DRCSYST,=CL6'TOTAL '                              94213
         LA    R0,RCLINE3
         PM    PUT
         PEXIT
         TITLE 'TIME - PRINT CURRENT AND IPL DATE AND TIME'
TIME     PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'T - DISPLAY TIME AND DATE NOW AND AT LAST IPL'
               PEXIT
         FI
                TIME  DEC
                STM   R0,R1,PWORK
                EDIT  TO=TIMEDATE,FROM=PWORK,                          X
               MASK=' 99:99:99.99F ZZ99.999'
         AIF   ('&LOCAL' NE 'FPC' AND '&LOCAL' NE 'PID').NOIPLS  94213
                L     R3,CVTPTR
                L     R3,CVTUSER(R3)
                IF    (LTR,R3,R3,NZ)
                      EDIT TO=IPLTIME,FROM=UCVTIPL(R3),                X
               MASK=' 99:99:99.99F ZZ99.999'
                ELSE
                      MVC  IPLTIME,=CL22'UNKNOWN - NO UCVT'
                FI
         AGO   .NOIPLT                                           94213
.NOIPLS  SPACE 1                                                 94213
         LA    R0,X'26'          SET SYSEVENT CODE                 FCI*
         ICM   R0,B'1100',=H'1'  SET ASID TO 1                     FCI*
         LA    R1,TIMEWORK       -> RETURN AREA                    FCI*
         SVC   95                DO IT                             FCI*
         IF    (LTR,R15,R15,Z)                                     FCI*
             L     R4,4(,R1)     GET TOTAL TRANSACTIVE TIME        FCI*
             SRDL  R4,32         MOVE INTO R5 FOR DIVIDE.          FCI*
             D     R4,=F'1024'   CONVERT TO SECONDS.               FCI*
             SLR   R4,R4         IGNORE REMAINDER.                 FCI*
             D     R4,=F'3600'     DIVIDE TO GET HOURS.            FCI*
             STM   R4,R5,TIMEWORK  SAVE HRS/REM FOR LATER          FCI*
             SLR   R4,R4                                           FCI*
             D     R4,=F'24'     DIVIDE TO GET TOTAL DAYS          FCI*
             CVD   R5,PWORK      CONVERT DAYS                      FCI*
             EDIT  TO=UPDAYS,FROM=PWORK+6,MASK=' Z99'              FCI*
             LR    R5,R4         ESTABLISH NEW HOURS....           FCI*
             L     R4,TIMEWORK   GET BACK HOURS REMAINDER          FCI*
             CVD   R5,PWORK      CONVERT HOURS -                   FCI*
             UNPK  UPHH,PWORK+6(2)  - TO PRINTABLE FORMAT.         FCI*
             OI    UPHH+1,X'F0'  FIXUP SIGN BYTE.                  FCI*
             MVI   UPHH+2,C':'   SEPARATOR.                        FCI*
             SRDL  R4,32         MOVE REMAINDER OVER FOR DIVIDE.   FCI*
             D     R4,=F'60'     GET MINUTES.                      FCI*
             CVD   R5,PWORK      CONVERT MINUTES -                 FCI*
             UNPK  UPMM(2),PWORK+6(2) - TO PRINTABLE FORMAT.       FCI*
             OI    UPMM+1,X'F0'  FIXUP SIGN BYTE.                  FCI*
             MVI   UPMM+2,C':'   SEPARATOR.                        FCI*
             CVD   R4,PWORK      REMAINDER IS SECONDS.             FCI*
             UNPK  UPSS(2),PWORK+6(2)  CVT   SEC TO PRNTBLE FORMAT.FCI*
             OI    UPSS+1,X'F0'  FIXUP SIGN.                       FCI*
         ELSE ,                                                    FCI*
             MVC   UPDAYS,=C'???'                                  FCI*
         FI                                                        FCI*
.NOIPLT         LA    R0,TIMELINE                                94213
                PM    PUT
         PEXIT
         TITLE 'WAIT - WAIT INTERVAL '
WAIT     PENTRY
         IF    (CLI,HMODE,TRUE,EQ)
               WRITE 'W - WAIT SPECIFIED NUMBER OF SECONDS'
               WRITE BLANKS                                      94213
               WRITE 'WXXX - XXX IS NUMBER OF SECONDS TO WAIT'
               WRITE BLANKS                                      94213
               WRITE 'THIS COMMAND IS FOR BATCH EXECUTION TO ALLOW'
               WRITE 'DEFINITION OF INTERVAL LENGTH TO BE FOLLOWED'
               WRITE 'BY ANY OF THE INTERVAL COMMANDS'
               WRITE BLANKS                                      94213
               WRITE 'MVSMON CAN BE EXECUTED IN BATCH AS FOLLOWS'
               WRITE ' // EXEC PGM=MVSMON'
               WRITE ' //SYSPRINT DD SYSOUT=A'
               WRITE ' //SYSIN DD *'
               WRITE ' W010 WAIT 10 SECONDS'
               WRITE ' DB   BASIC SYSTEM INFO FOR PREVIOUS INTERVAL'
               WRITE ' I    HOLD LAST INTERVAL'
               WRITE ' DA   ACTIVE TASK ANALYSIS FOR SAME INTERVAL'
               WRITE ' /*'
               PEXIT
         FI
         PM    TIME
         MVC   PWORK(3),LINE+1                                   94213
         NC    PWORK(3),=3C'0'   KILL ALL BUT ZONE BITS          94213
         CLC   PWORK(3),=3C'0'   ALL NUMERIC ZONES?              94213
         BNE   WAITBAD           NO; REJECT (MAY STILL BE BAD)   94213
         PACK  PWORK,LINE+1(3)   WAS (4). TSK, TSK               94213
         CVB   R0,PWORK
         LTR   R0,R0             MAKE SURE                       94213
         BNP   WAITBAD           TOO BAD                         94213
         MH    R0,=H'100'
         ST    R0,WINT
         STIMER WAIT,BINTVL=WINT
         PM    TIME
         PEXIT
WAITBAD  WRITE 'INVALID - USE WNNN (3 DIGITS FOR # OF SECONDS)'  94213
         PEXIT                                                   94213
         TITLE 'GET - GET NEXT DISPLAY COMMAND AND LIST IT'
GET      PENTRY
         MVI   INTDONE,FALSE
         MVI   ATTN,FALSE
         IF    (CLI,NOMSG,TRUE,EQ)
               WRITE 'NONE'
         FI
         IF    (CLI,PARM,FALSE,NE)
               IF   (CLI,PARM,FIRST,EQ),AND,(CLI,MODE,TSOMODE,NE)
                    IF   (CLI,MODE,MPSMODE,EQ)                   94213
                         MVI  PARM,TRUE                          94213
                         MVI  NOMSG,TRUE                         94213
                         L    R1,APARM                           94213
                         L    R14,0(R1)                          94213
                         ST   R14,ATPTERM                        94213
                         L    R14,4(R1)                          94213
                         L    R15,8(R1)                          94213
                         L    R15,0(R15)                         94213
                         ICM  R15,8,BLANKS                       94213
                         LA   R0,LINE                            94213
                         LA   R1,L'LINE                          94213
                         MVCL R0,R14                             94213
                         PEXIT                                   94213
                    FI                                           94213
                    L    R14,APARM
                    L    R14,0(R14)
                    LH   R15,0(R14)
                    IF   (LTR,R15,R15,NZ)
                         MVI  PARM,TRUE
                         MVI  NOMSG,TRUE
                         AAI  R14,2
                         LA   R0,LINE
                         LA   R1,L'LINE
                         ICM  R15,8,BLANKS                       94213
                         MVCL R0,R14
                         LA   R0,LINE
                         PM   PUT
                         PEXIT
                    ELSE
                         MVI  PARM,FALSE
                    FI
               ELSEIF (CLI,PARM,TRUE,EQ),AND,(CLI,MODE,MPSMODE,NE)
                    MVI  EOF,TRUE
                    PEXIT
               ELSEIF (CLI,MODE,MPSMODE,NE)                      94213
                    MVI  PARM,FALSE
               FI
         FI
         MVC   LINE,BLANKS                                       94213
         IF    (CLI,MODE,IOMODE,EQ)
               WRITE '?'
               XA24
               GET   SYSIN,LINE
               XA31
         ELSEIF (CLI,MODE,WTOMODE,EQ)
               MVI   WTORECB,0
               WTOR  ,LINE,80,WTORECB,MF=(E,WTORLIST)
               WAIT  ECB=WTORECB
         ELSEIF (CLI,MODE,MPSMODE,EQ)                            94213
               LA   R0,LINE       RETURN ADDRESS                 94213
               LA   R1,L'LINE     AND LENGTH                     94213
               STM  R0,R1,ATPMSG   PLACE INTO PARM LIST          94213
               OI   ATPLMSG,X'80'   END OF LIST                  94213
               XA24                                              94213
               LA   R0,FSRLCODE   SIGNAL READ                    94213
               LA   R1,MPSPARM                                   94213
               L    R15,ATPPUT                                   94213
               BASR R14,R15                                      94213
               XA31                                              94213
               CH   R15,=H'8'     TEST RETURN                    94213
               BL   EXGETOK                                      94213
               MVI  ATTN,TRUE     CC=8  IS ATTENTION             94213
               BE   EXGETOK                                      94213
               MVI  EOF,TRUE      CC=12 IS END                   94213
EXGETOK  TAG                                                     94213
         ELSE
               WRITE '?'
               LA   R1,LINE
               ICM  R1,8,=X'80'
               LA   R0,80
               TGET  (1),(0),R
               IF    (LTR,R15,R15,NZ)
                     LA   R0,=CL80'ERROR IN TGET - IGNORED'
                     PM   PUT
               FI
         FI
         OC    LINE,BLANKS                                       94213
         IF    (CLI,LINE,C' ',EQ)
               MVC  LINE,LASTLINE
         ELSE
               MVC  LASTLINE,LINE
         FI
         IF    (CLI,MODE,IOMODE,EQ)
               LA    R0,LINE
               PM    PUT
         FI
         MVI   NOMSG,TRUE
         PEXIT
GETMVBLK MVC   LINE(0),0(R15)                                    94213
GETEOF   MVI   EOF,TRUE
         XA31
         PEXIT
         TITLE 'PUT'
PUT      PENTRY
         LPR   R1,R0         LOAD POSITIVE VALUE
         LTR   R0,R0         LITERAL ?                           94213
         BNP   PUTLIT        YES                                 94213
         TR    0(80,R1),PRINTTAB
PUTLIT   LPR   R0,R0         USE REAL ADDRESS                    94213
         IF    (CLI,ATTN,TRUE,EQ)
               IF   (CLI,ABORT,TRUE,EQ)
                    SUBEXIT
               FI
               PEXIT
         FI
         MVI   NOMSG,FALSE
         IF    (CLI,MODE,IOMODE,EQ)
               XA24
               PUT  SYSPRINT
               XA31
         ELSEIF (CLI,MODE,WTOMODE,EQ)
               LR   R1,R0
               MVC  WTODATA,0(R1)
               WTO  MF=(E,WTOLINE)
         ELSEIF (CLI,MODE,MPSMODE,EQ)                            94213
               ST   R0,ATPMSG                                    94213
               LA   R15,L'LINE    (BAD DESIGN) LENGTH OF MESSAGE 94213
               STCM R15,7,ATPLMSG+1  PASS TO PROCESSOR           94213
               XA24                                              94213
               LA   R0,FSWLCODE   SIGNAL WRITE                   94213
               LA   R1,MPSPARM                                   94213
               L    R15,ATPPUT                                   94213
               BASR R14,R15                                      94213
               XA31                                              94213
         ELSE
               LR   R1,R0
               ICM  R1,8,=X'00'
               LA   R0,80
               TPUT (1),(0),R
         FI
         PEXIT
         TITLE 'LITERALS AND EQUATES'
         EQUAL
         TITLE 'WORK AREA'
WORK     DS    0D
DCBLIST  OPEN  (,,,(OUTPUT)),MF=L
SYSIN    DCB   DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=80,DDNAME=SYSIN
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=F,BLKSIZE=80,DDNAME=SYSPRINT
*
*  MISC. DATA
*
JOBNAME  DC    CL8' '
JOBASID  DC    H'0'
LINE     DC    CL80' '
BLANKS   DC    CL80' '       CONSTAND - BLANK LINE               94213
LASTLINE DC    CL80'DJ'
HMODE    LOGICAL FALSE,(TRUE,FALSE)
NOMSG    LOGICAL FALSE,(TRUE,FALSE)
EOF      LOGICAL FALSE,(TRUE,FALSE)
MODE     LOGICAL IOMODE,(IOMODE,WTOMODE,TSOMODE,MPSMODE)         94213
PARM     LOGICAL FIRST,(FIRST,TRUE,FALSE)
VALID    LOGICAL FALSE,(TRUE,FALSE)
AFSF     DC   A(0)                                               94213
FSRLPARM DC   4F'0'                                              94213
FSWLPARM DC   F'0'                                               94213
FSRLCODE EQU  7                                                  94213
FSWLCODE EQU  8                                                  94213
FSCLCODE EQU  11                                                 94213
ATPPUT   DC   A(0)
MPSPARM  DS   0XL12                                              94213
ATPTERM  DC   A(0)                                               94213
ATPMSG   DC   A(0)                                               94213
ATPLMSG  DC   X'80',AL3(0)                                       94213
APARM    DC   A(0)
WTORECB  DC   F'0'
PWORK    DC   D'0'
WTORLIST WTOR 'MVSMON',MF=L
WTOLINE  DS   0F
         DC   AL2(WTOEND-*,0)
WTODATA  DC   CL80' '
WTOEND   EQU  *
TITLE1   DS   0CL80
         DC   C'MVSMON GU955020 VERSION='
         DC   C'&SYSDATE',C' '
         DC   C'&SYSTIME',C'  SCP='
DSCP     DC   CL8' '
         FILL TITLE1
TITLE2   DS   0CL80
         DC   C'ENTER COMMAND OR HELP'
         FILL TITLE2
TIMELINE DS   0CL80
         DC   C'NOW='
TIMEDATE DC   CL22' '                                            94213
         AIF  ('&LOCAL' EQ 'FPC' OR '&LOCAL' EQ 'PID').TIMOLD    94213
         DC   C'  UP FOR '                                       94213
UPDAYS   DC   CL4' ',C' DAYS AND '                                 FCI*
UPHH     DC   CL2' ',C' '         FOR UP  TIME HH:MM:SS            FCI*
UPMM     DC   CL2' ',C' '                                          FCI*
UPSS     DC   CL2' ',C' '                                          FCI*
         AGO  .TIMCOM                                            94213
.TIMOLD  DC   C'  LAST IPL='                                     94213
IPLTIME  DC   CL22' '
.TIMCOM  FILL TIMELINE
TIMEWORK DC    4F'0'         WORK AREA                           94213
*
*        INTERVAL PROCESSING DATA
*
WINT     DC    F'0'   INTERVAL FOR WAIT COMMAND
INTLAST  DC    F'0'   END OF LAST INTERVAL IN 0.01 SEC
INTBIN   DC    F'0'   INTERVAL IN 0.01 SEC
INTHOLD  LOGICAL FALSE,(TRUE,FALSE) DO NOT UPDATE INTERVAL INFO.
INTDONE  LOGICAL FALSE,(TRUE,FALSE) ONLY UPDATE ONCE PER INPUT
INTMSG   DS    0CL80
         DC    C'ELAPSED INTERVAL IS '
DINTSEC  DC    CL6' ',C' SECONDS ENDING '
DINTEND  DC    CL6' ',C' - TRACE INTERVAL IS'
DTRCINT  DC    CL6' ',C' MS'
         FILL  INTMSG
*
*        DISPLAY DATA AREAS
*
*
*        DA, DJ, DU, DS DISPLAY DATA
*
PMINPCT  DC    PL3'0'       MINIMUM CPU AND IOC % FOR DA,XX
PTOTPCT  DC    PL3'0'       TOTAL CPU AND IOC % FOR DA ASCB
DALINE0  DS    0CL80
         DC    C'                          ---RATES--- -TRACE TOT-'
         FILL  DALINE0
DALINE1  DS    0CL80
         DC    C'                  --JOB- CPU SWP CPU IOC MEM PAG'
         DC    C'    T-CPU    T-IOC T-MEM T-XEQ'
         FILL  DALINE1
DALINE2  DS    0CL80
         DC    C'JOBNAME  STEPNAME CL DMN PRI CNT (%) (%) (%) P/S'
         DC    C' SSSSS.TH    COUNT   (K)   MIN'
         FILL  DALINE2
DALINE3  DS    0CL80
DAJOB    DC    CL8' ',C' '
DASTEP   DC    CL8' ',C'  '
DACLS    DC    CL1' '
DADMN    DC    CL4' '
DADPG    DC    CL4' '
DASWP    DC    CL4' '
DARCPU   DC    CL4' '
DARIO    DC    CL4' '
DARMEM   DC    CL4' '
DARPAG   DC    CL4' '
DATCPU   DC    C' ZZZ99.99'
         DC    C' '                                              94213
DATIO    DC    C' ZZZZZ99'                                       94213
DATMEM   DC    C' ZZZ99'
DATXEQ   DC    C' ZZZ99'
         FILL  DALINE3
*
*        DC DATA
*
DCLINE   DS    0CL80                                             94213
         DC    C'CPU UTILIZATION FOR'                            93148
DCNCPU   DC    CL4' ',C' PROCESSORS IS'                          93148
DCPCPU   DC    CL7' '                                            93148
         FILL  DCLINE                                            93148
DCLINE1  DS    0CL80                                             93148
         DC    C'  '                                             93148
DCICPU0  DC    C'CPU0='                                          93148
DCDCPU0  DC    CL4' ',C'%  CPU1='                                94213
DCDCPU1  DC    CL4' ',C'%  CPU2='                                93148
DCDCPU2  DC    CL4' ',C'%' CPU3='                                94213
DCDCPU3  DC    CL4' ',C'%'                                       93148
         FILL  DCLINE1                                           93148
DCWORK   DS    0CL17
*        DC    C'  CH='
*CCHAN   DC    CL4' Z99',C' ='
         DC    C'  CHPID='                                       94213
DCCHAN   DC    C'XX',C' '                                        94213
DCBUSY   DC    CL4' Z99',C'%'
         FILL  DCWORK
NUMCPU   DC    F'0'          NUMBER OF CPUS FOUND                93148
DCSCPU0W DC    F'0'                                              94213
DCSCPU1W DC    15F'0'                                            93148
DCSCPU0I DC    F'0'                                              94213
DCSCPU1I DC    15F'0'                                            93148
DCBINT   DC    F'0'                                              94213
DCNTSAMP DC    XL8'00' LAST TOTAL SAMPLES AND INTERVAL SAMPLES   94213
         DS    0D                                                94213
DCNCHANS DC    XL(16*16)'00' LSIO, ISIO, LBUSY, IBUSY            94213
DCLINE2  DS    0CL80
         DC    C' '
DCAREA   DC    CL(4*L'DCWORK)' '
         FILL  DCLINE2
*
*        DD DATA
*
DDLINE   DS    0CL80
DDUCB    DC    CL3' ',C' '         UCB
DDVOL    DC    CL6' ',C' MSTAT '   VOLUME
DDMSTAT  DC    CL3' ',C' USTAT '   R-RESERVED P-PERM MOUNT A-ALLOCATED
DDUSTAT  DC    CL2' ',C' DCBS'     PV-PRIVATE PB-PUBLIC ST-STORAGE
DDDCBS   DC    CL4' ',C' '         OPEN DCBS
DDDLTMSG DC    CL10'DELTM=XXXX'
         ORG   DDDLTMSG+6
DDDELTM  DC    CL4' '              AVG. DELAY TIME
         FILL  DDLINE
DBVTLINE DS    0CL80
         DC    C'DBVT OFFSET ='
DBVTOFF  DC    CL6' ZZZ99'
         FILL  DBVTLINE
PDBVT    DC    PL3'0'
*
*        DE DATA
*
DELINE2  DS    0CL80
DEUCB2   DC    CL3' ',C' '
DESNS2   DC    CL40' '
         FILL  DELINE2
DELINE3  DS    0CL80
DEAJOB   DC    CL8' ',C' '
DEAMSG   DC    CL40' '
         FILL  DELINE3
EBCBIN   DC    256X'00'
         ORG   EBCBIN+C'A'
         DC    AL1(10,11,12,13,14,15)
         ORG   EBCBIN+C'0'
         DC    AL1(0,1,2,3,4,5,6,7,8,9)
         ORG
PRINTTAB TRTTAB PRINT
*
*        DL DATA
*
DLLINE1  DS    0CL80
DLUCB    DC    CL3' ',C' '
DLMSG    DC    CL20' '
         FILL  DLLINE1
*
*        DK DATA
*
DKLINE   DS    0CL80
DKNAME   DC    CL8' ',C' '
DKUSE    DC    CL4' '
         FILL  DKLINE
*
*        DM DATA
*
DMLINE   DS    0CL80
         DC    C'MOUNT PENDING FOR '
DMUCB    DC    CL3' ',C' '
DMVOL    DC    CL6' '
         FILL  DMLINE
*
*        DN DATA
*
DNFRTCB  DC    F'0'
DNPASCB  DC    PL2'0'
DNPJOB   DC    PL2'0'
DNPTSO   DC    PL2'0'
DNPSTC   DC    PL2'0'
DNPUCB   DC    PL2'0'
DNPDISK  DC    PL2'0'
DNPTAPE  DC    PL2'0'
DNPPORT  DC    PL2'0'
DNPUR    DC    PL2'0'
DNPOTHER DC    PL2'0'
DNLINE1  DS    0CL80
         DC    C'TOTAL ASCBS='
DNDASCB  DC    CL4' ',C'  READY TCBS='
DNRTCB   DC    CL4' ',C'  JOBS='
DNJOB    DC    CL4' ',C'  USERS='
DNTSO    DC    CL4' ',C'  STCS='
DNSTC    DC    CL4' '
         FILL  DNLINE1
DNLINE2  DS    0CL80
         DC    C'ONLINE UCBS='
DNDUCB   DC    CL4' ',C'  DISKS='
DNDISK   DC    CL4' ',C'  TAPES='
DNTAPE   DC    CL4' ',C'  PORTS='
DNPORT   DC    CL4' ',C'  UR='
DNUR     DC    CL4' ',C'  OTHER='
DNOTHER  DC    CL4' '
         FILL  DNLINE2
*                                                                94213
*        DP DATA                                                 94213
*                                                                94213
DPLINE   DS    0CL80                                             94213
         DC    C'INTERVAL PAGING DMD='                           94213
DPDPAGE  DC    CL4' ',C' P/S  VIO='                              94213
DPDVIO   DC    CL4' ',C' P/S  SWP='                              94213
DPDSWAP  DC    CL4' ',C' P/S'                                    94213
         AIF   ('&LOCAL' NE 'FPC').NXCPG                         94213
         DC    C'  XCOM='                                        94213
DPDXCOM  DC    CL4' ',C' MSG/S'                                  94213
.NXCPG   FILL  DPLINE                                            94213
DPLINE2  DS    0CL80                                             94213
         DC    C'COUNTER TOTALS: DMD='                           94213
DPDPAGE2 DC    CL8' ',C'  VIO='                                  94213
DPDVIO2  DC    CL8' ',C'  SWP='                                  94213
DPDSWAP2 DC    CL8' '                                            94213
         FILL  DPLINE2                                           94213
         DS    0F                                                94213
DPSPAGE  DC    XL8'00'                                           94213
DPSVIO   DC    XL8'00'                                           94213
DPSSWAP  DC    XL8'00'                                           94213
*
*        DR DATA
*
DRLINE   DS    0CL80
         DC    C'WTOR REPLIES OUTSTANDING='
DRWTORS  DC    CL4' '
         FILL  DRLINE
*
*        DT DATA
*
DTLINE   DS    0CL80
DTUCB     DC    CL3' ',C' '
DTVOL     DC    CL6' ',C' '
DTJOB     DC    CL8' ',C' SIO='
DTSIO     DC    CL7' ',C' TERR='
DTTERR    DC    CL4' ',C' PERR='
DTPERR    DC    CL4' ',C' '
DTMSG     DC    CL25' '
         FILL  DTLINE
*
*        DV
*
DVDATA   DS    0H       DATA COLLECTED BY DV1 AND DV2
DVSCOM   DC    F'0'     ADR OF COMMON
DVSECOM  DC    F'0'     ADR OF EXT. COMMON
DVSEPVT  DC    F'0'     ADR OF EXT. PRIVATE
DVHRPVT  DC    F'0'     REAL PVT
DVHRCOM  DC    F'0'          COM
DVHRECOM DC    F'0'          ECOM
DVHREPVT DC    F'0'          EPVT
DVHFPVT  DC    F'0'     FIXED PVT
DVHFCOM  DC    F'0'           COM
DVHFECOM DC    F'0'           ECOM
DVHFEPVT DC    F'0'           EPVT
DVBREAL  DC    F'0'     TOTAL REAL
DVBFREE  DC    F'0'           FREE
DVBALLOC DC    F'0'           ALLOC
DVBFIXED DC    F'0'           FIXED
DVBBAD   DC    F'0'           FLAGGED AS BAD AND UNUSABLE
DVBOFF   DC    F'0'           OFFLINE
DVBVIO   DC    F'0'           IN USE FOR VIO
DVBVR    DC    F'0'           ALLOCATED FOR V=R REGION
LDVDATA  EQU   *-DVDATA
DVLINE1  DS    0CL80
         DC    CL6'VIRT',C' PVT='
DVVPVT   DC    CL8' ',C'K COM='
DVVCOM   DC    CL8' ',C'K ECOM='
DVVECOM  DC    CL8' ',C'K EPVT='
DVVEPVT  DC    CL8' ',C'K TOT='
DVVTOT   DC    CL8' ',C'K'
         FILL  DVLINE1
DVLINE2  DS    0CL80
         DC    CL6'REAL',C' PVT='
DVRPVT   DC    CL8' ',C'K COM='
DVRCOM   DC    CL8' ',C'K ECOM='
DVRECOM  DC    CL8' ',C'K EPVT='
DVREPVT  DC    CL8' ',C'K TOT='
DVRTOT   DC    CL8' ',C'K'
         FILL  DVLINE2
DVLINE3  DS    0CL80
         DC    CL6'FIXED',C' PVT='
DVFPVT   DC    CL8' ',C'K COM='
DVFCOM   DC    CL8' ',C'K ECOM='
DVFECOM  DC    CL8' ',C'K EPVT='
DVFEPVT  DC    CL8' ',C'K TOT='
DVFTOT   DC    CL8' ',C'K'
         FILL  DVLINE3
DVLINE4  DS    0CL80
         DC    CL6'TOTALS',C' REAL='
DVTREAL  DC    CL8' ',C'K  FREE='
DVTFREE  DC    CL8' ',C'K  ALLOC='
DVTALLOC DC    CL8' ',C'K  FIXED='
DVTFIXED DC    CL8' ',C'K'
         FILL  DVLINE4
DVLINE5  DS    0CL80
         DC    CL6'TOTALS',C' BAD='
DVTBAD   DC    CL8' ',C'K  OFFLINE='
DVTOFF   DC    CL8' ',C'K  VIO='
DVTVIO   DC    CL8' ',C'K  V=R='
DVTVR    DC    CL8' ',C'K'
         FILL  DVLINE5
DVLINE6  DS    0CL80
         DC    CL6'TOTALS',C' CSA='
DVTCSA   DC    CL8' ',C'K  SQA='
DVTSQA   DC    CL8' ',C'K  UNALLOC='
DVTUNA   DC    CL8' ',C'K  CSA>SQA='
DVTCVT   DC    CL8' ',C'K'
         FILL  DVLINE6
*
*        DW DATA
*
DWLINE   DS    0CL80
DWUCB    DC    CL3' ',C' '
DWVOL    DC    CL6' ',C' I/O PENDING'
         FILL  DWLINE
*
*        DATA FOR MEMORY USAGE BY DOMAIN
*
         DS    0F
DOM$NAME DS    0H    FCI DOMAIN NAME TABLES                        FCI*
         PUSH  PRINT                                               FCI*
         PRINT GEN                                                 FCI*
         $DOMAINS                                                  FCI*
         POP   PRINT                                               FCI*
         DC    X'FFFF'      END OF TABLE                           FCI*
         DS    0F                                                94213
DOMAINK  DS    XL(256*2)'00'  256 DOMAIN PAGE FRAME COUNTERS     93148
LDOMKE   EQU   2                                                 94213
DOMLINE  DS    0CL80                                             94213
DOMDESC  DC    CL6'DOMAIN',C'='                                  94213
DOMN     DC    CL4' ',C' '                                         FCI*
DOMN$    DC    CL12' ',C' '                                        FCI*
DOMK     DC    CL6' ',C'K  '                                     94213
DOMPCT   DC    CL4' ',C'%'                                       94213
         FILL  DOMLINE                                           94213
DMNMSG   DS    0CL80                                               FCI*
         DC    C' DOMAIN='                                         FCI*
DMNMSG#  DC    CL4' ',C' - '                                       FCI*
DMNMSG$  DC    CL12' '                                             FCI*
         FILL  DMNMSG                                              FCI*
*
*        CPU USAGE RATE BY ASCB AND DOMAIN DATA
*
RCTABPTR DC    A(0)   POINTER TO ASCB INTERVAL CPU USAGE TABLE
RCT     SDSA
RCTTCPU  DS    F  TOTAL TCB AND SRB CPU
RCTICPU  DS    F  INTERVAL CPU
RCTTIO   DS    F  TOTAL EXCP IO
RCTIIO   DS    F  INTERVAL EXCP IO
RCTTPG   DS    F  TOTAL PAGING
RCTIPG   DS    F  INTERVAL PAGING
RCTCTAB   SDSA
RCTCSIO    DS  X  SIO COUNTS FROM TRACE TABLE
RCTCEXT    DS  X  EXTERNAL INTERRUPTS
RCTCSVC    DS  X  SVC
RCTCPGM    DS  X  PGM INTERRUPTS
RCTCISD    DS  X  INITIAL SRB DISPATCH
RCTCIO     DS  X  IO INTERRUPTS
RCTCSRR    DS  X  SRB
RCTCDSP    DS  X  TASK DISPATCH
         EDSA
        EDSA
RCLINE2  DS    0CL80
         DC    C'DOMAIN='
DRCDMN   DC    CL4' ',C'  TOT-ASCBS='
DRCDMNAS DC    CL4' ',C'  RDY-ASCBS='
DRCDMNAR DC    CL4' ',C'  CPU='
DRCDMNP  DC    CL4' ',C'%  '
DRCDMNK  DC    CL6' ',C'K'
         FILL  RCLINE2
RCLINE3  DS    0CL80
DRCSYST  DC    C'SYSTEM',CL39' ',C'CPU='                         94213
DRCSYSC  DC    CL4' ',C'%  '
         FILL  RCLINE3
*
*        DATA FOR PD - PAGE DSN INFO.
*
PDHEAD1  DS    0CL80
         DC    CL10'     SLOTS'
         DC    CL10'       VIO'
         DC    CL10'   NON-VIO'
         DC    CL10'    UNUSED'
         DC    CL10'    UNRESV'
         DC    CL10'  SWAP-SET'
         FILL  PDHEAD1
PDTLINE  DS    0CL80
PDSLOTS  DC    CL10' '
PDVSC    DC    CL10' '
PDNVSC   DC    CL10' '
PDUNUSED DC    CL10' '
PDUNRESV DC    CL10' '
PDSETSZ  DC    CL10' '
         FILL  PDTLINE
PDHEAD2  DS    0CL80
         DC    CL15'--- DSNAME ----',C' '
         DC    CL6'VOLUME',C' '
         DC    CL3'UCB',C' '
         DC    CL6'TYPE'
         DC    CL7'  SLOTS'
         DC    CL7'  AVAIL'
         DC    CL7' WEIGHT'
         DC    CL7' ERRORS'
         FILL  PDHEAD2
PDPSLINE DS    0CL80
PDDSN    DC    CL15' ',C' '
PDVOL    DC    CL6' ',C' '
PDUCB    DC    CL3' ',C' '
PDTYPE   DC    CL6' '
PDSIZE   DC    CL7' '
PDAVAIL  DC    CL7' '
PDWEIGHT DC    CL7' '
PDERRORS DC    CL7' '
         FILL  PDPSLINE
*
*        DATA FOR  SRM DISPLAY
*
SLINE1   DS    0CL80
         DC    C'SRM '
DSTYP    DC    CL3' ',C' LOW='
DSLOW    DC    CL4' ',C' HIGH='
DSHIGH   DC    CL4' ',C' AVG='
DSAVG    DC    CL4' '
         FILL  SLINE1
*
*        DATA FOR XCOM DISPLAY
*
XCOMRATE DC    A(0,0) TOTAL AND INTERVAL XCOM COUNTS
DXCOM1   DS    0CL80
         DC    C'XCOM TOTALS - RCUR='
DRCUR    DC    CL7' ',C'  RMAX='
DRMAX    DC    CL7' ',C'  RTOT='
DRTOT    DC    CL7' '
         FILL  DXCOM1
DXCOM2   DS    0CL80
         DC    C'XCOM  PATHS - PID='
DPATH    DC    CL4' ',C' '
DPATHJOB DC    CL8' '
         FILL  DXCOM2
DXCOM3   DS    0CL80
         DC    C'XCOM   MSGS - PID='
DPID     DC    CL4' ',C'  TID='
DTID     DC    CL4' ',C'  ME#='
DME#     DC    CL7' '
         FILL  DXCOM3
*
*        DATA AND ROUTINES FOR PROGRAM INTERRUPTION HANDLER
*
         DROP
PGMCHK1  TAG                       STAGE 1 PGMCHK HANDLER
         USING *,R15
         MVC   PGMPSW,4(R1)        SAVE PSW
         LA    R15,PGMCHK2
         STCM  R15,7,9(R1)         CHANGE PSW TO EXIT TO STAGE 2
         BR    R14                 EXIT TO SUPVR FROM STAGE 1
PGMCHK2  BASR  R15,0               STAGE 2 PGMCHK HANDLER
         USING *,R15
         LM    R0,R15,PGMCHKSA
         BR    R15                 EXIT TO STAGE 3 AT END OF MAINLINE
PGMCHKSA DC    16F'0'
SAVEPICA DC    A(0)
SPIELIST SPIE  0,((1,15)),MF=L
         DC    CL8'*PGMPSW*'
PGMPSW   DC    D'0'
DWORK    DC    CL7' '
TUCBCHAN DC    H'0'    BINARY UCB ADDRESS XYZ
TUCBNAME DC    CL3' '  EBCDIC UCB ADDRESS XYZ (SEE TUCBCALC)
HEX      DC    C'0123456789ABCDEF'
PGMMSG   DS    0CL80
         DC    C'PROGRAM CHECK AT '
DPGMCHK  DC    CL6' '
         FILL  PGMMSG
*
*        TSO ATTENTION EXIT AND RELATED DATA AREAS
*
STAXRTN  TAG
         USING *,R15
         IF    (CLI,ATTN,TRUE,NE)
               MVI  ATTN,TRUE        REQ. SURPRESS REST OF COMMAND
         ELSEIF (CLI,ABORT,TRUE,NE)
               MVI  ABORT,TRUE       REQ. IMMEDIATE SUBEXIT
         ELSE
               ABEND 122,DUMP        DUMP IF THE ABOVE DON'T WORK
         FI
         BR    R14
         DROP  R15
ATTN     LOGICAL FALSE,(TRUE,FALSE)
ABORT    LOGICAL FALSE,(TRUE,FALSE)
STAXLIST STAX  MF=L
STAXMSG  DC    CL80'MVSMON COMMAND ABORTED BY ATTN KEY'
         DS    0F
DOMAINR  DC    16XL(16*8)'00'   DOMAIN INTERVAL ASCBS AND CPU USAGE
DOMAINRL EQU   *-DOMAINR     LENGTH OF COUNTER                   94213
LDOMRE   EQU   8
*
*        END OF WORK AREA CSECT
*
LWORK    EQU   *-WORK
         TITLE 'SYSTEM CONTROL BLOCK EQUATES'
*
*        ASVT     V2 PG 67
*
ASVTMAXU EQU  X'204'       NUMBER OF ASCB ENTRIES
ASVTENTY EQU  X'210'       START  OF ASCB ENTRIES
*
*        ASCB     V2 PG 45
*
ASCBASID EQU  X'24'        ASID NUMBER
ASCBDP   EQU  X'2B'        DISPATCHING PRIORITY
ASCBCSCB EQU  X'38'        COMMAND SCHED. CONTROL BLOCK CHAIN
ASCBTSB  EQU  X'3C'        TERMINAL STATUS BLOCK FOR TSO ONLY
ASCBEJST EQU  X'40'        UNSIGNED 64 BIT TCB CPU TIME
ASCBRCTF EQU  X'66'        RCT FLAGS
ASCBOUT  EQU  X'04'        ASCB SWAPPED OUT
ASCBFLG1 EQU  X'67'        FLAG FIELD
ASCBDSP1 EQU  X'72'        DISPATCH FLAG FIELD
ASCBOUCB EQU  X'90'        SRM USER CONTROL BLOCK
ASCBOUXB EQU  X'94'        SRM USER EXTENSION BLOCK
ASCBFMCT EQU  X'98'        PAGE FRAME COUNT - WORKING SET
ASCBJBNI EQU  X'AC'        JOBNAME OF INITS
ASCBJBNS EQU  X'B0'        JOBNAME OF STCS
ASCBSRBT EQU  X'C8'        SRB CPU TIME
ASCBTCBS EQU  X'D8'        COUNT OF READY TCBS
ASCBXCNT EQU  X'146'       EXCP COUNT
ASCBDCTI EQU  X'17C'       I/O CONNECT TIME
*
*        ASMVT   AUX. STORAGE TABLE  V2 PG 48
*
ASMSART  EQU  X'04'          SWAP ACTIVITY TABLE
ASMPART  EQU  X'08'          PAGE ACTIVITY TABLE
ASMBKSLT EQU  X'6C'          UNRESERVED SLOTS
ASMSLOTS EQU  X'70'          TOTAL SLOTS
ASMVSC   EQU  X'74'          ALLOC VIO SLOTS
ASMNVSC  EQU  X'78'          ALLOC NON-VIO SLOTS
*
*        CDE   V2 PG 121
*
CDCHAIN  EQU  X'00'         NEXT CDE
CDNAME   EQU  X'08'         NAME
CDENTPT  EQU  X'10'         LOAD MODULE ENTRY POINT
CDUSE    EQU  X'18',2       USE COUNT
*
*        CMCT V2 PG 151
*
CMCTDBVT EQU  X'8'          DEVICE MEAS. VECTOR TABLE
CMCTCPMT EQU  X'C'          CHANNEL MEASUREMENT BLOCK
CMCTHICP EQU  X'1C'         LAST CHANNEL MEAS. BLOCK
*
*        CPMT V2 PG 158
*
CPMTUTIL EQU  X'8'          PERCENT CHANNEL BUSY (NEG. IF OFFLINE)
*
*        CSCB  V2 PG 142
*
CSCBPTR  EQU  X'00'         NEXT CSCB
CSCBJOB  EQU  X'08'         JOB NAME
CSCBSTEP EQU  X'40'         STEP NAME
*
*        CSD   V2 PG 154
*
CSDCPUAL EQU  X'08'        MASK OF AVAILABLE CPUS
CSDCMT   EQU  X'A8'         CHANNEL MEASUREMENT TABLE            94213
*                                                                94213
CMT#ACT  EQU  X'28',2       NUMBER OF ACTIVE CHANNELS?           94213
CMT#CHN  EQU  X'2A',2       NUMBER IN TABLE                      94213
CMTCHPTR EQU  X'2C',4       TABLE OF CHANNEL STATUS (8*#CH)      94213
*
*        CVT    V2 PG 166
*
CVTPTR   EQU  16             OLD CVT POINTER                     94213
CVTPRODN EQU  -40  X'28'    SCP PRODUCT LEVEL                    94213
CVTCUCB  EQU  X'064'        UCM FOR MCS
CVTMZ00  EQU  X'0A4'        SIZE OF VIRTUAL STORAGE
CVTQLPAQ EQU  X'BC'         POINTER TO ACTIVE LPA CDE LIST
CVTSMCA  EQU  X'0C4'        SMF COMMON AREA
CVTUSER  EQU  X'0CC'        POINTER TO FPC USER CVT
CVTPVTP  EQU  X'164'        PAGE VECTOR TABLE
CVTLPDIA EQU  X'168'        START OF LPA (SEE VOL1 5-64)
CVTSHRVM EQU  X'1A0'        START OF CSA
CVTASCVT EQU  X'22C'        ADDRESS SPACE VECTOR TABLE
CVTGDA   EQU  X'230'        GLOBAL DATA AREA
CVTOPCTP EQU  X'25C'        SRM CONTROL TABLE (RMCT)
CVTCSD   EQU  X'294'        COMMON SYSTEM DATA
CVTASMVT EQU  X'2C0'        AUX. STORAGE TABLE
CVTLCCAT EQU  X'300'        LOGICAL CPU ADDR TABLE
CVTMFCTL EQU  X'31C'        STGST FOR MF/1 OR RMF
CVTRLSTG EQU  X'358'        REAL STORAGE IN K
CVTDOFFE EQU  X'48C'        END OF DAT OFF NUC
CVTRCEP  EQU  X'490'                                             94213
CVTUCBA  EQU  X'4E4'        FIRST UCB
*
*        DBVT V2  PG ???
*
DBVTDMBP EQU  1120         DMB QUEUE PTR (BEST GUESS FROM SCAN TEST)
LDBVT    EQU  X'608'       LENGTH OF DBVT POINTER AREA(FROM DUMP?)
*
*        DCB  V2 PG 212
*
DCBEODAD EQU  X'20'        END OF FILE ADDRESS
*
*        DMB  V2 OG 367
*
DMBUCBP  EQU  X'0'         UCB POINTER
DMBFWDQ  EQU  X'8'         NEXT DMB
DMBDELTM EQU  X'1C'        AVG. DELAY TIME
*
*        DQE  V2 PG 329
*
DQEBLKAD EQU  X'08'        START OF BLOCK
DQELNTH  EQU  X'0C'        LENGTH OF BLOCK
*
*        ECCDB  MF/RMF CHANNEL EVENT DATA   (SEE RMF MANUAL)
*
ECCDSIOS EQU  X'08'        TOTAL SIO COUNT
ECCDBUSY EQU  X'0C'        TOTAL CHANNEL BUSY SAMPLES
ECCDBL   EQU  X'30'        LENGHT OF CHANNEL ENTRY (WAS X'14')
*
*        ECCEDT  MF/RMF CHANNEL EVENT DATA TABLE
*
ECCECPEQ EQU  X'00'        POINTER TO ECCPE FOR CPUS
ECCECPUS EQU  X'09'        NUMBER OF CPUS
ECCESAMP EQU  X'0C'        TOTAL CHANNEL SAMPLES
*
*        ECCPE MF/RMF CPU STATUS DATA
*
ECCPCNUM EQU  X'02'        NUMBER OF CHANNEL ECCDB ENTRIES
ECCPCDBQ EQU  X'04'        POINTER TO ECCDB TABLE
LECCPE   EQU  X'14'        LENGTH OF ECCPE ENTRY
*
*        GDA   V3 PG 76
*
GDACSASZ EQU  X'70'        SIZE OF CSA
GDACSARE EQU  X'84'        UNALLOCATED COMMON LEFT (CSA+SQA)
GDACSACV EQU  X'8C'        AMOUNT OF CSA CONVERTED TO SQA
GDASQASZ EQU  X'94'        SIZE OF SQA
*
*        LCCVT V2 PG 523
*
LCCAT00P EQU  X'00'        CPU 0 LCCA POINTER
LCCAT01P EQU  X'04'        CPU 1 LCCA POINTER
LCCAT02P EQU  X'08'        CPU 2 LCCA POINTER (FOR 3081G)
*
*        LCCA  V2 PG 509
*
LCCAWTIM EQU  X'268'       CPU ACCUMULATED WAIT
*
*        XCOM MESSAGE HEADER CONTROL BLOCKS  (FPC LOCAL MODS)
*
MHBNEXT  EQU  X'00'        NEXT MHB
MHBPID   EQU  X'04'        DESTINATION PATH ID FOR MESSAGE
MHBTID   EQU  X'08'        DESTINATION TERM ID FOR MESSAGE OR ZERO
MHBME#   EQU  X'0E'        CURRENT MESSAGES QUEUED TO THIS MHB (H)
*
*        OUCB V3 PG 17  (NOTE MANY CHANGES FROM MVS 3.8)
*
OUCBNPG  EQU  X'B8',2      PERFORMANCE GROUP
OUCBDMN  EQU  X'28',1      PERFORMANCE DOMAIN
OUCBTMO  EQU  X'4C'        TRANSACTION START TIME
OUCBWSS  EQU  X'52',2      WORKING SET PAGES AT LAST SWAP IN
OUCBPSS  EQU  X'74',8      CPU PAGE SECONDS
OUCBSWC  EQU  X'2A'        TRANSACTION SWAP COUNT
OUCBRPG  EQU  X'B4'        RESET PERFORMANCE GROUP
OUCBCLS  EQU  X'D8'        TRANSACTION CLASS
*
*        OUXB SRM USER EXTENSION BLOCK  V3 PG 28
*
OUXBPIN  EQU  X'10'        INTERVAL PAGE IN
OUXBPOUT EQU  X'14'        INTERVAL PAGE OUT
OUXBIOSM EQU  X'98'          SMF EXCP COUNT                      94213
OUXBSIPR EQU  X'DC'        RECENT PAGE IN RATE
*
*        PART/SART PAGE AND SWAP ACTIVITY TABLES  V3 PG 32
*
PARTSIZE EQU  X'04'        NUMBER OF DSNS
PARTDSNL EQU  X'18'        LIST OF DSN NAMES
PARTENTS EQU  X'50'        START OF PARTE/SARTE
LPARTE   EQU  96                                                 94213
LDSN     EQU  44
*
*        PARTE/SARTE DSN ENTRIES V3 PG 32
*
PARETYPE EQU  X'08'        TYPE INDICATORS
PAREFLG1 EQU  X'09'        DAMAGE FLAG
PARESZSL EQU  X'10'        TOTAL SLOTS
PARESLTA EQU  X'14'        ALLOCATED SLOTS
PARERQTM EQU  X'38'        WEIGHT FACTOR BASED ON USAGE
PARERRCT EQU  X'18'        PERM. I/O ERROR COUNT
PAREUCBP EQU  X'2C'        UCB POINTER
*
*        XCOM PATH CONTROL BLOCK (SEE SR301000-SR303000)
*
PCBNEXT  EQU  X'00'        NEXT PCB IN CHAIN
PCBPID   EQU  X'04'        NAME OF PATH
PCBJOBN  EQU  X'14'        NAME OF JOB WHICH CREATED PATH
*
*        PFTE V4 PG 76
*
PFTASID  EQU  X'12'        ASID OF OWNER
PFTVSA   EQU  X'14'        VBN (HIGH ORDER 12 BITS OF ADDR
PFTFXCT  EQU  X'0E'        FRAME FIX COUNT
PFTFLGS1 EQU  X'09'        FIRST FLAG BYTE
PFTBADFR EQU  X'01'          BAD FRAME
PFTFLGS2 EQU  X'0A'        SECOND FLAG BYTE
PFTONAFQ EQU  X'80'          AVAILABLE
PFTOFFLN EQU  X'20'          OFFLINE
PFTVRALC EQU  X'04'          V=R ALLOC
PFTFLGS3 EQU  X'0B'        THIRD FLAG BYTE
PFTVIORU EQU  X'20'          VIO REUSABLE
LPFTE    EQU  32
*
*        PSA V3 PG 92
*
PSATOLD  EQU  X'224'       CURRENT ASCB
*
*        PVT V4 PG 123
*
PVTRIT   EQU  X'004'       RSM INTERNAL TABLE
PVTPFTA  EQU  X'008'       PFT ADDRESS IN RIT
*
* FOLLOWING OBSOLETE
*
PVTPOOL  EQU  X'008'       REAL PAGE FRAMES AVAIL. NOW
PVTPFTP  EQU  X'00C'       APPARENT ORIGIN OF PFTE
PVTFPFN  EQU  X'010'       RBN TO FIRST PFTE
PVTLPFN  EQU  X'012'       RBN TO LAST  PFTE
PVTNPI   EQU  X'0F8'       DEMAND IN
PVTNPOUT EQU  X'0FC'       DEMAND OUT
PVTVAMI  EQU  X'100'       VIO IN
PVTVAMO  EQU  X'104'       VIO OUT
PVTSPIN  EQU  X'10C'       SWAP IN
PVTSPOUT EQU  X'110'       SWAP OUT
PVTCFMCT EQU  X'12C'       CURRENT PAGABLE CSA/LPA REAL PAGES
PVTCNTFX EQU  X'726'       TOTAL FIXED
PVTSQAFX EQU  X'728'       SQA FIXED
PVTCOMFX EQU  X'72A'       CSA FIXED
*
*        RCT RESOURCE CONTROL TABLE V4 P194
*
RCCUICTL EQU  X'04'        UIC LOW
RCCUICTH EQU  X'06'        UIC HIGH
RCCCPUTL EQU  X'08'        CPU LOW
RCCCPUTH EQU  X'0A'        CPU HIGH
RCCPTRTL EQU  X'0C'        PAG LOW
RCCPTRTH EQU  X'0E'        PAG HIGH
RCCASMTL EQU  X'10'        ASM LOW
RCCASMTH EQU  X'12'        ASM HIGH
RCVUICA  EQU  X'36'        UIC AVG
RCVCPUA  EQU  X'38'        CPU AVG
RCVASMQA EQU  X'3E'        AMS AVG
RCVPTR   EQU  X'40'        PAG AVG
         SPACE 1                                                 93148
*        RSM CONTROL AND ENUMERATION AREA (RCE)                  93148
*                                                                93148
RCETOTPI EQU  X'44'                                              93148
RCESWPPI EQU  X'50'                                              93148
RCEVIOPI EQU  X'54'                                              93148
RCETOTPO EQU  X'58'                                              93148
RCESWPPO EQU  X'60'                                              93148
RCEVIOPO EQU  X'64'                                              93148
LRCE     EQU  X'F8'          OFFSET TO RIT FROM START OF RCE     93148
*
*        RIT RSM INTERNAL TABLE    V4 PG 222
*
RITFPFTE EQU  X'D0'        FIRST PFTE
RITLPFTE EQU  X'D4'        LAST  PFTE
RITFPRV  EQU  X'E4'        FIRST PAGE IN PRIVATE AREA
RITFCSA  EQU  X'E8'        FIRST PAGE IN COMMON AREA (CSA)
RITFPRVX EQU  X'104'       FIRST PAGE IN EXTENDED PRIVATE AREA
*
*        SRM RESOURCE CONTROL TABLE V4 P238
*
RMCTTBS  EQU  X'78'        SRM TOD BASE
RMCTRCT  EQU  X'E4'        ADDRESS OF RCT
RMCTCMCT EQU  X'118'       CHANNEL MEASUREMENT TABLE
*
*        PART/SART PAGE AND SWAP ACTIVITY TABLES  V3 PG 314
*
SARSIZE  EQU  X'04'        NUMBER OF DSNS
SARDSNL  EQU  X'18'        LIST OF DSN NAMES
SARSETSZ EQU  X'38'        SWAP SET SIZE
SARENTS  EQU  X'50'        START OF PARTE/SARTE
LSARTE   EQU  80                                                 94213
*
*        PARTE/SARTE DSN ENTRIES V3 PG 315
*
SREFLG   EQU  X'09'        DAMAGE FLAG
SRETOTSL EQU  X'10'        TOTAL SLOTS
SREAVLSL EQU  X'14'        AVAIL. SLOTS
SRERRCT  EQU  X'18'        PERM. I/O ERROR COUNT
SREUCB   EQU  X'2C'        UCB POINTER
*
*        SMCA V5 PG 110
*
SMCADSCT EQU  X'74'        RECORDS LOST DUE TO FILE NOT AVAIL.
SMCABFLS EQU  X'120'       RECORDS LOST DUE TO BUFFER SHORTAGE
*
*        SPQE V3 PG 400
*
SPDQEPTR EQU  X'04'        DQE PTR
*
*        STGST  MF/RMF GLOBAL DATA AREA  (SEE RMF)
*
STGSMMV  EQU  X'10'        POINTER TO STMMV MFROUTER CALL INFO TABLE
*
*        UCM V3 PG 604
*
UCMRQNR  EQU  X'038'           OUTSTANDING REQUESTS
*
*        UCB - UNIT CONTROL BLOCK V3 PG 559
*
UCBSTAT  EQU  X'03'
UCBCHAN  EQU  X'04'
UCBFLA   EQU  X'06'        FLAG BYTE A
UCBNXUCB EQU  X'08'        NEXT UCB ADDRESS
UCBNAME  EQU  X'0D'
UCBTYP   EQU  X'10'
UCBFLC   EQU  X'14'        FLAG BYTE C
UCBEXTPT EQU  X'14'        UCB COMMON EXTENSION
UCBVOLI  EQU  X'1C'
UCBSTAB  EQU  X'22'
UCBDMCT  EQU  X'23'
UCBXTN   EQU  X'2C'        UCB MAG. TAPE EXTENSION
*
*        FPC USER CVT FOR LOCAL MODIFICATIONS TO MVS
*
         AIF  ('&LOCAL' EQ 'PID').PIDCVT                         94213
         AIF  ('&LOCAL' NE 'FPC').NOUCVT                         94213
UCVTIPL  EQU  X'08'        TIME AND DATE OF IPL (TIME DEC)
UCVTXCVT EQU  X'84'        POINTER TO XCOM CVT (SEE SR301000)
         AGO  .NOUCVT                                            94213
.PIDCVT  ANOP  ,                                                 94213
UCVTIPL  EQU  12             TIME/DATE OF IPL                    94213
.NOUCVT  SPACE 1                                                 94213
*
*        UCB COMMON EXTENSION   V5 382
*
UCBASID  EQU  X'0E'        ASID OF LAST MEMORY ALLOCATED
*
*        UCB MAG. TAPE EXTENSION  V5 P385
*
UCBTREAD EQU  X'04'        TEMPORARY READ ERRORS
UCBTWRIT EQU  X'05'        TEMPORARY WRITE ERRORS
UCBSIO   EQU  X'06'        START I/O COUNT
UCBPREAD EQU  X'08'        PERMANENT READ ERRORS
UCBPWRIT EQU  X'09'        PERMANENT WRITE ERRORS
UCBNOISE EQU  X'0A'        NOISE RECORDS READ
UCBERG   EQU  X'0C'        INTER RECORD GAPS WRITTEN
UCBCLN   EQU  X'0E'        CLEANER ACTIONS
*
*        XCVT - XCOM CVT FOR CROSS MEMORY MESSAGE FACILITY
*
VTPCBH   EQU  X'0C'        POINTER TO PCB CHAIN OR ZERO
VTMHBH   EQU  X'10'        POINTER TO MHB CHAIN OR ZERO
VTRCUR   EQU  X'40'        CURRENT MESSAGES IN CSA QUEUE
VTRMAX   EQU  X'44'        MAXIMUM MESSAGES ALLOWED IN CSA QUEUE
VTRTOT   EQU  X'48'        TOTAL MESSAGES PUT SINCE IPL
         END
