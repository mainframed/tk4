FIND <START=hexadd,END=hexadd × JOB=name>, ...parms

The FIND function locates data in the current address space. The data
to be found are supplied in a fashion similar to Assembler DC/DS
operands, except that not all Assembler functions are available.

START and END specify a hex storage address.

The JOB specification is deprecated under MVS and later systems, but
may be useful if your address space has distinct TIOTs.

  Other items are as follows:

    Boundary alignment:
      0H, 0F, 0A, and 0D may be used to restrict the search to start
scanning only on the most restrictive boundary specified. Note that H
and F alignment is forced when H and F values appear in the
argument list.

    Repetition:
      Any data item may be preceded by a one digit repetition count,
for instance 3H(1) is equivalent to H(1,1,1).

  Data specification:
    Hex: X'hhh' or XLn'hhh' maximum of 8 bytes.
    Char: C'ebcdic' or CLnnn'text' character format, maximum for "nnn"
is 256; but maximum input length under EXHIBIT is 80 bytes.
Trailing blanks are filled in.
    Integer: H(i,j,...) or F(i,j,k,...) one or more signed or unsigned
integers.
    Bit: B'01"' bit string search, maximum is one byte, " represents
an error symbol, used when any value of the bit is acceptable.
    Filler: X or Xnnn skips 1 to "nnn" bytes to the next item.

  Restrictions: EXHIBIT allows a maximum of 80 input characters; the
test area to be mapped may be up to 4095 bytes; the range defined
by START-END must be at least as long as the test data extent.

  For example, find a word that has X'C2' in the third byte:
  FIND 0F,2X,x'C2'
