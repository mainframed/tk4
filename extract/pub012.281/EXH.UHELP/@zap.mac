@ZAP <DSN=>dsname<(member)×,NAME=member> <,VOL=volser> <,TTR=hexttr>
@ZAP CCHH=start × CCHH2=end ,VOL=volser <,TTR=hexttr>
@ZAP *.ddname<(member)×,NAME=member> <,TEXT>
@ZAP <VTOC=volser×PACK=volser×LABEL=volser>
@ZAP <UCB=cuu × CCHH=cchh × CCHH2=end>

@ZAP is a privileged function for changing Disk Data. The basic input
parameters are identical to those described under the DISK and PDS
functions. The basic error messages are described under the PDS
function.

Restrictions: Data cannot be zapped if the Record does not fit into
the work buffer (run EXHIBIT in a larger Region) or if it is an
End-File Record. Data in the Alternate Track Area may be altered only
by referencing the original track. Record modification is a
direct replace operation, neither the Key nor the Data length may be
altered. New records cannot be added. The KEY of a record may be
altered in KEY mode only.

Operation of @ZAP is hierarchical. A record is read into storage
(automatically the first time), the Verify/Replace operation is performe
Storage, then the altered record is written back to disk. An invalid
request, or one which is not logically valid at the time it is given
(e.g. ZAP when no record is in storage), will be rejected with an
"INVALID" message. Basic display formatting is similar to the DISK
function, but the CCHHR, and the lengths are displayed each time.
Additional display lines will show the last valid AT, REP and VER
requests; these are reset by specifying any of them without parameters,
by doing a Read, or by changing to or from KEY mode.

    The sub-functions are:
    END      this unconditionally terminates the ZAP processing; it
              does not re-write data to disk, even if Verified data
              has been replaced in storage.
    DATA     this is the default processing mode. The parameter
              requests that all displays, offsets and re-writes are
              to be done on the Data portion of the record only.
              If the record has a Key, it will be displayed on the
              CCHHR line and is not otherwise involved in the
              processing.
    KEY      KEY mode requests that all processing be done
              including the Key; it is the only Mode in which the
              KEY may be altered. This mode is useful for changing
              data in the VTOC. Note that both DATA and KEY reset
              existing Verify and AT data.
    EDIT     sets hex edit mode (see the @EDIT command description).
              This function permits replacement of data replaced
              directly on the screen (VER/REP is not required).
    UPDATE   sets full-screen update mode (for card or EBCDIC data).
              See the @UPDATE command description. This function
              allows direct replacement of data.
    HA or R0   display the Home Address and Record Zero data for the
              current track. R0=data permits rewriting of the Record
              Zero data portion.
    HELP     displays a summary of the available subcommands.
    TTR=hexttr this parameter requests display and Read of a new
              record. Existing Verify data are not re-written to
              disk, it is lost. Note that no validity checking on
              the "hexttr" value occurs, other than for valid
              hexadecimal digits. If the ttr exceeds the DEB
              extents, an unpredictable record may be read in.
    CCHH=cccchhhh this parameter specifies an absolute disk address
              in the current data set. The record number is set to 1.
              The parameter is checked and converted to a TTR, and
              then treated as TTR= input.
    CCHHR=cccchhhhrr this parameter specifies an absolute address
              including the record number. The parameter is checked
              and converted to a TTR, and treated as TTR= input.
    BEGIN      this parameter rereads the first record of the
              current request (or member). unZAPped data are lost
              and the Verify switch is turned off.
    TEXT       this parameter, intended only for a member of a
              Load Module PDS, causes input of the first Text
              record. It may be used at any time; existing
              replacement data will be lost and not written to
              disk. If this option is used for a dataset or member
              request other than a load module, it is treated as
              BEGIN. TEXT sets a global flag (until reset by NOTEXT);
              When the FIND subcommand is used, the display will be
              positioned to the text record of the new member also.
    NOTEXT   resets the TEXT flag, and repositions to the first
              record as though BEGIN had been issued.
    ENTER only In case of an I/O error, the current record is
              retried; if a record is in storage, the display
              address is increased to the next page; if the address
              goes beyond the record size, then the next record is
              displayed, unless there is current AT data, Replace
              data, or if the record has been or may be re-written
              to disk - in any of these cases only an
              "END OF BLOCK" message is produced; similarly, if the
              previous CRT request was erroneous, the display data
              is not advanced. When either EDIT or UPDATE mode is in
              effect, but has been suppressed for a special message,
              an Enter-only will return to full-screen mode.
              Note that ENTER and REREAD are invalid if the current
              error message is for an End-File.
    &        a single ampersand requests a read of the next block.
              Any Replace data in storage is not re-written to
              disk. The next sequential block after an end-file will
              be read (not the next member) for a PDS.
    REREAD   This requests that the current record be read into
              storage again; this request destroys prior
              Verify/Replace data.
    AT xxxx  AT specifies a starting address for the display data;
              on a big CRT the display starts one line earlier than
              the address specified by AT, REP or VER.
    REP xxxx / verify info / replace info
    VER xxxx / verify info / replace info
              Either of the above requests data Verification and
              Replacement. The syntax is as described under the
              ALTer function; the Verify and Replace strings are
              limited to a maximum of 16 bytes, and their lengths
              must be equal. If the Verify is successful, then the
              data is Replaced In-Storage, and an appropriate
              message is displayed. The VER/REP command may be
              used any number of times for the same record prior to
              doing the disk re-write; it is highly recommended
              that all Replace operations for a record be done at
              one time, followed by a single disk Write (ZAP).
    DO       this command repeats the VER/REP operation at the address
              set by the last LOCate command, the last AT, or the
              last address displayed by the user. The REP may be
              applied at a specific address by specifying DO xxxx.
    ZAP      This request causes an In-Storage record with Replaced
              data to be re-written to disk; ZAP is valid only
              after one or more successful Replace operations; it
              may not be re-issued unless additional Replace
              operations are performed. The re-write occurs in two
              stages; the record is re-written to disk; it is then
              read again in Verify mode. Either of these may
              result in an I/O error. The basic I/O error message
              is as described under the PDS function, but two
              additional words have been added showing the contents
              of the first CCW:

    I/O error message CCW settings are:
    92  READ COUNT - used to locate the record.
    0E  READ - used to read record into working storage.
    0D  WRITE - used for re-writing the record.
    0E, with fourth byte set to X'10' - used to Verify.

Warning : The @ZAP function does not ENQueue on the Dataset name, the
changed block, or in any other fashion prevent the disk from being
clobbered. It is the responsibility of the user to prevent problems.

Additional functions are available to locate members of a PDS and to
locate data elements in a file.
   FIND member This requests that the first record for member named
"member" be read in. This request forces a complete resetting of all
status flags, and results in the loss of all pending Verify data
which has not been ZAPped in. The command is rejected if the data
set is not a PDS. The status of the TEXT flag, the text of the
last VER/REP request and the last LOC request are preserved over
the FIND.    LOCATE options ... This request causes a sequential
search to be performed for the specified data matching the "option"
request. Supported options are:

  CSECT=name - locate a CSECT, COMMON or Entry point. This request is
valid for load-module members only; and forces a re-read of the
member. A successful search is indicated by an "AT" display showing
the starting address of the section or entry point; the address
may or may not be valid when used for an Entry or in combination
with the SCAN option. An unsuccessful search is indicated either
by an "END FILE" or "UNRESOLVED EXT. REF" message.
   KEY=key/data Locate a record by comparing the leading bytes of the
Key/Data field with the supplied string. This scan stops on an exact
match only.
   KEY<key/data Locate record with Key greater than or equal to the
supplied value. The KEY options start scanning the file with the
record following the one currently displayed. Search text may be up
to 44 bytes long.
   CARD=text This option assumes an 80 byte record length for the
file, and scans for the specified text string (up to 44 bytes) in
column one of each card
   SEQ=sequence This option is valid for files with a logical record
length of 80 (with/without keys). The specified number or string is
padded with right- filled blanks if shorter than 8 bytes. The scan
starts with the card image following the last one displayed on top
of the screen. The scan stops when the supplied number is
greater than or equal to the sequence number found in a text record.
   ALL   In combination with any of the above - start scanning with
the first record of the data set/member.
   ANY   In combination with a SCAN option (below), causes end-file
records to be ignored. This function may be used to find old copies
of members in an uncompressed PDS.
   SCAN=data This form, valid in combination with any of the above
options as well as by itself, does a sequential scan through the data
for a matching datastring. Every byte will be tested for a match,
unless the word "SCAN" is prefixed by one of
   H, F or D - these force scanning in multiples of 2, 4 or 8 bytes
respectively. Maximum datalength is 40 bytes. Only the data portion of a
record is scanned unless KEY mode has been set.
   VERify This option scans for the string specified in the last
VER/REP command, and may not be used with any
other options.
Text of these options may be supplied in any of three modes: simple
EBCDIC data without delimiters; EBCDIC data containing special
charactes delimited by apostrophes; or hexadecimal data in the form
X'hex value' .

LOCate may be issued without operands. In this case the last request
is restarted. When the prior request contained a SCAN and
another option, only the SCAN portion of the request is performed. A
CSECT locate will not restart correctly, and the ALL option on a
prior locate is ignored
