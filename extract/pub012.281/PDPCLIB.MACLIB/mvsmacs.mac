***********************************************************************
*                                                                     *
*  Macros to support MVS                                              *
*  Written by Gerhard Postpischil                                     *
*  Released to the public domain                                      *
*                                                                     *
***********************************************************************
         MACRO ,
&NM      AMUSE &WRK1=R14,&WRK2=R15
         GBLC  &SYS
.*
.*   AMUSE sets addressing mode to back to the caller's
.*         Expands nothing or label for S370 or S390
.*         Required after GO24 call to return data to caller
.*
         AIF   ('&SYS' NE 'S380').OLDSYS
&NM      L     &WRK1,4(,R13)      Old save area
         L     &WRK1,12(,R14)     Caller's mode in high bit
         N     &WRK1,=X'80000000'   Kill address
         LA    &WRK2,*+4+2+2      Get new mode and address
         OR    &WRK1,&WRK2
         BSM   R0,&WRK1           CONTINUE IN USER MODE
         MEXIT ,
.OLDSYS  AIF   ('&NM' EQ '').MEND
&NM      DS    0H            DEFINE LABEL ONLY
.MEND    MEND  ,
*
*
*
         MACRO ,                  FIXED 2010.293
&NM      FUNEXIT &RC=
         GBLC  &SYS,&ZZSETSA,&ZZSETSL,&ZZSETSP
         GBLB  &ZZSETAM
         LCLC  &LBL
&LBL     SETC  '&NM'
         AIF   ('&ZZSETSL' NE '' AND '&RC' EQ '').JUSTF
         AIF   ('&ZZSETSA' EQ '').SAMESA
         AIF   ('&ZZSETSL' NE '').SAMESA
&LBL     L     R13,4(,R13)        RESTORE HIGHER SA
&LBL     SETC  ''
.SAMESA  AIF   ('&RC' EQ '').LMALL
         AIF   ('&RC' EQ '(15)' OR '&RC' EQ '(R15)').NORC
         AIF   (K'&RC LT 3).LA
         AIF   ('&RC'(1,1) NE '(' OR '&RC'(2,1) EQ '(').LA
         AIF   ('&RC'(K'&RC,1) NE ')' OR '&RC'(K'&RC-1,1) EQ ')').LA
&LBL     LR    R15,&RC(1)
&LBL     SETC  ''
         AGO   .NORC
.LA      ANOP  ,
&LBL     LA    R15,&RC            SET RETURN CODE
&LBL     SETC  ''
.NORC    AIF   ('&ZZSETSL' EQ '').NOFRM
         LR    R1,R13             SAVE CURRENT SA
         L     R13,4(,R13)        REGAIN CALLER'S SA
         ST    R15,16(,R13)       SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=&ZZSETSL,SP=&ZZSETSP
         AGO   .LMALL             GOTTA LOVE SPAGHETTI CODE
.NOFRM   ANOP  ,
&LBL     L     R14,12(,R13)
         LM    R0,R12,20(R13)
         AGO   .EXMODE
.JUSTF   ANOP  ,
&LBL     LR    R1,R13             SAVE CURRENT SA
&LBL     SETC  ''
         L     R13,4(,R13)        REGAIN CALLER'S SA
         FREEMAIN R,A=(1),LV=&ZZSETSL,SP=&ZZSETSP
.LMALL   ANOP  ,
&LBL     LM    R14,R12,12(R13)    RELOAD ALL
.EXMODE  AIF   (&ZZSETAM).BSM
         BR    R14
         MEXIT ,
.BSM     BSM   R0,R14
         MEND  ,
*
*
*
         MACRO ,             UPDATED 2010.293
&NM      FUNHEAD &ID=YES,&IO=NO,&AM=NO,&SAVE=,&US=YES
.*
.*   MACRO TO BEGIN EACH FUNCTION
.*     HANDLES STANDARD OS ENTRY CONVENTIONS
.*   ID=  YES × NO      YES GENERATES DC WITH FUNCTION NAME
.*   IO=  YES × NO      YES GENERATES LOAD / USING FOR ZDCBAREA
.*   AM=  YES × NO      YES USES BSM TO PRESERVE CALER'S AMODE
.*   SAVE=name          USES STATIC SAVE AREA OF THAT NAME,
.*                           SETS R13, AND DECLARES ON USING
.*   SAVE=(name,len{,subpool})   CREATES SAVE AREA WITH GETMAIN,
.*                           SETS R13, AND DECLARES ON USING
.*   US=  YES × NO      YES - want a USING for R13
.*   Options used here are remembered and handled properly by
.*     subsequent FUNEXIT macros
.*
         GBLC  &SYS,&ZZSETSA,&ZZSETSL,&ZZSETSP
         GBLB  &ZZSETAM
         LCLC  &LBL
         LCLA  &I
&I       SETA  K'&NM
&I       SETA  ((&I)/2*2+1)       NEED ODD LENGTH FOR STM ALIGN
&LBL     SETC  '&NM'
&ZZSETAM SETB  ('&AM' NE 'NO')
&ZZSETAM SETB  (&ZZSETAM AND '&SYS' EQ 'S380')
&ZZSETSA SETC  ''
&ZZSETSL SETC  ''
&ZZSETSP SETC  ''
         ENTRY &NM
         DROP  ,                  Isolate from other code
         AIF   ('&ID' EQ 'NO').SKIPID
&LBL     B     *+4+1+&I-&NM.(,R15)    SKIP LABEL
         DC    AL1(&I),CL(&I)'&NM'    EXPAND LABEL
&LBL     SETC  ''
.SKIPID  AIF   (NOT &ZZSETAM).SKIPAM
&LBL     BSM   R14,R0                 PRESERVE AMODE
&LBL     SETC  ''
.SKIPAM  ANOP  ,
&LBL     STM   R14,R12,12(R13)    SAVE CALLER'S REGISTERS
         LR    R12,R15
         USING &NM,R12
         AIF   ('&IO' EQ 'NO').SAVE
         L     R10,0(,R1)         LOAD FILE WORK AREA
         USING IHADCB,R10
.SAVE    AIF   ('&SAVE' EQ '').MEND
         AIF   (N'&SAVE EQ 1).STATIC
         AIF   (N'&SAVE EQ 2).DYNAM
&ZZSETSP SETC  '&SAVE(3)'
.DYNAM   ANOP  ,
&ZZSETSL SETC  '&SAVE(2)'
&ZZSETSA SETC  '&SAVE(1)'
         GETMAIN R,LV=&ZZSETSL,SP=&ZZSETSP
         LR    R14,R1             START OF NEW AREA
         LA    R15,&ZZSETSL       LENGTH
         SR    R3,R3              ZERO FILL
         MVCL  R14,R2             CLEAR GOTTEN STORAGE
         ST    R1,8(,R13)         POINT DOWN
         ST    R13,4(,R1)         POINT UP
         LR    R2,R13             SAVE OLD SAVE
         LR    R13,R1             NEW SAVE AREA
         USING &SAVE(1),R13       DECLARE IT
         LM    R14,R3,12(R2)      RESTORE FROM ENTRY
         MEXIT ,
.STATIC  LA    R15,&SAVE(1)
         ST    R15,8(,R13)
         ST    R13,4(,R15)
         LR    R13,R15
&ZZSETSA SETC  '&SAVE(1)'
         AIF   ('&US' EQ 'NO').MEND
         USING &SAVE(1),R13       DECLARE IT
.MEND    MEND  ,
*
*
*
         MACRO ,
&NM      GO24  &WORK=R15
         GBLC  &SYS
.*
.*   GO24 sets addressing mode to 24 for S380
.*         expands nothing or label for S370 or S390
.*
         AIF   ('&SYS' NE 'S380').OLDSYS
&NM      LA    &WORK,*+6     GET PAST BSM WITH BIT 0 OFF
         BSM   R0,&WORK      CONTINUE IN 24-BIT MODE
         MEXIT ,
.OLDSYS  AIF   ('&NM' EQ '').MEND
&NM      DS    0H            DEFINE LABEL ONLY
.MEND    MEND  ,
*
*
*
         MACRO ,
&NM      GO31  &WORK=R15
         GBLC  &SYS
.*
.*   GO31 sets addressing mode to 31 for S380.
.*         expands nothing or label for S370 or S390
.*
         AIF   ('&SYS' NE 'S380').OLDSYS
&NM      LA    &WORK,*+10    GET PAST BSM WITH BIT 0 ON
         O     &WORK,=X'80000000'  SET MODE BIT
         BSM   R0,&WORK            CONTINUE IN 31-BIT MODE
         MEXIT ,
.OLDSYS  AIF   ('&NM' EQ '').MEND
&NM      DS    0H            DEFINE LABEL ONLY
.MEND    MEND  ,
*
*
*
         MACRO ,             COMPILER DEPENDENT LOAD INTEGER
&NM      LDINT &R,&A         LOAD INTEGER VALUE FROM PARM LIST
         GBLC  &COMP         COMPILER GCC OR C/370
&NM      L     &R,&A         LOAD PARM VALUE
         AIF ('&COMP' EQ 'GCC').MEND
.* THIS LINE IS FOR ANYTHING NOT GCC: C/370
         L     &R,0(,&R)     LOAD INTEGER VALUE
.MEND    MEND  ,
*
*
*
         MACRO ,
&NM      QBSM  &F1,&F2
         GBLC  &SYS
.*
.*   QBSM expands as BSM on environments that require such
.*   mode switch (S380-only)
.*   Otherwise it expands as BALR r1,r2 (instead of BSM r1,r2)
.*   Unless r1 = 0, in which case, a simple BR r2 is done instead
.*
         AIF   ('&SYS' NE 'S380').OLDSYS
&NM      BSM   &F1,&F2
         MEXIT ,
.OLDSYS  AIF   ('&F1' EQ '0' OR '&F1' EQ 'R0').BR
&NM      BALR  &F1,&F2
         MEXIT ,
.BR      ANOP  ,
&NM      BR    &F2
.MEND    MEND  ,
