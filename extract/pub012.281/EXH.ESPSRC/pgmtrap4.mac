PGMTRAP4 TITLE 'P G M T R A P 4  ***  #TRAP MACRO DEBUG FORMATTING'
***********************************************************************
*                                                                     *
*                                                                     *
*  THIS ROUTINE, DRIVEN BY THE #TRAP MACRO, PRODUCES A LIST AND DEBUG *
*   OUTPUT FOR ONE OR MORE OF THE OPTIONAL PARAMETERS:                *
*                                                                     *
*   CODE IS EXTREMELY NOT RE-ENTRANT, REUSEABLE, NOR REFRESHABLE.     *
*   CALLER MAY BE AM24 OR 31; ADDRESSES CALCULATED ACCORDINGLY.       *
*   MODULE OPERATES IN AM31.                                          *
*                                                                     *
*   THIS CODE IS IMPLEMENTED AS A SUBROUTINE, CALLED BY PGMTRACE      *
*   WHEN IT HITS A B2FF.... INSTRUCTION, EITHER IN THE (E)SPIE EXIT   *
*   OR IN TRACED CODE. THE CALLING PARAMETER LIST IS MAPPED BY        *
*   MACRO IHAEPIE, WITH LOCAL DATA APPENDED (ADDR OF PRINT ROUTINE).  *
*                                                                     *
*   LABEL #TRAP list,...,ID=tag                                       *
*         "REGS=" PRODUCES REGISTERS 0-15 IN HEX (DEFAULT)            *
*         "REGS=NO" PRODUCES NO REGISTERS                             *
*         "REGS=SHORT"  PRODUCES REGISTERS 14-1 ONLY                  *
*                                                                     *
*         (OP1,(OP2,LN2),(OP3,,TP3)...)                               *
*             PROCESSES A LIST OF ITEMS. EACH ITEM HAS THREE FIELDS:  *
*             NAME OF ITEM TO BE PROCESSED (NO DEFAULT)               *
*             LENGTH (DEFAULT IS L'NAME EXCEPT PACKED DECIMAL, L=0)   *
*             TYPE: HEX (DEFAULT), TEXT, CTEXT, PACKED                *
*                                                                     *
*   ALL NAME FIELDS, WHETHER IN A KEYWORD OR THE LIST OPERAND, MAY    *
*   BE FULLWORD POINTERS:   /NAME DISPLAYS THE DATA AT THE LOCATION   *
*   FOUND IN FIELD NAME. NOTE THAT THIS FORM REQUIRES A LENGTH.       *
*   THE FORM NAME% CAUSES 24-BIT ADDRESSING RESOLUTION WHEN IN 31-BIT *
*   MODE. BOTH / AND % MAY BE USED FOR THE SAME NAME FIELD.           *
*                                                                     *
*   INPUT:  R15 - BASE ADDRESS            R14 - RETURN ADDRESS        *
*           R0  - WORK AREA IN CALLER'S PROGRAM                       *
*           R1  - CALLER'S REQUEST:>                                  *
*                            AL1(flags)                               *
*                            AL1(#items)                              *
*                            CL8'tag ' OR BLANKS                      *
*     ONE OR MORE REQUEST UNITS OF THREE HALF-WORDS EACH:             *
*    X'000'    R1     R2    DUMP REGISTERS R1 TO R2                   *
*    X'100' S(TEXT) Y(LEN)  TEXT; INPUT "LEN"                         *
*    X'200' S(TEXT) Y(LEN)  CTEXT; TEXT IF PRINTABLE; HEX OTHERWISE   *
*    X'300' S(HEX@) Y(LEN)  HEX; INPUT "LEN"                          *
*    X'400' S(PAK@) Y(LEN)  PACKED DECIMAL; 0<=LEN<16                 *
*                                                                     *
*  X'8000' OR HIGHER - END OF LIST                                    *
*                                                                     *
*   THIS ROUTINE MAY BE CALLED IN 24-BIT AND 31-BIT ADDRESSING MODE,  *
*   AND MAY RESIDE ABOVE THE LINE WHEN LINKED WITH A 31-BIT MODE PGM. *
*   ALL ADDRESS EXPRESSIONS ARE RESOLVED IN THE CALLER'S MODE.        *
*                                                                     *
*                            PRELIMINARY VERSION CONCOCTED FROM       *
*                            ODDS AND ENDS                   GP09277  *
*                                                                     *
***********************************************************************
*   MAINTENANCE:                                                      *
* 2012-11-19  GYP  CODE ADDED TO SUPPORT EXHIBIT XTRAP MACRO. XTRAP   *
*                    GENERATES 830E flags/count                       *
*                              B   *+                                 *
*                              CL8'tag'   (optional)                  *
*                       list   CL8'name',S(addr,len)                  *
***********************************************************************
         SPACE 1                                                 93185
         COPY  OPTIONGB      DEFINE GLOBALS
         SPACE 1
         SYSPARM LIST=YES    DEFINE GLOBAL SETTINGS
         SPACE 1
         PUSH  USING         JUST IN CASE                        93185
PGMTRAP4 CSECT ,
         USING PGMTRAP4,R15  DECLARE
         B     AROUND        BRANCH AROUND ID
         DC    AL1(17)
IDTEXT   DC    CL17'PGMTRAP4 &SYSDATE'
AROUND   BSM   R14,0         PRESERVE CALLER'S AMODE            GP99029
         STM   R14,R12,12(R13)                                  GP09277
         LR    R12,R15       LOCAL BASE
         DROP  R15
         USING PGMTRAP4,R12
         LA    R9,TRAPWORK
         ST    R9,8(,R13)
         ST    R13,4(,R9)
         LR    R13,R9
*TEST*   USING TRAPWORK,R13  DECLARE IT                         GP09052
         LR    R10,R1        PRESERVE PARM (EPIE+) ADDRESS
         USING EPIE,R10      PASSED TO TRAPFORM
         SPACE 1                                                GP09052
         LA    R15,TRAPFORM  MAKE TRACEBACK EASIER TO READ      GP09277
         BASR  R14,R15       FORMAT                             GP09277
         L     R13,4(,R13)
         LM    R14,R12,12(R13)   RESTORE REGS
         SR    R15,R15
         BR    R14
TRAPWORK DC    18A(0)        TRAPWORK                           GP09277
         DC    18A(0)        TRAPFORM                           GP09277
         DC    18A(0)        STACK/WRITE                        GP09277
         DC    18A(0)        STACK/WRITE                        GP09277
         SPACE 1                                                 93185
         IHAEPIE ,           MAP EPIE                            93185
         ORG   EPIEINC+L'EPIEINC
EPIEPRT  DC    A(0)          ADDRESS OF CALLER'S PRINT ROUTINE  GP11349
EPIEPICA DC    A(0)          ADDRESS OF CALLER'S RECOVERY RTNE  GP11349
         ORG   ,
         SPACE 1
PGMTRAP4 CSECT ,                                                GP09277
         LTORG ,                                                 93221
         EJECT ,
***********************************************************************
*                                                                     *
*   PROCESS A REQUEST LIST TO FORMAT USER DATA (R10=>EPIE+prtADDR)    *
*     B2FFbddd -> calflags; item count (<256)                         *
*      0-255:     type, subtype, bddd, len   (FORMAT ITEM)            *
*      either may have flag and CL8 label                             *
*                                                                     *
*     830E flags count / B around / tag / name, bddd, len             *
*                                                                     *
***********************************************************************
         DROP  ,             KEEP DISTINCT                      GP10092
*DEFER*  ENTRY TRAPFORM
TRAPFORM BSM   R14,0         PRESERVE CALLER'S AMODE            GP09277
         STM   R14,R12,12(R13)                                  GP09277
         LR    R12,R15                                          GP09277
         USING TRAPFORM,R12                                     GP09277
         LA    R9,SUBSAVE    LOCAL SAVE AREA                    GP09277
         ST    R13,4(,R9)                                       GP09277
         ST    R9,8(,R13)                                       GP09277
         LR    R13,R9                                           GP09277
         L     R15,=X'7FFFFFFF'                                 GP99116
         LA    R15,0(,R15)   MAKE MASK FOR AM24 OR AM31         GP12336
         STC   R15,ADDRMASK                                     GP12336
         NR    R10,R15       CLEAN PARAMETER POINTER            GP12336
         USING EPIE,R10      PASSED PARAMETER LIST
         LA    R8,EPIEGPR    POINT TO USER'S REGS
         L     R9,EPIEPSW+4  GET IC
         NR    R9,R15        CLEAN IT TO GET LIST POINTER       GP12336
         LR    R6,R9         SAVE START                         GP12333
         CLI   0(R6),X'B2'   TRAP4 ?                            GP12333
         BE    ADJUST9         YES; ADDRESS POINTER IS NEXT     GP12333
         CLI   0(R6),X'83'   DIAG ?                             GP12333
         BE    ADJUST9         YES                              GP12333
         SH    R6,=H'4'      DOUBLE-CHECK                       GP12333
         CLI   0(R6),X'B2'   TRAP4 ?                            GP12333
         BE    ADJUSTED        YES; ADDRESS POINTER IS NEXT     GP12333
         CLI   0(R6),X'83'   DIAG ?                             GP12333
         BNE   DBTEXITS      NO; MAJOR ERROR IN CALL            GP12333
ADJUST9  LA    R9,4(,R9)     SKIP OVER THE TRAP INSTRUCTION     GP12333
ADJUSTED ZI    PROFLAGS,PROFDIAG  NOT OLD DIAGNOSE              GP12333
         CLI   1(R6),X'0E'   830E ?                             GP12333
         BNE   NOTODIAG        NO                               GP12333
         OI    PROFLAGS,PROFDIAG  DIFFERENT LIST STRUCTURE      GP12333
         MVC   CALFLAGS(2),2(R6)  SAVE FORMATTING REQUESTS      GP12333
         LA    R9,8(,R6)     POSITION AFTER BRANCH              GP12333
         B     HAVEADDR        AND USE LIST                     GP12333
NOTODIAG ICM   R9,15,0(R9)   LOAD REQUEST LIST                  GP09277
         CLM   R9,12,=X'FFFF'   SL2 FORMAT ?                    GP11351
         BNE   HAVEADDR           NO; IT'S AN ADDRESS           GP11351
         LA    R0,X'FFF'     MAKE DISPLACEMENT MASK             GP11351
         NR    R0,R9         ISOLATE DISPLACEMENT               GP11351
         SRL   R9,12-2       CHANGE REGISTER TO OFFSET          GP11351
         N     R9,=X'0000003C'  CLEAN OFFSET                    GP11351
         L     R9,EPIEGPR(R9)     GET BASE                      GP12333
         N     R9,ADDRMASK        CLEAN IT                      GP11351
         AR    R9,R0              GET LIST ADDRESS              GP11351
HAVEADDR N     R9,ADDRMASK   CLEAN IT TO GET LIST ADDRESS       GP09277
         USING LSTWORK,R9                                       GP12333
         SPACE 1                                                GP99113
COMMADDR OI    PROFLAGS,PFWIDE  SET WIDE MODE                   GP99113
         LA    R0,MSGRTDS2-MSGRDW  WIDE SIZE                    GP99113
         STH   R0,MSGRDW     SET WIDE                           GP99113
         SPACE 1                                                GP99113
INITSHRT MVC   MSGLABL(MSGRTDS-MSGLABL),MSGLABL-1   BLANK THE LINE
         MVC   MSGHEAD,=CL8'XTRAP '  DEBUG HEADER               GP12333
         SPACE 1                                                GP99113
         TM    PROFLAGS,PROFDIAG  DIAG TYPE LIST ?              GP12333
         BNZ   INITDIAG                                         GP12333
INITTRAP MVC   CALFLAGS(2),LSTTYPE INIT FLAGS                   GP12333
         LA    R9,2(,R9)     SKIP FLAGS AND COUNT               GP09277
         MVI   MSGHEAD,C'#'  SHOW #TRAP CALL                    GP12333
INITDIAG SR    R1,R1                                            GP12333
         IC    R1,CALFLAGS+1      GET ENTRY COUNT               GP12333
         ST    R1,NUMTODO    SAVE IT                            GP12333
         MVC   CURFLAGS,CALFLAGS  SAVE FLAGS                    GP12333
         NI    CURFLAGS,X'3F'     RESET LABEL, PSW              GP10092
         LA    R6,DBTEXITS   SET FOR QUICK EXIT (LABEL ONLY)
         TM    CALFLAGS,X'80'  IS THERE A LABEL?                GP02364
         BNZ   DBTLUP        YES; USE IT                        GP02364
         UNPK  MSGLABL+1(7),5(4,R10)                            GP09277
         TR    MSGLABL+1(6),DBTHEXTR  MAKE PRINTABLE            GP09277
         MVI   MSGLABL+7,C' '                                   GP09277
         B     TESTPSW                                          GP09277
DBTLUP   MVC   MSGLABL,LSTTYPE   MOVE USER'S LABEL              GP12333
         LA    R9,8(,R9)     BUMP PAST LABEL                    GP95235
TESTPSW  TM    CALFLAGS,X'40'     WANT PSW ?                    GP09277
         BZ    SKIPPSW
         MVC   MSGLABL+20(4),=C'PSW='                           GP09277
         UNPK  MSGLABL+24(9),EPIEPSW(5)                         GP12333
         UNPK  MSGLABL+33(9),EPIEPSW+4(5)                       GP12333
         TR    MSGLABL+24(8+1+8),DBTHEXTR  MAKE PRINTABLE       GP09277
         MVI   MSGLABL+32,C'-'                                  GP09277
         MVI   MSGLABL+41,C' '                                  GP09277
SKIPPSW  MVC   MSGLABL+50(4),=C'TCB='                           GP09277
         UNPK  MSGLABL+54(9),PSATOLD-PSA(5)                     GP09277
         TR    MSGLABL+54(8),DBTHEXTR                           GP09277
         MVI   MSGLABL+62,C' '                                  GP09277
         TM    CALFLAGS,X'3F'     ANY OTHER REQUESTS?           GP10092
         BNZ   DBTINIT            YES; CONTINUE                 GP10092
         ICM   R0,15,NUMTODO ANY AT ALL ?                       GP10094
         BP    DBTINIT       YES; PROCESS NORMALLY              GP10094
         SR    R3,R3         CLEAR PARTIAL COUNT                GP10094
         OI    REQFLAGS,RQTEOL    INDICATE END OF REQUEST       GP09277
         B     DBTLAST       PRINT IT                           GP09277
         SPACE 1
DBTINIT  LPR   R3,R12        ANY POSITIVE VALUE                 GP09277
         NI    CURFLAGS,X'3F'   RETAIN ONLY UNPROCESSED FLAGS   GP10092
         BAS   R6,DBTLAST    PRINT HEADER LINE                  GP09277
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  LOOP TO PROCESS SPECIAL REQUESTS (CURFLAGS - GPR, FPR,.....)     **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DBTLOOP  OI    CURFLAGS,X'40'     RETURN HERE UNTIL DONE        GP10092
         TM    CURFLAGS,X'20'     FORMAT GENERAL REGISTERS?     GP10092
         BZ    DBTLUP20           NO                            GP10092
         ZI    CURFLAGS,X'20'     RESET IT                      GP10092
         B     DOGPRS             AND FORMAT GENERAL REGISTERS  GP10092
         SPACE 1
DBTLUP20 TM    CURFLAGS,X'10'     FORMAT FLOATING POINT ?       GP10092
         BZ    DBTLUP10           NO                            GP10092
         ZI    CURFLAGS,X'10'     RESET IT                      GP10092
         B     DOFPRS             AND FORMAT FLOATING REGISTERS GP10092
         SPACE 1
DBTLUP10 TM    CURFLAGS,X'08'     FORMAT CONTROL REGISTERS?     GP10092
         MVI   CURFLAGS,0     --- REST NOT IMPLEMENTED ---      GP10092
         BALR  R6,0          ENSURE PROPER RETURN POINT         GP12333
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  LOOP TO PROCESS CURRENT REQUEST (POINTED TO BY R9)               **
**                                                                   **
***********************************************************************
         SPACE 1
ITEMLOOP INC   NUMTODO,WORK=R1,INC=-1   NUMBER LEFT TO DO       GP09277
         LTR   R1,R1         ANY MORE ?                         GP09277
         BM    DBTEXITS      NO; QUIT                           GP09277
         ST    R9,@REQADDR   FOR DIAGNOSTIC                     GP12336
         TM    PROFLAGS,PROFDIAG  DIAG TYPE LIST ?              GP12333
         BZ    MOVETRAP      NO                                 GP12333
         MVC   REQTYPE(2),=AL1(RTHEX,0)  SIMPLE HEX ITEM        GP12333
         CLI   0(R9),X'40'   NAME ?                             GP12333
         BNH   MOVEDNNM        NO; LEAVE BLANK                  GP12333
         MVC   MSGLABL,0(R9) SHOW NAME                          GP12333
         LA    R9,8(,R9)     SKIP NAME                          GP12333
MOVEDNNM MVC   REQADDR,0(R9) MOVE S-FORM ADDRESS                GP12333
         MVC   REQLEN,2(R9)  MOVE LENGTH                        GP12333
         LA    R9,4(,R9)     SKIP TO NEXT ITEM                  GP12333
         B     SKIPNAME                                         GP12333
         SPACE 1
MOVETRAP MVC   REQTYPE(2),LSTTYPE     MOVE FLAGS AND COUNT      GP12333
         MVC   REQADDR,LSTADDR                                  GP12333
         MVC   REQLEN,LSTLEN                                    GP12333
         LA    R9,6(,R9)     SKIP FLAGS AND LENGTH
         TM    REQFG,RFNONAM   ANY NAME FIELD ?                 GP12333
         BNZ   SKIPNAME                                         GP12333
         MVC   MSGLABL,LSTNAME-LSTNAME(R9)  MOVE NAME           GP12333
         LA    R9,8(,R9)     SKIP NAME
SKIPNAME LA    R0,RQTMSK     LOAD END-LIST MASK                 GP02364
         IC    R2,REQTYPE    GET TYPE OF ITEM                   GP12333
         NR    R2,R0         IGNORE END-LIST BIT                GP02364
         CH    R2,=Y((PROCEND-PROCONE)/(PROCTWO-PROCONE))       GP97265
         BH    DBTLAST       TOO HIGH, TOO BAD                  GP97265
         IC    R2,REQTYPE    LOAD NEXT REQUEST                  GP97265
         LA    R0,RQTMSK     LOAD END-LIST MASK                 GP02364
         NR    R2,R0         IGNORE END-LIST BIT                GP02364
         CH    R2,=Y((PROCEND-PROCONE)/(PROCTWO-PROCONE))       GP97265
         BH    DBTLAST       TOO HIGH, TOO BAD                  GP97265
         SLL   R2,1          MAKE PROCESSOR ROUTINE OFFSET      GP97265
         LA    R0,FORMFAIL   SET RECOVERY ADDRESS               GP10092
         L     R14,EPIEPICA  GET BYPASS ADDRESS
         ST    R0,0(,R14)      INTO SPIE EXIT                   GP10092
         STM   R0,R15,4(R14)   REGISTERS FOR RECOVERY ROUTINE   GP10092
         LH    R7,PROCONE(R2)  LOAD PROCESSING ROUTINE          GP97265
         LA    R15,1                                            GP97265
         NR    R15,R7        SEE WHETHER ADDRESS WAS ODD        GP97265
         BZ    TRAPFORM(R7)  NO; INVOKE IT DIRECTLY             GP97265
         SRL   R7,1                                             GP97265
         SLL   R7,1          ELSE MAKE IT EVEN                  GP97265
         B     RESADDR                                          GP97265
         SPACE 1                                                GP97265
PROCONE  DC    Y(DOREGS-TRAPFORM)      0 REGISTER FORMATTING    GP97265
PROCTWO  DC    Y(FUNFTEXT-TRAPFORM+1)  1 TEXT                   GP97265
         DC    Y(FUNFCHEX-TRAPFORM+1)  2 TEXT OR HEX            GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)   3 HEX                    GP97265
         DC    Y(FUNPACK-TRAPFORM+1)   4 PACKED                 GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)   5   SPARE                GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)   6   SPARE                GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)   7   SPARE                GP97265
         DC    Y(DBTLIST-TRAPFORM)     8 LIST FORM              GP97265
PROCEND  EQU   *                                                GP97265
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PROCESS ADDRESS, LENGTH, AND FLAG OPTION FOR COMMON FUNCTIONS    **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
RESADDR  SLR   R2,R2                                            GP97265
         IC    R2,REQADDR    GET S(ADDR)
         SRL   R2,4          DELETE LOW BITS OF OFFSET
         SLA   R2,2          *4 => INDEX INTO ERRREGS
         BZ    *+8           R0 = 0
         L     R2,EPIEGPR(R2)  GET USER'S REGISTER              GP12333
         LA    R0,4095       MAKE MASK
         ICM   R15,3,REQADDR  GET LOW PORTION OF ADDRESS        GP95235
         NR    R0,R15        MASK OFFSET OF ADDRESS             GP95235
         ALR   R2,R0         MAKE EFFECTIVE ADDRESS
         TM    REQFG,RFA24   FORCED 24-BIT ADDRESSING MODE?     GP96101
         BZ    *+8           NO                                 GP96101
         N     R2,=X'00FFFFFF'  FORCE 24-BIT ADDRESS            GP96101
         TM    REQFG,RFA31   FORCED 31-BIT ADDRESSING MODE?     GP99116
         BNZ   NOTBAD31      NO                                 GP99116
         N     R2,ADDRMASK   USE MASK IN USER'S AMODE           GP99116
NOTBAD31 TM    REQFG,RFIAD   INDIRECT ADDRESSING?               GP96101
         BZ    NOTIAD31      NO                                 GP96101
         L     R2,0(,R2)     LOAD ADDRESS FROM POINTER          GP96101
         TM    REQFG,RFA24   FORCED 24-BIT ADDRESSING MODE?     GP96101
         BZ    NOTIAD        NO                                 GP96101
         N     R2,=X'00FFFFFF'  FORCE 24-BIT ADDRESS            GP96101
NOTIAD   TM    REQFG,RFA31   FORCED 31-BIT ADDRESSING MODE?     GP99116
         BNZ   NOTIAD31      NO                                 GP99116
         N     R2,ADDRMASK   USE MASK IN USER'S AMODE           GP99116
NOTIAD31 SLR   R3,R3                                            GP96101
         ICM   R3,3,REQLEN                                      GP09277
         BNM   LENINT                                           GP09277
         LA    R0,15         REGMASK                            GP09277
         NR    R3,R0         REGISTER NUMBER                    GP09277
         SLL   R3,2          MAKE OFFSET                        GP09277
         L     R3,EPIEGPR(R3)  GET USER'S REGISTER              GP12333
         LTR   R3,R3         USABLE ?                           GP09277
         BM    DBTLAST       NO; SKIP THIS                      GP09277
LENINT   ST    R2,@BASE                                         GP09277
         UNPK  MSGHEAD+2(7),@BASE+1(4)                          GP09277
         TR    MSGHEAD+2(6),DBTHEXTR                            GP09277
         MVI   MSGHEAD+8,C' '                                   GP09277
         B     TRAPFORM(R7)  GO TO PROCESSING ROUTINE           GP97265
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  FORMAT ALL GENERAL REGISTERS                                     **
**    REGISTERS ARE IN R8                                            **
**    THEN PROCESSED AS A HEX DISPLAY                                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP10092
DOGPRS   MVC   MSGFLAG(2),=C'r0'  IDENTIFY FIRST REGISTER       GP10092
         LR    R2,R8         POINT TO FIRST REGISTER            GP10092
         ST    R2,@BASE                                         GP10092
         LA    R3,4*16       SET LENGTH                         GP10092
         B     PROFHEX       FORMAT HEX                         GP10092
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  FORMAT FLOATING POINT REGISTERS                                  **
**    REGISTERS ARE MOVED TO REGWORK                                 **
**    THEN PROCESSED AS A HEX DISPLAY                                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP10092
DOFPRS   MVC   MSGFLAG(2),=C'f0'  IDENTIFY FIRST REGISTER       GP10092
         STD   R0,REGWORK    SAVE FIRST ONE                     GP10092
         STD   R2,REGWORK+8                                     GP10092
         STD   R4,REGWORK+16                                    GP10092
         STD   R6,REGWORK+24                                    GP10092
         LA    R2,REGWORK    POINT TO FIRST REGISTER            GP10092
         ST    R2,@BASE                                         GP10092
         LA    R3,4*8        SET LENGTH                         GP10092
         B     PROFHEX       FORMAT HEX                         GP10092
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PROCESS REGISTER REQUESTS                                        **
**    REGISTERS ARE MOVED TO REGWORK (TO HANDLE WRAP-AROUND) AND     **
**    THEN PROCESSED AS A HEX DISPLAY                                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOREGS   TM    CALFLAGS,X'20'  ALREADY FORMATTED ?              GP10092
         BNZ   DBTLAST       YES; SKIP                          GP10092
         LA    R0,15         MAKE MASK                          GP97261
         LH    R14,REQADDR   GET START REGISTER                 GP97261
         LH    R15,REQLEN    GET END REGISTER                   GP97261
         NR    R14,R0        KEEP ONLY LOW NIBBLE (START REG)   GP96101
         NR    R15,R0          END REGISTER                     GP96101
         LA    R1,DBTHEXTB(R14)  POINT TO PRINTABLE EQUIVALENT  GP97265
         MVC   MSGFLAG+1(1),0(R1)  IDENTIFY IT                  GP97265
         MVI   MSGFLAG,C'R'-X'40'  AS REGISTER                  GP97265
         CR    R14,R15       IS LOW SAME AS HIGH?               GP96101
         BNE   DOREGWRP      NO                                 GP96101
         BCTR  R15,0         MAKE RANGE OF 15 REGISTERS         GP96101
         NR    R15,R0        CLEAN IT UP                        GP96101
DOREGWRP SLDL  R14,2         CONVERT REGISTER NUMBER TO OFFSET  GP96101
         CR    R14,R15       IS LOW LESS THAN HIGH?             GP96101
         BH    DOREGSPL      NO; SPLIT                          GP96101
         LA    R2,0(R14,R8)     POINT TO FIRST CONTIGUOUS REGISTER
         ST    R2,@BASE                                         GP09284
         LR    R3,R15                                           GP96101
         SR    R3,R14                                           GP96101
         LA    R3,4(,R3)     MAKE HEX LENGTH                    GP96101
         B     PROFHEX       FORMAT HEX                         GP96101
DOREGSPL LA    R3,(16+1)*4   MAX LENGTH TO FORMAT + ONE         GP96101
         AR    R3,R15        PLUS END OFFSET                    GP96101
         SR    R3,R14        LESS START OFFSET = REQ. LENGTH    GP96101
         LA    R4,0(R14,R8)     POINT TO FIRST (LOW) SEGMENT    GP96101
         LA    R5,REGWORK    SET DESTINATION ADDRESS            GP96101
         LA    R1,64-1       MAX MOVABLE                        GP96101
         SR    R1,R14        LESS DISPLACEMENT TO LOW           GP96101
         EX    R1,DOREGMVC   MOVE FIRST PORTION                 GP96101
         LR    R4,R8         SET FROM ADDRESS                   GP96101
         LA    R5,REGWORK+1(R1)  OFFSET TO SECOND PART          GP96101
         LA    R1,4-1(,R15)    LENGTH TO MOVE                   GP96101
         EX    R1,DOREGMVC   MOVE SECOND SECTION                GP96101
         LA    R2,REGWORK    POINT TO CONSOLIDATED FIELD        GP96101
         ST    R2,@BASE                                         GP09284
         B     PROFHEX       GO TO FORMAT                       GP96101
DOREGMVC MVC   0(0,R5),0(R4)  MOVE                              GP96101
         SPACE 1                                                GP97265
***********************************************************************
**                                                                   **
**  FOR PACKED DECIMAL, PERFORM VALIDITY CHECK. MAKE SURE LENGTH     **
**   MATCHES USER'S REQUEST IF NON-ZERO                              **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
FUNPACK  MVI   MSGFLAG,C'L'-X'40' PROVISIONALLY FLAG BAD LENGTH GP97265
         LA    R4,16         SET MAXIMUM LENGTH                 GP96081
         CR    R3,R4         IS USER'S LENGTH VALID?            GP96081
         BH    PROFHEX       NO; FORMAT HEX WITH 'L' FLAG       GP96081
         MVI   MSGFLAG,C'P'-X'40' FLAG BAD PACKED (PRELIMINARY) GP97265
         LA    R1,0(,R2)     COPY ADDRESS                       GP96081
         LA    R7,9          CONSTANT                           GP96081
         LA    R0,X'0F'      MASK                               GP96081
         LA    R5,1(,R4)     REMEMBER THE LENGTH                GP96081
         SLR   R14,R14       CLEAR                              GP96081
         LTR   R6,R3         LOAD USER'S LENGTH                 GP96081
         BNZ   DBTPACKL      OK; UP AND AT 'EM                  GP96081
         LR    R6,R4         USE THIS ONE                       GP96081
DBTPACKL IC    R14,0(,R1)    LOAD NEXT BYTE                     GP96081
         LR    R15,R14       COPY                               GP96081
         SRL   R14,4         ISOLATE HIGH NYBBLE                GP96081
         CR    R14,R7        IS IT LEGAL ?                      GP96081
         BH    PROFHEX       NO; DISPLAY AS HEX                 GP96081
         NR    R15,R0        ISOLATE LOW NYBBLE                 GP96081
         CR    R15,R7        IS IT NUMERIC?                     GP96081
         BH    DBTPACKD      NO; SIGN ENDS THE FIELD            GP96081
         LA    R1,1(,R1)     SPACE                              GP96081
         BCT   R6,*+8        OK IF USER'S COUNT NOT EXHAUSTED   GP96081
         B     PROFHEX       ELSE INVALID PACKED                GP96081
         BCT   R4,DBTPACKL   TRY AGAIN                          GP96081
         B     PROFHEX       TOO BAD                            GP96081
         SPACE 1                                                GP96081
*  COPY NUMBER TO MAXIMUM LENGTH PACKED WORK AREA AND CHECK SIGN
*    NOTE THAT SIGN IS STILL IN R15                             GP96081
DBTPACKD SR    R5,R4         INPUT LENGTH                       GP96081
         LTR   R3,R3         DID USER SPECIFY AN INPUT LENGTH?  GP96081
         BZ    DBTPACK0      NO; USE OURS                       GP96081
         MVI   MSGFLAG,C'L'-X'40' PROVISIONALLY FLAG BAD LENGTH AGAIN
         CR    R3,R5         SAME AS USER'S ?                   GP96081
         BNE   PROFHEX       NO; FORMAT AS HEX                  GP96081
DBTPACK0 BCTR  R5,0          EXECUTE LENGTH                     GP96081
         XC    REGWORK(16),REGWORK  USE AS WORK SPACE           GP96081
         LA    R7,REGWORK+16-1                                  GP96081
         SR    R7,R5         LOCATION TO MOVE TO                GP96081
         EX    R5,DBTPACKM   MOVE TO WORK SPACE                 GP96081
         MVC   MSGTEXT-1(37),DBTPAMSK                           GP96081
         LA    R1,MSGTEXT+L'MSGTEXT-1   POINT TO SIGNIFICANCE   GP96081
         EDMK  MSGTEXT+L'MSGTEXT-32(32),REGWORK  FORMAT         GP96081
         BCTR  R1,0          INSIGNIFICANT LOCATION             GP96081
         STC   R15,0(,R1)    STORE HEX SIGN (0A-0F)             GP96081
         TR    0(1,R1),DBTPACKS-X'0A'  MAKE PRINTABLE SIGN      GP96081
         OI    MSGTEXT+L'MSGTEXT-1,C'0'  MAKE F ZONE            GP96081
         CLI   0(R1),C'?'    UNUSUAL SIGN?                      GP96081
         BE    DBTPACKF      NO                                 GP96081
         SLR   R3,R3         NO MORE DATA                       GP96081
         B     DBTLAST       PRINT THIS LINE                    GP96081
DBTPACKM MVC   0(0,R7),0(R2)  RIGHT ADJUST USER'S NUMBER        GP96081
DBTPACKS DC    C'??+-? '     F - BLANK, C - PLUS, D - MINUS     GP96081
DBTPAMSK DC    C' PD   ',30X'20',X'21,20'                       GP96081
DBTPACKF MVI   MSGTEXT-1,C' '                                   GP96081
         MVC   MSGTEXT,MSGTEXT-1  CLEAR TEST PORTION AGAIN      GP96081
         MVI   MSGFLAG,C'S'-X'40' SHOW BAD SIGN AND DO AS HEX   GP97265
         B     PROFHEX                                          GP97266
         SPACE 1
***********************************************************************
**                                                                   **
**  CONDITIONAL TEXT :  COMPARE TEXT TO OUR TRANSLATE TABLE. WHEN    **
**  UNPRINTABLE CHARACTERS OCCUR, FORMAT THE STRING IN HEXADECIMAL,  **
**  OTHERWISE PRINT IT.                                              **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
FUNFCHEX MVI   MSGFLAG,C'C'-X'40'                               GP97266
PROFCHEX LTR   R15,R3        COPY LENGTH                        GP96101
         BNP   FUNFTEXT      INVALID; GET OUT                   GP96101
         BCTR  R15,0         SET FOR EXECUTE                    GP96101
         LR    R4,R2         SAVE                               GP96101
         EX    R15,CHEXTRT   IS THIS A PRINTABLE TEXT STRING?   GP96101
         LR    R2,R4         RESTORE                            GP96101
         BZ    FUNFTEXT      YES; PRINT AS TEXT                 GP96101
         OI    PROFLAGS,PFDUAL  ENABLE DUAL HEX/TEXT DISPLAY    GP00162
         B     FUNFHEX       ELSE FORMAT IN HEX                 GP96101
CHEXTRT  TRT   0(0,R2),TRTCHAR  CHECK FOR PRINTABLES            GP96101
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  HEXADECIMAL FORMATTING                                           **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP96101
FUNFHEX  MVI   MSGFLAG+1,C'H'-X'40'    MAKE LOWER CASE H        GP97266
         OI    PROFLAGS,PFDUAL  ENABLE DUAL HEX/TEXT DISPLAY    GP00162
PROFHEX  BASR  R6,0          SET RETURN ADDRESS                  92271
         LR    R0,R2         NEXT DISPLAY ADDRESS               GP09277
         S     R0,@BASE      LESS START                         GP09277
         BNP   PROFHEX1      SKIP FIRST TIME                    GP09277
         ST    R0,DB         SAVE                               GP09277
         UNPK  MSGLABL+2(7),DB+1(4)                             GP09277
         TR    MSGLABL+2(6),DBTHEXTR                            GP09277
         MVI   MSGLABL+8,C' '                                   GP09277
         MVI   MSGLABL+1,C'+'
PROFHEX1 SLR   R4,R4
         LA    R1,MSGTEXT    POINT TO TEXT
         LA    R5,16         MAX INPUT CHARACTERS ON LINE        92093
         TM    PROFLAGS,PFWIDE  DOING WIDE?                     GP99113
         BZ    PROFHEX3      NO                                 GP99113
         LA    R5,32         PRINT TWO GROUPS                   GP99113
         TM    PROFLAGS,PFDUAL  DUAL MODE REQUEST?              GP00162
         BZ    PROFHEX3      NO                                 GP00162
         LTR   R3,R3         IS LENGTH VALID ?                  GP00162
         BNP   PROFHEX3      NO                                 GP00162
         LA    R15,L'MSGHTEX  MAX LENGTH ON ONE LINE            GP00162
         MIN   (R15),(R3)    USE SHORTER                        GP00162
         BCTR  R15,0         SET FOR EXECUTE                    GP00162
         EX    R15,EXMVCHTX  MOVE TO OUTPUT LINE                GP00162
         EX    R15,EXTRHTX   AND MAKE IT PRINTABLE              GP00162
         MVI   MSGHTEX-1,C'*'  FRAME THE TEXT                   GP00162
         MVI   MSGHTEX+L'MSGHTEX,C'*'                           GP00162
PROFHEX3 LTR   R3,R3         VALID LENGTH?                      GP96081
         BP    PROFHEXL      YES                                GP96081
         MVC   MSGTEXT(3),=C'L=?'   MAKE AN ERROR MESSAGE       GP96081
PROFHEXL LTR   R3,R3         ANY MORE TO DO ?
         BNP   DBTLAST
         MVC   DB(1),0(R2)   MOVE SINGLE BYTE                   GP98222
         UNPK  0(3,R1),DB(2)  UNPACK ONE BYTE (NO 0C4)          GP98222
         TR    0(2,R1),DBTHEXTR   MAKE IT PRINTABLE             GP97265
         MVI   2(R1),C' '    BLANK NEXT
         LA    R2,1(,R2)
         LA    R1,2(,R1)
         BCTR  R3,0          ADJUST RESIDUAL COUNT
         LA    R4,1(,R4)     ADD ONE TO COUNT DONE
         LA    R15,3
         NR    R15,R4        END OF A WORD ?
         BNZ   *+8           NO
         LA    R1,1(,R1)     LEAVE A GAP BETWEEN WORDS
         CR    R4,R5         DONE ONE LINE ?                     92093
         BNL   DBTLAST       YES; PROCESS IT
         CH    R4,=H'16'     DONE ONE GROUP?                    GP99113
         BNE   PROFHEXL      NO; NOT YET, OR NEVER              GP99113
         LA    R1,1(,R1)     LEAVE A LARGER GAP BETWEEN GROUPS  GP99113
         B     PROFHEXL      SEE IF MORE TO DO
EXMVCHTX MVC   MSGHTEX(0),0(R2)  COPY USER'S TEXT               GP00162
EXTRHTX  TR    MSGHTEX(0),TRTABTN   LIMIT TO PRINTABLE STUFF    GP00162
         SPACE 1                                                GP97266
***********************************************************************
**                                                                   **
**  TEXT PRINTING                                                    **
**                                                                   **
***********************************************************************
FUNFTEXT MVI   MSGFLAG+1,C'T'-X'40'  L.C. T                     GP97266
PROFTEXT LA    R4,L'MSGTEXT  SET MAXIMUM TEXT PRINTABLE
         TM    PROFLAGS,PFWIDE  DOING WIDE?                     GP99113
         BZ    PROFTEX3      NO                                 GP99113
         LA    R4,2*(1+L'MSGTEXT)  WIDER IS BETTER?             GP99113
PROFTEX3 LTR   R3,R3         VALID LENGTH?                      GP96081
         BP    PROFTEXL      YES                                GP96081
         MVC   MSGTEXT(3),=C'L=?'   MAKE AN ERROR MESSAGE       GP96081
PROFTEXL BASR  R6,(0)        SET RETURN POINT                    92271
         LTR   R3,R3         ANY MORE ?
         BNP   DBTLAST       NO; EXIT
         LR    R0,R2         NEXT DISPLAY ADDRESS               GP09277
         S     R0,@BASE      LESS START                         GP09277
         BNP   PROFTXT1      SKIP FIRST TIME                    GP09277
         ST    R0,DB         SAVE                               GP09277
         UNPK  MSGLABL+2(7),DB+1(4)                             GP09277
         TR    MSGLABL+2(6),DBTHEXTR                            GP09277
         MVI   MSGLABL+8,C' '                                   GP09277
         MVI   MSGLABL+1,C'+'
PROFTXT1 LR    R15,R4        SET TEXT LENGTH
         CR    R3,R15        IS REQUEST LONGER ?
         BNL   *+6           YES
         LR    R15,R3        ELSE USE SHORTER
         BCTR  R15,0         SET EXECUTE LENGTH
         EX    R15,PROFTMVC  MOVE TO LINE
         EX    R15,PROFTTR   MAKE PRINTABLE                     GP00162
         LA    R1,MSGTEXT+1(R15)  GET END OF LINE+1             GP00162
         MVI   0(R1),C'<'    SHOW WHERE TEXT ENDS               GP00162
         AR    R2,R4         UP TEXT ADDRESS
         SR    R3,R4         SET RESIDUAL PRINT LENGTH
         B     DBTLAST       PRINT IT
PROFTMVC MVC   MSGTEXT(0),0(R2)  MOVE USER'S TEXT
PROFTTR  TR    MSGTEXT(0),TRTABTN  LIMIT TO PRINTABLES          GP00162
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  ADJUST FOR MULTIPLE (LIST) ENTRIES IN PARAMETER LIST             **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DBTLIST  LA    R3,REQSIZE    SET POSITIVE                       GP95235
         BAS   R6,DBTLAST    PRINT PRIOR LINE, IF ANY           GP95235
         ICM   R9,15,2(R9)   LOAD NEW LIST ADDRESS              GP95235
         B     INITSHRT      SHOW NAME                          GP95235
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PROCESS THE CURRENT RECORD PER USER'S REQUEST                    **
**    SKIP COMPLETELY BLANK LINES                                    **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
FORMFAIL MVC   MSGTEXT+20(21),=C' ** PGM EXCEPTION ** '         GP10092
         UNPK  MSGTEXT+43(9),@REQADDR(5)  UNPACK ONE WORD       GP12336
         TR    MSGTEXT+43(8),DBTHEXTR   MAKE IT PRINTABLE       GP12336
         MVI   MSGTEXT+51,C' '          BLANK NEXT              GP12336
         SR    R3,R3         TERMINATE THE FUNCTION             GP10092
         SPACE 1                                                GP99113
DBTLAST  CLC   MSGLABL(MSGRTDS-MSGLABL),MSGLABL-1  ANYTHING TO PRINT ?
         BE    DONEOUT       NO; SKIP WHEN NO DATA              GP99113
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PRINT RECORD TO ANY DCB OPEN FOR QSAM OUTPUT                     **
**    (CURRENTLY DATA MODE IS NOT SUPPORTED)                         **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOPUT    LA    R1,MSGRDW     POINT TO MESSAGE LINE
         L     R15,EPIEPRT   GET USER'S PRINT ROUTINE
         BALR  R14,R15       INVOKE IT
*NEXT*   B     DONEOUT       JOIN COMMON                        GP99113
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  DONE PRINTING.                                                   **
**                                                                   **
**  1) WHEN R3 IS NON-ZERO (RESIDUAL INPUT LENGTH), CONTINUE PROCESS **
**                                                                   **
**  2) RETURN TO ITEM LOOP FOR NEXT FIELD                            **
**                                                                   **
**  OTHERWISE CLEAN UP AND RETURN TO CALLER                          **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DONEOUT  MVC   MSGLABL(MSGRTDS2-MSGLABL),MSGLABL-1  BLANK IT    GP09277
         MVC   MSGHEAD,MSGLABL  CLEAR MESSAGE NUMBER             93357
*OLD*    MVI   MSGHEAD+5,C'+' INDICATE CONTINUATION              93357
         SPACE 1                                                GP99113
LASTSHRT LTR   R3,R3         ANY MORE TO DO ?                   GP95235
         BPR   R6            RESTART
DBTEXIT  LA    R0,0          RESET RECOVERY ADDRESS             GP10092
         L     R14,EPIEPICA  GET BYPASS ADDRESS
         ST    R0,0(,R14)      INTO SPIE EXIT                   GP10092
         TM    REQFLAGS,RQTEOL  END OF LIST FLAG ?              GP02364
         BNZ   DBTEXITS      YES; STOP NOW                      GP02364
         CLI   CURFLAGS,0    ANY SPECIAL REQUESTS LEFT?         GP10092
         BNE   DBTLOOP       YES; DO THEM NOW                   GP10092
         B     ITEMLOOP      AND DO IT                          GP10092
         SPACE 1
DBTEXITS L     R13,4(,R13)   LOAD CALLER'S SAVE AREA            GP99043
         LM    R14,R12,12(R13)  RESTORE                         GP99043
         BSM   0,R14         AND RETURN TO USER                 GP99029
         SPACE 1                                                GP99113
         LTORG ,                                                GP99113
         SPACE 1                                                GP96109
DB       DC    D'0'          WORK SPACE
SUBSAVE  DC    18A(0)         SAVE AREA                         GP95235
REGWORK  DC    16A(0)        WORK SPACE FOR REG OPTION          GP96101
SAVEREGS DC    16A(0)        SAVE AREA OVER PRINT/STACK CALL    GP96101
@REQADDR DC    A(0)          ITEMLOOP START                     GP12336
         SPACE 1                                                GP96109
BLANKS   DC    CL80' '                                          GP09277
NUMTODO  DC    F'0'          NUMBER OF ENTRIES                  GP09277
@BASE    DC    A(0)          START ADDRESS FOR OFFSET CALC      GP09277
ADDRMASK DC    X'00FFFFFF'   ADDRESS MODE MASK                  GP99116
CALFLAGS DC    X'00'         CALL OPTIONS                       GP12333
CALCOUNT DC    X'00'         NUMBER OF FORMAT ITEMS             GP12333
CURFLAGS DC    X'00'         COPY OF CALFLAGS                   GP12333
REQFLAGS DC    X'0000'       ITEM REQUEST FLAGS                 GP09277
REQTYPE  DS    X             REQUEST TYPE                       GP95235
REQFG    DC    AL1(0)        OPTION FLAGS                       GP95235
REQADDR  DS    S             ADDRESS OF VARIABLE                GP95235
REQLEN   DS    Y             LENGTH OF VARIABLE                 GP95235
REQNAME  DS    0CL8          VARIABLE NAME FOR RTVAR TYPE       GP95235
REQSIZE  EQU   *-REQTYPE     LENGTH OF ONE ENTRY (EXC VARIABLE AND TAG)
         SPACE 1
PROFLAGS DC    X'00'         LOCAL PROCESSING FLAGS             GP99113
PFWIDE   EQU   X'80'           PROCESSING WIDE LINES            GP99113
PROFLWID EQU   X'80'           PROCESSING WIDE LINES            GP99113
PFDUAL   EQU   X'40'           SHOW HEX + TEXT                  GP00162
PROFDIAG EQU   X'20'           LIST IS 'name',SL(addr,len)      GP12333
         POP   USING                                            GP99113
         SPACE 2
DBTHEXTB DC    C'0123456789ABCDEF'   1/2                        GP97265
DBTHEXTR EQU   DBTHEXTB-C'0'         2/2                        GP97265
         DS    0A                 (CHEAT A LITTLE)
MSGRDW   DC    Y(MSGRTDS-*),X'8000'   WTO HEADER                GP96081
MSGMAX   DC    CL133' '      ASSURE REQUIRED SPACE              GP99113
         ORG   MSGMAX        REDEFINE                           GP99113
MSGRTDSC DC    C' '          CARRIAGE CONTROL                   GP99113
MSGHEAD  DC    CL8'TRAP4I',C' '  DEBUG HEADER
MSGLABL  DC    CL8' ',C' '   USER'S LABEL                       GP97265
MSGFLAG  DC    CL2' ',C' '   ANNOTATION/ERROR MSGS              GP97265
MSGTEXT  DC    CL36' '       USER'S HEX OR EBCDIC TEXT          GP97265
         DC    C' '          EXTRA FOR UNPACK                    94011
MSG@TCB  DC    CL8' ',C' '   CURRENT TCB ADDRESS+PADDING FOR UNPK
MSGRTDS  DC    X'01000020'   DESCRIPTOR 8; ROUTCDE 11
         ORG   MSG@TCB         REDEFINE FOR WIDE OPTION         GP99113
         DC    C' '          GROUP SEPARATOR                    GP99113
MSGTEXT2 DC    CL36' '       ANOTHER 4 HEX WORDS                GP99113
         DC    C' '          EXTRA FOR UNPACK                    94011
MSG@TCB2 DC    CL8' ',C' '   CURRENT TCB ADDRESS+PADDING FOR UNPK
         ORG   MSG@TCB2      RE-USE FOR WIDE DUAL OPTION        GP00162
         DC    C' '          LEFT FRAME *                       GP00162
MSGHTEX  DC    CL32' '       TEXT FOR HEX DUAL OPTION           GP00162
         DC    C' '          RIGHT FRAME *                      GP00162
         ORG   ,                                                GP99113
MSGRTDS2 DC    X'01000020'   DESCRIPTOR 8; ROUTCDE 11           GP99113
         SPACE 1
*   THIS TABLE DEFINES ALL TN/T11 CHARACTERS                    GP00162
*                                                               GP96101
TRTCHAR  TRTAB CODE=TN,FILL=X'FF'  0 FOR VALID CHARS            GP00162
TRTABTN  TRTAB CODE=TN,FILL=C'.'   VALID CHARS                  GP09277
         SPACE 1                                                GP95235
LSTWORK  DSECT ,             INPUT REQUEST LIST MAPPING         GP95235
LSTTYPE  DS    X             REQUEST TYPE                       GP95235
RTREGS   EQU   0               REGISTER LISTING                 GP96101
RTTEXT   EQU   1               TEXT STRING                      GP95235
RTCHEX   EQU   2               PRINTABLE TEXT, ELSE HEX         GP96101
RTHEX    EQU   3               HEXADECIMAL                      GP95235
RTPACK   EQU   4               PACKED DECIMAL                   GP96081
RTVAR    EQU   8               VARIABLE NAME (+ DATA REQUEST)   GP95235
RQTEOL   EQU   X'80'           END OF LIST FLAG                 GP02364
RQTMSK   EQU   X'7F'           END OF LIST MASK                 GP02364
         SPACE 1                                                GP95235
LSTFG    DC    AL1(0)        OPTION FLAGS                       GP95235
RFIAD    EQU   1               INDIRECT ADDRESS SUPPLIED        GP96101
RFA24    EQU   2               FORCE 24-BIT MODE ADDRESSING     GP96101
RFA31    EQU   4               FORCE 31-BIT ADDRESSING MODE     GP96101
RFNONAM  EQU   X'80'           NAME FIELD OMITTED               GP09277
         SPACE 1                                                GP95235
LSTADDR  DS    S             ADDRESS OF VARIABLE                GP95235
LSTLEN   DS    Y             LENGTH OF VARIABLE                 GP95235
LSTNAME  DS    0CL8          VARIABLE NAME FOR RTVAR TYPE       GP95235
         SPACE 1
         PRINT NOGEN                                            GP95235
         YREGS ,                                                GP95235
         IHAPSA ,                                               GP95235
         IKJTCB ,
         IHARB ,
         IHACDE ,
         DCBD  DEVD=DA,DSORG=PS                                 GP95235
         IEFUCBOB ,                                             GP99113
         IHAASCB ,                                               83324
         IEFJESCT ,                                              87280
         IEFJSCVT ,                                              87280
         IEFJSSIB ,                                              87280
         END   ,
