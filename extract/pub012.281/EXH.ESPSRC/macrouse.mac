MACROUSE TITLE 'M A C R O U S E  ***  MACRO CROSS-REFERENCE'
         PUNCH ' ORDER MACROUSE(P) '
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         MACRO ,
&NM      KEY   &TYPE=,&PFX=,&DSECT=YES
&NM      MACMAPHD DSECT=&DSECT,PFX=&PFX,DFLT=TRSCT
         LCLC  &P
&P       SETC  '&PFX'        FOR CONVENIENCE
         AIF   ('&TYPE' EQ 'L').MAPLIB
         AIF   ('&TYPE' EQ 'M').MAPMAC
         AIF   ('&TYPE' EQ 'P').MAPPGM
         MNOTE 8,'KEY: CORRECT TYPE= REQUIRED; "&TYPE" INVALID'
         MEXIT ,
.MAPLIB  ANOP  ,
&P.TYPE  DS    C'L'          TYPE (L-LIBRARY, M-MACRO, P-PROGRAM)
&P.DSN   DS    CL44          L - LIBRARY NAME
&P.MAC   DS    CL8           L - MACRO NAME
&P.PGM   DS    CL8           L - PROGRAM
&P.KEYLN EQU   *-&P.TYPE
         DS    0F
&P.RECLN EQU   *-&P.TYPE
         MEXIT ,
.MAPMAC  ANOP  ,
&P.TYPE  DS    C'M'          TYPE (L-LIBRARY, M-MACRO, P-PROGRAM)
&P.MAC   DS    CL8           M - MACRO NAME
&P.DSN   DS    CL44          M - LIBRARY NAME
&P.PGM   DS    CL8           M - PROGRAM
&P.KEYLN EQU   *-&P.TYPE
         DS    0F
&P.RECLN EQU   *-&P.TYPE
         MEXIT ,
.MAPPGM  ANOP  ,
&P.TYPE  DS    C'P'          TYPE (L-LIBRARY, M-MACRO, P-PROGRAM)
&P.PGM   DS    CL8           P - PROGRAM
&P.MAC   DS    CL8           P - MACRO NAME
&P.DSN   DS    CL44          P - LIBRARY NAME
&P.KEYLN EQU   *-&P.TYPE
         DS    0F
&P.RECLN EQU   *-&P.TYPE
         MEND  ,
         SPACE 1
         PRINT &PRTSOR
MACROUSE PGMHEAD ZERO31,BASE=(R11,R12),AM=31,RM=24,PARM=R9
         MVI   DATLTYPE,C'L'  IDENTIFY LIBRARY RECORD
         MVI   DATMTYPE,C'M'  IDENTIFY MACRO RECORD
         MVI   DATPTYPE,C'P'  IDENTIFY PROGRAM RECORD
         LA    R14,MYTREE    WORKING STORAGE
         LA    R0,PATREE     PATTERN FOR IT
         LA    R1,PATREELN   LENGTH
         LR    R15,R1          DITTO
         MVCL  R14,R0        BUILD CONTROL BLOCKS
         SPACE 1
*TEST*   BANDAID INIT        *****DEBUG*****
         SERVINIT ,          LOAD/INITIALIZE FOR SERVICE CALLS
         SERVLOAD @PRINTER,@PARSER   LOAD SERVICE ROUTINES
         SERVLOAD SUBVERB,SUBTREE    LOAD SUBROUTINES
         PRTOPEN SYSPRINT,OPT=ABEND  BOMB IF NOT SUPPLIED
         SPACE 1
         LA    R9,0(,R9)     CHECK FOR PARM
         LTR   R9,R9
         BZ    NOPARM
         L     R9,0(,R9)     LOAD PARM
         LA    R9,0(,R9)     CHECK ADDRESS
         LTR   R9,R9
         BZ    NOPARM
         LH    R8,0(,R9)     LOAD PARM LENGTH
         PARSE 2(R9),(R8),OPT=COMMA  PROCESS PARMS
         BXH   R15,R15,NOPARM  PROCESS PARM OPTIONS
         LA    R4,PAR@TABL   POINT TO RETURNED VALUES
         USING PRSDSECT,R4   DECLARE INDIVIDUAL ENTRY
         SPACE 1
*---------------------------------------------------------------------*
*  APPLY FLAG OFF, THEN FLAG ON REQUEST                               *
*---------------------------------------------------------------------*
PARMLOOP ICM   R4,15,PRSLINK  GET RETURNED VALUES
         BZ    NOPARM
         ICM   R3,15,PRS#TEXT  ANY TEXT ?
         BZ    PARMLOOP      NO; IGNORE NULL OPERAND
         OC    PRS$TEXT(8),=CL8' '  UPPER CASE
         PARFGSET PARMOPT,ERR=PARMFAIL,DONE=PARMLOOP            GP15205
         SPACE 1
PARMFAIL PRTLIST MSGBDPRM
         OICC  4,4,RESULT=RETCODE
         B     PARMLOOP      GET ANOTHER OPTION
MSGBDPRM FDPRT '*** UNRECOGNIZED PARM:'
         FDPRT PRS$TEXT,DEB,PAD
         FDPRT 'IGNORED ***'
         FD    *END
         DROP  R4
MSGSELCT FDOPT NL,CC=C'0'    DOUBLE-SPACE
         FDPRT 'LIBRARIES SUPPRESSED :'
         FDOPT IND=4
         FDTM  OPTFLAGS,FGNOSYS,BZ=MSGSELS1
         FDPRT 'CEE. AND SYS LIBRARIES',NL
         FDGOTO MSGSELIL
MSGSELS1 FDTM  OPTFLAGS,FGNOSYS1,BZ=MSGSELMC
         FDPRT 'SYS1. LIBRARIES',NL
         FDGOTO MSGSELIL
MSGSELMC FDTM  OPTFLAGS,FGNOMAC,BZ=MSGSELIL
         FDPRT 'SYS1.MACLIB',NL
         FDGOTO MSGSELIL
MSGSELIL FDTM  OPTFLAGS,FGNOINLN,BZ=MSGSELXX
         FDPRT 'IN-LINE MACRO DEFINITIONS',NL
MSGSELXX FDPRT *END
         SPACE 1
NOPARM   CLI   OPTFLAGS,0    DOING EVERYTHING ?
         BE    DONEPARM      YES; NO MESSAGE
         PRTLIST MSGSELCT    SHOW WHICH ARE SUPPRESSED
         SPACE 1
DONEPARM SERVCALL RJFCB,DCBDDNAM-IHADCB+INPDS
         BXH   R15,R15,FAILPDS
         MVC   MYJFCB(JFCBLGTH),0(R1)
         SERVCALL DSDJ1,MYJFCB
         BXH   R15,R15,FAILPDS
         USING DS1FMTID,R1
         TM    DS1DSORG,DS1DSGPO  PARTITIONED ?
         BZ    FAILPDS
         DROP  R1
         TM    JFCBIND1,JFCPDS  DID USER SPECIFY A MEMBER ?
         BNZ   FAILPDS       YES; FAIL (DO LATER AS MASK?)
         SPACE 1
OPENPDS  OPEN  (INPDS),MF=(E,OPENLIST)   OPEN FOR DIRECTORY READS
         TM    DCBOFLGS-IHADCB+INPDS,DCBOFOPN
         BZ    BADOPEN       MAY FAIL ANYWAY?
         SPACE 1
         PUSH  USING
         LA    R2,INPDS      GET DCB ADDRESS
         LA    R3,ROOTPTR
*        DESERV FUNC=GET_ALL,AREAPTR=(R3),                             *
               CONN_INTENT=NONE,DCB=(R2)
         PUSH  PRINT
         PRINT OFF
         DESERV FUNC=GET_ALL,AREAPTR=(R3),CONCAT=ALL,                  *
               CONN_INTENT=NONE,DCB=(R2),MF=(E,MYDESERV)
         POP   PRINT
         STM   R15,R0,DB
         LTR   R15,R15       DID IT WORK?
         BNZ   BADSERV       NO; QUIT
         ICM   R8,15,ROOTPTR
         BZ    BADSERV       NO; QUIT
         USING DESB,R8
LOOPDESB L     R7,DESB_AVAIL  POINT TO FIRST AVAILABLE SPACE
         SH    R7,=H'32'     SUBTRACT ARBITRARY AMOUNT
         LA    R5,DESB_DATA  POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
LOOPSMDE L     R6,SMDE_LEN
         TM    SMDE_FLAG,SMDE_FLAG_ALIAS  HAVE AN ALIAS ?
         BNZ   BUMPSMDE      YES; IGNORE IT
         MVC   MYMEMTTR(5),SMDE_MLT + _CNCT + _LIBF
         SLR   R6,R6
         ICM   R6,3,SMDE_NAME_OFF  GET OFFSET TO NAME SECTION
         BZ    BUMPSMDE      OOPS
         AR    R6,R5         GET PMAR ADDRESS
         USING SMDE_NAME,R6  DECLARE IT
         LH    R15,SMDE_NAME_LEN
         LA    R14,SMDE_NAME_VAL
         LTR   R15,R15
         BNP   BUMPSMDE
         LA    R0,DATPPGM    POINT TO TREE PARAMETER
         LA    R1,L'DATPPGM  AND LENGTH
         ICM   R15,8,=C' '   BLANK FILL
         MVCL  R0,R14        MOVE WITH BLANK FILL OR TRUNCATION
         MVC   DATLPGM,DATPPGM
         MVC   DATMPGM,DATPPGM  MOVE TO TREE PARMS
         SPACE 2
***********************************************************************
**                                                                   **
**  MEMREAD - READ THROUGH LOAD MODULE TEXT FOR MACRO/LIBRARY INFO   **
**                                                                   **
***********************************************************************
         SPACE 1
         PUSH  USING
MEMREAD  STM   R5,R8,SMDEBXLE  PRESERVE RETRIEVAL POINTERS
         FIND  INPDS,MYMEMTTR,C  GET FROM CORRECT CONCATENATION
         BXH   R15,R15,EODAD   NOTHING?
         INC   NUMPGM        NUMBER OF PROGRAMS PROCESSED
         SPACE 1
READLOOP LA    R3,BSAMBUFF
         READ  MYDECB,SF,INPDS,(R3),'S',MF=E   READ A BLOCK
         CHECK MYDECB        OVERALPPED I/O?  WHAT'S THAT??
         LA    R4,4          SIZE OF BLOCK DESCRIPTOR WORD
         LR    R5,R3
         AH    R5,0(,R3)     START+LENGTH
         BCTR  R5,0          LESS ONE
         STM   R3,R5,BUFFBXLE  SAVE SIZE FOR THIS ONE
         SPACE 1
RECLOOP  LM    R3,R5,BUFFBXLE  GET BUFFER DATA
         BXH   R3,R4,READLOOP  CURRENT ENTRY PROCESSED
         LH    R4,0(,R3)     SAVE SIZE OF THIS RECORD
         STM   R3,R4,BUFFBXLE  UPDATE
         USING ASMADATA,R3   DECLARE THE RECORD
         CLC   ADATA_RECTYPE,=Y(ADATA_RECMXREF)   REFERENCE ?
         BNE   RECLOOP
         SPACE 1
         CLI   ADATA_LEVEL,ADATA_L3  OLD VERSION ?
         BNL   MACREF        NO; PROCEED
         SH    R3,=H'4'      ADJUST FOR SHORTER HEADER
MACREF   SR    R6,R6
         ICM   R6,3,ADMXREF_NUM  GET NUMBER OF MACROS/COPY MEMBERS
         BZ    RECLOOP       SHOULD NOT HAPPEN ?
         LA    R14,DATPDSN   POINT TO LIBRARY NAME
         LA    R15,L'DATPDSN  AND LENGTH
         LA    R8,ADMXREF_DATASET  POINT TO MIXED USE FIELD
         LH    R9,ADMXREF_DAT_LEN  GET DS NAME LENGTH
         ICM   R9,8,=C' '          BLANK FILL
         MVCL  R14,R8        MOVE TO DSN IN KEY
         CLC   =C'PRIMARY INPUT ',DATPDSN
         BNE   MACDSN        HAVE REAL NAME?
         TM    OPTFLAGS,FGNOINLN  IGNORE IN-LINE ENTRIES ?
         BNZ   RECLOOP       YES; SKIP IT
         MVC   DATPDSN(20),=CL20'  IN-LINE DEFINITION'
MACDSN   TM    OPTFLAGS,FGNOSYS  IGNORE SYS AND CEE DATA SETS ?
         BZ    TESTSYS1
         CLC   =C'CEE.',DATPDSN  CEE LIBRARY ?
         BE    RECLOOP       YES; IGNORE
         CLC   =C'SYS',DATPDSN   ANY SYS LIBRARY ?
         BE    RECLOOP       YES; IGNORE
TESTSYS1 TM    OPTFLAGS,FGNOSYS1  IGNORE SYS1 DATA SETS ?
         BZ    TESTMAC
         CLC   =C'SYS1.',DATPDSN  SYS1. LIBRARY ?
         BE    RECLOOP       YES; IGNORE
TESTMAC  TM    OPTFLAGS,FGNOMAC  IGNORE SYS1.MACLIB ENTRIES ?
         BZ    PASSDSN
         CLC   =C'SYS1.MACLIB ',DATPDSN  SYS1.MACLIB LIBRARY ?
         BE    RECLOOP       YES; IGNORE
PASSDSN  MVC   DATMDSN,DATPDSN     PROPAGATE TO OTHER KEYS
         MVC   DATLDSN,DATPDSN     PROPAGATE TO OTHER KEYS
         INC   NUMLIB        COUNT LIBRARY RECORDS PROCESSED
         AH    R8,ADMXREF_VOL_LEN  SKIP VOL-SER
         AH    R8,ADMXREF_DD_LEN   SKIP DDNAME (WRONG IN L2 ANYWAY)
LOOPMEM  ICM   R9,3,0(R8)    GET MACRO/COPY NAME LENGTH
         BZ    RECLOOP       OOPS ?
         LH    R2,0(,R8)     ANOTHER COPY OF MACRO/COPY NAME LENGTH
         LA    R8,2(,R8)     SKIP OVER LENGTH FIELD
         LA    R14,DATPMAC   POINTO TO MACRO NAME
         LA    R15,L'DATPMAC
         MVCL  R14,R8        MOVE NAME AND ADJUST POINTERS
         SH    R2,=Y(L'DATPMAC)  ** AN IN-LINE MACRO NAME MAY BE LONGER
         BNP   R8DONE        THAN EIGHT BYTES, SO WE NEED TO ADD THE
         AR    R8,R2         UNMOVED LENGTH TO THE INPUT POINTER.
R8DONE   MVC   DATMMAC,DATPMAC  PROPAGATE TO OTHER KEYS
         MVC   DATLMAC,DATPMAC  PROPAGATE TO OTHER KEYS
         SUBCALL SUBTREE,('GET',MYTREE,DATPTYPE),MF=(E,CALLPARM) PGM
         SUBCALL SUBTREE,('GET',MYTREE,DATMTYPE),MF=(E,CALLPARM) MAC
         SUBCALL SUBTREE,('GET',MYTREE,DATLTYPE),MF=(E,CALLPARM) LIB
         INC   NUMMAC        COUNT MACROS PROCESSED
         BCT   R6,LOOPMEM    DO NEXT MEMBER
         B     RECLOOP
         POP   USING
         SPACE 1
EODAD    LM    R5,R8,SMDEBXLE  RESTORE RETRIEVAL POINTERS
         USING SMDE,R5       DECLARE IT
BUMPSMDE L     R6,SMDE_LEN
         BXLE  R5,R6,LOOPSMDE  REPEAT FOR NEXT SMDE
         USING DESB,R8
         ICM   R8,15,DESB_NEXT  ANOTHER BLOCK ?
         BNZ   LOOPDESB
         SPACE 2
*---------------------------------------------------------------------*
*  SYSADATA PROCESSED - PRODUCE REPORTS                               *
*---------------------------------------------------------------------*
         PRTLIST MSGSTATS    WRITE STATISTICS
         CLOSE MF=(E,OPENLIST)
         XC    PRELTYPE(PRELRECLN),PRELTYPE  CLEAR BREAK TESTER
         SPACE 1
LEAFLOOP SUBCALL SUBTREE,('NEXT',MYTREE),VL,MF=(E,CALLPARM)
         BXH   R15,R15,PGMEXIT
         LA    R3,TREEREC    POINT TO CURRENT RECORD
         USING OUTLTYPE,R3   DECLARE LIBRARY TYPE
         CLI   OUTLTYPE,C'L'   LIBRARY ENTRY ?
         BNE   CHECKMAC      NO
         CLC   OUTLTYPE,PRELTYPE  BREAK ?
         BE    CONTLIB       NO
         PRTLIST TITLIB,TITLE=1
         PRTLIST SUBLIB,TITLE=3
         XC    PRELTYPE(PRELRECLN),PRELTYPE  CLEAR BREAK TESTER
CONTLIB  CLC   PRELDSN,OUTLDSN  NEW DATA SET ?
         BNE   CONTLIBL
         CLC   PRELMAC,OUTLMAC  SAME MACRO/COPY ?
         BE    CONTLIBM
CONTLIBL PRTLIST MSGLIBL     LIBRARY & MACRO/COPY NAME
CONTLIBM PRTLIST MSGLIBP     REFERENCING PROGRAM
         B     LEAFNEXT      DONE
         SPACE 1
         USING OUTMTYPE,R3   DECLARE MACRO TYPE
CHECKMAC CLI   OUTMTYPE,C'M'   MACRO ENTRY ?
         BNE   CHECKPGM      NO
         CLC   OUTMTYPE,PREMTYPE  BREAK ?
         BE    CONTMAC       NO
         PRTLIST TITMAC,TITLE=1
         PRTLIST SUBMAC,TITLE=3
         XC    PREMTYPE(PREMRECLN),PREMTYPE  CLEAR BREAK TESTER
CONTMAC  CLC   PREMDSN,OUTMDSN  NEW DATA SET ?
         BNE   CONTMACL
         CLC   PREMMAC,OUTMMAC  SAME MACRO/COPY ?
         BE    CONTMACM
CONTMACL PRTLIST MSGMACM     MACRO/COPY NAME AND LIBRARY
CONTMACM PRTLIST MSGMACP     REFERENCING PROGRAM
         B     LEAFNEXT      DONE
         SPACE 1
         USING OUTPTYPE,R3   DECLARE PROGRAM TYPE
CHECKPGM CLI   OUTPTYPE,C'P'   PROGRAM ENTRY ?
         BNE   LEAFNEXT      NO  ***HUH?***
         CLC   OUTPTYPE,PREPTYPE  BREAK ?
         BE    CONTPGM       NO
         PRTLIST TITPGM,TITLE=1
         PRTLIST SUBPGM,TITLE=3
         XC    PREPTYPE(PREPRECLN),PREPTYPE  CLEAR BREAK TESTER
CONTPGM  CLC   PREPPGM,OUTPPGM  SAME MACRO/COPY ?
*        BNE   CONTPGML
*ONTPGM  CLC   PREPDSN,OUTPDSN  NEW DATA SET ?
         BE    CONTPGMM
CONTPGML PRTLIST MSGPGMP     PROGRAM
CONTPGMM PRTLIST MSGPGMM     MACRO
*NEXT*   B     LEAFNEXT      DONE
LEAFNEXT MVC   PRELTYPE(PRELRECLN),TREEREC   SAVE PRIOR
         B     LEAFLOOP      TRY FOR ANOTHER
         SPACE 2
*---------------------------------------------------------------------*
*  END OF TREE - TERMINATE NORMALLY                                   *
*---------------------------------------------------------------------*
PGMEXIT  SUBCALL SUBTREE,('END',MYTREE),VL,MF=(E,CALLPARM)  FREE
         SERVTERM ,
         PGMEXIT RC=0        GET OUT
         SPACE 1
FAILPDS  PRTL  ' *** SYSADATA DD MISSING, UNUSABLE, OR NOT PDS ***'
         SERVTERM DELETE=NO
         ABEND 14,DUMP
         SPACE 1
BADOPEN  PRTL  ' *** SYSADATA DD OPEN FAILED ***'
         ABEND 13,DUMP
         SPACE 1
BADSERV  LR    R7,R15
         LR    R8,R0
         LR    R9,R1
         PRTL  ' *** DESERV FAILED ***'
         ABEND 18,DUMP
         SPACE 1
         PARKEYBX PARMOPT    MAKE BXLE FOR OPTIONS
PARMOPT  PARKEYFG 'NOSYS1',OPTFLAGS,0,FGNOSYS1,LEN=1,MIN=6
PARMOPT2 PARKEYFG 'NOSYS',OPTFLAGS,0,FGNOSYS,MIN=5
         PARKEYFG 'NOMAC',OPTFLAGS,0,FGNOMAC,MIN=5
         PARKEYFG 'NOINLINE',OPTFLAGS,0,FGNOINLN,MIN=4
         PARKEYFG 'SYS1',OPTFLAGS,FGNOSYS1,0,MIN=4
         PARKEYFG 'SYS',OPTFLAGS,FGNOSYS,0,MIN=3
         PARKEYFG 'MAC',OPTFLAGS,FGNOMAC,0,MIN=3
PARMOPTN PARKEYFG 'INLINE',OPTFLAGS,FGNOINLN,0,MIN=3
         SPACE 1
*  STUFF COPIED TO DYNAMIC SAVE/WORK AREA
PATREE   SERVTREE PFX=PATR,KEYLEN=DATPKEYLN,RECLEN=DATPRECLN,          *
               RECNUM=32*1024     32K RECORDS ENOUGH ?
PATLIST  OPEN  (PATPDS,(INPUT,REREAD)),MF=L
PATPDS   DCB   DDNAME=SYSADATA,DSORG=PO,MACRF=R,EODAD=EODAD
         READ  PATDECB,SF,PATPDS,,'S',MF=L   READ A BLOCK
PATDSERV DESERV FUNC=GET_ALL,AREAPTR=PATDSERV,                         *
               CONN_INTENT=NONE,DCB=PATPDS,MF=L
PATREELN EQU   *-PATREE
         SPACE 1
         PRINT &PRTSYS
         SPACE 2
SYSPRINT PRTWORK SYSPRINT,SYSTERM,TITLE=5
         SPACE 1
MSGSTATS FDOPT NL,CC=C'0'
         FDPRT 'FOUND'
         FDPRT NUMMAC,I,RADJ,PAD,LEN=10
         FDPRT 'MACROS;'
         FDPRT NUMLIB,I,RADJ,PAD,LEN=10
         FDPRT 'LIBRARY RECORDS IN'
         FDPRT NUMPGM,I,RADJ,PAD,LEN=10
         FDPRT 'PROGRAMS.'
         FDPRT *END
         SPACE 1
         USING OUTLTYPE,R3   DECLARE LIBRARY TYPE
TITLIB   FDOPT NL,CC=C'#'
         FDREPT 30
         FDPRT 'MACRO USAGE BY LIBRARY'
         FD    *END
         SPACE 1
SUBLIB   FDPRT 'MACRO LIBRARY',NL,LEN=45
         FDPRT 'MACRO/COPY',LEN=12
         FDPRT 'REFERENCING PROGRAM MEMBERS'
         FD    *END
         SPACE 1
MSGLIBL  FDOPT IND=0
         FDPRT OUTLDSN,NL,LEN=45
         FDPRT OUTLMAC,LEN=11
         FD    *END
         SPACE 1
MSGLIBP  FDOPT IND=57
         FDPRT OUTLPGM,PADL
         FD    *END
         SPACE 1
         USING OUTMTYPE,R3   DECLARE MACRO TYPE
TITMAC   FDOPT NL,CC=C'#'
         FDREPT 30
         FDPRT 'MACRO USAGE BY PROGRAM'
         FD    *END
         SPACE 1
SUBMAC   FDPRT 'MACRO/COPY',NL,LEN=11
         FDPRT 'MACRO LIBRARY',LEN=46
         FDPRT 'REFERENCING PROGRAM MEMBERS'
         FD    *END
         SPACE 1
MSGMACM  FDOPT IND=0
         FDPRT OUTMMAC,NL,LEN=11
         FDPRT OUTMDSN,LEN=45
         FD    *END
         SPACE 1
MSGMACP  FDOPT IND=57
         FDPRT OUTMPGM,PADL
         FD    *END
         SPACE 1
         USING OUTPTYPE,R3   DECLARE PROGRAM TYPE
TITPGM   FDOPT NL,CC=C'#'
         FDREPT 30
         FDPRT 'PROGRAM REFERENCES TO MACROS'
         FD    *END
         SPACE 1
SUBPGM   FDPRT 'PROGRAM',NL,LEN=11
         FDPRT 'MACRO/COPY CODE REFERENCED'
         FD    *END
         SPACE 1
MSGPGMP  FDOPT IND=0
         FDPRT OUTPPGM,NL,LEN=10
         FD    *END
         SPACE 1
MSGPGMM  FDOPT IND=11
         FDPRT OUTPMAC,PADL
         FD    *END
         SPACE 1
         PRINT &PRTMAC
         SPACE 1
SAVE     DSECT ,                                                GP97310
DB       DS    2D
DB2      DS    2D
         SERVDEFS ,          DEFINE @SERVICE, @PRINTER, ETC.
ROOTPTR  DS    A             DESERV WORK SPACE
SMDEBXLE DS    4A
BUFFBXLE DS    3A
         SPACE 1
NUMPGM   DS    F             NUMBER OF PROGRAM MEMBERS
NUMLIB   DS    F             NUMBER OF LIBRARY RECORDS
NUMMAC   DS    F             NUMBER OF MACROS FOUND
         SPACE 1
OPTFLAGS DC    X'00'         OPTION FLAGS
FGNOSYS1 EQU   X'80'           SKIP SYS1 LIBRARIES
FGNOSYS  EQU   X'40'           SKIP CEE, SYS LIBRARIES
FGNOMAC  EQU   X'20'           SKIP SYS1.MACLIB
FGNOINLN EQU   X'08'           SKIP IN-LINE
         SPACE 1
MYMEMTTR DS    XL3           MEMBER TTR
MYCONC   DS    XL1           CONCATENATIN NUMBER
MYLIBF   DS    XL1           LIBRARY FLAG (0-PRIVATE LIB)
         SPACE 1
         MAPPARSE DSECT=NO   EXPAND @PARSE PARAEMTER LIST AND RETURNS
         SPACE 1
PGMKEY   KEY   TYPE=P,PFX=DATP,DSECT=NO
MACKEY   KEY   TYPE=M,PFX=DATM,DSECT=NO
LIBKEY   KEY   TYPE=L,PFX=DATL,DSECT=NO
         SPACE 1
         ORG   DATLLIBKEY    RETURN FROM TREE LISTER
         KEY   TYPE=L,PFX=PREL,DSECT=NO
         ORG   DATLLIBKEY    RETURN FROM TREE LISTER
         KEY   TYPE=M,PFX=PREM,DSECT=NO
         ORG   DATLLIBKEY    RETURN FROM TREE LISTER
         KEY   TYPE=P,PFX=PREP,DSECT=NO
         SPACE 1
*   DATA COPIED FROM PATTERN - KEEP TOGETHER UNTIL MYJFCB
MYTREE   SERVTREE PFX=TREE,KEYLEN=DATPKEYLN,RECLEN=DATPRECLN,          *
               RECNUM=32*1024     32K RECORDS ENOUGH ?
OPENLIST OPEN  (INPDS,(INPUT,REREAD)),MF=L
INPDS    DCB   DDNAME=SYSADATA,DSORG=PO,MACRF=R,EODAD=EODAD
         READ  MYDECB,SF,INPDS,,'S',MF=L   READ A BLOCK
MYDESERV DESERV FUNC=GET_ALL,AREAPTR=0,                                *
               CONN_INTENT=NONE,DCB=INPDS,MF=L
         SPACE 1
MYJFCB   DS    0A
         IEFJFCBN ,
         SPACE 1
BSAMBUFF DS    128XL256'0'   BSAM READ RETURN DATA
         SPACE 1
SAVEEND  EQU   *
         PRINT &PRTSYS
         SPACE 1
PGMOUT   KEY   TYPE=P,PFX=OUTP
MACOUT   KEY   TYPE=M,PFX=OUTM
LIBOUT   KEY   TYPE=L,PFX=OUTL
         SPACE 1
         MAPPARST DSECT=YES  EXPAND PARSE ENTRY
         SPACE 1
         DCBD  DEVD=DA,DSORG=PS
         SPACE 1
         IECSDSL1 1          DSCB 1
         SPACE 1
         PRINT &PRTSYS
         EJECT ,
         PRINT ON,GEN
         IGWDES ,
         SPACE 2
         IGWSMDE ,
         SPACE 2
         ASMADATA PRINT=GEN,MXREF=YES,MXREFX=YES
         END   ,
