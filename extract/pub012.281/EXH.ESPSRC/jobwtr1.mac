JOW1  TITLE 'J O B W T R  ***  OS QUEUE JOB PRINTER - Q INTERFACE'
JOBWTR1  CSECT
*    FUNCTION: THIS MODULE INTERFACES WITH THE SYSOUT QUEUES
*     AND PASS SYSOUT A LINE AT A TIME TO THE CALLER'S INCORE BUFFER
*    CALLING SEQUENCE - CALL MVTWTR,(QTYPE,BUF,CODE)
*    QTYPE - ADDRESS OF ONE BYTE FIELD CONTAINING BINARY NUMBER REPRE-
*             SENTING SYSOUT QUEUE TO BE ACCESSED
*     BUF   - ADDRESS OF 132 BYTE FIELD TO CONTAIN SYSOUT LINE
*     CODE  - ADDRESS OF ONE BYTE FIELD USED AS INPUT-OUTPUT FLAG
*             + CL8 - JOBNAME CURRENTLY BEING PROCESSED
*        INPUT -X'00' GET NEXT LINE OF PRINT
*              -X'01' GET NEXT LINE STARTING AT THE BEGINNING OF DATA
*                     SET CURRENTLY BEING READ
*              -X'02' GET NEXT LINE OF PRINT STARTING AT END OF DATA
*                     SET CURRENTLY BEING READ
*              -X'03' FLAG DATASET FOR DELETION
*              -X'04' TERMINATE
*              -X'05' FLAG DATASET FOR HARDCOPY
*        OUTPUT -X'00' NEXT LINE GOTTEN
*                X'01' PREVIOUS LINE WAS LAST LINE OF DATASET
*                X'02' PREVIOUS LINE WAS LAST LINE OF DATA
*                X'03' JOB NOT FOUND ON QUEUE
*                X'04' NO WORK ON QUEUE
*                X'05' NO ACTION TAKEN
*                X'06' DATASET FLAGGED FOR DELETION
*                X'07' DATA FLAGGED FOR HARDCOPY
*
*    AMS MODIFICATIONS :
*        SUPPORT FOR SYSVLOG PROCESSING - REQUIRES TCB KEY ZERO
*        SUPPORT FOR FUNNY RECORD FORMATS (V, VBS, ETC)
*              OUTPUT RECORD LENGTH FIXED AT 133 BYTES
         SPACE 1
         USING *,R2
         STM   R14,R12,12(R13)  SAVE REGS
         LR    R2,R15        MAKE BASE
         LA    R15,SAVE      GET SAVE AREA
         ST    R15,8(,R13)   LINK
         ST    R13,4(,R15)
         LR    R13,R15
*
         LM    R3,R5,0(R1)
*     CHECK INPUT CODE AND BRANCH ACCORDINGLY
         CLI   DEQF,X'00'
         BE    ENDEQ
         CLI   0(R5),X'10'
         BNL   REREAD
         CLI   0(R5),X'05'   GREATER THAN BRANCH TABLE ?
         BH    INPCHK
         XR    R6,R6
         IC    R6,0(,R5)
         SLL   R6,2          MAKE BRANCH OFFSET
         B     *+4(R6)       BRANCH
         B     GP            0
         B     REREAD        1
         B     RDPAST        2
         B     DATADL        3
         B     INPCHK        4 ?
         B     DATAPT        5
INPCHK   MVI   ENDF,X'01'
         CLI   SMBF,X'00'
         BE    RDNEXT
         B     CLOSE
*     DOES NEXT LINE COME FROM SMB OR DATASET?
GP       CLI   SMBF,X'00'
         BE    SMBHAND
         CLI   EODF,X'00'
         BE    GETREC
         B     CLOSE
*     HAS CALLER ASKED FOR REREAD WHILE PROCESSING AN SMB?
REREAD   CLI   SMBF,X'00'
         BE    NOAC
         MVI   RRF,X'01'
         B     CLOSE
         SPACE 1
*     HAS CALLER ASKED FOR READPAST WHILE PROCESSING AN SMB?
RDPAST   CLI   SMBF,X'00'
         BNE   CLOSE
*        B     NOAC
*     SET NO ACTION CODE AND RETURN
NOAC     MVI   0(R5),X'05'
         B     OUT
*        SET DELETION FLAG IF PROCESSING DATASET
DATADL   CLI   SMBF,X'00'
         BE    NOAC
         MVI   DSPF,X'01'
         MVI   0(R5),X'06'
         B     OUT
*        SET PRINT FLAG
DATAPT   MVI   SYSPF,X'01'
         MVI   0(R5),X'07'
         B     OUT
*    DEQUEUE TOP PRIORITY SYSOUT OR JOB SYSOUT DEPENDING WHETHER CALL-
*      ER HAS SUPPLIED BLANKS OR JOBNAME IN FIRST 8 BYTES OF BUF
ENDEQ    MVI   DEQF,X'01'
         MVI   FEJ,1         FORCE PAGE EJECT ON NEXT PRINT
         XC    QMPA(56),QMPA
         MVC   QMPA+15(1),0(R3)
         LA    R6,ECB
         ST    R6,QMPA
         MVI   QMPA+8,X'06'
         MVC   ECB+4(1),0(R3)
         LA    R6,DSBSMBA
         ST    R6,EPA
         LA    R6,EPA
         ST    R6,QMPA+32
         LA    R1,QMPA
         L     R15,DEQR
         BALR  R14,R15
         CH    R15,=H'4'
         BE    NOWORK
         MVC   1(8,R5),QMPA  SAVE JOBNAME FOR CALLER
         CLC   0(8,R4),DOUBLEB
         BE    BTYPE
         CLI   FTF,X'00'
         BNE   COMPAR
         MVC   WORKA(8),QMPA
COMPAR   CLC   0(8,R4),QMPA
         BNE   COMPAR2
         MVC   0(8,R4),DOUBLEB
         B     BTYPE
COMPAR2  CLI   FTF,X'00'
         BE    REQUE
         CLC   WORKA(8),QMPA
         BNE   REQUE
         MVI   NOJF,X'01'
REQUE    XR    R6,R6
         STC   R6,QMPA+17
         XC    QMPA+32(4),QMPA+32
         XC    QMPA+18(2),QMPA+18
         LA    R1,QMPA
         L     R15,ENQR
         BALR  R14,R15
         MVI   FTF,X'01'
         CLI   NOJF,X'01'
         BE    NOJOB
         B     ENDEQ
*     NO WORK ON QUEUE
NOWORK   LA    R1,ECB
         L     R15,UNCR
         BALR  R14,R15
         MVI   0(R5),X'04'
         MVI   DEQF,X'00'
         B     OUT
*     JOB NOT FOUND ON QUEUE
NOJOB    MVI   0(R5),X'03'
         XC    DEQF(8),DEQF
         B     OUT
*     GET NEXT SMB OR DSB
RDNEXT   MVI   NOTO,X'00'
         L     R7,SMBNEXT
         LTR   R7,R7
         BZ    ENDDATA
         XC    EPA(8),EPA
         LA    R6,DSBSMBA
         STM   R6,R7,EPA
         MVI   QMPA+32,X'01'
         MVI   QMPA+8,X'04'
         LA    R1,QMPA
         L     R15,RWR
         BALR  R14,R15
BTYPE    MVC   SMBNEXT(3),DSBSMBA+4
         MVI   SMBF,X'01'
         CLI   DSBSMBA+14,X'FF'
         BE    DSBHAND
         MVI   CCCODE,0      NO CARRIAGE CONTROL FOR SMB
         MVI   SMBF,X'00'
         LA    R6,DSBSMBA+14
         ST    R6,NEXTAD
         CLI   ENDF,X'01'
         BE    RDNEXT
*     GET NEXT LINE FROM SMB
SMBHAND  L     R6,NEXTAD
         MVI   0(R4),C' '    START TO PRECLEAR OUTPUT BUFFER
         MVC   1(132,R4),0(R4)  CLEAR ENTIRE BUFFER
         CLI   0(R6),X'00'
         BE    RDNEXT
         CLI   0(R6),X'FE'
         BE    DECM
         XR    R8,R8
         IC    R8,0(,R6)
         BCTR  R8,0
DMOVE    MVC   1(1,R4),1(R6)
         EX    R8,DMOVE
         LA    R6,2(R8,R6)
RECDONE  ST    R6,NEXTAD
         B     FEJTEST      TEST FOR PAGE EJECT
DECM     LA    R6,1(,R6)
         XR    R7,R7
         XR    R9,R9
         LA    R10,0(,R4)    ENSURE ZERO HIGH BYTE
         IC    R7,0(,R6)
         S     R7,=F'2'
LOOP     XR    R8,R8
         LA    R6,1(,R6)
         IC    R8,0(,R6)
         BCTR  R8,0
DMOVE2   MVC   1(1,R10),1(R6)
         EX    R8,DMOVE2
         LA    R6,2(R8,R6)
         LA    R10,1(R8,R10)
         LA    R8,2(,R8)
         SR    R7,R8
         BNP   RECDONE
         XR    R8,R8
         IC    R8,0(,R6)
         AR    R10,R8
         BCTR  R7,0
         B     LOOP
*     READ DATASET JFCB AND SET UP FOR OPENING DATASET
DSBHAND  L     R7,DSBSMBA+28
         SRL   R7,8
         SLL   R7,8
         LA    R6,JFCB
         XC    EPA(8),EPA
         STM   R6,R7,EPA
         MVI   QMPA+32,X'01'
         MVI   QMPA+8,X'04'
         LA    R1,QMPA
         L     R15,RWR
         BALR  R14,R15
         IC    R7,DSBSMBA+13  SAVE 'LOG DS' INDICATOR
         STC   R7,LOGOUT
         CLI   ENDF,X'01'
         BE    SCRAT
         OBTAIN DSCB
         BXH   R15,R15,ZERODSB
         MVC   DSBDCB+40(8),DSBSMBA+20
         XC    JFCB+90(2),JFCB+90
         XC    JFCB+102(2),JFCB+102
         LA    R7,UCBTLIST
         LA    R11,DSBSMBA+34
         LA    R10,JFCB+118
         XR    R6,R6
         STH   R6,LNCNT
         IC    R6,JFCB+117
LOOP1    L     R8,CVTPTR
         L     R8,CVTILK2-CVTMAP(,R8)
LOOP2    LH    R9,0(,R8)
         N     R9,=XL4'0000FFFF'  MASK AND TEST                  *AMS*
         BZ    NTE
         CLI   18(R9),X'20'
         BNE   NTE
         TM    6(R9),X'40'
         BNZ   NTE
         CLC   28(6,R9),0(R10)
         BNE   NTE
         STH   R9,0(,R11)
         MVC   0(4,R7),16(R9)
         SH    R6,=H'1'
         BNP   READA
         LA    R11,4(,R11)
         LA    R10,6(,R10)
         LA    R7,4(,R7)
         B     LOOP1
NTE      LA    R8,2(,R8)
         B     LOOP2
*     REOPEN DATASET FOR REREAD
READA    L     R6,CVTPTR
         L     R6,CVTTCBP-CVTMAP(,R6)
         L     R6,4(,R6)
         OI    168(R6),X'70'  FOR SYSLOG - SET PASSWORD OVERRIDE *AMS*
         L     R7,180(,R6)   LOAD JSCB                           *AMS*
         OI    243(R7),X'80'  ALSO SET JSCBPASS                  *AMS*
         L     R8,12(,R6)                                        *AMS*
         ST    R8,TIOTS
         MVC   NTIOT(24),0(R8)                                   *AMS*
         MVC   NTIOT+24(160),DSBSMBA+16
         LA    R7,NTIOT
         ST    R7,12(,R6)
         MVI   RRF,X'00'
         XR    R6,R6
         IC    R6,DSBSMBA+16
         XR    R8,R8
         ST    R8,24(R6,R7)
         NI    DSBDCB+32,255-X'70'  TURN OFF BUFFERING BITS
         OI    DSBDCB+32,X'40'   SET SIMPLE BUFFERING
         TM    JFCB+100,X'48'   RECFM=VS SET ?
         BNO   OPEN          NO
         TM    JFCB+100,X'A0'   ANYTHING LIKE U,F OR D ?
         BNZ   OPEN          YES
         OI    DSBDCB+32,X'20'   SET BFTEK=A FOR SPANNED RECORDS
OPEN     OPEN  (DSBDCB,(INPUT)),TYPE=J
         MVI   FEJ,1         FORCE PAGE EJECT ON NEXT PRINT
         MVC   CCCODE,DSBDCB+36   COPY RECFM
         NI    CCCODE,CCASA+CCMC  MASK OUT ALL BUT CARR CODE
         MVC   DCBS(4),DSBDCB+80
         MVI   DSBDCB+81,X'00'
         L     R6,CVTPTR
         L     R6,CVTTCBP-CVTMAP(,R6)
         L     R6,4(,R6)
         MVC   12(4,R6),TIOTS
         CLI   NOTO,X'01'
         BE    CLOSE
         CLI   0(R5),X'01'
         BE    ZEROLN
         CLI   0(R5),X'10'
         BL    GETREC
         LH    R7,LNCNT
         XR    R6,R6
         IC    R6,0(,R5)
         SR    R7,R6
         BNP   ZEROLN
         STH   R7,LNCNT
LOOP3    GET   DSBDCB
         BCT   R7,LOOP3
         B     RECSET
*     GET NEXT LINE FROM OPENED DATASET
ZEROLN   XR    R7,R7
         STH   R7,LNCNT
GETREC   GET   DSBDCB
         LH    R6,LNCNT
         LA    R6,1(,R6)
         STH   R6,LNCNT
RECSET   LR    R6,R1
         MVI   0(R4),C' '    START TO PRECLEAR OUTPUT BUFFER
         MVC   1(132,R4),0(R4)  CLEAR ENTIRE BUFFER
         LH    R7,DSBDCB+82
         TM    DSBDCB+36,X'80'
         BO    CHCH
         XR    R7,R7
         IC    R7,0(,R6)
         SLL   R7,8
         IC    R7,1(,R6)
         LA    R6,4(,R6)
         SH    R7,=H'4'
         BNP   GETREC        SKIP IF NO CARR CONTROL OR DATA
         SPACE
CHCH     LR    R14,R4        COPY DESTINATION ADDRESS
         LA    R15,133       SET MAX BUFFER LENGTH
         CLI   CCCODE,0      USER SUPPLIED CARRIAGE CONTROL ?
         BNE   CHCHL         YES; TRY THEM FOR SIZE
         BCTR  R15,0          ELSE SET MAX LENGTH ONE LESS
         LA    R14,1(,R14)   AND DESTINATION ADDRESS ONE HIGHER
CHCHL    CR    R7,R15        WILL THIS FIT INTO USER'S BUFFER ?
         BNH   RECMOV        YES, MOVE IT
         LR    R7,R15        ELSE SET TO MAXIMUM THAT WILL FIT
RECMOV   BCTR  R7,0
         EX    R7,MOVREC
         XR    R1,R1         SET OFFSET TO ASA TABLE FROM ASA TABLE
         LA    R14,CODEA     SET TABLE FOR ASA CHARACTER CHECK
         LA    R15,L'CODEA-1  ONE LESS FOR BLANK DROPOUT
         TM    CCCODE,CCMC   MACHINE CONTROL CHARACTERS ?
         BZ    MCCONL        NO; CHECK FOR AMS ONLY CHARS
         LA    R1,CODEA-CODEM  SET OFFSET TO ASA FROM MACH CODE TABLE
         TM    0(R4),2       IMMEDIATE OP-CODE ?
         BZ    MCCON         NO
         NI    0(R4),255-2   CONVERT TO PRINT TYPE
         MVI   1(R4),C' '    AND CLEAR PRINT PORTION OF THE BUFFER
         MVC   2(131,R4),1(R4)    CLEAR ALL OF IT
MCCON    XC    CODESAV,0(R4)   SAVE THIS CC FOR NEXT TIME
         XC    0(1,R4),CODESAV    AND USE PREVIOUS TYPE FOR THIS WRITE
         XC    CODESAV,0(R4)
         LA    R14,CODEM     GET MACHINE CODE LOOKUP TABLE
         LA    R15,L'CODEM   # OF ENTRIES
MCCONL   CLC   0(1,R14),0(R4)     MATCH ?
         BE    MCCONP        YES; USE IT
         LA    R14,1(,R14)   ELSE TRY NEXT
         BCT   R15,MCCONL    IF WE FALL THROUGH, R14 POINTS TO BLANK
MCCONP   AR    R1,R14        GET ADDRESS OF REPLACEMENT CHARACTER
         MVC   0(1,R4),0(R1)  MOVE EQUIVALENT ASA CHARACTER
FEJTEST  MVI   0(R5),X'00'
         CLI   CCCODE,0      ANY CONTROL CHARACTERS ?
         BNE   FEJTEST1      YES; DON'T FORCE PAGING
         LH    R6,LINECT
         LA    R6,1(,R6)
         STH   R6,LINECT
         CH    R6,=H'60'    REACHED MAX PER PAGE YET ?
         BH    FEJTEST3      YES; FORCE EJECT
FEJTEST1 CLI   FEJ,0         FORCED EJECT ?
         BE    OUT           NO; RETURN TO CALLER
         TM    CCCODE,CCMC   MACHINE CODE ?
         BZ    FEJTEST3      NO
         CLI   CODESAV,X'89'  IS NEXT REQUEST A PAGE EJECT ?
         BNE   FEJTEST3      NO
         MVI   0(R4),C'C'    MAKE THIS ONE A CHANNEL 12 SKIP
         B     FEJTEST4      AND DON'T USE CHANNEL 1 SKIP THIS TIME
FEJTEST3 MVI   0(R4),C'1'    FORCE A PAGE EJECT
FEJTEST4 MVI   FEJ,0         RESET FORCED EJECT FLAG
         XC    LINECT,LINECT   CLEAR LINE COUNT FOR NEXT TIME
         B     OUT
*
*     CLOSE DATASET
CLOSE    MVI   EODF,X'00'
         MVC   DSBDCB+80(4),DCBS
         L     R6,CVTPTR
         L     R6,CVTTCBP-CVTMAP(,R6)
         L     R6,4(,R6)
         LA    R7,NTIOT
         ST    R7,12(,R6)
         CLOSE DSBDCB
         MVI   DSBDCB+81,X'00'
         MVC   12(4,R6),TIOTS
         FREEPOOL DSBDCB
         CLI   RRF,X'01'
         BE    READA
         CLI   DSPF,X'01'
         BNE   RDNEXT
         SPACE 1
*     IF THE SCRATCH REQUEST IS FOR THE SYSLOG DATASETS, CLEAR IT ONLY
*
SCRAT    TM    LOGOUT,X'80'  IS THIS A LOG DATASET ?
         BZ    SCRAT1        NO; DELETE IT
         L     R6,CVTPTR
         L     R6,CVTTCBP-CVTMAP(,R6)
         L     R6,4(,R6)
         LA    R7,NTIOT
         ST    R7,12(,R6)
         LINK  EP=IEEVLOUT   LINK TO OS WTR LOG CLEANUP ROUTINE
         MVC   12(4,R6),TIOTS
         B     ZERODSB
         SPACE 1
*        SCRATCH DATASET IF FLAGGED FOR DELETION
SCRAT1   XR    R6,R6
         IC    R6,JFCB+117
         STH   R6,VOLIST
         LA    R7,VOLIST+2
         LA    R9,UCBTLIST
         LA    R8,JFCB+118
STORE    MVC   0(4,R7),0(R9)
         MVC   4(6,R7),0(R8)
         LA    R8,6(,R8)
         LA    R9,4(,R9)
         LA    R7,12(,R7)
         BCT   R6,STORE
         XR    R0,R0
         SCRATCH LABEL
*        ZERO DSB IF DATASET FLAGGED FOR DELETION
ZERODSB  XC    EPA(8),EPA
         LA    R6,DSBSMBA
         ST    R6,EPA
         MVC   EPA+4(3),DSBSMBA
         XC    DSBSMBA(4),DSBSMBA
         XC    DSBSMBA+8(168),DSBSMBA+8
         LA    R6,EPA
         ST    R6,QMPA+32
         MVI   QMPA+32,X'01'
         MVI   QMPA+8,X'03'
         LA    R1,QMPA
         L     R15,RWR
         BALR  R14,R15
         MVI   DSPF,X'00'
         B     RDNEXT
*     DCB EXIT ROUTINE
EXITR    CLC   DSBDCB+62(2),ZERO
         BZ    EXITR2        NO BLOCKSIZE - DO SOMETHING
         TM    LOGOUT,X'80'  IS THIS THE LOG DATASET ?           *AMS*
         BZR   R14           NO; RETURN OK                       *AMS*
         LH    R0,DSBDCB+62  LOAD THE SPECIFIED BLOCKSIZE        *AMS*
         AH    R0,=H'800'    ADD A FINAGLE FACTOR                *AMS*
         STH   R0,DSBDCB+62  PREVENT 001/002 DUE TO OS ERROR     *AMS*
         BR    R14                                               *AMS*
EXITR2   CLC   DSBDCB+24(2),ZERO                                 *AMS*
         BNER  R14
         LA    R8,18
         STH   R8,DSBDCB+62
         STH   R8,DSBDCB+82
         MVI   NOTO,X'01'
         BR    R14
         SPACE 1
MOVREC   MVC   0(1,R14),0(R6)  REMOTE DATA MOVE
*     SET END OF DATA SET CODE - DCB EOD ROUTINE
EDS      MVI   0(R5),X'01'
         MVI   EODF,X'01'
         MVI   FEJ,1         FORCE PAGE EJECT ON NEXT PRINT
         B     OUT
*        END OF DATA- QUEUE SYSOUT ON CLASS A IF DATASET FLAGGED FOR
*              PRINTING,OTHERWISE REQUEUE SYSOUT ON DISPLAY QUEUE
ENDDATA  MVI   SMBF,X'00'
         CLI   0(R5),X'04'
         MVI   0(R5),X'02'
         BNE   OUT
         XC    DEQF(8),DEQF
         XC    QMPA+32(4),QMPA+32
         L     R15,QDELTE    PROV. SET FOR Q DELETE
         CLI   SYSPF,X'01'
         BNE   SYSQ          NO; SET FOR Q DELETE FUNCTION
         L     R15,ENQR
         LA    R6,21         'S' IS THE AMS GARBAGE CLASS
         STC   R6,QMPA+15
         CLC   QMPA+15(1),0(R3)    IS THIS THE QUEUE THE JOB CAME FROM
         BNE   SYSQ          NO; REQUEUE
         MVI   QMPA+15,24    REQUEUE ON 'V' ?
SYSQ     XC    QMPA+18(2),QMPA+18
         LA    R1,QMPA
         BALR  R14,R15
         MVI   0(R5),X'02'
         MVI   SYSPF,X'00'
*     RESTORE CALLER PROTECT KEY
         SPACE 1
OUT      L     R13,4(,R13)
         LM    R14,R12,12(R13)
         BR    R14           RETURN
         EJECT ,
*
*                            DATA
*
         DS    0F
SAVE     DC    18F'0'                                            *AMS*
SMBNEXT  DC    F'0'
LNCNT    DC    H'0'
LINECT   DC    H'0'
QMPA     DC    9F'0'
EPA      DC    3F'0'
ECB      DC    2F'0'
DSBSMBA  DC    44F'0'
ZERO     DC    F'0'
DEQR     DC    V(IEFQMDQ2)
UNCR     DC    V(IEFQMUNC)
RWR      DC    V(IEFQMRAW)
ENQR     DC    V(IEFQMNQ2)
QDELTE   DC    V(IEFQDELE)   Q DELETE FUNCTION
NEXTAD   DC    F'0'
JFCB     DC    44F'0'
EXTLST   DC    X'05'
         DC    AL3(EXITR)
         DC    X'87'
         DC    AL3(JFCB)
DSBDCB   DCB   DSORG=PS,MACRF=(GL),EXLST=EXTLST,EODAD=EDS,BUFNO=2
TIOTS    DC    F'0'
DCBS     DC    F'0'
LABEL    CAMLST SCRATCH,JFCB,,VOLIST,,OVRD
VOLIST   DC    16F'0'
UCBTLIST DC    5F'0'
DEQF     DC    X'00'
SMBF     DC    X'00'
EODF     DC    X'00'
RRF      DC    X'00'
ENDF     DC    X'00'
NOTO     DC    X'00'
FTF      DC    X'00'
NOJF     DC    X'00'
SYSPF    DC    X'00'
DSPF     DC    X'00'
LOGOUT   DC    X'00'
FEJ      DC    X'1'          NON ZERO TO FORCE PAGE EJECT
CCCODE   DC    X'0'          CARRIAGE CONTROL TYPE; 0=NONE
CCASA    EQU   X'04'         ASA CONTROL FROM RECFM
CCMC     EQU   X'02'         MACHINE CODE FROM RECFM
CODEM    DC    X'0911011989E1C9'  A.M.S. SUPPORTED CONTROL CODES
CODESAV  DC    X'E1'         MC DATASET START - CHANN 12 SKIP
CODEA    DC    C' 0+-1CC '   EQUIVALENT ASA CODES
DSCB     CAMLST  SEARCH,JFCB,JFCB+118,WORKA
DOUBLEB  DC    C'        '
WORKA    DS    0D
         DC    XL8'0'
NTIOT    DC    47D'0'        ROOM FOR 140 CAMLST/ 184 TIOT BYTES
         SPACE 2
         LTORG
         SPACE 2
         REGEQU ,                                                *AMS*
         SPACE 2
CVT      DSECT ,
         CVT   DSECT=YES
         SPACE 2
         END
