SUBFETCH TITLE 'S U B F E T C H  ***  LOAD MODULE INTO STORAGE'
         MACRO ,
&NM      KANT  &OP
         GBLA  &ZZKTCOD(4)
         LCLA  &I
         AIF   ('&OP' EQ '0').RESET
&I       SETA  1
         AIF   ('&OP' EQ '4').SET
&I       SETA  1
         AIF   ('&OP' EQ '8').SET
&I       SETA  1
         AIF   ('&OP' EQ '12').SET
&I       SETA  1
         AIF   ('&OP' EQ '16').SET
         MNOTE 8,'KANT: UNRECOGNIZED POSITIONAL: &OP'
.SET     ANOP  ,
&ZZKTCOD(&I) SETA  &ZZKTCOD(&I)+1
&NM      LA    R0,&ZZKTCOD(&I)   SET ERROR REASON CODE
         MEXIT ,
.RESET   ANOP  ,
&NM      SR    R0,R0         RESET REASON CODE
         MEND  ,
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
***********************************************************************
**                                                                   **
**  SUBFETCH RETRIEVES A LOAD MODULE FROM AN OPEN DCB, AND LOADS IT  **
**    INTO STORAGE.                                                  **
**                                                                   **
**  1) USEFUL FOR COMPARING TWO LOAD MODULES BY GIVING THEM BOTH THE **
**     SAME RELOCATION FACTOR                                        **
**                                                                   **
**  2) AVOIDS 306-C ABENDS LOADING AN UNAUTHORIZED MODULE            **
**                                                                   **
**  3) ALLOWS RE-USE OF EXISTING STORAGE AREA                        **
**                                                                   **
***********************************************************************
**                                                                   **
**  PARAMETER LIST:                                                  **
**                                                                   **
**  1) CALLER PREPARES BPAM DCB, AND OPENS IT. DCB FIELDS WILL BE    **
**     ALTERED BY I/O, BUT WILL LEAVE IT USABLE.                     **
**     "SPECIAL" @DCB FIELD OF X'80000000' REQUESTS STEPLIB (TCBJLB) **
**                                                                   **
**  2) POINTER TO THE NAME. WHEN THE HIGH BIT IS ON, POINTS TO       **
**     COMPLETE BLDL RETURN. SCTR LOAD IS NOT HANDLED.               **
**     BLDL DATA ARE NOT VERIFIED; E.G. THE SIZE MAY BE INCREASED    **
**     TO PROVIDE A PATCH AREA.                                      **
**                                                                   **
**  3) POINTER TO THE LOAD ADDRESS, OR 0. FOR A 0 ADDRESS, SUBFETCH  **
**     WILL OBTAIN THE INTEGRAL NUMBER OF PAGES TO HOLD THE MODULE.  **
**     SIZE IS PASSED, AND RETURNED IF LARGER. REGARDLESS OF SIZE,   **
**     STORAGE IS FREED IF A DIFFERENT SUBPOOL IS REQUIRED.          **
**                                                                   **
**  4) RELOCATION ADDRESS OR 0. FOR A 0 VALUE, USES THE LOAD ADDRESS **
**                                                                   **
**  5) MODULE ENTRY POINT, WITH AMODE BIT, RETURNED IN @ENTRY        **
**                                                                   **
***********************************************************************
**                                                                   **
**  ERROR RETURNS:                                                   **
**                                                                   **
**  16 - ERROR PROCESSING PARAMETER LIST, OR OTHER SEVERE PROBLEM    **
**  12 - @DCB ADDRESS INVALID, OR NOT ON DEB CHAIN                   **
**   8 - MODULE NOT FOUND                                            **
**   8 - I/O OR LOGIC ERROR LOADING MODULE                           **
**   8 - STORAGE OBTAIN FAILED                                       **
**   8 - STORAGE NOT LARGE ENOUGH                                    **
**   4 - 3-BYTE ADDRESS RELOCATION FOR ADCON ABOVE THE LINE          **
**                                                                   **
***********************************************************************
**  MAINTENANCE:                                                     **
**                                                                   **
**  2005-08-30  GYP  ALLOW X'80000000' AS A RELOCATION ADDRESS TO    **
**                   PRODUCE 0 RELOCATION                            **
**                                                                   **
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
SUBFETCH PGMHEAD ZERO31,BASE=R12,PARM=R1,AM=ANY,RM=24,LOC=BELOW
         SPACE 1
         KANT  16            SET SUBCODE
         LA    R5,0(,R1)     DID USER PASS A PARM AREA ?
         LTR   R5,R5
         BZ    ERROR16       NO; FATAL BOO-BOO
         USING PARMSECT,R5
         SPACE 1
         KANT  12            SET SUBCODE
         ICM   R8,15,@DCB    TEST DCB ADDRESS
         BZ    ERROR12       NO; FATAL BOO-BOO
         N     R8,=X'7FFFFFFF'  WAS IT HIGH BIT ONLY ?
         BNZ   HAVEDCB       NO; USE IT
         L     R1,PSATOLD-PSA  GET THE TCB
         ICM   R8,15,TCBJLB-TCB(R1)  GET THE LIBRARY
         BNZ   STEPDCB       BYPASS CHECKS (?)
         B     ERROR12       ELSE CAN'T USE
         USING IHADCB,R8     DECLARE DCB AREA
HAVEDCB  KANT  12            SET SUBCODE
         TM    DCBOFLGS,DCBOFOPN  IS IT OPEN ?
         BZ    ERROR12       NO; FAIL
         DEBCHK (R8),AM=BPAM,TYPE=VERIFY  CHECK DEB/DCB ADDRESS
         KANT  12            SET SUBCODE
         LTR   R15,R15       VALID DCB/DEB ?
         BNZ   SERVER12      DCB VALIDATION FAILED
         SPACE 1
***********************************************************************
**                                                                   **
**  DCB VERIFIED. NOW GET DIRECTORY DATA FOR MEMBER NAME             **
**                                                                   **
***********************************************************************
         SPACE 1
STEPDCB  TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                GP11270
         BXH   R15,R15,NOTAUTH     NO                           GP11270
         OI    LOCFLAGS,FLAUTH    SHOW WE ARE AUTHORIZED        GP11270
         CLI   OFLGSP,128    PRIVILEGED SUBPOOL IN USE ?        GP11270
         BNL   MUSTAUTH        YES                              GP11270
         TM    OFLGS1,OFREFR+OFFREN  PROTECTED STORAGE ?        GP11270
         BZ    NOTAUTH         NO; RUN NORMALLY                 GP11270
MUSTAUTH OI    LOCFLAGS,FLZERO    SHOW WE NEED RESET            GP11270
         MODESET KEY=ZERO    GET PRIVILEGED                     GP11270
         B     POSTAUTH        AND CONTINUE                     GP11270
         SPACE 1
NOTAUTH  ZI    OFLGS1,OFREFR+OFFREN OFF REENTRANT LOAD REQUEST  GP11270
         SPACE 1
POSTAUTH L     R7,@NAME      GET NAME POINTER
         L     R1,=X'7FFFFFFF'  MAKE MASK
         NR    R1,R7
         KANT  12
         BZ    ERROR12       ERROR WHEN NO NAME ADDRESS PASSED
         LTR   R7,R7         DID USER PASS BLDL RESULT ?
         BM    HAVEBLDL      YES; CHECK STORAGE
         MVC   MYBLDL(4),=Y(1,LENPDS2)
         MVC   MYBLDL+4(8),0(R7)  COPY USER'S NAME
         BLDL  (R8),MYBLDL   LOOK FOR IT
         KANT  8
         LTR   R15,R15
         BNZ   SERVER8       RETURN BLDL REASON CODE
         LA    R7,MYBLDL+4   POINT TO MY BLDL AREA INSTEAD OF CALLER'S
         SPACE 1
***********************************************************************
**                                                                   **
**  PROCESS BASIC MODULE INFORMATION (TYPE, ATTRIBUTES, AC)          **
**                                                                   **
***********************************************************************
         SPACE 1
         USING PDS2,R7       DECLARE THE DIRECTORY ENTRY
HAVEBLDL KANT  8
         LA    R9,ERROR8     SET FAST EXIT
         TM    PDS2INDC,PDS2NTTR  ANY TTR(S) ?
         BZR   R9            NO; NOT LOAD MODULE
         KANT  8
         TM    PDS2ATR1,PDS2OVLY+PDS2SCTR  SUPPORTED ?
         BNZR  R9            NO; REJECT
         KANT  8
         TM    PDS2FTB1,PDS2BIG+PDS2PGMO  NEW-FANGLED STUFF ?
         BNZR  R9            YES; REJECT (FOR NOW)
         TM    PDS2FTB3,PDS2NMIG  NOT SURE ABOUT THIS
         BNZR  R9
         IC    R14,PDS2INDC  GET FLAG/LENGTH
         N     R14,=A(PDS2LUSR) GET LENGTH ONLY
         STC   R14,PDDUDLEN  SET USER LENGTH IN HALF-WORDS
         CLI   PDDUDLEN,11   MINIMUM LKED LENGTH ?
         BLR   R9            NO
         CLI   PDDUDLEN,23   LONGER THAN MAX ?
         BHR   R9            YES
*---------------------------------------------------------------------*
*   IF WE ARE AUTHORIZED, AND THE USER REQUESTED THE OFREFR BIT,      *
*   AND THE MODULE IS FLAGGED EITHER RENT (OLD ERROR) OR REFR,        *
*   THEN WE WILL LOAD IT INTO PROTECTED SUBPOOL 252                   *
*---------------------------------------------------------------------*
         TM    OFLGS1,OFREFR+OFFREN    WANT RE-ENTRANT LOAD ?   GP11270
         BZ    SKIPRENT             NO                          GP11270
         TM    LOCFLAGS,FLAUTH+FLZERO  ABLE TO LOAD RENT?       GP11270
         BNO   SKIPRENT             NO; IGNORE                  GP11270
         TM    OFLGS1,OFFREN      FORCED RE-ENTRANCY?           GP11270
         BNZ   PAYRENT              YES                         GP11270
         TM    PDS2ATR1,PDS2RENT  OLD STYLE RENT ?              GP11270
         BNZ   PAYRENT              YES; LOAD PROTECTED         GP11270
         TM    PDS2ATR2,PDS2REFR  NEW STYLE REFRESHABLE ?       GP11270
         BZ    SKIPRENT             NO; NOTHING SPECIAL         GP11270
PAYRENT  MVI   NEWSPOOL,252       LOAD INTO SUBPOOL 252         GP11270
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  PLAY GAMES WITH THE BLDL ENTRY - ENSURE THAT THE LENGTH MATCHES    *
*  ALL SPECIFIED FLAG BITS. ONE ERROR CROPS UP WITH WIDOWED ALIAS     *
*  ENTRIES, WHERE THE ORIGINAL MAIN MEMBER NAME SECTION IS PRESENT,   *
*  BUT NO LONGER FLAGGED (ALIAS BIT TURNED OFF).                      *
*                                                                     *
*---------------------------------------------------------------------*
SKIPRENT MVC   DB(1),PDS2FTB1   COPY VS LKED FLAG
         NI    DB,PDSAOSLE   LEAVE ONLY THE VS BIT
         MVC   DB+1(1),PDDUDLEN  SET FLAG FOR TR
         LA    R14,PDELKTAB-11  TENTATIVELY SET OS LIST
         TM    PDS2FTB1,PDSAOSLE+PDSAPFLG  VS + APF ?
         BNO   PDESLKED      NO; USE OS PROCESSING
         BCTR  R14,0         FOR VS + APF, SLIDE TABLE OVER
         OI    DB,PDSAPFLG   TURN THE APF FLAG ON
PDESLKED TR    DB+1(1),0(R14)  CONVERT LENGTH TO FLAGS
         OC    DB+1(1),DB    OR THE VS AND APF BITS IN
         CLI   DB+1,X'FF'    INVALID ENTRY ?
         BER   R9            YES
         MVI   DB+5,PDS2SSI+PDSAPFLG+PDS2SCTR  MAKE MASK FOR VS
         TM    PDS2FTB1,PDSAOSLE  VS LKED ?
         BNZ   *+8           YES
         MVI   DB+5,PDS2SCTR   LEAVE ONLY TESTABLE BIT
         MVC   DB+3(1),PDS2ATR  GET THE PRIMARY ATTRIBUTE BYTE
         NI    DB+3,PDS2SCTR  ISOLATE IT
         MVC   DB+4(1),PDS2FTB1  GET OPTION BYTE
         OC    DB+4(1),DB+3  ADD ATTRIBUTE BIT
         NC    DB+4(1),DB+5  MASK WITH OS OR VS MASK
         NC    DB+5(1),DB+1  MASK RETURN VALUE
         CLC   DB+4(1),DB+5  DO FLAGGED OPTIONS MATCH ?
         BNER  R9            NO; RETURN NOT LKED
         MVC   PDDFLAGS,DB+1  SET FLAGS FOR OPTIONAL ENTRIES
         IC    R0,PDS2FTB2   LOAD RMODE
         N     R0,=A(PDSLRMOD) RESIDENCE MODE ?
         SRL   R0,3          FINAGLE INTO 02 FOR 31
         STC   R0,MYAMRM+1   SET RESIDENCE MODE
         IC    R0,PDS2FTB2   GET BOTH MODES
         TM    PDS2INDC,PDS2ALIS  ALIAS ENTRY ?
         BZ    PDESLKMC      NO
         SRL   R0,2          PDSMAMOD
PDESLKMC N     R0,=A(PDSMAMOD)  00-24 10-31 11-ANY 01-?? (64?)
         STC   R0,MYAMRM     ADDRESSING MODE
         TM    PDDFLAGS,PDS2SSI+PDSAPFLG+PDDFREAL SSI/APF/MAIN ?
         BZ    PDEEXIT       NO
         LA    R0,1          MAKE CONSTANT
         LA    R4,PDSS01     POINT TO VARIABLE TEXT FIELD
         TM    PDDFLAGS,PDS2SCTR  SCATTER DATA PRESENT ?
         BZ    *+8           NO
         LA    R4,PDSS01LN(,R4)  SKIP OVER THEM
         TM    PDDFLAGS,PDDFREAL   MAIN MEMBER ENTRY NAME ?
         BZ    PDEMLKED      NO
         LA    R4,PDSS02LN(,R4) SKIP OVER IT
PDEMLKED TM    PDDFLAGS,PDS2SSI  SSI DATA PRESENT ?
         BZ    PDEILKED      NO; SKIP OVER
         AR    R4,R0
         OR    R4,R0
         SLR   R4,R0         ROUND TO HALF-WORD BOUNDARY
         LA    R4,PDSS03LN(,R4)  SKIP SSI
PDEILKED TM    PDDFLAGS,PDDFAPF  APF DATA PRESENT ?
         BZ    PDEEXIT       NO
         MVN   MYAC,1(R4)    COPY APF CODE
         B     PDEEXIT       AND SKIP OVER TABLES
         SPACE 2
*        LOAD-MODULE ATTRIBUTES BY LENGTH             NO AC     AC
         DC    AL1(255)                                         11
PDELKTAB DC    AL1(0,255,PDS2SSI,255)                 11-14     12-15
         DC    AL1(PDS2SCTR,PDDFREAL)                 15-16     16-17
         DC    AL1(PDS2SSI+PDS2SCTR,PDS2SSI+PDDFREAL) 17-18     18-19
         DC    AL1(255,PDS2SCTR+PDDFREAL,255)         19-21     20-22
         DC    AL1(PDS2SSI+PDS2SCTR+PDDFREAL,255)     22-23     23-24
         SPACE 1
PDEEXIT  MVC   #MODSZ+1(3),PDS2STOR  GET MODULE SIZE
         MVI   #MODSZ,0
         MVC   MYATTR,PDS2ATR   SAVE MODULE ATTRIBUTES
         XC    MODLEN,MODLEN
         MVC   MODLEN+1(3),PDS2STOR    COPY MODULE SIZE
         MVC   POINTTTR(L'PDS2TTRP+L'PDS2CNCT),PDS2TTRP
         SPACE 1
***********************************************************************
**                                                                   **
**  HAVE A BLDL ENTRY. CHECK AND OBTAIN STORAGE AS NECESSARY         **
**                                                                   **
***********************************************************************
         SPACE 1
         L     R1,@LOAD      GET OLD STORAGE ADDRESS
         L     R3,#MODSZ     LOAD REQUIRED STORAGE SIZE
         CLC   NEWSPOOL,OFLGSP    DIFFERENT SUBPOOLS ?          GP11270
         BNE   FREELOAD      YES; MUST FREE OLD                 GP11270
         TM    MYAMRM+1,PDSMAMOD  RMODE 24?
         BNZ   FREELOAD      NO; CHECK SIZE
         TM    @LOAD,X'7F'   OLD ABOVE THE LINE ?
         BNZ   FREESTG       YES; MUST FREE REGARDLESS OF SIZE
FREELOAD C     R3,#LOAD      COMPARE TO USER'S PASSED SIZE
         BNH   HAVESTOR      ENOUGH; USE IT
FREESTG  ICM   R0,15,#LOAD   WAS THERE ANY ?
         BZ    GETSTOR       NO; JUST GET MORE
         SR    R2,R2         JUST IN CASE                       GP11270
         IC    R2,OFLGSP     GET OLD SUBPOOL                    GP11270
         STORAGE RELEASE,LENGTH=(0),ADDR=(1),SP=(R2),COND=YES   GP11270
GETSTOR  AL    R3,=X'00000FFF'
         N     R3,=X'00FFF000'  ROUND TO PAGE SIZE
         ST    R3,#LOAD      RETURN NEW SIZE
         SR    R2,R2         JUST IN CASE                       GP11270
         IC    R2,NEWSPOOL   GET NEW SUBPOOL                    GP11270
         STC   R2,OFLGSP       AND SAVE FOR RELEASE             GP11270
         TM    MYAMRM+1,PDSMAMOD  TEST RMODE
         BM    GETSTA31
         BO    GETSTANY
GETSTA24 STORAGE OBTAIN,LENGTH=(R3),SP=(R2),COND=YES,LOC=BELOW  GP11270
         B     GETSTCOM
GETSTA31 STORAGE OBTAIN,LENGTH=(R3),SP=(R2),COND=YES,LOC=ANY    GP11270
         B     GETSTCOM
GETSTANY STORAGE OBTAIN,LENGTH=(R3),SP=(R2),COND=YES,LOC=RES    GP11270
GETSTCOM KANT  8
         LTR   R15,R15
         BNZ   SERVER8       OOPS
         ST    R1,@LOAD      RETURN ADDRESS TO USER
HAVESTOR TM    OFLGS1,OFCLR0+OFCLRC  CLEAR STORAGE ?            GP05261
         BZ    DONECLIR      NO                                 GP05261
         SR    R15,R15       CLEAR SOURCE LENGTH AND FILL       GP05261
         LR    R0,R1         COPY START ADDRESS                 GP05261
         LR    R1,R3         COPY LENGTH                        GP05261
         TM    OFLGS1,OFCLRC  NON-ZERO FILL ?                   GP05261
         BZ    STORCLIR      NO; ZERO FILL                      GP05261
         ICM   R15,8,=X'CC'  SET CRUTTY FILL BYTE               GP05261
STORCLIR MVCL  R0,R14        CLEAR MODULE STORAGE               GP05261
         SPACE 1
DONECLIR ICM   R2,15,@RELOC  ANY RELOCATION ADDRESS ?
         BNZ   HAVERELC      YES; RETAIN IT
         L     R2,@LOAD      ELSE USE LOAD ADDRESS
         ST    R2,@RELOC     AND RETURN TO USER                 GP05242
HAVERELC ST    R2,#RELOC     SAVE USER'S RELOCATION FACTOR      GP05242
         NI    #RELOC,X'7F'  KILL SIGN BIT                      GP05242
         MVC   DB+1(3),PDS2EPA  SAVE ENTRY OFFSET
         MVI   DB,0
         L     R1,DB         GET ENTRY OFFSET
         AL    R1,@LOAD      PLUS LOAD ADDRESS
         ST    R1,@ENTRY     RETURN ENTRY ADDRESS (LATER SET AM BIT)
         TM    MYAMRM,PDSMAMOD  AM 24 ?
         BZ    HAVEAMOD      YES
         BO    HAVEAANY      ANY
         B     HAVEAM31
HAVEAANY L     R1,SAVE13-SAVE(,R13)    GET CALLER'S SAVE AREA
         TM    SAVE14-SAVE(R1),X'80'   CALLER IN AMODE 31 ?
         BZ    HAVEAMOD
HAVEAM31 OI    @ENTRY,X'80'  FLAG AMODE 31
HAVEAMOD FIND  (R8),POINTTTR,C  POSITION TO THE MEMBER
         KANT  8
         LTR   R15,R15       DID IT WORK?
         BNZ   SERVER8       NO. OR GET ERROR ON NEXT I/O
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  PREPARE FOR ESD TABLE - RIGHT NOW FIXED (256 ENTRY) SIZE           *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R14,CESDINFO-16  (NO ESDID=0 ?)
         ST    R14,CESDBASE  SAVE BASE ADDRESS
         ST    R14,CESDNEXT  (DO I REALLY NEED THIS?)
         A     R14,=A(CESDINFN-CESDINFO)  PLUS SIZE
         ST    R14,CESDMAX   SAVE END ADDRESS
         SPACE 1
***********************************************************************
**                                                                   **
**  READLOOP - READ CONTROL RECORDS. PROCESS RLD. READ TEXT.         **
**                                                                   **
***********************************************************************
         SPACE 1
READLOOP LA    R1,CNTRLBUF   GET ADDRESS OF CONTROL DATA
         LA    R0,256        SET MAXIMUM READ LENGTH
         BAS   R14,BUFREAD   READ THE NEXT RECORD
         BNP   2             ERROR
         CLI   CNTRLBUF,X'20'   CESD RECORD ?
         BE    CESDRECD      YES
         TM    CNTRLBUF,X'F0'   SPECIAL (SYM, IDR, SCTR) ?
         BNZ   READLOOP      YES; SKIP IT
         TM    CNTRLBUF,X'02'   RLD INFO IN THIS RECORD ?
         BZ    ENDCNTRL      NO; TEST FOR TEXT OR END
*---------------------------------------------------------------------*
*                                                                     *
*  PROCESS RLD DATA                                                   *
*                                                                     *
*  1) DOES NOT CHECK 3-BYTE ADDRESS CONSTANTS ABOVE THE LINE          *
*                                                                     *
*  2) DOES NOT CHECK MULTIPLE RELOCATION OF SAME STORAGE LOCATION     *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  AS I FOUND OUT THE HARD WAY, MODULES NOT IN OVERLAY, NOT SCATTER   *
*  LOADED, AND NOT HIERARCHY LOADED ONLY HAVE A SINGLE RELOCATION,    *
*  AND MULTIPLE SD OFFSETS JUST LEAD TO ERRORS.                       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         LH    R1,CNTRLBUF+6     LOAD LENGTH OF RLD INFO
         LTR   R1,R1         TEST FOR NO RLD INFO
         BNP   ENDCNTRL      IF NONE, QUIT
         LA    R2,CNTRLBUF+16   POINT TO FIRST RLD ENTRY
LOOPRLID TM    MYRLDFLG,1    RE-USE PRIOR ESD IDS?
         BNZ   LOOPRLDS      YES
         MVC   MYESDIDS(4),0(R2)  MOVE RELOC/BASE ESDIDS
         LH    R14,MYESDIDS  GET RELOCATION ID
         SLL   R14,4         *16 FOR ENTRY LENGTH
         A     R14,CESDBASE  POINT TO CESD ENTRY
         SR    R0,R0
         ICM   R0,7,9(R14)   GET OFFSET
         A     R0,#RELOC     ADD RELOCATION BASE                GP05242
         ST    R0,RELOCRLD   SAVE IT
         LH    R14,MYESDIDS+2  GET BASE ID
         SLL   R14,4         *16 FOR ENTRY LENGTH
         A     R14,CESDBASE  POINT TO CESD ENTRY
         SR    R0,R0
         ICM   R0,7,9(R14)   GET OFFSET
         A     R0,@LOAD      ADD LOAD ADDRESS
         ST    R0,BASERLD    SAVE IT
         SH    R1,=H'4'      ADJUST RESIDUAL LENGTH
         LA    R2,4(,R2)     BUMP POINTER
         BNP   ENDCNTRL      END OF BUFFER
LOOPRLDS MVC   MYRLDFLG,0(R2)  SAVE FLAG BITS
*---------------------------------------------------------------------*
*                                                                     *
*   FOR AL3 AND AL4 VALUES, USE @LOAD AND @RELOC FOR PROCESSING       *
*                                                                     *
*   FOR V (ONLY VL4) USE @LOAD AND CESDBASE                           *
*                                                                     *
*---------------------------------------------------------------------*
         TM    0(R2),X'A0'   UNRESOLVED OR PSEUDO ?
         BNZ   LOOPRLDX      YES; IGNORE IT
         TM    0(R2),X'08'   TEST FOR 3 OR 4 BYTE ADCON
         BNO   LOOPRLDX      IF NOT, BYPASS RELOCATE
         SR    R14,R14
         ICM   R14,7,1(R2)   GET BASE ADDRESS
         AL    R14,@LOAD     ADDRESS OF VALUE TO BE RELOCATED
         SR    R0,R0
         LA    R15,15        MAKE MASK FOR FULL-WORD LOAD
         TM    0(R2),X'10'   V-CONSTANT ?
         BZ    LOADBASD      YES; IGNORE CURRENT CONTENTS
         SPACE 1
         TM    0(R2),X'02'   SUBTRACT REQUEST ?
         BZ    LOOPVCNA      NO; ADD
         SL    R0,RELOCRLD   SUBTRACT
         B     LOOPRLDC
LOOPVCNA AL    R0,RELOCRLD   ADD
         B     LOOPRLDC      STORE V CONSTANT
         SPACE 1
LOADBASD TM    0(R2),X'04'   IS IT FULL-WORD ?
         BNZ   LOADADC4      YES; OK
         LA    R15,7         SET MASK FOR THREE-BYTE ITEM
         TM    #RELOC,X'7F'  ABOVE THE LINE ?                   GP05242
         BZ    LOADADC4      NO
         OI    RETCODE+L'RETCODE-1,4  SET PROBABLE ERROR
LOADADC4 EX    R15,EXICMOFF  LOAD THE VALUE
         TM    0(R2),X'02'   SUBTRACT REQUEST ?
         BZ    LOOPRLDA      NO; ADD
         SL    R0,#RELOC     SUBTRACT                           GP05242
         B     LOOPRLDC
LOOPRLDA AL    R0,#RELOC     ADD                                GP05242
         SPACE 1
LOOPRLDC EX    R15,EXSTCOFF   STORE RELOCATED ADDRESS
LOOPRLDX LA    R2,4(,R2)     POINT TO NEXT ITEM
         SH    R1,=H'4'      GET REMAINING LENGTH
         BNP   ENDCNTRL      YES; QUIT
         TM    MYRLDFLG,X'01'   IS IT A SHORT ENTRY ?
         BNZ   LOOPRLDS      YES; USE SAME VALUES AS BEFORE
         B     LOOPRLID      ELSE RESOLVE NEW IDS
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  COPY THE ESD DATA TO MY STORAGE, WITH MINIMAL CHECKING             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
CESDRECD LH    R1,CNTRLBUF+6  GET DATA LENGTH
         LH    R14,CNTRLBUF+4  FIRST ESDID IN THIS BUFFER
         SLL   R14,4         *16 ENTRY SIZE
         A     R14,CESDBASE  ENTRY ADDRESS
         LA    R0,CNTRLBUF+8  WHERE TO GET IT FROM
         LR    R15,R1        SAME LENGTH
         LA    R2,0(R15,R14) NEW END ADDRESS
         C     R2,CESDMAX    WILL IT FIT ?
         BNH   CESDMVCL      YES; STASH IT
         KANT  12
         B     ERROR12       MODULE TOO LARGE FOR MY ASSUMPTIONS
CESDMVCL MVCL  R14,R0        MOVE THE DATA
         ST    R14,CESDNEXT  UPDATE NEXT AVAILABLE ADDRESS
         B     ENDCNTRL      READ ANOTHER
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  WHEN CONTROL RECORD IS FOLLOWED BY A TEXT RECORD, READ IT INTO     *
*    THE APPROPRIATE STORAGE LOCATION (FROM 'CCW' IN RECORD)          *
*                                                                     *
*---------------------------------------------------------------------*
ENDCNTRL TM    CNTRLBUF,X'01'   IS THERE A TEXT RECORD ?
         BZ    TESTLAST      NO; SEE IF LAST CONTROL RECORD
         SR    R1,R1
         ICM   R1,7,CNTRLBUF+9  GET TEXT RECORD DISPLACEMENT
         AL    R1,@LOAD      ADD LOAD ADDRESS
         SR    R0,R0
         ICM   R0,3,CNTRLBUF+14  GET LENGTH OF TEXT RECORD
         BAS   R14,BUFREAD   READ THE TEXT RECORD
         BNP   6             OOPS
TESTLAST TM    CNTRLBUF,X'08'   FINAL RECORD ?
         BZ    READLOOP      NO; READ CONTROL RECORD
         TM    OFLGS1,OFBCDE  BUILT A CDE ?                     GP02348
         BZ    SOSOEXIT      NO; JUST RETURN                    GP02348
         LA    R1,PARMSECT   POINT TO CALLER'S PARM LIST        GP02348
         LINK  EP=SUBCDE     BUILD A CDE AND LOAD THE MODULE    GP02348
         B     SOSOEXIT
         SPACE 1
EXICMOFF ICM   R0,0,0(R14)   INSERT OFFSET
EXSTCOFF STCM  R0,0,0(R14)   STASH RELOCATED DATA
         SPACE 2
ERROR16  LA    R9,16         SET SEVERE ERROR
         B     COMMEXIT      RETURN
         SPACE 1
*   SERVER 12 COMBINES A FUNCTION RETURN CODE WITH THE REASON CODE
SERVER12 SLL   R15,16
         OR    R0,R15
ERROR12  LA    R9,12         SET SEVERE ERROR
         B     COMMEXIT      RETURN
         SPACE 1
*   SERVER 8 COMBINES A FUNCTION RETURN CODE WITH THE REASON CODE
SERVER8  SLL   R15,16
         OR    R0,R15
         SPACE 1
ERROR8   LA    R9,8          SET MAJOR ERROR
         B     COMMEXIT      RETURN
         SPACE 1
ERROR4   LA    R9,4          SET MINOR ERROR
         B     COMMEXIT      RETURN
         SPACE 1
SOSOEXIT L     R9,RETCODE    WORKED ?  RETURN 0 OR 4
         SR    R0,R0         NO REASON CODE
COMMEXIT LR    R2,R0         <FIX MACRO TO ACCEPT R0?>
         TM    LOCFLAGS,FLZERO    FIX MODESET ?                 GP11270
         BZ    PGMEXITZ             NO                          GP11270
         MODESET KEY=NZERO                                      GP11270
PGMEXITZ PGMEXIT RC=(R9),RC0=(R2)  RETURN CODE AND REASON CODE
         SPACE 1
***********************************************************************
**                                                                   **
**  BUFREAD - ROUTINE TO READ A BLOCK OF CONTROL INFORMATION OR A    **
**    TEXT RECORD.                                                   **
**                                                                   **
**  R0 - LENGTH; R1 - ADDRESS; R8 - DCB                              **
**                                                                   **
***********************************************************************
BUFREAD  STM   R0,R15,SUBSAVE  JUST IN CASE
         LR    R2,R1         STASH ADDRESS
         READ  MYDECB,SF,(R8),(R2),(R0),MF=E   READ A BIT
         CHECK MYDECB
         LM    R0,R14,SUBSAVE  PASS R15 TO CALLER
         LTR   R15,R15       AND SET CONDITION CODE
         BR    R14           RETURN TO CALLER
         SPACE 1
         ESPPDS PDSBLDL=YES,DSECT=YES
LENPDS2  EQU   *-PDS2        LENGTH FOR MY COPY
         PRINT &PRTMAC
         SPACE 1
PARMSECT FETWORK PFX=        MAP CALLER'S PARM LIST
         SPACE 2
SAVE     DSECT ,             SAVE & WORK AREA
SUBSAVE  DS    16A           SUBROUTINE SAVE AREA
DB       DS    D
RETCODE  DS    F             RETURN CODE
MODLEN   DS    F             MODULE LENGTH
POINTTTR DS    F             TTRZ OF FIRST CONTROL RECORD
MYATTR   DS    XL2,XL2       EXTRACTED ATTRIBUTES
MYAMRM   DS    2X            AMODE, RMODE
MYAC     DS    X             EXTRACTED AC
MYRLDFLG DS    X             CURRENT RLD FLAG ENTRY
MYESDIDS DS    2XL2          RELOC/BASE ESDID
BASERLD  DS    A             RESOLVED BASE VALUE
RELOCRLD DS    A             RESOLVED RELOCATION VALUE
#RELOC   DS    A             RELOCATION ADDRESS LESS SIGN BIT   GP05242
NEWSPOOL DS    X             SUBPOOL FOR NEW REQUEST            GP11270
LOCFLAGS DS    X             PROCESSING FLAGS                   GP11270
FLAUTH   EQU   X'80'           WE ARE AUTHORIZED                GP11270
FLRENT   EQU   X'40'           LOAD CURRENT RENT/REFR SP 252    GP11270
FLZERO   EQU   X'01'           MODE SET TO KEY ZERO             GP11270
MYBLDL   DS    Y(1,74),XL(LENPDS2)'0'  BLDL
         SPACE 1
         SERVPDS DSECT=NO,PFX=PDD  EXPAND LOCAL D.E. VARIABLES
         SPACE 1
         READ  MYDECB,SF,@DCB-@DCB,CNTRLBUF,256,MF=L
         SPACE 1
CESDBASE DS    A             ADDRESS OF FIRST CESD DATUM
CESDNEXT DS    A             NEXT AVAILABLE ENTRY
CESDMAX  DS    A             END OF CESD AREA
         SPACE 1
         DS    0F
CNTRLBUF DS    CL256         CONTROL RECORD BUFFER
CESDINFO DS    256XL16       NAME/FLAG/OFFSET/FLAG/LENGTH
CESDINFN EQU   *             END
SAVEEND  EQU   *             END OF DYNAMIC AREA
         SPACE 2
         PRINT &PRTSYS
         CVT   DSECT=YES
         SPACE 2
         IHACDE ,
         SPACE 2
         DCBD  DEVD=DA,DSORG=PO
         SPACE 2
         IEZDEB ,
         SPACE 2
         IKJTCB ,
         SPACE 2
         IHAPSA ,
         END   ,
