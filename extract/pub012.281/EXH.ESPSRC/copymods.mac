CPTPS   TITLE 'COPYMODS -- TAPE COPY PROGRAM'
*          DATA SET CBT990     AT LEVEL 002 AS OF 01/27/82
*              FROM CBT MODS TAPE, FILE 229
**************************************************************
**************************************************************
**                                                          **
**                                                          **
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **
**                                                          **
**                                                          **
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO TEN  **
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **
**     IS FOR COPYING THE SHARE MVS MODS TAPE.              **
**                                                          **
**                                                          **
**  METHOD: COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S ARE **
**    PRESENT. THE INPUT TAPE IS READ USING EXCP AND THE    **
**    APPROPRIATE OUTPUT TAPES ARE WRITTEN USING EXCP.      **
**    ANY LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON **
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND WITH **
**    A USER 69 ABEND.  IF AN ERROR OCCURS ON AN OUTPUT     **
**    TAPE, THE PROGRAM WILL QUIT WRITEING TO THE TAPE      **
**    WHICH ENCOUNTERED THE ERROR.                          **
**                                                          **
**                                                          **
**************************************************************
**************************************************************
         EJECT
         MACRO
&TAG     PRIME &REG,&AREA,&POOL,&LEN,&SAVE=,&R=,&RMK=
         GBLC  &CR0,&CR1,&CR12,&CR13,&CR14,&CR15
         LCLC  &C1,&C2
*******************   PROGRAM INITIATION ROUTINE   ********************
         AIF   ('&RMK' NE 'YES').PR10  JUMP IF REMARKS NOT DESIRED
* THIS MACRO WILL CREATE A SAVEAREA, SAVE THE REGISTERS, AND PERFORM  *
* THE NECESSARY ENTRY LINKAGE.  IT HAS THE FOLLOWING OPTIONS:         *
*                                                                     *
* (TAG)  PRIME (REG)(,AREA)(,POOL)(,LEN)(,SAVE=)(,R=)(,RMK=)          *
*                                                                     *
*    TAG = OPTIONAL - SYMBOLIC NAME IDENTIFIABLE TO 1ST GENERATED INST*
*  PRIME = REQUIRED - OPERATION CODE.                                 *
*    REG = OPTIONAL - INDICATE DESIRED BASE REGISTER OR REGISTERS.    *
*          IF OMITTED REGISTER 13 ASSUMED.  IF MULTIPLE BASES DESIRED *
*          SEPARATE BY COMMAS AND ENCLOSE IN PARENTHESIS (13,11,12).  *
*          IF REG 13 IS SPECIFIED IT MUST BE FIRST.                   *
*          DO NOT USE REG 13 AS A BASE IF RE-ENTERABLE CODING DESIRED.*
*   AREA = OPTIONAL - SYMBOLIC NAME WHICH IF SPECIFIED WILL CAUSE A   *
*          SAVEAREA TO BE GENERATED AND TAGGED WITH THIS NAME. IF REG *
*          13 IS USED AS A BASE A SAVEAREA IS ALWAYS GENERATED AND    *
*          WILL BE GIVEN THIS NAME. THIS AREA WILL NOT BE RELEASED IN *
*          THE 'TERME' MACRO.  THIS IS DESIRABLE IF THE ROUTINE USING *
*          THE 'PRIME & TERME' MACROS IS ENTERED SEVERAL TIMES. IF REG*
*          13 IS NOT USED AS A BASE AND THIS OPTION IS NOT SPECIFIED  *
*          PRIME WILL EXECUTE A 'GETMAIN' TO OBTAIN A SAVEAREA AND    *
*          TERME WILL EXECUTE A 'FREEMAIN' TO RELEASE THE AREA.       *
*          DO NOT SPECIFY THIS OPTION IF RE-ENTERABLE CODING DESIRED. *
*   POOL = OPTIONAL - SPECIFIES THE SUBPOOL FROM WHICH THE SAVEAREA IS*
*          TO BE OBTAINED. IF OMITTED SUBPOOL ZERO IS ASSUMED. THIS   *
*          OPERAND IS IGNORED IF REG 13 IS USED AS A BASE OR IF THE   *
*          AREA OR SAVE OPERANDS ARE SPECIFIED. IF THIS OPTION IS USE *
*          THE SAME SUBPOOL MUST BE SPECIFIED IN THE 'TERME' MACRO.   *
*    LEN = OPTIONAL - MAY BE USED TO SPECIFY THE AMOUNT OF STORAGE TO *
*          BE OBTAINED FOR THE SAVEAREA.  THE OPERAND MUST BE NUMERIC *
*          AND MUST NOT BE LESS THAN 72. THE FIRST 72 BYTES OF THE    *
*          AREA ARE USED BY PRIME TO STORE THE REGISTERS. THE USER MAY*
*          USE THE EXTRA AREA THAT WAS OBTAIN BEYOND 72 PASSED REG 13 *
*          FOR A WORK AREA. THIS OPTION IS USEFUL FOR RE-ENTERABLE    *
*          CODE AND IS IGNORED IF REG 13 IS USED AS A BASE, OR IF THE *
*          AREA OR SAVE OPERANDS ARE SPECIFIED.                       *
*   SAVE = OPTIONAL - SPECIFIES THE NAME OF AN 18 FULLWORD AREA WHERE *
*          THE REGISTERS ARE TO BE SAVED.                             *
*      R = OPTIONAL (KEY WORD) - IF (R=YES) IS SPECIFIED R0 THRU R15  *
*          WILL BE EQUATED TO 0 THRU 15 TO SYMBOLICALLY IDENTIFY REGS.*
*    RMK = OPTIONAL (KEYWORD) - IF (RMK=YES) IS SPECIFIED THIS REMARK *
*          BLOCK WILL BE LISTED IN THE MACRO EXPANSION.               *
***********************************************************************
.PR10    AIF   ('&CR0' NE '').PR40     JUMP IF REGS ALREADY EQUATED
         AIF   ('&R' EQ '').PR20
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.PR20    ANOP
         AIF   ('&R' EQ '').PR30       JUMP IF NO EQUATE
&CR0     SETC  'R0'
&CR1     SETC  'R1'
&CR12    SETC  'R12'
&CR13    SETC  'R13'
&CR14    SETC  'R14'
&CR15    SETC  'R15'
         AGO   .PR40
.PR30    ANOP
&CR0     SETC  '0'
&CR1     SETC  '1'
&CR12    SETC  '12'
&CR13    SETC  '13'
&CR14    SETC  '14'
&CR15    SETC  '15'
.PR40    DS    0F -------------------- VER.1 REL.6 --------------------
         AIF   ('&REG' NE '').PR50     JUMP IF REG PRESENT
         USING *,&CR13
         AGO   .PR100
.PR50    AIF   (N'&REG GT 1).PR60           JUMP IF MORE THAN 1 REG
         USING *,&REG(1)
         AGO   .PR100
.PR60    AIF   (N'&REG GT 2).PR70           JUMP IF MORE THAN 2 REGS
         USING *,&REG(1),&REG(2)
         AGO   .PR100
.PR70    AIF   (N'&REG GT 3).PR80           JUMP IF MORE THAN 3 REGS
         USING *,&REG(1),&REG(2),&REG(3)
         AGO   .PR100
.PR80    ANOP
         USING *,&REG(1),&REG(2),&REG(3),&REG(4)
         AIF   (N'&REG LT 5).PR100          JUMP IF LESS THAN 5 REGS
      MNOTE 8,'** MAXIMUM NUMBER OF REGISTERS IS 4 - OTHER IGNORED **'
.PR100   AIF   ('&REG' EQ '').PR110    JUMP IF REG NOT PRESENT
         AIF   ('&REG(1)' EQ 'R13' OR '&REG(1)' EQ '13').PR110
         AGO   .PR120
.PR110   AIF   ('&AREA' EQ '').PR115
&AREA    DS    0F
.PR115   ANOP
&TAG     BAL   &CR15,76(&CR15)
         DC    17F'0',H'4',H'4096'
         SH    &CR15,68(&CR15)
         STM   &CR14,&CR12,12(&CR13)
         LR    &CR1,&CR15
         AIF   (N'&REG LT 2).PR170
         LR    &REG(2),&CR1
         LA    &CR15,74(&CR1)
         AGO   .PR150
.PR120   ANOP
&TAG     BALR  &CR15,0
         BCTR  &CR15,0
         BCTR  &CR15,0
         STM   &CR14,&CR12,12(&CR13)
         LR    &REG(1),&CR15
         AIF   ('&AREA' EQ '').PR130   JUMP IF AREA NOT DESIRED
         BAL   &CR1,*+78
&AREA    DC    18F'0',H'4096'
         LA    &CR15,72(&CR1)
         AGO   .PR140
.PR130   AIF   (N'&REG LT 2).PR160
         BAL   &CR15,*+6
         DC    H'4096'
.PR140   AIF   (N'&REG EQ 1).PR160     JUMP IF 1 REG
         LR    &REG(2),&REG(1)
.PR150   AH    &REG(2),0(&CR15)
         AIF   (N'&REG EQ 2).PR160     JUMP IF 2 REGS
         LR    &REG(3),&REG(2)
         AH    &REG(3),0(&CR15)
         AIF   (N'&REG EQ 3).PR160     JUMP IF 3 REGS
         LR    &REG(4),&REG(3)
         AH    &REG(4),0(&CR15)
.PR160   AIF   ('&REG(1)' EQ 'R13' OR '&REG(1)' EQ '13').PR170
         AIF   ('&AREA' NE '').PR170   JUMP IF AREA
         AIF   ('&SAVE' EQ '').PR180   JUMP IF NO SAVE
         LA    &CR1,&SAVE
.PR170   ST    &CR1,8(&CR13)
         MVI   8(&CR13),X'A3'
         AGO   .PR240
.PR180   AIF   ('&POOL' EQ '').PR190   JUMP IF NO POOL
&C1      SETC  '&POOL'
         AGO   .PR200
.PR190   ANOP
&C1      SETC  '0'
.PR200   AIF   ('&LEN' EQ '').PR220
         AIF   ('&LEN' LT '72').PR210
&C2      SETC  '&LEN'
         AGO   .PR230
.PR210   MNOTE 4,'SAVEAREA LENGTH SPECIFIED LESS THAN 72 - 72 ASSUMED'
.PR220   ANOP
&C2      SETC  '72'
.PR230   GETMAIN R,LV=&C2,SP=&C1
         XC    0(72,&CR1),0(&CR1)
         ST    &CR1,8(&CR13)
         MVI   8(&CR13),X'DC'
.PR240   ST    &CR13,4(&CR1)
         LM    &CR0,&CR1,20(&CR13)
         L     &CR13,8(&CR13)
         MEND
         MACRO
&TAG     TERME &OP,&POOL,&LEN,&RMK=
         GBLC  &CR0,&CR1,&CR12,&CR13,&CR14,&CR15
         LCLA  &A
         LCLC  &C1,&C2
*******************   PROGRAM TERMINATION ROUTINE   *******************
         AIF   ('&RMK' NE 'YES').TR1   JUMP IF REMARKS NOT DESIRED
* THIS MACRO WILL RESTORE THE REGISTERS, RELEASE THE SAVEAREA IF      *
* OBTAIN BY 'PRIME' MACRO, AND RETURN TO NEXT HIGHER LEVEL.           *
* UPON RETURN REGS. 0 & 1 WILL REMAIN THE SAME AS BEFORE THE TERME.   *
*                                                                     *
* (TAG)  TERME  (OP)(,POOL)(,LEN)(,RMK=NO)                            *
*                                                                     *
*    TAG = OPTIONAL - SYMBOLIC NAME IDENTIFIABLE TO 1ST GENERATED INST*
*  TERME = REQUIRED - OPERATION CODE.                                 *
*     OP = OPTIONAL - IF 'XCTL' IS SPECIFIED INSTRUCTIONS WILL BE     *
*          GENERATED WHICH WILL ALLOW THE 'XCTL' MACRO TO BE ISSUED   *
*          IMMEDIATLY FOLLOWING THE TERME MACRO. CONTROL WILL NOT BE  *
*          GIVEN TO THE NEXT HIGHER LEVEL.                            *
*   POOL = OPTIONAL - IT MUST BE PRESENT IF THE POOL OPTION IN 'PRIME'*
*          WAS SPECIFIED, AND MUST INDICATE THE SAME SUBPOOL.         *
*    LEN = OPTIONAL - IT MUST BE PRESENT IF THE LEN OPTION IN 'PRIME' *
*          WAS SPECIFIED, AND MUST INDICATE THE SAME LENGTH.          *
*    RMK = OPTIONAL (KEYWORD) - IF (RMK=YES) IS SPECIFIED THIS REMARK *
*          BLOCK WILL BE LISTED IN THE MACRO EXPANSION.               *
***********************************************************************
.TR1     ANOP
         AIF   ('&CR0' NE '').TR2      JUMP IF REG EQU IN PRIME
&CR0     SETC  '0'
&CR1     SETC  '1'
&CR12    SETC  '12'
&CR13    SETC  '13'
&CR14    SETC  '14'
&CR15    SETC  '15'
.TR2     ANOP
&A       SETA  &SYSNDX
&TAG     L     &CR14,4(&CR13)
         STM   &CR15,&CR1,16(&CR14)
         XI    8(&CR14),X'DC'
         BC    7,IXI5&A
         L     &CR1,8(&CR14)
         AIF   ('&POOL' EQ '').TR10
&C1      SETC  '&POOL'
         AGO   .TR20
.TR10    ANOP
&C1      SETC  '0'
.TR20    AIF   ('&LEN' EQ '').TR40
         AIF   ('&LEN' LT '72').TR30
&C2      SETC  '&LEN'
         AGO   .TR50
.TR30    MNOTE 4,'SAVEAREA LENGTH SPECIFIED LESS THAN 72 - ASSUME 72'
.TR40    ANOP
&C2      SETC  '72'
.TR50    ANOP
         FREEMAIN R,LV=&C2,A=(1),SP=&C1
IXI5&A   LR    &CR13,&CR14
         L     &CR14,16(&CR13)
         SPM   &CR14
         LM    &CR14,&CR12,12(&CR13)
         XC    8(4,&CR13),8(&CR13) ----- VER.1 REL.6 -----
         AIF   ('&OP' EQ 'XCTL').C
         BR    &CR14
         MEXIT
.C       ANOP
         BALR  &CR15,0
         USING *,&CR15
         MEND
         EJECT
         PRINT NOGEN         SAVE A TREE                   GYP 91128
COPYMODS CSECT
         PRIME R=YES,RMK=NO
         SR    R9,R9          ZERO FOR BLOCK COUNT
         LA    R8,1           INITIALIZE FOR FILE NUMBER
         SPACE 3
*
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT
*
         L     R2,16          R2=CVT
         L     R2,0(,R2)      R2=TCB WORDS
         L     R2,4(,R2)      R2=MY TCB
         L     R2,12(,R2)     R2=TIOT
         LA    R2,24(,R2)     R2=FIRST DD ENTRY
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?
         BE    OPENS          YES
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?
         BNE   TIOT1          NO
         OI    FLAG1,OP1      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?
         BNE   TIOT2          NO
         OI    FLAG1,OP2      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?
         BNE   TIOT3          NO
         OI    FLAG1,OP3      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?
         BNE   TIOT4          NO
         OI    FLAG1,OP4      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?
         BNE   TIOT5          NO
         OI    FLAG1,OP5      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?
         BNE   TIOT6          NO
         OI    FLAG1,OP6      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?
         BNE   TIOT7          NO
         OI    FLAG1,OP7      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?
         BNE   TIOT8          NO
         OI    FLAG1,OP8      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?
         BNE   TIOT9          NO
         OI    FLAG2,OP9      SHOW IT
         B     TIOTNEXT       CONTINUE
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?
         BNE   TIOTNEXT       NO
         OI    FLAG2,OP10     SHOW IT
         B     TIOTNEXT       CONTINUE
TIOTNEXT SR    R3,R3
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY
         AR    R2,R3          R2=NEXT DD ENTRY
         B     TIOTLOOP       GO CHECK IT
         SPACE 3
*
*  OPEN ALL FILES
*
OPENS    OPEN  (IN,,SYSPRINT,OUTPUT)
         MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?
         BZ    OPEN1          NO
         OPEN  (OUT1,OUTPUT)
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?
         BZ    OPEN2          NO
         OPEN  (OUT2,OUTPUT)
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?
         BZ    OPEN3          NO
         OPEN  (OUT3,OUTPUT)
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?
         BZ    OPEN4          NO
         OPEN  (OUT4,OUTPUT)
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?
         BZ    OPEN5          NO
         OPEN  (OUT5,OUTPUT)
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?
         BZ    OPEN6          NO
         OPEN  (OUT6,OUTPUT)
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?
         BZ    OPEN7          NO
         OPEN  (OUT7,OUTPUT)
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?
         BZ    OPEN8          NO
         OPEN  (OUT8,OUTPUT)
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?
         BZ    OPEN9          NO
         OPEN  (OUT9,OUTPUT)
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?
         BZ    READIN         NO
         OPEN  (OUT10,OUTPUT)
         SPACE 3
*
*  READ INPUT
*
READIN   MVI   INECB,X'00'    INITIALIZE ECB
         EXCP  INIOB          READ
         WAIT  ECB=INECB      WAIT FOR READ
         TM    INCSW+4,X'01'  WAS TM READ?
         BO    READIN1        YES
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?
         BNE   INERR          NO -- ERROR
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE
         LH    R2,INCCW+6     R2=READ LENGTH
         LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT
         SR    R2,R3          R2=ACTUAL LENGTH READ
         STH   R2,OUTCCW+6    STORE FOR WRITE
         LA    R9,1(,R9)      ADD 1 TO COUNT OF DATA BLOCKS
         B     WRITE1         CONTINUE
READIN1  CVD   R8,DWORD       CONVERT FILE NUMBER TO DECIMAL
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER
         CVD   R9,DWORD       CONVERT BLOCK COUNT TO DECIMAL
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT
         PUT   SYSPRINT,FILEDONE  WRITE IT
         SR    R9,R9          ZERO BLOCK COUNT FOR NEW FILE
         LA    R8,1(,R8)      ADD 1 TO FILE NUMBER
         CLI   OUTCCW,X'1F'   2ND TM IN A ROW?
         BE    READIN2        YES - END OF VOLUME
         MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM
         B     WRITE1         GO WRITE TM TO OUTPUTS
READIN2  OI    FLAG2,EOV      INDICATE EOV ON INPUT
         SPACE 3
*
*  WRITE TO OUTPUT TAPES
*
WRITE1   TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?
         BZ    WRITE2         NO
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?
         BZ    WRITE3         NO
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?
         BZ    WRITE4         NO
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?
         BZ    WRITE5         NO
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?
         BZ    WRITE6         NO
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?
         BZ    WRITE7         NO
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?
         BZ    WRITE8         NO
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?
         BZ    WRITE9         NO
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?
         BZ    WRITE10        NO
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?
         BZ    WRITE11        NO
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB
         ST    R2,OUTDCBPT    PUT IT IN IOB
         MVI   OUTECB,X'00'   INITIALIZE ECB
         EXCP  OUTIOB         WRITE IT
         WAIT  ECB=OUTECB     WAIT FOR IT
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?
         BNE   OUTERR         NO - ERROR
WRITE11  TM    FLAG2,EOV      END OF INPUT?
         BO    ENDINPUT       YES - QUIT
         B     READIN         NO - LOOP
         SPACE 3
*
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND
*
INERR    TM    INCSW+4,X'02'  UNIT CHECK?
         BZ    INERR1         NO - ASSUME DATA CHECK
         MVC   LINE(133),INEQC  SET ERROR MESSAGE
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR
         B     INERR2         CONTINUE
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE
         MVI   INECB,X'00'    RESET ECB
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X
               6,INECB,ROUTCDE=(3)
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE
*                             WHO CARES WHAT THE REPLY IS
         ABEND 69             QUIT
         SPACE 3
*
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY
*
OUTERR   TM    OUTCSW+4,X'02' UNIT CHECK?
         BZ    OUTERR1        NO - ASSUME DATA CHECK
         MVC   LINE(133),OUTEQC  SET ERROR MESSAGE
         B     OUTERR2        CONTINUE
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET
         L     R5,16          R5=CVT
         L     R5,0(,R5)      R5=TCB WORDS
         L     R5,4(,R5)      R5=MY TCB
         L     R5,12(,R5)     R5=TIOT
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT
         MVC   LINE+47(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE
         MVC   LINE+59(6),36(R4)  MOVE VOLSER TO MESSAGE
         PUT   SYSPRINT,LINE  WRITE MESSAGE
         MVC   OUTERR4+16(53),LINE+12  MOVE ERROR MESSAGE TO WTOR
OUTERR3  MVI   OUTECB,X'00'   RESET ECB
OUTERR4  WTOR  '                                                       X
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?
         BNE   OUTERR3        NO - TRY AGAIN
         ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB
         EXCP  REWIOB         REWIND TAPE WITH THE ERROR
*                             DON'T BOTHER WAITING FOR REWIND
         OI    FLAG2,ERR      INDICATE THAT THERE WAS AN ERROR
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR5        NO
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE2         CONTINUE WITH OTHER OUTPUT
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR6        NO
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE3         CONTINUE WITH OTHER OUTPUT
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR7        NO
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE4         CONTINUE WITH OTHER OUTPUT
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR8        NO
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE5         CONTINUE WITH OTHER OUTPUT
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR9        NO
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE6         CONTINUE WITH OTHER OUTPUT
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR10       NO
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE7         CONTINUE WITH OTHER OUTPUT
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR11       NO
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE8         CONTINUE WITH OTHER OUTPUT
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR12       NO
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE9         CONTINUE WITH OTHER OUTPUT
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?
         BNE   OUTERR13       NO
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE10        CONTINUE WITH OTHER OUTPUT
*                             THEN IT MUST BE OUTPUT 10
OUTERR13 NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE
         B     WRITE11        CONTINUE WITH OTHER OUTPUT
         SPACE 3
*
*  END OF INPUT -- FINISH UP
*
ENDINPUT MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE
         TM    FLAG2,OP10     OUTPUT 10 COMPLETED?
         BO    ENDIN1         YES - CONTINUE
         MVC   LINE+87(5),LINE+92  NO - DON'T SHOW IT
ENDIN1   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?
         BO    ENDIN2         YES - CONTINUE
         MVC   LINE+81(11),LINE+87  NO - DON'T SHOW IT
ENDIN2   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?
         BO    ENDIN3         YES - CONTINUE
         MVC   LINE+75(17),LINE+81  NO - DON'T SHOW IT
ENDIN3   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?
         BO    ENDIN4         YES - CONTINUE
         MVC   LINE+69(23),LINE+75  NO - DON'T SHOW IT
ENDIN4   TM    FLAG1,OP6      OUTPUT 6 COMPLETED?
         BO    ENDIN5         YES - CONTINUE
         MVC   LINE+63(29),LINE+69  NO - DON'T SHOW IT
ENDIN5   TM    FLAG1,OP5      OUTPUT 5 COMPLETED?
         BO    ENDIN6         YES - CONTINUE
         MVC   LINE+57(35),LINE+63  NO - DON'T SHOW IT
ENDIN6   TM    FLAG1,OP4      OUTPUT 4 COMPLETED?
         BO    ENDIN7         YES - CONTINUE
         MVC   LINE+51(41),LINE+57  NO - DON'T SHOW IT
ENDIN7   TM    FLAG1,OP3      OUTPUT 3 COMPLETED?
         BO    ENDIN8         YES - CONTINUE
         MVC   LINE+45(47),LINE+51  NO - DON'T SHOW IT
ENDIN8   TM    FLAG1,OP2      OUTPUT 2 COMPLETED?
         BO    ENDIN9         YES - CONTINUE
         MVC   LINE+39(53),LINE+45  NO - DON'T SHOW IT
ENDIN9   TM    FLAG1,OP1      OUTPUT 1 COMPLETED?
         BO    ENDIN10        YES - CONTINUE
         MVC   LINE+33(59),LINE+39  NO - DON'T SHOW IT
ENDIN10  PUT   SYSPRINT,LINE  WRITE IT
         SPACE 3
*
*  CLOSE ALL FILES
*
         CLOSE (IN,,SYSPRINT)
         TM    FLAG3,OP1      OUTPUT 1 OPEN?
         BZ    CLOSE1         NO
         CLOSE (OUT1)         CLOSE OUTPUT 1
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?
         BZ    CLOSE2         NO
         CLOSE (OUT2)         CLOSE OUTPUT 2
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?
         BZ    CLOSE3         NO
         CLOSE (OUT3)         CLOSE OUTPUT 3
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?
         BZ    CLOSE4         NO
         CLOSE (OUT4)         CLOSE OUTPUT 4
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?
         BZ    CLOSE5         NO
         CLOSE (OUT5)         CLOSE OUTPUT 5
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?
         BZ    CLOSE6         NO
         CLOSE (OUT6)         CLOSE OUTPUT 6
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?
         BZ    CLOSE7         NO
         CLOSE (OUT7)         CLOSE OUTPUT 7
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?
         BZ    CLOSE8         NO
         CLOSE (OUT8)         CLOSE OUTPUT 8
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?
         BZ    CLOSE9         NO
         CLOSE (OUT9)         CLOSE OUTPUT 9
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?
         BZ    THEEND         NO
         CLOSE (OUT10)        CLOSE OUTPUT 10
         SPACE 3
*
*  THE END
*
THEEND   EQU   *
         MVC   WTOCBT+16(41),FILEDONE
WTOCBT   WTO   'CBT990                                              '
         SR    R15,R15        ZERO RETURN CODE
         TM    FLAG2,ERR      WAS THERE AN ERROR?
         BZ    THEEND1        NO
         LA    R15,16         SET RETURN CODE
THEEND1  TERME RMK=NO
         EJECT
DWORD    DC    D'0'
         CNOP  0,8
INCCW    DC    X'02',AL3(INAREA),X'2000',H'32760'
OUTCCW   DC    X'01',AL3(INAREA),X'2000',H'32760'
REWCCW   DC    X'07',AL3(INAREA),X'2000',H'32760'
INECB    DC    F'0'
INIOB    DC    X'02000000'
         DC    A(INECB)
INCSW    DC    2F'0'
         DC    A(INCCW)
         DC    A(IN)
         DC    F'0'
         DC    X'00010000'
OUTECB   DC    F'0'
OUTIOB   DC    X'02000000'
         DC    A(OUTECB)
OUTCSW   DC    2F'0'
         DC    A(OUTCCW)
OUTDCBPT DC    A(OUT1)
         DC    F'0'
         DC    X'00010000'
REWECB   DC    F'0'
REWIOB   DC    X'02000000'
         DC    A(REWECB)
REWCSW   DC    2F'0'
         DC    A(REWCCW)
REWDCBPT DC    A(OUT1)
         DC    F'0'
         DC    X'00010000'
         SPACE 3
FLAG1    DC    X'00'
OP1      EQU   X'80'
OP2      EQU   X'40'
OP3      EQU   X'20'
OP4      EQU   X'10'
OP5      EQU   X'08'
OP6      EQU   X'04'
OP7      EQU   X'02'
OP8      EQU   X'01'
FLAG2    DC    X'00'
OP9      EQU   X'80'
OP10     EQU   X'40'
ERR      EQU   X'02'
EOV      EQU   X'01'
FF       EQU   X'FF'
FLAG3    DC    X'00'
FLAG4    DC    X'00'
         SPACE 3
INEQC    DC    C' ********** EQUIPTMENT CHECK ON INPUT -- COPY '
         DC    C'TERMINATED '
         DC    76C'*'
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '
         DC    82C'*'
OUTEQC   DC    C' ********** EQUIPTMENT CHECK ON DD XXXXX, UNIT '
         DC    C'XXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '
         DC    41C'*'
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '
         DC    C'XXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '
         DC    41C'*'
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'
         DC    93C' '
SUCCESS  DC    C'0COPY SUCCESSFULLY COMPLETED FOR OUT1, OUT2, OUT3,'
         DC    C' OUT4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10'
         DC    41C' '
LINE     DC    133C' '
REPLY    DC    C'      '
         SPACE 3
         LTORG
         SPACE 3
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X
               BLKSIZE=133
INAREA   DS    CL32768
*PAN$AUD CSECT                                             GYP 91128
*PAN#AUD DC    CL21'002CBT990    01/27/82'                 GYP 91128
         END
