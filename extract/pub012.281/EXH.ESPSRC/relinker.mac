RLNK     TITLE 'R E L I N K E R  -  LIBRARY RELINKER UTILITY '
***********************************************************************
*                                                                     *
*    AUTHOR:   J. SCULLION                                            *
*    DATED:    11 FEB 1973                                            *
*                                                                     *
*    UPDATE:   G. POSTPISCHIL (MVS+ SUPPORT; NEW FEATURES; FIXES) 2010*
*                                                                     *
***********************************************************************
*                                                                     *
*    N.B.: IN ORDER TO INVOKE IEBCOPY SUCCESSFULLY, I.E., WHEN        *
*      SYSPUNCH IS NOT USED, THE PROGRAM MUST BE AUTHORIZED           *
*      The IEBCOPY may also be attached as a subsequent step without  *
*      the R (replace) option to get all members.                     *
*                                                                     *
***********************************************************************
*                                                                     *
* --==>> Program renamed RELINKER from ZZRELINK due to changed <<==-- *
* --==>> use of DD names.                                      <<==-- *
*                                                                     *
***********************************************************************
*                                                                     *
*    REWORKED TO FIX ERRORS, ELIMINATED MFT/MVT DEPENDENCIES,   GP10113
*      (TRIED TO KEEP COMPATIBLE, BUT USED ICM/STCM/MVCL)
*    CONSOLIDATED INTO SINGLE MODULE FOR GLOBAL EDITING,
*    PARM='SIZE= NOW OBSOLETE - GENERATED PARM ADEQUATE FOR NUCLEUS,
*    FIXED RENAME ON SELECT ((old,newname))
*    ALLOW SELECT ALIAS - TREAT AS SELECT MEMBER
*    ALLOW EXCLUDE ALIAS - EXCLUDES ALIAS, NOT MEMBER
*    IDENTIFIES WIDOWED ALIAS; ALLOWS PROMOTION TO MEMBER IF SELECTED
*    CORRECTLY PROCESSES MODULES WITH PAGE ALIGNMENT
*    RUN OPTIONS NOW SUPPLIED BY PARM= OR *OPTIONS CARD ON SYSIN
*     DEFAULT   SUPPORTED OPTIONS:
*        OVLY × NOOVLY       RELINKS WITH / WITHOUT OVERLAY
*       ALIGN × NOALIGN      RELINKS WITH / WITHOUT PAGE ALIGNMENT
*       CHECK × NOCHECK      BANS INPUT = OUTPUT DATA SET WITHOUT SEL.
*       BUILD × NOBUILD      BUILDS INCLUDE SYSLIB(csect) CARDS; ALSO
*                              NEEDS SYSLIB DD (1-16 OBJECT LIBS)
*                              USER MUST SUPPLY SYSLIB IN PUNCH MODE.
*      NOTEST × TEST         TEST MODE INHIBITS LINK-EDIT AND IEBCOPY
*      NOLIST × LIST         PRINTS (LOTS) OF INFORMATION MESSAGES
*      NOLIST × LOTS         PRINTS EVEN MORE MESSAGES.         GP14266
*      NODCBS × DCBS         WILL USE MAXIMUM BLOCK SIZE BY     GP13239
*             × EXPORT         DEFAULT UNLESS BLOCK SIZE IS SPECIFIED
*                              ON THE DD OR PDS IS PRE-ALLOCATED.
*    SENDS NON-LOAD MODULES TO IEBCOPY (ESP. SYSCATLG IN SYS1.NUCLEUS)
*    IN SYSPUNCH MODE, IEBCOPY JCL AND CONTROLS NOW APPENDED TO PUNCH
*    REARRANGED CODE, DATA, AND IMPROVED COMMENTS
*    SUPPORTS UNLIKE CONCATENATION FOR INPUT AND ARBITRARY RECORD
*      LENGTHS (BUT ONLY 1-71 USED; 72 IS CONTINUATION COLUMN)
*    SYSPRINT AND SYSPUNCH NOW SUPPORT FIXED, VARIABLE, AND UNDEFINED
*      RECORD FORMATS, WITH ASA OR MACHINE CODE, OR NONE, AND WILL
*      USE EXISTING DCB PARAMETERS IF SENT TO PRE-ALLOCATED DATA SET.
*    MAKE IT EASIER TO MAINTAIN, ETC.            G. POSTPISCHIL GP10113
*
*    Code has been added to support "simple" IEBCOPY convention:
*      Input DD is SYSUT1, output is SYSUT2, and SYSIN is DUMMY
*    This copies SYSUT1 to SYSUT2 without control cards. In this mode,
*    PARM=REPLACE may be used to set the REPLACE switch for INDD.
*    Also the SYSUT1 and SYSUT2 DD names may be replaced form the
*    DD name list at invocation, but be careful to avoid name clashes
*    with SYSUT3-6.                                             GP14266
*
*
*    To avoid data set destruction, all other use of DD names beginning
*    with SYSUT will be failed (internal use).   G. POSTPISCHIL GP14266
*
***********************************************************************
*
*    FUNCTION: THE PURPOSE OF THIS UTILITY IS TO READ CONTROL CARDS
*              THAT ARE SIMILAR TO IEBCOPY CONTROL CARDS AND EITHER:
*
*       1. GENERATE AND PUNCH A LINKAGE EDITOR JCL STREAM
*            //       EXEC PGM=RELINKER,REGION=4096K
*            //SYSPRINT DD SYSOUT=*
*            //SYSPUNCH DD SYSOUT=* (or data set FB, 80)
*            //SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,5,,CONTIG)
*            //indd1    DD DISP=SHR,DSN=input PDS 1
*            //indd2    DD DISP=SHR,DSN=input PDS 2
*            //outdd    DD DISP=OLD,DSN=output PDS
*               LINK INDD=(indd1,indd2),OUTDD=outdd
*               S M=(mem1,mem2,...)
*
*       2. GENERATE A JCL STREAM AND INVOKE THE LINKAGE EDITOR
*            //       EXEC PGM=RELINKER,REGION=4096K,TIME=1439
*            //SYSPRINT DD SYSOUT=*
*            //SYSPUNCH DD SYSOUT=* (or data set FB, 80)
*            //SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,5,,CONTIG)
*            //SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,5,,CONTIG)
*            //SYSUT5   DD UNIT=SYSDA,SPACE=(CYL,5,,CONTIG)
*            //SYSUT6   DD UNIT=SYSDA,SPACE=(CYL,5,,CONTIG)
*            //SYSLOUT  DD SYSOUT=*    LKED output
*            //indd1    DD DISP=SHR,DSN=input PDS 1
*            //indd2    DD DISP=SHR,DSN=input PDS 2
*            //outdd    DD DISP=OLD,DSN=output PDS
*               LINK INDD=(indd1,indd2),OUTDD=outdd
*               S M=(mem1,mem2,...)
*
*              THIS MAINLINE MODULE WILL CONTROL THE ROUTINES THAT:
*             -VALIDATE THE CONTROL CARDS
*             -READ PDS DIRECTORIES
*             -GENERATE MESSAGES
*             -GENERATE JCL STREAM
*
*              THIS ROUTINE IS SIMILAR TO IEBCOPY IN THAT IT WILL ALLOW
*                   ALL MEMBERS OF A PDS TO BE RELINKED
*             OR    SELECTED MEMBERS OF A PDS TO BE RELINKED
*             OR    EXCLUDING CERTAIN MEMBERS OF A PDS FROM RELINKING
*
*         FORMAT OF CONTROL STATEMENTS IS :
*
*              LINK      INDD=          ,OUTDD=
*              L         I=             ,O=
*              COPY      INDD=          ,OUTDD=
*              C         I=             ,O=
*
*              SELECT    MEMBER=
*              S         M=
*
*              SELECT MEMBER=member
*              SELECT MEMBER=(member1,member2,member3,...)
*              SELECT MEMBER=((oldname,newname))
*              SELECT MEMBER=((member,,R))      REPLACE
*              SELECT MEMBER=((oldname,newname,R))    REPLACE & RENAME
*
*              EXCLUDE   MEMBER=
*              E         M=
*
*     THE REPLACE OPTION MAY ALSO BE SPECIFIED. IT IS CODED IN
*     THE SAME MANNER AS THE OPTION IS USED IN IEBCOPY.
*     IT CAN REPLACE SELECTED MEMBERS OF A DATA SET OR IT CAN REPLACE
*     THE WHOLE DATA SET. IF THE REPLACE OPTION IS NOT SPECIFIED, THE
*     LINK IF INVOKED WILL NOT REPLACE THE MEMBER IN THE NEW DATA SET
*     IF THE MEMBER IS PRESENT IN THE NEW DATA SET.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*   When the program is invoked from another program, an optional     *
*   DD name list may also be passed. Format is same as for standard   *
*   IBM utilities (SYSIN, SYSPRINT). SYSPUNCH is not defined, and     *
*   SYSUTn entries are ignored.                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*     THIS PROGRAM IS BUILT FROM MAJOR MODULES AND SUBROUTINES:
*
*     1.   RELINKER      MAIN LINE  AND  MAIN PROCESSOR
*     2.   ZZRESCAN      CONTROL CARD SCAN ROUTINE.
*                        THIS IS A REWORK OF IEBCOPY MODULE IEBSCN
*                        FROM MVSSRC.SYM202.F13
*     3.   ZZROVBLD      ENTRY POINT DETERMINATION AND OVERLAY TABLE
*                        BUILD ROUTINE.
*     4.   ZZROVCRD      OVERLAY CARD GENERATOR ROUTINE.
*     5.   ZZRPAGER      PAGE ALIGNMENT CONTROL CARDS.          GP10113
*     6.   ZZRBUILD      BUILD INCLUDE SYSLIB(sect) CARDS       GP10114
*     7.   ZZRJOBLD      BUILD JOB CARD AS SUBMITTED.           GP10113
*     8.   ZZMESAGE      MESSAGE WRITER ROUTINE.
*     9.   ZZUTDD99      UTn DD ALLOCATE/DELETE.                GP14266
*
*     ZZRELCOM IS THE COMMUNICATIONS AREA BETWEEN MODULES.
*
***********************************************************************
*                                                                     *
*   This program is not refreshable, nor reentrant. It may not even   *
*   be reusable.                                                      *
*                                                                     *
***********************************************************************
         MACRO ,
&N       MSGMID &CODE,&I1,&I2,&I3                               GP10113
         LCLC  &A,&B                                            GP10113
         AIF   (K'&CODE LT 3).MVI                               GP10113
         AIF   ('&CODE'(1,1) NE '(' OR '&CODE'(K'&CODE,1) NE ')').MVI
&N       STC   &CODE(1),MSGLIST+1                               GP10113
         AGO   .CODED                                           GP10113
.MVI     ANOP  ,                                                GP10113
&N       MVI   MSGLIST+1,&CODE    SET MESSAGE NUMBER            GP10113
.CODED   AIF   (T'&I1 EQ 'O').SKIPPM1                           GP10113
&A       SETC  '&I1(1)'                                         GP10113
         AIF   ('&A'(1,1) EQ '''').NAMESTR                      GP10113
         MVC   MSGPARM1,&A                                      GP10113
         AGO   .SKIPPM1                                         GP10113
.NAMESTR MVC   MSGPARM1,=CL8&A    INSERTED TEXT                 GP10113
.SKIPPM1 AIF   (T'&I2 EQ 'O').SKIPPM2                           GP10113
&A       SETC  '&I2(1)'                                         GP10113
         AIF   ('&A'(1,1) EQ '''').DDNESTR                      GP10113
         MVC   MSGPARM2,&A                                      GP10113
         AGO   .SKIPPM2                                         GP10113
.DDNESTR MVC   MSGPARM2,=CL8&A    INSERTED TEXT                 GP10113
.SKIPPM2 AIF   (T'&I3 EQ 'O').SKIPNUM                           GP10113
&A       SETC  '&I3'                                            GP10113
&B       SETC  '&I3(1)'                                         GP10113
         AIF   ('&A'(1,1) EQ '(').NBRESTR                       GP10113
         MVC   MSGPNUM1,&B                                      GP10113
         AGO   .SKIPNUM                                         GP10113
.NBRESTR ST    &A,MSGPNUM1        STORE NUMBER                  GP10113
.SKIPNUM L     R15,=A(ZZMESAGE)   MESSAGE WRITER                GP10113
         BALR  R14,R15            WRITE MESSAGE                 GP10113
         MEND  ,
         SPACE 1
         MACRO ,
&N       CDEF  &CODE,&TEXT,&BASE=ZZRESCAN                       GP10113
.*  DEFINE COMMAND VERBS                                        GP10113
         AIF   (K'&TEXT LE 3).NOQUO                             GP10113
         AIF   ('&TEXT'(1,1) NE '''').NOQUO                     GP10113
&N       DC    AL2(&CODE-&BASE),CL8&TEXT                        GP10113
         MEXIT ,                                                GP10113
.NOQUO   ANOP  ,                                                GP10113
&N       DC    AL2(&CODE-&BASE),CL8'&TEXT '                     GP10113
         MEND  ,                                                GP10113
         SPACE 1
         MACRO ,
&N       MDEF  &CODE,&TEXT                                      GP10113
.*  DEFINE A MESSAGE AND BUILD TABLES                           GP10113
         GBLA  &ZZMSG#       CUMULATIVE MESSAGE NUMBER          GP10113
         LCLC  &CC,&L,&ID    CODE, LEN, MID EQU                 GP10113
&ZZMSG#  SETA  &ZZMSG#+1     NEXT MESSAGE ID                    GP10113
&CC      SETC  '&N'                                             GP10113
         AIF   (K'&N LE 3).NEWID                                GP10113
         AIF   ('&N'(1,3) EQ 'MID').OLDID                       GP10113
.NEWID   ANOP  ,                                                GP10113
&CC      SETC  'MID'.'&CC'   DEFINE EQUATE VALUE                GP10113
.OLDID   ANOP  ,                                                GP10113
&CC      EQU   &ZZMSG#       DEFINE MESSAGE MNEMONIC -> MSG     GP10113
&L       SETC  'L'''                                            GP10113
&CC      SETC  '0'                                              GP10113
         AIF   (T'&CODE EQ 'O').DEFCODE                         GP10113
         AIF   ('&CODE' EQ '()').DEFCODE                        GP10113
&CC      SETC  '&CODE'                                          GP10113
.DEFCODE ANOP  ,                                                GP10113
ZZMSGPTR CSECT ,             MESSAGE TABLE POINTERS             GP10113
         DC    AL2(ZZMSG&ZZMSG#-ZZMSGTAB)  POINTER TO MESSAGE   GP10113
ZZMSGTAB CSECT ,                                                GP10113
ZZMSG&ZZMSG# DC AL1(&CC,&L.ZZMST&ZZMSG#-1)                      GP10113
ZZMST&ZZMSG# DC C&TEXT                                          GP10113
RELINKER CSECT ,                                                GP10113
         MEND  ,                                                GP10113
         SPACE 1
         MACRO ,
&N       ODEF  &FG,&ON,&OF,&TX
.*  DEFINE OPTION FLAGS                                         GP10113
         AIF   (K'&TX LE 3).NOQUO                               GP10113
         AIF   ('&TX'(1,1) NE '''').NOQUO                       GP10113
&N       DC    AL1(&FG-OPTFLAG1,&ON,&OF),CL8&TX                 GP10113
         MEXIT ,                                                GP10113
.NOQUO   ANOP  ,                                                GP10113
&N       DC    AL1(&FG-OPTFLAG1,&ON,&OF),CL8'&TX '              GP10113
         MEND  ,                                                GP10113
         SPACE 1
         MACRO ,
&N       SETCC &CODE                                            GP10113
&N       CLI   PGMRC+3,&CODE
         BNL   *+4+4
         MVI   PGMRC+3,&CODE
         MEND  ,
         SPACE 1
         MACRO ,                                                GP10113
&NM      DDDEF &DDN,&FLG                                        GP10113
&NM      DC    CL8'&DDN ',AL1(&FLG),AL3(&DDN)                   GP10113
         MEND  ,                                                GP10113
         SPACE 1
         MACRO
&LABEL   BINSRCH &TBEG=(3),&TEND=(4),&AEND=,&BUILD=NO,&ENTLTH=,        X
               &ARG=(2),&SEQ=A,&COMPARE=L,&ARGOF=0,&FULL=,&TMID=(1),   X
               &ARGLTH=,&FOUND=,&ENTOF=0
.**********************************************************************
.*       MACRO PROTOTYPE SYMBOL MEANINGS AS FOLLOWS                   *
.**********************************************************************
.*             AEND = PTR TO ABSOLUTE TABLE END (BUILD FUNCTION ONLY)
.*
.*             ARG  = PTR TO ARGUMENT WHICH IS OBJECT OF SEARCH
.*
.*             ARGLTH = LENGTH OF ARGUMENT ON WHICH COMPARISON IS BASED
.*
.*             ARGOF = OFFSET OF ARGUMENT FROM THE START OF AN ENTRY
.*
.*             BUILD = INDICATION AS TO WHETHER THE SEARCH TABLE IS TO
.*                     BE EXPANDED IF THE SEARCH ARGUMENT IS NOT FOUND
.*                     IN THE EXISTING TABLE.
.*
.*             COMPARE = INDICATION OF WHETHER THE SEARCH TABLE IS KEPT
.*                       IN ARITHMETIC OR COLLATING SEQUENCE ORDER.
.*
.*             ENTLTH = THE LENGTH OF A SINGLE TABLE ENTRY
.*
.*             TBEG = PTR TO THE START OF THE TABLE (MUST HAVE A DUMMY
.*                    ENTRY WITH X'0F' FOR 'COMPARE=A' OR X'FF' FOR
.*                    'COMPARE=L' IN THE ARGUMENT FIELD OF THE FIRST
.*                    ENTRY FOR THE 'BUILD=YES' FUNCTION).
.*
.*             TEND = PTR TO THE END OF THE TABLE (MUST HAVE THE DUMMY
.*                    ENTRY DESCRIBED ABOVE IN THE LAST ENTRY OF THE
.*                    TABLE IF 'BUILD=NO' IS IN EFFECT)
.**********************************************************************
         LCLB  &BS(7)              1 = TBEG IN REG NOTATION
.*                                 2 = TEND IN REG NOTATION
.*                                 3 = AEND IN REG NOTATION
.*                                 4 = ARG IN REG NOTATION
.*                                 5 = DESCENDING ORDER TABLE
.*                                 6 = ARITHMETIC TABLE SEARCH
.*                                 7 = FOUND ROUTINE ADDRESS PRESENT
.**********************************************************************
.*       CHECK VALIDIITY OF MACRO OPERANDS                            *
.**********************************************************************
         AIF   (T'&TBEG EQ 'O').E1    ERROR IF NOT PRESENT
&BS(1)   SETB  ('&TBEG'(1,1) EQ '(')  TBEG IN REG NOTATION
.**********************************************************************
         AIF   (T'&TEND EQ 'O').E2    ERROR IF NOT PRESENT
&BS(2)   SETB  ('&TEND'(1,1) EQ '(')  TEND IN REG NOTATION
.**********************************************************************
         AIF   ('&BUILD' EQ 'NO').BI004 TABLE BUILD REQUESTED
         AIF   ('&BUILD' NE 'YES').E3   ERROR IF NOT 'YES' OR 'NO'
.**********************************************************************
         AIF   (T'&AEND EQ 'O').E4    ERROR IF ABSOLUTE END NOT
.*                                    SPECIFIED AND BUILD = 'YES'
&BS(3)   SETB  ('&AEND'(1,1) EQ '(')  AEND IN REGISTER NOTATION
.**********************************************************************
         AIF   (T'&FULL EQ 'O').E5    ERROR IF TABLE FULL ROUTINE PTR
.*                                    NOT SPECIFIED WITH BUILD = 'YES'
.BI004   ANOP
.**********************************************************************
*STUPID* AIF   (T'&ENTLTH NE 'N').E6  ERROR IF ENTRY LENGTH NOT SELF
.*                                    DEFINING
.**********************************************************************
         AIF   (T'&ARG EQ 'O').E7     ERROR IF ARG NOT SPECIFIED
&BS(4)   SETB  ('&ARG'(1,1) EQ '(')   ARG IN REG NOTATION
.**********************************************************************
         AIF   ('&TMID'(1,1) NE '(').E8 ERROR IF TMID NOT A REGISTER
.**********************************************************************
         AIF   ('&SEQ' NE 'A' AND '&SEQ' NE 'D').E9 ASCENDING
.*                                     AND DESCENDING ORDER ONLY
&BS(5)   SETB  ('&SEQ' EQ 'D')        SET SEQUENCE TO DESCENDING
.**********************************************************************
         AIF   ('&COMPARE' NE 'L' AND '&COMPARE' NE 'A').E10 ERROR
.*                                    IF NOT LOGICAL OR ARITHMETIC
.*                                    COMPARE
&BS(6)   SETB  ('&COMPARE' EQ 'A')    SET COMPARE TYPE TO ARITHMETIC
.**********************************************************************
         AIF   (T'&ARGOF NE 'N').E11  ERROR IF NOT SELF-DEFINING
.**********************************************************************
         AIF   (T'&ENTOF NE 'N').E12  ERROR IF NOT SELF-DEFINING
.**********************************************************************
         AIF   (T'&ARGLTH EQ 'O').E13 ERROR IF NO ARGUMENT LENGTH
         AIF   (T'&ARGLTH NE 'N').E14  ERROR IF NOT SELF-DEFINING
.**********************************************************************
&BS(7)   SETB  (T'&FOUND NE 'O')      FOUND ROUTINE PTR GIVEN
.**********************************************************************
***********************************************************************
*        THE FOLLOWING CODE IS A BINARY SEARCH ROUTINE. THIS ROUTINE  *
         AIF   ('&BUILD' EQ 'YES').BI008
*    WILL SEARCH THE TABLE POINTED TO BY 'TBEG' FOR THE ARGUMENT AT   *
*    'ARG'.                                                           *
         AGO   .BI012
.BI008   ANOP
*    WILL SEARCH THE EXISTING TABLE BEGINNING AT 'TBEG' AND ENDING AT *
*    'TEND' FOR THE ARGUMENT AT 'ARG'. IF THE SPECIFIED ARGUMENT IS   *
*    NOT FOUND IN THE TABLE THEN ALL ENTRIES IN THE TABLE WILL BE     *
*    PROPAGATED UP, SPACE PERMITTING, THE TABLE TO MAKE ROOM FOR A    *
*    NEW TABLE ENTRY. IN THIS CASE 'TBEG' WILL BE SET TO POINT TO THE *
*    POSITION IN THE TABLE WHERE THE NEW ENTRY CAN BE PLACED.         *
.BI012   ANOP
***********************************************************************
         AIF   ('&LABEL' EQ '').BI016 BRANCH IF LABEL NOT CODED
&LABEL   DS    0H .
.BI016   ANOP
.**********************************************************************
         STM   14,12,12(13) .             SAVE REGISTERS
         AIF   (NOT &BS(1)).BI020         BRANCH IF SYMBOLIC
         AIF   ('&TBEG'(1,3) EQ '(3)').BI024 ALREADY IN R1
         LR    3,&TBEG .         SET PTR TO TABLE START
         AGO  .BI024
.BI020   ANOP
         L     3,&TBEG .         SET PTR TO TABLE START
.BI024   ANOP
         AIF   (NOT &BS(2)).BI028        BRANCH IF SYMBOLIC
         AIF   ('&TEND'(1,3) EQ '(4)').BI032 ALREADY IN R4
         LR    5,&TEND .         SET PTR TO TABLE END
         AGO   .BI032
.BI028   ANOP
         L     4,&TEND .         SET PTR TO TABLE END
.BI032   ANOP
         AIF   (NOT &BS(4)).BI036 IN SYMBOLIC NOTATION
         AIF   ('&ARG'(1,3) EQ '(2)').BI040 ALREADY IN R2
         LR    2,&ARG .          SET PTR TO SEARCH ARGUMENT
         AGO   .BI040
.BI036   ANOP
         LA    2,&ARG .          SET PTR TO SEARCH ARGUMENT
.BI040   ANOP
         AIF   (NOT &BS(2)).BI041          BRANCH IF SYMBOLIC
         LR    4,5                         R4 = PTR TO TABEND
.BI041   ANOP
         AIF   (NOT &BS(3)).BI044 BRANCH IF NOT IN REG NOTATION
         LR    6,&AEND .         SAVE PTR TO ABSOLUTE TABLE END PTR
.BI044   ANOP
         CLC   &ARGOF.(&ARGLTH,2),&ENTOF.(3) . NEW ENTRY FOR BEGINNING
         AIF   ('&BUILD' EQ 'NO').BI048    BRANCH IF SEARCH ONLY
         BL    MLMB&SYSNDX .               BRANCH IF YES
         AGO   .BI052
.BI048   ANOP
         BL    MLMG&SYSNDX .               BRANCH IF YES
.BI052   ANOP
MLMA&SYSNDX   DS    0H .
         LR    1,4 .             TMID = PTR TO END POLE
         SR    1,3 .             TMID = END POLE - BEGIN POLE
         SRL   1,5 .              TMID = (BEGIN-END)/(2 * ENTLTH)
         SLL   1,4 .              ROUND MID-PT OFFSET TO A MULTIPLE
*                                  OF THE LENGTH OF AN ENTRY
         AR    1,3 .             TMID = PTR TO MID ENTRY
         CLC   &ARGOF.(&ARGLTH,2),&ARGOF.(1) .CHECK FOR REQUIRED ENTRY
         BE    MLMF&SYSNDX .            BRANCH IF ENTRY FOUND
         CR    3,1 .             BEGIN = MID POLE
.*
         AIF   ('&BUILD' EQ 'NO').BI064 BRANCH IF INSERTION NOT REQ'D
.*
         BE    MLMC&SYSNDX .       BRANCH IF YES -> NEW ENTRY REQUIRED
.*
         AGO   .BI068
.*
.BI064   ANOP
.*
         BE    MLMG&SYSNDX .        BRANCH IF YES -> NEW ENTRY REQUIRED
.*
.BI068  ANOP
.*
         CLC &ARGOF.(&ARGLTH,2),&ENTOF.(1) COMPARE ARGUMENT TO ENTRY
*                                        MID POINT
         BL    MLMD&SYSNDX .         BRANCH IF ARGUMENT IS LOW
*
         LR    3,1 .         NEW BEGIN POLE = CURRENT MID POLE
         B     MLMA&SYSNDX .        LOOK AT NEXT ENTRY
MLMD&SYSNDX      DS    0H .                ARGUMENT COMPARED LOW
         LR    4,1 .           NEW END POLE = CURRENT MID POLE
         B     MLMA&SYSNDX .       LOOK AT NEXT ENTRY
.*
         AIF   ('&BUILD' EQ 'NO').BI418  BRANCH IF NOT BUILD OPERATION
*
*        AT THIS POINT WE KNOW THAT A NEW ENTRY IS TO BE INSERTED INTO
*    THE TABLE.
*
.*
MLMC&SYSNDX     DS    0H .
         LA    3,&ENTLTH.(3) .         ADJUST PTR FOR ENTRY INSERTION
.*
MLMB&SYSNDX     DS    0H .
.*
*
*     HERE TBEG POINTS TO THE TABLE LOCATION WHERE THE ENTRY IS TO BE
*    INSERTED. WE MUST, HOWEVER, CHECK TO MAKE SURE THERE IS ROOM FOR
*    BEFORE ATTEMPTING TO INSERT IT.
*
         AIF   (&BS(2)).BI404     TEND IN REG NOTATION
         L     4,&TEND .          GET PTR TO CURRENT END OF TABLE
         AGO   .BI408
.BI404   ANOP
         LR    4,5 .              GET PTR TO CURRENT TABLE END
.BI408   ANOP
         AIF   (&BS(3)).BI412     AEND IN REG NOTATION
         C     4,&AEND .         IS THERE ROOM FOR ANOTHER ENTRY
         AGO   .BI416
.BI412   ANOP
         CR    4,6               IS THERE ROOM FOR ANOTHER ENTRY
.BI416   ANOP
         BE    &FULL .        BRANCH IF NOT
         LA    1,&ENTLTH.(4) .         UPDATE POINTER TO
         ST    1,@MAEND .            NEW TABLE END
         LA    1,&ENTLTH .             TMID = ENTRY LENGTH
MLME&SYSNDX   DS    0H .
*
*        IN ORDER TO MAKE ROOM FOR THE NEW ENTRY WE MUST NOW SHIFT ALL
*    EXISTING TABLE ENTRIES UP ONE ENTRY IN THE TABLE FROM THE POINT OF
*    INSERTION TO THE END OF THE TABLE.
*
         MVC   &ENTLTH.(&ENTLTH,4),0(4) . MOVE AN ENTRY UP
*                                                 ONE TABLE SLOT
         SR    4,1 .             BACK UP ONE ENTRY
         CR    4,3 .             HAVE WE MOVED ALL ENTRIES YET
         BNL   MLME&SYSNDX .       BRANCH IF NOT
         LM    5,6,40(13) .        RESTORE REGS
         B     MLMG&SYSNDX .       EXIT
.BI418   ANOP
MLMF&SYSNDX DS    0H .
         LM    5,6,40(13) .        RESTORE REGISTERS
         AIF   (&BS(7)).BI420      BRANCH IF FOUND ROUTINE PRESENT
         SR    15,15 .             SET ZERO CONDITION CODE
         LTR   15,15 .             SET HARDWARE CODE
         AGO   .BI500
.BI420   ANOP
         B     &FOUND .            GO TO FOUND ROUTINE
.BI500   ANOP
MLMG&SYSNDX DS 0H .
         AIF   ('&BUILD' EQ 'YES').EXIT
         LM    5,6,40(13) .        RESTORE REGS
         MEXIT
.E1      MLMERR 16,1,DESC=TBEG TBEG NOT SPECIFIED
         MEXIT
.E2      MLMERR 16,1,DESC=TEND TEND NOT SPECIFIED
         MEXIT
.E3      MLMERR 16,2,DESC=BUILD INVALID 'BUILD' SPECIFICATION
         MEXIT
.E4      MLMERR 16,1,DESC=AEND AEND NOT SPECIFIED BUT REQUIRED
         MEXIT
.E5      MLMERR 16,1,DESC=FULL FULL REQUIRED FOR 'BUILD' FUNCTION
         MEXIT
.E6      MNOTE  16,'&ENTLTH. IS NOT SELF-DEFINING'
         MEXIT
.E7      MLMERR 16,1,DESC=ARG  ARG OPERAND REQUIRED
         MEXIT
.E8      MNOTE  16,'TMID NOT SPECIFIED IN REGISTER NOTATION'
         MEXIT
.E9      MLMERR 16,2,DESC=SEQ SEQUENCE OPERAND INVALID
         MEXIT
.E10     MLMERR 16,2,DESC=COMPARE COMPARE OPERAND INVALID
         MEXIT
.E11     MNOTE  16,'ARGOF OPERAND NOT SELF-DEFINING'
         MEXIT
.E12     MNOTE  16,'ENTOF OPERAND NOT SELF-DEFINING'
         MEXIT
.E13     MLMERR 16,1,DESC=ARGLTH ARGLTH REQUIRED BUT NOT SPECIFIED
         MEXIT
.E14     MNOTE  16,'ARGLTH OPERAND NOT SELF-DEFINING'
         MEXIT
.EXIT    MEXIT
         MEND
         SPACE 1
         PUNCH '  ORDER RELINKER(P) '  EASIER DUMP READING      GP10113
         PRINT NOGEN                                            GP10049
RELINKER START 0             GET RID OF BLANK CSECT             GP10113
         USING SAVE,R13                                         GP10113
         B     BEGIN-*(,R15)                                    GP10113
         DC    AL1(17),C'RELINKER &SYSDATE'                     GP10113
BEGIN    STM   R14,R12,SAVE14     SAVE CALLER'S REGISTERS       GP10113
         LA    R11,0(,R15)    REMOVE AM BIT                     GP10113
         LA    R12,2048                                         GP10113
         LA    R12,2048(R12,R11)                                GP10113
         USING RELINKER,R11,R12                                 GP10113
         L     R10,=A(ZZRELCOM)   LOAD COMMON AREA ADDRESS      GP10113
         USING ZZRELCOM,R10                                     GP10113
         LR    R9,R1         PRESERVE R1 (LOSE R14-R0)          GP10113
         L     R14,=A(SAVEEND-SAVE)                             GP10113
         ST    R14,SAVEFWD   TEMP: LEN INTO OLD SAVE AREA       GP10113
         GETMAIN RU,LV=(R14),BNDRY=PAGE                         GP10113
         LR    R14,R1        SAVE OVER CLEAR                    GP10113
         SR    R15,R15       ZERO SOURCE LENGTH AND INSERTION   GP10113
         LR    R0,R14        SET CLEAR ADDRESS                  GP10113
         L     R1,SAVEFWD    GET SAVED LENGTH                   GP10113
         MVCL  R0,R14        CLEAR GOTTEN STORAGE               GP10113
         MVC   SAVESPLN-SAVE(4,R14),SAVEFWD  SET FOR EXIT       GP10113
         ST    R14,SAVEFWD   MAKE FOWARD SAVE AREA LINK         GP10113
         ST    R13,SAVE13-SAVE(,R14)    MAKE BACKWARD LINK      GP10113
         LR    R13,R14       ESTABLISH NEW SAVE AREA            GP10113
         SPACE 1
         MVI   MSGBUF-1,C' '      PREP FOR EASY CLEAR           GP10113
         MVC   MSGBUF,MSGBUF-1    CLEAR PUNCH OUTPUT            GP10113
         MVI   CNTCRD-1,C' '      PREP FOR EASY CLEAR           GP10113
         MVC   CNTCRD,CNTCRD-1    CLEAR PUNCH OUTPUT            GP10113
         LA    R0,SEGBFTBL              R9 -> START OF SEGTAB   GP10113
         ST    R0,SEGBFBEG              RETURN TABLE ADDRESS    GP10113
         LA    R0,CESDTBL               ESD NAME/ID TABLE       GP10113
         ST    R0,CESDADR               RETURN TABLE POINTER    GP10113
         ZAP   JOBNO,=P'0'              INITIALIZE JOB NUMBER   GP10113
         ZAP   CARDNUM,=P'0'      SEQUENCES SYSPUNCH CARDS      GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK PARM FIELD AND PRESERVE FOR OPTION FLAG SETTINGS            *
*   HANDLE DD NAME SUBSTITUTION LIST.                                 *
*---------------------------------------------------------------------*
         TM    0(R9),X'80'   SINGLE PARM?                       GP14263
         BNZ   NODDRIDE        YES; NO DD OVERRIDE              GP14263
         TM    4(R9),X'80'   MORE THAN TWO ENTRIES?             GP14263
         BZ    NODDRIDE        MAY BE TSO?                      GP14263
         L     R15,4(,R9)    GET DD LIST                        GP14263
         LH    R1,0(,R15)    LOAD LIST LENGTH                   GP14263
         LTR   R1,R1         ANY ?                              GP14263
         BZ    NODDRIDE        NO; IGNORE EMPTY LIST            GP14263
         LA    R1,0(R1,R15)  LIST END - 2                       GP14263
         LA    R0,8          LOAD INCREMENT                     GP14263
         LA    R15,2(,R15)   SPACE TO FIRST DD NAME             GP14263
         LA    R14,=X'0,0,0,0,1,2,0,3,4,FF'      OVERRIDE CODES GP14263
LOOPDDL  TM    0(R14),X'FF'  SIGNIFICANT ENTRY?                 GP14263
         BZ    BUMPDDL       00 - IGNORE                        GP14263
         BO    NODDRIDE      FF - END OF INTERESTING DDS        GP14263
         CLI   0(R15),0      OVERRIDE DD ?                      GP14263
         BE    BUMPDDL         NO                               GP14263
         SR    R2,R2                                            GP14263
         IC    R2,0(,R14)    GET DD INDEX                       GP14263
         SLL   R2,2          CONVERT TO OFFSET                  GP14263
         L     R2,MYDDL-4(R2)     GET POINTER                   GP14263
         CLC   OFDDNAME(L'OFDDNAME,R2),0(R15)                   GP14263
         BE    SAMEDDL                                          GP14263
         OI    OPTFLAG3,OFDDL     REMEMBER THE OVERRIDE         GP14263
SAMEDDL  MVC   OFDDNAME(L'OFDDNAME,R2),0(R15)                   GP14263
         L     R3,OFDDDCB(,R2)                                  GP14263
         N     R3,=X'00FFFFFF'                                  GP14263
         MVC   DCBDDNAM-IHADCB(L'DCBDDNAM,R3),0(R15) MOVE       GP14263
         B     BUMPDDL                                          GP14263
MYDDL    DC    A(DDSYN,DDPRT,DDUT1,DDUT2)                       GP14263
BUMPDDL  LA    R14,1(,R14)   NEXT CONTROL FLAG                  GP14263
         BXLE  R15,R0,LOOPDDL     LOOP THROUGH USER'S LIST      GP14263
         SPACE 1
NODDRIDE L     R15,=A(ZZRJOBLD)   BUILD THE JOB CARD            GP10113
         BALR  R14,R15            WRITE MESSAGE                 GP10113
         L     R9,0(,R9)                PTR T0 PARM BUFFER      GP10113
         LH    R2,0(,R9)                PARM LENGTH
         LTR   R2,R2                    PARM PRESENT?
         BNP   PARMDONE                 NO PARM PRESENT
         CH    R2,=AL2(L'CNTCRD)        NOT TOO LONG ?          GP10113
         BNH   PARMOK                   OK                      GP10113
         LH    R2,=AL2(L'CNTCRD)        TRUNCATE                GP10113
         WTO   'RELINKER - EXCESSIVE PARM'                      GP10113
*   CONSIDER TERMINATING ?                                      GP10113
         SETCC 4                        SET WARNING             GP10113
PARMOK   BCTR  R2,0                     DECR FOR EXEC
         EX    R2,EXPRMMVC              SAVE THE PARAMETER      GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK TIOT FOR PRESENCE OF REQUIRED AND OPTIONAL DD CARDS         *
*---------------------------------------------------------------------*
PARMDONE L     R3,CVTPTR                CVT                     GP10113
         L     R3,CVTTCBP-CVTMAP(,R3)   TCB TABLE               GP10113
         L     R3,4(,R3)                TCBOLD (CURRENT)        GP10113
         L     R3,TCBTIO-TCB(,R3)       TIOT                    GP10113
         LA    R3,TIOENTRY-TIOT1(,R3)   LOAD PAST TIOT HEADER   GP10113
         ST    R3,ADRTIOT               SAVE TIOT ADDRESS
         LA    R1,DDUT3      FIRST UTILITY DEFINITION           GP14266
         LA    R2,4          CHECK FOR 4 TEMP UTILITY DDs       GP14266
LOOKUTDD L     R15,=A(ZZUTDD99)   UTILITY & ALLOCATE CHECKER    GP14266
         BALR  R14,R15            INVOKE IT                     GP14266
         LA    R1,DDUT6-DDUT5(,R1)    DO NEXT DD                GP14266
         BCT   R2,LOOKUTDD   DO ALL FOUR                        GP14266
         SPACE 1
*---------------------------------------------------------------------*
*    LOOP THROUGH TIOT TO SEE WHAT DD CARDS ARE PRESENT
*
         USING TIOENTRY,R3                                      GP10113
*DONE*   SR    R2,R2                                            GP10113
LOOPTIOT ICM   R2,1,TIOELNGH            GET ENTRY LENGTH        GP10113
         BZ    DONETIOT                 YES
         LA    R15,DDLIST    POINT TO LIST OF WANTED DD NAMES   GP10113
         LA    R0,(DDLISTN-DDLIST)/(DDUT6-DDUT5)  NO. OF DDS    GP10113
LOOPTIDD CLC   TIOEDDNM,OFDDNAME(R15)   WANTED DD?              GP10113
         BNE   BUMPTIDD                                         GP10113
         OC    DDFLAGS,OFDDFLAG(R15)    SHOW DD FOUND           GP10113
         B     BUMPTIOT                 DO NEXT TIOT            GP10113
BUMPTIDD LA    R15,DDUT6-DDUT5(,R15)    DO NEXT DD              GP10113
         BCT   R0,LOOPTIDD                AND CHECK IT          GP10113
BUMPTIOT AR    R3,R2                    BUMP                    GP10113
         B     LOOPTIOT                 TEST NEXT ENTRY
         DROP  R3                                               GP10113
         SPACE 1
DONETIOT TM    DDFLAGS,DDFPRT     SYSPRINT FOUND ?              GP10113
         BZ    FAILPRT            NO; ISSUE MESSAGE             GP10113
         OPEN  (SYSPRINT,(OUTPUT))      OPEN SYSPRINT
         TM    SYSPRINT+DCBOFLGS-IHADCB,DCBOFOPN   OPENED ?     GP10113
         BO    HAVEPRT                  YES                     GP10113
FAILPRT  WTO   'ZZR000E SYSPRINT DD NOT USABLE'                 GP10113
         SETCC 16                       SET RETURN CODE TO 16
         B     PGMEXERR                 GOTO END OF JOB         GP10113
         SPACE 1                                                GP10113
*---------------------------------------------------------------------*
*   PROCESS PARM OPTIONS                                              *
*---------------------------------------------------------------------*
HAVEPRT  LA    R1,CNTCRD     FIRST COLUMN TO SCAN               GP10113
         BAL   R14,SETOPTS   PROCESS OPTIONS                    GP10113
         MVC   CNTCRD,CNTCRD-1    CLEAR AGAIN                   GP10113
         TM    OPTFLAG3,OFDDL     DD OVERRIDES PROCESS?         GP14263
         BZ    NODDLMSG             NO                          GP14263
         MSGMID MIDINOUT,DDSYN,DDPRT                            GP14263
         SPACE 1                                                GP10113
*---------------------------------------------------------------------*
*   DETERMINE EXECUTION MODE                                          *
*     WHEN SYSPUNCH IS PRESENT, PRODUCE JCL AND CONTROL CARDS         *
*     OTHERWISE INVOKE LINKAGE EDITOR (BINDER), BUT NEED MORE DDS:    *
*       SYSUT5, SYSUT6, SYSLOUT (PLUS INDD AND OUTDD CHECKED LATER)   *
*---------------------------------------------------------------------*
NODDLMSG TM    DDFLAGS,DDFPUN     HAVE SYSPUNCH (EVEN IF DUMMY?)
         BZ    NOTPUNCH             NO; CHECK OTHER DDS         GP10113
         LA    R1,DDPUN             TRY TO OPEN IT              GP10113
         BAL   R14,OPENOUT          OPEN FOR OUTPUT             GP10113
         TM    DDFLAGS,DDFUT3     HAVE SYSUT3?                  GP10113
         BNZ   OPENCOMM             OK?                         GP10113
         MSGMID MIDNOUT3          WARN USER                     GP10113
         B     OPENCOMM             OPEN COMMON FILES           GP10113
         SPACE 1
NOTPUNCH OI    LEFLAG,X'F0'             LIVE LINKING - NO PUNCH GP10113
         LA    R1,DDUT5                 NEED SYSUT5             GP10113
         BAL   R14,NEEDDD               CHECK IT                GP10113
         LA    R1,DDUT6                 NEED SYSUT6             GP10113
         BAL   R14,NEEDDD               CHECK IT                GP10113
         LA    R1,DDLOUT                NEED SYSLOUT            GP10113
         BAL   R14,NEEDDD               CHECK IT                GP10113
         B     OPENCOMM                 DO COMMON DDS           GP10113
         SPACE 1
OPENINP  MVI   OCLIST,X'80'  BUILD OPEN INPUT LIST              GP10113
         B     OPENBOTH                                         GP10113
OPENOUT  MVI   OCLIST,X'8F'  BUILD OPEN OUTPUT                  GP10113
OPENBOTH MVC   MSGPARM1,OFDDNAME(R1)   SAVE DD NAME             GP10113
         MVC   DB(1),DDFLAGS           GET DD PRESENT FLAGS     GP10113
         NC    DB(1),11(R1)            MASK WITH DESIRED FLAG   GP10113
         BZ    MISSDD                  FAIL WITH MESSAGE        GP10113
         MVC   OCLIST+1(3),OFDDDCB+1(R1)    SET DCB ADDRESS     GP14263
         OPEN  MF=(E,OCLIST) OPEN IT                            GP10113
         L     R15,OCLIST    LOAD DCB ADDRESS                   GP13239
         TM    DCBOFLGS-IHADCB(R15),DCBOFOPN   OPENED ?         GP10113
         BOR   R14           YES; RETURN                        GP10113
         SPACE 1
OPENFAIL MSGMID MIDOPNER                SHOW OPEN ERROR         GP10113
         SETCC 16                       SET RETURN CODE TO 16
         B     PGMEXERR                 GOTO END OF JOB
         SPACE 1
NEEDDD   MVC   DB(1),DDFLAGS           GET DD PRESENT FLAGS     GP10113
         NC    DB(1),OFDDFLAG(R1)      MASK WITH DESIRED FLAG   GP10113
         BNZR  R14                     RETURN PRESENT           GP10113
         MVC   MSGPARM1,OFDDNAME(R1)   SVE DD NAME              GP10113
MISSDD   MSGMID MIDDDMIS               DD MISSING               GP10113
         SETCC 16                       SET RETURN CODE TO 16
         B     PGMEXERR                AND QUIT                 GP10113
         SPACE 1
EXPRMMVC MVC   CNTCRD(0),2(R9)          SAVE PARM STRING        GP10113
         SPACE 1
OPENCOMM DEVTYPE DCBDDNAM-IHADCB+SYSIN,DB                       GP14266
         BXH   R15,R15,OPENSYN    LET IT FAIL                   GP14266
         CLI   DB+2,0        DD DUMMY ?                         GP14266
         BNE   OPENSYN         NO                               GP14266
*   THIS ADDED CODE MAKES THE RELINKER COMPATIBLE WITH IEBCOPY  GP14266
*   WHEN A SYSIN DD DUMMY IS SUPPLIED.                          GP14266
*                                                               GP14266
         LA    R1,DEFCRD          PASS CARD TO BE USED          GP14266
         MVC   DEFCRD(11),=C' COPY INDD='                       GP14266
         LA    R1,11(,R1)     GET CARD WORK AREA                GP14266
         TM    OPTFLAG2,OFREPL         PARM=REPLACE?            GP14266
         BZ    OPDEFSYN                  NO                     GP14266
         MVC   0(2,R1),=C'(('          USE REPLACE COPY INSTEAD GP14266
         LA    R1,2(,R1)                                        GP14266
OPDEFSYN MVC   0(8,R1),DDUT1      SET INPUT DD                  GP14266
         TRT   0(10,R1),TRTBLANK  FIND A BLANK                  GP14266
         TM    OPTFLAG2,OFREPL         PARM=REPLACE?            GP14266
         BZ    OPDEFSYP                  NO                     GP14266
         MVC   0(4,R1),=C',R))'                                 GP14266
         LA    R1,4(,R1)                                        GP14266
OPDEFSYP MVC   0(7,R1),=C',OUTDD='                              GP14266
         MVC   7(8,R1),DDUT2      DESTINATION DD                GP14266
         OI    CCSWITCH,SYSINEOF       FLAG END OF FILE SYSIN   GP14266
         TM    OPTFLAG1,OFLOTS    LOTS OF OUTPUT?               GP14266
         BZ    OPDEFDO                                          GP14266
         MSGMID MIDIODFL,DDUT1,DDUT2   INFORM OF DEFAULTS       GP14266
OPDEFDO  LA    R2,CCIMAGE              POINT TO CARD BUFFER     GP14266
         LA    R3,L'CCIMAGE            MAX LENGTH               GP14266
         LA    R1,DEFCRD          PASS CARD TO BE USED          GP14266
         LA    R15,L'DEFCRD         AND LENGTH                  GP14266
         MVC   CCIMAGE,CNTCRD          CLEAR TO BLANKS          GP14266
         LA    R14,SYSIN                                        GP14266
         ST    R14,OCLIST                                       GP14266
         OI    OCLIST,X'80'  KEEP CLOSE FROM FAILING            GP14266
         B     OPTLOOKC                                         GP14266
DEFCRD   DC    CL80' '       CONSTRUCTED COPY                   GP14266
         SPACE 1
OPENSYN  LA    R1,DDSYN             TRY TO OPEN IT              GP10113
         BAL   R14,OPENINP          OPEN FOR INPUT              GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   LOOK FOR OPTIONAL *OPTIONS CARD ON SYSIN; SET & SHOW FLAGS        *
*---------------------------------------------------------------------*
         LA    R1,OPTRDEOF             VERY UNEXPECTED          GP10113
         STCM  1,7,DCBEODA-IHADCB+SYSIN   END FILE ON OPTIONS   GP10113
OPTLOOP  TM    CCSWITCH,SYSINEOF       END FILE ?               GP14266
         BNZ   OPTSHOW       YES (SYSIN DD DUMMY)               GP14266
         GET   SYSIN                   GET NEXT STATEMENT       GP10113
         TM    RDRFLAGS,FGRGET         UNLIKE CONCATENATION ?   GP10113
         BZ    OPTLOOF                 NO; CHECK RECFM          GP10113
         NI    RDRFLAGS,255-FGRGET     RESET                    GP10113
         B     OPTLOOP                 REISSUE THE GET          GP10113
OPTLOOF  LA    R2,CCIMAGE              POINT TO CARD BUFFER     GP10113
         LA    R3,L'CCIMAGE            MAX LENGTH               GP10113
         MVC   CCIMAGE,CNTCRD          CLEAR TO BLANKS          GP10113
         LH    R15,DCBLRECL-IHADCB+SYSIN    GET RECORD LENGTH   GP10113
         TM    DCBRECFM-IHADCB+SYSIN,DCBRECF   ONE OF F OR U?   GP10113
         BNZ   OPTLOOKX                YES                      GP10113
         ICM   R15,3,0(R1)             GET REAL (?) LENGTH      GP10113
         SH    R15,=H'4'               DATA LENGTH              GP10113
         LA    R1,4(,R1)               SKIP RDW                 GP10113
OPTLOOKX TM    DCBRECFM-IHADCB+SYSIN,DCBRECCC    ASA OR MCC?    GP10113
         BZ    OPTLOOKC                NEITHER                  GP10113
         BCTR  R15,0                   ADJUST LENGTH            GP10113
         LA    R1,1(,R1)               SKIP CC                  GP10113
OPTLOOKC LTR   R15,R15                 ANYTHING LEFT ?          GP10113
         BNP   OPTLOOP                 NO; IGNORE               GP10113
         CR    R15,R3                  NOT TOO LONG?            GP10113
         BNH   *+6                     YES                      GP10113
         LR    R15,R3                  TRUNCATE                 GP10113
         EX    R15,EXMVCCRD            MOVE CARD IMAGE          GP10113
         CLC   =C'*OPT',CCIMAGE        OPTIONS CONTROL CARD?    GP10113
         BNE   OPTSTACK                NO; STACK FOR RESCAN     GP10113
         MVI   MSGLIST,CTLCD           PRINT CONTROL CARD       GP10113
         MVI   MSGLIST+UP1,CRESET0     CLEAR MSG NUMBER         GP10113
         L     R15,=A(ZZMESAGE)        MESSAGE WRITER           GP10113
         BALR  R14,R15                 PRINT THE CARD           GP10113
         MVC   CNTCRD(71),CCIMAGE
         TRT   CNTCRD(71),TRTBLANK     FIND END OF *OPTIONS     GP10113
         BZ    OPTSKIP                 IGNORE EMPTY CARD        GP10113
         BAL   R14,SETOPTS   PROCESS OPTIONS                    GP10113
OPTSKIP  MVC   CNTCRD,CNTCRD-1         CLEAR AGAIN              GP10113
         B     OPTLOOP                 GET ANOTHER CARD         GP10113
OPTRDEOF OI    CCSWITCH,SYSINEOF       FLAG AS END OF FILE SYSIN
         B     OPTSHOW                 DISPLAY OPTIONS          GP10113
OPTSTACK OI    RDRFLAGS,FGKEEP         REPROCESS THIS CARD      GP10113
         SPACE 1
OPTSHOW  TM    OPTFLAG1,OFBUILD   DOES USER WANT SYSLIB INCLUDE GP10114
         BZ    NOBUILCK             NO; SKIP CHECK              GP10114
         DEVTYPE SYSLIB+DCBDDNAM-IHADCB,DB  HAVE A SYSLIB DD?   GP10114
         BXH   R15,R15,FAILSLIB     NO                          GP10114
         CLI   DB+2,UCB3DACC      DASD DEVICE ?                 GP10114
         BE    OPBUILCK             YES; OPEN IT                GP10114
FAILSLIB MSGMID MIDNOLIB,SYSLIB+DCBDDNAM-IHADCB                 GP10114
         NI    OPTFLAG1,255-OFBUILD    CANCEL BUILD REQUEST     GP10114
         B     NOBUILCK           AND CONTINUE                  GP10114
OPBUILCK OPEN  (SYSLIB)           OPEN IT                       GP10114
         MVC   LIBBLD(4),=H'1,74'   INIT BLDL                   GP10114
         SPACE 1
NOBUILCK L     R1,=A(ZZRSEF)           NORMAL EOF               GP10113
         STCM  1,7,DCBEODA-IHADCB+SYSIN   END FILE ON OPTIONS   GP10113
*  ADD CODE TO DISPLAY OPTION FLAG SETTINGS                     GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   INITIALIZATION FOR SCAN ROUTINE AND CHECKING                      *
*---------------------------------------------------------------------*
         MVI   CPARAMSW,X'08'           FORCE FIRST READ
*OOPS*   MVI   CCSWITCH,X'01'           FIRST SCAN SWITCH       GP14266
         NI    CCSWITCH,SYSINEOF  KEEP EOF FLAG                 GP14266
         OI    CCSWITCH,X'01'     FIRST SCAN SWITCH             GP14266
         LA    R5,DDMBTABL   R5 = PTR TO TABLE WORK AREA        GP10113
         ST    R5,@MDTDD1               START OF INDD TABLE
         ST    R5,@MDTDDC               CURRENT INDD ENTRY      GP10113
         ST    R5,@MDTMB1               START OF DDMBTABL
         ST    R5,@MDTMBN               END OF DDMBTABL
         MVC   0(MASIZE,R5),FFFF   INITIALIZE AS EMPTY          GP10113
         MVI   OUTINFO,C' '       CLEAR DS INFO                 GP10113
         MVC   OUTINFO+1(2*L'INPINFO-1),OUTINFO    CLEAR BOTH   GP10113
         EJECT ,
*---------------------------------------------------------------------*
*   MAIN PROCESSING LOOP: READ NEXT CONTROL CARD GROUP, AND PROCESS   *
*     ALL MEMBERS FOR THAT INDD LIST.                                 *
*---------------------------------------------------------------------*
MAINLOOP L     R15,=A(ZZRESCAN)         GET ADDRESS OF ZZRESCAN GP10113
         BALR  R14,R15                  DO CONTROL CARD SCAN
         SPACE 1
MAINNUDD TM    PROFLAGS,PFFAIL          PRIOR FAILURE MSG ?     GP10113
         BNZ   MAINCONT                 YES                     GP10113
         L     R0,PGMRC                 GET RETURN CODE SO FAR  GP10113
         CH    R0,=H'8'                 HIT THRESHHOLD ?        GP10113
         BL    MAINCONT                 NO                      GP10113
         OI    PROFLAGS,PFFAIL          REMEMBER THE TEST       GP10113
         TM    LEFLAG,X'F0'             RUNNING LIVE ?          GP10113
         BZ    MAINCONT                 NO; CONTINUE            GP10113
         MSGMID MIDGOTST,,,(R0)         ISSUE WARNING           GP10113
         OI    OPTFLAG1,OFTEST          AND GO TO TEST MODE     GP10113
         SPACE 1
MAINCONT BAL   R9,DDSRCH                VERIFY THAT INDD AND OUTDD PRES
         LA    R2,OUTDCB                GET DIRECTORY DCB       GP10113
         ST    R2,OCLIST                BUILD OPEN LIST         GP10113
         OI    OCLIST,X'80'             OPEN INPUT              GP10113
         CLOSE MF=(E,OCLIST)            CLOSE IT                GP10113
         MVC   DCBDDNAM-IHADCB(8,R2),OUTNAME  RESPECIFY DDN     GP10113
         RDJFCB MF=(E,OCLIST)           READ JFCB FOR ENQUE LOGIC     $
         OI    JFCBTSDM,JFCNWRIT+JFCNDSCB+JFCNDCB  KEEP OFF     GP13239
*OLD*    MVC   QENQOUT+2(6),JFCBVOLS    SAVE VOLSER FOR ENQUEUE GP10113
*OLD*    MVC   RENQOUT,JFCBDSNM         SAVE DSNAME FOR ENQUEUE GP10113
         TM    OPTFLAG2,OFDCBS    USE DCBS FOR THIS DD?         GP13239
         BZ    MAINDDBL             NO; NOTHING SPECIAL         GP13239
         OI    OPTFLAG2,OFYDCBS   USE DCBS FOR THIS PDS         GP13239
         ICM   R0,3,JFCBLKSI      HAVE WE A BLOCK SIZE ?        GP13239
         BNZ   MAINDDBL             BLOCK SIZE AVAIL; HONOR     GP13239
         L     R14,=X'C1000000'   CAMLST SEARCH                 GP13239
         LA    R15,JFCBDSNM  POINT TO DATA SET NAME             GP13239
         LA    R0,JFCBVOLS   POINT TO SERIAL                    GP13239
         LA    R1,SEGBFTBL   POINT TO WORK AREA                 GP13239
         STM   R14,R1,DB     MAKE 4-WORD CAMLIST                GP13239
         OBTAIN DB           GET FORMAT 1                       GP13239
         BXH   R15,R15,MAINDDBL    WILL FAIL ANYWAY ?           GP13239
         ICM   R0,3,DS1BLKL-DS1FMTID+SEGBFTBL  PRE-ALLOCATED?   GP13239
         BNZ   MAINDDBL        YES; DCBS EFFICACIOUS            GP13239
MAINNOBL MVC   MSGPARM1,OUTNAME         IDENTIFY BAD DD         GP13239
         MSGMID MIDNDCBS          TELL USER                     GP13239
         ZI    OPTFLAG2,OFYDCBS   AND RESET THE FLAG            GP13239
MAINDDBL OPEN  MF=(E,OCLIST),TYPE=J   OPEN WITHOUT DSCB MODS    GP13239
         TM    OUTDCB+DCBOFLGS-IHADCB,DCBOFOPN                  GP10113
         BNZ   MAINDDED                 OPEN SUCCESSFUL         GP10113
*    OPEN WAS NOT SUCCESSFUL, PUT OUT MESSAGE.
         MVC   MSGPARM1,OUTNAME         IDENTIFY BAD DD         GP10113
MAINDEER MSGMID MIDOEDIR                DIRECTORY ERROR         GP10113
         B     MAINLOOP                 RETURN                  GP10113
         SPACE 1
MAINDDED MVC   OUTINFO(L'JFCBDSNM),JFCBDSNM                     GP10113
         MVC   OUTINFO+L'JFCBDSNM+2(6),JFCBVOLS                 GP10113
         BAL   R7,GETALIAS              BUILD ALIAS TABLE
         SPACE 1
*---------------------------------------------------------------------*
*    GET A MEMBER AND PASS CONTROL TO THE APPROPRIATE PROCESSING      *
*    ROUTINES. INVOKE LINK/COPY, OR BUILD JCL & CONTROL CARDS         *
*---------------------------------------------------------------------*
         LR    R6,R5                    R5=R6 WILL FORCE A READ
         MVC   DIRDCB+DCBEODA-IHADCB(3),=AL3(MEMDIRND)  DIR.END GP10113
         XC    PRVATTR,PRVATTR          CLEAR ATTRIBUTE INDICATORS
         ZAP   STEPNO,=P'0'             SET STEP NO. TO ZERO
         MVI   COPYSW,0                 RESET COPY SWITCH
         LA    R1,0                     CODE = 0 - CLOSE OPEN REQ
         L     R15,=A(ZZROVBLD)         PTR TO ROUTINE          GP10113
         BALR  R14,R15                  DO THE PROCESS
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   MAINLOOP                 NOT ZERO - OPEN FAILED
         SPACE 1
*---------------------------------------------------------------------*
*    SELECT NEXT MEMBER TO PROCESS                                    *
*---------------------------------------------------------------------*
MAINMEMB BAL   R9,MEMRDR                DO READ ROUTINE
         USING PDS2,R6                  DECLARE ENTRY MAPPING   GP10113
         MVC   MEMNAME,PDS2NAME         SAVE THE MEMBER NAME    GP10113
         MVC   MEMBRTTR(3),PDS2TTRP     SAVE TTR OF MEMBER      GP10113
         BAL   R9,TESTMOD               IS MEMBER WANTED?       GP10113
         CLI   MEMNAME,C' '             IS NAME BLANK           GP10113
         BE    MEMINCR                  BLANK - NOT WANTED      GP10113
         XC    DB,DB                    CLEAR MAIN MEMBER       GP10113
         TM    PDS2INDC,PDS2NTTR        OTHER TTRS ?            GP10113
         BZ    HAVNOLOD                 YES; NOT LOAD MODULE    GP10113
         MVC   LKATTR,PDS2ATR           SAVE ATTRIBUTES         GP10113
         XC    PGATTR,PGATTR            CLEAR PROGRAM ATTRIBS   GP10113
         TM    PDS2FTB1,PDSAOSLE        MODERN LINKER ?         GP10113
         BO    HAVMVSDE                   YES                   GP10113
         XC    PDS2FTBO,PDS2FTBO        NO; NEED TO SYNTHESIZE  GP10113
HAVMVSDE MVC   PGATTR(1),PDS2FTB2       RMODE/AMODE FLAGS       GP10113
         LA    R14,PDSS01               POINT PAST FIXED AREA   GP10113
         TM    PDS2ATR1,PDS2SCTR        SCATTER LOADED ?        GP10113
         BZ    *+8                        NO                    GP10113
         LA    R14,PDSS01LN(,R14)       POINT TO ALIAS SECTION  GP10113
         USING PDSS02,R14               DECLARE IT              GP10113
         LR    R15,R14                  POTENTIAL SSI ADDRESS   GP10113
         TM    PDS2INDC,PDS2ALIS        ALIAS ?                 GP10113
         BZ    *+4+6+4                    NO                    GP10113
         MVC   DB,PDS2MNM               SAVE MAIN MEMBER NAME   GP10113
         LA    R15,PDSS02LN(,R15)       SKIP ALIAS DATA         GP10113
         USING PDSS03,R15               DECLARE SSI             GP10113
         LR    R1,R15                   PROVISIONAL APF ADDRESS GP10113
         TM    PDS2FTB1,PDS2SSI         SSI PRESENT ?           GP10113
         BZ    SKIPSSI                    NO                    GP10113
         LA    R15,1(,R15)              ROUND TO HALF-WORD      GP10113
         N     R15,=X'FFFFFFFE'           BOUNDARY              GP10113
         LA    R1,PDSS03LN(,R15)        AND SET APF ADDRESS     GP10113
         MVC   SETSSIBI,PDSSSIWD        SAVE RAW SSI            GP10113
         OI    P2ATTR,MYFSSI            SET SSI PRESENT         GP10113
         USING PDSS04,R1                                        GP10113
SKIPSSI  TM    PDS2FTB1,PDSAPFLG        AUTHORIZED ?            GP10113
         BZ    SKIPAUTH                   NO                    GP10113
         CLI   PDSAPFAC,0               NON-ZERO?               GP10113
         BE    SKIPAUTH                   NO                    GP10113
         OI    P2ATTR,MYFAUTH           SET AC=1                GP10113
SKIPAUTH IC    R4,PDS2INDC              PICK UP INDICATOR BYTE  GP10113
         LA    R0,PDS2LUSR              MASK FOR COUNT          GP10113
         NR    R4,R0                      ISOLATE COUNT         GP10113
         TM    PDS2FTB1,PDS2PAGA        IS MODULE PAGE ALIGNED ?      $
         BNO   MEMNTALI                 NO                      GP10113
         TM    OPTFLAG1,OFNOALI         CANCEL ALIGN ?          GP10113
         BZ    MEMDOALI                 NO; RETAIN              GP10113
         MSGMID MIDMODPA,MEMNAME        SHOW ALIGNMENT RESET    GP10113
         NI    PDS2FTB1,255-PDS2PAGA    RESET ALIGNMENT         GP10113
         B     MEMNTALI                 KEEP ALIGNMENT          GP10113
MEMDOALI OI    P2ATTR,MYFPAGE           YES                           $
MEMNTALI MVC   EPADDR,PDS2EPA           SAVE ENTRY POINT ADDRESS
         SPACE 1
*---------------------------------------------------------------------*
*   IF USER SPECIFIED SELECT WITH AN ALIAS ENTRY, CHECK IF WE HAVE    *
*   THE MAIN MEMBER NAME. IF NOT, IGNORE THE ENTRY (WILL GET MSG).    *
*   OTHERWISE REPLACE THE ALIAS WITH THE MAIN NAME, AND CONTINUE      *
*   SCANNING. IF THE NEW NAME IS LOWER, RESTART AT TOP.               *
*---------------------------------------------------------------------*
         TM    PDS2INDC,PDS2ALIS        IS IT AN ALIAS          GP10113
         BZ    HAVNOLOD                 NO; PROCESS NORMALLY    GP10113
         CLI   DB,0                     FOUND MAIN MEMBER NAME? GP10113
         BNH   HAVPROMO                 NO; PROMOTE TO MAIN MBR GP10113
         ICM   R4,15,DB2                SPECIFIC SELECT ?       GP10113
         BZ    MEMINCR                  NO; IGNORE ENTRY        GP10113
         USING MDSECT,R4                                        GP10113
         MVC   DB2,NEWNAME                                      GP10113
         MVC   NEWNAME,DB                                       GP10113
         BLDL  DIRDCB,BLDLIST           BUILD LIST              GP10113
         MVC   NEWNAME,DB2              RESTORE NEW NAME        GP10113
         LTR   R15,R15                  RETURN CODE ZERO?       GP10113
         BNZ   HAVPROMO                                         GP10113
         OI    MDFLAGS,MDFDONE            FLAG THIS ENTRY DONE  GP10113
         L     R15,@MDTMB1              POINT TO FIRST MEMBER   GP10113
         LA    R0,MDSIZE                  ENTRY SIZE            GP10113
         L     R1,@MDTMBN               AND LAST                GP10113
         DROP  R4
         USING MDSECT,R15
HAVTDUPL CLC   DB,MDNAME                MAIN MEMBER SELECTED?   GP10113
         BE    MEMINCR                  YES; IGNORE THIS ALIAS  GP10113
         BXLE  R15,R0,HAVTDUPL          CHECK ALL               GP10113
         DROP  R15
         USING MDSECT,R4
         MVC   MDNAME,DB                REPLACE ALIAS BY MAIN   GP10113
         MSGMID MIDAL2MB,MEMNAME,DB     TELL USER               GP10113
         CLC   DB,MEMNAME               WAS IT EARLIER IN DIR?  GP10113
         BNL   MEMINCR                  NO; CONTINUE            GP10113
         LR    R6,R5                    FORCE READ              GP10113
         POINT DIRDCB,TTR0010           REREAD DIRECTORY        GP10113
         B     MAINMEMB                                         GP10113
HAVPROMO NI    PDS2INDC,255-PDS2ALIS    TREAT AS MAIN MEMBER    GP10113
         BAL   R9,TESTMOD               PROCESS ALIAS ENTRIES   GP10113
         MSGMID MIDALPRO,PDS2NAME       TELL USER               GP10113
         DROP  R4                                               GP10113
         SPACE 1
HAVNOLOD BAL   R14,MEMPRCSS             DO MEMBER PROCESSING          $
         DROP  R14                                              GP10113
         SPACE 1
MEMINCR  LA    R0,PDS2LUSR              MASK FOR COUNT          GP10113
         IC    R4,PDS2INDC              GET COUNT               GP10113
         NR    R4,R0                    MASK OUT ALIAS/TTR#     GP10113
         SLL   R4,1                     * 2 = # OF BYTES        GP10113
         LA    R6,PDS2USRD(R4)          NEXT ENTRY              GP10113
         B     MAINMEMB                 GET NEXT MEMBER         GP10113
         SPACE 1
*---------------------------------------------------------------------*
*    GET NEXT DIRECTORY BLOCK                                         *
*---------------------------------------------------------------------*
MEMRDR   CR    R6,R5                    END OF BLOCK
         BNL   MREAD                    YES - GET NEXT BLOCK
MEMEND   CLC   PDS2NAME,FFFF            END OF DIRECTORY?       GP10113
         BE    MEMDIRND                 YES - RETURN TO MAINLINE
         BR    R9                       NO - RETURN TO PROCESSING
         DROP  R6                                               GP10113
         SPACE 1
MREAD    LA    R5,DIRBLOCK              GET DIRECTORY BLOCK     GP10113
         READ  DDECB,SF,DIRDCB,(R5)                             GP10113
         CHECK DDECB
         SR    R5,R5                    ZERO R5
         AH    R5,DIRBLOCK              LENGTH OF BLOCK
         LA    R6,DIRBLOCK              START OF BLOCK
         AR    R5,R6                    END OF BLOCK
         LA    R6,2(,R6)                START OF FIRST ENTRY
         B     MEMEND                   CHECK OUT THE ENTRY
         SPACE 1
*---------------------------------------------------------------------*
*    IF WE ARE PROCESSING AN ENTIRE PDS, WE NEED TO LOOK THROUGH THE  *
*    ALIAS TABLE FOR UNPROCESSED ENTRIES AND ISSUE A WARNING MESSAGE  *
*---------------------------------------------------------------------*
MEMDIRND LH    R0,COUNT                 ANY MEMBER SELECTION ?  GP10113
         LTR   R0,R0                                            GP10113
         BNZ   MEMRETCH                 YES; BYPASS CHECK       GP10113
         LM    R3,R4,@MATAB             GET ALIAS TABLE BOUNDS  GP10113
         LR    R5,R4                                            GP10113
         LA    R4,MASIZE                ENTRY SIZE              GP10113
         USING MASECT,R3                                        GP10113
MEMRETLP TM    MAFLAGS,MAFUSED+MAFSKIP  WAS THIS ALIAS USED?    GP10113
         BNZ   MEMRETBX                 YES                     GP10113
         MSGMID MIDWIDOW,MANAME         WRITE MESSAGE           GP10113
         L     R2,@MDTMB1               POINT TO FIRST NAME     GP10113
         USING MDSECT,R2                                        GP10113
         MVC   MDNAME,MANAME                                    GP10113
         OI    MDFLAGS,MDFDONE          FLAG DONE               GP10113
         MVC   NEWNAME,MANAME                                   GP10113
         MVC   MEMNAME,MANAME                                   GP10113
         STM   R3,R4,SARG                                       GP10113
         LA    R6,DIRBLOCK                                      GP10113
         MVC   0(8,R6),MEMNAME                                  GP10113
         XC    ALIPOINT,ALIPOINT                                GP10113
         BAL   R14,COPYMODS             PROCESS                 GP10113
         LM    R3,R4,SARG                                       GP10113
MEMRETBX BXLE  R3,R4,MEMRETLP           AND CHECK ALL           GP10113
         DROP  R2,R3                                            GP10113
         SPACE 1
MEMRETCH CLOSE (SYSUT6)                 CLOSE SYSUT6
         LH    R5,COUNT                 NO. OF ENTRIES IN SELECT TABLE
         LTR   R5,R5                    ANY ENTRIES IN TABLE
         BZ    NOSELECT                 NO - LINK ALL WAS REQUESTED
         LH    R5,ENCT                  R5 = NO. OF SELECT ENTRIES
         LTR   R5,R5                    ENTRIES IN SELECT TABLE
         BZ    NOSELECT                 NO - MUST HAVE BEEN EXCLUDES
         LA    R5,1                     CHEAT                   GP10162
         AH    R5,INDDCUR               DOING LAST?             GP10162
         CH    R5,INDDCT                LAST INPUT DONE ?       GP10162
         BL    NOSELECT                 NO; SKIP UNFOUND        GP10113
         L     R5,@MDTMB1               R5 = PTR TO SELECT TABLE
         USING MDSECT,R5                                        GP10113
CHKSEL   TM    MDFLAGS,MDFDONE+MDFNEWE  PROCESSED OR NEW NAME?  GP10113
         BNZ   SELNEXT                  YES - NO MESSAGE TO WRITE
         MSGMID MIDMBNTF,MDNAME         MEMBER SELECTED BUT NOT FOUND
         SPACE 1
SELNEXT  LA    R5,MDSIZE(,R5)           BUMP TO NEXT ENTRY
         C     R5,@MDTMBN               END OF TABLE ?
         BL    CHKSEL                   NO - GET NEXT ENTRY
         DROP  R5                                               GP10113
         SPACE 1
NOSELECT CLI   ALLSET,X'FF'             READY TO DO LINK?
         BNE   MEMNUDD                  RETURN - NO LINK REQ    GP10113
         MVI   ALLSET,X'00'             RESET SWITCH
         TM    LEFLAG,X'F0'             NEED LINKER FUNCTION?   GP10113
         BNO   PSTCLSE                  NO - DONT DO LINK       GP10113
         TM    OPTFLAG1,OFTEST    TEST MODE ?                   GP10113
         BNZ   MEMNUDD            YES; SKIP THIS                GP10113
*NUTS*   BAL   R14,ENQOUT               ENQ THE FILE TO BE LINKED TO  $
         LINK  EP=IEWL,PARAM=(OPLISTL,DDNMLST),VL=1
         C     R15,PGMRC                                        GP10113
         BNH   *+8                                              GP10113
         ST    R15,PGMRC                SAVE HIGHEST CODE       GP10113
         TM    OPTFLAG1,OFLIST+OFDEBUG  SHOW ANYWAY ?           GP10113
         BNZ   LINKWMSG
         CH    R15,=H'4'     UNRESOLVED ENTRIES?                GP14266
         BNH   LINKWELL        OR GOOD - SKIP MSG               GP14266
LINKWMSG MSGMID MIDRC,'IEWL',MEMNAME,(R15)  SHOW RETURN CODE    GP10113
LINKWELL OI    LEFLAG,X'0F'             LINK-EDIT WAS USED      GP10113
*NUTS*   BAL   R14,DEQOUT               DEQ THE FILE LINKED TO        $
         B     MEMNUDD                  RETURN
         SPACE 1
PSTCLSE  MVC   CNTCRD(2),=C'/*'         MOVE IN DELIMITER
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
MEMNUDD  L     R1,@MDTDDC               GET INDD ADDRESS        GP10113
         LA    R1,MDSIZE(,R1)                                   GP10113
         ST    R1,@MDTDDC               BUMP TO NEXT            GP10113
         LH    R1,INDDCUR               GET INDD INDEX          GP10113
         LA    R1,1(,R1)                                        GP10113
         STH   R1,INDDCUR               BUMP TO NEXT            GP10113
         CH    R1,INDDCT                DONE LAST ?             GP10113
         BL    MAINNUDD                 NO; SKIP                GP10113
         B     MAINLOOP                 RETURN TO MAINLINE      GP10113
         SPACE 1
*---------------------------------------------------------------------*
*    PROCESS MEMBER - LINK, COPY, OR CREATE JCL/CONTROL CARDS         *
*---------------------------------------------------------------------*
MEMPRCSS ST    R14,PROCRTRN             SAVE RETURN ADDRESS           $
         BAL   R9,VERPLC                REPLACE MEMBER ON OUTPUT?
         USING PDS2,R6                  DECLARE ENTRY MAPPING   GP10113
         TM    PDS2INDC,PDS2NTTR        ANY TTRs?               GP10113
         BZ    MEMPRCOP                  NO; NOT LOAD MODULE    GP10113
         DROP  R6                                               GP10113
         TM    LKATTR,PDS2OVLY  OVERLAY ?                       GP10113
         BZ    OFFOVLY       NO; IGNORE                         GP10113
         TM    OPTFLAG1,OFNOOVLY  KEEP OVERLAY ?                GP10113
         BNZ   OFFOVLY       NO; IGNORE                         GP10113
         MVI   OVLYSW,X'FF'  ENABLE OVERLAY PROCESSING          GP10113
         B     TESTIFNE      GO TO NEXT TEST                    GP10113
OFFOVLY  MVI   OVLYSW,0      TURN OVERLAY OFF                   GP10113
         NI    LKATTR,255-PDS2OVLY  DITTO IN ATTRIBUTES         GP10113
         TM    LKATTR,PDS2OVLY          OVERLAY PRESENT?
         BO    TESTIFNE                 YES - LEAVE SW ON             $
         MVI   OVLYSW,X'00'             NO OVERLAY - TURN SW OFF
*   N.B.: CODE HAS BEEN ADDED TO RELINK PAGE ALIGNED MODULES, SO THE
*     TEST IS NO LONGER REQUIRED OR PERFORMED                   GP10113
TESTIFNE TM    LKATTR+1,PDS2NREP        IS MODULE MARKED N.E.   GP10113
         BO    NEMSG                    BRANCH IF YES; JUST COPY
         LA    R1,4                     CODE 4 - REQ TO BUILD TABLES
         L     R15,=A(ZZROVBLD)         PTR TO ROUTINE          GP10113
         BALR  R14,R15                  DO PROCESS
         CLI   CSCTNAME,C' '            IS NAME BLANK
         BE    COPYMODI                 YES - RETURN NAME NOT FOUND
         BAL   R9,PARMGEN               SET UP LINK OPTIONS
         TM    LEFLAG,X'F0'             INVOKE LINKAGE EDITOR   GP10113
         BNZ   INVOKELE                 YES - SKIP PAST JCL GEN GP10113
         BAL   R9,JCLGENR               GENERATE THE JCL
         B     PRCSSEND                 RETURN
         SPACE 1
INVOKELE CLI   ALLSET,X'FF'             EVERYTHING ALREADY SET UP
         BE    SYSUT6OP                 YES; DON'T DO AGAIN
         MVC   DDENTR3,OUTNAME          MOVE OUTDDN FOR LKED LIST
         MVI   ALLSET,X'FF'             SET SET-UP SW = ON
         OPEN  (SYSUT6,OUTPUT)
         TM    SYSUT6+DCBOFLGS-IHADCB,DCBOFOPN          OPEN OK
         BO    SYSUT6OP                 YES - CONTINUE
         MVC   MSGPARM1,DDUT6           SHOW SYSUT6 OPEN FAILED GP10113
         B     OPENFAIL                 PRODUCE MESSAGE AND TERMINATE
         SPACE 1
SYSUT6OP BAL   R4,CONTGEN               GENERATE CONTROL CARDS
         B     PRCSSEND                 RETURN
         SPACE 1
MEMPRCOP MSGMID MIDNOLOD,MEMNAME        SHOW NOT A LOAD MODULE  GP10113
         B     COPYMODI                                         GP10113
         SPACE 1
NEMSG    MSGMID MIDMODNE,MEMNAME        SET NE MESSAGE          GP10113
         B     COPYMODI                                         GP10113
         SPACE 1
COPYMODS ST    R14,PROCRTRN             SAVE RETURN ADDRESS     GP10113
COPYMODI TM    DDFLAGS,DDFUT3           SYSUT3 DD CARD PRESENT  GP10113
         BZ    PRCSSEND                 NO - CAN'T DO COPY      GP10113
         TM    SYSUT3+DCBOFLGS-IHADCB,DCBOFOPN  IS SYSUT3 OPEN? GP10113
         BO    GENCOPY                  YES - GO GEN COPY CARD
         OPEN  (SYSUT3,OUTPUT)          OPEN IEBCOPY FILE
         TM    SYSUT3+DCBOFLGS-IHADCB,DCBOFOPN  OPEN NOW?       GP10113
         BZ    PRCSSEND                 NO; IGNORE              GP10113
         SPACE 1
GENCOPY  CLI   COPYSW,X'FF'             COPY CARD PUNCHED YET
         BE    SELGEN                   BRANCH IF YES - NEED SELECT
         OI    PROFLAGS,PFUT3           REMEMBER UT3 OUTPUT     GP10113
         MVI   COPYSW,X'FF'             SHOW COPY CARD GEN'D
         TM    LEFLAG,X'F0'             INVOKING LINKER?        GP10113
         BO    SKIPCOCD                 YES; DON'T NEED JCL     GP10113
         MVC   CNTCRD(L'JOBCARD),JOBCARD                        GP10113
         MVC   CNTCRD+4(3),=C'COP'                              GP10113
         UNPK  CNTCRD+7(3),JOBNO        PLACE JOB NUMBER        GP10113
         OI    CNTCRD+9,X'F0'           ENSURE VALID SIGN       GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
      MVC CNTCRD(46),=C'//REST EXEC PGM=IEBCOPY,REGION=1024K,TIME=1439'
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   CNTCRD(L'LESYSOUT),LESYSOUT                      GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   CNTCRD(L'LESYSUT5),LESYSUT5                      GP10113
         MVI   CNTCRD+7,C'3'                                    GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   CNTCRD(L'LESYSUT5),LESYSUT5                      GP10113
         MVI   CNTCRD+7,C'4'                                    GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   PDSDCB+DCBDDNAM-IHADCB(8),OUTNAME  MOVE DDNAME TO DCB
         RDJFCB (PDSDCB)                 READ JFCB              GP10113
         MVC   CNTCRD(L'LESYSLMD),LESYSLMD MOVE IN BASIC SYSLMOD DD
         MVC   CNTCRD+2(8),OUTNAME                              GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         LD    F2,OUTNAME               FPR2 = DDNAME           GP10113
         BAL   R4,UNITGEN               DO UNIT LOOK-UP         GP10113
         L     R4,UNITAB(R1)            PTR TO UNIT TEXT        GP10113
         MVC   CNTCRD(24),0(R4)         MOVE IN UNIT TEXT       GP10113
         MVC   CNTCRD+24(9),=C',VOL=SER=' MOVE IN BASIC VOLUME TEXT
         LD    F2,OUTNAME               FLPR2 = DDNAME          GP10113
         BAL   R4,VOLGEN                DO VOLUME LOOK-UP       GP10113
         MVC   CNTCRD+33(6),VOLSER      INSERT VOL ID           GP10113
         MVI   CNTCRD+39,C','           CONTINUE INDICATION     GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   CNTCRD(L'LEDSNAME),LEDSNAME MOVE IN DSNAME PARAMETER
         MVC   CNTCRD+22(44),JFCBDSNM   INSERT DSN              GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         L     R3,@MDTDDC               START OF TABLE          GP10113
         MVC   PDSDCB+DCBDDNAM-IHADCB(8),MDNAME-MDSECT(R3) INDD NAME
         RDJFCB (PDSDCB)                READ JFCB               GP10113
         MVC   CNTCRD(L'LEINPUT),LEINPUT BASIC INPUT TEXT       GP10113
         MVC   CNTCRD+2(8),MDNAME-MDSECT(R3)  INDD NAME         GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   DB,2(R3)                 MOVE TO DW BOUNDRY      GP10113
         LD    F2,DB                    FLPR2 = DDNAME          GP10113
         BAL   R4,UNITGEN               DO UNIT LOOK-UP         GP10113
         L     R4,UNITAB(R1)            GET PTR TO UNIT TEXT    GP10113
         MVC   CNTCRD(24),0(R4)         MOVE IN UNIT TEXT       GP10113
         MVC   CNTCRD+24(9),=C',VOL=SER=' SET UP BASIC VOL TEXT GP10113
         MVC   DB,2(R3)                 MOVE TO DW BOUNDRY      GP10113
         LD    F2,DB                    FLPR2 = DDNAME          GP10113
         BAL   R4,VOLGEN                GET VOL ID              GP10113
         MVC   CNTCRD+33(6),VOLSER      VOL ID                  GP10113
         MVI   CNTCRD+39,C','           CONTINUE INDICATION     GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         MVC   CNTCRD(L'LEDSNAME),LEDSNAME BASIC DSNAME TEXT    GP10113
         MVC   CNTCRD+22(44),JFCBDSNM   DSNAME                  GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
SKIPCOCD MVC   CNTCRD(L'COPYBASE),COPYBASE MOVE BASIC COPY TEXT
         L     R2,@MDTDDC               POINT AT INDD TABLE
         MVC   CNTCRD+15(8),MDNAME-MDSECT(R2)  INPUT DDNAME     GP10113
         TRT   CNTCRD+15(9),TRTBLANK    FIND BLANK              GP10113
         MVC   0(7,R1),=C',OUTDD='      MOVE IN OUTDD TEXT      GP10113
         MVC   7(8,R1),OUTNAME          MOVE IN OUTPUT DDNAME   GP10113
         BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         SPACE 1
SELGEN   MVC   CNTCRD(L'SELECT),SELECT  MOVE BASIC SELECT TEXT
         CLC   NEWNAME,MEMNAME          RENAME OPTION?          GP10113
         BNE   SELGREN                  YES; LONG FORM          GP10113
         CLI   REPLACE,X'FF'            REPLACE OPTION SPECIFIED
         BNE   SELGNAM                  BRANCH IF NOT
         MVC   CNTCRD+27(2),=C'(('      SET UP REPLACE FORMAT
         MVC   CNTCRD+29(8),MEMNAME     MOVE IN MEMBER NAME
         TRT   CNTCRD+30(9),TRTBLANK    FIND BLANK              GP10113
         MVC   0(5,R1),=C',,R))'        SET REPLACE OPTION      GP10113
         B     PUTSEL                   PUNCH OUT SELECT CARD
SELGREN  MVC   CNTCRD+27(2),=C'(('      SET UP REPLACE FORMAT
         MVC   CNTCRD+29(8),MEMNAME     MOVE IN MEMBER NAME
         TRT   CNTCRD+30(9),TRTBLANK    FIND BLANK              GP10113
         MVI   0(R1),C','                                       GP10113
         MVC   1(8,R1),NEWNAME          SPECIFY NEW NAME        GP10113
         TRT   1(9,R1),TRTBLANK         FIND END OF NAME        GP10113
         MVC   0(2,R1),=C'))'           NORMAL END              GP10113
         CLI   REPLACE,X'FF'            REPLACE OPTION ?        GP10113
         BNE   PUTSEL                   BRANCH IF NOT           GP10113
         MVC   0(4,R1),=C',R))'         APPEND                  GP10113
         B     PUTSEL                   PUNCH OUT SELECT CARD
         SPACE 1
SELGNAM  MVC   CNTCRD+27(8),MEMNAME     PLACE MEMBER NAME ON CARD
PUTSEL   BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         ICM   R3,15,ALIPOINT           ANY ALIAS ENTRIES ?     GP10113
         BZ    PRCSSEND                 NO; DONE                GP10113
         USING MASECT,R3                                        GP10113
SELGALI  TM    MAFLAGS,MAFSKIP          IGNORE ?                GP10113
         BNZ   SELGBMP                  YES; BYPASS             GP10113
         MVC   CNTCRD(L'SELECT),SELECT  MOVE BASIC SELECT TEXT  GP10113
         CLI   REPLACE,X'FF'            REPLACE OPTION SPECIFIED
         BE    SELGALIR                 BRANCH IF SO            GP10113
         TM    MAFLAGS,MAFREN           RENAME ?                GP10113
         BNZ   SELGALIR                 YES; USE LONG FORM      GP10113
         MVC   CNTCRD+27(8),MANAME      MOVE IN ALIAS NAME      GP10113
         B     SELGPUT                  SIMPLE SELECT           GP10113
SELGALIR MVC   CNTCRD+27(2),=C'(('      SET UP REPLACE FORMAT   GP10113
         MVC   CNTCRD+29(8),MANAME      MOVE IN ALIAS NAME      GP10113
         TM    MAFLAGS,MAFREN           RENAME ?                GP10113
         BZ    SELGALIP                 NO                      GP10113
         L     R14,MAMDENT              GET MAIN ENTRY          GP10113
         OI    MDFLAGS-MDSECT(R14),MDFDONE  SHOW ENTRY USED     GP10113
         MVC   CNTCRD+29(8),MDNAME+MDSIZE-MDSECT(R14)  RENAME   GP10113
         TRT   CNTCRD+30(9),TRTBLANK    FIND BLANK              GP10113
         MVC   0(2,R1),=C'))'           SHORT FORM              GP10113
         CLI   REPLACE,X'FF'            REPLACE OPTION SPECIFIED
         BNE   SELGPUT                  BRANCH IF NOT           GP10113
         MVC   0(4,R1),=C',R))'         LONG FORM               GP10113
         B     SELGPUT                  PUNCH IT                GP10113
SELGALIP TRT   CNTCRD+30(9),TRTBLANK    FIND BLANK              GP10113
         MVC   0(5,R1),=C',,R))'        SET REPLACE OPTION      GP10113
SELGPUT  BAL   R14,PUNCHCOP             PUNCH COPY CARD         GP10113
         SPACE 1
SELGBMP  CLC   MATTR,MATTR+MASIZE       IS NEXT TTR THE SAME?   GP10113
         BNE   PRCSSEND      BRANCH IF NO - ALIAS COMPLETE      GP10113
         LA    R3,MASIZE(,R3)           DO NEXT                 GP10113
         B     SELGALI                  GO GENERATE SELECT CARD GP10113
         DROP  R3                                               GP10113
         SPACE 1
PRCSSEND L     R14,PROCRTRN             RESTORE RETURN ADDRESS        $
         BR    R14                      RETURN                        $
         SPACE 1
*---------------------------------------------------------------------*
*    CHECK WHETHER CURRENT MEMBER, READ SEQUENTIALLY IN THE INDD      *
*    DIRECTORY, IS TO BE PROCESSED.                                   *
*    1) YES IF NEITHER SELECT NOR EXCLUDE SPECIFIED                   *
*    2) YES IF MEMBER IS ON THE SELECT LIST                           *
*    3) YES IF MEMBER IS NOT ON THE EXCLUDE LIST                      *
*      FOR SELECTED MEMBER, SET POINTER TO FIRST ALIAS OR SET=0       *
*---------------------------------------------------------------------*
TESTMOD  L     R2,@MDTDDC               START OF TABLE (INDD)
         L     R4,@MDTMB1               POINT TO FIRST ENTRY IN TABLE
         XC    ALIPOINT,ALIPOINT        CLEAR FIRST ALIAS       GP10113
         XC    DB2,DB2                  CLEAR ENTRY ADDRESS     GP10113
         MVI   REPLACE,X'00'            INIT TO 0
         MVC   NEWNAME,MEMNAME          NO RENAME, YET          GP10113
         LH    R0,COUNT                 # ENTRIES IN DDMBTABL   GP10113
         LTR   R0,R0                    NO ENTRIES = FULL LINK  GP10113
         BZ    TESTALL                  BRANCH IF FULL LINK     GP10113
         LH    R0,ENCT                  # OF EXCLUDE ENTRIES    GP10113
         LTR   R0,R0                    IS IT EXCLUSIVE LINK    GP10113
         BNZ   TESTSEL                  NO - IT IS SELECTIVE    GP10113
         USING MDSECT,R4                                        GP10113
TESTEXC  CLC   MDNAME,MEMNAME           IS IT TO BE EXCLUDED    GP10113
         BE    TESTNOT                  YES - BLANK IT OUT
         LA    R4,MDSIZE(,R4)           BUMP UP TO NEXT ENTRY   GP10113
         C     R4,@MDTMBN               END OF TABLE
         BNL   TESTMODA                 YES - RELINK MEMBER
         B     TESTEXC                  CHECK NEXT ENTRY
         SPACE 1
TESTSEL  TM    MDFLAGS,MDFNEWE+MDFDONE  NEW NAME OR DONE ?      GP10113
         BNZ   TESTSELB                 YES; DON'T USE          GP10113
         CLC   MDNAME,MEMNAME           IS IT TO BE SELECTED    GP10113
         BE    TESTSELR                 YES - TO BE RENAMED ?   GP10113
TESTSELB LA    R4,MDSIZE(,R4)           BUMP UP TO NEXT ENTRY   GP10113
         C     R4,@MDTMBN               END OF TABLE
         BL    TESTSEL                  CHECK NEXT ENTRY
         B     TESTNOT                  YES - DO NOT LINK MEMBER
         SPACE 1
TESTSELR LR    R2,R4                                            GP10113
         ST    R4,DB2                   RETURN ENTRY ADDRES     GP10113
         TM    MDFLAGS,MDFNEWN          NEW NAME ENTRY FOLLOWS? GP10113
         BZ    TESTMODA                 NO; LEAVE AS IS         GP10113
         MVC   NEWNAME,MDNAME+MDSIZE    COPY NEW NAME           GP10113
         B     TESTMODA                 AND CONTINUE            GP10113
         DROP  R4                                               GP10113
         SPACE 1
         USING MDSECT,R2                                        GP10113
TESTALL  TM    PDS2INDC-PDS2(R6),PDS2ALIS  DID USER USE ALIAS?  GP10113
         BNZ   TESTNOT                  YES; DO NOT PROCESS     GP10113
         SPACE 1
TESTMODA TM    PDS2INDC-PDS2(R6),PDS2ALIS  DID USER USE ALIAS?  GP10113
         BNZ   TESTAOUT                 YES; NOTHING FURTHER    GP10113
         OI    MDFLAGS,MDFDONE          SHOW MEMBER FOUND       GP10113
         TM    MDFLAGS,MDFREP           REPLACE?                GP10113
         BO    TESTREPS                 YES
         L     R2,@MDTDDC               START OF INDD TABLE
         TM    MDFLAGS,MDFREP           REPLACE ON INDD?        GP10113
         BNO   TESTFALI                 NO
TESTREPS MVI   REPLACE,X'FF'            YES
         DROP  R2                                               GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   FIND AND MARK ASSOCIATED ALIAS ENTRIES FOR SELECTED MEMBER NAME   *
*---------------------------------------------------------------------*
TESTFALI STM   R0,R15,SUBSAVE1          PRESERVE REGISTERS      GP10113
         LM    R1,R2,@MATAB             TABLE START AND END     GP10113
         LA    R4,MEMBRTTR              SEARCH ARGUMENT         GP10113
         BINSRCH ARG=(R4),FOUND=TESTAFND,BUILD=NO,AEND=@MAMAX,         *
               ARGLTH=3,ENTLTH=MASIZE,TBEG=(R1),TEND=(R2),TMID=(R3)
         B     TESTANON                 GO TO NO ALIAS EXIT     GP10113
         SPACE 1
TESTASNK LR    R1,R14                   SWAP                    GP10113
TESTAFND C     R1,@MATAB     REACHED BOTTOM ?                   GP10113
         BNH   TESTALOW      YES; STOP HERE                     GP10113
         LR    R14,R1        SAVE HIT POSITION                  GP10113
         SH    R14,=AL2(MASIZE)
         USING MASECT,R14
         CLC   MATTR,MATTR+MASIZE       CURR TTR = LOWER ONE ?  GP10113
         BE    TESTASNK                 TRY AGAIN               GP10113
         DROP  R14                                              GP10113
         SPACE 1
TESTALOW ST    R1,ALIPOINT              SAVE FIRST ENTRY        GP10113
         USING MASECT,R1
TESTALUP OI    MAFLAGS,MAFUSED          SHOW MATCHING MEMBER    GP10113
         C     R1,@MAEND                LAST ENTRY IN TABLE     GP10113
         BNL   TESTANON                 YES - GET OUT           GP10113
         CLC   MATTR,MATTR+MASIZE       CURR ENTRY = NEXT ONE?  GP10113
         BNE   TESTANON                 NO; DONE                GP10113
         LA    R1,MASIZE(,R1)           NEXT ENTRY              GP10113
         B     TESTALUP                 R3 PTS TO LAST ENTRY FOR MEM
         SPACE 1
TESTANON LM    R0,R15,SUBSAVE1          RESTORE                 GP10113
TESTAOUT BR    R9                       RETURN
         SPACE 1
TESTNOT  MVC   MEMNAME,BLANKS8          BLANK OUT NAME
         BR    R9                       RETURN
         DROP  R1                                               GP10113
         SPACE 1
*---------------------------------------------------------------------*
*    IF REPLACE OPTION WAS NOT SPECIFIED, THE MEMBER MUST NOT         *
*    BE PRESENT ON THE OUTPUT FILE. PRODUCE AN ERROR MESSAGE IN       *
*    THIS CASE. THE MEMBER OR NEW NAME IS IN THE BLDLIST ALREADY      *
*---------------------------------------------------------------------*
VERPLC   CLI   REPLACE,X'FF'            REPLACE OPTION?
         BER   R9                       YES - RETURN            GP10113
         BLDL  OUTDCB,BLDLIST           BUILD LIST
         LTR   R15,R15                  RETURN CODE ZERO?
         BNZR  R9                       BRANCH IF MEM NOT FOUND GP10113
*   MEMBER IS PRESENT AND REPLACE OPTION WAS NOT SPECIFIED.
         CLC   MEMNAME,NEWNAME          RENAME REQUESTED ?      GP10113
         BNE   VERPLCRN                 DIFFERENT RENAME MSG    GP10113
         MSGMID MIDDUPER,MEMNAME        SHOW DUPLICATE          GP10113
         B     PRCSSEND                 WRITE MESSAGE WITH NAME GP10113
         SPACE 1
VERPLCRN MSGMID MIDDUPRN,NEWNAME,MEMNAME  NEWNAME PRESENT       GP10113
         B     PRCSSEND                 WRITE MESSAGE WITH NAME GP10113
         SPACE 1
*---------------------------------------------------------------------*
*    BUILD A TABLE OF ALIAS ENTRIES FOR ALL ALII IN THE DIRECTORY     *
*    FOR EACH MEMBER PROCESSED, THE RELATED ALIAS ENTRIES ARE ALSO    *
*    PROCESSED BY MATCHING THE TTR.                                   *
*                                                                     *
*    FORMAT OF TABLE:    BYTES  1 -  3  TTR OF MAIN MEMBER NAME       *
*                        BYTES  4 - 11  ALIAS NAME                    *
*                        BYTE  12       80-PROCESSED; 00-WIDOWED?     *
*                                       40-EXCLUDED ALIAS             *
*---------------------------------------------------------------------*
GETALIAS STM   R0,R15,SUBSAVE2                                  GP10113
         CLOSE (DIRDCB)
         L     R3,@MDTDDC                START OF TABLE
         USING MDSECT,R3                                        GP10113
         MVC   DIRDCB+DCBDDNAM-IHADCB(8),MDNAME NEW DD NAME     GP10113
         MVC   DIRDCB+DCBEODA-IHADCB(3),=AL3(GETALRET)          GP10113
         LM    R0,R1,@MALEN             PICK UP NO. OF ENTRIES IN     $
*                                       THE ALIAS TABLE AND THE ADD.  $
*                                       OF WORK AREA TO HOLD THE TAB. $
         LTR   R1,R1                    DO WE ALREADY HAVE WORK AREA  $
         BNZ   GETASTOR                 YES - CONTINUE          GP10113
         LA    R0,2000                  NUMBER OF ALIAS ENTRIES GP10113
         ST    R0,@MALEN                SAVE                    GP10113
         MH    R0,=AL2(MASIZE)          CALCULATE TABLE SIZE    GP10113
         GETMAIN RU,LV=(0),BNDRY=PAGE   OBTAIN A WORK AREA      GP10113
         ST    R1,@MAPTR                SAVE ADDRESS OF TABLE         $
         ST    R1,@MATAB                SAVE BEGINNING OF TABLE       $
         ST    R1,@MAEND                SAVE END OF TABLE             $
         AR    R1,R0                    POINT TO END OF TABLE         $
         SH    R1,=AL2(MASIZE)          BACK OFF ONE ENTRY      GP10113
         ST    R1,@MAMAX                SAVE POINTER TO LAST ENTRY    $
GETASTOR L     R4,@MAPTR                POINT R4 TO TABLE             $
         USING MASECT,R4                                        GP10113
         MVC   MASECT(MASIZE),FFFF      INIT 1ST TABLE ENTRY    GP10113
         DROP  R4                                               GP10113
         ST    R4,@MAEND
         MVI   JOBSW+1,X'00'            SET UP TO PUNCH JOB CARD
*                                       IF GENERATE FUNCTION
*
         OPEN  (DIRDCB)
         TM    DIRDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN SUCESSFUL? GP10113
         BNO   GETALER1                 NO - ERROR SITUATION
         RDJFCB DIRDCB                                          GP10113
         MVC   INPINFO(L'JFCBDSNM),JFCBDSNM                     GP10113
         MVC   INPINFO+L'JFCBDSNM+2(6),JFCBVOLS                 GP10113
         TM    OPTFLAG1,OFTEST+OFDEBUG+OFLIST  SHOW INFO ?      GP10113
         BZ    GETNOMSG                 NO                      GP10113
         MVC   MSGBUF+29(8),MDNAME      DD NAME                 GP10113
         MVC   MSGBUF+39(L'INPINFO),INPINFO                     GP10113
         MSGMID MIDIINFO                SHOW INPUT INFO         GP10113
         MVC   MSGBUF+29(8),OUTNAME     DD NAME                 GP10113
         MVC   MSGBUF+39(L'OUTINFO),OUTINFO                     GP10113
         MSGMID MIDOINFO                SHOW INPUT INFO         GP10113
GETNOMSG TM    OPTFLAG1,OFNOCHK         SKIP CHECKS?            GP10113
         BNZ   GETNOCON                 YES; IGNORE PROBLEMS    GP10113
         CLC   INPINFO,OUTINFO          SAME INPUT AND OUTPUT?  GP10113
         BNE   GETNOCON                 NO; NO CONFLICT (?)     GP10113
         ICM   R0,3,ENCT                ANY MEMBER SELECT?      GP10113
         BNZ   GETNOCON                 USER AWARE ?            GP10113
         MSGMID MIDCONFL                SHOW CONFLICT           GP10113
         DROP  R3                                               GP10113
GETNOCON LR    R6,R5                    R5=R6 WILL FORCE A READ
GETALBLD BAL   R9,DREAD                 DO READ IF REQUIRED.
         USING PDS2,R6                  DECLARE D.E. MAPPING    GP10113
         TM    PDS2INDC,PDS2ALIS        ALIAS?                  GP10113
         BZ    GETALINC                 NO - GET NEXT ENTRY
         MVC   ALENTRY(3),PDS2TTRP      TTR                     GP10113
         MVC   ALENTRY+3(8),PDS2NAME    ALIAS NAME              GP10113
         XC    ALENTRY+11(5),ALENTRY+11  CLEAR REST             GP10113
         LH    R0,COUNT                 ANY MEMBER SELECTION?   GP10113
         LTR   R0,R0                                            GP10113
         BZ    GETALPRO                 NO; IGNORE              GP10113
         L     R3,@MDTMB1               START OF NAMES          GP10113
         USING MDSECT,R3                                        GP10113
         LA    R8,MDSIZE                ENTRY SIZE              GP10113
         L     R9,@MDTMBN               LAST NAME               GP10113
GETALCOM CLC   MDNAME,PDS2NAME          MATCHING ALIAS ?        GP10113
         BNE   GETALBXL                 NO; TRY NEXT            GP10113
         LH    R0,ENCT                  ANY SELECTED NAMES?     GP10113
         LTR   R0,R0                                            GP10113
         BZ    GETALDEL                 NO; PROCESS EXCLUDE     GP10113
         TM    MDFLAGS,MDFNEWN          DOES A RENAME FOLLOW?   GP10113
         BZ    GETALPRO                 NO; DO NORMALLY         GP10113
         ST    R3,ALENTRY+12            MAKE LINK               GP10113
         OI    ALENTRY+11,MAFREN        SHOW ALIAS RENAME       GP10113
         B     GETALPRO                 AND GET NEXT ENTRY      GP10113
GETALDEL OI    MDFLAGS,MDFDONE          IGNORE IT               GP10113
         MSGMID MIDEXCAL,MDNAME         TELL USER               GP10113
         B     GETALINC                 AND GET NEXT ENTRY      GP10113
GETALBXL BXLE  R3,R8,GETALCOM           KEEP AT IT              GP10113
         DROP  R3                                               GP10113
         SPACE 1
GETALPRO LA    R4,ALENTRY               ADDRESS OF ENTRY FOR TABLE
         LM    R1,R2,@MATAB             SET UP SEARCH TABLE
         BINSRCH ARG=(R4),FOUND=GETALER2,BUILD=YES,AEND=@MAMAX,        X
               ARGLTH=11,ENTLTH=MASIZE,FULL=GETALER3,                  *
               TBEG=(R1),TEND=(R2),TMID=(R3)
         USING MASECT,R3                                        GP10113
         MVC   MASECT(MASIZE),ALENTRY   PUT ENTRY INTO TABLE    GP10113
         DROP  R3                                               GP10113
GETALINC LA    R0,PDS2LUSR              MASK FOR COUNT          GP10113
         IC    R4,PDS2INDC              GET COUNT               GP10113
         NR    R4,R0                    MASK OUT ALIAS/TTR#     GP10113
         SLL   R4,1                     * 2 = # OF BYTES        GP10113
         LA    R6,PDS2USRD(R4)          NEXT ENTRY              GP10113
         B     GETALBLD                 CHECK NEXT ENTRY
         SPACE 1
DREAD    CR    R6,R5                    END OF BLOCK
         BNL   DIRDR                    YES - GET NEW BLOCK
DIREND   CLC   PDS2NAME,FFFF            END OF DIRECTORY?       GP10113
         BE    GETALRET                 RETURN TO MAINLINE
         BR    R9                       RETURN TO BUILD
         DROP  R6                                               GP10113
DIRDR    LA    R5,DIRBLOCK                                      GP10113
         READ  RDECB,SF,DIRDCB,(R5)                             GP10113
         CHECK RDECB
         SR    R5,R5                    ZERO R5
         AH    R5,DIRBLOCK              LENGTH OF BLOCK
         LA    R6,DIRBLOCK              START OF BLOCK
         AR    R5,R6                    END OF BLOCK
         LA    R6,2(,R6)                START OF FIRST ENTRY
         B     DIREND                   CHECK OUT THE ENTRY
         SPACE 1
GETALER1 L     R3,@MDTDDC               START OF TABLE
         USING MDSECT,R3                                        GP10113
         MVC   MSGPARM1,MDNAME          PLACE DDNAME IN MESSAGE
         B     MAINDEER                 GO WRITE MESSAGE        GP10113
         SPACE 1
GETALER2 L     R3,@MDTDDC               START OF TABLE
         MSGMID MIDTUALI,MDNAME         INDICATE MSG TO WRITE   GP10113
         B     MAINLOOP                 AND CONTINUE            GP10113
         SPACE 1
GETALER3 MSGMID MIDMAXAL,MDNAME         INDICATE MSG TO WRITE   GP10113
         B     MAINLOOP                 AND CONTINUE            GP10113
         DROP  R3                                               GP10113
         SPACE 1
GETALRET CLOSE (DIRDCB,REREAD),TYPE=T
         LM    R0,R15,SUBSAVE2          RESTORE                 GP10113
         BR    R7                       RETURN TO MAINLINE
         SPACE 1
*---------------------------------------------------------------------*
*    PRODUCE CONTROL CARDS FOR THE LINKAGE EDITOR ON SYSUT6 OR        *
*    FOR ELSE ON SYSPUNCH.                                            *
*    SPECIAL HANDLING FOR (MFT/MVT) SYS1.SVCLIB AND NUCLEUS LINKS     *
*---------------------------------------------------------------------*
CONTGEN  ST    R4,SVREG4                SAVE R4
         L     R9,@MDTDDC               R9 = PTR TO INPUT DDNAME TBL
         MVC   PDSDCB+DCBDDNAM-IHADCB(8),OUTNAME   SET UP DDNM
         RDJFCB (PDSDCB)                READ THE JOB FILE CONTRL BLK
         CLC    =C'SYS1.SVCLIB ',JFCBDSNM   IS THIS SVCLIB?     GP10113
         BNE   NOTSVCS                  BRANCH IF NOT SYS1.SVCLIB
         L     R15,CVTPTR    GET THE CVT                        GP10113
         TM    CVTDCB-CVTMAP(R15),X'83'  VIRTUAL SYSTEM?        GP10113
         BNZ   NOTSVCS       YES; NOT OS/360 SVCLIB             GP10113
         MVI   SVCLIB,X'FF'             SHOW SVCLIB WAS ALTERED
         MVC   SVCDDNM(8),OUTNAME       SAVE PTR TO SVCLIB
NOTSVCS  TM    LKATTR,PDS2SCTR  SCATTER LOADED?                 GP10113
         BZ    NOTNUC        NO; ELSE ASSUME NUCLEUS            GP10113
         TM    P2ATTR,MYFNUCL   NUCLEUS DETECTED?               GP10113
         BZ    NOTNUC        NO; ELSE ASSUME NUCLEUS            GP10113
         L     R15,CVTPTR    GET THE CVT                        GP10113
         TM    CVTDCB-CVTMAP(R15),X'83'  VIRTUAL SYSTEM?        GP10113
         BZ    MVTNUCS       NO; OLD NUCLEUS                    GP10113
         MVC   CNTCRD+10(15),=C'INSERT IEAVNIP0'                GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD+10(15),=C'INSERT IEAVFX00'                GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         B     ALCHECK       NO ENTRY CARD                      GP10113
MVTNUCS  MVC   CNTCRD+10(L'NUCINS01),NUCINS01
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD+10(L'NUCINS02),NUCINS02
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD+10(L'NUCINS03),NUCINS03
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD+10(L'NUCINS04),NUCINS04
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         B     ALCHECK                  NO ENTRY CARD FOR NUCLEUS
         SPACE 1
NOTNUC   CLC   CSCTNAME,=C'$PRIVATE'    DO WE BYPASS ENTRY CARD       $
         BE    ALCHECK                  YES                           $
         MVC   CNTCRD+08(5),=C'ENTRY'   MOVE IN ENTRY           GP10113
         MVC   CNTCRD+14(8),CSCTNAME      AND ENTRY POINT NAME  GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
ALCHECK  L     R15,CVTPTR               SEE WHAT WE'RE RUNNING  GP10113
         TM    CVTDCB-CVTMAP(R15),X'80'  EXTENDED ADDRESSING?   GP10113
         BZ    SKIPMODE      NO; NO 31/64 BIT MODES             GP10113
         TM    PGATTR,X'13'             ANY MODE ?              GP10113
         BZ    SKIPMODE                 NO; SKIP                GP10113
         MVC   CNTCRD+08(4),=C'MODE'    NEED MODE               GP10113
         LA    R1,CNTCRD+13             NEXT FIELD              GP10113
         TM    PGATTR,X'10'             PDSLRMOD                GP10113
         BZ    DFLTRMOD                 NO; DEFAULT             GP10113
         MVC   0(10,R1),=C'RMODE(ANY)'                          GP10113
         LA    R1,10(,R1)                                       GP10113
         TM    PGATTR,X'03'             ANY MORE?               GP10113
         BZ    PUTMODE                  NO; WRITE IT OUT        GP10113
         MVI   0(R1),C','               SEPARATOR               GP10113
         LA    R1,1(,R1)                INCREMENT               GP10113
DFLTRMOD LA    R0,3                     PDS2MAMOD               GP10113
         IC    R15,PGATTR               LOAD MODE BYTE          GP10113
         NR    R15,R0                   ISOLATE AMODE           GP10113
         BZ    PUTMODE                  NOTHING TO DO           GP10113
         MVC   0(6,R1),=C'AMODE('       SET COMMON              GP10113
         SLL   R15,2                    CONVERT TO LEN 4        GP10113
         LA    R14,=C'24) 31) 31) ANY)'    TEXT                 GP10113
         ALR   R15,R14                  INDEX                   GP10113
         MVC   6(4,R1),0(R15)           MOVE AMODE              GP10113
PUTMODE  BAL   R14,PUNCHOUT             PUT MODE CARD           GP10113
         SPACE 1
SKIPMODE ICM   R3,15,ALIPOINT           HAVE AN ALIAS FR THIS ? GP10113
         BZ    PARMEND                  NO; SKIP AROUND         GP10113
         SPACE 1
         USING MASECT,R3                                        GP10113
PARMLOOP TM    MAFLAGS,MAFSKIP          IGNORE ?                GP10113
         BNZ   PARMASKP                 YES; GO AROUND          GP10113
         MVC   CNTCRD+10(5),=C'ALIAS'   MOVE IN ALIAS
         MVC   CNTCRD+16(8),MANAME      MOVE IN ALIAS NAME      GP10113
         TM    MAFLAGS,MAFREN           RENAME ?                GP10113
         BZ    PARMAPUT                 NO                      GP10113
         L     R14,MAMDENT              GET MAIN ENTRY          GP10113
         OI    MDFLAGS-MDSECT(R14),MDFDONE  SHOW ENTRY USED     GP10113
         MVC   CNTCRD+16(8),MDNAME+MDSIZE-MDSECT(R14)  RENAME   GP10113
         MSGMID MIDAL2MB,MANAME,MDNAME+MDSIZE-MDSECT(R14)       GP10113
PARMAPUT BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
PARMASKP C     R3,@MAEND                LAST ENTRY IN TABLE?    GP10113
         BNL   PARMEND                  YES - GET OUT
         CLC   MATTR,MATTR+MASIZE       CURR ENTRY = NEXT ONE?  GP10113
         BNE   PARMEND                  NO; DONE                GP10113
         LA    R3,MASIZE(,R3)           INCREMENT TO NEXT ENTRY GP10113
         B     PARMLOOP                 PUT THIS ALIAS OUT      GP10113
         DROP  R3                                               GP10113
         SPACE 1
PARMEND  TM    P2ATTR,MYFSSI            DOES MOD HAVE SETSSI INFO     $
         BZ    GENTAUTH                 NO                            $
         MVC   CNTCRD+8(6),=C'SETSSI'     SETSSI TO                   $
         UNPK  CNTCRD+15(9),SETSSIBI(5)   UNPACK SSI            GP10113
         TR    CNTCRD+15(8),HEXTRTAB    MAKE PRINTABLE          GP10113
         MVI   CNTCRD+15+8,C' '         CLEAR EXTRA             GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         NI    P2ATTR,255-MYFSSI        RESET SW                GP10113
GENTAUTH TM    P2ATTR,MYFAUTH           IS IT APF AUTHORIZED?   GP10113
         BZ    GENINCCD                 NO                      GP10113
         MVC   CNTCRD+8(13),=C'SETCODE AC(1)'                   GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         NI    P2ATTR,255-MYFAUTH       RESET SW                GP10113
GENINCCD TM    OPTFLAG1,OFBUILD         BUILD INCLUDE CARDS?    GP10114
         BZ    PSTINOLD                   NO                    GP10114
         L     R15,=A(ZZRBUILD)         R15 -> CARD GENERATOR   GP10114
         BALR  R14,R15                  DO THE PROCESS          GP10114
PSTINOLD MVC   CNTCRD+8(7),=C'INCLUDE'  MOVE IN INCLUDE
         L     R3,@MDTDDC               START OF TABLE
         MVC   CNTCRD+16(8),2(R3)       MOVE IN DDNAME
         TRT   CNTCRD+17(9),TRTBLANK    FIND END OF  DDNAME     GP10113
         MVI   0(R1),C'('               MOVE IN LEFT PAREN      GP10113
         MVC   1(8,R1),MEMNAME          MOVE IN MEMBER NAME     GP10113
         TRT   0(10,R1),TRTBLANK          NEXT BLANK            GP10113
         MVI   0(R1),C')'               MOVE IN RIGHT PAREN
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         TM    OVLYSW,X'FF'             OVERLAY PRESENT?
         BZ    PSTOVLY                  NO - DO NOT GEN OVERLAY CARDS
         L     R15,=A(ZZROVCRD)         R15 -> CARD GENERATOR   GP10113
         BALR  R14,R15                  DO THE PROCESS
PSTOVLY  TM    P2ATTR,MYFPAGE           PAGE ALIGN ?            GP10113
         BZ    PSTALIGN                   NO                    GP10113
         L     R15,=A(ZZRPAGER)         R15 -> CARD GENERATOR   GP10113
         BALR  R14,R15                  DO THE PROCESS          GP10113
PSTALIGN MVC   CNTCRD+5(4),=C'NAME'     MOVE IN NAME
         MVC   CNTCRD+10(8),NEWNAME     MOVE IN MEMBER NAME     GP10113
         CLI   REPLACE,X'FF'            IS REPLACE OPTION REQ
         BNE   DONTREP                  NO - PUT OUT RECORD
         TRT   CNTCRD+10(9),TRTBLANK    FIND NAME END           GP10113
         MVC   0(3,R1),=C'(R)'          MOVE IN REPLACE OPTION  GP10113
DONTREP  BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         L     R4,SVREG4                RESTORE R4
         BR    R4                       RETURN
         SPACE 2
*---------------------------------------------------------------------*
*   PRODUCE THE PARAMETER DATA FOR THE LINKAGE EDITOR.                *
*   NOTE THAT OPTIONS VALID ON CONTROL CARDS (E.G., MODE, SETCODE)    *
*   ARE NO LONGER IN THE PARM FIELD, BUT SYSUT6/SYSPUNCH              *
*                                                                     *
*   IF THE MEMBER HAS EXACTLY THE SAME SIGNIFICANT ATTRIBUTES AS THE  *
*   PREVIOUS ONE, THEN DEFER THE LINK UNTIL THE NEXT CHANGE OR THE    *
*   END OF THE REQUEST (ANOTHER LI/COPY/INDD REQUEST).                *
*---------------------------------------------------------------------*
*OLD*    NI    LKATTR,255-PDS2EXEC-PDS21BLK  OFF UNWANTED BITS  GP10113
*OLD*    NI    LKATTR+1,255-PDS2ORG0-PDS2EP0-PDS2NRLD-PDS2TSTN-PDS2LEF
PARMGEN  NI    LKATTR,PDS2RENT+PDS2REUS+PDS2OVLY+PDS2LOAD+PDS2SCTR
         NI    LKATTR+1,PDS2FLVL+PDS2NREP+PDS2REFR              GP10113
         CLI   ALLSET,X'00'             VALUES SET UP ?
         BE    ATTR1                    NO - SET THEM UP
         TM    OPTFLAG2,OFSOLO    SEPARATE MEMBERS?             GP14266
         BNZ   PARMGFRC        YES; FORCE SEPARATION            GP14266
         CLC   LKATTR,PRVATTR           SAME LKED PARM ?        GP10113
         BE    PARMRET                  YES - RETURN
PARMGFRC TM    LEFLAG,X'F0'             L E REQUIRED            GP10113
         BZ    PSTCLS2                  NO - PUNCH CARDS        GP10113
         CLOSE (SYSUT6)
         TM    OPTFLAG1,OFTEST    TEST MODE ?                   GP10113
         BNZ   RESET              YES; SKIP THIS                GP10113
*NUTS*   BAL   R14,ENQOUT               ENQ THE FILE TO BE LINKED TO  $
         LINK  EP=IEWL,PARAM=(OPLISTL,DDNMLST),VL=1
         C     R15,PGMRC                                        GP10113
         BNH   *+8                                              GP10113
         ST    R15,PGMRC                SAVE HIGHEST CODE       GP10113
         TM    OPTFLAG1,OFLIST+OFDEBUG  SHOW ANYWAY ?           GP10113
         BNZ   PARMLMSG
         CH    R15,=H'4'                GOOD EXEC ?             GP14266
         BNH   PARMNMSG                 YES; SKIP MESSAGE       GP14266
PARMLMSG MSGMID MIDRC,'IEWL',MEMNAME,(R15)                      GP10113
PARMNMSG OI    LEFLAG,X'0F'             LINK-EDIT WAS USED      GP10113
*NUTS*   BAL   R14,DEQOUT               DEQ THE FILE LINKED TO        $
         B     RESET                    SET UP NEW PARAMETERS
         SPACE 1
PSTCLS2  MVC   CNTCRD(2),=C'/*'         DELIMITER
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         SPACE 1
RESET    MVI   ALLSET,X'00'             TURN SET-UP SW = OFF
ATTR1    MVC   OPLISTV(L'LNKDFLT),LNKDFLT   SET DEFAULT VALUES  GP10113
         LA    R4,OPLISTV               SAVE LENGTH                   $
         LA    R3,L'LNKDFLT(,R4)        ADDR OF STRING          GP14266
         LR    R2,R3                      OF BASIC PARMS              $
         SR    R2,R4                        FOR PUNCHING OF           $
         STH   R2,BLEPARML                    LE CONTROL CARDS        $
         TM    OPTFLAG2,OFYDCBS   USE DCBS PARAMETER ?          GP13239
         BZ    ATTR2                NO; USE LINKER MAX BLKSIZE  GP13239
         MVC   0(5,R3),=C',DCBS'  RESTRICT TO USER'S BLKSIZE    GP14266
         LA    R3,5(,R3)          SKIP OVER                     GP13239
ATTR2    TM    LKATTR,PDS2OVLY          OVERLAY PRESENT?
         BZ    ATTR3                    NO - CHECK NEXT ATTRIBUTE
         MVC   0(10,R3),=C',OVLY,XCAL'  MOVE IN OPTION          GP10113
         LA    R3,10(,R3)               BUMP UP LENGTH          GP10113
ATTR3    TM    LKATTR,PDS2RENT          IS IT REENTERABLE
         BZ    ATTR4                    NO CHECK NEXT ATTRIBUTE
         MVC   0(5,R3),=C',RENT'        MOVE IN OPTION
         LA    R3,5(,R3)                BUMP UP LENGTH
ATTR4    TM    LKATTR,PDS2REUS          IS IT REUSABLE
         BZ    ATTR5                    NO CHECK NEXT ATTRIBUTE
         MVC   0(5,R3),=C',REUS'        MOVE OPTION
         LA    R3,5(,R3)                BUMP UP LENGTH
ATTR5    TM    LKATTR+1,PDS2REFR        IS IT REFRESHABLE
         BZ    ATTR6                    NO CHECK NEXT ATTRIBUTE
         MVC   0(5,R3),=C',REFR'        MOVE IN OPTION
         LA    R3,5(,R3)                BUMP UP LENGTH
ATTR6    TM    LKATTR,PDS2LOAD          IS IT ONLY LOADABLE
         BZ    ATTR7                    NO CHECK NEXT ATTRIBUTE
         MVC   0(3,R3),=C',OL'          MOVE IN OPTION
         LA    R3,3(,R3)                BUMP UP LENGTH
ATTR7    TM    LKATTR,PDS2SCTR          IS IT SCATTER FORMAT
         BZ    ATTR8                    NO CHECK NEXT ATTRIBUTE
         MVC   0(5,R3),=C',SCTR'        MOVE IN OPTION
         LA    R3,5(,R3)                BUMP UP LENGTH
ATTR8    TM    LKATTR,PDS2TEST          IS IT TESTRAN
         BZ    ATTR9                    NO CHECK NEXT ATTRIBUTE
         MVC   0(5,R3),=C',TEST'        MOVE IN OPTION
         LA    R3,5(,R3)                BUMP UP LENGTH
ATTR9    TM    LKATTR+1,PDS2FLVL        IS IT DOWNWARD COMPATIBLE
         BO    ENDATTRB                 NO CHECK NEXT ATTRIBUTE       $
         MVC   0(3,R3),=C',DC'          MOVE IN OPTION
         LA    R3,3(,R3)                BUMP UP LENGTH
ENDATTRB LA    R4,OPLISTV
         SR    R3,R4
         STH   R3,OPLISTL               LENGTH OF PARAMETER STRING
         MVC   PRVATTR,LKATTR           SAVE ATTRIBUTES         GP10113
PARMRET  BR    R9                       RETURN
         SPACE 1
*---------------------------------------------------------------------*
*   FOR OUTPUT TO SYSPUNCH, THIS CODE PREPENDS THE JOB AND STEP JCL   *
*---------------------------------------------------------------------*
JCLGENR  CLI   ALLSET,X'FF'             JCL SET UP
         BE    JCLSET                   YES DON'T DO AGAIN
*
JOBSW    NOP   NOJOB                    BRANCH IF NO JOB CARD TO PUNCH
         MVC   CNTCRD(L'JOBCARD),JOBCARD MOVE CARD TO PUNCH AREA
         AP    JOBNO,=P'1'              BUMP UP JOB NUMBER
         UNPK  CNTCRD+7(3),JOBNO        PLACE JOB NUMBER ON CARD
         OI    CNTCRD+9,X'F0'           ENSURE VALID SIGN
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVI   JOBSW+1,X'F0'            SHOW JOB CARD ALREADY PUNCHED
         ZAP   STEPNO,=P'0'             AND RESET STEP          GP10113
NOJOB    AP    STEPNO,=P'1'             GET CURRENT STEP NUMBER
         UNPK  LEEXEC+6(3),STEPNO(2)    UNPACK INTO STEPNAME
         OI    LEEXEC+8,X'F0'           ENSURE VALID SIGN
         CP    STEPNO,=P'15'            MAX OF 15 STEP / JOB    GP10113
         BL    SAMEJOB                                          GP10113
         NI    JOBSW+1,X'0F'            NEW JOB NEXT TIME       GP10113
SAMEJOB  MVC   CNTCRD(L'LEEXEC),LEEXEC  SET UP L.E. EXEC CARD
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(L'BLEPARM),BLEPARM SET UP BASIC L.E. PARMS
         LH    R4,BLEPARML              LENGTH                        $
         BCTR  R4,0                     DECREMENT FOR EXECUTE
         EX    R4,MOVE1                 UPDATE STRING
         LA    R4,CNTCRD+10                                           $
         AH    R4,BLEPARML                                            $
         MVC   0(2,R4),=C''')'          END PARM                GP10113
         CLC   OPLISTL,BLEPARML         ADDITIONAL PARMS ?            $
         BE    BYEXPARM                 NO                            $
         MVI   1(R4),C','               YES - SHOW CONTINUATION       $
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(4),=C'// '''      BEGIN CONTINUATION CARD       $
         LH    R4,OPLISTL               GET LENGTH OF                 $
         SH    R4,BLEPARML                ADDITIONAL PARMS            $
         SH    R4,=H'2'                 REDUCE FOR COMMA AND MOVE     $
         LA    R3,OPLISTV               LOCATE ADDITIONAL             $
         AH    R3,BLEPARML                PARMS IN WHOLE LIST         $
         EX    R4,MOVE1B                MOVE ADDITIONAL PARMS         $
         LA    R3,CNTCRD+4                TO LINK EDIT PARMS ON       $
         AR    R3,R4                        CONTINUATION CARD AND     $
         MVC   1(2,R3),=C''')'                AND TERMINATE PARM LIST $
BYEXPARM BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(L'LESYSOUT),LESYSOUT SET UP SYSPRINT DD CARD
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(L'LESYSUT5),LESYSUT5 SET UP SYSUT5 WORK FILE
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
* BYPASS UNIT LOOKUP FOR SYSUT5 DD CARD, TO ACTIVATE MAKE BRANCH A NOP
         B     BYUNIT
         LD    F2,OUTNAME               FPR2 = DDNAME
         BAL   R4,UNITGEN               DO UNIT LOOK-UP
         L     R4,UNITAB(R1)            GET PTR TO UNIT TEXT
         MVC   CNTCRD(24),0(R4)         MOVE IN UNIT TEXT
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
BYUNIT   MVC   PDSDCB+DCBDDNAM-IHADCB(8),OUTNAME  MOVE DDNAME TO DCB
         RDJFCB (PDSDCB)                 READ JFCB
         MVC   CNTCRD(L'LESYSLMD),LESYSLMD MOVE IN BASIC SYSLMOD DD
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         LD    F2,OUTNAME               FPR2 = DDNAME
         BAL   R4,UNITGEN               DO UNIT LOOK-UP
         L     R4,UNITAB(R1)            PTR TO UNIT TEXT
         MVC   CNTCRD(24),0(R4)         MOVE IN UNIT TEXT
         MVC   CNTCRD+24(9),=C',VOL=SER=' MOVE IN BASIC VOLUME TEXT
         LD    F2,OUTNAME               FLPR2 = DDNAME
         BAL   R4,VOLGEN                DO VOLUME LOOK-UP
         MVC   CNTCRD+33(6),VOLSER      INSERT VOL ID
         MVI   CNTCRD+39,C','           CONTINUE INDICATION
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(L'LEDSNAME),LEDSNAME MOVE IN DSNAME PARAMETER
         MVC   CNTCRD+22(44),JFCBDSNM   INSERT DSN              GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         L     R3,@MDTDDC               START OF TABLE
         MVC   PDSDCB+DCBDDNAM-IHADCB(8),MDNAME-MDSECT(R3) INDD NAME
         RDJFCB (PDSDCB)                READ JFCB
         MVC   CNTCRD(L'LEINPUT),LEINPUT BASIC INPUT TEXT
         MVC   CNTCRD+2(8),MDNAME-MDSECT(R3)  INDD NAME
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   DB,2(R3)                 MOVE TO DW BOUNDRY
         LD    F2,DB                    FLPR2 = DDNAME
         BAL   R4,UNITGEN               DO UNIT LOOK-UP
         L     R4,UNITAB(R1)            GET PTR TO UNIT TEXT
         MVC   CNTCRD(24),0(R4)         MOVE IN UNIT TEXT
         MVC   CNTCRD+24(9),=C',VOL=SER=' SET UP BASIC VOL TEXT
         MVC   DB,2(R3)                 MOVE TO DW BOUNDRY
         LD    F2,DB                    FLPR2 = DDNAME
         BAL   R4,VOLGEN                GET VOL ID
         MVC   CNTCRD+33(6),VOLSER      VOL ID
         MVI   CNTCRD+39,C','           CONTINUE INDICATION
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(L'LEDSNAME),LEDSNAME BASIC DSNAME TEXT
         MVC   CNTCRD+22(44),JFCBDSNM   DSNAME                  GP10113
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         MVC   CNTCRD(L'LESYSLIN),LESYSLIN MOVE IN SYSLIN DD
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
JCLSET   ST    R9,SVREG9                SAVE R9
         BAL   R4,CONTGEN               PUNCH OUT CONTROL CARDS
         L     R9,SVREG9                RESTORE R9
         MVI   ALLSET,X'FF'             TURN SET-UP SW = ON
         BR    R9                       RETURN
         SPACE 2
UNITGEN  MVI   DDFND+1,X'F0'            SET BRANCH SWITCH
         B     TIOTSET                  ENTER TIOT LOOK-UP
         SPACE 1
VOLGEN   MVI   DDFND+1,X'00'            INDIC VOL LOOK-UP REQ
TIOTSET  L     R1,ADRTIOT               R1 PTS TO TIOT
         USING TIOENTRY,R1   DECLARE IT                         GP10113
         SR    R14,R14                  CLEAR LENGTH REG
TIOTLUP  ALR   R1,R14                   BUMP TO NEXT DD ENTRY   GP10113
         IC    R14,TIOELNGH             LENGTH OF ENTRY         GP10113
         LTR   R14,R14                  END OF TIOT?
         BZ    TIOTER1                  NO MATCHING DD ENTRY
         MVC   DB,TIOEDDNM              MOVE TO BOUNDRY         GP10113
         CD    F2,DB                    IS THIS THE REQ DD ENTRY
         BNE   TIOTLUP                  BRANCH TO TIOT LOOP
         SPACE 1
DDFND    NOP   UNITLOOP                 BRANCH IF A UNIT GEN
         L     R1,TIOEFSRT-1            R1 = PTR TO UCB         GP10113
         USING UCBOB,R1                                         GP10113
         CLI   UCBTBYT3,UCB3DACC        IS THIS A DASD DEVICE   GP10113
         BNE   UCBER1                   NO - ERROR
         MVC   VOLSER,UCBVOLI           SET UP VOLUME           GP10113
         BR    R4                       RETURN
         USING TIOENTRY,R1   DECLARE IT                         GP10113
UNITLOOP L     R1,TIOEFSRT-1            R1 = PTR TO UCB         GP10113
         USING UCBOB,R1                                         GP10113
         CLI   UCBTBYT3,UCB3DACC        IS THIS A DASD DEVICE   GP10113
         BNE   UCBER1                   NO - ERROR
         IC    R1,UCBTBYT4                                      GP10113
         N     R1,=X'0000007F'    ISOLATE SUBTYPE               GP10113
         BZ    WHATDASD      HUH ?                              GP10113
         CH    R1,=H'15'     IN RANGE ?                         GP10113
         BH    WHATDASD      DON'T RECGNIZE                     GP10113
         SLL   R1,2          CONVERT TO TABLE OFFSET            GP10113
         BR    R4            AND RETURN IT                      GP10113
         DROP  R1                                               GP10113
WHATDASD STD   R2,MSGPARM1    SET UP DD NAME                    GP10113
         MSGMID MIDUNUNI                SET UP UNIT ERROR MESSAGE
         B     MAINLOOP                 SET RETURN ADDRESS
UCBER1   MSGMID MIDNOTDA               NOT DASD DEVICE          GP10113
         B     MAINLOOP                CONTINUE                 GP10113
         SPACE 1
TIOTER1  STD   R2,MSGPARM1             DD CARD MISSING
NODD     MSGMID MIDDDMIS               SET UP DD CARD MISSING   GP10113
         B     MAINLOOP                CONTINUE                 GP10113
*
*        CONSTANTS AREA
*
MOVE1    MVC   CNTCRD+10(*-*),OPLISTV   MOVE IN STRING                $
*
MOVE1B   MVC   CNTCRD+4(*-*),1(R3)      MOVE IN STRING                $
*                                                                     $
*
DIRIOER  L     R3,@MDTDDC               START OF TABLE
         MVC   MSGPARM1,MDNAME-MDSECT(R3)  MOVE INDD TO MSG AREA
DIRER2   MSGMID MIDDIRER                DIRECTORY I/O ERR       GP10113
         B     MAINLOOP                CONTINUE                 GP10113
*
OUTIOER  MVC   MSGPARM1,OUTNAME         SET NAME FOR MESSAGE
         B     DIRER2                   WRITE MESSAGE
*
*         THE FOLLOWING LOOKS THROUGH THE TIOT TO SEE IF
*     DDCARDS ARE PRESENT FOR THE INDD DATASET AND THE OUTDD DATASET.
*
DDSRCH   MVI   DB,0                     INIT SWITCH TO ZERO     GP10113
         L     R1,ADRTIOT               R1 -> TIOT
         L     R3,@MDTDDC               R3 -> INDD TABLE
         SR    R14,R14                  INIT R14 TO ZERO
         USING TIOENTRY,R1                                      GP10113
         USING MDSECT,R3                                        GP10113
SRCHLOOP AR    R1,R14                   BUMP TO NEXT ENTRY      GP10113
         CLC   OUTNAME,TIOEDDNM         OUTNAME MATCH?          GP10113
         BNE   TESTINDD                 NO - CHECK INDD
         OI    DB,X'80'                 SHOW OUT DD PRESENT     GP10113
         B     SRCHINCR                 INCREMENT TO NEXT TIOT ENTRY
TESTINDD CLC   MDNAME,TIOEDDNM          INNAME MATCH?           GP10113
         BNE   SRCHINCR                 NO MATCH
         OI    DB,X'40'                 SHOW IN DD PRESENT      GP10113
SRCHINCR IC    R14,TIOELNGH             LENGTH OF ENTRY         GP10113
         LTR   R14,R14                  ENTRY PRESENT?
         BNZ   SRCHLOOP                 PROCESS NEXT ENTRY      GP10113
         DROP  R1                                               GP10113
         SPACE 1
         TM    DB,X'40'                 WAS IN DD PRESENT?      GP10113
         BZ    NOINDDPR                 NO - ERROR
         TM    DB,X'80'                 WAS OUT DD PRESENT?     GP10113
         BZ    NOOUTDD                  NO - ERROR
         BR    R9                       RETURN - ALL PRESENT
         SPACE 1
NOINDDPR MVC   MSGPARM1,MDNAME          STORE DD NAME FOR MSG
         B     NODD                     WRITE DD MISSING MSG
         SPACE 1
NOOUTDD  MVC   MSGPARM1,OUTNAME         DD NAME FOR MSG
         B     NODD                     MESSAGE AND RETURN      GP10113
         DROP  R3                                               GP10113
*                                                                     $
*         THE FOLLOWING ENQUES AND DEQUEUES THE SYSLMOD TYPE DATA     $
*     SET (THE DATA SET TO BE LINKED TO) WITH A QNANE AND RNANE       $
*     COMPATABLE WITH SHARDISK AND THE PROGS. OF THE CAP SYSTEM.      $
*                                                                     $
*NQOUT   ST    R14,SVREG14              SAVE RETURN REG               $
*        ENQ   (QENQOUT,RENQOUT,E,,SYSTEM)   ENQ FILE                 $
*        B     ENQDEQRT                                               $
*EQOUT   ST    R14,SVREG14              SAVE RETURN REG               $
*        DEQ   (QENQOUT,RENQOUT,,SYSTEM)     DEQ FILE                 $
*NQDEQRT L     R14,SVREG14              RESTORE RETURN REG            $
*        BR    R14                      RETURN                        $
         LTORG
UNITAB   DC    A(TALLDA)     DEVTYPE 0 OR MOUNTED               GP10113
         DC    A(T2311)      2001 MOUNTABLE                     GP10113
         DC    A(TALLDA)     2002 2301 DRUM                     GP10113
         DC    A(TALLDA)     2003 2303 DRUM                     GP10113
         DC    A(TALLDA)     2004 9345 FIXED (WAS 2302)         GP10113
         DC    A(T2321)      2005 2321 MOUNTABLE                GP10113
         DC    A(TALLDA)     2006 2305 FIXED                    GP10113
         DC    A(TALLDA)     2007 2305 FIXED                    GP10113
         DC    A(T2314)      2008 2314 MOUNTABLE                GP10113
         DC    A(T3330)      2009 3330 MOUNTABLE                GP10113
         DC    A(T3340)      200A 3340 MOUNTABLE                GP10113
         DC    A(T3350)      200B 3350 SOME MOUNTABLE           GP10113
         DC    A(TALLDA)     200C 3375 FIXED                    GP10113
         DC    A(T3330D)     200D 3330-1 MOUNTABLE              GP10113
         DC    A(TALLDA)     200E 3380 FIXED                    GP10113
         DC    A(TALLDA)     200F 3390 FIXED                    GP10113
T2311    DC    C'//             UNIT=2311'
T2321    DC    C'//             UNIT=2321'                      GP10113
T2314    DC    C'//             UNIT=2314'
T3330    DC    C'//             UNIT=3330'
T3330D   DC    C'//           UNIT=3330-1'
T3340    DC    C'//             UNIT=3340'
T3350    DC    C'//             UNIT=3350'                      GP10113
TALLDA   DC    C'//         UNIT=SYSALLDA'                      GP10113
*
BLEPARML DS    H                                                      $
BLEPARM  DC    C'// PARM=('''                                         $
LESYSOUT DC    C'//SYSPRINT DD  SYSOUT=*'                       GP10113
LESYSUT5 DC    C'//SYSUT5   DD  SPACE=(CYL,(5,1)),UNIT=SYSDA  '       $
LESYSLMD DC    C'//SYSLMOD  DD  DISP=OLD,'
LEDSNAME DC    C'//             DSNAME='
LEINPUT  DC    C'//         DD  DISP=SHR,'
LESYSLIN DC    C'//SYSLIN   DD  *'
COPYBASE DC    C'     COPY INDD='
SELECT   DC    C'          SELECT    MEMBER='
NUCINS01 DC    C'INSERT IEAANIP0'
NUCINS02 DC    C'INSERT IEAQFX00'
NUCINS03 DC    C'INSERT DOSBLKS'
NUCINS04 DC    C'INSERT IGFCCH'
         PRINT NOGEN                                            GP10113
         TITLE 'Z Z R E L I N K  ***  CONTROL CARD SCANNER'     GP10113
ZZRESCAN STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP10113
         LR    R12,R15            LOCAL BASE                    GP10113
         XC    SUBSAVE1+4*R15(4),SUBSAVE1+4*R15  CLEAR RC       GP10113
         USING ZZRESCAN,R12       LOCAL BASE                    GP10113
         USING ZZRELCOM,R10                                     GP10113
*                                                                     *
*TITLE- RELINKER CONTROL CARD SCAN AND ANALYSIS CSECT- ZZRESCAN       *
*                                                                     *
*                                                                     *
*FUNCTION/OPERATION-  THIS MODULE SCANS CONTROL CARDS AND GIVES       *
*       MESSAGES FOR SYNTAX OR SEQUENCE ERRORS. IT BUILDS AN INDD     *
*       TABLE OF DD NAMES OF INPUT DATA SETS WHICH CONTAIN MEMBERS    *
*       TO BE COPIED. IT BUILDS AN SE TABLE OF MEMBER NAMES TO BE     *
*       SELECTED OR EXCLUDED IN THE LINK. IT STORES THE NAME OF       *
*       THE OUTPUT DD STATEMENT IN BUFFER 'OUTNAME'.                  *
*                                                                     *
*ENTRY POINTS- ENTERED AT ZZRESCAN.                                   *
*        ENTERED AT ZZRSEF ON EOF ON SYSIN                            *
*                                                                     *
*INPUT- SYSIN WHICH CONSISTS OF CONTROL STATEMENTS.                   *
*                                                                     *
*OUTPUT- SYSPRINT WHICH CONTAINS THE DIAGNOSTIC MESSAGES AND THE      *
*        CONTENTS OF SYSIN                                            *
*                                                                     *
*EXITS-  ERROR- IF AN ERROR OCCURS, A CODE IS STORED, A MESSAGE IS    *
*        GIVEN TO THE USER EXPLAINING THE ERROR CONDITION AND A       *
*        RETURN TO THE CALLING PROGRAM IS MADE.                       *
*                                                                     *
*EXTERNAL ROUTINES- READ CARD (GET), PRINT CARD OR ERROR MESSAGE (PUT)*
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*      -KEYTAB-    LIST OF VALID KEYWORDS                             *
*      -COMDTABL-  LIST OF VALID COMMAND WORDS                        *
*      -CCIMAGE-   BUFFER CONTAINING CONTROL CARD IMAGE               *
*      -INDD TABLE-POINTED TO BY @MDTDD1                              *
*      -SE TABLE-  POINTED TO BY @MDTMB1                              *
*      -PARMSWCH-  INTERNAL SCAN SWITCHES                             *
*      -CCSWITCH-  EXTERNAL SCAN SWITCHES                             *
*      -COMDCDSW-  EXTERNAL SCAN SWITCHES                             *
*      -CPARAMSW-  INTERNAL SCAN SWITCHES                             *
*                                                                     *
*                    SCAN ROUTINE CONSTANTS                           *
*                                                                     *
ANAT     EQU   C'@'                    NATIONAL SYMBOL- OKAY IN MEMBER
APOUND   EQU   C'#'                    NATIONAL SYMBOL- OKAY IN MEMBER
ADOLLAR  EQU   C'$'                    NATIONAL SYMBOL- OKAY IN MEMBER
AC       EQU   C'L'
ANA      EQU   X'C0'                   START OF VALID CHARACTER
EQUAL    EQU   C'='                    HEX 'EQUAL'
COMMA    EQU   C','                    HEX 'COMMA'
BLANKCOL EQU   C' '                    HEX 'BLANK'
PARENLFT EQU   C'('                    LEFT PARENTHESIS
PARENRGT EQU   C')'                    RIGHT PARENTHESIS
CRESET0  EQU   X'00'                   RESETS SWITCHES
*                                                                     *
*                      SYMBOLIC REGISTER FOR SCAN                     *
LENREG   EQU   9                       LENREG OF PARAMETER REGISTER 9
SCANADR  EQU   1                       ADDRESS OF PARAMETER REGISTER 1
LEN8     EQU   8                  LENGTH OF COMMAND OR KEYWORD
LEN12    EQU   12                 LENGTH OF ENTRY
SAV4     EQU   4                  OLD SAVE AREA
SAV8     EQU   8                  SAVE
TABLE0   EQU   0                  ZERO TABLE DISPLACEMENT
COL71    EQU   71                 COLUMN 72
COL70    EQU   70                 COLUMN 71
SCAN0    EQU   0                  COLUMN BEING SCANNED
UP1      EQU   1                  COLUMN UPDATE
PARCNT   EQU   X'01'              PARENTHESIS COUNT
         TM    RDRFLAGS,FGKEEP    STACKED CARD ?                GP14266
         BNZ   PARCNT2              YES; IGNORE EOF             GP14266
         TM    CCSWITCH,SYSINEOF       END OF FILE ON LAST READ
         BO    TERMS              YES- TERMINATE JOB-- SYSIN DONE
PARCNT2  TM    PARMSWCH,FLUSHSW        FLUSHING
         BO    IGNORE             YES- GET NEXT CARD
         TM    CCSWITCH,ZZRLINKC       HAVE ZZRLINK CONTROL CARDS
         BO    SCANERRM           YES- MIXED CODES
         NI    COMDCDSW,FF-SELECTSC-EXCLUDES-MEMBRCD1 RESET SWITCHES
         B     TOSCAN                  CONTINUE
IGNORE   TM    CPARAMSW,COL72BLK       IS THIS CARD CONTINUED    A48742
         BO    IGNRENXT                NO                        A48742
         NI    SCANSWCH,FF-NOCMMEXP    RESET BYPASS SCAN SWITCH  A48742
         B     IGNOREON                AND CONTINUE              A48742
IGNRENXT OI    SCANSWCH,NOCMMEXP       SET BYPASS SCAN SWITCH    A48742
IGNOREON MVI   COMDCDSW,CRESET0
         MVI   CCDELIM2,CRESET0
         TM    CCSWITCH,CARDPRTD  WAS THE CARD PRINTED           A48800
         BO    GOONSC             YES                            A48800
         BAL   R9,PRNTCRD         NO, PRINT THE CARD             A48800
*OONSC   MVI   CCSWITCH,CRESET0        CLEAR SWITCHES FIRST TIME THRU
GOONSC   NI    CCSWITCH,SYSINEOF  KEEP EOF FLAG                 GP14266
GOONS    MVI   CPARAMSW,READ1          FORCE READ FIRST CONTROL CARD
TOSCAN   BAL   R14,RDCARD              GO TO CONTROL CARD SCAN
RETRTOSC L     LENREG,CSTOREG          LENREG OF PARAMETER
         L     SCANADR,CSTOREG+SAV4 START OF PARAMETER
         LTR   LENREG,LENREG           IS SCAN LENGTH ZERO
         BZ    BADPARM                 BAD PARAMETER
         TM    CCSWITCH,COMDNOW        IS COMMAND SWITCH ON
         BO    OPRLUP             YES- CHECK COMMAND WORDS
*                                                                     *
*   KEYWORD LOOKUP ROUTINE
         LA    R5,KEYTAB               START OF KEY WORD TABLE
         LA    R7,KEYEND               END OF KEY WORD TABLE
         B     SCANTBL                 SEARCH FOR KEY WORD
*   COMMAND WORD LOOKUP TABLE
OPRLUP   LA    R5,COMDTABL             START OF COMMAND TABLE
         LA    R7,COMDEND              END OF COMMAND TABLE
SCANTBL  LA    R6,LEN8            MAXIMUM LENGTH OF KEYWORD OR COMMAND
         CR    LENREG,R6               TEST IF LENGTH EXCEEDS 8
         BH    PRTBAD                  PRINT BAD CARD
         LA    R6,COMDTAB2-COMDTABL    TABLE ENTRY SIZE         GP10113
         MVC   SARG(LEN8),BLANKS8 MOVE BLANKS TO SEARCH ARGUMENT
         BCTR  LENREG,0           DECREMENT FOR EXECUTE COUNT
         EX    LENREG,OPRLUP3          MOVE PARAMETER TO 'SARG'
OPRCMP   CLC   SARG(LEN8),2(R5)   TEST IF SEARCH ARGUMENT IN TABLE
         BNE   OPRLUP2                 NO- CONTINUE SCAN OF TABLE
         LH    R15,0(,R5)         ENTRY OFFSET OF ROUTINE       GP10113
         B     ZZRESCAN(R15)           ENTER PROPER ROUTINE     GP10113
OPRLUP2  BXLE  R5,R6,OPRCMP            LOOP TO CONTINUE SCAN
PRTBAD   LA    R2,MIDINKEY             INVALID COMMAND OR KEYWORD
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
*     COMMAND LOOKUP TABLE
* FORMAT OF TABLE -
*     1) OFFSET TO ANALYZER SUBROUTINE
*     2) KEYWORD OR ABBREVIATION (ALWAYS AN 8-BYTE 'DC')
COMDTABL DS    0H                      START OF VALID COMMAND TABLE
         CDEF  CHKLINK,LINK       BRANCH TO ANALYZER            GP10113
COMDTAB2 CDEF  CHKLINK,L          BRANCH TO ANALYZER            GP10113
         CDEF  CHKLINK,COPYMOD    BRANCH TO ANALYZER            GP10113
         CDEF  CHKLINK,COPY       BRANCH TO ANALYZER            GP10113
         CDEF  CHKLINK,C          BRANCH TO ANALYZER            GP10113
* SUBSEQUENT TABLE ELEMENTS ARE IN SAME FORMAT AS THE ABOVE
         CDEF  CHKEXCLD,EXCLUDE   CHECK EXCLUDE                 GP10113
         CDEF  CHKEXCLD,EXC       CHECK EXCLUDE                 GP10113
         CDEF  CHKEXCLD,E         CHECK EXCLUDE                 GP10113
         CDEF  CHKSELCT,SELECT    CHECK SELECT                  GP10113
         CDEF  CHKSELCT,SEL       CHECK SELECT                  GP10113
COMDEND  CDEF  CHKSELCT,S         CHECK SELECT                  GP10113
         SPACE 1
*     KEYWORD LOOKUP TABLE
* FORMAT OF TABLE -
*     1) OFFSET TO ANALYZER SUBROUTINE
*     2) KEYWORD OR ABBREVIATION (ALWAYS AN 8-BYTE 'DC')
KEYTAB   DS    0H                 START OF KEY WORD TABLE
         CDEF  MEMBRANL,MEMBER    BRANCH TO ANALYZER            GP10113
         CDEF  MEMBRANL,MEM       BRANCH TO ANALYZER            GP10113
         CDEF  MEMBRANL,M         BRANCH TO ANALYZER            GP10113
* SUBSEQUENT TABLE ELEMENTS ARE IN SAME FORMAT AS THE ABOVE
         CDEF  OUTDDANL,OUTDD     CHECK OUTDD                   GP10113
         CDEF  OUTDDANL,ODD       CHECK OUTDD                   GP10113
         CDEF  OUTDDANL,O         CHECK OUTDD                   GP10113
         CDEF  INDDANL,INDD       CHECK INDD                    GP10113
         CDEF  INDDANL,IDD        CHECK INDD                    GP10113
KEYEND   CDEF  INDDANL,I          CHECK INDD                    GP10113
         SPACE 1
OUTDDANL TM    PARMSWCH,FLUSHSW        DOING A FLUSH
         BO    IGNORE             YES- SKIP THIS CARD
         TM    PARMSWCH,LINKNOW        ON LINK STATEMENT
         BZ    INVALODL           ERROR- OUTDD NOT ON LINK CARD
COMPRETN OI    COMDCDSW,NEWOUT         SET OUTDD SCANNED SWITCH
*                                        LINK OPERATION HAS BEEN FOUND
         TM    CPARAMSW,DELIMEND       NAME ON NEXT CARD (= IN COL 71)
         BZ    PICKNAME           NO- NORMAL PROCESSING
         BAL   R14,GETPARM             GET NEXT CARD- POSITION TO PARM
PICKNAME BAL   R14,RDCARD              GET PARAMETER
         L     SCANADR,CSTOREG+SAV4 START OF PARAMETER
         L     LENREG,CSTOREG          SIZE OF PARAMETER
         LA    R6,LEN8            MAXIMUM LENGTH OF NAME
         CR    R6,LENREG
         BL    BADPARM                 NAME GREATER THAN 8 BYTES
         MVC   OUTNAME(LEN8),BLANKS8
         SH    LENREG,=H'1'  LENGTH FOR EXECUTE                 GP10113
         BM    BADPARM       NULL IS INVALID                    GP10113
         EX    LENREG,EXMVCOUT   MOVE NAME                      GP10113
         CLC   =C'SYSUT',OUTNAME  RESERVED NAME ?               GP10113
         BNE   OTHNAMES                                         GP14266
         TM    CCSWITCH,SYSINEOF  SYSIN DD DUMMY ?              GP14266
         BZ    DDCLASH              NO; NOT PERMITTED           GP14266
         CLC   =C'1 ',OUTNAME+5   INPUT LOADLIB?                GP14266
         BE    PICKNAND             YES                         GP14266
         CLC   =C'2 ',OUTNAME+5   OUTPUT LOADLIB?               GP14266
         BE    PICKNAND             YES                         GP14266
OTHNAMES LA    R14,TABOODD   POINT TO OTHER RESTRICTED NAMES    GP10113
         LA    R0,(L'TABOODD/4)    NUMBER TO CHECK              GP10113
TABULOOP CLC   OUTNAME,0(R14)      RESTRICTED NAME              GP10113
         BE    DDCLASH       YES; FAIL                          GP10113
         LA    R14,8(,R14)   NEX  T NAME                        GP10113
         BCT   R0,TABULOOP   AND  CHECK THAT                    GP10113
         B     PICKNAND      ALL DONE WITH NAME                 GP10113
DDCLASH  LA    R2,MIDRESDD   DDNAME IS RESERVED                 GP10113
         B     ERRSTOP       FATAL ERROR                        GP10113
TABOODD  DC    C'SYSPRINTSYSIN   SYSLIN  SYSUT5  SYSUT6  SYSUT3  SYSUT4*
                 SYSLOUT '                                      GP10113
EXMVCOUT MVC   OUTNAME(0),SCAN0(SCANADR)  MOVE OUT DD NAME      GP10113
PICKNAND TM    CCSWITCH,LASTPARM       LAST PARAMETER ON CARD
         BZ    TOSCAN             NO- CHECK FOR LIST OPTION
*NEXT*   B     CHKCOMSC                CHECK FOR CONTINUED COMMENTS
         SPACE 1
CHKCOMSC TM    CPARAMSW,COL72BLK       CONTINUED CARD
         BZ    LINKALLD           FINISH UP LINK CARD SCAN
         BAL   R9,CHK4COMT             CHECK FOR CONTINUED COMMENTS
LINKALLD OI    COMDCDSW,LINKDONE       SET DONE WITH LINK CARD SWITCH
         MVI   PARMSWCH,CRESET0        RESET ALL, ESPECIALLY 'LINKNOW'
         B     GOONSC                  GET NEXT CARD
CHKEXCLD TM    PARMSWCH,FLUSHSW        FLUSHING
         BO    IGNORE             YES- IGNORE THIS CARD
         TM    COMDCDSW,SELECTSC       SELECT CARD AHEAD
         BO    MULTS              YES- ERROR TO HAVE BOTH
         LA    R7,RETRNEV              RETURN ADDRESS
         TM    COMDCDSW,EXCLUDES       MULTIPLE EXCLUDES
         BZ    TESTCSE            NO
         B     MULTSET                 SET MULTIPLE S/E SWITCH
RETRNEV  OI    COMDCDSW,EXCLUDES       SET EXCLUDE SWITCH
         NI    COMDCDSW,FF-MEMBRCD1    INDIC MEMBER KEYWORD FOR  A38724
*           THIS EXCLUDE COMMAND NOT YET FOUND                   A38724
         B     TOSCAN                  CONTINUE
CHKSELCT LA    R7,SELCTOK              RETURN FROM FOLLOWING ROUTINE
         TM    PARMSWCH,FLUSHSW        DOING A FLUSH
         BO    IGNORE             YES- SKIP THIS CARD
         TM    COMDCDSW,EXCLUDES       EXCLUDE CARD AHEAD OF SELECT
         BO    MULTS              YES- ERROR TO MIX THEM
         TM    COMDCDSW,SELECTSC       PREVIOUS SELECT
         BZ    TESTCSE            ONLY ONE SELECT
MULTSET  OI    CCSWITCH,MULTSE         MULTIPLE SELECT/EXCLUDE
TESTCSE  TM    PARMSWCH,COMDPART       PART OF COMMAND ON NEXT CARD
         BZ    NOGOON             NO- GO ON AND PRINT CARD
         MVI   PARMSWCH,CRESET0        RESET ENTIRE SWITCH
         B     AFTRPRT                 DO NOT PRINT CARD
NOGOON   BAL   R9,PRNTCRD              PRINT THE CARD
AFTRPRT  TM    COMDCDSW,NEWINDD        HAVE AN INDD
         BZ    NOINDDSP           NO- SEQUENCE ERROR
         TM    CCSWITCH,LASTPARM       MORE PARAMETERS ON CARD
         BO    NULLP              NO- MUST HAVE MEMBER KEYWORD
         NI    CCSWITCH,FF-COMDNOW RESET COMMAND WORD SWITCH
         BR    R7                      RETURN
SELCTOK  OI    COMDCDSW,SELECTSC       SET SELECT SWITCH
         NI    COMDCDSW,FF-MEMBRCD1    INDIC MEMBER KEYWORD FOR  A38724
*           THIS EXCLUDE COMMAND NOT YET FOUND                   A38724
         B     TOSCAN                  CONTINUE
INDDANL  TM    PARMSWCH,FLUSHSW        DOING A FLUSH
         BO    IGNORE             YES- SKIP THIS CARD
         TM    CCSWITCH,ZZRLINKC       ZZRLINK STATEMENTS
         BO    SCANERRM           YES- MIXED MODES
         TM    PARMSWCH,LINKNOW        INDD ON LINK CARD
         BO    NEXTI              YES
         TM    COMDCDSW,SELECTSC+EXCLUDES  JUST GOT SELECT OR EXCLUDE
         BM    RESETIN            YES- DO A LINK
         BAL   R9,PRNTCRD              PRINT INDD CARD
         TM    COMDCDSW,NEWINDD        JUST HAD AN INDD
         BO    STRMEMBS           ADD THESE NAMES TO TABLE
         NI    CCSWITCH,FF-MULTSE RESET MULTIPLE S/E SWITCH
         B     GOGOGO                  GO BUILD THE INDD TABLE
NEXTI    TM    COMDCDSW,NEWINDD        INDD ON LINK CARD ALREADY
         BO    SCANERR            YES- ONLY ONE INDD PER LINK CARD
GOGOGO   OI    COMDCDSW,NEWINDD        FLAG AS HAVE AN INDD
         NI    COMDCDSW,FF-SELECTSC-EXCLUDES-MEMBRCD1 RESET SWITCHES
**********                                                   **********
**********         BUILD TABLE OF INDD NAMES                 **********
**********                                                   **********
         XC    CLEARSEL(CLEARSIZ),CLEARSEL  CLEAR COUNTERS      GP10113
         MVC   @MDTDDC,@MDTDD1    NO MBR OR INDD ENTRIES YET
         MVC   @MDTMBN,@MDTDD1    NO MBR OR INDD ENTRIES YET
STRMEMBS TM    CPARAMSW,DELIMEND       NAME ON NEXT CARD (= IN 71)
         BZ    CONTSC             NO- CONTINUE NORMAL PROCESSING
GETNEXTC LA    R14,SCANSOME            RETURN FROM FOLLOWING ROUTINE
*  ROUTINE 'GETPARM' READS NEXT CARD AND POSITIONS TO CONTINUATION
*   PARAMETER. R14 SET ON ENTRY T O ROUTINE WITH RETURN ADDRESS.
GETPARM  ST    R14,GETPRM14                                     GP10113
GETPARMR BAL   R9,READCC               GET NEXT CARD            GP10113
         BAL   R9,PRNTCRD              PRINT THE CARD
         MVI   CPARAMSW,CRESET0        CLEAR PARAMETER SWITCH
         CLI   CCIMAGE+COL71,BLANKCOL COL 72 BLANK
         BE    ARNDNXT                 YES- NOT CONTINUED
         OI    CPARAMSW,COL72BLK       SET COLUMN 72 NOT BLANK SWITCH
ARNDNXT  LA    R6,CCIMAGE+COL70   END OF CARD PARAMETER COLUMN
         BAL   R9,NAMESCAN             SCAN OVER NAME IF ANY
LOOP2    CLI   SCAN0(R3),BLANKCOL  COLUMN BLANK
         BNE   STRTPARM                NO- START OF PARAMETER
LOOPPARM LA    R3,1(,R3)          UPDATE TO NEXT COLUMN
         CR    R3,R6
         BNH   LOOP2                   SCAN TO COLUMN 71
         B     GETPARMR                GET NEXT CARD            GP10113
STRTPARM ST    R3,CSTOREG+SAV8    STORE START OF PARAMETER
         NI    PARMSWCH,FF-COMDPART RESET PARAMETER CONTINUED SWITCH
         OI    CPARAMSW,PARMCOME       SET TO EXPECT PARAMETER
         L     R14,GETPRM14            RESTORE                  GP10113
         BR    R14                     RETURN                   GP10113
CONTSC   L     R3,CSTOREG+SAV8    COLUMN TO START SCAN
         NI    CCSWITCH,FF-UNECPARN RESET PARENTHESIS SWITCH
         XC    LEFTPCNT(4),LEFTPCNT CLEAR PARENTHESIS COUNT BUFFER
         CLI   SCAN0(R3),PARENLFT   START WITH LEFT PAREN
         BNE   SCANSOME                GET NEXT PARAMETER
         OI    CCSWITCH,UNECPARN       SET PARENTHESIS SWITCH
         LA    R3,1(,R3)          UP TO ACTUAL NAME- SET 4 BCTR
         MVI   LEFTPCNT+UP1,PARCNT MAKE LEFT PAREN COUNT 1
SCANSOME NI    PARMSWCH,LINKNOW        RESET ALL BUT LINK NOW SWITCH
         SR    R7,R7                   CLEAR PARAMETER SIZE
         BCTR  R3,0               BACK UP POINTER
***********************************************************************
*** START OF GENERAL INDD OR MEMBER NAME SCAN ROUTINE AT INDDLOOP.  ***
***********************************************************************
INDDLOOP LA    R3,1(,R3)          UP TO NEXT COLUMN
         TM    CPARAMSW,DELIMEND       UP TO 71
         BZ    NOGET              NO
         BAL   R14,GETPARM             GET PARAMETER FROM NEXT CARD
NOGET    BAL   R9,TESTLAST             CHECK IF UP TO COLUMN 71
         CLI   SCAN0(R3),COMMA    COMMA
         BH    TRYNAME                 NO- HIGHER THAN COMMA
         BE    CHKCOMMA                YES- DELIMITER
         CLI   SCAN0(R3),PARENLFT      LEFT PARENTHESIS
         BE    CHKPARNL                YES
         CLI   SCAN0(R3),PARENRGT      RIGHT PARENTHESIS
         BE    CHKPARNR                YES
         CLI   SCAN0(R3),ADOLLAR       IS IT A NATIONAL SYMBOL '$'
         BE    STRNAME                 YES- OKAY
         CLI   SCAN0(R3),BLANKCOL      BLANK
         BNE   BADPARM                 BAD PARAMETER
         TM    PARMSWCH,SCANNAME       BEEN SCANNING NAME
         BO    BLNKSTP                 YES- STOP NAME SCAN
SET4READ CLC   LEFTPCNT,RGHTPCNT EQUAL NUMBER LEFT AND RIGHT PARENS?
         BNE   MISSPARN                ERROR- MISSING PARENTHESIS
         TM    CPARAMSW,COL72BLK       CARD CONTINUED
         BZ    GOONS                   NO GET NEXT CARD
         BAL   R9,CHK4COMT             CHECK FOR CONTINUED COMMENTS
         B     GOONS                   GET NEXT CARD
CHK4COMT ST    R9,SARG                 SAVE RETURN ADDRESS
         LA    R6,CCIMAGE+COL71        COLUMN 72
LOOPCOM  CLI   SCAN0(R3),BLANKCOL      NEXT COLUMN BLANK
         BNE   ACOMMENT                NO- START OF COMMENT
         LA    R3,1(,R3)
         CR    R3,R6                   END OF CARD NO COMMENT FOUND
         BNE   LOOPCOM                 CONTINUE COMMENT SCAN
         B     CONTINV                 INVALID CONTINUATION      A48799
ACOMMENT BAL   R9,READCC               READ NEXT CARD
         BAL   R9,PRNTCRD              PRINT THE COMMENT CARD
         CLI   CCIMAGE+COL71,BLANKCOL  COMMENT CONTINUED
         BNE   ACOMMENT                YES- GET NEXT COMMENT CARD
         NI    CPARAMSW,FF-COL72BLK    RESET CONTINUED SWITCH
         L     R9,SARG                 LOAD RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
CHKIFSTP LA    R3,1(,R3)
         TM    PARMSWCH,COMDPART       UP TO COL 71 PARM CONTINUED
         BO    GETNEXTC                YES- GET NEXT CARD
         CLI   SCAN0(R3),BLANKCOL      NEXT COLUMN BLANK
         BNE   SCANSOME                NO- SCAN SOME MORE
         B     CHKCONTY                CHECK IF CARD CONTINUED
TRYNAME  CLI   SCAN0(R3),ANA
         BNL   STRNAME                 OKAY- ALPHABETIC OR NUMERIC
*  THREE NATIONAL SYMBOLS ALLOWED IN MEMBER NAMES- 'AT' SIGN, POUND
*    SIGN, AND DOLLAR SIGN. CHECK BEFORE FOR DOLLAR SIGN MUST CHECK
*    HERE FOR 'AT' AND POUND SYMBOL.
         CLI   SCAN0(R3),ANAT          IS IT AN 'AT' SIGN
         BE    STRNAME                 YES- OKAY
         CLI   SCAN0(R3),APOUND        IS IT A 'POUND' SIGN
         BE    STRNAME            YES - OKAY
         CLI   SCAN0(R3),EQUAL         COULD IT BE AN EQUAL SIGN
         BNE   BADPARM            IF ITS NOT, ITS INVALID
         TM    COMDCDSW,MEMBRCD1       EQUAL SIGN IN MEMBER NAME SCAN
         BO    BADPARM                 YES- NOT ALLOWED
         TM    PARMSWCH,LINKNOW        EQUAL SIGN WITH INDD ON LINK
         BZ    BADPARM                 NO- NOT ALLOWED IF NOT ON LINK
         TM    PARMSWCH,COMDPART       DELIMITER IN COLUMN 71
         BZ    TSTDLM                  NOT IN 71
         OI    CPARAMSW,DELIMEND       SET IN 71 SWITCH
TSTDLM   TM    CPARAMSW,CONTINY        PARAMETER WAS CONTINUED
         BZ    SETRETOK                NO
         NI    CCSWITCH,FF-COMDNOW     RESET COMMAND SWITCH
         BAL   R9,KCREATE              RECREATE KEYWORD
         OI    CPARAMSW,PARMCOME  SET BIT
*          NAME NOT SCANNED, IF AN EQUAL SIGN IS A KEYWORD, POINTERS
*   ALL SET,   GO TO KPASS AND WILL RETURN TO CHECK KEYWORD JUST AS IF
*   RDCARD ROUTINE HAD SCANNED THE KEYWORD.
SETRETOK LA    R14,RETRTOSC            RETURN FROM INITIALIZED 'KPASS'
         ST    R14,SARG                STORE RETURN SO RDCARD CAN FIND
         B     KPASS                   SET UP AS IF 'RDCARD' SCANNED
STRNAME  LA    R7,1(,R7)               UP COUNT OF CHARACTERS IN NAME
         TM    PARMSWCH,SCANNAME       ALREADY SCANNING NAME
         BO    ALLSCAN                 YES
         OI    PARMSWCH,SCANNAME       SET NAME SCANNING SWITCH
         LR    R1,R3                   LOAD POINTER TO START OF NAME
ALLSCAN  TM    PARMSWCH,COMDPART       CONTINUED NAME
         BZ    SAMECARD                NO- CARD COMPLETE
         OI    CPARAMSW,CONTINY        SET TO CONTINUE ON NEXT CARD
         LA    R14,INDDLOOP            RETURN ADDRESS
         ST    R14,SARG                STORE RETURN ADDRESS FOR SCAN
         B     KPART                   SET UP FIRST PART OF PARAMETER
SAMECARD TM    CPARAMSW,DELIMEND       CHARACTER IN 71, NOT CONTINUED
         BZ    INDDLOOP                NO- CONTINUE SCAN
         B     ENDNAME                 STORE NAME
*
*    NAMES ON MEMBER STATEMENT ONLY IN () IF RENAME OR REPLACE OPTION
*   WAS SPECIFIED.  HOWEVER, FOR COMPATIBILITY, ALSO ALLOW LIST OF
*   MBR NAMES WITHIN PARENS.
*
CHKPARNL TM    CCSWITCH,ZZRLINKC       ZZRLINK CONTROL CARDS
         BZ    TSTRGHT                 NO
         NI    PARMSWCH,FF-ONELEFT     RESET LEFT PARENTHESIS SWITCH
         B     CONTCPPY           ADD 1 TO LEFT-PAREN COUNT
TSTRGHT  TM    COMDCDSW,EXCLUDES       REPLACE/RENAME ON EXCLUDE
         BO    NORENAME           IF SO, ITS INVALID
         TM    PARMSWCH,ONELEFT   WAS A LEFT PAREN ALREADY SCANNED
         BO    BADREPLC                YES- INVALID REPLACE SPECIFIED
         OI    PARMSWCH,SET4REPL+ONELEFT  SET SWITCHES FOR REPLACE
CONTCPPY LH    R6,LEFTPCNT
         LA    R6,1(,R6)               UP COUNT BY 1
         STH   R6,LEFTPCNT             STORE NEW COUNT
         CH    R6,=H'3'                TOO MANY ?               GP10113
         BH    MANYPARN                YES; ERROR               GP10113
         TM    PARMSWCH,SCANNAME       LEFT PAREN WHILE SCAN OF NAME
         BO    BADREPLC                YES- INVALID REPLACE SPECIFIED
         B     INDDLOOP                CONTINUE SCAN
CHKDUPC  TM    CPARAMSW,DELIMEND       COMMA IN COLUMN 71
         BO    ENDNAME                 YES- END SCAN OF NAME
         CLI   UP1(R3),COMMA           NEXT CHARACTER ALSO A COMMA
         BE    NULLP                   YES- NULL PARAMETER ERROR
         CLI   UP1(R3),PARENRGT        IS COMMA FOLLOWED BY RIGHT PAREN
         BE    NULLP              YES - NULL PARAMETER
         B     ENDNAME                 CONTINUE
BLNKSTP  MVI   CCDELIM,BLANKSGN        SET AS DELIMITER A BLANK
ENDNAME  TM    CPARAMSW,CONTINY        PARM CONTINUED
         BZ    NOCONT                  NO
         NI    CCSWITCH,FF-COMDNOW     RESET COMMAND SWITCH
         BAL   R9,KCREATE              YES- RECREATE PARAMETER
NOCONT   LA    R9,LEN8
         CR    R7,R9
         BH    BADPARM                 BAD PARAMETER
         L     R8,@MDTMBN              NEXT SLOT IN INDD TABLE
         USING MDSECT,R8                                        GP10113
         MVC   MDSECT(MDSIZE),FLAGBYTS  CLEAR FLAGS, BLANK NAME GP10113
         BCTR  R7,0                    DECREMENT COUNT FOR EXECUTE
         EX    R7,EXMVDDMB             MOVE DD NAME TO TABLE
         NI    PARMSWCH,FF-SCANNAME    RESET SCANNING NAME SWITCH
         TM    COMDCDSW,MEMBRCD1       MEMBER STATEMENT
         BO    MEMBRCD                 YES- HANDLE DATA SET NAMES
         TM    PARMSWCH,SET4REPL       THIS NAME A REPLACE
         BZ    REGNAME                 NO- CONTINUE
         OI    MDFLAGS,MDFREP          SET REPLACE OPTION BIT   GP10113
         NI    PARMSWCH,FF-SET4REPL-HASNEWNM  RESET SWITCHES
REGNAME  LH    R6,INDDCT
         LA    R6,1(,R6)               UP DD COUNT
         STH   R6,INDDCT               STORE NEW COUNT
         LA    R8,MDSIZE(,R8)          NEXT SLOT IN INDD BUFFER GP10113
         ST    R8,@MDTMBN              END OF SE TABLE
         DROP  R8                                               GP10113
         SR    R7,R7                   CLEAR COUNT REGISTR
         TM    CCDELIM,BLANKSGN        END OF NAMES REACHED
         BZ    INDDLOOP                NO- SCAN FOR MORE NAMES
         CLI   SCAN0(R3),COMMA         REALLY STOPPED AT A COMMA
         BE    CHKCONTY                YES
ISDONE   NI    PARMSWCH,FF-LINKNOW     RESET LINK CARD SCAN SWITCH
         TM    COMDCDSW,NEWOUT         HAD AN OUTDD ON LINK CARD
         BZ    NOINDDSP                NO OUTDD SPECIFIED
         OI    COMDCDSW,LINKDONE+NEWOUT+NEWINDD BE SURE ALL ARE SET
         B     SET4READ                GET NEXT CARD
RESETIN  NI    COMDCDSW,FF-NEWINDD     RESET HAVE AN INDD SWITCH
         LA    R3,CCIMAGE              START OF CARD
         NI    CPARAMSW,COL72BLK       RESET ALL BUT CONTINUATION PUNCH
         ST    R3,CSTOREG+SAV8         STORE COLUMN TO SCAN NEXT
*OOPS*   NI    CCSWITCH,CRESET0        CLEAR SWITCH
         NI    CCSWITCH,SYSINEOF       CLEAR SWITCH             GP14266
         B     GETOUT                  RETURN TO MAINSTREAM
TESTLAST LA    R5,CCIMAGE+COL70        LAST COLUMN (71)
         CR    R3,R5                   UP TO COLUMN 71
         BNER  R9                      NO- CONTINUE             GP10113
         OI    CPARAMSW,DELIMEND       CHARACTER IN COLUMN 71
         TM    CPARAMSW,COL72BLK       CONTINUATION PUNCH IN COLUMN 72
         BO    SETCONT                 SET FOR CONTINUED PARAMETER
         MVI   CCDELIM,BLANKSGN        SET TO STOP SCAN
         BR    R9                      RETURN
SETCONT  OI    PARMSWCH,COMDPART       SET AS CONTINUED PARAMETER
         BR    R9                      RETURN
CHKCOMMA TM    PARMSWCH,SCANNAME       SCANNING NAME
         BZ    CHKIFSTP                NO- CHECK IF CAN STOP (N,R),NAME
         TM    CPARAMSW,DELIMEND       COMMA IN COLUMN 71
         BO    CHKCONT                 YES                       A45150
         CLI   UP1(R3),BLANKCOL        NEXT COLUMN BLANK         A45150
         BNE   NOCMBLNK                NO                        A45150
CHKCONT  TM    PARMSWCH,SET4REPL+HASNEWNM REPLACE/RENAME SPECIFIED
         BNZ   CONTINV       YES ILLEGAL TO CONTINUE            GP10113
         TM    CPARAMSW,COL72BLK       PUNCH IN COLUMN 72
         BZ    CONTINV                 NO- CONTINUATION ERROR
         CLI   UP1(R3),BLANKCOL        NEXT COLUMN BLANK
         BE    BLNKSTP                 YES
NOCMBLNK TM    PARMSWCH,SET4REPL       REPLACE EXPECTED
         BZ    CHKDUPC            NO - CHECK NEXT COLUMN FIRST
         NI    PARMSWCH,FF-ONELEFT     RESET LEFT PARENTHESIS SWITCH
         TM    COMDCDSW,MEMBRCD1       DOING MEMBER SCAN
         BO    REPMEMB                 YES CHECK RENAME REPLACE
ON2TST   TM    CPARAMSW,DELIMEND
         BO    CONTINV            INVALID TO CONTINUE REPLACE    A48799
         LA    R3,1(,R3)          UP SCAN POINTER                A48799
         BAL   R9,TESTLAST        CHECK IF UP TO COLUMN 71       A48799
         TM    CPARAMSW,DELIMEND  UP TO COLUMN 71                A48799
         BO    CONTINV            INVALID TO CONTINUE REPLACE    A48799
         CLC   SCAN0(2,R3),RPARN      DOES 'R)' FOLLOW           A48799
         BNE   BADREPLC           IF NOT, ITS INVALID
         LA    R3,1(,R3)          UP SCAN POINTER                A48799
         BAL   R9,TESTLAST             CHECK IF UP TO COLUMN 71  A45185
CHKPARNR TM    PARMSWCH,ONELEFT        WAS SWITCH RESET
         BO    BADREPLC           IF NOT, INVALID CTL CARD
         LH    R6,RGHTPCNT
         LA    R6,1(,R6)               UP COUNT RIGHT PARENS
         STH   R6,RGHTPCNT             STORE NEW COUNT
         CLC   LEFTPCNT,RGHTPCNT COMPARE PARENTHESIS COUNT
         BNE   CHKIFUNC                CHECK IF STARTED WITH LEFT PAREN
         TM    CCSWITCH,UNECPARN       STARTED WITH PARENTHESIS
         BZ    ALLOK                   NO
         CLI   UP1(R3),BLANKCOL        NEXT COLUMN BLANK
         BNE   MORETEST           KEEP ON
         TM    COMDCDSW,MEMBRCD1  MEMBER NAME
         BO    ALLOK                   YES,STORE NAME
         TM    PARMSWCH,SCANNAME  WAS A NAME BEING SCANNED
         BO    BLNKSTP                 IF SO, GO TO STORE THE NAME
         B     ISDONE             DD NAME STORED
MORETEST CLI   UP1(R3),PARENLFT        NEXT CHARACTER LEFT PAREN
         BE    MISSPARN                UNEQUAL PARENTHESIS
         CLI   UP1(R3),PARENRGT        NEXT CHARACTER RIGHT PAREN
         BE    MISSPARN                UNEQUAL PARENTHESIS
         TM    PARMSWCH,LINKNOW        LINK CARD                 A41802
         BO    ALLOK                   YES                       A41802
         B     BADREPLC                INVALID CTL CARD          A41802
ALLOK    TM    PARMSWCH,SCANNAME       SCANNING NAME
         BO    NAMEFND                 YES- NAME COMPLETE        A45174
         TM    CPARAMSW,DELIMEND       UP TO 71                  A45174
         BO    GOONS                   YES- GET NEXT CARD        A45174
         B     INDDLOOP                NO- CONTINUE SCAN         A45174
NAMEFND  TM    CPARAMSW,DELIMEND       UP TO 71
         BO    BLNKSTP                 YES- SET AS IF BLANK STOPPED
         CLI   UP1(R3),BLANKCOL        IS NEXT COLUMN BLANK
         BNE   ENDNAME                 NO- END SCAN OF THIS NAME
         B     BLNKSTP                 SET STOPPED ON BLANK SWITCH
CHKIFUNC TM    CCSWITCH,UNECPARN       STARTED WITH PARENTHESIS
         BZ    MISSPARN                NO- UNEQUAL PAREN COUNT
         B     ENDNAME                 STORE NAME
MEMBRANL TM    COMDCDSW,SELECTSC+EXCLUDES   SELECT OR EXCLUDE
         BZ    BADMEMBS           IF NEITHER, CANT SAY 'MEMBER'
         TM    CCSWITCH,ZZRLINKC  ZZRLINK CONTROL STATEMENTS
         BO    SCANERRM           YES MIXED CODES
         TM    COMDCDSW,MEMBRCD1  WAS MEMBER KEYWRD FOUND ALRDY  A38724
         BO    BADMEMBS           YES-CANT SAY 'MEMBER'          A38724
         OI    COMDCDSW,MEMBRCD1       SET MEMBER KEYWORD SWITCH
         TM    CCSWITCH,MULTSE         CONSECUTIVE S/E
         BO    STRMEMBS                ADD NAMES TO TABLE
         MVC   @MDTMB1,@MDTMBN   START OF SE TABLE
         B     STRMEMBS                START INTERNAL MEMBER NAME SCAN
REPMEMB  LA    R3,1(,R3)               UP TO NEXT NAME
         BAL   R9,TESTLAST             CHECK IF UP TO COLUMN 71
         CLI   SCAN0(R3),ADOLLAR       VALID MEMBER NAME CHARACTER
         BE    OK4NAMEM                YES
         CLI   SCAN0(R3),COMMA         NEXT CHARACTER A COMMA
         BE    CHK4R                   YES- MUST BE R)
         BL    BADPARM            IF LT COMMA, ITS AN INVALID CHARACTER
OK4NAMEM ST    R3,CSTOREG+SAV4         SAVE POINTER START OF NEW NAME
         SR    R4,R4                   SECOND PARAMETER COUNT REGISTER
NAME2LOP LA    R4,1(,R4)               UP COUNT                 GP10113
         TM    CPARAMSW,DELIMEND
         BO    CONTINV               INVALID TO CONTINUE REPLACE A48799
         CLI   SCAN0(R3),ANA           USUAL CHARACTERS IN NAME
         BNL   OKCHAR                  YES- VALID CHARACTER
         CLI   SCAN0(R3),ADOLLAR       A DOLLAR SIGN
         BE    OKCHAR                  YES, OK
         CLI   SCAN0(R3),ANAT          AN 'AT' SIGN
         BE    OKCHAR                  YES- VALID CHARACTER
         CLI   SCAN0(R3),APOUND        A 'POUND' SIGN
         BNE   BADPARM                 WILL NOT BE , OR ) HERE
OKCHAR   LA    R3,1(,R3)               POINT TO NEXT CHARACTER
         BAL   R9,TESTLAST             TEST IF IN COLUMN 71
         CLI   SCAN0(R3),COMMA         COMMA
         BL    CHKRTPAR                CHECK IF RIGHT PARENTHESIS
         BH    NAME2LOP                SCAN TO END OF NAME
         OI    PARMSWCH,SET4REPL+HASNEWNM  SET REPLACE-NEW NAME SWITCH
         B     ON2TST                  UP POINTER AND RIGHT PAREN COUNT
CHKRTPAR CLI   SCAN0(R3),ADOLLAR       VALID MEMBER NAME CHARACTER
         BE    NAME2LOP                YES
         CLI   SCAN0(R3),PARENRGT      RIGHT PARENTHESIS
         BNE   BADPARM            IF NOT, ITS AN INVALID CHARACTER
         NI    PARMSWCH,FF-SET4REPL    RESET REPLACE SWITCH
         OI    PARMSWCH,HASNEWNM       SET NEW NAME- NO REPLACE
         B     CHKPARNR                UP RIGHT PAREN COUNT
CHK4R    OI    PARMSWCH,SET4REPL       SET REPLACE- NO NEW NAME SW
         B     ON2TST                  UP POINTERS
         USING MDSECT,R8                                        GP10113
MEMBRCD  BAL   R9,DUPECHEK             CHECK FOR DUPLICATE      GP10113
MEMBROK  TM    PARMSWCH,HASNEWNM       HAVE A NEW NAME          GP10113
         BZ    ONLYOLD                 NO
         OI    MDFLAGS,MDFNEWN         FLAG AS HAS A NEW NAME   GP10113
ONLYOLD  TM    PARMSWCH,SET4REPL       REPLACE OPTION
         BZ    NOREPL                  NO REPLACE
         OI    MDFLAGS,MDFREP          SET REPLACE OPTION       GP10113
NOREPL   TM    PARMSWCH,HASNEWNM       NEW NAME
         BZ    NAMEDONE           NO
         LA    R9,LEN8
         LA    R8,MDSIZE(,R8)          UP SE TABLE POINTER      GP10113
         CR    R4,R9                   NEW NAME GREATER THAN 8 BYTES
         BH    BADPARM            IF SO, ITS TOO LONG
         MVC   MDSECT(MDSIZE),FLAGBYTS CLEAR FLAGS, BLK NAME    GP10113
         L     R1,CSTOREG+SAV4         GET START OF NEW NAME
         BCTR  R4,0                    DECREMENT LENGTH FOR EXECUTE
         EX    R4,EXMVDDMB             MOVE MEMBER NAME TO SE TABLE
         BAL   R9,DUPECHEK             CHECK FOR DUPLICATE      GP10113
         OI    MDFLAGS,MDFNEWE         FLAG THIS AS A NEW NAME  GP10113
         LH    R6,ENCT
         LA    R6,1(,R6)
         STH   R6,ENCT                 UP SE ENTRY COUNT
         LH    R6,NNCT1
         LA    R6,1(,R6)               INCREMENT NEW NAME COUNT
         STH   R6,NNCT1                STORE UPPED NEW NAME COUNT
         TM    PARMSWCH,SET4REPL       REPLACE OPTION
         BZ    NAMEDONE                NO REPLACE
         OI    MDFLAGS,MDFREP          FLAG AS MEMBER REPLACE   GP10113
NAMEDONE LA    R8,MDSIZE(,R8)          UP TO NEXT SLOT SE TABLE GP10113
         LH    R6,ENCT
         LA    R6,1(,R6)
         STH   R6,ENCT                 UP SE ENTRY COUNT
         NI    PARMSWCH,FF-SET4REPL-HASNEWNM  RESET SWITCHES
         ST    R8,@MDTMBN              END OF SE TABLE
         SR    R7,R7
         TM    CCDELIM,BLANKSGN        JUST REACHED A BLANK
         BZ    INDDLOOP                NO- SCAN TILL BLANK
         CLI   SCAN0(R3),COMMA         REALLY STOPPED AT COMMA
         BNE   SET4READ                NO- ALL DONE
CHKCONTY TM    CPARAMSW,COL72BLK       PUNCH IN CONTINUE COLUMN 72
         BZ    CONTINV            IF NOT, SET UP INVALID CONTINUE MSG
         MVI   CCDELIM,CRESET0         RESET STOPPED ON BLANK SWITCH
         LA    R14,SCANSOME            RETURN FROM READING NEXTCARD
         B     GETPARM                 GET NEXT CARD            GP10113
DUPENAME LA    R2,MIDDUPNM        MEMBER NAME USED ALREADY      GP10113
         MVC   MSGPARM1,MDNAME                                  GP10113
         OI    PARMSWCH,FLUSHSW        FLUSHING                 GP10113
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
BADPARM  LA    R2,MIDINPRM
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
INVALODL LA    R2,MIDOOPDD             OUTDD NOT ON LINK CARD
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
BADMEMBS LA    R2,MIDNOSEX
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
CONTINV  LA    R2,MIDINCON             INVALID CONTINUATION      A48799
         B     GIVESCNE                GIVE MESSAGE              A48799
BADREPLC LA    R2,MIDINREP
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
NORENAME LA    R2,MIDNOEXR
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
MISSPARN LA    R2,MIDUNPAR        MESSAGE CODE
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
MANYPARN LA    R2,MIDEXPAR        MESSAGE CODE
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
PRTNULL1 TM    PARMSWCH,FLUSHSW        FLUSHING
         BO    IGNORE                  YES- GET NEXT CARD
NULLP    LA    R2,MIDNULPM             NULL PARAMETER MESSAGE
         B     GIVESCNE           PRT CARD, SET RC TO 4, WRT MSG
NOINDDSP LA    R2,MIDMISDD
         B     GIVESEQS                GIVE MESSAGES
SCANERRM LA    R2,MIDMIXCD
         B     ERRSTOP                 GIVE MESSAGE
MULTS    LA    R2,MIDTUSEX
GIVESEQS BAL   R11,WRITEOUT       PRT CARD, SET RC TO 4, WRT MSG
SCANSEQR LA    R2,MIDSEQER             STATEMENT SEQUENCE ERROR
         B     ERRSTOP                 GIVE MESSAGE
MSSEQER  LA    R2,MIDSEQER
         BAL   R11,WRITEOUT       PRT CARD, SET RC TO 4, WRT MSG
         B     NEWSCAN                 SCAN THIS LINK- DON'T FLUSH IT
GIVESCNE BAL   R11,WRITEOUT       PRT CARD, SET RC TO 4, WRT MSG
SCANERR  LA    R2,MIDCTLER
ERRSTOP  TM    PARMSWCH,FLUSHSW        STATEMENT ERROR WHILE FLUSHING
         BO    IGNORE             YES
         MVI   PARMSWCH,FLUSHSW        SET FLUSH SWITCH
         TM    CPARAMSW,COL72BLK       IS THIS CARD CONTINUED    A48742
         BZ    WRITEOUT                NO                        A48742
         OI    SCANSWCH,NOCMMEXP       SET BYPASS SCAN SWITCH    A48742
WRITEOUT TM    CCSWITCH,CARDPRTD       WAS CARD PRINTED
         BO    SETC8                   YES                       A44144
         BAL   R9,PRNTCRD              PRINT THE CARD
SETC8    SETCC 8                       SET ERROR CODE           GP10113
         B     STRMESS                 AND STORE MSG NUMBER      A44144
SETC4    SETCC 4                       SET WARNING              GP10113
STRMESS  STH   R2,MSGLIST              STORE MESSAGE NUMBER
KEEPCODE L     R15,=A(ZZMESAGE)        MESSAGE WRITER           GP10113
         BALR  R14,R15                 GIVE THE MESSAGE
         TM    PARMSWCH,FLUSHSW        ERROR
         BZR   R11          RETURN CARD OR MESSAGE PRINTED      GP10113
         LM    R0,R14,SUBSAVE1                                  GP10113
         B     PGMEXIT                 AND QUIT                 GP10113
         SPACE 1
*---------------------------------------------------------------------*
*    SYSIN END-FILE                                                   *
*---------------------------------------------------------------------*
ZZRSEF   OI    CCSWITCH,SYSINEOF       FLAG AS END OF FILE SYSIN
         TM    CPARAMSW,COL72BLK  EOF AFTER CONTINUED CARD
         BO    CONTINV            YES- INVALID CONTINUATION
         TM    PARMSWCH,FLUSHSW        EOF WHILE FLUSHING CARDS
         BO    TERMS                   GIVE EOF MESSAGE AND QUIT
         TM    COMDCDSW,LINKDONE       HAD A LINK STATEMENT
         BZ    NOINDDSP
         TM    CCSWITCH,ZZRLINKC       ZZRLINK CONTROL CARDS
         BO    CHKSMEM                 YES- CHECK IF HAVE ALL CARDS
         TM    COMDCDSW,NEWOUT+NEWINDD HAD AN OUTDD AND AN INDD
         BO    GETOUT                  BEGIN LINK
         B     NOINDDSP                NO- SET TO ISSUE ERROR MESSAGE
GETOUT   MVC   COUNT,ENCT              NEED SE COUNT EXCLUDE/SELECT
         TM    COMDCDSW,SELECTSC       SELECT OPERATION
         BNZ   DOLINK                  CONTINUE
TESTEX   XC    NNCT1,NNCT1             CLEAR NEW NAME COUNT
         XC    ENCT,ENCT               CLEAR FOR EXCLUDE/FULL
         TM    COMDCDSW,EXCLUDES       EXCLUSIVE LINK
         BO    DOLINK                  YES- FINISH UP
         XC    COUNT,COUNT             CLEAR SE COUNT ON FULL LINK
         MVC   @MDTMB1,@MDTMBN   FULL LINK NO ENTRIES IN SE TABLE
DOLINK   LM    R0,R15,SUBSAVE1         RESTORE REGISTERS        GP10113
         BR    R14                     RETURN TO CALLER         GP10113
TERMS    LA    R2,MIDSYNND             SYSIN EOF MESSAGE
         OI    PARMSWCH,FLUSHSW        SET TO RETURN TO TERMINATE
         B     STRMESS                 GIVE MESSAGE- NO RETURN
         SPACE 1
*--------------------------------------------------------------------*
*    PICK A CARD, ANY CARD                                           *
*--------------------------------------------------------------------*
READCC   TM    RDRFLAGS,FGKEEP         CARD STACKED ?           GP10113
         BNZ   READCC2                 YES; USE IT              GP10113
READCC1  TM    CCSWITCH,SYSINEOF       PRIOR END OF FILE SYSIN? GP14266
         BNZ   ZZRSEF                  PRIOR EOF ?              GP14266
         GET   SYSIN                   GET NEXT STATEMENT       GP10113
         TM    RDRFLAGS,FGRGET         UNLIKE CONCATENATION ?   GP10113
         BZ    READCCRF                NO; CHECK RECFM          GP10113
         NI    RDRFLAGS,255-FGRGET     RESET                    GP10113
         B     READCC1                 REISSUE THE GET          GP10113
READCCRF LA    R2,CCIMAGE              POINT TO CARD BUFFER     GP10113
         LA    R3,L'CCIMAGE            MAX LENGTH               GP10113
         MVC   CCIMAGE,CNTCRD          CLEAR TO BLANKS          GP10113
         LH    R15,DCBLRECL-IHADCB+SYSIN    GET RECORD LENGTH   GP10113
         TM    DCBRECFM-IHADCB+SYSIN,DCBRECF   ONE OF F OR U?   GP10113
         BNZ   READCCFX                YES                      GP10113
         ICM   R15,3,0(R1)             GET REAL (?) LENGTH      GP10113
         SH    R15,=H'4'               DATA LENGTH              GP10113
         LA    R1,4(,R1)               SKIP RDW                 GP10113
READCCFX TM    DCBRECFM-IHADCB+SYSIN,DCBRECCC    ASA OR MCC?    GP10113
         BZ    READCCNC                NEITHER                  GP10113
         BCTR  R15,0                   ADJUST LENGTH            GP10113
         LA    R1,1(,R1)               SKIP CC                  GP10113
READCCNC LTR   R15,R15                 ANYTHING LEFT ?          GP10113
         BNP   READCC                  NO; IGNORE               GP10113
         CR    R15,R3                  NOT TOO LONG?            GP10113
         BNH   *+6                     YES                      GP10113
         LR    R15,R3                  TRUNCATE                 GP10113
         EX    R15,EXMVCCRD            MOVE CARD IMAGE          GP10113
READCC2  NI    RDRFLAGS,255-FGKEEP     NO CARD STASHED          GP10113
         NI    CCSWITCH,FF-CARDPRTD    RESET CARD PRINTED SWITCH
         CLI   CCIMAGE,C'*'       COMMENT CARD ?                GP10113
         BNER  R9                 NO; PROCESS                   GP10113
         MVI   MSGLIST,CTLCD           PRINT CONTROL CARD       GP10113
         MVI   MSGLIST+UP1,CRESET0     CLEAR MSG NUMBER         GP10113
         L     R15,=A(ZZMESAGE)        MESSAGE WRITER           GP10113
         BALR  R14,R15                 PRINT THE CARD           GP10113
         B     READCC                  READ NEXT                GP10113
PRNTCRD  MVI   MSGLIST,CTLCD           PRINT CONTROL CARD       GP10113
         MVI   MSGLIST+UP1,CRESET0     CLEAR MSG NUMBER
         L     R15,=A(ZZMESAGE)        MESSAGE WRITER           GP10113
         BALR  R14,R15                 PRINT THE CARD
         OI    CCSWITCH,CARDPRTD       SET CARD PRINTED SWITCH
         BR    R9                      RETURN- CARD IS PRINTED
CHKLINK  TM    PARMSWCH,FLUSHSW        DOING A FLUSH
         BO    NEWSCAN                 YES- RESET COMMAND SWITCHES
         NI    CCSWITCH,FF-COMDNOW-MULTSE  RESET SWITCHES
         TM    COMDCDSW,LINKDONE       PREVIOUS LINK DONE
         BZ    NEWSCAN                 NO- SCAN REST OF CARD
*  NOW MUST ENTER MAINFLOW TO FINISH UP PREVIOUS LINK OPERATION
KEEPLINK TM    CCSWITCH,ZZRLINKC       HAVE ZZRLINK CONTROL CARDS
         BO    CHKSMEM                 YES- CHECK IF HAVE ALL CARDS
         TM    COMDCDSW,NEWINDD        INDD KEYWORD BEFORE LINK
         BZ    MSSEQER                 NO- SEQUENCE ERROR LINK FOLLOWS
         NI    COMDCDSW,SELECTSC+EXCLUDES+COMPRESS+LISTSW RESET REST
         NI    CPARAMSW,COL72BLK       KEEP FLAG COLUMN 72 NOT BLANK ON
*OOPS*   MVI   CCSWITCH,CRESET0        RESET SWITCH
         NI    CCSWITCH,SYSINEOF  KEEP EOF FLAG                 GP14266
         OI    PARMSWCH,LINKNOW        SET SWITCH TO SHOW LINK PENDING
         B     GETOUT                  FINISH THIS LINK STEP
NEWSCAN  MVI   PARMSWCH,LINKNOW        SET FOR SCAN, RESET FLUSH
         NI    SCANSWCH,FF-NOCMMEXP    RESET BYPASS SCAN SWITCH  A48742
         TM    CCSWITCH,CARDPRTD       IF CONTINUED WAS PRINTED
         BO    PRNTDONE                ALREADY PRINTED
         MSGMID MIDSEP                 PRINT SEPARATOR LINE     GP10113
*OLD*    TM    LEFLAG,X'F0'            LIVE LINKING ?           GP10113
*OLD*    BZ    PRNTNEJE                NO; SKIP EJECT           GP10113
*OLD*    MVI   LINECT,CRESET0          RESET LINE COUNT TO FORCE HEADER
PRNTNEJE BAL   R9,PRNTCRD              PRINT HEADER AND LINK CARD
PRNTDONE NI    COMDCDSW,COMPRESS       SAVE COMPRESS FLAG
         NI    CPARAMSW,FF-PARTPARM-CONTINY  RESET SOME SWITCHES
         TM    CCSWITCH,LASTPARM       LAST PARAMETER SCANNED
         BZ    TOSCAN                  NO- GET PARAMETERS
         TM    CCSWITCH,FIRSTSCN       FIRST ENTRY
         BZ    SCANERRM                NO, MIXED CODE
         B     NOINDDSP
CHKSMEM  TM    COMDCDSW,EXCLUDES+SELECTSC  SELECT OR EXCLUDE
         BZ    GETOUT                  NO
         TM    COMDCDSW,MEMBRCD1       HAVE MEMBER CARD
         BO    GETOUT                  YES
         LA    R2,MIDNOLNK             WILL NOT LINK
         B     ERRSTOP                 GIVE MESSAGE AND QUIT
***********************************************************************
*                      CONTROL STATEMENT ANALYSIS ROUTINES            *
***********************************************************************
RDCARD   MVI   CCDELIM,CRESET0         RESET DELIMITER SWITCH
         ST    R14,SARG                SAVE RETURN REGISTER
         TM    CPARAMSW,READ1          IS READ CARD SWITCH ON
         BZ    GOTCARD                 DON'T READ ANOTHER CARD YET
KGTCD    NI    CPARAMSW,PARTPARM+CONTINY+COL72BLK SAVE ALL CONT SWITS.
         BAL   R9,READCC               GET NEXT CARD FROM SYSIN
         NI    CPARAMSW,FF-COL72BLK    RESET CONTINUED CARD SWITCH
         CLI   CCIMAGE+COL71,BLANKCOL  COLUMN 72 BLANK
         BE    SCANCHK                 YES                       A48742
         OI    CPARAMSW,COL72BLK       COLUMN 72 NOT BLANK
SCANCHK  TM    SCANSWCH,NOCMMEXP       SCAN NEEDED               A48742
         BO    IGNORE                  NO                        A48742
         B     KPFOL                   START SCAN                A48742
GOTCARD  L     R3,CSTOREG+SAV8         LOAD ADDRESS OF LAST PASS
         TM    CPARAMSW,PARMCOME       DOES A PARAMETER FOLLOW
         BO    SCANCARD                YES- SCAN THE CARD
KPFOL    LA    R9,KOMMD                RETURN ADDRESS
NAMESCAN LA    R3,CCIMAGE              START OF CONTROL STATEMENT
         CLC   =C'/* ',SCAN0(R3)       /* CARD ?                GP10113
         BE    ZZRSEF                  YES- ENTER EODAD ROUTINE
         SR    R7,R7                   CLEAR COUNT BUFFER
         LA    R1,LEN8
KNAME    CLI   SCAN0(R3),BLANKCOL      IS COLUMN BLANK
         BER   R9           FIRST  COLUMN BLANK OR NAME ENDS    GP10113
         LA    R7,1(,R7)               UP CHARACTER COUNT
         CR    R7,R1                   NAME GREATER THAN 8 CHARACTERS
         BH    BADPARM                 YES- INVALID NAME
         LA    R3,1(,R3)               GO TO NEXT COLUMN
         B     KNAME                   CHECK FOR BLANK
KOMMD    LA    R3,1(,R3)               SPACE TO NEXT COLUMN AFTER NAME
         LA    R5,CCIMAGE+COL70        LAST COLUMN (71)
         OI    CCSWITCH,COMDNOW        SET COMMAND SWITCH
KABC     CLI   SCAN0(R3),BLANKCOL      IS COLUMN BLANK
         BNE   SCANCARD                NO- CHECK PARAMETERS
         CR    R3,R5                   IS THIS THE END COLUMN
         BE    PRTNULL1                YES- END OF CARD REACHED
         LA    R3,1(,R3)               ADJUST POINTER TO NEXT COLUMN
         B     KABC                    CONTINUE SCAN
SCANCARD MVC   CCDELIM2(UP1),CCDELIM   SAVE DELIMETER SWITCH SETTING
         MVI   CCDELIM,CRESET0         RESET DELIMITER SWITCH
         LR    R1,R3                   SAVE POINTER TO PRESENT COLUMN
         ST    R3,CSTOREG+SAV4         SAVE START OF PARAMETER
         SR    R7,R7                   CLEAR LENGTH REGISTER
         LA    R5,CCIMAGE+COL70        LAST COLUMN (71)
         TM    CPARAMSW,PARTPARM       PARTIAL PARAMETER
         BZ    KCONT                   NO- CONTINUE
         TM    PARMSWCH,COMDPART       COMMAND WORD
         BO    DONTRSTC                YES- KEEP COMDNOW SWITCH ON
         NI    CCSWITCH,FF-COMDNOW     RESET ANALYSING COMMAND SWITCH
DONTRSTC TM    CCSWITCH,CARDPRTD  WAS CARD PRINTED
         BO    NOPR               IF SO, DON'T PRINT IT AGAIN
         BAL   R9,PRNTCRD         ELSE PRINT CONTINUED CARD
NOPR     L     R1,CSTOREG+SAV4         RESTORE POINTER
         TM    CPARAMSW,CONTINY        FROM MEMBER/INDD SCAN
         BZ    KOMPAR                  NO- CONTINUE SCAN
         BCTR  R3,0                    BACK UP POINTER BY ONE
         NI    PARMSWCH,FF-COMDPART    RESET COMDPART SWITCH
         B     TESTRETN                STORE AND RETURN
KFORZRO  TM    CCDELIM,BLANKSGN        IS IT A BLANK
         BZ    BADPARM                 INVALID NAME/PARAMETER
         B     NOTFIRST                NO FIRST PARAMETER PART FAKE IT
KCONT    NI    CCSWITCH,FF-LASTPARM    RESET SWITCH
         CR    R3,R5                   SCANNED BEYOND COLUMN 71
         BNH   KOMPAR                  NO- CHECK PARAMETERS
NOTFIRST TM    CPARAMSW,COL72BLK       CONTINUATION PUNCH IN 72
         BZ    CONTINV            IF NOT, CONTINUATION IS INVALID
         SR    R7,R7                   NO COUNT FOR FIRST PARAMETER
         B     APARM0                  SET UP FOR PARTIAL PARAMETER
KOMPAR   CLI   SCAN0(R3),EQUAL         IS CHARACTER A DELIMITER
         BNH   DELIMIT                 YES-'EQUAL' CHARACTER OR LOWER
         LA    R7,1(,R7)               ADD ONE TO LENGTH
         CR    R3,R5                   IS THIS THE END COLUMN
         BE    KPTERR                  YES- SAVE PARTIAL PARAMETER
         LA    R3,1(,R3)               UP POINTER TO NEXT COLUMN
         B     KOMPAR                  CONTINUE SCANNING FOR DELIMITER
KPTERR   TM    CCSWITCH,COMDNOW   SCANNING COMMAND WORD
         BZ    NOTCOMD                 NO
         CLI   SCAN0(R1),AC            WORD STARTS WITH C
         BE    PRTASEP                 YES; NEW GROUP           GP10113
         CLI   SCAN0(R1),C'C'          WORD STARTS WITH C ?     GP10113
         BNE   PRTANDGO                NO
PRTASEP  MSGMID MIDSEP                 PRINT SEPARATOR LINE     GP10113
         TM    COMDCDSW,LINKDONE       MIGHT BE LINK
         BO    KEEPLINK                NOT FIRST LINK
*OLD*    MVI   LINECT,CRESET0          RESET LINE COUNT TO FORCE HEADER
PRTANDGO BAL   R9,PRNTCRD              PRINT LINK CARD
         L     R1,CSTOREG+SAV4         RESTORE POINTER TO START OF PARM
         OI    PARMSWCH,COMDPART       SET TO KEEP 'COMDNOW' SET
NOTCOMD  TM    CPARAMSW,COL72BLK       IS COLUMN 72 BLANK
         BZ    KETBYP                  YES- SET LAST PARM GET NEXT CARD
KPART    LR    R2,R7
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,MOVEP                SAVE PARTIAL PARAMETER
APARM0   OI    CPARAMSW,PARTPARM       SET PARTIAL PARAMETER SWITCH
         ST    R7,CSTOREG              SAVE PARTIAL PARAMETER COUNT
         B     KGTCD                   GET NEXT CARD
KETBYP   OI    CCSWITCH,LASTPARM       NO MORE PARAMETERS
KPASS    LA    R3,1(,R3)               UP POINTER TO NEXT COLUMN
KWENT    NI    CPARAMSW,FF-READ1-PARMZERO  RESET SWITCHES
         ST    R7,CSTOREG              STORE LENGTH REGISTER
TESTRETN L     R14,SARG                RESTORE RETURN REGISTER
         ST    R1,CSTOREG+SAV4         STORE SCAN ADDRESS REGISTER
         ST    R3,CSTOREG+SAV8         STORE ADDRESS REGISTER
         BR    R14                     RETURN TO MAINSTREAM
DELIMIT  CR    R3,R5                   IS THIS END COLUMN
         BE    SETCC2                  YES- SET INDICATOR
         TM    CPARAMSW,PARTPARM       IS PARTIAL PARAMETER SWITCH ON
         BO    KPPAR                   YES-COMPLETE PARAMETER
         B     TESTPAR                 CHECK PARAMETER
SETCC2   OI    CPARAMSW,DELIMEND       SET DELIMITER IN END COLUMN SW
         CLI   SCAN0(R3),BLANKCOL      BLANK
         BE    ABLNKCOL                YES
         TM    CPARAMSW,COL72BLK       PUNCH IN COLUMN 72
         BZ    CONTINV            IF NOT, CTL STMT IS INVALID
         TM    CPARAMSW,PARTPARM       PARTIAL PARAMETER
         BO    CONTINV                 SECOND LEVEL CONTINUATION
TESTPAR  LTR   R7,R7                   TEST IF LENGTH ZERO
         BP    DELIM                   LENGTH NOT ZERO          GP10113
         OI    CPARAMSW,PARMZERO       SET LENGTH ZERO SWITCH
DELIM    CLI   SCAN0(R3),EQUAL         TEST IF DELIMITER IS AN EQUAL
         BE    KEY                     YES- GO TO KEY WORD ROUTINE
         CLI   SCAN0(R3),COMMA         TEST FOR COMMA
         BE    PARAMC                  YES- GO TO PARAMETER ROUTINE
         CLI   SCAN0(R3),BLANKCOL      TEST FOR BLANK
         BNE   BADPARM                 BAD PARAMETER
ABLNKCOL TM    CCSWITCH,COMDNOW        IS COMMAND SWITCH ON
         BO    KPCMD                   YES-GO TO ADJUST POINTER
         MVI   CCDELIM,BLANKSGN        SET BLANK DELIMITER
DECID    TM    CPARAMSW,DELIMEND       IS DELIMITER IN END COLUMN
         BO    KWENT                   YES- SET UP COUNT OF FIRST PART
         TM    CPARAMSW,PARMZERO       LENGTH EQUAL ZERO
         BO    KFORZRO                 YES- SET UP ZERO LENGTH
         OI    CPARAMSW,PARMCOME       SET PARAMETER FOLLOWS SWITCH
         TM    CCDELIM,BLANKSGN        IS IT A BLANK
         BZ    KPASS              NO- RETURN WITH POINTERS SET
         B     KETBYP                  CONTINUE
KEY      NI    CCSWITCH,FF-COMDNOW     RESET ANALYSING COMMAND SWITCH
         MVI   CCDELIM,EQUALSGN        SET DELIMITER AN EQUAL
         CLI   UP1(R3),BLANKCOL        COLUMN AFTER = BLANK
         BNE   DECID                   GO TO CHECK DELIMITER
         TM    COMDCDSW,NEWOUT         HAD AN OUTDD
         BZ    NULLP              IF NOT, SET UP NULL PARAMS MSG
         B     PRTNULL1                PRINT THE CARD
PARAMC   MVI   CCDELIM,COMMASGN        SET DELIMITER COMMA
         CLI   UP1(R3),BLANKCOL        COLUMN AFTER COMMA BLANK
         BNE   DECID                   NO- CONTINUE
         TM    CPARAMSW,COL72BLK       COLUMN 72 BLANK
         BZ    CONTINV            IF NOT, CTL STMT IS INVALID
         B     DECID                   GO TO CHECK DELIMITER
KPPAR    LA    R9,DELIM                RETURN FROM PARAMETER CREATE
KCREATE  L     R8,CSTOREG              SIZE OF FIRST PART OF PARAMETER
         LTR   R7,R7              IS LENGTH OF SECOND PART ZERO
         BE    KOMPL         YES- THE PARAMETER IS COMPLETE     GP10113
         LA    R6,SAVEPAPR             NO- ADDRESS OF FIRST PART
         AR    R6,R8                   ADDRESS TO MOVE IN SECOND PART
         LR    R4,R7
         BCTR  R4,0                    DECREMENT COUNT FOR EXECUTE
         EX    R4,MOVEPP               MOVE SECOND PART TO BUFFER
KOMPL    AR    R7,R8                   TOTAL LENGTH OF PARAMETER
         LA    R1,SAVEPAPR             LOAD PARAMETER BUFFER ADDRESS
         MVC   CCDELIM2(UP1),CCDELIM   SAVE DELIMITER
         MVI   CCDELIM,CRESET0         CLEAR DELIMITER SETTINGS
         NI    CPARAMSW,FF-CONTINY-PARTPARM  RESET CONTINUED SWITCHES
         NI    PARMSWCH,FF-COMDPART    RESET COMDPART SWITCH
         BR    R9                      RETURN
KPCMD    LA    R3,1(,R3)               ADJUST POINTER TO NEXT COLUMN
         CLI   SCAN0(R3),BLANKCOL      IS COLUMN BLANK
         BNE   KPCMA                   NO- CHECK FOR COMMA
         CR    R5,R3                   IS THIS THE LAST COLUMN
         BE    KETBYP                  YES- NO PARAMETER FOLLOWS
         B     KPCMD                   CONTINUE SCAN
KPCMA    CLI   SCAN0(R3),COMMA         IS COMMA THE FIRST CHARACTER
         BE    KETBYP                  YES- NO PARAMETER FOLLOWS
         BCTR  R3,0                    BACK UP REGISTER 3 TO PARAMETER
         OI    CPARAMSW,PARMCOME       SET PARAMETER FOLLOWS SWITCH
         B     KPASS                   GO TO RETURN
         SPACE 1
*---------------------------------------------------------------------*
*   FOR SELECT REQUESTS, ALL MEMBER NAMES MUST BE UNIQUE - VERIFY     *
*---------------------------------------------------------------------*
         PUSH  USING                                            GP10113
         DROP  R8                                               GP10113
DUPECHEK TM    COMDCDSW,SELECTSC  MEMBER FOR SELECT OPTION?     GP10113
         BZR   R9                 NO; RETURN NOW                GP10113
         STM   R0,R15,SUBSAVE2    JUST IN CASE, SAVE ALL        GP10113
         L     R15,@MDTMB1        FIRST MEMBER NAME             GP10113
         LA    R0,MDSIZE          TABLE ENTRY SIZE              GP10113
         LR    R1,R8              CURRENT ENTRY                 GP10113
         SR    R1,R0              DON'T TEST CURRENT            GP10113
         SR    R15,R0             ADJUST FOR FIRST BUMP         GP10113
         USING MDSECT,R15                                       GP10113
DUPELOOP BXH   R15,R0,DUPEEXIT    TRY ALL                       GP10113
         CLC   MDNAME,MDNAME-MDSECT(R8)     USED ALREADY ?      GP10113
         BE    DUPENAME           YES; FAIL                     GP10113
         B     DUPELOOP           TRY AGAIN                     GP10113
DUPEEXIT LM    R0,R15,SUBSAVE2    RESTORE ALL                   GP10113
         BR    R9                 RETURN                        GP10113
         POP   USING                                            GP10113
*
*                 EXECUTE STATEMENTS USED IN SCAN ROUTINE
*
MOVEP    MVC   SAVEPAPR(0),SCAN0(R1)   STORE PARTIAL PARAMETER  GP10113
MOVEPP   MVC   SCAN0(1,R6),SCAN0(R1)   RECREATES PARAMETER      GP10113
OPRLUP3  MVC   SARG(0),SCAN0(SCANADR)  MOVE TO SEARCH ARGUMENT  GP10113
EXMVDDMB MVC   MDNAME(0),0(R1)         COPY DD NAME             GP10113
LISTALLC DC    C'NO'                   DO NOT LIST MEMBERS COPIED
RPARN    DC    C'R)'                   FLAGS RENAME OR REPLACE
         DROP  R8                                               GP10113
         LTORG ,                                                GP10113
TRTDELIM DC    256AL1(0)     NON-STOP                           GP10113
         ORG   TRTDELIM+C' '                                    GP10113
         DC    AL1(8)        BLANK STOPPER                      GP10113
         ORG   TRTDELIM+C','                                    GP10113
         DC    AL1(4)        COMMA STOPPER                      GP10113
         ORG   ,             END OF TABLE
TRTFIELD DC    256AL1(4)     STOP ON ALL                        GP10113
         ORG   TRTFIELD+C' '                                    GP10113
         DC    AL1(0)        EXCEPT BLANK                       GP10113
         ORG   ,             END OF TABLE                       GP10113
         TITLE 'Z Z R E L I N K  ***  OVERLAY STRUCTURE ANALYSIS'
         PRINT NOGEN                                            GP10049
ZZROVBLD STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP10113
         LR    R12,R15            LOCAL BASE                    GP10113
         XC    SUBSAVE1+4*R15(4),SUBSAVE1+4*R15  CLEAR RC       GP10113
         USING ZZROVBLD,R12       LOCAL BASE                    GP10113
         USING ZZRELCOM,R10                                     GP10113
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    FUNCTION TABLE FORMAT    R1 HAS CODE FOR FUNCTION REQUIRED.      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LTR   R1,R1                                            GP10114
*NEXT*   B     CLSOPN                   CODE = 0                GP10114
         BP    BLDTAB                   CODE = 4                GP10114
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    FUNCTION - CLOSE AND OPEN THE FILE                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CLSOPN   MVC   DB(4),=AL4(ESDCB+X'80000000')     MAKE OPEN LIST GP10113
         CLOSE MF=(E,DB)                CLOSE PREVIOUS          GP10113
         L     R3,@MDTDDC               START OF TABLE
         MVC   ESDCB+DCBDDNAM-IHADCB(8),MDNAME-MDSECT(R3) MAIN DDNM
         MVC   ESDCB+DCBEODA-IHADCB(3),=AL3(CESDER1)   END OF CESD
         OPEN  MF=(E,DB)                OPEN THE FILE           GP10113
         TM    ESDCB+DCBOFLGS-IHADCB,DCBOFOPN           OPEN SUCESSFUL?
         BO    NORMRET                  OPEN O.K. - RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    OPEN IS UNSUCESSFUL; PUT OUT MESSAGE                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         MVI   SUBSAVE1+4*R15+3,12                              GP10113
         MSGMID MIDDDMIS,2(R3)          SET UP DD CARD MISSING MESSAGE
         B     NORMRET                  RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    FUNCTION - BUILD NECESSARY OVERLAY TABLES                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
BLDTAB   MVI   CNMEFND,X'00'            SET FOUND SWITCH OFF
         MVI   CESDSW,X'00'             SET CESD FOUND SWITCH OFF     $
         ZAP   CSECTCTR,=P'0'           CLEAR CSECT COUNTER TO 0      $
         MVI   ENDTABSW,X'00'           TURN ENDTAB SW OFF
         MVI   CSCTNAME,C' '            INIT FIRST CHAR TO BLANK
         LA    R6,CESDTBL               R6 -> START OF CESD TABLE
         FIND  ESDCB,MEMBRTTR,C         ESTABLISH BEGINNING OF MEMBER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    SET UP TO GET NEXT RECORD                                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CESDGET  LA    R2,CESDBFFR              PTR TO READ BUFFER
         LA    R3,256                   LENGTH OF READ
         BAL   R9,CESDREAD              READ A RECORD
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    DO WE WANT TO PROCESS THIS RECORD                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         CLI   0(R2),X'80'              IDR?
         BE    CESDGET                  YES - GET NEXT BLOCK
         CLI   0(R2),X'40'              SYM?
         BE    CESDGET                  YES - GET NEXT BLOCK
         CLI   0(R2),X'20'              CESD?
         BNE   POSTCESD                 NO                            $
         MVI   CESDSW,X'FF'             INDICATE AT LEAST ONE         $
         B     CESDFND                  CESD FOUND AND PROCESS        $
POSTCESD TM    OVLYSW,X'FF'             OVERLAY PROCESSING?
         BO    POSTCESE                 YES; CONTINUE           GP10113
         TM    CNMEFND,X'FF'            EPA FOUND ?             GP10113
         BNO   CESDER1                  NO - CSECT NOT FOUND - ERROR
         TM    P2ATTR,MYFPAGE           READING ALIGNED SECTS?  GP10114
         BNZ   POSTCESE                 YES; DONE               GP10114
         TM    OPTFLAG1,OFBUILD         BUILDING MODULE?        GP10114
         BZ    NORMRET                  NO; DONE                GP10114
POSTCESE CLI   0(R2),X'01'              CONTROL RECORD?
         BE    CESDCMPL                 YES - SEGTAB FOLLOWS
         B     CESDER1                  CSECT ERROR
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    SET UP TO PROCESS BLOCK                                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CESDFND  LH    R7,6(,R2)                LENGTH OF DATA IN BLOCK
         SRL   R7,4                     / 16 = # OF ENTRIES
         LA    R5,8(,R2)                BUMP PAST BLOCK HEADER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    CHECK CESD DATA FOR WHAT WE WANT                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         USING CESDSECT,R5                                      GP10113
CESDCHCK CLI   CESDTYP,X'07'            IS THIS A NULL ENYTRY?  GP10113
         BE    CESDINCR                 YES - SKIP                    $
         CLI   CESDSG#,X'00'            SEG # = ZERO?           GP10113
         BNE   QSEGTAB                  NO - CONTINUE                 $
         CLC   CESDLEN,=X'000000'       YES - TREAT AS WR, NULL,      $
         BE    CESDINCR                   OR ER TYPE IF LEN. = ZERO   $
QSEGTAB  CLI   CESDTYP,X'14'            SEGTAB OR ENDTAB?
         BNE   CHCKPVT                  NO - CONTINUE CHECKS
         TM    ENDTABSW,X'FF'           FIRST PC ITEM?
         BO    ENDTAB                   MUST BE ENDTAB
         MVI   ENDTABSW,X'FF'           INDICATE SEGTAB FOUND
         MVC   CESDNAM,=C'$SEGTAB '     INDICATE SEGTAB
         B     UPDTCTAB                 MOVE TO BUFFER
ENDTAB   MVC   CESDNAM,=C'$ENDTAB '     INDICATE ENDTAB
         B     UPDTCTAB                 MOVE TO BUFFER
CHCKPVT  CLI   CESDTYP,X'04'            PRIVATE CODE TYPE?
         BNE   CONTCHK1                 CONTINUE CHECKS
         MVC   CESDNAM,=C'$PRIVATE'     INDICATE PRIVATE CODE
         B     UPDTCTAB                 MOVE TO BUFFER
CONTCHK1 NI    CESDTYP,X'0F'            TURN OFF UNWANTED BITS
         CLI   CESDTYP,X'00'            SD TYPE?
         BE    CNMEPRCS                 YES - CHECK FOR CSECT NAME
         CLI   CESDTYP,X'03'            LR TYPE?
         BE    CNMEPRCS                 YES - CHECK FOR CSECT NAME
         CLI   CESDTYP,X'05'            COMMON TYPE?
         BNE   CESDINCR                 NO - UNACCEPTABLE TYPE
         CLI   CESDNAM,X'40'            BLANK COMMON?
         BNE   UPDTCTAB                 NO - MOVE TO BUFFER
         MVC   CESDNAM,=C'$BLKCOM '     INDICATE BLANK COMMON
         B     UPDTCTAB                 MOVE TO BUFFER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    SET BUFFER TO LOOK AT NEXT ENTRY                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CESDINCR LA    R5,CESDSIZE(,R5)         INCR TO NEXT ENTRY      GP10113
         BCT   R7,CESDCHCK              CHECK NEXT ENTRY
         B     CESDGET                  GET NEXT RECORD WHEN NO ENTRY
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    THIS ROUTINE ACTUALLY DOES THE READ                              *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CESDREAD READ  CESDECB,SF,ESDCB,(R2),(R3)    DO THE READ
         CHECK CESDECB                  WAIT FOR COMPLETION OF READ
         BR    R9                       RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    THIS PHASE READS IN THE SEGTAB AND PLACES IT IN SEGTAB BUFFER    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CESDCMPL ST    R6,CESDUSED              PTR TO DYNAMIC END OF TABLE
         TM    OVLYSW,X'FF'             OVERLAY PROCESSING?     GP10114
         BZ    NORMRET                  NO; SKIP ALIGN/BUILD    GP10114
         LH    R3,14(,R2)               GET LENGTH FROM CCW
         LA    R2,SEGBFTBL              PTR TO START OF SEGTAB BUFFER
         LR    R8,R2                    R8 -> SEGTAB
         AR    R8,R3                    LENGTH OF SEGTAB
         BAL   R9,CESDREAD              READ THE SEGTAB
         ST    R8,SEGUSED               DYNAMIC END OF SEGTAB
         B     NORMRET                  RETURN FROM OVERLAY ROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    RETRIEVE CSECT NAME OF MAIN ENTRY POINT                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CNMEPRCS AP    CSECTCTR,=P'1'           ADD 1 TO THE COUNT OF CEST    $
*                                       NAMES FOUND IN CESD FOR MOD   $
*---------CHECK FOR NUCLEUS (RE)LINK REQUEST--------------------------*
         CLC   =C'NIP0',CESDNAM+4       POSSIBLE NUCLEUS ?      GP10113
         BNE   CNMENNUC                                         GP10113
         CLC   =C'IEA',CESDNAM          IS IT ?                 GP10113
         BNE   CNMENNUC                                         GP10113
         OI    P2ATTR,MYFNUCL           SIGNAL NUCLEUS          GP10113
CNMENNUC TM    CNMEFND,X'FF'            NAME FOUND ALREADY?
         BO    CNMERET                  YES - RETURN
         CLC   9(3,R5),EPADDR           ADDRESSES MATCH?
         BNE   CNMERET                  NO - NOT THE NAME
         MVC   CSCTNAME(8),0(R5)        SAVE THE CSECT NAME
         MVI   CNMEFND,X'FF'            SHOW FOUND
         TM    OVLYSW,X'FF'             OVERLAY MODULE?
         BO    CNMERET                  YES; CONTINUE BUILD     GP10113
         TM    OPTFLAG1,OFBUILD         BUILDING MODULE?        GP10114
         BNZ   CNMERET                  YES; CONTINUE           GP10114
         TM    P2ATTR,MYFPAGE           ELSE PAGE ALIGN?        GP10113
         BZ    NORMRET                  NO - DO NOT SET UP TABLE
CNMERET  CLI   8(R5),X'03'              LR TYPE?
         BE    CESDINCR                 YES - PROCESS NEXT ENTRY
*NEXT*   B     UPDTCTAB                 SD TYPE - MOVE TO BUFFER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    MOVE CESD ENTRY TO TABLE                                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
UPDTCTAB TM    OVLYSW,X'FF'             OVERLAY MODULE?
         BO    UPDTCENT                 YES; SAVE               GP10113
         TM    OPTFLAG1,OFBUILD         BUILDING MODULE?        GP10114
         BNZ   UPDTCENT                 YES; CONTINUE           GP10114
         TM    P2ATTR,MYFPAGE           PAGE ALIGN ?            GP10113
         BZ    CESDINCR                 NO - DO NOT SET UP TABLE
UPDTCENT CLI   CESDTYP,X'00'            SD ?                    GP10113
         BNE   UPDTCMOV                 NO; JUST SAVE           GP10113
         L     R0,CESDEPA-1             LOAD MODULE ADDRESS     GP10113
         N     R0,=X'00FFF000'          MAKE 4K MASK            GP10113
         BNZ   UPDTCMOV                 NOT ALIGNED             GP10113
         MVC   PAGENAME,CESDNAM         REMEMBER LAST ALIGNED   GP10113
UPDTCMOV MVC   0(CESDSIZE,R6),CESDSECT  MOVE ENTRY TO BUFFER    GP10113
         MVC   10(2,R6),=H'0'           ZERO OUT ADDRESS
         LA    R6,CESDSIZE(,R6)         UPDATE BUFFER POINTER   GP10113
         B     CESDINCR
         DROP  R5                                               GP10113
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    RETURN TO CALLING ROUTINE                                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
NORMRET  LM    R0,R15,SUBSAVE1          RELOAD REGISTERS & RC   GP10113
         BR    R14                      RETURN                  GP10113
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    EOF EXIT WHEN READING MEMBER LOAD MODULE. NO VALID ENTRY POINT.  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CESDER1  CLI   CESDSW,X'FF'             HAVE AT LEAST 1 CESD ENTRY    $
         BNE   NOEPERR                  NO - BYPASS CHECKS FOR MOD    $
         CLC   EPADDR,=X'000000'        IF ENTRY POINT ADDRESS IS 0   $
         BNE   NOEPNMFD                 BUT NO VALID EP NAME FOUND    $
         MVC   CSCTNAME,=C'$PRIVATE'    PASS BACK $PRIVATE      GP10113
         B     NORMRET                  TO BYPASS USE OF ENTRY CARD   $
NOEPNMFD CP    CSECTCTR,=P'1'           IF THE CESD HAS ONLY 1 CEST,  $
         BNE   NOEPERR                  THERE IS NO EP MATCH, AND     $
         MVC   CSCTNAME,=C'$PRIVATE'    PASS BACK $PRIVATE      GP10113
         B     NORMRET                  WILL ASUME AN RPG MODULE AND  $
*                                       PASS BACK $PRIVATE AS A SW    $
*                                       TO BYPASS USE OF ENTRY CARD   $
NOEPERR  MSGMID MIDNOEPA,MEMNAME        SET MEMBER NAME FOR MSG
         MVI   SUBSAVE1+4*R15+3,4       SET RETURN TO 4         GP10113
         B     NORMRET                  RETURN ADDRESS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    I/O ERROR HANDLING ROUTINE SYNAD EXIT FOR ESDCB                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ESDIOER  SYNADAF ACSMETH=BPAM           ANALYZE I/O ERRORS
         WTO   MF=(E,(1)),ROUTCDE=11,DESC=7  PUT OUT SYNAD MESSAGE
         MVC   MSGPARM2,MEMNAME         SET UP MEMBER NAME FOR MSG
         L     R3,@MDTDDC               PTR TO INDD TABLE
         MSGMID MIDIOESD,MDNAME-MDSECT(R3)   DDNAME TO MSG      GP10113
         SYNADRLS                       RELEASE SYNAD BUFFERS
         B     NORMRET                  RETURN
         TITLE 'Z Z R E L I N K  ***  OVERLAY CARD BUILDER '    GP10113
         PRINT NOGEN                                            GP10049
ZZROVCRD STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP10113
         LR    R12,R15            LOCAL BASE                    GP10113
         XC    SUBSAVE1+4*R15(4),SUBSAVE1+4*R15  CLEAR RC       GP10113
         USING ZZROVCRD,R12       LOCAL BASE                    GP10113
         USING ZZRELCOM,R10                                     GP10113
         L     R3,SEGBFBEG              R3 -> SEGTAB
         LA    R3,24(0,R3)              R3 -> 1ST LINE
         LA    R4,4                     INDEX
         L     R5,SEGUSED               PTR TO DYNAMIC END OF TABLE
         SR    R5,R4                    -4 FOR BXLE END ADDRESS
         SR    R6,R6                    CLEAR COUNTER
STSEGNO  LA    R6,1(0,R6)               ADD 1 TO COUNTER
         STC   R6,3(0,R3)               STORE SEG # IN APPROPRIATE LINE
         BXLE  R3,R4,STSEGNO            PROCESS ALL SEGTAB LINES
         MVC   0(2,R3),FFFF             DESIGNATE END OF TABLE  GP10113
         MVC   RGCNT(2),=H'1'           INITIALIZE REGION COUNT
         MVI   INSRTSW,X'00'            TURN SWITCH OFF
         LA    R8,4                     R8 = 4
         L     R14,SEGBFBEG             R14 -> SEGTAB
         LA    R11,24(0,R14)            R11 -> 1ST LINE IN SEGTAB
         LA    R14,8(0,R14)             ADDR OF HGHEST SEG # IN REG
         ST    R14,SAVER11                                      GP10113
         LA    R1,4                     INDEX
PRCRGNS  ST    R1,R1SVE                 SAVE INDEX REGISTER
         L     R14,SAVER11                                      GP10113
         SR    R0,R0                    CLEAR R0
         IC    R0,0(0,R14)              GET HIGHEST SEGMENT #
         LTR   R0,R0                    IS IT ZERO?
         BZ    ENDOVLY                  NO MORE CARDS TO CREATE
         BCTR  R0,0                     -1 TO GET INDEX TO LAST LINE
         SLL   R0,2                     X 4 BYTES PER ENTRY
         L     R9,SEGBFBEG              START OF SEGTAB
         LA    R9,24(0,R9)              POINT TO FIRST LINE
         AR    R9,R0                    ADDR OF LAST LINE
PNCLOOP  L     R4,CESDADR               START OF CESD TABLE
         USING CESDSECT,R4              DECLARE MAPPING         GP10113
         LA    R6,CESDSIZE              INDEX                   GP10113
         L     R7,CESDUSED              PTR TO DYNAMIC END OF CESD TAB
         SR    R7,R6                    -16 TO POINT TO END OF TABLE
NXTSEG   TM    CESDFLG,X'FF'            PROCESSED ?             GP10113
         BO    BXLE1                    YES - GET NEW ENTRY
         L     R14,SAVER11                                      GP10113
         CLC   CESDSG#,0(R14)           IN RANGE OF HIGH SEG #  GP10113
         BH    BXLE1                    NO - DO NOT PROCESS
         CLC   CESDSG#,3(R11)           SEG # = # SEARCHING FOR GP10113
         BNE   BXLE1                    NO - DO NOT PROCESS
         CLC   CESDNAM,=C'$BLKCOM '     BLANK COMMON SYMBOL?    GP10113
         BE    SETPRSW                  YES- SHOW PROCESSED
         CLC   CESDNAM,=C'$ENDTAB '     ENTAB SYMBOL?           GP10113
         BE    SETPRSW                  YES - SHOW PROCESSED
         CLC   CESDNAM,=C'$PRIVATE'     PRIVATE SYMBOL?         GP10113
         BE    SETPRSW                  YES - SHOW PROCESSED
         CLC   CESDNAM,=C'$SEGTAB '     SEGTAB SYMBOL?          GP10113
         BE    SETPRSW                  YES - SHOW PROCESSED
         MVC   CNTCRD+10(6),=C'INSERT'  MOVE IN INSERT MESSAGE
         MVC   CNTCRD+17(8),CESDNAM      MOVE IN CSECT NAME     GP10113
         OI    INSRTSW,X'FF'            SHOW INSERT FOR THIS SEGMENT
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
SETPRSW  OI    CESDFLG,X'FF'            ENTRY DONE              GP10113
BXLE1    BXLE  R4,R6,NXTSEG             PROCESS NEXT SEGMENT
         DROP  R4                                               GP10113
         CLC   4(2,R11),FFFF            END OF SEG TABLE?       GP10113
         BE    ENDOVLY                  YES - END
         TM    INSRTSW,X'FF'            INSERT CARD PUNCHED FOR SEG?
         BZ    BXLE2                    NO - SKIP OVERLAY CARD
         LR    R2,R11                   R2 -> CURRENT LINE OF SEGTAB
         AR    R2,R8                    ADD INCREMENT
         CR    R2,R9                    END OF SEGTAB?
         BH    BXLE2                    YES - DON'T GEN OVERLAY CARDS
         NI    INSRTSW,X'00'            RESET SWITCH
         MVC   CNTCRD+5(7),=C'OVERLAY'  MOVE IN OVERLAY MESSAGE
         SR    R3,R3                    ZERO OUT R3
         IC    R3,4(,R11)               GET PREV SEGMENT #
         LTR   R3,R3                    SEG # = 0
         BZ    USEREGID                 YES - USE REGION ID FOR OVERLAY
         CVD   R3,DB                    CONVERT TO DECIMAL
         OI    DB+7,X'03'               MAKE POSITIVE
         MVC   CNTCRD+13(4),=C'OVLY'    MOVE IN OVLY VERBIAGE
         UNPK  CNTCRD+17(3),DB+6(2)      UNPACK SEG #
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         B     BXLE2                    ITERATE LOOP
         SPACE 1
USEREGID LH    R3,RGCNT                 PUT REGION # INTO R3
         CVD   R3,DB                    CONVERT IT TO DECIMAL
         OI    DB+7,X'03'               FORCE IT POSITIVE
         MVC   CNTCRD+13(6),=C'REGION'  MOVE IN VERBIAGE
         UNPK  CNTCRD+19(1),DB+7(1)      UNPACK REGION #
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
BXLE2    BXLE  R11,R8,PNCLOOP           ITERATE LOOP
         L     R14,SAVER11                                      GP10113
         LA    R14,2(0,R14)             INDEX TO NEXT LINE
         ST    R14,SAVER11                                      GP10113
         CLI   0(R14),X'00'             MORE REGIONS?
         BE    ENDOVLY                  NO - END TASK
         LH    R3,RGCNT                 GET COUNT
         LA    R3,1(0,R3)               ADD 1 TO COUNT
         CVD   R3,DB                    CONVERT TO DECIMAL
         OI    DB+7,X'03'               FORCE POSITIVE
         STH   R3,RGCNT                 SAVE THE COUNT
         MVC   CNTCRD+9(6),=C'REGION'   MOVE IN REGION VERBIAGE
         UNPK  CNTCRD+15(1),DB+7(1)      MOVE IN REGION #
         MVC   CNTCRD+16(8),=C'(REGION) ' MOVE IN VERBIAGE
         MVC   CNTCRD+1(7),=C'OVERLAY'  MOVE IN VERBIAGE
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
         L     R1,R1SVE                 RETRIEVE REGION INDEX
         BCT   R1,PRCRGNS               PROCESS NEXT REGION
*NEXT*   B     ENDOVLY                  END TASK
         SPACE 1
ENDOVLY  LM    R0,R15,SUBSAVE1          RESTORE REGISTERS & RC  GP10113
         BR    R14                      RETURN                  GP10113
         LTORG
         TITLE 'Z Z R E L I N K  ***  PAGE ALIGNMENT CARDS '    GP10113
         PRINT NOGEN                                            GP10113
         PUSH  USING                                            GP10113
ZZRPAGER STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP10113
         LR    R12,R15            LOCAL BASE                    GP10113
         XC    SUBSAVE1+4*R15(4),SUBSAVE1+4*R15  CLEAR RC       GP10113
         USING ZZRPAGER,R12       LOCAL BASE                    GP10113
         USING ZZRELCOM,R10                                     GP10113
         L     R4,CESDADR               START OF CESD TABLE     GP10113
         USING CESDSECT,R4              DECLARE MAPPING         GP10113
         LA    R6,CESDSIZE              INDEX                   GP10113
         L     R7,CESDUSED              PTR TO DYNAMIC END OF CESD TAB
         SR    R7,R6                    -16 TO POINT TO END OF TABLE
NXTMOD   CLC   CESDNAM,=C'$BLKCOM '     BLANK COMMON SYMBOL?    GP10113
         BE    SKIPMOD                  YES- SHOW PROCESSED     GP10113
         CLC   CESDNAM,=C'$ENDTAB '     ENTAB SYMBOL?           GP10113
         BE    SKIPMOD                  YES - SHOW PROCESSED    GP10113
         CLC   CESDNAM,=C'$PRIVATE'     PRIVATE SYMBOL?         GP10113
         BE    SKIPMOD                  YES - SHOW PROCESSED    GP10113
         CLC   CESDNAM,=C'$SEGTAB '     SEGTAB SYMBOL?          GP10113
         BE    SKIPMOD                  YES - SHOW PROCESSED    GP10113
         MVC   CNTCRD+08(5),=C'ORDER'   MOVE IN ORDER ORDER     GP10113
         MVC   CNTCRD+14(8),CESDNAM      MOVE IN CSECT NAME     GP10113
         L     R0,CESDEPA-1             GET ENTRY               GP10113
         N     R0,=X'00FFF000'          ALIGNED ?               GP10113
         BNZ   PUNCHMOD                 NO                      GP10113
         TRT   CNTCRD+15(9),TRTBLANK    FIND BLANK              GP10113
         MVC   0(3,R1),=C'(P)'          ALIGN                   GP10113
PUNCHMOD BAL   R14,PUNCHOUT             WRITE A CARD            GP10113
SKIPMOD  CLC   CESDNAM,PAGENAME   PROCESSED LAST ENTRY?         GP10113
         BE    ENDPAGE                    YES; GET OUT          GP10113
         BXLE  R4,R6,NXTMOD             PROCESS NEXT SEGMENT    GP10113
         DROP  R4                                               GP10113
         SPACE 1
ENDPAGE  LM    R0,R15,SUBSAVE1          RESTORE REGISTERS & RC  GP10113
         BR    R14                      RETURN                  GP10113
         POP   USING                                            GP10113
         TITLE 'Z Z R E L I N K  ***  BUILD SYSLIB INCLUDES'    GP10114
         PRINT NOGEN                                            GP10114
         PUSH  USING                                            GP10114
ZZRBUILD STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP10114
         LR    R12,R15            LOCAL BASE                    GP10114
         XC    SUBSAVE1+4*R15(4),SUBSAVE1+4*R15  CLEAR RC       GP10114
         USING ZZRBUILD,R12       LOCAL BASE                    GP10114
         USING ZZRELCOM,R10                                     GP10114
         L     R4,CESDADR               START OF CESD TABLE     GP10114
         USING CESDSECT,R4              DECLARE MAPPING         GP10114
         LA    R6,CESDSIZE              INDEX                   GP10114
         L     R7,CESDUSED              PTR TO DYNAMIC END OF CESD TAB
         SR    R7,R6                    -16 TO POINT TO END OF TABLE
BUILDLUP CLC   CESDNAM,=C'$BLKCOM '     BLANK COMMON SYMBOL?    GP10114
         BE    BUILDSKP                 YES- SHOW PROCESSED     GP10114
         CLC   CESDNAM,=C'$ENDTAB '     ENTAB SYMBOL?           GP10114
         BE    BUILDSKP                 YES - SHOW PROCESSED    GP10114
         CLC   CESDNAM,=C'$PRIVATE'     PRIVATE SYMBOL?         GP10114
         BE    BUILDSKP                 YES - SHOW PROCESSED    GP10114
         CLC   CESDNAM,=C'$SEGTAB '     SEGTAB SYMBOL?          GP10114
         BE    BUILDSKP                 YES - SHOW PROCESSED    GP10114
         MVC   LIBBLD+4(8),CESDNAM      COMPLETE BLDL           GP10114
         BLDL  SYSLIB,LIBBLD            LOCATE IT               GP10114
         BXLE  R15,R15,BUILDFND         HAVE IT                 GP10114
         MSGMID MIDNOOBJ,MEMNAME,CESDNAM         TELL USER      GP10114
         B     BUILDSKP                 SKIP IT                 GP10114
         SPACE 1
BUILDFND MVC   CNTCRD+06(15),=C'INCLUDE SYSLIB('                GP10114
         MVC   CNTCRD+21(8),CESDNAM      MOVE IN CSECT NAME     GP10114
         TRT   CNTCRD+22(8),TRTBLANK    FIND END                GP10114
         MVI   0(R1),C')'               CLOSE                   GP10114
         BAL   R14,PUNCHOUT             WRITE A CARD            GP10114
BUILDSKP BXLE  R4,R6,BUILDLUP           PROCESS NEXT SEGMENT    GP10114
         DROP  R4                                               GP10114
         SPACE 1
BUILDEND LM    R0,R15,SUBSAVE1          RESTORE REGISTERS & RC  GP10114
         BR    R14                      RETURN                  GP10114
         POP   USING                                            GP10114
         TITLE 'Z Z R E L I N K  ***  JOB CARD BUILDER'         GP10113
         PUSH  USING                                            GP10113
*---------------------------------------------------------------------*
*   CHASE SYSTEM CONTROL BLOCKS FOR BASIC JOB CARD INFORMATION        *
*---------------------------------------------------------------------*
ZZRJOBLD STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP10113
         LR    R12,R15                                          GP10113
         USING ZZRJOBLD,R12       LOCAL BASE                    GP10113
         MVC   JOBCARD+15(56),JOBCARD+14    CLEAR DEFAULT IMAGE GP10113
         LA    R1,JOBCARD+15           START OF OUTPUT          GP10113
         L     R4,CVTPTR                CVT                     GP10113
         L     R4,CVTTCBP-CVTMAP(,R4)   TCB TABLE               GP10113
         L     R4,4(,R4)                TCBOLD (CURRENT)        GP10113
         USING TCB,R4                                           GP10113
         L     R4,TCBJSCB              JOB STEP CONTROL BLOCK   GP10113
         USING IEZJSCB,R4                                       GP10113
         L     R5,JSCBJCT              JOB CONTROL TABLE        GP10113
         LA    R5,16(,R5)              SKIP Q CONTROL
         USING INJMJCT,R5                                       GP10113
         SLR   R7,R7                                            GP10113
         ICM   R7,B'0111',JCTACTAD     SVA OF ACT               GP10113
         USING IEFAACTB-16,R7                                   GP10113
         MVI   0(R1),C'('              BEGIN SUB-LIST           GP10113
         SLR   R3,R3                                            GP10113
         ICM   R3,B'0001',ACTJNFLD     # OF ACCT FIELDS         GP10113
         BZ    JOBS120                 NO ACCOUNT INFORMATION   GP10113
         CLC   =X'0100',ACTJNFLD       ONE NULL SUB-FIELD?      GP10113
         BE    JOBS120                 YES, IGNORE              GP10113
         LA    R0,2                    MAX WANTED               GP10113
         CR    R3,R0                   LARGER ?                 GP10113
         BNH   *+6                     NO                       GP10113
         LR    R3,R0                   DO ONLY TWO FIELDS       GP10113
         LA    R14,ACTJNFLD+1          FIRST SUB-PARM           GP10113
         SLR   R2,R2                                            GP10113
JOBS114  ICM   R2,B'0001',0(R14)       SIZE OF SUB-PARM         GP10113
         SH    R2,=H'1'                EXEC SIZE                GP10113
         BM    JOBS116                 NULL FIELD               GP10113
         LA    R15,4-1                 MAX WANTED               GP10113
         CR    R2,R15                  LARGER ?                 GP10113
         BNL   *+6                     NO                       GP10113
         LR    R15,R2                  LIMIT EACH TO 4 BYTES    GP10113
         EX    R15,EXMVCACT            APPEND NEW TEXT TO CURRENT LINE
         LA    R14,2(R2,R14)           SKIP CURRENT SUB-FIELD   GP10113
         TRT   0(50,R1),TRTBLANK       FIND FIELD END           GP10113
JOBS116  MVI   0(R1),C','              FIELD SEPARATOR          GP10113
         BCT   R3,JOBS114              NEXT SUB-FIELD           GP10113
         MVI   0(R1),C')'              CLOSE SUB-LIST           GP10113
         LA    R1,1(,R1)                                        GP10113
         B     JOBS120                                          GP10113
EXMVCACT MVC   1(0,R1),1(R14)          MOVE ACCT STRING         GP10113
         SPACE 1                                                GP10113
JOBS120  MVI   0(R1),C','              ACCT FIELD MISSING       GP10113
         LA    R1,1(,R1)               SKIP COMMA               GP10113
         CLC   ACTPRGNM,BLANKS8        DO WE HAVE A PROGRAMMER'S NAME ?
         BE    JOBS124                 NO, JUMP                 GP10113
         MVI   0(R1),C''''                                      GP10113
         MVC   1(L'ACTPRGNM,R1),ACTPRGNM                        GP10113
         LA    R1,2+L'ACTPRGNM(,R1)    NEXT FIELD               GP10113
JOBS121  CLI   0(R1),C' '    TRILING BLANK ?                    GP10113
         BNE   JOBS122       NO; DONE                           GP10113
         BCT   R1,JOBS121                                       GP10113
JOBS122  MVI   1(R1),C''''                                      GP10113
         LA    R1,2(,R1)               SKIP OVER                GP10113
JOBS124  CLI   JCTJCSMF,X'E0'          TSO USER?                GP10113
         BE    JOBS125                 YES, JUMP                GP10113
         CLI   JCTJCSMF,X'D0'          STARTED TASK?            GP10113
         BE    JOBS125                 YES, JUMP                GP10113
         MVC   0(7,R1),=C',CLASS='                              GP10113
         MVC   7(1,R1),JCTJCSMF                                 GP10113
         LA    R1,8(,R1)                                        GP10113
JOBS125  MVC   0(10,R1),=C',MSGCLASS='                          GP10113
         MVC   10(1,R1),JCTJMGPO                                GP10113
         LA    R1,11(,R1)                                       GP10113
JOBS130  B     ENDJOBLD      NO ROOM FOR MORE - CONTINUE?       GP10113
         MVC   0(15,R1),=C',MSGLEVEL=(1,1)'                     GP10113
         TM    JCTJMGLV,INCMMGL1       MSGLEVEL=1 ?             GP10113
         BO    JOBS133                 YES, JUMP                GP10113
         MVI   11(R1),C'2'             MSGLEVEL=(2,1)           GP10113
         TM    JCTJMGLV,INCMMGL2       MSGLEVEL=2 ?             GP10113
         BO    JOBS133                 YES, JUMP                GP10113
         MVI   11(R1),C'0'             MSGLEVEL=(2,1)           GP10113
JOBS133  TM    JCTJMGLV,INCMALL        MSGLEVEL=(,1) ?          GP10113
         BO    JOBS134                 YES, JUMP                GP10113
         MVI   13(R1),C'0'             MSGLEVEL=( ,0)           GP10113
JOBS134  DS    0H                                               GP10113
         SPACE 1                                                GP10113
ENDJOBLD LM    R0,R15,SUBSAVE1          RESTORE REGISTERS & RC  GP10113
         BR    R14                      RETURN                  GP10113
         POP   USING                                            GP10113
         LTORG ,                                                GP10113
         TITLE 'Z Z R E L I N K  ***  MESSAGE PRINTER'          GP10113
ZZMESAGE STM   R0,R15,MSGSAVER    SAVE REGISTERS                GP10113
         LR    R12,R15            LOCAL BASE                    GP10113
         XC    MSGSAVER+4*R15(4),MSGSAVER+4*R15  CLEAR RC       GP10113
         USING ZZMESAGE,R12       LOCAL BASE                    GP10113
         USING ZZRELCOM,R10                                     GP10113
FF       EQU   X'FF'
FIFTYSIX EQU   56
CCLEN    EQU   80                 LENGTH OF CONTROL CARD
COFF     EQU   20                 OFFSET IN BFR FOR CTL CD IMAGE
X0       EQU   0                  OFFSET OF ZERO
X1       EQU   1                  OFFSET OF ONE
         SPACE 1
         LA    R4,MSGLIST
ZZMSGLUP SR    R3,R3
         ICM   R3,1,LINECT        CHECK LINES ON PAGE           GP14266
         BNP   ZZMSGHED             FIRST TIME HEADER REQUIRED  GP14266
         CH    R3,=AL2(FIFTYSIX)  FULL PAGE ?                   GP10113
         BL    ZZMSGMSG           FORMAT AND PRINT MESSAGE      GP10113
         SPACE 1
ZZMSGHED LH    R1,PAGENUM         GET PRIOR PAGE NUMBER         GP10113
         LA    R1,1(,R1)          CURRENT PAGE                  GP10113
         STH   R1,PAGENUM         UPDATE IT                     GP10113
         MVC   HEADBUF#,=X'402020202120'   MAKE EDIT MASK       GP10113
         CVD   R1,DB              CONVERT TO PACKED             GP10113
         ED    HEADBUF#,DB+5      FORMAT PAGE NUMBER            GP10113
         LA    R2,SYSPRINT        SPECIFY DCB                   GP10113
         LA    R1,HEADBUF         POINT TO HEADER               GP10113
         LA    R0,L'HEADBUF       MESSAGE LENGTH                GP10113
         BAL   R14,REC#PUT        WRITE IT                      GP10113
         MVI   LINECT,3           RESET LINES/PAGE USED         GP10113
         MVI   MSGBUF,C'-'        TRIPLE SPACE THIS ONE         GP10113
         SPACE 1
ZZMSGMSG TM    X0(R4),IOERF       IS THERE A MSG IN THE BUFFER
         BO    WRTMSG             IF SO, GO WRITE IT
         LA    R6,MSGBUF          POINT TO OUTPUT BUFFER        GP10113
         TM    X0(R4),CTLCD       IS A CONTROL STMT TO BE PRINTED
         BO    MSGINCRD           IF ON, GO PRINT THE CONTROL STMT
         CLI   X1(R4),MIDSEP      SEPARATOR LINE ?              GP10113
         BE    WRTMSG             YES; SKIP MOVEMENT            GP10113
         SPACE 1
         SR    R9,R9                                            GP10113
         IC    R9,X1(,R4)         GET MESSAGE CODE              GP10113
         LR    R1,R9              SAVE MESSAGE NUMBER           GP10113
         BCTR  R9,0               RELATIVE TO 1                 GP10113
         SLL   R9,1               MULTIPLY MSG CODE NUMBER BY 2 GP10113
         A     R9,=A(ZZMSGPTR)    USE IT AS AN INDEX            GP10113
         LH    R5,0(,R9)          POINTERS TO MESSAGE TEXT      GP10113
         A     R5,=A(ZZMSGTAB)    MESSAGE TEXT ADDRESS          GP10113
         USING MSGCSECT,R5        DECLARE IT                    GP10113
         USING BUFFSECT,R6          DITTO FOR OUTPUT            GP10113
         MVC   BUFFID,=C'ZZR'     COMMON MESSAGE HEADER         GP10113
         CVD   R1,DB              PACK MESSAGE NUMBER           GP10113
         UNPK  BUFFID#,DB+6(2)    UNPACK INTO MESSAGE           GP10113
         OI    BUFFID#+L'BUFFID#-1,C'0'  FIX ZONE               GP10113
         IC    R1,MSGLVL          GET MESSAGE SEVERITY LEVEL    GP10113
         C     R1,PGMRC           HIGHER THAN PREVIOUS?         GP10113
         BNH   *+8                  NO                          GP10113
         ST    R1,PGMRC           UPDATE RETURN CODE            GP10113
         SRL   R1,2               DIVIDE CODE BY 2              GP10113
         CH    R1,=H'3'           LARGE ?                       GP10113
         BNH   *+8                NO                            GP10113
         LA    R1,3               LIMIT                         GP10113
         LA    R15,=C'IWEE'       SET CUSTOMARY SUFFIX          GP10113
         AR    R15,R1             POINT TO IT                   GP10113
         MVC   BUFFID$,0(R15)     COMPLETE MESSAGE ID           GP10113
         IC    R1,MSGLEN          GET MESSAGE LENGTH - 1        GP10113
         EX    R1,EXMSGMVC        MOVE MESSAGE TEXT             GP10113
         XC    TRTMSGIN,TRTMSGIN  CLEAR TRT                     GP10113
         MVI   TRTMSGIN+C'×',4    SET STOPPER                   GP10113
         TRT   BUFFTEXT,TRTMSGIN  NEED TO INSERT TEXT?          GP10113
         BZ    MSGNOPRM           NO                            GP10113
         MVC   0(8,R1),MSGPARM1   MOVE FIRST FIELD              GP10113
         TRT   BUFFTEXT,TRTMSGIN  NEED TO INSERT TEXT?          GP10113
         BZ    MSGNOPRM           NO                            GP10113
         MVC   0(8,R1),MSGPARM2   MOVE SECOND FIELD             GP10113
MSGNOPRM XC    TRTMSGIN,TRTMSGIN    CLEAR AGAIN                 GP10113
         MVI   TRTMSGIN+C'^',8    NUMERIC INSERTION ?           GP10113
         TRT   BUFFTEXT,TRTMSGIN  NEED TO INSERT TEXT?          GP10113
         BZ    ANYPARM            NO                            GP10113
         L     R0,MSGPNUM1        GET NUMERIC FIELD             GP10113
         TM    X0(R4),RCODE       IS A RETURN CODE TO BE PUT INTO MSG
         BZ    MSGNORTC           NO                            GP10113
         L     R0,PGMRC           GET RETURN CODE               GP10113
MSGNORTC CVD   R0,DB              CONVERT TO PACKED             GP10113
         MVC   DB2,=X'4020202020202120'   MAKE EDIT MASK        GP10113
         ED    DB2,DB+4           CONVERT TO PRINTABLE          GP10113
         LR    R14,R1             SAVE FIELD START              GP10113
         LA    R1,8(,R14)           JUST IN CASE                GP10113
         TRT   0(8,R14),TRTBLANK  FIND END                      GP10113
         LA    R15,DB2+7                                        GP10113
         LR    R2,R1              STOPPER                       GP10113
         SR    R2,R14             LENGTH                        GP10113
         BNP   *+6                                              GP10113
         BCTR  R2,0               EXECUTE LENGTH                GP10113
         SR    R15,R2             FINAGLE                       GP10113
         EX    R2,EXMVCNUM        MOVE SHORTENED NUMBER         GP10113
ANYPARM  B     WRTMSG             GO WRITE THE MSG
EXMVCNUM MVC   0(0,R14),0(R15)                                  GP10113
         SPACE 1
MSGINCRD MVC   COFF(CCLEN,R6),CCIMAGE   SHOW CONTROL CARD       GP10113
         SPACE 1
WRTMSG   LA    R1,MSGBUF          POINT TO HEADER               GP10113
         LA    R0,L'MSGBUF        MESSAGE LENGTH                GP10113
         LA    R2,SYSPRINT        SPECIFY DCB                   GP10113
         BAL   R14,REC#PUT        WRITE IT                      GP10113
         SR    R3,R3                                            GP14266
         IC    R3,LINECT                                        GP14266
         LA    R3,1(,R3)          ADD 1 TO LINE COUNT           GP10113
         STC   R3,LINECT
         MVC   MSGBUF,MSGBUF-1    CLEAR BUFFER                  GP10113
         TM    X0(R4),MOREMSG     IS THIS THE LAST MSG TO HANDLE NOW
         BZ    RETURN             IF SO, EXIT TO CALLER         GP10113
         LA    R4,2(,R4)          ELSE POINT TO NXT MSG LIST ENTRY
         B     ZZMSGLUP           DO NEXT ONE                   GP10113
         SPACE 1
RETURN   XC    MSGLIST(MSGPNUM1-MSGLIST+L'MSGPNUM1),MSGLIST  CLEAR
         MVC   MSGPARM1,BLANKS8   CLEAR INSERTIONS              GP10113
         MVC   MSGPARM2,BLANKS8   CLEAR INSERTIONS              GP10113
         LM    R0,R15,MSGSAVER                                  GP10113
         BR    R14                RETURN                        GP10113
EXMSGMVC MVC   BUFFTEXT(0),MSGTEXT   MOVE MESSAGE TEXT          GP10113
SWITCH   DC    X'00'              INTERNAL SWITCH
WRTHDMSG EQU   X'80'         ON = A PAGE HEADER IS BEING WRITTEN
*              LOW ORDER 7 BITS NOT USED
* THE FOLLOWING 121 BYTES ARE THE PAGE HEADER TEXT
HEADBUFC DC    C'1'            CARRIAGE CONTROL=EJECT
         DC    35C' ',C'RELINKER MESSAGES AND CONTROL STATEMENTS'
         DC    35C' ',C'PAGE'                                   GP10113
HEADBUF# DC    C' nnnnn'                                        GP10113
HEADBUF  EQU   HEADBUFC,*-HEADBUFC,C'C'                         GP10113
         DC    C' '          FINAGLE?                           GP10113
         SPACE 1
TRTMSGIN DC    XL256'0'      FOR × AND ^ SEARCHES               GP10113
         SPACE 2
***********************************************************************
* MESSAGE TEXT FORMAT -                                               *
*   1 BYTE - CONDITION CODE (0-I, 4-W, 8-E)                           *
*   1 BYTE - LENGTH OF TEXT                                           *
*   n BYTES - TEXT (MAY CONTAIN INSERTIONS                            *
*   A × DENOTES A TEXT INSERTION OF 8 BYTES                           *
*   A ^ DENOTES A NUMERIC INSERTION OF 7 BYTES                        *
***********************************************************************
*NOPRT   MDEF  16,'×xxxxxxx DD could not be OPENed'
INKEY    MDEF  8,'Invalid command or keyword'
CTLER    MDEF  8,'Control statement error'
SEQER    MDEF  8,'Statement sequence error'
INPRM    MDEF  8,'Parameter invalid'
UNPAR    MDEF  8,'Unbalanced parentheses'
EXPAR    MDEF  8,'Excessive parentheses'
INCON    MDEF  8,'Invalid continuation'
NOSEX    MDEF  8,'Member without SELECT or EXCLUDE'
TUSEX    MDEF  8,'SELECT and EXCLUDE modes invalid for one INDD'
INREP    MDEF  8,'Invalid REPLACE specified'
NULPM    MDEF  8,'Null parameters'
BDPRM    MDEF  8,'×xxxxxxx is not a supported option/PARM value'
OKOPT    MDEF  0,'Accepted option : ×xxxxxxx'
NOEXR    MDEF  8,'May not RENAME/REPLACE on EXCLUDE'
MISDD    MDEF  8,'OUTDD or INDD not specified'
OOPDD    MDEF  8,'OUTDD/list not on COPY/LINK card'
MIXCD    MDEF  8,'Mixing control statements from old and new version of*
                RELINKER; unsupported'
NDCBS    MDEF  4,'DCBS option ignored for ×xxxxxxx - no BLKSIZE'
INOUT    MDEF  0,'Control from DD ×xxxxxxx; print to DD ×xxxxxxx'
IODFL    MDEF  0,'Default copy: ×xxxxxxx to ×xxxxxxx'           GP14266
IINFO    MDEF  ,'  Input data set : '
OINFO    MDEF  ,' Output data set : '
SYNND    MDEF  0,'End of file on SYSIN'
CONFL    MDEF  8,'INDD and OUTDD specify same data set without member s*
               ELECT. Unsupported action'
NOLIB   MDEF 4,'×xxxxxxx DD could not be OPENed; build option canceled'
NOOBJ    MDEF  ,'×xxxxxxx CSECT ×xxxxxxx not found in SYSLIB; INCLUDE s*
               kipped'                                          GP10114
NOUT3    MDEF  ,'SYSUT3 missing; will not run IEBCOPY'
*NOVLY   MDEF  8,'Overlays not supported. ×xxxxxxx not relinked'
*VALER   MDEF  8,'×xxxxxxx validation error'
OPNER    MDEF  16,'Error attempting to open ×xxxxxxx'
NOTDA    MDEF  8,'×xxxxxxx not a direct access data set'
DDMIS    MDEF  8,'×xxxxxxx DD statement not found'
RESDD    MDEF  8,'OUTDD ×xxxxxx specifies a reserved DD name'   GP10113
UNUNI    MDEF  8,'Unit allocated to ×xxxxxxx not supported.'
*OBTER   MDEF  8,'DSCB could not be obtained'
*NOPDS   MDEF  8,'Data set not partitioned'
*BDREC   MDEF  8,'Invalid LRECL'
*BDBLK   MDEF  8,'Invalid BLOCKSIZE'
*UNMOV   MDEF  8,'×xxxxxxx references an unmovable data set'
*BDRCF   MDEF  8,'RECFM incompatible'
OEDIR    MDEF  8,'Unable to gain access to directory for ×xxxxxxx'
TUALI    MDEF  8,'×xxxxxxx directory error. Alias ×xxxxxxx occurs more *
               than once.'
MAXAL    MDEF  12,'Implementation restriction - alias table full.'
WIDOW    MDEF  4,'×xxxxxxx is an unreferenced alias; not processed'
AL2MB    MDEF  ,'Requested alias ×xxxxxxx replaced by ×xxxxxxx'
ALPRO    MDEF  ,'Widowed alias ×xxxxxxx promoted to member'
EXCAL    MDEF  ,'Alias ×xxxxxxx excluded by request'
NOEPA    MDEF  4,'Unable to determine EPA for ×xxxxxxx. Not relinked.'
DIRER    MDEF  8,'I/O error reading directory for ×xxxxxxx'
DUPER    MDEF  8,'×xxxxxxx not processed. Exists on output data set, bu*
               t REPLACE option not specified.'
DUPRN    MDEF  8,'×xxxxxxx already exists; ×xxxxxxx RENAME failed; memb*
               er not processed'
IOESD   MDEF  8,'I/O error on ×xxxxxxx while reading CESD for ×xxxxxxx'
MODNE    MDEF  4,'Load module ×xxxxxxx marked ''NOT EDITABLE''. Use IEB*
               COPY to move to output data set.'
DUPNM    MDEF  8,'Member name ×xxxxxxx previously specified; unacceptab*
               le'
*        MDEF  8,'Cannot process all old/new-names specified'
*        MDEF  ,'×xxxxxxx references a null input data set'
*        MDEF  8,'Cannot re/de-block with note-list/user TTRN in member*
                ×xxxxxxx'
*        MDEF  12,'Cannot continue to build CTLTAB'
*        MDEF  ,'all selected members linked - did not use all specifie*
               d INDDs'
*        MDEF  ,'There are ^nnnnnn unused tracks in output data set ref*
               erenced by ×xxxxxxx'
*        MDEF  4,'Cannot compress track overflow data set'
*        MDEF  4,'Cannot compress with re/de-blocking'
EOJ      MDEF  ,'End of job - ^n was highest severity code'
GOTST  MDEF  ,'Error code ^n exceeds threshold of 4; setting test mode'
*        MDEF  8,'No space in output directory for directory entries fr*
               om input data set ×xxxxxxx'
*        MDEF  ,'There are ^nnnnnnn unused directory blocks in output d*
               irectory'
*        MDEF  12,'**warning** the output DS ref by ×xxxxxxx contains t*
               oo many directory blocks per track'               a36049
*        MDEF  ,'Job has terminated with error(s)'               a36047
*        MDEF  ,'×xxxxxxx compressed - was already in place and not mov*
               ed'
*        MDEF  ,'All members compressed - all were originally compresse*
               d'
*        MDEF  ,'×xxxxxxx has been successfully copied'
*        MDEF  ,'×xxxxxxx has been successfully copied and is a ''NEWNA*
               ME'''
*NOMCP   MDEF  4,'No members linked from input data set referenced by ×*
               xxxxxxx'
*        dc    c'60Concatenated data sets'
*        dc    c'61Compress to be done using INDD named         '
*        dc    c'62Input dataset from INDD named          not same as'
*        dc    c' OUTDD - cannot compress'
NOLNK    MDEF  8,'No member names for partial link, will not link'
*        dc    c'64Total link assumed'
*        dc    c'65         ''found'' but not linked, due to i/o error x
               reading input directory'
*        dc    c'66No members linked to data set referenced by '
*        dc    c'        '
*        dc    c'67Following member(s) linked from input data set referx
               enced by          -'
*        dc    c'68**warning** due to error, possible loss of '
*        dc    c'access to member data and/or incomplete directory'
*        dc    c'69**warning** due to i/o error on sysut4, output '
*        dc    c'directory may be incomplete'
*        dc    c'70**warning** due to sysut3 i/o error, compress-in-pla*
               ce not done and link operation terminated'
MBNTF    MDEF  4,'×xxxxxxx was selected but not found in any input data*
                set'
NOLOD    MDEF  4,'×xxxxxxx is not a load module - needs IEBCOPY'
MODPA    MDEF  ,'Load module ×xxxxxxx marked ''page aligned''. Reset by*
                request'                                        GP10113
NAUTH    MDEF  4,'IEBCOPY bypassed - RELINKER module not authorized'
RC       MDEF  ,'×xxxxxxx return code = ^nn      ×xxxxxxx'      GP10113
SEP      MDEF  ,' '               SEPARATOR LINE                GP10113
         TITLE 'Z Z R E L I N K  ***  STATIC AND DYNAMIC AREAS' GP10113
RELINKER CSECT ,                        RESTORE MAIN CSECT      GP10113
ZZRELCOM DS    0D
*
*         THE FOLLOWING CONTROLS THE TERMINATION OF THIS UTILITY.
*    IT CLOSES FILES, RETURNS CONTROL TO THE OPER SYS ETC.
*
PGMEXIT  TM    OPTFLAG1,OFBUILD   BUILD OPTION?                 GP10114
         BZ    NOSLIB               NO                          GP10114
         LA    R2,SYSLIB          POINT TO LIBRARY              GP10114
         BAL   R14,FREECLOS       AND CLOSE IT                  GP10114
NOSLIB   TM    SYSUT3+DCBOFLGS-IHADCB,DCBOFOPN  ANY COPIES TO DO
         BNO   NOCOPIES                 BRANCH IF NOT
         LA    R2,SYSUT3                POINT TO DCB            GP10113
         BAL   R14,FREECLOS             FREE BUFFERS            GP10113
         TM    LEFLAG,X'FF'             DID ANY LINK EDITS?     GP10113
         BZ    TESTUT3S                 BRANCH IF NOT           GP10113
         TESTAUTH FCTN=1     ALLOWED TO COPY ?                  GP10113
         BXLE  R15,R15,GOCOPY           YES                     GP10113
         MSGMID MIDNAUTH                UNAUTHORIZED            GP10113
         SETCC 8                        OOPS                    GP10113
         B     NOCOPIES                                         GP10113
GOCOPY   TM    OPTFLAG1,OFTEST    TEST MODE ?                   GP10113
         BNZ   NOCOPIES           YES; SKIP THIS                GP10113
         LINK  EP=IEBCOPY,PARAM=(COPYOPTN,COPYDDNM),VL=1
         C     R15,PGMRC                                        GP10113
         BNH   *+8                                              GP10113
         ST    R15,PGMRC                SAVE HIGHEST CODE       GP10113
         TM    OPTFLAG1,OFLIST+OFDEBUG  SHOW ANYWAY ?           GP10113
         BNZ   GOCOWMSG                                         GP10113
         LTR   R15,R15                                          GP10113
         BZ    NOCOPIES                                         GP10113
GOCOWMSG MSGMID MIDRC,'IEBCOPY',,(R15)  SHOW RETURN CODE        GP10113
         B     NOCOPIES                                         GP10113
         SPACE 1
TESTUT3S TM    PROFLAGS,PFUT3     HAVE COPY DATA TO PRESERVE?   GP10113
         BZ    NOCOPIES             NO                          GP10113
         LA    R1,SYSUT3                                        GP10113
         ST    R1,DB                                            GP10113
         MVI   DB,X'80'           MAKE OPEN/CLOSE LIST          GP10113
         CLOSE MF=(E,DB)          CLOSE IT                      GP10113
         OPEN  MF=(E,DB)          OPEN FOR INPUT                GP10113
KUT3LOOP GET   SYSUT3,CNTCRD      GET A CARD IMAGE              GP10113
         BAL   R14,PUNCHOUT       COPY TO SYSPUNCH              GP10113
         B     KUT3LOOP           DO ALL                        GP10113
KUT3EOF  MVC   CNTCRD(2),JOBCARD  MAKE EOJ                      GP10113
         BAL   R14,PUNCHOUT       COPY TO SYSPUNCH              GP10113
         SPACE 1
NOCOPIES CLI   SVCLIB,X'FF'             SCVLIB ALTERED
         BNE   PGMEXERR                 BRANCH IF NOT           GP10113
*
*        ASK FOR OPERATOR VERIFICATION AND INVOKE IEHIOSUP
*
VERIOSUP XC    RECB,RECB                CLEAR REPLY ECB
         WTOR  'ACTION 0571 - VERIFY REQUEST TO PERFORM IEHIOSUP ON ''SX
               YS1.SVCLIB''',REPLY,1,RECB,ROUTCDE=1,DESC=2
         WAIT  ECB=RECB                 WAIT FOR REPLY
         OI    REPLY,C' '               ENSURE UPPER CASE REPLY
         CLI   REPLY,C'T'               REPLY = 'TERMINATE'
         BE    PGMEXERR                 BRANCH IF YES           GP10113
         CLI   REPLY,C'U'               OK TO GO AHEAD
         BE    IOSPLINK                 BRANCH IF YES
         WTO   'ACTION 0008 - REPLY NOT VERIFIED',ROUTCDE=1,DESC=2
         B     VERIOSUP                 GO ASK AGAIN
         SPACE 1
IOSPLINK TM    OUTDCB+DCBOFLGS-IHADCB,DCBOFOPN   IS DCB OPEN?   GP10113
         BNO   IOSPOPEN                 BRANCH IF NOT
         CLOSE (OUTDCB)
         SPACE 1
IOSPOPEN MVC   OUTDCB+DCBDDNAM-IHADCB(8),SVCDDNM  SET UP FOR BLDL
         MVC   IOSPDD(8),SVCDDNM        SET UP FOR IOSUP
         OPEN  (OUTDCB)                 OPEN DCB TO SVCLIB
         MVC   BLDLIST+4(8),=C'IGC0009I' TEST FOR SVC 99 ON SYSTEM
         BLDL  OUTDCB,BLDLIST           GO TO BLDL ROUTINE
         LTR   R15,R15                  TEST TO SEE IF SVC 99 FOUND
         BNZ   NOTSOSYS                 BRANCH IF NOT FOUND
         MVI   IOSUPARM+1,3             SHOW PARM=TSO PRESENT
         SPACE 1
NOTSOSYS LINK  EP=IEHIOSUP,PARAM=(IOSUPARM,IOSPDDNM),VL=1
         C     R15,PGMRC                                        GP10113
         BNH   *+8                                              GP10113
         ST    R15,PGMRC                SAVE HIGHEST CODE       GP10113
         MSGMID MIDRC,'IEHIOSUP',,(R15)                         GP10113
         SPACE 1
PGMEXERR MVI   MSGLIST,RCODE            INITIALIZE MESSAGE LIST GP10113
         MSGMID MIDEOJ
         LA    R2,SYSUT6                POINT TO DCB            GP10113
         BAL   R14,FREECLOS             FREE BUFFERS            GP10113
         LA    R2,SYSIN                 POINT TO DCB            GP10113
         BAL   R14,FREECLOS             FREE BUFFERS            GP10113
         LA    R2,SYSPUNCH              POINT TO DCB            GP10113
         BAL   R14,FREECLOS             FREE BUFFERS            GP10113
         LA    R2,SYSPRINT              POINT TO DCB            GP10113
         BAL   R14,FREECLOS             FREE BUFFERS            GP10113
         LM    R0,R1,@MALEN             ENTRY COUNT / ADDRESS (OR 0)  $
         LTR   R1,R1                    DID WE OBTAIN A WORK AREA     $
         BZ    SKIPFREE                 NO - CONTINUE           GP10113
         MH    R0,=AL2(MASIZE)          CALCULATE THE SIZE OF TABLE   $
         FREEMAIN R,LV=(0),A=(R1)       FREE WORK AREA                $
         XR    R1,R1                    CLEAR POINTER                 $
         ST    R1,@MAPTR                  TO TABLE AREA               $
SKIPFREE L     R14,SAVE13-SAVESPLN(,R13)                        GP10113
         L     R15,PGMRC     GET RETURN CODE                    GP10113
         ST    R15,SAVE15-SAVESPLN(,R14)                        GP10113
         LR    R1,R13                                           GP10113
         LR    R13,R14                                          GP10113
         L     R0,SAVESPLN-SAVESPLN(,R1)                        GP10113
         FREEMAIN R,A=(1),LV=(0)                                GP10113
         LM    R14,R12,SAVE14-SAVESPLN(R13)                     GP10113
         MVI   SAVE14-SAVESPLN(R13),X'FF'       FLAG AS LAST SAVE AREA
         BR    R14
         SPACE 2
*---------------------------------------------------------------------*
*      PROVISIONAL CARD OUTPUT ROUTINE                                *
*        IN LIVE LINKER MODE, WRITE TO SYSUT6                         *
*        IN JCL MODE USE SYSPUNCH                                     *
*      TEXT IS IN CNTCRD, WHICH IS CLEARED AFTER PUT                  *
*---------------------------------------------------------------------*
PUNCHCOP STM   R14,R2,PUNSAVER          COPY CARD TO SYSUT3     GP10113
         LA    R2,SYSUT3                SEQUENCE LATER          GP10113
         B     PUNCHLNK                 PUNCH AND CLEAR         GP10113
PUNCHOUT STM   R14,R2,PUNSAVER          SAVE A BIT              GP10113
         AP    CARDNUM,=P'10'           INCREMENT CARD NUMBER
         UNPK  CNTCRD+72(8),CARDNUM     NUMBER THE CARD
         OI    CNTCRD+79,X'F0'          ENSURE VALID CHARACTER
         LA    R2,SYSPUNCH              WRITE TO PUNCH          GP10113
         TM    LEFLAG,X'F0'             INVOKING LINKER?        GP10113
         BZ    PUNCHLNK                 NO; PUNCH               GP10113
         TM    OPTFLAG1,OFLOTS    LOTS OF OUTPUT?               GP14266
         BZ    PUNCH6ON             NO                          GP14266
         MVI   MSGLIST,IOERF           PRINT MESSAGE BUFFER     GP14266
         MVI   MSGLIST+UP1,CRESET0     CLEAR MSG NUMBER         GP14266
         MVC   MSGBUF,MSGBUF-1         CLEAR IT                 GP14266
         MVC   MSGBUF+5(L'CNTCRD),CNTCRD    COPY LINK CARD      GP14266
         L     R15,=A(ZZMESAGE)        MESSAGE WRITER           GP14266
         BALR  R14,R15                 PRINT THE CARD           GP14266
PUNCH6ON LA    R2,SYSUT6                WRITE TO LINKER INPUT   GP10113
PUNCHLNK LA    R1,CNTCRD-1              GET CARD ADDRESS        GP10113
         LA    R0,L'CNTCRD+1              LENGTH WITH CC        GP10113
         BAL   R14,REC#PUT              WRITE IT OUT            GP10113
         MVC   CNTCRD,CNTCRD-1          CLEAR CARD              GP10113
         LM    R14,R2,PUNSAVER          RELOAD                  GP10113
         BR    R14                      AND RETURN              GP10113
         SPACE 2
* ------------------------------------------------------------------- *
*    PRINT/PUNCH PROCESSING ROUTINE                                   *
*    R0 - DATA LENGTH;  R1 - DATA ADDRESS;  R2 - (OPEN) DCB ADDRESS   *
*      where R0/R1 are preset for an ASA control character            *
* ------------------------------------------------------------------- *
         PUSH  USING                                            GP10113
REC#PUT  STM   R0,R15,RPSAVER                                   GP10113
         LR    R8,R2         CALLER SET DCB                     GP10113
         USING IHADCB,R8                                        GP10113
         TM    DCBOFLGS,DCBOFOPN                                GP10113
         BNO   RECPUTEX             RETURN IF NO MESSAGE FILE   GP10113
         LR    R4,R1         PASSED TEXT ADDRESS                GP10113
         LTR   R5,R0           AND LENGTH                       GP10113
         BNP   RECPUTEX                                         GP10113
         TM    DCBRECFM,DCBRECCA+DCBRECCM                       GP10113
         BNZ   RECPUTCC                                         GP10113
         BCTR  R5,0          ADJUST LENGTH SANS CC              GP10113
         LA    R4,1(,R4)     SKIP OVER CC                       GP10113
         B     RECPUTNC                                         GP10113
RECPUTCC TM    DCBRECFM,DCBRECCA                                GP10113
         BO    RECPUTNC                                         GP10113
         MVI   0(R4),X'09'   ***** TEMP - SINGLE SPACE *****    GP10113
RECPUTNC TM    DCBRECFM,DCBRECU                                 GP10113
         BO    RECPUTRU                                         GP10113
         TM    DCBRECFM,DCBRECF                                 GP10113
         BO    RECPUTRF                                         GP10113
RECPUTRU CH    R5,DCBBLKSI                                      GP10113
         BNH   *+8                                              GP10113
         LH    R5,DCBBLKSI                                      GP10113
         TM    DCBMACF2,DCBMRLCP    LOCATE MODE?                GP10113
         BZ    RECPUTLN                                         GP10113
*DEFER*  C     R5,MAXLRECL-DISPRINT(,R8)    FITS?               GP10113
*DEFER*  BNH   *+8                  YES                         GP10113
*DEFER*  L     R5,MAXLRECL-DISPRINT(,R8)    TRUNCATE            GP10113
         LA    R3,4(,R5)            DATA + RDW LENGTH           GP10113
         STH   R3,DCBLRECL                                      GP10113
         PUT   IHADCB               GET A RECORD                GP10113
         SLL   R3,16                                            GP10113
         STCM  R3,15,0(R1)          BUILD RDW                   GP10113
         LA    R0,4(,R1)                                        GP10113
         LR    R1,R5                                            GP10113
         MVCL  R0,R4                MOVE DATA TO BUFFER         GP10113
         B     RECPUTEX                                         GP10113
RECPUTLN STH   R5,DCBLRECL                                      GP10113
RECPUTRF LR    R0,R4                RECORD ADDRESS              GP10113
         PUT   IHADCB,(0)                                       GP10113
RECPUTEX LM    R0,R15,RPSAVER                                   GP10113
         BR    R14                                              GP10113
RPSAVER  DC    16A(0)                                           GP10113
         POP   USING                                            GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   FREE POOL THE HARD WAY                                            *
*---------------------------------------------------------------------*
         PUSH  USING                                            GP10113
         USING IHADCB,R2                                        GP10113
FREECLOS ST    R2,DB                                            GP10113
         MVI   DB,X'80'                                         GP10113
         CLOSE MF=(E,DB)     CLOSE IT                           GP10113
FREEPOOL TM    DCBBUFCA+L'DCBBUFCA-1,1  FREEPOOLED ?            GP10113
         BNZ   FREEPOOP      YES; DON'T DO IT AGAIN             GP10113
         ICM   R1,7,DCBBUFCA   DIRTY POOL ?                     GP10113
         BZ    FREEPOOP      YES; SKIP FREEPOOL AND 90A ABEND   GP10113
         N     R1,=X'00FFFFFF' CLEAN IT                         GP10113
         SR    R15,R15                 CLEAR REGISTER           GP10113
         IC    R15,5(,R1)    GET BUFNO                          GP10113
         MH    R15,6(,R1)      TIMES BUFLEN                     GP10113
         LA    R0,8(,R15)    PREFIX                             GP10113
         TM    4(R1),X'40'   SIXTEEN-BYTE PREFIX ?              GP10113
         BNO   *+8           NO                                 GP10113
         LA    R0,16(,R15)   SET LONG PREFIX                    GP10113
         SVC   10            FREE THE BUFFERS                   GP10113
FREEPOOP LA    R0,1                                             GP10113
         STCM  R0,7,DCBBUFCA  DE-ACTIVATE POOL                  GP10113
         BR    R14           RETURN TO CALLER                   GP10113
         POP   USING                                            GP10113
         SPACE 2
         PUSH  USING                                            GP10113
*---------------------------------------------------------------------*
*  ROUTINE TO PARSE AND SET OPTION FLAGS, WITH COMMON ADDRESSABILITY  *
*   TEXT TO BE EXAMINED IS IN CNTCRD                                  *
*   R1 POINTS TO FIRST UNPROCESSED BYTE                               *
*---------------------------------------------------------------------*
SETOPTS  STM   R0,R15,SUBSAVE2    SAVE EVERYTHING               GP10113
SETOPTI  L     R14,=A(TRTMSGIN)                                 GP10113
         L     R15,=A(TRTDELIM)                                 GP10113
         MVC   0(256,R14),TRTFIELD-TRTDELIM(R15)                GP10113
         MVI   C','(R14),0   SET BLANK AND COMMA STOPPER        GP10113
SETOPTL  LR    R3,R1         SET CURSOR                         GP10113
         LA    R1,CNTCRD+L'CNTCRD      SET SCAN END             GP10113
         LR    R4,R1                                            GP10113
         SR    R4,R3         RESIDUAL LENGTH                    GP10113
         BNP   SETOPTX       EXIT                               GP10113
         BCTR  R4,0          DECREMENT FOR EX                   GP10113
         EX    R4,EXOPTNDL   SKIP DELIMITERS                    GP10113
         BZ    SETOPTX       DELIMITERS ONLY - EXIT             GP10113
         LR    R3,R1         SET CURSOR                         GP10113
         LA    R1,CNTCRD+L'CNTCRD      SET SCAN END             GP10113
         LR    R4,R1                                            GP10113
         SR    R4,R3         RESIDUAL LENGTH                    GP10113
         BNP   SETOPTX       EXIT                               GP10113
         BCTR  R4,0          DECREMENT FOR EX                   GP10113
         EX    R4,EXOPTDLM   SKIP DELIMITERS                    GP10113
         LR    R4,R1         COPY STOPPER                       GP10113
         SR    R4,R3         LESS START                         GP10113
         BNP   SETOPTL       NULL FIELD - IGNORE                GP10113
         CH    R4,=H'8'      WITHIN DESIGN RANGE ?              GP10113
         BNH   *+8           YES                                GP10113
         LA    R4,8          TRUNCATE                           GP10113
         MVC   SARG(8),BLANKS8  CLEAR                           GP10113
         BCTR  R4,0                                             GP10113
         EX    R4,EXOPTMVC   PLACE INTO 8 BYTE FIELD            GP10113
         LM    R5,R7,=A(OPTTABL,OPTTAB2-OPTTABL,OPTTABN)        GP10113
SETOPTK  CLC   SARG(8),3(R5)    MATCHING REQUEST ?              GP10113
         BE    SETOPTM       NO                                 GP10113
         BXLE  R5,R6,SETOPTK   TRY AGAIN                        GP10113
         LA    R3,1(,R1)     SAVE RESTART                       GP10113
         MSGMID MIDBDPRM,SARG                                   GP10113
         LR    R1,R3         RESTORE
         B     SETOPTI       TRY AGAIN                          GP10113
         SPACE 1                                                GP10113
SETOPTM  SR    R9,R9                                            GP10113
         IC    R9,0(,R5)     GET FLAG OFFSET                    GP10113
         LA    R9,OPTFLAG1(R9)    POINT TO CORRECT FLAG         GP10113
         NC    0(1,R9),2(R5)      RESET UNWANTED BITS           GP10113
         OC    0(1,R9),1(R5)      SET WANTED BITS               GP10113
         LA    R3,1(,R1)     SAVE RESTART                       GP10113
         TM    OPTFLAG1,OFLIST    LIST OPTION ?                 GP10113
*TEST*   BZ    SETOPTL+2     GET NEXT ONE                       GP10113
         MSGMID MIDOKOPT,SARG     SHOW OPTION                   GP10113
         LR    R1,R3         RESTORE
         B     SETOPTI
         SPACE 1                                                GP10113
SETOPTX  LM    R0,R15,SUBSAVE2    RELOAD                        GP10113
         BR    R14                AND RETURN                    GP10113
EXOPTNDL TRT   0(0,R3),0(R14)     SKIP DELIMITERS               GP10113
EXOPTDLM TRT   0(0,R3),0(R15)     STOP ON DELIMITER             GP10113
EXOPTMVC MVC   SARG(0),0(R3)      ISOLATE VERB                  GP10113
EXMVCCRD MVC   0(0,R2),0(R1)           MOVE CARD IMAGE          GP10113
         POP   USING                                            GP10113
         SPACE 2
***********************************************************************
**  DCB OPEN EXIT FOR SYSIN INPUT                                    **
**  USED TO SET DCBOPTZ AFTER OPEN'S JFCB TO DCB MERGE. ALSO         **
**  USED TO SET/RESET DCBOPTQ FLAG FOR CONCATENATED FILES.           **
***********************************************************************
         PUSH  USING                                            GP10113
         DROP  ,                                                GP10113
         USING EXDCBSYN,R15  DECLARE PASSED BASE                GP10113
         USING IHADCB,R2     DECLARE DCB                        GP10113
EXDCBSYN LR    R2,R1         NEED BETTER ASSEMBLER ?            GP10113
         OI    DCBOFLGS,DCBOFPPC  SUPPORT UNLIKE CONCATENATION  GP10113
         NI    DCBOPTCD,255-DCBOPTZ  RESET OPTCD=Z              GP10113
         NI    DCBBFALN,255-DCBBFTA  RESET SPANNED VBS          GP10113
         TM    RDRFLAGS,FGDGET    FIRST TIME IN HERE ?          GP10113
         BZ    REXONCE       YES                                GP10113
         OI    RDRFLAGS,FGRGET    NEED TO REPEAT GET            GP10113
REXONCE  NI    RDRFLAGS,255-FGDGET   RESET FIRST ENTRY FLAG     GP10113
         SR    R9,R9         ZERO FOR BLOCK SIZE CALCULATIONS   GP10113
         SR    R8,R8         ZERO FOR BLOCK SIZE CALCULATIONS   GP10113
         SR    R0,R0         ZERO FOR RECORD LENGTH             GP10113
         SR    R4,R4         ZERO RDW ADJUSTMENT                GP10113
         TM    DCBRECFM,DCBRECU   OTHER THAN V ?                GP10113
         BNM   REXNOTV       YES                                GP10113
         TM    DCBRECFM,DCBRECF   IS IT V/D ?                   GP10113
         BZ    REXNOTV       NOT F                              GP10113
         LA    R4,4          SET FOR RDW ADJUSTMENT             GP10113
REXNOTV  SR    R5,R5                                            GP10113
         ICM   R5,3,DCBTIOT  GET OFFSET IN TIOT                 GP10113
         L     R1,CVTPTR                CVT                     GP10114
         L     R1,CVTTCBP-CVTMAP(,R1)   TCB TABLE               GP10114
         L     R1,4(,R1)                TCBOLD (CURRENT)        GP10114
         AL    R5,TCBTIO-TCB(,R1)  GET TIOT ENTRY               GP10113
         USING TIOENTRY,R5   DECLARE IT                         GP10113
         TM    TIOELINK,TIOESSDS  SUBSYSTEM DATA SET ?          GP10113
         BNZ   REXUNIT       TREAT AS UNIT RECORD               GP10113
         ICM   R3,7,TIOEFSRT GET UCB ADDRESS                    GP10113
         BZ    REXUNIT       DD DUMMY OR PSEUDO DEVICE          GP10113
         USING UCBOB,R3      DECLARE THE UCB                    GP10113
         CLI   UCBTBYT3,UCB3UREC  UNIT RECORD INPUT ?           GP10113
         BNE   REXNOUN       NO                                 GP10113
REXUNIT  TM    DCBRECFM,DCBRECLA  ANY RECORD FORM ?             GP10113
         BNZ   *+8           NO                                 GP10113
         OI    DCBRECFM,DCBRECF   YES; SET FIXED                GP10113
         ICM   R0,3,DCBLRECL  ANY RECORD LENGTH ?               GP10113
         BNZ   REXURECL      YES; KEEP IT                       GP10113
         LA    R0,80         UNIT RECORD SIZE FOR READERS (?)   GP10113
         AR    R0,R4         ADJUST FOR RDW                     GP10113
         STCM  R0,3,DCBLRECL  STASH IT BACK                     GP10113
REXURECL ICM   R9,3,DCBBLKSI   GET BLOCK SIZE                   GP10113
         BNZ   REXCOMM       JOIN COMMON CODE                   GP10113
         AR    R0,R4         ADD BDW ADJUST                     GP10113
         STCM  R0,3,DCBBLKSI    SET BLOCK SIZE                  GP10113
         SPACE 1                                                GP10113
REXNOUN  TM    DCBRECFM,DCBRECCC  ANY CARRIAGE CONTROL?         GP10113
         BZ    REXNCARR      NO                                 GP10113
         LA    R4,1(,R4)          YES; UP OVERHEAD ADJUST       GP10113
REXNCARR TM    DCBRECFM,DCBRECLA  ANY RECORD FORM ?             GP10113
         BNZ   REXNBLOK      NO                                 GP10113
         OI    DCBRECFM,DCBRECF   YES; SET FIXED                GP10113
REXNBLOK OI    DCBRECFM,DCBRECBR  FORCE BLOCKING                GP10113
         ICM   R0,3,DCBLRECL  ANY RECORD LENGTH ?               GP10113
         BNZ   REXNRECL      YES; KEEP IT                       GP10113
         LA    R0,80         DEFAULT TO CARD IMAGE              GP10113
         AR    R0,R4         ADJUST FOR RDW                     GP10113
         STCM  R0,3,DCBLRECL  STASH IT BACK                     GP10113
REXNRECL ICM   R9,3,DCBBLKSI   GET BLOCK SIZE                   GP10113
         BNZ   REXQTAPE      TEST FOR TAPE                      GP10113
         LH    R9,=H'32720'  SET FOR MAX                        GP10113
         LTR   R4,R4         RDW/BDW ?                          GP10113
         BNZ   REXNBLK       YES; USE MAXIMUM                   GP10113
         DR    R8,R0         GET RECORDS PER BLOCK              GP10113
         MR    R8,R0         GET TRUNCATED BLOCK SIZE           GP10113
REXNBLK  STCM  R9,3,DCBBLKSI    SET BLOCK SIZE                  GP10113
         SPACE 1                                                GP10113
REXQTAPE CLI   UCBTBYT3,UCB3TAPE  TAPE DRIVE ?                  GP10113
         BNE   REXCOMM                                          GP10113
         OI    DCBOPTCD,DCBOPTZ  SET OPTCD=Z FOR TAPE           GP10113
         SPACE 1                                                GP10113
REXCOMM  TM    DCBRECFM,DCBRECV+DCBRECBR+DCBRECSB  POSS. VBS ?  GP10113
         BNO   REXEXIT                                          GP10113
         TM    DCBRECFM,DCBRECF+DCBRECD   NON-VBS?              GP10113
         BNZ   REXEXIT                                          GP10113
         OI    DCBBFALN,DCBBFTA   ASSEMBLE SPANNED RECORDS      GP10113
REXEXIT  BR    R14            RETURN TO OPEN                    GP10113
RDRFLAGS DC    X'00'                                            GP10113
FGKEEP   EQU   X'80'           CARD IMAGE BUFFERED - SKIP GET   GP10113
FGDGET   EQU   X'04'           UNLIKE CONCATENATION - FIRST TIME
FGRGET   EQU   X'02'           UNLIKE CONCATENATION - DO IT AGAIN
         POP   USING                                            GP10113
         SPACE 2                                                GP10113
*---------------------------------------------------------------------*
*   DCB OPEN EXIT FOR OUTPUT PRINTING AND PUNCHING                    *
*      DEFAULT TO FOLLOWS DCB H'lrecl',X'recfm'                       *
*      IF OUTPUT IS V, CHANGE TO LOCATE MODE                          *
*---------------------------------------------------------------------*
         PUSH  USING                                            GP10113
         DROP  ,                                                GP10113
         USING EXDCBPRT,R15                                     GP10113
         USING IHADCB,R1                                        GP10113
EXDCBPRT N     R1,=X'00FFFFFF'    KILL OPEN FLAGS               GP10113
         SR    R2,R2              CLEAR FOR DIVIDE              GP10113
         LH    R4,DCBLRECL        LOAD RECORD LENGTH            GP10113
         LH    R3,DCBBLKSI        LOAD BLOCK SIZE               GP10113
         TM    DCBRECFM,DCBRECLA  ANY RECORD FORMAT ?           GP10113
         BNZ   EXDCBPRR           YES; KEEP                     GP10113
         MVC   DCBRECFM,SYSPROPT+2-SYSPRINT(R1)  DEFAULT        GP10113
EXDCBPRR MVI   DCBMACF2,DCBMRPUT+DCBMRMVP   SET MOVE MODE       GP10113
         TM    DCBRECFM,DCBRECF   IS IT F OR U VS. V OR D?      GP10113
         BNZ   EXDCBPRM           YES; USE MOVE MODE            GP10113
         MVI   DCBMACF2,DCBMRPUT+DCBMRLCP   SET LOCATE          GP10113
EXDCBPRM LTR   R4,R4              ANY RECORD LENGTH ?           GP10113
         BNZ   EXDCBPRL           YES                           GP10113
         LH    R4,SYSPROPT-SYSPRINT(,R1)  DEFAULT DATA LENGTH   GP10113
         TM    DCBRECFM,DCBRECF   U OR F?                       GP10113
         BNZ   *+8                YES                           GP10113
         LA    R4,4(,R4)          ALLOW FOR RDW                 GP10113
         TM    DCBRECFM,DCBRECCC  CARRIAGE CONTROL ?            GP10113
         BZ    EXDCBPRL           NO                            GP10113
         LA    R4,1(,R4)          ALLOW FOR IT                  GP10113
EXDCBPRL LTR   R3,R3              ANY BLOCKSIZE?                GP10113
         BNZ   EXDCBPRB           YES; CHECK LRECL IF F         GP10113
         SR    R5,R5                                            GP10113
         ICM   R5,3,DCBTIOT  GET OFFSET IN TIOT                 GP10113
         L     R6,CVTPTR     GET CVT                            GP10113
         L     R6,0(,R6)     GET CVTTCBP                        GP10113
         L     R6,4(,R6)     TCBOLD                             GP10113
         AL    R5,TCBTIO-TCB(,R6)  GET TIOT ENTRY               GP10113
         USING TIOENTRY,R5   DECLARE IT                         GP10113
         TM    TIOELINK,TIOESSDS  SUBSYSTEM DATA SET ?          GP10113
         BNZ   PRTBLKSP      YES                                GP10113
         ICM   R3,7,TIOEFSRT GET UCB ADDRESS                    GP10113
         BZ    PRTBLKUR      DD DUMMY OR PSEUDO DEVICE          GP10113
         USING UCBOB,R3      DECLARE THE UCB                    GP10113
         CLI   UCBTBYT3,UCB3UREC  UNIT RECORD INPUT ?           GP10113
         BE    PRTBLKUR      YES                                GP10113
         CLI   UCBTBYT3,UCB3DACC                DASD OUTPUT?    GP10113
         BE    PRTBLKDA      YES; USE TABLE                     GP10113
         L     R3,=A(32760)  ELSE USE MAX ALLOWED               GP10113
         B     EXDCBPRB                                         GP10113
PRTBLKUR LA    R3,4(,R4)     USE RECORD LENGTH                  GP10113
         B     EXDCBPRB                                         GP10113
PRTBLKSP L     R3,=A(4096)   USE ONE PAGE FOR SPOOLING          GP10113
         B     EXDCBPRB                                         GP10113
PRTBLKDA SR    R6,R6         CLEAR FOR IC                       GP10113
         TM    UCBTBYT4,X'70'                 FUNNIES?          GP10113
         BNZ   PRTBLK10      YES; USE ARBITRARY VALUE           GP10113
         IC    R6,UCBTBYT4                                      GP10113
         N     R6,=X'0000000F'    DEVICE MASK                   GP10113
         BZ    PRTBLK10      USE ARBITRARY VALUE                GP10113
         SLL   R6,1          CONVERT TO OFFSET                  GP10113
         LA    R6,DASDSIZE-2(R6)  POINT TO MAXBLOCK             GP10113
         LH    R4,0(,R6)          GET BLOCK SIZE                GP10113
         B     EXDCBPRB                                         GP10113
PRTBLK10 LA    R3,1374            ARBITRARY                     GP10113
         DROP  R3,R5                                            GP10113
EXDCBPRB TM    DCBRECFM,DCBRECF   F OR U ?                      GP10113
         BZ    EXDCBPRV           NO; V OR D                    GP10113
         TM    DCBRECFM,DCBRECU   U?                            GP10113
         BO    EXDCBPRX           YES; KEEP IT                  GP10113
         DR    R2,R4              GET BLOCKING FACTOR           GP10113
         LTR   R3,R3              AT LEAST ONE ?                GP10113
         BP    *+8                YES                           GP10113
         LA    R3,1               SET TO ONE                    GP10113
         MR    R2,R4              GET NEW BLOCK SIZE            GP10113
         B     EXDCBPRX           STASH BACK                    GP10113
EXDCBPRV LA    R2,4(,R4)     LRECL+4                            GP10113
         CR    R2,R3         COMPARE TO BLOCK                   GP10113
         BNH   EXDCBPRX      OK                                 GP10113
         OI    DCBRECFM,DCBRECSB  NEED SPANNED OR LARGER BLOCK  GP10113
EXDCBPRX STH   R3,DCBBLKSI   SET NEW BLOCK SIZE                 GP10113
         STH   R4,DCBLRECL      AND RECORD LENGTH               GP10113
         BR    R14           AND RETURN TO OPEN                 GP10113
DASDSIZE DC    H'3625,20483,4892,27998,6144,14136,14660,7294' 2311-2314
         DC    H'13030,8368,19069,17600,13030,23476,27998' 3330-3390
         LTORG ,                                                GP10113
         POP   USING                                            GP10113
         TITLE 'Z Z R E L I N K  ***  UTILITY ALLOCATION'       GP14266
***********************************************************************
**                                                                   **
**   THIS SUBROUTINE CHECKS WHETHER THE UTILITY DATA SETS            **
**   SYSUT4-SYSUT6 HAVE BEEN ALLOCATED VIA JCL OR CALLER.            **
**                                                                   **
**   IF NOT, EACH IS ALLOCATED TO SYSDA,SPACE=(CYL,5)                **
**                                                                   **
***********************************************************************
         PUSH  USING                                            GP14266
ZZUTDD99 CSECT ,                                                GP14266
         USING ZZRELCOM,R10       PASSED BY CALLER              GP14266
         STM   R0,R15,SUBSAVE1    SAVE REGISTERS                GP14266
         LR    R12,R15            LOCAL BASE                    GP14266
         USING ZZUTDD99,R12                                     GP14266
         LR    R8,R1         SAVE DDNAME POINTER                GP14266
         DEVTYPE 0(R1),DB    DD FOUND ?                         GP14266
         BXLE  R15,R15,ZZUTDDEX   YES; NO ACTION REQUIRED       GP14266
         MVC   S99DDNM,0(R1)                                    GP14263
         DYNALLOC S99RBP          ALLOC; PASS RETURN CODE       GP14263
ZZUTDDEX LM    R0,R14,SUBSAVE1                                  GP14266
         BR    R14                   AND RETURN                 GP14266
         POP   USING                                            GP14266
         MVSZB4D0 TUS=(TUDDNM,TUUNIT,TUCYL,TUPRI+X'80000000')   GP14263
TUDDNM   DC    AL2(DALDDNAM,1,L'S99DDNM)                        GP14263
S99DDNM  DC    CL8' '                                           GP14263
TUUNIT   DC    AL2(DALUNIT,1,5),CL5'SYSDA'                      GP14263
TUCYL    DC    AL2(DALCYL,0)                                    GP14263
TUPRI    DC    AL2(DALPRIME,1,3),AL3(5)                         GP14263
         IEFZB4D2 ,          MAP REQUEST                        GP14263
         SPACE 2
RELINKER CSECT ,
**********       C O M M U N I C A T I O N    A R E A        **********
**********               Z Z R E L I N K                     **********
*
         USING ZZRELCOM,R10
         SPACE 2
*---------------------------------------------------------------------*
*   DD NAME LIST , ADDRESSES, AND FLAGS                               *
*---------------------------------------------------------------------*
DDLIST   DS    0A            LIST OF DD NAMES, DCB ADDRESSES, FLAGS
DDPRT    DDDEF SYSPRINT,DDFPRT    PRINT FILE                    GP10113
DDPUN    DDDEF SYSPUNCH,DDFPUN    PUNCH FILE                    GP10113
DDSYN    DDDEF SYSIN,DDFSYN       INPUT FILE                    GP10113
DDLOUT   DDDEF SYSLOUT,DDFLOUT    LINK-EDIT FILE                GP10113
DDUT3    DDDEF SYSUT3,DDFUT3      WORK FILE                     GP10113
DDUT4    DDDEF SYSUT4,DDFUT4      WORK FILE                     GP10113
DDUT5    DDDEF SYSUT5,DDFUT5      WORK FILE                     GP10113
DDUT6    DDDEF SYSUT6,DDFUT6      WORK FILE                     GP10113
OFDDNAME EQU   0,8,C'C'      DD NAME                            GP10113
OFDDFLAG EQU   8,1,C'B'      FLAG                               GP10113
OFDDDCB  EQU   8,4,C'A'      DCB ADDRESS                        GP10113
DDLISTN  DS    0A            LIST OF DD NAMES, DCB ADDRESSES, FLAGS
         SPACE 1
DDUT1    DDDEF SYSUT1,0      <-- CURRENT INPUT DD (SYSIN DUMMY) GP14266
DDUT2    DDDEF SYSUT2,0      <-- CURRENT OUTPUT DD              GP14266
         SPACE 1
SYSUT6   DCB   DDNAME=SYSUT6,MACRF=(PM),LRECL=80,BLKSIZE=3120,         X
               DSORG=PS,RECFM=FB
SYSUT3   DCB   DDNAME=SYSUT3,MACRF=(GM,PM),DSORG=PS,EODAD=KUT3EOF,     *
               RECFM=FB,LRECL=80,BLKSIZE=3120
SYSPUNCH DCB   DDNAME=SYSPUNCH,DSORG=PS,MACRF=(PM),EXLST=OUTXLIST
         DC    H'80',X'90'   DEFAULT LRECL=80, RECFM=FB
DIRDCB   DCB   DDNAME=INDD,DSORG=PS,MACRF=(RP),SYNAD=DIRIOER,          *
               RECFM=F,BLKSIZE=256,EXLST=XLIST1                 GP10113
ESDCB    DCB   DDNAME=INDD,DSORG=PO,MACRF=(R),RECFM=U,SYNAD=ESDIOER
PDSDCB   DCB   DDNAME=INDD,DSORG=PO,MACRF=(R),RECFM=U,EXLST=XLIST1
SYSLIB   DCB   DDNAME=SYSLIB,DSORG=PO,MACRF=(R),RECFM=U         GP10114
OUTDCB   DCB   DDNAME=OUTDD,MACRF=(RP),BLKSIZE=256,DSORG=PS,RECFM=F,   *
               SYNAD=OUTIOER,EXLST=XLIST1                       GP10113
SYSUT1   EQU   DIRDCB                                           GP14266
SYSUT2   EQU   OUTDCB                                           GP14266
SYSLOUT  DS    0A            NO DCB FOR THIS                    GP10113
SYSUT5   DS    0A            NO DCB FOR THIS                    GP10113
SYSUT4   DS    0A            NO DCB FOR THIS                    GP10113
*    ASSORTED CONSTANTS
*
TTR0010  DC    X'00000100'              REPOSITIONING TTR       GP10113
TRTAB    DC    CL16'0123456789ABCDEF'                                 $
HEXTRTAB EQU   TRTAB-C'0'               HEX TRANSLATE TABLE     GP10113
FFFF     DC    16X'FF'                  LOTS OF FOXES           GP10113
RECB     DC    F'0'
REPLY    DC    C' '
FLAGBYTS DC    XL11'0000404040404040404000'  INDD/MBR ENTRY FOR DDMBTB.
BLANKS8  DC    CL20' '       BLANKS - LONG ENOUGH FOR PGMNM     GP10113
JOBCARD  DC    CL71'//RELNKXXX JOB (0904,0012),GERHARD,MSGCLASS=C'
LEEXEC   DC    C'//STEPXXX  EXEC PGM=IEWL,REGION=1024K,'        GP10113
LNKDCBS  DC    C'DCBS,LET,LIST,XREF,NCAL,SIZE=(600K,64K)'       GP13239
LNKDFLT  DC    C'LET,LIST,XREF,NCAL,SIZE=(600K,64K)'            GP10113
BLDLIST  DC    H'1,74',XL74'0'                                  GP10113
NEWNAME  EQU   BLDLIST+4,8,C'C'   RENAME NAME                   GP10113
MYJFCB   DS    0A            ALIGN A BIT                        GP10113
         IEFJFCBN ,          MAP JFCB                           GP10113
TRTBLANK DC    256X'00'                                         GP10113
         ORG   TRTBLANK+C' '      SCAN STOPPER                  GP10113
         DC    X'04'              SCAN STOPPER                  GP10113
         ORG   ,
         SPACE 1
*QENQOUT DC    CL8'MM      '                                          $
*RENQOUT DC    CL44' '                                                $
         SPACE 1
*        INITIAL TABLE, FOLLOWING CCSCAN PROCESSING OF ''SELECT'' -
***********************************************************************
*SEFLAG1 *SEFLAG2 * NAME OF MEMBER TO BE SELECTED, OR, IF SPECIFIED,  *
*(DESCR. *(UNUSED)* NEWNAME.  IF NEWNAME WAS SPECIFIED, THE TABLE WILL*
* ABOVE) *        * CONTAIN 1 ENTRY FOR OLDNAME AND ANOTHER FOR NEW.  *
***********************************************************************
* 1 BYTE * 1 BYTE *----------------------8 BYTES----------------------*
* INITIAL TABLE ENTRIES ARE FOR ONE OR MORE INDD NAMES.
* ADDITIONL ENTRIES ARE FOR MEMBER NAMES SUPPLIED ON SELECT OR
* EXCLUDE STATEMENTS. SELECTED MEMBERS MAY OCCUPY TWO SUCCESSIVE
* ENTRIES WHEN A RENAME OPTION IS SPECIFIED.
*   FLAGS AND NAME FIELD ARE MAPPED IN MDSECT.
         SPACE 1
SYSIN    DCB   DDNAME=SYSIN,MACRF=(GL),DSORG=PS,EODAD=ZZRSEF,          *
               EXLST=EXLSTSYN                                   GP10113
EXLSTSYN DC    0A(0),X'85',AL3(EXDCBSYN)    USE DCB OPEN EXIT   GP10113
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),EXLST=OUTXLIST
SYSPROPT DC    H'121',X'94'  DEFAULT LRECL=121,RECFM=FBA
OUTXLIST DC    0A(0),X'85',AL3(EXDCBPRT)  PRINT/PUNCH EXIT      GP10113
XLIST1   DC    0A(0),X'87',AL3(MYJFCB)                          GP10113
         SPACE 1
*---------------------------------------------------------------------*
*   DD OVERRIDE LIST FOR IEHIOSUP (MFT/MVT SVCLIB ONLY)               *
*---------------------------------------------------------------------*
IOSUPARM DC    H'0'
         DC    C'TSO'
IOSPDDNM DC    H'64'
         DC    56XL1'00'
IOSPDD   DC    CL8' '
         SPACE 1
*---------------------------------------------------------------------*
*   DD OVERRIDE LIST FOR IEBCOPY INVOCATION                           *
*---------------------------------------------------------------------*
DDNMLST  DC    Y(DDNMLSTN-DDNMLST1)     LIST LENGTH             GP14266
DDNMLST1 DC    C'SYSUT6  '   SYSLIN
         DC    XL8'00'         (MEMBER)
DDENTR3  DS    CL8           SYSLMOD
         DC    C'SYSLIB  '   SYSLIB
         DC    XL8'00'         N/A
         DC    C'SYSLOUT '   SYSPRINT
         DC    XL8'00'         N/A                              GP14266
         DC    C'SYSUT5  '   SYSUT1                             GP14266
DDNMLSTN DS    0H                                               GP14266
         SPACE 1
*---------------------------------------------------------------------*
*   PARM AND DD LIST FOR LINKAGE-EDITOR INVOCATION                    *
*---------------------------------------------------------------------*
OPLISTL  DC    H'0'          LENGTH OF PARM                     GP10113
OPLISTV  DC    CL100' '      PARM TEXT                          GP10113
         DS    0A            ALIGN DD NAME LIST                 GP10113
COPYOPTN DC    H'0'
COPYDDNM DC    H'40'
         DC    4XL8'00'                UNUSED                   GP10113
         DC    CL8'SYSUT3'             ALTERNATE NAME FOR SYSIN
         SPACE 1
BUFFSECT DSECT ,             OUTPUT LINE                        GP10113
BUFFCC   DS    C             CARRIAGE CONTROL                   GP10113
BUFFID   DS    C'ZZR'        COMMON                             GP10113
BUFFID#  DS    C'nnn'        MESSAGE NUMBER                     GP10113
BUFFID$  DS    C'I',CL2      LEVEL I, W, OR E                   GP10113
BUFFTEXT DS    CL110         MESSAGE TEXT                       GP10113
         SPACE 2
CESDSECT DSECT ,             CESD DESCRIPTION IN SEGMENT TABLE  GP10113
CESDNAM  DS    CL8           ENTRY NAME                         GP10113
CESDTYP  DS    X                                                GP10113
CESDFLG  DS    0X            FF IF PROCESSED                    GP10113
CESDEPA  DS    XL3                                              GP10113
CESDSG#  DS    X                                                GP10113
CESDLEN  DS    XL3                                              GP10113
         DS    0A                                               GP10113
CESDSIZE EQU   *-CESDSECT                                       GP10113
         SPACE 2
MASECT   DSECT ,             DESCRIPTION OF ALIAS TABLE         GP10113
MATTR    DS    XL3           TTR OF ENTRY                       GP10113
MANAME   DS    CL8           ENTRY NAME                         GP10113
MAFLAGS  DS    X             PROCESSING FLAG                    GP10113
MAFUSED  EQU   X'80'           ENTRY USED WITH MAIN MEMBER      GP10113
MAFSKIP  EQU   X'40'           ENTRY EXCLUDED                   GP10113
MAFREN   EQU   X'02'           MD ENTRY HAS RENAME OPTION       GP10113
MAMDENT  DS    XL4           ADDRESS OF MEMBER SELECT ENTRY     GP10113
MASIZE   EQU   *-MASECT      MUST BE MULT. OF 16 FOR BINSRCH    GP10113
         SPACE 2
* DDMBTABL = SELECT/EXCLUDE TABLE
*    DDMBTABL CONSISTS OF 10-BYTE ENTRIES.  ENTRIES ARE MADE TO
*    THIS TABLE WHEN -
*        1) A SELECTIVE LINK HAS BEEN SPECIFIED.  EACH ENTRY IS
*           FOR THE NAME OF A MEMBER TO BE SELECTED.  IF A MEMBER IS
*           TO BE RENAMED, TWO CONSECUTIVE ENTRIES ARE MADE.
*        2) AN EXCLUSIVE LINK HAS BEEN SPECIFIED.  EACH ENTRY IS
*           FOR THE NAME OF A MEMBER TO BE EXCLUDED.
MDSECT   DSECT ,             DESCRIPTION OF INDD/MEMBER TABLES  GP10113
MDFLAGS  DS    X             FLAGS                              GP10113
MDFNEWE  EQU   X'80'           NEW NAME ENTRY                   GP10113
MDFNEWN  EQU   X'40'           NEXT ENTRY HAS NEW NAME          GP10113
MDFREP   EQU   X'20'           REPLACE SPECIFIED                GP10113
MDFNOL   EQU   X'10'           USE COPY RATHER THAN LINK        GP10113
MDFDONE  EQU   X'08'           ENTRY HAS BEEN PROCESSED         GP10113
.*                                                              GP10113
         DS    X'00'         UNUSED ?                           GP10113
.*                                                              GP10113
MDNAME   DS    CL8           ENTRY NAME                         GP10113
MDSIZE   EQU   *-MDSECT                                         GP10113
         SPACE 1
MSGCSECT DSECT ,             MESSAGE DESCRIPTION                GP10113
MSGLVL   DS    AL1           SEVERITY LEVEL (0,,8,12,16)        GP10113
MSGLEN   DS    AL1           LENGTH OF TEXT                     GP10113
MSGTEXT  DS    0CL110        TEXT LENGTH                        GP10113
         SPACE 2
SAVE     DSECT ,                                                GP10113
SAVESPLN DS    F                                                GP10113
SAVE13   DS    F                                                GP10113
SAVEFWD  DS    A                                                GP10113
SAVE14   DS    A                                                GP10113
SAVE15   DS    A                                                GP10113
SAVE0    DS    A                                                GP10113
SAVE1    DS    A                                                GP10113
SAVE2    DS    A                                                GP10113
SAVE3    DS    A                                                GP10113
SAVE4    DS    A                                                GP10113
SAVE5    DS    A                                                GP10113
SAVE6    DS    A                                                GP10113
SAVE7    DS    A                                                GP10113
SAVE8    DS    A                                                GP10113
SAVE9    DS    A                                                GP10113
SAVE10   DS    A                                                GP10113
SAVE11   DS    A                                                GP10113
SAVE12   DS    A                                                GP10113
SAVEFWK  EQU   *                                                GP10113
         SPACE 2
SUBSAVE1 DS    18F                                              GP10113
SUBSAVE2 DS    18F                                              GP10113
MSGSAVER DS    18F                                              GP10113
PUNSAVER DS    5A            PUNCHOUT R14-R2                    GP10113
GETPRM14 DS    A             RETURN SAVER                       GP10113
DB       DS    D             CONVERSION WORK                    GP10113
DB2      DS    D             CONVERSION WORK                    GP10113
MEMNAME  DS    CL8                      MEMBER NAME
SVCDDNM  DS    CL8                      SVCLIB DD NAME
CSCTNAME DS    CL8                      MAIN ENTRY CSECT NAME
PAGENAME DS    CL8           LAST PAGE ALIGNED CSECT            GP10113
OCLIST   DS    A(X'80000000')     OPEN/CLOSE LIST               GP13239
SETSSIBI DC    XL4'0'                   SETSSI BINARY                 $
R1SVE    DC    A(0)
SAVER11  DC    A(0)          R11 REPLACED BY R14 TO FREE BASE   GP10113
PROCRTRN DC    A(0)                                                   $
RPADDR   DC    A(0)
MEMBRTTR DC    F'0'
PGMRC    DC    F'0'          PROGRAM RETURN CODE                GP10113
SEGBFBEG DC    A(0)
SEGUSED  DC    A(0)
CESDADR  DC    A(0)
CESDUSED DC    A(0)
@MALEN   DC    F'2000'  1/2                                           $
@MAPTR   DC    A(0)     2/2                                           $
@MATAB   DC    A(0)     1/2                                           $
@MAEND   DC    A(0)     2/2                                           $
@MAMAX   DC    A(0)                                                   $
ALIPOINT DC    A(0)          0 OR FIRST ALIAS FOR MEMBER        GP10113
ALENTRY  DC    0XL16'0',XL3'0',CL8' ',X'0',XL4'0'               GP10113
PAGENUM  DC    H'0'          SYSPRINT PAGE                      GP10113
RGCNT    DC    H'0'
DDFLAGS  DC    X'00'         DD PRESENT FLAG                    GP10113
DDFPRT   EQU   X'80'           SYSPRINT                         GP10113
DDFPUN   EQU   X'40'           SYSPUNCH                         GP10113
DDFSYN   EQU   X'20'           SYSIN                            GP10113
DDFLOUT  EQU   X'10'           SYSLOUT (LKED SYSRINT)           GP10113
DDFUT5   EQU   X'08'           SYSUT5                           GP10113
DDFUT6   EQU   X'04'           SYSUT6  (LKED SYSIN)             GP10113
DDFUT3   EQU   X'02'           SYSUT3  (IEBCOPY SYSIN)          GP10113
DDFUT4   EQU   X'01'           SYSUT4                           GP10113
LEFLAG   DC    XL1'00'       LINKER NOT NEEDED 00; NEEDED F0, USED FF
OVLYSW   DC    XL1'0'
INSRTSW  DC    XL1'00'
REPLACE  DC    XL1'00'                  REPLACE SWITCH FF - YES
ALLSET   DC    XL1'00'                  SET UP SWITCH  00 - DO SET UP
SVCLIB   DC    XL1'00'
COPYSW   DC    XL1'00'
         SPACE 1
CLEARSEL DS    0H            COUNTERS CLEARED FOR LINK/COPY     GP10113
COUNT    DC    H'0'          NO. OF USER'S SELECT/EXCLUDE NAMES
ENCT     DC    H'0'          COUNT OF SELECT ENTRIES
INDDCT   DC    H'0'          COUNT OF NO. INDD'S IN CURRENT STEP
INDDCUR  DC    H'0'          INDEX OF CURRENT INDD              GP10113
NNCT1    DC    H'0'          NBR OF NEWNAMES SPECIFIED IN CURRENT SE-
*                            LECTIVE LINK STEP (IF NOT SEL CPY, = 0)
CLEARSIZ EQU   *-CLEARSEL         SIZE TO CLEAR                 GP10113
         SPACE 1
OPTFLAG1 DC    X'00'         RUN OPTIONS                        GP10113
OFTEST   EQU   X'80'           TEST - INHIBIT LINK AND COPY     GP10113
OFNOOVLY EQU   X'40'           CANCEL OVERLAY                   GP10113
OFNOALI  EQU   X'20'           REMOVE PAGE ALIGNMENT            GP10113
OFNOCHK  EQU   X'10'           BYPASS VALIDITY CHECKING         GP10113
OFBUILD  EQU   X'08'           BUILD INCLUDE(SYSLIB) CARDS      GP10113
OFLOTS   EQU   X'04'           EVEN MORE EXTRA MESSAGES         GP14266
OFLIST   EQU   X'02'           EXTRA MESSAGES LISTED            GP10113
OFDEBUG  EQU   X'01'           DEBUG MODE                       GP10113
         SPACE 1
OPTFLAG2 DC    X'00'         MORE OPTIONS                       GP10113
OFDCBS   EQU   X'80'           LINKER: USE JFCB BLKSIZE ON DEV. GP13239
OFYDCBS  EQU   X'40'           USE DCBS ON CURRENT OUTDD        GP13239
OFSOLO   EQU   X'20'           USE SEPARATE LINKS PER MEMBER    GP14266
OFREPL   EQU   X'01'           REPLACE OPTION/WITH SYSIN DUMMY  GP14266
         SPACE 1
OPTFLAG3 DC    X'00'         MORE OPTIONS                       GP10113
OFDDL    EQU   X'80'           DD LIST HAD OVERRIDES            GP14263
         SPACE 1
PROFLAGS DC    X'00'         PROCESSING OPTIONS                 GP10113
PFUT3    EQU   X'80'           CARD IMAGES WRITTEN TO SYSUT3    GP10113
PFFAIL   EQU   X'01'           CC >= 8 MESSAGE ISSUED           GP10113
         SPACE 1
         DS    0D
OUTNAME  DC    CL8' '        NAME OF CURRENT OUTPUT DD
*
SARG     DC    0F'0',CL8' '  TEMPORARY WORK AREA USED BY ZZRESCAN
SAVEPAPR DC    CL8' '        SAVE PARTIAL PARM ON CONITNUATION
LEFTPCNT DC    H'0'    1/2   LEFT PARENTHESIS COUNT
RGHTPCNT DC    H'0'    2/2   RIGHT PARENTHESIS COUNT
CSTOREG  DC    3F'0'         SAVE AREA USED BY ZZRESCAN
         SPACE 1
EPADDR   DC    XL3'0'        MODULE ENTRY POINT
CNMEFND  DC    XL1'00'
CESDSW   DC    XL1'00'                                                $
ENDTABSW DC    XL1'00'
CSECTCTR DS    PL2                                                    $
SVREG14  DC    F'0'                                                   $
SVREG9   DC    F'0'                     SAVE AREA FOR R9
SVREG4   DC    F'0'                     SAVE AREA FOR R4
ADRTIOT  DC    F'0'                     SAVE TIOT ADDRESS
VOLSER   DS    CL6           OUT DD SERIAL
CARDNUM  DC    PL5'0'
JOBNO    DC    PL3'0'                                           GP10113
STEPNO   DC    PL2'0'
         SPACE 1
OUTINFO  DS    CL52          44 DSN  2  6 SER                   GP10113
INPINFO  DS    CL52          44 DSN  2  6 SER                   GP10113
         SPACE 2
*---------------------------------------------------------------------*
*    ATTRIBUTES ARE SPLIT INTO TWO GROUPS:                            *
*      LKATTR match Link-Edit flags PDS2ATR bytes, minus ones not     *
*        relevant as LKED PARM values.                                *
*      PGATTR are attributes required by the program to produce       *
*        additional LKED control cards                                *
*---------------------------------------------------------------------*
*
*       ATTRIBUTE BIT DEFINITIONS                                     $
*   LKATTR         LKATTR         PGATTR          PGATTR
*   BYTE 1         BYTE 2         BYTE 1         BYTE 2
*  80  RENT       80  DC         80              80  PAGE ALIGN
*  40  REUS       40  UNUSED     40              40  AUTHORIZED
*  20  OVLY       20  UNUSED     20              20  SSI
*  10  TEST       10  UNUSED     10  RMODE=ANY   01  NUCLEUS LINK
*  08  OL         08  NOT LE     08  AMODE=31(TRUE ALIAS OR ALT EP)   $
*  04  SCTR       04  UNUSED     0C  AMODE=ANY(TRUE ALIAS OR ALT EP)  $
*  02  UNUSED     02  UNUSED     02  AMODE=31(MAIN EP)                $
*  01  UNUSED     01  REFR       03  AMODE=ANY(MAIN EP)               $
LKATTR   DC    XL2'00'                  ATTRIBUTES FOR LKED PARM      $
PRVATTR  DC    XL2'00'                  SAVE ATTRB AREA               $
PGATTR   DC    XL2'00'                  ATTRIBUTES OF MEMBER          $
P2ATTR   EQU   PGATTR+1,1,C'B'          ATTRIBUTES OF MEMBER          $
         SPACE 2
@MDTDD1  DC    A(0)          ADDRESS OF START OF INDD TABLE
@MDTDDC  DC    A(0)          CURRENT INDD ENTRY                 GP10113
@MDTMB1  DC    A(0)          ADDR OF BEGINNING OF DDMBTABL
@MDTMBN  DC    A(0)          IF SELECTIVE OR EXCLUSIVE LINK, THIS IS
*                            THE ADDRESS (+1) OF THE END OF THE TABLE
*                            IF FULL LINK, ADDR (+1) OF END OF INDDTAB.
         SPACE 1
* THE FOLLOWING SWITCHES (PARMSWCH, CCSWITCH, COMDCDSW, CPARAMSW, CCDE-
* LIM, CCDELIM2) ARE PRIMARILY BUT NOT SOLELY USED BY ZZRESCAN -
*
PARMSWCH DC    XL1'0'    SCAN INTERNAL INDD AND MEMBER SWITCHES
SCANNAME EQU   X'80'         SCANNING NAME
SET4REPL EQU   X'40'         MULTIPLE ( EXPECT REPLACE
ONELEFT  EQU   X'20'         FIRST LEFT PARENTHESIS
LINKNOW  EQU   X'10'         NOW SCANNING LINK CARD
STOPSCAN EQU   X'08'         BLANK ENCOUNTERED
FLUSHSW  EQU   X'04'                   FLUSH TO NEXT LINK RE/SET ALONE
HASNEWNM EQU   X'02'         HAVE A NEW NAME WITH MEMBER
COMDPART EQU   X'01'         PARTIAL COMMAND- CONTINUED ON NEXT CARD
*
CCSWITCH DC    XL1'0'                  CONTROL CARD SWITCHES- EXTERNAL
CARDPRTD EQU   X'80'         ON = CONTROL STATEMENT HAS BEEN PRINTED
SYSINEOF EQU   X'40'         END OF FILE ON SYSIN
UNECPARN EQU   X'20'         INDD/MEMBER NAMES IMBEDDED IN PARENTHESIS
ZZRLINKC EQU   X'10'         ZZRLINK CONTROL CARDS
COMDNOW  EQU   X'08'         COMMAND WORD
LASTPARM EQU   X'04'         LAST PARAMETER- BYPASS SWITCH
MULTSE   EQU   X'02' MULTIPLE SELECT/EXCLUDE STATEMENTS
FIRSTSCN EQU   X'01' ON=ZZRESCAN HAS BEEN CALLED FOR THE FIRST TIME
*
COMDCDSW DC    XL1'0'           SOME EXTERNAL SWITCHES
LINKDONE EQU   X'80'         LINK COMMAND SCANNED ALL OK
SELECTSC EQU   X'40'         SELECT COMMAND SCANNED
EXCLUDES EQU   X'20'         EXCLUDE COMMAND SCANNED
NEWOUT   EQU   X'10'         OUTDD KEYWORD PRESENT
NEWINDD  EQU   X'08'         INDD KEYWORD PRESENT
LISTSW   EQU   X'04'         DO NOT LIST MEMBERS COPIED (LIST=NO)
COMPRESS EQU   X'02'                   COMPRESS LINK DATA SET
MEMBRCD1 EQU   X'01'         MEMBER STATEMENT
*
CPARAMSW DC    XL1'0'       INTERNAL SCAN SWITCHES
DELIMEND EQU   X'80'         DELIMITER IN COLUMN 71
CONTINY  EQU   X'40'         CONTINUATION
PARMCOME EQU   X'20'         PARAMETER FOLLOWS
PARTPARM EQU   X'10'         PARTIAL PARAMETER
READ1    EQU   X'08'         READ ANOTHER CONTROL STATEMENT
COMDPARM EQU   X'04'         COMMAND FOLLOWED BY PARAMETER
COL72BLK EQU   X'02'         COLUMN 72 NOT BLANK
PARMZERO EQU   X'01'         PARAMETER LENGTH ZERO
*
SCANSWCH DC    XL1'0'        INTERNAL SCAN SWITCHES              A48742
NOCMMEXP EQU   X'80'         DON'T SCAN COMMAND ON CONTIN CARDS  A48742
*              LOW ORDER 7 BITS NOT USED - RESERVED              A48742
*
CCDELIM  DC    XL1'0'        INTERNAL SCAN SWITCHES
EQUALSGN EQU   X'80'         EQUAL SIGN
COMMASGN EQU   X'40'         COMMA
LEFTPRSG EQU   X'20'         LEFT PARENTHESIS
RIGHTPRS EQU   X'10'         RIGHT PARENTHESIS
BLANKSGN EQU   X'08'         BLANK
LASTCOMA EQU   X'04'         LAST DELIMITER A COMMA- READ A CARD
*              LO ORDER BIT NOT USED
*
CCDELIM2 DC    XL1'0'  USED TO SAVE SETTINGS OF CCDELIM ON CONTINUATION
*
IOEF2    DC    X'00'              FLAGS DESCRIBING NATURE/TYPE OF I/O
*                                 ERROR
ERF9     EQU   X'80'         ON = 'HARD' ERROR WRITING MERGED OUTPUT
*                                 DIRECTORY TO SYSUT4
ERF10    EQU   X'40'         ON = ERROR READING FROM SYSUT4.  IF 'ERF4'
*                                 OFF, ERROR OCCURRED DURING MERGE
*                                 PHASE OF PROGRAM - IF 'ERF4' ON, SEE
*                                 DESCRIPTION OF 'ERF4'.
*              LOW ORDER 4 BITS NOT USED - RESERVED
*
MSGLIST  DC    4H'0'              AREA FOR PARAMETRIC INPUT TO ZZMESAGE
MSG1     EQU   MSGLIST
MSG2     EQU   MSG1+2
MSG3     EQU   MSG2+2
MSG4     EQU   MSG3+2
* THE FOLLOWING BITS WILL BE SET ON BY THE CALLER OF ZZMESAGE (MESSAGE
* WRITING ROUTINE) IN THE HIGH ORDER BYTE OF EACH APPROPRIATE HALFWORD
* IN THE MSGLIST PARAMETER(S) BEING USED -
MOREMSG  EQU   X'80'         ON = ANOTHER MESSAGE ID FOLLOWS
CTLCD    EQU   X'40'         ON = A CONTROL CARD IS TO BE PRINTED
IOERF    EQU   X'20'         ON = A MESSAGE IS IN THE MESSAGE BUFFER
RCODE    EQU   X'10'         ON = PUT RETURN CODE INTO THIS MSG TEXT
*              LO ORDER BITS NOT USED - RESERVED
         SPACE 1
MSGPARM1 DC    0D'0',CL8' '  FIRST MESSAGE TEXT INSERTION       GP10113
MSGPARM2 DC    CL8' '        SECOND TEXT INSERTION              GP10113
MSGPNUM1 DC    F'0'          NUMERIC INSERTION VALUE            GP10113
LINECT   DC    X'0'               COUNT OF NBR LINES WRITTEN ON ONE PG
PGLIMIT  EQU   60            MAX NBR OF LINES PER PAGE          GP14266
         DC    C' '    1/2                                      GP10113
MSGBUF   DC    CL133' ' 2/2       MESSAGE BUFFER
         DC    CL1' '                   USED TO BLANK OUT CARD
CNTCRD   DS    CL80                     JCL OR CONTROL CARD AREA
CCIMAGE  DS    CL80                     SCAN CONTROL CARD BUFFER
LIBBLD   DS    H'1,74',XL74'0'                                  GP10114
         SPACE 1
DDMBTABL DS    (1+128)XL(MDSIZE)  SELECT/EXCLUDE STATEMENTS     GP10113
*
DIRBLOCK DC    H'00',256X'00'
CESDBFFR DC    XL256'0'
*
SEGBFTBL DS    CL1048
CESDTBL  DS    CL20480                                          GP10113
SAVEEND  EQU   *
         SPACE 1
RELINKER CSECT ,
         SPACE 1                                                GP10113
OPTTABL  ODEF  OPTFLAG1,OFNOOVLY,255,NOOVLY     REMOVE OVERLAYS GP10113
OPTTAB2  ODEF  OPTFLAG1,OFDEBUG,255,DEBUG       SET DEBUG MODE  GP10113
         ODEF  OPTFLAG1,OFNOALI,255,NOALIGN     IGNORE ALIGN    GP10113
         ODEF  OPTFLAG1,OFNOCHK,255,NOCHECK     IGNORE CHECKS   GP10113
         ODEF  OPTFLAG1,OFBUILD,255,BUILD       BUILD INCLUDES  GP10114
         ODEF  OPTFLAG1,OFLIST,255,LIST         LIST MORE MESSAGES
         ODEF  OPTFLAG1,OFLIST+OFLOTS,255,LOTS  EVEN MORE MSGS  GP14266
         ODEF  OPTFLAG2,OFDCBS,255,DCBS         LKED DCBS       GP13239
         ODEF  OPTFLAG2,OFDCBS,255,EXPORT       LKED DCBS ALIAS GP13239
         ODEF  OPTFLAG2,OFSOLO,255,SOLO         UNBATCH LINKS   GP14266
         ODEF  OPTFLAG2,OFREPL,255,REPLACE      DUMMY REPLACE   GP14266
         ODEF  OPTFLAG2,OFREPL,255,REPL         DUMMY REPLACE   GP14266
         ODEF  OPTFLAG2,OFREPL,255,REP          DUMMY REPLACE   GP14266
         ODEF  OPTFLAG1,OFTEST,255,TEST         SET TEST RUN    GP10113
         ODEF  OPTFLAG1,0,255-OFNOOVLY,OVLY     ALLOW OVERLAYS  GP10113
         ODEF  OPTFLAG1,0,255-OFNOOVLY,OVERLAY  ALLOW OVERLAYS  GP10113
         ODEF  OPTFLAG1,0,255-OFNOALI,ALIGN     KEEP ALIGN      GP10113
         ODEF  OPTFLAG1,0,255-OFNOCHK,CHECK     KEEP CHECKS     GP10113
         ODEF  OPTFLAG1,0,255-OFBUILD,NOBUILD   NO INCLUDES     GP10114
         ODEF  OPTFLAG1,0,255-OFDEBUG,NODEBUG   RESET DEBUG MODE
         ODEF  OPTFLAG1,0,255-OFLIST-OFLOTS,NOLIST NORMAL LIST  GP14266
         ODEF  OPTFLAG2,0,255-OFDCBS,NODCBS     LKED DCBS PARM  GP13239
         ODEF  OPTFLAG2,0,255-OFSOLO,NOSOLO     LKED BATCHED    GP14266
OPTTABN  ODEF  OPTFLAG1,0,255-OFTEST,NOTEST     RUN PRODUCTION  GP10113
         SPACE 1
         CVT   DSECT=YES                                        GP10113
         SPACE 1
         IEZJSCB ,                                              GP10113
         SPACE 1
         IEFAJCTB ,                                             GP10113
         SPACE 1
*IN JCT* IEFAACTB ,                                             GP10113
         SPACE 1
         DCBD  DSORG=PS
         SPACE 1
         IKJTCB ,                                               GP10113
         SPACE 1
         IHAPDS PDSBLDL=NO   MAP DIRECTORY ENTRY                GP10113
MYFPAGE  EQU   X'80'         SET IN PGATTR                      GP10113
MYFAUTH  EQU   X'40'         SET IN PGATTR                      GP10113
MYFSSI   EQU   X'20'         SET IN PGATTR                      GP10113
MYFNUCL  EQU   X'01'         NUCLEUS DETECTED                   GP10113
         SPACE 1
MYTIOT   DSECT ,                                                GP10113
         IEFTIOT1 ,                                             GP10113
         SPACE 1
MYUCB    DSECT ,                                                GP10113
         IEFUCBOB ,                                             GP10113
         SPACE 1
MYFMT1   DSECT ,                                                GP13239
         IECSDSL1 1          MAP DSCB FORMAT 1                  GP13239
         SPACE 1
R0       EQU   0             AVOID MACRO/COPY HASSLES           GP10113
R1       EQU   1                                                GP10113
R2       EQU   2                                                GP10113
R3       EQU   3                                                GP10113
R4       EQU   4                                                GP10113
R5       EQU   5                                                GP10113
R6       EQU   6                                                GP10113
R7       EQU   7                                                GP10113
R8       EQU   8                                                GP10113
R9       EQU   9                                                GP10113
R10      EQU   10                                               GP10113
R11      EQU   11                                               GP10113
R12      EQU   12                                               GP10113
R13      EQU   13                                               GP10113
R14      EQU   14                                               GP10113
R15      EQU   15                                               GP10113
F2       EQU   2             FLOATING POINT REGISTER 2          GP10113
         END   ,
