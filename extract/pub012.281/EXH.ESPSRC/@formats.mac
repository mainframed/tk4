@FORMATS TITLE '@ F O R M A T S  ***  NUMERIC OUTPUT FORMATTING'
         MACRO ,                                                GP03304
&NM      MAPFDFUN &PROC,&MAXLEN,&DEFLEN,&OFF=,&FMT=             GP03293
         GBLC  &ZZFDFN(128)                                     GP03287
         GBLC  &ZZFDFG(128)                                     GP03287
         GBLC  &ZZFDML(128)                                     GP03287
         GBLC  &ZZFDDL(128)                                     GP03287
         GBLC  &ZZFDF1(128)                                     GP03293
         GBLC  &ZZFDF2(128)                                     GP03293
         GBLA  &ZZFDF#                                          GP03304
         LCLA  &I                                               GP03304
         LCLC  &BASE,&LMAX,&LDEF,&LBL,&F1,&F2                   GP03293
&LBL     SETC  '&NM'                                            GP03304
&BASE    SETC  'TREV'                                           GP03304
         AIF   ('&PROC' EQ 'TREVOFF').TRVOFF                    GP03304
&BASE    SETC  'CONV'                                           GP03304
         AIF   ('&PROC' EQ 'CONVOFF').BLDOFF                    GP03304
         AIF   ('&PROC' EQ 'CONVMAX').BLDMAX                    GP03304
         AIF   ('&PROC' EQ 'CONVDEF').BLDDEF                    GP03304
         AIF   ('&PROC' EQ '').MISSPRO                          GP03304
&LMAX    SETC  '&MAXLEN'                                        GP03304
&LDEF    SETC  '&DEFLEN'                                        GP03304
         AIF   ('&LMAX' NE '').HAVEMAX                          GP03304
&LMAX    SETC  '4'                                              GP03304
.HAVEMAX AIF   ('&LDEF' NE '').HAVEDEF                          GP03304
&LDEF    SETC  '0'                                              GP03304
.HAVEDEF ANOP  ,                                                GP03304
&ZZFDF#  SETA  &ZZFDF#+1                                        GP03304
&ZZFDFN(&ZZFDF#) SETC '&PROC'                                   GP03304
&ZZFDML(&ZZFDF#) SETC '&LMAX'                                   GP03304
&ZZFDDL(&ZZFDF#) SETC '&LDEF'                                   GP03304
&F1      SETC  '&FMT(1)'                                        GP03293
&F2      SETC  '&FMT(2)'                                        GP03293
         AIF   ('&F1' NE '').HAVEF1                             GP03293
&F1      SETC  '0'                                              GP03293
.HAVEF1  AIF   ('&F2' NE '').HAVEF2                             GP03293
&F2      SETC  '0'                                              GP03293
.HAVEF2  ANOP  ,                                                GP03293
&ZZFDF1(&ZZFDF#) SETC '&F1'                                     GP03293
&ZZFDF2(&ZZFDF#) SETC '&F2'                                     GP03293
         AIF   ('&OFF' EQ '').MEND                              GP03304
&ZZFDFG(&ZZFDF#) SETC '&OFF'                                    GP03304
         MEXIT ,                                                GP03304
.MISSPRO MNOTE 8,'MAPFDFUN: FUNCTION DEFINITION REQUIRES NAME'  GP03304
         MEXIT ,                                                GP03304
.TRVOFF  AIF   (&I GE &ZZFDF#).MEND                             GP03304
&I       SETA  &I+1                                             GP03304
         AIF   ('&ZZFDFG(&I)' EQ '').TRVSKP                     GP03304
NUF&ZZFDFG(&I) EQU (*-&BASE.TABL)/2                             GP03304
.TRVSKP  ANOP  ,                                                GP03304
&LBL     DC    AL2(&BASE.&ZZFDFN(&I)-&BASE.CHAR)                GP03304
&LBL     SETC  ''                                               GP03304
         AGO   .TRVOFF                                          GP03304
.BLDOFF  AIF   (&I GE &ZZFDF#).MEND                             GP03304
&I       SETA  &I+1                                             GP03304
         AIF   ('&ZZFDFG(&I)' EQ '').BLDSKP                     GP03304
FUN&ZZFDFG(&I) EQU (*-&BASE.TABL)/2                             GP03304
.BLDSKP  ANOP  ,                                                GP03304
&LBL     DC    AL2(&BASE.&ZZFDFN(&I)-&BASE.CHAR),AL1(&ZZFDF1(&I),&ZZFDF*
               2(&I))                                           GP03293
&LBL     SETC  ''                                               GP03304
         AGO   .BLDOFF                                          GP03304
.BLDMAX  AIF   (&I GE &ZZFDF#).MEND                             GP03304
&I       SETA  &I+1                                             GP03304
&LBL     DC    AL1(&ZZFDML(&I))                                 GP03304
&LBL     SETC  ''                                               GP03304
         AGO   .BLDMAX                                          GP03304
.BLDDEF  AIF   (&I GE &ZZFDF#).MEND                             GP03304
&I       SETA  &I+1                                             GP03304
&LBL     DC    AL1(&ZZFDDL(&I))                                 GP03304
&LBL     SETC  ''                                               GP03304
         AGO   .BLDDEF                                          GP03304
.MEND    MEND  ,                                                GP03304
         SPACE 2
         MACRO ,                                                GP03122
&NM      #CONHEAD ,          CONVERSION ENTRY CODE              GP03122
         GBLB  &MVSESA                                          GP05018
         PUSH  USING                                            GP03122
         DROP  ,                                                GP03122
         AIF   (&MVSESA).BAKR                                   GP05018
&NM      STM   R14,R12,12(R13)                                  GP05020
         BASR  R12,0         SET TEMPORARY BASE                 GP05020
         USING *,R12                                            GP05020
         LM    R11,R12,=A(@FORMATS,@FORMATS+4096)  REAL BASES   GP05020
         USING @FORMATS,R11,R12                                 GP05018
         BALS  R9,CONINIT    INITIALIZE SAVE/WORK AREAS, INPUT, ETC.
         AGO   .MEND
.BAKR    ANOP  ,                                                GP05018
&NM      PGMBAKR ID=NO,BREG=SET  SAVE REGS, SET BASE            GP05017
         LM    R11,R12,=A(@FORMATS,@FORMATS+4096)  GET BASES BACK
         DROP  R12
         USING @FORMATS,R11,R12
         BALS  R9,CONINIT    INITIALIZE SAVE/WORK AREAS, INPUT, ETC.
.MEND    POP   USING         BACK TO NORMAL                     GP03122
         MEND  ,                                                GP03122
         SPACE 2
         MACRO ,                                                GP03122
&NM      #CONEXIT ,          CONVERSION EXIT CODE               GP05018
         GBLB  &MVSESA                                          GP05018
         AIF   (&MVSESA).BAKR                                   GP05018
&NM      LM    R15,R1,RETCODE  GET RETURN REGISTERS             GP05020
         L     R13,4(,R13)   GET CALLER'S SAVE AREA             GP05020
         L     R14,12(,R13)  GET RETURN ADDRESS                 GP05020
         LM    R2,R12,28(R13)  RESTORE OTHER REGISTERS          GP05020
         LTR   R0,R0         SET CC                             GP05105
         BSM   0,R14         RETURN                             GP05020
         MEXIT ,
.BAKR    ANOP  ,
&NM      LM    R15,R1,RETCODE                                   GP05018
         PGMBAND ,
         MEND  ,
         SPACE 1
         PUNCH '   ORDER @FORMATS(P) '   EASIER DUMPS
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
*                                                                     *
*        COPYRIGHT 2003, 2004  EXPERT SYSTEM PROGRAMMING              *
*                              176 OLD STAGE COACH ROAD               *
*                              BRADFORD, VT 05033-8844                *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*   THIS ROUTINE CONVERTS A NUMBER (ADDRESS IN R1) TO EBCDIC          *
*   USING THE NUMERIC TYPE AND FORMATTING FROM R0                     *
*                                                                     *
*   R0: OL,IL,TY,OP   "OL" 0 OR NUMERIC LENGTH ON OUTPUT              *
*                     "IL" 0 OR INPUT LENGTH (0 VALID FOR DEC ONLY)   *
*                     "TY" INPUT TYPE (DEC,ADEC,SINT,AINT,HEX,,BIN)   *
*                     "OP" FORMATTING FLAGS (SEE OFXXX EQUS)          *
*   R1: ADDR          LOCATION OF NUMBER TO BE PROCESSED              *
*   R15: BASE ADDRESS (SET BY CALLER DIRECTLY OR WITH #FMT MACRO)     *
*   R14: RETURN ADDRESS (EITHER 24 OR 31 BIT MODE)                    *
*     ON RETURN:  R15=0 R0=ADDR OF FIRST BYTE; R1=LENGTH              *
*                 R15=4 -"-  BUT TOO SHORT FOR SIGNIFICANT DIGITS     *
*                 R15>4 NUMBER NOT PROCESSED; ERROR IN INPUT          *
*                                                                     *
*   THIS ROUTINE MAY BE CALLED IN 24-BIT AND 31-BIT ADDRESSING MODE,  *
*   AND MAY RESIDE ABOVE THE LINE WHEN LINKED WITH A 31-BIT MODE PGM. *
*                                                                     *
***********************************************************************
*  MAINTENANCE:                                                       *
*                                                                     *
*  2003-11-10  GYP  ADDED CONVERSIONS (SEE #CNVRT MACRO) TO COMBINE   *
*                   CODE FROM @PRINTER AND EXHASCRN             GP03314
*  2004-02-24  GYP  FIXED FDTABLE, HEX LENGTH ERRORS                  *
*  2004-04-27  GYP  CHANGED FUNCTION NUMBERS 0-7 TO 2-9 TO ACCOMMODATE*
*                   SUBWTO CONVERSION; ADDED 0 AND 1 AS SIMPLE TEXT   *
*                   WITH TRANSLATION.                           GP04118
*  2004-05-17  GYP  FIXED ENTRY BASE REGS FOR CON--- FUNCTIONS  GP05017
*                                                                     *
***********************************************************************
         SPACE 1
@FORMATS START 0
         USING @FORMATS,R15  DECLARE
         B     BEGIN
PROGID   BCON  '@FORMATS - &SYSDATE'
         ORG   @FORMATS+24   FIXED OFFSETS USED BY EXTERNALS    GP03122
         DC    A(CONVLDEF,CONVLMAX)  CONVERSION DEFAULT/MAX LENGTH
         #CNVRT OPT=EXPAND   BUILD THE ENTRY OFFSET TABLE       GP03122
BEGIN    BSM   R14,0         PRESERVE CALLER'S AMODE            GP99026
         STM   R14,R12,12(R13)  SAVE REGISTERS
         LA    R11,0(,R15)   LOCAL BASE
         LA    R12,2048
         LA    R12,2048(R12,R11)
         DROP  R15
         USING @FORMATS,R11,R12
         SPACE 1
*---------------------------------------------------------------------*
*   LOCATE OR ESTABLISH WORK AREA                                     *
*---------------------------------------------------------------------*
         LR    R10,R1        SAVE ENTRY PARAMETER
         OR    R10,R0        MERGE WITH OPTIONS
         SERVWORK '@FOR',FSALEN,OREG=R9,PREG=R10  GET WORK AREA
         CH    R15,=H'4'
         BNH   GOTWORK       HAVE IT
         ABEND 1066,DUMP     UNABLE TO GET WORK AREA
         SPACE 2
*---------------------------------------------------------------------*
*  WE HAVE OUR WORK AREA - CHECK FOR A TERMINATION REQUEST            *
*---------------------------------------------------------------------*
         USING SAVEAREA,R13
GOTWORK  CH    R15,=H'4'
*TEST*   BNE   GOTTRAN       HAVE IT
         LA    R14,TNTRTAB   GET DEFAULT FOR TN TRAIN           GP03134
         ST    R14,PWTRAN    SET TRANSLATE TABLE                GP03134
GOTTRAN  MVC   CALLPRMS(8),20(R9)  PRESERVE R0 AND R1
         MVI   FLAGS,0       CLEAR LOCAL FLAGS                  GP03293
         SPACE 2
*---------------------------------------------------------------------*
*  REMAINING CODE COMMON TO #FMT AND #CNVRT REQUESTS                  *
*---------------------------------------------------------------------*
NEWFORM  XC    RETCODE(12),RETCODE ZERO R15 (RC) THROUGH R1     GP03293
         XC    CALLR15,CALLR15   ALSO CLEAR RE-USED INPUT       GP04055
         MVC   CALLR15+3(1),CPRTYPE  SAVE TYPE SEPARATELY       GP03304
         MVI   CURRSIGN,C' '  RESET SIGN
         MVC   OUTNUM,CURRSIGN  BLANK ALL FOR EASIER DEBUGGING
         MVC   WRKOUTLN,CPROUTL  COPY THE DESIRED OUTPUT LENGTH GP03294
*---------------------------------------------------------------------*
*   CHECK INPUT LENGTH, AND TRUNCATE TO MAXIMUM                       *
*---------------------------------------------------------------------*
         SR    R2,R2                                            GP03310
         TRT   CPRTYPE,FILMAX  GET MAXIMUM INPUT LENGTH INTO R2 GP03310
         CLM   R2,1,CPRINPL  NOT LESS THAN INPUT ?              GP03310
         BNL   DIDIMAX       OK                                 GP03310
         STC   R2,CPRINPL    ELSE TRUNCATE TO MAX               GP03310
         OICC  4,RESULT=RETCODE  SEND WARNING                   GP03310
         SPACE 1                                                GP03310
*---------------------------------------------------------------------*
*   FOR DECIMAL ITEM, CHECK LENGTH                                    *
*     USE THIS LENGTH REGARDLESS                                      *
*     WHEN USER LENGTH NON-ZERO AND DIFT, SET WARNING                 *
*---------------------------------------------------------------------*
DIDIMAX  CLI   CPRTYPE,2     IS IT DECIMAL (2 OR 3) ?           GP04118
         BL    DIDITXT       NO; GO TO LENGTH TEST              GP04118
         CLI   CPRTYPE,3     IS IT DECIMAL (2 OR 3) ?           GP04118
         BH    DIDIDEC       NO; GO TO LENGTH TEST              GP04118
         L     R3,CALLR1     GET DATUM ADDRESS BACK             GP03310
         LA    R15,16        SET MAXIMUM LENGTH                 GP03310
         TRT   0(16,R3),TRTPACK  CHECK FOR VALID PACKED DECIMAL GP03310
         BZ    EXIT8         NO SIGN; INVALID                   GP03310
         CLM   R2,1,TRTPACK+X'0F'  TERMINATED BY VALID SIGN?    GP03310
         BNE   EXIT8         NO                                 GP03310
         LA    R2,1(,R1)     GET END ADDRESS + 1                GP03310
         SR    R2,R3         LESS START= LENGTH                 GP03310
         CLM   R2,1,CPRINPL  MATCHES USER'S ?                   GP03310
         BE    DIDIDEC       YES; GOOD                          GP03310
         CLI   CPRINPL,0     USER DEFAULT ?                     GP03310
         BE    SETIDEC       YES; JUST SAVE IT                  GP03310
         OICC  4             LENGTH MISMATCH                    GP03310
SETIDEC  STC   R2,CPRINPL    FORCE GOOD LENGTH                  GP03310
         B     DIDIDEC                                          GP04118
         SPACE 1                                                GP03310
*---------------------------------------------------------------------*
*   CHECK TEXT LENGTH; IF EITHER IN OR OUT LENGTH IS ZERO,            *
*     USE THE OTHER ONE                                               *
*---------------------------------------------------------------------*
         SPACE 1                                                GP03310
DIDITXT  CLI   CPRINPL,0     INPUT LENGTH=0 ?                   GP04118
         BH    *+10          NO                                 GP04118
         MVC   CPRINPL,CPROUTL  USE OUTPUT                      GP04118
         CLI   CPROUTL,0     OUTPUT LENGTH=0 ?                  GP04118
         BH    *+10          NO                                 GP04118
         MVC   CPROUTL,CPRINPL  USE INPUT                       GP04118
         SPACE 1                                                GP03310
*---------------------------------------------------------------------*
*   CHECK THE INPUT LENGTH                                            *
*     WHEN 0, REPLACE BY TYPE'S DEFAULT                               *
*---------------------------------------------------------------------*
         SPACE 1                                                GP03310
DIDIDEC  CLI   CPRINPL,0     IS INPUT LENGTH ZERO ?             GP03310
         BNE   SKIPIZER      NO; CHECK OUTPUT LENGTH            GP03310
         L     R1,CALLR1     RESTORE INPUT ADDRESS              GP03310
         TRT   CPRTYPE,FILDEF  GET DEFAULT FOR TYPE             GP03310
         STC   R2,CPRINPL    SET ARBITRARY DEFAULT              GP03310
         OICC  4              AND WARNING CODE                  GP03310
         SPACE 1                                                GP03310
*---------------------------------------------------------------------*
*   REPLACE A DEFAULTED OUTPUT LENGTH BY USING TYPE AND INPUT LENGTH  *
*---------------------------------------------------------------------*
SKIPIZER CLI   WRKOUTLN,0    ANY ?                              GP03294
         BNE   DOWHAT        YES; KEEP IT                       GP03294
         SR    R3,R3                                            GP03307
         ICM   R3,1,CPRINPL  GET INPUT LENGTH                   GP03307
         BZ    DOWHAT        INVALID EXCEPT FOR PACKED DECIMAL  GP03307
         LR    R2,R3         SAVE FOR CHAR STRNG                GP06004
         BCTR  R3,0          GET LENGTH FOR TABLE LOOKUP        GP03307
         STC   R3,WRKOUTLN   SET INPUT LEN FOR TRANSLATE        GP03307
         L     R15,CALLR15   RESTORE ENTRY R15                  GP03304
         SRA   R15,1         IGNORE SIGNED/ABSOLUTE             GP03307
         BNP   DOWATCH       CHARACTER STRING - I/P = O/P LEN   GP06004
         SH    R15,=H'1'     RELATIVE TO TABLE START            GP06004
         MH    R15,=AL2(TABINT-TABDEC)                          GP03307
         LA    R15,TABDEC(R15) POINT TO LENGTH TABLES           GP03307
         TM    CPROPTS,OFGROUP  GROUP SETTING ON ?              GP03307
         BZ    *+8           NO                                 GP03307
         AH    R15,=AL2(TABCOMMA-TABDEC)  ALLOW FOR PRETTIES    GP03307
         SR    R2,R2         CLEAR HIGH BYTES                   GP03307
         TRT   WRKOUTLN,0(R15) GET MATCHING OUTPUT LENGTH       GP03294
         TM    CPROPTS,OFCENT  ALLOW FOR DECIMAL POINT ?        GP03307
         BZ    DOWNCENT                                         GP03307
         LA    R2,1(,R2)     UP BY ONE                          GP03307
         MAX   R2,=H'4',TYPE=H  MINIMUM DECIMAL IS N.NN         GP03308
DOWNCENT TM    CPROPTS,OFSIGN  ALLOW FOR SIGN ?                 GP03307
         BZ    DOWNSIGN                                         GP03307
DOWATCH  LA    R2,1(,R2)     UP BY ONE                          GP06004
DOWNSIGN STC   R2,WRKOUTLN   SET OUTPUT LENGTH                  GP03307
         SPACE 1
DOWHAT   LTR   R10,R10       REQUEST TO TERMINATE ?             GP03294
         BNZ   DOWORK        NO; SEE WHAT THERE IS TO DO
         SERVWORK '@FOR',OPT=RELEASE
         SPACE 1
*---------------------------------------------------------------------*
*  MISCELLANEOUS RETURNS                                              *
*---------------------------------------------------------------------*
         PUSH  USING
EXIT16   MVICC 16,RESULT=RETCODE    SET RETURN CODE 16          GP03308
         B     EXIT          AND EXIT WITH ERROR
         SPACE 1
EXIT12   MVICC 12
         B     EXIT
         SPACE 1
EXIT8    MVICC 8             SET RETURN CODE 8
         B     EXIT
         SPACE 1
EXIT4    MVICC 4             SET RETURN CODE 4
         SPACE 1
EXIT     LM    R15,R1,RETCODE  GET RETURN VALUES                GP03294
         TM    FLAGS,FGALT   ENTRY FROM #CONVRT ?               GP03291
         BNZ   EXITALT       YES; SLIGHTLY DIFFERENT            GP03291
         L     R13,4(,R13)
         L     R14,12(,R13)  GET RETURN ADDRESS
         LM    R2,R12,28(R13)  RESTORE OTHERS
         BSM   0,R14         RETURN TO CALLER                   GP99026
         SPACE 1                                                GP03291
EXITALT  SWAPR R0,R1         R0 IS LENGTH, R1 IS ADDRESS        GP03291
         STM   R15,R1,RETCODE  MAKE SURE                        GP05018
         #CONEXIT ,          RETURN REST AS WAS                 GP03291
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*  PRELIMINARIES COMPLETE - DO COMMON STUFF, THEN BRANCH TO PROCESSOR *
*---------------------------------------------------------------------*
DOWORK   L     R1,CALLR1     RESTORE DATUM POINTER              GP03294
         SR    R14,R14                                          GP03310
         IC    R14,CPRINPL   ALSO PRELOAD INPUT LENGTH          GP03310
         XC    DB(L'DB+L'DB2),DB  CLEAR WORK WORDS              GP03310
         BIX   VAL=CPRTYPE,                                            *
               BASE=@FORMATS,ERR=EXIT8,PFX=DO,                         *
               LOC=(TEXT,  0 TEXT                                      *
               TEXT,       1 TEXT                                      *
               DEC,        2 SIGNED DECIMAL                            *
               ADEC,       3 ABSOLUTE VALUE; DECIMAL                   *
               SINT,       4 SIGNED INTEGER                            *
               AINT,       5 ABSOLUTE VALUE; INTEGER                   *
               SHEX,       6 SIGNED HEXADECIMAL ?                      *
               AHEX,       7 UNSIGNED HEXADECIMAL                      *
               SBIN,       8 SIGNED BINARY?                            *
               ABIN,       9 UNSIGNED BIT MODE                         *
               )             END OF LIST
         SPACE 1
***********************************************************************
**                                                                   **
**   TEXT STRING PROCESSING:                                         **
**   INLEN=OUTLEN - COPY AND TRANSLATE                               **
**   OFLJUST - STRIP BLANKS AND LEFT-JUSTIFY                         **
**  ^OFLJUST - STRIP BLANKS AND RIGHT-JUSTIFY                        **
**   OFLCENT - STRIP BLANKS AND CENTER                               **
***********************************************************************
         SPACE 1
DOTEXT   MVI   DBSAVE,C' '                                      GP04118
         MVC   DBSAVE+1(L'DBSAVE),DBSAVE  MAKE ALL BLANKS + 1   GP04118
         SR    R3,R3                                            GP04118
         IC    R3,CPRINPL    GET INPUT LENGTH                   GP04118
         LR    R2,R1         COPY INPUT ADDRESS                 GP04118
         LA    R4,DBSAVE     USE WORK AREA FOR OUTPUT           GP04118
         LR    R6,R4         COPY FOR RETURN                    GP04118
         SR    R5,R5                                            GP04118
         IC    R5,CPROUTL    GET OUTPUT LENGTH                  GP04118
         LR    R7,R5         COPY FOR RETURN                    GP04118
         CR    R3,R5         COMPARE LENGTHS                    GP04118
         BE    DOTEXTM       SAME-JUST MOVE                     GP04118
         LR    R6,R2         INPUT ADDRESS                      GP04118
         LR    R5,R3         INPUT LENGTH                       GP04118
         BALS  R14,DBKLEFT   SKIP LEADING BLANKS/ZEROES         GP04118
         BALS  R14,DBKRIGHT  SKIP TRAILING BLANKS               GP04118
         LR    R2,R6         COPY NEW INPUT ADDRESS             GP04118
         LTR   R3,R5         TEST NEW LENGTH                    GP04118
         BNZ   DOTEXTB                                          GP04118
         LA    R2,BLANKS                                        GP04118
         LA    R3,1          MAKE SURE WE HAVE VALID ADDRESSES; ETC.
DOTEXTB  LR    R5,R7         RESTORE OUT LENGTH                 GP04118
         LR    R6,R4         RESTORE OUTPUT ADDRESS             GP04118
         LR    R0,R5         GET OUTPUT LENGTH                  GP04118
         SR    R0,R3         LESS INPUT                         GP04118
         TM    CPROPTS,OFCENT  CENTER THE STRING ?              GP04118
         BZ    DOTEXTC       NO                                 GP04118
         LR    R1,R0                                            GP04118
         SRA   R1,1          ALSO DO HALF THE INTERVAL          GP04118
         LTR   R0,R0         INPUT LONGER THAN OUTPUT ?         GP04118
         BNM   DOTEXTC1      NO                                 GP04118
         SR    R2,R1         CENTER AND TRUNCATE                GP04118
         LR    R3,R5         TRUNCATE                           GP04118
         OICC  4             SET WARNING                        GP04118
         B     DOTEXTM       COMMON MOVE                        GP04118
DOTEXTC1 AR    R4,R1         START MOVE                         GP04118
         B     DOTEXTM       COMMON MOVER                       GP04118
         SPACE 1                                                GP04118
DOTEXTC  LTR   R0,R0         TRUNCATE ?                         GP04118
         BNM   DOTEXTL       NO                                 GP04118
         OICC  4             SET WARNING                        GP04118
         LR    R7,R5         USE SHORT O/P                      GP04118
         LR    R3,R5         AND SHORT I/P                      GP04118
         TM    CPROPTS,OFLJUST  LEFT JUSTIFY?                   GP04118
         BNZ   DOTEXTM       YES; JUST CHOP LENGTH              GP04118
         SR    R2,R0         ADJUST SOURCE ADDRESS              GP04118
         B     DOTEXTM       AND RIGHT JUSTIFY                  GP04118
         SPACE 1                                                GP04118
DOTEXTL  TM    CPROPTS,OFLJUST  LEFT JUSTIFY ?                  GP04118
         BNZ   DOTEXTM       YES; GO TO COMMON MOVER            GP04118
         AR    R4,R0         INDENT                             GP04118
DOTEXTM  ICM   R3,8,BLANKS   REQUEST BLANK FILL                 GP04118
         MVCL  R4,R2         MOVE INPUT TO OUT                  GP04118
         TR    DBSAVE,TNTRTAB  MAKE PRINTABLE                   GP04118
         TM    CPROPTS,OFSPACE  TRAILING SPACE ?                GP04118
         BZ    *+8           NO                                 GP04118
         LA    R7,1(,R7)     ADD ONE MORE                       GP04118
         STM   R6,R7,RSNCODE  RETURN R0, R1                     GP04118
         B     EXIT          AND GO BACK                        GP04118
         SPACE 2                                                GP04118
***********************************************************************
**                                                                   **
** INT(EGER) PROCESSING - VERIFY AND EDIT INPUT, DETERMINE OUTPUT    **
**   LENGTH, CHECK FOR TRUNCATION. IF NEGATIVE, GET 2'S COMPLEMENT   **
**   UNLESS ABSOLUTE MODE REQUESTED (INDEPENDENT OF SIGN DISPLAY)    **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP04118
DOSINT   TM    0(R1),X'80'   IS INPUT POSITIVE?
         BZ    DOAINT        YES; USE SAME CODE AS ABSOLUTE
         OI    FLAGS,FGNEG   SET NEGATIVE
         LA    R15,DB2+L'DB2  POINT PAST HOLD FIELD             GP03310
         SR    R15,R14       MAKE DESTINATION ADDRESS
         BCTR  R14,0         MAKE EXECUTE LENGTH
         EX    R14,MOV12F    MOVE TO WORK AREA
         EX    R14,CMP12F    MAKE ONE'S COMPLEMENT
         LM    R2,R3,DB2     LOAD IT
         AL    R3,=F'1'      MAKE TWO'S COMPLEMENT
         BC    12,DOINCOM    NO CARRY
         AL    R2,=F'1'      PROPAGATE CARRY
DOINCOM  STM   R2,R3,DB2     STASH IT BACK
         NI    DB2,X'7F'     KILL OVERFLOW BIT                  GP03017
         B     DOAICOM       COMMON INTEGER PROCESSING
         SPACE 1
*   TREAT INPUT AS UNSIGNED BINARY INTEGER
DOAINT   LA    R15,DB2+L'DB2  POINT PAST HOLD FIELD             GP03310
         SR    R15,R14       MAKE DESTINATION ADDRESS
         BCTR  R14,0         MAKE EXECUTE LENGTH
         EX    R14,MOV12F    MOVE TO WORK AREA
DOAICOM  ZAP   PACK16A,=P'0'  CLEAR HOLD FIELD
DOAIHLN  LM    R2,R3,DB2     LOAD ENTIRE VALUE
         LA    R0,3          LOOP FOR THREE TIMES 24 BITS (ARBITRARY)
         LA    R4,PSCALE     POINT TO SCALE FACTORS
DOAILY   LR    R5,R3         COPY LOW ORDER BITS
         N     R5,=X'00FFFFFF'  MASK ONLY WANTED BITS
         SRDL  R2,24         SHIFT FOR NEXT TIME
         CVD   R5,DB         CONVERT TO DECIMAL
         ZAP   PACK16B,0(L'PSCALE,R4)  COPY MULTIPLIER
         MP    PACK16B,DB    SCALE
         AP    PACK16A,PACK16B  ACCUMULATE
         LA    R4,L'PSCALE(,R4)  NEXT MULTIPLIER
         BCT   R0,DOAILY     REPEAT
         LA    R1,PACK16A    POINT TO INTERMEDIATE FIELD
         LA    R14,L'PACK16A-1  EXECUTE LENGTH                  GP03310
         TM    FLAGS,FGNEG   IS AMOUNT NEGATIVE?
         BZ    LENZAP        NO
         OI    PACK16A+L'PACK16A-1,X'0D'  MAKE NEGATIVE
         B     LENZAP        JOIN COMMON CODE
MOV12F   MVC   0(0,R15),0(R1)  MOVE INPUT
CMP12F   XC    0(0,R15),=16X'FF'  GET ONE'S COMPLEMENT
PSCALE   DC    PL8'1,16777216,281474976710656'
         SPACE 1
***********************************************************************
**                                                                   **
** DEC(IMAL) PROCESSING - VERIFY AND EDIT INPUT, DETERMINE OUTPUT    **
**   LENGTH, CHECK FOR TRUNCATION.                                   **
** DETERMINE THE LENGTH OF THE PACKED COUNTER (1-16 BYTES ARE LEGAL) **
**                                                                   **
***********************************************************************
         SPACE 1
DOADEC   NI    CPROPTS,255-OFSIGN  CANCEL SIGN - ABSOLUTE MODE
DODEC    BCTR  R14,0         SET EXECUTE LENGTH                 GP03310
LENZAP   EX    R14,ZAP2MAX   COPY TO MAXIMUM LENGTH FIELD       GP03310
         BNM   NOTLESS       NOT NEGATIVE
         TM    CPROPTS,OFSIGN  DOES USER WANT ABSOLUTE VALUE?
         BZ    NOTLESS       YES
         MVI   CURRSIGN,C'-'  MAKE IT LESS
         SPACE 1
*  CHECK WHICH OF THE OUTPUT MASK RELATED FLAGS ARE ON; SELECT MASK
NOTLESS  IC    R15,CPROPTS   GET TYPE OF NUMERIC CONVERSION DESIRED
         N     R15,=A(OFCENT+OFGROUP)  MASK MASK OPTIONS
         LA    R3,L'MASK1
         MR    R2,R15        MAKE OFFSET TO MASKS
         LA    R3,MASK1(R3)  POINT TO DESIRED MASK
         MVC   OUTWORK(L'MASK1),0(R3)  MOVE DESIRED MASK
         TM    CPROPTS,OFFILL  FILL REQUESTED?
         BZ    LANDFILL      NO
         MVI   OUTWORK,C'0'  PLACE FILL
         CLI   CURRSIGN,C'-'  NEGATIVE?
         BE    LANDFILL      YES; RETAIN IT
         MVI   CURRSIGN,C'0'  FILL WITH ZERO, NOT SPACE
LANDFILL LA    R1,OUTWORK+L'OUTWORK-4    PRESET SIGNIFICANT LOCATION
         TM    CPROPTS,OFCENT  DOING CENTS?
         BNZ   SIGCENT       YES
         LA    R1,OUTWORK+L'OUTWORK-1  USE INTEGER/GROUP LOCATION
SIGCENT  EDMK  OUTWORK,PACK16  CONVERT THE WHOLE THING
         TM    CPROPTS,OFFILL  ZERO FILL THIS NUMBER ?          GP03295
         BZ    LEADSIGN      NO; PLACE SIGN PRIOR TO NON-ZERO   GP03295
         SR    R15,R15                                          GP03310
         IC    R15,WRKOUTLN  GET FORCED OUTPUT LENGTH           GP03310
         LA    R1,OUTWORK+L'OUTWORK+1  ARTIFICIAL END IF NO HIT GP03304
         SR    R1,R15        SIGN GOES INTO FIRST DISPLAYED POSITION
LEADSIGN TM    CPROPTS,OFSIGN  IS SIGN WANTED ?                 GP04067
         BZ    COMFORM       NO; IGNORE IT                      GP04067
         BCTR  R1,0          SPACE TO PREVIOUS                  GP03295
         MVC   0(1,R1),CURRSIGN  MAKE A SIGN                    GP03295
COMFORM  LR    R6,R1         SAVE FOR LATER
         SR    R3,R3         CLEAR FOR IC
         IC    R3,WRKOUTLN   GET PASSED OR CALCULATED LENGTH    GP03307
         B     HAVEOLIN
HAVEOLEN MIN   R3,=Y(L'MASK1),TYPE=H  LIMIT O/P TO WHAT'S AVAILABLE
HAVEOLIN LA    R2,OUTNUM     POINT TO OUTPUT FIELD
         AR    R2,R3         POINT PAST OUTPUT
         LR    R5,R3         PROVISIONALLY SET I/P=O/P LENGTH
         LA    R4,OUTWORK+L'OUTWORK
         LR    R14,R4        SAVE END LOCATION
         SR    R4,R5         START MOVE LOCATION
         SPACE 1
*---------------------------------------------------------------------*
*  JUSTIFY:                                                           *
*  WE NEED TO HANDLE 8 COMBINATIONS OF FLAGS AND CONDITIONS:          *
*   LBL   NEEDED > EXPLICIT LN  LEFT-JUSTIFY    TRUNC  ADDR,LEN       *
*   UNJUST            N             N             *    OW-XL,XL       *
*   UNLEFT            N             Y             *     R1  ,SL       *
*   OVFLOW            Y             *             N    *****,XL       *
*   UNJUST            Y             N             Y    OW-XL,XL       *
*   OVLEFT            Y             Y             Y     R1  ,XL       *
* OW IS OUTWORK, XL IS EXPLICIT/DEFAULT LENGTH, SL IS SIGNIFICANT LEN.*
* R6 IS SIGNIFICANCE POSITION, ***** IS OVERFLOW FILL INDICATOR       *
*---------------------------------------------------------------------*
         SPACE 1
         TM    CPROPTS,OFLJUST  LEFT-JUSTIFY?
         BZ    JUSTSO        NO; PRESERVE OUTPUT ALIGNMENT
         CLI   0(R6),C' '    MINUS OR ZERO FILLED?
         BNE   JUSTSO         YES; PRESERVE IT
         LA    R6,1(,R6)     SKIP LEADING BLANK
JUSTSO   CR    R4,R6         WAS THERE AN OVERFLOW?
         BH    DOOVER        YES
         TM    CPROPTS,OFLJUST  LEFT-JUSTIFY?
         BZ    UNJUST        NO; DO NORMALLY
UNLEFT   LR    R5,R14        GET END POSITION
         SR    R5,R6         SUBTRACT SIGNIFICANCE START
         LR    R3,R5         ALSO SET DESTINATION LENGTH
         LA    R2,OUTNUM(R3)  AND MATCHING DESTINATION ADDRESS
         LR    R4,R6         SET START MOVE
         B     UNJUST        AND PROCESS
         SPACE 1
DOOVER   TM    CPROPTS,OFTRUNC   DOES USER WANT TRUNCATION?
         BNZ   OVTHERE       YES
         LA    R4,OVERFILL   POINT TO FILLER ASTERISKS
         B     UNJUST        AND MOVE
         SPACE 1
OVTHERE  TM    CPROPTS,OFLJUST  LEFT-JUSTIFY?
         BZ    UNJUST        NO; MOVE RIGHT-MOST PORTION
OVLEFT   LR    R4,R6         ELSE USE LEFT-MOST
         SPACE 1
UNJUST   SR    R2,R3         SET COPY START
         LR    R7,R3         PRESERVE O/P LENGTH
         ICM   R5,8,=C' '    SET FOR BLANK FILL
         MVCL  R2,R4         MOVE TO INTERMEDIATE HOLD
         SPACE 1
         LA    R6,OUTNUM     OUTPUT START POSITION              GP03294
         LR    R5,R7         OUTPUT LENGTH                      GP03294
         CLI   CPROUTL,0     USER SPECIFIED MAX LENGTH ?        GP03294
         BH    SKIPTRIM      YES; RETAIN IT                     GP03294
         BALS  R14,DBKLEFT   TRIM TO NON-BLANK                  GP03294
SKIPTRIM TM    CPROPTS,OFSPACE  SEPARATE NUMBER AND TEXT?       GP03294
         BZ    SUBSET        NO
         LA    R1,OUTNUM(R5)  SPACE TO END                      GP03294
         MVI   0(R1),C' '    MAKE TRAILING BLANK
         LA    R5,1(,R5)     INCREASE O/P LENGTH                GP03294
SUBSET   ST    R5,RR1CODE    RETURN LENGTH OF TEXT              GP04070
         ST    R6,RSNCODE    RETURN TO USER                     GP03294
         B     EXIT                                             GP03294
         SPACE 2
***********************************************************************
**                                                                   **
** BINARY PROCESSING. IF SIGNED, SAVE SIGN AND COMPLEMENT IF MINUS   **
**   SPACE FORMATTING SIMILAR TO HEX PROCESSING.                     **
**         IGNORE FILL                SPACES: GROUP    CENT          **
**    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          N        N           **
**   XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX          N        Y           **
**      XXXXXXXX XXXXXXXX XXXXXXXX              Y        N           **
**             XXXX XXXX XXXX XXXX              Y        Y           **
**                                                                   **
***********************************************************************
         SPACE 1
DOSBIN   TM    0(R1),X'80'   IS INPUT POSITIVE?
         BZ    DOABIN        YES; USE SAME CODE AS ABSOLUTE
         TM    CPROPTS,OFSIGN  DOES USER WANT SIGN?
         BZ    DOSBINA       NO (?)
         MVI   CURRSIGN,C'-'  SET IT
         OI    FLAGS,FGNEG   SET NEGATIVE
DOSBINA  LA    R15,DB2+L'DB2  POINT PAST HOLD FIELD             GP03310
         SR    R15,R14       MAKE DESTINATION ADDRESS
         BCTR  R14,0         MAKE EXECUTE LENGTH
         EX    R14,MOV12F    MOVE TO WORK AREA
         EX    R14,CMP12F    MAKE ONE'S COMPLEMENT
         LM    R2,R3,DB2     LOAD IT
         AL    R3,=F'1'      MAKE TWO'S COMPLEMENT
         BC    12,DOSBCOM    NO CARRY
         AL    R2,=F'1'      PROPAGATE CARRY
DOSBCOM  STM   R2,R3,DB2     STASH IT BACK
         B     DOABCOM       COMMON INTEGER PROCESSING
         SPACE 1
*   TREAT INPUT AS UNSIGNED BINARY INTEGER
DOABIN   LA    R15,DB2+L'DB2  POINT PAST HOLD FIELD             GP03310
         SR    R15,R14       MAKE DESTINATION ADDRESS
         BCTR  R14,0         MAKE EXECUTE LENGTH
         EX    R14,MOV12F    MOVE TO WORK AREA
DOABCOM  MVC   OUTWORK,BLANKS  CLEAR                            GP03305
         LA    R6,OUTWORK+L'OUTWORK  POINT TO LAST BYTE +1
         LM    R2,R3,DB2     LOAD DATA
         SR    R4,R4         LOAD INPUT LENGTH
         IC    R4,CPRINPL
         SLL   R4,3          BUT CONVERT TO BIT COUNT
         IC    R15,CPROPTS   LOAD OPTIONS
         N     R15,=F'3'     ISOLATE CENT= AND GROUP=
         SLL   R15,2         *4
         LA    R2,DOABOPTS(R15)  POINT TO OPTIONS
         LH    R0,0(,R2)     SPACE BETWEEN GROUPS
         LH    R5,2(,R2)     GROUP SIZE (INPUT, IN BITS)
DOABGLUP LR    R15,R5        COPY GROUP COUNT
         MIN   R15,(R4)      BUT NOT MORE THAN WHAT'S LEFT
DOABBLUP BCTR  R6,0          MAKE PREVIOUS POSITION
         STC   R3,0(,R6)     STASH CURRENT BIT
         NI    0(R6),1       KEEP ONLY BOTTOM BIT
         OI    0(R6),C'0'    MAKE IT EBCDIC 0 OR 1
         SRDL  R2,1          SET FOR NEXT BIT
         BCT   R15,DOABBLUP  DO NEXT BIT
         SR    R4,R5         ALLOW FOR BITS JUST DONE
         BNP   DOABTSOU      CHECK IF SIGNED PROCESSING NEEDED
         SR    R6,R0         INSERT SPACER (OR 0)
         B     DOABGLUP      DO IT AGAIN
DOABTSOU TM    FLAGS,FGNEG   IS SIGN PROCESSING DESIRED?
         BZ    DOAHBCOM      NO; JOIN COMMON
         LA    R14,OUTWORK   BLANK LEADING BITS FROM LEFT
         LR    R15,R6
         SR    R15,R14       LENGTH TO BLANK
         SR    R1,R1
         ICM   R1,8,MASK1    BLANK FILL
         MVCL  R14,R0
         BCTR  R6,0          BACK UP
         MVC   0(1,R6),CURRSIGN  PLANT A SIGN
         B     DOAHBCOM      JOIN COMMON
DOABOPTS DC    Y(0,32)  1/4   CENT=N  GROUP=N
         DC    Y(1,16)  2/4   CENT=Y  GROUP=N
         DC    Y(1,8)   3/4   CENT=N  GROUP=Y
         DC    Y(1,4)   4/4   CENT=Y  GROUP=Y
         SPACE 2
***********************************************************************
**                                                                   **
**  HEX(ADECIMAL) - IGNORE SIGN/FILL; SPACES: GROUP    CENT          **
**                XXXXXXXXXXXXXXXX              N        N           **
**               XXXXXXXX XXXXXXXX              N        Y           **
**             XXXX XXXX XXXX XXXX              Y        N           **
**         XX XX XX XX XX XX XX XX              Y        Y           **
**                                                                   **
***********************************************************************
DOSHEX   TM    0(R1),X'80'   IS INPUT POSITIVE?                 GP03304
         BZ    DOAHEX        YES; USE SAME CODE AS ABSOLUTE     GP03304
         TM    CPROPTS,OFSIGN  DOES USER WANT SIGN?             GP03304
         BZ    DOAHEX        NO (?)                             GP06004
         MVI   CURRSIGN,C'-'  SET IT                            GP03304
         OI    FLAGS,FGNEG   SET NEGATIVE                       GP03304
         SPACE 1                                                GP03304
DOAHEX   LA    R15,HEXWORK+L'HEXWORK POINT PAST                 GP03310
         SR    R15,R14       POINT TO INSERTION SPOT
         BCTR  R14,0         MAKE EXECUTE LENGTH
         EX    R14,MOV12F    MOVE TO LOCAL WORK AREA
         TM    FLAGS,FGNEG   WAS NEGATIVE ?                     GP06004
         BZ    DOAHEXCM      NO                                 GP06004
         XC    HEXWORK(L'HEXWORK),=16X'FF'  COMPLEMENT          GP06004
DOAHEXCM MVC   OUTWORK,BLANKS  CLEAR                            GP03304
         SR    R4,R4         PROCESS TWO BYTES AT A TIME
         IC    R4,CPRINPL    GET INPUT COUNT
         LA    R3,HEXWORK+L'HEXWORK    PAST LAST                GP06004
         LA    R6,OUTWORK+L'OUTWORK   PAST LAST OUTPUT
         IC    R15,CPROPTS   LOAD OPTIONS
         N     R15,=F'3'     ISOLATE CENT= AND GROUP=
         SLL   R15,2         *4
         LA    R2,DOAHOPTS(R15)  POINT TO OPTIONS
         LH    R0,0(,R2)     SPACE BETWEEN GROUPS
         LH    R5,2(,R2)     GROUP SIZE (INPUT)
         LA    R15,0(R5,R5)  DOUBLE INPUT
         LR    R14,R15       COPY OUTPUT LENGTH
         SLL   R14,4         SHIFT TO UNPK OUTPUT LENGTH POSITION
         OR    R14,R5        PLUS INPUT LENGTH
         BCTR  R15,0         ADJUST LENGTH FOR EX
DOAHNLUP CR    R4,R5         IS RESIDUAL SHORTER THAN GROUP LENGTH?
         BH    DOAHNLOT      NO; DO THIS
         SLR   R0,R0         SET FOR NO GAP                     GP04055
         BE    DOAHNLOT      BUT USE CURRENT VALUES
         LR    R5,R4         USE SHORTER INPUT LENGTH
         LA    R15,0(R5,R5)  DOUBLE INPUT
         LR    R14,R15       COPY OUTPUT LENGTH
         SLL   R14,4         SHIFT TO UNPK OUTPUT LENGTH POSITION
         OR    R14,R5        PLUS INPUT LENGTH
         BCTR  R15,0         ADJUST LENGTH FOR EX
DOAHNLOT SR    R6,R15        BACK-UP
         SR    R3,R5         DITTO
         BCTR  R6,0          FIX-UP
         EX    R14,EXHUNPK   UNPACK NEXT GROUP
         EX    R15,EXHTR     MAKE PRINTABLE EBCDIC
         EX    R15,EXHMVC    MOVE TO OUTPUT
         SR    R6,R0         LESS GROUP SEPARATION
         SR    R4,R5         LESS INCREMENT
         BP    DOAHNLUP      DO MORE
DOAHBCOM LA    R8,OUTWORK+L'OUTWORK
         SR    R8,R6         REQUIRED OUTPUT LENGTH
         LA    R1,OUTWORK+L'OUTWORK-1  SET STOPPER IF NO MATCH  GP03304
         OC    OUTWORK,BLANKS     CHANGE HEX ZERO TO BLANKS     GP03304
         TRT   OUTWORK,TRTNOSPC   FIND NON-BLANK                GP03304
         MIN   R1,(R6)       KEEP - AND FILL                    GP03304
         B     COMFORM       PROCESS IT
DOAHOPTS DC    Y(0,4)  1/4   CENT=N  GROUP=N
         DC    Y(1,4)  2/4   CENT=Y  GROUP=N
         DC    Y(1,2)  3/4   CENT=N  GROUP=Y
         DC    Y(1,1)  4/4   CENT=Y  GROUP=Y
EXHUNPK  UNPK  PACK16(0),0(0,R3)  UNPACK NEXT PAIR
EXHTR    TR    PACK16(0),TRHEXTAB  MAKE PRINTABLE
EXHMVC   MVC   0(0,R6),PACK16  MOVE TO OUTPUT
         TITLE '@ F O R M A T S  ***  FD CONVERSION ROUTINES'
***********************************************************************
**                                                                   **
**  CONVERSION FUNCTIONS USED BY @PRINTER, @SCREENS, AND EXHASCRN    **
**                                                                   **
***********************************************************************
         DROP  ,
         USING @FORMATS,R11,R12
CONINIT  SERVWORK '@FOR',FSALEN,OREG=R8   FIND/GET WORK AREA    GP05020
         USING SAVEAREA,R13
         CH    R15,=H'4'     FIRST TIME?
*TEST*   BNE   CONTRAN       HAVE IT
         LA    R14,TNTRTAB   GET DEFAULT FOR TN TRAIN
         ST    R14,PWTRAN    SET TRANSLATE TABLE                GP03134
CONTRAN  MVC   CALLR15(3*4),16(R8)  SET CALLER'S R15-R1         GP05020
         MVI   FLAGS,FGALT   SHOW ALTERNATE ENTRY (NOT @FORMAT) GP03291
         BR    R9
         SPACE 1                                                 82102
*---------------------------------------------------------------------*
*                                                                     *
*  COMMON ENTRY SETUP FOR DATA CONVERT FUNCTIONS                      *
*    ENTRY R0 LENGTH  R1 ADDRESS  R15 FLAGS, ETC.                     *
*                                                                     *
*---------------------------------------------------------------------*
CONVPARM LM    R4,R6,CALLR15  LOAD CALLER'S R15, R0, AND R1      81193
         LTR   R7,R4         GET ENTRY CODE TO THIS THING        81193
         BM    BADSET        NEGATIVE; DEB, ETC. ENTRY
         LTR   R0,R5         ANY LENGTH ?
         BM    CONVSTRG      NO; RETURN WITH ERROR               81193
         BP    CONVPARP      PLUS; USE IT                        81193
         LA    R14,CONVLDEF(R7)   POINT TO DEFAULT LENGTHS
         ICM   R5,1,0(R14)   LOAD AND TEST DEFAULT LENGTH        90002
         BZ    BADSET        ERROR IF STILL ZERO                 81208
         BP    CONVPARP      POSITIVE - PROCEED                  90002
         SR    R5,R5         ELSE ZERO IT                        90002
         B     CONVSTRG      AND TAKE NORMAL EXIT                90002
CONVPARP LA    R14,CONVLBRX  GET MAXIMUM OFFSET                  81193
         CR    R7,R14        CHECK FOR MAXIMUM
         BLR   R9            RETURN OK
BADSET   L     R5,=F'-701'   MAKE NEGATIVE
         B     CONVSTRG      RETURN WITH ERROR
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  COMMON ENTRY SETUP FOR SERVICE FUNCTIONS                           *
*    ENTRY R0 LENGTH  R1 ADDRESS  (CENTER ALSO HAS R15 = OUTLEN)      *
*                                                                     *
*---------------------------------------------------------------------*
CONVPAR2 LM    R5,R6,CALLR0  LOAD USER'S ENTRY VALUES
         LTR   R0,R5         TEST
         BM    BADSET        FAIL IT
         BZ    CONVSTRG      SKIP IF ZERO
         BR    R9            OK ?
         SPACE 2
***********************************************************************
**  DEBLANK A STRING -> STRIP(STRING,"B"," ")                        **
***********************************************************************
DBK      #CONHEAD ,          ENTRY CODE FOR DEBLANKING           82102
         BALS  R9,CONVPAR2   DEBLANK LEFT AND RIGHT              93164
         SPACE 1                                                 81193
*---------------------------------------------------------------------*
*  EXIT FOR CONVERSION FUNCTIONS WITH DEBLANKING                 81193*
*---------------------------------------------------------------------*
CONVEND  BALS  R14,DBKLEFT   DEBLANK LEFT                        93164
         BALS  R14,DBKRIGHT  DEBLANK RIGHT                       93164
         SPACE 1
*---------------------------------------------------------------------*
*  COMMON EXIT FOR ALL CONVERT FUNCTIONS                         81193*
*---------------------------------------------------------------------*
CONVSTRG STM   R5,R6,RSNCODE   SET STRING LENGTH, ADDRESS       GP03122
CONVEXIT #CONEXIT ,          RETURN TO CALLER                   GP03122
         SPACE 1
***********************************************************************
**  DEBLANK LEFT     -> STRIP(STRING,"H"," ")                        **
***********************************************************************
DBKL     #CONHEAD ,          ENTRY CODE FOR LEFT DEBLANKING      82102
         BALS  R9,CONVPAR2   DEBLANK LEFT ONLY                   93164
         BALS  R14,DBKLEFT                                       93164
         B     CONVSTRG
         SPACE 1
***********************************************************************
**  DEBLANK RIGHT    -> STRIP(STRING,"T"," ")                        **
***********************************************************************
DBKR     #CONHEAD ,          ENTRY CODE FOR TRAILING DEBLANKING  82102
         BALS  R9,CONVPAR2   DEBLANK RIGHT ONLY                  93164
         BALS  R14,DBKRIGHT                                      93164
         B     CONVSTRG
         SPACE 1
***********************************************************************
**  DEBLANK ZEROES   -> STRIP(STRING,"H","0")                        **
***********************************************************************
DBKZ     #CONHEAD ,          ENTRY CODE FOR LEADING ZERO DELETION
         BALS  R9,CONVPAR2   GO TO COMMON SETUP                  93164
         CLI   0(R6),C'-'    LEADING MINUS ?
         BE    DBKZS         YES; PRESERVE IT
         CLI   0(R6),C'+'    OR PLUS SIGN ?
         BNE   DBKZP         NO
DBKZS    IC    R3,0(,R6)     SAVE THE SIGN
         LA    R6,1(,R6)     SKIP IT
         SH    R5,=H'1'      DECREASE LENGTH
         BNP   BADSET        ERROR
         BALS  R14,DBKZERO   KILL LEADING ZEROES                 93164
         BCTR  R6,0
         LA    R5,1(,R5)
         STC   R3,0(,R6)     REPLACE SIGN
         B     CONVSTRG
DBKZP    BALS  R14,DBKZERO   DELETE LEADING ZERO                 93164
         B     CONVSTRG
         SPACE 1
***********************************************************************
**  CENTER A STRING (OUTLEN IN R15 <= 256)                           **
***********************************************************************
CENTER   #CONHEAD ,          ENTRY CODE FOR CENTERING
         BALS  R9,CONVPAR2   LOAD PARAMETERS
         ICM   R4,15,CALLR15   LOAD OUTPUT LENGTH
         BNP   CONVEND       INVALID - IGNORE
         MIN   R4,=Y(L'DBSAVE),TYPE=H  TRUNCATE IF TOO LONG
         BALS  R14,DBKLEFT   STRIP FROM
         BALS  R14,DBKRIGHT    BOTH SIDES
         LTR   R5,R5         STILL HAVE DATA ?
         BNP   CONVSTRG      NO; JUST RETURN
         CR    R4,R5         IS OUTPUT GREATER, EQUAL, OR SMALLER ?
         BE    CONVSTRG      EQUAL (UNLIKELY?)
         BH    CENTMVC       LARGER - NEED TO MOVE DATA AND CENTER
*TRUNC   BL    CENTRUNC      SMALLER - NEED TO TRUNCATE
         LR    R3,R5         COPY INPUT LENGTH
         SR    R3,R4         LESS SIGNIFICANT LENGTH
         SRL   R3,1          LEFT TRUNCATION
         LR    R5,R4         NEW LNGTH
         AR    R6,R3         AND TRUNCATE
         B     CONVSTRG
         SPACE 1
CENTMVC  MVI   DBSAVE,C' '
         MVC   DBSAVE+1(L'DBSAVE-1),DBSAVE  CLEAR
         LR    R3,R4         COPY OUTPUT LENGTH
         SR    R3,R5         LESS SIGNIFICANT LENGTH
         SRL   R3,1          LEFT PADDING
         LA    R3,DBSAVE(3)  START OF MOVE DESTINATION
         BCTR  R5,0          ADJUST LENGTH
         EX    R5,EXCNTMVC   MOVE
         LA    R6,DBSAVE     SET NEW ADDRESS
         LR    R5,R4         SET NEW LENGTH
         B     CONVSTRG
EXCNTMVC MVC   0(0,R3),0(R6)  MOVE USER'S TEXT CENTERED
         SPACE 2
*---------------------------------------------------------------------*
*  DEBLANK LEFT                                                       *
*---------------------------------------------------------------------*
DBKLEFT  LTR   R5,R5         VALID LENGTH ?
         BNPR  R14           NO; QUIT
DBKLEFTY TM    0(R6),255-C' '  LEADING BLANK/NULL ?
         BNZR  R14           NO; RETURN TO CALLER
         LA    R6,1(,R6)     NEXT BYTE
         BCT   R5,DBKLEFTY   TRY AGAIN
         MVI   FLAGTEXT,C' '                                    GP03287
         MVC   FLAGTEXT+1(L'FLAGTEXT-1),FLAGTEXT  BLANK FOR SPACING
         LA    R6,FLAGTEXT   FIX FOR DEBR & RADJ                GP04056
         BR    R14           NULL
         SPACE 1
*---------------------------------------------------------------------*
*  STRIP ZEROES                                                       *
*---------------------------------------------------------------------*
DBKZERO  LTR   R5,R5         VALID LENGTH ?
         BNPR  R14           NO; QUIT
DBKZEROS CLI   0(R6),C'0'    LEADING ZERO
         BNZR  R14           NO; RETURN                         GP14131
         LA    R6,1(,R6)
         BCT   R5,DBKZEROS   TRY AGAIN
         BCTR  R6,0          BACKSPACE
         LA    R5,1          LEAVE ONE ZERO
         BR    R14           RETURN
         SPACE 1
*---------------------------------------------------------------------*
*  DEBLANK RIGHT                                                      *
*---------------------------------------------------------------------*
DBKRIGHT LTR   R5,R5         VALID LENGTH ?
         BNPR  R14           NO; QUIT
         LA    R15,0(R5,R6)  SPACE TO LAST BYTE+1
DBKRIGHS BCTR  R15,0
         TM    0(R15),255-C' '   TRAILING BLANK/NULL ?
         BNZR  R14           NO; RETURN
         BCT   R5,DBKRIGHS   TRY AGAIN
         BR    R14           RETURN
         SPACE 2
***********************************************************************
**  CURRENT DATE  YY/MM/DD                                           **
***********************************************************************
DATE     #CONHEAD ,          ENTRY CODE FOR DATE ROUTINE         82102
DATEDFLT SR    R3,R3         SIGNAL NO DATE SUPPLIED            GP03290
         BALS  R9,DATEFIX    FIX DATE INFORMATION               GP03290
DATECOM  BALS  R9,CONVDADA   GO TO COMMON DATE ROUTINE           93164
         SRDA  R2,32         PREPARE FOR DIVIDE                  84170
         D     R2,=F'100'    LEAVE R2 WITH YEAR AND DECADE ONLY  84170
         LA    R3,C'/'       SET DATE SEPARATOR                  81193
DATEMULT MH    R4,=H'100'                                        81193
         AR    R1,R4
         MH    R1,=H'100'
         AR    R1,R2
         CVD   R1,DB
         B     DATETIME
         SPACE 1                                                GP03290
*---------------------------------------------------------------------*
*  COMMON DATE FIXER-UPPER                                            *
*---------------------------------------------------------------------*
DATEFIX  CH    R3,=H'2'      LESS THAN THREE BYTES ?             81193
         BL    DATEFIXC      YES; USE CURRENT DATE               81193
         TM    DB+7,X'F0'    DO WE HAVE A DAY ?                 GP03290
         BZ    DATEFIXC      NO; USE CURRENT                    GP03290
         OI    DB+7,X'0F'    MAKE POSITIVE SIGN                 GP03290
         CLI   DB+4,1        DID USER PASS A CENTURY ?          GP03290
         BH    DATEFIXD      YES                                GP03290
         CLI   DB+5,X'80'    1980 OR LATER ?                    GP03290
         BNL   DATEFIXD      YES                                GP03290
         MVI   DB+4,X'20'    ELSE SET 2000+                     GP03290
         B     DATEFIXD                                         GP03290
DATEFIXC TIME  TU            GET THE DATE                        84170
         ST    R1,DB+4                                           84170
DATEFIXD CLI   DB+4,X'19'    IS THERE A CENTURY VALUE?          GP02322
         BL    DATEFIXM      NO; RETAIN IT                      GP02322
         SP    DB+4(4),=P'1900000' CHANGE TO BASE               GP02322
DATEFIXM L     R1,DB+4       ALSO LOAD VALUE                    GP03290
         BR    R9            RETURN TO CALLER                   GP03290
         SPACE 1
***********************************************************************
**  CURRENT TIME  HH:MM:SS                                           **
***********************************************************************
TIME     #CONHEAD ,          ENTRY CODE FOR TIME ROUTINE         82102
TIMEDFLT TIME  DEC           GET THE TIME                        81193
TIMECOM  SRL   R0,4          KNOCK OUT 1/100 OF SEC              81193
         XC    DB,DB
         ST    R0,DB+4
         OI    DB+7,X'0F'
         LA    R3,C':'       SET THE TIME SEPARATOR CHARACTER    81193
         SPACE 1
*---------------------------------------------------------------------*
*  COMMON DATE/TIME OUTPUT FORMATTING                                 *
*---------------------------------------------------------------------*
DATETIME MVC   DBWORK(10),DATEPAT
         STC   R3,DBWORK+4   SET THE SEPARATOR CHARACTER         81193
         STC   R3,DBWORK+7                                       81193
         ED    DBWORK(10),DB+4
         LA    R6,DBWORK+2   SET OUTPUT ADDRESS
         LA    R5,8          SET OUTPUT LENGTH
         B     CONVSTRG
         EJECT ,
***********************************************************************
**                                                                   **
**  INDEXED CONVERSION FUNCTIONS (STORAGE MODE)                      **
**    NOTE THAT AN FD VALUE HAS BEEN DECREASED BY 1 AT ENTRY         **
**                                                                   **
***********************************************************************
CONVERT  #CONHEAD ,          ENTRY CODE FOR CONVERSION ROUTINES  82102
         BALS  R9,CONVPARM   DO COMMON INITIALIZATION            93164
         SR    R1,R1                                             81193
         IC    R1,CONVLMAX(R7)  GET MAXIMUM INPUT LENGTH         81193
         CR    R5,R1         LONGER ?                            81193
         BNH   *+6           NO                                  81193
         LR    R5,R1         TRUNCATE INPUT                      81193
         LR    R3,R5                                             81193
         BCTR  R3,0          MAKE LENGTH FOR EXECUTES            81193
         XC    DB,DB         CLEAR FOR SOME FUNCTIONS            81193
         LR    R15,R7        COPY VALUE                         GP03293
         SLL   R15,2         CONVERT FUNCTION TO OFFSET         GP03293
         LA    R14,CONVTABL(R15)  POINT TO ENTRY                GP03293
         LH    R15,0(,R14)   GET OFFSET                          81193
         B     CONVCHAR(R15)  BRANCH TO PROCESSOR                81193
         SPACE 1                                                GP03293
CONVFORM STC   R5,CPRINPL    SET INPUT LENGTH                   GP03293
         ST    R6,CALLR1     SET INPUT ADDRESS                  GP03293
         MVC   CPRTYPE(L'CPRTYPE+L'CPROPTS),2(R14)  COPY TYPE/FMT PARMS
         LR    R10,R6        MAKE NON-ZERO INDICATOR            GP03293
         B     NEWFORM       GO TO NEW CODE                     GP03293
         SPACE 1              FD VALUE                          GP03293
         MAPFDFUN CHAR,255,8     1  CHARACTER                   GP03287
         MAPFDFUN NULL,255,8     2  CONTROL CHARACTERS          GP03287
         MAPFDFUN NULL,255,8     3  AS-IS CHARACTERS            GP03287
         MAPFDFUN ADDR,8,4       4  ADDRESS OF ITEM             GP03287
         MAPFDFUN FORM,16,4,     5  UNSIGNED HEX                GP03287*
               FMT=(7) OFF=SHEX                                 GP04118
         MAPFDFUN FORM,16,4,     6  SIGNED HEX                  GP03290*
               FMT=(6,OFSIGN),OFF=SHEX                          GP04118
         MAPFDFUN FORM,4,0,      7  BIT STRING                  GP03287*
               FMT=(9)                                          GP04118
         MAPFDFUN FORM,8,4,      8  SIGNED INTEGER              GP03287*
               FMT=(4,OFSIGN)                                   GP04118
         MAPFDFUN FORM,8,4,      9  SIGNED $ AMOUNT (NNN,NNN.NN)       *
               FMT=(4,OFSIGN+OFGROUP+OFCENT)                    GP04118
         MAPFDFUN FORM,16,0,    10  PACKED DECIMAL                     *
               FMT=(2,OFSIGN)                                   GP04118
         MAPFDFUN FORM,16,0,    11  PACKED $ AMOUNT (NNN,NNN.NN)       *
               FMT=(2,OFSIGN+OFGROUP+OFCENT)                    GP04118
         MAPFDFUN FFIX,8,4      12  FLOATING POINT IN G FORMAT  GP03287
         MAPFDFUN TIME,4,0      13  TIME - BINARY               GP03287
         MAPFDFUN TIMD,4,0      14  TIME - PACKED FORM IN       GP03287
         MAPFDFUN DATE,4,0      15  DATE   MM/DD/YY             GP03287
         MAPFDFUN DATJ,4,0      16  DATE   YY.DDD (JULIAN)      GP03287
         MAPFDFUN WDAY,4,0      17  DAY OF WEEK (CL9)           GP03287
         MAPFDFUN MNTH,4,0      18  MONTH                       GP03287
         MAPFDFUN DAY#,4,0      19  DAY (NN)                    GP03287
         MAPFDFUN MMDD,4,0      20  MON DD                      GP03287
         MAPFDFUN DMIL,4,0      21  DD MON YY                   GP03287
         MAPFDFUN DMDY,4,0      22  MON DD, YYYY                GP03287
         MAPFDFUN CHEX,16,4     23  HEX, UNLESS PRINTABLE TEXT  GP03287
         MAPFDFUN FORM,8,4,     24  INTEGER NNN,NNN             GP03290*
               FMT=(4,OFSIGN+OFGROUP)                           GP04118
         MAPFDFUN FORM,8,4,     25  INTEGER NNNNN.NN            GP03287*
               FMT=(4,OFSIGN+OFCENT)                            GP04118
         MAPFDFUN FORM,8,4,     26  INTEGER W/LEADING ZEROES 000NNNNN  *
               FMT=(4,OFSIGN+OFFILL)                            GP04118
         MAPFDFUN FORM,8,4,     27  ABSOLUTE INTEGER            GP03287*
               FMT=(5)                                          GP04118
         MAPFDFUN FORM,16,0,    28  PACKED NNN,NNN              GP03290*
               FMT=(2,OFSIGN+OFGROUP)                           GP04118
         MAPFDFUN FORM,16,0,    29  PACKED NNNNN.NN             GP03287*
               FMT=(2,OFSIGN+OFCENT)                            GP04118
         MAPFDFUN FORM,16,0,    30  PACKED W/LEADING ZEROES 000NNNNN   *
               FMT=(2,OFSIGN+OFFILL)                            GP04118
         MAPFDFUN FORM,16,0,    31  ABSOLUTE PACKED             GP03287*
               FMT=(0)                                          GP04118
         MAPFDFUN EDAT,4,0      32  INTERNATIONAL DATE YYYY-MM-DD
         MAPFDFUN DATD,4,3      33  DSCB 1 DATE FORMAT (X,H)    GP03287
         MAPFDFUN NULL,4,0      34    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      35    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      36    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      37    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      38    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      39    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      40    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      41    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      42    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      43    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      44    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      45    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      46    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      47    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      48    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      49    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      50    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      51    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      52    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      53    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      54    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      55    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      56    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      57    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      58    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      59    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      60    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      61    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      62    --RESERVED--              GP03287
         MAPFDFUN NULL,4,0      63    --RESERVED--              GP03287
         MAPFDFUN FLAG,80,1     64  FLAG BIT FORMATTING         GP03287
*TEST*   MAPFDFUN FLAG,80,1     65  FLAG BIT FORMATTING         GP03287
*TEST*   MAPFDFUN FLAG,80,1     66  FLAG BIT FORMATTING         GP03287
         SPACE 2                                                GP03287
CONVTABL MAPFDFUN CONVOFF
CONVLBRX EQU   (*-CONVTABL)/2    MAXIMUM VALID
         SPACE 2
CONVLMAX MAPFDFUN CONVMAX
         SPACE 2
CONVLDEF MAPFDFUN CONVDEF
         SPACE 1
CONVCHAR ICM   R14,15,PWTRAN  GET OUTPUT TRANSLATE              GP99028
         BZ    CONVSTRG      NONE; SKIP
         EX    R3,CVCMVOUT   MOVE DATA TO SAVE AREA              81193
         LA    R6,DBSAVE     SET SAVE AREA ADDRESS               81193
         EX    R3,CVCTROUT   TRANSLATE                           81193
CONVNULL B     CONVSTRG      RETURN                              81193
CVCMVOUT MVC   DBSAVE(0),0(R6)  MOVE TEXT TO SAVE AREA           81193
CVCTROUT TR    0(0,R6),0(R14)  TRANSLATE                         84170
CVCCLOUT CLC   0(0,R6),0(R1)  TRANSLATED TEXT SAME AS SOURCE ?   84170
         SPACE 1                                                 84170
CONVCHEX ICM   R14,15,PWTRAN GET TRANSLATE TABLE                 84170
         BNZ   *+8           HAVE ONE                            84170
         LA    R14,TNTRTAB   GET DEFAULT FOR TN TRAIN           GP03134
         EX    R3,CVCMVOUT   MOVE DATA TO SAVE AREA              84170
         LR    R1,R6         SAVE USER'S ADDRESS                 84170
         LA    R6,DBSAVE     SET FOR COPY                        84170
         EX    R3,CVCTROUT   TRANSLATE IT                        84170
         EX    R3,CVCCLOUT   COMPARE TO ORIGINAL                 84170
         BE    CONVSTRG      EQUAL - PRINTABLE                   84170
         LR    R6,R1         RESTORE USER'S ADDRESS              84170
         B     CONVUHEX      PROCESS AS HEX                      84170
         SPACE 1
CONVSHEX XC    DBWORK2(4),DBWORK2   PRECLEAR                     81193
         EX    R3,COHXMVC    MOVE TO WORK AREA                   81193
         MVI   DB+6,C'+'     PROVISIONALLY SET POSITIVE
         ICM   R6,15,DBWORK2  LOAD VALUE                         81193
         BNM   CONVSHEP      DONE IF PLUS
         MVI   DB+6,C'-'     ELSE SET MINUS SIGN
         SPM   R5            KILL PROGRAM MASK (FOR X'80000000') 81193
         LPR   R6,R6         NOW KILL THE SIGN
         SPM   R9            RESTORE PROGRAM MASK                81193
         B     CONVSHEP      GO TO COMMON CODE                   81193
         SPACE 1
CONVADDR LR    R2,R5         COPY                                81193
         SLL   R2,3          CONVERT TO BIT COUNT
         LA    R4,32         MAX BITS                            81193
         SR    R4,R2         BITS TO SHIFT                       81193
         SLL   R6,0(R4)      LINE UP                             82025
CONVSHEP ST    R6,DB         SET IT                              81193
         LA    R6,DB
CONVUHEX EX    R3,COHXMVC    MOVE TO TEMP AREA                   81193
         UNPK  DBWORK(9),DBWORK2(5)  UNPACK FIRST WORD
         UNPK  DBWORK+8(9),DBWORK2+4(5)  AND POSSIBLE SECOND
         TR    DBWORK(16),HEXTAB-C'0'  MAKE EBCDIC
         LA    R6,DBWORK
         SLL   R5,1          OUTPUT LENGTH IS TWICE INPUT
         CH    R7,=Y(FUNSHEX)   SIGNED HEX OPTION ?
         BNE   CONVSTRG      NO; EXIT WITHOUT DEBLANKING         81193
         BALS  R14,DBKZERO   DELETE LEADING ZERO                 93164
         BCTR  R6,0          BACKSPACE A BYTE
         LA    R5,1(,R5)     UP LENGTH BY ONE
         MVC   0(1,R6),DB+6  COPY SIGN
         B     CONVEND
COHXMVC  MVC   DBWORK2(0),0(R6)  MOVE USER'S DATA
         SPACE 1
CONVBITS EX    R3,COHXMVC    MOVE USER DATA TO WORK AREA         81193
         LA    R6,DBWORK     POINT TO OUTPUT AREA                81193
         SLL   R5,3          OUTPUT LENGTH IS 8*INPUT
         LR    R4,R6         SET START CONVERSION ADDRESS        81193
         LA    R3,DBWORK-1(R5)  SET LAST OUTPUT POSITION         81193
         LA    R2,1          SET BXLE INCREMENT                  81193
         L     R1,DBWORK2    LOAD BITS TO BE PROCESSED           81193
CONVBITL LA    R0,C'0'/2     MAKE 0 OR 1 WITH NEXT SHIFT         81193
         SLDL  R0,1          ISOLATE LEFT-MOST BIT
         STC   R0,0(,R4)     STASH IT                            81193
         BXLE  R4,R2,CONVBITL  REPEAT FOR NEXT BIT               81193
         B     CONVSTRG      NO EDITING
         SPACE 2                                                GP03283
***********************************************************************
**                                                                   **
**  PROCESS FLAG REQUEST - FORMAT FLAG BITS AS TEXT                  **
**  R4 - TABLE ADDRESS  R6 - VARIABLE  R5 - VAR. LENGTH              **
**                                                                   **
***********************************************************************
         PUSH  USING                                            GP03283
CONVFLAG LTR   R3,R5         TEST LENGTH                        GP03283
         BNP   CONVNULL      NOTHING USABLE - QUIT              GP03283
         CH    R3,=Y(L'CB)   NOT TOO LONG ?                     GP03283
         BH    CONVNULL      TOO LONG, TOO BAD - DO AS HEX      GP03283
         NI    FLAGS,FGALT   RESET FLAG BITS                    GP03283
         MVI   FLAGTEXT,C' '                                    GP03287
         MVC   FLAGTEXT+1(L'FLAGTEXT-1),FLAGTEXT  BLANK FOR SPACING
         BCTR  R3,0          MAKE EXECUTE LENGTH                GP03283
         EX    R3,EXMVCDB3   MOVE TO MY WORK SPACE              GP03283
         LA    R5,FLAGTEXT   START OF OUTPUT                    GP03283
         GETREG R2           RESTORE CALLER'S R2                GP03287
         L     R4,0(,R2)     LOAD TABLE ADDRESS                 GP03287
         USING FGTENT,R4     MAP INPUT TABLE                    GP03283
         SR    R6,R6         CLEAR TEXT LENGTH FLAG             GP03283
FFGLOOP  ICM   R6,1,FGTLEN   END OF TABLE ?                     GP03283
         BM    CONVFEND      YES; ALL DONE                      GP03283
         EX    R3,EXZERMSK   IS THIS A NULL MASK ?              GP03283
         BNZ   FFGTEST       NO; TEST FOR MATCH                 GP03283
         TM    FLAGS,FGNEG   DID WE HAVE A PRIOR MATCH ?        GP03283
         BZ    FFGMOVE       NO; MOVE THIS ONE                  GP03283
         NI    FLAGS,255-FGNEG  RESET HIT FLAG                  GP03283
         B     FFGNEXT       AND BUMP                           GP03283
         SPACE 1                                                GP03283
FFGTEST  MVC   DB,CB         MOVE COPIED FLAGS TO TEST AREA     GP03283
         EX    R3,EXANDMSK   AND MASK BITS                      GP03283
         EX    R3,EXCLCMSK   IS THIS A MATCH ?                  GP03283
         BNE   FFGNEXT       NO, TRY NEXT ONE                   GP03283
         OI    FLAGS,FGNEG   SHOW MATCH                         GP03283
         SPACE 1                                                GP03283
FFGMOVE  TM    FLAGS,FGSEP   DO WE NEED A SEPARATOR ?           GP03287
         BZ    FFGMOVES      NO; BUT NEXT TIME                  GP03287
         CLI   6(R2),0       SEPARATOR WANTED ?                 GP03287
         BE    FFGMOVEN      NO                                 GP03287
         MVC   0(1,R5),6(R2)  MOVE SEPARATOR                    GP03287
         LA    R5,1(,R5)     INCREMENT                          GP03287
FFGMOVEN SR    R0,R0                                            GP03287
         IC    R0,7(,R2)     GET CHARACTER SPACE COUNT          GP03287
         AR    R5,R0         SPACE THOSE                        GP03287
FFGMOVES OI    FLAGS,FGSEP   NEED A SEPARATOR NEXT TIME         GP03283
         LA    R0,FLAGTEXT+L'FLAGTEXT-1-1                       GP03283
         SR    R0,R6                                            GP03283
         CR    R5,R0         WILL IT FIT ?                      GP03283
         BNH   FFGMOVER                                         GP03283
CONVFEND LA    R5,L'FLAGTEXT                                    GP03287
         LA    R6,FLAGTEXT                                      GP03287
         BALS  R14,DBKLEFT   TRIM A BIT                         GP03287
         BALS  R14,DBKRIGHT  TRIM A BIT                         GP03287
         B     CONVSTRG      AND QUIT THIS ONE                  GP03283
FFGMOVER LAE   R14,FGTTEXT(R3)  POINT TO TEXT                   GP03283
         EX    R6,EXMVCR14   MOVE TO OUTPUT AREA                GP03283
         AIF   (NOT &MVSESA).NOCPYA                             GP04234
         CPYA  R14,R1        CLEAR ACR14 AGAIN                  GP03283
.NOCPYA  MVC   DB,=16X'FF'   PREPARE TO COMPLIMENT              GP03283
         EX    R3,EXEXODB    COMPLEMENT TEST BITS               GP03283
         NC    CB,DB         AND TURN OFF                       GP03283
         LA    R5,1(R6,R5)   NEXT OUTPUT POSITION               GP03283
         SPACE 1                                                GP03283
FFGNEXT  LA    R4,3(R3,R4)   POINT TO NEXT INPUT TABLE POSITION GP03283
         AR    R4,R6           PLUS TEXT LENGTH                 GP03283
         B     FFGLOOP       TEST FOR END OR NEXT               GP03283
         SPACE 1                                                GP03283
EXEXODB  XC    DB(0),FGTMASK COMPLEMENT MASK BITS               GP03283
EXMVCTXT MVC   FLAGTEXT(0),PACK16 MOVE FROM WORK AREA           GP03283
EXMVCR14 MVC   FLAGTEXT-FLAGTEXT(0,R5),0(R14) MOVE FROM TABLE   GP03283
EXMVCDB3 MVC   CB(0),0(R6)   MOVE USER'S VALUE                  GP03283
EXANDMSK NC    DB(0),FGTMASK AND USER'S MASK                    GP03283
EXCLCMSK CLC   DB(0),FGTMASK COMPARE RESULT TO USER'S MASK      GP03283
EXZERMSK CLC   FGTMASK(0),=8X'0'   NULL MASK ?                  GP14138
         POP   USING                                            GP03283
         SPACE 1                                                GP03283
FGTENT   DSECT ,                                                GP03283
FGTLEN   DS    X             LENGTH-1 OF TEXT                   GP03283
FGTMASK  DS    X             MASK OF LENGTH (R3) {LATER (R3)-1} GP03283
FGTTEXT  DS    0C            VARIABLE LENGTH TEXT               GP03283
@FORMATS CSECT ,                                                GP03283
         SPACE 1                                                 81193
CNVMVCDB LA    R4,DB+8       SET LOCATION TO MOVE TO +
         SR    R4,R5          ADJUST FOR LENGTH TO BE MOVED
         EX    R3,CONVMVCT   MOVE IT                             81193
         LM    R0,R1,DB      LOAD FOR SOME CALLERS               81193
         BR    R9            RETURN                              81193
CONVMVCT MVC   0(0,R4),0(R6)   MOVE INPUT DATA                  GP03304
         SPACE 2
FR0      EQU   0                                                 81193
FR2      EQU   2                                                 81193
FR4      EQU   4                                                 81193
FR6      EQU   6                                                 81193
*   THE CONVFFIX CODE IS LOSELY BASED ON CODE WRITTEN BY
*   STEVE SILVER, AS MODIFIED BY VIC TOLOMEI (URSA)
*     OBTAINED FROM A CBT TAPE IN THE LATE SEVENTIES OR EARLY EIGHTIES
         SPACE 1
CONVFFIX STD   FR0,GWSAVE0   SAVE ALL FLOATING REGISTERS         81193
         STD   FR2,GWSAVE2                                       81193
         STD   FR4,GWSAVE4                                       81193
         STD   FR6,GWSAVE6                                       81193
         MVC   DBWORK2+4(4),=X'6FFFFFFF'  FUDGE FACTOR FOR SHORT 81193
         EX    R3,COHXMVC    MOVE TO WORK AREA                   81193
         LA    R4,0(R3,R3)   SET PRECISION TO 2*(L'INPUT-1)      81193
         LA    R6,DBWORK     POINT TO OUTPUT AREA                81193
         LA    R5,1          SET LENGTH FOR ZERO                 81193
         MVI   DBWORK,C'0'   PRESET FOR ZERO VALUE               81193
         SR    R2,R2         CLEAR EXPONENT AND ZERO FOR PGM MASK
         SPM   R2            KILL MASKABLE INTERRUPTIONS         81193
         LD    FR0,DBWORK2   GET USER'S NUMBER                   81193
         AD    FR0,DB        NORMALIZE BY ADDING ZERO            81193
         LTDR  FR0,FR0       CHECK THE SIGN                      81193
         BZ    CVGEXIT       ZERO; RESET EVERYTHING              81193
         MVI   DBWORK,C' '   SET FOR POSITIVE VALUE              81193
         BP    CVGMAGN       PLUS - GO ON                        81193
         LPDR  FR0,FR0       FORCE POSITIVE                      81193
         MVI   DBWORK,C'-'    BUT SET SIGN                       81193
CVGMAGN  CD    FR0,=X'7FFFFFFFFFFFFF00'   IN SAFE RANGE ?        81193
         BNH   *+8           YES; LEAVE IT ALONE                 81193
         LD    FR0,=X'7FFFFFFFFFFFFF00'  ELSE FORCE MAX SUPPORTED
         MD    FR0,=X'4110000000000010'  FINAGLE (INSTEAD OF ROUND)
         LD    FR4,=D'10'    SET FR4 TO 10                       81193
         LD    FR6,=D'1'     SET FR6 TO 1                        81193
         LD    FR2,=D'.1'    SET FR2 TO .1                       81193
         LA    R5,DBWORK+2   SET ADDRESS OF FIRST DIGIT          81193
CVGDIV10 CDR   FR0,FR6       LESS THAN 1 ?                       81193
         BL    CVGMUL10      IF SO, GO TO NEXT PART              81193
         DDR   FR0,FR4       NO - DIVIDE BY 10                   81193
         LA    R2,1(,R2)     INCREMENT EXPONENT                  81193
         B     CVGDIV10      CONTINUE                            81193
CVGMUL10 CDR   FR0,FR2       LESS THAN .1 ?                      81193
         BNL   CVGXPREP      IF NOT, PREPARE FOR DIGIT EXTRACTION
         BCTR  R2,0          DECREMENT EXPONENT                  81193
         MDR   FR0,FR4       MULT NUMBER BY 10                   81193
         B     CVGMUL10      CONTINUE                            81193
CVGXPREP LR    R0,R4         GET PRECISION                       81193
         LD    FR6,=X'4100000000000000'  NORMALIZE TO LEFT INTEGER
         STD   FR6,CVGINT    SAVE FOR SUBTRACT                   81193
CVGEXTRA MDR   FR0,FR4       MAKE HIGH DIGIT INTO INTEGER        81193
         AWR   FR0,FR6       UNNORMALIZE TO LEFT NYBBLE          81193
         STD   FR0,DB        STORE RESULT                        81193
         MVZ   CVGINT+1(1),DB+1  ISOLATE HIGH DIGIT              81193
         PACK  0(1,R5),DB+1(1)  MOVE DIGIT TO LOW NYBBLE OF RESULT
         OI    0(R5),C'0'    MAKE EBCDIC                         81193
         LA    R5,1(,R5)     POINT TO NEXT OUTPUT POSITION       81193
         SD    FR0,CVGINT    SUBTRACT TO GET RESIDUAL FRACTION   81193
         BCT   R0,CVGEXTRA   LOOP FOR ALL BYTES                  81193
         MVI   DBWORK+1,C'.'  SET THE DECIMAL POINT              81193
         LTR   R2,R2         ANY EXPONENT PROCESSING ?           81193
         BZ    CVGNOEXP      NO; JUST KILL TRAILING ZEROES       81193
         BM    CVGMNEXP      IF MINUS, FIX AND TEST LATER        81193
         CR    R2,R4         REPRESENTABLE AS INTEGER ?          81193
         BH    CVGMNEXP      NO; TACK THE EXPONENT ON            81193
         EX    R2,CVGMVC     MOVE INTEGER PORTION                81193
         LA    R2,DBWORK+1(R2) GET DECIMAL POINT LOCATION        81193
         MVI   0(R2),C'.'    SET THE DECIMAL POINT               81193
CVGNOEXP LA    R14,CVGEXIT   DELETE TRAILING ZEROES AND DECIMAL POINT
         SPACE 1                                                 81193
DBKTRAIL LA    R6,DBWORK     GET START OF NUMBER                 81193
         SR    R5,R6         GET CURRENT LENGTH                  81193
         BNP   CVGEXIT       HUH ?                               81193
         LA    R15,0(R6,R5)  GET LAST+1 DIGIT                    81193
DBKTRAIZ BCTR  R15,0         POINT TO LAST DIGIT                 81193
         CLI   0(R15),C'0'   TRAILING ZERO ?                     81193
         BNE   DBKTRAIP      NO; RETURN                          81193
         BCT   R5,DBKTRAIZ   TRY PRIOR ONE                       81193
         BR    R14           RETURN TO CALLER                    81193
DBKTRAIP CLI   0(R15),C'.'   TRAILING PERIOD ?                   81193
         BNER  R14           NO                                  81193
         BCTR  R5,0          YES; OMIT IT ALSO                   81193
         BCTR  R15,R14       BACKSPACE AND RETURN TO CALLER      81193
CVGMVC   MVC   DBWORK+1(0),DBWORK+2  SHIFT INTEGER PORTION       81193
         SPACE 1                                                 81193
CVGMNEXP BALS  R14,DBKTRAIL  DELETE TRAILING ZEROES              93164
         MVI   1(R15),C'E'   INDICATE EXPONENT                   81193
         LA    R5,3(,R5)     SET NEW LENGTH                      81193
         MVI   2(R15),C'+'   MOVE IN EXPONENT SIGN               81193
         LTR   R2,R2         POSITIVE EXPONENT ?                 81193
         BNM   CVGPLEXP                                          81193
         LPR   R2,R2         SET EXPONENT POSITIVE               81193
         MVI   2(R15),C'-'     BUT SET IN RESULT                 81193
CVGPLEXP LA    R0,10         DIVISOR FOR EXPONENT                81193
         SRDL  R2,32         SET UP FOR DIVIDE                   81193
         DR    R2,R0         ISOLATE TENS AND UNITS              81193
         LTR   R3,R3         GREATER THAN 9 ?                    81193
         BZ    CVGUNEXP      NO; SINGLE DIGIT EXPONENT           81193
         LA    R3,C'0'(,R3)  GET THE EBCDIC VALUE                81193
         STC   R3,3(,R15)    SET TENS POSITION                   81193
         LA    R15,1(,R15)   UP OUTPUT POSITION                  81193
         LA    R5,1(,R5)     INCREMENT OUTPUT LENGTH             81193
CVGUNEXP LA    R2,C'0'(,R2)  GET THE EBCDIC VALUE                81193
         STC   R2,3(,R15)    SET THE UNITS POSITION              81193
CVGEXIT  LD    FR0,GWSAVE0   RESTORE USER'S REGISTERS            81193
         LD    FR2,GWSAVE2                                       81193
         LD    FR4,GWSAVE4                                       81193
         LD    FR6,GWSAVE6                                       81193
         SPM   R9            RESTORE PROGRAM MASK                81193
         B     CONVEND       EXIT TO CALLER                      81193
         SPACE 1                                                 81193
CONVTIME BALS  R9,CNVMVCDB   GET BINARY TIME (1/100 SECONDS)     93164
         CH    R3,=H'3'      LESS THAN ONE WORD ?                81193
         BL    TIMEDFLT      YES; USE CURRENT TIME               81193
         LA    R3,C':'       SET EDIT SEPARATOR                  81193
         LA    R14,100       DIVISOR TO SECONDS                  81193
         DR    R0,R14        CONVERT TO SECONDS                  81193
         SR    R0,R0                                             81193
         LA    R14,60        DIVISOR                             81193
         DR    R0,R14        EXTRACT SECONDS IN R0               81193
         LR    R2,R0         SAVE SECONDS                        81193
         SR    R0,R0                                             81193
         DR    R0,R14        GET MINUTES AND HOURS               81193
         LR    R4,R1         MOVE HOURS                          81193
         LR    R1,R0         MOVE MINUTES                        81193
         B     DATEMULT      GO TO COMMON EDIT ROUTINE           81193
         SPACE 1                                                 81193
CONVTIMD BALS  R9,CNVMVCDB   GET USER'S PACKED TIME              93164
         CH    R3,=H'3'      LESS THAN ONE WORD ?                81193
         BL    TIMEDFLT      YES; USE CURRENT TIME               81193
         LR    R0,R1         IN REGISTER 0                       81193
         B     TIMECOM       GO TO COMMON TIME FORMATTING        81193
         SPACE 1                                                 81193
CONVDATD SR    R0,R0         DSCB DATE                          GP03291
         IC    R0,0(,R6)     LOAD BINARY YEAR                   GP03291
         MH    R0,=H'1000'   SHIFT                              GP03291
         SR    R1,R1                                            GP03291
         ICM   R1,3,1(R6)    LOAD DAY                           GP03291
         AR    R0,R1         COMBINE YEAR AND DAY               GP03291
         CVD   R0,DB         MAKE PACKED                        GP03291
         L     R1,DB+4                                          GP03291
         LTR   R0,R0         WAS IT ZERO ?                      GP03291
         BNZ   CONVDATF      DO REGULAR DATE PROCESSING         GP03291
         LA    R6,=C'00/00/00'                                  GP03291
         LA    R5,8                                             GP03291
         B     CONVSTRG      YES; KEEP IT THAT WAY              GP03291
         SPACE 1                                                GP03291
CONVDATE BALS  R9,CNVMVCDB   GET USER'S PACKED DATE              93164
CONVDATF BALS  R9,DATEFIX    FIX IT AND CHECK FOR CURRENT       GP03290
         B     DATECOM       GO TO COMMON DATE FORMATTING        81193
         SPACE 1                                                 81193
CONVDATJ BALS  R9,CNVMVCDB   GET USER'S PACKED DATE              93164
         BALS  R9,DATEFIX    FIX IT AND CHECK FOR CURRENT       GP03290
         AP    DB+4(4),=P'1900000'  ADJUST YEAR                 GP03290
         MVC   DBWORK(L'DATEJUL),DATEJUL  MAKE YY.DDD EDIT MASK  81193
         ED    DBWORK(L'DATEJUL),DB+5    EDIT                    81193
         LA    R5,6          SET OUTPUT LENGTH                   81193
         LA    R6,DBWORK+1   AND ADDRESS                         81193
         B     CONVSTRG      AND RETURN                          81193
         SPACE 1                                                GP03291
CONVEDAT BALS  R9,CNVMVCDB   GET USER'S PACKED DATE             GP03291
         BALS  R9,DATEFIX    FIX IT AND CHECK FOR CURRENT       GP03291
         AP    DB+4(4),=P'1900000'  ADJUST YEAR                 GP03291
         L     R1,DB+4       LOAD UPDATED DATE                  GP03291
         BALS  R9,CONVDADA   GET YEAR/MON/DAY                   GP03291
         MH    R2,=H'100'    SHIFT YEAR                         GP03291
         AR    R2,R4         ADD MONTH                          GP03291
         MH    R2,=H'100'    SHIFT YEAR/MONTH                   GP03291
         AR    R2,R1         ADD DAY                            GP03291
         CVD   R2,DB2        MAKE PACKED                        GP03291
         MVC   DBWORK(L'DATEISO),DATEISO  MAKE YY.DDD EDIT MASK GP03291
         ED    DBWORK(L'DATEISO),DB2+3   EDIT                   GP03291
         LA    R5,10         SET OUTPUT LENGTH                  GP03291
         LA    R6,DBWORK+2   AND ADDRESS                        GP03291
         B     CONVSTRG      AND RETURN                         GP03291
         SPACE 1                                                 84170
CONVWDAY BALS  R9,CNVMVCDB   GET USER'S PACKED DATE              93164
         BALS  R9,DATEFIX    FIX IT AND CHECK FOR CURRENT       GP03290
CONVWDAC SR    R0,R0         CLEAR FOR DIVIDE                   GP02322
         CVB   R1,DB         MAKE BINARY DATE                   GP02322
         D     R0,=F'1000'   SPLIT INTO DAY/YEAR                GP02322
         ST    R0,DB                                            GP02322
         LA    R1,6(,R1)     ADD FINAGLE FACTOR                  80105
         LA    R9,1(,R1)     SAVE YEAR + SECOND FINAGLE          80105
         SRA   R9,2          GET NUMBER OF LEAP YEARS SINCE 1900 80105
         MH    R1,=H'365'    DAYS SINCE 1900                     80105
         AR    R1,R9         ADD LEAP DAYS                       80105
         A     R1,DB         ADD DAYS IN THIS YEAR              GP02322
         LA    R1,6(,R1)     ADD ANOTHER FINAGLE                 80105
         SR    R0,R0                                             80105
         D     R0,=F'7'      GET DAY OF WEEK                     80105
         MH    R0,=AL2(MONDAY-SUNDAY)    MAKE OFFSET INTO TABLE  80105
         LA    R6,SUNDAY     GET TABLE OF DAYS                   80105
         AR    R6,R0         GET TODAY'S ENTRY                   80105
         LA    R5,L'SUNDAY   SET LENGTH                          84170
         B     CONVSTRG      AND EXIT                            84170
SUNDAY   DC    CL9'Sunday   '                                   GP03304
MONDAY   DC    CL9'Monday   '                                    84170
         DC    CL9'Tuesday  '                                    84170
         DC    CL9'Wednesday'                                    84170
         DC    CL9'Thursday '                                    84170
         DC    CL9'Friday   '                                    84170
         DC    CL9'Saturday '                                    84170
         SPACE 1                                                 84170
CONVDACM LA    R4,DB+8       SET LOCATION FOR DATE               84170
         SR    R4,R5          ADJUST FOR LENGTH TO BE MOVED      84170
         EX    R3,CONVMVCT   MOVE IT                             84170
         ST    R9,CB         PRESERVE RETURN                    GP03290
         BALS  R9,DATEFIX    USER SUPPLIED DATE ?                84170
         L     R9,CB         RESTORE RETURN                     GP03290
         AP    DB+4(4),=P'1900000'  ADJUST YEAR
         L     R1,DB+4                                           84170
         SPACE 1                                                 84170
CONVDADA XC    DB,DB         ENTRY FROM COMMON DATE              84170
         LR    R2,R1                                             84170
         STH   R1,DB+6                                           84170
         CVB   R1,DB                                             84170
         SRA   R2,12                                             84170
         ST    R2,DB+4                                           84170
         OI    DB+7,X'0F'                                        84170
         CVB   R2,DB         YEAR                                84170
         SR    R3,R3                                             84170
         SR    R0,R0         LEAP YEAR ADD                       84170
         SRDL  R2,2                                              84170
         LTR   R3,R3                                             84170
         SLDL  R2,2                                              84170
         BNZ   CONVDAC3      WORKS TILL 2099 ONLY                84170
         CH    R1,=H'60'     IS IT FEB 29 ?                      84170
         BL    CONVDAC3      LOW, IGNORE LEAP YEAR               84170
         BH    CONVDAC2      HIGH, INCREASE JUL DAY BY ONE       84170
         LA    R0,1          02/29 - SUB 1 TO BE ADDED LATER     84170
CONVDAC2 BCTR  R1,0                                              84170
CONVDAC3 LA    R4,DATETABL                                       84170
         LR    R5,R4                                             84170
CONVDACL CH    R1,2(,R4)                                         84170
         BNH   CONVDACF                                          84170
         LA    R4,2(,R4)                                         84170
         B     CONVDACL                                          84170
CONVDACF SH    R1,0(,R4)     DAY OF MONTH                        84170
         AR    R1,R0         ADD 1 IF LEAP YEAR COND.            84170
         LA    R4,2(,R4)                                         84170
         SR    R4,R5                                             84170
         SRL   R4,1                                              84170
         BR    R9            RETURN; R1-DAY, R4-MON, R2-YEAR     84170
         SPACE 1                                                 84170
CONVMNTH BALS  R9,CONVDACM   GO TO COMMON DATE PROCESSING        93164
         LA    R5,L'MONTHS   SET LONGEST LENGTH                  84170
         MH    R4,=Y(L'MONTHS)  MAKE OFFSET                      84170
         LA    R6,MONTHS-L'MONTHS(R4)  POINT TO MONTH            84170
         B     CONVEND       RETURN                              84170
MONTHS   DC    CL9'January  '                                    84170
         DC    CL9'February '                                    84170
         DC    CL9'March    '                                    84170
         DC    CL9'April    '                                    84170
         DC    CL9'May      '                                    84170
         DC    CL9'June     '                                    84170
         DC    CL9'July     '                                    84170
         DC    CL9'August   '                                    84170
         DC    CL9'September'                                    84170
         DC    CL9'October  '                                    84170
         DC    CL9'November '                                    84170
         DC    CL9'December '                                    84170
         SPACE 1                                                 84170
CONVDAY# BALS  R9,CONVDACM   GET DAY OF MONTH                    93164
         CVD   R1,DB         PACK IT                             84170
         MVC   DBWORK,DBEDMASK  MAKE EDIT MASK                   84170
         LA    R1,DBWORK+15  SET FOR NON-SIGNIFICANCE           GP03304
         EDMK  DBWORK,DB     EDIT                               GP03304
         LA    R5,DBWORK+16                                     GP03304
         TM    DB+7,3        FLAKY SIGN TEST                    GP03304
         BNM   *+10          C,F PLUS; D,E MINUS ???            GP03304
         BCTR  R1,0          BACKSPACE ONE                      GP03304
         MVI   0(R1),C'-'    INSERT MINUS SIGN                  GP03304
         LR    R6,R1         COPY START ADDRESS                 GP03304
         SR    R5,R6         LENGTH OF DATA                     GP03304
         B     CONVEND                                          GP03304
         SPACE 1                                                 84170
CONVMMDD BALS  R9,CONVDACM   GET MONTH AND DAY                   93164
         CVD   R1,DB         CONVERT THE DAY                     84170
         MVC   DBWORK(6),DBEDMASK  MAKE EDIT MASK                84170
         ED    DBWORK(6),DB+5  MAKE INTEGER IN RANGE 1-99 + BLANKS
         MH    R4,=Y(L'MONTHS)  GET OFFSET TO CORRECT MONTH      84170
         LA    R4,MONTHS-L'MONTHS(R4)  GET NAME                  84170
         OC    DBWORK(3),0(R4)  MOVE AND UPPER-CASE              84170
         LA    R6,DBWORK                                         84170
         LA    R5,6          RETURN 'MON DD'                     84170
         B     CONVSTRG                                          84170
         SPACE 1                                                 84170
CONVDMIL BALS  R9,CONVDACM   GET COMMON DATE CONVERSION          93164
         MVC   DBWORK(4),DBEDMASK  USE COMMON MASK               84170
         CVD   R1,DB         CONVERT DAY                         84170
         ED    DBWORK(4),DB+6  GET DAY                           84170
         MVC   DBWORK(2),DBWORK+2  SHIFT IT OVER                 84170
         MVI   DBWORK+2,C' '   MAKE A SEPARATOR                  84170
         MH    R4,=Y(L'MONTHS)                                   84170
         LA    R4,MONTHS-L'MONTHS(R4)  POINT TO MONTH            84170
         MVC   DBWORK+3(4),DBWORK+2  MAKE LOTS OF BLANKS         84170
         OC    DBWORK+3(3),0(R4)  ADD MONTH                      84170
         OI    DBWORK+7,C'0' SHOW LEADING ZERO ON YEAR
         MVC   DBWORK+10(4),DBEDMASK                             84170
         CVD   R2,DB         CONVERT THE YEAR                    84170
         ED    DBWORK+10(4),DB+6  GET TRAILING PORTION OF YEAR   84170
         MVC   DBWORK+7(2),DBWORK+12                             84170
         OI    DBWORK+7,C'0' SHOW LEADING ZERO ON YEAR          GP03131
         LA    R6,DBWORK                                         84170
         LA    R5,9          SET LENGTH 'DD MON YY'              84170
         B     CONVSTRG                                          84170
         SPACE 1                                                 84170
CONVDMDY BALS  R9,CONVDACM   DO LONG FORM                        93164
         CVD   R2,DB         PACK THE YEAR (YYYY)                84170
         MVC   DBWORK+19(6),DBEDMASK  MAKE EDIT MASK             84170
         ED    DBWORK+19(6),DB+5                                 84170
         MVI   DBWORK+19,C','                                    84170
         MVC   DBWORK+15(4),DBEDMASK  PREPARE FOR DAY            84170
         CVD   R1,DB         PACK DAY                            84170
         ED    DBWORK+15(4),DB+6  GET DAY                        84170
         MH    R4,=Y(L'MONTHS)                                   84170
         LA    R4,MONTHS-L'MONTHS(R4)                            84170
         MVC   DBWORK(L'MONTHS),0(R4)                            84170
         LA    R6,DBWORK                                         84170
         LA    R5,L'MONTHS                                       84170
         BALS  R14,DBKRIGHT  DELETE TRAILING BLANKS              93164
         LA    R1,DBWORK(R5)  LAST BYTE                          84170
         MVC   0(9,R1),DBWORK+16  ADD BLANK, DAY, YEAR           84170
         LA    R5,1+8(,R5)   ADJUST LENGTH                       84170
         B     CONVSTRG      RETURN                              84170
         SPACE 2
         LTORG ,                                                 81166
         EJECT ,
***********************************************************************
**                                                                   **
**  INDEXED INPUT CONVERSION FUNCTIONS                               **
**                                                                   **
***********************************************************************
TREVNOC  #CONHEAD ,                                             GP03122
         BALS  R9,CONVPARM   GET COMMON INITIALIZATION OVER WITH
         XC    CB,CB
         SR    R3,R3         PRESET FOR NUMERIC FUNCTIONS
         LA    R4,DBSAVE     DITTO
         MVI   0(R4),C'0'    MAKE DUMMY PARAMETER
         LA    R15,0(R7,R7)  CONVERT FUNCTION TO OFFSET
         LH    R15,TREVLBRT(R15)  GET OFFSET TO FUNCTION
         B     TREVCHAR(R15) BRANCH TO ROUTINE
TREVLBRT DC    Y(TREVCHAR-TREVCHAR)    CHAR
         DC    2Y(TREVNULL-TREVCHAR)   CONTROL, ASIS
         DC    Y(TREVNONE-TREVCHAR)     ADDR
         DC    2Y(TREVHEX-TREVCHAR)    HEX, SIGNED HEX
         DC    Y(TREVBIT-TREVCHAR)     BIT STRING
         DC    2AL2(TREVIDEC-TREVCHAR) INT,$INT
NUFDEC   EQU   (*-TREVLBRT)/2
         DC    2AL2(TREVDDEC-TREVCHAR) DEC,$DEC                  87263
         DC    AL2(TREVFIX-TREVCHAR)  FLOATING POINT
         DC    AL2(TREVNONE-TREVCHAR,TREVNONE-TREVCHAR)  TIME; I, D
         DC    AL2(TREVNONE-TREVCHAR,TREV5DEC-TREVCHAR)  DATE; //, Y.D
NUFDATJ  EQU   (*-TREVLBRT-2)/2   OFFSET TO PACKED DATE
         DC    AL2(TREVNONE-TREVCHAR,TREVNONE-TREVCHAR)  DAY; MONTH
         DC    AL2(TREVNONE-TREVCHAR,TREVNONE-TREVCHAR)  DAY; MON DY
         DC    AL2(TREVNONE-TREVCHAR,TREVNONE-TREVCHAR)
         DC    AL2(TREVNULL-TREVCHAR) PRINTABLE EBCDIC, ELSE HEX
NUFSINT  EQU   (*-TREVLBRT)/2  START OF SECOND INTEGER RANGE
         DC    4AL2(TREVIDEC-TREVCHAR)  ICM; ICN; IZ; SPARE
NUFSDEC2 EQU   (*-TREVLBRT)/2  START OF SECOND DECIMAL RANGE
         DC    4AL2(TREVDDEC-TREVCHAR)
TREVLBRX EQU   (*-TREVLBRT)/2   MAXIMUM VALID
         SPACE 2
TREVCHAR B     CONVSTRG      NOTHING TO DO
TREVNULL B     CONVSTRG      NOTHING TO DO
TREVNONE SR    R5,R5         SET RETURN LENGTH TO ZERO
         B     CONVSTRG      UNSUPPORTED FUNCTION
         SPACE 1
TREVIDEC LA    R0,10         MAX FOR INTEGER IS 10               87263
         B     TREVIDED      GO TO COMMON                        87263
TREV5DEC LA    R0,5          MAX FOR JULIAN DATE                 87263
         B     TREVIDED                                          87263
TREVDDEC LA    R0,15         MAXIMUM LENGTH
TREVIDED LA    R1,1          SET SIGNUM
         CLI   0(R6),C'+'    LEADING PLUS SIGN ?
         BE    TREVIDES      YES; SKIP IT
         CLI   0(R6),C'-'    LEADING MINUS ?
         BNE   TREVIDEB      NO
         LNR   R1,R1         MAKE SIGN MINUS
TREVIDES LA    R6,1(,R6)     SKIP THE SIGN
         SH    R5,=H'1'      ADJUST THE LENGTH
         BNP   TREVIDEX      VERY SHORT INPUT - TREAT AS ZERO
TREVIDEB CLI   0(R6),C'0'    LEADING ZERO ?
         BE    TREVIDES      YES; SKIP IT
         CLI   0(R6),C','    IS THE USER IN A COMA ?
         BE    TREVIDES      YES
         CLI   0(R6),C'.'
         BE    TREVIDES      NO COMMENT, PERIOD
TREVIDEL CLI   0(R6),C','    IS THE USER IN A COMA ?
         BE    TREVIDEP      YES
         CLI   0(R6),C'.'
         BE    TREVIDEP      NO COMMENT, PERIOD
         CLI   0(R6),C'0'    NUMERIC ?
         BL    BADSET        NO; INVALID
         CLI   0(R6),C'9'    DITTO ?
         BH    BADSET        DITTO
         LA    R15,0(R3,R4)  GET NEXT CHARACTER
         MVC   0(1,R15),0(R6)  COPY THIS ONE
         LA    R3,1(,R3)     UP STRING LENGTH
TREVIDEP LA    R6,1(,R6)     SPACE TO NEXT ONE
         SH    R5,=H'1'
         BNP   TREVIDEX      GO TO CONVERT
         BCT   R0,TREVIDEL   DO FOR MAXIMUM
         B     BADSET        NUMBER TOO LONG
TREVIDEX LTR   R3,R3         ANY INPUT ?
         BZ    *+6           NO; DON'T DECREMENT LENGTH
         BCTR  R3,0          MAKE LENGTH FOR EXECUTE
         EX    R3,TREVIDPK   PACK INTO CB
         OI    CB+7,X'0F'    MAKE POSITIVELY PLUS
         LTR   R1,R1         MINUS ?
         BNM   *+8           NO
         NI    CB+7,X'FD'    MAKE NEGATIVE
         LA    R5,L'CB
         LA    R6,CB         MAKE PACKED DECIMAL RETURN
         CH    R7,=Y(NUFDATJ)  JULIAN DATE ?
         BE    CONVSTRG      YES; PACKED IS DESIRED
         CH    R7,=Y(NUFSDEC2)  DECIMAL RANGE ?
         BNL   CONVSTRG      YES; EXIT NOW
         CH    R7,=Y(NUFSINT)  INTEGER RANGE ?
         BNL   TREVIDEI      YES
         CH    R7,=Y(NUFDEC) FIRST DECIMAL RANGE ?
         BNL   CONVSTRG
TREVIDEI CLC   CB,=XL8'2147483648F'  NOT TOO LARGE ?             87263
         BH    BADSET        TOO BAD                             87263
         CVB   R0,CB         MAKE BINARY
         SRDA  R0,32         ZERO R0
         STM   R0,R1,CB      NOTE THAT R5, R6 STILL POINT TO CB
         B     CONVSTRG      RETURN
TREVIDPK PACK  CB(8),0(0,R4)  PACK USER'S DATA
         SPACE 1
TREVBIT  SR    R14,R14
         SR    R15,R15
         LA    R0,1
TREVBITL CLI   0(R6),C'0'    ZERO ?
         BE    TREVBITB      YES; SHIFT
         CLI   0(R6),C'1'    ONE ?
         BNE   BADSET        NO; INVALID DATA
         SLDL  R14,1
         OR    R15,R0        MAKE A LOW ONE
         B     TREVBITS
TREVBITB SLDL  R14,1         MAKE LOW ZERO
TREVBITS LA    R6,1(,R6)
         BCT   R5,TREVBITL   TRY AGAIN
         STM   R14,R15,CB
         LA    R5,L'CB
         LA    R6,CB         SET RETURN VALUES
         B     CONVSTRG
         SPACE 1
TREVFIX  B     TREVNONE      NOT DONE YET
         SPACE 1
TREVHEX  LR    R3,R5         SAVE LENGTH
         LR    R4,R6         AND STARTING ADDRESS
TREVHEXC CLI   0(R6),C'9'    NUMERIC ?
         BH    BADSET        NO
         CLI   0(R6),C'0'
         BNL   TREVHEXI      OK
         CLI   0(R6),C'F'    ALPHA HEX ?
         BH    BADSET        NO
         CLI   0(R6),C'A'
         BNL   TREVHEXI      YES
         CLI   0(R6),X'86'   LOWER-CASE ALPHA ?
         BH    BADSET        NO
         CLI   0(R6),X'81'
         BL    BADSET        TOO BAD
TREVHEXI LA    R6,1(,R6)
         BCT   R5,TREVHEXC   CHECK MORE
         LR    R5,R3         LOAD LENGTH AGAIN
         SRL   R5,1
         SLL   R5,1          GET EVEN VALUE
         CR    R3,R5         IS LENGTH EVEN ?
         BE    TREVHEXP      YES; TRANSLATE AND PACK
         MVI   DBSAVE,C'0'   MAKE LEADING ZERO
         EX    R3,TREVHMVC   MOVE TO DBSAVE
         LA    R3,1(,R3)     SET NEW LENGTH
         LA    R4,DBSAVE     SET NEW START
TREVHEXP LR    R5,R3         COPY LENGTH AGAIN                   88004
         BCTR  R5,0          SET EXECUTE LENGTH                  88004
         EX    R5,TREVHENC   STRIP ZONE BITS                     88004
         EX    R5,TREVHETR   TRANSLATE TO HEX BYTES              88004
         LR    R5,R3         COPY OUTPUT LENGTH
         SRL   R5,1          HALVE IT
         LR    R14,R5        COPY THE LENGTH
         SLL   R14,4         MAKE 1/2 VALUE IN HIGH NIBBLE
         OR    R14,R3        MAKE PACK LENGTH MASK
         EX    R14,TREVHEPK  PACK THE DATA
         LA    R6,GWSAVE0    POINT TO START OF LONG OUTPUT AREA
         B     CONVSTRG      AND RETURN
TREVHMVC MVC   DBSAVE+1(0),0(R4)
TREVHEPK PACK  GWSAVE0(0),0(,R4)  PACK HEX DATA
TREVHENC NC    0(0,R4),=31X'1F'  KILL ZONES
TREVHETR TR    0(0,R4),=X'000A0B0C0D0E0F0000000000000000000001020304050*
               6070809'
ZAP2MAX  ZAP   PACK16,0(0,R1)  COPY INPUT
         SPACE 2
         LTORG ,
         SPACE 2
MASK1    DC    0CL47' ',16C' ',29X'20',X'21,20'  PLAIN INTEGER
MASK2    DC    0CL47' ',15C' ',27X'20',X'21,20,4B,20,20'  0.00
MASK3    DC    CL6' ',X'20,6B',9X'20,20,20,6B',X'20,21,20'
MASK4    DC    CL6' ',X'20,20,6B',8X'20,20,20,6B',X'20,21,20,4B,20,20'
BLANKS   DC    (L'MASK1)C' '   SPACES                           GP03304
OVERFILL DC    (L'MASK1)C'*'   OVERFLOW FILLER
DATETABL DC    H'0,31,59,90,120,151,181,212,243,273,304,334,365'
DATEPAT  DC    X'F0212020612020612020'
DATEJUL  DC    X'F021204B202020'       YY.DDD FORM               81193
DATEISO  DC    X'402120202020602020602020'  YYYY-MM-DD          GP03291
DBEDMASK DC    X'40202020202020202020202020202120'
DBEDMONY DC    X'40206B2020206B2020206B2020206B2021204B2020'
HEXTAB   DC    C'0123456789ABCDEF'  HEX CONVERSION
TRHEXTAB EQU   HEXTAB-C'0',256,C'C'
         SPACE 1
         PUSH  PRINT                                            GP06004
         PRINT ON,GEN,DATA                                      GP06004
TABDEC   DC    16AL1(2*(*-TABDEC)+1) O/P NUMERIC LENGTH (INT)   GP03308
TABCOMMA DC    AL1(1,3,6,9,11,14,17,19,22,25,27,30,33,35,38,41) GP03308
TABINT   DC    AL1(3,5,8,10,13,15,17,20),8AL1(47)               GP03308
         DC    AL1(3,6,10,13,17,19,22,26),8AL1(47)              GP03308
TABAHEX  DC    16AL1(2*(*-TABAHEX+1))       HEX STRING          GP03308
TABCHEX  DC    16AL1(3*(*-TABCHEX+1)-1)     PRETTY HEX STRING   GP03308
TABABIN  DC    16AL1(8*(*-TABABIN+1))       BIT STRING          GP03308
TABCBIN  DC    16AL1(9*(*-TABCBIN+1)-1)     PRETTY BIT STRING   GP03308
         POP   PRINT                                            GP06004
         SPACE 1                                                GP03307
PATCHAR  DC    30S(*)        MINI-PATCH
         SPACE 1
TNTRTAB  TRTAB CODE=TN       EXPAND TN TRAIN'S TRANSLATE TABLE
         SPACE 1                                                GP03304
TRTNOSPC DC    256AL1(8)     STOP ON EVERYTHING                 GP03304
         TRENT TRTNOSPC,0,0  EXCEPT HEX ZERO                    GP03304
         TRENT TRTNOSPC,0,C' '  AND SPACE                       GP03304
         SPACE 1                                                GP03310
FILMAX   DC    AL1(255,255,16,16,8,8,16,16,4,4)  TXT/DEC/INT/HEX/BIT
FILDEF   DC    AL1(00,00,00,00,4,4,4,4,1,1)  DEFAULT IF 0       GP04118
         SPACE 1                                                GP03310
TRTPACK  DC    256X'08'      EVERYTHING INVALID                 GP03310
         ORG   TRTPACK+X'00'                                    GP03310
*   ZONE +       0 1 2 3 4 5 6 7 8 9 A B C D E F                GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  0-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  1-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  2-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  3-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  4-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  5-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  6-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  7-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  8-           GP03310
         DC    X'0,0,0,0,0,0,0,0,0,0,8,8,4,4,8,4'  9-           GP03310
         ORG   ,                                                GP03310
         SPACE 2
         FSAWORK ,     1/N
SAVEAREA DC    18A(0)  2/N   SAVE AREA
SUBSAVE1 DC    18A(0)  3/N   SAVE AREA
HEXWORK  DS    XL16          HEX INPUT                          GP06004
DB       DC    D'0'          WORK AREA
DB2      DC    D'0'          WORK AREA
CB       DS    D             CONVERSION WORK AREA
GWSAVE0  DS    D             SAVE AREA FOR FLOAT REG 0
GWSAVE2  DS    D                                                 81193
GWSAVE4  DS    D                                                 81193
GWSAVE6  DS    D                                                 81193
CVGINT   DS    D             INTEGER SUBTRACT AREA               81193
PWTRAN   DS    A             ADDRESS OF TRANSLATION TABLE
CALLR15  DC    A(0)    1/3   COPY OF CALLER'S R15
CALLPRMS DC    0A(0)   1/2   COPY OF CALLER'S R0, R1
CALLR0   DC    A(0)    1/2   COPY OF CALLER'S R0
CPROUTL  EQU   CALLR0+0,1,C'F' 0 OR O/P NUMBER FIELD LENGTH
CPRINPL  EQU   CALLR0+1,1,C'F' INPUT LENGTH (0 OK FOR DEC)
CPRTYPE  EQU   CALLR0+2,1,C'B' NUMERIC INPUT TYPE (DEC,INT,HEX,BIN...)
CPROPTS  EQU   CALLR0+3,1,C'B' OPTION FLAGS
OFSIGN   EQU   X'80'            DISPLAY SIGN (DEFAULT)
OFLJUST  EQU   X'40'            LEFT-JUSTIFY NUMBER
OFSPACE  EQU   X'20'            SPACE BETWEEN NUMBER AND TEXT
OFFILL   EQU   X'10'            ZERO FILL (E.G., SEQUENCE NUMBERS)
OFTRUNC  EQU   X'08'            OK TO TRUNCATE O/P
OFLRSV6  EQU   X'04'               RESERVED
OFGROUP  EQU   X'02'            GROUP WITH COMMAS MMM,MMM
OFCENT   EQU   X'01'            INTEGER (DEFAULT), ELSE MMM.NN
CALLR1   DC    A(0)    3/3   COPY OF CALLER'S R1
         SERVDEFS ,          EXPAND CONSTANTS, ETC.             GP03308
DBWORK   DS    CL16
DBWORK2  DS    CL16
PACK16   DC    PL16'0'       MAX PACK-TOR
PACK16A  DC    PL16'0'       MAX PACK-TOR
PACK16B  DC    PL16'0'       MAX PACK-TOR
FLAGS    DC    X'00'         LOCAL PROCESSING FLAGS
FGNEG    EQU   X'80'           INPUT IS NEGATIVE
FGSEP    EQU   X'40'           SEPARATOR NEEDED                 GP03287
FGALT    EQU   X'01'           ENTRY THROUGH #CONVERT, NOT @FORMAT
WRKOUTLN DS    X             WORKING OUTPUT LENGTH              GP03294
         DS    XL3             PREVENT OUTLN CLOBBERING         GP06004
OUTWORK  DC    CL(L'MASK1)' '  EDIT WORK AREA
CURRSIGN DC    C' '      1/3 BLANK OR MINUS
OUTNUM   DC    CL100' '  2/3 NUMBER+TEXT
         DC    XL4'0'    3/3 SPACE FOR CALLER'S USE             GP03287
FLAGTEXT DC    CL80' '       FLAG OUTPUT WORK AREA
         DS    0F            ALIGN                               83331
DBSAVE   DS    CL256         SAVE AND WORK AREA FOR LIST/CONVERT 81193
         DS    C             EXTRA FOR OFSPACE OPTION           GP04118
FSALEN   EQU   *-FSAWORK     GETMAIN SIZE
         SPACE 1
         PRINT &PRTSYS
         IKJTCB ,
         IHAPSA ,
SAVE     DSECT ,             DUMMY FOR PGMBAKR/PGMHEAD          GP04234
         DS    (FSALEN)X
SAVEEND  EQU   *
         YREGS ,                                                GP05020
         END   ,
