*/MIPS370  JOB (Z904,0012),'GERHARD',CLASS=A,MSGCLASS=C
*/*
*/       EXEC  ASMFCLG,MAC1='SYS1.AMODGEN'
MIPS370  TITLE 'M I P S 3 7 0  ***  SIMPLE BENCHMARK PROGRAM'
         MACRO
&LABEL   WRITE &WHAT
         GBLC  &C(100)
         GBLA  &A
&A       SETA  &A+1
&C(&A)   SETC '.&WHAT'
&LABEL   DC    A(-1,TEXT&A)
         MEND
         MACRO
&LABEL   TEST  &TEXT,&EP=
         GBLC  &C(100)
         GBLB  &GEN(100)
         GBLA  &A
         LCLC  &OP                                              GP05180
         LCLA  &I,&J,&K,&N                                      GP05180
         LCLC  &X,&O
         AIF   (T'&TEXT EQ 'O').END
&A       SETA  &A+1
&C(&A)   SETC  '&TEXT'
         AIF   ('&EP' NE '').EP
&LABEL   DC    A(TEST&A,TEXT&A)
&GEN(&A) SETB  1
         MEXIT
.EP      ANOP
&LABEL   DC    A(&EP,TEXT&A)
         MEXIT
.END     DC    A(0)
.LOOP1   ANOP
&I       SETA  &I+1
&X       SETC  '&C(&I)'
&K       SETA  K'&X                                             GP05180
         AIF   ('&X'(1,1) NE '.').NT
&X       SETC  '&X'(2,&K-1)                                     GP05180
&K       SETA  K'&X                                             GP05180
TEXT&I   DC    AL1(LTEXT&I),C&X
LTEXT&I  EQU   *-TEXT&I-1
         AGO   .NEXT1
.NT      ANOP
TEXT&I   DC    CL(TS)&X
.NEXT1   AIF   (&I LT &A).LOOP1
&I       SETA  0
.LOOP2   ANOP
&I       SETA  &I+1
         AIF   (NOT &GEN(&I)).NEXT2
&X       SETC  '&C(&I)'(2,K'&C(&I)-2)
&J       SETA  2
.LOOPOP  ANOP
         AIF   ('&X'(&J,1) EQ ' ').ENDOP
&J       SETA  &J+1
         AGO   .LOOPOP
.ENDOP   ANOP
&OP      SETC  '&X'(1,&J-1)
&K       SETA  K'&X                                             GP05180
&X       SETC  '&X'(&J+1,&K)                                    GP05180
&K       SETA  K'&X                                             GP05180
.NOLDBLK AIF   (&K LE 1).DNLDBLK  NO MORE BLANKS                GP05180
         AIF   ('&X'(1,1) NE ' ').DNLDBLK  NO MORE BLANKS       GP05180
&X       SETC  '&X'(2,&K)    DELETE LEADING BLANK               GP05180
&K       SETA  K'&X          THIS CRUD REQUIRED BY BUGS IN THE  GP05180
         AGO   .NOLDBLK      MVS 3.8J XF ASSEMBLER              GP05180
.DNLDBLK ANOP  ,                                                GP05180
TEST&I   DS    0D
         &OP   &X                                               GP05180
         BCTR  R0,R15
         BR    R10
.NEXT2   AIF   (&I LT &A).LOOP2
.MEND    MEND
         SPACE 2
         MACRO ,                                                GP05180
&NM      WRTERM &ADR,&LEN                                       GP05180
         LCLC  &L,&OLEN                                         GP05180
&OLEN    SETC  '&LEN'                                           GP05180
         AIF   (T'&LEN NE 'O').HAVLEN                           GP05180
&L       SETC  'L'''                                            GP05180
&OLEN    SETC  '&L'.'&ADR'                                      GP05180
.HAVLEN  AIF   ('&ADR'(1,1) EQ '(').AREG                        GP05180
&NM      LA    R1,&ADR       LOAD TEXT ADDRESS                  GP05180
         AGO   .TLEN                                            GP05180
.AREG    ANOP  ,                                                GP05180
&NM      LR    R1,&ADR(1)    LOAD TEXT ADDRESS                  GP05180
.TLEN    AIF   ('&OLEN'(1,1) EQ '(').LREG                       GP05180
         LA    R0,&OLEN      LOAD TEXT LENGTH                   GP05180
         AGO   .BAL                                             GP05180
.LREG    LR    R0,&OLEN                                         GP05180
.BAL     BAL   R14,WRTERM    PUT OR TPUT MESSAGE                GP05180
         MEND  ,                                                GP05180
         SPACE 2
         PUNCH '  ORDER MIPS370(P) '  MAKE DUMPS EASIER TO READ GP05190
         SPACE 2
***********************************************************************
*                                                                     *
*   DOWNLOADED FROM HERCULES-390 YAHOO GROUP                          *
*                                                                     *
***********************************************************************
*   CHANGED BY GERHARD POSTPISCHIL TO ASSEMBLE AND RUN UNDER MVS 3.8  *
***********************************************************************
MIPS370  START 0
         B     BEGIN-MIPS370(,R15)  BRANCH AROUND EYEBALL       GP05180
AVG      EQU   5
TS       EQU   20
REPEAT   EQU   1000000
         DC    AL1(17),CL17'MIPS370  &SYSDATE'                  GP05180
BEGIN    STM   R14,R12,12(R13)  SAVE                            GP05180
         LR    R12,R15                                          GP05180
         USING MIPS370,R12   DECLARE BASE                       GP05180
         MVI   TESTL1+3,1    ADOID AN ASSEMBLY ERROR            GP13249
*        LA    1,TODACCNT
*        SVC   202
*        DC    AL4(1)
*        LTR   15,15
*        BZ    TODOK
*        C     15,=F'4'
*        BNER  14
TODOK    LA    R11,TABLE
         L     R9,TODADDR
MAINLOOP ICM   R15,15,0(R11)
         BZ    PGMEXIT                                          GP05180
         BL    WRITE
         LA    R8,(AVG-1)*4
AVGLOOP1 BAL   R10,GETTOD
         LR    R6,R4
         LR    R7,R5
         L     R0,=A(REPEAT)
         BALR  R10,R15
         BAL   R10,GETTOD
         SLR   R5,R7
         BC    3,DELTA1
         BCTR  R4,R0
DELTA1   SLR   R4,R6
         SRDL  R4,12
         ST    R5,TIMES(R8)
         S     R8,=F'4'
         BNL   AVGLOOP1
*
         LA    R8,(AVG-1)*4
         XR    R5,R5
AVGLOOP2 AL    R5,TIMES(R8)
         S     R8,=F'4'
         BNL   AVGLOOP2
         XR    R4,R4
         D     R4,=A(AVG)
         ICM   R15,15,BASETIME
         BNZ   DELTA2
         ST    R5,BASETIME
DELTA2   SLR   R5,15
         L     R1,=A(REPEAT)
         M     R0,=F'100'
         DR    R0,R5
         CVD   R1,DW
         UNPK  NUMBER,DW
         LA    R1,NUMBER
         LA    R0,L'NUMBER-3
LOOPZERO CLI   0(R1),C'0'
         BNE   ENDZERO
         MVI   0(R1),C' '
         LA    R1,1(,R1)
         BCT   R0,LOOPZERO
ENDZERO  MVC   LINEX(L'NUMBER-2),NUMBER
         MVC   LINEX+L'NUMBER-1(1),NUMBER+L'NUMBER-2
         L     R1,4(,R11)
         MVC   LINET(TS),0(R1)
         WRTERM LINE,LLINE
WAITT    DS    0H                                               GP05180
*        LA    1,CONWAIT
*        SVC   202
*        DC    AL4(1)
         LA    R11,8(,R11)
         B     MAINLOOP
         SPACE 1
PGMEXIT  LM    R14,R12,12(R13)    RESTORE REGISTERS             GP05180
         SR    R15,R15       CLEAR RETURN CODE                  GP05180
         BR    R14           AND QUIT                           GP05180
         SPACE 1
WRITE    L     R2,4(,R11)
         XR    R3,R3
         IC    R3,0(,R2)
         LA    R2,1(,R2)
         WRTERM (R2),(R3)
         B     WAITT
*
GETTOD   LM    R0,R3,0(R9)
         STCK  DW
         LM    R4,R5,DW
         SLR   R5,R3
         BC    3,GETTOD1
         BCTR  R4,R0
GETTOD1  SLR   R4,R2
         ALR   R5,R1
         BC    12,GETTOD2
GETTOD2  ALR   R4,R0
         C     R0,0(,R9)
         BNE   GETTOD
         C     R1,4(,R9)
         BER   R10
         B     GETTOD
*
         DS    0D
TESTBCTR BCTR  R0,R15
         ST    R0,BASETIME
         BR    R10
*
TESTLM1  LA    R15,TESTLML
         STM   R2,R15,SAVE
         CNOP  0,8
TESTLML  LM    R2,R15,SAVE
         BCTR  R0,R15
         LA    R15,TESTLM1
         BR    R10
*
TESTLM2  STM   R1,R14,SAVE
         CNOP  6,8
         BALR  R15,R0
         LM    R1,R14,SAVE
         BCTR  R0,R15
         LA    R15,TESTLM2
         BR    R10
*
         DS    0D
TESTD    LM    R2,R3,=A(0,7384485)
         D     R2,F10
         BCTR  R0,R15
         BR    R10
*
         DS    0D
TESTM    L     R3,=A(7384485)
         M     R2,F10
         BCTR  R0,R15
         BR    R10
*
         DS    0D
TESTBCT  BCT   R0,*
         ST    R0,BASETIME
         BR    R10
*
         DS    0D
TESTL1   L     R1,4          Note - changed to L 1,1            GP13249
         BCTR  R0,R15
         BR    R10
         SPACE 2
***********************************************************************
*   ADDED OUTPUT ROUTINE.  ADDR IN R1, LEN IN R0                      *
*     UNDER TSO, ISSUE TPUT                                           *
*     IN BATCH, ISSUE WTO (ADD DCB LATER?)                            *
***********************************************************************
WRTERM   STM   R14,R3,SUBSAVE                                   GP05180
         TM    ENVFLAGS,EFTSO  ISSUE TPUT ?                     GP05180
         BNZ   WRTERTSO      YES                                GP05180
         TM    ENVFLAGS,EFINIT INITIALIZED YET?                 GP05180
         BNZ   WRTERMIN      YES                                GP05180
         OI    ENVFLAGS,EFINIT SET INITIALIZED                  GP05180
         L     R2,PSAAOLD-PSA  GET OUR ASCB                     GP05180
         ICM   R2,15,ASCBTSB-ASCB(R2)  RUNNING UNDER TSO ?      GP05180
         BNZ   WRTERMIT      YES; SET FLAG AND TPUT             GP05180
WRTERMIN LR    R14,R1        COPY MESSAGE ADDRESS               GP05180
         LR    R15,R0          AND LENGTH                       GP05180
         ICM   R15,8,=C' '   BLANK PADDING                      GP05180
         LA    R2,4(,R15)    NO CHECK FOR TOO LONG              GP05180
         STH   R2,WTOLEN                                        GP05180
         LA    R0,WTOTXT                                        GP05180
         LA    R1,L'WTOTXT                                      GP05180
         MVCL  R0,R14        INEFFICIENT MOVE                   GP05180
         WTO   MF=(E,WTOLEN)  WRITE IT OUT                      GP05180
         B     WRTERMEX      AND RETURN                         GP05180
WRTERMIT OI    ENVFLAGS,EFTSO                                   GP05180
WRTERTSO TPUT  0(R1),(0)     WRITE TO USER                      GP05180
WRTERMEX LM    R14,R2,SUBSAVE                                   GP05180
         BR    R14           RETURN TO CALLER                   GP05180
         SPACE 1
DW       DS    D
BASETIME DS    D
PL16     DC    PL16'1'
TIMES    DS    (AVG)F
F10      DC    F'10'
SAVE     DS    16F
SUBSAVE  DC    16A(0)                                           GP05180
FW       EQU   SAVE
CL32     DS    CL32
TABLE    WRITE 'Branches:'
         TEST  'BCT  R0,*',EP=TESTBCT
         TEST  'BCTR R0,R15',EP=TESTBCTR
         TEST  'NOP  R0'
         WRITE 'Fetches:'
         TEST  'LR   R1,R0'
         TEST  'LTR  R1,R0'
         TEST  'L    R1,0'
         TEST  'L    R1,1',EP=TESTL1
         TEST  'ICM  R1,15,0'
         TEST  'LD   F0,0'
         WRITE 'Pipelining (R15 is the BCTR register):'
         TEST  'LM   2,15,SAVE',EP=TESTLM1
         TEST  'LM   1,14,SAVE',EP=TESTLM2
         WRITE 'Stores (checks cache):'
         TEST  'STM  1,14,SAVE'
         TEST  'ST   1,FW'
         TEST  'MVC  DW,DW'
         TEST  'MVC  CL32,CL32'
         TEST  'XC   FW,FW'
         WRITE 'Integer operations:'
         TEST  'AR   R1,R0'
         TEST  'ALR  R1,R0'
         TEST  'LA   R1,1(,R1)'
         TEST  'LA   R1,1(R1)'
         TEST  'L +M R2,F10',EP=TESTM
         TEST  'LM+D R2,F10',EP=TESTD
         WRITE 'Packed decimal:'
         TEST  'AP   PL16,PL16'
         TEST  'CVD  R1,DW'
         WRITE 'Floating point:'
         TEST  'AER  F0,F4'
         TEST  'ADR  F0,F4'
         TEST  'AXR  F0,F4'
         TEST
         DS    0D
TODACCNT DC    CL8'TODACCNT',CL8'ENABLE'
TODADDR  DC    F'0'
LINE     DC    C'  '
LINET    DS    (TS)C
LINEX    DC    C'xxx.x MIPS'
LLINE    EQU   *-LINE
NUMBER   DS    CL5
CONWAIT  DC    CL8'CONWAIT'
         SPACE 1
WTOLEN   DC    Y(104,0)                                         GP05180
WTOTXT   DC    CL100' '      ARBITRARY MAX LEN                  GP05180
         SPACE 1
ENVFLAGS DC    X'00'         PROCESSING FLAGS                   GP05180
EFTSO    EQU   X'80'           RUNNING UNDER TSO                GP05180
EFINIT   EQU   X'01'           INITIALIZATION DONE              GP05180
         SPACE 1
         LTORG
         PRINT NOGEN                                            GP05180
R0       EQU   0             RESTORE MNEMONIC DEINITIONS        GP13032
R1       EQU   1               (YREGS NOT IN BASE LIBRARIES)    GP13032
R2       EQU   2                                                GP13032
R3       EQU   3                                                GP13032
R4       EQU   4                                                GP13032
R5       EQU   5                                                GP13032
R6       EQU   6                                                GP13032
R7       EQU   7                                                GP13032
R8       EQU   8                                                GP13032
R9       EQU   9                                                GP13032
R10      EQU   10                                               GP13032
R11      EQU   11                                               GP13032
R12      EQU   12                                               GP13032
R13      EQU   13                                               GP13032
R14      EQU   14                                               GP13032
R15      EQU   15                                               GP13032
F0       EQU   0             FLOATING POINT REGISTER            GP05180
F2       EQU   2             FLOATING POINT REGISTER            GP05180
F4       EQU   4             FLOATING POINT REGISTER            GP05180
F6       EQU   6             FLOATING POINT REGISTER            GP05180
         IHAPSA ,            MAP LOW STORAGE                    GP05180
         IHAASCB ,           MAP ADDRESS SPACE CONTROL BLOCK    GP05180
         END
*/
