FSOR TITLE 'F S O R T  ***  FORTRAN - SORT  INTERFACE PROGRAM'
         PRINT  NOGEN
*
*
*   PROVIDED BY THE UNIVERSITY OF WATERLOO
*
*     F S O R T  * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  THIS IS THE MAIN LINKAGE PGM.
*  THE SORT AND RECORD STATEMENT ARE ACCEPTED AS
*  ARGUMENTS AND A PROPER ARGUMENT LIST IS CONSTRUCTED
*  BEFORE THE LINK IS MADE TO SORT.
*
*
FSORT    CSECT
         SAVE  (14,12),T,*
         REGEQU                 **************************************
         LR    12,15            *  -ESTABLISH ADDRESSABILITY         *
         USING FSORT,12         *                                    *
         LR    10,13            *                                    *
         LA    13,SAVA          *  -LINK SAVE AREAS                  *
         ST    13,8(0,10)       *                                    *
         ST    10,4(0,13)       **************************************
*
         L     R15,KILLRUN     CHECK TO SEE IF FSIN  HAS INDICATED
         SR    6,6             THAT IT HAD AN ERROR AND WISHES RUN TO
         ST    R6,KILLRUN      BE TERMINATED NOW. IE. IF LOCN 'KILLRUN'
*                              IS NON-ZERO.  IF IT IS, ZERO IT AND
*                              CONTINUE CHECK FOR ARGS.
*
* - - - - - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - -
*
*     WE ARE NOW READY TO CHECK THE ARGUMENTS
*       ARG 1 => SORT FIELDS=   STATEMENT
*       ARG 2 => RECORD TYPE=   STATEMENT
*       ARG 3 =  ADDRESS OF RETURN CODE THAT WE HAVE TO SET
*
*  RETRIEVE ARGUMENT ADDRESSES
*
GORUN    LM    7,9,0(R1)
*
*  R7 = SORT STATEMENT ADDRESS
*  R8 = RECORD STATEMENT ADDRESS
*  R9 = ADDRESS OF ICODE
*
         LTR   R7,R7      *----------------------------------------*
         BM    FSERR01    *  CHECK FOR VALID NUMBER OF ARGUMENTS   *
         LTR   R8,R8      *                                        *
         BM    FSERR01    *----------------------------------------*
         ST    R9,RETCDAD
         CR    R15,R6
         BNE   RETURN1
*
*      SORT STATEMENT PROCESSING
*
*
*
         CLI   0(7),X'40'          CHECK FOR BLANK
         BNE   FSERR02        IF NO GIVE ERROR-2
         L     R5,=F'10'      MAXIMUM OF 10 PRECEEDING BLANKS
         LA    R4,FSORTWD     FSORTWD CONTAINS THE CHARS 'SORT'
         LR    R3,R7
FSLOOP1  LA    R3,1(R3)       *--------------
         CLC   0(4,3),0(4)    * THIS LOOP LOOKS FOR THE WORD 'SORT'
         BE    FSFNDSRT       * R3 WILL CONTAIN THE ADDRESS OF THE
         BCT   R5,FSLOOP1     * 'S' IF 'SORT' IS FOUND
         B     FSERR03        *_______________ IF NOT FOUND GIVE ERROR
FSFNDSRT S     R3,=F'1'       SUBTRACT 1 TO GET ADDRESS OF BLANK
         LR    7,3                 R7 = STARTING ADDRESS OF
*                                  SORT STATEMENT
         LA    R3,6(R3)
         LA    4,FSFLDWD       FSFLDWD CONTAINS THE WORD 'FIELDS'
         CLC   0(6,R3),0(4)
         BNE   FSERR03         IF NOT FOUND GIVE ERROR-3
         LA    R3,6(R3)        ADD 6
         LA    R5,4            MAX OF 4 TIMES THRU THIS LOOP
FSLOOP2  TRT   0(256,R3),FSTRTBLE      TRANSLATE AND TEST FOR FIRST
*                                       BLANK
         BC    7,FSFNDBLK
         LA    R3,256(R3)      ADD 256 AND TRY AGAIN
         BCT   R5,FSLOOP2      IF NOT FOUND BY 4 * 256 BYTES GIVE UP
         B     FSERR04
FSFNDBLK ST    R7,SSTRTAD      STORE STARTING AND ENDING ADDRESSES OF
         ST    R1,SENDAD       THE SORT STATEMENT INTO THE ARGUMENT
*                              LIST.
*
*  END OF SORT STATEMENT PROCESSING
*
*
*
*
*---------------------------------------------------------------------
*  RECORD STATEMENT PROCESSING
         CLI   0(R8),X'40'        CHECK FOR PRECEEDING BLANK
         BNE   FSERR02
         L     R5,=F'10'          MAX OF 10 PRECEEDING BLANKS
         LA    R4,FRECWRD         FRECWRD CONTAINS THE WORD 'RECORD'
         LR    R3,R8
FSLOOP3  LA    R3,1(R3)
         CLC   0(5,3),0(R4)        LOOK FOR 'RECORD'
         BE    FSFNDREC
         BCT   R5,FSLOOP3
         B     FSERR03
FSFNDREC S     R3,=F'1'          R3=ADDRESS OF 'R' IN THE WORD 'RECORD
         LR    R8,R3             R8 = STARTING ADDRESS OF RECORD ST.
         LA    R3,8(R3)          ADD 8 TO R3
         LA    R5,4
FSLOOP4  TRT   0(256,R3),FSTRTBLE   TRANSLATE AND TEST FOR NEXT BLANK
         BC    7,FOUNDBK
*
*
*
*
         LA    R3,256(R3)       ADD 256 AND TRY AGAIN
         BCT   R5,FSLOOP4
         B     FSERR04
FOUNDBK  ST    R8,RSTRTAD       STORE STARTING AND ENDING ADDRESSES
         ST    R1,RENDAD        OF THE RECORD STATEMENT INTO THE LIST
         SR    R1,R8            CHECK FOR A REASONABLE LENGTH RECORD
         L     R5,=F'22'        STATEMENT.  IE. MIN IS 22
         CR    R1,R5            IF TOO SHORT GIVE ERROR-3
         BL    FSERR03
*
*  END OF RECORD STATEMENT PROCESSING
*--------------------------------------------------------------------
*
*
**** END OF ARGUMENT PROCESSING ****
*-------------------------------------------------------------------
*  WE CAN NOW LINK TO SORT
*-------------------------------------------------------------------
*        SR    5,5
*        BR    5
         LA    1,PARLST              LOAD ADDRESS OF PARAMETER LIST
         LINK  EP=SORT,MF=(E,(1))    ISSUE THE LINK MACRO
*
*
*     B A C K   F R O M    S O R T
*
*
RETURN   L     R9,RETCDAD      SAVE R15 AT THE RETURN CODE ADDRESS
RETURN1  ST    R15,0(0,9)      GIVEN TO US BY CALLER
RETURNA  L     R13,SAVA+4      GET HIS SAVE AREA ADDRESS BACK
         LM    14,12,12(13)    RESTORE REGISTERS
         BR    14              RETURN
*
*
*              E R R O R   M E S S A G E S
*
*
FSERR01  WTL   'FSERR001- WRONG NO. OF ARGUMENTS IN REFERENCE TO FSORT'
         LA    15,4       --WE CANNOT GIVE AN ERROR CODE FOR THIS
         B     RETURNA      MESSAGE SINCE THERE WAS NO ARGUMENT--
FSERR02  WTL 'FSERR002- FIRST CHAR OF SORT/RECORD STATEMENT NOT BLANK'
         LA    15,2
         B     RETURN
FSERR03  WTL   'FSERR003- MISSING KEYWORD ON SORT/RECORD STATEMENT'
         LA    15,3
         B     RETURN
FSERR04  WTL   'FSERR004- SORT/RECORD STATEMENT TOO LONG'
         LA    15,4
         B     RETURN
*
*
         EJECT
*
*
*
         ENTRY FSIN
*   THIS ENTRY IS USED TO ESTABLISH INTERFACE LINKAGE BETWEEN
*   SORT AND USER EXIT15 PROGRAM
*
FSIN     SAVE  (14,12),T,*
*
*  ESTABLISH ADDRESSABILITY
         LR    12,15
         USING FSIN,12
*
         L     R2,0(R1)            ADDRESS OF ADDRESS OF USER EXIT RTN
         LTR   2,2                 CHECK FOR NO. OF ARGS.
         BM    FSERR05
         L     R2,0(R2)            ADDRESS OF ROUTINE
         ST    R2,UX15ADR          SAVE ADDRESS OF USER ROUTINE
         LA    R3,FSEXIT15
         ST    R3,E15ADDRS         STORE ADDRESS OF INTERFACE ROUTINE
         L     R2,4(R1)            INTO THE ARGUMENT LIST FOR SORT
         L     R2,0(R2)            GET THE COMMON BLOCK ADDRESS
         ST    R2,COMMONAD         SAVE IT
RET1     LM    14,12,12(13)        RESTORE AND RETURN
         BR    14
FSERR05  WTL   'FSERR005- WRONG NO. OF ARGUMENTS IN REFERENCE TO FSIN'
        LA     R5,5
         ST    R5,KILLRUN           INDICATE TO FSORT THAT WE HAD AN
         B     RET1                 ERROR
*
         EJECT
*
*
*  THIS ROUTINE IS USED TO ESTABLISH INTERFACE LINKAGE BETWEEN
*  SORT AND THE USER EXIT ROUTINE FOR OUTPUT.
*
*
*
*
         ENTRY FSOUT
FSOUT    SAVE  (14,12),T,*
*
*  ESTABLISH ADDRESSABILITY
         LR    12,15
         USING FSOUT,12
*
         L     R2,0(R1)
         L     R2,0(R2)
         ST    R2,UX35ADR          STORE THE ADDRESS OF THE USER RTN
         LA    R3,FSEXIT35
         ST    R3,E35ADDRS         ROUTINE INTO THE PARAMETER LIST
         LM    14,12,12(13)        RESTORE AND RETURN
         BR    14
*
         EJECT
*
*  THIS ROUTINE INTERFACES BETWEEN SORT AND THE USER'S ROUTINE.
*  ITS FUNCTIONS ARE TO CHECK THE PARAMETER LIST FROM SORT AND TO
*  ESTABLISH RETURN CODES TO SORT.
*  ON RETURN TO SORT R1 WILL POINT TO THE ADDRESS OF THE NEXT RECORD
*  R15 WILL CONTAIN EITHER  12 TO INDICATE MORE RECORDS TO COME,
*  OF AN 8 TO INDICATE THAT THERE ARE NO MORE RECORDS.
*  THIS INFORMATION IS PASSED FROM THE USER RTN VIA THE PARAMETER
*  INDIC.
         ENTRY FSEXIT15
FSEXIT15 SAVE  (14,12),T,*
*
*  ESTABLISH ADDRESSABILITY
         LR    12,15
         USING FSEXIT15,12
*
         LR    10,13          *------------------------------------
         LA    13,SAVA15      *   LINK SAVE AREAS.  THIS ROUTINE
         ST    13,8(0,10)     *   REQUIRES A SAVE AREA DIFFERENT FROM
         ST    10,4(0,13)     *--------  FSORTS'   ----------------
         L     R15,UX15ADR     ADDRESS OF USER'S RTN
         LA    R1,PARAM        PASS ADDRESS OF INDIC
         BALR  14,15           BALR TO USER'S RTN
         L     R2,INDIC        TEST INDIC
         LTR   2,2             IF ZERO THEN THERE ARE MORE RECORDS
         BNZ   EOD             IF NOT ZERO THEN THERE ARE NO MORE
         L     R1,COMMONAD     LOAD COMMON BLOCK ADDRESS INTO R1
         L     13,SAVA15+4     GET RIGHT SAVE AREA INTO R13
         LM    2,12,28(13)     RESTORE
         LA    15,12           SET RETURN CODE TO 12
         L     14,12(13)       GET RETURN ADDRESS INTO R14
         BR    14              RETURN
EOD      L     R13,SAVA15+4    GET RIGHT SAVE AREA ADDRESS INTO R13
         LM    14,12,12(13)    RESTORE
         LA    15,8            SET RETURN CODE TO 8 TO INDICATE END
         BR    14              RETURN
*
         EJECT
*
* THIS ROUTINE INTERFACES BETWEEN SORT AND THE USER'S OUTPUT
* ROUTINE.  ITS FUNCTIONS ARE TO CHECK REGISTER ONE FOR A VALID
* RECORD ADDRESS (RATHER THAN ZERO). IT CALLS  THE USER'S ROUTINE
* AND ON RETURN FROM IT SETS THE RETURN CODE TO 4.  IF REG 1 HAD
* A ZERO NO CALL IS MADE TO THE USER'S ROUTINE BUT RATHER THE CODE
* 8 IS SET (IN R15) AND CONTROL RETURNS TO SORT.
*
*
*
         ENTRY FSEXIT35
FSEXIT35 SAVE  (14,12),T,*
*
*  ESTABLISH ADDRESSABILITY
         LR    12,15
         USING FSEXIT35,12
*
         LR    10,13           *-------------------
         LA    13,SAVA35       *
         ST    13,8(0,10)      *  LINK SAVE AREAS
         ST    10,4(0,13)      *-------------------
         L     R2,0(R1)          GET RECORD ADDRESS
         LTR   2,2               CHECK FOR ZERO ADDRESS
         BZ    LASTREC           IF ZERO THEN NO MORE RECORDS
         L     R15,UX35ADR       LOAD ADDRESS OF USER RTN
         BALR  14,15             BALR TO IT
         L     R13,SAVA35+4      GET RIGHT SAVE AREA ADDRESS
         LM    14,12,12(13)      RESTORE
         LA    15,4              SET RETURN CODE TO 4
         BR    14                RETURN
LASTREC  L     R13,SAVA35+4      GET SAVE AREA ADDRESS
         LM    14,12,12(13)      RESTORE
         LA    15,8              SET RETURN CODE TO 8
         BR    14                RETURN (WE RETURN WITHOUT CALLING
*                                USER'S RTN SINCE A FINAL CALL TO
*                                THE FILE IS NOT IMPORTANT)
*
         EJECT
* THIS ROUTINE SETS THE FIRST 4 CHARS OF THE DD NAMES TO WHATEVER THE
* USER DESIRES IN ORDER TO DO MULTIPLE SORTS.
         ENTRY FSDDN
FSDDN    SAVE  (14,12),T,*
*
*  ESTABLISH ADDRESSABILITY
         LR    12,15
         USING FSDDN,12
*
         L     R2,0(R1)        RETRIEVE ARGUMENT
         L     R2,0(R2)
         ST    R2,DDCHARS      STORE IT IN PARAMETER LIST
         LM    14,12,12(13)    RESTORE
         BR    14              RETURN
         EJECT
*  THIS ROUTINE RESETS ALL PARAMETERS BACK TO DEFAULT VALUES
*
         ENTRY FSRSET
FSRSET   SAVE  (14,12),T,*
*
*  ESTABLISH ADDRESSABILITY
         LR    12,15
         USING FSRSET,12
*
         SR    2,2              ZERO R2
         ST    2,E15ADDRS       STORE ZERO AT INTERFACE RTN ADDRESS
         ST    2,E35ADDRS          DITTO
         L     R2,FSORTWD       LOAD THE CHARS 'SORT'
         ST    R2,DDCHARS       SET DD CHARS TO 'SORT'
         L     R2,=X'000080000' RESET CORE TO 32K
         ST    R2,CORESZ
         LM    14,12,12(13)     RESTORE
         BR    14               RETURN
         EJECT
         ENTRY FCORE
FCORE    SAVE  (14,12),T,*
         LR    12,15             ESTABLISH ADDRESSABILITY
         USING FCORE,12
         LR    R9,R13        SAVE SAVE
         LA    R13,SAVEG     GET NEW SAVE
         ST    R13,8(R9)      CHAIN
         ST    R9,4(R13)     LINK
         L     R2,0(R1)          RETRIEVE ARGUMENT
         L     R2,0(R2)
         LTR   R2,R2         CHECK SIGN
         BP    CORSE          ACTUAL REQUEST - USE IT WITHOUT CHECKING
         BZ    CORSET        ZERO - USE DEFAULT SIZE
      GETMAIN  VC,LA=CORGETL,A=CORGETA,SP=127  NEGATIVE IS (ALL-R2)
         LTR   R15,R15       ANY CORE GOTTEN ?
         BNZ   CORSET         NO, USE DEFAULT
      FREEMAIN V,A=CORGETA,SP=127  FREE IT UP AGAIN
         A     R2,CORGETA+4  SUBTRACT REQUEST FROM GOTTEN SIZE
         BP    CORSE         USE IT IF POSITIVE
CORSET   L     R2,=X'000080000'   ELSE USE DEFAULT SIZE - 32K
CORSE    ST    R2,CORESZ         STORE IT IN PARAMETER LIST
         L     R13,4(R13)    GET SAVE AREA BACK
         LM    14,12,12(13)      RESTORE
         BR    14                RETURN
         SPACE 2
CORGETA  DC    2F'0'         GETMAIN ANSWER LIST (ADDR/SIZE)
CORGETL  DC    A(24*1024),X'00FFFFFF'  GETMAIN REQUEST LIST (ALL CORE)
SAVEG    DC    18F'0'        SAVE AREA - PLAY IT SAFE - DON'T USE OTHER
         EJECT
*
*
*    - - -  D A T A   A R E A   - - -
*
*  SORT PARAMETER LIST
*
*
*------------------------------------------------------------
*
*
         CNOP    0,8
PARLST   DC    X'80'
         DC    AL3(ARLST)
         DC    X'0000'
ARLST    DC    X'0024'     LENGTH = 36 BYTES
SSTRTAD  DS    1F          STARTING ADDR. OF SORT STATEMENT
SENDAD   DS    1F          ENDING ADDR. OF SORT STATEMENT
RSTRTAD  DS    1F          STARTING ADDR. OF RECORD STATEMENT
RENDAD   DS    1F          ENDING ADDR. OF RECORD STATEMENT
E15ADDRS DC    X'00000000' INTERFACE RTN ADDRESS
E35ADDRS DC    X'00000000'     DITTO
DDCHARS  DC    C'SORT'     DD CHARACTERS
CORESZ   DC    X'00008000' CORE = 32K
         DC    X'FF00'
         DC    C'AP'       ALL MESSAGES TO PRINTER
*
*------------------------------------------------------------
SAVA     DS    18F         FSORT'S SAVE AREA
FSORTWD  DC    C'SORT'
FSFLDWD  DC    C'FIELDS'
FRECWRD  DC    C'RECORD'
FSTRTBLE DC    XL64'00'      *----------
         DC    X'40'         *TRANSLATE TABLE FOR BLANK
         DC    XL192'00'     *----------
RETCDAD  DS    1F            RETURN CODE ADDRESS
COMMONAD DS    1F            COMMON BLOCK ADDRESS
UX15ADR  DS    1F            USER EXIT RTN ADDRESS
UX35ADR  DS    1F            USER EXIT RTN ADDRESS
         CNOP  0,8
PARAM    DC    X'80'         *
         DC    AL3(INDIC)    *  PARAMETER LIST FOR USER'S RTN
INDIC    DS    1F            INDICATOR USED IN USER EXIT RTN
SAVA15   DS    18F           INTERFACE RTN SAVE AREA
SAVA35   DS    18F                  DITTO
KILLRUN  DC    F'0'          SPECIAL WORD TO INDICATE TO FSORT BY
         LTORG               FSIN  IF AN ERROR OCCURRED
         END
