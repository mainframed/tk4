CATEDIT  TITLE 'UICC/GTEL CATALOG EDIT PROGRAM - CBT FILE 275'     DCL
*                                                                  DCL
*                                    -------- UICC/B.SCHRAGER      DCL
*                                                 /T.KOLE          DCL
*                                    -------- BOEING COMP SERV     DCL
*                                    07/16/76 UICC/E.KLEMENS       DCL
*                                    01/24/79 GTEL/D.C.LIVINGSTON  DCL
*                                                                  DCL
*                                                                  DCL
*      THIS PROGRAM, CALLED 'CATUPDTE' IN EARLIER VERSIONS, IS     DCL
*      INTENDED FOR USE IN MVS SYSTEMS CONTAINING A VSAM MASTER    DCL
*      CATALOG AND ONE OR MORE NONVSAM 'USER' CATALOGS.  IT EDITS  DCL
*      NONVSAM DATASET ENTRIES IN BOTH MASTER CATALOG AND USER     DCL
*      CATALOGS, DELETING ENTRIES FOR DATASETS INDICATED AS RE-    DCL
*      SIDING ON DIRECT-ACCESS STORAGE VOLUMES BUT FOUND TO NOT    DCL
*      EXIST ON THE VOLUMES SPECIFIED, DELETING EMPTY INDEX LEV-   DCL
*      ELS IN NONVSAM 'USER' CATALOGS, AND CORRECTING TTR VALUES   DCL
*      IN CATALOG ENTRIES FOR WHICH THESE VALUES FAIL TO DESCRIBE  DCL
*      CORRECTLY THE LOCATIONS OF DATASET CONTROL BLOCKS (DSCB'S)  DCL
*      FOR THE DATASETS CONCERNED.  IT ALSO DELETES ENTRIES FROM   DCL
*      USER CATALOGS FOR WHICH NO ALIAS RECORDS POINTING TO THE    DCL
*      CATALOGS IN WHICH THEY OCCUR ARE FOUND IN THE MASTER CATA-  DCL
*      LOG.  RECORDS NOT SUBJECT TO ANY OF THE ABOVE CRITERIA ARE  DCL
*      PASSED WITHOUT MODIFICATION.                                DCL
*                                                                  DCL
*      THE PROGRAM PROCESSES NONVSAM DATASET RECORDS IN THE MAS-   DCL
*      TER CATALOG IN THE SEQUENCE IN WHICH IT ENCOUNTERS THEM     DCL
*      DURING A SEQUENTIAL SCAN OF THAT CATALOG.  WHENEVER IT EN-  DCL
*      COUNTERS A NONVSAM RECORD IDENTIFYING A NONVSAM 'USER'      DCL
*      CATALOG, IT PROCESSES THAT CATALOG FIRST AS A DATASET AND   DCL
*      THEN AS A CATALOG BEFORE PROCESSING THE NEXT MASTER CATA-   DCL
*      LOG NONVSAM RECORD.  EXECUTION ENDS AFTER THE LAST NONVSAM  DCL
*      RECORD IN THE MASTER CATALOG HAS BEEN PROCESSED.  WITHIN    DCL
*      EACH NONVSAM CATALOG, THE PROGRAM PROCESSES ENTRIES FOR     DCL
*      DATASETS AND EMPTY INDEXES IN AN ASCENDING EBCDIC SEQUENCE  DCL
*      OF THEIR NAMES.                                             DCL
*                                                                  DCL
*      THE PROGRAM CONSISTS OF FOUR MODULES AS FOLLOWS:            DCL
*                                                                  DCL
*           CSECT               FUNCTION                           DCL
*         ----------     -------------------------------------     DCL
*         CATEDIT        LOCATES CATALOGS, CALLS OTHER MODULES     DCL
*                          TO PROCESS CATALOGS                     DCL
*         CATEICE        SEARCHES NONVSAM CATALOGS, BUILDS LIST    DCL
*                          OF DATASET NAMES AND CATALOG ENTRY      DCL
*         CATEPROC       READS LIST GENERATED BY CSECT ICE, TESTS  DCL
*                          VALIDITY OF ENTRIES, DELETES EXTRANE-   DCL
*                          ENTRIES, CORRECTS DEFECTIVE ENTRIES     DCL
*         CATEDSP        OPENS, READS, CLOSES TEMPORARY DATASET    DCL
*                          CONTAINING LIST GENERATED BY CSECT ICE  DCL
*                                                                  DCL
*      TO FORM AN EXECUTABLE LOAD MODULE FROM THE SOURCE MODULES,  DCL
*      EACH MODULE MUST BE ASSEMBLED, AND THE RESULTING OBJECT     DCL
*      MODULES MUST BE LINKED INTO A SUITABLE LIBRARY.  CSECT      DCL
*      CATEDIT  MAY BE ASSEMBLED WITH THE &SYSPARM ASSEMBLY PARA-  DCL
*      METER AS EXPLAINED LATER IN THIS INTRODUCTION.  IN LINKING  DCL
*      THE OBJECT MODULES INTO A SINGLE LOAD MODULE, THE ENTRY     DCL
*      POINT FOR CSECT CATEDIT  MUST BE DESIGNATED AS THE MAIN     DCL
*      ENTRY POINT FOR THE LOAD MODULE.                            DCL
*                                                                  DCL
*      THE PROGRAM MAY BE EXECUTED IN BATCH VIA THE FOLLOWING JOB  DCL
*      CONTROL STATEMENTS (JCL):                                   DCL
*                                                                  DCL
*       //CATEDIT EXEC PGM=CATEDIT                                 DCL
*       //SYSPRINT DD SYSOUT=A                                     DCL
*       //SYSUT1 DD UNIT=SYSDA,SPACE=(CYL,(2,2)),DCB=BLKSIZE=3120  DCL
*                   UNIT=VIO IN MVS IS FASTER                      DCL
*      IT MAY ALSO BE EXECUTED IN TSO, EITHER DIRECTLY OR UNDER    DCL
*      TEST.  FOR EXECUTION IN BATCH, IT MUST EITHER BE LOADED     DCL
*      FROM AN APF-AUTHORIZED LIBRARY OR HAVE BEEN ASSEMBLED WITH  DCL
*      THE PARM OPTION &SYSPARM='SVC=XXX', IN WHICH 'XXX' IS THE   DCL
*      NUMBER OF AN EXISTING TYPE-3 SVC WHICH RETURNS TO PROBLEM   DCL
*      STATE WITH PROTECT KEY 0 AND REQUIRES ENTRY WITH REG 15     DCL
*      POINTING TO A FULL-WORD ALIGNED 16-BYTE FIELD WITH THE 8TH  DCL
*      BYTE SET TO C'S' AND THE 9TH THROUGH 16TH BYTES AVAILABLE   DCL
*      TO THE SVC FOR USE AS A WORK AREA.  FOR EXECUTION UNDER     DCL
*      TSO, THE PROGRAM MUST HAVE BEEN ASSEMBLED WITH THE &SYS-    DCL
*      PARM SPECIFICATION UNLESS THE SYSTEM PERMITS TSO TO RUN     DCL
*      WITH APF AUTHORIZATION.  WHEN THE &SYSPARM OPTION IS USED,  DCL
*      THE PROGRAM MAY BE LOADED FROM ANY LIBRARY.                 DCL
*                                                                  DCL
*      THE PRESENT VERSION OF THE PROGRAM WAS DEVELOPED FROM A     DCL
*      VERSION DISTRIBUTED BY UNIVERSITY OF ILLINOIS AT CHICAGO    DCL
*      CIRCLE (UICC) ON 07/16/76.  CHANGES INCLUDE: (1) PROVISION  DCL
*      FOR DYNAMICALLY ALLOCATING AND READING SYS1.NUCLEUS(SYS-    DCL
*      CATLG) TO OBTAIN THE NAME AND LOCATION OF THE VSAM MASTER   DCL
*      CATALOG; (2) PROVISION FOR DYNAMICALLY ALLOCATING AND       DCL
*      READING THE VSAM MASTER CATALOG TO ACCESS ENTRIES FOR NON-  DCL
*      VSAM DATASETS CONTAINED IN THAT CATALOG, INCLUDING THOSE    DCL
*      FOR NONVSAM 'USER' CATALOGS, AND TO VERIFY CONNECTION OF    DCL
*      HIGH-LEVEL INDEXES IN USER CATALOGS TO ALIAS NAMES IN THE   DCL
*      MASTER CATALOG; (3) PROVISION FOR DYNAMICALLY ALLOCATING    DCL
*      THE USER CATALOGS; (4) CORRECTION OF A CODING ERROR WHICH   DCL
*      CAUSED DELETION OF EMPTY INDEXES TO FAIL; (5) AND EDITING   DCL
*      OF DOCUMENTATION IN GENERAL TO IMPROVE READABILITY OF       DCL
*      SOURCE LISTINGS.  INCORPORATION OF DYNAMIC ALLOCATION       DCL
*      ELIMINATES THE NEED FOR THE DD STATEMENTS FOR USER CATA-    DCL
*      LOGS REQUIRED BY THE 07/16/76 VERSION OF THE PROGRAM.  THE  DCL
*      REMAINDER OF THIS OPENING DOCUMENTATION IS COPIED WITH      DCL
*      ONLY MINOR EDITING FROM THAT ACCOMPANYING THE 07/16/76      DCL
*      VERSION OF THE PROGRAM:                                     DCL
*                                                                  DCL
*        - - - - - - - - - - - - - - - - - - - - - - - - - - - -   DCL
*                                                                  DCL
*      DOCUMENTATION OF MVS VERSION OF CATUPDTE 7/16/76
*               BARRY SCHRAGER (UIC)
*
*
*      THIS VERSION OF CATUPDTE HAS ELIMINATED ITS DEPENDENCE ON
*      AN ASSEMBLED DEVICE TABLE; IT NOW USES SYSTEM SOURCES.
*
*      THIS VERSION OF CATUPDTE ALSO ACCEPTS SOME CONTROL CARDS VIA
*      SYSIN TO ALLOW FOR RECATALOGING DATASETS FROM ONE VOLUME TO
*      ANOTHER OR UNCATALOGING BY DEVICE TYPE, ETC.  THE LISTING FOR
*      THE CATEPROC SUBROUTINE PROVIDES FURTHER INFORMATION.
*
*      CATUPDTE WAS ORIGINALLY WRITTEN BY BARRY SCHRAGER AND TOM KOLE
*      AT U OF I, WAS MODIFIED AND ENHANCED BY BOEING COMPUTER SER-
*      VICES, AND WAS FINALLY ENHANCED AT UICC BY EB KLEMENS.  THE LAST
*      VERSION HAD TO BE MODIFIED SINCE MVS NO LONGER SUPPORTED LOCATE
*      BY TTR.  THE PRESENT VERSION USES BDAM TO READ THE CATALOGS.
*
*
         TITLE '   LISTS CATALOG ENTRIES                               X
               CATEDIT --- UICC/GTEL CATALOG EDIT PROGRAM'         DCL
*                                                                  DCL
*   CATEDIT                          -------- UICC/B.SCHRAGER      DCL
*                                                 /T.KOLE          DCL
*                                    -------- BOEING COMP SERV     DCL
*                                    07/16/76 UICC/E.KLEMENS       DCL
*                                    01/24/79 GTEL/D.C.LIVINGSTON  DCL
*                                                                  DCL
*   * UICC/GTEL CATALOG EDIT PROGRAM *                             DCL
*                                                                  DCL
*                                                                  DCL
*      THIS PROGRAM, CALLED 'CATUPDTE' IN EARLIER VERSIONS, IS     DCL
*      INTENDED FOR USE IN MVS SYSTEMS CONTAINING A VSAM MASTER    DCL
*      CATALOG AND ONE OR MORE NONVSAM 'USER' CATALOGS.  IT EDITS  DCL
*      NONVSAM DATASET ENTRIES IN BOTH MASTER CATALOG AND USER     DCL
*      CATALOGS, DELETING ENTRIES FOR DATASETS INDICATED AS RE-    DCL
*      SIDING ON DIRECT-ACCESS STORAGE VOLUMES BUT FOUND TO NOT    DCL
*      EXIST ON THE VOLUMES SPECIFIED, DELETING EMPTY INDEX LEV-   DCL
*      ELS IN NONVSAM 'USER' CATALOGS, AND CORRECTING TTR VALUES   DCL
*      IN CATALOG ENTRIES FOR WHICH THESE VALUES FAIL TO DESCRIBE  DCL
*      CORRECTLY THE LOCATIONS OF DATASET CONTROL BLOCKS (DSCB'S)  DCL
*      FOR THE DATASETS CONCERNED.  IT ALSO DELETES ENTRIES FROM   DCL
*      USER CATALOGS FOR WHICH NO ALIAS RECORDS POINTING TO THE    DCL
*      CATALOGS IN WHICH THEY OCCUR ARE FOUND IN THE MASTER CATA-  DCL
*      LOG.  RECORDS NOT SUBJECT TO ANY OF THE ABOVE CRITERIA ARE  DCL
*      PASSED WITHOUT MODIFICATION.                                DCL
*                                                                  DCL
*      THE PROGRAM PROCESSES NONVSAM DATASET RECORDS IN THE MAS-   DCL
*      TER CATALOG IN THE SEQUENCE IN WHICH IT ENCOUNTERS THEM     DCL
*      DURING A SEQUENTIAL SCAN OF THAT CATALOG.  WHENEVER IT EN-  DCL
*      COUNTERS A NONVSAM RECORD IDENTIFYING A NONVSAM 'USER'      DCL
*      CATALOG, IT PROCESSES THAT CATALOG FIRST AS A DATASET AND   DCL
*      THEN AS A CATALOG BEFORE PROCESSING THE NEXT MASTER CATA-   DCL
*      LOG NONVSAM RECORD.  EXECUTION ENDS AFTER THE LAST NONVSAM  DCL
*      RECORD IN THE MASTER CATALOG HAS BEEN PROCESSED.  WITHIN    DCL
*      EACH NONVSAM CATALOG, THE PROGRAM PROCESSES ENTRIES FOR     DCL
*      DATASETS AND EMPTY INDEXES IN AN ASCENDING EBCDIC SEQUENCE  DCL
*      OF THEIR NAMES.                                             DCL
*                                                                  DCL
*      THE PROGRAM CONSISTS OF FOUR MODULES AS FOLLOWS:            DCL
*                                                                  DCL
*           CSECT               FUNCTION                           DCL
*         ----------     -------------------------------------     DCL
*         CATEDIT        LOCATES CATALOGS, CALLS OTHER MODULES     DCL
*                          TO PROCESS CATALOGS                     DCL
*         CATEICE        SEARCHES NONVSAM CATALOGS, BUILDS LIST    DCL
*                          OF DATASET NAMES AND CATALOG ENTRY      DCL
*         CATEPRO        READS LIST GENERATED BY CSECT ICE, TESTS  DCL
*                          VALIDITY OF ENTRIES, DELETES EXTRANE-   DCL
*                          ENTRIES, CORRECTS DEFECTIVE ENTRIES     DCL
*         CATEDSP        OPENS, READS, CLOSES TEMPORARY DATASET    DCL
*                          CONTAINING LIST GENERATED BY CSECT ICE  DCL
*                                                                  DCL
*      TO FORM AN EXECUTABLE LOAD MODULE FROM THE SOURCE MODULES,  DCL
*      EACH MODULE MUST BE ASSEMBLED, AND THE RESULTING OBJECT     DCL
*      MODULES MUST BE LINKED INTO A SUITABLE LIBRARY.  CSECT      DCL
*      CATEDIT  MAY BE ASSEMBLED WITH THE &SYSPARM ASSEMBLY PARA-  DCL
*      METER AS EXPLAINED LATER IN THIS INTRODUCTION.  IN LINKING  DCL
*      THE OBJECT MODULES INTO A SINGLE LOAD MODULE, THE ENTRY     DCL
*      POINT FOR CSECT CATEDIT  MUST BE DESIGNATED AS THE MAIN     DCL
*      ENTRY POINT FOR THE LOAD MODULE.                            DCL
*                                                                  DCL
*      THE PROGRAM MAY BE EXECUTED IN BATCH VIA THE FOLLOWING JOB  DCL
*      CONTROL STATEMENTS (JCL):                                   DCL
*                                                                  DCL
*       //CATEDIT EXEC PGM=CATEDIT                                 DCL
*       //SYSPRINT DD SYSOUT=A                                     DCL
*       //SYSUT1 DD UNIT=SYSDA,SPACE=(CYL,(2,2)),DCB=BLKSIZE=3120  DCL
*                   UNIT=VIO IN MVS IS FASTER                      DCL
*      IT MAY ALSO BE EXECUTED IN TSO, EITHER DIRECTLY OR UNDER    DCL
*      TEST.  FOR EXECUTION IN BATCH, IT MUST EITHER BE LOADED     DCL
*      FROM AN APF-AUTHORIZED LIBRARY OR HAVE BEEN ASSEMBLED WITH  DCL
*      THE PARM OPTION &SYSPARM='SVC=XXX', IN WHICH 'XXX' IS THE   DCL
*      NUMBER OF AN EXISTING TYPE-3 SVC WHICH RETURNS TO PROBLEM   DCL
*      STATE WITH PROTECT KEY 0 AND REQUIRES ENTRY WITH REG 15     DCL
*      POINTING TO A FULL-WORD ALIGNED 16-BYTE FIELD WITH THE 8TH  DCL
*      BYTE SET TO C'S' AND THE 9TH THROUGH 16TH BYTES AVAILABLE   DCL
*      TO THE SVC FOR USE AS A WORK AREA.  FOR EXECUTION UNDER     DCL
*      TSO, THE PROGRAM MUST HAVE BEEN ASSEMBLED WITH THE &SYS-    DCL
*      PARM SPECIFICATION UNLESS THE SYSTEM PERMITS TSO TO RUN     DCL
*      WITH APF AUTHORIZATION.  WHEN THE &SYSPARM OPTION IS USED,  DCL
*      THE PROGRAM MAY BE LOADED FROM ANY LIBRARY.                 DCL
*                                                                  DCL
*      THE PRESENT VERSION OF THE PROGRAM WAS DEVELOPED FROM A     DCL
*      VERSION DISTRIBUTED BY UNIVERSITY OF ILLINOIS AT CHICAGO    DCL
*      CIRCLE (UICC) ON 07/16/76.  CHANGES INCLUDE: (1) PROVISION  DCL
*      FOR DYNAMICALLY ALLOCATING AND READING SYS1.NUCLEUS(SYS-    DCL
*      CATLG) TO OBTAIN THE NAME AND LOCATION OF THE VSAM MASTER   DCL
*      CATALOG; (2) PROVISION FOR DYNAMICALLY ALLOCATING AND       DCL
*      READING THE VSAM MASTER CATALOG TO ACCESS ENTRIES FOR NON-  DCL
*      VSAM DATASETS CONTAINED IN THAT CATALOG, INCLUDING THOSE    DCL
*      FOR NONVSAM 'USER' CATALOGS, AND TO VERIFY CONNECTION OF    DCL
*      HIGH-LEVEL INDEXES IN USER CATALOGS TO ALIAS NAMES IN THE   DCL
*      MASTER CATALOG; (3) PROVISION FOR DYNAMICALLY ALLOCATING    DCL
*      THE USER CATALOGS; (4) CORRECTION OF A CODING ERROR WHICH   DCL
*      CAUSED DELETION OF EMPTY INDEXES TO FAIL; (5) AND EDITING   DCL
*      OF DOCUMENTATION IN GENERAL TO IMPROVE READABILITY OF       DCL
*      SOURCE LISTINGS.  INCORPORATION OF DYNAMIC ALLOCATION       DCL
*      ELIMINATES THE NEED FOR THE DD STATEMENTS FOR USER CATA-    DCL
*      LOGS REQUIRED BY THE 07/16/76 VERSION OF THE PROGRAM.  THE  DCL
*      REMAINDER OF THIS OPENING DOCUMENTATION IS COPIED WITH      DCL
*      ONLY MINOR EDITING FROM THAT ACCOMPANYING THE 07/16/76      DCL
*      VERSION OF THE PROGRAM:                                     DCL
*                                                                  DCL
*        - - - - - - - - - - - - - - - - - - - - - - - - - - - -   DCL
*                                                                  DCL
*      DOCUMENTATION OF MVS VERSION OF CATUPDTE 7/16/76
*               BARRY SCHRAGER (UIC)
*
*
*      THIS VERSION OF CATUPDTE HAS ELIMINATED ITS DEPENDENCE ON
*      AN ASSEMBLED DEVICE TABLE; IT NOW USES SYSTEM SOURCES.
*
*      THIS VERSION OF CATUPDTE ALSO ACCEPTS SOME CONTROL CARDS VIA
*      SYSIN TO ALLOW FOR RECATALOGING DATASETS FROM ONE VOLUME TO
*      ANOTHER OR UNCATALOGING BY DEVICE TYPE, ETC.  THE LISTING FOR
*      THE CATEPRO SUBROUTINE PROVIDES FURTHER INFORMATION.
*
*      CATUPDTE WAS ORIGINALLY WRITTEN BY BARRY SCHRAGER AND TOM KOLE
*      AT U OF I, WAS MODIFIED AND ENHANCED BY BOEING COMPUTER SER-
*      VICES, AND WAS FINALLY ENHANCED AT UICC BY EB KLEMENS.  THE LAST
*      VERSION HAD TO BE MODIFIED SINCE MVS NO LONGER SUPPORTED LOCATE
*      BY TTR.  THE PRESENT VERSION USES BDAM TO READ THE CATALOGS.
*
*
         EJECT
*                                                                  DCL
*   FOLLOWING CONDITIONAL ASSEMBLY SEQUENCE CAUSES CODE IN SEC-    DCL
*   TIONS EXTENDING FROM LABELS '.BYPASS&N' TO LABELS '.BYP&N',    DCL
*   &N = 1, 2, 3, 4, TO BE BYPASSED UNLESS &SYSPARM SET TO         DCL
*   'SVC=XXX' AT ASSEMBLY TIME.  'XXX' MUST BE NUMBER OF AVAIL-    DCL
*   ABLE SVC WHICH RETURNS STORAGE PROTECT KEY 0 AND REQUIRES EN-  DCL
*   TRY WITH REG 15 POINTING TO FULL-WORD ALIGNED 16-BYTE FIELD    DCL
*   WITH 8TH BYTE SET TO C'S' AND 9TH THROUGH 16TH BYTES AVAIL-    DCL
*   ABLE TO SVC FOR USE AS WORK AREA                               DCL
*                                                                  DCL
         SPACE 1                                                   DCL
         LCLA  &BYPASS        DEFINE LOCAL SET SYMBOLS             DCL
         LCLC  &SVC                                                DCL
&BYPASS  SETA  0              INDICATE CODE USING SVC IDENTIFIED   DCL
*                               VIA &SYSPARM NOT TO BE BYPASSED    DCL
&SVC     SETC  ''                                                  DCL
*                                            &SYSPARM SPECIFY      DCL
*                                              'SVC=XXX'?          DCL
         AIF   (K'&SYSPARM NE 7).A                                 DCL
         AIF   ('&SYSPARM'(1,4) NE 'SVC=').A                       DCL
&SVC     SETC  '&SYSPARM'(5,3).' '                                 DCL
         AGO   .EXIT                         YES; GO TO .EXIT      DCL
.A       ANOP                                                      DCL
&BYPASS  SETA  1                             NO; INDICATE CODE     DCL
*                                              USING SVC IDENTI-   DCL
*                                              FIED VIA &SYSPARM   DCL
*                                              TO BE BYPASSED      DCL
.EXIT    ANOP                                                      DCL
         EJECT                                                     DCL
CATEDIT  CSECT
         PRINT NOGEN                                             85230
         SPACE 1                                                   DCL
         ENTRY BLCKCNT        ESTABLISH ADDRESSABILITY FROM CSECT ICE
         ENTRY MCBUF          ESTABLISH ADDRESSABILITY FOR VSAM    DCL
         ENTRY RPL1             MASTER CATALOG BUFFER, REQUEST     DCL
         ENTRY RPL2             PARAMETER LIST ADDRESSES, AND      DCL
         ENTRY UCBSRCH          SUBROUTINE UCBSRCH FROM CSECT      DCL
*                               CATEPRO                            DCL
         SPACE 1                                                   DCL
         USING *,15           SET INITIAL BASE REGISTER            DCL
         SAVE  (14,12),,*     PERFORM STANDARD INWARD LINKAGE      DCL
         LR    14,13          SAVE OLD SAVE AREA ADDRESS           DCL
         BAL   13,START       ESTABLISH REGS 13 AND 12 AS BASE     DCL
         USING *,13,12          REGISTERS                          DCL
         USING CVT,1          ESTABLISH REGS 1 AND 15 AS CVT AND   DCL
         USING IHADCB,15        DCB ADDRESS BASES, RESP            DCL
*                                  BYPASS STATEMENTS TO LABEL      DCL
*                                    'BYP1' UNLESS VALUE ASSIGNED  DCL
*                                    TO &SVC VIA EARLIER CONDI-    DCL
.BYPASS1 ANOP , &BYPASS EQ 1).BYP1   TIONAL ASSEMBLY SEQUENCE      DCL
         USING TCB,2          ESTABLISH REGS 2 AND 14 AS ADDRESS   DCL
         USING IEZJSCB,14       BASES FOR TCB AND JSCB, RESP       DCL
.BYP1    ANOP                 END OF CONDITIONAL BYPASS RANGE      DCL
SAVEAREA DC    18F'0'         SAVE AREA                            DCL
BASE     DC    A(SAVEAREA+4096) REG 12 BASE ADDRESS                DCL
START    ST    14,4(13)       CROSS-LINK OLD AND NEW SAVE AREAS    DCL
         ST    13,8(14)                                            DCL
         L     1,0(,1)       GET PARM FIELD                      85231
         CLC   =X'0006C4C5D3C5E3C5',0(1)  PARM=DELETE ?          85231
         BE    STARTDEL      YES                                 85231
         CLC   =X'0005D8E4C9C3D2',0(1)    PARM=QUICK ?           85231
         BNE   STARTOFF                                          85231
         OI    FLAGS,FGQUICK  DO MASTER CATALOG ONLY             85231
STARTDEL OI    FLAGS,FGDEL    CATALOG ALTERATION PERMITTED       85231
STARTOFF L     14,BASE        LOAD REG 14 BASE ADDRESS             DCL
         CALL  DSPEO          OPEN SYSUT1 FOR OUTPUT
         SPACE 1                                                   DCL
****************************************************************** DCL
*                                                                * DCL
*   MODIFICATION BY DCL:   PROGRAM ORIGINALLY CONTINUED AT LA-   * DCL
*                          BEL 'NEXTCVOL' FROM THIS POINT.  NEW  * DCL
*     CODE TO 'NEXTCVOL' (1) SETS AUTHORIZATION BIT IN JOB STEP  * DCL
*     CONTROL BLOCK (JSCB) IF 'SVC=XXX' WAS SPECIFIED VIA &SYS-  * DCL
*     PARM AT ASSEMBLY TIME AND A SUITABLE SVC XXX IS AVAIL-     * DCL
*     ABLE, (2) ALLOCATES, OPENS, AND READS MEMBER 'SYSCATLG'    * DCL
*     OF 'SYS1.NUCLEUS' TO OBTAIN NAME AND LOCATION OF VSAM      * DCL
*     MASTER CATALOG, (3) ALLOCATES, OPENS, AND READS VSAM MAS-  * DCL
*     TER CATALOG TO OBTAIN SUCCESSIVE REFERENCES TO NONVSAM     * DCL
*     DATASETS.  FOR EACH REFERENCE FOUND, IT EXTRACTS NAME AND  * DCL
*     LOCATION OF CORRESPONDING NONVSAM DATASET, DETERMINES      * DCL
*     THAT SPECIFIED VOLUME IS CURRENTLY MOUNTED AND ACTUALLY    * DCL
*     CONTAINS SPECIFIED DATASET, BRANCHES TO SUBROUTINE 'DSPE'  * DCL
*     TO WRITE RECORD CONTAINING CATALOG ENTRY DATA TO SYSUT1.   * DCL
*     IF DATASET IS NONVSAM CATALOG, REFERS PROCESSING OF CATA-  * DCL
*     LOG TO CSECT 'ICE' VIA BRANCH TO LABEL 'NEXTCVOL', RE-     * DCL
*     GAINS CONTROL AFTER PROCESSING COMPLETED VIA BRANCH TO     * DCL
*     LABEL 'MCSRCH', CONTINUES LOCATING MASTER CATALOG REFER-   * DCL
*     ENCES TO NONVSAM DATASETS UNTIL LAST NONVSAM DATASET       * DCL
*     FOUND AND PROCESSED, THEN BRANCHES TO LABEL 'DONE'.        * DCL
*                                                                * DCL
****************************************************************** DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   ACQUIRES AUTHORIZATION BY SETTING AUTHORIZATION BIT IN JSCB    DCL
*   IF &SYSPARM SET TO 'SVC=XXX' AT ASSEMBLY TIME AND SUITABLE     DCL
*   SVC AVAILABLE, OTHERWISE SKIPS FROM LABEL '.BYPASS2' TO LABEL  DCL
*   '.BYP2'                                                        DCL
*                                                                  DCL
         SPACE 1                                                   DCL
         L     1,CVTPTR       LOAD CVT ADDRESS                     DCL
         L     15,CVTTCBP     LOAD TCB POINTERS ADDRESS            DCL
         MVC   TCBADDR(4),4(15) MOVE CURRENT TCB ADDRESS TO        DCL
*                                 TCBADDR                          DCL
*                                  BYPASS STATEMENTS TO LABEL      DCL
*                                    'BYP2' UNLESS VALUE ASSIGNED  DCL
*                                    TO &SVC VIA EARLIER CONDI-    DCL
.BYPASS2 AIF   (&BYPASS EQ 1).BYP2   TIONAL ASSEMBLY SEQUENCE      DCL
         LA    15,SVCKEY-7    INITIALIZE SVC                       DCL
         SVC   &SVC           SET PROTECT KEY 0                    DCL
         MODESET MODE=SUP     SET SUPERVISOR STATE                 DCL
         L     2,TCBADDR      RELOAD TCB ADDRESS                   DCL
         L     14,TCBJSCB     LOAD JSCB ADDRESS                    DCL
         OI    JSCBOPTS,JSCBAUTH SET AUTHORIZATION BIT IN JSCB     DCL
         MODESET KEY=NZERO,   RETURN TO PROBLEM STATE, NONZERO     DCL X
               MODE=PROB        KEY                                DCL
         AGO   .BYP2A                                            85230
.BYP2    TESTAUTH FCTN=1                                         85230
         BXH   15,15,NOTAUTH                                     85230
         MODESET KEY=ZERO     SET KEY ZERO                       85230
         L     2,TCBADDR      RELOAD TCB ADDRESS                 85230
         L     14,TCBJSCB     LOAD JSCB ADDRESS                  85230
         OI    JSCBOPTS,JSCBAUTH SET AUTHORIZATION BIT IN JSCB   85230
         MODESET KEY=NZERO    RETURN TO ORIGINAL KEY             85230
NOTAUTH  DS    0H             END OF CONDITIONAL BYPASS RANGE    85230
.BYP2A   SPACE 1                                                 85230
*                                                                  DCL
*   OBTAINS VOLUME SERIAL NUMBER AND UNIT ADDRESS OF SYSTEM RESI-  DCL
*   DENCE VOLUME FROM SYS1.NUCLEUS CATALOG ENTRY                   DCL
*                                                                  DCL
         SPACE 1                                                   DCL
         MVC   MCA1(L'SCENF),SCENF NO; SET ERROR MESSAGE 'SYS1.-   DCL
*                                    NUCLEUS CATALOG ENTRY NOT     DCL
*                                    FOUND'                        DCL
*                             GET SYSTEM RESIDENCE VOLUME SERIAL   DCL
         LOCATE NUCLIST         NUMBER AND DEVICE TYPE             DCL
         LTR   15,15             LOCATED OK?                       DCL
         BNE   MCABEND           NO; GO TO MCABEND                 DCL
         MVC   NUCVOL(6),MCBUF+6 YES; COPY SERIAL NUMBER INTO      DCL
*                                  NUCVOL                          DCL
         LA    1,NUCVOL       FIND UNIT ON WHICH NUCVOL MOUNTED    DCL
         LA    15,UCBSRCH                                          DCL
         BALR  14,15                                               DCL
         LTR   2,2                 UNIT ADDRESS FOUND?             DCL
         BNE   NUC1                YES; GO TO NUC1                 DCL
         MVC   MCA1(L'SUANF),SUANF NO; SET ERROR MESSAGE 'SYS1.-   DCL
*                                    NUCLEUS UNIT ADDRESS NOT      DCL
*                                    FOUND'                        DCL
         B     MCABEND        GO TO MCABEND                        DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   ALLOCATES AND OPENS SYS1.NUCLEUS, READS MEMBER SYSCATLG INTO   DCL
*   MCBUF, CLOSES AND UNALLOCATES SYS1.NUCLEUS                     DCL
*                                                                  DCL
         SPACE 1                                                   DCL
NUC1     MVC   NUCADDR(3),13(2) MOVE UNIT ADDRESS OF VOLUME CON-   DCL
*                                 TAINING SYS1.NUCLEUS TO NUCADDR  DCL
         LA    1,NUCRBP       ALLOCATE SYS1.NUCLEUS(SYSCATLG)      DCL
         DYNALLOC                                                  DCL
         LTR   15,15           ALLOCATED OK?                       DCL
         BE    NUC2            YES; GO TO NUC2                     DCL
         MVC   MCA1(L'SAF),SAF NO; SET ERROR MESSAGE 'SYS1.NUC-    DCL
*                                LEUS ALLOCATION FAILED'           DCL
         B     MCABEND        GO TO MCABEND                        DCL
NUC2     LA    15,NUCLEUS     MOVE DDNAME INTO NUCLEUS DCB         DCL
         MVC   DCBDDNAM(8),NUCDDN                                  DCL
         OPEN  ((15))         OPEN NUCLEUS                         DCL
         LA    15,NUCLEUS      OPENED OK?                          DCL
         TM    DCBOFLGS,X'10'                                      DCL
         BO    NUC3            YES; GO TO NUC3                     DCL
         MVC   MCA1(L'SOF),SOF NO; SET ERROR MESSAGE 'SYS1.NUC-    DCL
*                                LEUS OPEN FAILED'                 DCL
         B     MCABEND        GO TO MCABEND                        DCL
NUC3     FIND  NUCLEUS,SYSCATLG,D SET TO READ MEMBER 'SYSCATLG'    DCL
         LTR   15,15             POSITIONED OK?                    DCL
         BE    NUC4              YES; GO TO NUC4                   DCL
         MVC   MCA1(L'SSNF),SSNF NO; SET ERROR MESSAGE 'SYS1.-     DCL
*                                  NUCLEUS(SYSCATLG) NOT FOUND'    DCL
         B     MCABEND        GO TO MCABEND                        DCL
NUC4     READ  NUCECB,SF,     READ 'SYSCATLG' INTO MCBUF           DCL X
               NUCLEUS,MCBUF,'S'                                   DCL
         CHECK NUCECB              READ OK?                        DCL
*                                  NO; GO TO NABMSG                DCL
         MVC   MCNAME(44),MCBUF+10 YES; MOVE VSAM MASTER CATALOG 85230
         MVC   MCVOL(6),MCBUF        DSNAME AND VOLSER INTO RE-    DCL
*                                    QUEST BLOCK                   DCL
         CLOSE (NUCLEUS)      CLOSE, UNALLOCATE SYS1.NUCLEUS       DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   OBTAINS UNIT ADDRESS OF DEVICE CONTAINING VSAM MASTER CATALOG  DCL
*   BY SEARCHING UCB'S FOR SPECIFIED VOLUME SERIAL NUMBER          DCL
*                                                                  DCL
         SPACE 1                                                   DCL
         LA    1,MCVOL        FIND MCVOL UNIT ADDRESS              DCL
         LA    15,UCBSRCH                                          DCL
         BALR  14,15                                               DCL
         LTR   2,2                   UNIT FOUND?                   DCL
         BNE   NUC5                  YES; GO TO NUC5               DCL
         MVC   MCA1(L'MCUANF),MCUANF NO; SET ERROR MESSAGE 'MAS-   DCL
*                                      TER CATALOG UNIT ADDRESS    DCL
*                                      NOT FOUND'                  DCL
         B     MCABEND        GO TO MCABEND                        DCL
NUC5     MVC   MCUNIT(3),13(2) MOVE UNIT ADDRESS INTO REQUEST      DCL
*                                BLOCK                             DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   ALLOCATES AND OPENS VSAM MASTER CATALOG, POSITIONS TO READ     DCL
*   FIRST RECORD                                                   DCL
*                                                                  DCL
         SPACE 1                                                   DCL
         LA    1,MCRBP        ALLOCATE VSAM MASTER CATALOG         DCL
         DYNALLOC                                                  DCL
         LTR   15,15             ALLOCATED OK?                     DCL
         BE    NUC6              YES; GO TO NUC6                   DCL
         MVC   MCA1(L'MCAF),MCAF NO; SET ERROR MESSAGE 'MASTER     DCL
*                                  CATALOG ALLOCATION FAILED'      DCL
         B     MCABEND        GO TO MCABEND                        DCL
NUC6     LA    15,MCATLG      MOVE DDNAME INTO MCATLG DCB          DCL
         MVC   DCBDDNAM(8),MCDDN                                   DCL
         OPEN  (MCATLG)       OPEN VSAM MASTER CATALOG FOR INPUT   DCL
         LA    15,MCATLG         OPENED OK?                        DCL
         TM    DCBOFLGS,X'10'                                      DCL
         BO    MCSRCH            YES; GO TO MCSRCH                 DCL
         MVC   MCA1(L'MCOF),MCOF NO; SET ERROR MESSAGE 'MASTER     DCL
*                                  CATALOG OPEN FAILED'            DCL
         B     MCABEND        GO TO MCABEND                        DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   READS RECORDS FROM VSAM MASTER CATALOG, DISCARDS UNLESS NON-   DCL
*   VSAM RECORD OR DATA RECORD.  WHENEVER NONVSAM RECORD FOUND,    DCL
*   BRANCHES TO LABEL 'MCS2'                                       DCL
*                                                                  DCL
         SPACE 1                                                   DCL
MCSRCH   GET   RPL=RPL2       READ NONVSAM CATALOG RECORD          DCL
         CHECK RPL=RPL2       GET RECORD OK?                       DCL
         LTR   15,15                                               DCL
         BNE   MCS1           NO; GO TO MCS1                       DCL
         CLI   MCBUF+44,C'A'  YES; NONVSAM RECORD?                 DCL
         BE    MCS2                YES; GO TO MCS2                 DCL
         CLI   MCBUF,0             NO; TRUE-NAME RECORD?           DCL
         BE    MCSRCH                  NO; GO TO MCSRCH            DCL
         B     DONE                    YES; GO TO DONE             DCL
MCS1     MVC   MCA1(L'MCPF),MCPF SET ERROR MESSAGE 'MASTER CATA-   DCL
*                                  LOG POSITIONING FAILED'         DCL
         B     MCABEND        GO TO MCABEND                        DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   LOCATES VOLUME INFORMATION SET OF FIELDS IN VSAM MASTER CATA-  DCL
*   LOG NONVSAM RECORD                                             DCL
*                                                                  DCL
         SPACE 1                                                   DCL
MCS2     SR    15,15          FORM ADDRESS BASE FOR NONVSAM REC-   DCL
         IC    15,MCBUF+X'70'   ORD SETS OF FIELDS                 DCL
         MH    15,=H'5'                                            DCL
         LA    15,MCBUF+X'71'(15)                                  DCL
         LR    14,15          SELECT LAST SET OF FIELDS POINTER    DCL
MCS3     SH    14,=H'5'         IN NONVSAM RECORD                  DCL
         CLI   3(14),0        VALID SET OF FIELDS POINTER?         DCL
         BE    MCS4           NO; GO TO MCS4                       DCL
         CLI   3(14),3        YES; VOLUME INFORMATION SET OF       DCL
*                                    FIELDS?                       DCL
         BNE   MCS3                NO; GO TO MCS3                  DCL
         LR    2,15                YES; FORM POINTER TO VOLUME     DCL
         MVC   MCBUF+8(2),1(14)      INFORMATION SET OF FIELDS     DCL
         AH    2,MCBUF+8                                           DCL
         CLI   1(2),X'12'          VOLUME INFORMATION SET OF       DCL
*                                    FIELDS?                       DCL
         BE    MCS5                YES; GO TO MCS5                 DCL
MCS4     MVC   MCA1(L'NRFNR),NRFNR NO; SET ERROR MESSAGE 'NONVSAM  DCL
*                                    RECORD FORMAT NOT RECOG-      DCL
*                                    NIZED'                        DCL
         B     MCABEND        GO TO MCABEND                        DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   IF SPECIFIED DATASET CATALOGED AS RESIDING ON DIRECT-ACCESS    DCL
*   DEVICE, WRITES RECORD TO SYSUT1, CONTAINING SPECIFICATIONS     DCL
*   FOR NONVSAM DATASET SPECIFIED IN VSAM MASTER CATALOG.  OTHER-  DCL
*   WISE, BRANCHES TO LABEL 'MCSRCH'.                              DCL
*                                                                  DCL
         SPACE 1                                                   DCL
MCS5     CLI   4(2),X'20'     DATASET ON DIRECT-ACCESS DEVICE?     DCL
         BNE   MCSRCH         NO; GO TO NVSRCH                     DCL
         LA    15,15(2)       YES; MOVE SELECTED DATASET DSCB TTR  DCL
         ST    15,MCS6+4        AND (DEVTYPE, VOLSER) ADDRESSES    DCL
         LA    15,2(2)          INTO ARGUMENT LIST                 DCL
         ST    15,MCS6+8                                           DCL
         MVI   MCS6+8,X'81'   MARK END OF ARGUMENT LIST, INDICATE  DCL
*                               MASTER CATALOG ENTRY               DCL
         MVC   CVOL(6),MCVOL  MAKE MASTER CATALOG VOLSER AVAIL-    DCL
*                               ABLE TO SUBROUTINE DSPE            DCL
         CNOP  0,4            START LIST ON FULL-WORD BOUNDARY     DCL
         BAL   1,MCS7         LOAD LIST ADDRESS, BRANCH AROUND     DCL
MCS6     DC    A(MCBDSN,0,0,MCBUF) DSPE ARGUMENT LIST              DCL
MCS7     L     15,=V(DSPE)    LOAD SUBROUTINE DSPE ENTRY ADDRESS   DCL
         BALR  14,15          GO TO DSPE:  WRITE RECORD TO SYSUT1  DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   IF DATASET IS NONVSAM 'USER' CATALOG, BRANCHES TO LABEL        DCL
*   'MCS8'.  OTHERWISE, BRANCHES TO LABEL 'MCSRCH'                 DCL
*                                                                  DCL
         SPACE 1                                                   DCL
         TM    FLAGS,FGQUICK  MASTER ONLY ?                      85231
         BNZ   MCSRCH        YES; SKIP CVOL CATALOG PROCESSING   85231
         CLC   MCBDSN(8),=C'SYSCTLG.' NONVSAM CATALOG?             DCL
         BNE   MCSRCH                 NO; GO TO MCSRCH             DCL
         CLI   MCBDSN+8,C'V'          YES; DSNAME SECOND LEVEL     DCL
*                                            START WITH 'V'?       DCL
         BE    MCS8                        YES; GO TO MCS8         DCL
*                                          NO; ISSUE MESSAGE:      DCL
         WTO   'UNSUPPORTED CATALOG NAME FOUND IN MASTER CATALOG'  DCL
         B     MCSRCH         GO TO MCSRCH                         DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   LOCATES UCB FOR DEVICE ON WHICH VOLUME CONTAINING NONVSAM      DCL
*   CATALOG MOUNTED, BRANCHES TO LABEL 'MCSRCH' IF VOLUME NOT      DCL
*   MOUNTED                                                        DCL
*                                                                  DCL
         SPACE 1                                                   DCL
MCS8     MVC   CVOL(6),6(2)   SAVE NONVSAM CATALOG VOLSER AT CVOL  DCL
         LA    1,CVOL         FIND UNIT ON WHICH CVOL MOUNTED      DCL
         LA    15,UCBSRCH                                          DCL
         BALR  14,15                                               DCL
         LTR   2,2            UNIT FOUND?                          DCL
         BNE   NVCSRCH        YES; GO TO NVCSRCH                   DCL
MCS9     MVC   VNM1(6),CVOL   NO; ISSUE VOLUME-NOT-MOUNTED MES-    DCL
         WTO   MF=(E,VNMMSG)    SAGE TO CONSOLE                    DCL
         B     MCSRCH         GO TO MCSRCH                         DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   VERIFIES EXISTENCE OF SELECTED NONVSAM CATALOG ON SPECIFIED    DCL
*   VOLUME BY READING DSCB FROM VTOC ON SPECIFIED VOLUME, ALLO-    DCL
*   CATES AND OPENS SELECTED NONVSAM CATALOG, CALLS CSECT 'ICE'    DCL
*   TO BUILD LIST OF DATASET NAMES AND ATTRIBUTES FROM SPECIFIED   DCL
*   CATALOG, WRITES LIST TO SYSUT1, RETURNS TO LABEL 'MCSRCH'      DCL
*                                                                  DCL
         SPACE 1                                                   DCL
NVCSRCH  MVC   UNITADDR(3),13(2) SAVE UNIT ADDRESS, DEVTYPE, AND   DCL
         MVC   DEVTYPE(4),16(2)    VOLSER IN DYNAMIC ALLOCATION    DCL
         MVC   VOLSER(6),28(2)     CONTROL BLOCKS                  DCL
*                             NONVSAM CATALOG EXIST ON SPECIFIED   DCL
         OBTAIN CATDSCB         VOLUME?                            DCL
         LTR   15,15                                               DCL
         BE    NVC1           YES; GO TO NVC1                      DCL
NVC1BAD  MVC   NCT1(6),CVOL   NO; ISSUE NO-CATALOG-ON-VOLUME MES-  DCL
         WTO   MF=(E,NCTMSG)    SAGE TO CONSOLE                    DCL
         B     MCSRCH         GO TO MCSRCH                         DCL
NVC1     CLI   MCBUF+DS1LSTAR+2-DS1FMTID,X'FF' CATALOG INIT'D ?  85230
         BNE   NVC1BAD       NO; COMPLAIN ABOUT IT               85230
         MVI   TXTPTRS,X'00'  ALLOCATE NONVSAM CATALOG ON SPECI-   DCL
         LA    1,REQBLK         FIED VOLUME                        DCL
         DYNALLOC                                                  DCL
         LTR   15,15             CATALOG ALLOCATED OK?             DCL
         BE    NEXTCVOL          YES; GO TO NEXTCVOL               DCL
         MVC   MCA1(L'NCAF),NCAF NO; SET ERROR MESSAGE 'NONVSAM    DCL
*                                  CATALOG ALLOCATION FAILED'      DCL
         B     MCABEND        GO TO MCABEND                        DCL
NEXTCVOL L     7,=V(CATDCB)   LOAD NONVSAM CATALOG DCB ADDRESS     DCL
         MVC   DCBDDNAM-IHADCB(8,7),DDNAME MOVE DDNAME TO DCB      DCL
         OPEN  ((7))          OPEN ALLOCATED NONVSAM CATALOG       DCL
         LR    15,7              OPENED OK?                        DCL
         TM    DCBOFLGS,X'10'                                      DCL
         BO    NEXT1             YES; GO TO NEXT1                  DCL
         MVC   MCA1(L'NCOF),NCOF NO; SET ERROR MESSAGE 'NONVSAM    DCL
*                                  CATALOG OPEN FAILED'            DCL
         B     MCABEND        GO TO MCABEND                        DCL
NEXT1    SR    1,1            RESET COUNT OF ACTIVE BLOCKS FOR     DCL
         ST    1,BLCKCNT        THIS CATALOG TO ZERO               DCL
         CALL  CATEICE,(BEGTTR,  READ BLOCKS FROM SPECIFIED NONVSAM    X
               BEGINDXL,BEGINDX,   CATALOG, BUILD LIST OF NAMES AND    X
               CVOL)               ATTRIBUTES OF CATALOG ENTRIES,
*                                  WRITE LIST TO SYSUT1
         L     1,BLCKCNT      GET BLOCK COUNT FROM ICE
         LTR   1,1            ANY BLOCKS FOUND?                    DCL
         BZ    EMPTY          NO; GO TO EMPTY                      DCL
         CVD   1,DWORK        YES CONVERT TO DECIMAL               DCL
         MVC   BLKNO,BLKEDIT
         ED    BLKNO,DWORK+5
         MVC   BLKVOL,CVOL    MOVE IN VOLSER
WTO      WTO   MF=(E,BLKMSG)  ISSUE MESSAGE '(COUNT) ACTIVE CATA-
*                               LOG BLOCKS ON (VOLSER)'
         B     CLOSE          GO TO CLOSE                          DCL
EMPTY    MVC   EMP1(6),VOLSER SET VOLSER INTO MESSAGE              DCL
*                             ISSUE EMPTY CATALOG MESSAGE TO CON-  DCL
         WTO   MF=(E,EMPMSG)    SOLE                               DCL
CLOSE    CLOSE ((7))          CLOSE THE CATALOG DATASET
         B     MCSRCH         GO TO MCSRCH                         DCL
         SPACE 1                                                   DCL
*                                                                  DCL
*   CLOSES SYSUT1, REOPENS FOR INPUT, CALLS CSECT 'CATEPRO' TO     DCL
*   READ BACK SYSUT1 INDEX AND DATASET NAME RECORDS, REJECTS REC-  DCL
*   ORDS CORRESPONDING TO DATASETS NOT ON CURRENTLY MOUNTED        DCL
*   DIRECT-ACCESS VOLUMES.  IF RECORD DERIVED FROM NONVSAM CATA-   DCL
*   LOG ENTRY, VERIFIES CONNECTION OF HIGH-LEVEL INDEX TO SPECI-   DCL
*   FIED NONVSAM CATALOG FROM VSAM MASTER CATALOG, DELETES CORRE-  DCL
*   SPONDING NONVSAM CATALOG ENTRY IF CONNECTION NOT VERIFIED.     DCL
*   ALSO DELETES ENTRY IF EMPTY OR IF SPECIFIED DATASET DOES NOT   DCL
*   EXIST.  UPDATES DSCB TTR IN CATALOG ENTRY IF NOT CURRENTLY     DCL
*   VALUE, READS NEXT SYSUT1 RECORD, REPEATS ABOVE STEPS, ETC.,    DCL
*   UNTIL LAST SYSUT1 RECORD PROCESSED, CLOSES ALL DATASETS, ENDS  DCL
*   EXECUTION.  ENTERED FROM SECTION STARTING AT LABEL 'MCSRCH'    DCL
*   AFTER ALL VSAM MASTER CATALOG NONVSAM RECORDS HAVE BEEN PRO-   DCL
*   CESSED                                                         DCL
*                                                                  DCL
         SPACE 1                                                   DCL
DONE     CALL  DSPEC          CLOSE SYSUT1
PROCESS  EQU   *              OPEN SYSUT1 AND SYSPRINT FOR OUT-    DCL
*                               PUT, READ INDEX OR DATASET NAME    DCL
*                               RECORD FROM SYSUT1, PERFORM PRO-   DCL
*                               CESSING DESCRIBED IN TEXT PRECED-  DCL
*                               ING LABEL 'DONE' ABOVE, UNTIL ALL  DCL
*                               SYSUT1 RECORDS READ AND PRO-       DCL
         CALL  CATEPRO          CESSED, CLOSE SYSUT1 AND SYSPRINT  DCL
         WTO   'ALL DONE'     ISSUE MESSAGE TO CONSOLE
         CLOSE (MCATLG)       CLOSE VSAM MASTER CATALOG            DCL
         L     13,4(,13)      RELOAD OLD SAVE AREA ADDRESS
         RETURN (14,12),RC=0  PERFORM STANDARD OUTWARD LINKAGE
NABMSG   MVC   MCA1(L'SSRE),SSRE SET ERROR MESSAGE 'SYS1.NUC-      DCL
*                                  LEUS(SYSCATLG) READ ERROR'      DCL
MCABEND  WTO   MF=(E,MCAMSG)  ISSUE ERROR MESSAGE TO CONSOLE       DCL
         ABEND 100,DUMP       ABEND WITH DUMP                      DCL
         EJECT                                                     DCL
****************************************************************** DCL
*                                                                * DCL
*   SUBROUTINE UCBSRCH                                           * DCL
*                                                                * DCL
*     LOCATES UCB FOR DIRECT-ACCESS VOLUME WITH SERIAL NUMBER    * DCL
*     AT ADDRESS IN REG 1.  RETURNS VIA REG 14 WITH ALL REGIS-   * DCL
*     TERS RESTORED EXCEPT REG 2, WHICH CONTAINS ADDRESS OF UCB  * DCL
*     IF FOUND, OTHERWISE 0.                                     * DCL
*                                                                * DCL
****************************************************************** DCL
         SPACE 1                                                   DCL
         USING *,15           ESTABLISH REG 15 AS BASE REGISTER    DCL
UCBSRCH  ST    14,UCBS6       SAVE REG 14                          DCL
         L     14,CVTPTR      LOAD CVT ADDRESS                     DCL
         L     14,CVTILK2-CVT(14) SELECT FIRST UCB                 DCL
         SLR   2,2           CLEAR FOR IC                        91161
UCBS1    ICM   2,3,0(14)     GET NEXT UCB ADDRESS                91161
         BZ    UCBS3         NULL; GO TO UCBS3                   91161
         CLC   0(6,1),28(2)   NO; VOLSER MATCH?                    DCL
         BNE   UCBS3              NO; GO TO UCBS3                  DCL
UCBS2    TM    18(2),X'20'        YES; DIRECT-ACCESS DEVICE?       DCL
         BO    UCBS5                   YES; GO TO UCBS5            DCL
UCBS3    CLI   2(14),X'FF'             NO; LAST ENTRY?             DCL
         BE    UCBS4                       YES; GO TO UCBS4        DCL
         LA    14,2(14)                    NO; SELECT NEXT UCB     DCL
         B     UCBS1          GO TO UCBS1                          DCL
UCBS4    SR    2,2            INDICATE UCB NOT FOUND               DCL
UCBS5    L     14,UCBS6       RELOAD REG 14                        DCL
         BR    14             RETURN                               DCL
UCBS6    DC    2F'0'          REGISTER SAVE AREA                   DCL
         EJECT
         ENTRY FLAGS         GLOBAL TASK FLAGS                   85231
FLAGS    DC    X'00'                                             85231
FGDEL    EQU   X'01'           CATALOG ALTERATION PERMITTED      85231
FGQUICK  EQU   X'80'           SCAN MASTER CATALOG ONLY          85231
BEGTTR   DC    X'000001'      TTR FOR FIRST BLOCK OF CATALOG
BEGINDXL DC    H'0'           INDEX NAME LENGTH
BEGINDX  DC    44C' '         FULLY QUALIFIED INDEX
         ENTRY CVOL
CVOL     DS    CL6            VOLSER FOR CATALOG CURRENTLY SELECTED
DEVTYPE  DS    CL4            DEVICE TYPE CHARACTERISTICS
BLCKCNT  DC    F'0'
DWORK    DS    D
BLKMSG   DC    0F'0',AL2(EBLKMSG-*,0)
BLKNO    DC    CL7' '
         DC    C' ACTIVE CATALOG BLOCKS ON '
BLKVOL   DC    CL6' '
EBLKMSG  EQU   *
MCAMSG   DC    0F'0',AL2(EMCAMSG-*,0)                              DCL
MCA1     DC    CL37' '        MCABEND MESSAGE BUFFER               DCL
EMCAMSG  EQU   *                                                   DCL
SCENF    DC    CL37'SYS1.NUCLEUS CATALOG ENTRY NOT FOUND'          DCL
SUANF    DC    CL37'SYS1.NUCLEUS UNIT ADDRESS NOT FOUND'           DCL
SAF      DC    CL37'SYS1.NUCLEUS ALLOCATION FAILED'                DCL
SOF      DC    CL37'SYS1.NUCLEUS OPEN FAILED'                      DCL
SSNF     DC    CL37'SYS1.NUCLEUS(SYSCATLG) NOT FOUND'              DCL
MCUANF   DC    CL37'MASTER CATALOG UNIT ADDRESS NOT FOUND'         DCL
MCAF     DC    CL37'MASTER CATALOG ALLOCATION FAILED'              DCL
MCOF     DC    CL37'MASTER CATALOG OPEN FAILED'                    DCL
MCPF     DC    CL37'MASTER CATALOG POSITIONING FAILED'             DCL
TRRF     DC    CL37'TRUE-NAME RECORD READ FAILED'                  DCL
NRRF     DC    CL37'NONVSAM RECORD READ FAILED'                    DCL
NRKE     DC    CL37'NONVSAM RECORD KEY ERROR'                      DCL
SNRNF    DC    CL37'SPECIFIED NONVSAM RECORD NOT FOUND'            DCL
NRFNR    DC    CL37'NONVSAM RECORD FORMAT NOT RECOGNIZED'          DCL
NCAF     DC    CL37'NONVSAM CATALOG ALLOCATION FAILED'             DCL
NCOF     DC    CL37'NONVSAM CATALOG OPEN FAILED'                   DCL
SSRE     DC    CL37'SYS1.NUCLEUS(SYSCATLG) READ ERROR'             DCL
ALMSG    DC    CL19'ALLOCATION FAILED  '                           DCL
LOMSG    DC    CL19'LOCATION FAILED    '                           DCL
EMPMSG   DC    0F'0',AL2(EEMPMSG-*,0)                              DCL
         DC    CL24'NONVSAM CATALOG ON DISK '                      DCL
EMP1     DC    CL15'XXXXXX IS EMPTY'                               DCL
EEMPMSG  EQU   *                                                   DCL
VNMMSG   DC    0F'0',AL2(EVNMMSG-*,0)                              DCL
         DC    CL23'NONVSAM CATALOG VOLUME '                       DCL
VNM1     DC    CL18'XXXXXX NOT MOUNTED'                            DCL
EVNMMSG  EQU   *                                                   DCL
NCTMSG   DC    0F'0',AL2(NCTMSG-*,0)                               DCL
         DC    CL29'NO NONVSAM CATALOG ON VOLUME '                 DCL
NCT1     DC    CL6'XXXXXX'                                         DCL
ENCTMSG  EQU   *                                                   DCL
BLKEDIT  DC    X'4020206B202120'                                   DCL
MCSW     DC    X'0'           MASTER CATALOG SEARCH CONTROL        DCL
*                               SWITCH                             DCL
*                                 X'0'  SEEKING ALIAS RECORD       DCL
*                                 X'4'  SEEKING NONVSAM RECORD     DCL
UNCTGFL  DC    X'0'           HIGH-LEVEL INDEX UNCATALOG FLAG      DCL
MCKEY    DC    XL8'0'         VSAM MASTER CATALOG SEARCH KEY       DCL
NEWKEY   DC    0F'0',XL4'0'   NEW SEARCH KEY                       DCL
MCBUF    DC    32XL16'0'      VSAM MASTER CATALOG BUFFER           DCL
         ORG   MCBUF+49                                            DCL
MCBDSN   DC    CL44'0'        DSNAME FIELD IN MCBUF                DCL
         ORG   MCBUF+512                                           DCL
MCBUFE   EQU   *              END OF MASTER CATALOG RECORD BUFFER  DCL
MCMSG    DC    CL15' '        REQUEST MESSAGE AREA                 DCL
MCECB    DC    F'0'           MCATLG EVENT CONTROL BLOCK           DCL
*                                  BYPASS STATEMENTS TO LABEL      DCL
*                                    'BYP3' UNLESS VALUE ASSIGNED  DCL
*                                    TO &SVC VIA EARLIER CONDI-    DCL
.BYPASS3 AIF   (&BYPASS EQ 1).BYP3   TIONAL ASSEMBLY SEQUENCE      DCL
SVCKEY   DC    CL9'S'         SVC CONSTANT AND WORK AREA           DCL
.BYP3    ANOP                 END OF CONDITIONAL BYPASS RANGE      DCL
TCBADDR  DC    F'0'           TCB ADDRESS                          DCL
NUCLIST  CAMLST NAME,         ARGUMENT LIST FOR LOCATE MACRO,      DCL X
               NUCDSN,,         USED TO OBTAIN VOLUME SERIAL NUM-  DCL X
               MCBUF            BER OF SYSTEM RESIDENCE VOLUME     DCL
*                               FROM SYSTEM CATALOG                DCL
NUCRBP   DC    0F'0',AL1(S99RBPND),AL3(NUCRB) NUCLEUS REQUEST      DCL
*                                    BLOCK POINTER                 DCL
NUCRB    DC    0F'0',AL1(20)  REQUEST BLOCK LENGTH                 DCL
         DC    AL1(S99VRBAL)  SPECIFY ALLOCATION                   DCL
         DC    XL6'0'         FLAGS1, ERROR CODES, INFO CODES      DCL
         DC    A(NUCTPP)      POINTER TO TEXT POINTER LIST         DCL
         DC    XL8'0'         RESERVED, FLAGS2                     DCL
NUCTPP   DC    A(NUCT1)       NUCLEUS TEXT POINTER LIST            DCL
         DC    A(NUCT2)                                            DCL
         DC    A(NUCT3)                                            DCL
         DC    A(NUCT4)                                            DCL
         DC    A(NUCT5)                                            DCL
         DC    A(NUCT6)                                            DCL
         DC    X'80',AL3(NUCT7)                                    DCL
NUCT1    DC    0F'0',AL2(DALDSNAM) SPECIFY DSNAME                  DCL
         DC    H'1,44'        PARM COUNT AND LENGTH                DCL
NUCDSN   DC    CL44'SYS1.NUCLEUS' DSNAME                           DCL
NUCT2    DC    0F'0',AL2(DALMEMBR) SPECIFY MEMBER NAME             DCL
         DC    H'1,8'         PARM COUNT AND LENGTH                DCL
SYSCATLG DC    C'SYSCATLG'    MEMBER NAME                          DCL
NUCT3    DC    0F'0',AL2(DALSTATS) SPECIFY DISP=SHR                DCL
         DC    H'1,1'         PARM COUNT AND LENGTH                DCL
         DC    X'08'          SHR                                  DCL
NUCT4    DC    0F'0',AL2(DALVLSER) SPECIFY VOLUME SERIAL NUMBER    DCL
         DC    H'1,6'         PARM COUNT AND LENGTH                DCL
NUCVOL   DC    CL6' '         VOLUME SERIAL NUMBER                 DCL
NUCT5    DC    0F'0',AL2(DALUNIT) SPECIFY UNIT ADDRESS             DCL
         DC    H'1,3'         PARM COUNT AND LENGTH                DCL
NUCADDR  DC    CL3' '         UNIT ADDRESS                         DCL
NUCT6    DC    0F'0',AL2(DALCLOSE) SPECIFY UNALLOCATE AT CLOSE     DCL
         DC    H'0'           PARM COUNT                           DCL
NUCT7    DC    0F'0',AL2(DALRTDDN) SPECIFY RETURN DDNAME           DCL
         DC    H'1,8'         PARM COUNT AND LENGTH                DCL
NUCDDN   DC    CL8' '         DDNAME RETURN FIELD                  DCL
MCRBP    DC    0F'0',AL1(S99RBPND),AL3(MCRB) MASTER CATALOG RE-    DCL
*                                    QUEST BLOCK POINTER           DCL
MCRB     DC    0F'0',AL1(20)  REQUEST BLOCK LENGTH                 DCL
         DC    AL1(S99VRBAL)  SPECIFY ALLOCATION                   DCL
         DC    XL6'0'         FLAGS1, ERROR CODES, INFO CODES      DCL
         DC    A(MCTPP)       POINTER TO TEXT POINTER LIST         DCL
         DC    XL8'0'         RESERVED, FLAGS2                     DCL
MCTPP    DC    A(MCT1)        MASTER CATALOG TEXT POINTER LIST     DCL
         DC    A(MCT2)                                             DCL
         DC    A(MCT3)                                             DCL
         DC    A(MCT4)                                             DCL
         DC    A(MCT5)                                             DCL
         DC    X'80',AL3(MCT6)                                     DCL
MCT1     DC    0F'0',AL2(DALDSNAM) SPECIFY DSNAME                  DCL
         DC    H'1,44'        PARM COUNT AND LENGTH (19=>44!)    90036
MCNAME   DC    CL44' '        MASTER CATALOG DSNAME                DCL
MCT2     DC    0F'0',AL2(DALSTATS) SPECIFY DISP=SHR                DCL
         DC    H'1,1'         PARM COUNT AND LENGTH                DCL
         DC    X'08'          SHR                                  DCL
MCT3     DC    0F'0',AL2(DALVLSER) SPECIFY VOLUME SERIAL NUMBER    DCL
         DC    H'1,6'         PARM COUNT AND LENGTH                DCL
MCVOL    DC    CL6' '         VOLUME SERIAL NUMBER                 DCL
MCT4     DC    0F'0',AL2(DALUNIT) SPECIFY UNIT ADDRESS             DCL
         DC    H'1,3'         PARM COUNT AND LENGTH                DCL
MCUNIT   DC    CL3' '         UNIT ADDRESS                         DCL
MCT5     DC    0F'0',AL2(DALCLOSE) SPECIFY UNALLOCATE AT CLOSE     DCL
         DC    H'0'           PARM COUNT                           DCL
MCT6     DC    0F'0',AL2(DALRTDDN) SPECIFY RETURN DDNAME           DCL
         DC    H'1,8'         PARM COUNT AND LENGTH                DCL
MCDDN    DC    CL8' '         DDNAME RETURN FIELD                  DCL
REQBLK   DC    0F'0',X'80',AL3(*+3) DYNALLOC REQUEST BLOCK         DCL
*                                     POINTER                      DCL
         DC    AL1(20)        REQUEST BLOCK LENGTH                 DCL
         DC    AL1(S99VRBAL)  SPECIFY ALLOCATION                   DCL
         DC    XL2'0'         FLAGS1                               DCL
         DC    XL4'0'         ERROR AND INFO CODES                 DCL
         DC    A(TXTPTRS)     POINTER TO TEXT POINTER LIST         DCL
         DC    XL4'0'         RESERVED                             DCL
         DC    XL4'0'         FLAGS2                               DCL
         DS    0F             ALIGN TXTPTRS ON FULL-WORD BOUNDARY  DCL
TXTPTRS  DC    A(TEXT1)       TEXT POINTER LIST                    DCL
         DC    A(TEXT2)                                            DCL
         DC    A(TEXT3)                                            DCL
         DC    A(TEXT4)                                            DCL
         DC    A(TEXT5)
         DC    X'80',AL3(TEXT6)                                    DCL
TEXT1    DC    0F'0',AL2(DALDSNAM) SPECIFY DSNAME                  DCL
         DC    H'1,44'        PARM COUNT AND LENGTH                DCL
CATNAME  DC    CL44'SYSCTLG'  DSNAME                               DCL
TEXT2    DC    0F'0',AL2(DALSTATS) SPECIFY DISP=SHR                DCL
         DC    H'1,1'         PARM COUNT AND LENGTH                DCL
         DC    X'08'          SHR                                  DCL
TEXT3    DC    0F'0',AL2(DALVLSER) VOLSER                          DCL
         DC    H'1,6'         PARM COUNT AND LENGTH                DCL
VOLSER   DC    CL6' '         VOLSER                               DCL
TEXT4    DC    0F'0',AL2(DALUNIT) SPECIFY UNIT ADDRESS             DCL
         DC    H'1,3'         PARM COUNT AND LENGTH                DCL
UNITADDR DC    CL4' '         UNIT ADDRESS                         DCL
TEXT5    DC    0F'0',AL2(DALCLOSE) SPECIFY UNALLOCATE AT CLOSE     DCL
         DC    H'0'           PARM COUNT                           DCL
TEXT6    DC    0F'0',AL2(DALRTDDN) DDNAME TO BE RETURNED           DCL
         DC    H'1,8'         PARM COUNT AND LENGTH                DCL
DDNAME   DC    CL8' '         DDNAME RETURN FIELD                  DCL
PATCH    DC    20F'0'         PATCH AREA                           DCL
CATDSCB  CAMLST SEARCH,       ARGUMENT LIST FOR OBTAIN MACRO USED  DCL X
               CATNAME,         TO READ NONVSAM DATASET DSCB VIA   DCL X
               CVOL,MCBUF       DSNAME                             DCL
         EJECT                                                     DCL
RPL1     RPL   ACB=MCATLG,AM=VSAM,AREA=MCBUF,                      DCL X
               AREALEN=MCBUFE-MCBUF,                               DCL X
               ARG=MCKEY,ECB=MCECB,KEYLEN=8,MSGAREA=MCMSG,         DCL X
               MSGLEN=L'MCMSG,NXTRPL=0,OPTCD=(KEY,DIR,GEN)         DCL
RPL2     RPL   ACB=MCATLG,AM=VSAM,AREA=MCBUF,                      DCL X
               AREALEN=MCBUFE-MCBUF,                               DCL X
               ARG=MCKEY,ECB=MCECB,KEYLEN=4,MSGAREA=MCMSG,         DCL X
               MSGLEN=L'MCMSG,NXTRPL=0,OPTCD=(KEY,SEQ,GEN)         DCL
         EJECT
NUCLEUS  DCB   BLKSIZE=80,DDNAME=NUCLEUS,DSORG=PO,EODAD=NABMSG,    DCL X
               LRECL=80,MACRF=(R),RECFM=F,SYNAD=NABMSG             DCL
         SPACE 2
MCATLG   ACB   AM=VSAM,CATALOG=NO,DDNAME=MCATLG,                   DCL X
               MACRF=(KEY,DIR,SEQ)                                 DCL
         EJECT
         DCBD  DSORG=DA
         EJECT                                                     DCL
         CVT   DSECT=YES,LIST=YES                                  DCL
         EJECT                                                     DCL
*                                  BYPASS STATEMENTS TO LABEL      DCL
*                                    'BYP4' UNLESS VALUE ASSIGNED  DCL
*                                    TO &SVC VIA EARLIER CONDI-    DCL
.BYPASS4 ANOP , &BYPASS EQ 1).BYP4   TIONAL ASSEMBLY SEQUENCE      DCL
         IKJTCB LIST=YES                                           DCL
         EJECT                                                     DCL
         IEZJSCB ,                                                 DCL
.BYP4    ANOP                 END OF CONDITIONAL BYPASS RANGE      DCL
         EJECT                                                     DCL
         IHADVCT                                                   DCL
         EJECT                                                     DCL
         IEFZB4D0                                                  DCL
         IEFZB4D2                                                  DCL
         IECSDSL1 1          EXPAND FORMAT 1 DSCB MAPPING        85230
         END
