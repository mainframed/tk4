VATBUILD TITLE 'V A T B U I L D  ***  BUILD A VATLST FROM UCBS'
***********************************************************************
*                                                                     *
*   PROGRAM TO BUILD A VATLST MEMBER FROM CURRENT UCB STATE.          *
*   ALL VOLUMES NOT PERMANENTLY RESIDENT ARE SET RESERVED.            *
*   DEFAULT USE IF NOT PUBLIC OR STORAGE IS PRIVATE.                  *
*   OUTPUT DATA GOES TO SYSPUNCH, EXPECTED TO BE FB,80                *
*                                                                     *
*   PARM=IPL (ACTUALLY ANY PARM OTHER THAN TEST) WILL SUPPRESS CARDS  *
*     FOR PACKS THAT ARE RESERVED AND PRIVATE, UNDER THE ASSUMPTION   *
*     THAT PROGRAM VATUCB WILL BE RUN AT IPL TIME TO SET DEFAULTS.    *
*                                                                     *
*   NEW CODE BY GERHARD POSTPISCHIL, EXPERT SYSTEM PROGRAMMING        *
*        gerhardp@charter.net                                         *
*                                                                     *
*   SOME CODE COPIED FROM PROGRAM VATUSE FROM CBT FILE 065,           *
*   WRITTEN BY AL ARAUJO, JUNE 1976,                                  *
*      FOR THE LOCKHEED-CALIFORNIA COMPANY                            *
*   MODIFIED BY DOUG MERCER, JULY 1980, AUGUST 1980, AND JAN 1984.    *
*                                                                     *
*        ATTRIBUTES - REENTRANT                                       *
*        TAB SETTINGS - 10 16 30 72                                   *
*                                                                     *
***********************************************************************
         SPACE 1
         PUNCH '   ORDER VATBUILD(P) ' DUMP ALIGNMENT
         GBLB  &MVSXA             FOR UCBLOOP MACRO
         SPACE 1
VATBUILD START 0
         B     VATBLGEN-*(,R15)   SKIP ID
         DC    AL1(17),C'VATBUILD &SYSDATE'
VATBLGEN STM   R14,R12,12(R13)    SAVE CALLER'S REGISTERS
         LR    R12,R15
         USING VATBUILD,R12
         LR    R7,R1          SAVE PARM POINTER
         SPACE 1                                               DM JUL80
         L     R1,CVTPTR     GET CVT
         ICM   R1,15,CVTJESCT-CVTMAP(R1)  LOAD AND TEST JES CT
         BZ    GETVATN1      USE DEFAULT IF NONE
         ICM   R0,15,JESNUCBS-JESCT(R1)  GET SYSTEM DEVICE COUNT
         BZ    GETVATN1      USE DEFAULT IF NONE
         MH    R0,=Y(VATLNG)  FIND SIZE REQUIRED
         B     GETVATN2      AND GET THAT
GETVATN1 LH    R0,=H'8096'   SHOULD BE ENOUGH FOR TURNKEY ?
GETVATN2 LA    R3,SAVSIZ     GET SIZE OF PATTERN
         LR    R5,R0         REMEMBER THE TABLE SIZE
         AR    R0,R3         GET TOTAL SIZE
         GETMAIN R,LV=(0)                                      DM JUL80
         L     R2,=V(PATTERN)  SAVE AREA PATTERN
         LR    R15,R0
         LR    R14,R1        COPY BASIC STUFF INTO
         MVCL  R14,R2          AREA AND CLEAR REST
         ST    R1,8(,R13)
         ST    R13,4(,R1)
         LR    R13,R1
         USING SAVEAREA,R13                                    DM JUL80
         STM   R0,R1,VATGMLNG SAVE                             DM JUL80
         LA    R9,SAVSIZ(,R1)   START OF UCB INFO
         ST    R9,VATTBLE    SAVE
         SR    R4,R4
         LA    R2,VATLNG     SIZE OF ONE ENTRY
         DR    R4,R2         NUMBER OF ENTRIES IN TABLE
         BCTR  R5,0          LESS ONE
         MR    R4,R2         OFFSET TO LAST ENTRY
         AR    R4,R9         ADDRESS OF LAST ENTRY
         ST    R4,VATLAST    SAVE LAST ENTRY
         SPACE 1
         LA    R1,0(,R7)      CLEAN PARM POINTER
         LTR   R1,R1          ANY ?
         BZ    DONEPARM       NO ?
         L     R1,0(,R1)      LOAD PARM
         LA    R1,0(,R1)      CLEAN PARM ADDRESS
         LTR   R1,R1          ANY ?
         BZ    DONEPARM       NO ?
         ICM   R0,3,0(R1)     ANY PARM AT ALL?
         BNP   DONEPARM       NO
         CLC   =H'3',0(R1)    LONG ENOUGH ?
         BNL   IPLMODE        NO; SET SHORT MODE
         CLC   =C'TEST',2(R1)   TEST ?
         BE    IPLMODE        SET SHORT
         OI    PROFLAGS,FGTEST    SET TEST MODE (UNUSED)
         B     DONEPARM
IPLMODE  OI    PROFLAGS,FGIPL
         SPACE 1
         USING VATLST,R9
DONEPARM DEVTYPE PUNCH+DCBDDNAM-IHADCB,DEVTYPE   HAVE A DD ?
         BXLE  R15,R15,DONEDEVT   YES
         WTO   'VATBUILD: SYSPUNCH DD UNUSABLE'
         ABEND 2540,DUMP
         SPACE 1
DONEDEVT OPEN  (PUNCH,(OUTPUT)),MF=(E,OCLIST)
         SPACE 2                                               DM AUG80
********************************************************************
*   BEGIN UCB LOOKUP                                               *
********************************************************************
         XC    UCBWORK,UCBWORK    ZERO WORK AREA               DM JAN84
         LA    R0,UCBWORK         INITIALIZE PARAMETER LIST    DM JAN84
         ST    R0,UCBPARM                                      DM JAN84
         LA    R0,=AL1(UCB3DACC)  DASD DEVICE TYPE             DM JAN84
         ST    R0,UCBPARM+4                                    DM JAN84
         LA    R0,UCBADDR         RETURN ADDRESS               DM JAN84
         ST    R0,UCBPARM+8                                    DM JAN84
         OI    UCBPARM+8,X'80'    SET END OF LIST              DM JAN84
         L     R4,CVTPTR
         USING CVTMAP,R4
         AIF   (&MVSXA).NEWLOOK   AT LEAST XA?
         XC    UCBWORK(3),UCBWORK CLEAR FOR DUPLICATE ELIM.
         L     R4,CVTILK2         GET UCB LOOKUP TABLE
         SR    R3,R3
UNITLOOP ICM   R3,3,0(R4)         LOAD FIRST/NEXT UCB ADDRESS
         BZ    UNITBUMP           SKIP DUMMY
         CLM   R3,3,=X'FFFF'      LAST ENTRY ?
         BE    ENDSRCH            YES; DONE
         USING UCBOB,R3
         MVC   DB(3),UCBNAME      COPY EBCDIC UCB NAME
         XC    DB(3),=X'F0F0F0'   FLIP ZONES
         CLC   DB(3),UCBWORK      LOWER THAN PREVIOUS ?
         BNH   UNITBUMP           YES; IGNORE IT
         CLI   UCBTBYT3,UCB3DACC  DASD DEVICE ?
         BNE   UNITBUMP           NO; SKIP
         ST    R3,UCBADDR         REMEMBER FOR NEXT TIME
         CLI   UCBVOLI,C' '       GOOD SERIAL ?
         BH    UNITPROC           YES; PROCESS
UNITBUMP LA    R4,2(,R4)          TRY NEXT SLOT
         B     UNITLOOP
UNITPROC DS    0H
         AGO   .COMLOOK
.NEWLOOK L     R4,CVTUCBSC    ADDR OF UCB SCAN ROUTINE         DM JAN84
         DROP  R4
         SPACE ,                                               DM AUG80
UNITBUMP LR    R15,R4             CVTUCBSC                     DM JAN84
         LA    R1,UCBPARM                                      DM JAN84
         BALR  R14,R15            SCAN                         DM JAN84
         LTR   R15,R15                                         DM JAN84
         BNZ   ENDSRCH            LAST UCB                     DM JAN84
         SPACE ,                                               DM JAN84
         L     R3,UCBADDR                                      DM JAN84
         USING UCBOB,R3
         CLI   UCBVOLI,X'0'         IS THE VOL ID ZERO?
         BE    UNITBUMP
.COMLOOK TM    UCBTBYT2,UCBRVDEV       IS IT A VIRT UCB?       ARA 1/80
         BO    UNITBUMP                YES/ GO GET ANOTHER UCB ARA 1/80
         TM    PROFLAGS,FGIPL     RUNNING IN ABBREVIATED MODE ?
         BZ    SAVEDATA      NO; EXPAND ALL
         TM    UCBSTAT,UCBPRES+UCBSYSR  SYSRES OR PERM.RESIDENT ?
         BNZ   SAVEDATA      YES; GEN
         TM    UCBSTAB,UCBBSTR+UCBBPUB  OTHER THAN PRIVATE ?
         BZ    UNITBUMP      NO; IGNORE
         SPACE 1
**********************************************************************
*   MAKE A VATLST ENTRY FOR THIS                                     *
**********************************************************************
SAVEDATA MVC   VATSER,UCBVOLI     SAVE SERIAL
         MVC   VATTYP,UCBTBYT4    SAVE TYPE
         MVC   VATUSE,UCBSTAB     SAVE USE ATTRIBUTE
         MVC   VATMNT,UCBSTAT     SAVE MOUNT STATUS
         MVC   VATSHR,UCBTBYT2    SAVE SHARED BIT
         MVC   VATIPL,UCBDMCT     SAVE MNT COUNT
         OC    VATIPL,UCBUSER     AND ADD CURRENT USE
         AIF   (&MVSXA).NEWDEV
         MVC   VATDEVN(L'UCBNAME),UCBNAME
         AGO   .COMDEV
.NEWDEV  UNPK  DB(1+L'VATDEVN),UCBCHAN(1+L'UCBCHAN)
         MVC   VATDEVN,DB
         TR    VATDEVN,TRHEXTAB
.COMDEV  LA    R9,VATLNG(,R9)     NEXT SLOT
         B     UNITBUMP      LOOK AGAIN
         DROP  R9
         EJECT
ENDSRCH  S     R9,=A(VATLNG)   BACK TO LAST USED ENTRY
         ST    R9,VATLAST    SAVE IT
         SR    R8,R8         CLEAR FOR DIVIDE
         S     R9,VATTBLE    LESS START
         D     R8,=A(VATLNG)  GET NUMBER OF ENTRIES
         LA    R8,1(,R9)     SET COUNT FOR MSORT
         PUSH  USING
         BAL   R14,MSORT      SORT THE TABLE
           NOP 0              SORT FAILED
         SPACE 1
         L     R7,VATTBLE    GET TABLE START
         LA    R8,VATLNG       AND ENTRY LENGTH
         L     R9,VATLAST        AND LAST ENTRY ADDRESS
***********************************************************************
*   BUILD A VAT ENTRY FOR EACH DASD SERIAL FOUND                      *
***********************************************************************
         USING VATLST,R7
FORMLOOP MVC   OUTSER,VATSER   COPY VOLUME SERIAL
         MVC   OUTMNT,VATMNT   COPY MOUNT ATTRIBUTE
         NI    OUTMNT,UCBRESV+UCBPRES+UCBSYSR   KEEP IT INTERESTING
         TR    OUTMNT,TABMOUNT   MAKE 0 (PRES) OR 1 (RESV)
         MVC   OUTUSE,VATUSE   COPY USE ATTRIBUTE
         NI    OUTUSE,UCBBPRV+UCBBPUB+UCBBSTR  IGNORE OTHERS
         TR    OUTUSE,TABUSE     MAKE 0 (PUB) 1 (STOR) OR 2 (PRIVATE)
         LA    R0,UNITY-L'UNITY  GET DEVICE TABLE
         SR    R1,R1
         IC    R1,VATTYP       GET DEVICE TYPE
         MH    R1,=AL2(L'UNITY)   *8
         AR    R1,R0
         MVC   OUTTYP,0(R1)   SET DEVICE TYPE
         MVI   OUTIPL,C'Y'    REQUIRED AT IPL
         CLI   VATIPL,0       IN USE ?
         BH    *+8            YES
         MVI   OUTIPL,C'N'    SEY OPTIONAL
         LA    R1,=C'UNSHR'
         TM    VATSHR,UCBRR  TEST FOR SHARED DASD
         BZ    *+8           NOT
         LA    R1,=C'SHARE'  SET SHARABLE
         MVC   OUTSHR,0(R1)
         MVC   OUTDEVN(L'VATDEVN-1+&MVSXA),VATDEVN
         LA    R0,OUTRDW     POINT TO RECORD DESCRIPTOR
         TM    DCBRECFM+PUNCH-IHADCB,DCBRECF  RECFM=F OR =U ?
         BZ    PUNCHOUT      NEITHER; USE RDW
         LA    R0,OUTCARD    POINT TO CARD IMAGE
PUNCHOUT PUT   PUNCH,(0)     WRITE THE CARD IMAGE
         BXLE  R7,R8,FORMLOOP   DO NEXT
         SPACE 2
         CLOSE MF=(E,OCLIST)
         FREEPOOL             PUNCH                            DM JUL80
         L     R9,RETCODE    GET RETURN CODE
         LM    R0,R1,VATGMLNG  FREE THE WORK AND TABLE AREA
         L     R13,4(,R13)
         DROP  R13                                             DM JUL80
         FREEMAIN R,LV=(0),A=(1)                               DM JUL80
         LR    R15,R9         GET RETURN CODE
         L     R14,12(,R13)   RESTORE RETURN ADDRESS
         LM    R0,R12,20(R13)   RESTORE ALL BUT RC
         BR    R14            RETURN
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*      ADAPTED FROM SORT APPEARING IN 'FORTRAN PROGRAMMING' BY        *
*      FREDRIC STUART, WILEY '69. ORIGINATED BY D.L. SHELL, MODIFIED  *
*      BY MARLENE METZNER (PRATT&WHITNEY).                            *
*                                                                     *
*---------------------------------------------------------------------*
MSORT    STM   R14,R9,20(R13)   SAVE REGISTERS
         LA    R0,1             MAKE CONSTANT
         LA    R2,VATLNG
         LR    R3,R2            COPY INTO EXECUTE REGISTER
         SR    R3,R0            DECREMENT FOR EXECUTE
         BM    MSORTY           TAKE ERROR EXIT
         LR    R9,R8            COUNT PASSED BY CALLER
         CR    R9,R0            CHECK AT LEAST TWO ENTRIES
         BNH   MSORTB           TAKE GOOD EXIT IF NOT
         MR    R8,R2            CONVERT TO TABLE LENGTH
         LR    R7,R9            COPY TO SUBLIST
         L     R1,VATTBLE
MSORTA   SRL   R7,1             HALVE SUBLIST SIZE
         XR    R6,R6            CLEAR FOR DIVIDE
         DR    R6,R2            CONVERT TO LIST ENTRIES
         MR    R6,R2            BACK TO INT(M/S)
         LTR   R7,R7            ANY LEFT TO BE DONE ?
         BP    MSORTC           YES; PROCEED
MSORTB   LM    R14,R9,20(R13)   RESTORE USER'S REGISTERS
         B     4(,R14)          TAKE GOOD EXIT
MSORTC   LR    R6,R9            GET ENTRY SIZE
         SR    R6,R7            GET SIZE OF OTHER HALF
         XR    R5,R5            CLEAR COUNTER
MSORTD   LA    R4,0(R5,R1)      GET ADDRESS OF NEXT ELEMENT
MSORTE   LA    R8,0(R4,R7)      GET ADDRESS OF OTHER ELEMENT
         CLC   0(7,R4),0(R8)    PATTERN COMPARE
         BNH   MSORTF           IN SEQUENCE - SKIP FLIP
         XC    0(VATLNG,R4),0(R8)      FLIP 1/3
         XC    0(VATLNG,R8),0(R4)      FLIP  2
         XC    0(VATLNG,R4),0(R8)      FLIP 1/3
         SR    R4,R7            GET NEXT ELEMENT
         CR    R4,R1            BACK TO START OF TABLE ?
         BNL   MSORTE           NO; TRY AGAIN
MSORTF   AR    R5,R2            NEXT COMPARE ELEMENT ADDRESS
         CR    R5,R6            DONE THIS PART OF LIST ?
         CR    R5,R6            DONE THIS PART OF LIST ?
         BNL   MSORTA           YES; GET ANOTHER SUBLIST
         B     MSORTD           ELSE PROCEED
MSORTY   LM    R14,R9,20(R13)  RESTORE REGISTERS                 92052
         BR    R14                     TAKE ERROR EXIT
         SPACE 2
         LTORG
EXLST    DC    0A(0),X'05',AL3(PUNDCBEX)   VERIFY PUNCH DCB PARMS
         SPACE 1
UNITY    DC    CL8'2311'     1 - DEVICE NAMES BY UCBTBYT4
         DC    CL8'2301  '   2
         DC    CL8'2303  '   3
         DC    CL8'2302  '   4 - 9345 IN MODERN SYSTEMS
         DC    CL8'2321  '   5
         DC    CL8'2305  '   6
         DC    CL8'2305  '   7
         DC    CL8'2314  '   8
         DC    CL8'3330  '   9
         DC    CL8'3340  '   A
         DC    CL8'3350  '   B
         DC    CL8'3375  '   C
         DC    CL8'3330-1'   D
         DC    CL8'3380  '   E
UNITEND  DC    CL8'3390  '   F
         SPACE 2
MYUCB    DSECT ,
         PUSH  PRINT
         PRINT OFF
         IEFUCBOB LIST=NO
         POP   PRINT
VATBUILD CSECT ,
         SPACE 2
TABMOUNT DC    36C'1'        TABLE OF MOUNT STATUS (0 PRES, 1 RESV)
         ORG   TABMOUNT+UCBPRES
         DC    C'0'          PERM. RESIDENT
         ORG   TABMOUNT+UCBSYSR
         DC    C'0'          PERM. RESIDENT
         ORG   TABMOUNT+UCBPRES+UCBSYSR
         DC    C'0'          PERM. RESIDENT
         ORG   ,
         SPACE 1
TABUSE   DC    28C'2'        TABLE OF USE (0 PUB, 1 STOR, 2 PRIV)
         ORG   TABUSE+UCBBPUB  PUBLIC ?
         DC    C'1'
         ORG   TABUSE+UCBBSTR  STORAGE?
         DC    C'0'
         ORG   TABUSE+UCBBPUB+UCBBSTR  STORAGE?
         DC    C'0'
         ORG   ,
         SPACE 1
HEXTAB   DC    C'0123456789ABCDEF'
TRHEXTAB EQU   HEXTAB-C'0',256,C'C'
         EJECT
         PUSH  USING
         DROP  ,
         USING PUNDCBEX,R15
         USING IHADCB,R1
***********************************************************************
*                                                                    **
*   THIS PUNCH DCB EXIT SUPPLIES MISSING RECFM, LRECL AND BLKSIZE    **
*   FIELDS.  TARGET IS FB,80,MAXBLK. RECFM F, V, U, AND D SUPPORTED. **
*   MINIMUM DATA LENGTH IS 80.                                       **
*                                                                    **
***********************************************************************
PUNDCBEX LA    R9,L'OUTCARD  GET MAX. PREFERRED TEXT LENGTH
         LA    R10,4(,R9)    FOR D AND V
         LR    R12,R15
         DROP  R15           DEBASE
         USING PUNDCBEX,R12  REBASE
         LR    R11,R1        COPY DCB ADDRESS
         USING PUNCH,R11     AND USE WORK AREA AFTER DCB
         ICM   R8,15,DEVTYPE+4  LOAD MAX BLKSIZE
         BNZ   *+8           EXPECTED
         LH    R8,=H'32760'  WILL FAIL UNLESS DD DUMMY
         L     R2,16         LOAD THE CVT POINTER    CVTPTR
         L     R2,0(,R2)     GET THE TCB BOX         CVTTCBP
         L     R2,4(,R2)     GET TCB OLD
         L     R2,12(,R2)    LOAD TIOT ADDRESS       TCBTIO
         AH    R2,DCBTIOT    ADD TIOT OFFSET FOR THIS ENTRY
         LH    R3,=H'32760'  SET MAXIMUM PERMITTED UNDER OS/370 GP96068
         CR    R8,R3         VALID?                             GP96068
         BNH   *+4+2         YES                                GP96068
         LR    R8,R3         ELSE TRUNCATE                      GP96068
         LH    R3,DCBBLKSI   LOAD CURRENT BLOCKSIZE
         LH    R4,DCBLRECL   AND RECORD LENGTH
         SLR   R2,R2         CLEAR FOR DIVIDE
         TM    DCBRECFM,DCBRECF+DCBRECV  BASIC RECORD FORMAT ?
         BO    PUNDCBU       RECFM=U
         BM    PUNDCBFV      F OR V
         TM    DCBRECFM,DCBRECD  RECFM=D ?
         BO    PUNDCBD       YES; SEE IF USABLE
         CR    R4,R9         DID USER SET LRECL=80 ?
         BE    PUNDCBSF      YES; SET F
         CR    R4,R10        DID USER SET LRECL=84 ?
         BE    PUNDCBSV      YES; SET V
*   HANDLE RECFM=F
PUNDCBSF OI    DCBRECFM,DCBRECF  SET FIXED
PUNDCBFV TM    DCBRECFM,DCBRECV  VARIABLE?
         BNZ   PUNDCBV       YES; BRANCH OUT
PUNDCBF  CR    R4,R9         LRECL SET TO 80 ?
         BE    PUNDCBFL
         LTR   R4,R4         OR LEFT 0?
         BNZ   PRTEXBAD      CONFLICTING PARAMETERS
         LR    R4,R9         SET PREFERRED LENGTH OF 80
PUNDCBFL LTR   R3,R3         SUPPLIED BLKSIZE ?
         BNZ   PUNDCBFB      YES; TEST DIVISIBILITY
         OI    DCBRECFM,DCBRECBR  FORCE BLOCKED
         LR    R3,R8         COPY MAX BLKSIZE
         CLI   DEVTYPE+2,X'20' DASD OUTPUT
         BNE   PUNDCBFT      NO
         CLI   DEVTYPE+3,X'0F'  3390 ?                          GP99363
         BNE   PUNDCB80      NO; FIGURE IT'S 3380 OR 9345       GP99363
         CH    R3,=Y(27998)  LARGER THAN HALF TRACK?            GP99363
         BNH   PUNDCBFT      NO                                 GP99363
         LH    R3,=Y(27998)  LIMIT TO HALF TRACK                GP99363
         B     PUNDCBFT                                         GP99363
PUNDCB80 CH    R3,=Y(23476)  LARGER THAN HALF TRACK?
         BNH   PUNDCBFT      NO                                 GP96068
         LH    R3,=Y(23476)  LIMIT TO HALF TRACK                GP96068
PUNDCBFT DR    R2,R4         DIVIDE
         MR    R2,R4         MAKE MULTIPLE AGAIN
         B     PUNDCBAM      DONE - CHECK ASA VS MACHINE CODE
PUNDCBFB CR    R3,R8         NOT TOO LARGE?
         BH    PRTEXBAD      BLKSIZE TOO LARGE
         DR    R2,R4         SEE IF DIVISIBLE
         LTR   R2,R2         ANY REMAINDER?
         BNZ   PRTEXBAD      YES; TOO BAD
         MR    R2,R4         PUT IT BACK
         OI    DCBRECFM,DCBRECBR  FORCE BLOCKED
         CR    R3,R4         IS BLOCKSIZE=LRECL?
         BNE   PUNDCBAM      NO; CHECK CC
         NI    DCBRECFM,255-DCBRECBR  RESET BLOCKING
         B     PUNDCBAM      CHECK CARR. CONTROLS
*   HANDLE RECFM=U
PUNDCBU  LTR   R4,R4         LRECL=0?
         BZ    PUNDCBUL      YES; CHECK BLKSIZE
         CR    R4,R9         ELSE = 80 ?
         BNE   PRTEXBAD      NO; FAIL
PUNDCBUL LR    R4,R9         SET LRECL=80
         LTR   R3,R3         IS BLKSIZE = 0
         BNZ   PUNDCBUB      NO
         LR    R3,R4         DEFAULT TO BLKSIZE=LRECL
PUNDCBUB CR    R3,R8         IS BLKSIZE NO LESS THAN LRECL?
         BNL   PUNDCBAM      NOW DO UA OR UM
         B     PRTEXBAD      TOO BAD
*   HANDLE(?) RECFM=D
PUNDCBD  LH    R8,=H'9999'   MAXIMUM LEGAL DOCUMENTED BLOCK SIZE
         B     PUNDCBV       OTHERWISE TREAT AS V
*   HANDLE RECFM=V
PUNDCBSV OI    DCBRECFM,DCBRECV+DCBRECBR  SET VARIABLE AND BLOCKED
PUNDCBV  CR    R4,R10        LRECL SET TO 84 ?
         BNL   PUNDCBVL
         LTR   R4,R4         OR LEFT 0?
         BNZ   PRTEXBAD      CONFLICTING PARAMETERS
         LR    R4,R10        SET PREFERRED LENGTH OF 84
PUNDCBVL LA    R2,4(,R4)     SET LRECL+BDW LENGTH
         OI    DCBRECFM,DCBRECBR  FORCE BLOCKED
         LTR   R3,R3         SUPPLIED BLKSIZE ?
         BNZ   PUNDCBVB      YES; TEST SIZE
         LR    R3,R8         COPY MAX BLKSIZE
         CLI   DEVTYPE+2,X'20' DASD OUTPUT
         BNE   PUNDCBVH      NO
         CLI   DEVTYPE+3,X'0F'  3390 ?                          GP99363
         BNE   PUNDCBV8      NO; FIGURE IT'S 3380 OR 9345       GP99363
         CH    R3,=Y(27998)  LARGER THAN HALF TRACK?            GP99363
         BNH   PUNDCBVH      NO                                 GP99363
         LH    R3,=Y(27998)  LIMIT TO HALF TRACK                GP99363
         B     PUNDCBVH                                         GP99363
PUNDCBV8 CH    R3,=Y(23476)  LARGER THAN HALF TRACK?            GP96068
         BNH   PUNDCBVH      NO                                 GP96068
         LH    R3,=Y(23476)  LIMIT TO HALF TRACK                GP96068
PUNDCBVH CR    R2,R3         WILL IT FIT?
         BNH   PUNDCBAM      YES; USE HALF-TRACK BLOCKING
         LR    R3,R8         ELSE USE 32K
PUNDCBVB CR    R3,R8         NOT TOO LARGE?
         BH    PRTEXBAD      BLKSIZE TOO LARGE
         CR    R2,R3         WILL IT FIT?
         BH    PRTEXBAD      YES; USE HALF-TRACK BLOCKING
PUNDCBAM STH   R3,DCBBLKSI   UPDATE BLOCKSIZE
         STH   R4,DCBLRECL   AND RECORD LENGTH
         BR    R14           RETURN
         SPACE 1
PRTEXBAD WTO   'VATBUILD: SYSPUNCH DCB PARAMETERS UNACCEPTABLE'
         ABEND 2540,DUMP
         POP   USING
         EJECT
PATTERN  CSECT ,             LAZY SAVE, WORK, AND TABLE AREA DEFINES
SAVEAREA DC    18A(0)
DB       DC    D'0'
UCBWORK  DC    XL100'0'           IOSVSUCB WORK AREA           DM JAN84
UCBPARM  DC    3A(0)    (UCBWORK,=X'20',UCBADDR+X'80000000')   DM JAN84
UCBADDR  DC    A(0)                                            DM JAN84
         SPACE 1                                               DM AUG80
RETCODE  DC    F'0'           0 - OK; 4 - UCB FIX; 8 - NOT IN VAT
         SPACE 1
PROFLAGS DC    X'0'                                            DM AUG80
FGTEST   EQU   128            TEST ONLY - NO UCB CHANGES
FGIPL    EQU   64             IPL MODE (VATUCB AT IPL) SKIP RSV/PRV
         SPACE 3
PUNCH    DCB   DDNAME=SYSPUNCH,DSORG=PS,MACRF=PM,EXLST=EXLST
OCLIST   OPEN  0,MF=L
DEVTYPE  DC    D'0'          PRE-OPEN DEVTYPE
         SPACE 1
OUTRDW   DC    Y(4+L'OUTCARD,0)
OUTCARD  DC    CL80' '       OUTPUT CARD IMAGE
         ORG   OUTCARD
OUTSER   DC    CL6' ',C','
OUTMNT   DC    C' ',C','
OUTUSE   DC    C' ',C','
OUTTYP   DC    CL8' ',C','
OUTIPL   DC    C' ',C' '
OUTSHR   DC    CL5' ',C' '   LOCAL MOD
OUTDEVN  DC    CL4' '        DEVICE NAME (MVS) OR NUMBER (XA+)
         ORG   ,
VATGMLNG DC    2A(0)          LENGTH/ADDRESS OF WORK AREA
VATTBLE  DC    A(0)           ADDRESS OF VATLST                DM JUL80
VATLAST  DC    A(0)           LAST USED ENTRY IN VATLST        DM JUL80
SAVSIZ   EQU   *-SAVEAREA
         SPACE 2
VATLST   DSECT
VATSER   DS    CL6            VOLUME SERIAL
VATTYP   DS    CL1            UCBTBYT4
VATMNT   DS    CL1            MOUNT ATTRIBUTE
VATUSE   DS    CL1            USE ATTRIBUTE
VATSHR   DS    CL1            UCBTBYT2 (UCB2RR)
VATIPL   DS    CL1            MOUNT MESSAGE/REQUIRED AT IPL
VATDEVN  DS    CL4            UCB NAME OR DEVICE NUMBER
VATLNG   EQU   *-VATLST       PORTION THAT WE WILL STORE       DM JUL80
         SPACE 2
         PRINT NOGEN         SAVE A TREE
         CVT DSECT=YES
         IEFJESCT ,          JES CONTROL TABLE - I/O COUNTS
         DCBD  DEVD=DA,DSORG=PS
         YREGS ,
         END
