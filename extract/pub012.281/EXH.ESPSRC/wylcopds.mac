WYLCOPDS TITLE 'CREATE PDS COMPRESS JCL FOR STORAGE VOLUMES'
         PUNCH ' ORDER WYLCOPDS(P) '  **** MAKE DUMPS EASIER ****
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 2002  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*        COPYRIGHT 1985  EXPERT SYSTEM PROGRAMMING, INC.              *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*  MAINTENANCE:                                                       *
*                                                                     *
*  2002/10/28  GYP  CHECK FOR PDS/E; FIX MINOR THINGIES               *
*  2005/06/04  GYP  CHANGE VTOC STATUS CHECK TO SUBVTOCI ROUTINE      *
*  2008/04/25  GYP  SKIP TEMPORARY DATA SETS (VTAM ENQ INTERLOCK)     *
*  2013/07/30  GYP  ADD DSN AS COMMENT ON COPY CARD                   *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT &PRTSOR
         EXTRN SUBVTOCI      VTOC STATUS ROUTINE                GP05155
WYLCOPDS PGMHEAD ZERO,BASE=(R11,R12),PARM=R9,AM=31,RM=24        GP02299
*---------------------------------------------------------------------*
*                                                                     *
*  SET OPTIONS:                                                       *
*                                                                     *
#STEPS   EQU   1             COMPRESS STEPS PER JOB             GP02300
#PDS     EQU   10            PDS COMPRESSES PER STEP            GP02300
*                                                                     *
*---------------------------------------------------------------------*
         MVC   CAMLST4(CAMLSTLN),PATCAM4  MOVE CAMLISTS         GP02300
         LA    R14,=44X'04'       DSCB4 NAME                    GP02300
         LA    R15,CURRVSER       VOLUME SERIAL POINTER         GP02300
         LA    R0,DSCBWORK        GET WORK AREA ADDRESS         GP02300
         STM   R14,R0,CAMLST4+4   PLACE INTO LIST               GP02300
         LA    R14,CURRCHR        NEW DSCB1 ADDRESS             GP02300
         STM   R14,R0,CAMLST1+4   PLACE INTO LIST               GP02300
         MVC   JOBACCT,=C'Z9080012' DEFAULT ACCOUNT NUMBER      GP02300
         MVI   MSGERR-1,C' '                                    GP02300
         MVC   MSGERR,MSGERR-1  CLEAR ERROR MESSAGE             GP02300
         SPACE 1
         SERVINIT ,          INITIALIZE THE SERVICE ROUTINE
         SERVLOAD @PRINTER,(@OBTAINS,@OBTAIN)  LOAD SUBS        \
         PRTOPEN SYSPRINT,OPT=ABEND      SKIP IF BAD OPEN
         PRTV  HEADER,TITLE=1
         PRTOPEN COMPFILE,DEV=3,OPT=ABEND   OPEN PUNCH OUTPUT
         L     R0,=A(16*1024)  SET SIZE TO LEAVE FREE            81357
         @OBTAIN (R0),OPT=RESERVE   AND RESERVE IT               81357
         LA    R9,0(,R9)     CLEAN PARM POINTER                  90154
         ICM   R9,15,0(R9)   ANY PARM ?                          90154
         BZ    NOPARM        NO                                  90154
         SLR   R8,R8                                             90154
         ICM   R8,3,0(R9)    ANY LENGTH ?                        90154
         BNP   NOPARM        NO                                  90154
         CH    R8,=H'3'      AT LEAST THREE ?                    90154
         BL    NOPARM                                            90154
         CLC   =C'SEQ',2(R9)  RUN JOBS IN SEQUENCE BY PACK ?     90154
         BNE   NOPARM        NO                                  90154
         OI    PROFLAGS,FGRUNSEQ YES; SET IT                     90154
         PUSH  USING                                            GP02300
NOPARM   L     R1,PSATOLD-PSA  GET CURRENT TCB ADDRESS          GP02300
         USING TCB,R1        TCB MAPPING                        GP02300
         ICM   R14,15,TCBTCT LOOK FOR A TCT                     GP02300
         BZ    SKIPACCT                                         GP02300
         USING SMFTCT,R14                                       GP02300
         ICM   R14,15,TCTJMR LOOK FOR A JMR                     GP02300
         BZ    SKIPACCT                                         GP02300
         USING JMR,R14                                          GP02300
         CLI   JMRUSEID,C'A' ACCOUNT PRESENT ?                   93051
         BL    SKIPACCT                                          93051
         CLI   JMRUSEID+4,C'A' SUBACCOUNT PRESENT ?              93051
         BL    SKIPACCT                                          93051
         MVC   JOBACCT,JMRUSEID  COPY ACCOUNT                   GP02300
         SPACE 1
SKIPACCT L     R1,TCBTIO     TIOT POINTER
         USING TIOT1,R1                                         GP02300
         LA    R1,TIOENTRY   BUMP TO DEVICE ENTRIES             GP02300
         DROP  R1
         ST    R1,@TIOENT    SAVE FOR TIOT SCAN
         B     LOOKTIOT      DON'T BUMP FIRST TIME
         SPACE 1
*        TIOT LOOP TO GET NEXT DD CARD/VOLUME
         SPACE 1
LOOPTIOT TM    PROFLAGS,FGDOCOPY  NEED TO EXPAND COPY CARDS ?   GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDCOPY  YES; WRITE WHAT-EVER               GP02300
         TM    PROFLAGS,FGDOPAUS  NEED TO EXPAND PAUSE ?        GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDPAUS  YES; WRITE WHAT-EVER               GP02300
NEXTTIOT L     R1,@TIOENT    GET PREVIOUS TIOT ENTRY              *MR*
         USING TIOENTRY,R1                                      GP02300
         SR    R14,R14       FOR IC
         IC    R14,TIOELNGH            GET LENGTH OF ENTRY
         AR    R1,R14        BUMP TO NEXT ONE
LOOKTIOT CLI   TIOELNGH,0    END OF TIOT ?
         BE    ALLDONE       ALL DONE IF SO
         ST    R1,@TIOENT    SAVE FOR NEXT TIME
         CLC   =C'JOB',TIOEDDNM   SKIP SPECIAL DD NAME
         BE    NEXTTIOT
         CLC   =C'STEP',TIOEDDNM  DITTO
         BE    NEXTTIOT
         CLC   =C'SYS',TIOEDDNM   DITTO
         BE    NEXTTIOT
         CLC   =C'PGM=',TIOEDDNM  DITTO
         BE    NEXTTIOT
         CLC   =C'DEBT',TIOEDDNM  LOCAL GOODIES (DEBUG TRACE)   GP02300
         BE    NEXTTIOT                                         GP02300
         CLC   =C'PGMT',TIOEDDNM  LOCAL GOODIES (EXECUTION TRACE)
         BE    NEXTTIOT                                         GP02300
         CLI   TIOEDDNM,C' ' CONCATENATION ?                    GP02300
         BE    NEXTTIOT                                         GP02300
         SR    R14,R14                                          GP02300
         ICM   R14,OIII,TIOEFSRT  LOOK FOR UCB ADDRESS          GP02300
         BZ    NEXTTIOT      IGNORE IF NONE                     GP02300
         USING UCBOB,R14
         CLI   UCBTBYT3,UCB3DACC       DIRECT ACCESS DEVICE ?
         BNE   NEXTTIOT      SKIP IF NOT
         MVC   CURRDDNM,TIOEDDNM  SAVE DD NAME FOR MESSAGE      GP02300
         MVC   CURRVSER,UCBVOLI SAVE VOL-SER                    GP02300
         TM    UCBVOLI+5,C'0'  NUMERIC LAST DIGIT ?
         BNO   NOTSYSVL      NO; NOT SYSRES VOLUME
         L     R15,CVTPTR    GET THE CVT                         93051
         L     R15,CVTSYSAD-CVTMAP(R15)  GET SYSRES UCB          93051
         CLC   UCBVOLI(4),UCBVOLI-UCBOB(R15)  SYSTEM PACK ?      93051
         BE    ERRNOWYL      ISSUE NONO MSG
NOTSYSVL MVC   JCLSER,CURRVSER     MOVE VOLSER TO JCLSER          *MR*
         CLI   CURRVSER,C'0'      QUICK AND DIRTY NUMO TEST       *MR*
         BNL   ALTJBNAM      REPLACE DIGIT BY DOLLAR SIGN       GP02299
         CLI   CURRVSER,C'A'                                      *MR*
         BNL   *+8                                              GP02299
ALTJBNAM MVI   JCLSER,C'$'                                        *MR*
         TR    JCLSER,TRNONBLK   CHANGE TRAILING BLANKS TO $    GP02300
         MVC   JOBPRTY,MAXPRTY   SET FOR MAXIMUM PRIORITY       GP02300
         CLC   =C'DD',TIOEDDNM  EXPLICIT REQUEST ?
         BE    ACCEPTVS      YES - SKIP EVEN IF NOT WYL00X
         CLC   =C'WYL',CURRVSER      WYLBUR VOLUME ?
         BNE   ERRNOWYL
         SPACE 1
ACCEPTVS IC    R15,UCBTBYT4  GET DISK DEVICE TYPE                 *MR*
         N     R15,=X'0000007F'  ISOLATE TBYT4                  GP02300
         C     R15,=X'0000000F'  VALID ?                        GP02300
         BNH   ACCEPTYP      YES                                GP02300
         SR    R15,R15       ELSE DON'T KNOW WHAT IT IS         GP02300
ACCEPTYP SLL   R15,3         *8
         LA    R15,GENERIC(R15)   POINT TO UNITS                GP02300
         MVC   CURRUTYP,0(R15)    MOVE UNIT NAME                GP02300
         XC    CURRJOB#,CURRJOB#  CLEAR NUMBER OF CURRENT JOB   GP02300
         XC    CURRPDS#,CURRPDS#  CLEAR NUMBER OF CURRENT PDS   GP02300
         XC    STEPPDS#,STEPPDS#  CLEAR NUMBER OF CURRENT PDS   GP02300
         OI    PROFLAGS,FGDOJOB   FORCE NEW JOB CARD            GP02300
         POP   USING                                            GP02300
         SPACE 1
*        GET FORMAT 4 DSCB FROM VOLUME FOR SEARCH INFO.
         @OBTAIN CAMLST4,OPT=LOADED   GET DSCB4 FOR VOLUME      GP02300
         BIX   VAL=(R15),WK=R3,SRL=2,ERR=SKIPVOL,                      *
               LOC=(FOUND4,       CC 0 - RETURNING DSCB                *
               SKIPVOL,           CC 4 - VOLUME NOT MOUNTED (?)        *
               FOUND4)            CC 8 - ERROR - NORMAL FOR DSCB 4
         SPACE 1
FOUND4   LA    R10,DSCBWORK
         USING IECSDSL4,R10
         CLI   DS4IDFMT,C'4'   REALLY A FORMAT 4 DSCB
         BNE   SKIPVOL       IF NOT SKIP THIS VOLUME
         MVC   MAXCCHH@,DS4DEVSZ  MAX CC/HH FOR DEVICE          GP02300
         MVC   MAXDSCB@,DS4HPCHR  CC/HH OF HIGHEST FORMAT 1 DSCB
         LA    R1,DS4VTOCI   POINTTO STATUS BITS                GP05155
         SUBCALL SUBVTOCI    EXAMINE THE STATUS                 GP05155
         CH    R15,=H'4'     USABLE HWM ?                       GP05155
         BNH   VTOCHWM       YES; SHORTEN SEARCH                GP05155
VTOCMAX  MVC   MAXDSCB@(4),DS4VTOCE+6  USE VTOC END
         MVC   MAXDSCB@+4(1),DS4DEVDT   +DSCB/TRK
VTOCHWM  MVC   MAXDSCB#(1),DS4DEVDT MAX NO. DSCB'S/TRACK
         MVC   CURRCHR(4),DS4VTOCE+2   VTOC LOW EXTENT FOR FIRST I/O
         MVI   CURRCHR+4,1   SET FOR RECORD AFTER DSCB 4 (=5?)
         SPACE 1
LOOPDSCB SR    R1,R1         FOR IC
         IC    R1,CURRR#     GET PREVIOUS RECORD NUMBER
         LA    R1,1(,R1)     BUMP BY ONE
         STC   R1,CURRR#
         CLC   CURRR#,MAXDSCB# HIGHER THAN FITS ON DEVICE ?
         BNH   TESTCCHH      NO, SEE IF HIGHER THAN LAST DSCB1
         MVI   CURRR#,1      YES, RESET TO RECORD 1
         INCH  CURRHH,WORK=R1 GET TRACK NO.                     GP02300
         CH    R1,MAXCCHH@+2  HIGHER THAN DEVICE PERMITS ?
         BL    TESTCCHH        NO, SEE IF HIGHER THAN LAST DSBC1
         STCM  R1,IIOO,CURRHH  YES, RESET TRACK TO 0            GP02300
         INCH  CURRCC        BUMP CYLINDER NUMBER               GP02300
TESTCCHH CLC   CURRCHR,MAXDSCB@  BEYOND LAST DSCB1 ?
         BH    LOOPTIOT      YES; GET ANOTHER VOLUME            GP02300
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   PROCESS FORMAT 1 DSCBS                                            *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
DOFMT1   LA    R10,DSCBWORK   CAMLIST WORK AREA                   *MR*
         USING IECSDSL1,R10
         MVI   DS1FMTID,X'A2'  REQUEST SORTED VTOC, IF POSSIBLE
         @OBTAIN CAMLST1      GET A DSCB
         LTR   R15,R15       WORK OK ?
         BNZ   DSCBIOER      BRANCH IF NOT
         CLI   DS1FMTID,C'1'   IS IT REALLY A FORMAT 1 DSCB ?
         BNE   LOOPDSCB      IF NO, SKIP
         TM    DS1DSORG,DS1DSGPO  PARTITIONED DSN ?             GP02299
         BZ    LOOPDSCB      NO; IGNORE
         CLI   DS1NOEPV,1    AT LEAST ONE EXTENT ?
         BL    LOOPDSCB      NO; IGNORE
         OC    DS1LSTAR(7),DS1LSTAR  INITIALIZED ? (OR PDS/E)   GP09186
         BZ    LOOPDSCB      NO; SKIP
         TM    DS1SMSFG,DS1PDSE   IS THIS A PDSE? (JUST TO BE SURE)
         BO    LOOPDSCB      YES, DO NOT PROCESS                GP02352
         TM    DS1DSIND,DS1DSCHA  DATA ALTERED ?
         BZ    LOOPDSCB      NO; SKIP
         TM    DS1RECFM,X'E0'  ANY RECFM ?
         BZ    LOOPDSCB
         TM    DS1RECFM,X'48'  VS OR VBS ?                      GP09114
         BO    LOOPDSCB      YES; IGNORE                        GP09114
         OC    DS1BLKL(2),DS1BLKL  ANY BLOCKSIZE ?
         BZ    LOOPDSCB      NO; SKIP
         TM    DS1DSORG,1    UN-MOVABLE ?
         BO    BADMOVE       YES - EXPLAIN
         AIF   (NOT &MVSSP).DOIN38J                             GP05185
         CLC   =C'GP',DS1DSNAM  **TEMP UNTIL 913 FIX**          GP02300
         BE    SELECTED         **TEMP UNTIL 913 FIX**          GP02300
         CLC   =C'GE',DS1DSNAM  **TEMP UNTIL 913 FIX**          GP02300
         BE    SELECTED         **TEMP UNTIL 913 FIX**          GP02300
         CLC   =C'PA',DS1DSNAM  **TEMP UNTIL 913 FIX**          GP02300
         BE    SELECTED         **TEMP UNTIL 913 FIX**          GP02300
         CLC   =C'RTI',DS1DSNAM **TEMP UNTIL 913 FIX**          GP02300
         BE    SELECTED         **TEMP UNTIL 913 FIX**          GP02300
         CLC   =C'REL',DS1DSNAM **TEMP UNTIL 913 FIX**          GP02300
         BNE   LOOPDSCB         **TEMP UNTIL 913 FIX**          GP02300
.DOIN38J SPACE 1                                                GP05185
SELECTED TM    DS1DSIND,X'54'  ANY PASSWORD BITS ?               93051
         BZ    NOTPASS       NO; PROCEED
         CLC   =C'Z9040012',JOBACCT  SYSTEMS RUN ?              GP02300
         BNE   BADPAS        NO; IGNORE PASSWORD
NOTPASS  CLC   =C'SYS',DS1DSNAM   POSSIBLE TEMPORARY ?          GP08116
         BNE   NOTTEMP       NO; PROCESS                        GP08116
         CLI   DS1DSNAM+16,C'.'   SKIP IF SYSnnnnn.Tnnnnnn.     GP08116
         BNE   NOTTEMP       NO; PROCESS                        GP08116
         CLC   =C'.T',DS1DSNAM+8   POSSIBLE TEMPORARY ?         GP08116
         BNE   NOTTEMP       NO; PROCESS                        GP08116
         MVC   DB(5),=6C'0'                                     GP08116
         NC    DB(5),DS1DSNAM+3                                 GP08116
         CLC   DB(5),=6C'0'  FIVE NUMERICS ?                    GP08116
         BNE   NOTTEMP                                          GP08116
         MVC   DB(6),=6C'0'                                     GP08116
         NC    DB(6),DS1DSNAM+10   LOOK FOR TIME                GP08116
         CLC   DB(6),=6C'0'  SIX NUMERICS ?                     GP08116
         BE    LOOPDSCB      YES; SKIP IT                       GP08116
         SPACE 1
NOTTEMP  MVC   CURRDISP,=C'OLD'  PREFERRED DISPOSITION          GP02300
         TESTAUTH FCTN=1     AUTHORIZED ?
         BXH   R15,R15,SKIPENQ  NO; SKIP TEST
         LA    R1,DS1DSNAM+L'DS1DSNAM  IN CASE 44               GP02303
         LA    R3,DS1DSNAM                                      GP02303
         TRT   0(L'DS1DSNAM,R3),TRTBLANK  FIND FIRST BLANK      GP02303
         SR    R1,R3         GET NAME LENGTH                    GP02303
         LR    R3,R1         COPY FOR ENQ                       GP02303
         ENQ   (,DS1DSNAM,,(R3),),RET=TEST,MF=(E,ENQLIST)       GP02303
         LTR   R15,R15       AVAILABLE ?
         BZ    SKIPENQ       YES; GOOD
         CLC   =F'8',0(R15)  AVAILABLE EXCEPT FOR ME
         BE    SKIPENQ       YES; WAIT FOR THIS JOB TO FINISH
         MVC   CURRDISP,=C'SHR'  REQUIRED FOR EXHIBIT, ETC.
SKIPENQ  INCH  CURRPDS#          REACHED EXEC LIMIT ?           GP02300
         INCH  STEPPDS#,WORK=R1  REACHED EXEC LIMIT ?           GP02300
         CH    R1,MAXPDS#    REACHED MAXIMUM ?                  GP02300
         BL    SKIPCOPY      NOT YET                            GP02300
         OI    PROFLAGS,FGDOSTEP YES; WILL NEED A NEW STEP      GP02300
         BAS   R14,CARDCOPY  PRODUCE REQUIRED COPY CARDS FIRST  GP02300
         CLRL  #SAVDSN,LSAVDSN    RESET SAVED DSNS AND USED #   \
         CLC   CURRSTP#,MAXSTEP#  LAST STEP IN JOB ?            GP02300
         BL    SKIPEOJ       NOT YET                            GP02300
         OI    PROFLAGS,FGDOJOB+FGDOPAUS  REQUEST END FOR THIS ONE
SKIPEOJ  TM    PROFLAGS,FGDOPAUS  NEED PAUSE CARD ?             GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDPAUS  DO END OF JOB CARDS                GP02300
SKIPCOPY TM    PROFLAGS,FGDOJOB  NEED A JOB CARD ?              GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDJOB   YES; PUT THEM OUT                  GP02300
         TM    PROFLAGS,FGDOSTEP NEED A STEP CARD ?             GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDSTEP  YES; PUT THEM OUT                  GP02300
         BAS   R14,CARDPDS   WRITE PDS CARD                     GP02300
         B     LOOPDSCB          GO GET NEXT DATA SET           GP02300
         SPACE 1
*        FORMAT 4 OBTAIN ERROR ROUTINE
         SPACE 1
SKIPVOL  ST    R15,DB        FORMAT OBTAIN RETURN CODE          GP02300
         PRTLIST OBT4MSG     VOL. SKIPPED MESSAGE               GP02300
         B     LOOPTIOT      GET NEXT VOLUME
         SPACE 1
ALLDONE  TM    PROFLAGS,FGDOCOPY  NEED TO EXPAND COPY CARDS ?   GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDCOPY  YES; WRITE WHAT-EVER               GP02300
         TM    PROFLAGS,FGDOPAUS  NEED TO EXPAND PAUSE/EOF ?    GP02300
         BZ    *+8           NO                                 GP02300
         BAS   R14,CARDPAUS  YES; WRITE WHAT-EVER               GP02300
         BAS   R14,CARDEOF   YES; WRITE WHAT-EVER               GP02300
         SERVTERM ,          CLOSE AND FREE EVERYTHING
         PGMEXIT RC=0        LIE A LITTLE
         SPACE 1
ERRNOWYL PRTLIST BADVLMSG                                       GP02300
         B     LOOPTIOT
         SPACE 1
DSCBIOER ST    R15,DB
         PRTLIST IOERMSG
         B     LOOPTIOT
         SPACE 1
BADMOVE  MVC   MSGERR(9),=C'DSORG=POU'
         B     COMMSG
         SPACE 1
BADPAS   MVC   MSGERR(8),=C'PASSWORD'
COMMSG   PRTLIST PRTNOUSE                                       GP02300
         MVC   MSGERR,MSGERR-1  CLEAR ERROR MSG
         B     LOOPDSCB
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  FORMAT, PRINT, AND PUNCH ALL THE CARDS FOR A NEW JOB               *
*                                                                     *
*---------------------------------------------------------------------*
CARDJOB  STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP02300
         INCH  CURRJOB#      INCREMENT JOB COUNT                GP02300
         PRTLIST PRTJOB1     PRINT JOB INFORMATION              GP02300
         PRTLIST PUNJOB1,DEV=3  PUNCH A JOB CARD                GP02300
         PRTLIST PUNJOB2,DEV=3  PUNCH A JOB CARD                GP02300
         PRTV  PUNSET,DEV=3         /*SETUP                     GP02300
         PRTV  PUNOPT,DEV=3         /*OPTIONS                   GP02300
         PRTV  PUNPRO,DEV=3         JOB PROC CARD               GP02300
         PRTV  PUNCOM,DEV=3         SPACER                      GP02300
         XC    CURRSTP#,CURRSTP#  RESET STEP COUNTER            GP02300
         XC    STEPPDS#,STEPPDS#  RESET PDS IN STEP             GP02300
         XC    #SAVDSN,#SAVDSN    RESET DSN COUNTER             \
         LH    R1,JOBPRTY    GET CURRENT PRIORITY               GP02300
         BCTR  R1,0          LOWER FOR NEXT TIME                GP02300
         CH    R1,MINPRTY    BUT NOT TOO LOW                    GP02300
         BL    CARDNPTY      SKIP STORING                       GP02300
         STH   R1,JOBPRTY    SET LOWER AMOUNT                   GP02300
CARDNPTY NI    PROFLAGS,255-FGDOJOB  NO JOB CARD NEEDED         GP02300
         OI    PROFLAGS,FGDOEOF+FGDOSTEP  NEED EOF AND STEP     GP02300
         XC    STEPPDS#,STEPPDS#  RESET JUST IN CASE            GP02300
         LM    R0,R15,SUBSAVE2                                  GP02300
         BR    R14           RETURN TO CALLER                   GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*  FORMAT AND PUNCH ALL THE CARDS FOR A NEW STEP                      *
*                                                                     *
*---------------------------------------------------------------------*
CARDSTEP STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP02300
         INCH  CURRSTP#      INCREMENT STEP COUNT               GP02300
         PRTLIST PRTSTEP     PRINT STEP INFORMATION             GP02300
         PRTV  PUNCOM,DEV=3         SPACER                      GP02300
         PRTLIST PUNSTEP,DEV=3                                  GP02300
         PRTV  PUNSOUT,DEV=3                                    GP02299
         PRTV  PUNUT1,DEV=3                                     GP02299
         PRTV  PUNUT2,DEV=3                                     GP02299
         NI    PROFLAGS,255-FGDOSTEP  NO LONGER NEED STEP       GP02300
         OI    PROFLAGS,FGDOPAUS  NEED PAUSE CARD               GP02300
         MVC   BOTPDS#,CURRPDS#  REMEMBER WHERE WE STARTED      GP02300
         XC    STEPPDS#,STEPPDS#  RESET PDS/STEP COUNTER        GP02300
         LM    R0,R15,SUBSAVE2                                  GP02300
         BR    R14           RETURN TO CALLER                   GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*  FORMAT, PRINT, AND PUNCH THE DD CARDS FOR ONE PDS                  *
*                                                                     *
*---------------------------------------------------------------------*
CARDPDS  STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP02300
         PRTLIST PRTPDS      PRINT PDS INFORMATION              GP02300
         PRTLIST PUNPDS1,DEV=3                                  GP02300
         PRTLIST PUNPDS2,DEV=3                                  GP02300
         OI    PROFLAGS,FGDOPAUS+FGDOCOPY+FGDOEOF  NEED MORE LATER
         MVC   TOPPDS#,CURRPDS#  REMEMBER WHERE ARE             GP02300
         L     R1,#SAVDSN    GET DSN INDEX                      \
         LA    R3,L'$SAVDSN  GET ENTRY LENGTH                   \
         MR    R2,R1         OFFSET TO NEXT AVAILABLE ENTRY     \
         LA    R1,$SAVDSN(R3)     POINT TO ENTRY                \
         MVC   $SAVDSN-$SAVDSN(L'$SAVDSN,R1),DS1DSNAM SAVE NAME \
         INC   #SAVDSN           ADVANCE SLOT POINTER           \
         LM    R0,R15,SUBSAVE2                                  GP02300
         BR    R14           RETURN TO CALLER                   GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*  FORMAT, PRINT, AND PUNCH THE COPY CONTROL CARDS                    *
*                                                                     *
*---------------------------------------------------------------------*
CARDCOPY STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP02300
         SR    R5,R5         SAVED DS INDEX                     \
         LH    R4,BOTPDS#    GET FIRST PDS# WRITTEN             GP02300
CARDCOPL ST    R4,DB         SAVE FOR FORMATTING                GP02300
         LA    R3,$SAVDSN(R5)     POINT TO CURRENT DSN          \
         PRTLIST PUNCOPY,DEV=3                                  GP02300
         LA    R5,L'$SAVDSN(,R5)  NEXT SLOT                     \
         LA    R4,1(,R4)     BUMP IT                            GP02300
         CH    R4,TOPPDS#    DONE ?                             GP02300
         BNH   CARDCOPL      NO; DO ANOTHER                     GP02300
         NI    PROFLAGS,255-FGDOCOPY  NO LONGER NEED            GP02300
         OI    PROFLAGS,FGDOPAUS  NEED STEP CARD                GP02300
         LM    R0,R15,SUBSAVE2                                  GP02300
         BR    R14           RETURN TO CALLER                   GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*  PUNCH THE END OF JOB PAUSE CARD                                    *
*                                                                     *
*---------------------------------------------------------------------*
CARDPAUS STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP02300
         PRTV  PUNCOM,DEV=3         SPACER                      GP02300
         PRTV  PUNPAUSE,DEV=3                                   GP02300
         PRTV  PUNPAUSD,DEV=3                                   GP02300
         NI    PROFLAGS,255-FGDOPAUS                            GP02300
         LM    R0,R15,SUBSAVE2                                  GP02300
         BR    R14           RETURN TO CALLER                   GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*  PUNCH THE END OF JOB /*EOF CARD                                    *
*                                                                     *
*---------------------------------------------------------------------*
CARDEOF  STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP02300
         PRTV  PUNEOF,DEV=3                                     GP02300
         NI    PROFLAGS,255-FGDOEOF                             GP02300
         LM    R0,R15,SUBSAVE2                                  GP02300
         BR    R14           RETURN TO CALLER                   GP02300
         EJECT ,
*        CONSTANTS AND STUFF
         SPACE 2
MAXSTEP# DC    Y(#STEPS)     STEPS PER JOB                      GP02300
MAXPRTY  DC    H'13'         FIRST PRIORITY                     GP02300
MINPRTY  DC    H'1'          LOWEST PRIORITY                    GP02300
MAXPDS#  DC    Y(#PDS)       MAXIMUM PDS COMPRESSES PER STEP    GP02300
QSYSDSN  DC    CL8'SYSDSN'   MAJOR ENQ NAME
         SPACE 1
PATCAM4  CAMLST SEARCH,4-4,8-8,12-12               1/2          GP02300
PATCAM1  CAMLST SEEK,4-4,8-8,12-12                 2/2          GP02300
PATENQ   ENQ   (QSYSDSN,4-4,E,44,SYSTEM),RET=TEST,MF=L   3/2    GP02300
         SPACE 1
GENERIC  DC    CL8'SYSALLDA'                                    GP02300
         DC    CL8'2311   '  01
         DC    CL8'2301   '  02
         DC    CL8'2303   '  03
*OLD*    DC    CL8'2302   '  04
         DC    CL8'9345   '  04                                 GP02300
         DC    CL8'2321   '  05
         DC    CL8'2305   '  06
         DC    CL8'2305   '  07
         DC    CL8'2314   '  08
         DC    CL8'3330   '  09
         DC    CL8'3340   '  0A
         DC    CL8'3350   '  0B
         DC    CL8'3375   '  0C
         DC    CL8'3330-1 '  0D
         DC    CL8'3380   '  0E
         DC    CL8'3390   '  0F                                 GP02299
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  JOB RELATED JCL CARDS                                              *
*                                                                     *
*---------------------------------------------------------------------*
PRTJOB1  FDOPT NL,CC=C'0'    NEW LINE; DOUBLE-SPACE PRINT       GP02300
         FDPRT 'JOB'                                            GP02300
         FDPRT CURRJOB#,IZ,RADJ,PAD,LEN=2                       GP02300
         FDPRT CURRVSER,PAD                                     GP02300
         FDPRT *END                                             GP02300
PUNJOB1  FDOPT NL,CC=C'0'    NEW LINE; DOUBLE-SPACE PRINT       GP02300
         FDPRT '//'                                               *MR*
         FDTM  PROFLAGS,FGRUNSEQ,BNZ=PUNJOB1Q  SEQUENTIAL EXECUTION ?
         FDPRT JCLSER        ADD SERIAL WITH BLANKS REPLACED    GP02300
         FDPRT CURRJOB#,IZ,RADJ,LEN=2 TRAILING JOB COUNT        GP02300
         FDGOTO PUNJOB1C                                        GP02300
PUNJOB1Q FDPRT 'SE'                                             GP02300
         FDPRT JCLSER                                           GP02300
PUNJOB1C FDPRT 'JOB',PAD                                        GP02300
         FDPRT '('                                              GP02300
         FDPRT JOBACCT,4                                        GP02300
         FDPRT ','                                              GP02300
         FDPRT JOBACCT+4,4                                      GP02300
         FDPRT '),''WEEKLY COMPRESS'',CLASS='                   GP02303
         FDTM  PROFLAGS,FGRUNSEQ,BZ=PUNJOB1S                    GP02303
         FDPRT 'A'           SEQUENTIAL BY VOLUME - ALL INITS   GP02303
         FDGOTO PUNJOB1T                                        GP02300
PUNJOB1S FDPRT 'E'           SEQUENTIAL BY INIT                 GP02303
PUNJOB1T FDPRT ',TIME=1440,'                                    GP02303
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
PUNJOB2  FDPRT '//    MSGCLASS=A,NOTIFY=GERHARD,PRTY='          GP02300
         FDPRT JOBPRTY,I,DEB                                    GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
PUNSET   VCON  ' //*SETUP       NOTHING - DO NOT CANCEL'        GP02300
PUNOPT   VCON  ' /*JOBPARM L=9999'                              GP05185
PUNPRO   VCON  ' //*JOBPROC JCLLIB ORDER=(''GERHARD.ESPPROC'')' GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*   STEP RELATED JCL CARDS                                            *
*                                                                     *
*---------------------------------------------------------------------*
PRTSTEP  FDOPT NL            NEW LINE                           GP02300
         FDPRT 'STEP'                                           GP02300
         FDPRT CURRSTP#,IZ,RADJ,PAD,LEN=4                       GP02300
         FDPRT *END                                             GP02300
PUNSTEP  FDPRT '//COMP',NL                                      GP02300
         FDPRT CURRSTP#,IZ,RADJ,LEN=4                           GP02300
         FDPRT 'EXEC PGM=IEBCOPY,REGION=4096K,TIME=1439',PAD    GP02300
         FDPRT *END                                             GP02300
PUNSOUT  VCON  ' //SYSPRINT DD SYSOUT=*'                        GP02299
PUNUT1   VCON  ' //SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,5)'        GP02300
PUNUT2   VCON  ' //SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,5)'        GP02300
         SPACE 2                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*   PDS DD CARDS                                                      *
*                                                                     *
*---------------------------------------------------------------------*
PRTPDS   FDOPT NL            NEW LINE                           GP02300
         FDPRT ' DD '                                           GP02300
         FDPRT CURRPDS#,IZ,RADJ,PAD,LEN=5                       GP02300
         FDPRT DS1DSNAM,PAD                                     GP02300
         FDPRT *END                                             GP02300
PUNPDS1  FDPRT '//PDS',NL                                       GP02300
         FDPRT CURRPDS#,IZ,RADJ,PADR,LEN=5                      GP02300
         FDPRT 'DD DISP='                                       GP02300
         FDPRT CURRDISP,DEB                                     GP02300
         FDPRT ',VOL=SER='                                      GP02300
         FDPRT CURRVSER,DEB                                     GP02300
         FDPRT ',UNIT='                                         GP02300
         FDPRT CURRUTYP,DEB                                     GP02300
         FDPRT ','                                              GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
PUNPDS2  FDPRT '//            DSN=',NL                          GP02300
         FDPRT DS1DSNAM,DEB                                     GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
PUNCOPY  FDOPT NL,CC=C'0'    DOUBLE-SPACE PRINT                 GP02300
         FDPRT ' COPY I=PDS'                                    GP02300
         FDPRT DB,4,IZ,RADJ,LEN=5 PDS NUMBER                    GP02300
         FDPRT ',O=PDS'                                         GP02300
         FDPRT DB,4,IZ,RADJ,LEN=5 PDS NUMBER                    GP02300
         FDPRT ',LIST=NO'                                         *MR*
         FDPRT 0(R3),L'$SAVDSN,PADL,DEB,LEN=35                  \
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
*---------------------------------------------------------------------*
*                                                                     *
*   END OF STEP / END OF JOB                                          *
*                                                                     *
*---------------------------------------------------------------------*
PUNPAUSE VCON  ' //PAUSE EXEC CANCEL,COND=(0,LT)'                 *MR*
PUNPAUSD VCON  ' *THIS*   NON-ZERO COMPLETION ??????????'         *MR*
PUNEOF   VCON  ' /*EOF'                                         GP02300
PUNCOM   VCON  ' //*'        COMMENT CARD                       GP02300
         SPACE 1
COMPFILE PUNWORK COMPFILE,SYSPUNCH,WIDTH=80
SYSPRINT PRTWORK SYSPRINT,SYSLIST,TITLE=5
         EJECT ,
*        MESSAGES - HEADINGS, ETC.
         SPACE 1
HEADER   VCON  '#PARTITIONED DATA SET COMPRESSION PROGRAM'      GP02299
         SPACE 1
OBT4MSG  FDOPT NL,CC=C'-'                                       GP02300
         FDPRT 'VOLUME'                                         GP02300
         FDPRT CURRVSER,PAD,DEB                                 GP02300
         FDPRT 'SKIPPED DUE TO OBTAIN ERROR CODE'               GP02300
         FDPRT DB,4,I,PAD                                       GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
IOERMSG  FDOPT NL,CC=C'0'                                       GP02300
         FDPRT 'VOLUME'                                         GP02300
         FDPRT CURRVSER,PAD,DEB                                 GP02300
         FDPRT 'SKIPPED DUE TO OBTAIN ERROR'                    GP02300
         FDPRT DB,4,I,PAD                                       GP02300
         FDPRT 'DURING SEQUENTIAL VTOC SEARCH'                  GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
BADVLMSG FDOPT NL,CC=C'-'                                       GP02300
         FDPRT '******  DD'                                     GP02300
         FDPRT CURRDDNM,PADL,DEB                                GP02300
         FDPRT ', VOLUME SERIAL'                                GP02300
         FDPRT CURRVSER,PAD,DEB                                 GP02300
         FDPRT 'IS NOT A WYLBUR VOLUME  ******'                 GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
PRTNOUSE FDOPT NL,CC=C'0'                                       GP02300
         FDPRT '***** DATA SET'                                 GP02300
         FDPRT DS1DSNAM,PAD,DEB                                 GP02300
         FDPRT 'NOT PROCESSED -'                                GP02300
         FDPRT MSGERR,PAD,DEB                                   GP02300
         FDPRT '*****'                                          GP02300
         FDPRT *END                                             GP02300
         SPACE 1                                                GP02300
TRNONBLK DC    256AL1(*-TRNONBLK)  NO TRANSLATION               GP02300
         TRENT TRNONBLK,C'$',C' '  EXCEPT BLANK TO DOLLAR SIGN  GP02300
         ORG   ,             JUST IN CASE                       GP02300
TRTBLANK DC    256AL1(0)     DON'T STOP                         GP02303
         TRENT TRTBLANK,4,C' '  EXCEPT ON BLANK                 GP02303
         ORG   ,             JUST IN CASE                       GP02303
         SPACE 2
         PRINT &PRTMAC
SAVE     DSECT ,             SAVE AND WORK AREA
SUBSAVE1 DS    16A           SUBROUTINE SAVE AREA               GP02300
SUBSAVE2 DS    16A           SUBROUTINE SAVE AREA               GP02300
SUBSAVE3 DS    16A           SUBROUTINE SAVE AREA               GP02300
DB       DC    D'0'
         SERVDEFS ,          SERVICE ROUTINES, ETC.             \
@TIOENT  DS    A
         SPACE 1
CAMLST4  CAMLST SEARCH,DS1DSNAM,CURRVSER,DSCBWORK               GP02300
CAMLST1  CAMLST SEEK,CURRCHR,CURRVSER,DSCBWORK                  GP02300
ENQLIST  ENQ   (QSYSDSN,DS1DSNAM,E,44,SYSTEM),RET=TEST,MF=L     GP02300
CAMLSTLN EQU   *-CAMLST4                                        GP02300
         SPACE 1
CURRJOB# DC    H'0'          CURRENT JOB NUMBER                 GP02300
CURRSTP# DC    H'11'         CURRENT STEP NUMBER                GP02300
CURRPDS# DC    H'0'          CURRENT PDS ON THIS VOLUME         GP02300
STEPPDS# DC    H'0'          CURRENT PDS IN THIS STEP           GP02300
BOTPDS#  DC    H'0'          PDS (-1) AT START OF STEP          GP02300
TOPPDS#  DC    H'0'          PDS AT END OF STEP                 GP02300
JCLSER   DC    CL6' '        BOWDLERIZED VOLUME SERIAL          GP02300
JOBACCT  DC    C'Z9080012'   COPY OF JMRUSEID                   GP02300
JOBPRTY  DC    H'0'          PRIORITY                           GP02300
CURRVSER DC    CL6'WYL00?'   CURRENT (RAW) SERIAL               GP02300
CURRUTYP DC    CL8' '        CURRENT DASD TYPE (33XX)           GP02300
         DS    0H
MAXCCHH@ DS    XL4
MAXDSCB@ DS    XL5
MAXDSCB# DS    XL1
         DS    0H
CURRCHR  DS    CL5' '
CURRCC   EQU   CURRCHR,2,C'X'                                   GP02300
CURRHH   EQU   CURRCHR+2,2,C'X'                                 GP02300
CURRR#   EQU   CURRCHR+4,1,C'X'                                 GP02300
         SPACE 1
PROFLAGS DC    X'00'         PROCESSING OPTIONS                  90154
FGDOJOB  EQU   X'80'         JOBCARD CHANGE INDICATOR             *MR*
FGDOSTEP EQU   X'40'         STEP CHANGE INDICATOR              GP02300
FGDOCOPY EQU   X'20'         COPY CARDS NEEDED                  GP02300
FGDOPAUS EQU   X'10'         PAUSE CARDS NEEDED                 GP02300
FGDOEOF  EQU   X'08'         EOF NEEDED                         GP02300
FGRUNSEQ EQU   X'01'           RUN JOBS ONE AT A TIME (PER PACK) 90154
CURRDDNM DC    CL8'DD NAME'                                     GP02300
CURRDISP DC    CL3'OLD'                                         GP02300
         DC    C' '     1/2  FOR CLEARING ERROR MESSAGE         GP02300
MSGERR   DC    CL20' '  2/2  ERROR MESSAGE                      GP02300
         SPACE 1
DSCBWORK DS    256C
         SPACE 1
#SAVDSN  DC    F'0'          NUMBER OF SAVED DSNS               \
$SAVDSN  DC    (#PDS)CL35' '    DS NAMES SAVED PER STEP         \
LSAVDSN  EQU   *-#SAVDSN       SIZE TO CLEAR FOR NEW STEP       \
SAVEEND  EQU   *                                                GP02299
         SPACE 2
         PRINT &PRTSYS
DSCB1    DSECT ,
         IECSDSL1 1
         AIF   (&MVSXA).SYSDEF                                  GP04234
DS1FLAG1 EQU   DS1NOBDB+1,1,C'X'  MORE FLAGS
DS1COMPR EQU   X'80'           COMPRESSABLE EXTENDED IF DS1STRP
DS1CPOIT EQU   X'40'           CHECKPOINTED D S
DS1SMSFG EQU   DS1FLAG1+17,1,C'X'  SMS FLAG
DS1SMSDS EQU   X'80'           SMS D S
DS1SMSUC EQU   X'40'           NO BCS ENTRY
DS1REBLK EQU   X'20'           MAY BE REBLOCKED
DS1CRSDB EQU   X'10'           BLKSZ BY DADSM
DS1PDSE  EQU   X'08'           PDS/E
DS1STRP  EQU   X'04'           EXTENDED FORMAT D S
DS1PDSEX EQU   X'02'           HFS D S
DS1DSAE  EQU   X'01'           EXTENDED ATTRIBUTES EXISY
DS1SCEXT EQU   DS1SMSFG+1,3,C'X'  SECONDARY SPACE EXTENSION
DS1SCXTF EQU   DS1SCEXT,1,C'X'  -"- FLAG
DS1SCAVB EQU   X'80'           SCXTV IS AVG BLOCK LEN
DS1SCMB  EQU   X'40'                 IS IN MEGBYTES
DS1SCKB  EQU   X'20'                 IS IN KILOBYTES
DS1SCUB  EQU   X'10'                 IS IN BYTES
DS1SCCP1 EQU   X'08'           SCXTV COMPACTED BY 256
DS1SCCP2 EQU   X'04'                 COMPACTED BY 65536
DS1SCXTV EQU   DS1SCXTF+1,2,C'X'  SEC SPACE EXTNSION VALUE
DS1ORGAM EQU   DS1ACBM         CONSISTENT NAMING - VSAM D S
DS1RECFF EQU   X'80'           RECFM F
DS1RECFV EQU   X'40'           RECFM V
DS1RECFU EQU   X'C0'           RECFM U
DS1RECFT EQU   X'20'           RECFM T   001X XXXX IS D
DS1RECFB EQU   X'10'           RECFM B
DS1RECFS EQU   X'08'           RECFM S
DS1RECFA EQU   X'04'           RECFM A
DS1RECMC EQU   X'02'           RECFM M
*   OPTCD DEFINITIONS   BDAM    W.EFA..R
*                       ISAM    WUMIY.LR
*             BPAM/BSAM/QSAM    WUCHBZTJ
DS1OPTIC EQU   X'80'  FOR DS1ORGAM - CATLG IN ICF CAT
DS1OPTBC EQU   X'40'           ICF CATALOG
DS1RACDF EQU   DS1IND40
DS1SECTY EQU   DS1IND10
DS1WRSEC EQU   DS1IND04
DS1SCAL1 EQU   DS1SCALO,1,C'X'    SEC. ALLOC FLAGS
DS1DSPAC EQU   X'C0'         SPACE REQUEST MASK
DS1CYL   EQU   X'C0'           CYLINDER BOUND
DS1TRK   EQU   X'80'           TRACK
DS1AVRND EQU   X'41'           AVG BLOCK + ROUND
DS1AVR   EQU   X'40'           AVG BLOCK LEN
DS1MSGP  EQU   X'20'
DS1EXT   EQU   X'10'           SEC. EXTENSION EXISTS
DS1CONTG EQU   X'08'           REQ. CONTIGUOUS
DS1MXIG  EQU   X'04'           MAX
DS1ALX   EQU   X'02'           ALX
DS1DSABS EQU   X'00'           ABSOLUTE TRACK
DS1SCAL3 EQU   DS1SCAL1+1,3,C'X'  SEC ALLOC QUANTITY
.SYSDEF  SPACE 1
DSCB4    DSECT ,
         IECSDSL1 4
         SPACE 2
TIOTDS   DSECT ,
         IEFTIOT1 ,
         SPACE 2
ANYOLD   DSECT ,             JUST IN CASE
         IHAPSA ,            LOW STORAGE
         SPACE 1
         IKJTCB ,
         SPACE 1
         IEFTCT ,
         SPACE 1
         IEFJMR ,
         SPACE 1
         IEFUCBOB ,
         PRINT NOGEN                                             90186
         CVT   DSECT=YES                                         90186
         SPACE 1                                                 90186
         IHACDE ,                                                90186
         END
