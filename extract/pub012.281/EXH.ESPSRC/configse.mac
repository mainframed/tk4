CONFIGSE TITLE            '*****  I/O SOFTWARE CONFIGURATION  *****'
         SPACE 3
*        FROM FILE CONFIG ASSEMBLE ID HENRY 191
*    FOUND ON CBT 249, FILE 013
*    THIS MODULE HAS BEEN MESSED WITH TO ADD NEW DEVICE TYPES, AND TO
*    CLEAN IT UP A BIT. EXTERNAL MODULE TABS HAS BEEN INCORPORATED
*    INTO THIS ONE AND IMPROVED.       G. POSTPISCHIL           GP12057
         SPACE 3
         MACRO
&NAME    Z     &E
         LCLA  &L1
&L1      SETA  5
&NAME    DC    CL&L1'&E '                                       GP12057
         MEND
         SPACE 3
         MACRO
         TAB   &N
         LCLA  &B
TABLES   CSECT
&B       SETA  &N
.CONT    ANOP
TAB&B    DC    256X'0'
         AIF   (&B EQ 10).MENDIT
&B       SETA  (&B+2)
         AGO   .CONT
.MENDIT  ANOP
         MEND
         SPACE 3
         MACRO
         T     &DEV,&ENG,&N=,&POS=
         GBLA  &NUM,&PREVN                                      GP12057
         LCLA  &L1
         LCLA  &L2
         LCLA  &TAX
&L1      SETA  11
&L2      SETA  25
&TAX     SETA  (&N-1)
         AIF   (&N NE &PREVN).STARTIT                           GP12057
&NUM     SETA  &NUM+1
         AGO   .CONTU
.STARTIT ANOP
&NUM     SETA  1
&PREVN   SETA  &N                                               GP12057
TAB&TAX  EQU   *             START NEW TABLE                    GP12057
.CONTU   ANOP
         DC    CL&L1'&DEV',CL&L2&ENG
         ORG   TAB&N+X'&POS'
         DC    AL1(&NUM)     REGISTER THE DEVICE
         ORG   ,                                                GP12057
         MEND
         SPACE 3
         MACRO
         UCBAREA   &X,&Z
         LCLA  &A,&B
&A       SETA  &X
&B       SETA  &Z
.LOOP1   ANOP
         AIF   (&A GT &B).FINISH
UCB&A    DS    CL1
&A       SETA  (&A+1)
         AGO   .LOOP1
.FINISH  MEND
         SPACE 3
         MACRO
         PREP  &R1=R4,&R2=R5,&R3=R1,&PRE=,&R4=R14,&DIE=EXIT        HY01
         L     &R1,&PRE.TAB   POINT REG AT THE ENGLISH TABLE
         L     &R4,&PRE.REC   POINT REG AT THE INDEX TABLE
         LA    &R2,TYPE       POINT REG AT THE UCB TYPE FIELD
         LA    &R3,L'TYPE     GET THE LENGTH OF THE FIELD
         SR    R2,R2          CLEAR REG 2 FOR TRT
         EX    &R3,TRT        OBTAIN PROPER INDEX                  HY01
         BZ    &DIE           IF CC IS ZERO THEN INDEX NOT FOUND   HY01
         BAL   R8,FINDIT      GO AND GET THE ENGLISH TRANSLATION
         MEND
         SPACE 3
         MACRO
         MACHID          &CVTPTR,&STOR
***********************************************************************
**                                                                   **
**       THIS MACRO GENERATES CODE THAT FINDS THE MACHINE ID         **
**       FROM THE SMF INFORMATION IN THE MACHINE THE PROGRAM         **
**       IS RUNNING ON                                               **
**                                                                   **
**       &CVTPTR -- REGISTER TO BE USED FOR THE WORK                 **
**       &STOR   -- STORAGE LABEL TO BE USED                         **
***********************************************************************
         SPACE 2
         L     &CVTPTR,CVTPTR        GET ADDRESS OF CVT            DW01
         USING CVT,&CVTPTR           ADDRESSABILITY ON CVT         DW01
         LA    &CVTPTR,CVTSMCA       SYSTEM MNGT CONTROL AREA      DW01
         DROP  &CVTPTR               ALL DONE WITH CVT FOR NOW     DW01
         L     &CVTPTR,0(&CVTPTR)    ADDR. OF SMF CONTROL AREA
         LA    &CVTPTR,16(&CVTPTR)   GET SYSID/MODID -- SSMM -
         MVC   &STOR+1(2),2(&CVTPTR) MODEL ID
         MVI   &STOR+3,C'/'          SEPARATOR
         MVC   &STOR+4(2),0(&CVTPTR) SYSTEM ID
         MVI   &STOR,C' '    DONT ASSUME FIRST DIGIT OF MODEL IS 1 HY01
         B     &STOR+6
&STOR    DC    CL6' '                STORAGE AREA
         MEND
         SPACE 3
         MACRO
         GETIME  &STOR=STORDATE,&DATE=DATE,&D=DAY,&Y=YEAR
         TIME
         ST    R1,&STOR
         UNPK  &DATE,&STOR
         OI    &DATE+7,X'F0'
         LA    R3,&DATE
         MVC   &Y,3(R3)
         MVC   &D,5(R3)
         MEND
         SPACE 3
         MACRO
&NAME    GENLNE   &NO=1,&ROUTINE=X,&AREA=BUFX,&R=0
&NAME    STM   3,7,R&SYSNDX
         B     R&SYSNDX+20
R&SYSNDX DC    5F'00'
         LA    5,&NO
         MVI   &AREA,C' '
         LA    4,1
         LA    3,0
X&SYSNDX DS    0H
         BAL   &R,&ROUTINE
         BXLE  3,4,X&SYSNDX
         LM    3,7,R&SYSNDX
         MEND
         EJECT
         MACRO
&NAME    PROGRAM &BASE,&SAVE=SAVE,&EXIT=EXIT,&EXN=,&WTO=NO,&RENT=NO,   .
               &VER=,&ROUTCDE=2,&REGEQ=YES,&WORKA=0,&DATE=YES,&PATCH=0
.*       NOTE... THIS MACRO USES GLOBALS &SYSDATE AND &SYSTIME
.*               WHICH ARE ONLY AVAILABLE IN ASSEMBLERS XF AND H
         GBLB  &REGEQS
         LCLA  &A,&B,&C,&D,&E,&F
         LCLB  &FAIL,&B13
         LCLC  &GNAM
&GNAM    SETC  'IHB'.'&SYSNDX'
&FAIL    SETB  0
&D       SETA  K'&NAME
.*CW*&F    SETA  72+(8*&WORKA)   DON'T REQUIRE WORKA TO BE NUMERIC *CW*
         AIF   ('&DATE' EQ 'NO').T0
&D       SETA  &D+17                  CHANGED FROM 15 (ASMG ONLY?) *CW*
.T0      AIF   (T'&VER EQ 'O').T1
&D       SETA  &D-1+K'&VER
.T1      AIF   ('&NAME' NE '').T2
.E1      MNOTE 12,'CSECT NAME IS REQUIRED'
&FAIL    SETB  1
.T2      AIF   (N'&BASE GE 1).T3
.E2      MNOTE 12,'AT LEAST ONE BASE REG IN RANGE 2-12 MUST BE SPECIFIE.
               D'
&FAIL    SETB  1
.T3      AIF   (N'&BASE LE 11).T4
.E3      MNOTE 12,'MORE THAN 11 REGISTERS SPECIFIED IN &BASE'
&FAIL    SETB  1
.T4      AIF   (&BASE(1) NE 13).TEST
&B13     SETB  1
&A       SETA  2
         AIF   ('&RENT' EQ 'YES').E5
         AGO   .TEST2
.TEST    ANOP
&A       SETA  1
.TEST1   AIF   (&BASE(&A) LT 2 OR &BASE(&A) GT 12).E4
&A       SETA  &A+1
.TEST2   ANOP
         AIF   (&A LE N'&BASE).TEST1
         AIF   (&FAIL).END
&NAME    CSECT
         USING &NAME,15                TEMPORARY BASE REG
         B     &GNAM.A                 BRANCH AROUND NAME
         DC    AL1(&D)                 COUNT
         DC    C'&NAME'                NAME
         AIF   ('&DATE' EQ 'NO').NODAT
         DC    C' &SYSDATE &SYSTIME'   DATE-TIME OF ASSEMBLY
.NODAT   AIF   (T'&VER EQ 'O').NOVER
         DC    C' ',C&VER              VERSION
.NOVER   ANOP
&GNAM.A  STM   14,12,12(13)            SAVE REGS
         AIF   ('&RENT' EQ 'YES').RENT1
         LR    14,13                   CHAIN SAVE AREAS
         ST    13,&SAVE.+4
         LA    13,&SAVE
         ST    13,8(14)                FOR & BACK CHAINING
         AGO   .RENT2
.RENT1   ANOP
         LR    &BASE(1),13             CHAIN SAVE AREAS
&GNAM.W  EQU   ((72+&WORKA+7)/8)*8     LENGTH OF GETMAINED AREA    *CW*
         MNOTE  *,'GETMAIN  R,LV=&GNAM.W     GET A SAVE AREA'      *CW*
         GETMAIN  R,LV=&GNAM.W             GET A SAVE AREA         *CW*
         ST    &BASE(1),4(1)
         LR    13,1
         LM    14,1,12(&BASE(1))       RESTORE REG 14,15,0 & 1
         ST    13,8(&BASE(1))          FOR & BACK CHAINING
.RENT2   ANOP
         DROP  15                      RELEASE TEMP BASE
         AIF   (&B13).ISB13
         LR    &BASE(1),15
         USING &NAME,&BASE(1)          FIRST BASE REG
         AGO   .NOTB13
.ISB13   USING &SAVE,13                BASE REGISTER
.NOTB13  ANOP
&A       SETA  1
.LOOP1   AIF   (N'&BASE EQ &A).OUT
&A       SETA  &A+1
&B       SETA  (&A-2)*4
&C       SETA  4096*(&A-1)
         L     &BASE(&A),&GNAM.+&B     LOAD NEXT BASE
         USING &NAME.+&C,&BASE(&A)
         AGO   .LOOP1
.OUT     AIF   ('&EXN' EQ '').OUT1
         B     &EXN
         AGO   .OUT2
.OUT1    B     &GNAM.B
.OUT2    AIF   ('&RENT' EQ 'YES').OUT3
&SAVE    DC    18F'0'                  SAVE AREA
.OUT3    ANOP
         AIF   (N'&BASE EQ 1).PASS
&A       SETA  1
&GNAM    DC    A(&NAME.+4096)          ADCONS FOR BASE REGS
.LOOP2   ANOP
&A       SETA  &A+1
         AIF   (N'&BASE EQ &A).PASS
&B       SETA  4096*&A
         DC    A(&NAME.+&B)
         AGO   .LOOP2
.PASS    ANOP
         AIF   (&PATCH LE 0).NOPATCH                               *CW*
&F       SETA  0                                                   *CW*
PATCH    DS    0H                      START OF PATCH SPACE        *CW*
.PATGEN  DC    S(*)                                                *CW*
&F       SETA  &F+2                                                *CW*
         AIF   (&F LE &PATCH).PATGEN                               *CW*
.NOPATCH ANOP  ,                                                   *CW*
&EXIT    DS    0H
         AIF   ('&WTO' NE 'YES').EXIT1
         STM   15,1,16(13)             SAVE 15 - 1
         WTO   '&NAME ENDED',ROUTCDE=&ROUTCDE
         LM    15,1,16(13)             RESTORE 15 - 1
.EXIT1   L     13,4(,13)
         AIF   ('&RENT' NE 'YES').EXIT2
         STM   0,1,20(13)              SAVE 0 & 1 AROUND FREEMAIN
         L     1,8(,13)                AREA TO BE RELEASED
         MNOTE  *,'FREEMAIN  R,LV=&GNAM.W,A=(1)    FREE SAVE AREA' *CW*
         FREEMAIN  R,LV=&GNAM.W,A=(1)  FREE SAVE AREA              *CW*
         LM    0,1,20(13)              RESTORE 0 & 1
.EXIT2   MVI   12(13),X'FF'            MARK SAVE AREA USED
         L     14,12(,13)              RESTORE 14
         LM    2,12,28(13)             RESTORE 2-12
         BR    14                      RETURN
&GNAM.B  DS    0H
.REGEQ   AIF   ('&REGEQ' NE 'YES' OR &REGEQS).END
*
*              REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
&REGEQS  SETB  1
         AGO   .END
.E4      MNOTE 12,'ONE OR MORE OF BASE REGISTERS &BASE NOT IN RANGE 2-1.
               2 (13 CAN ONLY BE FIRST BASE REG.)'
         AGO   .END
.E5      MNOTE 12,'BASE REGISTER 13 CANT BE USED IN RE-ENTRANT PROGRAM'
.END     EJECT
         MEND
         EJECT
CONFIG   PROGRAM 11
**                                                         **
**        O P E N S                                        **
**                                                         **
         SPACE 3
         OPEN  MF=(E,OCLIST)      OPEN OUTPUT                   GP12057
         L     R1,CVTPTR     GET THE CVT                        GP12057
         TM    CVTDCB-CVTMAP(R1),X'80' X/A OR LATER SYSTEM?     GP12057
         BZ    UNIT2         NO                                 GP12057
         MVC   BUFF1(32),=C'CONFIGSE is for MVT and MVS only'   GP12057
         BAL   R8,PUTOUT     WRITE IT                           GP12057
         CLOSE MF=(E,OCLIST)                                    GP12057
         ABEND 666                                              GP12057
UNIT2    DS    0H                                               GP12057
*        OPEN  (SNAP,(OUTPUT))                                     HY01
         EJECT
***********************************************************************
*          REGISTER USAGE :
*           R0 THRU R5 ARE WORK REGISTERS
*           R6 -- UCB LOOKUP TABLE INDEX
*           R7 -- UCB DSECT BASE
*           R8 -- INTERNAL BRANCH REGISTER
*           R9 THRU R10 ARE WORK REGISTERS
*           R11 -- PROGRAM BASE REGISTER
*           R12 -- LINES / PAGE COUNTER
*           R13 THRU R15 ARE WORK REGISTERS
*
***********************************************************************
         SPACE 5
***********************************************************************
*        GENERATE THE COVER PAGE FOR THE I/O GEN REPORT
*
***********************************************************************
         SPACE 4
         LA    R9,LINE        POINT R9 AT THE OUTPUT AREA...
         SR    R12,R12        ZAP LINES-SO-FAR                     HY01
         BCTR  R12,0             SO AS TO FORCE FIRST PAGE EJECT   HY01
         SPACE 2
         MACHID  R2,MODEL
COVER    GENLNE  NO=12,ROUTINE=PUTOUT,AREA=LINE,R=8
         MVI   LINE,C'0'      SET UP DOUBLE SPACING OF OUTPUT
         MVC   TITLE1,MODEL   FIRST LINE OF OUTPUT..MODEL ID
         BAL   R8,PUTOUT      PRINT IT OUT
         MVC   TITLE2,=C'I/O' THIS IS SECOND LINE OF OUTPUT
         MVI   LINE,C'-'      BUT FIRST  SKIP 3 LINES ...
         BAL   R8,PUTOUT      THEN PRINT THE LINE
         MVC   TITLE3,=C'SOFTWARE' SECOND LINE
         MVI   LINE,C'0'      SET UP DOUBLE SPACING
         BAL   R8,PUTOUT      GO PRINT THE LINE
         MVC   TITLE4,=C'CONFIGURATION'  SET UP ANOTHER LINE
         BAL   R8,PUTOUT      PRINT IT OUT
         MVC   LINE,LINE-1    BLANK THE LINE
         GENLNE  NO=18,ROUTINE=PUTOUT,AREA=LINE,R=8
         MVI   LINE,C'0'      DOUBLE SPACE AGAIN
         GETIME  DATE,STORDATE,DAY,YEAR
         MVI   YEAR+2,C'.'    SEPARATOR                            DW01
         MVC   HDATE(6),YEAR  MOVE DATE TO PAGE HEADING ALSO       DW01
         MVC   HMODEL,MODEL   MOVE IN CPU MODEL, ALSO              DW01
         BAL   R8,PUTOUT      GO DO A PRINT ...
         NOP   BEGIN          SWITCH TO PRINT ONLY 2 TITLE PAGES
         OI    *-3,X'F0'      SET THE BRANCH FOR NO RETURN
         MVI   LINE,C'1'      GET A NEW PAGE
         LA    R8,COVER       SET UP A RETURN POINTER
         B     PUTOUT         PUT OUT THE EJECT
         EJECT
BEGIN    EQU   *
         MVI   LINE,C' '      BLANK OUT                            HY01
         MVC   LINE,LINE-1       THE LINE                          HY01
         MVI   LINE,C'1'      NOW DO A                             HY01
         BAL   R8,PUTOUT         PAGE EJECT TO START THE REPORT    HY01
         MVI   LINE,C'0'      NOW RE-SETUP FOR DOUBLE SPACING      HY01
         L     R2,CVTPTR      CVT POINTER                          DW01
         USING CVT,R2         ADDRESSABILITY ON CVT DSECT          DW01
         L     R6,CVTILK2     START OF UCB LOOK UP TABLE           DW01
         DROP  R2             DONE FOR NOW                         DW01
         SR    R7,R7          SET REG 7 TO 0
UCBHERE  LH    R7,0(,R6)      INITIALIZE IT AS THE BASE
         N     R7,FRAK        TURN OFF HIGH-ORDER HALF-WORD        HY01
         C     R7,FRAK        IS THIS THE END OF THE TABLE ?
         BE    NMLEND
         USING INPUT,R7       SET UP R7 FOR DSECT USAGE
         LA    R6,2(,R6)      INCREMENT LOOKUP TABLE POINTER
         LTR   R7,R7          IS BASE ZERO
         BNZ   NOTZERO        IF NOT, GO DO IT
         MVC   BUFF10,ZFLAG   INDICATE HALF-WORD FILLER            HY01
         B     LINESET                                             HY01
NOTZERO  BAL   R8,UCBDUPCK    BAL TO DUPLICATE CHECK OUT ROUTINE
         MVC   BUFF1,UCBNAME       MOVE EBCDIC UCB NAME TO OUTPUT
         CLC   UCBTYPE,=X'00000000'  CHECK FOR DUMMY UCB
         BNE   PSEU1          IF NOT EQUAL THEN CONTINUE CHECKOUT
         MVC   BUFF3,=C' * DUMMY TYPE FLD * '
         B     UCBHERE        GET NEXT UCB
PSEU1    EQU   *
         TM    UCBATI,X'01'   TEST FOR PSEUDO DEVICE
         BNO   APCK           CHECK FOR ALTERNATE PATHS
         MVC   BUFF14,PSEUDO  WRITE OUT ENGLISH
APCK     EQU   *
         TM    UCBFL5,X'01'   TEST FOR ALTERNATE PATHS             HY01
         LA    R8,TYPECHK     SET R8 FOR POSSIBLE RETURN
**        DUPLICATE PATHS ARE CHECKED AT UCBDUPCHK, HOWEVER THAT   HY01
** ROUTINE JUST THROWS OUT DUPLICATES. LCWCHK ACTUALLY PRINTS WHAT HY01
** THOSE PATHS ARE. (?SVS? ONLY). LCHCHK IS MVS ROUTINE.....       HY01
         BO    LCHCHK         IF SO FIND 'EM .                     HY01
TYPECHK  EQU   *
         CLI   CLASS,X'41'    CTC ADAPTER?                         HY02
         BE    CTCXX          YEP -- SAY SO                        HY02
         TM    CLASS,X'30'    TEST FOR DASD/GRAPHICS DEVICE
         BM    TEST30         IF ON, CHECK OUT FURTHER
         TM    CLASS,X'C0'    TEST FOR TAPE/COMMUNICATIONS DEVICES
         BM    TESTC0         IF ON CHECK OUT FURTHER
         TM    CLASS,X'08'    TEST FOR UNIT RECORD DEVICE
         BNO   A007           IF NOT, IT IS AN INVALID DEVICE      HY01
*                             SO JUST PRINT THE UCB ADDRESS
         PREP  PRE=UNIT,DIE=A007U                                  HY01
         TM    BUFF19,C'P'    CHECK FOR A PRINTER
         BNO   LINESET
         CLC   BUFF3(4),=C'3800'   IS IT A 3800?                   HY02
         BE    UNIT0          IF SO PRETEND ITS UCS                HY02
         TM    FEATURES,X'80' TEST FOR UCS IN DEVICE
         BNO   UNIT1          IF NOT ON THEN IT IS NON UCS
UNIT0    MVC   BUFF12,=C' - UCS      '                             HY02
         B     LINESET        PRINT THIS OUT
UNIT1    EQU   *
         MVC   BUFF12,=C' - NON UCS  '
         B     LINESET
TEST30   EQU   *
         TM    CLASS,X'10'    TEST FOR GRAPHICS CONSOLES
         BO    GRAPHICS       IF NOT ON THEN ITS A DASD DEVICE
         PREP  PRE=DASD,DIE=A007D                                  HY01
         TM    FEATURES,X'08' IS IT A VIRTUAL DASD?                HY02
         BZ    VIRTXX                                              HY02
         LA    R1,BUFF3-1                                          HY02
VIRT01   LA    R1,1(R1)       FIND A                               HY02
         CLI   0(R1),C' '          PLACE TO PUT                    HY02
         BNE   VIRT01              IN A VEE -- IE FIRST BLANK      HY02
         MVI   0(R1),C'V'                                          HY02
VIRTXX   EQU   *                                                   HY02
         TM    UCBSTAT,X'80'  TEST FOR ONLINE DEVICE
         BNO   LINESET        IF NOT ONLINE THEN GET NEXT UCB
         CLI   UCB28,C' '     CHECK FOR PRINTABLE NAME          GP12057
         BNH   SERDON           PROBABLY NOT?                   GP12057
         MVC   BUFF11,UCB28   GET VOLSER INTO OUTPUT
SERDON   TM    UCBSTAT,X'02'  IS THIS THE SYSRES VOLUMNE        GP12057
         BNO   DASD1          IF NOT CONTINUE ......
         MVC   BUFF17,=C'SYSRES  '  WRITE OUT IDENTIFIER
DASD1    EQU   *
         TM    UCB34,X'40'    TEST FOR PAGE PACK
         BNO   DASD6          IF NOT PAGE, CONTINUE
         MVC   BUFF17,=C'PAGE PK '
DASD6    EQU   *
         TM    UCB34,X'80'    TEST FOR DASD DEDICATION
         BNO   DASD2          IF NOT ON THEN DASD IS SHARED
         MVC   BUFF13,=C'DEDICATED   '
         B     DASD3
DASD2    EQU   *
         MVC   BUFF13,=C'SHARED DASD '
DASD3    EQU   *
         TM    UCB34,X'10'    PRIVATE DASD BIT
         BNO   DASD4          IF NOT ON THEN DASD IS PUBLIC OR STORAGE
         MVC   BUFF14,=C'PRIVATE VOL. '
         B     LINESET
DASD4    EQU   *
         TM    UCB34,X'08'    PUBLIC DASD BIT
         BNO   DASD5          IF NOT PUBLIC THE N DASD IS STORAGE
         MVC   BUFF14,=C'PUBLIC VOL.  '
         B     LINESET
DASD5    EQU   *
         TM    UCB34,X'04'    STORAGE BIT
         BNO   LINESET        IF NOT STORAGE THEN PRINT THE LINE -
         MVC   BUFF14,=C'STORAGE VOL. '
         B     LINESET
TESTC0   EQU   *
         TM    CLASS,X'80'    IS THIS A TAPE UNIT
         BNO   COMMQ          IF NOT 80 THEN IT IS COMMUNICATIONS EQU.
         PREP  PRE=TAPE,DIE=A007T                                  HY01
         TM    FEATURES,X'80'      TEST FOR 7 TRACK
         BNO   TAPE1          IF NOT 7 TRACK IT MUST BE 8 TRACK
         MVC   BUFF12,=C'7 - TRACK  '
         B     TAPE2
TAPE1    EQU   *
         MVC   BUFF12,=C'9 - TRACK  '
TAPE2    EQU   *
         TM    FEATURES,X'20'  CHECK DENSITY
         BNO   TAPE3
         MVC   BUFF16,=C'DUAL-DENSITY (800/1600 BPI) '
         B     LINESET
TAPE3    EQU   *
         TM    FEATURES,X'10'  CHECK DENSITY
         BNO   TAPE4
         MVC   BUFF16,=C'DUAL-DENSITY (1600/6250 BPI)'
         B     LINESET
TAPE4    EQU   *
         TM    IOFLAG,X'04'   1600 BPI DRIVE ONLY
         BNO   TAPE5          IF NOT 1600 THEN TRY FOR 6250
         MVC   BUFF20,=C' -- 1600 BPI DRIVE'
         B     LINESET
TAPE5    EQU   *
         TM    IOFLAG,X'02'   CHECK FOR 6250 BPI ONLY
         BNO   LINESET
         MVC   BUFF20,=C' -- 6250 BPI DRIVE'
         B     LINESET
GRAPHICS EQU   *
         PREP  PRE=GRAP,DIE=A007G                                  HY01
         B     LINESET
COMMQ    EQU   *
         MVC   BUFF6,=C'ADAPTER TYPE:'  ADAPTER ID IN LINE
         MVC   BUFF4,=C'MODEL:'  PUT OUT A MODEL ID.
*
*        CHECK HERE FOR SPECIAL CASES RELATING TO TP DEVICES
*        I. E. -- 3705 S -- OR 3791 S -- OR ANYTHING ELSE THAT
*        FALLS OUT OF THE NORMAL TCU/MODEL/ADAPTER SCHEME OF THINGS
*
         TM    TYPE,X'F1'     CHECK FOR 3790 TYPE DEVICE
         BNO   CK3705         IF NOT CHECK FOR 3705 TYPE
         MVC   BUFF5,=C'3791'      3790 IDENTIFIER
         B     LINESET             PRINT THE  LINE
CK3705   EQU   *
         CLI   TYPE,X'15'     3705 ADAPTER CHECK (TYPE 1)       GP12057
         BNE   TYPE2          MUST BE TYPE 2                    GP12057
*OLD*    MVC   BUFF7(13),=C'IBM -- TYPE 1'
         MVC   BUFF5+9(20),=C'TP CONTROLLER TYPE 1'             GP12057
         B     TYPE3705        PRINT THE LINE
TYPE2    EQU   *
         CLI   TYPE,X'25'          CHECK FOR TYPE TWO           GP12057
         BNE   COMMQ2              IF NOT, THEN CONTINUE PROCESSING
*OLD*    MVC   BUFF7(13),=C'IBM -- TYPE 2'
         MVC   BUFF5+9(20),=C'TP CONTROLLER TYPE 1'             GP12057
TYPE3705 EQU   *
         MVC   BUFF5,=C'3705'   3705 IDENTIFIER
         B     LINESET             PRINT THE LINE
*
*        THIS IS THE NORMAL TP DEVICE ROUTINE ---
*        HE/SHE GENERATES THE FOLLOWING INFORMATION:
*              MODEL ID
*              ADAPTER TYPE
*              TCU TYPE
*
COMMQ2   EQU   *
         SR    R2,R2
         SR    R3,R3
         SR    R4,R4
         SR    R5,R5
         SR    R8,R8
         IC    R4,IOFLAG      GET I/O FLAG BYTE
         SRDL  R4,4           SEPARATE NIBBLES
         LA    R4,MODETAB     SET UP VCON TABLE POINTER
         SRL   R5,26          OBTAIN INDEX INTO VCON TABLE
         L     R4,0(R5,R4)    POINT TO CORRECT ENG. TABLE VCON ENTRY
         IC    R2,TYPE        GRAB THE  ADAPTER TYPE BYTE
         SRDL  R2,4           SEPARATE NIBBLES AND
         SRL   R3,28          POSITION TCU NIBBLE IN LO ORDER
         BCTR  R3,0           DECREMENT BY ONE FOR
         BCTR  R2,0           CORRECT DISPLAYMENT AFTER MULTIPLY
         LR    R9,R2          SET UP AN ODD REG FOR MULTIPLY
         M     R8,MODLEN      FIND DISPL INTO ENGLISH TABLE
         AR    R4,R9          POINTER TO ENGLISH ENTRY
         MVC   BUFF5,0(R4)    PUT OUT ENTRY
*
*        NOW WE SET UP ENGLISH FOR TCU AND ADAPTER USED
*
         L     R4,@ADAPTAB    SECURE ADAPTER TABLE POINTER      GP12057
         LR    R9,R2          SET UP AN ODD REG FOR MULTIPLY
         M     R8,ADAPLEN     FIND DISPL INTO TABLE
         AR    R9,R4          POINT TO ADAPTER ENTRY
         MVC   BUFF7,0(R9)    PUT OUT THE LINE
         L     R8,@TCUTAB     POINTER TO TCU TABLE              GP12057
         SR    R2,R2          SET UP FOR MULTIPLY
         M     R2,TCULEN      FIND DISPL INTO TABLE
         AR    R8,R3          POINT TO ENGLISH ENTRY
         MVC   BUFF8,=C'TCU: '   INDICATE FIELD
         MVC   BUFF2,0(R8)    FILL IN TCU TYPE
         LA    R9,LINE        RESET R9 TO POINT AT OUTPUT
         B     LINESET
CTCXX    EQU   *                                                   HY02
         MVC   BUFF6(26),=CL26'CHANNEL TO CHANNEL ADAPTER'         HY02
         TM    UCBTYPE,X'10'                                       HY02
         BNO   LINESET                                             HY02
         MVC   BUFF6+26(16),=CL16' - DATA CHAINING'                HY02
         B     LINESET                                             HY02
         EJECT
***********************************************************************
**                                                                   **
**       REDUNDANT UCB CHECK OUT ROUTINE                             **
**                                                                   **
**    BECAUSE OF ALTERNATE PATHS GENNED INTO THE SYSTEM, ANY GIVEN   **
**    UCB MAY HAVE MORE THAN 1 ENTRY IN THE 1/2 WORD ADDRESS         **
**    TABLE BEING USED.  THIS MAY CAUSE DUPLICATION,  FOR ANY GIVEN  **
**    UCB MAY BE PROCESSED MORE THAN ONCE.  TO SOLVE THIS DILEMMA,   **
**    A BIT TABLE IS SET UP AND BITS ARE LIT AS UCBS ARE PROCESSED   **
**    THUS KEEPING TRACK OF ALL UCBS CHECKED, AND SOLVING            **
**    THE DUPLICATION PROBLEM ...........                            **
**                                                                   **
***********************************************************************
         SPACE 3
UCBDUPCK EQU   *
         MVC   HEXNAME,BINARY SECURE THE BINARY NAME OF THIS UCB
         MVC   STUFF,CHAN     GET THE REAL CHAN. NAME
         TR    STUFF,HEXTRTAB  GET BINARY VAL FROM EBCDIC       GP12057
*   THIS IS DONE BECAUSE OF ALTERNATE PATHS, WE MAY HAVE AN ALTERNATE
*   PATH FOR CHANNEL ID AND NOT THE PRIMARY CHANNEL PATH
         LH    R2,HEXNAME     SET UP REGS 2,3 FOR DIVIDE
         SR    R3,R3          CLEAR REG 3 FOR DOUBLE SHIFT
         SRDL  R2,3           DIVIDE BY EIGHT
         SRL   R3,29          PUT REMAINDER IN LO ORDER BITS
*
*        R2 ---> QUOTIENT   -- OR THE BYTE LOCATION THAT HAS THE BIT
*        R3 ---> REMAINDER  -- OR THE BIT LOCATION TO TEST
*
         LA    R5,UCBDUP          POINT R5 AT THE BIT TABLE
         LA    R14,0(R2,R5)       POINT R14 AT PROPER BYTE IN TABLE
         LA    R5,128             LOAD INTO R5 A BIT FOR TEST (X'80')
         SRL   R5,0(R3)           SHIFT MASK BIT ACCORDING TO REMAINDER
         EX    R5,TM              EXECUTE A TM AND FIND OUT IF
*              BIT IN QUESTION IS LIT .....
         BO    UCBHERE            IF SO, THEN THIS UCB HAS BEEN ALREADY
*              PROCESSED, SO GO GET ANOTHER .....
         EX    R5,ORIT            OTHERWISE LIGHT THE BIT, AND CONTINUE
         BR    R8
         EJECT
********************************************************************
*
*              THIS CODE IS ENTERED FROM THE PREP MACRO WHICH
*              PASES THE CORRECT ENGLISH ENTRY NUMBER (GOTTEN FROM THE
*              EXECUTION OF THE TRT INSTRUCTION), IN A GIVEN TABLE
*              FINDIT DOES THE FOLLOWING :
*   (ENTRY INDEX  X  LENGTH OF ENTRY) = POINTER TO DESIRED ENGLISH
*
*******************************************************************
         SPACE 3
FINDIT   EQU   *
         LR    R3,R2          GET READY FOR THE MULTIPLY
         BCTR  R3,0           DECREMENT COUNT
         SR    R2,R2          SET UP FOR MULTIPLY
         M     R2,RECLEN      DO THE MULTIPLY
*        R2 HAS DISPLACEMENT INTO TABLE FOR ENGLISH ...
         AR    R4,R3          SET UP CORRECT POINTER INTO ENG. TABLE
         MVC   BUFF3,0(R4)     R4 POINTS TO ENG. TRANSLATION
         BR    R8             RETURN FOR MORE ANALYSIS  .....
**********************************************************************
**                                                                  **
**             THIS ROUTINE FIGURES OUT THE ALTERNATE PATHS FROM    **
**             THE LOGICAL CHANNEL TABLE FOR A GIVEN UCB........    **
** (?SVS? ONLY).                                                ** HY01
**********************************************************************
         SPACE 2
LCWCHK   EQU   *
         STM   R8,R9,FROG     STORE TOPLEVEL RETURN ADD.           HY01
         B     FROGX          BRANCH AROUND AREA                   HY01
FROG     DS    2F                                                  HY01
FROGX    EQU   *                                                   HY01
*        WTO 'ENTERED LCWCHK'
         MVC   BUFF15,ALTPATH INDICATE ALTERNATE PATHING
         SR    R5,R5          CLEAR THE REGISTER AND               HY01
         IC    R5,HEXNAME+1      INSERT THE UA/DA INTO IT          HY01
         LA    R5,TOPCHAN(,R5)     MAX. CA IN SYSTEM FOR BXLE      HY01
         LA    R4,NXTCHAN     INCREMENT TO NEXT CA FOR BXLE        HY01
         LH    R3,HEXNAME     GET CURRENT GUY, THEN                HY01
         AR    R3,R4             SKIP HIM                          HY01
         LA    R8,CHANLOOP    SET UP RETURN FROM UCBLOOK
         LA    R10,LINE+101    START THE BALLS ROLLING
         LR    R2,R10         SAVE THE POINTER FOR LATER COMPARE   HY01
*        WTO 'GOING TO UCBLOOK'
         B     UCBLOOK
CHANLOOP EQU   *
         CR    R7,R9          IS THIS AN ALTER. ADDRESS
         BNE   BXLE           IF NOT GET ANOTHER (MAYBE)
         CLI   UCBID,X'FF'       IS IT A REAL UCB?                 HY01
         BNE   BXLE                 NO -- SKIP IT (ITS TRASH)      HY01
*  SINCE OPTCHANS MUST BE AT HIGHER ADDRESSES,                     HY01
* A MATCH MEANS OPTCHAN                                            HY01
*        CLC   UCBCHA,4(R9)   IS THIS THE PRIMARY PATH             HY01
*        BE    BXLE           IF SO PATH IS COVERED, GET ANOTHER   HY01
         LR    R9,R3          COPY CA/UA/DA                        HY01
         SRL   R9,8           ISOLATE CA                           HY01
         IC    R9,RTTAB(R9)                GET CHANNEL IN EBCDIC   HY01
         STC   R9,0(R10)      PRINT IT                             HY01
         MVI   1(R10),C','    ALSO PUT OUT A SEPARATER
         LA    R10,2(,R10)    INCREMENT OUTPUT POINTER
BXLE     EQU   *
*        WTO   'AT THE BXLE'
         BXLE  R3,R4,UCBLOOK                                       HY01
         CR    R10,R2         HAVE WE PRINTED ANY ALT PATHS?       HY01
         BNE   PLUGH2         YES -- JUST GO AHEAD                 HY01
         MVI   0(R10),C'?'    NO -- BETTER LOOK CONFUSED           HY01
         B     XYZZY          GO PRINT                             HY01
PLUGH2   BCTR  R10,0          DECREASE POINTER BY 1
         MVI   0(R10),C' '    ERASE COMMA
XYZZY    LM    R8,R9,FROG     PICK UP TOPLEVEL RETURN ADDRESS      HY01
         BR    R8             RETURN TO CONTINUE
         EJECT
LCHCHK   EQU   *   MVS CHECK FOR ALTERNATE PATHS                   HY01
         MVC   BUFF15,ALTPATH INDICATE ALTERNATE PATHING           HY01
         SR    R5,R5          GET INDEX INTO                       HY01
         IC    R5,UCBLCI         LCHTAB AND MULTIPLY               HY01
         M     R4,=F'32'         BY LENGTH OF LCH ENTRIES.         HY01
         L     R3,16          GET CVT ADDRESS                      HY01
         L     R3,X'8C'(R3)   GET LCH FIRST ADDRESS                HY01
         L     R5,16(R3,R5)   GET POINTER TO TEST CHANNEL LIST     HY01
         LH    R4,HEXNAME     GET CA/UA/DA                         HY01
         SRL   R4,8           ISOLATE CA                           HY01
         LA    R10,LINE+101   SET UP OUTPUT POINTER                HY01
         LR    R2,R10         SAVE FOR LATER COMPARE               HY01
         SR    R3,R3                                               HY01
LCHCHK2  EQU   *                                                   HY01
*        CLC   0(2,R5),=X'FFFF'   AT END OF CHANNEL LIST?          HY01
*        BE    LCHCHK4        YES -- ALL DONE                      HY01
         LH    R0,0(R5)       NEGATIVE NUMBER MEANS                HY02
         LTR   R0,R0               END OF CHANNEL LIST -- AT END?  HY02
         BM    LCHCHK4        YES -- ALL DONE                      HY02
         IC    R3,0(R5)   UPPER BYTE OF HALFWORD CONTAINS CHANNEL  HY01
         CR    R3,R4          IS IT CURRENT GUY'S?                 HY01
         BE    LCHCHKX        YES -- DONT PRINT HIM                HY01
         IC    R3,RTTAB(R3)   NO -- CONVERT HIM TO EBCDIC          HY01
         STC   R3,0(R10)      PRINT HIM                            HY01
         MVI   1(R10),C','    ALSO A SEPARATOR                     HY01
LCHCHK3  EQU   *                                                   HY01
         LA    R10,2(R10)     BUMP OUTPUT POINTER                  HY01
LCHCHKX  LA    R5,2(R5)       POINT TO NEXT CHANNEL                HY01
         B     LCHCHK2        GO AGAIN                             HY01
LCHCHK4  EQU   *                                                   HY01
         CR    R10,R2         HAVE WE PRINTED ANYTHING?            HY01
         BNE   LCHCHK5        YES -- GO AHEAD                      HY01
         MVI   0(R10),C'?'   NO -- INDICATE CONFUSION              HY01
         BR    R8             RETURN                               HY01
LCHCHK5  EQU   *                                                   HY01
         BCTR  R10,0          MOVE OUTPUT POINTER BACK TO LAST     HY01
         MVI   0(R10),C' '       SEPARATOR AND ERASE IT.           HY01
         BR    R8             AND RETURN.                          HY01
****************************************************************** DW01
*                                                                * DW01
*                UCB LOOKUP SUBROUTINE                           * DW01
*                                                                * DW01
*        INPUT:                                                  * DW01
*              R3  - ADDRESS BEING EXAMINED (CUU OR CUD)         * DW01
*              R8  - RETURN ADDRESS (VIA A BR 8)                 * DW01
*                                                                * DW01
*        OUTPUT:                                                 * DW01
*              R9  - ADDRESS OF UCB FOUND                        * DW01
*                                                                * DW01
*        FORMULA:                                                * DW01
*           FOUND IN SY28-0605-5 "OS/VS1 DATA AREAS"   PG. 54-1  * DW01
*                                                                * DW01
*              TEMP1 = IECILK1(1 BYTE) + 3 BIT CHANNEL ADDRESS   * DW01
*              TEMP2 = IECILK1(1 BYTE) +                         * DW01
*                        2* (4 BIT UNIT ADDRESS + TEMP1)         * DW01
*              UCB ADDRESS = IECILK2(2 BYTE) +                   * DW01
*                        2 * (4 BIT DEVICE ADDRESS + TEMP2)      * DW01
*                                                                * DW01
*              (THIS IS BASICLY A TWO PASS TABLE LOOK UP.)       * DW01
*                                                                * DW01
*        NOTES:                                                  * DW01
*              THIS FORMULA WILL ONLY WORK FOR LARGE MACHINES.   * DW01
*        THE MACHINE MUST HAVE 6 OR MORE LOGICAL CHANNELS GENNED,* DW01
*        AND MUST HAVE CONTROL UNIT ADDRESSES HIGHER THAN 6.     * DW01
*                                                                * DW01
*        AUTHOR:                                                 * DW01
*              THIS CODE ADDED (REPLACES ORIGINAL) BY            * DW01
*              DON WEIMER SYSTEMS,                               * DW01
*              18JULY78                                          * DW01
*                                                                * DW01
****************************************************************** DW01
         SPACE 5                                                   DW01
*        SETUP UP REGISTERS FOR CALCULATIONS                       DW01
         SPACE 1                                                   DW01
UCBLOOK  STM   0,15,MYSAVE    I DON'T KNOW WHAT REGS. I CAN USE    DW01
*        WTO 'IN UCBLOOK'
         L     R1,CVTPTR      GET CVT ADDRESS                      DW01
         USING CVT,R1         ADDRESSABILITY ON CVT DSECT          DW01
         LR    R2,R3          COPY ADDRESS INTO EVEN REGISTER      DW01
         LR    R4,R3          AND ALSO HERE FOR LATER.        HY01 DW00
         SRDL  R2,8           ISOLATE CHANNEL VALUE IN R2          DW01
         SRL   R3,28          AND UNIT VALUE IN R3.                DW01
         LA    R5,15          A VALUE OF X'0000,000F'              DW01
         NR    R4,R5          TURN OFF ALL BUT DEVICE ADDRESS BITS DW01
*        WTO 'UCBLOOK + 10'
         EJECT                                                     DW01
         SPACE 3                                                   DW01
*        WE NOW HAVE:                                              DW01
*              R1 - POINTS TO CVT (FOR CVTILK1, CVTILK2 VALUES)    DW01
*              R2 - CHANNEL NUMBER                                 DW01
*              R3 - UNIT NUMBER                                    DW01
*              R4 - DEVICE NUMBER                                  DW01
*        TEMPORARYS:                                               DW01
*              R5 - ADDRESS OF THE IECILK1 TABLE                   DW01
*              R6 - TEMP1                                          DW01
*              R7 - TEMP2                                          DW01
*              R8 - ADDRESS OF THE IECILK2 TABLE                   DW01
*                                                                  DW01
*        AND, OF COURSE:                                           DW01
*              R9 - THE ANSWER                                     DW01
         SPACE 1                                                   DW01
         SR    R6,R6          CLEAR REGISTER FOR TEMP1             DW01
         L     R5,CVTILK1     TEMP1 =                              DW01
         IC    R6,0(R5,R2)      VALUE AT CVTILK1 + CHANNEL ADDRESS DW01
*                                   (INDEX INTO UNIT TABLE)        DW01
         SPACE 1                                                   DW01
         AR    R6,R3          TEMP2 = (TEMP1 + UNIT ADDRESS)       DW01
         SLL   R6,1                    TIMES 2                     DW01
         LH    R7,0(R6,R5)         + IECILK1                       DW01
*                                (INDEX INTO UCB ADDRESS LIST)     DW01
         SPACE 1                                                   DW01
         AR    R7,R4          UCB ADDRESS = (TEMP2 + DEVICE ADDR.) DW01
         SLL   R7,1                TIMES 2                         DW01
         L     R8,CVTILK2        + IECILK2                         DW01
         LH    R9,0(R7,R8)    GETS US THE UCB ADDRESS.             DW01
*        WTO 'GOT UCB ADDRESS'
         SPACE 3                                                   DW01
*        EXIT LINKAGE                                              DW01
         DROP  R1             NO LONGER A VALID BASE               DW01
         LM    R0,R8,MYSAVE   RESTORE ALL REGISTERS                DW01
         LM    R10,R15,MYSAVE+(4*R10)  EXCEPT R9                   DW01
         BR    R8             AND EXIT THIS SUBROUTINE             DW01
         SPACE 3                                                   DW01
MYSAVE   DC    16F'-1'        SAVE AREA FOR THIS SUBOUTINE         DW01
         EJECT
***********************************************************************
*
*        THIS ROUTINE IS THE LINESET ROUTINE ......
*        HE/SHE KEEPS TRACK OF HOW LINES PER PAGE ARE PRINTED
*        AND PUTS OUT A HEADER FOR THE TOP OF A NEW PAGE .....
*
***********************************************************************
         SPACE 3
LINESET  EQU   *
         L     R12,REG12      SET UP R12
         LA    R4,58          GET THE LIMIT FOR LINES/PAGE      GP12057
         LA    R8,UCBHERE     SET UP RETURN REG FOR PUTOUT
         CR    R12,R4         IS THE PAGE FILLED UP ?
         BNH   NOTHI
         PUT   OUTPUT,HEADER  PUT OUT A HEADER
         LA    R12,0          INCREMENT THE COUNTER
         MVI   LINE,X'F0'     SET UP DOUBLE SPACING
         B     PUTOUT
NOTHI    EQU   *
         MVI   LINE,X'40'     SINGLE SPACE ALL
         LA    R12,1(,R12)    INCREMENT THE COUNTER
PUTOUT   EQU   *
         PUT   OUTPUT,(R9)
         MVC   LINE,LINE-1    CLEAR THE OUTPUT AREA
         ST    R12,REG12      SAVE THE COUNT (NO -- NOT VALENTI)
         BR    R8
         PRINT NOGEN
         SPACE 3
OCLIST   OPEN  (OUTPUT,OUTPUT),MF=L                             GP12057
OUTPUT   DCB   BLKSIZE=13300,RECFM=FBA,LRECL=133,                      X
               DDNAME=SYSPRINT,DSORG=PS,MACRF=PM
*SNAP    DCB   DDNAME=SNAPDUMP,RECFM=VBA,LRECL=125,BLKSIZE=882,   HY01
*              DSORG=PS,MACRF=(W)                                  HY01
         SPACE 5
A007     MVC   BUFF3(26),=C'***** INVALID DEVICE *****'            HY01
         B     LINESET                                             HY01
A007U    MVC   BUFF3(35),=C'***** UNKNOWN (UNIT) DEVICE *****'     HY01
         B     LINESET                                             HY01
A007D    MVC   BUFF3(33),=C'***** UNKNOWN (DASD) DEVICE *****'     HY01
         B     LINESET                                             HY01
A007T    MVC   BUFF3(33),=C'***** UNKNOWN (TAPE) DEVICE *****'     HY01
         B     LINESET                                             HY01
A007G    MVC   BUFF3(33),=C'***** UNKNOWN (GR/C) DEVICE *****'     HY01
         B     LINESET                                             HY01
         EJECT
         SPACE 5
         PRINT GEN
TRT      TRT   0(*-*,R5),0(R14)     TRANSLATE INSTRUCTION
ORIT     OI    0(R14),*-*           OR IMMED. INSTRUCTION
TM       TM    0(R14),*-*         TM INSTRUCTION
         EJECT
NMLEND   EQU   *
*        SNAP  DCB=SNAP,PDATA=ALL                                  HY01
         CLOSE MF=(E,OCLIST)                                    GP12057
         LA    15,0                                                DW01
         B     EXIT           SUPPLIED BY "PROGRAM" MACRO          DW01
***********************************************************************
*
*              CONSTANTS USED
*
*********************************************************************
HEXWRK   DS    F              WORK AREA FOR UCB LOOKUP
REG12    DC    F'0'                                                HY01
         CNOP  0,4           FORCE WORD ALIGNMENT                  HY01
FRAK     DC    X'0000FFFF'   HALFWORD NEGATIVE ONE/MASK            HY01
HEADER   DS    0CL133
         DC    CL20'1'
         DC    CL60'MVS/SE I/O CONFIGURATION REPORT'     HY02 HY01 DW00
         DC    CL3' '                                              DW01
HMODEL   DC    CL6'MDL/ID'    ACCOUNTING SYSTEM MODEL & ID         DW01
         DC    CL5' '                                              DW01
HDATE    DC    CL6'YY.DDD'    REPORT DATE                          DW01
         DC    CL(HEADER-*+133)' '   PADDING TO 133 CHARACTERS     DW01
         DC    CL1' '         FOR BLANKING OUT LINE
LINE     DC    CL133' '        OUTPUT AREA
DEVMSK   DC    A(15)          FOR UCB LOOKUP
PSEUDO   DC    CL13'PSEUDO DEVICE'
ALTPATH  DC    CL12'ALT. PATHS: '   FOR ATL. PATHS
         DS    0H
HEXNAME  DS    0CL2           UCB NAME MADE INTO HEX
STUFF    DS    CL1
         DS    CL1
UCBDUP   DC    XL200'0'       BIT TABLE FOR DUPL. UCB CHECKING
         DC    XL200'0'
         DC    XL112'0'                                            HY01
ZFLAG    DC    CL27'HALF WORD -- 0000 -- FILLER'  FLAG FOR 1/2 WD.
TRTAB    DC    XL6'0A0B0C0D0E0F'   FOR ALPHA CHAN IDS.
         DC    XL41'00'       FILLERS
         DC    XL10'00010203040506070809'  FOR NUMERIC CHAN IDS.
HEXTRTAB EQU   TRTAB-C'A'     HEX TRANSLATE TABLE               GP12057
RTTAB    DC    C'0123456789ABCDEF'    REVERSE TRANSLATE TAB.       HY01
STORDATE DS    F              DATE STOREAGE AREA
DATE     DS    D
RECLEN   DC    F'36'          LENGTH OF ENGLISH ENTRY
MODLEN   DC    F'5'           MODEL TABLE ENTRY LENGTH
ADAPLEN  DC    F'28'          ADAPTER ENGLISH ENTRY LENGTH
TCULEN   DC    F'5'           TCU TYPE ENGLISH ENTRY LENGTH
UNITTAB  DC    A(TAB1)                                          GP12057
UNITREC  DC    A(TAB2)                                          GP12057
DASDTAB  DC    A(TAB3)                                          GP12057
DASDREC  DC    A(TAB4)                                          GP12057
TAPETAB  DC    A(TAB5)                                          GP12057
TAPEREC  DC    A(TAB6)                                          GP12057
GRAPTAB  DC    A(TAB7)                                          GP12057
GRAPREC  DC    A(TAB8)                                          GP12057
COMMTAB  DC    A(TAB9)                                          GP12057
COMMREC  DC    A(TAB10)                                         GP12057
MODETAB  EQU   *
         DC    A(SPECIAL)                                       GP12057
         DC    A(MODELA)                                        GP12057
         DC    A(MODELB)                                        GP12057
         DC    A(MODELC)                                        GP12057
         DC    A(MODELD)                                        GP12057
         DC    A(MODELE)                                        GP12057
         DC    A(MODELF)                                        GP12057
         DC    A(MODELG)                                        GP12057
         DC    A(MODELH)                                        GP12057
@TCUTAB  DC    A(TCUTAB)      TCU ENGLISH TABLE POINTER         GP12057
@ADAPTAB DC    A(ADAPTAB)     ADAPTER ENGLISH TABLE POINTER     GP12057
***********************************************************************
*
*              EQUATES
*
***********************************************************************
         SPACE 2
CHANID   EQU   13
TOPCHAN  EQU   X'F00'         MAXIMUM VALUE FOR CHANNELS IN UCBLOOK
NXTCHAN  EQU   X'100'         INCREMENTAL VALUE FOR UCBLOOK
BUFF1    EQU   LINE+12,3      UCB ADDRESS AREA IN OUTPUT AREA
BUFF2    EQU   LINE+91,5      TCU TYPE FIELD IN OUTPUT LINE
BUFF3    EQU   LINE+19,36     DEV TYPE/ENGLISH FIELD IN OUTPUT
BUFF4    EQU   LINE+30,6      MODEL FIELD IN OUTPUT LINE
BUFF5    EQU   LINE+37,4      MODEL TYPE FIELD IN OUTPUT LINE
BUFF6    EQU   LINE+46,13     ADAPTER ENGLISH IN OUTPUT LINE
BUFF7    EQU   LINE+60,28     ADAPTER TYPE FIELD IN OUTPUT LINE
BUFF8    EQU   LINE+86,5      TCU HEADER AREA
BUFF9    EQU   LINE+98,35     TCU TYPE AREA
BUFF10   EQU   LINE+12,27     HALF WD. FILLER AREA
BUFF11   EQU   LINE+45,6      VOLSER OF DASD
BUFF12   EQU   LINE+45,11     FEATURE AREA FOR UNIT DEVICES & TAPES
BUFF13   EQU   LINE+60,12     DASD DEDICATION
BUFF14   EQU   LINE+74,13     DASD USAGE
BUFF15   EQU   LINE+89,12     ALTERNATE PATHS AREA
BUFF16   EQU   LINE+60,28     AREA FOR DUAL DENSITY DRIVES
BUFF17   EQU   LINE+52,8      DASD -- SPECIAL USAGE
BUFF18   EQU   LINE+93,12     ALTERNATE PATHS FIELD
BUFF19   EQU   LINE+30,1      TEST AREA FOR PRINTER
BUFF20   EQU   LINE+68,19     AREA FOR SINGLE DENSITY DRIVES
TITLE1   EQU   LINE+64,6
TITLE2   EQU   LINE+66,3
TITLE3   EQU   LINE+63,8
TITLE4   EQU   LINE+60,13
YEAR     EQU   LINE+97,2
DAY      EQU   LINE+100,3
         LTORG
         EJECT
***********************************************************************
*
*              DSECTS USED IN THE PROGRAM
*
***********************************************************************
         SPACE 2
INPUT    DSECT
UCBJBNR  DS    CL1            (0)-INTERNAL JOB ID
UCBFL5   DS    CL1            (1)-FLAGS
UCBID    DS    CL1            (2)-X'FF' = UCB ID
UCBSTAT  DS    CL1            (3)-DEVICE FLAGS
BINARY   DS    0CL2
UCBCHA   DS    CL1            (4)-CHANNEL ADDRESS FLAGS
UCBUA    DS    CL1            (5)-UNIT ADRESS
UCBFL1   DS    CL1            (6)-FLAGS
UCBDTI   DS    CL1            (7)-INDEX TO DEVICE TABLE
UCBETI   DS    CL1            (8)-ERROR ROUTINE
UCBSTI   DS    CL1            (9)-VAL. X10=INDEX TO STATISTICS
UCBLCI   DS    CL1            (10)-VAL. X8=INDEX TO LOG. CHAN. TABLE
UCBATI   DS    CL1            (11)-INDEX TO ATTENTION TABLE
UCBWGT   DS    CL1            (12)-FLAGS AND CHANNEL MASK
UCBNAME  DS    0CL3           (13)-UNIT NAME (EBCDIC)
CHAN     DS    CL1            CHANNEL ID
         DS    CL2
UCBTYPE  DS    0CL4           (16)-UCB TYPE FIELDS
IOFLAG   DS    CL1            (16)-I/O SUPERVISOR FLAGS
FEATURES DS    CL1            (17)-ACCORDING TO DEVICE TYPE
CLASS    DS    CL1            (18)-DEVICE CLASS FOR THIS UCB
TYPE     DS    CL1            (19)-DEVICE TYPE FOR THIS UCB
UCBLTS   DS    CL2            (20)-LAST RQE TO USE THIS UCB
UCBSNS   DS    CL2            (22)-UCB SENSE INFORMATION
EXTENT   UCBAREA  24,40
         TITLE 'I/O DEVICE INFORMATION - FORMER MEMBER TABS'    GP12057
CONFIGSE CSECT ,                                                GP12057
         PRINT ON,GEN,NODATA                                    GP12057
* NOTES ON PATCHING THIS ABOMINATION:
*    'N=2' INDICATES UNIT-RECORD  'N=8' INDICATES GRAPHICS
*    'N=6' INDICATES TAPE DRIVES  'N=4' INDICATES DASD
*       'POS=' INDICATES WHAT THE BITS ARE SET LIKE IN THE UCB/UCBTYP
*      ***BE CAREFULL, THOUGH -- THE CRITERION FOR SWITCHING
*      ***BETWEEN DIFFERENT TABLES (IE DIFFERENT 'N='S)
*      ***IS TOTALLY RANDOM (SO TO SPEAK)..IT'S LOCATED AT THE
*      ***START OF EXECUTABLE MACRO STATEMENTS IN THE 'T' MACRO...
         EJECT
         TAB  2
         PRINT ON,GEN,DATA                                      GP12057
         T     2540,'CARD READER',N=2,POS=1
         T     2540,'CARD PUNCH',N=2,POS=2
         T     1442,'CARD READ PUNCH',N=2,POS=3
         T     2501,'CARD READER',N=2,POS=4
         T     2520,'CARD READ PUNCH',N=2,POS=5
         T     3505,'CARD READER',N=2,POS=6
         T     1403,'PRINTER',N=2,POS=8
         T     3211,'PRINTER',N=2,POS=9
         T     1443,'PRINTER',N=2,POS=A
         T     3203,'MODEL-4',N=2,POS=B
         T     3525,'CARD PUNCH',N=2,POS=C
         T     3800,'PRINTING SUBSYSTEM',N=2,POS=E
         T     AFP1,'ADV. FUNCT. PRINTER',N=2,POS=F  NEED #?    GP12057
         T     2671,'PAPER TAPE READER',N=2,POS=10
         T     4245,'PRINTER',N=2,POS=11                        GP12057
         T     4248,'PRINTER',N=2,POS=13                        GP12057
         T     3890,'MAG.CHAR. READER',N=2,POS=16
         T     3886,'OPTICAL CHAR READER',N=2,POS=17
         T     2495,'TAPE CARTRIDGE READER',N=2,POS=18          GP12057
         T     3895,'DOC. RDR./INS.',N=2,POS=19                 GP12057
         T     1285,'OPTICAL READER',N=2,POS=1A                 GP12057
         T     1287,'OPTICAL READER',N=2,POS=1B
         T     1288,'OPTICAL PAGE READER',N=2,POS=1C
         T     1419,'MAG. CHAR. READER (PCU)',N=2,POS=1D        GP12057
         T     1419-1275,'OPTICAL CRD SORTER(SCU)',N=2,POS=1E
         T     1275,'MAG. CHAR. READER (PCU)',N=2,POS=1F
         T     1052,'CONSOLE PRINTER-KEYBOARD',N=2,POS=20
         T     2150,'CONSOLE PRINTER-KEYBOARD',N=2,POS=21       GP12057
         T     3210,'CONSOLE PRINTER-KEYBOARD',N=2,POS=22
         T     3215,'CONSOLE PRINTER-KEYBOARD',N=2,POS=23
         T     3213,'PRINTER',N=2,POS=30
         T     7443,'MINIFLOPPY IMPL DISKETTE',N=2,POS=3D
         T     3851,'MASS STORAGE CNTL.',N=2,POS=42
         T     3540,'DISKETTE I/O UNIT',N=2,POS=44
         T     3838,'ARRAY PROCESSOR',N=2,POS=4C                GP12057
         SPACE 1
         T     2400,'TAPE DRIVE',N=6,POS=1
         T     3400,'TAPE DRIVE',N=6,POS=3
         T     3480,'TAPE DRIVE',N=6,POS=80                     GP12057
         T     3490,'TAPE DRIVE',N=6,POS=81                     GP12057
         T     3423,'TAPE DRIVE',N=6,POS=82                     GP12057
         T     3590,'TAPE DRIVE',N=6,POS=83                     GP12057
         SPACE 1
         T     2311,'DISK',N=4,POS=1                            GP12057
         T     2301,'DRUM',N=4,POS=2                            GP12057
         T     2303,'DRUM',N=4,POS=3                            GP12057
*OLD*    T     2304,'DRUM',N=4,POS=4                            GP12057
         T     9345,'DISK',N=4,POS=4                            GP12057
         T     2305,'DATA CELL',N=4,POS=5                       GP12057
         T     2305,'FIXED HD DASD - MODEL 1',N=4,POS=6
         T     2305,'FIXED HD DASD - MODEL 2',N=4,POS=7
         T     2314/2319,'DISK',N=4,POS=8
         T     3330,'MODEL 1 ',N=4,POS=9
         T     3340,'DISK STORAGE',N=4,POS=A
         T     3350,'DISK',N=4,POS=B
         T     3375,'DISK',N=4,POS=C                            GP12057
         T     3330,'MODEL II ',N=4,POS=D
         T     3380,'DISK',N=4,POS=E                            GP12057
         T     3390,'DISK',N=4,POS=F                            GP12057
         SPACE 1
         T     2250,'DISPLAY UNIT',N=8,POS=2
         T     2260,'GRAPHIC DISPLAY UNIT',N=8,POS=3
         T     1053,'PRINTER',N=8,POS=4
         T     2280,'DISPLAY',N=8,POS=5                         GP12057
         T     2282,'DISPLAY',N=8,POS=6                         GP12057
* ## ?   T     MD85,'SYSTEM CONSOLE',N=8,POS=7                  GP12057
         T     3066,'SYSTEM CONSOLE',N=8,POS=8
         T     3277,'DISPLAY',N=8,POS=9
         T     3284,'PRINTER',N=8,POS=A
         T     3286,'PRINTER',N=8,POS=B
         T     3156,'DISPLAY CONSOLE',N=8,POS=C
         T     3036,'DISPLAY CONSOLE',N=8,POS=D
         T     3138,'DISPLAY CONSOLE',N=8,POS=E
         T     3148,'DISPLAY CONSOLE',N=8,POS=F
*
*        THE FOLLOWING TABLES ARE USED FOR COMMUNICATIONS DEVICES
*
TAB9     DC    100X'0'
         ORG   TAB9+100       SET UP LOCATION POINTER
SPECIAL  Z     ????
MODELA   Z     1050
         Z     1030
         Z     1050
         Z     83B3
         Z     TWX
         Z     WTTA
         Z
         Z     2260
MODELB   Z     1060
         Z
         Z
         Z     115A
MODELC   Z     2740C
MODELD   Z     2740
MODELE   Z     2741C
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z     BSC1
MODELF   Z     2741P
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z     BSC2
MODELG   Z     1050X
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z     BSC3
MODELH   Z     2740X
TCUTAB   Z     2702
         Z     2701
         Z     2703
         Z     2955
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z
         Z     5098
ADAPTAB  DC    CL28'IBM -- TYPE 1'
         DC    CL28'IBM -- TYPE 2'
         DC    CL28'IBM -- TELEGRAPH'
         DC    CL28'TELEGRAPH -- TYPE 1'
         DC    CL28'TELEGRAPH -- TYPE 2'
         DC    CL28'WORLD TRADE TELEGRAPH'
         DC    CL28'SYNCHRONOUS -- TYPE 1'
         DC    CL28'IBM -- TYPE 3'
         DC    CL28'SYNCHRONOUS -- TYPE 3'
         TITLE 'I/O SOFTWARE CONFIGURATION -- CVT DEFINITION'      DW01
         PRINT NOGEN                                            GP12057
         SPACE 3                                                   DW01
         CVT   DSECT=YES          (FOUND IN SYS1.AMODGEN)          DW01
         SPACE 5                                                   DW01
         END   CONFIG
