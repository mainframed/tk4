COUNTREC TITLE 'C O U N T R E C  ***  GATHER DATA SET STATISTICS'
         MACRO ,
&NM      CNTVECT &P=SUM
.*   DEFINE ELEMENTS OF VECTORS TO BE SUMMED
.*
&P.VECT  DS    0D            START OF COUNT VECTOR
&P.#REC  DC    F'0'          RECORDS FOUND
&P.MIN   DC    F'0'          SHORTEST RECORD FOUND
&P.MAX   DC    F'0'          LONGEST RECORD FOUND
&P.AVG   DC    F'0'          AVERAGE LENGTH
&P.#BYT  DC    D'0'          TOTAL BYTES READ
&P.@LEN  DC    A(0)          ADDRESS OF LENGTH COUNTER ARRAY
&P.@LEND DC    A(0)          END ADDRESS OF LENGTH COUNTER ARRAY
         MEND  ,
         SPACE 2
 PUNCH ' ORDER COUNTREC(P) '
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
         PRINT &PRTSOR
***********************************************************************
**                                                                   **
**   AUTHOR: RICHARD OXLEY, N.I.S. (WAY BACK WHEN 1972-3?)           **
**       ATTRIBUTES:  QUICK, DIRTY                                   **
**                                                                   **
***********************************************************************
**                                                                   **
**   COMPLETE REWRITE USING EXTERNAL SUBROUTINES @SERVICE, @PRINTER, **
**     AND @INPREAD (1990-1994).                  G. POSTPISCHIL     **
**                                                                   **
**   UPDATED FOR 31-BIT ADDRESSING MODE, AND SUPPORT FOR GENERAL     **
**     DATA SET STATISTICS, PLUS SUPPORT FOR READING ALL MEMBERS     **
**     OF A PDS (ALIAS ENTRIES ARE IGNORED, EVEN WHEN WIDOWED).      **
**                                    2002/09/09  G. POSTPISCHIL     **
**                                                                   **
***********************************************************************
COUNTREC PGMHEAD ZERO31,BASE=(R11,R12),PARM=R9,BNDRY=PAGE,             *
               LOC=BELOW,AM=31,RM=24
         SPACE 1
         SERVINIT ,
         SERVLOAD @PRINTER,@INPREAD,@FORMATS
         PRTOPEN SUMPRINT,OPT=NOWTO,DEV=1
         PRTOPEN SYSPRINT,OPT=NOWTO,DEV=2
         PRTV  DEVHEAD1,TITLE=1,DEV=1
         PRTV  DEVHEAD2,TITLE=1,DEV=2
         SPACE 1
         LA    R1,CUR$LEN    POINT TO LENGTH COUNTER ARRAY
         L     R3,=A(4*32768)  LENGTH OF ARRAY
         LA    R2,CUR$LEN-4(R3)  SET LAST COUNTER ADDRESS
         STM   R1,R2,CUR@LEN  SET START AND END ARRAY ADDRESSES
         LA    R1,4(R3,R1)   NOW DO FOR DS ARRAY
         LA    R2,4(R3,R2)   NOW DO FOR DS ARRAY
         STM   R1,R2,DSN@LEN  SET START AND END ARRAY ADDRESSES
         LA    R1,4(R3,R1)   NOW DO FOR SUM TOTAL
         LA    R2,4(R3,R2)   NOW DO FOR SUM TOTAL
         STM   R1,R2,SUM@LEN  SET START AND END ARRAY ADDRESSES
         LA    R3,SUMVECT    POINT TO JOB TOTALS
         BAS   R14,INITCNT   INITIALIZE COUNTERS
         SPACE 2
***********************************************************************
**                                                                   **
**  NEXTDD - LOOP THROUGH DSABS LOOKING FOR SYSUT--- DD NAMES        **
**    WHEN FOUND, PROCESSIT                                          **
**                                                                   **
***********************************************************************
         PUSH  USING
         MVSDSAB FIRST,DSABPTR=@DSAB,MF=(E,PARMDSAB)            GP06230
         BXH   R15,R15,ABENDSAB
         B     COMMDD
NEXTDD   MVSDSAB NEXT,DSABPTR=@DSAB,MF=(E,PARMDSAB)             GP06230
         CH    R15,=H'4'     CHECK RETURN
         BE    LASTDD        END OF CHAIN
         BH    ABENDSAB      ERROR
COMMDD   L     R7,@DSAB      GET CURRENT DSAB
         USING DSAB,R7       MAP IT
         L     R6,DSABTIOT   GET TIOT DD ENTRY
         USING TIOENTRY,R6   DECLARE IT
         CLC   =C'SYSUT',TIOEDDNM  REQUESTED DD PREFIX ?
         BNE   NEXTDD        NO; TRY ANOTHER
         SERVCALL TIODD,TIOEDDNM  LOOK UP THIS NAME
         CR    R0,R6         SAME ADDRESS?
         BNE   NEXTDD        NO; SKIP DUPLICATE DDN
         SERVCALL RJFCB,TIOEDDNM  GET THE JFCB FOR THIS ENTRY
         MVC   JFCBDSNM(JFCBLGTH),0(R1)  MOVE TO MY AREA
         MVC   INPFILE(PATINPLN),PATINPWK  MOVE PATTERN
         MVC   INPFILE(8),TIOEDDNM   MOVE DD NAME
         LA    R0,DEBXLE     GET DIRECTORY ENTRY
         ST    R0,INPFILE+20  FOR FEEDBACK
         INPOPEN INPFILE,OPT=ABEND BE NASTY
         ST    R15,RETCODE   SAVE THE RETURN
         CH    R15,=H'4'     OTHER THAN ALTERNATE DDN?
         BH    PROCERR       QUIT
         MVI   FLAGS,0       RESET PROCESSING FLAGS
         LA    R3,CURVECT    POINT TO MEMBER DATA
         BAS   R14,INITCNT   INITIALIZE COUNTERS
         LA    R3,DSNVECT    POINT TO DATA SET DATA
         BAS   R14,INITCNT   INITIALIZE COUNTERS
         POP   USING
         SPACE 1
GETLOOP  INPGET ,            GET NEXT RECORD                    GP03034
         CH    R15,=H'4'
         BE    EODAD
         BH    PROCERR       REPORT A PROCESSING ERROR
         LTR   R4,R1         IS THIS A NEW MEMBER IN A PDS ?
         BM    NEWMEM        YES
         LR    R5,R0         COPY AND PRESERVE LENGTH
         INC   CUR#REC       INCREMENT CURRENT RECORD COUNT
         A64F  CUR#BYT,(R5)  ACCUMULATE TOTAL BYTE COUNT
         STMIN R5,CURMIN     GET SHORTEST TO DATE
         STMAX R5,CURMAX     GET LONGEST TO DATE
         MIN   R5,=F'32768'  TRUNCATE TO FIT ARRAY
         SLL   R5,2          MULTIPLY * 4 TO MAKE INDEX
         INC   CUR$LEN(R5)   INCREMENT THE LENGTH COUNTER
         B     GETLOOP       GET ANOTHER RECORD
         SPACE 2
EODAD    OI    FLAGS,FGEOF   SHOW HIT EOF
         TM    FLAGS,FGPDS   PROCESSING A PDS ?
         BNZ   NEWMEM        YES; PROCESS LAST MEMBER
         LA    R3,CURVECT    POINT TO MEMBER DATA
         LA    R4,DSNVECT    POINT TO ACCUMULATOR
         BAS   R14,PROPCNT   MERGE COUNTERS
         LA    R3,CURVECT    POINT TO MEMBER DATA
         BAS   R14,INITCNT   CLEAR COUNTERS FOR NEXT TIME
         B     EODADSEQ       PRINT STATISTICS FOR DS
NEWMEM   TM    FLAGS,FGPDS   FIRST TIME HERE
         BNZ   NEWMEMNF        NO
         OI    FLAGS,FGPDS   DOING A PDS
         B     NEWMEMNP      FIRST TIME - NO STATS TO PRINT
NEWMEMNF LA    R3,CURVECT    POINT TO MEMBER DATA
         LA    R4,DSNVECT    POINT TO ACCUMULATOR
         BAS   R14,PROPCNT   MERGE COUNTERS
         LA    R3,CURVECT    POINT TO ACCUMULATOR
         BAS   R9,PRINTOUT   DISPLAY THE COUNTERS
NEWMEMNP LA    R3,CURVECT    POINT TO MEMBER DATA
         BAS   R14,INITCNT   CLEAR COUNTERS FOR NEXT TIME
         MVC   PREVNAME,PDRNAME  PRESERVE NAME OF THIS MEMBER
         TM    FLAGS,FGPDS+FGEOF   PROCESSING A PDS ?
         BM    GETLOOP       YES; READ NEXT MEMBER
EODADSEQ LA    R3,DSNVECT    POINT TO MEMBER DATA
         LA    R4,SUMVECT    POINT TO ACCUMULATOR
         BAS   R14,PROPCNT   MERGE COUNTERS
         MVC   PREVNAME,DCSUMMRY                                GP09114
         LA    R3,DSNVECT    POINT TO ACCUMULATOR
         BAS   R9,PRINTOUT   DISPLAY THE COUNTERS
         LA    R3,DSNVECT    POINT TO MEMBER DATA
         BAS   R14,INITCNT   CLEAR COUNTERS FOR NEXT TIME
         INPCLOSE ,          CLOSE THIS FILE
         B     NEXTDD        DO ANOTHER FILE
         SPACE 1
LASTDD   MVC   JFCBDSNM,=CL44'RUN TOTAL:'
         MVC   INPFILE(8),DCSUMMRY                              GP09114
         MVI   FLAGS,0       FORCE OUT HEADER AND SUMMARY
         LA    R3,SUMVECT    POINT TO ACCUMULATOR
         BAS   R9,PRINTOUT   DISPLAY THE COUNTERS
         SERVTERM ,
         L     R9,RETCODE    GET RETURN CODE
         PGMEXIT RC=(R9)     RETURN WITH CONDITION
         SPACE 1
PROCERR  ABEND 2540,DUMP     REPORT A READ ERROR
         SPACE 1
ABENDSAB ABEND 44,DUMP       REPORT DSAB ERROR
         SPACE 1
***********************************************************************
**                                                                   **
**  INITCNT - INITIALIZE COUNTERS FOR NEW MEMBER/DS/JOB              **
**                                                                   **
**    R3 POINTS TO COUNT VECTOR                                      **
**                                                                   **
***********************************************************************
         PUSH  USING
         USING INPVECT,R3
INITCNT  SR    R0,R0         SHORT ZERO
         ST    R0,INP#REC    CLEAR RECORD COUNTER
         ST    R0,INPMAX     DITTO MAXIMUM
         ST    R0,INP#BYT
         ST    R0,INP#BYT+4
         ST    R0,INPAVG
         L     R0,FOXES      MAKE VERY LARGE
         ST    R0,INPMIN     AND SET MAX IN MIN
         LM    R0,R1,INP@LEN  POINTER TO LENGTH COUNTERS
         SR    R1,R0         MAKE SIZE
         LA    R1,4(,R1)     PLUS LAST ONE
         SR    R15,R15
         MVCL  R0,R14        CLEAR COUNTERS
         BR    R14           RETURN TO CALLER
         POP   USING
***********************************************************************
**                                                                   **
**  PROPCNT - PROPAGATE COUNTERS OF R3 AREA INTO R4                  **
**                                                                   **
***********************************************************************
         PUSH  USING
         USING INPVECT,R3
         USING ACCVECT,R4
PROPCNT  STM   R14,R12,12(R13)  SAVE A LOT
         L     R0,INP#REC    GET COUNTER FOR THIS MEMBER/DS
         A     R0,ACC#REC
         ST    R0,ACC#REC    ACCUMULATE COUNT
         L     R0,INPMIN
         STMIN R0,ACCMIN
         L     R0,INPMAX
         STMAX R0,ACCMAX
         A64D  ACC#BYT,INP#BYT  ACCUMULATE SIZE
         LM    R0,R1,INP@LEN   POINTER TO LENGTH COUNTERS
         LR    R15,R0        COPY START
         LA    R0,4          ENTRY SIZE
         L     R2,ACC@LEN     AND MATCHING OUTPUT
PROPLOOP L     R5,0(,R15)    GET COUNTER
         A     R5,0(,R2)     ADD TO TOTAL
         ST    R5,0(,R2)     STASH TOTAL
         XC    0(4,R15),0(R15)  CLEAR COUNTER FOR NEXT MEMBER/DS
         LA    R2,4(,R2)     UP OUTPUT
         BXLE  R15,R0,PROPLOOP  DO ALL
         LM    R14,R12,12(R13)  RESTORE
         BR    R14           RETURN TO CALLER
         POP   USING
***********************************************************************
**                                                                   **
**  PRINTOUT - PRINT COUNTERS AND STATISTICS FOR ONE LEVEL           **
**                                                                   **
**  R3 POINTS TO COUNT VECTOR                                        **
**                                                                   **
***********************************************************************
         PUSH  USING
         USING ACCVECT,R3
PRINTOUT PRTLIST SUMHEAD,DEV=(1,2)                              GP09114
         PRTLIST SUMHEAD2,DEV=2   SKIP MEMBERS ON SUMPRINT      GP09114
         CLC   DCSUMMRY,PREVNAME                                GP09114
         BNE   PRINTNSP      SKIP MEMBERS ON SUMMARY            GP09114
         PRTLIST SUMHEAD2,DEV=1   SHOW SUMMARY ON SUMPRINT      GP09114
PRINTNSP OI    FLAGS,FGHEAD  HEADER PRINTED
         #FMT  ACC#BYT,32,TYPE=INT,GROUP=Y,TRUNC=Y              GP06232
         LA    R14,PRTBYTE                                      GP06232
         LA    R15,L'PRTBYTE                                    GP06232
         ICM   R1,8,=C' '    PADDING                            GP06232
         MVCL  R14,R0        MOVE                               GP06232
         ICM   R8,15,ACC#REC
         BZ    PRINTNAV      SKIP AVERAGE SIZE
         LM    R0,R1,ACC#BYT  GET TOTAL BYTE COUNT
         DR    R0,R8         MAKE AVERAGE
         ST    R1,ACCAVG     AND SAVE IT
PRINTNAV PRTLIST SUMSTATS,DEV=2   SHOW DETAIL STATISTICS        GP09114
         PRTLIST SUMSTATP,DEV=1   SKIP MEMBER COUNTS ON SUMMARY GP09114
PRINTNPS LTR   R8,R8         ANY DETAIL ?
         BZR   R9            NO; QUICK RETURN
         PRTLIST LENHEAD,DEV=2  FORCE A NEW LINE
         SR    R6,R6         GET LENGTH
         LM    R4,R5,ACC@LEN  LENGTH ARRAY
         LR    R3,R4         MOVE TO WORK REGISTER
         LA    R4,4          COUNTER SIZE
SIZELOOP ICM   R7,15,0(R3)   GET CURRENT COUNTER
         BZ    SIZEBXLE      NOTHING FOR THIS SIZE
         STM   R6,R7,DB      SET FOR FORMATTING
         PRTLIST LENCOUNT,DEV=2  SHOW DETAIL COUNTS BY SIZE
SIZEBXLE LA    R6,1(,R6)     UP THE LENGTH
         BXLE  R3,R4,SIZELOOP  DO ALL
         BR    R9
         SPACE 1
SUMHEAD  FDTM  FLAGS,FGHEAD,BNZ=SUMHEADX  DONE DSN HEADER BEFORE
         FDPRT 'DDN',NL
         FDPRT INPFILE,8,PAD
         FDPRT 'DSN'
         FDPRT JFCBDSNM,PAD
         FDPRT *END                                             GP09114
         SPACE 1
SUMHEAD2 FDTM  FLAGS,FGPDS,BZ=SUMHEADX
         FDPRT 'MEMBER',NL,RADJ,LEN=10
         FDPRT PREVNAME,8,PAD
SUMHEADX FDPRT *END
         SPACE 1
SUMSTATP FDTM  FLAGS,FGPDS,BZ=SUMSTATS                          GP09114
         FDCLC DCSUMMRY,PREVNAME,BNE=SUMSTAT0                   GP09114
SUMSTATS FDPRT ACC#REC,I,RADJ,NL,LEN=12
         FDPRT 'RECORDS READ.',PADL
         FDCLC ACCMIN,FOXES,BE=SUMSTAT0
         FDCLC ACCMIN,ACCMAX,BE=SUMSTATQ
         FDPRT 'SHORTEST HAS',PAD
         FDPRT ACCMIN,I
         FDPRT 'BYTES, AND THE LONGEST HAS',PAD
         FDPRT ACCMAX,I
         FDGOTO SUMSTATV
SUMSTATQ FDPRT 'ALL HAVE A LENGTH OF',PAD
         FDPRT ACCMIN,I
SUMSTATV FDPRT '. TOTAL BYTE COUNT IS',PADR
         FDPRT PRTBYTE,DEB
         FDPRT '.'
         FDCLC ACCMIN,ACCMAX,BE=SUMSTAT0
         FDPRT 'AVERAGE RECORD SIZE IS',PAD
         FDPRT ACCAVG,I
SUMSTAT0 FDPRT *END
         POP   USING
         SPACE 1
SUMPRINT PRTWORK SUMPRINT,TITLE=5
SYSPRINT PRTWORK SYSPRINT,TITLE=5
PATINPWK INPWORK SYSUT1,WIDTH=0,EDIT=128,PDE=3,PDS=(MEM,UPD) ,      *
*FAILS         EODAD=EODAD+X'80000000'
PATINPLN EQU   *-PATINPWK  LENGTH OF MOVED PATTERN
FOXES    DC    X'7FFFFFFF'   UNINITIALIZED MINIMUM
DCSUMMRY DC    CL8'SUMMARY:'                                    GP09114
         SPACE 1
LENCOUNT FDPRT DB+4,4,I,RADJ,NL,LEN=12
         FDPRT 'WITH A LENGTH OF',PAD
         FDPRT DB,4,I,RADJ,LEN=6
         FDPRT *END
         SPACE 1
LENHEAD  FDOPT NL,CC=C'0'
         FDPRT *END
         SPACE 1
DEVHEAD1 VCON  '#C O U N T R E C  ***  FILE STATISTICS'
DEVHEAD2 VCON  '#C O U N T R E C  ***  FILE SIZE DETAILS'
         SPACE 1
INPDSECT DSECT ,
         CNTVECT P=INP
         SPACE 1
ACCDSECT DSECT ,
         CNTVECT P=ACC
         SPACE 1
SAVE     DSECT ,
DB       DS    D
DB2      DS    D
         SERVDEFS ,          EXPAND NEEDED WORDS
FLAGS    DS    X
FGPDS    EQU   X'80'         PROCESSING A PDS
FGEOF    EQU   X'40'         END-FILE READ
FGHEAD   EQU   X'01'         DS NAME HEADER PRINTED
PRTBYTE  DS    CL32          FORMATTED BYTE COUNT
         SPACE 1
@DSAB    DS    A             ADDRESS OF CURRENT DSAB
         MVSDSAB MF=(L,PARMDSAB)                                GP06230
         SPACE 1
INPFILE  INPWORK SYSUT1,WIDTH=0,PDE=3,EODAD=EODAD,PDS=(MEM,UPD)
         SPACE 1
DEBXLE   SERVPDS PFX=PD,DSECT=NO,RETURN=YES,VER=1               GP11338
PREVNAME DC    CL8' '        'CURRENT' MEMBER
         SPACE 1
MYJFCB   DS    0F
         IEFJFCBN ,          PUT DS JFCB IN-LINE
         SPACE 1
***********************************************************************
**                                                                   **
**  COUNTERS FOR CURRENT DATA SET OR MEMBER                          **
**                                                                   **
***********************************************************************
        CNTVECT P=CUR
***********************************************************************
**                                                                   **
**  CUMULATIVE COUNTERS FOR DATA SET (VSAM, SEQUENTIAL, OR PDS)      **
**                                                                   **
***********************************************************************
        CNTVECT P=DSN
***********************************************************************
**                                                                   **
**  CUMULATIVE COUNTERS FOR ENTIRE JOB                               **
**                                                                   **
***********************************************************************
        CNTVECT P=SUM
***********************************************************************
**                                                                   **
**  COUNTERS FOR RECORD LENGTHS, INDEXED BY LENGTH                   **
**                                                                   **
***********************************************************************
CUR$LEN  DC    (32768)F'0'
CUR$LEND DS    4F
DSN$LEN  DC    (32768)F'0'
DSN$LEND DS    4F
SUM$LEN  DC    (32768)F'0'
SUM$LEND DS    4F
SAVEEND  EQU   *
         SPACE 1
         CVT   DSECT=YES
         IHACDE ,
         IHADSAB ,
         IHAPSA ,            LOW
         IKJTCB ,
         IEFUCBOB ,
         IECSDSL1 1          MAP FORMAT 1                        91328
         DCBD  DSORG=PO,DEVD=DA
ANYOLD   DSECT ,
         IEFTIOT1 ,
         IEFJESCT ,
         END   ,
