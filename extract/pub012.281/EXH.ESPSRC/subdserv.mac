SUBDSERV TITLE 'S U B D S E R V  ***  DESERV SUPPORT SUBROUTINES'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
**                                                                   **
**       COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                   **
**                       176 OLD STAGE COACH ROAD                    **
**                       BRADFORD, VT 05033-8844                     **
**                                                                   **
**                   ALL RIGHTS RESERVED                             **
**                                                                   **
***********************************************************************
**   SUBDSERV PROVIDES DESERV FACILITY SUPPORT                       **
**     SUBCALL SUBDSERV,(FUN,ROOT,BXBLOCK,NAME),VL                   **
**                                                                   **
**   FUNCTION  PARAMETERS                                            **
**                                                                   **
**   INIT      ROOT , DCB    ISSUE DESERV AGAINST OPEN BPAM DCB      **
**       R1  = RETURN VALUE FROM ROOT POINTER (=0 FAILED)            **
**                                                                   **
**   LOOP      ROOT , BXBLOCK , NAME (=0 FIRST OR RESTART)           **
**       R15 = 0 (END OR UNSUCCESSFUL); ELSE SMDE ADDRESS            **
**       R0 & R1 = ADDRESS/LENGTH OF NAME                            **
**   FIND      ROOT , NAME , LENGTH OF NAME                          **
**   FIND      ROOT , NAME , LENGTH OF NAME , BXBLOCK (UPDATES BXLE) **
**       R15 = 0 (NOT FOUND); ELSE SMDE ADDRESS                      **
**   POSITION  ROOT , NAME , LENGTH OF NAME , BXBLOCK (UPDATES BXLE) **
**       R15 = 0 (NOT FOUND); ELSE SMDE ADDRESS PRIOR TO REQUEST     **
**   TTR       ROOT,  TTRZ   FIND MEMBER (NOT ALIAS) WITH TTR/Z      **
**       R15 = 0 (NOT FOUND); ELSE SMDE ADDRESS                      **
**       R0 & R1 = ADDRESS/LENGTH OF NAME                            **
**   END       ROOT          CLEAN-UP FOR EXIT                       **
**                                                                   **
***********************************************************************
**   MAINTENANCE:                                                    **
**  2003-08-27  GYP  NEW; COPIED FROM MY MACROREF CODE               **
**  2005-01-13  GYP  ADDED PDS READ FOR MVS 3.8J USE (HERCULES)      **
***********************************************************************
**   ATTRIBUTES:  REFR, RENT, REUS, AM31, RM24 (SAVE AREA)           **
**   USABLE AS SUBROUTINE INCLUDED BY BINDER, OR USED DYNAMICALLY    **
**   WITH LOAD, LINK, OR SERVLOAD/SUBCALL                            **
***********************************************************************
         SPACE 1                                                GP03241
         PRINT &PRTSOR                                          GP05013
SUBDSERV PGMHEAD ZERO15,BASE=R12,RM=24,AM=31,SETAM=31,PARM=R1
*DEBUG*  PRINT &PRTSOR                                          GP05013
*  NOTE THAT RETURN CODE R15=0 INDICATES AN ERROR CONDITION FOR ALL
*    ENTRIES OTHER THAN END (END SETS A RETURN IN R0 ONLY)
         LA    R10,0(,R1)    CLEAN PARM                         GP03244
         LTR   R10,R10       ANY ?                              GP03244
         BZ    RETURN16      NO; MAJOR BOO-BOO
         SPACE 1
COUNTOPS LA    R2,1          COUNT PARAMETERS
         LA    R7,5          ERROR IF MORE THAN FIVE ?
         LR    R15,R10       COPY CLEANED START                 GP03244
COUNTOPL TM    0(R15),X'80'  LAST ENTRY ?
         BNZ   LOOKFUN       YES; LOOK AT FUNCTION REQUEST
         LA    R2,1(,R2)
         LA    R15,4(,R15)   NEXT WORD IN LIST
         BCT   R7,COUNTOPL   UP TO FIVE
         SPACE 1
LOOKFUN  CH    R2,=H'2'      MINIMUM PARMS? (FUN/ROOT ?)
         BL    RETURN16      NO; ERROR
         LTP   R14,1,PARM=(R10)   LOAD PARM 1 ADDRESS           GP03241
         MVC   ROOTPTR,0(R14)  COPY ROOT ADDRESS
         LTP   R3,0,BZ=RETURN16 ADDRESS OF FUNCTION             GP03241
         CLC   =C'LOOP',0(R3)  GET NEXT ?
         BE    REQLOOP       YES
         CLC   =C'FIND',0(R3)  FIND MEMBER OR ALIAS BY NAME
         BE    REQFIND       YES
         CLC   =C'POS',0(R3)   POSITION FOR LOOP TO PROCESS NAME
         BE    REQPOS        YES                                GP03245
         CLC   =C'TTR',0(R3)   FIND MEMBER BY TTR
         BE    REQTTRZ       YES
         CLC   =C'INIT',0(R3)  ISSUE DESERV ?
         BE    MEMINIT       YES
         CLC   =C'END',0(R3)   TERMINATE ?
         BE    MEMEND        YES
RETURN16 MVICC 0,16,RESULT=RETCODE  RETURN R15=0, REASON CODE 16
         B     PGMEXIT
         AIF   (NOT &MVSESA).OLDCODE                            GP05013
         SPACE 2
***********************************************************************
**                                                                   **
**  END:  ISSUE STORAGE RELEASE FOR PRIOR SMDE AND DES POINTERS      **
**       ZERO CALLER'S ROOT POINTER                                  **
**                                                                   **
***********************************************************************
MEMEND   LTP   R8,1,BZ=RETURN16                                 GP05013
         BAS   R14,FREEBUF   FREE PREVIOUS BUFFER, IF ANY
         B     PGMEXIT       ALL DONE
         SPACE 2
***********************************************************************
**                                                                   **
**  INIT: ISSUE DESERV GET_ALL FOR IN-STORAGE DIRECTORY              **
**       RESULT RETURNED IN CALLER'S ROOT POINTER AND R15            **
**                                                                   **
***********************************************************************
         PUSH  USING
MEMINIT  CH    R2,=H'3'      NEED FUN/ROOT/DCB
         BL    RETURN16      NOT ENOUGH
         LTP   R8,1,BZ=RETURN16     TEST ROOT POINTER           GP05013
         BAS   R14,FREEBUF   FREE PREVIOUS BUFFER, IF ANY
         LTP   R2,2,BZ=RETURN16     TEST DCB ADDRESS            GP05013
         USING IHADCB,R2     DECLARE THE DCB MAPPING
         TM    DCBOFLGS,DCBOFOPN  IS DCB OPEN ?
         BZ    RETURN12      NO; ERROR
         MVC   MYDESERV(MYDESLEN),PATDESRV  COPY PATTERN
*        DESERV FUNC=GET_ALL,AREAPTR=(R8),CONCAT=ALL,                  *
               CONN_INTENT=NONE,DCB=(R2)
         PUSH  PRINT
         PRINT ON,&PRTMAC    EXPAND IGWDES THE HARD WAY
         DESERV FUNC=GET_ALL,AREAPTR=(R8),CONCAT=ALL,                  *
               CONN_INTENT=NONE,DCB=(R2),MF=(E,MYDESERV)
         POP   PRINT
         STM   R15,R0,RETCODE
         MVC   RR1CODE,0(R8) ALSO RETURN ROOT VALUE IN R1
         B     PGMEXIT       QUIT WITH
         POP   USING
         SPACE 1
RETURN12 MVICC 0,12
         SPACE 1
PGMEXIT  PGMEXIT COPYRET=(RETCODE,12) RETURN R15-R1
         SPACE 2
*---------------------------------------------------------------------*
*  FREEBUF:  RELEASE STORAGE FROM PRIOR DESERV GET_ALL REQUEST        *
*            R8 HAS ADDRESS OF USER'S ROOT POINTER                    *
*---------------------------------------------------------------------*
         PUSH  USING
FREEBUF  BAKR  R14,0         SAVE EVERYTHING
         ICM   R5,15,0(R8)   CLOSED OR NOT USED ?
         BZ    FREEBUFX      YES; JUST RETURN 0/0/0
         USING DESB,R5
         CLC   =C'IGWDESB ',DESB_ID  VALID ADDRESS ?               GP45
         BNE   FREEBUFX      NO; DON'T TOUCH                       GP45
FREEDESB L     R0,DESB_LEN   GET SIZE OF DESB + SMDE AREA
         L     R6,DESB_NEXT  GET NEXT DESB, IF ANY
         SR    R15,R15
         IC    R15,DESB_SUBPOOL
         STORAGE RELEASE,ADDR=(R5),LENGTH=(0),SP=(15)
         USING SMDE,R5       DECLARE IT
FREESMDE LTR   R5,R6         HAVE ANOTHER BUFFER TO FREE ?
         BNZ   FREEDESB      YES; GO FOR IT
FREEBUFX XC    0(4,R8),0(R8)  CLEAR ROOT POINTER
         PR    ,             RETURN TO CALLER
         POP   USING
         EJECT ,
***********************************************************************
**  LOOP THROUGH ALL MEMBERS - RETURN NEXT ENTRY AFTER INPUT         **
**    R1 - ADDRESS OF PREVIOUS ENTRY OR =0                           **
**    R0 - ADDRESS OF FOUR WORD WORK AREA (BXLE)                     **
***********************************************************************
         PUSH  USING
REQLOOP  CH    R2,=H'3'      NEED FUN/ROOT/BXLE
         BL    RETURN16      INVALID PARM LIST
         LTP   R8,1,BZ=RETURN16     TEST ROOT POINTER           GP05013
         LTP   R4,2,BZ=RETURN16     TEST BXLE POINTER           GP05013
         LM    R5,R8,0(R4)   LOAD POINTERS
         LTR   R5,R5         START FRESH ?
         BNZ   LOOPREST      NO; GET AND VERIFY NEXT DESB
*---------------------------------------------------------------------*
*  BUILD THE BXLE SAVE AREA AND RETURN THE FIRST ENTRY                *
*---------------------------------------------------------------------*
         ICM   R8,15,ROOTPTR GET DESERV RETURN AREA
         BZ    RETURN12      OOPS ?
         USING DESB,R8
LOOPDESB L     R7,DESB_AVAIL  POINT TO FIRST AVAILABLE SPACE
         SH    R7,=H'32'     SUBTRACT ARBITRARY AMOUNT
         LA    R5,DESB_DATA  POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
*        TM    SMDE_FLAG,SMDE_FLAG_ALIAS  HAVE AN ALIAS ?
*        BNZ   LOOPBUMP      YES; IGNORE IT
LOOPSMDE SLR   R9,R9
         ICM   R9,3,SMDE_NAME_OFF  GET OFFSET TO NAME SECTION
         BZ    LOOPBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDE_NAME,R9  DECLARE IT
         LH    R1,SMDE_NAME_LEN
         LA    R0,SMDE_NAME_VAL
         LTR   R1,R1
         BP    LOOPFOUN
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY PROCESSED OR NOT WANTED - GET NEXT SMDE OR DESB              *
*---------------------------------------------------------------------*
LOOPBUMP L     R6,SMDE_LEN
LOOPREST BXLE  R5,R6,LOOPSMDE  REPEAT FOR NEXT SMDE
         SR    R5,R6         PREVENT LOOP
         STM   R5,R8,0(R4)   SAVE BXLE STUFF
         ICM   R8,15,DESB_NEXT  ANOTHER BLOCK ?
         BNZ   LOOPDESB
         MVICC 0,4           SET END OF LIST
         B     PGMEXIT
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET REGISTER 15 AND RETURN                           *
*---------------------------------------------------------------------*
LOOPFOUN LR    R15,R5        RETURN SMDE
         STM   R15,R1,RETCODE  SET R15-R1 FOR RETURN
         L     R6,SMDE_LEN
         STM   R5,R8,0(R4)   SAVE BXLE STUFF
         B     PGMEXIT       RETURN TO CALLER
         POP   USING
         SPACE 2
***********************************************************************
**  RETURN ADDRESS OF SPECIFIC MEMBER (NAME -> R0); RETURN IN R15    **
***********************************************************************
         PUSH  USING
REQFIND  CH    R2,=H'3'      MINIMUM FUN/ROOT/NAME
         BL    RETURN12      INVALID CALL
         BE    REQFINDD      DEFAULT LENGTH
         LTP   R15,3,BZ=REQFINDD  USE DEFAULT IF NO ADDRESS     GP05013
         CH    R15,=H'1024'  LENGTH DIRECTLY ?
         BNH   REQFIND8      YES
         ICM   R15,15,0(R15)  LOAD LENGTH FROM POINTER
         BP    REQFIND8      VALID(?)
REQFINDD LA    R15,8         SET DEFAULT AGAIN
REQFIND8 LTP   R8,1,BZ=RETURN16 ROOT ADDRESS                    GP05013
         LTP   R14,2,BZ=RETURN16  NAME ADDRESS                  GP05013
         ICM   R15,8,=C' '   BLANK FILL ON COMPARE
*---------------------------------------------------------------------*
*  SEARCH THROUGH DESB/SMDE CHAIN FOR MATCHING NAME                   *
*---------------------------------------------------------------------*
         ICM   R8,15,ROOTPTR GET DESERV RETURN AREA
         BZ    RETURN16
         USING DESB,R8
FINDDESB L     R7,DESB_AVAIL  POINT TO FIRST AVAILABLE SPACE
         SH    R7,=H'32'     SUBTRACT ARBITRARY AMOUNT
         LA    R5,DESB_DATA  POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
*DEFER*  TM    SMDE_FLAG,SMDE_FLAG_ALIAS  HAVE AN ALIAS ?
*DEFER*  BNZ   FINDBUMP      YES; IGNORE IT
FINDSMDE SLR   R9,R9
         ICM   R9,3,SMDE_NAME_OFF  GET OFFSET TO NAME SECTION
         BZ    FINDBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDE_NAME,R9  DECLARE IT
         LH    R1,SMDE_NAME_LEN
         LA    R0,SMDE_NAME_VAL
         LTR   R1,R1
         BNP   FINDBUMP      CAN'T TEST
         STM   R14,R1,DB     SAVE COMPARE VALUES
         CLCL  R0,R14        IS THIS THE DESIRED MEMBER OR ALIAS ?
         BE    FINDFOUN      YES; WHOOPPEE
         BH    FINDBUST      NO; PASSED IT
         LM    R14,R15,DB    RESTORE COMPARE VALUES
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY NOT WANTED - GET NEXT SMDE OR DESB                           *
*---------------------------------------------------------------------*
FINDBUMP L     R6,SMDE_LEN
         BXLE  R5,R6,FINDSMDE  REPEAT FOR NEXT SMDE
         ICM   R8,15,DESB_NEXT  ANOTHER BLOCK ?
         BNZ   FINDDESB
FINDBUST MVICC 0,4           SET END OF LIST
         B     PGMEXIT       RETURN NOTHING
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET REGISTERS                                        *
*---------------------------------------------------------------------*
FINDFOUN CH    R2,=H'5'      CALLED WITH FIVE PARAMETERS?
         BL    FINDFOUT      NO; JUST RETURN DATA
         LTP   R4,4,BZ=FINDFOUT  IS THERE A BXLE POINTER?       GP05013
         L     R6,SMDE_LEN
         STM   R5,R8,0(R4)   RETURN BXLE DATA ALSO
FINDFOUT LM    R14,R1,DB     RESTORE TOO MUCH
         LR    R15,R5        RETURN SMDE
         STM   R15,R1,RETCODE  SET R15-R1 FOR RETURN
         B     PGMEXIT       RETURN R15/SMDE; R0/NAME; R1/NAMELEN
         POP   USING
         SPACE 2
***********************************************************************
**  POS: POSITION BXLE POINTERS SO SUBSEQUENT LOOP WILL PROCESS THE  **
**  REQUESTED NAME, OR THE FIRST AFTER IF IT DOESN'T EXIST.          **
**  RETURN ADDRESS OF SPECIFIC MEMBER (NAME -> R15); RETURN IN R15   **
***********************************************************************
         PUSH  USING
REQPOS   CH    R2,=H'5'      MINIMUM FUN/ROOT/NAME/LEN/BXLE
         BL    RETURN12      INVALID CALL
         LTP   R15,3,BZ=REQPOSND  USE DEFAULT IF NO ADDRESS     GP05013
         CH    R15,=H'1024'  LENGTH DIRECTLY ?
         BNH   REQPOSN8      YES
         ICM   R15,15,0(R15)  LOAD LENGTH FROM POINTER
         BP    REQPOSN8      VALID(?)
REQPOSND LA    R15,8         SET DEFAULT AGAIN
REQPOSN8 LTP   R8,1,BZ=RETURN16 ROOT ADDRESS                    GP05013
         LTP   R14,2,BZ=RETURN16  NAME ADDRESS                  GP05013
         ICM   R15,8,=C' '   BLANK FILL ON COMPARE
         LTP   R4,4,BZ=RETURN16 BXLE POINTER                    GP05013
*---------------------------------------------------------------------*
*  SEARCH THROUGH DESB/SMDE CHAIN FOR MATCHING NAME                   *
*---------------------------------------------------------------------*
         ICM   R8,15,ROOTPTR GET DESERV RETURN AREA
         BZ    RETURN16
         XC    0(16,R4),0(R4)  CLEAR BXLE POINTERS (FOR FIRST ENTRY)
         USING DESB,R8
POSNDESB L     R7,DESB_AVAIL  POINT TO FIRST AVAILABLE SPACE
         SH    R7,=H'32'     SUBTRACT ARBITRARY AMOUNT
         LA    R5,DESB_DATA  POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
POSNSMDE L     R6,SMDE_LEN   GET LENGTH OF ENTRY
         SLR   R9,R9
         ICM   R9,3,SMDE_NAME_OFF  GET OFFSET TO NAME SECTION
         BZ    POSNBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDE_NAME,R9  DECLARE IT
         LH    R1,SMDE_NAME_LEN
         LA    R0,SMDE_NAME_VAL
         LTR   R1,R1
         BNP   POSNBUMP      CAN'T TEST
         STM   R14,R1,DB     SAVE COMPARE VALUES
         CLCL  R0,R14        IS THIS THE DESIRED MEMBER OR ALIAS ?
         BE    POSNFOUN      YES; WHOOPPEE
         BH    POSNPAST      NO; PASSED IT
         STM   R5,R8,0(R4)   SAVE POINTERS FOR (A) PRIOR ENTRY
         LM    R14,R15,DB    RESTORE COMPARE VALUES
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY NOT WANTED - GET NEXT SMDE OR DESB                           *
*---------------------------------------------------------------------*
POSNBUMP BXLE  R5,R6,POSNSMDE  REPEAT FOR NEXT SMDE
         ICM   R8,15,DESB_NEXT  ANOTHER BLOCK ?
         BNZ   POSNDESB
         MVICC 0,8           SET END OF LIST
         B     PGMEXIT       RETURN NOTHING
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET REGISTERS                                        *
*---------------------------------------------------------------------*
POSNPAST MVICC 0,4           MEMBER NOT FOUND
POSNFOUN LR    R15,R5        RETURN SMDE
         ST    R15,RETCODE   SET R15 FOR RETURN
         B     PGMEXIT       RETURN R15/SMDE; R0/COND
         POP   USING
         SPACE 2
***********************************************************************
**  RETURN ADDRESS OF MAIN MEMBER AT PASSED TTRZ ; RETURN IN R15     **
***********************************************************************
         PUSH  USING
REQTTRZ  CH    R2,=H'3'      MINIMUM FUN/ROOT/NAME
         BL    RETURN12      INVALID CALL
         LTP   R8,1,BZ=RETURN16     TEST ROOT ADDRESS           GP05013
         LTP   R1,2,BZ=RETURN16     TEST TTRZ ADDRESS           GP05013
*---------------------------------------------------------------------*
*  SEARCH THROUGH DESB/SMDE CHAIN FOR MATCHING NAME                   *
*---------------------------------------------------------------------*
         ICM   R8,15,ROOTPTR GET DESERV RETURN AREA
         BZ    RETURN12
         USING DESB,R8
TTRZDESB L     R7,DESB_AVAIL  POINT TO FIRST AVAILABLE SPACE
         SH    R7,=H'32'     SUBTRACT ARBITRARY AMOUNT
         LA    R5,DESB_DATA  POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
TTRZSMDE L     R6,SMDE_LEN
         TM    SMDE_FLAG,SMDE_FLAG_ALIAS  HAVE AN ALIAS ?
         BNZ   TTRZBUMP      YES; IGNORE IT
         CLC   SMDE_MLTK,0(R1)  MATCHES REQUEST ?
         BNE   TTRZBUMP
         SLR   R9,R9
         ICM   R9,3,SMDE_NAME_OFF  GET OFFSET TO NAME SECTION
         BZ    TTRZBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDE_NAME,R9  DECLARE IT
         LH    R1,SMDE_NAME_LEN
         LA    R0,SMDE_NAME_VAL
         LTR   R1,R1
         BP    TTRZFOUN      YES; WHOOPPEE
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY NOT WANTED - GET NEXT SMDE OR DESB                           *
*---------------------------------------------------------------------*
TTRZBUMP L     R6,SMDE_LEN
         BXLE  R5,R6,TTRZSMDE  REPEAT FOR NEXT SMDE
         ICM   R8,15,DESB_NEXT  ANOTHER BLOCK ?
         BNZ   TTRZDESB
         MVICC 0,4           SET END OF LIST
         B     PGMEXIT       RETURN NO MATCH
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET NAME FOR QUICK REFERENCE; SET REGISTERS          *
*---------------------------------------------------------------------*
TTRZFOUN LR    R15,R5        RETURN SMDE ADDRESS
         STM   R15,R1,RETCODE  SET R15-R1 FOR RETURN
         B     PGMEXIT       RETURN MATCH
**** IF THIS IS AN ALIAS, FIND MAIN MEMBER AND RETURN SMDE IN R0? ****
         POP   USING
         SPACE 2
         LTORG ,
         TITLE 'S U B D S E R V  ***  DATA AND MAPPINGS'
PATDESRV DESERV FUNC=GET_ALL,AREAPTR=1234,CONCAT=ALL,                  *
               CONN_INTENT=NONE,DCB=1234,MF=L
         SPACE 1
SAVE     DSECT ,             DYNAMIC SAVE AND WORK AREA
DB       DS    2D            CONVERSIONS, ETC.
         SERVDEFS ,   1/2    EXPAND @TRACE, DBT, ETC.
ROOTPTR  DS    A             LOCAL COPY OF ROOT WORD
MYDESERV DESERV FUNC=GET_ALL,AREAPTR=1234,CONCAT=ALL,                  *
               CONN_INTENT=NONE,DCB=1234,MF=L
MYDESLEN EQU   *-MYDESERV
SAVEEND  EQU   *             END OF DYNAMIC AREA
         SPACE 2
         PUSH  PRINT
         PRINT ON,&PRTMAC
         IGWDES ,
         SPACE 2
         IGWSMDE ,
         POP   PRINT
         SPACE 2
         DCBD  DEVD=DA,DSORG=PO
         AGO   .BIGEND
.OLDCODE SPACE 2
***********************************************************************
**                                                                   **
**  END:  ISSUE STORAGE RELEASE FOR PRIOR SMDE AND DES POINTERS      **
**       ZERO CALLER'S ROOT POINTER                                  **
**                                                                   **
***********************************************************************
MEMEND   LTP   R8,1,BZ=RETURN16                                 GP05013
         BAS   R14,FREEBUF   FREE PREVIOUS BUFFER, IF ANY
         B     PGMEXIT       ALL DONE
         SPACE 2
***********************************************************************
**                                                                   **
**  INIT: READ PDS DIRECTORY AND BUILD FAKE SMDE CHAINED BLOCKS      **
**       RESULT RETURNED IN CALLER'S ROOT POINTER AND R15            **
**                                                                   **
***********************************************************************
         PUSH  USING
MEMINIT  CH    R2,=H'3'      NEED FUN/ROOT/DCB
         BL    RETURN16      NOT ENOUGH
         LTP   R8,1,BZ=RETURN16     TEST ROOT POINTER           GP05013
         BAS   R14,FREEBUF   FREE PREVIOUS BUFFER, IF ANY
         LTP   R2,2,BZ=RETURN16     TEST DCB ADDRESS            GP05013
         USING IHADCB,R2     DECLARE THE DCB MAPPING
         TM    DCBOFLGS,DCBOFOPN  IS DCB OPEN ?
         BZ    RETURN12      NO; ERROR
         LOAD  EPLOC==CL8'SUBTREE'    REQUIRED SUBROUTINE
         LR    R5,R0         SAVE ENTRY INTO WORK AREA
         GETMAIN R,LV=WORKSIZE  GET THE CONTROL BLOCK
         LR    R11,R1
         USING WORKSECT,R11
         CLRL  WORKSECT,WORKSIZE
         ST    R11,0(,R8)    SAVE FOR LATTER
         ST    R5,SUBTREE    SET SUBROUTINE ADDRESS
         MVC   BCBID(BCBSIZE),PATROOT  INITIALIZE ROOT
         MVC   WORKDECB(DECBSIZE),PATDECB
         SUBCALL *SUBTREE,('INIT',BCBID),VL,MF=(E,CALLPARM)  INIT
         SPACE 1
* READ PDS DIRECTORY AND BUILD FAKE SMDE ENTRIES
         LA    R7,@RECORD1   START OF ENTRY CHAIN
         POINT (R2),=F'1'    REPOSITION DIRECTORY
MEMILOOP LA    R3,DEBUF      POINT TO BUFFER PAST KEY
         READ  WORKDECB,SF,(R2),(R3),256+8,MF=E  READ DIRECTORY BLOCK
         CHECK WORKDECB
         CLI   0(R3),X'01'   DID WE READ THE KEY, TOO ?         GP05192
         BNH   MEMIHVLN      NO; PROCESS LENGTH                 GP05192
         LA    R3,8(,R3)     SKIP THE KEY                       GP05192
MEMIHVLN LR    R5,R3
         LA    R4,2          SET LENGTH OF LENGTH BYTE
         AH    R5,0(,R3)     PLUS DATA LENGTH
         SR    R5,R4         LESS TOPPER
         STM   R3,R5,WORKBXLE  SAVE INCREMENT AND END
MEMINEXT LM    R3,R5,WORKBXLE  GET DIRECTORY BLOCK POINTERS
         BXLE  R3,R4,MEMISTOR  GO TO DECODE
         B     MEMILOOP      READ NEXT BLOCK
MEMISTOR ST    R3,WORKBXLE    UPDATE CURRENT MEMBER START
         CLI   0(R3),X'FF'   PAST LAST MEMBER ?
         BE    MEMIDONE      YES; TREAT AS END-FILE
         USING PDS2,R3       DECLARE THE ENTRY
         XC    BCBREC,BCBREC  CLEAR THE RECORD TO BE BUILT
         LA    R6,BCBREC+4   POINT TO RECORD                    GP05196
         USING SMDE,R6
         MVC   SMDEID,=CL8'IGWSMDE '
         MVC   FEALNAME,PDS2NAME  COPY NAME
         MVC   SMDEMLT,PDS2TTRP  COPY TTR
         LH    R0,=AL2(FEALSIZE-4)
         ST    R0,SMDELEN    MAX LENGTH ?
         TM    PDS2INDC,PDS2ALIS  ALIAS ?
         BZ    MEMIMAIN      NO
         OI    SMFG,SMFGALI  SET ALIAS
MEMIMAIN LA    R0,FEALNAME-SMDE-2  ALLOW FOR LENGTH
         STH   R0,SMDENMOF
         IC    R1,PDS2INDC
         N     R1,=AL4(PDS2LUSR)  HALF-WORD USER DATA LENGTH
         SLA   R1,1          CONVERT TO LENGTH
         STH   R1,SMDEUSLN   SAVE IT
         LA    R14,FEALDATA
         LA    R15,L'FEALDATA
         LA    R0,PDS2USRD
         MVCL  R14,R0        USER DATA
         LA    R0,FEALDATA-SMDE
         STH   R0,SMDEUSOF
         LA    R0,L'FEALNAME
         STH   R0,FEALNMLN
         SUBCALL *SUBTREE,('ADD',BCBID,BCBREC),VL,MF=(E,CALLPARM)
         ST    R1,0(,R7)     CHAIN
         LH    R4,SMDEUSLN   GET USER DATA LENGTH BACK
         LA    R4,PDS2USRD-PDS2(,R4)  PLUS OVERHEAD
         ST    R4,WORKBXLE+4
         LR    R7,R1         NEXT CHAIN LINK
         B     MEMINEXT      DO NEXT MEMBER
         SPACE 1
MEMIDONE SR    R15,R15
         SR    R0,R0
         STM   R15,R0,RETCODE
         MVC   RR1CODE,0(R8) ALSO RETURN ROOT VALUE IN R1
         B     PGMEXIT       QUIT WITH
         POP   USING
         SPACE 1
RETURN12 MVICC 0,12
         SPACE 1
PGMEXIT  PGMEXIT COPYRET=(RETCODE,12) RETURN R15-R1
         SPACE 2
*---------------------------------------------------------------------*
*  FREEBUF:  RELEASE STORAGE FROM PRIOR PDS DIRECTORY READS           *
*            R8 HAS ADDRESS OF USER'S ROOT POINTER                    *
*---------------------------------------------------------------------*
         PUSH  USING
FREEBUF  STM   R14,R12,12(R13)   SAVE EVERYTHING
         ICM   R11,15,0(R8)  CLOSED OR NOT USED ?
         BZ    FREEBUFX      YES; JUST RETURN 0/0/0
         USING WORKSECT,R11
         MVC   DEBUF(18*4),0(R13)   SAVE MY SAVE AREA           GP05196
         SUBCALL *SUBTREE,('END',BCBID),VL,MF=(E,CALLPARM)
         DELETEST EPLOC==CL8'SUBTREE'
         MVC   0(18*4,R13),DEBUF   RESTORE SAVE AREA            GP05196
         FREEMAIN R,LV=WORKSIZE,A=(R11)                         GP05196
FREEBUFX XC    0(4,R8),0(R8)  CLEAR ROOT POINTER
         LM    R14,R12,12(R13)  RELOAD ALL
         BR    R14
         POP   USING
         EJECT ,
***********************************************************************
**  LOOP THROUGH ALL MEMBERS - RETURN NEXT ENTRY AFTER INPUT         **
**    R1 - ADDRESS OF PREVIOUS ENTRY OR =0                           **
**    R0 - ADDRESS OF FOUR WORD WORK AREA (BXLE)                     **
***********************************************************************
         PUSH  USING
REQLOOP  CH    R2,=H'3'      NEED FUN/ROOT/BXLE
         BL    RETURN16      INVALID PARM LIST
         LTP   R8,1,BZ=RETURN16     TEST ROOT POINTER           GP05013
         LTP   R4,2,BZ=RETURN16     TEST BXLE POINTER           GP05013
         L     R11,0(,R8)    GET WORK AREA
         USING WORKSECT,R11  DECLARE IT
         LM    R5,R8,0(R4)   LOAD POINTERS
         LTR   R5,R5         START FRESH ?
         BNZ   LOOPLEST      NO; GET NEXT SMDE
*---------------------------------------------------------------------*
*  BUILD THE BXLE SAVE AREA AND RETURN THE FIRST ENTRY                *
*---------------------------------------------------------------------*
         LA    R8,@RECORD1   GET CHAIN HEAD
         USING LEAFSECT,R8   DECLARE IT
LOOPLEST ICM   R8,15,LEAFLINK  CHAIN HEAD
         BZ    RETURN12      OOPS ?
LOOPLNXT LA    R5,LEAFSMDE   POINT TO SMDE
         USING SMDE,R5       DECLARE IT
*        TM    SMFG,SMFGALI  HAVE AN ALIAS ?
*        BNZ   LOOPLBMP      YES; IGNORE IT
         SLR   R9,R9
         ICM   R9,3,SMDENMOF GET OFFSET TO NAME SECTION
         BZ    LOOPLBMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDENAME,R9   DECLARE IT
         LH    R1,SMDENMLN
         LA    R0,SMDENMVL
         LTR   R1,R1
         BP    LOOPLOUN
LOOPLBMP ICM   R8,15,LEAFLINK  NEXT ENTRY
         BNZ   LOOPLNXT
         MVICC 0,4           SET END OF LIST
         B     PGMEXIT
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET REGISTER 15 AND RETURN                           *
*---------------------------------------------------------------------*
LOOPLOUN LR    R15,R5        RETURN SMDE
         STM   R15,R1,RETCODE  SET R15-R1 FOR RETURN
         STM   R5,R8,0(R4)   SAVE BXLE STUFF
         B     PGMEXIT       RETURN TO CALLER
         POP   USING
         SPACE 2
***********************************************************************
**  RETURN ADDRESS OF SPECIFIC MEMBER (NAME -> R0); RETURN IN R15    **
***********************************************************************
         PUSH  USING
REQFIND  CH    R2,=H'3'      MINIMUM FUN/ROOT/NAME
         BL    RETURN12      INVALID CALL
         BE    REQFINDD      DEFAULT LENGTH
         LTP   R15,3,BZ=REQFINDD  USE DEFAULT IF NO ADDRESS     GP05013
         CH    R15,=H'1024'  LENGTH DIRECTLY ?
         BNH   REQFIND8      YES
         ICM   R15,15,0(R15)  GET LENGTH FROM POINTER
         BP    REQFIND8      VALID(?)
REQFINDD LA    R15,8         SET DEFAULT AGAIN
REQFIND8 LTP   R8,1,BZ=RETURN16 ROOT ADDRESS                    GP05013
         L     R11,0(,R8)
         USING WORKSECT,R11
         LTP   R14,2,BZ=RETURN16  NAME ADDRESS                  GP05013
         ICM   R15,8,=C' '   BLANK FILL ON COMPARE
*---------------------------------------------------------------------*
*  SEARCH THROUGH SMDE CHAIN FOR MATCHING NAME                        *
*---------------------------------------------------------------------*
         ICM   R8,15,@RECORD1  HEAD OF CHAIN
         BZ    RETURN16
         USING LEAFSECT,R8
FINDSMDE LA    R5,LEAFSMDE   POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
*DEFER*  TM    SMFG,SMFGALI  HAVE AN ALIAS ?
*DEFER*  BNZ   FINDBUMP      YES; IGNORE IT
         SLR   R9,R9
         ICM   R9,3,SMDENMOF GET OFFSET TO NAME SECTION
         BZ    FINDBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDENAME,R9   DECLARE IT
         LH    R1,SMDENMLN
         LA    R0,SMDENMVL
         LTR   R1,R1
         BNP   FINDBUMP      CAN'T TEST
         STM   R14,R1,DB     SAVE COMPARE VALUES
         CLCL  R0,R14        IS THIS THE DESIRED MEMBER OR ALIAS ?
         BE    FINDFOUN      YES; WHOOPPEE
         BH    FINDBUST      NO; PASSED IT
         LM    R14,R15,DB    RESTORE COMPARE VALUES
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY NOT WANTED - GET NEXT SMDE                                   *
*---------------------------------------------------------------------*
FINDBUMP ICM   R8,15,LEAFLINK
         BNZ   FINDSMDE
FINDBUST MVICC 0,4           SET END OF LIST
         B     PGMEXIT       RETURN NOTHING
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET REGISTERS                                        *
*---------------------------------------------------------------------*
FINDFOUN CH    R2,=H'5'      CALLED WITH FIVE PARAMETERS?
         BL    FINDFOUT      NO; JUST RETURN DATA
         LTP   R4,4,BZ=FINDFOUT  IS THERE A BXLE POINTER?       GP05013
         L     R6,SMDELEN
         STM   R5,R8,0(R4)   RETURN BXLE DATA ALSO
FINDFOUT LM    R14,R1,DB     RESTORE TOO MUCH
         LR    R15,R5        RETURN SMDE
         STM   R15,R1,RETCODE  SET R15-R1 FOR RETURN
         B     PGMEXIT       RETURN R15/SMDE; R0/NAME; R1/NAMELEN
         POP   USING
         SPACE 2
***********************************************************************
**  POS: POSITION BXLE POINTERS SO SUBSEQUENT LOOP WILL PROCESS THE  **
**  REQUESTED NAME, OR THE FIRST AFTER IF IT DOESN'T EXIST.          **
**  RETURN ADDRESS OF SPECIFIC MEMBER (NAME -> R15); RETURN IN R15   **
***********************************************************************
         PUSH  USING
REQPOS   CH    R2,=H'5'      MINIMUM FUN/ROOT/NAME/LEN/BXLE
         BL    RETURN12      INVALID CALL
         LTP   R15,3,BZ=REQPOSND  USE DEFAULT IF NO ADDRESS     GP05013
         CH    R15,=H'1024'  LENGTH DIRECTLY ?
         BNH   REQPOSN8      YES
         ICM   R15,15,0(R15)  LOAD LENGTH FROM POINTER
         BP    REQPOSN8      VALID(?)
REQPOSND LA    R15,8         SET DEFAULT AGAIN
REQPOSN8 LTP   R8,1,BZ=RETURN16 ROOT ADDRESS                    GP05013
         LTP   R14,2,BZ=RETURN16  NAME ADDRESS                  GP05013
         ICM   R15,8,=C' '   BLANK FILL ON COMPARE
         LTP   R4,4,BZ=RETURN16 BXLE POINTER                    GP05013
         L     R11,0(,R8)
         USING WORKSECT,R11
*---------------------------------------------------------------------*
*  SEARCH THROUGH SMDE CHAIN FOR MATCHING NAME                        *
*---------------------------------------------------------------------*
         ICM   R8,15,@RECORD1  HEAD OF CHAIN
         BZ    RETURN16
         XC    0(16,R4),0(R4)  CLEAR BXLE POINTERS (FOR FIRST ENTRY)
         USING LEAFSECT,R8
POSNSMDE LA    R5,LEAFSMDE   POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
         L     R6,SMDELEN    GET LENGTH OF ENTRY
         SLR   R9,R9
         ICM   R9,3,SMDENMOF GET OFFSET TO NAME SECTION
         BZ    POSNBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDENAME,R9   DECLARE IT
         LH    R1,SMDENMLN
         LA    R0,SMDENMVL
         LTR   R1,R1
         BNP   POSNBUMP      CAN'T TEST
         STM   R14,R1,DB     SAVE COMPARE VALUES
         CLCL  R0,R14        IS THIS THE DESIRED MEMBER OR ALIAS ?
         BE    POSNFOUN      YES; WHOOPPEE
         BH    POSNPAST      NO; PASSED IT
         STM   R5,R8,0(R4)   SAVE POINTERS FOR (A) PRIOR ENTRY
         LM    R14,R15,DB    RESTORE COMPARE VALUES
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY NOT WANTED - GET NEXT SMDE                                   *
*---------------------------------------------------------------------*
POSNBUMP ICM   R8,15,LEAFLINK  ANOTHER BLOCK ?
         BNZ   POSNSMDE
         MVICC 0,8           SET END OF LIST
         B     PGMEXIT       RETURN NOTHING
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET REGISTERS                                        *
*---------------------------------------------------------------------*
POSNPAST MVICC 0,4           MEMBER NOT FOUND
POSNFOUN LR    R15,R5        RETURN SMDE
         ST    R15,RETCODE   SET R15 FOR RETURN
         B     PGMEXIT       RETURN R15/SMDE; R0/COND
         POP   USING
         SPACE 2
***********************************************************************
**  RETURN ADDRESS OF MAIN MEMBER AT PASSED TTRZ ; RETURN IN R15     **
***********************************************************************
         PUSH  USING
REQTTRZ  CH    R2,=H'3'      MINIMUM FUN/ROOT/NAME
         BL    RETURN12      INVALID CALL
         LTP   R8,1,BZ=RETURN16     TEST ROOT ADDRESS           GP05013
         LTP   R1,2,BZ=RETURN16     TEST TTRZ ADDRESS           GP05013
         L     R11,0(,R8)
         USING WORKSECT,R11
*---------------------------------------------------------------------*
*  SEARCH THROUGH SMDE CHAIN FOR MATCHING TTR                         *
*---------------------------------------------------------------------*
         ICM   R8,15,@RECORD1  GET CHAIN HEAD
         BZ    RETURN12
         USING LEAFSECT,R8
TTRZSMDE LA    R5,LEAFSMDE   POINT TO FIRST SMDE
         USING SMDE,R5       DECLARE IT
         L     R6,SMDELEN
         TM    SMFG,SMFGALI  HAVE AN ALIAS ?
         BNZ   TTRZBUMP      YES; IGNORE IT
         CLC   SMDEMLTK,0(R1)  MATCHES REQUEST ?
         BNE   TTRZBUMP
         SLR   R9,R9
         ICM   R9,3,SMDENMOF GET OFFSET TO NAME SECTION
         BZ    TTRZBUMP      OOPS
         AR    R9,R5         GET PMAR ADDRESS
         USING SMDENAME,R9   DECLARE IT
         LH    R1,SMDENMLN
         LA    R0,SMDENMVL
         LTR   R1,R1
         BP    TTRZFOUN      YES; WHOOPPEE
         SPACE 1
*---------------------------------------------------------------------*
*  ENTRY NOT WANTED - GET NEXT SMDE                                   *
*---------------------------------------------------------------------*
TTRZBUMP ICM   R8,15,LEAFLINK  ANOTHER BLOCK ?
         BNZ   TTRZSMDE
         MVICC 0,4           SET END OF LIST
         B     PGMEXIT       RETURN NO MATCH
         SPACE 1
*---------------------------------------------------------------------*
*  MEMBER FOUND. SET NAME FOR QUICK REFERENCE; SET REGISTERS          *
*---------------------------------------------------------------------*
TTRZFOUN LR    R15,R5        RETURN SMDE ADDRESS
         STM   R15,R1,RETCODE  SET R15-R1 FOR RETURN
         B     PGMEXIT       RETURN MATCH
**** IF THIS IS AN ALIAS, FIND MAIN MEMBER AND RETURN SMDE IN R0? ****
         POP   USING
         SPACE 2
         LTORG ,
         TITLE 'S U B D S E R V  ***  DATA AND MAPPINGS'
         SPACE 2
SAVE     DSECT ,             DYNAMIC SAVE AND WORK AREA
DB       DS    2D            CONVERSIONS, ETC.
SUBSAVE1 DS    16A           SUBROUTINE SAVE AREA
         SERVDEFS ,   1/2    EXPAND @TRACE, DBT, ETC.
ROOTPTR  DS    A             LOCAL COPY OF ROOT WORD
SAVEEND  EQU   *             END OF DYNAMIC AREA
         SPACE 2
         PUSH  PRINT
         PRINT ON,&PRTMAC
         MVSSMDE ,           ASM XF VERSION OF MACRO IGWSMDE
SMDE     DSECT ,
         DS    0A
MAXSMDE  EQU   *-SMDE        SIZE (LESS DATA AND NAME)
FEALNMLN DS    XL2           LENGTH OF NAME
FEALNAME DS    CL8           MEMBER/ALIAS NAME
FEALDATA DS    XL64          USER DATA
FEALSIZE EQU   *-SMDE
         SPACE 2
         IHAPDS PDSBLDL=NO
         POP   PRINT
         SPACE 2
LEAFSECT DSECT ,             ONE (PSEUDO) SMDE ENTRY + CHAIN
LEAFLINK DS    A             ADDRESS OF NEXT SMDE ENTRY
LEAFSMDE DS    (MAXSMDE)X'0'   SMDE MAX SIZE
LEAFNMLN DS    XL2           LENGTH OF NAME
LEAFNAME DS    CL8           MEMBER/ALIAS NAME
LEAFDATA DS    XL64          USER DATA
LEAFSIZE EQU   *-LEAFSECT
         SPACE 1
WORKSECT DSECT ,             BASE CONTROL BLOCK
@RECORD1 DS    A             ADDRESS OF FIRST RECORD
SUBTREE  DS    A             ADDRESS OF SUBTREE ROUTINE
WORKBXLE DS    3A
         READ  WORKDECB,SF,2,3,256+8,MF=L  READ DIRECTORY BLOCK
DECBSIZE EQU   *-WORKDECB
         SERVTREE PFX=BCB,KEYLEN=8,KEYOFF=LEAFNAME-LEAFSECT,           *
               RECLEN=LEAFSIZE,RECNUM=100
DEBUF    DS    CL8,XL256     DIRECTORY ENTRY
WORKSIZE EQU   *-WORKSECT
         SPACE 1
SUBDSERV CSECT ,
PATROOT  SERVTREE PFX=PTR,KEYLEN=8,KEYOFF=LEAFNAME-LEAFSECT,           *
               RECLEN=LEAFSIZE,RECNUM=100
         READ  PATDECB,SF,2,3,256+8,MF=L  READ DIRECTORY BLOCK
         SPACE 2
         DCBD  DEVD=DA,DSORG=PO
.BIGEND  END
