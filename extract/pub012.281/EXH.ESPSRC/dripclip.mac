CLIP     TITLE 'S U P E R C L I P  ***  STAND-ALONE LABEL FORMATTER'
         MACRO
&NM      TNT   &F,&O,&B,&PFX=
         GBLC  &TNTPFX
         LCLA  &I,&J
         LCLC  &N
&I       SETA  1
&J       SETA  N'&SYSLIST-2
&N       SETC  '&NM'
         AIF   ('&PFX' EQ '').NOFIX
&TNTPFX  SETC  '&PFX'
.NOFIX   ANOP
&N DC AL2(&TNTPFX&SYSLIST(&I+2)+256*(&SYSLIST(&I+1)+16*&SYSLIST(&I))-*)
&I       SETA  &I+3
&N       SETC  ''
         AIF   (&I LE &J).NOFIX
.MEND    MEND
         SPACE 2                                                 84127
         COPY  OPTIONGB                                          84127
         SPACE 1                                                 84127
         SYSPARM LIST=YES                                        84127
         SPACE 1                                                 84127
*        THIS CODE WAS PRODUCED FROM A DISASSEMBLED DECK CALLED  84127
*        'CLIP' (DISTRIBUTED BY IBM IN THE SIXTIES).  AUTHOR NOT 84127
*        KNOWN.                                                  84127
*                                                                84127
*        CHANGES BY G. POSTPISCHIL.                              84127
         EJECT ,                                                 84127
DRIPCLIP START 0             CODE STARTS AT X'1000'
LOWCORE  DS    0D ,          SET START ADDRESS FOR IPL DATA PGM
PSWRSTRT DS    D'0'          IPL/RESTART PSW
IPLCCW1  DS    D'0'          IPL CCW - FIRST
IPLCCW2  DS    D'0'          IPL CCW - SECOND
PSOEXT   DS    D'0'          OLD PSW - EXTERNAL INTERRUPT
PSOSVC   DS    D'0'          OLD PSW - SUPERVISOR CALL
PSOPGM   DS    D'0'          OLD PSW - PROGRAM CHECK
PSOMCC   DS    D'0'          OLD PSW - MACHINE CHECK
PSOIOP   DS    D'0'          OLD PSW - INPUT/OUTPUT INTERRUPTION
CSW      DS    D'0'          CHANNEL STATUS WORD
CAW      DS    F'0'          CHANNEL ADDRESS WORD
OSCVT    DS    F'0'          OS CVT REFRESH
TIMER    DS    F'0'          INTERVAL TIMER
TIMER2   DS    F'0'          UNUSED
PSWEXT   DS    D'0'          NEW PSW - EXTERNAL INTERRUPT
PSWSVC   DS    D'0'          NEW PSW - SUPERVISOR CALL
PSWPGM   DS    D'0'          NEW PSW - PROGRAM CHECK
PSWMCC   DS    D'0'          NEW PSW - MACHINE CHECK
PSWIOP   DS    D'0'          NEW PSW - INPUT/OUTPUT
LOGOUT   EQU   *            VARIABLE SIZE/LOCATION MACHINE CHECK LOGOUT
LOWLEN   EQU   *-LOWCORE     SIZE OF CORE TO BE CLEARED
         SPACE 1
         ORG   DRIPCLIP+4096  SET FOR PROGRAM ENTRY POINT
         SPACE 1
R0       EQU   0 .                 PLACE-MARK FOR STM TO SAVE ALL REGS
R1       EQU   1 .                    / MSG ADR
R2       EQU   2 .           UCB ADDR / MSG LEN / SCAN PTR
R3       EQU   3 .            // SCAN PTR
R4       EQU   4 .           CLIP MSG ADDR
R5       EQU   5 .           SCAN PTR TO END OF PARM
R6       EQU   6 .           I/O RETRY CNTR
R7       EQU   7 .           CSW PTR ...
R8       EQU   8 .                 WORK REG
R9       EQU   9 .           BAL RETURN
R10      EQU   10 .             RESERVED
R11      EQU   11 .          THIRD  BASE REG                    *GPP*
R12      EQU   12 .          SECOND  BASE REGISTER
R13      EQU   13 .          PRIMARY BASE REGISTER
R14      EQU   14 .              UNUSED
R15      EQU   15 .          BAL RETURN
         SPACE 1
DC       EQU   X'80'         CCW - DATA CHAINING BIT
CC       EQU   X'40'         CCW - COMMAND CHAINING
SLI      EQU   X'20'         CCW - SUPPRESS LENGTH INDICATION
NOR      EQU   X'10'         CCW - SUPPRESS DATA TRANSFER
         EJECT
STARTUP  BALR  R13,0
         USING *,R13,R12,R11                                    *GPP*
         LM    R11,R12,BASICS                                   *GPP*
         USING LOWCORE,R0     DECLARE ADDRESSABLE CORE
         MVC   PSWIOP,LPSCGET    SET I/O INTERRUPT PSW
         MVC   PSWEXT,LPSNEW    SET EXTERNAL INTERRUPT PSW
         MVC   PSWRSTRT,LPSIGET  SET RESTART PSW
         MVC   PSWPGM,LPSCHK  SET PGM CHECK STOPPER             *GPP*
         MVI   CONUCB,UCBTCO  SET CONSOLE FLAG                  *GPP*
         CLI   TIMER2+2,C'C' SPECIAL CONSOLE ADDRESS INTERFACE ?*GPP*
         BNE   CONGETW       NO, WAIT FOR INTERRUPT             *GPP*
         MVC   CONUCB+2(2),TIMER2  COPY CONSOLE ADDRESS         *GPP*
         MVC   CONUCB+1(1),TIMER2+3  COPY CONSOLE DEVICE TYPE   *GPP*
         B     IPLGET        HAVE CONSOLE ADDRESS               *GPP*
         SPACE 1                                                *GPP*
CONGETW  LPSW  LPSWAIT        WAIT FOR INTERRUPT TO GET CONSOLE ADDR
CONGET   MVC   CONUCB+2(2),PSOIOP+2  GET INTERRUPTING UNIT'S ADDRESS
         AIF   ('&LOCAL' NE 'CCSI').DTS1                         84127
         MVI   CONUCB+1,8    SET 3270 CRT                        84127
         CLI   CONUCB+2,0    BYTE MULTIPLEXOR CHANNEL ?          84127
         BNE   IPLGET        YES; SHOULD BE A SPARE 3270 ?       84127
         CLI   CONUCB+3,X'19'   3066 ?                           84127
         BNE   *+12          NO                                  84127
         MVI   CONUCB+1,X'04'   SET TYPE                         84127
         CLI   CONUCB+3,X'08'  4341 20-LINE CRT ?                84127
         BNE   *+8           NO                                  84127
         MVI   CONUCB+1,X'0C'  SET SPECIAL 3270 TYPE             84127
.DTS1    SPACE 1                                                 84127
IPLGET   SLR   R2,R2                                             84127
         IC    R2,CONUCB+1   GET CONSOLE SUB-TYPE                84127
         L     R3,CONPTRS(R2)  GET LAST LINE ADDRESS             84127
         ST    R3,CRTLINL@   SET ADDRESS OF LAST OUTPUT LINE     84127
         SRL   R2,2          CONVERT TO INDEX                    84127
         LA    R3,CONSIZES(R2)  DISPLAY AREA SIZE -1 LINE        84127
         MVC   NUMCONLN+1(1),0(R3)  MOVE SCREEN DEPTH            84127
         LA    R2,CONUCB     POINT TO CONSOLE ADDRESS            84127
         USING UCB,R2
         LA    R3,CCCIPL     POINT TO CONSOLE READ/WRITE CCW
         BAL   R9,CALLIO     WRITE TO THE CONSOLE
         LA    R3,CCCIPR     SET ATTN READ CCW
         BAL   R9,CALLIO     READ THE REPLY
         TM    UCBCSW+4,X'01'  CANCEL SIGNALLED ?
         MVI   UCBCSW+4,X'00'  RESET FLAG
         BO    IPLGET        YES - RE-ISSUE
         OC    SAVE23(4),BLANK6  MAKE UPPER CASE
         CLC   DCHELP,SAVE23  HELP REQUEST ?                    *GPP*
         BNE   IPLNHEL       NO                                 *GPP*
IPLBADH  LA    R2,CONUCB     POINT TO CONSOLE                   *GPP*
         LA    R3,CCCHELP    SET HELP CCW                       *GPP*
         LA    R9,IPLGET     SET FOR INPUT REQUEST              *GPP*
         B     CALLIO        WRITE THE MESSAGE                  *GPP*
IPLNHEL  CLI   SAVE23,C' '   ENTER ONLY ?                       *GPP*
         BH    IPLNHEL2      NO                                 *GPP*
         MVC   INPUCB(4),CONUCB   YES - COPY CONSOLE UCB        *GPP*
         B     GETNEW        PROCEED WITH INPUT PROCESSING      *GPP*
IPLNHEL2 LA    R2,SAVE23+1   POINT TO THE UCB ADDRESS IN INPUT
         BAL   R9,CONHEX     CHECK AND CONVERT TO HEX
         B     IPLBAD        INVALID - COMPLAIN
         STH   R1,INPUCB+2   SAVE INPUT ADDRESS
         LA    R1,UCBTCO     SET CONSOLE DEVICE                 *GPP*
         CLC   INPUCB+2(2),CONUCB+2  INPUT FROM CONSOLE ?        84127
         BNE   IPLNOTAC      NO                                  84127
         MVC   INPUCB(2),CONUCB  COPY TYPE                       84127
         B     IPLTYPE       GO TO SET TYPE                      84127
IPLNOTAC LA    R1,UCBTRD     PRESET FOR READER 2540...          *GPP*
         CLI   SAVE23,C'R'   READER ?                           *GPP*
         BE    IPLTYPE       YES, SET IT                        *GPP*
         LA    R1,UCBTCO     PRESET FOR CONSOLE                 *GPP*
         CLI   SAVE23,C'C'   CONSOLE ?                          *GPP*
         BE    IPLTYPE       YES                                *GPP*
         CLI   SAVE23,C'T'   TAPE ?                             *GPP*
         BNE   IPLBAD        NO - INVALID SPECIFICATION         *GPP*
         MVI   CCCINR,X'02'  MAKE CCW INTO PLAIN READ           *GPP*
         LA    R1,UCBTTA     SET TAPE TYPE                      *GPP*
IPLTYPE  STC   R1,INPUCB     SET INPUT DEVICE TYPE              *GPP*
         AIF   ('&LOCAL' NE 'CCSI').DTS2                         84135
         MVI   INPUCB+1,8    SET 3270 CRT                        84135
         CLI   INPUCB+2,0    BYTE MULTIPLEXOR CHANNEL ?          84135
         BNE   GETNEW        YES; SHOULD BE A SPARE 3270 ?       84135
         CLI   INPUCB+3,X'19'   3066 ?                           84135
         BNE   *+12          NO                                  84135
         MVI   INPUCB+1,X'04'   SET TYPE                         84135
         CLI   INPUCB+3,X'08'  4341 20-LINE CRT ?                84135
         BNE   *+8           NO                                  84135
         MVI   INPUCB+1,X'0C'  SET SPECIAL 3270 TYPE             84135
.DTS2    SPACE 1                                                 84135
GETNEW   XC    COMDFG(1),COMDFG
         OC    CONUCB+2(2),CONUCB+2 EXT INTERRUPT PRIOR TO I/O ?*GPP*
         BZ    CONGETW       YES - WAIT FOR I/O CONSOLE INTRPT  *GPP*
         MVI   LPSWAIT,X'01'
         MVC   VOLBUF(80),VOLPAT
         MVI   LABUCB,UCBTDA
         MVI   SEEKAD+1,X'00'
GETOPT   LA    R3,CCCINR
         LA    R2,INPUCB
         MVI   BUFFER,C' '   CLEAR AREA
         MVC   BUFFER+1(39),BUFFER
         BAL   R9,CALLIO     GET MORE INPUT
         OC    BUFFER(40),BLANK40  MAKE ENTIRE REPLY UPPER CASE *GPP*
         TM    UCBCSW+4,X'01'  CANCELLED ?
         MVI   UCBCSW+4,X'00'  RESET FLAG
         BZ    INPRNT        NO - PROCEED
         CLC   INPUCB+2(2),CONUCB+2  DID INPUT COME FROM CONSOLE ?*GPP*
         BE    GETOPT        YES; USER KNOWS IT
         B     GETWAIT
INPRNT   CLC   INPUCB+2(2),CONUCB+2 DID INPUT COME FROM CONSOLE ? *GPP*
         BE    INPCHK        YES; USER HAS COPY
         LA    R3,BUFFER     OTHERWISE ECHO INPUT ON CONSOLE
         LA    R2,1
INPLEN   LA    R3,1(,R3)
         CLI   0(R3),C' '
         LA    R2,1(,R2)     INCREASE INPUT LENGTH
         BNE   INPLEN
         STC   R2,CCCIPW+7   SET LENGTH IN CCW
         LA    R3,CCCIPW     PRINT COPY OF INPUT OPTIONS
         LA    R2,CONUCB
         BAL   R9,CALLIO
INPCHK   LA    R5,BUFFER
         BAL   R9,PARMCASE
         CLC   BUFFER(6),DCLABL
         BE    DOLABL
         CLC   BUFFER(5),DCDISK
         BE    DODISK
         CLC   BUFFER(5),DCDRUM
         BE    DODISK
         CLC   BUFFER(6),DCDCEL
         BE    DODCEL
         CLC   BUFFER(5),DCTAPE
         BE    DOTAPE
         CLC   DCHELP,BUFFER   HELP REQUEST ?                   *GPP*
         BNE   BADCOM        NO - BAD COMMAND                   *GPP*
         LA    R2,CONUCB     GET CONSOLE                        *GPP*
         LA    R3,CCIHELP    GET HELP MESSAGES                  *GPP*
         BAL   R9,CALLIO     PUT OUT                            *GPP*
         B     GETOPT        AND GET NEXT INPUT                 *GPP*
BADCOM   LA    R4,IBCL02                                        *GPP*
         BAL   R15,PUTMSG
GETWAIT  LA    R10,GETWAIT2  SET EXIT FROM IN-LINE ROUTINE      *GPP*
         LA    R9,GETOPT     SET RETURN FROM WAIT               *GPP*
         CLC   CONUCB+2(2),INPUCB+2  INPUT FROM CONSOLE ?       *GPP*
         BER   R9            YES - SKIP EXTERNAL WAIT           *GPP*
CONWAIT  STM   R0,R15,WAITSAVE   SAVE REGS                      *GPP*
         OC    CRTLINE,CRTLINE   ANY MESSAGES PENDING ?         *GPP*
         BZ    GETWAIT1                NO - JUST RETURN         *GPP*
         LA    R2,CONUCB     POINT TO CONSOLE UCB               *GPP*
         LA    R3,CCCWRE     FORCE SCREEN WRITE                 *GPP*
         BAL   R9,CALLIO     WRITE THE SCREEN                   *GPP*
GETWAIT1 LM    R0,R15,WAITSAVE   RESTORE REGS                   *GPP*
         BR    R10               RETURN TO CALLLER              *GPP*
GETWAIT2 ST    R9,PSWEXT+4   SET RETURN FROM EXTERNAL INTERRUPT *GPP*
         LA    R1,*          SET RETURN FOR IGNORED INTERRUPTS
         ST    R1,PSWIOP+4
         LPSW  LPSWAIT
DODISK   LA    R3,BUFFER+8
         LA    R2,BUFFER+5
         MVI   LABUCB,UCBTDA
HAVEAD   TM    COMDFG,X'0F'
         BO    DUPADR
         ST    R3,SAVE23
         BAL   R9,CONHEX
         B     BADHEX
         STH   R1,LABUCB+2
         L     R3,SAVE23
         BAL   R15,BLKCHK
         OI    COMDFG,X'0F'
HAVEAL   CLI   COMDFG,X'FF'
         BNE   GETOPT
         B     GODOIT
DOTAPE   MVI   LABUCB,UCBTTA
         LA    R3,BUFFER+8
         LA    R2,BUFFER+5
         B     HAVEAD
DODCEL   LA    R3,BUFFER+9
         LA    R2,BUFFER+6
         MVI   LABUCB,X'00'
         B     HAVEAD
DOLABL   LA    R3,BUFFER+6
         TM    COMDFG,X'F0'
         BO    DUPADR
         BAL   R15,SUBPRM
         OI    COMDFG,X'F0'
         B     HAVEAL
BLKCHK   CLI   0(R3),C' '
         BNE   COMCHK
         BR    R15
COMCHK   CLI   0(R3),C','
         LA    R3,1(,R3)
         BE    SUBPRM
         B     BADPRM
SUBPRM   LR    R5,R3
         BAL   R9,PARMCASE
         CLC   0(3,R3),DCSER
         BE    DOSER
         CLC   0(4,R3),DCNAME
         BE    DONAME
         CLC   0(3,R3),DCSEC
         BE    DOSEC
         CLC   0(4,R3),DCMODE
         BE    DOMODE
         CLC   0(3,R3),DCDEN
         BE    DODEN
         CLC   0(4,R3),DCDUAL
         BE    DODUAL
         CLC   0(3,R3),DCBIN
         BE    DOBIN
         CLC   0(7,R3),DCNLAB
         BE    DONLAB
         CLC   0(7,R3),DCDISP
         BE    DODISP
         CLI   0(R3),C' '
         BE    HAVEAL
         B     BADPRM
DOSER    LA    R3,4(,R3)
         LR    R8,R3
         LA    R2,7
         SR    R1,R1
SERLEN   CLI   0(R3),C','
         BE    SERANY
         LA    R3,1(,R3)
         LA    R1,1(,R1)
         BCT   R2,SERLEN
         BCT   R1,SERBAK
SERBAK   BCT   R3,SEREND
SEREND   CLI   0(R3),C' '
         BE    SERANY
         B     BADSER
SERANY   LTR   R1,R1
         BZ    BADSER
         BCT   R1,SERLON
SERLON   STC   R1,SERMVC+1
         MVC   VOLSER(6),BLANK6
SERMVC   MVC   VOLSER(6),0(R8)
         B     BLKCHK
DONLAB   MVI   CCTRIT,X'1F'
         MVI   CCTWTM,X'03'
         MVI   LABLSW+1,X'F0'
         BR    R15
DODISP   XC    VOLNEW,VOLNEW
         MVI   CCTRIT,X'02'
         MVI   CCTWTM,X'03'
         XC    VOLBUF(80),VOLBUF
         MVI   VOLBUF+4,C' '
         MVC   VOLBUF+5(5),VOLBUF+4
         BR    R15
DONAME   CLI   5(R3),C''''
         BE    NAMCHK
         B     BADNAM
NAMCHK   LA    R3,6(,R3)
         LA    R2,11
         SR    R1,R1
         LR    R8,R3
NAMEND   CLI   0(R3),C''''
         LA    R3,1(,R3)
         BE    NAMANY
         LA    R1,1(,R1)
         BCT   R2,NAMEND
         B     BADNAM
NAMANY   LTR   R1,R1
         BZ    BLKCHK
         BCT   R1,*+4
         STC   R1,NAMMVC+1
NAMMVC   MVC   VOLOWN(10),0(R8)
         B     BLKCHK
DOSEC    TM    4(R3),X'0E'
         BM    BADSEC
         TM    4(R3),X'F0'
         BO    SECMVC
         B     BADSEC
SECMVC   MVC   VOLSEC(1),4(R3)
         LA    R3,5(,R3)
         B     BLKCHK
DOMODE   MVI   4(R3),X'F0'
         LA    R2,4(,R3)
         LR    R4,R3
         BAL   R9,CONHEX
         B     BADMOD
         STC   R1,CCTDEN
         OI    CCTDEN,X'03'
         LR    R3,R4
         LA    R3,7(,R3)
         B     BLKCHK
DODEN    CLI   4(R3),C'2'    DENSITY = 200 BPI ?
         BE    DODEN2
         CLI   4(R3),C'5'    DENSITY = 556 ?
         BE    DODEN5
         CLI   4(R3),C'8'    DENSITY = 800 BPI ?
         BE    DODEN8
         CLC   4(2,R3),DCC16  DENSITY = 1600 BPI ?
         BE    DODEN16
         CLC   4(2,R3),DCC62   DENSITY = 6250 ?                 *GPP*
         BNE   BADDEN
         MVI   CCTDEN,X'D3'  SET 6250                           *GPP*
         B     DENINC2       AND SKIP TO NEXT                   *GPP*
DODEN2   MVI   CCTDEN,X'2B'
         B     DENINC
DODEN5   MVI   CCTDEN,X'6B'
         B     DENINC
DODEN8   CLI   CCTDEN,X'CB'
         BE    DENINC
         MVI   CCTDEN,X'AB'
         B     DENINC
DODEN16  MVI   CCTDEN,X'C3'
DENINC2  LA    R3,1(,R3)                                         *GPP*
DENINC   LA    R3,5(,R3)
         B     BLKCHK
DODUAL   CLI   CCTDEN,X'C3'
         BE    DUALUP
         MVI   CCTDEN,X'CB'
DUALUP   LA    R3,4(,R3)
         B     BLKCHK
DOBIN    MVI   3(R3),X'F0'
         MVI   2(R3),X'F0'
         LA    R2,2(,R3)
         LR    R4,R3
         BAL   R9,CONHEX
         B     BADBIN
         STC   R1,SEEKAD+1
         LR    R3,R4
         LA    R3,5(,R3)
         B     BLKCHK
GODOIT   LA    R2,LABUCB
         CLI   LABUCB,UCBTDA
         BH    GOTAPE
         LA    R3,CCDSEK
         BAL   R9,CALLIO
         MVC   BUFER2(7),DCOLD#
         BAL   R15,FORMOLD
         MVI   CCDRDW,X'05'
         MVI   CCDRDW+4,CC   SET COMMAND CHAINING
         BAL   R9,FORMCHG
         BAL   R9,CALLIO
         MVI   CCDRDW,X'06'
         MVI   CCDRDW+4,X'00'
FORMNEW  MVC   BUFER2(7),DCNEW#
         BAL   R15,FORMOLD
         MVC   PSWEXT,LPSNUW
         MVI   CCTDEN,X'2B'
         MVI   CCTWTM,X'1F'
         MVI   CCTRIT,X'01'
         MVI   LABLSW+1,X'00'
         XC    VOLNEW,VOLNEW
         CLC   CONUCB+2(2),INPUCB+2   INPUT FROM CONSOLE ?      *GPP*
         BE    GETNEW        YES - GET A NEW REQUEST            *GPP*
         BAL   R10,CONWAIT   ELSE FORCE 3270 MESSAGES OUT       *GPP*
         MVC   PSWIOP,LPSWAIT
WAITER   LPSW  LPSWAIT
GOTAPE   LA    R3,CCTREW
         BAL   R9,CALLIO
         MVC   BUFFER(80),VOLBUF
         BAL   R9,FORMCHG
         LA    R3,CCTDEN
         BAL   R9,CALLIO
         LA    R3,CCTWTM
         BAL   R9,CALLIO
         B     FORMNEW
FORMCHG  CLC   VOLSER(6),ZERO10
         BE    FORMVOL
         MVC   BUFFER+4(6),VOLSER
FORMVOL  CLC   VOLOWN(10),ZERO10
         BE    FORMOWN
         MVC   BUFFRE+1(10),VOLOWN
FORMOWN  CLI   VOLSEC,X'00'
         BE    FORMRET
         MVC   BUFFER+10(1),VOLSEC
FORMRET  BR    R9
FORMOLD  STM   R2,R3,SAVE23
         MVI   BUFER2+7,C' '
         MVC   BUFER2+8(32),BUFER2+7
         MVC   BUFER2+7(7),DCNLAB
LABLSW   NOP   LABLSK        IN-CORE LABEL/NOLABEL SWITCH
         MVC   BUFER2+7(4),DCSER#
         MVC   BUFER2+11(6),BUFFER+4
         MVC   BUFER2+17(6),DCNAM#
         OC    BUFER2+23(10),BUFFRE+1
         MVC   BUFER2+33(5),DCSEC#
         MVC   BUFER2+38(1),BUFFER+10
         OI    BUFER2+38,X'F0'
LABLSK   LA    R2,CONUCB
         LA    R3,CCCMSW
         BAL   R9,CALLIO
         LM    R2,R3,SAVE23
         BR    R15
PARMCASE CLI   0(R5),C'='
         BER   R9                                                84127
         CLI   0(R5),C' '
         BER   R9                                                84127
         CLI   0(R5),C','
         BER   R9                                                84127
         OI    0(R5),C' '
         LA    R5,1(,R5)
         B     PARMCASE
IPLBAD   LA    R4,IBCL01
         BAL   R15,PUTMSG
         B     IPLBADH       ALSO GIVE HELP MESSAGE             *GPP*
DUPADR   LA    R4,IBCL03
         BAL   R15,PUTMSG
         B     CLRVOL
BADHEX   LA    R4,IBCL04
         BAL   R15,PUTMSG
         B     GETWAIT
BADDEN   LA    R4,IBCL08
         BAL   R15,PUTMSG
         B     GETWAIT
BADBIN   LA    R4,IBCL11
         BAL   R15,PUTMSG
         B     GETWAIT
BADMOD   LA    R4,IBCL07
         BAL   R15,PUTMSG
         B     GETWAIT
BADSEC   LA    R4,IBCL09
         BAL   R15,PUTMSG
         B     CLRVOL
BADNAM   LA    R4,IBCL06
         BAL   R15,PUTMSG
         B     CLRVOL
BADSER   LA    R4,IBCL13
         BAL   R15,PUTMSG
         B     CLRVOL
BADPRM   LA    R4,IBCL05
         BAL   R15,PUTMSG
         CLC   BUFFER(6),DCLABL
         BNE   GETWAIT
CLRVOL   XC    VOLNEW,VOLNEW
         B     GETWAIT
CLRJOB   BAL   R9,FORMER
         LA    R4,IBCL10
         BAL   R15,PUTMSG
         XC    COMDFG(1),COMDFG
         B     CLRVOL
PUTMSG   STH   R4,CCCERW+2
         LA    R3,CCCERW
         LA    R2,CONUCB
         BAL   R9,CALLIO
         BR    R15
CCCIPL   CCW   X'01',INPMSG,0,L'INPMSG
CCCIPW   CCW   X'09',BUFFER,0,10
CCCMSW   CCW   X'09',BUFER2,0,40
CCCIPR   CCW   X'0A',SAVE23,0,4
CCCINR   CCW   X'0A',BUFFER,SLI,40
CCCERW   CCW   X'09',IBCL01,0,L'IBCL01
CCCWRE   CCW   X'F1',BLANK40,SLI,1  FORCE PAGE WRITE            *GPP*
CCCHELP  CCW   X'09',IPLHELP,SLI,L'IPLHELP  WRITE HELP MESSAGE  *GPP*
CCIHELP  CCW   X'09',HELP01,CC+SLI,L'HELP01   HELP MESSAGE      *GPP*
         CCW   X'09',HELP02,CC+SLI,L'HELP02   HELP MESSAGE      *GPP*
         CCW   X'09',HELP03,CC+SLI,L'HELP03   HELP MESSAGE      *GPP*
         CCW   X'09',HELP04,CC+SLI,L'HELP04   HELP MESSAGE      *GPP*
         CCW   X'09',HELP05,CC+SLI,L'HELP05   HELP MESSAGE      *GPP*
         CCW   X'09',HELP06,CC+SLI,L'HELP06   HELP MESSAGE      *GPP*
         CCW   X'09',HELP07,CC+SLI,L'HELP07   HELP MESSAGE      *GPP*
         CCW   X'09',HELP08,CC+SLI,L'HELP08   HELP MESSAGE      *GPP*
         CCW   X'09',HELP09,CC+SLI,L'HELP09   HELP MESSAGE      *GPP*
         CCW   X'09',HELP10,CC+SLI,L'HELP10   HELP MESSAGE      *GPP*
         CCW   X'09',HELP11,CC+SLI,L'HELP11   HELP MESSAGE      *GPP*
         CCW   X'09',HELP12,CC+SLI,L'HELP12   HELP MESSAGE      *GPP*
         CCW   X'09',HELP13,CC+SLI,L'HELP13   HELP MESSAGE      *GPP*
         CCW   X'09',HELP14,SLI,L'HELP14   HELP MESSAGE         *GPP*
CCDSEK   CCW   X'07',SEEKAD,CC,6   SEEK
         CCW   X'31',SEEKAD+2,CC,5  SEARCH
         CCW   8,*-8,0,0
CCDRDW   CCW   X'06',BUFFER,0,80
         CCW   X'31',SEEKAD+2,CC,5  SEARCH AGAIN
         CCW   8,*-8,0,0
         CCW   X'06',BUFFER,NOR,80  READ VERIFY
CCTWTM   CCW   X'1F',0,CC+SLI,1
CCTREW   CCW   X'07',0,SLI,1
CCTDEN   CCW   X'2B',0,CC+SLI,1
CCTRIT   CCW   X'01',BUFFER,SLI,80
SEEKAD   DC    0XL7'0',XL4'0'   SEEK/SEARCH ADDRESS    BBCC
TRAKAD   DC    X'0000'                                 HH
         DC    X'03'          OS STANDARD VOL1 ADDRESS R=3
VOLBUF   DC    CL80'VOL1 CLIP 0                              CLIP/360'
VOLPAT   DC    CL80'VOL1 CLIP 0                              CLIP/360'
         DS    0F            DELETE LATER
BUFFER   DC    0CL80' ',CL40' '
BUFFRE   DC    XL40'0'
SAVE23   DC    2F'0'
LPSCGET  DC    0D'0',X'00040000',A(CONGET)  INITIAL CONSOLE INTRPT
LPSNEW   DC    X'00040000',A(GETNEW)  START A NEW REQUEST
LPSWAIT  DC    X'FF060000',A(WAITER)  WAIT FOR I/O OR EXTERNAL
LPSNUW   DC    X'00000000',A(GETNEW)  GET A BRAND NEW REQUEST
LPSIGET  DC    X'00000000',A(IPLGET)  GET CONTROL INPUT ADDRESS
LPSCHK   DC    X'00020000',X'00FFFF00'  WAIT ON PROGRAM CHECK   *GPP*
BASICS   DC    A(STARTUP+8194,STARTUP+4098)                     *GPP*
BLANK40  DC    0CL40' ',CL34' '  40 BLANKS WITH 6 BELOW         *GPP*
BLANK6   DC    CL6' '        BLANKS
         DS    0D            DELETE LATER
BUFER2   DC    XL40'0'
COMDFG   DC    X'0'          0F - HAVE O/P ADDR / F0 - HAVE REQUEST
VOLNEW   DS    0XL17         TOTAL INPUT VOLSER/OWNER/SECURITY
VOLSER   DC    XL6'0'
VOLOWN   DC    XL10'0'
VOLSEC   DC    2X'0'
ZERO10   DC    XL10'0'
INPMSG   DC    C'CLIP INPUT='
IBCL01   DC    C'CL01B  DEVICE ADDRESS UNACCEPTABLE'
IBCL02   DC    C'CL02A  CONTROL TYPE UNACCEPTABLE  '
IBCL03   DC    C'CL03A  DUPLICATE CONTROL TYPE     '
IBCL04   DC    C'CL04A  INVALID DEVICE ADDRESS     '
IBCL05   DC    C'CL05A  INVALID PARAMETER          '
IBCL06   DC    C'CL06A  NAME UNACCEPTABLE          '
IBCL07   DC    C'CL07A  MODE UNACCEPTABLE          '
IBCL08   DC    C'CL08A  DENSITY UNACCEPTABLE       '
IBCL09   DC    C'CL09A SECURITY CODE UNACCEPTABLE  '
IBCL10   DC    C'CL10C  I/O ERROR  JOB TERMINATED  '
IBCL11   DC    C'CL11B  BIN UNACCEPTABLE           '
IBCL13   DC    C'CL13A  SER UNACCEPTABLE           '
IPLHELP  DC    C'REPLY IS XYYY ;  X IS T/TAPE, C/CONSOLE, R/RDR; YYY IS*
                THE DEVICE ADDRESS'                             *GPP*
HELP01   DC    C'TWO INPUT RECORDS MUST BE SUPPLIED FOR EACH OPERATION *
                :'           HELP MESSAGES                      *GPP*
HELP02   DC    C'THE MAJOR INPUT SPECIFIES DEVICE TYPE=ADDRESS' *GPP*
HELP03   DC    C'  CHOOSE ONE :  DISK=  DRUM=  DCELL=  TAPE='   *GPP*
HELP04   DC    C' DISK/DRUM/DATACELL AND LABELLED TAPE REQUIRE :' *GPP*
HELP05   DC    C'  LABEL=SER=VOLSER,NAME=''OWNERID'''           *GPP*
HELP06   DC    C' DATACELL ALSO REQUIRES ,BIN=N'                *GPP*
HELP07   DC    C' TAPE REQUIRES LABEL/DENSITY/MODE :'           *GPP*
HELP08  DC C'  DUAL-DENSITY DRIVE SPECIFY DUAL,DEN=  8, 16 OR 62' AMS*
HELP09   DC    C'  7-TRACK REQUIRES DEN= 2, 5 OR 8, AND MODE=XX,' *GPP*
HELP10 DC C'   MODE SPECIFIES HEX CONVERT/TRANSLATE/PARITY OPTION' AMS*
HELP11   DC  C'  UNLABELLED TAPE REQUIRES LABEL=NOLABEL IN PLACE' *GPP*
HELP12   DC    C'      OF SER= AND NAME='                       *GPP*
HELP13   DC    C' A LABELLED VOLUME MAY BE PASSWORD PROTECTED BY' *GPP*
HELP14 DC   C'  SPECIFYING LABEL=SER=VOLSER,NAME=''OWNER'',SEC=1' *GPP*
SAVER1   DC    16F'0'        SAVE AREA
SAVER2   DC    16F'0'        SAVE AREA
SAVER3   DC    16F'0'        SAVE AREA
SAVER4   DC    16F'0'        SAVE AREA
LABUCB   DC    8F'0'         UNIT CONTROL BLOCK
INPUCB   DC    8F'0'         UNIT CONTROL BLOCK
WAITSAVE DC    16F'0'        FORCED CONSOLE WRITE - SAVE AREA   *GPP*
CONUCB   DC    8F'0'         UNIT CONTROL BLOCK
         DC    3F'0'         DELETE LATER ?????
CONSIZES DC    AL1(22,33,22,18)  CONSOLE SIZES (DISP.LINES-1)    84127
A01B08   DC    0D'0',X'00060000',X'0000EEEE'  WAIT STATE CODE
A01B10   DC    0D'0',X'01040000',A(0)   RESTART PSW
A01B18   DC    0D'0',X'01060000',X'00001111'  WAIT STATE PSW
A01B20   DC    0D'0',X'01040000',A(ATTNWAIT)                    *GPP*
A01B28   DC    0D'0',X'01040000',A(A01D72)
A01B30   DC    F'4096'
A01B34   DC    A(IBC201)
A01B38   DC    7F'0'         PSW SAVE AREA
PUTLIN   STM   R0,R15,SAVER2
         ST    R1,CCCIOE+4
         ST    R2,CCCIOE
         MVI   CCCIOE,X'09'
         MVI   CCCIOE+4,SLI
         LM    R2,R3,ADCONS
         BAL   R9,CALLIO
         BAL   R10,CONWAIT   FORCE BUFFER WRITE FOR 3270        *GPP*
         LM    R0,R15,SAVER2
         BR    R15
ADCONS   DC    A(CONUCB,CCCIOE) LM DATA FOR CONSOLE ERROR MSG WRITE
CCCIOE   CCW   X'09',PRTMSG,SLI,60
FORMER   STM   R0,R15,SAVER3
         L     R10,A01B30
         MVI   IOSWRK,C' '
         MVC   IOSWRK+1(35),IOSWRK
         UNPK  IOSWRK(5),UCBCUU(3)   SHOW THE UNIT ADDRESS
         UNPK  IOSWRK+4(5),UCBCSW+4(3)
         UNPK  IOSWRK+8(13),UCBSEN(7)
         CLI   UCBTYP,X'05'
         BH    A01BC8
         L     R4,UCBCAW
         LTR   R4,R4
         BZ    A01BC8
         L     R4,0(,R4)
         UNPK  IOSWRK+24(9),2(5,R4)
A01BC8   OC    UCBCSW(4),UCBCSW
         BNZ   A01BDA
         L     R4,UCBCAW
         B     A01BE2
A01BDA   L     R4,UCBCSW
         S     R4,DCF8
A01BE2   UNPK  IOSWRK+20(3),0(2,R4)
         TR    IOSWRK(32),HEXTRT-C'0'
         L     R4,A01B34
         AR    R4,R1
         MVC   PRTMSG(24),0(R4)
         MVC   PRTMSG+26(3),IOSWRK+1
         MVC   PRTMSG+30(2),IOSWRK+20
         MVC   PRTMSG+33(4),IOSWRK+4
         MVC   PRTMSG+38(12),IOSWRK+8
         MVC   PRTMSG+52(8),IOSWRK+24
         LM    R0,R15,SAVER3
         LA    R1,60
         STM   R0,R15,SAVER3
         L     R10,A01B30
         LA    R2,PRTMSG
         BAL   R15,PUTLIN
         MVI   PRTMSG,C' '
         MVC   PRTMSG+1(131),PRTMSG
         LM    R0,R15,SAVER3
         BR    R9
PRTMSG   DC    132C' '       PRINT LINE
CALLIO   STM   R0,R15,SAVER1
         CLI   UCBFLG,8      IS THIS A 3270 ?                   *GPP*
         BE    CONSIO        YES - SPECIAL                      *GPP*
         CLI   UCBFLG,12     4341 20-LINE 3270 CONSOLE ?         84127
         BE    CONSIO        YES; SHARE SOME OF IT               84127
         CLI   UCBFLG,4      IS THIS A 3066 ?                   *GPP*
         BE    CON6IO        YES - SPECIAL                      *GPP*
         TM    0(R3),X'F0'   IS IT A CRT PSEUDO-OPERATION ?     *GPP*
         BO    CALLEX        YES - IGNORE IT                    *GPP*
         B     CALLIO2       ELSE PROCESS                       *GPP*
         SPACE 1                                                *GPP*
CONSIO   CLI   0(R3),X'F0'   PSEUDO-OPERATION ?                 *GPP*
         BE    CRTCLEAR      YES - CLEAR SCREEN REQUEST         *GPP*
         BH    CRTRITE       YES - FORCED PAGE OUTPUT           *GPP*
         TM    0(R3),3       HAVE WE TRANSLATED CCWS YET ?      *GPP*
         BL    CONSIO2       NOT YET - DO IT                    *GPP*
         TM    0(R3),7       IS IT IN BYPASS RANGE ? (3-6)      *GPP*
         BL    CALLIO2       YES - LET I/O HANDLER HAVE IT      *GPP*
CONSIO2  TM    0(R3),1       READ OR WRITE REQUEST ?            *GPP*
         BZ    CRTREAD       READ - DO IT                       *GPP*
CRTRITE  L     R7,CRTLIN@    POINT TO FIRST SCREEN LINE         *GPP*
CRTLIN#  LH    R8,NUMCONLN   GET NUMBER OF LINES TO MOVE         84127
CRTWR1   MVC   0(L'CRTLIN1,R7),CRTLIN2-CRTLIN1(R7) MOVE A LINE  *GPP*
         LA    R7,CRTLIN2-CRTLIN1(,R7)  NEXT LINE               *GPP*
         BCT   R8,CRTWR1     DO IT                              *GPP*
         L     R15,CRTLINL@  GET ADDRESS OF CURRENT LINE        *GPP*
         MVI   0(R15),C' '   CLEAR CURRENT LINE                 *GPP*
         MVC   1(L'CRTLINL-1,R15),0(R15)                        *GPP*
         LM    R7,R8,0(R3)   GET CCW PARMS                      *GPP*
         LA    R7,0(,R7)     CLEAR HIGH BYTE                    *GPP*
         LA    R8,0(,R8)                                        *GPP*
         SH    R8,DCH1       LESS ONE FOR EXECUTE               *GPP*
         BM    CRTWR9        IGNORE IF ZERO LENGTH              *GPP*
         CH    R8,CRTMVL+2   LONGER THAN MAX ?                  *GPP*
         BNH   *+8           NO                                 *GPP*
CRTMVL   LA    R8,L'CRTLIN1-1  SET FOR MAX                      *GPP*
         L     R15,CRTLINL@   GET ADDRESS OF CURRENT LINE       *GPP*
         EX    R8,CRTMVC     MOVE TO SCREEN LINE                *GPP*
CRTWR9   CLI   0(R3),X'F0'   IS THIS A FORCED WRITE ?           *GPP*
         BNL   CRTPAGE       YES - OUTPUT                       *GPP*
         LH    R8,CRTLINE    GET NUMBER OF LINES CHANGED        *GPP*
         AH    R8,DCH1       ADD THIS ONE                       *GPP*
         STH   R8,CRTLINE    STASH BACK                         *GPP*
         CH    R8,NUMCONLN   ALL CHANGED ?                       84127
         BNH   CONSEX        NOT YET - RETURN                   *GPP*
         LA    R3,CCSWAIT    SET PSEUDO-PAGE I/O                *GPP*
         CLI   UCBFLG,12     4341 ?                              84127
         BNE   *+8           NO                                  84127
         LA    R3,CC4WAIT    USE SPECIAL CHAIN                   84127
         MVI   CRTCURSE,1    SET PAGE I/O RECURSION SWITCH      *GPP*
         XC    CRTLINE,CRTLINE  CLEAR LINE COUNT                *GPP*
         B     CALLIO2       FORCE A PAGE I/O                   *GPP*
         SPACE 1                                                *GPP*
CRTREAD  MVI   CRTCURSE,1    SET CRT RECURSION SWITCH           *GPP*
CRTPAGE  LA    R3,CCSWRE     GET PAGE WRITE CCW                 *GPP*
         CLI   UCBFLG,12     4341 ?                              84127
         BNE   *+8           NO                                  84127
         LA    R3,CC4WRE     USE SPECIAL CHAIN                   84127
         XC    CRTLINE,CRTLINE  CLEAR LINE COUNT                *GPP*
         B     CALLIO2       PERFORM THE I/O                    *GPP*
         SPACE 1                                                *GPP*
CRTREENT MVI   CRTCURSE,2    SET FOR POST READ CHECKING         *GPP*
         XC    CRTINP,CRTINP  CLEAR INPUT AREA                  *GPP*
         LA    R3,CCSRED     SET READ CCW                       *GPP*
         B     CALLIO2       WAIT FOR INTERRUPT                 *GPP*
         SPACE 1                                                *GPP*
CRTRENT2 CLI   CRTINP,X'7D'   ENTER KEY ?                       *GPP*
         BNE   CRTREAD       NO; REWRITE THE PAGE AND TRY AGAIN *GPP*
         MVI   CRTCURSE,0    TURN RECURSION SWITCH OFF          *GPP*
         TM    0(R3),1       WAS REQUEST FOR A WRITE ?          *GPP*
         BNZ   CONSEX        YES - DONE                         *GPP*
         LM    R7,R8,0(R3)   GET ORIGINAL INPUT REQUEST         *GPP*
         LA    R7,0(,R7)     STRIP                              *GPP*
         LA    R8,0(,R8)      HIGH BYTE                         *GPP*
         STM   R7,R8,CCSFORW  COPY PARMS TO REWRITE CCW         *GPP*
         MVI   CCSFORW,X'F1'  SET FORCED WRITE                  *GPP*
         SH    R8,DCH1       -1 FOR EXEC                        *GPP*
         BM    CONSEX        ALL FOR NOTHING ?                  *GPP*
         MVI   0(R7),C' '    PREPARE TO CLEAR INPUT AREA        *GPP*
         SH    R8,DCH1       LENGTH FOR SLIDING MOVE            *GPP*
         BM    CRTPAG5       ONLY ONE                           *GPP*
         EX    R8,CRTMVS     DO OVERLAPPED MOVE TO BLANK        *GPP*
CRTPAG5  AH    R8,DCH1       GET LENGTH - 1 AGAIN               *GPP*
         EX    R8,CRTOCC     OR TO USER'S AREA (FORCE UPPER CASE) *GPP*
         LA    R3,CCSFORW    SET FORCED WRITE CCW               *GPP*
         B     CRTRITE       AND WRITE REPLY TO SCREEN          *GPP*
         SPACE 1                                                *GPP*
CRTCLEAR L     R7,CRTLIN@    CLEAR SCREEN BUFFER IN CORE        *GPP*
         LH    R8,NUMCONLN   NUMBER OF LINES TO DO               84127
         MVI   0(R7),C' '                                       *GPP*
         MVC   1(L'CRTLIN1-1,R7),0(R7)  CLEAR FIRST LINE        *GPP*
CRTIOC1  MVC   CRTLIN2-CRTLIN1(L'CRTLIN1,R7),0(R7) CLEAR NEXT LINE*GPP*
         LA    R7,CRTLIN2-CRTLIN1(,R7)  NEXT LINE               *GPP*
         BCT   R8,CRTIOC1    DO ALL                             *GPP*
         SPACE 1                                                *GPP*
CONSEX   TM    4(R3),CC      COMMAND CHAINED ?                  *GPP*
         BZ    CALLEX        NO - EXIT FOR GOOD                 *GPP*
         LA    R3,8(,R3)     POINT TO NEXT COMMAND              *GPP*
         ST    R3,SAVER1+12  PUT BACK INTO SAVE AREA FOR READ REC *GPP*
         B     CONSIO        DO THE NEXT COMMAND                *GPP*
         SPACE 3                                                *GPP*
CALLIO2  ST    R3,CAW
         LH    R4,UCBCUU
CALLIOW  CLI   CRTCURSE,2    CRT 3270 ATTENTION WAIT / READ ?   *GPP*
         BNE   CALLIOPW      NO                                 *GPP*
         CLI   UCBFLG,4      3066 ?                             *GPP*
         BE    CALLIOPW      YES; DON'T WAIT FOR ATTN           *GPP*
         MVC   PSWIOP,A01B20                                     84135
         LPSW  CRTWAIT       WAIT FOR ATTN                      *GPP*
CALLIOPW BAL   R10,TIOLOOP   WAIT FOR DEVICE AVAILABILITY        84135
         BC    1,A02AD6      CC=3 - DEVICE NOT AVAILABLE ?       84135
         CLI   UCBFLG,4      3066 ?                             *GPP*
         BNE   A01CE5        NO                                 *GPP*
         CLI   CRTCURSE,2    READ REQUEST ?                     *GPP*
         BNE   A01CE5        NO                                 *GPP*
         TM    CSW+4,X'80'   ATTENTION ?                        *GPP*
         BZ    CALLIOPW      NO; WAIT FOR IT                    *GPP*
A01CE5   TM    CSW+4,X'50'   SM + BUSY ?                        *GPP*
         BNZ   CALLIOPW
CONSSIO  BAL   R10,TIOLOOP   WAIT FOR CONSOLE                    84135
         BC    1,A02AD6                                          84135
         SIO   0(R4)         START UP                            84135
         BC    3,CONSSIO     BUSY; TRY AGAIN                     84135
         BZ    CONSTIO       OK - WAIT FOR DEVICE END            84135
         TM    CSW+4,X'10'   BUSY ?                              84135
         BNZ   CONSSIO       YES; TRY AGAIN                      84135
         B     CONSCT        CHECK STATUS                        84135
         SPACE 1                                                 84135
CONSTIO  BAL   R10,TIOLOOP   GET DEVICE CLEARED                  84135
         B     CONSTIO       NO CSW STORED                       84135
CONSCT   CLI   CSW+5,0       DISASTER ?                          84135
         BNE   CALLIOPW      YES; TRY AGAIN                      84135
         TM    CSW+4,X'02'   UNIT CHECK ?                        84135
         BNZ   A01DC0        YES; GO TO RECOVERY                 84135
         TM    CSW+4,X'85'   ATTN/DEV.END/UNIT EXCEPTION ?       84135
         BZ    CONSTIO       NONE OF THE ABOVE                   84135
CALLEX   LM    R0,R15,SAVER1
         CLI   UCBFLG,4      3066 ?                              *GPP*
         BNE   CALLEX2       NO                                  *GPP*
         CLI   CRTCURSE,1    CHECK RECURSION SWITCH             *GPP*
         BH    CR6RENT2      POST READ CHECKING                 *GPP*
         BE    CR6REENT      READ REQUEST PROCESSING            *GPP*
         BR    R9                                               *GPP*
CALLEX2  CLI   CRTCURSE,1    CHECK RECURSION SWITCH             *GPP*
         BH    CRTRENT2      POST READ CHECKING                 *GPP*
         BE    CRTREENT      READ REQUEST PROCESSING            *GPP*
         BR    R9
ATTNWAIT MVC   PSWIOP,A01B28 RESTORE NORMAL I/O EXIT             84135
         CH    R4,PSOIOP+2   INTERRUPT FROM OUR UNIT ?           84135
         BNE   CALLIOW       NO; WAIT AGAIN                      84135
         TM    CSW+4,X'81'   ATTN OR UNIT EXCEPTION ?            84135
         BNZ   CONSSIO       YES; TRY TO READ IT
         B     CALLIOW
         SPACE 1                                                 84135
*        CODE ADDED TO SUPPORT 3270 CRTS ON BLOCK MPX CHANNELS   84135
*                                                                84135
TIOLOOP  LM    R5,R6,PSWIOP  SAVE OLD INTERRUPT ADDRESS          84135
         LA    R7,CONIOINT   GET MY INTERRUPT ADDRESS            84135
         ST    R7,PSWIOP+4   STASH IT                            84135
TIOLOOP1 XC    CSW,CSW       CLEAR CSW STATUS                    84135
         TIO   0(R4)         TRY TO ACCESS THE CONSOLE           84135
         BC    9,TIOLOOPZ    AVAILABLE (8) OR CC=3 (1)           84135
         BC    4,TIOLOOPX    CSW STORED                          84135
         SSM   SSMONN        ENABLE FOR INTERRUPTS               84135
         SSM   SSMOFF        DISABLE EXCEPT EXTERNAL             84135
         B     TIOLOOP1      LOOP UNTIL NOT BUSY                 84135
TIOLOOPZ STM   R5,R6,PSWIOP  RESTORE I/O INTERRUPT ADDRESS       84135
         BR    R10           RETURN TO CALLER                    84135
CONIOINT CH    R4,PSOIOP+2   INTERRUPT FROM OUR CONSOLE ?        84135
         BNE   TIOLOOP1      NO; CLEAR CSW AND TRY AGAIN         84135
TIOLOOPX TM    CSW+4,X'70'   SM/CU END/BUSY ?                    84135
         BZ    TIOLOOPY      NO; EXIT                            84135
         LA    R7,4095       MAKE A MODERATELY LARGE NUMBER      84135
         SLA   R7,2          MAKE IT BIGGER                      84135
TIOLOOPT SSM   SSMONN        ENABLE INTERRUPTS                   84135
         SSM   SSMOFF                                            84135
         BCT   R7,TIOLOOPT                                       84135
TIOLOOPY STM   R5,R6,PSWIOP  RESTORE OLD I/O INTERRUPT           84135
         B     4(,R10)       RETURN WITH CSW CODE                84135
         SPACE 2                                                *GPP*
CON6IO   CLI   0(R3),X'F0'   PSEUDO-OPERATION ?                 *GPP*
         BE    CR6CLEAR      YES - CLEAR SCREEN REQUEST         *GPP*
         BH    CR6RITE       YES - FORCED PAGE OUTPUT           *GPP*
         TM    0(R3),3       HAVE WE TRANSLATED CCWS YET ?      *GPP*
         BL    CON6IO2       NOT YET - DO IT                    *GPP*
         TM    0(R3),7       IS IT IN BYPASS RANGE ? (3-6)      *GPP*
         BL    CALLIO2       YES - LET I/O HANDLER HAVE IT      *GPP*
CON6IO2  TM    0(R3),1       READ OR WRITE REQUEST ?            *GPP*
         BZ    CR6READ       READ - DO IT                       *GPP*
CR6RITE  L     R7,CR6LIN@    POINT TO FIRST SCREEN LINE         *GPP*
CR6LIN#  LH    R8,NUMCONLN   GET NUMBER OF LINES TO MOVE         84127
CR6WR1   MVC   0(L'CR6LIN1,R7),CR6LIN2-CR6LIN1(R7) MOVE A LINE  *GPP*
         LA    R7,CR6LIN2-CR6LIN1(,R7)  NEXT LINE               *GPP*
         BCT   R8,CR6WR1     DO IT                              *GPP*
         L     R15,CR6LINL@  GET ADDRESS OF CURRENT LINE        *GPP*
         MVI   0(R15),C' '   CLEAR CURRENT LINE                 *GPP*
         MVC   1(L'CR6LINL-1,R15),0(R15)                        *GPP*
         LM    R7,R8,0(R3)   GET CCW PARMS                      *GPP*
         LA    R7,0(,R7)     CLEAR HIGH BYTE                    *GPP*
         LA    R8,0(,R8)                                        *GPP*
         SH    R8,DCH1       LESS ONE FOR EXECUTE               *GPP*
         BM    CR6WR9        IGNORE IF ZERO LENGTH              *GPP*
         CH    R8,CR6MVL+2   LONGER THAN MAX ?                  *GPP*
         BNH   *+8           NO                                 *GPP*
CR6MVL   LA    R8,L'CR6LIN1-1  SET FOR MAX                      *GPP*
         L     R15,CR6LINL@   GET ADDRESS OF CURRENT LINE       *GPP*
         EX    R8,CRTMVC     MOVE TO SCREEN LINE                *GPP*
CR6WR9   CLI   0(R3),X'F0'   IS THIS A FORCED WRITE ?           *GPP*
         BNL   CR6PAGE       YES - OUTPUT                       *GPP*
         LH    R8,CRTLINE    GET NUMBER OF LINES CHANGED        *GPP*
         AH    R8,DCH1       ADD THIS ONE                       *GPP*
         STH   R8,CRTLINE    STASH BACK                         *GPP*
         CH    R8,NUMCONLN   ALL CHANGED ?                       84127
         BNH   CON6EX        NOT YET - RETURN                   *GPP*
         LA    R3,CC6WAIT    SET PSEUDO-PAGE I/O                *GPP*
         MVI   CRTCURSE,1    SET PAGE I/O RECURSION SWITCH      *GPP*
         XC    CRTLINE,CRTLINE  CLEAR LINE COUNT                *GPP*
         B     CALLIO2       FORCE A PAGE I/O                   *GPP*
         SPACE 1                                                *GPP*
CR6READ  MVI   CRTCURSE,1    SET CRT RECURSION SWITCH           *GPP*
CR6PAGE  LA    R3,CC6WRE     GET PAGE WRITE CCW                 *GPP*
         XC    CRTLINE,CRTLINE  CLEAR LINE COUNT                *GPP*
         B     CALLIO2       PERFORM THE I/O                    *GPP*
         SPACE 1                                                *GPP*
CR6REENT MVI   CRTCURSE,2    SET FOR POST READ CHECKING         *GPP*
         XC    CRTINP,CRTINP  CLEAR INPUT AREA                  *GPP*
         LA    R3,CC6RED     SET READ CCW                       *GPP*
         B     CALLIO2       WAIT FOR INTERRUPT                 *GPP*
         SPACE 1                                                *GPP*
CR6RENT2 TM    CRTINP+2,X'80'   ENTER KEY ?                     *GPP*
         BZ    CR6READ       NO; REWRITE THE PAGE AND TRY AGAIN *GPP*
         MVI   CRTCURSE,0    TURN RECURSION SWITCH OFF          *GPP*
         TM    0(R3),1       WAS REQUEST FOR A WRITE ?          *GPP*
         BNZ   CON6EX        YES - DONE                         *GPP*
         LM    R7,R8,0(R3)   GET ORIGINAL INPUT REQUEST         *GPP*
         LA    R7,0(,R7)     STRIP                              *GPP*
         LA    R8,0(,R8)      HIGH BYTE                         *GPP*
         STM   R7,R8,CCSFORW  COPY PARMS TO REWRITE CCW         *GPP*
         MVI   CCSFORW,X'F1'  SET FORCED WRITE                  *GPP*
         SH    R8,DCH1       -1 FOR EXEC                        *GPP*
         BM    CON6EX        ALL FOR NOTHING ?                  *GPP*
         MVI   0(R7),C' '    PREPARE TO CLEAR INPUT AREA        *GPP*
         SH    R8,DCH1       LENGTH FOR SLIDING MOVE            *GPP*
         BM    CR6PAG5       ONLY ONE                           *GPP*
         EX    R8,CRTMVS     DO OVERLAPPED MOVE TO BLANK        *GPP*
CR6PAG5  AH    R8,DCH1       GET LENGTH - 1 AGAIN               *GPP*
         EX    R8,CR6OCC     OR TO USER'S AREA (FORCE UPPER CASE) *GPP*
         LA    R3,CCSFORW    SET FORCED WRITE CCW               *GPP*
         B     CR6RITE       AND WRITE REPLY TO SCREEN          *GPP*
         SPACE 1                                                *GPP*
CR6CLEAR L     R7,CR6LIN@    CLEAR SCREEN BUFFER IN CORE        *GPP*
         LH    R8,NUMCONLN   NUMBER OF LINES TO DO               84127
         MVI   0(R7),C' '                                       *GPP*
         MVC   1(L'CR6LIN1-1,R7),0(R7)  CLEAR FIRST LINE        *GPP*
CR6IOC1  MVC   CR6LIN2-CR6LIN1(L'CR6LIN1,R7),0(R7) CLEAR NEXT LINE*GPP*
         LA    R7,CR6LIN2-CR6LIN1(,R7)  NEXT LINE               *GPP*
         BCT   R8,CR6IOC1    DO ALL                             *GPP*
         SPACE 1                                                *GPP*
CON6EX   TM    4(R3),CC      COMMAND CHAINED ?                  *GPP*
         BZ    CALLEX        NO - EXIT FOR GOOD                 *GPP*
         LA    R3,8(,R3)     POINT TO NEXT COMMAND              *GPP*
         ST    R3,SAVER1+12  PUT BACK INTO SAVE AREA FOR READ REC *GPP*
         B     CON6IO        DO THE NEXT COMMAND                *GPP*
CR6LIN@  DC    A(CR6LIN1)    ADDRESS OF FIRST DATA LINE         *GPP*
CR6LINL@ DC    A(CR6LINL)    ADDRESS OF LAST DATA LINE          *GPP*
CR6MVS   MVC   1(0,R7),0(R7)  SLIDING MOVE                      *GPP*
CR6LINE  DC    H'0'          NUMBER OF LINES WRITTEN            *GPP*
CR6OCC   OC    0(0,R7),CRTINP+3  UPPER CASE / COPY USER'S INPUT *GPP*
CC6WRE   CCW   X'07',0,CC+SLI,2        ERASE SCREEN             *GPP*
         CCW   X'27',*-3,CC+SLI,2      SET BUFFER ADD (0,0)     *GPP*
         CCW   X'01',CR6BUF,CC+SLI,CR6BUFL  WRITE FULL SCREEN   *GPP*
         CCW   X'0F',CC6IN@,SLI,2      SET CURSOR               *GPP*
CC6RED   CCW   X'0E',CRTINP,CC+SLI,3   READ CONTROL INPUT       *GPP*
         CCW   X'27',CC6IN@,CC+SLI,2   SET BUFFER ADDRESS       *GPP*
         CCW   X'06',CRTINP+3,SLI,79   READ DATA INPUT          *GPP*
CC6WAIT  CCW   X'07',0,CC+SLI,2        ERASE SCREEN             *GPP*
         CCW   X'27',*-3,CC+SLI,2      SET BUFFER ADD (0,0)     *GPP*
         CCW   X'01',CR6BUF,CC+SLI,CR6BUFW  WRITE WAIT SCREEN   *GPP*
         CCW   X'0F',CC6IN@,SLI,2      SET CURSOR               *GPP*
CC6IN@   DC    AL1(34,1)     INPUT ADDR - LAST LINE, ONE IN      *GPP*
SSMOFF   DC    X'01'         SSM DISABLE ALL EXCEPT EXTERNAL/TIMER
SSMONN   DC    X'FF'         SSM ENABLE ALL
         SPACE 1                                                *GPP*
CRTLIN@  DC    A(CRTLIN1)    ADDRESS OF FIRST DATA LINE         *GPP*
CRTLINL@ DC    A(CRTLINL)    ADDRESS OF LAST DATA LINE          *GPP*
CONPTRS  DC    A(CRTLINL,CR6LINL,CRTLINL,CR4LINL)                84127
CRTMVC   MVC   0(0,R15),0(R7)    MOVE USER WRITE DATA           *GPP*
CRTMVS   MVC   1(0,R7),0(R7)  SLIDING MOVE                      *GPP*
DCH1     DC    H'1'                                             *GPP*
CRTLINE  DC    H'0'          NUMBER OF LINES WRITTEN            *GPP*
CRTOCC   OC    0(0,R7),CRTINP+6  UPPER CASE / COPY USER'S INPUT *GPP*
CRTINP   DC    CL85' '       MAX OF 79 BYTES USER INPUT         *GPP*
CRTCURSE DC    X'0'          CRT READ RECURSION SWITCH          *GPP*
CCSWRE   CCW   5,CRTBUF,SLI,CRTBUFL   WRITE FULL SCREEN         *GPP*
CC4WRE   CCW   5,CRTBUF,DC+SLI,CR4BUFL1   COMMON SCREEN PORTION  84127
         CCW   5,CR4BUF,SLI,CR4BUFL2       INPUT AREA            84127
CCSRED   CCW   6,CRTINP,SLI,L'CRTINP  READ MODIFIED AID///DATA  *GPP*
CCSFORW  CCW   X'F1',0,SLI,0  CCW FOR INPUT ECHO                *GPP*
CCSWAIT  CCW   5,CRTBUF,SLI,CRTBUFW   WRITE SCREEN AND WAIT     *GPP*
CC4WAIT  CCW   5,CRTBUF,DC+SLI,CR4BUFL1   COMMON SCREEN PORTION  84127
         CCW   5,CR4BUF,SLI,CR4BUFW         INPUT/MESSAGE AREA   84127
CRTWAIT  DC    0D'0',X'FF02000000',C'CRT'  CRT ATTN WAIT        *GPP*
         SPACE 1                                                *GPP*
CCWSENS  CCW   X'04',SENSIN,SLI,6  GET SOME SENSE
SENSIN   DC    XL6'0'
NUMCONLN DC    H'22'         NUMBER OF DISPLAY LINES ON CONSOLE  84127
HEXTRT   DC    C'0123456789ABCDEF'
IOSWRK   DC    XL36'0'
A01D72   TM    CSW+4,X'10'   BUSY ?
         BO    CONSSIO
         TM    CSW+4,X'04'   DEVICE END ?
         BO    CALLIO2
         TM    CSW+4,X'08'   CHANNEL END ?
         BO    CONSTIO
A01D8A   TM    A01E68+1,X'10'
         BOR   R9
         TM    CSW+4,X'03'   UNIT CHECK / UNIT EXCEPTION ?
         BNZ   A01DC0
         TM    CSW+5,X'FF'
         BNZ   A01DC0
         TM    CSW+4,X'04'   DEVICE END ?
         BO    CALLEX
         TM    CSW+4,X'20'   CONTROL UNIT END ?
         BO    CONSSIO
         TM    CSW+4,X'08'   CHANNEL END ?
         BO    CONSTIO
         TM    CSW+4,X'10'   BUSY?
         BO    CONSSIO
A01DC0   MVC   UCBPSW(L'UCBPSW+L'UCBCSW),PSOIOP + CSW
         MVC   UCBCAW,CAW
         MVC   UCBSEN(8),A01E5C
         TM    CSW+4,X'01'   UNIT EXCEPTION ?
         BO    CALLEX
         TM    CSW+4,X'02'   UNIT CHECK ?
         BZ    A01E2A
         LA    R4,CCWSENS
         ST    R4,CAW
         LH    R4,UCBCUU
         CLI   CSW+4,X'02'   UNIT CHECK ?
         BZ    A01E0A
A01DF6   TM    CSW+4,X'04'   DEVICE END ?
         BO    A01E0A
A01DFE   TIO   0(R4)                         *
         BL    A01DF6        CSW STORED
         B     A01DFE
A01E0A   SIO   0(R4)                         *
         BO    A02AD6        NOT AVAILABLE
         BH    A01E0A        BUSY
A01E16   TIO   0(R4)                         *
         BH    A01E16        BUSY
         MVC   UCBSEN(6),SENSIN
         XC    SENSIN(6),SENSIN
A01E2A   TM    A027E7,X'FF'
         BO    A01E38
         MVC   SAVER4(64),SAVER1
A01E38   L     R10,A01B30
         CLI   UCBTYP,X'05'
         BNH   A0200C
         CLI   UCBTYP,UCBTTA  TAPE ?
         BE    A0211A
         CLI   UCBTYP,7  (FAILED WITH OLD UCBTCO)  TYPEWRITER ? *GPP*
         BE    A021CE
         CLI   UCBTYP,X'08'
         BE    A02260
A01E5C   DC    2F'0'
A01E64   DC    F'6'
A01E68   DC    X'0000'
CONHEX   LA    R3,3          SET FOR 3-BYTE HEX ADDRESS          84135
CONHDIG  TM    0(R2),X'F0'
         BO    A01EA0
         CLI   0(R2),C'A'
         BLR   R9                                                84127
         CLI   0(R2),C'F'
         BHR   R9                                                84127
         TR    0(1,R2),A01EC8+X'FA'-C'A'  USE TOP SIX BYTES OF TR TAB
A01EA0   LA    R2,1(,R2)
         BCT   R3,CONHDIG
         SH    R2,A01EC0
         PACK  A01EBE(2),0(3,R2)
         LH    R1,A01EBE
         SRL   R1,4
         B     4(0,R9)
A01EBE   DC    H'0'
A01EC0   DC    H'3'
         DS    0D            DELETE LATER
A01EC8   DC    256AL1(*-A01EC8)  TRANSLATE TABLE
         ORG   A01EC8+X'81'
         DC    C'ABCDEFGHI'  FOLD LOWER TO UPPER CASE
         ORG   A01EC8+X'91'
         DC    C'JKLMNOPQR'
         ORG   A01EC8+X'A2'
         DC    C'STUVWXYZ'
         ORG   A01EC8+256    END OF TABLE
A01FC8   LA    R9,2(,R9)
XEQTNT   SR    R1,R1
         IC    R1,0(,R9)
         TM    0(R9),X'10'
         BO    A01FFC
         LH    R4,UCBSEN
A01FDE   LNR   R1,R1
         LA    R3,1
         SLA   R3,15(R1)                      *
         BO    A01FF2
         NR    R3,R4
         BZ    A01FC8
A01FF2   SR    R1,R1
         IC    R1,1(,R9)
         B     0(R1,R9)
A01FFC   LH    R4,UCBCSW+4
         N     R1,A02008
         B     A01FDE
A02008   DC    A(X'F')       AND MASK
A0200C   BAL   R9,XEQTNT     CHECK STATUS BITS FOR DISK AND STUFF
 TNT 1,13,A,1,14,B,1,12,C,1,0,D,1,6,X,1,15,E,1,10,F,1,11,G,PFX=TNT01
 TNT 1,7,H,1,9,I
         TNT   2,15,Y
TNT01X   CLI   UCBTYP,X'05'
         BE    A0203E
         CLI   UCBTYP,X'00'
         BE    A022FC
         CLI   UCBTYP,X'04'
         BE    A0203E
A0203E   BAL   R9,XEQTNT     NOW CHECK SENSE BITS
 TNT 0,3,A,0,12,B,0,7,C,0,1,D,0,2,E,0,4,F,0,5,G,0,14,H,0,0,I,PFX=TNT02
 TNT 0,6,J,0,9,K,0,10,L,0,13,M,0,15,N
TNT02X   TNT   2,15,Y
TNT01A   B     A02AE6
TNT01B   B     A02AEE
TNT01C   B     A02AF6
TNT01D   B     A02B46
TNT01E   BAL   R15,A0281C
         B     A02B1E
TNT01F   B     A02AFE
TNT01G   B     A02B06
TNT01H   MVI   A027E7,X'00'
         LM    R0,R15,SAVER4
         B     A02642
TNT01I   MVI   A027E7,X'00'
         MVC   SAVER1(64),SAVER4
         B     CALLEX
TNT01Y   B     A02B3E
TNT02A   BAL   R15,A02850
         B     A02B26
TNT02B   BAL   R15,A02554
         BAL   R1,A0259C
         B     A02626
TNT02D   BAL   R15,A02B4E
         MVC   IBCMSG(27),IBCRDA
         MVC   IBCMSG+20(3),IOSWRK+1
         B     A02884
TNT02E   BAL   R15,A027C0
         B     A02B64
TNT02F   TM    UCBSEN+1,X'80'
         BO    A025FA
         BAL   R15,A02850
         B     A02B2E
TNT02G   BAL   R15,A0281C
         B     A02B6C
TNT02I   TM    UCBSEN+1,X'04'
         BO    A02652
         B     A02B36
TNT02C   BAL   R1,A0259C
         B     A0261E
TNT02J   B     A02652
TNT02K   B     A025DE
TNT02L   B     A02632
TNT02M   B     A02652
TNT02N   B     A02652
TNT02H   BAL   R15,A02850
         B     A0263A
TNT02Y   B     A02B3E
A0211A   BAL   R9,XEQTNT     STATUS CHECK FOR TAPE
 TNT 1,13,A,1,14,B,1,12,C,1,0,D,1,6,E,1,15,F,1,10,G,PFX=TNT03
 TNT 1,11,H,1,7,I,1,9,J,2,15,K
TNT03E   BAL   R9,XEQTNT     SENSE CHECK
 TNT 0,2,A,0,3,B,0,1,C,0,5,D,0,8,E,0,4,F,0,7,G,0,0,H,0,12,I,PFX=TNT04
         TNT   2,15,J
TNT03A   B     A02AE6
TNT03B   B     A02AEE
TNT03C   B     A02AF6
TNT03D   B     A02B46
TNT03F   BAL   R15,A02684
         BAL   R15,A0281C
         B     A02B1E
TNT03G   B     A02AFE
TNT03H   B     A02B06
TNT03I   LM    R0,R15,SAVER4
         BR    R9
TNT03J   B     A02B16
TNT03K   B     A02B3E
TNT04E   B     A026C2
TNT04B   B     A02B26
TNT04C   BAL   R15,A02B4E
         MVC   IBCMSG(27),IBCRTA
         MVC   IBCMSG+20(3),IOSWRK+1
         B     A02884
TNT04A   BAL   R15,A02684
         BAL   R15,A027C0
         B     A02B64
TNT04F   B     A02664
TNT04D   BAL   R15,A02684
         BAL   R15,A0281C
         B     A02B6C
TNT04G   B     A02B7C
TNT04H   TM    UCBSEN+1,X'02'
         BO    A0260E
         B     A02B36
TNT04I   B     A026B0
TNT04J   B     A02B3E
A021CE   BAL   R9,XEQTNT     STATUS CHECK FOR TYPEWRITER
 TNT 1,13,A,1,14,B,1,12,C,1,1,D,1,2,D,1,6,E,1,15,F,1,10,G,PFX=TNT05
 TNT 1,11,H,1,7,I,1,9,J,2,15,K
TNT05E   BAL   R9,XEQTNT     SENSE CHECK
 TNT 0,7,A,0,6,A,0,5,A,0,4,A,0,3,B,0,1,C,0,2,D,0,0,E,2,15,F,PFX=TNT06
TNT05A   B     A02AE6
TNT05B   B     A02AEE
TNT05C   B     A02AF6
TNT05D   B     A02B46
TNT05F   B     A02B1E
TNT05G   B     A02AFE
TNT05H   B     A02B06
TNT05I   LM    R0,R15,SAVER4
         B     TNT05K
TNT05J   B     A02B16
TNT05K   B     A02B3E
TNT06A   B     A02B46
TNT06B   TM    UCBPSW,X'01'
         BNO   A02240
         BAL   R15,A027C0
         B     A02890
A02240   LA    R2,IBC153
         LA    R1,L'IBC153
         B     A0288C
TNT06C   B     A02890
TNT06D   BAL   R15,A027C0
         B     A02B64
TNT06E   B     A02B36
TNT06F   B     A02B3E
A02260   BAL   R9,XEQTNT     CHECK STATUS
 TNT 1,13,A,1,14,B,1,12,C,1,0,D,1,1,D,1,2,D,1,15,D,1,6,E,PFX=TNT07
 TNT 1,10,F,1,11,G,1,7,H,1,9,I,2,15,J
TNT07E   BAL   R9,XEQTNT     CHECK SENSE
 TNT 0,5,A,0,7,A,0,3,B,0,1,C,0,2,D,0,4,E,0,0,F,0,6,G,2,15,H,PFX=TNT08
TNT07A   B     A02AE6
TNT07B   B     A02AEE
TNT07C   B     A02AF6
TNT07D   B     A02B46
TNT07F   B     A02AFE
TNT07G   B     A02B06
TNT07H   B     A02B0E
TNT07I   B     A02B16
TNT07J   B     A02B3E
TNT08A   B     A02B46
TNT08B   LA    R2,IBC159
         LA    R1,L'IBC159
         B     A0288C
TNT08C   BAL   R15,A02B4E
         MVC   IBCMSG(27),IBC154
         MVC   IBCMSG+22(3),IOSWRK+1
         B     A02884
TNT08D   BAL   R15,A027C0
         B     A02B64
TNT08E   LA    R2,IBC101
         LA    R1,L'IBC101
         B     A0288C
TNT08F   B     A02B36
TNT08G   B     A02B74
TNT08H   B     A02B3E
A022FC   BAL   R9,XEQTNT     CHECK SENSE
 TNT 0,3,A,0,12,B,0,7,C,0,1,D,0,2,E,0,4,F,0,5,G,0,14,H,PFX=TNT09
 TNT 0,0,I,0,6,J,0,9,K,0,10,L,0,13,M,2,15,N
TNT09A   B     A02B26
TNT09B   TM    UCBSEN+1,X'02'
         BO    A02374
         B     A023D8
TNT09C   TM    UCBSEN+1,X'02'
         BO    A02B58
         B     A02436
TNT09D   B     TNT02D
TNT09E   BAL   R15,A027C0
         B     A02B64
TNT09F   BAL   R1,A02456
         B     A02B2E
TNT09G   BAL   R15,A02850
         B     A02B6C
TNT09H   BAL   R1,A02456
         B     A0263A
TNT09I   B     A02B36
TNT09J   B     A02652
TNT09K   B     A025DE
TNT09L   B     A02632
TNT09M   B     TNT02M
TNT09N   B     A02B3E
A02374   TM    A01E68+1,X'40'
         BO    A02850
         BAL   R1,A0258E
         L     R4,SAVER4+12
         L     R4,0(,R4)
         MVC   A02576(6),0(R4)
         XI    A02578+3,X'01'
         MVI   A01E68+1,X'10'
         LA    R3,A023C8
         BAL   R9,CALLIO
         CLC   A02578(4),A02588+1
         BE    A023B6
         BAL   R9,CALLIO
         CLC   A02578(4),A02588+1
         BNE   A023BE
A023B6   MVI   A01E68+1,X'40'
         BAL   R15,A02850
A023BE   MVI   A01E68+1,X'00'
         B     A0264A
A023C8   CCW   X'07',A02576,CC+SLI,6
         CCW   X'1A',A02588,SLI,5
A023D8   BAL   R15,A02554
         B     A023E4
         B     A02626
A023E4   BAL   R1,A023F0
         BAL   R15,A0281C
         B     A02626
A023F0   LA    R3,A02418
         MVC   A02428(2),SEEKAD
         MVC   A02430(2),SEEKAD
         MVC   A0242C(1),TRAKAD
         MVC   A02434(1),TRAKAD
         BAL   R9,CALLIO
         BAL   R15,A02850
         BR    R1
A02418   CCW   X'07',A02428,CC,6
         CCW   X'07',A02430,0,6
A02428   DC    X'00000101'
A0242C   DC    X'01010000'
A02430   DC    X'00000303'
A02434   DC    X'0303'
A02436   TM    UCBSEN+1,X'01'
         BE    A02446
         BAL   R1,A0259C
         B     A0261E
A02446   TM    UCBSEN,X'80'
         BO    A0261E
         BAL   R1,A023F0
         B     A0261E
A02456   TM    A01E68+1,X'20'
         BO    A027E8
         MVI   A01E68+1,X'21'
         L     R4,SAVER4+12
         L     R4,0(,R4)
         ST    R4,A02530
         MVC   A02538(4),0(R4)
         L     R5,A02538
         ST    R5,A02540
         A     R5,A02550
         CLI   A02538+3,X'00'
         BE    A0248C
         BCTR  R5,0
         BCTR  R5,0
A0248C   ST    R5,A02548
         BAL   R15,A027E8
         BAL   R15,A027E8
         BAL   R15,A027E8
         L     R0,A02550
         LA    R5,2
         LA    R6,11
A024A8   BAL   R15,A027E8
         BAL   R15,A02506
         LA    R3,A02530
         BAL   R9,CALLIO
         BCT   R5,A024A8
         LA    R5,1
A024C0   NI    A01E68+1,X'EF'
         BAL   R15,A027E8
         BAL   R15,A02506
         BCT   R6,A024C0
         LA    R6,15
         LA    R3,A02528
         BAL   R9,CALLIO
         BAL   R15,A027E8
         BCT   R0,A024A8
         XI    A01E68+1,X'01'
         TM    A01E68+1,X'01'
         BO    A02500
         L     R0,A01E64
         LA    R5,1
         LA    R6,15
         B     A024A8
A02500   MVI   A01E68+1,X'00'
         BR    R1
A02506   LA    R7,8
         LA    R3,A02518
A0250E   BAL   R9,CALLIO
         BCT   R7,A0250E
         BR    R15
A02518   CCW   X'07',A02538,CC,6
         CCW   X'07',A02540,0,6
A02528   CCW   X'07',A02548,0,6
A02530   CCW   X'07',SEEKAD,0,6
         DS    0F            DELETE LATER
A02538   DC    XL6'000000000413'
         DS    0F            DELETE LATER
A02540   DC    XL6'0'
         DS    0F            DELETE LATER
A02548   DC    XL6'0'
A02550   DC    F'241'
A02554   L     R7,UCBCAW
         L     R8,0(,R7)
         MVC   A02576(4),2(R8)
         LA    R3,A02580
         BAL   R9,CALLIO
         CLC   A02588+1(4),A02576
         BNER  R15
         BE    4(,R15)
A02576   DC    0XL6'0',XL2'0'
A02578   DC    XL4'0'
A02580   CCW   X'1A',A02588,SLI,5
A02588   DC    XL5'0'
A0258E   LA    R3,A025B8
         BAL   R9,CALLIO
         BAL   R15,A027E8
         BR    R1
A0259C   LA    R3,A025B8
         CLI   UCBTYP,X'03'
         BNE   A025AC
         LA    R3,A025C8
A025AC   BAL   R9,CALLIO
         BAL   R15,A02850
         BR    R1
A025B8   CCW   X'13',0,CC+SLI,1
         CCW   X'17',0,SLI,1
A025C8   CCW   X'07',A025D8,CC,6
         CCW   X'07',A01E5C,0,6
A025D8   DC    X'000000FB00'
A025DE   L     R7,UCBCSW
         S     R7,A0278C
         MVI   4(R7),X'20'
         L     R3,UCBCAW
         BAL   R9,CALLIO
         LA    R1,IBC214-IBC201
         B     A02A98
A025FA   BAL   R15,A02850
         LA    R1,IBC213-IBC201
         B     A02A98
         LA    R1,IBC223-IBC201
         B     A02A98
A0260E   LA    R1,IBC215-IBC201
         B     A02A98
         LA    R1,IBC210-IBC201
         B     A02A98
A0261E   LA    R1,IBC230-IBC201
         B     A02A98
A02626   B     A0262A
A0262A   LA    R1,IBC217-IBC201
         B     A02A98
A02632   LA    R1,IBC209-IBC201
         B     A02A98
A0263A   LA    R1,IBC234-IBC201
         B     A02A98
A02642   LA    R1,IBC234-IBC201
         B     A02A98
A0264A   LA    R1,IBC235-IBC201
         B     A02A98
A02652   MVI   A027E7,X'00'
         MVI   A01E68+1,X'00'
         MVC   SAVER1(64),SAVER4
         B     CALLEX
A02664   TM    UCBSEN+1,X'04'
         BNO   A026C2
         BO    A02670
A02670   BAL   R15,A02684
         BAL   R15,A02698
         BAL   R15,A027E8
         LA    R1,IBC231-IBC201
         B     A02A98
A02684   LA    R3,A02690
         BAL   R9,CALLIO
         BR    R15
A02690   CCW   X'27',0,SLI,1
A02698   LA    R3,A026A8
         BAL   R9,CALLIO
         BR    R15
A026A8   CCW   X'17',0,SLI,1
A026B0   TM    A026C0,X'EE'
         BO    A02720
         LA    R1,IBC232-IBC201
         B     A02A98
A026C0   DC    X'00'
A026C2   B     A026C6
A026C6   L     R7,UCBCSW
         S     R7,DCF8
         MVC   A02770(2),0(R7)
         LH    R8,6(,R7)
         SH    R8,UCBCSW+6
         CH    R8,A02794
         BNL   A026F8
         TM    UCBSEN+1,X'80'
         BE    A026F0
         BNE   A026F8
A026F0   LM    R0,R15,SAVER4
         B     CALLIO
A026F8   BAL   R15,A02684
         L     R7,A0277C
         BCT   R7,A02740
         TM    UCBSEN+1,X'08'
         BO    A02718
         MVI   A027C0,X'EE'
         BAL   R15,A02796
         MVI   A026C0,X'00'
A02718   L     R8,A02784
         BCT   R8,A02738
A02720   MVC   A0277C(4),A02780
         MVC   A02784(4),A02788
         MVI   A026C0,X'00'
         LA    R1,IBC212-IBC201
         B     A02A98
A02738   ST    R8,A02784
         L     R7,A02780
A02740   ST    R7,A0277C
         MVC   A02778(1),UCBSEN+2
         MVI   A027E7,X'FF'
         LA    R3,A02768
         BAL   R9,CALLIO
         MVC   A0277C(4),A02780
         MVC   A02784(4),A02788
         B     A02652
A02768   CCW   X'1B',A02778,CC+SLI,1
A02770   DC    8X'00'
A02778   DC    4X'0'
A0277C   DC    F'10'
A02780   DC    F'10'
A02784   DC    F'10'
A02788   DC    F'10'
A0278C   DC    F'16'
DCF8     DC    F'8'
A02794   DC    H'12'
A02796   LA    R3,A027A0
         BAL   R9,CALLIO
         BR    R15
A027A0   CCW   X'27',0,CC+SLI,1
         CCW   X'27',0,CC+SLI,1
         CCW   X'37',0,CC+SLI,1
         CCW   X'37',0,SLI,1
A027C0   TM    A027E6,X'02'
         BO    A027E0
         MVI   A027E6,X'02'
         MVI   A027E7,X'FF'
         L     R3,UCBCAW
         BAL   R9,CALLIO
         MVI   A027E6,X'00'
         B     A02652
A027E0   MVI   A027E6,X'00'
         BR    R15
A027E6   DC    X'0'
A027E7   DC    X'0'
A027E8   L     R7,A02814
         BCT   R7,A027F8
         MVC   A02814(4),A02818
         BR    R15
A027F8   ST    R7,A02814
         MVI   A027E7,X'FF'
         L     R3,UCBCAW
         BAL   R9,CALLIO
         MVC   A02814(4),A02818
         B     A02652
A02814   DC    F'3'
A02818   DC    F'3'
A0281C   L     R7,A02848
         BCT   R7,A0282C
         MVC   A02848(4),A0284C
         BR    R15
A0282C   ST    R7,A02848
         MVI   A027E7,X'FF'
         L     R3,UCBCAW
         BAL   R9,CALLIO
         MVC   A02848(4),A0284C
         B     A02652
A02848   DC    F'5'
A0284C   DC    F'5'
A02850   L     R7,A0287C
         BCT   R7,A02860
         MVC   A0287C(4),A02880
         BR    R15
A02860   ST    R7,A0287C
         MVI   A027E7,X'FF'
         L     R3,UCBCAW
         BAL   R9,CALLIO
         MVC   A0287C(4),A02880
         B     A02652
A0287C   DC    F'10'
A02880   DC    F'10'
A02884   LA    R1,L'IBCMSG
         LA    R2,IBCMSG
A0288C   BAL   R15,PUTLIN
A02890   LA    R7,CALLIO
         ST    R7,A01B10+4
         MVC   PSWEXT,A028A8
         LM    R0,R15,SAVER4
         LPSW  A01B18
A028A8   DC    0D'0',X'01040000',A(A02BA0)
IBC154   DC    C'IBC154A  READY READER    . '
IBC159   DC    C'IBC159A  READER CHECK. CORRECT ERROR. DEPRESS INTERRUP*
               T KEY.'
IBC160   DC    C'IBC160A  PRINT CHECK. CORRECT ERROR. DEPRESS INTERRUPT*
                KEY.'
IBC101   DC    C'IBC101W INVALID CARD CODE. CORRECT ERROR. DEPRESS INTE*
               RRUPT KEY.'
IBC153   DC    C'IBC153A  TYPEWRITER FAILED TO READ LAST MESSAGE.  DEPR*
               ESS INTERRUPT KEY.'
IBCMSG   DC    CL50'                            DEPRESS INTERRUPT KEY.'
IBCRDA   DC    C'IBC157A  READY DASD    .   '
IBCRTA   DC    C'IBC156A  READY TAPE    .   '
IBC240   DC    C'IBC240W  SEEKED BALLAST CELL. MOUNT PROPER CELL. DEPRE*
               SS INTERRUPT KEY.'
A02A7A   UNPK  A02A88(5),2(3,R7)
         TR    A02A88(4),HEXTRT-C'0'
         BR    R15
A02A88   DC    XL8'0'
A02A90   MVI   PSWMCC+3,X'0F'
         B     A02A9C
A02A98   MVI   PSWMCC+3,X'1F'
A02A9C   MVC   PSOIOP+2(2),UCBCUU
         MVC   A01B38(28),PSOMCC
         MVC   PSOEXT(6),UCBSEN
         B     CLRJOB
         DC    C'IBC249W  I/O ERROR.  JOB TERMINATED.'
A02AD6   LA    R1,IBC211-IBC201
         MVI   PSWMCC+3,X'3F'
         B     A02A9C
A02AE6   LA    R1,IBC220-IBC201
         B     A02A90
A02AEE   LA    R1,IBC221-IBC201
         B     A02A90
A02AF6   LA    R1,IBC222-IBC201
         B     A02A90
A02AFE   LA    R1,IBC224-IBC201
         B     A02A90
A02B06   LA    R1,IBC225-IBC201
         B     A02A90
A02B0E   LA    R1,IBC226-IBC201
         B     A02A98
A02B16   LA    R1,IBC227-IBC201
         B     A02A98
A02B1E   LA    R1,IBC228-IBC201
         B     A02A98
A02B26   LA    R1,IBC204-IBC201
         B     A02A98
A02B2E   LA    R1,IBC205-IBC201
         B     A02A98
A02B36   LA    R1,IBC201-IBC201
         B     A02A98
A02B3E   LA    R1,IBC218-IBC201
         B     A02A98
A02B46   LA    R1,IBC219-IBC201
         B     A02A98
A02B4E   LA    R1,IBC202-IBC201
         BAL   R9,FORMER
         BR    R15
A02B58   LA    R2,IBC240
         LA    R1,L'IBC240
         B     A0288C
A02B64   LA    R1,IBC203-IBC201
         B     A02A98
A02B6C   LA    R1,IBC206-IBC201
         B     A02A98
A02B74   LA    R1,IBC229-IBC201
         B     A02A98
A02B7C   LA    R1,IBC208-IBC201
         B     A02A98
         LA    R3,A02B98
         BAL   R9,CALLIO
         MVC   SAVER1(64),SAVER4
         B     CALLEX
A02B98   CCW   X'8B',0,SLI,1  PRINTER EJECT
A02BA0   TM    PSOEXT+3,X'40'  INTERRUPT BUTTON ?
         BZ    A02BAC        NO; WAIT SOME MORE
         LPSW  A01B10
A02BAC   LPSW  PSOEXT        WAIT FOR ACTION
KILLMSG  DC    C'   JOB TERMINATED.  '
IBC201   DC    C'IBC201W COMMAND REJECT  '
IBC202   DC    C'IBC202A INTERV. REQUIRED'
IBC203   DC    C'IBC203W BUS OUT CHECK   '
IBC204   DC    C'IBC204W EQUIPMENT CHECK '
IBC205   DC    C'IBC205W DATA CHECK      '
IBC206   DC    C'IBC206W OVERRUN         '
IBC207   DC    C'IBC207W FLAGGED TRACK.  '
IBC208   DC    C'IBC208W DATA CONV. CHECK'
IBC209   DC    C'IBC209W END OF CYLINDER '
IBC210   DC    C'IBC210W INVALID ADDRESS '
IBC211   DC    C'IBC211W NOT AVAILABLE   '
IBC212   DC    C'IBC212W READ DATA CHECK '
IBC213   DC    C'IBC213W COUNT FIELD CHEK'
IBC214   DC    C'IBC214W TRACK OVERRUN   '
IBC215   DC    C'IBC215W FILE PROTECTED  '
IBC216   DC    C'IBC216W DASD-END OF FILE'
IBC217   DC    C'IBC217W NO RECORD FOUND '
IBC218   DC    C'IBC218W  INVALID ERROR  '
IBC219   DC    C'IBC219W  WRONG ERROR    '
IBC220   DC    C'IBC220W CHAN. CTRL ERROR'
IBC221   DC    C'IBC221W INTERFACE ERROR '
IBC222   DC    C'IBC222W CHAN. DATA CHECK'
IBC223   DC    C'IBC223W DASD OVERFLOW   '
IBC224   DC    C'IBC224W PROGRAM CHECK   '
IBC225   DC    C'IBC225W PROTECTION CHECK'
IBC226   DC    C'IBC226W UNIT EXCEPTION  '
IBC227   DC    C'IBC227W INCORRECT LENGTH'
IBC228   DC    C'IBC228W CHAINING CHECK  '
IBC229   DC    C'IBC229W COMMAND SEQ. ERR'
IBC230   DC    C'IBC230W SEEK CHECK ERROR'
IBC231   DC    C'IBC231W WRITE DATA CHECK'
IBC232   DC    C'IBC232W TAPE--LOAD POINT'
IBC233   DC    C'IBC233W NOISE RECORD    '
IBC234   DC    C'IBC234W MISSING ADR-MARK'
IBC235   DC    C'IBC235W BLANK TRACK     '
DCNAME   DC    C'NAME'
DCMODE   DC    C'MODE'
DCDUAL   DC    C'DUAL'
DCSER#   DC    C'SER='
DCLABL   DC    C'LABEL='
DCDCEL   DC    C'DCELL='
DCC16    DC    C'16'
         ORG   *-1                                               *GPP*
DCC62    DC    C'62'         DEN=62 50                           *GPP*
DCNAM#   DC    C',NAME='
DCDISK   DC    C'DISK='
DCDRUM   DC    C'DRUM='
DCTAPE   DC    C'TAPE='
DCSER    DC    C'SER'
DCSEC    DC    C'SEC'
DCDEN    DC    C'DEN'
DCBIN    DC    C'BIN'
DCNLAB   DC    C'NOLABEL'
DCDISP   DC    C'DISPLAY'
DCOLD#   DC    C'OLD ID='
DCNEW#   DC    C'NEW ID='
DCSEC#   DC    C',SEC='
DCHELP   DC    C'HELP'       HELP REQUEST                       *GPP*
         SPACE 2
UCB      DSECT ,             MINI-UCB
UCBTYP   DC    X'0'          DEVICE TYPE
UCBTDA   EQU   1 .           DISK
UCBTTA   EQU   6 .           TAPE
UCBTCO   EQU   0 .  CONSOLE 1052/3210/3215 (FAILS WITH = 7)     *GPP*
UCBTRD   EQU   8 .           CARD READER 2540 ...
UCBFLG   DC    X'0'          PROCESSING FLAG
UCBCUU   DC    H'0'          UNIT ADDRESS
UCBCAW   DC    A(0)          LAST/CURRENT CAW
UCBPSW   DC    D'0'          I/O OLD PSW
UCBCSW   DC    D'0'          LAST/CURRENT CSW
UCBSEN   DC    XL8'0'        SENSE BYTES
         SPACE
DRIPCLIP CSECT ,             BACK TO MAIN CONTROL SECTION
         ORG   DRIPCLIP+X'4000'   UNBASED STORAGE
         SPACE 1
*        3270 OUTPUT BUFFER
*
CRTBUF   DC    X'C31140401D60' KBY/MDT RESTORE, SBA,1,1 SF,P    *GPP*
CRTLIN1  DC    CL79' ',X'11C1501D60' DATA / SBA 2,1 SF,P        *GPP*
CRTLIN2  DC    CL79' ',X'11C2601D60' DATA / SBA 3,1 SF,P        *GPP*
         DC    CL79' ',X'11C3F01D60' DATA / SBA 4,1 SF,P        *GPP*
         DC    CL79' ',X'11C5401D60' DATA / SBA 5,1 SF,P        *GPP*
         DC    CL79' ',X'11C6501D60' DATA / SBA 6,1 SF,P        *GPP*
         DC    CL79' ',X'11C7601D60' DATA / SBA 7,1 SF,P        *GPP*
         DC    CL79' ',X'11C8F01D60' DATA / SBA 8,1 SF,P        *GPP*
         DC    CL79' ',X'114A401D60' DATA / SBA 9,1 SF,P        *GPP*
         DC    CL79' ',X'114B501D60' DATA / SBA 10,1 SF,P       *GPP*
         DC    CL79' ',X'114C601D60' DATA / SBA 11,1 SF,P       *GPP*
         DC    CL79' ',X'114DF01D60' DATA / SBA 12,1 SF,P       *GPP*
         DC    CL79' ',X'114F401D60' DATA / SBA 13,1 SF,P       *GPP*
         DC    CL79' ',X'1150501D60' DATA / SBA 14,1 SF,P       *GPP*
         DC    CL79' ',X'11D1601D60' DATA / SBA 15,1 SF,P       *GPP*
         DC    CL79' ',X'11D2F01D60' DATA / SBA 16,1 SF,P       *GPP*
         DC    CL79' ',X'11D4401D60' DATA / SBA 17,1 SF,P       *GPP*
         DC    CL79' ',X'11D5501D60' DATA / SBA 18,1 SF,P       *GPP*
         DC    CL79' ',X'11D6601D60' DATA / SBA 19,1 SF,P       *GPP*
CR4LINL  DC    CL79' '       LAST LINE ON 4341                   84127
CR4BUFL1 EQU   *-CRTBUF                                          84127
         DC    X'11D7F01D60' DATA / SBA 20,1 SF,P                84127
         DC    CL79' ',X'11D9401D60' DATA / SBA 21,1 SF,P       *GPP*
         DC    CL79' ',X'115A501D60' DATA / SBA 22,1 SF,P       *GPP*
         DC    CL79' ',X'115B601DE8' DATA / SBA 23,1 SF,(P,I)   *GPP*
CRTLINL  DC    CL79' ',C'>',X'115CF11D4013' DATA/SBA 24,2 SF,U IC *GPP*
CRTBUFL  EQU   *-CRTBUF                                         *GPP*
         DC    C'HIT ENTER TO PROCEED'  WAIT MESSAGE            *GPP*
CRTBUFW  EQU   *-CRTBUF      WAIT MESSAGE LENGTH                *GPP*
         SPACE 1                                                *
CR4BUF   DC    C'>',X'11D7F11D4013' DATA/SBA 20,2 SF,U IC        84127
CR4BUFL2 EQU   *-CR4BUF                                          84127
         DC    C'HIT ENTER TO PROCEED'  WAIT MESSAGE             84127
CR4BUFW  EQU   *-CR4BUF      WAIT MESSAGE LENGTH                *
         SPACE 2                                                *GPP*
*        3066 BUFFER                                            *GPP*
CR6BUF   DS    0D            3066 SCREEN BUFFER                 *GPP*
CR6LIN1  DC    CL80' '       FIRST DATA LINE                    *GPP*
CR6LIN2  DC    32CL80' '     INTERMEDIATE DATA LINES            *GPP*
CR6LINL  DC    CL80' '       CURRENT/LAST LINE                  *GPP*
         DC    C'>'          INPUT LINE POINTER                 *GPP*
CR6BUFL  EQU   *-CR6BUF      LENGTH OF BUFFER                   *GPP*
         DC    C' ***  HIT ENTER TO PROCEED'                    *GPP*
CR6BUFW  EQU   *-CR6BUF      WAIT MESSAGE LENGTH                *GPP*
         SPACE 1                                                *GPP*
         END   STARTUP  MANDATORY ENTRY POINT FOR DRIP LOADER
