DLNK     TITLE '     D E L I N K 0   '
*$DOC@*****************************************************************
*                                                                     *
*  DELINK0 - SYSTEM/360 OS FE SERVICE AID PROGRAM.                    *
*            PRODUCES AN OBJECT MODULE FROM A LOAD MODULE.            *
*            CREATES ESD FOR NON-EDITABLE MODULES.                    *
*            EXPANDS MODULE SIZE FOR PATCH AREA.                      *
*                                                                     *
*  SOURCE CREATED BY BILL GODFREY, PLANNING RESEARCH CORPORATION,     *
*  BY DISASSEMBLING THE DELINK0 OBJECT DECK AND FIXING UP THE         *
*  DISASSEMBLED CODE, WHICH HAD NO COMMENTS OR MEANINGFUL NAMES.      *
*  MANY AREAS STILL NEED FIXING UP, BUT THE CODE MATCHES THE          *
*  OS DELINK0 OBJECT DECK.                                            *
*                                                                     *
*  DELINK IS DESCRIBED IN THE OS/360 FE HANDBOOK S229-3169.           *
*                                                                     *
*  //DELINK  EXEC PGM=DELINK                                          *
*  //SYSPRINT DD  SYSOUT=A                       OUTPUT MESSAGES      *
*  //SYSLIB   DD  DSN=ANY.LOAD.LIBRARY,DISP=SHR  INPUT LIBRARY        *
*  //SYSPUNCH DD  SYSOUT=B                       OUTPUT OBJECT DECK   *
*  //SYSIN    DD  *                              INPUT CONTROL CARD   *
*   MEMBER CSECT                                                      *
*  /*                                                                 *
*                                                                     *
*  ONLY ONE CSECT MAY BE PUNCHED PER CONTROL CARD.                    *
*                                                                     *
*  IF COLUMN 1 OF THE CONTROL CARD IS A '>' (GREATER THAN SIGN)       *
*  THEN THE CSECT SIZE IN THE PUNCHED DECK WILL BE EXPANDED.          *
*  THE NEW SIZE MUST BE SPECIFIED FOLLOWING THE CSECT NAME, AS        *
*  8 DECIMAL DIGITS OR X'NNNNNN' IN HEX, AND MUST BE GREATER          *
*  THAN THE CURRENT LENGTH OF THE CSECT.                              *
*  FOR EXAMPLE:    > MEMBER CSECT X'0A10'                             *
*                                                                     *
*  IF THE CSECT NAME IS OMITTED, IT IS ASSUMED TO BE THE SAME         *
*  AS THE MEMBER NAME. CSECT NAME IS REQUIRED IF > IN COL 1.          *
*                                                                     *
*  NOTE: AT LINKEDIT TIME YOU WILL GET AN UNRESOLVED EXTERNAL         *
*        OF 'FESNAP'. THIS IS OK AND DOES NOT MEAN ANYTHING.  JDM     *
*                                                                     *
*$DOC$*****************************************************************
         SPACE
         PRINT NOGEN         SAVE A TREE                      GYP91129
DELINK0  CSECT
*CRUD*   EXTRN FESNAP                                         GYP91137
         STM   R14,R12,12(R13)
         BALR  R12,0               BASE REGISTER
         USING *,R12
         ST    R13,SAVE+4
         LA    R13,SAVE
         USING SAVE,R13
         LA    R9,SYSPRINT
         SPACE
*        OPEN  ((R9),OUTPUT)   OPEN SYSPRINT
         CNOP  0,4
         BAL   1,*+8
         DC    A(0)
         ST    R9,0(1)
         MVI   0(1),X'8F'
         SVC   19
         SPACE
         TM    48(R9),X'10'    OPEN SUCCESSFUL?
         BZ    ABORT1         NO - BRANCH
         LA    R9,SYSIN
         LA    R10,SYSLIB
         LA    R11,SYSPUNCH
         SPACE
*        OPEN  ((9),INPUT,(10),INPUT,(11),OUTPUT)
         CNOP  0,4
         BAL   1,*+16
         DC    3A(0)
         ST    R9,0(1)
         ST    R10,4(1)
         ST    R11,8(1)
         MVI   8(1),X'8F'
         SVC   19
         SPACE
         TM    48(R9),X'10'        WAS SYSIN OPEN SUCCESSFUL
         BZ    MESSG1              NO - UNABLE TO OPEN SYSIN
         TM    48(R10),X'10'       WAS SYSLIB OPEN SUCCESSFUL
         BZ    MESSG0              NO - UNABLE TO OPEN SYSLIB
         TM    48(R11),X'10'       WAS SYSPUNCH OPEN SUCCESSFUL
         BZ    MESSG2              NO - UNABLE TO OPEN SYSPUNCH
         XC    SWX(2),SWX
NEXTCARD BAL   R10,INIT00          INITIALIZE POINTERS
         LA    R9,SYSIN            READ DCB
         L     R10,PTRVW           READ BUFFER
         LA    R11,80              READ LENGTH
         BAL   R8,READ             READ A CARD FROM SYSIN
         OI    SWX,CTLIN           INDICATE THAT SYSIN CONTAINS DATA
         MVC   LINE+1(80),0(10)    MOVE CARD IMAGE TO REPORT LINE
         BAL   R6,REPORT           PRINT CARD IMAGE
         CLI   0(R10),X'6E'        DOES COL 1 = '>' FOR EXPAND?
         BNE   *+12                NO, SKIP SWITCH
         OI    FLAG2,EXPAND        YES - SET SWITCH
         LA    R10,1(R10)           AND POINT TO COLUMN 2
         LA    R5,8                MAXIMUM OPERAND LENGTH
         LA    R14,NEXTCOL         WHERE TO RETURN FROM NOTBLNK
         LA    R3,71
         LR    R2,R10
         LA    R4,BLDLMEM
NEXTWRD  CLI   0(R2),X'40'         IS THIS A BLANK
         BNE   NOTBLNK             NO, GO APPEND IT TO MEMBER NAME
NEXTCOL  LA    R2,1(R2)            POINT TO NEXT CHARACTER
         BCT   R3,NEXTWRD          CONTINUE LOOP
         TM    SWX,PARSEM          WAS MEMBER NAME FOUND
         BZ    MESSG10             NO, BLANK CARD, BRANCH
BLDL     LA    1,SYSLIB
         LA    0,BLDLL
         SVC   18                  ISSUE BLDL SVC
         STC   15,BLDLRC           STORE RETURN CODE FROM BLDL
         CLI   BLDLRC,X'00'        BLDL SUCCESSFUL?
         BNE   MESSG11             NO - MEMBER NOT FOUND
         BAL   8,POINT             YES, POINT TO MEMBER
         SPACE
         TM    SWX,CSPEC           WAS CSECT SPECIFIED?
         BO    *+10                YES - BRANCH AROUND NEXT
         MVC   CSECT(8),BLDLMEM    NO,  CSECT = MEMBER NAME
         SPACE
         LA    9,SYSLIB
         MVC   SUFFIX(4),CSECT
         LA    R5,NXTESD           R5 WILL POINT HERE OR AT EDITNOTR
         L     10,PTRESD
         LA    11,256
         SPACE
         TM    ATTRIB+1,X'08'      MODULE MARKED NOT-EDITABLE?
         BZ    READCESD            NO - BRANCH
         L     R7,EDITNOTA         POINT TO NOT-EDITABLE ROUTINE
         BR    R7                  GO PROCESS NOT-EDITABLE
         SPACE
READCESD BAL   R8,READ         READ A BLOCK INTO WHERE PTRESD POINTS
         CLI   0(R10),X'20'        IS IT A CESD RECORD?
         BE    YESCESD             YES - BRANCH
         TM    0(R10),X'03'        IS IT CONTROL (01) OR RLD (02 06 0E)
         BM    CCWRED              YES - BRANCH
         B     READCESD            NEITHER - GO READ ANOTHER
         SPACE
YESCESD  LH    R8,4(R10)           R8  =  ESDID OF 1ST ITEM
         LH    R7,6(R10)           R7 = NO OF BYTES OF ESD DATA
         BCTR  R7,0                LENGTH MINUS 1 FOR EX
         EX    R7,MVCESD           MOVE ESD DATA TO WHERE R10 POINTS
         LA    R7,1(R7)            RESTORE LENGTH
ESDCLC   CLC   CSECT,0(R10)        DOES CSECT = SYMBOL IN ESD?
         BE    CSEFOUND            YES - BRANCH
         TM    SWX08,X'08'         ESD ENTRY ALREADY FOUND?
         BO    ESDARF              YES - BRANCH
NXTESD   LA    R8,1(R8)            ADD 1 TO ESDID
         LA    R10,16(R10)         POINT TO NEXT ESD ENTRY IN RECORD
         SH    R7,H16              DECREMENT RECORD LENGTH
         LTR   R7,R7               ANY MORE ESD ENTRIES THIS RECORD?
         BP    ESDCLC              YES - BRANCH
         ST    R10,PTRESD          SAVE ADDRESS OF END OF ESD TABLE
         C     R10,PTRBLK          HAS TABLE OVERLAYED BLK AREA?
         BH    MESSG12             YES - TOO BIG TO HANDLE - BRANCH
         B     READCESD            GO READ ANOTHER RECORD
MVCESD   MVC   0(1,R10),8(R10)     MOVE ESD ENTRIES TO R10
ESDARF   CH    R8,ESDID8           ESD EQUAL?
         BNE   ESDNEQ              NO - BRANCH
         NI    RECID,X'00'
         B     ESDEQL
ESDNEQ   TM    RECID,X'FF'
         BCR   1,R5
         TM    8(10),X'03'
         BCR   12,R5  Z OR MIXED   BR IF ANYTHING BUT LR OR NULL
         TM    8(10),X'07'         NULL?
         BCR   1,R5                YES - BRANCH
         CLC   ESDID8,14(10)       IS ESDID SAME AS LR ID?
         BCR   7,R5                NO - BRANCH
         MVC   PTR448+1(3),9(10)   YES - SAVE LR ADDRESS
         NI    PTR448,X'00'
         L     6,PTR448
         S     6,ORIGIN
         ST    6,PTR452            SAVE ABSOLUTE LR ADDRESS
         MVI   PTR452,X'01'        LR IS 01 IN OBJ, 03 IN LOAD MODULE
         MVC   14(2,10),PTR402
         B     A00278
A001D6   CH    8,14(10)
         BL    A00208
         LH    6,14(10)
         STH   6,ESDID8
         LR    8,6
         BCTR  6,0
         SLL   6,4
         A     6,PTRVW
         SR    10,6
         AR    7,10
         LR    10,6
ESDEQL   MVC   CSECT,0(10)
         MVC   SUFFIX(4),0(10)
         B     A00258
A00208   MVC   ESDID8,14(10)
         OI    RECID,X'FF'
         BR    R5
         SPACE
CSEFOUND TM    8(R10),X'07'        NULL ENTRY?
         BCR   1,R5                YES - IGNORE
         TM    SWX08,X'08'         BEEN HERE ALREADY?
         BO    DUPESD              YES - BRANCH
         MVC   CSESIZ+1(3),13(R10) SAVE CSECT SIZF 0258
         TM    FLAG2,EXPAND+EXP2   TO BE EXPANDED?
         BZ    NOEXPN              NO - BRANCH
         MVI   CSESIZ,X'00'
         MVC   13(3,R10),EXPVAL+1  REPLACE OLD SIZE WITH NEW
         L     R6,EXPVAL           R6 = NEW EXPANDED SIZE
         S     R6,CSESIZ           R6 = LENGTH OF EXTENSION
         BC    12,MESSG13  Z OR M  BAD NUMBER ON EXTEND CARD
         STH   R6,EXPDIF
NOEXPN   EQU   *
         STH   R8,ESDID8
         MVC   BLDLRC,8(R10)       SAVE ESD TYPE (SD,LR,PC,ER...)
         OI    SWX08,X'08'
A00258   MVC   ORIGIN+1(3),9(R10)  SAVE START ADDRESS
         MVC   PTR452,PTR432
         MVN   PTR452(1),8(R10)
         MVC   SEGMNO,12(R10)      SAVE SEGMENT NUMBER
         TM    8(R10),X'0F'        SD IS 00, ALL OTHERS MIXED
         BM    MESSG6              ESD NAME NOT SECTION DEFINITION
A00278   OI    SWX01,X'01'
         TM    ATTRIB,X'20'  IN OVERLAY ?                     GYP91137
         BNZ   NOSEGMNT      YES; KILL SEGMENT                GYP91137
         CLI   8(R10),X'00'  SD ?                             GYP91137
         BE    CKSEGMNT      YES; CHECK MODE                  GYP91137
         CLI   8(R10),X'05'  COMMON ?                         GYP91137
         BE    CKSEGMNT      YES; CHECK MODE                  GYP91137
         CLI   8(R10),X'04'  PRIVATE SECTION ?                GYP91137
         BNE   NOSEGMNT      NO; NO SEGMENT OR MODE           GYP91137
CKSEGMNT TM    12(R10),X'06'  AMODE/RMODE OTHER THAN 24/24 ?  GYP91137
         BNZ   DOSEGMNT      YES; LEAVE MODES                 GYP91137
NOSEGMNT MVI   12(R10),X'40'       BLANK SEGMENT NUMBER       GYP91137
DOSEGMNT L     R6,PTRCOL17                                    GYP91137
         TM    8(R10),X'03'        IS TYPE LR?
         BO    *+8                 YES - BRANCH
         OI    SWX02,X'02'
         MVC   0(16,R6),0(R10)     MOVE ESD ENTRY TO ESD CARD
         MVC   8(4,R6),PTR452      MOVE ESD TYPE AND ADDRESS
         MVC   14(2,R10),PTR402
         OI    12(R10),X'FF'
         LA    R6,16(R6)           POINT TO NEXT AVAIL ON ESD CARD
         LH    R4,CCTESD
         LA    R4,1(R4)            ADD 1 TO ESD'S THIS CARD
         STH   R4,CCTESD
         C     R6,PTRCOL65         ESD CARD NOW FULL?
         BE    PUNESD              YES - BRANCH
         ST    R6,PTRCOL17
         TM    BLDLRC,X'05'        COMMON
         BO    PUNEND              YES, BRANCH
         BR    R5
         EJECT
*              * * *   PUNCH AN ESD CARD   * * *
         SPACE
PUNESD   L     R4,PTROBJ
         MVC   0(4,R4),ESDCON
         TM    SWX02,X'02'
         BZ    *+10
         MVC   14(2,R4),CNTESX
         NI    SWX,B'11111100'
         LH    R2,CCTESD           GET NO. OF ESD'S THIS CARD
         SLL   R2,4                MULTIPLY BY 8
         STH   R2,10(R4)           STORE IN COLUMNS 11-12
         STM   R9,R11,STM911
         LA    R9,SYSPUNCH
         LR    R10,R4
         LA    R11,80
         BAL   R6,SEQUENCE
         LH    R3,SEQNUM
         LA    R3,1(R3)            ADD 1 TO SEQNUM
         STH   R3,SEQNUM
         TM    SWX04,X'04'         CHECK REQUIRED?
         BZ    *+8                 NO - BRANCH
         BAL   R6,CHECK            ISSUE CHECK ON SYSPUNCH
         BAL   R6,WRITE            PUNCH A CARD
         SRL   R2,4                GET NO. OF ESD'S THIS CARD
         LH    R3,CNTESX
         LR    R6,R4
PUNES1   CLI   24(R6),X'01'        LD TYPE?
         BE    *+8                 YES - DON'T COUNT - BRANCH
         LA    R3,1(R3)            COUNT NO OF ESD'S EXCEPT LD'S
         LA    R6,16(R6)
         BCT   R2,PUNES1
         STH   R3,CNTESX           SAVE NO. OF ESD'S EXCEPT LD'S
         STH   R2,CCTESD           ZERO OUT NO. OF ESD'S THIS CARD
         LM    R9,R11,STM911
         BAL   R6,SWAPPTRS
         LA    R4,16(R4)
         ST    R4,PTRCOL17         RESET POINTER
         LA    R4,48(R4)
         ST    R4,PTRCOL65         RESET POINTER
         BR    R5
         EJECT
*              * * *   POINT ROUTINE    * * *
         SPACE
POINT    LA    1,SYSLIB
         LA    15,BLDLMEM+8        ADDRESS OF TTR IN BLDL AREA
         MVC   0(4,1),0(15)        MOVE TTR INTO DCB
         LR    0,1
         L     15,84(0,1)
         BAL   14,4(15)
         BR    R8
         SPACE 2
*              * * *   OVERLAY POINT ROUTINE   * * *
         SPACE
POINTOVL MVC   BLDLTTR(3),BLDLTTRO    MOVE SCATTER/OVLY TTR
         BAL   8,POINT
         LA    11,1024
         BAL   8,READ
         SR    8,8
         IC    8,SEGMNO
         BCTR  8,0
         SLL   8,2
         AR    8,10
         MVC   BLDLTTR(3),0(8)
         BAL   8,POINT
         LA    11,260
         BAL   8,READ
         BR    R4
         EJECT
*              * * *   CONTROL CARD PARSING   * * *
         SPACE
NOTBLNK  MVC   0(1,R4),0(R2)    MOVE BYTE INTO BLDL MEMBERNAME/CSECT
         OI    SWX,PARSEM     INDICATE PRESENCE OF MEMBERNAME
         LA    R4,1(R4)         BUMP BLDL MEMBERNAME POINTER
         CLI   1(R2),X'40'         LAST CHARACTER?
         BE    DUNCOM              YES, BRANCH
         BCTR  R5,R14              NO, RETURN TO NEXTCOL
         B     MESSG7              NO, AND WE HAVE 8 ALREADY
DUNCOM   TM    SWX,PARSEC          PROCESSING CSECT NAME?
         BZ    DUNMEM              NO - END OF MEMBER NAME
         OI    SWX,CSPEC           INDICATE CSECT NAME PRESENT
         TM    FLAG2,EXPAND+EXP2   EXPAND SPECIFIED?
         BZ    BLDL                NO - BRANCH
         BO    DUNEXP              YES - AND ALREADY PARSED TOO
         OI    FLAG2,EXP2          INDICATE EXPAND BEING PARSED
         LA    R4,CSESIZ           POINT TO AREA TO RECEIVE SIZE
         LA    R5,10
         BCTR  R5,R14         BACK TO NEXTCOL
DUNEXP   CLI   CSESIZ,C'X'   IS IT X'NNNN'?
         BE    EXPEVX         YES - BRANCH
         LA    R4,9
         SR    R4,R5
         CH    R4,EXPDGM           MAX # OF DIGITS - 1
         BNL   MESSG13
         STC   R4,EXPDGL           NO. OF DIGITS
         LA    R4,1(R4)
         LA    1,CSESIZ
EXPEVD   TM    0(1),X'F0'
         BNO   MESSG13
         LA    1,1(1)
         BCT   R4,EXPEVD
         OC    *+7(1),EXPDGL
         PACK  EXPVAL(8),CSESIZ(1)
         CVB   R4,EXPVAL
         ST    R4,EXPVAL
         B     BLDL
DUNMEM   LA    R4,CSECT            POINT TO AREA TO RECEIVE CSECT
         LA    R5,9
         OI    SWX,PARSEC
         BCTR  R5,R14         BACK TO NEXTCOL
         EJECT
SWAPPTRS MVC   PTROBJ(4),PTROB
         ST    R4,PTROB
         L     R4,PTROBJ
         BR    R6
         SPACE 3
*                    PROCESS X'NNNN' PARAMETER
         SPACE
EXPEVX   LA    4,7
         LA    10,EXPVAL
         SR    8,8
         SR    4,5
         LA    1,CSESIZ
EXPEV2   TM    2(1),X'F0'     NUMERIC?
         BO    EXPEV4         YES - BRANCH
         CLI   2(1),X'C1'     LESS THAN LETTER 'A'?
         BL    MESSG13        YES - ERROR - BRANCH
         CLI   2(1),X'C6'     GREATER THAN LETTER 'F'?
         BH    MESSG13        YES - ERROR - BRANCH
         IC    9,2(1)
         AH    9,PTR406
EXPEV3   SLL   9,28
         SLDL  8,4
         LA    1,1(1)
         BCT   4,EXPEV2
         ST    8,EXPVAL    STORE X'NNNN' VALUE
         B     BLDL
EXPEV4   IC    9,2(1)
         B     EXPEV3
         EJECT
*              * * * READ-AND-CHECK ROUTINE * * *
         SPACE
*              REGISTER USAGE
*                 8      RETURN ADDRESS
*                 9      DCB ADDRESS
*                10      RECORD AREA ADDRESS
*                11      RECORD LENGTH
         SPACE
*        READ
         CNOP  0,4
READ     BAL   1,*+24
READECB  DC    X'00000000'
         DC    X'00800000'
         DC    2F'0'
         DC    X'00000000'
         ST    R9,8(1)             STORE DCB ADDRESS
         ST    R10,12(1)           STORE AREA ADDRESS
         STH   11,6(1)             STORE LENGTH
         L     15,8(1)             GET DCB ADDRESS
         L     15,48(0,15)         GET READ ROUTINE ADDRESS
         BALR  14,15               CALL READ
         SPACE
*        CHECK
         LA    1,READECB
         L     14,8(0,1)           GET DCB ADDRESS
         L     15,52(0,14)         GET CHECK ROUTINE ADDRESS
         BALR  14,15               CALL CHECK
         SPACE
         BR    R8                  RETURN
         EJECT
*              * * *  WRITE ROUTINE  * * *
         SPACE
*              REGISTER USAGE
*                 6      RETURN ADDRESS
*                 9      DCB ADDRESS
*                10      RECORD AREA ADDRESS
*                11      RECORD LENGTH
         SPACE
*        WRITE
         CNOP  0,4
WRITE    BAL   1,*+24
WRITECB  DC    X'00000000'
         DC    X'00200000'
         DC    2F'0'
         DC    X'00000000'
         ST    R9,8(1)             STORE DCB ADDRESS
         ST    R10,12(1)           STORE AREA ADDRESS
         STH   R11,6(1)            STORE LENGTH
         L     15,8(1)
         L     15,48(0,15)
         BALR  14,15
         SPACE
         OI    SWX04,X'04'         INDICATE CHECK REQUIRED
         BR    R6                  RETURN
         SPACE
*              * * * CHECK ROUTINE (FOR WRITE) * * *
         SPACE
*        CHECK WRITECB
CHECK    LA    1,WRITECB
         L     14,8(0,1)
         L     15,52(0,14)
         BALR  14,15
         LR    R15,R6
         NI    SWX04,255-X'04'     INDICATE CHECK NOT REQUIRED
         L     R6,PTROB
         MVI   0(R6),X'40'
         MVC   1(71,R6),0(R6) BLANK OUT OBJ AFTER PUNCH
         LR    R6,R15
         BR    R6
         EJECT
*              * * *   CONTROL OR RLD WAS JUST READ  * * *
         SPACE
CCWRED   TM    SWX08,X'08'         CSECT FOUND YET?
         BZ    MESSG8              NO - TEXT FOR CSECT NOT FOUND
         ST    10,PTRTXT           SAVE RECORD ADDRESS
         MVC   RECID,0(10)         SAVE RECORD TYPE
         S     10,PTRVW            GET LENGTH OF ESD TABLE
         LR    7,10                 INTO R7
         LA    8,1                 SET ESDID = 1
         L     10,PTRVW
         B     ESDCLC
DUPESD   L     10,PTRTXT
         TM    ATTRIB,X'20'        OVERLAY?
         BZ    A00582              NO - BRANCH
         CLI   SEGMNO,X'01'        FIRST SEGMENT?
         BE    A00582              YES - BRANCH
         BAL   4,POINTOVL
A00582   LH    4,6(10)             GET LEN OF POSSIBLE RLD DATA
         LH    6,4(10)             GET LEN OF CONTROL INFO
         SRL   6,2                 DIVIDE BY 4 = NO. OF ENTRIES
         LA    4,16(4,10)          POINT TO CONTROL DATA
         SR    7,7
A00594   TM    FLAG2,FROMNE
         BZ    A005A6
         NI    FLAG2,255-FROMNE
         MVC   ESDID8,0(4)
A005A6   CLC   ESDID8,0(4)
         BE    A005F0
         TM    SWY40,X'40'
         BO    PUNEND
         AH    7,2(4)
         LA    4,4(4)
         BCT   6,A00594
         TM    0(10),X'0C'         END OF SEGMENT OR MODULE?
         BC    5,PUNEND            YES - BRANCH IF ONES OR MIXED
         LA    11,1
         BAL   8,READ
         LA    11,260
A005D8   BAL   8,READ
         TM    0(10),X'01'         CCW RECORD?
         BO    A00582              YES - BRANCH
         TM    0(10),X'0C'         END OF SEGMENT OR MODULE?
         BC    5,PUNEND            YES - BRANCH IF ONES OR MIXED
         B     A005D8              NO - GO READ ANOTHER
A005F0   OI    SWY40,X'40'
         MVC   RECID,0(10)
         LH    11,14(10)           GET LEN OF NEXT RECORD FROM CCW
         MVC   TEXLEN,2(4)
         CLC   14(2,10),2(4)
         BE    A00618
         MVC   TEXLEN,CSESIZ+2
         OI    SWY20,X'20'
A00618   LA    10,260(10)          POINT TO AREA FOR NEXT READ
A0061C   BAL   8,READ
         TM    SWY20,X'20'
         BO    A00630
         ST    10,PTRTEX
         B     A00638
A00630   AR    7,10
         ST    7,PTRTEX
         SR    7,7
A00638   MVC   HOLDA3+1(3),9(5)
         NI    HOLDA3,X'00'
         TM    RECID,X'0C'         EOS? EOM?
         BZ    A00652
         NI    RECID,X'FE'
         B     PUNTX1
A00652   AR    10,11
         LA    10,4(10)
         N     10,REDUCE4
         LA    11,260
         ST    10,PTR492
         LA    8,260(10)
         C     8,PTROB
         BH    A00CCC
         C     8,PTROBJ
         BH    A00CCC
         BAL   8,READ
         TM    0(10),X'02'         RLD?
         BZ    PUNTX0              NO - BRANCH
         L     2,ORIGIN
         AH    2,2(4)
         ST    2,PTR480
A00690   LH    3,6(10)             GET LEN OF RLD DATA
         LA    2,16(10)            POINT TO RLD DATA
A00698   TM    SWY20,X'20'
         BZ    A006B4
         CLC   5(3,2),ORIGIN+1
         BL    A007A6
         CLC   5(3,2),PTR480+1
         BH    A007A6
A006B4   MVC   PTR448+1(3),5(2)
         OI    SWY08,X'08'
         NI    PTR448,X'00'
         L     1,PTR448
         S     1,ORIGIN
         ST    1,PTR448
         MVC   5(3,2),PTR448+1
         AR    1,7
         A     1,PTRTEX
         TM    4(2),X'0C'          4-BYTE?
         BO    A00716              YES - BRANCH
         TM    4(2),X'08'          3-BYTE?
         BZ    MESSG9              NO - ERROR - ADCON NOT 3 OR 4
         TM    SWY80,X'80'
         BO    A006F6
         BAL   8,A007BE
A006F6   MVC   PTR448+1(3),0(1)
         NI    PTR448,X'00'
         L     5,PTR448
         S     5,PTR476
         ST    5,PTR448
         MVC   0(3,1),PTR448+1
         B     A00752
A00716   MVC   PTR448,0(1)
         TM    SWY80,X'80'
         BO    A00728
         BAL   8,A007BE
A00728   TM    4(2),X'10'          V-TYPE ADDRESS?
         BO    A0074C              YES - BRANCH
         MVC   PTR448,0(1)
         L     5,PTR448
         S     5,PTR476
         ST    5,PTR448
         MVC   0(4,1),PTR448
         B     A00752
A0074C   MVC   0(4,1),PTR432
A00752   TM    4(2),X'01'          DOES NEXT RLD HAVE SAME REL, POS?
         BZ    A00762              NO - BRANCH
         OI    SWY80,X'80'
         B     A0076E
A00762   NI    SWY80,X'7F'
         LA    2,4(2)              POINT PAST REL, POS
         SH    3,H4                DECREMENT LENGTH
A0076E   LA    2,4(2)              POINT TO NEXT FLAG, ADDRESS
         SH    3,H4                DECREMENT LENGTH
         LTR   3,3                 END OF RLD DATA?
         BP    A00698              NO - BRANCH
         TM    0(10),X'01'         CCW DATA ALSO PRESENT?
         BO    A0079E              YES - BRANCH
         TM    0(10),X'0C'         EOS? EOM?
         BC    5,A0079E            YES - BRANCH IF ONES OR MIXED
         AR    10,11
         OI    SWY10,X'10'
         BAL   8,READ
         TM    0(10),X'02'         RLD?
         BO    A00690              YES - BRANCH
A0079E   ST    10,PTRTXT
         B     PUNTX0
A007A6   OI    0(2),X'FF'
A007AA   TM    4(2),X'01'
         BZ    A00752
         LA    2,4(2)
         SH    3,H4
         B     A007AA
A007BE   STM   7,10,STM710
         LH    4,0(2)
         BCTR  4,0
         SLL   4,4
         A     4,PTRVW
         MVC   PTR476+1(3),9(4)
         TM    12(4),X'FF'
         BO    A00836
         OI    SWX02,X'02'
         LR    10,4
         TM    8(4),X'05'
         BC    12,A00804            BRANCH IF ZEROS OR MIXED
         CLC   MESSAGES+22(8),0(4)  SPACES?
         BNE   A00804
         MVC   PTR452+1(3),PTR432
         MVI   PTR452,X'05'
         B     A00816
A00804   LA    8,2
         SLL   8,24
         ST    8,PTR452
         XC    13(3,10),13(10)
A00816   LH    7,PTR402
         LA    7,1(7)
         STH   7,PTR402
         STH   7,0(2)
         STM   1,4,STM14
         BAL   5,A00278
         LM    1,4,STM14
         B     A0083C
A00836   MVC   0(2,2),14(4)
A0083C   MVC   2(2,2),PTR396
         LM    7,10,STM710
         BR    R8
         SPACE
*              * * *   PUNCH TXT CARDS   * * *
         SPACE
PUNTX0   MVC   RECID,0(10)
PUNTX1   TM    SWX01,X'01'
         BZ    PUNTX2
         BAL   5,PUNESD
PUNTX2   LA    11,80
         L     7,PTRTEX
         L     4,PTROBJ
         LH    5,TEXLEN            GET TEXT LENGTH
         LTR   5,5
         BM    MESSG13
         LH    2,SEQNUM
         LA    9,SYSPUNCH
A00878   MVC   0(4,4),TXTCON
         MVC   5(3,4),ADDRES+1     MOVE ADDRESS TO COL 6-8
         MVC   10(2,4),H56         MOVE LENGTH 56 TO COL 11-12
         MVC   14(2,4),PTR396      MOVE ESDID TO COL 15-16
         LR    10,4
         BAL   6,SEQUENCE
         CH    5,H56
         BNH   A008D6
         MVC   16(56,4),0(7)       MOVE TEXT TO COL 17-72
         BAL   6,CHECK
         BAL   R6,WRITE
         L     6,ADDRES
         LA    6,56(6)
         ST    6,ADDRES
         LA    2,1(2)              ADD 1 TO SEQNUM
         STH   2,SEQNUM
         BAL   R6,SWAPPTRS
MODLA    LA    7,56(7)
         SH    5,H56
         B     A00878
A008D0   MVC   16(1,4),0(7)
A008D6   LTR   5,5
         BC    12,A00904           BRANCH IF ZERO OR MINUS
         L     6,ADDRES
         AR    6,5
         ST    6,ADDRES
         STH   5,10(4)
         BCTR  5,0
         EX    5,A008D0
         BAL   6,CHECK
         BAL   R6,WRITE
         LA    2,1(2)
         STH   2,SEQNUM
         BAL   R6,SWAPPTRS
A00904   L     10,PTR492
         TM    SWY08,X'08'
         BZ    A00A52
         NI    SWY80,X'F7'
         SR    7,7
         LA    6,68(4)
         MVC   0(4,4),RLDCON
         LA    4,16(4)
A00924   LR    3,10
         LH    5,6(3)
         LA    5,16(5,3)
         LA    3,16(3)
A00932   TM    0(3),X'FF'
         BO    A00A0C
         OI    SWY01,X'01'
         MVC   PTR496(4),0(3)
         MVC   0(8,4),0(3)
         LA    3,4(3)
         LA    4,8(4)
         LA    7,8(7)
         TM    0(3),X'01'
         BO    A00972
A0095E   LA    3,4(3)
         CR    4,6
         BNL   PUNCHRL
         CR    3,5
         BE    A00A2A
         B     A00932
A00972   CR    4,6
         BH    PUNCHRLD
         MVC   0(4,4),4(3)
         LA    3,4(3)
         LA    4,4(4)
         LA    7,4(7)
         TM    0(3),X'01'
         BO    A00972
         B     A0095E
PUNCHRLD TM    0(3),X'01'
         BZ    PUNCHRL
         OI    SWY80,X'80'
PUNCHRL  L     10,PTROBJ
         NI    SWY01,X'FE'
         STH   7,10(10)
         BAL   6,SEQUENCE
         SH    4,H4
         NI    0(4),X'FE'
         LA    2,1(2)
         STH   2,SEQNUM
         BAL   6,CHECK
         BAL   R6,WRITE
         LR    4,10
         BAL   R6,SWAPPTRS
         MVC   0(4,4),RLDCON
         LA    4,16(4)
         LA    6,52(4)
         SR    7,7
         TM    SWY80,X'80'
         BZ    A00A02
         NI    SWY80,X'7F'
         OI    SWY01,X'01'
         MVC   0(4,4),PTR496
         LA    4,4(4)
         LA    7,4(7)
         B     A00972
A00A02   CR    3,5
         BE    A00A2A
         B     A00932
A00A0C   TM    4(3),X'01'
         BO    A00A22
         LA    3,8(3)
         CR    3,5
         BE    A00A2A
         B     A00932
A00A22   LA    3,4(3)
         B     A00A0C
A00A2A   L     10,PTR492
         TM    SWY10,X'10'
         BZ    A00A52
         TM    0(10),X'0D'
         BC    5,A00A52            BRANCH IF ONES OR MIXED
         LA    10,260(10)
         TM    0(10),X'02'
         BZ    A00A52
         ST    10,PTR492
         B     A00924
A00A52   TM    SWY01,X'01'
         BO    PUNCHRL
         TM    SWY20,X'20'
         BO    PUNEND
         TM    RECID,X'01'
         BZ    PUNEND
         NI    SWY10,X'EF'
         SR    7,7
         L     4,8(10)
         LA    4,0(4)
         S     4,ORIGIN
         ST    4,ADDRES
         SR    7,4
         LH    4,6(10)
         LA    4,16(4,10)
         LA    9,SYSLIB
         TM    FLAG2,FROMNE
         BZ    A00AA0
         NI    FLAG2,255-FROMNE
         MVC   ESDID8,0(4)
A00AA0   CLC   0(2,4),ESDID8
         BNE   PUNEND
         LH    11,2(4)
         STH   11,TEXLEN
         L     10,PTRTEX
         L     8,PTROBJ
         LA    8,16(8)
         ST    8,PTRCOL17
         LA    8,48(8)
         ST    8,PTRCOL65
         B     A0061C
PUNEND   TM    SWX01,X'01'
         BZ    A00ADA
         BAL   5,PUNESD
A00ADA   TM    FLAG2,EXPAND+EXP2   EXPAND SPECIFIED?
         BZ    PUNCHEND            NO - BRANCH
         NI    FLAG2,255-(EXPAND+EXP2) YES, SET SWITCHES OFF
         MVI   MODLA+3,X'00'
         MVC   TEXLEN,EXPDIF
         L     4,PTROBJ
         LA    4,16(4)
         ST    4,PTRTEX
         B     PUNTX2
         SPACE
*              * * *  PUNCH THE 'END' CARD  * * *
         SPACE
PUNCHEND L     10,PTROBJ
         MVC   0(4,10),ENDCON
         BAL   6,SEQUENCE
         LA    11,80
         LA    9,SYSPUNCH
         BAL   6,CHECK
         BAL   R6,WRITE            PUNCH THE CARD
         BAL   6,CHECK
         B     NEXTCARD            GO READ NEXT SYSIN CARD
         SPACE
*              * * *   MOVE SEQUENCE NO. TO COL 73-80   * * *
         SPACE
SEQUENCE LH    1,SEQNUM
         CVD   1,PTR448
         UNPK  SUFFIX+4(4),PTR452+2(2)
         OI    SUFFIX+7,X'F0'
         MVC   72(8,10),SUFFIX
         BR    R6
         EJECT
INIT00   TM    SWY04,X'04'
         BO    INIT02
         LA    9,SYSLIB
         LH    2,62(9)        REG 2 = SYSLIB BLKSIZE
         N     2,REDUCE4
         STH   2,HHHALF
         AH    2,GIVBAK
         A     2,F3200
         AH    2,H2048
         LA    2,160(2)
         ST    2,GETRANGE
         SPACE
*        GETMAIN VU,LA=GETRANGE,A=GETREPLY
         BAL   1,*+14
         DC    A(GETRANGE)
         DC    A(GETREPLY)
         DC    X'C000'
         SVC   4
         SPACE
         L     1,GETREPLY          R1 --> GOTTEN CORE
         A     1,GETREPLY+4        R1 --> BOTTOM OF GOTTEN CORE
         SH    1,GIVBAK            R1 --> 4K UP FROM BOTTOM
         ST    1,GETREPLY+4        SAVE NEW BOTTOM ADDRESS
         LH    0,GIVBAK
         SPACE
*        FREEMAIN R,LV=(0),A=(1)
         LR    0,0
         LR    1,1
         SVC   10
         SPACE
         L     2,GETREPLY+4        R2 --> BOTTOM OF GOTTEN CORE
         S     2,GETREPLY          R2  =  LENGTH OF GOTTEN CORE
         SH    2,HHHALF
         SH    2,H2048
         SH    2,H160
         ST    2,F3200
         OI    SWY04,X'04'         DO FREEMAIN AT EOJ
         EJECT
************************************************************
*                                                          *
*        THE GETMAIN AREA IS MAPPED OUT AS FOLLOWS:        *
*                                                          *
*        DESCRIPTION             LENGTH            POINTER *
*        -----------             -----------       ------- *
*                                                          *
*        VARIABLE WORKAREA       3200 MINIMUM      PTRVW   *
*                                                          *
*        BLOCK AREA + 2K         BLKSIZE+2K        PTRBLK  *
*                                                          *
*        DECK AREA 1             80                PTROBJ  *
*                                                          *
*        DECK AREA 2             80                PTROB   *
*                                                          *
************************************************************
         SPACE
INIT02   L     1,GETREPLY
         MVI   BLDLMEM,X'40'
         MVC   BLDLMEM+1(79),BLDLMEM
         MVC   SEQNUM(6),PTR396   CLEAR SEQNUM THRU PTR402
         MVC   TEXLEN(92),PTR432    CLEAR TEXLEN THRU PTRCOL65
         NI    SWX,X'80'
         NI    SWY,X'04'
         NI    FLAG2,ERRMS   SET OFF FROMNE, EXPAND, EXP2
         MVI   RECID,X'00'
         ST    1,PTRVW
         ST    1,PTRESD
         A     1,F3200
         ST    1,PTRBLK
         AH    1,HHHALF
         AH    1,H2048
         MVI   0(1),X'40'          CLEAR DECK AREAS
         MVC   1(159,1),0(1)
         ST    1,PTROBJ
         LA    1,16(1)
         ST    1,PTRCOL17
         LA    1,48(1)
         ST    1,PTRCOL65
         LA    1,16(1)
         ST    1,PTROB
         MVI   MODLA+3,X'38'
         BR    R10
         EJECT
MESSG0   LA    10,0
         B     MESSGX
MESSG1   LA    10,1
         B     MESSGX
MESSG2   LA    10,2
         B     MESSGX
MESSG3   LA    10,3
         B     MESSGX
MESSG4   LA    10,4
         B     MESSGX
MESSG5   LA    10,5
         B     MESSGX
MESSG6   TM    8(10),X'05'         COMMON?
         BO    A00278
         TM    8(10),X'03'         LR?
         BO    A001D6
         LA    10,6
         B     MESSGX
MESSG7   LA    10,7
         B     MESSGX
MESSG8   LA    10,8
         B     MESSGX
MESSG9   LA    10,9
         B     MESSGX
MESSG10  LA    10,10
         B     MESSGX
MESSG11  LA    10,11
         B     MESSGX
MESSG12  LA    10,12
         B     MESSGX
MESSG13  LA    10,13
MESSGX   LA    9,SYSPRINT
         SLL   10,5
         A     10,MESSAD
         MVI   LINE+32,X'40'
         OI    FLAG2,ERRMS         INDICATE DIAGNOSTIC ISSUED
         MVC   LINE+33(50),LINE+32   CLEAR LINE AREA AFTER MESSAGE
         MVC   LINE+1(32),0(10)      MOVE MESSAGE TO LINE
         BAL   6,REPORT
         C     10,MESSA7           DISASTROUS ERROR?
         BNL   NEXTCARD            NO -  TRY ANOTHER CARD
         B     ABORT1              YES - ABORT
A00CCC   MVC   MESSAG12(3),RLDCON+1
         B     MESSG12
         EJECT
EOJ      TM    SWX,CTLIN           WERE THERE ANY CARDS?
         BO    EOJ1                YES - BRANCH
ABORT1   OI    SWY02,X'02'         NO - SET SWITCH FOR RC=16
EOJ1     TM    SWY04,X'04'         FREEMAIN REQUIRED?
         BZ    NOFREE              NO - BRANCH
         L     0,GETREPLY+4
         L     1,GETREPLY
         SR    0,1
         SPACE
*        FREEMAIN R,LV=(0),A=(1)
         LR    0,0
         LR    1,1
         SVC   10
         SPACE
*        CLOSE (SYSLIB,,SYSIN,,SYSPRINT,,SYSPUNCH)
         CNOP  0,4
NOFREE   BAL   1,*+20
         DC    X'00'
         DC    AL3(SYSLIB)
         DC    X'00'
         DC    AL3(SYSIN)
         DC    X'00'
         DC    AL3(SYSPRINT)
         DC    X'80'
         DC    AL3(SYSPUNCH)
         SVC   20
         SPACE
*NUTS*   L     R13,4(0,R13)  DON'T CLOBBER 2ND BASE           GYP91137
         TM    SWY02,X'02'         WAS SYSIN EMPTY?
         BO    RETURN16            YES - BRANCH
         TM    FLAG2,ERRMS         DIAGNOSTIC MESSAGE ISSUED?
         BO    RETURN08            YES - BRANCH
         LA    15,0
RETURN   L     R13,4(,R13)   OK TO RELOAD BASE NOW            GYP91137
         ST    15,16(,R13)   SET RETURN CODE                  GYP91137
         LM    14,12,12(R13)
         BR    R14
RETURN16 LA    15,16
         B     RETURN
RETURN08 LA    15,8
         B     RETURN
         EJECT
REPORT   IC    1,LINECNT
         LA    1,1(1)
         STC   1,LINECNT
         CLI   LINECNT,X'25'
         BNE   NOHEADER
         MVI   LINECNT,X'00'
*        PUT   SYSPRINT,HEADER
         LA    1,SYSPRINT
         LA    0,HEADER
         L     15,48(0,1)
         BALR  14,15
NOHEADER EQU   *
*        PUT   SYSPRINT,LINE
         LA    1,SYSPRINT
         LA    0,LINE
         L     15,48(0,1)
         BALR  14,15
         BR    R6
         EJECT
***************************************************************
*                                                             *
*        LOAD MODULE RECORD TYPES                             *
*                                                             *
*        0100 0000   X'40'   SYM RECORD                       *
*        0010 0000   X'20'   CESD RECORD                      *
*        0001 0000   X'10'   SCATTER/TRANSLATION RECORD       *
*        0000 0001   X'01'   CONTROL (CCW) RECORD             *
*        0000 0101   X'05'   CONTROL (CCW) - END OF SEGMENT   *
*        0000 1101   X'0D'   CONTROL (CCW) - END OF MODULE    *
*        0000 0010   X'02'   RLD                              *
*        0000 0110   X'06'   RLD - LAST RECORD OF SEGMENT     *
*        0000 1110   X'0E'   RLD - LAST RECORD OF MODULE      *
*        0000 0011   X'03'   CONTROL (CCW) AND RLD            *
*        0000 0111   X'07'   CONTROL (CCW) AND RLD - (EOS)    *
*        0000 1111   X'0F'   CONTROL (CCW) AND RLD - (EOM)    *
*        1000 0000   X'80'   CSECT IDENTIFICATION RECORD - IDR*
*                                                             *
***************************************************************
*                                                             *
*        ESD TYPES                                            *
*                                                             *
*        XXXX 0000   X'00'   SD   SECTION DEFINITION          *
*        XXXX 0001   X'01'   LR   LABEL REFERENCE (OBJ DECK)  *
*        XXXX 0010   X'02'   ER   EXTERNAL REFERENCE          *
*        XXXX 0011   X'03'   LR   LABEL REFERENCE (LOAD MOD)  *
*        XXXX 0100   X'04'   PC   PRIVATE CODE                *
*        XXXX 0101   X'05'   CM   COMMON                      *
*        XXXX 0110   X'06'   PR   PSEUDO REGISTER, XD         *
*        0000 0111   X'07'   --   NULL                        *
*        XXXX 1010   X'0A'   WX   WEAK EXTERNAL REF           *
*        XXX1 X100   X'14'        PRIVATE CODE MARKED DELETE  *
*                                  (ENTAB AND SEGTAB CSECTS)  *
*****                                                         *
*                                                             *
*        XXX1 XXXX   X'10'   DELETE/REPLACE                   *
*        XX1X XXXX   X'20'   INSERT                           *
*        X1XX XXXX   X'40'   CHAIN                            *
*        1XXX XXXX   X'80'   MAP                              *
*                                                             *
***************************************************************
         SPACE
         DC    X'7777'
SYSPRINT DC    4F'0'
         DC    X'00000000'
         DC    X'00000001'
         DC    X'00004000'
         DC    X'00000001'
         DC    X'00000001'
         DC    X'94000000'         RECFM=FBA
         DC    C'SYSPRINT'
         DC    X'02000050'
         DC    X'00000001'
         DC    X'00000001'
         DC    X'0000',AL2(133)    BLKSIZE=133
         DC    X'00000000'
         DC    X'00000001'
         DC    X'00000001'
         DC    X'00000001'
         DC    X'0000',AL2(133)    LRECL=133
         DC    X'80000001'
         DC    X'00000000'
         DC    X'00000001'
SYSPUNCH DC    4F'0'
         DC    X'00000000'
         DC    X'00000001'
         DC    X'00004000'
         DC    X'00000001'
         DC    X'00000001'
         DC    X'80000000'         RECFM=F
         DC    C'SYSPUNCH'
         DC    X'02000020'
         DC    X'00000001'
         DC    A(MESSG3)           SYNAD=MESSG3
         DC    X'0000',AL2(80)
         DC    X'00000000'
         DC    X'00000001'
         DC    X'01000001'
         DC    X'00000001'
         DC    X'0000',AL2(80)
         DC    X'00000001'
SYSIN    DC    4F'0'
         DC    X'00000000'
         DC    X'00000001'
         DC    X'00004000'
         DC    X'00000001'
         DC    X'00'
         DC    AL3(EOJ)
         DC    X'80000000'         RECFM=F
         DC    C'SYSIN   '
         DC    X'02002000'
         DC    X'00000001'
         DC    A(MESSG4)           SYNAD=MESSG4
         DC    X'0000',AL2(80)     BLKSIZE=80
         DC    X'00000000'
         DC    X'00000001'
         DC    X'01000001'
         DC    X'00000001'
         DC    X'0000',AL2(80)     LRECL=80
         DC    X'00000001'
SYSLIB   DC    4F'0'
         DC    X'00000000'
         DC    X'00000001'
         DC    X'00000200'
         DC    X'00000001'
         DC    X'00000001'
         DC    X'C0000000'         RECFM=U
         DC    C'SYSLIB  '
         DC    X'02002400'
         DC    X'00000001'
         DC    A(MESSG5)           SYNAD=MESSG5
         DC    2F'0'
         DC    X'00000001'
         DC    X'01000001'
         DC    X'00000001'
         DC    X'00000000'
         DC    X'00000001'
MESSA7   DC    A(MESSAGE6)
EDITNOTA DC    A(EDITNOT)
MESSAD   DC    A(MESSAGES)
REDUCE4  DC    X'FFFFFFFC'
HOLDA3   DC    X'00000000'
GETRANGE DC    F'2004318071',A(40664)  MIN + MAX FOR GETMAIN
GETREPLY DC    0F'0',4X'77'   WILL CONTAIN ADDRESS FROM GETMAIN
         DC    4X'77'
F3200    DC    F'3200'        ADJUSTED TO ADDITIONAL MAX
GIVBAK   DC    H'4504'
HHHALF   DC    H'3072'        (DOESN'T NEED VALUE)
H2048    DC    H'2048'
CTLIN    EQU   X'80'               SYSIN NOT EMPTY
PARSEM   EQU   X'40'               MEMBER NAME BEING PARSED
PARSEC   EQU   X'20'               CSECT NAME BEING PARSED
CSPEC    EQU   X'10'               CSECT NAME PARSED
SWX08    EQU   *                   CSECT FOUND
SWX04    EQU   *                   CHECK REQUIRED
SWX02    EQU   *
SWX01    EQU   *
SWX      DC    X'00'
SWY80    EQU   *
SWY40    EQU   *
SWY20    EQU   *
SWY10    EQU   *
SWY08    EQU   *
SWY04    EQU   *                   FREEMAIN REQUIRED
SWY02    EQU   *                   EXIT WITH RC=16
SWY01    EQU   *
SWY      DC    X'00'
H56      DC    H'56'
H4       DC    H'4'
H16      DC    H'16'
H160     DC    H'160'
ESDCON   DC    X'02',C'ESD'
TXTCON   DC    X'02',C'TXT'
RLDCON   DC    X'02',C'RLD'
ENDCON   DC    X'02',C'END'
STM911   DC    3F'2004318071' (ALL HEX 77)
STM710   DC    4F'2004318071'
STM14    DC    4F'2004318071'
SAVE     DC    18F'2004318071'
         DC    A(0)  A(FESNAP)                                GYP91137
         DC    62F'0'
         DC    18F'0'
PTR396   DC    X'0001'
SEQNUM   DC    H'30583' 398 (ALL HEX 77)
CNTESX   DC    H'30583' 400
PTR402   DC    H'30583' 402
RECID    DC    X'77'
FLAG2    DC    X'00'
FROMNE   EQU   X'80'
EXPAND   EQU   X'40'
EXP2     EQU   X'20'
ERRMS    EQU   X'10'
PTR406   DC    X'0009' 406
EXPDGM   DC    X'00F9' 408
EXPDIF   DC    H'0'  410
LINECNT  DC    X'24' 412      LINECNT SET TO 36
EXPDGL   DC    X'77'
         DC    X'0000' 414
CSESIZ   DC    F'0'  416
         DC    F'0'  420
EXPVAL   DC    0D'0',F'0'  424                                GYP91137
         DC    F'0'  428
PTR432   DC    F'0'  432
TEXLEN   DC    H'30583' 436
ESDID8   DC    H'30583' 438
SEGMNO   DC    X'77' 440
BLDLRC   DC    X'77' 441
CCTESD   DC    X'7777' 442
ADDRES   DC    F'2004318071' 444
PTR448   DC    0D'0',F'2004318071' 448                        GYP91137
PTR452   DC    F'2004318071' 452
         DC    F'2004318071' 456
SUFFIX   DC    XL8'7777777777777777' 460 MOVED TO COL73-80 OF OBJ
ORIGIN   DC    F'2004318071' 468
         DC    F'2004318071' 472
PTR476   DC    F'2004318071' 476
PTR480   DC    F'2004318071' 480
PTRTXT   DC    F'2004318071' 484
PTRTEX   DC    F'2004318071' 488
PTR492   DC    F'2004318071' 492
PTR496   DC    F'2004318071' 496
PTRVW    DC    A(2004318071)
PTRESD   DC    A(2004318071)
PTRBLK   DC    A(2004318071)
PTROB    DC    A(2004318071)
PTROBJ   DC    A(2004318071)
PTRCOL17 DC    A(2004318071)
PTRCOL65 DC    A(2004318071)
BLDLL    DC    H'1'
         DC    H'72'
BLDLMEM  DC    0CL80' '
BLDL72   DC    0CL72' '
         DC    72X'77'
BLDLTTR  EQU   BLDL72+8
BLDLTTRX EQU   BLDL72+14
ATTRIB   EQU   BLDL72+22
BLDLTTRO EQU   BLDL72+18
CSECT    DC    XL8'7777777777777777'
MESSAGES DC    CL32'UNABLE TO OPEN SYSLIB.'           M0
         DC    CL32'UNABLE TO OPEN SYSIN.'            M1
         DC    CL32'UNABLE TO OPEN SYSPUNCH'          M2
         DC    CL32'I/O ERROR ON SYSPUNCH.'           M3
         DC    CL32'I/O ERROR ON SYSIN.'              M4
         DC    CL32'I/O ERROR ON SYSLIB.'             M5
MESSAGE6 DC    CL32'ESD NAME NOT SECTION DEFINITION.' M6
         DC    CL32'NAME MORE THAN EIGHT CHARACTORS.' M7
         DC    CL32'TEXT FOR CSECT NOT FOUND.'        M8
         DC    CL32'ADCON NOT 3 OR 4 BYTES**ERROR**.' M9
         DC    CL32'NO  MEMBER NAME RECEIVED.'        M10
         DC    CL32'MEMBER NAME NOT FOUND IN PDS.'    M11
MESSAG12 DC    CL32'ESD BUFFER OVERFLOW.'             M12
         DC    CL32'NUMBER OR EXTEND CARD INCORRECT'  M13
HEADER   DC    CL35'1          DELINK0        V0  L0   '
         DC    CL34'EXPAND AND NOT EDITABLE FUNCTION  '
         DC    CL64'08 / 08 / 69   '
LINE     DC    CL133'0  '
         DC    0H'0'
         USING *,R7
EDITNOT  MVC   0(8,10),BLDLMEM MOVE MEMBER NAME
         MVI   8(10),X'00'
         MVC   9(4,10),8(10)
         MVC   13(3,10),BLDL72+24    GET SIZE OF MODULE
         BAL   R5,CSEFOUND
EDITNOTR MVC   16(224,10),0(10)
         TM    ATTRIB,X'01'   NO RLD ITEMS? ONE BLOCK OF TEXT?
         LA    10,260(10)
         ST    10,PTRTXT
         BZ    *+8 (BASE REG 7)
         MVI   RECID,X'0C'
         MVC   TEXLEN,BLDL72+27    MOVE LEN OF FIRST BLK TXT
         LH    11,TEXLEN
         OI    FLAG2,FROMNE
         MVC   BLDLTTR(3),BLDLTTRX    MOVE TTR OF FIRST TXT
         BAL   8,POINT
         LA    4,PTR432+2
         LA    8,1
         SR    7,7
         B     A00618
*CRUD*   DC    A(FESNAP)                                      GYP91137
         DC    10F'0'
HICORE   EQU   *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
