TRACE    TITLE 'P G M T R A C E  ***  INSTRUCTION TRACE ROUTINE'
***********************************************************************
*                                                                     *
*                                                                     *
*        THE TRACE ROUTINE IS USED TO TRACE A PROGRAM THROUGH         *
*        EXECUTION AT THE ASSEMBLY LEVEL. THIS IS DONE BY RETAINING   *
*        CONTROL OF THE TRACED PROGRAM AFTER THIS ROUTINE IS CALLED   *
*        AND EXECUTING THE TRACED PROGRAM'S INSTRUCTIONS.             *
*        USER ABENDS USED BY THE TRACE ARE:                           *
*              U111 - TRACE ROUTINE ATTEMPT TO STAE FAILED            *
*              U222 - ILLEGAL INSTRUCTION WAS DETECTED IN THE TRACE.  *
*              U333 - SYSTRACE DCB COULD NOT BE OPENED.               *
*        AUTHOR : BERNARD SCHOCH, COMNET COMPUTER CENTER              *
*        DEBUGGED 03/22/74 BY CLAUDE SCHOCH                           *
*        CONVERTED FOR 370 INSTRUCTIONS AND EXTENDED FLOATING POINT   *
*        INSTRUCTIONS BY CLAUDE SCHOCH 2/12/75                        *
*        ENHANCED AND SUPPORTED BY:                                   *
*                    LIONEL SILVA                                     *
*                    US POSTAL DATA CENTER                            *
*                    850 CHERRY AVENUE                                *
*                    SAN BRUNO, CA 94097-9330                         *
*                    (415) 876-9142                                   *
*                                                                     *
*                    DAVID O. RIKER                                   *
*                    COMPUTER DATA SYSTEMS, INC                       *
*                    1 CURIE COURT                                    *
*                    ROCKVILLE, MD 20850                              *
*     1. SUPPORT FOR MVS EXTENTED INSTRUCTIONS (S,RRE, & SSE FORMATS) *
*     2. ADD CSECT NAME AND OFFSET ADDRESS IN OUTPUT FORMAT           *
*     3. BUILT CSECT TABLE WITH NAME, POINTER, AND LENGTH             *
*     4. FIXED DECIMAL INSTRUCTION DISPLAY OUTPUT                     *
*     5. ADD TRACEON, TRACEOFF, TRACKILL INDICATOR SWITCH COMMANDS    *
*          TO REDUCE SYSTRACE OUTPUT LISTING.                         *
*     6. FUTURE PLANNING: MORE SWITCH COMMANDS LIKE SNAP SPECIFIED    *
*        AREA WHEN HIT AT CSECT+XX, DISPLAY GREATER THAN 4 BYTES      *
*        OF DISPLACMENT (LONG MVC OR DSECT), MORE AND MORE.....       *
*     7. FIX WRONG LOGIC ON ADDING INDEX WITH BXH OR BXLE INSTRUCTION *
*     8. IMPROPERLY USED WITH B2XX 9CXX 9DXX 9EXX E5XX INSTRUCTIONS
*        FIXED TO USE RRE AND SSE FORMAT LOGICS.                GP00169
*     9. ADD LRA INSTUCTION TO OPERATOR TABLE (WAS TREATED AS ILLEGAL).
*    10. IMPROVE LOGIC TO CLEAR REGISTER  BEFORE IC INSTRUCTION.
*        IT WAS CAUSED SOME PROBLEMS ON PRINT SHIFT INSTRUCTION LINE.
*                                                                     *
*    UPDATED 3/97 BY G. POSTPISCHIL TO FIX USING PROBLEMS UNDER THE   *
*    HIGH-LEVEL ASSEMBLER, USE SYMBOLIC REGISTER NAMES CONSISTENTLY,  *
*    AND OTHERWISE TO IMPROVE MAINTAINABILITY.                        *
*    FIXED BXH,BXLE WHEN R1=R3                                        *
*    REMOVED UNNECESSARY INSTRUCTIONS AND STREAMLINED CODE.           *
*    ADDED MISSING 370 INSTRUCTIONS AND (SOME) 390 INSTRUCTIONS.      *
*    CORRECTED INCORRECT INSTRUCTION HANDLING, AND ADDED AMODE 31     *
*      SUPPORT.  MAIN PROGRAM RUNS IN USER'S AMODE; SUBROUTINES IN    *
*      AMODE 31 EXCEPT FOR SAM I/O.                                   *
*    ADDED MAJOR IMPROVEMENTS, PARAMETERIZED FUNCTIONS, AND ADDED     *
*      OPTION DATA SET   12/97                                        *
*                                                                     *
*    MAJOR REWORK TO MAKE THIS ASSEMBLE UNDER ASM XF, AND MAKE IT     *
*      RUN ON MVS 3.8J FOR THE HERCULES PROJECT.   7/2005             *
*                                                                     *
*    FIXED A COUPLE OF STUPID ERRORS IN VAR OPTION PROCESSING.        *
*      ADDED SUPPORT FOR LOCAL #TRAP DEBUG MACRO  12/2011             *
*                                                                     *
*                    GERHARD POSTPISCHIL                              *
*                    EXPERT SYSTEM PROGAMMING                         *
*                    176 OLD STAGE COACH ROAD                         *
*                    BRADFORD, VT 05033-8844                          *
*                    gerhard@postpischil.com                          *
*                                                                     *
*        TO UTILIZE TRACE FACILITY:                                   *
*                                                                     *
*    TRACE UNMODIFIED PROGRAMS IN A SEPARATE JOB STEP:                *
*        //NAME  EXEC  PGM=PGMTRACE                                   *
*        //  ...   ALL NORMAL DD CARDS FOR PROGRAM "NAME"             *
*        //SYSTRACE DD   TRACE OUTPUT (FB,132,23364)                  *
*        //SYSTROPT DD   INPUT: TRACE OPTIONS                         *
*                                                                     *
*    TRACE MODIFIABLE PROGRAMS USING TRACE AS A SUBROUTINE:           *
*        TO INITIATE TRACE, CODE "CALL TRACE" IN ANY ASM SOURCE.      *
*        THE PROBLEM SOURCE SHOULD BE LINKED WITH PGMTRACE MODULE     *
*        AS SUBROUTINE. (USE A INCLUDE SYSLIB(PGMTRACE) CARD.)        *
*        R1 SHOULD BE ZERO OR POINT TO A VALID TRACE OPTION BLOCK     *
*                                                                     *
*        TO TURN OFF TRACE PRINTING, CODE "CALL TRACEOFF".            *
*        TO TURN ON TRACE PRINTING, CODE "CALL TRACEON".              *
*        TO ABORT  TRACE PROCESSING, CODE "CALL TRACKILL".            *
*                                                                     *
*        WARNING: "CALL TRACE" MUST BE INITIATED FIRST BEFORE         *
*              USING TRACEON, TRACEOFF, OR TRACKILL.                  *
*                                                                     *
*        TO MODIFY A PROGRAM FOR TRACING, USE THE #TRACE INIT MACRO   *
*          OR #TRC XXX WITH INIT, ON, OFF, OR KILL.                   *
*                                                                     *
*        INCLUDE A //SYSTRACE DD CARD IN THE JCL USED TO EXECUTE      *
*        THE TRACED PROGRAM.  ONE LINE OF OUTPUT PER INSTRUCTION      *
*        WILL BE WRITTEN TO SYSTRACE.                                 *
*                                                                     *
*        INCLUDE A //SYSTROPT DD CARD-FORMAT INPUT DATASET TO SET     *
*        PROCESSING OPTIONS.                                          *
*        OPTIONS ARE FREE FORMAT, ONE PER CARD. BLANK CARDS AND       *
*        LEADING ASTERISKS ARE TREATED AS COMMENTS.                   *
*                                                                     *
*        NAME  XXXXXXXX      NAME OF PROGRAM TO BE TRACED BY THE      *
*                            PGMTRACE FUNCTION (JOB STEP VERSION)     *
*             (WHEN THE NAME CARD IS OMITTED, THE FIRST TRACE ON      *
*              REQUEST'S MODULE NAME IS USED INSTEAD)                 *
*                                                                     *
*        BEGIN  ON ªNAME³ª+OFFSET³ ªSIZE × :OFFSET³                   *
*                                                                     *
*        RESTRICT XX YY ZZ   RESTRICT TRACE PRINTING TO CONDITIONS    *
*              BAL             BAL/BALR/BAS/BASR/BSM/BASSM ONLY       *
*              BRANCH          ANY SUCCESSFUL BRANCH                  *
*              SVC             SVC CALLS                              *
*                                                                     *
*        ABEND xx yy zz      LIST OF ABEND CONDITIONS                 *
*              ILLEGAL         ABEND ON ILLEGAL INSTRUCTION (DEFAULT) *
*              COUNT           ABEND ON INSTRUCTION TRACE COUNT > MAX *
*              BCT             ABEND IF BCT/BCTR GOES MINUS           *
*                                                                     *
*        PROCESS xx yy zz    LIST OF ERRORS IGNORED                   *
*              ILLEGAL         INVOKES USER'S SPIE/ESPIE IF ANY       *
*              COUNT × LIMIT   OUTPUT EXCESSION INHIBITS PRINTING,    *
*                                BUT CONTINUES TRACE PROCESSING       *
*              BCT             CONTINUE ON NEGATIVE RESULT (DEFAULT)  *
*              LPA             PROCESS/PRINT LPA RESIDENT CODE        *
*              ALL             PROCESS/PRINT EVERYTHING               *
*              EPIE  × PIE     PRINT EVERY EPIE                       *
*                                                                     *
*        COUNT limit start interval                                   *
*                            PRINT TRACE INFORMATION UP TO LIMIT      *
*                              COUNT (EXCESSION CEASES TRACING)       *
*                            START (DEFAULT=1) STARTING LINE          *
*                            INTERVAL (DEFAULT=1) EVERY NTH EVENT     *
*                                                                     *
*        TRACE 'opt' start size                                       *
*                            TURN TRACE PRINTING ON OR OFF IN THE     *
*                              SPECIFIED START END RANGE IN HEX.      *
*        TRACE 'opt' name+offset size                                 *
*        TRACE 'opt' name+offset:offset                               *
*                            TURN TRACE PRINTING ON OR OFF IN THE     *
*                              RANGE OF THE SPECIFIED PROGRAM OR      *
*                              CSECT, WITH OPTIONAL OFFSET, FOR THE   *
*                              RANGE SPECIFIED BY SIZE (DEFAULT IS    *
*                              END OF MODULE)                         *
*              'opt' MAY BE ON - DEFAULT - TRACE IN THIS RANGE        *
*                          OFF - INHIBIT PRINTING TRACE DATA IN RANGE *
*                         EXIT - LEAVE TRACE PROGRAM IF RANGE ENTRY   *
*                        ABEND - ABEND IF RANGE ENTERED               *
*                                                                     *
*        TRACE OFF                                                    *
*              USED WITH VAR AND INST REQUESTS TO SUPPRESS PRINTING   *
*              EXCEPT FOR MATCHING CONDITIONS.                        *
*                                                                     *
*        VAR name  module+offset×0address×(b)ddd size 'test'...       *
*              name - ARBITRARY NAME OF VARIABLE                      *
*              address - START ADDRESS TO BE MONITORED (OPT + OFFSET) *
*                HEX VALUE MUST BEGIN WITH 0, OTHERWISE TREATED AS A  *
*                DECIMAL NUMBER                                       *
*              module  - MODULE CONTAINING VARIABLE (OPT. + OFFSET)   *
*              (b)ddd  - HEX BASE/DISPLACEMENT FORM                   *
*              size - LENGTH OF VARIABLE DATA (<4096)                 *
*                                                                     *
*              'test' - PROCESSING OPTIONS                            *
*                          LOW - SHOW WHEN VARIABLE DECREASES         *
*                        EQUAL - SHOW UNCHANGED ACCESS                *
*                      UNEQUAL - SHOW UNEQUAL ACCESS                  *
*               (ACCEPTS < > = \= AS ALTERNATES)                      *
*               (THE ABOVE FLAGS TEST THE VARIABLE AFTER EVERY INST-  *
*                RUCTION, EVEN WHEN NOT EXPLICITLY REFERENCED. WITH   *
*                CHANGE, THEY ARE ONLY TESTED ON EXPLICIT REFERENCES) *
*                    REFERENCE - SHOW EVERY ACCESS TO THIS VARIABLE   *
*                       CHANGE - REPORT WHEN VARIABLE CHANGES         *
*                         ONCE - LATCH FIRST (B)DDD ADDRESS           *
*                         KEEP - LATCH FIRST DATA VALUE FOR COMPARES  *
*                                                                     *
*        INST HEX×MASK                                                *
*               TRACE THE SPECIFIED INSTRUCTION. USE ? OR - AS WILD-  *
*               CARD CHARACTER.                                       *
*                                                                     *
*        SOURCE  OFF × ESD × NOESD × MACRO × NOMAC × COPY × NOCOP     *
*                DEBUG                                                *
*                                                                     *
*               WHEN YOU PROVIDE A SYSTRADA DD (PDS), THEN THE SOURCE *
*               STATEMENTS, PRODUCED USING THE ASSEMBLER'S DATA       *
*               OPTION, WILL BE PRINTED PRIOR TO THE DECODED ONES.    *
*               ALSO REQUIRES EXTERNAL MODULE PGMTRADA. IN ORDER TO   *
*               GET THE CORRECT ASSOCIATION, THE MEMBER NAME IN       *
*               SYSTRADA MUST MATCH THE MODULE NAME.                  *
*                                                                     *
***********************************************************************
         MACRO ,
&NM      STOMP &FROM,&WORK=R14
         GBLB  &ZZSTMP@
         GBLA  &ZZSTMP#
         LCLC  &OLDSECT
&OLDSECT SETC  '&SYSECT'
         AIF   (&ZZSTMP@).NOT1ST
&ZZSTMP@ SETB  1
ZZSTOMP  CSECT ,             CREATE A SAVE AREA
         DC    A(*+16)       FIRST FOOTPRINT
         DC    CL8'*STOMP*'
         DC    256XL256'0'
&OLDSECT CSECT ,
.NOT1ST  ANOP  ,
&NM      L     &WORK,=A(ZZSTOMP)  GET WORK AREA
         L     1+&WORK,0(,&WORK)
         MVC   0(8,1+&WORK),&FROM
         LA    R0,8(,1+&WORK)
         ST    R0,0(,&WORK)
         MEND  ,
         SPACE 1
         MACRO ,
&NM      SHOWPSW &ID
&NM      LA    R1,=CL8'&ID '
         BASCALL SHOWPSW
         MEND  ,
         SPACE 1
         MACRO ,
&NM      PSWBITS &OP,&IN,&IC=NO,&FORMAT=390,&CC=NO              GP06233
         GBLB  &MVSXA,&MVSESA                                   GP06233
         AIF   ('&FORMAT' NE '360' AND '&FORMAT' NE 'SPIE').NUF GP06233
&NM      MVC   &OP.PM,4+&IN  PROGRAM MASK                       GP06233
         AIF   ('&CC' EQ 'YES').DOCC                            GP06233
         AIF   ('&CC' EQ 'NO').NOCC                             GP06233
         TM    FLAG1,FGCC              CHANGED CONDITION CODE?  GP06233
         BZ    *+4+6                   NO, NOT A POSSIBILITY    GP06233
.DOCC    MVC   &OP.CC,4+&IN  CONDITION CODE                     GP06233
.NOCC    MVI   &OP.AM,0      ADDRESSING MODE                    GP06233
         MVI   &OP.ACM,0     ACCESS MODE                        GP06233
         MVI   &OP.MASK,X'00'  MAKE 24-BIT ADDRESSING           GP06233
         AGO   .NUCM                                            GP06233
.NUF     ANOP  ,                                                GP06233
&NM      MVC   &OP.PM,2+&IN  PROGRAM MASK                       GP06233
         MVC   &OP.CC,2+&IN  CONDITION CODE                     GP06233
         MVC   &OP.AM,4+&IN  ADDRESSING MODE                    GP06233
         AIF   ('&FORMAT' NE '370').AUF                         GP06233
         MVI   &OP.ACM,0     ACCESS MODE                        GP06233
         AGO   .AUCM                                            GP06233
.AUF     ST    R14,12(,R13)  SAVE WORK REGISTER                 GP06233
         MACPARM R14,&IN     GET PSW ADDRESS                    GP06233
         IC    R14,2(,R14)   LOAD THIRD PSW BYTE                GP06233
         SRL   14,6          SHIFT                              GP06233
         STC   R14,&OP.ACM   SAVE ACM BITS AND SOME             GP06233
         L     R14,12(,R13)  RESTORE WORK REGISTER              GP06233
         NI    &OP.ACM,3     GET ACM BITS ONLY                  GP06233
         TR    &OP.ACM,DCCCODE  GET MATCHING CODE               GP06233
.AUCM    MVI   &OP.MASK,X'7F'  MAKE ADDRESSING MASK             GP06233
         NI    &OP.AM,X'80'  RETAIN ONLY AM BIT                 GP06233
         BNZ   *+8           AM31                               GP06233
         MVI   &OP.MASK,0    AM24                               GP06233
.NUCM    NC    &OP.IL(4),=AL1(FGIIL,FGICC,FGIPM,FGACM)          GP06233
         AIF   ('&IC' NE 'YES').MEND                            GP06233
         MVC   &OP.IC,4+&IN  MOVE RIGHT PSW                     GP06233
         NC    &OP.IC,&OP.MASK  MAKE MODED ADDRESS              GP06233
.MEND    MEND  ,                                                GP06233
         SPACE 1
         MACRO ,                                                GP97335
&OP      OPCD  &HEX,&FLAGS,&SYS=,&GO=OPERATE,&MASK=,&FORM=      GP97338
         LCLC  &MAJ,&MIN,&C,&D                                  GP97335
         LCLB  &F11,&F12,&F13,&F14,&F15,&F16,&F17,&F18          GP97330
         LCLB  &F21,&F22,&F23,&F24,&F25,&F26,&F27,&F28          GP97330
         LCLB  &F31,&F32,&F33,&F34,&F35,&F36,&F37,&F38          GP97330
         LCLB  &F41,&F42,&F43,&F44,&F45,&F46,&F47,&F48          GP97330
         LCLB  &F51,&F52,&F53,&F54,&F55,&F56,&F57,&F58          GP97330
         LCLA  &B1,&B2,&B3,&B4,&B5                              GP97330
         LCLA  &I,&M                                            GP97330
&C       SETC  '&HEX'.'  '                                      GP97335
         AIF   (K'&HEX GT 2).SUBTAB                             GP97335
INST     CSECT ,                                                GP97335
         ORG   INST+OPLEN*X'&HEX'                               GP97335
         AGO   .COM                                             GP97335
.SUBTAB  ANOP  ,                                                GP97335
&MAJ     SETC  '&C'(1,2)                                        GP97335
&MIN     SETC  '&C'(3,2)                                        GP97335
INST&MAJ CSECT ,                                                GP97335
         ORG   INST&MAJ+OPLEN*X'&MIN'                           GP97335
.COM     ANOP  ,                                                GP97335
&I       SETA  1                                                GP97330
&M       SETA  N'&SYSLIST                                       GP97330
.LOOP    AIF   (&I GE &M).DONE                                  GP97330
&I       SETA  &I+1                                             GP97335
&C       SETC  '&SYSLIST(&I)'                                   GP97330
&F11     SETB  (&F11 OR ('&C' EQ 'ACR'))   USES ACCESS REGS     GP00029
&F12     SETB  (&F12 OR ('&C' EQ 'FTP'))   FLOATING REGISTERS   GP97330
&F13     SETB  (&F13 OR ('&C' EQ 'DOREG'))   DISPLAY GEN REGS   GP00029
&F14     SETB  (&F14 OR ('&C' EQ 'DOACR'))   DISPLAY ACC REGS   GP00029
&F16     SETB  (&F16 OR ('&C' EQ 'C'))     ALTERS CONDITION CODE
&F16     SETB  (&F16 OR ('&C' EQ 'L'))     LOADS CONDITION CODE GP97335
&F17     SETB  (&F17 OR ('&C' EQ 'CC'))                         GP99163
&F18     SETB  (&F18 OR ('&C' EQ 'CA') OR ('&C' EQ 'CL'))       GP99163
&F21     SETB  (&F21 OR ('&C' EQ 'RR') OR ('&C' EQ 'RRE'))      GP99102
&F22     SETB  (&F22 OR ('&C' EQ 'RS'))                         GP97330
&F22     SETB  (&F22 OR ('&C' EQ 'RSI'))                        GP97331
&F23     SETB  (&F23 OR ('&C' EQ 'RX'))                         GP97330
&F23     SETB  (&F23 OR ('&C' EQ 'RI'))                         GP97330
&F24     SETB  (&F24 OR ('&C' EQ 'S'))                          GP97330
&F25     SETB  (&F25 OR ('&C' EQ 'SI'))                         GP97330
&F26     SETB  (&F26 OR ('&C' EQ 'SS') OR ('&C' EQ 'SSE'))      GP99102
&F27     SETB  (&F27 OR ('&C' EQ 'E') OR ('&C' EQ 'RRE'))       GP97330
&F27     SETB  (&F27 OR ('&C' EQ 'SSE'))                        GP97330
&F28     SETB  (&F28 OR ('&C' EQ 'RSI'))                        GP97331
&F33     SETB  (&F34 OR ('&C' EQ 'IMK'))                        GP97330
&F34     SETB  (&F34 OR ('&C' EQ 'IMM'))                        GP97330
&F35     SETB  (&F35 OR ('&C' EQ 'IM2'))                        GP97330
.*   CODED DATA LENGTH FLAGS (128 + FLAG)                       GP97345
&F41     SETB  (&F41 OR ('&C' EQ 'DLR1'))                       GP97344
&F42     SETB  (&F42 OR ('&C' EQ 'DLR1'))                       GP97344
&F41     SETB  (&F41 OR ('&C' EQ 'DLR2'))                       GP97344
&F43     SETB  (&F43 OR ('&C' EQ 'DLR2'))                       GP97344
.*&F41   SETB  (&F41 OR ('&C' EQ 'DLR3'))                       GP97344
.*&F44   SETB  (&F44 OR ('&C' EQ 'DLR3'))                       GP97344
&F41     SETB  (&F41 OR ('&C' EQ 'DLR4'))                       GP97344
&F45     SETB  (&F45 OR ('&C' EQ 'DLR4'))                       GP97344
&F41     SETB  (&F41 OR ('&C' EQ 'DLM'))                        GP97344
&F46     SETB  (&F46 OR ('&C' EQ 'DLM'))                        GP97344
&F41     SETB  (&F41 OR ('&C' EQ 'DLI'))                        GP97344
&F47     SETB  (&F47 OR ('&C' EQ 'DLI'))                        GP97344
.*&F41   SETB  (&F41 OR ('&C' EQ 'XXX'))                        GP97344
.*&F48   SETB  (&F48 OR ('&C' EQ 'XXX'))                        GP97344
&F42     SETB  (&F42 OR ('&C' EQ 'DLSS'))                       GP97344
&F43     SETB  (&F43 OR ('&C' EQ 'DLS'))                        GP97330
.*   UNCODED DATA LENGTHS                                       GP97345
&F44     SETB  (&F44 OR ('&C' EQ 'DL16'))                       GP97344
&F45     SETB  (&F45 OR ('&C' EQ 'DL8'))                        GP97330
&F46     SETB  (&F46 OR ('&C' EQ 'DL4'))                        GP97330
&F47     SETB  (&F47 OR ('&C' EQ 'DL2'))                        GP97330
&F48     SETB  (&F48 OR ('&C' EQ 'DL1'))                        GP97330
         AGO   .LOOP                                            GP97335
.DONE    ANOP  ,                                                GP97330
&F13     SETB  ('&HEX' EQ '90' OR '&HEX' EQ '98')               GP97330
&F31     SETB  ('&GO'(1,1) EQ 'B')   BRANCH INSTRUCTION         GP97330
&F32     SETB  ('&GO'(1,1) EQ 'E')   EXECUTE INSTRUCTION        GP97330
&B1  SETA  128*&F11+64*&F12+32*&F13+16*&F14+8*&F15+4*&F16+2*&F17+&F18
&B2  SETA  128*&F21+64*&F22+32*&F23+16*&F24+8*&F25+4*&F26+2*&F27+&F28
&B3  SETA  128*&F31+64*&F32+32*&F33+16*&F34+8*&F35+4*&F36+2*&F37+&F38
&B4  SETA  128*&F41+64*&F42+32*&F43+16*&F44+8*&F45+4*&F46+2*&F47+&F48
&B5  SETA  128*&F51+64*&F52+32*&F53+16*&F54+8*&F55+4*&F56+2*&F57+&F58
&C       SETC  '&FLAGS'      SET EDIT MASK TO TYPE DEFAULT      GP97331
&D       SETC  '&FLAGS'      SET FORMAT MASK TO TYPE DEFAULT    GP97338
         AIF   ('&MASK' EQ '').DEFMSK                           GP97331
&C       SETC  '&MASK'       SET OVERRIDE MASK                  GP97331
.DEFMSK  AIF   ('&FORM' EQ '').DEFORM                           GP97338
&D       SETC  '&FORM'       SET OVERRIDE MASK                  GP97338
.DEFORM  ANOP  ,                                                GP97338
OP&HEX  DC  CL5'&OP ',AL1(&B1,&B2,&B3,&B4,&B5,0,MO&C,FM&D),AL2(&GO-PGMT*
               RACE)                                            GP97338
         MEND  ,                                                GP97335
         SPACE 1                                                GP97330
         MACRO ,                                                GP97330
&OP      OPTB  &HEX,&FLAG1,&FLAG2,&FLAG3,&BO=1
         GBLB  &ZZZOTOF
         LCLC  &MAJ,&MIN,&C                                     GP97330
&C       SETC  '&HEX'.'  '                                      GP97330
         AIF   (K'&HEX GT 2).SUBTAB                             GP97330
INST     CSECT ,                                                GP97330
         ORG   INST+OPLEN*X'&HEX'                               GP97330
         DC    C'@',AL4(INST&HEX),AL1(&FLAG1,&FLAG2,&FLAG3,&BO)
INST&HEX CSECT ,                                                GP00169
         DC    (&FLAG3+1)XL(OPLEN)'0'                           GP00169
INST     CSECT ,                                                GP00169
         AIF   (&ZZZOTOF).MEND
&ZZZOTOF SETB  1
OTOF@TB  EQU   1,4,C'A'      OFFSET OF SUBTABLE
OTOFMSK  EQU   5,1,C'X'      MASK
OTOFSHF  EQU   6,1,C'F'      BIT SHIFT AMOUNT
OTOFMAX  EQU   7,1,C'F'      MAX SUBCODES
OTOFOFF  EQU   8,1,C'F'      OFFSET TO SUBCODE BYTE (1,3)
         MEXIT ,                                                GP97330
.SUBTAB  MNOTE 4',UNSUPPORTED HEX VALUE FOR TABLE ENTRY'        GP97330
.MEND    MEND  ,                                                GP97330
         SPACE 1                                                GP97331
         MACRO ,                                                GP97331
&NM      MASK  &PATTERN      PRODUCE EDIT PATTERN FOR INSTRUCTIONS
         LCLA  &I,&N,&J                                         GP97331
         LCLC  &X(20),&TAB(20),&C                               GP97331
&I       SETA  1                                                GP97331
.INIT    ANOP  ,                                                GP97331
&X(&I)   SETC  '00'          DEFAULT TO SPACE                   GP97331
&I       SETA  &I+1                                             GP97331
         AIF   (&I LE 20).INIT                                  GP97331
&TAB(1)  SETC  ' '           DEFINE IN 'INSTPAT' ORDER          GP97331
&TAB(2)  SETC  '×'           COMMA REQUESTED VIA STROKE         GP97331
&TAB(3)  SETC  '<'                                              GP97331
&TAB(4)  SETC  '>'                                              GP97331
&TAB(5)  SETC  '/'                                              GP97331
&TAB(6)  SETC  '.'                                              GP97331
&TAB(7)  SETC  '?'                                              GP97331
&TAB(8)  SETC  ','                                              GP97331
&TAB(9)  SETC  '1'                                              GP97331
&TAB(10) SETC  '2'                                              GP97331
&TAB(11) SETC  '3'                                              GP97331
&TAB(12) SETC  '4'                                              GP97331
&TAB(13) SETC  '5'                                              GP97331
&TAB(14) SETC  '6'                                              GP97331
&TAB(15) SETC  '7'                                              GP97331
&TAB(16) SETC  '8'                                              GP97331
&TAB(17) SETC  '9'                                              GP97331
&TAB(18) SETC  '10'                                             GP97331
&TAB(19) SETC  '11'                                             GP97331
&TAB(20) SETC  '12'                                             GP97331
&I       SETA  0                                                GP97331
&N       SETA  N'&SYSLIST                                       GP97331
         AIF   (&N LE 20).NEXT                                  GP97331
         MNOTE 4,'MORE THAN 20 OPERANDS - EXCESS IGNORED'       GP97331
.NEXT    ANOP  ,                                                GP97331
&I       SETA  &I+1                                             GP97331
&C       SETC  '&SYSLIST(&I)'                                   GP97331
&J       SETA  0                                                GP97331
         AIF   ('&C' EQ '').MATCHED                             GP97331
.MATCH   ANOP  ,                                                GP97331
         AIF   ('&C' EQ '&TAB(&J+1)').MATCHED                   GP97331
&J       SETA  &J+1                                             GP97331
         AIF   (&J LT 20).MATCH                                 GP97331
         MNOTE 8,'INVALID OPERAND &I : &C '                     GP97331
         MEXIT ,                                                GP97331
.MATCHED ANOP  ,                                                GP97331
&X(&I)   SETC  '&J'                                             GP97331
         AIF   (&I LT &N).NEXT                                  GP97331
MO&NM    EQU   (*-MASKTAB)/MASKLEN,MASKLEN,C'X'                 GP97331
MASK&NM  DC    AL1(&X(1),&X(2),&X(3),&X(4),&X(5),&X(6),&X(7),&X(8),&X(9*
               ),&X(10),&X(11),&X(12),&X(13),&X(14),&X(15),&X(16),&X(17*
               ),&X(18),&X(19),&X(20))                          GP97331
         MEND  ,                                                GP97331
         SPACE 1                                                GP97338
         MACRO ,                                                GP97338
&NM      FORM  &OPS                                             GP97338
         GBLC  &FPARM(60)    SET IN PRTDATA                     GP97339
         GBLA  &FPX          INDEX TO USED ENTRIES              GP97339
         LCLB  &B(60)                                           GP97338
         LCLC  &C(10),&O                                        GP97338
         LCLA  &I,&N,&J                                         GP97338
&N       SETA  N'&SYSLIST                                       GP97338
.LOOP    AIF   (&I GE &N).DONE                                  GP97338
&I       SETA  &I+1                                             GP97338
&O       SETC  '&SYSLIST(&I)'                                   GP97338
         AIF   ('&O' EQ '').LOOP                                GP97338
&J       SETA  0                                                GP97339
.PLOOP   AIF   (&J GE &FPX).NOMATCH                             GP97344
&J       SETA  &J+1                                             GP97339
         AIF   ('&O' NE '&FPARM(&J)').PLOOP                     GP97339
&B(&J)   SETB  1                                                GP97339
         AGO   .LOOP                                            GP97338
.NOMATCH MNOTE 4,'WORD &I NOT MATCHED: ''&O'''                  GP97344
         AGO   .LOOP                                            GP97344
.DONE    ANOP  ,                                                GP97338
&C(1)    SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)'                 GP97338
&C(2)    SETC  '&B(7)&B(8)&B(9)&B(10)&B(11)&B(12)'              GP97338
&C(3)    SETC  '&B(13)&B(14)&B(15)&B(16)&B(17)&B(18)'           GP97338
&C(4)    SETC  '&B(19)&B(20)&B(21)&B(22)&B(23)&B(24)'           GP97338
&C(5)    SETC  '&B(25)&B(26)&B(27)&B(28)&B(29)&B(30)'           GP97338
&C(6)    SETC  '&B(31)&B(32)&B(33)&B(34)&B(35)&B(36)'           GP97338
&C(7)    SETC  '&B(37)&B(38)&B(39)&B(40)&B(41)&B(42)'           GP97338
&C(8)    SETC  '&B(43)&B(44)&B(45)&B(46)&B(47)&B(48)'           GP97338
&C(9)    SETC  '&B(49)&B(50)&B(51)&B(52)&B(53)&B(54)'           GP97338
&C(10)   SETC  '&B(55)&B(56)&B(57)&B(58)&B(59)&B(60)'           GP97338
FM&NM    EQU   (*-FORMTAB)/FORMLEN,FORMLEN,C'X'                 GP97331
FR&NM    DC    B'0&C(1)&C(2)&C(3)&C(4)&C(5)10&C(6)&C(7)&C(8)&C(9)&C(10)*
               1'            BXLE FORMAT PROCESSING BITS        GP97338
         MEND  ,                                                GP97338
         SPACE 1                                                GP97332
         MACRO ,                                                GP97339
&NM      FORMDO &REQ                                            GP97339
         GBLC  &FPARM(60)                                       GP97339
         GBLA  &FPX                                             GP97339
         LCLC  &LBL                                             GP97339
&LBL     SETC  'FRM'.'&FPX'                                     GP97339
         AIF   (&FPX LT 60).OK                                  GP97339
         MNOTE 8,'FORMDO DESIGNED FOR 60 ENTRIES MAXIMUM'       GP97339
         MEXIT ,                                                GP97339
.OK      AIF   ('&REQ' NE '').NONNULL                           GP97339
         MNOTE 8,'FORMDO REQUIRES ONE PARAMETER'                GP97339
         MEXIT ,                                                GP97339
.NONNULL AIF   ('&NM' EQ '').NOLAB                              GP97339
&NM      DS    0H                                               GP97339
.NOLAB   AIF   (&FPX NE 30).NOBOUND                             GP97339
&LBL     LR    R5,R6         LOAD SECOND FLAG WORD              GP97339
&LBL     SETC  ''                                               GP97339
.NOBOUND ANOP  ,                                                GP97339
&FPX     SETA  &FPX+1                                           GP97339
&LBL     BXH   R5,R5,FRM&FPX   SKIP SECTION IF REQUEST BIT OFF  GP97339
&FPARM(&FPX) SETC '&REQ'     MAKE FORM MACRO MATCH THIS PARM    GP97339
         MEND  ,                                                GP97339
         SPACE 1                                                GP97332
         MACRO ,                                                GP97332
&NM      SUBHEAD ,           START A SUBROUTINE                 GP97332
&NM      STM   R0,R15,8(R13)  SAVE CALLER'S REGISTERS           GP97332
         LA    R13,LOCSAVE1-LOCSAVE(,R13)  PUSH THE STACK       GP97332
         MEND  ,                                                GP97332
         SPACE 1                                                GP97332
         MACRO ,                                                GP97332
&NM      SUBRET  &TYPE=BR,&RS=R0,&RE=R15,&VECT=0                GP97332
&NM      SH    R13,=Y(LOCSAVE1-LOCSAVE)  POP THE STACK          GP97332
         LM    &RS,&RE,4*&RS+8(R13)  RESTORE CALLER'S REGISTERS GP97335
         AIF   ('&TYPE' EQ 'BSM').BSM                           GP97335
         AIF   ('&VECT' EQ '0').BR                              GP97335
         B     &VECT.(,R9)   VECTORED RETURN                    GP97335
         MEXIT ,                                                GP97335
.BR      BR    R9            RETURN TO CALLER                   GP97332
         MEXIT ,                                                GP97335
.BSM     AIF   ('&VECT' EQ '0').BSM0                            GP97335
         AL    R9,=A(&VECT)  ADJUST RETURN ADDRESS              GP97335
.BSM0    RET31 R9            RETURN IN CALLER'S MODE            GP97335
         MEND  ,                                                GP97332
         SPACE 1                                                GP97330
         MACRO ,                                                GP97332
&NM      BASHEAD ,           START A SUBROUTINE                 GP97349
         PUSH  USING                                            GP97349
         DROP  R11,R12                                          GP97349
SUBRTNES CSECT ,                                                GP97349
&NM      STM   R0,R15,8(R13)  SAVE CALLER'S REGISTERS           GP97349
         LA    R13,LOCSAVE1-LOCSAVE(,R13)  PUSH THE STACK       GP97349
         LAE   R11,0(0,R15)  MAKE LOCAL BASE                    GP97349
         LA    R12,2048                                         GP97349
         LAE   R12,2048(R12,R11)                                GP97349
         USING &NM,R11,R12                                      GP97349
         MEND  ,                                                GP97349
         SPACE 1                                                GP97349
         MACRO ,                                                GP97349
&NM      BASRET  &TYPE=BSM,&RS=R0,&RE=R15,&VECT=0,&RR=R9        GP97349
&NM      SH    R13,=Y(LOCSAVE1-LOCSAVE)  POP THE STACK          GP97349
         AIF   ('&VECT' EQ '0').BSM0                            GP97349
         LA    &RR,&VECT     GET RETURN OFFSET                  GP97349
         A     &RR,4*&RR+8(R13) ADJUST RETURN                   GP97349
         ST    &RR,4*&RR+8(R13) ADJUST RETURN                   GP97349
.BSM0    LM    &RS,&RE,4*&RS+8(R13)  RESTORE CALLER'S REGISTERS GP97349
         RET31 &RR           RETURN IN CALLER'S MODE            GP97349
         MEND  ,                                                GP97349
         SPACE 1                                                GP97349
         MACRO ,                                                GP97349
&NM      BASEND ,                                               GP97349
&NM      DS    0X                                               GP97349
PGMTRACE CSECT ,                                                GP97349
         POP   USING                                            GP97349
         MEND  ,                                                GP97332
         SPACE 1                                                GP97349
         MACRO ,                                                GP97349
&NM      BASCALL &MD,&AM                                        GP97349
         AIF   ('&AM' EQ '').DEF31                              GP97349
&NM      TSX   R9,/&MD,AMODE=&AM                                GP97349
         MEXIT ,                                                GP97349
.DEF31   ANOP  ,                                                GP97349
&NM      TSX   R9,/&MD,AMODE=AM31                               GP97349
         MEND  ,                                                GP97349
         SPACE 1                                                GP97353
         MACRO ,                                                GP97353
&NM      ONSPIE &ADDR,&AM,&WORK=R15,&SAVE=,&REST=               GP97353
         GBLB  &MVSXA                                           GP05189
         GBLC  &MACPLAB                                         GP97353
&MACPLAB SETC  '&NM'                                            GP97353
         AIF   ('&REST' EQ 'YES').RESTORE                       GP97353
         AIF   ('&SAVE' NE 'YES' AND '&SAVE' NE '').NOSAVE      GP97353
         MACPARM @SPICUOL(#SPICUSR),@SPICUSR,OP=MVC SAVE        GP00187
.NOSAVE  AIF   ('&ADDR' EQ '0').RESET                           GP97353
         MACPARM R0,R15,@SPICUSR+4,OP=STM,MODE=THREE            GP00187
         AIF   (NOT &MVSXA).NOSTAM                              GP05189
         MACPARM R0,R15,@SPICUSR+4+16*4,OP=STAM,MODE=THREE      GP00204
.NOSTAM  MACPARM &WORK,&ADDR                                    GP97353
         AIF   (NOT &MVSXA).NOBSM                               GP05189
         AIF   ('&AM' EQ '24' OR '&AM' EQ 'AM24').AM24          GP97353
         AIF   ('&AM' EQ '31' OR '&AM' EQ 'AM31').AM31          GP97353
         AIF   ('&AM' EQ '').NOAM                               GP97353
         MNOTE 4,'UNRECOGNIZED AMODE &AM '                      GP97353
.NOAM    MACPARM &WORK,(0),OP=BSM,OPR=BSM,MODE=EQU              GP97353
         AGO   .COMST                                           GP97353
.AM24    MACPARM &WORK,=X'7FFFFFFF',OP=N                        GP97353
         AGO   .COMST                                           GP97353
.AM31    MACPARM &WORK,=X'80000000',OP=O                        GP97353
         AGO   .COMST                                           GP97353
.NOBSM   MACPARM &WORK,0,OP=BALR,OPR=BALR,MODE=EVEN             GP05189
         AGO   .COMST                                           GP05189
.RESET   MACPARM &WORK,(&WORK),OP=SR,OPR=SR,MODE=EQU            GP00187
.COMST   ST    &WORK,@SPICUSR SET ESPIE RECOVERY ADDRESS        GP97353
         MEXIT ,                                                GP97353
.RESTORE MACPARM @SPICUSR(#SPICUSR),@SPICUOL,OP=MVC  SET OLD RECOVERY
         MEND  ,                                                GP97353
         SPACE 1                                                GP97357
         MACRO ,                                                GP97357
&NM      OPTAD &TEXT,&ADD,&MIN=3                                GP00204
         GBLB  &ZZZOPT@                                         GP00204
         LCLA  &I                                               GP97357
&I       SETA  K'&TEXT                                          GP97357
         AIF   (&ZZZOPT@).LATER                                 GP00204
OFO@LEN  EQU   0,1,C'F'      LENGTH (-1) BYTE                   GP00204
OFO@MIN  EQU   1,1,C'F'      MINIMUM LENGTH                     GP00204
OFO@RES  EQU   2,1,C'F'        RESERVED FOR OPTFG COMPATIBILITY GP00204
OFO@DSP  EQU   3,2,C'A'      OFFSET TO PROCESSING CODE          GP00204
OFO@TXT  EQU   5,8,C'C'      VERB                               GP00204
&ZZZOPT@ SETB  1             DEFINITIONS DONE                   GP00204
.LATER   AIF   ('&TEXT'(1,1) EQ '''').QUOTED                    GP97357
&NM      DC    AL1(&I-1,&MIN-1,0),AL2(INIT&ADD-INITOPTS),CL8'&TEXT '
         MEXIT ,                                                GP97357
.QUOTED  ANOP  ,                                                GP97357
&I       SETA  &I-2                                             GP97357
&NM      DC    AL1(&I-1,&MIN-1,0),AL2(INIT&ADD-INITOPTS),CL8&TEXT
         MEND  ,                                                GP97357
         SPACE 1                                                GP97357
         MACRO ,                                                GP97357
&NM      OPTFG &TEXT,&ADD,&OFF,&ON,&FLAG=FLAGS-OPTFLAGS,&MIN=3  GP00204
         GBLB  &ZZZOPTF                                         GP00204
         LCLA  &I                                               GP97357
&I       SETA  K'&TEXT                                          GP97357
         AIF   (&ZZZOPTF).LATER                                 GP00204
OFOFLEN  EQU   0,1,C'F'      LENGTH (-1) BYTE                   GP00204
OFOFMIN  EQU   1,1,C'F'      MINIMUM LENGTH                     GP00204
OFOFFL@  EQU   2,1,C'A'      MINIMUM LENGTH                     GP00204
OFOFOFF  EQU   3,1,C'X'      FLAGS TO BE RESET                  GP00204
OFOFONN  EQU   4,1,C'X'      FLAGS TO BE SET                    GP00204
OFOFTXT  EQU   5,8,C'C'      VERB                               GP00204
&ZZZOPTF SETB  1             DEFINITIONS DONE                   GP00204
.LATER   AIF   ('&TEXT'(1,1) EQ '''').QUOTED                    GP97357
&NM      DC    AL1(&I-1,&MIN-1,&ADD&FLAG,255-(&OFF),&ON),CL8'&TEXT '
         MEXIT ,                                                GP97357
.QUOTED  ANOP  ,                                                GP97357
&I       SETA  &I-2                                             GP97357
&NM      DC    AL1(&I-1,&MIN-1,&ADD&FLAG,255-(&OFF),&ON),CL8&TEXT
         MEND  ,                                                GP97357
         SPACE 1                                                GP97357
         MACRO ,                                                GP97357
&NM      CLOSURE ,                                              GP97357
         LCLC  &T                                               GP08278
&T       SETC  '&SYSNDX'                                        GP08278
&NM      BASCALL CLOSER                  CLOSE THE TRACE FILE   GP97357
         TM    TRQFLAGS,FGNOSTAE  DID WE ESTAE ?                GP08278
         BNZ   ZZST&T                                           GP08278
         ESTAE 0                       KILL MY ESTAE EXIT       GP97357
ZZST&T   L     R1,=A(@USRSPIE)                                  GP97357
         L     R1,0(,R1)     LOAD USER'S PICA ADDRESS           GP97357
         ESPIE RESET,(1)     RESTORE USER'S ENVIRONMENT         GP97357
         MEND  ,                                                GP97357
         SPACE 1                                                GP97347
         MACRO ,                                                GP99057
&LBL     SVCDEF &XN,&TEXT                                       GP99057
         LCLA  &I                                               GP99057
&I       SETA  K'&TEXT                                          GP99057
         AIF   ('&TEXT'(1,1) EQ '''').STR                       GP99057
         AIF   (&I LT 1).MEND   SKIP UNDEFINED                  GP99057
&LBL     DC    X'&XN',AL1(&I-1),CL(&I)'&TEXT '                  GP99057
         MEXIT ,                                                GP99057
.STR     ANOP  ,                                                GP99057
&I       SETA  &I-2                                             GP99057
         AIF   (&I LT 1).MEND   SKIP UNDEFINED                  GP99057
&LBL     DC    X'&XN',AL1(&I-1),CL(&I)&TEXT                     GP99057
.MEND    MEND  ,                                                GP99057
         SPACE 1                                                GP97347
         MACRO ,                                                GP00029
&LBL     STATBLK &PFX=NEXT                                      GP00029
         GBLB  &ZZSTBK1                                         GP00029
         LCLC  &P                                               GP00029
&P       SETC  '&PFX'                                           GP00029
         AIF   ('&LBL' EQ '').NOHEAD                            GP00029
&LBL     DS    0D            BEGIN STATUS BLOCK                 GP00029
         DC    CL4'&PFX '
.NOHEAD  ANOP  ,                                                GP00029
&P.REG   DC    16A(0)  1/N   REGISTERS OF THE TRACED PROGRAM    GP00029
&P.ACR   DC    16A(0)  2/N   ACCESS REGISTERS                   GP00029
&P.PSW   DC    XL8'0'  *****DEBUG*****
&P.MASK  DC    X'00FFFFFF' 3 24 OR 31 BIT ADDR CALCULATON MASK  GP00029
&P.IC    DC    F'0'          NEW VALUE FOR THE LOCATION CNTR    GP00029
&P.AM    DC    X'00'         ADDRESSING MODE                    GP00029
&P.IL    DC    X'00' 1/3     INSTRUCTION LENGTH                 GP00029
&P.CC    DC    X'00' 2/3     CONDITION CODE                     GP00029
&P.PM    DC    X'00' 3/3     PROGRAM MASK                       GP00029
&P.ACM   DC    X'00' 4/3     ACCESS MODE                        GP00029
&P.PKMD  DC    X'00'         PROTECT KEY/MODE                   GP03127
         AIF   (&ZZSTBK1).NOFLGS                                GP00029
FGAM31   EQU   X'80'           RUNNING IN 31-BIT MODE           GP00029
FGIIL    EQU   X'C0'           INSTRUCTION LENGTH MASK          GP00169
FGICC    EQU   X'30'           CONDITION CODE MASK              GP00169
FGIPM    EQU   X'0F'           PROGRAM MASK MASK                GP00169
FGACM    EQU   X'C0'           ADDRESS SPACE MODE               GP00169
&ZZSTBK1 SETB  1             SHOW FIRST TIME DONE               GP00029
.NOFLGS  ANOP  ,                                                GP00029
&P.SAVE  EQU   *-&P.REG                LENGTH TO PRESERVE       GP00029
.MEND    MEND  ,                                                GP00029
         SPACE 1                                                GP97347
         PUNCH ' ORDER PGMTRACE(P) ' MAKE DUMPS EASIER TO READ  GP97339
         PUNCH ' ALIAS TRACE '       MAKE IT EASIER TO LINK     GP98260
         PUNCH ' SETCODE AC(1) '     MAKE IT EASIER TO USE      GP05189
         SPACE 1                                                GP00169
         PRINT ON,NOGEN                                         GP97331
         COPY  OPTIONGB                                         GP97335
         SPACE 1                                                GP97347
         GBLC  &FPARM(60)    DEFINE FORM OPERANDS BY ACTION     GP97339
         GBLC  &BKT          BREAK TEXT STRING (2 BYTES)        GP98087
         GBLC  &RQC,&RQCL,&RQCH   ESPIE REQUEST CODE, LOW/HIGH  GP99111
         GBLA  &FPX          INDEX TO FORM ACTION               GP97339
         SPACE 1                                                GP97347
         SYSPARM LIST=YES                                       GP97335
         SPACE 2                                                GP97352
PGMTRACE START 0                                                GP97072
         YREGS ,             MNEMONIC REGISTER EQUATES          GP97072
ILCR     EQU   R7                      PSEUDO LOCATION COUNTER  GP00169
MAXMODNM EQU   256           MAX # OF MODULES NAMES/ADDRESSES KEPT
LPL      EQU   132                     LENGTH OF THE PRINT LINE GP00169
SP       EQU   95            SUBPOOL FOR TRACE GETMAINS         GP97349
&BKT     SETC  '0069'        TEXT SET AT BREAKPOINT             GP98087
&RQC     SETC  '83'          ESPIE REQUESTS - VIA DIAGNOSE      GP99111
&RQCL    SETC  'C0'          ESPIE REQUESTS - LOWEST CODE       GP99111
&RQCH    SETC  'DF'          ESPIE REQUESTS - HIGHEST CODE      GP99111
         IHAPIE ,                                               GP05189
         IHAEPIE ,           NON-IBM MAPPING UNDER MVS          GP97352
LGTHEPIE EQU   *-EPIE        DEFINE LENGTH                      GP98136
PGMTRACE CSECT ,             RECOVER FROM DSECT                 GP05189
         SPACE 1                                                GP97336
         PUSH  USING                                            GP97336
         PRINT NOGEN                                            GP97336
***********************************************************************
*                                                                     *
*    PGMTRACE ENTRY POINT - TRACE PROGRAM SPECIFIED IN DD SYSTROPT;   *
*      WHEN SYSTROPT MISSING OR NO LOAD STMT, USES STEPNAME (!)       *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97336
         USING PGMTRACE,R15                                     GP97336
         B     AROUND        SKIP AROUND                        GP97072
         DC    AL1(L'TRACELIT)         CSECT IDENTIFIER         GP97072
TRACELIT DC    C'PGMTRACE ASSEMBLED &SYSDATE @ &SYSTIME'        GP97072
*  NOTE THAT THE FOLLOWING ADDRESS CONSTANTS ARE AT FIXED OFFSETS AND
*    ARE REFERENCED IN THE #TRC MACRO.                          GP99048
         ORG   PGMTRACE+64   LEAVE A LITTLE ROOM                GP99048
ADVECT   DC    A(TRACE,TRACKILL,TRACEON,TRACEOFF)               GP99048
         DC    A(TRACEOPT,TRACEAT,0,0,0)                        GP99048
AROUND   STM   R14,R12,12(R13)  SAVE CALLER'S REGISTERS         GP97336
         STM   R0,R15,LOCSAVE+8  SAVE SOME FOR TRACE            GP97342
         STAM  R0,R15,LOCSAVE+8+16*4  SAVE ACCESS REGS          GP00029
         IPM   R5            SAVE PROGRAM MASK                  GP00169
         IAC   R5            SAVE ADDRESS SPACE MODE            GP00169
         SAC   0             AND RESET IT                       GP00169
         LAE   R11,0(0,R15)  MAKE FIRST BASE                    GP97072
         LA    R12,2048      MAKE A CONSTANT                    GP97072
         LAE   R12,2048(R12,R11)           SECOND BASE          GP97072
         DROP  ,                                                GP97072
         USING PGMTRACE,R11,R12            BASE THIS            GP97072
         L     R10,=A(DATASECT)  GET WORK AREA                  GP97349
         USING DATASECT,R10                                     GP97349
         MVC   NEXTREG(64),LOCSAVE+8  PRESERVE USER'S INPUT REGS
         MVC   NEXTACR(64),LOCSAVE+8+16*4                       GP00029
         LA    R9,LOCSAVE    POINT TO TEMP SAVE AREA            GP97339
         ST    R13,4(,R9)                                       GP97339
         ST    R9,8(,R13)    LINK                               GP97339
         LR    R13,R9                                           GP97339
         BASCALL INITOPTS       PROCESS USER OPTION DATASET     GP97349
         CLI   EPNAME,C' '   WAS MODULE SPECIFIED?              GP97338
         BH    PGMHAVE       YES; USE IT                        GP97338
         LA    R3,EPNAME     POINT TO RETURN NAME               GP97338
         L     R4,PSATOLD-PSA  GET THE CURRENT TCB              GP97336
         L     R4,TCBTIO-TCB(,R4)  GET THE TIOT                 GP97336
         LA    R3,8(,R4)     POINT TO STEP NAME                 GP97336
         CLI   0(R3),C' '    IS THERE ONE?                      GP97336
         BH    PGMMOVE       YES; USE STEP                      GP97336
         LA    R3,16(,R4)    ELSE TRY PROC STEP                 GP97336
         CLI   0(R3),C' '    IS THERE ONE?                      GP97336
         BH    PGMMOVE       YES; USE PROCSTEP                  GP97336
         LA    R3,0(,R4)     LAST RESORT - JOB NAME             GP97336
         CLI   0(R3),C' '    WHAT KIND OF RINKY-DINK SYSTEM     GP97336
         BH    PGMMOVE         WOULDN'T HAVE ONE OF THOSE?      GP97336
PGMTRBAD WTO  'PGMTRACE - UNABLE TO LOAD MODULE TO BE TESTED',ROUTCDE=7
         ABEND 999,DUMP      BAD NAME                           GP97351
         SPACE 1                                                GP97336
PGMMOVE  MVC   EPNAME,0(R3)  USE DEFAULTED NAME                 GP99058
PGMHAVE  BLDL  0,BLDLIST                                        GP99144
         BXH   R15,R15,PGMTRBAD  FAIL                           GP99144
         NC    PDS2ATR-PDS2+EPNAME(2),=AL1(255-PDS2RENT-PDS2REUS,255-PD*
               S2REFR)       ALLOW @AT PLACEMENT                GP99144
         LOAD  DE=EPNAME,ERRET=PGMTRBAD      LOAD THE MODULE    GP99144
         ST    R0,NEXTREG+15*4  SAVE THE ENTRY ADDRESS          GP97342
         L     R13,NEXTREG+13*4  RESTORE                        GP99058
         LR    R14,R0        ALSO PASS TO TRACE                 GP97342
         N     R0,=X'80000000'  RETAIN ONLY THE MODE            GP97342
         LA    R15,COMTRACE  START THE TRACE                    GP97336
         OR    R15,R0        SET THE DESIRED AMODE              GP97342
         BSM   R0,R15        TRACE USER'S PROGRAM - NO RETURN   GP97336
         POP   USING                                            GP97336
         EJECT ,                                                GP97336
         PRINT NOGEN                                            GP00169
***********************************************************************
*                                                                     *
*    INITIALIZATION OF THE TRACE ROUTINE                              *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
         DROP  ,                                                GP97338
         USING TRACE,R15                                        GP97336
         ENTRY TRACE                                            GP97335
TRACE    STM   R0,R15,LOCSAVE+8        SAVE ALL REGISTERS       GP97072
         STAM  R0,R15,LOCSAVE+8+16*4  SAVE ACCESS REGS          GP00029
         IPM   R5            SAVE CURRENT CONDITION CODE        GP97072
         IAC   R5            SAVE ADDRESS SPACE MODE            GP00169
         SAC   0             AND RESET IT                       GP00169
         SPACE 1                                                GP00169
         LAE   R11,0(0,R15)  MAKE FIRST BASE                    GP97072
         LA    R12,TRACE-PGMTRACE                               GP97336
         SLR   R11,R12       =ADDRESS OF PROGRAM TRACE          GP97336
         LA    R12,2048      MAKE A CONSTANT                    GP97072
         LAE   R12,2048(R12,R11)           SECOND BASE          GP97072
         DROP  ,                                                GP97072
         USING PGMTRACE,R11,R12            BASE THIS            GP97072
         L     R10,=A(DATASECT)  GET WORK AREA                  GP97349
         USING DATASECT,R10                                     GP97349
         MVC   NEXTREG(64),LOCSAVE+8                            GP97084
         MVC   NEXTACR(64),LOCSAVE+8+16*4                       GP00029
         TM    PROFLAGS,FGSYNEOF  FIRST CALL ?                  GP99117
         BNZ   COMTRACE      YES; SKIP API EXCHANGE             GP99117
         ICM   R1,15,NEXTREG+4  TEST PASSED R1                  GP99117
         BZ    COMTRACE      NOTHING                            GP99117
         MVC   DBT@UDCB(8),4(R1)  PASS PRINT OPTIONS            GP99117
         SPACE 1                                                GP97332
*  PGMTRACE AND TRACE - COMMON INITIALIZATION                   GP97332
COMTRACE ST    R14,NEXTIC    FIRST IC                           GP97332
         SR    R9,R9         ZERO EXCEPT FOR AM BIT             GP97352
         BSM   R9,0          GET AMODE BIT                      GP97352
         STCM  R5,8,NEXTCC   CONDITION CODE                     GP97336
         STCM  R5,8,NEXTPM   AND PROGRAM MASK                   GP97336
         AIF   (NOT &MVSXA).SKPINAM                             GP06213
         STCM  R9,8,NEXTAM                                      GP97352
         STCM  R5,2,NEXTACM  AND ADDRESS SPACE MODE             GP00169
.SKPINAM NC    NEXTIL(4),=AL1(FGIIL,FGICC,FGIPM,FGACM) MASK ALL FIELDS
         MVI   NEXTMASK,0    SET FOR 24-BIT ADDRESSES           GP97335
         AIF   (NOT &MVSXA).SKPINAN                             GP06213
         LTR   R9,R9           TEST CALLER'S MODE               GP97087
         BNM   CALLER24      CALLER IN 24-BIT ADDRESSING MODE   GP97087
         MVI   NEXTMASK,X'7F'  SET FOR 31-BIT ADDRESSES         GP97335
         B     CALLERCM                                         GP97332
.SKPINAN ANOP  ,                                                GP06213
CALLER24 NC    NEXTIC,NEXTMASK  CLEAR HIGH BIT/BYTE             GP97332
CALLERCM STD   0,FPR0                  SAVE THE INITIAL VALUES  GP97332
         STD   2,FPR2                  OF THE FLOATING POINT    GP97332
         STD   4,FPR4                  REGISTERS                GP97332
         STD   6,FPR6                                           GP97332
         OC    FPR0(4*2*4),FPR0 EVER USED?                      GP97332
         BZ    *+8           NO                                 GP97332
         OI    OTHFLAGS,FGUFTP  YES; KEEP TRACK                 GP97332
         LA    R13,LOCSAVE   MAKE SAVE AREA FOR LOCAL USE       GP97073
         NI    OPTFLAGS,255-FGQUIT-FGDOPRT  RESET FLAGS         GP00214
         NI    PROFLAGS,255-FGINAT                              GP00214
         NI    OTHFLAGS,FGMODLST-FGMODEXM  RESET FLOAT/TRACE    GP00214
         CLI   EPNAME,C' '   INVOKED BY PGMTRACE?               GP97338
         BH    ESTAE         YES                                GP97338
         BASCALL INITOPTS       PROCESS OPTIONS DATASET         GP97349
         TM    TRQFLAGS,FGNOSTAE   INHIBIT (E)STAE ?            GP08278
         BNZ   ESTAEOK          FAKE IT                         GP08278
ESTAE    ESTAE RECOVER,XCTL=NO,PARAM=ESTAEPRM,PURGE=HALT,ASYNCH=NO
         LTR   R15,R15                                          GP97072
         BZ    ESTAEOK                                          GP00169
NOSTASPI ABEND 111,DUMP                                         GP97352
         LTORG ,             SMALL, BUT BEAUTIFUL?              GP05189
***********************************************************************
*                                                                     *
*              SAVE  AREAS                                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97072
LOCSAVE  DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE1 DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE2 DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE3 DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE4 DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE5 DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE6 DC    18F'0'                  SAVE AREA                GP97073
LOCSAVE7 DC    18F'0'                  SAVE AREA                GP97073
*OCSAVE8 DC    18F'0'                  SAVE AREA                GP97073
*OCSAVE9 DC    18F'0'                  SAVE AREA                GP97073
         DC    C'END OF STACK'  EYE-CATCHER FOR OVERRUN CHECKS  GP97332
         SPACE 1                                                GP00169
***********************************************************************
*                                                                     *
*    SET INITIAL INSTRUCTION COUNTER AND SHOW REGISTERS               *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97072
ESTAEOK  BASCALL SETSPIE       SET SPIE EXIT ADDR, IN AMODE 31  GP97352
         BASCALL WRITE       WRITE 1 BLANK LINE                 GP97084
         BASCALL MAPCSECT    GET MOD MAP FROM LLE AND RB CHAIN  GP97345
         BASCALL NAMEFIND    RESOLVE RANGE DATA                 GP97345
         BASCALL HEADSUP     BUILD INFORMATION LINES            GP97335
         L     ILCR,NEXTIC   SET IC FOR FIRST INSTRUCTION       GP97332
         TSX   R9,GETSTACK,AMODE=31  GET THE STACK              GP97349
         MVC   ADVECT(4),ADVECT+8  CHANGE INIT TO ON ENTRY      GP00029
         ICM   R3,15,@BEGIN  DID USER SPECIFY BEGIN AT ?        GP99163
         BZ    MAINLOOP      NO; TRACE FROM ENTRY               GP99163
         SPACE 1                                                GP99163
***********************************************************************
*                                                                     *
*    USER REQUESTED TRACING AT A SPECIFIED MODULE/OFFSET              *
*                                                                     *
*    WE PLANT A BREAK AT THE SPECIFIED ADDRESS, AND INVOKE THE        *
*    PROGRAM WITHOUT TRACING. TRACE STARTS WHEN BREAK HIT.            *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP99163
         USING RNGDSECT,R3   LOOKS LIKE RANGE                   GP99163
         LA    R1,RNGNAME    POINT TO NAME FIELD                GP99163
         BAS   R9,PGRMNAME   LOOK IT UP                         GP99163
           B   BADBEGIN      NO MATCH; CHECK VARIABLE LIST      GP99163
         USING MODDSECT,R7                                      GP99163
         LM    R0,R1,MODADDR  LOAD ADDRESS AND SIZE             GP99163
         A     R0,RNGADDR    ADD OPTIONAL OFFSET                GP99163
         ST    R0,RNGADDR                                       GP99163
         ICM   R2,15,RNGSIZE  DID USER SPECIFY A SIZE?          GP99163
         BNZ   *+8           YES; RETAIN IT                     GP99163
         ST    R1,RNGSIZE    ELSE USE MODULE SIZE               GP99163
*NEVER*  TM    RNGFLAG1,FGRVALID  ADDRESS RESOLVED?             GP99163
*SET*    BZ    BADBEGIN      NO; ISSUE WARNING                  GP99163
         ICM   R1,15,RNGADDR  GET START ADDRESS                 GP99163
         BZ    BADBEGIN      ALSO BAD                           GP99163
         LA    R0,=CL16'BEGIN TRACE'                            GP99163
         BASCALL SETAT       SET THE BREAK POINT                GP99163
         LM    R0,R15,NEXTREG  LOAD USER'S ENTRY REGISTERS      GP99163
         BASSM 0,R15         ENTER IN CORRECT AMODE; NO RETURN  GP99163
         SPACE 1                                                GP99163
BADBEGIN MVC   PLINE+2(32),=C'UNABLE TO PROCESS BEGIN; IGNORED' GP99163
         BASCALL WRITE                                          GP99163
         B     MAINLOOP      START PROCESSING                   GP99163
         SPACE 1                                                GP99163
PGRMNAME L     R7,@MODMAP    GET MAP ENTRIES                    GP99163
         LH    R0,MODCNT     NUMBER FOUND                       GP99163
PGRMNLUP CLC   MODNAME,0(R1) SAME MODULE?                       GP99163
         BE    4(,R9)        YES                                GP99163
         LA    R7,MODLEN(,R7)  TRY AGAIN                        GP99163
         BCT   R0,PGRMNLUP                                      GP99163
         BR    R9            NO MATCH                           GP99163
         POP   USING                                            GP99163
         SPACE 1                                                GP97349
GETSTACK SUBHEAD ,                                              GP97349
         ICM   R1,15,@STACK  ALREADY ALLOCATED?                 GP97347
         BNZ   GETSTACX      BUT HOW?                           GP97347
         LA    R4,LPL        SIZE OF PRINT LINE                 GP97347
         ICM   R3,15,@STACKND   GET DESIRED NUMBER OF ENTRIES   GP97347
         BNP   GETSTACX      STACKING DISABLED                  GP97347
         MR    R2,R4         TIMES LINE SIZE INTO R3            GP97347
         STORAGE OBTAIN,LENGTH=(R3),SP=SP,LOC=ANY  GET STORAGE  GP03046
*   LATER CHECK RETURN CODE - WARNING MSG AND CONTINUE W/O STACK
         ST    R1,@STACK     SAVE STACK START                   GP97347
         LR    R2,R1         COPY FOR CLEARING                  GP97347
         SR    R15,R15       CLEAR LENGTH AND SET HEX ZERO PADDING
         MVCL  R2,R14        ZERO STORAGE                       GP97347
         SR    R2,R4         SUBTRACT ONE LINE LENGTH           GP97347
         ST    R2,@STACKND   SET LAST ENTRY ADDRESS             GP97347
         ST    R2,@STACKED   AND SAVE FALSE LAST USED ADDRESS   GP97347
GETSTACX SUBRET TYPE=BSM                                        GP97349
         EJECT                                                  GP00169
***********************************************************************
*                                                                     *
*  MAINLOOP    THE MAJOR CYCLE OF THE TRACE ROUTINE                   *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
MAINLOOP L     R10,=A(DATASECT)   GETS CLOBBERED SOMEWHERE ?    GP11359
         MVC   PREVREG(NEXTSAVE),NEXTREG SAVE REGS AND IC       GP00029
         TM    OPTFLAGS,FGQUIT         IS END TRACE REQUIRED?   GP97084
         BNZ   ENDTRACE                YES, FINISH TRACE PHASE  GP97084
         NI    PROFLAGS,255-FGINAT  RESET AT PROCESSING         GP99057
         L     ILCR,PREVIC   JUST IN CASE                       GP99116
         LR    R1,ILCR       PASS ADDRESS TO BE CHECKED         GP97351
         BASCALL RANGER      CHECK FOR ADDRESS TRACING SELECTION
         MVC   XCELL(6),EXECINOP  PREPARE TRAILING NO-OPS       GP97084
         CLC   =X'&BKT',0(ILCR)  REACHED A BREAKPOINT?          GP98087
         BNE   MAINATNO      NO; SKIP OVER                      GP98087
         L     R15,=A(X'80000000'+LOOKAT31)  @AT CHAIN LOOK-UP  GP99057
         BASSM R9,R15        INVOKE IT IN 31-BIT MODE           GP99057
           B   MAINATCM      FOUND; SKIP NON-BREAK CODE         GP99057
         SPACE 1                                                GP98087
MAINATNO LA    R0,X'C0'      MAKE LENGTH BIT MASK               GP98081
         IC    R1,0(,ILCR)   GET INSTRUCTION AT LOC.CTR         GP97083
         NR    R1,R0         AND MASK LENGTH BITS               GP98081
         STC   R1,NEXTIL     SAVE FOR LATER                     GP97336
         SRL   R1,6          CONVERT TO INDEX                   GP97083
         SR    R14,R14       CLEAR FOR ILCR ADD                 GP97084
         IC    R14,DCILEN(R1)  LEN-1 OF CORR. INSTRUCTION       GP05189
         XC    XCELL+6(XCELLEN-6),XCELL+6  CLEAR REMAINDER      GP97358
         EX    R14,MAINMOVE  MOVE WITHOUT 0C4                   GP97083
MAINATCM LA    R14,1(,R14)   MAKE IT TRUE LENGTH                GP97087
         ALR   R14,ILCR      GET NEXT INSTRUCTION ADDR          GP97084
         N     ILCR,NEXTMASK MASK FOR ARITHMETIC                GP97335
         ST    R14,NEXTIC    AND SAVE IT                        GP97084
         SPACE 1                                                GP97332
*   JOINED HERE BY TARGET OF EXECUTE                            GP97332
MAINCURS BASCALL INSTANCE    SEE IF INSTRUCTION TO BE TRACED    GP97351
         LA    R1,XCELL      POINT TO NEW INSTRUCTION           GP97330
         BAS   R9,GETFLAGS   GET INSTRUCTION'S FLAGS, ETC.      GP97330
          B    ILGLOP        +0 - GO PRINT MESSAGE AND QUIT     GP97330
         STCM  R15,15,@INST  SAVE INSTRUCTION TABLE ADDRESS     GP97330
         USING OPDSECT,R15                                      GP97330
         MVC   FLAGS(@INST-FLAGS),OPFLAGS GET INSTRUCTION FLAGS GP97336
         TM    OPFLAG1,FGCC  SETS CONDITION CODE?               GP99163
         BZ    MAINNCND      NO                                 GP99163
         MVN   CONDTYPE,OPFLAG1  SET TYPE                       GP99163
MAINNCND SR    R14,R14                                          GP97330
         ICM   R14,3,OPEXEC  LOAD EXECUTOR ADDRESS              GP97330
         DROP  R15                                              GP97330
         LA    R3,XCELL      PARAMETER FOR EXECUTE ROUTINE      GP97339
         BAS   R9,PGMTRACE(R14) AND INVOKE PROCESSOR            GP97330
         B     MAINTRET      GO TO COMMON RETURN POINT          GP99057
         SPACE 1                                                GP97330
*  BREAKPOINT (AT) LOOK-UP RUNS IN 31-BIT MODE                  GP99057
LOOKAT31 LA    R15,@AT       GET BREAKPOINT ADDRESSES, IF ANY   GP98087
         PUSH  USING                                            GP98087
         USING AT@DSECT,R15                                     GP98087
LOOKATLP ICM   R15,15,AT@LINK  GET NEXT ENTRY                   GP98087
         BZ    LOOKATNO      NO BREAKPOINTS SET                 GP98087
         TM    AT@FLAG1,FG@VALID  RESOLVED ADDRESS?             GP98087
         BZ    LOOKATLP      NO; IGNORE IT                      GP98087
         C     ILCR,AT@ADDR  MATCHING ADDRESS?                  GP98087
         BNE   LOOKATLP      NO; TRY AGAIN                      GP98087
         LA    R0,X'C0'      MAKE LENGTH BIT MASK               GP98087
         IC    R1,AT@INST    GET TRUE INSTRUCTION CODE          GP98087
         NR    R1,R0         AND MASK LENGTH BITS               GP98087
         STC   R1,NEXTIL     SAVE FOR LATER                     GP98087
         SRL   R1,6          CONVERT TO INDEX                   GP98087
         SR    R14,R14       CLEAR FOR ILCR ADD                 GP98087
         IC    R14,DCILEN(R1)  LEN-1 OF CORR. INSTRUCTION       GP05189
         XC    XCELL+6(XCELLEN-6),XCELL+6  CLEAR REMAINDER      GP98087
         EX    R14,MAINMOVE  MOVE WITHOUT 0C4                   GP98087
         MVC   XCELL(2),AT@INST  USE CORRECT TEXT               GP98087
         OI    PROFLAGS,FGINAT  SHOW WHERE DOING AT             GP99057
         BSM   0,R9          RETURN TO CALLER IN CORRECT MODE   GP99057
LOOKATNO AL    R9,=F'4'      TAKE UNMATCHED RETURN              GP99057
         BSM   0,R9          RETURN TO CALLER IN CORRECT MODE   GP99057
         POP   USING                                            GP99111
         SPACE 2                                                GP97330
MAINTRET TM    FLAG1,FGFTP             FLOATING POINT INSTRUCTION ?
         BZ    MAINDONE      NO, FLOATING REGISTERS UNCHANGED   GP00169
         STD   0,FPR0                  SAVE THE POSSIBLY MODIFIED
         STD   2,FPR2                  FLOATING POINT REGISTERS GP00169
         STD   4,FPR4                  FOR THE PRINT ROUTINES   GP00169
         STD   6,FPR6                                           GP00169
         OI    OTHFLAGS,FGUFTP  SHOW PROGRAM USED FLOATING POINT
         EJECT                                                  GP00169
***********************************************************************
*                                                                     *
*  MAINDONE    THE BRANCH AND EXECUTE INSTRUCTION PROCESSORS          *
*              RETURN TO THE MAIN LOOP HERE                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
MAINDONE CLI   TRCFLAGS,0    ANY TRACE REQUESTS?                GP97336
         BE    MAINPRTS      NO; HONOR FGNOPRT                  GP97336
MAINOVAR NC    TRWFLAGS,TRCFLAGS  SEE IF ANY CONDITION MATCHED? GP97336
         BZ    MAINOSTK      NO                                 GP97336
         BASCALL UNSTACK     PRINT STACKED ENTRIES              GP97347
         OI    OPTFLAGS,FGDOPRT1  PRINT ONE CYCLE               GP97336
         OI    FLAG1,FGDOREG+FGDOACR  SHOW ALL REGISTERS        GP00029
MAINOSTK L     ILCR,PREVIC   RELOAD INSTRUCTION ADDRESS         GP97360
         CLI   PSXCELL,X'44'  SUBJECT OF EXECUTE?               GP97336
         BNE   MAINPRTS      NO; JUST PRINT CURRENT             GP97336
         SWAP  XCELL,PSXCELL,LEN=XCELLEN  SWAP ENTRIES          GP97336
         BAS   R9,PRINTSUP   FORMAT THE EXECUTE DATA            GP97336
         SWAP  XCELL,PSXCELL,LEN=XCELLEN  SWAP ENTRIES BACK     GP97336
MAINPRTS BAS   R9,PRINTSUP      SHOW INSTRUCTION AND RESULTS    GP97085
         TM    TRCFLAGS,FGTVAR  VARIABLES?                      GP97338
         BZ    MAINDOPT      NO                                 GP97338
         BASCALL VARCHECK    CHECK FOR VARIABLE CHANGES         GP97338
         TM    TRWFLAGS,FGTVAR  VARIABLES?                      GP97338
         BZ    MAINDOPT      NO                                 GP97338
         BASCALL UNSTACK     MATCH - PRINT CURRENT              GP97349
         BASCALL VARPRINT    IDENTIFY CHANGED VARIABLE(S)       GP97338
MAINDOPT NI    OPTFLAGS,255-FGDOPRT1  RESET SINGLE PRINT        GP97336
         MVI   TRWFLAGS,0    RESET EVENT FLAGS                  GP97336
         L     ILCR,NEXTIC   LOAD ADDRESS OF NEXT INSTRUCTION   GP97084
         TM    OPTFLAGS,FGNOPREX  LIMIT REACHED?                GP97345
         BZ    MAINLOOP                AROUND THE LOOP AGAIN    GP97345
         NI    OPTFLAGS,255-FGNOPREX   RESET IT                 GP97345
         MVC   PLINE+5(27),=C'=== PRINT LIMIT REACHED ==='      GP97345
         BASCALL WRITE       PRINT WARNING                      GP97345
         OI    OPTFLAGS,FGNOPRT   INHIBIT FURTHER TRACE PRINTING
         TM    TRQFLAGS,FGABPREX  ABEND ON PRINTER EXCESSION?   GP97345
         BNZ   MAINPREX      PRINT AND ABEND                    GP97345
         TM    TRQFLAGS,FGEXPREX  EXIT ON PRINT EXCESSION?      GP97345
         BZ    MAINLOOP      NO; TRACE WITHOUT PRINTING         GP97345
         B     ENDTRACE      YES; RETURN TO CALLER              GP97345
         SPACE 1                                                GP97345
MAINPREX BAS   R9,GRFORM     PRINT REGISTERS                    GP97345
         BAS   R9,ARFORM     PRINT ACCESS REGISTERS             GP00029
         BAS   R9,FPFORM     PRINT FLOATING DATA                GP97345
         L     R1,=X'00E22000'  SET FUNNY ABEND                 GP97345
         ABEND (R1),DUMP     AND QUIT                           GP97345
         SPACE 1                                                GP00169
MAINMOVE MVC   XCELL(0),0(ILCR)  FETCH THE NEXT INSTRUCTION     GP97083
EXOPMOVE MVC   PSXCELL(0),0(R1)    FETCH THE NEXT INSTRUCTION   GP97084
EXOPORI  OI    PSXCELL+1,0   EDIT EXECUTED INSTRUCTION          GP97332
         SPACE 1                                                GP97332
***********************************************************************
*                                                                     *
*  EXOP        EXECUTE INSTRUCTION PROCESSOR                          *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97332
EXOP     CLI   TRCFLAGS,0    TRACING IN EFFECT?                 GP97336
         BNE   EXOPEVAL      YES; DEFER PRINTING                GP97336
         BAS   R9,PRINTSUP   PRINT EXECUTE BEFORE MODIFICATION  GP97332
EXOPEVAL LA    R3,XCELL+2    POINT TO TARGET BASE AND DISPLACEMENT
         BAS   R14,OLDXBD    EVALUATE THE EFFECTIVE ADDRESS     GP97332
         LR    R1,R0         COPY THE RETURNED ADDRESS          GP97332
*REVISIT*BASCALL RANGER      CHECK FOR ADDRESS TRACING SELECTION
         MVC   PSXCELL(6),EXECINOP PREPARE TRAILING NO-OPS      GP98095
         CLC   =X'&BKT',0(R1)    REACHED A BREAKPOINT?          GP98095
         BNE   EXOPATNO      NO; SKIP OVER                      GP98095
         LA    R15,@AT       GET BREAKPOINT ADDRESSES, IF ANY   GP98095
         PUSH  USING                                            GP98095
         USING AT@DSECT,R15                                     GP98095
EXOPATLP ICM   R15,15,AT@LINK  GET NEXT ENTRY                   GP98095
         BZ    EXOPATNO      NO BREAKPOINTS SET                 GP98095
         TM    AT@FLAG1,FG@VALID  RESOLVED ADDRESS?             GP98095
         BZ    EXOPATLP      NO; IGNORE IT                      GP98095
         C     R1,AT@ADDR    MATCHING ADDRESS?                  GP98095
         BNE   EXOPATLP      NO; TRY AGAIN                      GP98095
         LA    R0,X'C0'      MAKE LENGTH BIT MASK               GP98095
         IC    R14,AT@INST   GET TRUE INSTRUCTION CODE          GP98095
         NR    R14,R0        AND MASK LENGTH BITS               GP98095
         SRL   R14,6         CONVERT TO INDEX                   GP98095
         IC    R14,DCILEN(R14)  LEN-1 OF CORR. INSTRUCTION      GP05189
         XC    PSXCELL+6(XCELLEN-6),PSXCELL+6 CLEAR REMAINDER   GP98095
         EX    R14,EXOPMOVE  MOVE WITHOUT 0C4                   GP98095
         MVC   PSXCELL(2),AT@INST USE CORRECT TEXT              GP98095
         B     EXOPATCM      JOIN COMMON CODE                   GP98095
         POP   USING                                            GP98095
         SPACE 1                                                GP98095
EXOPATNO LA    R0,X'C0'      MAKE LENGTH BIT MASK               GP98095
         IC    R14,0(,R1)    GET INSTRUCTION AT LOC.CTR         GP98095
         NR    R14,R0        AND MASK LENGTH BITS               GP98095
         SRL   R14,6         CONVERT TO INDEX                   GP98095
         IC    R14,DCILEN(R14)  LEN-1 OF CORR. INSTRUCTION      GP05189
         XC    PSXCELL+6(XCELLEN-6),PSXCELL+6 CLEAR REMAINDER   GP98095
         EX    R14,EXOPMOVE  MOVE WITHOUT 0C4                   GP98095
EXOPATCM IC    R1,XCELL+1              RR  OF THE EXECUTE INSTRUCTION
         N     R1,OOOOOOFO             R0                       GP97332
         BZ    EXOPASIS                NOTHING TO OR IN         GP97332
         SPACE 1                                                GP97332
*  MODIFY SECOND BYTE IF R1 IS NON-ZERO                         GP97332
         SRL   R1,2                    R1*4                     GP97332
         L     R2,NEXTREG(R1)          GET THE BITS TO OR IN    GP97332
         EX    R2,EXOPORI             OR INTO THE SUBJECT INSTRUCTION
EXOPASIS SWAP  XCELL,PSXCELL,LEN=XCELLEN  SWAP ENTRIES          GP97336
         CLI   XCELL,X'44'   EXECUTE AN EXECUTE?                GP97330
         BNE   MAINCURS      NO; PROCESS IT NORMALLY            GP97332
         MVC   @INST,@PSINST  SAME INSTRUCTION DEFINITION       GP00187
         OI    OPTFLAGS,FGDOPRT  FORCE PRINTING                 GP97346
         BASCALL UNSTACK     PRINT STACKED ENTRIES              GP97347
         B     ILGLOP2       EXECUTED EXECUTES ARE ILLEGAL      GP97330
         SPACE 2                                                GP00169
***********************************************************************
*                                                                     *
*  ILGLOP      ILLEGAL  INSTRUCTION  HANDLING                         *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
ILGLOP   OI    OPTFLAGS,FGDOPRT  FORCE PRINTING                 GP97346
         BASCALL UNSTACK            PRINT STACKED ENTRIES       GP97347
         OI    PROFLAGS,FGILLOP  SIGNAL BAD OPCODE              GP97346
ILGLOP2  OI    FLAG1,FGDOREG+FGDOACR  SHOW ALL REGISTERS        GP00029
         BAS   R9,PRINTSUP   FORMAT THE BAD INSTRUCTION         GP97336
         MVC   PLOP(L'MSGILLOP),MSGILLOP **** ILLEGAL INSTRUCTION
         BASCALL WRITE       PRINT THE MESSAGE                  GP97087
         CLOSURE ,           CLEAN UP AND GET OUT               GP97349
         ABEND 222,DUMP                                         GP97087
         SPACE 3                                                GP97087
***********************************************************************
*                                                                     *
*  GETFLAGS   PERFORM INSTRUCTION TABLE LOOK-UP FOR CURRENT OP CODE   *
*                                                                     *
***********************************************************************
GETFLAGS SUBHEAD ,               SAVE CALLER'S REGISTERS        GP97330
         SR    R15,R15                                          GP97330
         IC    R15,0(,R1)    GET MAJOR OP-CODE                  GP97330
         MH    R15,=Y(OPLEN)  TIMES TABLE LENGTH                GP97330
         A     R15,=A(INST)  POINT TO INSTRUCTION               GP97330
         USING OPDSECT,R15                                      GP97330
         CLI   OPNMFG,C'@'   IS IT:  0 -ILLEGAL; @ -TABLE; > -VALID
         BLR   R9            ILLEGAL                            GP97330
         BH    GETFLAGX      GOOD - RETURN ADDRESS              GP97330
         SR    R14,R14       CLEAR FOR IC                       GP97330
         SR    R2,R2         CLEAR FOR IC                       GP97330
         IC    R2,OTOFOFF(,R15)  GET OFFSET TO SUBCODE BYTE
         IC    R14,0(R2,R1)  GET SUBCODE
         IC    R2,OTOFMSK(,R15)  GET MASK
         NR    R14,R2        MASK UNNECESSARY BITS              GP97330
         IC    R2,OTOFSHF(,R15)  GET RIGHT SHIFT VALUE
         SRL   R14,0(R2)     SHIFT UNWANTED BITS                GP97330
         IC    R2,OTOFMAX(,R15)  GET MAX VALUE
         CR    R14,R2        IS IT IN LEGAL RANGE?              GP97330
         BHR   R9            NO; RETURN ILLEGAL                 GP97330
         ICM   R15,15,OPTADD  GET EXTENDED TABLE ADDRESS        GP97330
         MH    R14,=Y(OPLEN) GET OFFSET TO INSTRUCTION ENTRY    GP97330
         ALR   R15,R14       GET ENTRY ADDRESS                  GP97330
         CLI   OPNMFG,C'@'   IS IT LEGAL?                       GP97330
         BNHR  R9            NO; FAIL IT                        GP97330
GETFLAGX SUBRET RE=R14,VECT=4  RESTORE ALL BUT R15 (ENTRY ADDRESS)
         DROP  R15                                              GP97330
         EJECT                                                  GP97330
***********************************************************************
*                                                                     *
*  ENDTRACE    ROUTINE TO TERMINATE TRACING AND RESUME EXECUTION      *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
ENDTRACE MVC   PLLCTR,=8C'-' MAKE A SEPARATOR                   GP97352
         MVC   PLLCTR+10(L'MSGUNEND),MSGUNEND                   GP97352
         BASCALL WRITE              PRINT MOSTLY BLANK LINE     GP98074
         BASCALL UNSTACK            PRINT STACKED ENTRIES       GP97347
ENDTRACK TM    OPTFLAGS,FGNOPRT        IS PRINTING ENABLED ?    GP97084
         BNZ   GOFREE                  NO, SO SKIP PRINTING     GP97084
         MVC   PLINE+6(L'MSGEND),MSGEND WRITE ENDING MESSAGE    GP97086
         L     R0,NEXTREG+(4*14)       LOAD RETURN ADDRESS      GP97086
         BAS   R9,HEX2EBC              CONVERT FOR PRINTING     GP97072
         MVC   PLINE+6+1+L'MSGEND(8),HEXEDOUT PLACE IN MESSAGE  GP97086
         TM    NEXTAM,FGAM31    IN 31-BIT ADDRESSING MODE?      GP97085
         BNZ   HVEND31          YES                             GP97085
         MVC   PLINE+6+1+L'MSGEND(2),BLANKS SUPPRESS 25-31      GP97086
HVEND31  BASCALL WRITE      PRINT THE MESSAGE                   GP97086
         BAS   R9,GRFORM               DUMP GENERAL REGISTERS   GP97331
         BAS   R9,ARFORM     PRINT ACCESS REGISTERS             GP00029
         BAS   R9,FPFORM               DUMP FLOATING REGISTERS  GP97331
         BASCALL WRITE      PRINT 1 BLANK LINE                  GP97087
         SPACE 1                                                GP98306
GOFREE   BASCALL FREEAT       RESET AT INTERCEPTS AND FREEMAIN  GP99089
         SPACE 1                                                GP00169
         CLOSURE ,           CLOSE                              GP97087
         LM    R0,R15,NEXTREG          LOAD THE GENERAL REGISTERS
         SR    R15,R15             CLEAR RETURN CODE            GP00169
         BR    R14                     RESUME EXECUTION OF THE PROGRAM
MSGUNEND DC    C'TRACE ENDING; STACKED TEXT FOLLOWS:'           GP97352
         SPACE 1                                                GP97072
***********************************************************************
*                                                                     *
*   ESPIE PROCESSING - SET IT                                         *
*                                                                     *
***********************************************************************
SETSPIE  LA    R1,DB         SET PARM LIST ADDRESS              GP99111
         AIF   (NOT &MVSXA).SKETEST                             GP05189
         ESPIE TEST,(1)      GET INFO ON OLD ESPIE              GP99111
         CH    R15,=H'4'     ESPIE / SPIE / NOTHING             GP99111
         BNL   SETSPIED                                         GP99111
         MVC   @USREXIT,DB   COPY USER'S EXIT ADDRESS           GP99111
         MVC   @USRPARM,DB+4   AND USER'S PARM LIST             GP99111
.SKETEST ANOP  ,             CAN'T GET USER'S DATA ?            GP05189
SETSPIED ESPIE SET,SPIEEXIT,((1,15)),PARAM=SPIEPARM             GP97352
         ST    R1,@USRSPIE   SAVE USER'S ESPIE TOKEN (OR 0)     GP97352
         AIF   (&MVSXA).SKETEXI                                 GP08151
         LTR   R1,R1         WAS THERE A USER SPIE ?            GP08151
         BZ    *+4+6         NO; IGNORE                         GP08151
         MVC   @USREXIT+1(3),1(R1)  COPY USER'S EXIT ADDRESS    GP08151
.SKETEXI BSM   0,R9          RETURN TO CALLER                   GP97352
         SPACE 1                                                GP97072
***********************************************************************
*                                                                     *
*   ESPIE EXIT - CHECK TYPE OF ERROR, AND LOCATION, AND RECOVER       *
*                                                                     *
*   RECOVERY CONSISTS OF RELOADING ALL REGISTERS, AND GOING TO USER'S *
*   SPECIFIED RESTART ADDRESS; RESTART REQUEST IS CLEARED.            *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP97352
         DROP  ,                                                GP97352
         USING SPIEEXIT,R15                                     GP97352
SPIEEXIT STM   R0,R15,SAVE3  SAVE ALL ENTRY REGISTERS           GP05190
         AIF   (&MVSXA).ENTXA                                   GP04234
***********************************************************************
*   IN MVS 3.8 (HERCULES) CHECK FOR COMPLETE INSTRUCTION EXECUTION    *
*     IF SO, SAVE REGISTERS AND PSW INFORMATION AND CONTINUE TRACE    *
***********************************************************************
         L     R0,=A(EXTAGOOD+2)   INTERRUPT ON DC H'0'?        GP06216
         CLM   R0,7,PIEPSW+5-PIE(R1)                            GP06216
         BNE   SPIEXOTH                                         GP06216
         PUSH  USING                                            GP06216
         L     R2,=A(EXECOP) START ADDRESSABILITY WITH RTNE     GP06216
         USING EXECOP,R2                                        GP06216
         STM   R3,R13,NEXTREG+3*4  SAVE R3-R13                  GP06216
         MVC   NEXTREG(3*4),PIEGR0-PIE(R1)  SAVE R0-R2          GP06216
         MVC   NEXTREG+14*4(2*4),PIEGR14-PIE(R1)  SAVE R14-R15  GP06216
         MVC   NEXTPSW,PIEPSW-PIE(R1) *****DEBUG*****
         PSWBITS NEXT,PIEPSW-PIE(R1),FORMAT=SPIE,CC=TEST        GP06233
         LM    R4,R5,PIEPSW-PIE(R1)   EXTRACT PSW               GP06216
         STCM  R4,4,NEXTPKMD  SET PROTECT KEY AND MODE          GP06216
         LA    R0,EXECSPIE   GET RESTORE POINT                  GP06216
         STCM  R0,7,PIEPSW+5-PIE(R1)   SET NEW PSW IC           GP06216
         BR    R14           RETURN TO EXIT FROM EXECOP         GP06216
         POP   USING                                            GP06216
***********************************************************************
*   IN MVS 3.8 (HERCULES) CHECK FOR USER REQUEST TO IGNORE THE        *
*     INTERRUPT (@SPCUSER<>0 - HANDLE THE FAST WAY                    *
***********************************************************************
SPIEXOTH L     R10,=A(DATASECT)  COMMON DATA                    GP06241
         USING DATASECT,R10                                     GP06241
         ICM   R0,15,@SPICUSR  DID USER PROVIDE RECOVERY DATA?  GP06241
         BZ    SPIEXEPI                                         GP06241
         PUSH  USING                                            GP06241
         DROP  R10                                              GP06241
         LR    R2,R10        ALLOW LM AND XC                    GP06241
         USING DATASECT,R2                                      GP06241
         STCM  R0,7,PIEPSW-PIE+5(R1)          SET NEW IC        GP06241
         MVC   PIEGR0-PIE(3*4,R1),@SPICUSR+4  SET R0-R2         GP06241
         MVC   PIEGR14-PIE(2*4,R1),@SPICUSR+4+14*4  R14-R15     GP06241
         LM    R3,R13,@SPICUSR+4+3*4  LOAD NEW/USER R3-R13      GP06241
         XC    @SPICUSR(#SPICUSR),@SPICUSR CLEAR TO AVOID RECURSION
         BR    R14           RETURN                             GP06241
         POP   USING                                            GP06241
***********************************************************************
*   SEE WHETHER USER HAS AN ACTIVE SPIE OUTSTANDING.  IF SO, INVOKE   *
*     IT.  ALSO SET AND TEST RECURSION.                               *
***********************************************************************
SPIEXEPI ICM   R0,15,@USREXIT   ACTIVE USER SPIE ?              GP08151
         BZ    SPIEXNUS                                         GP08151
*FAILS   ST    R0,SAVE3+R15*4     BUILD NEW REGISTERS           GP08278
*FAILS   MVC   SAVE3+R2+4((R13-R2+1)*4),NEXTREG+R2*4  PGM REGS  GP08278
*FAILS   L     R3,SAVE3+4    RESTORE ENTRY R1                   GP08277
*FAILS   MVC   PIEGR0-PIE(3*4,R3),PREVREG     SET R0-R2         GP08277
*FAILS   MVC   PIEGR14-PIE(2*4,R3),PREVREG+R14*4    R14-R15     GP08277
*FAILS   LM    R0,R15,SAVE3  LOAD ALL REGISTERS                 GP08278
         LM    R1,R14,SAVE3+4   RELOAD ALL REGISTERS            GP08151
         LR    R15,R0        SET USER'S ROUTINE ADDRESS         GP08151
         BR    R15           GO TO USER PROGRAM'S SPIE EXIT     GP08151
         SPACE 1
***********************************************************************
*   IN MVS 3.8 (HERCULES) BUILD A FAKE EPIE AND POPULATE REFERENCED   *
*     FIELDS - SAVES HAVING TO MAINTAIN TWO VERSIONS OF THE CODE      *
***********************************************************************
SPIEXNUS LA    R9,SAVE3GRS   LOCAL SAVE AS EPIE                 GP04234
         USING EPIE,R9       DECLARE IT                         GP04234
         MVC   EPIEGPR(16*4),SAVE3   ENTRY REGISTERS            GP04234
         MVC   EPIEPSW,PIEPSW-PIE(R1)                           GP04234
         MVC   EPIEGR00(3*4),PIEGR0-PIE(R1)                     GP04234
         MVC   EPIEGR14(2*4),PIEGR14-PIE(R1)                    GP04234
         SR    R2,R2         CLEAR FOR IC                       GP04234
         IC    R2,PIEPSW+4-PIE(R1)  GET LEN/FLAGS               GP04234
         SRL   R2,6          RIGHT JUSTIFY LENGTH BITS          GP04234
         STH   R2,EPIEINT    SET INTERRUPT LENGTH FLAGS         GP04234
         TR    EPIEINT+1(1),=AL1(0,2,4,6)  GET INSTR. LENGTH    GP04234
         IC    R2,PIEPSW+3-PIE(R1)  GET INTERRUPT CODE          GP04234
         N     R2,=X'0000000F' MASK                             GP04234
         BNZ   *+8           LEAVE FAKE 0C4                     GP04234
         LA    R2,4          FAKE AN 0C4                        GP04234
         STH   R2,EPIEINC    SET INTERRUPT CODE                 GP04234
         AGO   .COMXA                                           GP04234
.ENTXA   LR    R9,R1         SAVE EPIE ADDRESS
.COMXA   USING EPIE,R9       DECLARE THE PIE                     93198
         ICM   R0,15,@SPINEW  EXIT FROM THIS?                   GP99111
         BZ    SPIENEW                                          GP99111
         XC    @SPINEW,@SPINEW  DON'T LOOP                      GP99111
         MVC   0(LGTHEPIE,R9),CURRPIE  RESTORE OLD EPIE DATA    GP99111
         B     SPIEEXST      INVOKE WHATEVER                    GP05190
         SPACE 1                                                GP99111
SPIENEW  MVC   CURRPIE(LGTHEPIE),0(R9) SAVE PIE FOR RETRY       GP97353
         AIF   (NOT &MVSXA).SKPAR1                              GP05189
         ICM   R0,15,@SPICUSR  DID USER PROVIDE RECOVERY DATA?  GP00187
         BZ    SPEXFLAG                                         GP00187
         MVC   EPIEGPR(16*4),@SPICUSR+4  RESTORE USER'S REGS    GP00187
         MVC   EPIEAR(16*4),@SPICUSR+4+16*4  AND ACCESS REGS    GP00204
         B     SPIEEXST      YES; RESET IT AND HONOR            GP97352
.SKPAR1  ANOP  ,                                                GP97352
SPEXFLAG B     SPIEEXTD      SHOULD NEVER GET HERE TWICE        GP97353
         ABEND 1234,DUMP     MAJOR BOO BOO                      GP97353
SPIEEXTD NI    SPEXFLAG+1,X'0F'  0C3 ON SPIE RECURSION          GP97353
         LA    R0,ENDPIE     SET FOR GENERAL RECOVERY           GP00029
         AIF   (NOT &MVSXA).NOAMEX                              GP06213
         O     R0,=X'80000000'  AMODE 31                        GP97353
         NI    EPIEPSW+2,255-X'C0'  RESET ACCESS REGISTER MODE  GP00204
.NOAMEX  ANOP  ,                                                GP06213
SPIEEXST STCM  R0,15,EPIEPSW+4  SET RESTART ADDRESS             GP97352
         XC    @SPICUSR(#SPICUSR),@SPICUSR CLEAR TO AVOID RECURSION
*WHY?*   ST    R14,@SPIRET   SAVE RETURN ADDRESS                GP99111
         AIF   (&MVSXA).EXITXA                                  GP04234
         L     R1,SAVE3+4    RELOAD R1 ENTRY (PIE)              GP04234
         MVC   PIEPSW-PIE(8,R1),EPIEPSW  SET NEW PSW            GP04234
         MVC   PIEGR0-PIE(3*4,R1),EPIEGR00  SET R0-R2           GP04234
         MVC   PIEGR14-PIE(2*4,R1),EPIEGR14  SET R14-R15        GP04234
         LM    R0,R2,SAVE3   RELOAD ENTRY R0-R2                 GP04234
         LM    R3,R13,SAVE3GRS+3*4  RELOAD NEW/USER R3-R13      GP04234
         LM    R14,R15,SAVE3+14*4   ENTRY R14-R15               GP04234
         AGO   .EXITCOM
.EXITXA  LM    R0,R15,SAVE3   RESTORE REGS
.EXITCOM BR    R14           RETURN
         POP   USING         EPIE DATA GONE AFTER THIS
         SPACE 1                                                 86219
SAVE3    DC    16A(0)        SPIE EXIT SAVE AREA
SAVE3GRS DC    16A(0)        FAKE EPIE FOR PRE-XA               GP04234
SAVE3PSW DC    XL8'0'        PRE-XA FAKE EPIE 2/3               GP04234
SAVE3INT DC    XL4'0'        PRE-XA FAKE INTERRUPT CODE 3/3     GP04234
@MYEPIE  DC    A(0,0)        CHAIN OF SAVED EPIE DATA
         SPACE 1                                                GP97352
***********************************************************************
*                                                                     *
*   ENDPIE  -  HANDLE PROGRAM INTERRUPTION                            *
*                                                                     *
*     TEXT BEGINNING WITH &BKT (0069) IS MATCHED TO A BREAKPOINT.     *
*        TRACING STARTS/CONTINUES PER USER OPTIONS.                   *
*                                                                     *
*     TEXT BEGINNING WITH &RQC (81 OR 83) CARRIES A TRACE REQUEST     *
*        AS AN ALTERNATIVE TO A CALL (THAT WOULD DESTROY R14/R15)     *
*                                                                     *
*     TEXT BEGINNING WITH B2FF IS A LOCAL #TRAP MACRO EXPANSION THAT  *
*        REQUESTS FORMATTING OF PSW, REGISTERS, AND SELECTED STORAGE. *
*        PROCESSING IS HANDLED BY COMPLETING A PSEUDO EPIE BLOCK AND  *
*        CALLING EXTERNAL PGMTRAP4 ROUTINE (RESETS NEW PSW).          *
*                                                                     *
*     WHEN A USER ESPIE IS IN EFFECT, THE EPIE IS ROUTED TO THE USER  *
*        EXIT IN THE APPROPRIATE MODE. INTCODES ARE *NOT* SCREENED.   *
*                                                                     *
*     OTHERWISE TRACING STOPS WITH A MESSAGE AND A C00 ABEND.         *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97352
         PUSH  USING         JUST IN CASE                       GP97352
         DROP  ,             DON'T TRUST NOBODY                 GP97352
ENDPIE   BASR  R12,0         SET NEW BASE                       GP97353
         USING APPLEPIE,R12                                     GP97353
APPLEPIE LM    R10,R13,SPIEPARM   RELOAD BASE REGISTERS         GP97353
         USING DATASECT,R10                                     GP97352
         USING PGMTRACE,R11,R12  RESTORE BASES                  GP97352
         MVC   PRNTPIE(LGTHEPIE),CURRPIE PRESERVE OVER PRINT    GP97357
         TM    OTHFLAGS,FGPREPIE  SHOW EVERY EPIE ?             GP03115
         BZ    CHERRYPI                                         GP03115
         MVC   PLMODNM+1(4),=C'EPIE'                            GP03115
         LA    R2,PRNTPIE    ADDRESS                            GP03115
         LA    R3,LGTHEPIE   LENGTH                             GP03115
         L     R4,MAXHEXLN                                      GP03115
         BASCALL DUMPLINE    DUMP                               GP03115
CHERRYPI LA    R6,PRNTPIE    USE THIS PIE FOR PROCESSING        GP97352
         USING EPIE,R6       DECLARE IT                         GP97352
         L     ILCR,EPIEGPR+ILCR*4 SET INSTRUCTION ADDRESS      GP97353
         SPACE 1                                                GP97352
         LH    R3,EPIEINT    LOAD INSTRUCTION LENGTH            GP97357
         L     R2,EPIEPSW+4  LOAD FAILING ADDRESS               GP97352
         LTR   R2,R2         AMODE 31 ?
         BM    ENDPIE31      YES
         N     R2,=X'00FFFFFF' KILL
ENDPIE31 N     R2,=X'7FFFFFFF' KILL AMODE BIT                   GP97352
         SH    R2,EPIEINT    GET ADDRESS                        GP97353
         LR    R4,R2         SAVE ADDRESS FOR BREAK POINT CODE  GP99057
         ST    R2,LOCDB+8    MAKE ARGUMENT                      GP97352
         STM   R2,R3,LOCDB   SET DEFAULT FOR SEARCH FAILURE     GP97352
         LA    R0,EXTARGET                                      GP00204
         CR    R2,R0         IS USER'S INSTRUCTION BAD?         GP97353
         BNE   ENDPIE1       NO; KEEP ILCR                      GP97353
         L     ILCR,PREVIC   GET ORIGINAL IC ADDRESS            GP99116
         SPACE 1                                                GP99111
ENDPIE1  CLC   =H'2',EPIEINC PRIVILEGED?                        GP11350
         BE    ENDPIE1B        YES                              GP11350
         CLC   =H'1',EPIEINC WAS THIS AN INVALID OPCODE?        GP98095
         BNE   ENDPIE3       NO; NOT BREAKPOINT                 GP98095
ENDPIE1B LA    R8,@AT        GET BREAKPOINT ADDRESSES, IF ANY   GP98087
         PUSH  USING                                            GP98087
         USING AT@DSECT,R8                                      GP98087
ENDPIE1L ICM   R8,15,AT@LINK   GET NEXT ENTRY                   GP98087
         BZ    ENDPIE2       NO BREAKPOINTS SET                 GP98087
         TM    AT@FLAG1,FG@VALID  RESOLVED ADDRESS?             GP98087
         BZ    ENDPIE1L      NO; IGNORE IT                      GP98087
         C     R2,AT@ADDR    MATCHING ADDRESS?                  GP98087
         BNE   ENDPIE1L      NO; TRY AGAIN                      GP98087
         CLC   AT@INST,=X'&BKT'  INVALID AT?                    GP98316
         BE    ENDPIE2       YES; FAIL - DON'T LOOP             GP98316
         L     R0,EPIEPSW    GET LEFT-HAND PSW                  GP99057
         BAS   R9,HEX2EBC    MAKE HEX                           GP99057
         MVC   PLINE+10+L'BREAKHIT+2(8),HEXEDOUT                GP99057
         L     R0,EPIEPSW+4  GET RIGHT-HAND PSW                 GP99057
         BAS   R9,HEX2EBC    MAKE HEX                           GP99057
         MVC   PLINE+10+L'BREAKHIT+2+9(8),HEXEDOUT              GP99057
         L     R0,EPIEINT    GET LENGTH, FLAGS, AND INTERRUPT CODE
         BAS   R9,HEX2EBC    MAKE HEX                           GP99057
         MVC   PLINE+10+L'BREAKHIT+2+18(8),HEXEDOUT             GP99057
         MVC   PLINE+10+L'BREAKHIT+2+28(L'AT@COMNT),AT@COMNT    GP99057
*NO*     OI    OPTFLAGS,FGDOPRT  FORCE PRINTING                 GP97353
*NO*     BASCALL UNSTACK         UNSTACK                        GP97353
         MVC   PLINE+10(L'BREAKHIT),BREAKHIT                    GP98087
         BASCALL STACK       INFORM USER OF BREAK               GP98317
         AIF   (NOT &MVSXA).SKPAR2                              GP05189
         MVC   NEXTACR(64),EPIEAR   REPLACE USER'S REGISTERS    GP00204
.SKPAR2  MVC   NEXTREG(64),EPIEGPR  REPLACE USER'S REGISTERS    GP98087
ENDPINLA BAS   R9,GRFORM     DISPLAY THEM                       GP98095
         BAS   R9,ARFORM     PRINT ACCESS REGISTERS             GP00029
         LR    ILCR,R4       LOAD BREAKPOINT ADDRESS            GP98087
         ST    ILCR,NEXTIC   SET NEW INSTRUCTION ADDRESS        GP99057
         PSWBITS NEXT,EPIEPSW                                   GP06233
         MVC   NEXTIL,AT@INST  UPDATE LENGTH                    GP98087
         MVC   PREVIL(4),NEXTIL  ALSO SET PREV IN CASE F1×FGCC  GP99057
         SR    R14,R14       CLEAR FOR IC                       GP98095
         ICM   R14,8,NEXTAM  GET USER'S ADDRESSING MODE         GP98095
         LA    R15,MAINLOOP  GET START ADDRESS (E.G., BEGIN @)  GP98095
         TM    OTHFLAGS,FGINEXEC  BREAK DURING EXEC ?           GP98317
         BZ    ENDPI3EX                                         GP98317
         LA    R15,EXECSPIE  SET RESTART POINT                  GP98317
ENDPI3EX OR    R14,R15       SET ADDRESS AND MODE BIT           GP98095
         OI    SPEXFLAG+1,X'F0'  ALLOW SPIE RETRY               GP98317
         BSM   0,R14         RESTART THIS INSTRUCTION           GP98087
         POP   USING         RESTORE MAPPING                    GP98087
BREAKHIT DC    C'***** BREAK POINT ENTERED *****'               GP98087
         SPACE 1                                                GP98087
ENDPIE2  CLC   =X'B2FF',0(R2)     #TRAP MACRO ?                 GP11350
         BE    TRAPPIE              YES; HANDLE                 GP11350
         CLI   0(R2),X'&RQC'  LOOKING AT A LOCAL REQUEST?       GP99111
         BNE   ENDPIE3       NO                                 GP99111
         CLI   1(R2),X'&RQCL' IN RANGE?                         GP99111
         BL    ENDPIE3       NO; SEE IF ROUTABLE                GP99111
         CLI   1(R2),X'&RQCH' NOT TOO HIGH?                     GP99111
*NEXT*   BNL   ENDPIE3       (=RQCH IS EPIE RETURN REQUEST)     GP99111
         BL    LOCPIERQ      GO TO PROCESS LOCAL REQUESTS       GP99111
         SPACE 1                                                GP98087
ENDPIE3  ICM   R15,15,@USREXIT   USER WANT TO FIELD THIS?       GP99111
         B     ENDPIE3N      NO                                 GP99111
*OLD*    BZ    ENDPIE3N      NO                                 GP99111
         MVC   @USRPIE(LGTHEPIE),CURRPIE  COPY ENTIRE PIE       GP99117
         LA    R1,@USRPIE    POINT TO PIE                       GP99117
         AIF   (&MVSXA).NEWSYNC                                 GP05189
         SYNCH (R15)         CALL USER EXIT (FAILS)             GP05189
         AGO   .COMSYNC                                         GP05189
.NEWSYNC MVC   @USRPIE+EPIEPARM-EPIE(4),@USRPARM  USER'S PARM   GP99111
         SYNCH (R15),RESTORE=YES,AMODE=DEFINED  CALL USER EXIT  GP99117
.COMSYNC MVC   CURRPIE(LGTHEPIE),@USRPIE                        GP99117
         MVC   NEXTREG(4*16),@USRPIE+EPIEGPR-EPIE  UPDATE REGS  GP99117
         AIF   (NOT &MVSXA).SKPAR3                              GP05189
         MVC   NEXTACR(4*16),@USRPIE+EPIEAR-EPIE   UPDATE REGS  GP00204
.SKPAR3  MVC   NEXTIC,@USRPIE+EPIEPSW+4-EPIE                    GP99117
         MVI   NEXTMASK,X'7F'  MAKE ADDRESSING MASK             GP98087
         NI    NEXTAM,X'80'  RETAIN ONLY AM BIT                 GP98087
         BNZ   *+8           AM31                               GP98087
         MVI   NEXTMASK,0    AM24                               GP98087
         OC    NEXTIC(1),NEXTAM  BUT FIX UP NEW ADDRESS         GP99057
         SR    R14,R14       CLEAR FOR IC                       GP98095
         ICM   R14,8,NEXTAM  GET USER'S ADDRESSING MODE         GP98095
         L     R15,@USRPIE+EPIEPSW+4-EPIE  RESTART ADDRESS?     GP98095
         LA    R0,EXTARGET                                      GP00204
         CR    R2,R0         IS USER'S INSTRUCTION BAD?         GP99118
         BNE   ENDPINEX                                         GP99118
*OOPS    TM    OTHFLAGS,FGINEXEC  BREAK DURING EXEC ?           GP98317
*OOPS    BZ    ENDPINEX                                         GP98317
         LA    R15,EXECSPIE  SET RESTART POINT                  GP98317
ENDPINEX OR    R14,R15       SET ADDRESS AND MODE BIT           GP98095
         OI    SPEXFLAG+1,X'F0'  ALLOW SPIE RETRY               GP98317
*LOOPS   BSM   0,R14         RESTART THIS INSTRUCTION           GP98087
         ST    R14,@SPINEW                                      GP99118
         OI    SPEXFLAG+1,X'F0'  ALLOW SPIE RETRY               GP98317
         DC    X'&RQC,&RQCH,00,00'  GO VIA ESPIE EXIT TO USER   GP99111
         SPACE 2
*---------------------------------------------------------------------*
*   HANDLE #TRAP MACRO REQUEST. BUILD PARAMETER LIST AND CALL PROGRAM *
*     PGMTRAP4 TO FORMAT.                                             *
*---------------------------------------------------------------------*
TRAPPIE  MVC   @USRPIE(LGTHEPIE),CURRPIE  COPY ENTIRE PIE       GP11350
*TEST    LA    R0,TRAPRITE   ADDRESS OF WRITE ROUTINE           GP11350
*TEST    LA    R1,@SPICUSR   ADDRESS OF ERROR BYPASS WORD       GP11350
*TEST    STM   R0,R1,@PIEPRT   PASS PRINT AND INTERCEPT ADDR.   GP11350
         LA    R1,@USRPIE    POINT TO PIE                       GP11350
         L     R15,=V(PGMTRAP4)                                 GP11350
         BALR  R14,R15                                          GP11350
         L     R14,EPIEPSW+4-EPIE+CURRPIE                       GP11350
         AL    R14,=F'4'      SKIP ADDRESS CONSTANT             GP11350
         ST    R14,@SPINEW                                      GP99118
         OI    SPEXFLAG+1,X'F0'  ALLOW SPIE RETRY               GP98317
         DC    X'&RQC,&RQCH,00,00'  GO VIA ESPIE EXIT TO USER   GP99111
         SPACE 1                                                GP98087
ENDPIE3N OI    OPTFLAGS,FGDOPRT  FORCE PRINTING                 GP97353
         BASCALL UNSTACK         UNSTACK                        GP97353
         L     ILCR,PREVIC   GET ORIGINAL IC ADDRESS            GP00204
         BAS   R9,PRINTSUP   FORMAT THE FAILING INSTRUCTION     GP97353
         SPACE 1                                                GP97352
         L     R0,EPIEPSW    GET LEFT-HAND PSW                  GP97353
         BAS   R9,HEX2EBC    MAKE HEX                           GP97353
         MVC   SPMPSW1,HEXEDOUT                                 GP97353
         L     R0,EPIEPSW+4  GET RIGHT-HAND PSW                 GP97353
         BAS   R9,HEX2EBC    MAKE HEX                           GP97353
         MVC   SPMPSW2,HEXEDOUT                                 GP97353
         L     R0,EPIEINT    GET LENGTH, FLAGS, AND INTERRUPT CODE
         BAS   R9,HEX2EBC    MAKE HEX                           GP97353
         MVC   SPMLNIC,HEXEDOUT                                 GP97353
         L     R14,@MODMAP                                      GP97333
         USING MODDSECT,R14                                     GP97333
         LH    R15,MODCNT                                       GP97085
ENDSPLUP LM    R0,R1,MODADDR   GET ADDRESS AND SIZE             GP97356
         CR    R2,R0         IN RANGE?                          GP97356
         BL    ENDSPUMP                                         GP97356
         AR    R1,R0                                            GP97356
         CR    R2,R1                                            GP97333
         BNL   ENDSPUMP                                         GP98088
         SR    R1,R0         RESTORE LENGTH                     GP97357
         STM   R0,R1,LOCDB                                      GP97357
         MVC   SPMMOD,MODNAME  SAVE NAME AND ADDRESS            GP97356
         B     ENDSPEND                                         GP97356
         SPACE 1                                                GP97332
ENDSPUMP LA    R14,MODLEN(,R14) BUMP NEXT MODULE ADDRESS TABLE  GP97333
         BCT   R15,ENDSPLUP                                     GP97332
         DROP  R14                                              GP97356
         SPACE 1                                                GP97332
*  MODULE/CSECT NOT FOUND; USE MAJOR NAME OF FAILING ADDRESS    GP97353
         MVSQUERY INADDR=LOCDB+8,SEARCH=JPALPA,OEPNM=SPMMOD,           *
               OLOADPT=LOCDB,OLEN=LOCDB+4 PLISTVER=2            GP05189
         BXH   R15,R15,SPMRWHO                                  GP97352
         NI    LOCDB,X'7F'   REMOVE AMODE BIT                   GP98116
ENDSPEND LR    R0,R2         GET ERROR ADDRESS                  GP97353
         S     R0,LOCDB      RELATIVE ADDRESS                   GP97353
         BAS   R9,HEX2EBC                                       GP97353
         MVC   SPMOFF,HEXEDOUT  SHOW                            GP97353
         MVI   SPMPLUS,C'+'                                     GP97353
SPMRWHO  MVC   PLINE(L'SPMMSG),SPMMSG  MOVE TEXT                GP97353
         BASCALL WRITE       WRITE IT                           GP97353
         ONSPIE SPMERR,SAVE=NO                                  GP97353
         LM    R3,R4,LOCDB   GET START AND LENGTH               GP97352
         AR    R4,R3         GET END ADDRESS + 1                GP97352
         SH    R2,=H'4'      SUBTRACT 4 MORE FOR GOOD MEASURE   GP97352
         BNM   *+6                                              GP97352
         SR    R2,R2         HOW DID WE GET HERE?               GP97352
         MAX   (R2),(R3)     DON'T START BEFORE MODULE          GP97352
         LA    R14,16(,R2)   END MOVE ADDRESS+1                 GP97352
         MIN   (R14),(R4)    CLIP END                           GP97352
         ST    R2,LOCDB                                         GP97352
         LR    R0,R2                                            GP97353
         BAS   R9,HEX2EBC                                       GP97353
         MVC   SPMTXT@,HEXEDOUT                                 GP97353
         SR    R14,R2        GET TEXT LENGTH                    GP97352
         SH    R14,=H'1'     CHANGE TO EXECUTE LENGTH           GP97352
         BM    SPMERRD       OOPS                               GP97352
         XC    LOCTXT,LOCTXT                                    GP97352
         EX    R14,SPEXMVC                                      GP97353
         LA    R2,LOCTXT                                        GP97353
         LA    R3,SPMTXT                                        GP97353
         LR    R4,R14                                           GP97353
         SRA   R4,2          CONVERT BYTE TO WORD COUNT         GP97353
         BP    SPMRLOOP                                         GP97353
         LA    R4,1          DO ONE                             GP97353
SPMRLOOP L     R0,0(,R2)                                        GP97353
         BAS   R9,HEX2EBC                                       GP97353
         MVC   0(8,R3),HEXEDOUT                                 GP97353
         LA    R2,4(,R2)                                        GP97353
         LA    R3,8+1(,R3)                                      GP97353
         BCT   R4,SPMRLOOP                                      GP97353
         MVC   PLINE(L'SPMMSG2),SPMMSG2                         GP97353
         BASCALL WRITE                                          GP97353
SPMERR   DS    0H            SKIP TEXT LINE ON ACCESS ERROR     GP97353
SPMERRD  ONSPIE SPIECURS,SAVE=NO                                GP97353
         LA    R5,2          TWO GROUPS OF REGISTERS PER LINE   GP97353
         LA    R4,4          FOUR REGISTERS PER GROUP           GP97353
         MVC   PLMODNM+2(L'RM0),RM0     'R0-R7'                 GP97353
         LA    R2,EPIEGPR    ADDRESS OF 1ST 8 REGISTERS         GP97353
         BAS   R9,REGFORM    PLACE THEM IN PRINT LINE           GP97353
         MVC   PLMODNM+2(L'RM8),RM8     'R8-R15'                GP97353
         LA    R2,EPIEGPR+32  ADDRESS OF 2ND 8 REGISTERS        GP97353
         BAS   R9,REGFORM    PLACE THEM IN PRINT LINE           GP97353
         AIF   (NOT &MVSXA).SKPAR4                              GP05189
         MVC   PLMODNM+2(L'AM0),AM0     'AR0-AR7'               GP00204
         LA    R2,EPIEAR      ADDRESS OF 1ST 8 ACCESS REGS      GP00204
         BAS   R9,REGFORM    PLACE THEM IN PRINT LINE           GP00204
         MVC   PLMODNM+2(L'AM8),AM8     'AR8-AR15'              GP00204
         LA    R2,EPIEAR+8*4  ADDRESS OF 1ST 8 ACCESS REGS      GP00204
         BAS   R9,REGFORM    PLACE THEM IN PRINT LINE           GP00204
.SKPAR4  TM    OTHFLAGS,FGUFTP  ANY FLOATING INSTRUCTIONS?      GP98088
         BZ    MYSPEXIT      NO                                 GP98088
         STD   R0,FPR0       SAVE CURRENT SETTINGS              GP98088
         STD   R2,FPR2       SAVE CURRENT SETTINGS              GP98088
         STD   R4,FPR4       SAVE CURRENT SETTINGS              GP98088
         STD   R6,FPR6       SAVE CURRENT SETTINGS              GP98088
         LA    R5,2          TWO GROUPS OF REGISTERS PER LINE   GP98088
         LA    R4,4          FOUR REGISTERS PER GROUP           GP98088
         MVC   PLMODNM+2(L'FM0),FM0  'F0-F6'                    GP98088
         LA    R2,FPR0       ADDRESS OF FLOATING REGISTERS      GP98088
         BAS   R9,REGFORM    PLACE THEM IN PRINT LINE           GP98088
MYSPEXIT LH    R2,EPIEINT+2  GET INTERRUPT CODE                 GP97353
         OI    SPEXFLAG+1,X'F0'  ALLOW SPIE RETRY               GP97353
SPIECURS ABEND X'C00',DUMP,,SYSTEM REASON=(R2)  GREETINGS       GP97353
SPEXMVC  MVC   LOCTXT(0),0(R2)   MOVE TEXT                      GP97353
         SPACE 1                                                GP99111
LOCPIERQ DS    0H                                               GP99111
         IC    R0,1(,R2)    GET SUBCODE                         GP99111
         BIX   WK=(R1),BASE=APPLEPIE,ERR=ENDPIE3,                      *
               LOC=(LOCPOFF,  C0 TURN TRACE OFF                        *
               LOCPON,        C1 TURN TRACE ON                         *
               LOCPAT,        C2 SET A BREAKPOINT                      *
               LOCPATOF,      C3 RESET A BREAKPOINT             GP99111*
               ,              C4                                       *
               ,              C5                                       *
               ,              C6                                       *
               ,              C7                                       *
               ,              C8                                       *
               ,              C9                                       *
               ,              CA                                       *
               ,              CB                                       *
               ,              CC                                       *
               LOCDEBTR)      CD DEBTROLD LABEL/DEBUG LIST      GP99116
         SPACE 1                                                GP99111
LOCPON   NI    OPTFLAGS,255-FGNOPRT  ENABLE TRACING             GP99111
         B     LOCPIEXT                                         GP99111
         SPACE 1                                                GP99111
LOCPOFF  OI    OPTFLAGS,FGNOPRT      DISABLE TRACING            GP99111
         B     LOCPIEXT                                         GP99111
         SPACE 1                                                GP99111
LOCPAT   DS    0H                    DEFER AT                   GP99111
         B     LOCPIEXT                                         GP99111
         SPACE 1                                                GP99111
LOCPATOF DS    0H                    DEFER AT RESET             GP99111
         B     LOCPIEXT                                         GP99111
         SPACE 1                                                GP99111
*  THIS REQUEST CODE HAS AN ATTACHED LIST, AND CONTROL MUST BE RETURNED
*  AFTER THE LIST. IF THE CODE CAME FROM OUR EXEC UNIT, WE NEED THE
*  USER'S REGISTERS, AND NEED TO SET THE NEW INSTRUCTION ADDRESS.
*                                                               GP99116
LOCDEBTR ICM   R15,15,@DEBTRAC   WAS THE MODULE LOADED?         GP99116
         BNZ   LOCDEBNF      YES; INVOKE IT                     GP99116
         CLI   DBTFGMOD,0    OPTIONS PRESET?                    GP99116
         BH    LOCDEBUP      YES; PRESERVE                      GP99116
         LA    R1,OUTDCB                                        GP99116
         ST    R1,DBT@UDCB   SET OUR DCB ADDRESS                GP99116
         MVI   DBTFGMOD,DBTF@DCB  REQUEST USE OF OPEN DCB       GP99116
LOCDEBUP LA    R14,LOCPIEXT  PRESET FOR NO-OP                   GP99116
         LOAD  EPLOC=#DEBTRAC,ERRET=LOCDEBTW                    GP99116
         ST    R0,@DEBTRAC   ELSE SET IT                        GP99116
LOCDEBNF LA    R0,EXTARGET   POINT TO RELOCATED INSTRUCTION     GP00204
         CLR   R0,R2         MATCH?                             GP99116
         BNE   LOCDEBTW      NO                                 GP99116
         MVC   DBTSAVE(4*16),PREVREG   SET USER'S REGISTERS     GP99116
         LR    R2,ILCR       SET INSTRUCTION ADDRESS            GP99116
         LH    R15,4(,R2)    GET THE LIST LENGTH                GP99116
         ALR   R15,R2        ADD LENGTH TO ADDRESS              GP99116
         AL    R15,=F'4'     ALLOW FOR LENGTH OF DIAG           GP99116
         N     R15,NEXTMASK  FIX AM                             GP99116
         ST    R15,NEXTIC    SET FOR POST-PRINT                 GP99116
         SR    R14,R14                                          GP99116
         ICM   R14,8,NEXTAM                                     GP99116
         LA    R0,EXECSPIE                                      GP99116
         OR    R14,R0                                           GP99116
         ST    R14,EPIEPSW+4-EPIE+CURRPIE  SET RESTART ON RETURN
         LA    R15,DBTSAVE   BY DEFAULT, USE OURS               GP99116
         B     LOCDEBCM      GO TO COMMON                       GP99116
LOCDEBTW LH    R15,4(,R2)    GET THE LIST LENGTH                GP99116
         AL    R15,EPIEPSW+4-EPIE+CURRPIE   GET THE IC          GP99116
         ST    R15,EPIEPSW+4-EPIE+CURRPIE                       GP99116
         MVC   DBTSAVE(4*16),EPIEGPR-EPIE+CURRPIE USER'S RG     GP99116
         LA    R15,DBTSAVE   BY DEFAULT, USE OURS               GP99116
         ICM   R14,3,2(R2)   GET S(DBTSAVE) ADDRESS             GP99116
         BZ    LOCDEBCM      USE OUR WORK AREA WHEN USER DOESN'T
         LR    R15,R14       COPY IT                            GP99116
         SRL   R14,12-2      MAKE REG*4                         GP99116
         N     R14,=X'0000003C'  RETAIN ONLY REGISTER           GP99116
         N     R15,=X'00000FFF'  RETAIN ONLY DISPLACEMENT       GP99116
         AL    R15,EPIEGPR-EPIE+CURRPIE(R14)  LOAD USER'S REGISTER
         AIF   (NOT &MVSXA).DOMSK24                             GP06213
         TM    EPIEPSW+4-EPIE+CURRPIE,X'80'  USER IN AMODE 31?  GP99116
         BNZ   LOCDEBCM      YES                                GP99116
.DOMSK24 N     R15,=X'00FFFFFF'  JUST IN CASE                   GP99116
LOCDEBCM MVC   DBTFLAG,DBTFLAG-DBTSAVE(R15)                     GP99116
         CLI   DBTFGMOD-DBTSAVE(R15),DBTF@WTO  SPECIAL ?        GP99116
         BNH   LOCDEBGO      NO                                 GP99116
         MVC   DBT@UDCB(8),DBT@UDCB-DBTSAVE(R15)  COPY O/P OPTS GP99116
LOCDEBGO LA    R0,DBTSAVE    BUT PASS MY COPY                   GP99116
         LA    R1,6(,R2)     POINT TO VARIABLE LIST             GP99116
         L     R15,@DEBTRAC  LOAD FORMATTER                     GP99116
         BASSM R14,R15       CALL IT                            GP99116
         SPACE 1                                                GP99111
LOCPIEXT MVC   @SPINEW,@SPIRET  GO TO R14                       GP99111
         OI    SPEXFLAG+1,X'F0'  ALLOW SPIE RETRY               GP98317
         DC    X'&RQC,&RQCH,00,01'  GO VIA ESPIE EXIT TO USER   GP99111
         SPACE 1                                                GP00187
         LTORG ,                                                GP00187
         SPACE 1                                                GP97353
LOCDB    DC    2D'0'                                            GP97353
@USRSPIE DC    A(0)          USER'S ESPIE TOKEN                 GP97353
@USREXIT DC    A(0)          USER'S ESPIE EXIT ADDRESS AND MODE GP99111
@USRPARM DC    A(0)          USER'S ESPIE EXIT PARM ADDRESS     GP99111
@SPINEW  DC    A(0)          AM/ADDRESS OF ESPIE EXIT REDIRECT  GP99111
@SPIRET  DC    A(0)          NORMAL SPIE EXIT RETURN ADDRESS    GP99111
CURRPIE  DC    ((LGTHEPIE+3)/4)A(0)   COPY OF PIE               GP97353
PRNTPIE  DC    ((LGTHEPIE+3)/4)A(0)   COPY OF PIE               GP97353
@USRPIE  DC    ((LGTHEPIE+3)/4)A(0)   COPY OF PIE FOR USER EXIT GP99117
         ORG   @USRPIE+EPIEINC+L'EPIEINC-EPIE                   GP11350
@PIEPRT  DC    A(TRAPRITE)   PRINT ROUTINE FOR PGMTRAP4         GP11350
@PIEPICA DC    A(@SPICUSR)   ERROR HANDLER (PIE EXIT BYPASS)    GP11350
         ORG   ,
SPIEPARM DC    A(DATASECT,PGMTRACE,PGMTRACE+4096,PIESAVE)       GP97353
DCILEN   DC    X'01030305'   LEN-1 FOR EXECUTE                  GP05189
DCCCODE  DC    X'008040C0'   CONDITION CODE LOOKUP              GP05189
         SPACE 1                                                GP97353
LOCTXT   DC    XL16'0'       COPY OF FAILING TEXT               GP97353
SPMMSG0  DC    C'** UNEXPECTED INTERRUPT. PSW : '               GP97353
SPMPSW1  DC    CL8' ',C'-'   PSW                                GP97353
SPMPSW2  DC    CL8' ',C' LN/IC '                                GP97353
SPMLNIC  DC    CL8' ',C' '                                      GP97353
SPMMOD   DC    CL8' '        MODULE                             GP97353
SPMPLUS  DC    C' '                                             GP97353
SPMOFF   DC    CL8' '        OFFSET                             GP97353
SPMMSG   EQU   SPMMSG0,*-SPMMSG0,C'C'  COMPLETE MESSAGE         GP97353
SPMTXT0  DC    C' TEXT AT '                                     GP97353
SPMTXT@  DC    CL8' ',C' : ' TEXT ADDRESS                       GP97353
SPMTXT   DC    4CL(8+1)' '   FOUR REGS + PAD                    GP97353
SPMMSG2  EQU   SPMTXT0,*-SPMTXT0,C'C'  SECOND TEXT LINE         GP97353
         POP   USING                                            GP99111
         SPACE 1                                                GP11350
         PUSH  USING                                            GP11350
         DROP  ,                                                GP11350
         USING TRAPRITE,R15                                     GP11350
TRAPRITE STM   R0,R14,TRAPSAVE   SAVE REGISTERS                 GP11350
         LH    R3,0(,R1)     GET LINE LENGTH                    GP11350
         BCTR  R3,0                                             GP11350
         L     R2,=A(PLINE)                                     GP11350
         EX    R3,EXMVCTRP   MOVE IT                            GP11350
         L     R10,=A(DATASECT)   DATA AREA                     GP11350
         L     R15,=A(WRITE)      GET WRITE ROUTINE             GP11350
         BASR  R9,R15        BASCALL                            GP11350
         USING *,R9                                             GP11350
         LM    R0,R15,TRAPSAVE   RESTORE REGS; SET 0 RETURN CD  GP11350
         BR    R14           INVOKE IT                          GP11350
TRAPSAVE DC    16A(0)        LOCAL SAVE                         GP11350
EXMVCTRP MVC   PLINE-PLINE(0,R2),4(R1)   COPY USER'S LINE       GP11350
         POP   USING                                            GP11350
         EJECT                                                  GP00169
***********************************************************************
*                                                                     *
*   LOAD MULTIPLE                                                     *
*                                                                     *
***********************************************************************
GOLM     LA    R3,XCELL+2                                       GP97345
         BAS   R14,OLDBD                                        GP97345
         LR    R3,R0         SAVE RETURNED ADDRESS              GP97345
         IC    R1,XCELL+1                                       GP97084
         LR    R2,R1                                            GP97330
         N     R1,OOOOOOFO                                      GP97330
         SRL   R1,2                                             GP97330
         N     R2,OOOOOOOF                                      GP97330
         SLL   R2,2                                             GP97330
GOLMLOOP L     R0,0(,R3)                                        GP97330
         ST    R0,NEXTREG(R1)                                   GP97330
         CR    R1,R2                                            GP97330
         BE    OPBREXIT      RETURN FROM PROCESSING             GP97330
         LA    R3,4(,R3)                                        GP97330
         LA    R1,4(,R1)                                        GP97330
         N     R1,OOOOOO3C             MOD 16                   GP97330
         B     GOLMLOOP                                         GP97330
         SPACE 2                                                GP97331
***********************************************************************
*                                                                     *
*   STORE MULTIPLE                                                    *
*                                                                     *
***********************************************************************
GOSTM    LA    R3,XCELL+2                                       GP97345
         BAS   R14,OLDBD                                        GP97345
         LR    R3,R0         SAVE ADDRESS                       GP97330
         IC    R1,XCELL+1                                       GP97084
         LR    R2,R1                                            GP97330
         N     R1,OOOOOOFO                                      GP97330
         SRL   R1,2                                             GP97330
         N     R2,OOOOOOOF                                      GP97330
         SLL   R2,2                                             GP97330
GOSTMLUP L     R0,NEXTREG(R1)                                   GP97330
         ST    R0,0(,R3)                                        GP97330
         CR    R1,R2                                            GP97330
         BE    OPBREXIT      RETURN FROM PROCESSING             GP97330
         LA    R3,4(,R3)                                        GP97330
         LA    R1,4(,R1)                                        GP97330
         N     R1,OOOOOO3C             MOD 16                   GP97330
         B     GOSTMLUP                                         GP97330
         SPACE 1                                                GP00029
***********************************************************************
*                                                                     *
*   LOAD ACCESS REGISTERS MULTIPLE                                    *
*                                                                     *
***********************************************************************
GOLAM    LA    R3,XCELL+2                                       GP00029
         BAS   R14,OLDBD                                        GP00029
         LR    R3,R0         SAVE RETURNED ADDRESS              GP00029
         IC    R1,XCELL+1                                       GP00029
         LR    R2,R1                                            GP00029
         N     R1,OOOOOOFO                                      GP00029
         SRL   R1,2                                             GP00029
         N     R2,OOOOOOOF                                      GP00029
         SLL   R2,2                                             GP00029
GOLAMLUP L     R0,0(,R3)                                        GP00029
         ST    R0,NEXTACR(R1)                                   GP00029
         CR    R1,R2                                            GP00029
         BE    OPBREXIT      RETURN FROM PROCESSING             GP00029
         LA    R3,4(,R3)                                        GP00029
         LA    R1,4(,R1)                                        GP00029
         N     R1,OOOOOO3C             MOD 16                   GP00029
         B     GOLAMLUP                                         GP00029
         SPACE 2                                                GP00029
***********************************************************************
*                                                                     *
*   STORE ACCESS REGISTERS MULTIPLE                                   *
*                                                                     *
***********************************************************************
GOSTAM   LA    R3,XCELL+2                                       GP00029
         BAS   R14,OLDBD                                        GP00029
         LR    R3,R0         SAVE ADDRESS                       GP00029
         IC    R1,XCELL+1                                       GP00029
         LR    R2,R1                                            GP00029
         N     R1,OOOOOOFO                                      GP00029
         SRL   R1,2                                             GP00029
         N     R2,OOOOOOOF                                      GP00029
         SLL   R2,2                                             GP00029
GOSTAMLP L     R0,NEXTACR(R1)                                   GP00029
         ST    R0,0(,R3)                                        GP00029
         CR    R1,R2                                            GP00029
         BE    OPBREXIT      RETURN FROM PROCESSING             GP00029
         LA    R3,4(,R3)                                        GP00029
         LA    R1,4(,R1)                                        GP00029
         N     R1,OOOOOO3C             MOD 16                   GP00029
         B     GOSTAMLP                                         GP00029
         SPACE 1                                                GP00204
***********************************************************************
*                                                                     *
*   INSERT ADDRESSING MODE                                            *
*                                                                     *
***********************************************************************
GOIAC    IC    R1,XCELL+3    POINT TO DESTINATION REGISTER      GP00204
         N     R1,OOOOOOFO                                      GP00204
         SRL   R1,2                                             GP00204
         L     R0,PREVREG(R1)  GET OLD GENERAL REGISTER         GP00204
         ICM   R0,2,PREVACM  UPDATE ADDRESS MODE                GP00204
         ST    R0,NEXTREG(R1)  AND SAVE GENERAL REGISTER        GP00204
         B     OPBREXIT      RETURN FROM PROCESSING             GP00204
         SPACE 1                                                GP97330
***********************************************************************
*                                                                     *
*  SAC & SACF    SET ADDRESS REGISTER MODE (FAST)                     *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00029
GOSAC    LA    R3,XCELL+2                                       GP00029
         BAS   R14,OLDBD                                        GP00029
         STCM  R0,2,NEXTACM  SET ACCESS REGISTER MODE           GP00029
         B     MAINTRET      RETURN TO COMMON PROCESSING        GP00029
         SPACE 1                                                GP00204
***********************************************************************
*                                                                     *
*   SET ACCESS REGISTER FROM GENERAL REGISTER                         *
*                                                                     *
***********************************************************************
GOSAR    IC    R3,XCELL+3    POINT TO DESTINATION REGISTER      GP00204
         LR    R1,R3                                            GP00204
         N     R3,OOOOOOFO                                      GP00204
         SRL   R3,2                                             GP00204
         N     R1,OOOOOOOF                                      GP00204
         SLL   R1,2                                             GP00204
         L     R0,PREVREG(R1)  GET OLD VALUE                    GP00204
         ST    R0,NEXTACR(R3)  AND UPDATE IT                    GP00204
         B     OPBREXIT      RETURN FROM PROCESSING             GP00204
         SPACE 1                                                GP00204
***********************************************************************
*                                                                     *
*   EXTRACT ACCESS REGISTER FROM GENERAL REGISTER                     *
*                                                                     *
***********************************************************************
GOEAR    IC    R3,XCELL+3    POINT TO DESTINATION REGISTER      GP00204
         LR    R1,R3                                            GP00204
         N     R3,OOOOOOFO                                      GP00204
         SRL   R3,2                                             GP00204
         N     R1,OOOOOOOF                                      GP00204
         SLL   R1,2                                             GP00204
         L     R0,PREVACR(R1)  GET OLD VALUE                    GP00204
         ST    R0,NEXTREG(R3)  AND UPDATE IT                    GP00204
         B     OPBREXIT      RETURN FROM PROCESSING             GP00204
         SPACE 1                                                GP00204
***********************************************************************
*                                                                     *
*   COPY ACCESS REGISTER FROM ACCESS REGISTER                         *
*                                                                     *
***********************************************************************
GOCPYA   IC    R3,XCELL+3    POINT TO DESTINATION REGISTER      GP00204
         LR    R1,R3                                            GP00204
         N     R3,OOOOOOFO                                      GP00204
         SRL   R3,2                                             GP00204
         N     R1,OOOOOOOF                                      GP00204
         SLL   R1,2                                             GP00204
         L     R0,PREVACR(R1)  GET OLD VALUE                    GP00204
         ST    R0,NEXTACR(R3)  AND UPDATE IT                    GP00204
         B     OPBREXIT      RETURN FROM PROCESSING             GP00204
         SPACE 1                                                GP00204
***********************************************************************
*                                                                     *
*   LOAD ADDRESS EXTENDED                                             *
*                                                                     *
***********************************************************************
GOLAE    IC    R1,XCELL+1    POINT TO DESTINATION REGISTER      GP00204
         N     R1,OOOOOOFO                                      GP00204
         SRL   R1,2                                             GP00204
         SR    R0,R0         IN CASE ZERO                       GP00204
         IC    R3,XCELL+2                                       GP00029
         N     R3,OOOOOOFO                                      GP00204
         BZ    GOLAEZ                                           GP00204
         SRL   R3,2                                             GP00204
         L     R0,PREVACR(R3)  GET OLD VALUE                    GP00204
GOLAEZ   ST    R0,NEXTACR(R1)  AND UPDATE ACCESS REGISTER       GP00204
         LA    R3,XCELL+2    POINT TO BDDD                      GP00204
         BAS   R14,OLDXBD                                       GP00029
         IC    R1,XCELL+1    POINT TO DESTINATION REGISTER      GP00204
         N     R1,OOOOOOFO                                      GP00204
         SRL   R1,2                                             GP00204
         ST    R0,NEXTREG(R1)  ALSO SAVE GENERAL REGISTER PART  GP00204
         B     OPBREXIT      RETURN FROM PROCESSING             GP00204
         SPACE 1                                                GP97352
***********************************************************************
*                                                                     *
*  IPM     GET PROGRAM MASK - CONSTITUTE FROM SAVED FLAGS             *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97352
GOIPM    ICM   R1,1,XCELL+3  EXTENDED RR FORM - GET R1          GP97352
         N     R1,OOOOOOFO   RETAIN ONLY REGISTER NUMBER        GP97352
         SRL   R1,2          CONVERT TO REGISTER INDEX          GP97352
         LA    R2,NEXTREG(R1)  POINT TO REGISTER                GP97352
         MVI   0(R2),0       CLEAR HIGH BYTE                    GP97352
         OC    0(1,R2),PREVCC  SET CONDITION CODE               GP97352
         OC    0(1,R2),PREVPM  AND PROGRAM MASK                 GP97352
         B     MAINTRET      RETURN TO COMMON PROCESSING        GP97352
         SPACE 1                                                GP97352
***********************************************************************
*                                                                     *
*  SVC     SVC INVOCATION - JUST SET SVC FLAG                         *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97332
GOSVC    OI    TRWFLAGS,FGTSVC  SHOW SVC ENCOUNTERED            GP97342
         OI    FLAG1,FGDOREG+FGDOACR   REGISTERS AFTER RETURN   GP00029
         CLI   XCELL+1,X'0A'  GETMAIN/FREEMAIN RENT VERSION?    GP99055
         BNE   SVCNMAIN      NO                                 GP99055
*  STORAGE SUPERVISION TREATS BAL 1,*+4/SVC 10 AS GETMAIN, ALL ELSE
*  AS FREEMAIN. IF THE HIGH BYTE OF R1 IS NOT 0, FINAGLE        GP99055
         CLI   PREVREG+4,0   FREEMAIN ?                         GP99055
         BE    SVCCALL       YES; DO MY MAY                     GP99055
         L     R15,NEXTREG+15*4  PRESET FOR (NON) RETURN CODE STASH
         L     R0,PREVREG    GET REQUESTED R0                   GP99055
         BAL   R1,*+4        SET GETMAIN SIGNAL                 GP99055
         SVC   10            DO IT HERE                         GP99055
         STM   R0,R1,NEXTREG  UPDATE REGISTERS                  GP99055
         ST    R15,NEXTREG+15*4  AND RETURN CODE (HUH?)         GP99055
         B     MAINTRET      AND RETURN NORMALLY                GP99055
         SPACE 1                                                GP99055
SVCNMAIN CLI   XCELL+1,X'03'  EXIT?                             GP97346
         BNE   SVCNEXIT      NO; SEE IF SPECIAL                 GP98081
         MVC   PLLCTR,=8C'-' MAKE A SEPARATOR                   GP97352
         MVC   PLLCTR+10(L'MSGUNEND),MSGUNEND                   GP97352
         BASCALL WRITE              PRINT MOSTLY BLANK LINE     GP97352
         BASCALL UNSTACK            PRINT STACKED ENTRIES       GP97347
         OI    OPTFLAGS,FGDOPRT1  SET PRINTING ON               GP97346
         OI    FLAG1,FGDOREG+FGDOACR  SHOW ALL REGISTERS        GP00029
         BAS   R9,PRINTSUP   FORMAT IT NOW                      GP97346
         CLOSURE ,           CLOSE THE TRACE FILE               GP97346
         SPACE 1                                                GP00204
SVCNEXIT CLI   XCELL+1,107   MODESET ?                          GP11356
         BNE   SVCNMODE      NO                                 GP11356
         MODESET MF=(E,PREVREG+4)      USE USER'S R1            GP11356
         BR    R9            CONTINUE (NORMALLY?)               GP11356
         SPACE 1
SVCNMODE CLI   XCELL+1,109   SVC ROUTER # ?                     GP00204
         BNE   SVCCALL       NO                                 GP00204
         CLC   =F'28',PREVREG+15*4  ESPIE ?                     GP00204
         BNE   SVCCALL                                          GP00204
***********************************************************************
*                                                                     *
*  ESPIE INTERCEPT - GET USER'S INFORMATION AND MAINTAIN IT HERE.     *
*                                                                     *
*  R0 :  4 - SET  R1->A(EXIT,PARM),XL4'MASK',A(RSVD)                  *
*        8 - RESET                                                    *
*       12 - TEST                                                     *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP98081
SVCCALL  CLI   XCELL+1,19    OPEN SVC ?                         GP00006
         BE    SVCOPRE       YES                                GP00006
         CLI   XCELL+1,22    OPENJ ?                            GP00006
         BE    SVCOPRE       YES                                GP00006
         CLI   XCELL+1,X'77'  TESTAUTH                          GP06255
         BNE   SVCEXEC       YES                                GP00006
*   TESTAUTH SVC MODE HAS AN UNDOCUMENTED CHECK - FOR NOW       GP06255
*     DO IT HERE - WORKS FOR UNPRIVILEGED REQUESTS ONLY         GP06255
SVCFAUTH TESTAUTH FCTN=1     EXECUTE IT HERE - AVOID S177       GP06255
         ORG   SVCFAUTH      CHEAT                              GP06255
         L     R1,PREVREG+4  LOAD USER'S OPTIONS                GP06255
         ORG   ,             BACK TO REST                       GP06255
         ST    R15,NEXTREG+4*15  SAVE RETURN CODE               GP06255
         B     SVCEXEC+4     AND TRY IT NOW                     GP06255
         SPACE 1                                                GP06255
*  WE'RE PROCESSING AN OPEN OR OPENJ REQUEST                    GP00006
*   EXTRACT EODAD ADDRESS AND SYNAD AS "AT" BREAKPOINTS         GP00006
SVCOPRE  LA    R15,SVCOPENS  CALL EXIT SEARCH AS SUBROUTINE     GP00006
         O     R15,=X'80000000' ENTER IN 31-BIT MODE            GP00006
*USELESS BASSM R2,R15        COME BACK IN ORIGINAL MODE         GP00006
SVCEXEC  BAS   R9,EXECOP     EXECUTE THE SVC REQUEST            GP00006
         CLI   XCELL+1,19    OPEN SVC ?                         GP98081
         BE    SVCOPEN       YES                                GP98081
         CLI   XCELL+1,22    OPENJ ?                            GP98081
         BE    SVCOPEN       YES                                GP98081
         CLI   XCELL+1,120   LOAD (NEW) ?                       GP99055
         BE    SVCMAP        YES                                GP99055
         CLI   XCELL+1,6     XCTL, ETC                          GP99055
         BL    MAINTRET      NO                                 GP99055
         CLI   XCELL+1,9     THROUGH DELETE?                    GP99055
         BH    MAINTRET      NO                                 GP99055
SVCMAP   BASCALL MAPCSECT       YES; REFRESH CONTENTS DIRECTORY GP99055
         BASCALL NAMEFIND    RESOLVE RANGE DATA                 GP97345
         B     MAINTRET      NO; DO NORMAL RETURN               GP98081
         SPACE 1                                                GP98081
*  WE JUST PROCESSED AN OPEN OR OPENJ REQUEST                   GP98081
*   EXTRACT EODAD ADDRESS AND SYNAD AS "AT" BREAKPOINTS         GP98081
SVCOPEN  LA    R15,SVCOPENS  CALL EXIT SEARCH AS SUBROUTINE     GP99090
         O     R15,=X'80000000' ENTER IN 31-BIT MODE            GP99090
         BASSM R2,R15        COME BACK IN ORIGINAL MODE         GP99090
         B     MAINTRET      COMMON POST-PROCESSING             GP99090
         SPACE 1                                                GP99090
SVCOPENS ST    R3,DB3        SAVE INSTRUCTION POINTER           GP00006
         LA    R4,4          SET ENTRY LENGTH                   GP99090
         ICM   R3,15,PREVREG+4  GET ORIGINAL R1                 GP99090
         BNZ   SVCOP24       HAVE 24-BIT OPEN                   GP99090
         LA    R4,8          ELSE LIST SIZE IS 8                GP99090
         L     R3,PREVREG    AND ADDRESS IS IN R0               GP99090
SVCOP24  L     R6,OOFFFFFE   LOAD DCB ADDRESS MASK              GP98081
         N     R3,PREVMASK   CHANGE TO MATCH AMODE              GP99090
SVCOPLUP EX    0,SVCGETAD-4(R4)  GET NEXT ADDRESS               GP99090
         NR    R5,R6         GET DCB ADDRESS                    GP98081
         BZ    SVCOPEND      NONE; SKIP ENTRY                   GP98081
         PUSH  USING                                            GP98081
         USING IHADCB,R5     DECLARE THE DCB                    GP98081
         MVC   COMMFLD(8),DCBDDNAM  MOVE NAME IF UNOPENED       GP00006
         TM    DCBOFLGS,DCBOFOPN  WAS IT OPENED?                GP98081
         BZ    SVCOPNS2      NO; LOOK FOR EXIT LIST ENTRIES     GP98081
         MVC   COMMFLD,COMMFLD-1  CLEAR COMMENT FIELD           GP98136
         L     R15,PSATOLD-PSA  GET CURRENT TCB                 GP98136
         L     R15,TCBTIO-TCB(,R15)  POINT TO TIOT              GP98136
         SR    R14,R14                                          GP98136
         ICM   R14,3,DCBTIOT GET TIOT OFFSET                    GP98136
         AR    R15,R14       GET TIOT ENTRY                     GP98136
         L     R1,DCBEODAD   GET EODAD ADDRESS                  GP98081
         NR    R1,R6         CLEAR UNWANTED BITS                GP98081
         BZ    SVCOPNEO      SKIP IF NONE                       GP98081
         MVC   COMMFLD+8+1(5),=C'EODAD'                         GP98136
         LA    R0,COMMFLD    POINT TO AT'S COMMENT              GP98136
         BASCALL SETAT       ADD THIS AS AN AT BREAKPOINT       GP98081
SVCOPNEO TM    DCBBFTEK,DCBH0+DCBH1  DCBE PRESENT?              GP99097
         AIF   (NOT &MVSXA).NODCBE                              GP05189
         BNO   SVCOPNE2      NO                                 GP99097
         ICM   R1,15,DCBDCBE  EXTENSION?                        GP99097
         BZ    SVCOPNE2      NO                                 GP99097
         ICM   R1,15,DCBEEODA-DCBE(R1)  EODAD?                  GP99097
         BZ    SVCOPNE2                                         GP99097
         MVC   COMMFLD+8+1(5),=C'EODAD'                         GP99097
         LA    R0,COMMFLD    POINT TO AT'S COMMENT              GP99097
         BASCALL SETAT       ADD THIS AS AN AT BREAKPOINT       GP99097
.NODCBE  SPACE 1                                                GP99091
SVCOPNE2 L     R1,DCBSYNAD   GET ERROR RECOVERY ADDRESS         GP98081
         NR    R1,R6         CLEAR UNWANTED BITS                GP98081
         BZ    SVCOPNSY      SKIP IF NONE                       GP98081
         MVC   COMMFLD+8+1(5),=C'SYNAD'                         GP98136
         LA    R0,COMMFLD    POINT TO AT'S COMMENT              GP98136
         BASCALL SETAT       ADD THIS AS AN AT BREAKPOINT       GP98081
SVCOPNSY TM    DCBBFTEK,DCBH0+DCBH1  DCBE PRESENT?              GP99097
         AIF   (NOT &MVSXA).NODCBE2                             GP05189
         BNO   SVCOPNS2      NO                                 GP99097
         ICM   R1,15,DCBDCBE  EXTENSION?                        GP99097
         BZ    SVCOPNS2      NO                                 GP99097
         ICM   R1,15,DCBESYNA-DCBE(R1)  EODAD?                  GP99097
         BZ    SVCOPNS2                                         GP99097
         MVC   COMMFLD+8+1(5),=C'SYNAD'                         GP99097
         LA    R0,COMMFLD    POINT TO AT'S COMMENT              GP99097
         BASCALL SETAT       ADD THIS AS AN AT BREAKPOINT       GP99097
.NODCBE2 SPACE 1                                                GP99091
SVCOPNS2 L     R5,DCBEXLST   ANY EXIT LIST?                     GP99091
         DROP  R5            NO MORE DCB                        GP99091
         NR    R5,R6         MASK IT                            GP99091
         BZ    SVCOPEND      NONE                               GP99091
*DEFER PROCESSING UNTIL RECOVERY IS PROVIDED FOR EXIT SVC 3     GP99154
         B     SVCOPEND                                         GP99154
SVCOPLSL IC    R0,0(,R5)     LOAD TYPE                          GP99091
         N     R0,=X'0000007F'   MASK VALID BITS                GP99091
         BZ    SVCOPLSB      NONE; TRY AGAIN                    GP99091
         LA    R14,EXLSTVAL  GET EXIT LIST LIST                 GP99091
         LA    R15,(EXLSTVAX-EXLSTVAL)/(EXLSTVA2-EXLSTVAL)      GP99091
SVCOPLSC CLM   R0,1,0(R14)   MATCHING ENTRY?                    GP99091
         BNE   SVCOPLSD      NO; TRY NEXT                       GP99091
         L     R1,0(,R5)     GET EXIT ADDRESS                   GP99091
         NR    R1,R6         CLEAR UNWANTED BITS                GP99091
         BZ    SVCOPLSB      SKIP IF NONE                       GP99091
         MVC   COMMFLD+8+1(7),1(R14)  TYPE OF EXIT              GP99091
         LA    R0,COMMFLD    POINT TO AT'S COMMENT              GP99091
         STM   R14,R15,DB4                                      GP00006
         BASCALL SETAT       ADD THIS AS AN AT BREAKPOINT       GP99091
         LM    R14,R15,DB4                                      GP00006
SVCOPLSD LA    R14,EXLSTVA2-EXLSTVAL(,R14)                      GP99091
         BCT   R15,SVCOPLSC  NEXT ENTRY                         GP99091
SVCOPLSB TM    0(R5),X'80'   TEST END OF LIST BIT               GP99091
         LA    R5,4(,R5)     POINT TO NEXT ENTRY                GP99091
         BZ    SVCOPLSL      AND DO IF NOT LAST                 GP99091
         SPACE 1                                                GP99091
SVCOPEND TM    0(R3),X'80'   END OF DCB LIST?                   GP98081
         BO    SVCOPENX      GO TO COMMON EXECUTION RETURN      GP98081
         AR    R3,R4         POINT TO NEXT ENTRY                GP99090
         B     SVCOPLUP      NO; DO IT AGAIN                    GP98081
SVCOPENX L     R3,DB3        RESTORE INSTRUCTION POINTER        GP00006
         BSM   0,R2          RETURN IN PROPER MODE              GP99090
SVCGETAD L     R5,0(,R3)     GET DCB ADDRESS FROM AM24 LIST     GP99090
         L     R5,4(,R3)     GET DCB ADDRESS FROM AM31 LIST     GP99090
         POP   USING                                            GP98081
         SPACE 1                                                GP98081
OPERATE  B     EXECOP        EXECUTE THE CURRENT INSTRUCTION    GP97346
         SPACE 1
EXLSTVAL DC    X'01',CL7'INPHDR '                               GP99091
EXLSTVA2 DC    X'02',CL7'OUTHDR '                               GP99091
         DC    X'03',CL7'INPTLR '                               GP99091
         DC    X'04',CL7'OUTTLR '                               GP99091
*FAILS*  DC    X'05',CL7'DCB OPN'  (DONE BY THE TIME WE GET IT) GP99091
         DC    X'06',CL7'EOV    '                               GP99091
         DC    X'09',CL7'I/O ERR'                               GP99091
         DC    X'0B',CL7'BLOCKCT'                               GP99091
         DC    X'11',CL7'DCB ABN'                               GP99091
         DC    X'11',CL7'--ZAP--'                               GP99091
         DC    X'15',CL7'JFCBE  '                               GP99091
         DC    X'17',CL7'TPSER  '                               GP99091
EXLSTVAX DC    X'18',CL7'TPVOL  '                               GP99091
         SPACE 1
***********************************************************************
*                                                                     *
*   RP - RESUME PROGRAM - 4-BYTES FOLLOWED BY 8-BYTE OFFSETS          *
*                                                                     *
***********************************************************************
GORP     IC    R4,XCELL+2
         N     R4,OOOOOOFO
         SRL   R4,2          OFFSET FOR REGISTER B2
         LA    R3,XCELL+2    POINT TO BDDD
         BAS   R14,OLDXBD    GET DATA ADDRESS IN R1
         SR    R2,R2
         ICM   R2,3,4(R1)    UNSIGNED DISPLACEMENT TO AR
         L     R0,0(R2,R1)   GET AR
         ST    R0,NEXTACR(R4)  UPDATE
         ICM   R2,3,6(R1)    DISPLACMENT TO REGISTER
         L     R0,0(R2,R1)   GET NEW GPR
         ST    R0,NEXTREG(R4)  UPDATE
         ICM   R2,3,2(R1)    OFFSET TO NEW PSW
         AR    R1,R2         ADDRESS OF PSW
         LM    R0,R1,0(R1)   LOAD PSW
         STCM  R0,2,NEXTPM
         STCM  R0,2,NEXTCC
*OLD*    STCM  R0,2,PREVPM  ****FIX LATER*****                  GP00214
         LA    R15,FGACM     MAKE MASK
         NR    R15,R0        CLEAN ARM BITS
         SRL   R15,6         BOTTOM OUT
         IC    R15,DCCCODE(R15)   GET REPLACEMENT               GP05189
         STC   R15,NEXTACM   SET ACCESS REGISTER MODE
         NC    NEXTIL(4),=AL1(FGIIL,FGICC,FGIPM,FGACM) MASK ALL FIELDS
         MVI   NEXTMASK,X'00'  SET FOR 24-BIT ADDRESSING MODE
         SR    R0,R0         SET FOR 24-BIT AM
         LTR   R1,R1         WILL WE BE IN 31-BIT MODE?
         BNM   GORPAM        NO; LEAVE IT
         MVI   NEXTMASK,X'7F'  SET NEW ADDRESSING MASK
         ICM   R0,8,=X'80' SET AM31 BIT
GORPAM   N     R1,NEXTMASK MASK IT
         ST    R1,NEXTIC     THIS IS OUR NEW INSTRUCTION CNTR
         STCM  R0,8,NEXTAM
         OR    R1,R0         PREPEND MODE BIT
         LA    R15,OPBRJUMP  GO TO SUBROUTINE EXIT
         OR    R15,R0        PREPEND ADDRESSING MODE
         BSM   0,R15         SWITCH MODES
         SPACE 1                                                GP97330
***********************************************************************
*                                                                     *
*              BAL AND BALR                                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
BALBALR  L     R1,NEXTIC     RETURN ADDRESS FOR BRANCH OR EXEC  GP97084
         O     R1,=X'80000000'    PRESET FOR AM31               GP97330
         TM    PREVAM,FGAM31   IN 31-BIT MODE?                  GP97087
         BNZ   BASAM31                                          GP97087
         N     R1,=X'00FFFFFF'    MAKE AM24 BIT VERSION         GP97330
         SR    R0,R0         CLEAR R0                           GP97336
         ICM   R0,8,NEXTIL   GET INSTRUCTION LENGTH BITS        GP97336
         OR    R1,R0         OR IN INSTRUCTION LENGTH CODE      GP97336
         ICM   R0,8,NEXTCC   GET THE CORRECT CONDITION CODE     GP97336
         OR    R1,R0         OR IN CONDITION CODE BITS          GP97336
         ICM   R0,8,NEXTPM   GET THE PROGRAM MASK               GP97336
         OR    R1,R0         OR IT                              GP97336
         B     BASAM31       FINISH OFF BRANCH PROCESSING       GP97330
         SPACE 2                                                GP97330
***********************************************************************
*                                                                     *
*              BAS AND BASR                                           *
*                                                                     *
***********************************************************************
BASBASR  L     R1,NEXTIC     RETURN ADDRESS FOR BRANCH OR EXEC  GP97084
         O     R1,=X'80000000'    PRESET FOR AM31               GP97330
         TM    PREVAM,FGAM31   IN 31-BIT MODE?                  GP97087
         BNZ   BASAM31       ALL SET                            GP97087
         N     R1,=X'00FFFFFF'    MAKE AM24 BIT VERSION         GP97330
BASAM31  IC    R2,XCELL+1              RR                       GP97087
         N     R2,OOOOOOFO             R0                       GP97330
         SRL   R2,2                    R*4                      GP97330
         ST    R1,NEXTREG(R2)          STORE RETURN IN PSEUDO REGISTER
         OI    TRWFLAGS,FGTBAL   SHOW A SUBROUTINE CALL?        GP97336
         B     OPBRTAKE      GO TO COMMON BRANCH CODE           GP97332
         SPACE 2
***********************************************************************
*                                                                     *
*  BRAS - BRANCH RELATIVE                                             *
*                                                                     *
***********************************************************************
BRAS     L     R1,NEXTIC     RETURN ADDRESS FOR BRANCH OR EXEC
         O     R1,=X'80000000'    PRESET FOR AM31
         TM    PREVAM,FGAM31   IN 31-BIT MODE?
         BNZ   BASAM31       ALL SET
         N     R1,=X'00FFFFFF'    MAKE AM24 BIT VERSION
         IC    R2,XCELL+1              RR
         N     R2,OOOOOOFO             R0
         SRL   R2,2                    R*4
         ST    R1,NEXTREG(R2)          STORE RETURN IN PSEUDO REGISTER
         LH    R2,XCELL+2    GET DISPLACEMENT IN HALFWORDS
         SLA   R2,1          CONVERT TO BYTES
         AR    R1,R2         APPLY RELATIVE
         SH    R1,=H'4'      BUT ALLOW FOR CURRENT LENGTH
         OI    TRWFLAGS,FGTBAL   SHOW A SUBROUTINE CALL?
         B     OPBRTAKE      GO TO COMMON BRANCH CODE
         SPACE 3                                                GP97333
***********************************************************************
*                                                                     *
*  BCBCR       BC AND BCR  (REPLACE BY APPLICABLE MNEMONIC)           *
*  BRC         BRANCH RELATIVE ON CONDITION - NO SPECIAL              *
*                                                                     *
*      THE TYPE OF CONDITION CODE (ARITHMETIC, COMPARE, LOGICAL) IS   *
*      SAVED IN CONDTYPE. THE EXTENDED MNEMONIC TABLES HAVE A SECOND  *
*      EXTENSION FOR COMPARE MNEMONICS (LOGICAL IS A SUBSET OF ARITH) *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
BC       L     R4,=A(INST47)  SET FOR EXTENDED CODE TABLE FOR BC
         B     BCBCRCM                                          GP97333
BCR      L     R4,=A(INST07)  SET FOR EXTENDED CODE TABLE FOR BCR
BCBCRCM  SR    R14,R14       CLEAR FOR IC                       GP97333
         IC    R14,XCELL+1   GET SUBCODE                        GP00169
         N     R14,OOOOOOFO  MASK                               GP00169
         SRL   R14,4         SHIFT UNWANTED BITS                GP00169
         TM    CONDTYPE,FGCCC  COMPARE TYPE?                    GP99163
         BZ    *+8           NO                                 GP99163
         LA    R14,16(,R14)  USE SECOND HALF OF TABLE           GP99163
         MH    R14,=Y(OPLEN) GET OFFSET TO INSTRUCTION ENTRY    GP00169
         AR    R4,R14        GET ENTRY ADDRESS                  GP97333
         PUSH  USING                                            GP00169
         USING OPDSECT,R4    DECLARE OPCODE ENTRY               GP00169
         CLI   OPNMFG,C'@'   IS IT LEGAL?                       GP00169
         BNH   BRC           NO; KEEP OLD ONE                   GP97333
         STCM  R4,15,@INST   REMEMBER THE ADDRESS               GP97336
         MVC   FLAGS(@INST-FLAGS),OPFLAGS  UPDATE THE FLAGS     GP97338
         DROP  R4                                               GP97333
BRC      IC    R1,XCELL+1              RR    - CONDITIONAL BRANCHES
         N     R1,OOOOOOFO             R0                       GP00169
         SR    R2,R2                   CLEAR R2                 GP00169
         IC    R2,PREVCC               ACTUAL CONDITION CODE    GP97336
         SRL   R2,2                    (CONDITION CODE)*4       GP97336
         N     R1,CCBITS(R2)           TEST CONDITION CODE MASK BITS
         BZ    OPBREXIT                BRANCH IS NOT TAKEN      GP97332
         B     OPBRTAKE      GO EVALUATE ADDRESS                GP97085
         POP   USING                                            GP97349
         SPACE 1                                                GP97352
***********************************************************************
*                                                                     *
*  BAKR    PUSH STACK - INTERCEPTED AND MANGLED HERE                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP03003
         PUSH  USING                                            GP03005
GOBAKR   INC   #BAKSTAK,WORK=R15                                GP03006
         C     R15,#BAKMAX   TOO MANY ?                         GP03006
         BE    EXECOP        YES; LET IT BE (WILL FAIL ?)       GP03006
         OI    TRWFLAGS,FGTBAL  SHOW SUBROUTINE CALL/RETURN     GP03003
         LA    R5,BAKRSIZE   SET SIZE OF ONE BAKR STACK ENTRY   GP03005
         STORAGE OBTAIN,LENGTH=(R5),SP=SP  GET STORAGE          GP03046
         XC    0(BAKRSIZE,R1),0(R1)  CLEAN IT                   GP03005
         LR    R5,R1         MAKE BASE                          GP03005
         USING BAKRSECT,R5                                      GP03005
         MVC   BAKRLINK,@BAKSTAK  CHAIN ON TOP                  GP03005
         ST    R5,@BAKSTAK   CAFETERIA STYLE                    GP03005
         MVC   BAKRREG(NEXTSAVE),NEXTREG  SAVE STATE            GP03006
         MVC   BAKRINST,XCELL  SAVE INSTRUCTION                 GP03114
         IC    R2,XCELL+3              RR                       GP03003
         N     R2,OOOOOOFO       ISOLATE R1                     GP03003
         BZ    GOBAKRR1      NO R1, JUST DO R2                  GP03003
         SRL   R2,2                    R*4                      GP03003
         L     R1,BAKRREG(R2)   POINT TO SOURCE                 GP03003
         ST    R1,BAKRIC     SAVE RETURN ADDRESS AND            GP03005
         STCM  R1,8,BAKRAM   SAVE ADDRESSING MODE               GP03006
         SPACE 1                                                GP03003
GOBAKRR1 IC    R2,XCELL+3              RR                       GP03003
         N     R2,OOOOOOOF             0R                       GP03003
         BZ    GOBAKRDO      NO R2, NO BRANCH                   GP03003
         SLL   R2,2                    R*4                      GP03003
         L     R1,PREVREG(R2)          LOAD SOURCE              GP03003
         MVI   NEXTMASK,X'00'  SET FOR 24-BIT ADDRESSING MODE   GP03003
         SR    R0,R0         SET FOR 24-BIT AM                  GP03003
         LTR   R1,R1         WILL WE BE IN 31-BIT MODE?         GP03003
         BNM   GOBAKRR2      NO; LEAVE IT                       GP03003
         MVI   NEXTMASK,X'7F'  SET NEW ADDRESSING MASK          GP03003
         ICM   R0,8,=X'80' SET AM31 BIT                         GP03003
GOBAKRR2 N     R1,NEXTMASK MASK IT                              GP03003
         ST    R1,NEXTIC     THIS IS OUR NEW INSTRUCTION CNTR   GP03003
         STCM  R0,8,NEXTAM                                      GP03003
         OR    R1,R0         PREPEND MODE BIT                   GP03003
GOBAKRDO NI    BAKRAM,X'80'  KILL EXTRANEOUS BITS               GP03115
         B     MAINTRET      AND PROCESS NEXT INSTRUCTION       GP03005
         POP   USING                                            GP03005
         SPACE 3                                                GP97352
***********************************************************************
*                                                                     *
*  PR      POP BAKR STACK - RESTORE REGISTERS AND PSW AFTER           *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP03003
         PUSH  USING                                            GP03005
GOPR     ICM   R5,15,@BAKSTAK  IS THERE A STACKED BAKR ?        GP03005
         BZ    EXECOP        NO; THIS WILL FAIL                 GP03008
         USING BAKRSECT,R5   DECLARE IT                         GP03005
         MVC   @BAKSTAK,BAKRLINK  UNCHAIN THIS ONE              GP03005
         MVC   NEXTREG(4*16),PREVREG  PRESERVE 0, 1, 15         GP03114
         MVC   NEXTREG+2*4(4*13),BAKRREG+2*4  UPDATE 2 - 14     GP03114
         MVC   NEXTACR(4*16),PREVACR  PRESERVE 0, 1, 15         GP03114
         MVC   NEXTACR+2*4(4*13),BAKRACR+2*4  UPDATE 2 - 14     GP03114
         MVC   NEXTMASK(4+4+5),BAKRMASK  UPDATE IC, FLAGS       GP03114
         NI    NEXTAM,X'80'  KILL EXTRANEOUS BITS               GP03115
         NC    NEXTIL(4),=AL1(FGIIL,FGICC,FGIPM,FGACM) MASK ALL FIELDS
         LA    R0,BAKRSIZE   GET SIZE OF STACK ENTRY            GP03005
         STORAGE RELEASE,ADDR=(R5),LENGTH=(0),SP=SP   FREE IT   GP03046
         OI    TRWFLAGS,FGTBAL  SHOW SUBROUTINE CALL/RETURN     GP03003
         B     MAINTRET      NORMAL RETURN                      GP03005
         POP   USING                                            GP03005
         SPACE 3                                                GP97352
***********************************************************************
*                                                                     *
*  ESTA    EXTRACT DATA FROM (MY) BAKR STACK                          *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP03008
         PUSH  USING                                            GP03008
GOESTA   ICM   R4,15,@BAKSTAK  IS THERE A STACKED BAKR ?        GP03008
         BZ    EXECOP        NO; THIS WILL FAIL                 GP03008
         USING BAKRSECT,R4   DECLARE IT                         GP03008
         TM    XCELL+3,X'10'  IS R1 EVEN ?                      GP03008
         BNZ   EXECOP        NO; LET IT FAIL                    GP03008
         MVI   NEXTCC,0      SET CONDITION CODE 0 - BRANCH STATE
         IC    R1,XCELL+3                                       GP03008
         LA    R2,X'0F'      MASK FOR R2 NYBBLE                 GP03008
         NR    R2,R1         SAVE R2 SPEC                       GP03008
         N     R1,OOOOOOFO                                      GP03008
         SRL   R1,2                                             GP03008
         LA    R1,NEXTREG(R1)  USER'S REGISTERS                 GP03008
         SLL   R2,2                                             GP03008
         SR    R0,R0                                            GP03008
         IC    R0,PREVREG+3(R2)  LOAD CODE BYTE                 GP03008
         CH    R0,=H'4'      VALID ?                            GP03008
         BH    EXECOP        NO; LET IT FAIL                    GP03008
         CH    R0,=H'3'      USER MODIFIABLE AREA ?             GP03008
         BE    GOESTAU       NO; LET IT FAIL                    GP03008
         MVC   0(4,R1),=X'07850000' LEFT HALF                   GP03008
         MVC   4(4,R1),BAKRIC BRANCH ADDRESS                    GP03008
         OC    4(1,R1),BAKRAM WITH ADDRESSING MODE              GP03008
*DEFER*  MVZ   2(1,R1),BAKRPK   SET PROTECT KEY                 GP03008
         MVZ   3(1,R1),BAKRACM  ADDRESS SPACE MODE              GP03008
         OC    3(1,R1),BAKRCC   CONDITION CODE                  GP03008
         MVN   3(1,R1),BAKRPM   PROGRAM MASK                    GP03008
         B     MAINTRET      NORMAL RETURN                      GP03008
GOESTAU  MVC   0(8,R1),BAKRMSTA  COPY USER AREA                 GP03008
         B     MAINTRET      NORMAL RETURN                      GP03008
         POP   USING                                            GP03008
         SPACE 3                                                GP03008
***********************************************************************
*                                                                     *
*  EREG    EXTRACT REGISTERS FROM (MY) BAKR STACK                     *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP03003
         PUSH  USING                                            GP03005
GOEREG   ICM   R4,15,@BAKSTAK  IS THERE A STACKED BAKR ?        GP03008
         BZ    EXECOP        NO; THIS WILL FAIL                 GP03008
         USING BAKRSECT,R4   DECLARE IT                         GP03008
         IC    R1,XCELL+3                                       GP03008
         LR    R2,R1                                            GP03008
         N     R1,OOOOOOFO                                      GP03008
         SRL   R1,2                                             GP03008
         N     R2,OOOOOOOF                                      GP03008
         SLL   R2,2                                             GP03008
GOEREGLP L     R0,BAKRREG(R1)                                   GP03008
         ST    R0,NEXTREG(R1)  UPDATE GPR                       GP03008
         L     R0,BAKRACR(R1)                                   GP03008
         ST    R0,NEXTACR(R1)  UPDATE ACCESS CONTROL REG        GP03008
         CR    R1,R2                                            GP03008
         BE    MAINTRET      RETURN FROM PROCESSING             GP03008
         LA    R1,4(,R1)                                        GP03008
         N     R1,OOOOOO3C             MOD 16                   GP03008
         B     GOEREGLP                                         GP03008
         POP   USING                                            GP03008
         SPACE 3                                                GP97352
***********************************************************************
*                                                                     *
*  MSTA    MODIFY USER DATA ON (MY) BAKR STACK                        *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP03003
         PUSH  USING                                            GP03005
GOMSTA   ICM   R4,15,@BAKSTAK  IS THERE A STACKED BAKR ?        GP03005
         BZ    EXECOP        NO; THIS WILL FAIL                 GP03008
         USING BAKRSECT,R4   DECLARE IT                         GP03005
         TM    XCELL+3,X'10'  IS R1 EVEN ?                      GP03008
         BNZ   EXECOP        NO; LET IT FAIL                    GP03008
         IC    R1,XCELL+3                                       GP03008
         N     R1,OOOOOOFO                                      GP03008
         SRL   R1,2                                             GP03008
         LA    R3,PREVREG(R1)  USER'S REGISTERS                 GP03008
         MVC   BAKRMSTA,0(R3)  USER'S DATA TO STACK ENTRY       GP03008
         B     MAINTRET      NORMAL RETURN                      GP03005
         POP   USING                                            GP03005
         SPACE 3                                                GP97330
***********************************************************************
*                                                                     *
*  OPBRTAKE    DETERMINE DESTINATION ADDRESS                          *
*      SKIP BRANCH WHEN R FORM AND R IS 0                             *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97332
OPBRTAKE TM    XCELL,X'C0'   RR?                                GP97085
         BZ    OPBRRR          YES                              GP97085
         SPACE 1                                                GP97332
OPBRNRR  TM    FLAG2,FGI    NEW IMMEDIATE ADDRESS?              GP97333
         BZ    OPBRRX       NO; DO MUNDANE RX                   GP97333
         LH    R0,XCELL+2   GET RELATIVE OFFSET IN HALFWORDS    GP98081
         SLA   R0,1         CONVERT TO BYTE OFFSET              GP98081
         A     R0,NEXTIC    ADJUST IC ADDRESS                   GP98081
         B     OPBRSET      AND PROCESS IT                      GP97333
         SPACE 1                                                GP00169
OPBRRX   LA    R3,XCELL+2    POINT AT BASE, DISPLACEMENT FIELD  GP97345
         BAS   R14,OLDXBD    GO EVALUATE EFFECTIVE ADDRESS      GP97345
         B     OPBRSET                                          GP97332
         SPACE 1                                                GP97342
OPBRRS   LA    R3,XCELL+2    POINT AT BASE, DISPLACEMENT FIELD  GP97345
         BAS   R14,OLDBD     GO EVALUATE EFFECTIVE ADDRESS      GP97345
         B     OPBRSET                                          GP97332
         SPACE 1                                                GP97332
OPBRRR   IC    R1,XCELL+1              RR     - SET BRANCH ADDRESS
         N     R1,OOOOOOOF             0R                       GP97332
         BZ    OPBREXIT                NO BRANCH IF REGISTER ZERO
         SLL   R1,2                    R*4                      GP97332
         L     R0,PREVREG(R1)          GET ADDRESS FROM REGISTER
         SPACE 1                                                GP97335
OPBRSET  N     R0,NEXTMASK     SET PROPER ADDRESS               GP97090
         ST    R0,NEXTIC               SAVE BRANCH ADDRESS      GP97090
OPBRJUMP TM    NEXTIC+L'NEXTIC-1,1  ODD DESTINATION ?           GP00204
         BNZ   OPERATE       YES; LET IT FAIL ON 0C6            GP00204
         OI    OPTFLAGS,FGDEFLIN  SET DEFERRED SEPARATOR LINE   GP97335
         OI    TRWFLAGS,FGTBR  SHOW SUCCESSFUL BRANCH EVENT     GP97336
         SPACE 1                                                GP97332
OPBREXIT B     MAINTRET      RETURN TO COMMON END PROCESSING    GP97335
         SPACE 3                                                GP97087
***********************************************************************
*                                                                     *
*      BSM                                                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97087
*  BSM REPLACES IC FROM R2 (UNLESS 0), AND SETS NEW ADDRESSING MODE
*    IT THEN EVALUATES R1 USING THE NEW MODE (UNLESS 0)         GP97087
BSM      IC    R2,XCELL+1              RR                       GP97087
         N     R2,OOOOOOFO       ISOLATE R1                     GP97090
         BZ    BRBSM0R1      NO R1, JUST DO R2                  GP97087
         SRL   R2,2                    R*4                      GP97335
         LA    R1,NEXTREG(R2)   POINT TO SOURCE                 GP97087
         NI    0(R1),X'7F'   KILL ADDRESSING MODE BIT           GP97342
         OC    0(1,R1),PREVAM    SET CURRENT MODE BIT           GP97342
         SPACE 1                                                GP97090
BRBSM0R1 IC    R2,XCELL+1              RR                       GP97087
         N     R2,OOOOOOOF             0R                       GP97087
         BZ    OPBREXIT      NO R2, NO BRANCH                   GP97090
         SLL   R2,2                    R*4                      GP97087
         L     R1,PREVREG(R2)          LOAD SOURCE              GP97087
         MVI   NEXTMASK,X'00'  SET FOR 24-BIT ADDRESSING MODE   GP97087
         SR    R0,R0         SET FOR 24-BIT AM                  GP97090
         LTR   R1,R1         WILL WE BE IN 31-BIT MODE?         GP97325
         BNM   BRBSMR2       NO; LEAVE IT                       GP97325
         MVI   NEXTMASK,X'7F'  SET NEW ADDRESSING MASK          GP97087
         ICM   R0,8,=X'80' SET AM31 BIT                         GP97087
BRBSMR2  N     R1,NEXTMASK MASK IT                              GP97087
         ST    R1,NEXTIC     THIS IS OUR NEW INSTRUCTION CNTR   GP97090
         STCM  R0,8,NEXTAM                                      GP97336
         OR    R1,R0         PREPEND MODE BIT                   GP97090
         OI    TRWFLAGS,FGTBAL  SHOW SUBROUTINE CALL/RETURN     GP97336
         LA    R15,OPBRJUMP  GO TO SUBROUTINE EXIT              GP97090
         OR    R15,R0        PREPEND ADDRESSING MODE            GP97087
         BSM   0,R15         SWITCH MODES                       GP97087
         SPACE 3                                                GP97087
***********************************************************************
*                                                                     *
*      BASSM                                                          *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97087
*  BASSM SAVES IC IN R1 (EVEN 0), THEN EVALUATES R2 USING CURRENT
*    ADDRESSING MODE (UNLESS 0) AND BRANCHES IN NEW MODE        GP97087
BASSM    IC    R2,XCELL+1              RR                       GP97087
         N     R2,OOOOOOFO             R0                       GP97087
         SR    R0,R0                                            GP97336
         ICM   R0,8,PREVAM   PRIOR ADDRESSING MODE              GP00169
         L     R3,NEXTIC     GET NON-BRANCH IC                  GP97087
         OR    R3,R0         GET ICKY                           GP97336
         SRL   R2,2                    R*4                      GP97087
         ST    R3,NEXTREG(R2)      SAVE PRIOR IC                GP97087
         SPACE 1                                                GP97342
         IC    R2,XCELL+1    LOAD REGISTERS AGAIN               GP97087
         N     R2,OOOOOOOF    RETAIN ONLY R2                    GP97087
         BZ    OPBREXIT      NONE; JUST RETURN (NEXTIC STORED)  GP97087
         SLL   R2,2            CONVERT REGISTER TO OFFSET       GP97087
         L     R3,PREVREG(R2)   GET NEW R2                      GP97087
         ST    R3,NEXTIC     SET NEW ADDRESS                    GP97087
         STCM  R3,8,NEXTAM   SET NEW ADDRESSING MODE            GP97336
         MVI   NEXTMASK,X'00'  SET FOR 24-BIT ADDRESSING MODE   GP97087
         LTR   R3,R3         WILL WE BE IN 31-BIT MODE?         GP97325
         BNM   BRBSSR2       NO; LEAVE IT                       GP97325
         MVI   NEXTMASK,X'7F'  SET NEW ADDRESSING MASK          GP97087
BRBSSR2  NC    NEXTIC,NEXTMASK  CLEAR IC                        GP97087
         NI    NEXTAM,FGAM31                                    GP97336
         SR    R0,R0         SET AM24                           GP97087
         ICM   R0,8,NEXTAM                                      GP97336
         OI    TRWFLAGS,FGTBAL  SHOW SUBROUTINE CALL/RETURN     GP97336
         LA    R15,OPBRJUMP  GET NEXT PORTION OF CODE           GP97087
         OR    R15,R0        PREPEND ADDRESSING MODE            GP97087
         BSM   0,R15         SWITCH MODES                       GP97087
         SPACE 3                                                GP00169
***********************************************************************
*                                                                     *
*  BXHBXLE     BXH AND BXLE                                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
BXH      LA    R4,X'20'      SET FOR BRANCH HIGH TEST           GP97333
         B     BXHBXLCM                                         GP97333
BXLE     LA    R4,X'C0'      SET FOR BRANCH LOW/EQUAL TEST      GP97333
BXHBXLCM IC    R1,XCELL+1              RR  - BX.. INSTRUCTION PROCESSOR
         N     R1,OOOOOOOF             0R                       GP00169
         SLL   R1,2                    R3*4                     GP00169
         L     R0,PREVREG(R1)          VALUE OF THE INCREMENT   GP97342
         IC    R2,XCELL+1              RR                       GP00169
         N     R2,OOOOOOFO             R0                       GP00169
         SRL   R2,2                    R1*4                     GP00169
         AL    R0,PREVREG(R2)          1ST OPERAND + INCREMENT  GP97342
         ST    R0,NEXTREG(R2)          STORE SUM BACK IN R1     GP00169
         TM    XCELL+1,X'01'           IS R3 ODD ?              GP00169
         BO    BXHBXLE3                YES, SO IT IS THE COMPARAND
         LA    R1,4(,R1)               (R3+1)*4                 GP00169
         N     R1,OOOOOO3C             MODULO 16                GP00169
BXHBXLE3 C     R0,PREVREG(R1)      COMPARE NEW TO COMPARAND     GP97085
         EX    R4,BXHBXLBR   BRANCH ACCORDING TO REQUEST        GP97333
         B     OPBREXIT      FALSE; BRANCH IS NOT TAKEN         GP97333
BXHBXLBR BC    0,OPBRRS      IF TRUE, GO TO ADDRESS EVALUATION  GP97333
         SPACE 3                                                GP00169
***********************************************************************
*                                                                     *
*  BCTBCTR     BCT AND BCTR AND BRCT                                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
BCTBCTR  IC    R2,XCELL+1              RR  - BCT. PROCESSOR     GP97085
         N     R2,OOOOOOFO             R0                       GP00169
         SRL   R2,2                    R1*4                     GP00169
         L     R1,NEXTREG(R2)          VALUE OF THE INDEX       GP00169
         S     R1,=F'1'                SUBTRACT ONE             GP00169
         ST    R1,NEXTREG(R2)          STORE NEW VALUE BACK     GP00169
         BP    OPBRTAKE      NOT ZERO YET                       GP97342
         BZ    OPBREXIT      BRANCH IF NEW VALUE IS ZERO        GP97331
         TM    TRQFLAGS,FGABCT  ABEND ON NEGATIVE BCT RESULT?   GP97342
         BZ    OPBRTAKE      NO; ACCEPT AND BRANCH              GP97342
         OI    OPTFLAGS,FGDOPRT  FORCE PRINTING                 GP97349
         BASCALL UNSTACK     PRINT CURRENT INSTRUCTIONS         GP97349
         OI    FLAG1,FGDOREG+FGDOACR  SHOW ALL REGISTERS        GP00029
         BAS   R9,PRINTSUP   PRINT CURRENT ONES                 GP97349
         CLOSURE ,           CLOSE OUT NOW                      GP97349
         ABEND 322,DUMP      TERMINATE                          GP97349
         SPACE 1
***********************************************************************
*                                                                     *
*   TRAP4 - USED LOCALLY BY #TRAP AND XTRAP MACROS TO TRACE REGISTERS *
*           AND VARIABLES FOR DEBUGGING. BUILD PARAMETER LISTS (REGS, *
*           PSW, ETC.), CALL PGMTRAP4, THEN RETURN TO TRAP4 + 8 BYTES *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP11350
GOTRAP4  LA    R1,@USRPIE    FAKE EPIE INTERFACE                GP11350
         USING EPIE,R1                                          GP11350
         MVC   EPIEGPR(16*4),PREVREG   COPY CURRENT REGISTERS   GP11350
*NULL*   MVC   EPIEPSW,PREVPSW         COPY PSW                 GP11350
         SR    R14,R14
         LA    R15,4(,ILCR)  INSTRUCTION COUNTER + 4            GP11350
         STM   R14,R15,EPIEPSW                                  GP11350
         LA    R15,4(,R15)   SKIP TRAP4 AND LIST POINTER        GP11350
         ST    R15,NEXTIC    ADVANCE BEYOND TRAP4/LIST ADDR     GP11350
         OC    EPIEPSW+4(1),PREVAM     ADDRESSING MODE          GP11350
*DONE*   LA    R1,@USRPIE    POINT TO PIE                       GP11350
         L     R15,=V(PGMTRAP4)                                 GP11350
         BALR  R14,R15                                          GP11350
         B     MAINLOOP      RETURN                             GP11350
         SPACE 1                                                GP97349
         LTORG ,                                                GP97349
         POP   USING                                            GP11350
         TITLE 'P G M T R A C E  ***  INSTRUCTION PRINTING'     GP00169
***********************************************************************
*                                                                     *
*  PRINTSUP    PRINT SUPERVISOR                                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
PRINTSUP SUBHEAD ,                     SAVE RETURN              GP97332
         TM    XCEFLAGS,PSUPDONE ALREADY DONE THIS ONE?         GP97358
         BNZ   PRINTSUX      YES; JUST RETURN                   GP97358
         OI    XCEFLAGS,PSUPDONE ELSE SET IT NOW                GP97358
         TM    OPTFLAGS,FGDOPRT+FGDOPRT1  FORCED PRINTING?      GP97346
         BNZ   PRINTSOP                                         GP97346
         TM    OPTFLAGS,FGNOPRTA  TRACING SUPPRESSED?           GP97352
         BZ    PRINTSOT      NO                                 GP97347
         OI    STKFLAGS,FGSTNOT   NO STACKING                   GP97352
PRINTSOT TM    OPTFLAGS,FGNOPRT+FGNOPRTA+FGNOPRTS  PRINTING ENABLED ?
         BZ    PRINTSOP      YES                                GP97347
         OI    STKFLAGS,FGSTNOW  ELSE PRESET FOR STACKING       GP97347
PRINTSOP CLI   PSXCELL,X'44'  ARE WE PROCESSING SUBJECT OF EXECUTE?
         BE    PRINTSKP       YES; SKIP ADDRESS AND OFFSET      GP97085
         BASCALL PRTRELAD     RESOLVE IC AS MODULE+OFFSET       GP97332
         B     PRINTSCM                                         GP99049
PRINTSKP MVC   STKFLAGS,PSXSTKFG  EX TARGET SAME AS EX INSTR.   GP99049
PRINTSCM BASCALL PRTIMAGE     FORMAT HEX INSTRUCTION AND OPCODE GP97332
         TM    PROFLAGS,FGILLOP  ILLEGAL OPERATION CODE?        GP97346
         BNZ   PRINTSUX      YES; SKIP IT                       GP97346
         BASCALL PRTINSTR     FORMAT IN ASSEMBLER FORM          GP97332
         BASCALL PRTDATA             REGISTER/DATA FORMATTING   GP97342
         BASCALL STACK       PRINT THE LINE                     GP97347
         MVI   PSXCELL,0     RESET EXECUTE CODE                 GP97085
         TM    FLAG1,FGDOREG   LM OR STM INSTRUCTION?           GP97330
         BZ    PRINTSUA                NO                       GP97332
         BAS   R9,GRFORM               YES, SO DUMP GENERAL REGISTERS
PRINTSUA TM    FLAG1,FGDOACR   LAM OR STAM INSTRUCTION?         GP00029
         BZ    PRINTSUR                NO                       GP00029
         BAS   R9,ARFORM     PRINT ACCESS REGISTERS             GP00029
PRINTSUR TM    OPTFLAGS,FGDEFLIN  PRETTY LINE REQUEST?          GP97333
         BZ    PRINTSUX                                         GP97333
         NI    OPTFLAGS,255-FGDEFLIN  RESET THE REQUEST         GP97333
         CLI   TRCFLAGS,0    SELECTIVE TRACING?                 GP97335
         BNE   PRINTSUX      YES; NO FINAGLING                  GP97335
         MVC   PLLCTR,=8C'-' MAKE A SEPARATOR                   GP97333
         $TCKCONV STCKVAL=0,CONVVAL=DB,TIMETYP=DEC,DATETYP=YYYYMMDD,   *
               MF=(E,STCKLIST),ZONE=LT                          GP06266
         UNPK  DB3(9),DB+8(5)     DATE                          GP06266
         MVI   DB3+11,C'-'   ISO DATE SEPAATOR                  GP06266
         MVC   PLINE+85(10),=AL1(0,1,2,3,11,4,5,11,6,7)         GP06266
         TR    PLINE+85(10),DB3  FORMAT DATE                    GP06266
         UNPK  DB3(15),DB(8)      TIME                          GP06266
         MVI   DB3+12,C':'   HOUR/MINUTES                       GP06266
         MVI   DB3+13,C'.'   PARTIAL SECONDS                    GP06266
         MVC   PLINE+99(15),=AL1(0,1,12,2,3,12,4,5,13,6,7,8,9,10,11)
         TR    PLINE+99(15),DB3  FORMAT DATE                    GP06266
         BASCALL STACK              PRINT MOSTLY BLANK LINE     GP97347
PRINTSUX MVC   PSXSTKFG,STKFLAGS  PRESERVE STACK FLAGS FOR EX TARGET
         NI    STKFLAGS,255-FGSTNOW-FGSTNOT  RESET STACK FLAGS  GP97352
         SUBRET ,            RETURN                             GP97332
         SPACE 1                                                GP97349
         LTORG ,                                                GP97349
         EJECT ,                                                GP00169
***********************************************************************
*                                                                     *
*  PRTRELAD    ROUTINE TO PLACE THE NAME OF MODULE AND DISPLACEMENT   *
*              IN THE PRINT LINE                                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
PRTRELAD BASHEAD ,                                              GP97332
         LH    R8,MODCNT                                        GP97085
         LR    R4,ILCR       COPY THE PSEUDO LOCATION COUNTER   GP97085
         N     R4,=X'7FFFFFFF'     DROP HIGH ORDER BITS         GP97331
         LA    R6,CURRMOD    POINT TO PRIOR ENTRY               GP98095
         USING MODDSECT,R6                                      GP97333
         C     R4,MODADDR    IN PRIOR RANGE?                    GP98095
         BL    PRTRELAN      NO                                 GP98095
         L     R0,MODSIZ                                        GP98095
         N     R0,=X'00FFFFFF'    KILL FLAG                     GP11350
         A     R0,MODADDR                                       GP98095
         CR    R4,R0                                            GP98095
         BL    PRTRELCO      BINGO; RE-USE PRIOR ENTRY          GP98095
PRTRELAN L     R6,@MODMAP                                       GP97333
         XC    CURRMOD(MODLEN),CURRMOD  INVALIDATE OLD NAME     GP98095
PRTRELAL C     R4,MODADDR                                       GP97332
         BL    PRTRELOW                                         GP00169
         L     R0,MODSIZ                                        GP00169
         N     R0,=X'00FFFFFF'    KILL FLAG                     GP11350
         A     R0,MODADDR                                       GP00169
         CR    R4,R0                                            GP97333
         BL    PRTRELCS      BINGO                              GP97333
         SPACE 1                                                GP97332
PRTRELOW LA    R6,MODLEN(,R6)  BUMP NEXT MODULE ADDRESS TABLE   GP97333
         BCT   R8,PRTRELAL                                      GP97332
         LA    R5,1          ONE TO ADD                         GP97073
         AH    R5,MODCNT      TO MODCNT                         GP97073
         CH    R5,=Y(MAXMODNM)    ROOM FOR ANOTHER?             GP97333
         BH    PRTRELAX      NO; JUST LEAVE IT UNRESOLVED       GP97333
         ST    R4,DB                                            GP97335
         MVSQUERY INADDR=DB,SEARCH=JPALPA,OEPNM=MODNAME,               *
               OLOADPT=MODADDR,OLEN=MODSIZ  PLISTVER=2          GP05189
         BXH   R15,R15,PRTRELNU  SOME DAYS YOU CAN'T WIN        GP97333
         NI    MODADDR,X'7F'   REMOVE AMODE BIT                 GP98116
         MVSQUERY INADDR=DB,SEARCH=LPA,OEPNM=DB2  IN LPA ?      GP05189
         BXH   R15,R15,PRTRELNW    NO                           GP97352
         B     PRTRELPA      YES; SET LPA BIT                   GP99116
PRTRELNU DS    0H                                               GP05189
         AIF   (&MVSXA).DONUC                                   GP05189
         B     PRTRELCS      SKIP NUCLEUS  TEST FOR NOW         GP05189
         AGO   .COMNUC                                          GP05189
.DONUC   NUCLKUP BYADDR,ADDR=DB,NAME=MODNAME                    GP99116
         BXH   R15,R15,PRTRELCS                                 GP99116
         NUCLKUP BYNAME,NAME=MODNAME,ADDR=(R2)                  GP99116
         BXH   R15,R15,PRTRELCS                                 GP99116
         LR    R3,R1         FLIP SIZE FOR STM                  GP99116
         STM   R2,R3,MODADDR                                    GP99116
         NI    MODADDR,X'7F'   REMOVE AMODE BIT                 GP98116
.COMNUC  SPACE 1
PRTRELPA OI    MODFLAG,MFLPA  SET IT ON                         GP98095
PRTRELNW STH   R5,MODCNT                                        GP97073
         ST    R6,@MODMEND   UPDATE TABLE END ADDRESS           GP97333
         SPACE 1                                                GP97333
PRTRELCS OC    MODNAME,BLANKS                                   GP00029
         MVC   CURRMOD(MODLEN),0(R6)  SAVE CURRENT HIT          GP98095
         LR    R1,ILCR       PASS ADDRESS TO BE CHECKED         GP97351
         BASCALL RANGER      CHECK FOR ADDR TRACING SELECTION   GP04056
         B     PRTRELCO                                         GP04056
PRTRELCM OC    MODNAME,BLANKS                                   GP00029
         MVC   CURRMOD(MODLEN),0(R6)  SAVE CURRENT HIT          GP98095
PRTRELCO OC    MODNAME,BLANKS                                   GP00029
         CLC   MODNAME,BLANKS                                   GP00029
         BNE   PRTRELIO      NO                                 GP00029
         TM    PROFLAGS,FGDOIO  PROCESS I/O STUBS ?             GP00029
         BZ    PRTRELSK      NO; JUST IGNORE                    GP00029
         B     PRTRELAX      YES; PROCESS WITHOUT OFFSET        GP00029
PRTRELIO TM    OPTFLAGS,FGRANGE  CHOSEN BY USER ?               GP04070
         BNZ   PRTRELPO      YES; PROCESS                       GP04070
         TM    MODFLAG,MFLPA  IS THIS MODULE IN LPA?            GP98095
         BZ    PRTRELPO      NO; NO CHANGE                      GP98095
         TM    TRQFLAGS,FGLPAPRT  PRINT LPA ANYWAY?             GP00169
         BNZ   PRTRELPO      YES; PRINT                         GP00169
PRTRELSK NI    STKFLAGS,255-FGSTNOW  RESET STACK FLAG           GP98095
         OI    STKFLAGS,FGSTNOT  NO STACKING                    GP98095
PRTRELPO S     R4,MODADDR    FIND DISPLACEMENT FROM MODULE+0    GP97333
         LR    R0,R4         AND MOVE TO PARM REGISTER          GP97335
         ST    R0,TRDOFF     SET OFFSET                         GP00204
         BAS   R9,HEX2EBC              CONVERT IT FOR PRINTING  GP97072
         MVC   PLDISP(8),HEXEDOUT PLACE IT IN THE PRINT LINE    GP97085
         TM    PREVAM,FGAM31     EXECUTED IN 31-BIT MODE?       GP97086
         BNZ   PRTRELA3                                         GP97086
         MVC   PLDISP(2),BLANKS        DELETE LEADING ZEROS     GP97335
PRTRELA3 MVC   PLMODNM(8),MODNAME                               GP97086
         MVI   PLMODNM+8,C'+'                                   GP97347
         B     PRTRELAX      GO AROUND                          GP98136
PRTRELPX TM    TRQFLAGS,FGLPAPRT  PRINT LPA ANYWAY?             GP00169
         BNZ   PRTRELAX      YES; PRINT                         GP00169
         NI    STKFLAGS,255-FGSTNOW  RESET STACK FLAG           GP98136
         OI    STKFLAGS,FGSTNOT  NO STACKING IN HASCHAM         GP98136
PRTRELAX TM    PSXSTKFG,FGSTNOT  PRIOR PRINT SUPPRESSED?        GP99055
         BZ    PRTRELAW      NO; NORMAL                         GP99055
         TM    STKFLAGS,FGSTNOT  CURRENT NOT SUPPRESSED?        GP99055
         BNZ   PRTRELAW        YES; SHOW CURRENT REGISTERS      GP99055
         MVC   HOLDPLIN,PLINE  SAVE CURRENT TEXT                GP99058
         MVC   PLINE(L'HOLDPLIN),PLINE-1  CLEAR IT              GP99062
         BAS   R9,GRFORM               YES, SO DUMP GENERAL REGISTERS
         MVC   PLINE(L'HOLDPLIN),HOLDPLIN  RESTORE IT           GP99058
PRTRELAW ICM   R15,15,@TRADA  SOURCE PRINT SUPPORT ?            GP00204
         BZ    PRTRELAY      NO                                 GP00204
         MVC   TRDMEM,MODNAME  SET MODULE NAME                  GP00204
         CLI   TRDMEM,C' '   ANY ?                              GP00204
         BNH   PRTRELAY      NO                                 GP00204
         L     R1,@TRADA+4   POINT TO PARAMETER LIST            GP00204
         BASSM R14,R15       PRINT SOURCE IF AVAILABLE          GP00204
PRTRELAY TM    STKFLAGS,FGSTNOW+FGSTNOT  STACKING OR SKIPPING?  GP99049
         BNZ   PRTRELAZ      YES; DON'T COUNT                   GP97347
         L     R8,CURPRTLN                                      GP97338
         LA    R8,1(,R8)                                        GP98095
         ST    R8,CURPRTLN                                      GP97338
         C     R8,MAXPRTLN                                      GP97338
         BNE   PRTRELAZ                                         GP97345
         OI    OPTFLAGS,FGNOPREX    DISABLE TRACE PRINTING      GP97084
PRTRELAZ BASRET ,            RETURN                             GP97332
         SPACE 1                                                GP99089
         LTORG ,                                                GP99089
         BASEND ,                                               GP97349
         EJECT ,                                                GP00169
***********************************************************************
*                                                                     *
*  PRTIMAGE    ROUTINE TO PLACE THE PSEUDO LOCATION COUNTER, THE      *
*              HEXADECIMAL INSTRUCTION IMAGE, AND THE CONDITION CODE  *
*              IN THE PRINT LINE                                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
PRTIMAGE BASHEAD ,                     SAVE RETURN ADDRESS      GP97332
         L     R0,SAVEOPA2   GET RESOLVED DATA ADDRESS          GP97349
         CLI   PSXCELL,X'44'  ARE WE PROCESSING SUBJECT OF EXECUTE?
         BE    PRTIMNEX       YES; SKIP ADDRESS AND OFFSET      GP97085
         LR    R0,ILCR                 COPY THE PSEUDO LOCATION COUNTER
PRTIMNEX BAS   R9,HEX2EBC              CONVERT IT FOR PRINTING  GP97072
         MVC   PLLCTR,HEXEDOUT      PLACE IT IN THE PRINT LINE  GP97085
         TM    PREVAM,FGAM31     EXECUTED IN 31-BIT MODE?       GP97086
         BNZ   PRTIMN24                                         GP97086
         MVC   PLLCTR(2),BLANKS MAKE 24-BIT MODE OBVIOUS        GP97086
PRTIMN24 L     R0,XCELL                GET THE INSTRUCTION IMAGE
         BAS   R9,HEX2EBC              CONVERT 1ST FOUR BYTES   GP97072
         MVC   PLINST(4),HEXEDOUT      PLACE 1ST 2 BYTES        GP97085
         MVC   INSTRAW(8),HEXEDOUT  SAVE HEX TEXT FOR FORMATTING
         TM    XCELL,X'C0'  CHECK INSTRUCTION LENGTH            GP97085
         BZ    PRTIMCC      2 BYTES - DO CC                     GP97085
         MVI   PLINST+4,C',' MAKE IT PRETTY                     GP97333
         MVC   PLINST+5(4),HEXEDOUT+4  PLACE 2ND 2 BYTES        GP97085
         BM    PRTIMCC      4 BYTES - DO CC                     GP97085
PRTIMCC6 L     R0,XCELL+4              GET LAST 2 BYTES OF INSTRUCTION
         BAS   R9,HEX2EBC              CONVERT FOR PRINTING     GP97072
         MVI   PLINST+4+1+4,C',' PRETTIFY                       GP97333
         MVC   PLINST+10(4),HEXEDOUT   PLACE LAST 2 BYTES       GP97085
         MVC   INSTRAW+8(4),HEXEDOUT  SAVE HEX TEXT FOR FORMATTING
         SPACE 1                                                GP00169
PRTIMCC  TM    FLAG1,FGCC    CHANGED CONDITION CODE?            GP97085
         BZ    PRTIMEX       NO (?); SKIP IT                    GP97085
         PACK  PLCC,NEXTCC   COPY BINARY CONDITION CODE         GP97336
         TR    PLCC,EBDCC    MAKE PRINTABLE                     GP97085
PRTIMEX  BASRET ,            RETURN                             GP97332
         BASEND ,                                               GP97349
         EJECT ,                                                GP00169
***********************************************************************
*                                                                     *
*  PRTINSTR    ROUTINE TO PLACE THE SYMBOLIC INSTRUCTION CODE AND THE *
*              INSTRUCTION FIELDS IN ASSEMBLY FORMAT INTO THE         *
*              PRINT LINE.                                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
PRTINSTR BASHEAD ,                     SAVE RETURN ADDRESS      GP97332
         ICM   R2,15,@INST   GET INSTRUCTION DEFINITION         GP97331
         BZ    PRTINSTX      NONE; JUST GET BACK                GP00187
         MVC   PLOP,OPNAME-OPDSECT(R2)  PLACE IN PRINT LINE     GP97086
         SR    R1,R1         CLEAR FOR IC                       GP97331
         IC    R1,OPMASK-OPDSECT(R2)      GET MASK INDEX        GP97331
         MH    R1,=Y(MASKLEN)    GET OFFSET TO MASK             GP97331
         AL    R1,=A(MASKTAB)      POINT TO MASK                GP97331
         MVC   PLFIELD(MASKLEN),0(R1)   MOVE MASK TO OUTPUT     GP97331
         TR    PLFIELD(MASKLEN),INSTPAT MOVE PATTERN/RAW DATA   GP97331
         SPACE 1                                                GP97333
*   DO SOME MINOR EDITING TO CLEAN UP THE APPEARANCE            GP97333
         LA    R1,PLFIELD-1  POINT PRIOR TO OUTPUT FIELD        GP97333
         LA    R0,MASKLEN-2  SCAN A LITTLE                      GP97333
PRTINSTC CLC   =C'(0,0)',0(R1)  BIG BADDY?                      GP97333
         BNE   PRTINST1                                         GP97333
         MVC   0(MASKLEN,R1),5(R1)  ELIMINATE IT                GP97333
         B     PRTINSTC      RESTART                            GP97333
PRTINST1 CLC   =C'(0)',0(R1)                                    GP97333
         BNE   PRTINST2                                         GP97333
         MVC   0(MASKLEN,R1),3(R1)  ELIMINATE IT                GP97333
         B     PRTINSTC      AND RESTART                        GP97333
PRTINST2 CLC   =C'(0,',0(R1)                                    GP97333
         BNE   PRTINST3                                         GP97333
         MVC   1(MASKLEN,R1),2(R1)  SQUEEZE IT                  GP97333
         B     PRTINSTC      AND RESTART                        GP97333
PRTINST3 CLC   =C',0',0(R1)                                     GP97333
         BE    PRTINST5      YES; SLIDE OVER IF NOT LAST        GP97333
PRTINST4 CLC   =C' 0',0(R1)                                     GP97333
         BNE   PRTINSTU                                         GP97333
PRTINST5 CLI   2(R1),C'A'    DIGIT FOLLOWS?                     GP97333
         BL    PRTINSTU      NO; LEAVE IT                       GP97333
         MVC   1(MASKLEN,R1),2(R1)  SQUEEZE IT                  GP97333
         B     PRTINSTC      AND RESTART                        GP97333
PRTINSTU LA    R1,1(,R1)                                        GP97333
         BCT   R0,PRTINSTC   KEEP RETRYING                      GP97333
PRTINSTX BASRET ,            RETURN TO CALLER                   GP97331
         LTORG ,                                                GP00169
         BASEND ,                                               GP97349
         EJECT ,                                                GP00169
***********************************************************************
*                                                                     *
*  PRTDATA     ROUTINE TO FORMAT REGISTER CONTENTS AND CORRESPONDING  *
*              DATA, IF ANY.                                          *
*                                                                     *
*     THIS ROUTINE WORKS BY CHECKING AN OPTION BIT IN THE MASK FOUND  *
*       AT THE OFFSET CORRESPONDING TO THE FORM INDEX IN THE OPCD     *
*       FIELD, LOCATED IN FORMTAB (60 BITS AT PRESENT)                *
*     THE CORRESPONDENCE BETWEEN BITS AND THE FUNCTION IS SET BY THE  *
*       FORMDO MACRO, WHERE THE MNEMONIC IS SET. THE MATCHING FORM    *
*       MACRO FOR THE INSTRUCTION SPECIFIES THAT AND OTHER MNEMONICS  *
*       TO GET THE BITS SET.                                          *
*                                                                     *
*     FOR EXAMPLE:                                                    *
*                                                                     *
*     FORMDO R1N                                                      *
*         LOOKUP R1 FROM NEXTREG AND DISPLAY IN HEX                   *
*     FORMDO R3O                                                      *
*         LOOKUP R3 IN PREVREG AND DISPLAY IN NEXT FIELD IN HEX       *
*      ...                                                            *
*  RR FORM R1N,R3O           DEFINE FORMAT BITS FOR DEFAULT RR        *
*      ...                                                            *
*  LR OPCD 12,...,FORM=RR    USE RR FORMAT FOR THIS INSTRUCTION       *
*                                                                     *
*  REGISTER USE:  R5 CURRENT MASK; R6 NEXT MASK WORD; R7 PRINT FIELD  *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
PRTDATA  BASHEAD ,             SAVE A LITTLE                    GP97339
         MVI   PRQFLAGS,0   RESET ADDRESS/MEMORY ACCESS FLAGS   GP97349
         XC    SAVEOPA1(4*(SAVEOPA2-SAVEOPA1)),SAVEOPA1         GP97352
         TM    FLAG2,FGRR+FGE  RRE?                             GP97339
         BNO   PRTDATA2        YES; USE THEM                    GP97339
         MVC   XCELL+1(1),XCELL+3 GET RRE R1/R2 FIELDS          GP97339
PRTDATA2 LA    R7,PLFORM       POINT TO FIRST OUTPUT FIELD      GP97339
         SR    R1,R1           CLEAR FOR IC                     GP97339
         ICM   R1,1,FMTKEY     GET FORMAT INDEX                 GP97339
         BZ    PRTDATAX        ZERO - SPECIAL CODE FOR NO ACTION
         MH    R1,=Y(FORMLEN)  CONVERT TO OFFSET                GP97339
         AL    R1,=A(FORMTAB)  POINT TO ENTRY                   GP97339
         LM    R5,R6,0(R1)     LOAD BIT MASKS                   GP97339
         SPACE 1                                                GP00169
       FORMDO GR0            FORMAT GENERAL REGISTER 0          GP97344
         MVC   0(2,R7),=C'0:'
         LA    R7,2(,R7)
         SR    R1,R1           SET REGISTER #                   GP97344
         BAS   R14,PUTGR       FORMAT IT                        GP97344
         SPACE 1                                                GP00169
       FORMDO GR1            FORMAT GENERAL REGISTER 1          GP97344
         MVC   0(2,R7),=C'1:'
         LA    R7,2(,R7)
         LA    R1,1*16         SET REGISTER #                   GP98087
         BAS   R14,PUTGR       FORMAT IT                        GP97344
         SPACE 1                                                GP00169
       FORMDO GR2            FORMAT GENERAL REGISTER 2          GP97344
         MVC   0(2,R7),=C'2:'
         LA    R7,2(,R7)
         LA    R1,2*16         SET REGISTER #                   GP98087
         BAS   R14,PUTGR       FORMAT IT                        GP97344
         SPACE 1                                                GP00169
       FORMDO GR3            FORMAT GENERAL REGISTER 3          GP97344
         MVC   0(2,R7),=C'3:'
         LA    R7,2(,R7)
         LA    R1,3*16         SET REGISTER #                   GP98087
         BAS   R14,PUTGR       FORMAT IT                        GP97344
         SPACE 1                                                GP00169
       FORMDO GR4            FORMAT GENERAL REGISTER 4          GP97344
         MVC   0(2,R7),=C'4:'
         LA    R7,2(,R7)
         LA    R1,4*16         SET REGISTER #                   GP98087
         BAS   R14,PUTGR       FORMAT IT                        GP97344
         SPACE 1                                                GP00169
       FORMDO GR14           FORMAT GENERAL REGISTER 14         GP97344
         MVC   0(2,R7),=C'E:'
         LA    R7,2(,R7)
         LA    R1,14*16        SET REGISTER #                   GP98087
         BAS   R14,PUTGR       FORMAT IT                        GP97344
         SPACE 1                                                GP00169
       FORMDO R1O            FORMAT R1 FROM OLD REGISTER SET    GP97339
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R1OODD         FORMAT R1+1 FROM OLD REGISTER SET  GP97339
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97342
         TM    XCELL+1,X'10'   ODD REGISTER?                    GP97344
         BZ    *+4+2           NO; USE ODD                      GP97344
         SR    R0,R0           REDISPLAY SAME ONE               GP97344
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R1N            FORMAT R1 FROM NEW REGISTER SET    GP97339
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97342
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R1NNZ          FORMAT R1 PROVIDED IT IS NOT ZERO  GP97342
         TM    XCELL+1,X'F0'   IS R1 ZERO?                      GP97342
         BZ    FRM&FPX         YES; SKIP THIS                   GP97342
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97342
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R1NODD         FORMAT R1+1 FROM NEW REGISTER SET  GP97339
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97342
         TM    XCELL+1,X'10'   ODD REGISTER?                    GP97344
         BZ    *+4+2           NO; USE ODD                      GP97344
         SR    R0,R0           REDISPLAY SAME ONE               GP97344
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97342
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00204
       FORMDO AR1O           FORMAT ACCESS REG R1 FROM OLD SET  GP00204
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP00204
         LA    R2,PREVACR      POINT TO OLD ACCESS REGISTERS    GP00204
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP00204
         SPACE 1                                                GP00204
       FORMDO AR1N           FORMAT ACCESS REG R1 FROM OLD SET  GP00204
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP00204
         LA    R2,NEXTACR      POINT TO OLD ACCESS REGISTERS    GP00204
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP00204
         SPACE 1                                                GP00169
       FORMDO DR1N           FORMAT R1 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP00169
       FORMDO FR1N           FORMAT R1 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP00169
       FORMDO DFR1N          FORMAT R1 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP00169
       FORMDO XFR1N          FORMAT R1 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R0,2*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,3*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR1       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP97342
       FORMDO R3O            FORMAT R3 FROM OLD REGISTER SET    GP97339
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R3N            FORMAT R3 FROM NEW REGISTER SET    GP97339
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97342
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R3OODD         FORMAT R3+1 FROM OLD REGISTER SET  GP97339
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97342
         TM    XCELL+1,X'01'   ODD REGISTER?                    GP97344
         BZ    *+4+2           NO; USE ODD                      GP97344
         SR    R0,R0           REDISPLAY SAME ONE               GP97344
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R3NODD         FORMAT R3+1 FROM NEW REGISTER SET  GP97339
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97342
         TM    XCELL+1,X'01'   ODD REGISTER?                    GP97344
         BZ    *+4+2           NO; USE ODD                      GP97344
         SR    R0,R0           REDISPLAY SAME ONE               GP97344
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97342
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO R3ONZ          FORMAT R3 WHEN NOT ZERO            GP97342
         TM    XCELL+1,X'0F'   IS R3 ZERO?                      GP97342
         BZ    FRM&FPX         YES; SKIP THIS                   GP97342
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00204
       FORMDO AR3O           FORMAT ACCESS REG R1 FROM OLD SET  GP00204
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP00204
         LA    R2,PREVACR      POINT TO OLD ACCESS REGISTERS    GP00204
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP00204
         SPACE 1                                                GP00204
       FORMDO AR3N           FORMAT ACCESS REG R1 FROM OLD SET  GP00204
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP00204
         LA    R2,NEXTACR      POINT TO OLD ACCESS REGISTERS    GP00204
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP00204
         SPACE 1                                                GP00169
       FORMDO DR3O           FORMAT R3 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP00169
       FORMDO R3NNZ          FORMAT R3 WHEN NOT ZERO            GP97342
         TM    XCELL+1,X'0F'   IS R3 ZERO?                      GP97342
         BZ    FRM&FPX         YES; SKIP THIS                   GP97342
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97342
         LA    R2,NEXTREG      POINT TO NEW REGISTERS           GP97342
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97342
         SPACE 1                                                GP00169
       FORMDO FR3O           FORMAT R3 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP00169
       FORMDO DFR3O          FORMAT R3 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP00169
       FORMDO XFR3O          FORMAT R3 FROM NEW REGISTER SET    GP97344
         SR    R0,R0           OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,1*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R0,2*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SH    R7,=H'2'        REVERT                           GP97344
         MVI   0(R7),C'-'      CONJUNCTION                      GP97344
         LA    R7,1(,R7)       JOIN SECOND                      GP97344
         LA    R0,3*4          OFFSET FROM SPECIFIED REGISTER   GP97344
         LA    R2,FPR0         POINT TO NEW REGISTERS           GP97344
         BAS   R14,PUTR3       LOCATE AND CONVERT IT            GP97344
         SPACE 1                                                GP97342
       FORMDO DATA3          FORMAT CONTENTS OF RESOLVED R1 ADDRESS
         TM    PRQFLAGS,FGOPA3  DATA ADDRESS AVAILABLE?         GP97346
         BZ    FRM&FPX         IF NOT; SKIP DATA                GP97346
         OI    PRQFLAGS,FGOPM3  SHOW MEMORY ACCESS              GP97358
         L     R1,SAVEOPA3     RELOAD RESOLVED ADDRESS          GP97342
         SR    R2,R2           SET SHIFT FOR SS(L1L2) FORM      GP97342
         BAS   R14,PUTDATA     CONVERT DATA                     GP97342
         SPACE 1                                                GP97342
       FORMDO XBD2           FORMAT SECOND ADDRESS FIELD (RX)   GP97342
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         LA    R3,XCELL+2      POINT TO FIRST BDDD FIELD        GP97342
         BAS   R14,GETXBD      GET VALUE OF ADDRESS             GP97342
         ST    R1,SAVEOPA2     SAVE FOR LATER                   GP97342
         OI    PRQFLAGS,FGOPA2  ADDRESS SAVED                   GP97346
         BAS   R14,PUTF3       FORMAT IT                        GP97342
         ICM   R0,3,XCELL+2    GET (B)DDD                       GP97352
         STCM  R0,3,SAVEOPA2+4                                  GP97352
         SLL   R0,4            GET RID OF (B)                   GP97352
         ICM   R0,4,XCELL+1    INSERT (X)                       GP97352
         SRL   R0,4            SHIFT FOR STORE                  GP97352
         STCM  R0,3,SAVEOPA2+6   STORE (X)DDD  FORM             GP97352
         SPACE 1                                                GP97342
       FORMDO BD2            FORMAT SECOND ADDRESS FIELD        GP97339
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         LA    R3,XCELL+2      POINT TO SECOND BDDD FIELD       GP97342
         BAS   R14,GETBD       GET VALUE OF ADDRESS             GP97342
         ST    R1,SAVEOPA2     SAVE FOR LATER                   GP97342
         OI    PRQFLAGS,FGOPA2  ADDRESS SAVED                   GP97346
         BAS   R14,PUTF3       FORMAT IT                        GP97342
         ICM   R0,3,XCELL+2    GET (B)DDD                       GP97352
         STCM  R0,3,SAVEOPA2+4                                  GP97352
         STCM  R0,3,SAVEOPA2+6                                  GP97352
         SPACE 1                                                GP97342
       FORMDO DATA2          FORMAT CONTENTS OF RESOLVED R1 ADDRESS
         TM    PRQFLAGS,FGOPA2  DATA ADDRESS AVAILABLE?         GP97346
         BZ    FRM&FPX         IF NOT; SKIP DATA                GP97346
         L     R1,SAVEOPA2     RELOAD RESOLVED ADDRESS          GP97342
         LA    R2,4            SET SHIFT FOR SS(L1L2) FORM      GP97342
         OI    PRQFLAGS,FGOPM2  SHOW MEMORY ACCESS              GP97358
         BAS   R14,PUTDATA     DISPLAY IT                       GP97342
         SPACE 1                                                GP97342
       FORMDO CDATA2         FORMAT CONTENTS OF RESOLVED R1 ADDRESS
         TM    PRQFLAGS,FGOPA2  DATA ADDRESS AVAILABLE?         GP97346
         BZ    FRM&FPX         IF NOT; SKIP DATA                GP97346
         CLI   XCELL+1,7       SS INSTRUCTION LENGTH OVER 8 ?   GP03114
         BH    FRM&FPX         IF NOT; SKIP DATA                GP97346
         L     R1,SAVEOPA2     RELOAD RESOLVED ADDRESS          GP97342
         LA    R2,4            SET SHIFT FOR SS(L1L2) FORM      GP97342
         OI    PRQFLAGS,FGOPM2  SHOW MEMORY ACCESS              GP97358
         BAS   R14,PUTDATA     DISPLAY IT                       GP97342
         SPACE 1                                                GP97342
       FORMDO BD4            FORMAT SECOND ADDRESS FIELD        GP97339
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97342
         LA    R3,XCELL+4      POINT TO SECOND BDDD FIELD       GP97342
         BAS   R14,GETBD       GET VALUE OF ADDRESS             GP97342
         ST    R1,SAVEOPA4     SAVE FOR LATER                   GP97342
         OI    PRQFLAGS,FGOPA4  ADDRESS SAVED                   GP97346
         BAS   R14,PUTF3       FORMAT IT                        GP97342
         ICM   R0,3,XCELL+4    GET (B)DDD                       GP97352
         STCM  R0,3,SAVEOPA4+4                                  GP97352
         STCM  R0,3,SAVEOPA4+6                                  GP97352
         SPACE 1                                                GP97344
       FORMDO BD4IN          FORMAT SECOND ADDRESS FIELD        GP97344
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97344
         LA    R3,XCELL+4      POINT TO SECOND BDDD FIELD       GP97344
         BAS   R14,GETBD       GET VALUE OF ADDRESS             GP97344
         SR    R15,R15         CLEAR FOR IC                     GP97344
         IC    R15,XCELL+1     GET LENGTH                       GP97344
         SR    R1,R15          SUBTRACT FIELD LENGTH            GP97344
         AL    R1,=F'1'        POINT TO FIRST DATUM             GP97344
         ST    R1,SAVEOPA4     SAVE FOR LATER                   GP97344
         OI    PRQFLAGS,FGOPA4  ADDRESS SAVED                   GP97346
         BAS   R14,PUTF3       FORMAT IT                        GP97344
         ICM   R0,3,XCELL+4    GET (B)DDD                       GP97352
         STCM  R0,3,SAVEOPA4+4                                  GP97352
         STCM  R0,3,SAVEOPA4+6                                  GP97352
         SPACE 1                                                GP97344
       FORMDO BD4M           FORMAT SRP SHIFT AMOUNT FIELD      GP97344
         LA    R2,PREVREG      POINT TO OLD REGISTERS           GP97344
         LA    R3,XCELL+4      POINT TO SECOND BDDD FIELD       GP97344
         BAS   R14,GETBD       GET VALUE OF ADDRESS             GP97344
         SLL   R0,24+2         LEFT JUSTIFY VALUE               GP97344
         SRDL  R0,32+24+2      GET SIGN EXTENSION AND NON-ZERO REG
         CVD   R1,DB           MAKE BINARY                      GP97344
         MVC   2(4,R7),=X'40212020'  MAKE EDIT MASK             GP97344
         ED    2(4,R7),DB+6    MAKE PRINTABLE                   GP97344
         ICM   R0,15,=C'--> '  PRESET FOR RIGHT SHIFT           GP97344
         LTR   R1,R1           NEGATIVE?                        GP97344
         BM    *+4+4           YES                              GP97344
         ICM   R0,15,=C'<-- '  SET LEFT SHIFT                   GP97344
         STCM  R0,15,0(R7)     SAVE IT                          GP97344
         LA    R7,8(,R7)       SKIP OVER IT                     GP97344
         SPACE 1                                                GP97342
       FORMDO DATA4          FORMAT CONTENTS OF RESOLVED R1 ADDRESS
         TM    PRQFLAGS,FGOPA4  DATA ADDRESS AVAILABLE?         GP97346
         BZ    FRM&FPX         IF NOT; SKIP DATA                GP97346
         L     R1,SAVEOPA4     RELOAD RESOLVED ADDRESS          GP97342
         SR    R2,R2           SET SHIFT FOR SS(L1L2) FORM      GP97342
         OI    PRQFLAGS,FGOPM4  SHOW MEMORY ACCESS              GP97358
         BAS   R14,PUTDATA     DISPLAY IT                       GP97342
         SPACE 1                                                GP97342
       FORMDO CDATA4         FORMAT CONTENTS OF RESOLVED R1 ADDRESS
         TM    PRQFLAGS,FGOPA4  DATA ADDRESS AVAILABLE?         GP97346
         BZ    FRM&FPX         IF NOT; SKIP DATA                GP97346
         CLI   XCELL+1,7       SS INSTRUCTION LENGTH OVER 8 ?   GP03114
         BH    FRM&FPX         IF NOT; SKIP DATA                GP97346
         L     R1,SAVEOPA4     RELOAD RESOLVED ADDRESS          GP97342
         SR    R2,R2           SET SHIFT FOR SS(L1L2) FORM      GP97342
         OI    PRQFLAGS,FGOPM4  SHOW MEMORY ACCESS              GP97358
         BAS   R14,PUTDATA     DISPLAY IT                       GP97342
         SPACE 1                                                GP97342
       FORMDO LONG           FORMAT MVCL AND CLCL REGISTERS AND DATA
         BASCALL STACK       PRINT THE LINE AS IS               GP99097
         OI    PRQFLAGS,FGOPM1+FGOPM3  SHOW MEMORY ACCESS       GP99097
         IC    R1,XCELL+1    RR                                 GP99097
         N     R1,OOOOOOFO   R0                                 GP99097
         SRL   R1,2          R*4                                GP99097
         L     R2,PREVREG(R1)   GET THE ADDRESS                 GP99097
         L     R3,PREVREG+4(R1)   AND THE LENGTH                GP99097
         N     R2,PREVMASK   MASK ACCORDING TO MODE             GP99097
         TM    XCELL,X'C0'   MVCL OR CLCL ?                     GP99097
         BNZ   *+8           NO                                 GP99097
         N     R3,=X'00FFFFFF'  KILL HIGH BYTE                  GP99097
         LTR   R3,R3         ANYTHING TO DISPLAY ?              GP06219
         BNP   LONGOP1X      NO; SKIP PARTIAL LINE              GP06219
         MVC   PLMODNM+1(4),=C'OP 1'                            GP99097
         L     R4,MAXHEXLN   DUMP MAX OF ONE PAGE               GP00029
         BASCALL DUMPLINE                                       GP99097
LONGOP1X CLI   XCELL,X'B2'   CUSE?
         BE    LONGOP2
         TM    XCELL,1       IS THIS MVCL OR MVCLE ?            GP99097
         BZ    FRM&FPX       NOT FOUND; LEAVE IT BLANK          GP99097
LONGOP2  IC    R1,XCELL+1    RR                                 GP99097
         N     R1,OOOOOOOF   0R                                 GP99097
         SLL   R1,2          R*4                                GP99097
         L     R2,PREVREG(R1)   GET THE ADDRESS                 GP99097
         L     R3,PREVREG+4(R1)   AND THE LENGTH                GP99097
         N     R2,PREVMASK   MASK ACCORDING TO MODE             GP99097
         TM    XCELL,X'C0'   MVCL OR CLCL ?                     GP99097
         BNZ   *+8           NO                                 GP99097
         N     R3,=X'00FFFFFF'  KILL HIGH BYTE                  GP99097
         LTR   R3,R3         ANYTHING TO DISPLAY ?              GP06219
         BNP   FRM&FPX       NO; SKIP PARTIAL LINE              GP06219
         MVC   PLMODNM+1(4),=C'OP 2'                            GP99097
         L     R4,MAXHEXLN   DUMP MAX OF ONE PAGE               GP00029
         BASCALL DUMPLINE                                       GP99097
         SPACE 1                                                GP97342
       FORMDO LONG8          FORMAT MVC, CLC, ETC. LONG DATA    GP03114
         SR    R3,R3                                            GP03114
         IC    R3,XCELL+1    SS LEN                             GP03114
         CH    R3,=H'7'      8-BYTES?                           GP03114
         BNH   FRM&FPX       NOT MORE - IT'LL FIT ON ONE LINE   GP03114
         BASCALL STACK       PRINT THE LINE AS IS               GP03114
         OI    PRQFLAGS,FGOPM2+FGOPM4  SHOW MEMORY ACCESS       GP03114
         LA    R3,1(,R3)     GET REAL LENGTH                    GP03114
         L     R2,SAVEOPA2   GET THE ADDRESS                    GP03114
         N     R2,PREVMASK   MASK ACCORDING TO MODE             GP03114
         MVC   PLMODNM+1(4),=C'OP 1'                            GP03114
         L     R4,MAXHEXLN   DUMP MAX OF ONE PAGE               GP03114
         BASCALL DUMPLINE                                       GP03114
         CLI   XCELL,X'D2'   MVC?                               GP03114
         BE    FRM&FPX       YES; DO ONLY FIRST OPERAND         GP03114
         CLI   XCELL,X'D7'   XC ?                               GP12297
         BNE   LONG8TWO        NO                               GP12297
         CLC   XCELL+2(2),XCELL+2   XC A,A ?                    GP12297
         BE    FRM&FPX       YES; DO ONLY FIRST OPERAND         GP12297
LONG8TWO SR    R3,R3                                            GP03114
         IC    R3,XCELL+1    SS LEN                             GP03114
         LA    R3,1(,R3)     GET REAL LENGTH                    GP03114
         L     R2,SAVEOPA4   GET THE ADDRESS                    GP03114
         N     R2,PREVMASK   MASK ACCORDING TO MODE             GP03114
         MVC   PLMODNM+1(4),=C'OP 2'                            GP03114
         L     R4,MAXHEXLN   DUMP MAX OF ONE PAGE               GP03114
         BASCALL DUMPLINE                                       GP03114
         SPACE 1                                                GP03114
       FORMDO RPDATA
         L     R3,PREVIC     GET INSTRUCTION ADDRESS
         ICM   R0,15,4(R3)   GET FIRST OFFSET WORD
         BAS   R9,HEX2EBC    CONVERT
         MVC   0(4,R7),HEXEDOUT    ZERO
         MVC   5(4,R7),HEXEDOUT+7  PSW OFFSET
         ICM   R0,15,8(R3)   GET FIRST OFFSET WORD
         BAS   R9,HEX2EBC    CONVERT
         MVC   10(4,R7),HEXEDOUT    ZERO
         MVC   15(4,R7),HEXEDOUT+7  PSW OFFSET
         LA    R7,16(,R7)
         SPACE 1
       FORMDO LEN131         SRST INSTRUCTION
         IC    R2,XCELL+1    RR
         LR    R3,R2
         N     R2,OOOOOOOF   R2
         SLL   R2,2          R*4
         L     R2,PREVREG(R2)
         N     R3,OOOOOOFO   R0
         SRL   R3,2          R*4
         L     R3,PREVREG(R3)   GET THE ADDRESS
         SR    R3,R2
         BNP   FRM&FPX       HUH?
         BASCALL STACK       PRINT THE LINE AS IS
         L     R4,MAXHEXLN
         MVC   PLMODNM+1(4),=C'OP 2'
         BASCALL DUMPLINE
         SPACE 1
       FORMDO STR1           FORMAT STRING DATA FROM R1
         IC    R3,XCELL+1    RR
         N     R3,OOOOOOFO   R0
         SRL   R3,2          R*4
         L     R3,PREVREG(R3)   GET THE ADDRESS
         N     R3,PREVMASK   SET MODE
         BZ    FRM&FPX       SKIP IF ZERO
         BASCALL STACK       PRINT THE LINE AS IS
         MVC   PLMODNM+1(4),=C'OP 1'
         BAS   R14,PUTSTR0   COMPUTE STRING LENGTH AND DISPLAY
         SPACE 1
       FORMDO STR2           FORMAT STRING DATA FROM BD2
         ICM   R3,15,SAVEOPA2  GET OPERAND 2 ADDRESS
         BZ    FRM&FPX       SKIP IF ZERO
         BASCALL STACK       PRINT THE LINE AS IS
         MVC   PLMODNM+1(4),=C'OP 2'
         BAS   R14,PUTSTR0   COMPUTE STRING LENGTH AND DISPLAY
         SPACE 1
       FORMDO STR3           FORMAT STRING DATA FROM R3
         IC    R3,XCELL+1    RR
         N     R3,OOOOOOOF   R0
         SLL   R3,2          R*4
         L     R3,PREVREG(R3)   GET THE ADDRESS
         N     R3,PREVMASK   SET MODE
         BZ    FRM&FPX       SKIP IF ZERO
         BASCALL STACK       PRINT THE LINE AS IS
         MVC   PLMODNM+1(4),=C'OP 3'
         BAS   R14,PUTSTR0   COMPUTE STRING LENGTH AND DISPLAY
         SPACE 1                                                GP99057
       FORMDO SVCNAME        FORMAT AN SVC NAME                 GP99057
         PUSH  USING                                            GP99057
         LM    R1,R3,=A(SVCNAMES,SVCNAME-SVCID,SVCLAST)         GP99057
         USING SVCDSECT,R1           DEFINE BASE                GP99057
LOOPSVC  CLC   SVCID,XCELL+1         SVC NUMBER LOCATED?        GP99057
         BE    FOUNDSVC              YES                        GP99057
         IC    R2,SVCLEN     GET TEXT LENGTH                    GP99057
         LA    R2,SVCNAME-SVCID+1(,R2)   PLUS OVERHEAD + 1      GP99057
         BXLE  R1,R2,LOOPSVC  TRY NEXT                          GP99057
         B     FRM&FPX       NOT FOUND; LEAVE IT BLANK          GP99057
         SPACE 1                                                GP99057
FOUNDSVC IC    R2,SVCLEN     GET COMMENT LENGTH - 1             GP99057
         EX    R2,EXMVSVC    MOVE SVC NAME                      GP99057
         CLI   XCELL+1,6     XCTL, ETC                          GP03327
         BL    FRM&FPX       NO                                 GP03327
         CLI   XCELL+1,9     THROUGH DELETE?                    GP03327
         BH    FRM&FPX       NO                                 GP03327
         L     R2,PREVREG    GET CURRENT R0                     GP03325
         N     R2,PREVMASK   KILL UNWANTED BITS                 GP04070
         MVC   PLFORM-10(8),0(R2)  SHOW LOAD NAME               GP03325
         B     FRM&FPX                                          GP99057
EXMVSVC  MVC   PLFORM(0),SVCNAME   EXECUTED SVC NAME MOVE       GP99057
         POP   USING                                            GP99057
         SPACE 1                                                GP97342
FRM&FPX  DS    0H            END OF FORMATTING                  GP97339
PRTDATAX BASRET TYPE=BSM     RETURN TO CALLER                   GP97342
         SPACE 2                                                GP97342
*   COMMON FORMATTING SUBROUTINES; CALLED ON R14, USE R9, 0-2   GP97342
*                                                               GP97342
PUTGR    LA    R2,NEXTREG    POINT TO NEW REGISTERS             GP98087
         SR    R0,R0         CLEAR UNWANTED OFFSET              GP00169
         B     PUTGRR                                           GP00169
*                                                               GP97342
PUTR1    IC    R1,XCELL+1    RR                                 GP97342
         N     R1,OOOOOOFO   R0                                 GP97342
PUTGRR   STC   R1,SAVEOPA1+4   SAVE (B)000 FORM                 GP97352
         STC   R1,SAVEOPA1+6   SAVE (B)000 FORM                 GP97352
         SRL   R1,2          R*4                                GP97342
         AR    R1,R0         OPTIONAL + 1                       GP97342
         L     R0,0(R1,R2)   GET THE VALUE OF THE REGISTER      GP97342
         LR    R1,R0         COPY                               GP97342
         N     R1,NEXTMASK-NEXTREG(,R2)  MASK ACCORDING TO MODE GP97342
         ST    R1,SAVEOPA1   SAVE FOR LATER                     GP97342
         OI    PRQFLAGS,FGOPA1  ADDRESS SAVED                   GP97346
PUTF1    BAS   R9,HEX2EBC    CONVERT VALUE FOR PRINTING         GP97342
         MVC   0(8,R7),HEXEDOUT  PLACE IN PRINT LINE            GP97342
         LA    R7,PLFORM2-PLFORM(,R7) SKIP ONE FIELD            GP97342
         BR    R14           RETURN TO CALLER                   GP97342
         SPACE 2                                                GP97342
PUTR3    IC    R1,XCELL+1    RR                                 GP97342
         N     R1,OOOOOOOF   0R                                 GP97342
         SLL   R1,2          R*4                                GP97342
         OR    R1,R0         OPTIONAL + 1                       GP97342
         L     R0,0(R1,R2)   GET THE VALUE OF THE REGISTER      GP97342
         SLL   R1,2          R*16                               GP97352
         STC   R1,SAVEOPA3+4   SAVE (B)000 FORM                 GP97352
         STC   R1,SAVEOPA3+6   SAVE (B)000 FORM                 GP97352
         LR    R1,R0         COPY                               GP97342
         N     R1,NEXTMASK-NEXTREG(,R2)  MASK ACCORDING TO MODE GP97342
         ST    R1,SAVEOPA3   SAVE FOR LATER                     GP97342
         OI    PRQFLAGS,FGOPA3  ADDRESS SAVED                   GP97346
PUTF3    BAS   R9,HEX2EBC    CONVERT VALUE FOR PRINTING         GP97342
         MVC   0(8,R7),HEXEDOUT  PLACE IN PRINT LINE            GP97342
         LA    R7,PLFORM2-PLFORM(,R7) SKIP ONE FIELD            GP97342
         BR    R14           RETURN TO CALLER                   GP97342
         SPACE 1
*   DETERMINE LENGTH OF STRING OPERAND AND FORMAT
*
PUTSTR0  IC    R0,PREVREG+3  GET R0 LOW POSITION
PUTSTR   L     R2,=A(TRTSTRNG)
         XC    0(256,R2),0(R2)  CLEAR IT
         LA    R15,255
         NR    R15,R0        GET PASSED STOP CHARACTER
         AR    R15,R2        TABLE ADDRESS OF STOP
         MVI   0(R15),4      SET SCAN STOPPER
         LA    R0,256
         LR    R15,R3        SET START
PUTSTRT  TRT   0(256,R15),0(R2)
         BNZ   PUTSTRND
         AR    R4,R0         UPDATE STRING LENGTH
         AR    R15,R0        UPDATE SCAN START
         B     PUTSTRT
PUTSTRND SR    R1,R3         GET LENGTH OF STRING
         LA    R1,1(,R1)     INCLUDE STOP CHARACTER
         LR    R2,R3         COPY STRING START
         LR    R3,R1         COPY STRING LENGTH
         L     R4,MAXHEXLN   BUT LIMIT
         BASCALL DUMPLINE    DUMP IT
         BR    R14           RETURN TO CALLER
         SPACE 1                                                GP97339
*   FORMAT DATA FOR DISPLAY; ADDRESS IN R1; FOR SS L1L2, SHIFT IN R2
*                                                               GP97342
PUTDATA  ONSPIE PUTDERR,AM31,SAVE=YES  RECOVER FROM ERROR       GP97353
         ST    R7,DB2
         TM    FLAG4,X'80'   LENGTH ENCODED IN MULTIPLE FLAGS?  GP97344
         BZ    PUTDOLEN      NO; CHECK SINGLE FLAGS             GP97344
         TM    FLAG4,FGDLR1  LENGTH IN R1?                      GP97344
         BO    PUTDR1                                           GP97344
         TM    FLAG4,FGDLR2  LENGTH IN R1+1?                    GP97344
         BO    PUTDR1O                                          GP97344
*DEFER   TM    FLAG4,FGDLR3  LENGTH IN R3?                      GP97344
*DEFER   BO    PUTDR3                                           GP97344
         TM    FLAG4,FGDLR4  LENGTH IN R3+1?                    GP97344
         BO    PUTDR3O                                          GP97344
         TM    FLAG4,FGDLM   LENGTH IN MASK NYBBLE?             GP97344
         BO    PUTDMASK                                         GP97344
         TM    FLAG4,FGDLI   LENGTH IN TWO TARGET BITS?         GP97344
         BNO   PUTDOLEN      NO; OTHER METHOD                   GP97344
PUTDINST IC    R15,0(,R1)    LOAD FIRST TARGET BYTE             GP97344
         N     R15,=X'000000C0'    RETAIN SIGNIFICANT BITS ONLY GP97344
         SRL   R15,6         RIGHT ADJUST                       GP97344
         IC    R15,DCILEN2(R15)  LEN-1 OF CORR. INSTRUCTION     GP05189
         B     PUTDATLN                                         GP97344
PUTDMASK IC    R15,XCELL+1   GET MASK BYTE                      GP97344
         N     R15,OOOOOOOF  RETAIN ONLY MASK NYBBLE            GP97344
         BZ    PUTDEXIT      NO BITS; NO DATA MOVED             GP97344
         IC    R15,DCSSINF(R15)                                 GP05189
         B     PUTDATLN      HAVE LENGTH, WILL TRAVEL           GP97344
PUTDOLEN SR    R15,R15                                          GP97342
         IC    R15,XCELL+1   GET SS LENGTH                      GP97342
         TM    FLAG4,FGDLS   SS LENGTH?                         GP97342
         BNZ   PUTDATLN      YES                                GP97342
         SRL   R15,0(R2)     SHIFT ACCORDING TO CALLER          GP97342
         N     R15,OOOOOOOF  MASK ONLY L1 OR L2                 GP97342
         TM    FLAG4,FGDLSS  SS L1L2 FORMAT?                    GP97342
         BNZ   PUTDATLN      YES; L-1 IN R15                    GP97342
         IC    R15,FLAG4     ELSE GET FLAG4                     GP97342
         N     R15,=X'0000001F'  MASK LENGTH BITS               GP97344
         BZR   R14           ERROR - NO LENGTH BITS ON          GP97342
         BCTR  R15,0         ADJUST LENGTH FOR EXECUTE          GP97342
PUTDATLN MIN   (R15),=H'15',TYPE=H   LIMIT OUTPUT               GP97347
         EX    R15,PUTDATMV  MOVE DATA TO WORK AREA             GP97342
         BCTR  R7,0                                             GP97345
         MVI   0(R7),C':'    IDENTIFY AS STORAGE                GP97345
         LA    R7,2(,R7)     SKIP OVER IT                       GP97345
         ST    R7,DB2
         LR    R4,R7         SAVE FORMATTING START              GP97347
         LA    R2,DB3        POINT TO MOVED DATA                GP01121
         LA    R3,4(,R15)    ADD TO LENGTH                      GP97347
         SRA   R3,2          NUMBER OF WORDS TO DO              GP97347
PUTDATLP L     R0,0(,R2)     GET FIRST WORD                     GP97347
         BAS   R9,HEX2EBC    MAKE PRINTABLE                     GP97342
         MVC   0(8,R4),HEXEDOUT  MOVE TO OUTPUT                 GP97342
         LA    R2,4(,R2)     NEXT INPUT WORD                    GP97347
         LA    R4,8(,R4)     NEXT OUTPUT                        GP97347
         BCT   R3,PUTDATLP   LOOP                               GP97347
         LA    R15,2(R15,R15)   GET TRUE OUT COUNT              GP97342
         LA    R1,0(R7,R15)  GET FIRST NEW BYTE                 GP97342
         MVC   0(16,R1),BLANKS  CLEAN IT OUT                    GP97342
         LA    R7,2(R15,R7)  SPACE AROUND                       GP97342
         ST    R7,DB2
PUTDR1   DS    0H              DEFER FUNNY LENGTH PROCESSING    GP97344
PUTDR1O  DS    0H              DEFER FUNNY LENGTH PROCESSING    GP97344
PUTDR3   DS    0H              DEFER FUNNY LENGTH PROCESSING    GP97344
PUTDR3O  DS    0H              DEFER FUNNY LENGTH PROCESSING    GP97344
PUTDEXSP ONSPIE REST=YES     RESTORE OLDER SPIE                 GP97353
PUTDEXIT BR    R14           RETURN                             GP97342
PUTDATMV MVC   DB3(0),0(R1)   MOVE USER DATA TO FORMATTING      GP01121
PUTDERR  ST    R7,DB2
         MVC   0(7,R7),=C'*ERROR*'                              GP97353
         LA    R7,9(,R7)                                        GP97353
         B     PUTDEXSP                                         GP97353
DCSSINF  DC    X'00000001000101020001010201020203'              GP05189
DCILEN2  DC    X'01030305'   INST. LEN - 1                      GP05189
         BASEND ,                                               GP97349
         TITLE 'P G M T R A C E  ***  OPTION PROCESSING'        GP97352
***********************************************************************
*                                                                     *
*  INITOPTS    ROUTINE TO PROCESS USER'S OPTIONS IN SYSTROPT DD       *
*    R8 IS USED GLOBALLY TO POINT TO THE CURRENT RANGE CONTROL BLOCK  *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97339
INITOPTS BASHEAD ,           SAVE REGISTERS                     GP97339
         TM    PROFLAGS,FGSYNEOF  ALREADY ALL DONE?             GP97339
         BNZ   INITOPTZ      YES; RETURN                        GP98073
*  CHECK FOR, AND INITIALIZE ADATA SUPPORT                      GP00204
         MVI   TRDFUN,1      SET NO DD                          GP00204
         DEVTYPE =CL8'SYSTRADA',DB  DO WE HAVE A DD CARD FOR IT?  00201
         TM    DB+2,X'A0'    DISK/TAPE ?                        GP00204
         BNM   INITOPTT      NO; QUIT NOW                       GP00204
         MVI   TRDFUN,2      SET NO MODULE                      GP00204
         LOAD  EP=PGMTRADA,ERRET=INITOPTT  LOOK FOR SUPPORT CODE  00204
         ST    R0,@TRADA     SAVE IT                            GP00204
         OI    @TRADA,X'80'  AM31
         LA    R1,STACKAD    POINT TO 'WRITE' ROUTINE           GP00204
         ST    R1,TRD@PRT    PASS PRINT ROUTINE ADDRESS         GP00204
         MVI   TRDFUN,0      SET STUFF STUFFED                  GP00204
INITOPTT MVI   RMSFLAGS,X'00'  PRESET FOR NO RANGE CARD         GP97356
         L     R8,=A(@RANGES) POINT TO UNBASED OPTION AREA      GP97342
         USING RNGDSECT,R8   MAP HEADERS FOR VAR/INST QUEUES    GP97342
*---------------------------------------------------------------------*
*  LOOP THROUGH SYSTROPT DD FILE FOR INPUT CONTROL CARDS              *
*---------------------------------------------------------------------*
INITOGET BASCALL GETCARD                                        GP97339
           B   INITOPTV      EOF OR NO DD OR OPEN FAILED        GP97339
         LR    R5,R1         COPY CARD ADDRESS                  GP97339
         USING CARD,R5                                          GP97339
         MVC   PLINE+10(80),CARD   MOVE INPUT TO PRINT LINE     GP97339
         MVC   CARD+72(8),BLANKS  DELETE SEQUENCE FIELDS        GP97339
         LA    R0,1          SET CONSTANT                       GP97339
         LA    R1,CARD+71    BXLE STOPPER                       GP97339
         STM   R0,R1,CARDLIM  SAVE CARD INCREMENT AND END       GP97349
         BASCALL WRITE              ECHO IT                     GP97339
         BAS   R14,NONBLANK  FIND FIRST NON-BLANK               GP97339
         CLI   CARD,C'*'     COMMENTS?                          GP97339
         BE    INITOGET      YES; JUST GET ANOTHER              GP97339
         CLI   CARD,C' '     EMPTY CARD?                        GP97339
         BE    INITOGET      YES; GET NEXT                      GP97339
         BAS   R9,GETFIELD   GET NEXT FIELD                     GP97339
           B   INITOBAD      HUH?                               GP97339
         BAS   R9,VERBLOOK   IDENTIFY REQUEST                   GP97339
           B   INITOBAD      NOT RECOGNIZED                     GP97339
         MVC   COMMAND,DB    SAVE THE CURRENT REQUEST           GP99163
         B     INITOPTS(R15)  ELSE BRANCH TO REQUEST PROCESSOR  GP97339
         SPACE 1                                                GP97339
*---------------------------------------------------------------------*
*   LOAD EPNAME - PGMTRACE: NAME OF PROGRAM TO BE TRACED        GP97339
*---------------------------------------------------------------GP97339
INITLOAD BAS   R9,GETFIELD   GET NEXT FIELD                     GP97339
           B   INITOBAD      MODULE NAME REQUIRED               GP97339
         MVC   EPNAME,DB     MOVE ENTRY NAME                    GP97339
         B     INITOGET      AND READ ANOTHER                   GP97339
         SPACE 1                                                GP00204
*---------------------------------------------------------------------*
*   PRELOAD EPNAME - LOAD A MODULE PRIOR TO PLANTING BREAK      GP00204
*---------------------------------------------------------------GP00204
INITPLOD BAS   R9,GETFIELD   GET NEXT FIELD                     GP00204
           B   INITOBAD      MODULE NAME REQUIRED               GP00204
         LOAD  EPLOC=DB,ERRET=INITOBAD                          GP00204
         B     INITOGET      AND READ ANOTHER                   GP00204
         SPACE 1                                                GP97339
*---------------------------------------------------------------------*
*  RESTRICT   TRACE ONLY SUBROUTINE CALLS, OR BRANCHES, OR SVCS GP97342
*---------------------------------------------------------------GP97342
INITREST BAS   R9,GETFIELD   ANOTHER?                           GP97342
           B   INITOGET      NO MORE                            GP97342
         CLI   DB,C'*'       COMMENTS?                          GP97342
         BE    INITOGET      YES; GET OUT                       GP97342
         LA    R1,VERBREST   LOAD TABLE                         GP97342
         BAS   R9,VERBUSER   PERFORM LOOKUP                     GP97342
           B   INITOBAD                                         GP97342
         BAS   R14,INITFLAG  SET FLAGS                          GP97349
         B     INITREST      CHECK FOR MORE                     GP97349
         SPACE 1                                                GP97349
*---------------------------------------------------------------------*
*  ABEND - SPECIFY CONDITIONS UNDER WHICH TO ABNORMALLY TERMINATE
*---------------------------------------------------------------GP97349
INITABND BAS   R9,GETFIELD   ANOTHER?                           GP97349
           B   INITOGET      NO MORE                            GP97349
         CLI   DB,C'*'       COMMENTS?                          GP97349
         BE    INITOGET      YES; GET OUT                       GP97349
         LA    R1,VERBABND   LOAD TABLE                         GP97349
         BAS   R9,VERBUSER   PERFORM LOOKUP                     GP97349
           B   INITOBAD                                         GP97349
         BAS   R14,INITFLAG  SET FLAGS                          GP97349
         B     INITABND      CHECK FOR MORE                     GP97349
         SPACE 1                                                GP97349
*---------------------------------------------------------------------*
*  PROCESS - SPECIFY CONDITIONS THAT DO NOT ABEND OR TERMINATE  GP97349
*---------------------------------------------------------------GP97349
INITPROC BAS   R9,GETFIELD   ANOTHER?                           GP97349
           B   INITOGET      NO MORE                            GP97349
         CLI   DB,C'*'       COMMENTS?                          GP97349
         BE    INITOGET      YES; GET OUT                       GP97349
         LA    R1,VERBPROC   LOAD TABLE                         GP97349
         BAS   R9,VERBUSER   PERFORM LOOKUP                     GP97349
           B   INITOBAD                                         GP97349
         BAS   R14,INITFLAG  SET FLAGS                          GP97349
         B     INITPROC      CHECK FOR MORE                     GP97349
         SPACE 1                                                GP97349
INITFLAG LA    R0,OPTFLAGS   GET FLAG BASE ADDRESS              GP97349
INITFLOG SR    R15,R15       CLEAR FOR IC                       GP97349
         IC    R15,OFOFFL@(,R1)  GET FLAG OFFSET                GP97349
         AR    R15,R0        RELOCATE                           GP00204
         NC    0(1,R15),OFOFOFF(R1)  CLEAR CONFLICTING BITS     GP97349
         OC    0(1,R15),OFOFONN(R1)  SET OPTIONS FLAG ON        GP97349
         BR    R14           RETURN TO CALLER                   GP97349
         SPACE 1                                                GP97342
VERBREST DC    A(VERTRES1,VERTRES2-VERTRES1,VERTRESN)           GP97342
VERTRES1 OPTFG BALR,TRC,0,FGTBAL                                GP97357
VERTRES2 OPTFG BRANCH,TRC,0,FGTBR                               GP97357
         OPTFG NOESTAE,TRQ,FGNOSTAE,0                           GP08278
         OPTFG NOSTAE,TRQ,FGNOSTAE,0                            GP08278
VERTRESN OPTFG SVC,TRC,0,FGTSVC                                 GP97357
         SPACE 1                                                GP97342
VERBABND DC    A(VERTABN1,VERTABN2-VERTABN1,VERTABNN)           GP97342
VERTABN1 OPTFG ILLEGAL,TRQ,FGEXILL,0                            GP97357
VERTABN2 OPTFG ILLOP,TRQ,FGEXILL,0                              GP97357
         OPTFG OPCODE,TRQ,FGEXILL,0                             GP97357
         OPTFG NOESTAE,TRQ,FGNOSTAE,0                           GP08278
         OPTFG NOSTAE,TRQ,FGNOSTAE,0                            GP08278
         OPTFG COUNT,TRQ,FGEXPREX,FGABPREX                      GP97357
VERTABNN OPTFG BCT,TRQ,0,FGABCT                                 GP97357
         SPACE 1                                                GP97342
VERBPROC DC    A(VERTPRO1,VERTPRO2-VERTPRO1,VERTPRON)           GP97342
VERTPRO1 OPTFG ILLEGAL,TRQ,0,FGEXILL                            GP97357
VERTPRO2 OPTFG ILLOP,TRQ,0,FGEXILL                              GP97357
         OPTFG OPCODE,TRQ,0,FGEXILL                             GP97357
         OPTFG COUNT,TRQ,FGABPREX,FGEXPREX                      GP97357
         OPTFG NOESTAE,TRQ,FGNOSTAE,0                           GP08278
         OPTFG NOSTAE,TRQ,FGNOSTAE,0                            GP08278
         OPTFG LPA,TRQ,0,FGLPAPRT                               GP00169
         OPTFG ALL,OPT,0,FGDOPRT  PRINT EVERYTHING              GP03115
         OPTFG PIE,OTH,0,FGPREPIE  PRINT ALL EPIE BLOCKS        GP03115
         OPTFG EPIE,OTH,0,FGPREPIE  PRINT ALL EPIE BLOCKS       GP03115
         OPTFG IOSTUBS,PRO,0,FGDOIO                             GP00029
         OPTFG STUBS,PRO,0,FGDOIO                               GP00029
         OPTFG CSECT,PRO,0,FGDOSUB                              GP00029
         OPTFG NOSECT,PRO,FGDOSUB,0    RESET CSECT OPTION       GP00204
         OPTFG SECT,PRO,0,FGDOSUB                               GP00029
         OPTFG SUBS,PRO,0,FGDOSUB                               GP00029
VERTPRON OPTFG BCT,TRQ,FGABCT,0                                 GP97357
         SPACE 1                                                GP97339
*---------------------------------------------------------------------*
*  RANGE  {NAME×ADDRESS}+OFFSET× SIZE×END                       GP97342
*    THIS ALSO DEFINES A VALID RANGE FOR SUBSEQUENT INSTRUCTION AND
*    VARIABLE TRACE REQUESTS                                    GP97342
*---------------------------------------------------------------GP97342
         PUSH  USING                                            GP97342
INITRANG LR    R6,R5         SAVE THE CURRENT ADDRESS           GP97347
         BAS   R9,GETFIELD   GET NEXT OPERAND FIELD             GP97342
           B   INITOGET                                         GP97342
         LA    R0,RNGLEN                                        GP97342
         BAS   R9,GETCELL    GET STORAGE FOR IT                 GP97342
         DROP  R8                                               GP97342
         LR    R7,R1         SAVE RESULT                        GP97342
         USING RNGDSECT,R7                                      GP97342
         LA    R4,2          SET FOR ON (AND DEFAULT) RANGE     GP97356
         CLC   =C'ON ',DB    TRACE ON XXXX ?                    GP97347
         BE    INITRONF      YES; IGNORE DEFAULT                GP97347
         LA    R4,1          SET FOR 'OFF' TYPE                 GP97356
         LA    R14,FGRABND   SET TO ABEND IN THIS RANGE         GP97351
         CLC   =C'ABEND ',DB  REQUESTED ABEND?                  GP97351
         BE    INITROSF      YES; SET FLAG                      GP97351
         LA    R14,FGRSTK    SET TO STACK IN THIS RANGE         GP97358
         CLC   =C'STACK ',DB  REQUESTED STACK?                  GP97358
         BE    INITROSF      YES; SET FLAG                      GP97358
         LA    R14,FGREXIT   SET TO EXIT TRACING?               GP97351
         CLC   =C'EXIT ',DB  YES                                GP97351
         BE    INITROSF      YES; SET FLAG                      GP97351
         LA    R14,FGROFF    ELSE SET TRACE PRINTING OFF        GP97351
         CLC   =C'OFF ',DB   TRACE OFF XXX ?                    GP97347
         BE    INITROSF      YES                                GP97347
         LA    R4,2          SET FOR ON (AND DEFAULT) RANGE     GP97356
         B     INITRNAM      NO MATCH; ASSUME WE HAVE A NAME    GP97356
INITROSF EX    R14,INITOIF2  SET FLAG 2                         GP97351
INITRONF LR    R6,R5         SAVE THE CURRENT ADDRESS           GP97347
         STC   R4,@SAVEXEC   COPY ON/OFF OPTION                 GP99111
         STC   R14,@SAVEXEC+1  SAVE OFF TYPE                    GP99111
         BAS   R9,GETFIELD   GET NAME FIELD                     GP97347
           B   INITROPT      OOPS                               GP97347
         CLI   DB,C'*'       COMMENT?                           GP99111
         BE    INITROPT      YES; SET ON/OFF ONLY               GP99111
INITRNAM CLC   =C'LPA ',DB   REQUEST FOR LPA TRACING?           GP99058
         BNE   INITRNLP                                         GP99058
         OI    TRQFLAGS,FGLPAPRT  SET LPA PRINT                 GP99058
         CH    R4,=H'3'      IS IT "OFF" REQUEST?               GP99058
         BNE   INITOGET      NO; GET NEXT CARD                  GP99058
         NI    TRQFLAGS,255-FGLPAPRT  RESET LPA PRINT           GP99058
         B     INITOGET      GET NEXT CARD                      GP99058
INITRNLP CLI   RMSFLAGS,0    FIRST OCCURRENCE?                  GP99058
         BNE   INITRNAN                                         GP99058
         STC   R4,RMSFLAGS   SET RANGE TYPE FLAGS               GP99058
INITRNAN MVC   RNGNAME,DB    SAVE POSSIBLE PROGRAM NAME         GP97342
         L     R14,=A(TRTMASK)                                  GP12309
         TRT   RNGNAME,0(R14)     ANY MASK CHARACTERS?          GP12309
         BZ    *+4+4                NO                          GP12309
         OI    RNGFLAG1,FGRPMASK  INDICATE IT'S A MASK          GP12309
         CLC   =C'! ',DB     REQUEST FOR INVOKING MODULE ?      GP08251
         BNE   INITRTHS      NO                                 GP08251
         L     R14,PSATOLD-PSA  GET MY TCB BACK                 GP08251
         PUSH  USING                                            GP08251
         USING TCB,R14                                          GP08251
         LA    R15,TCBRBP+1                                     GP08251
         ICM   R15,8,=X'0'    CLEAR HIGH BYTE (MAY BE AMODE 31) GP08251
         SH    R15,=Y(RBLINKB-RBSECT)  FAKE LINKAGE OFFSET      GP08251
         USING RBSECT,R15                                       GP08251
INITRTHL ICM   R15,7,RBLINKB  GET AN RB                         GP08251
         BZ    INITRTHS      NONE?  HUH ??                      GP08251
         TM    RBSTAB1,RBFTP   WHAT RB TYPE ?                   GP08251
         BNZ   INITRTHB      NOT PRB; BUMP                      GP08251
         ICM   R14,7,RBCDE1  CHECK FOR CDE                      GP08251
         BZ    INITRTHB      NONE; BUMP                         GP08251
         USING CDENTRY,R14                                      GP08251
         MVC   RNGNAME,CDNAME  COPY PROGRAM/ALIAS NAME          GP08251
         MVC   PLINE+12(11),=C'RESOLVED TO'                     GP08251
         MVC   PLINE+24(8),CDNAME                               GP08251
         BASCALL WRITE                                          GP08251
         B     INITRTHS                                         GP08251
INITRTHB TM    RBSTAB2,RBTCBNXT  ANOTHER RB ?                   GP08251
         BZ    INITRTHL      YES; TRY IT                        GP08251
         POP   USING                                            GP08251
         SPACE 1
INITRTHS LR    R5,R6         RESTORE POINTER PRIOR TO NAME      GP97349
         BAS   R9,GETNUMFD   EVALUATE IT AS A NUMERIC           GP97349
           B   INITRANE      NO                                 GP97349
         BAS   R9,EBC2HEX    CHECK FOR HEX INPUT                GP97342
           B   INITRANE      NON-HEX - MODULE NAME              GP97342
         ST    R0,RNGADDR                                       GP97342
         MVC   RNGNAME,BLANKS  CLEAR MODULE NAME AGAIN          GP97342
         OI    RNGFLAG1,FGRVALID  FLAG RESOLVED START ADDRESS   GP97342
         B     INITRANM                                         GP99058
INITRANE CLI   RMSFLAGS,2    ON REQUEST?                        GP99058
         BNE   INITRANM      NO                                 GP99058
         CLI   EPNAME,C' '   HAS MODULE NAME BEEN SPECIFIED?    GP99058
         BH    INITRANM      YES                                GP99058
         MVC   EPNAME,RNGNAME  ELSE USE THIS NAME TO START      GP99058
INITRANM SR    R1,R1         ZERO BASE                          GP99163
         CLI   CARD,C'+'     OFFSET?                            GP97342
         BNE   INITRANO      NO                                 GP99161
         LA    R5,CARD+1     SKIP SEPARATOR                     GP97349
         BAS   R9,GETNUMFD   GET OFFSET                         GP97342
           B   INITFBAD        + WITHOUT OPERAND                GP97342
         BAS   R9,EBC2HEX    CONVERT                            GP97342
           B   INITFBAD                                         GP97342
         LR    R1,R0         SAVE FOR END OFFSET                GP99161
         A     R0,RNGADDR                                       GP97342
         ST    R0,RNGADDR    UPDATE START ADDRESS               GP97342
INITRANO CLI   CARD,C':'     REQUEST FOR END OFFSET?            GP97349
         BNE   INITRANS      NO                                 GP99161
         ST    R1,RNGSIZE    SAVE                               GP99161
         LA    R5,CARD+1     SKIP DEFINER                       GP99161
         BAS   R9,GETNUMFD   ANOTHER ?                          GP97342
           B   INITRANQ      NO SIZE; JUST QUEUE                GP97342
         BAS   R9,EBC2HEX    CONVERT TO HEX                     GP97342
           B   INITFBAD      TOO BAD                            GP97342
         S     R0,RNGSIZE    GET SIZE (END - START OFFSET)      GP99161
         BNP   INITFBAD      TOO BAD                            GP99161
         ST    R0,RNGSIZE    SET END ADDRESS/SIZE               GP97342
         B     INITRANQ      STASH IT                           GP99161
INITRANS BAS   R9,GETNUMFD   ANOTHER ?                          GP97342
           B   INITRANQ      NO SIZE; JUST QUEUE                GP97342
         BAS   R9,EBC2HEX    CONVERT TO HEX                     GP97342
           B   INITFBAD      TOO BAD                            GP97342
         ST    R0,RNGSIZE    SET END ADDRESS/SIZE               GP97342
         POP   USING         RESME R8 MAPPING                   GP97342
INITRANQ CLI   COMMAND,C'B'  WAS THIS A BEGIN REQUEST?          GP99163
         BNE   INITRANR      NO                                 GP99163
         ST    R7,@BEGIN     SAVE IT                            GP99163
         B     INITOGET                                         GP99163
INITRANR ST    R7,RNGLINK    LINK TO CHAIN                      GP97342
         LR    R8,R7         MAKE IT THE CONTROLLING ENTRY      GP97342
         OI    TRQFLAGS,FGTRNG  SHOW RANGE REQUEST FOUND        GP97349
         B     INITOGET      GO FOR ANOTHER CARD                GP97342
INITOIF2 OI    RNGFLAG2-RNGDSECT(R7),0-0  SET RANGE OPTION FLAG GP97351
INITROPT CLI   @SAVEXEC,2    IS IT ON?                          GP99110
         BE    INITROP1      YES; IGNORE                        GP99110
         CLI   @SAVEXEC+1,FGROFF   TRACE OFF - NO NAME?         GP99110
         BNE   INITFBAD      NO; FAIL                           GP99110
INITROP1 CLI   RMSFLAGS,0    FIRST TRACE CARD?                  GP99111
         BNE   INITOGET      NO                                 GP99111
         MVC   RMSFLAGS,@SAVEXEC   REMEMBER FIRST ONE           GP99111
         XI    RMSFLAGS,3    EXCHANGE ON AND OFF                GP99111
         B     INITOGET      AND LOOK FOR ANOTHER CARD          GP99110
         SPACE 1                                                GP97339
*---------------------------------------------------------------------*
*  STACK  0HEX×SIZE                                             GP97342
*    NUMBER OF UNPRINTED ENTRIES SAVED FOR TERMINATION/ERROR    GP97347
*---------------------------------------------------------------GP97342
INITSTAK BAS   R9,GETNUMFD   GET NEXT OPERAND FIELD             GP97342
           B   INITOBAD                                         GP97342
         BAS   R9,EBC2INT    CONVERT TO BINARY                  GP97347
           B   INITOBAD                                         GP97347
         LTR   R0,R0         LESS THAN MINIMUM?                 GP97347
         BNM   INITSTAX      ALLOW ZERO FOR STACK SUPPRESSION   GP97347
         LA    R0,2          NO ERROR SIGNALLED                 GP97347
INITSTAX ST    R0,@STACKND   TEMP SAVE UNTIL ALLOCATION         GP97347
         B     INITOGET      AND GET ANOTHER CARD               GP97347
         SPACE 1                                                GP97339
*---------------------------------------------------------------------*
*  MAXDUMP×MAXLONG  0SIZE×LEN  (DEFAULT DUMP SIZE IS 4096)      GP00204
*    NUMBER OF BYTES PROCESSED BY DUMPLINE REQUEST              GP00204
*---------------------------------------------------------------GP00204
INITHEXL BAS   R9,GETNUMFD   GET NEXT OPERAND FIELD             GP00204
           B   INITOBAD                                         GP00204
         BAS   R9,EBC2INT    CONVERT TO BINARY                  GP00204
           B   INITOBAD                                         GP00204
         LTR   R0,R0         LESS THAN MINIMUM?                 GP00204
         BNM   INITHEXX      ALLOW ZERO FOR STACK SUPPRESSION   GP00204
         L     R0,=F'4096'   NO ERROR SIGNALLED                 GP00204
INITHEXX ST    R0,MAXHEXLN   SAVE                               GP00204
         B     INITOGET      AND GET ANOTHER CARD               GP00204
         SPACE 1                                                GP97347
*---------------------------------------------------------------------*
*  COUNT  0HEX×SIZE                                             GP97347
*    NUMBER OF INSTRUCTIONS TO BE PRINTED                       GP97347
*---------------------------------------------------------------GP97347
INITCNTR BAS   R9,GETNUMFD   GET NEXT OPERAND FIELD             GP97347
           B   INITOBAD                                         GP97347
         BAS   R9,EBC2INT    CONVERT TO BINARY                  GP97347
           B   INITOBAD                                         GP97347
         ST    R0,MAXPRTLN   SET PRINT MAXIMUM (MAY BE ZERO)    GP97347
         B     INITOGET      AND GET ANOTHER CARD               GP97347
         SPACE 1                                                GP97349
*---------------------------------------------------------------------*
*  VARIABLE NAME ADDRESS+OFFSET LENGTH  >×<×=×\×CHA×REF INIT=   GP97349
*    TRACE VARIABLE ACCESS                                      GP97349
*---------------------------------------------------------------GP97349
         PUSH  USING                                            GP97349
INITVARL LR    R6,R5         SAVE THE CURRENT ADDRESS           GP97349
         BAS   R9,GETFIELD   GET VARIABLE NAME (COULD BE ADDRESS)
           B   INITOBAD                                         GP97349
         L     R7,=A(PATVAR) POINT TO WORK AREA                 GP97349
         USING VARDSECT,R7   DECLARE IT                         GP97349
         XC    VARDSECT(VARLEN),VARDSECT CLEAR IT               GP97349
         MVC   VARNAME,DB    USE IT AS A NAME                   GP97349
         LR    R5,R6         BACK UP                            GP97349
         BAS   R9,GETNUMFD   TRY IT AS A NUMERIC FIELD          GP97349
           B   INITVANM      NO; COULD BE MODULE                GP97349
         CLI   DB2+2,C'('    (B)DDD FORM?                       GP97356
         BE    INITVAMD      YES; PROCESS AS SUCH               GP97356
         SPACE 1                                                GP97349
INITVANM LR    R6,R5         SAVE THE CURRENT ADDRESS           GP99097
         BAS   R9,GETNUMFD   TRY IT AS A NUMERIC FIELD          GP97349
           B   INITVAMD      NO; COULD BE MODULE                GP97349
         BAS   R9,EBC2HEX    VALID HEX?                         GP97349
           B   INITVAMD      NO; TRY MODULE NAME+OFFSET         GP97349
INITVAVA ST    R0,VARADDR    SAVE ADDRESS                       GP97349
         OI    VARFLAG1,FGVVALID  SET ADDRESS RESOLVED          GP97349
         B     INITVAHA                                         GP97349
         SPACE 1                                                GP97356
INITVAMD CLI   DB2+2,C'('    POSSIBLE (B)DDD ?                  GP97356
         BNE   INITVAMH                                         GP97356
         CLI   DB2+4,C')'                                       GP97356
         BNE   INITVAMH                                         GP97356
         ICM   R0,15,DB2     LOAD PRESUMED 00(B                 GP97356
         STC   R0,DB2+4      MAKE BDDD                          GP97356
         STCM  R0,12,DB2+2   MAKE 0000 IN HIGH WORD             GP97356
         STCM  R0,8,DB+7     SET FORCED HEX                     GP97356
         CLC   DB2-1(4),DB2  REALLY ALL 0?                      GP97356
         BNE   INITVAMH                                         GP97356
         BAS   R9,EBC2HEX    IS IT HEX?                         GP97356
           B   INITVAMH      NO                                 GP97356
         STH   R0,VARSAD     SAVE BASE/DISPLACEMENT REQUEST     GP97356
         STH   R0,VARBDO     COPY                               GP97357
         NI    VARBDO,X'0F'  KILL BASE AND LEAVE OFFSET ONLY    GP97357
         OI    VARFLAG1,FGVSAD+FGVVALID  INDICATE BDDD FORM     GP97357
         B     INITVAHA      LOOK FOR (ERRONEOUS) OFFSET        GP97356
         SPACE 1                                                GP97356
INITVAMH LR    R5,R6         BACK UP                            GP97349
         BAS   R9,GETFIELD   TREAT AS MODULE NAME               GP97349
           B   INITOBAD                                         GP97349
         CLI   CARD,C'+'     MUST HAVE OFFSET                   GP97349
         BNE   INITOBAD      OOPS                               GP97349
         MVC   VARMOD,DB     SAVE IT AS MODULE NAME (TO BE RESOLVED)
INITVAHA CLI   CARD,C'+'     OFFSET?                            GP97349
         BNE   INITVASI      NO                                 GP97349
         LA    R5,CARD+1     SKIP OVER IT                       GP97349
         BAS   R9,GETNUMFD                                      GP97349
           B   INITOBAD                                         GP97349
         BAS   R9,EBC2INT    OFFSET MAY BE INTEGER OR HEX?      GP97349
           B   INITOBAD                                         GP97349
         A     R0,VARADDR                                       GP97349
         ST    R0,VARADDR    PROCESS OFFSET                     GP97349
INITVASI CLI   RMSFLAGS,0    TRACE ON/OFF SET YET?              GP99111
         BNE   INITVASJ      YES                                GP99111
         MVI   RMSFLAGS,2    SET FOR TRACE OFF                  GP99111
INITVASJ BAS   R9,GETNUMFD                                      GP97349
           B   INITOBAD                                         GP97349
         BAS   R9,EBC2INT    LENGTH MAY BE INTEGER OR HEX?      GP97349
           B   INITOBAD                                         GP97349
         LTR   R0,R0                                            GP97349
         BNP   INITOBAD      TOO BAD                            GP97349
         ST    R0,VARSIZE    VARIABLE LENGTH                    GP97349
INITVAFG BAS   R9,GETFIELD   ANOTHER FIELD?                     GP97349
           B   INITVARG      NO                                 GP97349
         CLI   DB,C'*'       COMMENTS?                          GP97349
         BE    INITVARG      YES; GET OUT                       GP97349
         LA    R1,VERBVART   LOAD TABLE                         GP97349
         BAS   R9,VERBUSER   PERFORM LOOKUP                     GP97349
           B   INITOBAD                                         GP97349
         LA    R0,VARTYPE    GET FLAG BASE ADDRESS              GP00204
         BAS   R14,INITFLOG  APPLY OPTION BITS                  GP00204
         B     INITVAFG      LOOK FOR MORE                      GP97349
         SPACE 1                                                GP97349
INITVARG LA    R0,VARLEN                                        GP97349
         A     R0,VARSIZE    ADD VARIABLE LENGTH                GP97349
         BAS   R9,GETCELL    GET STORAGE FOR IT                 GP97349
         CLI   VARTYPE,0     ANY FLAGS REQUESTED ?              GP97349
         BNE   *+8           YES; HONOR THEM                    GP97349
         OI    VARTYPE,FGVREF  ELSE TRACE REFERENCES ONLY       GP97349
         MVC   0(VARLEN,R1),VARDSECT MOVE FROM WORK AREA        GP97349
         LA    R7,RNGVARS    POINT TO GLOBAL OR SPECIFIC VARIABLE CHAIN
INITVARN ICM   R15,15,VARLINK   NEXT ENTRY?                     GP97349
         BZ    INITVARP                                         GP97349
         LR    R7,R15        TRY AGAIN                          GP97349
         B     INITVARN                                         GP97349
INITVARP ST    R1,VARLINK    LINK IT IN                         GP97349
         OI    TRCFLAGS,FGTVAR  SHOW VARIABLE TRACE REQUEST     GP97357
         B     INITOGET      GET ANOTHER                        GP97349
         SPACE 1                                                GP97349
VERBVART DC    A(VERTVAR1,VERTVAR2-VERTVAR1,VERTVARN)           GP97349
VERTVAR1 OPTFG EQUAL,VARTYPE-VARTYPE,0,FGVEQU,FLAG=             GP97357
VERTVAR2 OPTFG '=',VARTYPE-VARTYPE,0,FGVEQU,FLAG=,MIN=1         GP97357
         OPTFG '\=',VARTYPE-VARTYPE,0,FGVLOW+FGVHIGH,FLAG=,MIN=2  97357
         OPTFG '^=',VARTYPE-VARTYPE,0,FGVLOW+FGVHIGH,FLAG=,MIN=2  97357
         OPTFG '<>',VARTYPE-VARTYPE,0,FGVLOW+FGVHIGH,FLAG=,MIN=2  97357
         OPTFG LOW,VARTYPE-VARTYPE,0,FGVLOW,FLAG=               GP97357
         OPTFG '<',VARTYPE-VARTYPE,0,FGVLOW,FLAG=,MIN=1         GP97357
         OPTFG HIGHER,VARTYPE-VARTYPE,0,FGVHIGH,FLAG=           GP97357
         OPTFG '>',VARTYPE-VARTYPE,0,FGVHIGH,FLAG=,MIN=1        GP97357
         OPTFG UNEQUAL,VARTYPE-VARTYPE,0,FGVLOW+FGVHIGH,FLAG=   GP97357
*DEFER*  OPTFG SVC,VARFLAG1-VARTYPE,0,FGVPGMEV,FLAG=            GP97357
*DEFER*  OPTFG BASED,VARFLAG1-VARTYPE,0,FGVSADEV,FLAG=          GP97357
         OPTFG ONCE,VARFLAG1-VARTYPE,0,FGVSADON,FLAG=           GP97357
         OPTFG REFERENC,VARTYPE-VARTYPE,0,FGVREF,FLAG=          GP97357
         OPTFG REFERRED,VARTYPE-VARTYPE,0,FGVREF,FLAG=          GP97357
         OPTFG KEEP,VARTYPE-VARTYPE,0,FGVKEEP,FLAG=             GP99097
         OPTFG CHGD,VARTYPE-VARTYPE,0,FGVCHG,FLAG=              GP97357
VERTVARN OPTFG CHANGED,VARTYPE-VARTYPE,0,FGVCHG,FLAG=           GP97357
         POP   USING                                            GP97351
         SPACE 1                                                GP97351
         PUSH  USING                                            GP00204
*---------------------------------------------------------------------*
*   SOURCE OFF × ESD × NOESD × DEBUG × MAC × NOMAC × COPY × NOCOPY
*     FLAG BITS SET IN TRD FLAGS (SEE #TRC MACRO EXPANSION)     GP00204
*---------------------------------------------------------------GP00204
INITSRC  BAS   R9,GETFIELD   ANOTHER?                           GP00204
           B   INITSRCP      NO MORE                            GP00204
         CLI   DB,C'*'       COMMENTS?                          GP00204
         BE    INITSRCP      YES; GET OUT                       GP00204
         LA    R1,VERBSRC    LOAD TABLE                         GP00204
         BAS   R9,VERBUSER   PERFORM LOOKUP                     GP00204
           B   INITOBAD                                         GP00204
         LA    R0,TRDFUN     GET FLAG BASE ADDRESS              GP00204
         BAS   R14,INITFLOG  SET FLAGS                          GP00204
         B     INITSRC       CHECK FOR MORE                     GP00204
         SPACE 1                                                GP00204
INITSRCP CLI   TRDFUN,0      WILL BE PROCESS SOURCE?            GP00204
         BE    INITOGET      YES; GET ANOTHER                   GP00204
         SR    R1,R1                                            GP00204
         IC    R1,TRDFUN                                        GP00204
         MH    R1,=Y(SRCMSG2-SRCMSG1)                           GP00204
         LA    R1,SRCMSG1(R1)  GET MESSAGE                      GP00204
         MVC   PLINE(L'SRCMSG0),SRCMSG0                         GP00204
         MVC   PLINE+1+L'SRCMSG0(L'SRCMSG1),0(R1)               GP00204
         MVC   PLINE+1+L'SRCMSG0+L'SRCMSG1+1(5),SRCMSG0         GP00204
         BASCALL WRITE                                          GP00204
         B     INITOGET      NOTE - SOURCE PROBLEM NOT AN ERROR (?)
         SPACE 1                                                GP00204
SRCMSG0  DC    C'***** SOURCE IGNORED -'                        GP00204
SRCMSG1  DC    CL25'SYSTRADA DD UNUSABLE'                       GP00204
SRCMSG2  DC    CL25'MODULE PGMTRADA NOT FOUND'                  GP00204
SRCMSG3  DC    CL25'BY USER REQUEST'                            GP00204
         SPACE 1                                                GP00204
VERBSRC  DC    A(VERBSRC1,VERBSRC2-VERBSRC1,VERBSRCX)           GP00204
VERBSRC1 OPTFG ESD,TRDFLG1,0,CFESD,FLAG=-TRDFUN                 GP00204
VERBSRC2 OPTFG CESD,TRDFLG1,0,CFESD,FLAG=-TRDFUN                GP00204
         OPTFG NOCESD,TRDFLG1,CFESD,0,FLAG=-TRDFUN              GP00204
         OPTFG NOESD,TRDFLG1,CFESD,0,FLAG=-TRDFUN               GP00204
         OPTFG MACRO,TRDFLG3,0,CFMAC,FLAG=-TRDFUN               GP00204
         OPTFG NOMACRO,TRDFLG3,CFMAC,0,FLAG=-TRDFUN             GP00204
         OPTFG IMACRO,TRDFLG3,0,CFIMAC,FLAG=-TRDFUN             GP00204
         OPTFG NOIMACRO,TRDFLG3,CFIMAC,0,FLAG=-TRDFUN           GP00204
         OPTFG COMMENTS,TRDFLG3,0,CFCMT,FLAG=-TRDFUN            GP00204
         OPTFG NOCOMMENTS,TRDFLG3,CFCMT,0,FLAG=-TRDFUN          GP00204
         OPTFG ASM,TRDFLG3,0,CFASM,FLAG=-TRDFUN                 GP00204
         OPTFG NOASM,TRDFLG3,CFASM,0,FLAG=-TRDFUN               GP00204
         OPTFG PSEUDO,TRDFLG3,0,CFASM,FLAG=-TRDFUN              GP00204
         OPTFG NOPSEUDO,TRDFLG3,CFASM,0,FLAG=-TRDFUN            GP00204
         OPTFG DEBUG,TRDFLG2,0,CFBUG,FLAG=-TRDFUN               GP00204
         OPTFG DUMP,TRDFLG2,0,CFBUG,FLAG=-TRDFUN                GP00204
         OPTFG NODEBUG,TRDFLG2,CFBUG,0,FLAG=-TRDFUN             GP00204
         OPTFG NODUMP,TRDFLG2,CFBUG,0,FLAG=-TRDFUN              GP00204
VERBSRCX OPTFG OFF,TRDFUN,0,3,FLAG=-TRDFUN **DISABLE SOURCE**   GP00204
         SPACE 1                                                GP00204
         POP   USING                                            GP00204
         SPACE 1                                                GP97351
*---------------------------------------------------------------------*
*  INSTR CODEMASK - TRACE INSTRUCTIONS, USING ? AS NON-MASK     GP97351
*    TRACE VARIABLE ACCESS                                      GP97351
*---------------------------------------------------------------GP97351
         PUSH  USING                                            GP97351
INITINST BAS   R9,GETFIELD   GET VARIABLE NAME (COULD BE ADDRESS)
           B   INITOBAD                                         GP97351
         L     R7,=A(PATINS) POINT TO WORK AREA                 GP97351
         USING INSDSECT,R7   DECLARE IT                         GP97351
         XC    INSDSECT(INSLEN),INSDSECT CLEAR IT               GP97351
         LA    R6,DB         POINT TO FIRST BYTE                GP97351
         LA    R4,L'DB       NUMBER TO CHECK                    GP97351
         L     R15,=A(TRTHEXVL)  POINT TO HEX VALIDITY TABLE    GP97351
INITINSL TRT   0(1,R6),0(R15)  VALID HEX DIGIT?                 GP97351
         BZ    INITINSV      YES                                GP97351
         CLI   0(R6),C'?'    WILD CARD?                         GP97351
         BE    INITINSW      YES; FAKE IT OUT                   GP97351
         CLI   0(R6),C'*'    WILD CARD?                         GP11350
         BE    INITINSW      YES; FAKE IT OUT                   GP11350
         CLI   0(R6),C'-'    ALTERNATIVE WILD CARD?             GP97351
         BNE   INITINSE      NO                                 GP97351
INITINSW MVI   0(R6),0       SET ZERO DATUM                     GP97351
         MVI   8(R6),0       MAKE ZERO MASK BYTE                GP97351
         B     INITINSB      BUMP TO NEXT                       GP97351
INITINSE CLI   0(R6),C' '    END OF OPERAND?                    GP97351
         BNE   INITOBAD      NO; ERROR                          GP97351
         B     INITINSK                                         GP97351
INITINSV TR    0(1,R6),TRTHEXDT-TRTHEXVL(R15)  CONVERT FOR PACKING
         MVI   8(R6),X'0F'   MAKE MASK                          GP97351
INITINSB LA    R6,1(,R6)     NEXT BYTE                          GP97351
         BCT   R4,INITINSL   TRY ANOTHER                        GP97351
INITINSK PACK  INSVAL(4),DB(7)  PACK VALUE WITH ONE EXTRA       GP97351
         PACK  DB(4),DB2(7) PACK MASK                           GP97351
         MVC   INSMASK,DB    SAVE IT                            GP97351
         LA    R0,INSLEN                                        GP97351
         BAS   R9,GETCELL    GET STORAGE FOR IT                 GP97351
         MVC   0(INSLEN,R1),INSDSECT MOVE FROM WORK AREA        GP97351
         LA    R7,RNGINST    POINT TO GLOBAL OR SPECIFIC VARIABLE CHAIN
INITINSN ICM   R15,15,INSLINK   NEXT ENTRY?                     GP97351
         BZ    INITINSP                                         GP97351
         LR    R7,R15        TRY AGAIN                          GP97351
         B     INITINSN                                         GP97351
INITINSP ST    R1,INSLINK    LINK IT IN                         GP97351
         OI    TRCFLAGS,FGTINST  INSTRUCTION MATCHING REQUESTED GP97351
         CLI   RMSFLAGS,0    TRACE ON/OFF SET YET?              GP99111
         BNE   INITOGET      YES                                GP99111
         MVI   RMSFLAGS,2    SET FOR TRACE OFF                  GP99111
         B     INITOGET      GET ANOTHER                        GP97351
         SPACE 1                                                GP97342
INITFBAD LA    R0,RNGLEN     RESTORE LENGTH                     GP97342
         LR    R1,R7         RESTORE ADDRESS                    GP97342
         BAS   R9,FREECELL   RETURN IT AGAIN                    GP97342
INITOBAD MVC   PLINE(L'MSGSYNER),MSGSYNER  FLAG THE ERROR       GP97347
         BASCALL WRITE              WRITE IT                    GP97339
         OI    RETCODE+L'RETCODE-1,20  SET LEVEL 20 ERROR       GP97347
         B     INITOGET      FOR NOW, KEEP PROCESSING           GP97339
         SPACE 1                                                GP97339
INITOPTV ICM   R5,15,RETCODE  LOAD AND TEST RETURN CODE         GP97347
         BZ    INITOPTW      OK                                 GP97347
         MVC   PLINE(L'MSGSYNND),MSGSYNND                       GP97347
         BASCALL WRITE              WRITE IT                    GP97339
         CLOSURE ,           CLOSE THE TRACE FILE               GP97346
         LR    R15,R5        PASS RETURN CODE TO SYSTEM         GP97346
         SVC   3             QUIT QUICKLY                       GP97347
INITOPTW SR    R0,R0         SET FOR OFF RANGES ONLY            GP97356
         CLI   RMSFLAGS,1    WAS FIRST RANGE REQUEST OFF?       GP97356
         BNH   INITOPTX      YES (OR NONE)                      GP97356
         LA    R0,FGNOPRTA   SET FOR PRINT SUPPRESSION (ON RNG) GP97356
INITOPTX STC   R0,RMSFLAGS   SET PRINT SUPPR OPTION IN RANGER   GP97356
         SPACE 1                                                GP00204
         OC    TRDFLG1(3),TRDFLG1  DID USER SET ANY OPTIONS ?   GP00204
         BNZ   INITOPTY                                         GP00204
         MVC   TRDFLG1(3),=AL1(CFESD,0,CFMAC)                   GP00204
INITOPTY MVI   TRDFUN,CFLOOK  INITIALIZE FOR LOOKUP             GP00204
INITOPTZ BASRET ,            RETURN IN CALLER'S ADDRESSING MODE GP97339
         POP   USING                                            GP97351
MSGSYNER DC    C'*** SYNTAX ERROR IN ABOVE CARD ***'            GP97347
MSGSYNND DC    C'*** EXECUTION TERMINATED DUE TO SYSTROPT ERRORS ***'
         SPACE 1                                                GP97339
*---------------------------------------------------------------------*
*  VERBLOOK - MATCH VERB TO TABLE, AND RETURN +4 W/ENTRY, ELSE +0     *
*---------------------------------------------------------------------*
VERBLOOK LA    R1,VERBTAB    GET COMMAND TABLE POINTER          GP97339
VERBUSER LM    R1,R3,0(R1)   GET TABLE POINTERS                 GP97339
         SR    R15,R15                                          GP97339
VERBLOON IC    R15,OFO@LEN(,R1)  GET FIELD LENGTH               GP97339
         CH    R15,GOTLEN    COMPARE TO ACTUAL                  GP00204
         BL    VERBLOOX        TOO LONG FOR MATCH               GP00204
         LH    R15,GOTLEN    START WITH GOTTEN LENGTH           GP00204
         CLM   R15,1,OFO@MIN(R1)  CHECK AGAINST DESIGN MINIMUM  GP00204
         BL    VERBLOOX      TOO SHORT; DO ANOTHER WORD         GP00204
VERBLOOP EX    R15,VERBLCLC  COMPARE TO REQUEST                 GP97339
         BE    VERBLOAD      FOUND                              GP97339
         SH    R15,=H'1'     DECREASE LENGTH                    GP00204
         BM    VERBLOOX        BUT NOT TOO MUCH                 GP00204
         CLM   R15,1,OFO@MIN(R1)  CHECK AGAINST DESIGN MINIMUM  GP00204
         BNL   VERBLOOP      TRY WITH SHORTER VERSION >= MIN    GP00204
VERBLOOX BXLE  R1,R2,VERBLOON-2  TRY ANOTHER WORD               GP97339
         BR    R9            RETURN UNMATCHED                   GP97339
VERBLCLC CLC   OFO@TXT(0,R1),DB CHECK FOR VERB MATCH            GP97339
VERBLOAD SR    R15,R15       JUST IN CASE                       GP97339
         ICM   R15,3,OFO@DSP(R1) LOAD FIELD OFFSET              GP97339
         B     4(,R9)        VECTORED RETURN - SUCCESS          GP97339
         SPACE 1                                                GP97339
VERBTAB  DC    A(VERBTAB1,VERBTAB2-VERBTAB1,VERBTABX)           GP97339
VERBTAB1 OPTAD LOAD,LOAD     MODULE NAME TO BE TRACED           GP97357
VERBTAB2 OPTAD NAME,LOAD     MODULE NAME TO BE TRACED           GP97357
         OPTAD PRELOAD,PLOD  MODULE NAME TO BE PRE-LOADED       GP00204
         OPTAD RESTRICT,REST  RESTRICT TO SPECIFIC EVENTS       GP97357
         OPTAD ABEND,ABND    ABEND ON CONDITION                 GP97357
         OPTAD PROCESS,PROC  PROCESS ON CONDITION               GP97357
         OPTAD TRACE,RANG    TRACE IN SPECIFIED ADDRESS RANGE   GP97357
         OPTAD RANGE,RANG    TRACE IN SPECIFIED ADDRESS RANGE   GP97357
         OPTAD BEGIN,RANG    TRACE STARTING AT ADDRESS          GP99163
         OPTAD STACK,STAK    SPECIFY STACK SIZE                 GP97357
         OPTAD COUNT,CNTR    (OPTIONAL) TRACE LIMIT             GP97357
         OPTAD LIMIT,CNTR    (OPTIONAL) TRACE LIMIT             GP99356
         OPTAD MAXLONG,HEXL  HEX DUMP LENGTH                    GP00204
         OPTAD MAXDUMP,HEXL  HEX DUMP LENGTH                    GP00204
         OPTAD VARIABLE,VARL  TRACE VARIABLES BY ADDRESS        GP97357
         OPTAD INSTRUCT,INST  TRACE INSTRUCTIONS                GP97357
         OPTAD CODE,INST     TRACE INSTRUCTIONS                 GP97357
         OPTAD BREAK,DOAT    SET/RESET AT BREAKPOINT            GP00204
         OPTAD AT,DOAT,MIN=2 SET/RESET AT BREAKPOINT            GP00204
         OPTAD @,DOAT,MIN=1  SET/RESET AT BREAKPOINT            GP00204
         OPTAD SOURCE,SRC    SET SOURCE DISPLAY OPTIONS         GP00204
VERBTABX OPTAD PROGRAM,LOAD  MODULE NAME TO BE TRACED           GP97357
INITDOAT EQU   INITOBAD    *****DEBUG*****TEMP BYPASS*****      GP00204
         SPACE 1                                                GP97339
GETFIELD LM    R0,R1,CARDLIM  RELOAD SCANNER INCREMENT/END      GP97349
         MVC   DB,BLANKS     BLANK OUTPUT FIELD                 GP97339
         BAS   R14,NONBLANK  GET FIRST NON-BLANK                GP97339
         LR    R3,R5         SAVE START                         GP97339
         BAS   R14,NXTBLANK  FIND NEXT BLANK (SEQ IF NOT SOONER)
         LR    R4,R5         COPY CURRENT POSITION              GP97339
         BCTR  R4,0          LESS ONE FOR EXECUTE               GP97339
         SR    R4,R3         LESS START = LENGTH - 1            GP97339
         BMR   R9            HUH?                               GP97339
         CH    R4,=Y(L'DB)   NOT TOO LONG?                      GP97339
         BNL   INITOBAD      TOO LONG; TOO BAD                  GP97339
         LA    R2,DB         SET LEFT-MOST FIELD ADDRESS        GP97347
         EX    R4,GETFIMVC   MOVE IT                            GP97339
         STH   R4,GOTLEN     SAVE LENGTH OF VERB                GP00204
         B     4(,R9)        RETURN TO CALLER                   GP97339
GOTLEN   DC    H'0'                                             GP00204
         SPACE 1                                                GP97339
GETNUMFD LM    R0,R1,CARDLIM  RELOAD SCANNER INCREMENT/END      GP97349
         MVC   DB,BLANKS     BLANK FLAG FIELD                   GP97347
         MVC   DB2(8),=8C'0'   PRESET FOR ZEROES IN DATA FIELD  GP97347
         BAS   R14,NONBLANK  GET FIRST NON-BLANK                GP97347
         LR    R3,R5         SAVE START                         GP97347
         CLI   0(R3),C'0'    FORCED HEX REQUEST?                GP97347
         BNE   GETNUMFX                                         GP97347
         CLI   1(R3),X'81'   AT LEAST TWO DIGITS?               GP97347
         BL    GETNUMFX      NO                                 GP97347
         MVI   DB+7,C'0'     SET HEX FLAG                       GP97347
         LA    R3,1(,R3)     SKIP THE FLAG                      GP97347
GETNUMFX BAS   R14,NXTBLANK  FIND NEXT BLANK (SEQ IF NOT SOONER)
         LR    R4,R5         COPY CURRENT POSITION              GP97347
         BCTR  R4,0          LESS ONE FOR EXECUTE               GP97347
         SR    R4,R3         LESS START = LENGTH - 1            GP97347
         BMR   R9            HUH?                               GP97347
         CH    R4,=Y(L'DB)   NOT TOO LONG?                      GP97347
         BNL   INITOBAD      TOO LONG; TOO BAD                  GP97347
         LA    R2,DB+15      LAST BYTE IN WORK AREA             GP97347
         SR    R2,R4         SET START DESTINATION              GP97347
         EX    R4,GETFIMVC   MOVE IT                            GP97347
         B     4(,R9)        RETURN TO CALLER                   GP97347
GETFIMVC MVC   0(0,R2),0(R3)    MOVE TEXT TO SAVER              GP97347
         SPACE 1                                                GP97339
NONBLANK CLI   CARD,C' '     NON-BLANK YET?                     GP97339
         BNER  R14           YES; RETURN TO CALLER              GP97339
         BXLE  R5,R0,NONBLANK  ELSE TRY AGAIN                   GP97339
         BR    R14           END - NO MORE                      GP97339
         SPACE 1                                                GP97339
NXTBLANK CLI   CARD,C' '     BLANK YET?                         GP97339
         BER   R14           YES; RETURN TO CALLER              GP97339
         CLI   CARD,C'+'     SEPARATOR?                         GP97347
         BER   R14           YES; RETURN TO CALLER              GP97347
         CLI   CARD,C':'     SEPARATOR?                         GP99163
         BER   R14           YES; RETURN TO CALLER              GP99163
         BXLE  R5,R0,NXTBLANK  ELSE TRY AGAIN                   GP97339
         BR    R14           END - NO MORE                      GP97339
         SPACE 1                                                GP97339
CARDSECT DSECT ,             INPUT CARD IMAGE                   GP97339
CARD     DS    71C           TEXT                               GP97339
CARDCC   DS    C             CONTINUATION FLAG                  GP97339
CARDSEQ  DS    CL8           SEQUENCE NUMBER FIELD              GP97339
         SPACE 1                                                GP97342
***********************************************************************
*                                                                     *
*  TRTCHAR/TRTSEP/TRTBLNK - DEFINE PARSER SCANNING TABLES             *
*                                                                     *
***********************************************************************
TABLES   CSECT ,             PUT TABLES IN UNADDRESSABLE SPACE  GP97342
TRTCHAR  DC    256AL1(*-TRTCHAR)  DEFINE ALL INVALID EXCEPT 0   GP97342
         TRENT TRTCHAR,0,C'$',C'#',C'@',(C'A',9),(C'J',9)       GP97342
         TRENT ,0,(C'S',8),(C'0',10)  DEFINE ALPHAMERIC SET     GP97342
         ORG   ,                                                GP97342
TRTSEP   DC    256AL1(0)     DEFINE SEPARATOR CHARACTERS        GP97342
         TRENT TRTSEP,4,C' ' SPACE - SKIP ANY NUMBER            GP97342
         TRENT ,8,C'+',C'-'  ADJUNCT VALUES TO PRIOR VALUE      GP97342
         TRENT ,12,C',',C';',C':'  LIST SEPARATORS              GP97342
         ORG   ,                                                GP97342
TRTBLNK  DC    256AL1(*-TRTBLNK)  SKIP BLANKS                   GP97342
         TRENT TRTBLNK,0,C' '  ALLOW BLANKS AND HEX ZERO        GP97342
         ORG   ,                                                GP97342
TRTSTRNG DC    AL1(4),255AL1(0)  FIND TRAILING NULL
TRTMASK  DC    256AL1(0)                                        GP12309
         TRENT TRTMASK,4,C'?'     SINGLE BYTE MASK              GP12309
         TRENT TRTMASK,4,C'*'     TERMINAL MASK                 GP12309
SUBRTNES CSECT ,                                                GP97339
         SPACE 1                                                GP97342
*  GET CELL - SIZE PASSED IN R0                                 GP97342
*                                                               GP97342
GETCELL  SUBHEAD ,                                              GP97342
         LR    R5,R0         SAVE THE LENGTH                    GP97342
         STORAGE OBTAIN,LENGTH=(0),SP=SP,LOC=ANY  GET STORAGE   GP03046
         LR    R4,R1         COPY                               GP97342
         SR    R7,R7         CLEAR SOURCE LENGTH                GP97342
         MVCL  R4,R6         CLEAR GOTTEN STORAGE               GP97342
         SUBRET RS=R2        PASS R1 TO THE CALLER              GP97342
         SPACE 1                                                GP97342
*  FREE CELL - FREE AREA R1 SIZED R0                            GP97342
*                                                               GP97342
FREECELL STORAGE RELEASE,LENGTH=(0),SP=SP,ADDR=(R1) FREE STORGE GP03046
         BR    R9            RETURN                             GP97342
         SPACE 1                                                GP99117
         LTORG ,                                                GP99117
         BASEND ,                                               GP97339
         SPACE 3                                                GP97339
***********************************************************************
*                                                                     *
*  VARCHECK    CHECK FOR ALTERED VARIABLE VALUES                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97339
VARCHECK BASHEAD ,           SAVE REGISTERS                     GP97339
         TM    TRCFLAGS,FGTVAR   VARIABLE TRACING?              GP97351
         BZ    VARLANCX      NO; JUST RETURN                    GP97351
         L     R6,=A(@RANGES)  POINT TO GENERAL HEADER          GP97351
         USING RNGDSECT,R6   DECLARE MAPPING                    GP97351
VARLLINK LA    R5,RNGVARS    POINT TO VARIABLE CHAIN            GP97351
         USING VARDSECT,R5   DECLARE IT                         GP97351
VARLLOOP ICM   R5,15,VARLINK  NEXT VARIABLE ENTRY?              GP97351
         BZ    VARLEND       NONE                               GP97351
         TM    VARFLAG1,FGVVALID  RESOLVED REQUEST?             GP97351
         BZ    VARLLOOP      NO; IGNORE                         GP97351
         ONSPIE VARLLOOP     IGNORE ON ERROR                    GP97358
         TM    VARFLAG1,FGVSAD   RESOLVE (B)DDD REFERENCES?     GP97358
         BZ    VARSNSAD      NO                                 GP97351
         LA    R0,4          FOUR ADDRESS ENTRIES IN PRTDATA    GP97351
         LR    R1,R0         MAKE MOSTLY ZERO                   GP97351
         ICM   R1,8,PRQFLAGS   GET OPERAND ADDRESS RESOLUTION FLAGS
         SLL   R1,3          ALMOST LEFT JUSTIFY LOW NYBBLE     GP97351
         LA    R2,SAVEOPA1   POINT TO FIRST OPERAND ADDRESS     GP97351
VARSLOOP BXH   R1,R1,VARSBUMP  SKIP IF NO OPERAND MEMORY ACCESS GP97351
         CLC   VARSAD,4(R2)  MATCHES (B)DDD ?                   GP97357
         BE    VARSYSAD      YES                                GP97357
         CLC   VARSAD,6(R2)  MATCHES (X)DDD ?                   GP97357
         BNE   VARSBUMP      NO; SKIP IT                        GP97357
VARSYSAD L     R14,0(,R2)    LOAD OPERAND ADDRESS               GP97357
         ST    R14,VARADDR                                      GP97357
         TM    VARTYPE,FGVSET   PREVIOUSLY SET?                 GP97357
         BNZ   VARALOAD      YES; PROCEED                       GP97357
         LR    R3,R14                                           GP97357
         SH    R3,VARBDO     REMOVE OFFSET                      GP97357
         ST    R3,VARBASE                                       GP97357
         TM    VARFLAG1,FGVSADON  REVERT TO ADDRESS CHECKING?   GP97358
         BZ    VARALOAD      NO; PROCESS THIS ONE               GP97358
         NI    VARFLAG1,255-FGVSADON-FGVSAD  RESET SAD FLAG     GP97358
         B     VARALOAD      DONE SETTING UP                    GP97358
VARSBUMP LA    R2,SAVEOPA2-SAVEOPA1(,R2)  NEXT ADDRESS          GP97351
         BCT   R0,VARSLOOP   TRY AGAIN                          GP97351
         B     VARLLOOP      TRY ANOTHER VARIABLE               GP97351
         SPACE 1                                                GP97358
VARSNSAD TM    VARTYPE,FGVREF+FGVCHG    TRACE REFERENCES?       GP97351
         BZ    VARVTEST        NO; DO FIRST TIME TEST           GP11350
         LA    R0,4          FOUR ADDRESS ENTRIES IN PRTDATA    GP97351
         LR    R1,R0         MAKE MOSTLY ZERO                   GP97351
         ICM   R1,8,PRQFLAGS   GET OPERAND ADDRESS RESOLUTION FLAGS
         SLL   R1,3          ALMOST LEFT JUSTIFY                GP97351
         LA    R2,SAVEOPA1   POINT TO FIRST OPERAND ADDRESS     GP97351
         LM    R14,R15,VARADDR  GET ADDRESS AND SIZE            GP97351
         AR    R15,R14       MAKE END ADDRESS+1                 GP97351
VARALOOP BXH   R1,R1,VARABUMP  SKIP IF OPERAND ADDRESS NOT SET  GP97351
         L     R3,0(,R2)     GET OPERAND ADDRESS                GP97351
         CR    R3,R14        ACCESSING THIS AREA?               GP97351
         BL    VARABUMP      NO                                 GP97351
         CR    R3,R15        IN RANGE?                          GP97351
         BL    VARALOAN      YES                                GP97351
VARABUMP LA    R2,SAVEOPA2-SAVEOPA1(,R2)  NEXT ADDRESS          GP97351
         BCT   R0,VARALOOP   TRY AGAIN                          GP97351
         B     VARLLOOP      TRY ANOTHER VARIABLE               GP97351
         SPACE 1                                                GP97351
VARALOAD TM    VARTYPE,FGVREF+FGVCHG    TRACE REFERENCES?       GP97351
         BNZ   VARALOAN                                         GP97351
         TM    VARTYPE,FGVSET           EVER LOADED?            GP97351
         BNZ   VARVTEST      YES; SEE IF VALUE CHANGED          GP97351
VARALOAN TM    VARTYPE,FGVCHG   TRACE CHANGES?                  GP97351
         BZ    VARALOAM                                         GP97351
         TM    VARTYPE,FGVSET   PREVIOUSLY SET?                 GP97351
         BZ    VARALOAM      NO; COPY AND TRACE THIS            GP97351
         TM    VARTYPE,FGVEQU+FGVLOW+FGVHIGH  BY TYPE?          GP99097
         BNZ   VARVTEST      YES; TEST CONDITION                GP99097
         LM    R14,R15,VARADDR   RELOAD ADDRESS AND SIZE        GP97351
         LR    R1,R15        COPY IT                            GP97351
         LA    R0,VARVAL     SET KEEPER ADDRESS                 GP97351
         CLCL  R0,R14        COMPARE                            GP97351
         BE    VARLLOOP      MATCH - LOOK FOR ANOTHER VARIABLE  GP97351
VARALOAM OI    TRWFLAGS,FGTVAR   SHOW MATCH                     GP97351
         OI    VARFLAG2,FGVTRC  SIGNAL PRINT REQUEST            GP97351
         TM    VARTYPE,FGVKEEP+FGVSET   KEEP EARLIER VALUE?     GP97351
         BO    VARLANCX      YES; DONE HERE                     GP97351
         OI    VARTYPE,FGVSET    SHOW VALUE SET                 GP97351
         LM    R14,R15,VARADDR   RELOAD ADDRESS AND SIZE        GP97351
         LR    R1,R15        COPY IT                            GP97351
         LA    R0,VARVAL     SET KEEPER ADDRESS                 GP97351
         MVCL  R0,R14        REMEMBER THE VALUE                 GP97351
         B     VARLLOOP      AND LOOK FOR ANOTHER VARIABLE      GP97351
         SPACE 1                                                GP97351
VARVTEST LM    R14,R15,VARADDR  LOAD ADDRESS AND LENGTH         GP97351
         LA    R0,X'F0'      CC MASK                            GP99097
         IC    R2,VARTYPE                                       GP97351
         NR    R2,R0         RETAIN ONLY COND.CODE MASK         GP99097
         LR    R1,R15        COPY LENGTH                        GP97351
         LA    R0,VARVAL     POINT TO VALUE                     GP97351
         CLCL  R14,R0        COMPARE CURRENT TO SAVED           GP97351
         EX    R2,VAREXTYP   DOES CHANGE MATCH REQUEST?         GP97351
         B     VARLLOOP      NO; CHECK ANOTHER VARIABLE         GP97351
VAREXTYP NOP   VARALOAM      EXECUTED - BRANCH ON FLAG MATCH    GP97351
         SPACE 1                                                GP97351
VARLEND  ONSPIE 0            RESET CURRENT SPIE                 GP97358
         C     R6,@CURANGE   RANGE IN EFFECT?                   GP97351
         BE    VARLANCX      NO; OR JUST FINISHED               GP97351
         L     R6,@CURANGE   REPEAT FOR CURRENT RANGE           GP97351
         B     VARLLINK                                         GP97351
         SPACE 1                                                GP97351
VARLANCX BASRET ,            RETURN                             GP97339
         BASEND ,                                               GP97339
         SPACE 3                                                GP97339
***********************************************************************
*                                                                     *
*  VARPRINT    PRINT ALTERED VARIABLE VALUES                          *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97339
VARPRINT BASHEAD ,           SAVE REGISTERS                     GP97339
         TM    TRWFLAGS,FGTVAR   VARIABLE TO BE TRACED?         GP97351
         BZ    VARPRINX      NO; JUST RETURN                    GP97351
         L     R6,=A(@RANGES)  POINT TO GENERAL HEADER          GP97351
         USING RNGDSECT,R6   DECLARE MAPPING                    GP97351
VARPLINK LA    R5,RNGVARS    POINT TO VARIABLE CHAIN            GP97351
         USING VARDSECT,R5   DECLARE IT                         GP97351
VARPLOOP ICM   R5,15,VARLINK  NEXT VARIABLE ENTRY?              GP97351
         BZ    VARPEND       NONE                               GP97351
         TM    VARFLAG2,FGVTRC  TRACE THIS?                     GP97351
         BZ    VARPLOOP      NO; IGNORE                         GP97351
         NI    VARFLAG2,255-FGVTRC  RESET THE REQUEST           GP97351
         ONSPIE VARPLOOP     IGNORE ON ERROR                    GP97358
         LM    R2,R3,VARADDR  LOAD ADDRESS AND SIZE             GP97351
         MVC   PLINE+1(3),=C'VAR'                               GP97351
         MVC   PLINE+5(8),VARNAME  IDENTIFY                     GP97351
         SR    R7,R7         OFFSET FROM START                  GP97351
VARPLINE LR    R0,R2         COPY FOR CONVERSION                GP97358
         BAS   R9,HEX2EBC    CONVERT                            GP97358
         MVC   PLINE+5+8+1(8),HEXEDOUT  SHOW ADDRESS            GP97358
         MVI   PLINE+5+8+1+8+1,C':'                             GP97358
         LA    R4,PLINE+25   POINT TO FIRST AVAILABLE SPACE     GP97351
         LA    R9,8          SET FOR 8 WORDS PER LINE           GP97351
VARPGRUP LA    R0,4          CHARACTERS PER GROUP               GP97351
VARPBYTE LR    R14,R3        COPY RESIDUAL LENGTH               GP97351
         MIN   R14,(R0)      BUT NOT MORE THAN 4                GP97351
         LR    R15,R14       SAVE LENGTH                        GP97351
         BCTR  R15,0         EXECUTE LENGTH                     GP97351
         EX    R15,VARPEXMV  MOVE TO WORK AREA                  GP97351
         LR    R1,R14        GET LENGTH BACK                    GP97351
         SLL   R14,5         MAKE OUTPUT LENGTH                 GP97351
         OR    R14,R1        UNPACK LENGTH; OUT+1; IN+1         GP97351
         EX    R14,VARPEXUN  UNPACK                             GP97351
         SRL   R14,4         MAKE DOUBLED LENGTH                GP97358
         EX    R14,VARPEXTR  MAKE PRINTABLE                     GP97351
         AR    R4,R14        FIRST UNUSED BYTE                  GP97358
         MVI   0(R4),C' '    CLEAN IT                           GP97351
         LA    R4,1(,R4)     NEXT OUTPUT                        GP97351
         AR    R2,R1         NEXT INPUT                         GP97351
         AR    R7,R1         SET NEW OFFSET                     GP97351
         SR    R3,R1         RESIDUAL OUTPUT LENGTH             GP97351
         BNP   VARPFPRT      GO TO FINAL PRINT                  GP97351
         BCT   R9,VARPGRUP   DO NEXT WORD                       GP97351
VARPFPRT BASCALL WRITE       WRITE THIS LINE AND CLEAR IT       GP97351
         LTR   R3,R3         ANY MORE TO DO?                    GP97351
         BNP   VARPLOOP      NO; CHECK ANOTHER VARIABLE         GP97351
         LR    R0,R7         COPY OFFSET                        GP97351
         BAS   R9,HEX2EBC    MAKE PRINTABLE                     GP97351
         MVC   PLINE+5(8),HEXEDOUT  MOVE TO PRINT LINE          GP97351
         MVC   PLINE+5(2),=C' +'  PRETTIFY                      GP97351
         B     VARPLINE      FORMAT CONTINUATION LINE           GP97351
         SPACE 1                                                GP97351
VARPEND  ONSPIE 0            RESET SPIE RECOVERY                GP97358
         C     R6,@CURANGE   RANGE IN EFFECT?                   GP97351
         BE    VARPRINX      NO; OR JUST FINISHED               GP97351
         L     R6,@CURANGE   REPEAT FOR CURRENT RANGE           GP97351
         B     VARPLINK                                         GP97351
VARPRINX BASRET ,            RETURN                             GP97339
VARPEXMV MVC   HEXEDIN(0),0(R2)  MOVE EXACT LENGTH TO AVOID 0C4 GP97351
VARPEXUN UNPK  0(0,R4),HEXEDIN(0)  UNPACK +1 EXTRA              GP97351
VARPEXTR TR    0(0,R4),HEXTRTAB  MAKE PRINTABLE CHARACTERS      GP97351
         BASEND ,                                               GP97339
         SPACE 3                                                GP97339
***********************************************************************
*                                                                     *
*  INSTANCE    CHECK FOR INSTRUCTION TRACING (GLOBAL AND LOCAL)       *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97339
INSTANCE BASHEAD ,           SAVE REGISTERS                     GP97339
         TM    TRCFLAGS,FGTINST  INSTRUCTION TRACING?           GP97351
         BZ    INSTANCX      NO; JUST RETURN                    GP97351
         L     R6,=A(@RANGES)  POINT TO GENERAL HEADER          GP97351
         USING RNGDSECT,R6   DECLARE MAPPING                    GP97351
INSTLINK LA    R5,RNGINST    POINT TO INSTRUCTION CHAIN         GP97351
         USING INSDSECT,R5   DECLARE IT                         GP97351
INSTLOOP ICM   R5,15,INSLINK  NEXT INSTRUCTION ENTRY?           GP97351
         BZ    INSTEND       NONE                               GP97351
         MVC   DB(3),INSMASK  MOVE MASK                         GP97351
         NC    DB(3),XCELL   APPLY MASK                         GP97351
         CLC   DB(3),INSVAL  DESIRED VALUE?                     GP97351
         BNE   INSTLOOP      NO; TRY ANOTHER                    GP97351
         OI    TRWFLAGS,FGTINST  SHOW MATCH                     GP97351
         B     INSTANCX      AND EXIT                           GP97351
         SPACE 1                                                GP97351
INSTEND  C     R6,@CURANGE   RANGE IN EFFECT?                   GP97351
         BE    INSTANCX      NO; OR JUST FINISHED               GP97351
         L     R6,@CURANGE   REPEAT FOR CURRENT RANGE           GP97351
         B     INSTLINK                                         GP97351
         SPACE 1                                                GP97351
INSTANCX BASRET ,            RETURN                             GP97339
         BASEND ,                                               GP97339
         EJECT ,                                                GP00162
***********************************************************************
*                                                                     *
*  DUMPLINE    FORMAT HEX DATA LINE                                   *
*    R2 : START ADDRESS     R3: LENGTH       R4: MAX TO DUMP          *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP99097
DUMPLINE BASHEAD ,           SAVE REGISTERS                     GP99097
         ONSPIE DUMPLINX     RECOVER FROM ERROR                 GP99097
         LTR   R4,R4         DID USER SPECIFY ANY DUMP LIMIT?   GP99097
         BP    DUMPLINM      YES; HONOR IT                      GP06241
         L     R4,=X'7FFFFFFF'  ELSE SET VERY LARGE LIMIT       GP06241
DUMPLINM CLI   PLDISP-3,C' '   BLANK ?
         BNE   DUMPLING      NO; PRINT USED LINE
         CLC   PLDISP-2(50),PLDISP-3  ALL BLANK ?
         BE    DUMPLINH
DUMPLING BASCALL STACK       STACK/WRITE CURRENT LINE FIRST
DUMPLINH SR    R7,R7         OFFSET FROM START                  GP99097
         LR    R0,R2         COPY FOR CONVERSION                GP99097
         BAS   R9,HEX2EBC    CONVERT                            GP99097
         MVC   PLDISP-3(8),HEXEDOUT  SHOW ADDRESS               GP99097
         LR    R0,R3         COPY FOR CONVERSION                GP99097
         BAS   R9,HEX2EBC    CONVERT                            GP99097
         MVC   PLDISP+6(8),HEXEDOUT  SHOW LENGTH                GP99097
         MVI   PLDISP+5,C'/'  FLAG LENGTH                       GP99097
         LTR   R3,R3         ANY LENGTH?                        GP99097
         BNP   DUMPLINX      NO; QUIT                           GP99097
         MIN   R3,(R4)       APPLY USER'S DUMP LIMIT, IF ANY    GP06241
DMPLLINE LA    R14,32        TEXT SIZE                          GP99097
         MIN   R14,(R3)      BUT NOT MORE THAN WE HAVE          GP99097
         BCTR  R14,0         ADJUST FOR EXECUTE                 GP99097
         EX    R14,DMPEXTXT  MOVE TEXT                          GP99097
         L     R15,=A(TRANPRT)  GET PRINTABLE CHARACTER TABLE   GP99097
         EX    R14,DMPEXTRN  MAKE THEM PRINTABLE                GP99097
         MVI   PLINE+98,C'*'                                    GP99097
         MVI   PLINE+131,C'*'                                   GP99097
         LA    R8,PLINST-3   POINT TO FIRST AVAILABLE SPACE     GP99097
         LA    R5,2          TWO SETS PER LINE                  GP99097
DMPLGRUP LA    R9,4          SET FOR 4 WORDS PER LINE           GP99097
DMPLWORD LA    R0,4          CHARACTERS PER GROUP               GP99097
DMPLBYTE LR    R14,R3        COPY RESIDUAL LENGTH               GP99097
         MIN   R14,(R0)      BUT NOT MORE THAN 4                GP99097
         LR    R15,R14       SAVE LENGTH                        GP99097
         BCTR  R15,0         EXECUTE LENGTH                     GP99097
         EX    R15,DMPLEXMV  MOVE TO WORK AREA                  GP99097
         LR    R1,R14        GET LENGTH BACK                    GP99097
         SLL   R14,5         MAKE OUTPUT LENGTH                 GP99097
         OR    R14,R1        UNPACK LENGTH; OUT+1; IN+1         GP99097
         EX    R14,DMPLEXUN  UNPACK                             GP99097
         SRL   R14,4         MAKE DOUBLED LENGTH                GP99097
         EX    R14,DMPLEXTR  MAKE PRINTABLE                     GP99097
         AR    R8,R14        FIRST UNUSED BYTE                  GP99097
         MVI   0(R8),C' '    CLEAN IT                           GP99097
         LA    R8,1(,R8)     NEXT OUTPUT                        GP99097
         AR    R2,R1         NEXT INPUT                         GP99097
         AR    R7,R1         SET NEW OFFSET                     GP99097
         SR    R3,R1         RESIDUAL OUTPUT LENGTH             GP99097
         BNP   DUMPLINX      NO MORE; RETURN                    GP99097
         BCT   R9,DMPLWORD   DO NEXT WORD                       GP99097
         LA    R8,1(,R8)     EXTRA GAP                          GP99097
         BCT   R5,DMPLGRUP                                      GP99097
         SPACE 1                                                GP99097
         LTR   R1,R3         ANY MORE TO DO?                    GP00162
         BNP   DUMPLINX      NO; GET OUT                        GP99097
         BASCALL STACK       WRITE THIS LINE AND CLEAR IT       GP99097
         SPACE 1                                                GP08099
***********************************************************************
**   STORAGE COMPARE FOR DUPLICATE LINES IN BUFFER                   **
***********************************************************************
         CH    R3,=AL2(2*32)   AT LEAST THREE LINES (INCL.PRINTED)
         BL    DMPLNDUP      NO; SKIP DUPLICATE CHECK           GP08099
         LR    R14,R2        LOAD START ADDRESS                 GP08099
         SH    R14,=H'32'    COMPARE JUST PRINTED LINE          GP08099
         LR    R0,R2         LOAD START ADDRESS                 GP08099
         LR    R15,R3        LOAD LENGTH                        GP08099
         N     R15,=X'00FFFFE0'  TRUNCATE TO 32 BYTE LINE LENGTHGP08099
         LR    R1,R15                                           GP08099
         CLCL  R14,R0        LOOK FOR DUPLICATION               GP08099
         SR    R0,R2         COMPUTE DIFF                       GP08099
         CH    R0,=AL2(3*32)   AT LEAST THREE LINES             GP08099
         BL    DMPLNDUP      NOT ENOUGH                         GP08099
         N     R0,=X'00FFFFE0'  TRUNCATE TO 32 BYTE LINE LENGTH GP08099
         AR    R2,R0         NEXT DISPLAY ADDRESS               GP08099
         SR    R3,R0         RESIDUAL LENGTH                    GP08099
         AR    R7,R0                                            GP08099
         LR    R0,R2                                            GP08099
         BCTR  R0,0                                             GP08099
         LA    R14,32(,R14)  ADVANCE 1 LINE (PAST LAST MATCH)   GP00162
         MVC   PLINE+27(21),=C'SAME AS ABOVE THROUGH'           GP00162
         BAS   R9,HEX2EBC    FORMAT END ADDRESS                 GP00162
         MVC   PLINE+49(8),HEXEDOUT                             GP00162
         BASCALL STACK       AND STACK IT                       GP00162
DMPLNDUP LTR   R3,R3         ADJUST RESIDUAL LENGTH             GP00162
         BNP   DUMPLINX      NO MORE                            GP00162
         LR    R0,R2         COPY FOR CONVERSION                GP99097
         BAS   R9,HEX2EBC    CONVERT                            GP99097
         MVC   PLDISP-3(8),HEXEDOUT  SHOW ADDRESS               GP99097
         LR    R0,R7         COPY FOR CONVERSION                GP99097
         BAS   R9,HEX2EBC    CONVERT                            GP99097
         MVC   PLDISP+6(8),HEXEDOUT  SHOW LENGTH                GP99097
         LA    R14,PLDISP+5  LOCATION FOR OFFSET PLUS           GP99097
         LA    R15,7         DON'T DO TOO MUCH                  GP99097
DMPLZLOP CLI   1(R14),C'0'   LEADING ZERO?                      GP99097
         BNE   DMPLZPUT      NO                                 GP99097
         MVI   1(R14),C' '   BLANK IT                           GP99097
         LA    R14,1(,R14)                                      GP99097
         BCT   R15,DMPLZLOP  DO PRIOR                           GP99097
DMPLZPUT MVI   0(R14),C'+'   PRETTIFY                           GP99097
         B     DMPLLINE      FORMAT CONTINUATION LINE           GP99097
         SPACE 1                                                GP99097
DUMPLINX ONSPIE 0            RESET SPIE RECOVERY                GP99097
         CLI   PLDISP-3,C' '   BLANK ?                          GP03118
         BNE   DUMPLINY      NO; PRINT USED LINE                GP03118
         CLC   PLDISP-2(50),PLDISP-3  ALL BLANK ?               GP03118
         BE    DUMPLINZ                                         GP03118
DUMPLINY BASCALL STACK       STACK/WRITE CURRENT LINE FIRST     GP03118
DUMPLINZ BASRET ,            RETURN                             GP99097
DMPLEXMV MVC   HEXEDIN(0),0(R2)  MOVE EXACT LENGTH TO AVOID 0C4 GP99097
DMPLEXUN UNPK  0(0,R8),HEXEDIN(0)  UNPACK +1 EXTRA              GP99097
DMPLEXTR TR    0(0,R8),HEXTRTAB  MAKE PRINTABLE CHARACTERS      GP99097
DMPEXTXT MVC   PLINE+99(0),0(R2)  MOVE USER'S DATA              GP99097
DMPEXTRN TR    PLINE+99(0),0(R15)  MAKE PRINTABLE               GP99097
         BASEND ,                                               GP99097
         TITLE 'P G M T R A C E  ***  SUBROUTINES AND DATA AREAS'
***********************************************************************
*                                                                     *
*  GETCARD     ROUTINE TO READ SYSTROPT INPUT (CARD) FILE             *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97339
GETCARD  BASHEAD ,           SAVE REGISTERS                     GP97339
         TM    SYSTROPT+DCBOFLGS-IHADCB,DCBOFOPN  PRIOR OPENED? GP97339
         BO    GETCGET       PICK A CARD, ANY CARD              GP97339
         TM    PROFLAGS,FGSYNEOF  ALREADY ALL DONE?             GP97339
         BNZ   GETCARX       YES; RETURN                        GP97339
         DEVTYPE SYSTROPT+DCBDDNAM-IHADCB,HEXEDOUT HAVE A SYSTROPT DD?
         BXH   R15,R15,GETCNONE  NO                             GP97339
         OPEN  MF=(E,DCBLINP)  OPEN THE SYSTROPT DD             GP97339
         TM    SYSTROPT+DCBOFLGS-IHADCB,DCBOFOPN OPEN NOW?      GP97339
         BZ    GETCEOD       NO; JUST LEAVE IT BE               GP97339
GETCGET  GET   SYSTROPT      GET A CARD                         GP97339
         LH    R0,SYSTROPT+DCBLRECL-IHADCB  RETURN CARD IMAGE LENGTH
         BASRET RS=R2,TYPE=BSM,VECT=4  RETURN CARD IMAGE IN R1  GP97339
         SPACE 1                                                GP97339
GETCEOD  CLOSE MF=(E,DCBLINP)  CLOSE THE FILE                   GP97339
GETCNONE OI    PROFLAGS,FGSYNEOF  NO LONGER AVAILABLE           GP97339
GETCARX  BASRET TYPE=BSM     RETURN IN CALLER'S ADDRESSING MODE GP97339
         BASEND ,                                               GP97349
         SPACE 3                                                GP98081
***********************************************************************
*                                                                     *
*  SETAT       ROUTINE TO ESTABLISH A BREAKPOINT                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP98081
SETAT    BASHEAD ,           SAVE REGISTERS                     GP98081
         LR    R6,R0         SAVE POSSIBLE COMMENT POINTER      GP98136
         LA    R3,0(,R1)     COPY PASSED ADDRESS AND CLEAN IT   GP98081
         SR    R7,R7         SET USER KEY SWITCH                GP99144
         TESTAUTH FCTN=1     ARE WE AUTHORIZED?                 GP99144
         BXH   R15,R15,SETATUNP  NO; DO SAFELY                  GP99144
         L     R1,CVTPTR                                        GP99144
         L     R1,CVTGDA-CVT(,R1)  GET GDA                      GP99144
         AIF   (&MVSXA).EPVT                                    GP05189
         CL    R3,PASTRT-GDA(R1)  IN PRIVATE AREA ?             GP05189
         BL    SETATUNP      NO; WILL FAIL                      GP05189
         L     R0,PASTRT-GDA(,R1)     GET PRIVATE START         GP05189
         AL    R0,PASIZE-GDA(,R1)  GET END                      GP05189
         CR    R3,R0         IN PRIVATE AREA?                   GP99144
         BNL   SETATUNP      NO; LET IT FAIL                    GP99144
         AGO   .CMPVT                                           GP05189
.EPVT    CL    R3,=F'4096'   IN FIRST PAGE?                     GP99144
         BL    SETATUNP      YES; WILL FAIL                     GP99144
         CL    R3,GDACSA-GDA(,R1)  IN PVT?                      GP99144
         BL    SETATKEY      GET INTO KEY ZERO                  GP99144
         L     R0,GDAECSA-GDA(,R1)                              GP99144
         AL    R0,GDAECSAS-GDA(,R1)                             GP99144
         CR    R3,R0         IN EXTENDED PVT?                   GP99144
         BL    SETATUNP                                         GP99144
.CMPVT   SPACE 1                                                GP05189
SETATKEY TESTAUTH RBLEVEL=1,KEY=YES    IN KEY 0 ALREADY ?       GP12011
         LTR   R7,R15        IS USER IN KEY 0 ?                 GP12011
         BZ    SETATUNP        YES; LEAVE IT ALONE              GP12011
SETATKY0 MODESET KEY=ZERO                                       GP99144
         LR    R7,R12        SET ZERO KEY SWITCH                GP99144
SETATUNP ONSPIE SETATERR     RETURN WITH ERROR IF INVALID       GP98081
         ICM   R4,3,0(R3)    SEE IF TWO BYTES VALID             GP98081
         ONSPIE SETATEST     IF PROTECTED                       GP99058
         STCM  R4,3,0(R3)    SEE IF I CAN STASH IT BACK         GP99058
         ONSPIE 0            CANCEL SPECIAL SPIE                GP98081
         CLM   R4,3,=X'&BKT' IS IT ALREADY A BREAKPOINT?        GP98087
         BE    SETATOUT      YES; JUST RETURN                   GP98081
         STORAGE OBTAIN,LENGTH=AT@LEN,SP=SP,LOC=ANY             GP03046
         PUSH  USING                                            GP98081
         USING AT@DSECT,R1   DECLARE IT                         GP98081
         XC    AT@DSECT(AT@LEN),AT@DSECT  CLEAR IT              GP98081
         ST    R3,AT@ADDR    SET REQUESTED ADDRESS              GP98081
         STCM  R4,3,AT@INST  SAVE OLD INSTRUCTION TEXT          GP98081
         MVC   0(L'AT@INST,R3),=X'&BKT'  PLACE BREAK TEXT       GP98087
         OI    AT@FLAG1,FG@VALID  SET IT VALID                  GP98081
         MVC   AT@LINK,@AT   MOVE PRIOR AT ADDRESS              GP98081
         ST    R1,@AT        AND QUEUE THIS ONE                 GP98081
         MVC   PLINE+4(L'MSGBKSET),MSGBKSET                     GP98088
         LR    R0,R3         GET AT                             GP98294
         BAS   R9,HEX2EBC    MAKE PRINTABLE HEX                 GP98088
         MVC   PLINE+4+L'MSGBKSET+1(8),HEXEDOUT                 GP98088
         LTR   R6,R6         ANY COMMENT FIELD?                 GP98136
         BNZ   SETATCMT      YES; MOVE IT                       GP98136
         MVC   AT@COMNT,BLANKS MAKE BLANKS                      GP98136
         MVC   AT@COMNT+2(8),HEXEDOUT SHOW ADDRESS              GP98136
         B     SETATWRI                                         GP98136
SETATCMT MVC   AT@COMNT,0(R6) MOVE USER'S COMMENT               GP98136
SETATWRI MVC   PLINE+4+L'MSGBKSET+1+8+2(L'AT@COMNT),AT@COMNT    GP98136
         BAS   R9,SETATRST   RESET KEY ZERO                     GP99144
         BASCALL STACK       WRITE IT                           GP98088
SETATOUT BAS   R9,SETATRST   RESET KEY ZERO                     GP99144
         BASRET TYPE=BSM     RETURN                             GP98081
         POP   USING                                            GP98081
SETATERR LA    R5,16         SET ERROR CODE                     GP98081
         MVC   PLINE+2+L'MSGBKBAD+8+L'MSGBKBA2(L'MSGBKBA3),MSGBKBA3
         B     SETATECM      GO TO COMMON FORMATTING            GP99058
SETATEST LA    R5,12         SET ERROR CODE                     GP98081
         MVC   PLINE+2+L'MSGBKBAD+8+L'MSGBKBA2(L'MSGBKBA4),MSGBKBA4
SETATECM MVC   PLINE+2(L'MSGBKBAD),MSGBKBAD  SHOW ERROR         GP99058
         BAS   R9,SETATRST   RESET KEY ZERO                     GP99144
         LR    R0,R3                                            GP99058
         BAS   R9,HEX2EBC    MAKE ADDRESS PRINTABLE             GP99058
         MVC   PLINE+2+L'MSGBKBAD(8),HEXEDOUT  SHOW ADDRESS     GP99058
         MVC   PLINE+2+L'MSGBKBAD+8(L'MSGBKBA2),MSGBKBA2        GP99058
         BASCALL STACK       WRITE IT                           GP98088
         LR    R15,R5        SET ERROR CODE                     GP98081
         BASRET TYPE=BSM,RE=14  RETURN WITH ERROR (0-14)        GP98081
SETATRST LTR   R7,R7         IN USER KEY ?                      GP99144
         BZR   R9            YES                                GP99144
         SR    R7,R7         ONLY DO ONCE                       GP99144
         MODESET KEY=NZERO                                      GP99144
         BR    R9            AND RETURN                         GP99144
MSGBKSET DC    C'>> BREAKPOINT SET AT '                         GP98088
MSGBKBAD DC    C'** AT REQUEST AT '                             GP99058
MSGBKBA2 DC    C' FAILED - '                                    GP99058
MSGBKBA3 DC    C'INVALID ADDRESS OR MODE **'                    GP99058
MSGBKBA4 DC    C'STORAGE IS PROTECTED **'                       GP99058
         BASEND ,                                               GP98081
         SPACE 3                                                GP98081
***********************************************************************
*                                                                     *
*  FREEAT      ROUTINE TO RESET AND FREEMAIN AT BREAKPOINT REQUESTS   *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP99089
FREEAT   BASHEAD ,           SAVE REGISTERS                     GP99089
         SR    R7,R7                                            GP99144
         TESTAUTH FCTN=1     AUTHORIZED?                        GP99144
         BXH   R15,R15,FREEATLP  NO                             GP99144
         TESTAUTH RBLEVEL=1,KEY=YES    IN KEY 0 ALREADY ?       GP12011
         LTR   R7,R15        IS USER IN KEY 0 ?                 GP12011
FREEATLP LA    R2,@AT        GET BREAKPOINT ADDRESSES, IF ANY   GP99089
         USING AT@DSECT,R2                                      GP99089
         ICM   R2,15,AT@LINK   GET NEXT ENTRY                   GP99089
         BZ    FREEATEX      NO MORE BREAKPOINTS SET            GP99089
         TM    AT@FLAG1,FG@VALID  RESOLVED ADDRESS?             GP99089
         BZ    FREEATFL      NO; IGNORE IT                      GP99089
         ONSPIE FREEATFL     DON'T BOMB                         GP99089
         L     R4,AT@ADDR    GET LOCATION                       GP99089
         CLC   =X'&BKT',0(R4)  STILL BREAK ?                    GP99089
         BNE   FREEATFL      NO; DON'T ALTER                    GP99089
         LTR   R7,R7                                            GP99144
         BZ    FREEATNZ                                         GP99144
         MODESET KEY=ZERO    GET ZERO KEY, JUST IN CASE         GP99144
         MVC   0(2,R4),AT@INST  USE CORRECT TEXT                GP99089
         MODESET KEY=NZERO   PUT IT BACK                        GP99144
         B     FREEATFL      REJOIN COMMON                      GP99144
FREEATNZ MVC   0(2,R4),AT@INST  USE CORRECT TEXT                GP99089
FREEATFL ONSPIE 0            RESET                              GP99089
         MVC   @AT,AT@LINK                                      GP99089
         LA    R0,AT@LEN                                        GP99089
         STORAGE RELEASE,LENGTH=(0),SP=SP,ADDR=(R2)             GP03046
         B     FREEATLP      JOIN COMMON CODE                   GP99089
FREEATEX LTR   R7,R7         IN ZERO KEY?                       GP99144
         BZ    FREEATEY                                         GP99144
         MODESET KEY=NZERO   PUT IT BACK                        GP99144
FREEATEY BASRET TYPE=BSM     RETURN IN CALLER'S ADDRESSING MODE GP99089
         BASEND ,                                               GP99089
         SPACE 3                                                GP98081
***********************************************************************
*                                                                     *
*  STACKAD     CALLED BY PGMTRADA TO WRITE LINES                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00204
STACKAD  BASHEAD ,           SAVE REGISTERS                     GP00204
         MVC   HOLDPLIN,PLINE                                   GP00204
         MVC   PLINE,5(R1)   COPY CALLER'S PRINT LINE SANS CC   GP00204
         LTR   R0,R0         TEST USER'S ERROR LEVEL            GP00204
         BZ    STACKAD0      ZERO - NORMAL MESSAGE              GP00204
         BASCALL WRITE       ELSE FORCE A WRITE                 GP00204
         B     STACKADX                                         GP00204
STACKAD0 BASCALL STACK                                          GP00204
STACKADX MVC   PLINE(L'HOLDPLIN),HOLDPLIN  RESTORE              GP00204
         BASRET TYPE=BSM,RR=R14                                 GP00204
         BASEND ,                                               GP00204
         SPACE 1                                                GP97347
***********************************************************************
*                                                                     *
*  STACK       ROUTINE TO SAVE PRINT LINES IN STACK                   *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97347
STACK    BASHEAD ,           SAVE REGISTERS                     GP97347
         TM    STKFLAGS,FGSTNOT  FLUSH THIS ONE?                GP97352
         BNZ   STACKCLR      YES                                GP97352
         TM    STKFLAGS,FGSTNOW  STACK THIS ONE?                GP97347
         BNZ   STACKER       YES                                GP97347
         BASCALL WRITE            WRITE NOW                     GP97347
         B     STACKEX       AND EXIT                           GP97347
STACKER  LM    R3,R5,@STACK  LOAD START/CURRENT/END ADDRESSES   GP97347
         LTR   R3,R3         ANY STACK GOTTEN ?                 GP97347
         BZ    STACKEX       NONE; DISCARD IT                   GP97347
         LA    R4,LPL(,R4)   POINT TO NEXT ONE                  GP97347
         CR    R4,R5         PAST END OF STACK?                 GP97347
         BNH   STACKMOV      NO; USE IT                         GP97347
         LR    R4,R3         ELSE WRAP TO FIRST ENTRY           GP97347
STACKMOV ST    R4,@STACKED   SAVE CURRENT ENTRY                 GP97347
         MVC   0(LPL,R4),PLINE  SAVE THE CURRENT LINE           GP97347
         OI    STKFLAGS,FGSTACK SHOW ENTRY ON STACK             GP97347
STACKCLR MVC   PLINE,PLINE-1 AND CLEAR IT FOR REUSE             GP97349
STACKEX  BASRET TYPE=BSM     RETURN                             GP97347
         BASEND ,                                               GP97349
         SPACE 3                                                GP97339
***********************************************************************
*                                                                     *
*  UNSTACK     ROUTINE TO PRINT LINES SAVED ON STACK                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97347
UNSTACK  BASHEAD ,           SAVE REGISTERS                     GP97347
         TM    STKFLAGS,FGSTACK  ANYTHING ON STACK?             GP97347
         BZ    UNSTACKX      YES                                GP97347
         LM    R3,R5,@STACK  LOAD START/CURRENT/END ADDRESSES   GP97347
         LTR   R3,R3         ANY STACK GOTTEN ?                 GP97347
         BZ    UNSTACKX      NONE; SKIP STACKING                GP97347
         LR    R2,R4         COPY THE LAST ENTRY ADDRESS        GP97347
UNSTACKL LA    R2,LPL(,R2)   POINT TO NEXT ONE                  GP97347
         CR    R2,R5         PAST END OF STACK?                 GP97347
         BNH   UNSTACKT      NO; USE IT                         GP97347
         LR    R2,R3         ELSE WRAP TO FIRST ENTRY           GP97347
UNSTACKT CLI   0(R2),0       EMPTY ENTRY?                       GP97347
         BE    UNSTACKE      YES; NO PRINTING                   GP97347
         MVC   PLINE,0(R2)   MOVE THE CURRENT LINE              GP97347
         BASCALL WRITE            WRITE NOW                     GP97347
         XC    0(LPL,R2),0(R2)  CLEAR THE STACK ENTRY           GP97347
UNSTACKE CR    R2,R4         DID WE JUST DO THE LAST ONE?       GP97347
         BNE   UNSTACKL      NO; GO AGAIN                       GP97347
UNSTACKX NI    STKFLAGS,255-FGSTACK  NO ENTRY ON STACK          GP97347
         BASRET TYPE=BSM     RETURN                             GP97347
         BASEND ,                                               GP97349
         SPACE 3                                                GP97347
***********************************************************************
*                                                                     *
*  WRITE       ROUTINE TO OUTPUT THE PRINT LINE                       *
*                                                                     *
*    THIS PROGRAM INTERACTS WITH DEBTROLD, AND MAY USE THE CALLER'S   *
*    DCB, OR CALL A USER EXIT. PROCESSING DEPENDS ON DBTFGMOD FLAGS.  *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
WRITE    BASHEAD ,           SAVE REGISTERS                     GP97333
         IC    R0,DBTFGMOD   HOW TO PRINT?                      GP99113
         BIX   BASE=WRITE,ERR=WRITECOM,                                *
               LOC=(WRITELOC,        0 - SYSTRACE DD PUT               *
               DOWTO,                1 - WTO                           *
               DOPUT,                2 - PUT TO OPEN DCB               *
               DOEXIT,               3 - CALL USER EXIT                *
               DOXPRINT,             4 - OLD EXORPRNT/XPRINT I/F       *
               DO@PRINT)             5 - NEW @PRINTER INTERFACE GP99113
WRITELOC TM    OUTDCB+DCBOFLGS-IHADCB,DCBOFOPN PRIOR OPENED?    GP97072
         BO    WRITEA                                           GP00169
         TM    OPTFLAGS,FGQUIT          RETURN TO USER          GP97336
         BNZ   WRITECOM      IGNORE PRIOR FAILURE               GP00204
         DEVTYPE OUTDCB+DCBDDNAM-IHADCB,HEXEDOUT HAVE WE A SYSTRACE DD?
         BXH   R15,R15,MISSDD  NO                               GP97336
         OPEN  MF=(E,DCBLIST)  OPEN THE SYSTRACE DD             GP97087
         TM    OUTDCB+DCBOFLGS-IHADCB,DCBOFOPN OPEN NOW?        GP97072
         BO    WRITEA                                           GP00169
MISSDD   WTO   'SYSTRACE DD UNUSABLE - TRACE IGNORED',ROUTCDE=7 GP97336
         OI    OPTFLAGS,FGQUIT+FGNOPRT  RETURN TO USER          GP97336
         B     WRITECOM                                         GP97336
ABEND333 ABEND 333,DUMP   **OLD WAY OF HANDLING MISSING DD***   GP97072
         SPACE 1                                                GP97347
WRITEA   PUT   OUTDCB,PLINE                                     GP97087
WRITECOM MVC   PLINE,PLINE-1   CLEAR PRINT LINE                 GP97086
         BASRET TYPE=BSM     RETURN IN CALLER'S ADDRESSING MODE GP97087
         SPACE 2                                                GP99117
***********************************************************************
**                                                                   **
**  PASS RECORD TO SPECIFIED USER EXIT                               **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOEXIT   LA    R1,RDWPLINE   GET OUTPUT RECORD                  GP99113
         L     R15,DBT@UDCB  GET USER EXIT                      GP99113
         AIF   (&MVSXA).NEWSYNK                                 GP05189
         SYNCH (R15),RESTORE=YES   CALL USER EXIT               GP05189
         AGO   .COMSYNK                                         GP05189
.NEWSYNK SYNCH (R15),RESTORE=YES,AMODE=DEFINED  CALL USER EXIT  GP99117
.COMSYNK B     WRITECOM      JOIN COMMON                        GP99113
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  CALL EXORPRNT (XPRINT) TO PROCESS THE RECORD                     **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOXPRINT LA    R1,RDWPLINE   GET OUTPUT RECORD                  GP99113
         L     R15,DBT@UDCB  GET USER EXIT                      GP99113
         BASR  R14,R15       ANCIENT PRINT ROUTINE (CIRCA 1969) GP99113
         B     WRITECOM      JOIN COMMON                        GP99113
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PASS THE RECORD TO @PRINTER (USE PRTV TYPE ENTRY)                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DO@PRINT PRTV  RDWPLINE,DEV==DBTF@DEV PRINT ON REQUESTED FILE   GP95235
         BXLE  R15,R15,WRITECOM IF IT FAILS, USE WTO            G922845
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  WRITE RECORD WITH WTO                                            **
**    NOTE THAT WE DON'T REMOVE THE CARRIAGE CONTROL CHARACTER       **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOWTO    WTO   MF=(E,RDWPLINE) WRITE TO CONSOLE                  95067
         B     WRITECOM      JOIN COMMON                        GP99113
         SPACE 2                                                GP99117
***********************************************************************
**                                                                   **
**  PRTDEB :  SUBROUTINE TO WRITE THE CURRENT OUTPUT RECORD          **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
*  PRTDEB - PROCESS ONE PRINT LINE; TEXT ADDR IN R1             GP99113
*    CONTROL CHARACTERS, IF NEEDED, SET TO SINGLE SPACE         GP99113
*    RETURNS ON R14                                             GP99113
         PUSH  USING                                            GP99113
DOPUT    LA    R2,RDWPLINE   GET OUTPUT RECORD                  GP99117
         LH    R3,0(,R2)     LOAD LENGTH                        GP99113
         L     R4,DBT@UDCB   LOAD DCB                           GP99113
         USING IHADCB,R4                                        GP99113
         SR    R15,R15                                          GP99113
         ICM   R15,3,MAXOUTLN  GET MAXIMUM TEXT LENGTH          GP99113
         BNZ   PRTNFRST                                         GP99113
         SPACE 1                                                GP99113
         TM    DCBRECFM,DCBRECCC  ANY CONTROL CHARACTERS?       GP99113
         BZ    PRT1NCC                                          GP99113
         MVI   CCINDEX,4     SET FOR CC                         GP99113
         TM    DCBRECFM,DCBRECCA  ASA ?                         GP99113
         BNZ   PRT1NCC                                          GP99113
         MVI   CCCHAR,X'09'  MACHINE CODE - SINGLE SPACE        GP99113
PRT1NCC  LH    R15,DCBLRECL  GET MAXIMUM RECORD LENGTH          GP99113
         STH   R15,MAXOUTLN  SAVE IT                            GP99113
         TM    DCBRECFM,DCBRECU  RECFM=U ?                      GP99113
         BO    PRT1RECU      YES; PROCESS                       GP99113
         BM    PRTQRECF      MIXED; F OR V                      GP99113
         TM    DCBRECFM,DCBRECD  RECFM=D?                       GP99113
         BNZ   PRT1RECV      YES; TREAT AS V                    GP99113
PRT1RECU MVC   MAXOUTLN,DCBBLKSI  RECFM=U USES REC=BLK          GP99113
         B     PRT1RECF      SET FLAF FOR F                     GP99113
PRTQRECF TM    DCBRECFM,DCBRECF  IS IT FIXED?                   GP99113
         BNZ   PRT1RECF      YES                                GP99113
PRT1RECV MVI   RFINDEX,4     BRANCH ON V/D                      GP99113
         B     PRTNFRST                                         GP99113
PRT1RECF MVI   RFINDEX,0     BRANCH ON F/U                      GP99113
         SPACE 1                                                GP99113
PRTNFRST MVC   RDWPLINE+4(1),CCCHAR SET APPROPRIATE CARRIAGE CONTROL
         TM    DCBMACF2,DCBMRLCP  PUT LOCATE MODE?              GP99119
         BNZ   PRTLOC                                           GP99113
         SR    R15,R15                                          GP99113
         ICM   R15,1,RFINDEX   SET RDW LENGTH OR 0              GP99113
         BNZ   PRTMV         RECFM=V OR D                       GP99113
         ICM   R5,1,CCINDEX  CARRIAGE CONTROL INDEX ?           GP99113
         BNZ   *+4+4         YES; REMOVE ONLY RDW               GP99113
         LA    R15,5(,R15)   ELSE REMOVE CC ALSO                GP99113
         AR    R2,R15                                           GP99113
*NO      SR    R3,R15        ADJUST ADDRESS AND LENGTH          GP99113
         B     PRTMPUT                                          GP99113
PRTMV    SR    R1,R1                                            GP99113
         ICM   R1,12,0(R2)   GET RDW LENGTH                     GP99113
         MIN   R3,MAXOUTLN,TYPE=H  GET SMALLER OF RECORD AND LRECL
         CLI   CCINDEX,0     CC?                                GP99113
         BH    PRTMVAR                                          GP99113
         SL    R1,=X'00010000'  ADJUST FOR LACK OF CC           GP99113
         BCTR  R3,0          ADJUST LENGTH                      GP99113
         LA    R2,1(,R2)     COMPENSATE FOR CC                  GP99113
PRTMVAR  STCM  R1,15,0(R2)   UPDATE RDW LENGTH AND FLAGS        GP99113
PRTMPUT  PUT   (R4),(R2)     PRINT IT                           GP99113
         B     PRINTSEX      GO TO EXIT                         GP99113
         SPACE 1                                                GP99113
PRTLOC   SR    R15,R15                                          GP99113
         ICM   R15,1,RFINDEX  TEST F OR V                       GP99113
         BZ    PRTLPUT       FIXED                              GP99113
         CLI   CCINDEX,0     CC NEEDED?                         GP99113
         BH    PRTLCC                                           GP99113
         BCTR  R3,0          ELSE DECREASE CURRENT LENGTH       GP99113
PRTLCC   MIN   R3,MAXOUTLN,TYPE=H  GET SMALLER OF RECORD AND LRECL
         STH   R3,DCBLRECL                                      GP99113
PRTLPUT  PUT   (R4)          GET A RECORD AREA                  GP99113
         LR    R14,R1        SAVE THE RECORD ADDRESS            GP99113
         LH    R15,DCBLRECL  GET THE EXPECTED OUTPUT SIZE       GP99113
         ICM   R5,1,RFINDEX  F OR V?                            GP99113
         BNZ   PRTLMOVE                                         GP99113
         SR    R5,R5                                            GP99113
         ICM   R5,1,CCINDEX  CARRIAGE CONTROL INDEX ?           GP99113
         BNZ   *+4+4         YES; REMOVE ONLY RDW               GP99113
         LA    R5,5(,R5)     ELSE REMOVE CC ALSO                GP99113
         AR    R2,R5                                            GP99113
         SR    R3,R5         ADJUST ADDRESS AND LENGTH          GP99113
         ICM   R3,8,=C' '    SET PAD                            GP99113
         B     PRTLMVCL                                         GP99113
PRTLMOVE STCM  R3,3,0(2)     SET LENGTH                         GP99113
         STCM  R3,12,2(R2)   CLEAR FLAGS                        GP99113
         CLI   CCINDEX,0                                        GP99113
         BH    PRTLMVCL      MOVE RECORD WITH CC                GP99113
         LA    R5,5          ADJUSTMENT FOR RDW + CC            GP99113
         AR    R2,R5                                            GP99113
         SR    R3,R5                                            GP99113
         STCM  R3,3,0(R14)    SET LENGTH                        GP99113
         STCM  R3,12,2(R14)  CLEAR FLAGS                        GP99113
         SH    R15,=H'4'                                        GP99113
         LA    R14,4(,R14)   SKIP RDW                           GP99113
PRTLMVCL MVCL  R14,R2        MOVE DATA TO LOCATED RECORD AREA   GP99113
         SPACE 1                                                GP99113
PRINTSEX MVI   RDWPLINE+4,C' '  RESTORE CLOBBERED BLANK         GP99117
         B     WRITECOM      JOIN COMMON                        GP99113
         SPACE 1                                                GP96109
MAXOUTLN DC    H'0' (0 IS FG) MAXIMUM OUTPUT LENGTH, INCL. RDW  GP99113
RFINDEX  DC    X'0'          INDEX FOR RECFM F/U VS V/D         GP99113
CCINDEX  DC    X'0'          INDEX FOR CARRIAGE CONTROL         GP99113
CCCHAR   DC    C' '          ASA SINGLE SPACE                   GP99113
         BASEND ,                                               GP97349
         POP   USING                                            GP00015
TABLES   CSECT ,             DO THIS WITHOUT ADDRESSABILITY     GP97342
***********************************************************************
*                                                                     *
*  TRTHEX--  DEFINE HEX CHARACTER VALIDITY AND DATA TABLES            *
*                                                                     *
***********************************************************************
TRTHEXVL DC    256AL1(*-TRTHEXVL)  HEX 0 IS SPECIAL CASE?       GP97342
         TRENT TRTHEXVL,0,(X'81',6)   LOWER CASE HEX DIGITS     GP97342
         TRENT ,0,(C'A',6),(C'0',10)  UPPER CASE AND NUMERICS   GP97342
         ORG   ,                                                GP97342
         SPACE 1                                                GP97342
TRTHEXDT DC    256AL1(0)     DEFINE ALL AS ZERO                 GP97342
         TRENT TRTHEXDT,(*+10-X'81'-TRTHEXDT),(X'81',6) LOWER CASE HEX
         TRENT ,(*+10-C'A'-TRTHEXDT),(C'A',6)  UPPER CASE HEX   GP97342
         TRENT ,(*-C'0'-TRTHEXDT),(C'0',10)    DIGITS 0-9       GP97342
         ORG   ,                                                GP97342
         SPACE 1                                                GP97342
TRTINTVL DC    256AL1(*-TRTINTVL)   0 IS SPECIAL CASE?          GP97342
         TRENT TRTINTVL,0,(C'0',10)  VALID NUMERIC DIGITS       GP97349
         ORG   ,                                                GP97342
         SPACE 1                                                GP97342
TRANPRT  TRTAB CODE=PN,OPT=LOW                                  GP99097
PGMTRACE CSECT ,             RESTORE PROGRAM CSECT              GP97342
         EJECT ,                                                GP97072
***********************************************************************
*                                                                     *
*  RANGER  SET NOPRTA FLAG IF INSTRUCTION COUNTER NOT REQUESTED RANGE *
*     R1 ON ENTRY HAS ADDRESS TO BE LOCATED                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97338
RANGER   BASHEAD ,           SAVE A LITTLE                      GP97338
         NI    PROFLAGS,255-FGRANGE  NO RANGE MATCH FOUND       GP04056
         L     R6,=A(@RANGES) SET DEFAULT RANGE - NONE          GP97347
         TM    TRQFLAGS,FGTRNG   ANY SELECTION REQUESTS?        GP97338
         BZ    RANGERZ       NO; JUST GET OUT                   GP97338
         NI    OPTFLAGS,255-FGNOPRTA-FGNOPRTS  RESET TEMP FLAGS GP97358
         OC    OPTFLAGS,RMSFLAGS  MASK ACCORDING TO RANGE TYPE  GP97356
         SR    R4,R4         CLEAR LAST MATCH                   GP97358
         LR    ILCR,R1       PRESERVE PASSED ADDRESS            GP97351
         LR    R5,R6         POINT TO QUEUE HEAD                GP97338
         USING RNGDSECT,R5   DECLARE ENTRY                      GP97338
RANGELP  ICM   R5,15,RNGLINK  LOOK AT NEXT ENTRY                GP97338
         BZ    RANGERX       NONE; NO TRACING                   GP97338
         TM    RNGFLAG1,FGRVALID  RESOLVED?                     GP97338
         BNZ   RANGERSV             YES; USE IT                 GP12309
*---------------------------------------------------------------------*
*   CHECK FOR A MASKED RANGE SPECIFICATION                            *
*---------------------------------------------------------------------*
         TM    RNGFLAG1,FGRPMASK  IS THIS A MASKED ENTRY ?      GP12309
         BZ    RANGELP              NO; IGNORE                  GP12309
         L     R14,@MODMAP   GET MAP ENTRIES                    GP12309
         LH    R0,MODCNT     NUMBER FOUND                       GP12309
RANGMOLP C     ILCR,MODADDR-MODDSECT(,R14)  IN THIS MODULE ?    GP12309
         BL    RANGMOUP        NO                               GP12309
         L     R15,MODSIZ-MODDSECT(,R14)    GET FLAGS AND SIZE  GP12309
         N     R15,=X'00FFFFFF'    KILL FLAGS                   GP12309
         A     R15,MODADDR-MODDSECT(,R14)   SIZE PLUS START     GP12309
         CR    ILCR,R15      IN THIS MODULE ?                   GP12309
         BL    RANGMOMA        YES                              GP12309
RANGMOUP LA    R14,MODLEN(,R14)  TRY AGAIN                      GP12309
         BCT   R0,RANGMOLP                                      GP12309
         B     RANGELP       NO MATCH; BYPASS                   GP12309
RANGMOMA LA    R1,MODNAME-MODDSECT(,R14)                        GP12309
         LA    R0,L'MODNAME                                     GP12309
         LA    R2,RNGNAME    MASK                               GP12309
         BAL   R9,CLCMASK                                       GP12309
         BNE   RANGELP       NO MATCH                           GP12309
         LR    R4,R5         USE THIS ENTRY                     GP12309
         B     RANGERX                                          GP12309
CLCMASK  CMASK MASKEND='*',MASKEQU='?',ML=R0,MA=R2,A=R1,L=R0    GP12309
         SPACE 1                                                GP97347
*---------------------------------------------------------------------*
*   CHECK FOR INSTRUCTION IN MODULE                                   *
*---------------------------------------------------------------------*
RANGERSV LM    R0,R1,RNGADDR  LOAD ADDRESS AND SIZE             GP97347
         AR    R1,R0         MAKE END                           GP97347
         CR    ILCR,R0       IN RANGE?                          GP97347
         BL    RANGELP       NO                                 GP97338
         CR    ILCR,R1       NOT TOO HIGH?                      GP97347
         BNL   RANGELP       TOO BAD                            GP97338
         LR    R4,R5         REMEMBER MATCHED RANGE             GP97347
         LR    R6,R5         REMEMBER MATCHED RANGE             GP97347
         B     RANGELP       AND LOOK FOR OVERRIDES             GP97347
         SPACE 1                                                GP97347
RANGERX  ST    R6,@CURANGE   UPDATE THE CURRENT RANGE HEADER    GP97347
         LTR   R5,R4         ANYTHING FOUND?                    GP97358
         BZ    RANGERZ       NO; JUST GET OUT WITH DEFAULTS SET GP97358
         OI    PROFLAGS,FGRANGE  RANGE MATCH FOUND              GP04056
         NI    OPTFLAGS,255-FGNOPRTA-FGNOPRTS  RESET            GP97338
         LA    R1,FGNOPRTA   PRESET FOR COMPLETE SUPPRESSION    GP97358
         TM    RNGFLAG2,FGROFF  SUPPRESS TRACING?               GP97347
         BNZ   RANGELS       YES; SET SUPPRESS FLAG ON          GP97347
         LA    R1,FGNOPRTS   PRESET FOR STACKING                GP97358
         TM    RNGFLAG2,FGRSTK  STACK ONLY?                     GP97358
         BZ    RANGERY       NO                                 GP97358
RANGELS  EX    R1,RANGEXOI   SET APPROPRIATE FLAG               GP97358
RANGERY  TM    RNGFLAG2,FGREXIT+FGRABND  EXIT OR ABEND?         GP97358
         BZ    *+8           NO                                 GP97351
         OI    OPTFLAGS,FGQUIT  NO ABEND CODE YET               GP97351
RANGERZ  BASRET ,            RETURN                             GP97338
RANGEXOI OI    OPTFLAGS,0-0  SET SUPPRESS OR STACK FLAG         GP97358
         BASEND ,                                               GP97338
         EJECT                                                  GP97332
***********************************************************************
*                                                                     *
*    BUILD PROGRAM DIRECTORY FROM LLE AND RB INFORMATION              *
*      INVOKED IN AMODE 31                                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97332
MAPCSECT BASHEAD ,                                              GP97086
         L     R15,@MODMAP                                      GP97328
         XC    MODCNT,MODCNT  RESET COUNT OF DETECTED MODULES   GP97332
         XC    MOPDSECT(MOPLEN),MOPDSECT   CLEAR ENTRY DATA     GP99049
         USING MODDSECT,R15                                     GP97328
         L     R6,PSATOLD-PSA  CURRENT TCB                      GP97328
         USING TCB,R6                                           GP97328
         L     R6,TCBJSTCB   GET PROGRAM STEP TCB               GP97328
         LR    R5,R6                                            GP97332
         B     MAPCRB                                           GP97328
MAPCTLOW ICM   R5,15,TCBLTC        1ST ATTACHED TCB             GP97328
         BNZ   MAPCRB                                           GP97328
MAPCTLVL ICM   R5,15,TCBNTC        PREVIOUSLY ATTACHED TCB      GP97328
         BNZ   MAPCRB                                           GP97328
         L     R6,TCBOTC           TASK'S TCB                   GP97328
         C     R6,TCBJSTCB         IF SAME TCBS END OF PROCESSING
         BNE   MAPCTLVL                                         GP97328
         B     MAPDONE                     EXIT                 GP97328
         SPACE 1                                                GP97332
MAPCRB   LR    R6,R5         SET NEXT TCB TO BE LOADED FROM     GP97328
         TM    TCBFLGS5,TCBFC  TASK TERMINATED?                 GP97328
         BNZ   MAPCTLOW            TRY NEXT TCB                 GP97328
         LA    R7,TCBJPQ-(CDCHAIN-CDENTRY)                      GP99048
         USING CDENTRY,R7                                       GP99048
MAPJLOOP ICM   R7,15,CDCHAIN  NEXT CDE                          GP99048
         BZ    MAPJDONE                                         GP99048
         LR    R8,R7                                            GP99048
         BAS   R9,MAPCCDE    CHECK THIS ONE                     GP99048
         B     MAPJLOOP                                         GP99048
         DROP  R7                                               GP99048
         SPACE 1                                                GP99048
MAPJDONE LA    R7,TCBLLS-(LLECHN-LLE)   @ OF LLE CHAIN HEAD     GP97328
         USING LLE,R7                                           GP97328
MAPCLOOP ICM   R7,15,LLECHN        ADDR OF NEXT LLE             GP97073
         BZ    MAPCLEND                                         GP97328
         ICM   R8,15,LLECDPT    GET CDE ADDRESS                 GP97328
         BZ    MAPCLOOP                                         GP97328
         USING CDENTRY,R8                                       GP97328
         BAS   R9,MAPCCDE    EXTRACT CDE INFORMATION            GP97328
         B     MAPCLOOP                                         GP97328
         SPACE 1                                                GP97328
MAPCLEND LA    R7,TCBRBP+1                                      GP97328
         ICM   R7,8,=X'0'    CLEAR HIGH BYTE (MAY BE AMODE 31)  GP97328
         SH    R7,=Y(RBLINKB-RBSECT)  FAKE LINKAGE OFFSET       GP08251
         USING RBSECT,R7                                        GP97073
MAPCROOP ICM   R7,7,RBLINKB  GET NEXT RB                        GP97328
         BZ    MAPCMSS                                          GP97328
         TM    RBSTAB1,RBFTP  ANYTHING OTHER THAN PRB?          GP99048
         BNZ   MAPCROOP      YES; GET NEXT ENTRY                GP97328
         L     R8,RBCDE      GET RB ENTRY POINT                 GP97073
         N     R8,=X'00FFFFFF'  KILL POSSIBLE FLAGS             GP97328
         BZ    MAPCROOT                                         GP97328
         BAS   R9,MAPCCDE    EXTRACT CDE / XTLST INFORMATION    GP97328
MAPCROOT TM    RBSTAB2,RBTCBNXT  LOGICAL CHAIN END?             GP97328
         BZ    MAPCROOP          NO; LOAD AND TEST NEXT         GP97328
         SPACE 1                                                GP97328
*  CODE TO SCAN TCBMSS/SPQE CHAIN DELETED BECAUSE IT NEVER STORED
*    ANY OF THE LOCATED INFORMATION                             GP97328
MAPCMSS  L     R4,TCBMSS                                        GP97328
         B     MAPCTLOW                                         GP97328
MAPERR1  TM    OTHFLAGS,FGMODEXM  MESSAGE ISSUED PREVIOUSLY?    GP99096
         BNZ   MAPDONE       YES; JUST QUIT NOW                 GP99096
         OI    OTHFLAGS,FGMODEXM  SIGNAL MESSAGE ISSUED         GP99096
         MVC   PLINE+8(L'MSGMAXMD),MSGMAXMD MAKE ERROR MESSAGE  GP97086
         BASCALL WRITE                 WRITE AND CLEAR PRINT LINE 97087
         B     MAPDONE                                          GP97332
         SPACE 2                                                GP97328
MAPCCOOP LR    R8,R5         ADR OF MAJOR CDE                   GP97328
         B     MAPCCDE2                                         GP97076
MAPCCDE  MVC   MOPNAME,CDNAME SAVE IT FOR A WHILE               GP97328
MAPCCDE2 ICM   R5,15,CDXLMJP       EXTENT/CDE ADDR              GP97076
         BZ    MAPCLPDE      TEST IF LLE IN ?LPA                GP99095
         TM    CDATTR2,CDXLE  EXTENT LIST PRESENT ?             GP05303
         BNZ   MAPCDXTL                                         GP05303
         TM    CDATTR,CDMIN  SEE IF IT IS MINOR CDE?            GP97328
         BNZ   MAPCCOOP            YES                          GP97328
         BR    R9            ELSE NOT FOUND                     GP05303
         USING XTLST,R5                                         GP97328
MAPCDXTL ICM   R3,15,XTLNRFAC    # OF EXTENTS                   GP97328
         BP    MAPCXOOP                                         GP97328
         BMR   R9            SKIP IF ERROR?                     GP97328
         LA    R3,1          IF ZERO, HAS ONE, ANYWAY?          GP97328
MAPCXOOP L     R14,XTLMSBAA        ADDRESS OF MODULE            GP97073
         N     R14,=X'7FFFFFFF'    KILL AM31 BIT (?)            GP97073
         ST    R14,MOPADDR                                      GP97073
*DEFER*  AL    R14,XTLMSBLA        PLUS SIZE OF MODULE          GP97073
         L     R14,XTLMSBLA        SIZE OF MODULE ONLY          GP97073
         N     R14,=X'00FFFFFF'    KILL END OF LIST BYTE        GP97073
         ST    R14,MOPSIZE                                      GP97073
         STM   R14,R15,DB    SAVE OVER CALL                     GP98095
         MVSQUERY INADDR=MOPADDR,SEARCH=LPA,OEPNM=DB2  IN LPA?  GP05189
         BXH   R15,R15,MAPCXLPA                                 GP97352
         OI    MOPFLAG,MFLPA  SET IT ON                         GP98095
MAPCXLPA LM    R14,R15,DB    RESTORE LOOP REGISTERS             GP98095
         BAS   R14,MAPADD    ADD THIS ENTRY TO MAPPINGS         GP99049
         TM    XTLMSBLA,X'80'  END OF LIST BIT ON?              GP99144
         BNZR  R9            YES; QUIT NOW                      GP99144
         LA    R5,L'XTLMSBAA+L'XTLMSBLA(,R5)   NEXT EXTENT INFO GP99048
         BCT   R3,MAPCXOOP                                      GP97328
         BR    R9            RETURN TO CALLER                   GP97328
         SPACE 1                                                GP99095
         PUSH  USING                                            GP99095
         USING LPDE,R8       GUESS?                             GP99095
MAPCLPDE TM    LPDEATTB,LPDELPDE  REALLY AN LPDE?               GP99095
         BZR   R9            NO; TOO BAD                        GP99095
         TM    LPDEATT2,LPDEXLE  EXTENT LIST PRESENT ?          GP05303
         BNZ   MAPCLPDX      YES; USE IT                        GP05303
         TM    LPDEATTR,LPDEMIN  MINOR?                         GP99095
         BZR   R9            NO; BOOBOO                         GP99095
         ICM   R8,15,LPDEMJP  GET MAJOR                         GP99095
         BNZ   MAPCLPDE                                         GP99095
         BR    R9            OOPS                               GP99095
MAPCLPDX MVC   MOPADDR,LPDEXTAD  SET ADDRESS                    GP99095
         MVC   MOPSIZE,LPDEXTLN  AND SIZE                       GP99095
         OI    MOPFLAG,MFLPA  LPA RESIDENT                      GP99095
         BAS   R14,MAPADD    ADD TO LIST                        GP99095
         BR    R9            AND RETURN                         GP99095
         POP   USING                                            GP99095
         SPACE 1                                                GP97332
MAPDONE  ICM   R1,3,MODCNT   DID WE FIND ANYTHING?              GP97331
         BNZ   MAPGONE       YES                                GP97331
         L     R15,@MODMAP   MAKE SURE OF BASE                  GP97331
         MVC   MODNAME(8),=CL8'**TEST**' JUST IN CASE           GP97328
         MVC   MODADDR,=XL4'6000'    SET SOME VALUES?           GP97073
         MVC   MODSIZ,=XL4'10003000'   ARBITRARY                GP11350
         MVI   MODCNT+L'MODCNT-1,1  SET ONE ENTRY               GP97333
         ST    R15,@MODMEND  AND SAVE IT                        GP97332
         SPACE 1                                                GP97335
         PUSH  USING                                            GP11350
         DROP  R15                                              GP11350
MAPGONE  TM    MAPFLAG,MPFONCE  REPEAT PERFORMANCE?             GP99144
*NO*     BNZ   MAPCSECX      YES; JUST GET OUT                  GP99144
         OI    MAPFLAG,MPFONCE  SET FIRST-TIME DONE             GP99144
         TM    PROFLAGS,FGDOSUB  SUBROUTINE SEARCH?             GP00029
         BZ    MAPCOMPB      NO; BYPASS                         GP00029
         L     R6,@MODMAP    GET THE FIRST ENTRY   BXLE         GP11350
         LA    R8,MODLEN     GET ENTRY LENGTH    BXLE           GP97333
         L     R9,@MODMEND   GET LAST ENTRY      BXLE           GP97333
         USING MODDSECT,R6                                      GP11350
MAPCOMP  TM    MODFLAG,MFLPA+MFSECT  LPA OR ALREADY DONE ?      GP11350
         BNZ   MAPCOMPB      YES; NO CSECT SEARCH               GP99095
         OI    MODFLAG,MFSECT     PREVENT RECURSION             GP11350
         CLC   =C'PGMTR',MODNAME       THIS PROGRAM ?           GP11350
         BE    MAPCOMPB      YES; BYPASS                        GP11350
         CLC   =C'IGG',MODNAME         IBM TRANSIENT?           GP11350
         BE    MAPCOMPB      YES; BYPASS                        GP11350
         L     R15,=V(SUBSECT)                                  GP11350
         SUBCALL (R15),('NEW',,MODNAME,0),MF=(E,SECTLIST)       GP11350
         B     MAPSECNX      PROCESS RESULT                     GP11350
         SPACE 1                                                GP11350
MAPSECLP L     R15,=V(SUBSECT)                                  GP11350
         SUBCALL (R15),('NXT'),MF=(E,SECTLIST)  DATA            GP11350
MAPSECNX BXH   R15,R15,MAPSECEN   NO                            GP11350
         CLI   MOPNAME,C' '  BLANK SECT ?                       GP11350
         BNH   MAPSECLP        YES; IGNORE                      GP11350
         L     R0,MODADDR                                       GP11350
         AL    R0,MOPADDR    GET ADDRESS OFFSET                 GP11350
         ST    R0,MOPADDR    UPDATE TO ABSOLUTE                 GP11350
         L     R14,=A(TRTCHAR)    GET VALID CHAR TABLE          GP11350
         TRT   MOPNAME,0(R14)     ALL VALID?                    GP11350
         BNZ   MAPSECLP             NO; SKIP                    GP11350
         MVC   MOPFLAG,MODFLAG  COPY LPA & DONE BIT             GP11350
         BAS   R14,MAPADD    DO CONDITIONAL ADD                 GP11350
         B     MAPSECLP        GET ANOTHER CSECT                GP11350
         SPACE 1
MAPSECEN L     R15,=V(SUBSECT)                                  GP11350
         SUBCALL (R15),('END'),MF=(E,SECTLIST)  FREE WORK AREA  GP11350
MAPCOMPB BXLE  R6,R8,MAPCOMP                                    GP11350
MAPCSECX BASRET TYPE=BSM     RETURN TO CALLER                   GP11350
SECTLIST DC    A(1-1,0,3-3,0),X'80',AL3(MOPDSECT)               GP11350
         POP   USING                                            GP11350
         SPACE 1
*---------------------------------------------------------------------*
*   MAPADD TAKES THE INFORMATION FROM THE MOPNAME/ADDR/SIZE ENTRY. IF *
*   THE NAME DOES NOT EXIST, A NEW ENTRY IS ADDED TO THE TABLE.       *
*   IF THE NAME EXISTS, THE ENTRY IS REPLACED.                        *
*---------------------------------------------------------------------*
MAPADD   STM   R14,R15,20(R13)  SAVE A BIT                      GP99049
         L     R15,@MODMAP   LOAD FIRST ENTRY ADDRESS           GP99049
         LH    R14,MODCNT    GET MODULE COUNT                   GP99049
         LTR   R14,R14       ANY YET?                           GP99049
         BNP   MAPADDON      NO; BUILD FIRST ONE                GP99049
MAPADDLP CLC   MODNAME(L'MODNAME+L'MODADDR),MOPNAME  ALREADY HAVE IT?
         BE    MAPADDUP      YES; REFRESH THE ENTRY             GP99049
         LA    R15,MODLEN(,R15)  GET NEXT ENTRY                 GP99049
         BCT   R14,MAPADDLP  LOOK AGAIN                         GP99049
         SPACE 1                                                GP99049
MAPADDON LH    R14,MODCNT                                       GP99049
         LA    R14,1(,R14)                                      GP99049
         CH    R14,=Y(MAXMODNM)                                 GP99049
         BH    MAPERR1                                          GP99049
         STH   R14,MODCNT                                       GP99049
         ST    R15,@MODMEND  SAVE CURRENT POINTER               GP99049
MAPADDUP MVC   0(MOPLEN,R15),MOPDSECT  MAKE NEW ENTRY           GP99049
MAPADDEX XC    MOPDSECT(MOPLEN),MOPDSECT CLEAR FOR NEXT USE     GP99049
         LM    R14,R15,20(R13)                                  GP99049
         BR    R14           RETURN TO CALLER                   GP99049
         BASEND ,                                               GP97349
         EJECT ,                                                GP97333
***********************************************************************
*                                                                     *
*  NAMEFIND   RESOLVE UNRESOLVED RANGE TRACE ENTRIES                  *
*                                                                     *
***********************************************************************
NAMEFIND BASHEAD ,           SAVE A BIT                         GP97345
         L     R8,=A(@RANGES) MAIN MAPPING                      GP97345
         USING RNGDSECT,R8                                      GP97345
NAMELOOP LA    R5,RNGVARS    POINT TO HEAD OF VARIABLE LIST     GP97351
         USING VARDSECT,R5   DECLARE VARIABLE ENTRY             GP97351
NAMELVAR ICM   R5,15,VARLINK  NEXT CHAIN ENTRY                  GP97351
         BZ    NAMERVAR      DONE                               GP97351
         TM    VARFLAG1,FGVVALID+FGVSAD  RESOLVED OR BDDD ?     GP97351
         BNZ   NAMELVAR      YES; SKIP                          GP97351
         LA    R1,VARMOD     POINT TO NAME                      GP97351
         BAS   R9,NAMENAME   LOOK IT UP                         GP97351
           B   NAMELNUC      NO MATCH; TRY ANOTHER              GP97351
         USING MODDSECT,R7                                      GP97345
         L     R0,MODADDR                                       GP97351
NAMELSET A     R0,VARADDR    ADD OFFSET                         GP97351
         ST    R0,VARADDR                                       GP97351
         MVC   VARSIZE,MODSIZ                                   GP04070
         MVI   VARSIZE,0     KILL MODFLAG                       GP11350
         OI    VARFLAG1,FGVVALID  FLAG IT RESOLVED              GP97351
         B     NAMELVAR      TRY ANOTHER                        GP97351
         SPACE 1                                                GP99126
NAMELNUC DS    0H                                               GP05189
         AIF   (NOT &MVSXA).NUCSKIP                             GP05189
.NUCLOOK NUCLKUP BYNAME,NAME=VARMOD,ADDR=(R2)                   GP99144
         LTR   R15,R15       DID IT TAKE?                       GP99126
         BZ    NAMELCOM      YES; MAKE AN ENTRY                 GP99126
.NUCSKIP MVSQUERY INEPNM=VARMOD,OLOADPT=DB+4,OLEN=DB            GP05189
         BXH   R15,R15,NAMELVAR                                 GP99126
         LM    R1,R2,DB      GET LENGTH AND START               GP99126
NAMELCOM N     R2,=X'7FFFFFFF'  CLEAR HIGH BIT                  GP99126
         BZ    NAMELVAR      HUH?                               GP99144
         LR    R3,R1         FLIP SIZE                          GP99126
         MVC   MOPNAME,VARMOD  COPY NAME                        GP99126
         STM   R2,R3,MOPADDR  SET ENTRY AND SIZE                GP99126
         STM   R2,R3,VARADDR  SET ENTRY AND SIZE                GP04070
         OI    VARFLAG1,FGVVALID  FLAG IT RESOLVED              GP04070
         L     R15,@MODMEND  GET CURRENT TABLE END              GP99126
         LH    R14,MODCNT                                       GP99126
         LA    R14,1(,R14)                                      GP99126
         CH    R14,=Y(MAXMODNM)                                 GP99126
         BH    NAMELVAR      TOO MUCH, TOO SOON                 GP99126
         STH   R14,MODCNT                                       GP99126
         MVC   0(MOPLEN,R15),MOPDSECT  MAKE NEW ENTRY           GP99126
         ST    R15,@MODMEND  SAVE CURRENT POINTER               GP99126
         XC    MOPDSECT(MOPLEN),MOPDSECT CLEAR FOR NEXT USE     GP99126
         LR    R0,R2         COPY FOR COMMON CODE               GP99126
         B     NAMELSET                                         GP99126
         DROP  R5                                               GP97351
         SPACE 1                                                GP97351
NAMERVAR ICM   R8,15,RNGLINK  GET NEXT ENTRY OR OUT             GP97351
         BZ    NAMEVEND                                         GP97351
         TM    RNGFLAG1,FGRVALID  ALREADY VALIDATED?            GP97351
         BNZ   NAMERVAR      YES; SKIP IT                       GP04070
         CLI   RNGNAME,C' '  SPECIFIED BY NAME?                 GP97351
         BNH   NAMEADDR      NO; CHECK ADDRESS ONLY             GP97351
         LA    R1,RNGNAME    POINT TO NAME FIELD                GP97351
         BAS   R9,NAMENAME   LOOK IT UP                         GP97351
           B   NAMERNUC      NO MATCH; CHECK NUCLEUS AND LPA    GP04071
         LM    R0,R1,MODADDR  LOAD ADDRESS AND SIZE             GP97345
NAMERSET A     R0,RNGADDR    ADD OPTIONAL OFFSET                GP97345
         ST    R0,RNGADDR                                       GP97349
         ICM   R2,15,RNGSIZE  DID USER SPECIFY A SIZE?          GP97349
         BNZ   NAMEADDR      YES; RETAIN IT                     GP97349
         ST    R1,RNGSIZE    ELSE USE MODULE SIZE               GP97349
NAMEADDR DS    0H            NOTHING ELSE, FOR NOW?             GP97345
         OI    RNGFLAG1,FGRVALID  SET IT VALID                  GP97345
         TM    MODFLAG,MFLPA  LPA MODULE?                       GP99095
         BZ    NAMERVAR      NO                                 GP04070
         XI    MODFLAG,MFLPA+MFLPA2  ALLOW TRACING BY DEFAULT   GP99095
         B     NAMERVAR      DO ANOTHER                         GP04070
         SPACE 1                                                GP99126
NAMERNUC DS    0H                                               GP05189
         AIF   (NOT &MVSXA).SKIPNUC                             GP05189
         NUCLKUP BYNAME,NAME=RNGNAME,ADDR=(R2)                  GP99144
         LR    R0,R2         COPY START (ENTRY)                 GP99126
         LTR   R15,R15       DID IT TAKE?                       GP99126
         BZ    NAMERCOM      YES; MAKE AN ENTRY                 GP99126
.SKIPNUC MVSQUERY INEPNM=RNGNAME,OLOADPT=DB,OLEN=DB+4           GP05189
         BXH   R15,R15,NAMERVAR                                 GP04070
         LM    R0,R1,DB      GET START AND LENGTH               GP99126
         LR    R2,R0         COPY START                         GP99126
NAMERCOM N     R0,=X'7FFFFFFF'  CLEAR HIGH BIT                  GP99126
         BZ    NAMERVAR      HUH?                               GP99144
         MVC   MOPNAME,RNGNAME COPY NAME                        GP99126
         STM   R0,R1,MOPADDR  SET ENTRY AND END                 GP99126
         STM   R2,R3,RNGADDR  SET ENTRY AND SIZE                GP04070
         OI    RNGFLAG1,FGRVALID  FLAG IT RESOLVED              GP04070
         L     R15,@MODMEND  GET CURRENT TABLE END              GP99126
         LH    R14,MODCNT                                       GP99126
         LA    R14,1(,R14)                                      GP99126
         CH    R14,=Y(MAXMODNM)                                 GP99126
         BH    NAMERVAR      TOO MUCH, TOO SOON                 GP04070
         STH   R14,MODCNT                                       GP99126
         MVC   0(MOPLEN,R15),MOPDSECT  MAKE NEW ENTRY           GP99126
         ST    R15,@MODMEND  SAVE CURRENT POINTER               GP99126
         XC    MOPDSECT(MOPLEN),MOPDSECT CLEAR FOR NEXT USE     GP99126
         B     NAMERVAR                                         GP99126
         SPACE 1                                                GP00029
NAMEVEND LA    R5,@AT        POINT TO BREAK POINT CHAIN         GP00029
         USING AT@DSECT,R5                                      GP00029
NAME@ICM ICM   R5,15,AT@LINK                                    GP00029
         BZ    NAMEFINX                                         GP00029
         TM    AT@FLAG1,FG@VALID  RESOLVED?                     GP00029
         BNZ   NAME@ICM      YES; IGNORE                        GP00029
         TM    AT@FLAG1,FG@NAME  REQUEST BY NAME+OFFSET?        GP00029
         BZ    NAME@ICM      NO; IGNORE                         GP00029
         LA    R1,AT@NAME    POINT TO NAME                      GP00029
         BAS   R9,NAMENAME   RESOLVED?                          GP00029
           B   NAME@ICM      NO; TRY ANOTHER                    GP00029
         LA    R0,AT@COMNT   POINT TO COMMENT FIELD             GP00029
         L     R1,MODADDR    GET MODULE ADDRESS                 GP00029
         A     R1,AT@SIZE    PLUS OFFSET                        GP00029
         ST    R1,AT@ADDR    GET DESIRED ADDRESS                GP00029
         BASCALL SETAT       INVOKE IN AM31                     GP00029
         LTR   R15,R15       DID IT TAKE ?                      GP00029
         BNZ   NAME@ICM      NO; LEAVE IT                       GP00029
         OI    AT@FLAG1,FG@VALID  SHOW PLANTED                  GP00029
         B     NAME@ICM      GO FOR MORE                        GP00029
         SPACE 1                                                GP97351
NAMEFINX BASRET ,            RETURN                             GP97345
         SPACE 1                                                GP97351
*   LOCATE NAME ENTRY - R1 POINTS TO NAME; 0(R9) NO MATCH; 4(R9) R7 PTR
NAMENAME L     R7,@MODMAP    GET MAP ENTRIES                    GP97351
         USING MODDSECT,R7                                      GP97351
         LH    R0,MODCNT     NUMBER FOUND                       GP97351
NAMENLUP CLC   MODNAME,0(R1) SAME MODULE?                       GP97351
         BE    4(,R9)        YES                                GP97351
         LA    R7,MODLEN(,R7)  TRY AGAIN                        GP97351
         BCT   R0,NAMENLUP                                      GP97351
         BR    R9            NO MATCH                           GP97351
         SPACE 1                                                GP99049
MOPDSECT DS    0A            TEST DATA                          GP99049
MOPNAME  DC    CL8' '                                           GP99049
MOPADDR  DC    A(0)                                             GP99049
MOPFLAG  DC    0X'0'         FLAG                               GP99049
MOPSIZE  DC    F'0'                                             GP99049
MOPLEN   EQU   *-MOPDSECT    LENGTH OF ONE ENTRY                GP99049
MAPFLAG  DC    X'00'         FIRST-TIME FLAG                    GP99144
MPFONCE  EQU   X'80'                                            GP99144
         BASEND ,                                               GP97349
         EJECT ,                                                GP97333
***********************************************************************
*                                                                     *
*  HEADSUP    PRINT A DIAGNOSTIC HEADER PRIOR TO OUTPUT               *
*                                                                     *
***********************************************************************
HEADSUP  BASHEAD ,           SAVE FOR A RAINY DAY               GP97333
         TM    OTHFLAGS,FGMODLST  LISTED BEFORE ?               GP00214
         BNZ   HEADSDON      YES; JUST SHOW CHANGED REGISTERS   GP00214
         OI    OTHFLAGS,FGMODLST  LISTED NOW                    GP00214
         MVC   PLINE(L'HEADLINE),HEADLINE MOVE PATTERN HEADER   GP97333
         TIME  DEC           GET TIME AND DATE IN DECIMAL       GP97333
         ST    R1,DB         STASH THE DATE                     GP97333
         TM    DB,255-1      ANY CENTURY?                       GP97333
         BNZ   *+4+6         PERHAPS                            GP97333
         AP    DB(4),=P'1900000'  PREPEND CENTURY               GP97333
         ED    HEADDATE-HEADLINE+PLINE(L'HEADDATE),DB           GP97333
         ST    R0,DB         STASH THE TIME                     GP97333
         OI    DB+3,X'0F'    MAKE PROPER SIGN                   GP97333
         ED    HEADTIME-HEADLINE+PLINE(L'HEADTIME),DB           GP97333
         BASCALL WRITE              WRITE THE HEADER            GP97333
         LH    R6,MODCNT     GET NUMBER OF MODULES/CSECTS       GP97333
         LTR   R6,R6         NONE?                              GP97333
         BNP   HEADSDON                                         GP97333
         LA    R5,MODNAME-MODDSECT OFFSET TO NAME               GP97335
         BAS   R14,MSORT     SORT BY NAME                       GP97335
          NOP   0            IGNORE ERRORS                      GP97336
         L     R5,@MODMAP    LOAD FIRST MODULE ENTRY            GP97333
         USING MODDSECT,R5   DECLARE ENTRY MAPPING              GP97333
         MVC   PLINE(L'HEADMOD),HEADMOD                         GP97333
         LA    R2,PLINE+32   POINT TO NEXT ENTRY                GP97333
         LA    R4,(LPL+2)/(26+2)-1  REMAINING ON LINE           GP97333
         B     HEADSMD2                                         GP97333
HEADSMD1 LA    R2,PLINE+4    FIRST MODULE ENTRY PER LINE        GP97333
         LA    R4,(LPL+2)/(26+2)  ENTRIES PER LINE              GP97333
HEADSMD2 DS    0H                                               GP97336
         LM    R14,R15,MODNAME LOAD THE NAME                    GP97336
         LA    R0,7          AT LEAST ONE NON-BLANK?            GP97336
HEADSMD3 CLM   R15,1,BLANKS  TRAILING BLANK?                    GP97336
         BNE   HEADSMD4      NO                                 GP97336
         SRDL  R14,8         SHIFT                              GP97336
         ICM   R14,8,BLANKS  AND PAD ON LEFT                    GP97336
         BCT   R0,HEADSMD3                                      GP97336
HEADSMD4 STM   R14,R15,0(R2)  STASH IN OUTPUT LINE              GP97336
         L     R0,MODADDR    GET ADDRESS                        GP97333
         BAS   R9,HEX2EBC    CONVERT FOR PRINTING               GP97333
         MVC   L'MODNAME+1(8,R2),HEXEDOUT                       GP97333
         L     R0,MODSIZ     GET SIZE                           GP97333
         N     R0,=X'00FFFFFF'    DELETE MODFLAG                GP11350
         BAS   R9,HEX2EBC                                       GP97333
         MVC   L'MODNAME+1+8+1(8,R2),HEXEDOUT                   GP97333
         LA    R5,MODLEN(,R5)  NEXT MAP ENTRY                   GP97333
         LA    R2,26+2(,R2)  NEXT PRINT ENTRY                   GP97333
         BCT   R6,HEADSMD5   ACCOUNT FOR ENTRY                  GP97333
         B     HEADSMD9      NO MORE                            GP97333
HEADSMD5 BCT   R4,HEADSMD2   DO NEXT ENTRY ON THIS LINE         GP97333
         BASCALL WRITE              WRITE THE LINE              GP97333
         B     HEADSMD1      START A NEW LINE                   GP97333
HEADSMD9 BASCALL WRITE              WRITE THE LAST LINE         GP97333
         LH    R6,MODCNT     GET NUMBER OF MODULES/CSECTS       GP97333
         LA    R5,MODADDR-MODDSECT OFFSET TO ADDRESS            GP97335
         BAS   R14,MSORT     SORT BY ADDRESS/LENGTH             GP97335
          NOP   0            IGNORE ERRORS                      GP97336
HEADSDON BAS   R9,GRFORM      DUMP THE CALLER'S REGISTERS INITIALLY
         BAS   R9,ARFORM               DUMP ACCESS REGISTERS    GP00204
         BAS   R9,FPFORM               DUMP FLOATING REGISTERS  GP97331
         BASCALL WRITE       WRITE 1 BLANK LINE                 GP97087
HEADSUPX BASRET ,            AS YOU WERE                        GP97333
         DROP  R5                                               GP97333
         SPACE 1                                                GP97333
MSORT    MSORT ADDR=*@MODMAP,SIZE=MODLEN,NUM=(R6),OFF=(R5),COMPL=8
         SPACE 1                                                GP97333
HEADTEXT DC    C'PGMTRACE PROGRAM - RUN ON'                     GP97333
HEADDATE DC    X'40212020204B202020',C' AT'                     GP97333
HEADTIME DC    X'4021207A2020'                                  GP97333
HEADLINE EQU   HEADTEXT,*-HEADTEXT,C'C'  DEFINE PRINT LINE PATTERN
HEADMOD  DC    C'  MODULE/CSECT DIRECTORY:'                     GP97333
         SPACE 1                                                GP97349
         LTORG ,                                                GP97349
         BASEND ,                                               GP97349
         EJECT ,                                                GP97072
DATASECT CSECT ,                                                GP97349
***********************************************************************
*                                                                     *
*  TRACEOFF    TURN OFF PRINTING AND CONTINUE TRACE ROUTINE     GP97072
*                                                                     *
***********************************************************************
         ENTRY TRACEOFF                                         GP97072
         PUSH  USING                                            GP97072
         DROP  ,                                                GP97072
         USING TRACEOFF,R15                                     GP97072
TRACEOFF OI    OPTFLAGS,FGNOPRT        TURN OFF PRINTING        GP97072
         BR    R14           AND  RETURN                        GP97342
         POP   USING                                            GP97072
         SPACE 2                                                GP97072
***********************************************************************
*                                                                     *
*  TRACKILL    TURN OFF PRINTING AND STOP TRACING               GP97072
*                                                                     *
***********************************************************************
         ENTRY TRACKILL                                         GP97072
         PUSH  USING                                            GP97072
         DROP  ,                                                GP97072
         USING TRACKILL,R15                                     GP97072
TRACKILL OI    OPTFLAGS,FGQUIT    TERMINATE TRACE               GP97084
         L     R1,=A(PGMTRACE)                                  GP00029
         LA    R0,TRACE-PGMTRACE(,R1)                           GP00029
         ST    R0,ADVECT+8-PGMTRACE(R1) FLIP TO PROCESS AGAIN   GP00029
         BR    R14                                              GP97072
         POP   USING                                            GP97072
         SPACE 2                                                GP97072
***********************************************************************
*                                                                     *
*  TRACEAT    SET/RESET A BREAKPOINT AT (R1) ADDRESS - RESET IF MINUS *
*                                                                     *
***********************************************************************
         ENTRY TRACEAT                                          GP97072
         PUSH  USING                                            GP97072
         DROP  ,                                                GP97072
         USING TRACEAT,R15                                      GP97072
TRACEAT  DS    0H            NOT WRITTEN YET                    GP97084
         BR    R14                                              GP97072
         POP   USING                                            GP97072
         SPACE 2                                                GP97072
***********************************************************************
*                                                                     *
*  TRACEON     TURN ON  PRINTING AND CONTINUE TRACE ROUTINE     GP97072
*                                                                     *
***********************************************************************
         ENTRY TRACEON                                          GP97072
         PUSH  USING                                            GP97072
         DROP  ,                                                GP97072
         USING TRACEON,R15                                      GP97072
TRACEON  NI    OPTFLAGS,255-FGNOPRT    TURN ON PRINTING         GP97072
         TM    PROFLAGS,FGSYNEOF  DID USER READ INSTRUCTIONS?   GP97342
         BNZR  R14           YES; RETURN                        GP97342
         L     R15,=A(TRACE)  ELSE GET TRACE INITIALIZATION     GP97342
         BR    R15           AND START TRACING CORRECTLY        GP97342
         POP   USING                                            GP97072
         SPACE 2                                                GP98316
***********************************************************************
*                                                                     *
*  TRACEOPT    SET BASIC OPTIONS                                GP98316
*                                                                     *
***********************************************************************
         ENTRY TRACEOPT                                         GP98316
         PUSH  USING                                            GP98316
         DROP  ,                                                GP98316
         USING TRACEOPT,R15                                     GP98316
TRACEOPT NI    OPTFLAGS,255-FGNOPRT    TURN ON PRINTING         GP98316
         STC   R1,TRCFLAGS   YES; SAVE AS (PRELIMINARY)         GP98316
         TM    PROFLAGS,FGSYNEOF  DID USER READ INSTRUCTIONS?   GP98316
         BNZR  R14           YES; RETURN                        GP98316
         L     R15,=A(TRACE)  ELSE GET TRACE INITIALIZATION     GP98316
         BR    R15           AND START TRACING CORRECTLY        GP98316
         POP   USING                                            GP98316
         EJECT                                                  GP97349
***********************************************************************
*                                                                     *
*  GRFORM      GENERAL REGISTER FORMATTER                             *
*  ARFORM      ACCESS REGISTER FORMATTER                              *
*  FPFORM      FLOATING REGISTER FORMATTER                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97349
GRFORM   SUBHEAD ,                     SAVE RETURN ADDRESS      GP97331
         CLC   LPRTREGS(4*16),NEXTREG  ALREADY PRINTED THESE?   GP00169
         BE    GRFORMX       YES; DON'T SHOW AGAIN              GP00169
         MVC   LPRTREGS(4*16),NEXTREG  REMEMBER WHAT WE PRINTED GP00169
         LA    R5,2          TWO GROUPS OF REGISTERS PER LINE   GP97331
         LA    R4,4          FOUR REGISTERS PER GROUP           GP97331
         MVC   PLMODNM+2(L'RM0),RM0     'R0-R7'                 GP97090
         LA    R2,NEXTREG              ADDRESS OF 1ST 8 REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP97331
         MVC   PLMODNM+2(L'RM8),RM8     'R8-R15'                GP97090
         LA    R2,NEXTREG+32           ADDRESS OF 2ND 8 REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP97331
GRFORMX  SUBRET ,                      LOAD RETURN ADDRESS      GP97332
         SPACE 1                                                GP00029
ARFORM   SUBHEAD ,                     SAVE RETURN ADDRESS      GP00029
         CLC   LPRTACRS(4*16),NEXTACR  ALREADY PRINTED THESE?   GP00029
         BE    ARFORMX       YES; DON'T SHOW AGAIN              GP00029
         MVC   LPRTACRS(4*16),NEXTACR  REMEMBER WHAT WE PRINTED GP00029
         LA    R5,2          TWO GROUPS OF REGISTERS PER LINE   GP00029
         LA    R4,4          FOUR REGISTERS PER GROUP           GP00029
         MVC   PLMODNM+2(L'RM0),AM0    ACCESS REG 0-7           GP00029
         LA    R2,NEXTACR              ADDRESS OF 1ST 8 REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP00029
         MVC   PLMODNM+2(L'RM8),AM8     'R8-R15'                GP00029
         LA    R2,NEXTACR+32           ADDRESS OF 2ND 8 REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP00029
ARFORMX  SUBRET ,                      LOAD RETURN ADDRESS      GP00029
         SPACE 1                                                GP97349
FPFORM   SUBHEAD ,                     SAVE RETURN ADDRESS      GP97331
         TM    OTHFLAGS,FGUFTP+FGU2FTP  USED FLOATING REGS?     GP00169
         BZ    FPFORMX       NO; SKIP PRINTING THEM             GP97332
         CLC   LPRTFPRG(16*8),FM0   ALREADY PRINTED THESE?      GP00169
         BE    FPFORMX       YES; DON'T SHOW AGAIN              GP00169
         MVC   LPRTFPRG(16*8),FM0   REMEMBER WHAT WE PRINTED    GP00169
         LA    R5,4          FOUR GROUPS OF REGISTERS PER LINE  GP97331
         LA    R4,2          TWO REGISTERS PER GROUP            GP97331
         MVC   PLMODNM+2(L'FM0),FM0     'F0-F6'                 GP97090
         LA    R2,FPR0                 ADDRESS OF FLOATING REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP97331
         TM    OTHFLAGS,FGU2FTP  USED NEW FLOATING REGS?        GP00169
         BZ    FPFORMX       NO; SKIP PRINTING THEM             GP00169
         MVC   PLMODNM+2(L'FM0),FM1     'F1-F7'                 GP00169
         LA    R2,FPR1                 ADDRESS OF FLOATING REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP00169
         MVC   PLMODNM+2(L'FM0),FM8     'F8-FE'                 GP00169
         LA    R2,FPR8                 ADDRESS OF FLOATING REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP00169
         MVC   PLMODNM+2(L'FM0),FM9     'F9-FF'                 GP00169
         LA    R2,FPR8                 ADDRESS OF FLOATING REGISTERS
         BAS   R9,REGFORM              PLACE THEM IN PRINT LINE GP00169
FPFORMX  SUBRET ,                      LOAD RETURN ADDRESS      GP97332
         SPACE 1                                                GP97349
*   FORMAT 8 REGISTERS FOR PRINTING                             GP97349
REGFORM  SUBHEAD ,                     SAVE RETURN ADDRESS      GP97331
         LA    R3,PLINE+14   STARTING POINT IN PRINT LINE       GP97335
         LR    R15,R5        COPY NUMBER OF GROUPS PER LINE     GP97331
REGROUP  LR    R14,R4        RELOAD NUMBER OF REGISTERS PER GROUP
REREG    L     R0,0(,R2)               GET THE VALUE OF A REGISTER
         BAS   R9,HEX2EBC              CONVERT IT FOR PRINTING  GP97072
         MVC   0(8,R3),HEXEDOUT        PLACE IN PRINT LINE      GP97085
         LA    R2,4(,R2)               POINT AT NEXT REGISTER   GP97349
         LA    R3,10(,R3)              NEXT SPACE IN PRINT LINE GP97331
         BCT   R14,REREG     DO NEXT REGISTER                   GP97331
         LA    R3,2(,R3)       MAKE A GROUP SPACER              GP97331
         BCT   R15,REGROUP   DO NEXT GROUP                      GP97331
         BASCALL STACK       PRINT THE LINE                     GP97347
         SUBRET ,                      LOAD RETURN ADDRESS      GP97332
         EJECT                                                  GP97072
***********************************************************************
*                                                                     *
*  HEX2EBC     BINARY TO EBCDIC CONVERSION ROUTINE                    *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97072
HEX2EBC  ST    R0,HEXEDIN    STORE THE WORD TO BE CONVERTED     GP97072
         UNPK  HEXEDOUT(9),HEXEDIN(5)                           GP97072
         TR    HEXEDOUT(8),HEXTRTAB  TRANSLATE HEX TO PRINTABLE GP97072
         BR    R9                      RETURN                   GP97072
HEXEDIN  DC    F'0'          HEX INPUT                          GP97072
HEXEDOUT DC    CL8' ',C' '   PRINTABLE HEX OUTPUT               GP97072
HEXTABLE DC    C'0123456789ABCDEF'                              GP97072
HEXTRTAB EQU   HEXTABLE-C'0'  VIRTUAL BASE FOR HEX TRANSLATION  GP97072
         SPACE 3                                                GP97342
***********************************************************************
*                                                                     *
*  EBC2INT     EBCDIC INTEGER CONVERSION TO BINARY                    *
*              INPUT IN DB (8)                                        *
*        RETURN TO R9 WHEN INPUT IS INVALID                           *
*        ELSE TO 4(R9) WITH BINARY VALUE IN R0                        *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97347
EBC2INT  SUBHEAD ,           SAVE A LITTLE                      GP97347
         CLI   DB+7,C'0'     USER REQUESTED HEX MODE?           GP97347
         BE    EBC2HEX2      YES; TREAT AS HEX                  GP97347
         L     R15,=A(TRTINTVL)  INT VALIDITY CHECK TABLE       GP97347
         TRT   DB2,0(R15)    CHECK FOR VALID DIGITS             GP97347
         BNZ   EBC2HEX2      WAS TAKE ERROR EXIT / TRY AS HEX   GP97347
         PACK  DB,DB2        PACK                               GP97347
         CVB   R0,DB         LOAD BINARY VALUE OF STRING        GP97347
         SUBRET RS=R1,VECT=4   RETURN R0 TO CALLER              GP97347
         SPACE 3                                                GP97347
***********************************************************************
*                                                                     *
*  EBC2HEX     EBCDIC HEX/INTEGER CONVERSION TO BINARY                *
*              INPUT IN DB (8)                                        *
*        RETURN TO R9 WHEN INPUT IS INVALID                           *
*        ELSE TO 4(R9) WITH BINARY VALUE IN R0                        *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP97342
EBC2HEX  SUBHEAD ,           SAVE A LITTLE                      GP97342
EBC2HEX2 L     R15,=A(TRTHEXVL)  HEX VALIDITY CHECK TABLE       GP97342
         TRT   DB2,0(R15)    CHECK FOR VALID HEX                GP97342
         BNZ   EBCTOBAD      TAKE ERROR EXIT                    GP97342
         L     R15,=A(TRTHEXDT)  GET FINAGLE TABLE              GP97342
         TR    DB2,0(R15)    CONVERT TO UNZONED HEX             GP97342
         PACK  DB(5),DB2(9)                                     GP97342
         L     R0,DB         LOAD BINARY VALUE OF HEX STRING    GP97342
         SUBRET RS=R1,VECT=4   RETURN R0 TO CALLER              GP97342
EBCTOBAD SR    R0,R0                                            GP97342
         SUBRET RS=R1        RETURN ERROR                       GP97342
         TITLE 'P G M T R A C E  ***  INSTRUCTION EXECUTION'    GP97342
***********************************************************************
*                                                                     *
*  EXECOP  - INSTRUCTION EXECUTION                                    *
*                                                                     *
*  MOVE THE USER'S INSTRUCTION TO LABEL EXTARGET, FOLLOWED BY 0-2     *
*    NO-OP INSTRUCTIONS. USES CSRL16JC ROUTINE TO EXECUTE TARGET      *
*    WITH USER'S ORIGINAL REGISTERS, AMODE, AND ACCESS REGISTERS.     *
*                                                                     *
*  SUCCESSFUL EXECUTION IS FOLLOWED BY BAKR TO EXTRACT REGISTERS,     *
*    NEW PSW FLAGS, AND ACCESS REGISTERS.                             *
*                                                                     *
*  FGINEX FLAGS, AND R13 CODE REQUIRED FOR ESPIE EXIT.                *
*  ESPIE EXIT GETS CONTROL ON ERROR, AND FORMATS DEBUG INFORMATION.   *
*                                                                     *
***********************************************************************
*                                                                     *
*      MUST PRECEDE DATA AREA DUE TO LIMITED ADDRESSABILITY           *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00204
         PUSH  USING                                            GP00204
         SPACE 1                                                GP00204
EXECOP   SUBHEAD ,           INSTR/FLAGS PASSED VIA R3          GP00204
         ST    R13,@SAVEXEC  SAVE SAVE AREA POINTER FOR RETURN  GP00204
         MVC   EXTARGET,0(R3)    GET INSTRUCTION/NO-OPS         GP00204
         ONSPIE 0,SAVE=YES   NO RECOVERY FROM ERROR             GP00204
         AIF   (&MVSESA).USEL16J                                GP06213
         STM   R0,R15,SAVMVS38                                  GP06213
         XC    L16J(L16JLEN),L16J  JUST IN CASE                 GP06213
         MVC   L16JGRS(16*4),PREVREG                            GP06213
         LA    R0,EXTARGET   GET ADDRESS AND AMODE              GP06213
         ST    R0,L16JPSW+4                                     GP06213
         LA    R0,L16J       PASS PARAMETER LIST                GP06213
         LA    R1,DB2        RETURN CODE                        GP06213
         STM   R0,R1,DB      MAKE PARM LIST                     GP06213
         OI    DB+4,X'80'    JUST IN CASE                       GP06213
         SR    R0,R0         FOR CC SETTING                     GP06246
         SR    R15,R15                                          GP06246
         ICM   R15,8,PREVCC  GET CONDITION CODE                 GP06246
         ICM   R0,8,PREVPM   AND PROGRAM MASK                   GP06246
         OR    R15,R0          COMBINE                          GP06246
         SPM   R15           SET CONDITION CODE AND PGM MASK    GP06246
         OI    OTHFLAGS,FGINEXBK  EXEC STACK POP FLAG           GP06213
         LM    R0,R15,L16JGRS     FAKE IT                       GP06213
         SPACE 1                                                GP06213
         CNOP  0,4           UNFORTUNATELY NEEDED               GP06213
EXTARGET DC    XL6'0'        CODE/NOP AS NEEDED                 GP06213
         NOPR  0             DISAMBIGUATE INTERRUPTS            GP06213
EXTAGOOD DC    H'0'          OOPS - STORE REGS, CC, ETC.        GP06213
         NOPR  0             DISAMBIGUATE INTERRUPTS            GP06213
         SPACE 1                                                GP06213
         PUSH  USING                                            GP06213
         DROP  ,                                                GP06213
EXECSPIE BASR  R4,0                                             GP06213
         USING *,R4                                             GP06213
         LM    R0,R15,SAVMVS38                                  GP06213
         POP   USING                                            GP06213
         AGO   .COML16J                                         GP06213
.USEL16J NI    OTHFLAGS,255-FGINEXEC-FGINEXBK  RESET BAKR FLAG  GP00204
         XC    L16J(L16J_LEN),L16J  JUST IN CASE                GP00204
         MVC   L16JLENGTH,=AL4(L16J_LEN)                        GP00204
         MVC   L16JGRS(16*4),PREVREG                            GP00204
         MVC   L16JARS(16*4),PREVACR                            GP00204
         MVI   L16JPSW,X'07'  SET FIRST PSW BYTE NORMAL         GP03127
         MVC   L16JPSW+1(1),PREVPKMD  SET PROTECT KEY AND MODE  GP03127
         LA    R0,EXTARGET   GET ADDRESS AND AMODE              GP00204
         ST    R0,L16JPSW+4                                     GP00204
         OC    L16JPSW+4(1),PREVAM                              GP00214
         IC    R1,PREVACM    GET ACCESS REGISTER MODE           GP00204
         N     R1,=A(FGACM)  JUST IN CASE                       GP00204
         SRL   R1,2          BOTTOM OUT                         GP00204
         IC    R1,DCCCODE2(R1)  GET REPLACEMENT                 GP05189
         STC   R1,L16JPSW+2(1)  SET ACCESS REGISTER MODE        GP00204
         OC    L16JPSW+2(1),PREVCC                              GP00204
         OC    L16JPSW+2(1),PREVPM                              GP00204
         OI    L16JFLAGS,L16JPROCESSARS  PASS ACCESS REGISTERS  GP00204
         AM31  ,             GET HIGH                           GP00204
         LA    R0,L16J       PASS PARAMETER LIST                GP00204
         LA    R1,DB2        RETURN CODE                        GP00204
         STM   R0,R1,DB      MAKE PARM LIST                     GP00204
         OI    DB+4,X'80'    JUST IN CASE                       GP00204
         LA    R1,DB                                            GP00204
         LA    R13,LOCSAVE1-LOCSAVE(,R13)  FAKE SA              GP00204
*MESSY   CALL  CSRL16J       INVOKE WITH REGISTERS & PSW        GP00204
         L     R15,CVTPTR    GET THE CVT                        GP00204
         L     R15,X'220'(,R15)                                 GP00204
         L     R15,X'20'(,R15)                                  GP00204
         L     R15,0(,R15)                                      GP00204
         BASR  R14,R15       INVOKE CSRL16J SERVICE             GP00204
         EX    0,*           OOPS                               GP00204
         SPACE 1                                                GP00204
         DC    X'87654321'   MAKE POINTER TO USER'S INSTRUCTION GP00204
EXTARGET DC    XL6'0'        CODE/NOP AS NEEDED                 GP00204
         BAKR  0,0           STACK PSW AND REGISTERS            GP00204
         DROP  ,                                                GP00204
         SAC   0             RESET AR MODE                      GP00204
         BASR  R8,0          MAKE LOCAL BASE                    GP00204
         USING *,R8                                             GP00204
         TM    OTHFLAGS,FGINEXBK  SECOND TIME ?                 GP00204
         BNZ   EXECSPIE      YES; GET OUT                       GP00204
         OI    OTHFLAGS,FGINEXBK  EXEC STACK POP FLAG           GP00204
         EREG  R0,R7         RETRIEVE LOW HALF                  GP00204
         STM   R0,R7,NEXTREG                                    GP00204
         STAM  R0,R7,NEXTACR                                    GP00204
         BASR  R4,0                                             GP00204
         DROP  R8                                               GP00204
         USING *,R4                                             GP00204
         EREG  R8,R15        RETRIEVE HIGH HALF                 GP00204
         STM   R8,R15,NEXTREG+8*4                               GP00204
         STAM  R8,R15,NEXTACR+8*4                               GP00204
         LA    R2,1          REQUEST PSW                        GP00204
         ESTA  R2,R2         EXTRACT PSW                        GP00204
         STCM  R3,8,NEXTAM   SET 24/31 BIT MODE                 GP00204
         STCM  R2,4,PREVPKMD  SET PROTECT KEY AND MODE          GP03127
         STCM  R2,2,NEXTPM                                      GP00204
         STCM  R2,2,NEXTCC                                      GP00204
         N     R2,=A(FGACM)  CLEAN ARM BITS                     GP00204
         SRL   R2,6          BOTTOM OUT                         GP00204
         IC    R2,DCCCODE(R2)   GET REPLACEMENT                 GP05189
         STC   R2,NEXTACM    SET ACCESS REGISTER MODE           GP00204
         NC    NEXTIL(4),=AL1(FGIIL,FGICC,FGIPM,FGACM) MASK ALL FIELDS
         PR    ,             UNSTACK AND RECURSE                GP00204
         CSRYL16J DSECT=NO   LOAD ALL REGS AND EXECUTE          GP00204
EXECSPIE BASR  R4,0                                             GP00204
         USING *,R4                                             GP00204
.COML16J ONSPIE REST=YES     RESTORE ESPIE RECOVERY             GP97353
         NI    OTHFLAGS,255-FGINEXEC-FGINEXBK  RESET EXEC FLAGS GP98317
         L     R13,@SAVEXEC  RESTORE SAVE AREA POINTER          GP98317
         SUBRET ,            RETURN TO CALLER                   GP97339
DCCCODE2 DC    X'008040C0'   CONDITION CODE LOOKUP              GP05189
         AIF   (&MVSESA).BYPL16J                                GP06213
         SPACE 1                                                GP06213
L16J     DS    0D            PSEUDO-CSRL16J PARM LIST           GP06213
L16JPSW  DS    D             NEW PSW                            GP06213
L16JGRS  DS    16A(0)        NEW REGISTERS                      GP06213
L16JLEN  EQU   *-L16J        LENGTH TO CLEAR                    GP06213
SAVMVS38 DC    16A(0)        SAVE REGISTERS OVER SPIE EXIT      GP06213
.BYPL16J POP   USING                                            GP00204
         TITLE 'P G M T R A C E  ***  SUBROUTINES AND DATA AREAS'
***********************************************************************
*                                                                     *
*   DATA AREAS AND COMMON SUBROUTINES AND RECOVERY CODE               *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP00169
DATASECT CSECT ,                                                GP97349
         SPACE 2                                                GP97342
*   COMMON CONVERSION ROUTINES; CALLED ON R14, USE R9, 0-2      GP97342
*                                                               GP97342
OLDXBD   LA    R2,PREVREG    POINT TO OLD REGISTER              GP97345
GETXBD   IC    R1,XCELL+1    GET R3 FIELD                       GP97342
         N     R1,OOOOOOOF   MASK IT                            GP97342
         BZ    GETBD         IGNORE INDEX IF ZERO               GP97342
         SLL   R1,2          CONVERT TO OFFSET                  GP97342
         L     R0,0(R1,R2)   GET NEW VALUE                      GP97342
         B     GETBD2                                           GP97342
         SPACE 1                                                GP97342
OLDBD    LA    R2,PREVREG    POINT TO OLD REGISTER              GP97345
GETBD    SR    R0,R0         CLEAR INDEX CONTRIBUTION           GP97342
GETBD2   IC    R1,0(,R3)     LOAD (B)                           GP97342
         N     R1,OOOOOOFO   MASK                               GP97342
         BZ    GETDDD        ZERO; IGNORE                       GP97342
         SRL   R1,2          CONVERT TO OFFSET                  GP97342
         A     R0,0(R1,R2)   ADD IT IN                          GP97342
GETDDD   ICM   R1,3,0(R3)    GET (B)DDD                         GP97342
         N     R1,OOOOOFFF   KEEP ONLY DDD                      GP97342
         AR    R0,R1         GET COMBINED VALUE                 GP97342
         LR    R1,R0         COPY IT                            GP97342
         N     R1,NEXTMASK-NEXTREG(,R2)  ADJUST FOR ADDRESSING MODE
         BR    R14                                              GP97342
         SPACE 3                                                GP98081
***********************************************************************
*                                                                     *
*  SHOWPSW     CALLED BY SHOWPSW MACRO FOR INTERNAL DEBUGGING         *
*                                                                     *
***********************************************************************
         SPACE 1
ZZDEBUG  CSECT ,
         PUSH  USING
SHOWPSW  BASHEAD ,           SAVE REGISTERS
         LR    R4,R1         SAVE INPUT PARAMETER
         L     R5,=A(HEX2EBC)
         USING HEX2EBC,R5
         MVC   HOLDPLIN,PLINE
         MVC   SHOWPOUT,0(R4)   TRACE ID
 AGO .SHOTWO
         ICM   R0,15,PREVIC
         BAS   R9,HEX2EBC
         MVC   SHOWPIC,HEXEDOUT   IC
         ICM   R0,15,PREVAM
         BAS   R9,HEX2EBC
         MVC   SHOWPAM,HEXEDOUT
         MVC   SHOWPIL,HEXEDOUT+2
         MVC   SHOWPCC,HEXEDOUT+4
         MVC   SHOWPPM,HEXEDOUT+6
         ICM   R0,12,PREVACM
         BAS   R9,HEX2EBC
         MVC   SHOWPACM,HEXEDOUT
         MVC   SHOWPPKM,HEXEDOUT+2
         MVC   PLINE(SHOWPLEN),SHOWPSWL  FIRST LINE
         BASCALL STACK
         MVC   SHOWPOUT,SHOWPOUT-1
.SHOTWO  ICM   R0,15,NEXTIC
         BAS   R9,HEX2EBC
         MVC   SHOWPIC,HEXEDOUT   IC
         ICM   R0,15,NEXTAM
         BAS   R9,HEX2EBC
         MVC   SHOWPAM,HEXEDOUT
         MVC   SHOWPIL,HEXEDOUT+2
         MVC   SHOWPCC,HEXEDOUT+4
         MVC   SHOWPPM,HEXEDOUT+6
         ICM   R0,12,NEXTACM
         BAS   R9,HEX2EBC
         MVC   SHOWPACM,HEXEDOUT
         MVC   SHOWPPKM,HEXEDOUT+2
         MVC   PLINE(SHOWPLEN),SHOWPSWL  SECOND LINE
         ICM   R0,15,NEXTPSW
         BAS   R9,HEX2EBC
         MVC   SHOWPSW1,HEXEDOUT
         ICM   R0,15,NEXTPSW+4
         BAS   R9,HEX2EBC
         MVC   SHOWPSW2,HEXEDOUT
         BASCALL STACK
SHOWPSWX MVC   PLINE(L'HOLDPLIN),HOLDPLIN  RESTORE
         BASRET TYPE=BSM
SHOWPSWL DC    C' SHOWPSW: '
SHOWPOUT DC    CL8' ',C' '
SHOWPIC  DC    CL8' ',C' '   NEW VALUE FOR THE LOCATION CNTR
SHOWPAM  DC    CL2' ',C' '   ADDRESSING MODE
SHOWPIL  DC    CL2' ',C' '   INSTRUCTION LENGTH
SHOWPCC  DC    CL2' ',C' '   CONDITION CODE
SHOWPPM  DC    CL2' ',C' '   PROGRAM MASK
SHOWPACM DC    CL2' ',C' '   ACCESS MODE
SHOWPPKM DC    CL2' ',C' '   PROTECT KEY/MODE
         DC    C'ERR PSW '
SHOWPSW1 DC    CL8' ',C' '
SHOWPSW2 DC    CL8' '
SHOWPLEN EQU   *-SHOWPSWL    LENGTH OF THIS THING
         BASEND ,                                               GP00204
         POP   USING
DATASECT CSECT ,
         SPACE 1                                                GP99111
  PUSH PRINT *****DEBUG*****                                    GP99116
  PRINT ON,GEN,DATA ****DEBUG*****                              GP99116
DBTAREA  DEBTRACE MODE=D     PERMANENT - FOR DIAGNOSE CODE CD   GP03028
@PRINTER EQU   DBT@UDCB,4,C'A'  DEFINE FOR PRTV MACRO           GP99116
  POP  PRINT *****DEBUG*****                                    GP99116
DB       DC    D'0'  1/2     ORIGIN OF THE DATA AREA            GP97333
DB2      DC    D'0'  2/3     WORK SPACE                         GP97333
DB3      DC    D'0'  3/1     WORK SPACE                         GP00006
DB4      DC    D'0'  4/4     WORK SPACE                         GP00006
         ORG   DB3                                              GP06266
STCKLIST $TCKCONV MF=L                                          GP06266
         ORG   ,                                                GP06266
FPR0     DC    D'0'                    FLOATING POINT REGISTERS GP00169
FPR2     DC    D'0'                    OF THE TRACED PROGRAM    GP00169
FPR4     DC    D'0'                                             GP00169
FPR6     DC    D'0'                                             GP00169
FPR1     DC    D'0'          NEW FLOATING POINT REGISTERS       GP00169
FPR3     DC    D'0'                    OF THE TRACED PROGRAM    GP00169
FPR5     DC    D'0'                                             GP00169
FPR7     DC    D'0'                                             GP00169
FPR8     DC    D'0'                                             GP00169
FPR10    DC    D'0'                                             GP00169
FPR12    DC    D'0'                                             GP00169
FPR14    DC    D'0'                                             GP00169
FPR9     DC    D'0'                                             GP00169
FPR11    DC    D'0'                                             GP00169
FPR13    DC    D'0'                                             GP00169
FPR15    DC    D'0'                                             GP00169
ESTAEPRM DC    A(DCBLIST)    POINT TO  SYSTRACE DCB ADDRESS     GP97087
@SAVEXEC DC    A(0)          SAVE AREA ADDRESS OVER EXECOP      GP98317
COMMAND  DC    CL8' '        INITOPTS - CURRENT COMMAND         GP99163
BLDLIST  DC    AL2(1,74) 1/3 SINGLE MEMBER BLDL                 GP99144
EPNAME   DC    CL8' '    2/3 NAME OF PGM TO BE TRACED BY PGMTRACE
         DC    XL(12+X'1F'*2)'0'  3/3    DIRECTORY DATA         GP99144
         SPACE 1                                                GP00204
*  PGMTRADA CALL PARAMETER LIST                                 GP00204
         PUSH  PRINT                                            GP00204
         PRINT ON,GEN                                           GP00204
@TRADA   DC    A(0,@TRADA+8,TRDFUN)   PGMTRADA SERVICE ROUTINE  GP00204
         #TRC  DATA,DSECT=NO,PFX=TRD                            GP00204
         POP   PRINT                                            GP00204
         SPACE 1                                                GP97332
@MODMAP  DC    A(MAPDIR)     START OF MODULE/CSECT LIST         GP97332
@MODMEND DC    A(MAPDIR)     LAST USED ENTRY                    GP97330
@CURANGE DC    A(@RANGES)    ADDRESS OF CURRENT RANGE DEFINITIONS
@STACK   DC    A(0)   1/3    ADDRESS OF INSTRUCTION STACK       GP97347
@STACKED DC    A(0)   2/3    ADDRESS OF LAST INSTRUCTION STACKED
@STACKND DC    A(10)  3/3    LAST PHYSICAL ENTRY / NUMBER TO STACK
@SPICUSR DC    33A(0)        ADDRESS AND AMODE OF USER EPIE RETRY
@SPICUOL DC    33A(0)        OLD ADDRESS AND AMODE OF USER EPIE RETRY
#SPICUSR EQU   @SPICUOL-@SPICUSR  LENGTH TO MOVE/SAVE           GP00187
@AT      DC    A(0)          CHAIN OF "AT" BREAKPOINT REQUESTS  GP98081
@BEGIN   DC    A(0)          SPECIAL RNG ENTRY TO START TRACE   GP99163
@BAKSTAK DC    A(0)          CHAIN OF BAKR SAVE CHAIN           GP03005
#BAKSTAK DC    A(0)          COUNT OF STACKED BAKRS             GP03005
#BAKMAX  DC    A(1024)       MAXIMUM ALLOWED BY ME              GP03005
RETCODE  DC    F'0'          PGMTRACE RETURN CODE               GP97347
CURPRTLN DC    F'0'       CURRENT LINES PRINTED                 GP97332
MAXPRTLN DC    F'32000'   UP TO 32000 LINES                     GP00169
MAXHEXLN DC    F'4096'    UP TO 4096 BYTES FOR MVCL, ETC.       GP00029
SAVE67   DC    2A(0)         SAVE DURING SCANNING               GP97349
CARDLIM  DC    2A(0)         SCANNER INCREMENT/END              GP97349
MODCNT   DC    H'0'                                             GP97332
         SPACE 1                                                GP03115
OPTFLAGS DC    AL1(0)        PROCESSING FLAGS                   GP97084
FGQUIT   EQU   X'80'           TERMINATE TRACING                GP97084
FGNOPRT  EQU   X'40'           SUPPRESS PRINTING WHILE TRACING  GP97084
FGNOPREX EQU   X'20'           MAXIMUM PRINT LINE COUNT REACHED GP97345
FGNOPRTA EQU   X'10'           SUPPRESS THIS RANGE              GP97336
FGNOPRTS EQU   X'08'           STACK THIS RANGE                 GP97336
FGDOPRT  EQU   X'04'           PRINT UNCONDITIONALLY (ABEND/ILL OP)
FGDOPRT1 EQU   X'02'           PRINT THIS INSTRUCTION (TRC>0)   GP97336
FGDEFLIN EQU   X'01'           PRINT INSTRUCTION SEPARATOR LINE GP97336
         SPACE 1                                                GP03115
PROFLAGS DC    X'00'         PROGRAM PROCESSING FLAGS           GP97332
FGSYNEOF EQU   X'80'           SYSTROPT CLOSED OR NOT SUPPLIED  GP97339
FGILLOP  EQU   X'40'           ILLEGAL OPERATION CODE FOUND     GP97346
FGDOSUB  EQU   X'10'           MODULES TO BE SCANNED FOR 47F0F0 GP00029
FGDOIO   EQU   X'08'           TRACE I/O STUBS (NO MODULE NAME) GP00029
FGRANGE  EQU   X'04'           RANGER CALL FOUND A MATCH        GP04056
FGINAT   EQU   X'02'           PROCESSING A BREAKPOINT INSTR.   GP99057
         SPACE 1                                                GP03115
OTHFLAGS DC    X'00'         MORE FLAGS                         GP97332
FGMODLST EQU   X'80'           MODULE LIST PRINTED              GP00214
FGMODEXM EQU   X'40'           MODULE STACK EXCEEDED MSG ISSUED GP99096
FGUFTP   EQU   X'20'           FLOATING POINT INSTRUCTION FOUND GP97332
FGU2FTP  EQU   X'10'           NEW FLOATING POINT INSTRUCTION FOUND
FGPREPIE EQU   X'08'           PRINT ALL (RAW) EPIES            GP03115
FGINEXBK EQU   X'02'           INSIDE EXEC / DONE BAKR          GP00204
FGINEXEC EQU   X'01'           INSIDE EXEC OF USER INSTRUCTION  GP98317
         SPACE 1                                                GP03115
RMSFLAGS DC    X'00'         RANGE RESET MASK                   GP97356
         SPACE 1                                                GP03115
TRQFLAGS DC    X'00'         TRACE CONTROL FLAGS                GP97333
FGTRNG   EQU   X'80'           RANGE REQUEST MADE               GP97338
FGABCT   EQU   X'40'           ABEND ON NEGATIVE BCT RESULT     GP97342
FGABPREX EQU   X'20'           ABEND ON PRINT LINE EXCESSION    GP97345
FGEXPREX EQU   X'10'           EXIT ON PRINT LINE EXCESSION     GP97345
FGNOSTAE EQU   X'08'           DO NOT ISSUE AN (E)STATE         GP08278
FGEXILL  EQU   X'02'           ON ILLEGAL OP; PROCESS (USER'S ESPIE)
FGLPAPRT EQU   X'01'           PROCESS LPA MODULES              GP00169
         SPACE 1                                                GP03115
PRQFLAGS DC    X'00'         PRINT CONTROL FLAGS                GP97346
FGOPA1   EQU   X'80'           OPERAND R1 RESOLVED              GP97346
FGOPA2   EQU   X'40'           OPERAND R2 RESOLVED              GP97346
FGOPA3   EQU   X'20'           OPERAND R3 RESOLVED              GP97346
FGOPA4   EQU   X'10'           OPERAND R4 RESOLVED              GP97346
FGOPM1   EQU   X'08'           OPERAND R1 ADDRESSES DATA        GP97358
FGOPM2   EQU   X'04'           OPERAND R2 ADDRESSES DATA        GP97358
FGOPM3   EQU   X'02'           OPERAND R3 ADDRESSES DATA        GP97358
FGOPM4   EQU   X'01'           OPERAND R4 ADDRESSES DATA        GP97358
         SPACE 1                                                GP03115
STKFLAGS DC    X'00'         STACK CONTROL FLAGS                GP97346
FGSTNOT  EQU   X'04'           NEITHER STACK NOR WRITE ENTRY    GP97352
FGSTNOW  EQU   X'02'           STACK, DON'T WRITE THIS ENTRY    GP97347
FGSTACK  EQU   X'01'           STACK HAS AN ENTRY               GP97347
         SPACE 1                                                GP03115
TRCFLAGS DC    X'00'   1/2   TRACE CONTROL FLAGS                GP97333
FGTBAL   EQU   X'80'           PRINT BAL/BAS/BASSM ONLY         GP97333
FGTBR    EQU   X'40'           PRINT ALL SUCCESSFUL BRANCHES    GP97333
FGTSVC   EQU   X'20'           PRINT ALL SVC INVOCATIONS        GP97333
FGTVAR   EQU   X'08'           TRACK AND PRINT VARIABLES        GP97333
FGTINST  EQU   X'04'           MASK AND CHECK INSTRUCTIONS      GP97338
TRWFLAGS DC    X'00'   2/2   TRACE CONDITION (SAME BITS AS TRCFLAGS)
         SPACE 1                                                GP97330
PSXSTKFG DC    X'00'         STACK FLAGS FOR EX TARGET          GP99049
CONDTYPE DC    X'00'         CONDITION CODE TYPE FLAGS          GP99163
         SPACE 1                                                GP97330
XCELL    DC    0F'0',XL6'0'  1/9       A COPY OF THE INSTRUCTION
FLAGS    DC    0XL6'0'    2/9          CURRENTLY BEING TRACED   GP97084
FLAG1    DC    X'0'       3/9          CURRENT ATTRIBUTE FLAGS  GP97084
FLAG2    DC    X'0'       4/9          CURRENT ATTRIBUTE FLAGS  GP97084
FLAG3    DC    X'0'       5/9          CURRENT ATTRIBUTE FLAGS  GP97084
FLAG4    DC    X'0'       6/9          CURRENT ATTRIBUTE FLAGS  GP97084
FLAG5    DC    X'0'       7/9          CURRENT ATTRIBUTE FLAGS  GP97084
FLAG6    DC    X'0'       8/9          CURRENT ATTRIBUTE FLAGS  GP97084
FMTMSK   DC    X'0'       9/9          FORMATTING MASK          GP97336
FMTKEY   DC    X'0'      10/9          FORMATTING TABLE INDEX   GP97336
XCEFLAGS DC    X'0'      12/9                                   GP97358
PSUPDONE EQU   X'80'         SET TO SHOW INSTRUCTION ALREADY FORMATTED
@INST    DC    AL4(0)    11/9          ADDRESS OF OPCODE TABLE ENTRY
XCELLEN  EQU   *-XCELL       LENGTH FOR SWAPPING XCELL WITH PSXCELL
         SPACE 1                                                GP97330
PSXCELL  DC    XL6'0'     1/9          COPY OF THE SUBJECT      GP97330
PSFLAGS  DC    0XL6'0'    2/9          ATTRIBUTE FLAGS          GP97084
PSFLAG1  DC    X'0'       3/9          CURRENT ATTRIBUTE FLAGS  GP97084
PSFLAG2  DC    X'0'       4/9          CURRENT ATTRIBUTE FLAGS  GP97084
PSFLAG3  DC    X'0'       5/9          CURRENT ATTRIBUTE FLAGS  GP97084
PSFLAG4  DC    X'0'       6/9          CURRENT ATTRIBUTE FLAGS  GP97084
PSFLAG5  DC    X'0'       7/9          CURRENT ATTRIBUTE FLAGS  GP97084
PSFLAG6  DC    X'0'       8/9          CURRENT ATTRIBUTE FLAGS  GP97084
PSFMTMSK DC    X'0'       9/9          FORMATTING MASK          GP97336
PSFMTKEY DC    X'0'      10/9          FORMATTING TABLE INDEX   GP97336
PCEFLAGS DC    X'0'      12/9                                   GP97358
@PSINST  DC    AL4(0)    11/9          ADDRESS OF OPCODE TABLE ENTRY
         SPACE 1                                                GP97087
PREVBLOK STATBLK PFX=PREV    PRIOR MACHINE STATUS               GP00029
         SPACE 1                                                GP97087
CURRBLOK STATBLK PFX=NEXT    CURRENT/NEXT MACHINE STATUS        GP00029
         SPACE 1                                                GP97087
*PB      EQU   (23476/LPL)*LPL  GET (SUBOPTIMAL?) BLOCKSIZE     GP97087
LPB      EQU   0             LET OS PICK A SIZE                 GP00001
OUTDCB   DCB   DDNAME=SYSTRACE,MACRF=PM,LRECL=LPL,BLKSIZE=LPB,         *
               DSORG=PS,RECFM=FB,EXLST=OUTDEXL                  GP06231
OUTDEXL  DC    0A(0),X'05',AL3(EXBLKNZ)  SET NON-ZERO BLOCKSIZE GP06231
         SPACE 1                                                GP06231
         PUSH  USING                                            GP06231
         DROP  ,                                                GP06231
         USING IHADCB,R1                                        GP06231
         USING EXBLKNZ,R15                                      GP06231
EXBLKNZ  ICM   R0,3,DCBBLKSI  IS THERE A BLOCK SIZE ?           GP06231
         BNZR  R14           YES; USE IT                        GP06231
         LA    R3,2048                                          GP06231
         SLL   R3,2          SET FOR 8K BLOCK DEFAULT           GP06231
         SR    R2,R2                                            GP06231
         SR    R4,R4                                            GP06231
         ICM   R4,3,DCBLRECL GET RECORD LENGTH                  GP06231
         BNZ   EXBLRNZ       HAVE                               GP06231
         LA    R4,LPL        SET RECORD LENGTH DEFAULT          GP06231
         STH   R4,DCBLRECL   SET RECORD LENGTH                  GP06231
EXBLRNZ  DR    R2,R4         GET REMAINDER/QUOTIENT             GP06231
         MR    R2,R4         GET MULTIPLE OF RECORD LENGTH      GP06231
         STH   R3,DCBBLKSI                                      GP06231
         BR    R14           RETURN IT                          GP06231
         POP   USING                                            GP06231
         SPACE 1                                                GP06231
SYSTROPT DCB   DDNAME=SYSTROPT,MACRF=GL,DSORG=PS,EODAD=GETCEOD  GP97339
         SPACE 1                                                GP97087
EXECREG  DC    XL8'0'                                           GP00169
EXECINOP DC    3X'0700'                                         GP97332
SAVEOPA1 DC    A(0),2XL2'0'  ADDRESS OF FIRST OPERAND + BDD XDD GP97342
SAVEOPA2 DC    A(0),2XL2'0'  ADDRESS OF SECOND OPERAND          GP97342
SAVEOPA3 DC    A(0),2XL2'0'  ADDRESS OF THIRD OPERAND           GP97342
SAVEOPA4 DC    A(0),2XL2'0'  ADDRESS OF FOURTH OPERAND          GP97342
LPRTREGS DC    16F'0'        LAST PRINTED REGISTERS             GP00169
LPRTFPRG DC    8F'0'         DITTO FOR FLOATING                 GP00169
LPRTACRS DC    16F'0'        LAST PRINTED ACCESS REGISTERS      GP00029
*              MASKING CONSTANTS                                      *
OOOOOOOF DC    X'0000000F'                                      GP00169
OOOOOOFO DC    X'000000F0'                                      GP00169
OOOOOFFF DC    X'00000FFF'                                      GP00169
OOOOFOOO DC    X'0000F000'                                      GP00169
OFOOOOOO DC    X'0F000000'                                      GP00169
OOOOOO3C DC    X'0000003C'                                      GP00169
OOFFFFFE DC    X'00FFFFFE'   DCB ADDRESS MASKING CONSTANT       GP98081
         EJECT                                                  GP00169
***********************************************************************
*                                                                     *
*   TEMPORARY STORAGE USED BY THE VARIOUS ROUTINES                    *
*                                                                     *
***********************************************************************
EBDCC    DC    C'8421'                 CHARACTERS FOR CONDITION CODE
CCBITS   DC    X'00000080'             BITS CORRESPONDING TO THE
         DC    X'00000040'             CONDITION CODE           GP97333
         DC    X'00000020'                                      GP97333
         DC    X'00000010'                                      GP97333
BLANKS   DC    CL16' '                                          GP97342
COMMFLD  DC    CL(L'BLANKS)' '                                  GP98136
FM0      DC    C'F0-F6'                                         GP97090
FM1      DC    C'F1-F7'                                         GP00169
FM8      DC    C'F8-F14'                                        GP00169
FM9      DC    C'F9-F15'                                        GP00169
RM0      DC    C'R0-R7 '                                        GP97090
RM8      DC    C'R8-R15'                                        GP97090
AM0      DC    C'A0-A7 '                                        GP00029
AM8      DC    C'A8-A15'                                        GP00029
MSGMAXM1 DC    C'     ERROR: MAXIMUM MODULE COUNT OF '          GP99096
         EBCDIG MAXMODNM,4   MAX MODULE COUNT                   GP99096
         DC    C' HAS BEEN REACHED'                             GP99096
MSGMAXMD EQU   MSGMAXM1,*-MSGMAXM1,C'C'                         GP99096
MSGILLOP DC    CL40' ****    ILLEGAL  INSTRUCTION  ****'        GP97347
MSGEND   DC    C'RESUMING EXECUTION AT'                         GP97086
***********************************************************************
*                                                                     *
*   PRINT LINE                                                        *
*     DEFINE SUBFIELDS WITHIN THE PRINT LINE FOR USE                  *
*     BY THE PRINT ROUTINES                                           *
*                                                                     *
***********************************************************************
RDWPLINE DC    Y(4+1+LPL,0)  RDW - LENGTH + CC + TEXT           GP99117
         DC    C' '       1/2 FOR FAST BLANKING                 GP97086
PLINE    DC    CL(LPL)' ',CL60' '  + OVERRUN FOR SLOPPY EDITING GP97342
         ORG   PLINE         DEFINE INDIVIDUAL FIELDS           GP97086
PLMODNM  DC    CL8' ',C' '   MODULE NAME; + OFFSET INDICATOR    GP97086
PLDISP   DC    CL8' ',CL2' ' DISPLACEMENT IN MODULE             GP97086
PLLCTR   DC    CL8' ',C' '   LOCATION COUNTER                   GP97086
PLINST   DC    CL14' ',C' '  INSTRUCTION IMAGE                  GP97086
PLCC     DC    C' ',C' '     CONDITION CODE                     GP97086
PLOP     DC    CL5' ',C' '   SYMBOLIC INSTRUCTION CODE          GP97086
PLFIELD  DC    CL16' ',C' '  INSTRUCTION FIELDS                 GP97086
PLFORM   DC    CL8' ',CL2' '   FIRST OPERAND REGISTER           GP97345
PLFORM2  DC    CL8' '          SECOND OPERAND.....              GP97345
         ORG   ,                                                GP97086
HOLDPLIN DC    CL24' '       TEMP STORAGE FOR PLINE TEXT        GP99058
       TITLE 'P G M T R A C E  **  ERROR RECOVERY ROUTINE (ESTAE EXIT)'
         PUSH  USING                                            GP97072
         DROP  ,                                                GP97072
RECOVER  DS    0H                                               GP00169
*                                                               GP00169
*   THIS IS INVOKED IF TRACE ABENDS                             GP00169
*     ALL IT DOES IS A CLOSE OF SYSTRACE                        GP00169
*                                                               GP00169
         USING RECOVER,R15                                      GP00169
         C     R0,=F'12'    SDWA PROVIDED                       GP00169
         BNE   GOODSDWA                                         GP00169
         SR    R15,R15     NO...THEN TAKE ABEND WITH NO ACTION  GP00169
         BR    R14                                              GP00169
GOODSDWA DS    0H                                               GP00169
         SAVE  (14,12)                                          GP00169
         LR    R12,R15                                          GP00169
         DROP  R15                                              GP00169
         USING RECOVER,R12                                      GP00169
         LR    R2,R1      SAVE PTR TO SDWA                      GP00169
         L     R3,0(,R2)  GET ESTAEPRM                          GP00169
         BASCALL CLOSER                  CLOSE THE OUTPUT FILE  GP97087
         SETRP WKAREA=(R2),REGS=(14,12),DUMP=YES,RC=0           GP00169
         DROP  ,                                                GP97087
         USING CLOSER,R15    COMMON 24-BIT CODE                 GP97087
CLOSER   CLOSE MF=(E,DCBLIST)  CLOSE THE OUTPUT FILE            GP97087
         RET31 R9            AND RETURN IN CALLER'S MODE        GP97087
DCBLINP  OPEN  (SYSTROPT,(INPUT,REREAD)),MF=L                   GP97339
DCBLIST  OPEN  (OUTDCB,OUTPUT),MF=L                             GP97087
         POP   USING                                            GP97072
         SPACE 1                                                GP97349
         LTORG ,                                                GP97349
         TITLE 'P G M T R A C E  ***  DATA AREAS'
BAKRSECT DSECT ,             MAP SAVED STACK DATA               GP03004
BAKRLINK DS    A             LINK TO NEXT CHAINED STACK ENTRY   GP03004
BAKRINST DS    XL8           SAVE INSTRUCTION AND FLAGS         GP03004
BAKRBLOK STATBLK PFX=BAKR    SAVED PSW, REGISTERS, ETC.         GP03004
BAKRMSTA DS    XL8           USER SUPPLIED (MSTA) DATA          GP03008
BAKRSIZE EQU   *-BAKRSECT    SIZE TO OBTAIN                     GP03004
         SPACE 1                                                GP03004
MODDSECT DSECT ,                                                GP97333
MODNAME  DS    CL8                                              GP00169
MODADDR  DS    A                                                GP97335
MODFLAG  DS    0X            FLAG (IN SIZE FIELD)               GP11350
MODSIZ   DS    F             MODULE/CSECT SIZE <16M             GP11350
MFLPA    EQU   X'80'           MODULE IS LPA RESIDENT           GP98095
MFLPA2   EQU   X'40'           MODULE IS LPA RESIDENT, BUT EXPLICIT
MFSECT   EQU   X'10'           CSECT PROCESSED                  GP11350
MFONE    EQU   X'01'           MODULE WAS REFERENCED            GP98095
MODLEN   EQU   *-MODDSECT    LENGTH OF ONE ENTRY                GP97333
         SPACE 1                                                GP00169
DATASECT CSECT ,                                                GP97349
CURRMOD  DC    XL(MODLEN)'0'  SPEED-UP - SAVE PRIOR ENTRY       GP98095
         SPACE 1                                                GP98081
AT@DSECT DSECT ,             DEFINE ADDRESS BREAKPOINT ENTRY    GP98081
AT@LINK  DS    A             LINK POINTER OR 0                  GP98081
AT@ADDR  DS    A             START ADDRESS OF BREAKPOINT        GP98081
AT@NAME  DS    CL8           NAME OF MODULE/CSECT OR BLANK      GP98081
AT@SIZE  DS    A             OFFSET FROM MODULE START           GP98081
AT@INST  DS    XL2'0'        FIRST HALF-WORD OF INSTRUCTION     GP98081
AT@FLAG1 DS    X             FLAGS FOR THIS BREAKPOINT          GP98081
FG@VALID EQU   X'80'           ADDRESS REQUEST RESOLVED         GP98081
FG@SAD   EQU   X'40'           ORIGINAL REQUEST IS (B)DDD FORM  GP98081
FG@NAME  EQU   X'20'           ORIGINAL REQUEST IS NAME (+OFF)  GP98081
FG@PGMEV EQU   X'10'           RE-EVALUATE AFTER SVCS           GP98081
AT@FLAG2 DS    X             FLAGS FOR THIS BREAKPOINT          GP98081
FG@EXIT  EQU   X'10'           PUSH ENVIRONMENT UNTIL SVC 3     GP99154
FG@ABND  EQU   X'08'           ABEND THE TRACE AT THIS POINT    GP98081
FG@QUIT  EQU   X'04'           EXIT THE TRACE AT THIS POINT     GP98081
FG@OFF   EQU   X'02'           SUPPRESS PRINTING IN THIS RANGE  GP98081
FG@STK   EQU   X'01'           STACK TRACES IN THIS RANGE       GP98081
AT@COMNT DS    CL(L'COMMFLD) USER'S COMMENT FIELD               GP98136
AT@LEN   EQU   *-AT@DSECT      GETMAIN LENGTH FOR THIS ENTRY    GP98081
         SPACE 1                                                GP98081
         SPACE 1                                                GP00169
RNGDSECT DSECT ,             DEFINE ADDRESS RANGE ENTRY         GP97338
RNGLINK  DS    A             LINK POINTER OR 0                  GP97338
RNGNAME  DS    CL8           NAME OF MODULE/CSECT OR BLANK      GP97338
RNGADDR  DS    A             START ADDRESS OF RANGE             GP97338
RNGSIZE  DS    F             SIZE/END ADDRESS OF RANGE+1        GP97338
RNGINST  DS    A             QUEUE FOR SPECIFIC INSTR. TRACING  GP97338
RNGVARS  DS    A             QUEUE FOR VARIABLE TRACING         GP97338
RNGFLAG1 DS    X             FLAGS FOR THIS RANGE               GP97338
FGRVALID EQU   X'80'           ADDRESS REQUEST RESOLVED         GP97338
FGRSAD   EQU   X'40'           ORIGINAL REQUEST IS (B)DDD FORM  GP97338
FGRSADEV EQU   X'20'           RE-EVALUATE EVERY CHANGE OF (B)  GP97338
FGRPGMEV EQU   X'10'           RE-EVALUATE AFTER SVCS           GP97338
FGRPMASK EQU   X'02'           NAME IS MASKED                   GP12309
RNGFLAG2 DS    X             FLAGS FOR THIS RANGE               GP97338
FGRABND  EQU   X'08'           ABEND THE TRACE AT THIS POINT    GP97351
FGREXIT  EQU   X'04'           EXIT THE TRACE AT THIS POINT     GP97351
FGROFF   EQU   X'02'           SUPPRESS PRINTING IN THIS RANGE  GP97345
FGRSTK   EQU   X'01'           STACK TRACES IN THIS RANGE       GP97358
RNGSAD   DS    Y             BASE/DISPLACEMENT REQUESTED        GP97338
RNGLEN   EQU   *-RNGDSECT      GETMAIN LENGTH FOR THIS ENTRY    GP97338
         SPACE 1                                                GP97338
INSDSECT DSECT ,             DEFINE INSTRUCTION MASKING CHAIN   GP97338
INSLINK  DS    A             LINK POINTER OR 0                  GP97338
INSVAL   DS    XL3           VALUE TO BE MATCHED                GP97338
INSMASK  DS    XL3           AND MASK BEFORE MATCHING           GP97338
INSLEN   EQU   *-INSDSECT      GETMAIN LENGTH FOR THIS ENTRY    GP97338
         SPACE 1                                                GP97338
VARDSECT DSECT ,             DEFINE VARIABLE MONITORING CHAIN   GP97338
VARLINK  DS    A             LINK POINTER OR 0                  GP97338
VARNAME  DS    CL8           VARIABLE NAME                      GP97338
VARMOD   DS    0CL8          BASE MODULE NAME+OFFSET            GP97349
VARSAD   DS    Y             (B)DDD VALUE IN HEX                GP97349
VARBDO   DS    Y             REGISTER OFFSET IN PREVREG/NEXTREG GP97349
VARBASE  DS    A             (B)DDD FORM - INITIAL (B) VALUE    GP97345
VARADDR  DS    A             VARIABLE ADDRESS; MAY BE (B)DDD FORM
VARSIZE  DS    F             DATA LENGTH                        GP97338
VARTYPE  DS    X             PROCESSING TYPE FLAGS              GP97338
FGVEQU   EQU   X'80'           TRACE EQUAL                      GP97338
FGVLOW   EQU   X'40'           TRACE IF LOWER                   GP97338
FGVHIGH  EQU   X'20'           TRACE IF HIGHER                  GP97338
FGVCHG   EQU   X'08'           TRACE CHANGES ON REFERENCES ONLY GP97338
FGVREF   EQU   X'04'           TRACE REFERENCES                 GP97338
FGVSET   EQU   X'02'           VALUE SET (THE FIRST TIME)       GP97351
FGVKEEP  EQU   X'01'           KEEP CURRENT VALUE               GP97338
VARFLAG1 DS    X             PROCESSING FLAG                    GP97338
FGVVALID EQU   X'80'           ENCOUNTERED/INITIALIZED          GP97338
FGVSAD   EQU   X'40'           ORIGINAL REQUEST IS (B)DDD FORM  GP97338
FGVSADEV EQU   X'20'           RE-EVALUATE EVERY CHANGE OF (B)  GP97338
FGVPGMEV EQU   X'10'           RE-EVALUATE AFTER SVCS           GP97338
FGVSADON EQU   X'01'           RETAIN ADDRESS AFTER FIRST MATCH GP97338
VARFLAG2 DS    X             MORE FLAGS                         GP97338
FGVTRC   EQU   X'80'           REQUEST MATCHED - PRINT & CLEAR  GP97349
VARVAL   DS    0C            PREVIOUS VALUE OF VARIABLE         GP97338
VARLEN   EQU   *-VARDSECT      GETMAIN LENGTH FOR THIS ENTRY    GP97338
         SPACE 1                                                GP97338
         IHASDWA                                                GP00169
         SPACE 1                                                GP00169
         DCBD  DEVD=DA,DSORG=PS                                 GP00169
MYTIOT   DSECT  ,                                               GP05198
         IEFTIOT1 ,                                             GP98136
         IKJTCB ,                                               GP97328
         IHALLE ,                                               GP97328
         CVT   DSECT=YES                                        GP00169
         IHACDE ,                                               GP97328
         IHAGDA ,                                               GP99144
         IHALPDE ,                                              GP99095
         AIF   (&MVSXA).HVLPDE                                  GP05189
LPDEMJP  EQU   LPDEXLP,4,C'A'   0 IN MVS ?                      GP05189
LPDEATTB EQU   LPDERES1,1,C'B'  DITTO?                          GP05189
LPDELPDE EQU   X'08'         LPDE VS. CDE                       GP05189
.HVLPDE  IHAXTLST ,                                             GP97328
         IHARB ,                                                GP97328
         IHAPSA ,                                               GP97328
         AIF   (NOT &MVSXA).NONUMAC                             GP05189
         IHADCBE ,                                              GP99097
.NONUMAC TITLE 'P G M T R A C E  ***  OPERATION CODE DEFINITIONS'
DATASECT CSECT ,                                                GP97331
         PUSH  PRINT                                            GP97331
*DEBUG*  PRINT ON,GEN,DATA                                      GP97331
INSTPAT  DC    C' ,()/.? '   1/2                                GP97331
INSTRAW  DC    CL12'       ' 2/2  UNPACKED INSTRUCTION CODE     GP97331
*          NYBBLES: 123456789...                                GP97332
         SPACE 1                                                GP97331
MASKTAB  EQU   *             EDITING MASK DEFINITIONS           GP97331
MASKLEN  EQU   MASKTAB-INSTPAT  LENGTH OF MASK FIELD            GP97331
E        MASK  ,             NO OPERANDS                        GP97331
RR       MASK  3,×,4         REGISTER/REGISTER                  GP97331
RR1      MASK  3                                                GP97333
RR2      MASK  4                                                GP97333
RRI      MASK  3,4                                              GP97335
RRE      MASK  7,×,8         REGISTER/REGISTER EXTENDED         GP97331
RRE1     MASK  7             REGISTER/REGISTER EXTENDED         GP03008
RRF      MASK  7,×,8,×,5,×,6  RRE W/ R3, M4
RRM3     MASK  7,×,8,×,5      RRE W/ M3
RRR3     MASK  5,×,8,×,7      RRE W/ R1, R3, R2
RX       MASK  3,×,6,7,8,<,4,×,5,>  INDEXED REG/STOR            GP97331
RXA      MASK  6,7,8,<,4,×,5,>      INDEXED REG/STOR; NO R1     GP97333
RXE      MASK  3,×,6,7,8,<,4,×,5,>  INDEXED REG/STOR            GP97331
RXF      MASK  3,×,9,×,6,7,8,<,4,×,5,>  INDEXED REG/STOR; R1,R3
RI       MASK  3,×,4,×,5,6,7,8      REG/IMM2                    GP97331
RIL      MASK  3,×,5,6,7,8,9,10,11,12  REG/IMM4                 GP03005
RIR      MASK  3,×,5,6,7,8          REG/IMM2                    GP03005
RS       MASK  3,×,4,×,6,7,8,<,5,>  TWO REG/STOR                GP97331
RSI      MASK  3,×,4,×,5,6,7,8      TWO REG/IMM2                GP97331
RSS      MASK  3,×,6,7,8,<,5,>      ONE REG/STOR                GP97331
SI       MASK  6,7,8,<,5,>,×,3,4   STOR/IMM                     GP97331
S        MASK  6,7,8,<,5,>   STORAGE                            GP97331
SS       MASK  6,7,8,<,3,4,×,5,>,×,10,11,12,<,9,>   SS - 8 BIT LENGTH
SS2      MASK  6,7,8,<,5,>,×,10,11,12,<,3,4,×,9,>   SS - 8 BIT LENGTH
SS4      MASK  6,7,8,<,3,×,5,>,×,10,11,12,<,4,×,9,> SS -4 BIT LENGTHS
SSR      MASK  6,7,8,<,3,×,5,>,×,10,11,12,<,9,>,×,4 SS -REG/REG GP97331
SSI      MASK  6,7,8,<,3,×,5,>,×,10,11,12,<,9,>,×,4 SS -REG/IMM GP97331
SSE      MASK  6,7,8,<,5,>,×,10,11,12,<,9,>         SS - EXTENDED
SSA2     MASK  3,×,4,×,6,7,8,<,5,>,×,10,11,12,<,9,> SS - R,R,BD,BD
         SPACE 1                                                GP97338
FORMTAB  EQU   *             EDITING MASK DEFINITIONS           GP97338
FORMLEN  EQU   8             TWO WORDS PER ENTRY                GP97338
E        FORM  ,             NO OPERANDS                        GP97331
EG2      FORM  GR2           FIXED GP REG. 2 AFTER              GP03003
RR       FORM  R1N,R3O                                          GP97344
RRE      FORM  R1N,R3O                                          GP97344
*RRE0     FORM  GR0,R1N,R3N,R1O,R3O,DATA3                       GP99096
RRECK    FORM  R1N,R3O,R3OODD,DATA3                             GP99096
RREST    FORM  GR0,R1N,R3O,STR1,STR3
RREST1   FORM  GR0,R1N,R3O,LEN131       LENGTH=R1-R3-1          GP03118
RRESST   FORM  GR0,GR1,R1N,R1NODD,R3N,R3NODD,LONG
RRN3     FORM  R1N,R3ONZ,DATA3                                  GP97344
RRL      FORM  R1O,R1OODD,R3O,R3OODD,LONG   CLCL, MVCL          GP97344
RRO      FORM  R1N,R1NODD,R3O                                   GP97344
RRD      FORM  DR1N,R3O                                         GP97344
RR1      FORM  R1N                                              GP97344
RR3      FORM  R3O                                              GP97344
RR3NZ    FORM  R3NNZ,DATA3                                      GP97345
RRN1N3   FORM  R1NNZ,R3ONZ                                      GP97344
RR1N3    FORM  R1N,R3ONZ                                        GP97344
RRA      FORM  AR1N,AR3O                                        GP00204
RRA1     FORM  AR1N                                             GP00204
RRA3     FORM  AR3N                                             GP00204
RRAGN    FORM  AR1N,R3O                                         GP00204
RRGAN    FORM  R1N,AR3O                                         GP00204
RI       FORM  R1N                                              GP97344
RS       FORM  R1N,R3O,BD2,DATA2                                GP97344
RSD      FORM  DR1N,DR3O,BD2,DATA2                              GP97344
RSDA     FORM  DR1N,BD2                                         GP97344
RSA      FORM  R1N,BD2                                          GP97344
RSLM     FORM  R1O,R1OODD,R3O,R3OODD,BD2,DATA2,LONG             GP99096
RSM      FORM  R1N,BD2,DATA2                                    GP97344
RSRA     FORM  R1N,R3O,BD2                                      GP97344
RS132    FORM  R1O,R3O,BD2,DATA2                                GP99097
RA132    FORM  AR1O,AR3O,BD2,DATA2                              GP00204
RSSX     FORM  R1N,R3O,R3OODD,BD2,DATA2                         GP97344
RS12     FORM  BD2,RPDATA
RX       FORM  R1N,XBD2,DATA2                                   GP97344
RXA      FORM  R1N,XBD2                                         GP97344
RXB      FORM  XBD2,DATA2                                       GP99055
RXO      FORM  R1N,R1NODD,XBD2,DATA2                            GP97344
RXD      FORM  DR1N,XBD2,DATA2                                  GP97344
S        FORM  BD2,DATA2                                        GP97344
SA       FORM  BD2                                              GP97344
SPC      FORM  BD2                                              GP97344
SI       FORM  BD2,DATA2                                        GP97344
SS       FORM  BD2,DATA2,BD4,DATA4                              GP97344
SSIN     FORM  BD2,DATA2,BD4IN,DATA4                            GP97344
SS1      FORM  BD2,DATA2                                        GP97344
SS11     FORM  GR1,BD2,DATA2                                    GP97344
SS12     FORM  GR1,GR2,BD2,DATA2                                GP97344
SSRP     FORM  BD2,DATA2,BD4M                                   GP97344
SSA      FORM  BD2,BD4                                          GP97344
SSLONG   FORM  BD2,CDATA2,BD4,CDATA4,LONG8                      GP03114
SSR2     FORM  R1N,R3O,BD2,BD4,DATA2                            GP97344
SSR4     FORM  R1N,R3O,BD2,BD4,DATA4                            GP97344
FRR      FORM  FR1N,FR3O                                        GP97344
FRX      FORM  FR1N,XBD2,DATA2                                  GP97344
DRR      FORM  DFR1N,DFR3O                                      GP97344
DRX      FORM  DFR1N,XBD2,DATA2                                 GP97344
XRR      FORM  XFR1N,XFR3O                                      GP97344
FRRD     FORM  FR1N,DFR3O                                       GP97344
DRRX     FORM  DFR1N,XFR3O                                      GP97344
DRRF     FORM  DFR1N,FR3O                                       GP97344
XRRD     FORM  XFR1N,DFR3O                                      GP97344
XRX      FORM  XFR1N,XBD2,DATA2                                 GP97344
SVC      FORM  SVCNAME       FORMAT SVC NAME                    GP99057
         POP   PRINT                                            GP97331
         SPACE 2                                                GP97331
*  ALL OPCODE FLAGS (OTHER THAN LOCAL ADDITIONS) ARE FROM PRINCIPLES
*   OF OPERATIONS SA22-7085                                     GP00169
*                                                               GP00169
OPDSECT  DSECT ,             MAPPING OF ONE OPCODE ENTRY        GP97330
OPNAME   DS    0CL5' '       NAME OF INSTRUCTION UNLESS POINTER GP97330
OPNMFG   DS    C'@'          0:INVALID; @:TABLE; >:NORMAL INSTRUCTION
OPTADD   DS    AL4             ADDRESS OF TABLE ENTRY           GP97330
OPFLAGS  DS    0XL5'0'       ASSORTED FLAGS                     GP97330
OPFLAG1  DS    X             MAJOR PROCESSING FLAGS             GP97330
FGACR    EQU   X'80'           INSTRUCTION USES ACCESS REGS     GP00029
FGFTP    EQU   X'40'           INSTRUCTION CHANGES FLOATING POINT REGS
FGDOREG  EQU   X'20'           LM OR STM (PRINT REGISTERS)      GP97330
FGDOACR  EQU   X'10'           LAM OR STAM (PRINT ACCESS REGS)  GP00029
FGCC0    EQU   X'04'           SETS SOMETHING ?                 GP99163
FGCCA    EQU   X'01'           ARITHMETIC CONDITION (=LOGICAL)  GP99163
FGCCC    EQU   X'02'           COMPARE CONDITION                GP99163
FGCCL    EQU   X'01'           LOGICAL CONDITION                GP99163
FGCC     EQU   X'07'           INSTRUCTION SETS ANY CONDITION CODE
OPFLAG2  DS    X             INSTRUCTION TYPE FLAGS             GP97330
FGRR     EQU   X'80'           RR TYPE                          GP97330
FGRS     EQU   X'40'           RS TYPE                          GP97330
FGRX     EQU   X'20'           RX TYPE                          GP97330
FGS      EQU   X'10'           S  TYPE                          GP97330
FGSI     EQU   X'08'           SI TYPE                          GP97330
FGSS     EQU   X'04'           SS TYPE                          GP97330
FGE      EQU   X'02'           E  TYPE (OR RRE, SSE)            GP97330
FGI      EQU   X'01'           IMMEDIATE DATA                   GP97331
OPFLAG3  DS    X             INSTRUCTION MODIFIER FLAGS         GP97330
FGBR     EQU   X'80'           THIS IS A BRANCH INSTRUCTION     GP97330
FGEXEC   EQU   X'40'           THIS IS AN EXECUTE               GP97330
FGIMK    EQU   X'20'           CONTAINS 4 BIT IMMEDIATE (MASK)  GP97330
FGIMM    EQU   X'10'           CONTAINS 8 BIT IMMEDIATE DATA    GP97330
FGIM2    EQU   X'08'           CONTAINS 16 BIT IMMEDIATE DATA   GP97330
OPFLAG4  DS    X             PRINT: DATA LENGTH                 GP97330
FGDLR1   EQU   128+64          DATA LENGTH IS IN R1             GP97344
FGDLR2   EQU   128+32          DATA LENGTH IS IN R1+1           GP97344
FGDLR4   EQU   128+8           DATA LENGTH IS IN R3+1           GP97344
FGDLM    EQU   128+4           DATA LENGTH DETERMINED BY MASK BITS
FGDLI    EQU   128+2           DATA LENGTH DEPENDS ON TARGET    GP97344
FGDLSS   EQU   64              LENGTH IN HALF OF BYTE 2         GP97330
FGDLS    EQU   32              LENGTH IN BYTE 2 (MVC)           GP97330
FGDL16   EQU   16              DATA LENGTH IS 16 BYTES          GP97344
FGDL8    EQU   8               DATA LENGTH IS 8 BYTES           GP97330
FGDL4    EQU   4               DATA LENGTH IS 4 BYTES           GP97330
FGDL2    EQU   2               DATA LENGTH IS 2 BYTES           GP97330
FGDL1    EQU   1               DATA LENGTH IS 1 BYTE            GP97330
OPFLAG5  DS    X                                                GP97330
OPFLAG6  DS    X                                                GP97330
OPMASK   DS    X             INDEX# OF PRINT EDIT MASK          GP97331
OPFORM   DS    X             INDEX# OF PRINT FORMATTING MASK    GP97338
OPEXEC   DS    YL2           OFFSET TO INSTRUCTION PROCESSOR    GP97330
OPLEN    EQU   *-OPDSECT     LENGTH OF ONE ENTRY                GP97330
         SPACE 1                                                GP98095
PGMTRACE CSECT ,             BE CAREFUL OUT THERE               GP98095
MAPDIR   DC    (MAXMODNM)XL(MODLEN)'0'  MODULE/CSECT NAMES TO BE TRACED
DATAEND  DS    0H                 END OF TRACE ROUTINE DATA AREA
         SPACE 1                                                GP97330
INST     CSECT ,             ASSEMBLE VARIOUS LENGTH SECTIONS   GP00169
INSTBASE DC    256XL(OPLEN)'0'  PREDEFINE ALL AS INVALID        GP97330
INST07   CSECT ,             ASSEMBLE VARIOUS LENGTH SECTIONS   GP97330
INST07B  DC    32XL(OPLEN)'0'  PREDEFINE ALL AS INVALID         GP97330
INST47   CSECT ,             ASSEMBLE VARIOUS LENGTH SECTIONS   GP97330
INST47B  DC    32XL(OPLEN)'0'  PREDEFINE ALL AS INVALID         GP97330
INST     CSECT ,             ASSEMBLE VARIOUS LENGTH SECTIONS   GP97330
         ORG   INSTBASE                                         GP97330
         OPTB  01,X'FF',0,255  NO MASK, NO SHIFT, MAX = 256     GP00204
PR       OPCD  0101,E,U,A,SP,Z4,T,B,R,ST,DOREG,DOACR,GO=GOPR    GP03003
UPT      OPCD  0102,E,CL,A,SP,II,GM,R,ST,I4                     GP99163
SCKPF    OPCD  0107,E                       **OPDEF**           GP00204
TAM      OPCD  010B,E     TEST ADDRESSING MODE                  GP03004
SAM24    OPCD  010C,E     TEST ADDRESSING MODE                  GP03004
SAM31    OPCD  010D,E     TEST ADDRESSING MODE                  GP03004
SAM64    OPCD  010E,E     TEST ADDRESSING MODE                  GP03004
TRAP2    OPCD  01FF,E                       **OPDEF**           GP00204
         SPACE 1                                                GP00169
SPM      OPCD  04,RR,L,MASK=RR1                                 GP97335
BALR     OPCD  05,RR,T,B,DLI,R,GO=BALBALR,FORM=RRN3             GP97342
BCTR     OPCD  06,RR,B,DLI,R,GO=BCTBCTR,FORM=RRN3               GP97330
         SPACE 1                                                GP00169
BCR      OPCD  07,RR,B,DLI,GO=BCR,FORM=RR3NZ                    GP97342
*         OPTB  07,X'F0',4,31   MASK LEFT, SHIFT 4, MAX = 15    GP97330
NOPR     OPCD  0700,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BOR      OPCD  0701,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BPR      OPCD  0702,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BMR      OPCD  0704,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BNZR     OPCD  0707,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BZR      OPCD  0708,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BNMR     OPCD  070B,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BNPR     OPCD  070D,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BNOR     OPCD  070E,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
BR       OPCD  070F,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP97342
*   DEFINE PHONEY SECOND TIME FOR COMPARE CODES                 GP99163
NOPR     OPCD  0710,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BHR      OPCD  0712,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BLR      OPCD  0714,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BNER     OPCD  0717,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BER      OPCD  0718,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BNLR     OPCD  071B,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BNHR     OPCD  071D,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
BR       OPCD  071F,RR,B,DLI,GO=BCR,MASK=RR2,FORM=RR3NZ         GP99163
         SPACE 1                                                GP00169
*SSK     OPCD  08,RR                                            GP97344
*ISK     OPCD  09,RR                                            GP97344
SVC      OPCD  0A,RR,DOREG,DOACR,MASK=RRI,GO=GOSVC,FORM=SVC     GP00029
BSM      OPCD  0B,RR,B,DLI,R,DOREG,GO=BSM,FORM=RR1N3            GP03325
BASSM    OPCD  0C,RR,T,B,DLI,R,DOREG,GO=BASSM,FORM=RRN3         GP03325
BASR     OPCD  0D,RR,T,B,DLI,R,DOREG,GO=BASBASR,FORM=RRN1N3     GP03325
MVCL     OPCD  0E,RR,DOREG,CA,A,SP,II,R,ST,R1,R2,DLR,FORM=RRL   GP02255
CLCL     OPCD  0F,RR,DOREG,CA,A,SP,II,R,R1,R2,DLR,FORM=RRL      GP02255
LPR      OPCD  10,RR,CA,IF,R                                    GP99163
LNR      OPCD  11,RR,CA,R                                       GP99163
LTR      OPCD  12,RR,CA,R                                       GP99163
LCR      OPCD  13,RR,CA,IF,R                                    GP99163
NR       OPCD  14,RR,CL,R                                       GP99163
CLR      OPCD  15,RR,CC                                         GP99163
OR       OPCD  16,RR,CL,R                                       GP99163
XR       OPCD  17,RR,CL,R                                       GP99163
LR       OPCD  18,RR,R                                          GP00169
CR       OPCD  19,RR,CC                                         GP99163
AR       OPCD  1A,RR,CA,IF,R                                    GP99163
SR       OPCD  1B,RR,CA,IF,R                                    GP99163
MR       OPCD  1C,RR,SP,R,FORM=RRD                              GP97344
DR       OPCD  1D,RR,SP,IK,R,FORM=RRO                           GP97344
ALR      OPCD  1E,RR,CA,R                                       GP99163
SLR      OPCD  1F,RR,CA,R                                       GP99163
LPDR     OPCD  20,RR,CA,SP,FTP,DL8,FORM=DRR                     GP97344
LNDR     OPCD  21,RR,CA,SP,FTP,DL8,FORM=DRR                     GP97344
LTDR     OPCD  22,RR,CA,SP,FTP,DL8,FORM=DRR                     GP97344
LCDR     OPCD  23,RR,CA,SP,FTP,DL8,FORM=DRR                     GP97344
HDR      OPCD  24,RR,SP,EU,FTP,DL8,FORM=DRR                     GP97344
LRDL     OPCD  25,RR,SP,EO,FTP,FORM=DRRX                        GP97344
*LDXR    OPCD  25,RR,FORM=DRRX              **OPDEF**           GP00204
*LRDR    OPCD  25,RR,FORM=DRRX              **OPDEF**           GP00204
MXR      OPCD  26,RR,SP,EU,EO,FTP,FORM=XRR                      GP97344
MXDR     OPCD  27,RR,SP,EU,EO,FTP,FORM=XRRD                     GP97344
LDR      OPCD  28,RR,SP,FTP,DL8,FORM=DRR                        GP97344
CDR      OPCD  29,RR,CC,SP,FTP,DL8,FORM=DRR                     GP97344
ADR      OPCD  2A,RR,CA,SP,EU,EO,LS,FTP,DL8,FORM=DRR            GP97344
SDR      OPCD  2B,RR,CA,SP,EU,EO,LS,FTP,DL8,FORM=DRR            GP97344
MDR      OPCD  2C,RR,EU,EO,FTP,DL8,FORM=DRR                     GP97344
DDR      OPCD  2D,RR,SP,EU,EO,FK,FTP,DL8,FORM=DRR               GP97344
AWR      OPCD  2E,RR,CA,SP,EO,LS,FTP,DL8,FORM=DRR               GP97344
SWR      OPCD  2F,RR,CA,SP,EO,LS,FTP,DL8,FORM=DRR               GP97344
LPER     OPCD  30,RR,CA,SP,FTP,DL4,FORM=FRR                     GP97344
LNER     OPCD  31,RR,CA,SP,FTP,DL4,FORM=FRR                     GP97344
LTER     OPCD  32,RR,CA,SP,FTP,DL4,FORM=FRR                     GP97344
LCER     OPCD  33,RR,CA,SP,FTP,DL4,FORM=FRR                     GP97344
HER      OPCD  34,RR,SP,EU,FTP,DL4,FORM=FRR                     GP97344
LRER     OPCD  35,RR,SP,EO,FTP,DL4,FORM=FRR                     GP97344
*LEDR    OPCD  35,RR,FORM=FRR               **OPDEF**           GP00204
AXR      OPCD  36,RR,CA,SP,EU,EO,LS,FTP,DL16,FORM=XRR           GP97344
SXR      OPCD  37,RR,CA,SP,EU,EO,LS,FTP,DL16,FORM=XRR           GP97344
LER      OPCD  38,RR,SP,FTP,DL4,FORM=FRR                        GP97344
CER      OPCD  39,RR,CA,SP,FTP,DL4,FORM=FRR                     GP97344
AER      OPCD  3A,RR,CA,SP,EU,EO,LS,FTP,DL4,FORM=FRR            GP97344
SER      OPCD  3B,RR,CA,SP,EU,EO,LS,FTP,DL4,FORM=FRR            GP97344
MER      OPCD  3C,RR,SP,EU,EO,LS,FTP,DL4,FORM=DRRF              GP97344
*MDER    OPCD  3C,RR,FORM=DRRF              **OPDEF**           GP00204
DER      OPCD  3D,RR,SP,EU,EO,LS,FK,FTP,DL4,FORM=FRR            GP97344
AUR      OPCD  3E,RR,CA,SP,EO,LS,FTP,DL4,FORM=FRR               GP97344
SUR      OPCD  3F,RR,CA,SP,EO,LS,FTP,DL4,FORM=FRR               GP97344
STH      OPCD  40,RX,A,ST,B2,DL2                                GP97330
LA       OPCD  41,RX,R,FORM=RXA                                 GP97344
STC      OPCD  42,RX,A,ST,B2,DL1                                GP97330
IC       OPCD  43,RX,A,R,B2,DL1                                 GP97330
EX       OPCD  44,RX,AI,SP,EX,DLI,GO=EXOP                       GP97344
BAL      OPCD  45,RX,B,DLI,R,GO=BALBALR,FORM=RX                 GP97330
BCT      OPCD  46,RX,B,DLI,R,GO=BCTBCTR,FORM=RX                 GP97330
         SPACE 1                                                GP00169
BC       OPCD  47,RX,B,DLI,GO=BC,FORM=RXB                       GP99055
*         OPTB  47,X'F0',4,31   MASK LEFT, SHIFT 4, MAX = 15    GP97330
NOP      OPCD  4700,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BO       OPCD  4701,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BP       OPCD  4702,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BM       OPCD  4704,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BNZ      OPCD  4707,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BZ       OPCD  4708,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BNM      OPCD  470B,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BNP      OPCD  470D,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
BNO      OPCD  470E,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
B        OPCD  470F,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99055
*   PHONEY SECOND HALF FOR COMPARE TYPES                        GP99163
NOP      OPCD  4710,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
BH       OPCD  4712,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
BL       OPCD  4714,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
BNE      OPCD  4717,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
BE       OPCD  4718,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
BNL      OPCD  471B,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
BNH      OPCD  471D,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
B        OPCD  471F,RX,B,DLI,GO=BC,MASK=RXA,FORM=RXB            GP99163
         SPACE 1                                                GP00169
LH       OPCD  48,RX,A,R,B2,DL2                                 GP97330
CH       OPCD  49,RX,CC,A,B2,DL2                                GP97330
AH       OPCD  4A,RX,CA,A,IF,R,B2,DL2                           GP97330
SH       OPCD  4B,RX,CA,A,IF,R,B2,DL2                           GP97330
MH       OPCD  4C,RX,A,R,B2,DL2                                 GP97330
BAS      OPCD  4D,RX,B,DLI,R,GO=BASBASR                         GP97330
CVD      OPCD  4E,RX,A,ST,B2,DL8                                GP97330
CVB      OPCD  4F,RX,A,D,IK,R,B2,DL8                            GP97330
ST       OPCD  50,RX,A,ST,B2,DL4                                GP97330
LAE      OPCD  51,RX,R,U1,BP,FORM=RXA,GO=GOLAE                  GP00204
N        OPCD  54,RX,CL,A,R,B2,DL4                              GP97330
CL       OPCD  55,RX,CC,A,B2,DL4                                GP97330
O        OPCD  56,RX,CL,A,R,B2,DL4                              GP97330
X        OPCD  57,RX,CL,A,R,B2,DL4                              GP97330
L        OPCD  58,RX,A,R,B2,DL4                                 GP97330
C        OPCD  59,RX,CC,A,B2,DL4                                GP97330
A        OPCD  5A,RX,CA,A,IF,R,B2,DL4                           GP97330
S        OPCD  5B,RX,CA,A,IF,R,B2,DL4                           GP97330
M        OPCD  5C,RX,A,SP,R,B2,DL4,FORM=RXD                     GP97344
D        OPCD  5D,RX,A,SP,IK,R,B2,DL4,FORM=RXO                  GP97344
AL       OPCD  5E,RX,CA,A,R,B2,DL4                              GP97330
SL       OPCD  5F,RX,CA,A,R,B2,DL4                              GP97330
STD      OPCD  60,RX,A,SP,ST,B2,DL8,FTP,DL8,FORM=DRX            GP97344
MXD      OPCD  67,RX,A,SP,EU,EO,B2,DL8,FTP,DL8,FORM=XRX         GP97344
LD       OPCD  68,RX,A,SP,B2,FTP,DL8,FORM=DRX                   GP97344
CD       OPCD  69,RX,CC,A,SP,B2,FTP,DL8,FORM=DRX                GP97344
AD       OPCD  6A,RX,CA,A,SP,EU,EO,LS,B2,FTP,DL8,FORM=DRX       GP97344
SD       OPCD  6B,RX,CA,A,SP,EU,EO,LS,B2,FTP,DL8,FORM=DRX       GP97344
MD       OPCD  6C,RX,A,SP,EU,EO,B2,FTP,DL8,FORM=DRX             GP97344
DD       OPCD  6D,RX,A,SP,EU,EO,FK,B2,FTP,DL8,FORM=DRX          GP97344
AW       OPCD  6E,RX,CA,A,SP,EO,LS,B2,FTP,DL4,FORM=FRX          GP97344
SW       OPCD  6F,RX,CA,A,SP,EO,LS,B2,FTP,DL4,FORM=FRX          GP97344
STE      OPCD  70,RX,A,SP,ST,B2,FTP,DL4,FORM=FRX                GP97344
MS       OPCD  71,RX,IR,A,R,B2,FTP,DL4,SYS=ESA                  GP99096
LE       OPCD  78,RX,A,SP,B2,FTP,DL4,FORM=FRX                   GP97344
CE       OPCD  79,RX,CC,A,SP,B2,FTP,DL4,FORM=FRX                GP97344
AE       OPCD  7A,RX,CA,A,SP,EU,EO,LS,B2,FTP,DL4,FORM=FRX       GP97344
SE       OPCD  7B,RX,CA,A,SP,EU,EO,LS,B2,FTP,DL4,FORM=FRX       GP97344
ME       OPCD  7C,RX,A,SP,EU,EO,B2,FTP,DL4,FORM=FRX             GP97344
*MDE     OPCD  7C,RR,FORM=FRX               **OPDEF**           GP00204
DE       OPCD  7D,RX,A,SP,EU,EO,FK,B2,FTP,DL4,FORM=FRX          GP97344
AU       OPCD  7E,RX,CA,A,SP,EO,LS,B2,FTP,DL4,FORM=FRX          GP97344
SU       OPCD  7F,RX,CA,A,SP,EO,LS,B2,FTP,DL4,FORM=FRX          GP97344
SSM      OPCD  80,S,P,A,SP,SO,B2,DL1                            GP97330
LPSW     OPCD  82,S,L,P,A,SP,B2,DL8,FORM=RX                     GP97344
DIAG     OPCD  83,RI,DM,P,MD,MASK=RSI,FORM=RR  (VM FORMAT)      GP97342
BRXH     OPCD  84,RSI,IR,B,DLI,R,SYS=ESA,GO=BXH,FORM=RSSX       GP97342
*** WRD      OPCD  84,RS,C,DL1                                  GP97344
BRXLE    OPCD  85,RSI,IR,B,DLI,R,SYS=ESA,GO=BXLE,FORM=RSSX      GP97342
*** RDD      OPCD  85,RS,C,DL1                                  GP97344
BXH      OPCD  86,RS,B,DLI,R,GO=BXH,FORM=RSSX                   GP97342
BXLE     OPCD  87,RS,B,DLI,R,GO=BXLE,FORM=RSSX                  GP97342
SRL      OPCD  88,RS,R,MASK=RSS,FORM=RSA                        GP97344
SLL      OPCD  89,RS,R,MASK=RSS,FORM=RSA                        GP97344
SRA      OPCD  8A,RS,CA,R,MASK=RSS,FORM=RSA                     GP97344
SLA      OPCD  8B,RS,CA,IF,R,MASK=RSS,FORM=RSA                  GP97344
SRDL     OPCD  8C,RS,SP,R,MASK=RSS,FORM=RSDA                    GP97344
SLDL     OPCD  8D,RS,SP,R,MASK=RSS,FORM=RSDA                    GP97344
SRDA     OPCD  8E,RS,CA,SP,R,MASK=RSS,FORM=RSDA                 GP97344
SLDA     OPCD  8F,RS,CA,SP,IF,R,MASK=RSS,FORM=RSDA              GP97344
STM      OPCD  90,RS,A,ST,B2,DLR,DL4,DOREG,GO=GOSTM,FORM=RS132  GP99097
TM       OPCD  91,SI,CL,A,B1,DL1,IMM                            GP97330
MVI      OPCD  92,SI,A,ST,B1,DL1,IMM                            GP97330
TS       OPCD  93,S,CA,A,ST,B2,DL1,IMM                          GP97330
NI       OPCD  94,SI,CL,A,ST,B1,DL1,IMM                         GP97330
CLI      OPCD  95,SI,CC,A,B1,DL1,IMM                            GP97330
OI       OPCD  96,SI,CL,A,ST,B1,DL1,IMM                         GP97330
XI       OPCD  97,SI,CL,A,ST,B1,DL1,IMM                         GP97330
LM       OPCD  98,RS,A,R,B2,DLR,DL4,DOREG,GO=GOLM,FORM=RS132    GP99097
TRACE    OPCD  99,RS,P,A,SP,T,B2,DL4                            GP99096
LAM      OPCD  9A,RS,A,SP,UB,DOACR,GO=GOLAM,FORM=RA132          GP00029
STAM     OPCD  9B,RS,A,SP,ST,UB,DOACR,GO=GOSTAM,FORM=RA132      GP00029
VCTA4    OPCD  A4,RS                                            GP99096
*VCTA5   OPCD  A5,RS             (OLD?) VECTOR INSTRUCTIONS     GP99096
         OPTB  A5,X'0F',0,15   MASK, NO SHIFT, MAX = 16         GP03004
IIHH     OPCD  A500,RI,MASK=RSS,FORM=RSA                        GP03004
IIHL     OPCD  A501,RI,MASK=RSS,FORM=RSA                        GP03004
IILH     OPCD  A502,RI,MASK=RSS,FORM=RSA                        GP03004
IILL     OPCD  A503,RI,MASK=RSS,FORM=RSA                        GP03004
AIHH     OPCD  A504,RI,MASK=RSS,FORM=RSA                        GP03004
AIHL     OPCD  A505,RI,MASK=RSS,FORM=RSA                        GP03004
AILH     OPCD  A506,RI,MASK=RSS,FORM=RSA                        GP03004
AILL     OPCD  A507,RI,MASK=RSS,FORM=RSA                        GP03004
OIHH     OPCD  A508,RI,MASK=RSS,FORM=RSA                        GP03004
OIHL     OPCD  A509,RI,MASK=RSS,FORM=RSA                        GP03004
OILH     OPCD  A50A,RI,MASK=RSS,FORM=RSA                        GP03004
OILL     OPCD  A50B,RI,MASK=RSS,FORM=RSA                        GP03004
LLIHH    OPCD  A50C,RI,MASK=RSS,FORM=RSA                        GP03004
LLIHL    OPCD  A50D,RI,MASK=RSS,FORM=RSA                        GP03004
LLILH    OPCD  A50E,RI,MASK=RSS,FORM=RSA                        GP03004
LLILL    OPCD  A50F,RI,MASK=RSS,FORM=RSA                        GP03004
VCTA6    OPCD  A6,RS                                            GP99096
         SPACE 1                                                GP00169
         OPTB  A7,X'0F',0,15   MASK, NO SHIFT, MAX = 16
*TMH     OPCD  A700,RI,CL,IR,MASK=RIR,FORM=RR1                  GP03004
TMLH     OPCD  A700,RI,CL,IR,MASK=RIR,FORM=RR1                  GP03004
*TML     OPCD  A701,RI,CL,IR,MASK=RIR,FORM=RR1                  GP03004
TMLL     OPCD  A701,RI,CL,IR,MASK=RIR,FORM=RR1                  GP03004
BRC      OPCD  A704,RI,IR,B,DLI,GO=BRC                          GP99096
BRAS     OPCD  A705,RI,IR,B,DLI,R,GO=BRAS
BRCT     OPCD  A706,RI,IR,B,DLI,R,GO=BCTBCTR                    GP99096
BRCTG    OPCD  A707,RI,IR,B,DLI,R,GO=BCTBCTR                    GP03004
LHI      OPCD  A708,RI,IR,R                                     GP00169
LGHI     OPCD  A709,RI,IR,R                                     GP03004
AHI      OPCD  A70A,RI,CA,IR,IF,R                               GP99163
AGHI     OPCD  A70B,RI,CA,IR,IF,R                               GP03004
MHI      OPCD  A70C,RI,IR,R                                     GP00169
MGHI     OPCD  A70D,RI,IR,R                                     GP03004
CHI      OPCD  A70E,RI,CA,IR                                    GP99163
CGHI     OPCD  A70F,RI,CA,IR                                    GP03004
         SPACE 1                                                GP00169
MVCLE    OPCD  A8,RS,CL,CM,A,SP,R,ST,R1,R3,DL4,FORM=RSLM        GP99096
CLCLE    OPCD  A9,RS,CC,CM,A,SP,R,R1,R3,DL4,FORM=RSLM           GP99096
STNSM    OPCD  AC,SI,P,A,ST,B1,DL1                              GP97344
STOSM    OPCD  AD,SI,P,A,SP,ST,B1,DL1                           GP97344
SIGP     OPCD  AE,RS,CA,P,R,FORM=RSRA                           GP97344
MC       OPCD  AF,SI,SP,MO,FORM=SA                              GP97344
LRA      OPCD  B1,RX,CA,P,A,AT,R,BP,FORM=RXA                    GP97344
         SPACE 1                                                GP00169
         OPTB  B2,X'FF',0,255   NO MASK, NO SHIFT, MAX = 256    GP97330
STIDP    OPCD  B202,S,P,A,SP,ST,B2,DL8                          GP97344
SCK      OPCD  B204,S,C,P,A,SP,B2,DL8                           GP97344
STCK     OPCD  B205,S,CL,A,ST,B2,DL8                            GP97344
SCKC     OPCD  B206,S,P,A,SP,B2,DL8                             GP97344
STCKC    OPCD  B207,S,P,A,SP,ST,B2,DL8                          GP97344
SPT      OPCD  B208,S,P,A,SP,B2,DL8                             GP97344
STPT     OPCD  B209,S,P,A,SP,ST,B2,DL8                          GP97344
SPKA     OPCD  B20A,S,Q,FORM=SA                                 GP97344
IPK      OPCD  B20B,S,Q,G2,R,FORM=EG2                           GP03003
PTLB     OPCD  B20D,S,P,FORM=E                                  GP97344
SPX      OPCD  B210,S,P,A,SP,B2,DL4                             GP97344
STPX     OPCD  B211,S,P,A,SP,ST,B2,DL4                          GP97344
STAP     OPCD  B212,S,P,A,SP,ST,B2,DL2                          GP97344
*RRB     OPCD  B213,S,C,P,A,FORM=SA                             GP97344
PC       OPCD  B218,S,Q,A,Z,T,GM,B,R,ST,GOREG,FORM=SPC          GP03325
*PCF     OPCD  B218,S,FORM=SPC               **OPDEF**          GP00204
SAC      OPCD  B219,S,Q,SP,SW,FORM=SA,GO=GOSAC                  GP00029
CFC      OPCD  B21A,S,CL,A,SP,II,GM,R,I1                        GP99163
IPTE     OPCD  B221,RRE,P,A                                     GP00169
IPM      OPCD  B222,RRE,R,FORM=RR1,GO=GOIPM                     GP03003
IVSK     OPCD  B223,RRE,Q,A,SO,R,R2                             GP00169
IAC      OPCD  B224,RRE,C,Q,SO,R,MASK=RRE1,FORM=RR1,GO=GOIAC    GP03008
SSAR     OPCD  B225,RRE,A,Z2,T,FORM=RR1                         GP97344
EPAR     OPCD  B226,RRE,Q,SO,R,FORM=RR1                         GP97344
ESAR     OPCD  B227,RRE,Q,SO,R,FORM=RR1                         GP97344
PT       OPCD  B228,RRE,Q,A,SP,Z,T,B                            GP97344
ISKE     OPCD  B229,RRE,P,A                                     GP00169
RRBE     OPCD  B22A,RRE,C,P,A,FORM=RR3                          GP97344
SSKE     OPCD  B22B,RRE,P,A                                     GP00169
TB       OPCD  B22C,RRE,C,P,A,II,GO,R,FORM=RR3                  GP97344
DXR      OPCD  B22D,RRE,SP,EU,EO,FK,FTP,DL16,FORM=XRR           GP97344
PGIN     OPCD  B22E,RRE,FORM=XRR                                GP03004
PGOUT    OPCD  B22F,RRE,FORM=XRR                                GP03004
CSCH     OPCD  B230,S,C,P,OP,GS                                 GP00169
HSCH     OPCD  B231,S,C,P,OP,GS                                 GP00169
MSCH     OPCD  B232,S,C,P,A,SP,OP,GS,B2                         GP00169
SSCH     OPCD  B233,S,C,P,A,SP,OP,GS,B2                         GP00169
STSCH    OPCD  B234,S,C,P,A,SP,OP,GS,ST,B2                      GP00169
TSCH     OPCD  B235,S,C,P,A,SP,OP,GS,ST,B2                      GP00169
TPI      OPCD  B236,S,C,P,A,SP,ST,B2                            GP00169
SAL      OPCD  B237,S,P,OP,G1                                   GP00169
RSCH     OPCD  B238,S,C,P,OP,GS                                 GP00169
STCRW    OPCD  B239,S,C,P,A,SP,ST,B2                            GP00169
STCPS    OPCD  B23A,S,C,P,A,SP,ST,B2                            GP00169
RCHP     OPCD  B23B,S,C,P,OP,G1                                 GP00169
SCHM     OPCD  B23C,S,P,OP,GM                                   GP00169
BAKR     OPCD  B240,RRE,A,SF,T,B,DLI,ST,DOACR,DOREG,GO=GOBAKR   GP03003
CKSM     OPCD  B241,RRE,CL,CK,A,SP,R,R2,DLR4,FORM=RRECK         GP99096
MADS     OPCD  B243,RRE,QR,SP,SQ   ARITHM. ASSIST               GP97338
SQDR     OPCD  B244,RRE,QR,SP,SQ                                GP97338
SQRT     OPCD  B245,RRE,QR,SP,SQ                                GP00169
STURA    OPCD  B246,RRE,P,A,SP,SU                               GP00169
MSTA     OPCD  B247,RRE,A,SP,SE,ST,FORM=RR1,GO=GOMSTA           GP99096
PALB     OPCD  B248,RRE,P,FORM=E                                GP99096
EREG     OPCD  B249,RRE,A,SE,R,U1,U2,DOACR,DOREG,GO=GOEREG      GP00169
ESTA     OPCD  B24A,RRE,CL,A,SP,SE,R,DOREG,GO=GOESTA,FORM=RRD   GP03008
LURA     OPCD  B24B,RRE,P,A,SP,R                                GP00169
TAR      OPCD  B24C,RRE,CL,A,AS,U1                              GP99163
CPYA     OPCD  B24D,RRE,U1,U2,FORM=RRA,GO=GOCPYA                GP00204
SAR      OPCD  B24E,RRE,U1,FORM=RRAGN,GO=GOSAR                  GP00204
EAR      OPCD  B24F,RRE,R,U2,FORM=RRGAN,GO=GOEAR                GP00204
MSR      OPCD  B252,RRE,IR,R                                    GP00169
MVPG     OPCD  B254,RRE,CL,M1,A,SP,GO,ST,R1,R2                  GP99163
*VPG     OPCD  B254,RRE,CL,M2,Q,A,SP,GO,ST,R1,R2                GP99163
MVST     OPCD  B255,RRE,CL,SR,A,SP,GO,R,ST,R1,R2,FORM=RREST     GP99096
CUSE     OPCD  B257,RRE,CC,A,SP,II,GM,R1,R2,FORM=RRESST         GP99096
BSG      OPCD  B258,RRE,SG,A,SO,T,B,DLI,R,R2                    GP97345
BSA      OPCD  B25A,RRE,BS,Q,A,SO,T,B                           GP99096
CLST     OPCD  B25D,RRE,CC,SR,A,SP,GO,R1,R2,FORM=RREST          GP99096
SRST     OPCD  B25E,RRE,CL,SR,A,SP,GO,R2,FORM=RREST1            GP99096
CMPSC    OPCD  B263,RRE                                         GP03004
XSCH     OPCD  B276,S                                           GP03004
RP       OPCD  B277,S,DOREG,DOACR,FORM=RS12,GO=GORP LENGTH=12!  GP00204
STCKE    OPCD  B278,S                                           GP03004
SACF     OPCD  B279,S,SA,Q,SP,SW,FORM=SA,GO=GOSAC               GP00029
STSI     OPCD  B27D,S,C,SN,P,A,SP,R,ST
SRNM     OPCD  B299,S,BF
STFPC    OPCD  B29C,S,BF,A,ST,B2
LFPC     OPCD  B29D,S,BF,A,B2
TRE      OPCD  B2A5,RRE,C,ET,A,SP,R,ST,R1,R2
CUUTF    OPCD  B2A6,RRE,C,ET,A,SP,R,ST,R1,R2
CUTFU    OPCD  B2A7,RRE,C,ET,A,SP,R,ST,R1,R2
STFL     OPCD  B2B1,S                                           GP03004
LPSWE    OPCD  B2B2,S                                           GP03004
TRAP4    OPCD  B2FF,S,TR,A,SO,T,GM,B,R,ST,GO=GOTRAP4            GP11350
         SPACE 1
         OPTB  B3,X'FF',0,255       NO MASK, NO SHIFT, MAX = 256
LPEBR    OPCD  B300,RRE,C,BF,D,X,FORM=DRR
LNEBR    OPCD  B301,RRE,C,BF,D,X,FORM=DRR
LTEBR    OPCD  B302,RRE,C,BF,D,X,FORM=DRR
LCEBR    OPCD  B303,RRE,C,BF,D,X,FORM=DRR
LDEBR    OPCD  B304,RRE,C,BF,D,X,FORM=DRR
LXDBR    OPCD  B305,RRE,C,BF,D,X,FORM=DRR
LXEBR    OPCD  B306,RRE,C,BF,D,X,FORM=DRR
MXDBR    OPCD  B307,RRE,C,BF,D,X,FORM=DRR
KEBR     OPCD  B308,RRE,C,BF,D,X,FORM=DRR
CEBR     OPCD  B309,RRE,C,BF,D,X,FORM=DRR
AEBR     OPCD  B30A,RRE,C,BF,D,X,FORM=DRR
SEBR     OPCD  B30B,RRE,C,BF,D,X,FORM=DRR
MDEBR    OPCD  B30C,RRE,C,BF,D,X,FORM=DRR
DEBR     OPCD  B30D,RRE,C,BF,D,X,FORM=DRR
MAEBR    OPCD  B30E,RRF,C,BF,D,X,FORM=DRR
MSEBR    OPCD  B30F,RRF,C,BF,D,X,FORM=DRR
LPDBR    OPCD  B310,RRE,C,BF,D,X,FORM=DRR
LNDBR    OPCD  B311,RRE,C,BF,D,X,FORM=DRR
LTDBR    OPCD  B312,RRE,C,BF,D,X,FORM=DRR
LCDBR    OPCD  B313,RRE,C,BF,D,X,FORM=DRR
SQEBR    OPCD  B314,RRE,C,BF,D,X,FORM=DRR
SQDBR    OPCD  B315,RRE,C,BF,D,X,FORM=DRR
SQXBR    OPCD  B316,RRE,C,BF,D,X,FORM=DRR
MEEBR    OPCD  B317,RRE,C,BF,D,X,FORM=DRR
KDBR     OPCD  B318,RRE,C,BF,D,X,FORM=DRR
CDBR     OPCD  B319,RRE,C,BF,D,X,FORM=DRR
ADBR     OPCD  B31A,RRE,C,BF,D,X,FORM=DRR
SDBR     OPCD  B31B,RRE,C,BF,D,X,FORM=DRR
MDBR     OPCD  B31C,RRE,C,BF,D,X,FORM=DRR
DDBR     OPCD  B31D,RRE,C,BF,D,X,FORM=DRR
MADBR    OPCD  B31E,RRF,C,BF,D,X,FORM=DRR
MSDBR    OPCD  B31F,RRF,C,BF,D,X,FORM=DRR
LDER     OPCD  B324,RRE,C,BF,D,X,FORM=DRR
LXDR     OPCD  B325,RRE,C,BF,D,X,FORM=DRR
LXER     OPCD  B326,RRE,C,BF,D,X,FORM=DRR
SQXR     OPCD  B336,RRE,C,BF,D,X,FORM=DRR
MEER     OPCD  B337,RRE,C,BF,D,X,FORM=DRR
LPXBR    OPCD  B340,RRE,C,BF,D,X,FORM=DRR
LNXBR    OPCD  B341,RRE,C,BF,D,X,FORM=DRR
LTXBR    OPCD  B342,RRE,C,BF,D,X,FORM=DRR
LCXBR    OPCD  B343,RRE,C,BF,D,X,FORM=DRR
LEDBR    OPCD  B344,RRE,C,BF,D,X,FORM=DRR
LDXBR    OPCD  B345,RRE,C,BF,D,X,FORM=DRR
LEXBR    OPCD  B346,RRE,C,BF,D,X,FORM=DRR
FIXBR    OPCD  B347,RRE,C,BF,D,X,FORM=DRR
KXBR     OPCD  B348,RRE,C,BF,D,X,FORM=DRR
CXBR     OPCD  B349,RRE,C,BF,D,X,FORM=DRR
AXBR     OPCD  B34A,RRE,C,BF,D,X,FORM=DRR
SXBR     OPCD  B34B,RRE,C,BF,D,X,FORM=DRR
MXBR     OPCD  B34C,RRE,C,BF,D,X,FORM=DRR
DXBR     OPCD  B34D,RRE,C,BF,D,X,FORM=DRR
TBEDR    OPCD  B350,RRF,C,BF,D,X,FORM=DRR
TBDR     OPCD  B351,RRF,C,BF,D,X,FORM=DRR
DIEBR    OPCD  B353,RRF,C,BF,D,X,FORM=DRR
FIEBR    OPCD  B357,RRF,C,BF,D,X,FORM=DRR
THDER    OPCD  B358,RRE,C,BF,D,X,FORM=DRR
THDR     OPCD  B359,RRE,C,BF,D,X,FORM=DRR
DIDBR    OPCD  B35B,RRF,C,BF,D,X,FORM=DRR
FIDBR    OPCD  B35F,RRF,C,BF,D,X,FORM=DRR
LPXR     OPCD  B360,RRE,C,BF,D,X,FORM=DRR
LNXR     OPCD  B361,RRE,C,BF,D,X,FORM=DRR
LTXR     OPCD  B362,RRE,C,BF,D,X,FORM=DRR
LCXR     OPCD  B363,RRE,C,BF,D,X,FORM=DRR
LXR      OPCD  B365,RRE,C,BF,D,X,FORM=DRR
LEXR     OPCD  B366,RRE,C,BF,D,X,FORM=DRR
FIXR     OPCD  B367,RRE,C,BF,D,X,FORM=DRR
CXR      OPCD  B369,RRE,C,BF,D,X,FORM=DRR
LZER     OPCD  B374,RRE,C,BF,D,X,FORM=DRR
LZDR     OPCD  B375,RRE,C,BF,D,X,FORM=DRR
LZXR     OPCD  B376,RRE,C,BF,D,X,FORM=DRR
FIER     OPCD  B377,RRE,C,BF,D,X,FORM=DRR
FIDR     OPCD  B37F,RRE,C,BF,D,X,FORM=DRR
SFPC     OPCD  B384,RRE,C,BF,D,X,FORM=DRR
EFPC     OPCD  B38C,RRE,C,BF,D,X,FORM=DRR
CEFBR    OPCD  B394,RRE,C,BF,D,X,FORM=DRR
CDFBR    OPCD  B395,RRE,C,BF,D,X,FORM=DRR
CXFBR    OPCD  B396,RRE,C,BF,D,X,FORM=DRR
CFEBR    OPCD  B398,RRF,C,BF,D,X,FORM=DRR
CFDBR    OPCD  B399,RRF,C,BF,D,X,FORM=DRR
CFXBR    OPCD  B39A,RRF,C,BF,D,X,FORM=DRR
CEGBR    OPCD  B3A4,RRE,C,BF,D,X,FORM=DRR ?                     GP03004
CDGBR    OPCD  B3A5,RRE,C,BF,D,X,FORM=DRR ?                     GP03004
CXGBR    OPCD  B3A6,RRE,C,BF,D,X,FORM=DRR ?                     GP03004
CGEBR    OPCD  B3A8,RRF,C,BF,D,X,FORM=DRR ?                     GP03004
CGDBR    OPCD  B3A9,RRF,C,BF,D,X,FORM=DRR ?                     GP03004
CGXBR    OPCD  B3AA,RRF,C,BF,D,X,FORM=DRR ?                     GP03004
CEFR     OPCD  B3B4,RRE,C,BF,D,X,FORM=DRR
CDFR     OPCD  B3B5,RRE,C,BF,D,X,FORM=DRR
CXFR     OPCD  B3B6,RRE,C,BF,D,X,FORM=DRR
CFER     OPCD  B3B8,RRF,C,BF,D,X,FORM=DRR
CFDR     OPCD  B3B9,RRF,C,BF,D,X,FORM=DRR
CFXR     OPCD  B3BA,RRF,C,BF,D,X,FORM=DRR
CEGR     OPCD  B3C4,RRE,C,BF,D,X,FORM=DRR ?                     GP03004
CDGR     OPCD  B3C5,RRE,C,BF,D,X,FORM=DRR ?                     GP03004
CXGR     OPCD  B3C6,RRE,C,BF,D,X,FORM=DRR ?                     GP03004
CGER     OPCD  B3C8,RRF,C,BF,D,X,FORM=DRR ?                     GP03004
CGDR     OPCD  B3C9,RRF,C,BF,D,X,FORM=DRR ?                     GP03004
CGXR     OPCD  B3CA,RRF,C,BF,D,X,FORM=DRR ?                     GP03004
         SPACE 1                                                GP00169
STCTL    OPCD  B6,RS,P,A,SP,ST,B2,FORM=SA                       GP97344
LCTL     OPCD  B7,RS,P,A,SP,B2,FORM=SA                          GP97344
         SPACE 1                                                GP03004
         OPTB  B9,X'FF',0,255       NO MASK, NO SHIFT, MAX = 256
LPGR     OPCD  B900,RRE                   ?                     GP03004
LNGR     OPCD  B901,RRE                   ?                     GP03004
LTGR     OPCD  B902,RRE                   ?                     GP03004
LCGR     OPCD  B903,RRE                   ?                     GP03004
LGR      OPCD  B904,RRE                   ?                     GP03004
LURAG    OPCD  B905,RRE                   ?                     GP03004
AGR      OPCD  B908,RRE                   ?                     GP03004
SGR      OPCD  B909,RRE                   ?                     GP03004
ALGR     OPCD  B90A,RRE                   ?                     GP03004
SLGR     OPCD  B90B,RRE                   ?                     GP03004
MSGR     OPCD  B90C,RRE                   ?                     GP03004
DSGR     OPCD  B90D,RRE                   ?                     GP03004
EREGG    OPCD  B90E,RRE                   ?                     GP03004
LRVGR    OPCD  B90F,RRE                   ?                     GP03004
LPGFR    OPCD  B910,RRE                   ?                     GP03004
LNGFR    OPCD  B911,RRE                   ?                     GP03004
LTGFR    OPCD  B912,RRE                   ?                     GP03004
LCGFR    OPCD  B913,RRE                   ?                     GP03004
LGFR     OPCD  B914,RRE                   ?                     GP03004
LLGFR    OPCD  B916,RRE                   ?                     GP03004
LLGTR    OPCD  B917,RRE                   ?                     GP03004
AGFR     OPCD  B918,RRE                   ?                     GP03004
SGFR     OPCD  B919,RRE                   ?                     GP03004
ALGFR    OPCD  B91A,RRE                   ?                     GP03004
SLGFR    OPCD  B91B,RRE                   ?                     GP03004
MSGFR    OPCD  B91C,RRE                   ?                     GP03004
DSGFR    OPCD  B91D,RRE                   ?                     GP03004
LRVR     OPCD  B91F,RRE                   ?                     GP03004
CGR      OPCD  B920,RRE                   ?                     GP03004
CLGR     OPCD  B921,RRE                   ?                     GP03004
STURG    OPCD  B925,RRE                   ?                     GP03004
CGFR     OPCD  B930,RRE                   ?                     GP03004
CLGFR    OPCD  B931,RRE                   ?                     GP03004
BCTGR    OPCD  B946,RRE                   ?                     GP03004
NGR      OPCD  B980,RRE                   ?                     GP03004
OGR      OPCD  B981,RRE                   ?                     GP03004
XGR      OPCD  B982,RRE                   ?                     GP03004
MLGR     OPCD  B986,RRE                   ?                     GP03004
DLGR     OPCD  B987,RRE                   ?                     GP03004
ALCGR    OPCD  B988,RRE                   ?                     GP03004
SLBGR    OPCD  B989,RRE                   ?                     GP03004
EPSW     OPCD  B98D,RRE                   ?                     GP03004
TRTT     OPCD  B990,RRE                   ?                     GP03004
TRTO     OPCD  B991,RRE                   ?                     GP03004
TROT     OPCD  B992,RRE                   ?                     GP03004
TROO     OPCD  B993,RRE                   ?                     GP03004
MLR      OPCD  B996,RRE                   ?                     GP03004
DLR      OPCD  B997,RRE                   ?                     GP03004
ALCR     OPCD  B998,RRE                   ?                     GP03004
SLBR     OPCD  B999,RRE                   ?                     GP03004
ESEA     OPCD  B99D,RRE                   ?                     GP03004
         SPACE 1                                                GP03004
CS       OPCD  BA,RS,CC,A,SP,R,ST,B2,DL4                        GP97344
CDS      OPCD  BB,RS,CC,A,SP,R,ST,B2,DL8,FORM=RSD               GP97344
CLM      OPCD  BD,RS,CC,A,B2,DLM,IMK,FORM=RSM                   GP97344
STCM     OPCD  BE,RS,A,ST,B2,DLM,IMK,FORM=RSM                   GP97344
ICM      OPCD  BF,RS,CA,A,R,B2,DLM,IMK,FORM=RSM                 GP97344
         SPACE 1                                                GP03004
         OPTB  C0,X'0F',0,15   MASK, NO SHIFT, MAX = 16         GP03004
LARL     OPCD  C000,RIL,MASK=RIL,FORM=RR1   ?                   GP03004
BRCL     OPCD  C004,RIL,MASK=RIL,FORM=RR1   ?                   GP03004
BRASL    OPCD  C005,RIL,MASK=RIL,FORM=RR1   ?                   GP03004
         SPACE 1                                                GP03004
MVN      OPCD  D1,SS,A,ST,B1,B2,DLS,FORM=SSLONG                 GP97330
MVC      OPCD  D2,SS,A,ST,B1,B2,DLS,FORM=SSLONG                 GP97330
MVZ      OPCD  D3,SS,A,ST,B1,B2,DLS,FORM=SSLONG                 GP97330
NC       OPCD  D4,SS,CL,A,ST,B1,B2,DLS,FORM=SSLONG              GP97330
CLC      OPCD  D5,SS,CC,A,B1,B2,DLS,FORM=SSLONG                 GP97330
OC       OPCD  D6,SS,CL,A,ST,B1,B2,DLS,FORM=SSLONG              GP97330
XC       OPCD  D7,SS,CL,A,ST,B1,B2,DLS,FORM=SSLONG              GP97330
MVCK     OPCD  D9,SS,CA,Q,A,ST,B1,B2,DLR,MASK=SSR,FORM=SSR2     GP97344
MVCP     OPCD  DA,SS,CA,Q,A,SO,ST,DLR,MASK=SSR,FORM=SSR4        GP97344
MVCS     OPCD  DB,SS,CA,Q,A,SO,ST,DLR,MASK=SSR,FORM=SSR2        GP97344
TR       OPCD  DC,SS,A,ST,B1,B2,DLS,FORM=SS1                    GP97344
TRT      OPCD  DD,SS,CA,A,GM,R,B1,B2,DLS,FORM=SS12              GP97344
ED       OPCD  DE,SS,CA,A,D,ST,B1,B2,DLS,FORM=SS1               GP97344
EDMK     OPCD  DF,SS,CA,A,D,G1,R,ST,B1,B2,DLS,FORM=SS11         GP97344
PKU      OPCD  E1,SS,E2,A,ST,B1,B2,MASK=SS2 FORM= ?             GP03004
UNPKU    OPCD  E2,SS,E2,A,ST,B1,B2,MASK=SS  FORM= ?             GP03004
         SPACE 1                                                GP03004
         OPTB  E3,X'FF',0,255,BO=3  NO MASK, NO SHIFT, MAX = 256
LRAG     OPCD  E303,RXE,MASK=RX,FORM=RX   ?                     GP03004
LG       OPCD  E304,RXE,MASK=RX,FORM=RX   ?                     GP03004
AG       OPCD  E308,RXE,MASK=RX,FORM=RX   ?                     GP03004
SG       OPCD  E309,RXE,MASK=RX,FORM=RX   ?                     GP03004
ALG      OPCD  E30A,RXE,MASK=RX,FORM=RX   ?                     GP03004
SLG      OPCD  E30B,RXE,MASK=RX,FORM=RX   ?                     GP03004
MSG      OPCD  E30C,RXE,MASK=RX,FORM=RX   ?                     GP03004
DSG      OPCD  E30D,RXE,MASK=RX,FORM=RX   ?                     GP03004
CVBG     OPCD  E30E,RXE,MASK=RX,FORM=RX   ?                     GP03004
LRVG     OPCD  E30F,RXE,MASK=RX,FORM=RX   ?                     GP03004
LGF      OPCD  E314,RXE,MASK=RX,FORM=RX   ?                     GP03004
LGH      OPCD  E315,RXE,MASK=RX,FORM=RX   ?                     GP03004
LLGF     OPCD  E316,RXE,MASK=RX,FORM=RX   ?                     GP03004
LLGT     OPCD  E317,RXE,MASK=RX,FORM=RX   ?                     GP03004
AGF      OPCD  E318,RXE,MASK=RX,FORM=RX   ?                     GP03004
SGF      OPCD  E319,RXE,MASK=RX,FORM=RX   ?                     GP03004
ALGF     OPCD  E31A,RXE,MASK=RX,FORM=RX   ?                     GP03004
SLGF     OPCD  E31B,RXE,MASK=RX,FORM=RX   ?                     GP03004
MSGF     OPCD  E31C,RXE,MASK=RX,FORM=RX   ?                     GP03004
DSGF     OPCD  E31D,RXE,MASK=RX,FORM=RX   ?                     GP03004
LRV      OPCD  E31E,RXE,MASK=RX,FORM=RX   ?                     GP03004
LRVH     OPCD  E31F,RXE,MASK=RX,FORM=RX   ?                     GP03004
CG       OPCD  E320,RXE,MASK=RX,FORM=RX   ?                     GP03004
CLG      OPCD  E321,RXE,MASK=RX,FORM=RX   ?                     GP03004
STG      OPCD  E324,RXE,MASK=RX,FORM=RX   ?                     GP03004
CVDG     OPCD  E32E,RXE,MASK=RX,FORM=RX   ?                     GP03004
STRVG    OPCD  E32F,RXE,MASK=RX,FORM=RX   ?                     GP03004
CGF      OPCD  E330,RXE,MASK=RX,FORM=RX   ?                     GP03004
CLGF     OPCD  E331,RXE,MASK=RX,FORM=RX   ?                     GP03004
STRV     OPCD  E33E,RXE,MASK=RX,FORM=RX   ?                     GP03004
STRVH    OPCD  E33F,RXE,MASK=RX,FORM=RX   ?                     GP03004
BCTG     OPCD  E346,RXE,MASK=RX,FORM=RX   ?                     GP03004
NG       OPCD  E380,RXE,MASK=RX,FORM=RX   ?                     GP03004
OG       OPCD  E381,RXE,MASK=RX,FORM=RX   ?                     GP03004
XG       OPCD  E382,RXE,MASK=RX,FORM=RX   ?                     GP03004
MLG      OPCD  E386,RXE,MASK=RX,FORM=RX   ?                     GP03004
DLG      OPCD  E387,RXE,MASK=RX,FORM=RX   ?                     GP03004
ALCG     OPCD  E388,RXE,MASK=RX,FORM=RX   ?                     GP03004
SLBG     OPCD  E389,RXE,MASK=RX,FORM=RX   ?                     GP03004
STPQ     OPCD  E38E,RXE,MASK=RX,FORM=RX   ?                     GP03004
LPQ      OPCD  E38F,RXE,MASK=RX,FORM=RX   ?                     GP03004
LLGC     OPCD  E390,RXE,MASK=RX,FORM=RX   ?                     GP03004
LLGH     OPCD  E391,RXE,MASK=RX,FORM=RX   ?                     GP03004
ML       OPCD  E396,RXE,MASK=RX,FORM=RX   ?                     GP03004
DL       OPCD  E397,RXE,MASK=RX,FORM=RX   ?                     GP03004
ALC      OPCD  E398,RXE,MASK=RX,FORM=RX   ?                     GP03004
SLB      OPCD  E399,RXE,MASK=RX,FORM=RX   ?                     GP03004
         SPACE 1                                                GP03004
VCT4     OPCD  E4,SS (RSE,MASK=RX,FORM=RX) ?                    GP99096
         SPACE 1                                                GP00169
         OPTB  E5,X'FF',0,15    NO MASK, NO SHIFT, MAX = 15     GP97330
LASP     OPCD  E500,SSE,C,P,A,SP,AS,B1,FORM=S                   GP97344
TPROT    OPCD  E501,SSE,C,P,A,B1,FORM=SSA                       GP97344
STRAG    OPCD  E502,SSE,C,P,A,B1,FORM=SSA   ?                   GP03004
MVCSK    OPCD  E50E,SSE,Q,A,GM,ST,B1,B2,DLR,MASK=SSR,FORM=SS    GP97344
MVCDK    OPCD  E50F,SSE,Q,A,GM,ST,B1,B2,DLR,MASK=SSR,FORM=SS    GP97344
         SPACE 1                                                GP00169
MVCIN    OPCD  E8,SS,MI,A,ST,B1,B2,DLS,FORM=SSIN                GP97344
PKA      OPCD  E9,SS,MI,A,ST,B1,B2,DLS,MASK=SS2   ?             GP03004
UNPKA    OPCD  EA,SS,MI,A,ST,B1,B2,DLS            ?             GP03004
         SPACE 1                                                GP03004
         OPTB  EB,X'FF',0,255,BO=3   NO MASK, SHIFT, MAX=255    GP03004
LMG      OPCD  EB04,RSE,MASK=RX,FORM=RX                         GP03004
SRAG     OPCD  EB0A,RSE,MASK=RX,FORM=RX                         GP03004
SLAG     OPCD  EB0B,RSE,MASK=RX,FORM=RX                         GP03004
SRLG     OPCD  EB0C,RSE,MASK=RX,FORM=RX                         GP03004
SLLG     OPCD  EB0D,RSE,MASK=RX,FORM=RX                         GP03004
TRACG    OPCD  EB0F,RSE,MASK=RX,FORM=RX                         GP03004
RLLG     OPCD  EB1C,RSE,MASK=RX,FORM=RX                         GP03004
RLL      OPCD  EB1D,RSE,MASK=RX,FORM=RX                         GP03004
CLMH     OPCD  EB20,RSE,MASK=RX,FORM=RX                         GP03004
STMG     OPCD  EB24,RSE,MASK=RX,FORM=RX                         GP03004
STCTG    OPCD  EB25,RSE,MASK=RX,FORM=RX                         GP03004
STMH     OPCD  EB26,RSE,MASK=RX,FORM=RX                         GP03004
STCMH    OPCD  EB2C,RSE,MASK=RX,FORM=RX                         GP03004
LCTLG    OPCD  EB2F,RSE,MASK=RX,FORM=RX                         GP03004
CSG      OPCD  EB30,RSE,MASK=RX,FORM=RX                         GP03004
CDSG     OPCD  EB3E,RSE,MASK=RX,FORM=RX                         GP03004
BXHG     OPCD  EB44,RSE,MASK=RX,FORM=RX                         GP03004
BXLEG    OPCD  EB45,RSE,MASK=RX,FORM=RX                         GP03004
ICMH     OPCD  EB80,RSE,MASK=RX,FORM=RX                         GP03004
MVCLU    OPCD  EB8E,RSE,MASK=RX,FORM=RX                         GP03004
CLCLU    OPCD  EB8F,RSE,MASK=RX,FORM=RX                         GP03004
LMH      OPCD  EB96,RSE,MASK=RX,FORM=RX                         GP03004
TP       OPCD  EBC0,RSL,MASK=RSS,FORM=SI                        GP03004
         SPACE 1                                                GP03004
         OPTB  EC,X'FF',0,127,BO=3   NO MASK, NO SHIFT, MAX=128 (+)
BRXHG    OPCD  EC44,RIE,MASK=RSI,FORM=RSSX                      GP03004
BRXLG    OPCD  EC45,RIE,MASK=RSI,FORM=RSSX                      GP03004
         SPACE 1                                                GP03004
         OPTB  ED,X'FF',0,127,BO=3   NO MASK, NO SHIFT, MAX=128 (+)
LDEB     OPCD  ED04,RXE,C,BF,A,D,X,BE,FORM=DRX
LXDB     OPCD  ED05,RXE,C,BF,A,D,X,BE,FORM=DRX
LXEB     OPCD  ED06,RXE,C,BF,A,D,X,BE,FORM=DRX
MXDB     OPCD  ED07,RXE,C,BF,A,D,X,BE,FORM=DRX
KEB      OPCD  ED08,RXE,C,BF,A,D,X,BE,FORM=DRX
CEB      OPCD  ED09,RXE,C,BF,A,D,X,BE,FORM=DRX
AEB      OPCD  ED0A,RXE,C,BF,A,D,X,BE,FORM=DRX
SEB      OPCD  ED0B,RXE,C,BF,A,D,X,BE,FORM=DRX
MDEB     OPCD  ED0C,RXE,C,BF,A,D,X,BE,FORM=DRX
DEB      OPCD  ED0D,RXE,C,BF,A,D,X,BE,FORM=DRX
MAEB     OPCD  ED0E,RXF,C,BF,A,D,X,BE,FORM=DRX
MSEB     OPCD  ED0F,RXF,C,BF,A,D,X,BE,FORM=DRX
TCEB     OPCD  ED10,RXE,C,BF,A,D,X,BE,FORM=DRX
TCDB     OPCD  ED11,RXE,C,BF,A,D,X,BE,FORM=DRX
TCXB     OPCD  ED12,RXE,C,BF,A,D,X,BE,FORM=DRX
SQEB     OPCD  ED14,RXE,C,BF,A,D,X,BE,FORM=DRX
SQDB     OPCD  ED15,RXE,C,BF,A,D,X,BE,FORM=DRX
MEEB     OPCD  ED17,RXE,C,BF,A,D,X,BE,FORM=DRX
KDB      OPCD  ED18,RXE,C,BF,A,D,X,BE,FORM=DRX
CDB      OPCD  ED19,RXE,C,BF,A,D,X,BE,FORM=DRX
ADB      OPCD  ED1A,RXE,C,BF,A,D,X,BE,FORM=DRX
SDB      OPCD  ED1B,RXE,C,BF,A,D,X,BE,FORM=DRX
MDB      OPCD  ED1C,RXE,C,BF,A,D,X,BE,FORM=DRX
DDB      OPCD  ED1D,RXE,C,BF,A,D,X,BE,FORM=DRX
MADB     OPCD  ED1E,RXF,C,BF,A,D,X,BE,FORM=DRX
MSDB     OPCD  ED1F,RXF,C,BF,A,D,X,BE,FORM=DRX
LDE      OPCD  ED24,RXE,C,BF,A,D,X,BE,FORM=DRX
LXD      OPCD  ED25,RXE,C,BF,A,D,X,BE,FORM=DRX
LXE      OPCD  ED26,RXE,C,BF,A,D,X,BE,FORM=DRX
SQE      OPCD  ED34,RXE,C,BF,A,D,X,BE,FORM=DRX
SQD      OPCD  ED35,RXE,C,BF,A,D,X,BE,FORM=DRX
MEE      OPCD  ED37,RXE,C,BF,A,D,X,BE,FORM=DRX
         SPACE 1
PLO      OPCD  EE,SS,CL,PL,A,SP,R,ST,DLSS,MASK=SSE,FORM=SSR4    GP99096
LMD      OPCD  EF,SS,MASK=SSA2,FORM=SSA  ?                      GP03004
SRP      OPCD  F0,SS,CA,A,D,DF,ST,B1,DLSS,MASK=SSI,FORM=SSRP    GP97344
MVO      OPCD  F1,SS,A,ST,B1,B2,DLSS,MASK=SS4                   GP97330
PACK     OPCD  F2,SS,A,ST,B1,B2,DLSS,MASK=SS4                   GP97330
UNPK     OPCD  F3,SS,A,ST,B1,B2,DLSS,MASK=SS4                   GP97330
ZAP      OPCD  F8,SS,CA,A,D,DF,ST,B1,B2,DLSS,MASK=SS4           GP97330
CP       OPCD  F9,SS,CC,A,D,B1,B2,DLSS,MASK=SS4                 GP97330
AP       OPCD  FA,SS,CA,A,D,DF,ST,B1,B2,DLSS,MASK=SS4           GP97330
SP       OPCD  FB,SS,CA,A,D,DF,ST,B1,B2,DLSS,MASK=SS4           GP97330
MP       OPCD  FC,SS,A,SP,D,ST,B1,B2,DLSS,MASK=SS4              GP97330
DP       OPCD  FD,SS,A,SP,D,DK,ST,B1,B2,DLSS,MASK=SS4           GP97330
*   END OF OPCODES                                              GP00169
         SPACE 1                                                GP97338
DATASECT CSECT ,                                                GP97338
@RANGES  DC    ((RNGLEN+3)/4)A(0)  PROGRAM UNRELATED REQUEST QUEUES
PATVAR   DC    ((VARLEN+3)/4)A(0)  VARIABLE PARSING STORAGE     GP97349
PATINS   DC    ((INSLEN+3)/4)A(0)  INSTRUCTION PARSING STORAGE  GP97351
PIESAVE  DC    18A(0)        SPIE RETRY ROUTINE SAVE AREA STACK GP97353
PIESAVE1 DC    18A(0)                                           GP97353
PIESAVE2 DC    18A(0)                                           GP97353
PIESAVE3 DC    18A(0)                                           GP97353
PIESAVE4 DC    18A(0)                                           GP97353
PIESAVE5 DC    18A(0)                                           GP97353
         SPACE 1                                                GP99057
SVCNAMES CSECT ,                                                GP99057
         SVCDEF 00,'EXCP/XDAP'                                  GP99057
         SVCDEF 01,'WAIT/WAITR/PRTOV'                           GP99057
         SVCDEF 02,'POST'                                       GP99057
         SVCDEF 03,'EXIT'                                       GP99057
         SVCDEF 04,'GETMAIN'                                    GP99057
         SVCDEF 05,'FREEMAIN'                                   GP99057
         SVCDEF 06,'LINK/LINKX'                                 GP99057
         SVCDEF 07,'XCTL/XCTLX'                                 GP99057
         SVCDEF 08,'LOAD'                                       GP99057
         SVCDEF 09,'DELETE'                                     GP99057
         SVCDEF 0A,'GETMAIN/FREEMAIN'                           GP99057
         SVCDEF 0B,'TIME'                                       GP99057
         SVCDEF 0C,'SYNCH/SYNCHX'                               GP99057
         SVCDEF 0D,'ABEND'                                      GP99057
         SVCDEF 0E,'SPIE'                                       GP99057
         SVCDEF 0F,'ERREXCP'                                    GP99057
         SVCDEF 10,'PURGE'                                      GP99057
         SVCDEF 11,'RESTORE'                                    GP99057
         SVCDEF 12,'BLDL/FIND (TYPE D)'                         GP99057
         SVCDEF 13,'OPEN'                                       GP99057
         SVCDEF 14,'CLOSE'                                      GP99057
         SVCDEF 15,'STOW'                                       GP99057
         SVCDEF 16,'OPEN (TYPE=J)'                              GP99057
         SVCDEF 17,'CLOSE (TYPE=T)'                             GP99057
         SVCDEF 18,'DEVTYPE'                                    GP99057
         SVCDEF 19,'TRKBAL'                                     GP99057
         SVCDEF 1A,'CATALOG/INDEX/LOCATE'                       GP99057
         SVCDEF 1B,'OBTAIN'                                     GP99057
         SVCDEF 1D,'SCRATCH'                                    GP99057
         SVCDEF 1E,'RENAME'                                     GP99057
         SVCDEF 1F,'FEOV'                                       GP99057
         SVCDEF 20,'ALLOC'                                      GP99057
         SVCDEF 21,'IOHALT'                                     GP99057
         SVCDEF 22,'MGCR/QEDIT'                                 GP99057
         SVCDEF 23,'WTO/WTOR'                                   GP99057
         SVCDEF 24,'WTL'                                        GP99057
         SVCDEF 25,'SEGLD/SEGWT'                                GP99057
         SVCDEF 27,'LABEL'                                      GP99057
         SVCDEF 28,'EXTRACT'                                    GP99057
         SVCDEF 29,'IDENTIFY'                                   GP99057
         SVCDEF 2A,'ATTACH/ATTACHX'                             GP99057
         SVCDEF 2B,'CIRB'                                       GP99057
         SVCDEF 2C,'CHAP'                                       GP99057
         SVCDEF 2D,'OVLYBRCH'                                   GP99057
         SVCDEF 2E,'TIMER'                                      GP99057
         SVCDEF 2F,'STIMER'                                     GP99057
         SVCDEF 30,'DEQ'                                        GP99057
         SVCDEF 32,'NOP'     SVC TO MAKE TRACE TABLE ENTRY      GP99057
         SVCDEF 33,'SNAP/SNAPX/SDUMP/SDUMPX'                    GP99057
         SVCDEF 34,'RESTART'                                    GP99057
         SVCDEF 35,'RELEX'                                      GP99057
         SVCDEF 36,'DISABLE'                                    GP99057
         SVCDEF 37,'EOV'                                        GP99057
         SVCDEF 38,'ENQ/RESERVE'                                GP99057
         SVCDEF 39,'FREEDBUF'                                   GP99057
         SVCDEF 3A,'RELBUF/REQBUF'                              GP99057
         SVCDEF 3B,'OLTEP'                                      GP99057
         SVCDEF 3C,'STAE/STAI-ESTAE/ESTAI'                      GP99057
         SVCDEF 3D,'IKJEGS6A'                                   GP99057
         SVCDEF 3E,'DETACH'                                     GP99057
         SVCDEF 3F,'CHKPT'                                      GP99057
         SVCDEF 40,'RDJFCB'                                     GP99057
         SVCDEF 42,'BTAMTEST'                                   GP99057
         SVCDEF 44,'SYNADF/SYNADRLS'                            GP99057
         SVCDEF 45,'BSP'                                        GP99057
         SVCDEF 46,'GSERV'                                      GP99057
         SVCDEF 47,'ASGNBFR/BUFINQ/RLSEBFR'                     GP99057
         SVCDEF 49,'SPAR'                                       GP99057
         SVCDEF 4A,'DAR'                                        GP99057
         SVCDEF 4B,'DQUEUE'                                     GP99057
         SVCDEF 4C,'IFBSTAT'                                    GP99057
         SVCDEF 4E,'LSPACE'                                     GP99057
         SVCDEF 4F,'STATUS'                                     GP99057
         SVCDEF 51,'SETPRT'                                     GP99057
         SVCDEF 53,'SMFWTM'                                     GP99057
         SVCDEF 54,'GRAPHICS'                                   GP99057
         SVCDEF 55,'DDRSWAP'                                    GP99057
         SVCDEF 56,'ATLAS'                                      GP99057
         SVCDEF 57,'DOM'                                        GP99057
         SVCDEF 5B,'VOLSTAT'                                    GP99057
         SVCDEF 5C,'TCPEXCP'                                    GP99057
         SVCDEF 5D,'TGET/TPUT'                                  GP99057
         SVCDEF 5E,'TGET/TPUT'                                  GP99057
         SVCDEF 5F,'SYSEVENT'                                   GP99057
         SVCDEF 60,'STAX'                                       GP99057
         SVCDEF 61,'IKJEGS9G'                                   GP99057
         SVCDEF 62,'PROTECT'                                    GP99057
         SVCDEF 63,'DYNALLOC'                                   GP99057
         SVCDEF 64,'IKJEFFIB'                                   GP99057
         SVCDEF 65,'QTIP'                                       GP99057
         SVCDEF 66,'AQCTL'                                      GP99057
         SVCDEF 67,'XLATE'                                      GP99057
         SVCDEF 68,'TOPCTL'                                     GP99057
         SVCDEF 69,'IMGLIB'                                     GP99057
         SVCDEF 6B,'MODESET'                                    GP99057
         SVCDEF 70,'PGRLSE'                                     GP99057
         SVCDEF 71,'PGFIX/PGFREE/PGLOAD/PGOUT'                  GP99057
         SVCDEF 72,'EXCPVR'                                     GP99057
         SVCDEF 75,'DEBCHK'                                     GP99057
         SVCDEF 77,'TESTAUTH'                                   GP99057
         SVCDEF 78,'GETMAIN/FREEMAIN'                           GP99057
         SVCDEF 79,'VSAM'                                       GP99057
         SVCDEF 7B,'PURGEDQ'                                    GP99057
         SVCDEF 7C,'TPIO'                                       GP99057
         SVCDEF 7D,'EVENTS'                                     GP99057
         SVCDEF 7E,'MSS(ICB2SVC)'                               GP99057
         SVCDEF 82,'RACHECK'                                    GP99057
         SVCDEF 83,'RACINIT'                                    GP99057
         SVCDEF 84,'RACLIST'                                    GP99057
         SVCDEF 85,'RACDEF'                                     GP99057
         SVCDEF 89,'ESR'                                        GP99057
         SVCDEF 8A,'PGSER'                                      GP99057
SVCLAST  EQU   *             LAST DEFINED SVC                   GP99057
         SVCDEF 8B,'CVAFDIR'                                    GP99057
*---------------------------------------------------------------------*
*                                                                     *
*              SVC DSECT                                              *
*                                                                     *
*---------------------------------------------------------------------*
SVCDSECT DSECT ,                                                GP99057
SVCID    DS   X              SVC NUMBER                         GP99057
SVCLEN   DS   X              LENGTH OF THIS SVC DEFINITION      GP99057
SVCNAME  DS   0C             DESCRIPTION                        GP99057
         SPACE 1                                                GP99144
         IHAPDS ,            MAP BLDL RETURN                    GP99144
         END   ,                                                GP00169
