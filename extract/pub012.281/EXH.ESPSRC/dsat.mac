DSAT     TITLE 'D S A T  ***  DISPLAY DATA SETS AND THEIR ATTRIBUTES'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              SYSTEMS & PROGRAMMING DEPARTMENT                       *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*     THIS MODULE MAY BE ASSEMBLED AND LINKED INTO A LIBRARY IN THE   *
*     LINK LIST OR SPECIFIED AS A STEPLIB IN THE TSO LOGON PROCEDURE. *
*     THE COMMAND MAY BE INVOKED FROM TSO BY ENTERING THE NAME OR AN  *
*     ALIAS OF THE MODULE.                                            *
*                                                                     *
*     BEFORE ASSEMBLING THE MODULE, ENSURE THAT ALL THE REQUIRED      *
*     MACROS ARE AVAILABLE.  SOME MACROS FROM SYS1.AMODGEN MAY BE     *
*     REQUIRED.  THE $ENTER MACRO USES SYSTEM VARIABLE SYMBOLS        *
*     &SYSDATE AND &SYSTIME.  THESE SYMBOLS ARE NOT SUPPORTED BY ALL  *
*     ASSEMBLERS.  IF THE ASSEMBLER TO BE USED DOES NOT SUPPORT THESE *
*     SYMBOLS, THE $ENTER MACRO MUST BE MODIFIED.                     *
*                                                                     *
*     THE MODULE MAY BE LINKED WITH ATTRIBUTES RENT AND REFR AND IS   *
*     ELIGIBLE FOR INCLUSION IN THE LINK PACK AREA.                   *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*  SS0802         ALIAS DSAT                                          *
*                                                                     *
*  FUNCTION       THE DSAT COMMAND IS USED TO DISPLAY ALLOCATION      *
*                 INFORMATION FOR DATA SETS ON A DIRECT ACCESS        *
*                 DEVICE.                                             *
*                                                                     *
*  DESCRIPTION    DSAT WILL SEARCH THE OS CATALOG AND CVOLS FOR THE   *
*                 ENTRIES FOR THE DATA SETS SPECIFIED.  ALLOCATION    *
*                 INFORMATION WILL BE OBTAINED FROM THE VOLUME TABLE  *
*                 OF CONTENTS, FORMATTED AND DISPLAYED.  IF A NAME IS *
*                 AN INDEX NAME, ALL DATA SETS BELOW THE INDEX WILL   *
*                 BE DISPLAYED.                                       *
*                                                                     *
*                 THE USER MAY BYPASS THE CATALOG SEARCH BY SUPPLYING *
*                 THE VOLUME SERIAL ON WHICH THE DATA SET RESIDES.    *
*                 THIS OPTION PERMITS DISPLAYING INFORMATION FOR      *
*                 UNCATALOGED DATA SETS.                              *
*                                                                     *
*                 THE ATTRIBUTES TO BE DISPLAYED MAY BE SELECTED BY   *
*                 THE USER WHEN ENTERING THE DSAT COMMAND AND         *
*                 SPECIFYING KEYWORD OPERANDS.                        *
*                                                                     *
*                 THE DSAT COMMAND MAY BE USED IN COMMAND PROCEDURES  *
*                 TO FIND THE ALLOCATION OF A DATA SET OR A GROUP OF  *
*                 DATA SETS AND SET THE RETURN CODE TO THE SPECIFIED  *
*                 VALUE.  THE RETURN CODE MAY THEN BE TESTED WITH THE *
*                 WHEN COMMAND.  OUTPUT MAY BE SUPPRESSED BY          *
*                 SPECIFYING NOPRINT.                                 *
*                                                                     *
*                 THE USER MAY CHOOSE WHAT INFORMATION WILL BE        *
*                 DISPLAYED BY ENTERING KEYWORDS.                     *
*                                                                     *
*                 THE INFORMATION THAT MAY BE DISPLAYED IS:           *
*                  1. VOLUME SERIAL ON WHICH THE DATA SET IS LOCATED. *
*                  2. FILE SEQUENCE NUMBER.                           *
*                  3. DEVICE TYPE CODE FROM CATALOG ENTRY.            *
*                  4. ALLOCATION  (ALLOCATED, USED, AND EXTENTS).     *
*                  5. SECONDARY ALLOCATION (AMOUNT AND UNITS).        *
*                  6. DATA SET ORGANIZATION.                          *
*                  7. DCB (RECFM, LRECL, AND BLKSIZE).          GP09143
*                  8. CREATION DATE.                                  *
*                  9. EXPIRATION DATE.                                *
*                 10. FULLY QUALIFIED DATA SET NAME.                  *
*                 11. CCHHR OF THE FORMAT 1 DSCB.                     *
*                 12. GENERATION DATA GROUP DATA.                     *
*                 13. PDS DIRECTORY INFORMATION.                      *
*                                                                     *
*  SYNTAX         DSAT (NAME-LIST)  SERIAL/NOSERIAL   ALLOC/NOALLOC   *
*                                   DSORG/NODSORG     DCB/NODCB       *
*                                   CRDATE/NOCRDATE   EXDATE/NOEXDATE *
*                                   LASTREF/NOLASTREF
*                                   TOTALS/NOTOTALS   PRINT/NOPRINT   *
*                                   HEADER/NOHEADER   ALL/DAONLY      *
*                                   GDGDATA/NOGDGDATA SEQNO/NOSEQNO   *
*                                   DEVTYPE/NODEVTYPE DEVICE/NODEVICE *
*                                   CCHHR/NOCCHHR     PDS/NOPDS       *
*                                   SECONDARY/NOSECONDARY             *
*                                   GENERIC           DSONLY          *
*                                   YMD/MDY/DMY                       *
*                                   HARDCOPY(DDNAME)  VOLUME(SERIAL)  *
*                                   RC(TALLOC/TUSED/TDIFF/            *
*                                      LALLOC/LUSED/LDIFF/NUM/        *
*                                      PREVIOUS/DSORG/DIRALLOC/       *
*                                      DIRUSED/ENTRIES/ALIASES/       *
*                                      MEMBERS)                       *
*                                                                     *
*                 DEFAULTS -  NAME-LIST DEFAULTS TO PREFIX            *
*                             SERIAL   ALLOC   DSORG    DCB    CRDATE *
*                             NOEXDATE TOTALS  PRINT    HEADER ALL    *
*                             NOPDS    NOSEQNO NODEVICE NODEVTYPE     *
*                             NOGDGDATA    NOLASTREF    NOSECONDARY   *
*                                                                     *
*  OPERANDS       NAME-LIST - ONE OR MORE DATA SET OR INDEX LEVEL     *
*                             NAMES. TSO NAMING CONVENTIONS ARE USED. *
*                             IF A SPECIFIED NAME IS AN INDEX NAME,   *
*                             DATA SETS UNDER THAT LEVEL WILL BE      *
*                             DISPLAYED.  IF NO NAME IS SPECIFIED,    *
*                             THE PREFIX WILL BE USED.  FOR MVT AND   *
*                             SVS, THIS IS THE USERID.  FOR MVS,      *
*                             THE PREFIX MAY BE SPECIFIED WITH THE    *
*                             PROFILE COMMAND.  IF NO NAME IS         *
*                             SPECIFIED AND THE PROFILE SPECIFIES     *
*                             NOPREFIX, THE USERID WILL BE USED.      *
*                                                                     *
*                             NOTE - IF A KEYWORD IS ENTERED,         *
*                                    NAME-LIST MUST BE SPECIFIED.  IF *
*                                    NAME-LIST IS OMITTED, IT WILL    *
*                                    NOT DEFAULT TO THE PREFIX, BUT   *
*                                    THE KEYWORD WILL BE INTERPRETED  *
*                                    AS THE NAME-LIST, NOT A KEYWORD. *
*                                                                     *
*                 SERIAL/NOSERIAL                                     *
*                             SPECIFIES WHETHER OR NOT THE VOLUME     *
*                             SERIAL IS TO BE DISPLAYED FOR EACH DATA *
*                             SET.                                    *
*                                                                     *
*                 SEQNO/NOSEQNO                                       *
*                             SPECIFIES WHETHER OR NOT THE FILE       *
*                             SEQUENCE NUMBER IS TO BE DISPLAYED.     *
*                             IF NOSERIAL IS SPECIFIED, THE FILE      *
*                             SEQUENCE NUMBER WILL NOT BE DISPLAYED.  *
*                                                                     *
*                 DEVTYPE/NODEVTYPE                                   *
*                             SPECIFIES WHETHER OR NOT THE DEVICE     *
*                             CODE FROM THE CATALOG ENTRY IS TO BE    *
*                             DISPLAYED.  IF VOLUME IS SPECIFIED,     *
*                             THE DEVICE TYPE IS OBTAINED FROM THE    *
*                             UCB.                                    *
*                                                                     *
*                 DEVICE/NODEVICE                                     *
*                             SPECIFIES WHETHER OR NOT THE NAME OF    *
*                             THE DEVICE (3330, 2314, ETC.) IS TO     *
*                             BE DISPLAYED.  THIS VALUE IS ONLY       *
*                             RECOGNIZED FOR DIRECT ACCESS DEVICES.   *
*                                                                     *
*                 ALLOC/NOALLOC                                       *
*                             SPECIFIES WHETHER OR NOT ALLOCATION     *
*                             INFORMATION (TRACKS ALLOCATED, TRACKS   *
*                             USED, AND NUMBER OF EXTENTS) IS TO BE   *
*                             DISPLAYED.                              *
*                                                                     *
*                 SECONDARY/NOSECONDARY                               *
*                             SPECIFIES WHETHER OR NOT SECONDARY      *
*                             ALLOCATION INFORMATION (AMOUNT OF       *
*                             SECONDARY SPACE AND UNITS) IS TO BE     *
*                             DISPLAYED.  IF NOALLOC IS SPECIFIED,    *
*                             NO SECONDARY ALLOCATION INFORMATION     *
*                             WILL BE DISPLAYED.                      *
*                                                                     *
*                 DSORG/NODSORG                                       *
*                             SPECIFIES WHETHER OR NOT DATA SET       *
*                             ORGANIZATION IS TO BE DISPLAYED.        *
*                                                                     *
*                 PDS/NOPDS                                           *
*                             SPECIFIES WHETHER OR NOT PDS DIRECTORY  *
*                             INFORMATION IS DISPLAYED.  SELECTION    *
*                             OF THE PDS OPTION WILL RESULT IN        *
*                             DYNAMIC ALLOCATION/DEALLOCATION AND     *
*                             READING OF THE PDS.  THESE OPERATIONS   *
*                             WILL RESULT IN PERFORMANCE DEGRADATION. *
*                                                                     *
*                             THE MESSAGE "DATA SET IN USE" INDICATES *
*                             ANOTHER USER HAD EXCLUSIVE CONTROL OF   *
*                             THE DATA SET AND DSAT COULD NOT         *
*                             ALLOCATE IT.                            *
*                                                                     *
*                             IF AN ERROR OCCURS DURING PROCESSING OF *
*                             THE PDS DIRECTORY, AN ERROR MESSAGE     *
*                             WILL APPEAR IN THE PDS DATA FIELDS.     *
*                               RC =   RETURN CODE FROM DAIR          *
*                               DARC = DYNAMIC ALLOCATION RETURN CODE *
*                               CTRC = CATALOG RETURN CODE            *
*                                                                     *
*                 DCB/NODCB                                           *
*                             SPECIFIES WHETHER OR NOT DCB INFORMATION*
*                             (RECFM, BLKSIZE, AND LRECL) IS TO BE    *
*                             DISPLAYED.                              *
*                                                                     *
*                 CRDATE/NOCRDATE                                     *
*                             SPECIFIES WHETHER OR NOT THE CREATION   *
*                             DATE IS TO BE DISPLAYED.                *
*                                                                     *
*                 EXDATE/NOEXDATE                                     *
*                             SPECIFIES WHETHER OR NOT THE EXPIRATION *
*                             DATE IS TO BE DISPLAYED.                *
*                                                                     *
*                 LASTREF/NOLASTREF                                   *
*                             SPECIFIES WHETHER OR NOT THE LAST DATE  *
*                             REFERENCED IS TO BE DISPLAYED.  MVS     *
*                             SU 60 REQUIRED.                         *
*                                                                     *
*                 YMD/MDY/DMY                                         *
*                             SPECIFIES THE FORMAT IN WHICH THE       *
*                             ABOVE DATES ARE DISPLAYED.              *
*                                                                     *
*                 CCHHR/NOCCHHR                                       *
*                             SPECIFIES WHETHER OR NOT THE CCHHR OF   *
*                             THE FORMAT 1 DSCB IS TO BE DISPLAYED.   *
*                                                                     *
*                 TOTALS/NOTOTALS                                     *
*                             SPECIFIES WHETHER OR NOT ALLOCATION     *
*                             AND NUMBER OF DATA SET ENTRIES DISPLAYED*
*                             TOTALS ARE TO BE DISPLAYED.  IF NOALLOC *
*                             IS SPECIFIED, TOTALS ARE NOT DISPLAYED. *
*                                                                     *
*                 PRINT/NOPRINT                                       *
*                             SPECIFIES WHETHER OR NOT OUTPUT IS TO BE*
*                             SUPPRESSED.  THIS IS INTENDED FOR USE IN*
*                             COMMAND PROCEDURES WHERE DSAT IS BEING  *
*                             USED TO SET THE RETURN CODE.  ERROR     *
*                             MESSAGES ARE NOT SUPPRESSED.            *
*                                                                     *
*                 HEADER/NOHEADER                                     *
*                             SPECIFIES WHETHER OR NOT THE HEADER     *
*                             LINE IS TO BE SUPPRESSED.               *
*                                                                     *
*                 ALL/DAONLY                                          *
*                             SPECIFIES WHETHER OR NOT DATA SETS      *
*                             ON NON-DIRECT ACCESS DEVICES OR         *
*                             ON UNMOUNTED DEVICES ARE TO BE          *
*                             DISPLAYED.                              *
*                                                                     *
*                 GDGDATA/NOGDGDATA                                   *
*                             SPECIFIES WHETHER OR NOT GENERATION     *
*                             DATA GROUP DATA IS TO BE DISPLAYED.     *
*                             IF GDGDATA IS SPECIFIED, THE            *
*                             INFORMATION DISPLAYED IS -              *
*                               OPTIONS - OPTIONS SPECIFIED WHEN THE  *
*                                         INDEX WAS BUILT.            *
*                                         E INDICATES EMPTY,          *
*                                         D INDICATES DELETE.         *
*                               CURRENT - NUMBER OF GENERATION DATA   *
*                                         SETS CURRENTLY CATALOGED    *
*                                         UNDER THE INDEX.            *
*                               MAX     - MAXIMUM NUMBER OF ENTRIES   *
*                                         WHICH MAY EXIST AT ONE      *
*                                         TIME.                       *
*                                                                     *
*                             NOTE: THIS OPTION IS INOPERATIVE IN     *
*                                   MVS IF THE DATA MANAGMENT SU (8)  *
*                                   IS NOT INSTALLED.  THIS OPERAND   *
*                                   IS ALSO INOPERATIVE FOR           *
*                                   GENERATION INDICES IN VSAM        *
*                                   CATALOGS.  IF THE KEYWORD IS      *
*                                   ENTERED, IT WILL BE IGNORED.  NO  *
*                                   ERROR MESSAGE WILL BE GENERATED.  *
*                                                                     *
*                 GENERIC     SPECIFIES THAT THE NAME SPECIFIED IS    *
*                             TO BE USED AS A GENERIC KEY TO LOCATE   *
*                             DATA SET NAMES.  ALL DATA SETS WHICH    *
*                             MATCH THE KEY WILL BE DISPLAYED.  THE   *
*                             NAME NEED NOT SPECIFY AN INDEX LEVEL.   *
*                             THIS OPTION IS VALID FOR MVS ONLY       *
*                             AND ENTRIES IN A VSAM CATALOG.          *
*                                                                     *
*                             GENERIC IS IGNORED IF DSONLY IS         *
*                             SPECIFIED.                              *
*                                                                     *
*                 DSONLY      SPECIFIES THAT NAME-LIST ENTRIES        *
*                             REPRESENT DATA SET NAMES ONLY.  IF      *
*                             A NAME SPECIFIED IS FOUND TO BE AN      *
*                             INDEX, DSAT WILL TREAT IT AS NOT        *
*                             FOUND.                                  *
*                                                                     *
*                 VOLUME      SPECIFIES THE VOLUME SERIAL NUMBER      *
*                             OF THE VOLUME TO BE SEARCHED FOR        *
*                             THE SPECIFIED DATA SETS.  DSAT WILL     *
*                             ASSUME THAT THE NAME-LIST CONSISTS      *
*                             OF DATA SET NAMES, NOT INDEX NAMES.     *
*                                                                     *
*                             Unable to get the above working with    *
*                             VOLUME(*), so changed logic as follows: *
*                             1) Request without VOLUME() shows all   *
*                                information that matches.            *
*                             2) Request with VOLUME(*) shows all     *
*                                information associated with a serial *
*                             3) Request for specific VOLUME returns  *
*                                information for that volume only.    *
*                                               G. Postpischil  GP09144
*                                                                     *
*                 HARDCOPY(DDNAME)                                    *
*                             SPECIFIES THAT A HARD COPY LISTING      *
*                             OF THE DSAT OUTPUT IS DESIRED.          *
*                             DDNAME SPECIFIES THE DDNAME OF A        *
*                             PRE-ALLOCATED DATA SET WHERE THE        *
*                             OUTPUT WILL BE WRITTEN.  THE DATA SET   *
*                             ATTRIBUTES WILL BE                      *
*                                RECFM=FB,LRECL=120,BLKSIZE=3000      *
*                                                                     *
*                 RC                                                  *
*                             SPECIFIES THE RETURN CODE SETTING.  IF  *
*                             RC IS NOT SPECIFIED, THE RETURN CODE    *
*                             WILL BE SET TO:                         *
*                              4 - SUCCESSFUL COMPLETION.             *
*                             16 - UNABLE TO INTERPRET COMMAND.       *
*                                                                     *
*                             THE RC OPERAND PERMITS THE USER TO      *
*                             SPECIFY THAT THE RETURN CODE IS TO BE   *
*                             SET TO A VALUE DEPENDING ON THE         *
*                             ALLOCATION OF THE DATA SETS.            *
*                             TALLOC   - TOTAL TRACKS ALLOCATED       *
*                             TUSED    - TOTAL TRACKS USED            *
*                             TDIFF    - TOTAL OVERALLOCATION         *
*                                        (TALLOC-TUSED)               *
*                             TPCTUSE  - PERCENT OF TOTAL USED        *
*                             LALLOC   - TRACKS ALLOCATED BY LAST     *
*                                        DATA SET                     *
*                             LUSED    - TRACKS USED BY LAST DATA SET *
*                             LDIFF    - LAST DATA SET OVERALLOCATION *
*                                        (LALLOC-LUSED)               *
*                             LPCTUSE  - PERCENT OF LAST DS TRACK USE *
*                             NUM      - NUMBER OF DATA SETS DISPLAYED*
*                                        (INCLUDES DATA SETS NOT      *
*                                        FOUND, ETC.)                 *
*                             PREVIOUS - ASSUMES THE RETURN CODE OF   *
*                                        THE PREVIOUS COMMAND.        *
*                             DSORG    - SETS THE RETURN CODE BASED   *
*                                        ON THE DATA SET ORGANIZATION *
*                                        OF THE DATA SETS DISPLAYED.  *
*                                        1 - ALL DATA SETS WERE SEQ.  *
*                                        2 - ALL DATA SETS WERE PDS   *
*                                        3 - DATA SETS WERE MIXED PDS *
*                                            AND SEQUENTIAL           *
*                                        4 - AN ERROR OCCURRED OR A   *
*                                            DATA SET OTHER THAN PDS  *
*                                            OR SEQUENTIAL WAS        *
*                                            PROCESSED                *
*                             DIRALLOC - SETS THE RETURN CODE TO THE  *
*                                        NUMBER OF DIRECTORY BLOCKS   *
*                                        ALLOCATED.                   *
*                             DIRUSED  - SETS THE RETURN CODE TO THE  *
*                                        NUMBER OF DIRECTORY BLOCKS   *
*                                        USED.                        *
*                             ENTRIES  - SETS THE RETURN CODE TO THE  *
*                                        NUMBER OF ENTRIES IN THE     *
*                                        DIRECTORY (MEMBERS AND       *
*                                        ALIASES).                    *
*                             ALIASES  - SETS THE RETURN CODE TO THE  *
*                                        NUMBER OF ALIASES.           *
*                             MEMBERS  - SETS THE RETURN CODE TO      *
*                                        ENTRIES-ALIASES.             *
*                                                                     *
*                                                                     *
*                             NOTE - IF NOALLOC IS SPECIFIED, THE     *
*                                    RETURN CODE FOR TALLOC, TUSED,   *
*                                    TDIFF, LALLOC, LUSED, AND LDIFF  *
*                                    WILL BE ZERO.                    *
*                                                                     *
*                                    IF NODSORG IS SPECIFIED, THE     *
*                                    RETURN CODE FOR DSORG WILL BE    *
*                                    ZERO.                            *
*                                                                     *
*                                    IF NOPDS IS SPECIFIED OR THE     *
*                                    LAST OR ONLY DATA SET IS NOT     *
*                                    A PDS, THE RETURN CODE FOR       *
*                                    DIRALLOC, DIRUSED, ENTRIES,      *
*                                    ALIASES, AND MEMBERS WILL BE     *
*                                    ZERO.                            *
*                                                                     *
*  SUBCOMMANDS    DSAT HAS NO SUBCOMMANDS.                            *
*                                                                     *
*  ATTRIBUTES     RENT, REUS, REFR, ENABLED, NON-PRIVILEGED           *
*                                                                     *
*  EXAMPLES       DISPLAY ALL DATA SETS UNDER THE TERMINAL USER'S ID. *
*                                                                     *
*                 DSAT                                                *
*                                                                     *
*                                                                     *
*                 DISPLAY ALL "FPL" DATA SETS.  DISPLAY EXPIRATION    *
*                 DATES.                                              *
*                                                                     *
*                 DSAT 'FPL' EXDATE                                   *
*                                                                     *
*                                                                     *
*                 IN A PROCEDURE, DETERMINE IF DATA SET SS.MACLIB     *
*                 HAS 20 TRACKS LEFT.  IF SO, TERMINATE.  IF NOT,     *
*                 COMPRESS IT.                                        *
*                                                                     *
*                 DSAT 'SS.MACLIB' RC(LDIFF) NOPRINT                  *
*                 WHEN SYSRC(GT 20) END                               *
*                 COMPRESS 'SS.MACLIB'                                *
*                 END                                                 *
*                                                                     *
*                                                                     *
*  FPL MACROS USED - NONE (REMOVED FOR HERCULES MVS 3.8)              *
*                                                                     *
*                                                                     *
*  IBM MACROS USED                                                    *
*                                                                     *
*        GETMAIN           OBTAIN WORKING STORAGE                     *
*        FREEMAIN          RELEASE WORKING STORAGE                    *
*        LINK              INVOKE SERVICE ROUTINE                     *
*        LOCATE            READ CATALOG                               *
*        OBTAIN            READ VTOC                                  *
*        CAMLST            CONSTRUCT PARM LIST FOR LOCATE AND OBTAIN  *
*        OPEN              OPEN PDS DIRECTORY                         *
*        CLOSE             CLOSE PDS DIRECTORY                        *
*        READ              READ PDS DIRECTORY                         *
*        CHECK             WAIT FOR COMPLETION OF READ                *
*        PUT               WRITE A RECORD                             *
*        DCB               DATA CONTROL BLOCK FOR PDS DIRECTORY       *
*        PUTLINE           OUTPUT A LINE TO TERMINAL                  *
*        IKJPARM           BEGIN PARSE PARAMETER CONTROL LIST         *
*        IKJIDENT          DESCRIBE POSITIONAL PARAMETER              *
*        IKJPOSIT          DESCRIBE POSITIONAL PARAMETER              *
*        IKJKEYWD          DESCRIBE A KEYWORD PARAMETER               *
*        IKJNAME           DESCRIBE A KEYWORD VALUE                   *
*        IKJSUBF           BEGIN A SUBFIELD DESCRIPTION               *
*        IKJENDP           END PARSE PARAMETER CONTROL LIST           *
*        IKJRLSA           RELEASE STORAGE OBTAINED BY PARSE          *
*        IKJECT            MAP ECT                                    *
*        IKJUPT            MAP UPT                                    *
*        IKJDAP08          MAP DYNAMIC ALLOCATION CONTROL BLOCK (ALC) *
*        IKJDAP18          MAY DYNAMIC ALLOCATION CONTROL BLOCK (FREE)*
*                                                                     *
*  TSO SERVICE ROUTINES USED                                          *
*                                                                     *
*        IKJPARS           INTERPRET COMMAND OPERANDS                 *
*        PUTLINE           DISPLAY OUTPUT MESSAGES                    *
*        IKJDAIR           DYNAMIC ALLOCATION                         *
*                                                                     *
*  REGISTER ASSIGNMENTS                                               *
*                                                                     *
*        R0  - LINKAGE REGISTER/TEMPORARY WORK REGISTER               *
*        R1  - LINKAGE REGISTER/TEMPORARY WORK REGISTER               *
*        R2  - WORK REGISTER/OUTPUT AREA POINTER                      *
*        R3  - WORK REGISTER/DSNAME PDL POINTER                       *
*        R4  - WORK REGISTER                                          *
*        R5  - WORK REGISTER                                          *
*        R6  - WORK REGISTER                                          *
*        R7  - WORK REGISTER (SLOCATE ENTRY)                          *
*        R8  - WORK REGISTER                                          *
*        R9  - BASE REGISTER FOR PCL AND PDL                          *
*        R10 - BASE REGISTER FOR SUBROUTINE/STATIC DATA AREA          *
*        R11 - PROGRAM BASE REGISTER 1                                *
*        R12 - PROGRAM BASE REGISTER 2                                *
*        R13 - WORK AREA BASE REGISTER (SAVE AREA FIRST 18 WORDS)     *
*        R14 - LINKAGE REGISTER                                       *
*        R15 - LINKAGE REGISTER/RETURN CODE                           *
*                                                                     *
*  FOR FURTHER INFORMATION ON THE WORK REGISTERS, SEE INDIVDUAL       *
*  ROUTINES.                                                          *
*                                                                     *
*  THIS VERSION OF DSAT WILL WORK ON MVT, SVS, OR MVS IF ASSEMBLED    *
*  WITH THE PROPER SYSTEM NAME IN THE SETC STATEMENT AT THE           *
*  BEGINNING OF THIS MODULE.                                          *
*                                                                     *
*  THE ORIGINAL MVS MODIFICATIONS WERE MADE BY DAVID JOHN FLYNN OF    *
*  PRATT & WHITNEY AIRCRAFT.                                          *
*                                                                     *
*                                                GORDON P. WEST 09/76 *
***********************************************************************
***********************************************************************
*                                                                     *
*  UPDATE LOG                                                         *
*                                                                     *
*  09/24/76  MVS EXPANSION MODIFIED TO REPLACE IKJEHCIR WITH          *
*            DIRECT INVOCATION OF SVC 26 WITH A CTGPL.  PERFORMANCE   *
*            ENHANCEMENT.                                             *
*                                                                     *
*            GENERIC OPERAND ADDED FOR MVS EXPANSION.  REPLACEMENT    *
*            OF IKJEHCIR IS A PREREQUISITE FOR THIS MODIFICATION.     *
*                                                                     *
*  11/16/76  CCHHR OPTION ADDED.                                      *
*                                                                     *
*  01/14/77  SUPPORT FOR MVS WITH DATA MANAGMENT SU (8) ADDED.        *
*            IKJEHCIR REMOVED FROM MVT AND SVS EXPANSION.             *
*            DEVTYPE OPTION ADDED.                                    *
*                                                                     *
*  04/25/77  DSONLY OPTION ADDED.                                     *
*                                                                     *
*  05/13/77  ENTRY TYPE ADDED TO DSORG FOR VSAM CATALOG ENTRIES.      *
*                                                                     *
*  05/31/77  SUPPRESS DATA SET NOT FOUND MESSAGES FOR VOLUME(*).      *
*                                                                     *
*  07/25/77  ADD TEST FOR NOT READY TO UCB LOOKUP ROUTINES.           *
*                                                                     *
*  08/10/77  ADD PDS OPTION TO OBTAIN DIRECTORY INFORMATION.          *
*            ADD DEVICE OPTION TO DISPLAY DEVICE NAME (3330, ETC.)    *
*            OBTAIN DEVTYPE FROM UCB IF VOLUME SPECIFIED.             *
*                                                                     *
*  08/31/77  ADD PUNCH STATEMENT FOR ALIAS STATEMENT.                 *
*            CHECK FOR ZERO OR NEGATIVE VOLUME COUNT.                 *
*                                                                     *
*  09/28/77  ADD MORE INFORMATION ON ERRORS ENCOUNTERED DURING        *
*                 PDS PROCESSING.                                     *
*                                                                     *
*  03/10/78  ADD HARDCOPY OPTION.                                     *
*            PROVIDE DEVTYPE FROM CATALOG FOR NON-DASD DEVICES.       *
*            TEST FOR NO PREFIX, NO DSNAME, NO USERID                 *
*                                                                     *
*  03/20/78  LAST DATE REFERENCED ADDED - MVS SU 60 (OR EQUIVALENT    *
*                 REQUIRED).                                          *
*                                                                     *
*  09/25/08  ELIMINATED LOOP UNDER MVS 3.8; REWORKED.                 *
*            DISPLAY CATALOG NAME FOR VSAM SUPERLOCATE.               *
*            FIXED OTHER ERRORS.             G. POSTPISCHIL           *
*                                                                     *
*  05/nn/09  Fixed lots of errors not previously found (VOLUME, VBS   *
*            LRECL, space, non-non-VSAM catalog data, etc.)     GP09143
*            Distinct CSECTs to catch bad branches; addressability.   *
*            Rearranged code to facilitate GDS processing; fixed      *
*            incorrect track counts for multi-volume DS.        GP09143
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*        THE FOLLOWING PUNCH STATEMENT(S) CAUSE LINKAGE EDITOR        *
*        CONTROL STATEMENTS TO BE INCLUDED IN THE OBJECT OUTPUT.      *
*                                                                     *
***********************************************************************
*
         PUNCH '    ORDER DSAT(P)  &SYSDATE &SYSTIME'           GP08269
         PRINT NOGEN         SAVE A TREE                        GP08269
DSAT     START 0
***********************************************************************
*                                                                     *
*                      REGISTER EQUIVALENCES                          *
*                                                                     *
***********************************************************************
         YREGS ,                                                GP08269
         B     BEGIN-DSAT(,R15)         BRANCH AROUND ID        GP08269
         DC    AL1(23),CL23'DSAT     &SYSDATE &SYSTIME'         GP08269
BEGIN    STM   R14,R12,12(R13)          SAVE REGISTERS          GP08269
         LR    R11,R15                  LOAD BASE ADDRESS
         LA    R12,4095(,R11)           ADD 4095 TO LAST BASE
         LA    R12,1(,R12)              ADD 1 MORE
         USING DSAT,R11,R12             DEFINE BASE REGISTERS
         LA    R15,15                   LOAD PGM MASK SETTING
         SLA   R15,24                   SHIFT TO BITS 4-7
         SPM   R15                      SET PGM MASK AND COND
         GETMAIN RC,LV=DSECTLEN,SP=1,BNDRY=PAGE                 GP08269
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR
         LR    R13,R1                   LOAD STORAGE ADDRESS
         USING DSATSAVE,R13             DEFINE BASE REGISTER
         L     R1,24(,R15)              RESTORE REG 1 CONTENTS
         ST    R15,4(,R13)              CHAIN SAVE AREAS
         ST    R13,8(,R15)
         L     R10,=A(DSATDATA)       LOAD COMMON DATA SECTION  GP09143
         USING DSATDATA,R10
***********************************************************************
*                                                                     *
*        CONSTRUCT TSO CONTROL BLOCKS                                 *
*                                                                     *
***********************************************************************
*, IKJCPPL
***********************************************************************
*    THE COMMAND PROCESSOR PARAMETER LIST (CPPL) IS A LIST OF         *
*    ADDRESSES PASSED FROM THE TMP TO THE CP VIA REGISTER 1           *
***********************************************************************
CPPL     DSECT
CPPLCBUF DS    A        PTR TO COMMAND BUFFER
CPPLUPT  DS    A        PTR TO UPT
CPPLPSCB DS    A        PTR TO PSCB
CPPLECT  DS    A        PTR TO ECT
**/
* END IKJCPPL - #TSOBLKS
*, IKJIOPL
IOPL     DSECT
***********************************************************************
*    THE I/O SERVICE ROUTINE PARAMETER LIST (IOPL) IS A LIST OF       *
*    FULLWORD ADDRESSES PASSED BY THE INVOKER OF ANY I/O SERVICE      *
*    ROUTINE TO THE APPROPRIATE SERVICE ROUTINE VIA REGISTER ONE.     *
***********************************************************************
IOPLUPT  DS    A        PTR TO UPT
IOPLECT  DS    A        PTR TO ECT
IOPLECB  DS    A        PTR TO USER'S ECB
IOPLIOPB DS    A        PTR TO THE I/O SERVICE RTN PARM BLOCK
**/
* END IKJIOPL - #TSOBLKS
IOPLLEN  EQU   *-IOPL
*, IKJPPL
PPL      DSECT
***********************************************************************
*    THE PARSE PARAMETER LIST (PPL) IS A LIST OF ADDRESSES PASSED     *
*    FROM THE INVOKER TO PARSE VIA REGISTER 1                         *
***********************************************************************
PPLUPT   DS    A        PTR TO UPT
PPLECT   DS    A        PTR TO ECT
PPLECB   DS    A        PTR TO CP'S ECB
PPLPCL   DS    A        PTR TO PCL
PPLANS   DS    A        PTR TO ANS PLACE
PPLCBUF  DS    A        PTR TO CMD BUFFER
PPLUWA   DS    A        PTR TO USER WORK AREA (FOR VALIDITY CK RTNS)
**/
* END IKJPPL  - #TSOBLKS
PPLLEN   EQU   *-PPL
*, IKJDAPL
***********************************************************************
*    THE DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR) PARAMETER LIST   *
*    (DAPL) IS A LIST OF ADDRESSES PASSED FROM THE INVOKER TO DAIR    *
*    VIA REGISTER 1
***********************************************************************
DAPL     DSECT
DAPLUPT  DS    A        PTR TO UPT
DAPLECT  DS    A        PTR TO ECT
DAPLECB  DS    A        PTR TO CP'S ECB
DAPLPSCB DS    A        PTR TO PSCB
DAPLDAPB DS    A        PTR TO DAIR PARAMETER BLOCK
**/
* END IKJDAPL - #TSOBLKS
DAPLLEN  EQU   *-DAPL
DSAT     CSECT                          CONTINUE USER CSECT
***********************************************************************
*                                                                     *
*                     SET UP TSO CONTROL BLOCKS                       *
*                                                                     *
***********************************************************************
         XC    DSATECB(4),DSATECB       ZERO ECB
         LR    R15,R1                   LOAD CPPL ADDRESS       GP09143
         USING CPPL,R15                 DEFINE CPPL BASE        GP09143
         ST    R15,MYCPPL               SAVE FOR QUICK RELOAD   GP09143
         LA    R8,DSATIOPL
         USING IOPL,R8
         LA    R9,DSATPPL
         USING PPL,R9
         LA    R7,DSATDAPL
         USING DAPL,R7
*--------BUILD IOPL
         MVC   IOPLUPT(4),CPPLUPT       COPY UPT ADDRESS
         MVC   IOPLECT(4),CPPLECT       COPY ECT ADDRESS
         LA    R1,DSATECB               GET ECB ADDRESS
         ST    R1,IOPLECB
         LA    R1,DSATPTPB              GET IOPB ADDRESS
         ST    R1,IOPLIOPB
*--------BUILD PPL
         MVC   PPLUPT(4),CPPLUPT        COPY UPT ADDRESS
         MVC   PPLECT(4),CPPLECT        COPY ECT ADDRESS
         LA    R1,DSATECB               GET ECB ADDRESS
         ST    R1,PPLECB
         L     R1,=A(DSATPCL)           GET PCL ADDRESS         GP09144
         ST    R1,PPLPCL
         LA    R1,DSATANS               GET ANSWER AREA WORD ADDRESS
         ST    R1,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF      COPY COMMAND BUFFER ADDRESS
*--------BUILD DAPL
         MVC   DAPLUPT(4),CPPLUPT       COPY UPT ADDRESS
         MVC   DAPLECT(4),CPPLECT       COPY ECT ADDRESS
         LA    R1,DSATECB               GET ECB ADDRESS
         ST    R1,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB     COPY PSCB ADDRESS
         DROP  R7
         MVC   DSATPTPB(ENDPTPB-MODLPTPB),MODLPTPB  INITIALIZE PTPB
         MVC   DSATHEDR(4),MODLINE
         MVI   FLAGS,X'00'             CLEAR FLAGS
         MVI   FLAGS2,X'00'
         MVC   OUTLINE,BLANKS          BLANK OUTPUT LINE
         DROP  R8                      DROP IOPL BASE REGISTER
         DROP  R15                     DONE WITH CPPL           GP09143
*--------GET CATALOG WORKAREA
         L     R2,=F'32767'            LENGTH OF WORK AREA      GP08269
         GETMAIN RC,LV=(R2),SP=1,BNDRY=PAGE   OBTAIN WORK AREA  GP08269
         ST    R1,WORKAREA             SAVE ADDRESS OF WORK AREA
         ST    R2,WORKLEN              SAVE LENGTH OF WORK AREA
***********************************************************************
*                                                                     *
*                  PARSE THE COMMAND                                  *
*                                                                     *
***********************************************************************
         LA    R1,PPL                   LOAD PARSE PARAMETER LIST ADDR
         LINK  EP=IKJPARS               LINK TO PARSE ROUTINE
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRPARS
         L     R9,DSATANS               LOAD ANSWER AREA ADDRESS
         USING DSATPDL,R9               DEFINE PDE BASE REGISTER
***********************************************************************
*                                                                     *
*        SET UP CATALOG AND VTOC SEARCH CONTROL BLOCKS                *
*                                                                     *
***********************************************************************
*--------SET UP CAMLISTS
         LM    R1,R4,SEARCH            OBTAIN, SEARCH
         LA    R2,OBTNAME              OBTAIN DSN               GP09143
         LA    R3,DSATSER
         LA    R4,DSATFMT1
         STM   R1,R4,DSATDCB1
         LM    R1,R4,SEEK              OBTAIN, SEEK
         LA    R2,DS1PTRDS
         LA    R3,DSATSER
         LA    R4,DSATFMT3
         STM   R1,R4,DSATDCB3
         LM    R1,R4,NAME              LOCATE, NAME
         LA    R2,DSNAME
         LA    R4,CATBLOCK
         STM   R1,R4,LOCLIST
         LA    R2,OBTNAME              GDS NAME                 GP09143
         LA    R4,GDSSPACE             GDS VOLLIST              GP09143
         STM   R1,R4,GDSLIST                                    GP09143
         LM    R1,R4,NAMECVOL          LOCATE, NAME AND CVOL
         LA    R2,DSNAME
         LA    R3,CVOL
         LA    R4,CATBLOCK
         STM   R1,R4,LOCLIST2
         LM    R1,R4,TTRLOC            LOCATE, TTR
         LA    R2,TTR
         LA    R3,CVOL
         STM   R1,R4,LOCBYTTR
         XC    CTGPL(CTGPLLEN),CTGPL   ZERO OUT CTGPL
         OI    CTGOPTN1,CTGNAME                                 GP08269
         OI    CTGOPTN2,CTGRCATN                                GP08269
         OI    CTGOPTN3,CTGSUPLT+CTGAM0
         L     R1,WORKAREA             SET UP WORK AREA ADDRESS
         ST    R1,CTGWKA
         LA    R1,DSNAME               SET UP SPECIFIC NAME     GP09143
         CLC   DSONLY,=H'1'            SEE IF DSONLY SPECIFIED  GP09127
         BE    ZEROTOT                 YES                      GP09127
         OI    CTGOPTN1,CTGGENLD       SET GENERIC LOCATE
         LA    R1,INDEX-1              SET UP SEARCH KEY ADDR   GP09143
ZEROTOT  ST    R1,CTGENT               SET MASK OR NAME ADDR    GP09144
         XC    TOTALRUN(5*4),TOTALRUN  ZERO TOTAL FIELDS        GP09143
         CLC   HARDCOPY,ZEROS          SEE IF HARDCOPY SPEC.    GP09127
         BE    SETUPHDR                                         GP09127
         OI    FLAGS2,$HARDCPY         TURN ON HARDCOPY INDICATOR
         MVC   HARDCPY(HARDLEN),HARDDCB     DCB AND OPEN CONTROL BLOCKS
         LA    R2,HARDCPY+40           LOAD DCBDDNAME ADDRESS
         L     R4,DDNAME               LOAD DDNAME OPERAND ADDRESS
         LH    R1,DDNAME+4             LOAD DDNAME OPERAND LENGTH
         BCTR  R1,0                    REDUCE LENGTH BY 1
         EX    R1,MOVENAME             MOVE DDNAME IN TO DCB
         LA    R1,HARDOPEN             LOAD OPEN LIST FORM ADDRESS
         LA    R2,HARDCPY              LOAD DCB ADDRESS
         OPEN  ((R2),OUTPUT),MF=(E,(R1))    OPEN THE DATA SET
         TM    HARDCPY+48,X'10'        TEST FOR SUCCESSFUL OPEN
         BO    SETUPHDR
         MVC   OUTLINE(48),DSATERR6    MOVE IN ERROR MESSAGE
         PUTLINE OUTPUT=(DSATHEDR,,,DATA),MF=(E,DSATIOPL)
         NI    FLAGS2,X'FF'-$HARDCPY   TURN OFF HARDCOPY INDICATOR
***********************************************************************
*                                                                     *
*        SET UP HEADER LINE                                           *
*                                                                     *
***********************************************************************
SETUPHDR LA    R2,OUTLINE              LOAD OUTPUT AREA ADDRESS
         MVC   OUTLINE,BLANKS          BLANK THE LINE
         CLC   SERIAL,=H'2'            TEST FOR NOSERIAL
         BE    TRYDEV
         ST    R2,SERFLD               SAVE OUTPUT FIELD ADDRESS
         MVC   0(6,R2),=C'SERIAL'      MOVE IN HEADER
         LA    R2,7(,R2)               INCREMENT POINTER
         CLC   SEQNO,=H'2'             TEST FOR NOSEQNO
         BE    TRYDEV
         MVC   0(4,R2),=C' SEQ'        SET UP HEADER
         LA    R2,5(,R2)               INCREMENT POINTER
TRYDEV   CLC   DEVTYPE,=H'2'           TEST FOR NODEVTYPE
         BE    TRYDEVIC
         ST    R2,DEVFLD               SAVE OUTPUT FIELD ADDRESS
         MVC   0(8,R2),=C' DEVTYPE'    MOVE IN HEADER
         LA    R2,9(,R2)               INCREMENT POINTER
TRYDEVIC CLC   DEVICE,=H'2'            TEST FOR NODEVICE
         BE    TRYALLOC
         ST    R2,DEVFIELD             SAVE OUTPUT FIELD ADDRESS
         MVC   0(6,R2),=C'DEVICE'      MOVE IN HEADER
         LA    R2,7(,R2)               INCREMENT POINTER
TRYALLOC ST    R2,ERRFLD               STORE ERROR FIELD ADDRESS
         CLC   ALLOC,=H'2'             TEST FOR NOALLOC
         BE    TRYDSORG
         ST    R2,ALLOCFLD             SAVE OUTPUT FIELD ADDRESS
         MVC   0(14,R2),=C'ALLOC  USED EX'  SET UP HEADER
         LA    R2,15(,R2)              INCREMENT POINTER
         CLC   SECOND,=H'2'            TEST FOR NOSECONDARY
         BE    TRYDSORG
         MVC   0(10,R2),=C' SEC UNITS'      SET UP HEADER
         LA    R2,11(,R2)              INCREMENT POINTER
TRYDSORG CLC   DSORG,=H'2'             TEST FOR NODSORG
         BE    TRYPDS
         ST    R2,DSORGFLD             SAVE OUTPUT FIELD ADDRESS
         MVC   0(5,R2),=C'DSORG'       MOVE IN HEADER
         LA    R2,6(,R2)               INCREMENT POINTER
TRYPDS   CLC   PDS,=H'2'               TEST FOR NOPDS
         BE    TRYDCB
         ST    R2,PDSFLD               SAVE OUTPUT FIELD ADDRESS
         MVC   0(19,R2),=C'DIRA DIRU ENTR  AL '
         LA    R2,20(,R2)              INCREMENT POINTER
TRYDCB   CLC   DCB,=H'2'               TEST FOR NODCB
         BE    TRYCRDAT
         ST    R2,DCBFLD               SAVE OUTPUT FIELD ADDRESS
         MVC   0(16,R2),=C'-DCB ATTRIBUTES-'  MOVE IN HEADER
         LA    R2,17(,R2)              INCREMENT POINTER
TRYCRDAT CLC   CRDATE,=H'2'            TEST FOR NOCRDATE
         BE    TRYEXDAT
         ST    R2,CRDATFLD             SAVE OUTPUT FIELD ADDRESS
         MVC   0(8,R2),=C'CR. DATE'    MOVE IN HEADER
         LA    R2,9(,R2)               INCREMENT POINTER
TRYEXDAT CLC   EXDATE,=H'2'            TEST FOR NOEXDATE
         BE    TRYLREFD
         ST    R2,EXDATFLD             SAVE OUTPUT FIELD ADDRESS
         MVC   0(8,R2),=C'EX. DATE'    MOVE IN HEADER
         LA    R2,9(,R2)               INCREMENT POINTER
TRYLREFD CLC   LASTREF,=H'1'           TEST FOR LASTREF
         BNE   TRYCCHHR
         ST    R2,LREFFLD              SAVE OUTPUT FIELD ADDRESS
         MVC   0(8,R2),=C'LAST REF'    MOVE IN HEADER
         LA    R2,10(,R2)              INCREMENT POINTER
TRYCCHHR CLC   CCHHR,=H'2'             TEST FOR NOCCHHR
         BE    DODSNAME
         ST    R2,CCHHRFLD             SAVE OUTPUT FIELD ADDRESS
         MVC   0(10,R2),=C' C C H H R' MOVE IN HEADER
         LA    R2,11(,R2)              INCREMENT POINTER
DODSNAME L     R1,ERRFLD               LOAD ADDRESS OF ERROR FIELD
         LA    R1,33(,R1)              ALLOW ROOM FOR 32 BYTE MESSAGE
         CR    R2,R1                   COMPARE TO POINTER
         BH    DSNFLDOK
         LR    R2,R1                   SET POINTER TO MIN FIELD ADDR
DSNFLDOK LA    R1,OUTLINE+120-44       LOAD LAST POSSIBLE ADDR FOR DSN
         CR    R2,R1                   SEE IF WE'RE PAST IT
*        BH    TOOLONG                 WHAT NONSENSE
         ST    R2,DSNFLD               SAVE OUTPUT FIELD ADDRESS
         MVC   0(8,R2),=C'-DSNAME-'    MOVE IN HEADER
         CLC   HEADER,=H'2'            TEST FOR HEADER
         BE    BUILDDSN
         BAL   R2,PUTL                 DISPLAY LINE
***********************************************************************
*                                                                     *
*        CONSTRUCT DSNAME                                             *
*                                                                     *
***********************************************************************
BUILDDSN LA    R3,DSN                  LOAD DSN PDL ADDRESS
SETUPNXT ST    R3,CURRPDL              REMEMBER THE ENTRY       GP09144
         MVC   DSNAME,BLANKS           CLEAR DSNAME FIELD
         MVC   OUTLINE,BLANKS
         NI    FLAGS2,X'FF'-$FOUND     RESET DATA SET FOUND FLAG
         LA    R2,DSNAME               SET POINTER TO DSNAME
*--------SEE IF NAME ENCLOSED IN QUOTES
         TM    6(R3),X'40'
         BNZ   MOVEREST
*--------PREPEND PREFIX TO NAME
         L     R5,MYCPPL               GET CPPL BACK            GP09143
         USING CPPL,R5                                          GP09143
         L     R1,CPPLUPT              LOAD UPT ADDRESS
         USING UPT,R1                  DEFINE UPT ADDRESSABILITY
         LA    R4,UPTPREFX             LOAD ADDRESS OF PREFIX ENTRY
         CLI   UPTPREFL,0              TEST FOR NOPREFIX
         BNE   GETLEN
         CLC   4(2,R3),ZEROS           SEE IF DSNAME ENTERED    GP09127
         BNE   MOVEREST                                         GP09127
         DROP  R1
         L     R4,CPPLPSCB             LOAD USERID ADDRESS
         DROP  R5                        DONE WITH CPPL         GP09143
         CLI   7(R4),0                 SEE IF NO USERID (BATCH)
         BE    NOID
GETLEN   SR    R1,R1                   CLEAR REGISTER 1
         IC    R1,7(,R4)               LOAD PREFIX LENGTH
         BCTR  R1,R0                   REDUCE LENGTH BY 1
         EX    R1,MOVENAME             COPY PREFIX TO DSNAME FIELD
         LA    R2,1(R1,R2)             INCREMENT PAST USERID
         CLC   4(2,R3),ZEROS           SEE IF DSNAME ENTERED    GP09127
         BE    LOCATE                  NO                       GP09127
         MVI   0(R2),C'.'              ADD .
         LA    R2,1(,R2)               INCREMENT PAST .
*--------FULLY QUALIFIED NAME SPECIFIED
MOVEREST L     R4,0(,R3)               LOAD ADDRESS OF INPUT
         LH    R1,4(,R3)               LOAD LENGTH
         BCTR  R1,R0                   REDUCE LENGTH BY 1
         EX    R1,MOVENAME             COPY NAME
***********************************************************************
*                                                                     *
*        LOCATE CATALOG BLOCK                                         *
*                                                                     *
***********************************************************************
LOCATE   MVC   INDEX,DSNAME            COPY TO INDEX NAME ALSO
         SR    R7,R7                   NOT SUPERLOCATE          GP09143
         L     R2,DSNFLD               LOAD DSNAME FIELD ADDRESS
         MVC   0(44,R2),DSNAME         COPY DSNAME TO OUTPUT LINE
         XC    TOTALDS(8),TOTALDS      RESET DATA SET ALLOCATION TOTALS
         XC    PDSTOTLS(16),PDSTOTLS   RESET PDS TOTALS
         MVI   CATBLOCK+2,X'FF'        GARBAGE INTO CATALOG BLOCK AREA
         TM    VOLSER+6,X'80'          SEE IF VOLUME SERIAL IS PRESENT
         BZ    NOVOLSER                                         GP09143
         OI    FLAGS2,$F2VMASK         INDICATE SEARCH BY SER.  GP09143
         MVC   CEREAL,=CL6' '          BLANK OUT VOLUME SERIAL  GP09143
         LH    R1,VOLSER+4             GET VOLUME SERIAL LENGTH GP09143
         BCTR  R1,0                    REDUCE BY 1              GP09143
         LA    R2,CEREAL               LOAD DESTINATION ADDRESS GP09143
         L     R4,VOLSER               LOAD SOURCE ADDRESS      GP09143
         EX    R1,MOVENAME             COPY VOLUME SERIAL       GP09143
         CLI   0(R4),C'*'              TEST FOR * ENTERED       GP09143
         BNE   NOVOLSER                NO; DONE                 GP09143
         XI    FLAGS2,$F2VMASK+$F2VANY  DO ANY VOLUME           GP09143
NOVOLSER CLC   GENERIC,ZEROS           TEST FOR GENERIC OPTION  GP09127
         BNE   PROCGRP                                          GP09127
         LOCATE LOCLIST                LOCATE BY NAME
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   CHECK8
         CLC   DSNAME,INDEX            SEE IF ALIAS NAME RETURNED
         BE    OBTAIN1
         CLC   DSNAME(8),=C'SYSCTLG.'  SEE IF CVOL NAME RETURNED
         BNE   PROCGRP
         MVC   CVOL,CATBLOCK+6         COPY CVOL SERIAL
         MVC   DSNAME,INDEX            RESET DATA SET/INDEX NAME
         LOCATE LOCLIST2               LOCATE BY NAME AND CVOL
         CH    R15,=H'12'              RC = 12 - PROCESS BY TTR
         BE    PROCTTR
         LTR   R15,R15                 IF CVOL NAME RETURNED AGAIN,
         BZ    PROCGRP                    SU 8 NOT INSTALLED
         B     BASLOCER
CHECK8   CH    R15,=H'8'               SEE IF EMPTY INDEX STRUCTURE
         BNE   CHECK12
         CLC   CATBLOCK+2(8),=X'0000000000000001'  TEST FOR ICE
         BNE   PROCGRP
         CLC   CATBLOCK+20(8),=X'FFFFFFFFFFFFFFFF' TEST FOR ILE
         BNE   PROCGRP
*--------EMPTY INDEX STRUCTURE
         L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS
         MVC   0(32,R1),EMPTYNDX       COPY ERROR MESSAGE
         L     R2,DSNFLD               LOAD DSNAME FIELD ADDRESS
         MVC   0(44,R2),INDEX          COPY INDEX NAME
         BAL   R2,PUTL                 DISPLAY LINE
         B     ENDGRP
.TESTNDX ANOP
*--------TEST FOR INDEX (MVT, SVS, OR MVS WITH SU 8)
CHECK12  CH    R15,=H'12'              TEST FOR INDEX NAME
         BNE   BASLOCER
         TITLE 'D S A T  ***  PROCESS CVOL CATALOG ENTRIES'     GP09143
***********************************************************************
*                                                                     *
*        PROCESS DATA SET GROUP VIA TTR                               *
*                                                                     *
***********************************************************************
PROCTTR  CLC   DSONLY,ZEROS            SEE IF DSONLY SPECIFIED  GP09127
         BNE   BASLOCER                                         GP09127
         OI    FLAGS,DSATGRP           SET DSGROUP FLAG
         MVC   CVOL,CATBLOCK+259       SAVE CVOL SERIAL
         L     R1,WORKAREA             LOAD FIRST BLOCK ADDRESS
         ST    R1,FIRSTBLK             SAVE FIRST BLOCK ADDRESS
         ST    R1,CURRBLK              SAVE CURRENT BLOCK ADDRESS
         LA    R2,10(,R1)              LOAD ADDRESS OF FIRST DATA ENTRY
         ST    R2,0(,R1)               SAVE CURRENT ENTRY ADDRESS
         MVC   0(254,R2),CATBLOCK+2    COPY CATALOG BLOCK
         LA    R4,INDEX                LOAD INDEX NAME
FINDEND1 LA    R4,1(,R4)               POINT TO NEXT CHARACTER
         CLI   0(R4),C' '              TEST FOR BLANK
         BNE   FINDEND1
         ST    R4,ENDNAME              SAVE END OF NAME ADDRESS
         B     PROCNTRY                LOAD INDEX NAME
FINDEND  LA    R4,1(,R4)               POINT TO NEXT CHARACTER
         CLI   0(R4),C' '              TEST FOR BLANK
         BNE   FINDEND
         ST    R4,ENDNAME              SAVE END OF NAME ADDRESS
READCTLG ST    R1,CURRBLK              SAVE CURRENT BLOCK ADDRESS
         LA    R2,8(,R1)               LOAD WORK AREA ADDRESS
         ST    R2,LOCBYTTR+12          SAVE IN PARM LIST
         LA    R2,2(,R2)               FIRST 2 BYTES WILL BE LENGTH
         ST    R2,0(,R1)               INITIALIZE POINTER
         LOCATE LOCBYTTR               LOCATE BY TTR
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   BASLOCER
         L     R1,CURRBLK              LOAD CURRENT BLOCK ADDRESS
PROCNTRY CLC   0(8,R2),=X'FFFFFFFFFFFFFFFF'  TEST FOR LINK ENTRY
         BE    LNKENTRY
         CLC   0(8,R2),=X'0000000000000001'  TEST FOR INDEX CONTROL
         BE    DSATNEXT
         CLI   11(R2),X'01'            DATA SET WITH OVER 5 VOLUMES
         BE    DSNOVER5
         CLI   11(R2),X'00'            TEST FOR INDEX ENTRY
         BE    NDXENTRY
         CLI   11(R2),X'02'            TEST FOR GDG ENTRY
         BNE   DSNENTRY
*--------GENERATION INDEX
         OI    FLAGS,GDG               INDICATE GDG
         CLC   GDGDATA,=H'2'           SEE IF GDG DATA REQUESTED
         BE    NDXENTRY
         MVC   OUTLINE(L'GDGMSG),GDGMSG     COPY MESSAGE
         L     R15,ENDNAME             LOAD END OF INDEX NAME
         MVI   0(R15),C'.'             ADD .
         MVC   1(8,R15),0(R2)          ADD INDEX QUALIFIER
         L     R15,DSNFLD              LOAD DSNAME FIELD ADDRESS
         MVC   0(44,R15),INDEX         COPY INDEX TO MESSAGE
         SR    R15,R15                 LOAD MAXIMUM ENTRIES
         IC    R15,13(,R2)
         CVD   R15,DSATPDEC            CONVERT MAX
         OI    DSATPDEC+7,X'0F'        SET SIGN CODE
         UNPK  DSATDEC,DSATPDEC+4(4)   UNPACK
         MVC   OUTLINE+36(3),DSATDEC+5 COPY TO MESSAGE
         LH    R15,14(,R2)             LOAD CURRENT
         CVD   R15,DSATPDEC            CONVERT TO DECIMAL
         OI    DSATPDEC+7,X'0F'        SET SIGN CODE
         UNPK  DSATDEC,DSATPDEC+4(4)   UNPACK
         MVC   OUTLINE+28(3),DSATDEC+5 COPY TO MESSAGE
         TM    12(R2),X'03'            TEST FLAG BYTE
         BZ    PUTGDG
         BM    GDGEORD
         MVC   OUTLINE+15(4),=C'E,D '  INDICATE EMPTY, DELETE
         B     PUTGDG
GDGEORD  MVC   OUTLINE+15(4),=C'E   '
         TM    12(R2),X'01'
         BNZ   PUTGDG
         MVI   OUTLINE+15,C'D'
PUTGDG   LR    R4,R2                   SAVE R2
         BAL   R2,PUTL                 DISPLAY LINE
         LR    R2,R4                   RESTORE R2
         MVC   OUTLINE,BLANKS          CLEAR OUTPUT AREA
*--------INDEX ENTRY - ADD NAME TO INDEX AND GET NEXT BLOCK
NDXENTRY L     R4,ENDNAME              LOAD END OF NAME ADDRESS
         MVI   0(R4),C'.'
         MVC   1(8,R4),0(R2)           ADD INDEX NAME
         NI    FLAGS,X'FF'-NOTEMPTY    CLEAR EMPTY INDICATOR
         MVC   TTR,8(R2)               COPY TTR
         L     R1,CURRBLK              LOAD CURRENT BLOCK ADDRESS
         LA    R1,264(,R1)             INCREMENT TO NEXT BLOCK
         B     FINDEND
*--------INDEX LINK ENTRY
LNKENTRY CLC   8(3,R2),ZEROS           TEST FOR ZERO TTR        GP09127
         BE    ENDLEVEL                                         GP09127
         MVC   TTR,8(R2)               COPY TTR
         L     R1,CURRBLK              LOAD CURRENT BLOCK ADDRESS
         B     READCTLG
*--------END OF INDEX LEVEL
ENDLEVEL TM    FLAGS,NOTEMPTY          TEST FOR EMPTY INDEX
         BNZ   TESTDONE
         TM    FLAGS,GDG               TEST FOR GDG
         BNZ   MTGDG
         MVC   OUTLINE(32),EMPTYNDX    MOVE MESSAGE INTO LINE
         B     PUTEMPTY
MTGDG    MVC   OUTLINE(32),EMPTYGDG    MOVE MESSAGE INTO LINE
PUTEMPTY L     R2,DSNFLD               LOAD DSNAME FIELD
         MVC   0(44,R2),INDEX          MOVE INDEX INTO MESSAGE
         BAL   R2,PUTL                 DISPLAY MESSAGE
         MVC   OUTLINE,BLANKS          CLEAR LINE
TESTDONE OI    FLAGS,NOTEMPTY          SET NOT EMPTY
         NI    FLAGS,X'FF'-GDG         CLEAR GDG INDICATOR
         CLC   FIRSTBLK,CURRBLK        TEST FOR DONE
         BE    ENDGRP
         L     R4,ENDNAME              REMOVE LOWEST LEVEL NAME
FINDDOT  BCTR  R4,0
         CLI   0(R4),C'.'
         MVI   0(R4),C' '
         BNE   FINDDOT
         ST    R4,ENDNAME
         L     R1,CURRBLK              POINT TO PREVIOUS BLOCK
         S     R1,=F'264'
         ST    R1,CURRBLK
*--------NEXT ENTRY
DSATNEXT L     R1,CURRBLK              LOAD CURRENT BLOCK ADDRESS
         L     R2,0(,R1)               LOAD POINTER
         SR    R15,R15                 LOAD HALFWORD COUNT
         IC    R15,11(,R2)
         SLA   R15,1                   DOUBLE TO GET BYTES
         LA    R2,12(R15,R2)           12 BYTES FOR HEADER
         ST    R2,0(,R1)               SAVE POINTER
         B     PROCNTRY
*--------DATA SET ENTRY WITH OVER 5 VOLUMES
DSNOVER5 OI    FLAGS,NOTEMPTY          INDICATE NOT EMPTY
         MVC   DSNAME,INDEX            COPY INDEX TO DSNAME
         L     R1,ENDNAME              GET INDEX NAME LENGTH
         LA    R15,INDEX
         SR    R1,R15
         LA    R1,DSNAME(R1)           POINT TO END OF NAME
         MVI   0(R1),C'.'
         MVC   1(8,R1),0(R2)           ADD NAME
         TM    2(R1),X'F0'             TEST FOR GDG NAME
         BNZ   LOCATE2
         XC    2(4,R1),=X'FFFFFFFF'    COMPLEMENT GENERATION NUMBER
LOCATE2  L     R2,DSNFLD               LOAD DSNAME FIELD ADDRESS
         MVC   0(44,R2),DSNAME         COPY DSNAME TO OUTPUT LINE
         XC    TOTALDS(8),TOTALDS      RESET DATA SET ALLOCATION TOTALS
         XC    PDSTOTLS(16),PDSTOTLS   RESET PDS TOTALS
         LOCATE LOCLIST                LOCATE BY NAME
         LTR   R15,R15                 TEST RETURN CODE
         BZ    OBTAIN1
         B     BASLOCER
*--------DATA SET ENTRY
DSNENTRY OI    FLAGS,NOTEMPTY          INDICATE NOT EMPTY
         MVC   DSNAME,INDEX            COPY INDEX TO DSNAME
         L     R1,ENDNAME
         LA    R15,INDEX
         SR    R1,R15                  GET LENGTH OF INDEX
         LA    R1,DSNAME(R1)           POINT TO END OF NAME
         MVI   0(R1),C'.'
         MVC   1(8,R1),0(R2)           ADD NAME
         TM    2(R1),X'F0'             TEST FOR GDG NAME
         BNZ   DSNMVC
         XC    2(4,R1),=X'FFFFFFFF'    COMPLEMENT GENERATION NUMBER
DSNMVC   LA    R8,12(,R2)              POINT TO VOLUME LIST     GP12013
         L     R2,DSNFLD               LOAD DSNAME FIELD ADDRESS
         MVC   0(44,R2),DSNAME         COPY DSNAME
         XC    TOTALDS(8),TOTALDS      RESET DATA SET ALLOCATION TOTALS
         XC    PDSTOTLS(16),PDSTOTLS   RESET PDS TOTALS
         MVC   OBTNAME,DSNAME          SET OBTAIN NAME          GP09143
         L     R15,=A(FORMINFO)        FORMAT ONE DS            GP09143
         BALR  R14,R15                 FORMAT ONE DS            GP09143
         CH    R15,=H'8'     0-OK 4-SKP 8-ENDG 12-EXIT          GP09143
         BE    ENDGRP                  ELSE DONE WITH GROUP     GP09143
         BH    EXIT                                             GP09143
         TM    FLAGS,DSATGRP           GROUP OR SINGLE DS?      GP09143
         BNZ   DSATNEXT                NEXT DS, IF ANY          GP09143
         B     ENDGRP                  ELSE DONE WITH GROUP     GP09143
         TITLE 'D S A T  ***  PROCESS VSAM CATALOG ENTRIES'     GP09143
***********************************************************************
*                                                                     *
*        PROCESS DATA SET GROUP VIA VSAM LOCATE                       *
*                                                                     *
***********************************************************************
PROCGRP  OI    FLAGS2,$VSAMLOC         INDICATE VSAM LOCATE BEING USED
         LA    R1,INDEX+44             LOAD END OF SEARCH KEY ADDRESS
BACKUP   BCTR  R1,0                    DECREMENT POINTER
         CLI   0(R1),C' '              TEST FOR BLANK
         BE    BACKUP
         LA    R7,1(,R1)               SAVE ADDRESS OF BLANK    GP09143
         LA    R15,INDEX               LOAD INDEX ADDRESS
         SR    R7,R15                  GET LENGTH OF INDEX NAME
         CLC   DSONLY,=H'1'            TEST FOR DSONLY          GP09127
         BE    SAVELEN                 YES                      GP09127
         CLC   GENERIC,=H'1'           TEST FOR GENERIC         GP09127
         BE    SAVELEN                 YES                      GP09127
*  THE ABOVE DOES NOT MATCH DOCUMENTATION - FOR VSAM CATALOGS, GENERIC
*     IS ASSUMED (UNLESS DSONLY). APPEARS TO WORK BACKWARDS     GP09143
         LA    R7,1(,R7)               ADD ONE MORE FOR THE PERIOD
         MVI   1(R1),C'.'              ADD THE PERIOD
SAVELEN  STC   R7,INDEXLEN
RETRYLOC L     R15,WORKAREA            LOAD WORK AREA
         XC    0(4,R15),0(R15)         ZERO LENGTH FIELDS
         L     R1,WORKLEN              LOAD LENGTH OF WORK AREA
         CH    R1,=H'32767'            NOT TOO LARGE?           GP09143
         BNH   *+8                     OK                       GP09143
         LH    R1,=H'32767'            USE MAXIMUM SUPPORTED    GP09143
         STH   R1,0(,R15)              STORE IN WORK AREA
         LOCATE CTGPL                  LOCATE ALL DSNAMES
         LTR   R15,R15                 TEST RETURN CODE
         BZ    PROCDATA
***********************************************************************
*                                                                     *
*        RETURN CODES 40 AND 44 INDICATE THAT THE WORK AREA IS TOO    *
*        SMALL TO CONTAIN ALL THE DATA SET NAMES, BUT AS MANY NAMES   *
*        AS COULD BE HELD HAVE BEEN RETURNED.                         *
*                                                                     *
*        CODE 44 INDICATES THAT SVC 26 COULD NOT DETERMINE THE SIZE   *
*        WORK AREA REQUIRED, SO CONTINUE PROCESSING THE NAMES THAT    *
*        WERE RETURNED.                                               *
*                                                                     *
*        CODE 40 INDICATES THAT SVC 26 RETURNED THE REQUIRED WORK     *
*        AREA SIZE IN THE SECOND HALFWORD OF THE WORK AREA.  FREE     *
*        THE ORIGINAL WORK AREA, OBTAIN A NEW WORK AREA OF REQUIRED   *
*        SIZE, AND RE-TRY THE LOCATE REQUEST.                         *
*                                                                     *
*        NOTE THAT SVC 26 CONSIDERS A SIZE OF 32,768 (X'8000') OR     *
*        MORE A NEGATIVE SIZE AND WILL NOT RETURN ANY INFORMATION.    *
*        IF MORE THAN 32,767 IS REQUIRED, JUST PROCESS WHAT WAS       *
*        RETURNED.                                                    *
*                                                                     *
***********************************************************************
         CH    R15,=H'44'              SEE IF WORK AREA TOO SMALL
         BE    PARTIAL
         CH    R15,=H'40'
         BNE   BASLOCER
*--------GET NEW, BIGGER WORK AREA
         L     R1,WORKAREA             LOAD WORK AREA ADDRESS
         CLC   0(2,R1),=H'32767'       ALREADY AT MAXIMUM?      GP09143
         BNL   PARTIAL                 YES                      GP09143
         L     R2,WORKLEN              LOAD WORK AREA LENGTH
         XC    0(2,R1),0(R1)           ZERO 2 BYTES
         L     R7,0(,R1)               LOAD LENGTH NEEDED       GP08269
         FREEMAIN R,LV=(R2),A=(R1),SP=1  FREE OLD WORK AREA
         GETMAIN  RC,LV=(R7),SP=1,BNDRY=PAGE  LARGER WORK AREA  GP08269
         ST    R7,WORKLEN              SAVE WORK AREA LENGTH    GP08269
         ST    R1,WORKAREA             SAVE WORK AREA ADDRESS
         ST    R1,CTGWKA               STORE ADDRESS IN CTGPL
         B     RETRYLOC
*--------TOO MANY NAMES FOR WORK AREA
PARTIAL  OI    FLAGS2,$INCMPLT         INDICATE NAME LIST INCOMPLETE
         L     R15,WORKAREA            LOAD WORK AREA ADDRESS   GP12013
         MVC   0(4,R15),=A((32767/45)*45)    SET MAXIMUM LENGTH GP12013
*--------PROCESS DATA SETS
PROCDATA OI    FLAGS,DSATGRP           SET GROUP INDICATOR
         L     R15,WORKAREA            LOAD WORK AREA ADDRESS
         XC    0(2,R15),0(R15)         ZERO HIGH TWO BYTES
         L     R1,0(,R15)              LOAD LENGTH OF WORK AREA USED
         AR    R1,R15                  ADD TO WORK AREA ADDRESS GP12013
         S     R1,=F'44'               BACK OFF ONE ENTRY LESS ONE
         ST    R1,ENDWORK              SAVE END OF WORK AREA USED ADDR
         LA    R7,4(,R15)              LOAD ADDRESS OF FIRST ENTRY
         CLI   0(R7),C'0'    (USER) CATALOG ENTRY?              GP09127
         BNE   DSATPROC      NO                                 GP09127
         CLI   1(R7),C' '    PRINTABLE NAME ?                   GP09127
         BNH   DSATNXT3      NO; SKIP IT                        GP09127
         L     R2,ERRFLD     GET GENERAL USE FIELD              GP09127
         MVC   0(13,R2),=C'Using Catalog'                       GP09127
         L     R2,DSNFLD               LOAD ADDRESS OF DSNAME   GP09127
         MVC   0(44,R2),1(R7)          COPY DSNAME INTO MESSAGE GP09127
         MVC   DSNAME,1(R7)            SET LOCATE NAME          GL09127
         LOCATE LOCLIST                LOCATE BY NAME           GP09127
         LTR   R15,R15                 TEST RETURN CODE         GP09127
         BNZ   PUTCATNM                                         GP09127
         L     R2,ERRFLD     GET GENERAL USE FIELD              GP09127
         MVC   16(2,R2),=C'on'                                  GP09127
         LA    R8,CATBLOCK             LOAD VOLUME LIST ADDRESS GP09127
         MVC   19(6,R2),6(R8)          SHOW SERIAL              GP09127
PUTCATNM BAL   R2,PUTL                                          GP09127
         MVC   OUTLINE,BLANKS                                   GP09127
         ST    R7,CURRBLK              SET ENTRY ADDRESS        GP09127
         SPACE 1
DSATNXT2 L     R7,CURRBLK              LOAD ADDR LAST ENTRY PROCESSED
DSATNXT3 LA    R7,45(,R7)              INCREMENT TO NEXT NAME
DSATPROC C     R7,ENDWORK              SEE IF NAME IS OUT OF WORK AREA
         BH    TESTCOMP
         ST    R7,CURRBLK              SAVE ADDRESS OF THIS ENTRY
         MVC   DSNAME,1(R7)            COPY DSNAME
         XC    TOTALDS(8),TOTALDS      RESET DATA SET ALLOCATION TOTALS
         XC    PDSTOTLS(16),PDSTOTLS   RESET PDS TOTALS
         L     R2,DSNFLD               LOAD ADDRESS OF DSNAME FIELD
         MVC   0(44,R2),DSNAME         COPY DSNAME INTO MESSAGE
         LOCATE LOCLIST                LOCATE BY NAME
         LTR   R15,R15                 TEST RETURN CODE
         BZ    OBTAIN1                                          GP09143
         CLI   0(R7),C'A'              NON-VSAM ?               GP09143
         BE    BASLOCER                YES                      GP09143
         CLI   0(R7),C'B'              GDG DEFINITION?          GP09143
         BE    GETGDG                  YES                      GP09143
BASFAIL  LA    R15,8                   DISPLAY AS VSAM TYPE     GP09143
         MVC   VOLCNT,=H'1'            PREVENT ERROR MSG        GP09143
         B     BASDSNER                AND ISSUE BETTER MESSAGE GP09143
TESTCOMP TM    FLAGS2,$INCMPLT         SEE IF NAME LIST INCOMPLETE
         BZ    ENDGRP
         MVC   OUTLINE,BLANKS          BLANK OUT LINE           GP12013
         L     R2,ERRFLD               LOAD ERROR FIELD ADDRESS
         MVC   0(32,R2),DSATERR3       MOVE IN ERROR MESSAGE
         BAL   R2,PUTL                 DISPLAY LINE             GP12013
         B     ENDGRP                    QUIT GROUP NOW         GP12013
BASPUTL  BAL   R2,PUTL                 DISPLAY LINE
BASRSET  MVC   OUTLINE,BLANKS          BLANK OUT LINE
         B     SKIPDS                                           GP09143
         SPACE 1
*DEFER*  CLC   GDGINFO,=H'2'           WANT GDG INFO ?          GP09143
*DEFER*  BE    BASFAIL                 NO; JUST SHOW GDG ENTRY  GP09143
GETGDG   LA    R2,SHOWSPAC             RETURN AREA              GP09143
         MVC   0(4,R2),=AL2(256*8+12,0)   RESET WORK COUNTER    GP09143
         SHOWCAT NAME=DSNAME,AREA=(R2),MF=(B,SHOWCATL)          GP09143
         SHOWCAT NAME=DSNAME,AREA=(R2),MF=(E,SHOWCATL)          GP09143
         N     R15,=X'FFFFFFDF' ^X'20' UNEXPECTED RETURN CODE?  GP09143
         BNZ   BASFAIL                 YES; JUST SHOW BASE      GP09143
         LH    R2,SHOWSPAC+2           GET LENGTH USED          GP09143
         SH    R2,=H'12'               LESS FIXED OVERHEAD      GP09143
         BNP   BASFAIL                 NO DATA RETURNED         GP09143
         LA    R1,SHOWSPAC+12-8        PRESET ONE HIGHER        GP09143
         AH    R2,=H'8'                DITTO                    GP09143
         SRL   R2,3                    DIVIDE TO GET NUMBER     GP09143
         STM   R1,R2,GDSCURR           SET FOR NEXT INCREMENT   GP09143
         LA    R15,44-9                MAX BASE LENGTH          GP09143
         LA    R14,DSNAME+44-9         BASE NAME                GP09143
GDSGTLEN CLI   0(R14),C' '             TRAILING NON-BLANK YET?  GP09143
         BNE   GDSSTLEN                YES; STASH LENGTH        GP09143
         BCTR  R14,0                                            GP09143
         BCT   R15,GDSGTLEN            TRY AGAIN                GP09143
GDSSTLEN LA    R15,1(,R15)             TRUE BASE LENGTH         GP09143
         ST    R15,GDSBLEN             SAVE BASE LENGTH         GP09143
         L     R2,ERRFLD                                        GP09143
         MVC   0(16,R2),CATBASE+1      IDENTIFY                 GP09143
         BAL   R2,PUTL                 SHOW BASE                GP09143
         MVC   OUTLINE,BLANKS           AND CLEAR               GP09143
         SPACE 1
LOOPGDS  LM    R1,R2,GDSCURR           GET PRIOR GENERATION     GP09143
         LA    R1,8(,R1)               SKIP TO NEXT             GP09143
         SH    R2,=H'1'                ACCOUNT FOR IT           GP09143
         BNP   SKIPDS                  DONE HERE                GP09143
         STM   R1,R2,GDSCURR           SET NEXT GENERATION      GP09143
         CLI   0(R1),C'A'              NON-VSAM ENTRY ?         GP09143
         BNE   LOOPGDS                 NO; SKIP                 GP09143
         MVC   OBTNAME,DSNAME          GET BASE NAME            GP09143
         L     R15,GDSBLEN             GET BASE LENGTH          GP09143
         LA    R15,OBTNAME(R15)        POINT TO INSERTION       GP09143
         MVC   0(9,R15),=C'.GnnnnV00'  MOVE PATTERN             GP09143
         MVC   2(4,R15),4(R1)          COMPLETE NAME            GP09143
         L     R2,DSNFLD               GET LINE POINTER         GP09143
         MVC   0(44,R2),OBTNAME        COMPLETE NAME            GP09143
         LA    R8,GDSSPACE             POINT TO RETURN          GP09143
         XC    0(4,R8),0(R8)           CLEAR IT                 GP09143
         LOCATE GDSLIST                LOOK FOR IT              GP09143
         CLC   0(2,R8),ZEROS           ANY VOLUME(S) FOUND ?    GP09143
         BE    LOOPGDS                   NO; SKIP THIS ONE      GP09143
         L     R15,=A(FORMINFO)                                 GP09143
         BALR  R14,R15                                          GP09143
         CH    R15,=H'8'               TEST                     GP09143
         BL    LOOPGDS                 DO NEXT GENERATION       GP09143
         BE    DSATNXT2                DO NEXT VSAM CAT ENTRY   GP09143
         B     EXIT                    MAJOR ERROR              GP09143
         SPACE 1             OBTAIN DSCB1 FAILED                GP09143
BASDSNER CH    R15,=H'8'               TEST RETURN CODE
         BH    BASDSNR1
         BE    BASDSNTV
         CLC   DAONLY,=H'2'            SEE IF MESSAGE TO BE SUPRESSED
         BE    BASRSET
         OI    FLAGS,COUNT             COUNT THIS DATA SET
         B     BASDSNR1
BASDSNTV TM    FLAGS2,$VSAMLOC         SUPER-LOCATE BEING USED? GP09143
         BZ    BASDSNR1                NO; NO INFO              GP09143
         L     R7,CURRBLK              CURRENT ENTRY            GP09143
         CLI   0(R7),C'A'              NON-VSAM ENTRY ?         GP09127
         BE    BASDSNR1                YES; REALLY NOT FOUND    GP09127
         TM    FLAGS2,$F2VANY+$F2VMASK  USER SPECIFIED VOLUME?  GP09143
         BNZ   BASRSET                 YES - NO ERROR MSG       GP09143
         L     R2,ERRFLD               GET ERROR FIELD          GP09127
         LM    R15,R1,=A(CATCOMP,CATCOMP2-CATCOMP,CATCOMPN)     GP09127
BASDSNLP CLC   0(1,R7),0(R15)          MATCH ?                  GP09127
         BE    BASDSNMG                YES; DISPLAY MESSAGE     GP09127
         BXLE  R15,R0,BASDSNLP         TRY AGAIN                GP09127
         CLI   0(R7),C' '              PRINTABLE ENTRY TYPE?    GP12013
         BL    DSATNXT3                  NO; IGNORE IT          GP12013
         MVC   CATCOMP2-CATCOMP(1,R2),0(R7)  SHOW ENTRY TYPE    GP09127
BASDSNMG OI    FLAGS2,$F2ENTY          SHOW MATCH FOUND         GP12018
         MVC   0(CATCOMP2-CATCOMP-1,R2),1(R15)   IDENTIFY       GP09127
         MVC   VOLCNT,=H'1'            DON'T DO MORE SERIALS    GP09143
         B     BASPUTL                 AND PRINT                GP09127
         SPACE 1                                                GP09127
BASDSNR1 OI    FLAGS,$NOTPOPS          INDICATE ERROR
         SLA   R15,3                   MULTIPLY RETURN CODE BY 8
         LA    R15,DSNERRS-32(R15)     LOAD PROPER MESSAGE ADDRESS
         L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS
         MVC   0(32,R1),0(R15)         COPY MESSAGE TO OUTPUT LINE
         B     BASPUTL                 PRINT IT                 GP09143
         SPACE 1
***********************************************************************
*                                                                     *
*   Call DSCB OBTAIN and data formatting routine                      *
*                                                                     *
***********************************************************************
         SPACE 1
OBTAIN1  LA    R8,CATBLOCK             LOAD VOLUME LIST ADDRESS
         MVC   OBTNAME,DSNAME          SET OBTAIN NAME          GP09143
         L     R15,=A(FORMINFO)        FORMAT ONE DS            GP09143
         BALR  R14,R15                 FORMAT ONE DS            GP09143
         CH    R15,=H'8'     0-OK 4-SKP 8-ENDG 12-EXIT          GP09143
         BE    ENDGRP                                           GP09143
         BH    EXIT                                             GP09143
         SPACE 1
***********************************************************************
*                                                                     *
*        PROCESS NEXT DATA SET                                        *
*                                                                     *
***********************************************************************
SKIPDS   TM    FLAGS,DSATGRP           TEST FOR DATA SET GROUP  GP09143
         BZ    ENDGRP
         TM    FLAGS2,$VSAMLOC         TEST FOR VSAM LOCATE
         BZ    DSATNEXT                GET NEXT DSNAME FROM CVOL
         B     DSATNXT2                GET NEXT DSNAME FROM LOCATE
ENDGRP   TM    FLAGS2,$FOUND+$F2ENTY   ANYTHING FOUND ?         GP12018
         BNZ   ENDGRP2                   YES; NO OOPS MSG       GP12018
         MVC   OUTLINE,BLANKS          BLANK OUTPUT LINE        GP12018
         TM    FLAGS2,$F2VANY+$F2VMASK SEE IF VOLUME ENTERED    GP09143
         BZ    NOTANY                    NO                     GP12018
         TM    FLAGS2,$F2VMASK         SPECIFIC REQUEST ?       GP09143
         BZ    NOTANY                  NO; USE ANY VOLUME MSG   GP09143
         MVC   OUTLINE(L'MSGNULL+4),MSGNULL                     GP12018
         MVC   OUTLINE+L'MSGNULL+5(L'CEREAL),CEREAL             GP12018
         TM    FLAGS,DSATGRP           GROUP OR SINGLE DS ?     GP09143
         BNZ   NOTACOM                 GROUP; SKIP DSN          GP09143
         L     R1,DSNFLD               LOAD DSNAME FIELD ADDR   GP09143
         MVC   0(44,R1),DSNAME         COPY DSNAME              GP09143
         B     NOTACOM                                          GP09143
NOTANY   MVC   OUTLINE(L'MSGNULL),MSGNULL  MENTION CATALOG      GP12018
NOTACOM  BAL   R2,PUTL                 DISPLAY ERROR MESSAGE    GP09143
ENDGRP2  NI    FLAGS,RESET             RESET DATA SET GROUP FLG GP09143
         NI    FLAGS2,X'FF'-$VSAMLOC-$INCMPLT                   GP09143
         L     R3,CURRPDL              REGAIN PDL ADDRESS       GP09144
         L     R3,24(,R3)              LOAD ADDRESS OF NEXT PDE
         C     R3,=X'FF000000'         TEST FOR END OF CHAIN
         BNE   SETUPNXT
***********************************************************************
*                                                                     *
*        DISPLAY TOTALS IF REQUESTED                                  *
*                                                                     *
***********************************************************************
         CLC   TOTALS,=H'2'            SEE IF TOTALS REQUESTED
         BE    RETURN
         MVC   OUTLINE,BLANKS          CLEAR OUTPUT LINE
         LM    R4,R8,TOTALRUN          LOAD TOTALS
         CVD   R8,DSATPDEC             CONVERT NUMBER OF DATA SETS
         MVC   DSATDEC,=X'4020202020202120'
         ED    DSATDEC,DSATPDEC+4      EDIT
         L     R2,DSNFLD               LOAD DATA SET NAME FIELD
         MVC   0(4,R2),DSATDEC+4       MOVE INTO OUTPUT LINE
         MVC   5(19,R2),=C'DATA SETS DISPLAYED'
         CH    R8,=H'1'                TEST FOR ONE OR ZERO DATA SETS
         BH    CNVTALOC
         TM    FLAGS,$MULTVOL          TEST FOR MULTIVOLUME
         BZ    RETURN
         NI    FLAGS,X'FF'-$MULTVOL    CLEAR MULTIVOLUME INDICATOR
         MVC   5(19,R2),=C'DATA SET DISPLAYED '
CNVTALOC CLC   ALLOC,=H'2'             SEE IF ALLOCATION REQUESTED
         BE    DISPLAYT
         L     R2,ALLOCFLD             LOAD ALLOCATION FIELD ADDRESS
         CVD   R4,DSATPDEC             CONVERT ALLOCATED TOTAL TO DEC
         MVC   DSATDEC,=X'4020202020202120'
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   0(5,R2),DSATDEC+3       MOVE INTO OUTPUT LINE
         CVD   R5,DSATPDEC             CONVERT USED TOTAL TO DECIMAL
         MVC   DSATDEC,=X'4020202020202120'
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   6(5,R2),DSATDEC+3       MOVE INTO OUTPUT LINE
DISPLAYT BAL   R2,PUTL                 DISPLAY LINE
***********************************************************************
*                                                                     *
*        SET UP RETURN CODE                                           *
*                                                                     *
***********************************************************************
RETURN   LM    R4,R8,TOTALRUN          LOAD TOTALS
         LA    R14,EXIT                SET FOR QUICK BRANCH     GP09143
         LH    R15,RC                  LOAD RETURN CODE
         C     R15,=F'10'              SEE IF A PDS CODE
         BL    BRANCH
         LM    R4,R7,PDSTOTLS          LOAD PDS TOTALS
BRANCH   SLA   R15,2                   MULTIPLY BY 4
         BZR   R14                     PREVENT LOOP             GP09143
         B     BRTABLE(R15)            BRANCH TO PROPER ROUTINE
BRTABLE  B     RC4
*   1    B     RCTALLOC
           LR  R15,R4                  TOTAL TRACKS ALLOCATED   GP09143
           BR  R14                     GO TO EXIT               GP09143
*   2    B     RCTUSED
           LR  R15,R5                  TOTAL TRACKS USED        GP09143
           BR  R14                     GO TO EXIT               GP09143
*   3    B     RCLALLOC
           LR  R15,R6                  LAST  TRACKS ALLOCATED   GP09143
           BR  R14                     GO TO EXIT               GP09143
*   4    B     RCLUSED
           LR  R15,R7                  LAST  TRACKS ALLOCATED   GP09143
           BR  R14                     GO TO EXIT               GP09143
         B     RCTDIFF       5
         B     RCLDIFF       6
*   7    B     RCNUM
          LR   R15,R8                  LOAD DATA SET COUNT      GP09143
          BR   R14                                              GP09143
         B     RCPREV        8
         B     RCDSORG       9
*  10    B     RCDIRA
          LR   R15,R4                  DIRECTORY BLOCKS ALLOC.  GP09143
          BR   R14                                              GP09143
*  11    B     RCDIRU
          LR   R15,R5                  DIRECTORY BLOCKS USED    GP09143
          BR   R14                                              GP09143
*  12    B     RCENTR
          LR   R15,R6                  NUMBER OF ENTRIES        GP09143
          BR   R14                                              GP09143
         B     RCMEMB       13
*  14    B     RCALIAS                                          GP09143
          LR   R15,R7                  NUMBER OF ALIASES        GP09143
          BR   R14                                              GP09143
         B     RCPCTUSE     15                                  GP09143
         B     RCPCLUSE     16                                  GP09143
RCMEMB   LR    R15,R6                  NUMBER OF ENTRIES
         SR    R15,R7                  MINUS ALIASES = MEMBERS
         BR    R14                                              GP09143
RCDSORG  NI    FLAGS,$NOTPOPS+$DSPO+$DSPS   SAVE DSORG INDICATORS
         LA    R15,4                   SET COMPLETION CODE
         TM    FLAGS,$NOTPOPS
         BNZR  R14                                              GP09143
         IC    R15,FLAGS               LOAD FLAGS AS RC
         BR    R14                                              GP09143
         SPACE 1
RCPREV   L     R15,MYCPPL              GET CPPL BACK            GP09143
         USING CPPL,R15                                         GP09143
         L     R15,CPPLECT             LOAD ECT ADDRESS
         USING ECT,R15
         LH    R15,ECTRTCD+1           LOAD PREVIOUS RETURN CODE
         DROP  R15
         BR    R14                                              GP09143
RCTDIFF  LR    R15,R4                  LOAD TOTAL TRACKS ALLOCATED
         SR    R15,R5                  SUBTRACTS TOTAL TRACKS USED
         BR    R14                                              GP09143
RCLDIFF  LR    R15,R6                  LOAD TRACKS ALLOCATED BY LAST DS
         SR    R15,R7                  SUBTRACT TRACKS USED BY LAST DS
         BR    R14                                              GP09143
         SPACE 1
RCPCTUSE LTR   R15,R4                  ANY ALLOCATED ?          GP09143
         BNP   EXIT                    NONE; RETURN 0           GP09143
         LTR   R15,R5                  TRACKS USED              GP09143
         BNP   EXIT                    NONE; RETURN 0           GP09143
         M     R14,=F'100'             SCALE TO PERCENT         GP09143
         DR    R14,R4                  USED*100/ALLOC           GP09143
         B     EXIT                    RETURN TRUNCATED PERCENT GP09143
         SPACE 1
RCPCLUSE LTR   R15,R6                  ANY ALLOCATED ?          GP09143
         BNP   EXIT                    NONE; RETURN 0           GP09143
         LTR   R15,R7                  TRACKS USED              GP09143
         BNP   EXIT                    NONE; RETURN 0           GP09143
         M     R14,=F'100'             SCALE TO PERCENT         GP09143
         DR    R14,R6                  USED*100/ALLOC           GP09143
         B     EXIT                    RETURN TRUNCATED PERCENT GP09143
         SPACE 1
RC4      LA    R15,4                   SET RETURN CODE TO 4
***********************************************************************
*                                                                     *
*        RELEASE STORAGE AND RETURN                                   *
*                                                                     *
***********************************************************************
EXIT     LR    R4,R15                  SAVE RETURN CODE         GP09143
         IKJRLSA DSATANS               RELEASE PARSE STORAGE
         TM    FLAGS2,$HARDCPY         TEST FOR HARDCOPY OPTION
         BZ    EXIT2
         LA    R1,HARDOPEN             LOAD OPEN LIST FORM ADDRESS
         LA    R2,HARDCPY              LOAD DCB ADDRESS
         CLOSE ((R2)),MF=(E,(R1))      CLOSE HARDCPY DCB
EXIT2    L     R1,WORKAREA             LOAD WORK AREA ADDRESS
         L     R2,WORKLEN              LOAD WORK AREA LENGTH
         FREEMAIN R,LV=(R2),A=(R1),SP=1  FREE WORK AREA
         LR    R1,R13                   LOAD STORAGE ADDRESS
         L     R3,4(,R13)               SAVE OLD SAVEAREA ADDR
   FREEMAIN R,LV=DSECTLEN,A=(1),SP=1
         LR    R15,R4                   RESTORE RETURN CODE
         LR    R13,R3                   RESTORE OLD SAVEAREA
         L     R14,12(,R13)             RESTORE RETURN ADDRESS
         LM    R0,R12,20(R13)           RESTORE REGS 0 - 12
         MVI   12(R13),X'FF'            SET RETURNED FLAG
         SPM   R14                      RESTORE PROGRAM MASK
         BR    R14                      RETURN
***********************************************************************
*        ERRORS                                                       *
***********************************************************************
*--------ERROR IN PARSE ROUTINE
ERRPARS  MVC   OUTLINE(28),DSATERR1
         B     SETERROR
*--------NO PREFIX, NO DSNAME, AND NO USERID (BATCH)
NOID     MVC   OUTLINE(32),DSATERR7
         B     RLSA
*--------TOO MANY OPERANDS - OUTPUT WILL EXCEED LINE LENGTH'
TOOLONG  MVC   OUTLINE,BLANKS
         MVC   OUTLINE(44),DSATERR4
RLSA     IKJRLSA DSATANS               FREE PARSE WORK AREA
*--------SET ERROR INDICATOR AND DISPLAY ERROR MESSAGE
SETERROR OI    FLAGS,$NOTPOPS          INDICATE ERROR
         BAL   R2,PUTL2                PUT MESSAGE
         LA    R4,16                   SET CONDITION CODE       GP09143
         B     EXIT2
*--------ERROR IN LOCATE MACRO
BASLOCER L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS
         CL    R15,=A((LOCMSGND-LOCMSGS)/32*4)  KNOWN ERROR?    GP09143
         BH    BASLOCBD                                         GP09143
         SLA   R15,3                   MULTIPLY CODE BY 8       GP09143
         LA    R15,LOCMSGS-32(R15)     LOAD MESSAGE ADDRESS     GP09143
         MVC   0(32,R1),0(R15)         COPY MESSAGE TO OUTPUT   GP09143
         B     BASLOCMG                GO TO COMMON MESSAGE     GP09143
BASLOCBD MVC   0(32,R1),LOCMSGND       ISSUE UNSPECIFIED MSG    GP09143
         ST    R15,WORK                SAVE RETURN              GP09143
         UNPK  DSATDEC(9),WORK(5)      UNPACK                   GP09143
         TR    DSATDEC,TRTABLE         MAKE PRINTABLE           GP09143
         MVC   18(8,R1),DSATDEC        APPEND TO MESSAGE        GP09143
BASLOCMG OI    FLAGS,$NOTPOPS          INDICATE ERROR           GP09143
         B     BASPUTL                 PRINT IT                 GP09143
         SPACE 2
         LTORG ,                                                GP09143
         TITLE 'D S A T  ***  FORMAT INFORMATION FOR ONE DS'    GP09143
***********************************************************************
*                                                                     *
*   DATA SET PROCESSING - FORMAT ONE OR MORE (MULTI-VOLUME) LINES     *
*     VOLUME LIST (IN CATALOG FORMAT:  COUNT/TYPE/SERIAL/FILE/TYPE..) *
*     PASSED IN R8                                                    *
*   RETURNS R15 =  0    DATA SET INFORMATION COMPLETE                 *
*                  4    SKIP THIS DATA SET                            *
*                  8    SKIP THIS DATA SET GROUP                      *
*                 12    FATAL ERROR - QUIT PROGRAM                    *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP09143
         DROP  R11,R12                                          GP09143
DSATFORM CSECT ,                                                GP09143
FORMINFO LA    R15,4                   PRESET FOR DS SKIP       GP09143
         STM   R0,R15,SAVEFORM         SAVE REGISTERS           GP09143
         BALR  R12,0                                            GP09143
         USING *,R12                                            GP09143
         MVC   HALF,0(R8)              VOLUME COUNT TO ALIGNED AREA
         LH    R1,HALF                 LOAD VOLUME COUNT        GP09143
         LA    R8,2(,R8)               BUMP POINTER TO FIRST VOL FIELD
         LTR   R1,R1                   VALID COUNT ?            GP09143
         BNP   FORMINFM                NO; SKIP MATCH CHECK     GP09143
         CH    R1,=H'20'               TEST AGAINST MAX COUNT   GP09143
         BNH   *+8                     OK                       GP09143
         LA    R1,20                   TRUNCATE                 GP09143
         TM    FLAGS2,$F2VMASK         MATCH SERIAL ?           GP09143
         BZ    FORMINFM                NO; DO ALL IN LIST       GP09143
         LA    R15,4(,R8)              POINT TO FIRST SERIAL    GP09143
FORMINFL CLC   CEREAL,0(R15)           MATCH ?                  GP09143
         BE    FORMINFM                YES; PROCESS ANY MATCH   GP09143
         LA    R15,12(,R15)            NEXT ENTRY               GP09143
         BCT   R1,FORMINFL             TRY AGAIN                GP09143
*PRESET* MVI   SAVEFORM+4*R15+3,4      SHOW SKIPPED BY VOL-SER  GP09143
         B     FORMINFX                SKIP THIS ENTRY          GP09143
         SPACE 1                                                GP09143
***********************************************************************
*   LOOP THROUGH VOLUME LIST                                          *
***********************************************************************
FORMINFM LH    R1,HALF                 LOAD VOLUME COUNT        GP09143
         CH    R1,=H'20'               TEST AGAINST MAX COUNT   GP09143
         BNH   FORMVLUP                                         GP09143
         LA    R1,20                   SET MAX COUNT            GP09143
FORMVLUP CH    R1,=H'1'                TEST VOLUME COUNT        GP09143
         BL    FORMBVCT                BAD VOLUME COUNT         GP09143
         BE    FORMSVCT                                         GP09143
         OI    FLAGS,$MULTVOL          INDICATE MULTIVOLUME     GP09143
FORMSVCT STH   R1,VOLCNT               STORE REMAINING VOLUME COUNT
         XC    VOLDSTRK,VOLDSTRK       ZERO TRACKS FOR VOLUME   GP09143
         MVC   DSATSER,4(R8)           COPY SERIAL              GP09143
         CLI   DSATSER,C'*'            SYSRES CONVENTION?       GP09127
         BNE   FORMNRES                NO                       GP09127
         L     R14,CVTPTR              GET CVT                  GP09127
         L     R14,CVTSYSAD-CVTMAP(,R14)  GET IPL UCB           GP09127
         MVC   DSATSER,UCBVOLI-UCBOB(R14)    USE IPL SERIAL     GP09127
FORMNRES CLC   SERIAL,=H'2'            TEST FOR NOSERIAL        GP09143
         BE    FORMNDEV                YES; SKIP DISPLAY        GP09143
         L     R2,SERFLD               LOAD OUTPUT AREA ADDRESS GP09143
         MVC   0(6,R2),DSATSER         COPY SERIAL TO OUTPUT    GP09143
         CLC   SEQNO,=H'2'             TEST FOR NOSEQNO         GP09143
         BE    FORMNDEV                                         GP09143
         MVC   HALF,10(R8)             SEQ NO TO ALIGNED AREA   GP09143
         L     R1,FULL                 LOAD FILE SEQUENCE NO.   GP09127
         CVD   R1,DSATPDEC             CONVERT TO DECIMAL       GP09143
         MVC   DSATDEC,=X'4020202020202120'   MOVE IN MASK      GP09143
         ED    DSATDEC,DSATPDEC+4      EDIT SEQUENCE NUMBER     GP09143
         MVC   7(4,R2),DSATDEC+4       MOVE TO MESSAGE          GP09143
FORMNDEV CLC   DEVTYPE,=H'2'           TEST FOR DEVTYPE         GP09143
         BE    FORMISDA                                         GP09143
         UNPK  DSATDEC(9),0(5,R8)      UNPACK DEVTYPE           GP09143
         TR    DSATDEC(8),TRTABLE      TRANSLATE TO EBCDIC      GP09143
         L     R2,DEVFLD               LOAD OUTPUT ADDRESS      GP09143
         MVC   0(8,R2),DSATDEC         MOVE TO MESSAGE          GP09143
FORMISDA CLI   2(R8),UCB3DACC          TEST FOR DIRECT ACCESS   GP09143
         BNE   FORMNTDA                                         GP09143
         LA    R0,DVCTYPMK             GET TYPE MASK            GP09143
         SR    R2,R2                   CLEAR REG 2              GP09143
         IC    R2,3(,R8)               LOAD DEVTYPE FIELD 4     GP09143
         CR    R2,R0                   IS IT VALID ?            GP09143
         BH    FORMNTDA                                         GP09143
         LTR   R3,R2                   AND NONZERO?             GP09143
         BZ    FORMNTDA                                         GP09143
         L     R1,CVTPTR               GET CVT                  GP09144
         L     R1,CVTZDTAB-CVTMAP(,R1)   GET DEVICE CHAR. TABLE GP09144
         IC    R2,DVCTIOFF-DVCTI(R2,R1)  GET DEVICE OFFSET      GP09144
         LTR   R2,R2                   IS IT VALID ?            GP09144
         BNZ   FORMGTRK                PROCESS IT               GP09143
*--------DEVICE CODE NOT IN CATALOG, GET IT FROM UCB            GP09143
         PUSH  USING                                            GP09143
         SR    R1,R1                   SIGNAL START OF LOOP     GP09143
FORMLUCB BAL   R14,LOOKUCB             GET NEXT DASD UCB        GP09143
         CH    R15,=H'4'               CHECK RETURN             GP09143
         BH    FORMNRDY                VOLUME NOT AVAILABLE     GP09143
         USING UCBOB,R1                                         GP09143
         CLC   DSATSER,UCBVOLI         COMPARE SERIAL           GP09143
         BNE   FORMLUCB                NO MATCH; TRY AGAIN      GP09143
         LA    R0,DVCTYPMK             GET TYPE MASK            GP09143
         N     R2,UCBTYP               MASK UCBTBYT4            GP09143
         BZ    FORMNTDA                                         GP09143
         LR    R3,R0                   SAVE FOR DEVICE NAME     GP09144
         POP   USING                                            GP09127
         L     R1,CVTPTR               GET CVT                  GP09144
         L     R1,CVTZDTAB-CVTMAP(,R1)   GET DEVICE CHAR. TABLE GP09144
         IC    R2,DVCTIOFF-DVCTI(R2,R1)  GET DEVICE OFFSET      GP09144
         LTR   R2,R2                   IS IT VALID ?            GP09144
         BZ    FORMNTDA                NO; SKIP                 GP09144
FORMGTRK LH    R0,DVCTRK-DVCT(R2,R1)   GET TRACKS PER CYLINDER  GP09144
         STH   R0,TRKPRCYL             SAVE IT                  GP09143
         LTR   R0,R0                   TEST IT                  GP09143
         BNZ   FORMTDV2                                         GP09143
FORMNRDY LA    R15,4                   VOL NOT MOUNTED - OBTAIN ERROR 4
         B     DSNERR
FORMTDV2 CLC   DEVICE,=H'2'            TEST FOR DEVICE
         BE    GETFMT1
         MH    R3,=H'6'                DEVICE NAME LENGTH       GP09144
         LA    R15,DEVNAME(R3)         LOAD FIELD ADDRESS       GP09144
         L     R2,DEVFIELD             LOAD OUTPUT AREA ADDRESS
         MVC   0(6,R2),0(R15)          DEVICE NAME TO OUTPUT    GP09144
GETFMT1  OBTAIN DSATDCB1               GET FORMAT 1 DSCB
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DSNERRF1                TEST FOR VOLUME SCREEN   GP09143
         L     R6,VOLDSTRK             TRACKS ON VOLUME         GP09143
         LA    R1,DS1EXT1              POINT TO FIRST EXTENT    GP09143
         LA    R0,3                    AT MOST 3 IN THIS FMT1   GP09143
         BAL   R14,TRACKNUM            COUNT TRACKS             GP09143
         ST    R6,VOLDSTRK             TRACKS ON VOL UPDATED    GP09143
         LA    R1,DS1PTRDS   FORMAT 1 LINK POINTER              GP08269
FMT3RTRY ST    R1,DSATDCB3+4
         CLC   DS1PTRDS-DS1PTRDS(5,R1),ZEROS     LINK ADDRESS?  GP09127
         BE    PROCESS                 NO; DONE                 GP09127
         OBTAIN DSATDCB3               GET THE FORMAT 3 DSCB
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DSNERR
         CLI   DS3FMTID,C'3'           EXTENT DESCRIPTOR?       GP08269
         BNE   F3RECURS                NO; READ AGAIN           GP09143
         SPACE 1
         MVC   DS3EXTNT+4*10(9*10),DS3ADEXT   MAKE CONTIGUOUS   GP09143
         L     R6,VOLDSTRK             TRACKS IN DS             GP09143
         LA    R1,DS3EXTNT             POINT TO FIRST EXTENT    GP09143
         LA    R0,4+9                  AT MOST 13 IN THIS FMT3  GP09143
         BAL   R14,TRACKNUM            COUNT TRACKS             GP09143
         ST    R6,VOLDSTRK             TRACKS IN DS UPDATED     GP09143
F3RECURS LA    R1,DS3PTRDS             REALLY DS2?              GP08269
         B     FMT3RTRY                AND GET FMT3             GP08269
         SPACE 1
***********************************************************************
*                                                                     *
*        PROCESS THE DSCB                                             *
*                                                                     *
***********************************************************************
PROCESS  OI    FLAGS,COUNT             COUNT THIS DATA SET
         OI    FLAGS2,$FOUND           INDICATE DATA SET FOUND
         MVI   SAVEFORM+4*15+3,0       SET GOOD RETURN          GP09143
         CLC   ALLOC,=H'2'             TEST FOR NOALLOC
         BE    PROCDSRG
         BAL   R14,$ALLOC              BRANCH TO PROCESSING ROUTINE
PROCDSRG CLC   DSORG,=H'2'             TEST FOR NODSORG
         BE    PROCPDS
         BAL   R14,$DSORG              BRANCH TO PROCESSING ROUTINE
PROCPDS  CLC   PDS,=H'2'               TEST FOR NOPDS
         BE    PROCDCB
         TM    DS1DSORG,X'02'          MAKE SURE DSORG = PO
         BZ    PROCDCB
         L     R15,=A(DSATPDS)         LOAD SUBROUTINE ADDRESS  GP09144
         BALR  R14,R15                 BRANCH TO PROCESSING ROUTINE
PROCDCB  CLC   DCB,=H'2'               TEST FOR NODCB
         BE    PROCCRDT
         BAL   R14,$DCB                BRANCH TO PROCESSING ROUTINE
PROCCRDT CLC   CRDATE,=H'2'            TEST FOR NOCRDATE
         BE    PROCEXDT
         BAL   R14,$CRDATE             BRANCH TO PROCESSING ROUTINE
PROCEXDT CLC   EXDATE,=H'2'            TEST FOR NOEXDATE
         BE    PROCLREF
         BAL   R14,$EXDATE             BRANCH TO PROCESSING ROUTINE
PROCLREF CLC   LASTREF,=H'1'           TEST FOR LASTREF
         BNE   PROCCHHR
         BAL   R14,$LASTREF            BRANCH TO PROCESSING ROUTINE
PROCCHHR CLC   CCHHR,=H'2'             TEST FOR NOCCHHR
         BE    FORMLPUT                                         GP09143
         BAL   R14,$CCHHR              BRANCH TO PROCESSING ROUTINE
         SPACE 1                                                GP09143
FORMLPUT BAL   R2,PUTL                 DISPLAY INFORMATION      GP09143
FORMRSET MVC   OUTLINE,BLANKS          BLANK OUTPUT LINE        GP09143
         LA    R8,12(,R8)              INCREMENT TO NEXT VOLUME GP09143
         LH    R1,VOLCNT               LOAD VOLUME COUNT        GP09143
         BCT   R1,FORMVLUP             LOOP FOR MORE VOLUMES    GP09143
***********************************************************************
*        ACCUMULATE RUN TOTALS FROM DS VALUES                         *
***********************************************************************
         LM    R4,R8,TOTALRUN          LOAD TOTALS FIELDS
         AR    R4,R6                   ACCUMULATE TOTAL TRACKS ALLOC
         AR    R5,R7                   ACCUMULATE TOTAL TRACKS USED
         TM    FLAGS,COUNT             COUNT IT?
         BZ    FORMSTOT
         NI    FLAGS,X'FF'-COUNT       RESET COUNT BIT
         LA    R8,1(,R8)               INCREMENT DATA SET COUNT
FORMSTOT STM   R4,R8,TOTALRUN          STORE TOTALS
FORMINFX MVC   OUTLINE,BLANKS          BLANK OUTPUT LINE        GP09143
         LM    R0,R15,SAVEFORM         RELOAD REGISTERS AND RC  GP09143
         BR    R14                     RETURN TO CALLER         GP09143
         SPACE 1                                                GP09143
*--------VOLUME COUNT IS NEGATIVE OR ZERO                       GP09143
FORMBVCT L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS GP09143
         MVC   0(32,R1),DSATERR5       MOVE IN ERROR MESSAGE    GP09143
         MVC   VOLCNT,=H'1'            SET COUNT TO 1           GP09143
         OI    FLAGS,$NOTPOPS          SET ERROR INDICATOR      GP09143
         B     FORMLPUT                DISPLAY MESSAGE; RC=8    GP09143
         SPACE 1                                                GP09143
*--------NOT A DIRECT ACCESS DEVICE
FORMNTDA CLC   DAONLY,=H'2'            SEE IF MESSAGE TO BE SUPPRESSED
         BE    FORMRSET                RESET; DO NEXT VOL       GP09143
         OI    FLAGS,COUNT+$NOTPOPS    COUNT THIS DATA SET, ERROR
         L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS GP09143
         MVC   0(32,R1),DSATERR2       COPY MESSAGE TO OUTPUT LINE
         B     FORMLPUT                PRINT THE LINE           GP09143
         SPACE 2
***********************************************************************
*                                                                     *
*   UCB LOOKUP ROUTINE                                                *
*   SR R1,R1                 START SCAN THROUGH UCBS                  *
*   BAL R14,LOOKUCB          GET NEXT UCB                             *
*   ... R15=0       UCB ADDRESS IN R1                                 *
*           4       UCB ADDRESS IN R1, BUT DEVICE UNAVAILABLE (NRDY)  *
*           8       END OF UCB CHAIN                                  *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP09143
LOOKUCB  LA    R15,8                   PRESET FOR END OF UCBS   GP09143
         STM   R0,R15,SAVE2            SAVE REGISTERS           GP09143
         LTR   R1,R1                   NEW SCAN ?               GP09143
         BNZ   LOOKUCB1                NO; CONTINUE             GP09143
         XC    SERPTR,SERPTR           ZERO SERIAL POINTER      GP09143
         XC    LASTUCB,LASTUCB         ZERO LAST UCB PROCESSED  GP09143
         L     R2,CVTPTR               LOAD CVT ADDRESS         GP09143
         L     R2,CVTILK2-CVTMAP(,R2)  LOAD UCB TABLE ADDRESS   GP09143
         B     LOOKUCB2                START LOOKUP             GP09143
LOOKUCB1 L     R2,SERPTR               LOAD PREVIOUS ENTRY      GP09143
LOOKUCBI LA    R2,2(,R2)               INCREMENT POINTER        GP09143
LOOKUCB2 LH    R1,0(,R2)               LOAD UCB ADDRESS         GP09143
         N     R1,=X'0000FFFF'         CLEAR SIGN EXTENSION     GP09143
         BZ    LOOKUCBI                EMPTY - TRY AGAIN        GP09143
         CL    R1,=X'0000FFFF'         TEST FOR END OF TABLE    GP09143
         BE    LOOKUCBX                GET OUT; R15=8           GP09143
         ST    R1,LASTUCB              STORE LAST UCB USED      GP09143
         USING UCBOB,R1                  MAP                    GP09143
         CLI   UCBTBYT3,UCB3DACC       TEST FOR DIRECT ACCESS   GP09143
         BNE   LOOKUCBI                  BUMP                   GP09143
         CLI   UCBVOLI,X'00'           TEST FOR ANY SERIAL      GP09143
         BE    LOOKUCBI                  BUMP IF NONE           GP09143
         C     R1,LASTUCB              SEE IF ALTERNATE PATH    GP09143
         BNH   LOOKUCBI                  YES; DONE ALREADY      GP09143
         ST    R2,SERPTR               STORE UCB TABLE POINTER  GP09143
         ST    R1,SAVE2+4                AND RETURN TO USER     GP09143
         MVI   SAVE2+15*4+3,4          CHANGE RETURN CODE TO 4  GP09143
         TM    UCBFLA,UCBNRY           TEST FOR NOT READY       GP09143
         BO    LOOKUCBX                  NOT READY              GP09143
         TM    UCBJBNR,UCBOLDSM+UCBBOX   AVAILABLE?             GP09143
         BNZ   LOOKUCBX                MAYBE, BUT NOT NOW       GP09143
         MVI   SAVE2+15*4+3,0          SET GOOD RETURN          GP09143
LOOKUCBX LM    R0,R15,SAVE2            RESTORE REGISTERS        GP09143
         BR    R14                     RETURN TO CALLER         GP09143
         POP   USING                                            GP09143
         SPACE 2
***********************************************************************
*   CALCULATE TRACKS IN ONE DSCB                                      *
*     R1 - FIRST IN GROUP OF EXTENTS   R0 - NUMBER TO PROCESS         *
***********************************************************************
TRACKNUM STM   R7,R5,SAVE2             SAVE ALL REGISTERS EXC 6 GP09143
         LTR   R0,R0                   SANITY CHECK             GP09143
         BNP   TRACKNUX                TOO BAD - RETURN         GP09143
TRACKNXT CLI   0(R1),X'00'                                      GP09143
         BE    TRACKNUX                                         GP09143
         CLI   0(R1),X'80'             SPLIT CYLINDER ALLOC?    GP08269
         BE    TRACKSPT                YES; DIFFERNT CALC       GP08269
         MVC   HALF(2),6(R1)           LOAD ENDING CYL NUMBER   GP09143
         L     R3,FULL                                          GP09127
         MVC   HALF(2),2(R1)           LOAD STARTING CYL NUMBER GP09143
         S     R3,FULL                 SUBTRACT STARTING FROM ENDING
         MH    R3,TRKPRCYL             MULTIPLY BY TRACKS PER CYL
         MVC   HALF(2),8(R1)           LOAD ENDING TRACK        GP09143
         A     R3,FULL                 ADD TO TRACK COUNT       GP09127
         MVC   HALF(2),4(R1)           LOAD STARTING TRACK      GP09143
         S     R3,FULL                 SUBTRACT FROM TRACK CNT  GP09127
         AH    R3,=H'1'                TOTAL TRACKS IN  EXTENT  GP08269
         B     TRACKCOM                JOIN COMMON              GP08269
TRACKSPT MVC   HALF(2),6(R1)           LOAD ENDING CYL NUMBER   GP08269
         L     R15,FULL                                         GP08269
         MVC   HALF(2),2(R1)           LOAD STARTING CYL NUMBER GP08269
         S     R15,FULL                 SUBTRACT ENDING         GP08269
         AH    R15,=H'1'                RELATIVITY              GP08269
         MVC   HALF(2),8(R1)           LOAD ENDING TRACK        GP08269
         L     R3,FULL                 GET END TRACK            GP08269
         MVC   HALF(2),4(R1)           LOAD STARTING TRACK      GP08269
         S     R3,FULL                 SUBTRACT                 GP08269
         AH    R3,=H'1'                TOTAL TRACKS IN CYLINDER GP08269
         MR    R0,R15                  TRACKS IN SPLIT EXTENT   GP08269
TRACKCOM AR    R6,R3                   ACCUMULATE TOTAL         GP09143
         LA    R1,10(,R1)              NEXT EXTENT              GP09143
         BCT   R0,TRACKNXT             DECREMENT EXTENT COUNT   GP09143
TRACKNUX LM    R7,R5,SAVE2             UPDATED TRACK COUNT IN 6 GP09143
         BR    R14                     RETURN TO CALLER         GP09143
         SPACE 1
***********************************************************************
*                                                                     *
*        GET ALLOCATION  (ALLOCATED, USED, AND EXTENTS)               *
*                                                                     *
***********************************************************************
*                                                                     *
*        R2        - OUTPUT AREA ADDRESS                              *
*        R3        - RESERVED (DSNAME PDE POINTER)                    *
*        R6        - TRACKS ALLOCATED                                 *
*        R7        - EXTENT DESCRIPTION POINTER/TRACKS USED           *
*        R8 - R13  - RESERVED (POINTERS AND BASE REGISTERS)           *
*                                                                     *
***********************************************************************
*--------GET TRACK ALLOCATION
$ALLOC   L     R2,ALLOCFLD             LOAD OUTPUT AREA ADDRESS
         L     R5,VOLDSTRK             TRACKS ON VOLUME         GP09143
         CVD   R5,DSATPDEC             CONVERT TRACKS TO DECIMAL
         MVC   DSATDEC,=X'4020202020202120'      MOVE MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   0(5,R2),DSATDEC+3       MOVE INTO MESSAGE
         L     R6,TOTALDS              GET TRACKS ALLOCATED     GP09143
         AR    R6,R5                   UPDATE DS TOTAL          GP09143
         ST    R6,TOTALDS              SET TRACKS ALLOCATED     GP09143
*--------GET TRACKS USED
         SR    R7,R7                                            GP09144
         CLC   DS1LSTAR,ZEROS          EVER USED ?              GP09143
         BE    DSATXFRM                NO; LEAVE 0              GP09143
         LR    R7,R5         PROVISIONALLY SET USED=ALLOCATED   GP09143
         TM    DS1SMSFG,DS1PDSE+DS1PDSEX+DS1STRP  FUNNY NEW ?   GP09143
         BNZ   DSATXFRM                YES; FULLY USED          GP09143
         TM    DS1DSORG+1,0            DSORG=VSAM OR ?          GP09186
         BNZ   DSATXFRM                YES; SKIP                GP09186
         TM    DS1DSORG,X'42'          DSORG=PS OR PO ?         GP09143
         BZ    DSATXFRM                NO; USED = ALLOC         GP09143
DSATXSOM LH    R7,DS1LSTAR             LOAD TRACKS USED
         N     R7,=X'0000FFFF'         BIG DISKS?               GP09143
         LA    R7,1(,R7)               ADD 1 FOR RELATIVITY     GP09143
DSATXFRM CR    R5,R7                   ALLOC < USED ?           GP09143
         BNH   *+6                     NO                       GP09143
         LR    R5,R7                   USE LOWER (BAD FMT1?)    GP09143
         CVD   R5,DSATPDEC             CONVERT TO DECIMAL       GP09143
         A     R7,TOTALDS+4            LOAD PRIOR LSTAR         GP09143
         ST    R7,TOTALDS+4            SAVE FOR RUN TOTALS      GP09143
         MVC   DSATDEC,=X'4020202020202120'  MOVE MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   6(5,R2),DSATDEC+3       MOVE INTO MESSAGE
*--------GET NUMBER OF EXTENTS
DSATXNTS SR    R1,R1
         IC    R1,DS1NOEPV             LOAD EXTENTS             GP08269
         CVD   R1,DSATPDEC             CONVERT TO DECIMAL
         MVC   DSATDEC,=X'4020202020202120'  MOVE MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   11(3,R2),DSATDEC+5      MOVE INTO MESSAGE        GP09143
ALLOCEND CLC   SECOND,=H'2'            TEST FOR NOSECONDARY
         BE    NOSECOND
         LA    R2,15(,R2)              INCREMENT FIELD POINTER
         TM    DS1SCALO,X'C0'          TEST ALLOCATION TYPE
         BM    TRKALLOC
         BO    CYLALLOC
         MVC   5(5,R2),=C'ABSTR'       ABSOLUTE TRACK ALLOCATION
         B     SECAMT
CYLALLOC MVC   5(5,R2),=C' CYL '       CYLINDER ALLOCATION
         B     SECAMT
TRKALLOC TM    DS1SCALO,X'80'          TEST FOR TRACKS OR BLOCKS
         BZ    BLKALLOC
         MVC   5(5,R2),=C' TRK '       TRACK ALLOCATION
         B     SECAMT
BLKALLOC MVC   5(5,R2),=C'BLOCK'       BLOCK ALLOCATION
SECAMT   MVC   WORK,DS1SCALO           COPY TO ALIGNED (F) WORK AREA
         L     R1,WORK                 LOAD ALLOCATION WORD
         N     R1,=X'00FFFFFF'         ZERO OUT HIGH BYTE       GP09143
         CVD   R1,DSATPDEC             CONVERT TO DECIMAL
         MVC   DSATDEC,=X'4020202020202120'  MOVE IN MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   0(4,R2),DSATDEC+4
NOSECOND BR    R14                     RETURN
***********************************************************************
*                                                                     *
*        GET DSORG                                                    *
*                                                                     *
***********************************************************************
$DSORG   L     R2,DSORGFLD             LOAD OUTPUT AREA ADDRESS
         TM    FLAGS2,$VSAMLOC         SEE IF VSAM CATALOG ENTRY
         BZ    DSORG001
         L     R1,CURRBLK              LOAD CURRENT ENTRY ADDRESSS
         MVC   0(1,R2),0(R1)           COPY TYPE CODE
         MVI   1(R2),C'-'
         LA    R2,1(,R2)               INCREMENT OVER TYPE CODE
DSORG001 LA    R1,DSORGTBL             LOAD DSORG TABLE ADDRESS
         LA    R4,4                    LOAD LENGTH OF ENTRY
         LA    R5,DSORGEND             LOAD END OF TABLE ADDRESS
         TM    DS1DSORG,X'01'          TEST FOR UNMOVABLE
         BZ    DSORGCLC
         MVI   3(R2),C'U'              INDICATE UMMOVABLE
         XI    DS1DSORG,X'01'          TURN OFF UNMOVABLE BIT
DSORGCLC CLC   DS1DSORG,0(R1)          TEST DSORG CODE
         BE    DSORGMVC
         BXLE  R1,R4,DSORGCLC
         OI    FLAGS,$NOTPOPS          FALL THROUGH TO **       GP09144
DSORGMVC MVC   1(2,R2),2(R1)           COPY DSORG CODE
         CLC   1(2,R2),=C'PO'          TEST FOR PDS
         BE    DSORGPO
         CLC   1(2,R2),=C'PS'          TEST FOR SEQUENTIAL
         BE    DSORGPS
         B     DSORGRTN
DSORGPO  OI    FLAGS,$DSPO             PARTITIONED
         B     DSORGRTN
DSORGPS  OI    FLAGS,$DSPS             SEQUENTIAL
DSORGRTN BR    R14                     RETURN
***********************************************************************
*                                                                     *
*        GET DCB ATTRIBUTES                                           *
*                                                                     *
***********************************************************************
$DCB     LM    R15,R1,=A(TABREC,2,TABRECN)  POINT TO RECFMs     GP09144
         L     R2,DCBFLD           LOAD OUTPUT AREA ADDRESS     GP09144
         LR    R5,R2               FOR RECFM UPDATE             GP09144
         MVC   WORK(1),DS1RECFM    MAKE WORKING COPY            GP09144
         SR    R3,R3                 FOR IC                     GP09144
         MVI   0(R2),C'?'          IN CASE NOT SPECIFIED        GP09144
         TM    DS1RECFM,X'C0'      ANY OF F, U, V ?             GP09144
         BZ    RECFMLUP            YES; ELSE ALLOW D            GP09144
         AR    R15,R0              SKIP RECFM=D ENTRY           GP09144
RECFMLUP IC    R3,0(,R15)          GET TEST BIT                 GP09144
         EX    R3,EXRECFTM         SEE IF BIT(S) ON             GP09144
         BNO   RECFMLNX            NO; TRY NEXT                 GP09144
         MVC   0(1,R5),1(R15)      MOVE RECFM CHAR              GP09144
         LA    R5,1(,R5)           ADVANCE                      GP09144
         EX    R3,EXRECFXI         TURN BIT(S) OFF              GP09144
RECFMLNX BXLE  R15,R0,RECFMLUP     TRY NEXT                     GP09144
         SPACE 1                                                GP09144
*--------GET BLOCKSIZE
DSATBLK  LH    R1,DS1BLKL              LOAD BLOCK SIZE          GP09127
         N     R1,=X'0000FFFF'     SUPPORT DOS/VSE SIZES        GP09127
         CVD   R1,DSATPDEC             CONVERT TO DECIMAL
         MVC   DSATDEC,=X'4020202020202120'  MOVE MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   11(5,R2),DSATDEC+3      MOVE INTO MESSAGE        GP09143
*--------GET LRECL
         SR    R1,R1                   CLEAR FOR INSERT         GP09127
         ICM   R1,3,DS1LRECL           LOAD LRECL               GP09127
         CLM   R1,3,=X'8000'           LARGE SPANNED ?          GP09127
         BNE   DSATLR#                 NO                       GP09127
         TM    DS1RECFM,X'80'          F OR U RATHER THAN V?    GP09127
         BNZ   DSATLR#                 YES; NOT SPANNED         GP09127
         TM    DS1RECFM,X'48'          V(B)S ?                  GP09127
         BNO   DSATLR#                 NO; NOT SPANNED          GP09127
         MVI   6(R2),C'X'              INDICATE IT              GP09143
         BR    R14                     RETURN                   GP08269
DSATLR#  CVD   R1,DSATPDEC             CONVERT TO DECIMAL
         MVC   DSATDEC,=X'4020202020202120'  MOVE MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   5(5,R2),DSATDEC+3       MOVE INTO MESSAGE        GP09143
         BR    R14                     RETURN
EXRECFTM TM    WORK,*-*            TEST BIT ON                  GP09144
EXRECFXI XI    WORK,*-*            TURN BIT OFF                 GP09144
***********************************************************************
*                                                                     *
*        CREATION DATE                                                *
*                                                                     *
***********************************************************************
$CRDATE  L     R1,DS1CREDT-1           LOAD CREATION DATE
         L     R2,CRDATFLD             LOAD OUTPUT AREA ADDRESS
         BAL   R5,DATECONV             CONVERT IT
         BR    R14                     RETURN
***********************************************************************
*                                                                     *
*        EXPIRATION DATE                                              *
*                                                                     *
***********************************************************************
$EXDATE  L     R1,DS1EXPDT             LOAD EXPIRATION DATE
         SRL   R1,8                    SHIFT RIGHT 1 BYTE       GP09143
         L     R2,EXDATFLD             LOAD OUTPUT AREA ADDRESS
         BAL   R5,DATECONV             CONVERT IT
         BR    R14                     RETURN
***********************************************************************
*                                                                     *
*        LAST DATE REFERENCED - MVS SU 60 OR EQUIVALENT REQUIRED      *
*                                                                     *
***********************************************************************
$LASTREF MVC   DSATDEC(4),DS1REFD-1    MOVE LAST DATE REF TO FULLWORD
         L     R1,DSATDEC              LOAD DATE LAST REFERENCED
         L     R2,LREFFLD              LOAD OUTPUT AREA ADDRESS
         BAL   R5,DATECONV             CONVERT IT
         TM    DS1DSIND,X'02'          SEE IF UPDATE INDICATOR ON
         BZ    REFRTRN
         MVI   8(R2),C'*'              INDICATE UPDATE BIT ON
REFRTRN  BR    R14                     RETURN
***********************************************************************
*                                                                     *
*        DATE CONVERSION ROUTINE                                      *
*                                                                     *
*             THIS SECTION WAS ADAPTED FROM AN INSTALLATION           *
*             DATE CONVERSION ROUTINE TO AVOID HAVING MANY            *
*             DIFFERENT DATE CONVERSION ROUTINES.  IT IS              *
*             NECESSARY TO CONVERT THE DATE TO PACKED DECIMAL         *
*             FORM (AS IS THE DATE RETURNED BY TIME) TO               *
*             CONFORM TO THIS ROUTINE.                                *
*                                                                     *
***********************************************************************
DATECONV N     R1,=X'00FFFFFF'         ZERO HIGH BYTE           GP09144
         BZR   R5                      ZERO DATE - LEAVE BLANK  GP09144
         ST    R1,DSATPDEC             SAVE FOR HEX DISPLAY     GP09144
         LR    R15,R1                  COPY                     GP09144
         SRL   R15,16                  ISOLATE YEAR             GP09144
         N     R1,=X'0000FFFF'         ISOLATE JULIAN DAYS      GP09144
         BZ    DATEBAD                 INVALID DAY = 0          GP09144
         CH    R1,=H'366'              NOT TOO HIGH ?           GP09144
         BH    DATEBAD                 TOO BAD                  GP09144
         EX    R15,EXISLEAP            IS THIS A LEAP YEAR?     GP09144
         BZ    DATENADJ                YES; DON'T ADJUST        GP09144
         CH    R1,=H'59'               PAST POSSIBLE LEAP DAY?  GP09144
         BNH   DATENADJ                NO; NO NON-LEAP ADJUST   GP09144
         LA    R1,1(,R1)               FINAGLE A BIT            GP09144
DATENADJ LA    R6,DATETABL             POINT TO DECEMBER        GP09144
         LA    R3,12                   FOR DECEMBER             GP09144
DATENLUP CH    R1,0(,R6)               LARGER THAN ENTRY?       GP09144
         BH    DATEFND                 YES                      GP09144
         LA    R6,2(,R6)               NEXT TABLE ENTRY         GP09144
         BCT   R3,DATENLUP             TRY AGAIN                GP09144
         B     DATEBAD                                          GP09144
DATEFND  SH    R1,0(,R6)               DAYS IN MONTH            GP09144
         AH    R15,=H'1900'            MAKE CENTURY (4 LATER)   GP09144
         MH    R15,=H'100'             SCALE                    GP09144
         AR    R3,R15                  YYMM                     GP09144
         MH    R3,=H'100'              CHEAT                    GP09144
         AR    R1,R3                   YYMMDD                   GP09144
         CVD   R1,DSATDEC              MAKE PACKED              GP09144
         OI    DSATDEC+7,X'0F'         POSITIVE POSITIVE        GP09144
         UNPK  DATEWORK(8),DSATDEC+4(4)  MAKE PRINTABLE         GP09144
         MVC   DATEWORK+8(2),=C'-/'    MAKE DATE SEPARATORS     GP09144
         LA    R1,DATEISO              SET FOR ISO DATE         GP09144
         CLC   DATEFORM,=H'2'          IS IT ISO YY-MM-DD?      GP09144
         BL    DATEEDIT                YES                      GP09144
         LA    R1,DATEUSA              IS IT USA MM/DD/YY?      GP09144
         BE    DATEEDIT                YES                      GP09144
         LA    R1,DATEOTH              ELSE USE DD/MM/YY        GP09144
DATEEDIT MVC   0(8,R2),0(R1)           MOVE DATE PATTERN        GP09144
         TR    0(8,R2),DATEWORK        FORMAT                   GP09144
         BR    R5                      RETURN TO CALLER         GP09144
         SPACE 1
EXISLEAP TM    =X'03',*-*              TEST (BINARY) FOR LEAP   GP09144
DATEISO  DC    AL1(2,3,8,4,5,8,6,7)    GAP FOR CENTURY ?        GP09144
DATEUSA  DC    AL1(4,5,9,6,7,9,2,3)    MM/DD/YY                 GP09144
DATEOTH  DC    AL1(6,7,9,4,5,9,2,3)    DD/MM/YY                 GP09144
DATETABL DC    H'335,305,274,244,213,182,152,121,91,60,31,0'    GP09144
         SPACE 1
*--------DATE INVALID, DISPLAY IT IN HEX
DATEBAD  UNPK  DSATDEC(7),DSATPDEC+1(4)  UNPACK INVALID DATE FIELD
         TR    DSATDEC(6),TRTABLE      TRANSLATE TO EBCDIC
         MVC   1(6,R2),DSATDEC         MOVE IN HEX DATE VALUE   GP09144
         BR    R5                      RETURN
         SPACE 1
***********************************************************************
*                                                                     *
*        CCHHR PROCESSING                                             *
*                                                                     *
***********************************************************************
$CCHHR   UNPK  DSATDEC(11),DSATFMT1+96(6)  UNPACK CCHHR PLUS ONE BYTE
         TR    DSATDEC(10),TRTABLE     TRANSLATE TO CHARACTER
         L     R2,CCHHRFLD             LOAD OUTPUT AREA ADDRESS
         MVC   0(10,R2),DSATDEC        COPY CCHHR TO OUTPUT LINE
         BR    R14                     RETURN
         SPACE 1
***********************************************************************
*                                                                     *
*        ERRORS                                                       *
*                                                                     *
***********************************************************************
*--------ERROR IN LOCATE MACRO
LOCERROR L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS
         CL    R15,=A((LOCMSGND-LOCMSGS)/32*4)  KNOWN ERROR?    GP09143
         BH    LOCERRBD                                         GP09143
         SLA   R15,3                   MULTIPLY RETURN CODE BY 8
         LA    R15,LOCMSGS-32(R15)     LOAD MESSAGE ADDRESS
         MVC   0(32,R1),0(R15)         COPY MESSAGE TO OUTPUT LINE
         B     LOCERRMG                GO TO COMMON MESSAGE     GP09143
LOCERRBD MVC   0(32,R1),LOCMSGND       ISSUE UNSPECIFIED MSG    GP09143
         ST    R15,WORK                SAVE RETURN              GP09143
         UNPK  DSATDEC(9),WORK(5)      UNPACK                   GP09143
         TR    DSATDEC,TRTABLE         MAKE PRINTABLE           GP09143
         MVC   18(8,R1),DSATDEC        APPEND TO MESSAGE        GP09143
LOCERRMG OI    FLAGS,$NOTPOPS          INDICATE ERROR
         B     FORMLPUT                PRINT IT AND TERM DS     GP09143
         SPACE 1
*--------ERROR IN OBTAIN MACRO
DSNERRF1 DS    0H            OBTAIN DSCB1 FAILED                GP09143
DSNERR   CH    R15,=H'8'               TEST RETURN CODE
         BH    DSNERR1
         BE    TESTVALL
         CLC   DAONLY,=H'2'            SEE IF MESSAGE TO BE SUPRESSED
         BE    FORMRSET
         OI    FLAGS,COUNT             COUNT THIS DATA SET
         B     DSNERR1
TESTVALL TM    FLAGS2,$VSAMLOC         SUPER-LOCATE BEING USED? GP09143
         BZ    DSNERR1                 NO; NO INFO              GP09143
         L     R7,CURRBLK              CURRENT ENTRY            GP09143
         CLI   0(R7),C'A'              NON-VSAM ENTRY ?         GP09127
         BE    DSNERR1                 YES; REALLY NOT FOUND    GP09127
         TM    FLAGS2,$F2VANY+$F2VMASK  USER SPECIFIED VOLUME?  GP09143
         BNZ   FORMRSET                YES - NO ERROR MSG       GP09143
         L     R2,ERRFLD               GET ERROR FIELD          GP09127
         LM    R15,R1,=A(CATCOMP,CATCOMP2-CATCOMP,CATCOMPN)     GP09127
DSNELOOP CLC   0(1,R7),0(R15)          MATCH ?                  GP09127
         BE    DSNECATF                YES; DISPLAY MESSAGE     GP09127
         BXLE  R15,R0,DSNELOOP         TRY AGAIN                GP09127
         MVC   CATCOMP2-CATCOMP(1,R2),0(R7)  SHOW ENTRY TYPE    GP09127
DSNECATF OI    FLAGS2,$F2ENTY          SHOW SOMETHING FOUND     GP12018
         MVC   0(CATCOMP2-CATCOMP-1,R2),1(R15)   IDENTIFY       GP09127
         MVC   VOLCNT,=H'1'            DON'T DO MORE SERIALS    GP09143
         B     FORMLPUT                AND PRINT                GP09127
         SPACE 1                                                GP09127
DSNERR1  OI    FLAGS,$NOTPOPS          INDICATE ERROR
         SLA   R15,3                   MULTIPLY RETURN CODE BY 8
         LA    R15,DSNERRS-32(R15)     LOAD PROPER MESSAGE ADDRESS
         L     R1,ERRFLD               LOAD ERROR FIELD ADDRESS
         MVC   0(32,R1),0(R15)         COPY MESSAGE TO OUTPUT LINE
         B     FORMLPUT                PRINT IT
         POP   USING                                            GP09143
***********************************************************************
*                                                                     *
*        CONSTANT DATA                                                *
*                                                                     *
***********************************************************************
         LTORG
***********************************************************************
*        DEVICE NAME TABLE                                            *
***********************************************************************
DEVNAME  DC    CL6' '                  00 (00) - UNASSIGNED
         DC    CL6'2311'               01 (01) - 2311 DISK
         DC    CL6'2301'               02 (02) - 2301 DRUM
         DC    CL6'2303'               03 (03) - 2303 DRUM
*OLD*    DC    CL6'2302'               04 (04) - 2302 DISK FILE
         DC    CL6'9345'               04 (04) - 9345           GP08269
         DC    CL6'2312' UNSUPPORTED   05 (05) - 2321 DATA CELL
         DC    CL6'2305-1'             06 (06) - 2305-1
         DC    CL6'2305-2'             07 (07) - 2305-2
         DC    CL6'2314'               08 (08) - 2314 DISK
         DC    CL6'3330'               09 (09) - 3330 DISK
         DC    CL6'3340'               10 (0A) - 3340           GP08269
         DC    CL6'3350'               11 (0B) - 3350
         DC    CL6'3375'               12 (0C) - 3375           GP08269
         DC    CL6'3330-1'             13 (0D) - 3330-11 DISK
         DC    CL6'3380'               14 (0E) - 3380           GP08269
         DC    CL6'3390'               15 (0F) - 3390           GP08269
         SPACE 1
***********************************************************************
*        DATA SET ORGANIZATION TABLE                                  *
*          RE-ORDERED BY (ESTIMATED) FREQUENCY                  GP09143
***********************************************************************
DSORGTBL DC    X'0200',C'PO'           PARTITIONED ORGANIZATION
         DC    X'4000',C'PS'           PHYSICAL SEQUENTIAL
         DC    X'0008',C'AM'           VSAM
         DC    X'2000',C'DA'           DIRECT ACCESS
         DC    X'0080',C'GS'           GRAPHICS ?               GP09144
         DC    X'0040',C'TX'           TCAM LINE GROUP          GP09144
         DC    X'0020',C'TQ'           TCAM MSG QUEUE           GP09144
         DC    X'0004',C'TR'           TCAM ?                   GP09144
         DC    X'1000',C'CX'           BTAM/QTAM LINE GROUP     GP09144
DSORGEND DC    X'8000',C'IS'           INDEXED SEQUENTIAL
         DC    X'0000',C'**'           NO MATCH                 GP09144
         SPACE 1
***********************************************************************
*    RECORD FORMAT TABLE (NOTE DUAL DEFINITION OF X'20' BIT)          *
***********************************************************************
TABREC   DC    X'20',C'D'          RECFM=D
TABRECU  DC    X'C0',C'U'          RECFM=U
         DC    X'80',C'F'          RECFM=F
         DC    X'40',C'V'          RECFM=V
         DC    X'20',C'T'          RECFM=.T
         DC    X'10',C'B'          RECFM=.B
         DC    X'08',C'S'          RECFM=.S
         DC    X'04',C'A'          RECFM=..A
TABRECN  DC    X'02',C'M'          RECFM=..M
         TITLE 'D S A T  ***  GET PDS DIRECTORY STATISTICS'     GP09143
***********************************************************************
*                                                                     *
*        PDS DIRECTORY PROCESSING SUBROUTINE                          *
*                                                                     *
*        CALLED FROM DSAT TO DYNAMICALLY ALLOCATE A PDS, READ THE     *
*        DIRECTORY AND COUNT DIRECTORY BLOCKS AND ENTRIES.            *
*                                                                     *
*        THIS SUBROUTINE IS ONLY CALLED WHEN THE PDS OPTION IS        *
*        REQUESTED AND A PDS IS ENCOUNTERED.                          *
*                                                                     *
*        LINKAGE CONVENTIONS - THIS SUBROUTINE DEPENDS ON THE         *
*            PREVIOUS SAVE AREA FOR ADDRESSABILITY TO THE WORK        *
*            AREA.  SINCE THE ENTIRE WORK AREA IS AVAILABLE, NO       *
*            PARAMETERS ARE PASSED.                                   *
*                                                                     *
*            THE VALUES IN PDSTOTLS ARE CLEARED BY THE DSAT           *
*            MAINLINE CODE AND ARE RELIED UPON TO CONTAIN ZEROS.      *
*                                                                     *
*        IF AN ERROR IS DETECTED, THE PDS DATA FIELD IS USED FOR      *
*        AN ERROR MESSAGE.                                            *
*            RC=     RETURN CODE FROM DAIR (REGISTER 15)              *
*            DARC=   DYNAMIC ALLOCATION RETURN CODE (DAXXDARC FIELD)  *
*            CTRC=   CATALOG RETURN CODE (DAXXCTRC FIELD)             *
*                                                                     *
*            SEE GC28-6764 GUIDE TO WRITING A TMP OR CP   (MVT, SVS)  *
*             OR GC28-0627 OS/VS2 SPL: JOB MANAGMENT      (MVS)       *
*             FOR DYNAMIC ALLOCATION RETURN CODE DESCRIPTIONS.        *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP09143
         DROP  R11,R12                                          GP09143
DSATPDS  CSECT
         B     BEGPDS-DSATPDS(,R15)     BRANCH AROUND ID        GP08269
         DC    AL1(9),CL9'DSATPDS'      IDENTIFIER              GP08269
BEGPDS   STM   R14,R12,12(R13)          SAVE REGISTERS          GP08269
         LR    R12,R15                  LOAD BASE ADDRESS
         USING DSATPDS,R12              DEFINE BASE REGISTERS
         LA    R15,15                   LOAD PGM MASK SETTING
         SLA   R15,24                   SHIFT TO BITS 4-7
         SPM   R15                      SET PGM MASK AND COND
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR
         LA    R13,SAVE2                LOAD NEW SAVEAREA ADDR
         ST    R15,4(,R13)              CHAIN SAVE AREAS
         ST    R13,8(,R15)
***********************************************************************
*                                                                     *
*              SET UP TSO CONTROL BLOCKS                              *
*                                                                     *
***********************************************************************
         L     R11,4(,R13)             LOAD WORK AREA ADDRESS
         USING DSATSAVE,R11            DSECT ADDRESSABILITY
         DROP  R13                     I DON'T WANT IT TO USE 13
         LA    R10,DSATDAPL            LOAD DAPL ADDRESS
         USING DAPL,R10                DAPL ADDRESSABILITY
*--------SET UP DAPB'S
         LA    R9,DA18DAPB             LOAD FREE DAPB ADDRESS
         USING DAPB18,R9               DEFINE BASE REGISTER
         XC    DAPB18(DA18LEN),DAPB18  ZERO OUT CONTROL BLOCK
         MVC   DA18CD,=X'0018'         MOVE IN BLOCK CODE
         XC    DA18PDSN,DA18PDSN       ZERO DSNAME ADDRESS POINTER
         MVC   DA18DDN,=CL8'DSATDDN'   MOVE IN DDNAME
         MVC   DA18MNM,=CL8' '         BLANK OUT MEMBER NAME
         MVC   DA18SCLS,=CL2' '        BLANK OUT SYSOUT CLASS
         MVI   DA18DPS2,DA18KEEP       DISP=KEEP
         MVI   DA18CTL,DA18PERM
         MVC   DA18JBNM,=CL8' '        BLANK OUT MEMBER NAME
         LA    R9,DA08DAPB             LOAD ALLOCATE DAPB ADDRESS
         USING DAPB08,R9               DEFINE BASE REGISTER
         XC    DAPB08(DA08LEN),DAPB08  ZERO OUT CONTROL BLOCK
         MVC   DA08CD,=X'0008'         MOVE IN BLOCK CODE
         LA    R1,DSNLEN               LOAD DSNAME FIELD ADDRESS
         ST    R1,DA08PDSN             SAVE IT
         MVC   DA08DDN,=CL8'DSATDDN'   MOVE IN DDNAME
         MVC   DA08UNIT,=CL8' '        BLANK OUT UNIT NAME
         MVC   DA08SER,=CL8' '         BLANK OUT SERIAL FIELD
         MVC   DA08SER(6),DSATSER      COPY IN VOLUME SERIAL
         MVC   DA08MNM,=CL8' '         BLANK OUT MEMBER NAME
         MVC   DA08PSWD,=CL8' '        BLANK OUT PASSWORD
         MVI   DA08DSP1,DA08SHR        DISP=(SHR,KEEP,KEEP)
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVC   DA08ALN,=CL8' '         BLANK OUT ATTRIBUTE LIST NAME
         DROP  R9
*--------GET DSNAME LENGTH
         LA    R1,DSNAME-1             LOAD START ADDR - 1
         LA    R2,44                   LOAD MAXIMUM DSNANME LEN
PDSEND   LA    R15,0(R2,R1)            LOAD ADDR OF CHAR
         CLI   0(R15),C' '             TEST FOR BLANK
         BNE   PDSSAVE
         BCT   R2,PDSEND               DECREMENT COUNTER
PDSSAVE  STH   R2,DSNLEN               SAVE LENGTH
*--------SET UP OPEN LIST FORM
         MVC   OPENLIST(OPENLEN),MODLOPEN
***********************************************************************
*                                                                     *
*              ALLOCATE THE DATA SET                                  *
*                                                                     *
***********************************************************************
*--------SET UP ALLOCATE DAPB
SETUPDDN LA    R9,DA08DAPB             LOAD ALLOCATE DAPB ADDRESS
         USING DAPB08,R9               ADDRESSABILITY FOR DSORG TEST
         ST    R9,DAPLDAPB             STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                 LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR              LINK TO DAIR
         LTR   R15,R15                 TEST RETURN CODE
         BZ    TESTORG
         C     R15,=F'20'              TEST FOR FILE IN USE
         BNE   ERRDAIR
         LA    R1,DA18DAPB             LOAD FREE DAPB ADDRESS
         ST    R1,DAPLDAPB             STORE IN DAPL
         LA    R1,DAPL                 LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR              FREE THE FILE
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   ERRDAIR
         LA    R1,DA08DAPB             LOAD ALLOCATE DAPB ADDRESS
         ST    R1,DAPLDAPB             STORE IN DAPL
         LA    R1,DAPL                 LOAD DAPL ADDRESS
         LINK  EP=IKJDAIR              FREE THE FILE
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   ERRDAIR
***********************************************************************
*                                                                     *
*              BE SURE DSORG PO                                       *
*                                                                     *
***********************************************************************
TESTORG  TM    DA08DSO,X'02'           TEST FOR PARTITIONED
         BZ    ERRDSORG
*--------INITIALIZE DCB
         MVC   DSATDCB(DCBLEN),PSDCB   COPY DCB
***********************************************************************
*                                                                     *
*              OPEN DATA SET                                          *
*                                                                     *
***********************************************************************
*--------OPEN THE DATA SET
         LA    R1,OPENLIST             LOAD ADDRESS OF OPEN LIST FORM
         LA    R2,DSATDCB              LOAD DCB ADDRESS
         OPEN  ((R2)),MF=(E,(R1))      OPEN THE DATA SET
         TM    DSATDCB+48,X'10'        SEE IF IT OPENED
         BZ    ERROPEN
***********************************************************************
*                                                                     *
*        READ DIRECTORY AND COUNT BLOCKS AND ENTRIES                  *
*                                                                     *
***********************************************************************
         LM    R2,R5,PDSTOTLS          ZERO TOTALS
NEXTBLK  READ  DIRDECB,SF,DSATDCB,PDSREC,MF=E  READ DIR BLOCK
         CHECK DIRDECB                 WAIT FOR COMPLETION OF READ
         LA    R6,PDSREC               LOAD RECORD ADDRESS
         LA    R2,1(,R2)               COUNT BLOCK
         LH    R0,8(,R6)               LOAD COUNT
         SH    R0,=H'2'                LESS 2 FOR COUNT FIELD
         LA    R6,10(,R6)              BUMP PAST KEY AND COUNT
NEXTENT  LTR   R0,R0                   SEE IF ANY LEFT IN BLOCK
         BNP   NEXTBLK
         CLC   ENDMEMB,0(R6)           TEST FOR END OF ENTRIES
         BNE   PROCENTR
         LR    R3,R2                   SET USED = TOTAL
         B     NEXTBLK
PROCENTR LA    R4,1(,R4)               COUNT ENTRY
         TM    11(R6),X'80'            TEST FOR ALIAS
         BZ    DIRLEN
         LA    R5,1(,R5)               COUNT ALIAS
DIRLEN   SR    R1,R1
         NI    11(R6),X'1F'            ZERO INDICATOR BITS
         IC    R1,11(,R6)              LOAD LENGTH
         SLL   R1,1                    DOUBLE TO GET LENGTH IN BYTES
         LA    R1,12(,R1)              ADD FIXED FIELD LENGTH
         AR    R6,R1                   INCREMENT POINTER
         SR    R0,R1                   DECREMENT BYTE COUNT
         B     NEXTENT
*--------END OF DATA
DIREOD   STM   R2,R5,PDSTOTLS          SAVE TOTALS
         L     R1,PDSFLD               LOAD OUTPUT AREA ADDRESS
         CVD   R2,DSATPDEC             CONVERT BLOCKS USED
         MVC   DSATDEC,=X'4020202020202120'  MOVE IN MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   00(4,R1),DSATDEC+4      MOVE INTO MESSAGE
         CVD   R3,DSATPDEC             CONVERT BLOCKS ALLOCATED
         MVC   DSATDEC,=X'4020202020202120'  MOVE IN MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   05(4,R1),DSATDEC+4      MOVE INTO MESSAGE
         CVD   R4,DSATPDEC             CONVERT DIRECTORY ENTRIES
         MVC   DSATDEC,=X'4020202020202120'  MOVE IN MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   10(4,R1),DSATDEC+4      MOVE INTO MESSAGE
         CVD   R5,DSATPDEC             CONVERT ALIASES
         MVC   DSATDEC,=X'4020202020202120'  MOVE IN MASK
         ED    DSATDEC,DSATPDEC+4      EDIT
         MVC   15(4,R1),DSATDEC+4      MOVE INTO MESSAGE
*--------CLOSE THE DATA SET
CLOSE    LA    R1,OPENLIST             LOAD ADDRESS OF OPEN LIST FORM
         LA    R2,DSATDCB              LOAD DCB ADDRESS
*        CLOSE ((R2)),MF=(E,(R1))      THIS RELEASES FREE SPACE
         IC    14,0(,R1)                         SAVE OPTION BYTE
         ST    R2,0(,R1)                         STORE DCB ADDR IN LIST
         STC   14,0(,R1)                         RESTORE OPTION BYTE
         SVC   20                                ISSUE CLOSE SVC
*--------FREE THE DATA SET
FREE     LA    R1,DA18DAPB             LOAD FREE DAPB ADDRESS
         ST    R1,DAPLDAPB             STORE DAPB ADDRESS IN DAPL
         LA    R1,DAPL                 LOAD DAPL ADDRESS
*        LINK  EP=IKJDAIR              LINK TO DAIR
         CNOP  0,4
         BAL   15,*+20            BRANCH AROUND CONSTANTS
         DC    A(*+8)             ADDR. OF PARM. LIST
         DC    A(0)                DCB ADDRESS PARAMETER
         DC    CL8'IKJDAIR'        EP PARAMETER
         SVC   6                   ISSUE LINK SVC
         B     PDSRTRN
*--------ERROR IN DYNAMIC ALLOCATION
ERRDAIR  L     R2,PDSFLD               ADDRESS OF ERROR MESSAGE FIELD
         L     R1,DAPLDAPB             LOAD DAPB ADDRESS
         USING DAPB08,R1               ADDRESSABILITY
         C     R15,=F'12'              TEST FOR RETURN CODE 12
         BNE   CTLGERR
         CLC   DA08DARC,=X'0210'       TEST FOR DATA SET IN USE
         BNE   DYNALCER
         MVC   0(16,R2),=CL16' DATA SET IN USE'
         B     PDSRTRN
DYNALCER UNPK  DSATDEC(5),DA08DARC(3)  TRANSLATE TO EBCDIC
         TR    DSATDEC(4),TRTABLE2
         MVC   0(14,R2),=CL14'RC=000C, DARC='
         MVC   14(4,R2),DSATDEC        MOVE IN RETURN CODE
         B     PDSRTRN
CTLGERR  C     R15,=F'8'               TEST FOR CATALOG ERROR
         BNE   OTHERERR
         UNPK  DSATDEC(5),DA08CTRC(3)  TRANSLATE TO EBCDIC
         TR    DSATDEC(4),TRTABLE2
         MVC   0(14,R2),=CL14'RC=0008, CTRC='
         MVC   14(4,R2),DSATDEC        MOVE IN ERROR CODE
         B     PDSRTRN
OTHERERR ST    R15,DSATPDEC            STORE RETURN CODE
         UNPK  DSATDEC(5),DSATPDEC+2(3)
         MVC   0(14,R2),=CL14'DAIR ERROR RC='
         MVC   14(4,R2),DSATDEC
         B     PDSRTRN
*--------OPEN ERROR
ERROPEN  L     R2,PDSFLD               LOAD ERROR FIELD ADDRESS
         MVC   0(18,R2),=CL18'UNABLE TO OPEN DIR'
         B     PDSRTRN
*--------DATA SET NOT PARTITIONED - THIS IS A PROGRAM LOGIC ERROR
ERRDSORG L     R2,PDSFLD               LOAD ERROR FIELD ADDRESS
         MVC   0(18,R2),=CL18'DATA SET NOT A PDS'
         B     PDSRTRN
***********************************************************************
*                                                                     *
*              END OF ROUTINE                                         *
*                                                                     *
***********************************************************************
PDSRTRN  L     R13,4(,R13)              RESTORE OLD SAVEAREA
         LA    R15,0                    SET RETURN CODE
         L     R14,12(,R13)             RESTORE RETURN ADDRESS
         LM    R0,R12,20(R13)           RESTORE REGS 0 - 12
         MVI   12(R13),X'FF'            SET RETURNED FLAG
         SPM   R14                      RESTORE PROGRAM MASK
         BR    R14                      RETURN
***********************************************************************
*                                                                     *
*              CONSTANTS                                              *
*                                                                     *
***********************************************************************
ENDMEMB  DC    XL8'FFFFFFFFFFFFFFFF'    LAST DIRECTORY ENTRY
PSDCB    DCB   DDNAME=DSATDDN,                                         +
               DSORG=PS,                                               +
               KEYLEN=8,                                               +
               RECFM=F,                                                +
               BLKSIZE=256,                                            +
               EODAD=DIREOD,                                           +
               MACRF=R
DCBLEN   EQU   *-PSDCB
MODLOPEN OPEN  (,),MF=L
OPENLEN  EQU   *-MODLOPEN
TRTABLE2 EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
***********************************************************************
*                                                                     *
*              LITERAL POOL                                           *
*                                                                     *
***********************************************************************
         LTORG
         TITLE 'D S A T  ***  DATA DEFINITIONS'                 GP09143
***********************************************************************
*                                                                     *
*   STATIC DATA, PARSE CONTROL BLOCK, AND COMMON SUBROUTINES          *
*                                                                     *
***********************************************************************
         POP   USING                                            GP09143
DSATDATA CSECT ,                                                GP09143
         DROP  R11,R12                                          GP09143
         USING DSATDATA,R10            USE FIXED ADDRESS        GP09143
***********************************************************************
*                                                                     *
*        DISPLAY LINE                                                 *
*                                                                     *
***********************************************************************
PUTL     CLC   PRINT,=H'2'             TEST FOR NOPRINT
         BE    PUTLHCPY
PUTL2    PUTLINE OUTPUT=(DSATHEDR,,,DATA),MF=(E,DSATIOPL)
PUTLHCPY TM    FLAGS2,$HARDCPY         TEST FOR HARDCOPY
         BZ    PUTLBACK
         PUT   HARDCPY,OUTLINE         PRINT LINE
PUTLBACK BR    R2                      RETURN
         LTORG ,                                                GP09143
         SPACE 1                                                GP09127
CATCOMP  DC    C'C',CL16'VSAM Cluster'                          GP09127
CATCOMP2 DC    C'D',CL16'VSAM Data   '                          GP09127
         DC    C'I',CL16'VSAM Index  '                          GP09127
         DC    C'G',CL16'VSAM Alt. Index'                       GP09127
CATBASE  DC    C'B',CL16'GDG Base    '                          GP09127
         DC    C'P',CL16'Page Space  '                          GP09127
         DC    C'R',CL16'Path Entry  '                          GP09127
         DC    C'U',CL16'User Catalog'                          GP09127
         DC    C'M',CL16'Master Catalog'                        GP09127
         DC    C'X',CL16'Data Set Alias'                        GP09127
CATCOMPN DC    C'Y',CL16'Upgrade Set '                          GP09127
         DC    C' ',CL16'Catlg Entry '    N+1                   GP09127
NAME     CAMLST NAME,0,,0
NAMECVOL CAMLST NAME,0,0,0
TTRLOC   CAMLST BLOCK,0,0,0
SEARCH   CAMLST SEARCH,0,0,0
SEEK     CAMLST SEEK,0,0,0
DIGITMSK EQU   *-X'F0'
ZEROS    DC    X'00000000000000000000FFFFFFFFFFFF' MASK FOR DETECTING
*                                                  INVALID DEC DIGITS
TRTABLE  EQU   *-X'F0'
         DC    C'0123456789ABCDEF'     HEX TO EBCDIC TRANSLATE TABLE
MOVENAME MVC   0(0,R2),0(R4)
MODLPTPB PUTLINE MF=L
ENDPTPB  EQU   *
HARDDCB  DCB   DDNAME=X,               WILL BE REPLACED AT EXEC TIME   +
               MACRF=PM,                                               +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=120,                                              +
               BLKSIZE=3000
HARDLEN  EQU   *-HARDDCB
         SPACE 1
MODLINE  DC    H'124,0'
BLANKS   DC    CL120' '
GDGMSG   DC    CL40'GDG -- OPTIONS=NONE CURRENT=000 MAX=000'
MSGNULL  DC    C'NO ENTRIES IN CATALOG',C' FOR'                 GP12018
DSATERR1 DC    CL28'UNABLE TO INTERPRET COMMAND'
DSATERR2 DC    CL32'UNSUPPORTED DEVICE TYPE         '
DSATERR3 DC    CL32'TOO MANY NAMES - LIST INCOMPLETE'
DSATERR4 DC    CL44'TOO MUCH OUTPUT REQUESTED - LINE EXCEEDED'
DSATERR5 DC    CL32'VOLUME COUNT IS ZERO OR NEGATIVE'
DSATERR6 DC    CL48'UNABLE TO OPEN HARDCOPY DCB - HARDCOPY CANCELLED'
DSATERR7 DC    CL32'NO PREFIX, NO DSNAME, NO USERID '
EMPTYNDX DC    CL32'EMPTY INDEX STRUCTURE           '
EMPTYGDG DC    CL32'EMPTY GENERATION INDEX STRUCTURE'
NOVOL    DC    CL32'NOT ON ANY MOUNTED VOLUME       '
DSNERRS  DC    CL32'VOLUME NOT MOUNTED              '  ORC04
         DC    CL32'NOT ON VOLUME AS                '  ORC08    GP09143
         DC    CL32'VTOC I/O ERR OR BAD DSCB        '  ORC12    GP09127
         DC    CL32'INVALID WORK AREA POINTER       '  ORC16    GP09127
         DC    CL32'CCHHR NOT IN VTOC               '  ORC20    GP09127
LOCMSGS  DC    CL32'CATALOG VOLUME NOT MOUNTED      '  LRC04
         DC    CL32'NAME NOT FOUND                  '  LRC08
         DC    CL32'INDEX NAME SPECIFIED            '  LRC12
         DC    CL32'DATA SET AT LOWER LEVEL         '  LRC16
         DC    CL32'SYNTAX ERROR IN DSNAME          '  LRC20
         DC    CL32'PERMANENT CATALOG I/O ERROR     '  LRC24
         DC    CL32'TTR OUT OF SYSCTLG              '  LRC28
         DC    CL32'INVALID WORK AREA POINTER       '  LRC32
         DC    CL32'USER CATALOG NOT ALLOCATED      '  LRC36
         DC    CL32'WORK AREA TOO SMALL      CODE 40'  LRC40
         DC    CL32'WORK AREA TOO SMALL      CODE 44'  LRC44
         DC    CL32'INVALID OPERATION-RETURN CODE 48'  LRC48
         DC    CL32'I/O ERROR ON USER VOLUME-CODE 52'  LRC52
         DC    CL32'PASSWORD NOT CORRECT            '  LRC56
         DC    CL32'STEPCAT/JOBCAT NOT OPEN         '  LRC60
LOCMSGND DC    CL32'LOCATE error: R15=xxxxxxxx      '   other   GP09143
         SPACE 1
DSATPCL  IKJPARM  DSECT=DSATPDL
DSN      IKJPOSIT DSNAME,LIST
SERIAL   IKJKEYWD DEFAULT='SERIAL'
         IKJNAME  'SERIAL'
         IKJNAME  'NOSERIAL'
ALLOC    IKJKEYWD DEFAULT='ALLOC'
         IKJNAME  'ALLOC'
         IKJNAME  'NOALLOC'
SECOND   IKJKEYWD DEFAULT='NOSECONDARY'
         IKJNAME  'SECONDARY'
         IKJNAME  'NOSECONDARY'
DSORG    IKJKEYWD DEFAULT='DSORG'
         IKJNAME  'DSORG'
         IKJNAME  'NODSORG'
DCB      IKJKEYWD DEFAULT='DCB'
         IKJNAME  'DCB'
         IKJNAME  'NODCB'
CRDATE   IKJKEYWD DEFAULT='CRDATE'
         IKJNAME  'CRDATE'
         IKJNAME  'NOCRDATE'
EXDATE   IKJKEYWD DEFAULT='NOEXDATE'
         IKJNAME  'EXDATE'
         IKJNAME  'NOEXDATE'
LASTREF  IKJKEYWD DEFAULT='NOLASTREF'
         IKJNAME  'LASTREF'
         IKJNAME  'NOLASTREF'
TOTALS   IKJKEYWD DEFAULT='TOTALS'
         IKJNAME  'TOTALS'
         IKJNAME  'NOTOTALS'
PRINT    IKJKEYWD DEFAULT='PRINT'
         IKJNAME  'PRINT'
         IKJNAME  'NOPRINT'
HEADER   IKJKEYWD DEFAULT='HEADER'
         IKJNAME  'HEADER'
         IKJNAME  'NOHEADER'
DAONLY   IKJKEYWD DEFAULT='ALL'
         IKJNAME  'ALL'
         IKJNAME  'DAONLY'
GDGDATA  IKJKEYWD DEFAULT='NOGDGDATA'
         IKJNAME  'GDGDATA'
         IKJNAME  'NOGDGDATA'
SEQNO    IKJKEYWD DEFAULT='NOSEQNO'
         IKJNAME  'SEQNO'
         IKJNAME  'NOSEQNO'
DEVTYPE  IKJKEYWD DEFAULT='NODEVTYPE'
         IKJNAME  'DEVTYPE'
         IKJNAME  'NODEVTYPE'
DEVICE   IKJKEYWD DEFAULT='NODEVICE'
         IKJNAME  'DEVICE'
         IKJNAME  'NODEVICE'
CCHHR    IKJKEYWD DEFAULT='NOCCHHR'
         IKJNAME  'CCHHR'
         IKJNAME  'NOCCHHR'
PDS      IKJKEYWD DEFAULT='NOPDS'
         IKJNAME  'PDS'
         IKJNAME  'NOPDS'
GENERIC  IKJKEYWD
         IKJNAME  'GENERIC'
DSONLY   IKJKEYWD
         IKJNAME  'DSONLY'
DATEFORM IKJKEYWD DEFAULT='MDY'                                 GP09144
         IKJNAME  'YMD'                                         GP09144
         IKJNAME  'MDY'                                         GP09144
         IKJNAME  'DMY'                                         GP09144
VOLUME   IKJKEYWD
         IKJNAME  'VOLUME',SUBFLD=VOLSUB
HARDCOPY IKJKEYWD
         IKJNAME  'HARDCOPY',SUBFLD=DDNSUB
RCODE    IKJKEYWD
         IKJNAME  'RC',SUBFLD=RCSUB
VOLSUB   IKJSUBF
VOLSER   IKJIDENT 'VOLUME SERIAL',                                     +
               ASTERISK,                                               +
               MAXLNTH=6,                                              +
               FIRST=ALPHANUM,                                         +
               OTHER=ALPHANUM,                                         +
               PROMPT='VOLUME SERIAL'
DDNSUB   IKJSUBF
DDNAME   IKJIDENT 'DDNAME',                                            +
               MAXLNTH=8,                                              +
               FIRST=ALPHANUM,                                         +
               OTHER=ALPHANUM,                                         +
               PROMPT='DDNAME FOR HARDCOPY OUTPUT'
RCSUB    IKJSUBF
RC       IKJKEYWD
         IKJNAME 'TALLOC'
         IKJNAME 'TUSED'
         IKJNAME 'LALLOC'
         IKJNAME 'LUSED'
         IKJNAME 'TDIFF'
         IKJNAME 'LDIFF'
         IKJNAME 'NUM'
         IKJNAME 'PREVIOUS'
         IKJNAME 'DSORG'
         IKJNAME 'DIRALLOC'
         IKJNAME 'DIRUSED'
         IKJNAME 'ENTRIES'
         IKJNAME 'MEMBERS'
         IKJNAME 'ALIASES'
         IKJNAME 'TPCTUSE'             PERCENT USED - ALL DS    GP09143
         IKJNAME 'LPCTUSE'             PERCENT USED - LAST DS   GP09143
         IKJENDP
         TITLE 'DYNAMIC ALLOCATION CONTROL BLOCK DSECTS'
***********************************************************************
*                                                                     *
*              DYNAMIC ALLOCATION CONTROL BLOCK DSECTS                *
*                                                                     *
***********************************************************************
         IKJDAP18
DA18LEN  EQU   *-DAPB18                 DAPB LENGTH
         IKJDAP08
DA08LEN  EQU   *-DAPB08                 DAPB LENGTH
***********************************************************************
*                                                                     *
*                  WORK AREA DSECT                                    *
*                                                                     *
***********************************************************************
DSATDS   DSECT
DSATSAVE DS    18A                     SAVE AREA
SAVE2    DS    18F                     SAVE AREA
SAVEFORM DS    16F                     SAVE AREA FOR DS INFO    GP09143
MYCPPL   DS    A                       QUICK REFERENCE          GP09143
DSATDCB1 CAMLST SEARCH,0,0,0
DSATDCB3 CAMLST SEEK,0,0,0
LOCLIST  CAMLST NAME,0,,0              LOCATE BY NAME
LOCLIST2 CAMLST NAME,0,0,0             LOCATE BY NAME AND CVOL
LOCBYTTR CAMLST BLOCK,0,0,0            LOCATE BY TTR
GDSLIST  CAMLST NAME,OBTNAME,,WORKAREA                          GP09143
OBTNAME  DS    CL44                    NAME FOR FORMINFO OBTAIN GP09143
GDSBLEN  DS    F                       LENGTH OF BASE NAME      GP09143
GDSCURR  DS    A                       GENERATION ENTRY IN LIST GP09143
GDSCNTR  DS    F                       NO. OF SHOWCAT ENTRIES   GP09143
SHOWCATL SHOWCAT MF=L                                           GP09143
DSATPTPB PUTLINE MF=L                  LIST FORM OF PUTLINE
DSATIOPL DS    0A                      ALIGN TO FULLWORD
         ORG   *+IOPLLEN               LENGTH OF CONTROL BLOCK
DSATPPL  DS    0A                      ALIGN TO FULLWORD
         ORG   *+PPLLEN                LENGTH OF CONTROL BLOCK
DSATANS  DS    A                       ADDRESS OF PARSE ANSWER AREA
DSATECB  DS    F                       EVENT CONTROL BLOCK
DSATDAPL DS    0F                      FULLWORD ALIGNMENT
         ORG   *+DAPLLEN
DA18DAPB DS    0F                      FULLWORD ALIGNMENT
         ORG   *+DA18LEN
DA08DAPB DS    0F                      FULLWORD ALIGNMENT
         ORG   *+DA08LEN
CURRPDL  DS    A                       ADDRESS OF CURRENT PDS   GP09144
CURRBLK  DS    A                       ADDRESS OF CURRENT CAT BLOCK
ENDWORK  DS    A                       ADDRESS OF END OF VSAM WORK AREA
TOTALRUN DS    F                       TOTAL TRACKS ALLOCATED
         DS    F                       TOTAL TRACKS USED
TOTALDS  DS    F                       LAST DATA SET TRACKS ALLOCATED
         DS    F                       LAST DATA SET TRACKS USED
TOTAL#DS DS    F                       NUMBER OF DATA SETS DISPLAYED
PDSTOTLS DS    F                       NUMBER OF DIR BLOCKS ALLOCATED
         DS    F                       NUMBER OF DIR BLOCKS USED
         DS    F                       NUMBER OF DIRECTORY ENTRIES
         DS    F                       NUMBER OF ALIASES
VOLDSTRK DS    F                       TRACKS ALLOCATED FOR VOLUME
VOLCNT   DS    H                       VOLUME COUNT
TRKPRCYL DS    H                       TRACKS PER CYLINDER
SERFLD   DS    A                       ADDRESS OF SERIAL FIELD
DEVFLD   DS    A                       ADDRESS OF DEVTYPE FIELD
DEVFIELD DS    A                       ADDRESS OF DEVICE NAME FIELD
ALLOCFLD DS    A                       ADDRESS OF ALLOCATION FIELD
DSORGFLD DS    A                       ADDRESS OF DSORG FIELD
PDSFLD   DS    A                       ADDRESS OF PDS INFO FIELD
DCBFLD   DS    A                       ADDRESS OF DCB FIELD
CRDATFLD DS    A                       ADDRESS OF CREATION DATE FIELD
EXDATFLD DS    A                       ADDRESS OF EXPIRATION DATE FIELD
LREFFLD  DS    A                       ADDRESS OF DATE LAST REF FIELD
DSNFLD   DS    A                       ADDRESS OF DSNAME FIELD
ERRFLD   DS    A                       ADDRESS OF ERROR FIELD
CCHHRFLD DS    A                       ADDRESS OF CCHHR FIELD
SERPTR   DS    A                       SERIAL TABLE POINTER
LASTUCB  DS    A                       LAST UCB PROCESSED ADDRESS
FLAGS    DS    X                       INDICATORS
NOTEMPTY EQU   X'80'  1... ....          INDEX IS NOT EMPTY
GDG      EQU   X'40'  .1.. ....          GDG BEING PROCESSED (CVOL)
COUNT    EQU   X'20'  ..1. ....          COUNT THIS DATA SET
DSATGRP  EQU   X'10'  ...1 ....          GROUP PROCESSING IN PROGRESS
$MULTVOL EQU   X'08'  .... 1...          MULTI-VOLUME DATA SET
$NOTPOPS EQU   X'04'  .... .1..          DATA SET NOT PS OR PO
$DSPO    EQU   X'02'  .... ..1.          DATA SET IS PARTITIONED
$DSPS    EQU   X'01'  .... ...1          DATA SET IS SEQUENTIAL
RESET    EQU   $NOTPOPS+$DSPO+$DSPS+$MULTVOL   RESET MASK
FLAGS2   DS    X                       MORE INDICATORS
$VSAMLOC EQU   X'80'  1... ....          VSAM LOCATE IN PROGRESS
$INCMPLT EQU   X'40'  .1.. ....          TOO MANY DSNAMES
$FOUND   EQU   X'20'  ..1. ....          DATA SET FOUND
$HARDCPY EQU   X'10'  ...1 ....          HARDCOPY OPTION REQUESTED
$F2VMASK EQU   X'08'  .... 1...          USER VOLUME MASK       GP09143
$F2VANY  EQU   X'04'  .... .1..          USER HAD VOL(*)        GP09143
$F2ENTY  EQU   X'02'  .... ..1.          FOUND NON-DS ENTITY    GP12018
*                     .... ...X          NOT USED
DSATSER  DS    CL6                     SERIAL
CEREAL   DS    CL6                     USER SPECIFIED VOLUME    GP09143
INDEXLEN DS    X                       LENGTH OF INDEX NAME
INDEX    DS    CL44                    INDEX NAME
         DS    0F
DSATHEDR DS    H,H                     MESSAGE HEADER
OUTLINE  DS    CL120                   OUTPUT LINE
FULL     DC    0F'0',H'0'    HALF-TO-FULL CONVERSION AREA       GP09127
HALF     DS    H                       HALFWORD ALIGNED WORK AREA
DSATDEC  DS    D                       WORK AREA FOR DECIMAL CONVERSION
DSATPDEC DS    D                       WORK AREA FOR DECIMAL CONVERSION
WORK     DS    F                       WORK SPACE               GP09144
DATEWORK DS    CL10                    WORK AREA FOR DATE CONVERSION
         SPACE 1             NOTE OVERLAYS                      GP09127
DSNLEN   DS    H                       LENGTH OF DSNAME (PDS)
DSNAME   DS    CL44                    DSNAME
DSATFMT1 DS    148C                    FORMAT 1 DSCB (DS DESCRIPTION)
         ORG   DSNAME                  EXPLAIN FIELDS           GP09127
         IECSDSL1 1                      FOR FORMAT 1 DSCB      GP09127
DS1FLAG1 EQU   DS1NOBDB+1,1,C'X'  MORE FLAGS
DS1COMPR EQU   X'80'           COMPRESSABLE EXTENDED IF DS1STRP
DS1CPOIT EQU   X'40'           CHECKPOINTED D S
DS1SMSFG EQU   DS1FLAG1+17,1,C'X'  SMS FLAG
DS1SMSDS EQU   X'80'           SMS D S
DS1SMSUC EQU   X'40'           NO BCS ENTRY
DS1REBLK EQU   X'20'           MAY BE REBLOCKED
DS1CRSDB EQU   X'10'           BLKSZ BY DADSM
DS1PDSE  EQU   X'08'           PDS/E
DS1STRP  EQU   X'04'           EXTENDED FORMAT D S
DS1PDSEX EQU   X'02'           HFS D S
DS1DSAE  EQU   X'01'           EXTENDED ATTRIBUTES EXIST
DS1SCEXT EQU   DS1SMSFG+1,3,C'X'  SECONDARY SPACE EXTENSION
DS1SCXTF EQU   DS1SCEXT,1,C'X'  -"- FLAG
DS1SCAVB EQU   X'80'           SCXTV IS AVG BLOCK LEN
DS1SCMB  EQU   X'40'                 IS IN MEGBYTES
DS1SCKB  EQU   X'20'                 IS IN KILOBYTES
DS1SCUB  EQU   X'10'                 IS IN BYTES
DS1SCCP1 EQU   X'08'           SCXTV COMPACTED BY 256
DS1SCCP2 EQU   X'04'                 COMPACTED BY 65536
DS1SCXTV EQU   DS1SCXTF+1,2,C'X'  SEC SPACE EXTNSION VALUE
DS1ORGAM EQU   DS1ACBM         CONSISTENT NAMING - VSAM D S
DS1RECFF EQU   X'80'           RECFM F
DS1RECFV EQU   X'40'           RECFM V
DS1RECFU EQU   X'C0'           RECFM U
DS1RECFT EQU   X'20'           RECFM T   001X XXXX IS D
DS1RECFB EQU   X'10'           RECFM B
DS1RECFS EQU   X'08'           RECFM S
DS1RECFA EQU   X'04'           RECFM A
DS1RECMC EQU   X'02'           RECFM M
*   OPTCD DEFINITIONS   BDAM    W.EFA..R
*                       ISAM    WUMIY.LR
*             BPAM/BSAM/QSAM    WUCHBZTJ
DS1OPTIC EQU   X'80'  FOR DS1ORGAM - CATLG IN ICF CAT
DS1OPTBC EQU   X'40'           ICF CATALOG
DS1RACDF EQU   DS1IND40
DS1SECTY EQU   DS1IND10
DS1WRSEC EQU   DS1IND04
DS1SCAL1 EQU   DS1SCALO,1,C'X'    SEC. ALLOC FLAGS
DS1DSPAC EQU   X'C0'         SPACE REQUEST MASK
DS1CYL   EQU   X'C0'           CYLINDER BOUND
DS1TRK   EQU   X'80'           TRACK
DS1AVRND EQU   X'41'           AVG BLOCK + ROUND
DS1AVR   EQU   X'40'           AVG BLOCK LEN
DS1MSGP  EQU   X'20'
DS1EXT   EQU   X'10'           SEC. EXTENSION EXISTS
DS1CONTG EQU   X'08'           REQ. CONTIGUOUS
DS1MXIG  EQU   X'04'           MAX
DS1ALX   EQU   X'02'           ALX
DS1DSABS EQU   X'00'           ABSOLUTE TRACK
DS1SCAL3 EQU   DS1SCAL1+1,3,C'X'  SEC ALLOC QUANTITY
         SPACE 1             NOTE OVERLAYS                      GP09127
DSATFMT3 DS    0D,148C                 FORMAT 3 DSCB (ADD EXTENTS)
         ORG   DSATFMT3                                         GP09127
         IECSDSL1 3                    DEFINE FORMAT 3 DSCB     GP09127
         SPACE 1
CATBLOCK DS    0D,265C                 CATALOG BLOCK
CVOL     DS    CL6                     CONTROL VOLUME SERIAL
TTR      DS    XL3                     TTR OF CATALOG BLOCK
FIRSTBLK DS    A                       ADDRESS OF FIRST CATALOG BLOCK
ENDNAME  DS    A                       ADDRESS OF END OF INDEX NAME
         SPACE 1
CTGPL    DS    0D
*
CTGOPTN1 DS    X              FIRST OPTION BYTE:
CTGBYPSS EQU   X'80' 1... ....  BYPASS CATALOG MANAGMENT SECURITY
CTGMAST  EQU   X'40' .1.. ....  CHECK THE MASTER PASSWORD
CTGCI    EQU   X'20' ..1. ....  CHECK CONTROL INTERVAL PASSWORD
CTGUPD   EQU   X'10' ...1 ....  CHECK UPDATE PASSWORD
CTGREAD  EQU   X'08' .... 1...  CHECK READ PASSWORD
CTGNAME  EQU   X'04' .... .1..  CTGENT CONTAINS DSNAME OR SERIAL ADDR
*                    .... .0..  CTGENT CONTAINS CONTROL INTERVAL NUMBER
CTGCNAME EQU   X'02' .... ..1.  CTGCAT CONTAINS CATALOG DSNAME ADDRESS
*                    .... ..0.  CTGCAT CONTAINS CATALOG ACB ADDRESS
CTGGENLD EQU   X'01' .... ...1  GENERIC LOCATE REQUEST
*
CTGOPTN2 DS    X              SECOND OPTION BYTE:
CTGEXT   EQU   X'80' 1... ....  EXTEND OPTION (WITH UPDATE)
CTGNSVS  EQU   X'80'            NO SCRATCH VSAM SPACE (WITH DELETE)
CTGERASE EQU   X'40' .1.. ....  ERASE OPTION (WITH DELETE)
CTGSMF   EQU   X'40'            WRITE SMF RECORD OPTION (WITH LSPACE)
CTGGALL  EQU   X'40'            SEARCH ALL CATALOGS (WITH LISTCAT)
CTGPURG  EQU   X'20' ..1. ....  PURGE OPTION (WITH DELETE)
CTGVMNT  EQU   X'20'            CALLER IS VSAM OPEN/CLOSE/EOV
CTGRCATN EQU   X'20'            RETURN CATALOG NAME (WITH LISTCAT)
CTGGTNXT EQU   X'10' ...1 ....  GET-NEXT OPTION (WITH LISTCAT)
CTGDISC  EQU   X'08' .... 1...  DISCONNECT OPTION (WITH EXPORT)
CTGOVRID EQU   X'04' .... .1..  ERASE OVERRIDE OPTION (WITH DELETE)
CTGSCR   EQU   X'02' .... ..1.  SCRATCH SPACE (WITH DELETE NON-VSAM)
*                    .... ...X  RESERVED
*
CTGOPTN3 DS    0X             THIRD OPTION BYTE
CTGFUNC  DS    X     XXX. ....  SPECIFIES THE CALLER-REQUESTED FUNCTION
CTGLOC   EQU   X'20' 001. ....    LOCATE
CTGLSP   EQU   X'40' 010. ....    LSPACE
CTGUPDAT EQU   X'60' 011. ....    UPDATE
CTGCMS   EQU   X'80' 100. ....    CATALOG MGMT SERV. FUNCT. SEE CTGOPNS
CTGSUPLT EQU   X'10' ...1 ....  SUPERLOCATE FUNCTION
CTGGDGL  EQU   X'08' .... 1...  GDG LOCATE - CALLER SUPPLIED BASE LEVEL
CTGSRH   EQU   X'04' .... .1..  SEARCH MASTER CATALOG ONLY
*                    .... .0..  SEARCH USER CATALOGS FIRST
*                    .... ..X.  RESERVED
CTGAM0   EQU   X'01' .... ...1  OS/VS2 CATALOG MANAGMENT REQUEST
*                    .... ...0  OS CATALOG REQUEST USER SUPPLIED CAMLST
*
CTGOPTN4 DS    X              FOURTH OPTION BYTE
CTGLBASE EQU   X'80' 1... ....  LOCATE BASE LEVEL (SUPERLOCATE GDG)
CTGDOCAT EQU   X'40' .0.. ....  DYNAMICALLY LOCATE AND OPEN CAT IF REQ.
*                    .1.. ....  DO NOT DYNAMICALLY OPEN NEEDED CATALOG
*                    ..XX XXXX  RESERVED
*
CTGENT   DS    0A             ADDRESS OF CATALOG RECORD IDENTIFIER
CTGFVT   DS    A              ADDRESS OF CALLER'S CTGFV
*
CTGCAT   DS    0A             ADDRESS OF CATALOG DSNAME OR ACB
CTGCVOL  DS    A              ADDRESS OF OS SYSCTLG DSNAME
*
CTGWKA   DS    A              ADDRESS OF CALLER'S WORK AREA
*
CTGDSORG DS    XL2            DATA SET ORGANIZATION IF SUPERLOCATE
*
CTGOPTNS DS    X              CATALOG MANAGMENT SERVICES REQUEST OPTION
CTGDEFIN EQU   X'08' 0000 1...  DEFINE
CTGALTER EQU   X'10' 0001 0...  ALTER
CTGDELET EQU   X'18' 0001 1...  DELETE
CTGLTCAT EQU   X'20' 0010 0...  LISTCAT
*                    .... .XXX    RESERVED
*
         DS    X              RESERVED
*
CTGTYPE  DS    X              TYPE OF CATALOG RECORD
CTGTALIN EQU   C'A'             NON-VSAM DATA SET
CTGTGBS  EQU   C'B'             GDG BASE RECORD
CTGTCL   EQU   C'C'             CLUSTER
CTGTDATA EQU   C'D'             DATA SET
CTGTINDX EQU   C'I'             INDEX
CTGTMCAT EQU   C'M'             MASTER CATALOG
CTGTPGS  EQU   C'P'             PAGE DATA SET
CTGTUCAT EQU   C'U'             USER CATALOG
CTGTVOL  EQU   C'V'             VOLUME
CTGTANM  EQU   C'X'             ALIAS NAME
*
CTGNOFLD DS    X              NUMBER OF ENTRIES IN CTGFIELD
*
CTGDDNM  DS    0A             ADDRESS OF DD STATEMENT (OPTIONAL)
CTGNEWNM DS    0A             ADDRESS OF NEW DSNAME (ALTER)
CTGFDBK  DS    XL2            FEEDBACK AREA (SUPERLOCATE)
CTGFBFLG DS    X              FLAGS (SUPERLOCATE)
CTGPAR   EQU   X'80' 1... ....  PARALLEL MOUNT
CTGKEEP  EQU   X'40' .1.. ....  FORCED KEEP
CTGGDGB  EQU   X'20' ..1. ....  GDG BASE LOCATED
CTGNGDSN EQU   X'10' ...1 ....  GDG DSNAME GENERATED (DSNAME.GXXXXVYY)
*                    .... XXXX  RESERVED
         DS    X              RESERVED
*
CTGJSCB  DS    0A             ADDRESS OF JSCB
CTGPSWD  DS    A              ADDRESS OF CALLER-SUPPLIED PASSWORD
*
CTGFIELD EQU   *              VARIABLE LENGTH FIELD
*                               4 BYTE ADDRESS OF EACH CTGFL TO SPECIFY
*                               EACH CATALOG FIELD TO BE PROCESSED.
*                               LENGTH OF CTGFIELD IS CTGNOFLD VALUE
*                               TIMES 4.
*
CTGPLLEN EQU   *-CTGPL                 LENGTH OF CTGPL
WORKAREA DS    A                       ADDRESS OF CATALOG WORK AREA
WORKLEN  DS    F                       LENGTH OF CATALOG WORK AREA
*
*        FOR LOCATE BY TTR, THIS AREA IS LARGE ENOUGH TO CONTAIN
*        22 (MAXIMUM NUMBER OF LEVELS IN A DATA SET NAME) CATALOG
*        BLOCKS.  EACH 264 BYTE BLOCK IS ALLOCATED AS FOLOWS:
*
*                 A                      POINTER TO ENTRY PROCESSED
*                 A                      NOT USED (NEEDED TO ALIGN)
*                 CL256                  CATALOG BLOCK
*
*        FOR VSAM LOCATES, THIS AREA CONTAINS A 4 BYTE HEADER PLUS
*        45 BYTE DSNAME ENTRIES.
*                 EACH 45 BYTE ENTRY CONSISTS OF -
*                 A  1 BYTE TYPE CODE
*                 A 44 BYTE DSNAME
*
         SPACE 1
HARDCPY  DCB   DDNAME=X,               WILL BE REPLACED AT EXEC TIME   +
               MACRF=PM,                                               +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=120,                                              +
               BLKSIZE=3000
HARDOPEN OPEN  (,),MF=L
OPENLIST OPEN  (,),MF=L                OPEN CONTROL BLOCK LIST FORM
         READ  DIRDECB,SF,,,MF=L       LIST FORM OF READ
DSATDCB  DCB   DDNAME=DSATDDN,                                         +
               DSORG=PS,                                               +
               KEYLEN=8,                                               +
               RECFM=F,                                                +
               BLKSIZE=256,                                            +
               EODAD=DIREOD,                                           +
               MACRF=R
PDSREC   DS    264X                    DIRECTORY RECORD
         SPACE 1
GDSSPACE EQU   PDSREC                  RETURN FROM GDS LOCATE   GP09143
         DS    F                                                GP09143
SHOWSPAC DS    (12+256*8)X             SHOWCAT RETURN           GP09143
DSECTLEN EQU   *-DSATDS                LENGTH OF WORK AREA
         SPACE 1
         IKJECT
         IKJUPT
         PRINT NOGEN                                            GP09127
         CVT   DSECT=YES                                        GP09127
MYUCB    DSECT ,                                                GP09127
         IEFUCBOB ,                                             GP09127
         IHADVCT ,                     DEVICE CHARACTERISTICS   GP09144
         END
