JUST     TITLE 'J U S T I F Y  ***  STRING JUSTIFICATION SUBROUTINE'
***********************************************************************
*                                                                     *
*    THIS SUBROUTINE WAS FOUND IN OUR COMPILER LIBRARY (LOAD MODULE)  *
*    I DON'T KNOW WHO PUT IT THERE OR WHY. THIS CODE WAS WRITTEN      *
*    FROM SCRATCH TO PERFORM THE ORIGINAL AND ADDITIONAL FUNCTIONS.   *
*                                                                     *
*    THE ORIGINAL LEFT-JUSTIFY MODULE (LJUSTIFY) HAS BEEN EXPANDED    *
*    TO INCLUDE RIGHT-JUSTIFY AND CENTERING.                          *
*                                                                     *
*    THE ORIGINAL ALSO ELIMINATED LEADING ZEROES (X'F0'); THIS IS     *
*    NOW DONE ONLY AT ENTRY POINT LJUST0                              *
*                                                                     *
*    CALL NAME USING AREA LEN32 (COBOL) OR                            *
*    CALL NAME(TEXT,ILEN)       (FORTRAN)                             *
*                                                                     *
*    WHERE NAME IS:                                                   *
*                                                                     *
*    LJUST         - LEFT JUSTIFIED (ELIMINATE LEADING BLANKS)        *
*    LJUST0        - LEFT JUSTIFY OVER BLANKS AND ZEROES              *
*    RJUST         - RIGHT JUSTIFY                                    *
*    CENTER        - CENTER (IF ODD, LEFT ONE SHORTER)                *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 1
JUSTIFY  START 0                                  GYP - ADDED ON 93243
         ENTRY LJUST         ELIMINATE LEADING BLANKS
         USING LJUST,R15
LJUST    STM   R14,R12,12(R13)  SAVE CALLER'S REGISTERS
         LM    R2,R3,0(R1)   GET TEXT ADDRESS, LENGTH ADDRESS
         ICM   R3,15,0(R3)   GET AND TEST LENGTH
         BNP   GETOUT        NOTHING TO DO
         LR    R4,R2         MAKE A COPY
         LR    R5,R3         COPY LENGTH
LJUSTLP  CLI   0(R4),C' '    LEADING BLANK ?
         BNE   LJUSTMV       NO; MOVE
         LA    R4,1(,R4)     NEXT POSITION
         BCT   R5,LJUSTLP    LOOK AT IT
         B     GETOUT        ALL BLANK
LJUSTMV  ICM   R5,8,=C' '    SET FILL CODE
         MVCL  R2,R4         MOVE LEFT
         B     GETOUT        GO BACK
         SPACE 2
         ENTRY LJUST0        ELIMINATE LEADING BLANKS AND ZEROES
         USING LJUST0,R15
LJUST0   STM   R14,R12,12(R13)  SAVE CALLER'S REGISTERS
         LM    R2,R3,0(R1)   GET TEXT ADDRESS, LENGTH ADDRESS
         ICM   R3,15,0(R3)   GET AND TEST LENGTH
         BNP   GETOUT        NOTHING TO DO
         LR    R4,R2         MAKE A COPY
         LR    R5,R3         COPY LENGTH
LJUST0LP TM    0(R4),255-C' '    LEADING BLANK OR HEX ZERO?
         BZ    LJUST0SK      YES; SKIP
         CLI   0(R4),C'0'    LEADING ZERO ?
         BNE   LJUST0MV      NO; MOVE
LJUST0SK LA    R4,1(,R4)     NEXT POSITION
         BCT   R5,LJUST0LP   LOOK AT IT
LJUST0MV ICM   R5,8,=C' '    BLANK FILLER
         MVCL  R2,R4         MOVE LEFT
         B     GETOUT        GO BACK
         SPACE 1
         ENTRY CENTER        CENTER WITHIN SPECIFIED WIDTH
         USING CENTER,R15
CENTER   STM   R14,R12,12(R13)  SAVE CALLER'S REGISTERS
         LM    R2,R3,0(R1)   GET TEXT ADDRESS, LENGTH ADDRESS
         ICM   R3,15,0(R3)   GET AND TEST LENGTH
         BNP   GETOUT        NOTHING TO DO
         LR    R4,R2         MAKE A COPY
         LR    R5,R3         COPY LENGTH
CENTELP  CLI   0(R4),C' '    LEADING BLANK ?
         BNE   CENTELF       NO; MOVE
         LA    R4,1(,R4)     NEXT POSITION
         BCT   R5,CENTELP    LOOK AT IT
         B     GETOUT        ALL BLANK
CENTELF  LA    R8,0(R4,R5)   POINT PAST LAST BYTE
CENTERP  BCTR  R8,0          BACK UP
         CLI   0(R8),C' '    TRAILING BLANK ?
         BNE   CENTERF       NO
         BCT   R5,CENTERP    WON'T DROP THROUGH
CENTERF  LR    R6,R3         GET ORIGINAL LENGTH
         SR    R6,R5         LESS LENGTH OF NON-BLANK TEXT
         SRA   R6,1          LENGTH OF LEFT BLANKS
         LR    R7,R4         GET TEXT START
         SR    R7,R2         LESS FIELD START
         SR    R6,R7         CHECK FOR MOVEMENT
         BM    CENTERML      MOVE LEFT
         BZ    GETOUT        NO SHIFT AT ALL
         LR    R2,R4         SHIFT RIGHT FROM NON-BLANK
         LR    R3,R5         COPY TEXT LENGTH
         AR    R3,R6         MAKE FIELD LENGTH
         LA    R15,RJUST     MAKE BASE
         B     RJUSTSO-RJUST(,R15)  GO TO MOVE
CENTERML LR    R2,R4         SET START
         LPR   R6,R6         MAKE R6 POSITIVE FOR LA
         SR    R2,R6         BEFORE TEXT
         LA    R3,0(R5,R6)   AND UP LENGTH
         ICM   R5,8,=C' '    SET FILL CODE
         MVCL  R2,R4         MOVE LEFT
         B     GETOUT        GO BACK
         SPACE 2
         ENTRY RJUST         RIGHT-JUSTIFY
         USING RJUST,R15
RJUST    STM   R14,R12,12(R13)  SAVE CALLER'S REGISTERS
         LM    R2,R3,0(R1)   GET TEXT ADDRESS, LENGTH ADDRESS
         ICM   R3,15,0(R3)   GET AND TEST LENGTH
         BNP   GETOUT        NOTHING TO DO
RJUSTSO  LA    R4,0(R2,R3)   GET LAST BYTE AFTER TEXT
         LR    R5,R3         COPY LENGTH
         LR    R6,R4         SAVE END BYTE
RJUSTLP  BCTR  R4,0          PRIOR BYTE
         CLI   0(R4),C' '    TRAILING BLANK ?
         BNE   RJUSTML       NO; MOVE
         BCT   R5,RJUSTLP    LOOK AT IT
         B     GETOUT        ALL BLANK - NOTHING TO MOVE
RJUSTML  CR    R3,R5         ALL NON-BLANK ?
         BE    GETOUT        YES; ALSO NOTHING TO MOVE
         SR    R3,R5         GET NUMBER OF BLANKS TO LEFT-FILL
RJUSTMV  BCTR  R6,0          GET PRIOR DESTINATION BYTE
         IC    R0,0(,R4)     GET SOURCE BYTE FROM LEFT
         STC   R0,0(,R6)     STASH INTO RIGHT POSITION
         BCTR  R4,0          PRIOR SOURCE BYTE
         BCT   R5,RJUSTMV    COUNT DOWN
         LTR   R3,R3         GET BLANKS TO LEFT-FILL
         BNP   GETOUT        THIS SHOULD NEVER HAPPEN
         MVI   0(R2),C' '    MAKE LEFT BLANK
         SH    R3,=H'2'      ADJUST FOR FIRST BLANK AND EXECUTE
         BM    GETOUT        NOTHING MORE TO DO
         EX    R3,SLIDEMVC   MAKE LEFTISH BLANKS
         B     GETOUT
SLIDEMVC MVC   1(0,R2),0(R2)  MAKE LEFT BLANKS
         SPACE 2
         DROP  R15           NO BASE
GETOUT   LM    R14,R12,12(R13)  RESTORE USER'S REGISTERS
         SLR   R15,R15       FAKE A GOOD RETURN
         BR    R14           GO BACK
         SPACE 1
         PRINT NOGEN
         YREGS ,             REQUEST MNEMONIC REGISTER MAPPING
         END   ,
