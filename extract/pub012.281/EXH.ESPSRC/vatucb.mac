VATUCB   TITLE 'V A T U C B  ***  DASD VS. VATLST VALIDATION'
***********************************************************************
*                                                                     *
*   PROGRAM TO MAKE ALL DIRECT ACCESS VOLUMES MATCH VATLST            *
*   WHEN CHANGES ARE MADE AFTER IPL TIME                              *
*                                                                     *
*   WRITTEN BY AL ARAUJO, JUNE 1976,                                  *
*      FOR THE LOCKHEED-CALIFORNIA COMPANY                            *
*                                                                     *
*   MODIFIED BY DOUG MERCER, JULY 1980,                               *
*      TO BE REENTRANT                                                *
*                                                                     *
*   MODIFIED BY DOUG MERCER, AUGUST 1980,                             *
*      TO BINARY SEARCH THE VATLST TABLE (IF IN SEQUENCE)             *
*                                                                     *
*   MODIFIED BY DOUG MERCER, JANUARY 1984,                            *
*      FOR MVS/XA (IOSVSUCB RATHER THAN UCB LOOKUP TABLE)             *
*                                                                     *
*      THIS PROGRAM IS BEING CALLED IN BY GENERIC AND LOADS IN THE    *
*         VATLIST TO BE COMPARED WITH THE DIRECT ACCESS VOLUMES.      *
*      1.THE CORRESPONDING 'USE' ATTRIBUTE IS ALTERED IN ITS UCB      *
*      2.THE CORRESPONDING 'SHARE' ATTRIBUTE IS ALTERED IN ITS UCB    *
*      3.THE CORRESPONDING 'MOUNT' ATTRIBUTE IS ALTERED IN ITS UCB    *
*                                                     A.R.A. DEC 76   *
*      4.ANY DIRECT ACCESS DEVICE NOT FOUND IN THE VATLST TABLE WILL  *
*        BE MARKED AS PRIVATE AND RESERVED            A.R.A. JAN 80   *
*                                                                     *
*      5.RETROFIT FOR MVS 3.8J IF &MVSXA SET TO 0            GP 06343 *
*      6.USE VATLNG*#DEVICES INSTEAD OF 4K FOR FIRST VATLST GETMAIN.  *
*                                                            GP 06343 *
*      7.SKIP MESSAGE AND UCB BIT SETTING IF CORRECT         GP 06343 *
*      8.ADD PARM=TEST FOR NON-DESTRUCTIVE TEST RUN;         GP 06343 *
*        ANY OTHER PARM MAKES MESSAGES DELETABLE.            GP 06343 *
*      9.VALIDATE VATLST CARDS & MSG/SKIP IF MALFORMED       GP 06343 *
*     10.VALIDATE DEVICE TYPE BETWEEN UCB AND VATLST         GP 06343 *
*     11.ALLOW MULTIPLE SERIALS WITH DIFFERENT TYPES         GP 06343 *
*                                                                     *
*     12.BYPASS UCBSTAT CHANGE IF SYSRES BIT IS ON.          GP 09210 *
*     13. REPLACE 2302 BY 9345 FOR PLANNED TK4 SUPPORT       GP 09210 *
*                                                                     *
*                                                                     *
*        ATTRIBUTES - REENTRANT, REFRESHABLE, REUSABLE                *
*        TAB SETTINGS - 10 16 31 72                                   *
*                                                                     *
***********************************************************************
*                                                                     *
*         Suggested procedure for SYS1.PROCLIB/SYS2.PROCLIB:          *
*                                                                     *
*  //VATUCB  PROC VAL=00                                              *
*  //*                                                                *
*  //*   THIS PROGRAM READS THE VATLST (SUFFIXED BY VAL PARAMETER)    *
*  //*     AND CHANGES ALL DASD UCBS TO THEIR ORIGINAL ATTRIBUTES.    *
*  //*   VOLUMES NOT FOUND ARE MARKED RESERVED + PRIVATE              *
*  //*                                                                *
*  //*   PARM= (NULL) ISSUES WTOS WITH DESC=2/ROUT=2 (NON-DELETE)     *
*  //*   PARM=IPL     ISSUES WTOS WITH DEFAULTS (DELETABLE)           *
*  //*   PARM=TEST    ISSUES WTOS, BUT DOES NOT CHANGE UCBS           *
*  //*                                                                *
*  //       EXEC  PGM=VATUCB                                          *
*  //*STEPLIB DD   DISP=SHR,DSN=SYS2.LINKLIB (NOT NEEDED)             *
*  //*                                                                *
*  //VATIN   DD   DISP=SHR,DSN=SYS1.PARMLIB(VATLST&VAL)               *
*  //*                                                                *
*                                                                     *
***********************************************************************
         SPACE 1
         PUNCH '   ORDER VATUCB(P) '   DUMP ALIGNMENT           GP06343
         PUNCH '  SETCODE AC(1)    '   UCB ALTERATION           GP06343
         GBLB  &MVSXA             FOR UCBLOOP MACRO             GP06343
         SPACE 1
VATUCB   START 0                                                GP06343
         B     VATUCBGN-*(,R15)   SKIP ID                       GP06343
         DC    AL1(17),C'VATUCB   &SYSDATE'                     GP06343
VATUCBGN STM   R14,R12,12(R13)    SAVE CALLER'S REGISTERS       GP06343
         LR    R12,R15                                          GP06343
         USING VATUCB,R12                                       GP06343
         LR    R9,R1          SAVE PARM POINTER                 GP06343
         SPACE 1                                               DM JUL80
         GETMAIN R,LV=SAVSIZ
         L     R14,=V(PATTERN)  SAVE AREA PATTERN               GP06343
         LR    R15,R0                                          DM JUL80
         LR    R2,R1          INITIALIZE                       DM JUL80
         LR    R3,R0               THE WORK                    DM JUL80
         MVCL  R2,R14                   AREA                   DM JUL80
         ST    R1,8(,R13)
         ST    R13,4(,R1)
         LR    R13,R1
         USING SAVEAREA,R13                                    DM JUL80
         SPACE 1                                                GP06343
         LA    R1,0(,R9)      CLEAN PARM POINTER                GP06343
         LTR   R1,R1          ANY ?                             GP06343
         BZ    DONEPARM       NO ?                              GP06343
         L     R1,0(,R1)      LOAD PARM                         GP06343
         LA    R1,0(,R1)      CLEAN PARM ADDRESS                GP06343
         LTR   R1,R1          ANY ?                             GP06343
         BZ    DONEPARM       NO ?                              GP06343
         ICM   R0,3,0(R1)     ANY PARM AT ALL ?                 GP06343
         BNP   DONEPARM       NO, USE NON-DELETABLE WTOS        GP06343
         CLC   =H'3',0(R1)    LONG ENOUGH ?                     GP06343
         BNL   DELMSGS        NO; WHAT IS IT ?                  GP06343
         CLC   =C'TEST',2(R1)   TEST ?                          GP06343
         BNE   DELMSGS                                          GP06343
         MVI   PROFLAGS,FGTEST  SET TEST MODE                   GP06343
DELMSGS  NI    ENDVAT+2,255-X'80'  RESET ROUT/DESC PRESENT      GP06343
         NI    DFLTWTO+2,255-X'80'  RESET ROUT/DESC PRESENT     GP06343
         NI    SEQWTO+2,255-X'80'  RESET ROUT/DESC PRESENT      GP06343
         NI    DEVWTO+2,255-X'80'  RESET ROUT/DESC PRESENT      GP06343
         NI    MSGBDCRD+2,255-X'80'  RESET ROUT/DESC PRESENT    GP06343
         SPACE 1
DONEPARM L     R8,VATTBLE                                      DM JUL80
         USING VATLST,R8
         OPEN  VATIN,MF=(E,OCLIST)                             DM JUL80
         BAL   R14,GETVAT     GET A TABLE AREA                 DM JUL80
         SPACE 4
********************************************************************
*   LOAD VATLST TABLE                                              *
INPUT    DS    0H
         C     R8,VATLAST     SEE IF THIS IS LAST SLOT         DM JUL80
         BNH   *+8            NO                               DM AUG80
         BAL   R14,GETVAT     GET A LARGER AREA                DM JUL80
REGET    GET   VATIN          BRING IN VATLST ENTRY            DM JUL80
         CLI   0(R1),C'*'     COMMENTS CARD ?                   GP06343
         BE    REGET          YES; IGNORE IT                    GP06343
         MVC   VATLST(VATLNG),0(R1)                            DM JUL80
         LA    R3,UNITY      POINT TO DEVICE TABLE              GP06343
         LM    R14,R15,=A(L'UNITY,UNITEND)  SET FOR BXLE        GP06343
DEVLOOP  CLC   DEVT,0(R3)    MATCHING DEVICE ?                  GP06343
         BE    DEVFOUND      YES                                GP06343
         BXLE  R3,R14,DEVLOOP  TRY NEXT                         GP06343
         B     BADCARD       TOO BAD                            GP06343
         SPACE 1                                                GP06343
DEVFOUND LA    R0,UNITY-L'UNITY  GET TABLE START + FINAGLE      GP06343
         SLR   R3,R0         OFFSET                             GP06343
         SRL   R3,3          CONVERT TO INDEX                   GP06343
         STC   R3,DEVBYTE4   STASH IN RECORD                    GP06343
         CLI   MOUNT,MNTRSDNT PERM. RESIDENT OR RESERVED ?      GP06343
         BL    BADCARD        NO                                GP06343
         CLI   MOUNT,MNTRSERV PERM. RESIDENT OR RESERVED ?      GP06343
         BH    BADCARD        NO                                GP06343
         CLI   USE,USESTOR    STORAGE/PUBLIC/PRIVATE?           GP06343
         BL    BADCARD        NO                                GP06343
         CLI   USE,USEPRIV    STORAGE/PUBLIC/PRIVATE?           GP06343
         BH    BADCARD        NO                                GP06343
         CLI   REQ,C' '       ANY NEED ?                        GP06343
         BE    USECARD        PERHAPS                           GP06343
         CLI   REQ,C'N'       ANY NEED ?                        GP06343
         BE    USECARD        PERHAPS                           GP06343
         CLI   REQ,C'Y'       ANY NEED ?                        GP06343
         BE    USECARD        PERHAPS                           GP06343
BADCARD  MVC   MSGBDSER,VOLSER    SHOW BAD CARD                 GP06343
         WTO   MF=(E,MSGBDCRD)    LET USER KNOW                 GP06343
         OI    RETCODE+L'RETCODE-1,8  SERIOUS                   GP06343
         B     REGET          AND IGNORE IT                     GP06343
         SPACE 1
USECARD  LA    R0,1           COUNT                            DM AUG80
         AH    R0,VATCNT           TABLE                       DM AUG80
         STH   R0,VATCNT                ENTRY                  DM AUG80
         CLC   SEQCHK,VOLSER  CHECK SEQUENCE                   DM AUG80
         MVC   SEQCHK,VOLSER       UPDATE SEQUENCE CHECK       DM AUG80
         BL    NEXTBL         OK - IN SEQUENCE                 DM AUG80
         TM    PROFLAGS,FGNOSEQ  PREVIOUSLY MESSAGED ?          GP06343
         BNZ   NEXTBL         YES; ONE IS ENOUGH ?              GP06343
         MVC   SEQSER,VOLSER  OUT OF SEQUENCE                  DM AUG80
         LA    R1,SEQWTO      SEND ERROR MESSAGE               DM AUG80
         WTO   MF=(E,(1))                                      DM AUG80
         OI    PROFLAGS,FGNOSEQ   SHOW SEQUENCE ERROR          DM AUG80
NEXTBL   LA    R8,VATLNG(,R8) SET PTR TO NEXT TABLE ENTRY      DM JUL80
         B     INPUT          GO LOAD ANOTHER CARD IN TABLE
         SPACE 2                                                GP06343
EODAD    TM    PROFLAGS,FGTEST TEST MODE ?                      GP06343
         BNZ   EODADUN        YES; RUN NORMALLY                 GP06343
         MODESET KEY=ZERO                                      DM AUG80
EODADUN  LR    R15,R8         COPY NEXT AVAILABLE SLOT          GP06343
         S     R15,VATTBLE    LESS START                        GP06343
         SR    R14,R14                                          GP06343
         LA    R0,VATLNG      ENTRY LENGTH                      GP06343
         DR    R14,R0         GET NUMBER OF ENTRIES             GP06343
         LR    R8,R15         COPY ENTRY COUNT FOR SORT         GP06343
         BAL   R14,MSORT      SORT THE TABLE                    GP06343
           B   EODADST        SORT FAILED                       GP06343
         NI    PROFLAGS,255-FGNOSEQ  SHOW TABLE (NOW) SORTED    GP06343
EODADST  SR    R8,R8          ZERO VATTBLE REGISTER
         SPACE 3                                               DM AUG80
********************************************************************
*   BEGIN UCB SEARCH IN VATLST TABLE                               *
         XC    UCBWORK,UCBWORK    ZERO WORK AREA               DM JAN84
         LA    R0,UCBWORK         INITIALIZE PARAMETER LIST    DM JAN84
         ST    R0,UCBPARM                                      DM JAN84
         LA    R0,=AL1(UCB3DACC)  DASD DEVICE TYPE             DM JAN84
         ST    R0,UCBPARM+4                                    DM JAN84
         LA    R0,UCBADDR         RETURN ADDRESS               DM JAN84
         ST    R0,UCBPARM+8                                    DM JAN84
         OI    UCBPARM+8,X'80'    SET END OF LIST              DM JAN84
         L     R4,CVTPTR
         USING CVTMAP,R4
         AIF   (&MVSXA).NEWLOOK   AT LEAST XA?                  GP06343
         XC    UCBWORK(3),UCBWORK CLEAR FOR DUPLICATE ELIM.     GP06343
         L     R4,CVTILK2         GET UCB LOOKUP TABLE          GP06343
         SR    R3,R3                                            GP06343
UNITLOOP ICM   R3,3,0(R4)         LOAD FIRST/NEXT UCB ADDRESS   GP06343
         BZ    UNITBUMP           SKIP DUMMY                    GP06343
         CLM   R3,3,=X'FFFF'      LAST ENTRY ?                  GP06343
         BE    ENDSRCH            YES; DONE                     GP06343
         USING UCBOB,R3                                         GP06343
         MVC   DB(3),UCBNAME      COPY EBCDIC UCB NAME          GP06343
         XC    DB(3),=X'F0F0F0'   FLIP ZONES                    GP06343
         CLC   DB(3),UCBWORK      LOWER THAN PREVIOUS ?         GP06343
         BNH   UNITBUMP           YES; IGNORE IT                GP06343
         CLI   UCBTBYT3,UCB3DACC  DASD DEVICE ?                 GP06343
         BNE   UNITBUMP           NO; SKIP                      GP06343
         ST    R3,UCBADDR         REMEMBER FOR NEXT TIME        GP06343
         CLI   UCBVOLI,C' '       GOOD SERIAL ?                 GP06343
         BH    UNITPROC           YES; PROCESS                  GP06343
A0100    DS    0H
UNITBUMP LA    R4,2(,R4)          TRY NEXT SLOT                 GP06343
         B     UNITLOOP                                         GP06343
UNITPROC DS    0H                                               GP06343
         AGO   .COMLOOK                                         GP06343
.NEWLOOK L     R4,CVTUCBSC    ADDR OF UCB SCAN ROUTINE         DM JAN84
         DROP  R4
A0100    DS    0H
         SPACE ,                                               DM AUG80
         LR    R15,R4             CVTUCBSC                     DM JAN84
         LA    R1,UCBPARM                                      DM JAN84
         BALR  R14,R15            SCAN                         DM JAN84
         LTR   R15,R15                                         DM JAN84
         BNZ   ENDSRCH            LAST UCB                     DM JAN84
         SPACE ,                                               DM JAN84
         L     R3,UCBADDR                                      DM JAN84
         USING UCBOB,R3                                         GP06343
         CLI   UCBVOLI,X'0'         IS THE VOL ID ZERO?
         BE    A0400
.COMLOOK L     R8,VATTBLE     SET POINTER BACK TO VATTBLE TOP  DM JUL80
         USING VATLST,R8
         NI    PROFLAGS,255-FGBADUN  RESET SERIAL, BAD TYPE     GP06343
         LH    R0,VATCNT      SEARCH FOR VOLUME                DM AUG80
         TM    PROFLAGS,FGNOSEQ                                DM AUG80
         BZ    B0100          IN SEQUENCE - BINARY SEARCH      DM AUG80
         SPACE ,                                               DM AUG80
A0300    CLC   VOLSER,UCBVOLI       IS UCB IN VATLST?          DM AUG80
         BNE   A0300UP        NO; TRY AGAIN                     GP06343
         CLC   DEVBYTE4,UCBTBYT4  SAME TYPE ?                   GP06343
         BE    A0900          YES; CHECK ATTRIBUTES
         OI    PROFLAGS,FGBADUN  SERIAL, BUT NOT TYPE           GP06343
A0300UP  LA    R8,VATLNG(,R8) SET POINTER TO NEXT VATLST ENTRY DM JUL80
         BCT   R0,A0300       GO TRY NEXT VATLST ENTRY         DM AUG80
         B     A1700          NOT FOUND                        DM AUG80
         SPACE 2                                               DM AUG80
A0400    DS    0H
         B     A0100          CONTINUE UCB SEARCH
         SPACE 3
* BINARY SEARCH VATLST TABLE                                   DM AUG80
B0100    SH    R8,=Y(VATLNG)  BACK UP TO ENTRY(0)              DM AUG80
         SPACE ,                                               DM AUG80
B0200    LR    R15,R8         SAVE THIS AS LAST LOW            DM AUG80
B0300    LR    R8,R15         RESET FROM PRIOR LOW             DM AUG80
         LR    R14,R0         DEVELOP ADDRESS INCREMENT        DM AUG80
         LA    R14,1(,R14)         FROM COUNT                  DM AUG80
         SRA   R14,1          HALVE (ROUNDED)                  DM AUG80
         BZ    A1700          NOT FOUND                        DM AUG80
         SR    R0,R14         REMAINING COUNT                  DM AUG80
         MH    R14,=Y(VATLNG)     * ENTRY LENGTH               DM AUG80
         AR    R8,R14         NEXT ADDRESS                     DM AUG80
         CLC   VOLSER,UCBVOLI      SEE IF THIS IS VOLUME       DM AUG80
         BL    B0200          NO - TOO LOW                     DM AUG80
         BH    B0300          NO - TOO HIGH                    DM AUG80
         OI    PROFLAGS,FGBADUN  SET FOR TYPE MISMATCH          GP06343
         CLC   DEVBYTE4,UCBTBYT4  SAME DEVICE TYPE ?            GP06343
         BL    B0200          NO - TOO LOW                     DM AUG80
         BH    B0300          NO - TOO HIGH                    DM AUG80
         B     A0900          FOUND                            DM AUG80
         SPACE 2
**********************************************************************
*   CHECK VATLST FOR THE 'USE' ATTRIBUTE OF VOLUME                   *
A0900    MVC   DB(1),UCBSTAB  COPY FOR TEST                     GP06343
         NI    DB,UCBBPRV+UCBBSTR+UCBBPUB   KEEP ONLY TESTED BITS
         LA    R0,3           MAKE MASK                         GP06343
         IC    R1,USE         GET USE (C'0'-C'2')               GP06343
         NR    R1,R0          CHANGE TO X'00' TO X'02'          GP06343
         LA    R0,=AL1(UCBBSTR,UCBBPUB,UCBBPRV)  GET FLAG       GP06343
         AR    R1,R0          GET ADDRESS OF BIT                GP06343
         CLC   0(1,R1),DB     MATCHES ?                         GP06343
         BE    A1300          YES; CHECK SHARED                 GP06343
         OI    RETCODE+L'RETCODE-1,4   SHOW DISCREPANCY         GP06343
         TM    PROFLAGS,FGTEST    TEST MODE ?                   GP06343
         BNZ   A1300          YES; SKIP UCB ALTERATION          GP06343
         NI    UCBSTAB,255-(UCBBPRV+UCBBSTR+UCBBPUB)   ZERO OUT UCB
         OC    UCBSTAB,0(R1)  AND SET IT                        GP06343
*NEXT*   B     A1300          GO GET ANOTHER UCB
         SPACE 3
***********************************************************************
*   ALTER THE UCB IF 'SHARE' OR 'UNSHR' ATTRIBUTE IS REQUIRED         *
A1300    TM    PROFLAGS,FGTEST    TEST MODE ?                   GP06343
         BNZ   A1500          YES; SKIP UCB ALTERATION          GP06343
         CLC   SHRFLAG,=C'UNSHR'  IS THIS VOL UNSHARABLE
         BNE   A1400              CONTINUE SHARE CHECK
         NI    UCBTBYT2,255-UCBRR  ALTER UCB TO UNSHARED STATUSDM JAN84
A1400    DS    0H
         CLC   SHRFLAG,=C'SHARE'  IS THIS VOL SHARABLE
         BNE   A1500              CONTINUE UCB SCAN
         OI    UCBTBYT2,UCBRR     ALTER UCB TO SHARE STATUS
         SPACE 3
******************************************************************
*    CHECK AND ALTER 'MOUNT' UCB ATTRIBUTE AS REQUIRED            *
A1500    LA    R0,1           MASK 0 AND 1                      GP06343
         IC    R1,MOUNT       GET THE MOUNT ATTRIBUTE           GP06343
         NR    R1,R0          CONVERT C'0'-C'1' TO X'00'-X'01'  GP06343
         LA    R0,=AL1(UCBPRES,UCBRESV)  RESIDENT/RESERVED      GP06343
         AR    R1,R0          GET ADDRESS OF BIT                GP06343
         MVC   DB(1),UCBSTAT  GET CURRENT SETTINGS              GP06343
         NI    DB,UCBPRES+UCBRESV  MASK INTERESTING BITS        GP06343
         CLC   0(1,R1),DB     MATCHES ?                         GP06343
         BE    A1800          YES; CONTINUE SCAN                GP06343
         TM    UCBSTAT,UCBSYSR    SYSTEM IPL PACK ?             GP09210
         BNZ   A1800          YES; DON'T MESS WITH IT           GP09210
         OI    RETCODE+L'RETCODE-1,4  SHOW DISCREPANCY          GP06343
         TM    PROFLAGS,FGTEST    TEST MODE ?                   GP06343
         BNZ   A1800          YES; SKIP UCB ALTERATION          GP06343
         NI    UCBSTAT,255-(UCBPRES+UCBRESV)                    GP06343
         OC    UCBSTAT,0(R1)  SET DESIRED BIT                   GP06343
         B     A1800          CONTINUE UCB SCAN
         EJECT
********************************************************************
*   ASSIGNING A DEFAULT VALUE TO A UCB NOT FOUND IN VATLST         *
A1700    DS    0H                                              ARA 1/80
         TM    UCBTBYT2,UCBRVDEV       IS IT A VIRT UCB?       ARA 1/80
         BO    A0400                   YES/ GO GET ANOTHER UCB ARA 1/80
         OI    RETCODE+L'RETCODE-1,8   SET VOLUME NOT IN VAT    GP06343
         TM    PROFLAGS,FGBADUN  HAVE SERIAL, NOT TYPE ?        GP06343
         BZ    A1750          NO; NEW UNIT                      GP06343
         MVC   DEVSER,UCBVOLI                                   GP06343
         WTO   MF=(E,DEVWTO)                                    GP06343
         B     A1780          JOIN COMMON                       GP06343
A1750    MVC   DFLTVOL,UCBVOLI     MOVE VOLID INTO WTO MSG     DM AUG80
         LA    R1,DFLTWTO          SET 'DEFAULT' MSG ADDR      DM AUG80
         WTO   MF=(E,(1))                                      DM SEP81
A1780    TM    PROFLAGS,FGTEST    TEST MODE ?                   GP06343
         BNZ   A1800          YES; SKIP UCB ALTERATION          GP06343
         SPACE 2
         NI    UCBSTAB,255-(UCBBPRV+UCBBSTR+UCBBPUB)  CLEAR UCBDM NOV81
         OI    UCBSTAB,UCBBPRV         ALTER TO PRIVATE        ARA 1/80
         TM    UCBSTAT,UCBSYSR    SYSTEM IPL PACK ?             GP09210
         BNZ   A1800          YES; DON'T MESS WITH IT           GP09210
         NI    UCBSTAT,255-UCBPRES     REMOVE PERM. RESIDENT   DM JAN84
         OI    UCBSTAT,UCBRESV         ALTER TO RESERVED       ARA 1/80
         SPACE 4
A1800    DS    0H
         B     A0400                   GO GET ANOTHER UCB      ARA 1/80
         SPACE 4                                               DM JUL80
************************************************************** DM JUL80
* GETMAIN AN AREA FOR THE VATLST ENTRIES -                   * DM JUL80
* MOVE THE CURRENT LIST TO IT (ZEROS IF FIRST TIME)          * DM JUL80
GETVAT   STM   R14,R5,12(R13)                                  DM JUL80
         L     R2,VATTBLE                                      DM JUL80
         ICM   R8,15,VATGMLNG LOAD AND TEST PRIOR LENGTH        GP06343
         BNZ   GETVATN1      NOT FIRST TIME                     GP06343
         L     R1,CVTPTR     GET CVT                            GP06343
         ICM   R1,15,CVTJESCT-CVTMAP(R1)  LOAD AND TEST JES CT  GP06343
         BZ    GETVATN1      USE DEFAULT IF NONE                GP06343
         ICM   R0,15,JESNUCBS-JESCT(R1)  GET SYSTEMDEVICE COUNT GP06343
         BZ    GETVATN1      USE DEFAULT IF NONE                GP06343
         MH    R0,=Y(VATLNG)  FIND SIZE REQUIRED                GP06343
         B     GETVATN2      AND GET THAT                       GP06343
GETVATN1 LH    R0,=H'4096'    INCREMENT OVER PREVIOUS          DM JUL80
         AR    R0,R8          ADD PREVIOUS LENGTH (0 IF FIRST) DM JUL80
GETVATN2 GETMAIN R,LV=(0)                                      DM JUL80
         STM   R0,R1,VATGMLNG SAVE                             DM JUL80
         AR    R0,R1          BYTE PAST END                    DM JUL80
         SH    R0,=Y(VATLNG)  LAST AVAILABLE SLOT              DM JUL80
         ST    R0,VATLAST                                      DM JUL80
         LR    R4,R2          SAVE OLD GETMAIN DATA            DM JUL80
         LR    R5,R8               ACROSS MVCL                 DM JUL80
         LR    R0,R1          MOVE PRIOR DATA                  DM JUL80
         L     R1,VATGMLNG         TO NEW AREA                 DM JUL80
         MVCL  R0,R2                    (0 IF FIRST TIME)      DM JUL80
         L     R8,VATTBLE                                      DM JUL80
         LTR   R0,R5          PRIOR LENGTH                     DM JUL80
         BZ    GETVAT1        ZERO - FIRST TIME                DM JUL80
         FREEMAIN R,LV=(0),A=(R4)  FREE OLD                    DM JUL80
         A     R8,32(,R13)    CALCULATE WHERE CURRENT          DM JUL80
         SR    R8,R4               ENTRY HAS MOVED TO          DM JUL80
         SPACE ,                                               DM JUL80
GETVAT1  ST    R8,32(,R13)    SET NEW CURRENT (AFTER LM)       DM JUL80
         LM    R14,R5,12(R13)                                  DM JUL80
         BR    R14            RETURN                           DM JUL80
         EJECT
         PUSH  USING                                            GP06343
ENDSRCH  TM    PROFLAGS,FGTEST TEST MODE ?                      GP06343
         BNZ   ENDSRCHN       YES; RUN NORMALLY                 GP06343
         MODESET KEY=NZERO                                     DM AUG80
ENDSRCHN CLOSE MF=(E,OCLIST)                                    GP06343
         FREEPOOL             VATIN                            DM JUL80
         WTO   MF=(E,ENDVAT)  NORMAL 'END' MESSAGE              GP06343
         LM    R0,R1,VATGMLNG FREE THE TABLE AREA              DM JUL80
         FREEMAIN R,LV=(0),A=(1)                               DM JUL80
         LR    R1,R13
         L     R9,RETCODE    GET RETURN CODE                    GP06343
         L     R13,4(,R13)
         DROP  R13                                             DM JUL80
         FREEMAIN R,LV=SAVSIZ,A=(1)
         LR    R15,R9         GET RETURN CODE                   GP06343
         L     R14,12(,R13)   RESTORE RETURN ADDRESS            GP06343
         LM    R0,R12,20(R13)   RESTORE ALL BUT RC              GP06343
         BR    R14            RETURN                            GP06343
         POP   USING                                            GP06343
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*      ADAPTED FROM SORT APPEARING IN 'FORTRAN PROGRAMMING' BY        *
*      FREDRIC STUART, WILEY '69. ORIGINATED BY D.L. SHELL, MODIFIED  *
*      BY MARLENE METZNER (PRATT&WHITNEY).                            *
*                                                                     *
*---------------------------------------------------------------------*
MSORT    STM   R14,R9,20(R13)   SAVE REGISTERS                  GP06343
         LA    R0,1             MAKE CONSTANT                   GP06343
         LA    R2,VATLNG                                        GP06343
         LR    R3,R2            COPY INTO EXECUTE REGISTER      GP06343
         SR    R3,R0            DECREMENT FOR EXECUTE           GP06343
         BM    MSORTY           TAKE ERROR EXIT                 GP06343
         LR    R9,R8            COUNT PASSED BY CALLER          GP06343
         CR    R9,R0            CHECK AT LEAST TWO ENTRIES      GP06343
         BNH   MSORTB           TAKE GOOD EXIT IF NOT           GP06343
         MR    R8,R2            CONVERT TO TABLE LENGTH         GP06343
         LR    R7,R9            COPY TO SUBLIST                 GP06343
         L     R1,VATTBLE                                       GP06343
MSORTA   SRL   R7,1             HALVE SUBLIST SIZE              GP06343
         XR    R6,R6            CLEAR FOR DIVIDE                GP06343
         DR    R6,R2            CONVERT TO LIST ENTRIES         GP06343
         MR    R6,R2            BACK TO INT(M/S)                GP06343
         LTR   R7,R7            ANY LEFT TO BE DONE ?           GP06343
         BP    MSORTC           YES; PROCEED                    GP06343
MSORTB   LM    R14,R9,20(R13)   RESTORE USER'S REGISTERS        GP06343
         B     4(,R14)          TAKE GOOD EXIT                  GP06343
MSORTC   LR    R6,R9            GET ENTRY SIZE                  GP06343
         SR    R6,R7            GET SIZE OF OTHER HALF          GP06343
         XR    R5,R5            CLEAR COUNTER                   GP06343
MSORTD   LA    R4,0(R5,R1)      GET ADDRESS OF NEXT ELEMENT     GP06343
MSORTE   LA    R8,0(R4,R7)      GET ADDRESS OF OTHER ELEMENT    GP06343
         CLC   0(7,R4),0(R8)    PATTERN COMPARE                 GP06343
         BNH   MSORTF           IN SEQUENCE - SKIP FLIP         GP06343
         XC    0(VATLNG,R4),0(R8)      FLIP 1/3                 GP06343
         XC    0(VATLNG,R8),0(R4)      FLIP  2                  GP06343
         XC    0(VATLNG,R4),0(R8)      FLIP 1/3                 GP06343
         SR    R4,R7            GET NEXT ELEMENT                GP06343
         CR    R4,R1            BACK TO START OF TABLE ?        GP06343
         BNL   MSORTE           NO; TRY AGAIN                   GP06343
MSORTF   AR    R5,R2            NEXT COMPARE ELEMENT ADDRESS    GP06343
         CR    R5,R6            DONE THIS PART OF LIST ?        GP06343
         CR    R5,R6            DONE THIS PART OF LIST ?        GP06343
         BNL   MSORTA           YES; GET ANOTHER SUBLIST        GP06343
         B     MSORTD           ELSE PROCEED                    GP06343
MSORTY   LM    R14,R9,20(R13)  RESTORE REGISTERS                GP06343
         BR    R14                     TAKE ERROR EXIT          GP06343
         SPACE 2
         LTORG
         SPACE 1
UNITY    DC    CL8'2311'     1 - DEVICE NAMES BY UCBTBYT4
         DC    CL8'2301  '   2
         DC    CL8'2303  '   3
         DC    CL8'9345  '   4 - 2302 IN OLDER SYSTEMS          GP09210
*OLD*    DC    CL8'2302  '   4 - 9345 IN MODERN SYSTEMS
         DC    CL8'2321  '   5
         DC    CL8'2305  '   6
         DC    CL8'2305  '   7
         DC    CL8'2314  '   8
         DC    CL8'3330  '   9
         DC    CL8'3340  '   A
         DC    CL8'3350  '   B
         DC    CL8'3375  '   C
         DC    CL8'3330-1'   D
         DC    CL8'3380  '   E
UNITEND  DC    CL8'3390  '   F
         EJECT
PATTERN  CSECT ,              WORK AREA DEFINITION AND         DM JUL80*
                              INITIALIZATION AREA - R13 POINTS DM JUL80*
                              TO A GETMAIN AREA                DM JUL80
SAVEAREA DC    18A(0)
         SPACE 2
DB       DC    D'0'                                             GP06343
UCBWORK  DC    XL100'0'           IOSVSUCB WORK AREA           DM JAN84
         SPACE ,                                               DM JAN84
UCBPARM  DC    3A(0)    (UCBWORK,=X'20',UCBADDR+X'80000000')   DM JAN84
UCBADDR  DC    A(0)                                            DM JAN84
         SPACE 1                                               DM AUG80
RETCODE  DC    F'0'           0 - OK; 4 - UCB FIX; 8 - NOT IN VAT
         SPACE 1                                               DM AUG80
VATCNT   DC    H'0'           COUNT OF VATLST ENTRIES          DM AUG80
         SPACE 1                                               DM AUG80
ENDVAT   WTO   'END UCB ALTERATIONS',MF=L,ROUTCDE=(2,11)
         SPACE ,                                               DM AUG80
DFLTWTO  DC    Y(DFLTWTOL),X'8000'                             DM AUG80
         DC    C'A DEFAULT VALUE WAS ASSIGNED FOR '            DM AUG80
DFLTVOL  DC    CL6' '                                          DM AUG80
DFLTWTOL EQU   *-DFLTWTO                                       DM AUG80
         DC    X'00004020'    ROUTCDE=(2,11)                   DM AUG80
         SPACE ,                                               DM AUG80
PROFLAGS DC    X'0'                                            DM AUG80
FGNOSEQ  EQU   128            VATLST IS OUT OF SEQUENCE        DM AUG80
FGTEST   EQU   64             TEST ONLY - NO UCB CHANGES        GP06343
FGBADUN  EQU   1              FOUND SERIAL; TYPE MISMATCH       GP06343
         SPACE ,                                               DM AUG80
SEQWTO   DC    Y(SEQWTOL),X'8000'                              DM AUG80
         DC    C'VATLST OUT OF SEQUENCE AT '                   DM AUG80
SEQSER   DC    CL6' '                                          DM AUG80
SEQWTOL  EQU   *-SEQWTO                                        DM AUG80
         DC    X'40004020'    DESC=2,ROUTCDE=(2,11)            DM AUG80
         SPACE ,                                               DM AUG80
DEVWTO   DC    Y(DEVWTOL),X'8000'                               GP06343
         DC    C'DEVICE TYPE MISMATCH FOR '                     GP06343
DEVSER   DC    CL6' '                                           GP06343
DEVWTOL  EQU   *-DEVWTO                                         GP06343
         DC    X'40004020'    DESC=2,ROUTCDE=(2,11)             GP06343
         SPACE 1
MSGBDCRD DC    Y(MSGBDCRL),X'8000'                              GP06343
         DC    C'MALFORMATED VATLST CARD '                      GP06343
MSGBDSER DC    CL6' '                                           GP06343
MSGBDCRL EQU   *-MSGBDCRD                                       GP06343
         DC    X'40004020'    DESC=2,ROUTCDE=(2,11)             GP06343
         SPACE ,                                               DM AUG80
SEQCHK   DC    XL7'0'         SEQUENCE CHECK FOR VATLST         GP06343
         SPACE 3
VATIN    DCB   DDNAME=VATIN,DSORG=PS,MACRF=GL,RECFM=FB,EODAD=EODAD
         SPACE 3
OCLIST   OPEN  0,MF=L
VATGMLNG DC    A(0)           LENGTH OF VATLST GETMAIN         DM JUL80
VATTBLE  DC    A(0)           ADDRESS OF VATLST GETMAIN        DM JUL80
VATLAST  DC    A(0)           LAST SLOT IN VATLST GETMAIN      DM JUL80
SAVSIZ   EQU   *-SAVEAREA
         SPACE 2
VATLST   DSECT
VOLSER   DS    CL6            VOLUME SERIAL
DEVBYTE4 DS    CL1            (FILLED IN) EXPECTED UCBTBYT4     GP06343
MOUNT    DS    CL1            MOUNT ATTRIBUTE
MNTRSDNT EQU   C'0'                RESIDENT                    DM JUL80
MNTRSERV EQU   C'1'                RESERVED                    DM JUL80
         DS    CL1
USE      DS    CL1            USE ATTRIBUTE
USESTOR  EQU   C'0'                STORAGE                     DM JUL80
USEPUB   EQU   C'1'                PUBLIC                      DM JUL80
USEPRIV  EQU   C'2'                PRIVATE                     DM JUL80
         DS    CL1
DEVT     DS    CL8            DEVICE TYPE
         DS    CL1
REQ      DS    CL1            MOUNT MESSAGE/REQUIRED AT IPL     GP06343
         DS    CL1
SHRFLAG  DS    CL5            SHARE ATTRIBUTE
* THIS IS A USER-DEFINED FIELD                                 DM JUL80
*        OUR VALUES ARE 'UNSHR' TO TURN OFF THE SHARED         DM JUL80
*            ATTRIBUTE IN THE UCB DEVTYPE AND 'SHARE'          DM JUL80
*            TO TURN IT ON                                     DM JUL80
VATLNG   EQU   *-VATLST       PORTION THAT WE WILL STORE       DM JUL80
         DS    CL53
         SPACE 2
EXSA     DSECT
         IEFUCBOB LIST=NO
         CVT DSECT=YES
         IEFJESCT ,          JES CONTROL TABLE - I/O COUNTS     GP06343
         YREGS ,                                                GP06343
         END
