ACMD     TITLE 'A U T O C M D  ***  AUTOMATIC COMMAND ON ATTENTION'
*    THIS MODULE PROVIDES THE SUPPORT FOR THE AUTOMATIC COMMAND
*    FACILITY. THIS IS AN MVS (ONLY) VERSION. DO NOT USE IN MVS/SP
*    OR LATER SYSTEMS, OR ON MULTI-PROCESSORS.
*
*    THE CODE CONSISTS OF AN ATTENTION INTERFACE ROUTINE TO IOS,
*    THAT SCHEDULES AN IQE TO THE IRB CONTAINED IN THIS MODULE,
*    TO RUN UNDER THIS TASK'S TCB.
*    WHEN THE IRB GAINS CONTROL IT ISSUES AN MGCR FOR THE DEVICE
*    CAUSING THE ATTENTION, USING A PREVIOUSLY DEFINED COMMAND.
*
*    SUPPORT FOR THIS FACILITY UNDER OS/360:
*      MODULES: AUTORDR, IGCAR03D, IGCAS03D, IGC0403D, IEEVJCL
*      CODE IS IN THE AMS.SRC LIBRARY
*
*    SUPPORT FOR THIS FACILITY UNDER MVS:
*    IOS   SOME SLOT IN ATTENTION TABLE HAS ADDRESS OF OUR ATTENTION
*            ROUTINE (DYNAMIC STORAGE, PAGE FIXED)
*    CVT   ESPCVT EXTENSION POINTED TO BY CVTxxxx
*
*    ATTRIBUTES: AUTHORIZED; REUS, NOT RENT. NEED NOT BE FIXED/›SWAP
***********************************************************************
         SPACE 1
         MACRO ,
&NM      WTU   &TEXT,&ID=
         GBLC  &MACPLAB
         LCLC  &P,&L
&MACPLAB SETC  '&NM'
         AIF   ('&ID' EQ '').NOID
&P       SETC  'P'
         MACPARM R0,15,&ID,MODE=THREE,OP=ICM  LOAD UNIT NAME
.NOID    AIF   ('&TEXT'(1,1) NE '''').LA
         MACPARM R1,=A(MSG&SYSNDX),OP=L
MSGSECT  CSECT ,
MSG&SYSNDX DC  AL1(L'MSG&SYSNDX.T)
MSG&SYSNDX.T DC C&TEXT
AUTOCMD  CSECT ,
         AGO   .BAL
.LA      MACPARM R1,&TEXT
.BAL     MACPARM R14,WTOMSG&P,OP=BAL
         MEND  ,
         SPACE 1
         MACRO ,
&NM      ALLOT &P=P          DEFINE ONCE FOR PATTERN AND WORK SPACE
         AIF   ('&NM' EQ '').NONM
&NM      DS    0A            NAME DROPPER AND ALIGNMENT
.NONM    ANOP  ,
&P.RBPTR DC    0A(0),X'80',AL3(&P.RB)
&P.RB    DC    AL1(20,S99VRBAL,X'A0',0)  DDNAME ALLOCATION. NO MOUNT
&P.ERROR DC    XL2'0'             ERROR REASON CODE
&P.INFO  DC    XL2'0'             INFORMATION REASON CODE
&P.TXTPP DC    A(&P.UPTUS)        ADDR OF LIST OF TEXT PRTS
&P.RSV01 DC    A(0)               RESERVED
&P.FLAG2 DC    X'00,00,00,00'     FLAGS FOR AUTHORIZED FUN.
.*
&P.UPTUS DC    A(&P.TURDD,&P.TUDSP,&P.TUORG),X'80',AL3(&P.TUDSN)  ALLOC
&P.UPTEM DC    X'80',AL3(&P.TUMEM)
&P.UPDDN DC    X'80',AL3(&P.TUDDN)  ALLOC AND UNALLOC
.*
&P.TURDD DC    Y(DALRTDDN,1,8)
&P.TXRDN DC    CL8'SYSnnnnn'      DDNAME ALLOCATED
&P.TUDSP DC    Y(DALSTATS,1,1),X'08'  DISP=SHR
&P.TUORG DC    Y(DALRTORG,1,2)         RETURN DSORG
&P.TXORG DC    XL2'0'             DSORG OR 0
&P.TUDSN DC    Y(DALDSNAM,1,44)   DSNAME WANTED
&P.TXDSN DC    CL44' '              TO BE COMPLETED
&P.TUMEM DC    Y(DALMEMBR,1,8)    MEMBER NAME
&P.TXMEM DC    CL8' '               TO BE COMPLETED
&P.TUDDN DC    Y(DUNDDNAM,1,8)
&P.TXDDN DC    CL8'SYSnnnnn'      DDNAME TO BE FREED
         MEND  ,
         SPACE 2
         PUNCH ' ORDER AUTOCMD(P) '    EASIER DUMPS
         PUNCH ' SETCODE AC(1)    '
         SPACE 2
ESPCVT   ESPCVT ,
         SPACE 2
         GBLC  &HOOKCVT
         SPACE 1
AUTOCMD  START 0
         B     BEGIN-AUTOCMD(,R15)
         DC    AL1(17),CL17'AUTOCMD &SYSDATE'
BEGIN    STM   R14,R12,12(R13)
         LA    R12,0(,R15)   COPY AND CLEAN
         LA    R11,2048
         LA    R11,2048(R11,R12)
         USING AUTOCMD,R12,R11
         LA    R7,0(,R1)     SAVE PARM POINTER
         LR    R9,R13        SAVE SAVE AREA
         L     R3,=A(SAVEEND-SAVE)
         GETMAIN RU,LV=(R3),BNDRY=PAGE
         LR    R13,R1        NEW SAVE AND WORK AREA
         USING SAVE,R13
         LR    R0,R1
         LR    R1,R3
         SR    R15,R15
         MVCL  R0,R14        CLEAR DYNAMIC AREA FOR SHORTER DUMPS
         ST    R9,4(,R13)
         ST    R13,8(,R9)    LINK SAVE AREAS
         ST    R3,0(,R13)    SAVE LENGTH GOTTEN
         SPACE 1
*---------------------------------------------------------------------*
*   ONLY ONE AUTOCMD TASK MAY BE RUNNING AT A TIME. USE AN ENQUEUE    *
*   TO MAKE SURE: MAJOR SYSMODS    MINOR AUTOCMD                      *
*---------------------------------------------------------------------*
         MVC   LISTENQ(PATENQLN),PATENQ
         ENQ   RET=USE,MF=(E,LISTENQ)
         LTR   R15,R15
         BZ    HAVEENQ
         WTU   'ENQUEUE FAILED'
         B     PGMEXIT
PATENQ   ENQ   (SYSMODS,PATWTO+4,E,7,SYSTEM),RET=USE,MF=L
PATENQLN EQU   *-PATENQ
SYSMODS  DC    CL8'SYSMODS '
         SPACE 1
*---------------------------------------------------------------------*
*   FOR COMMUNICATION WITH THE ATTENTION ROUTINE WE USE A HOOK IN THE *
*   CVT. ON MY SYSTEM THIS IS ESTABLISHED BY (IPL INVOKED) ESPINIT.   *
*   IF THIS MODULE IS NOT IN THE SYSTEM, I DO A GETMAIN FOR CSA HERE; *
*   THIS WASTES A LITTLE SPACE, BUT ALLOWS OTHER ESP DEPENDENT CODE   *
*   TO WORK AS INTENDED.                                              *
*---------------------------------------------------------------------*
HAVEENQ  MODESET KEY=ZERO
         L     R8,CVTPTR
         USING CVTMAP,R8
         ICM   R6,15,&HOOKCVT     IS THERE A HOOK?
         BNZ   HAVEHOOK
         USING ESPCVT,R6
         MVC   WTOT1(12),PATBLDL  PREP FOR BLDL (REUSE WTO)
         BLDL  0,WTOT1       IS ESPINIT MODULE AVAILABLE ?
         LTR   R15,R15
         BZ    ESPMODE         YES; INVOKE IT
         GETMAIN RC,LV=152,SP=241 GET ESP CVT EXTENSION
         LTR   R15,R15
         BNZ   EXTFAIL       OOPS
         XC    0(152,R1),0(R1)    CLEAR IT
         ST    R1,&HOOKCVT   BUILD IT
         LR    R6,R1         USE IT
         B     HAVEHOOK
EXTFAIL  MODESET KEY=NZERO
         WTU   'FAILED TO GET HOOK'
         B     PGMEXIT
PATBLDL  DC    AL2(1,64),CL8'ESPINIT'  E.S.P. SYSTEM INITIALIZATION
         SPACE 1
ESPMODE  LA    R2,WTOT1+4    POINT TO MODULE NAME
         LINK  EPLOC=(R2)    INVOKE ESP INITIALIZATION
         ICM   R6,15,&HOOKCVT     DID ESPINIT FAIL ?
         BNZ   HAVEHOOK
         MODESET KEY=NZERO
         WTU   'NO ESP CVT FOUND OR BUILT'
         B     PGMEXIT
         SPACE 1
HAVEHOOK ESTAE STAEEXIT,CT,PARAM=(R13),TERM=YES,MF=(E,LISTSTAE)
         SPACE 1
         L     R2,PSAAOLD-PSA
         ST    R2,CURRASCB
         MVC   CURRASID,ASCBASID-ASCB(R2)   REMEMBER ASID
         L     R1,PSATOLD-PSA
         ST    R1,CURRTCB
         MVI   CURRATI,X'24'      DEFAULT; IF NONE FOUND
         BAL   R14,INDXFIND  GET A USABLE ATTENTION INDEX
         UNPK  PARID(3),CURRATI(2)   UNPACK NEW ATTENTION INDEX
         MVC   PARID+2(2),BLANKS  CLEAR REST
         TR    PARID(2),HEXTRTAB  MAKE PRINTABLE
         WTU   'IS ATTN INDEX FOR AUTOCMD',ID=PARID
         LA    R0,ATTNEXIT        GET MY EXIT ADDRESS
         ST    R0,4(,R5)          UPDATE IT
         LH    R0,ASCBASID-ASCB(R2)   GET MY ASID
         STH   R0,2(,R5)          REQUEST DISPATCH IN MY ADDRESS SPC
         SR    R15,R15            JUST IN CASE
         ST    R15,UCAUTCNT  RESET PENDING REQUEST COUNTER
         SPACE 1
*OK W/O  SYSEVENT TRANSWAP   NEED FOR ATTENTION EXIT
         SPACE 1
         MODESET KEY=NZERO
         MVC   EXITTIME,PATEXIT   BUILD STIMER EXIT CODE
         EXTRACT DB,FIELDS=COMM,MF=(E,EXTRACT)
         L     R9,DB         GET COMM AREA - GLOBAL
         USING COM,R9
         ICM   R10,15,COMCIBPT    ANY START CIB?
         BZ    SKIPSTRT
         USING CIB,R10
         BAL   R14,PROCCIB   PROCESS CIB TEXT
         BAL   R14,DELCIB    FREE IT
SKIPSTRT QEDIT ORIGIN=COMCIBPT,CIBCTR=1     ONE REQUEST AT A TIME
         LA    R0,ECBTIME    TIMER ECB
         L     R1,COMECBPT   GET ECB
         O     R1,=X'80000000'    LIST END
         STM   R0,R1,ECBLIST    STASH ADDRESS
         MVC   SYSIN(PATDCBLN),PATDCB
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK FOR PARM= TEXT, AND PROCESS                                 *
*---------------------------------------------------------------------*
         LTR   R7,R7         ANY PARM POINTER?
         BZ    SKIPPARM        NO
         L     R7,0(,R7)     LOAD PARM
         LA    R7,0(,R7)     CLEAN
         LTR   R7,R7         ANY ?
         BZ    SKIPPARM        NO
         SR    R15,R15
         ICM   R15,3,0(R7)   LOAD LENGTH
         BZ    SKIPPARM
         LA    R1,2(,R7)     POINT TO TEXT
         BAL   R14,PROCLINE  PROCESS IT
         ZI    PROFLAGS,PFALLOC+PFAMEM  DCB IS FREE
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK FOR A SYSIN DD, AND READ THAT                               *
*---------------------------------------------------------------------*
SKIPPARM LA    R3,2          TRY TWO NAMES - IEFRDER, AND SYSIN
         LA    R2,SYSIN
         USING IHADCB,R2     MAP THE DCB
DDFINDER DEVTYPE DCBDDNAM,DB
         BXLE  R15,R15,CARDFILE
         MVC   DCBDDNAM,=CL8'SYSIN '
         BCT   R3,DDFINDER
         B     TIMELOOP      IF NOT FOUND, SKIP INPUT
CARDFILE OI    PROFLAGS,PFALLOC  DCB IN USE
         BAL   R14,CARDIN    PROCESS INPUT FILE
         DROP  R2
         SPACE 1
*---------------------------------------------------------------------*
*   WAIT FOR WORK                                                     *
*---------------------------------------------------------------------*
TIMELOOP STIMER REAL,EXITTIME,BINTVL==A(02*60*100) WAIT TWO MINUTES
WAITLOOP ZI    PROFLAGS,PFALLOC+PFAMEM  DCB IS FREE; NO ERR MSGS
         WAIT  ECBLIST=ECBLIST
         LM    R2,R3,ECBLIST    GET THE ECB ADDRESSES BACK
         TM    0(R3),X'50'   WAS THE COMM ECB POSTED?
         BZ    TESTTIME
         BO    TERMINAT      STOP REQUESTED
         ICM   R10,15,COMCIBPT    ANY START CIB?
         BZ    TESTTIME
         BAL   R14,PROCCIB   PROCESS CIB TEXT
         BAL   R14,DELCIB    FREE IT
TESTTIME TM    ECBTIME,X'40'   TIMER POPPED ?
         BZ    WAITLOOP      NO; WAIT SOME MORE
         SPACE 2
*---------------------------------------------------------------------*
*   TIMER POPPED - IF ACTIVE ELEMENT, LOOP THROUGH CHAIN TO RESET     *
*---------------------------------------------------------------------*
         TTIMER CANCEL
         XC    ECBTIME,ECBTIME
         ICM   R0,15,UCAUTCNT     ACTIVE REQUESTS ?
         BNP   TIMELOOP             NO
         LA    R4,UCAUTCHN-(AURLINK-AUTOMAP)  GET CHAIN HEAD
         USING AUTOMAP,R4
BACKLOOP ICM   R4,15,AURLINK
         BZ    TIMELOOP      DONE
         TM    AURFLAGS,AURPEND   DID IT TRIGGER ?
         BZ    BACKLOOP
         MODESET KEY=ZERO
         ICM   R7,15,AURUCB
         BZ    BACKPROB        NONE ?
         USING UCBOB,R7
         L     R5,UCBEXTPT   ADDR OF COMMON UCB EXT
         USING UCBCMEXT,R5   COMMON EXTENSION
         CLC   UCBASID,=D'0'      RELINQUISHED ?
         BNE   BACKSKIP             NO; WAIT SOME MORE
         MVC   UCBATI,CURRATI  RESET ATI FOR OUR ATTENTION
BACKPROB ZI    AURFLAGS,AURPEND   RESET IT
         CSDEC UCAUTCNT      UPDATE ACTIVE COUNT
BACKSKIP MODESET KEY=NZERO        GET UCB ADDRESS
         B     BACKLOOP
         SPACE 2
*---------------------------------------------------------------------*
*   PROCESS DSN= REQUEST (NOT STACKABLE)                              *
*        DSN IS IN PARID, RESIDUAL ADDRESS, LENGTH(-1) IN R1, R15     *
*---------------------------------------------------------------------*
PROCDSN  TM    PROFLAGS,PFALLOC   RECURSION ?
         BNZ   PROCDSN0             YES; FAIL
         MVC   SAVER0(4*16),SAVER2     SAVE ENTRY FROM PROCxxxx
         XC    TRTAB,TRTAB   CLEAR TRT
         XC    ERRMSGLM,ERRMSGLM
         ZI    PROFLAGS,PFAMEM    NO MEMBER NAME IN REQUEST
         MVI   TRTAB+C' ',4  EXPECTED STOPPER
         MVI   TRTAB+C'=',8  ALTERNATE STOPPER
         BAL   R14,BLNKTRT   FIND = OR BLANK
         LA    R1,1(,R1)     STEP OVER STOPPER
         SH    R15,=H'1'     FIX UP LENGTH
         BM    MALFORM       TOO BAD
         OI    PROFLAGS,PFALLOC  PREVENT RECURSION
         MVC   V99WORK(PAT99LN),PAT99WK     COMPLETE SVC 99 REQUEST
         STM   R14,R2,SAVER4
         LA    R14,VRB
         STCM  R14,7,VRBPTR+1
         LA    R14,VUPTUS
         ST    R14,VTXTPP    TEXT UNIT POINTER ADDRESS
         LA    R14,VTURDD
         LA    R15,VTUDSP
         LA    R0,VTUORG
         LA    R1,VTUDSN
         LA    R2,VTUMEM
         LA    R3,VTUDDN
         O     R1,=X'80000000'
         O     R2,=X'80000000'
         O     R3,=X'80000000'
         STM   R14,R3,VUPTUS      COMPLETE TU ADDRESSES
         LM    R14,R2,SAVER4
         XC    TRTAB,TRTAB   CLEAR TRT
         MVI   TRTAB+C' ',4  EXPECTED STOPPER
         MVI   TRTAB+C'(',8  ALTERNATE STOPPER FOR PDS MEMBER
         BAL   R14,BLNKTRT   FIND ( OR BLANK
         LTR   R14,R0        HOW LONG WAS DSN?
         BNP   PROCMALF        NONE
         CH    R14,=AL2(L'VTXDSN) NOT TOO LONG ?
         BH    MALFORM         NONE
         STH   R14,VTUDSN+4    NEEDS EXACT LENGTH
         BCTR  R14,0
         EX    R14,EXMVCDSN    MAKE DSN
         LA    R1,1(,R1)     SKIP ( OR BLANK
         SH    R15,=H'1'     ALLOW FOR (
         BM    PROCDALL        NO MORE; ALLOCATE
         XC    TRTAB,TRTAB   CLEAR TRT
         MVI   TRTAB+C' ',4  EXPECTED STOPPER
         MVI   TRTAB+C')',8  ALTERNATE STOPPER FOR PDS MEMBER
         BAL   R14,BLNKTRT   FIND IT
         LTR   R14,R0        ANY MEMBER ?
         BNP   PROCDALL      IGNORE ()
         CH    R14,=AL2(L'VTXMEM) NOT TOO LONG ?
         BH    MALFORM         NONE
         STH   R14,VTUMEM+4    NEEDS EXACT LENGTH
         BCTR  R14,0
         EX    R14,EXMVCMEM    MAKE MEMBER NAME
         OI    PROFLAGS,PFAMEM    SHOW MEMBER SUPPLIED
         ZI    VUPTEM-4,X'80'  RESET END OF LIST ON DSN
PROCDALL LA    R1,VRBPTR     POINT TO RB POINTER
         SVC   99
         MVC   VTXDDN,VTXRDN      PRESERVE DD NAME
         MVC   DCBDDNAM-IHADCB+SYSIN(8),VTXRDN   ALSO INTO DCB
         BXLE  R15,R15,PROCDSNI   READ INPUT
         WTU   'ALLOCATION FAILED',ID=PARID
         B     PROCDSNU
PROCDORG WTU   'HAS UNSUPPORTED DSORG',ID=PARID
         B     PROCDSNU
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK THE DATA SET'S DSORG - ONLY PS AND PO ARE ACCEPTED.         *
*     PS MAY NOT HAVE A MEMBER NAME                                   *
*     PO MUST HAVE A MEMBER NAME                                      *
*---------------------------------------------------------------------*
PROCDSNI CLC   VTXORG,=D'0'  DID SVC 99 RETURN THE DSORG ?
         BNE   PROCHORG        YES; CHECK IT
         TM    PROFLAGS,PFAMEM    DID USER SPECIFY A MEMBER NAME?
         BZ    PROCDSNR        NO; HOPE USER IS CORRECT
         B     PROCDSNP        YES; DO MEMBER NAME LOOKUP
PROCHORG CLI   VTXORG+1,0    VSAM OR OTHER FUNNY ?
         BNE   PROCDORG        YES; FAIL
         TM    VTXORG,255-X'40'-X'02'-X'01' OTHER THAN PS/PO?
         BNZ   PROCDORG        YES; FAIL
         TM    VTXORG,X'40'  SEQUENTIAL
         BZ    PROCDSNS        NO; MAKE SURE OF MEMBER NAME
         TM    PROFLAGS,PFAMEM    SEQ + MEMBER SPECIFIED ?
         BZ    PROCDSNR      NO; READ
         WTU   'MEMBER INVALID FOR SEQUENTIAL DATA SET',ID=PARID
         B     PROCDSNU
         SPACE 1
*---------------------------------------------------------------------*
*   PDS - OPEN A BPAM DCB, AND ISSUE BLDL TO VERIFY THE MEMBER NAME   *
*---------------------------------------------------------------------*
PROCDSNS TM    PROFLAGS,PFAMEM    MEMBER SPECIFIED ?
         BZ    PROCDNOM      NO; FAIL
PROCDSNP MVC   PDSDCB(PATPDSLN),PATPDS  MOVE PATTERN DCB
         LA    R2,PDSDCB
         USING IHADCB,R2     MAP THE DCB
         ST    R2,OCPDSLST
         MVI   OCPDSLST,X'80'     SINGLE DCB, INPUT
         MVC   DCBDDNAM,VTXDDN    COPY DESIRED DD NAME
         LA    R3,TRTAB      GET WORK AREA FOR JFCB
         ST    R3,DXPDSLST   STASH INTO LIST
         MVI   DXPDSLST,X'87'     SINGLE ENTRY, JFCB
         LA    R1,DXPDSLST
         STCM  R1,7,DCBEXLSA  LINK THE EXIT LIST
         STCM  R1,7,DCBEXLSA+SYSIN-IHADCB   ALSO IN THE READ DCB
         RDJFCB ,MF=(E,OCPDSLST)   GET THE JFCB
         USING INFMJFCB,R3
         ZI    JFCBIND1,JFCPDS    RESET MEMBER PRESENT BIT
         XC    JFCBELNM,JFCBELNM  RESET MEMBER NAME
         OI    JFCBTSDM,JFCNWRIT+JFCNDCB   HANDS OFF REAL JFCB
**DEB    MVI   JFCRECFM,X'C0'     RECFM=U
**DEB    MVC   JFCBLKSI,=H'256'
         OPEN  ((R2)),TYPE=J,MF=(E,OCPDSLST)
         TM    DCBOFLGS,DCBOFOPN  DID IT OPEN ?
         BZ    PROCPOOP
         MVC   WTOT1(4),=AL2(1,64)     MAKE BLDL HEADER
         MVC   WTOT1+4(8),VTXMEM
         BLDL  (R2),WTOT1    FIND THE MEMBER
*        FIND  (R2),VTXMEM,D  FIND THE MEMBER
         LR    R4,R15        PRESERVE RETURN
         CLOSE ,MF=(E,OCPDSLST)
         OI    JFCBIND1,JFCPDS    SET MEMBER PRESENT BIT
         MVC   JFCBELNM,VTXMEM    RESTORE MEMBER NAME
         DROP  R2,R3
         LTR   R4,R4
         BZ    PROCDSNR      MEMBER FOUND - PROCEED
         MVC   PARID,=CL4'PDS'
         WTU   'MEMBER NOT FOUND',ID=PARID
         B     PROCDSNU
PROCPOOP WTU   'OPEN FAILED',ID=PARID
         CLOSE ,MF=(E,OCPDSLST)
         B     PROCDSNU
PROCDNOM WTU   'MEMBER REQUIRED FOR PARTITIONED DATA SET',ID=PARID
         B     PROCDSNU
         SPACE 1
PROCDSNR BAL   R14,CARDIN    READ THE DATA SET
PROCDSNU MVI   VRB+1,S99VRBUN  CHANGE REQUEST TO UNALLOCATION
         LA    R1,VUPDDN     POINT TO DD NAME
         STCM  R1,7,VTXTPP+1 COMPLETE
         LA    R1,VRBPTR     POINT TO RB POINTER
         SVC   99            FREE THE DD
PROCDSNX ZI    PROFLAGS,PFALLOC+PFAMEM  RELEASE DSN= LOCKOUT
         LM    R0,R15,SAVER0  RETURN TO ORIGINAL CALLER
         BR    R14
         SPACE 1
PROCDSN0 WTU   'RECURSIVE DSN NOT SUPPORTED',ID=PARID
         B     PROCCIBX      IGNORE
         SPACE 1
PROCMALF WTU   'DSN MISSING',ID=PARID
         B     PROCDSNX      IGNORE
EXMVCDSN MVC   VTXDSN(0),0(R3)    COMPLETE DSN
EXMVCMEM MVC   VTXMEM(0),0(R3)    COMPLETE MEMBER
         SPACE 2
*---------------------------------------------------------------------*
*    READ CARD IMAGES FROM SYSIN DD                                   *
*---------------------------------------------------------------------*
CARDIN   STM   R0,R15,SAVER1
         LA    R2,SYSIN
         USING IHADCB,R2     MAP THE DCB
         DEVTYPE DCBDDNAM,DB
         BXH   R15,R15,CARDEXIT
         STH   R15,ERRMSGLM  RESET ERROR COUNT
         ST    R2,INDCBOC    MAKE OPEN LIST
         MVI   INDCBOC,X'90' SINGLE DCB; INPUT, REREAD
         TM    PROFLAGS,PFAMEM    MEMBER NAME OPEN ?
         BZ    CARDOP19      NO; OPEN NORMALLY
         OPEN  TYPE=J,MF=(E,INDCBOC)
         B     CARDOPCM
CARDOP19 OPEN  MF=(E,INDCBOC)
CARDOPCM TM    DCBOFLGS,DCBOFOPN  DID IT OPEN ?
         BZ    CARDEOF       NO; CLOSE IT ANYWAY, AND CLEAN UP
CARDLOOP GET   SYSIN
         LH    R15,DCBLRECL  GET RECORD LENGTH
         TM    DCBRECFM,X'40'     POSSIBLE V?
         BZ    CARDPROC      NO; PROCESS
         TM    DCBRECFM,X'80'     REALLY U?
         BNZ   CARDPROC      YES; ACCEPT
         LA    R1,4(,R1)     SKIP RDW
         SH    R15,=H'4'     ALLOW FOR RDW LENGTH
CARDPROC MINH  R15,=H'72'    NOT TOO LONG
         CLI   0(R1),C'*'    COMMENT ?
         BE    CARDLOOP
         BAL   R14,PROCLINE  PROCESS IT
         B     CARDLOOP
         SPACE 1
CARDEOF  CLOSE MF=(E,INDCBOC)
         LA    R3,1          MAKE A CONSTANT
         SLR   R4,R4
         ICM   R4,7,DCBBUFCA  GET THE POOL ADDRESS
         BZ    CLRPOOLX      NONE?
         CR    R4,R3         GREATER?
         BNH   CLRPOOLX      NO; NOTHING TO DO
         FREEPOOL (R2)       FREE THE POOL FOR THIS DCB
CLRPOOLX STCM  R3,7,DCBBUFCA  AND MAKE SURE IT SAYS SO
CARDEXIT MVC   SYSIN(PATDCBLN),PATDCB    REFRESH FOR NEXT USE
         XC    ERRMSGLM,ERRMSGLM  RESET ERROR MESSAGE COUNTER
         LM    R0,R15,SAVER1
         BR    R14
         PUSH  PRINT
         PRINT NOGEN
PATDCB   DCB   DDNAME=IEFRDER,DSORG=PS,MACRF=GL,EODAD=CARDEOF
PATDCBLN EQU   *-PATDCB
PATPDS   DCB   DDNAME=IEFRDER,MACRF=R,EXLST=*-*,DSORG=PO
*              RECFM=U,LRECL=256,BLKSIZE=256 KEYLEN=8
PATPDSLN EQU   *-PATPDS
         POP   PRINT
         SPACE 2
*---------------------------------------------------------------------*
*   PROCESS CONTENTS OF ONE TEXT BUFFER (R1-ADDR  R15-LEN)            *
*---------------------------------------------------------------------*
PROCLINE STM   R0,R15,SAVER2
         XC    PARCMD(PARSIZE),PARCMD  CLEAR WORK ENTRY
         B     PROCCOMM
         SPACE 2
*---------------------------------------------------------------------*
*   PROCESS CONTENTS OF ONE CIB                                       *
*---------------------------------------------------------------------*
         PUSH  USING
PROCCIB  STM   R0,R15,SAVER2
         XC    PARCMD(PARSIZE),PARCMD  CLEAR WORK ENTRY
         MVC   CONID,CIBCONID     SAVE CONSOLE ID FOR ERROR RESPONSE
         LA    R1,CIBDATA
         LH    R15,CIBDATLN
         DROP  R10           DONE WITH CIB IN COMMON SECTION
         SPACE 1
*---------------------------------------------------------------------*
*   COMMON TEXT RECORD PROCESSING (R1-ADDR, R15-LENGTH)               *
*     (DURING SCANNING, R15 IS LENGTH - 1                             *
*     SCANNERS SAVE START ADDRESS IN R3                               *
*---------------------------------------------------------------------*
PROCCOMM LTR   R15,R15       ANY ?
         BNP   PROCCIBX
         BCTR  R15,0         DECREMENT FOR TRT PROCESSING
         SPACE 1
         STM   R15,R1,SAVER4      TEMP SAVE AREA
         MODESET KEY=ZERO
         LM    R15,R1,SAVER4      TEMP SAVE AREA
         XC    TRTAB,TRTAB
         MVI   TRTAB+C'=',8  ALTERNATE STOPPER
         BAL   R14,BLNKTRT   FIND STOPPER
         CLM   R2,1,TRTAB+C'=' FOUND AN EQUAL SIGN ?
         BNE   PROCRST
         MVI   0(R1),C' '    REPLACE = BY BLANK
PROCRST  MODESET KEY=NZERO
         LM    R15,R1,SAVER4   RESTORE
         SPACE 1
         MVC   PARID,=C'*id*'  PRESET FOR ERROR
         ZI    PROFLAGS,PFQUOTE   RESET (ON IF QUOTED STRING)
         SPACE 1
         BAL   R14,BLNKSKIP  FIND ID OR DEL OPERAND START
         BM    PROCCIBX      SHOULD NOT HAPPEN
         CLI   0(R1),C''''   IS IT A QUOTED STRING ?
         BNE   PROCNQUO        NO
         OI    PROFLAGS,PFQUOTE   REMEMBER
         LA    R1,1(,R1)
         SH    R15,=H'1'     MUST HAVE ANOTHER QUOTE
         BNP   MALFORM
         BAL   R14,BLNKSKIP  FIND ID OR DEL OPERAND START
         BM    MALFORM       SHOULD NOT HAPPEN
PROCNQUO MVC   PARID,0(R1)   COPY ID OR COMMAND
         BAL   R14,BLNKFIND  FIND END OF OPERAND
         BM    MALFORM         NONE - SHOULD NOT HAPPEN
         CH    R0,=H'6'      PLAUSIBLE ('DELETE')
         BH    MALFORM         NO; FAIL
         SPACE 1
         CLC   =C'DEL',PARID      DELETE AN ENTRY ?
         BE    DELETER              YES; SEPARATE ROUTINE
         CLC   =C'DSN',PARID      READ A DATA SET ?
         BE    PROCDSN              YES; SEPARATE ROUTINE
         SPACE 1
         BAL   R14,BLNKSKIP  FIND NEXT OPERAND
         BM    MALFORM
         AH    R15,=H'1'     LENGTH OF TEXT
         BNP   MALFORM       COMPLETELY BLANK???
         CH    R15,=AL2(L'PARCMD) WILL IT FIT ?
         BNH   PROCSLEN      YES
         LA    R15,L'PARCMD  TRUNCATE
PROCSLEN BAL   R14,BLNKTRIM  REMOVE TRAILING BLANKS
         BNP   MALFORM         FAIL IF NOTHING LEFT
         STC   R15,PARCMDLN  SET UPDATED LENGTH
         BCTR  R15,0
         EX    R15,EXMVCREQ  MOVE REQUESTED COMMAND
         BAL   R14,CHECKNAM  ADJUST DEVICE NAME
         BAL   R14,FINDUCB   LOOK FOR REQUESTED DEVICE
         ICM   R7,15,PARUCB
         BZ    MALFORM         NONE ?
         USING UCBOB,R7
         L     R5,UCBEXTPT   ADDR OF COMMON UCB EXT
         USING UCBCMEXT,R5   COMMON EXTENSION
         MVC   PARATI,UCBATI   RESTORE ATI
         MVC   PARIQTCB,CURRTCB   PASS THE TCB
*---------------------------------------------------------------------*
*   RUN THE EXISTING CHAIN - IF IT EXISTS, JUST REPLACE TEXT, ETC.    *
*---------------------------------------------------------------------*
         ICM   R6,15,&HOOKCVT     DID HOOK DISAPPEAR ?
         BZ    PROCCIBX      YES; HOW?
         USING ESPCVT,R6
         LA    R4,UCAUTCHN-(AURLINK-AUTOMAP)  GET CHAIN HEAD
         USING AUTOMAP,R4
PROCOLD  ICM   R4,15,AURLINK
         BZ    PROCNEW
         CLC   AURID,PARID   SAME ELEMENT ?
         BNE   PROCOLD         NO; TRY NEXT
         MODESET KEY=ZERO
         MVC   AURLINK+4(AURSIZE-4),PARLINK+4   REPLACE TEXT
         MODESET KEY=NZERO
         WTU   'REPLACED',ID=PARID
         B     PROCCIBX
         SPACE 1
*---------------------------------------------------------------------*
*   NOT FOUND - ADD NEW ELEMENT                                       *
*---------------------------------------------------------------------*
PROCNEW  MODESET KEY=ZERO
         L     R0,SPLENAUT   GET ENTRY LENGTH AND POOL
         GETMAIN R,LV=(0)    GET SPACE FOR AN ELEMENT
         MVC   0(PARSIZE,R1),PARLINK   MOVE THE PATTERN
         ICM   R6,15,&HOOKCVT     DID HOOK DISAPPEAR ?
         BZ    PROCCIBZ      YES; HOW?
         USING ESPCVT,R6
         L     R4,UCAUTCHN   GET CHAIN HEAD
PROCIST  ST    R4,0(,R1)     LINK OLD CHAIN TO THIS
         CS    R4,R1,UCAUTCHN    LINK NEW IN FRONT
         BNZ   PROCIST       TRY AGAIN
         LR    R4,R1         SAME AS USING
         CLC   UCBASID,=D'0'      IS UCB AVAILABLE?
         BE    PROCMINE
         OI    AURFLAGS,AURPEND   ELSE MARK PENDING
         CSADD UCAUTCNT      AND INCREASE CLEANUP COUNT
         B     PROCAUTO
PROCMINE MVC   UCBATI,CURRATI     HOOK UNSOLICITED INTERRUPTS
PROCAUTO OI    UCFLAGS,UCAUTO
         MODESET KEY=NZERO
         WTU   'ADDED',ID=PARID
PROCCIBX LM    R0,R15,SAVER2
         BR    14
PROCCIBZ MODESET KEY=NZERO
         B     PROCCIBX
EXMVCREQ MVC   PARCMD(0),0(R1)  COPY TEXT FROM CIBDATA+
EXTRTBLK TRT   0(0,R3),TRTBLANK  FIND A NON-BLANK
EXTRTAB  TRT   0(0,R3),TRTAB     FIND A STOPPER
EXTRTNBK TRT   0(0,R3),TRTNBLNK  FIND A BLANK - OK IF EXHAUSTED
         SPACE 2
*---------------------------------------------------------------------*
*   DELETE AN ENTRY                                                   *
*---------------------------------------------------------------------*
DELETER  ICM   R6,15,&HOOKCVT     DID HOOK DISAPPEAR ?
         BZ    PROCCIBX      YES; HOW?
         USING ESPCVT,R6
         BAL   R14,BLNKSKIP  FIND NEXT OPERAND
         BM    MALFORM
         AH    R15,=H'1'     LENGTH OF TEXT
         BNP   MALFORM       COMPLETELY BLANK???
         SPACE 1
         LA    R0,L'PARID
         CR    R15,R0
         BNH   *+6
         LR    R15,R0
         MVC   PARID,BLANKS  CLEAR IT
         BCTR  R15,0
         EX    R15,EXMVCDEL
         BAL   R14,CHECKNAM  ADJUST DEVICE NAME
         LA    R4,UCAUTCHN-(AURLINK-AUTOMAP)  GET CHAIN HEAD
         USING AUTOMAP,R4
DELELUK  LR    R3,R4         REMEMBER PRIOR ELEMENT
         ICM   R4,15,AURLINK
         BZ    PROCCIBX      › FOUND - ALREADY DELETED OR MISSPELLED
         CLC   AURID,PARID   SAME ELEMENT ?
         BNE   DELELUK         NO; TRY NEXT
         MODESET KEY=ZERO
DELELINK L     R2,AURLINK    GET NEXT ELEMENT AFTER CURRENT
         L     R1,AURLINK-AUTOMAP(,R3)  GET POINTER IN PRIOR ELEMENT
         CS    R1,R2,AURLINK-AUTOMAP(R3)   REMOVE ELEMENT FROM CHAIN
         BNZ   DELELINK      TRY AGAIN
         TM    AURFLAGS,AURPEND   DID IT TRIGGER ?
         BZ    DELEPASS
         CSDEC UCAUTCNT      UPDATE ACTIVE COUNT
DELEPASS ICM   R7,15,AURUCB       GET UCB ADDRESS
         BZ    DELEFREE             NONE?
         USING UCBOB,R7
         L     R5,UCBEXTPT   ADDR OF COMMON UCB EXT
         USING UCBCMEXT,R5   COMMON EXTENSION
         CLC   UCBASID,=D'0'      UNALLOCATED ?
         BNE   DELEFREE      NO; LEAVE IT ALONE
         MVC   UCBATI,AURATI   RESTORE ATI
DELEFREE L     R0,SPLENAUT   GET ENTRY LENGTH AND POOL
         FREEMAIN R,LV=(0),A=(R4)  FREE THE ELEMENT
         MODESET KEY=NZERO
         WTU   'DELETED',ID=PARID
         B     PROCCIBX
EXMVCDEL MVC   PARID(0),0(R3)
         SPACE 1
MALFORM  INCH  ERRMSGLM,WORK=R0
         CH    R0,=H'5'      TOO MANY CONSECUTIVE ERRORS ?
         BH    PROCCIBX
MALFORMD WTU   'REQUEST MALFORMED',ID=PARID
         B     PROCCIBX
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*   SCANNERS FOR BLANK AND NON-BLANK                                  *
*---------------------------------------------------------------------*
BLNKFIND LR    R3,R1         REMEMBER THE START
         SR    R2,R2         JUST IN CASE
         LA    R1,1(R15,R3)  STOPPER IF ALL BLANK
         EX    R15,EXTRTBLK  FIND A BLANK
         LR    R0,R1         COPY STOP ADDRESS
         SR    R0,R3         LENGTH OF OPERAND
         BNP   MALFORM         IMPOSSIBLE?
         SR    R15,R0        RESIDUAL LENGTH FIXUP
         BR    R14
         SPACE 1
BLNKSKIP LR    R3,R1         SCAN START
         SR    R2,R2         JUST IN CASE
         LA    R1,1(R15,R3)  STOPPER IF ALL TEXT
         EX    R15,EXTRTNBK  FIND A NON-BLANK
         ALR   R15,R3        ADD START ADDRESS
         SLR   R15,R1        LESS END = NEW LENGTH (-1)
         BR    R14
         SPACE 1
*---------------------------------------------------------------------*
*   FIND LAST NON-BLANK                                               *
*---------------------------------------------------------------------*
BLNKTRIM STM   R0,15,SAVER4  SAE ALL; RETURN NEW R15
         ICM   R0,15,BLANKS  FOR FASTER COMPARE
         LA    R3,0(R15,R1)  POINT PAST END
BLNKTRL4 SH    R3,=H'4'      LAST FOUR
         SH    R15,=H'4'     FOUR MORE TO GO ?
         BNP   BLNKTRN4        NO; GO TO SINGLES
         CLM   R0,15,0(R3)   FOUR TRAILING BLANKS ?
         BE    BLNKTRL4        YES; TRY PREVIOUS
BLNKTRN4 LA    R3,4(,R3)     RESTORE
         AH    R15,=H'4'
         BNP   BLNKTREX
         SPACE 1
BLNKTRL1 BCTR  R3,0          BACK TO PRIOR BYTE
         CLI   0(R3),C' '    IS IT BLANK?
         BNE   BLNKTREQ        NO; HAVE TRIMMED LENGTH IN R15
         BCT   R15,BLNKTRL1  TRY AGAIN
         B     BLNKTREX        TOO BAD
BLNKTREQ TM    PROFLAGS,PFQUOTE   LOOKING FOR END QUOTE ?
         BZ    BLNKTREX        NO
         BCTR  R15,0         SHORTEN
BLNKTREX LM    R0,R14,SAVER4 SET NEW R15; OLD EVERYTHING ELSE
         LTR   R15,R15       SET CONDITION CODE
         BR    R14           RETURN
         SPACE 1
*---------------------------------------------------------------------*
*   SCANNERS FOR ARBITRARY CHARACTERS (IN TRTAB)                      *
*---------------------------------------------------------------------*
BLNKTRT  LR    R3,R1         REMEMBER THE START
         SR    R2,R2         JUST IN CASE
         LA    R1,1(R15,R3)  STOPPER IF ALL BLANK
         EX    R15,EXTRTAB   FIND A STOPPER
         LR    R0,R1         COPY STOP ADDRESS
         SR    R0,R3         LENGTH OF OPERAND
         BNPR  R14             ZERO
         SR    R15,R0        RESIDUAL LENGTH FIXUP
         BR    R14
         SPACE 2
*---------------------------------------------------------------------*
*   DELETE CURRENT CIB, AND CLEAR COMECB                              *
*---------------------------------------------------------------------*
DELCIB   STM   R0,R15,SAVER2
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R10)
         LM    R0,R15,SAVER2
         BR    14
         SPACE 2
*---------------------------------------------------------------------*
*   WTO ROUTINE - WRITE RESPONSE TO ISSUING CONSOLE                   *
*---------------------------------------------------------------------*
WTOMSG   STM   R0,R15,SAVER3
         LA    R3,WTOT2
         MVC   WTOT1(PATWTOLN),PATWTO
         B     WTOMSGC
WTOMSGP  STM   R0,R15,SAVER3
         LA    R3,WTOT3
         MVC   WTOT1(PATWTOLN),PATWTO
         STCM  R0,15,WTOT2   ADD DEVICE IDENTIFIER
WTOMSGC  SR    R15,R15
         ICM   R15,1,0(R1)   GET TEXT LENGTH
         BNP   WTOMSGEX        NONE - SKIP ???
         BCTR  R15,0
         EX    R15,EXWTOMVC
         LA    R15,1(R15,R3) MESSAGE LENGTH
         LA    R14,WTOT1
         SR    R15,R14
         STH   R15,WTOT1
         SR    R0,R0
         IC    R0,CONID
         WTO   MF=(E,WTOT1)
WTOMSGEX LM    R0,R15,SAVER3
         BR    R14
EXWTOMVC MVC   0(0,R3),1(R1)      MOVE TEXT
PATWTO   WTO   'AUTOCMD          ',MF=L,MCSFLAG=REG0
PATWTOLN EQU   *-PATWTO
         SPACE 2
*---------------------------------------------------------------------*
*   INDXFIND - LOOK FOR AN UNUSED ATTENTION INDEX, OR SEE IF THERE    *
*               IS AN EARLIER COPY NOT CLEANED UP. RETURNS IN R5      *
*---------------------------------------------------------------------*
INDXFIND L     R4,CVTIXAVL
         L     R4,IOCATTBL-IOCOM(,R4)  ATTENTION ADDRESS TABLE
         LR    R3,R4         REMEMBER THE START
         SR    R5,R5         REMEMBER USABLE SLOT
         SR    R0,R0
         ICM   R0,3,=X'07FE' BOTH EMPTY SLOT AND END OF LIST
INDXLOOP LA    R4,8(,R4)     GET NEXT SLOT
         ICM   R1,15,4(R4)   LOAD ATTN ROUTINE ADDRESS
         BZ    INDXBUMP        NONE?
         CLC   0(8,R12),0(R1)  MY CODE?
         BE    INDXFOLD
         CLM   R0,3,0(R1)    EMPTY SLOT?
         BNE   INDXBUMP        NO
         LR    R5,R4         REMEMBER AVAILABLE SLOT
INDXBUMP CLM   R0,3,0(R4)    TABLE END?
         BNE   INDXLOOP
         LTR   R5,R5         DID WE FIND ONE ?
         BNZ   INDXFUND
         WTU   'UNABLE TO FIND AN AVAILABLE ATTENTION INDEX'
         B     PGMEXIT       QUIT
         SPACE 1
INDXFOLD LR    R5,R4         REUSE PREVIOUS SLOT
INDXFUND LR    R4,R5         COPY LOCATED SLOT
         SR    R4,R3         GET OFFSET
         SRL   R4,1          CONVERT TO INDEX
         STC   R4,CURRATI    SAVE FOR PROCESSING
         ST    R5,ATNSLOT    SAVE AND RETURN ADDRESS
         MVC   ATNSAVED,0(R5)       AND CONTENTS OF ATTN TABLE ENTRY
         BR    R14
         SPACE 2
*---------------------------------------------------------------------*
*   STAEEXIT  - CLEAN UP ALL MODS TO THE SYSTEM, THEN EXIT.           *
*               TRY NOTHING FANCY TO AVOID RECURSION.                 *
*---------------------------------------------------------------------*
         PUSH  USING
         DROP  ,
         USING STAEEXIT,R15
STAEEXIT CH    R0,=H'12'     WORK AREA PRESENT ?
         BE    STAEEXT1        NO; JUST RETURN
         STM   R14,R12,12(R13)  JUST IN CASE ...
         LR    R12,R15       COPY BASE
         DROP  R15
         USING STAEEXIT,R12   BASE NEEDED FOR SETRP EXPANSION
         LR    R9,R1         SAVE SDWA ADDRESS
         USING SDWA,R9       DECLARE THE PASSED WORK AREA
         LR    R10,R13       REMEMBER OLD R13
         L     R13,SDWAPARM  GET MAIN WORK AREA
         USING SAVE,R13
         TM    PROFLAGS,PFSTAE  RECURSION ?
         BNZ   STAEEXTZ      YES; GET OUT
         OI    PROFLAGS,PFSTAE  GUARD AGAINST RECURSION
         ESTAE 0             JUST IN CASE
         BAL   R14,CLEANUP
STAEEXTZ LM    R14,R12,12(R10)
STAEEXT1 SLR   R15,R15       NO RETRY
         BR    R14           RETURN TO SYSTEM
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*   CLEANUP   - RESTORE ALL UCB ATI FIELDS, AND REMOVE REQUESTS       *
*               INVOKED BY NORMAL SHUTDOWN, STAE, AND CANCEL EXITS    *
*---------------------------------------------------------------------*
         PUSH  USING
         DROP  ,
         USING SAVE,R13
CLEANUP  STM   R0,R15,SAVER4
         BALR  R12,0         FOR ENTRY FROM STAE EXIT
         USING *,R12
         TTIMER ,            FORGET ABOUT TIMER LOOP
         L     R8,CVTPTR
         USING CVTMAP,R8
         ICM   R6,15,&HOOKCVT     LOCAL CVT INSTALLED ?
         BZ    CLEANUPX             NO; JUST EXIT
         USING ESPCVT,R6          DECLARE IT
         MODESET KEY=ZERO         HAVE FUN
         L     R1,ATNSLOT    GET MODIFIED ATTN TABLE SLOT
         MVC   0(8,R1),ATNSAVED   AND RESTORE IT
         USING AUTOMAP,R4
CLEANTRY ICM   R4,15,UCAUTCHN     ANY REQUESTS ON THE QUEUE ?
         BZ    CLEANUPZ             NO; QUICK RETURN
         CS    R4,R15,UCAUTCHN    REMOVE ENTIRE CHAIN
         BNZ   CLEANTRY             ELSE DO IT AGAIN
*
CLEANEM  ICM   R3,15,AURUCB  GET UCB ADDRESS
         BZ    CLEANFRE        NONE ?
         USING UCBOB,R3
         L     R5,UCBEXTPT   ADDR OF COMMON UCB EXT
         USING UCBCMEXT,R5   COMMON EXTENSION
         MVC   UCBATI,AURATI   RESTORE ATI
CLEANFRE TM    AURFLAGS,AURPEND   DID IT TRIGGER ?
         BZ    CLEANPAS
         CSDEC UCAUTCNT      UPDATE ACTIVE COUNT
CLEANPAS L     R0,SPLENAUT   GET ENTRY LENGTH AND POOL
         LR    R1,R4         COPY ELEMENT ADDRESS
         L     R4,AURLINK    LOAD NEXT ADDRESS OR ZERO
         FREEMAIN R,LV=(0),A=(1)  FREE THE ELEMENT
         LTR   R4,R4         ANY MORE TO DO ?
         BNZ   CLEANEM
CLEANUPZ SR    R15,R15            JUST IN CASE
         ST    R15,UCAUTCNT  RESET PENDING REQUEST COUNTER
         MODESET KEY=NZERO        RESTORE BORING MODE
CLEANUPX LM    R0,R15,SAVER4
         BR    R14
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*   TERMINATE - RESTORE ALL UCB ATI FIELDS, AND REMOVE REQUESTS       *
*---------------------------------------------------------------------*
TERMINAT BAL   R14,CLEANUP   REMOVE ALL EVIDENCE OF THIS JOB
         ESTAE 0             JUST IN CASE
         SPACE 3
*---------------------------------------------------------------------*
*        TERMINATION PROCESSING
*---------------------------------------------------------------------*
PGMEXIT  DEQ   RET=HAVE,MF=(E,LISTENQ) RELEASE MY ENQUEUE
         L     R0,0(,R13)    GET GETMAIN SIZE
         LR    R1,R13        GET GETMAIN AREA
         L     R13,4(,R13)   RESTORE CALLER'S SAVE AREA
         FREEMAIN R,LV=(0),A=(1)  FREE DYNAMIC STORAGE
         L     R14,12(,R13)  RESTORE RETURN ADDRESS
         LA    R15,0         SET RETURN CODE (LIAR - ALWAYS 0)
         LM    R0,R12,20(R13)   RESTORE OTHER REGISTERS
         BR    R14           RETURN
         SPACE 2
*---------------------------------------------------------------------*
*   DO FIX-UP FOR DEVICE NAME DEPENDENT ON SYSTEM                     *
*---------------------------------------------------------------------*
CHECKNAM TM    CVTDCB,X'80'  BASIC MVS SYSTEM (OR EARLIER)?
         BNZ   CHECKZOS        NO; USE DEVICE NUMBER
         CLI   PARID+3,C' '  HAVE THREE BYTE ID ?
         BER   R14             YES; USE IT
         CLI   PARID,C'0'    LEADING ZERO?
         BE    CHECKMVS        YES; SHIFT
         ZI    PARID,C' '    MANGLE THE NAME TO MAKE IT FAIL
         BR    R14
CHECKMVS MVC   PARID(3),PARID+1  SHIFT
         MVI   PARID+3,C' '  MAKE IT PRETTY
         BR    R14           RETURN
         SPACE 1
CHECKZOS CLI   PARID+3,C' '  FEWER THAN FOUR DIGITS ?
         BH    CHECKSOT        NO; CONVERT
         ICM   R0,14,PARID   LOAD IT
         SRL   R0,8          SHIFT
         STCM  R0,7,PARID+1
         MVI   PARID,C'0'    COMPLETE
CHECKSOT BR    R14           FOR REAL zOS, NEED 5 DIGITS, CLC DEV#
         SPACE 2
*---------------------------------------------------------------------*
*   UCB LOOKUP ROUTINE - ID IS IN PARID - COMPARE TO UCBNAME IN MVS   *
*---------------------------------------------------------------------*
         PUSH  USING
FINDUCB  STM   R0,R15,SAVER3
         L     R1,CVTILK2    SCAN UCB LIST
         SR    R7,R7
         L     R0,=X'0000FFFF'    HALFWORD MASK
         USING UCBOB,R7
FINDULUP LH    R7,0(,R1)     LOAD ADDRESS
         NR    R7,R0         ANY ADDRESS ?
         BZ    FINDUNXT        NO
         CR    R7,R0         END OF TABLE ?
         BE    FINDFAIL      NO; TRY AGAIN
         CLC   UCBNAME,PARID   SAME AS REQUESTED DEVICE ?
         BE    FINDUGOT      YES
FINDUNXT LA    R1,2(,R1)     SET FOR NEXT ONE
         B     FINDULUP      TRY AGAIN
FINDFAIL SR    R7,R7         ENTRY NOT FOUND
FINDUGOT ST    R7,PARUCB     RETURN ZERO OR UCB ADDRESS
         LM    R0,R15,SAVER3
         BR    14
         POP   USING
         SPACE 1
SPLENAUT DC    0A(0),AL1(241),AL3(AURSIZE)  PUT IN CSA (FOR NOW)
         SPACE 2
         PUSH  USING
         USING PATEXIT,R15
PATEXIT  LA    R1,ECBTIME-EXITTIME(,R15)
         SR    R0,R0
         LR    R11,R14       REMEMBER RETURN
         POST  (1),(0)       POST THE TIMER ECB
         BR    R11           RETURN
PATESIZE EQU   *-PATEXIT
         POP   USING
         LTORG ,
         SPACE 1
HEXTAB   DC    C'0123456789ABCDEF'
HEXTRTAB EQU   HEXTAB-C'0'
         SPACE 1
****************************************************************
*   ALLOCATION PATTERN
****************************************************************
PAT99WK  ALLOT ,             EXPAND ALLOCATION PATTERN
PAT99LN  EQU   *-PAT99WK       LENGTH TO COPY
         SPACE 1
TRTBLANK DC    256AL1(0)     SEARCH FOR BLANK
         TRENT TRTBLANK,4,C' '    STOP ON BLANK
         SPACE 1
TRTNBLNK DC    256AL1(4)     SEARCH FOR NON-BLANK
         TRENT TRTNBLNK,0,C' '    PASS ON BLANK
SAVE     DSECT ,
         DS    18A
         DS    2A                 ALIGN FOR PRETTIER DUMPS
SAVER0   DS    16A           ALLOC
SAVER1   DS    16A           CARDIN
SAVER2   DS    16A           PROCxxxx
SAVER3   DS    16A           WTO, FINDUCB
SAVER4   DS    16A           PARSE, CLEANUP, ETC.
DB       DS    D
DB2      DS    D
EXITTIME DS    XL(PATESIZE)  COPIED STIMER EXIT CODE
CURRTCB  DC    A(0)          TCB ADDRESS OF THIS TASK
CURRASCB DC    A(0)          ASCB OF THIS TASK
CURRASID DC    H'0'          ASID OF THIS TASK
CURRATI  DC    X'0'          ATTENTION INDEX FOR THIS EXIT
PROFLAGS DS    X             PROCESSING FLAGS
PFSTAE   EQU   X'80'           STAE ENTERED
PFQUOTE  EQU   X'40'           INPUT STRING IS QUOTED
PFALLOC  EQU   X'20'           DD ALLOCATED FOR DSN=
PFAMEM   EQU   X'10'           DSN HAD A MEMBER NAME
ECBLIST  DS    2A            TIMER / COMM ECB ADDRESSES
ECBTIME  DS    A             STIMER ECB
EXTRACT  EXTRACT MF=L
ATNSLOT  DC    A(0)          ADDRESS OF ATTN TABLE SLOT
ATNSAVED DC    XL8'0'          AND ITS ORIGINAL CONTENTS
ERRMSGLM DS    H
CONID    DS    X,X           CONSOLE ID OF COMMAND
         SPACE 1
SYSIN    DS    0A(0),XL(PATDCBLN)'0'   INPUT DCB
INDCBOC  DS    A             OPEN/CLOSE LIST
         SPACE 1
PDSDCB   DS    0A(0),XL(PATPDSLN)'0'  INPUT PDS FOR MEMBER CHECK
DXPDSLST DS    0A(0),X'87',AL3(*-*)     JFCB ADDRESS (BOTH DCBS)
OCPDSLST OPEN  (PDSDCB,INPUT),MF=L
         SPACE 1
WTOT1    DS    Y(0,0),C'AUTOCMD  '
WTOT2    DS    CL4' ',C' '   (OPTIONAL) UNIT
WTOT3    DS    CL64' '       MESSAGE TEXT
LISTSTAE ESTAE STAEEXIT,CT,PARAM=*-*,TERM=YES,MF=L
         SPACE 1
LISTENQ  ENQ   (*-*,*-*,E,7,SYSTEM),RET=USE,MF=L
         SPACE 1
****************************************************************
*   ALLOCATION REQUEST AREA
****************************************************************
V99WORK  ALLOT P=V           EXPAND ALLOCATION PATTERN
         SPACE 1
PATCMD   MAPAUTO PFX=PAR,SECT=
         SPACE 1
         DS    0A                 FOR JFCB ALIGN
TRTAB    DS    XL256         TRT TABLE; FILLED AS NEEDED
SAVEEND  EQU   *
         SPACE 1
COM      DSECT ,
         IEZCOM ,
CIB      DSECT ,
         IEZCIB ,
         TITLE 'A U T O C M D  ***  IOS ATTENTION EXIT'
AUTOCMD  CSECT ,
         PUSH  USING
         DROP  ,
         SPACE 2
ATTNEXIT DS    0D
         STM   R0,R15,0(R13) SAVE ALL
         BALR  R12,0         NEW BASE
         USING *,R12
         LR    R11,R1        GET IOSB ADDRESS
         USING IOSB,R11      ADDRESSABILITY FOR IOSB
         SPACE 1
*---------------------------------------------------------------------*
*    CHECK WHICH ADDRESS SPACE WE WERE DISPATCHED IN. IF NOT OURS,    *
*    RETURN TO IOS+4 IN ORDER TO BE RESCHEDULED UNDER MY ASCB.        *
*    THAT'S A LOT SAFER IN CASE OF ERRORS OR PROBLEMS.                *
*---------------------------------------------------------------------*
         L     R10,IOSSRB    GET SRB ADDRESS
         USING SRB,R10
         L     R9,SRBASCB    GET ADDRESS OF ASCB
         USING ASCB,R9
         LA    R9,0(,R9)       JUST IN CASE
         L     R7,IOSUCB     ADDRESS OF UCB
         USING UCBOB,R7      PROVIDED BY IOS
         L     R6,UCBEXTPT   ADDR OF COMMON UCB EXT
         USING UCBCMEXT,R6   COMMON EXTENSION
         CLC   UCBASID(2),=D'0'   UNSOLICITED?
         BNE   ATTNQUIT        NO - HOW DID I GET HERE?
*THIS    CL    R9,CURRASCB   RUNNING IN MY ADDRESS SPACE ?
*DOES    BE    CONTINUE        YES; CONTINUE
*NOT     MVC   IOSASID(2),CURRASID  ASK FOR RESCHEDULE
*HAPPEN  LM    R0,R15,R0(R13) AND RETURN TO
*IN      LA    R15,4         REDISPATCH UNDER MY ASCB
*TESTS   B     PSARETCD-PSA    RETURN TO IOS
         SPACE 2
*---------------------------------------------------------------------*
*   UNSOLICITED ATTENTION - SEE IF IT IS FOR ONE OF MY UNITS, AND     *
*     SCHEDULE AND IRB/IQE TO MY TCB TO ISSUE AN MGCR WITH THE USER'S *
*     REQUESTED COMMAND.                                              *
*---------------------------------------------------------------------*
CONTINUE CLI   UCBSTAT,UCBONLI    IS THE UCB AVAILABLE AND ON-LINE ?
         BNE   ATTNQUIT             NO, IGNORE
         L     R3,CVTPTR          GET CVT
         USING CVTMAP,R3
         ICM   R8,15,&HOOKCVT     GET USER CVT EXTENSION
         BZ    ATTNQUIT             NO; SHOULD NOT HAPPEN
         USING ESPCVT,R8
         TM    UCFLAGS,UCAUTO     IS THERE AT LEAST ONE ACTIVE AUTO  ?
         BZ    ATTNQUIT             NO, SKIP
         LA    R5,UCAUTCHN-(AURLINK-AUTOMAP)  GET 'AUTO' CHAIN POINTER
         USING AUTOMAP,R5
         SPACE 2
AUTCHLP  ICM   R5,15,AURLINK      NEXT 'AUTO' ENTRY
         BZ    ATTNQUIT             NONE; IGNORE ATTENTION
         L     R1,AURUCB          GET THE UCB ADDRESS
         LA    R1,0(,R1)          OUT HIGH BYTES, IF ANY
         CR    R7,R1              IS THIS THE CURRENT UCB ?
         BNE   AUTCHLP              NO, TRY NEXT ONE
         TM    AURFLAGS,AURPEND   ANY PENDING BITS ON ?
         BNZ   ATTNQUIT             YES; DON'T START IT AGAIN
         SPACE 2
         MVC   UCBATI,AURATI      RESTORE WORKING ATI
         OI    AURFLAGS,AURPEND   FLAG THIS ELEMENT 'PENDING'
         ST    R5,AURIQPRM    STASH IQE INVOKATION PARAMETER (GPR 1)
         LA    R0,IRBMGCR    ADDRESS OF EXECUTED CODE
         ST    R0,IRBEP      STASH IT
         LA    R2,IRB        GET IRB PROPER
         ST    R2,AURIQIRB   PASS IT
         MVC   AURID(3),UCBNAME   UPDATE 'UCBNAME', MAY HAVE BEEN SWAP
         LA    R1,AURIQE     GET IQE ADDRESS
         ST    R1,IRBNXAVL   IDENTIFY IQE IN IRB
         LCR   R1,R1              COMPLEMENT TO SEC. LVL EXIT EFFECTOR
         L     R15,CVT0EF00  GET ADDRESS OF SECOND LVL EXIT EFFECTOR
         BALR  R14,R15            AND DEFECT
         CSADD UCAUTCNT      INCREASE ACTIVE COUNT
         SPACE 2
ATTNQUIT LM    R0,R15,0(R13)      RESTORE ALL REGISTERS
         BR    R14                AND RETURN
         SPACE 1
         POP   USING
         EJECT
*    THE IRB TO SCHEDULE THE COMMANDS, AND THE CODE TO DO SO
*
IRBPFX   DS    8D            NEED ?
IRB      DS    0D
         DC    2F'0'         PPSAV, APSW
         DC    AL1(0,IRBLEN/8),X'400C'  LENGTH, FLAGS, ETC.
IRBEP    DC    A(IRBMGCR)    ENTRY POINT ADDRESS
         DC    X'070C0000,00000000'  OLD PSW
         DC    2F'0'         LIST / LINK FIELDS
         DC    16F'0'        REGISTER SAVE AREA
IRBNXAVL DC    F'0'          NXAVAIL FIELD POINTS TO CURRENT IQE
         SPACE 2
         PUSH  USING
         DROP  ,
         USING IRBMGCR,R15
IRBMGCR  LA    R2,IRBWTO          ADDRESS OF OUTPUT AREA
         LR    R3,R1              SAVE INPUT PARAMETER
         USING AUTOMAP,R3
         MVI   2(R2),X'80'        SET 'ROUT/DESC EXIST' FLAG
         SR    R14,R14            IC REG
         IC    R14,AURCMDLN       GET LENGTH OF PROCNAME
         BCTR  R14,0
         MVI   IRBCMD,C' '
         MVC   IRBCMD+1(L'IRBCMD-1),IRBCMD  BLANK IT
         EX    R14,EXMVCCMD
EXMVCCMD MVC   IRBCMD(0),AURCMD   COPY COMMAND
         DROP  R15
         WTO   MF=(E,(R2))        ISSUE WTO
         MVI   2(2),0             RESET 'ROUT/DESC' FLAG
         LR    R1,R2              COPY AGAIN
         SR    R0,R0              ZERO FOR MGCR
         SVC   34                 ISSUE MGCR
         NI    AURFLAGS,255-AURPIQE  RESET 'IQE BUSY' FLAG
         SVC   3             EXIT
         POP   USING
         SPACE 2
         DS    0F
IRBWTO   DC    AL2(IRBWTOND-*,0)   LENGTH / FLAGS
IRBCMD   DC    CL64' '             * AUTO *'
IRBWTOND EQU   *
         DC    X'10004200'   SYS STATUS MSG => MAST CONS, U.R. POOL
         DS    0D              FORCE ALIGNMENT FOR LENGTH CALCULATION
IRBLEN   EQU   *-IRB         LENGTH OF IRB
BLANKS   DC    CL(L'PARID)' '     FOR BLANKING
         EJECT
         PRINT NOGEN
MYUCB    DSECT ,             JUST IN CASE
         IEFUCBOB ,
         SPACE 2
AUTOMAP  MAPAUTO ,
         SPACE 2
         CVT   DSECT=YES
         SPACE 2
         IHAPSA ,
         SPACE 2
         IHAASCB ,
         SPACE 2
         IHASRB ,
         SPACE 2
         IECDIOCM ,          IOS COMMON AREA
         SPACE 2
         IECDIOSB ,          IOSB
         SPACE 2
         DCBD  DSORG=PS,DEVD=DA
         SPACE 2
         IHASDWA ,
         SPACE 2
         IEFZB4D0 ,          SVC 99 ALLOCATION REQUEST
         IEFZB4D2 ,          TEXT UNIT VALUES
         SPACE 2
MYJFCB   DSECT ,
         IEFJFCBN ,
         SPACE 2
         YREGS ,
         END
