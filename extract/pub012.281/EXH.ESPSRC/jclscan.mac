JCK      TITLE 'J C L S C A N  ***  JCL CHECKER'
*  GOTTEN FROM TST2SSG.MEMOREX.MODS.  THIS CAME FROM
*    FILE 313 OF THE CBT MODS TAPE - ANY LEVEL 260 OR PREVIOUS
*    (IT WAS DELETED IN VERSION 261 OF THE CBT TAPE.)
         MACRO
&NAME    MSG   &TEXT
         LCLA  &A
&A       SETA  K'&TEXT-2+4
&NAME    DC    H'&A',H'0',C&TEXT
         MEND
         SPACE 1
         PUNCH '  ORDER JCLSCAN(P) '  MAKE DUMPS EASIER TO READ GP05282
         PUNCH ' ALIAS JCK '      AVOID EXTRANEOUS TYPING       GP05282
         SPACE 2
         GBLC  &PROCLIB           PROCLIB DSNAME
         GBLA  &LENPLIB           LENGTH OF PROCLIB DSNAME
         SPACE 2
&PROCLIB SETC  'SYS1.PROCLIB'
&LENPLIB SETA  K'&PROCLIB
         SPACE 2
JCLSCAN  START 0             AVOID BLANK CSECT DUE TO EQU       GP05282
RLINK    EQU   8                  INTERNAL LINKAGE REGISTER
RTEXT    EQU   9                  TEXT ADDRESS REGISTER
WORKREG  EQU   10                 WORK AREA ADDRESS REGISTER
BASEREG  EQU   11                 BASE REGISTER
         SPACE 2
PALLOC   EQU   X'80'               INDICATE PROCLIB ALLOCATED
PQUOTE   EQU   X'40'               INDICATE PROCLIB IN QUOTES
DQUOTE   EQU   X'20'               INDICATE DATASET IN QUOTES
QEDSW    EQU   X'10'               INDICATE QED INVOCKED            JAN
DPASS    EQU   X'08'               INDICATE DATASET PASS THRU
FTIME    EQU   X'04'               FIRST TIME THRU SWITCH
DALLOC   EQU   X'01'               INDICATE DATASET ALLOCATED
         TITLE 'J C L S C A N   -   TSO JCL SYNTAX CONVERTER INTERFACE'
***********************************************************************
*                                                                     *
*  UPDATED WILLIAM SMITH, SYSTEMS PROGRAMMER                          *
*  20JUN80 MEMOREX CORPORATION                                        *
*          LSSG DATA PROCESSING SERVICES                              *
*          TECHNICAL SUPPORT                                          *
*          DEPT. 8205 - MS 10-35                                      *
*          SAN TOMAS AT CENTRAL EXPRESSWAY                            *
*          SANTA CLARA, CALIFORNIA  95052                             *
*          (408)-987-3919                                             *
*                                                                     *
*  .  MVS/3.8 SE 1.1 - ACF/VTAM R2 (8004)                             *
*  .  CHANGED THE NAME OF THE COMMAND FROM 'SYNTAX' TO 'JCLSCAN'      *
*     (THIS MAY NECESSITATE CHANGES IN THE QED INTERFACE; HOWEVER,    *
*     SINCE WE USE SPF (IBM 5740-XT8) THE NECESSITY OF THESE CHANGES  *
*     WILL NOT BE VERIFIED)                                           *
*  .  RE-WROTE THE HELP ENTRY AND INCORPORATED IT WITHIN THE SOURCE   *
*     AS COMMENTS                                                     *
*  .  CHANGED ALL MESSAGES TO REFLECT 'JCLSCAN' RATHER THAN 'SYNTAX'  *
*  .  THE JCL TO BE SCANNED MUST CONTAIN A JOB CARD; OTHERWISE, THE   *
*     CONVERTER WILL ISSUE A RETURN CODE OF 12                        *
*  .  SVC - TYPE III - IGC0023F                                       *
*     NOTE:  INSTALLATIONS WILL HAVE TO CHANGE THE SETC FOR &PROCLIB  *
*            TO SPECIFY A DEFAULT PROCLIB AGAINST WHICH TO RESOLVE    *
*            CATALOGUED JCL PROCEDURES                                *
*                                                                     *
***********************************************************************
*                                                                     *
*)F FUNCTION -
*  THE JCLSCAN COMMAND IS USED TO INVOKE THE OS/MVS CONVERTER TO BOTH
*  ANALYZE AND ASCERTAIN THE SYNTACTIC CORRECTNESS OF OS/VS JOB CONTROL
*  LANGUAGE.  IF AN ERROR IS FOUND, THE LAST JOB CONTROL LANGUAGE
*  STATEMENT ENCOUNTERED IS DISPLAYED ALONG WITH A CORRESPONDING ERROR
*  MESSAGE.
*)X JCLSCAN -
*         JCLSCAN  'DATASET-NAME'  PROCLIB('PROCLIB')
*  REQUIRED - 'DATASET-NAME'
*  DEFAULTS - THE PROCLIB PARAMETER DEFAULTS TO THE MEMOREX TEST
*             PROCEDURE LIBRARY, 'TEST.PROCLIB'.
*)O OPERANDS  -
*))DATASET-NAME - THE NAME OF THE DATASET CONTAINING THE OS/VS JOB
*     CONTROL LANGUAGE TO BE SYNTAX SCANNED.  THE JCLSCAN COMMAND MAY
*     ONLY SPECIFY ONE (1) DATASET-NAME AT A TIME.  IF THERE IS MORE
*     THAN ONE JOB IN THE DATASET TO BE SCANNED, ONLY THE FIRST
*     OCCURRENCE OF A JOB WITHIN A JOB STREAM WILL BE SCANNED.
*
*    NOTE:  THE OS/MVS CONVERTER ISSUES THE FOLLOWING RETURN CODES
*    BASED UPON ITS ANALYSIS OF THE JCL:
*           0 - JCL CONTAINS NO ERRORS
*           4 - JCL ERRORS WERE FOUND
*           8 - CONVERTER FAILURE
*          12 - JCLSCAN COMMAND OR USER ERROR
*    A RETURN CODE OF 12 MOST COMMONLY APPEARS IN JOB STREAMS WHICH
*    DO NOT HAVE A 'JOB' STATEMENT AS REQUIRED BY THE MVS CONVERTER.
*
*))PROCLIB - THE NAME OF THE PROCEDURE LIBRARY TO BE USED TO RESOLVE
*    JOB CONTROL LANGUAGE PROCEDURES.
*                                                                     *
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX      TSO JCL SYNTAX CHECKER                     *
*                                                                     *
*                                                                     *
* RELEASE -    1.0         SYNTAX MVS RELEASE                         *
*                                                                     *
* AUTHOR -     MICHAEL LEE EMIGH                                      *
*              UNITED AIR LINES - EXOKF COMPUTER CENTER               *
*              1200 W. ALGONQUIN ROAD                                 *
*              ELK GROVE VILLAGE, ILLINOIS                            *
*              PHONE: 312-952-4371
*                                                                     *
*                                                                     *
* FUNCTION -   PROVIDES INTERFACE BETWEEN TSO TERMINAL USER AND THE   *
*              O/S CONVERTOR FOR SYNTAX CHECKING JCL AND OBTAINING    *
*              THE CONVERTOR MESSAGES AT THE TSO TERMINAL.            *
*                                                                     *
* INPUT -      STANDARD LINKAGE CONVENTIONS                           *
*              REGISTER 1 - ADDRESS OF COMMAND PROCESSOR PARAMETER    *
*                           LIST
*                                                                     *
*                                                                     *
* OUTPUT -     RETURN TO TERMINAL MONITOR PROGRAM                     *
*              REGISTER 15 CONTAINS RETURN CODE AS FOLLOWS            *
*                 0 - JCL CONTAINS NO ERRORS                          *
*                 4 - JCL ERRORS FOUND                                *
*                 8 - CONVERTER FAILURE                               *
*                12 - SYNTAX COMMAND OR USER ERROR                    *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTERANT, REUSABLE, REFRESHABLE                      *
*                                                                     *
* NOTES -      THIS ROUTINE INTERFACES TO THE MVS CONVERTER           *
*              TO PROVIDE TSO JCL SYNTAX CHECKING.                    *
*                                                                     *
*              *** THIS ROUTINE REQUIRES SVC 236 (USER WRITTEN        *
*                  SYNTAX SVC) TO EXECUTE.                            *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
SYNTAX   CSECT                     TSO JCL SYNTAX CHECKER
         SAVE  (14,12),T,*         SAVE CALLERS REGISTERS
         LR    BASEREG,R15         LOAD BASE ADDRESS
         USING SYNTAX,BASEREG      EST. ADDRESSIBILITY
         LR    R9,R1               SAVE CPPL ADDRESS
         LA    R4,CORESIZE         LOAD MAIN STORAGE REQUIRED
         GETMAIN R,LV=(R4)         GET MAIN STORAGE
         LR    WORKREG,R1          SET WORK AREA BASE REGISTER
         USING SYNTAXD,WORKREG     EST. WORK AREA ADDR
         USING CPPL,R9             GIVE ASSM CPPL ADDRESS
         LR    R0,R1               SET R0 FOR CLEAR
         LR    R1,R4               SET R1 FOR CLEAR LENGTH
         SR    R3,R3               CLEAR PAD CHAR AND 0 LENGTH
         MVCL  R0,R2               CLEAR WORK AREA
         ST    R13,SAVE+4          CHAIN OLD SAVE AREA
         ST    WORKREG,8(R13)      CHAIN NEW SAVE AREA
         LR    R13,WORKREG         LOAD O/S SAVE AREA ADDRESS REG
         ST    R9,ACPPL            SAVE CPPL ADDRESS
         L     R5,CPPLECT          IS PRIMARY COMMAND NAME SYN???   JAN
         USING ECT,R5                 *                             JAN
         CLC   ECTPCMD(3),SYNTAX+5    *                             JAN
         BE    SYNSET                 * YES, MUST NOT BE FROM QED   JAN
         DROP  R5                     *                             JAN
         L     R5,CPPL+16          LOAD FIFTH WORD OF CPPL          JAN
         LTR   R5,R5                   *  AND TEST FOR ZERO         JAN
         BZ    SYNSET                  *   IS ZERO, NOT FROM QED    JAN
         CLC   8(4,R5),=C'QEDS'    IS QED INDICATOR PRESENT         JAN
         BNE   SYNSET                  *   NO                       JAN
         ST    R5,ECBPTR           STORE FIFTH WORD  ECB LIST PTR   JAN
         OI    FLAGS,QEDSW         SET INDICATOR, INVOCED BY QED    JAN
         EJECT
SYNSET   DS    0H                                                   JAN
         LA    R1,IOPLPARM         LOAD I/O PARM LIST ADDRESS
         USING IOPL,R1             SET IOPL DSECT
         MVC   IOPLUPT,CPPLUPT     MOVE UPT ADDRESS
         MVC   IOPLECT,CPPLECT     MOVE ECT ADDRESS
         LA    R15,IOPLEND         LOAD PUTLINE PB ADDRESS
         ST    R15,IOPLIOPB        STORE IN IOPL
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,IOPLECB          STORE IN PARM LIST
         DROP  R1
         LA    R1,PARMLIST         LOAD PARM LIST ADDRESS
         USING PPL,R1              SET DAIR PB DSECT
         MVC   PPLUPT,CPPLUPT      MOVE UPT ADDRESS
         MVC   PPLECT,CPPLECT      MOVE ECT ADDRESS
         MVC   PPLCBUF,CPPLCBUF    MOVE CMD BUFFER ADDRESS
         ST    WORKREG,PPLUWA      STORE WORK AREA ADDRESS
         LA    R0,APDL             LOAD PDL ANSWER AREA ADDRESS
         ST    R0,PPLANS           STORE IN PARSE LIST
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,PPLECB           STORE IN PARSE LIST
         MVC   PPLPCL,=A(PCL)      MOVE PCL ADDRESS TO PPL
         LINK  ,SF=(E,PARSLINK)    LINK TO PARSE ROUTINE
         LTR   R15,R15             NORMAL COMPLETION?
         BZ    PARSEOK             YES, THEN CONTINUE
         LA    R0,MSGPARSE         LOAD PARSE ERROR MSG ADDRESS
         B     INTERROR            GO RETURN TO CALLER
         EJECT
PARSEOK  DS    0H                  PARSE OK
         MVI   MEMBER,X'40'        SET CLEAR CHARACTER
         MVC   MEMBER+1(7),MEMBER  CLEAR MEMBER NAME
         MVI   DSN,X'40'           SET CLEAR CHARACTER
         MVC   DSN+1(43),DSN       CLEAR DSNAME
         MVI   PASSWORD,X'40'      SET CLEAR CHARACTER
         MVC   PASSWORD+1(7),PASSWORD CLEAR PASSWORD
         L     R2,APDL             LOAD PDL ADDRESS
         USING PDL,R2              SET PDL DSECT
         NC    PDLDSN+6(2),PDLDSN+6 TEST IF DSNAME PRESENT
         BNZ   MOVEDSN             IF PRESENT THEN SKIP CODE
         MVC   DSN(4),=C'CNTL'     SET DEFAULT TO CNTL
         MVC   LDSN,=H'4'          LENGTH IS 4
         B     CKMEMBER            GO CHECK FOR MEMBER
         SPACE 2
MOVEDSN  DS    0H                  MOVE DSNAME
         L     R15,PDLDSN          LOAD DSNAME ADDRESS
         LH    R14,PDLDSN+4        LOAD DSNAME LENGTH
         STH   R14,LDSN            SAVE DSNAME LENGTH
         BCT   R14,MOVEDSN2        MINUS 1 FOR EX AND TEST LENGTH   JAN
         CLI   0(R15),C'$'         LENGTH OF DSNAME IS 1, IS IT '$' JAN
         BNE   MOVEDSN2               *  NO                         JAN
         TM    FLAGS,QEDSW         WERE WE ATTACHED BY QED          JAN
         BO    PROCCHK                *  YES                        JAN
         SPACE 2
MOVEDSN2 DS    0H                  TURN OFF SWITCH, USE DSNAME      JAN
         NI    FLAGS,255-QEDSW     TURN OFF SWITCH, USE DSNAME      JAN
         MVC   DSN(0),0(R15)       MOVE DSNAME
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         TM    PDLDSN+6,X'40'      DSNAME IN QUOTES?
         BZ    CKMEMBER            NO, THEN SKIP CODE
         OI    FLAGS,DQUOTE        INDICATE DSN IN QUOTES
         SPACE 2
CKMEMBER DS    0H                  CHECK FOR MEMBER NAME
         NC    PDLDSN+14(2),PDLDSN+14 MEMBER NAME ENTERED
         BZ    CKPSWD              IF NOT THEN GO CHECK PSWD
         L     R15,PDLDSN+8        LOAD MEMBER NAME ADDRESS
         LH    R14,PDLDSN+12       LOAD MEMBER LENGTH
         BCTR  R14,0               MINUS 1 FOR EXECUTE
         MVC   MEMBER(0),0(R15)    MOVE MEMBER
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         SPACE 2
CKPSWD   DS    0H                  CHECK FOR PASWORD
         NC    PDLDSN+22(2),PDLDSN+22 PASSWORD ENTERED
         BZ    PROCCHK             IF NOT THEN GO SETUP DAIR
         L     R15,PDLDSN+16       LOAD PASSWORD ADDRESS
         LH    R14,PDLDSN+20       LOAD PASSWORD LENGTH
         BCTR  R14,0               MINUS 1 FOR EXECUTE
         MVC   PASSWORD(0),0(R15)  MOVE PSWD
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         EJECT
PROCCHK  DS    0H                  CHECK PROCLIB
         MVC   PROCDSNM,=CL44'&PROCLIB.' SET DEFAULT DSN
         MVI   PROCDSNL+1,&LENPLIB SET DEFAULT DSNAME LENGTH
         OI    FLAGS,PQUOTE        INDICATE PROCLIB DSNAME IN QUOTES
         NC    PDLKPROC,PDLKPROC   ANOTHER PROCLIB SPECIFIED?
         BZ    PROCALOC            NO, GO ALLOCATE PROCLIB
         L     R15,PDLPROCN        LOAD DSNAME ADDRESS
         LH    R14,PDLPROCN+4      LOAD DSNAME LENGTH
         STH   R14,PROCDSN         SAVE DSNAME LENGTH
         BCTR  R14,0               MINUS 1 FOR MOVE
         MVC   PROCDSN+2(0),0(R15) MOVE PROC DSNAME
         EX    R14,*-6             EXECUTE FOR PROPER LENGTH
         TM    PDLPROCN+6,X'40'    PROCLIB DSNAME IN QUOTES?
         BO    PROCALOC            YES, THEN SKIP CODE
         NI    FLAGS,255-PQUOTE    TURN OFF PROCLIB DSNAME IN QUOTES
         SPACE 2
PROCALOC DS    0H                  ALLOCATE PROCLIB
         LA    R1,DAIRPARM         LOAD DAIR PARM ADDRESS
         USING DAPL,R1             SET DAPL DSECT
         MVC   DAPLUPT,CPPLUPT     MOVE UPT ADDRESS
         MVC   DAPLECT,CPPLECT     MOVE ECT ADDRESS
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,DAPLECB          STORE ECB ADDRESS IN DAPL
         MVC   DAPLPSCB,CPPLPSCB   MOVE PSCB ADDRESS
         LA    R0,DAIRPB           LOAD DAIR PB ADDRESS
         ST    R0,DAPLDAPB         STORE IN DAPL
         MVC   DAIRPB(LDAPB08),MDAPB08 MOVE IN PATTERN DAPB
         LA    R2,DAIRPB           LOAD PB ADDRESS
         USING DAPB08,R2           SET DAIR PB08 DSECT
         MVC   DA08DDN,=CL8'IEFPDSI' SET DDNAME REQUESTED
         LA    R0,PROCDSN          LOAD PROCLIB DSN ADDRESS
         ST    R0,DA08PDSN         STORE IN DAIR PARM LIST
         TM    FLAGS,PQUOTE        DSNAME IN QUOTES?
         BO    *+8                 YES, THEN SKIP NEXT INSTR
         OI    DA08CTL,DA08UID     INDICATE PREFIX W/ USERID
         LINK  ,SF=(E,DAIRLINK)    LINK TO DAIR ROUTINE
         LTR   R15,R15             PROCLIB ALLOCATED?
         BNZ   DAIRFAIL            NO, THEN GO TO DAIR FAIL ROUTINE
         EJECT
DAIRDS   DS    0H                  ALLOCATE DATASET
         OI    FLAGS,PALLOC        INDICATE PROCLIB ALLOCATED
         TM    FLAGS,QEDSW         ARE WE USING QED INCORE DATA     JAN
         BO    CONVERT               * YES, BYPASS ALLOC & OPEN     JAN
         LA    R2,DAIRPB           RELOAD DAIR PB ADDRESS
         LA    R1,DAIRPARM         RELOAD DAIR PARM LIST ADDRESS
         MVC   DAIRPB(LDAPB08),MDAPB08 RESET PATTERN DAPB
         LA    R0,PDSN             LOAD DSNAME ADDRESS
         ST    R0,DA08PDSN         STORE IN DAPB
         MVC   DA08DDN,=CL8'IEFRDER' SET DDNAME
         MVC   DA08MNM,MEMBER      SET MEMBER NAME
         MVC   DA08PSWD,PASSWORD   SET PASSWORD
         TM    FLAGS,DQUOTE        DSNAME IN QUOTES
         BO    *+8                 YES, THEN SKIP NEXT STMT
         OI    DA08CTL,DA08UID     INDICATE NAME NOT IN QUOTES
         LINK  ,SF=(E,DAIRLINK)    LINK TO DAIR ROUTINE
         LTR   R15,R15             DAIR COMPLETE NORMALLY?
         BZ    DAIROK              YES, THEN CONTINUE
         TM    FLAGS,DPASS+DQUOTE  BEEN HERE BEFORE OR DSN IN QUOTES?
         BNZ   DAIRFAIL            YES, THEN GO TO DAIR FAIL ROUTINE
         ST    R15,SAVE            SAVE RETURN CODE
         OI    FLAGS,DQUOTE+DPASS  INDICATE PASSED THRU
         LA    R1,PARMLIST         LOAD PARM LIST ADDRESS
         USING DFPL,R1             SET DFPL DSECT
         MVC   DFPLUPT,CPPLUPT     MOVE UPT ADDRESS
         MVC   DFPLECT,CPPLECT     MOVE ECT ADDRESS
         LA    R0,ATTENECB         LOAD ATTENTION ECB ADDRESS
         ST    R0,DFPLECB          STORE IN DFPL
         LA    R2,DEFPB            LOAD PB ADDRESS
         ST    R2,DFPLDFPB         STORE IN DFPL
         USING DFPB,R2             SET DEFAULT PB DSECT
         LA    R0,PDSN             LOAD DSNAME ADDRESS
         ST    R0,DFPBDSN          STORE IN DFPB
         MVC   DFPBPSCB,CPPLPSCB   MOVE PSCB ADDRESS
         MVI   DFPBCODE,X'04'      SET FUNCTION CODE
         MVI   DFPBCNTL,DFPBUID    INDICATE TO PREFIX USERID
         LINK  ,SF=(E,DEFLINK)     LINK TO DEFAULT ROUTINE
         LTR   R15,R15             TEST FOR SUCCESSFUL COMPLETION
         BZ    DAIRDS              GO RETRY DAIR
         L     R15,SAVE            RELOAD RETURN CODE
         B     DAIRFAIL            GO TO DAIR FAIL ROUTINE
         EJECT
DAIROK   DS    0H                  CONTINE WITH CP
         OI    FLAGS,DALLOC        INDICATE DATASET ALLOCATED
         MVC   SYNDCB(LQSDCB),QSDCB BUILD INPUT DCB
         LA    R0,SYNDCB           LOAD INPUT DCB ADDRESS
         ST    R0,OPLIST           STORE DCB ADDRESSES
         MVI   OPLIST,128          SET UP FOR OPEN INPUT
         OPEN  ,MF=(E,OPLIST)      OPEN JCL DATASET
         TM    SYNDCB+48,X'10'     OPEN SUCCESSFUL?
         BO    CONVERT             CONTINUE
         LA    R0,OPENMSG          LOAD OPEN ERROR MSG ADDRESS
         B     INTERROR            GO TRY IT AGAIN
         SPACE 2
CONVERT  DS    0H                  CONVERT JCL
         MVC   LINE(2),=H'254'     SET LINE LENGTH
         OI    FLAGS,FTIME         SET FIRST TIME SWITCH
         LA    R1,EXITLIST         LOAD PROGRAM EXIT LIST
         LA    R15,=CL8'IEFPDSI'   LOAD PROCLIB DDNAME ADDRESS
         SR    R0,R0               NO OVERRIDES OR OPTIONS
         ICM   R0,8,=X'40'         INDICATE INTERPRET
         SVC   236                 ISSUE CONVERTER INTERFACE SVC
         ST    R15,SAVE            SAVE RETURN CODE
         C     R15,=F'4'           COMP MAXIMUM RETURN CODE
         BH    FAILURE             IF TOO HIGH, THEN CONVERTER ERROR
         BE    RETURN              JCL ERROR
         LA    R0,MSGNERR          LOAD SUCCESS MESSAGE ADDRESS
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         B     RETURN              GO RETURN TO TMP
         SPACE 2
FAILURE  DS    0H
         LH    R2,CONVMSG          LOAD ERROR MESSAGE LENGTH
         BCTR  R2,0                MINUS 1 FOR MOVE
         MVC   MSGTEXT(0),CONVMSG  MOVE MSG TEXT
         EX    R2,*-6              EXECUTE MOVE FOR PROPER LENGTH
         CVD   R15,EXITSAVE        CONVERT RC TO DECIMAL
         OI    EXITSAVE+7,X'0F'    NEUTRALIZE SIGN
         UNPK  MSGTEXT+34(3),EXITSAVE(8) UNPACK RC INTO MSG
         LA    R0,MSGTEXT          LOAD MSG ADDRESS
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         MVC   SAVE(4),=F'8'       SET RETURN CODE TO 8
         B     RETURN              GO RETURN TO TMP
         SPACE 2
INTERROR DS    0H                  INTERNAL ERROR
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         MVC   SAVE(4),=F'12'      SET RETURN CODE TO 12
         EJECT
RETURN   DS    0H
         TM    SYNDCB+48,X'10'     DCB OPEN?
         BZ    RETURN0             NO, THEN SKIP CODE
         CLOSE ,MF=(E,OPLIST)      CLOSE DCB
         FREEPOOL SYNDCB           FREE BUFFER POOLS
         SPACE 2
RETURN0  DS    0H                  CHECK AND FREE PROCLIB
         TM    FLAGS,PALLOC        WAS PROCLIB ALLOCATED
         BZ    RETURN1             IF NOT, THEN SKIP CODE
         MVC   DAIRPB(LDAPB18),MDAPB18 MOVE IN FREE DAIR PB
         LA    R2,DAIRPB           LOAD DAIR PB ADDRESS
         USING DAPB18,R2           SET DAPB DSECT
         MVC   DA18DDN,=CL8'IEFPDSI' MOVE IN PROCLIB DDNAME
         TM    FLAGS,PQUOTE        PROCLIB DSNAME IN QUOTES?
         BO    *+8                 YES, THEN NO PREFIX
         OI    DA18CTL,DA18UID     INDICATE PREFIX USERID
         LA    R1,DAIRPARM           LOAD DAIR PARM LIST ADDR
         LINK  ,SF=(E,DAIRLINK)    LINK TO DAIR ROUTINE
         EJECT
RETURN1  DS    0H                  CHECK FOR DS ALLOCATION
         TM    FLAGS,DALLOC        DATASET ALLOCATED?
         BZ    RETURN3             IF NOT THEN SKIP CODE
         MVC   DAIRPB(LDAPB18),MDAPB18 MOVE IN FREE DAIR PB
         MVC   DA18DDN,=CL8'IEFRDER' MOVE IN DDNAME
         LA    R0,PDSN             LOAD DSNAME ADDRESS
         ST    R0,DA18PDSN         STORE IN DAIR PB
         MVC   DA18MNM,MEMBER      MOVE IN MEMBER NAME
         TM    FLAGS,DQUOTE        DSNAME IN QUOTES?
         BO    RETURN2             YES, THEN SKIP CODE
         OI    DA18CTL,DA18UID     INDICATE TO PREFIX USERID
         SPACE 2
RETURN2  DS    0H                  FREE JCL DATASET
         LA    R1,DAIRPARM         LOAD DAIR PARM LIST ADDR
         LINK  ,SF=(E,DAIRLINK)    LINK TO DAIR ROUTINE
         SPACE 2
RETURN3  DS    0H                  RETURN TO CALLING ROUTINE
         IKJRLSA APDL              RELEASE PDL STORAGE
         LA    R0,CORESIZE         LOAD FREEMAIN LENGTH
         LR    R1,WORKREG          LOAD FREEMAIN ADDRESS
         L     R8,SAVE             RELOAD RETURN CODE
         L     R13,SAVE+4          RELOAD OLD SAVE AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
         LR    R15,R8              RETURN CODE TO REG 15
         RETURN (14,12),RC=(15)    RETURN TO CALLER
         EJECT
DAIRFAIL DS    0H                  DAIR FAIL ANALYSIS ROUTINE
         XC    PARMLIST(40),PARMLIST CLEAR PARM LIST
         LA    R1,PARMLIST         LOAD PARM LIST ADDRESS
         USING DFPARMS,R1          SET DAIR FAIL DSECT
         LA    R0,DAIRPARM         LOAD PARAMETER BLOCK ADDRESS
         ST    R0,DFDAPLP          STORE IN DAIR FAIL PB
         ST    R15,PARMLIST+32     SAVE RETURN CODE
         LA    R15,PARMLIST+32     LOAD RC ADDRESS
         ST    R15,DFRCP           STORE RC IN DAIR FAIL PB
         LA    R0,=H'1'            LOAD CALL TYPE *************
         ST    R0,DFIDP            STORE TYPE IN DAIR FAIL PB
         MVC   DFCPPLP,ACPPL       MOVE CPPL ADDRESS TO DAIR FAIL PB
         LA    R0,PARMLIST+36      LOAD ENTRY POINT ADDRESS ADDRESS
         ST    R0,DFJEFF02         STORE EP ADDRESS IN LIST
         LINK  ,SF=(E,DFLINK)      LINK TO DAIR FAIL ANALYSIS ROUTINE
         B     RETURN              GO RETURN TO TMP
         EJECT
PUTLINE  DS    0H                  PUTLINE ROUTINE
         PUTLINE PARM=IOPLPARM+16,OUTPUT=((0),DATA),MF=(E,IOPLPARM)
         BR    RLINK               RETURN TO CALLING ROUTINE
         EJECT
         PRINT NOGEN
         PRINT GEN                                                  SBG
         SPACE
CONVMSG  MSG   ' JCLSCAN CONVERTER FAILURE  RC=000'
MSGPARSE MSG   ' PARSE ERROR '
OPENMSG  MSG   ' OPEN UNSUCCESSFUL FOR INPUT DATASET'
MSGNERR  MSG   ' NO JCL ERRORS FOUND BY JCLSCAN'
         SPACE
         PRINT GEN
         SPACE 2
DAIRLINK LINK  EP=IKJDAIR,SF=L
         SPACE 2
PARSLINK LINK  EP=IKJPARS,SF=L
         SPACE 2
DEFLINK  LINK  EP=IKJEHDEF,SF=L
         SPACE 2
DFLINK   LINK  EP=IKJEFF18,SF=L
         EJECT
EXITLIST DS    0A                  PROGRAM SVC EXIT LIST
         DC    A(SYNJMGR)          JCL EXIT ENTRY POINT
         DC    A(SYNMMGR)          MSG EXIT ENTRY POINT
         DC    A(SYNSMGR)          STMT EXIT ENTRY POINT
         DC    A(SYNTXTX)          TEXT EXIT ENTRY POINT
         DC    A(0)                NOT USED
         DC    AL1(128),AL3(0)     NOT USED
         SPACE 1
MDAPB08  DS    0F                  DAIR PB 08 MAP
         DC    H'8',H'0',F'0',A(0)
         DC    3CL8' ',4F'0',2CL8' '
         DC    XL4'08080800',F'0'
         DC    CL8' '
         SPACE 1
LDAPB08  EQU   *-MDAPB08           LENGTH OF DAIR PB 08
         SPACE 1
MDAPB18  DS    0F                  DAIR PB 18 MAP
         DC    H'24',H'0',F'0',A(0)
         DC    2CL8' ',CL2' '
         DC    X'0800',CL8' '
         SPACE 1
LDAPB18  EQU   *-MDAPB18           LENGHT OF DAIR PB 18
         SPACE 1
         LTORG
         SPACE 1
         DS    0F
         EJECT
         PRINT NOGEN
         PRINT GEN                                                  SBG
         SPACE 2
QSDCB    DCB   DSORG=PS,EODAD=EODAD,DDNAME=IEFRDER,MACRF=GL
         SPACE 2
LQSDCB   EQU   *-QSDCB
         SPACE 2
PCL      IKJPARM DSECT=PDL
PDLDSN   IKJPOSIT DSNAME,PROMPT='DATASET NAME'
PDLKPROC IKJKEYWD
         IKJNAME 'PROCLIB',SUBFLD=PDLPROC
PDLDEBUG IKJKEYWD
         IKJNAME 'DEBUG'
PDLPROC  IKJSUBF
PDLPROCN IKJPOSIT DSNAME,PROMPT='PROCLIB DATASET NAME'
         IKJENDP
         SPACE 2
         PRINT GEN
         TITLE 'J C L S C A N     -   JCL MANAGER'
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX   JCL MANAGER                                   *
*                                                                     *
* FUNCTION -   GET A JCL CARD FROM THE INPUT JCL DATASET AND RETURN   *
*              THE ADDRESS TO THE CONVERTER INTERFACE IN REGISTER 1.  *
*                                                                     *
***********************************************************************
         SPACE 2
SYNJMGR  DS    0H                  SYNTAX JCL ACB EXIT
         STM   R2,R14,EXITSAVE     SAVE CALLERS REGISTERS
         SPACE 2
SKIPCARD DS    0H
         TM    FLAGS,QEDSW         ARE WE USING QED INCORE DATA     JAN
         BNO   GETCARD                *  NO, DO NORMAL GET          JAN
         L     R2,ECBPTR           TELL QED WE WANT A RECORD        JAN
         POST  (R2)                   *                             JAN
         LA    R2,4(R2)            NOW WAIT FOR THAT RECORD         JAN
         WAIT  1,ECB=(R2)             *                             JAN
         L     R1,0(R2)            LOAD RECORD ADDR OR INDICATOR    JAN
         LA    R1,0(R1)               *  AND CLEAR HIGH ORDER BYTE  JAN
         XC    0(4,R2),0(R2)       CLEAR OUT THE ECB FOR NEXT TIME  JAN
         C     R1,=F'8'            TEST (8=CNACEL, 4=EOF,)          JAN
         BH    TESTCARD              *  MUST BE ADDRESS OF RECORD   JAN
         B     EODAD                 *  MUST BE EOF OR CANCEL       JAN
         SPACE 2
GETCARD  DS    0H                  GET A JCL CARD FROM DATASET
         GET   SYNDCB              GET A JCL CARD FROM DATASET
         EJECT
TESTCARD DS    0H                  COMMENT CARD?
         CLC   =C'//*',0(R1)       COMMENT CARD?
         BE    SKIPCARD            YES, THEN SKIP CARD
         TM    FLAGS,FTIME         FIRST TIME THRU?
         BZ    SYNJEXIT            NO, THEN EXIT
         CLC   =C'//',0(R1)        JCL CARD?
         BNE   SKIPCARD            NO, THEN SKIP CARD
         NI    FLAGS,255-FTIME     TURN OFF FIRST TIME FLAG
         SPACE 2
SYNJEXIT DS    0H                  EXIT WITH CARD ADDRESS IN REG 1
         LM    R2,R14,EXITSAVE     RELOAD REGISTERS
         SR    R15,R15             RETURN CODE = 0
         BR    14                  RETURN TO CONVERTER INTERFACE
         SPACE 2
EODAD    DS    0H
         LM    R2,R14,EXITSAVE     RELOAD REGISTERS
         LA    R15,4               RETURN CODE = 4
         BR    14                  RETURN TO CONVERTER INTERFACE
         TITLE 'J C L S C A N     -   STATEMENT IMAGE MANAGER '
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX STATEMENT IMAGE MANAGER                         *
*                                                                     *
* FUNCTION -   MOVE A JCL IMAGE FROM THE CONVERTER WORK AREA INTO     *
*              SYNTAX COMMAND WORK AREA.                              *
*                                                                     *
***********************************************************************
         SPACE 2
SYNSMGR  DS    0H                  SYNTAX STATEMENT IMAGE HANDLER
         LR    R15,R0              LOAD MSG LENGTH
         AH    R0,=H'4'            ADD 4 FOR PREFIX
         SLL   R0,16               SHIFT AND FILL WITH ZEROS
         ST    R0,STMTIMAG         BUILD PUTLINE LENGTH
         BCTR  R15,0               MINUS 1 FOR MOVE
         MVC   STMTIMAG+4(0),0(R1) MOVE STATEMENT IMAGE
         EX    R15,*-6             EXEC FOR PROPER LENGTH
         SR    R15,R15             RETURN CODE = 0
         BR    14                  RETURN TO CONVERTER INTERFACE
         TITLE 'J C L S C A N     -   MESSAGE MANAGER '
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX   MESSAGE MANAGER                               *
*                                                                     *
* FUNCTION -   MOVE AN ERROR MESSAGE FROM THEN CONVERTER WORK AREA    *
*              INTO A SYNTAX COMMAND WORK AREA AND WRITE THE ERROR    *
*              MESSAGE TO THE TSO TERMINAL.                           *
*                                                                     *
***********************************************************************
         SPACE 2
SYNMMGR  DS    0H                  SYNTAX MSG ACB EXIT
         STM   R2,R14,EXITSAVE     SAVE CALLERS REGISTER
         LTR   R15,R0              LOAD MSG LENGTH
         BZ    SYNMEXIT            IF ZERO LENGTH, EXIT
         AH    R0,=H'4'            COMPUTE LENGTH - ASA CNTL
         SLL   R0,16               SHIFT AND FILL WITH ZEROS
         ST    R0,MSGTEXT          STORE LENGTH IN MSG PREFIX
         BCTR  R15,0               MINUS 1 EXECUTED MOVE
         MVC   MSGTEXT+4(0),0(R1)  MOVE STATEMENT IMAGE
         EX    R15,*-6            EXECUTE FOR PROPER LENGTH
         CLC   =C'IEF653I SUBSTITUTION JCL',MSGTEXT+14 SUB JCL
         BE    SYNMEXIT           IF SUB JCL SKIP STMT
         CLC   =C'STMT NO. MESSAGE',MSGTEXT+5 MESSAGE HEADER?
         BE    SYNMEXIT           IF HEADER SKIP STMT
         CLI   MSGTEXT+4,C'-'     FIRST CHARACTER DASH?
         BE    SYNMEXIT           IF HEADER SKIP STMT
         CLI   MSGTEXT+4,C' '     FIRST CHARACTER BLANK?
         BNE   SYNMPUTL           IF NOT THEN GO WRITE LINES
         SH    R15,=H'1'          MINUS 1 FOR COMPARE
         BM    SYNMPUTL           IF NEGATIVE THEN SKIP COMPARE
         CLC   MSGTEXT+5(0),MSGTEXT+4 COMPARE TO BLANKS
         EX    R15,*-6            EXECUTE COMPARE FOR PROPER LENGTH
         BE    SYNMEXIT           IF ALL BLANKS THEN SKIP LINE
         SPACE 2
SYNMPUTL DS    0H                 WRITE STMT AND MSG TO TERMINAL
         LA    R0,STMTIMAG        LOAD STATEMENT IMAGE ADDRESS
         BAL   RLINK,PUTLINE      LINK AND WRITE LINE TO TERMINAL
         LA    R0,MSGTEXT         LOAD MSG TEXT ADDRESS
         BAL   RLINK,PUTLINE      LINK AND WRITE LINE TO TERMINAL
         SPACE 2
SYNMEXIT DS    0H                 RETURN THRU VSAM EXIT
         LM    R2,R14,EXITSAVE    RELOAD CALLERS REGISTERS
         SR    R15,R15            RETURN CODE = 0
         BR    R14                RETURN TO CALLER
         TITLE 'J C L S C A N     -   INTERNAL TEXT PROCESSOR'
***********************************************************************
*                                                                     *
* TITLE -      SYNTAX    INTERNAL TEXT PROCESSOR                      *
*                                                                     *
* FUNCTION -   CHECK FOR CURRENT DATASET ALLOCATION.                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
SYNTXTX  DS    0H                  SYNTAX INTERNAL TEXT EXIT
         STM   R2,R14,EXITSAVE     SAVE CALLERS REGISTERS
         LR    RTEXT,R1            LOAD TEXT STRING ADDRESS
         USING TEXT,RTEXT          ESTABLISH ADDRESSIBILITY
         TM    STRINDCS,DDSTR      DD STATEMENT?
         BZ    TEXTEXIT            NO, THEN SKIP STATEMENT
         TM    STRDINDC,DTXSYOUT+DTXSYSIN SYSIN OR SYSOUT?
         BNZ   TEXTEXIT            YES, THEN SKIP STATEMENT
         SR    R15,R15             CLEAR PARM REGISTER
         ICM   R15,8,=AL1(DSNAMEK) INSERT DSNAME KEY
         LA    R14,STRDKEY         POINT TO START OF TEXT KEYS
         BAL   R7,LOCKEY           LINK AND LOCATE DSNAME KEY
         BNZ   DDDSN               IF FOUND GO PROCESS DSNAME
         SPACE 3
TEXTEXIT DS    0H
         LM    R2,R14,EXITSAVE     RELOAD CALLERS REGISTERS
         SR    R15,R15             RETURN CODE = 0
         BR    R14                 RETURN TO CALLER
         EJECT
DDDSN    DS    0H                  PROCESS DSNAME
         TM    2(R14),X'80'        SUBPARM COUNT?
         BZ    *+8                 NO, THEN SKIP ADJUSTMENT
         LA    R14,1(R14)          SKIP SUBPARM COUNT
         MVI   ENQDSN,X'40'        SET TO CLEAR ENQ DSNAME
         MVC   ENQDSN+1(L'ENQDSN-1),ENQDSN CLEAR DSNAME
         SR    R15,R15             CLEAR LENGTH REGISTER
         ICM   R15,1,2(R14)        INSERT DSNAME LENGTH
         BZ    TEXTEXIT            IF ZERO THEN EXIT
         STH   R15,ENQLNGTH        SAVE LENGTH
         BCTR  R15,0               ADJ LENGTH FOR EXECUTE
         MVC   ENQDSN(0),3(R14)    MOVE DSNAME
         EX    R15,*-6             EXECUTE FOR PROPER LENGTH
         MVI   LINE+4,X'40'        SET LINE CLEAR CHARACTER
         MVC   LINE+5(L'LINE-5),LINE+4 CLEAR LINE TO SPACES
         MVC   LINE+4(0),3(R14)    MOVE DSNAME TO LINE
         EX    R15,*-6             EXECUTE FOR PROPER LENGTH
         SR    R15,R15             CLEAR KEY REGISTER
         ICM   R15,8,=AL1(DISPK)   INSERT DISP= KEY
         LA    R14,STRDKEY         POINT TO START TO TEXT KEYS
         BAL   R7,LOCKEY           LINK AND LOCATE DISP= KEY
         BZ    TEXTEXIT            IF NOT FOUND THEN DISP=NEW
         CLI   1(R14),0            CHECK IF PARMS PRESENT
         BE    TEXTEXIT            IF NO PARMS THEN DISP=NEW
         CLI   2(R14),0            CHECK 1ST PARM LENGTH
         BE    TEXTEXIT            IF MISSING THEN DISP=NEW
         CLC   =C'NEW',3(R14)      DISP=NEW?
         BE    TEXTEXIT            IF NEW THEN EXIT
         L     R2,CVTPTR           LOAD CVT ADDRESS
         LA    R2,CVTFQCB-CVT(R2)  POINT TO FIRST MAJOR QCB ADDRESS
         SPACE 2
GETMJQCB DS    0H                  GET A MAJOR QCB FOR DS
         ICM   R2,7,1(R2)          POINT TO A MAJOR QCB
         BZ    TEXTEXIT            IF ZERO THEN END OF QCB CHAIN
         CLC   SYNQNAME,16(R2)     MAJOR QCB FOR DATA SET?
         BNE   GETMJQCB            NO - GET ANOTHER QCB
         LA    R3,8(R2)            LOAD MINR QCB ADDRESS
         EJECT
GETMIQCB DS    0H                  GET MINOR QCB
         ICM   R3,7,1(R3)          POINT TO A MINOR QCB
         BZ    TEXTEXIT            IF ZERO THEN END OF MINOR QCB CHAIN
         SR    R6,R6               CLEAR LENGTH REGISTER
         IC    R6,16(R3)           GET LENGTH OF NAME IN MINOR QCB
         CH    R6,ENQLNGTH         COMPARE DSNAME LENGTHS
         BNE   GETMIQCB            IF NOT EQ GET ANOTHER MINOR QCB
         BCTR  R6,0                DECREMENT LENGTH BY ONE
         CLC   ENQDSN(0),20(R3)    COMPARE DSNAMES
         EX    R6,*-6              IF LENGTHS EQ COMPARE NAMES
         BNE   GETMIQCB            NOT EQUAL GET ANOTHER QCB
         L     R6,8(R3)            LOAD FIRST QEL ADDRESS
         CLC   =C'SHR',3(R14)      SHR REQUEST?
         BNE   ENQUEUED            NO, THEN MUST BE OLD REQUEST
         TM    12(R6),X'80'        ALREADY ENQUEUED SHR?
         BO    TEXTEXIT            YES, THEN GO EXIT
         SPACE 2
ENQUEUED DS    0H                  DSNAME IS CURRENTLY ENQUEUED
         MVC   LINE+49(L'SYNJMSG),SYNJMSG MOVE IN MSG
         LA    R0,LINE             LOAD LINE ADDRESS
         BAL   RLINK,PUTLINE       LINK AND WRITE LINE TO TERMINAL
         LA    R4,8(R3)            LOAD FIRST QEL ADDRESS
         SPACE 2
QCBFOUND DS    0H                  PROCESS A QUEUE ELEMENT
         ICM   R4,7,1(R4)          POINT TO A QEL
         BZ    TEXTEXIT            IF ZERO THEN END OF QEL CHAIN
         MVI   LINE+4,X'40'        SET CLEAR CHARACTER
         MVC   LINE+5(L'LINE-5),LINE+4 CLEAR LINE TO SPACES
         LH    R14,14(R4)          LOAD ASID
         SLL   R14,2               SHIFT FOR OFFSET INTO ASVT
         L     R7,CVTPTR           LOAD CVT ADDRESS
         L     R7,CVTASVT-CVT(,R7) LOAD ASVT ADDRESS
         L     R7,524(R7,R14)      LOAD ASCB ADDRESS
         ICM   R6,15,172(R7)       LOAD BATCH JOB NAME ADDRESS
         BNZ   *+8                 TEST IF VALID ADDRESS
         L     R6,176(R7)          LOAD TSO/STC ETC ADDRESS
         MVC   LINE+5(8),0(R6)     MOVE JOB NAME TO OUTPUT FIELD
         MVI   LINE+14,C'S'        SET AS SHARED
         TM    12(R4),X'80'        CHK ELE LIST FOR EX OR SHR
         BO    PRINTMSG            SHARED
         MVI   LINE+14,C'E'        SET AS EXCLUSIVE
         SPACE 2
PRINTMSG DS    0H                  WRITE LINE TO TERMINAL
         LA    R0,LINE             LOAD LINE ADDRESS
         BAL   RLINK,PUTLINE       WRITE LINE TO TERMINAL
         B     QCBFOUND
         EJECT
LOCKEY   DS    0H                  LOCATE KEY WITHIN TEXT STRING
         SLR   R1,R1               CLEAR SCRATCH REGISTER
         SLR   R2,R2               CLEAR SCRATCH REGISTER
         SPACE 2
LOCKEY0  DS    0H                  LOAD NUMBER OF PARMS
         ICM   R1,1,1(R14)         SET R1 TO NUMBER OF PARMS
         LA    R14,2(R14)          GET ADDRESS OF FIRST PARM
         BZ    LOCKEY3             BRANCH IF NONE
         SPACE 2
LOCKEY1  DS    0H                  SET R2 TO PARM LENGTH
         ICM   R2,1,0(R14)         SET R2 TO PARM LENGTH
         BM    LOCKEY4             BRANCH IF SUBPARM COUNT
         LA    R14,0(R14,R2)       ELSE GET ADDRESS OF NEXT PARM
         SPACE 2
LOCKEY2  DS    0H                  SKIP OVER LENGTH BYTE
         LA    R14,1(R14)          SKIP OVER LENGTH BYTE
         BCT   R1,LOCKEY1          REPEAT IF MORE PARMS TO SKIP
         SPACE 2
LOCKEY3  DS    0H                  TEST FOR KEY TYPE
         CLI   0(R14),X'FE'        TEST FOR KEY TYPE
         BCR   8,R7                RETURN IF END OF TEXT STRING
         CLM   R15,8,0(R14)        TEST FOR DESIRED KEY
         BNE   LOCKEY0             IF NOT KEY, CONTINUE SEARCH
         SLR   R1,R1               SET RETURN CODE TO ZERO
         BR    R7                  RETURN TO CALLING ROUTINE
         SPACE 2
LOCKEY4  DS    0H                  *
         SL    R2,=A(X'80')        CLEAR HI-ORDER BIT OF SUBPARM CT
         ALR   R1,R2               ADD SUBPARM COUNT TO PARM COUNT
         B     LOCKEY2             RESUME PARM FIELD SCAN
         EJECT
SYNQNAME DC    CL8'SYSDSN' MAJOR NAME FOR TEST ENQ
SYNJMSG  DC    C'<-- CURRENTLY ALLOCATED'
         SPACE 2
         LTORG
         TITLE 'J C L S C A N   -    MISCELLANEOUS DSECTS'
         IEFVKEYS
         EJECT
         IEFTXTFT
         EJECT
         CVT   DSECT=YES
         EJECT
         IKJPPL
         SPACE 1
         IKJIOPL
IOPLEND  DS    0F
         SPACE 1
         IKJDAPL
         EJECT
         IKJCPPL
         SPACE
         IKJECT
         EJECT
         IKJDAP08
         EJECT
         IKJDAP18
         EJECT
         IKJDFPL
         SPACE 2
         IKJDFPB
         EJECT
         IKJEFFDF DFDSECT=YES
         TITLE 'J C L S C A N   -    COMMAND PROCESSOR WORK AREA'
SYNTAXD  DSECT
SAVE     DS    18F            PRIMARY SAVE AREA
EXITSAVE DS    16F            EXIT SAVE AREA
ATTENECB DS    F                   ATTENTION ECB
ECBPTR   DS    F                   POINTER TO QED ECB'S             JAN
APDL     DS    F                   PDL ADDRESS
ACPPL    DS    F                   CPPL ADDRESS
OPLIST   DS    A                   OPEN LIST
FLAGS    DS    H                   INTERNAL FLAGS
DLM      DS    CL2                 SYSIN DELIMITER
PDSN     DS    0H                  PARSE DSNAME
LDSN     DS    H                   LENGTH OF DSNAME
DSN      DS    CL44                DSNAME
PROCDSN  DS    0H                  PROCLIB DSNAME
PROCDSNL DS    H                   PROCLIB DSNAME LENGTH
PROCDSNM DS    CL44                PROCLIB DSNAME
ENQLNGTH DS    H                   LENGH OF ENQUEUE DSNAME
ENQDSN   DS    CL44                ENQUEUE DSNAME
IOPLPARM DS    10A                 I/O PARM LIST
DAIRPARM DS    10A                 DAIR PARM LIST
PARMLIST DS    10A                 GENERAL PARM LIST
DEFPB    DS    10A                 DEFAULT PB
DAIRPB   DS    CL84                DAIR PB AREA
MEMBER   DS    CL8                 MEMBER NAME
PASSWORD DS    CL8                 PASSWORD
SYNDCB   DS    (LQSDCB)C           SYNTAX DCB
         DS    0F                  ALIGN TO FULLWRD
STMTIMAG DS    CL256               STATEMENT IMAGE HOLD AREA
         DS    0F                  ALIGN TO FULLWRD
MSGTEXT  DS    CL256               MESSAGE TEXT
         DS    0F                  ALIGN
LINE     DS    CL256               *
         DS    0F                  ALIGN
         SPACE 2
CORESIZE EQU   *-SYNTAXD
         SPACE 1
         YREGS ,             DEFINE IBM STANDARD REGISTER EQUS  GP05282
         END
