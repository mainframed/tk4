SUBPRT   TITLE 'S U B P R T  ***  SIMPLE PRINT ROUTINE'
***********************************************************************
**                                                                   **
**   PRINTER SERVICE ROUTINE   (CALLED BY '#PRT' MACRO)              **
**                                                                   **
**  PRINTER SERVICES AS REQUESTED BY THIRD BYTE IN R0:               **
**                                                                   **
**  TYPE=PRINT OR DEFAULT                                            **
**   'LINE' IS A RELOCATABLE TERM POINTING TO A V-FORMAT PRINT LINE  **
**   (HALF-WORD LENGTH OF TEXT+1{CC}+4; HALFWORD ZERO; ASA CARRIAGE  **
**   CONTROL; 0-132 BYTES OF EBCDIC TEXT) (CREATED BY A VCON MACRO)  **
**                                                                   **
**  #PRT ADDR,TYPE=BCON      PRINT TEXT; FIRST BYTE IS LENGTH        **
**  #PRT ADDR,TYPE=TEXT      PRINT FIXED LENGTH TEXT, LENGTH=L'ADDR  **
**  #PRT ADDR,LEN,TYPE=TEXT    FIXED LENGTH TEXT, EXPLICIT LENGTH    **
**  #PRT 'QUOTED STRING'     EXPLICIT TEXT, IMPLICIT LENGTH          **
**   PRINTS SPECIFIED TEXT SINGLE SPACE (UNLESS XXXFORCC SET)        **
**                                                                   **
**  ,CC=NO    ON THE ABOVE: NO CARRIAGE CONTROL SUPPLIED             **
**                                                                   **
**                                                                   **
**  TYPE=SPACE (SKIP)                                                **
**    'LINE' IS AN ABS. EXPRESSION IN THE RANGE 1-1K; THE SPECIFIED  **
**     NUMBER OF LINES WILL BE PLACED ON THE CURRENT PAGE, BUT MORE  **
**     THAN ONE PAGE WILL NOT BE FILLED.                             **
**                                                                   **
**  TYPE=RESERVE (KEEP)                                              **
**    'LINE' IS AN ABS. EXPRESSION IN THE RANGE 1-1K; THE SPECIFIED  **
**     NUMBER OF LINES MUST FIT ON THE CURRENT PAGE OR A PAGE EJECT  **
**     IS FORCED ON THE NEXT PRINT REQUEST.                          **
**                                                                   **
**  TYPE=OPEN                                                        **
**    'LINE' IS A RELOCATABLE EXPRESSION POINTING TO A PRINTER WORK  **
**     AREA (DEFINED BY A PRTWRK MACRO). R1 WILL POINT TO A MESSAGE  **
**     UNDER ALL CONDITIONS (OTHER THAN AN X13 ABEND). R15=0 SIGNALS **
**     A GOOD OPEN; =4 MINOR PROBLEM (DCB PARM MISMATCH OR?);        **
**     R15=8 IS USED FOR MISSING OR UNUSABLE DD (E.G., VSAM)         **
**     R15=12 IS A MAJOR ERROR - INVALID PARAMETER, PROGRAM ERROR....**
**    TYPE=OPEN DIFFERS FROM OTHER CALLS IN THAT THE DEV= PARAMETER  **
**     MAY SPECIFY ONLY THE DEVICE NUMBER OF THE PRINTER TO BE OPENED.*
**     IT ALSO CHECKS FOR DUPLICATE WORK AREAS.                      **
**                                                                   **
**  TYPE=CLOSE                                                       **
**     THIS OPTION CLOSES THE DCBS, AND FREEPOOLS BUFFERS FOR ANY    **
**     NUMBER OF DDS, AS SPECIFIED BY THE DEV PARAMETER. THE 'LINE'  **
**     OPERAND IS IGNORED.                                           **
**                                                                   **
**  DEV= KEYWORD: AN ABSOLUTE TERM SPECIFYING BITS CORRESPONDING TO  **
**    PRINT FILES (DEV=1 IS FIRST FILE; DEV=2 THE SECOND, DEV=4 THE  **
**    THIRD, UP TO 128). A LINE MAY BE PRINTED TO MORE THAN ONE FILE **
**    BY ADDING THE BITS TOGETHER (E.G., 1+4=5 FOR FILES 1 AND 3)    **
**                                                                   **
**   R1 - ADDRESS OF RECORD (PRINT); NUMBER OF LINES (SPACE/KEEP)    **
**        PRINTER WORK AREA (OPEN)                                   **
**   R0 :0    RESERVED BYTE                                          **
**   R0 :1    RESERVED - LENGTH FOR PRTF (FIXED TEXT)                **
**   R0 :2  FUNCTION SELECTION BYTE                                  **
**   R0 :3  DEVICE MASK (1 - FIRST PRINT FILE, 2 - SECOND, ETC.)     **
**                                                                   **
**   USER IS REQUIRED TO OPEN AND CLOSE PRINT FILES WITH THE TYPE=   **
**   OPEN AND CLOSE CALLS. EXPLICIT OPEN/CLOSE BY THE USER MAY CAUSE **
**   ABENDS OR LOST OUTPUT.                                          **
**                                                                   **
***********************************************************************
         SPACE 1
         PRINT NOGEN
SUBPRT   START 0
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING SUBPRT,R12
         LR    R9,R13
         LA    R13,SAVEAREA
         ST    R13,8(,R9)    CHAIN
         ST    R9,4(,R13)    LINK
         STM   R0,R1,CALLR0  SAVE FUNCTION AND PRINTER SELECT BITS
         XC    PCODE,PCODE   RESET RETURN CODE
         MVI   FLAGP,0       RESET FLAGS
         CLI   PRSELECT,0    ANY CHOSEN ?
         BNE   *+8           YES
         MVI   PRSELECT,1    ELSE DEFAULT TO PRINTER 1
PRINTOMK MVI   PRNEXT,1      SET PRINTER MASK
         LA    R7,@PRTWORK-4
         B     RECURSE
         SPACE 1
*  SELECT FIRST/NEXT PRINTER WORK AREA CORRESPONDING TO DEV SELECT
*
RECURSE8 OI    PCODE+L'PCODE-1,8  SET MAJOR PROBLEM
         B     RECURSE
RECURSE4 OI    PCODE+L'PCODE-1,4  SET MINOR PROBLEM
RECURSE  SLR   R1,R1
         ICM   R1,1,PRNEXT   GET MASK BIT
         BNZ   PRPRMASK
         L     R13,4(,R13)   RESTORE OLD SAVE AREA
         L     R14,12(,R13)  RESTORE RETURN ADDRESS
         LH    R15,PCODE     SET RETURN CODE
         LM    R0,R12,20(R13)  RESTORE OTHER REGISTERS
         BR    R14           RETUNR TO CALLER
PRPRMASK LA    R7,4(,R7)     POINT TO NEXT PRINTER WORK ADDRESS
         LA    R14,0(R1,R1)  DOUBLE IT FOR NEXT TIME
         STC   R14,PRNEXT
         EX    R1,PRPRTEST   WAS THIS PRINTER SELECTED ?
         BZ    RECURSE       NO
         LA    R15,255       MAKE ALL
         XR    R15,R1        LEAVE UNTESTED BITS
         EX    R15,PRPRREST  TURN OFF CURRENT BIT
         L     R3,CALLR1     RESTORE USER'S LINE PARAMETER
         ICM   R8,15,0(R7)   LOAD WORK ADDRESS FOR THIS PRINTER
         BZ    TESTOPEN      NONE; SKIP THIS
         USING PRTWORK,R8    DECLARE IT
         LA    R10,PR#DCB
         USING IHADCB,R10    DECLARE IT
         TM    DCBOFLGS,DCBOFOPN  WAS IT OPENED?
         BNZ   PRBRANCH      YES; BRANCH BY FUNCTION
TESTOPEN CLI   CALLFUN,FUNOPEN  IS THIS AN OPEN CALL ?
         BNE   RECURSE8      NO; REALLY AN ERROR
PRBRANCH IC    R15,CALLFUN   GET THE CALLER'S FUNCTION REQUEST  GP96068
         CH    R15,=Y(6)     LEGAL VALUE?                       GP96068
         BH    RECURSE8      YES; IGNORE                        GP96068
         SLL   R15,1         DOUBLE TO MAKE OFFSET              GP96068
         LH    R15,PRBRANTB(R15)  GET OFFSET TO FUNCTION POINT  GP96068
         B     SUBPRT(R15)        INVOKE THE REQUESTED FUNCTION GP96068
PRBRANTB DC    Y(SUBLINE-SUBPRT)      0 PRINT A LINE (V-FORMAT) GP96068
         DC    Y(SUBSPACE-SUBPRT)     1 SPACE/SKIP BLANK LINES  GP96068
         DC    Y(SUBKEEP-SUBPRT)      2 RESERVE/KEEP CONTIGUOUS GP96068
         DC    Y(SUBOPEN-SUBPRT)      3 OPEN SINGLE PRT WORK AREA 96068
         DC    Y(SUBCLOSE-SUBPRT)     4 CLOSE ONE OR MORE DDS   GP96068
         DC    Y(SUBFIXED-SUBPRT)     5 PRINT A LINE (F-FORMAT) GP96068
         DC    Y(SUBBCON-SUBPRT)      6 PRINT A LINE (B-CON FORM) 96068
         SPACE 1
*   SUBOPEN : R3 => PRTWRK FOR *ONE* DEVICE TO BE OPENED
*
         DROP  R8,R10
SUBOPEN  L     R15,4(,R13)   GET CALLER'S SAVE AREA
         XC    24(4,R15),24(R15)  ZERO RETURNED R1 - NO MESSAGE
         CLI   PRSELECT,0    MORE THAN ONE DEVICE REQUESTED?
         MVI   PRNEXT,0      FORCE EXIT AFTER CC SETTING
         BNE   RECURSE8      YES; FAIL
         LA    R3,0(,R3)     CLEAN TO CALLER'S STANDARD (AM 24/31)
         LTR   R8,R3         ANY ADDRESS SUPPLIED?
         BNP   RECURSE8      NO; FAIL
         LA    R14,@PRTWORK  POINT TO WORK AREA LISTS
         LA    R15,8         MAX OF EIGHT
OPNDUPCK C     R3,0(,R14)    DUPLICATE AREA?
         BNE   OPNDUPLP      NO
         CR    R7,R14        CURRENT LOCATION?
         BNE   RECURSE8      NO; FAIL
OPNDUPLP LA    R14,4(,R14)   TRY AGAIN
         BCT   R15,OPNDUPCK  FOR ALL 8
         ICM   R14,15,0(R7)  TEST OLD ADDRESS
         BZ    OPNNEWOK        NONE                             GP10159
         CR    R14,R8        SAME ADDRESS?
         BE    OPNDUPOK      YES; COPACETIC
         TM    DCBOFLGS-IHADCB+PR#DCB-PRTWORK(R14),DCBOFOPN  OLD OPEN?
         BNZ   RECURSE8      YES; DON'T CREAM AN OPEN DCB
OPNNEWOK ST    R8,0(,R7)     MAKE IT OFFICIAL                   GP10159
         USING PRTWORK,R8    DECLARE IT
OPNDUPOK LA    R10,PR#DCB
         USING IHADCB,R10    DITTO FOR DCB
         TM    DCBOFLGS,DCBOFOPN  ALREADY OPEN?
         BNZ   RECURSE4      YES; THE USER MAY REGRET THIS
         LA    R0,PRTEXLST   POINT TO EXIT LIST
         STCM  R0,7,DCBEXLSA  AND FORCE OURS IN
         MVC   BADOPMSG+5(8),DCBDDNAM  PROPAGATE NAME TO MSGS
*INOPEN* MVC   PRTGOMSG+17(8),DCBDDNAM    DITTO
         DEVTYPE DCBDDNAM,DEVTYPE  DO WE HAVE THE NEEDED DD CARD?
         BXH   R15,R15,BADOPEN   NO; TOO BAD
         ST    R10,DBP       BUILD OPEN LIST
         MVI   DBP,X'8F'     LAST; OPEN OUTPUT
         OPEN  MF=(E,DBP)    OPEN THE DCB
         TM    DCBOFLGS,DCBOFOPN  FINALLY OPEN?
         BZ    BADOPEN       NO; THE USER MAY REGRET THIS
         CLI   PR#REPCH,C' '  DID USER SPECIFY A REPLACEMENT CHAR?
         BL    OPNUNCH       NO
         MVC   TRTAB+1(1),PR#REPCH  REPLACES FOR ALL PRINTERS
         MVC   TRTAB+2(62),TRTAB+1  PROPAGATE IT
OPNUNCH  TM    PR#FLAGS,PR#FGPRT  RUNNING IN PORTRAIT MODE?
         BZ    OPNOPORT      NO
         LH    R4,PR#CURLN   SAVE LINE COUNT
         XC    PORTRAIT,PORTRAIT  CLEAR OUT
         MVC   PORTRAIT(L'FMT6),FMT6  MAKE PORTRAIT MODE SEQUENCE
         LA    R3,IONIZE
         OI    FLAGP,PR#FGTRN  INHIBIT TRANSLATION
         BAS   R9,SUBSPEC    WRITE IT
         XC    PORTRAIT,PORTRAIT  CLEAR OUT
         MVC   PORTRAIT(L'FMT6L1),FMT6L1  MAKE LEFT MARGIN
         MVC   PORTRAIT+10(L'FMT6R1),FMT6R1  MAKE RIGHT MARGIN
         OI    FLAGP,PR#FGTRN  INHIBIT TRANSLATION
         LA    R3,IONIZE
         BAS   R9,SUBSPEC    WRITE IT
         XC    PORTRAIT,PORTRAIT  CLEAR OUT
         MVC   PORTRAIT(L'FMT6L2),FMT6L2  MAKE TOP MARGIN
         MVC   PORTRAIT+10(L'FMT6R2),FMT6R2  MAKE BOTTOM MARGIN
         OI    FLAGP,PR#FGTRN  INHIBIT TRANSLATION
         LA    R3,IONIZE
         BAS   R9,SUBSPEC    WRITE IT
         STH   R4,PR#CURLN   RESTORE LINE COUNT
OPNOPORT LA    R1,PRTGOMSG   POINT TO THE MESSAGE
SETMSG   L     R15,4(,R13)   CALLER'S WORK AREA
         ST    R1,24(,R15)   SET RETURN MESSAGE ADDRESS
         B     RECURSE       AND RETURN TO CALLER
BADOPEN  LA    R1,BADOPMSG
         OI    PCODE+L'PCODE-1,8  SET MAJOR ERROR
         B     SETMSG        RETURN WITH ERROR MESSAGE
BADOPMSG WTO   ' XXXXXXXX DD MISSING OR UNUSABLE',MF=L,ROUTCDE=13
         SPACE 1
*  THE NEXT LINE IS FOR BUILDING FORMAT 1 AND FORMAT 6 REQUESTS
*  FOR THE ION PRINTER AT ARFB
IONIZE   VCON  ' ',END=IONIZED
PORTRAIT DC    XL80'00'      BACKGROUND FOR CONTROL SEQUENCES
         VCON  *END
FMT1     DC    X'27A5F1'     DEFINE PAGE MODE AS LANDSCAPE
FMT6     DC    X'27A5F6'     DEFINE PAGE MODE AS PORTRAIT
FMT6L1   DC    X'1CD3F54B'   LEFT START POSITION ?
FMT6R1   DC    X'1CD9F9F54B'   RIGHT END POSITION?
FMT6L2   DC    X'1CE3F34B'   TOP LINE?
FMT6R2   DC    X'1CC2F6F94B' BOTTOM LINE
         SPACE 1
*  SUBCLOSE - CLOSE AND FREEPOOL
*
SUBCLOSE TM    PR#FLAGS,PR#FGPRT  RUNNING IN PORTRAIT MODE?
         BZ    SUBCLAND      NO
         XC    PORTRAIT,PORTRAIT  CLEAR OUT
         MVC   PORTRAIT(L'FMT1),FMT1  MAKE LANDSCAPE RESET SEQUENCE
         LA    R3,IONIZE
         OI    FLAGP,PR#FGTRN  INHIBIT TRANSLATION
         BAS   R9,SUBSPEC    WRITE IT
SUBCLAND TM    DCBRECFM,DCBRECCM  MACHINE CODE?
         BZ    CLSASA        NO
         LA    R3,CLSNOP     POINT TO NOP
         BAS   R9,SUBSPEC
CLSASA   ST    R10,DBP       STASH DCB ADDRESS
         MVI   DBP,X'8F'     COMPLETE OPEN LIST
         CLOSE MF=(E,DBP)    CLOSE IT
         LA    R0,1
         CLM   R0,7,DCBBUFCB  GET BUFFER ADDRESS
         BNL   CLSCLS        NEVER BUFFERED
         FREEPOOL PR#DCB     ELSE FREE IT
CLSCLS   XC    0(4,R7),0(R7)  FREE WORK AREA POINTER
         B     RECURSE
         SPACE 1
*  SUBFIXED - ENTRY TO PRINT ONE LINE IN F FORMAT
*    CALLER'S R1 POINTS TO: CARRIAGE CONTROL; ASA FORMAT; ONE BYTE
*                           TEXT (0 - WIDTH AS SET ON #PRTWRK MACRO)
SUBFIXED LTR   R2,R3         MOVE TEXT ADDRESS
         BNP   RECURSE4      NONE; MINOR ERROR
         SLR   R3,R3         CLEAR FOR IC
         IC    R3,PRTXLEN    GET TEXT LENGTH FROM R0:1
         B     SUBCD         CARRIAGE CONTROL DECISION MAKING
         SPACE 1
*  SUBBCON - ENTRY TO PRINT ONE LINE FROM A (BCON) B-CON FORM
*    CALLER'S R1 POINTS TO: CARRIAGE CONTROL; ASA FORMAT; ONE BYTE
*                           LENGTH (AL1); TEXT OF SPEC. LENGTH
SUBBCON  LTR   R2,R3         MOVE STRING ADDRESS
         BNP   RECURSE4      NONE; MINOR ERROR
         SLR   R3,R3         CLEAR FOR IC
         IC    R3,0(,R2)     GET TEXT LENGTH FROM POSITION 1
         LA    R2,1(,R2)     SKIP OVER LENGTH BYTE
         B     SUBCD         CARRIAGE CONTROL DECISION MAKING
         SPACE 1
*  SUBLINE - ENTRY TO PRINT ONE LINE IN V FORMAT
*    CALLER'S R1 POINTS TO: HALFWORD LENGTH OF TEXT + 1 + 4
*                           HALFWORD OF ZERO
*                           CARRIAGE CONTROL; ASA FORMAT; ONE BYTE
*                           TEXT (0 - WIDTH AS SET ON #PRTWRK MACRO)
*    THE CARRIAGE CONTROL IS NOT PRESENT WHEN NOCC BIT IS ON
SUBLINE  LTR   R2,R3         MOVE STRING ADDRESS
         BNP   RECURSE4      NONE; MINOR ERROR
         LA    R2,4(,R3)     POINT TO TEXT PORTION OF RECORD
         LH    R3,0(,R3)     LOAD LENGTH
         SH    R3,=H'4'      ALLOW FOR RDW AND CC
SUBCD    MVI   WORKCC,C' '   SET DEFAULT SINGLE SPACE
         TM    PRTOPTS,FGNOCC  IS CC SUPPLIED?
         BNZ   SUBST         NO; HAVE CORRECT LENGTH, ETC
         MVC   WORKCC,0(R2)  SAVE CALLER'S CC
         LA    R0,1          CONSTANT
         AR    R2,R0         SKIP OVER CARRIAGE CONTROL
         SR    R3,R0         AND ADJUST LENGTH
SUBST    STM   R2,R3,RECADE  STORE ADDRESS AND LENGTH OF TEXT
         CLI   PR#FORCC,0    OVERRIDE REQUEST?
         BE    PRINTOUX      NO
         MVC   WORKCC,PR#FORCC REPLACE BY CONDITIONAL CC
         MVI   PR#FORCC,0    AND RESET SPECIAL REQUEST
PRINTOUX LA    R1,WORKCC     POINT TO CC, MCC AND LINE COUNT
         BAS   R14,CCLOOK    RETRIEVE/REPLACE CC INFORMATION
         TM    PR#FLAGS,PR#FGPUN  PUNCH MODE?
         BNZ   PRPRLINE      YES; JUST PRINT
         LH    R14,PR#CURLN  COPY CURRENT LINE COUNT
         AH    R14,WORKNUM   INCREASE LINES USED ON PAGE
         CH    R14,PR#MAXLN  ROOM ON PAGE ?
         BNH   PRPRLINE      YES; DO THIS LINE
         MVI   WORKCC,C'1'   FORCE PAGE EJECT NEXT
         XC    PR#CURLN,PR#CURLN   AND RESET LINE NUMBER
         LA    R0,1                                             GP96068
         AH    R0,PR#PAGE                                       GP96068
         STH   R0,PR#PAGE    INCREMENT PAGE NUMBER              GP96068
         ICM   R15,15,PR#@HEAD  GET ADDRESS OF PAGE ADDRESS
         BZ    PRPRLINE      NONE; SKIP HEADERS
         LA    R4,4(,R15)    POINT TO PAGE HEADER ARRAY
         ICM   R15,15,0(R15)   GET PAGE NUMBER ADDRESS
         BZ    PRPRNPG#      NONE; SKIP HEADERS
         MVC   DEVTYPE(6),=X'402020202120'  MAKE EDIT MASK
         CVD   R0,DBP        PACK THE PAGE NUMBER
         ED    DEVTYPE(6),DBP+5 SHOW PAGE NUMBER
         MVC   0(4,R15),DEVTYPE+2  MOVE LOW 4 BYTES TO USER
PRPRNPG# ICM   R3,15,0(R4)   ANY PAGE HEADERS?
         BZ    PRPRHEAP      YES
         BAS   R9,SUBSPELL   PROCESS THIS LINE WITH REPLACED CC
         TM    0(R4),X'80'   CONVENTIONAL LIST END ?            GP06289
         BNZ   PRPRHEAP      YES; DONE WITH TITLES              GP06289
PRPRHEAD ICM   R3,15,4(R4)   END OF LIST ?
         BZ    PRPRHEAP      YES
         BAS   R9,SUBSPEC    PROCESS THIS LINE WITH USER'S CC
         LA    R4,4(,R4)     NEXT HEADER LINE ADDRESS
         B     PRPRHEAD      AND CHECK IT
PRPRHEAP MVI   WORKCC,C' '   RESET TO SINGLE SPACE
PRPRLINE LM    R2,R3,RECADE  RESTORE TEXT ADDRESS AND LENGTH
         BAS   R9,SUBSPAM    PRINT WITH REPLACED CC
         B     RECURSE       SEE IF ANOTHER TO DO
         SPACE 1
*  SUBSPACE / SUBKEEP
*
*  SUBSPACE - GENERATE (R3) BLANK LINES OR UNTIL END OF PAGE
*
SUBSPACE LTR   R3,R3         CHECK THE REQUEST
         BM    RECURSE4      ERROR
         BZ    RECURSE       NO-OP
         LH    R5,PR#MAXLN   GET LINES PER PAGE
         SH    R5,PR#CURLN   GET NUMBER AVAILABLE
         BNP   RECURSE       SKIP IF NONE
         CR    R5,R3         SMALLER?                           GP96068
         BNH   *+4+2         YES                                GP96068
         LR    R5,R3         ELSE USE SMALLER OF AVAILABLE & REQUEST
         SLR   R4,R4         CLEAR FOR DIVIDE
         MVI   SPCLINE+4,C'-'  SET FOR TRIPLE SPACE
         D     R4,=F'3'      GET NUMBER OF TRIPLES
         LTR   R5,R5         ANY AT ALL?
         BZ    SPCNTREY      NO
SPCTREY  LA    R3,SPCLINE    POINT TO LINE TO BE PRINTED
         BAS   R9,SUBSPEC    PRINT ONE LINE TRIPLE SPACED
         BCT   R5,SPCTREY
SPCNTREY LTR   R4,R4         GET REMAINDER (0, 1 OR 2)
         BNP   RECURSE       NONE
         MVI   SPCLINE+4,C'0'  SET FOR DOUBLES
         SRA   R4,1          1=>0  2=>1
         BP    SPCDOUCE      EVEN; DOUBLE SPACE
         MVI   SPCLINE+4,C' '  MIXED SINGLES
SPCDOUCE LA    R3,SPCLINE    POINT TO LINE TO BE PRINTED
         BAS   R9,SUBSPEC    PRINT ONE LINE
         B     RECURSE       AND RETURN
         SPACE 1
*  SUBKEEP - PAGE EJECT UNLESS # OF LINES IN R3 WILL FIT CURRENT PAGE
*
SUBKEEP  LTR   R3,R3         CHECK THE REQUEST
         BM    RECURSE4      ERROR
         BZ    RECURSE       NO-OP
         AH    R3,PR#CURLN   ADD CURRENT LINE COUNT TO REQUEST
         CH    R3,PR#MAXLN   WILL IT FIT?
         BNH   RECURSE       YES; NO ACTION
         OI    PR#CURLN,X'7E'  FORCE NEW PAGE ON NEXT LINE
         B     RECURSE       AND RETURN
*  SUBSPEC - PROCESSES CARRIAGE CONTROL AND ONE LINE, PASSED IN R3
*    RETURNS ON R9; NO ERROR CONDITIONS SIGNALLED.
SUBSPEC  MVC   WORKCC,4(R3)  PASS CARRIAGE CONTROL
SUBSPELL LA    R2,5(,R3)     POINT TO TEXT
         LH    R3,0(,R3)     GET TOTAL LENGTH
         SH    R3,=H'5'      MAKE TEXT LENGTH
SUBSPAM  LA    R1,WORKCC     POINT TO CC WORK AREA
         BAS   R14,CCLOOK    CONVERT
         TM    PR#FLAGS,PR#FGPUN  PUNCH?
         BNZ   SUBSPUN       YES; NO LINE COUNT
         LH    R0,WORKNUM    GET INCREMENT FOR THIS LINE
         AH    R0,PR#CURLN                                      GP96068
         STH   R0,PR#CURLN   INCREMENT LINE COUNT               GP96068
SUBSPUN  LA    R15,SUBPRINT  POINT TO PUT ROUTINE
         BASSM R14,R15       INVOKE IN 24-BIT ADDRESSING MODE
         BR    R9            RETURN TO CALLER
         SPACE 1
*  SUBPRINT - PROCESS ONE PRINT LINE; TEXT ADDR IN R2, LENGTH IN R3
*    CONTROL CHARACTERS PRESET IN WORKMCC AND WORKCC
*    RETURNS ON R14 IN CALLER'S MODE
SUBPRINT STM   R14,R3,PRINTSV2  SAVE REGISTERS
         LH    R15,PR#MAXTX  GET MAXIMUM TEXT LENGTH            GP96109
         CR    R3,R15        IS REQUEST LONGER?                 GP96109
         BNH   *+6           NO; HONOR IT                       GP96109
         LR    R3,R15        ELSE TRUNCATE                      GP96109
         TM    PR#DCB+DCBRECFM-IHADCB,DCBRECCM MACHINE CODE?
         BZ    PRINTSAS      NO; ASA
         LA    R0,PR#RDW     POINT TO RECORD
         TM    PR#DCB+DCBRECFM-IHADCB,DCBRECF  FIXED/UNDEFINED?
         BZ    *+8           NO; ASSUME V OR D
         AH    R0,=H'4'      SKIP RDW
         MVC   PR#CC,WORKMCC USE MACHINE CODE
         PUT   PR#DCB,(0)    PRINT IT
         BAS   R14,SUBPCLRL  CLEAR TEXT LINE                    GP96109
         CLI   WORKMCC,X'89' PAGE EJECT?
         BE    PRINTMCP      YES
         CLI   WORKMCC,X'8B' INITIAL EJECT ?
         BNE   PRINTSAS
PRINTMCP MVC   PR#CURLN,=H'1'  RESET LINES ON THIS PAGE
PRINTSAS LTR   R3,R3         TEST TEXT LENGTH
         BNP   PRINTSBK      BLANK LINE IF NOTHING TO MOVE
         LA    R15,5(,R3)    COMPLETE RECORD LENGTH
         BCTR  R3,0          LENGTH FOR EXECUTE
         STH   R15,PR#RDW    SAVE
         EX    R3,PRINTMVC   MOVE TO LONG RECORD
         TM    PR#FLAGS,PR#FGPUN+PR#FGTRN SUPPRESS TRANSLATION?
         BNZ   PRINTSBK      YES
         TM    FLAGP,PR#FGTRN TEMPORARY SKIP ?
         BNZ   PRINTNTR      YES; RESET
         EX    R3,PRINTRAN   ELIMINATE UNWANTED CHARACTERS
PRINTNTR NI    FLAGP,255-PR#FGTRN RESET ONE-TIME INHIBIT
PRINTSBK TM    PR#DCB+DCBRECFM-IHADCB,DCBRECCM MACHINE CODE?
         BNZ   PRINTSEX      YES; JUST GET OUT NOW
         MVC   PR#CC,WORKCC  USE ASA CONTROL CODE
         LA    R0,PR#RDW     POINT TO RECORD
         TM    PR#DCB+DCBRECFM-IHADCB,DCBRECCC  ANY CONTROLS?   GP96109
         BNZ   PRINTSPN      YES; DO NORMALLY                   GP96109
         LH    R14,PR#RDW    GET RDW LENGTH                     GP96109
         BCTR  R14,0         ALLOW FOR MISSING CARRIAGE CONTROL GP96109
         SLL   R14,16        FINAGLE                            GP96109
         STCM  R14,15,PR#RDW+1  REPLACE CC                      GP96109
         LA    R0,PR#RDW+1   ALLOW FOR MISSING CC BYTE          GP96109
PRINTSPN TM    PR#DCB+DCBRECFM-IHADCB,DCBRECF  FIXED/UNDEFINED? GP96109
         BZ    *+8           NO; ASSUME V OR D
         AH    R0,=H'4'      SKIP RDW
         PUT   PR#DCB,(0)    PRINT IT
         BAS   R14,SUBPCLRL  CLEAR TEXT LINE                    GP96109
         CLI   WORKCC,C'1'   PAGE EJECT ?
         BNE   PRINTSEX      NO; EXIT
         MVC   PR#CURLN,=H'1'  RESET LINES ON THIS PAGE
PRINTSEX LM    R14,R3,PRINTSV2  RESTORE
         BSM   0,R14         RETURN IN CALLER'S ADDRESSING MODE
SUBPCLRL MVI   PR#TEXT,C' '                                     GP96109
         LH    R15,PR#MAXTX  GET MAXIMUM TEXT LENGTH            GP96109
         EX    R15,PRINTCLR  CLEAR PRINT LINE AND THEN SOME     GP96109
         BR    R14           RETURN TO CALLER                   GP96109
PRINTCLR MVC   PR#TEXT+1(0),PR#TEXT  CLEAR TEXT                 GP96109
PRINTMVC MVC   PR#TEXT(0),0(R2)  MOVE TEXT (SKIP RDW, CARR.CTL)
PRINTRAN TR    PR#TEXT(0),TRTAB  TRANSLATE TO WEED OUT UNPRINTABLES
SAVEAREA DC    18A(0)        PRINT SUBR. SAVE AREA
PRINTSV2 DC    6A(0)         LOWER PRINT ROUTINE SAVE
TRTAB    DC    C' ',63C'\'   CONVERT 01-3F TO BACK SLASH
         DC    192AL1(*-TRTAB)  NO TRANSLATION OF REMAINDER
         SPACE 1
*  CARRIAGE CONTROL LOOKUP TABLE
*  ENTRY:  R1 -> ASA CC + 3 BYTES
*  RETURN:       ASA CC, MCC, XL2'INCREMENT'
*    R15, R0 CLOBBERED
CCLOOK   LA    R15,CCTAB     POINT TO CARRIAGE CONTROL TABLE
         LA    R0,(CCTABX-CCTAB+1)/(CCTAB2-CCTAB)  NUMBER OF ENTRIES
         TM    PR#FLAGS,PR#FGPUN  PUNCH MODE?
         BZ    CCLOOKLP      NO
         LA    R0,1          ONLY BASIC ENTRY IS USEFUL
CCLOOKLP CLC   0(1,R1),0(R15)  SAME CC?
         BE    CCLOOKAT      YES; ADJUST
         LA    R15,CCTAB2-CCTAB(,R15)  NEXT ENTRY
         BCT   R0,CCLOOKLP   REPEAT
         LA    R15,CCTAB     ELSE DEFAULT TO SINGLE SPACE
CCLOOKAT MVC   0(4,R1),0(R15)  REPLACE ASA, MCC AND LINE COUNT
         BR    R14           RETURN TO CALLER
CCTAB    DC    C' ',X'09',AL2(1)   CARRIAGE CONTROL / LINE COUNT
CCTAB2   DC    C'0',X'11',AL2(2)   DOUBLE-SPACE
         DC    C'-',X'19',AL2(3)   TRIPLE SPACE
         DC    C'+',X'01',AL2(0)   OVERPRINT
         DC    C'1',X'89',AL2(32767)  EJECT
CCTABX   EQU   *             END OF SUPPORTED CCS
@PRTWORK DC    8A(0)         PRINTER WORK AREA ADDRESSES
PRTEXLST DC    0A(0),X'85',AL3(PRTDCBEX)  DCB EXIT
RECADE   DC    2A(0)         ADDRESS/LENGTH OF CURRENT TEXT
PRPRTEST TM    PRSELECT,0
PRPRREST NI    PRSELECT,0
CALLR0   DS    0F     1/8    CALLER'S REGISTER 0
PRTOPTS  DC    X'00'  1/8      OTHER OPTIONS
FGNOCC   EQU   X'80'             TEXT ONLY; NO CARRIAGE RETURN
PRTXLEN  DC    X'00'  2/8      TEXT LENGTH FOR PRTF CALL
CALLFUN  DC    X'00'  3/8      FUNCTION INDEX:  0 -PRINT   1-SPACE
FUNOPEN  EQU   3               3 - OPEN
PRSELECT DC    X'00'  4/8    USER'S PRINTER SELECTION
CALLR1   DC    F'00'  5/8    USER'S R1 (LINE) PARAMETER
PRNEXT   DC    X'01'         NEXT TEST BIT
FLAGP    DC    X'00'         SPECIAL PROCESSING FLAGS
*R#TRN   EQU   X'40'           RESERVED - NO TRANSLATE
WORKCC   DC    C' '   1/3    INPUT CC FOR ALL PRINTERS
WORKMCC  DC    X'09'  2/3    MATCHING MACHINE CODE
WORKNUM  DC    XL2'0' 3/3    LINES REQUIRED
PCODE    DC    H'0'          RETURN CODES ('OR'ED TOGETHER)
CLSNOP   VCON  '+ '          DO NOTHING LINE
SPCLINE  VCON  '? '          CLOBBERED FOR SPACING
         DROP  ,
         EJECT ,
         USING PRTDCBEX,R15
         USING IHADCB,R1
***********************************************************************
**                                                                   **
**  THIS PRINTER DCB EXIT SUPPLIES MISSING RECFM, LRECL AND BLKSIZE  **
**  FIELDS.  TARGET IS FBM,133,MAXBLK, BUT RECORD FORMATS OF 'A'SA   **
**  AND 'V'ARIABLE ARE SUPPORTED. OTHERS (U, D) ARE DOUBTFUL.        **
**  (NOTE THAT SUBOPEN DOES A DEVTYPE INTO DEVTYPE PRIOR TO OPEN)    **
**                                                                   **
***********************************************************************
PRTDCBEX LH    R9,PR#MAXTX-PR#DCB(,R1)  GET MAX. PREFERRED TEXT LENGTH
         TM    PR#FLAGS-PR#DCB(R1),PR#FGPUN PUNCH MODE?         GP96109
         BZ    PRTDCBCC      NO; USE CARRIAGE CONTROL           GP96109
         TM    DCBRECFM,DCBRECCC  USER SPECIFIED CARRIAGE CTRL? GP96109
         BZ    PRTDCBNC      NO; DEFAULT IS NO PUNCH CC         GP96109
PRTDCBCC LA    R9,1(,R9)     LENGTH WITH CARRIAGE CONTROL       GP96109
PRTDCBNC LA    R10,4(,R9)    DITTO FOR D AND V                  GP96109
         LR    R12,R15
         DROP  R15           DEBASE
         USING PRTDCBEX,R12  REBASE
         ICM   R8,15,DEVTYPE+4  LOAD MAX BLKSIZE
         BNZ   *+8           EXPECTED
         LH    R8,=H'32760'  WILL FAIL UNLESS DD DUMMY
         L     R2,16         LOAD THE CVT POINTER    CVTPTR
         L     R2,0(,R2)     GET THE TCB BOX         CVTTCBP
         L     R2,4(,R2)     GET TCB OLD
         L     R2,12(,R2)    LOAD TIOT ADDRESS       TCBTIO
         AH    R2,DCBTIOT    ADD TIOT OFFSET FOR THIS ENTRY
         MVC   PRTEXMSG+16(8),4(R2)  COPY DDNAME
         MVC   PRTGOMSG+17(8),4(R2)   TO BOTH MESSAGES
         LH    R3,=H'32760'  SET MAXIMUM PERMITTED UNDER OS/360 GP96068
         CR    R8,R3         VALID?                             GP96068
         BNH   *+4+2         YES                                GP96068
         LR    R8,R3         ELSE TRUNCATE                      GP96068
         LH    R3,DCBBLKSI   LOAD CURRENT BLOCKSIZE
         LH    R4,DCBLRECL   AND RECORD LENGTH
         SLR   R2,R2         CLEAR FOR DIVIDE
         TM    DCBRECFM,DCBRECF+DCBRECV  BASIC RECORD FORMAT ?
         BO    PRTDCBU       RECFM=U
         BM    PRTDCBFV      F OR V
         TM    DCBRECFM,DCBRECD  RECFM=D ?
         BO    PRTDCBD       YES; SEE IF USABLE
         CR    R4,R9         DID USER SET LRECL=133?
         BE    PRTDCBSF      YES; SET F
         CR    R4,R10        DID USER SET LRECL=137?
         BE    PRTDCBSV      YES; SET V
*   HANDLE RECFM=F
PRTDCBSF OI    DCBRECFM,DCBRECF  SET FIXED
PRTDCBFV TM    DCBRECFM,DCBRECV  VARIABLE?
         BNZ   PRTDCBV       YES; BRANCH OUT
PRTDCBF  CR    R4,R9         LRECL SET TO 133 ?
         BE    PRTDCBFL
         LTR   R4,R4         OR LEFT 0?
         BNZ   PRTEXBAD      CONFLICTING PARAMETERS
         LR    R4,R9         SET PREFERRED LENGTH OF 133
PRTDCBFL LTR   R3,R3         SUPPLIED BLKSIZE ?
         BNZ   PRTDCBFB      YES; TEST DIVISIBILITY
         OI    DCBRECFM,DCBRECBR  FORCE BLOCKED
         LR    R3,R8         COPY MAX BLKSIZE
         CLI   DEVTYPE+2,X'20' DASD OUTPUT
         BNE   PRTDCBFT      NO
         CLI   DEVTYPE+3,X'0F'  3390 ?                          GP99363
         BNE   PRTDCB80      NO; FIGURE IT'S 3380 OR 9345       GP99363
         CH    R3,=Y(27998)  LARGER THAN HALF TRACK?            GP99363
         BNH   PRTDCBFT      NO                                 GP99363
         LH    R3,=Y(27998)  LIMIT TO HALF TRACK                GP99363
         B     PRTDCBFT                                         GP99363
PRTDCB80 CH    R3,=Y(23476)  LARGER THAN HALF TRACK?
         BNH   PRTDCBFT      NO                                 GP96068
         LH    R3,=Y(23476)  LIMIT TO HALF TRACK                GP96068
PRTDCBFT DR    R2,R4         DIVIDE
         MR    R2,R4         MAKE MULTIPLE AGAIN
         B     PRTDCBAM      DONE - CHECK ASA VS MACHINE CODE
PRTDCBFB CR    R3,R8         NOT TOO LARGE?
         BH    PRTEXBAD      BLKSIZE TOO LARGE
         DR    R2,R4         SEE IF DIVISIBLE
         LTR   R2,R2         ANY REMAINDER?
         BNZ   PRTEXBAD      YES; TOO BAD
         MR    R2,R4         PUT IT BACK
         OI    DCBRECFM,DCBRECBR  FORCE BLOCKED
         CR    R3,R4         IS BLOCKSIZE=LRECL?
         BNE   PRTDCBAM      NO; CHECK CC
         NI    DCBRECFM,255-DCBRECBR  RESET BLOCKING
         B     PRTDCBAM      CHECK CARR. CONTROLS
*   HANDLE RECFM=U
PRTDCBU  LTR   R4,R4         LRECL=0?
         BZ    PRTDCBUL      YES; CHECK BLKSIZE
         CR    R4,R9         ELSE = 133 ?
         BNE   PRTEXBAD      NO; FAIL
PRTDCBUL LR    R4,R9         SET LRECL=133
         LTR   R3,R3         IS BLKSIZE = 0
         BNZ   PRTDCBUB      NO
         LR    R3,R4         DEFAULT TO BLKSIZE=LRECL
PRTDCBUB CR    R3,R8         IS BLKSIZE NO LESS THAN LRECL?
         BNL   PRTDCBAM      NOW DO UA OR UM
         B     PRTEXBAD      TOO BAD
*   HANDLE(?) RECFM=D
PRTDCBD  LH    R8,=H'9999'   MAXIMUM LEGAL DOCUMENTED BLOCK SIZE
         B     PRTDCBV       OTHERWISE TREAT AS V
*   HANDLE RECFM=V
PRTDCBSV OI    DCBRECFM,DCBRECV+DCBRECBR  SET VARIABLE AND BLOCKED
PRTDCBV  CR    R4,R10        LRECL SET TO 137 ?
         BNL   PRTDCBVL
         LTR   R4,R4         OR LEFT 0?
         BNZ   PRTEXBAD      CONFLICTING PARAMETERS
         LR    R4,R10        SET PREFERRED LENGTH OF 137
PRTDCBVL LA    R2,4(,R4)     SET LRECL+BDW LENGTH
         OI    DCBRECFM,DCBRECBR  FORCE BLOCKED
         LTR   R3,R3         SUPPLIED BLKSIZE ?
         BNZ   PRTDCBVB      YES; TEST SIZE
         LR    R3,R8         COPY MAX BLKSIZE
         CLI   DEVTYPE+2,X'20' DASD OUTPUT
         BNE   PRTDCBVH      NO
         CLI   DEVTYPE+3,X'0F'  3390 ?                          GP99363
         BNE   PRTDCBV8      NO; FIGURE IT'S 3380 OR 9345       GP99363
         CH    R3,=Y(27998)  LARGER THAN HALF TRACK?            GP99363
         BNH   PRTDCBVH      NO                                 GP99363
         LH    R3,=Y(27998)  LIMIT TO HALF TRACK                GP99363
         B     PRTDCBVH                                         GP99363
PRTDCBV8 CH    R3,=Y(23476)  LARGER THAN HALF TRACK?            GP96068
         BNH   PRTDCBVH      NO                                 GP96068
         LH    R3,=Y(23476)  LIMIT TO HALF TRACK                GP96068
PRTDCBVH CR    R2,R3         WILL IT FIT?
         BNH   PRTDCBAM      YES; USE HALF-TRACK BLOCKING
         LR    R3,R8         ELSE USE 32K
PRTDCBVB CR    R3,R8         NOT TOO LARGE?
         BH    PRTEXBAD      BLKSIZE TOO LARGE
         CR    R2,R3         WILL IT FIT?
         BH    PRTEXBAD      YES; USE HALF-TRACK BLOCKING
PRTDCBAM TM    DCBRECFM,DCBRECCC  CONTROL CHARACTERS SPECIFIED?
         BM    PRTDCBUP      YES; UPDATE LRECL AND BLKSIZE
         BO    PRTEXBAD      INVALID
         TM    PR#FLAGS-PR#DCB(R1),PR#FGPUN PUNCH MODE?         GP96109
         BNZ   PRTDCBUP      YES; DEFAULT IS NO CC              GP96109
         OI    DCBRECFM,DCBRECCA  SET MY PREFERRED DEFAULT - ASA
PRTDCBUP STH   R3,DCBBLKSI   UPDATE BLOCKSIZE
         STH   R4,DCBLRECL   AND RECORD LENGTH
         LR    R9,R14        PRESERVE RETURN
         B     PRTEXCOM
PRTEXBAD LR    R9,R14        PRESERVE RETURN
         LR    R5,R1         PRESERVE DCB ADDRESS
         WTO   MF=(E,PRTEXMSG)  MAKE A NOISE
         LR    R1,R5         RESTORE DCB ADDRESS
         MVI   PRTGOMSG+4,C' '  PRINT NOW
PRTEXCOM LH    R4,DCBLRECL
         CVD   R4,DBP
         MVC   PRTGOMSG+34(6),=X'402020202120'
         ED    PRTGOMSG+34(6),DBP+5
         LH    R3,DCBBLKSI
         CVD   R3,DBP
         MVC   PRTGOMSG+40(6),=X'402020202120'
         ED    PRTGOMSG+40(6),DBP+5
         UNPK  PRTGOMSG+26(3),DCBRECFM(2)
         MVC   PRTGOMSG+26+2(6),=CL6':'
         LA    R15,PRTHEX-C'0'
         TR    PRTGOMSG+26(2),0(R15)   MAKE EBCDIC
         LA    R8,PRTGOMSG+29  POINT TO TEXT OUTPUT
         MVC   DBP(7),=C'FVDBSAM'
         LA    R7,DBP
         LA    R6,7          TEST 7 BITS
         ICM   R5,8,DCBRECFM  INSERT TEST BITS
         SRL   R5,1          ALIGN FOR FIRST TEST
         OR    R5,R6         MAKE SURE NON-ZERO LOW
         TM    DCBRECFM,DCBRECU  ALL ON OR ALL OFF?
         BZ    PRTGOMLP      OFF - D FORMAT
         MVI   DBP+2,C'T'    NOT D; BUT TO?
         BM    PRTGOMLP      PROCESS F OR V
         MVI   DBP+1,C'U'    SPECIAL CASE
         SLL   R5,1          SHIFT ONCE
         B     PRTGOMUP      AND INCREMENT ONCE
PRTGOMLP BXH   R5,R5,PRTGOMUP  SKIP IF BIT NOT ON
         MVC   0(1,R8),0(R7)  MOVE TO OUTPUT
         LA    R8,1(,R8)     SET FOR NEXT
PRTGOMUP LA    R7,1(,R7)     NEXT ATTRIBUTE
         BCT   R6,PRTGOMLP   DO ALL
         CLI   PRTGOMSG+4,C' '  PRINT IT NOW?
         BNER  R9            NO; JUST RETURN
         WTO   MF=(E,PRTGOMSG)
         MVI   PRTGOMSG+4,C'0'  IN CASE THERE IS A NEXT TIME
         BR    R9
         SPACE 1
DBP      DC    D'0'          DOUBLE-WORK WORD AREA
DEVTYPE  DC    2F'0'         RESULT OF PRIOR DEVTYPE
PRTEXMSG WTO   'OUTPUT FILE XXXXXXXX HAS UNUSABLE DCB PARAMETERS',     *
               MF=L,ROUTCDE=13
PRTGOMSG WTO   '0OUTPUT FILE XXXXXXXX XX:XXXXX XXXXX XXXXX',           *
               MF=L,ROUTCDE=13
PRTHEX   DC    C'0123456789ABCDEF'
         SPACE 1
         LTORG ,
         SPACE 1
PATCHER  DC    30S(*)        MINI-PATCH
         SPACE 1
PRTWORK  DSECT ,             MAPPING OF PRINTER AREA
         #PRTWRK DDNAME=ANY,PFX=PR#,@TITLE=1
         PRINT NOGEN
         YREGS ,
         CVT   DSECT=YES
         DCBD  DEVD=DA,DSORG=PS
         IHAPSA ,
         END   ,
