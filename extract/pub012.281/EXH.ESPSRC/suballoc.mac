ALLO     TITLE 'S U B A L L O C  ***  HIGH-LEVEL LANGUAGE ALLOCATION'
***********************************************************************
*                                                                     *
*                                                                     *
*   COPYRIGHT 2003,2014  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*   To use:   include macro MAPSBALL in your assembly, or expand the  *
*     equivalent in your higher language.                             *
*                                                                     *
*   Set the FUNction code: A-allocate  U-unallocate (after A or V)    *
*    V-allocate one DASD volume (DD VOL=SER=,DISP=OLD,UNIT=SYSALLDA)  *
*                                                                     *
***********************************************************************
*                                                                     *
*                                                                     *
*   ALLOCATION INTERFACE FOR REXX AND OTHER LANGUAGES.                *
*                                                                     *
***********************************************************************
**                                                                   **
**  REGISTER USE:                                                    **
**                                                                   **
**    R4 - START OF TEXT UNIT                                        **
**    R5 - CURRENT TEXT UNIT ADDRESS OR UNIT'S TEXT ADDRESS          **
**    R6 - CURRENT TEXT UNIT POINTER SLOT                            **
**    R8 - USER'S SUPPLIED WORK AREA AND INPUT DATA                  **
**    R9 - RETURN REGISTER FOR SUBROUTINE CALLS                      **
**    R11-R13  USUAL BASE & SAVE                                     **
**                                                                   **
**                                                                   **
***********************************************************************
         MACRO ,
&NM      BTU   &F,&N,&L
         LCLA  &I
&I       SETA  4             MINIMUM LENGTH
&NM      ST    R5,0(,R6)     MAKE TEXT UNIT POINTER
         LA    R6,4(,R6)     SET NEXT AVAILABLE POINTER
         LR    R4,R5         SAVE ADDRESS OF CURRENT UNIT
         MVI   1(R4),DAL&F   REQUEST
         MVI   3(R4),&N      ONE ENTRY
         AIF   (&N EQ 0).SHORT
         MVI   5(R4),&L      ONE BYTE LENGTH
&I       SETA  4+2           LENGTH WITH LENGTH COUNT
.SHORT   LA    R5,&I.(,R5)   UNIT TEXT ADDRESS (CALLER NEEDS TO UP)
         MEND  ,
         SPACE 1
         MACRO ,
&NM      JDYN  &J,&P2,&SKIP=BLANK
         LCLA  &I
         LCLB  &F1,&F2
         LCLC  &L,&D
&D       SETC  '&P2'
         AIF   ('&D' NE '').HAVEDAL
&D       SETC  '&J'
.HAVEDAL AIF   (T'&SKIP EQ 'O').NOSKIP
&F1      SETB  ('&SKIP' EQ 'BLANK')    SKIP IF BLANK OR ZERO
&F2      SETB  ('&SKIP' EQ 'ZERO')     SKIP IF ZERO
&I       SETA  2*&F1+&F2
         AIF   (&I EQ 1 OR &I EQ 2).NOSKIP
&I       SETA  2
         MNOTE 4,'SKIP=&SKIP INVALID; ''BLANK'' ASSUMED'
.NOSKIP  ANOP  ,
&L       SETC  'L'''
&NM      DC    AL.2(&I),AL.6(&L.PRM&J),AL1(PRM&J-PARMSECT,DAL&D)
         MEND  ,
         MACRO ,                                                GP14249
&NM      BLTEST &FIELD,&BE=,&BNE=                               GP14249
&NM      OC    &FIELD,BLANKS      UPPER-CASE                    GP14249
         CLC   &FIELD,BLANKS      IS IT BLANK ?                 GP14249
         MACPARM &BE,MODE=ONE,OP=BE,NULL=SKIP                   GP14249
         MACPARM &BNE,MODE=ONE,OP=BNE,NULL=SKIP                 GP14249
         MEND  ,                                                GP14249
         SPACE 1
         SPACE 2
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
         PRINT &PRTSOR       SAVE A TREE
SUBALLOC PGMHEAD ZERO31,BASE=R12,BNDRY=PAGE,AM=31,RM=ANY,PARM=R9
         LM    R7,R8,0(R9)   GET CALLER'S WORK AND PARAMETER AREAS
         LR    R0,R7         COPY WORK AREA ADDRESS
         LH    R1,=Y(MSGAREND-MSGAREA)  GET LENGTH
         MVCL  R0,R14        CLEAR CALLER'S WORK AREA ALSO
         SPACE 1
*        VOLUME AND DATASET ALLOCATION
*
         USING MSGAREA,R7    DECLARE THE RETURNED MESSAGE AREA
         USING PARMSECT,R8   DECLARE THE USER'S PARM
         SPACE 1
BEGIN    LA    R10,MYRB      REQUEST BLOCK ADDRESS              GP10191
         ST    R10,MYPTR     SET IT                             GP10191
         OI    MYPTR,X'80'   SET END LIST BIT
         LA    R11,MYRBX
         USING S99RB,R10
         USING S99RBX,R11
         MVI   S99RBLN,S99RBEND-S99RB  SET BLOCK LENGTH
         MVI   S99VERB,S99VRBAL  ALLOCATE
*DEFAULT MVI   S99FLG11,
*DEFAULT MVI   S99FLG12,
         LA    R6,MYTUPS     GET FIRST TEXT POINTER ADDRESS
         ST    R6,S99TXTPP   SET TUP ADDRESS
*  AUTHORIZED BITS : CLEAR LATER IF NOT AUTHORIZED
*   WAIT UNTIL A DRIVE BECOMES FREE, OR ASK OPERATOR TO VARY
         MVI   S99FLG21,S99MOUNT+S99WTUNT+S99OFFLN
*DEFAULT MVI   S99FLG22,
*DEFAULT MVI   S99FLG23,
*DEFAULT MVI   S99FLG24,
         SPACE 1
         AIF   (NOT &MVSESA).NOEINIT
         LA    R2,MYRBX      REQUEST BLOCK EXTENSION ADDRESS
         ST    R2,S99S99X    SET EXTENSION
         MVC   S99EID,=C'S99RBX'  IDENTIFY
         MVI   S99EVER,S99RBXVR  CURRENT VERSION
         MVI   S99EOPTS,S99ERMSG  RETURN MESSAGES
*DEFAULT MVI   S99EMSGSV,S99XINFO  ALL MESSAGES
.NOEINIT SPACE 1
         LA    R5,MYTUS      POINT TO FIRST TEXT UNIT
         ST    R5,MYTUPS     SET IT
         CLI   PRMFUN,C'V'   Volume allocation only?            GP14249
         BE    BUILDVOL        Yes                              GP14249
         CLI   PRMFUN,C'U'   UN-ALLOCATE ?                      GP10191
         BNE   BUILDALL      NO                                 GP10191
         SPACE 1
***********************************************************************
*                                                                     *
*  BUILD UP TO 2 TEXT UNITS (DD NAME; DS NAME) FOR UNALLOCATION       *
*                                                                     *
***********************************************************************
         SLR   R15,R15       FAKE GOOD RETURN                   GP14249
         CLI   PRMDDNAM,C' ' ANY OLD DD NAME?                   GP14249
         BH    UNALLO          YES; PROCESS                     GP14249
         CLI   PRMDSNAM,C' ' ANY OLD DS NAME?                   GP14249
         BNH   EXIT            NEITHER; JUST RETURN             GP14249
UNALLO   MVI   S99VERB,S99VRBUN  UNALLOCATE                     GP10191
*  THE EASY ONES ARE TABLE DRIVEN (SEE JDYN MACROS)
         LA    R4,UNALIST    POINT TO LIST FOR EASY FIELDS      GP10191
         BAS   R9,B99MOVE    PUT AT FIXED ADDRESS IN HEAP       GP10191
         B     DONETUS       AND I'M DONE                       GP10191
         SPACE 1
***********************************************************************
*                                                                     *
*  BUILD UP TO 32 TEXT UNITS FOR ALLOCATION                           *
*                                                                     *
***********************************************************************
BUILDALL BLTEST PRMDDNAM,BE=SKIPDDN    DDNAME MISSING?          GP14249
         BAS   R9,B99COMON   BUILD FIRST UNIT
         MVI   1(R4),DALRTDDN  RETURN DDNAME
         MVI   3(R4),1       ONE ENTRY
         MVI   5(R4),8       LENGTH 8
         MVC   6(8,R4),BLANKS
         LA    R5,6+8(,R4)   FIX NEXT POINTER
         SPACE 1
SKIPDDN  BLTEST PRMDSNAM,BE=SKIPDSN    DSNAME MISSING?          GP14249
         BAS   R9,B99COMON   BUILD FIRST UNIT
         MVI   1(R4),DALRTDSN  RETURN DDNAME
         MVI   3(R4),1       ONE ENTRY
         MVI   5(R4),44      LENGTH 44                          GP09217
         MVC   6(44,R4),BLANKS
         LA    R5,6+44(,R4)  FIX NEXT POINTER
         SPACE 1
SKIPDSN  BLTEST PRMVLSER,BE=SKIPSER    SERIAL MISSING?          GP14249
         BAS   R9,B99COMON   BUILD FIRST UNIT                   GP09217
         MVI   1(R4),DALRTVOL  RETURN VOLSER                    GP09217
         MVI   3(R4),1       ONE ENTRY                          GP09217
         MVI   5(R4),6       LENGTH 6                           GP09217
         MVC   6(6,R4),BLANKS                                   GP09217
         LA    R5,6+6(,R4)   FIX NEXT POINTER                   GP09217
         SPACE 1
*  THE EASY ONES ARE TABLE DRIVEN (SEE JDYN MACROS)
SKIPSER  LA    R4,FLDLIST    POINT TO LIST FOR EASY FIELDS
         BAS   R9,B99MOVE    PUT AT FIXED ADDRESS IN HEAP
         SPACE 1
*  THE REST REQUIRE INTERPRETATION
         BLTEST PRMVLSER,BE=SKIPVSER    SERIAL MISSING?          \
         BTU   VLSER,1,6     BUILD FIELD FOR ONE
         LA    R14,PRMVLSER  GET INPUT FIELDS
         SR    R15,R15       SET COUNTER
         LA    R1,5          SET MAX SERIALS
LOOPVSER CLC   0(6,R14),BLANKS  ANY MORE?
         BE    DONEVSER      NO
         MVC   0(6,R5),0(R14)  MOVE ONE SERIAL
         LA    R5,6(,R5)     ADVANCE TU SPACE
         LA    R14,6(,R14)   ADVANCE INPUT
         LA    R15,1(,R15)   UP COUNT
         BCT   R1,LOOPVSER   DO ANOTHER
DONEVSER STC   R15,3(,R4)    SET ENTRY COUNT
         SPACE 1
*---------------------------------------------------------------------*
*   WHEN STATS IS OMITTED (BLANK OR NULL), USE DISP=SHR               *
*   WHEN NDISP IS OMITTED, USE KEEP FOR OLD, AND CATLG FOR NEW        *
*   WHEN CDISP IS OMITTED, USE KEEP FOR OLD, AND DELETE FOR NEW       *
*---------------------------------------------------------------------*
SKIPVSER CLI   PRMSTATS,C' '      HAVE STAT?                    GP10191
         BH    HAVESTAT      YES; USE IT                        GP10191
         MVC   PRMSTATS,DCSHR     SET =SHR                      GP10191
HAVESTAT CLI   PRMNDISP,C' '      HAVE NORMAL DISPOSITION ?     GP10191
         BH    HAVENDSP      YES; USE IT                        GP10191
         MVC   PRMNDISP,DCKEE     OLD/SHR/MOD - KEEP            GP10191
         CLI   PRMSTATS,C'N'      NEW ?                         GP10191
         BNE   HAVENDSP      NO; LEAVE IT                       GP10191
         MVC   PRMNDISP,DCCAT     CATALOG NEW DATA SET          GP10191
HAVENDSP CLI   PRMCDISP,C' '      HAVE FUNNY DISPOSITION ?      GP10191
         BH    SKIPSTAT      YES; USE IT                        GP10191
         MVC   PRMCDISP,DCKEE     OLD/SHR/MOD - KEEP            GP10191
         CLI   PRMSTATS,C'N'      NEW ?                         GP10191
         BNE   SKIPSTAT      NO; LEAVE IT                       GP10191
         MVC   PRMCDISP,DCDEL     DELETE NEW AT ABEND           GP10191
SKIPSTAT BAS   R9,B99FLAG    BUILD A FLAG ENTRY
         MVI   1(R4),DALSTATS  SET DISP STATUS
         LA    R1,STATSTAB   POINT TO STATUS TABLE
         LA    R2,PRMSTATS   POINT TO INPUT (DEFAULT IS SHR)
         BAS   R9,TABLOOK    DO A TABLE LOOKUP
         STC   R0,6(,R4)     SET RESULT
         SPACE 1
         BAS   R9,B99FLAG    BUILD A FLAG ENTRY
         MVI   1(R4),DALNDISP  SET DISP STATUS
         LA    R1,DISPTABL   POINT TO NORMAL DISPOSITION old new
         LA    R2,PRMNDISP   POINT TO INPUT (DEFAULT IS KEEP|CAT)
         BAS   R9,TABLOOK    DO A TABLE LOOKUP
         STC   R0,6(,R4)     SET RESULT
         SPACE 1
         BAS   R9,B99FLAG    BUILD A FLAG ENTRY
         MVI   1(R4),DALCDISP  SET DISP STATUS
         LA    R1,DISPTABL   POINT TO NORMAL DISPOSITION old    new
         LA    R2,PRMCDISP   POINT TO INPUT (DEFAULT IS KEEP|DELETE)
         BAS   R9,TABLOOK    DO A TABLE LOOKUP
         STC   R0,6(,R4)     SET RESULT
         SPACE 1
         BLTEST PRMSPC,BE=SKIPSPC    SPACE SUPPLIED?            GP14249
         BAS   R9,B99COMON   MAKE SHORT REQUEST
         LA    R1,SPACETAB   POINT TO SPACE TYPES
         LA    R2,PRMSPC     POINT TO INPUT
         BAS   R9,TABLOOK    DO A TABLE LOOKUP
         STC   R0,1(,R4)     SET REQUEST TYPE
         CLM   R0,1,=AL1(DALBLKLN)  BLOCK SIZE REQUEST?
         BNE   SKIPSPC       DONE
         SH    R6,=H'4'      BACKSPACE THE TU ADDRESS           GP09217
         L     R5,0(,R6)     BACKSPACE THE TU                   GP09217
         BTU   BLKLN,1,3     REQUEST 1 OF 3                     GP09217
         LA    R1,PRMSPC     POINT TO SPACE PARAMETER
         LA    R15,L'PRMSPC  SET MAX LENGTH
         BAS   R9,GETINT     GET INTEGER EQUIVALENT
         STCM  R0,7,6(R4)    STASH VALUE                        GP09217
         LA    R5,3(,R5)     BUMP TU SPACE
         SPACE 1
SKIPSPC  BLTEST PRMPRIME,BE=SKIPPRI    SPACE SUPPLIED?          GP14249
         BTU   PRIME,1,3
         LA    R1,PRMPRIME   POINT TO SPACE AMOUNT
         LA    R15,L'PRMPRIME  SET MAX LENGTH
         BAS   R9,GETINT     GET INTEGER EQUIVALENT
         STCM  R0,7,6(R4)    STASH VALUE
         LA    R5,3(,R5)     BUMP TU SPACE
         SPACE 1
SKIPPRI  BLTEST PRMSECND,BE=SKIPSEC    SPACE SUPPLIED?          GP14249
         BTU   SECND,1,3
         LA    R1,PRMSECND   POINT TO SPACE AMOUNT
         LA    R15,L'PRMSECND  SET MAX LENGTH
         BAS   R9,GETINT     GET INTEGER EQUIVALENT
         STCM  R0,7,6(R4)    STASH VALUE
         LA    R5,3(,R5)     BUMP TU SPACE
         SPACE 1
SKIPSEC  BLTEST PRMDIR,BE=SKIPDIR    DIRECTORY SUPPLIED?        GP14249
         BTU   DIR,1,3
         LA    R1,PRMDIR     POINT TO AMOUNT
         LA    R15,L'PRMDIR  SET MAX LENGTH
         BAS   R9,GETINT     GET INTEGER EQUIVALENT
         STCM  R0,7,6(R4)    STASH VALUE
         LA    R5,3(,R5)     BUMP TU SPACE
         SPACE 1
SKIPDIR  STM   R1,R8,SUBSAVE   SAVE A LITTLE                    GP09217
         LA    R8,DSORGTAB   COPY TABLE ADDRESS                 GP09217
         LR    R1,R8                                            GP09217
         LH    R7,DSORGTAB-2 LOAD ENTRY COUNT                   GP09217
ORGLOOP  CLC   2(3,R1),PRMDSORG   MATCHES STRING?               GP09217
         BE    ORGFIND       YES; WHOOPPEE                      GP09217
         LA    R1,5(,R1)     UP                                 GP09217
         BCT   R7,ORGLOOP    TRY AGAIN                          GP09217
         LR    R1,R8         DEFAULT TO FIRST ENTRY             GP09217
ORGFIND  SR    R0,R0                                            GP09217
         ICM   R0,3,0(R1)    GET MATCHING VALUE                 GP09217
         LM    R1,R8,SUBSAVE   GET A LITTLE                     GP09217
         LTR   R0,R0         IF UNSPECIFIED OR UNKNOWN,         GP09217
         BZ    SKIPORG          IGNORE IT                       GP09217
         BTU   DSORG,1,2                                        GP09217
         STCM  R0,3,6(R4)    STASH VALUE                        GP09217
         LA    R5,2(,R5)     BUMP TU SPACE                      GP09217
         SPACE 1
SKIPORG  BLTEST PRMRETPD,BE=SKIPRETN   RETENTION SPECIFIED?         \
         BTU   RETPD,1,2
         LA    R1,PRMRETPD   POINT TO AMOUNT
         LA    R15,L'PRMRETPD  SET MAX LENGTH
         BAS   R9,GETINT     GET INTEGER EQUIVALENT
         STCM  R0,3,6(R4)    STASH VALUE
         LA    R5,2(,R5)     BUMP TU SPACE
SKIPRETN DS    0H
         B     DONETUS
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   ALLOCATE A DASD VOLUME ONLY (ONLY FIRST IN LIST IS USED)          *
*                                                                     *
*---------------------------------------------------------------------*
BUILDVOL BLTEST PRMDDNAM,BNE=SOMEDDN   PROCEED IF DDN           GP14249
         BAS   R9,B99COMON   BUILD FIRST UNIT                   GP14249
         MVI   1(R4),DALRTDDN  RETURN DDNAME                    GP14249
         MVI   3(R4),1       ONE ENTRY                          GP14249
         MVI   5(R4),8       LENGTH 8                           GP14249
         MVC   6(8,R4),BLANKS                                   GP14249
         LA    R5,6+8(,R4)   FIX NEXT POINTER                   GP14249
         SPACE 1                                                GP14249
SOMEDDN  LA    R4,VOLLIST    POINT TO LIST FOR EASY FIELDS      GP14249
         BAS   R9,B99MOVE    PUT AT FIXED ADDRESS IN HEAP       GP14249
         SPACE 1                                                GP14249
*  THE REST REQUIRE INTERPRETATION                              GP14249
         BLTEST PRMVLSER,BE=PARMERR ALLOCATE VOLUME SANS NAME?? GP14249
         BAS   R9,B99COMON   BUILD FIRST UNIT                   GP14249
         MVI   1(R4),DALVLSER  SPECIFY VOLUME SERIAL            GP14249
         MVI   3(R4),1       ONE ENTRY                          GP14249
         MVI   5(R4),6       LENGTH 6                           GP14249
         MVC   6(6,R4),PRMVLSER  MOVE SERIAL                    GP14249
         LA    R5,6+6(,R4)   FIX NEXT POINTER                   GP14249
SOMESTAT BAS   R9,B99FLAG    BUILD A FLAG ENTRY                 GP14249
         MVI   1(R4),DALSTATS  SET DISP STATUS                  GP14249
         MVI   6(R4),X'01'   SET OLD                            GP14249
SUMEUNIT BAS   R9,B99COMON   BUILD FIRST UNIT                   GP14249
         MVI   1(R4),DALUNIT   SPECIFY UNIT                     GP14249
         MVI   3(R4),1       ONE ENTRY                          GP14249
         MVI   5(R4),8       LENGTH 6                           GP14249
         MVC   6(8,R4),=CL8'SYSALLDA'  DON'T CARE ABOUT TYPE    GP14249
         LA    R5,6+6(,R4)   FIX NEXT POINTER                   GP14249
         SPACE 1
DONETUS  SH    R6,=Y(4)      POINT TO LAST POINTER
         OI    0(R6),X'80'   SET END OF LIST BIT
         SPACE 1
         CLI   PRMFUN,C'U'   UN-ALLOCATE REQUEST ?              GP10191
         BNE   REQALLOC      NO, ALLOCATION (BLANK OR 'A')      GP10191
         MVI   S99VERB,S99VRBUN  UNALLOCATE                     GP10191
         B     NONAUTH       JUST ISSUE REQUEST                 GP10191
         SPACE 1
***********************************************************************
*                                                                     *
*  INVOKE DYNAMIC ALLOCATION                                          *
*                                                                     *
***********************************************************************
REQALLOC TESTAUTH FCTN=1
         LTR   R15,R15       AUTHORIZED ?
         BZ    YESAUTH
NONAUTH  XC    S99FLAG1,S99FLAG1  RESET SPECIAL REQUESTS
         XC    S99FLAG2,S99FLAG2  RESET SPECIAL REQUESTS
YESAUTH  LA    R1,MYPTR      GET PARM POINTER
         LR    R2,R1         HELP FOR DEBUG                     GP10191
         SVC   99            ALLOCATE THE DATASET
         LH    R0,S99ERROR   ERROR REASON
         LH    R1,S99INFO    INFORMATIONAL REASON
         STM   R15,R2,ALWRET   SET RETURN CODES IN WORK AREA    GP10191
         STM   R15,R1,RETCODE  SET RETURN CODE
         SPACE 1
***********************************************************************
*                                                                     *
*  PROCESS RETURNED DDNAME AND DSNAME, IF ANY                         *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R6,MYTUPS     GET FIRST POINTER ADDRESS          GP09217
         L     R5,0(,R6)     POINT TO TEXT UNIT                 GP09217
         CLI   1(R5),DALRTDDN  REQUIRE DDNAME?
         BNE   HAVEDDN       NO
         MVC   PRMDDNAM,6(R5)  RETURN NEW DD NAME TO USER
         LA    R6,4(,R6)     BUMP POINTER                       GP09217
         SPACE 1
HAVEDDN  L     R5,0(,R6)     POINT TO TEXT UNIT                 GP09217
         CLI   1(R5),DALRTDSN  REQUIRE DSNAME?
         BNE   HAVEDSN       NO
         MVC   PRMDSNAM,6(R5)  RETURN NEW DD NAME TO USER
         LA    R6,4(,R6)     BUMP POINTER                       GP09217
         SPACE 1
HAVEDSN  L     R5,0(,R6)     POINT TO TEXT UNIT                 GP09217
         CLI   1(R5),DALRTVOL  REQUIRE SERIAL?                  GP09217
         BNE   HAVEVOL       NO                                 GP09217
         MVC   PRMVLSER,6(R5)  RETURN NEW VOLUME TO USER        GP09217
HAVEVOL  DS    0H                                               GP09217
         SPACE 1
         AIF   (NOT &MVSESA).NOEMSG
***********************************************************************
*                                                                     *
*  PROCESS RETURNED MESSAGES (NOTE THAT RC=0 MAY HAVE WARNING MSGS    *
*                                                                     *
***********************************************************************
         SPACE 1
         USING EMPARMS,MYEMPARM
         MVI   EMFUNCT,EMRETURN  MOVE MSG TO WORK AREA
         MVI   EMIDNUM,EMSVC99   RETURN IS FROM SVC 99
         MVI   EMNMSGBK,10   MESSAGES THAT WILL FIT
         LA    R0,S99RB      GET RB ADDRESS
         ST    R0,EMS99RBP   SET POINTER
         LA    R1,MAMSGS     POINT TO MESSAGE AREA
         ST    R1,EMBUFP     AND SET IT
         LA    R1,EMPARMS    POINT TO PARAMETER AREA
         ST    R1,EMPTR
         OI    EMPTR,X'80'   END OF LIST
         LA    R1,EMPTR
         LINK  EP=IEFDB476   FORMAT THE MESSAGES
.NOEMSG  SPACE 1
EXIT     PGMEXIT COPYRET=(RETCODE,12)   CODE (FROM SVC 99)
         SPACE 1
PARMERR  MVICC 16,6          SHOW INVALID OR MISSING ENTRY      GP14249
         B     EXIT            AND RETURN ERROR                 GP14249
         SPACE 2
*  SUBROUTINE TO MOVE PARM DATA TO SVC 99 LIST
*    R4 - LIST POINTER; R5 - TEXT UNIT AREA; R6 - TEXT POINTERS
*
B99MOVE  SR    R0,R0         CLEAR FOR LENGTH INSERTION
         SR    R1,R1         CLEAR FOR JFCB OFFSET
         IC    R0,0(,R4)     GET NEXT LIST ENTRY
         LA    R2,X'3F'      MAKE LENGTH MASK
         NR    R2,R0         MASK IT
         BZR   R9            ZERO LENGTH - END OF LIST
         IC    R1,1(,R4)     GET JFCB OFFSET
         LA    R1,PARMSECT(R1)  GET ADDRESS IN JFCB
         CR    R2,R0         UNMASKED LENGTH ?
         BCTR  R2,0          SET EXECUTE LENGTH
         BE    B99MOVER      YES; JUST BUILD TEXT UNIT
         TM    0(R4),X'80'   CHECK FOR BLANKS ?
         BZ    B99CHZER      NO; CHECK FOR ZEROES
         LOCBYTE (R1),END=1(R2,R1)    FIND ENDING BLANK         GP09217
         SR    R15,R14       LENGTH                             GP09217
         LTR   R2,R15        ALL BLANK ?                        GP09217
         BNP   B99MSKIP      YES; SKIP THIS ONE                 GP09217
         BCTR  R2,0          SET EXECUTE LENGTH                 GP09217
B99CHZER LA    R14,ZEROES    POINT TO ZEROES (10)
         EX    R2,B99CLC     ALL ZERO ?
         BE    B99MSKIP      YES; SKIP IT
B99MOVER MVC   1(1,R5),2(R4)  MOVE TEXT UNIT TYPE
         MVI   3(R5),1       SET NUMBER OF ITEMS
         LA    R0,1(,R2)     TRIMMED ITEM LENGTH                GP09217
         STC   R0,5(,R5)     SET ITEM LENGTH
         NI    5(R5),X'3F'   KILL FLAG BITS
         EX    R2,B99MVC     MOVE TEXT OF ITEM
         ST    R5,0(,R6)     SET TEXT UNIT POINTER
         LA    R6,4(,R6)     UP POINTER ADDRESS
         LA    R5,6+1(R2,R5)   POINT TO NEXT TEXT UNIT SPACE
B99MSKIP LA    R4,3(,R4)     UP INPUT LIST
         B     B99MOVE       LOOK FOR MORE
B99CLC   CLC   0(0,R1),0(R14)  TEST FOR BLANKS/ZEROES
B99MVC   MVC   6(0,R5),0(R1)   MOVE TEXT
         SPACE 1
*        THIS ROUTINE BUILDS A BASIC HEADER AND ADVANCES POINTERS
*
B99COMON ST    R5,0(,R6)     STORE UNIT ADDRESS
         LA    R6,4(,R6)     SET NEXT AVAILABLE POINTER ADDRESS
         LR    R4,R5         SAVE ADDRESS
         LA    R5,4(,R5)     SET ADDRESS FOR SHORT UNIT
         BR    R9            RETURN
         SPACE 1
*        THIS ROUTINE BUILDS A FLAG ENTRY
*
B99FLAG  ST    R5,0(,R6)     MAKE TEXT UNIT POINTER
         LA    R6,4(,R6)     SET NEXT AVAILABLE POINTER
         LR    R4,R5         SAVE ADDRESS OF CURRENT UNIT
         MVI   3(R4),1       ONE ENTRY
         MVI   5(R4),1       ONE BYTE LENGTH
         LA    R5,6+1(,R5)   NEXT UNIT ADDRESS
         BR    R9            RETURN
         SPACE 1
*  TABLOOK PERFORMS SIMPLE TABLE LOOKUP
*  1)  R1 POINTS TO THE TABLE
*  2)  TABLE ADDRESS - 2 HAS HALFWORD TABLE ENTRY COUNT
*  3)  R2 POINTS TO STRING TO BE CHECKED. LENGTH IS 3 OR MORE
*  4)  R0 CONTAINS MATCHING FLAG
*  5)  WHEN THERE IS NO MATCH, FIRST TABLE ENTRY IS USED
*
TABLOOK  STM   R1,R8,SUBSAVE   SAVE A LITTLE
         LR    R8,R1         COPY TABLE ADDRESS
         LR    R7,R8         DITTO
         SH    R7,=H'2'      BACK UP
         LH    R7,0(,R7)     LOAD TABLE ENTRY COUNT
TABLOOP  CLC   1(3,R1),0(R2)  MATCHES STRING?
         BE    TABFIND       YES; WHOOPPEE
         LA    R1,4(,R1)     UP
         BCT   R7,TABLOOP    TRY AGAIN
         LR    R1,R8         DEFAULT TO FIRST ENTRY
TABFIND  SR    R0,R0
         IC    R0,0(,R1)     RETURN MATCHING FLAG
         LM    R1,R8,SUBSAVE   GET A LITTLE
         BR    R9            RETURN
         SPACE 1
*  GETINT CONVERTS NUMERIC CHARACTER DATA TO INTEGER
*  1)  R1 POINTS TO THE TEXT
*  2)  R15 CONTAINS LENGTH OF TEXT (<9)
*  3)  INVALID NUMERICS ARE TREATED AS ZEROES
*  4)  LEADING AND TRAILING BLANKS ARE IGNORED
*  5)  RESULT IN R0
*
GETINT   STM   R1,R8,SUBSAVE   SAVE A LITTLE
         SR    R0,R0         CLEAR RESULT
         LTR   R2,R15        COPY LENGTH
         BNP   GETEXIT       BAD; GET OUT
         XC    DB,DB
         BCTR  R2,0          LENGTH - 1
         LA    R3,DB+8-1     START MOVE
         SR    R3,R2         DESTINATION
         EX    R2,GETMOVED   MOVE TO WORK AREA
         LM    R4,R5,DB      LOAD KIT AND CABOODLE
         LA    R2,8          LENGTH TO CHECK
GETSHIFT CLM   R5,1,BLANKS   TRAILING BLANK ?
         BNE   GETRIGHT      NO
         SRDL  R4,8          GET RID OF IT
         BCT   R2,GETSHIFT
         B     GETEXIT       ALL BLANK?
GETRIGHT STM   R4,R5,DB      STASH IT BACK
         TR    DB,DIGITABL   KILL NON-DIGITS
         PACK  DB2,DB        PACK
         CVB   R0,DB2        AND DIGITATE
GETEXIT  LM    R1,R8,SUBSAVE   GET A LITTLE
         BR    R9            RETURN
GETMOVED MVC   0(0,R3),0(R1)  MOVE USER'S DATA
DIGITABL DC    256C'0'
         ORG   DIGITABL+C'1'
         DC    C'123456789'
         ORG   ,
         SPACE 1
FLDLIST  JDYN  DSNAM         MAY BE RETURNED AS NEW NAME
         JDYN  MEMBR         MEMBER NAME OR BLANK OR HEX ZERO
         JDYN  DDNAM         REQUESTED/RETURNED DD NAME
*?*      JDYN  MGCL          SMS - MANAGEMENT CLASS
*?*      JDYN  DACL          SMS - DATA CLASS
*?*      JDYN  STCL          SMS - STORAGE CLASS
         JDYN  UNIT          REQUESTED UNIT (OR BLANK)
         DC    X'00'         END OF EASY LIST
         SPACE 1
UNALIST  JDYN  DSNAM         MAY BE RETURNED AS NEW NAME        GP10191
         JDYN  DDNAM         REQUESTED/RETURNED DD NAME         GP10191
         DC    X'00'         END OF EASY LIST                   GP10191
         SPACE 1
VOLLIST  JDYN  DDNAM         REQUESTED/RETURNED DD NAME         GP14249
         DC    X'00'         END OF EASY LIST                   GP14249
         SPACE 1
*  THE FOLLOWING ENTRIES NEED TO BE CONVERTED BEFORE USE:
*LIST*   JDYN  VLSER         VOLUME SERIALS
*LIST*   JDYN  STATS         NEW/OLD/MOD/SHR
*LIST*   JDYN  NDISP         CATALOG/DELETE/KEEP
*LIST*   JDYN  CDISP         CATALOG/DELETE/KEEP
*LIST*   JDYN  SPC           CYL/TRK/###(NUMERIC, BLOCKS)
*LIST*   JDYN  PRIME         PRIMARY AMOUNT
*LIST*   JDYN  SECND         SECONDARY AMOUNT
*LIST*   JDYN  DIR           DIRECTORY BLOCKS
*LIST*   JDYN  RETPD         RETENTION PERIOD IN DAYS
*LIST*   JDYN  DSORG         DSORG
*LIST*   JDYN  RECFM         RECORD FORMAT
*LIST*   JDYN  LRECL         RECORD LENGTH OR 'X'
*LIST*   JDYN  BLKSZ         BLOCK SIZE
*LIST*   JDYN  KYLEN         KEY LENGTH
         SPACE 1
         DC    Y(4)          NUMBER OF TABLE ENTRIES
STATSTAB DC    AL1(08),CL3'SHR'   (default)                     GP10191
DCSHR    EQU   *-3,3,C'C'                                       GP10191
         DC    AL1(04),CL3'NEW'
         DC    AL1(01),CL3'OLD'
         DC    AL1(02),CL3'MOD'
         SPACE 1
         DC    Y(5)          NUMBER OF TABLE ENTRIES            GP10191
DISPTABL DC    AL1(08),CL3'KEE'   (default)                     GP10191
DCKEE    EQU   *-3,3,C'C'                                       GP10191
         DC    AL1(02),CL3'CAT'
DCCAT    EQU   *-3,3,C'C'                                       GP10191
         DC    AL1(04),CL3'DEL'
DCDEL    EQU   *-3,3,C'C'                                       GP10191
         DC    AL1(16),CL3'PAS'                                 GP10191
         DC    AL1(01),CL3'UNC'
         SPACE 1
         DC    Y(3)          NUMBER OF TABLE ENTRIES
SPACETAB DC    AL1(DALTRK),CL3'TRK'
         DC    AL1(DALCYL),CL3'CYL'
         DC    AL1(DALBLKLN),CL3'   '
         SPACE 1
         DC    Y(9)          NUMBER OF TABLE ENTRIES            GP09217
DSORGTAB DC    XL2'0000',CL3'   '                               GP09217
         DC    XL2'0200',CL3'PO '                               GP09217
         DC    XL2'4000',CL3'PS '                               GP09217
         DC    XL2'2000',CL3'DA '                               GP09217
         DC    XL2'0300',CL3'POU'                               GP09217
         DC    XL2'4100',CL3'PSU'                               GP09217
         DC    XL2'4008',CL3'ICF'                               GP09217
         DC    XL2'0008',CL3'VS '                               GP09217
         DC    XL2'0008',CL3'AM '                               GP09217
         SPACE 2
BLANKS   DC    CL80' '       CONSTANT
ZEROES   DC    XL44'0'       CONSTANT
         SPACE 1
         PRINT &PRTMAC
PARMSECT MAPSBALL PFX=PRM,DSECT=YES
PRMAREA  EQU   PARMSECT,PRMSIZE,C'C'                            GP14249
         SPACE 1
         PRINT &PRTSYS
         IEFZB4D0 ,
S99RB    DSECT ,             REDEFINE
T99RB    DS    0D            NAME END
Z99RB    EQU   T99RB-S99RB   STORAGE LENGTH
S99RBX   DSECT ,             REDEFINE
T99RBX   DS    0D            NAME END
Z99RBX   EQU   T99RBX-S99RBX STORAGE LENGTH
         SPACE 1
         AIF   (NOT &MVSESA).NOEDS
EMPARMDS DSECT ,             DEFINE (MACRO DOESN'T)
         IEFZB476 ,          MAP EMPARMS
EMPARMDS DSECT ,             REDEFINE
EMPARMT  DS    0D            NAME END
EMPARMZ  EQU   EMPARMT-EMPARMS  STORAGE LENGTH
.NOEDS   SPACE 1
SAVE     DSECT ,
WORKSTRT DS    0X
DB       DS    D             CONVERSION WORK AREA
DB2      DS    D             CONVERSION WORK AREA
         SERVDEFS ,          CANNED DEFINITIONS
SUBSAVE  DS    18F           AUXILIARY SAVE AREA
         SPACE 1
MYPTR    DC    A(0)          POINTER TO SVC 99 RB
EMPTR    DC    A(0)          POINTER TO ERROR MESSAGE PARAMETERS
MYRB     DS    (Z99RB/8)D    ROOM FOR REQUEST BLOCK
MYRBX    DS    (Z99RBX/8)D   ROOM FOR REQUEST BLOCK EXTENSION
         AIF   (NOT &MVSESA).NOEMP
MYEMPARM DS    (EMPARMZ/8)D  ROOM FOR ERROR MESSAGE ROUTINE
.NOEMP   SPACE 1
MYTUPS   DS    32A(0)        TEXT UNIT POINTERS
MYTUS    DS    4XL256'0'     WORK SPACE FOR TEXT UNITS
MYTUEND  DS    0A            END OF TEXT UNIT SPACE
WORKEND  DS    0D        END OF DYNAMIC WORK AREA
SAVEEND  EQU   *         END OF DYNAMIC WORK AREA
         SPACE 1
MSGAREA  MAPSBAWK ,          RETURN AREA FOR CODES AND MESSAGES
MSGAREND DS    0D
         SPACE 1
         IEFZB4D2 ,
         END   ,
