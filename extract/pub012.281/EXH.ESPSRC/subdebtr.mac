SUBDEBTR TITLE 'S U B D E B T R  ***  DEBTRACE INTERFACE ROUTINE'
         COPY  OPTIONGB
         SPACE 2
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
**                                                                   **
**  SUBDEBTR IS THE STUB ROUTINE TO HANDLE THE INTERFACING OF A DBT  **
**  DEBUG PRINT REQUEST, AND THE FORMATTING ROUTINE DEBTRACE.        **
**                                                                   **
**  REWRITTEN FROM OLD DBT MACRO, WITH CHANGES                       **
**                                                                   **
**  ENVIRONMENT: 24/31/64 BIT ADDRESSING MODE                        **
**               PRIMARY OR AR MODE                                  **
**               NO OR ANY AUTHORIZATION, BUT SPVR OR KEY=0 UNTESTED **
**               REENTRANT; REFRESHABLE                              **
**                                                                   **
***********************************************************************
**                                                                   **
**  ENTRY REGISTERS:                                                 **
**                                                                   **
**   0 - ADDRESS OF USER'S WORK AREA (CONTAINS ADDRESSES OF DEBTRACE **
**         AND DEBTRACE WORK AREA; LOADED/OBTAINED AS NECESSARY)     **
**                                                                   **
**  15 - ADDRESS OF THIS ROUTINE (ANY AMODE)                         **
**                                                                   **
**  14 - ADDRESS OF REQUEST LIST                                     **
**                                                                   **
**  CALLING DBT (MACRO) HAS ISSUED A BAKR TO SAVE EVERYTHING         **
**    AND SWITCHED TO PRIMARY MODE. NOTE THAT WE ARE STILL           **
**    RUNNING IN THE USER'S ADDRESSING MODE.                         **
**                                                                   **
***********************************************************************
SUBDEBTR START 0
SUBDEBTR AMODE ANY           SAME AS LINKED MODULE
SUBDEBTR RMODE ANY           SAME AS LINKED MODULE
         B     BEGIN-*(,R15)  BRANCH AROUND ID                  GP03006
         DC    AL1(BEGIN-*),C'SUBDEBTR &SYSDATE'                GP03006
BEGIN    LR    R12,R15       COPY ENTRY ADDRESS                 GP03006
         USING SUBDEBTR,R12  DECLARE IT                         GP03006
         LR    R4,R0         COPY WORK AREA ADDRESS             GP03006
         USING MAPDBTU,R4    DECLARE IT
         LR    R7,R14        PRESERVE PARAMETER LIST ADDRESS    GP03009
         SPACE 1
         ICM   R5,15,DBU@WORK  IS THERE A WORK ADDRESS?
         BNZ   HAVEWORK      YES; DECLARE IT
         LA    R3,DBWSIZE    GET WORK AREA SIZE
         STORAGE OBTAIN,LENGTH=(R3),LOC=BELOW  GET STORAGE (DCB-AM24)
         ST    R1,DBU@WORK
         LR    R5,R1         COPY TO USING REGISTER
         LR    R2,R1         COPY START ADDRESS
         SR    R1,R1
         MVCL  R2,R0         CLEAR GOTTEN STORAGE
         USING MAPDBTW,R5    DECLARE IT
         MVCIN DBWBLKID,BLKID   MAKE A UNIQUE LITERAL
         MVC   DBWMGRDW(5),PATRDW
         MVC   DBWSVRDW(5),PATRDW
         MVC   DBWMGRD2(4),PATRTDES
         MVC   DBWOPDCB(PATDCBL),PATTRDCB  MOVE DCB
         LA    R0,DBWPRDCB   GET DCB ADDRESS
         ST    R0,DBWOPDCB+4  UPDATE IN LONG LIST
         SPACE 1
*********** NOTE - NEED AM64 TESTS AND APPROPRIATE SAVES **************
HAVEWORK LA    R1,1          SET CODE FOR PSW EXTRACTION        GP03006
         ESTA  R0,R1         EXTRACT CURRENT PSW                GP03006
         STM   R0,R1,DBWOPSW    SAVE AMODE, ARMODE, PK
         PUSH  USING         PLAY GAMES WITH BASE REGISTERS     GP03006
         LR    R8,R4         SAVE USER'S DBT                    GP03006
         LR    R9,R5         SAVE DBT WORK AREA                 GP03006
         LR    R10,R7        PRESERVE PARM LIST ADDRESS         GP03009
         EREG  R0,R7         RETRIEVE LEFT HALF OF REGISTERS    GP03006
         STM   R0,R7,DBWSVUSR-MAPDBTW(R9)  SAVE LEFT GROUP      GP03006
         STAM  R0,R7,DBWSVACR-MAPDBTW(R9)  SAVE LEFT GROUP      GP03006
         LR    R3,R12        SAVE MY BASE                       GP03006
         LR    R4,R8         RESTORE USER'S DBT PARMS           GP03006
         LR    R5,R9         RESTORE WORK AREA                  GP03006
         LR    R7,R10        RESTORE PARM ADDRESS               GP03006
         USING MAPDBTU,R4    DECLARE IT
         USING MAPDBTW,R5    DECLARE IT
         EREG  R8,R15        RETRIEVE RIGHT HALF OF REGISTERS   GP03006
         STM   R8,R15,DBWSVUSR+8*4   SAVE RIGHT GROUP           GP03006
         STAM  R8,R15,DBWSVACR+8*4   SAVE RIGHT GROUP           GP03006
         LR    R12,R3        RESTORE BASE                       GP03006
         POP   USING                                            GP03006
         SPACE 1                                                GP03006
         MVC   DBWADMSK(8),=X'FFFFFFFFFFFFFFFF'
         SPACE 1                                                GP03006
         STD   R0,DBWSVFPR+00  SAVE CURRENT VALUE
*DEFER*  STD   R1,DBWSVFPR+08  SAVE CURRENT VALUE
         STD   R2,DBWSVFPR+16  SAVE CURRENT VALUE
*DEFER*  STD   R3,DBWSVFPR+24  SAVE CURRENT VALUE
         STD   R4,DBWSVFPR+32  SAVE CURRENT VALUE
*DEFER*  STD   R5,DBWSVFPR+40  SAVE CURRENT VALUE
         STD   R6,DBWSVFPR+48  SAVE CURRENT VALUE
*DEFER*  STD   R7,DBWSVFPR+56  SAVE CURRENT VALUE
*DEFER*  STD   R8,DBWSVFPR+64  SAVE CURRENT VALUE
*DEFER*  STD   R9,DBWSVFPR+72  SAVE CURRENT VALUE
*DEFER*  STD   R10,DBWSVFPR+80  SAVE CURRENT VALUE
*DEFER*  STD   R11,DBWSVFPR+88  SAVE CURRENT VALUE
*DEFER*  STD   R12,DBWSVFPR+96  SAVE CURRENT VALUE
*DEFER*  STD   R13,DBWSVFPR+104 SAVE CURRENT VALUE
*DEFER*  STD   R14,DBWSVFPR+112 SAVE CURRENT VALUE
*DEFER*  STD   R15,DBWSVFPR+120 SAVE CURRENT VALUE
         SPACE 1                                                GP03006
         ICM   R15,15,DBU@CODE  PREVIOUSLY LOADED ?
         BNZ   HAVECODE      YES; USE IT
*TEST*   L     R0,=V(DEBTRACE) *****DEBUG*****
*TEST*   O     R0,=X'80000000' *****DEBUG*****
*TEST*   B     POSTLOAD                    *****DEBUG*****
         LOAD  EP=DEBTRACE,ERRET=OOPS
POSTLOAD DS    0H                          *****DEBUG*****
         ST    R0,DBU@CODE   SAVE FOR SUBSEQUENT CALLS
         LR    R15,R0        MOVE
         CLI   DBUFLAG,0     HAS USER SET FLAGS PREVIOUSLY?
         BNE   HAVECODE      YES; RETAIN
         MVI   DBUFLAG,DBUFLPRO+DBUFLON+DBUFLWID  TRACE DATA TO DD
HAVECODE LA    R0,MAPDBTU    PASS WORK AREA ADDRESS             GP03006
         LR    R1,R7         GET CALLER'S LIST ADDRESS          GP03006
         BASSM R14,R15       INVOKE IT (RETURN HERE)            GP03006
         SPACE 1
OOPS     PR    ,             RETURN TO CALLING DBT              GP03006
         SPACE 2
BLKID    DCIN  C'WTBD'       REVERSE OF BLOCK ID FOR MVCIN
PATRDW   DC    Y(5),X'8000',C' '  WTO HEADER
PATRTDES DC    X'01000020'   DESCRIPTOR 8; ROUTCDE 11           GP99113
         SPACE 1
PATTRDCB OPEN  (PATDCB,OUTPUT),MF=L MODE=31
PATDCB   DCB   DDNAME=DEBTRACE,DSORG=PS,MACRF=PM,RECFM=FBA,           **
               LRECL=DBWMGRD2-DBWMGHED+1  ADDED ASA CC          GP03011
PATDCBL  EQU   *-PATTRDCB    LENGTH TO MOVE
         SPACE 2
         PRINT &PRTMAC
MAPDBTU  DSECT ,             MAP USER'S DBT WORK AREA
         DBT   MODE=D,PFX=DBU  EXPAND USER WORK AREA
         SPACE 2
MAPDBTW  DSECT ,             MAP USER'S DBT WORK AREA
         DBT   MODE=DW,PFX=DBW  EXPAND DEBTRACE WORK AREA
         SPACE 2
         PRINT &PRTSYS
         YREGS ,             EXPAND REGISTER MNEMONICS
         CVT   DSECT=YES,LIST=NO
         END   ,
