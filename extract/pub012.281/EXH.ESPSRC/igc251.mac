S251     TITLE 'TYPE 1 SVC FOR CURRENT/ELAPSED CPU TIME DETERMINATION'
         COPY  OPTIONGB      DEFINE GLOBALS                      81341
         SPACE 1                                                 81341
         SYSPARM LIST=YES    SET AND LIST GLOBAL OPTIONS         81341
         GBLC  &TSMFSVC
&TSMFSVC SETC  '251'
         SPACE 2
*                                                                     *
*                                                                     *
*        THIS IS A TYPE 1, DISABLED, SVC. IT PROVIDES A PROBLEM       *
*        PROGRAM ACCESS TO CURRENT SMF JOB-STEP CPU STATISTICS,       *
*        UNLESS THE CALLER'S JOB WAS SUBMITTED WITH TIME=1440.        *
*                                                                     *
*        ON RETURN, R0 HAS THE AVAILABLE TIME BEFORE EXPIRATION IN    *
*        TIMER UNITS. THE VALUE IS CAPPED AT 12 HOURS, UNLESS SMF     *
*        IS NOT USED, THEN R0 IS X'7FFFFFFF'                          *
*                                                                     *
         AIF   ('&SYSTEM' EQ 'MVS').MVS01                        81341
*        WHEN A JOB STEP IS INITIATED A TASK TIMER SPECIFYING THE     *
*        JOB (OR STEP) TIME LIMIT IS STARTED BY THE INITIATOR.        *
*        THIS TIMER IS ENQUEUED (MADE ACTIVE) WHENEVER A TASK OF      *
*        THE STEP IS DISPATCHED. IF THE TIMER EXPIRES, A 322          *
*        ABEND RESULTS. THIS SVC IS FUNCTIONALLY EQUIVALENT TO        *
*        A TTIMER OF THE SMF TIMER.                                   *
*                                                                     *
         AGO   .NMVS01
.MVS01   ANOP
*        THIS SVC REQUIRES THE DISPATCHER (DISP) LOCK TO ENSURE       *
*        THAT NO OTHER PROCESS UPDATES THE LCCADTOD FIELD. THIS       *
*        CAUSES THE SVC TO EXECUTE DISABLED AND LOCK OUT OTHER        *
*        CPU'S IN A TIGHTLY-COUPLED MP ENVIROMENT.                    *
*                                                                     *
*        EVERY TIME A TASK OF A JOB STEP IS DISPATCHED, THE TOD IS    *
*        STORED IN THE LCCADTOD FIELD. TOTAL TASK ELAPSED TIME IS     *
*        THE CURRENT TOD MINUS THE DISPATCH TIME, PLUS THE TCB TIME   *
*        FROM PRIOR DISPATCHES.                                       *
*                                                                     *
         AGO   .MVS02                                           GP13134
.NMVS01  ANOP
*        UPON RETURN REGISTER 0 IS SET TO THE AMOUNT OF CPU TIME,     *
*        IN 26 MICROSECOND TIMER UNITS, REMAINING BEFORE A 322        *
*        ABEND. IF TIME=1440 IS SPECIFIED, REGISTER 0 WILL            *
*        ALWAYS BE ZERO.                                              *
*                                                                     *
         AIF   ('&SYSTEM' EQ 'MVS').MVS02                        81341
*        THIS SVC LOCATES THE TIMER QUEUE ELEMENT ASSOCIATED WITH     *
*        THE INITIATOR'S JOB-STEP TIMER. IF THE INITIATOR HAS         *
*        NO TQE, INDICATING THAT TIME=1440 WAS SPECIFIED, REGISTER    *
*        ZERO IS CLEARED AND THE SVC EXITS. OTHERWISE, THE TQE'S      *
*        VALUE IS CALCULATED.                                         *
*                                                                     *
         AIF   ('&SYSTEM' EQ 'VS1').VS101                        81341
*        STARTING FROM THE CURRENT TCB (REGISTER 4), WE CHAIN         *
*        TO THE JOB STEP TCB, FROM THERE TO THE INITIATOR'S           *
*        TCB (MOTHER TCB FOR THE JOB STEP TCB). THE TCBTME            *
*        FIELD OF THE INITIATOR'S TCB EITHER POINTS TO THE            *
*        JOB-STEP TIMER'S TQE, OR IS ZERO IF TIMING IS NOT ACTIVE.    *
*                                                                     *
         AGO   .MVT01
.VS101   ANOP
*        NOTE THAT THIS SVC DEPENDS UPON THE OPTIONAL VS1 FEATURE     *
*        EXTENDED TIMER SUPPORT. THIS FEATURE UTILIZES THE TIME       *
*        OF DAY (TOD) CLOCK AND THE CPU TIMER.                        *
*                                                                     *
*        STARTING FROM THE CURRENT TCB (REGISTER 4), WE CHAIN         *
*        TO THE PIB. IF NO PIB, SMF TIMING IS NOT ACTIVE. FROM        *
*        THE PIB WE GET THE ADDRESS OF THE JOB-STEP TQE IF THE        *
*        PIB INDICATES THAT JOB-STEP TIMING IS ACTIVE.                *
*                                                                     *
*        THE VALUE FIELD OF THE TOPMOST CPU TQE IS UPDATED            *
*        WITH THE CONTENTS OF THE CPU TIMER. THEN THE VALUE           *
*        OF THE JOB/STEP TQE IS CALCULATED BY ADDING TOGETHER         *
*        ALL THE TQEVAL FIELDS FROM THE JOB/STEP TQE AND ALL          *
*        TQE'S PRECEEDING IT ON THE CPU TIMER QUEUE.                  *
*                                                                     *
         AGO   .VS100
.MVT01   ANOP
         AIF   ('&SYSTEM' EQ 'SVS').SVS01                        81341
*        THE VALUE OF THIS TQE, IN 26 MICROSECOND TIMER UNITS,        *
*        IS FOUND FROM THE EXPRESSION:                                *
*                                                                     *
*              TIME REMAINING = TQEVAL - (SHPC - TIMER/2)             *
*                                                                     *
*        WHERE:                                                       *
*                                                                     *
*              TQEVAL  TIME FIELD IN TQE.                             *
*                                                                     *
*              SHPC    VALUE IN THE SIX-HOUR PSEUDO CLOCK.            *
*                                                                     *
*              TIMER/2 VALUE IN THE INTERVAL TIMER (LOCATION 80,      *
*                      DECIMAL) DIVIDED BY TWO.                       *
*                                                                     *
         AGO   .CDONE
.SVS01   ANOP
*        IF THIS TQE IS ON THE HEAD OF THE TASK TQE CHAIN, ITS        *
*        VALUE IS THAT OF THE CPU TIMER. OTHERWISE, ITS VALUE         *
*        IS CALCULATED FROM THE EXPRESSION:                           *
*                                                                     *
*              TIME REMAINING = TQEVAL - (INTERVAL - TIMER)           *
*                                                                     *
*        WHERE:                                                       *
*                                                                     *
*              TQEVAL   TIME FIELD IN TQE.                            *
*                                                                     *
*              INTERVAL VALUE LAST LOADED INTO THE CPU TIMER,         *
*                       SAVED IN THE TPC.                             *
*                                                                     *
*              TIMER    CURRENT VALUE OF THE CPU TIMER.               *
*                                                                     *
.VS100   ANOP
*        THE VALUE CALCULATED IS IN CPU TIMER UNITS AND THEREFORE     *
*        MUST BE CONVERTED TO 26-MICROSECOND TIMER UNITS.             *
*                                                                     *
         AGO   .CDONE
.MVS02   ANOP
*        THIS CODE CALCULATES CPU TIME REMAINING FOR THE CURRENT TASK *
*        LCCADTOD HAS THE TIME THE TASK WAS DISPATCHED                *
*        TIME SINCE LAST DISPATCH IS:                                 *
*          CURRENT TOD - LCCADTOD                                     *
*                                                                     *
*        THIS VALUE IS ADDED TO ASCBESTL (TIME=JST/ALL)               *
*        THEN SUBTRACTED FROM ASCBJSTL (HIGH HALF OF TOD VALUE)       *
*                                                                     *
*        CLOCK UNITS ARE CONVERTED TO TIMER UNITS                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
IGC&TSMFSVC CSECT
         USING *,R6                ESTABLISH ADDRESSABILITY
         AIF   ('&SYSTEM' EQ 'MVS').BASEOK                       81341
         AIF   ('&SYSTEM' EQ 'SVS').BASEOK                       81341
         BALR  R6,0                SET BASE REGISTER
         BCTR  R6,0                MAKE IT START AT OFFSET
         BCTR  R6,0                ZERO
.BASEOK  ANOP
         SPACE
R0       EQU   0                   REMAINING TIME UPON RETURN
R1       EQU   1                   WORK REGISTER
         AIF   ('&SYSTEM' EQ 'MVS').MVS021                       81341
R2       EQU   2                   UNUSED
R3       EQU   3                   CVT POINTER
R4       EQU   4                   CALLER'S TCB ADDRESS
R5       EQU   5                   CALLER'S RB ADDRESS
R6       EQU   6                   SVC BASE REGISTER
         AIF   ('&SYSTEM' EQ 'SVS').SVS02                        81341
         AIF   ('&SYSTEM' EQ 'VS1').SVS02                        81341
R7       EQU   7                   ADDRESS OF SIX-HOUR PSEUDO CLOCK
         AGO   .VS102
.SVS02   ANOP
R7       EQU   7                   ADDRESS OF TIMER DATA AREA (TPC)
         AIF   ('&SYSTEM' NE 'VS1').VS102                        81341
R8       EQU   8                   ADDRESS OF PIB
         AGO   .NVS102
.VS102   ANOP
R8       EQU   8                   ADDRESS OF CALLER'S INITIATOR TCB
.NVS102  ANOP
R9       EQU   9                   ADDRESS OF JOB-STEP TQE
         AIF   ('&SYSTEM' EQ 'SVS').SVS03                        81341
RA       EQU   10                  UNUSED
RB       EQU   11                  UNUSED
         AGO   .NSVS03
.SVS03   ANOP
RA       EQU   10                     DIVIDE WORK
RB       EQU   11                     REGISTERS
.NSVS03  ANOP
RC       EQU   12                  UNUSED
RD       EQU   13                  CALLER'S REGISTER 13
RE       EQU   14                  RETURN LINKAGE
RF       EQU   15                  CALLER'S REGISTER 15
         AGO   .NMVS02
.MVS021  ANOP
R2       EQU   2                   WORK REGISTER
R3       EQU   3                   WORK REGISTER
R4       EQU   4                   ADDRESS OF CALLER'S TCB
R5       EQU   5                   ADDRESS OF CALLER'S RB
R6       EQU   6                   SVC BASE REGISTER
R7       EQU   7                   ADDRESS OF CALLER'S ASCB
R8       EQU   8                   ADDRESS OF LCCA FOR CURRENT CPU
R9       EQU   9                   UNUSED
RA       EQU   10                     DIVIDE WORK
RB       EQU   11                     REGISTERS
RC       EQU   12                  UNUSED
RD       EQU   13                  CALLER'S REGISTER 13
RE       EQU   14                  RETURN LINKAGE TO STAGE 1 EXIT
RF       EQU   15                  CALLER'S REGISTER 15
         SPACE 2
*
**
***      PSA FIELD USED
**
*
         SPACE
PSALCCAV EQU   528                 ADDRESS OF POINTER TO LCCA
         AGO   .MVS04
.NMVS02  ANOP
         AIF   ('&SYSTEM' EQ 'VS1').VS109                        81341
         SPACE 2
*
**
***      CVT FIELDS USED
**
*
         SPACE
         AIF   ('&SYSTEM' NE 'SVS').NSVS04                       81341
CVTTPC   EQU   88                  OFFSET OF TIMER DATA AREA POINTER
         SPACE 2
*
**
***      TIMER DATA AREA (TPC) FIELDS USED
**
*
         SPACE
TTOPQ    EQU   112                 OFFSET OF TIMER QUEUE HEAD CHECK
INTERVAL EQU   140                 OFFSET OF CURRENT TIMER INTERVAL
         SPACE 2
         AGO   .NVS103
.NSVS04  ANOP
CVTTPC   EQU   88                  OFFSET OF SIX-HOUR PSEUDO CLOCK
*                                  (SHPC) POINTER
         SPACE 2
*
**
***      LOW CORE DATA AREAS USED
**
*
         SPACE
TIMER    EQU   80                  ADDRESS OF INTERVAL TIMER
         SPACE 2
.VS109   AIF   ('&SYSTEM' NE 'VS1').NVS103                       81341
*
**
***      PIB FIELDS USED
**
*
         SPACE
SD33JTQE EQU   52                  OFFSET OF JOB/STEP TQE POINTER
         SPACE 2
         AGO   .NVS103
.MVS04   ANOP
         SPACE 2
*
**
***      ASCB FIELDS USED
**
*
         SPACE
ASCBEJST EQU   64                  ELASPED JOB-STEP TIMING, TOD CLOCK
*                                  MICROSECOND UNITS (64-BITS)
ASCBJSTL EQU   80                  CPU TIME LIMIT FOR THIS JOB STEP,
*                                  IN TOD-CLOCK UNITS TIMES 2**32
         SPACE 2
*
**
***      LCCA FIELDS USED
**
*
         SPACE
LCCADTOD EQU   600                 OFFSET OF TOD STAMP FROM
*                                  DISPATCH OF TCB
         AGO   .MVS05
.NVS103  ANOP
*
**
***      TCB FIELDS USED
**
*
         SPACE
         AIF   ('&SYSTEM' NE 'VS1').NVS104                       81341
TCBPIB   EQU   124                 OFFSET OF PIB POINTER
TCBTTQE  EQU   224                 ADDRESS OF QUEUE OF TQE'S (TASK)
         SPACE 2
         AGO   .VS104
.NVS104  ANOP
TCBTME   EQU   120                 OFFSET OF TQE POINTER
TCBJSTCB EQU   124                 OFFSET OF JOB STEP TCB POINTER
TCBOTC   EQU   132                 OFFSET OF INITIATOR TCB POINTER
         SPACE 2
.VS104   ANOP
*
**
***      TQE FIELDS USED
**
*
         SPACE
TQEFLGS  EQU   0                   OFFSET OF TQE FLAGS FIELD
         AIF   ('&SYSTEM' NE 'VS1').NVS105                       81341
TQEJBST  EQU   X'04'               MASK FOR JOB/STEP TQE
TQETCB   EQU   0                   OFFSET OF TCB POINTER
TQEFLNK  EQU   4                   OFFSET OF FORWARD TQE CHAIN POINTER
         AGO   .VS108
.NVS105  ANOP
TQETYPE  EQU   X'03'               MASK FOR TYPE BITS, X'00' IS
*                                  TASK TIMER
TQEINCOM EQU   X'08'               MASK FOR TIMER COMPLETE
         AIF   ('&SYSTEM' NE 'SVS').VS105                        81341
TQEBLNK  EQU   8                   OFFSET OF BACK CHAIN POINTER
.VS108   ANOP
TQEVAL   EQU   16                  OFFSET OF TQE VALUE FIELD
         AGO   .SVS04
.VS105   ANOP
TQEVAL   EQU   12                  OFFSET OF TQE VALUE FIELD
.SVS04   ANOP
         SPACE 2
         L     R0,=X'7FFFFFFF'    IN CASE NO SMF (TIME=1440)    GP13134
         SPACE
         AIF   ('&SYSTEM' EQ 'MVS').MVS05                        81341
*
**
***      LOCATE AND VALIDATE JOB STEP TIMER
**
*
         SPACE
         AIF   ('&SYSTEM' NE 'VS1').NVS106                       81341
         L     R8,TCBPIB(,R4)      GET ADDRESS OF CALLER'S PIB
         L     R9,SD33JTQE(,R8)    GET ADDRESS OF JOB-STEP TQE
         LA    R9,0(,R9)           CLEAR HIGH-ORDER BYTE FOR COMPARE
         CLI   TQEFLGS(R9),TQEJBST IS THIS THE JOB/STEP TQE
         BCR   7,RE                NO, FORGET IT
         SPACE 2
         AGO   .VS106
.NVS106  ANOP
         L     R8,TCBJSTCB(,R4)    GET A(CALLER'S JOB STEP TCB)
         L     R8,TCBOTC(,R8)      GET A(CALLER'S INITIATOR TCB)
         LTR   R8,R8               IS INITIATOR PRESENT
         BCR   8,RE                NO, FORGET IT
         L     R9,TCBTME(,R8)      GET A(INITIATOR'S TQE)
         LTR   R9,R9               IS A JOB-STEP TQE PRESENT
         BCR   8,RE                NO, FORGET IT
         TM    TQEFLGS(R9),TQETYPE+TQEINCOM IS THIS TQE OK
         BCR   7,RE                NO, FORGET IT
         SPACE 2
.VS106   ANOP
*
**
***      EVALUATE JOB-STEP TIMER
**
*
         SPACE
         AIF   ('&SYSTEM' NE 'SVS').NSVS05                       81341
         L     R7,CVTTPC(,R3)      GET A(TIMER DATA AREA - TPC)
         STPT  CPUTWORK            STORE CURRENT CPU TIMER VALUE
         LM    RA,RB,CPUTWORK      GET ITS VALUE IN REGISTERS
         CLC   TQEBLNK(4,R9),TTOPQ(R7) IS THIS TQE ON CHAIN HEAD
         BE    HEAD                YES, ITS VALUE IS IN TIMER
         AL    RA,TQEVAL(,R9)      ADD IN HIGH ORDER
         AL    RB,TQEVAL+4(,R9)       AND LOW ORDER FROM TQE
         BC    8+4,NOVFLOW         IF NO OVERFLOW, COOL
         AL    RA,=F'1'            ELSE REFLECT CARRY
NOVFLOW  SL    RB,INTERVAL+4(,R7)  SUBTRACT LOW ORDER HALF OF INTERVAL
         BNM   NOBORROW            IF NO BORROW NEEDED, COOL
         BCTR  RA,0                ELSE REFLECT BORROW
NOBORROW SL    RA,INTERVAL(,R7)    SUBTRACT HIGH-ORDER HALF OF INTERVAL
HEAD     DS    0H'0'
         SPACE 2
         AGO   .SVS05
.NSVS05  AIF   ('&SYSTEM' NE 'VS1').NVS109                       81341
         L     R1,TQETCB(,R9)      GET A(TCB ASSOCIATED WITH TQE)
         L     R1,TCBTTQE(,R1)     GET A(TOP TASK TQE FOR TCB)
         STPT  TQEVAL(R1)          STORE CPU TIMER IN IT
         TM    TQEVAL(R1),X'80'    WAS TIMER NEGATIVE
         BZ    *+4+6               NO, COOL
         XC    TQEVAL(8,R1),TQEVAL(R1) YES, SET VALUE IN TQE TO ZERO
         SLR   RA,RA               CLEAR VALUE
         SLR   RB,RB                 REGISTERS
         SPACE
VS1LOOP  AL    RA,TQEVAL(,R1)      ADD IN FIRST HALF AND
         AL    RB,TQEVAL+4(,R1)      SECOND HALF OF CURRENT TQE
         BC    8+4,*+4+4           IF NO OVERFLOW, COOL
         LA    RA,1(,RA)           ELSE, REFLECT IT
         LA    R1,0(,R1)           CLEAR HIGH-ORDER BYTE FOR COMPARE
         CLR   R1,R9               HAVE WE REACHED THE JOB/STEP TQE
         BE    CONVERT             YES, CONVERT VALUE
         L     R1,TQEFLNK(,R1)     NO, CHAIN TO NEXT TQE
         LTR   R1,R1               ARE WE IN ERROR
         BNZ   VS1LOOP             NO, I SHOULD HOPE NOT!
         SPACE
         DC    Y(0)                RAN OFF END OF TCB TQE QUEUE
         SPACE 2
         AGO   .SVS05
.NVS109  ANOP
         L     R7,CVTTPC(,R3)      GET ADDRESS OF SIX HOUR PSEUDO-CLOCK
         L     R0,TIMER            GET CURRENT INTERVAL TIMER VALUE
         SRL   R0,1                CONVERT TO 26 MICROSECOND UNITS
         AL    R0,TQEVAL(,R9)      ADD IN TQE VALUE
         SL    R0,0(,R7)           SUBTRACT SIX HOUR PSEUDO CLOCK
         BR    RE                  EXIT
         AGO   .SVS06
.MVS05   ANOP
         SPACE 2
*
**
***      GET TIME USED, IN CPU TIMER UNITS, IN REGISTERS R2 AND R3
**
*
*        THIS SVC CALCULATES THE TOTAL CPU TIME USED BY ALL           *
*        TCBS IN THE CALLER'S ADDRESS SPACE. IT DOES THIS BY          *
*        ADDING THE CURRENT DISPATCHING INTERVAL (CURRENT TOD         *
*        CLOCK VALUE - LCCADTOD) TO THE CUMULATIVE TCB TIME           *
*        FIELD (ASCBEJST) IN THE ASCB. THE VALUE THUS CALCULATED      *
*        IS IN TOD CLOCK UNITS.                                       *
*                                                                     *
*        WE SUBTRACT THIS VALUE FROM THE JOB/STEP TIME LIMIT, ALSO    *
*        IN THE ASCB, TO GET THE TIME BEFORE A 322 ABEND IN TOD       *
*        CLOCK UNITS, WHICH WE CONVERT TO 26-MICROSECOND TIMER        *
*        UNITS AND RETURN IN REGISTER ZERO.                           *
*                                                                     *
.CDONE   ANOP
         SPACE
         ICM   RA,15,ASCBJSTL(R7) SMF TIMING ?                  GP13134
         BZ    NOSMF                 NO; RETURN MAX             GP13134
         STNSM ENABLE+1,X'FC'     MAKE PSEUDO-REENTRANT         GP13134
         SR    RB,RB                                            GP13134
         STCK  CPUTWORK            SAVE TOD CLOCK VALUE
         LM    R2,R3,CPUTWORK      GET IT IN REGISTERS
ENABLE   STOSM BYTE,*-*           RESTORE ORIGINAL STATUS       GP13134
         L     R8,PSALCCAV         GET A(LCCA FOR THIS CPU)
         SL    R3,LCCADTOD+4(,R8) SUBTRACT LOW-ORDER DISPATCH TIME
         BNM   *+4+4               IF NO BORROW, COOL           GP13134
         SL    R2,=F'1'            ELSE, REFLECT IT             GP13134
         SL    R2,LCCADTOD(,R8)    SUBTRACT HIGH-ORDER DISPATCH TIME
         AL    R3,ASCBEJST+4(,R7)  ADD IN LOW-ORDER TCB TIME
         BC    8+4,*+4+4           IF NO CARRY, COOL
         AL    R2,=F'1'            ELSE REFLECT IT              GP13134
         AL    R2,ASCBEJST(,R7)    ADD IN HIGH-ORDER TCB TIME
         SLR   RB,R3              SUBTRACT LOW HALF
         BC    3,*+4+4              NO BORROW
         SL    RA,=F'1'           PRPAGATE BORROW
         SLR   RA,R2              SUBTRACT HIGH HALF
         SPACE 2
*
**
***      GET TIME LEFT, IN CPU TIMER UNITS, IN REGISTERS RA AND RB
**
*
.SVS05   ANOP
*
**
***      CONVERT RA-RB TO 26 MICROSECOND UNITS IN REGISTER 0
**
*
         SPACE
         LTR   RA,RA               IS TIME NEGATIVE
         BCR   4,RE                YES, RETURN A ZERO
CONVERT  C     RA,HALFDAY1         IS INTERVAL GREATER THAN 12 HOURS
         BNH   TLESHALF            NO, COOL
         LM    RA,RB,HALFDAY1      RETURN 12 HOUR VALUE         GP13134
TLESHALF SLDL  RA,12               CONVERT TO MICROS SECONDS
         D     RA,MICPERTU         GET 26 MICROSECOND TU'S IN RB
         LR    R0,RB               COPY TO REGISTER 0           GP13134
         BR    RE                  RETURN TO CALLER
NOSMF    L     R0,=X'7FFFFFFF'                                  GP13134
         BR    RE                 RETURN WITH MAX               GP13134
.SVS06   AIF   ('&SYSTEM' EQ 'MVT').EXIT                         81341
         SPACE 2
*
**
***      CONSTANTS
**
*
         SPACE
         AIF   ('&SYSTEM' EQ 'VS1').SVS07                        81341
         AIF   ('&SYSTEM' EQ 'MVS').NSVS07                       81341
         AIF   ('&SYSTEM' NE 'SVS').NSVS07                       81341
CPUTWORK DC    D'0'                TIMER WORK AREA
         AGO   .SVS07
.NSVS07  AIF   ('&SYSTEM' NE 'MVS').EXIT                         81341
CPUTWORK DC    D'0'                WORK AREA FOR STCK
.SVS07   ANOP
         DC    0F'0'               FORCE ALIGNMENT
MICPERTU DC    XL4'1A0AAAAB'       MICROSECONDS/TU
TM12     DC    XL4'62E08000'       NUMBER OF TU'S IN 12 HOURS
HALFDAY1 DC    XL8'0000A0EEBB000000' MICROSECONDS IN 12 HOURS,
BYTE     DC    X'00'         STOSM DATA                         GP13134
*                                  CPU TIMER FORMAT
.EXIT    ANOP
         END   IGC&TSMFSVC
