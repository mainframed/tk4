ESPIN    TITLE 'E S P I N I T  ***  BUILD AND INITIALIZE ESP CVT'
*---------------------------------------------------------------------*
*                                                                     *
*    E S P I N I T :  ACCOUNTING/BILLING/SYSMODS INITIALIZATION       *
*                                                                     *
*    FUNCTION:  THIS MODULE CREATES THE LOCAL USERCVT EXTENSION,      *
*    AND INITIALIZES COMMON VALUES.                                   *
*                                                                     *
*    BECAUSE THIS FUNCTION MAY BE CALLED DURING SYSTEM START          *
*    (MASTER SCHEDULER INITIALIZATION) BEFORE THE GRS, CATALOG,       *
*    AND OTHER ADDRESS SPACES ARE STILL INITIALIZING, NO ENQ          *
*    IS ISSUED.  INSTEAD THIS MODULE USES COMPARE AND SWAP            *
*    LOGIC TO MAKE ONE, AND ONLY ONE, BUILT ESPCVT THE MASTER.        *
*                                                                     *
*    ENVIRONMENT:  ENTERED IN KEY ZERO AND PROGRAM STATE   .          *
*                                                                     *
*    ATTRIBUTES: RENT, REFR                                           *
*                                                                     *
*    INSTALLATION: LINKEDIT INTO A LINKLIST LIBRARY.                  *
*                                                                     *
*    COMPONENT: LOCAL BILLING AND SMF SUPPORT                         *
*                                                                     *
*    AUTHOR: GERHARD POSTPISCHIL                                      *
*                                                                     *
*    CHANGE LEVEL:  INITIAL VERSION- 10/20/92                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         COPY  OPTIONGB      DEFINE LOCAL OPTIONS
         GBLC  &HOOKCVT
         SPACE 1
         SYSPARM LIST=YES    SHOW SETTINGS IN EFFECT
         SPACE 2
         PRINT &PRTMAC
         PUNCH ' ORDER ESPINIT(P),ESPMODS '
ESPINIT  CSECT ,
ESPMODS  CSECT ,
ESPCVT   ESPCVT OPT=LIST     NAMES OF LPA RESIDENT MODULES
ESPINIT  CSECT ,
         SPACE 2
***********************************************************************
*                                                                     *
*        COPYRIGHT 1992  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         PRINT &PRTSOR
ESPLOAD  PGMHEAD ZERO12,BASE=R12,PARM=R9
         SPACE 1
         L     R3,CVTPTR     LOAD THE CVT
         USING CVTMAP,R3     DECLARE IT
         ICM   R7,IIII,&HOOKCVT  USER CVT EXTENSION ALREADY LOADED ?
         BNZ   GOODEXIT      YES; DON'T NEED TO DO ANYTHING
         SPACE 1
*    DEPENDING ON THE OS VERSION, THE ESPCVT INITIALIZATION MAY
*    OR MAY NOT HAVE BEEN PERFORMED BEFORE (PATCH TO IEEVIPL). IF
*    IT HAS NOT, BUILD AND INITIALIZE THE EXTENSION HERE.
         L     R0,SPLENESP   GET GETMAIN SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)    GET THE USER CVT EXTENSION
         LR    R7,R1         COPY THE ADDRESS
         USING ESPCVT,R7     DECLARE IT
         XC    ESPCVT(ESPGMLEN),ESPCVT  CLEAR IT OUT
         TIME  BIN           GET IPL TIME/DATE
         STM   R0,R1,UCIPLTIM
         SPACE 1
         L     R5,=A(ESPMODS)  GET NAMES OF MODULES TO BE LOADED
         LA    R4,(PATULEND-PATULIST)/PATULENG  NUMBER OF ENTRIES
LOOKLOOP LM    R0,R1,4(R5)   LOAD MODULE NAME
         BALS  R9,LPALOOK    FIND IN MLPA OR PLPA OR FLPA
         L     R14,0(,R5)    LOAD THE ADDRESS OFFSET
         ST    R15,ESPCVT(R14)   STASH THE ADDRESS OR ZERO
         LA    R5,PATULENG(,R5)  INCREMENT TO NEXT ENTRY
         BCT   R4,LOOKLOOP
         SPACE 1
*   UNTIL ACCOUNTING INTERFACE IS INITIALIZED, PROVIDE MINIMAL DATA
*
         L     R9,SPLENACT   GET SUBPOOL AND LENGTH
         GETMAIN R,LV=(R9)
         LR    R8,R1         COPY START ADDRESS
         SLR   R15,R15
         MVCL  R8,R14        CLEAR THE STORAGE
         ST    R1,UCLACCT    SET NEW TABLE
         LA    R15,4500/2    SET HALF OF ACCT TABLE SIZE
         LA    R15,4500/2(R15,R1) POINT TO SECOND HALF OF TABLE
         LA    R0,X'FF'      MAKE ALL BITS IN A GROUP VALID
         LA    R14,25904/8   SET BYTE FOR SYSTEMS(Z904)
         STC   R0,0(R14,R1)  VALID
         STC   R0,0(R14,R15)
         LA    R14,25906/8   SET BYTE FOR OPERATIONS(Z906)
         STC   R0,0(R14,R1)  VALID
         STC   R0,0(R14,R15)
         LA    R14,25908/8   ALSO GET BYTE FOR TECH SUPPORT(Z908)
         STC   R0,0(R14,R1)
         STC   R0,0(R14,R15)
         LA    R14,2904/8    (C904) START TASKS
         STC   R0,0(R14,R1)
         STC   R0,0(R14,R15)
         SPACE 1
*   NOW LET'S STASH THE ESPCVT ADDRESS IN THE CVT, UNLESS DONE WHILE
*        WE WERE SETTING UP THIS ONE.
         SLR   R1,R1         LOOK FOR ZERO IN &HOOKCVT
         CS    R1,R7,&HOOKCVT  REPLACE IT
         BZ    GOODEXIT      SUCCESSFUL - NOW GET OUT
         SPACE 1
         L     R1,UCLACCT    GET ACCOUNTING TABLE ADDRESS BACK
         L     R0,SPLENACT   GET LENGTH
         FREEMAIN R,LV=(0),A=(1)   FREE IT
         SPACE 1
         L     R0,SPLENESP   GET LENGTH
         FREEMAIN R,LV=(0),A=(R7)  FREE OUR COPY OF THE ESPCVT
         L     R7,ESPCVT    SET CORRECT RETURN VALUE
         SPACE 1
GOODEXIT L     R1,4(,R13)    GET OLD SAVE AREA
         ST    R7,20(,R1)    RETURN ESPCVT IN R0
         PGMEXIT  RC=0       RETURN WITH CODE 0
         SPACE 1
LPALOOK  LA    R15,CVTQLPAQ  => LPA CDE QUEUE HEADER
         USING CDCHAIN,R15   (FAKE FOR NOW)
LUKMLPA  ICM   R15,IIII,CDCHAIN GET NEXT CDE ADDRESS
         BZ    LUKPLPA       NONE- END OF CHAIN
         C     R1,CDNAME+4   SAME MODULE SUFFIX ?
         BNE   LUKMLPA       NO
         C     R0,CDNAME     SAME MODULE PREFIX ?
         BNE   LUKMLPA       NO- LOOPBACK FOR NEXT
         B     ANYCDE        YES- GO STASH EP ADR
         DROP  R15
LUKPLPA  STM   R3,R12,32(R13)  SAVE REGISTERS
         L     R7,CVTLPDSR   IEAVVMSR (LPDE SEARCH RTN)
         LA    R2,LPARETN    SET BRANCH ADR
         BALSR R14,R7        CALL PLPA SEARCH ROUTINE
         BALSR R15,R2        MODULE FOUND- POINT TO RC=0
         DC    H'0'          RETURN CODE ZERO
         BALSR R15,R2        MODULE NOT FOUND- POINT TO 4
         DC    H'4'          RETURN CODE 4
LPARETN  LM    R3,R12,32(R13)  RELOAD CLOBBERED REGISTERS
         ICM   R15,OOII,0(R15)  LOAD AND TEST RETURN CODE
         BZ    GOTLPDE       ZERO-CONTINUE
         SLR   R15,R15
         BR    R9            RETURN TO CALLER WITH R15=0
GOTLPDE  LR    R15,R0        COPY LPDE ADDRESS
         USING LPDE,R15
*        (NOTE: EP OFFSET ASSUMED SAME FOR CDE AND LPDE)
ANYCDE   L     R15,LPDENTP   LOAD ENTRY POINT
         DROP  R15
         BR    R9            RETURN TO CALLER WITH EP ADDRESS IN R15
         SPACE 1
*    NOTE THAT SP 231 IS PREFERABLE FOR ACCOUNT TABLE, BUT THEN THE
*        @SERVICE ROUTINE AND OTHERS WOULD NEED TO BE REDESIGNED 92297
SPLENACT DC    0A(0),AL1(241),AL3(2*4500)  ACCT SIZE/SUB-POOL
SPLENESP DC    0A(0),AL1(241),AL3(ESPGMLEN)  ESPCVT SP/LEN
         SPACE 1
         SPACE 1
SAVE     DSECT ,             SAVE/WORK AREA
DB       DS    D             WORK WORD
         SERVDEFS ,
SAVEEND  EQU   *
         SPACE 2
         PRINT &PRTSYS
         CVT   DSECT=YES     MVS SYSTEM CVT
         SPACE 1
         IHACDE ,            CONTENTS DIRECTORY ENTRY
         IHALPDE ,           LINK PACK DIRECTORY ENTRY
         SPACE 2
         END   ,
