HASPXJ08 TITLE 'PRC - EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
* MODULE NAME: EXIT008             (CONTROL BLOCK READ/WRITE EXIT)    *
*                                                                     *
* DESCRIPTIVE NAME: JES2 EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT  *
*                                                                     *
* AUTHOR: BRIAN WESTERMAN                                             *
*                                                                     *
* DATE WRITTEN: MAY 1986                                              *
* DATE CHANGED: MARCH 1990 BY GREG PRICE (PRYCROFT SIX) FOR SP3.1.1   *
*               JANUARY 1992 BY GREG PRICE (FERNTREE) FOR SP4.2.0     *
*                                                                     *
* FMID: HJE4420 (MVS/SP-JES2 4.2.0)                                   *
*                                                                     *
* PURPOSE: THIS EXIT PLACES OBTAINS AND STORES IN THE JCT EITHER      *
*          THE MAXIMUM CONDITON CODE OF ALL THE STEPS IN A JOB OR     *
*          THE ABEND CODE OF THE JOB.                                 *
*                                                                     *
* INVOCATION POINT: HASPXJ08                                          *
*                                                                     *
* ENTRY POINT: HASPXJ08                                               *
*                                                                     *
* REGISTERS ON INPUT:                                                 *
*     R0: ADDRESS OF THE XPL                                          *
*     R1: ADDRESS OF THE JCT                                          *
*     R2-R10: N/A                                                     *
*     R11: ADDRESS OF THE SVT                                         *
*     R12: N/A                                                        *
*     R13: ADDRESS OF AN OS-STYLE SAVE AREA                           *
*     R14: RETURN ADDRESS                                             *
*     R15: ENTRY ADDRESS                                              *
*                                                                     *
* REGISTERS ON RETURN:                                                *
*     R0-R1: N/A                                                      *
*     R15: A RETURN CODE:                                             *
*          =0, CONTINUE NORMAL EXIT OR JES2 PROCESSING                *
*          =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH NORMAL        *
*              PROCESSING                                             *
*                                                                     *
* JES2 MACROS USED:                                                   *
*     $MODULE, $ENTRY, $MODEND                                        *
*                                                                     *
***********************************************************************
         EJECT
         COPY $HASPGBL                 COPY HASP GLOBALS
         EJECT
HASPXJ08 $MODULE ENVIRON=USER,                                         C
               SSOB,                   REQ'D TO DETERMINE INVOKER      C
               RPL,                    REQ'D BY $BUFFER                C
               $BUFFER,                REQ'D BY JCT                    C
               $CADDR,                 REQ'D BY SOMETHING              C
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       C
               $HCCT,                  REQ'D TO DETERMINE INVOKER      C
               $HFAME,                 REQ'D BY $HCCT                  C
               $JCT,                   REQ'D TO SAVE ABEND/COND CODE   C
               $MIT,                   REQ'D BY $MODEND, $HCCT         C
               $PADDR,                 REQ'D BY SOMETHING              C
               $PARMLST,               REQ'D BY SOMETHING              C
               $PSV,                   REQ'D BY SOMETHING              C
               $SCAT,                  REQ'D BY $HCCT                  C
               $SJB,                   REQ'D TO DETERMINE INVOKER      C
               $TQE,                   REQ'D BY $SJB                   C
               $USERCBS,               REQ'D BY SOMETHING              C
               $XECB,                  REQ'D BY $HCCT                  C
               $XPL                    REQ'D TO CHECK PARAMETER LIST
*HASPXJ08 AMODE 31
HASPXJ08 RMODE 24
         TITLE 'PRC - EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
*  INITIALIZATION                                                     *
*                                                                     *
***********************************************************************
         SPACE 1
EXIT08   $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE 3
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         SLR   R15,R15                 SET DEFAULT RETURN CODE
         EJECT
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THERE IS A JCT , IF IT IS FOR A BATCH JOB AND      *
*  IF NOTIFY WAS REQUESTED.  IF NOT, RETURN.                          *
*                                                                     *
***********************************************************************
         SPACE 1
         LR    R10,R0                  GET ADDRESS OF XPL
         USING XPL,R10
         SPACE 1
         CLC   =C'JCT ',X008CBID       IS A JCT BEING PROCESSED?
         BNE   RETURN                  NO
         SPACE 1
         CLI   XPLCOND,X008CBWR        IS A JCT BEING WRITTEN?
         BNE   RETURN                  NO
         DROP  R10                     XPL
         SPACE 1
         LR    R10,R1                  GET ADDRESS OF JCT
         USING JCT,R10
         SPACE 1
         CLI   JCTJOBID,C'J'           IS THIS A BATCH JOB?
         BNE   RETURN                  NO, RETURN
         SPACE 1
         CLI   JCTTSUID,C' '           WAS NOTIFY REQUESTED?
         BE    RETURN                  NO, RETURN
         SPACE 1
         TM    JCTJBOPT,JCTXBMII       IS THIS AN EXECUTION BATCH      C
               (JCTXBMII WAS JCTXBACH)   MONITOR?
         BO    RETURN                  YES, RETURN
         SPACE 3
***********************************************************************
*                                                                     *
*  FIND THE SJB ON THE JOBS EXECUTING BY CLASS QUEUE THAT BELONGS TO  *
*  THIS JOB'S JCT.  IF THE SJB INDICATES THE JOB IS NOT IN            *
*  TERMINATION, THEN RETURN.                                          *
*                                                                     *
***********************************************************************
         SPACE 1
         USING HCCT,R11                PROVIDE SSVT ADDRESSABILITY
         SPACE 1
         L     R2,CCTJXCLS             GET EXECUTING SJB'S QUEUE
         USING SJB,R2                  PROVIDE SJB ADDRESSABILITY
GETSJB   DS    0H
         LTR   R2,R2                   TEST FOR END OF QUEUE
         BZ    RETURN                  RETURN IF NO MATCH
         CLC   JCTJOBID(8),SJBJOBID    IS THIS THE SJB FOR THIS JCT?
         BE    FOUNDSJB                YES, PROCESS IT
         L     R2,SJBXQCHN             GET POINTER TO NEXT SJB
         B     GETSJB                  LOOP BACK THRU
         SPACE 1
FOUNDSJB DS    0H
         CLI   SJBXQFN1+1,SSOBTERM     WAS EXIT INVOKED BY JOB         C
                                         TERMINATION (HOSTERM)?
         BNE   RETURN                  NO, RETURN
         EJECT
***********************************************************************
*                                                                     *
*  FIND THE OS JCT FOR THIS JOB AND CHECK TO SEE IF THE JOB ABENDED.  *
*  IF IT DID ABEND, GET THE ABEND CODE.                               *
*                                                                     *
***********************************************************************
         SPACE 1
GETCVT   EQU   *
         L     R2,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R2,0(,R2)               LOAD ADDR OF NEXT/CURR TCB'S
         L     R2,OURTCB(,R2)          LOAD ADDR OF OUR TCB
         L     R2,TCBJSCB(,R2)         LOAD ADDR OF JSCB
         L     R2,JSCBACT(,R2)         LOAD ADDR OF ACTIVE JSCB
         L     R2,JSCBJCT(,R2)         LOAD ADDR OF OS JCT
         USING INJMJCT-16,R2           ESTABLISH OS JCT ADDRESSABILITY
         SPACE 1
         TM    JCTJSTAT,JCTABEND       DID JOB ABEND?
         BNO   GETMAXCC                NO, GET MAXIMUM CONDITION CODE
         L     R3,JCTACODE             YES, GET ABEND CODE
         B     SAVECODE                GO TO SAVE IT
         SPACE 3
***********************************************************************
*                                                                     *
*  IF THE JOB DID NOT ABEND, THEN SCAN THE SCT'S FOR THE JOB AND      *
*  FIND THE MAXIMUM CONDITION CODE OUT OF ALL THE JOB'S STEPS.        *
*                                                                     *
***********************************************************************
         SPACE 1
GETMAXCC DS    0H
         L     R2,JCTSDKAD             GET FIRST SCT ADDRESS
         USING INSMSCT-16,R2           ESTABLISH SCT ADDRESSABILITY
         SPACE 1
         SLR   R3,R3                   ZERO OUT WORK REGISTER
         SPACE 1
SCTLOOP  DS    0H
         SRL   R2,8                    GET ADDRESS IN PROPER FORM
         LTR   R2,R2                   ARE THERE ANY MORE SCT'S?
         BZ    SAVECODE                NO, GO TO FINISH
         TM    SCTSTEND,SCTSTSRT+SCTSTPND  DID STEP RUN?
         BNO   NEXTSCT                 NO, GET NEXT SCT
         CH    R3,SCTSEXEC             IS THIS STEP'S CONDITION CODE   C
                                         GREATER THAN THE MAXIMUM?
         BNL   NEXTSCT                 NO, GET NEXT SCT
         LH    R3,SCTSEXEC             YES, SAVE NEW MAX COND CODE
NEXTSCT  DS    0H
         L     R2,SCTANSCT             GET NEXT SCT
         B     SCTLOOP                 LOOP TO CHECK NEXT SCT
         EJECT
***********************************************************************
*                                                                     *
*  SAVE EITHER THE ABEND CODE OR THE MAXIMUM CONDITION CODE FOR       *
*  ANY STEP OF THE JOB IN A JCT USER FIELD.  THIS INFORMATION WILL    *
*  BE USED LATER IN EXIT016 - TSO NOTIFY.                             *
*                                                                     *
***********************************************************************
         SPACE 1
SAVECODE DS    0H
         ST    R3,JCTUSER1             SAVE ABEND/MAX COND CODE
         MVI   JCTUSER1,X'80'          MARK IT AS PROCESSED
         SPACE 3
***********************************************************************
*                                                                     *
*  GO BYE-BYE.                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
RETURN   DS    0H
         L     R14,12(,R13)            LOAD RETURN ADDRESS
         LM    R0,R12,20(R13)          RESTORE REGISTERS
         BR    R14                     RETURN
         EJECT
PATCH    DS    CL200
         DC    CL8'ENDPATCH'
CVTPTR   EQU   X'10'         ADDRESS OF CVT POINTER
OURTCB   EQU   X'04'         OFFSET INTO TCB LIST OF OUR TCB ADDRESS
TCBJSCB  EQU   X'B4'         OFFSET INTO TCB OF JSCB ADDRESS
JSCBACT  EQU   X'15C'        OFFSET INTO JSCB OF ACTIVE JSCB ADDRESS
JSCBJCT  EQU   X'104'        OFFSET INTO ACTIVE JSCB OF OS JCT ADDRESS
         SPACE 3
JCTDSCT  DSECT
*        THIS CONTROL BLOCK IS A COPY OF OS JCT DEFINING
*        ONLY THOSE FIELDS USED BY THIS MOD.  THE OS JCT,
*        IEFAJCTB, CONTAINS DUPLICATE FIELD NAMES OF THOSE
*        USED BY THE JES2 JCT (JCTID, JCTJNAM, AND JCTJMR)
*        AND CAUSES ASSEMBLY ERRORS IF IT USED.
INJMJCT  EQU    *
         DS     CL5                    FILLER
JCTJSTAT DS     1C                     JOB STATUS INDICATORS
JCTABEND EQU    8                      BIT 4 - JCT ABEND BIT
         DS     CL26                   FILLER
JCTSDKAD DS     CL4                    DISK ADDRESS OF FIRST SCT
         DS     CL132                  FILLER
JCTACODE DS     CL4                    ABEND CODE FIELD
         EJECT
         PUSH   PRINT
         PRINT  NOGEN
SCTDSCT  DSECT
         IEFASCTB
         POP    PRINT
HASPXJ08 RSECT
         SPACE  3
         LTORG
        $MODEND
         END
