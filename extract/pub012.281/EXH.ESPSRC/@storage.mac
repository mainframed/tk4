         TITLE '@ S T O R A G E  ***  SUBROUTINES'
***********************************************************************
**                                                                   **
**  GETPAGE : SUBROUTINE TO GET A PAGE OF STORAGE AND INITIALIZE IT  **
**     WITH A BXLE HEADER, AND 0 NEXT PAGE POINTER.                  **
**                                                                   **
**  PREVIOUS PAGE ADDRESS PASSED IN R4                               **
**  ENTRY SIZE PASSED IN R6                                          **
**                                                                   **
**  STORAGE IS ABOVE THE LINE                                        **
**                                                                   **
***********************************************************************
GETPAGE  SUBPUSH R8,R3       R4-R7 UPDATED WITH NEW INFORMATION
         L     R3,=A(PAGESIZE)   GET DESIGN SIZE
         GETMAIN RC,LV=(R3),BNDRY=PAGE,LOC=ANY,SP=88  GET SPACE
         LR    R9,R3         SAVE FOR LATER
         LR    R2,R1         COPY START ADDRESS AGAIN
         SR    R15,R15       CLEAR LENGTH AND INSERTION
         ST    R1,PAGELINK   MAKE LINK IN PREVIOUS PAGE
         LR    R4,R1         MAKE NEW PAGE ADDRESSABLE
         LA    R5,PAGEDATA   SET START ADDRESS
         MVCL  R2,R14        CLEAR THE PAGE
         SH    R9,=Y(PAGEDATA-PAGESECT-1)
         SR    R8,R8         CLEAR FOR DIVIDE
         DR    R8,R6         GET NUMBER OF ENTRIES
         BCTR  R9,0          ADJUST TO GET NUMBER OF LAST
         MR    R8,R6         R9=OFFSET TO LAST ENTRY
         LA    R7,0(R5,R9)   LAST POSSIBLE ENTRY
         LR    R8,R7         PRESERVE LAST USABLE ADDRESS
         STM   R5,R8,PAGEENT1  STASH PRELIMINARY PAGE DATA
         SUBPOP (R14)        RETURN UPDATED INFORMATION IN R4-R7
         SPACE 2
***********************************************************************
**                                                                   **
**  GETOP : SUBROUTINE TO GET THE FIRST/NEXT OPERAND ON THE INPUT    **
**     LINE (INCARD). COLUMNS 72-80 ARE IGNORED.                     **
**                                                                   **
**  VECTORED RETURN TO +0 WHEN CARD IS BLANK OR BEGINS WITH *        **
**    RETURN TO +4 WITH PARSED VARIABLE IN GOTVAR, AND ITS LENGTH    **
**    MINUS ONE IN GOTLEN                                            **
**                                                                   **
***********************************************************************
GETOP    STM   R14,R12,12(R13)   SAVE CALLER'S REGISTERS
         LM    R3,R5,PARSBXLE  GET CURRENT PARSE POINTERS
         LR    R6,R5         POINT TO LAST COLUMN
         SR    R6,R3         LESS CURRENT
         BM    GETOPER       ALL DONE?
         EX    R6,EXTRTNBL   LOOK FOR A NON-BLANK
         BZ    GETOPER       NONE FOUND
         ST    R1,DB         SAVE FOR CALLER
         CLM   R2,1,TRTNONBL+C'*'  IS IT A COMMENT FIELD?
         BE    GETOPER       YES
         MVC   GOTVAR,BLANKS  PREPARE THE OUTPUT FIELD
         LR    R3,R1         UPDATE THE START COLUMN
         LR    R6,R5         POINT TO LAST COLUMN
         SR    R6,R3         LESS CURRENT
         BM    GETOPER       ALL DONE?
         LA    R1,1(,R5)     PRESET END COLUMN FOR NO MATCH
         EX    R6,EXTRTBLK   LOOK FOR A NON-BLANK
         ST    R1,PARSBXLE   SET RESTART POSITION FOR NEXT TIME
         SR    R1,R3         GET FIELD LENGTH
         SH    R1,=H'1'      GET EXECUTE LENGTH
         BM    GETOPER       HUH?
         LA    R0,L'GOTVAR-1 GET MAXIMUM LENGTH
         CR    R1,R0         TOO LONG?
         BNH   *+6           NO
         LR    R1,R0         ELSE TRUNCATE IT
         EX    R1,EXMVCNAM   MOVE NAME
         STC   R1,GOTLEN     AND SAVE LENGTH
GETOPEX  LM    R14,R12,12(R13)   RESTORE CALLER'S REGISTERS
         B     4(,R14)       RETURN VARIABLE
GETOPER  LM    R14,R12,12(R13)   RESTORE CALLER'S REGISTERS
         BR    R14           RETURN ERROR OR COMMENT
EXTRTBLK TRT   0(0,R3),TRTBLANK  SCAN FOR A BLANK (OR NON-ZERO)
EXTRTNBL TRT   0(0,R3),TRTNONBL  SCAN FOR A NON-BLANK
EXMVCNAM MVC   GOTVAR(0),0(R3)  MOVE ISOLATED VARIABLE
         TITLE '@ S T O R A G E  ***  DATA/WORK AREAS/MAPPINGS'
TRTBLANK TRENT ,(C' ',4),FILL=0  TRT TABLE FOR FINDING BLANKS   GP12046
         SPACE 1
TRTNONBL TRENT ,(C' ',0),FILL=4  TABLE FOR NON-BLANKS           GP12046
         SPACE 1
BLANKS   DC    CL80' '       CONSTANT
         SPACE 1
PAGESECT DSECT ,             LIST STORAGE DEFINITION
PAGELINK DS    A             ADDRESS OF NEXT PAGE OR 0
PAGEENT1 DS    A             ADDRESS OF FIRST DATA ENTRY
PAGEENTL DS    F             LENGTH OF ENTRY
PAGEENTX DS    A             ADDRESS OF LAST USABLE ENTRY
PAGELEND DS    A             ADDRESS OF LAST USABLE ENTRY
PAGEDATA EQU   *             START OFREAL DATA
PAGESIZE EQU   4*1024        START SMALL
         SPACE 1
SAVEWORK DSECT ,
         ORG   SAVEWORK+WORKPFX  SPACE PAST THE SAVE AND STACK AREA
WORKSTRT DS    0D
DB       DS    D             CONVERSION WORK AREA
DB2      DS    D             CONVERSION WORK AREA
PARSBXLE DC    A(INLINE,1,INLINE+70)  FIRST/LEN/LAST COLUMN TO PARSE
         SPACE 1
GOTLEN   DS    X             LENGTH-1 OF VARIABLE NAME
GOTVAR   DS    CL63          PARSED VARIABLE NAME
UPPVAR   DS    CL63          VARIABLE NAME CONVERTED TO UPPER CASE
         SPACE 1
INCARD   DC    0CL80' '        1/2 - INPUT CARD IMAGE
INLINE   DC    CL71' '         2/2 - INPUT TEXT IMAGE           GP98322
INCONT   DC    C' ',CL8' '     3/2 - CONTINUATION/SEQUENCE FIELD
         SPACE 1                                                GP98322
PATCHWRK PATCH ,             MAKE PATCH SPACE                   GP98322
WORKEND  DS    0D        END OF DYNAMIC WORK AREA
         SPACE 1
         DCBD  DSORG=PS,DEVD=DA   DCB MAPPING
         END   ,
