IEFUJV   TITLE 'SMF JOB VALIDATION- ALLOW JCL VARIABLES '
***********************************************************************
*                                                                     *
*             MODULE NAME = IEFUJV                                    *
*                                                                     *
*             FUNCTION =                                              *
*                PROVIDE ACCESS TO SYSTEM SYMBOLS IN JCL              *
*                USE A "// SET " STATEMENT TO ASSIGN SYSTEM SYMBOLS   *
*                TO VARIABLES LOCAL TO THE JOB;                       *
*                E.G. "// SET LPAR=&SYSNAME  " RESOLVES TO            *
*                     "// SET LPAR=PROD      "                        *
*                THIS MAY THEN BE USED IN A DSNAME, SUCH AS ...       *
*                //DD1   DD  DSN=SYS1.&LPAR..MYLIB                    *
*                                                                     *
*              WARNING =                                              *
*                 SYMBOLS ARE RESOLVED AT PRE-CONVERSION.             *
*                                                                     *
*                 THIS IS PARTICULARLY RELEVANT FOR DATE AND TIME     *
*                 WHERE A JOB IS PLACED ON HOLD OR CROSSES A DAY      *
*                 BOUNDARY.                                           *
*                 LIKEWISE THERE ARE JES MAS AND NJE ISSUES           *
*                                                                     *
*                 CAVEAT EMPTOR                                       *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 TRAILING PERIOD ON SYMBOL MAY OR MAY NOT BE         *
*                 INCLUDED - HAS NO EFFECT ON FUNCTIONALITY.          *
*                                                                     *
*                 MULTIPLE SYMBOLS PER CARD IMAGE IS SUPPORTED        *
*                                                                     *
*                 CONTINUATION OF "SET" CARD IMAGE IS *NOT* SUPPORTED *
*                    (USE MULTIPLE "SET" CARDS)                       *
*                                                                     *
*                 BE AWARE OF SYMBOL SUBSTITUTION EXTENDING THE CARD  *
*                 BEYOND COLUMN 72 - THIS WILL BE RETURNED, AND WILL  *
*                 GENERALLY CAUSE A JCL ERROR.                        *
*                                                                     *
*                 EXIT WILL CLEAR THE INPUT AREA TO ACCOMODATE THE    *
*                 SITUATION WHERE THE RESOLVED TEXT IS SHORTER        *
*                                                                     *
*                 EXIT WILL COPY AN EXTRA BYTE FROM THE TARGET TO     *
*                 ENSURE A BLANK AT END. THIS HANDLES THE SCENARIO    *
*                 WHERE THE RESOLVED IS LONGER, AND COMMENTS FOLLOW.  *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = HIGH LEVEL ASSEMBLER                     *
*                                                                     *
*                ATTRIBUTES = KEY 0, REENTRANT,                       *
*                   SUPERVISOR STATE, ENABLED, NO LOCKS HELD          *
*                                                                     *
*             ENTRY POINTS = IEFUJV (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                                                                     *
*              REGISTER USAGE =                                       *
*                    REGISTER  0       = WORK                         *
*                    REGISTER  1       = INPUT PARAMETERS, THEN WORK  *
*                    REGISTER  2       = WORK                         *
*                    REGISTER  3       = ADDRESS OF COMMON EXIT       *
*                                        PARAMETER AREA               *
*                    REGISTER  4       = ADDRESS OF JCL IMAGE         *
*                    REGISTER  5       = ADDRESS OF FLAG BYTE         *
*                    REGISTER  6       = ADDRESS OF JES INIT PARMS    *
*                    REGISTER  7       = ADDRESS OF SUBSYSTEM         *
*                                        INDICATOR                    *
*                    REGISTER  8       = ADDRESS OF ENVIRONMENT       *
*                                        INDICATOR                    *
*                    REGISTER  9       = LOOP COUNTER FOR JCL SCAN    *
*                    REGISTER  10      = ADDRESS PTR FOR JCL SCAN     *
*                    REGISTER  11      = UNUSED                       *
*                    REGISTER  12      = ADDRESSABILITY TO IEFUJV     *
*                                        CSECT                        *
*                    REGISTER  13      = REGISTER SAVE AREA POINTER   *
*                    REGISTER  14      = BAS RETURN REGISTER          *
*                    REGISTER  15      = WORK REGISTER                *
*                                                                     *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BSM 0,14 TO          *
*                             RETURN IN CALLER'S MODE                 *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*                OUTPUT = RESOLVED JCL                                *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = ASASYMBM                                  *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = ASASYMBP                            *
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE, RETURN,WTO.                              *
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
         EJECT
IEFUJV   CSECT ,
IEFUJV   AMODE 31
IEFUJV   RMODE 24
*
*
***********************************************************************
*
* REGISTER EQUATES
*
***********************************************************************
R00      EQU   00                      REGISTER 0
R01      EQU   01                      REGISTER 1
R02      EQU   02                      REGISTER 2
R03      EQU   03                      REGISTER 3
R04      EQU   04                      REGISTER 4
R05      EQU   05                      REGISTER 5
R06      EQU   06                      REGISTER 6
R07      EQU   07                      REGISTER 7
R08      EQU   08                      REGISTER 8
R09      EQU   09                      REGISTER 9
R10      EQU   10                      REGISTER 10
R11      EQU   11                      REGISTER 11
R12      EQU   12                      REGISTER 12
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
         EJECT
***********************************************************************
*                                                                     *
* MAINLINE CODE; SAVE PASSED PARAMETERS, CALL THE VARIOUS SUBROUTINES *
* AS NECESSARY.                                                       *
*                                                                     *
***********************************************************************
         SAVE  (14,12),,IEFUJV_&SYSDATE._&SYSTIME
         USING IEFUJV,R12              SET UP BASE ADDRESSABILITY
         LR    R12,R15                 LOAD BASE REG WITH ENTRY POINT
         LM    R03,R08,0(R01)          SAVE INPUT PARM LIST ADDRESSES
         CLC   0(3,R07),=C'JES'        BATCH JOB?
         BNE   FASTEXIT                NO; EXIT STAGE LEFT
         CLI   0(R05),128              EXTENDED JCL CARD IMAGE ???
         BNE   FASTEXIT                NO; EXIT STAGE LEFT
*
* CHECK FOR & CHARACTER IN THE CARD IMAGE
*
         XR    R00,R00                 CLEAR FOR SEARCH CHAR
         ICM   R00,B'0001',=C'&&'      LOOKING FOR C'&'
         LA    R09,71(R04)             POINT PAST STRING
         LA    R10,2(R04)              OFFSET PAST "//" IN CARD
         SRST  R09,R10                 "&" CHARACTER IN CARD IMAGE ??
         BC    11,FASTEXIT             NO, NOT INTERESTED ...
*
* CHECK FOR OUR SPECIFIC CARD
*
         LA    R09,65                  LOOP COUNTER FOR CHECK
         LA    R10,2(R04)              OFFSET INTO CARD IMAGE
LOOPSET  DS    0H
         CLC   0(5,R10),=C' SET '      (POTENTIALLY) ONE OF OUR CARDS ?
         BE    CHECKVAR                YEP - GO CHECK THE REST OF IT
         LA    R10,1(R10)              BUMP THE OFFSET
         BCT   R09,LOOPSET             CHECK AT NEXT CHAR
         B     FASTEXIT                END OF CARD; EXIT STAGE LEFT
CHECKVAR DS    0H
         LA    R10,5(R10)              BUMP PAST THE ' SET '
         LA    R01,5
         SR    R09,R01                 REDUCE THE LOOP COUNTER
         BC    4,FASTEXIT              NEGATIVE - ALL DONE
LOOPVARS DS    0H
         CLI   0(R10),C' '             STILL GOT A BLANK ???
         BNE   DOIT                    NUP - GO CHECK THE REST OF IT
         LA    R10,1(R10)              BUMP THE OFFSET
         BCT   R09,LOOPVARS            CHECK AT NEXT CHAR
         B     FASTEXIT                END OF CARD; EXIT STAGE LEFT
DOIT     DS    0H
*
* O.K., NOW WE HAVE A CARD TO PROCESS
* CHECK FOR A BLANK TO LOCATE END OF PARAMETERS
*
         XR    R00,R00                 CLEAR FOR SEARCH CHAR
         ICM   R00,B'0001',=C' '       LOOKING FOR A BLANK
         LA    R02,72(R04)             POINT PAST STRING
         SRST  R02,R10                 ANY BLANKS ??
*        BC    11,SETLEN               DOESN'T MATTER - R02 IS CORRECT
         LR    R11,R02                 SAVE ADDRESS FOR NEXT CHECK
         SR    R02,R10                 GET LENGTH FOR ASASYMBM
*
* O.K., NOW WE HAVE A PARM FIELD TO PROCESS
* LAST CHECK TO ENSURE THE "&" CHAR IS ACTUALLY *IN* THE PARAMETER
*
         XR    R00,R00                 CLEAR FOR SEARCH CHAR
         ICM   R00,B'0001',=C'&&'      LOOKING FOR A "&"
         SRST  R11,R10                 ANY SYMBOLICS ??
         BC    11,FASTEXIT             NO, EXIT STAGE LEFT
*
         GETMAIN RU,LV=LGETMAIN,LOC=RES    GET STORAGE
         LTR   R15,R15                 O.K.   ???
         BNZ   FASTEXIT                NUP
         XC    0(LGETMAIN,R01),0(R01)  ZERO THE AREA (MAX 256 BYTES)
         ST    R13,4(R01)              SAVE CALLER'S SAVE AREA ADDR
         ST    R01,8(R13)              SAVE MY SAVE AREA ADDRESS
         LR    R13,R01                 SAVE/WORKAREA NOW READY FOR ME
         USING WRKSAVE,R13             DSECT ADDRESSABILITY
         USING SYMBP,MYSYMBP
         USING SYMBT,MYSYMBT
         ST    R10,SYMBPPATTERN@        SAVE IN SYMBP AREA
         ST    R02,SYMBPPATTERNLENGTH   SAVE IN SYMBP AREA
         MVC   TARGET(L'TARGET),BLANKS  BLANK OUT ENTIRE TARGET
         LA    R01,TARGET               ADDRESS OF TARGET
         ST    R01,SYMBPTARGET@         SAVE IN SYMBP AREA
         MVC   TARGETLENGTH,=A(L'TARGET)  SET LENGTH OF TARGET
         LA    R01,TARGETLENGTH         ADDRESS OF TARGET LENGTH
         ST    R01,SYMBPTARGETLENGTH@   SAVE IN SYMBP AREA
         LA    R01,RETURNCODE           ADDRESS OF RETURN CODE
         ST    R01,SYMBPRETURNCODE@     SAVE IN SYMBP AREA
         LA    R01,MYSYMBT              ADDRESS OF SYMBT (FLAGS)
         ST    R01,SYMBPSYMBOLTABLE@    SAVE IN SYMBP AREA
*   BE NICE TO GET SOME RETURN CODES BACK - SET APPROPRIATE FLAGS
         OI    SYMBTFLAG0,SYMBTWARNSUBSTRINGS+SYMBTCHECKNULLSUBTEXT
         OI    SYMBTFLAG1,SYMBTWARNNOSUB
*
         LINK  EP=ASASYMBM,MF=(E,MYSYMBP)
         L     R15,RETURNCODE          O.K.     ????
         C     R15,=H'16'              O.K.     ????
         BH    RET_UNKN                UNKNOWN RETCODE - MMMM   ??
         B     BRTBL(R15)              HOWS IT ALL LOOK ???
         EJECT
BRTBL    DS    0F
         B     OK
         B     RET4_W
         B     RET8_W
         B     RETC_W
         B     RET10_W
RET4_W   WTO   'IEFUJV RC=04 - SUBSTRING SUBSTITUTION IGNORED *',      X
               ROUTCDE=11
         B     OK
RET8_W   WTO   'IEFUJV RC=08 - SYMBOL BUFFER TOO SMALL - REDUCE NUMBER X
               OF SYMBOLS',ROUTCDE=11
         B     OK
RETC_W   WTO   'IEFUJV RC=12 - SUBSTITUTION LENGTH NULL. CONTINUING *',X
               ROUTCDE=11
         B     OK
RET10_W  WTO   'IEFUJV RC=16 - NO SYSTEM SYMBOLS FOUND. CONTINUING *', X
               ROUTCDE=11
         B     OK
RET_UNKN EQU   *
         WTO   'IEFUJV - UNDOCUMENTED ASASYMBM RETCODE. NOTIFY SYSPROGSX
               ',ROUTCDE=11
         UNPK  UNPAKIT(9),RETURNCODE(5)
         MVC   WTO_RENT,RC_WTO
         MVC   WTO_RENT+4+5(8),UNPAKIT
         TR    WTO_RENT+4+5(8),TRTAB-C'0'
         WTO   MF=(E,WTO_RENT)
         B     EXIT
         EJECT
OK       DS    0F
         LR    R01,R02                 GET INPUT LENGTH
         BCTR  R01,R00                 REDUCE FOR MOVE
         EX    R01,BLANKIT             CLEAR PRIOR TO SUBSTITUTION
         L     R01,TARGETLENGTH        GET THE LENGTH
         EX    R01,MOVEEM              PUT IT BACK
*
* RETURN TO CALLER
*
EXIT     DS    0H
         LR    R01,R13                 GET FREEMAIN ADDRESS
         L     R13,4(,R13)             RESTORE CALLER'S R13 B4 FREEMAIN
         FREEMAIN R,LV=LGETMAIN,A=(1)
FASTEXIT DS    0H                      FASTEXIT; NO FREEMAIN
         LM    14,12,12(13)            RESTORE CALLER'S REGISTERS
         LA    R15,0                   PROCESS THE JOB
         BSM   0,R14                   RETURN TO CALLER
         EJECT
***********************************************************************
*
*  CONSTANTS AND EQUATES
*
***********************************************************************
         DS    0F
BLANKS   DC    CL80' '                 AS IT SAYS
TRTAB    DC    C'0123456789ABCDEF'     FOR DISPLAYABLE HEX
*
BLANKIT  MVC   0(*-*,R10),BLANKS       BLANK OUT CARD
MOVEEM   MVC   0(*-*,R10),TARGET       MOVE SUBSTITUTED IMAGE BACK
*
RC_WTO   WTO   '* RC=XXXXXXXX ',MF=L
RC_WTO_L EQU   *-RC_WTO
         EJECT
         LTORG
***********************************************************************
*
* DSECTS
*
***********************************************************************
*
*              IEFUJV SAVE/WORKAREA (OBTAINED BY GETMAIN)
*
WRKBEGIN DSECT                         POINTED TO BY R13
WRKSAVE      DS    9D                  18 WORD REGISTER SAVE AREA
UNPAKIT      DS    2D
WTO_RENT     DS    CL(RC_WTO_L)
*
MYSYMBP      DS    CL(SYMBP_LEN)       SYMBP AREA
MYSYMBT      DS    CL(SYMBT_LEN)       SYMBP AREA
RETURNCODE   DS    F                   RETURN CODE
TARGETLENGTH DS    F                   LENGTH OF TARGET
TARGET       DS    CL80                BIG ENOUGH TO HOLD THE TARGET
WRKEND       EQU   *                   END OF SAVE/WORKAREA
LGETMAIN     EQU   WRKEND-WRKBEGIN     LENGTH FOR GETMAIN
*
         ASASYMBP   ,                  MAPPING OF SYMBP AREA
         END   ,
