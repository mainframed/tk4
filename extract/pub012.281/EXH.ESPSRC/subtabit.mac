TABIT    TITLE 'S U B T A B I T  ***  BIT TABLE SUPPORT'
         COPY  ASMOPTS
         SPACE 1
         ASMPARM ,
         SPACE 1
SUBTABIT START 0
***********************************************************************
**                                                                   **
**   SUBTABIT is a small subroutine to maintain bits in a table.     **
**     Refreshable, reentrant, reusable                              **
**                                                                   **
**                                                                   **
**   Functions:                                                      **
**                                                                   **
**       TEST   test if bit is on                                    **
**       ON     set a bit on                                         **
**       OFF    set a bit off                                        **
**       FLIP   invert a bit                                         **
**       CLEAR  reset all bits to 0                                  **
**       F0     find a zero bit                                      **
**       F1     find a one bit                                       **
**                                                                   **
**   Use:                                                            **
**                                                                   **
**       R14    return register                                      **
**       R15    base                                                 **
**       R0     function code (in bottom byte)                       **
**       R1     address of control block                             **
**                                                                   **
**   Return in R15:                                                  **
**                                                                   **
**       0      function complete                                    **
**       8      FIND request unsuccessful                            **
**      12      invalid request                                      **
**      16      invalid arguments                                    **
**                                                                   **
**   Table control block:                                            **
**                                                                   **
**      +0 (4)  address of table                                     **
**      +4 (4)  length of table in bytes                             **
**      +8 (4)  ordinal of bit to be used (max is 8*length-1)        **
**                                                                   **
**                                                                   **
***********************************************************************
         USING *,R15
*---------------------------------------------------------------------*
*    Register use:                                                    *
*                                                                     *
*    R13-R15 save area/return/base×return code                        *
*    R1-R3   work registers                                           *
*    R5      bit value for masking                                    *
*    R6      byte containing bit                                      *
*    R9      bit table                                                *
*    R10     table length                                             *
*    R11     address block                                            *
*    R12     eventual return code                                     *
*                                                                     *
*---------------------------------------------------------------------*
         B     AROUND
         DC    AL1(17),CL17'SUBTABIT &SYSDATE'
AROUND   STM   R14,R12,12(R13)    SAVE CALLER'S REGISTERS
         LA    R1,0(,R1)          CHECK TABLE POINTER
         LTR   R11,R1
         BZ    BADCALL            INVALID TABLE ADDRESS
         USING TBBSECT,R11        CALLER PROVIDED CONTROL BLOCK
         ICM   R9,15,TBBTABL      CHECK TABLE ADDRESS
         BZ    BADPARM              BAD PARAMETER
         ICM   R10,15,TBBLENG     GET LENGTH
         BNP   BADPARM              OOPS
         N     R0,=X'000000FF'    CHECK FUNCTION REQUEST
         CH    R0,=AL2(MAXFUN)    VALID REQUEST?
         BNL   BADPARM              NO
         MH    R0,=AL2(FUNTAB2-FUNTAB) CONVERT TO OFFSET
         CH    R0,=AL2(FUNCLEAR*(FUNTAB2-FUNTAB))  VALID?
         BNL   HIGHFUN         YES; DIFFERENT HANDLING
         L     R2,TBBNUMB    GET BIT NUMBER
         SRDL  R2,3          SPLIT INTO BYTE/BIT
         SRL   R3,29         RIGHT JUSTIFY
         CLR   R2,R10        VALID BYTE OFFSET ?
         BNL   BADPARM         NO; FAIL
         LA    R6,0(R2,R9)   BYTE ADDRESS
         LA    R10,FUNTAB
         AR    R10,R0        ADDRESS OF OPERATION CODE & MASKS
         L     R1,4(,R10)    GET BIT TABLE ADDRESS
         IC    R5,0(R3,R1)   GET CORRESPONDING BIT VALUE (0-X'80')
         EX    R5,0(,R10)    EXECUTE THE FUNCTION
GOODEXIT SR    R12,R12       SET GOOD RETURN CODE
COMMEXIT ST    R12,16(,R13)   SET R15 RETURN
         LM    R14,R12,12(R13)    RELOAD
         BR    R14           RETURN
         SPACE 1
HIGHFUN  LA    R1,FUNTAB
         AR    R1,R0         ADDRESS OF OPERATION CODE & MASKS
         L     R2,4(,R1)     GET CODE ADDRESS
         BR    R2              AND INVOKE FUNCTION
         SPACE 1
CLEARTAB LM    R2,R3,TBBTABL      GET TABLE AND SIZE
         SR    R9,R9
         MVCL  R2,R8         CLEAR TABLE
         B     GOODEXIT        RETURN OK
         SPACE 1
BADCALL  LA    R12,16        MAJOR ERROR
         B     COMMEXIT        RETURN
         SPACE 1
BADPARM  LA    R12,12        BAD VALUE
         B     COMMEXIT        RETURN
         SPACE 1
FINDZERO LA    R3,TRTOFF     TABLE FOR FINDING ZEROES
FINDCOMM LA    R12,8         NONE FOUND
         LR    R7,R10        COPY LENGTH TO WORK REGISTER
         BCTR  R7,0          SAVE A COUPLE OF INSTRUCTIONS
FINDLOOP LTR   R6,R7         ANY MORE TO DO ?
         BM    COMMEXIT        NO; RETURN RC=8
         CH    R6,=H'256'    LESS THAN ONE LINE ?
         BL    FINDSHRT        YES
         LA    R6,255        SET FOR ONE LINE
FINDSHRT LA    R1,0(R6,R9)   GET STOP ADDRESS IF NO MATCH
         SR    R2,R2         EASIER TEST
         EX    R6,EXTRT      LOOK FOR DESIRED FUNCTION
         LTR   R2,R2         DID WE FIND ONE ?
         BP    FINDCONV        YES; PROCESS INTO RETURN VALUE
         SH    R7,=H'256'    ONE LINE PROCESSED
         LA    R9,256(,R9)
         B     FINDLOOP      TRY NEXT LINE
         SPACE 1
FINDCONV BCTR  R2,0          CONVERT BIT INDEX RELATIVE TO 0
         SRDL  R2,3          TEMPORARY SAVE
         LR    R2,R1         COPY STOP ADDRESS
         S     R2,TBBTABL    LESS START
         SLDL  R2,3          MAKE BIT ORDINAL
         ST    R2,TBBNUMB    RETURN TO USER
         B     GOODEXIT        AND TAKE GOOD EXIT
EXTRT    TRT   0(*-*,R9),0(R3)    LOOK FOR PATTERN
         SPACE 1
FINDONE  LA    R3,TRTON      FIND A ONE
         B     FINDCOMM
         SPACE 1
FUNTAB   DC    X'91006000',AL4(BITNUM)     0 TM
FUNTAB2  DC    X'96006000',AL4(BITNUM)     1 OI
         DC    X'94006000',AL4(BITOFF)     2 NI
         DC    X'97006000',AL4(BITNUM)     3 XI
FUNCLEAR EQU   (*-FUNTAB)/(FUNTAB2-FUNTAB) 4 START OF LONGER FUNCTIONS
         DC    AL4(0,CLEARTAB)             4
         DC    AL4(0,FINDZERO)             5
         DC    AL4(0,FINDONE)              6
MAXFUN   EQU   (*-FUNTAB)/(FUNTAB2-FUNTAB) 7 MAX FUNCTION VALUE
         SPACE 1
BITNUM   DC    X'8040201008040201'     BITS BY NUMBER 0-7
BITOFF   DC    X'7FBFDFEFF7FBFDFE'     RESET BITS
         SPACE 1
TRTOFF   DC    128AL1(1)     00-7F HAVE FIRST BIT ZERO
         DC    64AL1(2)      80-BF HAVE SECOND BIT ZERO
         DC    32AL1(3)      C0-DF HAVE THIRD BIT ZERO
         DC    16AL1(4)      E0-EF HAVE FOURTH BIT ZERO
         DC    8AL1(5)       F0-F7 HAVE FIFTH BIT ZERO
         DC    4AL1(6)       F8-FB HAVE SIXTH BIT ZERO
         DC    2AL1(7)       FC-FD HAVE SEVENTH BIT ZERO
         DC    AL1(8)        FE    HAS EIGHTH BIT ZERO
         DC    AL1(0)        FF    IS FULL - SKIP OVER
TRTON    DC    AL1(0)        00    IS EMPTY - SKIP OVER
         DC    AL1(8)        01    HAS EIGHTH BIT ON
         DC    2AL1(7)       02-03 HAVE SEVENTH BIT ON
         DC    4AL1(6)       04-07 HAVE SIXTH BIT ON
         DC    8AL1(5)       08-0F HAVE FIFTH BIT ON
         DC    16AL1(4)      10-1F HAVE FOURTH BIT ON
         DC    32AL1(3)      20-3F HAVE THIRD BIT ON
         DC    64AL1(2)      40-7F HAVE SECOND BIT ON
         DC    128AL1(1)     80-FF HAVE FIRST BIT ON
         SPACE 1
         MAPSBIT ,
         YREGS ,
         END   ,
