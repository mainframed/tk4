VABDUMP TITLE 'V A B D U M P  ***  FORMAT DATA MGT CONTROL BLOCKS'
*          DATA SET VABDMPVS   AT LEVEL 030 AS OF 07/10/75
*   FROM FILE 065 OF CBT OVERFLOW TAPE (LA GROUP)
*   AS DELIVERED NEEDS TO BE LINKED WITH ABDUMP MODULES         GP08096
*   REWORKED AS INDEPENDENT LOAD MODULE IGC0905A                GP08096
         PUNCH ' ALIAS IGC0905A '                               GP08096
VABDUMP  START 0                                                GP08096
         SPACE 2
***********************************************************************
*                                                                     *
*  VABDMPVS - R.W.HUYCK 01MAR74.                                      *
*                                                                     *
*                                                                     *
*  FUNCTION - FORMAT THE DATA MANAGEMENT CONTROL BLOCKS               *
*                   DEB, DCB, IOB, UCB                                *
*             FOR PRINTING WITH ABEND DUMPS.                          *
*                                                                     *
*  ENTERED FROM - IEAVAD03, SMVSDUMP                                  *
*                                                                     *
*  EXTERNAL ROUTINES - IEAVAD11, IEAVAD31                             *
*                                                                     *
*  INPUT - REGISTER 1 , WHICH POINTS TO THE ABDUMP WORKAREA.          *
*          REGISTER 0 , ZERO - ALL DEBS FOR THIS TASK TO BE PROCESSED *
*                       POS  - PTR TO SINGLE DEB TO BE PROCESSED.     *
*                        NEG  - PTR TO DEB TO BE PROCESSED, AND       *
*                               BUFFERS ARE TO BE PRINTED.            *
*                                                                     *
*  REGISTER USAGE -  1 - POINTER TO ABDAREA.                          *
*                    2 - SAVE AREA FOR POINTER TO ABDAREA.            *
*                    5 - ADDRESS OF TCB TO BE FORMATTED.              *
*                    6 - ADDRESS OF DEB.                              *
*                   11 - ADDRESS OF TIOT.                             *
*                   12 - BASE REGISTER FOR VABDMPVS.                  *
*                   13 - ADDRESS OF GETMAINED SAVE AREA.              *
*                   14,15 - LINKAGE REGISTERS.                        *
*                                                                     *
***********************************************************************
         SPACE 2
         SAVE  (14,12)
         BALR  12,0
         USING *,12
         USING ABDAREA,11
         USING VBDSAVE,13
         LR    10,0                SAVE PARM REG OVER GETMAIN
         LR    11,1                SAVE ADDRESS OF ABDAREA OVER GM
         LA    1,ABDGMA+4          ADDRESS OF GETMAIN PARM LIST.
         GETMAIN EC,LV=96,SP=253,A=ABDGMA,MF=(E,(1))
         LR    1,11                RESTORE ADDRESS OF ABDAREA.
         DROP  11
         USING ABDAREA,1           ESTABLISH ADDRESSABILITY.
         LTR   15,15               CORE AVAILABLE?
         BNZ   ENDWNOSV            NO - EXIT.
         L     11,ABDGMA           GET ADDRESS OF GETMAINED AREA.
         XC    0(096,11),0(11)       CLEAR SAVE AREA.
         ST    13,4(11)            ESTABLISH SAVE AREA CHAIN.
         ST    11,8(13)
         LR    13,11               NEW SAVE AREA ADDRESS IN REG 13.
         LR    2,1                 SAVE ABDAREA ADDRESS.
         USING IHADCB,10
         USING TCB,5
         L     5,ABDTCB            GET TCB PTR FOR TASK BEING DUMPED.
         LR    6,10                LOAD DEB PTR FROM PARM REG
         LTR   6,6                 IS ANY PARM PASSED.
         BZ    ALLDMCBS            NO - PROCESS ALL DMCBS
         BP    SDEBNOBF
         MVI   PBUFFLG,X'FF'       CALLER WANTED BUFFERS PRINTED
         C     6,=F'-1'            ALL DMCBS?
         BE    ALLDMCBS
DEBINREG EQU   *
         LPR   6,6
SDEBNOBF EQU   *
         MVI   SNGLDEBF,X'FF'      SET FLAG FOR SINGLE DEB
         B     SNGLDEB
ALLDMCBS EQU   *
         SR    6,6
         ICM   6,7,TCBDEB+1
         LTR   6,6                 ANY DEBS ON THIS TCB?
         BZ    ENDVBDMP            NO - EXIT.
SNGLDEB  EQU   *
         MVC   ABDLINE(L'DMCBHDR),DMCBHDR
         MVI   ABDCC,C'-'          TRIPLE SPACE.
         L     15,AIEAV11
         BALR  14,15               GO PRINT HEADER.
         L     11,TCBTIO           GET ADDRESS OF TIOT.
         B     FIRSTDEB
         EJECT
***********************************************************************
*        BEGIN LOOKING FOR DEBS TO BE PRINTED.                        *
***********************************************************************
NXTDBUPR EQU   *                   HERE IF UPR ON DCB.
         LM    1,2,24(1)           RESTORE PTRS TO ABDAREA FROM PIE.
         XC    ABDUPRXT(4),ABDUPRXT CLEAR UPR EXIT ADDR.
NEXTDEB  EQU   *
         TM    SNGLDEBF,X'FF'      ONLY ONE DEB TO PROC?
         BO    ENDVBDMP            YES - EXIT
         SR    10,10
         ICM   10,7,5(6)           GET ADDRESS OF NEXT DEB.
         LTR   6,10                ANY MORE DEBS ON THIS CHAIN?
         BZ    ENDVBDMP            NO - EXIT.
FIRSTDEB EQU   *
         MVC   ABDUPRXT(4),AUPREXT1
         TM    24(6),X'0F'         IS THIS VALID DEB?
         BNO   ENDVBDMP            NO - EXIT.
         ICM   10,7,25(6)          GET ADDRESS OF DCB.
         LTR   10,10               VALID DCB ADDR?
         BZ    NEXTDEB             NO TRY NEXT DEB.
***********************************************************************
*        LOCATE THE DDNAME IN THE TIOT CORRESPONDING TO THIS DCB.     *
***********************************************************************
         MVC   ABDUPRXT(4),AUPREXT2
         LH    9,DCBTIOT           GET OFFSET IN TIOT TO DDENTRY.
         SR    7,7
         LA    9,0(9,11)           COMPUTE ADDRESS OF DDENTRY.
         SR    4,4
         ICM   4,7,17(9)           SAVE UCB ADDRESS IN REG 4.
         XC    ABDUPRXT(4),ABDUPRXT
FINDDDNM EQU   *
         CLI   4(9),C' '           IS THIS CONCATENATED DD?
         BNE   MOVEDDNM            NO - GO MOVE DDNAME TO OUTPUT.
         IC    7,0(9)
         SR    9,7                 BACK UP TO PREV ENTRY.
         B     FINDDDNM            SCAN FOR DDNAME.
MOVEDDNM EQU   *
         MVI   ABDCC,C'0'          DOUBLE SPACE.
         MVC   ABDLINE(8),4(9)     MOVE DDNAME FROM TIOT.
         MVC   571(23,1),ABDLINE   MOVE DDNAME TO PAGE HEADER
         MVC   ABDLINE+10(3),=CL3'DEB'
         SR    8,8                 CLEAR WORK REGS
         SR    9,9
         LR    7,6                 LOAD DEB PTR INTO WORK REG
         SH    7,=H'4'             BACKUP TO DEB PREFIX
         IC    8,0(7)              LENGTH OF DEB IN DOUBLE WORDS
         SRDL  8,2                 COMPUTE NO OF 32 BYTE LINES
         LTR   9,9                 ANY REMAINDER
         BZ    DBLNOK              NO - HAVE CORRECT LINE COUNT
         LA    8,1(8)              BUMP LINE COUNT BY ONE.
DBLNOK   EQU   *
         LR    7,8                 LINE COUNT FOR FORMAT ROUTINE.
         LR    3,6                 SAVE CONTROL BLOCK PTR FOR FORMAT.
         ST    6,ABDWORK           STORE ADDRES OF CB FOR FORMATTING.
         LA    9,ABDWORK+1
         ST    9,ABDBPTR           ADDRESS TO BE FORMATTED.
         BAL   8,FORMAT            GO PRINT DEB.
***********************************************************************
*        PRINT THE DCB ASSOCIATED WITH THIS DEB.                      *
***********************************************************************
         MVI     ABDCC,C'0'        DOUBLE SPACE.
         MVC   ABDLINE+10(3),=CL3'DCB'
         TM    DCBDSORG+1,X'08'    VSAM ACB?
         BZ    DCBPRNT             NO - LEAVE HEADING ALONE.
         MVC   ABDLINE+10(3),=CL3'ACB'  MAKE HEADER ACB.
DCBPRNT  EQU   *
         LA    7,3                 LINE COUNT FOR DCB.
         LR    3,10                SAVE ADDR OF DCB FOR FORMAT.
         LR    5,10                SAVE DCB PTR FOR FUTURE USE
         ST    10,ABDWORK
         ST    9,ABDBPTR
         TM    DCBDSORG,DCBDSGIS   IS THIS ISAM DCB?
         BZ    PRNTDCB             NO - PRINT ONLY 4 LINES.
         LA    7,8                 ISAM - PRINT 8 LINES.
PRNTDCB  EQU   *
         BAL   8,FORMAT            GO PRINT DCB.
         LTR   4,4                   ANY UCB ADDRESS?
         BZ    NEXTDEB             NO - MUST BE DD DUMMY. GET NEW DEB.
***********************************************************************
*        PRINT ALL IOBS ASSOCIATED WITH THIS DCB. (NO ISAM OR BDAM).  *
***********************************************************************
         CLC   571(08,1),=C'TCAMCKDD' IS THIS TCAM CKPT DCB?
         BE    PRNTUCB             YES - DONT PRINT IOB.
******** NOTE TO SYSTEM PROGRAMMER ----- THE ABOVE TEST DEPENDS ON
******** INSTALLATION STANDARDS FOR TCAM DDNAMES.
         TM    DCBDSORG,DCBDSGIS+DCBDSGDA ISAM OR BDAM?
         BM    PRNTUCB             YES - DONT PRINT IOB.
         TM    DCBDSORG+1,X'08'    VSAM ACB?
         BO    PRNTUCB             YES - DONT PRINT IOB.
         TM    DCBMACRF,DCBMRECP   IS THSI EXCP?
         BO    GETCSIOB            YES GET IOB FROM DCBIOBAD.
         TM    DCBOPTCD,DCBOPTC    CHAINED SCHED?
         BZ    GETIOB              NO - GET IOB FROM DCBIOBA
GETCSIOB EQU   *
         ICM   8,7,DCBIOBAD+1      GET CHAINED SCHED IOB.
         B     GOTIOBA
GETIOB   EQU   *
         ICM   8,7,DCBIOBA+1       GET NORMAL IOB.
GOTIOBA  EQU   *
         LA    8,0(8)              CLR HI ORDER BYTE OF REG8
         LTR   8,8                 VALID IOB PTR?
         BZ    PRNTUCB             NO - GO PRINT UCB.
         TM    DCBMACRF,DCBMRECP   IS THIS EXCP IOB?
         BO    GOTIOB              YES - DONT SAVE ADDR
         ST    8,VBWORK            SAVE PR TO FIRST IOB IN CHAIN.
GOTIOB   EQU   *
         LR    10,8                IOB PTR IN REG 10
         LA    7,3                 LINE COUNT
         MVI   ABDCC,C'0'          DOUBLE SPACE.
         MVC   ABDLINE+10(3),=CL3'IOB'
         LR    3,10                SAVE IOB ADDRESS FOR FORMAT.
         ST    10,ABDWORK
         ST   9,ABDBPTR
         BAL   8,FORMAT            GO PRINT IOB.
         LA    10,0(10)
         SR    8,8
         C     8,VBWORK            IF VBWORK ZERO THEN ITS EXCP
         BE    PRNTUCB             FOR EXCP, PRINT ONLY ONE IOB
         ICM   8,7,1(10)           GET ADDR OF NEXT IOB.
         LTR   8,8                 ANY MORE IOBS?
         BZ    PRNTUCB             N/ - GO PRINT UCB.
         CR    8,10                MORE UCBS?
         BE    PRNTUCB             NO - GO PRINT UCB.
         C     8,VBWORK            SAVE AS PREV IOB ADDR?
         BE    PRNTUCB             YES - NO MORE IOBS.
         B     GOTIOB
***********************************************************************
*        PRINT THE UCB.                                               *
***********************************************************************
PRNTUCB  EQU   *
         CLI   2(4),X'FF'          IS THIS VALID UCB?
         BNE   TESTPRBF            GO TEST FOR PRINT OF BUFFER
         XC    VBWORK(4),VBWORK    CLEAR IOB PTR .
         MVI   ABDCC,C'0'          DOUBLE SPACE
         MVC   ABDLINE+10(3),=CL3'UCB'
         LR    3,4                 SAVE UCB ADDRESS.
         ST    4,ABDWORK
         ST    9,ABDBPTR
         LA    7,2                 LINE COUNT.
         BAL   8,FORMAT            GO PRINT UCB.
***********************************************************************
*        PRINT BUFFERS IF REQUESTED BY CALLER.                        *
***********************************************************************
TESTPRBF EQU   *
         CLI   PBUFFLG,X'FF'       PRINT BUFFERS?
         BNE   NEXTDEB             NO - GO FOR NEXT DEB
         LR    10,5                RESTORE DCB PTR.
         TM    DCBBUFCB+3,X'01'    ANY BUFFERS?
         BO    NOBUFFS             NO - BRANCH
         TM    DCBDSORG+1,X'08'    IS IT ACB
         BO    NEXTDEB             YES - PRINT NO BUFFERS
         L     5,DCBBUFCB
         LA    5,0(5)              CLR HI-ORDER BYTE.
         LTR   5,5                 ANY BUFCB ADDR
         BZ    NOBUFFS             NO - BRANCH
         MVC   ABDUPRXT(4),AUPREXT2
         TM    DCBDSORG,DCBDSGIS   ISAM DATA SET?
         BZ    NORMBFCB            NO - BUFCB IS STD
         TM    DCBMACRF,DCBMRSBG     BISAM WITH 'S' BUFRING
         BZ    NORMBFCB            NO - MUST BE QISAM
         LA    7,1                 BUFFER COUNT
         LR    3,5                 PTR TO BUFFER TO BE PRINTED
         SR    4,4
         ICM   4,7,13(5)           GET LENGTH OF BCB
         B     TSTBFLNG
NORMBFCB EQU   *
         LA    3,8(5)              GET PTR TO FIRST BUFFER
         SR    7,7
         IC    7,5(5)              GET NUMBER OF BUFFERS
         LH    4,6(5)              GET BUFFER LENGTH
TSTBFLNG EQU   *
         XC    ABDUPRXT(4),ABDUPRXT
         LTR   4,4
         BZ    NOBUFFS             INVALID BUFR LENGTH
         LA    8,1                 INIT COUNTR FOR BUFR PRINT
BUFPRLP  EQU   *
         MVI   ABDCC,C'-'          TRIPLE SPACE
         MVC   ABDLINE+10(6),=C'BUFFER'
         CVD   8,ABDWORK1
         UNPK  ABDLINE+17(3),ABDWORK1+6(2)
         OI    ABDLINE+19,X'F0'
         MVC   580(10,1),ABDLINE+10 MOVE BFR NO TO PAGE HDR
         L     15,AIEAV11
         BALR  14,15               GO PUT OUT HDR LINE FOR BUFFER.
         MVI   ABDCC,C'0'          DOUBLE SPACE.
         LR    1,2                 RESTORE PTR TO ABDAREA
         ST    3,ABDBLOCK          TELL FORMET WHERE TO START
         ST    4,ABDLENTH          TELL FORMET HOW MANY BYTES
         L     15,AIEAV71          GO FORMET BUFFER
         MVI   ABDUPRF,X'40'
         BALR  14,15
         MVI   ABDUPRF,X'00'
         LA    8,1(8)              BUMP COUNT FOR BUFFER LINE
         AH    3,6(5)              COMPUTE ADDRESS OF NEXT BUFFER
         BCT   7,BUFPRLP           PRINT ANOTHER BUFFER.
NOBUFFS  EQU   *
         B     NEXTDEB             GO TRY FOR ANOTHER DEB.
         SPACE 2
***********************************************************************
*        RETURN TO THE CALLER.                                        *
***********************************************************************
ENDVBUPR EQU   *                   HERE IF UPR ON DEB.
         L     1,24(1)             RESTORE PTR TO ABDAREA FROM PIE.
ENDVBDMP EQU   *
         MVI   ABDBLNKS,X'00'      RESET PARMS FOR ABDUMP
         XC    ABDUPRXT(4),ABDUPRXT
         MVC   571(23,1),570(1)    BLNK DDNAME INFO IN PAGE HDR
         LR    1,13                GET ADDRESS OF AREA TO FREE.
         L     13,SAVE+4           GET CALLERS SAVE AREA PTR.
         L     0,FREECON           SP AND NUMBER OF BYTES TO FREE.
         SVC   10
ENDWNOSV EQU   *
         RETURN (14,12)
         EJECT
***********************************************************************
*        THIS ROUTINE PROVIDES THE INTERFACE BETWEEN VABDUMP AND      *
*        THE ABDUMP FORMATTING ROUTINES.                              *
***********************************************************************
FORMAT   EQU   *
         LA    0,CBADDRLN          GET ADDR OF LAYOUT LINE FOR CB PTR.
         ST    0,ABDLLINE
         L     15,AIEAV31
         BALR  14,15               FORMAT CNTRL BLK ADDR.
         LTR   15,15
         BNZ   NEXTDEB              ERROR - TRY NEXT BLOCK.
         MVI   ABDBLNKS,ABDBLKN3          NO SPACES BETWEEN FIELDS.
FORMATCB EQU   *
         ST    3,ABDBPTR           STORE ADDR OF DATA TO BE FORMATTED.
         LA    0,DMCBLN
         ST    0,ABDLLINE          ADDR OF LAYOUT LINE FOR DATA.
         OI    ABDUPRF,UPRFMAT     EXPECT UPR.
         L     15,AIEAV31
         BALR  14,15
         NI    ABDUPRF,X'FF'-UPRFMAT     UPR NOT EXPECTED NOW.
         LTR   15,15
         BNZ   NEXTDEB              ERROR - TRY NEXT BLOCK.
         L     15,AIEAV11
         BALR  14,15               PRINT THE LINE.
         LA    3,32(3)             INCREMENT DATA POINTER 32 BYTES.
         BCT   7,FORMATCB          FORMAT LINES UNTIL LINE CT SATISF.
FORMEXIT EQU   *
         MVI   ABDBLNKS,X'00'         RESET SPACEING PARM.
         BR    8                   RETURN TO CALLER.
         EJECT
***********************************************************************
*        CONSTANTS.                                                   *
***********************************************************************
AUPREXT1 DC    A(ENDVBUPR)
AUPREXT2 DC    A(NXTDBUPR)
AIEAV11  DC    V(IEAVAD11)
AIEAV21  DC    V(IEAVAD21)
AIEAV31  DC    V(IEAVAD31)
AIEAV51  DC    V(IEAVAD51)
AIEAV61  DC    V(IEAVAD61)
AIEAV71  DC    V(IEAVAD71)
AIEAV81  DC    V(IEAVAD81)
FREECON  DC    X'FD000060'         SUBPOOL AND NUMBER OF BYTES FREED.
DMCBHDR  DC    C'********** DATA MANAGEMENT CONTROL BLOCKS **********'
DMCBLN   DC    X'15030040'
         DC    X'034040'
         DC    X'034040'
         DC    X'034040'
         DC    X'2340404040'
         DC    X'034040'
         DC    X'034040'
         DC    X'034040FF'
CBADDRLN DC    X'0E020040FF'
         EJECT
***********************************************************************
*  DSECT MAP FOR VABDMPVS SAVE AND WORKAREA.                          *
***********************************************************************
VBDSAVE  DSECT
SAVE     DS    18F
VBWORK   DS    2F
VBCVD    DS    D
SNGLDEBF DS    X
PBUFFLG  DS    X
VBWORKA  DS    6C
         EJECT
         PRINT NOGEN
***********************************************************************
*  DSECT MAP FOR ABDAREA                                              *
***********************************************************************
         IHAABDA
         EJECT
***********************************************************************
*  DSECT MAP FOR TCB                                                  *
***********************************************************************
         IKJTCB
         EJECT
***********************************************************************
*  DSECT MAP FOR DCB                                                  *
***********************************************************************
         DCBD  DSORG=(DA,IS,PO,PS)
         EJECT
***********************************************************************
*  DSECT MAP FOR CVT.                                                 *
***********************************************************************
         CVT   DSECT=YES
         END
