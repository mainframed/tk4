SUBDMFIX TITLE 'S U B D M F I X  ***  DATA SET MASK FIXER-UPPER'
         COPY  OPTIONGB
         SPACE 2
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS SUBROUTINE EXAMINES A 44-BYTE OPERAND, AT THE ADDRESS PASSED  *
*   IN R1, FOR EXPANSION OF ** OPERANDS:                              *
*                                                                     *
*   E.G., MASK=**ABC  IS VALID, BUT FAILED BY IBM                     *
*       THIS ROUTINE CONVERTS IT TO **.*ABC                           *
*                                                                     *
*   A COMPLETELY BLANK MASK IS REPLACED BY **                         *
*                                                                     *
*   A TERMINAL PERIOD IS CHANGED TO .**                               *
*                                                                     *
*  OTHER ERRORS MAY OR MAY NOT BE RECOGNIZED                          *
*                                                                     *
***********************************************************************
         SPACE 1
         PRINT &PRTSOR                                   NEW ON GP03079
SUBDMFIX PGMHEAD ZERO,BASE=R12,PARM=R11
         LA    R9,12         PRESET ERROR LEVEL                 GP03080
         LA    R11,0(,R11)
         LTR   R11,R11       DID WE GET A VALID ADDRESS ?
         L     R11,0(,R11)   LOAD ADDRESS
         LA    R11,0(,R11)
         LTR   R11,R11       DID WE GET A VALID ADDRESS ?
         BZ    PGMEXITC      NO                                 GP03080
         OC    0(L'NEWMASK,R11),BLANKS  FORCE UPPER CASE        GP03080
*---------------------------------------------------------------------*
*  SCAN FOR TEXT** AND EXPAND TO TEXT*.**, AS APPROPRIATE             *
*---------------------------------------------------------------------*
         LR    R4,R11        POINT TO MASK TO BE PRE-PROCESSED
         LA    R3,L'NEWMASK  AND SET ITS PHYSICAL LENGTH
         LA    R6,NEWMASK
         LA    R7,L'NEWMASK
         BAS   R14,FIXERUP   DO BASIC FIX-UPS
         ST    R15,RETCODE   SAVE INDICATOR                     GP03080
         BXH   R15,R15,PGMEXIT  NO GOOD                         GP03080
*---------------------------------------------------------------------*
*  INVERT THE TEXT FROM NEWMASK TO INVMASK                            *
*---------------------------------------------------------------------*
         LA    R2,NEWMASK
         LA    R1,NEWMASK+L'NEWMASK
         LA    R0,C' '
LOOPSRST SRST  R1,R2         FIND FIRST BLANK                   GP03080
         BO    LOOPSRST
         BCTR  R1,0          SPACE TO LAST BYTE IN TEXT
         LR    R15,R1
         SR    R15,R2        LENGTH -1 OF NON-BLANK MASK        GP03080
         LA    R14,INVMASK   NEW MASK IN INVERTED FORM          GP03080
         MVC   0(L'INVMASK,R14),BLANKS                          GP03080
         EX    R15,EXMVCIN   FLIP IT                            GP03080
*---------------------------------------------------------------------*
*  SCAN FOR TEXT** AND EXPAND TO TEXT*.**, AS APPROPRIATE             *
*---------------------------------------------------------------------*
         LA    R4,INVMASK    POINT TO MASK TO BE PRE-PROCESSED  GP03080
         LA    R3,L'INVMASK  AND SET ITS PHYSICAL LENGTH        GP03080
         LA    R6,NEWMASK
         LA    R7,L'NEWMASK
         BAS   R14,FIXERUP   DO BASIC FIX-UPS
         ST    R15,RETCODE   SAVE INDICATOR                     GP03080
         BXH   R15,R15,PGMEXIT  NO GOOD                         GP03080
*---------------------------------------------------------------------*
*  INVERT THE TEXT FROM NEWMASK TO THE USER'S MASK                    *
*---------------------------------------------------------------------*
         LA    R2,NEWMASK                                       GP03080
         LA    R1,NEWMASK+L'NEWMASK                             GP03080
         LA    R0,C' '
CONTSRST SRST  R1,R2
         BO    CONTSRST
         MVC   0(L'NEWMASK,R11),BLANKS
         BCTR  R1,0          SPACE TO LAST BYTE IN TEXT
         LR    R15,R1
         SR    R15,R2
         LR    R14,R11       COPY BACK TO USER                  GP03080
         EX    R15,EXMVCIN
PGMEXIT  L     R9,RETCODE    GET RETURN CODE
PGMEXITC PGMEXIT RC=(R9)     RETURN WITH CODE
         EJECT ,
*---------------------------------------------------------------------*
*  FIXERUP ANALYZES THE PASSED DATA SET MASK AND FIXES SOME PROBLEMS  *
*  XXX** CHANGED TO XXX*.**                                           *
*  TRAILING . CHANGED TO .**                                          *
*  IN CASE OF ERROR, THE REMAINING MASK IS COPIED AS IS, WITH THE     *
*    RETURN CODE SET TO 8                                             *
*                                                                     *
*  CALLER SETS REGISTERS  R4  INPUT ADDRESS     R3  INPUT LENGTH      *
*                         R6 OUTPUT ADDRESS     R7 OUTPUT LENGTH      *
*  RETURN ON R14                                                      *
*---------------------------------------------------------------------*
         AIF   (NOT &MVSESA).OLDSAVE                            GP05145
FIXERUP  BAKR  R14,0         SAVE EVERYTHING
         AGO   .COMSAVE                                         GP05145
.OLDSAVE ANOP  ,                                                GP05145
FIXERUP  STM   R2,R14,SUBSAVE  SAVE EVERYTHING                  GP05145
.COMSAVE LTR   R10,R7        SAVE OUTPUT LENGTH
         BNP   FIXERBAD      OOPS
         MVC   0(L'NEWMASK,R6),0(R4)  MOVE AS IS, JUST IN CASE  GP03080
         CLI   0(R4),C' '    START WITH BLANK ?
         BNE   FIXERINI      NO; SET TO BEGIN PROCESSING
         LR    R14,R4        COPY START ADDRESS
         LTR   R15,R3        AND LENGTH
         BNP   FIXERBAD      IF NULL, QUIT
         L     R1,=X'40000000'  NULL LENGTH WITH BLANK FILL
         CLCL  R14,R0        ALL BLANK ?
         BE    FIXER2AS      YES; JUST RETURN **                GP03080
         B     FIXERBAD      ELSE LEADING BLANKS; NOT SUPPORTED
         SPACE 1
FIXERINI SR    R8,R8         SET ZERO PREVIOUS LENGTH
         LA    R9,1          PRESET FOR PRIOR INDEX POINT
FIXERTRT LA    R1,0(R3,R4)   SET TRT STOPPER IF NO END CHARACTER
         SR    R2,R2         GET VALUE OF STOPPER
         LTR   R14,R3        GET RESIDUAL LENGTH
         BNP   FIXEREND      DONE ?
         BCTR  R14,0         SET FOR EXECUTE
         EX    R14,EXTRTGTB  LOOK FOR BLANK, PERIOD, AND ASTERISK
         LR    R5,R1         ADD STOP ADDRESS TO COUNTER
         SR    R5,R4         LESS START ADDRESS
         BNP   FIXERBIX      NOTHING TO MOVE - TEST STOP TYPE
         AR    R8,R5         ADD TO CUMULATIVE LEVEL LENGTH
         CH    R8,=H'8'      IS IT VALID ?
         BH    FIXERBAD      NO; KEEP AS IS
         SR    R3,R5         SET NEW INPUT LENGTH
         LR    R7,R5         SET MOVE LENGTH
         SR    R10,R5        SET NEW OUTPUT LENGTH
         BM    FIXERBAD      OOPS
         MVCL  R6,R4         COPY LEVEL DATA
         SR    R9,R9         NO LONGER HAVE AN INDEX
FIXERBIX BIX   VAL=(R2),SRL=2,PFX=FIXER,                               *
               LOC=(BLK,BLK,INX,AST)  BRANCH BY STOP TYPE
         SPACE 1
FIXERINX LTR   R9,R9         PRIOR INDEX FOUND ?
         BNZ   FIXERBAD      YES; ERROR
         LA    R9,1          SET INDEX FOUND FLAG
         SR    R8,R8         CLEAR LENGTH OF LEVEL DATA
FIXERMV1 LA    R5,1          SET TO MOVE ONE BYTE
FIXERMOV SR    R3,R5         ADJUST INPUT LENGTH
         LR    R7,R5         SET MOVE LENGTH
         SR    R10,R5        SET NEW OUTPUT LENGTH
         BM    FIXERBAD      OOPS
         MVCL  R6,R4         AND MOVE
         B     FIXERTRT      GO FOR MORE
         SPACE 1
FIXERAST CH    R3,=H'2'      ENOUGH LEFT FOR DOUBLED ASTERISK ?
         BL    FIXERMV1      NO; JUST COPY ONE CHARACTER
         CLI   1(R1),C'*'    TWO ASTERISKS ?
         BE    FIXERAS2      YES
         SR    R9,R9         RESET INDEX FLAG
         CH    R8,=H'8'      FULL LEVEL ALREADY ?
         BNL   FIXERBAD      NO; ERROR
         LA    R8,1(,R8)     INCREASE LEVEL LENGTH
         B     FIXERMV1      AND MOVE SINGLE ASTERISK
         SPACE 1
FIXERAS2 LTR   R9,R9         WAS PREVIOUS AN INDEX POINT ?
         BNZ   FIXERMV2      YES; JUST MOVE **
         CH    R8,=H'8'      FULL LEVEL ?
         BNL   FIXERMVP      YES; JUST ADD INDEX POINT
         LTR   R8,R8         ANY LEVEL DATA AT ALL ?
         BNP   FIXERMVP      NO; JUST ADD PERIOD
         LA    R14,DCAST2
         LA    R15,1
         LR    R7,R15        SET MOVE LENGTH
         SR    R10,R15       SET NEW OUTPUT LENGTH
         BM    FIXERBAD      OOPS
         MVCL  R6,R14        APPEND ASTERISK
FIXERMVP LA    R14,DCPER
         LA    R15,1
         LR    R7,R15        SET MOVE LENGTH
         SR    R10,R15       SET NEW OUTPUT LENGTH
         BM    FIXERBAD      OOPS
         MVCL  R6,R14        APPEND PERIOD
FIXERMV2 SR    R8,R8         CLEAR LEVEL
         SR    R9,R9         RESET INDEX POINT
         LA    R5,2          MOVE DOUBLE ASTERISKS
         B     FIXERMOV      JOIN COMMON
         SPACE 1
*---------------------------------------------------------------------*
*  SYNTAX ERROR IN MASK, OR MASK ADDRESS = 0                          *
*---------------------------------------------------------------------*
FIXERBAD LA    R15,4         SET ERROR CODE                     GP03080
         B     FIXEREXT                                         GP03080
         SPACE 1                                                GP03080
*---------------------------------------------------------------------*
*  APPEND ** IF END IS A PERIOD, OR INPUT WAS COMPLETELY BLANK        *
*---------------------------------------------------------------------*
FIXERBLK LTR   R9,R9         DID THIS END WITH A PERIOD ?       GP03080
         BZ    FIXEREND      NO; WE'RE DONE                     GP03080
FIXER2AS LA    R14,DCAST2                                       GP03080
         L     R15,=X'40000002'                                 GP03080
         LR    R7,R10        RESTORE RESIDUAL LENGTH            GP03080
         MVCL  R6,R14        APPEND GENERAL MATCH REQUEST       GP03080
         SPACE 1                                                GP03080
FIXEREND SR    R15,R15       CLEAR RETURN CODE
         AIF   (NOT &MVSESA).OLDREST                            GP05145
FIXEREXT PR    ,             RETURN TO CALLER
         AGO   .COMREST                                         GP05145
.OLDREST ANOP  ,                                                GP05145
FIXEREXT LM    R2,R14,SUBSAVE  RESTORE MOST                     GP05145
         BR    R14           RETURN TO CALLER                   GP05145
.COMREST SPACE 2
EXTRTGTB TRT   0(0,R4),TRTFIXER
EXMVCIN  MVCIN 0(0,R14),0(R1)                                   GP03080
         SPACE 1
BLANKS   DC    CL44' '       FOR CLEARING MASKS
DCAST2   DC    C'**'         DUAL ASTERISKS
DCPER    DC    C'.'          INDEX POINT
         SPACE 1
TRTFIXER DC    256AL1(0)
         TRENT TRTFIXER,4,C' '   BLANK STOPPER
         TRENT TRTFIXER,8,C'.'   INDEX POINT
         TRENT TRTFIXER,12,C'*'  ASTERISK
         SPACE 1
         LTORG ,
         SPACE 2
SAVE     DSECT ,
SUBSAVE  DS    16A           IF BAKR UNAVAILABLE                GP05145
RETCODE  DS    F             PROGRAM RETURN CODE
NEWMASK  DS    CL44          INTERIM WORK AREA FOR MASK
INVMASK  DS    CL44          INTERIM WORK AREA FOR MASK         GP03080
SAVEEND  EQU   *
         END   ,
