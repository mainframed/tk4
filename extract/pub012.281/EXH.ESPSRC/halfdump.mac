HALFDUMP TITLE 'H A L F D U M P  ***  ''HALVE'' 132-BYTE DUMP TO 80'
         PUNCH '  ORDER HALFDUMP(P) '  MAKE DUMPS EASIER        GP05170
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES    SET A FEW GLOBALS
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 2002,2005  EXPERT SYSTEM PROGRAMMING               *
*                             176 OLD STAGE COACH ROAD                *
*                             BRADFORD, VT 05033-8844                 *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT &PRTSOR
***********************************************************************
**                                                                   **
**  HALFDUMP - QUICK AND DIRTY UTILITY TO MAKE 132-BYTE DUMP LINES   **
**       MORE EASILY READABLE ON AN 80 BYTE WIDE CRT.                **
**                                                                   **
**  THIS MODULE READS THE PRINT FORMAT DUMP ON DD DUMPIN,            **
**  AND WRITES THE REFORMATTED DUMP TO DD DUMPOUT.                   **
**                                                                   **
***********************************************************************
**                                                                   **
**  CURRENT CONVERSIONS SUPPORTED:                                   **
**                                                                   **
**  1) STORAGE CONTENT LINE - ADDRESS, 1-8 WORDS, *, 1-32 CHARS, *   **
**     ADDITIONALLY TEXT IS REFORMATTED TO INCLUDE TN/T11 CHARS      **
**                                                                   **
**  2) CONTROL BLOCK - +/- OFFSET, LABEL, VALUE, LABEL, VALUE ...    **
**                                                                   **
**  3) CONTROL BLOCK - 8-BYTE ADDRESS, LABEL, VALUE, LABEL, VALUE ...**
**                                                                   **
**  4) OLD MVS - LABEL/ADDRESS/NAME/VALUES                           **
**               BLANKS/RG|RESV|R1|R7|EXTSA.../VALUES                **
**               REGS AT ERROR/8*(8+1)                               **
**                                                                   **
**                                                                   **
**                                                                   **
***********************************************************************
**  MAINTENANCE:                                                     **
**                                                                   **
**  2005-06-23  GYP  ADD SUPPORT FOR MVS 3.8 DUMP FORMAT             **
**                                                                   **
**                                                                   **
**                                                                   **
***********************************************************************
*
HALFDUMP PGMHEAD ZERO12,BASE=R12,BNDRY=PAGE,PARM=R9,     NEW ON GP02232*
               AM=24,RM=24
         SPACE 1
         SERVINIT ,
         SERVLOAD @PRINTER,@INPREAD  LOAD COMMON SERVICES       GP05170
         INPOPEN DUMPIN,OPT=(NOWTO,DUMMY)                       GP05170
         PRTOPEN SYSPRINT,OPT=WTO
         PRTOPEN DUMPOUT,OPT=ABEND,DEV=2  SCRAMBLED OUTPUT FILE
         PRTF  '#DUMP REFORMATTING UTILITY',TITLE=1
         ZAP   LINEIN,=P'0'  CLEAR LINE COUNTER
         ZAP   LINEOUT,=P'0'  CLEAR LINE COUNTER
         SPACE 1
***********************************************************************
**                                                                   **
**  INLINED - READ INPUT UNTIL ERROR OR END OF FILE                  **
**                                                                   **
***********************************************************************
INLINED  INPGET ,            GET NEXT INPUT LINE
         BXH   R15,R15,ENDINP  QUIT ON EODAD OR ERROR
         LA    R14,LINECC
         LA    R15,L'LINECC
         LR    R2,R1         GET INPUT START
         LR    R3,R0         GET INPUT LENGTH
         ICM   R3,8,BLANKS   REQUEST BLANK PADDING
         MVCL  R14,R2        MOVE FOR EASIER PROCESSING
         AP    LINEIN,=P'1'  ADJUST INPUT COUNT
         SPACE 1
***********************************************************************
**                                                                   **
**  CHECK FOR MEMORY CONTENTS LINE                                   **
**                                                                   **
**    1) * (ASTERISK) IN COLUMNS 88 AND 121                          **
**    2) 8-BYTE HEX ADDRESS STARTING IN COLUMN 1                     **
**                                                                   **
***********************************************************************
OFFADD8  EQU   0,8,C'C'      ADDRESS OFFSET FOR LINE ADDRESS
OFFADD6  EQU   0,6,C'C'      ADDRESS FOR MVT/MVS DUMP           GP05174
OFFLHEX  EQU   9,9*4,C'C'    LEFT GROUP OF FOUR WORDS
OFFRHEX  EQU   49,9*4,C'C'   RIGHT GROUP OF FOUR WORDS
OFFLAST  EQU   86,1,C'C'     OFFSET TO LEFT ASTERISK
OFFLTXT  EQU   87,16,C'C'    OFFSET TO LEFT CHARACTERS
OFFRTXT  EQU   103,16,C'C'   OFFSET TO RIGHT CHARACTERS
OFFRAST  EQU   119,1,C'C'    OFFSET TO RIGHT ASTERISK
OUTLHEX  EQU   10,9*4,C'C'   LEFT GROUP OF FOUR WORDS
OUTLAST  EQU   47,1,C'C'     NEW OUTPUT ASTERISK
OUTTEXT  EQU   48,16,C'C'    NEW TEXT
OUTRAST  EQU   64,1,C'C'     NEW OUTPUT ASTERISK
         CLI   LINE+OFFLAST,C'*'    LEFT FRAME ?
         BNE   NOTMEMLN      NO
         CLI   LINE+OFFRAST,C'*'    RIGHT FRAME ?
         BNE   NOTMEMLN      NO
         CLI   LINE+OFFADD6+L'OFFADD6,C' '  OLD MVS DUMP ?      GP05174
         BNE   NEWMEMLN      NO; CHECK FOR NEWER DUMP LINE      GP05174
         TRT   LINE+OFFADD6(L'OFFADD6),TRTHEXVL    VALID HEX    GP05174
         BNZ   NOTMEMLN      NO; TRY SOMETHING ELSE             GP05174
         ICM   R0,3,LINE+OFFADD6  GET LEFT TWO BYTES OF ADDRESS GP05174
         ICM   R1,15,LINE+OFFADD6+2  GET REMAINING FOUR BYTES   GP05174
         ICM   R0,12,=C'00'  LEADING ZEROES                     GP05174
         STCM  R0,15,LINE+OFFADD8  STORE LEFT FOUR              GP05174
         STCM  R1,15,LINE+OFFADD8+4  AND RIGHT FOUR             GP05174
NEWMEMLN TRT   LINE+OFFADD8(L'OFFADD8),TRTHEXVL    VALID HEX ADDRESS?
         BNZ   NOTMEMLN      NO; TRY SOMETHING ELSE
         LA    R1,LINE+OFFADD8    POINT TO ADDRESS
         LA    R0,L'OFFADD8  POINT TO
COMMEMLN BAS   R9,EBC2HEX    GET ADDRESS RETURNED IN R0 AND 'ADDRESS'
         CLC   LINE+OFFLHEX(L'OFFLHEX),BLANKS  EMPTY LEFT HALF?
         BE    MEMTWO        YES; JUST DO SECOND LINE
         SPACE 1
         MVC   LOUTCC,BLANKS   CLEAR OUTPUT LINE
         MVC   LOUTCC(OFFLHEX),LINECC  MOVE FIRST HALF OF HEX STUFF
         MVI   LINECC,C' '   RESET CARR. CONTROL
         MVC   LOUT+OUTLHEX(L'OUTLHEX),LINE+OFFLHEX
         MVI   LOUT+OUTLAST,C'*'  MOVE NEW FRAME
         MVC   LOUT+OUTTEXT(L'OUTTEXT),LINE+OFFLTXT  MOVE LEFT TEXT
         MVI   LOUT+OUTRAST,C'*'  MOVE NEW FRAME
         LA    R1,LOUT+OUTLHEX  POINT TO HEX TEXT               GP02234
         LA    R2,LOUT+OUTTEXT  POINT TO OUT TEXT               GP02234
         BAS   R9,HEX2TXT    DO TN/T11 TRAIN CHARACTERS         GP02234
         PRTF  LOUTCC,DEV=2,CC=ASA   PRINT NEW LEFT LINE
         AP    LINEOUT,=P'1' UP LINE COUNT
         CLC   LINE+OFFRHEX(L'OFFRHEX),BLANKS  NEED TO DO SECOND LINE ?
         BE    INLINED       NO; SKIP EMPTY HALF
         SPACE 1
MEMTWO   MVC   LTWOCC,BLANKS   CLEAR SECOND LINE
         MVC   LTWOCC(1),LINECC  IN CASE FIRST LINE SKIPPED
         LA    R0,16         GET LINE INCREMENT
         AL    R0,ADDRESS
         BAS   R9,HEX2EBC    CONVERT TO HEX
         MVC   LTWO+OFFADD8(L'OFFADD8),HEXEDOUT
         MVC   LTWO+OUTLHEX(L'OUTLHEX),LINECC+OFFRHEX  MOVE RIGHT HALF
         MVI   LTWO+OUTLAST,C'*'  MOVE NEW FRAME
         MVC   LTWO+OUTTEXT(L'OUTTEXT),LINE+OFFRTXT  MOVE LEFT TEXT
         MVI   LTWO+OUTRAST,C'*'  MOVE NEW FRAME
         LA    R1,LTWO+OUTLHEX  POINT TO HEX TEXT               GP02234
         LA    R2,LTWO+OUTTEXT  POINT TO OUT TEXT               GP02234
         BAS   R9,HEX2TXT    DO TN/T11 TRAIN CHARACTERS         GP02234
         PRTF  LTWOCC,DEV=2,CC=ASA   PRINT NEW RIGHT LINE
         AP    LINEOUT,=P'1' UP LINE COUNT
         B     INLINED       DONE; GET ANOTHER LINE
         SPACE 1
***********************************************************************
**                                                                   **
**  TEST FOR CONTROL BLOCK FORMAT                                    **
**                                                                   **
**  1)  +/- IN COLUMN 11, HEX OFFSET IN 12-15                        **
**  2)  ADDRESS IN COLUMN 1, LABEL IN 11-18                          **
**  3)  LABEL IN COLUMNS 1-4, 6-BYTE HEX ADDRESS IN 6, TEXT IN 14    **
**                                                                   **
***********************************************************************
OFFSIGN  EQU   10,1,C'C'     OFFSET TO SIGN
OFFADD4  EQU   11,4,C'C'     OFFSET FOR CONTROL BLOCK OFFSET
OFFFNAM  EQU   17,8,C'C'     OFFSET TO FIELD NAME(L 4-8?)
OFFFDOT  EQU   25,1,C'C'     OFFSET TO PERIOD IN FIELD NAME
OFFFSPLT EQU   75,1,C'C'     FIRST PLACE TO SPLIT 4-BYTE ADDR LINE
OFFENAM  EQU   10,8,C'C'     OFFSET TO FIELD NAME(L 4-8?)
OFFEDOT  EQU   18,1,C'C'     OFFSET TO PERIOD IN FIELD NAME
OFFESPLT EQU   65,1,C'C'     FIRST PLACE TO SPLIT 8-BYTE ADDR LINE
OLDLBL   EQU   0,4,C'C'      OLD FORMAT - CONTROL BLOCK NAME
OLDADR   EQU   5,6,C'C'      OLD FORMAT - ADDRESS
OLDTEXT  EQU   13,55,C'C'    LEFT TEXT
OLDTEXT2 EQU   67,52,C'C'    APPROX. SPLIT POINT
NOTMEMLN NI    PROFLAG,255-PFBLK4  RESET BLOCK TYPE
         CLI   LINE+OFFSIGN,C'+'  MOST FREQUENT ?
         BE    CNTRLBK       TEST ADDRESS, ETC.
         CLI   LINE+OFFSIGN,C'-'  LESS FREQUENT ?
         BE    CNTRLBK       TEST ADDRESS, ETC.
         CLI   LINE+OFFEDOT,C'.' SECOND FORMAT ?
         BNE   OLDCNTRL      NO; TRY SOMETHING ELSE             GP05174
         TRT   LINE+OFFADD8(8),TRTHEXVL    VALID HEX ADDRESS?
         BNZ   OLDCNTRL      NO; TRY SOMETHING ELSE             GP05174
         B     CNTRLBM
CNTRLBK  TRT   LINE+OFFADD4(L'OFFADD4),TRTHEXVL  VALID HEX ?
         BNZ   OLDCNTRL      NO; NO CONTROL BLOCK OFFSET        GP05174
         OI    PROFLAG,PFBLK4  INDICATE SHORT ADDRESS
CNTRLBM  MVC   LOUT,BLANKS   CLEAR OUTPUT LINE
         MVC   LTWOCC,BLANKS   CLEAR SECOND LINE
         MVC   LOUTCC(1),LINECC   PROPAGATE CARRIAGE CONTROL
         TM    PROFLAG,PFBLK4   4 OR 8 BYTE ADDRESS ?
         BNZ   CNTRLOFF      4; USE OFFSET PATTERN
         LA    R6,LINE+OFFADD8  INPUT ADDRESS
         LA    R7,L'LINE-OFFADD8   AND MAXIMUM LENGTH
         ICM   R7,8,BLANKS   REQUEST BLANK FILL
         LA    R4,LOUT+OFFADD8  OUTPUT START
         LA    R1,LINE+OFFESPLT  POINT TO FIRST PLACE TO SPLIT
         LA    R0,L'LINE-OFFESPLT-1  MAX TO SCAN
         B     CNTRLCOM      JOIN COMMON
CNTRLOFF LA    R6,LINE+OFFSIGN  INPUT ADDRESS
         LA    R7,L'LINE-OFFSIGN   AND MAXIMUM LENGTH
         ICM   R7,8,BLANKS   REQUEST BLANK FILL
         LA    R4,LOUT+OFFADD8+3  OUTPUT START
         LA    R1,LINE+OFFFSPLT  POINT TO FIRST PLACE TO SPLIT
         LA    R0,L'LINE-OFFFSPLT-1  MAX TO SCAN
CNTRLCOM BAS   R9,SCNBLANK   FIND A BLANK
           B   NOTCNTRL        HUH ?
         LR    R5,R1         SAVE CURRENT LOCATION
         BAS   R9,SCNCHANY   FIND A NON-BLANK
           B   CNTRLNS         NO SPLITTING, BUT ALIGN WITH OTHERS
         LR    R5,R1         LOCATION OF NON-BLANK
CNTRLNS  SR    R5,R6         LESS START
         MVCL  R4,R6         MOVE LEFT PORTION OF LINE
         LA    R4,LTWO+OUTLHEX  START OF RIGHT PORTION
         LA    R5,L'LTWO-OUTLHEX  MAX LENGTH
         MVCL  R4,R6         MOVE RIGHT PORTION
         PRTF  LOUTCC,DEV=2,CC=ASA PRINT AS IS
         AP    LINEOUT,=P'1' UP LINE COUNT
         CLC   LTWO,BLANKS   ANYTHING TO DO ON SECOND LINE ?
         BE    INLINED       NO; SKIP IT
         PRTF  LTWOCC,DEV=2,CC=ASA PRINT AS IS
         AP    LINEOUT,=P'1' UP LINE COUNT
         B     INLINED       GET ANOTHER LINE
         SPACE 1
OLDCNTRL CLC   LINE(OLDTEXT),BLANKS  MOSTLY EMPTY ?             GP05174
         BNE   OLDBLOCK      NO; TEST FOR OLD STYLE CONTROL BLOCK
         CLC   =C'RG ',LINE+OLDTEXT  REGISTER ?                 GP05174
         BE    OLDREG        YES; PROCESS WITH SPECIAL LABELS   GP05174
         CLC   =C'R1 ',LINE+OLDTEXT  REGISTER ?                 GP05174
         BE    OLDREG        YES; PROCESS WITH SPECIAL LABELS   GP05174
         CLC   =C'R7 ',LINE+OLDTEXT  REGISTER ?                 GP05174
         BE    OLDREG        YES; PROCESS WITH SPECIAL LABELS   GP05174
         CLC   =C'RESV ',LINE+OLDTEXT  RB EXPANSION?            GP05174
         BE    OLDREG        YES; PROCESS WITH SPECIAL LABELS   GP05174
         CLC   =C'EXTSA',LINE+OLDTEXT  RB EXPANSION?            GP05174
         BE    OLDREG        YES; PROCESS WITH SPECIAL LABELS   GP05174
OLDBLOCK TRT   LINE+OLDADR(L'OLDADR),TRTHEXVL  HEX ADDR?        GP05174
         BNZ   OLDERRG       NO                                 GP05174
         CLC   LINE+OLDLBL(L'OLDLBL),BLANKS  EMPTY LABEL ?      GP05174
         BE    NOTCNTRL      YES; IGNORE IT (LOAD LINE)         GP05174
         B     OLDREG                                           GP05174
OLDERRG  CLC   =C'+3C     REGS AT',LINE   ERROR REGS ?          GP05174
         BE    OLDERRS    YES; SPECIAL HANDLING                 GP05174
         CLC   =C'+5C            ',LINE   ERROR REGS 2/2 ?      GP05174
         BNE   OLDFLTR    NO; TRY SOMETHING ELSE                GP05174
OLDERRS  MVC   LOUT,BLANKS   CLEAR OUTPUT LINE                  GP05174
         MVC   LTWOCC,BLANKS   CLEAR SECOND LINE                GP05174
         MVC   LOUTCC(1),LINECC   PROPAGATE CARRIAGE CONTROL    GP05174
         LA    R6,LINE       INPUT ADDRESS                      GP05174
         LA    R7,L'LINE       AND MAXIMUM LENGTH               GP05174
         ICM   R7,8,BLANKS   REQUEST BLANK FILL                 GP05174
         LA    R4,LOUT       OUTPUT START                       GP05174
         LA    R1,LINE+33+4*9-1  POINT TO FIRST PLACE TO SPLIT  GP05174
         LA    R0,L'LINE-33-4*9-2    MAX TO SCAN                GP05174
         BAS   R9,SCNBLANK   FIND A BLANK                       GP05174
           B   NOTCNTRL        HUH ?                            GP05174
         LR    R5,R1         SAVE CURRENT LOCATION              GP05174
         BAS   R9,SCNCHANY   FIND A NON-BLANK                   GP05174
           B   NOTCNTRL      DON'T KNOW                         GP05174
         LR    R5,R1         LOCATION OF NON-BLANK              GP05174
         SR    R5,R6         LESS START                         GP05174
         MVCL  R4,R6         MOVE LEFT PORTION OF LINE          GP05174
         LA    R4,LTWO+33       START OF RIGHT PORTION          GP05174
         LA    R5,L'LTWO-33       MAX LENGTH                    GP05174
         B     OLDNREG                                          GP05174
OLDFLTR  CLC   =C'     FLTR ',LINE  FLOATING OR FIXED REGS?     GP05174
         BE    OLDREGS       YES; SPECIAL HANDLING              GP05174
         CLC   =C'     REGS ',LINE  FIXED ?                     GP05174
         BNE   NOTCNTRL      NOT MINE                           GP05174
OLDREGS  MVC   LOUT,BLANKS   CLEAR OUTPUT LINE                  GP05174
         MVC   LTWOCC,BLANKS   CLEAR SECOND LINE                GP05174
         MVC   LOUTCC(1),LINECC   PROPAGATE CARRIAGE CONTROL    GP05174
         LA    R6,LINE       INPUT ADDRESS                      GP05174
         LA    R7,L'LINE       AND MAXIMUM LENGTH               GP05174
         ICM   R7,8,BLANKS   REQUEST BLANK FILL                 GP05174
         LA    R4,LOUT       OUTPUT START                       GP05174
         LA    R1,LINE+20+4*10   POINT TO FIRST PLACE TO SPLIT  GP05174
         LA    R0,L'LINE-20-4*10-1   MAX TO SCAN                GP05174
         BAS   R9,SCNBLANK   FIND A BLANK                       GP05174
           B   NOTCNTRL        HUH ?                            GP05174
         LR    R5,R1         SAVE CURRENT LOCATION              GP05174
         BAS   R9,SCNCHANY   FIND A NON-BLANK                   GP05174
           B   NOTCNTRL      DON'T KNOW                         GP05174
         LR    R5,R1         LOCATION OF NON-BLANK              GP05174
         SR    R5,R6         LESS START                         GP05174
         MVCL  R4,R6         MOVE LEFT PORTION OF LINE          GP05174
         LA    R4,LTWO+19       START OF RIGHT PORTION          GP05174
         LA    R5,L'LTWO-19       MAX LENGTH                    GP05174
         B     OLDNREG                                          GP05174
OLDREG   MVC   LOUT,BLANKS   CLEAR OUTPUT LINE                  GP05174
         MVC   LTWOCC,BLANKS   CLEAR SECOND LINE                GP05174
         MVC   LOUTCC(1),LINECC   PROPAGATE CARRIAGE CONTROL    GP05174
         LA    R6,LINE       INPUT ADDRESS                      GP05174
         LA    R7,L'LINE       AND MAXIMUM LENGTH               GP05174
         ICM   R7,8,BLANKS   REQUEST BLANK FILL                 GP05174
         LA    R4,LOUT       OUTPUT START                       GP05174
         LA    R1,LINE+OLDTEXT2  POINT TO FIRST PLACE TO SPLIT  GP05174
         LA    R0,L'LINE-OLDTEXT2-1  MAX TO SCAN                GP05174
         BAS   R9,SCNBLANK   FIND A BLANK                       GP05174
           B   NOTCNTRL        HUH ?                            GP05174
         LR    R5,R1         SAVE CURRENT LOCATION              GP05174
         BAS   R9,SCNCHANY   FIND A NON-BLANK                   GP05174
           B   OLDBLNK         NO SPLITTING, BUT ALIGN WITH OTHERS
         LR    R5,R1         LOCATION OF NON-BLANK              GP05174
OLDBLNK  SR    R5,R6         LESS START                         GP05174
         MVCL  R4,R6         MOVE LEFT PORTION OF LINE          GP05174
         LA    R4,LTWO+OLDTEXT  START OF RIGHT PORTION          GP05174
         LA    R5,L'LTWO-OLDTEXT  MAX LENGTH                    GP05174
         CLC   =C'RG ',LOUT+OLDTEXT  REGISTER MODE?             GP05174
         BNE   OLDNREG                                          GP05174
         MVC   LOUT+OLDTEXT+3(5),=C' 0- 3'                      GP05174
         MVC   LTWO+OLDTEXT(8),=C'RG  4- 7'  FIRST PAIR         GP05174
         CLI   LINE+OLDTEXT+3,C'8'   SECOND PAIR ?              GP05174
         BNE   OLDNDENT      NO                                 GP05174
         MVC   LOUT+OLDTEXT+3(5),=C' 8-11'                      GP05174
         MVC   LTWO+OLDTEXT+3(5),=C'12-15'                      GP05174
OLDNDENT LA    R4,09(,R4)    INDENT PAST REG ID                 GP05174
         SH    R5,=H'09'     ADJUST LENGTH                      GP05174
OLDNREG  MVCL  R4,R6         MOVE RIGHT PORTION                 GP05174
         PRTF  LOUTCC,DEV=2,CC=ASA PRINT AS IS                  GP05174
         AP    LINEOUT,=P'1' UP LINE COUNT                      GP05174
         CLC   LTWO,BLANKS   ANYTHING TO DO ON SECOND LINE ?    GP05174
         BE    INLINED       NO; SKIP IT                        GP05174
         PRTF  LTWOCC,DEV=2,CC=ASA PRINT AS IS                  GP05174
         AP    LINEOUT,=P'1' UP LINE COUNT                      GP05174
         B     INLINED       GET ANOTHER LINE                   GP05174
         SPACE 1
NOTCNTRL DS    0H            NOTHING ELSE, YET
***********************************************************************
**                                                                   **
**  NOTHING SPECIAL FOUND - PRINT AS READ                            **
**                                                                   **
***********************************************************************
PUTASIS  PRTF  LINECC,DEV=2,CC=ASA   PRINT AS IS
         AP    LINEOUT,=P'1' UP LINE COUNT
         B     INLINED
ENDINP   PRTLIST STATLINE    TELL USER
         CP    LINEOUT,=P'0' DID IT GO WELL ?
         BH    EXIT          YES
         OICC  8             ELSE SET ERROR RETURN CODE         GP05170
         SPACE 1
EXIT     SERVTERM ,
         L     R9,RETCODE                                       GP05170
         PGMEXIT RC=(R9)       RETURN WITH CONDITION
         EJECT ,
***********************************************************************
**                                                                   **
**  EBC2HEX - CONVERT PRINTED HEX ADDRESS TO BINARY                  **
**                                                                   **
**    INPUT POINTED TO BY R1; INPUT LENGTH IN R0                     **
**    OUTPUT RETURNED IN R0 AND FULLWORD 'ADDRESS'                   **
**                                                                   **
***********************************************************************
         SPACE 1
EBC2HEX  STM   R1,R5,24(R13)   SAVE A FEW REGISTERS             GP02234
         LR    R5,R1           PRESERVE OVER TRT
         LA    R4,HEXEDOUT+L'HEXEDOUT
         SR    R4,R0           GET START OF OUTPUT
         LR    R3,R0           GET INPUT LENGTH
         SR    R0,R0           CLEAR RETURN VALUE
         CH    R3,=Y(L'HEXEDOUT)  NOT TOO LONG ?
         BH    EBC2HEXX        TOO BAD
         SH    R3,=H'1'        CHANGE LENGTH FOR EXECUTE
         BM    EBC2HEXX
         XC    HEXEDOUT,HEXEDOUT
         EX    R3,EXHEXMVC     MOVE IT
         TRT   HEXEDOUT,TRTHEXVL  VALID HEX ?
         BNZ   EBC2HEXX        NO; IGNORE IT
         TR    HEXEDOUT,TRTHEXDT  CONVERT TO HEX NYBBLES
         PACK  HEXEDIN(1+L'HEXEDIN),HEXEDOUT(1+L'HEXEDOUT) HEX IT
         L     R0,HEXEDIN      LOAD IT
EBC2HEXX ST    R0,ADDRESS      RETURN IN STORAGE, ALSO
         LM    R1,R5,24(R13)   RESTORE                          GP02234
         BR    R9              RETURN TO CALLER
         SPACE 1
EXHEXMVC MVC   0(0,R4),0(R5)   MOVE AND CONVERT USER'S INPUT
         SPACE 2
***********************************************************************
**                                                                   **
**  HEX2EBC - FORMAT WORD INTO PRINTABLE HEX                         **
**                                                                   **
**    OUTPUT RETURNED IN 'HEXEDOUT'                                  **
**                                                                   **
***********************************************************************
         SPACE 1
HEX2EBC  ST    R0,HEXEDIN    STORE THE WORD TO BE CONVERTED
         UNPK  HEXEDOUT(9),HEXEDIN(5)
         TR    HEXEDOUT(8),HEXTRTAB  TRANSLATE HEX TO PRINTABLE
         BR    R9                      RETURN
         SPACE 2
***********************************************************************
**                                                                   **
**  HEX2TXT - FORMATS PRINTABLE HEX TO TEXT CHARACTERS OR '.'        **
**                                                                   **
**    R1-> INPUT (4*9)  R2-> OUTPUT CL16                             **
**                                                                   **
***********************************************************************
         SPACE 1
HEX2TXT  STM   R0,R5,20(R13)   SAVE                             GP02234
         MVC   DB,0(R1)      MOVE FIRST WORD                    GP02234
         MVC   DB1,9(R1)     MOVE SECOND WORD                   GP02234
         MVC   DB2,18(R1)    MOVE THIRD WORD                    GP02234
         MVC   DB3,27(R1)    MOVE FOURTH WORD                   GP02234
         LA    R3,DB+30      POINT TO LAST INPUT BYTE           GP02234
         LH    R4,=H'-2'     'INCREMENT' -2                     GP02234
         LA    R5,DB-1       LAST BYTE TO PROCESS               GP02234
         LA    R2,16(,R2)    UPDATE OUTPUT POSITION             GP02234
HEX2TXTL BCTR  R2,0          BACK UP ONE                        GP02234
         CLC   0(2,R3),BLANKS   UNOCCUPIED POSITION?            GP02234
         BE    HEX2TXTB      YES; REPLACE OUTPUT BY BLANK       GP02234
         TR    0(2,R3),TRTABWEX  CONVERT TO 8-BIT HEX           GP02234
         ICM   R0,3,0(R3)    LOAD TWO BYTES                     GP02234
         SRDL  R0,4          MOVE RIGHT NYBBLE                  GP02234
         SRL   R0,4          LOSE HIGH SECOND NYBBLE            GP02234
         SRDL  R0,4          MOVE LEFT NYBBLE                   GP02234
         STCM  R1,8,0(R2)    SET CHARACTER                      GP02234
         B     HEX2TXTC      DO MORE                            GP02234
HEX2TXTB MVI   0(R2),C' '    UNOCCUPIED                         GP02234
HEX2TXTC BXH   R3,R4,HEX2TXTL  DO UNTIL DONE                    GP02234
         TR    0(16,R2),TRTABTN  TRANSLATE TO PRINTABLE ON TN TRAIN
         LM    R0,R5,20(R13)   RESTORE                          GP02234
         BR    R9                      RETURN                   GP02234
         SPACE 2
***********************************************************************
**                                                                   **
**  SCNBLANK - FIND A BLANK AT OR AFTER (R1)                         **
**  SCNCHANY - FIND A NON-BLANK AT OR AFTER (R1)                     **
**                                                                   **
**    R1 - INPUT POINTER; RETURNED ADJUSTED                          **
**    R0 - INPUT LENGTH                                              **
**                                                                   **
***********************************************************************
         SPACE 1
SCNBLANK STM   R2,R4,28(R13)  SAVE A BIT
         LA    R15,TRTBLANK   SCAN FOR BLANKS
         B     SCNSCAN        GO TO COMMON
SCNCHANY STM   R2,R4,28(R13)  SAVE A BIT
         LA    R15,TRTCHARS   SCAN FOR NON-BLANKS
SCNSCAN  LTR   R4,R0          SAVE AND TEST LENGTH
         BNP   SCNBLAND       TOO BAD
         AR    R0,R1          SET END ADDRESS + 1
         LR    R3,R1          SAVE START
         BCTR  R4,0           ADJUST LENGTH FOR EXECUTE
         EX    R4,EXTRT1      SCAN FOR SOMETHING
         BZ    SCNBLAND       NOTHING FOUND
         SR    R0,R1          END LESS POINT GIVES NEW LENGTH
SCNBLANX LM    R2,R4,28(R13)  RESTORE
         B     4(,R9)        TAKE GOOD EXIT
SCNBLAND LM    R2,R4,28(R13)  RESTORE
         BR    R9                      RETURN
EXTRT1   TRT   0(0,R1),0(R15)  SCAN FOR SPECIAL DATA
         SPACE 2
***********************************************************************
**                                                                   **
**  RE-ENTRANT DATA AREA                                             **
**                                                                   **
***********************************************************************
         SPACE 1
SYSPRINT PRTWORK SUMPRINT,SYSPRINT,TITLE=3
DUMPOUT  PRTWORK DUMPOUT,SYSUT2,FILL=X'FF'  OUTPUT - NO TRANSLATE
DUMPIN   INPWORK DUMPIN,SYSUT1,EODAD=ENDINP
         SPACE 1
STATLINE FDOPT NL,CC=C'0'
         FD    LINEIN,D,PAD
         FD    'LINES READ; '
         FD    LINEOUT,D,PAD
         FD    'LINES WRITTEN.'
         FD    *END                                              94297
         SPACE 1
BLANKS   DC    CL133' '
TRTHEXVL DC    256AL1(*-TRTHEXVL)  HEX 0 IS SPECIAL CASE?
         TRENT TRTHEXVL,0,(X'81',6)   LOWER CASE HEX DIGITS
         TRENT ,0,(C'A',6),(C'0',10)  UPPER CASE AND NUMERICS
         ORG   ,
         SPACE 1
TRTHEXDT DC    256AL1(0)     DEFINE ALL AS ZERO
         TRENT TRTHEXDT,(*+10-X'81'-TRTHEXDT),(X'81',6) LOWER CASE HEX
         TRENT ,(*+10-C'A'-TRTHEXDT),(C'A',6)  UPPER CASE HEX
         TRENT ,(*-C'0'-TRTHEXDT),(C'0',10)    DIGITS 0-9
         ORG   ,
         SPACE 1
TRTBLANK DC    256AL1(0)     NO SHOW STOPPERS
         TRENT TRTBLANK,C' ',C' '  STOP ON BLANK
         ORG   ,
         SPACE 1
TRTCHARS DC    256AL1(4)     STOP ON EVERYTHING
         TRENT TRTCHARS,0,C' '   EXCEPT BLANKS
         ORG   ,
         SPACE 1
HEXTABLE DC    C'0123456789ABCDEF'
HEXTRTAB EQU   HEXTABLE-C'0'  VIRTUAL BASE FOR HEX TRANSLATION
         SPACE 1
TRTABWEX DC    256AL1(0)     DEFINE ALL AS ZERO
         TRENT TRTABWEX,(*+10-X'81'-TRTHEXDT),(X'81',6) LOWER CASE HEX
         TRENT ,(*+10-C'A'-TRTABWEX),(C'A',6)  UPPER CASE HEX
         TRENT ,(*-C'0'-TRTABWEX),(C'0',10)    DIGITS 0-9
         ORG   ,
         SPACE 1
TRTABTN  TRTAB CODE=TN,FILL=C'.'                                GP02234
         SPACE 1
***********************************************************************
**                                                                   **
**  DYNAMIC SAVE AND WORK AREA                                       **
**                                                                   **
***********************************************************************
SAVE     DSECT ,
DB       DS    D                                                GP02234
DB1      DS    D                                                GP02234
DB2      DS    D                                                GP02234
DB3      DS    D                                                GP02234
ADDRESS  DS    A             RETURN FROM EBC2HEX FUNCTION
         SERVDEFS ,          DEFINE COMMON SERVICES             GP05170
PROFLAG  DS    X
PFBLK4   EQU   4             4, RATHER THAN 8, BYTE ADDRESS
LINEIN   DS    PL7
LINEOUT  DS    PL7
HEXEDIN  DC    F'0'          HEX INPUT
HEXEDOUT DC    CL8' ',C' '   PRINTABLE HEX OUTPUT
LINECC   DS    0CL133,C      CONTROL CHARACTER
LINE     DS    CL132         INPUT LINE (EXPANDED OR TRUNCATED)
LOUTCC   DS    0CL133,C      CONTROL CHARACTER
LOUT     DS    CL132         FIRST OUTPUT LINE FOR SPLIT
LTWOCC   DS    0CL133,C      CARRIAGE CONTROL - ALWAYS BLANK
LTWO     DS    CL132         SECOND OUTPUT LINE FOR SPLIT
SAVEEND  EQU   *
         SPACE 1
         CVT   DSECT=YES
         IHACDE ,
         END   ,
