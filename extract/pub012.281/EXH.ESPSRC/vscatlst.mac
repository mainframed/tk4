CATL    TITLE 'C A T L I S T  ***  QUICK AND DIRTY VSAM CATALOG LISTER'
         PUNCH '  ORDER CATLIST(P) '   EASIER DUMPS
         PUNCH ' SETCODE AC(1) '       CATALOG ALLOCATION/OPEN
         SPACE 1
         COPY  OPTIONGB
         SPACE 2
         SYSPARM LIST=YES    SHOW GLOBAL OPTIONS
         EJECT ,
         PRINT &PRTSOR
CATLIST  SAVEM ZERO12,BASE=R12,PARM=R9,BNDRY=PAGE                85230
         SERVINIT ,          ESTABLISH SERVICE ROUTINE INTERFACE
         SERVCALL LPALD,=CL8'@PRINTER'  LOAD PRINT ROUTINE
         ST    R0,@PRINTER   SAVE ADDRESS
         PRTOPEN SYSPRINT,OPT=ABE  OPEN PRINT FILE OR QUIT
*        PRTV  SUBHEAD,TITLE=3   AND SUBHEAD
         MVI   PBLANK,C' '   INITIALIZE BLANKING
         EX    0,BLKLINE     CLEAR LINE
         MVI   TRACKER+C'F',255  SKIP FREE BLOCKS
         L     R4,CVTPTR     GET THE CVT
         USING CVTMAP,R4     DECLARE IT
         L     R4,CVTCBSP    GET THE AMCBS
         USING AMCBS,R4      TRY MVS/SP STYLE ENTRY
         LA    R3,SPCAXCN-(CAXCHN-CAXID)  POINT TO CHAIN HEAD
         USING CAXID,R3      DECLARE CAX ENTRY
LOOPCAX  LR    R2,R3         REMEMBER THE LAST ENTRY (**DEBUG**) 90302
         ICM   R3,15,CAXCHN  GET AN ENTRY                        90302
         BZ    ABENDCAT      QUIT ON END
         TM    CAXFLGS,CAXMCT  MASTER CATALOG ENTRY ?
         BZ    LOOPCAX       NO; TRY AGAIN
         L     R4,CAXUCB     GET MASTER CATALOG UCB
         USING UCBOB,R4      DECLARE IT
         MVC   MASTVOL,UCBVOLI  SAVE THE MASTER CATALOG VOLSER
         MVC   MCVOL,UCBVOLI
         DROP  R3,R4
         LA    R9,0(,R9)     CLEAN PARM POINTER
         LTR   R9,R9         ANY ?
         BZ    DFLTVOL       DON'T FAIL ON BAD INVOCATION
         ICM   R9,7,1(R9)    ANY PARM ?
         BZ    DFLTVOL       NO
         SLR   R2,R2
         ICM   R2,3,0(R9)    ANY PARM DATA ?
         BNP   DFLTVOL       NO
         LA    R0,6          SET MAXIMUM LENGTH
         MIN   (R2),(R0)     GET MINIMUM
         BCTR  R2,0          FINAGLE FOR EXECUTE
         MVC   MCVOL,BLANKS  PRE-CLEAR
         EX    R2,MVCMCVOL   MOVE VOL-SER
         SPACE 1                                                 90302
DFLTVOL  SERVCALL UCBVS,MCVOL  LOCATE UCB BY VOLSER              90302
         LTR   R2,R0         TEST
         BZ    ABENDCAT
         L     R1,CVTPTR     GET THE CVT                         90302
         USING CVTMAP,R1     DECLARE IT                          90302
         L     R1,CVTCBSP    GET THE AMCBS                       90302
         USING AMCBS,R1      TRY MVS/SP STYLE ENTRY              90302
         LA    R1,SPCAXCN-(CAXCHN-CAXID)  POINT TO CHAIN HEAD    90302
         USING CAXID,R1      DECLARE CAX ENTRY                   90302
LOOPCUX  ICM   R1,15,CAXCHN  GET AN ENTRY                        90302
         BZ    ABENDCAT      QUIT ON END                         90302
         C     R2,CAXUCB     DESIRED UCB ?                       90302
         BNE   LOOPCUX       NO; TRY AGAIN                       90302
         MVC   MCDSN,CAXCNAM  MOVE CATALOG DSNAME                90302
         MVC   MCUNIT,UCBNAME-UCBOB(R2)  MOVE UNIT NAME
         PRTLIST HEADER,TITLE=1  PRINT PAGE HEADER
         LA    R1,MCRBP      GET SVC 99 REQUEST BLOCK
         SVC   99            ALLOCATE VSAM CATALOG
         BXH   R15,R15,ABENDCAT  TOO BAD
         MVC   VSAMCAT+DCBDDNAM-IHADCB(8),MCDDN  GET RETURNED DDNAME
*************************************************************    90303
         OI    ACBINFLG-IFGACB+VSAMCAT,ACBBYPSS                  90303
         OPEN  (VSAMCAT,INPUT)  OPEN FOR INPUT
         TM    VSAMCAT+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?
         BZ    ABENDCAT      NO; TOO BAD
         SPACE 1
         MODCB RPL=VSAMRPL,OPTCD=(KEY,DIR)
         POINT RPL=VSAMRPL
         LA    R2,TRUENAME   GET ADDRESS OF SHORT RECORD
         MODCB RPL=VSAMRPL,OPTCD=(KEY,SEQ),AREA=(R2),AREALEN=TRUELEN
         SPACE 1
READVSAM GET   RPL=VSAMRPL   READ A VSAM BLOCK
         CHECK RPL=VSAMRPL   CHECK READ
         BXH   R15,R15,ABENDCAT   TOO BAD
         INC   BLOCKNUM      COUNT RETURNS
*        PRTROOM 5
*        PRTSPACE 2
*        PRTLIST BLOCKHED    SPACE BETWEEN
*        PRTSNAP DUMP48
         ICM   R1,7,TRUECI   GET CI OF DATA RECORD
         BZ    READVSAM      NONE ?
         SLL   R1,9          CONVERT TO RBA
         ST    R1,RBANUM
         POINT RPL=DIRRPL    POINT TO RBA
         GET   RPL=DIRRPL    READ DATA BLOCK
         CHECK RPL=DIRRPL
         BXH   R15,R15,ABENDCAT  TOO BAD
         MVC   TRUETYPE,VCTYPE  SAVE ENTRY TYPE
         XC    RECURSE,RECURSE  CLEAR RECURSION POINTER
         CLI   VCTYPE,C'A'   NON-VSAM ENTRY ?
         BE    DONOVSAM      YES; DO IT
         CLI   VCTYPE,C'U'   USER CATALOG POINTER ?
         BE    DONOVSAM      YES; TREAT AS SYSCTLG
         CLI   VCTYPE,C'C'   VSAM CLUSTER ?
         BE    DOCLUST       YES
         CLI   VCTYPE,C'G'   ALTERNATE INDEX ?
         BE    DOCLUST       YES
         CLI   VCTYPE,C'D'   DATA RECORD (HOW ?)
         BE    DODATA        YES
         CLI   VCTYPE,C'I'   INDEX RECORD ?
         BE    DODATA        YES
         CLI   VCTYPE,C'V'   VSAM VOLUME ?
         BE    VSAMVOL       YES
         CLI   VCTYPE,C'X'   ALIAS
         BE    DOALIAS       YES
         CLI   VCTYPE,C'B'   GDG BASE ?                          90303
         BE    DOGDGBS       YES                                 90303
RECDUMP  PRTSPACE 1
         MVC   DUMPLEN,VCLEN   SET USED LENGTH
         PRTSNAP DUMPIT
         PRTSPACE 1                                              90303
         B     READVSAM
DONOVSAM LA    R0,3          SET TO LOOK FOR VOLUME FIELD
         BAL   R14,FLDFIND   LOOK FOR VOLUME DATA
         B     READVSAM      NOT FOUND
         USING VLSECT,R6     DECLARE IT
         MVC   PDSN,TRUENAME  MOVE DSN
         CLI   VLTYPE+2,X'20'  DISK ENTRY ?
         BNE   NOTDISK
         CLC   VLDSCB,ZEROES   DSCB TTR PRESENT ?
         BE    NOTDISK       NO
         UNPK  DB(7),VLDSCB(4)  UNPACK THE TTR
         TR    DB(6),TRANSLAT  MAKE EBCDIC
         MVC   PDSCB,DB      MOVE TO LINE
         MVC   PDSCBDC,=C'DSCB='
NOTDISK  CLC   PVOL-8(7),BLANKS  ROOM FOR DATE ?
         BNE   NOTDATE       NO; FORMAT IT
         CLI   TRUETYPE,C'U' USER CATALOG ENTRY ?
         BE    NOTDATE       YES; NO DATE AVAILABLE
         UNPK  DB(7),VCDATE(4)  PROCESS DATE FIELD
         TR    DB(5),TRANSLAT  MAKE EBCDIC
         MVC   PVOL-7(2),DB  MOVE YEAR
         MVI   PVOL-5,C'.'
         MVC   PVOL-4(3),DB+2  AND JULIAN DAY
NOTDATE  LA    R3,12         SET FOR ONE ENTRY
         BAL   R14,LPRDATA   PROCESS ONE ENTRY
         CLI   TRUETYPE,C'X'  CALLED FROM ALIAS RECORD ?
         BE    READVSAM      YES; DON'T RUN THE CHAIN NOW
         LA    R0,2          LOOK FOR ALIAS ENTRY
         BAL   R14,FLDFIND   LOOK FOR IT
         B     READVSAM      NONE
CATALIST CLI   2(R6),C'X'    ALIAS POINTER ?
         BE    CATAREAD      YES
CATALISP BAL   R14,FLDNEXT   ELSE TRY AGAIN                      88318
         B     READVSAM      NONE
         B     CATALIST      ELSE CHECK AGAIN
CATAREAD ICM   R1,7,3(R6)    GET CI#
         BZ    CATALISP      NONE                                88318
         LA    R3,PRTALIAS   SET TO PRINT ALIAS ID AND ALIAS
CATAREED SLL   R1,9
         ST    R1,RBANUM     SET RELATIVE BYTE ADDRESS
         POINT RPL=DIRRPL    POSITION
         GET   RPL=DIRRPL    READ IT
         CHECK RPL=DIRRPL    OK ?
         BXH   R15,R15,LERRLOC  NO
         PRTLIST (R3)        PRINT ALIAS ENTRY
         LA    R3,PRTALI     SET TO PRINT ONLY ALIAS NAME
CATALNEW LA    R0,2          LOOK FOR ALIAS ENTRY
         BAL   R14,FLDFIND   LOOK FOR IT
         B     READVSAM      NONE
CATANEW2 BAL   R14,FLDNEXT   LOOK FOR FORWARD POINTER
         B     READVSAM      NONE
         CLI   2(R6),C'X'    ALIAS POINTER FIELD ?
         BNE   CATANEW2      NO; TRY AGAIN
         ICM   R1,7,3(R6)    ANY CI# ?
         BNZ   CATAREED      YES; READ AND PRINT
         B     READVSAM      ELSE END OF CHAIN
         SPACE 1
PRTALIAS FDPRT 'ALIAS :',RADJ,LEN=10
PRTALI   FDOPT IND=11
         FDPRT VCDSN,DEB,PAD
         FDPRT *END
         SPACE 3
*        PRINT DSN OR VCB INFO
*
LPRDATA  STM   R3,R14,STOREG
         LA    R4,VLTYPE     POINT TO TYPE/VOLSER/FILE
         SH    R3,=H'12'     COMPENSATE FOR TEST
QREDO    BAL   R14,FORMAT    FORMAT VOLSER, DEVICE TYPE AND FILE CNT
         BAL   R14,LINEPR    PRINT LINE
         MVC   PDSN+2(L'PDSN-2),TRUENAME  INDENT CONTINUATION
         LA    R4,12(,R4)    UP PTR TO NEXT ENTRY
         SH    R3,=H'12'     ANY MORE ?
         BNL   QREDO         YES
QEND3    EX    0,BLKLINE     CLEAR NEXT LINE
         LM    R3,R14,STOREG  RESTORE REGS
         BR    R14           RETURN
         SPACE 2
*        VSAM CLUSTER RECORD
         SPACE 1
DOCLUST  LA    R0,2          LOOK FOR EXTENSION POINTER
         BAL   R14,FLDFIND   SEE IF FIELD PRESENT
         B     READVSAM      NO; SKIP
CKDATA   CLI   2(R6),C'D'    POINTER TO DATA CI# ?
         BNE   CKDATA2       NO; TRY FOR INDEX
         MVC   RECURSE+1(3),3(R6)  SAVE DATA CI#
         B     CKDATA3       GET NEXT FIELD POINTER
CKDATA2  CLI   2(R6),C'I'    INDEX POINTER ?
         BNE   CKDATA3       NO; TRY FOR ANOTHER
         MVC   RECURSE+5(3),3(R6)  SAVE INDEX CI#
CKDATA3  BAL   R14,FLDNEXT   TRY FOR NEXT POINTER
         B     *+8           DONE; SEE IF ANY POINTERS FOUND
         B     CKDATA        ELSE CHECK AGAIN
         OC    RECURSE(8),RECURSE  ANY ENTRIES FOUND ?
         BZ    READVSAM      NO; IGNORE
         ICM   R1,15,RECURSE+4  ANY INDEX ENTRY ?
         BZ    CKDATA4       NO; SKIP CLUSTER LINE
         MVC   RECURSE+8(1),TRUETYPE  SET CLUSTER LINE PRINTED
         MVC   PDSN,TRUENAME
         LA    R1,=C'ALT. INDEX'
         CLI   TRUETYPE,C'C'  CLUSTER ?
         BNE   *+8           NO
         LA    R1,=C'CLUSTER   '
         MVC   PSEQ-4(10),0(R1)
         PRTROOM 4           LEAVE SPACE FOR 4 LINES
         PRTSPACE 1          DOUBLE-SPACE FIRST OF THREE
         BAL   R14,LINEPR    PRINT ONE LINE
CKDATA4  ICM   R1,15,RECURSE  DATA ENTRY PRESENT ?
         BNZ   CMDATA2       YES; READ IT
CKDATA5  MVC   RECURSE(8),RECURSE+4  SHIFT
         ICM   R1,15,RECURSE  LOAD INDEX ENTRY
         B     CMDATA2
RDDATA   ICM   R1,7,3(R6)    GET CONTROL INTERVAL OF EXTENSION
CMDATA2  BZ    READVSAM      SHOULD NOT HAPPEN
         SLL   R1,9          CONVERT TO RBA
         ST    R1,RBANUM     STASH IT
         POINT RPL=DIRRPL    POSITION TO IT
         GET   RPL=DIRRPL    READ IT
         CHECK RPL=DIRRPL    OK ?
         BXH   R15,R15,LERRLOC  NO; TOO BAD
         B     CMDATA
DODATA   LA    R0,2          LOOK FOR CLUSTER, ALT. INDEX, ETC.
         BAL   R14,FLDFIND   LOOK FOR A FIELD
         B     CMDATA        NOT FOUND - SINGLE DS ?
TSDATA   CLI   2(R6),C'C'    MEMBER OF CLUSTER ?
         BE    READVSAM      YES; DON'T PRINT TWICE
         CLI   2(R6),C'G'    ENTRY OF ALTERNATE INDEX ?
         BE    READVSAM      YES; DITTO
         BAL   R14,FLDNEXT   TRY FOR ANOTHER
         B     CMDATA        NONE; PROCESS
         B     TSDATA        CHECK IT
CMDATA   LA    R0,3          LOOK FOR VOLUME SET OF FIELDS
         BAL   R14,FLDFIND   FIND IT
         B     READVSAM      NO ?
         MVC   PDSN,VCDSN     MOVE TRUE NAME
         LA    R1,=C'DATA '
         CLI   VCTYPE,C'D'   DATA ?
         BE    *+8           YES
         LA    R1,=C'INDEX'
         MVC   PSEQ(5),0(R1)  INDICATE VSAM RECORD
         CLC   PVOL-8(7),BLANKS  ROOM FOR DATE ?
         BNE   NODDATE       NO; FORMAT IT
         UNPK  DB(7),VCDATE(4)  PROCESS DATE FIELD
         TR    DB(5),TRANSLAT  MAKE EBCDIC
         MVC   PVOL-7(2),DB  MOVE YEAR
         MVI   PVOL-5,C'.'
         MVC   PVOL-4(3),DB+2  AND JULIAN DAY
NODDATE  LA    R3,12         SET FOR ONE ENTRY
         BAL   R14,LPRDATA   PROCESS ONE ENTRY
         CLC   TRUENAME,VCDSN  DIFFERENT NAMES ?
         BE    CKDATA5       NO                                 GP05204
         CLI   RECURSE+8,0   WAS CLUSTER LINE PRINTED ?
         BNE   CKDATA5       YES; SKIP TRUE NAME AGAIN
         MVC   PDSN,TRUENAME  PRINT TRUE NAME
         MVC   PSEQ-4(9),=C'TRUE NAME'
         BAL   R14,LINEPR    PRINT USER'S NAME
         B     CKDATA5       LOOK FOR RECURSION ENTRY
         SPACE 2
*        INDEX ALIAS RECORD
         SPACE 1
DOALIAS  LA    R0,2          LOOK FOR EXTENSION POINTER
         BAL   R14,FLDFIND   SEE IF FIELD PRESENT
         B     READVSAM      NO; SKIP
CKALIAS  CLI   2(R6),C'A'    POINTER TO CVOL CI# ?
         BE    RDALIAS       YES; GO TO READ IT
         CLI   2(R6),C'U'    USER CATALOG POINTER ?
         BE    RDALIAS       YES; READ IT
         BAL   R14,FLDNEXT   TRY FOR NEXT POINTER
         B     READVSAM      NONE; GIVE UP
         B     CKALIAS       ELSE CHECK AGAIN
RDALIAS  ICM   R1,7,3(R6)    GET CONTROL INTERVAL OF EXTENSION
         BZ    READVSAM      SHOULD NOT HAPPEN
         SLL   R1,9          CONVERT TO RBA
         ST    R1,RBANUM     STASH IT
         ICM   R3,7,VCDATE   SAVE INDEX DATE
         POINT RPL=DIRRPL    POSITION TO IT
         GET   RPL=DIRRPL    READ IT
         CHECK RPL=DIRRPL    OK ?
         BXH   R15,R15,LERRLOC  NO; TOO BAD
         MVC   PDSN(8),TRUENAME  SHOW INDEX LEVEL
         MVC   PDSN+12(8),=C'ALIAS OF'
         MVC   PDSN+21(26),VCDSN  SHOW CATALOG NAME
         PRTROOM 2           MAKE ROOM FOR POSSIBLE ALIAS LINE
         MVC   PSEQ-3(7),=C'CATALOG.V'  IDENTIFY
         LA    R0,3          LOOK FOR VOLUME SET OF FIELDS
         BAL   R14,FLDFIND   FIND IT
         B     ONLYDATE      NO ?
         B     NOTDISK       FORMAT DATE AND VOLUME FIELDS
ONLYDATE CLC   PVOL-8(7),BLANKS  ROOM FOR DATE ?
         BNE   DONEDATE      NO; JUST PRINT LINE
         STCM  R3,7,VCDATE   RESTORE CORRECT DATE
         UNPK  DB(7),VCDATE(4)  PROCESS DATE FIELD
         TR    DB(5),TRANSLAT  MAKE EBCDIC
         MVC   PVOL-7(2),DB  MOVE YEAR
         MVI   PVOL-5,C'.'
         MVC   PVOL-4(3),DB+2  AND JULIAN DAY
DONEDATE BAL   R14,LINEPR    PROCESS ONE ENTRY
         B     READVSAM      DO AGAIN
         SPACE 2
*        VSAM VOLUME ENTRY
         SPACE 1
VSAMVOL  MVC   PDSN+10(11),=C'VSAM VOLUME'
         OC    PDSN(8),TRUENAME  SHOW NAME
         MVC   FAKEVOL,VCDSN COPY VOLSER
         MVC   FAKETYP,VCDSN+44+8  AND DEVICE TYPE
         LA    R6,FAKETYP-2  POINT TO TYPE
         LA    R3,12         SET FOR ONE ENTRY
         BAL   R14,LPRDATA   FORMAT AND PRINT ONE VOLUME
         B     READVSAM      GO AGAIN
         SPACE 2                                                 90303
*        GENERATION DATA GROUP BASE                              90303
*                                                                90303
DOGDGBS  MVC   PDSN,VCDSN    MOVE GDG BASE NAME                  90303
         MVC   PGDG,=C'GDG OPTIONS: '                            90303
         MVC   PGOPT,=CL7'DEL OLD'                               90303
         MVC   PGMAX+4(3),=C'MAX'                                90303
         SLR   R0,R0                                             90303
         IC    R0,VC#GDG     GET GDG MAXIMUM                     90303
         MVC   PGMAX-1(4),=X'40202120'                           90303
         CVD   R0,DB                                             90303
         ED    PGMAX-1(4),DB+6                                   90303
         TM    VCGDGOPT,X'80'  JUNK ALL WHEN FULL ?              90303
         BZ    *+10          NO                                  90303
         MVC   PGOPT+4(3),=C'ALL'                                90303
         TM    VCGDGOPT,X'40'  SCRATCH AS WELL AS DELETE ?       90303
         BZ    *+10          NO                                  90303
         MVC   PGOPT(3),=C'SCR'                                  90303
         ICM   R3,7,VCDATE   GET CREATION DATE                   90303
         B     ONLYDATE                                          90303
         EJECT
*        ROUTINE TO FORMAT VOLSER, DEVICE TYPE AND FILE COUNT
*
FORMAT   MVC   PVOL,4(R4)   MOVE VOLSER
         UNPK  PDEV(9),0(5,R4)   UNPACK DEVICE TYPE
         TR    PDEV(8),TRANSLAT   MAKE IT PRINTABLE
         MVI   PDEV+8,C' '   RESTORE BYTE CLOBBERED BY UNPK
         LA    R1,EQITAB  GET DEVICE CODE/TYPE EQUIVALENCE TABLE
         LA    R15,(EQIEND-EQITAB)/6    AND NUMBER OF ENTRIES
FORML    CLC   2(2,R4),0(R1)   MATCH ?
         BE    FORMF         OK, DISPLAY IT
         LA    R1,6(,R1)     NO, BUMP
         BCT   R15,FORML     CHECK NEXT ONE
         BR    R14           NOT FOUND, EXIT
         SPACE
FORMF    MVC   PTYP,2(R1)    MOVE DEVICE TYPE
         MVI   PTYP-1,C'('   BRACKET IT
         MVI   PTYP+4,C')'   AND OTHER SIDE
         CLI   2(R4),X'80'   MAG TAPE ?
         BNER  R14           NO, RETURN
         MVC   PSEQ,=X'402020202120'  EDIT CODE
         MVC   DB(2),10(R4)  COPY SEQUENCE #
         LH    R1,DB
         CVD   R1,DB         CONVERT IT
         ED    PSEQ,DB+5  AND MAKE READABLE
         MVC   PFILEDC,=C', FILE'   MAKE DC
         BR    R14           DONE
         SPACE 2
*        CHECK FOR VOLUME REFERENCE SELECTION
*
LINEPR   TM    FLAG,FGRVOL   VOLUME REFERENCE REQUEST ?
         BZ    LINEUP        NO, PROCESS THIS LINE
         CLC   PVOL,REFVOL   IS THIS CATALOGUED ON REQ. VOLUME ?
         BNE   BLKLINE       NO; JUST CLEAR THIS LINE
LINEUP   ST    R14,DB
         PRTF  PLINE,L'PLINE,CC=NO
         L     R14,DB
BLKLINE  MVC   PLINE,PLINE-1    CLEAR OUTPUT LINE
         BR    R14           AND RETURN
         SPACE 1
*        SCAN ROUTINES FOR COMMON VSAM RECORDS
*          R0 - TYPE BYTE; BAL R14,FLDFIND (1ST); ,FLDNEXT (SUBSQ)
*              RETURN +0 IF NOT FOUND; +4 IF FOUND
         SPACE 1
FLDFIND  SLR   R6,R6
         IC    R6,VCVPTR     GET OFFSET TO VARIABLE FIELD POINTERS
         LA    R6,VSAMRECD+5(R6)  POINT TO FIRST BYTE
         LA    R5,1(,R6)     POINT TO FIRST POINTER FIELD
         SLR   R4,R4
         ICM   R4,1,0(R6)    GET NUMBER OF FIELDS
         BZR   R14           NONE
         LR    R15,R4        COPY NUMBER OF FIELDS
         MH    R15,=Y(VFLEN)  TIMES FIELD LENGTH
         LA    R6,0(R5,R15)  FIRST FIELD
         ST    R6,@FIELDS    SAVE
         B     FLDTEST       CHECK REQUEST
FLDNEXT  L     R6,@FIELDS    RELOAD BASE ADDRESS
         LA    R5,VFLEN(,R5) SPACE TO NEXT POINTER
         BCT   R4,FLDTEST    SEE IF CORRECT POINTER
         BR    R14           ELSE RETURN NOT FOUND
         USING VFSECT,R5     DECLARE FIELD ENTRY
FLDTEST  CLM   R0,1,VFFLG    DESIRED ENTRY ?
         BNE   FLDNEXT       NO; TRY NEXT POINTER
         SLR   R15,R15
         ICM   R15,3,VFOFF   GET OFFSET TO FROM FIELD START
         AR    R6,R15        RETURN ADDRESS OF DATA
         B     4(,R14)       RETURN FOUND
@FIELDS  DC    A(0)
         SPACE 2
*        ERROR ROUTINES
*
LERAD    NOP   0             ZAP ENTRY                           85210
SYNAD    NOP   0             ZAP ENTRY                           85210
LERRLOC  MVC   PDEV(11),=C'PROC. ERROR'
         B     PDONE
         SPACE 1
NOTOPEN  MVC   PDEV(22),=C'UNABLE TO OPEN CATALOG'
         B     PDONE
         SPACE
SETEND   EX    0,BLKLINE     CLEAR SCREEN LINE
PCLOSE   MVC   PDES-1(20),=CL20'** END OF CATALOG **'
PDONE    PRTF  PLINE,L'PLINE,CC=NO
         SPACE 2
VSAMEOF  CLOSE (VSAMCAT)
         ENDM  RC=0
         SPACE 1
ABENDCAT ABEND 666,DUMP
HEXTRTAB DC    C'0123456789ABCDEF'
TRANSLAT EQU   HEXTRTAB-240
MVCMCVOL MVC   MCVOL(0),2(R9)  MOVE PARM VOLSER
CATCAM   CAMLST NAME,MCDSN,,VSAMRECD  LOCATE, BUT IGNORE VOL
         SPACE 2
EQITAB   EQU   *             TABLE OF DEVICE CODE/TYPE EQUIVALENCES
         DC    X'2008',C'2314'  DISK
         DC    X'2009',C'3330'   DISK
         DC    X'200D',C'333D'  3330-11                          *TSM*
         DC    X'200A',C'3340'
         DC    X'200B',C'3350'
         DC    X'200C',C'3375'                                   85209
         DC    X'200E',C'3380'                                   85209
         DC    X'200F',C'3390'                                   90303
         DC    X'2006',C'2305'
         DC    X'2007',C'2305'
         DC    X'2001',C'2311'     DISK
         DC    X'8001',C'2400'   TAPE
         DC    X'8003',C'3400'    TAPE
         DC    X'8080',C'3480'    CARTRIDGE TAPE                 90303
         DC    X'2002',C'2301'   PAR. DRUM
         DC    X'2003',C'2303'  SER. DRUM
         DC    X'2004',C'2302'  DISK
         DC    X'2005',C'2321'    DATA CELL
EQIEND   EQU   *
         EJECT ,
SYSPRINT PRTWORK SYSPRINT,SYSTERM,TITLE=3
HEADER   FDOPT NL,CC=C'#'    SET AUTO. DATE/PAGE
         FDPRT 'C A T L I S T  ***  CATALOG LISTING OF'
         FDTM  FLAGS,FGOS,BZ=HEADVS
         FDPRT 'CVOL',PAD
         FDGOTO HEADCM
HEADVS   FDPRT 'VSAM',PAD
HEADCM   FDPRT 'CATALOG ON'
         FDPRT MCVOL,PADL
         FDPRT *END
SUBHEAD  VCON  ' '
BLOCKHED FDPRT 'BLOCK NUMBER',NL,PADR
         FDPRT BLOCKNUM,I
         FDPRT *END
DUMP48   DC    A(X'43',VSAMRECD,48)  PRTSNAP REQUEST
DUMPIT   DC    A(X'43',VSAMRECD,512)  PRTSNAP REQUEST
DUMPLEN  EQU   *-2,2,C'H'    LENGTH FIELD
VSAMCAT  ACB   AM=VSAM,CATALOG=NO,DDNAME=SYSCTLGN,EXLST=EXLST,         *
               MACRF=(KEY,SEQ,CNV,DIR,IN)
VSAMRPL  RPL   ACB=VSAMCAT,AM=VSAM,AREA=VSAMRECD,                      *
               AREALEN=L'VSAMRECD,                                     *
               ECB=MCECB,MSGAREA=MCMSG,ARG=MCKEY,KEYLEN=44,            *
               MSGLEN=L'MCMSG,NXTRPL=0,OPTCD=(KEY,SEQ,SYN,NSP,KGE,MVE)
RBANUM   DC    F'0'          RBA TO BE READ
DIRRPL   RPL   ACB=VSAMCAT,AM=VSAM,ARG=RBANUM,ECB=MCECB,MSGAREA=MCMSG, *
               KEYLEN=4,AREA=VSAMRECD,AREALEN=L'VSAMRECD,MSGLEN=L'MCMSG*
               ,NXTRPL=0,OPTCD=(CNV,DIR,SYN,NUP,MVE)
EXLST    EXLST AM=VSAM,EODAD=VSAMEOF
MCMSG    DC    CL16' '       ?
BLANKS   DS    0CL44' '      1/2
MCKEY    DC    CL44' '       CATALOG SEARCH KEY
FLAG     DC    X'00'         PROCESSING OPTIONS
FGRVOL   EQU   X'80'           REFVOL OPTION
REFVOL   DC    XL6'0'
         SPACE 1
FLAGS    DC    X'00'         PROCESSING OPTIONS
FGOS     EQU   X'01'           PROCESSING OS CVOL CATALOG
MCECB    DC    F'0'          VSAM RPL ECB
         ORG   CATLIST+2048  FORCE ON 2K BOUNDARY
         DS    X             TO AVOID 0C4 ABEND IN
         ORG   ,             SVC 99
MCRBP    DC    0D'0',AL1(S99RBPND),AL3(MCRB) MASTER CATALOG RE-
*                                    QUEST BLOCK POINTER
MCRB     DC    0F'0',AL1(20)  REQUEST BLOCK LENGTH
         DC    AL1(S99VRBAL)  SPECIFY ALLOCATION
         DC    XL6'0'         FLAGS1, ERROR CODES, INFO CODES
         DC    A(MCTPP)       POINTER TO TEXT POINTER LIST
         DC    XL8'0'         RESERVED, FLAGS2
MCTPP    DC    A(MCT1)        MASTER CATALOG TEXT POINTER LIST
         DC    A(MCT2)
         DC    A(MCT3)
         DC    A(MCT4)
         DC    A(MCT5)
         DC    X'80',AL3(MCT6)
MCT1     DC    0F'0',AL2(DALDSNAM) SPECIFY DSNAME
         DC    H'1,44'        PARM COUNT AND LENGTH              90302
MCDSN    DC    CL44' '       VSAM CATALOG DSNAME
MCT2     DC    0F'0',AL2(DALSTATS) SPECIFY DISP=SHR
         DC    H'1,1'         PARM COUNT AND LENGTH
         DC    X'08'          SHR
MCT3     DC    0F'0',AL2(DALVLSER) SPECIFY VOLUME SERIAL NUMBER
         DC    H'1,6'         PARM COUNT AND LENGTH
MCVOL    DC    CL6' '         VOLUME SERIAL NUMBER
MCT4     DC    0F'0',AL2(DALUNIT) SPECIFY UNIT ADDRESS
         DC    H'1,3'         PARM COUNT AND LENGTH
MCUNIT   DC    CL3' '         UNIT ADDRESS
MCT5     DC    0F'0',AL2(DALCLOSE) SPECIFY UNALLOCATE AT CLOSE
         DC    H'0'           PARM COUNT
MCT6     DC    0F'0',AL2(DALRTDDN) SPECIFY RETURN DDNAME
         DC    H'1,8'         PARM COUNT AND LENGTH
MCDDN    DC    CL8' '         DDNAME RETURN FIELD
         DS    0D            ALIGN A BIT
VSAMRECD DS    XL512         VSAM CATALOG AREA
         ORG   VSAMRECD
VCLINK   DS    XL4           LINK FIELD
         ORG   VSAMRECD+44
VCTYPE   DS    X             A-DSN/CVOL X-INDEX
VCLEN    DS    XL2           LENGTH USED IN BLOCK
         DS    X
VCVPTR   DS    X             OFFSET TO VARIABLE FIELDS
VCDSN    DS    CL44          DSN/CATALOG NAME
VCOWN    DS    XL8           8X'FF' ?
VCDATE   DS    PL3           ENTRY DATE
VCEXPDT  DS    PL3           EXPIRATION DATE                     90303
VC#GDG   DS    X             GDG MAXIMUM                         90303
VCGDGOPT DS    X             GDG OPTION FLAGS                    90303
         DS    XL3           ?                                   90303
         SPACE 1
         SPACE 1
SAVE     DSECT ,             SAVE/WORK AREA
STOREG   DS    16F           REGISTER SAVE
DB       DS    D             WORK WORD
ZEROES   DC    F'0'
@SERVICE DS    A             SERVICE ROUTINE
@PRINTER DS    A             PRINT ROUTINE
BLOCKNUM DC    F'0'          NUMBER OF GET
RECURSE  DC    3F'0'         RECURSION CI#S
MASTVOL  DC    CL6' '
TRACKER  DS    XL256         COUNTER TABLE
         SPACE 1
         DC    H'0'          FAKE COUNT
FAKETYP  DS    XL4           FAKE DEVICE TYPE
FAKEVOL  DS    CL6           FAKE VOLUME SERIAL
FAKEFIL  DS    H             FAKE FILE NUMBER
         SPACE 1
TRUENAME DC    CL44' '       1/2
TRUECI   DC    XL3'0'        2/2
TRUELEN  EQU   *-TRUENAME
TRUETYPE DS    C             SAVED TYPE OF CURRENT ENTRY
         SPACE 2
PBLANK   DC    C' '          1/2
PLINE    DC    0CL80' '      OUTPUT LINE
PDSN     DS    CL44          DSNAME, INDEX, CVOL PTR
         ORG   PDSN+15
PDES     DS    CL8           DESCRIPTOR - DATA SET / CVOL / ALIAS
         DS    CL2           SPACER
PINX     DS    CL8           INDEX NAME OF LISTED ALIAS
         ORG
         DS    C             SPACER
PVOL     DS    CL6           CATLG VOL-SER
         DS    CL2           SPACER
PDEV     DS    XL8           HEX DEVICE TYPE
         DS    CL2' ('       SPACER
PTYP     DS    CL4           TYPE - 2311/2314/2400 ETC.
         DS    C')'          SPACER
PFILEDC  DS    C', FILE'     SPACER FOR 2400
PSEQ     DS    CL6           FILE SEQUENCE NUMBER
         ORG   PFILEDC+1
PDSCBDC  DS    C'DSCB='
PDSCB    DS    CL6           DSCB TTR
         SPACE 1
         ORG   PVOL                                              90303
PGDG     DS    C'GDG OPTIONS: '
PGOPT    DS    CL7'NONE   '                                      90303
         DS    C                                                 90303
PGCUR    DS    CL3
         DS    C' OF '                                           90303
PGMAX    DS    CL3
         DS    C' MAX'
         ORG   PLINE+L'PLINE
SAVEND   EQU   *
         SPACE 1
VFSECT   DSECT ,             FIELD POINTER DESCRIPTION
VF       DS    X             ?
VFOFF    DS    XL2           OFFSET TO FIELD FROM POINTER END
VFFLG    DS    X             FLAG FIELD
         DS    X             ?
VFLEN    EQU   *-VF          LENGTH OF POINTER ENTRY
         SPACE 1
VLSECT   DSECT ,             VOLUME ENTRY
VLLEN    DS    X'0012'       STANDARD VOLUME SECTION LENGTH
VLTYPE   DS    XL4           DEVICE TYPE
VLVOL    DS    CL6           VOLUME SERIAL
VLFILE   DS    XL2           TAPE FILE SEQUENCE
         DS    X'80'         ?
VLDSCB   DS    XL3           DSCB TTR
         IEFZB4D0
         IEFZB4D2
IGGCAXWA DSECT ,             HAND-EXPANSION OF PL/S MAPPING
CAXID    DS    F
CAXCHN   DS    A             FORWARD LINK
CAXFLGS  DS    X             ENTRY FLAGS
CAXMCT   EQU   X'04'           MASTER CATALOG
         DS    19X             CRUD
CAXUCB   DS    A             MASTER CATALOG UCB
         DS    20X             MORE CRUD
CAXCNAM  DS    CL44          CATALOG NAME (CATALOG.V......)
         SPACE 1
AMCBS    DS    5F            CRUDE
SPCAXCN  DS    F             MVS/SP CAX CHAIN POINTER
.NOVSBUF SPACE 2
         PRINT &PRTSYS
CVT      DSECT ,
         CVT   DSECT=YES
         SPACE 1
         IHACDE ,
         SPACE 1
         DCBD  DEVD=DA,DSORG=PS
         SPACE 1
UCB      DSECT ,
         IEFUCBOB ,
         SPACE 1                                                 90303
         IFGACB ,            EXPAND ACB MAPPING                  90303
         SPACE 1
         END   CATLIST
