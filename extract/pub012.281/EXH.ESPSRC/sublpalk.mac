SUBLPALK TITLE 'S U B L P A L K  ***  LOCATE LPA RESIDENT CODE'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
**                                                                   **
**  SUBLPALK  LOCATES A MODULE RESIDING IN AN LPA AREA               **
**                                                                   **
**  PARAMETER:  R1 POINTING TO A CL8 AREA CONTAINING THE DESIRED     **
**    MODULE NAME.                                                   **
**                                                                   **
**  WHEN USED WITH THE LOADLPA MACRO, R0 IS EITHER 0 OR A DCB        **
**    ADDRESS. WHEN THE DCB ADDRESS IS SUPPLIED, AND THE MODULE IS   **
**    NOT IN LPA, A LOAD WILL BE ISSUED.                             **
**                                                                   **
***********************************************************************
**                                                                   **
**  NORMAL RETURN:                                                   **
**    R0 : MODULE ENTRY POINT (WITH X'80' ON IF AM31)                **
**    R1 : LENGTH                                                    **
**    R15: 0 (MAIN MODULE)   4 (ALIAS)                               **
**   AR0 : MODULE LOAD POINT (IF AVAILABLE), ELSE SAME AS R0         **
**                                                                   **
**  ERROR RETURNS IN R15:                                            **
**                                                                   **
**  16 - ERROR PROCESSING PARAMETER LIST, OR OTHER SEVERE PROBLEM    **
**   8 - ERROR CSVQUERY OR LOAD                                      **
**                                                                   **
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
SUBLPALK PGMHEAD ZERO31,BASE=R12,PARM=R1,AM=ANY,RM=24,LOC=BELOW
         STM   R0,R1,CALLR0  SAVE CALLER'S PARMS
         SPACE 1
         OICC  16,RESULT=RETCODE  PROVISIONAL RETURN CODE
         LA    R5,0(,R1)     DID USER PASS A PARM AREA ?
         LTR   R5,R5
         BZ    PGMEXIT       NO; FATAL BOO-BOO
         SPACE 1
         L     R3,CVTPTR     GET CVT IN R3 FOR IEAVVMSR
         USING CVTMAP,R3
         SPACE 1
         AIF   (NOT &MVSESA).NOCSVQ                             GP04234
         CSVQUERY INEPNAME=(R5),OUTLENGTH=@LENGTH,OUTEPA=@ENTRY,       *
               OUTLOADPT=@LOAD,OUTATTR1=DB,OUTATTR2=DB+1,OUTATTR3=DB+2,*
               RETCODE=RETCODE,MF=(E,MYQUERY)
         CH    R15,=H'8'     SUCCESSFUL ?
         BNL   TESTOLD       NO
         TM    DB,X'02'      ALIAS ENTRY ?
         BZ    NOTALIAS      NO
         MVICC 4             SET WARNING FLAG
NOTALIAS TM    DB+1,X'30'    ATTR2 AM31 OR AMANY ?
         BZ    LOADTWO       NO; RETURN                         GP03330
         OI    @ENTRY,X'80'  SET FOR AM31 PREFERRED
*---------------------------------------------------------------------*
*  NOTE THAT CSVQUERY (AS ISSUED) WILL FIND A MODULE IN LPA, ETC. AS  *
*  WELL AS IN JPA.                                                    *
*  WHEN THE USER PASSES A NON-ZERO DCB PARAMETER AND THE MODULE IS IN *
*  JPA, WE MUST ISSUE A LOAD FOR IT BECAUSE CALLER WILL EVENTUALLY    *
*  ISSUE A DELETE FOR IT.                                             *
*---------------------------------------------------------------------*
LOADTWO  TM    DB+2,X'40'    FOUND IN JPA ?                     GP03330
         BZ    SETLOAD       NO; RETURN LPA, ETC. ADDRESS       GP03330
         ICM   R4,15,CALLR0  DID USER SUPPLY A DCB PARAMETER ?  GP03330
         BZ    SETLOAD       NO; JUST RETURN                    GP03330
         B     TESTLOAD      YES; DO EXTRA LOAD                 GP03330
         SPACE 1
TESTOLD  CH    R15,=H'20'    UNAVAILABLE ON THIS SYSTEM ?
         BNE   TESTLOAD      NO; SEE WHETHER USER WANTS LOAD
.NOCSVQ  SPACE 1                                                GP04234
*---------------------------------------------------------------------*
*   SCAN THE MLPA FOR THE REQUESTED MODULE                            *
*---------------------------------------------------------------------*
         PUSH  USING
MLPALOOK ICM   R0,15,0(R5)
         ICM   R1,15,4(R5)
         L     R15,CVTQLPAQ  GET MLPA CDE CHAIN
         USING CDENTRY,R15
MLPALOOP ICM   R15,15,CDCHAIN   GET NEXT CDE; ELSE TRY PLPA
         BZ    PLPALOOK
         C     R1,CDNAME+4   MATCH ?
         BNE   MLPALOOP      NO; TRY NEXT
         C     R0,CDNAME     FULL MATCH ?
         BNE   MLPALOOP      NO; TRY NEXT
         B     FOUNDLP2      JOIN COMMON
         POP   USING
         SPACE 1
*---------------------------------------------------------------------*
*   SCAN THE PLPA FOR THE REQUESTED MODULE                            *
*---------------------------------------------------------------------*
         PUSH  USING
PLPALOOK L     R7,CVTLPDSR   IEAVVMSR
         ICM   R0,15,0(R5)
         ICM   R1,15,4(R5)
         BASR  R14,R7    NOTE THAT R7-R9 ARE CLOBBERED
           B   FOUNDLPA      MODULE FOUND
         XC    @ENTRY(8),@ENTRY    SHOW NOT FOUND
         MVICC 8,RESULT=RETCODE  SET LEVEL 8 ERROR
         B     TESTLOAD
         SPACE 1
*---------------------------------------------------------------------*
*   HAVE A CDE OR LPDE - EXTRACT LOAD ADDRESS AND SIZE                *
*---------------------------------------------------------------------*
         USING CDENTRY,R15
FOUNDLPA LR    R15,R0        COPY CDE ADDRESS
FOUNDLP2 MVICC 0             RESET THE RETURN CODE              GP04234
         ICM   R0,15,CDENTPT  LOAD ENTRY ADDRESS
         ST    R0,@ENTRY     RETURN ENTRY ADDRESS
         ST    R0,@LOAD      SET AS LOAD ADDRESS, ALSO
         AIF   (NOT &MVSESA).NOAMF                              GP04234
         TM    CDATTR2,CDEANYM  AM ANY ?
         BZ    LOOKMIN       NO
         OI    @ENTRY,X'80'  SET AM31 PREFERRED
.NOAMF   ANOP  ,                                                GP04234
LOOKMIN  TM    CDATTR,CDMIN  MINOR ?
         BZ    GETXTLST      NO; GET EXTENT LIST
         OICC  4             INDICATE ALIAS ENTRY
         TM    CDATTR2,CDXLE  EXTENT LIST PRESENT ?             GP05303
         BNZ   GETXTLST      YES; DON'T NEED MAJOR              GP05303
         ICM   R15,15,CDXLMJP  GET POINTER TO MAJOR
         BNZ   LOOKMIN
         B     SETLOAD       RESTORE REGS
GETXTLST L     R14,CDXLMJP   GET EXTENT LIST ADDRESS
         USING XTLST,R14
         MVC   @LOAD,XTLMSBAD LOAD ADDRESS
         MVC   @LENGTH,XTLMSBLA  LENGTH
         NI    @LENGTH,255-X'80'  RESET END OF LIST BIT
         B     SETLOAD       JOIN COMMON
         POP   USING         RESTORE ASSIGNMENTS
         SPACE 1
*---------------------------------------------------------------------*
*   USER WANTS A LOAD ISSUED WHEN DCB IS NON-ZERO.                    *
*     WHEN DCB (R0)<256, THEN USE DCB=0 ON LOAD                       *
*---------------------------------------------------------------------*
TESTLOAD ICM   R4,15,CALLR0  DID USER SUPPLY A DCB PARAMETER ?
         BZ    SETLOAD       NO; JUST RETURN ERROR CODE
         CH    R4,=H'256'    VALID DCB ?
         BNL   *+4+2         PERHAPS
         SR    R4,R4         ELSE FLAG TO REQUEST LOAD
         LOAD  DCB=(R4),EPLOC=(R5),ERRET=SETLOAD
         STM   R0,R1,@ENTRY   RETURN ENTRY / LENGTH
         XC    RETCODE,RETCODE    CLEAR RETURN
         ICM   R14,15,@LOAD  IS LOAD ADDRESS SET ?              GP03330
         BNZ   SETLOAD       YES; RETURN IT                     GP03330
         LR    R14,R0        COPY ENTRY ADDRESS                 GP03330
         LA    R14,0(,R14)   CLEAN AM BIT                       GP03330
         ST    R14,@LOAD     SET TO RETURN ENTRY AS LOAD        GP03330
         SPACE 1
*---------------------------------------------------------------------*
*   RETURN LOAD ADDRESS IN AR0                                        *
*---------------------------------------------------------------------*
SETLOAD  DS    0H                                               GP04234
         AIF   (NOT &MVSESA).NOLAM                              GP04234
         LAM   R0,R0,@LOAD   GET LOAD POINT
.NOLAM   SPACE 1                                                GP04234
*---------------------------------------------------------------------*
*   EXIT: WHEN R15=0, ENTRY ADD IN R0, LENGTH IN R1, LOAD ADDR IN AR0 *
*     R15=8 MODULE NOT FOUND; R15=16 INVALID NAME ADDRESS             *
*---------------------------------------------------------------------*
PGMEXIT  PGMEXIT COPYRET=(RETCODE,12)   RETURN R15, R0, R1
         SPACE 1
         LTORG ,
         SPACE 2
SAVE     DSECT ,             SAVE & WORK AREA
DB       DS    D
CALLR0   DS    A     1/2
CALLR1   DS    A     2/2
         SERVDEFS ,          EXPAND COMMON STUFF
         ORG   RETCODE+4     RETURN CODE
@ENTRY   DS    A     2/3     RETURN ENTRY POINT ADDRESS
@LENGTH  DS    F     3/3     RETURN LENGTH
@LOAD    DS    A             RETURN LOAD POINT ADDRESS
         SPACE 1
         AIF   (NOT &MVSESA).SKPCVSQ                            GP04234
         CSVQUERY MF=(L,MYQUERY)
.SKPCVSQ SPACE 1                                                GP04234
SAVEEND  EQU   *             END OF DYNAMIC AREA
         SPACE 2
         PRINT &PRTSYS
         CVT   DSECT=YES
         IHACDE ,
         IHAXTLST ,
         END   ,
