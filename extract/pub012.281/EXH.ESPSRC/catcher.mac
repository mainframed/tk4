CATCH    TITLE 'C A T C H E R  ***  (E)STAE WRAPPER FOR PROGRAMS'
         PUNCH ' ORDER CATCHER(P) '    EASIER DUMPS
         PUNCH '  ALIAS CATCHCP   '    TSO CMD PROC ENTRY
         COPY  ASMOPTS
         SPACE 1
         ASMPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*        COPYRIGHT 2014  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*   Some programs run with neither (E)SPIE nor (E)STAE recovery.      *
*   This program provides a wrapper to catch these errors and provide *
*   (shorter) diagnostic information on a SYSDEBUG DD card.           *
*                                                                     *
*        //STEP  EXEC  PGM=CATCHER,PARM='PGMNAME/PGM-PARAMETERS'      *
*        // ... PGM JCL                                               *
*                                                                     *
*   The user return code or abend code are passed to the caller.      *
*                                                                     *
***********************************************************************
*                                                                     *
*                                                                     *
*   The input parm looks like:                                        *
*               H'length'      C'progname/prog parameters' (Batch)    *
*                                                                     *
*        H'length' H'offset'   C'progname/prog parameters  (TSO)      *
*    or  H'length' H'offset'   C'progname prog parameters  (TSO)      *
*                                                                     *
*   In batch the program name is removed, and in TSO the / is blanked *
*   out. Lengths are adjusted as needed.                              *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT &PRTSOR
CATCHER  PGMHEAD ZERO12,BASE=R12,PARM=R11,            ADDED ON GP14229 *
               ENTRY=CATCHCP,ENTNO=PROFLAGS      CP ENTRY
         BANDAID INIT        DEBUG ASSISTANCE
         EXTRACT DB,FIELDS=(TSO),MF=(E,PATEXT)  RUNNING UNDER TSO?
         L     R3,DB              LOAD TSO FLAG POINTER
         TM    0(R3),X'80'        FOREGROUND TSO ?
         BZ    *+8                  NO
         OI    PROFLAGS,FGTSO     YES; USE TPUT FOR MESSAGES
         SPACE 1
         MVCH  NEWTEXT       BLANK TEXT FIELD
         MVCH  EPLOC,NEWTEXT   AND PROGRAM NAME
         LA    R1,NEWLEN     SET DEFAULT PARM POINTER
         ST    R1,@PARMPTR
         MVC   ATTLIST(ATTPATL),ATTPAT  MOVE ATTACH PATTERN
         SPACE 1
         LA    R4,4          MAX FIELDS TO COPY
         LA    R3,4-1        EXEC LENGTH FOR COPY
         LA    R14,0(,R11)   POINT TO PARM FIELDS
COUNTLUP TM    0(R14),X'80'  LAST ENTRY ?
         BNZ   COUNTEND        YES
         LA    R14,0(,R14)
         LA    R3,4(,R3)     BUMP LENGTH
         BCT   R3,COUNTLUP   DO MAX
COUNTEND EX    R3,EXMVCPRF   MOVE PARM FIELDS
         ICM   R0,15,@PARMPTR+3*4  HAVE FOUR FIELDS ?
         BNM   NOTCMD          NO; RESET COMMAND FLAG
         EXTRACT DB,FIELDS=(PSB),MF=(E,PATEXT)  VERIFY PSCB ADDRESS
         CLC   @PARMPTR+2*4+1(3),DB+1  MATCH?
         BNE   NOTCMD
         OI    PROFLAGS,FGCMD     SET COMMAND MODE
         B     GETPARM
NOTCMD   ZI    PROFLAGS,FGCMD     RESET COMMAND MODE
         SPACE 1
GETPARM  PARMLOAD R8,PTR=R11      GET PARM ADDRESS AND LENGTH
         TM    PROFLAGS,FGCMD     COMMAND PROCESSOR?
         BNZ   TSOPARM              YES; DO DIFFERENTLY
BATPARM  LTR   R5,R9         VALID ?
         BZ    NOPARM
         LR    R4,R8         SAVE ADDRESS/LEN IN R4-R5
         MIN   R9,=A(L'NEWTEXT)
         BCTR  R9,0          DECREASE FOR EXECUTE
         LA    R1,1(R8,R9)   SET END OF PARM (IF NO HIT)
         SLR   R2,R2         SET NO SKIP
         EX    R9,EXTRTPRF   LOOK FOR SPECIAL BYTE
         SR    R1,R8         GET LENGTH+2
         SH    R1,=H'1'      ALLOW FOR LENGTH OF PARM LENGTH, AND EX
         BM    BADPARM       INVALID PARM
         LA    R0,L'EPLOC-1  SET MAXIMUM PROGRAM NAME LENGTH, LESS 1
         CR    R1,R0         LONGER ?
         BNH   NOTRUNC       NO
         SLR   R2,R2         DON'T SKIP SEPARATOR
         LR    R1,R0         USE ONLY MAX
NOTRUNC  EX    R1,EXMVCPGM
         SR    R9,R1         SET NEW PARM LENGTH
         LA    R1,1(R1,R8)   NEW PARM START
         BCT   R2,NOSEPAR    SKIP SEPARATOR ?
         LA    R1,1(,R1)     SET PAST SEPARATOR
         BCTR  R9,0          DECREMENT LENGTH FOR SEPARATOR
NOSEPAR  LTR   R9,R9         NEW PARM LENGTH
         BNP   NULLPARM      SKIP IF RESIDUAL IS NULL STRING
         STH   R9,NEWLEN     STASH NEW LENGTH
         BCTR  R9,0
         EX    R9,EXMVP      MOVE TO MY PARM AREA
NULLPARM B     PGMTEST
         SPACE 1
TSOPARM  LTR   R5,R9         VALID ?
         BZ    BADPARM         NO; IMPOSSIBLE???
         LR    R4,R8         SAVE ADDRESS/LEN IN R4-R5
         MIN   R9,=A(L'NEWTEXT)
         BCTR  R9,0          DECREASE FOR EXECUTE
         EX    R9,EXMVCPRF   MOVE TO NEW PARM FIELD
         LA    R8,NEWTEXT    POSITION TO ALTERABLE FIELD
         LA    R1,1(R8,R9)   SET END OF PARM (IF NO HIT)
         SLR   R2,R2         SET NO SKIP
         EX    R9,EXTRTPRF   LOOK FOR SPECIAL BYTE
         BZ    BADPARM         SHOULD NEVER GET HERE?
         MVI   0(R1),C' '    BLANK SEPARATOR BYTE
         SR    R1,R8         GET LENGTH
         SH    R1,=H'1'      ALLOW FOR LENGTH OF PARM LENGTH, AND EX
         BM    BADPARM         INVALID PARM
         LA    R0,L'EPLOC-1  SET MAXIMUM PROGRAM NAME LENGTH, LESS 1
         CR    R1,R0         LONGER ?
         BNH   TRUNCATE      NO
         LR    R1,R0         USE ONLY MAX
TRUNCATE EX    R1,EXMVCPGM
         LA    R1,2(,R1)     SET 'PARSED' LENGTH
         STH   R1,NEWLEN
         LA    R1,4(,R5)     TOTAL LENGTH
         STH   R1,TSOLEN
         LA    R1,TSOLEN     SET DEFAULT PARM POINTER
         ST    R1,@PARMPTR
         B     PGMTEST
         SPACE 1
EXTRTPRF TRT   2(0,R8),TRANTAB    LOOK FOR NON-ALPHAMERICS
EXMVCPGM MVC   EPLOC(0),0(R8)     MOVE PROGRAM NAME
EXMVP    MVC   NEWTEXT(0),0(R1)   MOVE RESIDUAL PARM
EXMVCPRF MVC   NEWTEXT(0),0(R8)   MOVE ENTIRE PARM (& EDIT)
         SPACE 1
NOPARM   LTCB  R2,USE=YES    GET THE TCB
         L     R2,TCBTIO     GET THE TIOT
         MVC   EPLOC,8(R2)   MOVE THE STEPNAME
PGMTEST  CLI   EPLOC,C'0'    NUMERIC START ?
         BNL   BADPARM       NO; ERROR
         CLI   EPLOC,C' '    ANY STEPNAME ?
         BH    AROUND        YES; USE IT
BADPARM  TM    PROFLAGS,FGTSO     TSO?
         BZ    BADPARMB             NO
BADPARMT LH    R4,BADWTO     GET LENGTH
         SH    R4,=H'4'      TEXT LENGTH
         TPUT  BADWTO+4,(R4)
         B     BADABEND
         SPACE 1
BADPARMB WTO   MF=(E,BADWTO)
BADABEND ABEND 0             QUIT THE HARD WAY
BADWTO   WTO   'INVALID PROGRAM NAME (PARM OR STEPNAME)',MF=L
         SPACE 1
AROUND   LA    R1,@PARMPTR
         LA    R2,EPLOC
         LA    R3,ATTECB
         ATTACH EPLOC=(R2),ECB=(R3),SF=(E,ATTLIST)
         ST    R1,ATTTCB     SAVE TCB ADDRESS
         WAIT  ECB=ATTECB    WAIT FOR COMPLETION
         DETACH ATTTCB       DETACH SUBTASK
         BANDAID TERM        CANCEL DEBUG ASSISTANCE
         ICM   R1,7,ATTECB+1  EXECUTION SUCCESSFUL ?
         BZ    EXIT0         YES
         L     R1,ATTECB     PROPAGATE FLAGS, TOO
         SLR   R0,R0         CLEAR MFT MESSAGE PTR
         SVC   13            GREETINGS
         SPACE 1
EXIT0    PGMEXIT RC=0        RETURN WITHOUT ERROR
         SPACE 1
         DS    0F            FORCE ALIGNMENT
ATTPAT   ATTACH EPLOC=1,ECB=2,SF=L
ATTPATL  EQU   *-ATTPAT      LENGTH OF PATTERN
         SPACE 1
TRANTAB  TRENT FILL=2        TERMINATING CHARACTERS
*
*   NON-TERMINATING CHARACTERS (PART OF PROGRAM NAME)
*
         TRENT ,0,C'$',C'#',C'@',  NATIONAL CHARACTERS
         TRENT ,0,(C'A',9),(C'J',9),(C'S',8),(C'0',10),
*
*   EXPECTED SEPARATOR CHARACTERS
*
         TRENT ,1,C' ',C'/',C'.',C',',C';',C':',C'=',C'-'
         SPACE 1
SAVE     DSECT ,             SAVE/WORK AREA
DB       DS    D
@SPIEDER DS    A             DEBUG POINTER
PATEXT   EXTRACT DB,FIELDS=(TSO),MF=L
ATTECB   DS    F             ATTACH COMPLETION ECB
ATTTCB   DS    F
EPLOC    DS    CL8           ATTACHED PROGRAM NAME
ATTLIST  ATTACH EPLOC=1,SF=L   ATTACH LIST
@PARMPTR DS    4A            POINTER TO PARM (4 WORDS IF CMD PROC)
TSOLEN   DS    H
NEWLEN   DS    H
NEWTEXT  DS    CL100         SYSTEM LENGTH
         SPACE 1
PROFLAGS DS    X             PROCESSING FLAG
FGCMD    EQU   X'01'           RUNNING AS A TSO COMMAND PROCESSOR
FGTSO    EQU   X'80'           RUNNING UNDER TSO
SAVEEND  EQU   *
         SPACE 2
         PRINT &PRTSYS
CVTDSECT DSECT ,
         CVT   DSECT=YES
         IHAPSA ,
         IHACDE ,
         IKJTCB ,
         END   ,
