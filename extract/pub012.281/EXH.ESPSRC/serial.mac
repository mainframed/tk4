SERIAL   TITLE 'S E R I A L  ***  SERIALIZATION ROUTINE'
***********************************************************************
**                                                                   **
**   SERIALIZE LANGUAGE DEPENDENT SOURCE DECK                        **
**     WRITTEN BY DICK OXLEY AT N.I.S.                               **
**     UPDATED BY G. POSTPISCHIL FOR MACROS AND SERVICES.            **
**                                                                   **
***********************************************************************
**                                                                   **
**   Input DD: INPUT or SYSUT1 (single JES file or concatenated DDs) **
**   Print DD: PRINT or SYSUT2                                       **
**   Punch DD: PUNCH or SYSUT3                                       **
**                                                                   **
**   Input convention:                                               **
**   Control card (begins with $$$ or $IB)                           **
**     source deck to be serialized                                  **
**   Next control card (or end-file)                                 **
**     source deck                                                   **
**   etc.                                                            **
**                                                                   **
**   Control card format:                                            **
**   Col. 1/3  $$$ OR $IB (7094 $IBSYS deck)                         **
**        4/6  Language (ASM,COB,FTC,PLI,REX,RPG)                    **
**      10/17  Program name (used in print header, CoBOL, and RPG)   **
**      20/23  Sequencing increment (default 100 for CoBOL, else 10) **
**      30/37  Starting sequence (=increment if blank)               **
**      40/71  Print subtitle                                        **
**   Numbers are left-adjusted                                       **
**-------------------------------------------------------------------**
**   Maintenance:                                                    **
**  2912-06-15  GYP  Cleaned up; redefined columns; used modern      **
**                   macros and service routines.                    **
**                                                                   **
***********************************************************************
         COPY  OPTIONGB                                         GP12167
         SPACE 1                                                GP12167
         SYSPARM LIST=YES                                       GP12167
         SPACE 1                                                GP12167
         PUNCH ' ORDER SERIAL(P)'  MAKE DEBUGGING EASIER        GP12167
         PRINT &PRTSOR                                          GP12167
SERIAL   PGMHEAD ZERO12,BASE=(R12),PARM=R9                      GP12167
         ZAP   COUNTER,=P'100'  SET ASM DEFAULT                 GP12167
         ZAP   INCR,=P'100'  DEFAULT FOR ASM                    GP12167
         ZAP   PGMCOUNT,=P'0'     INIT                          GP12167
         ZAP   TOTCOUNT,=P'0'     INIT                          GP12167
         MVI   CONCARD,C' '                                     GP12167
         MVC   CONCARD+1(L'CONCARD-1),CONCARD  CLEAR CONTROL    GP12167
         LA    R10,PROCASM   DITTO FOR PROCESSOR                GP12167
         SERVINIT ,          INITIALIZE THE SERVICE ROUTINE     GP12167
         SERVLOAD @PRINTER,@INPREAD   LOAD OTHER SERVICES       GP12167
         PRTOPEN PUNCH,OPT=(NOWTO),DEV=2  LOOK FOR PUNCH OUTPUT GP12167
         LR    R5,R15        SAVE RETURN                        GP12167
         PRTOPEN PRINT,OPT=(NOWTO) DEV=1  LOOK FOR PRINT FILE   GP12167
         CH    R15,=H'4'     HAVE PRINTER ?                     GP12167
         BNH   PROCESS         YES; PROCEED                     GP12167
         CH    R5,=H'4'      HAVE PUNCH ?                       GP12167
         BNH   PROCESS         YES; PROCEED                     GP12167
         WTO   'SERIAL: Neither PRINT nor PUNCH DD supplied'    GP12167
         ABEND 1403          QUIT UNGRACEFULLY                  GP12167
         SPACE 2
PROCESS  INPOPEN INPUT,OPT=(ABEND)   OPEN INPUT FILE            GP12167
         PRTF  HEADER1,TITLE=1    PRINT MAIN TITLE              GP12167
         SPACE 1
*---------------------------------------------------------------------*
*   PROCESS ALL INPUT                                                 *
*     CHECK FOR START OF NEW DECK WITH $$$ OR $IB                     *
*---------------------------------------------------------------------*
PROCLOOP INPGET CARD         READ A CARD                        GP12167
         CLC   =C'$$$',CARD  NEW CONTROL CARD ?                 GP12167
         BE    NEWCON          YES                              GP12167
         CLC   =C'$IB',CARD  NEW CONTROL CARD ?                 GP12167
         BNE   PROCSEQ         NO; JUST INCREMENT               GP12167
         SPACE 1
*---------------------------------------------------------------------*
*   CONTROL CARD - GET INCREMENT AND START NUMBER, USE LANGUAGE       *
*     SPECIFIC DEFAULTS. VERIFY LANGUAGE.                             *
*---------------------------------------------------------------------*
NEWCON   CP    PGMCOUNT,=P'0'     FIRST TIME OR NULL DECK?      GP12167
         BE    PROCNEW         YES; START NEW DECK              GP12167
         PRTLIST ENDER2           PRINT TRAILING INFO           GP12167
         AP    TOTCOUNT,PGMCOUNT  ACCUMULATE CARD TOTALS        GP12167
         SPACE 1
PROCNEW  ZAP   PGMCOUNT,=P'0'                                   GP12167
         MVC   CONCARD,CARD       SAVE CONTROL CARD IMAGE       GP12167
         PRTLIST HEADER2,TITLE=2  FORCE NEW PAGE                GP12167
         LM    R15,R1,LANTABP     GET BXLE VALUES               GP12167
         ICM   R14,7,PGMTYPE      LOAD CONTROL CARD LANGUAGE    GP12167
LANLOOP  CLM   R14,7,0(R15)       FOUND LANGUAGE ?              GP12167
         BE    LANFOUND             YES                         GP12167
         BXLE  R15,R0,LANLOOP     TRY AGAIN                     GP12167
         SPACE 1
MSGBDLAN PRTL  '0INVALID LANGUAGE CODE IN CONTROL CARD'         GP12167
MSGBDCOM PRTF  CONCARD,CC=NO                                    GP12167
         MVICC 16                                               GP12167
         B     PGMEXIT                                          GP12167
MSGBDINC PRTL  '0INVALID VALUE FOR INCREMENT'                   GP12167
         B     MSGBDCOM                                         GP12167
MSGBDINT PRTL  '0INVALID VALUE FOR START VALUE'                 GP12167
         B     MSGBDCOM                                         GP12167
         SPACE 1
LANFOUND SR    R1,R1                                            GP12167
         IC    R1,3(,R15)    GET LANGUAGE INDEX                 GP12167
         LA    R10,=A(PROCASM,PROCCOB,PROCRPG)   PROCESSORS     GP12167
         L     R10,0(R1,R10) LOAD PROCESSOR ADDRESS             GP12167
         ZAP   INCR,=P'100'  SET FOR DEFAULT INCREMENT          GP12167
         CLM   R1,1,LANTAB+3   DOING COBOL OR RPG ?             GP12167
         BL    *+4+6             NO                             GP12167
         ZAP   INCR,=P'10'       YES; USE SMALLER INCREMENT     GP12167
         LA    R1,CONINCR+L'CONINCR    SET DEFAULT STOPPER      GP12167
         SR    R2,R2                                            GP12167
         TRT   CONINCR(L'CONINCR+1),TRTDIGIT  NUMERIC INCREMENT GP12167
         CH    R2,=H'4'      VALID STOP ?                       GP12167
         BNE   MSGBDINC        NO                               GP12167
         LA    R15,CONINCR   SCAN START                         GP12167
         SR    R1,R15        TEXT LENGTH                        GP12167
         BNP   DEFINCR         NONE                             GP12167
         BCTR  R1,0          SET FOR EXECUTE                    GP12167
         LA    R14,CONINCR(R1) LAST DIGIT                       GP12167
         OI    0(R14),C'0'   ENSURE GOOD SIGN                   GP12167
         EX    R1,EXPAKINC   SET INCREMENT                      GP12167
         CP    INCR,=P'0'    VALID ?                            GP12167
         BNP   MSGBDINC        NO; FAIL                         GP12167
DEFINCR  ZAP   COUNTER,INCR  SET DEFAULT START VALUE = INCR     GP12167
         LA    R1,CONINIT+L'CONINIT    SET DEFAULT STOPPER      GP12167
         SR    R2,R2                                            GP12167
         TRT   CONINIT(L'CONINIT+1),TRTDIGIT  NUMERIC INCREMENT GP12167
         CH    R2,=H'4'      VALID STOP ?                       GP12167
         BNE   MSGBDINC        NO                               GP12167
         LA    R15,CONINIT   SCAN START                         GP12167
         SR    R1,R15        TEXT LENGTH                        GP12167
         BNP   DEFINIT         NONE                             GP12167
         BCTR  R1,0          SET FOR EXECUTE                    GP12167
         LA    R14,CONINIT(R1) LAST DIGIT                       GP12167
         OI    0(R14),C'0'   ENSURE GOOD SIGN                   GP12167
         EX    R1,EXPAKINT   SET INCREMENT                      GP12167
         CP    COUNTER,=P'0' VALID ?                            GP12167
         BNP   MSGBDINT        NO; FAIL                         GP12167
DEFINIT  DS    0H                                               GP12167
         B     PROCLOOP                                         GP12167
EXPAKINC PACK  INCR,CONINCR(*-*)                                GP12167
EXPAKINT PACK  COUNTER,CONINCR(*-*)                             GP12167
         SPACE 1
LANTABP  PARKEYBX LANTAB                                        GP12167
LANTAB   DC    C'CBL',AL1(4) COBOL DAFFINITION                  GP12167
LANTAB2  DC    C'COB',AL1(4) COBOL                              GP12167
         DC    C'ASM',AL1(0) ASSEMBLER                          GP12167
         DC    C'BAL',AL1(0) ASSEMBLER (HOW BASIC?)             GP12167
         DC    C'FRT',AL1(0) FORTRAN                            GP12167
         DC    C'FTC',AL1(0) FORTRAN                            GP12167
         DC    C'PLI',AL1(0) PL/I                               GP12167
         DC    C'PL1',AL1(0) PL/I                               GP12167
         DC    C'REX',AL1(0) REXX                               GP12167
LANTABN  DC    C'RPG',AL1(8) RPG                                GP12167
         SPACE 2
*---------------------------------------------------------------------*
*   SOURCE CARD - UPDATE SEQUENCE NUMBER AND PROGRAM NAME             *
*---------------------------------------------------------------------*
PROCSEQ  UNPK  FULLSEQ,COUNTER    UNPACK                        GP12167
         OI    FULLSEQ+L'FULLSEQ-1,C'0'     MAKE PRINTABLE      GP12167
         BR    R10           GO TO LANGUAGE SPECIFIC CODE       GP12167
         SPACE 2
PROCASM  MVC   ASMSEQ,FULLSEQ                                   GP12167
         B     COMMON
         SPACE 2
PROCCOB  MVC   COBSEQ,FULLSEQ+2                                 GP12167
         CLI   PGMNAME,C' '  INSERT NAME ?                      GP12167
         BNH   COMMON          NO                               GP12167
         MVC   COBPGM,PGMNAME     IDENTIFY DECK                 GP12167
         B     COMMON
         SPACE 2
PROCRPG  MVC   RPGSEQ,FULLSEQ+3                                 GP12167
         CLI   PGMNAME,C' '  INSERT NAME ?                      GP12167
         BNH   COMMON          NO                               GP12167
         MVC   RPGPGM,PGMNAME+2   IDENTIFY DECK                 GP12167
*NEXT*   B     COMMON
         SPACE 2
COMMON   PRTF  CARD,CC=NO,DEV=2   PUNCH OUTPUT                  GP12167
         PRTLIST PRINTFD     PRINT                              GP12167
         AP    COUNTER,INCR  INCREMENT SEQUENCE NUMBER          GP12167
         AP    PGMCOUNT,=P'1'     UP CARD COUNT                 GP12167
         B     PROCLOOP                                         GP12167
         SPACE 2
*---------------------------------------------------------------------*
*   END OF INPUT - WRITE FINAL COUNTS                                 *
*---------------------------------------------------------------------*
EODAD    CP    PGMCOUNT,=P'0'     FIRST TIME OR NULL DECK?      GP12167
         BE    ENDLOOP         YES; SKIP STATS                  GP12167
         PRTLIST ENDER2           PRINT TRAILING INFO           GP12167
         AP    TOTCOUNT,PGMCOUNT  ACCUMULATE CARD TOTALS        GP12167
         SPACE 1
ENDLOOP  PRTLIST ENDER3      PRINT RUN TOTALS                   GP12167
         SPACE 1
PGMEXIT  SERVTERM ,                                             GP12167
         PGMEXIT RC=RETCODE                                     GP12167
         SPACE 1
HEADER1  DC    C'#                SERIALIZATION UTILITY'        GP12167
HEADER2  FDPRT ' Processing',NL                                 GP12167
         FDPRT PGMNAME,PAD                                      GP12167
         FDPRT 'type'                                           GP12167
         FDPRT PGMTYPE,PAD                                      GP12167
         FDPRT ' ',LEN=10                                       GP12167
         FDPRT PGMTITLE                                         GP12167
         FD    *END                                             GP12167
ENDER2   FDOPT NL,CC=C'0'    DOUBLE SPACE                       GP12167
         FDPRT PGMCOUNT,D,RADJ,LEN=16                           GP12167
         FDPRT 'records processed',PADL                         GP12167
         FDPRT *END                                             GP12167
ENDER3   FDOPT NL,CC=C'0'    DOUBLE SPACE                       GP12167
         FDPRT TOTCOUNT,D,RADJ,LEN=16                           GP12167
         FDPRT 'total records processed in run',PADL            GP12167
         FDPRT *END                                             GP12167
         SPACE 1
PRINTFD  FDPRT ' ',NL,LEN=20                                    GP12167
         FDPRT CARD                                             GP12167
         FDPRT *END                                             GP12167
         SPACE 2
INPUT    INPWORK INCARD,SYSUT1,EDIT=128,EODAD=EODAD,WIDTH=80    GP12167
PUNCH    PUNWORK PUNCH,SYSPUNCH                                 GP12167
PRINT    PRTWORK PRINT,SYSPRINT,TITLE=3                         GP12167
         SPACE 1
TRTDIGIT DC    256AL1(8)     FAIL EVERYTHING                    GP12167
         TRENT TRTDIGIT,0,(C'0',10),   PASS DIGITS              GP12167
         TRENT ,4,C' '       STOP ON BLANK                      GP12167
         SPACE 2
SAVE     DSECT ,                                                GP12167
DB       DS    2D                                               GP12167
         SERVDEFS ,
         SPACE 1
CONCARD  DC    CL80' '      1/7                                 GP12167
CONCON   EQU   CONCARD+00,03,C'C' CONTROL CARD ID $$$ OR $IB    GP12167
PGMTYPE  EQU   CONCARD+03,03,C'C'   SOURCE LANGUAGE             GP12167
PGMNAME  EQU   CONCARD+09,08,C'C'   PROGRAM NAME                GP12167
CONINCR  EQU   CONCARD+19,04,C'C'   INCREMENT                   GP12167
CONINIT  EQU   CONCARD+29,08,C'C'   START SEQUENCE              GP12167
PGMTITLE EQU   CONCARD+39,31,C'C'   DECK TITLE                  GP12167
         SPACE 1
FULLSEQ  DS    CL8           CURRENT SEQUENCE IN PRINTABLE FORM GP12167
COUNTER  DC    PL5'0'        CURRENT SEQUENCE PACKED            GP12167
INCR     DS    PL5'0'        INCREMENT                          GP12167
CARD     DC    CL80' '       1/2                                GP12167
CARDTXT  EQU   CARD,72,C'C'  2/2                                GP12167
ASMSEQ   EQU   CARD+72,8,C'C'  3/2                              GP12167
COBSEQ   EQU   CARD+00,6,C'C'  3/2                              GP12167
COBPGM   EQU   CARD+72,8,C'C'  4/2                              GP12167
RPGSEQ   EQU   CARD+00,5,C'C'  5/2                              GP12167
RPGPGM   EQU   CARD+74,6,C'C'  6/2                              GP12167
PGMCOUNT DC    PL6'0'
TOTCOUNT DC    PL8'0'
SAVEEND  EQU   *                                                GP12167
         DCBD  DSORG=PS
         END
