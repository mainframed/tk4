PRC      TITLE 'IKJEFF10 - TSO/E SUBMIT EXIT ROUTINE.'
         PUNCH ' ORDER IKJEFF10(P) '    MAKE DUMPS EASIER TO READ
         PUNCH ' ALIAS IKJEFF10 '       TRUE NAME IS ALIAS
***********************************************************************
*                                                                     *
* NAME - TSO/E SUBMIT EXIT ROUTINE.                                   *
*                                                                     *
* DESCRIPTION - THIS EXIT IS DOCUMENTED IN THE SPL: TSO MANUAL.       *
*   WE USE THIS EXIT TO INSERT A COMMENT CARD AFTER EACH JOB CARD     *
*   THAT NAMES THE JCL SOURCE DATASET.  IF IT'S SUB FROM TSO EDIT     *
*   OR ISPF EDIT, WE HAVE TO DIG FOR THE REAL DATASET NAME.  IF       *
*   IT'S A SPECIAL ISPF UTILITY DSN, WE PUT OUT A FIXED MESSAGE.      *
*   IF IT'S SUBMIT *, WE SAY SO.  ELSE, WE USE THE SUBMIT DSN AS IS.  *
*                                                                     *
* LEVEL - THIS MODULE HAS BEEN TESTED WITH TSO/E R2 AND ISPF V2R2.    *
*   THERE ARE MORE DEPENDENCIES THAN USUAL ON INTERNAL CONTROL        *
*   BLOCKS WITHIN THESE PRODUCTS.  IT IS ALSO VERY SENSITIVE TO RB,   *
*   TCB, AND CDE STRUCTURES.  THUS THIS MODULE WILL BE SENSITIVE      *
*   TO RELEASE CHANGES IN THESE PRODUCTS.                             *
*   NOTE: THIS MODULE IS INSTALLED VIA SMP/E LOCAL MOD.  THE LOAD     *
*         MODULE IKJEFF10 NEEDS APF AUTHORIZATION, A LINKLIST         *
*         LIBRARY, AND 'RENT,REUS' ATTRIBUTES.                        *
*                                                                     *
* LOG -                                                               *
*     DATE   WHO LV    CHANGE                                         *
*   01/14/86 PTW 01 IMPLEMENTATION                                    *
*   03/31/86 PTW 02 REDO VERIFICATION OF ISPF EDIT. CHECKING FOR CDES *
*                   ISRUDL OR ISREDIT DIDN'T CATCH "ISPEXEC EDIT".    *
*                   CHECKING TLD PANELID ISREDDE DIDN'T CATCH IMACRO. *
*   08JULY92 GIP 03 ADD X'20' TO ISPF DSN OFFSETS FOR ISPF V3R2.      *
*                   INITIALIZE R10 EARLIER IN LOGIC.                  *
*   01JANU93 GIP 04 ADD X'28' TO ISPF DSN OFFSETS FOR ISPF V3R3.      *
*                   WITH ISPF/PDF V3R4.                               *
*   6THMAY96 GIP 05 USE AMODE=31 TO ACCESS ISPF V4 ADDRESSES.         *
*                   VERIFY CL8'SPFEDIT ' IS BEFORE DATA SET NAME.     *
*                   SCAN AN ADDRESS RANGE FOR CL8'SPFEDIT ' TO        *
*                   AUTOMATICALLY HANDLE VARIOUS ISPF RELEASES.       *
*                   (SCAN RANGE CONTROLLED BY SPFEDFST AND SPFEDLST.) *
*                   CHANGE TEXT OF BADIDSNM - WAS FOR BLANK DSN ONLY. *
*   9DECEM98 GIP 06 VERIFY SOME SAVE AREA ADDRESS TO AVOID S0C4.      *
*                                                                     *
***********************************************************************
         COPY  OPTIONGB                                         GP04084
         SPACE 1                                                GP04084
         SYSPARM LIST=YES                                       GP04084
         SPACE 2                                                GP04084
         PRINT &PRTSOR                                          GP04084
IKJEFF10 CSECT ,                                                GP04084
***********************************************************************
*                                                                     *
*        I N I T I A L I Z E   A N D   D E T E R M I N E              *
*        T Y P E   O F   C A L L.                                     *
*                                                                     *
***********************************************************************
         SAVE  (14,12),,IKJEFF10-&SYSDATE-&SYSTIME              GP04084
         LR    R12,R15                 ESTABLISH BASE.
         USING IKJEFF10,R12            TELL ASSEMBLER.          GP04084
         L     R11,0(,R1)              R11 = A(PLIST).
         USING IEDSECTD,R11
         L     R2,IEEXITWD             R2 = A(OUR SAVED WORKAREA).
         LTR   R2,R2                   IF R2 ^= 0,
         BNZ   HAVSTOR                   WE ALREADY HAVE WORKAREA.
         GETMAIN RU,LV=DYNLEN,SP=230  230 IS FREED AT TASK TERMINATION.
         ST    R1,IEEXITWD             SAVE A(WORKAREA).
         LR    R2,R1                   ZERO
         LR    R0,R1                     DYNAMIC
         LA    R1,DYNLEN                   STORAGE.
         LR    R14,R0
         SLR   R15,R15
         MVCL  R0,R14                  DO IT.
HAVSTOR  DS    0H
         LR    R1,R13                  PREPARE TO
         LR    R13,R2                    SAVEAREA CHAIN.
         USING DYNAMIC,R13             TELL ASSEMBLER.
         ST    R1,4(,R13)              BACK CHAIN.
         ST    R13,8(,R1)              FORWARD CHAIN.
         L     R10,IESUBCTP            ADDRESS THE FLAGS IN PLIST.  L03
         USING IESUBCTD,R10                                         L03
         CLI   ENVTYPE,NOTINIT         IF FIRST ENTRY,
         BE    ENVBEG                    WE NEED TO CALL
TRYMSG   DS    0H
         L     R2,IEMSGP               IF CALL TO FREE MSG AREA,
         LTR   R2,R2                     DON'T NEED TO...
         BNZ   RETCONT                     JUST RETURN.
         L     R2,IECARDP              IF CALL TO INSERT A CARD,
         LTR   R2,R2                     STORE THE PROPER
         BNZ   JCLTYPE                     WORKAREA ADDRESS
         LA    R2,INSLINE                    IN PARAMETER LIST
         ST    R2,IECARDP                      AND RETURN.
         B     RETCONT
JCLTYPE  DS    0H
         TM    IESTMTYP,IESJOB         IF A JOBCARD,                L03
         BZ    RETCONT                   AND
         TM    IESTMTYP,IESOPCON+IESSCON IF A CONTINUATION,
         BNZ   RETCONT                   DON'T NEED...RETURN.
         CLI   CERROR,NO               NO COMMENT ERROR,
         BE    COMMENTS                  GO DO COMMENTS PROCESSING.
RETCONT  DS    0H                      RETURN TO CONTINUE.
         LA    R15,IECONTIN
         MVI   IETAKEEX,IETJOB
         B     RETURN
RETMSG   DS    0H
         LA    R15,IEMSG               RETURN TO OUTPUT MESSAGE.
         MVI   IETAKEEX,IETJOB
         B     RETURN
RETRET   DS    0H
         LA    R15,IERETURN            RETURN TO INSERT COMMENT.
         MVI   IETAKEEX,IETJOB
         B     RETURN
RETURN   DS    0H
         LR    R1,R13              PREPARE
         L     R13,4(,R13)         FOR FREEMAIN.
*        FREEMAIN RU,LV=DYNLEN,A=(1),SP=230  SUBMIT NEEDS A(BUFFER)!
         RETURN (14,12),RC=(15)      WITH R15 = RC.
***********************************************************************
*                                                                     *
*        D E T E R M I N E   E N V I R O N M E N T.                   *
*                                                                     *
***********************************************************************
ENVBEG   DS    0H
*
*  THIS ROUTINE DETERMINES WHAT ENVIRONMENT WE ARE RUNNING IN:
*  REGULAR SUBMIT, TSO EDIT, ISPF, OR ISPF EDIT.
*
         MVI   CERROR,NO               ASSUME NO ERROR.
         MVI   ENVTYPE,SUBMIT          ASSUME IT'S REGULAR SUBMIT.
         MVI   INSLINE,C' '            BLANK BUFFER.
         MVC   INSLINE+1(L'INSLINE-1),INSLINE
*
*  HERE WE FIND SUBMIT'S TCB. THIS EXIT RUNS UNDER A DIFFERENT
*  CHAIN THAN SUBMIT, AND WE CAN'T PREDICT WHERE SUBMIT'S TCB WILL BE.
*  THUS WE RUN THE DISPATCHING CHAIN LOOKING FOR AN SVC 100 SVRB.
*
         L     R2,PSATOLD-P            R2 = A(OUR TCB).
         L     R2,TCBJSTCB-T(,R2)      R2 = A(JOB-STEP TCB).
ENVTCBL1 DS    0H
         L     R3,TCBRBP-T(,R2)        R3 = A(MOST RECENT RB).
ENVRBL1  DS    0H
         TM    RBSTAB1-R(R3),RBFTSVRB  IF NOT AN SVRB,
         BNO   ENVTCBE1                  FORGET THIS ONE.
         L     R4,RBLINK-R(,R3)        VERIFY ITS SVC 100.
         SL    R4,=A(RBPRFXND-RBPREFIX)
         CLI   RBINTCOD-RP+1(R4),100               LOOK FOR SVC 100.
         BE    ENVOKSUB
ENVTCBE1 DS    0H
         L     R2,TCBTCB-T(,R2)        DIG INTO TCB DISP. CHAIN.
         LTR   R2,R2                   IF END OF LINE,
         BNZ   ENVTCBL1
         B     BADSUB1                   PUT OUT ERROR MESSAGE.
ENVOKSUB DS    0H
         ST    R2,SUBTCB               SAVE SUBMIT'S TCB.
*
*  HERE WE RUN SAVE AREAS TO FIND THE CPPL SENT TO SUBMIT.
*
         L     R4,RBGRS13-R(,R3)       FIND CPPL SENT TO SUBMIT.
         L     R4,SAVHSA(,R4)
         L     R5,SAVR15(,R4)         CHECK FOR PRESENCE OF IKJEFF01.
         CLC   =CL8'IKJEFF01',5(R5)
         BNE   BADSUB2
         L     R4,SAVR1(,R4)
         L     R5,CPPLUPT-CPPL(,R4)
         ST    R5,UPTPTR               SAVE A(UPT).
         TM    UPTSWS-UPT(R5),UPTWTP   IF NO WTP MESSAGES,
         BNO   BADWTP                    THEN NO COMMENTS!
         MVC   PSCBPTR,CPPLPSCB-CPPL(R4) SAVE A(PSCB).
*
*  NEXT WE LOOK FOR THE DAPB FOR THE CURRENT DSN AND THE SUBMIT
*  TABLE.  WE RUN SAVE AREAS ANCHORED IN THIS EXIT'S TCB TO DO THIS.
*
         L     R2,PSATOLD-P            R2 = A(OUR TCB).
         L     R3,TCBFSA-T(,R2)        DIG THROUGH SAVE AREAS
         L     R3,SAVLSA(,R3)
         L     R3,SAVLSA(,R3)
         L     R3,SAVLSA(,R3)
         ST    R3,SUBSAREA             WILL BE USED LATER TO GET DSN.
         L     R4,SAVR6(,R3)
         CLC   =C'SUBMIT TABLE',0(R4)  CHECK EYE-CATCHER TO BE SURE.
         BNE   BADSUB3                 AARGH! WE HAVE A PROBLEM HERE.
*
*  HERE WE CHECK SPECIFICALLY FOR TSO EDIT, ISPF, OR ISPF EDIT.
*  FOR TSO EDIT, THE MOTHER TASK'S 2ND RB MUST BE RUNNING IKJEBESU,
*  AND THE PREVIOUS RB MUST BE RUNNING IKJEBEMA.  FOR ISPF, ANY MOTHER
*  TASK'S 1ST RB MUST BE RUNNING ISPTASK.  FOR ISPF EDIT, WE MUST BE
*  ISPF. RUN TH SAVEAREAS ARE DETERMINE THAT ISPCSB AND ISREPSB ARE
*  BEING USED.  THUS WE AREN'T FOOLED BY TSO COMMANDS, ETC.
*
         L     R2,SUBTCB               GET SUBMIT'S TCB.
         L     R2,TCBOTC-T(,R2)        R2 = A(MOTHER TCB).
         L     R3,TCBRBP-T(,R2)        R3 = A(LAST RB).
         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 2ND RB.
         BO    ENVENDED
         L     R3,RBLINK-R(,R3)
         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 3RD RB.
         BO    ENVENDED
         L     R4,RBCDE-R(,R3)         R4 = A(1ST CDE).
         CLC   =CL8'IKJEBESU',CDNAME-C(R4)  LOOK FOR TSO EDIT.
         BNE   ENVENDED
         L     R3,RBLINK-R(,R3)
         L     R4,RBCDE-R(,R3)         R5 = A(1ST CDE).
         CLC   =CL8'IKJEBEMA',CDNAME-C(R4)
         BNE   ENVENDED
         MVI   ENVTYPE,EDIT            WE GOT EDIT.
*        TPUT  =C'ENV: EDIT',9
         MVC   EWAPTR,TCBGRS9-T(R2)    SAVE THE WORK AREA POINTER.
         B     ENVEND
ENVENDED DS    0H
*
* NOW DO ISPF AND ISPF EDIT.
*
         L     R2,SUBTCB               GET SUBMIT'S TCB.
         L     R2,TCBOTC-T(,R2)        R2 = A(MOTHER TCB).
ENVTCBL2 DS    0H
         L     R3,TCBRBP-T(,R2)        R3 = A(LAST RB).
ENVRBL2  DS    0H
         TM    RBSTAB2-R(R3),RBTCBNXT  LOOK FOR 1ST RB.
         BO    ENVRBE2
         L     R3,RBLINK-R(,R3)
         B     ENVRBL2
ENVRBE2  DS    0H
         L     R4,RBCDE-R(,R3)         R5 = A(1ST CDE).
         CLC   =CL8'ISPTASK',CDNAME-C(R4)  LOOK FOR ISPF.
         BNE   ENVTCBE2
         MVI   ENVTYPE,ISPF            WE'RE IN ISPF.
*        TPUT  =C'ENV: ISPF',9
         BE    ENVISPFE
         B     ENVENDIS
ENVTCBE2 DS    0H
         CL    R2,TCBJSTCB-T(,R2)      WE WANT TO STOP AT THE
         BE    ENVENDIS                  JOB-STEP TCB.
         L     R2,TCBOTC-T(,R2)        GET PREVIOUS MOTHER.
         B     ENVTCBL2                LOOP.
ENVISPFE DS    0H                      WE'VE PASSED THE CDE TEST.
         L     R3,TCBGRS13-T(,R2)      NOW VERIFY THE SAVEAREA CHAIN.
         CLI   SAVHSA(R3),0            24-BIT ADDRESS?              L06
         BNE   ENVIFROM                NO, NOT ISPF EDIT            L06
         L     R3,SAVHSA(,R3)          DIG BACK 2 LEVELS.
         CLI   SAVHSA(R3),0            24-BIT ADDRESS?              L06
         BNE   ENVIFROM                NO, NOT ISPF EDIT            L06
         L     R3,SAVHSA(,R3)
         L     R4,SAVR15(,R3)          CHECK FOR PRESENCE OF ISPCSB.
         BAS   R14,TO31
         CLC   =C'ISPCSB ',5(R4)
         BNE   ENVIFROM
         L     R4,SAVHSA(,R3)          DIG BACK ANOTHER LEVEL.      L02
         L     R4,SAVR15(,R4)          CHECK FOR PRESENCE OF ISPEPSBL02
         CLC   =C'ISREPSB ',5(R4)                                   L02
         BNE   ENVIFROM                                             L02
         BAS   R14,FROM31
         MVI   ENVTYPE,ISPFEDIT        WE'RE ISPF EDIT!
*        TPUT  =C'ENV: ISPFEDIT',13
         MVC   EDTPTR,SAVR3(R3)        NEED THIS FOR LATER.
         B     ENVEND
ENVIFROM DS    0H
         BAS   R14,FROM31
ENVENDIS DS    0H
ENVEND   DS    0H
         B     TRYMSG                  GO BACK FROM WHENCE.
***********************************************************************
*                                                                     *
*        D E T E R M I N E   D S N T Y P E.                           *
*                                                                     *
***********************************************************************
COMMENTS DS    0H
*
*  THIS ROUTINE DETERMINES WHAT TYPE OF DSN SUBMIT IS HANDLING:
*    PERMANENT        - YOUR.EVERYDAY.DSN
*    TEMPORARY        - SYS99999.D99999.T99999999.USERID.R9999999
*    ISPF UTILITY     - PREFIX(.USERID).SPFTEMP9.CNTL
*    TSO EDIT UTILITY - PREFIX.SUB(MIT).D99999.T9999999.CNTL
*    NONE             - DETERMINED BY ZERO BUFFER POINTER
*
DSNBEG   DS    0H
         MVI   INSLINE,C' '            BLANK BUFFER.
         MVC   INSLINE+1(L'INSLINE-1),INSLINE
         MVI   DSNTYPE,PERM            ASSUME PERMANENT.
         L     R2,SUBSAREA             R2 = A(SAVED BUFFER).
         L     R3,SAVR6(,R2)           IF ZERO BUFFER
         L     R3,SUBUFPTR(,R3)          POINTER,
         LTR   R3,R3
         BNZ   DSNENONE
         MVI   DSNTYPE,NONE            INDICATE THUSLY.
*        TPUT  =C'DSN: NONE',9
         B     DSNEND
DSNENONE DS    0H
         L     R2,SUBSAREA             R2 = A(SAVED BUFFER).
         L     R2,SAVR7(,R2)           TEST FOR TEMPORARY FORMAT.
         L     R2,0(,R2)               R2 = A(DAPB).
         L     R3,DA08PDSN-DAPB08(,R2) POINT TO DSN TEXT.
         LH    R4,0(,R3)               R4 = L'DSN.
         LA    R3,2(,R3)               R3 = A(DSN).
         CH    R4,=H'33'               MIN LENGTH - A 1 BYTE JOBNAME.
         BL    DSNENTMP
         CLI   0(R3),C' '              IF BLANK NAME,
         BE    BADSDSN                   FORGET NEXT.
         CLI   DA08MNM-DAPB08(R2),C' ' IF MEMBER PRESENT, WE'RE
         BNE   DSNENTMP                  NOT INTERESTED.
         CLC   =C'SYS',0(R3)           DO TEXT CHECKS.
         BNE   DSNENTMP
         CLC   =C'.T',8(R3)
         BNE   DSNENTMP
         CLC   =C'.RA',16(R3)
         BNE   DSNENTMP
         CLI   22(R3),C'.'
         BNE   DSNENTMP
         L     R5,PSCBPTR              COMPARE USERID WITH USERID
         SLR   R6,R6                     IN DSN.
         IC    R6,PSCBUSRL-PSCB(,R5)
         LTR   R6,R6
         BZ    DSNENTMP
         BCTR  R6,0
         EX    R6,CLCUSER
         BNE   DSNENTMP
         MVI   DSNTYPE,TEMP            WE'RE A TEMPORARY! (PHEW)
*        TPUT  =C'DSN: TEMP',9
         B     DSNEND
CLCUSER  CLC   23(*-*,R3),PSCBUSER-PSCB(R5)
DSNENTMP DS    0H                      CHECK FOR ISPF UTILITY.
         L     R5,UPTPTR               COMPARE PREFIX WITH DSN.
         SLR   R6,R6
         IC    R6,UPTPREFL-UPT(,R5)
         LTR   R6,R6
         BZ    DSNENIUT
         BCTR  R6,0
         EX    R6,CLCUPT
         BNE   DSNENIUT
         CH    R4,=H'14'               MIN LENGTH IS 14 W 1 BYTE PREFIX
         BL    DSNENIUT
         LA    R5,0(R4,R3)
         SH    R5,=H'14'
         CLC   =C'.SPFTEMP',0(R5)      DO BASIC TEXT CHECKS.
         BNE   DSNENIUT
         CLC   =C'.CNTL',9(R5)
         BNE   DSNENIUT
         MVI   DSNTYPE,ISPFUTIL        WE'RE AN ISPF UTILITY!
*        TPUT  =C'DSN: ISPFUTIL',13
         B     DSNEND
CLCUPT   CLC   0(*-*,R3),UPTPREFX-UPT(R5)
DSNENIUT DS    0H                      NOW TRY TSO EDIT UTILITY.
         CH    R4,=H'24'               AGAIN CHECK MIN LENGTH.
         BL    DSNENDED
         L     R5,UPTPTR               IF PREFIX IS AVAILABLE,
         SLR   R6,R6                     CHECK DSN.
         IC    R6,UPTPREFL-UPT(,R5)
         LA    R5,0(R6,R3)
         LTR   R6,R6
         BZ    *+8
         LA    R5,1(,R5)               BUMP PAST '.'.
         CLC   =C'SUB.D',0(R5)         DO BASIC TEXT CHECKS.
         BE    DSNTRYED
         CLC   =C'SUBMIT.D',0(R5)
         BNE   DSNENDED
DSNTRYED DS    0H
         LA    R5,0(R4,R3)
         SH    R5,=H'14'
         CLC   =C'.T',0(R5)
         BNE   DSNENDED
         CLC   =C'.CNTL',9(R5)
         BNE   DSNENDED
         MVI   DSNTYPE,EDITUTIL        WE'RE A TSO EDIT UTILTIY DSN!
*        TPUT  =C'DSN: EDITUTIL',13
DSNENDED DS    0H
DSNEND   DS    0H
***********************************************************************
*                                                                     *
*        D E T E R M I N E   M S G T Y P E.                           *
*                                                                     *
***********************************************************************
MSGBEG   DS    0H
*
* HERE WE DETERMINE THE TYPE OF COMMENT TO OUTPUT BASED ON THE
* ENVIRONMENT AND THE DSN:
*   -DSN-      -ENV-      -MSG-          -ACTION-
*  NONE          .       PROMPT   FIXED TEXT.
*  EDITUTIL   EDIT       EDITNAME MUST DIG OUT REAL DSN IN TSO EDIT
*  ISPFUTIL   ISPFEDIT   ISPENAME MUST DIG OUT REAL DSN IN ISPFEDIT
*  TEMP       ISPFEDIT   ISPENAME              ""
*  ISPFUTIL   ISPF       ISPUNAME FIXED TEXT
*  TEMP       ISPF       ISPUNAME FIXED TEXT
*  ALL OTHER     .       SUBNAME  USE DSN ON COMMAND LINE
*
         MVI   MSGTYPE,SUBNAME         ASSUME SUBMIT DSN.
         CLI   DSNTYPE,NONE            CHECK FOR PROMPT MSG.
         BNE   MSGENDPR
         MVI   MSGTYPE,PROMPT
*        TPUT  =C'MSG: PROMPT',11
         B     MSGEND
MSGENDPR DS    0H                      CHECK FOR TSO EDIT.
         CLI   DSNTYPE,EDITUTIL        ONLY EDIT UTILITY NAME.
         BNE   MSGENDED
         CLI   ENVTYPE,EDIT            MUST BE EDIT ENVIRONMENT.
         BNE   MSGEND
         MVI   MSGTYPE,EDITNAME        WE GOT TSO EDIT.
*        TPUT  =C'MSG: EDITNAME',13
         B     MSGEND
MSGENDED DS    0H                      CHECK FOR ISPF.
         CLI   DSNTYPE,ISPFUTIL        IF A ISPF UTILITY
         BE    MSGTRYIE
         CLI   DSNTYPE,TEMP              OR A TEMP, OK.
         BNE   MSGEND
MSGTRYIE DS    0H
         CLI   ENVTYPE,ISPFEDIT        IF ISPF EDIT ENV.,
         BNE   MSGTRYIU
         MVI   MSGTYPE,ISPENAME        THAT'S COOL.
*        TPUT  =C'MSG: ISPENAME',13
         B     MSGEND
MSGTRYIU DS    0H
         CLI   ENVTYPE,ISPF            ELSE, TRY DIALOGS, ETC.
         BNE   MSGENDIS
         MVI   MSGTYPE,ISPUNAME
*        TPUT  =C'MSG: ISPUNAME',13
         B     MSGEND
MSGENDIS DS    0H
MSGEND   DS    0H
***********************************************************************
*                                                                     *
*        F O R M A T   C O M M E N T S.                               *
*                                                                     *
***********************************************************************
PUTBEG   DS    0H
*
* HERE WE BUILD THE COMMENT, BASED ON MSGTYPE.
*
         MVI   INSLINE,C' '            BLANK BUFFER.
         MVC   INSLINE+1(L'INSLINE-1),INSLINE
         CLI   MSGTYPE,SUBNAME         CHECK FOR SUBMIT DSNAME.
         BNE   PUTENDSU
         MVC   INSLINE(L'JCL),JCL
         LA    R2,INSLINE+L'JCL
         L     R3,SUBSAREA             R2 = A(SAVED BUFFER).
         L     R3,SAVR7(,R3)           DIG FOR DSNAME.
         L     R3,0(,R3)
         L     R4,DA08PDSN-DAPB08(,R3)
         LH    R5,0(,R4)               R5 = L'DSN.
         LA    R4,2(,R4)               R4 = A(DSN).
         BCTR  R5,0
         EX    R5,MVCDSN               MOVE IT TO BUFFER.
         LA    R2,1(R5,R2)
         LA    R4,DA08MNM-DAPB08(,R3)  R4 = A(MEMBER).
         CLI   0(R4),C' '              CHECK FOR PRESENCE OF MEMBER.
         BE    PUTEND
         MVI   0(R2),C'('
         LA    R5,L'DA08MNM(,R4)       FIND LENGTH OF MEMBER.
         BCTR  R5,0
         CLI   0(R5),C' '
         BE    *-6
         SLR   R5,R4
         EX    R5,MVCMEM               MOVE MEMBER.
         LA    R2,2(R5,R2)
         MVI   0(R2),C')'
         B     PUTEND                  THAT'S IT.
PUTENDSU DS    0H
         CLI   MSGTYPE,ISPENAME        CHECK FOR ISPF EDIT DSN.
         BNE   PUTENDIE
         BAS   R14,TO31                                             L05
         L     R3,EDTPTR               R3 = A(EDT).
         LA    R4,SPFEDFST(,R3)        R4 = START SCAN ADDRESS.     L05
EDSNLOOP LA    R0,(SPFEDLST-SPFEDFST)/8  GET SCAN DOUBLEWORD COUNT. L05
         CLC   =CL8'SPFEDIT ',0(R4)    ENQUEUE RESOURCE FOUND?      L05
         BE    GOTEDDSN                YES, PROCEED.                L05
         LA    R4,8(,R4)               NO, POINT TO NEXT DOUBLEWORD.L05
         BCT   R0,EDSNLOOP             CONTINUE SCAN.               L05
         B     BADIDSN                 COULD NOT FIND EDIT DSNAME.  L05
GOTEDDSN LA    R4,8(,R4)               R4 = A(DSN).                 L05
         CLI   0(R4),C' '              IF BLANK, FORGET IT.
         BE    BADIDSN
         MVC   INSLINE(L'JCLISPED),JCLISPED
         LA    R2,INSLINE+L'JCLISPED
         LA    R5,44(,R4)              FIND L'DSN.  (ASSUME 44.)    L05
         BCTR  R5,0
         CLI   0(R5),C' '
         BE    *-6
         SLR   R5,R4
         EX    R5,MVCDSN               MOVE DSN.
         LA    R2,1(R5,R2)
         LA    R4,44(,R4)              R4 = A(MEMBER).              L05
         CLI   0(R4),C' '              IF BLANK, FORGET IT.
         BE    PUTISPFX                                             L05
         MVI   0(R2),C'('
         LA    R5,8(,R4)               FIND L'MEMBER.  (ASSUME 8.)  L05
         BCTR  R5,0
         CLI   0(R5),C' '
         BE    *-6
         SLR   R5,R4
         EX    R5,MVCMEM               MOVE MEMBER.
         LA    R2,2(R5,R2)
         MVI   0(R2),C')'
PUTISPFX BAS   R14,FROM31                                           L05
         B     PUTEND                  THAT'S IT.
PUTENDIE DS    0H
         CLI   MSGTYPE,EDITNAME        CHECK FOR TSO EDIT DSNAME.
         BNE   PUTENDED
         L     R3,EWAPTR               R3 = A(EWA).
         LA    R4,EDITDSN(,R3)         R4 = A(DSN).
         CLI   0(R4),C' '              IF BLANK, FORGET IT.
         BE    BADEDSN
         MVC   INSLINE(L'JCLEDIT),JCLEDIT
         LA    R2,INSLINE+L'JCLEDIT
         LH    R5,EDITDSNL(,R3)        R5 = L'DSN.
         BCTR  R5,0
         EX    R5,MVCDSN               MOVE DSN.
         LA    R2,1(R5,R2)
         LA    R4,EDITMEM(,R3)         R4 = A(MEMBER).
         CLI   0(R4),C' '              IF BLANK, FORGET NEXT.
         BE    PUTEND
         MVI   0(R2),C'('
         LA    R5,L'EDITMEM(,R4)       FIND L'MEMBER.
         BCTR  R5,0
         CLI   0(R5),C' '
         BE    *-6
         SLR   R5,R4
         EX    R5,MVCMEM               MOVE MEMBER.
         LA    R2,2(R5,R2)
         MVI   0(R2),C')'
         B     PUTEND                  THAT'S IT.
PUTENDED DS    0H
         CLI   MSGTYPE,ISPFUTIL        CHECK FOR ISPF UTILTIY.
         BNE   PUTENDIU
         MVC   INSLINE(L'JCLISPUT),JCLISPUT
         B     PUTEND
PUTENDIU DS    0H
         CLI   MSGTYPE,PROMPT          CHECK FOR * IN READY.
         BNE   PUTENDPR
         MVC   INSLINE(L'JCLPROMP),JCLPROMP
         B     PUTEND
PUTENDPR DS    0H
PUTEND   DS    0H
*        TPUT  INSLINE,80
         B     RETRET                  TELL SUBMIT TO RETURN TO INSERT.
***********************************************************************
*                                                                     *
*        E R R O R   H A N D L I N G.                                 *
*                                                                     *
***********************************************************************
BADSUB1  DS    0H                      CONTROL BLOCK MESSUP.
         MVI   CERROR,YES
         MVC   INSLINE(2),=AL2(L'BADSUB1M+2)
         MVC   INSLINE+2(L'BADSUB1M),BADSUB1M
         B     BADRET
BADSUB1M DC    C'NO DSN COMMENT - CAN''T FIND SUBMIT TCB.'
BADSUB2  DS    0H                      CONTROL BLOCK MESSUP.
         MVI   CERROR,YES
         MVC   INSLINE(2),=AL2(L'BADSUB2M+2)
         MVC   INSLINE+2(L'BADSUB2M),BADSUB2M
         B     BADRET
BADSUB2M DC    C'NO DSN COMMENT - SUBMIT SAVE AREA CHAIN ERROR.'
BADSUB3  DS    0H                      SUBMIT CONTROL BLOCK MESSUP.
         MVI   CERROR,YES
         MVC   INSLINE(2),=AL2(L'BADSUB3M+2)
         MVC   INSLINE+2(L'BADSUB3M),BADSUB3M
         B     BADRET
BADSUB3M DC    C'NO DSN COMMENT - CAN''T FIND SUBMIT TABLE.'
BADWTP   DS    0H                      NOWTP - NO COMMENT WANTED.
         MVI   CERROR,YES
         B     RETCONT
BADSDSN  DS    0H                      BLANK SUBMIT DSN.
         MVI   CERROR,YES
         MVC   INSLINE(2),=AL2(L'BADSDSNM+2)
         MVC   INSLINE+2(L'BADSDSNM),BADSDSNM
         B     BADRET
BADSDSNM DC    C'NO DSN COMMENT - INTERNAL SUBMIT DSN IS BLANK.'
BADIDSN  DS    0H                      BLANK ISPF EDIT DSN.
         BAS   R14,FROM31                                           L05
         MVC   INSLINE(2),=AL2(L'BADIDSNM+2)
         MVC   INSLINE+2(L'BADIDSNM),BADIDSNM
         B     BADRET
BADIDSNM DC    C'NO DSN COMMENT - UNABLE TO FIND ISPF EDIT DSN.'    L05
BADEDSN  DS    0H                      BLANK TSO EDIT DSN.
         MVC   INSLINE(2),=AL2(L'BADEDSNM+2)
         MVC   INSLINE+2(L'BADEDSNM),BADEDSNM
         B     BADRET
BADEDSNM DC    C'NO DSN COMMENT - INTERNAL TSO EDIT DSN IS BLANK.'
BADRET   DS    0H                      SAVE A(ERROR MSG).
         LA    R2,INSLINE
         ST    R2,IEMSGP
         B     RETMSG
         DROP  R10,R11
***********************************************************************
*                                                                     *
*        T O   A N D   F R O M   3 1   B I T   M O D E.               *
*                                                                     *
***********************************************************************
TO31     DS    0H
         L     R1,LABEL1
         BSM   0,R1
LABEL1   DC    A(LABEL2+X'80000000')
LABEL2   DS    0H
         BR    R14
FROM31   DS    0H
         LA    R1,LABEL3
         BSM   0,R1
LABEL3   DS    0H
         BR    R14
***********************************************************************
*                                                                     *
*        S T A T I C   A R E A S.                                     *
*                                                                     *
***********************************************************************
MVCDSN   MVC   0(*-*,R2),0(R4)
MVCMEM   MVC   1(*-*,R2),0(R4)
JCL      DC    C'//*JCL: '
JCLISPED DC    C'//*ISPF EDIT OF '
JCLISPUT DC    C'//*JCL: ISPF UTILITY DATASET'
JCLEDIT  DC    C'//*TSO EDIT OF '
JCLPROMP DC    C'//*JCL: INPUT FROM THE TERMINAL'
         LTORG *
***********************************************************************
*                                                                     *
*        D Y N A M I C   A R E A S.                                   *
*                                                                     *
***********************************************************************
DYNAMIC  DSECT
SAVE     DS    18F .                   SAVEAREA.
INSLINE  DS    CL80                    BUFFER.
SUBTCB   DS    A                       A(SUB TCB).
UPTPTR   DS    A                       A(UPT).
PSCBPTR  DS    A                       A(PSCB).
SUBSAREA DS    A                       A(SUB TABLE).
EDTPTR   DS    A                       A(ISPF EDIT EDT).
EWAPTR   DS    A                       A(TSO EDIT EWA).
CERROR   DS    X                       HAS THERE BEEN A SERIOUS ERROR?
NO       EQU   1
YES      EQU   2
ENVTYPE  DS    X                       ENVIRONMENT.
NOTINIT  EQU   0                       NOT SET.
SUBMIT   EQU   1
ISPF     EQU   2
ISPFEDIT EQU   3
EDIT     EQU   4
DSNTYPE  DS    X                       DSN TYPE.
PERM     EQU   1
TEMP     EQU   2
ISPFUTIL EQU   3
EDITUTIL EQU   4
NONE     EQU   5
MSGTYPE  DS    X                       MSG TYPE.
SUBNAME  EQU   1
ISPENAME EQU   2
ISPUNAME EQU   3
EDITNAME EQU   4
PROMPT   EQU   5
DYNLEN   EQU   *-DYNAMIC
*
SAVHSA   EQU   X'04',4,C'A'       SAVE AREA HSA.
SAVLSA   EQU   X'08',4,C'A'       SAVE AREA LSA.
SAVR1    EQU   X'18',4,C'A'       PARM PTR IN SAVE AREA.
SAVR3    EQU   X'20',4,C'A'       EDT POINTER IN SAVE AREA.
SAVR6    EQU   X'2C',4,C'A'       SUBTAB POINTER IN SAVE AREA.
SAVR7    EQU   X'30',4,C'A'       CURRENT DAPB POINTER.
SAVR9    EQU   X'54',4,C'A'       EDIT TABLE POINTER IN SAVE AREA.
SAVR15   EQU   X'10',4,C'A'       MODULE EP IN SAVE AREA.
SUBUFPTR EQU   X'38',4,C'A'       DAIR PARAMETER BLOCK POINTER.
SPFEDFST EQU   X'A60'             FIRST OFFSET TO SCAN.             L05
SPFEDLST EQU   X'FA0'             LAST OFFSET TO SCAN.              L05
*              X'B18' IS OFFSET OF CL8'SPFEDIT ' FOR ISPF V4R2.     L05
EDITDSNL EQU   X'EE',2,C'H'       TSO EDIT DSNAME LENGTH.
EDITDSN  EQU   X'F0',44,C'C'      TSO EDIT DSNAME.
EDITMEM  EQU   X'11C',8,C'C'      TSO EDIT MEMBER.
         SPACE 1                                                GP04084
         PRINT &PRTSYS                                          GP04084
         YREGS ,                                                GP04084
         IHAPSA
P        EQU   PSA
         IKJTCB
T        EQU   TCB
         IKJRB
RP       EQU   RBPREFIX
R        EQU   RBSECT
FLGPRB   EQU   X'E0'                 ITS A PRB.
         IHACDE
C        EQU   CDENTRY
         IKJCPPL
         IKJPSCB
         IKJUPT
         IKJDAP08
         SPACE 1                                                GP04084
         PRINT &PRTMAC                                          GP04084
         IKJEFFIE IETYPE=SUBMIT                                 GP04084
         END   IKJEFF10                                         GP04084
