PRTLSTAK TITLE 'P R T L S T A K  ***  PRINT A LINKAGE STACK'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES    SET AND LIST GLOBAL OPTIONS
         SPACE 2
***********************************************************************
*                                                                     *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*  PRTLSTACK IS A SUBROUTINE FOR PRINTING FORMATTED STACK INFORMATION *
*  FOR ANY LINKAGE STACK IN THE ADDRESS SPACE                         *
*                                                                     *
*  SUBCALL PRTLSTAK,(@PRINTER,DEVICE,ADDRESS),VL                      *
*    @PRINTER IS THE ADDRESS OF THE @PRINTER ROUTINE, OR A WORD       *
*      CONTAINING THE ADDRESS                                         *
*    DEVICE IS THE ADDRESS OF A DEVICE MASK AS USED WITH PRTLIST      *
*      (USE -> 0 FOR DEVICE 1)                                        *
*    ADDRESS - WHEN 0, USES THE CURRENT TCB'S NORMAL LINKAGE STACK    *
*      WHEN POSITIVE, SPECIFIES THE FIRST STACK ENTRY DESCRIPTOR      *
*        ADDRESS (NOT THE ENTRY ADDRESS)                              *
*      WHEN X'80' ON, THE ADDRESS OF THE TCB THE STACK OF WHICH       *
*        IS TO BE PROCESSED                                           *
*                                                                     *
*    THIS ROUTINE WON'T ISSUE TITLE/SUBTITLE REQUESTS, AND DOES NOT   *
*    ISSUE AN INITIAL EJECT.                                          *
*                                                                     *
*    RC=0 FOR A NORMAL RETURN                                         *
*    RC=16 FOR AN INVALID PARAMETER LIST                              *
*    RC=20 FOR AN INVALID STACK ADDRESS                               *
*    RC=OTHER - HIGHEST RETURN CODE FROM @PRINTER                     *
*                                                                     *
*----->>>>> NOTE - THE CALLER IS REQUIRED TO USE THE VL BIT <<<<<-----*
*    POSSIBLE FUTURE EXPANSION MAY SUPPORT PASSING THE ASID OR ASCB   *
*      ADDRESS, OR OTHER PARAMETERS                                   *
*                                                                     *
***********************************************************************
*  MAINTENANCE                                                        *
*  2003-05-25  GYP  NEW CODE                                          *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
         PRINT &PRTSOR
PRTLSTAK PGMHEAD ZERO12,BASE=R12,PARM=R9 BNDRY=PAGE
         SPACE 1
*---------------------------------------------------------------------*
*  EXAMINE THE CALLER'S PARAMETER LIST                                *
*  1) ADDRESS OF @PRINTER, OR WORD WITH ADDRESS OF @PRINTER           *
*---------------------------------------------------------------------*
         LTCB  R7,USE=YES    GET THE CURRENT TCB (DEFAULT)
         L     R3,0(,R9)     GET @PRINTER INFORMATION
         LA    R2,0(,R3)     CLEAN IT
         LTR   R2,R2         VALID ?
         BZ    PARMMISS      NO; FAIL
         CLI   0(R2),X'47'   IS IT @PRINTER ADDRESS ?
         BE    SAVE@PRT      YES; USE IT
         L     R2,0(,R2)     ELSE LOAD ADDRESS FROM USER'S WORD
         LA    R2,0(,R2)     CLEAN IT
         LTR   R2,R2         VALID ?
         BZ    PARMMISS      NO; FAIL
SAVE@PRT ST    R2,@PRINTER   SAVE PRESUMED PRINTER ADDRESS
         SPACE 1
*---------------------------------------------------------------------*
*  2) 0, DEVICE MASK, OR ADDRESS OF DEVICE MASK                       *
*---------------------------------------------------------------------*
         LTR   R3,R3         ANY DEVICE NUMBER ?
         BM    HAVETCB       NO; USE WHAT WE HAVE
         L     R3,4(,R9)     GET DEVICE INFORMATION
         LA    R2,0(,R3)     CLEAN IT
         CH    R2,=H'256'    POSSIBLE DEVICE MASK ?
         BL    SAVEDEV#      YES; USE IT
         IC    R2,0(,R2)     ELSE LOAD FROM USER'S ADDRESS
SAVEDEV# STC   R2,DEVMASK    SAVE DEVICE MASK BYTE
         SPACE 1
*---------------------------------------------------------------------*
*  3) 0 FOR CURRENT TCB/NORMAL STACK                                  *
*     + FOR NORMAL STACK AT SUPPLIED ADDRESS                          *
*     X'80' FOR NORMAL STACK OF SUPPLIED TCB                          *
*---------------------------------------------------------------------*
         LTR   R3,R3         ANY DEVICE NUMBER ?
         BM    HAVETCB       NO; DONE
         L     R3,8(,R9)     GET TCB/CDE INFORMATION
         LA    R2,0(,R3)     CLEAN IT
         LTR   R2,R2         ANY ADDRESS AT ALL ?
         BZ    HAVETCB       NO; USE CURRENT TCB
         L     R1,0(,R2)     ELSE LOAD ADDRESS FROM USER'S WORD
         LA    R2,0(,R1)     CLEAN IT
         LTR   R6,R2         VALID ? (LOAD INTO CED REGISTER)
         BZ    HAVETCB       NO; USE DEFAULT TCB
         LTR   R1,R1         WAS X'80' ON ?
         BZ    HAVECED       NO; PROCESS CED ADDRESS
         LR    R7,R2         ELSE TREAT AS TCB ADDRESS
         SPACE 2
*---------------------------------------------------------------------*
*  NOW HAVE @PRINTER, DEVICE, TCB, AND CED - START PROCESSING         *
*---------------------------------------------------------------------*
         SPACE 1
HAVETCB  L     R7,TCBSTCB    GET THE EXTENSION
         USING STCB,R7
         L     R6,STCBTLSP   GET CURRENT LINKAGE STACK
         USING LNKSTK_CED,R6  DECLARE COMMON ENTRY DESCRIPTOR
HAVECED  DS    0H            START WHEN USER SUPPLIES CED ADDRESS
LOOPCED  LA    R0,X'7F'      SET MAXIMUM POSSIBLE
         IC    R15,LSXET     LOAD ENTRY TYPE AND FLAG
         NR    R15,R0        MASK
         STC   R15,CURRENT   SAVE CLEARED TYPE
         LIX   VAL=(R15),ERRGO=BADCED,BASE=0,ERRLOC=0,                 *
               LOC=(,        TYPE 0                                    *
               LS1SIZE,      TYPE 1 - OS390 HEADER                     *
               LS2SIZE,      TYPE 2 - OS390 TRAILER                    *
               ,             TYPE 3                                    *
               LS4SIZE,      TYPE 4 - OS390 BRANCH STATE (BAKR)        *
               LS5SIZE,      TYPE 5 - OS390 PROGRAM CALL (PC)          *
               ,             TYPE 6                                    *
               ,             TYPE 7                                    *
               ,             TYPE 8                                    *
               LS9SIZE,      TYPE 9 - Z/900 HEADER                     *
               LSASIZE,      TYPE A - Z/900 TRAILER                    *
               ,             TYPE B                                    *
               LSCSIZE,      TYPE C - Z/900 BRANCH STATE (BAKR)        *
               LSDSIZE,      TYPE D - Z/900 PROGRAM CALL (PC)          *
               ,             TYPE E                                    *
               )             TYPE F
         LTR   R4,R15        VALID ENTRY ?
         BNP   BADCED        NO; FAIL
         LA    R5,LSXSIZE(,R6)  GET CED ADDRESS + CED LENGTH
         SR    R5,R15        POSITION TO ENTRY
         USING LSENTRY,R5    DECLARE THE MAPPING
         IC    R15,CURRENT
         LIX   VAL=(R15),ERRGO=BADCED,ERRLOC=FORMCED,                  *
               LOC=(,        TYPE 0                                    *
               FORM1,        TYPE 1 - OS390 HEADER                     *
               FORM2,        TYPE 2 - OS390 TRAILER                    *
               ,             TYPE 3                                    *
               FORM4,        TYPE 4 - OS390 BRANCH STATE (BAKR)        *
               FORM5,        TYPE 5 - OS390 PROGRAM CALL (PC)          *
               ,             TYPE 6                                    *
               ,             TYPE 7                                    *
               ,             TYPE 8                                    *
               FORM9,        TYPE 9 - Z/900 HEADER                     *
               FORMA,        TYPE A - Z/900 TRAILER                    *
               ,             TYPE B                                    *
               FORMC,        TYPE C - Z/900 BRANCH STATE (BAKR)        *
               FORMD,        TYPE D - Z/900 PROGRAM CALL (PC)          *
               ,             TYPE E                                    *
               )             TYPE F
         LA    R1,PRTLSTAK(R15) GET FD CHAIN ADDRESS FOR FORMATTING
         PRTLIST (R1),DEV==DEVMASK   FORMAT THE ENTRY
         SR    R2,R2
         ICM   R2,3,LSXNES   GET DISPLACEMENT TO NEXT CED
         BZ    DONECED       DONE (CURRENT ENTRY)
         AR    R6,R2
         B     LOOPCED       DO ANOTHER
         SPACE 1
DONECED  TM    PROFLAGS,FGEND
         BNZ   FINALPRT
         ICM   R2,3,LSXRFS   GET DISPLACEMENT TO TRAILER
         BZ    FINALPRT
         LA    R6,LS2SIZE(R2,R6)   FROM THIS ENTRY
         OI    PROFLAGS,FGEND
         B     LOOPCED
         SPACE 1
FINALPRT PRTLIST MSGNL,DEV==DEVMASK   FORCE OUT THE FINAL BUFFER
PGMEXIT  L     R9,RETCODE    GET RETURN CODE
         PGMEXIT RC=(R9)     AND EXIT
         SPACE 2
BADCED   PRTLIST MSGCED,DEV==DEVMASK
         MVICC 20,20         INVALID CALLING PARAMETER
         B     PGMEXIT
         SPACE 2
PARMBAD  PRTLIST MSGPARM,DEV==DEVMASK
PARMMISS MVICC 16,16         INVALID CALLING PARAMETER
         B     PGMEXIT
         SPACE 2
         LTORG ,
         SPACE 2
MSGNL    FDOPT NL,CC=C'0'    DOUBLE SPACE
         SPACE 1
MSGCED   FDOPT NL,CC=C'0'    DOUBLE SPACE
         FDPRT '***** FOUND INVALID COMMON ENTRY DESCRIPTOR; ADDRESS'
         FDPRT 0(R6),4,ADDR,PAD
         FDPRT 0(R6),8,HEX,PAD
         FDPRT '*****'
         FD    *END
         SPACE 1
MSGPARM  FDOPT NL,CC=C'0'    DOUBLE SPACE
         FDPRT '***** PRTLSTAK - INVALID CALLPARM VALUE:'
         FDPRT 0(R3),4,ADDR,PAD
         FDPRT 0(R3),4,HEX,PAD
         FDPRT '*****'
         FD    *END
         SPACE 1
FORMCED  FDOPT NL,CC=C'0'    DOUBLE SPACE
         FDPRT 'STACK ENTRY @',NL
         FDPRT 0(R5),4,ADDR,PAD
         FDFD  LSXET,HEX
         FDFD  LSXSI,HEX
         FDFD  LSXRFS,HEX
         FDFD  LSXNES,HEX
FORMCEDX FD    *END
         SPACE 1
FORMMOD  FD    ' MOD.AREA'
         FD    LS4MOD,HEX,PAD
         FD    ''''
         FD    LS4MOD  CHAR, NO PAD
         FD    ''''
FORMMODX FD    *END
         SPACE 1
FORM1    FDEXEC FORMCED,FORMCEDX
         FD    '  HEADER',PADL
         FDFD  LS1RSV,HEX,OPTL=NL
         FDFD  LS1BSEA,HEX
         FD    *END
         SPACE 1
FORM2    FDEXEC FORMCED,FORMCEDX
         FD    '  TRAILER',PADL
         FDFD  LS2RSV,HEX,OPTL=NL
         FDFD  LS2FSHA,HEX
         FD    *END
         SPACE 1
FORM4    FDEXEC FORMCED,FORMCEDX
         FD    '  BRANCH&&STACK',PADL
         FD    ' REG 0 - 3',NL
         FD    '  '
         FD    LS4ACRS+00,4,HEX,PAD
         FD    LS4REGS+00,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+04,4,HEX,PAD
         FD    LS4REGS+04,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+08,4,HEX,PAD
         FD    LS4REGS+08,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+12,4,HEX,PAD
         FD    LS4REGS+12,4,HEX,PAD
         FD    ' REG 4 - 7',NL
         FD    '  '
         FD    LS4ACRS+16,4,HEX,PAD
         FD    LS4REGS+16,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+20,4,HEX,PAD
         FD    LS4REGS+20,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+24,4,HEX,PAD
         FD    LS4REGS+24,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+28,4,HEX,PAD
         FD    LS4REGS+28,4,HEX,PAD
         FD    ' REG 8 - B',NL
         FD    '  '
         FD    LS4ACRS+32,4,HEX,PAD
         FD    LS4REGS+32,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+36,4,HEX,PAD
         FD    LS4REGS+36,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+40,4,HEX,PAD
         FD    LS4REGS+40,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+44,4,HEX,PAD
         FD    LS4REGS+44,4,HEX,PAD
         FD    ' REG C - F',NL
         FD    '  '
         FD    LS4ACRS+48,4,HEX,PAD
         FD    LS4REGS+48,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+52,4,HEX,PAD
         FD    LS4REGS+52,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+56,4,HEX,PAD
         FD    LS4REGS+56,4,HEX,PAD
         FD    '  '
         FD    LS4ACRS+60,4,HEX,PAD
         FD    LS4REGS+60,4,HEX,PAD
         FD    ' PKM',NL
         FD    LS4PKM,HEX,PAD
         FD    'SASN'
         FD    LS4SASN,HEX,PAD
         FD    'EAX'
         FD    LS4EAX,HEX,PAD
         FD    'PASN'
         FD    LS4PASN,HEX,PAD
         FD    ' PSW',NL
         FD    LS4PSW+00,4,HEX,PAD
         FD    LS4PSW+04,4,HEX,PAD
         FD    '    BRANCH ADDRESS'
*NO?*    FD    LS4RSV+00,4,HEX,PAD
         FD    LS4BRAD+00,4,HEX,PAD
         FDEXEC FORMMOD,FORMMODX
         FD    *END
         SPACE 1
FORM5    FDEXEC FORMCED,FORMCEDX
         FD    '  PROGRAM CALL',PADL
         FD    ' REG 0 - 3',NL
         FD    '  '
         FD    LS5ACRS+00,4,HEX,PAD
         FD    LS5REGS+00,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+04,4,HEX,PAD
         FD    LS5REGS+04,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+08,4,HEX,PAD
         FD    LS5REGS+08,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+12,4,HEX,PAD
         FD    LS5REGS+12,4,HEX,PAD
         FD    ' REG 4 - 7',NL
         FD    '  '
         FD    LS5ACRS+16,4,HEX,PAD
         FD    LS5REGS+16,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+20,4,HEX,PAD
         FD    LS5REGS+20,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+24,4,HEX,PAD
         FD    LS5REGS+24,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+28,4,HEX,PAD
         FD    LS5REGS+28,4,HEX,PAD
         FD    ' REG 8 - B',NL
         FD    '  '
         FD    LS5ACRS+32,4,HEX,PAD
         FD    LS5REGS+32,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+36,4,HEX,PAD
         FD    LS5REGS+36,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+40,4,HEX,PAD
         FD    LS5REGS+40,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+44,4,HEX,PAD
         FD    LS5REGS+44,4,HEX,PAD
         FD    ' REG C - F',NL
         FD    '  '
         FD    LS5ACRS+48,4,HEX,PAD
         FD    LS5REGS+48,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+52,4,HEX,PAD
         FD    LS5REGS+52,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+56,4,HEX,PAD
         FD    LS5REGS+56,4,HEX,PAD
         FD    '  '
         FD    LS5ACRS+60,4,HEX,PAD
         FD    LS5REGS+60,4,HEX,PAD
         FD    ' PKM',NL
         FD    LS5PKM,HEX,PAD
         FD    'SASN'
         FD    LS5SASN,HEX,PAD
         FD    'EAX'
         FD    LS5EAX,HEX,PAD
         FD    'PASN'
         FD    LS5PASN,HEX,PAD
         FD    ' PSW',NL
         FD    LS5PSW+00,4,HEX,PAD
         FD    LS5PSW+04,4,HEX,PAD
         FD    ' CSI'
         FD    LS5CSI,4,HEX,PAD
         FD    ' PCN'
         FD    LS5PCN,4,HEX,PAD
         FDEXEC FORMMOD,FORMMODX
         FD    *END
         SPACE 1
FORM9    FDEXEC FORMCED,FORMCEDX
         FD    '  HEADER',PADL
         FDFD  LS9BSEA,HEX,OPTL=NL
         FD    *END
         SPACE 1
FORMA    FDEXEC FORMCED,FORMCEDX
         FD    '  TRAILER',PADL
         FDFD  LSAFSHA,HEX,OPTL=NL
         FDFD  LS2FSHA,HEX
         FD    *END
         SPACE 1
FORMC    FDEXEC FORMCED,FORMCEDX
         FD    '  BRANCH&&STACK',PADL
         FD    ' REG 0 - 3',NL
         FD    '  '
         FD    LSCACRS+00,4,HEX,PAD
         FD    LSCREGS+00,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+04,4,HEX,PAD
         FD    LSCREGS+08,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+08,4,HEX,PAD
         FD    LSCREGS+16,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+12,4,HEX,PAD
         FD    LSCREGS+24,8,HEX,PAD
         FD    ' REG 4 - 7',NL
         FD    '  '
         FD    LSCACRS+16,4,HEX,PAD
         FD    LSCREGS+32,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+20,4,HEX,PAD
         FD    LSCREGS+40,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+24,4,HEX,PAD
         FD    LSCREGS+48,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+28,4,HEX,PAD
         FD    LSCREGS+56,8,HEX,PAD
         FD    ' REG 8 - B',NL
         FD    '  '
         FD    LSCACRS+32,4,HEX,PAD
         FD    LSCREGS+64,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+36,4,HEX,PAD
         FD    LSCREGS+72,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+40,4,HEX,PAD
         FD    LSCREGS+80,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+44,4,HEX,PAD
         FD    LSCREGS+88,8,HEX,PAD
         FD    ' REG C - F',NL
         FD    '  '
         FD    LSCACRS+48,4,HEX,PAD
         FD    LSCREGS+96,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+52,4,HEX,PAD
         FD    LSCREGS+104,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+56,4,HEX,PAD
         FD    LSCREGS+112,8,HEX,PAD
         FD    '  '
         FD    LSCACRS+60,4,HEX,PAD
         FD    LSCREGS+120,8,HEX,PAD
         FD    ' PKM',NL
         FD    LSCPKM,HEX,PAD
         FD    'SASN'
         FD    LSCSASN,HEX,PAD
         FD    'EAX'
         FD    LSCEAX,HEX,PAD
         FD    'PASN'
         FD    LSCPASN,HEX,PAD
         FD    ' PSW',NL
         FD    LSDPSWL+00,4,HEX,PAD
         FD    LSDPSWL+04,4,HEX,PAD
         FD    LSDPSWR+00,4,HEX,PAD
         FD    LSDPSWR+04,4,HEX,PAD
         FD    ' BRANCH ADDRESS'
         FD    LSCBRAD+00,4,HEX,PAD
         FD    LSCBRAD+04,4,HEX,PAD
         FDEXEC FORMMOD,FORMMODX
         FD    *END
         SPACE 1
FORMD    FDEXEC FORMCED,FORMCEDX
         FD    '  PROGRAM CALL',PADL
         FD    ' REG 0 - 3',NL
         FD    '  '
         FD    LSDACRS+00,4,HEX,PAD
         FD    LSDREGS+00,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+04,4,HEX,PAD
         FD    LSDREGS+08,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+08,4,HEX,PAD
         FD    LSDREGS+16,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+12,4,HEX,PAD
         FD    LSDREGS+24,8,HEX,PAD
         FD    ' REG 4 - 7',NL
         FD    '  '
         FD    LSDACRS+16,4,HEX,PAD
         FD    LSDREGS+32,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+20,4,HEX,PAD
         FD    LSDREGS+40,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+24,4,HEX,PAD
         FD    LSDREGS+48,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+28,4,HEX,PAD
         FD    LSDREGS+56,8,HEX,PAD
         FD    ' REG 8 - B',NL
         FD    '  '
         FD    LSDACRS+32,4,HEX,PAD
         FD    LSDREGS+64,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+36,4,HEX,PAD
         FD    LSDREGS+72,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+40,4,HEX,PAD
         FD    LSDREGS+80,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+44,4,HEX,PAD
         FD    LSDREGS+88,8,HEX,PAD
         FD    ' REG C - F',NL
         FD    '  '
         FD    LSDACRS+48,4,HEX,PAD
         FD    LSDREGS+96,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+52,4,HEX,PAD
         FD    LSDREGS+104,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+56,4,HEX,PAD
         FD    LSDREGS+112,8,HEX,PAD
         FD    '  '
         FD    LSDACRS+60,4,HEX,PAD
         FD    LSDREGS+120,8,HEX,PAD
         FD    ' PKM',NL
         FD    LSDPKM,HEX,PAD
         FD    'SASN'
         FD    LSDSASN,HEX,PAD
         FD    'EAX'
         FD    LSDEAX,HEX,PAD
         FD    'PASN'
         FD    LSDPASN,HEX,PAD
         FD    ' PSW',NL
         FD    LSDPSWL+00,4,HEX,PAD
         FD    LSDPSWL+04,4,HEX,PAD
         FD    LSDPSWR+00,4,HEX,PAD
         FD    LSDPSWR+04,4,HEX,PAD
         FD    '    CSI'
         FD    LSDCSI,4,HEX,PAD
         FD    '    PCN'
         FD    LSDPCN,4,HEX,PAD
         FDEXEC FORMMOD,FORMMODX
         FD    *END
         SPACE 2
SAVE     DSECT ,             CONTINUATION OF WORK/SAVE AREA
DB       DS    3D            WORK AREA
         SERVDEFS ,
         SPACE 1
@PRINTER DS    A             @PRINTER ADDRESSFROM CALLER
         SPACE 1
CURRENT  DS    X             CURRENT ENTRY TYPE
PROFLAGS DS    X             PROCESSING FLAG
FGEND    EQU   X'80'           CURRENT ENTRY REACHED; QUIT WITH TRAILER
DEVMASK  DS    X             PRINT FILE SELECTION MASK
         SPACE 1
SAVEEND  EQU   *             END OF WORK AREA
         SPACE 2
         PRINT &PRTSYS
         CVT   DSECT=YES
         SPACE 1
         IHACDE ,
         SPACE 1                                                 93218
         IHAPSA ,                                               GP03126
         IKJTCB ,
         IHASTCB ,
         IHAASCB ,
         PRINT ON,GEN
         EJECT ,
         LNKSTK ,            EXPAND LINKAGE STACK MAPPING
         END   ,
