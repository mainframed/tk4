MSTO     TITLE 'MICHIGAN MODS TAPE  ***  MEMBER STOW UTILITY'
*
*        MIMSTOW IS A QUICK AND VERY DIRTY ROUTINE TO TAKE ALL MEMBERS
*          FROM A 'MICHIGAN MODS' TAPE AND PLACE THEM INTO A PDS.
*        MEMBERS ARE DESIGNATED BY '@@  NAME=' STARTING IN COLUMN 1.
*          OTHER @@ CONTROL CARDS ARE IGNORED; THE '@@  NAME' CARD
*          IS KEPT AS THE FIRST DATA CARD OF THE MEMBER.
*        JCL : UP TO 20 MINUTES CPU TIME FOR COMPRESSED, FULL TAPE
*              (360/65) - BUT THEN WE ONLY RUN IT ONCE A YEAR...
*            REGION - 40K FOR 5K INPUT BLOCK AND 3K OUTPUT
*            PARM:  NONE OR 'MOD' - ADD NEW MEMBERS ONLY
*                   'REP' OR 'NEW' - ADD/REPLACE EVERYTHING
*
*        DD: INTAPE - SEQUENTIAL FILES IN COMPRESSED OR UNCOMPRESSED
*              FORMAT; MAY BE CONCATENATED.  UNLIKE CONCATENATION IS
*              SUPPORTED.  FOR UNLABELLED TAPES, AT A MINIMUM THE
*              RECORD FORMAT (F OR V) MUST BE SPECIFIED; LRECL DEFAULTS
*              TO 80 FOR F, 84 FOR V; BLOCKSIZE DEFAULTS TO 5120 FOR F,
*              5380 FOR V.
*            OUTPDS - PARTITIONED DATASET.  IN OUR CASE, ONE FULL
*              DOUBLE-DENSITY 3330 WITH 195 DIRECTORY ENTRIES FOR ALL
*              MODS TAPES (SINCE 1974). THERE STILL IS ROOM LEFT...
*        ATTRIBUTES:  NON-ANYTHING
*        EXTERNAL REFERENCES, MACROS AND STUFF: NONE
*          BUT NEEDS G OR XF ASSEMBLER FOR BRANCH REGISTER OPCODES.
*        COMPLAINTS AND QUESTIONS SHOULD BE ADDRESSED TO:
*              CIRCULAR FILE
*        AUTHOR:  G. POSTPISCHIL (AMS)
*          THE 'EXPAND' ROUTINE COPIED FROM A PREVIOUS MODS TAPE
*          SUBMITTED BY C.J. GOELZ  (CWA).
         EJECT ,
         PRINT NOGEN
MIMSTOW  START 0
         USING *,R12
         STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R9,SAVE
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9
         SPACE 1
         LA    R1,0(,R1)     DON'T TRUST NOBODY
         LTR   R1,R1         ANYTHING ?
         BNP   NOPARM
         LAT   R1,0(R1),NOPARM  GET ADDRESS
         LH    R2,0(,R1)     GET PRESUMED LENGTH
         LTR   R2,R2         ANY ?
         BNP   NOPARM
         CLI   2(R1),C'M'    'MOD' ?
         BE    NOPARM        YES - ADD ONLY
         CLI   2(R1),C'N'    'NEW' ?
         BE    PARMREP
         CLI   2(R1),C'R'    REPLACE OPTION ?
         BNE   ABEND16
PARMREP  OI    FLAG,REPSW    MAKE ADD STOW INTO REPLACE STOW
         SPACE 1
NOPARM   OPEN  (IN,(INPUT,REREAD))
         TM    IN+48,X'10'
         BZ    ABEND16
         OPEN  (OUT,(OUTPUT))
         TM    OUT+48,X'10'
         BNZ   OPENOK
ABEND16  ABEND 16            GREETINGS
         SPACE 1
OPENOK   LA    R2,OUTBLOCK
         LR    R4,R2         COPY START ADDRESS
         LR    R3,R2         DITTO
         AH    R3,OUT+62     GET OUTPUT END
         STM   R2,R4,BLOCKS  SAVE BLOCK INFO
         SPACE 1
GETINP   GET   IN            GET A RECORD
         TM    FLAG,FAILSW   IS FAIL SWITCH ON ?
         BNZ   EOF           YES - TRY TO STOW PREVIOUS TAPE'S MEMBER
         TM    FLAG,CONCSW   REREAD ON UNLIKE CONCATENATION ?
         BZ    GETINOK       NO
         NI    FLAG,255-CONCSW  YES; TURN IT OFF
         OI    FLAG,SKIPSW   AND SET TO SKIP FOR ANOTHER MEMBER CARD
         B     GETINP        RE-ISSUE THE GET
         SPACE 1
GETINOK  LR    R5,R1         SAVE THE RECORD ADDRESS
         TM    FLAG,COMPSW   COMPRESSED RECORD ?
         BZ    GETINUN       NO; OK
         BAL   R14,EXPAND    GO TO EXPAND THE RECORD
         B     GETINP        GARBAGE RECORD - IGNORE
GETINUN  CLC   =C'@@  NAME=',0(R5)  MEMBER NAME RECORD ?
         BE    STOWIT        YES - STOW THE PREVIOUS MEMBER
         TM    FLAG,SKIPSW   IN SKIP MODE ?
         BNZ   GETINP        YES - SKIP IT
NEWMEM   LM    R2,R4,BLOCKS
         MVC   0(80,R2),0(R5)  COPY THIS ONE
         LA    R2,80(,R2)    ALLOW FOR IT
         ST    R2,BLOCKS     SET NEW BLOCK START
         CR    R2,R3         END OF BLOCK ?
         BL    GETINP        NO; GET NEXT RECORD
         LA    R9,GETINP     SET RESTART ADDRESS
DOWRITE  SR    R2,R4         GET BLOCK LENGTH
         BNPR  R9            RETURN IF BLOCK EMPTY
         STH   R2,OUT+62     SET BLOCKSIZE INTO DCB BLKSIZE (FB)
         WRITE FECB,SF,OUT,(R4),'S'   WRITE FULL OR LAST BLOCK
         CHECK FECB          WAIT FOR GOOD COMPLETION
         LR    R2,R4         REFRESH THE BLOCK POINTER
         ST    R2,BLOCKS     SET NEW BLOCK START
         LAT   R1,TTR,,(R9)  SKIP IF TTR SET
         NOTE  OUT           GET TTR
         ST    R1,TTR        STASH IT
         BR    R9            RETURN TO CALLER
         SPACE 1
STOWIT   LM    R2,R4,BLOCKS  GET BLOCKS POINTER
         BAL   R9,DOWRITE    WRITE LAST RECORD
         NI    FLAG,255-SKIPSW  TURN OFF MEMBER SKIP FLAG
         CLI   MEMBER,C' '   PREVIOUS MEMBER STASHED ?
         BE    RESET         NO PREVIOUS ONE; SKIP
         STOW  OUT,MEMBER,R  REPLACE
         CH    R15,=H'8'     ERROR ?
         BNH   RESET         NO
ABEND8   ABEND 8,DUMP        ERROR IN DIRECTORY PROCESSING
RESET    MVC   MEMBER(8),9(R5)  LOAD NEW MEMBER NAME
         XC    TTR,TTR       RESET TTR
         CLI   MEMBER,X'FF'  END-FILE ?
         BE    GETOUT        YES; TERMINATE
         TM    FLAG,REPSW    REPLACE - UNCONDITIONAL STOW
         BNZ   NEWMEM        YES - PROCESS IT
         MVC   BLDLNAME(8),9(R5)  MOVE NAME TO BLDL LIST
         BLDL  OUT,BLDLIST  DOES IT EXIST ?
         CH    R15,=H'4'
         BE    NEWMEM        NO; ADD IT IN
         BH    ABEND8        MAYBE - I/O ERROR
         MVI   MEMBER,C' '   INDICATE PREVIOUS MEMBER STOWED
REPSKIP  OI    FLAG,SKIPSW   SET TO SKIP THIS MEMBER
         B     GETINP        AND GET ANOTHER CARD
         SPACE 1
GETOUT   CLOSE (IN)
         CLOSE (OUT)
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         SPACE 1
EOF      LA    R5,=10X'FF'   POINT TO END-FILE MEMBER NAME
         B     STOWIT        DO FINAL MEMBER PROCESSING
         SPACE 2
INEXIT   TM    FLAG,ONESW    FIRST TIME ?
         BNZ   INEXIT2       NO
         OI    FLAG,ONESW    TURN ON
         OI    IN+48,X'08'   SET UNLIKE CONCATENATION PERMITTED
         B     INEXIT3
INEXIT2  OI    FLAG,CONCSW   SET CONCATENATION - REISSUE GET
INEXIT3  TM    IN+36,X'C0'   CHECK RECFM
         BNM   INEXBAD       INVALID
         TM    IN+36,X'80'   RECFM=F ?
         BZ    INEXITV
         LA    R2,80         SET REQUIRED LRECL
         LA    R3,5120/2     SET DEFAULT BLOCKSIZE
         NI    FLAG,255-COMPSW  SET UNCOMPRESSED INPUT
         B     INEXITC       GO TO CHECK
INEXITV  LA    R2,84         SET REQUIRED LRECL
         LA    R3,5380/2     SET DEFAULT BLOCKSIZE
         OI    FLAG,COMPSW   SET FOR COMPRESSED INPUT
INEXITC  OC    IN+82(2),IN+82  IS LRECL SET ?
         BNZ   *+8           YES
         STH   R2,IN+82      SET IT
         CH    R2,IN+82      MATCHES REQUIRED ONE ?
         BNE   INEXBAD
         OI    IN+36,X'10'   FORCE FB OR VB
         OC    IN+62(2),IN+62  BLOCKSIZE SET ?
         BNZR  R14           YES - RETURN
         SLL   R3,1          ADJUST SIZE
         STH   R3,IN+62      ELSE DEFAULT
         BR    R14
INEXBAD  OI    FLAG,FAILSW   SET FAIL SWITCH
         LR    R2,R14        NOT REALLY NECESSARY ?
         WTO   'INVALID DCB OR CONCATENATION',ROUTCDE=11
         BR    R2
         EJECT
SAVE     DC    18F'0'
BLOCKS   DC    3F'0'         BLOCK POINTERS CURR/END/START
MEMBER   DC    CL8' '        STOW - MEMBER NAME
TTR      DC    XL4'0'        STOW - TTR
         SPACE 1
*        FLAG SETTINGS
ONESW    EQU   X'01'         FIRST ENTRY TO DCBEXIT IF OFF
REPSW    EQU   X'02'         REPLACE ALL MEMBERS (ELSE ADD ONLY)
SKIPSW   EQU   X'04'         SKIPPING FOR MEMBER
COMPSW   EQU   X'08'         DATA IS COMPRESSED
CONCSW   EQU   X'10'         CONCATENATION - REISSUE READ
FAILSW   EQU   X'80'         ERROR IN DCB EXIT
FLAG     DC    AL1(SKIPSW)   INIT - SCAN FOR MEMBER
         SPACE 1
IN       DCB   DDNAME=INTAPE,DSORG=PS,MACRF=GL,EROPT=ACC,EODAD=EOF,    *
               EXLST=INEXLST
INEXLST  DC    0A(0),X'85',AL3(INEXIT)
OUT      DCB   DDNAME=OUTPDS,DSORG=PO,MACRF=W,RECFM=FB,LRECL=80
         SPACE 1
BLDLIST  DC    0A(0),AL2(1,58)
BLDLNAME DC    CL58' '
         SPACE 3
EXPAND   XR    R2,R2         CLEAR FOR IC
         IC    R2,0(,R1)     GET FIRST LENGTH BYTE (=0)
         SLL   R2,8          MAKE ROOM FOR NEXT
         IC    R2,1(,R1)          LENGTH OF FIELD
         S     R2,=F'4'           LESS FOUR BYTE DESCRIPTOR
         BNPR  R14                NOTHING THERE, FORGET IT
         MVC   INWORK,INWORK-1   ENSURE TRAILING BLANKS
         LR    R6,R2              SAVE FIELD LENGTH
         BCTR  R2,0          LESS ONE FOR EXECUTE
         EX    R2,INMOVER    MOVE INPUT TO INTERMEDIATE WORK AREA
         LA    R5,INWORK+4   SET INPUT IF UNCOMPRESSED
         CLC   0(2,R1),=H'64'  TOO LONG ?
         BH    4(,R14)       YES - IS UNCOMPRESSED
         CLC   4(2,R1),=C'@@  NAME='  @@ PREFIX ?
         BE    4(,R14)       YES - UNCOMPRESSED
         LA    R4,3               CONSTANT THREE
         LA    R2,EXWORK          R2 PTR TO WORK
         LA    R3,INWORK         R3 PTR TO START LOOP
         LA    R5,2(R6,R3)        R5 PTR TO STOP LOOP
         SPACE 2
EXPLOOP  BCTR  R2,0               R2 ONE LESS INITIALLY
         BXH   R3,R4,MULTYS       LOOP THRU 'SHRINK'ED FIELD
         IC    R6,0(R4,R3)        FETCH NEXT
         SRDL  R6,8                    THREE SOURCE CHARS
         BCT   R4,*-8                  LEFT JUSTIFIED IN R7
         SPACE 1
         XR    R6,R6              CLEAR WORK REG
         LA    R4,4               R4 LOOP COUNTER
         SPACE 1
         SLL   R6,2               EXPAND COMPOSITE
         SLDL  R6,6                    CHAR'S TO EIGHT BITS
         BCT   R4,*-8             LOOP TO GEN FOUR FOR THREE
         SPACE 1
         LA    R4,3               RESTORE EXPLOOP INCREMENT
         ST    R6,1(,R2)          SAVE EXPANDED CHAR'S
         LA    R7,4(,R2)          R7 PTR TO STOP SCAN
         LA    R6,1               R6 SCAN INCREMENT
         BXH   R2,R6,EXPLOOP      BUMP TO NEXT CHAR
         CLI   0(R2),X'3F'        IS IT TERMINATOR ?
         BNE   *-8                NO, CHECK NEXT
         SPACE 1
         BCTR  R2,0               R2 PTR TO FIELD END
         SPACE 2
MULTYS   LR    R5,R2              R5 END OF WORK FIELD
         LA    R3,EXWORK          R3 PTR TO
         BCTR  R3,0                    INIT LOOP
         LA    R4,1               R4 BXH INCREMENT
         LA    R2,INWORK+4        R2 PTR TO EXPANDED FIELD
         SPACE 2
MULTLOOP LA    R6,1(,R3)          R6 BEGINNING OF SOURCE FIELD
         BXH   R3,R4,FIELDCHK     LOOP TO LOOK FOR MULTIPLICITIES
         CLI   0(R3),X'2F'        REPETITION FLAG ?
         BNE   *-8                NO, SKIP OVER IT
         SPACE 2
FIELDCHK SR    R3,R6              ANY MOVE REQUIRED ?
         BNP   *+18               NO, SKIP IT
         SPACE 1
         BCTR  R3,0               COUNT ONE LESS FOR EXEC
         EX    R3,MOVIT           MOVE REQUIRED CHAR'S
         LA    R2,1(R3,R2)        BUMP RECEIVING FIELD PTR
         LA    R3,1(,R3)          RESTORE R3
         LA    R3,0(R3,R6)        RESTORE MULTI POINTER
         CR    R3,R5              BEYOND FIELD END ?
         BNL   TRANSIT            YES, GO TRANSLATE
         SPACE 1
         XR    R6,R6              R6 MULTI
         IC    R6,1(,R3)               COUNT (MODULO 255)
         BCTR  R6,0               ONE LESS FOR EXEC
         BCTR  R6,0               ONE LESS FOR OFFSET
         MVC   0(1,R2),2(R3)      MOVE IN FILL CHAR
         EX    R6,FILIT           FILL FOR REQ'D COUNT
         LA    R2,2(R6,R2)        BUMP RECEIVING FIELD PTR
         LA    R3,2(,R3)          R3 PTR FOR NEXT POSSIBILITY
         CR    R3,R5              BEYOND FIELD END ?
         BL    MULTLOOP           NO, GO CHECK SOME MORE
         SPACE 2
TRANSIT  LA    R3,INWORK+4        R3 PTR TO FIRST CHAR
         SR    R2,R3              R2 COUNT
         BCTR  R2,0                    FOR TRANSLATE
         EX    R2,XLATE           TRANSLATE SPECIAL TO EBCDIC
         LA    R2,5(,R2)          R2 TOTAL FIELD LENGTH
*        STH   R2,INWORK          SAVE BYTE COUNT
         LA    R5,INWORK+4   RETURN WORK ADDRESS TO CALLER
         LA    R3,79         SET FOR MAXIMUM TRAILING BLANKS ?
         SR    R3,R2         GET BLANK FILL COUNT - 1
         LA    R2,0(,R5)     GET LAST BYTE - DON'T CHANGE CONDCODE
         MVI   0(R2),C' '    BLANK IT
         BNP   ENDUP         EXIT IF NO FILL
         EX    R3,FILIT      ELSE FILL BLANKS
ENDUP    B     4(,R14)       RETURN TO CALLER
         SPACE 2
MOVIT    MVC   0(0,R2),0(R6)
FILIT    MVC   1(0,R2),0(R2)
XLATE    TR    0(0,R3),XLTAB
INMOVER  MVC   INWORK(0),0(R1)  COPY INPUT TO INTERMEDIATE WORK AREA
EXWORK   DC    CL84' '       OUTPUT RECORD AREA
         DC    C' '          BYTE FOR BLANKING INWORK
INWORK   DC    CL256' '      INPUT WORK AREA
XLTAB    DS    0CL48
         DC    X'00C1C2C3C4C5C6C7C8C9404B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C7F6EFF'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7EFF'
         SPACE 1
         LTORG
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
OUTBLOCK DC    80CL256' '    SPACE FOR FULL-TRACK ON 3350
         SPACE 2
         END
