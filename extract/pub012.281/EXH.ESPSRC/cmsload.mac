//TESTCMSL JOB (Z904,0012),'GERHARD',CLASS=A,MSGCLASS=C
//*
//        EXEC  PURGEME
//*
//       EXEC  DEL0,PARM='GERHARD.REX.FILE1'
//*
//       EXEC  ASMTRAUT,DUMP= PARM.G=
//C.SYSIN  DD  *
CMSL     TITLE 'C M S L O A D  ***  RELOAD (SOME) CMS DUMP TAPES'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*        COPYRIGHT 1986  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003,2008  EXPERT SYSTEM PROGRAMMING               *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 2
*   THIS PROGRAM IS INTENDED FOR RELOADING CMS DUMP TAPES WITH        *
*   FUNNY FORMATS. THE AUTHOR HAS NEVER SEEN THE RELEVANT CMS         *
*   DOCUMENTATION, AND MAKES NO WARRANTY THAT THE PROGRAM WILL        *
*   DO ANYTHING USEFUL, AND NOT DO ANY HARM.                          *
*                                                                     *
*   REQUIRED DD CARDS:                                                *
*                                                                     *
*    INPUT - INPUT FILE(S), RECFM U, BLKSIZE<=32760 (UNLIKE CONC OK)  *
*                                                                     *
*    OUTPUT - PATTERN DD CARD. THE DSN IS TAKEN AS THE PREFIX         *
*           TO THE CMS NAME, MINUS THE LAST LEVEL, AND THE UNIT       *
*           AND VOLUME ARE USED FOR NEW ALLOCATIONS.                  *
*                                                                     *
***********************************************************************
*                                                                     *
*   THE PROGRAM READS THROUGH THE INPUT FILE(S), ACCUMULATING DATA    *
*   FROM THE x'02','CMSN' HEADERS. AFTER END FILE, THE INPUT IS USED  *
*   TO BUILD INFORMATION FOR DATA SET ALLOCATION. FOR EACH NAME.TYPE  *
*   ENTRY FOUND, THE PROGRAM BUILDS A prefix.TYPE PDS, AND REREADS    *
*   THE INPUT FILE. EACH NAME.TYPE ENTRY BECOMES A NAME MEMBER IN     *
*   THE TYPE PDS. SPACE ALLOCATION IS ESTIMATED FROM RECORD COUNTS,   *
*   AND MAY BE OFF A BIT.                                             *
*                                                                     *
*   >>>>> FILES WITH RECORD LENGTHS > 32760 ARE SKIPPED <<<<<         *
*                                                                     *
***********************************************************************
         SPACE 2
         PRINT &PRTSOR
CMSLOAD  PGMHEAD ZERO31,BASE=(R11,R12),PARM=R9,BNDRY=PAGE       GP12063
         SPACE 1
         SERVINIT ,          LOAD THE SERVICE ROUTINE
         MVI   BLANKS,C' '   INITIALIZE
         MVC   BLANKS+1(L'BLANKS-1),BLANKS  COMPLETELY
         SERVLOAD @PRINTER   GET THE PRINTER SERVICE            GP12063
         PRTOPEN SYSPRINT    OPEN THE PRINT FILE
         PRTV  HEADER,TITLE=1  MAKE A TITLE
         SERVCALL LPALD,=CL8'@DCBEXIT'
         STCM  R0,7,EXLIST+1
         STCM  R0,7,EXLUST+1
         LA    R0,INFMJFCB   GET THE JFCB ADDRESS
         STCM  R0,7,4+1+EXLUST  STASH IT IN EXIT LIST
         SERVCALL RJFCB,OUTDCB+DCBDDNAM-IHADCB  WAS OUTPUT DD GIVEN ?
         BXLE  R15,R15,HAVEOUT  YES
BADOUT   PRTL  '*** OUTPUT DD CARD NOT USABLE ***',CC=NO        GP02325
         B     EXIT16
HAVEOUT  MVC   INFMJFCB(JFCBLGTH),0(R1) MOVE TO MY SPACE
         SERVCALL TIODD,OUTDCB+DCBDDNAM-IHADCB  GET OUTPUT TIOT
         LTR   R1,R0         LOAD AND TEST R0
         BZ    BADOUT        NOT FOUND ?
         USING TIOENTRY,R1   DECLARE IT
         CLI   TIOELNGH,20   SINGLE UCB ENTRY ?
         BNE   BADOUT        NO
         ICM   R3,7,TIOEFSRT  CHECK THE UCB
         BZ    BADOUT        DUMMY
         TM    TIOELINK,X'FF'  ANY FUNNY BITS ON ?
         BNZ   BADOUT        TOO BAD
         USING UCBOB,R3
         CLI   UCBTBYT3,UCB3DACC  DASD ?
         BNE   BADOUT        NO
         LA    R1,20(,R1)    CHECK NEXT ENTRY
         CLI   TIOELNGH,0    END OF TIOT ?
         BE    ENDTIOT       OK
         CLI   TIOEDDNM,C' '   CONCATENATION ?
         BE    BADOUT        YES; NO CAN DO
ENDTIOT  MVC   VOLLIST,JFCBVOLS+6  SAVE USER'S VOL-SER LIST
         MVI   JFCBNVOL,1    CHANGE TO ONE VOLUME
         MVC   JFCBVOLS+6(L'JFCBVOLS-6),BLANKS  CLEAR THE REST
         CLI   JFCBVOLS,C' '   WAS THERE ONE AT ALL ?
         BNH   BADOUT        NO; TOO BAD
         OI    JFCBTSDM,JFCVSL+JFCNWRIT  KICK IT IN THE PANTS
         MVI   JFCBLTYP,JFCSL  DON'T SUPPORT SUL
         NI    JFCBIND1,255-JFCGDG-JFCPDS  NO MEMBER
         XC    JFCBELNM,JFCBELNM  NO MEMBER, NO GDG NAME
         NI    JFCBIND2,JFCBRWPW  RESET ALL BUT PSWD REQUEST
         OI    JFCBIND2,JFCOLD  FAKE AN OLD DATASET
         XC    JFCDSORG(JFCBNVOL-JFCDSORG),JFCDSORG  KILL DCB
         XC    JFCBDQTY,JFCBDQTY  NO DIRECTORY/INDEX
         MVI   JFCBVLCT,1    NO SECONDARY ALLOCATION ON SCRATCH
         SERVCALL DSTST,JFCBDSNM  MAKE SURE DSN FRAGMENT IS VALID
         BXH   R15,R15,BADDSN  NO GO
         SERVCALL DSABB,JFCBDSNM  TRY FOR AN ABBREVIATION
         BXH   R15,R15,BADDSN
         CLI   0(R1),C'&&'   TEMPORARY DSN ?
         BNE   NOTTEMP       NO
BADDSN   PRTL  '*** OUTPUT DD DATASET PREFIX NOT USABLE ***',CC=NO
         B     EXIT16
NOTTEMP  CLI   0(R1),C'*'    UTILITY NAME ?
         BE    BADDSN        YES; DON'T USE IT
         MVC   PREFIX,BLANKS
         MVCIN NEWDSN,JFCBDSNM+L'JFCBDSNM-1                     GP12063
         XC    OUTREC(256),OUTREC   TEMP WORK SPACE             GP12063
         MVI   OUTREC+C'.',4        STOP AT INDEX POINT         GP12063
         TRT   NEWDSN,OUTREC                                    GP12063
         BZ    BADDSN                                           GP12063
         LA    R15,L'NEWDSN+NEWDSN                              GP12063
         SR    R15,R1                                           GP12063
         STH   R15,PREFIXLN                                     GP12063
         BCTR  R15,0                                            GP12063
         EX    R15,EXMVCPFX       BUILD DSN PREFIX              GP12063
         CH    R15,=AL2(L'JFCBDSNM-1-8)  NOT TOO LONG ?         GP12063
         BH    BADDSN        TOO BAD
         MVC   JFCBDSNM,PREFIX  CLEAR REST OUT
         SPACE 1
         OPEN  (INDCB,(INPUT,REREAD))  OPEN THE CMS DUMP FILE
         TM    INDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?
         BNZ   PREPROC       GO TO PROCESS INPUT
         PRTL  '*** UNABLE TO OPEN INPUT FILE ***',CC=NO
         B     EXIT16
EXMVCPFX MVC   PREFIX(0),JFCBDSNM MOVE PREFIX ONLY              GP12063
         SPACE 2
         PUSH  USING                                            GP12063
PREPROC  SLR   R3,R3
         ICM   R3,3,INDCB+DCBBLKSI-IHADCB  GET USER'S BLOCKSIZE
         GETMAIN R,LV=(R3)   GET A BUFFER
         ST    R1,BLKAD      STASH IT
         LR    R2,R1         COPY START ADDRESS
         SLR   R14,R14
         SLR   R15,R15
         MVCL  R2,R14        CLEAR TO MAKE DUMPS SHORTER
         PRTV  HEADP1,TITLE=4  MAKE A TITLE                     GP12063
         L     R7,BLKAD      GET THE INPUT BLOCK ADDRESS        GP12063
         LA    R9,FILHEAD    CHAIN HEADER FOR FILE NAMES        GP12063
         SR    R6,R6         FILE NUMBER                        GP12063
PREREAD  READ  MYDECB,SF,INDCB,(R7),'S',MF=E  READ A BLOCK      GP12063
         CHECK MYDECB          WAIT FOR COMPLETION              GP12063
         TM    IXFLAG2,IX2REGET   NEED TO READ ON NEXT FILE/VOLUME ?
         BZ    PRENCONC      NO
         NI    IXFLAG2,255-IX2REGET  RESET IT
         B     PREREAD       REREAD
PRENCONC CLC   CMSFILE,0(R7)   FILE NAME HEADER ?               GP12063
         BNE   PREREAD       NO; SKIP THIS BLOCK                GP12063
         LA    R5,L'CMSFILE(,R7)     POINT TO FILE DATA         GP12063
         USING CMSDSECT,R5   DECLARE BUFFER MAPPING             GP12063
         USING FILDSECT,R9   DECLARE FILE ENTRY                 GP12063
         GETMAIN R,LV=FILSIZE  GET FILE RECORD                  GP12063
         ST    R1,FILLINK    LINK TO PRIOR                      GP12063
         LR    R9,R1         MAKE NEW FILE DEFINITION           GP12063
         XC    FILDSECT(FILSIZE),FILDSECT  CLEAR IT             GP12063
         INC   (R6)          UP FILE COUNT                      GP12063
         ST    R6,FILNUM     SET FILE NUMBER                    GP12063
         MVC   FILNAME,CMSNF1  COPY FILE NAME                   GP12063
         TR    FILNAME,TRNAME  CLEAN UP                         GP12063
         CLI   FILNAME,C'0'   NUMERIC START ?                   GP12063
         BL    *+8           NO                                 GP12063
         NI    FILNAME,X'CF'  CHANGE TO A-I                     GP12063
         MVC   FILTYPE,CMSNF2  COPY TYPE (PDS NAME)             GP12063
         TR    FILTYPE,TRNAME  CLEAN UP                         GP12063
         CLI   FILTYPE,C'0'   NUMERIC TYPE ?                    GP12063
         BL    *+8           NO                                 GP12063
         NI    FILTYPE,X'CF'  CHANGE TO A-I                     GP12063
         MVC   FIL#REC+2(2),CMSN#REC  RECORD COUNT (H -> F)     GP12063
         MVC   FILRECFM,CMSNRECF  F OR V FORMAT                 GP12063
         MVC   FILLRECL+2(2),CMSNLREC  MAX RECORD LENGTH        GP12063
         PRTLIST FORMCMSN    FORMAT FILE HEADER                 GP12063
         B     PREREAD       DO ANOTHER                         GP12063
         SPACE 1                                                GP12063
FORMCMSN FDPRT FILNUM,I,RADJ,NL,LEN=9                           GP12063
         FDPRT FILNAME,PAD              FILE NAME               GP12063
         FDPRT FILTYPE,PAD              FILE TYPE               GP12063
         FDPRT CMSNLANG,PAD             PROGRAM                 GP12063
         FDPRT CMSNA#,PAD               FILE QUAL ?             GP12063
         FDPRT FILRECFM,PAD             RECORD FORMAT           GP12063
         FDPRT FILLRECL,I,DEBL,PAD,LEN=5  REC.LENGTH            GP12063
         FDPRT FIL#REC,I,DEB,RADJ,LEN=8   REC.COUNT             GP12063
         FDPRT CMSNCYR,PADL,RADJ,LEN=4    YEAR                  GP12063
         FDPRT '-'                                              GP12063
         FDPRT CMSNCDY,HEX                DAY                   GP12063
         FDPRT '-'                                              GP12063
         FDPRT CMSNCMO,HEX,PADR           MONTH                 GP12063
         FDPRT CMSNCHH,HEX,PADL           HOUR                  GP12063
         FDPRT ':'                                              GP12063
         FDPRT CMSNCMM,HEX,PADR           MINUTE                GP12063
         FD    *END                                             GP12063
         POP   USING                                            GP12063
         TITLE 'C M S L O A D  ***  PASS2 - BUILD DATA SETS'    GP12063
         PUSH  USING
PASS2    PRTV  HEADP2,TITLE=4  MAKE A TITLE                     GP12063
         SR    R6,R6         FILE COUNT
         LA    R9,FILHEAD    POINT TO FILE NAME CHAIN           GP12063
         USING FILDSECT,R9   DECLARE IT                         GP12063
         ICM   R0,15,FILLINK ARE THERE ANY FILES TO LOAD ?      GP12063
         BNZ   SCANFILE                                         GP12063
         PRTL  '0***** NO CMS FILES FOUND *****'                GP12063
         MVICC 8             SET ERROR CODE                     GP12063
         B     ENDOK         CLOSE AND WRAP UP                  GP12063
DCF1     DC    F'1'          POINT TO FIRST BLOCK               GP12063
         SPACE 1                                                GP12063
SCANFILE ICM   R9,15,FILLINK   GET NEXT DEFINITION              GP12063
         BZ    GOALLOC       DONE; GO TO ALLOCATION             GP12063
         LA    R15,FILTYPE   POINT TO TYPE OF FILE              GP12063
         BAL   R14,FINDTYPE  FIND MATCHING PDS RECORD           GP12063
           B   ADDFILE       MERGE FILE INFORMATION             GP12063
         GETMAIN R,LV=PDSSIZE   GET STORAGE FOR PDS BLOCK       GP12063
         USING PDSDSECT,R1   DECLARE IT                         GP12063
         XC    PDSDSECT(PDSSIZE),PDSDSECT   CLEAR IT            GP12063
         MVC   PDSLINK,PDSLINK-PDSDSECT(R2)  CHAIN TO PRIOR     GP12063
         ST    R1,PDSLINK-PDSDSECT(,R2)  LINK IN                GP12063
         MVC   PDSNAME,FILTYPE  ESTABLISH THE NAME              GP12063
         MVC   PDSRECFM,FILRECFM  PRESET RECORD FORMAT          GP12063
         INC   (R6),WORK=R15                                    GP12063
         ST    R6,PDSNUM                                        GP12063
         DROP  R1                                               GP12063
ADDFILE  LR    R8,R1         USE IT                             GP12063
         USING PDSDSECT,R8   DECLARE IT                         GP12063
         ST    R8,FIL@PDS    MAKE POINTER FOR QUICK REFERENCE   GP12063
         L     R0,FIL#REC    GET THE RECORD COUNT               GP12063
         A     R0,PDS#REC    ADD IT IN                          GP12063
         ST    R0,PDS#REC    UPDATE IT                          GP12063
         INC   PDSMEM        UPDATE MEMBER COUNT                GP12063
         L     R0,PDSLRECL   GET PDS SIZE                       GP12063
         L     R1,FILLRECL   GET PDS SIZE                       GP12063
         CLC   PDSRECFM,FILRECFM  MATCHING RECORD FORMATS ?     GP12063
         BE    ADDFSIZE      YES; CHECK SIZE                    GP12063
         CLI   PDSRECFM,C'V'   VARIABLE ?                       GP12063
         BE    *+8           YES                                GP12063
         AH    R0,=H'4'      CONVERT AND EXPAND                 GP12063
         CLI   FILRECFM,C'V'   VARIABLE ?                       GP12063
         BE    *+8           YES                                GP12063
         AH    R1,=H'4'      CONVERT AND EXPAND                 GP12063
         MVI   PDSRECFM,C'V'  WRITE AS V                        GP12063
ADDFSIZE MAX   R1,(R0)       GET LARGER VALUE                   GP12063
         ST    R1,PDSLRECL                                      GP12063
         B     SCANFILE                                         GP12063
         SPACE 2                                                GP12063
GOALLOC  LA    R8,PDSHEAD    POINT TO PDS HEADER AGAIN          GP12063
GOALLLUP ICM   R8,15,PDSLINK   GET NEXT ENTRY                   GP12063
         BZ    PASS3         DONE; LOAD DATA                    GP12063
         PRTLIST FORMPDS     FORMAT PDS INFO                    GP12063
         ICM   R0,15,PDSMEM  ANY MEMBERS ?                      GP12063
         BNP   ALLSKIP       NO; BYPASS                         GP12063
         ICM   R0,15,PDS#REC  ANY DATA ?                        GP12063
         BP    NEWVOL        YES; PROCESS                       GP12063
ALLSKIP  OI    PDSFLAGS,PFSKIP  DO NOT PROCESS                  GP12063
         PRTL  ' *** SKIPPED - EMPTY'                           GP12063
         B     GOALLLUP      DO ANOTHER                         GP12063
         SPACE 1
NEWVOL   MVI   JFCBNVOL,1    CHANGE TO ONE VOLUME               GP12063
         MVC   JFCBVOLS+6(L'JFCBVOLS-6),BLANKS  CLEAR THE REST  GP12063
         OI    JFCBTSDM,JFCVSL+JFCNWRIT  KICK IT IN THE PANTS   GP12063
         MVI   JFCBLTYP,JFCSL  DON'T SUPPORT SUL                GP12063
         NI    JFCBIND1,255-JFCGDG-JFCPDS  NO MEMBER            GP12063
         XC    JFCBELNM,JFCBELNM  NO MEMBER, NO GDG NAME        GP12063
         NI    JFCBIND2,JFCBRWPW  RESET ALL BUT PSWD REQUEST    GP12063
         XC    JFCDSORG(JFCBNVOL-JFCDSORG),JFCDSORG  KILL DCB   GP12063
         LA    R0,DCBRECF+DCBRECBR   SET FB                     GP12063
         L     R1,PDSLRECL   GET LRECL                          GP12063
         CLI   PDSRECFM,C'F'                                    GP12063
         BE    SETRECFM                                         GP12063
         LA    R0,DCBRECV+DCBRECBR   SET VB                     GP12063
         CH    R1,=H'20000'  (CHECK HALF-TRACK-4 ??)            GP12063
         BNH   SETRECFM      USABLE ?                           GP12063
         L     R1,=X'00008000'   SET SPANNED FLAG               GP12063
         LA    R0,DCBRECV+DCBRECBR+DCBRECSB  SET VBS            GP12063
*   N.B. BLOCKSIZE WILL BE CALCULATED BY @DCBEXIT ON OPEN       GP12063
SETRECFM STC   R0,JFCRECFM   SET F OR V                         GP12063
         STH   R1,JFCLRECL   SET RECORD LENGTH                  GP12063
         MVC   JFCDSRG1,JFCORGPO   MAKE A PDS                   GP12063
         L     R1,PDS#REC    GET NUMBER OF RECORDS              GP12063
         M     R0,PDSLRECL   BYTES NEEDED                       GP12063
         D     R0,=F'15000'  COMPLETELY ARBITRARY TRACK CAP.    GP12063
         MAX   R1,=F'2'        AT LEAST ONE                     GP12063
         STCM  R1,7,JFCBPQTY   SET PRIMARY                      GP12063
         STCM  R1,7,JFCBSQTY   AND SECONDARY SPACE              GP12063
         L     R1,PDSMEM     GET MEMBER COUNT                   GP12063
         AH    R1,=H'4'      ROUND AND ADD ONE                  GP12063
         SRA   R1,2          ASSUME 4 PER DIRECTORY BLOCK       GP12063
         STCM  R1,7,JFCBDQTY  SET DIRECTORY QUANTITY            GP12063
         MVI   JFCBCTRI,JFCBTRK  AMOUNT IS IN TRACKS            GP12063
         MVI   JFCBVLCT,1    NO SECONDARY ALLOCATION ON SCRATCH GP12063
         LH    R4,PREFIXLN   GET PREFIX LENGTH                  GP12063
         LA    R3,JFCBDSNM(R4) GET INSERTION ADDRESS            GP12063
         MVC   0(8,R3),PDSNAME   COMPLETE FILE NAME             GP12063
         MVC   PDSVOL,JFCBVOLS   REMEMBER THE VOLUME IT'S ON    GP12063
         SERVICE ALCDS,JFCBDSNM  ALLOCATE THIS PDS              GP12063
         OI    PDSFLAGS,PFDONE   SHOW ATTEMPTED                 GP12063
         CH    R15,=H'4'     CHECK RETURN                       GP12063
         BH    ALLOCERR                                         GP12063
         BL    GOALLLUP      DO ANOTHER                         GP12063
         PRTL  ' ----- DUPLICATE DATA SET FOUND; USING THAT -----'
         OICC  4
         B     GOALLLUP
         SPACE 1
ALLOCERR ST    R15,DB                                           GP12063
         PRTLIST MSGBADAL                                       GP12063
         MVC   JFCBVOLS(6),VOLLIST  GET NEXT VOLUME IN LIST
         MVC   VOLLIST,VOLLIST+6  CYCLE THE VOLUME LIST
         CLI   JFCBVOLS,C' '  IS THERE ONE ?
         BH    NEWVOL        YES; RETRY THE ALLOCATION
         PRTL  '*** NO MORE VOLUMES AVAILABLE ***',CC=NO
         SERVTERM ,          CLOSE AND FREE
         ABEND 1137,DUMP     JUST IN CASE
         B     GOALLLUP      DO NEXT FILE                       GP12063
         SPACE 1                                                GP12063
FORMPDS  FDPRT PDSNUM,I,RADJ,NL,LEN=9                           GP12063
         FDPRT PDSNAME,PAD                                      GP12063
         FDPRT PDSRECFM,PAD,RADJ,LEN=4                          GP12063
         FDPRT PDSLRECL,I,DEBL,PAD,LEN=8                        GP12063
         FDPRT PDSMEM,I,PAD,RADJ,LEN=8                          GP12063
         FDPRT PDS#REC,I,PAD,RADJ,LEN=9                         GP12063
         FD    *END                                             GP12063
         SPACE 1
MSGBADAL FDPRT ' ALLOCATION FOR',PAD,NL
         FDPRT JFCBDSNM,PAD
         FDPRT 'FAILED; R15='
         FDPRT DB,4,I,DEB
         FD   *END
         POP   USING                                            GP12063
         TITLE 'C M S L O A D  ***  PASS3 - LOAD DATA'          GP12063
PASS3    PRTV  HEADP3,TITLE=4  MAKE A TITLE                     GP12063
         LA    R10,FILHEAD   POINT TO HEAD OF FILE CHAIN
         USING FILDSECT,R10  DECLARE THIS ENTRY
NEXTFILE ICM   R10,15,FILLINK    GET INFO ON NEXT FILE
         BZ    ENDAD         ALL DONE ?
         L     R8,FIL@PDS    GET PDS RECORD
         USING PDSDSECT,R8
         MVC   FILHEAD,FILLINK  UNCHAIN CURRENT ENTRY
         TM    FILFLAGS,FFSKIP    EMPTY OR BAD FILE ?           GP12063
         BNZ   NEXTFILE           YES; SKIP                     GP12063
         TM    PDSFLAGS,PFSKIP    UNALLOCATED ?                 GP12063
         BNZ   NEXTFILE           YES; SKIP                     GP12063
         SPACE 1
         MVC   OUTDCB(PATDCBLN),PATDCB      REFRESH OUTPUT DCB
         SPACE 1
         XC    JFCDSORG(JFCBNVOL-JFCDSORG),JFCDSORG  KILL DCB
         XC    JFCBPQTY,JFCBPQTY  NO SPACE
         XC    JFCBSQTY,JFCBSQTY  NO SECONDARY
         XC    JFCBDQTY,JFCBDQTY  NO DIRECTORY/INDEX
         MVI   JFCBNVOL,1    CHANGE TO ONE VOLUME
         MVC   JFCBVOLS(6),PDSVOL   SET THE SERIAL
         OI    JFCBTSDM,JFCVSL+JFCNWRIT  KICK IT IN THE PANTS
         MVI   JFCBLTYP,0    CLEAR
         MVI   JFCBIND1,JFCPDS   MEMBER SUPPLIED
         NI    JFCBIND2,JFCBRWPW  RESET ALL BUT PSWD REQUEST
         OI    JFCBIND2,JFCOLD  FAKE AN OLD DATASET
         MVC   JFCBELNM,FILNAME  ADD MEMBER NAME
         MVC   JFCBDSNM,PREFIX  MOVE START OF DSN
         LH    R4,PREFIXLN   GET PREFIX LENGTH
         LA    R3,JFCBDSNM(R4) GET INSERTION ADDRESS
         MVC   0(8,R3),FILTYPE   COMPLETE FILE NAME
         SPACE 1
         OPEN  (OUTDCB,(OUTPUT)),TYPE=J  CREATE A MEMBER
         TM    DCBOFLGS-IHADCB+OUTDCB,DCBOFOPN  OPEN NOW ?
         BZ    OPENFAIL
         SR    R1,R1
         ICM   R1,3,DCBLRECL-IHADCB+OUTDCB
         TM    DCBRECFM-IHADCB+OUTDCB,DCBRECF  FIXED (OR U?)
         BNZ   *+4+4         USE FULL LENGTH
         SH    R1,=H'4'
         ST    R1,MAXOUT     SET MAXIUM OUTPUT LENGTH
         ZI    FLAGS,FGREREAD+FGFIX+FGRDW+FGCONT+FGDEBUG  RESET FLAGS
         PRTLIST FORMLOAD
*CLC =C'DMAP    MODULE',FILNAME   **********DEBUG***********
*BNE  *+8
*OI   FLAGS,FGDEBUG  SHOW SPLITS
*LA R3,OUTDCB
*USING IHADCB,R3
*DBO FORMLOAD,LIST=(PDSRECFM,PDSLRECL,DCBRECFM,DCBLRECL,DCBBLKSI)
*DROP R3
         CLI   FILRECFM,C'V' FIXED FORMAT ?
         BE    PROCESS       NO
         OI    FLAGS,FGFIX   SHOW FIXED
         B     PROCESS       YES; KEEP READING
         SPACE 1
OPENFAIL PRTLIST FORMNOPN    TELL USER
         ABEND 213,DUMP
         SPACE 1
FORMLOAD FDPRT 'Loading file',NL
         FDPRT FILNUM,I,RADJ,PAD,LEN=9                           \
         FDPRT JFCBDSNM,PAD              FILE NAME               \
         FDPRT JFCBELNM,PAD             FILE TYPE                \
         FDPRT FILRECFM,PAD
         FDPRT FILLRECL,I,DEBL,LEN=5
         FDPRT 'Out',PAD
         FDPRT PDSRECFM,PAD
         FDPRT PDSLRECL,I,DEBL,LEN=5
         FD    *END
         SPACE 1
FORMNOPN FDPRT 'OPEN failed for file',NL
         FDPRT FILNUM,I,RADJ,PAD,LEN=9                           \
         FDPRT JFCBDSNM,PAD              FILE NAME               \
         FDPRT JFCBELNM,DEB,PAD         FILE TYPE                \
         FDPRT FILRECFM,PAD
         FDPRT FILLRECL,I,DEBL,LEN=5
         FD    *END
         DROP  R8
         SPACE 2
*        AT THIS POINT WE HAVE INPUT, AND A VALIDITY-CHECKED OUTPUT
*        JFCB. WE READ INPUT BLOCKS, ALLOCATING THE .CMSLOAD FILE
*        IF OUTPUT IS CLOSED, UNTIL A .CMSN BLOCK OR END-FILE ON INPUT*
         SPACE 1
PROCESS  LM    R7,R8,BLKAD   GET THE PRIOR BLOCK ADDRESS AND LENGTH
         TM    FLAGS,FGREREAD  PROCESS THE BLOCK AGAIN ?
         BNZ   REREAD        YES
         READ  MYDECB,SF,INDCB,(R7),'S',MF=E  READ A BLOCK
         CHECK MYDECB          WAIT FOR COMPLETION
         TM    IXFLAG2,IX2REGET   NEED TO READ ON NEXT FILE/VOLUME ?
         BZ    NOCONC        NO
         NI    IXFLAG2,255-IX2REGET  RESET IT
         B     PROCESS       REREAD
NOCONC   LH    R8,DCBLRECL-IHADCB+INDCB   GET BLOCK LENGTH      GP12063
         LTR   R8,R8         SIZE READ                          GP12063
         BNP   PROCESS       TOO BAD                            GP12063
REREAD   STM   R7,R8,BLKAD   STASH THE ADDRESS AND LENGTH
         NI    FLAGS,255-FGREREAD         RESET THE FLAGS       GP12063
         CLC   CMSHEAD,0(R7)  IS IT A CMS RECORD ?
         BNE   PROCERR       NO; IGNORE IT
         LA    R0,L'CMSHEAD+1     START OF TEXT
         CLI   L'CMSHEAD(R7),C'N'  NAME RECORD ?
         BE    LOGEND        YES; SET LOGICAL END-FILE
         CLI   L'CMSHEAD(R7),C'F'  FIXED LENGTH RECORD ?
         BE    NEWBLOCK      YES; PROCEED
         CLI   L'CMSHEAD(R7),C'S'  FIXED LENGTH RECORD ?
         BE    NEWBLOCK      YES; PROCEED
         CLI   L'CMSHEAD(R7),C'V'  VARIABLE ?
         BE    NEWBLOCK      YES; PROCEED
         CLI   L'CMSHEAD(R7),C' '  UNSPECIFIED ?                GP12063
         BNE   PROCERR       ELSE IGNORE IT
NEWBLOCK TM    FLAGS,FGRDW+FGCONT  SPLIT RECORD ?
         BZ    NEWBLOKE      NO
         CLC   CURRTYPE,L'CMSHEAD(R7)  SAME TYPE ?
         BE    NEWBLOKE      YES
         BAL   R9,PUTONE     PUT OUT ONE RECORD
         PRTL  '*** SPLIT RECORD NOT TERMINATED ***',CC=NO
NEWBLOKE MVC   CURRTYPE,L'CMSHEAD(R7)  SAVE CURRENT BUFFER TYPE
 TM FLAGS,FGDEBUG *******DEBUG MODE ?*
 BZ NOBUG001
 DBO NEWBLOKE,LIST=((0(R7),8))
NOBUG001 DS 0H
         AR    R7,R0         BUMP OVER HEADER
         SR    R8,R0         ADJUST LENGTH
         STM   R7,R8,INPAD   SAVE START OF NEW RECORD FOR DEBUGGING
         B     GETREC
         SPACE 1
PROCERR  PRTLIST PROCSNAP    DISPLAY THE BAD RECORD
         INC   NUMBAD,WORK=R1  COUNT THE BAD RECORDS
         CH    R1,=H'5'      MORE THAN FIVE ?
         BNH   PROCESS       NO; KEEP GOING
         SERVTERM ,
         ABEND 001,DUMP      QUIT NASTILY
         SPACE 2
*        LOOP FOR RECORD PROCESSING: RECORDS ARE DEBLOCKED, AND
*        SPECIAL CONSIDERATION IS MADE FOR RECORDS (OR RECORD LENGTHS)
*        SPLIT BETWEEN TWO (OR MORE) BLOCKS.
*        NOTE THAT THE MAXIMUM OUTPUT RECORD SIZE IS ARBITRARY, AND
*        WAS CHOSEN TO MATCH THE TSO RECFM=VB DEFAULT.
         SPACE 1
         USING INPDSECT,R7   DECLARE BUFFER
GETREC   TM    FLAGS,FGCONT  DOING CONTINUATION ?
         BZ    NEWREC        NO
 TM FLAGS,FGDEBUG *******DEBUG MODE ?*
 BZ NOBUG002
 DBO GETREC,LIST=((0(R7),8),FLAGS)
NOBUG002 DS 0H
         NI    FLAGS,255-FGCONT  RESET THE FLAGS
         TM    FLAGS,FGRDW   SPLIT RDW ?
         BZ    HAVELEN       NO
         NI    FLAGS,255-FGRDW  RESET SPLIT FLAG
         IC    R3,INBUF      LOAD SECOND BYTE OF RDW
         LA    R7,1(,R7)     FIX NEXT ADDRESS
         BCTR  R8,0          SET NEW LENGTH
         LTR   R3,R3         SET CONDITION CODE
         BNP   ENDREC        THE WHOLE THING WASN'T WORTH IT
         B     HAVELEN       MOVE NEXT FRAGMENT
NEWREC   XC    OUTRDW(256),OUTRDW   CLEAR NEXT OUTPUT RECORD    GP12063
NEXTREC  L     R3,FILLRECL   SET LENGTH FOR FIXED (ALSO CLEARS)
         TM    FLAGS,FGFIX   CARD FORMAT ?                      GP12063
         BNZ   HAVELEN       YES                                GP12063
         CH    R8,=H'1'      ANY MORE IN THIS BLOCK ?
         BL    PROCESS       NO; READ ANOTHER BLOCK
         BH    HAVERDW       YES; USE RDW
*        WE HAVE AN RDW SPLIT BETWEEN BLOCKS - IS THIS POSSIBLE ?
         ICM   R3,2,INRDW    LOAD FIRST LENGTH BYTE
         OI    FLAGS,FGRDW+FGCONT  SHOW SPLIT RDW
         B     PROCESS       AND READ NEXT BLOCK
HAVERDW  ICM   R3,3,INRDW    LOAD THE LENGTH
         BZ    NULLRDW       LOGICAL END OF BLOCK
         LA    R7,2(,R7)     SKIP OVER IT
         SH    R8,=H'2'      ADJUST RESIDUAL COUNT
         BZ    GETCONT       NEED ANOTHER BLOCK
HAVELEN  LR    R2,R3         COPY LENGTH TO MOVE
         MIN   R2,(R8)       IF THE DATA ARE AVAILABLE ?
         L     R0,MAXOUT     GET MAXIMUM OUTPUT SIZE
         S     R0,OUTWORD    LESS SIZE ALREADY STASHED
         MIN   R2,(R0)       WILL IT FIT ?
         L     R1,OUTWORD    GET CURRENT LENGTH
         LA    R14,OUTREC(R1)  GET NEXT INSERTION ADDRESS
 TM FLAGS,FGDEBUG *******DEBUG MODE ?*
 BZ NOBUG003
 DBO NEWREC,LIST=((0(R7),8),FLAGS)
NOBUG003 DS 0H
         AR    R1,R2         MAKE NEW LENGTH
         STH   R1,OUTRDW     SET NEW LENGTH
         LTR   R1,R2         ANYTHING TO MOVE ?
         BNP   DONEMOV       HUH ?  BUT PREVENT ABEND
         LR    R15,R1        COPY IT
         LA    R0,INBUF      COPY THE INPUT ADDRESS
         MVCL  R14,R0        COPY TO OUTPUT RECORD
DONEMOV  SR    R8,R2         MAKE RESIDUAL INPUT LENGTH         GP12063
         BM    GETCONT       NOT ENOUGH; GET NEXT FRAGMENT
         AR    R7,R2         NEW INPUT LOCATION
         SR    R3,R2         REMOVE FRAGMENT MOVED FROM LENGTH
         BNP   DONEREC       DONE; WRITE OUTPUT
         CLC   OUTWORD,MAXOUT  IS BUFFER FULL ?
         BL    GETCONT       NO; GET CONTINUATION BLOCK
DONEREC  LA    R9,ENDWRECK   SET RETURN FROM IN-LINE CALL
         SPACE 1
PUTONE   DS    0H
         ST    R3,DB         SAVE A LITTLE
         TM    FLAGS,FGFIX   DOING FIXED LENGTH ?
         BZ    DONEFIX       NO
         CLI   OUTREC,X'00'  HEX ZERO IN OUTPUT ?
         BNE   CHECKOUT      NO
         CLC   OUTREC+1(79),OUTREC  ALL ZEROES ?
         BNE   CHECKOUT      NO
         B     ENDBLOCK      SKIP THE PUT AND REST OF BLOCK
         SPACE 1
CHECKOUT L     R3,FILLRECL   GET RECORD LENGTH
         LA    R2,OUTREC     SOURCE
         TM    DCBRECFM-IHADCB+OUTDCB,DCBRECV  IN F TO OUT V ?
         BNZ   MAKERDW
         PUT   OUTDCB        GET A RECORD AREA
         LR    R0,R1
         LH    R1,DCBLRECL-IHADCB+OUTDCB  GET OUTPUT LENGTH
         ICM   R3,8,BLANKS   REQUEST BLANK PADDING
         B     RECMVCL       MOVE AND COUNT
         SPACE 1
MAKERDW  LA    R4,4(,R3)     LENGTH WITH RDW
         STH   R4,DCBLRECL-IHADCB+OUTDCB  TELL QSAM THE LENGTH
         PUT   OUTDCB        GET A RECORD AREA
         STH   R4,0(,R1)     LENGTH
         STCM  R4,12,2(R1)   FLAGS
         LA    R0,4(,R1)     DESTINATION
         LR    R1,R3         MOVE LENGTH
         B     RECMVCL
         SPACE 1
DONEFIX  SLR   R1,R1
         ICM   R1,3,OUTRDW   ANY DATA IN RECORD ?
         BZ    ENDBLOCK      NO; SKIP PUT AND REST OF BLOCK
         LA    R3,4(,R1)     ALLOW FOR LENGTH OF RDW
         STH   R3,OUTRDW     FIX IT
         STH   R3,DCBLRECL-IHADCB+OUTDCB  TELL QSAM THE LENGTH
         LA    R2,OUTRDW     WRITE RDW+TEXT
         PUT   OUTDCB         WRITE OUTPUT RECORD
         LR    R0,R1
         LR    R1,R3
RECMVCL  MVCL  R0,R2         MOVE TEXT
         INC   NUMREC        COUNT RECORDS WRITTEN
         B     ENDREC
         SPACE 1
ENDBLOCK SR    R8,R8         LOGICAL END OF BLOCK               GP12063
ENDREC   XC    OUTRDW(256),OUTRDW   CLEAR A BIT                 GP12063
         NI    FLAGS,255-FGRDW-FGCONT
         L     R3,DB         RESTORE
         BR    R9            RETURN TO CALLER
         SPACE 1
ENDWRECK LTR   R3,R3         MORE INPUT TO GET ?
         BP    HAVELEN       YES; GET NEXT FRAGMENT
         LTR   R8,R8         ANY BUFFER DATA LEFT ?
         BP    NEXTREC       YES; PROCESS
NULLRDW  ZI    FLAGS,FGCONT+FGRDW   RESET FLAGS
         B     PROCESS       GET NEXT BLOCK
GETCONT  OI    FLAGS,FGCONT  SHOW READ FROM SECOND LOCATION
         B     PROCESS       CURSE, CURSE, AND RECURSE
         SPACE 1
LOGEND   TM    FLAGS,FGCONT  CONTINUATION PENDING ?
         BZ    LOGENDNC      NO
         BAL   R9,PUTONE     WRITE LAST RECORD
         PRTL  '*** SPLIT RECORD NOT TERMINATED ***',CC=NO
 EX 0,* ***************DEBUG****************
LOGENDNC CLOSE (OUTDCB)      CLOSE THE FILE
         FREEPOOL OUTDCB     RELEASE BUFFERS
         ICM   R0,15,FIL#REC  ANY DATA ?                        GP12063
         BP    NEXTFILE      YES; PROCEED                       GP12063
         OI    FILFLAGS,PFSKIP  DO NOT PROCESS                  GP12063
         B     NEXTFILE      YES; KEEP READING
         SPACE 2
EODAD    TM    FLAGS,FGPASS  SCANNING OR LOADING ?
         BNZ   EODAD2        PASS 2 - LOADING
         OI    FLAGS,FGPASS  SHOW DONE WITH SCAN
         CLOSE (INDCB)          CHEAT A LITTLE                  GP12063
*FAILS*  POINT INDCB,DCF1          REPOSITION                   GP12063
         NI    IXFLAG2,255-IX2REGET  RESET IT
         NI    DCBOFLGS-IHADCB+INDCB,255-DCBOFPPC  RESET 1ST    GP12063
         OPEN  (INDCB,(INPUT,REREAD)) GET REWIND TO WORK ?      GP12063
         B     PASS2
EODAD2   ICM   R0,3,OUTRDW
         BNZ   EODAT         TOO BAD
         TM    FLAGS,FGCONT
         BZ    ENDAD
EODAT    PRTL  '0*** PREMATURE END - EXPECTING DATA ***'
         BAL   R9,PUTONE     WRITE LAST RECORD
         SPACE 1             CATALOG, ETC.
EXIT16   MVICC 16
         B     ENDOK
         SPACE 1
ENDAD    OI    FLAGS,FGEOF   SHOW EOF READ
         TM    OUTDCB+DCBOFLGS-IHADCB,DCBOFOPN  OUTPUT OPEN ?
         BZ    ENDOK         NO
         PRTL  '0*** PREMATURE END - NO NAME RECORD FOUND ***'
         BAL   R9,PUTONE     WRITE LAST RECORD
         B     EXIT16        CATALOG LAST FILE
ENDOK    CLOSE (INDCB,DISP,OUTDCB)  CLOSE ALL FILES
         SERVTERM ,          CLOSE AND FREE REST
         L     R9,RETCODE    GET RETURN CODE                    GP12063
         PGMEXIT RC=(R9)     RETURN TO SYSTEM                   GP12063
 DBO MODE=C *****DEBUG*****
         SPACE 1
         PUSH  USING                                            GP12063
*   FINDTYPE - LOCATE PDS FILE DEFINITION FOR NAME IN R15 (CL8) GP12063
*   RETURN TO R14 IF FOUND WITH ADDR IN R1                      GP12063
*   RETURN TO 4(R14) WITH LINK ADDRESS IN R2                    GP12063
FINDTYPE LA    R2,PDSHEAD    POINT TO CHAIN OF PDS DEFINITIONS  GP12063
         USING PDSDSECT,R2   POINT TO CHAIN OF PDS DEFINITIONS  GP12063
FINDTLUP ICM   R1,15,PDSLINK GET NEXT ENTRY, IF ANY             GP12063
         BZ    4(,R14)       RETURN NOT FOUND                   GP12063
         CLC   PDSNAME-PDSDSECT(8,R1),0(R15)   REQUESTED ENTRY ?
         BH    4(,R14)       NOT HERE; RETURN INSERT POINT      GP12063
         LR    R2,R1         USE IT                             GP12063
         BL    FINDTLUP      NO; TRY AGAIN                      GP12063
         BR    R14           RETURN FOUND                       GP12063
         POP   USING                                            GP12063
         SPACE 2
SYSPRINT PRTWORK SYSPRINT,SYSTERM,TITLE=5
         SPACE 1
HEADER   VCON  '#C M S L O A D'
HEADP1   VCON  '     Entry Name   / Type',END=HEADP1ND
         DC    C'     Command  Tp Format'
         DC    C'   Records     Date   Time'
HEADP1ND VCON  *END
HEADP2   VCON  '     Entry  PDS    ',END=HEADP2ND
         DC    C'    Format'
         DC    C'      Members   Records'
HEADP2ND VCON  *END
HEADP3   VCON  '                Processing messages'
         SPACE 1
ALLOFAIL FDPRT '*** ALLOCATION OF DATASET',NL
         FDPRT JFCBDSNM,DEB,PAD
         FDPRT 'ON VOLUME'
         FDPRT JFCBVOLS,6,DEB,PAD
         FDPRT 'FAILED (CODE'
         FDPRT DB,4,I,DEB,PADL
         FDPRT ')'
         FDPRT *END
         SPACE 1
PROCSNAP FDOPT CC=C'0'
         FDOPT '*** INVALID CMS RECORD READ ***',NL
         FDSNAP INBUF,64,DUAL,NOABS,OFFSET,BASE=INBUF
         FDPRT *END
         SPACE 1
MSGDSNCA FDPRT 'CATALOGED',PAD
         FDCLC ZEROES,DB,4,BE=MSGDSNCX
         FDPRT '(CODE',PAD
         FDPRT DB,4,I,DEB
         FDPRT ')'
MSGDSNCX FDPRT *END
         SPACE 1
INDCB    DCB   DDNAME=INPUT,DSORG=PS,MACRF=RP,EODAD=EODAD,RECFM=U,     *
               EXLST=EXLIST
EXLIST   DC    0A(0),X'05',AL3(0),X'80',AL3(INPEXITP)
INPEXITP DCBEXITD PREFIX=IX,FLAG1=IX1FULLT+IX1TRUNC,                   *
               FLAG2=IX2CONCT+IX2CCERR+IX2TARER,                       *
               FLAG3=IX3BLKTB
         SPACE 1
PATDCB   DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=PL,EXLST=EXLUST     GP12063
PATDCBLN EQU   *-PATDCB                                         GP12063
OUTDCB   DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=PL,EXLST=EXLUST
EXLUST   DC    0A(0),X'05',AL3(0),X'07',AL3(0),X'80',AL3(OUTEXITP)
OUTEXITP DCBEXITD PREFIX=OX,FLAG1=OX1TRUNC,                            *
               FLAG2=OX2CCERR,                                         *
               FLAG3=OX3BLKWY
CMSFILE  DC    0CL5' '               CMS COMMON FILE HEADER      (5)
CMSHEAD  DC    0CL4' ',X'02',C'CMS',C'N'  CMS COMMON BLOCK HEADER(4)
         SPACE 1
TRNAME   DC    256C'$'       DSN CONVERSION TABLE
         TRENT TRNAME,C' ',C' ',0      ZERO OR BLANK IS BLANK
         TRENT ,C'.',C'.',C'@',C'@',C'#',C'#'  NATIONALS
         TRENT ,(*-TRNAME+C' '),(X'81',9)      a-i
         TRENT ,(*-TRNAME+C' '),(X'91',9)      j-r
         TRENT ,(*-TRNAME+C' '),(X'A2',8)      s-z
         TRENT ,(*-TRNAME),(C'A',9)            A-I
         TRENT ,(*-TRNAME),(C'J',9)            J-R
         TRENT ,(*-TRNAME),(C'S',8)            S-Z
         TRENT ,(*-TRNAME),(C'0',10)           0-9
         SPACE 1
SAVE     DSECT ,             SAVE AND WORK AREA
DB       DS    D
ZEROES   DS    D             CONSTANT
         SERVDEFS ,          SUPPORT VALUES                     GP12063
FILHEAD  DS    A             HEAD FOR FILE NAME CHAIN           GP12063
PDSHEAD  DS    A             HEAD FOR PDS DATA CHAIN            GP12063
SETSAVE  DS    6F            SETLIST SAVE AREA
         READ  MYDECB,SF,INDCB,1,2,MF=L
         DS    0D
         IEFJFCBN ,           DEFINE LOCAL OUTPUT JFCB
PREFIXLN DS    Y(0)          LENGTH OF DSN PREFIX
PREFIX   DS    CL44          PREFIX FROM OUTPUT DD
NEWDSN   DS    CL44          NEW DSN
VOLLIST  DS    CL(L'JFCBVOLS-6)' '  VOLUME LIST FOR OUTPUT
BLANKS   DS    CL80    2/2   CONSTANT BLANKS
BLKAD    DS    A       1/2   BLOCK ADDRESS
BLKLN    DS    F       2/2   BLOCK LENGTH (PRESENT)
INPAD    DS    A       1/2   RECORD ADDRESS
INPLN    DS    F       2/2   RECORD LENGTH
NUMBAD   DS    F             NUMBER OF BAD BLOCKS READ
NUMREC   DS    F             RECORDS WRITTEN IN CURRENT FILE
NUMDUPE  DS    F             NUMBER OF DUPLICATE FILE NAMES HIT
CURRTYPE DS    C             F/V OF CURRENT CMS BLOCK
FLAGS    DS    X             PROCESSING FLAGS
FGEOF    EQU   X'80'           EOF READ
FGREREAD EQU   X'40'           REPROCESS CURRENT BLOCK
FGCONT   EQU   X'20'           RECORD SPLIT BETWEEN BLOCKS
FGRDW    EQU   X'10'           RDW SPLIT BETWEEN BLOCKS
FGFIX    EQU   X'08'           FIXED FORMAT                     GP12063
FGPASS   EQU   X'02'           0-SCAN PASS   2-LOAD PASS        GP12063
FGDEBUG  EQU   X'01'           PRINT DEBUG INFO IF ON
MAXOUT   DS    F             LARGEST OUTPUT RECORD (LESS RDW)   GP12063
OUTWORD  DS    0A,Y(0) 1/5     ALLLOW RDW ACCESS WITH LOAD INSTRUCTION
OUTRDW   DS    Y(0,0)  2/5   RECORD DESCRIPTOR FOR OUTPUT RECORD
OUTREC   DS    128XL256      MAXIMUM LEGAL BUFFER + 8
         DS    128XL256      MAXIMUM LEGAL BUFFER + 8
OUTRECLN EQU   *-OUTREC-16   MAX LENGTH I WANT TO SUPPORT
SAVEEND  EQU   *
         SPACE 1
CMSDSECT DSECT ,             MAPPING OF CMSDUMP NAME RECORD     GP08158
         DS    XL2             ?                                GP08158
         DS    XL2             ?                                GP08158
         DS    XL2             ?                                GP08158
CMSN#REC DS    XL2           RECORDS IN FILE                    GP08158
         DS    XL2             ?                                GP08158
CMSNRECF DS    C             RECORD FORMAT                      GP08158
         DS    XL3             ?                                GP08158
CMSNLREC DS    XL2           RECORD LENGTH (MAX)                GP08158
         DS    XL2             ?                                GP08158
CMSNCYR  DS    CL2           YEAR CREATED                       GP08158
CMSNCMO  DS    X             MONTH (UNSIGNED HEX)               GP08158
CMSNCDY  DS    X             DAY   (UNSIGNED HEX)               GP08158
CMSNCHH  DS    X             HOUR  (UNSIGNED HEX)               GP08158
CMSNCMM  DS    X             MIN   (UNSIGNED HEX)               GP08158
         DS    CL4             ?                                GP08158
CMSNLANG DS    CL8           LANGUAGE OR PROCESSING PROGRAM ?   GP08158
*MSNAYR  DS    CL2           YEAR ALTERED                       GP08158
CMSNAMO  DS    X             MONTH (UNSIGNED HEX)               GP08158
CMSNADY  DS    X             DAY   (UNSIGNED HEX)               GP08158
CMSNAHH  DS    X             HOUR  (UNSIGNED HEX)               GP08158
CMSNAMM  DS    X             MIN   (UNSIGNED HEX)               GP08158
         DS    XL2             ?                                GP08158
         DS    XL2             ?                                GP08158
         DS    CL2             ?                                GP08158
         DS    XL2             ?                                GP08158
         DS    XL2             ?                                GP08158
         DS    C               ?                                GP08158
         DS    XL3             ?                                GP08158
         DS    XL2             ?                                GP08158
         DS    XL2             ?                                GP08158
CMSNAYR  DS    CL2             ?  YEAR ?                        GP08158
         DS    CL4             ?  LAST CMD ?                    GP08158
CMSNF1   DS    CL8           FILE NAME                          GP08158
CMSNF2   DS    CL8             QUALIFIER                        GP08158
CMSNA#   DS    CL2                                              GP08158
         SPACE 1
FILDSECT DSECT ,             ACCUMULATED FILE DESCRIPTORS
FILLINK  DS    A             NEXT ENTRY IN CHAIN
FIL@PDS  DS    A             PDS ENTRY FOR THIS FILE
FILNAME  DS    CL8           NAME OF FILE (MEMBER)
FILTYPE  DS    CL8           QUALIFIER (PDS)
FIL#REC  DS    F             NUMBER OF RECORDS     (H -> F)
FILLRECL DS    F             MAXIMUM RECORD LENGTH (H -> F)
FILNUM   DS    F             NUMBER OF FILE
FILRECFM DS    C             F / V / S  RECORD FORMAT
FILFLAGS DS    X             PROCESSING FLAGS
FFSKIP   EQU   X'80'           SKIP (LOAD MODULE) OR LRECL>32K
FFLERR   EQU   X'02'           RESTORE FAILED (BAD REC CNT, ETC.)
FFDONE   EQU   X'01'           RESTORED SUCCESSFULLY
FILSIZE  EQU   *-FILDSECT    ENTRY SIZE
         SPACE 1
INPDSECT DSECT ,             INPUT
INBUF    DS    0X            INPUT BYTE
INRDW    DS    XL2           INPUT LENGTH
         ORG   INPDSECT+69   SPECIAL CMSN MAPPING
INFILE   DS    CL8           CMS FILE NAME
INTYPE   DS    CL8           CMS FILE TYPE EXTENSION
         SPACE 1
PDSDSECT DSECT ,             ACCUMULATED PDS DESCRIPTORS
PDSLINK  DS    A             NEXT ENTRY IN CHAIN
PDSNAME  DS    CL8           NAME OF PDSE (MEMBER)
PDS#REC  DS    F             NUMBER OF RECORDS     (H -> F)
PDSLRECL DS    F             MAXIMUM RECORD LENGTH (H -> F)
PDSNUM   DS    F             NUMBER OF PDS
PDSMEM   DS    F             NUMBER OF MEMBERS
PDSVOL   DS    CL6           VOLUME SERIAL ALLOCATED ON
PDSRECFM DS    C             F / V / S  RECORD FORMAT
PDSFLAGS DS    X             PROCESSING FLAGS
PFSKIP   EQU   X'80'           SKIP (LOAD MODULE) OR LRECL>32K
PFLERR   EQU   X'02'           RESTORE FAILED (BAD REC CNT, ETC.)
PFDONE   EQU   X'01'           RESTORED SUCCESSFULLY
PDSSIZE  EQU   *-PDSDSECT    ENTRY SIZE
         SPACE 1
         PRINT &PRTSYS
CVTDSECT DSECT ,
         CVT   DSECT=YES
         IHACDE ,
         IEFUCBOB ,
         IEFTIOT1 ,
         DCBD  DEVD=DA,DSORG=PS
         IHADECB ,
         IEZIOB ,
         END   ,
//G.SYSTROPT DD *
NAME TESTPGM
TRACE GO
TRACE @DCBEXIT
COUNT 100000
STACK 10
//G.SYSPRINT DD SYSOUT=*
//INPUT    DD  DISP=(OLD,PASS),DSN=BREXX.FILE1,VOL=SER=BREXA2,UNIT=480,
//             LABEL=(1,NL),
//             DCB=(RECFM=U,BLKSIZE=805)
//OUTPUT   DD  DISP=OLD,UNIT=SYSALLDA,VOL=SER=WORK00,
//             SPACE=(TRK,(1,1)),
//             DSN=GERHARD.REX.FILE1
//
