@OBT TITLE '@ O B T A I N S  ***  FAST VTOC PROCESSOR SUBROUTINE'
*
*   THIS 'SUBROUTINE' IS INVOKED BY REPLACING 'OBTAIN' SVC MACROS
*   BY '@OBTAIN'.  THE EXPANDED CODE INVOKES THIS ROUTINE.
*   FOR THE SPECIFIED VOLUME (ONE AT A TIME), THE ENTIRE VTOC
*   IS READ INTO STORAGE USING ONE EXCP FOR ONE OR MORE TRACKS.
*
*   THE SYSTEM OBTAIN SVC IS INVOKED IF NO DD CARD FOR THE
*   VOLUME EXISTS, OR IF TOO SMALL A REGION IS SPECIFIED, OR
*   IF ANY PROCESSING OR I/O ERRORS OCCUR.
*
*   EXCEPT FOR SPEED AND JCL REQUIREMENTS, THIS PROCESS
*   IS TRANSPARENT TO THE USER.
*
*   REQUIREMENTS :
*     ASSEMBLY TIME :  REPLACE ALL ' OBTAIN ' CALLS BY ' @OBTAIN'
*       EITHER USE LOAD EP=@OBTAINS/ST R0,@OBTAIN OR LINK:       81152
*         IF THE MODULE IS LOADED, THE USER MAY DEFINE A DC      81342
*         @OBTAIN A(0) AND USE OPT=LOADED ON THE FIRST           81342
*         @OBTAIN MACRO IN AN ASSEMBLY. IF OPT=LOADED IS NOT
*         USED, THE DC WILL EXPAND IN THE FIRST @OBTAIN.         81342
*     LINK-EDIT :      INCLUDE SYSLIB(@OBTAINS)
*     EXECUTION :      REGION INCREASE SUFFICIENT FOR VTOC -
*                        FOR LARGE TSO/WYLBUR PACK, USE 500K MORE
*                        (APPROXIMATELY 102K PER 3330 CYLINDER)
*                      ONE DD CARD PER VOLUME TO BE ACCESSED -
*                           DDNAME MUST BE UNIQUE
         SPACE 1                                                 82005
*         IN MVS, IF NO SUCH DD STATEMENT IS FOUND,              82005
*         SVC 99 WILL BE USED TO ALLOCATE A VOLUME.              82005
*         (COURTESY OF S. METZ)                                  82005
         SPACE 1                                                 82005
*         IN A NON-MVS SYSTEM, AND IN MVS AT DTS,                82005
*         IF THE CALLER IS AUTHORIZED, AND NO DD CARD IS FOUND,
*         AND A //VOLMOUNT DD DUMMY IS PRESENT, IT WILL BE USED
*         FOR 'DYNAMIC' ALLOCATION. REAL ALLOCATION IS NOT USED
*         TO PREVENT ALLOCATION OF A DATASET.               81152
*
*   THE BASIC FULL-TRACK EXCP CODE IN THIS ROUTINE WAS MODIFIED
*   FROM THE 'FASTDISK/MAPDISK' PROGRAM FURNISHED TO THE SHARE,
*   INC. OS PROJECT BY GENE CZARCINSKI.                          82031
*   ORIGINAL FASTDISK/MAPDISK WRITTEN BY F.G. ROSS, DEPT OF STATE,
*     AND MODIFIED BY G. CZARCINSKI, NASA; AND OTHERS.
*   WARNING - 2321 CODE DELETED; DEBUGGED ONLY ON 2314/333X/3350 80330
*
*   ATTRIBUTES - NOT REUS/RENT; REUSABLE PER VOLUME REQUEST
*
*        SUGGESTED MACRO :
*           MACRO
*  &NM      @OBTAIN &PARM,&OPT=                                  81152
*           GBLB  &WX@OBT
*           GBLC  &MACPLAB
*  &MACPLAB SETC  '&NM'
*           AIF   ('&OPT' EQ '').OPTDEF                          81152
*           AIF   ('&OPT' EQ 'CLOSE').CLOSE                      81342
*           AIF  ('&OPT' EQ 'LOADED' OR '&OPT' EQ 'LOAD').OPTEXT 81342
*           AIF  ('&OPT' EQ 'SIZE' OR '&OPT' EQ 'RESERVE').CLOSE 81342
*           MNOTE 8,'INVALID OPT=&OPT '                          81152
*           AGO   .OPTDEF       BUT KEEP EXPANDING               81342
*  .OPTEXT  ANOP  ,                                              81342
*  &WX@OBT  SETB  1             MODULE WAS LOADED BY USER        81342
*  .OPTDEF  MACPARM R1,&PARM                                     81152
*  &MACPLAB LA    R14,OBT&SYSNDX.S+2  SET EXIT ADDRESS
*           ICM   R15,7,@OBTAIN+1  LOAD ADDRESS                  81152
*           BNZR  R15 .         CALL OBTAIN SUBROUTINE
*           AIF   (&WX@OBT).SECOND
*           B     OBT&SYSNDX.S  ELSE DO SVC
*  @OBTAIN  DC    V(@OBTAINS)   ADDRESS OF OBTAIN ROUTINE        81152
*           WXTRN @OBTAINS
*  &WX@OBT  SETB  1
*  .SECOND  ANOP  ,
*  OBT&SYSNDX.S SVC 27          INVOKE OBTAIN SVC
*           AGO   .MEND                                          81152
*  .CLOSE   ANOP  ,                                              81152
*  &NM      ICM   R15,7,@OBTAIN+1  EVER LOADED ?                 81152
*           BZ    OBT&SYSNDX.X  NO                               81152
*           AIF   ('&OPT' EQ 'CLOSE').CLOSCAL                    81342
*  &MACPLAB SETC  ''                                             81342
*           MACPARM R0,&PARM,OP=L   LOAD RESERVE SIZE            81342
*           L     R15,28(,R15)  GET @OBSERVE ADDRESS             81342
*           ST    R0,0(,R15)    SET STORAGE RESERVE SIZE         81342
*           AGO   .CLOSOUT                                       81342
*  .CLOSCAL L     R15,24(,R15)  LOAD @OBCLOSE ADDRESS            81342
*           BASR  R14,R15       CLOSE IT                         81152
*  .CLOSOUT ANOP  ,                                              81342
*  OBT&SYSNDX.X EQU *                                            81152
*  .MEND    MEND  ,
*
*   NOTE THAT THE MACRO IS RESTRICTED TO SINGLE OR MUTUALLY
*   ADDRESSABLE CSECTS.
*
*   FURTHER NOTE THAT THE SVC 27 CALL MUST BE TWO BYTES PRIOR
*   TO THE ADDRESS IN R14 TO PERMIT OS OBTAIN INVOKATION.
*
*   @OBTAINS WILL USE THE AVAILABLE REGION LESS 8K.  IF THIS
*   PRESENTS A PROBLEM, THE CALLING PROGRAM MAY ALTER THE
*   STORAGE RESERVE SIZE IN @OBSERVE.  DEFAULT IS 8K.
*   THE SIZE MAY BE SET BY LOADING THE VALUE TO BE RESERVED INTO
*   REGISTER ZERO AND USING @OBTAIN (R0),OPT=SIZE.               81342
*
*   IF THIS PROGRAM IS TO BE USED IN A LINKED, ATTACHED, OR
*   SIMILAR MODE, THEN THE DCB MAY NEED TO BE EXPLICITLY CLOSED BY
*   THE USER.  THE SIMPLEST WAY IS TO CALL @OBCLOSE  (ADDED      80330
*   DIRECTLY, OR INDIRECTLY USING @OBTAIN OPT=CLOSE.             81342
*
*   NON-OS FEATURES :
*         SORT:      IF THE USER, PRIOR TO CALLING @OBTAINS,
*   PLACES A LOWER CASE 'S' (X'A2') INTO THE INTENDED DS1FMTID
*   FIELD, THE STORAGE ENTRIES WILL BE SORTED BY DSNAME AND
*   RETURNED, ONE AT A TIME, STARTING WITH FMT 4, 1, 2, 3, 5, 6.
*   IF @OBTAIN FAILS, THE REQUEST IS STILL ROUTED TO OS.
*   IF STORAGE IS INSUFFICIENT TO LOAD THE ENTIRE VTOC, THE      81342
*   SORT REQUEST IS IGNORED.                                     81342
*                                                                90252
*   AN EXPLICIT END OF LIST CHECK MUST BE MADE; THE LAST ENTRY
*   WILL CONTAIN X'FF' IN THE FMTID FIELD.
*         ACCESSES VIA DS1PTRDS FOR FMT 2,3,5,6 ENTRIES MUST BE
*         MADE WITHOUT AN 'S' FOR CORRECT RETRIEVAL.
*                                                                81342
*   IF THE USER SUPPLIES A //TAXXXXXX DD UNIT=TAPE,... CARD FOR
*   A (RECENT) FDR DUMP, THE VTOC WILL BE PROCESSED FROM TAPE
*   FOR MATCHING "XXXXXX" VOLUME SERIAL.                         82249
*                                                                82249
*   SUPPORT FOR INDEXED VTOCS ADDED - FORMAT 5 REQUESTS WILL BE
*   HONORED WITH CONSTRUCTED DATA.                               90252
*   THIS SUPPORT RELIES ON TWO FACTORS: THAT AN INDEXED VTOC HAS
*   AT LEAST ONE FORMAT 5 DSCB (THIS IS EMPIRICALLY SO), AND THAT
*   THE CALLER WILL NOT VALIDITY CHECK THE FORMAT 5 DSPTR RECORD
*   ID - CHAINING IS INDICATED WITH VTOC START CCHH + X'FE'      90252
*
*         SCAN MODE :  IF THE FIRST BYTE OF THE PARAMETER LIST
*   CONTAINS X'10' OR'D IN WITH A SEEK REQUEST, A FIFTH WORD
*   IN THE PARAMETER LIST MAY SPECIFY AL1(L-1),AL3(MASK)
*   GIVING LENGTH-1 AND ADDRESS OF A MASK.  THIS CAUSES SCAN MODE
*   CCW'S TO BE USED (UNLESS VTOC IS IN STORAGE).  THE USER
*   MUST MAINTAIN THE STARTING CCHHR TO AVOID GETTING THE SAME
*   ENTRY REPEATEDLY.  FOR ALL REQUESTS RETURNING A FORMAT1
*   (SEEK AND SEARCH), THE CCHHR IS RETURNED IN THE FIVE BYTES
*   FOLLOWING THE RETURN DATA (+96 FOR SEARCH, +140 FOR SEEK).
*   TO OBTAIN THE CORRECT CCHHR, INITIALIZE THE WORK AREA WITH
*   THIS VALUE FOR SEEK AND SCAN MODE IN CASE OS OBTAIN IS USED.
*   ON RETURN, THE USER SHOULD STILL PERFORM THE MASK COMPARE
*   TEST. DS1FMTID FOR NON-MATCHING RETURNS IS CHANGED TO X'01'
         EJECT ,
         COPY  OPTIONGB      DEFINE GLOBALS                      81338
         SPACE 1                                                 81338
         SYSPARM LIST=YES    SET AND LIST GLOBALS                81338
         SPACE 2                                                 81338
         ENTRY @OBSERVE,@OBSDCB,@OBCLOSE                         80330
         EXTRN SUBVTOCI      VTOC STATUS ROUTINE                GP05155
         SPACE 1
@OBTAINS START 0
         PRINT &PRTSOR                                           81338
         SPACE 1
         USING *,R15                                             81152
         B     AROUND                                            81152
         DC    AL1(19),CL19'@OBTAINS - &SYSDATE'                 81152
         DC    A(@OBCLOSE)   +24 ENTRY TO CLOSE/FREEMAIN         82031
         DC    A(@OBSERVE)   +28 ADDRESS OF SIZE NOT GETMAINED   82031
         DC    A(@OBSDCB)    +32 ADDRESS OF DCB                  82031
         DC    A(OBFLAG)     +36 ADDRESS OF PROCESSING FLAG      82031
*        NOTE THAT THE ABOVE CONSTANTS START AT DISPLACEMENT 24, 81342
*        AND MUST BE KEPT THERE FOR EXTERNAL REFERENCE.          81342
*                                                                81342
AROUND   BSM   R14,0         SAVE CALLER'S AMODE                GP99026
         STM   R14,R12,12(R13)                                   81152
         LR    R12,R15
         LA    R11,2048(,R12)                                    90252
         LA    R11,2048(,R11)                                    90252
         DROP  R15                                               81152
         USING @OBTAINS,R12,R11                                  90252
         LA    R9,SAVE
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9        SAVE AREA LINKAGE COMPLETE
         AM24  WORK=R15                                         GP99026
         SPACE 1
         TM    0(R1),X'C0'   OBTAIN TYPE INVOKATION ?
         BNO   COMFAIL       NO; LET SVC 27 DO IT
         LR    R9,R1         SAVE ENTRY LIST ADDRESS
INITDONE LM    R6,R8,4(R9)  LOAD PARAMETERS
         TM    OBFLAG,OBFAIL  BIG FAIL BIT ON ?
         BZ    NOFAIL        NO; PROCEED
BIGFAIL  OI    OBFLAG,OBFAIL
         B     COMFAIL
VOLFAIL  OI    OBFLAG,OBFVOL  CANNOT PROCESS THIS VOLUME
COMFAIL  BAS   R10,CLOSER    CLOSE DCB IF OPEN                   81152
COMFAILT LA    R1,COMFVOLS   GET TABLE OF VOLUME FOR WHICH MSG WAS ISS
         LA    R2,8          GET SIZE OF STACK
COMFAILL CLC   OBVOL(6),0(R1)  SAME VOLUME ?
         BE    COMFAILS      YES - EXIT WITHOUT MESSAGE
         LA    R1,6(,R1)     TRY NEXT ONE
         BCT   R2,COMFAILL
         MVC   COMFVOLS(7*6),COMFVOLS  NOT FOUND - SQUEEZE OLDEST OUT
         MVC   COMFVOLS+7*6(6),OBVOL   ADD THIS ONE IN
COMFAILW WTO   MF=(E,OBWTO)  INFORM USER OF PROBLEM
COMFAILS LA    R15,2         SET TO RE-EXECUTE SVC 27 IN USER'S CALL
         B     EXITS
         SPACE 2
@OBCLOSE BSM   R14,0         SAVE CALLER'S AMODE                GP99026
         STM   R14,R12,12(R13)                                   80330
         LR    R12,R15                                           80330
         LA    R11,2048(,R12)                                    90252
         LA    R11,2048(,R11)                                    90252
         LA    R14,@OBCLOSE-@OBTAINS                             80330
         SLR   R12,R14       MAKE TRUE BASE VALUE                80330
         LA    R9,SAVE                                           80330
         ST    R13,4(,R9)                                        80330
         ST    R9,8(,R13)                                        80330
         LR    R13,R9        LINK                                80330
         AM24  WORK=R15                                         GP99026
         BAS   R10,CLOSER    CLOSE DCB IF OPEN                   81152
         LM    R1,R2,#ADR    GET GETMAIN POINTERS                80330
         LTR   R1,R1         ANY GOTTEN ?                        80330
         BZ    @OBCEXIT      NO; EXIT                            80330
         LTR   R0,R2         GET LENGTH TO FREE                  80330
         BNP   @OBCEXIT      NONE                                80330
         FREEMAIN R,LV=(0),A=(1)  FREE STORAGE                   80330
@OBCEXIT XC    #ADR(8),#ADR  CLEAR INDICATOR                     80330
         MVI   OBFLAG,0      RESET THE PROCESSING FLAG           80330
         MVC   OBVOL,=CL6'*STOR*'  RE-INIT MESSAGE               80330
         MVC   OBREAS,OBREAS-1  CLEAR REASON CODE ALSO          GP99034
         SPACE 1                                                 80330
GOODEXIT SLR   R15,R15       SET GOOD RETURN CODE
EXITS    L     R13,4(,R13)   GET HIGH SAVE AREA
         L     R14,12(,R13)  RELOAD RETURN ADDRESS
         LM    R0,R12,20(R13)  RESTORE REGS
         SLR   R14,R15       RETURN TO NORMAL OR SVC 27 POINT   GP99026
         SLL   R15,1         CHANGE RC=2 TO RC=4                 82249
         BSM   0,R14         EXIT                               GP99026
         SPACE 1
GOODBAD  L     R13,4(,R13)   GOOD PROCESSING / BAD REQUEST EXIT
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BSM   0,R14         RETURN                             GP99026
         SPACE 2
NOFAIL   CLC   OBVOL,0(R7)   VOLUME SAME AS REQUESTED ONE ?
         BNE   VOLINIT       NO; RE-INITIALIZE
         TM    OBFLAG,OBFVOL  CAN THIS VOLUME BE PROCESSED ?
         BNZ   VOLFAIL       NO; USE SYSTEM OBTAIN
         TM    OBFLAG,OBFEXCP  USE EXCP ?
         BNZ   DOEXCP        TOO BAD; BUT FASTER THAN OBTAIN SVC
         L     R3,#STORMAX   GET LOGICAL END OF CHAIN            81152
         LA    R2,AREALEN    SIZE OF ONE DSCB ENTRY
         L     R1,#AREA      GET FIRST ENTRY
         USING AREASECT,R1    DECLARE WORK ENTRY MAPPING
         TM    0(R9),1       SEARCH OR SEEK OPERATION ?
         BZ    GOSEEK        SEEK
         LA    R14,DS1FMTID-AREASECT    SET MOVE FROM OFFSET
         LA    R15,DATALEN-1  SET FOR DSCB DATA LENGTH           81342
         TM    OBFLAG,OBFMIX  MIXED - PARTIALLY IN STORAGE ?
         BNZ   *+12          YES - NO SORT SUPPORT
         CLI   0(R8),X'A2'   'SORTED' CALL ?
         BE    GETSORT       YES; DO IT
         SPACE 1
*        PERFORMANCE INSERTION - IF USER IS READING SEQUENTIALLY,
*        TRY THE NEXT THREE ENTRIES FOLLOWING THE REQUEST.
         LA    R5,3          SET FOR THREE TRIES
         LAT   R4,LASTREF,LOOPSEAR,LOOPRINC   SKIP IF NO ADDRESS
LOOPREF  CR    R4,R1         VALID ADDRESS ?
         BL    LOOPSEAR      NO; SKIP
         CR    R4,R3         VALID ?
         BNL   LOOPSEAR      NO
         CLC   DS1DSNAM-AREASECT(KEYLEN,R4),0(R6)  REQUESTED ENTRY ?
         BNE   LOOPRINC      NO; TRY NEXT ONE
         LR    R1,R4         PUT INTO EXPECTED REGISTER
         B     MOVEDSCB      AND GO TO PROCESS IT
LOOPRINC AR    R4,R2         TRY NEXT ENTRY
         BCT   R5,LOOPREF    TRY UP TO THREE
         SPACE 1
LOOPSEAR CLC   DS1DSNAM,0(R6)  MATCHING DSN ?
         BE    MOVEDSCB      MOVE TO USER AREA
         BXLE  R1,R2,LOOPSEAR  TRY NEXT ENTRY
         TM    OBFLAG,OBFMIX  MIXED - PARTIALLY IN STORAGE ?
         BNZ   DOEXCP        YES - TRY I/O
SET8     LA    R15,8         SET RETURN CODE 8 - DSCB NOT FOUND
         B     GOODBAD       ENTRY NOT FOUND
         SPACE 2
GOSEEK   LA    R14,DS1DSNAM-AREASECT    SET MOVE FROM OFFSET
         LA    R15,DSCBLEN-1  SET LENGTH OF KEY AND DATA PORTION 81342
         TM    OBFLAG,OBFMIX  MIXED - PARTIALLY IN STORAGE ?
         BNZ   *+12          YES - NO SORT SUPPORT
         CLI   DS1FMTID-IECSDSL1(R8),X'A2'  'SORTED' CALL ?      81342
         BE    GETSORT       YES; DO IT
         MVC   TEMP(4),0(R6)  COPY REQUESTED CCHH
         MVI   TEMP+4,0      MOVE R TO HALFWORD - ZERO HIGH BYTE
         MVC   TEMP+5(1),4(R6)  COPY R
         LH    R5,TEMP       LOAD CCHH
         SH    R5,CCHHR      SUBTRACT VTOC START ADDRESS
         BM    COMFAILS      BAD REQUEST - LET OS HANDLE IT ?
         MH    R5,TRKS       CONVERT TO TRACKS
         AH    R5,TEMP+2     ADD TRACK ADDRESS
         SH    R5,CCHHR+2    SUBTRACT VTOC START TRACK
         BM    COMFAILS      SHOULDN'T HAPPEN EVEN ON BAD TRACK ADDR.
         CLC   0(5,R6),VTEND   BEYOND VTOC EXTENT ?              79276
         BH    MIXFAIL       YES; FLAG ERROR                     79276
         AIF   (NOT &MVSSP).NOCVAF1                              90252
         CLI   4(R6),X'FE'   POSSIBLE FORMAT 5 REQUEST ?         90252
         BNE   MIXNOT5       NO                                  90252
         CLC   0(4,R6),CCHHR  REALLY FAKE FORMAT 5 REQUEST ?     90252
         BNE   MIXNOT5       NO                                  90252
         TM    OBFLAG,OBFINDX  DOUBLE-CHECK                      90252
         BNZ   GETCVAF       OK - USE CVAF                       90252
.NOCVAF1 ANOP  ,                                                 90252
MIXNOT5  CLC   0(5,R6),END   BEYOND END OF VTOC ?
         BH    MOVENULL      YES; PUT A NULL RECORD IN           79276
         CLC   0(5,R6),CC    BEYOND STORAGE END ?
         BNH   MIXPASS       NO; PROCEED
MIXTEST  TM    OBFLAG,OBFMIX  MIXED I/O
         BNZ   DOEXCP        DO IT THE HARD WAY
MIXFAIL  LA    R15,20        SET BAD CCHHR ADDRESS CODE
         B     GOODBAD       INVALID ADDRESS
MOVENULL XC    0(DSCBLEN,R8),0(R8)  CLEAR RECORD                 81342
         MVC   DSCBLEN(5,R8),0(R6)   ECHO ADDRESS                81342
         B     GOODEXIT      EXIT OK                             79276
MIXPASS  MH    R5,DSCB       TIMES DSCBS PER TRACK
         AH    R5,TEMP+4     PLUS RECORD NUMBER
         BCTR  R5,0          LESS ONE FOR START AT 1
         MR    R4,R2         MULTIPLY BY LENGTH OF ENTRY
         AR    R1,R5         MAKE ABSOLUTE ADDRESS OF DESIRED ENTRY
         CR    R1,R3         IN STORAGE ?
         BNL   MIXTEST       NO; SEE IF MIXED
         CLC   CCHHR,0(R6)   CORRECT CCHHR ?
         BNE   COMFAILS      NO; ERROR HERE OR IN USER'S PROGRAM
         SPACE 1
MOVEDSCB AR    R14,R1        MAKE MOVE FROM ABSOLUTE ADDRESS
         EX    R15,DSCBMOVE  MOVE TO USER
         LA    R14,1(R8,R15)  GET END OF USER'S RESULT
         MVC   0(5,R14),CCHHR  RETURN DSCB ADDRESS
MOVEDOUT TM    0(R9),1       SEARCH ?
         ST    R1,LASTREF    SAVE LAST REFERENCED ADDRESS
         BZ    MOVEMASK      NO; SEE IF MASK REQUEST
         LA    R15,8
         AIF   ('&SYSTEM' EQ 'MVT' OR '&SYSTEM' EQ 'MFT').NOTVS  81338
         CLI   0(R8),C'4'    FORMAT 4 DSCB ?                     81338
         BE    GOODEXIT      YES; NEW RETURN CODE IS 0           81338
.NOTVS   CLI   0(R8),C'1'    WAS DSCB 1 MOVED ?                  81338
         BNE   GOODBAD       ELSE SET CODE 8 FOR OS COMPATIBILITY
         B     GOODEXIT      ELSE RETURN CODE 0
MOVEMASK TM    0(R9),X'D0'   REQUEST FOR MASKED I/O ?
         BNO   TESTCVAF      NO; GOOD RETURN (BUT CHECK FMT5)    90252
         CLI   DS1FMTID-IECSDSL1(R8),C'1'  FORMAT 1 ?            90252
         BNE   TESTCVAF      NO; NO SENSE DOING MASK TEST ?      90252
         IC    R15,16(,R9)   INSERT LENGTH - 1 OF MASK
         L     R14,16(,R9)   GET MASK ADDRESS
         EX    R15,DSCBCOMP  COMPARE DSN TO MASK
         BE    GOODEXIT      MATCH - LEAVE AS IS
         MVI   DS1FMTID-IECSDSL1(R8),1   CHANGE ID FROM C'1' TO X'1'
         B     GOODEXIT      YES; ZERO RETURN CODE
DSCBCOMP CLC   DS1DSNAM(0),0(R14)  COMPARE NAME TO MASK
DSCBMOVE MVC   0(0,R8),0(R14)  MOVE STUFF TO USER'S AREA
         DROP  R1
         SPACE 1                                                 90252
*        INTERCEPT FORMAT 5 DSCB REQUEST AND SUPPLY FAKE DATA FROM
*        INDEXED VTOC FACILITY (CVAF)                            90252
         USING IECSDSL5,R8   DECLARE FORMAT 5                    90252
TESTCVAF CLI   DS5FMTID,C'5'    FORMAT 5 ?                       90252
         AIF   (NOT &MVSSP).NOCVAF2                              90252
         BNE   GOODEXIT      NO; RETURN                          90252
         TM    OBFLAG,OBFINDX  DOING INDEXED VTOC ?              90252
         BZ    GOODEXIT      NO; RETURN AS IS                    90252
         TM    DCBOFLGS-IHADCB+@OBSDCB,DCBOFOPN  DCB OPEN ?      90252
         BZ    GOODEXIT      NO; LEAVE RECORD                    90252
         XC    EXTTAB(26*5),EXTTAB  BEGIN AT THE BEGINNING       90252
GETCVAF  MVC   DSCBLEN(5,R8),0(R6)   ECHO ADDRESS                90252
         TM    DCBOFLGS-IHADCB+@OBSDCB,DCBOFOPN  DCB OPEN ?      90252
         BZ    MOVENULL      NO; KILL RECORD                     90252
         L     R4,DCBDEBAD-IHADCB+@OBSDCB  GET DEB ADDRESS       90252
         LA    R0,26         SET FOR NUMBER OF EXTENTS IN ONE DSCB 5
         ST    R0,EXTCOUNT   RE-INITIALIZE                       90252
         CVAFDSM DEB=(R4),MF=(E,KWAF)                            90252
         CH    R15,=H'4'     CHECK RETURN CODE                   90252
         BL    MOVEEXTS                                          90252
         BH    ERREXT        ERROR                               90252
         CLI   CVSTAT,STAT032  END ?                             90252
         BE    MOVEEXTS      YES                                 90252
ERREXT   WTO   'ERROR IN CVAF INTERFACE'                         90252
         B     GOODEXIT      IGNORE                              90252
MOVEEXTS MVC   DS5KEYID,=4X'05'  MAKE FORMAT 5 ID                90252
         MVC   DS5AVEXT(DS5FMTID-DS5AVEXT),EXTTAB  MOVE FIRST 8  90252
         MVI   DS5FMTID,C'5'   IDENTIFY IT                       90252
         MVC   DS5MAVET(DS5PTRDS-DS5MAVET),EXTTAB+DS5FMTID-DS5AVEXT
         XC    DS5PTRDS,DS5PTRDS  CLEAR CHAIN                    90252
         MVC   EXTTAB(5),EXTTAB+25*5  MOVE LAST ENTRY FOR NEXT TIME
         CLI   CVSTAT,STAT032  LAST TIME ?                       90252
         BE    GOODEXIT      YES; NO CHAIN                       90252
         MVC   DS5PTRDS(4),0(R6)  USE BEGINNING TRACK            90252
         MVI   DS5PTRDS+4,X'FE'  WITH A FAKE RECORD ID           90252
.NOCVAF2 B     GOODEXIT                                          90252
         DROP  R8                                                90252
         SPACE 2
*        ACCESS THE VTOC IN COLLATING SEQUENCE
*
GETSORT  LAT   R2,LASTSORT,SORTIT  PREVIOUSLY SORTED ?
GETSORT1 LA    R2,AREALEN(,R2)   GET NEXT ENTRY                  82031
         C     R2,#TOP       LAST ONE ?                          82031
         BNL   GETSOLAS      YES; QUIT                           82031
GETSORT2 L     R1,SORPOINT-AREASECT(,R2)  GET THE DSCB ADDRESS   82031
         CLI   DS1FMTID-AREASECT(R1),C'1'  FORMAT 1 ?            82031
         BNE   GETSORT1      NO; TRY FOR ANOTHER                 82031
         ST    R2,LASTSORT   MORE                                82031
         B     MOVEDSCB      RETURN THIS ONE
GETSOLAS MVI   0(R8),X'FF'   MAKE FF'S IN DSN/FMTID PORTION
         MVC   1(KEYLEN,R8),0(R8)                                81342
         L     R1,LASTSORT   SET DUMMY POINTER FOR MOVEDOUT      82031
         B     MOVEDOUT      RETURN
         SPACE 1
*        THE HEAPSORT ALGORITHM WAS COPIED FROM THE SORTH FUNCTION
*        IN ROUTINE @SERVICE, WHICH CONTAINS PROPER CREDITS.     82031
*                                                                82031
SORTIT   STM   R3,R10,SAVE+20  SAVE REGISTERS                    82031
         L     R7,#AREA      GET TABLE START ADDRESS             82031
         LA    R8,AREALEN    SET ENTRY SIZE                      82031
         L     R1,#TOP       GET LAST+1 ENTRY ADDRESS            82031
         SR    R1,R8         GET LAST ENTRY                      82031
         SR    R1,R7         GET TOTAL SIZE                      82031
         BNP   SORTOUT       ERROR OR SINGLE ENTRY               82031
         XR    R0,R0                                             82031
         DR    R0,R8                                             82031
         MR    R0,R8         ENSURE END IS MULTIPLE              82031
         ST    R1,TEMP       SET MAXIMUM OFFSET                  82031
         LR    R6,R1         GET OFFSET TO LAST ELEMENT          82031
         LR    R5,R6         COPY                                82031
         SR    R5,R8         FINAGLE                             82031
         BM    SORTOUT       ONE ENTRY                           82031
         XR    R4,R4         CLEAR FOR DIVIDE                    82031
         DR    R4,R8         GET NUMBER OF ENTRIES IN R5         82031
         SRL   R5,1          HALVE                               82031
         MR    R4,R8         OFFSET TO MIDDLE ELEMENT IN R5      82031
SORTH104 L     R2,SORPOINT-AREASECT(R5,R7)  B=A(L)               82031
         BAS   R9,SORTHEAP   HEAP IT                             82031
         SR    R5,R8         GET PRIOR ELEMENT                   82031
         BNM   SORTH104      REPEAT FOR IT                       82031
*                                                                82031
         XR    R5,R5         L=1                                 82031
         L     R6,TEMP       GET OFFSET TO LAST ENTRY            82031
         SR    R6,R8         GET PRIOR ENTRY                     82031
SORTH110 LA    R1,0(R6,R8)   M+1                                 82031
         L     R2,SORPOINT-AREASECT(R1,R7)  B=A(M+1)             82031
         L     R10,SORPOINT-AREASECT(,R7)  A(1)                  82031
         ST    R10,SORPOINT-AREASECT(R1,R7)   A(M+1)=A(1)        82031
         BAS   R9,SORTHEAP   SORT                                82031
         SR    R6,R8         GET PRIOR ENTRY                     82031
         BNM   SORTH110      REPEAT                              82031
SORTOUT  LR    R2,R7         POINT TO FIRST ENTRY                82031
         ST    R2,LASTSORT   JUST IN CASE                        82031
         LM    R3,R10,SAVE+20  RESTORE REGISTERS                 82031
         OI    OBFLAG,OBFSORT  SHOW SORT REQUESTED               82031
         B     GETSORT2      ALL DONE ?                          82031
         SPACE 1                                                 82031
SORTHEAP LR    R3,R5         I=L                                 82031
SORTH117 LA    R4,0(R3,R3)   J=I+I                               82031
         AR    R4,R8         RELATIVE TO 0                       82031
         CR    R4,R6         J ? M                               82031
         BH    SORTH125      HIGH                                82031
         BE    SORTH121      J=M                                 82031
         L     R1,SORPOINT-AREASECT(R4,R7)   A(J)                82031
         L     R10,AREALEN+SORPOINT-AREASECT(R4,R7)  A(J+1)      82031
         CLC   DATAKEY-AREASECT(L'DATAKEY,R10),DATAKEY-AREASECT(R1)
         BNH   SORTH121      A(J+1) NOT HIGHER THAN A(J)         82031
         AR    R4,R8         J=J+1                               82031
SORTH121 L     R1,SORPOINT-AREASECT(R4,R7)   A(J)                82031
         CLC   DATAKEY-AREASECT(L'DATAKEY,R2),DATAKEY-AREASECT(R1)
         BNL   SORTH125      YES                                 82031
         ST    R1,SORPOINT-AREASECT(R3,R7)   A(I)=A(J)           82031
         LR    R3,R4         I=J                                 82031
         B     SORTH117                                          82031
*                                                                82031
SORTH125 ST    R2,SORPOINT-AREASECT(R3,R7)  A(I)=B               82031
         BR    R9            RETURN                              82031
         EJECT
VOLINIT  SERVINIT ,          LOAD THE SERVICE ROUTINE            82249
         LM    R14,R15,#ADR  LOAD DYNAMIC STORAGE ADDRESSES      82249
         LTR   R14,R14       ANY EVER GOTTEN ?
         BNZ   VOLLOOK       YES - GO PROCESS
         TM    OBFLAG,OBFEXCP  PREVIOUS GETMAIN FAILED ?
         BNZ   VOLLOOK       YES - PROCEED
         L     R14,@OBSERVE  GET USER'S REQUEST
         AIF   (&SVS OR &MVS).BND4K                              81342
         LA    R14,2047(,R14)  ROUND TO 2K BOUNDARY
         SRL   R14,11
         SLL   R14,11
         AGO   .BNDCOM                                           81342
.BND4K   LA    R14,4095(,R14)   ROUND TO 4K BOUNDARY             81342
         SRL   R14,12                                            81342
         SLL   R14,12                                            81342
.BNDCOM  ST    R14,@OBSERVE                                      81342
         A     R14,MINIMUM   ADD MINIMUM I WANT
         ST    R14,#SIZE     STASH AS MINIMUM SIZE REQUEST
         C     R14,#SIZE+4   VALID RANGE ?
         BL    *+10          YES
         AR    R14,R14       DOUBLE THIS
         ST    R14,#SIZE+4
         GETMAIN VC,LA=#SIZE,A=#ADR
         BXH   R15,R15,VOLIFAIL  FAILED; SEE IF MINIMUM FREE     81342
         LM    R14,R15,#ADR  LOAD DYNAMIC STORAGE ADDRESSES
         LR    R1,R14        COPY FOR BAD FREEMAIN
         LR    R0,R15
         S     R15,@OBSERVE  REDUCE BY AMOUNT REQUESTED BY USER
         BP    VOLINUFF      ENOUGH ?
VOLIFREE SVC   10            FREEMAIN THE GOTTEN STORAGE
         XC    #ADR(8),#ADR  JUST IN CASE
VOLIFAIL GETMAIN EC,LV=256,A=#AREA   GET MINIMAL STORAGE
         BXH   R15,R15,BIGFAIL       NOT ENOUGH FOR ANYTHING
         WTO   MF=(E,OBWTO)  INFORM OF FAILURE
         L     R15,#AREA     LOAD FOR COMMON CODE
         LA    R0,256
         STM   R15,R0,#ADR   SET FOR CLOSE'S FREEMAIN            80330
         OI    OBFLAG,OBFEXCP  SIGNAL EXCP FOR EVERYTHING
         B     VOLIPART      CONTINUE WITH PARTIAL INITIALIZATION
         SPACE 1
VOLINUFF ST    R15,#ADR+4              SAVE NEW LENGTH
         LA    R14,0(R15,R14)          A(NEW TOP)
         ST    R14,#FREE               FOR FREEMAIN
         BCTR  R14,0                   MINUS 1 FOR END     75APR07/EAC
         ST    R14,#LIMIT              TOP OF DYNAMIC STORAGE
         FREEMAIN V,A=#FREE            TO GIVE SOME BACK
         L     R14,#ADR+4              LENGTH
         L     R15,#ADR                A(BOTTOM)
         ST    R15,#CCW                A(WORK AREA/CHAN PROGS)
         LA    R15,2048(,R15)           2048 BYTE WORK AREA
*        SIZE FOR (2048-16)/8 = 254 DSCBS PER TRACK              81342
VOLIPART ST    R15,#AREA               A(TOP WORK/BOTTOM DSCB)
         ST    R15,#STORMAX            INIT FOR MAX USED         81152
         XC    0(256,R15),0(R15)  CLEAR, JUST IN CASE
         LA    R15,DS4IDFMT-AREASECT(,R15)  SET FORMAT 4 ADDRESS 81342
         ST    R15,DVTOC+12  SET INTO CAMLST                     81342
VOLLOOK  MVC   OBVOL,0(R7)   COPY NEW VOL-SER
         NI    OBFLAG,OBFAIL+OBFEXCP  RESET VOLUME RELATED FLAGS 90252
         MVC   TEMP(2),=C'TA'                                    82249
         MVC   TEMP+2(6),OBVOL                                   82249
         DEVTYPE TEMP,DB     LOOK FOR TA/VOLSER DD CARD          82249
         BXLE  R15,R15,DOFDROP                                   82249
         MVI   TEMP+1,C'P'   MAKE TP/VOLSER                      82249
         DEVTYPE TEMP,DB     FOUND ?                             82249
         BXH   R15,R15,NOTFDR                                    82249
DOFDROP  CLI   DB+2,UCB3TAPE  TAPE DD ?                          82249
         BNE   BADFDR        NO; TOO BAD                         82249
         READFDR INIT        LOAD THE FDR READ ROUTINE           82249
         READFDR OPEN,OBVOL,USE=VTOC  OPEN THE TAPE              82249
         BXH   R15,R15,BADFDR  QUIT IF IT FAILED                 82249
         L     R2,DVTOC+12   GET THE FORMAT4 STASH ADDRESS       82249
         MVC   0(90,R2),8+44(R1)  SAVE THE DSCB 4                82249
         MVC   CC(4),0(R1)   SAVE THE VTOC ADDRESS               82249
         OI    FDRFLAG,FDRON SHOW FDR IN USE                     82249
         CLI   0(R2),C'4'    REALLY A FORMAT 4 ?                 82249
         BE    OPENFDR      YES; BYPASS DISK CODE                82249
BADFDR   L     R1,4(,R13)    GET USER'S SAVE AREA                82249
         MVC   OBREAS,=C'TP'  SET TAPE ERROR                    GP99034
         L     R14,12(,R1)   GET CALLER'S R14                    82249
         LA    R14,2(,R14)   SET TO SKIP OBTAIN SVC              82249
         ST    R14,12(,R1)   STASH IT BACK                       82249
         B     VOLFAIL       RETURN WITH ERROR MESSAGE           82249
         SPACE 1                                                 82249
NOTFDR   L     R2,CVTPTR     GET CVT                             82249
         USING CVTMAP,R2                                         82005
         MVC   OBREAS,=C'UC'  SET UCB ERROR                     GP99034
         AIF   (NOT &MVSESA).UCBPREA                            GP99034
         SERVCALL UCBDK,OBVOL  LOOK FOR DASD UCB FOR VOLUME     GP99034
         LTR   R3,R0         FOUND?                             GP99034
         BZ    VOLFAIL       NO; TOO BAD                        GP99034
         USING UCBOB,R3      DECLARE IT                         GP99034
         AGO   .UCBCOM1      JOIN COMMON CODE                   GP99034
.UCBPREA AIF   (NOT &MVSSP).UCBOLD1                              90201
         XC    LOOKWORK,LOOKWORK  CLEAR LOOK-UP AREA             90201
LOOPUCB  LA    R1,UCBPLIST   LOAD PARAMETER LIST                 90201
         L     R15,CVTUCBSC  GET UCB LOOK-UP ROUTINE             90201
         BASR  R14,R15       CALL IT                             90201
         BXH   R15,R15,VOLFAIL  NOT FOUND                        90201
         L     R3,UCBPTR     LOAD RETURNED UCB ADDRESS           90201
         USING UCBOB,R3      DECLARE IT                          90201
         TM    UCBSTAT,UCBONLI  ON-LINE ?                        90201
         BZ    LOOPUCB       NO; TRY ANOTHER                     90201
         CLC   OBVOL,UCBVOLI  DESIRED SERIAL ?                   90201
         BNE   LOOPUCB       MUSH                                90201
         AGO   .UCBCOM1                                          90201
.UCBOLD1 L     R4,CVTILK2    UCB LOOKUP TABLE                    90201
         LA    R5,2          FOR BXH
         L     R0,MASKUCB    GET COMPARE MASK                    81342
         XR    R3,R3         CLEAR FOR IC                        81342
LOOPUCB  ICM   R3,3,0(R4)    GET NEXT UCB ENTRY                  81342
         BZ    INCRUCB       SKIP PADDING ENTRY
         USING UCBOB,R3      DECLARE IT                         GP04234
         CR    R3,R0         LAST ENTRY ?                        81342
         BE    VOLFAIL       YES; SKIP THIS VOLUME
         CLI   UCBTBYT3,UCB3DACC  DISK ?
         BNE   INCRUCB       NO
         CLI   UCBTBYT4,X'05'           2321?
         BE    INCRUCB       YES; I DON'T WANT TO STRIP
         TM    UCBSTAT,UCBONLI  ON-LINE ?
         BZ    INCRUCB       NO
         CLC   OBVOL,UCBVOLI   SAME VOL-SER ?
         BE    FOUNDUCB      YES
INCRUCB  BXH   R4,R5,LOOPUCB  GET NEXT ENTRY
.UCBCOM1 SPACE 1                                                 90201
FOUNDUCB L     R4,CVTTCBP     A(NEW/OLD BOX)                     82005
         DROP  R2                                                82005
         L     R4,4(,R4)                A(MY TCB)
         L     R4,12(,R4)               A(TIOT)
         MVC   OBREAS,=C'TI'  SET TIOT ERROR                    GP99034
         USING TIOT,R4       DECLARE MAPPING
         XR    R15,R15                 CLEAR WORK REG
         AIF   (&MVS AND '&LOCAL' NE 'CCSI').MVS1                82005
         L     R5,DYNTIOT    GET VOLMOUNT TIOT ADDRESS OR ZERO   81152
.MVS1    ANOP  ,                                                 82005
INITA1   ICM   R15,1,TIOELNGH  GET LENGTH OF THIS ENTRY          81152
         BNZ   INITA2        NO; CHECK IT                        81152
         AIF   (&MVS AND '&LOCAL' NE 'CCSI').MVS2                82005
         LTR   R5,R5         WAS VOLMOUNT DD FOUND ?             81152
         BZ    INNODD        NO; TOO BAD                         81342
         TESTAUTH FCTN=1     AUTHORIZED CALLER ?                 81152
         BXH   R15,R15,INNODD    NO; DITTO                       81342
         L     R2,@SERVICE   SAVE THE SERVICE ADDRESS            82249
         XC    @SERVICE,@SERVICE  PREVENT FREE                   82249
         BAS   R10,CLOSER    MAKE SURE DCB IS CLOSED             81152
         ST    R2,@SERVICE   RESTORE SERVICE ROUTINE             82249
         MODESET KEY=ZERO                                        81152
         LR    R4,R5         COPY ADDRESS TO TIOT BASE           81152
         L     R5,TIOEFSRT-1 GET OLD UCB ADDRESS                 81152
         STCM  R3,7,TIOEFSRT  SET NEW UCB ADDRESS                81152
         STM   R4,R5,DYNTIOT  SAVE TIOT AND UCB ADDRESS          81152
         MVI   DYNTIOT,X'80' SET TIOT MODIFIED                   81152
         MODESET KEY=NZERO   RESTORE KEY (?)                     81152
         B     INITCLOS      JOIN COMMON CODE                    81152
.MVS2    SPACE 1                                                 82005
INNODD   DS    0H                                                81342
         AIF   (NOT &MVS).NODDMVS                                81342
         BAS   R10,CLOSER    MAKE SURE DCB IS CLOSED             81342
         MVC   DYNUNIT,UCBNAME    BUILD SVC 99 PARAMETERS        81342
         MVC   DYNVOLSR,UCBVOLI                                  81342
         LA    R1,DYNPARMP   GET SVC 99 LIST                     81342
         SVC   99            ALLOCATE THE VOLUME                 81342
         MVC   DCBDDNAM-IHADCB+@OBSDCB,DYNDDNAM  RESET DD NAME   81342
         MVC   OBREAS,=C'99'  SET DYNALLOC ERROR                GP99034
         BXLE  R15,R15,INITOPEN  ALLOCATED; NOW TRY TO OPEN      81342
.NODDMVS B     VOLFAIL       ELSE FAILED; USE SVC 27             81342
         SPACE 1                                                 81342
INITA2   CLI   TIOEDDNM,C'$'  BLANK AND/OR BAD ENTRY ?           81152
         BNL   INITA3        NO; CHECK UCB ADDRESS
INCRTIOT AR    R4,R15                  NO..KEEP LOOKING
         B     INITA1
INITA3   CLI   TIOELNGH,20   SINGLE UCB ENTRY ?                  81152
         BNE   INCRTIOT      NO; SKIP                            81152
         CLI   TIOELNGH+20,0   LAST ENTRY ?                      81152
         BE    *+12          YES; SKIP NEXT CHECK                82005
         CLI   TIOEDDNM+20,C' '  CONCATENTATED ?                 81152
         BE    INCRTIOT      YES; DO NOT USE                     81152
         AIF   (&MVS AND '&LOCAL' NE 'CCSI').MVS3                82005
INITA4   LTR   R5,R5         VOLMOUNT DD FOUND ?                 81152
         BNZ   INITA5        YES                                 81152
         CLC   =C'VOLMOUNT',TIOEDDNM  SPECIAL DD ?               81152
         BNE   INITA5        NO                                  81152
         STCM  R4,7,DYNTIOT+1  SAVE FOR LATER                    81152
         LR    R5,R4         SAVE THE ADDRESS                    81152
.MVS3    AIF   (NOT &MVSESA).MVS4                                82005
INITA5   SR    R2,R2                                            GP99034
         ICM   R2,7,TIOEFSRT  LOAD UCB ADDRESS                  GP99034
         BZ    INCRTIOT      IGNORE                             GP99034
         CLI   UCBTBYT3-UCBOB(R2),UCB3DACC  DASD DEVICE?        GP99034
         BNE   INCRTIOT      NO; IGNORE                         GP99034
         CLC   OBVOL,UCBVOLI-UCBOB(R2)  SAME SERIAL?            GP99034
         BNE   INCRTIOT      NO; SKIP                           GP99034
         AGO   .MVS4CM                                          GP99034
.MVS4    ANOP  ,                                                 82005
INITA5   CLM   R3,7,TIOEFSRT  MATCHING UCB ADDRESS IN THIS ENTRY ?
         BNE   INCRTIOT      NO; KEEP LOOKING
.MVS4CM  BAS   R10,CLOSER    CLOSE DCB IF OPEN                   81152
INITCLOS MVC   @OBSDCB+DCBDDNAM-IHADCB(8),TIOEDDNM  INIT DDNAME  81152
         DROP  R4            DONE WITH TIOT
INITOPEN MVC   TEMP(3),UCBVTOC   SAVE TTR OF FORMAT 4 DSCB       81342
         MVC   OBREAS,=C'F4'  SET DSCB4 ERROR                   GP99034
         L     R2,DVTOC+12   GET DSCB 4 READ IN ADDRESS
         OBTAIN DVTOC
         BXLE  R15,R15,CJFCB    IF GOOD, COMPLETE THE JFCB
         LA    R14,8*2       TRY 'NORMAL' OS RETURN CODE
         CR    R14,R15       IS IT 'NORMAL' ?
         BNE   VOLFAIL       NO; VOLUME NOT AVAILABLE
CJFCB    CLI   0(R2),C'4'    WAS DSCB 4 READ IN ?
         BNE   VOLFAIL       NO; TOO BAD
* CREATE JFCB...DON'T NEED ONE FROM THE JOB QUEUE
         MVC   OBREAS,=C'19'  SET OPEN ERROR                    GP99034
         MVC   JFCBVOLS(6),OBVOL                                 81342
         OPEN  (@OBSDCB,INPUT),TYPE=J
         TM    @OBSDCB+DCBOFLGS-IHADCB,DCBOFOPN   GOOD OPEN ?    81152
         BZ    VOLFAIL       NO; TOO BAD
* SET UP DEVICE CHARACTERISTIC FOR RUN
*        (USE INFO & FORMAT 4 DSCB 'OBTAIN'ED)
         USING DS4IDFMT,R2                                       81342
OPENFDR  XC    BB,BB                   CLEAR THE BIN NO.         82249
         MVC   OBREAS,=C'IO'  SET PROCESSING ERROR              GP99034
         MVC   END,DS4HPCHR  SAVE ADDRESS OF LAST FORMAT 1       81342
         MVC   VTEND(4),DS4VTOCE+2+4  SAVE VTOC END EXTENT       81342
         MVC   VTEND+4(1),DS4DEVDT  SET # DSCBS/TRK              81342
         CLC   END,DS4F6PTR           START OF F6                81342
         BH    *+10
         MVC   END,DS4F6PTR                                      81342
         LA    R1,DS4VTOCI   POINTTO STATUS BITS                GP05155
         SUBCALL SUBVTOCI    EXAMINE THE STATUS                 GP05155
         CH    R15,=H'4'     USABLE HWM ?                       GP05155
         BL    FAKEFULL      YES; SHORTEN SEARCH                GP05155
         BE    TESTINDX      INDEXED; SEE WHETHER SUPPORTED     GP05155
         MVC   END(4),DS4VTOCE+2+4  USE VTOC END EXTENT          81342
TESTINDX TM    FDRFLAG,FDRON  DOING TAPE INPUT ?                 90252
         BNZ   FAKEFULL      YES; NO CVAF SUPPORT                90252
         AIF   (NOT &MVSSP).NOCVAF5                              90252
         L     R5,UCBPTR     GET UCB ADDRESS                     90252
         CVAFTST UCB=(R5)    TEST FOR INDEXED VTOC               90252
         CH    R15,=H'8'     INDEXED VTOC ?                      90252
         BNE   FAKEFULL      SKIP IF BAD, UNINDEXED OR UNSUPPORTED
         OI    OBFLAG,OBFINDX  SET TO USE INDEXED VTOC CODE      90252
.NOCVAF5 ANOP  ,                                                 90252
FAKEFULL MVC   END+4(1),DS4DEVDT  SET # DSCBS/TRK                81342
         MVC   TRKS,DS4DEVSZ+2        TRKS/CYL                   81342
         TM    FDRFLAG,FDRON    TAPE ?                           82249
         BNZ   NO2301        YES; NO UCB                         82249
         CLI   UCBTBYT4,X'02'            IS IT A 2301?
         BNE   NO2301
         DROP  R3            DONE WITH UCB
         MVI   TRKS+1,200              200 TRKS/CYL ON 2301
NO2301   MVC   DSCB+1(1),DS4DEVDT     DSCBS/TRK                  81342
         DROP  R2            DONE WITH DSCB 4                    81342
         TM    FDRFLAG,FDRON  TAPE I/O ?                         82249
         BNZ   VTCADSET      YES; ADDRESS ALREADY SET            82249
         LH    R5,TEMP                 TRK START OF VTOC
         XR    R4,R4                   SETUP TO FIND CYL ADDR
         LH    R6,TRKS                 GET NO. OF CC & HH FOR VTOC
         DR    R4,R6                   TO GET THE CCHH
         STH   R4,HH                   TRK ADDRESS
         STH   R5,CC                   CYL ADDRESS
VTCADSET TM    OBFLAG,OBFEXCP  EXCP I/O ?                        82249
         BNZ   READVTOC      YES - DON'T CLOBBER FMT 4
         SPACE 1
         L     R14,#ADR                YES, CLEAR STORAGE
         L     R15,#LIMIT    GET END ADDRESS                     82031
         SR    R15,R14       GET NUMBER OF BYTES TO CLEAR        82031
         LA    R15,1(,R15)                                       82031
         XR    R0,R0                                             82031
         XR    R1,R1                                             82031
         MVCL  R14,R0        CLEAR A BIG CHUNK                   82031
         SPACE 2
* CCHHR IS THE START OF THE VTOC
* END IS THE LAST FORMAT ONE (ACTIVE) DSCB IN THE VTOC
* BUILD AND EXECUTE A CHANNEL PROGRAM TO READ IN THE VTOC
*        (ONE TRACK AT A TIME)
READVTOC XC    MBB(8),MBB              CLEAR THE MBBCCHHR IN THE IOB
         L     R4,#AREA                INPUT AREA
         ST    R4,LASTREF    SET 'LAST REFERENCE' ADDRESS
         XC    LASTSORT,LASTSORT  CLEAR SORT POINTER
         USING AREASECT,R4
         MVC   CCHHR(4),CC   SAVE LOW ADDRESS
         MVI   CCHHR+4,1     R=1
         TM    OBFLAG,OBFEXCP  EXCP MODE ?
         BZ    READVTOK      NO; CONTINUE
         MVC   DS1DSNAM,JFCBDSNM  MAKE COMPLETE DSCB 4           81342
         B     INITDONE      NOW SERVICE THE REQUEST
READVTOK L     R3,#CCW                 CHANNEL PGM AREA
         ST    R3,IOB+16
         MVC   0(16,R3),CCWSHA         SEARCH (SHA & TIC)
         LA    R15,MBB+3
         ST    R15,0(,R3)
         MVI   0(R3),@SHA
         ST    R3,8(,R3)
         MVI   8(R3),@TIC
*
EXCPLOOP L     R3,#CCW
         LA    R3,16(,R3)               START OF READ CCWS
         MVC   MBB+1(6),BB             INIT THE IOB FOR THIS TRACK
         LA    R10,1                   SET 'R' TO 1
         LR    R5,R4                   SAVE FOR CCHH SCAN
         LA    R15,AREALEN(,R4)  GET END OF THIS ENTRY
         C     R15,#LIMIT
         BNL   VOLMIX        OVER LIMIT - CLOSE AND EXIT
*
CCWLOOP  MVC   0(8,R3),CCWKD           BUILD THE READ CCW
         LA    R15,AREALEN(,R4)  GET END OF THIS ENTRY
         C     R15,#LIMIT
         BNL   CCWDONE       OVER LIMIT - DO PARTIAL TRACK
CCWLOOP1 LA    R15,DS1DSNAM            A(DSCB INPUT AREA)
         ST    R15,0(,R3)
         MVI   0(R3),@KD
         LA    R3,8(,R3)                UPDATE CCW PNTR
         C     R3,#AREA
         BNL   VOLFAIL
CCWLOOP2 XC    RES,RES
         STC   R10,R                SET CCHHR FOR STORAGE BLOCK
         MVC   CCHHR,CC
         TM    FDRFLAG,FDRON   USING FDR TAPE ?                  82249
         BZ    CCWLOOP3      NO; TOO BAD                         82249
         READFDR READ,CCHHR  READ THE REQUESTED RECORD           82249
         CH    R15,=H'4'     CHECK RETURN                        82249
         BE    CCWLOOP3      DUMMY RECORD OR FMT5                82249
         BH    BADFDR        ERROR                               82249
         MVC   CCHHR(8+DSCBLEN),0(R1)  SAVE COUNT AND DATA       82249
CCWLOOP3 ST    R4,SORPOINT   POINT TO CURRENT BLOCK              82249
         LA    R4,AREALEN(,R4)  SET FOR NEXT BLOCK               82031
         LA    R10,1(,R10)              BUMP 'R' COUNT
         CH    R10,DSCB                END OF TRACK?
         BNH   CCWLOOP                 NO, LOOP
*
CCWDONE  LH    R15,HH                  UPDATE CCHH
         LA    R15,1(,R15)
         CH    R15,TRKS
         BNE   *+18
         LH    R14,CC
         LA    R14,1(,R14)
         STH   R14,CC
         XR    R15,R15
         STH   R15,HH
*
EXCP     SH    R3,=H'4'                BACKUP AND
         NI    0(R3),255-@CC           TURN OFF CMD CHAINING
         XC    ECB,ECB
         TM    FDRFLAG,FDRON  USING FDR TAPE ?                   82249
         BNZ   EXCP1         YES; SKIP DISK EXCP                 82249
         EXCP  IOB
         WAIT  ECB=ECB
         CLI   ECB,X'7F'               READ OK?
         BNE   VOLFAIL
* SCAN DSCBS TO GET CCHH OF LAST VALID/USED DSCB
EXCP1    LR    R15,R4                  SAVE
         LR    R4,R5
EXCP2    CR    R4,R15
         BNL   EXCP3
         MVI   RES+2,X'FF'   MAKE SORT SEQUENCE BYTE
         TM    DS1FMTID,C'0'  NUMERIC DSCB ID ?
         BNO   *+16          NO; LEAVE FF
         MVC   RES+2(1),DS1FMTID  COPY IT
         TR    RES+2(1),SORTSEQT-C'0'  PUT INTO SEQUENCE
         CLI   DS1FMTID,C'4'           SKIP F4
         BE    EXCP2A
         CLC   END(4),DS1PTRDS
         BNL   *+10
         MVC   END,DS1PTRDS
EXCP2A   LA    R4,AREALEN(,R4)
         B     EXCP2
EXCP3    LR    R4,R15                  RESTORE
         CLC   CC(4),END               DONE?
         BNH   EXCPLOOP
*
         BAS   R10,CLOSET    CLOSE THE DCB IF NOT CVAF           90252
EXCPEX   C     R4,#STORMAX                                       81152
         BNH   *+8
         ST    R4,#STORMAX                                       81152
         ST    R4,#TOP
         SH    R4,=Y(AREALEN)                                    82031
         MVC   CC(5),CCHHR   MAKE SURE HIGH CCHHR AVAILABLE
         B     INITDONE      NOW START PROCESSING THIS REQUEST
         SPACE 1
VOLMIX   OI    OBFLAG,OBFMIX  INDICATE MIXED VOLUME PROCESSING
         B     EXCPEX        AND SET POINTER PROPERLY
         EJECT ,
*        GETMAIN + READ VTOC FAILED - USE EXCP FOR ACCESS
*
DOEXCP   TM    @OBSDCB+DCBOFLGS-IHADCB,DCBOFOPN  DCB OPEN ?      81152
         BZ    VOLFAIL       NO; BUT HOW ?
         L     R4,#AREA      GET FORMAT4 AREA BACK
         TM    0(R9),1       SEEK OR SEARCH ?
         BNZ   DOSEARCH      SEARCH
         TM    0(R9),X'D0'   SEEK OR SCAN MODE SEARCH ?
         BO    DOSCAN        SCAN MODE
DOSEEK   LA    R1,SEEKCCW    SET UP CCW
         ST    R1,IOB+16
         MVC   MBB+3(5),0(R6)  COPY USER'S CCHHR
         MVC   SCANID(5),0(R6)  COPY TO RETURN ADDRESS
         MVC   SEEKCCW2+1(3),13(R9) COPY USER'S ADDRESS
         BAS   R5,DOIO       DO EXCP                            GP99026
         B     DOEXIT        GOOD RETURN
         LA    R15,20        SET FOR BAD EXTENT
         CLI   ECB,X'42'     BAD EXTENT ?
         BE    GOODBAD       YES - RETURN WITH ERROR
         B     COMFAILS      ELSE LET OBTAIN SVC HANDLE
         SPACE 1
DOSEARCH LA    R1,SRCHCCW    SET UP CCW
         ST    R1,IOB+16
         MVC   MBB+3(4),CC     USE HIGH ADDRESS
         MVI   MBB+7,1       SET RECORD 1
         MVC   SRCHCCW2+1(3),5(R9)  SET DSN ADDRESS
         MVC   SRCHCCW3+1(3),13(R9) AND DATA PORTION
         MVI   ERRCNT,X'0C'  CLEAR ERROR COUNTER
DOSER2   BAS   R5,DOIO       DO EXCP                            GP99026
         B     DOSERCD       OK - NOW ADJUST CCHHR
         CLI   ECB,X'42'
         BE    DOSCEND
         CLI   ECB,X'41'     UNIT CHECK/EXCEPTION ?
         BNE   COMFAILT      NO; TOO BAD
         CLC   =X'0C40',IOB+12  END OF VTOC ?
         LA    R15,8         SET FOR DSCB NOT FOUND
         BE    GOODBAD       AND EXIT
         CLC   =X'0E40',IOB+12  FUNNY ECC ERROR ?
         BNE   COMFAILT      NO; REPORT ERROR
         AP    ERRCNT,=P'3'  UP RETRY COUNTER
         BO    COMFAILT      ON OVERFLOW - USE SLOW OS CODE
         B     DOSER2        ELSE REPEAT I/O
         SPACE 1
DOSERCD  XR    R15,R15
         IC    R15,SCANID+4  GET R OF NEXT RECORD
         SH    R15,=H'1'     SUBTRACT 1
         BP    DOSERCDS      OK; STASH BACK
         IC    R15,DSCB+1    ELSE SET FOR LAST ON TRACK
DOSERCDS STC   R15,SCANID+4  STASH RECORD ID
         SPACE 1
DOEXIT   LA    R15,DATALEN(,R8)   POINT PAST RESULT              81342
         TM    0(R9),1       SEEK ?
         BNZ   *+8           NO; OK
         LA    R15,KEYLEN(,R15)  ELSE ALLOW FOR KEY              81342
         MVC   0(5,R15),SCANID  RETURN CCHHR
         TM    0(R9),1       SEEK ?                              90252
         BZ    TESTCVAF      YES; CHECK FOR INDEXED VTOC FMT 5   90252
         B     GOODEXIT      TAKE GOOD EXIT
         SPACE 1
DOSCAN   XR    R15,R15
         IC    R15,16(,R9)   GET MASK LENGTH - 1
         LA    R15,1(,R15)   MAKE TRUE LENGTH
         STC   R15,SCANCCW3+7  PLACE INTO CCW
         MVC   SCANCCW3+1(3),17(R9)  COPY MASK ADDRESS
         MVC   SCANCCW4+1(3),13(R9)  SET OUTPUT ADDRESS
         MVC   MBB+3(5),0(R6)   SET STARTING CCHHR
         MVI   ERRCNT,X'0C'  CLEAR ERROR COUNTER
         IC    R15,MBB+7     GET REQUESTED CCHHR
         LTR   R15,R15
         BNP   *+6
         BCTR  R15,0         BUT START SEARCH ONE EARLIER
         STC   R15,MBB+7
         LA    R1,SCANCCW
         ST    R1,IOB+16     SET CCW START
DOSCAN2  BAS   R5,DOIO       PERFORM THE I/O                    GP99026
         B     DOEXIT        OK
         CLI   ECB,X'42'
         BE    DOSCEND
         CLI   ECB,X'41'     UNIT CHECK/EXCEPTION ?
         BNE   COMFAILT      NO; TOO BAD
         CLC   =X'0C40',IOB+12  END OF VTOC ?
DOSCEND  LA    R15,8         SET FOR DSCB NOT FOUND
         BE    GOODBAD       AND EXIT
         CLC   =X'0E40',IOB+12  FUNNY ECC ERROR ?
         BNE   COMFAILT      NO; REPORT ERROR
         AP    ERRCNT,=P'3'  UP RETRY COUNTER
         BO    DOSEEK        ON OVERFLOW - USE NORMAL SEEK CODE
         B     DOSCAN2       ELSE REPEAT I/O
         SPACE 1
DOIO     MVI   ECB,0         DON'T TRUST ANYONE
         NI    IOB,X'FE'     KILL THE RESTART BIT
         EXCP  IOB           DO THE I/O
         WAIT  ECB=ECB       WAIT FOR COMPLETION
         CLI   ECB,X'7F'     PERFECT ?
         BER   R5            MAYBE
         B     4(,R5)        DEFINITELY NOT
         SPACE 1                                                 81152
CLOSET   TM    OBFLAG,OBFINDX  INDEXED VTOC ?                    90252
         BNZR  R10           YES; NEED DEB ADDRESS FOR CVAF      90252
CLOSER   TM    @OBSDCB+DCBOFLGS-IHADCB,DCBOFOPN  DCB OPEN ?      81152
         BZ    CLOSENOP      NO                                  81152
         CLOSE (@OBSDCB)     CLOSE IT                            81152
CLOSENOP ICM   R0,15,@FDRREAD   FDR TAPE ?                       82249
         BZ    CLOSENFD      NO                                  82249
         READFDR CLOSE       CLOSE THE TAPE AND FREE BUFFERS     82249
         DELETEST EP=@FDRREAD  FREE THE MODULE                   82249
CLOSENFD DELETEST EP=@SERVICE  FREE THE SERVICE ROUTINE          82249
         MVI   FDRFLAG,0     RESET FDR FLAG                      82249
         AIF   (NOT &MVS).NOMVSCL                                81342
         MVC   DYNDDNAM,BLANKS   INITIALIZE DDNAME FOR NEXT TIME 81342
         AIF   ('&LOCAL' NE 'CCSI').MVS5                         82005
.NOMVSCL ICM   R2,15,DYNTIOT  WAS TIOT MODIFIED ?                81342
         BNMR  R10           NO; RETURN                          81152
         TESTAUTH FCTN=1     STILL AUTHORIZED ?                  81152
         BXH   R15,R15,0(R10)  NO; TOO BAD                       81152
         MODESET KEY=ZERO                                        81152
         USING TIOT,R2       DECLARE MAPPING FOR TIOENTRY-24     81152
         MVC   TIOEFSRT(3),DYNTIOT+5  RESTORE OLD UCB            81152
         MVI   DYNTIOT,0     RESET FLAG BIT                      81152
         MODESET KEY=NZERO                                       81152
.MVS5    BR    R10           RETURN TO CALLER                    82005
         EJECT ,
TEMP     DC    D'0'
DB       DC    D'0'          ANOTHER WORK AREA                   82249
* CONSTANTS, ETC. FOR CHANNEL PROGRAM
CCWSHA   CCW   @SHA,0,@CC,4            SEARCH HOME ADDRESS
CCWTIC   CCW   @TIC,0,@CC,0            TRANSFER IN CHANNEL
CCWKD    CCW   @KD,0,@CC+@SLI,DSCBLEN  READ: KEY,DATA; LEN=140   81342
         SPACE 1
SEEKCCW  CCW   X'31',MBB+3,@CC,5       SEARCH ID =
         CCW   @TIC,*-8,@CC,0
SEEKCCW2 CCW   @KD,0,0,DSCBLEN         READ KEY & DATA           81342
         SPACE 1
SRCHCCW  CCW   X'31',MBB+3,@CC,5       SEARCH ID = RCD 1
         CCW   @TIC,*-8,@CC,0
SRCHCCW2 CCW   X'A9',0,@CC,KEYLEN  M/T SEARCH KEY =              81342
         CCW   @TIC,SRCHCCW2,@CC,0
SRCHCCW3 CCW   6,0,@CC,DATALEN         READ DATA                 81342
         CCW   X'12',SCANID,0,8        READ COUNT OF NEXT RECORD
         SPACE 1
SCANCCW  CCW   X'31',MBB+3,@CC,5       SEARCH ID =
         CCW   @TIC,*-8,@CC,0
SCANCCW2 CCW   X'92',SCANID,@CC,8      M/T READ COUNT
SCANCCW3 CCW   X'29',0,@CC+@SLI,0      SEARCH PARTIAL KEY =
         CCW   @TIC,SCANCCW2,@CC,0
         CCW   X'31',SCANID,@CC,5      SEARCH ID = TO CURR. COUNT
         CCW   @TIC,*-8,@CC,0
         ORG   *-1
ERRCNT   DC    PL1'0'        ECC ERROR RETRY COUNTER
SCANCCW4 CCW   @KD,0,0,DSCBLEN         READ KEY & DATA           81342
SCANID   DC    XL8'0'        ID INPUT FIELD FOR SCAN
*
@CC      EQU   X'40'
@SLI     EQU   X'20'
@SHA     EQU   X'39'
@TIC     EQU   X'08'
@KD      EQU   X'0E'
*
SAVE     DC    18F'0'
         AIF   (NOT &MVS).NO99PRM                                81342
DYNPARMP DC    0A(0),X'80',AL3(DYNPARM)  PARM POINTER            81342
DYNPARM  DC    AL1(20,S99VRBAL,S99NOMNT,0)  ALLOC/NO MOUNT       81342
         DC    Y(0,0),A(DYNTUP1)   ERROR CODES/TEXT UNIT POINTER 81342
         DC    A(0),AL1(0,0,0,0)   RESERVED/FLAGS                81342
DYNTUP1  DC    A(TU1)        RETURN DDNAME                       81342
         DC    A(TU2)        UNIT NAME                           81342
         DC    A(TU3)        VOLSER                              81342
         DC    A(TU4)        LABEL=PRIVATE ?                     81342
         DC    A(TU5)        DISP=OLD                            81342
         DC    X'80',AL3(TU6)   FREE=CLOSE                       81342
TU1      DC    Y(DALRTDDN,1,8)                                   81342
DYNDDNAM DC    CL8' '        RETURNED DDNAME                     81342
TU2      DC    Y(DALUNIT,1,3)                                    81342
DYNUNIT  DC    CL3' '        SUPPLIED UNIT NAME                  81342
TU3      DC    Y(DALVLSER,1,6)                                   81342
DYNVOLSR DC    CL6' '        SUPPLIED VOLUME SERIAL              82202
TU4      DC    Y(DALPRIVT,0)   PRIVATE                           81342
TU5      DC    Y(DALSTATS,1,1)  DISP=                            81342
         DC    X'01'                 OLD                         81342
TU6      DC    Y(DALCLOSE,0) FREE=CLOSE ?                        81342
.NO99PRM SPACE 1                                                 81342
         AIF   (&MVS AND '&LOCAL' NE 'CCSI').MVS6                82005
DYNTIOT  DC    A(0,0)        +A(VOLMOUNT DD IN TIOT), -USED FOR OPEN
.MVS6    ANOP  ,                                                 82005
LASTREF  DC    A(0)          LAST REFERENCED ADDRESS
MASKUCB  DC    X'0000FFFF'   UCB MASK - ON F BOUND
MINIMUM  DC    A(20*1024)    REASONABLE MINIMUM STORAGE
#SIZE    DC    A(04*1024,1024*1024)    FOR STORAGE MANAGEMENT    88347
#ADR     DC    A(0,0)
#FREE    DC    A(0)          MUST BE FOLLOWED BY @OBSERVE
@OBSERVE DC    A(8192)       CALLER'S AMOUNT TO BE LEFT FREE     81342
LASTSORT DC    A(0)          SORT CHAIN POINTER
#AREA    DC    A(0)                    A(TOP WORK/BOTTOM DSCB)
#STORMAX DC    A(0)                    A(MAX STORAGE EVER USED)  81152
#CCW     DC    A(0)                    A(BOTTOM WORK AREA)
#TOP     DC    A(0)                    A(CURRENT TOP OF AREA)
#LIMIT   DC    A(0)                    A(MAX DYNAMIC STORAGE)
*
BLANKS   DC    CL8' '
TRKS     DC    H'0'                    TRKS/CYL
DSCB     DC    H'0'                    DSCBS/TRK
*
BB       DC    H'0'                    CURRENT BBCCHHR
CC       DC    H'0'
HH       DC    H'0'
R        DC    HL1'0'
END      DC    XL5'0'                  CCHHR OF LAST FORMAT 1
VTEND    DC    XL5'0'        END OF VTOC (CCHHR)                 79276
SORTSEQT DC    X'FFF1F2F304F5F6F7F8F9FFFFFFFFFFFF'  SORT COLL. SEQ.
         SPACE 2
         LTORG
         SPACE 2
* I/O, ETC. CONTROL BLOCKS
ECB      DC    F'0'
IOB      DC    X'42',AL3(0),AL1(0),AL3(ECB)
         DC    F'0',F'0'
TERM     DC    AL1(0),AL3(0),AL1(0),AL3(@OBSDCB)
         DC    2F'0'
MBB      DC    XL7'00',X'00'
*
@OBSDCB  DCB   MACRF=E,EXLST=EXLST,DDNAME=@,IOBAD=IOB            81342
EXLST    DC    0A(0),X'87',AL3(JFCBDSNM)  JFCB ADDRESS           81342
JFCB     DC    44F'0'        CLEAR JFCB STORAGE                  81342
         ORG   JFCB          ,                                   81342
         IEFJFCBN ,                                              81342
         ORG   JFCBDSNM                                          81342
         DC    44X'04'       FORMAT 4 DSCB 'DSNAME'              81342
         ORG   JFCBTSDM                                          81342
         DC    AL1(JFCNWRIT+JFCNDSCB+JFCNDCB)  LEAVE PRISTINE    81342
         ORG   ,                                                 81342
*
         PRINT &PRTSYS                                           81338
DVTOC    CAMLST SEARCH,JFCBDSNM,OBVOL,3                          81342
OBWTO    DC    0H'0',AL2(OBWROUT-*,X'8000'),C'@OBTAINS FAILED FOR '
OBVOL    DC    CL6'*STOR*'   VOL-SER; INIT. VALUE TO FORCE PROC.
         DC    C' '            SPACER                           GP99034
OBREAS   DC    CL2' '        REASON CODE                        GP99034
OBWROUT  DC    X'02008020'   DESC=7,ROUT=(1,11)
OBFLAG   DC    X'0'          PROCESSING FLAG
OBFAIL   EQU   X'80'         MAJOR ERROR - BYPASS ALL REQUESTS
OBFVOL   EQU   X'40'         BYPASS THIS VOLUME ONLY
OBFMIX   EQU   X'20'         PARTIAL VTOC IN STORAGE
OBFEXCP  EQU   X'10'         NO STORAGE - USE EXCP FOR EVERYTHING
OBFSORT  EQU   X'08'         SORT REQUESTED                      82031
OBFINDX  EQU   X'04'           INDEXED VTOC PROCESSING (FMT 5)   90252
FDRFLAG  DC    X'00'         TAPE VTOC FLAG                      82249
FDRON    EQU   X'80'           USE FDR TAPE FOR THIS VOLUME      82249
@FDRREAD DC    A(0)          ADDRESS OF FDR READ ROUTINE         82249
@SERVICE DC    A(0)          ADDRESS OF SERVICE ROUTINE          82249
COMFVOLS DC    8XL6'0'       LIST OF VOLUMES WTO'D
         AIF   (NOT &MVSSP).UCBCOM2  SKIP IF NOT SP/XA/ESA       90201
UCBPLIST DC    A(UCBWORK,UCBCLASS),X'80',AL3(UCBPTR)             90201
UCBPTR   DC    A(0)                                              90201
UCBCLASS DC    AL1(UCB3DACC)  DASD UCBS ONLY                     90201
UCBWORK  DC    25F'0'        WORK AREA (ALIGNED)                 90201
LOOKWORK EQU   UCBPTR,*-UCBPTR,C'X'  XC LABEL                    90201
         SPACE 1                                                 90252
         ORG   UCBWORK       RE-USE SOME SPACE                   90252
EXTCOUNT DC    F'26'         NUMBER OF EXTENTS IN ONE CHUNK      90252
EXTTAB   DC    26XL5'0'      RETURNED EXTENTS                    90252
         ORG   ,                                                 90252
KWAF     CVAFDSM ACCESS=MAPDATA,MAP=VOLUME,EXTENTS=EXTCOUNT+3,         *
               COUNT=NO,BRANCH=NO,DEB=123,MF=L                   90252
         ORG   KWAF                                              90252
         PRINT &PRTSYS                                           90252
CVPLMAP  ICVAFPL DSECT=NO                                        90252
         PRINT &PRTSYS                                           90252
         DS    0D            MAKE IT VERY EVEN                   90252
.UCBCOM2 SPACE 1                                                 90201
* WORK AREA (DYNAMIC STORAGE) DEFINITIONS
AREASECT DSECT ,             SINGLE DSCB ENTRY MAPPING
SORPOINT DS    F             POINTER TO NTH SORTED ENTRY         82031
CCHHR    DS    CL5                     FOR THIS DSCB
RES      DS    CL3                     FLAGS
         IECSDSL1 1          EXPAND FORMAT 1 DSCB                81152
         ORG   DS1FMTID                                          81342
         IECSDSL1 4          AND FORMAT 4                        81342
KEYLEN   EQU   L'DS1DSNAM    LENGTH OF DSCB KEY                  81342
DATALEN  EQU   DS1END-DS1FMTID    LENGTH OF DSCB DATA            81342
DSCBLEN  EQU   DS1END-DS1DSNAM    LENGTH OF DSCB                 81342
         DS    0F            FORCE ALIGNMENT
AREALEN  EQU   *-AREASECT           STORAGE BLOCK LENGTH
         SPACE 1
         ORG   RES+2         SORT FIELD IS CONTROL BYTE + DSN
DATAKEY  DS    CL(1+L'DS1DSNAM)                                  82031
         SPACE 1                                                 90252
         ORG   IECSDSL1                                          90252
         IECSDSL1 5          EXPAND FORMAT 5 DSCB MAPPING        90252
         ORG   ,
         SPACE 2
         CVT   DSECT=YES                                         82005
         IHACDE ,                                                82249
         SPACE 2
UCB      DSECT ,
         IEFUCBOB ,
         SPACE 2
TIOT     DSECT ,
         IEFTIOT1 ,
         SPACE 2
         DCBD  DSORG=PS,DEVD=DA                                  81152
         SPACE 1                                                 81152
         YREGS ,
         AIF   (NOT &MVS).NO99MAP                                81342
         IEFZB4D0 ,                                              81342
         IEFZB4D2 ,                                              81342
.NO99MAP END   ,                                                 81342
