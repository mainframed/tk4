DT       TITLE 'D T  ***  DISPLAY TIME-SHARING USER INFORMATION'
         MACRO ,                                                GP10065
&NM      SHEX  &OUT,&IN,&XL,&FILL=C' '  HEX OUTPUT FORMATTING   GP10065
         LCLC  &L,&IL                                           GP10065
         AIF   (T'&XL EQ 'O').DFLT                              GP10065
&NM      UNPK  &OUT.(2*&XL+1),&IN.(&XL+1)                       GP10065
         TR    &OUT.(2*&XL),HEXTRTAB                            GP10065
         AIF   (T'&FILL EQ 'O').MEND                            GP10065
         MVI   &OUT+2*&XL,&FILL                                 GP10065
         MEXIT ,                                                GP10065
.DFLT    ANOP  ,                                                GP10065
&L       SETC  'L'''                                            GP10065
&NM      UNPK  &OUT.(2*&L&IN+1),&IN.(&L&IN+1)                   GP10065
         TR    &OUT.(2*&L&IN),HEXTRTAB                          GP10065
         AIF   (T'&FILL EQ 'O').MEND                            GP10065
         MVI   &OUT+2*&L&IN,&FILL                               GP10065
.MEND    MEND  ,                                                GP10065
         PUNCH '  ORDER DT(P) '   MAKE DUMPS EASIER             GP10065
         SPACE 1
DT       START 0
         SPACE 1
* ***************************************************************
*
*     NAME:      DT
*     WRITEN BY: SCOTT VETTER
*     COPYWRITE: GPL
*                OWNER RETAINS RIGHTS
*     PURPOSE:   TO DISPLAY THE TSO USERS ON THE SYSTEM.
*     INPUT:     NONE
*     PARM:      NONE   - JUST DISPLAY THE USERID
*                DETAIL - DISPLAY THE DETAIL FOR THE USER
*                D      - SAME AS ABOVE
*     OUTPUT:    DISPLAY THE TSO USERS
*     ABENDS:
*                2 - ASVT WAS FOUND TO BE BAD.
*     NOTE(S):   INTENDED TO RUN ON A TSO TERMINAL (USES TPUT)
*     DATASETS:  NONE
*     ATTRIBUTES: NOT REFRESHABLE, NOT REENTRANT, NOT REUSABLE. GP10065
*     REQUIREMENTS:  DURING ASSEMBLY, SYSLIB REQUIRES:
*                      SYS1.MACLIB
*                      SYS1.AMODGEN
*                PUT INTO A TSO ACCESSIBLE LIBRARY (E.G., SYS2.CMDLIB)
*     MACROS:    INTERNAL - SHEX                                GP10065
*                EXTERNAL - TPUT, ABEND, YREGS                  GP10065
*     CONTROL BLOCKS: CVT, IHAASVT, IHAASXB, IEECHAIN, IRAOUCB, IHAOUXB
*     TO BE DONE:
*          - ADD TSO HELP
*          - CLEANUP AND ADD INTERNAL DOCUMENTATION.
*     CHANGE LOG:
*        MINOR CLEANUP. REMOVED ABEND FOR INVALID COMMAND NAME. GP10065
*
* ***************************************************************
         SPACE 1
         USING *,R15                                            GP10065
         B     BEGIN                                            GP10065
         DC    AL1(17),CL9'DT       ',CL8'&SYSDATE'             GP10065
BEGIN    STM   R14,R12,12(R13)       SAVE CALLER'S REGISTERS
         LR    R12,R15               COPY BASE REGISTER         GP10065
         DROP  R15                                              GP10065
         USING DT,R12                TELL ASMBLR BASE REGISTER  GP10065
         ST    R13,SAVEAREA+4        SAVE CALLERS SAP
         LA    R13,SAVEAREA          POINT TO OUR SAVE AREA
         LR    R4,R1                 SAVE PARM POINTER
         SPACE 3
*   PROCESS PARM (DIFFERENT FOR PROGRAM AND CP INVOCATION)
         L     R5,0(,R4)             GET START OF PARM LEN
         LH    R15,0(,R5)    GET TEXT LENGTH                    GP10065
         CLI   2(R5),0       IS IT CP ?                         GP10065
         BH    MOVEPARM      NO; PARM FORMAT                    GP10065
         SH    R15,2(,R5)    DECREMENT RESIDUAL LENGTH          GP10065
         AH    R5,2(,R5)     SKIP COMMAND NAME                  GP10065
         LA    R5,2(,R5)     FINAGLE                            GP10065
         SH    R15,=H'4'      DITTO                             GP10065
MOVEPARM SH    R15,=H'1'     ANY OPTION?                        GP10065
         BM    PARMDONE      NO; DEFAULT                        GP10065
         CH    R15,=AL2(L'LINE-1)                               GP10065
         BNH   *+8                                              GP10065
         LH    R15,=AL2(L'LINE-1)                               GP10065
         EX    R15,EXMVCPRM  UPPERCASE AND SAVE PARM            GP10065
         LA    R14,1                                            GP10065
         LA    R15,LINE(R15)      LAST BYTE                     GP10065
         LA    R1,LINE            FIRST BYTE                    GP10065
PARMLOOP CLI   0(R1),C'D'         D OR DETAIL ?                 GP10065
         BE    PARMTEST               NO - GO CHECK FOR MORE    GP10065
         CLI   0(R1),C' '    ONLY BLANK AND D VALID             GP10065
         BNE   PARMFAIL                                         GP10065
         BXLE  R1,R14,PARMLOOP    TRY AGAIN                     GP10065
         B     PARMDONE           ALL BLANK                     GP10065
         SPACE 1
PARMTEST MVI   DETAILSW,C'1'         SET TO DISPLAY DETAIL
         CLI   1(R1),C' '         JUST 'D'?                     GP10065
         BE    PARMDONE           YES; CONTINUE                 GP10065
         CLC   =C'DETAIL ',0(R1)  DETAIL REQUESTED?             GP10065
         BE    PARMDONE           YES; CONTINUE                 GP10065
PARMFAIL TPUT  MSGPARM,L'MSGPARM                                GP10065
         LA    R15,12        SET ERROR                          GP10065
         B     PGMEXIT               GO END PROGRAM             GP10065
EXMVCPRM OC    LINE(0),2(R5)      SAVE PARAMETER                GP10065
MSGPARM  DC    C'Option not recognized; use D or DETAIL'        GP10065
         SPACE 3
PARMDONE L     R3,CVTPTR     GET CVT                            GP10065
         USING CVT,R3                TELL ASSEMBLER TO MAP IT
*WHY?    L     R2,CVTOPCTP           LOAD PTR TO SRM'S RMCT
*WHY?    ST    R2,SAVERMCT           AND SAVE IT FOR LATER USE
         L     R2,CVTASVT            LOAD THE ASVT
         DROP  R3                                               GP10065
         USING ASVT,R2               AND TELL ASSEMBLER TO MAP IT
         TPUT  =C' TSO USERS: ',12
         CLI   DETAILSW,C'0'          DETAIL TO BE DISPLAYED?
         BE    GOTASVT                NO - BYPASS THE LABEL
         TPUT  HEADER,L'HEADER                                  GP10065
GOTASVT  DS    0H
         L     R3,ASVTMAXU            GET MAX # OF ASVT ENTRIES
         LA    R4,ASVTFRST-4          POINT TO ASVT ENTRY -4
         LR    R6,R3                  COPY MAX ASVTS
         USING ASVT,R2
         CLC   =C'ASVT',ASVTASVT      GOT THE ASVT?
         BE    LOOPASVT
         TPUT  =C'NO ASVT FND',10
         ABEND 002,DUMP
         USING ASCB,R5
         USING CSCB,R10
LOOPASVT LA    R4,4(,R4)             INCREMENT INTO ASVT
         ICM   R5,15,0(R4)           LOAD AND TEST              GP10065
         BNP   NEXTASVT
         ICM   R0,15,ASCBTSB      TSO SESSION ?                 GP10065
         BZ    NEXTASVT           NO; SKIP                      GP10065
         L     R10,ASCBCSCB          LOAD CSCB ADDRESS
         TM    CHTRKID,CHINITID      IS THIS AN INIT?
         BNO   LOOP2                  NO -                      GP10065
         LR    R9,R10                SAVE CSCB POINTER
         ICM   R8,15,ASCBJBNI     POINT TO JOBNAME              GP10065
         BZ    LOOP2                  NO ENTRY                  GP10065
         S     R8,=F'8'              SUBTRACT 8
         LR    R10,R8                SAVE IT
         B     NEXTASVT              GO BACK AND SEE IF THERE IS MORE
         SPACE 1
LOOP2    TM    CHTRKID,CHJOBID       IS THIS AN STC?
         BO    NEXTASVT              GO BACK AND SEE IF THERE IS MORE
         TM    CHTRKID,CHTSID        IS THIS A TSO USER?
         BNO   NEXTASVT               NO - IT'S NOT ANYTHING - BYPASS
         MVC   LINE,LINE-1   CLEAR OUTPUT                       GP10065
         MVC   LINEJOBN(8),CHKEY     MOVE JOBNAME
         CLI   DETAILSW,C'0'         DETAIL TO BE DISPLAYED?
         BE    WRITE                  NO - BYPASS THE DETAIL    GP10065
         OC    LINESTEP,CHPROCSN     MOVE STEPNAME              GP10065
         OC    LINEPRST,CHCLS        MOVE PROC/STEP NAME        GP10065
WRITE    L     R7,ASCBOUCB           LOAD ADR OF OUCB AREA
         USING OUCB,R7               TELL ASSEMBLER ABOUT IT
         CLI   DETAILSW,C'0'         DETAIL TO BE DISPLAYED?
         BE    WRITE2                 NO - BYPASS THE DETAIL
ASID     SHEX  LINEASID,ASCBASID     FORMAT AS ID               GP10065
DPRTY    SHEX  LINEDPRT,ASCBDP       FORMAT PRIORITY            GP10065
NPG      SHEX  LINENPG,OUCBNPG       PERFORMANCE GROUP          GP10065
*        BAL   R9,RPG
*        BAL   R9,NDP
*        BAL   R9,RDP
DMN      SHEX  LINEDMN,OUCBDMN       DOMAIN                     GP10065
         BAL   R9,MEMSWPO            EXTRACT SWAP INFORMATION
*        BAL   R9,WSS                PROCESS WSS FLD
WRITE2   DS    0H
         TPUT  LINE,L'LINE           DISPLAY THE LINE W/VARIABLE INFO
NEXTASVT BCT   R3,LOOPASVT          LOOK FOR MORE               GP10065
*NEXT*   B     RETURN               ALL DONE                    GP10065
         SPACE 3
RETURN   SR    R15,R15              SET GOOD RETURN             GP10065
PGMEXIT  L     R13,SAVEAREA+4       RELOAD CALLERS SAP
         L     R14,12(,R13)         RELOAD RETURN REGISTER      GP10065
         LM    R0,R12,20(R13)       RELOAD CALLER'S REGISTERS   GP10065
         BR    R14                  RETURN TO CALLER
         SPACE 3
MEMSWPO  DS    0H
         SR    R15,R15               CLEAR COMPARE REGISTER
         IC    R15,OUCBSRC           LOAD IN SWAP REASON
         SLL   R15,2                 SHIFT TO GET INDEX
         LA    R15,SAWPREAS(R15)     POINT TO THE ENTRY
         MVC   LINESWRC(4),0(R15)    MOVE IT TO OUTPUT LINE
*
         TM    OUCBSFL,OUCBNSW       NON-SWAPABLE
         BZ    MEMPOS1                NO - CHECK NEXT CONDITION
         MVC   LINEMEMP,=C'NS'       SET AS NON-SWAPABLE
         B     MEMPOSX               GO EXIT CHECKS AS WE GOT THE COND.
MEMPOS1  EQU   *
         TM    OUCBSFL,OUCBPVL       PRIVILEGE STATUS?
         BZ    MEMPOS2                NO - CHECK NEXT CONDITION
         MVC   LINEMEMP,=C'PR'       SET AS PRIVILEGED - NOW NICE EH?
         B     MEMPOSX               GO EXIT CHECKS AS WE GOT THE COND.
MEMPOS2  EQU   *
         TM    OUCBSFL,OUCBOFF       WAITING?
         BZ    MEMPOS3                NO - CHECK NEXT CONDITION
         MVC   LINEMEMP,=C'WA'       SET AS WAITING
         B     MEMPOSX               GO EXIT CHECKS AS WE GOT THE COND.
MEMPOS3  EQU   *
         TM    OUCBSFL,OUCBOUT       SWAPPED OUT?
         BZ    MEMPOS4                NO - CHECK NEXT CONDITION
         MVC   LINEMEMP,=C'OU'       SET AS SWAPPED OUT
         B     MEMPOSX               GO EXIT CHECKS AS WE GOT THE COND.
MEMPOS4  EQU   *
         TM    OUCBQFL,OUCBGOO+OUCBGOI+OUCBGOB  IN TRANSITION?
         BZ    MEMPOSU                NO - CHECK NEXT CONDITION
         MVC   LINEMEMP,=C'<>'       SET AS IN TRANSITION
         B     MEMPOSX               GO EXIT CHECKS AS WE GOT THE COND.
MEMPOSU  EQU   *
         MVC   LINEMEMP,=C'??'       SET AS TWILIGHT ZONE
         B     MEMPOSX               GO EXIT CHECKS AS WE GOT THE COND.
MEMPOSX  EQU   *
         BR    R9                    GO RETURN TO CALLER
WSS      DS    0H
         MVC   LINEEXCC,=C'********'
         SR    R1,R1
         LH    R1,OUCBWSS           GET WSS VALUE
         CVD   R1,DBLAREA           CONVERT IT TO PD FORMAT
         MVC   LINEWSS(6),EDMASK    MOVE EDIT MASK TO OUTPUT FIELD
         ED    LINEWSS,DBLAREA+5    EDIT IT FOR OUTPUT
         BR    R9                   RETURN TO CALLER
         SPACE 1
         LTORG
         SPACE 1
DBLAREA  DC    D'0'
SAVEAREA DC    18A(0)
SAVERMCT DC    F'0'
DETAILSW DC    C'0'       0=NO DETAIL / 1=DISPLAY DETAIL
EDMASK   DC    X'402020202120'
HEADHEAD DC    CL1' '
HEADTYPE DC    CL3' ',C' '
HEADJOBN DC    CL8'Jobname ',C' '
HEADCTEP DC    CL8'Stepname ',C' '
HEADPRST DC    CL8'Procstep ',C' '
HEADASID DC    CL4'ASId ',C' '
HEADDPRT DC    CL2'DP ',C' '
HEADMEMP DC    CL2'St ',C' '
HEADCWRC DC    CL4'SwpR',C' '
HEADNPG  DC    CL2'PG ',C' '
HEADDMN  DC    CL2'Dm ',CL2' '
HEADEXCC DC    CL8' ',CL2' '
HEADWSS  DC    CL6' '
HEADER   EQU   HEADHEAD,*-HEADHEAD,C'C'                         GP10065
         SPACE 1
         DC    C' '    1/2   FAST BLANKING                      GP10065
LINE     DC    CL79' ' 2/2                                      GP10065
         ORG   LINE                                             GP10065
         DS    CL1
LINETYPE DS    CL3,C
LINEJOBN DS    CL8,C
LINESTEP DS    CL8,C
LINEPRST DS    CL8,C
LINEASID DS    CL4,C
LINEDPRT DS    CL2,C
LINEMEMP DS    CL2,C
LINESWRC DS    CL4,C
LINENPG  DS    CL2,C
LINEDMN  DS    CL2,CL2
LINEEXCC DS    CL8,CL2
LINEWSS  DS    CL6
         ORG   ,                                                GP10065
HEXTBL   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'    00-0F
HEXTRTAB EQU   HEXTBL-C'0'
SAWPREAS DC    C'    TPUTTGETLONGPGS<RSS<WAITRQSWDENQEXCHSWAP'
         PRINT NOGEN
         CVT   DSECT=YES,LIST=NO
         PRINT NOGEN
         IHAASVT DSECT=YES
         IHAASCB DSECT=YES
         IHAASXB DSECT=YES
CSCB     DSECT
         IEECHAIN
         IRAOUCB DSECT=YES
         IHAOUXB DSECT=YES
         YREGS ,                                                GP10065
         END
