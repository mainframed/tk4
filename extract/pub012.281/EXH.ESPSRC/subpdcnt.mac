SUBPDCNT TITLE 'S U B P D C N T  ***  COUNT PDS BLOCKS'
         COPY  ASMOPTS                                          GP14140
         ASMPARM LIST=YES                                       GP14140
***********************************************************************
**                                                                   **
**   SUBROUTINE PDCNT REQUIRES AUTHORIZATION: IT BUILDS ITS OWN      **
**   CONTROL BLOCKS TO READ A PDS DIRECTORY.                         **
**                                                                   **
**                                   AUTHOR: G. POSTPISCHIL          **
***********************************************************************
**
*   R1 POINTS TO PARAMETER LIST
*   0     CL140 - FORMAT 1 DSCB
*   4     ADDRESS OF UCB
*
*   RETURN CODES: R15 0:OK  4:MINOR PROBLEM 8:ERROR  16:UNAUTHORIZED
*     IF OK, R0 HAS # OF ALLOCATED BLOCKS, R1 HAS NUMBER USED.
*
         PRINT &PRTSRC                                          GP14140
         EXTRN SUBDSCB1      FOR FORMAT 4 DSCB
SUBPDCNT PGMHEAD BIGZERO,BASE=R12,PARM=R9,BNDRY=PAGE
         MVICC 16            PRESET UNAUTHORIZED
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?
         BXH   R15,R15,PGMEXIT
         MVICC 12,1          PRESET PARAMETER ERROR
         LA    R9,0(,R9)
         LM    R10,R11,0(R9)   GET PASSED PARMS
         USING IECSDSL1,R10  DECLARE FORMAT 1 DSCB
         CLI   DS1FMTID,C'1'  REALLY 1?
         BNE   PGMEXIT       NO; FAIL
         MVICC ,2            SUBCODE 2 - BAD ORG
         CLI   DS1DSORG+1,0  VSAM OR OTHER FUNNY?
         BNE   PGMEXIT       OOPS
         TM    DS1DSORG,DS1DSGPO  PARTITIONED ?
         BZ    PGMEXIT
         MVICC ,3            SUBCODE 3 - NOT USED, OR HFS/PDSE
         ICM   R0,7,DS1LSTAR   HFS, PDS/E, OR OTHER FUNNY?
         BZ    PGMEXIT
         MVICC ,8            SUBCODE 8 - BAD UCB
         USING UCBOB,R11     PASSED BY CALLER
         TM    UCBID,X'FF'   REAL UCB ?
         BNO   PGMEXIT       NO, FAIL
         MVI   LOCFMT4,X'04'
         MVC   LOCFMT4+1(43),LOCFMT4
         MVICC ,14           SUBCODE 14 - BAD FMT4
         SUBCALL SUBDSCB1,(LOCFMT4,UCBVOLI,LOCFMT4)   GET THE FMT4
         BXH   R15,R15,PGMEXIT    FAILED?
         MVICC ,16           SUBCODE 16 - PROCESSING ERROR
         LA    R5,LOCFMT4+44
         USING DS4IDFMT,R5
         MVC   NUMTPC+2(2),DS4DEVSZ+2  TRACKS PER CYLINDER
         MVC   NUMDPT+3(1),DS4DEVDB    DIRECTORY ENTRIES PER TRACK
         SPACE 1
         MODESET KEY=ZERO
         L     R0,DRDEBSP    GET STORAGE SUBPOOL/LENGTH
         GETMAIN R,LV=(0)    GET LOCAL SQA
         LR    R6,R1         SAVE IT
         USING DEBAVT,R6     DECLARE DEB PREFIX
         MVC   0(PATLEN,R6),PDEB  MOVE PATTERN DEB
         LA    R7,DEBBASND   POINT TO END OF BASIC SECTION
         USING DEBDASD,R7
         LA    R9,DRDCB      GET DCB ADDRESS
         USING IHADCB,R9
         MVC   DCBDEVT,UCBTBYT3   MAKE FUNNY DEVICE CODE
         MVN   DCBDEVT,UCBTBYT4   MAKE FUNNY DEVICE CODE        GP14140
         MVI   DCBOFLGS,X'12'  SET DCB OPEN FOR INPUT           GP14140
         MVC   DCBTIOT(4),=X'0018D008'   TIOT OFFSET / MACRF = E
         L     R8,PSATOLD-PSA  GET TCB POINTER
         USING TCB,R8
         LA    R8,0(,R8)     JUST IN CASE
         ST    R8,DEBTCBAD   ALSO SETS MODULES LOADED TO ZERO
         ST    R9,DEBDCBAD   SET DCB ADDRESS INT DEB
         MVI   DEBDEBID,X'0F'  SET DEB IDENTIFIER
         MVI   DEBNMEXT,1
         MVI   DEBLNGTH,(PATLEN+7)/8
         ST    R6,DEBAPPAD   SAVE APPENDAGE ADDR.
         MVI   DEBEXSCL,4    16 BYTES IN ACCESS METHOD SECTION
         LA    R5,DEBBASIC
         STCM  R5,7,DCBDEBAD+1   SAVE DEB ADDRESS
         STCM  R11,7,DEBSUCBB
         MVI   DEBDVMOD,X'50'     TRACK INPUT
         LA    R14,DS1EXT1   POINT TO FIRST EXTENT
         CLI   0(R14),X'40'  LABEL TRACK ?
         BNE   *+8
         LA    R14,DS1EXT2   FIRST DATA TRACK
         MVC   DEBSTRCC(4*2),2(R14)  COPY DIRECTORY EXTENT ADDRESS
         MVC   MBBCCHHR+3(4),DEBSTRCC   START OF READ
         MVI   MBBCCHHR+7,0       RESET STARTING RECORD NUMBER  GP14140
         MVC   DEBNMTRK,=X'7FFF'  ARBITRARY COUNT
         L     R14,CVTPTR
         USING CVTMAP,R14
         L     R14,CVTXAPG   GET RESIDENT APPENDAGES
         MVC   DEBAVT(DEBPREFX-DEBAVT),0(R14) COPY CANNED ADDRESSES
         DROP  R14
         MODESET MODE=SUP
         LA    R4,TCBDEB-(DEBDEBAD-DEBBASIC)
         XR    R0,R0                                             82139
ADEBLOOP CLM   R0,7,DEBDEBB-DEBBASIC(R4)  END OF CHAIN ?         82139
         BE    ADEBLADD      YES; ADD OURS
         L     R4,DEBDEBAD-DEBBASIC(,R4)
         B     ADEBLOOP
ADEBLADD STCM  R5,7,DEBDEBB-DEBBASIC(R4)  PLACE DEB ON CHAIN
         DEBCHK DRDCB,TYPE=ADD,AM=EXCP
         MODESET MODE=PROB
         SPACE 1
         LA    R10,IOBLOCK
         USING IOBSTDRD,R10
         LA    R0,ECB
         ST    R0,IOBECBPT
         LA    R0,ECB+44     XDAP EXPANSION
         ST    R0,IOBSTART
         LA    R0,DRDCB
         ST    R0,IOBDCBPT
         LA    R0,MBBCCHHR+3
         STCM  R0,7,ECB+45
         LA    R0,ECB+44
         STCM  R0,7,ECB+53   TIC
         LA    R0,IOBUF
         STCM  R0,7,ECB+61   CCW RdKD
         SR    R2,R2         CLEAR BLOCK COUNT
         SR    R3,R3         CLEAR USED COUNT
         SR    R4,R4         CLEAR FLAG
READLOOP SR    R15,R15
         IC    R15,MBBCCHHR+7     INCREMENT RECORD ADDRESS
         LA    R15,1(,R15)
         C     R15,NUMDPT    STILL ON TRACK ?
         BNH   READXDAP
         LA    R15,1
         SR    R14,R14
         ICM   R14,3,MBBCCHHR+5   GET TRACK
         LA    R14,1(,R14)
         C     R14,NUMTPC    IN CYLINDER?
         BL    READSTRK
         SR    R14,R14
         SR    R1,R1
         ICM   R1,3,MBBCCHHR+3    GET CYLINDER
         LA    R1,1(,R1)
         STCM  R1,3,MBBCCHHR+3    UPDATE CYLINDER
READSTRK STCM  R14,3,MBBCCHHR+5   UPDATE TRACK
         CLC   MBBCCHHR+3(4),DEBENDCC  REACHED END?
         BH    READEXIT
READXDAP STC   R15,MBBCCHHR+7     UPDATE RECORD
         MVI   ECB,0
         LA    R14,IOBLOCK   XDAP EXPANSION
         USING IOBSTDRD,R14
         MVI   IOBFLAG1,IOBCMDCH+IOBUNREL
         DROP  R14
         MVI   DCBIFLGS,DCBIFIOE  NO ERROR RECOVERY MSGS
         XDAP  ECB,MF=E
         WAIT  ECB=ECB
         CLI   ECB,X'41'     EOF READ ?
         BE    READEXIT      YES; QUIT NORMALLY
         CLI   ECB,X'7F'     OK?
         BNE   READFAIL
         LA    R2,1(,R2)     BUMP DIRECTORY COUNT
         LTR   R4,R4         PRIOR END OF DIRECTORY?
         BNZ   READLOOP      YES
         LA    R3,1(,R3)     INCREASE USED COUNT
         CLC   =X'FFFFFFFFFFFFFFFF',IOBUF
         BNE   READLOOP      NOT LOGICAL END; CONTINUE COUNTING
         LR    R4,R12        SET EOD FLAG
         B     READLOOP
         SPACE 1
READEXIT STM   R2,R3,RSNCODE    RETURN DE/USED TO USER
         MVICC 0             SET ZERO RETURN COUNT
         LTR   R2,R2         ANY BLOCKS READ?                   GP14140
         BP    READFAIL        YES; NORMAL RETURN               GP14140
         MVICC 4             SET WARNING CODE - SHOULD NEVER    GP14140
READFAIL MODESET MODE=SUP
         DEBCHK DRDCB,TYPE=DELETE,AM=EXCP
         LA    R1,DEBBASIC   GET DEB ADDRESS BACK
         LA    R4,TCBDEB-(DEBDEBAD-DEBBASIC)
DDEBLOOP CLM   R1,7,DEBDEBB-DEBBASIC(R4)  OUR DEB NEXT ?
         BE    DDEBDELT
         ICM   R4,7,DEBDEBB-DEBBASIC(R4)  GET NEXT DEB
         BNZ   DDEBLOOP      LOOK AT IT
         B     DDEBDELX      HOW DID THIS HAPPEN ?
DDEBDELT MVC   DEBDEBB-DEBBASIC(3,R4),DEBDEBB  UNCHAIN OUR DEB
DDEBDELX MODESET KEY=ZERO,MODE=PROB
         L     R0,DRDEBSP    GET STORAGE SUBPOOL/LENGTH
         FREEMAIN R,LV=(0),A=(R6)      FREE STORAGE
         MODESET KEY=NZERO
         SPACE 1
PGMEXIT  PGMEXIT COPYRET=(RETCODE,12)  RETURN R15, R0 (DE), R1 (USED)
         SPACE 2                                                 82139
         PRINT &PRTMAC                                          GP14140
DRDEBSP  DC    0A(0),AL1(243-13*&MVS),AL3(PATLEN)  DEB SUBPOOL 243/230
         SPACE 1
         DC    XL40'0'       MAKE DUMP PRETTY
DRDCB    DCB   MACRF=(E),DDNAME=IEFRDER
         DC    XL12'0'       JUST IN CASE
         XDAP  ECB,RI,DRDCB,IOBUF-IOBUF,8+256,,R1-R1,MF=L  ECB/IOB
IOBLOCK  EQU   ECB+4
MBBCCHHR EQU   ECB+36,8,C'X'
PDEB     DC    8F'0'         DUMMY - NOT USED
         DC    AL1((PATLEN+7)/8,0,0,0)
PATDEB   DC    X'0F',AL3(0)  DEB LENGTH
         DC    F'0'          TCB ADDR
         DC    X'10',AL3(0)  DEB LINK PTR
         DC    X'68',AL3(0)    IRB PTR
         DC    F'0'          FLAGS
         DC    F'0'          IOB
         DC    X'FC',AL3(0) .    PRTY / ECB
         DC    X'0F',AL3(DRDCB)
         DC    X'02',AL3(0)  APP ADDR
         DC    X'00',AL3(0),XL12'0' FILE MASK / UCB ADDR / EXTENT INFO
PATLEN   EQU   *-PDEB
         SPACE 1
         LTORG ,
         SPACE 1
         PRINT &PRTSYS                                          GP14140
SAVE     DSECT ,             PRIMARY WORK AREA
DB       DC    D'0'
         SERVDEFS ,          EXPAND RETCODE, ETC.
         SPACE 1
NUMTPC   DS    F             TRACKS PER CYLINDER
NUMDPT   DS    F             DIRECTORY BLOCKS PER TRACK
NUMDE    DS    F             DIRECTORY BLOCKS
NUMMEM   DS    F             MEMBER COUNT
LOCFMT4  DS    XL140,XL8     FORMAT 4 DSCB +
IOBUF    DS    XL(8+256)     KEY, DATA
         DS    XL8
SAVEEND  EQU   *             END OF WORK SPACE
         SPACE 1
         PRINT &PRTSYS                                          GP14140
         IHAPSA ,
         CVT   DSECT=YES,LIST=NO
         IKJTCB ,
         IEFUCBOB ,
MYDSCB1  DSECT ,
         IECSDSL1 1
MYDSCB4  DSECT ,
         IECSDSL1 4
         IEZDEB ,
         IEZIOB ,
         DCBD  DEVD=DA,DSORG=PS
         END   ,
