@PRO TITLE '@ P R O T E C T  ***  FAST READ PASSWORD PROCESSOR'
*        THIS ROUTINE WAS MODIFIED FROM THE 'FASTDISK/MAPDISK' PROGRAM
*        SUPPLIED TO THE SHARE,INC. OS PROJECT BY GENE CZARCINSKI.
*        THE ORIGINAL PROGRAM WAS WRITTEN BY F.G. ROSS, DEPT. OF STATE,
*        AND MODIFIED BY G. CZARCINSKI, NASA; AND OTHERS.
*   WARNING - 2321 CODE DELETED; DEBUGGED ONLY ON 2314/3330/3330-1
*
*        CALLING SEQUENCE :
*              LA    R15,  ADDRESS OF UCB CONTAINING PASSWORD DSN
*              LR    R0,R15    DITTO                             81147
*              LA    R1,PROTECT LIST
*              L     R14,=V(@PROTECT)
*              BASR  R14,R14                                    GP99026
*              SVC   98      PROTECT SVC (IN CASE @PROTECT FAILS)
*                                                                81147
*        R0=R15 IS A SPECIAL CONVENTION (LOCAL MODS TO PROTECT SVC)
*        TO SPECIFY PASSWORD DSN ON NON-SYSRES DEVICE            81147
*                                                                81147
*        R1=0 IS A REQUEST TO CLOSE AND FREEMAIN                 81147
*
         SPACE 1
         ENTRY @PROMISE
*        SPECIAL (FINAGLED) CONVENTIONS :                        81147
*        @PROTECT+12 IS ADDRESS OF STORAGE RESERVE SIZE WORD     81147
*          ALSO ADDRESSABLE AS @PROMISE                          81147
*        @PROMISE-12 IS ADDRESS/LENGTH OF GETMAINED AREA         81147
*        @PROMISE IS AMOUNT OF STORAGE TO LEAVE FREE             81147
*        @PROMISE+12 IS NUMBER OF MAXIMUM RECORDS IN DATASET     81147
         SPACE 1
@PROTECT START 0
         PRINT NOGEN
         SPACE 1
         STM   R14,R12,12(R13)
         BALR  R12,0         CAN'T USE 15 - SET FOR REAL PROTECT
         USING *,R12
         B     AROUND                                            81147
         DC    A(@PROMISE)   FIXED OFFSET +12 FOR EXTERNAL ACCESS
         SPACE 1                                                 81147
AROUND   BSM   R14,0         SAVE CALLER'S AMODE                GP99026
         ST    R14,12(,R13)  AGAIN (DUE TO FIXED ENTRY OFFSET)  GP99026
         LA    R9,SAVE                                           81147
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9        SAVE AREA LINKAGE COMPLETE
         AM24  WORK=R9       OLD-STYLE CODE                     GP99026
         SPACE 1                                                 81147
         LA    R9,0(,R1)     LOAD AND CLEAN PARM                 81147
         LTR   R9,R9         ANY ?                               81147
         BNZ   EXAMINE       YES; CHECK REQUEST TYPE             81147
*        ALL ZERO PARM IS CLOSE/FREEMAIN REQUEST                 81147
         TM    @OBSDCB+48,X'10'  OPEN ?                          81147
         BZ    PROCLOSE      NO                                  81147
         CLOSE (@OBSDCB)     CLOSE IT                            81147
PROCLOSE LM    R1,R2,#ADR    GET GETMAIN PARM                    81147
         XC    #ADR(8),#ADR  DELETE IT                           81147
         MVI   OBFLAG,0      ALSO RESET ERROR FLAG               81147
         LTR   R1,R1         ANY GOTTEN ?                        81147
         BZ    GOODEXIT      NO; JUST RETURN                     81147
         LTR   R2,R2         ANY LENGTH ?                        81147
         BZ    GOODEXIT      NO; IGNORE                          81147
         FREEMAIN R,LV=(R2),A=(1)  FREE STORAGE                  81147
         B     GOODEXIT                                          81147
         SPACE 1                                                 81147
EXAMINE  CLI   0(R9),1       VALID REQUEST ?                     81147
         BL    IGNORE        LET PROTECT FAIL
         CLI   0(R9),4       READ MODE REQUEST ?                 81147
         BL    BIGFAIL       NO; CANCEL OUR PROCESSING
         CLI   0(R9),6       VALID RANGE ?                       81147
         BH    IGNORE        NO
INITDONE LM    R6,R8,0(R9)  LOAD PARAMETERS
         TM    OBFLAG,OBFAIL  BIG FAIL BIT ON ?
         BZ    NOFAIL        NO; PROCEED
BIGFAIL  OI    OBFLAG,OBFAIL
         TM    @OBSDCB+48,X'10'  IS THE DCB OPEN ?
         BZ    COMFAILW      NO
         CLOSE (@OBSDCB)     CLOSE IT
COMFAILW NOP   IGNORE        BRANCH AFTER FIRST FAILURE          81068
         OI    COMFAILW+1,X'F0'  SET FOR SUBSEQUENT BRANCHES     81068
         WTO   '@PROTECT FAILED',DESC=7,ROUTCDE=(1,11) TATTLE    81068
         SPACE 1
IGNORE   L     R13,4(,R13)
         LM    R14,R12,12(R13)
         BSM   0,R14         RETURN TO EXECUTE USER'S PROTECT   GP99026
         SPACE 2
GOODEXIT XR    R15,R15       RETURN OK
GOODBAD  L     R13,4(,R13)   GET HIGH SAVE AREA
         L     R14,12(,R13)  SET RETURN ADDRESS
         AL    R14,=F'2'     EXIT; BYPASS USER'S PROTECT        GP99026
         LM    R0,R12,20(R13)  RESTORE REGS
         BSM   0,R14         RETURN AFTER USER'S PROTECT        GP99026
         SPACE 2
NOFAIL   TM    OBFLAG,OBFINIT  HAVE WE BEEN INITIALIZED YET ?
         BZ    VOLINIT       NO; TRY IT
         XR    R15,R15
         MVI   UDSN,C' '
         MVC   UDSN+1(L'UDSN-1),UDSN
         IC    R15,4(,R9)    LOAD USER'S DSN LENGTH
         LTR   R15,R15       TEST IT
         BNP   IGNORE
         CH    R15,=Y(L'DSNAM)
         BH    IGNORE
         BCTR  R15,0         LESS ONE FOR EX
         EX    R15,MVCDSN    MOVE TO 44 BYTE AREA
         L     R3,#STORMAX   GET LOGICAL END OF CHAIN
         LA    R2,AREALEN    SIZE OF ONE ENTRY
         L     R1,#AREA      GET FIRST ENTRY
         USING AREASECT,R1    DECLARE WORK ENTRY MAPPING
LOOPSEAR CLC   DSNAM,UDSN  MATCHING DSN ?
         BNE   LOOPSKIP      NO; SKIP THIS ONE
         CLI   0(R9),6       DSN ONLY ?
         BE    MOVEDATA      YES
         CLI   0(R9),4       REQUEST TO LIST ENTRY ?             81068
         BNE   LOOPPSWD      NO; MAY BE TTR REQUEST              81068
         CLC   0(8,R8),=8X'FF'  NON-PASSWORD LIST REQUEST ?      81068
         BE    MOVEDATA      YES; ONLY DATA PORTION RETURNED     81068
LOOPPSWD CLC   PSWD,0(R8)    MATCH ON CALLER'S PASSWORD ?        81068
         BE    MOVEDATA      YES - HAVE ENTRY
LOOPSKIP BXLE  R1,R2,LOOPSEAR  TRY NEXT ENTRY
SET8     LA    R15,8         SET RETURN CODE 8 - ENTRY NOT FOUND
         B     GOODBAD       ENTRY NOT FOUND
MOVEDATA CLI   0(R9),5       WHICH REQUEST TYPE ?
         BNL   MAKETTR       CONVERT TO TTR ADDRESS
         MVC   0(L'DATA,R6),DATA   PASS BACK THE DATA FIELD
         B     GOODEXIT
         SPACE 1
MAKETTR  MVC   1(3,R6),TTR   RETURN THE TTR ADDRESS              81068
         MVI   0(R6),0       AND CLEAR HIGH PORTION              81068
         B     GOODEXIT
         DC    5F'0'         PATCH SPACE
MVCDSN   MVC   UDSN(0),0(R7)  MOVE USER'S DSN TO FULL LENGTH AREA
         DROP  R1
         EJECT
VOLINIT  DEVTYPE @OBSDCB+40,DEVTYPE,DEVTAB
         LTR   R15,R15       DD CARD ?
         BNZ   BIGFAIL       NO
         CLI   DEVTYPE+2,X'20'  DISK ?
         BNE   BIGFAIL       NO
         NI    DEVTYPE+3,X'0F'  MAKE SURE
         TR    DEVTYPE+3(1),TR#REC  MAKE INTO NUMBER OF RECORDS/TRACK
         CLI   DEVTYPE+3,X'FF'  VALID ?
         BE    BIGFAIL       NO
         MVI   DEVTYPE+2,0   FOR MH
         OPEN  (@OBSDCB,INPUT)
         TM    @OBSDCB+48,X'10'  OPENED ?
         BZ    BIGFAIL
         LA    R2,@OBSDCB
         USING IHADCB,R2     DECLARE THE DCB
         L     R3,DCBDEBAD   GET THE DEB
         USING DEBBASIC,R3
         CLI   DEBNMEXT,1    MORE THAN ONE EXTENT ?
         BNE   BIGFAIL       YES - CAN'T (DON'T WANT TO) HANDLE
         LH    R1,DEBNMTRK-DEBDASD+DEBBASND  LOAD # TRACKS
         MH    R1,DSCB      CONVERT TO RECORDS
         ST    R1,#RECS      SAVE MAXIMUM RECORDS                79204
         MH    R1,=Y(AREALEN)  CONVERT TO REQ. STORAGE
         LA    R1,4095(,R1)  SET FOR 4K ROUND                    81068
         SRL   R1,11
         SLL   R1,11         ROUND TO 2K BOUND
         ST    R1,MINIMUM    SAVE REQUIRED STORAGE
         MVC   CC(4),DEBSTRCC-DEBDASD+DEBBASND  SAVE START ADDRESS
         MVC   END(4),DEBENDCC-DEBDASD+DEBBASND  SAVE END ADDR
         MVC   END+4(1),DSCB+1  MAKE LAST VALID RECORD NUMBER
         DROP  R2,R3
         L     R2,@PROMISE  GET USER'S REQUEST
         LA    R2,2047(,R2)  ROUND TO 2K BOUNDARY
         SRL   R2,11
         SLL   R2,11
         ST    R2,@PROMISE
         A     R2,MINIMUM   ADD MINIMUM I NEED
         ST    R2,#SIZE     STASH SIZE REQUEST
         GETMAIN EC,LV=(R2),A=#ADR
         LTR   R15,R15       ANY STORAGE GOTTEN ?
         BNZ   BIGFAIL       NO; NO FURTHER PROCESSING
         L     R14,#ADR      LOAD DYNAMIC STORAGE ADDRESS
         LR    R15,R2        COPY THE SIZE
         LR    R1,R14        COPY FOR BAD FREEMAIN
         LR    R0,R2
         S     R15,@PROMISE  REDUCE BY AMOUNT REQUESTED BY USER
         BP    VOLINUFF      ENOUGH ?
VOLIFREE SVC   10            FREEMAIN THE GOTTEN STORAGE
         XC    #ADR,#ADR     JUST IN CASE
         B     BIGFAIL       NO FURTHER PROCESSING
         SPACE 1
VOLINUFF ST    R15,#ADR+4              SAVE NEW LENGTH
         LA    R14,0(R15,R14)          A(NEW TOP)
         ST    R14,#FREE               FOR FREEMAIN
         BCTR  R14,0                   MINUS 1 FOR END     EAC/07APR75
         ST    R14,#LIMIT              TOP OF DYNAMIC STORAGE
         FREEMAIN V,A=#FREE            TO GIVE SOME BACK
         L     R15,#ADR                A(BOTTOM)
         ST    R15,#CCW                A(WORK AREA/CHAN PROGS)
         LA    R15,2048(,R15)           2048 BYTE WORK AREA
         ST    R15,#AREA               A(TOP WORK/BOTTOM PSWD)
         ST    R15,#STORMAX            INIT FOR MAX USED
         SPACE 1
         LM    R14,R15,#ADR  RELOAD THE GETMAIN ADDRESS/SIZE     83073
         CLRL  (R14),(R15)   CLEAR ALL OF STORAGE                83073
         SPACE 1
* BUILD AND EXECUTE A CHANNEL PROGRAM TO READ IN THE DATASET
*
         XC    MBB(8),MBB              CLEAR THE MBBCCHHR IN THE IOB
         L     R4,#AREA                INPUT AREA
         USING AREASECT,R4
         L     R3,#CCW                 CHANNEL PGM AREA
         ST    R3,IOB+16
         XR    R6,R6         INITIALIZE FOR STORAGE BLOCK CHAIN
         MVC   0(16,R3),CCWSHA         SEARCH (SHA & TIC)
         LA    R15,MBB+3
         ST    R15,0(,R3)
         MVI   0(R3),@SHA
         ST    R3,8(,R3)
         MVI   8(R3),@TIC
         XR    R2,R2         CLEAR TRACK COUNT                   81068
*
EXCPLOOP L     R3,#CCW
         LA    R3,16(,R3)               START OF READ CCWS
         MVC   MBB+1(6),BB             INIT THE IOB FOR THIS TRACK
         LA    R10,1                   SET 'R' TO 1
         LR    R5,R4                   SAVE FOR CCHH SCAN
*
CCWLOOP  MVC   0(8,R3),CCWKD           BUILD THE READ CCW
         C     R4,#LIMIT
         BNL   BIGFAIL       OVER LIMIT - CLOSE AND EXIT
CCWLOOP1 LA    R15,DSNAM            A(PSWD INPUT AREA)
         STCM  R15,7,1(R3)   STASH CCW ADDRESS                   83073
         LA    R3,8(,R3)                UPDATE CCW PNTR
         C     R3,#AREA
         BNL   BIGFAIL
CCWLOOP2 STCM  R2,3,TTR      SET TRACK ADDRESS                   81068
         STC   R10,TTR+2     ADD RECORD NUMBER                   81068
         STC   R10,R         SET R IN CCHHR ADDRESS              81068
         MVC   CCHHR,CC
         LR    R6,R4                   UPDATE FOR NEXT BLK
         LA    R15,AREALEN(,R4)
         LR    R4,R15                  UPDATE AREA PNTR
         LA    R10,1(,R10)              BUMP 'R' COUNT
         CH    R10,DSCB                END OF TRACK?
         BNH   CCWLOOP                 NO, LOOP
*
CCWDONE  LH    R15,HH                  UPDATE CCHH
         LA    R15,1(,R15)
         CH    R15,TRKS
         BNE   *+18
         LH    R14,CC
         LA    R14,1(,R14)
         STH   R14,CC
         XR    R15,R15
         STH   R15,HH
         LA    R2,1(,R2)     SET FOR NEXT TRACK                  81068
*
EXCP     SH    R3,=H'8'                BACKUP AND
         NI    4(R3),255-@CC           TURN OFF CMD CHAINING
         XC    ECB,ECB
         EXCP  IOB
         WAIT  ECB=ECB
         CLI   ECB,X'7F'               READ OK?
         BE    EXCPOK        SEE IF END YET
         CLI   ECB,X'42'     ON LAST TRACK ?                     83073
         BE    EXCPDIOB      CHECK CSW                           83073
         CLI   ECB,X'41'     POSSIBLE EOF ?
         BNE   BIGFAIL       NO; TOO BAD
         CLC   IOB+12(4),=AL1(X'0D',X'40',0,KDLEN) EOF ?         83073
         BNE   BIGFAIL       NO
EXCPDIOB L     R15,IOB+8     LOAD LAST CSW+8 ?                   83073
         LA    R15,0(,R15)   DON'T TRUST ANYBODY                 83073
         SH    R15,=H'8'     BACKUP ONE
         C     R15,#ADR      VALID ADDRESS ?
         BNH   BIGFAIL       NO
         CLC   0(1,R15),CCWKD MY READ KEY/DATA ?                 83073
         BNE   BIGFAIL       SKIP TIC OR WHATEVER
         L     R15,0(,R15)   LOAD DATA ADDRESS
         LA    R4,0(,R15)    CLEAN CCW CODE OFF
         B     EXCPDONE      AND TERMINATE
EXCPOK   CLC   CC(4),END               DONE?
         BNH   EXCPLOOP
*
EXCPDONE C     R4,#STORMAX
         BNH   *+8
         ST    R4,#STORMAX
         ST    R4,#TOP
         DROP  R4
         CLOSE (@OBSDCB)
         OI    OBFLAG,OBFINIT  SHOW INITIALIZED
         B     INITDONE      NOW START PROCESSING THIS REQUEST
         SPACE 3                                                 79204
TEMP     DC    D'0'
* CONSTANTS, ETC. FOR CHANNEL PROGRAM
CCWSHA   CCW   @SHA,0,@CC,4            SEARCH HOME ADDRESS
CCWTIC   CCW   @TIC,0,@CC,0            TRANSFER IN CHANNEL
CCWKD    CCW   @KD+@MT,0,@CC,KDLEN   READ KEY,DATA (M/T FOR EOF) 83073
*
@CC      EQU   X'40'
@SLI     EQU   X'20'
@SHA     EQU   X'39'
@TIC     EQU   X'08'
@KD      EQU   X'0E'
@MT      EQU   X'80'         MULTI-TRACK REQUEST                 83073
*
SAVE     DC    18F'0'
MASKUCB  DC    X'0000FFFF'   UCB MASK - ON F BOUND
MINIMUM  DC    A(4*1024)    REASONABLE MINIMUM STORAGE
#SIZE    DC    A(04*1024,900*1024)     FOR STORAGE MANAGEMENT
#ADR     DC    A(0,0)
#FREE    DC    A(0)          MUST BE FOLLOWED BY @OBSERVE
@PROMISE DC    A(8*1024)     CALLER'S AMOUNT TO BE LEFT FREE     81147
#AREA    DC    A(0)                    A(TOP WORK/BOTTOM PSWD)
#STORMAX DC    A(0)               A(MAX STORAGE EVER USED)
#RECS    DC    A(0)          MAXIMUM RECORDS IN DS               79204
#CCW     DC    A(0)                    A(BOTTOM WORK AREA)
#TOP     DC    A(0)                    A(CURRENT TOP OF AREA)
#LIMIT   DC    A(0)               A(MAX DYNAMIC STORAGE)
*
DEVTYPE  DC    0A(0),H'0'    NOT REFERENCED
DSCB     DC    H'0'          WILL BE NUMBER OF RECORDS/TRACK
         DC    F'0'          BLKSIZE MAX
         DC    H'0'          CYL/VOLUME
TRKS     DC    H'0'          TRKS/CYL
         DC    2F'0'         CAPACITY VALUES
*
BB       DC    H'0'                    CURRENT BBCCHHR
CC       DC    H'0'
HH       DC    H'0'
R        DC    HL1'0'
END      DC    XL5'0'                  CCHHR OF LAST FORMAT 1
UDSN     DC    CL44' '
         SPACE 2
         LTORG
         SPACE 2
* I/O, ETC. CONTROL BLOCKS
ECB      DC    F'0'
IOB      DC    X'42',AL3(0),AL1(0),AL3(ECB)
         DC    F'0',F'0'
TERM     DC    AL1(0),AL3(0),AL1(0),AL3(@OBSDCB)
         DC    2F'0'
MBB      DC    XL7'00',X'00'
*
@OBSDCB  DCB   MACRF=E,DDNAME=PASSWORD,IOBAD=IOB
*              RECFM=F,LRECL=80,BLKSIZE=80,KEYLEN=52
TR#REC   DC    X'FF104011FFFF13231A28FF30FF2837FF' CAPACITY FOR 00-0E
*
OBFLAG   DC    X'0'          PROCESSING FLAG
OBFAIL   EQU   X'80'         MAJOR ERROR - BYPASS ALL REQUESTS
OBFINIT  EQU   X'40'         BYPASS THIS VOLUME ONLY
         SPACE 1
* WORK AREA (DYNAMIC STORAGE) DEFINITIONS
AREASECT DSECT
CCHHR    DS    CL5                     FOR THIS BLOCK
TTR      DS    CL3           TRACK/RECORD OF THIS ENTRY          81068
DSNAM    DS    CL44          DSNAME
PSWD     DS    CL8           PASSWORD
DATA     DS    XL80          DATA PORTION
KDLEN    EQU   *-DSNAM       READ LENGTH                         83073
         DS    0F            FORCE ALIGNMENT
AREALEN  EQU   *-AREASECT           STORAGE BLOCK LENGTH
         SPACE 1
*
         DCBD  DSORG=PS,DEVD=DA
         SPACE 2
         IEZDEB
         SPACE 2
         YREGS ,
         END
