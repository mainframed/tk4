ASMEXLST TITLE 'A S M E X L S T  ***   HLASM EXIT TO LOCATE ERRORS'
         PUNCH ' ORDER ASMEXLST(P) '  MAKE FOR EASIER DUMPS
***********************************************************************
*                                                                     *
*   THIS EXIT EXAMINES THE LISTING OUTPUT, AND LOCATES PROBLEMATIC    *
*   REFERENCES TO LOW STORAGE.                                        *
*                                                                     *
*     THESE INCLUDE ANY INSTRUCTION WHERE THE BASE REGISTER IS ZERO   *
*     AND IT IS UNLIKELY TO BE A LEGITIMATE REFERENCE. NOTE THAT      *
*     THE SHIFT INSTRUCTIONS AND LOAD ADDRESS ARE NOT CHECKED         *
*                                                                     *
*   IBM'S SAMPLE EXIT ASMEXLST WAS USED AS A GUIDE TO WRITING THIS    *
*                                                                     *
***********************************************************************
         SPACE 2
         PRINT NOGEN         SAVE A TREE
ASMEXLST START 0
ASMEXLST AMODE 31
ASMEXLST RMODE ANY           INVOKED VIA BASSM
         STM   R14,R12,12(R13)  SAVE
         LR    R12,R15       COPY LOCAL BASE
         USING ASMEXLST,R12  DECLARE BASE
         LR    R11,R1        USE R11 TO ADDRESS PARAMETER LIST
         USING PARMLIST,R11  ESTABLISH ADDRESSABILITY TO PLIST
         L     R10,@REQLIST  R10 = REQUEST INFORMATION POINTER
         USING REQLIST,R10   ADDRESS IT
         ICM   R1,15,REQUSER SEE IF WE'VE BEEN HERE BEFORE?
         BNZ   GOTWORK       YES, WORK AREA ALREADY OBTAINED
         LA    R3,SAVEND-SAVE  LENGTH OF WORK AREA
         GETMAIN R,LV=(R3)   GET STORAGE
         ST    R1,REQUSER    REMEMBER FOR NEXT ENTRY
         LR    R2,R1         START CLEARING
         SLR   R15,R15       SET ZERO LENGTH AND ZERO INSERTION
         MVCL  R2,R14        CLEAR WORK AREA
         MVC   REALWTO-SAVE(WARNWTOL,R1),WARNWTO  BUILD WTO
         SPACE 1
GOTWORK  ST    R13,4(,R1)    CHAIN
         ST    R1,8(,R13)    LINK
         LR    R13,R1        FENCE
         USING SAVE,R13      COMMON SAVE AND WORK AREA
         SLR   R15,R15       SET ZERO RETURN CODE
         ST    R15,REQRETCH  PROVISIONALLY CLEAR RETURN CODES
         ST    R15,REQSUBCD
         SPACE 1
***********************************************************************
*                                                                     *
*   CHECK ENTRY REUEST TYPE  -   PROCESS FOR LISTING EXIT ONLY        *
*    OPEN ENTRY - JUST RETURN RC=0                                    *
*    CLOSE ENTRY - CLEAN UP AND RETURN                                *
*    PROCESS ENTRY - LOOK FOR DATA                                    *
*                                                                     *
***********************************************************************
         CLC   REQTYPE,=A(REQTYPEL) IS EXIT TYPE = LISTING?
         BNE   NORMEXIT      NO, JUST RETURN
         CLC   REQREAS,=A(REQREASC) IS THIS A CLOSE REQUEST?
         BE    CLOSEXIT      YES; CLEAN UP AND GET OUT
         CLC   REQREAS,=A(REQREASO) IS THIS AN OPEN REQUEST?
         BE    NORMEXIT      YES; JUST RETURN
         CLC   REQREAS,=A(REQREASP) IS THIS A PROCESS REQUEST?
         BNE   NORMEXIT      NO, JUST RETURN
         SPACE 1
***********************************************************************
*                                                                     *
*   SEE IF THERE IS AN OPCODE WE NEED TO LOOK AT                      *
*                                                                     *
***********************************************************************
         ICM   R8,15,@BUFFER  TEST ADRESS OF ASM PRINT LINE
         BZ    NORMEXIT      CALLED FOR ERROR MESSAGE?
         ICM   R0,15,RESTART  RECURSION?
         BNZ   PUTMESS       YES; APPEND MESSAGE
         CLC   REQOPTS,=A(REQCESD) CESD DETAIL ENTRY?
         BE    GETCESD
         CLC   REQOPTS,=A(REQINST) MACHINE INSTRUCTION ?
         BNE   NORMEXIT
         USING PRTLINE,R8    ESTABLISH ADDRESSABILITY
         TRT   PRTOP,TRTHEX  VALID HEX OPCODE?
         BNZ   NORMEXIT      NO; JUST IGNORE IT
         MVC   DB2(4),PRTOP  MOVE OPCODE AND RR PORTION
         NC    DB2(4),=4X'1F'  KILL MOST BITS
         TR    DB2(4),TRTOHEX  MAKE PURE HEX
         PACK  DB(3),DB2(5)  PACK THE OPCODE AND RR PORTION
         SLR   R2,R2         FOR PROCESS FLAGS
         TRT   DB(1),TRTOPTS   DO WE PROCESS THIS OPCODE?
         BZ    NORMEXIT      NO; SKIP
         B     BRANCH-4(R2)  BRANCH TO CHECK CODE
BRANCH   B     TESTRX        TEST SIMPLE RX INSTRUCTION
RX       EQU   *-BRANCH      BD1 WITH INDEX
         B     TESTRXX       TEST RX WITH ACCESS TO CVTPTR, PSA
RXX      EQU   *-BRANCH      BD1 WITH INDEX; VALID CVTPTR,PSA?OLD
         B     TESTRXE       TEST RX WITH EXTENDED OPCODE (BC/NOP)
RXE      EQU   *-BRANCH      BD1 WITH INDEX; CHECK EXTENDED OPCD
         B     TESTRS        TEST SIMPLE RS INSTRUCTION
RS       EQU   *-BRANCH      INSTRUCTION TYPE BD1, NO INDEX REGISTER
         B     TESTRSX       TEST RS WITH ACCESS TO CVTPTR, PSA
RSX      EQU   *-BRANCH      BD1, NO INDEX; VALID CVTPTR, PSA?OLD
         B     TESTRSE       TEST RS WITH EXTENDED OPCODE
RSE      EQU   *-BRANCH      BD1 WITH INDEX; CHECK EXTENDED OPCD
         B     TESTRSS       TEST B2 WITH ZERO ADDRESS          GP97283
RSS      EQU   *-BRANCH      BD1 ZERO OR VALID                  GP97283
         B     TESTSS        TEST SS AND SSE
SS       EQU   *-BRANCH      BD1,BD2
         SPACE 1
TESTSS   CLI   PRTBD1,C'0'   ZERO BASE REGISTER?
         BE    GOTONE
         CLI   PRTBD2,C'0'   ZERO BASE REGISTER?
         BNE   NORMEXIT      NO; SHOULD BE GOOD?
         B     GOTONE        ELSE WARN
         SPACE 1
TESTRXE  CLI   PRTRR,C'0'    IS THIS BC WITH CONDITION=0?
         BE    NORMEXIT      YES; DON'T TEST NOP
         SPACE 1
TESTRXX  CLC   PRTBD1,TEXTCVT  IS IT CVTPTR REFERENCE?
         BE    NORMEXIT      YES; PERMIT IT WITHOUT WARNING
         CLC   PRTBD1,TEXTAOLD IS IT PSAAOLD (CURRENT ASCB)?
         BE    NORMEXIT      YES
         CLC   PRTBD1,TEXTTOLD IS IT PSATOLD (CURRENT TCB)?
         BE    NORMEXIT      YES
         SPACE 1
TESTRX   CLI   PRTRR+1,C'0'  ZERO INDEX REGISTER ?
         BE    TESTRS        NOW TEST BASE REGISTER
         B     NORMEXIT      NO; BAD HABIT BUT LET IT PASS
         SPACE 1
TESTRSE  SLR   R2,R2         FOR PROCESS FLAGS                  GP97283
         TRT   DB+1(1),B2TAB  DO WE PROCESS THIS EXPANDED OPCODE?
         BZ    NORMEXIT      NO; SKIP                           GP97283
         B     BRANCH-4(R2)  BRANCH TO CHECK CODE               GP97283
         SPACE 1
TESTRSS  CLC   PRTBD1,=4C'0'  'NO STORE' REQUEST ?              GP97283
         BE    NORMEXIT      YES                                GP97283
         B     TESTRS        ELSE NORMAL BD1                    GP97283
         SPACE 1                                                GP97283
TESTRSX  CLC   PRTBD1,TEXTCVT  IS IT CVTPTR REFERENCE?
         BE    NORMEXIT      YES; PERMIT IT WITHOUT WARNING
         CLC   PRTBD1,TEXTAOLD IS IT PSAAOLD (CURRENT ASCB)?
         BE    NORMEXIT      YES
         CLC   PRTBD1,TEXTTOLD IS IT PSATOLD (CURRENT TCB)?
         BE    NORMEXIT      YES
         SPACE 1
TESTRS   CLI   PRTBD1,C'0'   ZERO BASE REGISTER?
         BNE   NORMEXIT      NO
         SPACE 1
GOTONE   LA    R0,REQDOMSG   SET RECURSION FLAG
         ST    R0,RESTART    FOR ME
         ST    R0,REQSUBCD   AND FOR THE ASSEMBLER
         MVC   REALWTO+28(L'PRTSTMT),PRTSTMT  IDENTIFY STATEMENT NUMBER
         WTO   MF=(E,REALWTO)  ISSUE IT
         MVC   REQERRCD,=F'4'       ERROR SEVERITY 4
*LATER   L     R3,@ERRMSG    ADDRESS OF ERROR BUFFER
*LATER   MVC   0(10,R3),=CL8'ASMEXLST'  SHOW SENDER
*LATER   MVC   10(L'ERRTEXT,R3),ERRTEXT
*LATER   MVC   REQERRLN,=A(10+L'ERRTEXT)
         MVC   SAVECC,PRTCC  SAVE CARRIAGE CONTROL
         B     NORMEXIT      THEN TAKE NORMAL EXIT
         EJECT
***********************************************************************
*                                                                     *
*   NOW WRITE THE ERROR MESSAGE FOR THE PREVIOUS PRINT LINE           *
*                                                                     *
***********************************************************************
PUTMESS  L     R3,@ERRMSG    ADDRESS OF ERROR BUFFER
*        MVC   REQERRCD,=F'4'       ERROR SEVERITY 4
*        MVC   0(10,R3),=CL8'ASMEXLST'  SHOW SENDER
*        MVC   10(L'ERRTEXT,R3),ERRTEXT
*        MVC   REQERRLN,=A(10+L'ERRTEXT)
         XC    RESTART,RESTART  CLEAR RECURSION POINTER
         ICM   R8,15,@BUFFER  TEST ADRESS OF ASM PRINT LINE
         BZ    NORMEXIT      CALLED FOR ERROR MESSAGE?
         MVC   PRTCC,SAVECC  USE A VALID CC
         MVC   PRTOFF1(10),=CL8'ASMEXLST'  SHOW SENDER
         MVC   PRTOFF1+10(L'ERRTEXT),ERRTEXT
         MVC   REQERRLN,=A(L'ERRTEXT+10+PRTOFF1-PRTCC)
         B     NORMEXIT      THEN TAKE NORMAL EXIT
         SPACE 1
***********************************************************************
*                                                                     *
*   EXTERNAL SYMBOL DICTIONARY - GET CURRENT PROGRAM NAME             *
*                                                                     *
***********************************************************************
GETCESD  TM    PROFLAG,PFNAME  BEEN HERE BEFORE?
         BNZ   NORMEXIT      YES; DON'T NEED ANOTHER
         MVC   REALWTO+14(8),PRTLOC  USE FIRST SD FOR PROGRAM NAME
         OI    PROFLAG,PFNAME  SET IT
         B     NORMEXIT
         SPACE 1
***********************************************************************
*                                                                     *
*   NOW I LAY ME DOWN TO SLEEP .....                                  *
*                                                                     *
***********************************************************************
CLOSEXIT XC    REQUSER,REQUSER      CLEAR USER FIELD
         LA    R0,SAVEND-SAVE   WORK LENGTH
         LR    R1,R13        WORK ADDRESS
         L     R13,4(,R13)   RESTORE CALLER'S SAVE AREA
         FREEMAIN R,A=(1),LV=(0)    FREE THE STORAGE (CMS AND MVS)
         B     COMMEXIT      FINISH
         SPACE 1
***********************************************************************
*                                                                     *
*   RETURN TO ASSEMBLER - EVERYTHING IS COPACETIC                     *
*                                                                     *
***********************************************************************
NORMEXIT L     R13,4(,R13)   RESTORE CALLER'S SAVE AREA
COMMEXIT LM    R14,R12,12(R13)      RESTORE CALLERS REGISTERS
         SLR   R15,R15       RETURN CODE ZERO
         BSM   0,R14         RETURN TO CALLER
         SPACE 1
         LTORG ,
         EJECT ,
***********************************************************************
*                                                                     *
*   DATA AREAS                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
WARNWTO  WTO   'ASMEXLST: XXXXXXXX STMT YYYYY LOW STORAGE ACCESS',MF=L,*
               ROUTCDE=11,DESC=4  ASSIGN ARBITRARY ROUTING ?
WARNWTOL EQU   *-WARNWTO
ERRTEXT  DC C'**** INSTRUCTION APPEARS TO ACCESS LOW STORAGE ****'
TEXTCVT  EBCHEX CVTPTR,4       CONVERT CVT ADDRESS TO HEX TEXT
TEXTAOLD EBCHEX PSAAOLD-PSA,4  CURRENT ASCB ADDRESS
TEXTTOLD EBCHEX PSATOLD-PSA,4  CURRENT TCB ADDRESS
         SPACE 1
TRTOHEX  DC    AL1(0,10,11,12,13,14,15),9AL1(0)      1/2
         DC    AL1(0,1,2,3,4,5,6,7,8,9)              2/2
         SPACE 1
TRTHEX   DC    256X'FF'      HEX CHARACTER CHECKING
         TRENT TRTHEX,0,(C'A',6)  WANT A-F
         TRENT ,0,(C'0',10) AND DIGITS 0-9 ONLY
         ORG   ,
         SPACE 1
TRTOPTS  DC    256X'00'      ALL INSTRUCTIONS UNCHECKED
         TRENT TRTOPTS,RX,X'40'   STH
         TRENT ,0,X'41'      LA - NOT CHECKED
         TRENT ,RX,(X'42',5) STC,IC,EX,BAL,BCT
         TRENT ,RXE,X'47'    BC - TEST FOR NO-OP
         TRENT ,RX,(X'48',8)  LH,CH,AH,SH,MH,BAS,CVD,CVB
         TRENT ,RX,X'50'          ST
         TRENT ,RX,(X'54',4)  N,CL,O,X
         TRENT ,RXX,X'58'    L (EXC. FOR CVTPTR, PSA?OLD)
         TRENT ,RX,(X'59',7) C,A,S,M,D,AL,SL
         TRENT ,RX,X'60'     STD
         TRENT ,RX,(X'67',9) MXD,LD,CD,AD,SD,MD,DD,AW,SW
         TRENT ,RX,X'70'          STE
         TRENT ,RX,(X'78',8) LE,CE,AE,SE,ME,DE,AU,SU
         TRENT ,RS,X'80'          SSM
         TRENT ,RS,(X'82',6)  LPSW,DIAG,WRD,RDD,BXH,BXLE
         TRENT ,RS,(X'90',9) STM,TM,MVI,TS,NI,CLI,OI,XI,LM
         TRENT ,RS,(X'9C',4)  I/O
         TRENT ,RS,(X'AC',3) STNSM,STOSM,SIGP (SKIP MC)
         TRENT ,0,X'B1'      LRA - NOT CHECKED
         TRENT ,RSE,X'B2'    B2NN; CHECK WHEN NN < X'20'
         TRENT ,RS,(X'B6',2) STCTL,LCTL
         TRENT ,RS,(X'BA',2) CS,CDS
         TRENT ,RS,(X'BD',2) CLM,STCM
         TRENT ,RSX,X'BF'    ICM; ALLOW CVTPTR, PSA?OLD
         TRENT ,SS,(X'D1',7) MVN,MVC,,VZ,NC,CLC,OC,XC
         TRENT ,SS,(X'D9',7) MVCK,MVCP,MVCS,TR,TRT,ED,EDMK
         TRENT ,SS,X'E5'     E5NN: TPROT,MVCSK,MVCDK
         TRENT ,SS,X'E8'     MVCIN
         TRENT ,SS,(X'F0',4) SRP,MVO,PACK,UNPK
         TRENT ,SS,(X'F8',6) ZAP,CP,AP,SP,MP,DP
         SPACE 1
*   ESA AND OTHER NEWFLANGLED STUFF
         TRENT ,0,X'51'      LAE - NO CHECK
         TRENT ,RX,X'71'     MS
         TRENT ,0,(X'84',2)  BRXH,BRXLE (WERE WRD RDD)
         TRENT ,RS,(X'99',3)  TRACE,LAM,STAM
         ORG   ,
         SPACE 1
B2TAB    DC    256X'00'      ALL B2 SUBCODES UNCHECKED, EXCEPT: GP97283
         TRENT B2TAB,RS,X'02'  STIDP                            GP97283
         TRENT ,RS,(X'04',6)  SCK,STCK,SCKC,STCKC,SPT,STPT      GP97283
         TRENT ,RS,(X'10',3)  SPX,STPX,STAP                     GP97283
         TRENT ,RS,(X'32',4)  MSCH,SSCH,STSCH,TSCH              GP97283
         TRENT ,RSS,X'36'     TPI - SPECIAL                     GP97283
         TRENT ,RS,(X'39',2)  STCRW,STCPS                       GP97283
         ORG   ,                                                GP97283
         SPACE 2
SAVE     DSECT ,
         DS    18A           SAVE AREA
DB       DS    D             WORK WORD
DB2      DS    D             WORK WORD TOO
RESTART  DS    A             RECURSION ADDRESS
REALWTO  DS    0A(0),CL(WARNWTOL)' '  WARNING WTO
SAVECC   DS    C             SAVE A VALID CARRIAGE CONTROL CHARACTER
PROFLAG  DS    X             FLAGS
PFNAME   EQU   128             PROGRAM NAME LOCATED
SAVEND   EQU   *
         SPACE 1
PRTLINE  DSECT ,             ASSEMBLER PROVIDED PRINT LINE
PRTCC    DS    X             PRINT CONTROL CHARACTER
PRTLOC   DS    CL6,C         LOCATION
PRTOP    DS    CL2           PRIMARY OPCODE
PRTRR    DS    CL2,C         R/R, I, ETC.
PRTBD1   DS    CL4,C         BASE/DISPLACEMENT ONE
PRTBD2   DS    CL4,C         BASE/DISPLACEMENT TWO
PRTOFF1  DS    CL5,C         OFFSET FOR FIELD ONE
PRTOFF2  DS    CL5,C         OFFSET FOR FIELD TWO
PRTSTMT  DS    CL5           STATEMENT NUMBER
PRTFLAG  DS    C             COPY/MACRO EXPANSION FLAG
PRTTEXT  DS    CL71          TEXT BODY
PRTCCF   DS    C             CONTINUATION FLAG
PRTSEQ   DS    CL8           SEQUENCE NUMBER OR WHATEVER
         DS    CL(256-(*-PRTLINE))  FILLER TO MAX LENGTH
         EJECT ,
***********************************************************************
*                                                                     *
*   CALLING PARAMETER LIST AND WORK AREAS                             *
*                                                                     *
***********************************************************************
PARMLIST DSECT
@REQLIST DS    A             REQUEST LIST
@BUFFER  DS    A             BUFFER ADDRESS OR ZERO
@ERRMSG  DS    A             ERROR BUFFER ADDRESS
         DS    A             DATASET INFO?
         DS    A             SYSPRINT DCB ADDRESS
***********************************************************************
*                                                                     *
*        REQUEST INFORMATION (POINTED TO BY @REQLIST)                 *
*                                                                     *
***********************************************************************
REQLIST  DSECT               REQUEST INFORMATION LIST
         DS    F             EXIT LIST VERSION NUMBER
REQTYPE  DS    F             EXIT TYPE
REQTYPEL EQU   3             LISTING (SYSPRINT)
REQREAS  DS    F             REQUEST TYPE (SEE VALUES BELOW)
REQREASO EQU   1             OPEN
REQREASC EQU   2             CLOSE
REQREASP EQU   5             PROCESS
REQOPTS  DS    F             OPTIONS
REQCESD  EQU   21            EXTERNAL SYMBOL DICTIONARY DETAIL
REQINST  EQU   31            MACHINE INSTRUCTION
         DS    4F            EXITCTL ?
REQRETCH DS    F             RETURN CODE
REQSUBCD DS    F             REASON CODE
REQDOMSG EQU   4             RETURN TO EXIT WITH EMPTY BUFFER
REQBUFLN DS    F             BUFFER LENGTH
REQERRLN DS    F             ERROR BUFFER LENGTH
REQERRCD DS    F             ERROR SEVERITY CODE
REQUSER  DS    F             WORK AREA ADDRESS
         SPACE 1
         PRINT NOGEN
         YREGS ,             EXPAND REGISTER DEFINITIONS
         IHAPSA ,            DEFINE LOW STORAGE FOR ADDRESS COMPARE
         CVT   DSECT=YES     DITTO FOR CVT
         END   ,
