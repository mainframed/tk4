SUBSECT  TITLE 'S U B S E C T  ***  RETRIEVE CSECT NAME/OFFSET/LEN'
         MACRO ,
&NM      KANT  &OP
         GBLA  &ZZKTCOD(4)
         LCLA  &I
         AIF   (T'&OP EQ 'N').SET
         MNOTE 8,'KANT: UNRECOGNIZED POSITIONAL: &OP'
.SET     ANOP  ,
&NM      MVI   RETCODE+4+3,&OP    SET ERROR REASON CODE
         MEND  ,
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
***********************************************************************
**                                                                   **
**  SUBSECT  FINDS A LOAD MODULE IN THE SPECIFIED DCB, AND READS THE **
**    CONTROL BLOCKS TO FIND ALL CSECT/RSECT ENTRIES.                **
**                                                                   **
**  (SUB)CALL SUBSECT,(FUN,WORK,NAME,DCB,RESULT)  [VL OPT]           **
**     FUN IS 'NEW', 'NXT', OR 'END'                                 **
**     WORK IS WORD USED BY SUBSECT; MUST NOT BE ALTERED             **
**     NAME IS ADDRESS OF CL8 MODULE NAME                            **
**     DCB  IS ADDRESS OF OPEN BPAM DCB, OR 0 FOR TASK/STEP/JOB-LIB  **
**     RESULT IS ADDRESS OF 16 BYTE FIELD (SECT NAME, OFFSET, LEN)   **
**                                                                   **
***********************************************************************
**                                                                   **
**  RETURN CODE IN R15:                                              **
**                                                                   **
**  0  REQUEST SUCCESSFUL.                                           **
**  4  END OF CSECT LIST                                             **
**  8  MODULE IS SCTR LOAD, OVERLAY, HAS NO ESD INFO, OR NOT EXEC.   **
**  12 MODULE NOT FOUND; R0 HAS BLDL RETURN CODE                     **
**  16 PARAMETER LIST ERROR                                          **
**                                                                   **
***********************************************************************
**  MAINTENANCE:                                                     **
**                                                                   **
**  2011-11-27  GYP   ADAPTED FROM SUBFETCH (FOR PGMTRACE USE)       **
**                                                                   **
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
SUBSECT  START 0
         USING SUBSECT,R15
         B     BEGIN         SKIP NAME/DATE
         DC    AL1(17),CL17'SUBSECT &SYSDATE'
BEGIN    STM   R14,R12,12(R13)    SAVE
         LR    R12,R15
         DROP  R15
         USING SUBSECT,R12
         LA    R5,0(,R1)     DID USER PASS A PARM AREA ?
         LTR   R5,R5
         BNZ   HAVEPARM        YES; USE IT
IMMRET16 LM    R14,R12,12(R13)    RESTORE REGS
         LA    R15,16        SET PARM ERROR
         SR    R0,R0
         BR    R14           RETURN
         SPACE 1
         USING PARMSECT,R5
HAVEPARM ICM   R1,15,PRMFUN
         BZ    IMMRET16
         CLI   0(R1),C'E'    END REQUEST ?
         BNE   NEEDWORK        NO; GET WORK AREA
         ICM   R1,15,PRMWORK GET WORK AREA ADDRESS
         BZ    IMMRET0         NONE; JUST RETURN OK
         LA    R8,MODDCB-SAVE(,R1)   GET THE LIBRARY
         TM    DCBOFLGS-IHADCB(R8),DCBOFOPN
         BZ    IMMRET0       SKIP CLOSE IF UNUSED
         MVC   DB-SAVE(4,R1),=X'80000000'
         CLOSE ((R8)),MF=(E,DB-SAVE(R1))
         L     R1,PRMWORK    RESTORE WORK AREA ADDRESS
         LA    R0,WORKLEN
         STORAGE RELEASE,ADDR=(1),LENGTH=(0)
         SR    R15,R15
         ST    R15,PRMWORK   UPDATE WORK AREA ADDRESS - FREED
IMMRET0  LM    R14,R12,12(R13)    RESTORE REGS
         SR    R15,R15       SET GOOD RETURN
         SR    R0,R0
         BR    R14           RETURN
         SPACE 2
NEEDWORK ICM   R1,15,PRMWORK      IS THERE A WORK AREA ?
         BNZ   HAVEWORK             YES; USE IT
         LA    R0,WORKLEN
         STORAGE OBTAIN,LENGTH=(0)
         ST    R1,PRMWORK    RETURN TO USER
         XC    0(256,R1),0(R1)    CLEAR FIRST PART
HAVEWORK ST    R13,4(,R1)    MAKE BACK LINK
         ST    R1,8(,R13)    MAKE FORWARD LINK
         LR    R13,R1        MAKE NEW SAVE
         USING SAVE,R13      DECLARE SAVE AREA
         XC    CLEARALL,CLEARALL  CLEAR RETURN, ETC.
         SPACE 1
         KANT  20
         L     R8,PRMDCB     GET DCB ADDRESS
         LA    R8,0(,R8)     CLEAR HIGH BIT/BYTE
         LTR   R8,R8         WAS IT ZERO ?
         BNZ   HAVEDCB       NO; USE IT
         LA    R8,MODDCB     GET THE STEPLIB COPY
         USING IHADCB,R8
         TM    DCBOFLGS,DCBOFOPN  ALREADY OPEN ?
         BNZ   GOODDCB       SKIP OPEN IF ALREADY SO
*---------------------------------------------------------------------*
*   AT E.S.P., I DO MOST TESTING WITH A LOADLIB DD, CONTAINING TEST   *
*   VERSIONS OF NEW AND MODIFIED PROGRAMS. IF THE CALLER DID NOT      *
*   PROVIDE AN OPEN DCB, USE LOADLIB IF IT CONTAINS THE MEMBER, ELSE  *
*   TRY STEPLIB INSTEAD.                                              *
*---------------------------------------------------------------------*
         MVC   MODDCB(PATDCBLN),PATDCB
         DEVTYPE DCBDDNAM,DB      HAVE A LOADLIB DD (ESP DEBUG) GP13002
         BXH   R15,R15,MAKESTEP     NO; TRY STEPLIB             GP13002
         CLI   DB+2,UCB3DACC DASD ?                             GP13002
         BNE   MAKESTEP        NO; USE STEPLIB                  GP13002
         MVC   DB(4),=X'80000000'                               GP13002
         OPEN  ((R8)),MF=(E,DB)                                 GP13002
         TM    DCBOFLGS,DCBOFOPN  OPEN NOW ?                    GP13002
         BZ    MAKENLOD             NO; SO TRY STEPLIB          GP13002
         MVC   MYBLDL(4),=Y(1,12+2+31*2)                        GP13002
         L     R1,PRMNAME    LOCATE MEMBER NAME                 GP13002
         MVC   MYBLDL+4(8),0(R1)    COPY USER'S NAME            GP13002
         BLDL  (R8),MYBLDL   LOOK FOR IT                        GP13002
         LTR   R15,R15                                          GP13002
         BZ    GOODDCB       SKIP REST                          GP13002
MAKENLOD CLOSE MF=(E,DB)     CLOSE IT                           GP13002
MAKESTEP MVC   DCBDDNAM,=CL8'STEPLIB'  USE 'NORMAL' NAME        GP13002
         DEVTYPE DCBDDNAM,DB      HAVE A LOADLIB DD ?
         BXH   R15,R15,ERROR12      NO; FAIL
MAKEOPEN CLI   DB+2,UCB3DACC DASD ?
         BNE   ERROR12         NO; FAIL
         MVC   DB(4),=X'80000000'
         OPEN  ((R8)),MF=(E,DB)
         TM    DCBOFLGS,DCBOFOPN  OPEN NOW ?
         BZ    ERROR12       ELSE CAN'T USE
         B     GOODDCB         NO NEED TO CHECK
         USING IHADCB,R8     DECLARE DCB AREA
HAVEDCB  KANT  12            SET SUBCODE
         TM    DCBOFLGS,DCBOFOPN  IS IT OPEN ?
         BZ    ERROR12       NO; FAIL
         DEBCHK (R8),AM=BPAM,TYPE=VERIFY  CHECK DEB/DCB ADDRESS
         LTR   R15,R15       VALID DCB/DEB ?
         BNZ   ERROR12       DCB VALIDATION FAILED
         DROP  R8
         SPACE 1
***********************************************************************
**                                                                   **
**  DCB VERIFIED. NOW GET DIRECTORY DATA FOR MEMBER NAME             **
**                                                                   **
***********************************************************************
         SPACE 1
GOODDCB  L     R1,PRMRES     POINT TO RESULT AREA
         MVC   0(8,R1),=CL8' '    RETURN NOTHING FOR CSECT NAME
         XC    8(8,R1),8(R1)      CLEAR OFFSET AND LENGTH
         KANT  1             ERROR IN PARM 1
         L     R1,PRMFUN     GET FUNCTION POINTER
         CLI   0(R1),C'N'    NEW, NEXT, ?
         BNE   ERROR16         NO, BAD PARM
         CLC   =C'XT',1(R1)  NEXT ENTRY ?
         BE    RESTEST         YES; TEST VALID RESUME
         CLC   =C'EX',1(R1)  NEXT ENTRY ?
         BE    RESTEST         YES; TEST VALID RESUME
         ICM   R0,15,MODLEN  DONE THIS BEFORE ?
         BZ    NEWMEM          NO; GET WORK AREA
NEWINIT  XC    CLEARNEW,CLEARNEW  REMOVE OLD STUFF
RESTEST  ICM   R0,15,MODLEN  DONE THIS BEFORE ?
         BNZ   RESUME          YES; GET NEXT ENTRY
NEWMEM   L     R1,PRMNAME    LOCATE MEMBER NAME
         MVC   MYBLDL(4),=Y(1,12+2+31*2)
         MVC   MYBLDL+4(8),0(R1)  COPY USER'S NAME
         BLDL  (R8),MYBLDL   LOOK FOR IT
         ST    R15,RETCODE+4
         LTR   R15,R15
         BNZ   ERROR8        RETURN BLDL REASON CODE
         LA    R7,MYBLDL+4   POINT TO MY BLDL AREA INSTEAD OF CALLER'S
         SPACE 1
***********************************************************************
**                                                                   **
**  PROCESS BASIC MODULE INFORMATION (TYPE, ATTRIBUTES, AC)          **
**                                                                   **
***********************************************************************
         SPACE 1
         USING PDS2,R7       DECLARE THE DIRECTORY ENTRY
HAVEBLDL KANT  2
         LA    R9,ERROR8     SET FAST EXIT
         TM    PDS2INDC,PDS2NTTR  ANY TTR(S) ?
         BZR   R9            NO; NOT LOAD MODULE
         TM    PDS2ATR1,PDS2OVLY+PDS2SCTR+PDS2LOAD  SUPPORTED ?
         BNZR  R9            NO; REJECT
         TM    PDS2ATR1,PDS2EXEC  VALID?
         BZR   R9            NO; REJECT
*DEFER   TM    PDS2FTB1,PDS2BIG+PDS2PGMO  NEW-FANGLED STUFF ?
*DEFER   BNZR  R9            YES; REJECT (FOR NOW)
*DEFER   TM    PDS2FTB3,PDS2NMIG  NOT SURE ABOUT THIS
*DEFER   BNZR  R9
         SPACE 1
PDEEXIT  XC    MODLEN,MODLEN
         MVC   MODLEN+1(3),PDS2STOR    COPY MODULE SIZE
         MVC   POINTTTR(L'PDS2TTRP+L'PDS2CNCT),PDS2TTRP
HAVEAMOD FIND  (R8),POINTTTR,C  POSITION TO THE MEMBER
         ST    R15,RETCODE+4
         LTR   R15,R15       DID IT WORK?
         BNZR  R9            NO, OR GET ERROR ON NEXT I/O
         SPACE 1
***********************************************************************
**                                                                   **
**  READLOOP - READ CONTROL RECORDS. PROCESS ESD ENTRIES ONLY.       **
**                                                                   **
***********************************************************************
         SPACE 1
READLOOP LA    R1,CNTRLBUF   GET ADDRESS OF CONTROL DATA
         LA    R0,256        SET MAXIMUM READ LENGTH
         BAS   R14,BUFREAD   READ THE NEXT RECORD
         BNP   2             ERROR - ABEND THE LAZY WAY
         CLI   CNTRLBUF,X'20'   CESD RECORD ?
         BE    CESDRECD      YES
         TM    CNTRLBUF,X'F0'   SPECIAL (SYM, IDR, SCTR) ?
         BNZ   READLOOP      YES; SKIP IT
         TM    CNTRLBUF,X'02'   RLD INFO IN THIS RECORD ?
         B     ENDCNTRL      NO; TEST FOR TEXT OR END
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  GET ESD DATA AND RETURN TO CALLER, ONE AT A TIME                   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
CESDRECD XC    OFFSET,OFFSET      OFFSET TO FIRST/NEXT ENTRY
RESUME   LH    R1,CNTRLBUF+6  GET DATA LENGTH
SKIPENT  LA    R2,CNTRLBUF+8  WHERE TO GET IT FROM
         LH    R3,OFFSET          GET NEXT OFFSET
         CR    R3,R1              IS IT VALID?
         BNL   ENDCNTRL             NO; GET NEXT CONTROL RECORD
         LA    R0,16(,R3)    OFFSET FOR NEXT CALL
         STH   R0,OFFSET
         AR    R2,R3              OFFSET TO NEXT ENTRY
         CLI   8(R2),X'80'   FUNNY SD ?
         BE    HAVESD          YES; TRACK DOWN LATER
         TM    8(R2),X'98'   UNRESOLVED OR SEGTAB?
         BNZ   SKIPENT
*USE 03* TM    8(R2),X'07'   NULL ENTRY ?
*USE 03* BO    SKIPENT
         TM    8(R2),X'03'   LD ?
         BO    SKIPENT
HAVESD   CLI   0(R2),C' '    BLANK NAME ?
         BNH   SKIPENT         YES; IGNORE
         L     R15,PRMRES    GET RESULT AREA
         MVC   0(8,R15),0(R2)     MOVE CSECT NAME
         MVC   9(3,R15),9(R2)     MOVE OFFSET
         MVC   13(3,R15),13(R2)   MOVE LENGTH
         KANT  0             REASON 0
         B     SOSOEXIT      RETURN THIS ENTRY
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*  WHEN CONTROL RECORD IS FOLLOWED BY A TEXT RECORD, SKIP IT          *
*                                                                     *
*---------------------------------------------------------------------*
ENDCNTRL TM    CNTRLBUF,X'01'   IS THERE A TEXT RECORD ?
         BZ    TESTLAST      NO; SEE IF LAST CONTROL RECORD
         LA    R1,DB
         LA    R0,8          READ PARTIAL RECORD - TO SKIP
         BAS   R14,BUFREAD   READ THE TEXT RECORD
         BNP   6               OOPS
TESTLAST TM    CNTRLBUF,X'08'   FINAL RECORD ?
         BZ    READLOOP      NO; READ CONTROL RECORD
EODAD    KANT  4             RETURN END OF LIST
*NEXT*   B     ERROR4        RETURN END OF LIST
         SPACE 1
ERROR4   LA    R9,4          SET MINOR ERROR
         B     COMMEXIT      RETURN
         SPACE 1
ERROR16  LA    R9,16         SET SEVERE ERROR
         B     COMMEXIT      RETURN
         SPACE 1
ERROR12  LA    R9,12         SET SEVERE ERROR
         B     COMMEXIT      RETURN
         SPACE 1
ERROR8   LA    R9,8          SET MAJOR ERROR
         B     COMMEXIT      RETURN
         SPACE 1
SOSOEXIT L     R9,RETCODE    WORKED ?  RETURN 0 OR 4
COMMEXIT L     R0,RETCODE+4  REASON CODE
         LR    R15,R9
         L     R13,4(,R13)
         L     R14,12(,R13)
         LM    R1,R12,24(R13)
         BR    14
         SPACE 1
***********************************************************************
**                                                                   **
**  BUFREAD - ROUTINE TO READ A BLOCK OF CONTROL INFORMATION OR A    **
**    TEXT RECORD.                                                   **
**                                                                   **
**  R0 - LENGTH; R1 - ADDRESS; R8 - DCB                              **
**                                                                   **
***********************************************************************
BUFREAD  STM   R0,R15,SUBSAVE  JUST IN CASE
         LR    R2,R1         STASH ADDRESS
         READ  MYDECB,SF,(R8),(R2),(R0),MF=E   READ A BIT
         CHECK MYDECB
         LM    R0,R14,SUBSAVE  PASS R15 TO CALLER
         LTR   R15,R15       AND SET CONDITION CODE
         BR    R14           RETURN TO CALLER
         SPACE 1
PATDCB   DCB   DDNAME=LOADLIB,MACRF=R,DSORG=PO,EODAD=EODAD      GP13002
PATDCBLN EQU   *-PATDCB
         SPACE 1
         IHAPDS PDSBLDL=YES
         PRINT &PRTMAC
         SPACE 1
PARMSECT DSECT ,             MAP CALLER'S PARM LIST
PRMFUN   DS    A             ADDRESS OF 'NEW','NXT', OR 'END'
PRMWORK  DS    A             ADDRESS OF MY WORK AREA (0 IF NEW)
PRMNAME  DS    A             ADDRESS OF CL8'MODULE'
PRMDCB   DS    A             ZERO, ADDRESS OF DCB OR ZERO
PRMRES   DS    A             ADDR. OF CSECT(8),OFFSET(4),LEN(4)
         SPACE 2
         PRINT &PRTSYS
SAVE     DSECT ,             SAVE & WORK AREA
         DS    16A           ROUTINE SAVE AREA
SUBSAVE  DS    16A           SUBROUTINE SAVE AREA
DB       DS    D
         SPACE 1
         READ  MYDECB,SF,3,CNTRLBUF,256,MF=L
MODDCB   DCB   DDNAME=STEPLIB,MACRF=R,DSORG=PO,EODAD=EODAD
         SPACE 1
BEGINALL DS    0F       AREA CLEARED ON EACH CALL
RETCODE  DS    2F            RETURN CODE / REASON CODE
CLEARALL EQU   BEGINALL,*-BEGINALL,C'X'     CLEAR RETURN AREA
         SPACE 1
BEGINNEW DS    0F       AREA CLEARED ON 'NEW' MEMBER REQUEST ONLY
MODLEN   DS    F             MODULE LENGTH
POINTTTR DS    F             TTRZ OF FIRST CONTROL RECORD
OFFSET   DS    H             CESD ENTRY OFFSET IN CURRENT RECORD
CLEARNEW EQU   BEGINNEW,*-BEGINNEW,C'X'     CLEAR MEMBER AREA
         SPACE 1
         DS    0F
CNTRLBUF DS    CL256         CONTROL RECORD BUFFER
         ORG   CNTRLBUF
MYBLDL   DS    Y(1,74),XL(12+2+2*31)'0'  BLDL LIST W/ONE MEMBER
         ORG   ,
SAVEEND  EQU   *             END OF DYNAMIC AREA
WORKLEN  EQU   SAVEEND-SAVE    LENGTH OF GOTTEN STORAGE
         SPACE 2
         PRINT &PRTSYS
         DCBD  DEVD=DA,DSORG=PO
         SPACE 2
         IEFUCBOB ,
         SPACE 2
         YREGS ,
         END   ,
