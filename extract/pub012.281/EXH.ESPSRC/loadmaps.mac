LMAP TITLE 'L O A D M A P S  ***  REPRODUCE LOAD-MODULE CONTROL CARDS'
         MACRO                                                   83262
&NM      SUBENT &SA                                              83262
         AIF   (T'&SA EQ 'O').NOSA                               83262
&NM      STM   R14,R12,&SA                                       83269
         MEXIT ,                                                 83269
.NOSA    ANOP  ,                                                 83269
&NM      STM   R14,R12,SUBSAVE                                   83269
         MEND  ,                                                 83262
         SPACE 1                                                 83262
         MACRO ,                                                 83262
&NM      SUBEX &SA                                               83262
         AIF   (T'&SA EQ 'O').NOSA                               83269
&NM      LM    R14,R12,&SA                                       83269
         AGO   .COM                                              83269
.NOSA    ANOP  ,                                                 83269
&NM      LM    R14,R12,SUBSAVE                                   83269
.COM     BR    R14                                               83269
         MEND  ,                                                 83262
         SPACE 2                                                 83262
         COPY  OPTIONGB                                          83262
         SPACE 2                                                 83262
         SYSPARM LIST=YES                                        83262
         SPACE 3                                                 83262
*        THIS PROGRAM WAS ADAPTED FROM MODULE OVLYTREE DISTRIBUTED BY
*        SOME SHARE, INC. MEMBER INSTALLATIONS.  AUTHOR UNKNOWN. 83262
*                                                                83262
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*    THE OVERLAY TREE PROCESSOR READS IN THE CESD AND SEGTAB FOR A    *
*     LOAD MODULE IN OVERLAY STRUCTURE, AND PRODUCES A GRAPHIC        *
*     REPRESENTATION OF THE OVERLAY STRUCTURE.  OPTIONALLY, IT WILL   *
*     PUNCH THE OVERLAY AND INSERT CARDS REQUIRED TO RECREATE THE     *
*     SAME OVERLAY STRUCTURE.                                         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                83262
*    E.S.P. CHANGES - FOR MODULES NOT IN OVERLAY, THIS PROGRAM  GP03072
*    PUNCHES ORDER CARDS. THE PDS CONTAINING THE MEMBER IS SEARCHED
*    FOR OTHER MEMBERS WITH THE SAME TTR, AND THE APPROPRIATE ALIAS
*    CARDS ARE GENERATED.                                        83262
         EJECT ,                                                 83262
         PRINT &PRTSOR                                           83262
LOADMAPS PGMHEAD ZERO15,BASE=(R10,R11,R12),PARM=R9,BNDRY=PAGE   GP03072
         SPACE 1                                                 83262
         SERVINIT ,          INITIALIZE THE SERVICE ROUTINE      83262
         SERVCALL LPALD,=CL8'@PRINTER'  LOAD THE PRINTER ROUTINE 83262
         ST    R0,@PRINTER                                       83262
*        SERVCALL LPALD,=CL8'@INPREAD'  LOAD THE SYSIN READER    83262
*        ST    R0,@INPREAD                                       83262
*        SERVCALL LPALD,=CL8'@VOLREAD'  LOAD THE DISK READER     83262
*        ST    R0,@VOLREAD                                       83262
         SPACE 1                                                 83262
         MVI   OPTUNIT,2     PARM PRINTED ON SYSTERM             83262
         PRTOPEN SYSTERM,OPT=(NOWTO,DUMMY),DEV=2                 83262
         C     R15,CON04     OPENED OK ?                         84275
         BNH   HAVESUM       YES                                 83269
         MVI   OPTUNIT,1     ELSE SWITCH ERROR MESSAGES TO SYSPRINT
         PRTOPEN SYSPRINT,OPT=(ABEND,DUMMY)  AND REQUIRE SYSPRT  83262
         B     COMSUM                                            83269
HAVESUM  PRTOPEN SYSPRINT,OPT=(DUMMY,NOWTO)  IGNORE MISSING SYSPRINT
COMSUM   PRTLIST SUMTITLE,TITLE=1,DEV=2  TITLE FOR SUMMARY LISTING
         PRTLIST PRTTITLE,TITLE=1      AND MAIN LISTING          83262
         XC    READBFR,READBFR     CLEAR READ BUFFER             83262
         MVI   PDORECFM,DCBRECU  SET RECFM=U                     83262
         MVI   MESSBLNK,C' '                                     83262
         BAL   R14,MESSCLR   BLANK OUT LINE                      83269
         LA    R14,PARMSVNM  GET PARM STORE AREA                 83262
         LA    R15,L'PARMSVNM-1(,R14)  END                       83262
         STM   R14,R15,BEGNMBFR  STASH FOR PARM ANALYSIS         83262
         BAL   R14,PARMOPTS  GO TO DECODE PARM OPTIONS           83262
         TM    OPTSW,DECK          DECK OPTION?                  83262
         BNZ   TROPUNCH      TRY TO OPEN THE PUNCH               83262
         PRTLIST NODKWARN,DEV==OPTUNIT  WARN THAT NO DECK PUNCHED
         B     NOPNPUN                                           83262
TROPUNCH PRTOPEN SYSPUNCH,OPT=(ABEND,DUMMY),DEV=3    OPEN SYSPUNCH
NOPNPUN  MVC   BLDLLIST(12),PATBLDL    INITIALIZE BLDL PARMS.    83262
         OPEN  (MODDCB,INPUT)   LOOK FOR SYSLIB                  83262
         TM    MODDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?           83262
         BNZ   GETMEAN       YES; GET STORAGE                    83262
         PRTF  =C'0** SYSLIB FAILED TO OPEN. **',29,DEV=(1,2)   GP03072
         SERVTERM ,                                              83269
         ABEND 706,DUMP                                          83262
         SPACE 1                                                 83262
         USING ESDDATA,R4
GETMEAN  L     R6,STORESVD   GET STORAGE RESERVED FOR OS USE     83262
         A     R6,COREWANT   GET MINIMUM SIZE DESIRED            83262
         ST    R6,COREWANT   UPDATE IT                           83262
         C     R6,COREWANT+4                                     83262
         BNH   *+8                                               83262
         ST    R6,COREWANT+4                                     83262
         GETMAIN VU,LA=COREWANT,A=COREGOT                        83262
         LM    R7,R8,COREGOT       R7=ADDRESS, R8=LENGTH
         L     R6,STORESVD   GET STORAGE RESERVED FOR OS USE     83262
         SR    R8,R6         RETURN SOME FOR OS                  83262
         LR    R9,R8
         AR    R9,R7         R9=ADDRESS AT WHICH TO FREE RESERVE 83262
         ST    R8,COREGOT+4        SAVE CORE KEPT
         LTR   R6,R6         ANYTHING TO FREE ?                  83262
         BNP   NOFREEMN      NO                                  83262
         FREEMAIN R,LV=(R6),A=(R9)                               83262
NOFREEMN LR    R14,R7                                            83262
         LR    R15,R8                                            83262
         SLR   R0,R0                                             83262
         SLR   R1,R1                                             83262
         MVCL  R14,R0        CLEAR                               83262
         SPACE
         LA    R14,0(,R7)          BEGIN OF AVAIL. CORE; ZERO HI BYTE
         LA    R9,ALLOCTAB         ALLOCATION TABLE
         LA    R6,ALLOC2-ALLOCTAB  INCREMENT
         LA    R7,ALLOCLST         END FOR BXLE
ALLOCATE LR    R5,R8               LENGTH OF CORE GOTTEN
         SLR   R4,R4
         MH    R5,0(,R9)           % TO ALLOCATE TO THIS TABLE
         D     R4,HUNDRED          R5 = AMT. OF CORE IN BYTES FOR TBL.
         CH    R5,2(,R9)           R5 : MINIMUM
         BH    ALLOC01             >
         LH    R5,2(,R9)           DEFAULT TO MIN.
ALLOC01  CH    R5,4(,R9)           R5 : MAXIMUM
         BL    ALLOC02             <
         LH    R5,4(,R9)           USE MAX.
ALLOC02  LH    R3,6(,R9)           PUT BEGIN ADDRESS
         ST    R14,SAVE(R3)        WHERE IT GOES.                83262
         LA    R5,3(,R5)           ROUND UP
         SRL   R5,2                TO NEXT                       83262
         SLL   R5,2                FULLWORD BDRY.                83262
         AR    R14,R5              NEXT CORE AVAILABLE.          83269
         LH    R3,8(,R9)           END ADDRESS
         LTR   R3,R3               NEEDED?
         BZ    ALLOC03             (NO)
         ST    R14,SAVE(R3)        SAVE IT.                      83262
ALLOC03  BXLE  R9,R6,ALLOCATE      FOR NEXT ENTRY.
         LH    R3,6(,R9)           TAKE CARE OF CESD NOW
         ST    R14,SAVE(R3)        START ADDRESS                 83262
         LH    R3,8(,R9)           END LOCATION
         LM    R7,R8,COREGOT
         AR    R7,R8               R7 = END ADDRESS
         ST    R7,SAVE(R3)         SAVE ADDRESS                  83262
         SPACE 2
         LA    R1,READBFR+TABLLN
         ST    R1,RCBFEND          END OF READ BUFFER
         SPACE 2
         SPACE
***** PROCESS ANOTHER NAME *****
         SPACE
ITERATE  MVC   PDS2NAME,BLANKS     BLANK OUT MEMBER NAME         83262
         MVI   BLKSTART,C' '                                     83262
         MVC   BLKSTART+1(BLKLEN-1),BLKSTART  BLANK OPTIONAL FIELDS
         LM    R7,R8,BEGNMBFR      NAME BUFFER
         SLR   R9,R9
         IC    R9,0(,R7)           LENGTH OF THIS NAME
         BCTR  R9,0                - 1
         EX    R9,MVCNAME
         LA    R7,2(R7,R9)         -> NEXT NAME
         ST    R7,BEGNMBFR         & SAVE
         CR    R7,R8
         BL    *+8                 NOT END OF PARMS
         OI    OPTSW,FINISH        YES.
         SPACE 1                                                 83262
         PRTLIST MEMHEAD,DEV=2                                   83262
         NI    INTERN1,255-PCFIRST-NUCMOD                        83262
         XC    ENTRY,ENTRY         RESET ENTRY NAME.
         XC    ALIASNAM(ALIASCLR),ALIASNAM  CLEAR NAMES ANYWAY   83262
         OI    SWITCHES,ERRLVL4    IF LEFT ON, RETURN CODE = 4
         MVC   DECKSEQ,=F'10000'  INITIALIZE DECK OPTION COUNTER 83262
         MVC   DECKC73,PDS2NAME     AND EBCDIC NAME              83262
         BLDL  MODDCB,BLDLLIST                                   83262
         BXLE  R15,R15,MEMFIND   SUCCESSFUL; ISSUE FIND          83262
BLDLERR  PRTLIST BADBLDL,DEV=(1,2)                               83262
         B     IEWLQUIT      QUIT THIS MEMBER                    83262
         SPACE 1                                                 83262
MVCNAME  MVC   PDS2NAME(0),1(R7)  MOVE MEMBER NAME TO LIST       83262
BADBLDL  FDPRT '** BLDL FAILED FOR',NL,PADR                      83262
         FDPRT PDS2NAME                                          83262
         FDPRT *END                                              83262
MEMHEAD  FDPRT 'MODULE',NL,PADR                                  83262
         FDPRT PDS2NAME                                          83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
MEMFIND  MVC   FINDTTR,PDS2TTRP  SAVE TTR/Z FOR POINTS           83262
         MVC   PDS2INDC(65),PDS2INDC+2  ERASE BLDL BYTES         83262
         MVC   MEMNAME,PDS2NAME  SAVE USER'S NAME                83262
         MVC   FINDTTR(3),CON01+1  SET TO DIRECTORY TTRZ         83262
         FIND  MODDCB,FINDTTR,C  FANCY POINT TO ZTH DIRECTORY    83262
         LA    R6,ALIASNAM   POINT TO FIRST ALIAS SLOT           83262
DIRBLOCK LA    R4,READBFR    POINT TO BUFFER                     83262
         LA    R3,TABLLN     SET EXPECTED READ LENGTH (NO KEY)   83262
         BAL   R14,READRTN   READ                                83262
         LH    R3,0(,R4)     GET SIZE OF BLOCK READ              83262
         AR    R3,R4         GET LAST BYTE +1                    83262
         BCTR  R3,0          ADJUST                              83262
         LA    R2,2          SET LENGTH OF LENGTH                83262
DIRNEXT  BXH   R4,R2,DIRBLOCK  READ ANOTHER BLOCK IF EXHAUSTED   83262
         LR    R1,R4         FINAGLE                             83262
         STM   R1,R3,DIRBXLE  UPDATE POINTERS                    83262
         CLI   0(R4),X'FF'   LAST MEMBER PROCESSED ?             83262
         BE    ENDDIRP       YES; SKIP OUT                       83262
         SERVCALL PDSDE,DIRBXLE   DECODE CURRENT BLOCK           83262
         LR    R15,R0                                            83262
         MVC   PDORALIS(PDORBLNK),0(R15)  SAVE RETURNED DATA     83262
         CLC   PDS2TTRP,PDS2TTRP-PDS2NAME(R4)  SAME TTR ?        83262
         BNE   DIRBUMP       NO; SKIP                            83262
         TM    PDS2INDC-PDS2NAME(R4),PDS2ALIS  ALIAS ENTRY ?     83262
         BNZ   DIRPALIS      YES; CHECK AGAINST USER'S NAME      83262
         MVC   MEMNAME,0(R4) SAVE THIS NAME FOR LATER VERIFICATION
         MVC   MEMEPA,PDS2EPA-PDS2(R4)   SAVE OFFSET, ALSO       83262
         B     DIRBUMP                                           83262
DIRPALIS MVC   0(8,R6),0(R4) SAVE THE ALIAS NAME                 83262
         MVC   8+1(3,R6),PDS2EPA-PDS2(R4)  SAVE ENTRY FOR ALIAS  83262
         LA    R6,12(,R6)    POINT TO NEXT SLOT                  83262
DIRBUMP  LM    R1,R3,DIRBXLE   RELOAD                            83262
         LR    R4,R1         UNFINAGLE                           83262
         B     DIRNEXT       GET NEXT MEMBER                     83262
ENDDIRP  SH    R6,=H'12'     POINT TO LAST ALIAS ENTRY           83262
         ST    R6,ALIASPTR   SAVE POINTER                        83262
         SLR   R3,R3                                             83262
         IC    R3,FINDTTR+3  GET CONCATENATION NUMBER            83262
GONETIOT SERVCALL TIODD,=CL8'SYSLIB'                             83262
         LR    R4,R0         COPY THE TIOT ADDRESS               83262
BUMPTIOT S     R3,CON01      COUNT DOWN                          84275
         BM    HAVETIOT      HAVE TIOT ADDRESS                   83262
         SERVCALL TIOLP,(R4)   GET NEXT ENTRY                    83262
         LTR   R4,R0         ANY ?                               83262
         BNZ   BUMPTIOT      YES                                 83262
         B     GONETIOT      USE DEFAULT                         83262
EXISITOD TM    =X'1',*-*     CHECK FOR ODD VALUE IN REGISTER    GP03072
         SPACE 1                                                GP03072
         USING TIOENTRY,R4   DECLARE TIOT                        83262
HAVETIOT ICM   R1,7,TIOEJFCB  GET JFCB TOKEN                    GP03072
         SERVCALL SWARL,(R1)  CONVERT TOKEN TO TEXT             GP03072
         MVC   CURDSN,0(R1)   MOVE DSN TO SUB-HEADER            GP03072
         SR    R1,R1         JUST IN CASE                       GP03072
         ICM   R1,7,TIOEFSRT  LOAD THE UCB ADDRESS               83262
         EX    R1,EXISITOD   TOKEN ?                            GP03072
         BZ    HAVEUCB       NO; USE ADDRESS AS IS              GP03072
         SERVCALL SWARL,(R1)  CONVERT TOKEN TO TEXT             GP03072
HAVEUCB  LR    R2,R1         PRESERVE UCB ADDRESS               GP03072
         USING UCBOB,R2      DECLARE IT                          83262
         MVC   CURVOL,UCBVOLI    AND VOLUME SERIAL               83262
         SERVCALL UCBGN,UCBOB   GET GENERIC NAME                 83262
         MVC   CURUNIT,0(R1)                                     83262
         LA    R1,L'UCBCHAN                                     GP03072
         LA    R3,CURDEV#                                       GP03072
         LA    R4,UCBCHAN                                       GP03072
         BAS   R9,HEXCNVT    CONVERT DEVICE NUMBER TO PRINTABLE GP03072
         DROP  R2,R4                                             83262
         PRTLIST SUBTITLE,TITLE=3   MAKE MEMBERNAME SUB-TITLE    83262
         CLC   MEMNAME,PDS2NAME   DID USER SPECIFY ALIAS ENTRY ? 83262
         BE    ENDDIRD       NO; USE AS IS                       83262
         PRTLIST MEMISALI,DEV=(1,2)                              83262
         MVC   PDS2NAME,MEMNAME   UPDATE NAME                    83262
         MVC   PDS2EPA,MEMEPA          AND ENTRY OFFSET          83262
         BLDL  MODDCB,BLDLLIST   GET UPDATED INFORMATION         83262
         BXH   R15,R15,BLDLERR                                   83262
         MVC   PDS2INDC(65),PDS2INDC+2  ERASE BLDL BYTES         83262
ENDDIRD  MVC   FINDTTR(3),PDS2TTRP  SET FOR FIRST RECORD         83262
         FIND  MODDCB,FINDTTR,C   POSITION TO IT                 83262
         LA    R14,PDS2NAME  POINT TO MAIN MEMBER DATA           83262
         LA    R15,64        PHONY LENGTH                        83262
         LA    R0,0(R14,R15)  ANY OLD END ADDRESS                83262
         STM   R14,R0,DIRBXLE  SET BXLE POINTERS FOR SERVICE     83262
         SERVCALL PDSDE,DIRBXLE  CONVERT, EXPAND, ETC.           83262
         LR    R15,R0                                            83262
         MVC   PDORALIS(PDORBLNK),0(R15)  SAVE RETURNED DATA     83262
         BAL   R14,@IEBPDS   PRINT FORMATTED DIRECTORY INFORMATION
         TM    PDOTYPE,PDOTLKED  LINKAGE-EDITOR DIRECTORY ENTRY ?
         BZ    NOTEDTBL      NO; CANNOT PROCESS                  83262
         TM    PDS2ATR2,PDS2NREP   IS THERE A CESD?              83262
         BO    NOTEDTBL                                          83262
         NI    SWITCHES,255-ERRLVL4  TURN OFF SWITCH             83262
         TM    PDS2ATR1,PDS2OVLY   OVERLAY?                      83262
         BZ    NOTOVLY
         SPACE 3
***** READ IN CESD; KEEP SD, CM, PC, PD; FIND EP. *****
         SPACE
         LM    R6,R7,CESDADR
READ     LA    R4,READBFR          READ IN CESD
         LA    R3,TABLLN
         BAL   R14,READRTN
         SPACE 1                                                 83262
************************* BLOCK CONTROL BYTES ***********************
IDRREC   EQU   X'80'                                             83262
SYMREC   EQU   X'40'         SYMBOL TABLE ENTRIES                83262
CESDREC  EQU   X'20'         CESD RECORD                         83262
SCTRREC  EQU   X'10'         SCATTER/TRANSLATION RECORD          83262
CNTRLREC EQU   X'01'                                             83262
         SPACE 1                                                 83262
         CLI   0(R4),CNTRLREC      CONTROL RECORD?
         BE    CESDFULL      YES; GET $SEGTAB SIZE FROM IT
         CLI   0(R4),CESDREC   CESD INFORMATION ?                83262
         BNE   READ          NO; READ SOME MORE.                 83262
         LH    R9,6(,R4)           LENGTH OF ESD FIELDS
         LA    R8,16         INCREMENT                           83262
         AR    R9,R4               ADDRESS + LENGTH
         LA    R4,8(,R4)           SKIP CONTROL INFORMATION      83262
         USING ESDNAME,R4                                        83262
CHECK    CLI   ESDTYPE,CODESEG     PD?                           83262
         BNE   PVT                 NO; CHECK FOR PC.
         TM    INTERN1,PCFIRST     FIRST PD ITEM?
         BO    ENDTAB              YES; GO.
         OI    INTERN1,PCFIRST     SET SWITCH
         MVC   ESDNAME,=CL8'$SEGTAB'  NAME IS $SEGTAB
         B     MOVE
ENDTAB   MVC   ESDNAME,=CL8'$ENTAB'  NAME IS $ENTAB
         B     MOVE
PVT      CLI   ESDTYPE,CODEPC      PC?                           83262
         BNE   CLRBITS
         MVC   ESDNAME,=CL8'$PRIVATE'  NAME IS $PRIVATE
         B     MOVE
CLRBITS  NI    ESDTYPE,CODEMASK    TURN OFF LKED FLAGS           83262
         BZ    TESTEP              ZERO IF SD
         CLI   ESDTYPE,CODELR      LR?                           83262
         BE    TESTEP
         CLI   ESDTYPE,CODECM      CM?                           83262
         BNE   UPDATE
         CLI   ESDNAME,C' '        BLANK COMMON?                 83262
         BNE   MOVE                NO; OK.
         MVC   ESDNAME,=CL8'$BLKCOM'  YES; NAME IS $BLKCOM
         B     MOVE
TESTEP   CLC   ESDADDR,PDS2EPA      IS THIS THE EP?              83262
         BNE   NOTTHEEP
         CLI   ENTRY,C' '    PREVIOUSLY STASHED ?                83262
         BH    *+10          YES; USE SD RATHER THAN LR NAME     83262
         MVC   ENTRY,ESDNAME       YES; SAVE NAME.
NOTTHEEP CLI   ESDTYPE,CODESD                                    83262
         BNE   UPDATE              IF LR.
MOVE     MVC   0(16,R6),ESDENTRY   SAVE IN CESD BUFFER.
*WHY?*   XC    10(2,R6),10(R6)     SET TO 0 FOR PRINT POS.
         LA    R6,LENESD(,R6)  POINT TO NEXT SAVE ENTRY          83262
         CR    R6,R7               NEXT SPACE IN CESD BUFFER
         BNL   MBOVRFLW            CESD BUFFER OVERFLOW.
UPDATE   BXLE  R4,R8,CHECK
         B     READ                READ IN ANOTHER RECORD.
         SPACE 3
***** READ IN SEGTAB; CALL IEWLDECK IF NEEDED. *****
         SPACE
CESDFULL ST    R6,CESDUSED         LENGTH USED.
         LH    R3,14(R4)           GET LENGTH OF SEGTAB FROM CCW.
         LM    R4,R5,SEGBFBEG
         LR    R8,R4               SEGTAB BUFFER BEGIN
         AR    R8,R3               + SEGTAB LENGTH
         CR    R8,R5               -- LARGE ENOUGH?
         BNL   SGBOVFLW            NO.
         BAL   R14,READRTN         READ IT IN.
         ST    R8,SEGUSED          SAVE UPPER LIMIT.
         DROP  R4                                                83262
         L     R3,CESDADR          FOR CESD                      83262
         USING ESDNAME,R3                                        83262
         LA    R4,LENESD     INCREMENT FOR CESD                  83262
         L     R5,CESDUSED         END OF CESD                   83262
         SR    R5,R4               - 16 FOR BXLE                 83262
         STM   R3,R5,ESDPTR  SET FOR SORT                        83262
         B     ESDSOSRT      GO TO SORT THE ENTRIES              83262
OLAYLOOP CLI   ESDTYPE,CODELR    LR ?                            83262
         BNE   OLAYSD        SKIP IF NOT LR.                     83262
         PRTLIST ORDLRPRT    PRINT LR INFO                       83262
         B     OLAYBUMP                                          83262
OLAYSD   PRTLIST ORDOLPRT    PRINT THE CONTROL CARD INFORMATION  83262
OLAYBUMP BXLE  R3,R4,OLAYLOOP                                    83262
         DROP  R3                                                83262
         TM    OPTSW,DECK          DECK WANTED?
         BZ    DECKOUT             NO.
         BAL   R14,OVLYDECK        PRODUCE DECK.                 83262
DECKOUT  DS    0H                                                83262
         SPACE
IEWLQUIT TM    SWITCHES,ERRLVL4    LEVEL 4 ERROR?
         BZ    NEXTMBR             NO.
         OI    RETCODE+1,4   YES. SET IT.                        83262
NEXTMBR  TM    OPTSW,FINISH        DID LAST MEMBER?
         BZ    ITERATE             NO; CONTINUE
         SPACE
         NI    RETCODE+1,4   LEAVE ON ONLY RET. CODE OF 4        83262
IEWLDONE CLOSE (MODDCB)            CLOSE                         83262
         ICM   R0,15,COREGOT+4  ANY STORAGE GOTTEN ?             83262
         BZ    IEWLDONT      NO; SKIP FREEMAIN                   83262
         FREEMAIN V,A=COREGOT         FREE TABLES                83262
IEWLDONT SERVTERM ,          CLOSE AND FREE EVERYTHING           83262
         LH    R9,RETCODE    SET RETURN CODE.                    83262
         PGMEXIT RC=(R9)                                        GP03072
         SPACE 5
***** READ ROUTINE *****
         SPACE
READRTN  SUBENT IOSAVE                                           83269
         LR    R5,R13        SET WORK AREA ADDRESS FOR SYNAD     83262
         READ  DECB1,SF,MODDCB,(R4),(R3)                         83262
         CHECK DECB1
         TM    OPTSW,IOERR   PERMANENT I/O ERROR ON READ ?       83262
         BZ    EXITRTN       NO; RETURN TO CALLER                83269
         OI    RETCODE+1,8   SET I/O ERROR LEVEL                 83269
WARNPRNT PRTF  MESSAGE,L'MESSAGE,DEV=(1,2)  PRINT ERROR          83269
         BAL   R14,MESSCLR                                       83269
         B     IEWLQUIT      TERMINATE THIS MEMBER               83262
         SPACE 1
***** PRINT INTERFACE *****
         SPACE
PRTRTN   SUBENT IOSAVE                                           83269
         PRTF  MESSAGE,L'MESSAGE                                 83262
         BAL   R14,MESSCLR   CLEAR THE PRINT LINE                83269
EXITRTN  SUBEX IOSAVE                                            83269
         SPACE 1                                                 83269
MESSCLR  MVC   MESSAGE,MESSBLNK   CLEAR THE PRINT LINE           83269
         BR    R14           RETURN TO CALLER                    83269
         SPACE 5
***** ERROR MESSAGES *****
         SPACE
MBOVRFLW LA    R2,FDXCESD                                        83269
         B     PRTOVFLW                                          83269
SGBOVFLW LA    R2,FDXSEGT                                        83269
PRTOVFLW PRTLIST MSGOVFLW,DEV=(1,2)                              83269
         OI    RETCODE+1,12                                      83269
         B     IEWLDONE            GIVE UP.
         SPACE
         SPACE
NOTEDTBL PRTLIST MSGNEDIT,DEV=(1,2)  SET NOT EDITABLE MESSAGE    83269
         OI    RETCODE+1,4   MINOR ERROR                         83269
         B     IEWLQUIT
         SPACE 1                                                 83269
FDXCESD  FDPRT 'CESD',PAD                                        83269
FDXSEGT  FDPRT 'SEGTAB',PAD                                      83269
MSGOVFLW FDPRT '** OVERFLOW IN'                                  83269
         FDEXEC 0(R2)        INSERT FDX FRAGMENT                 83269
         FDPRT 'TABLE.  INCREASE REGION.  **'                    83269
         FDPRT *END                                              83269
         SPACE 1                                                 83269
MSGNEDIT FDPRT '** MODULE',NL                                    83269
         FDPRT PDS2NAME,DEB,PAD                                  83269
         FDPRT 'IS NOT EDITABLE **'                              83269
         FDPRT *END                                              83269
         SPACE 2                                                 83262
*        PROCESSING FOR NORMAL (NON-OVERLAY) MODULE              83262
         SPACE 2                                                 83262
NOTOVLY  TM    PDS2ATR2,PDS2NREP DOES MODULE CONTAIN ESD ENTRIES?
         BNZ   NOTEDTBL      NO, EXIT WITH ERROR                 83262
         CLC   PDS2TTRP,PDS2TTRT  START TTR SAME AS TEXT TTR ?   83262
         BNL   NOTEDTBL      YES; NO ESD ENTRIES                 83262
         L     R14,CESDADR   GET ESD STORAGE TABLE               83262
         LA    R15,LENESD    ENTRY LENGTH                        83262
         LR    R0,R14        COPY ADDRESS                        83262
         SR    R0,R15        SET FOR FIRST GETESD                83262
         STM   R14,R0,ESDPTRS  SET BXLE POINTERS                 83262
         LR    R6,R14        POINT TO FIRST ENTRY JUST IN CASE   83262
         SPACE 1                                                 83262
ESDEXCP  LA    R4,READBFR    GET INPUT BUFFER                    83262
         LA    R3,TABLLN     EXPECTED MAXIMUM LENGTH             83262
         BAL   R14,READRTN   READ A DISK BLOCK                   83262
         CLI   READBFR,SYMREC   TEST SYM RECORD?                 83262
         BE    ESDEXCP        YES, SKIP RECORD                   83262
         CLI   READBFR,CESDREC  CESD RECORD?                     83262
         BNE   ESDLAST        NO                                 83262
         LH    R2,READBFR+4   RELATIVE # OF 1ST ESD ID           83262
         LA    R3,READBFR+8   START OF ESD DATA                  83262
         LH    R5,READBFR+6   LENGTH OF DATA IN BUFFER           83262
         AR    R5,R3                                             83262
         LA    R4,LENESD1     LENGTH OF ONE ENTRY                83262
         SR    R5,R4                                             83262
         SPACE 1                                                 83262
         USING ESDNAME,R3                                        83262
ESDSCAN  IC    R0,ESDTYPE                                        83262
         LA    R1,CODESEG     CHECK FOR SEGTAB/ENTAB             83262
         NI    ESDTYPE,CODEMASK                                  83262
         NR    R0,R1                                             83262
         CLI   ESDTYPE,CODEPC   PRIVATE COMMON?                  83262
         BE    ESDSCANF      YES; FINAGLE                        83262
         CLI   ESDTYPE,CODECM   COMMON ?                         83262
         BNE   *+8           NO                                  83262
ESDSCANF MVI   ESDTYPE,CODESD  YES; TREAT AS SD                  83262
ESDNUCX  CR    R0,R1          THIS SEGTAB/ENTAB ENTRY?           83262
         BE    ESDUSE1        YES                                83262
         CLI   ESDTYPE,CODESD SD ENTRY?                          83262
         BE    ESDUSE         YES                                83262
         CLI   ESDTYPE,CODELR LR ENTRY?                          83262
         BE    ESDUSE                                            83262
NEXTESD  LA    R2,1(,R2)     UP ESDID                            83262
         BXLE  R3,R4,ESDSCAN                                     83262
         B     ESDEXCP        GET NEXT ESD RECORD                83262
         DROP  R3                                                83262
         USING ESDDATA,R6                                        83262
         SPACE 1                                                 83262
ESDUSE1  STC   R0,ESDTYPE-ESDDATA(,R3)  RESTORE SEG/ENTAB        83262
ESDUSE   BAL   R14,GETESD                                        83262
         STH   R2,ESDID      SET ESD ID                          83262
         MVC   ESDNAME(LENESD1),0(R3) SAVE ESD ENTRY             83262
         B     NEXTESD                                           83262
         SPACE 1                                                 83262
ESDLAST  CLC   ESDPTR,ESDPTR2  ANY ENTRIES STASHED ?             83262
         BH    NOTEDTBL       EXIT - NO ESD DATA AVAILABLE       83262
         CLC   =C'IEANUC0',PDS2NAME  NUCLEUS ?                   83262
         BNE   ESDSOSRT      NO                                  83262
         TM    PDS2ATR1,PDS2SCTR  SCATTER LOAD ?                 83262
         BZ    ESDNPROB      NO                                  83262
         SPACE 1                                                 83262
*        SPECIAL RELOCATION CODE FOR NUCLEUS MEMBERS             83262
*                                                                83262
         L     R6,ESDPTR     GET FIRST ESD ENTRY                 83262
         CLC   =C'NIP0',ESDNAME+4  CORRECT MVS ENTRY ?           91193
         BE    ESDNUCVS      YES                                 83262
         LM    R15,R1,ESDPTRS  GET START, INCREMENT AND END      91193
ESDNIPLK BXH   R15,R0,ESDNPROB  NO NIPPER                        91193
         CLC   =C'NIP0',ESDNAME+4-ESDENTRY(R15)  IS THIS IT ?    91193
         BNE   ESDNIPLK      NO; LOOK AGAIN                      91193
ESDNIPSW XC    ESDENTRY,ESDENTRY-ESDENTRY(R15)                   91193
         XC    ESDENTRY-ESDENTRY(L'ESDENTRY,R15),ESDENTRY        91193
         XC    ESDENTRY,ESDENTRY-ESDENTRY(R15)                   91193
ESDNUCVS XC    WORKWORK,WORKWORK  CLEAR DOUBLE-WORD              83262
         MVC   WORKWORK+2(2),PDS2SLSZ  GET SCATTER SIZE          83262
         MVC   WORKWORK+6(2),PDS2TTSZ  AND TRTABLE SIZE          83262
         MVC   ENTRY,ESDNAME   SET NIP AS ENTRY POINT            83269
         LM    R4,R5,WORKWORK  GET COMBINED SIZE                 83262
         LA    R3,0(R4,R5)   SAVE LENGTH OF DATA TO BE READ      83262
         LA    R4,4(R4,R4)   SCTR+ADDRESS TABLE+4 ON TOP         83262
         AR    R4,R5         ALLOCATE TWO ADDRESS TABLES         83262
         LR    R5,R4         COPY                                83262
         LM    R0,R1,TRANGET   GET SIZE/ADDRESS OF PRIOR GETMAIN 83262
         CR    R4,R0         WILL IT FIT EXISTING AREA ?         83262
         BNH   ESDNRGTN      YES; USE IT                         83262
         LTR   R0,R0         WAS THERE A PRIOR GETMAIN ?         83262
         BZ    ESDNRGNW      NO; GET NEW ONE                     83262
         FREEMAIN R,LV=(0),A=(1)  FREE OLD AREA                  83262
         XC    TRANGET(8),TRANGET  JUST IN CASE                  83262
ESDNRGNW GETMAIN R,LV=(R4)   GET STORAGE                         83262
         LR    R0,R4         COPY SIZE AGAIN                     83262
         STM   R0,R1,TRANGET  SAVE SIZE AND ADDRESS              83262
ESDNRGTN LTR   R6,R1         TEST IF GOTTEN                      83262
         BNP   ESDNPROB                                          83262
         AR    R5,R6         MAKE TOP BYTE+1                     83262
         S     R5,CON04      ALLOW FOR DUMMY WORD AT END         84275
         ST    R5,ESDTAB     SET TO FAIL IF UNREAD               83262
         MVC   FINDTTR(3),PDS2TTRN  SET TTR OF SCTR TABLE        83262
         FIND  MODDCB,FINDTTR,C   POINT TO FIRST SCTR/TRAN RECORD
ESDNREAD STM   R3,R4,DB      SAVE RESIDUAL SIZE                  83262
         LA    R4,READBFR    GET THE READ BUFFER                 83262
         LA    R3,1024       SET FOR LARGE BLOCKS                83262
         BAL   R14,READRTN   READ A BLOCK                        83262
         CLI   READBFR,SCTRREC  SCATTER/TRANSLATE BLOCK ?        83262
         BNE   ESDNRED       NO; ASSUME END                      83262
         LM    R3,R4,DB      RESTORE RESIDUAL SIZE               83262
         SLR   R0,R0                                             83262
         ICM   R0,7,READBFR+1  GET LENGTH OF DATA IN BLOCK       83262
*WHY?*   A     R0,CON04      FOR OLD CODE COMPATIBILITY          84275
         SR    R5,R0         GET NEW INPUT ADDRESS               83262
         CR    R5,R6         VALID ?                             83262
         BL    ESDNRED       NO; ASSUME DONE                     83262
         SR    R3,R0         GET RESIDUAL SIZE OF TABLE          83262
*WHY?*   A     R3,CON04      ALLOW FOR CONTROL BYTES             84275
         BM    ESDNRED       DONE ?                              83262
         LR    R14,R5        GET BOTTOM ADDRESS                  83262
         LR    R15,R0        SIZE                                83262
         LA    R0,READBFR+4  INPUT DATA                          83262
         LR    R1,R15        SIZE                                83262
         MVCL  R14,R0        MOVE INPUT                          83262
*WHY?*   LA    R5,4(,R5)                                         83262
         ST    R5,ESDTAB     SAVE LAST ADDRESS PROCESSED         83262
         LTR   R3,R3         ANY MORE TO READ ?                  83262
         BP    ESDNREAD      YES; READ AGAIN                     83262
ESDNRED  L     R5,ESDTAB     GET LAST ADDRESS PROCESSED          83262
         A     R5,WORKWORK+4 GET SCTR TABLE                      83262
         ST    R5,ESDSCTR    SET IT                              83262
         A     R5,WORKWORK    GET END BYTE                       83262
         LM    R0,R1,TRANGET GET GETMAIN ADDRESS                 83262
         AR    R1,R0         GET HIGH ADDRESS                    83262
         S     R1,CON04      GET END LESS 4 BYTE DUMMY ENTRY     84275
         CR    R1,R5         MATCHES END ?                       83262
         BNE   ESDNPROB      NO; SOME ERROR                      83262
         L     R6,ESDPTR     GET NIP ENTRY BACK                  83262
         XC    DB,DB                                             83262
         MVC   DB+1(3),PDS2STOR  GET LOAD-MODULE LENGTH          83262
         MVC   DB+5(3),ESDLEN    GET NIP LENGTH                  83262
         LM    R14,R15,DB                                        83262
         LA    R14,0(,R14)   CLEAR SIZE                          83262
         ST    R14,0(,R1)    STORE IN DUMMY ENTRY                83262
         LA    R15,7(,R15)   ROUND NIP LENGTH                    83262
         N     R15,=X'00FFFFF8'                                  83262
         SR    R14,R15       GET NIP ADDRESS                     83262
         ST    R14,DB                                            83262
         MVC   ESDADDR,DB+1  SET NIP ADDRESS                     83262
         MVC   PDS2EPA,DB+1  ALSO SET NIP AS ENTRY ADDRESS       83262
         L     R14,TRANGET+4 GET GETMAINED STORAGE               83262
         L     R15,WORKWORK  GET SIZE OF ADDRESS TABLE           83262
         SRL   R15,2         CHANGE TO NUMBER OF ENTRIES         83262
         SLR   R0,R0                                             83262
         BCTR  R0,0          MAKE CONSTANT FFFFFFFF              83262
ESDADCLR ST    R0,0(,R14)    INITIALIZE - NO ADDRESS             83262
         LA    R14,4(,R14)                                       83262
         BCT   R15,ESDADCLR  DO ALL                              83262
*        HOUSEKEEPING; THEN BUILD ADDRESS TABLE                  83262
         LM    R4,R5,ESDSCTR  GET SCATTER AND TRANSLATE ADDR     83262
         LA    R6,4          SET FIRST OFFSET TO PROCESS         83262
         L     R3,TRANGET+4  GET BASE OF ADDRESS LIST            83262
         LH    R1,2(,R5)     GET NIP INDEX                       83262
         SLL   R1,2          MAKE INTO OFFSET                    83262
         AR    R1,R3         GET ADDRESS ENTRY                   83262
         MVC   0(4,R1),DB    PRESET NIP ADDRESS                  83262
         SLR   R14,R14       CLEAR 'NEXT AVAILABLE' ADDRESS      83262
ESDADLOP LH    R2,0(R6,R5)   GET NEXT TT INDEX                   83262
         SLA   R2,2          CHANGE INTO OFFSET                  83262
         BNP   ESDADINC      SKIP IF NULL                        83262
         L     R0,0(R2,R3)   GET ADDRESS TABLE ENTRY             83262
         LTR   R0,R0         ALREADY SET ?                       83262
         BNM   ESDADINC      YES; SKIP                           83262
         ST    R14,0(R2,R3)  SET NEW ADDRESS FOR THIS SD         83262
         A     R14,4(R2,R4)  ADD NEXT SD ADDRESS                 83262
         S     R14,0(R2,R4)  LESS CURRENT OLD SD = NEW SD ADDRESS
ESDADINC LA    R6,2(,R6)     BUMP TT OFFSET                      83262
         C     R6,WORKWORK+4 DONE ?                              83262
         BL    ESDADLOP      NO; DO AGAIN                        83262
*        NOW RELOCATE ALL ENTRIES                                83262
         LM    R3,R5,ESDPTR  GET ESD POINTERS                    83262
         BAL   R14,CARDSEQ   GET NEXT CARD SEQUENCE NUMBER       83269
         BZ    ENDNIP        NO DECK WANTED                      83262
         LR    R6,R3         COPY NIP ENTRY                      83262
         PRTLIST INSPUN,DEV=3  PUNCH NIP INSERT CARD             83262
         AR    R6,R4         POINT TO QFX/VFX                    83262
         BAL   R14,CARDSEQ   COUNT CARDS                         83269
         PRTLIST INSPUN,DEV=3  PUNCH QFX/VFX INSERT CARD         83262
         OI    INTERN1,NUCMOD    SHOW WE'RE DOING NUCLEUS        83262
ENDNIP   LA    R6,0(R3,R4)   SKIP NIP; START WITH QFX            83262
         LM    R2,R3,ESDSCTR  LOAD SCTR AND TT ADDRESSES         83262
         L     R9,TRANGET+4  AND ADDRESS TABLE ADDRESS           83262
ESDADHOC LH    R1,ESDID      GET CESD ID                         83262
         SLL   R1,1          MAKE SCATTER TABLE OFFSET           83262
         LH    R1,0(R1,R3)   GET INDEX TO TRANSLATE TABLE        83262
         SLL   R1,2          MAKE INTO OFFSET                    83262
         L     R0,0(R1,R9)   GET NEW ADDRESS                     83262
         CLI   ESDTYPE,CODELR  SD OR LR ENTRY ?                  83262
         BNE   ESDADST       SD; HAVE NEW ADDRESS                83262
         L     R15,ESDADDR-1  GET OLD LR ADDRESS                 83262
         SL    R15,0(R1,R2)   LESS OLD SD BASE                   83262
         ALR   R0,R15        NEW ADDRESS                         83262
ESDADST  ST    R0,DB                                             83262
         MVC   ESDADDR,DB+1  SET NEW ADDRESS                     83262
         BXLE  R6,R4,ESDADHOC                                    83262
         B     ESDNUCOK                                          83262
ESDNPROB OI    RETCODE+1,8                                       83262
 PRTF  =C'0**ERROR PROCESSING SCATTER/TRANSLATION DATA **',47,DEV=(1,2)
ESDNUCOK LM    R0,R1,TRANGET   LOAD GETMAINED STORAGE            83262
         LTR   R0,R0         ANY STORAGE TO FREE ?               83262
         BZ    ESDSOSRT      NO                                  83262
         FREEMAIN R,LV=(0),A=(1)                                 83262
         XC    TRANGET(8),TRANGET                                83262
ESDSOSRT L     R6,ESDPTR     GET FIRST ENTRY                     83262
         LM    R4,R5,ESDPTR+4  GET LENGTH AND LAST ENTRY         83262
         LR    R15,R5        COPY LAST ENTRY                     83262
         SR    R5,R4                                             83262
         LR    R14,R4        COPY LENGTH                         83262
         CR    R15,R6        ONLY ONE ENTRY ?                    83262
         BNH   ESDOUT        YES; SKIP SORT                      83262
         LA    R2,ESDSWAP    SET SWAP ADDRESS FOR FAST BRANCH    83262
         LA    R3,ESDSBUMP   SET BUMP ADDRESS                    83262
         LA    R9,ESDSCLC    SET CLC ADDRESS FOR NORMAL SORT     83262
         TM    PDS2ATR1,PDS2OVLY  OVERLAY ?                      83262
         BNZ   *+8           YES                                 83262
         LA    R9,ESDSCLAD   ELSE IGNORE REGIONS ON SORT         83262
*        TM    ESDFLAG,ESDFNAME  SORT BY NAME ?                  83262
*        BZ    ESDSORT       NO                                  83262
*        LA    R9,ESDSCLNM   SORT BY CSECT NAME ONLY             83262
ESDSORT  LA    R1,0(R4,R6)   SET NEXT ENTRY                      83262
         BR    R9            DO ESDSCLC OR ESDSCLNM              83262
ESDSCLC  CLC   ESDSEG#,ESDSEG#-ESDDATA(R1) CHECK ENTRY SEGMENT #S
         BLR   R3                                                83262
         BHR   R2                                                83262
ESDSCLAD CLC   ESDADDR,ESDADDR-ESDDATA(R1)                       83262
         BLR   R3                                                83262
         BHR   R2                                                83262
         CLC   ESDTYPE,ESDTYPE-ESDDATA(R1)                       83262
         BLR   R3                                                83262
         BHR   R2                                                83262
ESDSCLNM CLC   ESDNAME,ESDNAME-ESDDATA(R1)                       83262
         BNHR  R3                                                83262
ESDSWAP  XC    ESDNAME(LENESD),ESDNAME-ESDDATA(R1)               83262
         XC    ESDNAME-ESDDATA(LENESD,R1),ESDNAME                83262
         XC    ESDNAME(LENESD),ESDNAME-ESDDATA(R1)               83262
ESDSBUMP BXLE  R1,R14,0(R9)  SORT ANOTHER BY ADDR OR NAME        83262
         BXLE  R6,R4,ESDSORT                                     83262
         B     ESDOUT                                            83262
         SPACE 1                                                 83262
GETESD   L     R6,ESDPTR2    GET CURRENT ENTRY                   83262
         L     R0,CESDADR+4  GET BASE                            83262
         A     R6,ESDPTR+4   MAKE NEXT ENTRY                     83262
         S     R0,ESDPTR+4   MAKE LAST FITTING ENTRY             83262
         S     R0,ESDPTR+4   MAKE LAST FITTING ENTRY             83262
         CR    R6,R0         WILL THIS ONE FIT ?                 83262
         BH    MBOVRFLW      NO; QUIT WITH MESSAGE               83262
         ST    R6,ESDPTR2    SET NEW LAST ENTRY                  83262
         BR    R14           RETURN TO CALLER                    83262
         DROP  R6                                                83262
         SPACE 2                                                 83262
*                                                                83262
*                                                                83262
*        ESD TABLE FORMAT                                        83262
*                                                                83262
*                                                                83262
         SPACE 2                                                 83262
ESDDATA  DSECT ,                                                 83262
ESDENTRY DS    0XL16         ONE LINK-EDIT ENTRY                 83262
ESDNAME  DS    CL8            NAME OF EXTERNAL SYMBOL            83262
ESDTYPE  DS    X              ESD TYPE                           83262
CODESD   EQU   X'00'          ENTERNAL DEFINATION                83262
CODELR   EQU   X'03'          EXTERNAL REFERENCE                 83262
CODEPC   EQU   X'04'          PRIVATE COMMON                     83262
CODECM   EQU   X'05'          COMMON COMMON                      83262
CODEMASK EQU   X'07'         MASK FOR ABOVE                      83262
CODESEG  EQU   X'14'          OVERLAY SEGMENT TABLE              83262
CODEENTB EQU   CODESEG        OVERLAY ENTRY TABLE                83262
ESDADDR  DS    XL3            RELATIVE OFFSET                    83262
ESDSEG#  DS    X              SEGMENT NUMBER                     83262
ESDLEN   DS    XL3            LENGTH OF SD ENTRY                 83262
LENESD1  EQU   *-ESDNAME      LENGTH OF ESD DATA                 83262
ESDID    DS    XL2            RELATIVE ESD ID #                  83262
LENESD   EQU   *-ESDDATA      LENGTH OF ENTRY                    83262
LOADMAPS CSECT ,                                                 83262
         SPACE 1                                                 83262
ESDOUT   LM    R3,R5,ESDPTRS  LOAD THE ESD TABLE POINTERS        83262
         TM    PDS2ATR1,PDS2OVLY   CALLED FROM OVERLAY ?         83262
         BNZ   OLAYLOOP      YES; PRINT THE MAP                  83262
         XC    ORDCOUNT,ORDCOUNT  CLEAR ORDER COUNTER            83269
         USING ESDDATA,R3                                        83262
NXTNOTO  MVC   ESDMODE,BLANKS  CLEAR MODE FIELD                  91153
         CLI   ESDTYPE,CODESEG     PD?                           83262
         BE    UPDPRNT       YES; IGNORE                         83262
         CLI   ESDTYPE,CODEPC    PC?                             83262
         BE    UPDMODES      YES; SKIP NAME                      91153
         NI    ESDTYPE,CODEMASK    TURN OFF LKED FLAGS           83262
         BZ    EPTEST              ZERO IF SD                    83262
         CLI   ESDTYPE,CODELR      LR?                           83262
         BE    EPTEST                                            83262
         CLI   ESDTYPE,CODECM      CM?                           83262
         BNE   UPDNOTO                                           83262
         CLI   ESDNAME,C' '        BLANK COMMON?                 83262
         BE    UPDMODES      YES; IGNORE                         91153
EPTEST   CLC   ESDADDR,PDS2EPA      IS THIS THE EP?              83262
         BNE   EPNOTFND                                          83262
         CLI   ENTRY,C' '    PREVIOUSLY STASHED ?                83262
         BH    *+10          YES; USE SD RATHER THAN LR NAME     83262
         MVC   ENTRY,ESDNAME       YES; SAVE NAME.               83262
EPNOTFND CLI   ESDTYPE,CODELR    LR ?                            83262
         BNE   EPNOTLR       SKIP IF NOT LR.                     83262
         PRTLIST ORDLRPRT    PRINT LR INFO                       83262
         B     UPDNOTO                                           83262
EPNOTLR  TM    INTERN1,NUCMOD   DOING NUCLEUS ?                  83269
         BNZ   UPDMODE       YES; NO ORDER - ALREADY DID INSERTS 91153
         TM    OPTSW,DECK    DOING CARDS ?                       83269
         BZ    UPDMODE       NO PUNCHING                         91153
         LA    R2,1                                              83269
         AH    R2,ORDCOUNT   GET CURRENT CARD COUNT              83269
         C     R2,CON01      ANY PREVIOUS DATA PUNCHED ?         84275
         BNH   PORNPREV      NO                                  84275
         TM    PDS2FTB1,PDS2PAGA+PDSAOSLE  VS EDITOR/PAGE ALIGN ?
         BNO   PORNPAGE      NOT BOTH; NEED NOT WORRY ABOUT (P)  84275
         CLI   ESDADDR+2,0   POSSIBLE PAGE BOUNDARY ?            83269
         BNE   PORNPAGE      NO                                  83269
         TM    ESDADDR+1,X'0F'                                   83269
         BNZ   PORNPAGE                                          83269
         PRTLIST COMPUN,DEV=3   FINISH OF THE CARD SEQUENCE      83269
PORNPREV LA    R2,1          FORCE PAGE BOUNDARY ON NEW CARD     83269
PORNPAGE C     R2,CON01      STARTING NEW ?                      84275
         BNH   PORPUN1       YES; PUNCH NEW                      83269
         LA    R1,ORDPUNM    SET FOR MIDDLE OF CARD              83269
         CH    R2,=H'6'      MIDDLE ?                            83269
         BL    PORPUN        YES                                 83269
         LA    R1,ORDPUNT    PUNCH LAST AND SEQUENCE             83269
         SLR   R2,R2         SHOW NO PARTIAL CARD IN BUFFER      83269
         B     PORPUN                                            83269
PORPUN1  BAL   R14,CARDSEQ   UPDATE CARD SEQUENCE COUNT          83269
         LA    R1,ORDPUN     START NEW FD                        83269
PORPUN   STH   R2,ORDCOUNT   UPDATE COUNT                        83269
         PRTLIST (R1),DEV=3  PUNCH A CARD FRAGMENT               83269
UPDMODE  CLI   ESDTYPE,CODESD   MOST FREQUENT SECTION TYPE ?     91153
         BE    UPDMODES      YES                                 91153
         CLI   ESDTYPE,CODEPC   PRIVATE COMMON ?                 91153
         BE    UPDMODES      YES; BETTER THAN A COMMON PRIVATE ? 91153
         CLI   ESDTYPE,CODECM   COMMON COMMON ?                  91153
         BNE   UPDPRNT                                           91153
UPDMODES TM    ESDSEG#,X'06' RMODE 31 OR AMODE 31/ANY ON ?       91153
         BZ    UPDPRNT       NO; LEAVE BLANK                     91153
         MVC   ESDMODE,=C'r2a2'  SET DEFAULT MODE                91153
         TM    ESDSEG#,X'04'  RMODE 31 ?                         91153
         BZ    *+8           NO                                  91153
         MVI   ESDMODE+1,C'3'  SET 31                            91153
         TM    ESDSEG#,X'02'  AMODE 31 OR ANY ?                  91153
         BZ    UPDPRNT       NEITHER; 24                         91153
         MVI   ESDMODE+3,C'3'  SET 31                            91153
         TM    ESDSEG#,X'01'  AMODE ANY ?                        91153
         BZ    UPDPRNT       NO                                  91153
         MVI   ESDMODE+3,C'A'  SET ANY                           91153
UPDPRNT  PRTLIST ORDPRT      PRINT THE CONTROL CARD INFORMATION  83262
UPDNOTO  BXLE  R3,R4,NXTNOTO                                     83262
EOFNOTO  TM    OPTSW,DECK          DECK WANTED?                  83262
         BZ    DECKNOTO            NO.                           83262
         TM    ORDCOUNT+L'ORDCOUNT-1,255-1  MORE THAN ONE ?      83269
         BZ    DECKNOTE      NO                                  83269
         PRTLIST COMPUN,DEV=3   FINISH OFF THE CARD              83269
DECKNOTE BAL   R14,NOTODECK  PUNCH ENTRY AND NAME CARDS          83269
DECKNOTO B     IEWLQUIT      DONE WITH THIS MEMBER               83262
         SPACE 1                                                 83262
ORDOLPRT FDPRT ESDSEG#,I,RADJ,PADR,NL,LEN=5                      83262
         FDGOTO ORDPRTOL                                         83262
ORDPRT   FDOPT NL                                                83262
ORDPRTOL FDPRT ESDNAME,PADR                                      83262
         FDPRT ESDTYPE,HEX,PADR                                  83262
         FDPRT ESDMODE,PAD                                       91153
         FDPRT ESDADDR,HEX,RADJ                                  83262
         FDPRT ESDLEN,HEX,RADJ,LEN=8                             83262
         FDPRT *END                                              83262
ORDLRPRT FDOPT IND=31                                           GP03072
         FDROOM 19                                               83262
         FDPRT ESDADDR,HEX,RADJ,LEN=9                            83262
         FDPRT ESDNAME,PADL                                      83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
INSPUN   FDPRT 'INSERT',NL,RADJ,LEN=10                           83262
         FDPRT ESDNAME-ESDDATA(R6),8,PADL                        83262
         FDGOTO COMPUN                                           83269
ORDPUN   FDPRT '  ORDER',PADR,NL                                 83262
         FDTM  ESDADDR+2,X'FF',BM=ORDPUNX,BO=ORDPUNX             83269
         FDTM  PDS2FTB1,PDS2PAGA+PDSAOSLE,BZ=ORDPUNX,BM=ORDPUNX  83269
         FDTM  ESDADDR+1,X'0F',BM=ORDPUNX,BO=ORDPUNX             83269
         FDPRT ESDNAME,DEB                                       83262
         FDPRT '(P)'                                             83262
         FDPRT *END                                              83269
ORDPUNX  FDPRT '   '                                             83269
         FDPRT ESDNAME,DEB                                       83269
         FDPRT *END                                              83269
ORDPUNM  FDPRT ','                                               83269
         FDPRT ESDNAME,DEB                                       83269
         FDPRT *END                                              83269
ORDPUNT  FDPRT ','                                               83269
         FDPRT ESDNAME,DEB                                       83269
         FDGOTO COMPUN                                           83269
MEMISALI FDOPT NL                                                83262
         FDREPT 10,C'*'      FRAME                               83262
         FDPRT ' REQUESTED MODULE'                               83262
         FDPRT PDS2NAME,DEB,PAD                                  83262
         FDPRT 'IS AN ALIAS OF'                                  83262
         FDPRT MEMNAME,DEB,PADL                                  83262
         FDPRT ', WHICH WILL BE PROCESSED INSTEAD. '             83262
         FDREPT 10,C'*'      FRAME                               83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
SUMTITLE FDOPT NL,CC=C'#'  SET AUTOMATIC PAGE NUMBERING, ETC.    83262
         FDPRT 'LOADMAPS  ***  SUMMARY AND ERROR LISTING'        83262
         FDPRT *END                                              83262
PRTTITLE FDOPT NL,CC=C'#'  AUTOMATIC NUMBERING                   83262
         FDSPACE 10          INDENT A BIT                        83262
         FDPRT 'LOADMAPS  ***  LOAD-MODULE MAPPING AND CONTROL INFORMAT*
               ION'                                              83262
         FDPRT *END                                              83262
SUBTITLE FDPRT MEMNAME                                           83262
         FDSPACE 5                                               83262
         FDPRT CURDSN,DEB,PAD                                    83262
         FDPRT 'ON',PAD                                          83262
         FDPRT CURVOL,DEB,PAD                                    83262
         FDPRT '('                                               83262
         FDPRT CURUNIT,DEB                                       83262
         FDPRT 'ON',PAD                                          83262
         FDPRT CURDEV#                                          GP03072
         FDPRT ')'                                               83262
NULTITLE FDPRT ' '                                               83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
NODKWARN FDPRT '  DECK OPTION NOT USED; NO CARDS WILL BE PUNCHED',NL
         FDPRT *END                                              83262
         DROP  R3                                               GP03072
         EJECT
***** CONSTANTS, ETC. *****
         SPACE
RETCODE  DC    H'16'               RETURN CODE
HUNDRED  DC    F'100'
STORESVD DC    A(12*1024)                                        83262
COREWANT DC    A(4*1024,128*1024)                                83262
COREGOT  DC    2F'0'
PATBLDL  DC    H'1,78'  1/2  CONSTANTS FOR BLDL                  83262
BLANKS   DC    CL8' '   2/2                                      83262
EBCDIC   DC    C'0123456789ABCDEF'
EDITSEG# DC    X'40202020'                                       83262
PATTERN  DC    X'40202020'                                       83262
HICOMP   DS    H
         SPACE
***** ALLOCATION TABLE *****
         SPACE
         PUSH  USING                                            GP03072
         DROP  ,                                                GP03072
         USING SAVE,R0             -- FOR S-TYPE CONSTANTS       83262
         SPACE
ALLOCTAB DC    H'25,768,4096',SL2(SEGBFBEG,ENDSGBF)  SEGTAB      83262
ALLOC2   EQU   *                                                 83262
ALLOCLST EQU   *-(ALLOC2-ALLOCTAB)                               83262
         DC    H'75,5800,32767',SL2(CESDADR,CESDEND)  CESD BUFFER
         POP   USING                                            GP03072
         SPACE 2
         TITLE 'L O A D M A P S  ***  DIRECTORY EXPANSION'       83262
@IEBPDS  SUBENT ,                                                83262
         XC    CURAPF,CURAPF  CLEAR APF CODE                     83262
         SLR   R15,R15                                           83262
         ICM   R15,3,PDOOAPF  APF PRESENT ?                      83262
         BZ    NOSKIP        NO                                  83262
         LA    R1,PDS2(R15)  POINT TO APF CODE                   83262
         MVC   CURAPF,0(R1)  SAVE IT                             83262
NOSKIP   LA    R1,MEMTTR     FORMAT TTR                          83262
         LA    R2,PDS2TTRP                                       83262
         BAL   R9,HEXTTR                                         83262
         TM    PDOTYPE,PDOTLKED   LKED ENTRY ?                   83262
         BZ    NOSKTDAT      NO; CHECK FOR DATA                  83262
         LA    R1,3                                              83262
         LA    R3,MEMENT     SHOW ENTRY ADDRESS                  83262
         LA    R4,PDS2EPA                                        83262
         BAL   R9,HEXCNVT                                        83262
NOSKTDAT BAL   R9,ALOUT      PRINT MEMBER AND ALIAS LINES        83262
         CLI   PDOUDLEN,2    NONE, SHORT, OR SSI ONLY ?          83262
         BNH   PRTINC        YES; DONE WITH THIS MEMBER          83262
         TM    PDOTYPE,PDOTLKED  LKED ENTRY ?                    83262
         BZ    DODATA        NO; FORMAT THE DATA                 83262
         SPACE 1                                                 83262
*        FORMAT THE LKED DATA IN HEX                             83262
*                                                                83262
         BAL   R14,MESSCLR   CLEAR THE MESSAGE/WORK AREA         83269
         LA    R3,MESSAGE    POINT TO LKED OUTPUT DATA           83262
         LA    R4,PDS2USRD   POINT TO INPUT DATA                 83262
         LA    R14,FORLCOM   GET COMMON FORMATTING LIST          83262
         BAL   R8,HEXLIST    FORMAT THE COMMON AREA              83262
         LA    R3,1(,R3)     SPACE BETWEEN LISTS                 83262
         SPACE 1                                                 83262
         TM    PDOFLAGS,PDOFSCTR  SCATTER DATA ?                 83262
         BZ    LFORNSCT      NO                                  83262
         LA    R14,FORLSCTR  SET SCATTER FORMATTING LIST         83262
         BAL   R8,HEXLIST                                        83262
         LA    R3,1(,R3)     SPACE BETWEEN LISTS                 83262
         SPACE 1                                                 83262
LFORNSCT TM    PDOFLAGS,PDOFREAL  REAL MEMBER NAME PRESENT ?     83262
         BZ    LFORNMEM      NO                                  83262
         PRTLIST PUTREAL     DISPLAY MEMBER NAME OF THIS 'ALIAS' 83262
         LA    R14,FORLREAL  SET EPA/NAME MAIN MEMBER            83262
         BAL   R8,HEXLIST                                        83262
         LA    R3,1(,R3)     SPACE BETWEEN LISTS                 83262
         SPACE 1                                                 83262
LFORNMEM TM    PDOFLAGS,PDOFSSI  SSI PRESENT ?                   83262
         BZ    LFORNSSI      NO                                  83262
         LA    R14,FORLSSIE  SET FOR SSI DATA ON EVEN BOUNDARY   83262
         LR    R8,R4         COPY CURRENT INPUT ADDRESS          83262
         SRL   R8,1                                              83262
         SLL   R8,1          TRUNCATE                            83262
         CR    R8,R4         EVEN ADDRESS ?                      83262
         BE    LFORYSSI      YES; DO IT                          83262
         BCTR  R14,0         BACKSPACE TO ODD SSI LIST           83262
LFORYSSI BAL   R8,HEXLIST                                        83262
         LA    R3,1(,R3)     SPACE BETWEEN LISTS                 83262
         SPACE 1                                                 83262
LFORNSSI TM    PDOFLAGS,PDOFAPF   APF DATA ?                     83262
         BZ    LFORNAPF      NO                                  83262
         LA    R14,FORLAPF   FORMAT APF BYTES                    83262
         BAL   R8,HEXLIST                                        83262
         LA    R3,1(,R3)     SPACE BETWEEN LISTS                 83262
         SPACE 1                                                 83262
LFORNAPF PRTLIST PUTLKED2    PRINT THE SECOND LINE               83262
         SPACE 2                                                 83262
*        THIS SECTION OF CODE REORDERS THE ATTRIBUTE BITS INTO A 83262
*        PREFERRED SEQUENCE, THEN PRINTS EITHER THE ATTRIBUTE OR 83262
*        ITS NEGATION (IF PRESENT).                              83262
*                                                                83262
         BAL   R14,MESSCLR   CLEAN UP                            83269
         LH    R1,PDS2ATR    GET PRESENT ATTRIBUTES              83262
         SLL   R1,15         MAKE HIGH BIT NEXT TO SIGN          83262
         LA    R2,16         SIXTEEN ATTRIBUTES TO DO            83262
         OR    R1,R2         FORCE A LOW BIT ON FOR BXH          83262
         XC    DB,DB         ZERO WORK AREA                      83262
         LA    R3,ATTRBITS   GET TABLE OF PREFERRED SEQUENCE BITS
SHUFFLE  BXH   R1,R1,SHUFINC   BRANCH IF BIT IS ZERO             83262
         OC    DB(2),0(R3)  ELSE SET THE ATTRIBUTE FLAG IN DIFF POSITN
SHUFINC  LA    R3,2(,R3)     POINT TO NEXT POSITION IN TABLE     83262
         BCT   R2,SHUFFLE    DO FOR ALL 16                       83262
         LH    R1,DB         GET THE RESULT                      83262
         SLL   R1,15         MAKE HIGH BIT NEXT TO SIGN          83262
         LA    R2,16         DO FOR 16 ATTRIBUTES                83262
         OR    R1,R2         FORCE LOW BIT ON FOR BXH            83262
         LA    R4,ATTRBUTE   GET TABLE OF ATTRIBUTES             83262
         SLR   R15,R15       ZERO IC REGISTER                    83262
         LA    R3,MESSAGE    GET O/P AREA                        83262
         TM    PDOFLAGS,PDOFAPF  APF OPTION ?                    83262
         BZ    OPTNAC        NO                                  83262
         CLI   CURAPF,1      AC LENGTH=1 ?                       83262
         BNE   OPTNAC        NO; IGNORE IT                       83262
         CLI   CURAPF+1,1    AC=1 ?                              83262
         BL    OPTNAC        NO                                  83262
         CLI   CURAPF+1,9    SOMETHING NEW ?                     83262
         BH    OPTNAC        NO; SKIP                            83262
         MVC   MESSAGE+2(4),=C'AC=0'  MOVE BASIC PORTION         83262
         MVN   MESSAGE+2+3(1),CURAPF+1  COMPLETE AC CODE         83262
         LA    R3,6(,R3)                                         83262
OPTNAC   TM    PDS2FTB1,PDS2PAGA  PAGE ALIGNMENT ?               83262
         BZ    OPTLOOP       NO                                  83262
         MVC   0(6,R3),=C', PAGE'  SHOW ALIGNMENT                83262
         LA    R3,6(,R3)                                         83262
OPTLOOP  BXH   R1,R1,OPTNEG    GO TO NEGATION IF BIT IS OFF      83262
         BAL   R14,OPTMOVE   BIT IS ON, PUT MESSAGE IN           83262
         BAL   R14,OPTSKIP   SKIP OVER NEGATION                  83262
         B     OPTINC                                            83262
OPTNEG   BAL   R14,OPTSKIP   SKIP OVER AFFIRMATIVE               83262
         BAL   R14,OPTMOVE   MOVE IN TEXT FOR NEGATION OF ATTRIBUTE
OPTINC   BCT   R2,OPTLOOP    DO FOR ALL ATTRIBUTES               83262
         MVI   MESSAGE,C' '  RESET FIRST COMMA                   83262
         PRTF  MESSAGE,L'MESSAGE,CC=NO   PRINT THE ATTRIBUTE LINE
         B     PRTINC                                            83262
         SPACE 2                                                 83262
*        FORMAT USER DATA FOR NON-LKED ENTRIES                   83262
*                                                                83262
DODATA   BAL   R14,MESSCLR                                       83269
         TM    PDOTYPE,PDOTDTX  IEBUPDTX FORMAT ?                83262
         BZ    DODATANX      NO                                  83262
         PRTLIST PUTDTX      FORMAT IT                           83262
         B     PRTINC        DO NEXT ENTRY                       83262
         SPACE 1                                                 83262
DODATANX TM    PDOTYPE,PDOTSPF   SPF FORMAT ?                    83262
         BZ    DODATANS      NO                                  83262
         MVC   DB(2),SPFMODTM  COPY HHMM TIME                    83262
         MVC   DB+2(2),=X'000F'  MAKE FAKE SIGN                  83262
         PRTLIST PUTSPF      HOPE FOR THE BEST ?                 83262
         B     PRTINC                                            83262
         SPACE 1                                                 83262
DODATANS LA    R4,PDS2USRD                                       83262
         LA    R3,MESSAGE                                        83262
         SLR   R1,R1                                             83262
         IC    R1,PDOUDLEN   GET DATA LENGTH IN HALFWORDS        83262
         SLL   R1,1          DOUBLE TO GET BYTE LENGTH           83262
         BAL   R9,HEXCNVT                                        83262
         SLR   R2,R2         CLEAR AGAIN                         83262
         IC    R2,PDOUDLEN   GET HALFWORD COUNT BACK             83262
         SLL   R2,2          GET BYTE COUNT FOR OUTPUT           83262
         LR    R3,R2         COPY OVER                           83262
         LA    R1,28*4       SET MAXIMUM LENGTH ON ONE LINE      83262
         CR    R2,R1         MORE THAN ONE LINE REQUIRED ?       83262
         BNH   DODATAP       NO                                  83262
         SR    R3,R1         MAKE LENGTH ON SECOND LINE          83262
         LR    R2,R1         AND LENGTH ON FIRST LINE            83262
DODATAP  PRTLIST PUTDATA     PUT THE DATA LINES                  83262
         SPACE 1                                                 83262
PRTINC   PRTSPACE 2                                              83262
         BAL   R14,MESSCLR   CLEAR PRINT LINE                    83269
         SUBEX ,                                                 83262
         SPACE 2                                                 83262
*        PRINT THE MEMBER LINE, ALIAS ENTRIES AND SET SPACING    83262
*                                                                83262
ALOUT    SERVCALL DSMEM,PDORNAME  VALID MEMBER NAME ?            83262
         BXLE  R15,R15,ALOUTM   YES; PRINT IT NORMALLY           83262
         PRTLIST PUTMEMH     ELSE DISPLAY MEMBER IN HEX          83262
         B     ALOUTN        GO TO COMMON                        83262
ALOUTM   PRTLIST PUTMEM                                          83262
ALOUTN   LA    R3,ALIASNAM-12   GET ADDRESS OF FIRST ALIAS ENTRY 83262
         LA    R4,12         SET ENTRY SIZE                      83262
         L     R5,ALIASPTR   GET LAST ENTRY ADDRESS              83262
ALOUTL   BXH   R3,R4,0(R9)   QUIT IF NONE OR NO MORE             83262
         SERVCALL DSMEM,0(R3)  VALID NAME ?                      83262
         BXLE  R15,R15,ALOUTO  YES; PRINT IT                     83262
         PRTLIST PUTALIAH   ELSE PRINT IN HEX                    83262
         B     ALOUTQ                                            83262
ALOUTO   CLI   7(R3),X'C0'   SVC NAME ?                          83262
         BNE   ALOUTP        NO                                  83262
         CLC   =C'IGC',0(R3)  REALLY ?                           83262
         BNE   ALOUTP        NO                                  83262
         MVI   7(R3),C'+'    MAKE IT PRETTY                      83262
ALOUTP   PRTLIST PUTALIAS    DISPLAY ALIAS NAMES                 83262
ALOUTQ   B     ALOUTL        DO NEXT ENTRY                       83262
         SPACE 2                                                 83262
*                                                                83262
*        CONVERT BINARY TTR TO TTTT.RR                           83262
*                                                                83262
HEXTTR   UNPK  1(7,R1),0(4,R2)                                   83262
         MVI   7(R1),C' '                                        83262
         TR    1(6,R1),HEXTAB-C'0'                               83262
         MVC   0(4,R1),1(R1)                                     83262
         MVI   4(R1),C'.'                                        83262
         BR    R9                                                83262
         SPACE 2                                                 83262
*                                                                83262
*        CALL HEXCNVT FROM LIST                                  83262
*                                                                83262
HEXLIST  SLR   R1,R1                                             83262
         IC    R1,0(,R14)                                        83262
HEXLOOP  BAL   R9,HEXCNVT                                        83262
         LA    R14,1(,R14)                                       83262
         ICM   R1,1,0(R14)   LOAD AND TEST NEXT LENGTH BYTE      83262
         BZR   R8            END OF LIST; RETURN                 83262
         LA    R3,1(,R3)                                         83262
         B     HEXLOOP                                           83262
         SPACE 2                                                 83262
*                                                                83262
*        CONVERT FROM INTERNAL HEX TO BCD HEX DATA               83262
*                                                                83262
HEXCNVT  CH    R1,H7                                             83262
         BL    HEX1                                              83262
         UNPK  0(15,R3),0(8,R4)                                  83262
         TR    0(14,R3),HEXTAB-C'0'                              83262
         LA    R3,14(,R3)                                        83262
         LA    R4,7(R4,0)                                        83262
H7       EQU   *-2                                               83262
         SH    R1,H7                                             83262
         BP    HEXCNVT                                           83262
         B     HEX2                                              83262
HEX1     LA    R2,0(R1,R1)                                       83262
         SLA   R2,4                                              83262
         LA    R2,0(R1,R2)                                       83262
         EX    R2,UNPK                                           83262
         LA    R2,0(R1,R1)                                       83262
         BCTR  R2,0                                              83262
         EX    R2,TRT                                            83262
         LA    R3,1(R2,R3)                                       83262
         LA    R4,0(R1,R4)                                       83262
HEX2     MVI   0(R3),C' '                                        83262
         BR    R9                                                83262
HEXTAB   DC    C'0123456789ABCDEF'                               83262
         SPACE 2                                                 83262
OPTMOVE  CLI   0(R4),0       IS THERE AN ATTRIBUTE IN THE TABLE ?
         BE    OPTSKIP       NO, SKIP OVER IT                    83262
         IC    R15,0(,R4)    GET LENGTH - 1 OF ATTRIBUTE         83262
         MVI   0(R3),C','    PUT SEPARATOR CHAR. INTO BUFFER     83262
         EX    R15,OPTMVC    MOVE THE ATTRIBUTE                  83262
         LA    R3,3(R3,R15)     POINT TO NEW OUTPUT AREA         83262
OPTSKIP  IC    R15,0(,R4)    GET LENGTH OF ATTR. - 1             83262
         LA    R4,2(R4,R15)     SKIP TO NEXT TABLE ENTRY         83262
         BR    R14           RETURN                              83262
OPTMVC   MVC   2(0,R3),1(R4)   MOVE LKED ATTRIBUTE FROM TABLE TO O/P
         SPACE 1                                                 83262
PUTMEMH  FDOPT NL                                                83262
         FDTM  PDS2INDC,PDS2ALIS,BZ=PUTMEMHM                     83262
         FDPRT 'ALIAS',PADR                                      83262
PUTMEMHM FD    PDORNAME,HEX,INTENSE  PRINT MEMBER NAME IN HEX    83262
         FDGOTO PUTMEMCM     GO TO COMMON                        83262
         SPACE 1                                                 83262
PUTMEM   FDOPT NL                                                83262
         FDTM  PDS2INDC,PDS2ALIS,BZ=PUTMEMNM                     83262
         FDPRT 'ALIAS',PADR                                      83262
PUTMEMNM FD    PDORNAME,INTENSE      OVERPRINT MEMBER NAME       83262
PUTMEMCM FDPRT MEMTTR,PAD    TTTT.RR OF MEMBER                   83262
         FDPRT MEMENT,PAD    (LKED) ENTRY POINT ADDRESS          83262
         FDCLI PDOUDLEN,1,BE=PUTMEMD,BL=PUTMEMB  NO SSI; SHORT DATA
         FDTM  PDOFLAGS,PDOFSSI,BZ=PUTMEMB  SKIP IF NO SSI       83262
         FDPRT 'SSI=',PADL                                       83262
         FDPRT PDORSSI       FORMAT SSI                          83262
         FDPRT *END                                              83262
PUTMEMB  FDPRT ' ',LEN=12    SPACE FOR MISSING SSI               83262
         FDPRT *END                                              83262
PUTMEMD  FDPRT 'INDC=',PADL                                      83262
         FDPRT PDS2INDC,HEX,PADR                                 83262
         FDPRT ' DATA =',PAD                                     83262
         FDPRT PDS2USRD,2,HEX,PADL                               83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTALIAS FDOPT IND=38        SET INDENTATION IF NEW LINE FORCED  83262
         FDTM  PDOTYPE,PDOTLKED,BZ=PUTALNLK  SKIP IF NOT LKED    83262
         FDPRT 9(R3),3,HEX,RADJ,LEN=9                            83262
         FD    0(R3),8,PADL,INTENSE                              83262
         FDPRT *END                                              83262
PUTALNLK FD    0(R3),8,RADJ,PADL,INTENSE,LEN=10  ALIAS NAME AND SPACES
         FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTALIAH FDOPT IND=38        SET INDENTATION IF NEW LINE FORCED  83262
         FDTM  PDOTYPE,PDOTLKED,BZ=PUTALNLH  SKIP IF NOT LKED    83262
         FDPRT 9(R3),3,HEX,RADJ,LEN=9                            83262
         FD    0(R3),8,HEX,PADL,INTENSE                          83262
         FDPRT *END                                              83262
PUTALNLH FD    0(R3),8,HEX,PADL,INTENSE  ALIAS NAME              83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTREAL  FDPRT 'ALIAS OF',RADJ,PADR,LEN=11                       83262
         FD    PDS2MNM-PDSS02(R4),L'PDS2MNM,INTENSE              83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTLKED2 FDPRT 'LENGTH=',RADJ,NL,LEN=9                           83262
         FDPRT PDS2STOR,I,PADR,RADJ,LEN=7                        83262
         FDPRT '('                                               83262
         FDPRT PDS2STOR,HEX                                      83262
         FDPRT ')',PADR                                          83262
         FDPRT ' INDC='                                          83262
         FDPRT PDS2INDC,HEX,PADR                                 83262
         FDPRT ' DATA =',PAD                                     83262
         FDPRT MESSAGE,DEB                                       83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTDATA  FDPRT 'INDC=',RADJ,NL,LEN=7                             83262
         FDPRT PDS2INDC,HEX,PADR                                 83262
         FDPRT ' DATA =',PAD                                     83262
         FDPRT MESSAGE,(R2)           VARIABLE LENGTH HEX DATA   83262
         FDOPT IND=18        SET FOR AUTO INDENTATION            83262
         FDOPT NL,CC=C'+'    REQUEST CONDITIONAL OVERPRINTING    83262
         FDPRT UNDERLIN,(R2)           MAKE MATCHING UNDERLINES  83262
         FDCLI PDOUDLEN,29,BL=PUTDATAX    QUIT IF ONLY ONE LINE  83262
         FDPRT MESSAGE+112,(R3),NL    PRINT SECOND LINE          83262
         FDOPT NL,CC=C'+'    REQUEST CONDITIONAL OVERPRINTING    83262
         FDPRT UNDERLIN,(R3)           UNDERLINE IT              83262
PUTDATAX FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTSPF   FDPRT 'SPF: VERSION',NL,RADJ,LEN=14                     83262
         FDPRT SPFVERL,I,PAD                                     83262
         FDPRT 'LEVEL'                                           83262
         FDPRT SPFMODL,I,PAD                                     83262
         FDPRT 'CREATED'                                         83262
         FDPRT SPFCRTDT,DATJ,PAD   JULIAN DATE YY.DDD            83262
         FDPRT 'MODIFIED'                                        83262
         FDPRT SPFMODDT,DATJ,PAD                                 83262
         FDPRT 'AT'                                              83262
         FDPRT DB,4,TIMD,PAD,LEN=5  TRUNCATE TO HH:MM            83262
         FDPRT 'BY'                                              83262
         FDPRT SPFUID,8,PAD  DO 8 BYTES (FOR POSS. WYLBUR USE)   83262
         FDPRT 'LINES :',RADJ,LEN=9                              83262
         FDPRT SPFINILN,I,PAD                                    83262
         FDPRT 'INITIAL,'                                        83262
         FDPRT SPFMODLN,I,PAD                                    83262
         FDPRT 'MODIFIED,'                                       83262
         FDPRT SPFCURLN,I,PAD                                    83262
         FDPRT 'CURRENT'                                         83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
PUTDTX   FDCLC PDORNAME,DTXMODNM,BNE=PUTDTXV                     83262
         FDPRT 'IEBUPDTX MODULE',PADR,RADJ,NL,LEN=17             83262
         FD    DTXMODNM,PAD,INT                                  83262
         FDPRT 'HIGH',PAD                                        83262
         FDGOTO PUTDTXCM                                         83262
PUTDTXV  FDPRT 'IEBUPDTX CHAIN ENTRY FOR',PADR,RADJ,NL,LEN=26    83262
         FD    DTXMODNM,PAD,INT                                  83262
PUTDTXCM FDPRT 'VERSION',PAD                                     83262
         FDPRT DTXVER,D,PAD,LEN=3                                83262
         FDPRT 'LIBRARY ID',PAD                                  83262
         FDPRT DTXID,PAD                                         83262
         FDPRT 'NO.',PAD                                         83262
         FDPRT DTXMODNO,D,PAD,LEN=3                              83262
         FDCLI PDOUDLEN,DTXUDLTM,BNE=PUTDTXX  SKIP IF NO TIME STAMP
         FDPRT 'UPDATED',PAD                                     83262
         FDPRT DTXTIMES,D                                        83262
PUTDTXX  FDPRT *END                                              83262
         SPACE 2                                                 83262
*        DATA                                                    83262
*                                                                83262
MVCMEM   MVC   0(0,R3),0(R4)                                     83262
UNPK     UNPK  0(0,R3),0(0,R4)                                   83262
TRT      TR    0(0,R3),HEXTAB-C'0'                               83262
FORLCOM  DC    AL1(3,1,3,1,2,3,2,3,3,0)  BASIC LKED ENTRY        83262
FORLSCTR DC    AL1(2,2,2,2,0)            SCATTER LOAD DATA       83262
FORLREAL DC    AL1(3,8,0)                MEMBER FOR ALIAS        83262
FORLSSIO DC    AL1(1)        1/2       SSI ON ODD BOUNDARY       83262
FORLSSIE DC    AL1(4,0)      2/2       SSI ON EVEN BOUNDARY      83262
FORLAPF  DC    AL1(2,0)                  APF AC CODE             83262
UNDERLIN DC    14CL8'_'      UNDERLINES AT WORD SPACING          83262
         SPACE 2                                                 83262
*        THIS TABLE IS USED TO REORDER THE LKED ATTRIBUTE BITS   83262
*                                                                83262
ATTRBITS EQU   *             TABLE POSITION IS LKED, NEW BIT GIVES SEQ
         DC    X'8000'       RENT                                83262
         DC    X'4000'       REUS                                83262
         DC    X'0800'       OVLAY                               83262
         DC    X'0400'       TESTRAN                             83262
         DC    X'0100'       LOAD ONLY                           83262
         DC    X'1000'       SCATTER LOAD                        83262
         DC    X'0080'       EXECUTABLE                          83262
         DC    X'0040'       1 BLOCK                             83262
         DC    X'0001'       NOT D.C.                            83262
         DC    X'0020'       ORG = 0                             83262
         DC    X'0010'       EP = 0                              83262
         DC    X'0008'       NO RLD                              83262
         DC    X'0004'       NO RELINK                           83262
         DC    X'0200'       TESTRAN SYMBOL TABLE                83262
         DC    X'0002'       PRODUCED BY F LEVEL                 83262
         DC    X'2000'       REFRESHABLE                         83262
         SPACE                                                   83262
*        TABLE OF LKED ATTRIBUTES AND THEIR NEGATION, IF ANY     83262
*                                                                83262
ATTRBUTE EQU   *             TABLE IN SEQ CORR. TO ATTRBITS SETTINGS
         DC    X'3',C'RENT',X'0',C' '                            83262
         DC    X'3',C'REUS',X'0',C' '                            83262
         DC    X'3',C'REFR',X'0',C' '                            83262
         DC    X'6',C'SCTR LD',X'5',C'BLK LD'                    83262
         DC    X'4',C'OVLAY',X'0',C' '                           83262
         DC    X'4',C'TESTR',X'0',C' '                           83262
         DC    X'5',C'T-SYMB',X'0',C' '                          83262
         DC    X'8',C'LOAD ONLY',X'0',C' '                       83262
         DC    X'3',C'EXEC',X'D',C'NOT EXECUTABLE'               83262
         DC    X'4',C'1 BLK',X'0',C' '                           83262
         DC    X'4',C'ORG=0',X'0',C' '                           83262
         DC    X'3',C'EP=0',X'0',C' '                            83262
         DC    X'5',C'NO RLD',X'0',C' '                          83262
         DC    X'8',C'NO RELINK',X'0',C' '                       83262
         DC    X'4',C'F-LVL',X'0',C' '                           83262
         DC    X'5',C'NOT DC',X'1',C'DC'                         83262
         TITLE '* * * DECK ROUTINE FOR OVERLAY TREE PROCESSOR. * * *'
OVLYDECK SUBENT ,                                                83262
         USING ESDDATA,R4
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*      DECK OPTION ROUTINE: TO PRODUCE A DECK FOR THE LINKAGE EDITOR  *
*       DESCRIBING THE OVERLAY STRUCTURE.                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
         L     R5,SEGBFBEG         BEGINNING OF CESD BUFFER
         LA    R3,24(,R5)          + 24 -> FIRST SEGMENT
         L     R6,CON04            INCREMENT FOR BXLE
         L     R7,SEGUSED          END OF SEGTAB BUFFER
         SR    R7,R6               - R4 FOR END LIMIT ON BXLE
         SLR   R4,R4
LINEAD   A     R4,CON01            NEXT SEGMENT
         STC   R4,3(,R3)           STORE IN SEGTAB
         BXLE  R3,R6,LINEAD
         MVC   0(2,R3),ENDTBL      END-OF-TABLE DELIMITER
         MVC   REGION#,CON01+2
         LR    R8,R6               = 4
         LA    R15,24(,R5)         BEGIN OF SEGMENT 1            83269
         LA    R2,8(,R5)          BEGIN OF REGION 1              83262
NEXTRGN  SLR   R1,R1
         ICM   R1,1,0(R2)         # OF LAST SEGMENT              84275
         BZ    ENDDECK             END OF STRUCTURE
         SLL   R1,2                X 4                           83262
         LA    R9,20(R1,R5)        -> LAST SEGMENT FOR BXLE
PUNCHPAS L     R4,CESDADR          FOR CESD
         LA    R6,LENESD           INCREMENT FOR CESD            83262
         L     R7,CESDUSED         END OF CESD
         SR    R7,R6               - 16 FOR BXLE
         LA    R1,MESSAGE+8        1ST POSITION FOR CSECT NAME
         LA    R0,MESSAGE+62       END OF INSERT CARD
         LR    R3,R1               FOR COMPARE
SEGSRCH  CLC   ESDSEG#,3(R15)      CURRENT SEGMENT #?            83269
         BNE   BXLE1
         CLI   ESDTYPE,CODESD      SD?                           83262
         BE    YESTHIS
         CLC   ESDNAME,BLKCOMM
         BE    BXLE1
         CLI   ESDTYPE,CODECM      CM?                           83262
         BNE   BXLE1
YESTHIS  MVC   1(8,R1),ESDNAME     MOVE ESD NAME TO INSERT CARD
         LA    R14,8(,R1)          FOR BCT LOOP
BCTLOOP  CLI   0(R14),C' '                                       83262
         BNE   YESYES
         BCT   R14,BCTLOOP
YESYES   LA    R1,1(,R14)          NEW END OF CARD
         CR    R1,R0               END OF CARD?
         BNH   NOPUNCH
         MVC   MESSAGE+2(6),INSMSG                               83262
         BAL   R14,PUNCHRTN
         LR    R1,R3               RE-INITIALIZE
         LA    R0,MESSAGE+62
         B     BXLE1
NOPUNCH  MVI   0(R1),C','          COMMA AFTER ESD ITEM          83262
BXLE1    BXLE  R4,R6,SEGSRCH       TO NEXT CESD ITEM
         CR    R1,R3               PUNCH INSERT CARD?
         BE    NOPUNCH2            NO.
         MVI   0(R1),C' '          BLANK TRAILING ,              83262
         MVC   MESSAGE+2(6),INSMSG                               83262
         BAL   R14,PUNCHRTN
NOPUNCH2 CLC   4(2,R15),ENDTBL     END OF SEGTAB?                83269
         BE    ENDDECK             YES; DONE.
         CR    R15,R9              END OF THIS REGION?           83269
         BE    BXLE2
         MVC   MESSAGE+1(7),OVERLAY  PRODUCE 'OVERLAY' CARD.
         SLR   R3,R3
         ICM   R3,1,4(R15)         PREVIOUS SEGMENT #            84275
         BZ    OVLYRGN       IF ZERO, USE REGION #               84275
         MVC   MESSAGE+9(4),OVLYMSG  'OVLY'
         CVD   R3,DB                                             83269
         OI    DB+7,X'0F'    FIX SIGN                            83269
         UNPK  MESSAGE+13(3),DB+6(2)                             83269
         B     PCHCALL             & PUNCH IT OUT.
OVLYRGN  MVC   MESSAGE+9(7),LASTREG  NODE PT. IS LAST REGION#
PCHCALL  BAL   R14,PUNCHRTN
BXLE2    BXLE  R15,R8,PUNCHPAS     FOR NEXT SEGMENT              83269
         LA    R2,2(,R2)                                         83262
         CLI   0(R2),X'00'        ANY SEGMENTS IN THIS REGION?   83262
         BE    ENDDECK             NO; DONE.
         LH    R3,REGION#          REGION #
         C     R3,CON04            DONE IF 4TH REGION PROC.
         BNL   ENDDECK
         A     R3,CON01            + 1
         STH   R3,REGION#
         MVC   MESSAGE+9(6),REGMSG+1  OVERLAY REGION_(REGION)
         STC   R3,MESSAGE+15
         OI    MESSAGE+15,X'F0'                                  83262
         MVC   LASTREG,MESSAGE+9   SAVE FOR USE LATER
         MVC   MESSAGE+16(8),REGMSG
         MVC   MESSAGE+1(7),OVERLAY
         BAL   R14,PUNCHRTN
         B     NEXTRGN
         SPACE 2                                                 83262
NOTODECK SUBENT ,            SECONDARY ENTRY - NOT IN OVERLAY    83262
         SPACE 1                                                 83262
ENDDECK  L     R3,ALIASPTR   GET POINTER TO LAST ALIAS STORED    83262
         LA    R2,12           ENTRY LENGTH                      83262
         LA    R4,ALIASNAM-12  GET FIRST ENTRY                   83262
NEXTALIS BXH   R4,R2,ENDALIAS  SKIP OUT IF NONE OR ALL DONE      83262
         PRTLIST ALIPRT      PRINT THE ALIAS ENTRY               83262
         BAL   R14,CARDSEQ   DECK OPTION ?                       83269
         BZ    NEXTALIS      NO; GET NEXT ENTRY                  83262
         PRTLIST ALIPUN,DEV=3  PUNCH THE CARD                    83262
         B     NEXTALIS      GET NEXT ENTRY                      83262
         SPACE 1                                                 83262
ENDALIAS TM    PDOFLAGS,PDOFSSI  SSI SUPPLIED ?                  83262
         BZ    ENDSSI        NO; SKIP                            83262
         PRTLIST SSIPRT      PRINT THE SSI                       83262
         BAL   R14,CARDSEQ   TEST DECK OPTION; UP CARD COUNT     83269
         BZ    ENDSSI        NO                                  83262
         PRTLIST SSIPUN,DEV=3  PUNCH THE CARD                    83262
ENDSSI   TM    PDOFLAGS,PDOFAPF  APF SUPPLIED ?                  83262
         BZ    ENDOTHER      NO; SKIP                            83262
         CLI   PDORAPF+L'PDORAPF-1,C'1'  KNOWN APF VALUE ?       83262
         BL    ENDOTHER      YES; OMIT AC=0                      83262
         BH    ENDOTHER      DON'T KNOW HOW TO HANDLE AC=2,3,ETC.
         PRTLIST APFPRT      PRINT THE APF                       83262
         BAL   R14,CARDSEQ   DECK OPTION ?                       83269
         BZ    ENDOTHER      NO                                  83262
         PRTLIST APFPUN,DEV=3  PUNCH THE CARD                    83262
         SPACE 1                                                 83262
ENDOTHER NC    ENTRY,ENTRY         ENTRY FOUND?                  83262
         BZ    ENTRYNOT
         PRTLIST ENTPRT      PRINT THE ENTRY CARD                83269
         BAL   R14,CARDSEQ   UP CARD SEQUENCE                    83269
         BZ    NAMECARD      NO DECK                             83269
         PRTLIST ENTPUN,DEV=3    PUNCH THE ENTRY                 83269
         B     NAMECARD
ENTRYNOT MVC   MESSAGE+18(52),=CL52'**WARNING: EP NOT FOUND, MUST BE SU*
               PPLIED BY HAND.**'
NAMECARD PRTLIST NAMPRT      PRINT THE NAME CARD                 83269
         BAL   R14,CARDSEQ   UP CARD SEQUENCE                    83269
         BZ    NAMECARX      SKIP IF NO DECK                     83269
         PRTLIST NAMPUN,DEV=3   PUNCH THE NAME CARD              83269
NAMECARX TM    OPTSW,DECK    PUNCHING A DECK ?                   83269
         BZ    ENDNAMES      NO; DONE                            83262
         L     R0,DECKSEQ    GET DECK SEQUENCE                   83262
         S     R0,=F'10000'  SUBTRACT STARTING SEQUENCE          83262
         ST    R0,DB                                             83262
         PRTLIST MEMHSUM,DEV=2                                   83262
ENDNAMES SUBEX ,              RETURN.                            83262
MEMHSUM  FDPRT ' ',LEN=10                                        83262
         FDCLC DB,ZEROES,4,BE=MEMHEMP                            83262
         FDPRT DB,4,I,DEB                                        83262
         FDGOTO MEMHCOM                                          83262
MEMHEMP  FDPRT 'NO'                                              83262
MEMHCOM  FDPRT 'CARDS PUNCHED',PADL                              83262
         FDPRT *END                                              83262
         SPACE 3
***** PUNCH INTERFACE / SEQUENCING ROUTINE *****
         SPACE
PUNCHRTN SUBENT IOSAVE                                           83269
         BAL   R14,CARDSEQ   GET NEXT CARD NUMBER                83269
         BZ    PUNCHRTX      SKIP IF NO DECK NEEDED              83269
         UNPK  MESSAGE+75(5),DB+5(3)  CONVERT SEQ # TO PRINTABLE 83269
         MVC   MESSAGE+72(4),DECKC73   AND MOVE IN NAME          83262
         PRTF  MESSAGE,80,CC=NO,DEV=3   PUNCH A CARD             83262
PUNCHRTX BAL   R14,MESSCLR                                       83269
         SUBEX IOSAVE        RETURN TO CALLER                    83269
         SPACE 1                                                 83269
CARDSEQ  LA    R0,1          GET CURRENT CARD COUNT              83269
         A     R0,DECKSEQ                                        83269
         ST    R0,DECKSEQ                                        83269
         CVD   R0,DB         CONVERT TO PACKED                   83269
         OI    DB+7,X'0F'                                        83269
         TM    OPTSW,DECK    IS DECK OPTION DESIRED ?            83269
         BR    R14           RETURN TO CALLER WITH COND. CODE    83269
         SPACE 1                                                 83269
NAMPRT   FDPRT 'NAME',NL,RADJ,LEN=5                              83269
         FDPRT MEMNAME,PADL,DEB                                  83269
         FDPRT '(R)'                                             83269
         FDPRT *END                                              83269
NAMPUN   FDPRT 'NAME',NL,RADJ,LEN=5                              83269
         FDPRT MEMNAME,DEB,PADL                                  83269
         FDPRT '(R)'                                             83269
         FDGOTO COMPUN                                           83269
         SPACE 1                                                 83269
ENTPRT   FDPRT 'ENTRY',NL,RADJ,LEN=7                             83269
         FDPRT ENTRY,PADL                                        83269
         FDPRT *END                                              83269
ENTPUN   FDPRT 'ENTRY',NL,RADJ,LEN=7                             83269
         FDPRT ENTRY,PADL                                        83269
         FDGOTO COMPUN                                           83269
         SPACE 1                                                 83262
SSIPUN   FDPRT 'SETSSI',NL,RADJ,LEN=10                           83262
         FDPRT PDORSSI,PADL                                      83262
         FDGOTO COMPUN                                           83262
SSIPRT   FDPRT 'SETSSI',NL,RADJ,LEN=10                           83262
         FDPRT PDORSSI,PADL                                      83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
APFPUN   FDPRT 'SETCODE AC(',NL,RADJ,LEN=15                      83262
         FDPRT PDORAPF+L'PDORAPF-1,1                             83262
         FDPRT ')'                                               83262
         FDGOTO COMPUN                                           83262
APFPRT   FDPRT 'SETCODE AC(',NL,RADJ,LEN=15                      83262
         FDPRT PDORAPF+L'PDORAPF-1,1                             83262
         FDPRT ')'                                               83262
         FDPRT *END                                              83262
         SPACE 1                                                 83262
ALIPUN   FDPRT 'ALIAS',NL,RADJ,LEN=10                            83262
         FDPRT 0(R4),8,PADL                                      83262
COMPUN   FDOPT SBA=(*,73)                                        83262
         FDPRT DECKC73                                           83262
         FDPRT DECKSEQ,I,RADJ,LEN=4                              83262
         FDPRT *END                                              83262
ALIPRT   FDPRT 'ALIAS',NL,RADJ,LEN=10                            83262
         FDPRT 0(R4),8,PADL                                      83262
         FDPRT *END                                              83262
         SPACE 5
***** CONSTANTS *****
         SPACE
CON01    DC    F'1'
CON04    DC    F'4'
INSMSG   DC    C'INSERT'
OVLYMSG  DC    C'OVLY'
REGMSG   DC    C'(REGION)'
BLKCOMM  DC    CL8'$BLKCOM'
OVERLAY  DC    C'OVERLAY'
ENDTBL   DC    X'FFFF'             END-OF-SEGTAB FLAG
LASTREG  DC    C'REGION#'
         SPACE 2
         DROP  R4                                                83262
         SPACE
         SPACE 3
***** SYNAD EXIT *****
         SPACE
         PUSH  USING
         DROP  ,
         USING BPAMERR,R15                                       83262
BPAMERR  SYNADAF ACSMETH=BPAM
         DROP  R15
         BALR  R12,0         DON'T TRUST ANYBODY
         USING *,R12               GET NEW BASE REGISTER...
         LR    R8,R14              SAVE RETURN ADDRESS.
         USING SAVE,R5       PASSED BY PRE-READ CODE             83262
         MVC   MESSAGE(15),=CL15'-** I/O ERROR: '
         MVC   MESSAGE+15(78),50(R1)  MOVE IN SYNAD INFORMATION
         SYNADRLS ,                RELEASE SYNAD AREA.
         OI    OPTSW,IOERR   SET PERMANENT I/O ERROR SWITCH      83262
         LR    R14,R8
         BR    R14                 GO.
         POP   USING
         SPACE 2
***** DATA CONTROL BLOCKS. *****
         SPACE
SYSPRINT PRTWORK SYSPRINT,SYSOUT,TITLE=5                         83262
SYSTERM  PRTWORK SYSTERM,SUMPRINT,TITLE=3                        83262
SYSPUNCH PUNWORK SYSPUNCH                                        83262
MODDCB   DCB   BFALN=F,BLKSIZE=1048,DDNAME=SYSLIB,DSORG=PO,MACRF=R,  * *
               RECFM=U,SYNAD=BPAMERR
         SPACE
*****    END OF IEWLIO
         TITLE '* * * OPTIONS PROCESSOR FOR OVERLAY TREE PROC. * * *'
PARMOPTS SUBENT ,                                                83262
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*    THIS ROUTINE SCANS THE OS PARM LIST (ADDRESS IN R9) FOR VALID   *
*     OPTIONS, AND PUTS A LIST IN THE PRINT BUFFER.  NAMES ARE PUT IN *
*     THE NAME BUFFER AS A COUNT FIELD FOLLOWED BY THE NAME.          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         LA    R9,0(,R9)     CLEAR THE PARM POINTER              83262
         LTR   R9,R9         ANY ?                               83262
         BZ    NONAME        NO; SKIP                            83262
         ICM   R9,7,1(R9)    ELSE LOAD PARM ADDRESS              83262
         BZ    NONAME        SKIP IF NONE                        83262
         MVI   READBFR+C',',C','                                 83262
         MVI   READBFR+C'=',C'='  MOVE , AND = TO READBFR FOR TRT
         MVI   READBFR+C' ',C','  TREAT BLANKS AS COMMAS         83262
         L     R8,BEGNMBFR         BEGIN OF NAME BUFFER
         LH    R4,0(,R9)         GET LENGTH FROM PARM. LIST     83262
         LTR   R4,R4             ZERO?                           83269
         BNP   NONAME              YEAH.
         LA    R3,2(,R9)         -> FIRST BYTE OF LIST.          83262
MOREOPT  MVC   MESSAGE(9),=CL9'-OPTIONS:'
         LA    R5,MESSAGE+10
SCANOPT  BCTR  R4,0               LENGTH - 1                     83269
         EX    R4,SCAN            SCAN LIST FOR DELIMITER        83269
         BNE   OPTFOUND            OK.
         TM    INTERN1,NMSRCH      IN NAME=X=Y OPTION?
         BO    NMGET               YEAH, GO.
         LR    R9,R4              TO FOOL PGM.                   83269
         CH    R4,=H'5'     SIX BYTES ?                          83269
         BNE   SCANNT6       NO                                  83269
         CLC   0(6,R3),NODECK  'NODECK' OPTION ?                 83269
         BE    NDECKRTN      YES                                 83269
SCANNT6  CH    R4,THREE           4-BYTE OPTION?                 83269
         BNE   INVALIDR            NO.
         CLC   0(4,R3),ADECK      DECK?                          83262
         BE    DECKRTN             YES.
         B     INVALIDR            NO; INVALID
         SPACE
OPTEXIT  SH    R5,=H'2'            - 2                           83262
         MVI   0(R5),C' '          BLANK OUT LAST COMMA          83262
         PRTF  MESSAGE,L'MESSAGE,DEV==OPTUNIT                    83262
         BAL   R14,MESSCLR                                       83269
         TM    OPTSW,NMRCVD        ANY NAME RECEIVED?
         BZ    NONAME              NO NAME.
         C     R8,ENDNMBFR         END OF NAME BUFFER?
         BH    LONGNAME            YES -- ERROR..
         ST    R8,ENDNMBFR         SAVE END-OF-NAME-BUFFER PTR.
EXIT     SUBEX ,             RETURN.                             83262
         SPACE 2
LONGNAME LA    R1,ERRPLONG                                       83269
         B     ERRPRINT
         SPACE
NONAME   LA    R1,ERRPMISS                                       83269
ERRPRINT PRTV  (R1),DEV==OPTUNIT                                 83269
         OI    RETCODE+1,16  SET ERROR CODE                      83269
         B     IEWLDONE      AND QUIT                            83262
ERRPLONG VCON '-** TOO MANY NAMES IN PARM FIELD. **'             83269
ERRPMISS VCON  '-** NO NAME=MEMBER OPTION SPECIFIED IN PARM FIELD **'
         SPACE 3
OPTFOUND LA    R7,0(,R1)     GET CLEAN HIT ADDRESS               83262
         SR    R7,R3              LENGTH                         83262
         LR    R9,R7               SAVE IN R9
         BZ    ZEROLN              LENGTH = 0: IGNORE SUCCESSIVE = OR ,
         BCTR  R7,0                FOR EX.
         TM    INTERN1,NMSRCH      AFTER NAME= ?
         BZ    CHECKOPT            NO. GO.
         CLM   R2,1,ADECK+L'ADECK-1  FOUND COMMA?                83262
         BNE   NOCOMMA             NO. GO.
         NI    INTERN1,255-NMSRCH  NOT AFTER NAME= ANY MORE.     83262
NOCOMMA  OI    OPTSW,NMRCVD        GOT NAME.
         STC   R9,0(,R8)           SAVE LENGTH
         EX    R7,MOVE2BFR         MOVE TO BUFFER.
         MVC   0(5,R5),ANAME       MOVE NAME= FOR LIST
         EX    R7,MOVE2OPT
         LA    R1,5(R9,R5)         TO PUT IN COMMA
         MVI   0(R1),C','          PUT IN COMMA                  83262
         LA    R5,7(R9,R5)         INCREMENT PTR
         LA    R8,1(R8,R9)         INCREMENT NAME POINTER
         B     TSTCNT1             & GO TO CHECK IT.
         SPACE
ZEROLN   SR    R4,R9              UPDATE                         83269
         LA    R3,1(,R3)         STUFF                           83262
         B     TSTCNT2             &  GO.
         SPACE 2
* CHECK OPTION FOUND.
CHECKOPT CH    R7,THREE            4-BYTE OPTION?
         BNE   CHECKNT3      NO                                  83269
         CLC   0(5,R3),ANAME                                     83262
         BE    NAMERTN             YES - NAME
         CLM   R2,1,ADECK+L'ADECK-1  FOUND COMMA TYPE ?          83269
         BNE   INVALIDR            NO; INVALID.                  83269
         CLC   0(4,R3),ADECK                                     83262
         BE    DECKRTN             YES - DECK
CHECKNT3 CH    R7,=H'5'      SIX BYTES ?                         83269
         BNE   INVALIDR      NO                                  83269
         CLM   R2,1,ADECK+L'ADECK-1  FOUND COMMA TYPE ?          83269
         BNE   INVALIDR            NO; INVALID.                  83269
         CLC   0(4,R3),NODECK   DECK TURN-OFF ?                  83269
         BE    NDECKRTN      YES - HIT THE DECK                  83269
INVALIDR MVC   0(8,R5),=C'INVALID,'  INVALID OPTION.
         OI    OPTUNIT,1     PRINT ON SYSPRINT TOO               83262
         LA    R5,9(,R5)           UPDATE PTR.
         B     TSTCNT1             & BRANCH
         SPACE 2
NAMERTN  OI    INTERN1,NMSRCH      NOW LOOKING FOR NAME.
         MVI   READBFR+C',',C'='   ACCEPT , AS MEMBER SEPARATOR  83262
         MVI   READBFR+C' ',C'='   ALSO BLANKS                   83262
         B     TSTCNT1
         SPACE 1                                                 83269
NDECKRTN NI    OPTSW,255-DECK   RESET DECK OPTION                83269
         MVC   0(7,R5),NODECK     DISPLAY IT                     83269
         LA    R5,L'NODECK+1(,R5)  SKIP IT                       83269
         B     TSTCNT1       TRY FOR MORE                        83269
         SPACE
DECKRTN  OI    OPTSW,DECK          DECK WANTED.
         MVC   0(5,R5),ADECK
         LA    R5,6(,R5)
TSTCNT1  SR    R4,R9              - LENGTH PROC.                 83269
         LA    R3,1(R9,R3)       UPDATE ADDRESS                  83262
TSTCNT2  LTR   R4,R4             ANYTHING LEFT?                  83269
         BNP   OPTEXIT             NO; GO.
         LA    R1,MESSAGE+L'MESSAGE-16
         CR    R5,R1               OPTIONS MSG FULL?
         BL    SCANOPT
         PRTF  MESSAGE,L'MESSAGE,DEV==OPTUNIT                    83262
         BAL   R14,MESSCLR                                       83269
         B     MOREOPT             GO RESTORE MESSAGE, ETC.
         SPACE
NMGET    NI    INTERN1,255-NMSRCH  NOT LOOKING ANY MORE          83262
         LA    R9,1(,R4)          GET LENGTH                     83269
         LR    R7,R4              LENGTH FOR EX                  83269
         LR    R4,R9              FOOL THE PROG.                 83269
         B     NOCOMMA             PROCESS THIS NAME
         SPACE 5
***** THESE INSTRUCTIONS ARE EXECUTED. *****
         SPACE
MOVE2BFR MVC   1(0,R8),0(R3)      NAME TO NAME BUFFER            83262
MOVE2OPT MVC   5(0,R5),0(R3)      NAME TO OPTION LIST            83262
SCAN     TRT   0(0,R3),READBFR    SCAN THROUGH PARM FIELD.       83262
         SPACE 3
***** CONSTANTS *****
         SPACE
THREE    DC    H'3'
NODECK   DC    0C'NODECK,',C'NO'       1/2                       83269
ADECK    DC    C'DECK,'                2/2
ANAME    DC    C'NAME='
         SPACE
         LTORG
         EJECT
***** DSECT TO DEFINE SHARED CORE. *****
         SPACE
SAVE     DSECT ,             SAVE/WORK AREA                      83262
SUBSAVE  DC    18F'0'              SAVE AREA FOR SUBROUTINES     83262
IOSAVE   DC    18F'0'              SAVE AREA FOR I/O ROUTINE
DB       DS    D                                                 83262
ZEROES   DC    D'0'          CONSTANT ZEROES                     83262
@SERVICE DS    A                                                 83262
@PRINTER DS    A                                                 83262
@INPREAD DS    A                                                 83262
@VOLREAD DS    A                                                 83262
FINDTTR  DS    XL4           TTRZ FOR FIND AND POINTS            83262
ESDPTRS  DS    0XL12         POINTERS TO STASHED ESD INFORMATION 83262
ESDPTR   DS    A             FIRST ESD ENTRY                     83262
ESDPTRL  DS    A               LENGTH OF ONE ENTRY               83262
ESDPTR2  DS    A             LAST ENTRY                          83262
ESDMODE  DS    CL4           AMODE/RMODE ABBREVIATION            91153
TRANGET  DS    2A(0)         GETMAIN FOR SCATTER/TRANSLATE       83262
WORKWORK DS    2A(0)         SCTR/TRAN SIZES                     83262
ESDSCTR  DS    A                                                 83262
ESDTAB   DS    A                                                 83262
DECKC73  DS    CL4           COLUMNS 73-76                       83262
DECKSEQ  DS    F             SEQUENCE NUMBER OF CARD PUNCHED     83262
MEMNAME  DS    CL8           NAME OF CURRENT MEMBER              83262
MEMEPA   DS    XL3           ENTRY OFFSET OF MEMBER              83262
MESSBLNK DC    C' '          BYTE FOR QUICK MESSAGE BLANKING     83262
MESSAGE  DC    CL132' '            MESSAGE FOR O/P
MSAVE    DC    CL132' '
BLKSTART EQU   *             START OF BLANKED AREA               83262
CURDSN   DC    CL44' '       CURRENT DSN                         83262
CURVOL   DC    CL6' '         -"- VOLUME SERIAL                  83262
CURDEV#  DC    CL4' '         -"- DEVICE NUMBER                 GP03072
CURUNIT  DC    CL8' '         -"- UNIT TYPE                      83262
MEMTTR   DC    CL8' '        TTTT.RR + OVERFLOW                  83262
MEMENT   DC    CL6' ',C' '   EPA + UNPK OVERFLOW                 83262
BLKLEN   EQU   *-BLKSTART    LENGTH TO BLANK                     83262
ORDCOUNT DC    H'0'          ORDER STACK COUNTER                 83269
CURAPF   DC    XL2'0'        APF (LEN/VALUE)                     83262
PARMSVNM DS    CL100         PARM NAME= LIST                     83262
BEGNMBFR DC    F'0'                BEGIN OF NAME BUFFER
ENDNMBFR DC    F'0'                END OF NAME BUFFER
CESDADR  DC    F'0'                BEGIN OF CESD BUFFER
CESDEND  DC    F'0'                END OF CESD BUFFER
CESDUSED DC    F'0'                END OF CESD BUFFER ACTUALLY USED.
RCBFEND  DC    F'0'                READ CESD BUFFER END
SEGBFBEG DC    F'0'                BEGIN ADDR OF SEGTAB
ENDSGBF  DC    F'0'                END ADDR OF SEGTAB
SEGUSED  DC    F'0'                END OF SEGTAB ACTUALLY USED
CEXTPTR  DC    F'0'
EXTPTR   DC    F'0'                EXTENSION TABLE PTR
         DC    A(0)                ADDRESS OF DEPEND WILL BE INSERTED
HSNOPRCS DC    X'00'               HIGHEST SEG # CURRENTLY PROCESSING
PSGT     DC    X'00'               PREVIOUS SEG # TEST AREA
         SPACE 2
SWITCHES DC    X'00'               BUFFER SWITCHES
BUFUSED  EQU   1                                                 83262
LINFULL  EQU   2                                                 83262
SEGIN    EQU   4                                                 83262
ERRLVL4  EQU   8                                                 83262
FRSTRCVD EQU   16                                                83262
CONLN    EQU   32                                                83262
LOOKAHED EQU   64                                                83262
SPECON   EQU   128                                               83262
DEPTEST  DC    X'00'               DEPENDENCY TEST AREA
HEXTCNT  DC    H'0'
REGION#  DC    H'1'                CURRENT REGION #
         SPACE 2
***** INTERNAL SWITCHES *****
         SPACE
INTERN1  DC    X'00'               SWITCHES 1
NMSRCH   EQU   1                                                 83262
PCFIRST  EQU   32                                                83262
NUCMOD   EQU   128           MODULE IS SCATTER-LOADED NUCLEUS    83262
OPTSW    DC    X'00'               SWITCHES 2
DECK     EQU   1                                                 83262
NMRCVD   EQU   2                                                 83262
FINISH   EQU   4                                                 83262
IOERR    EQU   128           I/O ERROR ON READ                   83262
OPTUNIT  DC    AL1(2)        UNIT FOR PARM OPTION PRINTOUT       83262
         DC    0F'0'
READBFR  DC    XL256'00'           ALSO TRT AND TR TABLE
         DC    3XL256'00'    EXTRA FOR SCATTER/TRANSLATION READS 83262
TABLLN   EQU   256           LENGTH OF TR AND TRT TABLES         83262
         SPACE
ENTRY    DC    CL8' '              ENTRY POINT SD OR LR
         PRINT &PRTMAC                                           83262
DIRBXLE  SERVPDS PFX=PDO,DSECT=NO,RETURN=YES   DIRECTORY WORK AREA
         SPACE 2
***** BLDL LIST *****
         SPACE
BLDLLIST DC    0A(0),Y(1,78) BLDL ENTRY PREFIX                   83262
         DS    XL78          ENSURE SUFFICIENT SPACE FOR LONG ENTRY
         ORG   BLDLLIST+4    REDEFINE                            83262
*        PRINT NOGEN                                             83262
         IHAPDS PDSBLDL=NO,DSECT=NO                              83262
         ORG   ,                                                 83262
         PRINT &PRTSYS                                           83262
         SPACE 1                                                 83262
         MAPPDS ,            EXPAND SPECIAL PDS MAPPINGS         83262
         SPACE
ALIASPTR DS    A             LOCATION OF NEXT AVAILABLE ALIAS NAME
ALIASNAM DS    21CL12        LOTS OF NAMES                       83262
ALIASCLR EQU   *-ALIASNAM      LENGTH TO CLEAR                   83262
SAVEEND  EQU   *                   END OF DSECT                 GP03072
         SPACE 5
***** DSECT DEFINING DCB FIELDS *****
         SPACE
         DCBD  DSORG=QS,DEVD=DA
         SPACE 1                                                 83262
CVTDSECT DSECT ,                                                 83262
         CVT   DSECT=YES                                         83262
         IHACDE ,                                                83262
MYTIOT   DSECT ,                                                GP03072
         IEFTIOT1 ,                                              83262
MYUCB    DSECT ,                                                GP03072
         IEFUCBOB ,                                              83262
         END   ,                                                 83262
