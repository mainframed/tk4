SMFDUMP  TITLE 'S M F D U M P  ***  REPLACEMENT FOR ''IFASMFDP''  ***'
*
*   This program was written for OS/360, and will also work on MVS.
*   More current systems use multiple SMF data sets, with installation
*   defined names, not handled by this program. In order to avoid
*   data loss for billable services, the data sets were password
*   protected, and this program enforced naming standards to make
*   sure we knew where the output was going. The modified version
*   removes local restrictions, but is still useful for dumping SMF
*   data without needing to specify the inactive data set.      GP12073
*
*   Most of the old and local code has been disabled, and the current
*   version dumps both MANX and MANY, or vice versa, to a DUMPOUT DD,
*   regardless of whether it is disk or tape. Output method has been
*   switched to BSAM, with RECFM=VBS, so no special processing is
*   necessary. For testing, the program will read data from TESTSMF DD
*   and leave the SMF data sets untouched. To save time, the new code
*   reblocks the output by combining blocks, not records.
*
*   NOTE THAT THE PROGRAM PERFORMS AN SMF SWITCH AND DUMPS
*   BOTH FILES.  ALL THE DATA MAY BE LOST IF THE SYSTEM
*   OR PROGRAM CRASHES AFTER THE FIRST DATA SET IS WRITTEN
*   BUT BEFORE THE PROGRAM FINISHES.
*
*   //SMFDUMP  EXEC  PGM=SMFDUMP,REGION=900K
*   //SYSPRINT DD  SYSOUT=*       MESSAGES & STATISTICS
*   //DUMPIN   DD  DISP=OLD,DSN=SYS1.MANX (EITHER, BUT NOT DUMMY)
*   //DUMPOUT  DD  DSN=GERHARD.TEST.SMF,DISP=(,CATLG),
*   //             SPACE=(CYL,(10,5)),
*   //             UNIT=SYSDA
*   //SYSUDUMP DD  SYSOUT=*
*
*---------------------------------------------------------------------*
*
*   THE MVT VERSION OF SMFDUMP HAS BEEN SAVED AS MVTSMFDP.
*   MVT  THIS PROGRAM DUMPS SMF DATA SETS TO TAPE FASTER AND
*    .   MORE CONVENIENTLY THAN IBM'S DUMP.  OUTPUT DCB
*    .   PARAMETERS HAVE A RECFM OF U; ANY PROGRAM PROCESSING
*    .   THIS TAPE AS INPUT MUST FORCE A RECFM OF VBS. BLKSIZE
*    .   AND LRECL ARE CORRECT.
*    .
*    .   IF THIS PROGRAM IS RUN AFTER BOTH DATA SETS ARE CLOSED,
*    .   A GARBAGE RECORD IS WRITTEN TO FORCE AN AUTOMATIC
*    .   SMF SWITCH.  RECORD TYPE IS 255, SIZE IS 1200 BYTES
*    .   THIS SIZE MUST BE LARGER THAN ONE SMF BUFFER.
*
*    .   THE TAPE DSN IS FORCED TO BE Z908.SMF(CPUID).DAILY(GDG)
*        OUR SYS1.PROCLIB PROCEDURE IS:
*   //SMFDUMP  PROC  CPU=BSP1,GDG=18
*   //SMFDUMP  EXEC  PGM=SMFDUMP,REGION=900K
*   //SYSUDUMP DD  SYSOUT=*
*   //MANX     DD  DISP=OLD,DSN=SYS1.MANX
*   //MANY     DD  DISP=OLD,DSN=SYS1.MANY
*   //GDGDUMMY DD  UNIT=(3400-5,,DEFER),DSN=Z908.SMF&CPU..DAILY(-&GDG),
*   //             DISP=SHR,DCB=DEN=4,LABEL=EXPDT=99364
*   //DUMPOUT  DD  UNIT=AFF=GDGDUMMY,VOL=REF=*.GDGDUMMY,DCB=DEN=4,
*   //             DISP=(,KEEP,DELETE),DSN=Z908.SMF&CPU..DAILY(+1),
*   //             LABEL=EXPDT=99364
         SPACE 2                                                GP12078
         COPY  OPTIONGB                                         GP12078
         SPACE 1                                                GP12078
         SYSPARM LIST=YES                                       GP12078
         SPACE 1
         PUNCH ' ORDER SMFDUMP(P) '    EASIER DUMP READING      GP12078
         PUNCH '  SETCODE AC(1)   '    SMCA UPDATING            GP12078
         SPACE 2
         PRINT &PRTSOR                                          GP12078
SMFDUMP  PGMHEAD ZERO31,BASE=R12,PARM=R9,BNDRY=PAGE             GP12078
         MVI   FRAMEBDW+1,FRAMELEN    RDW                       GP12078
         MVI   FRAMERDW+1,FRAMELEN-4  DATA LENGTH               GP12078
         MVI   FRAMEFLG,X'02'     SYSTEM INDICATOR              GP12078
         LA    R1,SMFJFCB    SHARED BY OUTPUT AND INPUT DCBS    GP12078
         STCM  R1,7,INEXLST+1                                   GP12078
         SERVINIT ,          SET UP SERVICES                    GP12078
         SERVLOAD @PRINTER   LOAD THE PRINT ROUTINE             GP12078
         PRTOPEN SYSPRINT,OPT=(ABEND)  ENABLE PRINTING          GP12078
         PRTOPEN CONSOLE,OPT=(NOWTO,DUMMY),DEV=2                GP12078
         PRTL  '#                         S M F D U M P',CC=ASA,TITLE=1
         L     R11,CVTPTR     GET CVT POINTER                   GP12078
         USING CVT,R11                                          GP12078
         L     R11,CVTSMCA    GET SMCA                          GP12078
         USING SMCABASE,R11                                     GP12078
         MVC   FRAMECPU,SMCASID                                 GP12078
         L     R1,SMCABSIZ   SMF BUFFER SIZE                    GP12078
         ST    R1,SMFBUFF    (HALF OF SMFPRM BUFFER SIZE)       GP12078
         STH   R1,MANDUMMY+DCBBLKSI-IHADCB  ALSO SET DCB        GP12078
         STH   R1,DUMPIN+DCBBLKSI-IHADCB    ALSO SET DCB        GP12078
*DEBUG* BANDAID INIT *********************DEBUG*********************
         SPACE 1
         TM    SMCAPSTA,SMCAPMTY  PRIMARY EMPTY ?               GP12078
         BZ    HAVEWORK      NO; DO SOMETHING                   GP12078
         TM    SMCASTA,SMCAPMTY   SECONDARY ALSO EMPTY?         GP12078
         BZ    HAVEWORK      NO; DO SOMETHING                   GP12078
         PRTDATA '*** BOTH SMF DATA SETS EMPTY ***'             GP12078
         OICC  4             SET MINOR PROBLEM                  GP13056
         B     EXITALL                                          GP13056
         SPACE 1
HAVEWORK TESTAUTH FCTN=1     AM i AUTHORIZED?                   GP12078
         BXLE  R15,R15,HAVEATIT     YES                         GP12078
         OI    OPTFLAGS,OFTEST    NOT AUTHORIZED - TEST ONLY    GP12078
 PRTDATA '*** UNAUTHORIZED INVOCATION - SMF WILL BE LEFT AS IS ***'
         SPACE 2
*---------------------------------------------------------------------*
*   OUTPUT GOES TO DDNAME TAPE. IF MISSING, WE RUN IN TEST MODE ONLY. *
*   1) SET DEFAULT SIZE OF 32760 FOR TAPE, FULL/HALF-TRACK FOR DASD.  *
*   2) GET THE TIOT ENTRY AND CHECK THE UNIT TYPE                     *
*   3) GET THE JFCB - FAIL INVALID RECFM; ACCEPT BLKSIZE= OVERRIDE    *
*   4) ALLOW JFCB/DSCB MERGE BLKSIZE OVERRIDE.                        *
*   5) FORCE RECFM=VBS, LRECL=32760                                   *
*   N.B. USE SMCA BUFFSIZ AS MINIMUM                                  *
*---------------------------------------------------------------------*
         SPACE 1
         PUSH  USING                                            GP12078
HAVEATIT LA    R3,BUFFOUT    GET TAPE OUTPUT BUFFER             GP12078
         ST    R3,@BUF       SAVE BUFFER START                  GP12078
         SERVCALL TIODD,SYSOUTDD  LOOK FOR OUTPUT               GP09207
         LTR   R2,R0         FOUND IT ?
         BZ    TAPEDDNO      NO
         USING TIOENTRY,R2   DECLARE IT                         GP09207
         SERVCALL RJFCB,SYSOUTDD  GET THE JFCB                  GP09207
         BXH   R15,R15,TAPEDDNO
         MVC   SMFJFCB(JFCBLGTH),0(R1) LOCAL COPY               GP12078
         LA    R6,DUMPOUT    SET FOR QUICK ACCESS               GP12078
         USING IHADCB,R6                                        GP12078
         CLI   JFCRECFM,0         UNSPECIFIED? -> U             GP09207
         BE    TAPERFVV
         TM    JFCRECFM,255-(DCBRECV+DCBRECBR+DCBRECSB) V(B)(S) GP09207
         BZ    TAPERFVV      NO
 PRTDATA '*** Output DD',(SYSOUTDD,DEB,PAD),'RECFM= not supported ***'
         CLI   JFCRECFM,X'C0'     RECFM=U ?                     GP09207
         BNE   PGMEXIT8      FAIL                               GP12078
         PRTDATA '*** Using RECFM=VBS instead'                  GP12078
         SPACE 1
TAPERFVV MVI   DCBRECFM,DCBRECV+DCBRECBR+DCBRECSB   FORCE VBS   GP12078
         LH    R1,=H'32760'  SET LRECL                          GP12078
         LR    R4,R1         SET RECFM=V DATA MAXIMUM           GP12078
         SR    R15,R15                                          GP12078
         ICM   R15,3,JFCBLKSI     CHECK BLOCK SIZE              GP09207
         BZ    TAPEDFLT
         MIN   R4,(R15)      USE SMALLER VALUE
TAPEDFLT ICM   R8,7,TIOEFSRT      GET UCB                       GP09207
         BZ    TAPEDDNO      NONE
         DROP  R2            DONE WITH TIOT                     GP09207
         USING UCBOB,R8      HAVE UCB                           GP09207
         CLI   UCBTBYT3,UCB3TAPE                                GP09207
         BE    TAPEDDEX      REALLY TAPE
         CLI   UCBTBYT3,UCB3DACC  DASD ?                        GP09207
         BNE   TAPENU        ELSE DEVICE TYPE UNSUPPORTED
         IC    R15,UCBTBYT4  GET DEVICE TYPE                    GP09207
         N     R15,=X'0000000F'             MASK WHAT I KNOW
         BZ    TAPENU        ?
         SLL   R15,1         CONVERT TO HALFWORD OFFSET
         LH    R1,DASDSIZE-2(R15)           GET PREFERRED VALUE
TAPEDDEX C     R1,SMFBUFF    TOO SMALL FOR MINIMUM?             GP12078
         BL    DASD2WEE      YES; REGRETS                       GP09207
         MIN   (R4),(R1)     USE SMALLER OF DEFAULT OR JFCB     GP09201
         B     TAPEDDCM      YES; PROCEES
         SPACE 1
DASD2WEE PRTDATA '*** Output DD',(SYSOUTDD,DEB,PAD),'not supported due *
               to small track size ***'                         GP09207
         B     PGMEXIT8                                         GP09207
         SPACE 1
DASDSIZE DC    H'3625,20483,4892,27998,6144,14136,14660,7294' 2311-2314
         DC    H'13030,8368,19069,17600,13030,23476,27998' 3330-3390
         SPACE 1
TAPENU PRTDATA '*** Output DD',(SYSOUTDD,DEB,PAD),'neither TAPE nor DAS*
               D - TEST mode forced ***'
         OI    OPTFLAGS,OFNULL+OFTEST    SET TEST MODE          GP12078
         OI    OPTFLAGS,OFDONE   ONLY ONE INPUT DATA SET        GP12078
         B     TAPEDDCM
TAPEDDNO PRTDATA '*** Output DD',(SYSOUTDD,DEB,PAD),'not found - runnin*
               g in TEST mode ***'
         OI    OPTFLAGS,OFNULL    SET TEST MODE
TAPEDDCM ST    R4,#BUFMAX    SAVE MAXIMUM BUFFER SIZE
         STH   R4,DCBBLKSI   FORCE OUTPUT BLOCK SIZE            GP12078
         C     R4,SMFBUFF    MINIMUM?                           GP12078
         BNL   TAPEGBLK      YES
 PRTDATA '*** Output block size',(#BUFMAX,I,PAD),'too small ***'
         B     PGMEXIT8
TAPEGBLK TM    OPTFLAGS,OFNULL    ANY OUTPUT ?                  GP12078
         BNZ   TAPESETZ      DONE WITH TAPE; BUILD SIZES        GP12078
         MVI   OCLIST,X'8F'  OPEN OUTPUT
         OPEN  ((R6),OUTPUT),MF=(E,OCLIST)  OPEN TAPE           GP12078
         TM    DCBOFLGS,DCBOFOPN  DID IT OPEN ?                 GP12078
         BNZ   TAPESETZ             YES; CONTINUE               GP12078
     PRTL  '*** Output DD won''t open - running in TEST mode ***',CC=NO
         OI    OPTFLAGS,OFNULL+OFTEST    SET TEST MODE          GP12078
         POP   USING                                            GP12078
         SPACE 1
*---------------------------------------------------------------------*
*   LOOK FOR A TESTIN DD CARD. IF SO, USE THAT, SET TEST MODE, AND    *
*   BYPASS ALL SMF/SMCA PROCESSING.                                   *
*   OTHERWISE, GET THE DUMPIN DD CARD, IDENTIFY THE SECOND DATA SET & *
*   FORCE IT INTO THE JFCB. THEN DUMP IT, TCLOSE THE OUTPUT, CLEAR IT *
*   AND PROCESS THE OTHER DATA SET (UNLESS EMPTY)                     *
*---------------------------------------------------------------------*
TAPESETZ SERVCALL TIODD,TESTIN+DCBDDNAM-IHADCB  TEST INPUT MODE GP12078
         LTR   R0,R0         FOUND IT ?                         GP12078
         BZ    TESTLIVE        NO; EITHER LIVE SMF OR ERROR     GP12078
         OI    OPTFLAGS,OFTEST    SET TEST MODE                 GP12078
         MVC   SAVEXORY,SMCAYORX   SAVE FOR SWITCH TEST         GP12078
         LA    R6,TESTIN     SET FOR TEST DD                    GP12078
         SERVCALL RJFCB,TESTIN+DCBDDNAM-IHADCB  NEED JFCB       GP09207
         BXH   R15,R15,NOINDD                                   GP12078
         MVC   SMFJFCB(JFCBLGTH),0(R1)      SAVE THE JFCB       GP12078
         OI    OPTFLAGS,OFDONE   ONLY ONE INPUT DATA SET        GP12078
         B     OPENXORY        AND OPEN IT                      GP12078
         SPACE 2
TESTLIVE SERVCALL TIODD,DUMPIN+DCBDDNAM-IHADCB  HAVE SMF DD?    GP12078
         LTR   R0,R0         FOUND IT ?                         GP12078
         BZ    NOINDD        NO
         SERVCALL RJFCB,DUMPIN+DCBDDNAM-IHADCB                  GP09207
         BXLE  R15,R15,DSNSTART
NOINDD   PRTDATA '*** Required DUMPIN DD missing ***'           GP12078
         B     PGMEXIT8                                         GP12078
         SPACE 1
*---------------------------------------------------------------------*
*    RESTART POINT FOR SECOND SMF DATA SET                            *
*---------------------------------------------------------------------*
DONFIRST OI    OPTFLAGS,OFDONE    SHOW FIRST DS DONE            GP12078
         B     DUMPTWO       (SMCA SWITCHED)                    GP12078
*---------------------------------------------------------------------*
*    START POINT FOR FIRST OR ONLY SMF INPUT                          *
*---------------------------------------------------------------------*
DSNSTART MVC   SMFJFCB(JFCBLGTH),0(R1)      SAVE THE JFCB       GP12078
DUMPTWO  MVC   JFCBDSNM,=CL44'SYS1.MANX'    FORCE MY DSN        GP12078
         XC    JFCBVOLS(5*6),JFCBVOLS  CLEAR SERIAL LIST        GP12078
         MVI   JFCBNVOL,1              SINGLE VOLUME            GP12078
         MVC   JFCBDSNM+8(1),SMCAYORX  USE ALTERNATE NAME       GP12078
         MVC   JFCBVOLS(6),SMCAADEV    COPY VOLUME SERIAL       GP12078
         MVC   SAVEXORY,SMCAYORX   SAVE FOR SWITCH TEST
         ZI    OPTFLAGS,OFEMPTY   RESET DS SKIP                 GP12078
         TM    SMCASTA,SMCAPMTY   IS THIS ONE EMPTY ?           GP12078
         BZ    NOTEMPTY             NO                          GP12078
 PRTDATA '---',(JFCBDSNM,DEB,PAD),'EMPTY; DUMP SKIPPED ---',DEV=(1,2)
         OI    OPTFLAGS,OFEMPTY   FLAG AS EMPTY                 GP12078
         B     SKIPMPTY           AND SKIP                      GP12078
         SPACE 1                                                GP12078
NOTEMPTY OI    JFCBTSDM,JFCNDSCB +JFCBVSL  JFCB MESSED WITH     GP12078
         TM    OPTFLAGS,OFINIT    SKIP INIT RECORD?             GP12078
         BNZ   INITSKIP                                         GP12078
         MVI   FRAMETYP,2   REQUEST HEADER RECORD               GP12078
         BAL   R14,SMFPUT    WRITE IT OUT                       GP12078
         OI    OPTFLAGS,OFINIT    DONE WITH INIT RECORD         GP12078
INITSKIP LA    R6,DUMPIN                                        GP12078
OPENXORY OPEN  ((R6),(INPUT)),TYPE=J,MF=(E,INOCLIST)            GP12078
         TM    DCBOFLGS-IHADCB(R6),DCBOFOPN
         BO    GETPUT
 PRTDATA '***',(JFCBDSNM,DEB,PAD),'OPEN FAILED; SKIPPED ***',DEV=(1,2)
         SERVTERM ,                                             GP12078
         ABEND 213
         TITLE 'S M F D U M P  ***  COPY THE SMF DATA SET ***'
*        GET LOCATE - STACK INTO OUTPUT BUFFER; WRITE WHEN FULL
         SPACE 1
GETPUT   L     R2,@BUF       GET OUTPUT BUFFER                  GP12078
         XC    0(8,R2),0(R2)    FORCE IT EMPTY                  GP12078
 PRTDATA 'Buffer size: Input',(SMFBUFF,I,PAD),'Out',(#BUFMAX,I,PAD)
GETLOOP  GET   (R6)          GET A BLOCK                        GP12078
         LR    R4,R1         SAVE BLOCK ADDRESS                 GP12078
         LH    R5,0(,R1)     GET BLOCK LENGTH                   GP12078
         SH    R5,=H'4'        FINAGLE BDW FOR COMBINE          GP12078
         BNP   GETLOOP           HUH?                           GP12078
         INC   #GETIN        COUNT BLOCKS READ                  GP12078
         L     R2,@BUF       GET BUFFER START BACK              GP12078
         LH    R3,0(,R2)     GET CURRENT LENGTH                 GP12078
         LTR   R3,R3         EMPTY ?                            GP12078
         BNP   NEWBUFF         YES; JUST SAVE                   GP12078
         LA    R15,0(R3,R5)  COMBINED LENGTH                    GP12078
         C     R15,#BUFMAX   WILL IT FIT ?                      GP12078
         BH    NEWBLOCK        NO; WRITE OLD BLOCK              GP12078
         LA    R0,0(R3,R2)   NEXT MOVE POSITION                 GP12078
         STH   R15,0(,R2)    NEW BUFFER LENGTH                  GP12078
         LA    R4,4(,R4)     SOURCE DATA                        GP12078
         LR    R1,R5         LENGTH TO MOVE                     GP12078
         MVCL  R0,R4         MOVE DATA SANS BDW                 GP12078
         B     GETLOOP       READ ANOTHER                       GP12078
         SPACE 1
NEWBLOCK BAL   R9,TAPEOUT    WRITE BLOCK                        GP12078
         XC    0(8,R2),0(R2) CLEAR OLD LENGTH                   GP12078
NEWBUFF  LA    R5,4(,R5)     GET LENGTH WITH BDW                GP12078
         L     R2,@BUF       BUFFER START                       GP12078
         LR    R3,R5         FULL LENGTH                        GP12078
         MVCL  R2,R4         SAVE INPUT BLOCK                   GP12078
         B     GETLOOP       GO AGAIN                           GP12078
         SPACE 1
EODADX   L     R2,@BUF       GET BUFFER START BACK              GP12078
         LH    R3,0(,R2)     GET CURRENT LENGTH                 GP12078
         LTR   R3,R3         ANY DATA IN BUFFER ?               GP12078
         BZ    EODADY          NO; SKIP LAST WRITE              GP12078
         BAL   R9,TAPEOUT    WRITE BLOCK                        GP12078
         XC    0(8,R2),0(R2) CLEAR OLD LENGTH                   GP12078
         SPACE 1
EODADY   CLOSE MF=(E,INOCLIST)                                  GP12078
         FREEPOOL ((R6))
         TM    OPTFLAGS,OFTEST+OFNULL  STAY SAFE ?              GP12078
         BNZ   SHOWSTAT                                         GP12078
         LA    R6,MANDUMMY                                      GP12078
         OPEN  ((R6),(OUTPUT)),TYPE=J                           GP12078
         CLOSE ((R6))                                           GP12078
         FREEPOOL ((R6))                                        GP12078
         MODESET KEY=ZERO    ALLOW SMCA UPDATE                  GP12078
         CLC   SAVEXORY,SMCAYORX  STILL THE SAME DS ?           GP12078
         BNE   SKIPSMCA      NO                                 GP12078
         OI    SMCASTA,SMCAPMTY   SHOW IT'S BEEN EMPTIED        GP12078
SKIPSMCA MODESET KEY=NZERO                                      GP12078
  PRTDATA '*** SMFDUMP ***',(JFCBDSNM,DEB,PAD),'DUMPED && INITIALIZED',*
               DEV=(1,2)                                        GP12078
SKIPSWIT TM    OPTFLAGS,OFSWIT    SKIP SWITCHING?               GP12078
         BNZ   DONEONCE             YES                         GP12078
         CLOSE DUMPOUT,TYPE=T
         BAL   R9,CATGDG     CATALOG THE TAPE                    79219
         OI    OPTFLAGS,OFNOCAT  ONLY ONCE                      GP12078
         SPACE 2
SKIPMPTY MODESET KEY=ZERO                                       GP12049
         CLC   SMCAYORX,SAVEXORY
         BNE   NOMGCR        SWITCHED BY ITSELF
         TM    SMCASTA,SMCAPNAV  AVAILABLE ?                    GP12078
         BZ    DOMGCR         YES - ISSUE SWITCH
         NI    SMCASTA,255-SMCAPNAV   DOES THIS WORK??          GP12078
         TM    OPTFLAGS,OFEMPTY   DID WE SKIP THIS ONE ?        GP12078
         BNZ   DOMGCR        YES; JUST SWITCH                   GP12078
*---------------------------------------------------------------------*
*   WRITE A RECORD > BUFFER TO FLUSH BEFORE SWITCH - IGNORE TYPE 255  *
*---------------------------------------------------------------------*
         MVI   FRAMETYP,X'FF'   MAKE A GARBAGE RECORD           GP12078
         LA    R1,FRAMERDW   WRITE DUMMY TO FORCE AUTO-SWITCH   GP12078
         L     R14,SMFBUFF   GET BUFFER SIZE                    GP12078
         LA    R14,8(,R14)   FAKE IT                            GP12078
         STH   R14,FRAMERDW  FORCE HUGE RECORD                  GP12078
         SMFWTM (1)          I'D RATHER WRITE THAN SWITCH
         MVC   FRAMERDW,=AL2(FRAMELEN-4)    RESTORE             GP12078
         STIMER WAIT,BINTVL==A(10*60)
         CLC   SMCAYORX,SAVEXORY
         BNE   NOMGCR
DOMGCR   LA    R0,1          MASTER CONSOLE
         LA    R1,SWITCH
         SVC   34
         MODESET KEY=NZERO                                      GP12049
         PRTDATA '*** SMFDUMP *** SWITCH SMF ISSUED',DEV=(1,2)  GP12078
         B     DONMGCR                                          GP12078
         SPACE 1
NOMGCR   MODESET KEY=NZERO                                      GP12049
DONMGCR  OI    OPTFLAGS,OFSWIT    SKIP SMF SWITCH               GP12078
         LA    R8,5
STIMER   STIMER WAIT,BINTVL==A(10*60)
         CLC   SMCAYORX,SAVEXORY
         BNE   DONEONCE                                         GP12078
         BCT   R8,STIMER
         PRTDATA '*** SMFDUMP *** SWITCH SMF FAILED',DEV=(1,2)  GP12078
         OI    OPTFLAGS,OFDONE   ONLY ONE INPUT DATA SET        GP12078
DONEONCE TM    OPTFLAGS,OFDONE    ALL DATA SETS DUMPED ?        GP12078
         BZ    DONFIRST             NOT YET                     GP12078
SHOWSTAT TM    OPTFLAGS,OFNULL    BYPASS OUTPUT ?               GP12078
         BNZ   EXITSHOW             YES                         GP12078
         MVI   FRAMETYP,3   REQUEST TRAILER RECORD              GP12078
         BAL   R14,SMFPUT                                       GP12078
         CLOSE MF=(E,OCLIST)                                    GP12078
EXITSHOW PRTLIST STATFD      SHOW FINAL COUNTS                  GP12078
         SPACE 1
EXIT     TM    OPTFLAGS,OFNOCAT+OFNULL+OFTEST  SKIP CATALOG?    GP12078
         BNZ   EXITALL                                          GP12078
         BAL   R9,CATGDG     (RE)CATALOG THE TAPE               GP12078
EXITALL  SERVTERM ,                                             GP12078
         PGMEXIT RC=RETCODE                                     GP12078
         SPACE 2
PGMEXIT8 SERVTERM ,                                             GP12078
         ABEND 8,DUMP                                           GP12078
         SPACE 3
*---------------------------------------------------------------------*
*   WRITE SMF DUMP HEADER/TRAILER RECORD                              *
*---------------------------------------------------------------------*
         SPACE 1
SMFPUT   ST    R14,DB        SAVE RETURN ADDRESS                GP12078
         TIME  BIN           RECORD TIME STAMP                  GP12078
         STCM  R0,15,FRAMETIM     BUILD TIME STAMP              GP12078
         STCM  R1,15,FRAMEDAT       AND DATE                    GP12078
         LA    R2,FRAMEBDW        GET ADDRESS AND               GP12078
         LA    R3,FRAMELEN           LENGTH OF FRAME BLOCK      GP12078
         L     R9,DB         GET RETURN ADDRESS                 GP12078
         B     TAPEOUTR      WRITE AND RETURN                   GP12078
         SPACE 3
*---------------------------------------------------------------------*
*   OUTPUT ROUTINE                                                    *
*---------------------------------------------------------------------*
TAPEOUT  L     R2,@BUF                                          GP12078
         LH    R3,0(,R2)                                        GP12078
TAPEOUTR LTR   R3,R3         VALID LENGTH ?                     GP12078
         BNP   TAPEOUTY      PROGRAM ERROR                      GP12078
         TM    OPTFLAGS,OFNULL    RUNNING IN TEST MODE ?        GP12078
         BNZ   TAPEOUTX      YES; BYPASS I/O                    GP12078
         WRITE TAPEDECB,SF,DUMPOUT,(R2),(R3)  WRITE A BIG BLOCK GP12078
         CHECK TAPEDECB          WAIT FOR COMPLETION            GP12078
TAPEOUTX INC   #PUTOUT       INCREMENT BLOCK COUNT              GP12078
TAPEOUTY BR    R9                                               GP12078
         SPACE 2
*---------------------------------------------------------------------*
*   The original MVT code cataloged the output data set and single    *
*   tape volume serial after dumping the first SMF data set, and then *
*   assumed that the entry would not need to be updated after the     *
*   second one was dumped, and that the JCL didn't conflict.          *
*   Things are much more reliable now, so I'm skipping this, and I'm  *
*   relying on the JCL DISP to catalog a good run and KEEP a bad one. *
*---------------------------------------------------------------------*
CATGDG   BR    R9            PUNT                               GP12078
*CATGDG   CATALOG GDGCAT                                          79219
         BXH   R15,R15,BADCAT
         MVC   WTOCAT+36(6),VOLSER
WTOCAT   WTO   '*** SMFDUMP *** - DUMPOUT  (000000) CATALOGED.',       *
               ROUTCDE=1,DESC=1
         BR    R9            RETURN TO CALLER OR NEXT            79219
         SPACE 2
BADCAT   MVC   BADCAT2+36(6),VOLSER                              79219
BADCAT2  WTO   '*** SMFDUMP *** - DUMPOUT  (000000) CATALOG FAILED',   *
               ROUTCDE=1,DESC=1                                  79219
         SERVTERM ,                                             GP12078
         ABEND 555,DUMP
         SPACE 1
SYSPRINT PRTWORK SYSPRINT,TITLE=3                               GP12078
CONSOLE  PRTWORK *CONSOLE    DEV=2 FOR WTOs                     GP12078
         SPACE 1
STATFD   FDPRT 'Statistics for this SMFDUMP run:',NL            GP12078
         FDPRT #GETIN,I,RADJ,NL,LEN=15                          GP12078
         FDPRT 'input blocks read',PADL                         GP12078
         FDPRT #PUTOUT,I,RADJ,NL,LEN=15                         GP12078
         FDPRT 'output blocks processed',PADL                   GP12078
         FDPRT *END                                             GP12078
         SPACE 1
         PRINT &PRTSYS                                          GP12078
         DCBD  DSORG=PS,DEVD=DA                                 GP12078
SMFDUMP  CSECT ,                                                GP12078
         EJECT ,
         PRINT &PRTSYS                                          GP12078
INOCLIST OPEN  (DUMPIN,INPUT),MF=L                              GP12078
DUMPIN   DCB   DDNAME=DUMPIN,DSORG=PS,MACRF=GL,OPTCD=C,                *
               EODAD=EODADX,RECFM=U,EXLST=INEXLST               GP12078
TESTIN   DCB   DDNAME=TESTIN,DSORG=PS,MACRF=GL,OPTCD=C,                *
               EODAD=EODADX,RECFM=U,EXLST=INEXLST               GP12078
MANDUMMY DCB   DDNAME=DUMPIN,DSORG=PS,MACRF=PM,   WRITE EOF AFTER COPY *
               RECFM=VBS,LRECL=32760,BLKSIZE=1000,EXLST=INEXLST GP12078
INEXLST  DC    0A(0),X'87',AL3(SMFJFCB-SMFJFCB)                 GP12078
         SPACE 1
OCLIST   OPEN  (DUMPOUT,OUTPUT),MF=L                            GP12078
DUMPOUT  DCB   DDNAME=DUMPOUT,DSORG=PS,MACRF=W,                        *
               RECFM=VBS,LRECL=32760,BLKSIZE=0   BLKSI FILLED IN LATER
SYSOUTDD EQU   DUMPOUT+DCBDDNAM-IHADCB,L'DCBDDNAM,C'C'          GP12078
         SPACE 2
SWITCH   VCON  'I SMF   '    OS SWITCH COMMAND                  GP12078
         SPACE 2
GDGCAT   CAMLST CAT,JFCBDSNM-JFCBDSNM,,JFCBVOLS-JFCBVOLS        GP12078
VOLUME   DC    H'1'
MASK     DC    X'00000000'   DEVTYPE MASK
VOLSER   DC    CL6' '        VOL SER
         DC    H'0'
         SPACE 2
SAVE     DSECT                                                  GP12078
DB       DC    D'0'
         SERVDEFS ,                                             GP12078
SMFBUFF  DC    F'0'          SMFPARM BUFFER SIZE                GP12078
@BUF     DS    A             BUFFER START                       GP12078
#BUFMAX  DS    F             BUFFER SIZE                        GP12078
#GETIN   DS    F             NUMBER OF GETS ISSUED              GP12078
#PUTOUT  DS    F             NUMBER OF WRITES DONE              GP12078
         SPACE 1
OPTFLAGS DS    X             OPTION/PROCESSING FLAGS            GP12078
OFAUTH   EQU   X'80'           RUNNING AUTHORIZED               GP12078
OFTEST   EQU   X'40'           RUNNING IN TEST MODE             GP12078
OFNULL   EQU   X'20'           RUNNING WITHOUT OUTPUT FILE      GP12078
OFDONE   EQU   X'10'           DON'T PROCESS SECOND FILE        GP12078
OFEMPTY  EQU   X'08'           FILE IS EMPTY - SKIPPED          GP12078
OFNOCAT  EQU   X'04'           SKIP CATALOG FOR OUTPUT          GP12078
OFSWIT   EQU   X'02'           SKIP SWITCH COMMAND              GP12078
OFINIT   EQU   X'01'           SKIP HEADER RECORD (TYPE 2)      GP12078
SAVEXORY DC    C' '                                             GP12078
         SPACE 1
SMFJFCB  DS    0F                                               GP12078
         IEFJFCBN ,          USE FOR OUTPUT, THEN SMF INPUT     GP12078
         ORG
         SPACE 1
*        SMF DUMP HEADER/TRAILER BLOCK
         DS    0D
FRAMEBDW DC    H'22'         RDW                                GP12078
         DC    H'0'          AND                                GP12078
FRAMERDW DC    H'18'         SMF SIZE                           GP12078
         DC    H'0'          COUNTS                             GP12078
FRAMEFLG DC    X'02'         SYSTEM INDICATOR                   GP12078
FRAMETYP DC    CL1' '        RECORD TYPE                        GP12078
FRAMETIM DC    CL4' '        TIME OF RECORD                     GP12078
FRAMEDAT DC    CL4' '        DATE OF RECORD                     GP12078
FRAMECPU DC    CL4' '        SYSTEM AND MODEL                   GP12078
FRAMELEN EQU   *-FRAMEBDW                                       GP12078
         DS    0D
BUFFOUT  DC    32768C' '                                        GP12078
SAVEEND  EQU   *
         SPACE 3
         PUSH  PRINT
         PRINT GEN
         IEESMCA ,
         POP   PRINT
         PRINT &PRTSYS
         CVT   DSECT=YES
MYTIOT   DSECT ,
         IEFTIOT1 ,
MYUCB    DSECT ,
         IEFUCBOB ,
         END
