LPACOMP  TITLE 'LPALIB COMPARE PROGRAM'
***********************************************************************
*                                                                     *
*                      LPACOMP                                        *
*              (FROM FILE 385 OF CBT MODS TAPE)                       *
*        JERRY LAWSON                                                 *
*        HARTFORD INSURANCE GROUP                                     *
*        690 ASYLUM AVENUE                                            *
*        HARTFORD CT. 06115                                           *
*        203-547-5000   X2960                                         *
*                                                                     *
*        THIS PROGRAM IS DESIGNED TO COMPARE TWO COPIES               *
*        OF LPALIB AND REPORT ON DIFFERENCES IN THEM.                 *
*        IT ALSO COMPARES ONE OF THE LPALIB COPIES TO LINKLIB         *
*        TO REPORT ON DUPLICATE MEMBERS. JCL IS AS FOLLOWS:           *
*              OLDLPA   - POINTS TO THE 'OLD' COPY OF LPALIB          *
*              NEWLPA   - POINTS TO THE 'NEW' COPY OF LPALIB          *
*              LINKLIB  - OPTIONAL, POINTS TO A COPY OF LINKLIB       *
*                     THAT IS COMPARED TO THE NEWLPA DD. IF NOT       *
*                      DESIRED, DUMMY THIS DD STATEMENT.
*              REPORT1  - MEMBERS IN OLDLPA THAT ARE NOT IN THE       *
*                     THE NEWLPA                                      *
*              REPORT2  - MEMBERS IN NEWLPA THAT ARE NOT IN THE       *
*                     OLDLPA                                          *
*              REPORT 3  - DUPLICATE MEMBERS BETWEEN LPALIB AND       *
*                     LINKLIB                                         *
*              REPORT4  - CHANGES IN MODULE LENGTH OF MEMBERS THAT    *
*                     OCCUR IN BOTH OLDLPA AND NEWLPA.                *
*        ALL REPORTS GIVE MODULE SIZE, INDICATE ALIAS ENTRIES,        *
*              (NO SIZE GIVEN FOR ALIASES, AND REPORT ON TOTAL        *
*              DIFFERENCES. REPORT 4 WILL SHOW THE DIFFENCE IN SIZE   *
*              OF TWO COPIES OF THE SAME MODULE, AND WILL REPORT      *
*              ON THE TOTAL SIZE DIFFERENCE OF THE MODULES LISTED.    *
*                                                                     *
*                                                                     *
*                       NOTE                                          *
*        WE ARE A JES3 SHOP, AND SO I USED THE JES3 MACRO             *
*        IATYREG FOR REGISTER EQUATES. IF YOU ARE NOT JES3,           *
*        YOU HAVE MY SYMPATHY, ALSO I SUGGEST YOU CHANGE THE          *
*        MACRO STATEMENT (NEXT TO LAST LINE OF PROGRAM)               *
*        TO SOMETHING YOU FEEL BETTER ABOUT, OR INSERT                *
*        SOME EQUATES FOR R1   EQU  1, ETC                            *
*                                                                     *
*          SAMPLE JCL FOLLOWS :                                       *
*                                                                     *
*//SYMF0099 JOB SY212ZZJWL1100A035,' ** JERRY LAWSON **',MSGCLASS=1,
*// MSGLEVEL=1,NOTIFY=       TSSY99,REGION=300K
*//*
*//*
*//*                         TSSY99.SYSTEM.CNTL(LPACOMP)
*//*
*//*
*//*
*//STEP1    EXEC PGM=LPACOMP
*//STEPLIB  DD  DSN=TECH.SY.SMPLIBN,DISP=SHR,UNIT=D,VOL=SER=SYSJN0
*//OLDLPA   DD  DSN=SYS1.LPALIB,VOL=SER=SYSR8B,UNIT=D,DISP=SHR
*//NEWLPA   DD  DSN=SYS1.LPALIB,VOL=SER=SYSRC0,UNIT=D,DISP=SHR
*//LINKLIB  DD  DSN=SYS1.LINKLIB,VOL=SER=SYSRC0,UNIT=D,DISP=SHR
*//REPORT1  DD  SYSOUT=*
*//REPORT2  DD  SYSOUT=*
*//REPORT3  DD  SYSOUT=*
*//REPORT4  DD  SYSOUT=*
*//SYSUDUMP DD  SYSOUT=*
*//
*                                                                     *
***********************************************************************
         PRINT NOGEN         ***SAVE A TREE***                   89160
LPACOMP  START 0
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING LPACOMP,R12
*        IATYMOD BR=YES,LEVEL=R1.2
         LA    R11,SAVE
         ST    R13,SAVE+4
         ST    R11,8(R13)
         LR    R13,R11
         OPEN  MF=(E,OPENLIST)  OPEN ALL DCBS                    89160
         BAL   R10,GETOLPA         READ FIRST OLD LPA MEMBER
         BAL   R10,GETNLPA         READ FIRST NEW LPA MEMBER
         BAL   R10,GETLINK         READ FIRST LINKLIB MEMBER
         EJECT
COMPLPA  EQU   *
         CLC   0(8,R4),0(R2)       NEWLPA = OLDLPA?
         BH    OLDLPA              NEW HIGHER THAN OLD - DO OLD
         BL    NEWLPA              NEW LOWER THAN OLD - DO NEW
         CLI   0(R4),X'FF'         EQUAL - THEN LAST VALID MEMBER?
         BE    EOF                 YES - THEN WE'RE DONE
         TM    11(R2),X'80'        OLD LPA AN ALIAS?
         BO    LINKCHK             YES - BYPASS THIS FUN
         TM    11(R4),X'80'        NEW LPA AN ALIAS?
         BO    LINKCHK             YES - DISREGARD OLD
         CLC   22(3,R2),22(R4)     LENGTHS EQUAL?
         BE    LINKCHK             YES - THEN WE DONT WANT THIS GUY
         MVC   OMEM,0(R2)          NO - THEN WRITE OUT - GET NAME
         UNPK  OLENT(7),22(4,R2)   GET OLD LENGTH
         TR    OLENT+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   OLENT+6,C','        INSERT COMMA IN MESSAGE
         UNPK  NLENT(7),22(4,R4)   GET NEW LENGTH
         TR    NLENT+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   NLENT+6,C' '        CLEAR OUT THE JUNK
         CP    DLC,=P'0'           ANYTHING WRITTEN YET?
         BE    DHDR                NO - GO WRITE HEADERS
         CP    DLC,=P'58'          WHAT ABOUT A FULL PAGE?
         BH    DHDR                YES - THEN GO WRITE IT
LINE     EQU   *
         PUT   OUTDCB4,DUPMSG      WRITE OUT DATA LINE
         AP    DLC,TWO             ADD TO LINE COUNT
         XR    R8,R8               CLEAR WORK
         XR    R11,R11                        REGISTERS
         ICM   R11,7,22(R4)        GET NEW LPA LENGTH
         ICM   R8,7,22(R2)         GET OLD LPA LENGTH
         SR    R11,R8              CALCULATE GROWTH
         L     R8,TOTDIFF          GET SIZE CHANGE TO DATE
         AR    R8,R11              CALCULATE NEW TOTAL CHANGE
         ST    R8,TOTDIFF          SAVE FOR LATER
         B     LINKCHK             ON WITH THE SHOW
DHDR     EQU   *
         PUT   OUTDCB4,DUPHDR      WRITE HEADER MSG
         ZAP   DLC,TWO             RESET LINE COUNT
         B     LINE                GO WRITE DATA LINE
         SPACE 2
LINKCHK  EQU   *
         BAL   R9,LINKCOMP         NO - THEN SEE IF IT IS IN LINKLIB
         BAL   R9,OLPALOOP         GET NEXT OLD LPA MEMBER
         BAL   R9,NLPALOOP         GET NEXT NEW LPA MEMBER
         B     COMPLPA             BACK AND DO IT AGAIN
         SPACE 2
OLDLPA   EQU   *
         CP    OLDLC,=P'0'         ANYTHING WRITTEN YET
         BE    OLDHDR              NO - GO WRITE HDR
         CP    OLDLC,=P'58'        PAGE FULL?
         BNH   OLDOK               NO - THEN GO WRITE DATALINE
OLDHDR   EQU   *
         PUT   OUTDCB1,OHDR        WRITE THE HEADER
         ZAP   OLDLC,TWO           INITIALIZE THE COUNTER
OLDOK    EQU   *
         MVC   DATA+0(8),0(R2)     MOVE IN THE DATA
         TM    11(R2),X'80'        IS THIS AN ALIAS?
         BO    OALIAS              YES - SKIP LENGTH PRINT
         TM    30(R2),X'80'        MEMBER PROCESSED BY IEWL?
         BNO   OLDPUT              NO - THEN DATA QUESTIONABLE - SKIP
         UNPK  LENGTH(7),22(4,R2)  CHANGE DATA FORMAT
         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   LENGTH+6,C' '       CLEAR OUT THE LAST BYTE OF TRASH
         L     R8,OLEN             GET TOTAL LENGTH TO DATE
         XR    R11,R11             CLEAR WORK REG
         ICM   R11,7,22(R2)        GET LENGTH THIS MODULE
         AR    R8,R11              ADD TO TOTAL
         ST    R8,OLEN             SAVE UPDATED LENGTH
         B     OLDPUT              BRANCH AROUND ALIAS FLAG
OALIAS   EQU   *
         MVC   ALIAS,=C'ALIAS'     SHOW THAT THIS IS AN ALIAS
OLDPUT   EQU   *
         PUT   OUTDCB1,DATALINE    WRITE OUT THE OFFENDER
         MVC   ALIAS,=C'     '     UNCONDITIONALLY CLEAR THE FIELD
         MVC   LENGTH,=C'       '  UNCONDITIONALLY CLEAR THE FIELD
         AP    OLDLC,TWO           ADD TO THE LINE COUNT
         BAL   R9,OLPALOOP         POINT TO NEXT OLD LPA MEMBER
         B     COMPLPA             BACK AND TRY AGAIN
         SPACE 2
NEWLPA   EQU   *
         CP    NEWLC,=P'0'         ANYTHING WRITTEN YET?
         BE    NEWHDR              NO - THEN GO WRITE THE HDR
         CP    NEWLC,=P'58'        IS THE PAGE FULL?
         BNH   NEWOK               NO - SKIP HDR PUT
NEWHDR   EQU   *
         PUT   OUTDCB2,NHDR        WRITE THE HEADER
         ZAP   NEWLC,TWO           INITIALIZE THE COUNTER
NEWOK    EQU   *
         MVC   DATA+0(8),0(R4)     MOVE IN THE DATA
         TM    11(R4),X'80'        IS THIS AN ALIAS?
         BO    NALIAS              YES - THEN GO FLAG AS SUCH
         TM    30(R4),X'80'        MEMBER CREATED BY IEWL?
         BNO   NEWPUT              NO - SKIP LENGTH CALC
         UNPK  LENGTH(7),22(4,R4)  CHANGE FORMAT
         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   LENGTH+6,C' '       CLEAR OUT TRASH BYTE
         L     R8,NLEN             GET TOTAL LENGTH TO DATE
         XR    R11,R11             CLEAR WORK REG
         ICM   R11,7,22(R4)        GET LENGTH THIS MEMBER
         AR    R8,R11              CALCULATE NEW TOTAL LENGTH
         ST    R8,NLEN             SAVE IT
         B     NEWPUT              BRANCH AROUND ALIAS STUFF
NALIAS   EQU   *
         MVC   ALIAS,=C'ALIAS'     INDICATE AN ALIAS
NEWPUT   EQU   *
         PUT   OUTDCB2,DATALINE    WRITE OUT THE OFFENDER
         MVC   ALIAS,=C'     '     CLEAR IT OUT EITHER WAY
         MVC   LENGTH,=C'       '  CLEAR IT OUT EITHER WAY
         AP    NEWLC,TWO           ADD TO THE LINE COUNT
         BAL   R9,LINKCOMP         GO CHECK AGAINST LINKLIB
         BAL   R9,NLPALOOP         GO GET NEXT NEW LPA MEMBER
         B     COMPLPA             BACK TO THE HEAD
         TITLE 'SUBROUTINES AND MORE SUBROUTINES'
OLPALOOP EQU   *
         CLI   0(R2),X'FF'         LAST VALID DIRECTORY ENTRY?
         BE    OLOOPEND            YES - LEAVE THE SCENE
         LA    R2,11(R2)           POINT TO USER HALFWORD INFO
         SH    R3,=H'12'           SUBTRACT LENGTH OF BASE ENTRY
         IC    R11,0(R2)           INSERT USER HALFWORD DATA
         N     R11,=X'0000001F'    TURN OFF ALL BUT LAST 5 BITS
         SLA   R11,1                MULTIPLY BY 2
         SR    R3,R11              SUBTRACT LENGTH OF HALFWORDS
         LA    R2,1(R2)            POINT TO BEGINNING OF USER DATA
         AR    R2,R11              SKIP OVER USER DATA
         C     R3,=F'0'            END OF BLOCK?
         BH    OLOOPEND            NO - ON TO THE RETURN
         BAL   R10,GETOLPA         YES - GO GET NEXT BLOCK
OLOOPEND EQU   *
         BR    R9                  RETURN TO CALLER
         SPACE 2
GETOLPA  EQU   *
         GET   INDCB1
         LR    R2,R1               SAVE BUFFER POINTER
         LH    R3,0(R2)            LOAD LENGTH OF THIS DIR. BLOCK
         LA    R2,2(R2)            POINT TO FIRST ENTRY
         SH    R3,=H'2'            SUBTRACT LENGTH OF LENGTH
         BR    R10                 RETURN TO CALLER
         SPACE 2
NLPALOOP EQU   *
         CLI   0(R4),X'FF'         LAST GOOD MEMBER?
         BE    NLOOPEND            YES - THEN SKIP ALL THIS JUNK
         LA    R4,11(R4)           NO - THEN POINT TO USER HALFWORDS
         SH    R5,=H'12'           SUBTRACT LENGTH OF BASE ENTRY
         IC    R11,0(R4)           INSERT USER HALFWORD DATA
         N     R11,=X'0000001F'    CLEAR OUT THE EXTRAS
         SLA   R11,1               MULTIPLY BY 2
         SR    R5,R11              SUBTRACT LENGTH OF HALFWORDS
         LA    R4,1(R4)            POINT TO BEGINNING OF USER DATA
         AR    R4,R11              SKIP OVER USER HALFWORDS
         C     R5,=F'0'            ANYTHING LEFT IN BLOCK?
         BH    NLOOPEND            YES - THEN OFF TO THE RETURN
         BAL   R10,GETNLPA         NO - THEN GET NEW BLOCK
NLOOPEND EQU   *
         BR    R9                  RETURN TO CALLER
         SPACE 2
GETNLPA  EQU   *
         GET   INDCB2              GET NEXT BLOCK
         LR    R4,R1               POINT TO BEGINNING OF BLOCK
         LH    R5,0(R4)            GET LENGTH OF BLOCK
         LA    R4,2(R4)            POINT TO FIRST MEMBER
         SH    R5,=H'2'            SUBTRACT LENGTH OF LENGTH
         BR    R10                 RETURN TO CALLER
         SPACE 2
LINKLOOP EQU   *
         CLI   0(R6),X'FF'         LAST GOOD MEMBER?
         BE    LINKEND             YES - THEN SKIP ALL THE FUN
         TM    FLAG1,EOFLINK       EOF ON LINKLIB?
         BO    LINKEND             SKIP THE PARTY
         LA    R6,11(R6)           NO - THEN POINT TO USER INFO
         SH    R7,=H'12'           SUBTRACT LENGTH OF BASE ENTRY
         IC    R11,0(R6)           GET USER HALFWORD DATA
         N     R11,=X'0000001F'    TURN OFF ALL THE JUNK
         SLA   R11,1               MULTIPLY BY 2
         SR    R7,R11              SUBTRACT LENGTH OF USER HALFWORDS
         LA    R6,1(R6)            POINT TO THE USER HALFWORDS
         AR    R6,R11              SKIP OVER THE USER DATA
         C     R7,=F'0'            ANYTHING LEFT IN THIS BLOCK?
         BH    LINKEND             YES - THEN RETURN TO CALLER
         BAL   R10,GETLINK         NO - THEN GET ANOTHER BLOCK
LINKEND  EQU   *
         BR    R9                  RETURN TO CALLER
         SPACE 2
GETLINK  EQU   *
         GET   INDCB3
         LR    R6,R1               SAVE BUFFER ADDRESS
         LH    R7,0(R6)            GET LENGTH OF BUFFER
         LA    R6,2(R6)            POINT TO FIRST ENTRY
         SH    R7,=H'2'            SUBTRACT LENGTH OF LENGTH
         BR    R10                 RETURN TO CALLER
         SPACE 2
LINKCOMP EQU   *
         CLC   0(8,R4),0(R6)       MEMBER IN LINKLIB?
         BL    LINKCEND            LOW = NO, GOOD - THEN GO TO RETURN
         BH    LINKNEXT            HIGH = ? - GET NEXT LINK MEMBER
         BAL   R10,LINKPUT         MATCH - TELL THE WORLD
         B     LINKEND             BACK TO CALLER
LINKNEXT EQU   *
         LR    R8,R9               SAVE RETURN REGISTER
         BAL   R9,LINKLOOP         GO GET NEXT MEMBER
         LR    R9,R8               RESTORE RETURN REGISTER
         TM    FLAG1,EOFLINK       EOF ON LINKLIB?
         BO    LINKCEND            SKIP THE PARTY
         B     LINKCOMP            BACK TO TOP OF SUBROUTINE
LINKCEND EQU   *
         BR    R9                  RETURN TO CALLER
         SPACE 2
LINKPUT  EQU   *
         CP    LINKLC,=P'0'        ANYTHING WRITTEN YET?
         BE    LINKHDR             NO - THEN GO WRITE HDR
         CP    LINKLC,=P'58'       PAGE FULL?
         BNH   LINKOK              NO - THEN GO WRITE DATA
LINKHDR  EQU   *
         PUT   OUTDCB3,LHDR        WRITE THE HEADER
         ZAP   LINKLC,TWO          INITIALIZE THE COUNTER
LINKOK   EQU   *
         MVC   DATA+0(8),0(R6)     MOVE IN MEMBER NAME
         TM    11(R6),X'80'        IS THIS AN ALIAS?
         BO    LALIAS              YES - THEN GO FLAG AS SUCH
         TM    30(R6),X'80'        MEMBER CREATED BY IEWL?
         BNO   LINKPUTL            NO - SKIP LENGTH CALC
         UNPK  LENGTH(7),22(4,R6)  CHANGE FORMAT
         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   LENGTH+6,C' '       CLEAR OUT TRASH BYTE
         L     R8,LLEN             GET TOTAL LENGTH TO DATE
         XR    R11,R11             CLEAR WORK REG
         ICM   R11,7,22(R6)        GET LENGTH THIS MEMBER
         AR    R8,R11              CALCULATE NEW TOTAL LENGTH
         ST    R8,LLEN             SAVE IT
         B     LINKPUTL            BRANCH AROUND ALIAS STUFF
LALIAS   EQU   *
         MVC   ALIAS,=C'ALIAS'     YES - INDICATE ALIAS
LINKPUTL EQU   *
         PUT   OUTDCB3,DATALINE    WRITE OUT THE DATA
         MVC   ALIAS,=C'     '     CLEAR THE FIELD ALWAYS
         MVC   LENGTH,=C'       '  CLEAR THE FIELD ALWAYS
         AP    LINKLC,TWO          ADD TO LINE COUNTER
         BR    R10                 RETURN TO CALLER
         EJECT
LINKEOF  EQU   *
         UNPK  LENGTH(7),LLEN+1(4) CHANGE FORMATS
         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   LENGTH+6,C' '       CLEAR OUT THE GARBAGE
         PUT   OUTDCB3,DATALINE
         OI    FLAG1,EOFLINK       SHOW EOF/NULLFILE
         BR    R10                 RETURN TO CALLER
OLPAEOF  EQU   *
NLPAEOF  EQU   *
EOF      EQU   *
         MVC   DATA+0(14),=C'TOTAL LENGTH =' INSERT TITLE
         UNPK  LENGTH(7),OLEN+1(4) CHANGE FORMATS
         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   LENGTH+6,C' '       CLEAR OUT THE GARBAGE
         PUT   OUTDCB1,DATALINE
         UNPK  LENGTH(7),NLEN+1(4) CHANGE FORMATS
         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   LENGTH+6,C' '       CLEAR OUT THE GARBAGE
         PUT   OUTDCB2,DATALINE
         TM    FLAG1,EOFLINK       HAVE WE REACHED EOF ON LINKLIB?
         BO    LINKDONE            YES - BRANCH AROUND BAL
         BAL   R10,LINKEOF         GO WRITE OUT LAST LINE
LINKDONE EQU   *
         CP    DLC,=P'0'           ANY LENGTH CHANGES?
         BNE   HDROK               YES - SKIP HEADER WRITE
         PUT   OUTDCB4,DUPHDR
HDROK    EQU   *
         L     R8,TOTDIFF          GET TOTAL LENGTH DIFFERENCE
         C     R8,=F'0'            IS NET CHANGE NEGATIVE?
         BNL   POS                 NO - BRANCH AROUND SIGN CHANGE
         MH    R8,=H'-1'           FORCE SIGN CHANGE
         MVI   SIGN+0,C'-'         INSERT MINUS SIGN
         ST    R8,TOTDIFF          REPLACE WITH POSITIVE NUMBER
POS      EQU   *
         UNPK  INCLEN(7),TOTDIFF+1(4) CHANGE FORMATS
         TR    INCLEN+0(6),TRTAB-240 MAKE IT PRINTABLE
         MVI   INCLEN+6,C' '       CLEAN UP OUR ACT
         PUT   OUTDCB4,INCMESS
         CLOSE MF=(E,OPENLIST)   CLOSE ALL DCBS                  89160
         CP    OLDLC,=P'0'         ANY UNIQUE MEMBERS HERE?
         BNE   SETRC4              YES - THEN OUT
         CP    NEWLC,=P'0'         HOW ABOUT HERE?
         BNE   SETRC4              YES - THEN OUT
         CP    LINKLC,=P'0'        ANY DUPS IN LINKLIB?
         BNE   SETRC4              YES - THEN SHOW IT
         SR    R15,R15             NO - THEN SET 0 RETURN CODE
         B     RESTORE             BRANCH AROUND SETRC4
SETRC4   EQU   *
         LA    R15,4               SET RETURN CODE OF 4
RESTORE  EQU   *
         L     R13,SAVE+4
         L     R14,12(R13)         RESTORE REG 14
         LM    R0,R12,20(R13)      RESTORE 0 - 12
         BR    R14                 RETURN TO CALLER
         TITLE 'CONSTANTS AND DATA AREAS'
OPENLIST OPEN  (INDCB1,INPUT,INDCB2,INPUT,INDCB3,INPUT,OUTDCB1,OUTPUT, *
               OUTDCB2,OUTPUT,OUTDCB3,OUTPUT,OUTDCB4,OUTPUT),MF=L
         SPACE 1                                                 89160
INDCB1   DCB   DSORG=PS,MACRF=GL,DDNAME=OLDLPA,RECFM=FB,LRECL=256,     X
               BLKSIZE=256,EODAD=OLPAEOF
         SPACE 1
INDCB2   DCB   DSORG=PS,MACRF=GL,DDNAME=NEWLPA,RECFM=FB,LRECL=256,     X
               BLKSIZE=256,EODAD=NLPAEOF
         SPACE 1
INDCB3   DCB   DSORG=PS,MACRF=GL,DDNAME=LINKLIB,RECFM=FB,LRECL=256,    X
               BLKSIZE=256,EODAD=LINKEOF
         SPACE 1
OUTDCB1  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT1,RECFM=VBA,LRECL=137,   X
               BLKSIZE=4000
         SPACE 1
OUTDCB2  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT2,RECFM=VBA,LRECL=137,   X
               BLKSIZE=4000
         SPACE 1
OUTDCB3  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT3,RECFM=VBA,LRECL=137,   X
               BLKSIZE=4000
         SPACE 1
OUTDCB4  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT4,RECFM=VBA,LRECL=137,   X
               BLKSIZE=4000
         TITLE 'CONSTANTS AND DATA AREAS'
SAVE     DS    18F
FLAG1    DC      XL1'00'           USER FLAGS
EOFLINK  EQU     X'80'             EOF ON LINKLIB DD HAS BEEN REACHED
TWO      DC      PL1'2'
OLDLC    DC      PL2'0'
NEWLC    DC      PL2'0'
LINKLC   DC      PL2'0'
DLC      DC      PL2'0'
TRTAB    DC      CL16'0123456789ABCDEF'
         DS     0F
OLEN     DC      F'0'
NLEN     DC      F'0'
LLEN     DC      F'0'
TOTDIFF  DC      F'0'
DATALINE DC      AL2(DATAEND-DATALINE)
         DC      H'0'
         DC      CL1'0'
DATA     DS      CL8
         DC      CL1' '
ALIAS    DC      CL5'     '
         DC      CL1' '
LENGTH   DC      CL7'       '
DATAEND EQU    *
         DS     0F
OHDR     DC      AL2(OLDEND-OHDR)
         DC      H'0'
         DC      CL1'1'
         DC      C'MEMBERS IN DD OLDLPA THAT ARE NOT IN DD NEWLPA'
OLDEND   EQU   *
         DS     0F
NHDR     DC      AL2(NEWEND-NHDR)
         DC      H'0'
         DC      CL1'1'
         DC      C'MEMBERS IN DD NEWLPA THAT ARE NOT IN DD OLDLPA'
NEWEND   EQU   *
         DS     0F
LHDR     DC      AL2(LINKHEND-LHDR)
         DC      H'0'
         DC      CL1'1'
         DC      C'DUPLICATE MEMBERS BETWEEN DD NEWLPA AND LINKLIB'
LINKHEND EQU   *
         DS     0F
DUPHDR   DC      AL2(DUPEND-DUPHDR)
         DC      H'0'
         DC      CL1'1'
         DC      C'LPALIB MEMBERS WHOSE LENGTH HAS CHANGED'
DUPEND   EQU   *
         DS     0F
DUPMSG   DC      AL2(DUPENDM-DUPMSG)
         DC      H'0'
         DC      CL1'0'
OMEM     DC      CL8'        '
         DC      C' OLD LENGTH IS '
OLENT    DC      CL7'       '
         DC      C' NEW LENGTH IS '
NLENT    DC      CL7'       '
DUPENDM  EQU   *
INCMESS  DC      AL2(INCEND-INCMESS)
         DC      AL2(0)                                       ESP89159
         DC      CL1'0'
         DC      CL24'INCREASE IN LPA SIZE IS '
SIGN     DC      CL1' '
INCLEN   DC      CL7'       '
INCEND   EQU   *
         SPACE 5
*        IATYREG                   SYS1.AJES3MAC
         YREGS ,                                                GP03028
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         END
