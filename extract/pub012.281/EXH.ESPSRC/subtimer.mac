STIM     TITLE 'S U B T I M E R  ***  STOP WATCH SUBROUTINE'
*   THIS SUBROUTINE IS USED WITH THE SWATCH MACRO TO START, STOP,
*   PRINT, AND COMPARE TIMERS.  OUTPUT IS VIA WTO (LATER @PRINTER)
*
*   ENTRY POINT SUBTIMED COMPARES A SAVED VALUE AND WRITES A
*   NNN % BETTER MESSAGE.
*
*   INPUT R1 = WORK AREA CREATED BY   SWATCH DATA
*               (AND SWATCH INIT IF IN DYNAMIC/UNINITIALIZED STORAGE)
*   OUTPUT R15 > 0 IF INVALID DATA PASSED
*          R15 = 0 OTHERWISE
*
SUBTIMER START 0
SUBTIMER AMODE ANY                                              GP00162
SUBTIMER RMODE ANY                                              GP00162
         B     BEGIN-SUBTIMER(,R15)
         DC    AL1(BEGIN-*-1)
         DC    C'SUBTIMER &SYSDATE &SYSTIME'
BEGIN    STM   R14,R12,12(R13)
         LR    R12,R15       AND NEW BASE
         USING SUBTIMER,R12
         LR    R7,R1         LOAD WORK AREA
         USING WORK,R7
         SPACE 2
*  WTO MESSAGE WITH TIME INTERVAL (STMRSTOP-STMRSTRT) IN MICRO SECS
*  N.B.: CLOCK VALUES ARE KEPT AS UNSIGNED 64-BIT INTEGERS, BUT THE
*        SWATCH MACRO CONVERTS TO SIGNED MICROSECONDS.
*
         LM    R0,R1,STMRSTRT GET START TIME
         LM    R2,R3,STMRSTOP GET END TIME
         SLR   R3,R1          AND THE LITTLE END
         BC    3,BENCHNOB     NO BORROW
         S     R2,=F'1'       PROPAGATE BORROW
BENCHNOB SR    R2,R0          GET THE BIG END
         SL    R3,STMROHD+4   SUBTRACT OVERHEAD TIME (OR 0)     GP13118
         BC    3,OHDNOB       NO BORROW                         GP13118
         S     R2,=F'1'       PROPAGATE BORROW                  GP13118
OHDNOB   S     R2,STMROHD     SUBTRACT OVERHEAD TIME (OR 0)     GP13118
         CVD   R3,STMRDB      CONVERT TO PACKED (IGNORE R2!!!)
         ST    R3,STMRTIME    SAVE TIME FOR ENTIRE TEST
         ICM   R0,15,STMRITER  ITERATION COUNT PRESENT?
         BZ    SKIPITER
         DR    R2,R0          TIME PER LOOP
         ST    R3,STMRLTIM    SAVE FOR CALLER                   GP13118
SKIPITER MVC   STMRWTO(PATBENLN),PATBENCH  MOVE WTO PATTERN     GP03022
         ED    STMRWTO+OFFTMASK(L'OFFTMASK),STMRDB SHOW TIME    GP03022
         MVC   STMRWTO+OFFUCOM(L'STMRCODE),STMRCODE  USER'S COMMENT
         WTO   MF=(E,STMRWTO)
         SPACE 1
         OC    STMRSTR2(8),STMRSTR2    BASE TIME CLEARED ?      GP13118
         BNZ   HAVEBASE                  NO                     GP13118
         MVC   STMRSTR2(STMRSVLN),STMRSTRT  SAVE FIRST TIME     GP13118
HAVEBASE ICM   R0,15,STMRLTIM  ITERATION TIME PRESENT?          GP13118
         BZ    EXIT                                             GP13118
         CVD   R0,STMRDB      CONVERT TO PACKED (IGNORE R2!!!)
         MVC   STMRWTO(PATBENLN),PATBENCH  MOVE WTO PATTERN     GP13118
         ED    STMRWTO+OFFTMASK(L'OFFTMASK),STMRDB  SHOW TIME   GP13118
         MVC   STMRWTO+OFFUCOM-1(16),=CL16'PER LOOP'            GP13118
         WTO   MF=(E,STMRWTO)
         B     EXIT
         SPACE 2                                                GP03022
PATBENCH DC    Y(PATBEND-*),X'8000'  WTO LENGTH / MCSFLAGS      GP03022
OFFTMASK EQU   *-PATBENCH,17                                    GP03022
         DC    X'402020202020202021204B202020202020'  TIME MASK GP03022
         DC    C' SECONDS USED',CL2' '                          GP03022
OFFUCOM  EQU   *-PATBENCH,16                                    GP03022
         DC    CL16' '       OPTIONAL USER COMMENTS             GP03022
PATBEND  DC    X'0000,0008'  NO DESC / ROUTCDE=13               GP03022
PATBENLN EQU   *-PATBENCH                                       GP03022
         SPACE 3
***********************************************************************
**                                                                   **
**   ENTRY SUBTIMED IS CALLED (BY SWATCH COMPARE) TO PRINT THE       **
**   PERCENTAGE IMPROVEMENT OR WORSENING BETWEEN TWO TESTS. THE      **
**   FIRST TEST'S RESULTS ARE SAVED BY DEFAULT. SAVING CURRENT       **
**   RESULTS MAY BE FORCED WITH SWATCH SAVE                          **
**                                                                   **
**   OLDER RUN SAVED IN STMRSTR2/STO2.                               **
**   CURRENT RUN IN SMTRSTRT/STOP.                                   **
**                                                                   **
***********************************************************************
         ENTRY SUBTIMED
SUBTIMED STM   R14,R12,12(R13)
         LA    R12,0(,R15)
         LA    R0,SUBTIMED-SUBTIMER
         SLR   R12,R0
         USING SUBTIMER,R12
         LR    R7,R1         LOAD WORK AREA
         USING WORK,R7
*---------------------------------------------------------------------*
*   AVOID 0C9 WHEN USER MAKES CALL PRIOR TO SHOW/WTO/PRINT -          *
*     CALCULATE TOTAL TIME AGAIN                                      *
*---------------------------------------------------------------------*
         LM    R0,R1,STMRSTRT GET START TIME                    GP03022
         LM    R2,R3,STMRSTOP GET END TIME                      GP03022
         SR    R2,R0          GET THE BIG END                   GP03022
         SLR   R3,R1          AND THE LITTLE END                GP03022
         BC    3,NOBORR       NO BORROW                         GP03022
         S     R2,=F'1'       PROPAGATE BORROW                  GP03022
NOBORR   ST    R3,STMRTIME    SAVE TIME FOR ENTIRE TEST         GP03022
         LM    R0,R1,STMRSTR2 GET START TIME                    GP03022
         LM    R2,R3,STMRSTO2 GET END TIME                      GP03022
         SR    R2,R0          GET THE BIG END                   GP03022
         SLR   R3,R1          AND THE LITTLE END                GP03022
         BC    3,NOBORR2      NO BORROW                         GP03022
         S     R2,=F'1'       PROPAGATE BORROW                  GP03022
NOBORR2  ST    R3,STMRTIM2    SAVE TIME FOR ENTIRE TEST         GP03022
*---------------------------------------------------------------------*
*   INIT WTO, CALCULATE, AND FORMAT IMPROVEMENT OR DECLINE            *
*---------------------------------------------------------------------*
         MVC   STMRWTO(PATWORLN),PATWORSE                       GP03022
         L     R3,STMRTIME   GET TIME FOR CURRENT TEST
         S     R3,STMRTIM2   LESS TIME FOR FIRST TEST
         BNM   BETTERAB      OK                                 GP13110
         MVC   STMRWTO+OFFCOND(6),=C'WORSE '                    GP03022
BETTERAB LPR   R3,R3
         M     R2,=F'10000'  FOR PERCENT * 100
         ICM   R1,15,STMRTIM2                                   GP13132
         BNZ   DODIV                                            GP13132
         L     R3,=A(100*100)     FAKE 100% (INFINITE?)         GP13132
         MVC   STMRWTO+OFFCOND(6),=C'WORSE '                    GP13132
         B     DOCONV                                           GP13132
DODIV    D     R2,STMRTIM2   GET CHANGE FROM BASE
DOCONV   CVD   R3,STMRDB     PACK IT IN
         ED    STMRWTO+OFFPCT(L'OFFPCT),STMRDB+4                GP03022
         LTR   R3,R3         TRUNCATED VALUE = 0?               GP13118
         BNZ   PERFWTO         NO                               GP13118
         MVC   STMRWTO+OFFPCT(22),=CL22' ABOUT THE SAME AS'     GP13118
PERFWTO  WTO   MF=(E,STMRWTO)                                   GP03022
         SPACE 1
EXIT     LM    R14,R12,12(R13)  RESTORE ALL REGISTERS
         SR    R15,R15       SET GOOD COMPLETION (WHO CARES?)   GP03022
         BR    R14           RETURN TO CALLER
         SPACE 2                                                GP03022
PATWORSE DC    Y(PATWORD-*),X'8000'  WTO LENGTH / MCSFLAGS      GP03022
         DC    C'THIS TEST IS'                                  GP03022
OFFPCT   EQU   *-PATWORSE,9                                     GP03022
         DC    X'4020202021204B2020'                            GP03022
         DC    C'% '                                            GP03022
OFFCOND  EQU   *-PATWORSE,6  CONDITION                          GP03022
         DC    C'BETTER',C' THAN THE FIRST'                     GP03022
PATWORD  DC    X'0000,0008'  NO DESC / ROUTCDE=13               GP03022
PATWORLN EQU   *-PATWORSE                                       GP03022
         SPACE 1
         PRINT GEN
WORK     DSECT ,              IN USER'S PROGRAM OR WORK SPACE
         SWATCH DATA
         SPACE 1
         PRINT NOGEN
         SPACE 1
*LOCAL*  YREGS ,
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   ,
