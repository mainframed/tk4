WVOLS    TITLE 'WYLBUR/TSO SORTED VTOC DISPLAY'
         MACRO ,
&NM      QROOM &N
         GBLC  &MACPLAB
&MACPLAB SETC  '&NM'
         AIF   (T'&N EQ 'N').OI
         MACPARM DB,&N,OP=MVI,OPR=STC,MODE=REV                  GP12056
         OC    SORTFLAG,DB                                      GP12056
         MEXIT ,                                                GP12056
.OI      MACPARM SORTFLAG,&N,OP=OI                              GP12056
         MEND  ,
         SPACE 2
         MACRO ,
&NM      QSPACE &N
         GBLC  &MACPLAB
&MACPLAB SETC  '&NM'
         MACPARM SORTFLAG,16*&N,OP=OI                           GP12056
         MEND  ,
         SPACE 2
         PUNCH '   SETCODE AC(1) '     FUN AND GAMES            GP12056
         PUNCH '  ORDER WYLVTOCS(P) '  EASIER DUMPS             GP12056
         SPACE 1
         COPY  OPTIONGB
         GBLA  &WYBLKMX,&WYRECMX  MAXIMA FOR WYLBUR EDIT FILES   92128
         GBLB  &LOCO         QUICK LOCAL SET                    GP12056
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1                                                 92128
&LOCO    SETB  (&LOCO OR ('&LOCAL' EQ 'CCSI'))                  GP12056
&WYBLKMX SETA  32767         NO CUTOFF                           92128
&WYRECMX SETA  208           XEROX AND 3800 DUMP WIDTH + RDW     92128
         SPACE 2
***********************************************************************
*                                                                     *
*        COPYRIGHT 1985  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003,2012  EXPERT SYSTEM PROGRAMMING               *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                    e-mail: gerhard (at) postpischil (dot) com       *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
*---------------------------------------------------------------------*
*   THIS PROGRAM IS A VARIATION OF PROGRAM WYLVTOC IN THIS LIBRARY    *
*   WHEN ASSEMBLED AND RUN ON A NON-LOCAL SYSTEM (CCSI,RTI...) IT     *
*   ACTS IN TSO MODE (USERID.DSN), AND THE SECOND POSITIONAL PARM     *
*   IS TREATED AS A DATA SET PREFIX                             GP12056
*                                                                     *
*   The program is non-reusable, non-refreshable, non-reentrant, but  *
*   must be authorized (for @VOLREAD). @VOLREAD tries to read the     *
*   entire VTOC into storage, and requires a minimum of four tracks   *
*   plus overhead (track for DSCB1, one for DSCB3, one for PDS direc- *
*   tory, one for data. This requirement resulted in using temporary  *
*   SORTIN, but no SORTOUT (data processed in E35 exit).              *
*---------------------------------------------------------------------*
         EJECT ,                                                 79251
         PRINT &PRTSOR
WYLVTOCS PGMHEAD BIGZERO,BASE=(R11,R12),PARM=R6         ADDED ON 85252
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   WYLVTOCS IS INTENDED TO PROVIDE RAPID AND INEXPENSIVE             *
*   DATA SET SUMMARY INFORMATION.  QUICK RETRIEVAL IS PERFORMED       *
*   WITH BUFFERED FULL-TRACK EXCP.  MASK PROCESSING ASSUMES LOCAL     *
*   DATA SET NAMING CONVENTION.                                       *
*                                                                     *
*        NON-LOC PARM OPTIONS :  DEFAULT IS PDS,[DS.PREFIX]           *
*  (LOC) WYLVTOC PARM OPTIONS :  DEFAULT IS PDS,SUBA                  *
*                                                                     *
*        OUTPUT MODE -  VTOC     PDS    SNAP                          *
*              VTOC PRODUCES A ONE LINE SUMMARY PER DATA SET          *
*              PDS  ADDITIONALLY LISTS THE MEMBERS OF A PDS BY NAME   *
*              SNAP LISTS FIRST FIVE RECORDS OF EACH DATA SET/MEMBER  *
SYNSIZE  EQU   4096          SIZE OF RENAME OPTION LIST
*                                                                     *
*  (LOC) PRIVILEGED SECOND OPERAND: A=ACCT OR ACCT=ACCT(...)          *
*           CAUSES SPECIFIED ACCOUNT TO BE USED INSTEAD.              *
*           AFTER "ACCT" IS PROCESSED, REST OF FIELD IS               *
*           TREATED LIKE UNPRIVILEGED INPUT (SEARCH MASK).            *
*                                                                     *
*  (LOC) SEARCH MASK -                                                *
*              SUBA.USERNAME.MASK - 5 BYTES MINIMUM                   *
*              USERNAME.MASK      - 9 BYTES, ANY SUBACCOUNT           *
*              *ACCT              - ALL DATA SETS PER ACCOUNT         *
*              *VTOC              - ALL DATA SETS (TREATED AS *ACCT ON*
*                                      SHARED STORAGE PACKS)          *
*                                                                     *
*        MACROS - LOCAL SYSTEM MACRO LIBRARY REQUIRED                 *
*        EXTERNAL REFERENCES - @SERVICE, @PRINTER, @VOLREAD ROUTINES  *
*        REFRESHABLE, RE-ENTRANT, AUTHORIZED                          *
*                                                                     *
*        DISKS TO BE SEARCHED ARE SPECIFIED WITH ANY DDNAME OTHER     *
*          THAN ONES STARTING WITH JOB, STEP, PGM OR SYS              *
*        THE PRESENCE OF A VOLMOUNT DD CARD CAUSES AUTOMATIC UCB LOOP *
*        MODE FOR (LOCAL) PERMANENTLY RESIDENT WYLBUR VOLUMES.        *
*                                                                     *
*---------------------------------------------------------------------*
* //WYLVTOCS PROC SORT=SORT,LIST=PDS,MASK=
* //*
* //*   THIS PROGRAM LISTS DATA SET INFORMATION (AND DATA)
* //*   SORTED BY DATA SET NAME AND VOLUME.
* //*   LIST=  MAY SPECIFY:
* //*   LIST=VTOC - ONE ENTRY PER DATA SET
* //*   LIST=PDS  - ONE LINE PER DATA SET + COUNT OF MEMBERS
* //*   LIST=MEM  - ONE LINE PER DATA SET + LIST OF PDS MEMBERS
* //*   LIST=DIR  - ONE LINE PER DATA SET + LIST OF PDS MEMBERS
* //*   LIST=SNAP - 5 LINES OF DATA PLUS DATA SET/MEMBER INFORMATION
* //*
* //*   MASK=  SPECIFIES DATA SET RETRIEVAL OPTIONS
* //*         NONE - RETRIEVE ALL DATA SETS FOR SPECIFIED VOLUMES
* //*   MASK='prefix'   RETRIEVE BY DATA SET PREFIX/INDEX
* //*
* //VTOCS  EXEC  PGM=WYLVTOCS,REGION=512K,PARM='&LIST,&MASK'
* //SYSPRINT DD  SYSOUT=*
* //STEPLIB  DD  DISP=SHR,DSN=Z904.&SORT.LIB
* //SORTLIB  DD  DISP=SHR,DSN=Z904.&SORT.LIB
* //SORTIN   DD  UNIT=VIO,SPACE=(TRK,(19,19),RLSE,CONTIG)
* //SORTWK01 DD  UNIT=SORT,SPACE=(CYL,190),VOL=SER=SORT01
* //SORTWK02 DD  UNIT=SORT,SPACE=(CYL,190),VOL=SER=SORT02
* //SORTWK03 DD  UNIT=SORT,SPACE=(CYL,190),VOL=SER=SORT03
* //SORTWK04 DD  UNIT=SORT,SPACE=(CYL,190),VOL=SER=SORT04
* //SORTWK05 DD  UNIT=SORT,SPACE=(CYL,190),VOL=SER=SORT05
* //SORTWK06 DD  UNIT=SORT,SPACE=(CYL,190),VOL=SER=SORT06
* //SYSOUT   DD  SYSOUT=*
* //VOLMOUNT DD DUMMY          DYNAMIC MOUNT REQUEST (ALL DASD)
* //*
* //*
* //*        ADD USER VOLUMES WITH DISP=OLD,UNIT=XXXX,VOL=SER=XXXXXX
* //*
* //*      A SYSIN DD MAY BE USED FOR ADDITIONAL CONTROL; CARD FORMAT
* //*            IS : CONTROL OPTIONS /SPACE(S)/ DSNAME OR MASK
* //*      OPTIONS ARE : X EXCLUDE DATA SETS MATCHING THE MASK
* //*            I INCLUDE DATA SETS MATCHING THE MASK
* //*            D FOR MATCHING ENTRIES, PRINT DSCB LINE ONLY
* //*            C PRINT DSCB LINE AND COUNT DIRECTORY BLOCKS
* //*            M PRINT MEMBER NAMES ALSO
* //*            P PRINT 5 LINES OF TEXT FOR EACH DATA SET/MEMBER
* //*      THE D,C,M,P OPTIONS OVERRIDE THE VTOC/PDS/SNAP PARM
* //*      I AND X OPERATE ON DATA SETS PASSING THE PARM TEST ONLY.
* //*      THE DSNAME/MASK MAY BE :
* //*         A COMPLETE DATA SET NAME, FOLLOWED BY SEMI-COLON
* //*         A DATA SET PREFIX MASK (PREFIX FOLLOWED BY BLANKS)
* //*         A MASK; QUESTION MARK AND QUOTE (NOT ') ARE GENERAL MATCH
* //*            INDICATORS.
* //*
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         ST    R13,EXITSAVE  SAVE WORK AREA ADDRESS FOR SORT EXITS
         SERVINIT ,          LOAD THE SERVICE ROUTINE
         SERVLOAD @PRINTER,@INPREAD,@PARSER,SUBVERB  SUBRTNES   GP12056
         MVI   PRTEXLST,PUXFEND  DISABLE PRINT EXIT
         PRTOPEN SYSPRINT,OPT=(ABEND,DUMMY),DEV=1  OPEN PRINT FILE
         PRTOPEN SUMPRINT,OPT=(NOWTO,DUMMY),DEV=2  OPEN SUMMARY GP12056
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                GP12056
         BXLE  R15,R15,HAVEAUTH   YES                           GP12056
         PRTDATA 'Program WYLVTOCS must be run authorized.',DEV=(1,2)
         SERVTERM ,                                             GP12056
         ABEND 047                                              GP12056
         SPACE 1
HAVEAUTH VOLREAD LOAD        LOAD THE VOLUME READ ROUTINE
         MVI   BLANKONE,C' '   INITIALIZE BLANKS
         MVI   LINECARD+1,LINECARN-LINECARD  MAKE V HEADER
         MVI   LINECARD+4,C' '
         MVC   LINECARD+5(LINECARN-LINECARD-5),LINECARD+4
         MVI   CARDLINE-1,C''''
         MVI   CARDLINE+L'CARDLINE,C''''
         MVI   PROP,0        PRESET; WILL USE DEFAULS           GP12056
         MVI   ACCTPRIV,VAASYS+VAASUP  SET SYSTEMS PRIVIES      GP12056
         MVI   MASKLEN,X'FF' DISABLE MASK TEST                  GP12056
         AIF   (NOT &LOCO).NLOC1                                GP12056
         SERVCALL ACGET,DSNACCT  GET CURRENT ACCOUNT AND PRIVILEGES
         STC   R0,ACCTPRIV   SAVE PRIVILEGES
         SERVCALL ACTST,DSNACCT  GET INTERNAL ACCOUNT NUMBER
         SRDL  R0,32+16      SHIFT TO R1
         SERVCALL ACCNX      GET EXTERNAL FORM
         STCM  R0,15,DSNACCT   SAVE EXTERNAL ACCOUNT NUMBER
         NI    ACCTPRIV,VAASYS+VAASUP  DELETE EXTRANEOUS BITS
         MVC   LIBCLC,LIBPAT MAKE PATTERN CLC FOR LIBPAK        GP12056
         MVC   WYLCLC,WYLPAT MAKE PATTERN FOR WYLBUR            GP12056
.NLOC1   MVC   DSNMASK+1(L'DSNMASK-1),BLANKS   CLEAR MASK       GP12056
         MVI   DSNMASK,C'*'  BUT SET FOR EVERYTHING             GP12056
         MVC   TSOCLC,TSOPAT MAKE PATTERN FOR TSO/GENERIC       GP12056
         PRTLIST TITLE,TITLE=1,DEV=(1,2)   MAKE PRELIMINARY TITLE
         PRTLIST SUBHEAD,TITLE=2   (SAVES PAPER ???)            GP12056
         SPACE 1
*---------------------------------------------------------------------*
*   Parse the PARM field:                                             *
*   1) Allow null (default PDS), PDS, VTOC, SUB, *VTOC (loc. *ACCT)   *
*   2) Optional; data set prefix (local sub-account if 4 bytes)       *
*   3) Optional keyword (local) A=acct  account number                *
*---------------------------------------------------------------------*
         PARMLOAD R8,PTR=R6                                     GP12056
         LTR   R9,R9                                            GP12056
         BZ    PARMDFLT      NONE; USE DEFAULT ACCT/SUBACCT     GP12056
         PARSE (R8),(R9),OPT=COMMA                              GP12056
         LTR   R15,R15                                          GP12056
         BZ    GOTPARMS                                         GP12056
         STM   R15,R0,DB                                        GP12056
         PRTDATA 'PARM parsing failed, RC=',(DB,4,I,DEB),DEV=(1,2)
         SERVTERM ,                                             GP12056
         ABEND 100,DUMP                                         GP12056
         SPACE 1                                                GP12056
GOTPARMS LA    R3,PAR@TABL   POINT TO RESULTS                   GP12056
         USING PRSDSECT,R3     DECLARE ENTRY MAPPING            GP12056
         ICM   R3,15,PRSLINK      ANY PARAMETERS AT ALL?        GP12056
         BZ    PARMDFLT             NO; USE DEFAULTS            GP12056
         ICM   R2,15,PRS#TEXT     NULL FIRST PARM ?             GP12056
         BZ    PARM1DON             YES; KEEP DEFAULT           GP12056
         SPACE 1                                                GP12056
         LA    R0,PRS$TEXT   POINT TO TEXT                      GP12056
         OC    PRS$TEXT(8),BLANKS  UPPER CASE                   GP12056
         LA    R1,RUNOPTP    GET KEYWORD TABLE POINTER          GP12056
         SUBCALL SUBVERB     DO TABLE LOOKUP                    GP12056
         LTR   R15,R15       DID IT WORK ?                      GP12056
         BNZ   PARM1SET      NOW LOOK FOR OPTIONAL VALUE        GP12056
         SPACE 1                                                GP12056
PARMBAD  L     R4,PRS@TEXT   LOAD TEXT ADDRESS                  GP12056
         PRTDATA 'INVALID PARM -',((R4),(R2),PAD,DEB),DEV=(1,2) GP12056
         SERVTERM ,                                             GP12056
         ABEND 123,DUMP                                         GP12056
         SPACE 1                                                GP12056
         PARKEYBX RUNOPT                                        GP12056
RUNOPT   PARKEYFG VTOC,PROP,0,PDSCB,LEN=1    PRINT DSCB INFO    GP12056
RUNOPT2  PARKEYFG DSCB,PROP,0,PDSCB          PRINT DSCB INFO    GP12056
         PARKEYFG PDS,PROP,0,PPDS            PRINT MEMBER NAMES GP12056
         PARKEYFG DIRECTORY,PROP,0,PPDS+PDIR  MEMBER NAMES      GP12056
         PARKEYFG MEMBERS,PROP,0,PPDS+PDIR    MEMBER NAMES      GP12056
RUNOPTN  PARKEYFG SNAP,PROP,0,PSNAP+PPDS+PDIR 5 LINES DATA      GP12056
         SPACE 1                                                GP12056
PARM1SET OC    PROP,OFOFONN(R15)  SET PARM1 FLAG VALUE          GP12056
PARM1DON ICM   R3,15,PRSLINK      ANY PARAMETERS AT ALL?        GP12056
         BZ    PARM2NUL             NO; TRY FOR DEFAULT         GP12056
         ICM   R2,15,PRS#TEXT     NULL PARM ?                   GP12056
         BZ    PARM2NUL             YES; KEEP DEFAULT           GP12056
         SPACE 1                                                GP12056
         OC    PRS$TEXT,BLANKS  UPPER CASE                      GP12056
         LA    R9,PRS$TEXT   MAKE EASIER                        GP12056
         AIF   (NOT &LOCO).NLOC3                                GP12056
         LA    R1,2          MINIMUM LENGTH FOR A=
         CLC   =C'A=',PRS$TEXT  ACCOUNT REQUEST ?
         BE    PARMCRAC      YES; CHECK IT
         LA    R1,5          ELSE TRY FOR ACCT=
         CLC   =C'ACCT=',PRS$TEXT  IS IT ?
         BNE   PARMNACT      NO
PARMCRAC SR    R2,R1         RESIDUAL LENGTH                    GP12056
         BNP   PARM1DON      IGNORE NULL KEYWORD                GP12056
         AR    R9,R1          RESIDUAL TEXT                     GP12056
         CH    R2,=H'8'      ACCOUNT/SUBACCT LENGTH ?           GP12056
         BE    PARMASUB        YES                              GP12056
         CH    R2,=H'4'      ACCOUNT LENGTH ?                   GP12056
         BNE   BADPARM       NO; ERROR                          GP12056
PARMASUB MVC   DSNACCT(8),0(R9)  MOVE ACCOUNT AND BLANKS OR SUBACCT
         BCTR  R2,0          DECREMENT LENGTH FOR CLC           GP12056
         STC   R2,WYLCLC     WYLBUR COMPARES ACCT OR SUBACCT    GP12056
         SERVCALL FMTAC,DSNACCT,LEN=4   VALID ?
         BXH   R15,R15,BADPARM  NO
         SERVCALL ACTST,DSNACCT,LEN=4  GET BINARY EQUIVALENT
         BXH   R15,R15,BADPARM  NO
         SRDL  R0,32+16      PLACE INTO R1
         SERVCALL ACCNX      GET EXTERNAL FORM
         STCM  R0,15,DSNACCT  STASH IT BACK
         ST    R2,MASKLEN    PREVENT BYPASS OF CLC TESTS        GP12056
PARMCRAN TM    ACCTPRIV,VAASYS+VAASUP  AUTHORIZED USER ?
         BZ    PARMNAUT      NO; FAIL
         B     PARMDFLT      NOW GO TO CHECK SYSIN
.NLOC3   SPACE 1                                                GP12056
PARMNACT CH    R2,=AL2(L'DSNMASK)  OVER MAXIMUM LENGTH ?        GP12056
         BH    BADPARM                 ERROR IF SO              GP12056
         BCTR  R2,0          GET EXECUTE LENGTH                 GP12056
         EX    R2,EXMVCUID   MOVE TO MASK                       GP12056
         CLI   DSNMASK,C'*'  GENERAL MATCH?                     GP12056
         BE    PARMDFLT        YES; LENGTH SET TO MATCH ALL     GP12056
         ST    R2,MASKLEN    SET COMPARE LENGTH                 GP12056
         PRTDATA 'Data sets beginning with',(DSNMASK,DEB,PAD),'will be *
               processed',DEV=2                                 GP12056
         B     PARMDFLT      IGNORE OTHER PARMS                 GP12056
         SPACE 1                                                GP12056
PARM2NUL LTCB  R1                                               GP12056
         AIF   (NOT &LOCO).DEFALL      PROCESS ALL DATA SETS    GP12056
         L     R1,TCBTIO-TCB(,R1)                               GP12056
         LA    R9,0(,R1)     POINT TO JOB NAME                  GP12056
         LA    R2,8          MAXIMUM NAME LENGTH                GP12056
         LA    R14,0(R2,R9)  LAST BYTE +1                       GP12056
PARM2NUC BCTR  R14,0         BACK UP                            GP12056
         CLI   0(R14),C' '   TRAILING BLANK ?                   GP12056
         BNE   PARM2NUP        NO; END                          GP12056
         BCT   R2,PARM2NUC   DO AGAIN                           GP12056
PARM2NUP LA    R5,DSNMASK-1(R2)                                 GP12056
         MVI   0(R5),C'.'    COMPLETE INDEX                     GP12056
         CH    R2,=AL2(L'DSNMASK)  OVER MAXIMUM LENGTH ?        GP12056
         BH    BADPARM                 ERROR IF SO              GP12056
         BCTR  R2,0          GET EXECUTE LENGTH                 GP12056
         EX    R2,EXMVCUID   MOVE TO MASK                       GP12056
         ST    R2,MASKLEN    SET COMPARE LENGTH                 GP12056
         PRTDATA 'Data sets beginning with',(DSNMASK,DEB,PAD),'will be *
               processed',DEV=2                                 GP12056
.DEFALL  SPACE 1
PARMDFLT TM    PROP,PDSCB+PPDS+PDIR+PSNAP   ANY USER PARM?      GP12056
         BNZ   *+8             YES                              GP12056
         OI    PROP,PDSCB+PPDS+PDIR    SET DEFAULT              GP12056
         OI    PROP,PDSCB              SET FOR OPTION FORMAT    GP12056
         B     PARMDONE      SET MASKS                          GP12056
EXMVCUID MVC   DSNMASK(0),0(R9)      MOVE USER ID               GP12056
         SPACE 1
PARMNAUT PRTV  MSGUNAUT,DEV=(1,2)   FAIL - NOT AUTHORIZED       GP12056
         AIF   (NOT &LOCO).SKIPSYS                              GP12056
         PRTV  SYNSYSMG      CONTACT SYSTEMS
*        B     JOBABEND
.SKIPSYS SPACE 1
JOBABEND SERVTERM ,          CLOSE AND FREE EVERYTHING
         ABEND 666
         SPACE 1
OPTSHOW  FDPRT 'Options for current run: process',NL,PAD        GP12056
         FDFLAG PROP,1,TABLE=DCPROP,LEN=96,SEP=C',',SPACE=1     GP12056
         FD    *END                                             GP12056
         SPACE 1
DCPROP   FLGTAB PDSCB,'DSCB1/3',MLEN=1                          GP12056
         FLGTAB PPDS,'PDS counts'                               GP12056
         FLGTAB PDIR,'PDS members'                              GP12056
         FLGTAB PSNAP,'5 lines of data'                         GP12056
         FDPRT ' ',NL        FORCE END                          GP12056
         FD    *END                                             GP12056
         SPACE 1
PARMDONE PRTLIST OPTSHOW,DEV=2       RUN OPTIONS                GP12056
         MVC   DSNACCN,DSNACCT  MOVE EXTERNAL ACCOUNT NUMBER
         CLI   DSNACCN,C'Z'  SPECIAL ?
         BNE   *+8           NO
         MVI   DSNACCN,C'0'
         OI    DSNACCN,C'0'  MAKE INTERNAL FORMAT
         MVC   WYLMASK+4(8),DSNACCT    COMPLETE WYLBUR COMPARE  GP12056
         MVC   LIBMASK(4),DSNACCT      COMPLETE LIBPAK COMPARE  GP12056
         OPEN  (SORTIN,OUTPUT)   OPEN THE SORT INPUT FILE
         TM    SORTIN+DCBOFLGS-IHADCB,DCBOFOPN  OPENED OK ?
         BNZ   INITDONN      YES
         PRTF  '0UNABLE TO OPEN SORTIN TEMPORARY FILE',DEV=(1,2)
         B     JOBABEND
         SPACE 1
INITDONN L     R1,=A(PRTEXIT)  GET PRINTER EXIT
         STCM  R1,15,PRTEXLST+2  INTO EXIT LIST
         MVI   PRTEXLST,PUXFEND+PUXFLIN  TAKE EXIT EVERY LINE
         PRTL  'Sort results:',CC=NO  RESET PRIOR TO PRINT EXIT GP12056
         SERVCALL TIODD,=CL8'VOLMOUNT'  DYNAMIC MOUNTING ?
         LTR   R0,R0         ANY DD FOUND ?
         BZ    LOOKTIOT        NO; SKIP AUTOMATIC MODE
         OI    PROP,PAUTO    SET FOR UCB LOOP MODE
         B     AUTOLOOK      START UCB SCAN
         SPACE 1
LOOPTIOT VOLREAD TCLOSE      CLOSE PRIOR VOLUME
         PRTSPACE 0          FORCE PRIOR LINE
         TM    PROP,PAUTO    ARE WE IN UCB LOOKUP MODE ?
         BZ    LOOKTIOT      NO; GET NEXT TIOT ENTRY
AUTOLOOK L     R1,STARUCBA   GET FIRST/NEXT UCB ADDRESS
         SERVCALL UCBUM,(R1)   GET NEXT UCB
         LTR   R4,R0         WAS A UCB FOUND ?
         BZ    AUTOEND       NO; END OF CHAIN
         STCM  R4,7,STARUCBA+1  SAVE IT
         USING UCBOB,R4      DECLARE IT
         CLI   UCBTBYT3,UCB3DACC  DASD DEVICE ?
         BNE   AUTOLOOK      NO; TRY AGAIN
         TM    UCBSTAT,UCBONLI  ON-LINE ?
         BZ    AUTOLOOK      NO
         TM    UCBSTAT,UCBCHGS+UCBUNLD  COMING OFF ?
         BNZ   AUTOLOOK      EITHER; SKIP IT
         ICM   R0,3,UCBVOLI  DOS OR BAD VTOC ?                  GP13227
         BZ    AUTOLOOK        YES; IGNORE IT                   GP13227
         AIF   (NOT &LOCO).NLOC5
         SERVCALL VSNFG,UCBVOLI  GET PRIVILEGE BITS
         STH   R0,VOLFLAGS   STASH FLAGS
         TM    VOLFLAGS+1,VF2DSNA+VF2DSNT  WYLBUR/TSO..?         94240
         BZ    AUTOLOOK      NO; SKIP IT
.NLOC5   SERVCALL TIOUA,(R4)  SEE IF USER DD CARD
         LTR   R15,R0
         BZ    AUTOUSE       NO; DO THIS ONE
         CLC   =C'SORT',4(R15)  RESERVED NAME ?
         BE    AUTOUSE       YES; DO NOW
         CLC   =C'STEP',4(R15)  DITTO ?
         BE    AUTOUSE
         CLI   4(R15),C' '   CONCATENATION ?
         BNE   AUTOLOOK      NO; TRY AGAIN
AUTOUSE  MVC   VOLDDNM,=CL8'VOLMOUNT'
         B     LOOKCOMM      GO TO COMMON CODE
AUTOEND  NI    PROP,255-PAUTO  RESET AUTO MODE
         B     ALLDONE       NO NEED TO SCAN ANY MORE           GP12060
         DROP  R4
LOOKTIOT L     R1,ADDRTIOT   GET PRIOR ENTRY ADDRESS OR 0
         SERVCALL TIOLK      LOOK FOR PLAIN TIOT ENTRIES
         LTR   R2,R0         ANY MORE TO DO ?
         BZ    ALLDONE       NO; QUIT
         ST    R2,ADDRTIOT   SET FOR NEXT CALL
         LAT   R4,16(R2),LOOKTIOT     SKIP DUMMY UCB
         CLI   0(R2),20      STANDARD LENGTH ?                  GP12060
         BNE   LOOKTIOT        NO; GET ANOTHER                  GP12060
         CLI   20(R2),0      LAST ENTRY ?                       GP12060
         BE    LOOKACCP        YES; SKIP CONCATENATION TEST     GP12060
         CLI   4+20(R2),C' ' CONCATENATION ?                    GP12060
         BE    LOOKTIOT        NO; GET ANOTHER                  GP12060
         USING UCBOB,R4
LOOKACCP CLI   UCBTBYT3,UCB3DACC       IS IT DASD ?
         BNE   LOOKTIOT      IGNORE NON-DA
         SERVCALL TIODD,4(R2)   LOCATE TIOT ENTRY BY DDNAME
         CR    R2,R0         IF NOT EQUAL, DUPLICATE DDNAME
         BNE   LOOKTIOT      WHICH SHOULD BE IGNORED
         CLC   =CL8'VOLMOUNT',4(R2)  GENERIC REQUEST CARD ?
         BE    LOOKTIOT      YES; ALREADY PROCESSED
         CLC   =C'SORT',4(R2)  SORT DD CARD ?
         BE    LOOKTIOT      YES; IGNORE IT ALSO
         CLC   =C'SYS',4(R2)  DYNAMIC OR SPECIAL DD ?            88012
         BE    LOOKTIOT      YES; SKIP                           88012
         MVC   VOLDDNM,4(R2)  SAVE DDNAME
         SERVCALL VSNFG,UCBVOLI   GET ATTRIBUTE FLAGS FOR VOLUME
         STH   R0,VOLFLAGS   SAVE FOR LATER TEST
LOOKCOMM STCM  R4,7,STARUCBA+1  SAVE UCB FOR EXTENT FORMATTING   85252
         SERVCALL UCBGN,(R4)   GET GENERIC NAME                  85252
         MVC   VOLTYPE,0(R1)   STASH GENERIC
         MVC   VOLUNIT,UCBNAME   SAVE UCB NAME
         MVC   VOLSER,UCBVOLI   SAVE VOL-SER
         DROP  R4            DONE WITH UCB
         NI    PROP,255-PDATA  SET NO DATA FOUND ON VOLUME
         XC    CLEARVOL(CLEARDSN-CLEARVOL),CLEARVOL  VOLUME COUNTERS
         XC    SORTREC(SORTLEN),SORTREC  CLEAR SORT INFO
         MVC   SORTVOL,VOLSER  SET VOLUME SERIAL
         SPACE 1
         VOLREAD OPEN,VOLSER   INITIALIZE VOLUME PROCESSING
         BXH   R15,R15,SKIPVOL   IGNORE IF BAD
         VOLREAD DSCB        READ THE FORMAT 4
         BXH   R15,R15,SKIPVOL   ERROR
         B     NEXTDSC4      JOIN NORMAL PROCESSING
         SPACE 1
NEXTDSCB PRTSPACE 0          FORCE A NEW LINE
         XC    SORTREC(SORTLEN),SORTREC  RESET SORT RECORD
         MVC   SORTVOL,VOLSER
         VOLREAD DSCB        GET ANOTHER DSCB
         CH    R15,=H'4'     DID WE GET ONE ?
         BE    DOTOTALS      NO; END OF VOLUME
         BH    DSCBIOER      NO; I/O ERROR
NEXTDSC4 LR    R1,R0         COPY DSCB ADDRESS
         CLI   DS1FMTID-DS1DSNAM(R1),C'1'   REALLY A FORMAT 1 ?
         BNE   NEXTDSCB      IF NOT, SKIP
         TM    ACCTPRIV,MASKVTOC   FULL VTOC RUN ?
         BNZ   MASKDONE      YES; PROCESS
         ICM   R2,15,MASKLEN    GET CLC LENGTH                  GP12056
         BM    MASKDONE      NONE; ACCEPT THE DATA SET          GP12056
         AIF   (NOT &LOCO).NLOC7
         TM    VOLFLAGS+1,VF2DSNA   LIBPAK ?
         BNZ   MASKTSTL      YES; TEST IT
         TM    VOLFLAGS+1,VF2DSNT   TSO PACK ?
         BNZ   MASKTSTS      YES; TEST IT
         TM    ACCTPRIV,MASKVTU  USER *VTOC REQUEST ?
         BNZ   MASKDONE      YES; PROCESS
         EX    0,WYLCLC      SEE IF MATCH ON WYLBUR NAME        GP12056
         BE    MASKDONE
MASKTSTL EX    0,LIBCLC      LIBPAK ACCOUNT ?                   GP12056
         BE    MASKDONE      MATCH; PROCESS
         B     NEXTDSCB
.NLOC7   SPACE 1
MASKTSTS EX    R2,TSOCLC     SEE IF MATCH ON TSO ID/GENERIC     GP12056
         BNE   NEXTDSCB        NO; SKIP
MASKDONE MVC   DS1DSNAM(LENDSCB1),DS1DSNAM-DS1DSNAM(R1)  COPY
         BAL   R14,DSNCHOSE   SEE IF DATA SET TO BE PROCESSED
         B     NEXTDSCB      NO; SKIP IT
         LA    R1,1
         AH    R1,TOTDSNS
         STH   R1,TOTDSNS    INCREMENT MATCH COUNT
         OI    PROP,PDATA    INDICATE DATA SET FOUND
         XC    CLEARDSN(CLEARLEN),CLEARDSN  CLEAR DSN COUNTERS
         MVC   BLANKDSN(BLANKDSL),BLANKDSN-1  BLANK DSN FIELDS
         MVC   SORTDSN,DS1DSNAM  SET DATA SET NAME
         SPACE 1
*        PROCESS ALLOCATION AND LAST USE DATE
         SPACE 1
LISTVTOC LA    R1,DS1CREDT-1  POINT TO CREATION DATE
         LA    R7,ALODATE    OUTPUT FIELD
         BAL   R9,DS1DATE    CONVERT DSCB DATE
         MVC   LASTUSE+2(4),=C'-NA-'   PRESET FOR NO ACCESS DATE
         LA    R1,DS1REFD-1  POINT TO REFERENCE DATE -1
         LA    R7,LASTUSE    SET OUTPUT FIELD
         BAL   R9,DS1DATE    CONVERT DSCB DATE
         AIF   ('&LOCAL' NE 'CCSI').NODTSDT
         CLI   LASTUSE+1,C' '   WAS A DATE CONVERTED ?
         BNE   DODSORG       YES; DO DSORG
         TM    DS1REFD+2,X'0F'  VALID SIGN ?
         BNO   DODSORG       NO; SKIP
         SLR   R1,R1         CLEAR HIGH BYTE
         ICM   R1,7,DS1REFD  LOAD IT
         BAL   R9,GETDATE    CONVERT PACKED DATE
.NODTSDT SPACE 1
*        PROCESS DSORG, RECFM, ETC.
         SPACE 1
DODSORG  SERVCALL DSFMT,DS1DSORG   FORMAT COMMON FIELDS
         MVC   DSORG(LENFMT),0(R1)  MOVE RESULTS
         CLI   DSORG,C' '    ANY DSORG ?
         BNE   *+8           YES
         MVI   DSORG,C'?'      TOO BAD ?
         CLI   RECFM,C' '    ANY RECFM ?
         BNE   *+8           YES
         MVI   RECFM,C'?'      TOO BAD ?
         SPACE 1
*        PROCESS SECONDARY ALLOCATION
         SPACE 1
         SLR   R1,R1
         IC    R1,DS1SCALO   GET SECONDARY ALLOCATION OPTIONS
         SRL   R1,6
         MH    R1,=H'3'
         LA    R1,PATSCALO(R1)   GET ABBREVIATION
         MVC   ALLOCTYP,0(R1)
         SPACE 1
*        START COUNTING TRACKS
         SPACE 1
         LA    R14,IECSDSL1  POINT TO FORMAT 1
         SLR   R15,R15       CLEAR FORMAT 3 POINTER
         STM   R14,R15,STARUCBA+4   MAKE CALLING LIST
         CLI   DS1NOEPV,3    MORE THAN THREE EXTENTS ?
         BL    FMTRACK       NO; DONE
         BH    FMTRD         YES; READ EXTENSION
         CLI   DS1EXT1,X'40'   LABEL TRACK ?
         BNE   FMTRACK       NO; NO FMT3 EXPECTED
FMTRD    VOLREAD DSC3        GET CHAINED DSCB
         BXH   R15,R15,FMT3ERR  NO; SIGNAL ERROR
         LR    R1,R0         LOAD THE DSCB ADDRESS
         USING IECSDSL3,R1
         CLI   DS3FMTID,C'3'           REALLY A FORMAT 3 ?
         BNE   FMTRD                   BRANCH IF FORMAT 2
         ST    R1,STARUCBA+8  PLACE ADDRESS IN CALLING SEQUENCE
         DROP  R1
         B     FMTRACK       DONE
         SPACE 1
FMT3ERR  OI    FLAGDSN,FGFMT3  SHOW ERROR GETTING FORMAT 3 DSCB
         SPACE 1
*        FORMAT TRACKS AND LSTAR
         SPACE 1
FMTRACK  SERVCALL DVEXT,STARUCBA  GET EXTENT SIZE IN TRACKS
         BXLE  R15,R15,FMTRACKS  SKIP IF NO ERROR
         OI    FLAGDSN,FGFMT3  SHOW ERROR GETTING EXTENTS
FMTRACKS ST    R0,TRACKS     SAVE FOR FORMATTING
         SLR   R2,R2         CLEAR FOR ICM
         ICM   R2,3,DS1LSTAR  GET TRACKS FROM LSTAR
         CLI   DS1LSTAR+2,0   ANY RECORD NUMBER ?
         BE    *+8           NO
         LA    R2,1(,R2)     ELSE INCREASE TRACK COUNT
         CR    R2,R0         MORE THAN 100% USED ?
         BNH   *+6           NO
         LR    R2,R0         YOU'RE KIDDING ?
         ST    R2,TRACKUSE   SET TRACKS IN USE
         A     R0,TOTRACKS   ADD TO VOLUME TOTAL
         ST    R0,TOTRACKS             PUT IT BACK
         TM    DSLFG,PSNAP   SNAP REQUESTED ?
         BZ    SNAPTEST      NO
         NI    DSLFG,255-PSNAP  PROVISIONALLY RESET SNAP OPTION
SNAPCHEK CLC   =H'80',DS1BLKL  MINIMUM BLOCKSIZE ?
         BH    SNAPTEST      NO; SKIP
         CLC   =H'&WYBLKMX',DS1BLKL  MAXIMUM BLOCKSIZE ?         92128
         BL    SNAPTEST      TOO BIG; TOO BAD
         TM    DS1DSIND,X'40'    RACF PROTECTED ?
         BNZ   SNAPCACC      YES; CHECK ACCESS PRIVILEGES
         TM    DS1DSIND,X'14'  READ PROTECT PASSWORD ?
         BNM   *+12          NO; OK
SNAPCACC TM    ACCTPRIV,VAASYS+VAASUP  PRIVILEGED ?
         BZ    SNAPTEST      NO; REJECT IT
         CLI   DS1KEYL,0     NO KEYS ?
         BNE   SNAPTEST      TOO BAD
         TM    DS1RECFM,DCBRECU  CHECK RECFM
         BZ    SNAPTEST      NONE - NO SNAP
         BO    SNAPCHEW      U - LRECL MUST MATCH BLOCKSIZE
*   THE LRECL TEST WAS FOR 137 BYTES (133+RDW), BUT WAS INCREASED TO
*       260 BECAUSE THAT'S THE DEFAULT SIZE FOR OUR KERMIT UPLOADS.
*   MANY USERS DON'T CHANGE THE DEFAULT BEFORE FILE TRANSFERS. TSK,TSK!
         CLC   =H'260',DS1LRECL  PRINTABLE LENGTH ?              92254
         BL    SNAPTEST      NO; TOO BAD
         OC    DS1LRECL(2),DS1LRECL    ANY RECORD LENGTH ?
         BZ    SNAPTEST      NO; TOO BAD
         B     SNAPSNAP      ELSE TRY IT
SNAPCHEW CLC   DS1LRECL(2),DS1BLKL  LRECL=BLKSIZE ?
         BNE   SNAPTEST      NO; TOO BAD
SNAPSNAP OI    DSLFG,PSNAP   YES
SNAPTEST TM    DS1NOEPV,255  PATTERN DSCB ?
         BZ    DSNFINIS      YES; SKIP
         CLC   DS1LSTAR(3),ZEROES  INITIALIZED ?
         BE    DSNFINIS      NO; SKIP
         TM    DSLFG,PPDS+PDIR+PSNAP   ANY OPTIONS ENABLED ?
         BZ    DSNFINIS      NO; JUST PRINT
         PRTSPACE 0          FORCE OUT PRIOR LINE
         QROOM 2             ALLOW FOR TWO LINES
         SPACE 1
         TM    DS1DSORG,DCBDSGPO  PARTITIONED DATA SET ?
         BZ    DSNGO         NO; CHECK FOR SNAP OPTION
         TM    PROP,PPDS     DIRECTORY COUNTS WANTED?           GP12056
         BZ    DSNGO           NO; SKIP READING                 GP12056
         SLR   R8,R8         CLEAR DIRECTORY BLOCKS USED
         SLR   R9,R9         CLEAR DIRECTORY BLOCKS READ
DIRLOOP  VOLREAD READ        READ A BLOCK
         CH    R15,=H'4'
         BE    DIREOF        END-FILE
         BH    DIRROR        ERROR
         LR    R6,R0         COPY BLOCK ADDRESS
         CLC   =X'080100',5(R6)  DIRECTORY BLOCK COUNT FIELD ?
         BNE   DIRROR        NO; ERROR
         LA    R9,1(,R9)     UP ALLOCATED COUNT
         TM    FLAGDSN,FGDEOF  LOGICAL END OF DIRECTORY PASSED ?
         BNZ   DIRLOOP       YES; JUST COUNT ALLOCATED BLOCKS
         LA    R8,1(,R8)     UP USED COUNT
         CLI   8(R6),X'FF'   END-KEY ?
         BNE   DIRLOOP       NO; DO IT AGAIN
         OI    FLAGDSN,FGDEOF  SET LOGICAL END
         B     DIRLOOP       COUNT ALLOCATED BLOCKS ONLY
         SPACE 1
DIRROR   OI    FLAGDSN,FGERR  SET ERROR FLAG
DIREOF   STH   R8,DIRUSE     SET BLOCKS USED
         STH   R9,DIRALL     SET DIRECTORY BLOCKS ALLOCATED
         TM    FLAGDSN,FGERR  ERROR ?
         BZ    PDSDOMEM      NO
DERROR   TM    FLAGDSN,FGDSN  WAS DSN LINE PRINTED PREVIOUSLY ?
         BNZ   DERROR1       YES
         PRTSPACE 0          FORCE OUT PRIOR LINE
         QROOM 3             ROOM FOR THREE LINES
         QSPACE 1            DOUBLE-SPACE
         BAL   R9,PRINTDSN   PRINT DSN INFO
DERROR1  PRTLIST DIRIOERR,DEV=1     SIGNAL ERROR
         PRTDATA 'Directory error on',(VOLSER,PAD),'in',(DS1DSNAM,DEB,P*
               AD),DEV=2                                        GP12056
         OICC  4             SET MINOR ERROR                    GP12056
         PRTSPACE 0          FORCE OUT PRIOR LINE
         QSPACE 1
         B     NEXTDSCB
         SPACE 1
PDSDOMEM TM    DSLFG,PDIR    DIRECTORY LISTING DESIRED ?        GP12056
         BZ    DSNFINIS      NO; JUST PRINT TOTALS
         MVC   PDDRECFM,DS1RECFM  SET RECFM FOR PDSDE
         PRTSPACE 0          FORCE OUT PRIOR LINE
         SLR   R0,R0
         LR    R1,R8         GET NUMBER OF DIRECTORY ENTRIES
         D     R0,=F'6'      GET APPROXIMATE NUMBER OF LINES
         LTR   R0,R0         PARTIAL LINE ?
         BZ    *+8           NO
         LA    R1,1(,R1)     ALLOW FOR PARTIAL LINE
         LA    R1,3(,R1)     ALLOW FOR COMMON HEADER
         TM    DSLFG,PSNAP   SNAP OPTION ?
         BZ    *+8           NO
         LA    R1,3+5        SET FOR FIRST ENTRY ONLY
         QROOM (R1)          RESERVE CONTIGUOUS SPACE FOR HEADER
         QSPACE 1            DOUBLE SPACE
         BAL   R9,PRINTDSN   PRINT THE DATA SET INFORMATION
         LTR   R9,R8         ANY BLOCKS USED ?
         BNP   PDSFINIS      NO; SAY SO
         TM    DS1RECFM,DCBRECU  RECFM=U ?
         BZ    PDSLOOP       SKIP IF NONE
         BNO   PDSDOSF                                           79322
         CLC   DS1BLKL,=H'&WYBLKMX'  REASONABLE ?                92128
         BH    PDSLOOP
         B     PDSDOSSI                                          79322
PDSDOSF  TM    DS1RECFM,DCBRECF  F ?
         BZ    PDSLOOP
         CLC   DS1LRECL,=H'80'  CARD ?                           79322
         BNE   PDSLOOP       NO
PDSDOSSI OI    FLAGDSN,FGWYL  SET WYLIB SWITCH
PDSLOOP  VOLREAD GETDE       GET A DIRECTORY ENTRY
         CH    R15,=H'4'     CHECK IT
         BH    DERROR        REPORT ERROR
         BE    PDSFINIS      DONE
         LR    R4,R0         SAVE ADRESS OF THE ENTRY
         TM    DSLFG,PSNAP   SNAP OPTION FOR THIS MEMBER ?
         BZ    PDSNSNAP      NO
         PRTSPACE 0          FORCE OUT PRIOR LINE
         QROOM 6             MAKE CONTIGUOUS SPACE
PDSNSNAP MVC   MEMLONG,MEMLONG-1  CLEAR MEMBER PRINT LINE
         ST    R4,PDDNEXT    SET DIRECTORY ADDRESS FOR FORMATTING
         SERVCALL PDSDE,PDDNEXT  FORMAT THE DIRECTORY ENTRY
         LR    R1,R0         COPY RETURN ADDRESS
         MVC   PDDRALIS(PDDRBLNK),0(R1)  SAVE RETURN
         MVC   MEMALIAS(L'MEMALIAS+L'MEMNAME),PDDRALIS  COPY MEMBER
         CLI   MEMALIAS,C'*' ALIAS ENTRY ?
         BNE   *+8           NO
         MVI   MEMALIAS,C'-'   YES; CONVERT TO OLD FORMAT
         OI    FLAGDSN,FGMEM  SHOW AT LEAST ONE MEMBER DONE
         LA    R3,MFDSHORT   SET FOR SHORT PRINT ENTRY
         TM    FLAGDSN,FGWYL  WYLIB ?
         BNZ   PDSWYLDT      YES; SEE IF DATE PRESENT
         CLI   PDDRDATE,C' '   DATE RETURNED ?
         BE    PDSNWLIB      NO; PRINT SHORT ENTRY
         OI    FLAGDSN,FGWYL   USE LONG MODE FROM NOW ON
PDSWYLDT CLI   PDDRDATE,C' '   DATE RETURNED ?
         BE    PDSWYLD       NO; LEAVE BLANK
         PACK  DB(4),PDDRDATE   PACK THE DATE
         L     R1,DB         LOAD IT
         LA    R7,MEMDATE    POINT TO OUTPUT FIELD
         BAL   R9,GETDATE    CONVERT TO MM/DD/YY FORM
PDSWYLD  LA    R3,MFDLONG    SET FOR LONG MEMBER ENTRY
PDSNWLIB PRTLIST (R3)        PRINT THE MEMBER ENTRY
         TM    DSLFG,PSNAP   PRINT MEMBER TEXT ALSO ?
         BZ    PDSLOOP       NO; DO NEXT MEMBER
         BAL   R9,SNAPSHOT   READ THE TEXT
         B     PDSLOOP       GET NEXT MEMBER
         SPACE 1
PDSFINIS TM    FLAGDSN,FGMEM  ANY MEMBERS PRINTED ?
         BNZ   PDSFINIX      YES
         LA    R3,NOMEMB     SET ERROR MESSAGE
         BAL   R9,SNAPQUIT
PDSFINIX PRTSPACE 0          FORCE OUT PRIOR LINE
         QSPACE 1            INSERT EXTRA SPACE
         B     NEXTDSCB      DO NEXT DSN
         SPACE 2
DSNGO    TM    DS1DSORG,DCBDSGPS  PS ?
         BZ    DSNFINIS      NO
         TM    DSLFG,PSNAP   SNAP OPTION ?
         BZ    DSNFINIS      NO
         PRTSPACE 0          FORCE OUT PRIOR LINE
         QROOM 7             LEAVE SPACE FOR 7 LINES
         QSPACE 1            DOUBLE SPACE
         BAL   R9,PRINTDSN   PRINT DATA SET INFORMATION
         BAL   R9,SNAPSHOT   READ TEXT
         PRTSPACE 0          FORCE OUT PRIOR LINE
         QSPACE 1            SPACE AFTER
         B     NEXTDSCB      DONE WITH DATA SET
         SPACE 1
DSNFINIS LA    R9,NEXTDSCB   SET RETURN FROM PRINT
PRINTDSN TM    FLAGDSN,FGDSN   DATA SET LINE PRINTED PREVIOUSLY ?
         BNZR  R9            YES; RETURN TO CALLER
         PRTLIST DSNFD       PRINT THE DATA SET INFORMATION
         OI    FLAGDSN,FGDSN   SHOW DSN LINE PRINTED
         TM    FLAGDSN,FGFMT3  ERROR GETTING FORMAT THREE ?
         BZR   R9            NO; RETURN
         PRTLIST OBT3MSG     PRINT THE ERROR MESSAGE
         PRTDATA 'Extent processing error on',(VOLSER,PAD),'for',(DS1DS*
               NAM,PAD,DEB),DEV=2                               GP12056
         OICC  4             SET MINOR ERROR                    GP12056
         PRTSPACE 0          FORCE NEW LINE (FOR MEMBER LIST)
         BR    R9            RETURN TO CALLER
         SPACE 1
*        DO VOLUME TOTALS
         SPACE 1
DOTOTALS PRTSPACE 0          FORCE LAST LINE
         XC    SORTDSN,SORTDSN
         MVI   SORTDSN,X'FF'  MAKE AT END OF VOLUME LISTING
         TM    PROP,PDATA    ANY DATA FOUND ?
         BO    DOTOT2                  BRANCH IF SO
         TM    PROP,PAUTO    AUTOMATIC LOOK-UP MODE ?
         BNZ   LOOPTIOT      YES; SKIP PRINTOUT
         PRTLIST NODATA      ELSE INDICATE NONE
         B     LOOPTIOT      GET NEXT VOLUME
DOTOT2   L     R0,TOTRACKS
         A     R0,ALLTRACK   TOTAL PER JOB
         ST    R0,ALLTRACK   STASH BACK
         LH    R0,TOTDSNS    GET DSN COUNT
         A     R0,ALLDSNS
         ST    R0,ALLDSNS    UPDATE DSN COUNT
         PRTLIST TOTALMSG,DEV=(1,2)
         B     LOOPTIOT                GO GET A NEW VOLUME
         SPACE 1
*        FORMAT 4 OBTAIN ERROR ROUTINE
         SPACE 1
SKIPVOL  SRL   R15,1         COMPENSATE FOR BXH
         ST    R15,DB        SAVE CODE FOR FORMATTING
         PRTSPACE 0          FORCE PREVIOUS LINE
         XC    SORTDSN,SORTDSN
         MVI   SORTDSN,X'FF'  MAKE AT END OF VOLUME LISTING
         PRTLIST OBT4MSG,DEV=(1,2)    VOLUME SKIPPED MESSAGE
ERR8TIOT OICC  8             SET NOT SO MINOR ERROR             GP12056
         B     LOOPTIOT                GET NEXT VOLUME
         SPACE 1
DSCBIOER SRL   R15,1         ADJUST FOR BXH
         ST    R15,DB        SAVE FOR FORMATTING
         PRTSPACE 0          FORCE PREVIOUS LINE
         XC    SORTDSN,SORTDSN
         MVI   SORTDSN,X'FF'  MAKE AT END OF VOLUME LISTING
         PRTLIST IOERMSG,DEV=(1,2)
         B     ERR8TIOT                                         GP12056
         SPACE 1
ALLDONE  PRTSPACE 0          FORCE PREVIOUS LINE
         VOLREAD CLOSE       DONE WITH INPUT
         TM    POPS,PSORT    NEED TO INVOKE SORT ?
*TEST*   BZ    ENDOJOB       NO
         XC    SORTKEY(SORTKEYL),SORTKEYL  CLEAR AGAIN
         MVI   SORTDSN,X'FF'
         QSPACE 1            DOUBLE-SPACE VOLUME SUMMARIES
         MVI   SORTDSN+1,X'FF'  MAKE AT VERY END
         QSPACE 1            DOUBLE-SPACE
         PRTLIST DONEMSG,DEV=(1,2)
         PRTSPACE 0,DEV=(1,2)  FORCE LAST LINE WRITE
         CLOSE (SORTIN)      CLOSE SORT INPUT FILE
         SERVCALL FREEM      DELETE ALL BUT PRINTER SERVICE
         MVI   PRTEXLST,PUXFEND  DISABLE EXIT
         LA    R1,SORTPARM   GET SORT
         LA    R2,RETCODE    GET ECB ADDRESS                    GP12056
*TEST*   LINK  EP=SORT       INVOKE SORT
         ATTACH EP=SORT,ECB=(R2),SZERO=NO
         ST    R1,@SUBTASK
         WAIT  ECB=RETCODE                                      GP12056
         MVI   RETCODE,0     CLEAR HIGH BITS                    GP12056
         DETACH @SUBTASK
         B     ENDOJOB
ALLEMPTY MVI   PRTEXLST,PUXFEND  DISABLE EXIT
         PRTSPACE 2          TRIPLE-SPACE NEXT LINE
         PRTLIST DONEMSG,DEV=(1,2)     FINAL WRITES
ENDOJOB  SERVTERM ,          CLOSE AND FREE EVERYTHING
         L     R9,RETCODE    LOAD COMPLETION CODE               GP12056
         PGMEXIT RC=(R9)     QUIT
         SPACE 1
BADPARM  PRTV  BADPARMG,DEV=(1,2)     SHOW BAD PARM LIST
         SERVTERM ,          CLOSE PRINT FILE
         ABEND 666           AND QUIT
         SPACE 3
SNAPSHOT LA    R5,5          SET FOR FIVE LINES
SNAPREAD VOLREAD READ        READ A BLOCK
         LR    R8,R0         COPY BLOCK ADDRESS
         CH    R15,=H'4'     CHECK RETURN
         BH    SNAPPER       ?
         BE    SNAPEOF       END-FILE
SNAPBLOK CLI   5(R8),0       ZERO KEY ?
         BNE   SNAPPER       NO; ERROR
         LH    R6,6(,R8)     GET BLOCK LENGTH
         LA    R7,8(R6,R8)   GET LAST BYTE +1
         BCTR  R7,0          POINT TO LAST BYTE
         TM    DS1RECFM,DCBRECU  CHECK RECFM
         BO    SNAPWYL       PRESUMED WYLBUR FORMAT
         TM    DS1RECFM,DCBRECF  FIXED ?
         BZ    SNAPVARB      NO, VARIABLE
         LA    R8,8(,R8)     SKIP COUNT FIELD
         LH    R6,DS1LRECL   GET RECORD LENGTH
         LA    R7,1(,R7)     GET LAST+1 BYTE AGAIN
         SR    R7,R6         POINT TO LAST POSSIBLE RECORD
         CR    R8,R7         ANY RECORDS AT ALL ?
         BH    SNAPPER       NO; ERROR
SNAPFIXL LR    R1,R6         COPY RECORD LENGTH
         LR    R2,R8         COPY RECORD ADDRESS
         BAL   R4,SNAPLINT   PRINT A LINE
         BXLE  R8,R6,SNAPFIXL  DO ANOTHER LINE
         B     SNAPREAD      GET ANOTHER BLOCK
         SPACE 1
SNAPVARB CLC   6(2,R8),8(R8)  BLOCK SIZE < DATA LENGTH ?
         BL    SNAPPER       YES; ERROR
         LA    R8,8(,R8)     SKIP OVER COUNT HEADER
         ICM   R6,3,0(R8)    GET BDW LENGTH
         BNP   SNAPPER       INVALID IF NOT POSITIVE
         LA    R7,0(R6,R8)   SET LAST BYTE +1
         LA    R6,4          SET LENGTH OF FIRST ENTRY (BDW)
         BXH   R8,R6,SNAPPER  ERROR IF SHORT BLOCK
SNAPVARL ICM   R6,3,0(R8)    GET RDW OF NEXT RECORD
         BNP   SNAPPER       INVALID IF NOT POSITIVE
         LA    R0,4          SET OVERHEAD
         LR    R1,R6         COPY LENGTH
         SR    R1,R0         SET TEXT LENGTH
         BM    SNAPPER       TOO BAD
         LA    R2,4(,R8)     POINT TO TEXT
         LA    R14,0(R1,R2)  GET NEXT RECORD ADDRESS
         CR    R14,R7        STILL IN BLOCK ?
         BH    SNAPPER       NO; ERROR
         BAL   R4,SNAPLINT   PRINT THE LINE
         BXLE  R8,R6,SNAPVARL  DO ANOTHER LINE
         B     SNAPREAD      ELSE READ ANOTHER BLOCK
         SPACE 1
SNAPWYL  MVC   WYLDCOMP(PATDCOML),PATDCOMP  MOVE DECOMPRESS CODE
         MVC   DCMBUFMX,6(R8)   MOVE BLOCK LENGTH
         LA    R1,8(,R8)     GET BUFFER ADDRESS
         ST    R1,DCMBUFAD   STASH IN BLOCK
SNAPWYLR SERVCALL WDCOM,WYLDCOMP   DECOMPRESS
         CH    R15,=H'4'     CHECK RETURN
         BH    SNAPNEDT      NOT EDIT FORMAT
         BE    SNAPREAD      END OF BLOCK; GET ANOTHER
         MVC   INT(1),DCMLINEH  GET OVERFLOW BYTE OF LINE NUMBER
         MVC   INT+1(8),DCMLINEB  MOVE REST OF NUMBER
         L     R2,DCMRECAD   GET THE TEXT LINE
         LH    R1,DCMRECLN   GET THE LENGTH
         LA    R0,8          CONSTANT
         AR    R2,R0         SKIP THE LINE NUMBER
         SR    R1,R0         ADJUST LENGTH
         LA    R3,WYLFD      POINT TO FD LIST
         BAL   R4,SNAPLINE   PRINT A LINE
         B     SNAPWYLR      DO ANOTHER RECORD
         SPACE 1
SNAPLINT LA    R3,LINEFD     SET FOR NON-WYLBUR PRINT LINE
SNAPLINE SLR   R0,R0
         IC    R0,FDILEN-2-FDSECT+PATFD  LOAD MAX LENGTH
         CR    R1,R0         GREATER THAN MAX LENGTH ?
         BNH   *+6           NO
         LR    R1,R0         SET FOR MAX
         MVC   VARFD(PATFDLEN),PATFD  MOVE PATTERN FD ENTRY
         STC   R1,FDILEN-FDSECT-2+VARFD   SET FD LENGTH
         PRTLIST (R3)        PRINT ONE DATA LINE
         BCTR  R5,R4         RETURN TO CALLER
         BR    R9            RETURN TO MAIN-LINE
         SPACE 1
SNAPPER  LA    R3,ERRSNAP
         B     SNAPQUIT      AND EXIT
SNAPEOF  CH    R5,=H'5'      ANY DATA PRINTED ?
         BNER  R9            YES; NORMAL EOF - GO TO MAIN-LINE
         LA    R3,EOFSNAP
         B     SNAPQUIT
SNAPNEDT LA    R3,NOTEDIT    DATA NOT EDIT
SNAPQUIT PRTLIST SNAPMSG     PRINT ERROR LINE
         BR    R9            RETURN TO MAIN-LINE
         SPACE 1
*        ROUTINES FOR DATE CONVERSION
         SPACE 1
DS1DATE  XC    DB,DB         DSCB FORMAT DATE CONVERSION
*Y2K*    CLI   1(R1),99      VALID YEAR ?                       GP12060
*Y2K*    BHR   R9            NO; RETURN                         GP12060
         CLC   DB(2),2(R1)   VALID DAY ?
         BER   R9            NO
         CLC   2(2,R1),=H'366'
         BHR   R9            TOO HIGH; TOO BAD
         SLR   R0,R0
         IC    R0,1(,R1)     LOAD YEAR
         MH    R0,=H'1000'
         AH    R0,2(,R1)     ADD DAY
         CVD   R0,DB         CONVERT TO PACKED
         OI    DB+7,X'0F'    MAKE SURE
         L     R1,DB+4       LOAD FOR GETDATE
         SPACE 1
GETDATE  STM   R1,R5,SAVE1T5
         XC    DB,DB
         LR    R3,R1         COPY FOR CHECK
         LA    R5,9          LARGEST VALID DIGIT
         LA    R4,7          CHECK SEVEN DIGITS
GETDATEC SLR   R2,R2         CLEAR
         SLDL  R2,4          SHIFT A DIGIT
         CR    R2,R5         VALID ?
         BH    GETDATEX      INVALID; QUIT
         BCT   R4,GETDATEC   TRY NEXT
         LR    R2,R1         RELOAD
         STH   R1,DB+6
         OI    DB+7,X'0F'
         CVB   R1,DB
         LTR   R1,R1         ANY DAY ?
         BZ    GETDATEX      NO; QUIT
         CH    R1,=H'366'    REASONABLE ?
         BH    GETDATEX      NO; QUIT
         SRA   R2,12
         STH   R2,DB+6
         OI    DB+7,X'0F'
         CVB   R2,DB                   YEAR
         SLR   R0,R0
         SLR   R3,R3
         SRDL  R2,2
         LTR   R3,R3
         SLDL  R2,2
         BNZ   D3
         CH    R1,=H'60'               FEB. 29TH. ?
         BL    D3                      IF LOW IGNORE LEAP YEAR
         BH    D2
         LA    R0,1
D2       BCTR  R1,R0
D3       LA    R4,TABL
         LR    R5,R4
DLP      CH    R1,2(,R4)
         BNH   DF
         LA    R4,2(,R4)
         B     DLP
DF       SH    R1,0(,R4)
         AR    R1,R0                   ADD 1 IF LEAP YEAR
         LA    R4,2(,R4)
         SR    R4,R5
         SRL   R4,1
         MH    R4,=H'100'
         AR    R1,R4
         MH    R1,=H'100'
         AR    R1,R2
         CVD   R1,DB
         MVC   INT(10),PATDATE
         ED    INT(10),DB+4
         MVC   0(8,R7),INT+2
GETDATEX LM    R1,R5,SAVE1T5
         BR    R9
         EJECT
*        CONSTANTS AND STUFF
         SPACE 1
PATSCALO DC    C'?  BLKTRKCYL'
SYSPRINT PRTWORK SYSPRINT,TITLE=3,EXLST=PRTEXLST
PRTEXLST DC    AL1(PUXFEND,0),AL4(0)  PRINTER EXIT LIST
SUMPRINT PRTWORK SUMPRINT,TITLE=3                               GP12056
         SPACE 1
         PRINT NOGEN
PATDCOMP SERVCOMP DSECT=NO,PFX=PCM,FG1=(PCMF1EDT+PCMF1TSO)
PATDCOML EQU   *-PATDCOMP
         PRINT &PRTSYS
         SPACE 1
LIBPAT   CLC   LIBMASK(5),DS1DSNAM-IECSDSL1(R1)  LIBPAK ACCOUNT GP12056
WYLPAT   CLC   WYLMASK(8),DS1DSNAM-IECSDSL1(R1)  WYLBUR 4/8 ACC GP12056
TSOPAT   CLC   DSNMASK(0),DS1DSNAM-IECSDSL1(R1)  TSO/GENERIC    GP12056
PDCAVTOC DC    0CL5'*VTOC',C'*'
PDCVTOC  DC    0C'VTOC'
PDCVTOCA DC    C'VTOC-ALL'
PDCAACCT DC    0CL5'*ACCT',C'*'
PDCACCT  DC    0C'ACCT'
PDCACCTA DC    C'ACCT-ALL'
PDCSNAP  DC    C'SNAP'
PDCPDS   DC    C'PDS'
         SPACE 1
AST30    DC    C'******************************'
         SPACE 1
TABL     DC    H'0,031,059,090,120,151,181,212,243,273,304,334,365'
PATDATE  DC    X'F0212020612020612020'
         SPACE 2
         LTORG
         EJECT
*        MESSAGES - HEADINGS, ETC.
         SPACE 1
         PRINT NOGEN
TITLE    FDOPT NL,CC=C'#'    AUTOMATIC DATE/TIME/PAGE OPTION
         FDSPACE 4
         FDPRT 'WYLBUR DATA SET SUMMARY'
         FDCLI VOLSER,0,BE=TITLECX  SKIP REST ON SETUP PAGE
         FDPRT 'FOR VOLUME',PAD
         FDPRT VOLSER,DEB,PAD          VOLSER
         FDPRT '('
         FDPRT VOLTYPE,DEB
         FDPRT ') ON UNIT',PADR
         FDPRT VOLUNIT
         FDPRT ', DD',PADR
         FDPRT VOLDDNM,DEB
TITLECX  FDPRT *END
         SPACE 1
SUBHEAD  FDOPT NL,CC=C' '
         FDSPACE 8
         FDPRT 'DATA SET NAME',LEN=36
         FDPRT ' VOLSER  ALLOC.    USED  EXT  TRKS USED  SECONDARY'
         FDPRT ' ORG  RECFM LRECL BLKSIZE    DIR USED',PADL
         FDPRT *END
SUBHEADX FDPRT 'STATUS'
         FDPRT *END
         SPACE 1
DSNFD    FDPRT DS1DSNAM,NL   DSN
         FDPRT VOLSER,PAD    SERIAL
         FDPRT ALODATE,PADL
         FDPRT LASTUSE,PAD
         FDPRT DS1NOEPV,I,RADJ,LEN=2
         FDPRT TRACKS,I,RADJ,LEN=6
         FDPRT TRACKUSE,I,RADJ,PADL,LEN=5
         FDPRT DS1SCALO+1,3,I,RADJ,LEN=6
         FDPRT ALLOCTYP,PADL,LEN=L'ALLOCTYP+2
         FDPRT DSORG,LEN=L'DSORG+2
         FDPRT RECFM,PADR,LEN=5
         FDPRT LRECL,RADJ,LEN=5
         FDPRT BLKSIZE,RADJ,LEN=8
         FDCLC DIRALL,ZEROES,2,BE=DSNFDX  QUIT IF NO DIRECTORY BLOCKS
         FDPRT DIRALL,I,RADJ,LEN=6
         FDPRT DIRUSE,I,RADJ,LEN=6
DSNFDX   FDPRT *END
         SPACE 1
MFDLONG  FDPRT MEMLONG       PRINT LONG FORMAT MEMBER ENTRY
         FDPRT *END
MFDSHORT FDPRT MEMSHORT      PRINT SHORT FORMAT MEMBER ENTRY
         FDPRT *END
         SPACE 1
PATFD    FDPRT 0(R2),116     PATTERN FD ENTRY (ILEN REPLACED IN COPY)
PATFDLEN EQU   *-PATFD
         SPACE 1
LINEFD   FDPRT ' ',NL,LEN=16
         FDGOTO WYLNCOM
WYLFD    FDPRT ' ',NL,LEN=6
         FDPRT INT,PADR,LEN=9
WYLNCOM  FDEXEC VARFD        DO VARIABLE LENGTH TEXT
         FDPRT *END
         SPACE 1
OBT4MSG  FDOPT NL,CC=C'0'    DOUBLE-SPACE
         FDPRT AST30,LEN=10
         FDPRT 'VOLUME',PAD
         FDPRT VOLSER,DEB,PAD
         FDPRT 'SKIPPED DUE TO FORMAT 4 PROCESSING ERROR.',PAD
OBTCOM   FDPRT 'CONDITION CODE=',PADL
         FDPRT DB,4,I,PADR
OBTCOMAS FDPRT AST30,LEN=10
OBTCOMX  FDPRT *END
         SPACE 1
OBT3MSG  FDPRT AST30,NL,PADR,LEN=10
         FDPRT 'ERROR PROCESSING EXTENTS; TRACK COUNT INCORRECT.'
         FDGOTO OBTCOMAS
         SPACE 1
IOERMSG  FDOPT NL,CC=C'0'    DOUBLE-SPACE
         FDPRT AST30,PADR,LEN=10
         FDPRT 'VOLUME',PAD
         FDPRT VOLSER,DEB,PAD
         FDPRT 'SKIPPED DUE TO OBTAIN ERROR DURING SEQUENTIAL VTOC SEAR*
               CH.',PADR
         FDGOTO OBTCOM
         SPACE 1
DIRIOERR FDPRT AST30,NL,LEN=L'AST30+15
         FDPRT 'DIRECTORY I/O ERROR',LEN=34
         FDPRT AST30
         FDPRT *END
         SPACE 1
DONEMSG  FDPRT AST30,NL
         FDPRT 'WYLVTOCS PROCESSING DONE',PADL
         FDPRT ALLTRACK,I,RADJ,PAD,LEN=10
         FDPRT 'TRACKS LISTED FOR',PAD
         FDPRT ALLDSNS,I,RADJ,LEN=6
         FDPRT 'DATA SETS',PAD
         FDPRT AST30
         FDPRT *END
         SPACE 1
NODATA   FDPRT AST30,NL,PADR,LEN=15
         FDPRT 'NO DATA SETS FOUND ON VOLUME'
         FDPRT VOLSER,PAD
         FDPRT 'MATCHING THE REQUEST.'
         FDGOTO MASKFD       GO TO DISPLAY THE MASK
         SPACE 1
TOTALMSG FDPRT ' ',NL,LEN=30
         FDPRT TOTRACKS,I,RADJ,PAD,LEN=7
         FDPRT 'TRACKS LISTED FOR',PAD
         FDPRT TOTDSNS,I,RADJ,LEN=6
         FDPRT 'DATA SETS ON VOLUME',PAD
         FDPRT VOLSER,PADL
         FDPRT '.',PADR
MASKFD   FDTM  ACCTPRIV,MASKVTOC,BO=MASKFDX   NO MASK
         AIF   (NOT &LOCO).NLOC9
         FDTM  ACCTPRIV,MASKVTU,BZ=MASKFDAT  NOT VTOC
         FDTM  VOLFLAGS+1,VF2DSNA+VF2DSNT,BZ=MASKFDX  NO MASK ON USRVOL
MASKFDA  FDPRT 'MASK: ACCT=',PADL
         FDPRT DSNACCT,4
         FDPRT *END
MASKFDAT FDTM  ACCTPRIV,MASKACCT,BO=MASKFDA
.NLOC9   ANOP  ,
MASKFDN  FDPRT 'MASK:',PAD
         FDPRT DSNMASK,DEBR
MASKFDX  FDPRT *END
         SPACE 1
SNAPMSG  FDPRT ' ',LEN=20
         FDPRT AST30,PADR,LEN=5
         FDPRT 0(R3),24      VARIABLE TEXT
         FDPRT AST30,PADL,LEN=5
         FDPRT *END
ERRSNAP  DC    CL24'ERROR IN TEXT PROCESSING'
EOFSNAP  DC    CL24'END FILE READ - NO TEXT'
NOTEDIT  DC    CL24'DATA NOT IN EDIT FORMAT'
NOMEMB   DC    CL24'NO MEMBERS IN THIS PDS'
         SPACE 1
BADPARMG VCON  '-******* INCORRECT PARM FIELD *******'
         SPACE 1
MSGUNAUT VCON  ' RESTRICTED PROGRAM'
         SPACE 2
         PRINT &PRTMAC       EXPAND LOCAL MACROS
SAVE     DSECT ,             SAVE/WORK AREA
SORTSAVE DS    18F           SAVE AREA FOR SORT EXITS
ZEROES   DC    D'0'          CONSTANT
DB       DC    D'0'
         SERVDEFS ,          SERVICE ROUTINE ADJUNCTS           GP12056
@VOLREAD DC    A(0)          VTOC READ ROUTINE
@SUBTASK DC    A(0)          SORT TCB ADDRESS
SAVE1T5  DC    5A(0)
ADDRTIOT DC    A(0)
         SPACE 1
         SERVCALC MF=D       EXPAND MAPPING FOR TRKCALC
         SPACE 1
ALLTRACK DC    F'0'          TRACKS LISTED FOR THIS RUN
ALLDSNS  DC    F'0'          NUMBER OF DATA SETS IN THIS RUN
MASKLEN  DC    F'0'
         SPACE 1
         MAPPARSE DSECT=NO                                      GP12056
         SPACE 1
POPS     DC    AL1(0)        PROCESS OPTIONS
OPTINCL  EQU   128             INCLUDE WAS FIRST OPTION
OPTINC   EQU   64              INCLUDE CARDS PRESENT
OPTEXC   EQU   32              EXCLUDE CARDS PRESENT
PSORT    EQU   1             INVOKE THE SORT
         SPACE 1
PROP     DC    AL1(0)          PROCESS OPTIONS
PDATA    EQU   128             DATA SET FOUND ON THIS VOLUME
PAUTO    EQU   64              AUTOMATIC VOLUME RETRIEVAL (UCB LOOP)
PDSCB    EQU   8               PRINT DSCB LINE ONLY
PSNAP    EQU   4               PRINT 5 LINES OF DATA
PPDS     EQU   2               PRINT MEMBER NAMES
PDIR     EQU   1               COUNT DIRECTORY BLOCKS
         SPACE 1
DSLFG    DC    X'00'         LOCAL COPY OF SNAP OPTIONS
         SPACE 1
ACCTPRIV DC    X'00'         SAVE ACCOUNT PRIVILEGES
MASKVTOC EQU   X'10'         ENTIRE VTOC - NO MASK TESTING
MASKVTU  EQU   X'08'         ENTIRE VTOC, EXCEPT ON PUBLIC VOLUMES
MASKACCT EQU   X'04'         CHECK ACCOUNT NUMBER ONLY
MASKSUBA EQU   X'02'         CHECK WITH SUB-ACCOUNT MASK
MASKUID  EQU   X'01'         CHECK BY USER-ID
         SPACE 1
LIBCLC   CLC   LIBMASK(5),DS1DSNAM-IECSDSL1(R1)  LIBPAK ACCOUNT GP12056
WYLCLC   CLC   WYLMASK(8),DS1DSNAM-IECSDSL1(R1)  WYLBUR 4/8 ACC GP12056
TSOCLC   CLC   DSNMASK(0),DS1DSNAM-IECSDSL1(R1)  TSO/GENERIC    GP12056
         SPACE 1
VOLFLAGS DC    H'0'          VOLUME ATTRIBUTE FLAGS
VOLSER   DC    CL6' '        CURRENT VOLUME SERIAL
VOLUNIT  DC    CL3' '        CURRENT UCB NAME
VOLDDNM  DC    CL8' '        CURRENT DD NAME
VOLTYPE  DC    CL8' '        DEVICE TYPE
DSNACCT  DC    CL8' '
DSNACCN  DC    CL8' '        INTERNAL FORMAT
WYLMASK  DC    C'WYL.acctsuba'    WYLBUR MASK L=8 or 12
LIBMASK  DC    C'acct.'           LIBPAK MASK L=5
DSNMASK  DC    CL44' '       TSO/GENERIC MASK
DSNAME   DC    CL44'DSNAME'  CURRENT DSN (BEFORE RENAME)
         SPACE 1
CLEARVOL EQU   *             START OF CLEAR FOR NEW VOLUME
TOTRACKS DC    F'0'          TRACKS LISTED FOR THIS VOLUME
TOTDSNS  DC    H'0'          NUMBER OF DATA SETS LISTED
CLEARDSN EQU   *             START OF CLEAR FOR NEW DATA SET
TRACKS   DC    F'0'          TRACKS IN CURRENT DATA SET
TRACKUSE DC    F'0'          TRACKS USED IN CURRENT DATA SET
DIRALL   DC    H'0'          DIRECTORY BLOCKS ALLOCATED
DIRUSE   DC    H'0'          DIRECTORY BLOCKS IN USE
FLAGDSN  DC    X'00'         DSN PROCESSING FLAG
FGDSN    EQU   X'80'           DSN PRINT LINE DONE
FGFMT3   EQU   X'40'           ERROR GETTING FORMAT 3
FGDEOF   EQU   X'10'           DIRECTORY END
FGMEM    EQU   X'08'           MEMBER FOUND
FGWYL    EQU   X'04'           WYLBUR LIBRARY DIRECTORY FORMAT
FGERR    EQU   X'01'           DIRECTORY ERROR
CLEARLEN EQU   *-CLEARDSN    LENGTH TO CLEAR FOR NEW DATA SET
         SPACE 1
BLANKONE DC    C' '          BLANKDSN-1
BLANKDSN EQU   *             START OF AREA TO BLANK FOR NEW DSN
INT      DC    CL10' '       DATE & WYLBUR LINE EDITING
ALODATE  DC    C'00/00/00'
LASTUSE  DC    C'00/00/00'
DSORG    DC    CL3' '   1/5  DSORG
RECFM    DC    CL6' '   2/5  RECFM
OPTCD    DC    CL8' '   3/5  OPTCD
BLKSIZE  DC    CL5' '   4/5  BLKSIZE
LRECL    DC    CL5' '   5/5  LRECL
LENFMT   EQU   *-DSORG       LENGTH TO MOVE
ALLOCTYP DC    CL3' '
         DC    C' '          MEMLONG-1 BLANK
MEMLONG  DS    0CL21         MAPPING FOR LONG MEMBER ENTRY
         DC    CL2' '
MEMSHORT DS    0CL10         SHORT MEMBER ENTRY
         DC    C' '          SEPARATOR
MEMALIAS DC    C' '          - FOR ALIAS
MEMNAME  DC    CL8' '        MEMBER NAME
         DC    C' '
MEMDATE  DC    CL8' '        ADD/CHANGE DATE OF MEMBER
BLANKDSL EQU   *-BLANKDSN    LENGTH TO BLANK
VARFD    DC    XL(PATFDLEN)'0'  VARIABLE LENGTH PRINT FD
         SPACE 1
         SERVPDS DSECT=NO,RETURN=YES,VER=1                      GP12056
         SPACE 1
WYLDCOMP SERVCOMP DSECT=NO,PFX=DCM
         SPACE 1
         PRINT &PRTSYS
DSNAMES  DC    A(0)          RENAME/OPTION LIST ADDRESS
         SPACE 1
LINECARD VCON  ' ',END=LINECARN
CARDMSG  DC    CL25' '
         DC    CL5' '
         DC    C''''
CARDLINE DC    CL80' '
         DC    C''''
         VCON  ,
         SPACE 1
         DS    0D
         IECSDSL1 1          FORMAT 1
CCHHFMT1 DS    XL5           ADDRESS OF FORMAT 1 DSCB
LENDSCB1 EQU   *-DS1DSNAM    LENGTH TO MOVE
         SPACE 2
SORTREC  DS    0F            RECORD SENT TO SORT
SORTDSN  DS    CL44          DATA SET NAME
SORTVOL  DS    CL6           VOLSER
SORTSEQ  DS    H             LINE COUNTER
SORTFLAG DS    X             ROOM/SPACE BEFORE PRINT            GP12056
SORTLINE DS    CL133         PRINT LINE
SORTLEN  EQU   *-SORTREC     LENGTH OF SORT RECORD
SORTKEY  EQU   SORTREC,SORTLINE-SORTREC,C'C'
SORTKEYL EQU   SORTLINE-SORTREC  LENGTH OF SORT KEY
SAVEEND  EQU   *                                                GP03030
         SPACE 2
WYLVTOCS CSECT ,             BACK TO MAIN SECTION
*
         PUSH  USING
         DROP  ,
PRTEXIT  LR    R12,R15       SET BASE
         LR    R8,R14        SAVE RETURN ADDRESS
         USING PRTEXIT,R12
         LM    R9,R10,8(R1)  LOAD SAVE AREA, PRINT RECORD
         USING SAVE,R9       DECLARE SAVE AND WORK AREA
         TM    SORTIN+DCBOFLGS-IHADCB,DCBOFOPN  SORTIN OPEN ?
         BZ    PRTEXIT0      NO; LOGIC ERROR
         SLR   R15,R15
         ICM   R15,3,0(R10)  GET RECORD LENGTH
         SH    R15,=H'5'     MAKE DATA LENGTH FOR EXECUTE
         LA    R14,L'SORTLINE-1  GET LENGTH OF OUR AREA
         CR    R15,R14       COMPARE
         BL    PRTEXITB      SHORTER; BLANK SOME OF IT
         BE    PRTEXITP      SAME - JUST PUT
         LR    R15,R14       TRUNCATE
         B     PRTEXITP
PRTEXITM MVC   SORTLINE(0),4(R10)  MOVE PRINT LINE TO SORT AREA
PRTEXITB MVI   SORTLINE,C' '
         MVC   SORTLINE+1(L'SORTLINE-1),SORTLINE  BLANK LINE
PRTEXITP EX    R15,PRTEXITM  MOVE DATA TO SORT LINE
         PUT   SORTIN,SORTREC  WRITE THE SORT RECORD
         INCH  SORTSEQ       INCREASE THE LINE NUMBER
         MVI   SORTFLAG,0    RESET SPACE/ROOM OPTIONS           GP12056
         OI    POPS,PSORT    SHOW SORT NEEDED
         LA    R15,4         FORCE PRINT BYPASS
         BR    R8            RETURN TO @PRINTER
PRTEXIT0 ABEND 3211,DUMP     QUIT THE HARD WAY
         POP   USING
         SPACE 2
         PUSH  USING
         DROP  ,
EXIT35   STM   R14,R12,12(R13)
         LR    R12,R15
         USING EXIT35,R12
         L     R9,EXITSAVE   GET SAVE AREA
         USING SAVE,R9
         ST    R13,SORTSAVE+4  MAKE BACK LINK
         LR    R8,R13
         LA    R13,SORTSAVE
         ST    R13,8(,R8)    MAKE FORWARD LINK
         ICM   R3,15,0(R1)   FINAL ENTRY ?
         BZ    EXIT35ND      YES; QUIT
         USING SORTREC,R3                                       GP12056
         TM    SORTFLAG,X'0F'  ROOM ?                           GP12056
         BZ    EXIT35SP        NO; TEST FOR SPACING
         IC    R1,SORTFLAG                                      GP12056
         N     R1,=X'0000000F'    ISOLATE COUNT                 GP12056
         PRTROOM (R1)        RESERVE SPACE
EXIT35SP SR    R1,R1
         IC    R1,SORTFLAG                                      GP12056
         SRA   R1,4          RIGHT-ADJUST                       GP12056
         BNP   EXIT35PR        NO SPACE; JUST PRINT             GP12056
         PRTSPACE (R1)       MAKE SPACE
EXIT35PR PRTF  SORTLINE,L'SORTLINE
EXIT35NX LA    R15,4         GET ANOTHER RECORD
         B     *+8
EXIT35ND LA    R15,8         SET FOR FINAL RETURN
         L     R13,4(,R13)
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
         POP   USING
         SPACE 2
SORTIN   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=PM,                        *
               RECFM=FB,LRECL=SORTLEN,BLKSIZE=((13030/SORTLEN)*SORTLEN)
EXITSAVE DC    A(0)          GETMAINED WORK AREA ADDRESS
SORTPARM DC    0A(0),X'80',AL3(PARMSORT)
         DC    H'0'          OBSOLETE ?
PARMSORT DC    Y(SORTLISX-SORTLIST)
SORTLIST DC    A(SORTS1,SORTS2,SORTR1,SORTR2,0,EXIT35)
         DC    X'00',C'MAX',X'FF00',C'AP'
SORTLISX EQU   *
SORTS1   DC    C' SORT FIELDS=(1,'
         EBCDIG SORTKEYL,3   MAKE KEY LENGTH INTO EBCDIC
         DC    C',CH,A)'   ,FILSZ=E50000' NO E SIZE ON MVS 3.8?
SORTS2   DC    0C' '
SORTR1   DC    C' RECORD TYPE=F,LENGTH=('
         EBCDIG SORTLEN,3
         DC    C')'
SORTR2   DC    0C' '   1/2
BLANKS   DC    CL80' ' 2/2
         EJECT ,
WYLVTOCS CSECT ,             PARM AND INPUT SETUP
         PRINT &PRTSOR
*
* SYSIN CARDS (FREE FORMAT, COLUMNS 1-80)
*   GENERAL FORMAT:
*   FIRST NON-BLANK FIELD - OPTIONS
*   SECOND NON-BLANK FIELD - DATA SET NAME, DSN PREFIX, OR MASK
*   THIRD NON-BLANK FIELD - RENAME REPLACEMENT STRING (IRRELEVANT)
*
*   OPTIONS
*    * - COMMENTS CARD - PRINTED AS READ
*    S - SELECT DSN   (ALTERNATE FORM)
*    I - INCLUDE DATA SET
*    X - EXCLUDE DSN  (ALTERNATE FORM)
*    E - EXCLUDE DATA SET
*    R - RENAME DATA SET
*    D - PRINT DSCB ONLY; NO COUNTS, NO MEMBERS, NO SNAP
*    C - PRINT DSCB AND COUNT DIRECTORY BLOCKS
*    M - D+C AND LIST MEMBER NAMES
*    P - D+C+M AND PRINT 5 LINES PER DATA SET/MEMBER
         DS    0H
         SPACE 1
*OLD*OOK PRTV  SUBPARM,TITLE=2
PARMLOOK INPOPEN SYSIN,OPT=(DUMMY,NOWTO)  TEST FOR SYSIN
         BXH   R15,R15,SQUIT     NO; IGNORE
         PRTSPACE 1          SPACER
         L     R9,=A(SYNSIZE)  GET USER REQUESTED SPACE
         GETMAIN R,LV=(R9)
         LR    R4,R1         COPY ADDRESS
         ST    R1,DSNAMES    SAVE DSN LIST AND CLEAR HIGH BYTE
         LR    R8,R1         SET NEXT ENTRY ADDRESS
         LR    R5,R9         COPY LENGTH
         SLR   R14,R14
         SLR   R15,R15
         MVCL  R4,R14        CLEAR GOTTEN STORAGE
         USING RIXLIST,R8
         SPACE 1
SYNLOOP  INPGET ,            TAKE A CARD, ANY CARD
         BXH   R15,R15,SYNEOF   QUIT IF END OR ERROR
         MVC   CARDLINE,0(R1) COPY CARD
         LA    R6,80         SET LENGTH OF CARD
         CLI   72(R1),C' '   BLANK SEQUENCE FIELD ?
         BE    SYNSHORT      HOPE SO
         MVC   DB,=8C'0'
         NC    DB,72(R1)
         CLC   DB,=8C'0'     ALL NUMERIC SEQUENCE FIELD ?
         BE    SYNSHORT      YES; SKIP IT
         CLI   72(R1),C'0'   NUMERIC FIRST DIGIT ?
         BL    SYNLONG       NO
         CLI   76(R1),C'.'   WYLBUR SEQUENCE ?
         BNE   SYNLONG       NO
SYNSHORT MVI   72(R1),C' '   SKIP SEQUENCE FIELD
         MVC   73(7,R1),72(R1)  BLANK IT OUT
SYNLONG  LR    R2,R1         POINT TO FIRST BYTE
         SLR   R3,R3         SET CURRENT STRING LENGTH
         SLR   R5,R5         SET LENGTH OF SECOND STRING
SYNOPT   CLI   0(R2),C' '    LEADING BLANK ?
         BNE   SYNOLOOK
         LA    R2,1(,R2)
         BCT   R6,SYNOPT
         B     CARDPUT       COPY BLANK CARD
SYNOLOOK CLI   0(R2),C'*'    COMMENT ?
         BE    CARDPUT       YES; PRINT IT
SYNOTAB  LA    R14,OPTTAB    GET OPTION ABBREVIATIONS
         LA    R15,(OPTTABE-OPTTAB)/2  AND ENTRIES
SYNOOPT  CLC   0(1,R2),0(R14)  MATCHING OPTION ?
         BE    SYNOMACH      YES
         LA    R14,2(,R14)
         BCT   R15,SYNOOPT
SYNOOPTI MVC   CARDMSG(1),0(R2)  SHOW BAD VALUE
         MVC   CARDMSG+2(14),=C'INVALID OPTION'
         B     CARDERRQ      PRINT AND QUIT
SYNOMACH OC    RIXFG,1(R14)  COPY OPTION BIT
SYNOMAC2 LA    R2,1(,R2)
         BCT   R6,*+8
         B     CARDMIS1      SHOW FIRST NAME FIELD MISSING
         CLI   0(R2),C' '    END OF OPTIONS ?
         BNE   SYNOTAB
         MVC   CARDMSG(3),=C'I X'
         TM    RIXFG,RIXINC+RIXEXC
         BO    CARDEXCL
         BNZ   SYNONEXC      OK IF ONE OR THE OTHER
         CLI   RIXFG,0       ANY OPTIONS ?
         BNZ   SYNONEXC      YES
         MVC   CARDMSG(23),=C'INCLUDE/EXCLUDE MISSING'
         B     CARDERRQ
SYNONEXC MVC   CARDMSG(3),CARDMSG-1  CLEAR AGAIN
         TM    RIXFG,RIXINC  INCLUDE OPTION ?
         BZ    SYNOEXC       NO
         TM    POPS,OPTEXC+OPTINC  FIRST TIME ?
         BNZ   *+8           NO
         OI    POPS,OPTINCL  SHOW INCLUDE FIRST
         OI    POPS,OPTINC   SHOW AT LEAST ONE INCLUDE
         B     SYN1LOOP
SYNOEXC  TM    RIXFG,RIXEXC  EXCLUDE ?
         BZ    SYN1LOOP      NO
         OI    POPS,OPTEXC   SHOW EXCLUDE PRESENT
SYN1LOOP CLI   0(R2),C' '    LEADING BLANK ?
         BNE   SYN1TEXT      NO
         LA    R2,1(,R2)
         BCT   R6,SYN1LOOP
CARDMIS1 MVC   CARDMSG(25),=C'DSNAME/MASK FIELD MISSING'
         B     CARDERRQ      PRINT AND QUIT
SYN1TEXT LR    R4,R2         SAVE START OF FIRST TEXT STRING
         CLI   0(R4),C' '    END OF STRING ?
         BE    SYN2LOOK      YES; SCAN FOR NEXT
         LA    R3,1(,R3)     UP TEXT LENGTH
         LA    R4,1(,R4)     UP TEXT LOCATION
         BCT   R6,SYN1TEXT+2  TRY AGAIN
         B     CARDERR
SYN2LOOK CH    R3,=H'44'     SHORT ENOUGH ?
         BH    CARDERR
         CH    R5,=H'44'
         BH    CARDERR
         LA    R15,RIXFIX+1(R3,R5)  LENGTH REQUIRED IN TABLE
         CR    R15,R9        WILL IT FIT ?
         BH    CARDFULL      NO; QUIT WITH ERROR
         STC   R3,RIXL1      SET LENGTH OF FIRST STRING
         LA    R15,RIXMASK   SET LOCATION OF FIRST STRING
         EX    R3,MVCSTR1    MOVE FIRST STRING
         STC   R5,RIXL2      SET LENGTH OF SECOND STRING
         LR    R14,R3        GET LENGTH OF FIRST STRING
         SLR   R0,R0         INIT COUNT OF REPLACABLE MATCH BYTES
SYN1REPL CLI   0(R15),C'?'   GENERAL MATCH BYTE ?
         BE    SYN1REPM      MASK BYTE
         CLI   0(R15),X'7F'  ALTERNATE MASK BYTE ?
         BNE   SYN1REPN      NO
         AH    R0,=H'1'      UP COUNT OF COPYABLE MATCH BYTES
SYN1REPM OI    RIXF2,RIXCMSK  SET COMPARE MASK PRESENT
         B     SYN1REPX      SKIP TO NEXT BYTE
SYN1REPN CLI   0(R15),C';'   PRECISE STRING ?
         BE    SYN1REPB      YES; REPLACE BY BLANK
         CLI   0(R15),C'!'   EXCLAMATION ?
         BNE   SYN1REPX      NO; BUMP
SYN1REPB MVI   0(R15),C' '   FORCE EXACT MATCH
SYN1REPX LA    R15,1(,R15)
         BCT   R14,SYN1REPL  DO ALL
         OC    DSNAMES(1),RIXFG  COLLECT GLOBAL FLAGS
         LA    R8,RIXFIX(R8,R5) POINT TO NEXT ENTRY
         AR    R8,R3
         XC    RIXFG(3),RIXFG SET END OF CHAIN
         LA    R15,RIXFIX(R3,R5)  SET ENTRY LENGTH
         SR    R9,R15        INTO SPACE REMAINING
CARDPUT  PRTV  LINECARD      PRINT THE LINE
         MVC   CARDMSG,CARDMSG-1  CLEAR MESSAGE AREA
         B     SYNLOOP       GET ANOTHER CARD
         SPACE 1
CARDEXCL MVC   CARDMSG+4(21),=C'ARE EXCLUSIVE OPTIONS'
         B     CARDERRQ
CARDERR  MVC   CARDMSG(12),=C'INVALID TEXT'
CARDERRQ OICC  8             SET ERROR                          GP12056
         B     CARDPUT
         SPACE 1
CARDFULL MVC   CARDMSG(14),=C'DSN TABLE FULL'
         PRTV  LINECARD
         PRTV  SYNSYSMG
         B     SQUITX
         SPACE 1
SYNEOF   MVC   CARDMSG(LINECARN-CARDMSG),CARDMSG-1  CLEAR FOR WORK
         L     R1,DSNAMES    GET DSN TABLE
         CLI   0(R1),0       ANY ENTRIES ?
         BNE   SQUIT         YES; LEAVE IT
         L     R0,=A(SYNSIZE)  GET USER REQUESTED SPACE
         FREEMAIN R,A=(1),LV=(0)   FREE THE TABLE SPACE
         XC    DSNAMES,DSNAMES  AND CLEAR POINTER
SQUIT    PRTSPACE 1          PRINT SPACER
SQUITB   ICM   R15,15,RETCODE  GET RETURN CODE                  GP12056
         BZ    PARMDONE      ZERO - COMPLETED INITIALIZATION
SQUITX   B     JOBABEND      QUIT
         SPACE 1
SYSIN    INPWORK SYSIN,FILL=C' ',WIDTH=80,EDIT=128
MVCSTR1  MVC   0(0,R15),0(R2)
SUBPARM  VCON  ' SYSIN REQUESTS'
         DROP  R8
         SPACE 1
SYNSYSMG VCON  '0CONTACT THE SYSTEM GROUP FOR ASSISTANCE'
         SPACE 1
OPTTAB   DC    C'X',AL1(RIXEXC)  EXCLUDE
         DC    C'E',AL1(RIXEXC)  EXCLUDE
         DC    C'I',AL1(RIXINC)  INCLUDE
         DC    C'S',AL1(RIXINC)  INCLUDE(SELECT)
OPTTABCE EQU   *             END OF TABLE FOR WYLCATLG
         DC    C'D',AL1(RIXDSCB)  PRINT DSCB LINE ONLY
         DC    C'C',AL1(RIXDIR+RIXDSCB)  COUNT DIRECTORY BLOCKS
         DC    C'M',AL1(RIXPDS+RIXDIR+RIXDSCB)  PRINT MEMBERS ALSO
         DC    C'P',AL1(RIXSNAP+RIXPDS+RIXDIR+RIXDSCB)  PRINT TEXT
OPTTABE  EQU   *
         EJECT ,
DSNCHOSE STM   R14,R12,12(R13)  EXCLUSION/SELECTION TESTS
         MVN   DSLFG,PROP    COPY BASIC FORMATTING OPTIONS
         MVI   DB,RIXINC     PROVISIONALLY SET COPY ON
         LAT   R6,DSNAMES,DSCCONX  GET TABLE OR QUIT
         USING RIXLIST,R6    DECLARE IT
         TM    DSNAMES,RIXINC+RIXEXC  EITHER SELECTION ?
         BZ    DSNCHOSF      NO; LEAVE ON
         TM    POPS,OPTINCL  INCLUDES ONLY ?
         BZ    DSNCHOSF      NO; LEAVE ON
         MVI   DB,0          RESET COPY FLAG
DSNCHOSF LA    R1,DS1DSNAM+43    POINT TO LAST BYTE OF DSN
         LA    R8,44         AND MAX LENGTH
         LR    R14,R8        SAVE MAXIMUM
DSCDSCL  CLI   0(R1),C' '    NON-BLANK ?
         BNE   DSCDSCHL      YES; HAVE LENGTH
         BCTR  R1,0          TRY PRECEDING BYTE
         BCT   R8,DSCDSCL    AND CHOP LENGTH
         B     DSCCONX       DON'T LIKE SHORT NAMES
DSCDSCHL CR    R8,R14        FULL LENGTH NAME ?
         BNL   *+8           YES; LEAVE IT
         LA    R8,1(,R8)     LEAVE ONE TRAILING BLANK FOR EXACT MATCH
DSCDSCLP CLI   RIXFG,0       END OF LIST ?                       85253
         BE    DSCCONX       YES; EXIT
         SLR   R14,R14       LENGTH OF MASK
         IC    R14,RIXL1     GET LENGTH OF MASK
         SLR   R1,R1         FOR LENGTH OF REPLACEMENT
         IC    R1,RIXL2      GET LENGTH OF REPLACEMENT
         CR    R14,R8        IS MASK LONGER THAN DSN ?           85253
         BH    DSCNDSC       YES; TRY NEXT ENTRY                 85253
         LA    R2,RIXMASK    GET MASK ADDRESS                    85253
         LR    R3,R14        AND MASK LENGTH                     85253
         LA    R9,DS1DSNAM       AND DSNAME                      85253
DSCMDSC  CLI   0(R2),X'7F'   NON-COMPARE ?                       85253
         BE    *+14          YES; SKIP TEST                      85253
         CLC   0(1,R2),0(R9) .  EQUAL ?                          85253
         BNE   DSCNDSC       NO - RETURN UNEQUAL                 85253
         LA    R2,1(,R2)     NEXT MASK BYTE                      85253
         LA    R9,1(,R9)     NEXT DATA BYTE                      85253
         BCT   R3,DSCMDSC    NEW MASK LENGTH                     85253
         TM    RIXFG,RIXDSCB+RIXDIR+RIXPDS+RIXSNAP  FORMATTING OPTIONS
         BZ    *+10          NO; NO CHANGE                       85253
         MVN   DSLFG,RIXFG   SET NEW OPTIONS                     85253
         TM    RIXFG,RIXINC  INCLUDE REQUEST ?                   85253
         BZ    DSCEXCT       NO; CHECK EXCLUDE                   85253
         OI    DB,RIXINC     SET INCLUDE FLAG                    85253
         TM    DSNAMES,255-RIXINC   ANY MORE ?                   85253
         BZ    DSCCONX       NO; EXIT NOW                        85253
         B     DSCNDSC       ELSE CHECK REMAINING ENTRIES        85253
DSCEXCT  TM    RIXFG,RIXEXC  EXCLUDE ?                           85253
         BZ    DSCNDSC       NO; TRY AGAIN                       85253
         MVI   DB,0          RESET COPY FLAG                     85253
         TM    DSNAMES,255-RIXEXC  ANY MORE ?                    85253
         BZ    DSCCONX       NO; EXIT                            85253
         SPACE 1
DSCNDSC  LA    R6,RIXFIX(R14,R6)
         AR    R6,R1         GET NEXT DSC LOCATION
         B     DSCDSCLP      AND DO IT                           85253
         SPACE 1
DSCCONX  TM    DB,RIXINC     COPY THIS DATA SET ?
         BNZ   DSCCON4       YES; COPY THIS ONE
DSCCON0  LM    R14,R12,12(R13)  RESTORE REGISTERS
         BR    R14           RETURN DATA SET TO BE SKIPPED
DSCCON4  LM    R14,R12,12(R13)  RESTORE REGISTERS
         B     4(,R14)       RETURN DATA SET TO BE PROCESSED
         DROP  R6
         SPACE 1
TRAILMVC MVC   0(0,R4),0(R3)  MOVE DSN PORTION
         SPACE 1
         LTORG ,
         SPACE 1
RIXLIST  DSECT ,     (OPTIONAL) RENAME/INCLUDE/EXCLUDE DSN LIST
RIXFG    DC    X'0'          ENTRY TYPE(S)
RIXINC   EQU   OPTINC          INCLUDE DSN / INPUT MASK
RIXEXC   EQU   OPTEXC          EXCLUDE DSN / INPUT MASK
RIXDSCB  EQU   PDSCB           PRINT DSCB LINE ONLY
RIXDIR   EQU   PDIR            COUNT DIRECTORY BLOCKS ONLY
RIXPDS   EQU   PPDS            PRINT MEMBER NAMES
RIXSNAP  EQU   PSNAP           PRINT 5 LINES OF TEXT
RIXF2    DC    X'0'          SECOND FLAG BYTE
RIXCMSK  EQU   X'80'           COMPARISON IS MASKED
RIXRMSK  EQU   X'40'           REPLACEMENT IS MASKED
RIXL1    DC    X'0'          LENGTH OF FIRST ENTRY
RIXL2    DC    X'0'          RENAME ONLY / LENGTH OF REPLACE STRING
RIXMASK  DC    0X'0'         1-44 BYTE MASK
RIXREP   DC    0X'0'         REPLACEMENT STRING
RIXFIX   EQU   *-RIXLIST     FIXED LENGTH OVERHEAD PER ENTRY
         SPACE 1                                                GP12056
         PRINT &PRTMAC                                          GP12056
         MAPPARST ,          EXPAND PARSE RETURN                GP12056
         SPACE 1
         PRINT &PRTSYS
CVTDSECT DSECT ,
         CVT   DSECT=YES
         SPACE 1
         IHACDE ,
         SPACE 1
         IKJTCB ,
         SPACE 1
         IEZJSCB ,
         SPACE 1
         IEFUCBOB ,
         AIF   (&MVS).MVSUCB
UCBRR    EQU   X'20'         DEVICE SHARABLE
UCBRPS   EQU   X'10'         DEVICE HAS RPS
         AIF   (&SVS).MVSUCB
UCBVLPWR EQU   X'02'         DEVICE REQUIRES ALTERNATE POWER
UCBDVPWR EQU   X'01'         DEVICE HAS ALTERNATE POWER
.MVSUCB  SPACE 1
         DCBD  DEVD=DA,DSORG=PS
         SPACE 1
DSCB3    DSECT ,
         IECSDSL1 3          FORMAT 3
         SPACE 1
FDSECT   FDSECT ,
         SPACE 1
         AIF   (NOT &LOCO).NLOC11                               GP12056
USERVOLT DSECT ,
VOLTUSER USERVOLT MAP=NO     GET FLAGS ONLY
         SPACE 1
USERCVT  USERCVT ,
.NLOC11  SPACE 1                                                GP12056
PRTMAP   MAPPRT ,            EXPAND PRTWORK MAPPING
         SPACE 1
         IHAPSA ,
         END   ,
