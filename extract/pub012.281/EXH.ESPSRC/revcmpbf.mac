         TITLE 'REVCMPBF - COMPRESS A 3270 OUTPUT BUFFER - HMD 04/79'
***********************************************************************
*                                                                     *
*        CSECT REVCMPBF PERFORMS THE FOLLOWING:                       *
*                                                                     *
*        1 - COMPRESSES A 3270 TPUT BUFFER                            *
*                                                                     *
*            FIVE OR MORE CONSECUTIVE IDENTICAL CHARACTERS ARE        *
*            REPLACED BY A 4 BYTE REPEAT TO ADDRESS (RA) ORDER.       *
*                                                                     *
*            A SET BUFFER ADDRESS (SBA) ORDER TO THE CURRENT          *
*            SCREEN ADDRESS IS DELETED.                               *
*                                                                     *
*            PARAMETERS REQUIRED:                                     *
*                                                                     *
*            A FOUR WORD PARAMETER LIST IS PROVIDED.                  *
*                                                                     *
*            WORD 1 - POINTS TO A FULL WORD CONTAINING THE LENGTH     *
*                     OF THE UNCOMPRESSED INPUT STRING.  ON EXIT      *
*                     THE WORD WILL CONTAIN THE LENGTH OF THE         *
*                     COMPRESSED OUTPUT STRING.                       *
*                                                                     *
*            WORD 2 - POINTS TO A FULL WORD CONTAINING THE NUMBER     *
*                     OF SCREEN LINES.                                *
*                                                                     *
*            WORD 3 - POINTS TO THE BEGINNING OF THE INPUT STRING.    *
*                                                                     *
*            WORD 4 - POINTS TO A BYTE CONTAINING THE CODE TO BE      *
*                     USED FOR "SET ATTRIBUTE".  THIS IS X'28'        *
*                     FOR IBM(-LIKE) HARDWARE AND X'0E' FOR FACOM     *
*                     HARDWARE (EG. 6682'S OFF 6681 CONTROLLERS).     *
*                                                                     *
*            CSECT ATTRIBUTES - RENT, REFR                            *
*                                                                     *
*            NOTE   - REVCMPBF IS A SPECIALIZED COPY OF CB3270        *
*                     CUSTOMIZED FOR THE REVIEW COMMAND PROCESSOR.    *
*            PINCHED BY GREG PRICE, STATE ELECTRICITY COMMISSION      *
*                                      OF VICTORIA.                   *
*              FIXED BY GREG PRICE, PRYCROFT SIX PTY. PTD.            *
*               1986  - DO NOT COMPRESS FIRST 97 BYTES WHICH          *
*                       INCLUDES THE VARIABLE MESSAGE AREA.           *
*               1990  - DO NOT REQUIRE FOURTH PARAMETER SO THIS       *
*                       ROUTINE CAN BE USED FOR MONOCHROME CODE.      *
*                                                                     *
***********************************************************************
         EJECT
         PRINT NOGEN         SAVE A TREE                        GP97205
REVCMPBF CSECT
         SPACE
         SAVE  (14,12),,REVCMPBF_ASSEMBLED_&SYSDATE
         LR    R12,R15                 COPY ENTRY ADDRESS
         USING REVCMPBF,R12            DEFINE BASE REGISTER
         LR    R4,R1                   SAVE PARM LIST ADDRESS
         L     R3,0(,R4)               LOAD ADDRESS OF LENGTH
         L     R11,0(,R3)              LOAD LENGTH
         L     R9,8(,R4)               LOAD INPUT ADDRESS
         LA    R9,0(,R9)               ENSURE ADDRESS FORMAT
         LA    R11,0(R11,R9)           GET END OF INPUT ADDRESS
         BCTR  R11,0
         LR    R8,R9                   LOAD OUTPUT AREA ADDRESS
         LR    R5,R8                   SAVE ADDRESS
         L     R2,4(,R4)
         L     R2,0(,R2)
         MH    R2,=H'80'               GET SCREEN CAPACITY
*        LA    R6,0                    INITIALIZE SCREEN ADDRESS
*
*              SPECIALIZED CODE FOR REVIEW FOLLOWS              GP@SECV
*        REVIEW DOES COMPRESS IN PLACE SO MOVE NOT REQUIRED     GP@P6
*        MVC   0(97,R8),0(R9)          MOVE FIRST 97 BYTES      GP@P6
         LA    R9,97(,R9)              UPDATE INPUT ADDRESS     GP@P6
         LA    R8,97(,R8)              UPDATE OUTPUT ADDRESS    GP@P6
         LA    R6,92 (R6)              UPDATE SCREEN ADDRESS    GP@P6
*        UPDATE IN PLACE SO FOURTH PARAMETER CHANGED TO POINT   GP@P6
*        TO THE CODE TO BE USED FOR SET ATTRIBUTE.              GP@P6
         LA    R0,SA                   CATER FOR NO FOURTH PARM GP@P6
         TM    8(R4),X'80'             WAS THIRD PARM THE LAST? GP@P6
         BO    PARMSOK                 YES                      GP@P6
         L     R1,12(,R4)              POINT TO SACHAR          GP@P6
         IC    R0,0(,R1)               GET IT FOR USE           GP@P6
PARMSOK  CLI   1(R5),SBA               SBA AFTER WCC?           GP@P6
         BE    TESTORDR                YES, IN MONOCHROME MODE  GP@P6
         STC   R0,1(,R5)               NO, GET RIGHT SA FOR HDG GP@P6
         SPACE
TESTORDR CLI   0(R9),IC                TEST FOR INSERT CURSOR
         BE    COPY1
         CLI   0(R9),PT                TEST FOR PROGRAM TAB
         BE    COPY1                        (NOT USED IN REVIEW)
         CLI   0(R9),SF                TEST FOR START FIELD
         BE    COPY2
         CLI   0(R9),SA                TEST FOR SET ATTRIBUTE
         BE    HANDLESA
         CLI   0(R9),SAFACOM           TEST FOR SET ATTRIBUTE
         BE    HANDLESA
*        CLI   0(R9),SFEFACOM          TEST FOR START FIELD EXTENDED
*        BE    COPY2                        (NOT USED IN REVIEW)
*        CLI   0(R9),SFEF9526          TEST FOR START FIELD EXTENDED
*        BE    COPY3X                       (NOT USED IN REVIEW)
*        CLI   0(R9),SFE               TEST FOR START FIELD EXTENDED
*        BE    COPY2                        (NOT USED IN REVIEW)
*        CLI   0(R9),MF                TEST FOR MODIFY FIELD
*        BE    COPY2                        (NOT USED IN REVIEW)
         CLI   0(R9),SBA               TEST FOR SET BUFFER ADDRESS
         BE    COPY3
         CLI   0(R9),EUA               TEST FOR ERASE UNPROTECTED
         BE    COPY3
         CLI   0(R9),RA                TEST FOR REPEAT TO ADDRESS
         BE    COPY4
         CLI   0(R9),GE                TEST FOR GRAPHIC ESCAPE
         BE    COPY2
         SPACE
         LA    R10,1                   SET INCREMENT TO 1
         LR    R7,R9                   SAVE ADDRESS OF FIRST CHAR
TESTNEXT LA    R6,1(,R6)               INCREMENT SCREEN ADDRESS
         BXH   R9,R10,ENDBUF           INCREMENT TO NEXT CHAR
         CLC   0(1,R7),0(R9)           SEE IF SAME CHARACTER
         BE    TESTNEXT                IF SAME, LOOP
         SPACE
ENDBUF   LR    R1,R9                   ADDRESS OF CURRENT CHAR
         SR    R1,R7                   NUMBER OF SAME CHARACTERS
         C     R1,=F'4'                AT LEAST 4 FOR RA
         BH    BUILDRA
         BCTR  R1,0                    SUBTRACT 1 FOR EXECUTE
         EX    R1,COPY                 COPY TO OUTPUT AREA
         LA    R8,1(R1,R8)             INCREMENT OUTPUT ADDRESS
         CR    R9,R11                  SEE IF ANY MORE
         BH    OUT
         B     TESTORDR
         SPACE
BUILDRA  MVC   3(1,R8),0(R7)           COPY CHARACTER
         MVI   0(R8),RA                MOVE IN RA ORDER CODE
         CR    R6,R2
         BL    GETADDR
         SR    R6,R2
GETADDR  CH    R6,=H'4095'   14-BIT ADDRESS REQUIRED ?        GYP93274
         BNH   GETADDR2      NO; USE OLD FORMAT               GYP93274
         STCM  R6,3,1(R8)    SET 14-BIT ADDRESS               GYP93274
         B     GETADDRC                                       GYP93274
GETADDR2 SR    R14,R14                 CONVERT SCREEN ADDRESS TO
         LR    R15,R6                       3270 ADDRESS CODE
         SLDL  R14,26
         SRL   R15,26
         IC    R14,TABLE(R14)
         IC    R15,TABLE(R15)
         STC   R14,1(,R8)
         STC   R15,2(,R8)
GETADDRC LA    R8,4(,R8)               INCREMENT OUTPUT AREA ADDRESS
         CR    R9,R11                  SEE IF ANY MORE
         BH    OUT
         B     TESTORDR
         SPACE
COPY1    LA    R10,1                   SET COUNT
         B     COPYDATA
COPY2    LA    R10,2                   SET COUNT
         LA    R6,1(,R6)               INCREMENT SCREEN ADDR FOR ATTR
         B     COPYDATA
*COPY3X  LA    R10,3                   SET COUNT
*        LA    R6,1(R6)                INCREMENT SCREEN ADDR FOR ATTR
*        B     COPYDATA
HANDLESA STC   R0,0(,R9)               ENSURE THE USE OF CORRECT SA
         LA    R10,3                   SET COUNT
         B     COPYDATA
COPY3    LA    R10,3                   SET COUNT
         B     UPDATADR
COPY4    LA    R10,4                   SET COUNT
UPDATADR TM    1(R9),X'C0'   12-BIT ADDRESS (OR 16-BIT) ?     GYP93274
         BNZ   UPDATADS      YES; HANDLE OLD WAY              GYP93274
         SLR   R15,R15       CLEAR FOR IC                     GYP93274
         ICM   R15,3,1(R9)   LOAD 14-BIT ADDRESS              GYP93274
UPDATADS IC    R15,1(,R9)              CONVERT ADDRESS TO SCREEN POS.
         SLL   R15,8
         IC    R15,2(,R9)
         SLDL  R14,24
         SLL   R15,2
         SRDL  R14,6
         SRL   R15,20
UPDATADT CR    R6,R15                  SEE IF ALREADY AT THIS ADDRESS
         BNE   RESETADR
         CLI   0(R9),SBA               IF ORDER IS SBA, SKIP IT
         BE    INCRPTR
RESETADR LR    R6,R15                  UPDATE SCREEN ADDRESS
         SPACE
COPYDATA BCTR  R10,0                   DECREMENT COUNT FOR EXECUTE
         LR    R7,R9                   COPY SOURCE ADDRESS
         EX    R10,COPY                COPY TO OUTPUT AREA
         LA    R10,1(,R10)             RESTORE COUNT
         LA    R8,0(R10,R8)            UPDATE OUTPUT AREA ADDRESS
INCRPTR  BXLE  R9,R10,TESTORDR         INCREMENT ADDRESS AND LOOP
         SPACE
OUT      SR    R8,R5                   CALCULATE OUTPUT LENGTH
         LA    R8,0(,R8)               TURN OFF HIGH BIT
         ST    R8,0(,R3)               STORE NEW LENGTH
         SLR   R15,R15                 CLEAR RETURN CODE
         RETURN (14,12),RC=(15)
         SPACE
COPY     MVC   0(0,R8),0(R7)           << EXECUTED INSTRUCTION >>
         SPACE
******** LITERALS AND CONSTANTS
         SPACE
         LTORG
         SPACE
         DS    0D
TABLE    DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
         SPACE
         DS    0D                      END OF CSECT
         EJECT
******** EQUATES
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
PT       EQU   X'05'                   PROGRAM TAB
GE       EQU   X'08'                   GRAPHIC ESCAPE
SAFACOM  EQU   X'0E'                   SET ATTRIBUTE FOR FACOM 7-COLOUR
SFEFACOM EQU   X'0F'                   SFE FOR FACOM 7-COLOUR
SBA      EQU   X'11'                   SET BUFFER ADDRESS
EUA      EQU   X'12'                   ERASE UNPROTECTED TO ADDRESS
IC       EQU   X'13'                   INSERT CURSOR
SFEF9526 EQU   X'1B'                   SFE FOR FACOM F9526 FAMILY
SF       EQU   X'1D'                   START FIELD
SA       EQU   X'28'                   SET ATTRIBUTE
SFE      EQU   X'29'                   START FIELD EXTENDED
MF       EQU   X'2C'                   MODIFY FIELD (IBM AND FACOM)
RA       EQU   X'3C'                   REPEAT TO ADDRESS
         SPACE
* A DISCUSSION IN FUTILITY FOR THE CURIOUS FOLLOWS.
* FACOM HARDWARE:  X'0E' PERFORMS THE IBM X'28' FUNCTION.
*                  X'0F' PERFORMS THE IBM X'29' FUNCTION.
*                  X'1B' ALLOWS F9526 EXTENDED ATTRIBUTES
*                        TO BE USED.
*  SO: X'1BYYZZ' = X'1DYY' +
*                  REVERSE/BLINK/OVERLINE/UNDERLINE/VERTICAL-LINE
*                  SPECIFICATIONS (IE. ON OR OFF).
*                  ONE POSITION ON THE SCREEN IS USED (AS WITH X'1D').
*                  (THE VERTICAL LINE IS THROUGH THE MIDDLE OF THE
*                   ATTRIBUTE BYTE ==> CLOSE A BOX WITH NEXT SFE.)
*      X'1BYY40' = X'1DYY'
*                        SECOND BYTE AFTER X'1B' MEANS:
*              X'80'     3270-STYLE "PARITY BIT"
*              X'40'     ALWAYS ON
*              X'20'     BLINKING
*              X'10'     REVERSE
*              X'08'     OVERLINE
*              X'04'     UNDERLINE
*              X'02'     VERTICAL-LINE
*              X'01'     NOT USED
         SPACE
         END
