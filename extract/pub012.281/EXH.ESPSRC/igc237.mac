APF      TITLE 'SVC ROUTINE TO ESTABLISH APF LIBRARIES'
         COPY  OPTIONGB                                         GP12043
         SPACE 1
         SYSPARM LIST=YES                                       GP12043
         EJECT ,                                                 79139
         PRINT NOGEN                                             79139
IGC237   START 0
***********************************************************************
*                                                                     *
*  THIS ROUTINE MAY BE ENTERED AS A TYPE 1 SVC OR BY BRANCH ENTRY.    *
*                                                                     *
*  FOR AN INITIALIZATION ENTRY, R0 MUST BE NON-ZERO.  IF NEGATIVE,    *
*  IT MUST CONTAIN THE COMPLEMENT OF AN ADDRESS IN SQA (SUBPOOL 245)  *
*  WHERE THE DEB ID TABLE RESIDES.  THE ADDRESS WILL BE SAVED AND THE *
*  CVT BRANCH ENTRY POINTER INITIALIZED.  IF R0 IS POSITIVE ONE, THE  *
*  CVT POINTER WILL BE ZEROED.  IN EITHER CASE, R0 WILL RETURN THE    *
*  PREVIOUS TABLE ADDRESS.  IF R0 IS >1, THE POINTER WILL NOT BE      *
*  ZEROED.  THE ADDRESS WILL STILL BE RETURNED.                       *
*                                                                     *
*  FOR A TABLE SEARCH, R0 MUST BE ZERO ON ENTRY.  R1 MUST POINT TO AN *
*  OPEN DCB.  THE TABLE WILL BE SCANNED FOR A DEB ENTRY MATCHING THE  *
*  ONE FOR THE INDICATED DCB.  MATCHING IS BASED ON THE 15 BYTE FIELD *
*  DESCRIBING THE FIRST EXTENT.  IF A MATCH IS FOUND, R1 WILL CONTAIN *
*  0 ON RETURN.  OTHERWISE, R1 WILL BE SET TO 4.  IF A CONCATENATED   *
*  DCB IS BEING SCANNED, THE CONCATENATION NUMBER MUST BE IN THE HIGH *
*  ORDER BYTE OF R1 ON ENTRY.                                         *
*                                                                     *
*  FOR BRANCH ENTRY, CALLER MUST BE IN SUPERVISOR STATE.  R15 MUST    *
*  CONTAIN THE ENTRY ADDRESS FROM THE CVT AND R14 MUST CONTAIN THE    *
*  RETURN ADDRESS.  R2-R14 WILL BE PRESERVED.                         *
*                                                                     *
*  PRESERVATION OF R14 IS NECESSARY FOR THE BRANCH ENTRY LOGIC IN     *
*  IEAVLK01.                                                          *
*                                                                     *
***********************************************************************
         SPACE 2
         BALR  R15,0               ESTABLISH ADDRESSABILITY
         USING *,R15
         LA    R15,ENTRY           RESET ADDRESSABILITY
         BR    R15                 BRANCH AROUND IDENTIFIER
         DC    AL1(L'IDENT)        LENGTH
IDENT    DC    C'**IGC237 APF CHECK  &SYSTIME &SYSDATE**'
         DC    ((L'IDENT+2)/2*2-(L'IDENT+1))C' '  FILL OUT TO HALFWORD
ENTRY    DS    0H                  BRANCH ENTRY POINT
         USING *,R15
         STNSM ENABLE+1,X'FC'      DISABLE
*
*  COND CODE SET BY FOLLOWING INSTRUCTION IS USED AGAIN IF BRANCH TO
*  INIT IS TAKEN.
         LCR   R0,R0               TEST ENTRY PARM
         BNZ   INIT                BR IF INIT CALL
         STM   R8,R11,SAVE         SAVE REGS
         OC    BLKADDR,BLKADDR     IS DEB IDENTITY BLOCK DEFINED?
         BNZ   *+10
         OR    R15,R15             FORCE CONDITION CODE
         B     END
         NEED  DCB
         USING IHADCB,R1           R1-->DCB
         L     R8,DCBDEBAD         R8-->DEB
         DROP  R1
         NEED  DEB
         LR    R10,R8              SAVE DEB PTR
         USING DEBBASIC,R10
         LA    R8,DEBBASND          R8-->DASD SECTION
         SRA   R1,24               GET CONCAT NUMBER
         BZ    NOCAT               BR IF FIRST
         SR    R9,R9
         IC    R9,DEBNMEXT          GET NUMBER OF EXTENTS
         SLL   R9,4                MULT BY EXTENT DESCRIPTOR LENGTH
         AR    R9,R1               ADD OFFSET INTO BPAM EXT NUMBERS
         BCTR  R9,0                REDUCE FOR INDEX
         IC    R1,DEBDVMOD-DEBDASD(R9,R8)  FIRSTTM OFTDATA SET N
         SLL   R1,4                MULT BY LENGTH
NOCAT    AR    R8,R1               ADJUST POINTER
         USING DEBDASD,R8
         DROP  R10
         L     R9,BLKADDR          R9-->ID BLOCK PREFIX
         LM    R9,R11,0(R9)        R9-->ID BLOCKS
*                                  SET UP FOR BXLE LOOP
         USING BLOCK,R9
LOOP     CLC   BLOCKDEB,DEBUCBA    IS DEB IN TABLE?
         BE    END                 IF SO, DONE
         BXLE  R9,R10,LOOP         TRY ALL ENTRIES
END      LM    R8,R11,SAVE         RESTORE REGS
*
*  IF WE WERE ENTERED DISABLED, THE FOLLOWING INSRUCTION WILL HAVE
*  NO EFFECT.
ENABLE   STOSM BYTE,*-*            RESTORE ORIGINAL STATUS
         LA    R1,4                ASSUME FAILURE
*
*  ONCE SUCCESS OR FAILURE HAS BEEN DETERMINED, THE CONDITION CODE
*  MUST BE PRESERVED UNTIL THE NEXT INSTRUCTION HAS BEEN EXECUTED.
         BNE   *+6                 NO MATCH -- SKIP SETTING R1
         SR    R1,R1               SET SUCCESSFUL RETURN
         BR    R14                 MATCH
         EJECT
*  INITIALIZATION CODE
INIT     DS    0H
         L     R1,BLKADDR          GET OLD BLOCK ADDRESS
         L     R3,CVTPTR           R3-->CVT
         NEED  CVT
         USING CVT,R3
*  IF R0 WAS + ON ENTRY, REQUEST IS CANCEL OR BLOCK ADDRESS ONLY
         BM    INITCB
         ST    R0,BLKADDR          SAVE DEB IDENTITY BLOCK ADDRESS
         ST    R15,CVTRSV18        SAVE BRANCH ENTRY ADDRESS
INITEXIT LR    R0,R1               GET EXIT PARM
         B     ENABLE
INITCB   A     R0,=F'1'            CHECK IF R0 WAS >1
         BM    INITEXIT            IF SO, RETURN ADDRESS
INITDEL  XC    CVTRSV18,CVTRSV18   CANCEL
         XC    BLKADDR,BLKADDR     CANCEL
         B     INITEXIT
         DROP  R3
         EJECT
*  DATA AREA
SAVE     DC    4F'0'               REGISTER SAVE AREA
BLKADDR  DC    A(0)                ADDRESS OF ID BLOCK
BYTE     DC    X'0'                BYTE FOR STOSM
         SPACE 3
         LTORG ,
         SPACE 3
*  DEB IDENTITY BLOCK DESCRIPTION
BLOKE    DSECT
         DS    A(BLOCK)            -->FIRST ENTRY
         DS    A(L'BLOCK)          LENGTH OF ENTRY
         DS    A(0)                -->LAST ENTRY
BLOCK    DS    XL16
         ORG   BLOCK
         DS    B                   FILE MASK
BLOCKA   DS    AL3                 UCB ADDRESS
         DS    CL2                 BIN NUMBER
         DS    CL2                 STARTING CC
         DS    CL2                 STARTING HH
         DS    CL2                 ENDING CC
         DS    CL2                 ENDING HH
         DS    CL2                 TRACKS IN EXTENT
         ORG   ,
BLOCKDEB EQU   BLOCKA,*-BLOCKA     ADDR + LENGTH OF ID FIELDS
         SPACE 1                                                 79139
IGC237   CSECT ,                                                 79139
         MSECT ,
         END
