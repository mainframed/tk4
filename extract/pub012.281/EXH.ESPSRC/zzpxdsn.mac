PXDSN    TITLE 'Z Z P X D S N  ***  PANEL EXIT - DSNAME VERIFICATION'
         PUNCH ' ORDER ZZPXDSN(P) '  MAKE DUMPS EASIER
         PUNCH ' ALIAS ZZPXDSM,ZZPXDST,ZZPXDSQ,ZZPXMEM,ZZPXVOL,ZZPXUNT'
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
**                                                                   **
**  THIS MODULE IS INVOKED VIA A PANEXIT LOAD STATEMENT IN A PANEL:  **
**   PANEXIT((DSNVAR,ESPPROD,VF#,BADVAR,COL),LOAD,'ZZPXDSN',MSG=X)   **
**                                                                   **
**  ONLY THE FIRST VARIABLE IN THE LIST IS CHECKED FOR VALIDITY.     **
**  DSNVAR MUST MEET CONVENTIONS FOR USE AS A DATASET NAME WITHOUT   **
**    A GDG NUMBER OR A MEMBER NAME (USE FUNCTION ZZPXDSM FOR THOSE) **
**  (FOR ZZPXDST, DSNVAR MAY INCLUDE WILDCARD CHARACTERS)            **
**  (FOR ZZPXDSQ, DSNVAR IS CHECKED, THEN LOCATED IN THE CATALOG)    **
**  (FOR ZZPXMEM, ZZPXUNT, AND ZZPXVOL, THE VARIABLE IS CHECKED AS   **
**   BEING VALID FOR A MEMBER, UNIT, AND VOL-SER, RESPECTIVELY)      **
**                                                                   **
**  ESPPROD IS A TEXT STRING BEGINNING WITH THE PRODUCT NAME (E.G.,  **
**    EXHIBIT). THE FIRST CHARACTER WILL BE USED AS THE THIRD        **
**    CHARACTER IN THE ERROR MESSAGE NAME (EXHM22N)                  **
**  VF# IS A ONE-BYTE CHARACTER VARIABLE THAT WILL BE SET TO C'0'    **
**    FOR AN ACCEPTABLE NAME, AND TO C'1' ON ERROR (RC=8, NOT 20)    **
**  BADVAR IS AN OPTIONAL NAME, PRESET TO C'XXXXXXXX'. ON ERROR, IT  **
**    IS SET TO THE FAILING VARIABLE NAME. THIS ALLOWS A CHAIN OF    **
**    PANEXIT STATEMENTS TO RETURN THE FIRST BAD NAME ONLY.          **
**  COL IS A THREE-BYTE VARIABLE, INITIALIZED TO C'001', THAT WILL   **
**    BE SET TO THE COLUMN IN ERROR, PROVIDED THE COLUMN CAN BE      **
**    DETERMINED, AND BADVAR IS ALSO BEING SET.                      **
**  MSG= SPECIFIES AN OPTIONAL MESSAGE VARIABLE. UNCHANGED EXCEPT    **
**    WHEN AN ERROR IS DETECTED, THEN SET TO A MESSAGE ID.           **
**                                                                   **
**  COPYRIGHT 1998,2003 EXPERT SYSTEM PROGRAMMING                    **
**                                                                   **
**  AUTHOR: G. POSTPISCHIL                                           **
**                                                                   **
**  DEPENDENCIES:  REQUIRES AMODE 31, RMODE ANY                      **
**                 CODE IS REUSABLE, NOT REENTRANT NOR REFRESHABLE   **
**                                                                   **
**                                                                   **
**  RETURNS R15 = 0   WHEN NAME IS VALID                             **
**              = 8   WHEN NAME IS NOT VALID - SETS MSGID TO ESPM22N **
**              = 20  DOES **NOT** SET A MESSAGE NUMBER - THE PANEL  **
**                    INVOCATION MUST DO SO.                         **
**                                                                   **
**    R15 = 8 RETURN CARRIES A REASON CODE IN R0:                    **
**                    (REASON CODE IS USED AS THE LAST MSGID DIGIT)  **
**                                                                   **
**                1   NAME LENGTH IS NON-POSITIVE                    **
**                2   NAME EXCEEDS 44 CHARACTERS                     **
**                3   INDEX LENGTH = 0                               **
**                4   INDEX LEVEL MORE THAN 8 CHARACTERS             **
**                5   NAME HAS TRAILING PERIOD                       **
**                6   FIRST CHARACTER OF LEVEL IS INVALID            **
**                7   OTHER CHARACTER IS INVALID                     **
**                8   NAME HAS NO INDEX LEVELS                       **
**                9   INVALID GDG OR MEMBER SPECIFICATION            **
**               10   NEGATIVE RESPONSE                              **
**               11   DS NOT CATALOGED                               **
**                                                                   **
**  NOTE THAT A DSN MAY BE QUOTED, BUT EVEN SO MAY NOT CONTAIN       **
**    BLANKS OR SPECIAL CHARACTERS.                                  **
**                                                                   **
**  WHEN INVOKED AT ENTRY POINT ZZPXDST, THE NAME MAY ADDITIONALLY   **
**  CONTAIN A MEMBER NAME OR GDG SPECIFICATION. THE CODE IS INVOKED  **
**  WHEN A MATCHED SET OF PARENTHESES IS FOUND; UNBALANCED PARENTHE- **
**  SES OTHERWISE RESULT IN MESSAGE 7 (INV.CHAR.) OR 2 (EXC.LENGTH). **
**                                                                   **
**                9   INVALID GDG OR MEMBER SPECIFICATION            **
**                                                                   **
**                                                                   **
***********************************************************************
**                                                                   **
**  MAINTENANCE:                                                     **
**                                                                   **
**  GYP  1998-04-01   ADDED DST ENTRY POINT AND GDG/MEMBER CHECKING  **
**  GYP  2003-05-23   COMBINED WITH VOL & UNIT CHECKING              **
**                                                                   **
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
ZZPXDSN  PGMHEAD ZERO12,BASE=R12,AM=31,RM=24,PARM=R1,                  *
               EID=NO,ENTNO=ENTINDEX,                                  *
               ENTRY=(ZZPXDSM,    CHECK DSN(MEM)                       *
               ZZPXDST,           CHECK DSN(MEM) WITH MASKING          *
               ZZPXDSQ,           LOCATE DSN IN CATALOG                *
               ZZPXMEM,           CHECK MEMBER NAME                    *
               ZZPXVOL,           CHECK VOLUME SERIAL                  *
               ZZPXUNT,ZZPXUNIT)  CHECK UNIT NAME
         LM    R4,R8,(4-1)*4(R1)  LOAD 4TH-8TH ARGUMENT ADDRESSES
         ICM   R3,15,0(R5)     LOAD NUMBER OF VARIABLES
         BNP   FATALITY      IMPROPER CALL
         MVC   COL,=CL8'00000001'  SET ERROR COLUMN FIELD TO 1
         SPACE 1
REASL0   EQU   1             REASON CODE - NAME LENGTH = 0
REASLX   EQU   2             REASON CODE - NAME TOO LONG
REASI0   EQU   3             REASON CODE - INDEX LENGTH = 0
REASIX   EQU   4             REASON CODE - INDEX TOO LONG
REASTP   EQU   5             REASON CODE - TRAILING PERIOD
REAS1C   EQU   6             REASON CODE - INVALID FIRST CHARACTER
REASIC   EQU   7             REASON CODE - INVALID CHARACTER
REASNX   EQU   8             REASON CODE - UNINDEXED NAME
REASBM   EQU   9             REASON CODE - BAD GDG/MEMBER SPECIFICATION
REASNG   EQU   10            REASON CODE - NEGATIVE RESPONSE
REASNC   EQU   11            REASON CODE - NOT CATALOGED
         SPACE 1
LDSMAX   EQU   44            DSNAME - 44 CHARACTERS MAXIMUM
LEVMAX   EQU   8             INDEX LEVEL - 8 CHARACTERS MAXIMUM
LMBMAX   EQU   8             MEMBER NAME - 8 CHARACTERS MAXIMUM
LVSMAX   EQU   6             VOLUME SERIAL - 6 CHARACTERS MAXIMUM
LUNMAX   EQU   8             UNIT NAME   - 8 CHARACTERS MAXIMUM
         SPACE 1
*---------------------------------------------------------------------*
*   R3 - NUMBER OF VARIABLES (WANT 5)                                 *
*   R4 - ADDRESS OF (RETURNED) MSGID                                  *
*   R5 - -> NUMBER OF VARIABLES                                       *
*   R6 - -> NAME OF VARIABLES                                         *
*   R7 - ADDRESS OF VARIABLE LENGTHS                                  *
*   R8 - ADDRESS OF VARIABLES                                         *
*---------------------------------------------------------------------*
         SPACE 1
         MVC   CURRNAME,0(R6)  SAVE CURRENT VARIABLE NAME
         ST    R4,@MSG       SAVE MESSAGE ID ADDRESS
         SPACE 1
         LA    R2,@VAR       GET MY ADDRESS/LENGTH POINTERS
EXTRACT  ICM   R9,15,0(R7)   GET LENGTH OF THIS VARIABLE
         BM    FATALITY      I WON'T HANDLE NEGATIVE LENGTHS !
         BZ    EXTRACT0      ZERO LENGTH - UNUSABLE
         STM   R8,R9,0(R2)   SAVE THE ADDRESS AND LENGTH
EXTRACT0 LA    R2,@PROD-@VAR(,R2)  STEP TO NEXT FIELD
         LA    R7,4(,R7)     NEXT LENGTH FIELD
         AR    R8,R9         NEXT TEXT FIELD
         BCT   R3,EXTRACT    CONTINUE
         SPACE 1
         LA    R14,LEADTABL  GET DESTINATION TRT ADDRESS
         LA    R15,TABMOVLN  AND MATCHING LENGTH
         LA    R0,PATTLEAD   SOURCE TRT TABLES
         LR    R1,R15        AND SAME LENGTH
         MVCL  R14,R0        BUILD TABLES
         SPACE 1
*---------------------------------------------------------------------*
*  LOAD ADDRESS AND LENGTH OF DATA TO BE CHECKED                      *
*   R1-ADDR  R2-LEN  R5-LEN-1 FOR EXECUTE                             *
*---------------------------------------------------------------------*
         LM    R1,R2,@VAR    LOAD ADDRESS AND LENGTH TO BE CHECKED
         LTR   R5,R2         TEST LENGTH OF THIS VARIABLE
         BNP   ERROR         INVALID - QUIT NOW
         BCTR  R5,0          SET NAME LENGTH FOR EXECUTE
         BIX   VAL=ENTINDEX,ERR=FATALITY,                              *
               LOC=(COMMDSN,COMMDSN,WILDDSN,COMMDSN, COMMON DS NAME    *
               CHKMEM,       CHECK MEMBER NAME                         *
               CHKVOL,       CHECK MEMBER NAME                         *
               CHKUNIT,CHKUNIT)  CHECK UNIT NAME
         SPACE 1
*---------------------------------------------------------------------*
*  FOR ZZPXDST ALLOW WILD CARD CHARACTERS IN NAME                     *
*---------------------------------------------------------------------*
WILDDSN  MVI   LEADTABL+C'*',0
         MVI   CHARTABL+C'*',0
         MVI   PARETABL+C'*',0
         MVI   MEMBTABL+C'*',0
         SPACE 1
*---------------------------------------------------------------------*
*   R0 - MAX LENGTH OF ONE LEVEL NAME                                 *
*   R1 - NEXT SCAN POSITION                                           *
*   R2 - TRT FLAG BYTE                                                *
*   R3 - TRT START ADDRESS; TEXT LENGTH                               *
*   R5 - LENGTH -1 REMAINING TO BE CHECKED                            *
*---------------------------------------------------------------------*
COMMDSN  LA    R0,LEVMAX     MAKE A CONSTANT
         LA    R11,REASL0    SET REASON CODE - LENGTH = 0
         LA    R14,REASNX    SET NO INDEX LEVEL FLAG
         SPACE 1
*---------------------------------------------------------------------*
*  THIS CODE CHECKS FOR AND ALLOWS APOSTROPHE QUOTING. TO MIMIC       *
*   CALLER'S BEHAVIOR (EXH----), UNBALANCED QUOTES ARE ALLOWED.       *
*---------------------------------------------------------------------*
         CLI   0(R1),C''''   LEADING QUOTE?
         BNE   NOTLEAD       NO
         LA    R1,1(,R1)     ADJUST ADDRESS
         SH    R5,=H'1'      ADJUST LENGTH
         BM    ERROR         (REASON STILL SET TO REASL0)
NOTLEAD  LA    R14,0(R5,R1)  POINT TO LAST BYTE
         CLI   0(R14),C''''  TRAILING QUOTE?
         BNE   NOTRAIL       NO
         SH    R5,=H'1'      ADJUST LENGTH
         BM    ERROR         TOO BAD
         SPACE 1
*---------------------------------------------------------------------*
*  CHECK FOR DST, RATHER THAN DSN, ENTRY.                             *
*   IF SO, SEE WHETHER LEFT PARENTHESIS SPECIFIED.                    *
*   IF YES, LAST BYTE MUST BE RIGHT PARENTHESIS                       *
*   TEXT BETWEEN MUST BE 1-8 BYTES LONG                               *
*   IF FIRST BYTE IS + OR -, MUST HAVE 1-7 NUMERICS FOLLOWING         *
*   OTHERWISE 1-8 BYTES MATCHING INDEX LEVEL RESTRICTIONS             *
*   INVALID ENTRY GETS MESSAGE 229                                    *
*---------------------------------------------------------------------*
NOTRAIL  ST    R1,@VAR       SAVE NEW ADDRESS FOR DSQ
         LA    R14,1(,R5)    NEW LENGTH
         ST    R14,@VAR+4
         CLI   ENTINDEX,0    DSN ENTRY ?
         BE    SKIPMEM       YES; NEED NOT DO MEMBER CHECK
         LR    R3,R1         PRESERVE START TEXT ADDRESS
         LA    R11,REASLX    SET REASON CODE - TOO LONG
         CH    R5,=Y(LDSMAX+1+LMBMAX+1)  VALID LENGTH? DS(MB)
         BNL   ERROR         NO; FAIL
         LA    R11,REAS1C    PRESET FOR INVALID LEADING CHARACTER
         TRT   0(1,R1),LEADTABL  IS FIRST CHARACTER VALID?
         BNZ   ERRPOS        NO; SET ERROR POSITION
         SLR   R2,R2
         LA    R15,PARETABL  LOOK FOR INVALID OR LEFT PARENTHESIS
         EX    R5,TRTSOME    LOOK FOR INVALID OR LEFT PARENTHESIS
         CLI   0(R1),C'('    DID WE FIND ONE?
         BNE   PASSMEM       NO; WILL CATCH IT LATER
         LA    R11,REASBM    ALL MSGS HERE: BAD GDG/MBR SPEC.
         LA    R6,0(R5,R3)   POINT TO LAST BYTE
         CLI   0(R6),C')'    TRAILING PARENTHESIS?
         BNE   ERRPOS        NOT VALID MEMBER SPECIFICATION
         BCTR  R5,0          ADJUST LENGTH FOR )
         AR    R5,R1         ADD TRT HIT ADDRESS
         SR    R5,R6         LESS END ADDRESS = NEW LENGTH-1
         BM    ERROR         OOPS
         SR    R6,R1         END ")" LESS "(" ADDRESS
         SH    R6,=H'2'      ADJUST AND SUBTRACT 1 FOR EXECUTE
         BM    ERRPOS        NULL NAME
         CH    R6,=Y(LMBMAX)  NOT TOO LONG?
         BNL   ERRPOS        TOO LONG
         LA    R1,1(,R1)     SKIP OVER THE LEFT PARENTHESIS
         SLR   R2,R2
         TRT   0(1,R1),MEMBTABL  IS THE FIRST BYTE VALID FOR MEMBER?
         CLM   R2,1,MEMBTABL+C'$'  VALID MEMBER NAME? (A-Z,@,#,$) ?*?
         BE    CHARMEM       PERHAPS; VALIDATE REST
         CLM   R2,1,MEMBTABL+C'0' WAS IT A ZERO ?
         BE    DIGIMEM       YES; (0) IS VALID
         CLM   R2,1,MEMBTABL+C'-'  VALID GDG NAME?    (+,-)
         BNE   ERRPOS        NO; FAIL IT
         LA    R1,1(,R1)     SKIP FIRST BYTE
         SH    R6,=H'1'      SET RESIDUAL LENGTH
         BM    ERRPOS        NONE; (+) AND (-) ARE INVALID
DIGIMEM  LA    R15,DIGITABL  GET DIGIT TABLE
         EX    R6,TRTSOME    CHECK FOR WHOLE NUMBER
         BNZ   ERRPOS        FAIL IF OTHER
         CH    R6,=H'2'      MAX OF THREE DIGITS (VALUE < 256?)
         BNH   PASSMEM       PASSED CHECK
         B     ERRPOS        TOO LONG; TOO BAD
         SPACE 1
CHARMEM  LA    R15,CHARTABL  GET ALPHAMERICS
         EX    R6,TRTSOME    SEE IF VALID FOR INDEX LEVEL
         BNZ   ERRPOS        NO; ELSE FALL THROUGH TO ACCEPT
         SPACE 1
*---------------------------------------------------------------------*
*  WE FOUND A LEFT AND RIGHT PARENTHESIS. SET LENGTH FOR DSN,         *
*   AND EXAMINE WHAT'S LEFT.                                          *
*---------------------------------------------------------------------*
         SPACE 1
PASSMEM  LR    R1,R3         RESTORE TEXT ADDRESS
         SPACE 1
*---------------------------------------------------------------------*
*  COMMON CODE FOR DSN AND DST                                        *
*   CHECK MAXIMUM LENGTH < 45                                         *
*---------------------------------------------------------------------*
SKIPMEM  LA    R11,REASLX    SET REASON CODE - TOO LONG
         CH    R5,=Y(LDSMAX) VALID LENGTH? (NOTE: ALREADY -1 FOR EX)
         BNL   ERROR         NO; FAIL
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK THAT FIRST BYTE IS VALID                                    *
*   FOR EACH INDEX: CHECK VALIDITY OF FIRST BYTE IN INDEX             *
*   CHECK REMAINING BYTES (0-7)                                       *
*---------------------------------------------------------------------*
NEXTLEV  LR    R3,R1         PRESERVE START ADDRESS
         LA    R11,REAS1C    PRESET FOR INVALID LEADING CHARACTER
         TRT   0(1,R1),LEADTABL  IS FIRST CHARACTER VALID?
         BNZ   ERRPOS        NO; SET ERROR POSITION
         SPACE 1
*---------------------------------------------------------------------*
*  THREE CASES:  NO INVALID DATA - LENGTH MUST BE 8 OR LESS           *
*                PERIOD - LENGTH MUST BE 8 OR LESS; CONTINUE          *
*                INVALID DATA - FAIL                                  *
*---------------------------------------------------------------------*
         LTR   R5,R5         COPY RESIDUAL LENGTH
         BNP   DONEVAR       ONLY ONE BYTE; DONE
         SR    R2,R2         CLEAR FOR TRT INSERTION
         LA    R11,REASIC    PRESET FOR INVALID CHARACTER
         LA    R15,CHARTABL  POINT TO ALPHAMERICS
         EX    R5,TRTSOME    CHECK FOR INVALID CHARACTERS
         CLM   R2,1,CHARTABL+C'.'  IS IT A PERIOD?
         BH    ERRPOS        NO; IT'S HIGH AND IT'S BAD
         BE    HAVELEV       FOUND PERIOD
         CR    R5,R0         IS LENGTH VALID?
         BL    DONEVAR       YES; DONE
         LA    R11,REASIX    INDEX LENGTH TOO HIGH
         LA    R1,LEVMAX(R3)  POINT TO BAD BYTE
         B     ERRPOS        NO; FAIL
         SPACE 1
HAVELEV  LR    R4,R3         SAVE START POSITION FOR ERROR
         SR    R14,R14       SHOW INDEX LEVEL FOUND
         LA    R11,REASI0    PRESET FOR DOUBLED PERIOD
         SR    R3,R1         GET LENGTH OF TEXT SKIPPED OVER
         LPR   R3,R3           BUT MAKE IT POSITIVE
         BNP   ERRPOS        INDEX LENGTH ZERO
         LA    R11,REASTP    TRAILING PERIOD
         BCTR  R5,0          ALLOW FOR PERIOD
         SR    R5,R3         SET RESIDUAL LENGTH
         BM    ERRPOS        PERIOD MUST NOT BE LAST
         LA    R1,1(,R1)     ALLOW FOR THE PERIOD
         CR    R3,R0         NOT TOO LONG?
         BNH   NEXTLEV       GOOD; TRY AGAIN
         LA    R11,REASIX    INDEX TOO LONG
         LA    R1,LEVMAX(R4)  POINT TO BAD BYTE
         B     ERRPOS        ELSE SEGMENT TOO LONG
         SPACE 1
DONEVAR  LTR   R11,R14       DID WE HIT AN INDEX LEVEL?
*CONSIDERBNZ   ERROR         NO; THIS IS AN ERROR NOW-A-DAYS ?
         BIX   VAL=ENTINDEX,ERR=FATALITY,                              *
               LOC=(GOODEXIT,GOODEXIT,GOODEXIT,LOCDSN)
         SPACE 1
*---------------------------------------------------------------------*
*  LOCATE DSNAME IN CATALOG                                           *
*---------------------------------------------------------------------*
LOCDSN   LM    R4,R5,@VAR    RESTORE ADDRESS AND LENGTH
         LOCBYTE (R4),LEN=(R5),BYTE=C'('
         SR    R15,R4        GET LENGTH OF DS NAME
         LR    R14,R4        COPY CURRENT NAME ADDRESS
         LA    R0,PLAINDSN   GET NEW NAME
         LA    R1,L'PLAINDSN  GET NEW LENGTH
         ICM   R15,8,BLANKS  REQUEST BLANK FILL
         MVCL  R0,R14        COPY AND EXPAND DS NAME
         MVC   CAMLST(4),PATNAME
         LA    R15,PLAINDSN
         SR    R0,R0         CVOL POINTER
         LA    R1,CAMBACK    WORK AREA
         STM   R15,R1,CAMLST+4
*DONE*   SR    R0,R0         OLD MOUNT UCB ADDRESS CONVENTION
         LOCATE CAMLST       DO CATALOG LOOKUP
         LTR   R15,R15
         BZ    GOODEXIT      NICE
         LA    R11,REASNC    PLAIN NOT CATALOGED
         CH    R15,=H'8'     HOW GOES IT ?
         BE    ERROR         NOT CATALOGED
         LA    R11,REASNG    POSS. VOLUME NOT UP; BAD CATALOG; ???
         B     ERROR
PATNAME  CAMLST NAME,1,,3
         ORG   PATNAME+4
         SPACE 1
*---------------------------------------------------------------------*
*  EXIT - RETURNS CONDITION CODE IN R15, REASON CODE IN R0            *
*---------------------------------------------------------------------*
GOODEXIT SR    R10,R10       CLEAR RETURN CODE
         SR    R11,R11       CLEAR REASON CODE
COMMEXIT STM   R10,R11,DB    SET RETURN AND REASON CODES
         PGMEXIT COPYRET=(DB,8)  RETURN TO CALLER WITH R15-R0 CODES
         SPACE 1
*---------------------------------------------------------------------*
*  CHECK A MEMBER NAME                                                *
*   LENGTH 1-8                                                        *
*   FIRST BYTE ALPHABETIC OR NATIONAL                                 *
*   REMAINING BYTES ALPHABETIC, NATIONAL, OR NUMERIC                  *
*---------------------------------------------------------------------*
CHKMEM   LA    R0,LMBMAX     SET MAXIMUM LENGTH
         LA    R15,CHARTABL  POINT TO ALPHAMERICS
         B     COMMCHK       GO TO COMMON CHECK ROUTINE
         SPACE 1
*---------------------------------------------------------------------*
*  CHECK A VOLUME SERIAL                                              *
*   LENGTH 1-6                                                        *
*   TEXT MUST BE ALPHABETIC, NATIONAL, NUMERIC, OR SPECIAL CHARACTERS *
*---->>>> ONLY SOME SPECIAL CHARACTERS ARE SUPPORTED LOCALLY  <<<<----*
*---------------------------------------------------------------------*
CHKVOL   LA    R0,LVSMAX     SET MAXIMUM SERIAL LENGTH
         LA    R15,VSERTABL  POINT TO ALPHAMERICS PLUS
         B     COMMCHK       GO TO COMMON CHECK ROUTINE
         SPACE 1
*---------------------------------------------------------------------*
*  CHECK A UNIT (DEVICE NUMBER, DEVICE TYPE, GROUP NAME)              *
*   LENGTH 1-8                                                        *
*   TEXT MUST BE ALPHABETIC, NATIONAL, NUMERIC, OR HYPHEN             *
*---------------------------------------------------------------------*
CHKUNIT  LA    R0,LUNMAX     SET MAXIMUM UNIT LENGTH
         LA    R15,UNITTABL  POINT TO ALPHAMERICS PLUS
*---------------------------------------------------------------------*
*  COMMON CHECK - R0 - MAX LEN   R15 - TRT TABLE ADDRESS              *
*---------------------------------------------------------------------*
COMMCHK  LA    R11,REASLX    SET REASON CODE - TOO LONG
         CR    R5,R0         VALID LENGTH? (R5 ALREADY -1 FOR EX)
         BNL   ERROR         NO; FAIL
         LA    R11,REASIC    PRESET FOR INVALID CHARACTER
         EX    R5,TRTSOME    LOOK FOR INVALID CHARACTER
         BZ    GOODEXIT      NONE; NAME IS GOOD
         B     ERRPOS        NULL NAME
         SPACE 1
*---------------------------------------------------------------------*
*  ERROR - SET ERROR COLUMN, MESSAGE NUMBER                           *
*---------------------------------------------------------------------*
ERRPOS   S     R1,@VAR       GET RELATIVE POSITION OF ERROR
         LA    R1,1(,R1)     ALLOW FOR RELATIVITY
         CVD   R1,DB         PACK IT
         UNPK  COL,DB        UNPACK IT
         OI    COL+L'COL-1,C'0'  MAKE UNSIGNED ZONE
ERROR    L     R4,@MSG       RESTORE MESSAGE ADDRESS
         LA    R10,8         SET ERROR RETURN CODE
         STM   R10,R11,DB
         SR    R10,R10
         D     R10,=F'10'    ISOLATE TENS/UNITS
         STC   R10,6(,R4)    SET LAST DIGIT
         LA    R11,2(,R11)   REASONS ARE IN RANGE 20-39
         STC   R11,5(,R4)    SET TENS DIGIT
         OC    0(8,R4),MSGID MAKE REMAINDER OF NAME
         LM    R10,R11,DB    RESTORE ERROR RETURN CODES
         ICM   R5,15,@PROD   WAS PRODUCT SUPPLIED?
         BZ    NONPROD       NO
         TRT   0(1,R5),LEADTABL  IS IT PLAUSIBLE?
         BNZ   NONPROD       NO
         MVC   0(3,R4),0(R5)  MOVE THREE BYTES AS MSG ID PREFIX
NONPROD  ICM   R4,15,@BADVAR SEE IF THERE IS A BAD VARIABLE TO RETURN
         BZ    NONBADNM      NO
         CLC   =C'XXXXXXXX',0(R4)  FIRST HIT ON THIS )PROC ?
         BNE   NONBADNM      NO
         MVC   0(8,R4),CURRNAME  MOVE NAME OF CURRENT, BAD VARIABLE
         LM    R4,R5,@COL    GET COLUMN FIELD ADDRESS AND LENGTH
         LTR   R4,R4         ANY ?
         BZ    NONBADNM      NO; SKIP
         C     R5,=A(L'COL)  IS THE OUTPUT FIELD LONGER THAN MINE?
         BH    COLLONG       YES; USE MVCL AND BLANK FILL
         BL    COLSHORT      NO; TRUNCATE
         MVC   0(L'COL,R4),COL  MOVE MY COLUMN NUMBER
         B     NONBADNM
COLSHORT LA    R1,COL+L'COL  GET BYTE PAST COLUMN NUMBER FIELD
         SR    R1,R5         LESS OUTPUT LENGTH - START POSITION
         BCTR  R5,0          CHOP LENGTH FOR EXECUTE
         EX    R5,MVCCOL     MOVE COLUMN NUMBER
         B     NONBADNM      GO TO FLAG CHECK
MVCCOL   MVC   0(0,R4),0(R1)  MOVE SIGNIFICANT PORTION OF COL #
COLLONG  LA    R0,COL        POINT TO COLUMN
         LA    R1,L'COL        AND ITS LENGTH
         ICM   R1,8,=C' '    REQUEST BLANK FILL
         MVCL  R4,R0         MOVE IT
NONBADNM ICM   R4,15,@FLAG   RETURN FLAG ?
         BZ    NONFLAG       NO
         MVI   0(R4),C'1'    SHOW FLAG BAD
NONFLAG  B     COMMEXIT      AND QUIT NOW
         SPACE 1
*---------------------------------------------------------------------*
*  FATAL ERROR - GET OUT                                              *
*---------------------------------------------------------------------*
FATALITY LA    R10,20        SET IMPOSSIBLE RETURN
         LA    R11,666       BAD NUMBER (OF VARIABLES)
         B     COMMEXIT      BUT RETURN ANYWAY
         SPACE 1
TRTSOME  TRT   0(0,R1),0(R15)  CHECK FOR INVALID CHARACTERS
BLANKS   DC    CL8' '
MSGID    DC    CL8'ESPM200 '  COMMON ERROR MESSAGE 220-239
         SPACE 1
PATTLEAD DC    256X'FF'      SET ALL CHARACTERS INVALID
         TRENT PATTLEAD,0,(C'A',9)     ALLOW A-I
         TRENT PATTLEAD,0,(C'J',9)     ALLOW J-R
         TRENT PATTLEAD,0,(C'S',8)     ALLOW S-Z
         TRENT PATTLEAD,0,C'@',C'#',C'$'   ALLOW NATIONALS
         TRENT PATTLEAD,0,C'.'  ****>>>> NOTE THAT WE ALLOW A LEADING
*                            ****>>>> PERIOD TO DIAGNOSE EMPTY LEVELS
         SPACE 1
PATTCHAR DC    256X'08'      SET ALL CHARACTERS INVALID
         TRENT PATTCHAR,0,(C'A',9)     ALLOW A-I
         TRENT PATTCHAR,0,(C'J',9)     ALLOW J-R
         TRENT PATTCHAR,0,(C'S',8)     ALLOW S-Z
         TRENT PATTCHAR,0,(C'0',10)    ALLOW 0-9
         TRENT PATTCHAR,0,C'@',C'#',C'$'   ALLOW NATIONALS
         TRENT PATTCHAR,4,C'.'         ALLOW . INDEX LEVEL START
         SPACE 1
PATTPARE DC    256X'08'      MAKE EVERYTHING INVALID
         TRENT PATTPARE,0,(C'A',9)     ALLOW A-I
         TRENT PATTPARE,0,(C'J',9)     ALLOW J-R
         TRENT PATTPARE,0,(C'S',8)     ALLOW S-Z
         TRENT PATTPARE,0,(C'0',10)    ALLOW 0-9
         TRENT PATTPARE,0,C'@',C'#',C'$'   ALLOW NATIONALS
         TRENT PATTPARE,0,C'.'         ALLOW . INDEX LEVEL START
         SPACE 1
PATTMEMB DC    256X'08'      MAKE EVERYTHING INVALID
         TRENT PATTMEMB,0,(C'A',9)     ALLOW A-I
         TRENT PATTMEMB,0,(C'J',9)     ALLOW J-R
         TRENT PATTMEMB,0,(C'S',8)     ALLOW S-Z
         TRENT PATTMEMB,0,C'@',C'#',C'$'   ALLOW NATIONALS
         TRENT PATTMEMB,4,C'+',C'-'    GDG FIRST BYTE
         TRENT PATTMEMB,2,C'0'         ALLOW 0 FOR GDG FIRST BYTE
         SPACE 1
DIGITABL DC    256X'08'      MAKE EVERYTHING INVALID
         TRENT DIGITABL,0,(C'0',10)    ALLOW 0-9
         SPACE 1
UNITTABL DC    256X'08'      SET ALL CHARACTERS INVALID
         TRENT UNITTABL,0,(C'A',9)     ALLOW A-I
         TRENT UNITTABL,0,(C'J',9)     ALLOW J-R
         TRENT UNITTABL,0,(C'S',8)     ALLOW S-Z
         TRENT UNITTABL,0,(C'0',10)    ALLOW 0-9
         TRENT UNITTABL,0,C'@',C'#',C'$'   ALLOW NATIONALS
         TRENT UNITTABL,0,C'-'         ALLOW HYPHEN
         SPACE 1
***********************************************************************
**                                                                   **
**  NOTE: IBM ALLOWS SPECIAL CHARACTERS IN VOLUME SERIAL NAMES       **
**        THIS TABLE ONLY SUPPORTS SLASH AND HYPHEN PER LOCAL        **
**        PREFERENCE.                                                **
**                                                                   **
***********************************************************************
VSERTABL DC    256X'08'      SET ALL CHARACTERS INVALID
         TRENT VSERTABL,0,(C'A',9)     ALLOW A-I
         TRENT VSERTABL,0,(C'J',9)     ALLOW J-R
         TRENT VSERTABL,0,(C'S',8)     ALLOW S-Z
         TRENT VSERTABL,0,(C'0',10)    ALLOW 0-9
         TRENT VSERTABL,0,C'@',C'#',C'$'   ALLOW NATIONALS
         TRENT VSERTABL,0,C'-'         ALLOW HYPHEN
         TRENT VSERTABL,0,C'/'         ALLOW SLASH
         SPACE 2
*  REENTRANT WORK SPACE (ADDRESSES=0 FOR UNSUPPLIED VARIABLES)
SAVE     DSECT ,             SAVE/WORK AREA
DB       DC    D'0'          CONVERSION AND STORAGE
@VAR     DC    2A(0)   1/5   ADDRESS/LENGTH OF VARIABLE
@PROD    DC    2A(0)   2/5   ADDRESS/LENGTH OF PRODUCT NAME
@FLAG    DC    2A(0)   3/5   ADDRESS/LENGTH OF ERROR FLAG
@BADVAR  DC    2A(0)   4/5   ADDRESS/LENGTH OF ERROR VARIABLE
@COL     DC    2A(0)   5/5   ADDRESS/LENGTH OF ERROR COLUMN
@MSG     DC    A(0)          ADDRESS OF MSGID (RETURN)
CURRNAME DC    CL8' '        NAME OF VARIABLE TO BE CHECKED
COL      DC    CL8' '        COLUMN NUMBER OF ERROR
ENTINDEX DC    X'00'         ENTRY INDEX
         SPACE 1
LEADTABL DS    XL256         TRT - LEADING BYTE IN NAME/INDEX LEVEL
CHARTABL DS    XL256         TRT - OTHER BYTE IN NAME/INDEX
PARETABL DS    XL256         TRT - NAME BYTE WITH INDEX ALLOWED
MEMBTABL DS    XL256         TRT - MEMBER/GDG BYTES
TABMOVLN EQU   *-LEADTABL    SIZE TO MOVE FROM PATTERN
         SPACE 1
         ORG   LEADTABL
CAMLST   DS    4A            CAMLST FOR CATALOG LOCATE
PLAINDSN DS    CL44          REQUESTED NAME
CAMBACK  DS    66D           RETURN WORK AREA
         ORG   ,
SAVEEND  EQU   *             END OF DYNAMIC SAVE/WORK AREA
         SPACE 1
         END   ,
