CMP70    TITLE 'C O M P 3 2 7 0  ***  3270 BUFFER COMPRESSION'
         MACRO ,
&NM      ORCH  &OFF,&VAL,&REP
         LCLC  &N
&N       SETC  '1'
         AIF   (T'&REP EQ 'O').ONCE
&N       SETC  '&REP'
.ONCE    ANOP  ,
         ORG   ORDERS+&OFF
&NM      DC    &N.AL1(&VAL)
         MEND  ,
         SPACE 1
         MACRO ,
&NM      GOTO  &WHO
OFF&WHO  EQU   *-OFFBASE
         B     COMP&WHO
         MEND  ,
         SPACE 1                                                 90154
         MACRO ,                                                 90154
&NM      CKIN  &N,&ERR=COMPBAD  CHECK BUFFER LENGTH FOR INPUT SEQ
&NM      LA    RET,&N.(,RIN)                                     90154
         CR    RET,RLEN      LONG ENOUGH FOR ENTIRE SEQUENCE ?   90154
         MACPARM &ERR,MODE=ONE,OP=BH,OPR=BHR,NULL=SKIP          GP02241
         MEND  ,                                                 90154
         SPACE 1                                                 90154
         MACRO ,                                                 90154
&NM      CKOUT &N,&ERR=BADEXIT                                   90154
&NM      LA    RET,&N.(,ROUT)  GET NEW END SEQUENCE              90154
         C     RET,MAXOUT    ENOUGH ROOM ?                       90154
         MACPARM &ERR,MODE=ONE,OP=BH,OPR=BHR,NULL=SKIP          GP02241
         MEND  ,                                                 90154
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 1973  GERHARD POSTPISCHIL (ASSIGNED TO E.S.P.)     *
*        COPYRIGHT 1990  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        BUFFER COMPRESSION AND COLOR SUBSTITUTION SUBROUTINE         *
*                                                                     *
*   CALL COMP3270(@OUT,@OUTLEN,@IN,@INLEN,@BUFSIZ,@OPTS,@COLTAB,0)    *
*         ALL @ ARE FULLWORD ADDRESSES; SIZES ARE FULLWORD BINARY     *
*         @COLTAB MAY BE ZERO (NO COLOR SUBSTITUTION REQUESTED)       *
*         @OPTS ARE MAPPED BY DSECT OPTIONS                           *
*                                                                     *
*        IF A PT ORDER IS FOUND, OR THE INPUT DOES NOT START WITH THE *
*        EXPECTED ESC×CCW×WCC×SBA SEQUENCE, THE BUFFER IS COPIED AS-IS*
*                                                                     *
*        CURRENTLY, BUFFERS STARTING WITH A WSF COMMAND ARE NOT       *
*        COMPRESSED. THIS MAY BE CHANGED LATER.                       *
*                                                                     *
*        NOTE THAT CONSECUTIVE SEQUENCES OF SBA ORDERS ARE SUPPRESSED;*
*        HENCE TCAM FULL-SCREEN SWITCH ON/OFF FAILS (SEE 'LOOPSBA').  *
*                                                                     *
*   CONTENTS OF @OUTLEN MUST BE SET TO MAXIMUM; TRUE VALUE OF         *
*   LENGTH IS RETURNED IN THIS WORD. THE OPTIONS BYTE CONTAINING      *
*   FUNCTION FLAGS MUST BE INITIALIZED BY THE CALLER; THE BITS        *
*   ARE CHANGED DURING PROCESSING.                                    *
*                                                                     *
*        R15 RETURN:  0      REQUEST COMPLETED                        *
*                     4      REQUEST COMPLETED; BAD CODE POINTS IN    *
*                            BUFFER (UNRECOGNIZED ORDER OR CHARACTER) *
*                     8      INCOMPLETE - OUTPUT BUFFER TOO SHORT     *
*                    12      INCOMPLETE - ERROR IN PARM, LENGTH OR ?  *
*                                                                     *
***********************************************************************
         SPACE 1                                                 90140
***********************************************************************
*                                                                     *
*        THE COLOR TABLE CONSISTS OF 144 BYTES:                       *
*              64 * XY  BYTES - HIGHLIGHT/COLOR REPLACEMENT FOR ATTR  *
*               8 * XY  BYTES - HIGHLIGHT/COLOR FOR COLOR ORDERS      *
*               8 BYTES SPARE                                         *
*              64 * XY  BYTES - OUTLINE/BACKGD COLOR FOR ATTRIBUTES   *
*                                                                     *
*        X : 0 OR F NO CHANGE; 1/9 2/A 4/C EXTENDED HIGH-LIGHTING     *
*        Y : 0-7  3270 COLOR SELECTION                                *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT &PRTSOR       SAVE A TREE
COMP3270 START 0
         USING COMP3270,RBASE       REGISTER 15 USED AS PROGRAM BASE
         USING SAVE,R13      DECLARE PASSED SAVE AREA
         STM   R14,R12,SAVE14   SAVE INPUT REGISTERS
REV      EQU   0             EVEN WORK REGISTER
ROD      EQU   1             ODD  WORK REGISTER
ROUT     EQU   2             OUTPUT BUFFER POINTER
RBUF     EQU   3             CURRENT BUFFER POSITION
RIN      EQU   4             INPUT BUFFER POINTER
RLEN     EQU   5             INPUT SCAN STOP ADDRESS
RSIZE    EQU   6             SCREEN SIZE
RON      EQU   8             CONSTANT OF ONE
RTHREE   EQU   9             CONSTANT OF THREE
RFOUR    EQU   10            CONSTANT OF FOUR
RWK      EQU   11            WORK REGISTER
RMASK    EQU   12            BUFFER ADDRESS CONVERSION MASK
RSAVE    EQU   13            SAVE AREA POINTER
RET      EQU   14            SUBROUTINE CALL RETURN ADDRESS
RBASE    EQU   15            PROGRAM BASE REGISTER
         XC    SAVE15,SAVE15   CLEAR RETURN CODE
COMPREST LM    R2,R8,0(R1)   LOAD PASSED PARAMETERS              90140
         USING INPUT,RIN     DECLARE 'INPUT' MAPPING             90140
         USING OUTPUT,ROUT   AND 'OUTPUT' MAPPING                90140
         USING OPTIONS,R7    DECLARE OPTION STRING               90140
         ICM   R3,15,0(R3)   GET MAXIMUM OUTPUT LENGTH           90141
         BNP   BADEXIT       MUST HAVE ROOM FOR SOMETHING        90141
         ICM   R5,15,0(R5)   GET INPUT LENGTH                    90141
         BNP   BADEXIT       NEED SOMETHING TO DO                90141
         CR    R3,R5         OUTPUT MUST BE GREATER OR EQUAL     90141
         BL    BADEXIT       SHOULD BE LARGER IF COLOR SUBSTITUTION
         AR    R3,R2         MAKE LAST OUTPUT BYTE +1            90154
         ST    R3,MAXOUT     SAVE IT                             90140
         ST    R8,@COLTAB    SAVE COLOR TABLE ADDRESS            90140
         SLL   R8,1          GET RID OF SIGN BIT                 90140
         LTR   R8,R8         ANY COLOR TABLE ?                   90140
         BZ    CANCOL        NO; CANCEL COLOR SUBSTITUTION       90140
         TM    OPCOL,OPSEVEN  7-COLOR SUPPORT ?                  90140
         BO    HONCOL        YES; HONOR REQUEST                  90140
         TM    OPHIGH,OPSEVEN  EXTENDED HIGH-LIGHTING ?          90140
         BO    HONCOL        YES; ALLOW COLOR TO HIGH-LIGHTING   90140
CANCOL   OI    OPFUN,OPNCOL  BYPASS SUBSTITUTION                 90140
HONCOL   ICM   RSIZE,15,0(R6)  LOAD BUFFER SIZE                  90141
         BNP   BADEXIT       TOO BAD                             90141
*                     BUILD CONSTANTS                            90140
         LA    RON,1         PLACE CONSTANT ONE INTO A REGISTER  90140
         LA    RTHREE,3      CONSTANT THREE                      90140
         LA    RFOUR,4       CONSTANT FOUR                       90140
         LA    RMASK,X'3F'   CURSOR ADDRESS MASK                 90140
*                                                                90140
         AR    RLEN,RIN      GET LAST INPUT ADDRESS + 1          90140
*                                                                90140
         TM    OPFUN,OPNCMP  BYPASS COMPRESSION ?                90140
         BNZ   COMPNCMP      YES; JUST COPY AS IS                90140
         CKIN  6,ERR=COMPNCMP   SEQUENCE AT LEAST 6 BYTES LONG ? 90154
         TM    OPFUN,OPYESC  POSSIBLE BTAM PREFIX ?              90140
         BZ    TESTCCW       NO                                  90140
         MVC   OUTPUT(2),INPUT  COPY A BIT MORE                  90140
         LA    ROD,2         PRESET FOR STX/ESC                  90140
         CLI   INPUT,STX     STX ?                               90140
         BE    MOVESCAP                                          90140
         BCTR  ROD,0         PRESET FOR ESCAPE ONLY              90140
         CLI   INPUT,ESC     IS IT ESCAPE ?                      90140
         BNE   COPYNCMP      NO; BYPASS - USER LIED              90140
MOVESCAP AR    RIN,ROD       INCREMENT                           90140
         AR    ROUT,ROD      IN AND OUT                          90140
TESTCCW  TM    OPFUN,OPYESC+OPYCCW  LEADING CCW CODE ?           90140
         BZ    TESTWCC       NO                                  90140
         CLI   INPUT,WSF     WRITE STRUCTURED FIELD ?            90140
         BE    COMPNCMP      YES; DON'T HANDLE YET               90140
         CLI   INPUT,EAU     ERASE ALL UNPROTECTED ?             90141
         BE    COMPNCMP      YES; JUST COPY (SHOULD BE IT, ANYWAY)
         CLI   INPUT,X'F7'   BSC COPY ?                          90141
         BE    COMPNCMP      YES; JUST COPY CCC AND ADDRESS      90141
         CLI   INPUT,EWA     ERASE/WRITE ALTERNATE ?             90154
         BE    COPYCCW       YES; PROCEED                        90154
         CLI   INPUT,EWR     ERASE/WRITE ?                       90154
         BE    COPYCCW       YES                                 90154
         CLI   INPUT,WRT     PLAIN WRITE ?                       90154
         BE    COPYCCW       YES; HONOR                          90154
COPYNCMP OI    SAVE15+L'SAVE15-1,4  SET WARNING - NO COMPRESS    90154
         B     COMPNCMP      SKIP COMPRESSION                    90154
         SPACE 1                                                 90154
COPYCCW  MVC   OUTPUT,INPUT  COPY CCW OP-CODE                    90140
         AR    ROUT,RON      BUMP OUTPUT                         90140
         AR    RIN,RON         AND INPUT                         90140
TESTWCC  TM    OPFUN,OPYESC+OPYCCW+OPYWCC  WCC/PCC PRESENT ?     90140
         BZ    TESTSBA       NO                                  90140
         CLI   INPUT,SBA     USER LYING AGAIN ?                  90140
         BE    TESTSBA       YES; NO WCC ?                       90140
         MVC   OUTPUT,INPUT  COPY PRESUMED WCC TO OUTPUT
         AR    RIN,RON       UP INPUT ADDRESS
         AR    ROUT,RON      UP OUTPUT ADDRESS
TESTSBA  CLI   INPUT,SBA     VALIDITY CHECK FOR ONLY REQUIRED START
         BE    COMPSBA       NEED INITIAL SBA FOR BUFFER LOGIC
         SPACE 1                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        PT, PC71 AND TRANSPARENT TEXT ALL ARE COPIED AS-IS.          *
*           NO OTHER PROCESSING IS DONE WHEN THESE ARE FOUND.         *
*                                                                     *
*---------------------------------------------------------------------*
COMPPT   DS    0H            PROGRAM TAB (NO POSITION AVAILABLE) 90140
COMPPC71 DS    0H            VARIABLE LENGTH ORDERS              90140
COMPASIS DS    0H            COPY BUFFER AS-IS                   90140
COMPNCMP LR    R8,RIN        COPY INPUT ADDRESS                  90140
         LR    R0,ROUT       COPY OUTPUT ADDRESS
         SR    RLEN,RIN      GET LENGTH TO MOVE
         LR    R9,RLEN
         LR    R1,RLEN
         AR    ROUT,RLEN     SET POSITION AFTER MOVE
         C     ROUT,MAXOUT   WILL IT FIT ?                       90155
         BH    BADEXIT       NO; NO COPY                         90155
         MVCL  R0,R8         COPY AS IS
         B     EXIT          AND RETURN
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*        DECODE SBA, SET BUFFER ADDRESS; COPY IF LAST OR ONLY SBA.    *
*                                                                     *
*---------------------------------------------------------------------*
COMPSBA  CKIN  6,ERR=COMPSBA2  LONG ENOUGH FOR TWO SBA SEQUENCES ?
         CLC   =X'115D7F1100',INPUT  IBM 7171 TRANSPARENT MODE ? 90140
         BE    COMPASIS      YES; COPY BUFFER AS-IS              90140
COMPSBA2 CKIN  3             ENOUGH FOR FULL SEQUENCE ?          90154
         BAL   RET,GETSBA    GET CURRENT BUFFER ADDRESS FROM SBA ORDER
         AR    RIN,RTHREE    POINT TO NEXT INPUT BYTE
         SPACE 2
LOOPSBA  CR    RIN,RLEN      END OF INPUT ?
         BNL   LEAVESBA      YES - MAKE TRAILER
         CLI   INPUT,SBA     IS IT SBA FOLLOWED BY ANOTHER SBA ?
         BE    COMPSBA       YES - CONSOLIDATE INTO SINGLE SBA
         SPACE 1
LEAVESBA CKOUT 3             ENOUGH ROOM IN OUTPUT ?             90154
         BAL   RET,SETSBA    PLACE NEW SBA ORDER INTO THE OUTPUT BUFFER
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        LOOP THROUGH INPUT BYTE BY BYTE; BRANCH AND PROCESS BY TYPE  *
*                                                                     *
*---------------------------------------------------------------------*
LOOPDATA CR    RIN,RLEN      END OF INPUT ?
         BNL   EXIT          YES - GET OUT
         CKOUT 1             ROOM FOR ONE MORE ?                 90154
         LR    RET,R2        SAVE OVER TRT
         SLR   R2,R2         CLEAR FOR TRT'S IC
         TRT   0(1,RIN),ORDERS  GET BRANCH OFFSET FOR THIS BYTE
         SWAPR R2,RET        RESTORE R2                          90140
OFFBASE  B     *(RET)        BRANCH BY TYPE
         GOTO  TBLK          CHECK FOR BLANK
         GOTO  DATA          UNPRINTABLE CHARACTER
         GOTO  BAD           UNPROCESSABLE CHARACTER
         GOTO  PT            PROGRAM TAB
         GOTO  SBA           SET BUFFER ADDRESS
         GOTO  IC            SET CURSOR
         GOTO  EUA           ERASE UNPROTECTED
         GOTO  SF            START FIELD
         GOTO  RTA           REPEAT TO ADDRESS
         GOTO  GE            GRAPHIC ESCAPE                      90140
         GOTO  SA            SET ATTRIBUTE                       90140
         GOTO  SFE           START FIELD EXTENDED                90140
         GOTO  MF            MODIFY FIELD                        90140
         GOTO  PC71          IBM 7171 SPECIAL ORDER              90140
         GOTO  TEXT          (TN) TEXT CHARACTERS                91100
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        INPUT IS BLANK. TREAT AS DATA, UNLESS FAKE SF - IF BY 3RD    *
*           LINE NO PROT. SF, MAKE ONE TO SHORTEN INPUT BUFFER        *
*                                                                     *
*---------------------------------------------------------------------*
COMPTBLK CLI   INPUT,BLANK   BLANK OR DATA ?
         BNE   COMPDATA      NOT BLANK; PROCESS DATA BYTE
         TM    OPFUN,OPFSF   FALSE SF TO BE INSERTED ?
         BZ    COMPDATA      NO; PROPAGATE BLANK
         CH    RBUF,FSFAD    REACHED THIRD LINE YET ?
         BL    COMPDATA      NO
         CKOUT 2,ERR=COMPDATA  SKIP IF NO ROOM FOR SF            90154
         MVI   OUTPUT,SF     YES - MAKE SF FIELD INSTEAD OF BLANK
         MVI   OUTPUT+1,X'60'  MAKE PLAIN OLD PROTECTED FIELD
         BCTR  RIN,0         FAKE FOR NEXT INCREMENT
         NI    OPFUN,255-OPFSF   TURN FAKE SF OFF
         B     COMPSFNT      TEST FOR SF COLOR CONVERSION
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        SF ORDER FOUND - COPY AS IS; IF COLOR SUBSTITUTION APPLIES,  *
*           CONVERT TO SFE ORDER AND MAKE COLOR ATTRIBUTE.            *
*                                                                     *
*---------------------------------------------------------------------*
COMPSF   CKOUT 2             NEED ROOM FOR TWO BYTES             90154
         TM    OPFUN,OPFSF   FAKE SF ACTIVATED ?
         BZ    COMPSFNS      NO
         CH    RBUF,FSFLO    ON SECOND LINE ?                    90140
         BL    COMPSFNS      NO
         CH    RBUF,FSFAD    OR PAST IT ?
         BH    COMPSFNS
         NI    OPFUN,255-OPFSF KLUDGE FOR FULL-SCREEN I/O
COMPSFNS MVC   OUTPUT(2),INPUT         COPY TO OUTPUT BUFFER
COMPSFNT MVC   SAVE0(1),OUTPUT+1  SET ATTRIBUTE BYTE             90140
         BAL   RET,SUBATTR   GET MATCHING COLOR/HIGHLIGHT        90140
         CLI   SAVE0+1,0     FORGET IT ?                         90140
         BE    COMPSFNX      YES; NO REPLACEMENT                 90140
         CKOUT 6             NEED ROOM FOR SIX BYTES             90154
         MVC   OUTPUT(3),=X'2902C0'  SFE/ATTR                    90140
         MVC   OUTPUT+3(3),SAVE0  COPY ATTRIBUTE/COL-HILITE/OPT  90140
         AR    ROUT,RFOUR    ADVANCE OUTPUT POINTER              87172
COMPSFNX LA    ROD,2         SKIP TWO INPUT AND OUTPUT BYTES     90140
         AR    RBUF,RON      BUT BUFFER ONLY INCREASES BY ONE BYTE
         B     COMROD        INCREMENT AND CONTINUE              90140
         SPACE 1                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        GRAPHIC ESCAPE - COPY NEXT BYTE AS IS. BUFFER INCREMENTS 1   *
*                                                                     *
*---------------------------------------------------------------------*
COMPGE   CKOUT 2             NEED TWO BYTES OUT                  90154
         CKIN  2             MAKE SURE WE REALLY HAVE TWO BYTES  90155
         MVC   OUTPUT(2),INPUT  COPY GRAPHIC ESCAPE AND SUBJECT  90140
         B     COMPSFNX      OTHERWISE LIKE SF                   90140
         SPACE 1                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        TEXT CHARACTER - CONVERT TO GRAPHIC ESCAPE SEQUENCE          *
*                                                                     *
*---------------------------------------------------------------------*
COMPTEXT TM    OPMISC,OPFGE  USE GRAPHICS ESCAPE ?               91100
         BZ    COMPDATA      NO; TREAT AS DATA                   91100
         CKOUT 2             NEED TWO BYTES OUT                  91100
         MVI   OUTPUT,GE     MAKE GRAPHIC ESCAPE                 91100
         TR    INPUT,TXTCHARS  MAKE TEXT KEYBOARD CODE           91100
         MVC   OUTPUT+1(1),INPUT  COPY ESCAPED EUQIVALENT        91100
         BCTR  RIN,0         FAKE FOR NEXT INCREMENT             91100
         B     COMPSFNX      OTHERWISE LIKE SF                   90140
         EJECT ,                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        MODIFY FIELD - COPY; REPLACE COLOR ORDERS IF SUBSTITUTING.   *
*                                                                     *
*---------------------------------------------------------------------*
COMPMF   DS    0H            TREAT AS SFE                        90140
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        SF EXTENDED - COPY; REPLACE COLOR ORDERS IF SUBSTITUTING.    *
*                                                                     *
*---------------------------------------------------------------------*
COMPSFE  CKIN  2             LONG ENOUGH FOR LENGTH BYTE ?       90155
         SLR   ROD,ROD
         IC    ROD,1+INPUT  GET LENGTH BYTE
         LR    REV,ROD       SAVE REPEAT COUNT                   87172
         LA    ROD,1(ROD,ROD)  EXECUTE LENGTH OF ORDER
         LA    RET,1(ROD,RIN)  GET END OF INPUT                  90155
         CR    RET,RLEN      REALLY ALL THERE ?                  90155
         BH    COMPBAD       NO                                  90155
         LA    RET,1(ROD,ROUT)  GET END OF SEQUENCE              90154
         C     RET,MAXOUT    WILL IT FIT INTO OUTPUT BUFFER ?    90154
         BH    BADEXIT       NO; FAIL                            90154
         EX    ROD,INMVCOUT   MOVE THE ORDER
         TM    OPFUN,OPNCOL  SKIP CONVERSION ?
         BNZ   COMPSFEX      YES                                 87172
         LTR   REV,REV       ANY AT ALL ?                        87172
         BNP   COMPSFEC      NO; TACK ON A COLOR ORDER           87172
         LR    ROD,ROUT      COPY STARTING ADDRESS               87172
COMPSFEL CLI   2(ROD),X'42'  COLOR ORDER ?                       87172
         BE    COMPSFET      YES; JUST TRANSLATE                 87172
         LA    ROD,2(,ROD)                                       87172
         BCT   REV,COMPSFEL  NO COLOR ORDER                      87172
         IC    REV,1+INPUT   GET COUNT BACK                      87172
         LR    ROD,ROUT      GET START AGAIN                     87172
COMPSFEN CLI   2(ROD),X'C0'  ATTRIBUTE ?                         87172
         BE    COMPSFEA      YES; USE IT FOR COLOR               87172
         LA    ROD,2(,ROD)                                       87172
         BCT   REV,COMPSFEN  TRY AGAIN                           87172
         MVI   SAVE0,X'20'   SET DEFAULT ATTRIBUTE               90140
         B     COMPSFEB      JOIN ADD-ON CODE                    90140
COMPSFEA MVC   SAVE0(1),3(ROD)  SET ATTRIBUTE TO BE DONE         90140
COMPSFEB BAL   RET,SUBATTR   GET COLOR REPLACEMENT FOR ATTRIBUTE 90140
         CLI   SAVE0+1,0     ANY ?                               90140
         BE    COMPSFEX      NO, TERMINATE SEQUENCE              90140
         IC    REV,1+INPUT   REGAIN INPUT COUNT                  87172
         LR    ROD,REV       COPY                                87172
         SLA   ROD,1         DOUBLE                              90140
         LA    ROD,2(ROD,ROUT) NEXT OUTPUT BUFFER POSITION       90140
         C     ROD,MAXOUT    WILL THIS SEQUENCE FIT ?            90154
         BH    BADEXIT       NO; FAIL                            90154
         MVC   0(2,ROD),SAVE0+1  COPY NEW FUNCTION               90140
         CLI   SAVE0+1,X'41'  HIGH-LIGHTING ?                    90140
         BNE   COMPSFED      NO; EXTEND SEQUENCE                 90140
         LR    RET,REV       COPY COUNT                          90140
         LR    ROD,ROUT      COPY OUTPUT START                   90140
COMPSFEC CLI   2(ROD),X'41'  USER SPECIFIED HIGH-LIGHTING ?      90140
         BE    COMPSFEX      YES; LEAVE AS-IS                    90140
         LA    ROD,2(,ROD)   BUMP                                90140
         BCT   RET,COMPSFEC                                      90140
COMPSFED AR    REV,RON       UP SEQUENCE COUNT                   90140
         STC   REV,1+OUTPUT  SET NEW SEQUENCE COUNT              87172
         B     COMPSFEX      COMMON                              87172
COMPSFET MVC   SAVE0(1),3(ROD)  COPY COLOR SELECTION             90140
         BAL   RET,SUBHUE    CHECK FOR REPLACEMENT               90140
         CLI   SAVE0+1,0     NONE ?                              90140
         BE    COMPSFEX      NONE. JUST INCREMENT BUFFERS        90140
         CLI   SAVE0+1,X'42'  COLOR REPLACEMENT ?                90140
         BNE   COMPSFEU      NO; USE UNLESS USER HIGH-LIGHTING   90140
         MVC   3(1,ROD),SAVE0+2  SET NEW COLOR                   90140
         B     COMPSFEX      GET OUT                             90140
COMPSFEU IC    REV,1+INPUT   GET COUNT BACK                      90140
         LA    RET,2+OUTPUT  GET TEXT                            90140
COMPSFEV CLI   0(RET),X'41'  HIGH-LIGHTING REQUEST ?             90140
         BE    COMPSFEX      YES; NO REPLACEMENT                 90140
         LA    RET,2(,RET)                                       90140
         BCT   REV,COMPSFEV  TRY AGAIN                           90140
         MVC   2(2,ROD),SAVE0+1  MAKE NEW SEQUENCE               90140
COMPSFEX SLR   ROD,ROD       CLEAR                               90140
         IC    ROD,1+INPUT   GET INPUT LENGTH                    90140
         SLA   ROD,1         DOUBLE                              90140
         LA    RIN,2(ROD,RIN)  ADJUST INPUT                      90140
         IC    ROD,1+OUTPUT  GET NEW OUTPUT LENGTH               90140
         SLA   ROD,1         DOUBLE                              90140
         LA    ROUT,2(ROD,ROUT)  FIX                             90140
         AR    RBUF,RON      INCREMENT BUFFER BY ATTRIBUTE BYTE
         B     LOOPDATA      PROCESS MORE INPUT
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        INSERT CURSOR - COPY AS IS (NO DUPLICATE CHECK DONE)         *
*                                                                     *
*---------------------------------------------------------------------*
COMPIC   MVC   OUTPUT,INPUT  COPY IC ORDER
         LR    ROD,RON       SET TO UP INPUT/OUTPUT BY ONE; BUFFER
         B     COMROD        ADDRESS IS UNCHANGED
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        SET ATTRIBUTE - COPY; SUBSTITUTE COLOR AS APPLICABLE         *
*                                                                     *
*---------------------------------------------------------------------*
COMPSA   CKOUT 3             ROOM FOR THREE BYTES ?              90154
         CKIN  3             ALL THERE ?                         90155
         MVC   OUTPUT(3),INPUT  MOVE SA ORDER
         LR    ROD,RTHREE    SET INCREMENT
         CLI   1+OUTPUT,X'42'  COLOR ORDER ?                     87326
         BNE   COMROD        NO; LEAVE AS IS                     87326
         MVC   SAVE0(1),OUTPUT+2  PASS COLOR ARGUMENT            90140
         BAL   RET,SUBHUE    CHECK AND SET COLOR REPLACEMENT     90140
         CLI   SAVE0+1,0     SKIP SUBSTITUTION ?                 90140
         BE    COMROD        YES; JUST BUMP                      90140
         MVC   OUTPUT+1(2),SAVE0+1  MOVE COLOR/HILITE AND ATTRIBUTE
         B     COMROD        SKIP INPUT AND OUTPUT
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        REPEAT TO ADDRESS - COPY AND SET BUFFER ADDRESS.             *
*                                                                     *
*---------------------------------------------------------------------*
COMPRTA  CKOUT 4             ROOM FOR FOUR BYTES ?               90154
         CKIN  4             ALL THERE ?                         90155
         MVC   OUTPUT(4),INPUT     COPY RA ORDER
         BAL   RET,GETSBA    SET NEW BUFFER ADDRESS INTO RBUF
         LR    ROD,RFOUR     UP IN/OUT BY FOUR BYTES
         CLI   OUTPUT+3,GE   GRAPHICS ESCAPE ?                   90154
         BNE   COMROD        NO; JUST BUMP                       90154
         BCTR  ROD,0         JUST COPY THREE                     90154
         BCTR  ROUT,0        BACK-UP OUTPUT BUFFER               90154
*                            CAUSE GE TO BE COPIED AS A 2-CHAR SEQUENCE
         B     COMROD        GO TO INCREASER
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        ERASE UNPROTECTED TO ADDRESS - COPY AND SET BUFFER ADDRESS   *
*                                                                     *
*---------------------------------------------------------------------*
COMPEUA  CKOUT 3             ROOM FOR THREE ?                    90154
         CKIN  3             ALL THERE ?                         90155
         MVC   OUTPUT(3),INPUT   COPY EUA ORDER
         BAL   RET,GETSBA    SET NEW BUFFER ADDRESS INTO RBUF
         LR    ROD,RTHREE    INCREASE BY 3
         B     COMROD        GO TO UP IN/OUT
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        UNRECOGNIZED CHARACTER - DO I HAVE AN OLD MANUAL OR DID      *
*           THE USER DO SOMETHING NASTY ?  SET WARNING, BUT COPY      *
*                                                                     *
*---------------------------------------------------------------------*
COMPBAD  OI    SAVE15+L'SAVE15-1,4  SET UNRECOGNIZED ORDER/CHARACTER
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        DATA - CHECK FOR 5 OR MORE CONSECUTIVE; IF SO, REPLACE BY    *
*           RTA ORDER, ELSE COPY AS-IS.                               *
*                                                                     *
*---------------------------------------------------------------------*
COMPDATA CKOUT 5,ERR=INMVCOUT  COPY SINGLE BYTE IF NOT ENOUGH ROOM
         CKIN  5,ERR=INMVCOUT  DITTO IF INPUT TOO SHORT          90154
         CLC   INPUT+1(4),INPUT  FIVE OR MORE REPETITIONS ?
         BE    MAKERTA       YES - CONVERT TO RTA ORDER
INMVCOUT MVC   OUTPUT,INPUT  ELSE COPY ONE BYTE
         AR    RBUF,RON      INCREASE BUFFER POSITION
         LR    ROD,RON       SET INCREMENT FOR IN/OUT
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*        COMMON TARGET - INCREASE INPUT AND OUTPUT POSITIONS BY       *
*           AMOUNT IN 'ROD', THEN SCAN NEXT CHARACTER.                *
*                                                                     *
*---------------------------------------------------------------------*
COMROD   AR    RIN,ROD       INCREASE INPUT ADDRESS
         AR    ROUT,ROD      AND OUTPUT ADDRESS
         B     LOOPDATA      GO TO LOOK FOR MORE INPUT
         SPACE 1
MAKERTA  LA    RET,5+INPUT   ENOUGH SPACE IN BUFFER FOR BUNCH ?  90147
         CR    RET,RLEN      CHECK AGAINST END                   90147
         BH    INMVCOUT      HIGH; JUST MOVE ONE                 90147
         MVC   OUTPUT+3(1),INPUT  SAVE THE DATA BYTE SOMEWHERE   90147
         IC    RET,INPUT     LOAD FOR FASTER COMPARES            90147
         SPACE 1
MAKERTAL AR    RIN,RON       GET NEXT INPUT BYTE
         AR    RBUF,RON      SET BUFFER ADDRESS UP TO PREVIOUS ONE
         CR    RIN,RLEN      END OF BUFFER ?
         BNL   MAKERTAX      YES - TERMINATE
         CLM   RET,1,INPUT   SAME CHARACTER AGAIN ?              90147
         BNE   MAKERTAX      NO; FORCE EXPANSION
         TM    OPFUN,OPFSF   FAKE SF TO BE DONE ?
         BZ    MAKERTAL      NO; LOOP SOME MORE
         CH    RBUF,FSFAD    REACHED THIRD LINE YET ?
         BL    MAKERTAL      NO
         CLI   INPUT,BLANK   DOING BLANKS ?
         BNE   MAKERTAL      NO, CONTINUE
         SPACE 1
MAKERTAX MVI   OUTPUT,RTA    PLACE THE RTA ORDER
         BAL   RET,SETBA     BUILD THE BUFFER ADDRESS
         AR    ROUT,RON      CORRECT THE OUTPUT ADDRESS
         B     LOOPDATA      PROCESS NEXT INPUT BYTE
         SPACE 1
***********************************************************************
*                                                                     *
*        EXITS - SET RETURN CODE, OUTPUT BUFFER LENGTH AND RETURN     *
*                                                                     *
***********************************************************************
BADEXIT  OI    SAVE15+L'SAVE15-1,8  SET ERROR RETURN             90140
EXIT     L     RIN,SAVE1     RESTORE CALLER'S PARM LIST ADDRESS  90140
         S     ROUT,0(,RIN)  GET CORRECT BUFFER LENGTH (OR 0)    90140
         BNM   *+6           OK ?                                90140
         SLR   ROUT,ROUT     NOT LESS THAN ZERO                  90140
         L     RIN,4(,RIN)   LOAD ADDRESS OF LENGTH WORD         90140
         ST    ROUT,0(,RIN)  RETURN TO USER                      90140
         LM    R14,R12,SAVE14  RELOAD ORIGINAL REGISTERS + CODE
         BR    R14           RETURN TO CALLER
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        SUBROUTINE TO GET BUFFER ADDRESS FROM INPUT SBA.             *
*                                                                     *
*---------------------------------------------------------------------*
GETSBA   SLR   RBUF,RBUF     CLEAR THE NEW BUFFER ADDRESS
         TM    OPADD,OPA16   16-BIT ADDRESSING MODE ?            90140
         BNZ   GETSBA16      YES; ZONES ARE DATA                 90140
         TM    INPUT+1,X'C0'  12 OR 14 BIT ADDRESS ?             87154
         BNZ   GETSBA12      12-BIT                              87154
GETSBA16 ICM   RBUF,3,INPUT+1  GET 14-BIT ADDRESS                87154
         BR    RET           RETURN                              87154
GETSBA12 LR    ROD,RBUF      CLEAR THE WORKING REGISTER
         IC    RBUF,INPUT+1  GET HIGH BYTE OF BUFFER ADDRESS
         IC    ROD,INPUT+2   AND LOW BYTE
         NR    RBUF,RMASK    STRIP HIGH BITS OFF
         NR    ROD,RMASK               BOTH BYTES
         SLL   RBUF,6        SHIFT HIGH BYTE *64
         AR    RBUF,ROD      SET NEW BUFFER ADDRESS
         BR    RET           RETURN TO CALLER
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        SUBROUTINE TO BUILD SBA SEQUENCE (SETSBA) OR BUILD ADDRESS   *
*           BYTES FROM BUFFER OFFSET (SETBA)                          *
*                                                                     *
*---------------------------------------------------------------------*
SETSBA   MVI   OUTPUT,SBA    PREPARE AN SBA ORDER
         SPACE 1
SETBA    LR    ROD,RBUF      BUILD A BUFFER ADDRESS SEQUENCE
         SLR   REV,REV       CLEAR EVEN REGISTER FOR DIVIDE
         DR    REV,RSIZE     ONLY REMAINDER IN REV COUNTS
         LR    RBUF,REV      UPDATE THE BUFFER ADDRESS           90147
         TM    OPADD,OPA16   16-BIT ADDRESSING MODE ?            90140
         BNZ   SETBA16       YES; ZONES ARE DATA                 90140
         CH    REV,=H'4096'  DOES 12-BIT ADDRESS SUFFICE ?       87154
         BL    SETBA12       YES                                 87154
SETBA16  STCM  REV,3,OUTPUT+1  NO; STASH AS IS                   87154
         B     SETBACOM                                          87154
SETBA12  SRDL  REV,6         PLACE HIGH BUFFER BYTE IN REV
         SRL   ROD,26                  AND LOW BYTE INTO ROD
         STC   REV,OUTPUT+1  PLACE INTO OUTPUT BUFFER
         STC   ROD,OUTPUT+2
         TR    OUTPUT+1(2),EBCDIC      CONVERT TO CORRECT EBCDIC
SETBACOM AR    ROUT,RTHREE   SET NEW OUTPUT LOCATION
         BR    RET           RETURN TO CALLER
         SPACE 2                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        SUBROUTINES TO PROVIDE COLOR SUBSTITUTION.                   *
*          COLOR IN SAVE0; RETURNED IN SAVE0+2, TYPE IN SAVE0+1       *
*                                                                     *
*---------------------------------------------------------------------*
SUBHUE   MVC   SAVE0+2(1),SAVE0  COPY FOR CONVERSION             90140
         MVI   SAVE0+1,0     PRESET FOR NO SUBSTITUTION          90140
         TM    OPFUN,OPNCOL  SUBSTITUTION REQUIRED ?             90140
         BNZR  RET           NO; RETURN WITH 0 FUNCTION          90140
         L     RWK,@COLTAB   GET CONVERSION TABLE                90140
         B     SUBHUECM      JOIN COMMON CODE                    90140
*---------------------------------------------------------------------*
*                                                                     *
*           ATTR IN SAVE0; RETURNED IN SAVE0+2, TYPE IN SAVE0+1       *
*                                                                     *
*---------------------------------------------------------------------*
SUBATTR  MVC   SAVE0+2(1),SAVE0  COPY FOR CONVERSION             90140
         MVI   SAVE0+1,0     PRESET FOR NO SUBSTITUTION          90140
         TM    OPFUN,OPNCOL  SUBSTITUTION REQUIRED ?             90140
         BNZR  RET           NO; RETURN WITH 0 FUNCTION          90140
         L     RWK,@COLTAB   GET CONVERSION TABLE                90140
         NI    SAVE0+2,X'3F'   STRIP ZONES                       90140
         TR    SAVE0+2(1),0(RWK)  GET FIRST LEVEL REPLACEMENT    90140
SUBHUECM TM    OPCOL,OPSEVEN   7-COLOR SUPPORT ?                 90140
         BO    SUBSTCOL      YES; DO NORMAL COLOR PROCESSING     90140
*        NOTE THAT HIGH-LIGHTING IS ON OR NCOL WOULD HAVE BEEN SET.
         TM    SAVE0+2,X'F0'  ANY HIGH-LIGHTING OPTION ?         90140
         BM    SUBSTHI       YES; HONOR IT                       90140
         NI    SAVE0+2,X'07'  GET REPLACEMENT COLOR              90140
         TR    SAVE0+2(1),64(RWK)  GET HARDWARE COLOR            90140
         TM    SAVE0+2,X'F0'  ANY HIGH-LIGHTING ?                90140
         BNMR  RET           NO; RETURN WITH FUNCTION 0          90140
SUBSTHI  MVI   SAVE0+1,X'41'  SET HIGH-LIGHTING                  90140
         PACK  SAVE0+2(1),SAVE0+2(1)  SWAP HIGH AND LOW NYBBLE   90148
         B     SUBSTCOM      GO TO COMMON                        90140
SUBSTCOL MVI   SAVE0+1,X'42'  SHOW COLOR FUNCTION                90140
         NI    SAVE0+2,X'07'  ISOLATE COLOR REQUEST              90140
         TR    SAVE0+2(1),64(RWK)  REPLACE BY HARDWARE COLOR CHOICE
SUBSTCOM NI    SAVE0+2,X'07'  ISOLATE HARD-WARE COLOR/HIGH-LIGHT 90140
         TR    SAVE0+2(1),EBCDIG  MAKE PROPER FUNCTION BYTE      90140
         CLI   SAVE0+2,X'F0' RESET REQUEST ?                     90140
         BNER  RET           NO                                  90140
         MVI   SAVE0+2,0     MAKE PROPER RESET CODE              90140
         BR    RET           RETURN TO CALLER                    90140
         SPACE 2
MOVER    MVC   OUTPUT+1(0),OUTPUT      SLIDING MOVE - SUBJECT OF EX
FSFLO    DC    H'79'         TRIGGER FOR FAKE SF SCAN            90140
FSFAD    DC    H'160'        POSITION FOR FAKE SF INSERT
         DROP  RBASE
         SPACE 1
         LTORG ,
         SPACE 2
*    CHARACTER SET DEPENDENT DATA
*        3270  ORDER CODES
         SPACE 1
SBA      EQU   X'11'         SET BUFFER ADDRESS ORDER
SF       EQU   X'1D'         START FIELD ORDER / ATTRIBUTE BYTE
IC       EQU   X'13'         INSERT CURSOR ORDER
RTA      EQU   X'3C'         REPEAT TO ADDRESS ORDER / ADDR / DATA
EUA      EQU   X'12'         ERASE UNPROTECTED TO ADDRESS / ADDR
GE       EQU   X'08'         GRAPHIC ESCAPE                      90140
SFE      EQU   X'29'         START FIELD EXTENDED/ N / (N)PAIRS
MF       EQU   X'2C'         MODIFY ATTRIBUTE      -"-
SA       EQU   X'28'         SET ATTRIBUTE / TYPE / VALUE
ETX      EQU   X'03'         BTAM/TCAM END OF TEXT SIGNAL
EOT      EQU   X'37'         BTAM/TCAM END OF TRANSMISSION CONTROL
BLANK    EQU   C' '          EBCDIC BLANK
PT       EQU   X'05'         PROGRAM TAB ***** NOT SUPPORTED *****
PC71     EQU   X'2B'         IBM 7171 SPECIAL ORDERS             90140
STX      EQU   X'02'         START TEXT
ESC      EQU   X'27'         ESCAPE (DEVICE CONTROL)
EWR      EQU   X'F5'         ERASE/WRITE CCW CODE
EWA      EQU   X'7E'         ERASE/WRITE ALTERNATE
WSF      EQU   X'F3'         WRITE STRUCTURED FIELD
WRT      EQU   X'F1'         WRITE
EAU      EQU   X'6F'         ERASE ALL UNPROTECTED (CCW)
         SPACE 1
ORDERS   DC    256AL1(OFFBAD)   DEFAULT TO UNPRINTABLE CHARACTER
         ORCH  SF,OFFSF      START FIELD
         ORCH  SBA,OFFSBA    SET BUFFER ADDRESS
         ORCH  IC,OFFIC      INSERT CURSOR
         ORCH  PT,OFFPT      PROGRAM TAB
         ORCH  RTA,OFFRTA    REPEAT TO ADDRESS
         ORCH  EUA,OFFEUA    ERASE UNPROTECTED TO ADDRESS
         ORCH  GE,OFFGE      GRAPHIC ESCAPE                      90140
         ORCH  SFE,OFFSFE    START FIELD EXTENDED
         ORCH  MF,OFFMF      MODIFY FIELD
         ORCH  SA,OFFSA      SET ATTRIBUTE
         ORCH  PC71,OFFPC71  IBM 7171 SPECIAL ORDERS
         ORCH  0,OFFDATA     HEX ZERO=>BLANK
         ORCH  C' ',OFFTBLK  BLANK
         ORCH  C'Ö',OFFDATA,7      CENT THROUGH AMPERSAND        90140
         ORCH  C'!',OFFDATA,8      EXCLAMATION POINT THROUGH SLASH
         ORCH  X'6A',OFFDATA,6     BROKEN STROKE THROUGH QUESTION MARK
         ORCH  X'79',OFFDATA,7     REVERSE QUOTE THROUGH QUOTE   90140
         ORCH  X'81',OFFDATA,9     LOWER CASE A THROUGH I        90140
         ORCH  X'91',OFFDATA,9     LOWER CASE J THROUGH R        90140
         ORCH  X'A1',OFFDATA,9     LOWER CASE S TO Z             90140
         ORCH  X'C0',OFFDATA,10    LEFT BRACE, A TO I            90140
         ORCH  X'D0',OFFDATA,10    RIGHT BRACE, J TO R           90140
         ORCH  X'E0',OFFDATA       REVERSE SLASH                 90140
         ORCH  C'S',OFFDATA,8      S TO Z                        90140
         ORCH  C'0',OFFDATA,10     DIGITS 0 TO 9                 90140
         ORCH  X'0C',OFFDATA       FORM FEED (FF)                90140
         ORCH  X'0D',OFFDATA       CAR. RET. (CR)                90140
         ORCH  X'15',OFFDATA       NEW LINE  (NL)                90140
         ORCH  X'19',OFFDATA       END MEDIUM (EM)               90140
         ORCH  X'1C',OFFDATA       DUP                           90140
         ORCH  X'1E',OFFDATA       FIELD MARK (FM)               90140
         ORCH  X'3F',OFFDATA       SUB                           90140
         SPACE 1                                                 91100
*    TEXT KEYBOARD - TN GRAPHICS - PROCESSED WITH ESCAPE+CHAR    91100
         ORCH  X'8C',OFFTEXT,4  -> LE, SUP LP, SUP +, INTERSECT  91100
         ORCH  X'9C',OFFTEXT,6  -> A1 LOZ, SUP RP, +-, BOX, SUP - 0
         ORCH  X'AB',OFFTEXT,5  -> LEFT CORNERS, BKT, GE, BULLET 91100
         ORCH  X'B0',OFFTEXT,10  -> SUPERSCRIPT DIGITS           91100
         ORCH  X'BB',OFFTEXT,5  -> RT CORNERS, BKT, NE, HOR.LINE 91100
         ORCH  X'FA',OFFTEXT       PLOTTING LINE                 91112
         ORCH  X'8B',OFFTEXT       LEFT BRACE, TN TRAIN          91112
         ORCH  X'9B',OFFTEXT       RIGHT BRACE, TN TRAIN         91112
         ORCH  X'46',OFFTEXT,2   LOCAL JUNCTION                  91112
         ORCH  X'56',OFFTEXT,2   LOCAL JUNCTION                  91112
         ORG   ,
         SPACE 2
*        CHARACTER SET DEPENDENT CONSTANTS
         SPACE 1
*ETXEOT  DC    0AL2(0),AL1(ETX,EOT)    END OF BUFFER SIGNAL
         SPACE 1
*        BUFFER ADDRESS TRANSLATION TABLE
EBCDIC   DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'   0 - 15
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'  16 - 31
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'  32 - 47
EBCDIG   DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'  48 - 63      90140
         SPACE 1                                                 91100
*    TEXT KEYBOARD - TN TRAIN - CRT VALUES                       91100
TXTCHARS DC    256AL1(*-TXTCHARS)  DEFAULT NO TRANSLATE          91100
         TRENT TXTCHARS,X'8C',X'8C'    LESS THAN OR EQUAL        91100
         TRENT ,X'C1',X'8D'            SUPERSCRIPT LEFT PARENTH. 91100
         TRENT ,X'C2',X'8E'            SUPERSCRIPT PLUS          91100
         TRENT ,X'D3',X'8F'            INTERSECTION              91100
         TRENT ,X'9C',X'9C'            LOZENGE                   91100
         TRENT ,X'D1',X'9D'            SUPERSCRIPT RIGHT PARENTH.
         TRENT ,X'9E',X'9E'            PLUS OR MINUS             91100
         TRENT ,X'C3',X'9F'            SOLID BOX                 91100
         TRENT ,X'D2',X'A0'            SUPERSCRIPT MINUS         91100
         TRENT ,X'A1',X'A1'            DEGREE                    91100
         TRENT ,X'C4',X'AB'            LOWER LEFT CORNER         91100
         TRENT ,X'C5',X'AC'            UPPER LEFT CORNER         91100
         TRENT ,X'AD',X'AD'            LEFT BRACKET              91100
         TRENT ,X'AE',X'AE'            GREATER THAN OR EQUAL     91100
         TRENT ,X'A3',X'AF'            BULLET (?) OR TRY FD      91100
         TRENT ,(*-TXTCHARS-X'B0'+X'F0'),(X'B0',10) SUPERSCRIPT 0-9
         TRENT ,X'D4',X'BB'            LOWER RIGHT CORNER        91100
         TRENT ,X'D5',X'BC'            UPPER RIGHT CORNER        91100
         TRENT ,X'BD',X'BD'            RIGHT BRACKET             91100
         TRENT ,X'BE',X'BE'            NOT EQUAL                 91100
         TRENT ,X'A2',X'BF'            PLOTTING LINE             91100
         TRENT ,X'85',X'FA'            PLOTTING LINE             91112
         TRENT ,X'C0',X'8B'            TN TRAIN LEFT BRACE       91111
         TRENT ,X'D0',X'9B'            TN TRAIN RIGHT BRACE      91111
         TRENT ,X'C6',X'46'      LOCAL LEFT JUNCTION             91111
         TRENT ,X'C7',X'47'      LOCAL RIGHT JUNCTION            91111
         TRENT ,X'D6',X'56'      LOCAL BOTTOM JUNCTION           91111
         TRENT ,X'D7',X'57'      LOCAL TOP JUNCTION              91111
         ORG   ,                                                 91100
         SPACE 2
INSECT   DSECT ,             INPUT BUFFER MAPPING
INPUT    DS    C             SINGLE INPUT CHARACTER AT A TIME
         SPACE 1
OUTSECT  DSECT ,             OUTPUT BUFFER MAPPING
OUTPUT   DS    C             SINGLE BYTE AT A TIME
         SPACE 1
SAVE     DSECT ,             SAVE AREA MAPPING                   90140
MAXOUT   DS    F             MAXIMUM OUTPUT AREA SIZE            90140
SAVE13   DS    A             HIGHER SAVE AREA                    90140
@COLTAB  DS    A             ZERO OR ADDRESS OF COLOR TRANSLATION
SAVE14   DS    A             RETURN ADDRESS                      90140
SAVE15   DS    A             BASE ADDRESS / WORK WORD            90140
SAVE0    DS    A                          / WORK WORD            90140
SAVE1    DS    12A           OTHER REGISTERS                     90140
         SPACE 1                                                 90140
OPTIONS  MAPCMPR ,           MAPPING OF OPTION BYTES             91100
         SPACE 1                                                 90140
         YREGS ,                                                GP03026
         SPACE 1
         END   ,
