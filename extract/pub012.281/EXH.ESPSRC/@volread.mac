@VOL     TITLE '@ V O L R E A D  ***  FAST VOLUME READ ROUTINE'
         PUNCH '   SETCODE AC(1) '
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
*                                                                     *
*        COPYRIGHT 1981  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         EJECT ,
@VOLREAD START 0                       PRELIMINARY VERSION ADDED 81235
         SPACE 1
NUMCCWS  EQU   150           MAXIMUM BLOCKS ON ONE TRACK        GP99026
         SPACE 1
*        CALLING SEQUENCE :
*
*        R0=0                          CLOSE/FREEMAIN
*        R0=1                          TCLOSE (CLOSE/NO FREE)
*        R0=2     R1=>VOLSER           OPEN/GETMAIN
*        R0=3                    DSCB  READ NEXT DSCB
*        R0=4                    DSC3  READ DSCB CHAINED FROM 1/5/6
*        R0=5     R1=>DSNAME           SEARCH BY NAME
*        R0=6     R1=>CCHHR            SEEK DSCB AT ADDRESS
*        R0=7     R1=>MEMBER NAME      POSITION TO MEMBER
*        R0=8                          GET NEXT SEQ. DIRECTORY ENTRY
*        R0=9                          READ NEXT DATA BLOCK
*        R0=10                         NOTE POSITION OF LAST READ
*        R0=11    R1=TTRZ              POINT/READ SPECIFIED BLOCK
*        R0=12                 *DEFER* GET (UNBLOCK) A RECORD
*        R0=13    R1=>COUNT/KEY/DATA   UPDATE (REWRITE) BLOCK    85350
*        R0=14                         TERMINATE CURRENT MEMBER GP02247
*        R0=15    R1=>CCHH             RETURN ENTIRE TRACK      GP09158
*
*        RETURN CODE 0 - REQUEST COMPLETED
*                    4 - END OF CHAIN; END-FILE; ETC.
*                    8 - I/O ERROR
*                   12 - PROCESSING ERROR
*                   16 - OPEN ERROR, ETC.
*
         SPACE 1
         PRINT &PRTSOR
         SPACE 2
         USING *,R15
         B     VOLREAD       SKIP ID
         DC    AL1(L'VOLRID)   LENGTH FOR SNAP
VOLRID   DC    C'@VOLREAD - &SYSDATE'
VOLREAD  BSM   R14,0         PRESERVE CALLER'S AMODE            GP99026
         STM   R14,R12,12(R13)                                  GP99026
         LR    R12,R15
         DROP  R15
         LA    R11,2048(,R12)
         LA    R11,2048(,R11)          MAKE SECOND BASE
         USING @VOLREAD,R12,R11
         AM24  WORK=R15      OLD, OLD CODE                      GP99026
         SPACE 1
*        LOCATE OR ESTABLISH WORK AREA
*
         L     R8,CVTPTR     GET CVT
         L     R8,CVTTCBP-CVTMAP(,R8)  TCB POINTER
         L     R8,4(,R8)     CURRENT TCB
         ICM   R4,15,VOLRID+1  ID FIELD
         L     R7,TCBFSA-TCB(,R8)  POINT TO CHAIN HEAD
SVCINITL ICM   R6,15,0(R7)   LAST ENTRY ON CHAIN ?              GP99026
         BZ    SVCINGET      YES; GET A WORK AREA
         USING FSAWORK,R6    DECLARE IT
         CL    R4,FSAID      SAME ID ?
         BE    SVCHAVE       YES; USE IT
         LR    R7,R6         SWAP
         B     SVCINITL      TRY AGAIN
SVCINGET LA    R2,FSALEN     GET LENGTH
         CLM   R0,1,=X'02'   OPEN REQUEST ?
         BNE   SVCFAIL       NO; JUST RETURN
         GETMAIN R,LV=(R2)   GET SPACE FOR PERMANENT WORK AREA
         BXLE  R15,R15,SVCINITW  CLEAR IT
SVCFAIL  LM    R14,R12,12(R13)  ERROR IN PROCESSING OR ENVIRONMENT
         LA    R15,16        SET MAJOR ERROR
         SLR   R0,R0         INDICATE ENVIRONMENT (PGM ERROR)
         BSM   0,R14         RETURN IN CALLER'S AMODE           GP99026
         DROP  R6
         USING FSAWORK,R7
SVCINITW MVC   FSALINK-FSAWORK(4,R1),FSALINK  CHAIN OLD AREA
         ST    R1,FSALINK    CHAIN THIS AHEAD OF OLD ONE
         DROP  R7
         USING FSAWORK,R6
         LR    R6,R1         COPY THIS ONE TO PERMANENT REGISTER
         LA    R14,4(,R1)    START TO CLEAR AFTER LINK FIELD
         LR    R15,R2        GET LENGTH
         SH    R15,=Y(4)     ADJUST LENGTH
         SLR   R0,R0
         SLR   R1,R1
         MVCL  R14,R0        CLEAR IT
         ST    R4,FSAID      SET ID OF THIS AREA (@SVC)
         ST    R2,FSASPLEN   SAVE GETMAIN LENGTH
         ST    R8,FSATCB     AND TCB
         LM    R0,R1,20(R13)   RELOAD ENTRY PARAMETERS
SVCHAVE  LR    R9,R13        COPY USER'S SAVE AREA ADDRESS
         LA    R13,SAVEAREA   AND ESTABLISH OURS
         DROP  R6            FSA HEADER NO LONGER ACCESSIBLE    GP97231
         USING SAVEAREA,R13                                     GP97231
         ST    R9,4(,R13)    MAKE BACK CHAIN
         ST    R13,8(,R9)      AND FORWARD CHAIN
         XC    RETCODE(12),RETCODE  CLEAR RETURN CODES          GP05279
         STM   R0,R1,CALLR0  SAVE PARMS FOR QUICK ACCESS
         ST    R1,RETR1      ALSO SAVE FOR R1 RETURN VALUE
         LA    R7,0(,R1)     SAVE ENTRY PARM
         BIX   ERR=EXIT16,PFX=ENT,LOC=(CLOSE,CLOSE,OPEN,DSCB,DSC3,SERCH*
               ,SEEK,FIND,GETDE,READ,NOTE,POINT,GET,UPDAT,FEOM,TRACK)
ENTGET   DS    0H            *****TEMPORARY BOMB*****
         EX    0,*           SOCK 3
         SPACE 1
EXIT16   MVICC 16,RESULT=RETCODE RETURN CODE 16                 GP05279
         B     EXIT          AND EXIT WITH ERROR
         SPACE 1
CLOSE12  CLOSE MF=(E,OPLST)  CLOSE (PARTIALLY?) OPEN DCB        GP05120
EXIT12   MVICC 12                                               GP05279
         B     EXIT
         SPACE 1
EXIT8    MVICC 8             SET RETURN CODE 8                  GP05279
         SPACE 1
EXIT     LM    R15,R1,RETCODE  GET RETURN CODES
         L     R13,4(,R13)
         L     R14,12(,R13)  GET RETURN ADDRESS
         LM    R2,R12,28(R13)  RESTORE OTHERS
         BSM   0,R14         RETURN TO CALLER                   GP99026
         SPACE 1
EXIT4    MVICC 4             SET END OF CHAIN/REQUEST           GP05279
         B     EXIT          AND RETURN
         SPACE 2
*---------------------------------------------------------------------*
*        ENTRY CODE 0 - CLOSE AND FREE EVERYTHING                     *
*        MODE=0   FULL CLOSE AND FREEMAIN                             *
*        MODE=1   CLOSE, BUT DO NOT FREEMAIN                          *
*---------------------------------------------------------------------*
         SPACE 1
ENTCLOSE BAL   R10,CLOSER    CLOSE DCB                          GP99026
         MVI   FLAGS,0       RESET PROCESSING FLAG
         CLI   CALLMODE,0    FULL CLOSE ?
         BNE   EXIT          NO; RETAIN WORK AREA
         LM    R3,R4,GETMBUFA     SEE IF GETMAIN DONE
         LTR   R3,R3
         BZ    CLOSENF       NO
         LTR   R4,R4
         BZ    CLOSENF
         FREEMAIN R,A=(R3),LV=(R4)
CLOSENF  XC    GETMBUFA(8),GETMBUFA  CLEAR IT
         DELETEST EP=@SERVICE   DELETE SERVICE MODULE           GP02243
         LR    R6,R13        GET SAVE AREA
         LA    R15,SAVEAREA-FSAWORK  GET HEADER LENGTH
         SR    R6,R15
         DROP  R13
         USING FSAWORK,R6    DECLARE FULL AREA
         LM    R2,R3,FSASPLEN  GET LENGTH AND TCB BACK
         L     R3,TCBFSA-TCB(,R3)  POINT TO CHAIN HEAD
CLOSFLP  CLM   R6,15,0(R3)   POINTER TO OUR AREA ?              GP99026
         BE    CLOSEFNC      YES; UNCHAIN
         L     R3,0(,R3)     TRY NEXT ONE
         B     CLOSFLP
CLOSEFNC MVC   0(4,R3),FSALINK  UNCHAIN OURS
         L     R13,SAVEAREA+4  GET USER'S SAVE AREA ADDRESS
         FREEMAIN R,LV=(R2),A=(R6)  FREE OUR WORK SPACE
         LM    R14,R12,12(R13)  RELOAD USER'S REGISTERS
         SLR   R15,R15
         SLR   R0,R0         SET RETURN CODES
         BSM   0,R14         RETURN                             GP99026
         DROP  R6
         USING SAVEAREA,R13  RE-ESTABLISH WORK AREA
         SPACE 1                                                GP02247
*---------------------------------------------------------------------*
*   ENTRY CODE 14 - FORCE END OF MEMBER (IN PDS READ)                 *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTFEOM  TM    FLAGS,FGOPEN+FGVOLUME  VOLUME ACCESS PERMITTED ? GP02247
         BNO   EXIT12        NO; SET ERROR                      GP02247
         TM    DSNFG,DFDSCB  FORMAT 1 IN BUFFER ?               GP02247
         BZ    EXIT12        NO; ERROR                          GP02247
         TM    DSNFG,DFEOF   PRIOR END-FILE SIGNALLED ?         GP02247
         BNZ   EXIT12        YES; ERROR                         GP02247
         OI    DSNFG,DFEOF   SET LOGICAL END FILE               GP02247
         B     EXIT          BUT RETAIN WORK AREA               GP02247
         EJECT ,
*---------------------------------------------------------------------*
*   ENTRY CODE 2 - OPEN VOLUME FOR PROCESSING                         *
*     R1 -> VOLSER    R0 = 0, OR STORAGE RESERVE SIZE, OR X'80'+SIZE  *
*        VOLUME ACCESS REQUIRES A //VOLMOUNT DD DUMMY                 *
*          OR A DD CARD FOR THE VOLUME                                *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
         PUSH  USING                                            GP99027
ENTOPEN  LTR   R7,R7         VOLSER ADDRESS SUPPLIED ?
         BZ    EXIT16        NO; PARM ERROR
         MVC   MODEFG,CALLR1  COPY AND SET MODE FLAGS
         MVI   DSNFG,0       RESET DATASET PROCESSING FLAG
         ICM   R14,14,CALLR0  GET SIZE PARAMETER
         BZ    ENTOPNSZ      NONE
         BP    ENTOPNSP      PLUS - RESERVE SIZE                 82053
         N     R14,=X'00FFF000'  MAXIMUM GETMAIN VALUE           82053
         ST    R14,GETMKEEP  SAVE IT                             82053
         B     ENTOPNSZ      SKIP RESERVE CODE                   82053
ENTOPNSP N     R14,=X'00FFF000'  TRUNCATE TO 4K BOUNDARY         82053
         C     R14,=A(12*1024)   AT LEAST 12K SPECIFIED ?
         BL    ENTOPNSZ      NO; IGNORE
         ST    R14,GETMFREE  SAVE USER'S REQUEST
ENTOPNSZ TM    FLAGS,FGOPEN   ALREADY OPEN ?
         BZ    ENTOPENB      NO
         NI    FLAGS,FGOPEN+FGVOLUME   RESET FLAGS
         MVC   CURVTOC,VTOCSTRT   SET FOR NEXT ADDRESS TO BE READ
         IC    R0,CURVTOC+4  GET RECORD NUMBER
         BCTR  R0,0
         STC   R0,CURVTOC+4
         CLC   VOLSER,0(R7)  SAME VOLUME ?
         BE    EXIT          YES; JUST RETURN
         BAL   R10,CLOSER    CLOSE DCB                          GP99026
         MVI   FLAGS,0       RESET FLAG COMPLETELY
         SPACE 1
ENTOPENB MVC   @VOLDCB(PATDCBL),PATDCB  MOVE PATTERN DCB
         LA    R1,EXLST      GET EXIT LIST
         STCM  R1,7,@VOLDCB+DCBEXLSA-IHADCB
         LA    R1,INFMJFCB
         ST    R1,EXLST
         MVI   EXLST,X'07'   JFCB ADDRESS                       GP05120
         LA    R0,ABNDEXIT   GET DCB ABEND EXIT                 GP05120
         ST    R0,EXLST2     AVOID ABEND ?                      GP05120
         MVI   EXLST2,X'91'  80+11 = DCB ABEND                  GP05120
         LA    R1,@VOLDCB
         ST    R1,OPLST
         MVI   OPLST,X'80'   MAKE OPEN LIST
         SERVINIT ,          LOAD THE SERVICE ROUTINE
         MVC   VOLSER,0(R7)  SAVE THE USER'S VOLUME SERIAL      GP02243
         MVI   RETR0,213     DS NOT FOUND                       GP12060
         SERVCALL UCBDK,VOLSER  LOOK FOR DISK VOLSER
         BXH   R15,R15,EXIT12    NOT FOUND
         LR    R3,R0         SAVE
         USING UCBOB,R3
* CREATE JFCB...DON'T NEED ONE FROM THE JOB QUEUE
         XC    INFMJFCB(JFCBLGTH),INFMJFCB  CLEAR JFCB PATTERN
         MVI   JFCBDSNM,X'4'     MAKE FORMAT 4 DSCB NAME
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         MVC   JFCBVOLS(6),VOLSER
         OI    JFCBTSDM,JFCNWRIT+JFCNDSCB+JFCNDCB  KEEP IT CLEAN
         ICM   R4,15,DYNTIOT ALREADY USED VOLMOUNT DD ?         GP09178
         BNZ   REUSETIO      YES; USE FASTER PATH               GP09178
         SERVCALL TIOUA,(R3)   LOCATE A TIOT ENTRY FOR THIS UCB
         LTR   R4,R0         ANY FOUND ?
         BNZ   ENTOPENT      YES
         MVI   RETR0,47      NOT AUTHORIZED/NO VOLMOUNT         GP12060
         TESTAUTH FCTN=1     AUTHORIZED CALLER ?
         BXH   R15,R15,EXIT12   NO; TOO BAD
         SERVCALL TIODD,=CL8'VOLMOUNT'  SPECIAL DD PRESENT ?
         LTR   R4,R0
         BZ    EXIT12        NO; TOO BAD
         USING TIOELNGH,R4   DECLARE TIOT
REUSETIO MODESET KEY=ZERO
         L     R5,TIOEFSRT-1   SAVE OLD UCB ADDRESS
         STCM  R3,7,TIOEFSRT   SET NEW ADDRESS
         STM   R4,R5,DYNTIOT   SAVE FOR CLOSE
         MVI   DYNTIOT,X'80'   SET TIOT MODIFIED
         MODESET KEY=NZERO
ENTOPENT MVC   DCBDDNAM-IHADCB+@VOLDCB(8),TIOEDDNM  SAVE DDNAME
         DROP  R4
         MVI   RETR0,13      DS OPEN ERROR                      GP12060
         OPEN  MF=(E,OPLST),TYPE=J     OPEN THE VTOC
         TM    EXLST2,X'11'  ABEND ENTERED ?                    GP05120
         BNO   CLOSE12       YES; IGNORE VOLUME                 GP05120
         TM    @VOLDCB+DCBOFLGS-IHADCB,DCBOFOPN   GOOD OPEN ?
         BZ    CLOSE12       NO; TOO BAD
         SERVCALL DSDJ1,INFMJFCB  GET THE FORMAT 4 THE HARD WAY
         ST    R1,RETR0      RETURN FORMAT4 ADDRESS TO USER     GP99035
         MVI   RETR0,27      FORMAT 4 ERROR                     GP12060
         LTR   R1,R1         TEST ADDRESS
         BZ    CLOSE12       TOO BAD
         MVI   RETR0,0       RESET REASON CODE                  GP12060
         USING DS4IDFMT,R1   DECLARE IT
         MVC   VTOCSTRT(4),DS4VTOCE+2  SAVE VTOC START ADDRESS
         MVC   VTOCSTRT+4(1),UCBVTOC+2   SAVE FORMAT 4 RECORD ADDRESS
         MVC   VTOCEND(4),DS4VTOCE+6   AND END ADDRESS
         MVC   VTOCEND+4(1),DS4DEVDT   SET LAST DSCB/TRACK
         MVC   NUMPDE+1(1),DS4DEVDB    SAVE DIRECTORY BLOCKS
         MVC   NUMCYL(4),DS4DEVSZ    SAVE MAX CYLINDER/TRACKS
         MVC   NUMDATA,DS4DEVTK        GET BYTES/TRACK
         DROP  R3,R1         DONE WITH UCB AND FORMAT 4
         XC    DB(16),DB     CLEAR DB AND DB2
         LH    R14,NUMCYL    GET CYLINDERS ON THE PACK
         N     R14,=X'0000FFFF'   IF NEEDED, WILL FAIL ?        GP09160
         MH    R14,NUMTRK    GET TRACK/CYLINDER => TRACKS/PACK
         MIN   R14,=X'0000FFFF'                                 GP09160
         STH   R14,NUMTRKS   SAVE
         STH   R14,DB+DEBNMTRK-DEBDASD  POSITION FOR MOVE
         ICM   R14,15,NUMCYL  GET BOTH CYLINDERS AND TRACKS PER
         SL    R14,=X'00010001'  MAKE RELATIVE
         STCM  R14,15,DB+DEBENDCC-DEBDASD  MAKE NEW END EXTENT
         TESTAUTH FCTN=1     AUTHORIZED ?
         BXH   R15,R15,ENTOPEN4  NO; OPEN VTOC ONLY
         MODESET KEY=ZERO    ELSE GET PRIVILEGED
         SR    R1,R1                                            GP99027
         ICM   R1,7,@VOLDCB+DCBDEBAD+1-IHADCB  GET DEB          GP99027
         USING DEBBASIC,R1   DECLARE IT
         MVC   DEBBINUM-DEBDASD+DEBBASND(12),DB+DEBBINUM-DEBDASD
         TM    MODEFG,MFOUT  USER REQUESTED UPDATE CAPABILITY ?  85350
         BZ    ENTOPENI      NO                                  85350
         OI    DEBOPATB,X'04'  SET DEB OPEN FLAGS TO UPDAT       85350
         XI    DEBDVMOD-DEBDASD+DEBBASND,X'C0'  CHANGE 50=>90    86176
         OI    FLAGS,FGOUT   SHOW DEB OPEN FOR UPDATE            85350
ENTOPENI DS    0H                                               GP99027
         AIF   (NOT &MVSESA).NODEBFX                            GP99027
*DEFER*  SR    R14,R14                                          GP99144
*DEFER*  ICM   R14,7,DEBAPPAD+1                                 GP99144
*DEFER*  USING DEBAVT,R14                                       GP99144
*DEFER*  SH    R1,=AL2(DEBBASIC-DEBPREFX)  POINT TO PREFIX      GP99027
*DEFER*  USING DEBPREFX,R1   DECLARE IT                         GP99027
*DEFER*  SR    R14,R14                                          GP99027
*DEFER*  ICM   R14,15,DEBXTNP  EXTENSION?                       GP99027
*DEFER*  BZ    ENTOPENX      NO                                 GP99027
*DEFER*  USING DEBXTN,R14    DECLARE IT                         GP99027
.NODEBFX POP   USING                                            GP99027
ENTOPENX MODESET KEY=NZERO                                       85350
         OI    FLAGS,FGVOLUME   SHOW DEB OPEN FOR VOLUME
ENTOPEN4 MVC   GETMLIMT(8),PATMLIMT  INITIALIZE GETMAIN LIMITS
         MVC   GETMLIST(PATMLSTL),PATMLIST  INITIALIZE GETMAIN
         ICM   R4,15,GETMFREE  ANY RESERVE SPECIFIED ?
         BNZ   *+8           YES
         L     R4,GETMLIMT   USE LOWER LIMIT OF GETMAIN
         SLR   R8,R8         CLEAR FOR ICM
         ICM   R8,3,NUMDATA  GET TRACK CAPACITY
         A     R8,=A(DWCDATA-BUFFMAP+15)  ADD FIXED BUFFER SIZE+
         N     R8,=X'00FFFFF8'  TRUNCATE TO DOUBLE-WORD
         LA    R5,0(R4,R8)   GET MINIMUM FOR ONE BUFFER
         ST    R5,GETMLIMT   STASH IT
         ICM   R6,15,GETMKEEP  USER SPECIFIED MAXIMUM ?          82053
         BZ    ENTOPEN6      NO; LEAVE IT ALONE                  82053
         AR    R6,R4         ADD AMOUNT TO BE RETURNED           82053
         CR    R5,R6         BUFFER LARGER THAN USER'S MAX ?     82053
         BH    ENTOPEN5      YES; FORCE ONE BUFFER               82053
         LR    R5,R6         ELSE HONOR USER'S REQUEST           82053
ENTOPEN5 ST    R5,GETMLIMT+4   SET NEW UPPER LIMIT               82053
ENTOPEN6 LM    R6,R7,GETMBUFA  GET OLD CONTENTS                  82053
         LTR   R6,R6         PREVIOUSLY GOTTEN ?
         BNZ   ENTOPENG      YES; USE IT
         GETMAIN VC,LA=GETMLIMT,A=GETMBUFA,MF=(E,GETMLIST)
         BXH   R15,R15,EXIT16   NO CAN DO
         LM    R6,R7,GETMBUFA  GET RESULTS
         LR    R1,R6         COPY START ADDRESS
         AR    R6,R4         UP BY RESERVE
         SR    R7,R4         DECREASE LENGTH
         STM   R6,R7,GETMBUFA   STASH BACK
         FREEMAIN R,LV=(R4),A=(R1)  FREE RESERVE
ENTOPENG LR    R9,R6         SAVE START ADDRESS
         LR    R14,R6        COPY
         LR    R15,R7        SET SIZE
         SLR   R0,R0
         SLR   R1,R1
         MVCL  R14,R0        CLEAR ALL OF IT
         SLR   R6,R6
         DR    R6,R8         GET NUMBER OF BUFFERS
         LTR   R7,R7         ANY BUFFERS ?
         BZ    EXIT16        NO; TOO BAD
         STH   R7,NUMBUFFS
         ST    R9,BUFFFREE   SET FIRST BUFFER ON FREE QUEUE
         USING BUFFMAP,R9    DECLARE IT
BUFFINIT ST    R9,DWIECBP    SET ECB POINTER
         LA    R1,@VOLDCB    GET COMMON EXCP DCB
         ST    R1,DWIDCB
         MVI   DWECB,X'7F'   READY FOR ACTION
         MVI   DWTOGO,BFAVAIL   SET AVAILABLE FOR I/O
         LA    R14,DWCRDCNT  POINT TO READ COUNT CHAIN PREFIX
         LA    R15,DWCRDATA-DWCRDCNT(,R14)  READ DATA PREFIX
         LA    R0,DWCCOUNT-DWCRDATA(,R15)  COUNT AREA
         LA    R1,DWCDATA-DWCRDATA(,R15)   TRACK DATA AREA
         STM   R14,R1,DWARDCNT  INITIALIZE ADDRESSES
         LM    R2,R4,=X'310000004000000508000000'  SEEK PATTERN
         LA    R1,DWICCHH    IOB SEEK CCHH PORTION
         OR    R2,R1         BUILD SEEK CCW
         OR    R4,R14        SET TIC ADDRESS
         STM   R2,R4,0(R14)  BUILD DWCRDCNT PREFIX
         ICM   R4,7,DWARDATA+1  SET TIC FOR SECOND CHAIN
         STM   R2,R4,0(R15)  BUILD DWCRDATA PREFIX
         LA    R1,DWR0DATA   RECORD 0 DATA AREA
         LM    R2,R3,=X'0600000040000008'  READ/WRITE R0 DATA CCW
         OR    R2,R1         ADD ADDRESS
         STM   R2,R3,DWCRDAT0-DWCRDATA(R15)  COMPLETE CHAIN
         STM   R2,R3,DWCRDAT0-DWCRDATA(R14)  SET READ R0
         LA    R4,NUMCCWS    SET NUMBER OF READ COUNTS TO BUILD
         LA    R0,8          QUICK ADD CONSTANT
         LA    R2,DWCCOUNT-DWCRDATA(,R15)  POINT TO COUNT AREA
         ICM   R2,8,=X'12'   SET READ COUNT OPCODE
BUFFRCNT STM   R2,R3,DWCRDCCW-DWCRDCNT(R14)  MAKE ONE CCW
         AR    R14,R0        NEXT BUILD ADDRESS
         ALR   R2,R0         NEXT COUNT ADDRESS
         BCT   R4,BUFFRCNT   BUILD ALL
         SLR   R14,R0        BACKSPACE
         MVI   DWCRDCCW-DWCRDCNT+4(R14),0  KILL CHAINING IN LAST
         LR    R14,R9        SAVE CURRENT BUFFER
         AR    R9,R8         NEXT BUFFER ADDRESS
         ST    R9,DWCHAIN-BUFFMAP(,R14)  LINK TO NEXT BUFFER
         BCT   R7,BUFFINIT   SET IT
         ST    R7,DWCHAIN-BUFFMAP(,R14)  NO NEXT BUFFER LINK
         DROP  R9
         MVC   CURVTOC,VTOCSTRT   SET FOR NEXT ADDRESS TO BE READ
         IC    R0,CURVTOC+4  GET RECORD NUMBER
         BCTR  R0,0
         STC   R0,CURVTOC+4
         OI    FLAGS,FGOPEN  SET FULLY OPEN
         ICM   R0,15,VTOCSTRT   POINT TO FIRST VTOC TRACK
         BAL   R10,GETTRACK  READ FIRST TRACK (NO WAIT)         GP99026
BUFAHEAD TM    MODEFG,MFVTOC   VTOC-ONLY MODE ?
         BZ    EXIT          NO; RETURN
BUFPRIME AH    R0,=H'1'      SET TO NEXT TRACK
         CLM   R0,3,NUMTRK   VALID TRACK NUMBER ?                86250
         BL    BUFPRIMV      YES                                 86250
         ICM   R0,3,ZEROES   RESET THE TRACK NUMBER              86250
         AL    R0,=X'00010000'  AND INCREMENT THE CYLINDER       86250
BUFPRIMV CLM   R0,15,VTOCEND  STILL IN VTOC ?
         BH    EXIT          NO; RETURN
         ICM   R4,15,BUFFFREE  IS THERE A FREE BUFFER LEFT ?
         BZ    EXIT          NO; RETURN
         BAL   R10,GETTRACK  PRIME IT                           GP99026
         B     BUFPRIME      REPEAT
         SPACE 2
*---------------------------------------------------------------------*
*   ENTRY CODE 3 - READ NEXT DSCB (AFTER OPEN); FIRST RETURN IS FMT4  *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTDSCB  TM    FLAGS,FGOPEN  OPEN ?
         BZ    EXIT16        NO; MAJOR ERROR
         CLC   CURVTOC,VTOCEND   PRIOR END-FILE RETURN ?
         BH    EXIT12        YES; ERROR
         MVI   DSNFG,0       RESET DATASET PROCESSING FLAG
         BAL   R10,PURGEDS   PURGE ALL NON-VTOC BUFFERS         GP99026
G1NEXT   SLR   R1,R1
         IC    R1,CURVTOC+4  GET LAST RECORD NUMBER
         LA    R1,1(,R1)     UP BY 1
         CLM   R1,1,NUMDSCB  VALID ?
         STC   R1,CURVTOC+4
         BNH   G1READ        YES
         MVI   CURVTOC+4,1   RESET
         ICM   R1,3,CURVTOC+2  GET TRACK
         LA    R1,1(,R1)     UP IT
         STCM  R1,3,CURVTOC+2
         CLM   R1,3,NUMTRK   VALID TRACK NUMBER ?
         BL    G1READ        YES
         STCM  R1,12,CURVTOC+2  ELSE ZERO IT
         ICM   R1,3,CURVTOC  GET CYLINDER NUMBER
         LA    R1,1(,R1)     UP IT
         STCM  R1,3,CURVTOC  STASH IT BACK
G1READ   ICM   R0,15,CURVTOC GET TRACK
         CLM   R0,15,VTOCEND  END OF VTOC HIT ?
         BH    EXIT4         YES; RETURN END-FILE
         BAL   R10,GETTRACK  LOCATE IT                          GP99026
         SLR   R0,R0
         IC    R0,CURVTOC+4  GET RECORD NUMBER
         BAL   R10,GETBLOCK  GET ADDRESS                        GP99026
           B   G1NEXT        ERROR ?
         CLC   =X'2C0060',5(R1)  REALLY DSCB ?
         BNE   EXIT8         NO; RETURN I/O ERROR
         MVC   DS1DSNAM(LOCDS1-DS1DSNAM),8(R1)  MOVE TEXT
         MVC   LOCDS1,0(R1)  COPY ADDRESS
         BAL   R9,PURGEREC   SHOW RECORD USED (FREE BUFFER IF 0 LEFT)
         LA    R1,DS1DSNAM
         ST    R1,RETR0      RETURN ADDRESS TO USER
         CLI   DS1FMTID-DS1DSNAM(R1),C'1'   FORMAT 1 DSCB ?
         BE    G1RET         YES; SET TO RETURN IT
         CLI   DS1FMTID-DS1DSNAM(R1),C'4'   FORMAT 4 DSCB ?
         BNE   G1NEXT        NO; GET ANOTHER
G1RET    OI    DSNFG,DFDSCB  SHOW DSCB IN BUFFER FOR DSC3 FUNCTION
         XC    CHAINFMT,CHAINFMT  CLEAR CHAIN
         ICM   R0,15,CURVTOC  GET CURRENT VTOC ADDRESS
         B     BUFAHEAD      AND SEE IF WE CAN STAGE ANOTHER READ
         SPACE 2
*---------------------------------------------------------------------*
*   ENTRY CODE 4 - READ CHAINED DSCB (VALID AFTER 4, 5, OR 1 RETURN)  *
*---------------------------------------------------------------------*
         SPACE 1
ENTDSC3  TM    FLAGS,FGOPEN  OPEN FOR PROCESSING ?
         BZ    EXIT16        NO
         TM    DSNFG,DFDSCB   FORMAT 4 OR 1 IN BUFFER ?
         BZ    EXIT12        NO
         TM    DSNFG,DFDSEOF  PRIOR EOF SIGNALLED ?
         BNZ   EXIT12        YES; USER ERROR
         CLI   DS1FMTID,C'1' IS IT A FORMAT 1 ?
         BNE   G3FMT4        NO; DO FORMAT 4 PROCESSING
         OC    CHAINFMT,CHAINFMT  FIRST TIME ?
         BNZ   G3NEXT        NO; GET NEXT
         MVC   CHAINFMT,DS1PTRDS  MOVE NEXT ONE
         B     G3GET         GET CHAINED ONE
G3NEXT   MVC   CHAINFMT,DS3PTRDS  MOVE FROM PRIOR FMT 2/ FMT 3
G3GET    OC    CHAINFMT,CHAINFMT  ANY ?
         BZ    G3EXIT4       NO; RETURN END-FILE
         ICM   R0,15,CHAINFMT  GET TRACK ADDRESS
         BAL   R10,GETTRACK  GET THE TRACK                      GP99026
         SLR   R0,R0
         IC    R0,CHAINFMT+4 GET THE RECORD NUMBER
         BAL   R10,GETBLOCK  GET THE RECORD                     GP99026
           B   G3EXIT8       ERROR ?
         CLC   =X'2C0060',5(R1)  REALLY A DSCB ?
         BNE   G3EXIT8       NO
G3EXIT0  LA    R15,IECSDSL3
         ST    R15,RETR0     RETURN ADDRESS TO USER
         NI    DSNFG,255-DFDSCB3  RESET FORMAT 3 PRESENT
         MVC   IECSDSL3(LOCDS3-IECSDSL3),8(R1)  MOVE TEXT
         MVC   LOCDS3,CHAINFMT   RETURN THE CHAIN ADDRESS
         CLI   DS3FMTID,C'3' FORMAT 3 READ ?
         BNE   *+8           NO
         OI    DSNFG,DFDSCB3  SHOW DSCB 3 IN BUFFER
         ICM   R0,15,CURVTOC  GET CURRENT VTOC ADDRESS
         B     BUFAHEAD      SEE IF WE CAN BUFFER AHEAD
G3EXIT8  OI    DSNFG,DFDSEOF   SIGNAL END-FILE
         B     EXIT8         BUT TAKE ERROR EXIT
G3EXIT4  OI    DSNFG,DFDSEOF   SIGNAL END-FILE RETURNED
         B     EXIT4         AND TAKE END-FILE EXIT
         SPACE 1
G3FMT4   TM    DSNFG,DFDON6  DOING FORMAT 6 CHAIN ?
         BNZ   G3FMT6        YES
         TM    DSNFG,DFDON5  DOING FORMAT 5 CHAIN ?
         BNZ   G3FMT5        YES
         MVC   CHAINFMT,CURVTOC  COPY VTOC ADDRESS
         ICM   R0,15,VTOCSTRT  GET VTOC ADDRESS
         BAL   R10,GETTRACK  GET THE TRACK                      GP99026
         SLR   R0,R0
         IC    R0,VTOCSTRT+4  GET THE VTOC RECORD
         AH    R0,=H'1'      GET NEXT ONE
         STC   R0,CHAINFMT+4 SET IT BACK
         BAL   R10,GETBLOCK  GET THE BLOCK                      GP99026
           B   G3FMT4A       NEED TO BUMP A TRACK
         B     G3FMT4C       OK
G3FMT4A  MVI   CHAINFMT+4,1  SET TO RECORD 1
         ICM   R0,15,CHAINFMT  GET PRIOR TRACK
         AL    R0,=X'00000001'  UP A TRACK
         CLM   R0,3,VTOCEND+2   VALID TRACK ?
         BL    G3FMT4B       YES
         ICM   R0,3,ZEROES   ELSE SET TRACK TO ZERO
         AL    R0,=X'00010000'  AND UP THE CYLINDER
G3FMT4B  CLM   R0,12,VTOCEND  VALID CYLINDER ?
         BNL   G3EXIT8       NO ?
         STCM  R0,15,CHAINFMT  RESET IT
         BAL   R10,GETTRACK  READ THE TRACK                     GP99026
         SLR   R0,R0
         IC    R0,CHAINFMT+4  GET THE RECORD NUMBER
         BAL   R10,GETBLOCK  READ THE BLOCK                     GP99026
           B   G3EXIT8       TOO BAD
G3FMT4C  CLC   =X'2C0060',0(R1)  DSCB ?
         BNE   G3EXIT8       NO; TOO BAD
         CLI   8+DS1FMTID-DS1DSNAM(R1),C'5'  FORMAT 5 ?
         BNE   G3FMT5X       NO; FORMAT 5 CHAIN DONE
         OI    DSNFG,DFDON5  SHOW DOING FORMAT 5 RECORDS
         B     G3EXIT0       ELSE RETURN THE RECORD
G3FMT5   MVC   CHAINFMT,DS3PTRDS  MOVE ADDRESS OF NEXT ONE
         OC    CHAINFMT,CHAINFMT  ANY ?
         BZ    G3FMT5X       NO; TERMINATE CHAIN
         ICM   R0,15,CHAINFMT  GET THE TRACK ADDRESS
         BAL   R10,GETTRACK  READ IT                            GP99026
         SLR   R0,R0
         IC    R0,CHAINFMT+4
         BAL   R10,GETBLOCK  GET THE RECORD                     GP99026
           B   G3EXIT8       TOO BAD
         B     G3FMT4C       RETURN IT
G3FMT5X  OI    DSNFG,DFDON6  SHOW DOING TYPE 6 RECORDS
         MVC   CHAINFMT,DS4F6PTR-DS4IDFMT+DS1FMTID  MOVE FMT6 ADDRESS
         B     G3FMT6A
G3FMT6   MVC   CHAINFMT,DS3PTRDS  MOVE NEXT FORMAT 6 ADDRESS
G3FMT6A  OC    CHAINFMT,CHAINFMT  ANY ?
         BZ    G3EXIT4       NO; QUIT
         ICM   R0,15,CHAINFMT
         BAL   R10,GETTRACK  READ THE TRACK                     GP99026
         SLR   R0,R0
         IC    R0,CHAINFMT+4   GET THE RECORD NUMBER
         BAL   R10,GETBLOCK    GET THE RECORD                   GP99026
           B   G3EXIT8       TOO BAD
         CLC   =X'2C0060',0(R1)  REALLY A DSCB ?
         BNE   G3EXIT8       NO; TOO BAD
         B     G3EXIT0       RETURN IT TO USER
         SPACE 1                                                GP02247
*---------------------------------------------------------------------*
*   ENTRY CODE 4 - SEARCH VTOC FOR DSNAME                             *
*     R1-> CL44'DATA SET NAME'   OR 44X'04' FOR FORMAT 4 DSCB         *
*     R1 RETURNS -> FULL 44+96 DSCB                                   *
*---------------------------------------------------------------------*
         SPACE 1                                                 81264
ENTSERCH TM    FLAGS,FGOPEN  VOLUME OPEN FOR ACCESS ?            81264
         BZ    EXIT12        NO; TOO BAD                         81264
         SLR   R0,R0         CHEAT                               81264
         BCTR  R0,0          MAKE INVALID TRACK ADDRESS          81264
         BAL   R10,GETTRACK  GET A FREE BUFFER AND EXCP          81264
         USING BUFFMAP,R4                                        81264
         WAIT  ECB=DWECB     WAIT FOR COMPLETION                 81264
         MVI   DWTOGO,BFAVAIL  MAKE BUFFER AVAILABLE AGAIN       81264
         MVI   DWICCHH+4,0   RESET RECORD NUMBER                 81264
         CLI   DWECB,X'7F'   READ OK ?                           81264
         BE    SERCH0        YES; PROCESS IT                     81264
         BAL   R9,PURGEBUF   FREE THE BUFFER                     81264
         B     EXIT8         RETURN ERROR                        81264
SERCH0   L     R8,DWACOUNT   POINT TO WORK AREA                  81264
         LA    R3,PATSDAT-PATSRCH0(,R8)  POINT TO DATA           81264
         ST    R3,RETR0      SET DATA PORTION IN RETURN          81264
         CLI   0(R3),C'1'    FORMAT 1 DSCB ?                     81264
         BE    SERCH1        YES                                 81264
         CLI   0(R3),C'4'    FORMAT 4 DSCB ?                     81264
         BNE   EXIT4         NO; RETURN MINOR ERROR              81264
SERCH1   MVC   DS1DSNAM,0(R7)  SAVE USER'S KEY                   81264
         MVC   DS1FMTID(LOCDS1-DS1FMTID+L'LOCDS1),0(R3) COPY DATA/COUNT
         OI    DSNFG,DFDSCB  SHOW FORMAT 1 IN BUFFER             81264
         NI    DSNFG,DFDSCB+DFDSEOF  RESET OTHERS                81264
         LA    R1,DS1DSNAM                                       81264
         ST    R1,RETR0      RETURN FULL DSCB TO USER            81264
         BAL   R9,PURGEBUF   FREE THIS BUFFER                    81264
         B     EXIT          RETURN CODE ZERO                    81264
         DROP  R4                                                81264
         SPACE 1
*---------------------------------------------------------------------*
*   ENTRY CODE 6 - READ A BLOCK BY ADDRESS                            *
*     R1 -> XL5'cchhr'  OF DESIRED BLOCK                              *
*     R1 RETURNS -> FULL 44+96 DSCB  R0=0 FOR DSCB; R0=4 OUTSIDE VTOC *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTSEEK  TM    FLAGS,FGOPEN  OPEN FOR PROCESSING ?              GP09160
         BZ    EXIT16        NO                                 GP09160
         CLC   0(2,R7),NUMCYL     VALID CC ?                    GP09160
         BNL   EXIT12        NO                                 GP09160
         CLC   2(2,R7),NUMTRK     VALID HH ?                    GP09160
         BNL   EXIT12        NO                                 GP09160
         ICM   R0,15,0(R7)   GET CCHH                           GP09160
         BAL   R10,GETTRACK                                     GP09160
         SR    R0,R0                                            GP09160
         IC    R0,4(R7)      REQUESTED RECORD                   GP09160
         BAL   R10,GETBLOCK    LOOK FOR IT                      GP09160
           B   EXIT8         ERROR                              GP09160
         ST    R1,RETR1      RETURN BLOCK ADDRESS               GP09160
         CLC   0(4,R7),VTOCSTRT   IS ADDRESS IN VTOC ?          GP09160
         BL    EXIT4         NO                                 GP09160
         CLC   0(4,R7),VTOCEND    IN VTOC ?                     GP09160
         BH    EXIT4         NO                                 GP09160
         B     EXIT          AND GO BACK                        GP09160
         SPACE 1
*---------------------------------------------------------------------*
*   ENTRY CODE 7 - FIND A MEMBER IN LAST PDS                          *
*     R1 -> CL8'mem-name'                                             *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTFIND  LTR   R7,R7         VALID ADDRESS PASSED ?              85350
         BZ    EXIT16        NO; TOO BAD                         85350
         XC    PDETTR,PDETTR RESTART SEARCH AT BEGINNING         85350
         NI    DSNFG,255-DFPDS-DFEOF  RESET FLAGS                85350
         SPACE 1                                                 85350
ENTGETDE TM    FLAGS,FGOPEN+FGVOLUME  VOLUME ACCESS PERMITTED ?
         BNO   EXIT12        NO; SET ERROR
         TM    DSNFG,DFDSCB  FORMAT 1 IN BUFFER ?
         BZ    EXIT12        NO; ERROR
         TM    DSNFG,DFINIT  INITIALIZED ?
         BNZ   ENTGETDI      YES
         BAL   R10,DSNINIT   INITIALIZE DSN PROCESSING          GP99026
ENTGETDI CLI   PDETTR+2,X'FF'  PRIOR END-FILE SIGNALLED ?
         BE    EXIT12        YES; ERROR
         TM    DSNFG,DFPDS   DIRECTORY PROCESSING INITIALIZED ?
         BNZ   ENTDEDEB      YES; DEBLOCK NEXT ENTRY
         TM    DS1DSORG,X'02'    PARTITIONED DATASET ?
         BZ    PDEXIT8       NO; ERROR
         TM    DS1DSORG+1,0      FUNNY DATASET ?                GP09186
         BNZ   PDEXIT8       NO; ERROR                          GP09186
         OI    DSNFG,DFPDS   SHOW INITIALIZED
         XC    PDETTR,PDETTR   START AT BEGINNING
ENTDEGET L     R0,PDETTR     GET PRIOR TTR
ENTDEGEU BAL   R9,TTRABS1    GET NEXT TTR                       GP99026
           B   PDEXIT8       ERROR; SET END-FILE, ETC.
         MVC   PDETTR,DSNTTR
         CLC   PDETTR(2),EXTENTS+EXTSIZE-MAPEXTNT  IN FIRST EXTENT ?
         BNL   PDEXIT4       NO; RETURN END-FILE
         ICM   R0,15,DSNCCHH  GET TRACK ADDRESS
         BAL   R10,GETTRACK  READ THE TRACK                     GP99026
         USING BUFFMAP,R4
         CLC   DSNCCHH+4(1),DWNUM+L'DWNUM-1  ON TRACK ?          85350
         BNH   ENTDEDBX      YES; CHECK AND SET BXLE POINTERS
         MVI   PDETTR+2,0    SET TO RECORD ZERO
         L     R0,PDETTR     GET FULL TTR
         AL    R0,=X'00010000'  BUMP A TRACK
         B     ENTDEGEU      LOCATE IT
ENTDEDBX SLR   R0,R0
         IC    R0,DSNCCHH+4  GET RECORD NUMBER
         BAL   R10,GETBLOCK  POSITION TO BLOCK                  GP99026
           B   PDEXIT8       ERROR ?
         CLC   =X'080100',5(R1)  REALLY A DIRECTORY BLOCK ?
         BNE   PDEXIT8       DEFINITELY NOT
         LH    R5,16(,R1)    GET THE LOGICAL SIZE
         CH    R5,=H'2'      ANY ?
         BL    PDEXIT8       NO; TOO BAD
         CH    R5,=AL2(256)  FULL BLOCK ?
         BH    PDEXIT8       A LITTLE TOO FULL
         MVC   PDEBLOCK,16(R1)  SAVE IT IN OUR STORAGE
         BAL   R9,PURGEREC   FREE THE BLOCK                     GP99026
         LA    R3,PDEBLOCK   SET BLOCK START
         LA    R4,2          LENGTH OF FIRST ENTRY
         LA    R5,PDEBLOCK-1(R5)  SET FOR BXLE END
         STM   R3,R5,PDEBXLE   SET POINTERS
ENTDEDEB LM    R3,R5,PDEBXLE   GET POINTERS
         BXH   R3,R4,ENTDEGET  GET ANOTHER IF THIS ONE IS DONE
         ST    R3,RETR0      SET DIRECTORY ADDRESS FOR USER
         NI    DSNFG,255-DFEOF  RESET DATA EOF
         IC    R4,11(,R3)    GET FLAG/LENGTH FOR THIS ENTRY
         N     R4,=F'31'     MASK LENGTH ONLY
         SLL   R4,1          CONVERT HALF-WORDS TO LENGTH
         LA    R4,12(,R4)    PLUS OVERHEAD
         STM   R3,R4,PDEBXLE  SET ADDRESS AND LENGTH FOR NEXT CALL
         MVC   DSNTTR(2),8(R3)  COPY TT FOR NEXT READ
         IC    R4,10(,R3)    GET RECORD NUMBER
         SH    R4,=H'1'      BUMP BACK
         BNM   *+6
         SLR   R4,R4
         STC   R4,DSNTTR+2   SET IT
         CLI   CALLMODE,7    FIND REQUESTED ?                    85350
         BNE   ENTDEBEX      NO                                  85350
         CLC   0(8,R3),0(R7)  REQUESTED MEMBER ?                 85350
         BL    ENTDEDEB      NO; TRY NEXT ENTRY                  85350
         BH    PDEXIT4       NO; PAST IT                         85350
ENTDEBEX CLI   0(R3),X'FF'   LAST ENTRY ?                        85350
         BL    EXIT          NO; TAKE GOOD EXIT
PDEXIT4  MVI   PDETTR+2,X'FF'  SET END-FILE FLAG
         OI    DSNFG,DFEOF   ALSO FORCE DATA END-FILE
         B     EXIT4         RETURN WITH EOF
PDEXIT8  MVI   PDETTR+2,X'FF'  SET END-FILE FLAG
         OI    DSNFG,DFEOF   FORCE DATA END-FILE
         B     EXIT8         RETURN ERROR
         SPACE 1
*---------------------------------------------------------------------*
*   ENTRY CODE 9 - READ BLOCK IN LAST DATA SET (OR MEMBER OF PDS)     *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTREAD  TM    FLAGS,FGOPEN+FGVOLUME  VOLUME ACCESS PERMITTED ?
         BNO   EXIT12        NO; SET ERROR
         TM    DSNFG,DFDSCB  FORMAT 1 IN BUFFER ?
         BZ    EXIT12        NO; ERROR
         TM    DSNFG,DFEOF   PRIOR END-FILE SIGNALLED ?
         BNZ   EXIT12        YES; ERROR
         TM    DSNFG,DFINIT  INITIALIZED ?
         BNZ   ENTREADI      YES
         BAL   R10,DSNINIT   INITIALIZE DSN PROCESSING          GP99026
ENTREADI L     R0,DSNTTR     GET PRIOR TTR
ENTREADJ BAL   R9,TTRABS1    CONVERT TO CCHHR                   GP99026
ENTREADK   B   DSNEXIT4      INVALID - SET END-FILE              82152
         ICM   R0,15,DSNCCHH LOAD TRACK ADDRESS
         BAL   R10,GETTRACK  GET THE TRACK BUFFER               GP99026
         USING BUFFMAP,R4
         CLC   DSNCCHH+4(1),DWNUM+L'DWNUM-1  ON TRACK ?          85350
         BNH   ENTREADR      YES; LOCATE RECORD AND RETURN
         MVI   DSNTTR+2,0    SET TO RECORD ZERO
         L     R0,DSNTTR     GET FULL TTR
         AL    R0,=X'00010000'  BUMP A TRACK
         B     ENTREADJ      LOCATE IT
ENTREADR SLR   R0,R0
         IC    R0,DSNCCHH+4  GET RECORD NUMBER
         TM    FLAGS,FGOUT   UPDATING ?                          90200
         BZ    ENTREADU      NO                                  90200
         LH    R10,DWNUM     GET RECORDS ON TRACK                90200
         SR    R10,R0        GET NUMBER LEFT TO READ             90200
         LA    R10,1(,R10)   PLUS ONE FOR DECREMENT IN PURGEREC  90200
         STH   R10,DWUNREAD  UPDATE UNREAD COUNT                 90200
ENTREADU BAL   R10,GETBLOCK  POSITION TO BLOCK                   90200
           B   DSNEXIT8
         ST    R1,RETR0      RETURN ADDRESS TO USER
         BAL   R9,PURGEREC   FREE THE BLOCK                     GP99026
         CLC   6(2,R1),ZEROES  END-FILE BLOCK ?
         BNE   EXIT          NO; RETURN
DSNEXIT4 OI    DSNFG,DFEOF   SET END-FILE IN DATA
         B     EXIT4         AND EXIT WITH EOF
DSNEXIT8 OI    DSNFG,DFEOF   SET END-FILE
         B     EXIT8         BUT TAKE ERROR EXIT
         SPACE 1
*---------------------------------------------------------------------*
*   ENTRY CODE 11 - REPOSITION IN DATA SET                            *
*     R1 -> TTRZ                                                      *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTPOINT TM    FLAGS,FGOPEN+FGVOLUME  VOLUME ACCESS PERMITTED ?
         BNO   EXIT12        NO; SET ERROR
         TM    DSNFG,DFDSCB  FORMAT 1 IN BUFFER ?
         BZ    EXIT12        NO; ERROR
         NI    DSNFG,255-DFEOF   RESET PRIOR EOF
         TM    DSNFG,DFINIT  INITIALIZED ?
         BNZ   ENTPOINI      YES
         BAL   R10,DSNINIT   INITIALIZE DSN PROCESSING          GP99026
ENTPOINI L     R0,CALLR1     GET USER'S TTR
ENTPOINF LA    R9,ENTREADK   SET COMMON PROCESSING ADDRESS       85350
         B     TTRABS        CONVERT AND READ
         SPACE 1
*---------------------------------------------------------------------*
*   ENTRY CODE 10 - NOTE CURRENT DATA SET POSITION                    *
*     FOR LATER POINT REQUEST                                         *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTNOTE  TM    FLAGS,FGOPEN+FGVOLUME  VOLUME ACCESS PERMITTED ?
         BNO   EXIT12        NO; SET ERROR
         TM    DSNFG,DFDSCB  FORMAT 1 IN BUFFER ?
         BZ    EXIT12        NO; ERROR
         TM    DSNFG,DFINIT  INITIALIZED ?
         BNZ   ENTNOTEI      YES
         BAL   R10,DSNINIT   INITIALIZE DSN PROCESSING          GP99026
ENTNOTEI MVC   RETR0(3),DSNTTR  RETURN TTR TO USER
         B     EXIT          RETURN TO CALLER
         SPACE 1
*---------------------------------------------------------------------*
*   ENTRY CODE 15 - RETURN THE TRACK AT THE SPECIFIED ADDRESS         *
*     R1 -> XL4'cchh' OF DESIRED TRACK                                *
*     R1 RETURNS AREA MAPPED BY MAPVOLRD                              *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTTRACK TM    FLAGS,FGOPEN  OPEN FOR PROCESSING ?              GP09160
         BZ    EXIT16        NO                                 GP09160
         CLC   0(2,R7),NUMCYL     VALID CC ?                    GP09160
         BNL   EXIT12        NO                                 GP09160
         CLC   2(2,R7),NUMTRK     VALID HH ?                    GP09160
         BNL   EXIT12        NO                                 GP09160
         ICM   R0,15,0(R7)   GET CCHH                           GP09160
         BAL   R10,GETTRACK                                     GP09160
         CLC   DWNUM,DWUNREAD     USED BY ANOTHER FUNCTION ?    GP09160
         BNE   NETTRUSE           YES; LEAVE IT ALONE           GP09160
         XC    DWUNREAD,DWUNREAD  ELSE DON'T KEEP               GP09160
NETTRUSE LA    R1,MAPVOLRD        COPY LIST ADDRESS             GP09160
         ST    R1,RETR1           TO CALLER                     GP09160
         XC    0(TRKSIZE,R1),0(R1)   CLEAR IT                   GP09160
         MVC   TRKCCHH,0(R7)      COPY REQUEST ADDRESS          GP09160
         SR    R0,R0                                            GP09160
         ICM   R0,3,NUMDATA       RAW TRAK CAPACITY             GP09160
         ST    R0,TRKMAXSZ        SAVE AS MAX SIZE              GP09160
         LH    R0,DWNUM                                         GP09160
         ST    R0,TRK#BLOK        BLOCKS ON TRACK               GP09160
         LH    R0,NUMTRK     TRACKS PER CYLINDER                GP09160
         ST    R0,TRKPCYL    GIVE TO USER                       GP09160
         MVC   TRKR0DAT,DWR0DATA  FOR BDAM & ISAM               GP09160
         MVC   TRK@DATA,DWADATA     AND DATA                    GP09160
         SR    R15,R15       USED TRACK SIZE                    GP09160
         ICM   R0,15,TRK#BLOK    NUMBER OF BLOCKS               GP09160
         BNP   NETTRACK                                         GP09160
         SR    R1,R1         CLEAR FOR IC                       GP09160
         SR    R2,R2         CLEAR FOR ICM                      GP09160
         L     R3,DWADATA    FIRST COUNT FIELD                  GP09160
NETTRLUP LA    R5,8          CURRENT BLOCK LENGTH - COUNT FIELD GP09160
         IC    R1,5(,R3)     GET KEY LENGTH                     GP09160
         ICM   R2,3,6(R3)    GET DATA LENGTH                    GP09160
         AR    R5,R1                                            GP09160
         AR    R5,R2         BLOCK LENGTH                       GP09160
         AR    R3,R5         NEXT BLOCK                         GP09160
         AR    R15,R5        CUM. TRACK LENGTH                  GP09160
         BCT   R0,NETTRLUP   REPEAT FOR ALL BLOCKS              GP09160
NETTRACK ST    R15,TRKCURSZ  RETURN USED SIZE                   GP09160
         B     EXIT          AND GO BACK                        GP09160
         SPACE 2                                                 85350
*---------------------------------------------------------------------*
*   ENTRY CODE 13 - UPDATE A BLOCK IN PLACE                           *
*     R1 -> CCHHRkldl KEY DATA                                        *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
ENTUPDAT TM    FLAGS,FGOPEN+FGVOLUME+FGOUT  OPENED FOR UPDATE ?  85350
         BNO   EXIT12        NO; INVALID REQUEST                 85350
         MVICC ,1            NO BLOCK POINTER                   GP05279
         LA    R4,BUFFQUE-(DWCHAIN-BUFFMAP)  POINT TO USED CHAIN 85350
         LA    R7,0(,R7)     CLEAN BLOCK ADDRESS                 85350
         LTR   R7,R7         ANY ?                               85350
         BZ    EXIT12        NO; ERROR                           85350
         USING BUFFMAP,R4                                        85350
         ICM   R0,15,0(R7)   LOAD CCHH FROM COUNT FIELD          85350
         MVICC ,2            NO BLOCK                           GP05279
ENTUPTKL ICM   R4,15,DWCHAIN  GET NEXT BUFFER                    85350
         BZ    EXIT12        NONE; ERROR IN REQUEST              85350
         CLM   R0,15,DWICCHH   SAME DISK ADDRESS ?               85350
         BNE   ENTUPTKL      NO; TRY NEXT BUFFER                 85350
         SLR   R0,R0         CLEAR FOR RECORD NUMBER             85350
         IC    R0,4(,R7)     LOAD RECORD NUMBER                  85350
         MVICC ,3            NOT IN BUFFER                      GP05279
         BAL   R10,GETBLOCK  LOCATE THE BLOCK IN THE BUFFER      85350
           B   EXIT12        INVALID                             85350
         CR    R1,R7         IS USER UPDATING IN SAME LOCATION ? 85350
         BE    ENTUPNMV      YES; SKIP MOVE                      85350
         MVICC ,4            BAD REQUEST                        GP05279
         CLC   5(3,R7),5(R1)   DID USER LEAVE LENGTHS ALONE ?    85350
         BNE   EXIT12        NO; TOO BAD                         85350
         SLR   R3,R3                                             85350
         IC    R3,5(,R7)     GET KEY LENGTH                      85350
         AH    R3,6(,R7)     PLUS DATA LENGTH                    85350
         LA    R3,8(,R3)     PLUS COUNT FIELD LENGTH             85350
         LR    R2,R1         OUTPUT FIELD                        85350
         LR    R15,R3        COPY LENGTH                         85350
         LR    R14,R7        COPY INPUT ADDRESS                  85350
         MVCL  R2,R14        UPDATE THE STORAGE BUFFER           85350
ENTUPNMV LM    R2,R3,DWCRDAT0  SAVE READ R0 CCW                  85350
         MVI   DWTOGO,BFEXCP   JUST EXCP BUFFER AS IS            85350
         MVC   DWICCHH+4(1),4(R1)  SET RECORD NUMBER FOR SEARCH  85350
         LA    R14,8(,R1)    GET KEY/DATA ADDRESS                85350
         SLR   R15,R15                                           85350
         IC    R15,5(,R1)    GET KEY LENGTH                      85350
         AH    R15,6(,R1)    PLUS DATA LENGTH                    85350
         STM   R14,R15,DWCRDAT0  MAKE WRITE KEY/DATA CCW         85350
         MVI   DWCRDAT0,X'0D'  SET WRITE KEY/DATA OPCODE         85350
         LA    R14,DWCRDATA  GET CCW ADDRESS                     85350
         ST    R14,DWICCW    SET START OF CHAIN                  85350
         BAL   R9,TRACKIO    WRITE THE BLOCK                     85350
         WAIT  ECB=DWECB     WAIT FOR COMPLETION                 85350
         MVC   DB,DWCRDAT0   SAVE REQUEST FOR DIAGNOSIS          85350
         STM   R2,R3,DWCRDAT0  RESTORE READ R0 CCW               85350
         MVI   DWTOGO,BFCOMP  SET BUFFER COMPLETE                85350
         MVI   DWICCHH+4,0   RESET RECORD NUMBER                 85350
         MVICC ,0            RESET REASON CODE                  GP05279
         CLI   DWECB,X'7F'   GOOD I/O ?                          85350
         BE    EXIT          YES                                 85350
         BAL   R14,IOABEND   ELSE FAIL                           85350
         SPACE 1
*---------------------------------------------------------------------*
*   OPEN THE LAST RETURNED DSCB FOR READ ACCESS                       *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
DSNINIT  STM   R0,R10,SUBSAVE  SAVE ALL REGISTERS
         SLR   R4,R4
         ICM   R4,1,DS1NOEPV   GET NUMBER OF EXTENTS
         BZ    EXIT12        ERROR
         LA    R2,EXTENTS    GET DESTINATION
         LA    R3,DS1EXT1    SET SOURCE ADDRESS
         STH   R4,NUMEXTS    SET NUMBER                          83298
         LA    R5,3          SET MAXIMUM AVAILABLE
         CLI   DS1EXT1+XTTYPE-MAPEXTNT,XTTLABEL  LABEL EXTENT ? GP09158
         BNE   DSNININL      NO; OK ?                            83298
         LA    R4,1(,R4)     ALLOW FOR SPACE IN LABEL EXTENT     83298
         LA    R3,DS1EXT2-DS1EXT1(,R3)  SKIP OVER LABEL EXTENT   83298
         BCTR  R5,0          ADJUST NUMBER OF EXTENTS TO MOVE    83298
DSNININL BAL   R9,MOVEXTNT   MOVE EXTENTS                       GP99026
*OOPS*   CH    R4,=H'3'      MORE THAN THREE ?                   83298
*OOPS*   BNH   DSNINITX      NO; RETURN
         CLC   DS1PTRDS,ZEROES  ANY EXTENSION ?
         BE    DSNINITX      NO ?
         LA    R1,IECSDSL3-8   PRESET FOR COMMON CODE
         TM    DSNFG,DFDSCB3   DSCB 3 ALREADY AVAILABLE ?
         BNZ   DSNINIT3      YES; MOVE EXTENTS
         ICM   R0,15,DS1PTRDS
         BAL   R10,GETTRACK  GET TRACK FOR EXTENSION            GP99026
         SLR   R0,R0
         IC    R0,DS1PTRDS+4   GET RECORD NUMBER
         BAL   R10,GETBLOCK  GET THE RECORD                     GP99026
           B   DSNINITX      SKIP ON ERROR
         CLI   8+DS3FMTID-IECSDSL3(R1),C'3'  FORMAT 3 ?
         BE    DSNINIT3      YES; MOVE IT
         CLC   8+DS3PTRDS-IECSDSL3(5,R1),ZEROES  ANY FMT 3 POINTER ?
         BE    DSNINITX      NO; SKIP
         LR    R8,R1         COPY THE ADDRESS
         ICM   R0,15,8+DS3PTRDS-IECSDSL3(R8)  GET THE TRACK ADDRESS
         BAL   R10,GETTRACK  READ THE TRACK                     GP99026
         SLR   R0,R0
         IC    R0,8+DS3PTRDS+4-IECSDSL3(,R8)  GET THE RECORD
         BAL   R10,GETBLOCK  POINT TO IT                        GP99026
           B   DSNINITX      NOT FOUND; SKIP OUT
         CLI   8+DS3FMTID-IECSDSL3(R1),C'3'  FORMAT 3 ?
         BNE   DSNINITX      NO; IGNORE
DSNINIT3 LH    R4,NUMEXTS    GET NUMBER OF EXTENTS
         SH    R4,=H'3'      ALREADY MOVED
         LA    R5,4          MAXIMUM AVAILABLE
         LA    R2,EXTENTS+3*EXTLEN  SET NEW DESTINATION
         CLI   DS1EXT1+XTTYPE-MAPEXTNT,XTTLABEL  LABEL EXTENT ? GP09158
         BNE   DSNIN3NL      NO; GOOD                            83298
         LA    R4,1(,R4)     NUMBER OF EXTENTS LEFT TO DO        83298
         LA    R2,EXTENTS+2*EXTLEN  SET NEW DESTINATION          83298
DSNIN3NL LA    R3,8+DS3EXTNT-IECSDSL3(,R1)  NEW SOURCE           83298
         BAL   R9,MOVEXTNT   MOVE THEM                          GP99026
         LA    R3,8+DS3ADEXT-IECSDSL3(,R1)  NEXT GROUP
         LA    R5,9          MAXIMUM REMAINING EXTENTS          GP09158
         SH    R4,=H'4'      ALLOW FOR ONES JUST MOVED           83298
         BNP   DSNINITX
         BAL   R9,MOVEXTNT   MOVE REMAINDER                     GP99026
DSNINITX OI    DSNFG,DFINIT  SET INITIALIZATION COMPLETE
         XC    DSNTTR,DSNTTR   PRESET FOR FIRST BLOCK
         XC    PDETTR,PDETTR
DSNINITZ LM    R0,R10,SUBSAVE  RESTORE REGISTERS
         BR    R10           RETURN
         SPACE 1
*---------------------------------------------------------------------*
*   MOVE EXTENT INFORMATION TO OUR AREA; APPEND SIE OF EACH FOR       *
*     TTR CALCULATION                                                 *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
MOVEXTNT CR    R4,R5         CHECK HOW MANY TO MOVE
         BNL   *+6           ALL
         LR    R5,R4         ONLY PART AVAILABLE
MOVEXTLP CLC   ZEROES(10),0(R3)  ANYTHING IN THIS EXTENT ?
         BER   R9            NO
         CLC   2(2,R3),NUMCYL  VALID CYLINDER ?
         BNLR  R9            NO; ERROR
         CLC   4(2,R3),NUMTRK  VALID TRACK ?
         BNLR  R9            NO; ERROR
         CLC   6(2,R3),NUMCYL  DITTO FOR END ?
         BNLR  R9            NO; ERROR
         CLC   8(2,R3),NUMTRK
         BNLR  R9
         CLC   2(4,R3),6(R3)  DESCENDING ?
         BHR   R9            YES; TOO BAD
         USING MAPEXTNT,R2
         MVC   XTTYPE(10),0(R3)  MOVE ONE EXTENT DESCRIPTOR
         SR    R14,R14                                          GP09160
         SR    R15,R15                                          GP09160
         ICM   R15,3,XTHICYL                                    GP09160
         ICM   R14,3,XTLOCYL                                    GP09160
         SR    R15,R14                                          GP09160
         CLI   XTTYPE,XTTSPLIT  SPLIT CYLINDER ?
         BNE   MOVEXTNS      NO
         LH    R0,XTHITRK
         SH    R0,XTLOTRK
         AH    R0,=H'1'      TRACKS IN ONE CYLINDER
         AH    R15,=H'1'     CYLINDERS USED                     GP09160
         MR    R14,R0        TRACKS ACCOUNTED FOR BY CYLINDERS
         B     MOVEXTCM      DONE WITH SPLIT                    GP09160
MOVEXTNS MH    R15,NUMTRK    * TRKS/CYL                         GP09160
         AH    R15,XTHITRK   PLUS HIGH TRACK
         SH    R15,XTLOTRK   LESS LOW TRACK
         AH    R15,=H'1'     MAKE RELATIVE
MOVEXTCM STH   R15,EXTSIZE   SET TRACKS IN EXTENT
         LA    R2,EXTLEN(,R2)  POINT TO NEXT EXTENT
         LA    R3,DS1EXT2-DS1EXT1(,R3)  DITTO FOR INPUT
         BCT   R5,MOVEXTLP
         BR    R9            RETURN
         DROP  R2
         SPACE 1
TTRABS   CLM   R0,1,ZEROES   NON-ZERO LOW BYTE ?
         BE    TTRABS2       NO; USE TTR AS IS
TTRABS1  AL    R0,=X'00000100'   INCREMENT RECORD NUMBER
TTRABS2  ST    R0,DSNTTR     SET TTR USED BACK
         STM   R0,R10,SUBSAVE  SAVE ALL REGISTERS
         STCM  R0,2,DSNCCHH+4  COPY RECORD NUMBER
         SRL   R0,16         RIGHT-ADJUST RECORD NUMBER
         LH    R1,NUMEXTS    GET NUMBER OF EXTENTS
         LA    R2,EXTENTS    POINT TO FIRST EXTENT DESCRIPTION
         USING MAPEXTNT,R2   DECLARE THE MAPPING
TTRABSLP SR    R3,R3         CLEAR FOR ICM                      GP09160
         ICM   R3,3,EXTSIZE  GET EXTENT SIZE                    GP09160
         CR    R0,R3         IN THIS EXTENT ?                   GP09160
         BL    TTRABSFN      YES
         SR    R0,R3         ACCOUNT FOR THIS EXTENT            GP09160
         LA    R2,EXTLEN(,R2)  POINT TO NEXT EXTENT
         BCT   R1,TTRABSLP   GET NEXT EXTENT
         LM    R0,R10,SUBSAVE
         BR    R9            NOT FOUND IN EXTENTS
         SPACE 1
TTRABSFN LH    R3,NUMTRK     GET TRACKS PER CYLINDER
         LR    R6,R3         GET ENDING TRACK NUMBER
         BCTR  R6,0
         SLR   R7,R7         GET STARTING TRACK NUMBER
         CLI   XTTYPE,XTTSPLIT  SPLIT EXTENT ?
         BNE   TTRABSNS      NO
         LH    R6,XTHITRK    GET END TRACK
         LH    R7,XTLOTRK    AND START TRACK
         LA    R3,1(,R6)
         SR    R3,R7         NUMBER OF TRACKS PER CYLINDER
TTRABSNS SLR   R14,R14
         SLR   R15,R15
         ICM   R14,3,XTLOCYL   GET STARTING CYLINDER
         ICM   R15,3,XTLOTRK    AND START TRACK
         LR    R5,R0         NUMBER OF TRACKS TO BUMP
         SLR   R4,R4
         DR    R4,R3         CHANGE TO TRACKS/CYLINDERS TO BUMP
         AR    R14,R5        UP CYLINDERS
         AR    R15,R4        UP TRACKS
TTRABSGX CR    R15,R6        PAST LAST TRACK ON CYLINDER ?       81271
         BNH   TTRABSET      NO; USE IT
         BCTR  R15,0         CORRECT FOR START RELATIVE TO 0     81271
         SR    R15,R6        MAKE RELATIVE
         AR    R15,R7        ADD START
         LA    R14,1(,R14)   AND INCREMENT CYLINDER
         B     TTRABSGX      CHECK AGAIN                         81271
TTRABSET STCM  R14,3,DSNCCHH   SET CYLINDER ADDRESS
         STCM  R15,3,DSNCCHH+2   AND TRACK ADDRESS
         LM    R0,R10,SUBSAVE   RESTORE REGISTERS
         B     4(,R9)        RETURN TO CALLER
         DROP  R2
         SPACE 2
*---------------------------------------------------------------------*
*   GET A BLOCK IN THE CURRENT TRACK                                  *
*     VECTORED RETURN +0 - FAIL  +4 - SUCCESS  R1-> BLOCK             *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
         USING BUFFMAP,R4
GETBLOCK CH    R0,DWNUM      RECORD NUMBER ON TRACK ?
         BHR   R10           NO; RETURN ERROR
         SLA   R0,3          CONVERT TO CCW OFFSET
         BZR   R10           RECORD 0 NOT PRESENT (WITH COUNT FIELD)
         L     R1,DWARDATA   ADDRESS OF READ CKD CHAIN
         AR    R1,R0         ADD OFFSET
         L     R1,16(,R1)    GET CONTENTS OF CCW (ADDRESS OF COUNT)
         LA    R1,0(,R1)     MAKE IT PRETTY
         B     4(,R10)       RETURN
         SPACE 2
GETTRACK ICM   R4,15,BUFFQUE GET FIRST BUFFER ON USED QUEUE
         BZ    GETTNONE      NONE
         USING BUFFMAP,R4
GETTULOP CLM   R0,15,DWICCHH   REQUIRED TRACK ?
         BE    GETTWAIT      YES; WAIT IF NECESSARY
         ICM   R4,15,DWCHAIN  GET NEXT BUFFER IN CHAIN
         BNZ   GETTULOP      CHECK IT
GETTNONE ICM   R4,15,BUFFFREE  GET TOP BUFFER ON FREE QUEUE
         BZ    GETTSTIL      IF NONE, STEAL ONE
         MVC   BUFFFREE,DWCHAIN  CHAIN NEXT FREE ONE ON TOP
         MVC   DWCHAIN,BUFFQUE   CHAIN NEXT USED BUFFER TO CURRENT
         ST    R4,BUFFQUE    PUT CURRENT ON TOP OF ACTIVE QUEUE
         B     GETTEXCP      DO I/O FOR IT
GETTSTIL SLR   R5,R5         SET PRIOR BUFFER
         L     R4,BUFFQUE    GET FIRST BUFFER
         SLR   R3,R3         SET LAST IDLE BUFFER
GETTSTIN CLI   DWTOGO,BFCOMP  IS BUFFER COMPLETE ?
         BNE   *+6           NO
         LR    R3,R4         SAVE THE ADDRESS
         LR    R5,R4         SAVE ADRESS OF LAST BUFFER
         ICM   R4,15,GETTSTIN  TRY ANOTHER
         LTR   R4,R3         SEE IF AN IDLE BUFFER
         BNZ   GETTEXCP      YES; USE IT
         LR    R4,R5         ELSE USE LAST ON CHAIN
GETTSTIW WAIT  ECB=DWECB     WAIT FOR COMPLETION
GETTEXCP STCM  R0,15,DWICCHH   SET REQUESTED TRACK ADDRESS
         MVI   DWTOGO,BFAVAIL  SET BUFFER AVAILABLE
         CLI   CALLMODE,5    SEARCH DSCB MODE ?                  81264
         BNE   GETTXCOM      NO                                  81264
         MVI   DWTOGO,BFSEARCH  ELSE SET SEARCH PROCESSING       81264
GETTXCOM BAL   R9,TRACKIO    FIRE OFF AN I/O                    GP99026
GETTWAIT CLI   DWTOGO,BFCOMP  IS BUFFER COMPLETE ?
         BER   R10           YES; RETURN TO CALLER
         CLI   CALLMODE,2    OPEN PROCESSING ?
         BNE   GETTXCOM      NO; WAIT FOR COMPLETION
         BR    R10           RETURN TO CALLER
         SPACE 2
*---------------------------------------------------------------------*
*   PERFORM LOW LEVEL I/O - READ TRACK; SEARCH KEY; ETC.              *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
         USING BUFFMAP,R4
TRACKIO  STM   R0,R10,TRAKSAVE   SAVE REGISTERS
         IC    R0,DWTOGO     GET PROCESS FLAG
      BIX ERR=IOABEND,PFX=TRAK,LOC=(RCNT,PCNT,RDAT,RDOK,SRCH,EXCP,RDML)
         SPACE 1
TRAKRCNT MVI   DWFLAG,0      RESET FLAG BYTE                     88225
  B TRAKNMRD ***BNZ FAILS IN UPDATE MODE - FIX LATER***         GP13200
         TM    FLAGS,FGNRMCKD   READ MULTIPLE VALID ?            88225
         BNZ   TRAKNMRD      NO; DO THE OLD-FASHIONED WAY        88225
         SPACE 1                                                 88225
TRAKRCMT SLR   R1,R1                                             88225
         ICM   R1,3,NUMDATA    GET TRACK CAPACITY                88225
         LA    R1,8(,R1)     ADD A LITTLE EXTRA                  88225
         MVC   DWICCW,DWARDATA  USE READ CKD CCWS                88225
         LM    R14,R15,=X'5E00000020000000'  PATTERN READ MULTIPLE
         O     R14,DWADATA   DATA ADDRESS                        88225
         OR    R15,R1        GET (O/P) TRACK CAPACITY            88225
         STM   R14,R15,DWCCOUNT  MAKE FINAL CCW                  88225
         MVI   DWTOGO,BFMRPST  RETURN TO READ MULTIPLE CHECK     88225
         B     TRAKEXCP      READ THE TRACK                      88225
         SPACE 1                                                 88225
TRAKRDML WAIT  ECB=DWECB     WAIT FOR I/O COMPLETION             88227
         CLI   DWECB,X'7F'   NORMAL COMPLETION ?                 88225
         BE    TRAKRDM2      YES; BUILD CCWS                     88225
*        CLI   DWECB,X'41'   OTHER ERROR ?                       88225
*        BNE   TRAKRMFL      TREAT AS FAILURE                    88225
*        CLC   =X'0C40',DWICSW+4  OVERFLOW RECORD ?              88225
*        BNE   TRAKRMFL      NO; DO IT THE HARD WAY              88225
TRAKRMFL INC   NUMRMBAD      UNSUCCESSFUL READ MULTIPLES         88225
TRAKRMBY MVI   DWFLAG,0      RESET                               88225
         TM    DWIOB+2,X'80' COMMAND REJECT ?                    88225
         BZ    *+8           NO; ASSUME OTHER ERROR              88225
         OI    FLAGS,FGNRMCKD  USE SLOW READS FROM NOW ON        88225
         B     TRAKNMRD      REREAD THIS TRACK                   88225
         SPACE 1                                                 88225
TRAKRDM2 L     R5,DWADATA    START OF INPUT BUFFER               88225
         L     R6,DWACOUNT   START OF CCWS TO BE BUILT           88225
         SLR   R7,R7                                             88225
         ICM   R7,3,DWCCOUNT+6  REQUESTED INPUT LENGTH           88225
         SLR   R14,R14                                           88225
         ICM   R14,3,DWICSW+6   LENGTH NOT READ                  88225
         SR    R7,R14        LENGTH READ                         88225
         BM    TRAKRMFL      SHOULD NOT HAPPEN                   88225
         SLR   R9,R9         SET EXPECTED RECORD NUMBER (-1)     88225
         L     R1,=X'40000000'  CMD CHAIN                        88225
         L     R2,=X'1E000000'  READ CKD (CHANGED TO WRITE CKD)  88225
         OR    R2,R5         START OF DATA                       88225
         LA    R0,8          MAKE CONSTANT                       88225
TRAKRMLP LTR   R7,R7         ANY MORE DATA ON TRACK ?            88225
         BM    TRAKRMFL      ERROR                               88225
         BZ    TRAKRMND      END OF CHAIN                        88225
         LA    R9,1(,R9)     NEXT RECORD EXPECTED                88225
         CLM   R9,1,4(R5)    MATCH ?                             88225
         BNE   TRAKRMFL      NO; FAIL                            88225
         CLC   0(4,R5),DWICCHH  RIGHT TRACK ?                    88225
         BNE   TRAKRMFL      NO; FAIL                            88225
         SLR   R14,R14                                           88225
         SLR   R15,R15                                           88225
         IC    R14,5(,R5)    GET KEY LENGTH                      88225
         ICM   R15,3,6(R5)   AND DATA LENGTH                     88225
         LA    R14,8(R14,R15)  GET WRITE LENGTH                  88225
         LR    R3,R14        COPY THE LENGTH                     88225
         OR    R3,R1         ADD THE COMMAND CHAIN BIT           88225
         STM   R2,R3,0(R6)   MAKE THE NEW CCW                    88225
         LTR   R15,R15       ANY DATA LENGTH ?                   88225
         BNZ   *+8           YES                                 88225
         MVI   0(R6),X'12'   SET FAKE READ COUNT FOR EOF         88225
         AR    R6,R0         POINT TO THE NEXT CCW               88225
         AR    R5,R14        NEXT DATA ADDRESS                   88225
         ALR   R2,R14        NEXT DATA ADDRESS IN CCW            88225
         SR    R7,R14        RESIDUAL TRACK LENGTH               88225
         BP    TRAKRMLP      GO FOR MORE                         88225
TRAKRMND MVC   0(8,R6),=X'0300000020000001'  MAKE END OF CHAIN   88225
         INC   NUMRMOK       COUNT SUCCESSFUL READS              88225
         S     R6,DWACOUNT   CURRENT LESS FIRST CCW ADDRESS      88227
         SRL   R6,3          CONVERT TO NUMBER                   88227
         STH   R6,DWNUM      SET NUMBER READ                     88227
         STH   R6,DWUNREAD   SET NUMBER UNREAD                   88227
         CLC   DWICCHH(4),VTOCEND   VTOC TRACK ?                 88227
         BH    TRAKRDOK      NO                                  88227
         CLC   DWICCHH(4),VTOCSTRT  IN VTOC ?                    88227
         BL    TRAKRDOK      NO                                  88227
         MVI   DWFLAG,DWFVTOC  FLAG AS VTOC TRACK                88227
         B     TRAKRDOK      JOIN NORMAL READ COMPLETION         88225
         SPACE 1                                                 88225
TRAKNMRD MVI   DWTOGO,BFRDPST   SET FOR POST-PROCESS AFTER I/O   88225
         MVC   DWICCW,DWARDCNT  READ COUNT CHAIN TO IOBSTART     88225
         CLC   DWICCHH(4),VTOCEND   VTOC TRACK ?
         BH    TRAKEXCP      NO
         CLC   DWICCHH(4),VTOCSTRT  IN VTOC ?
         BL    TRAKEXCP      NO
         MVI   DWFLAG,DWFVTOC  FLAG AS VTOC TRACK
         OC    DWICCHH(4),DWICCHH  MIXED TRACK ?
         BZ    TRAKEXCP      YES; DO THE HARD WAY
         SLR   R7,R7
         IC    R7,NUMDSCB    GET NUMBER OF DSCBS PER TRACK
         STH   R7,DWNUM      SET NUMBER READ
         STH   R7,DWUNREAD   SET NUMBER UNREAD
         L     R8,DWACOUNT   POINT TO NEW CCW CHAIN
         L     R2,=X'1E000000'  SET READ CKD OPCODE
         O     R2,DWADATA    SET FIRST DATA ADDRESS
         L     R3,=X'40000094'  SET COMMAND CHAIN; LENGTH=8+44+96
         LA    R1,0(,R3)     ISOLATE LENGTH
         LA    R0,8          CONSTANT
TRAKVLOP STM   R2,R3,0(R8)   SET NEW CCW
         AR    R2,R1         SET NEW DATA ADDRESS
         AR    R8,R0         SET NEW CCW ADDRESS
         BCT   R7,TRAKVLOP   DO ALL
         SR    R8,R0         BACKSPACE ONE CCW
         MVI   4(R8),0       RESET CHAINING
         MVI   DWTOGO,BFRDATA   SET TO READ DATA CHAIN
         MVC   DWICCW,DWARDATA  READ DATA
         SPACE 1
TRAKEXCP MVI   DWECB,0       CLEAR ECB
         MVI   DWIOB,X'42'   CLEAR RESTART AND ERROR BITS
         EXCP  DWIOB         START I/O
         LM    R0,R10,TRAKSAVE   RESTORE REGISTERS
         BR    R9            RETURN TO CALLER
         SPACE 1
TRAKPCNT WAIT  ECB=DWECB     WAIT FOR COMPLETION
         CLI   DWECB,X'41'   SEE IF ERROR DETECTED
         BE    TRAKPCN8      YES; EXPECTED COMPLETION
         CLI   DWECB,X'7F'   IN RARE CASES
         BE    TRAKPCNF        THE TRACK IS REALLY CRUMMY
         BAL   R14,IOABEND                                      GP99026
TRAKPCN8 CLI   DWIOB+3,X'08'   SEE IF NO RECORD FOUND
         BE    *+8
         BAL   R14,IOABEND                                      GP99026
TRAKPCNF L     R7,DWICSW     GET LAST CCW ADDRESS+8
         LA    R7,0(,R7)        CLEAR HIGH BYTE
         L     R8,DWARDCNT   GET COUNT CHAIN ADDRESS
         SH    R7,=AL2(DWCRDCCW-DWCRDCNT)  ALLOW FOR PREFIX
         SR    R7,R8           SUBTRACT STARTING ADDRESS
         BNM   *+8
         BAL   R14,IOABEND                                      GP99026
         SRL   R7,3            DIVIDE BY 8
         SPACE 1
*        RPS HARDWARE PROBLEM - OS ERROR 'RECOVERY' RESTARTS
*        REQUEST ON SOFT (ECC) ERROR; RESULTS IN MULTIPLE READS
*        OF SAME TRACK.  SETTING 'NO ERROR RECOVERY' FLAGS IN
*        DCBIFLGS AND RETRYING A BAD REQUEST COULD BYPASS THIS
*        AT THE EXPENSE OF I/O TIME.  SOFTWARE CHECK IS FASTER.
*        R9 CODE CHECK REQUIRES RECORD NUMBERS TO BE SEQUENTIAL
*        AND TERMINATES CHAIN IF INVALID RECORD NUMBER FOUND
*
         SLR   R9,R9         CLEAR RECORD NUMBER
         L     R8,DWACOUNT   GET COUNT FIELDS
         L     R2,=X'1E000000'  SET READ CKD OPCODE
         O     R2,DWADATA    SET TO START OF DATA AREA
         L     R1,=X'40000000'  SET COMMAND CHAINING
         LA    R0,8          SET CONSTANT
         LTR   R7,R7         RECORD 1 PRESENT ?
         BNP   TRAKPKIL      NO; JUST TERMINATE THE CHAIN
TRAKPLOP LA    R9,1(,R9)     UP EXPECTED RECORD NUMBER
         CLM   R9,1,4(R8)    RECORD NUMBER IN COUNT FIELD MATCHES ?
         BNE   TRAKPKIL      NO; TERMINATE THE CHAIN
         SLR   R14,R14
         IC    R14,5(,R8)    GET KEY LENGTH
         LH    R15,6(,R8)    GET DATA LENGTH
         LA    R14,8(R14,R15)  LENGTH OF COUNT/KEY/DATA READ
         LR    R3,R14        COPY LENGTH
         OR    R3,R1         ADD COMMAND CHAIN BIT
         STM   R2,R3,0(R8)   REPLACE COUNT FIELD BY CCW
         LTR   R15,R15       ANY DATA LENGTH ?
         BNZ   TRAKPKLN      YES
         MVI   0(R8),X'12'   SET FOR READ COUNT ONLY
TRAKPKLF STH   R0,6(,R8)     SET LENGTH TO COUNT LENGTH (8) ONLY
*        ABOVE FAILS FOR EOF WITH NON-ZERO LENGTH KEY FIELD
TRAKPKLN ALR   R2,R14        MAKE NEXT DATA ADDRESS
         AR    R8,R0         NEXT COUNT FIELD ADDRESS
         BCT   R7,TRAKPLOP   TRY AGAIN
TRAKPKIL MVC   0(8,R8),=X'0300000020000001'  TERMINATE CHANNEL PROGRAM
         BCTR  R9,0
         STH   R9,DWNUM      SAVE NUMBER OF RECORDS ON TRACK
         STH   R9,DWUNREAD   SET UNREAD COUNT
         MVC   DWICCW,DWARDATA  SET TO READ DATA
         MVI   DWTOGO,BFRDATA   SET FOR DATA READ
         B     TRAKEXCP     EXCP AND RETURN TO CALLER
         SPACE 2
TRAKRDAT WAIT  ECB=DWECB
         CLI   DWECB,X'7F'     LOOK GOOD?
         BE    TRAKRDOK      IF GOOD, THEN ALL IS WELL
         CLI   DWECB,X'41'   COMPLETE WITH ERRORS ?
         BE    *+8
         BAL   R14,IOABEND                                      GP99026
         CLC   DWICSW+4(2),=X'0C40'  INCORRECT LENGTH WITHOUT UNIT CHK
         BE    *+8
         BAL   R14,IOABEND                                      GP99026
         OI    DWFLAG,DWFOVER  TURN ON OVERFLOW SWITCH
TRAKRDOK MVI   DWTOGO,BFCOMP    SET TRACK COMPLETE
         LM    R0,R10,TRAKSAVE   RESTORE REGISTERS
         BR    R9            RETURN TO CALLER
         SPACE 1                                                 81264
TRAKSRCH MVI   DWFLAG,0      RESET FLAG                          81264
         MVC   DWICCHH,VTOCSTRT  START SEARCH WITH FORMAT 4      81264
         MVI   DWICCHH+4,0   INCLUDE FMT 4 IN SEARCH             86176
         L     R8,DWACOUNT   USE BUFFER AS WORK SPACE            81264
         ST    R8,DWICCW     START I/O WITH CREATED CHAIN        81264
         MVC   0(16,R8),DWCRDCNT  MOVE BASIC SEARCH ID/TIC       81264
         STCM  R8,7,9(R8)    UPDATE TIC ADDRESS                  81264
         LM    R14,R1,PATSRCH1   GET SECOND CCW PORTION          81264
         ALR   R14,R8        RELOCATE M/T READ COUNT             81264
         ALR   R0,R7         SET USER'S DSN ADDRESS IN SEARCH KEY
         STM   R14,R1,16(R8)                                     81264
         LM    R14,R1,PATSRCH2   GET LAST PORTION OF CCW CHAIN   81264
         ALR   R14,R8        RELOCATE TIC *-16                   81264
         ALR   R0,R8         RELOCATE READ DATA                  81264
         STM   R14,R1,32(R8)   LAST CCW CHAIN                    81264
         MVI   DWTOGO,BFCOMP   SIGNAL BUFFER COMPLETE            81264
         B     TRAKEXCP      I/O AND RETURN                      81264
         SPACE 1
IOABEND  LA    R1,DWIOB
         STCM  R1,7,@VOLDCB+DCBIOBAA-IHADCB  SET IOB ADDRESS FOR DUMPS
         EX    0,*           *****TEMPORARY DUMP*****
         SPACE 1
*---------------------------------------------------------------------*
*   VOLUME CLOSE SUBROUTINE                                           *
*---------------------------------------------------------------------*
         SPACE 1                                                GP02247
         PUSH  USING                                            GP99027
CLOSER   TM    @VOLDCB+DCBOFLGS-IHADCB,DCBOFOPN  DCB OPEN ?
         BZ    CLOSENOP      NO
         BAL   R9,PURGEALL   PURGE ALL ACTIVE BUFFERS           GP99026
         CLOSE MF=(E,OPLST)  CLOSE IT
CLOSENOP ICM   R2,15,DYNTIOT  WAS TIOT MODIFIED ?
         BNMR  R10           NO; RETURN
         TESTAUTH FCTN=1     STILL AUTHORIZED ?
         BXH   R15,R15,0(R10)  NO; TOO BAD
         MODESET KEY=ZERO
         USING TIOELNGH,R2   DECLARE MAPPING FOR TIOENTRY
         MVC   TIOEFSRT(3),DYNTIOT+5  RESTORE OLD UCB
         MVI   DYNTIOT,0     RESET FLAG BIT
         MODESET KEY=NZERO
         BR    R10           RETURN TO CALLER
         POP   USING                                            GP99027
         SPACE 2
PURGEALL ICM   R4,15,BUFFQUE   GET FIRST BUFFER ON ACTIVE QUEUE
         BZR   R9            NONE; RETURN
PURGEALP TM    DWECB,X'40'   COMPLETE ?
         BNZ   PURGEALT      YES
         WAIT  ECB=DWECB     WAIT FOR COMPLETION
PURGEALT MVI   DWTOGO,BFAVAIL  SET BUFFER AVAILABLE
         L     R3,DWCHAIN    GET NEXT CHAIN BUFFER
         MVC   DWCHAIN,BUFFFREE  PLACE ON HEAD OF FREE QUEUE
         ST    R3,BUFFQUE    PLACE NEXT ON HEAD OF ACTIVE
         LTR   R4,R3         SWAP TO NEXT
         BNZ   PURGEALP      TRY AGAIN
         BR    R9            RETURN
         SPACE 1
PURGEDS  ICM   R4,15,BUFFQUE   ANY ACTIVE BUFFERS ?
         BZR   R10           NO; RETURN
PURGEDSP TM    DWFLAG,DWFVTOC  VTOC TRACK ?
         BZ    PURGEDST      NO; PURGE IT
         ICM   R4,15,DWCHAIN  GET NEXT BUFFER
         BNZ   PURGEDSP
         BR    R10           ELSE RETURN
PURGEDST BAL   R9,PURGEBUF   PURGE SPECIFIC BUFFER              GP99026
         B     PURGEDS       RESTART ON TOP, JUST IN CASE
         SPACE 1
PURGEREC LH    R15,DWUNREAD  GET UNREAD COUNT
         SH    R15,=H'1'     SUBTRACT ONE
         STH   R15,DWUNREAD  STASH NEW VALUE BACK
         BPR   R9            RETURN TO CALLER
         BM    PURGEBUF      OOPS ?                              90199
         TM    FLAGS,FGOUT   UPDATE MODE ?                       90199
         BNZR  R9            YES; KEEP THE BUFFER A WHILE        90199
PURGEBUF TM    DWECB,X'40'   POSTED ?
         BNZ   PURGEBUT      YES
         WAIT  ECB=DWECB     WAIT FOR COMPLETION
PURGEBUT MVI   DWTOGO,BFAVAIL  FLAG IT AVAILABLE
         LA    R14,BUFFQUE-(DWCHAIN-BUFFMAP)  MAKE IT LOOK LIKE BUFFER
         SLR   R0,R0         MAKE A CONSTANT
PURGEBUM C     R0,DWCHAIN-BUFFMAP(,R14)  LAST BUFFER ON CHAIN ?
         BER   R9            YES; JUST RETURN
         C     R4,DWCHAIN-BUFFMAP(,R14)  REQUESTED BUFFER ?
         BE    PURGEBUG      YES; GET RID OF IT
         ICM   R14,15,DWCHAIN-BUFFMAP(R14)  GET NEXT BUFFER
         BNZ   PURGEBUM      TRY IT
         BR    R9            NOT ON ACTIVE CHAIN
PURGEBUG MVC   DWCHAIN-BUFFMAP(4,R14),DWCHAIN  UNCHAIN FROM ACTIVE
         MVC   DWCHAIN,BUFFFREE  CHAIN TO FREE BUFFER
         ST    R4,BUFFFREE   PUT ON FREE QUEUE
         BR    R9            RETURN TO CALLER
         EJECT ,
         PUSH  USING                                            GP05120
         DROP  ,                                                GP05120
ABNDEXIT MVI   3(R1),4       IGNORE THE ABEND                   GP05120
         L     R2,4(,R1)     LOAD THE DCB ADDRESS               GP05120
         MVI   EXLST2-@VOLDCB(R2),X'80'  CANCEL THE ABEND EXIT  GP05120
         BR    R14           RETURN                             GP05120
         POP   USING                                            GP05120
         SPACE 2
         LTORG
         SPACE 1
*---------------------------------------------------------------------*
*        CONSTANTS AND DATA AREA
*---------------------------------------------------------------------*
         PRINT NOGEN
         ORG   *-16                                              81264
PATSRCH0 DS    2D            ROOM FOR SEARCH ID/TIC              81264
PATSRCH1 CCW   X'92',PATSDAT+96-PATSRCH0,X'40',8  M/T READ COUNT 81264
         CCW   X'29',0,X'40',44                SCH ID=USER'S DSN 81264
PATSRCH2 CCW   X'08',PATSRCH1-PATSRCH0,0,0     TIC *-16          81264
         CCW   X'06',PATSDAT-PATSRCH0,0,96     READ DSCB DATA    81264
PATSDAT  DS    0CL8          DSCB DATA / COUNT FIELD             81264
         SPACE 1                                                 81264
PATDCB   DCB   DDNAME=X,DSORG=PS,MACRF=(E),DEVD=DA,RECFM=F
PATDCBL  EQU   *-PATDCB      LENGTH OF PATTERN
PATMLIMT DC    A(12*1024,2048*1024)  GETMAIN 12K TO 2M
PATMLIST GETMAIN VC,LA=PATMLIMT,MF=L
PATMLSTL EQU   *-PATMLIST
ZEROES   DC    XL8'0',XL2'0'
         SPACE 2
FSAWORK  FSAWORK ,           RESIDENT WORK AREA
SAVEAREA DC    18F'0'
DB       DS    D             WORK AREA
DB2      DS    D             DITTO
CALLR0   DS    0F            USER'S CALL PARM
         DS    XL3             RESERVED
CALLMODE DS    X               FUNCTION REQUESTED
CALLR1   DS    F             PARAMETER ADDRESS
RETCODE  DS    F     1/3     RETURN CODES (R15/R0)
RETR0    DS    F     2/3
RETR1    DS    F     3/3
@SERVICE DC    A(0)          ADDRESS OF @SERVICE ROUTINE
GETMBUFA DC    A(0)          1 OF 2
GETMBUFL DC    A(0)          2 OF 2
GETMFREE DC    A(0)          AMOUNT TO LEAVE FREE FOR CALLER
GETMKEEP DC    A(0)          MAXIMUM TO GETMAIN OR 0             82053
GETMLIMT DC    A(0,0)        MIN/MAX TO GETMAIN
GETMLIST GETMAIN VC,LA=GETMLIMT,A=GETMBUFA,MF=L
NUMEXTS  DC    H'0'          NUMBER OF EXTENTS IN DATASET
DYNTIOT  DC    A(0,0)        +A(VOLMOUNT DD IN TIOT), -USED FOR OPEN
NUMDATA  DC    H'0'          TRACK CAPACITY
NUMTRKS  DC    H'0'          TRACKS/PACK
NUMCYL   DC    H'0'          CYLINDERS/PACK
NUMTRK   DC    H'0'          TRACKS/CYLINDER
NUMPDE   DC    H'0'          DIRECTORY BLOCKS/TRACK
NUMBUFFS DC    H'0'          NUMBER OF I/O BUFFERS GOTTEN
BUFFQUE  DC    A(0)          HEAD OF ACTIVE BUFFER QUEUE
BUFFFREE DC    A(0)          HEAD OF EMPTY BUFFER QUEUE
TRAKSAVE DS    11A           TRACK I/O SAVE AREA
SUBSAVE  DS    11A           SUBROUTINE SAVE AREA
         ORG   SUBSAVE       SAVE SOME SPACE                    GP09160
         MAPVOLRD DSECT=NO   MAP 'TRACK' FUNCTION RETURN DATA   GP09160
         ORG   ,                                                GP09160
NUMRMOK  DS    F             CORRECT READ MULTIPLES              88225
NUMRMBAD DS    F             NUMBER OF FAILED READ MULTIPLES     88225
VTOCSTRT DC    XL5'0'        FORMAT 4 ADDRESS
VTOCEND  DC    XL5'0'        VTOC END ADDRESS
NUMDSCB  EQU   VTOCEND+4,1,C'X'  DSCBS PER TRACK
VOLSER   DC    CL6' '        VOLSER OF CURRENT VOLUME
FLAGS    DC    X'00'         PROCESSING FLAGS
FGOPEN   EQU   X'80'           VTOC IS OPEN
FGVOLUME EQU   X'40'           DEB IS OPEN FOR ENTIRE VOLUME
FGNRMCKD EQU   X'02'           READ MULTIPLE FAILED ON VOLUME    88225
FGOUT    EQU   X'01'           DEB SET FOR UPDATE MODE           85350
MODEFG   DC    X'00'         VOLUME PROCESSING MODE
MFVTOC   EQU   X'80'           VTOC ONLY
MFPDS    EQU   X'40'           VTOC + DIRECTORIES
MFONE    EQU   X'20'           FIRST TRACK OF DSN ONLY
MFOUT    EQU   X'01'           OPEN DCB/DEB FOR UPDATE           85350
DSNFG    DC    X'00'         DATASET SEQUENCE SWITCH
DFINIT   EQU   X'80'           FIRST READ COMPLETED
DFPDS    EQU   X'40'           DIRECTORY PROCESSING INITIALIZED
DFEOF    EQU   X'20'           EOF SIGNALLED
DFDSCB   EQU   X'10'           DSCB IN DS1 BUFFER
DFDSCB3  EQU   X'08'           DSCB 3 IN DS3 BUFFER
DFDSEOF  EQU   X'04'           END-FILE RETURNED ON DSCB CHAIN
DFDON5   EQU   X'02'           FORMAT 5 CHAIN DONE
DFDON6   EQU   X'01'           FORMAT 6 CHAIN DONE
CURVTOC  DS    XL5           CCHHR OF LAST DSCB READ
CHAINFMT DS    XL5           ADDRESS OF DSCB CHAIN
DSNCCHH  DS    XL5           CCHHR FOR NEXT DATASET READ
DSNTTR   DS    0F,XL3,X      TTR FOR NEXT DATASET READ
PDETTR   DS    0F,XL3,X      DIRECTORY TTR
PDEBXLE  DS    3A(0)         BXLE VALUES FOR DIRECTORY SCAN
PDEBLOCK DS    XL256         CURRENT DIRECTORY BLOCK
         SPACE 1
@VOLDCB  DCB   DDNAME=X,DSORG=PS,MACRF=(E),DEVD=DA,RECFM=F,EXLST=EXLST
EXLST    DC    0F'0',X'07',AL3(INFMJFCB)    1/2
EXLST2   DC    X'91',AL3(ABNDEXIT)          2/2
OPLST    DC    0F'0',X'80',AL3(@VOLDCB)
         SPACE 1
EXTENTS  DS    16XL12'0'     DATASET EXTENTS
         SPACE 1
         DS    0D
         IEFJFCBN ,          EXPAND JFCB
         SPACE 1
         IECSDSL1 1          EXPAND FORMAT 1 DSCB
LOCDS1   DS    XL5           ADDRESS OF FORMAT 1
         SPACE 1
         IECSDSL1 3          EXPAND FORMAT 3 DSCB
LOCDS3   DS    XL5           ADDRESS OF FORMAT 2/3
         SPACE 1
SAVEND   EQU   *             END OF GOTTEN WORK AREA
FSALEN   EQU   *-FSAWORK     LENGTH TO GETMAIN
         SPACE 1
         MAPEXTNT ,          MAP ONE DSCB1 / DSCB3 EXTENT
EXTSIZE  DS    XL2           TRACKS IN THIS EXTENT
EXTLEN   EQU   *-MAPEXTNT    LENGTH WITH SIZE ADD-ON
         SPACE 2
BUFFMAP  DSECT ,             I/O BUFFER AND WORK AREA MAP
DWECB    DS    F             I/O ECB
DWTOGO   DS    X             WHERE-TO-GO FLAG
BFAVAIL  EQU   0             BUFFER AVAILABLE
BFRDPST  EQU   1             READ COUNTS STARTED
BFRDATA  EQU   2             READ DATA POST-PROCESSING REQUIRED
BFCOMP   EQU   3             BUFFER DATA COMPLETE
BFSEARCH EQU   4             SEARCH FOR DSN KEY                  81264
BFEXCP   EQU   5             JUST ISSUE EXCP                     85350
BFMRPST  EQU   6             READ MULTIPLE STARTED               88225
DWFLAG   DS    X             PROCESSING FLAG
DWFVTOC  EQU   X'80'           VTOC TRACK
DWFOVER  EQU   X'02'           OVERFLOW RECORD
DWNUM    DC    H'0'          NUMBER OF RECORDS ON TRACK
DWUNREAD DC    H'0'          NUMBER OF UNREAD RECORDS
DWCHAIN  DS    A             NEXT BUFFER FOR SEQUENTIAL I/O
         DS    0D            IOB ALIGN
DWIOB    DS    X'42',AL3(0)  IOBFLAGS/IOBSENSE
DWIECBP  DS    A(DWECB)      IOB ECB
DWICSW   DS    2A(0)         IOB CSW
DWICCW   DS    A             IOBSTART
DWIDCB   DS    A(0,0,0)      IOBDCB  (@VOLDCB)
DWIMBB   DS    XL3'0'        MBB PORTION OF IOBSEEK
DWICCHH  DS    XL5'0'        CCHHR PORTION OF SEEK
DWARDCNT DS    A(DWCRDCNT)   ADDRESS OF READ COUNT CHAIN
DWARDATA DS    A(DWCRDATA)   ADDRESS OF READ CKD CHAIN
DWACOUNT DS    A(DWCCOUNT)   ADDRESS OF COUNT FIELDS
DWADATA  DS    A(DWCDATA)    ADDRESS OF DATA FIELD
DWR0DATA DS    XL8           R0 DATA FIELD
DWCRDCNT CCW   X'31',DWICCHH,X'40',5   SEARCH ID EQUAL
         CCW   X'08',DWCRDCNT,0,0      TIC *-8
         CCW   X'06',DWR0DATA,X'40',8  READ R0 DATA
DWCRDCCW DC    (NUMCCWS)XL8'0'         READ COUNT...
DWCRDATA CCW   X'31',DWICCHH,X'40',5   SEARCH ID EQUAL
         CCW   X'08',DWCRDATA,0,0      TIC *-8
DWCRDAT0 CCW   X'06',DWR0DATA,X'40',8  READ/WRITE R0 DATA
DWCCOUNT DC    (NUMCCWS+1)XL8'0'    COUNT FIELDS/READ-WRITE CCWS
DWCDATA  DS    0D            DATA (L'TRACKSIZ+8)
         SPACE 2
         PRINT NOGEN
CVTDSECT DSECT ,
         CVT   DSECT=YES
         SPACE 1
         IHACDE ,
         SPACE 1
UCB      DSECT ,
         IEFUCBOB ,
         SPACE 1
         IKJTCB ,
         SPACE 1
TIOT     DSECT ,
         IEFTIOT1 ,
         SPACE 1
         IECSDSL1 4          EXPAND FORMAT 4 DSCB
         SPACE 1
         DCBD  DSORG=PS,DEVD=DA
         SPACE 1
         IEZDEB ,
         SPACE 1
         YREGS ,                                                GP09160
         END
