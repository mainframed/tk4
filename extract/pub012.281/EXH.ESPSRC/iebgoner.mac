GONE     TITLE 'I E B G O N E R  ***  PRINT CONVERSION'
         MACRO ,
&NM      VERB  &WORD,&BITS,&STR,&MIN=3,&FLAG=PARMFLAG
         LCLA  &I
&I       SETA  K'&WORD
         AIF   ('&STR' NE '').HAVESTR
&NM      DC    AL1(&I,&MIN,&BITS,&FLAG-PARMFLAG),AL2(0),CL&I'&WORD '
         MEXIT ,
.HAVESTR ANOP  ,
&NM DC AL1(&I,&MIN,&BITS,&FLAG-PARMFLAG),AL2(&STR-IEBGONER),CL&I'&WORD'
         MEND  ,
         COPY  OPTIONGB
         SPACE 1                                                GP99320
         GBLC  &PRTSET                                          GP99320
&PRTSET  SETC  'LEXMARK'     COMPILE FOR LEXMARK WITH PC-8 SET  GP99320
&PRTSET  SETC  'HP8100'      COMPILE FOR HP LASER JET 8100      GP99320
         SPACE 1
         PRINT NOGEN
***********************************************************************
**                                                                   **
**  IEBGONER : THIS ROUTINE COMPENSATES FOR INCORRECT REMOTE PRINT.  **
**  INPUT HAS ALL CARRIAGE CONTROLS REMOVED, WITH SIMULATION OF THE  **
**  DESIRED SPACING, AND SOME (POOR) RESOLUTION OF OVERPRINTING.     **
**  OUTPUT FILE IS FORCED TO VB, LRECL=208, BLKSIZE=0                **
**                                                                   **
**  BACKLEVELED FOR ASMXF                                  GP12047   **
**                                                                   **
***********************************************************************
IEBGONER PGMHEAD ZERO12,BASE=R12,BNDRY=PAGE,PARM=R9             GP12047
         SPACE 1
MGNSIZE  EQU   5             SIZE OF LEFT MARGIN (INDENT OPTION)
NUMSIZE  EQU   6             LENGTH OF NUMBERING FIELD          GP99238
NUMDENT  EQU   NUMSIZE+2     NUMBERING+MARGIN                   GP99238
         SPACE 1
         MVI   MAXLINES+L'MAXLINES-1,61  SET PRINTER WRAP COUNT GP99320
         LA    R9,0(,R9)     CLEAN IT
         LTR   R9,R9         ANY PARM FIELD SUPPLIED?
         BZ    DEFPARM       NO
         L     R9,0(,R9)     ANY POINTER?
         LA    R9,0(,R9)     CLEAN UP
         LTR   R9,R9         ANY ?
         BZ    DEFPARM
         LH    R8,0(,R9)     GET PARM LENGTH
PARMLTST LTR   R8,R8         ANY?
         BNP   DEFPARM
PARMLOOP LM    R1,R3,PARMBXLE
         USING VERBSECT,R1   DECLARE IT
PARMWORD ICM   R2,1,VBLLEN   GET LENGTH OF RESERVED WORD
         BZ    BADPARM       OOPS
         LR    R7,R2         SAVE FULL LENGTH
PARMATST CR    R7,R8         SAME AS PARM ?
         BCTR  R7,R0         (FIRST SET FOR EXECUTE)
         BH    PARMNMAT      NO
         BE    PARMTEST      EXACT - TEST
         LA    R14,3(R7,R9)  END OF WORD (IF MATCH)
         CLI   0(R14),C','   ENDING COMMA?
         BNE   PARMNMAT      NO; WON'T MATCH
PARMTEST EX    R7,PARMCLC    MATCH ?
         BE    GOTPARM       YES
*FAILS*  B     PARMBUMP      (LENGTH MATCHED; TEST ANOTHER)
PARMNMAT CLM   R7,1,VBLMINLN NOT TOO SHORT?
         BNL   PARMATST
PARMBUMP LA    R2,VBLSIZE(,R2)  ADD OVERHEAD TO NEXT ENTRY
         BXLE  R1,R2,PARMWORD  TRY NEXT ONE
         CLC   =C'LPP',2(R9)  POSSIBLE MAXLINES OVERRIDE?       GP99320
         BNE   PARMCOMA      NO; LOOK FOR WIDOWED COMMA         GP99320
         SR    R14,R14                                          GP99320
         LA    R15,C'0'      DEFAULT - ZERO                     GP99320
         LA    R0,3          MAXIMUM DIGIT COUNT                GP99320
         LA    R9,3(,R9)     SKIP LPP                           GP99320
         SH    R8,=H'3'      AND ADJUST LENGTH TO MATCH         GP99322
         BNP   BADPARM       LPP WITHOUT COUNT IS BAD           GP99322
PARMLPP  CLI   2(R9),C'0'    DIGIT?                             GP99320
         BL    PARMLPPD      NO; STOP NOW                       GP99320
         SLDL  R14,8         MAKE ROOM                          GP99320
         IC    R15,2(,R9)    LOAD IT                            GP99320
         LA    R9,1(,R9)                                        GP99320
         BCT   R8,*+8                                           GP99320
         B     PARMLPPD      SKIP IF INPUT EXHAUSTED            GP99320
         BCT   R0,PARMLPP                                       GP99320
PARMLPPD STM   R14,R15,DB                                       GP99320
         PACK  DB2,DB                                           GP99320
         CVB   R0,DB2                                           GP99320
         CH    R0,=H'30'                                        GP99320
         BL    BADPARM                                          GP99320
         CH    R0,=H'255'                                       GP99320
         BH    BADPARM                                          GP99320
         STH   R0,MAXLINES                                      GP99320
PARMCOMA LTR   R8,R8         ANY MORE?                          GP99322
         BNP   PARMLTST      NO                                 GP99322
         CLI   2(R9),C','    TRAILING COMMA?                    GP99322
         BNE   BADPARM       NO; ERROR                          GP99322
         LA    R9,1(,R9)                                        GP99322
         BCTR  R8,0                                             GP99322
         B     PARMLTST      LOOK FOR ANOTHER PARAMETER         GP99320
BADPARM  OI    CONDCODE+L'CONDCODE-1,8  SET ERROR               GP99322
         WTO   'IEBGONER - UNRECOGNIZED PARM FIELD',ROUTCDE=7
         B     DEFPARM
PARMCLC  CLC   VBLVERB(0),2(R9)  COMPARE TABLE WORD TO PARM FIELD
         SPACE 1
PARMBXLE DC    A(PARM1,2,PARMN)                                 GP99238
PARM1    VERB  LANDSCAPE,PFL132,HPL132     LAND  132*66
         VERB  L132,PFL132,HPL132          LAND  132*66
         VERB  PORT,PFP80,HPP80            PORT   61*80
         VERB  PORT132,PFP132,HPP132       PORT   61*132
         VERB  P132,PFP132,HPP132          PORT   61*132
         VERB  PORT80,PFP80,HPP80,MIN=6    PORT   61*80
         VERB  LIST,PFP80,HPP80            PORT   61*80
         VERB  PORT72,PFP72,HPP72,MIN=6    PORT   61*72
         VERB  MEMO,PFP72,HPP72            PORT   61*72
         VERB  MANUAL,PFP72,HPP72          PORT   61*72
         VERB  TWOUP,PFP132B,HPP132B       PORT  125*132
         VERB  TRANSLATE,0
         VERB  SPACES,PFMGN,FLAG=PARMFLG2    LEAVE LEFT MARGIN  GP99238
         VERB  INDENT,PFMGN,FLAG=PARMFLG2    LEAVE LEFT MARGIN  GP99238
         VERB  MARGIN,PFMGN,FLAG=PARMFLG2    LEAVE LEFT MARGIN  GP99238
         VERB  NUMBER,PFNUM,FLAG=PARMFLG2    PREPEND SEQUENCE NUMBER
         VERB  SEQUENCE,PFNUM,FLAG=PARMFLG2  PREPEND SEQUENCE NUMBER
         VERB  TRAY,PFTREY,FLAG=PROFLAGS   FEED FROM LEXMARK TRAY 3
         VERB  TREY,PFTREY,FLAG=PROFLAGS   FEED FROM LEXMARK TRAY 3
         VERB  NOTRANSLATE,PFNTRAN,MIN=4
PARMN    VERB  MANUAL,PFP72,HPP72          PORT   61*72
         SPACE 1
GOTPARM  SR    R14,R14
         IC    R14,VBLFOFF   GET FLAG BYTE OFFSET
         LA    R14,PARMFLAG(R14)  POINT TO FLAG
         OC    PARMFLAG-PARMFLAG(1,R14),VBLFLAG  SET FLAG
         SR    R14,R14
         ICM   R14,3,VBLADDR  ANY FORM OFFSET?
         BZ    GOTPART       NO
         LA    R14,IEBGONER(R14)  RELOCATE
         ST    R14,FORMADR   ADDRESS OF CONTROL STRING
GOTPART  LA    R9,2(R7,R9)   SKIP OVER PARM WORD AND COMMA
         BCTR  R8,0          ADJUST FOR COMMA
         BCTR  R8,0          ADJUST FOR EXEC LENGTH
         SR    R8,R7         ADJUST FOR WORD
         BP    PARMLOOP      TRY NEXT OPERAND
         DROP  R1            DITCH VERB ENTRY MAPPING
         SPACE 1
DEFPARM  MVC   BUFFER,SPACES    CLEAR WORK SPACE
         MVC   CONBUFF,SPACES   CLEAR WORK SPACE
         TM    PARMFLAG,PFP132B  TWO-UP PORTRAIT ?              GP98322
         BNO   *+8           NO                                 GP98322
         MVI   MAXLINES+L'MAXLINES-1,125  SET TWO-PAGE COUNT    GP98322
         ZAP   SEQNUM,=P'1'  INITIALIZE OUTPUT LINE SEQUENCE    GP99238
         TM    PARMFLG2,PFNUM  NUMBERING REQUESTED?             GP99238
         BZ    NUMPARM       NO                                 GP99238
         NI    PARMFLG2,255-PFMGN  CONFLICTS WITH INDENT        GP99238
         MVI   RADJ+L'RADJ-1,NUMDENT  SET INDENTATION VALUE     GP99238
NUMPARM  TM    PARMFLG2,PFMGN  LEFT MARGIN ?                    GP99238
         BZ    NONINDNT      NO                                 GP99238
         MVI   RADJ+L'RADJ-1,MGNSIZE  SET INDENTATION VALUE     GP99238
NONINDNT LA    R14,BUFFER                                       GP99238
         LA    R15,L'BUFFER
         LH    R0,RADJ       SET LEFT MARGIN SIZE               GP99238
         AR    R14,R0        LEFT LEFT SPACE
         SR    R15,R0        ADJUST MAX LENGTH
         STM   R14,R15,BUFFPTR                                  GP99238
         OPEN  MF=(E,OCINLIST)  OPEN SYSUT1 FILE FOR INPUT
         TM    SYSUT1+DCBOFLGS-IHADCB,DCBOFOPN  OK?
         BZ    FAILINOP      NO
*OLD*SYSUT1     USING IHADCB,SYSUT1
*OLD*SYSUT2     USING IHADCB,SYSUT2
*OLD*    MVC   SYSUT2-IHADCB+DCBRECFM,SYSUT1-IHADCB+DCBRECFM
*OLD*    NI    SYSUT2-IHADCB+DCBRECFM,255-DCBRECCA-DCBRECCM  NO CC OUT
*OLD*    MVC   SYSUT2-IHADCB+DCBLRECL(2),SYSUT1-IHADCB+DCBLRECL
*OLD*    MVC   SYSUT2-IHADCB+DCBBLKSI(2),SYSUT1-IHADCB+DCBBLKSI
         MVI   SYSUT2-IHADCB+DCBRECFM,DCBRECV+DCBRECBR  RECFM=VB
         MVC   SYSUT2-IHADCB+DCBLRECL(2),=Y(208)  MAX 204 + 4
         LA    R0,4          SET U INDEX
         TM    SYSUT1-IHADCB+DCBRECFM,DCBRECU RECFM=U ?
         BO    NOTRECV       YES
         SR    R0,R0         SET F INDEX
         TM    SYSUT1-IHADCB+DCBRECFM,DCBRECF RECFM=F ?
         BZ    SETRECV       NO; MUST BE V OR D
*OLD*    LH    R6,SYSUT2-IHADCB+DCBLRECL
*OLD*    LH    R5,SYSUT2-IHADCB+DCBBLKSI
*OLD*    SLR   R4,R4
*OLD*    DR    R4,R6         GET BLOCKING FACTOR
*OLD*    BCTR  R6,0          LRECL LESS ONE (NO CC)
*OLD*    STH   R6,SYSUT2-IHADCB+DCBLRECL
*OLD*    MR    R4,R6         LRECL*BLKFACT
*OLD*    STH   R5,SYSUT2-IHADCB+DCBBLKSI  UPDATE
         B     NOTRECV       SKIP AROUND
SETRECV  LA    R0,8          SET V INDEX
         MVI   OFFSET+L'OFFSET-1,4 MAKE RDW LENGTH
NOTRECV  SR    R1,R1         SET ASA
         MVI   OFFCC+L'OFFCC-1,1  SET FOR CARRIAGE CONTROL LENGTH
         MVI   SSCHAR,C' '   SET FOR SINGLE SPACE
         TM    SYSUT1-IHADCB+DCBRECFM,DCBRECCA ASA CODE?
         BNZ   SETCCINX      YES; SET IT
         LA    R1,4          SET MCC
         MVI   SSCHAR,X'09'  SET FOR SINGLE SPACE
         TM    SYSUT1-IHADCB+DCBRECFM,DCBRECCM MCC CODE?
         BNZ   SETCCINX      YES
         MVI   OFFCC+L'OFFCC-1,0  NO CARRIAGE CONTROL LENGTH
         LA    R1,8          ELSE JUST COPY
         MVI   SSCHAR,C' '   SET FOR BLANK 'CONTROL' CHARACTER
SETCCINX STH   R1,BIXCC      SAVE INDEX
         STH   R0,BIXFM      SET RECFM INDEX
         OPEN  MF=(E,OCLIST)  OPEN OUTPUT (SKIPS INPUT)
         TM    SYSUT2+DCBOFLGS-IHADCB,DCBOFOPN  OK?
         BZ    FAILOUOP      NO
         TM    PARMFLAG,PFLAND+PFPORT ANY CONTROL SEQUENCES REQUIRED?
         BZ    PRESET        NO
         L     R4,FORMADR    ADDRESS OF FORMATTING TEXT
         BAS   R14,PUTSEQ    ISSUE CONTROL REQUEST
         B     INITPAGE      MAKE REST OF PAGE BLANK (CAN'T CLEAR?)
PRESET   DS    0H
         SPACE 1
READLOOP GET   SYSUT1        GET A RECORD
         LA    R6,0(,R1)     COPY ADDRESS
         LH    R7,SYSUT1-IHADCB+DCBLRECL
         AH    R6,OFFSET     SKIP RDW
         SH    R7,OFFSET     ADJUST LENGTH
         BP    READNSHT      NOT SHORT?
         LA    R6,SPACES
         LA    R7,2
READNSHT MVC   CURRCC,0(R6)  MOVE PUTATIVE CARRIAGE CONTROL
         AH    R6,OFFCC      ALLOW FOR IT
         SH    R7,OFFCC      ADJUST LENGTH
         BP    READNNUL
         LA    R6,SPACES     POINT TO BLANK RECORD
         LA    R7,1          AND MINIMUM LENGTH
READNNUL L     R15,BUFFPTR+4 LONGER THAN BUFFER?
         CR    R7,R15        CHECK IT
         BNH   READLOOT      NOT TOO LONG
         LR    R7,R15        TRUNCATE IT
READLOOT LH    R15,BIXCC     GET CONTROL CHARACTER BRANCH INDEX
         B     *+4(R15)      BRANCH TO PROCESSOR
         B     HANDLASA      ASA CODE
         B     HANDLMCC      MACHINE CONTROL CODES
*NEXT*   B     HANDLNON      NONE - COPY, WITH POSSIBLE TRANSLATE
         SPACE 1
HANDLNON BAS   R9,OVERMCC    OUTPUT SAME AS INPUT, BUT MUST STACK
         BAS   R9,PUTPREV    PRINT RECORD IN BUFFER (POSS. TRANSLATE)
         B     READLOOP      AND GET NEXT RECORD
         SPACE 1
HANDLMCC TM    PROFLAGS,PFONE  FIRST TIME EVER?
         BNZ   HANDLMCB      NO
         OI    PROFLAGS,PFONE  SHOW FIRST RECORD PROCESSED
         CLI   CURRCC,X'8B'  EJECT WITHOUT WRITE?
         BE    READLOOP      YES; DONE HERE
HANDLMCB SR    R2,R2
         TRT   CURRCC,MCCTABLE  FIND OUT HOW TO TREAT THIS
         L     R8,MCCINC(R2)  GET SPACE INCREMENT
         LTR   R2,R2         IGNORE THIS COMPLETELY ?
         BZ    READLOOP      YES; BYE
         TM    CURRCC,X'03'  WRITE TEXT PRESENT ?
         BO    HANDLMCS      NO
         MVC   CURRCC,SSCHAR  FORCE SINGLE SPACE
         BAS   R9,OVERMCC    MERGE WITH PREVIOUS BUFFER
HANDLMCS SH    R8,=H'1'      GET RESIDUAL SKIP
         BM    READLOOP      NONE
         BAS   R9,PUTPREV    WRITE STACKED TEXT
         CH    R8,=H'3'      MORE THAN A COUPLE?
         BH    MCCEJECT      YES; CONVERT EJECT
         LTR   R8,R8         WRITE/SPACE?
         BZ    READLOOP      YES; DONE HERE
         SPACE 1
PRESPMCC LA    R4,SPACER
SPACEMCC BAS   R14,PUTCON    WRITE A BLANK LINE
BUMPSMCC BCT   R8,SPACEMCC   REPEAT UNTIL DONE
         B     READLOOP      PROCESS NEXT RECORD
         SPACE 1
MCCEJECT TM    PROFLAGS,PFONE  FIRST TIME?
         BZ    READLOOP      YES; IGNORE EJECT
INITPAGE LH    R8,MAXLINES   GET MAXIMUM LINES ON PAGE
         SH    R8,CURRLINE   LESS CURRENT VALUE
         BP    PRESPMCC
         B     READLOOP      EJECT ON TOP - IGNORE
         SPACE 1
HANDLASA TM    PROFLAGS,PFONE  FIRST TIME EVER?
         BNZ   HANDLASB      NO
         OI    PROFLAGS,PFONE  SHOW FIRST RECORD PROCESSED
         MVI   CURRCC,C' '   FORCE SINGLE SPACE THE FIRST TIME
HANDLASB SR    R2,R2         CLEAR SKIP VALUE
         TRT   CURRCC,ASATABLE
         CLM   R2,1,ASATABLE+C'+'  OVERPRINT REQUEST?
         BE    OVERPRNT      YES
         L     R2,ASAINC(R2) GET ASA INCREMENT
         BAS   R9,PUTPREV    CLEAR OLD RECORD
         CH    R2,=H'3'      EJECT ?
         BH    ASAEJECT      YES; SPECIAL HANDLING
         SH    R2,=H'1'      ALLOW FOR CURRENT LINE
         BNP   STACKASA      SINGLE SPACE - STACK
         SPACE 1
PRESPASA LA    R4,SPACER
SPACEASA BAS   R14,PUTCON    WRITE A BLANK LINE
BUMPSASA BCT   R2,SPACEASA   REPEAT UNTIL DONE
         B     STACKASA      STACK THIS RECORD
         SPACE 1
ASAEJECT LH    R2,MAXLINES   GET MAXIMUM LINES ON PAGE
         SH    R2,CURRLINE   LESS CURRENT VALUE
         BP    PRESPASA
         SPACE 1
STACKASA LM    R14,R15,BUFFPTR
         STH   R7,BUFFLEN    SAVE DATA LENGTH
         ICM   R7,8,SPACES   PAD SHORT RECORD WITH BLANKS
         MVCL  R14,R6        SAVE THIS RECORD
         OI    PROFLAGS,PFHOLD  SHOW RECORD IN BUFFER
         B     READLOOP      AND GET NEXT RECORD
         SPACE 1
OVERPRNT TM    PROFLAGS,PFHOLD  RECORD STACKED?
         BZ    STACKASA      NO; WRITE SINGLE-SPACED
         BAS   R9,OVERCOM
         B     READLOOP
         SPACE 1
OVERMCC  TM    PROFLAGS,PFHOLD  PRIOR TEXT?
         BNZ   OVERCOM       YES; MERGE
         LM    R14,R15,BUFFPTR
         MIN   R15,(R7)      SAVE SHORTER OF DATA OR BUFFER LENGTH
         STH   R15,BUFFLEN   SAVE LENGTH
         ICM   R7,8,SPACES   PAD SHORT RECORD WITH BLANKS
         MVCL  R14,R6        SAVE THIS RECORD
         OI    PROFLAGS,PFHOLD  SHOW RECORD IN BUFFER
         BR    R9
         SPACE 1
OVERCOM  OI    PROFLAGS,PFHOLD  RECORD STACKED NOW
         LM    R14,R15,BUFFPTR
         MIN   R15,(R7)      SHORTER OF DATA OR BUFFER LENGTH
         LA    R0,1          SET INCREMENT
         CH    R15,BUFFLEN   LONGER THAN PREVIOUS TEXT ?
         BNH   OVERLOAD      NO
         STH   R15,BUFFLEN   UPDATE THE LENGTH
         B     OVERLOAD      NO
OVERLOOP AR    R14,R0        SKIP ONE
         AR    R6,R0           DITTO
         SR    R15,R0        RESIDUAL LENGTH
         BNPR  R9            ALL DONE
OVERLOAD CLI   0(R14),C' '   BLANK IN BUFFER?
         BNE   OVERLOOP      NO; TRY NEXT
         MVC   0(1,R14),0(R6)  OVERLAY BLANK BY WHAT-EVER
         B     OVERLOOP      TRY NEXT ONE
         SPACE 2
PUTPREV  TM    PROFLAGS,PFHOLD  STACKED RECORD?
         BZR   R9            NO; JUST RETURN
         STM   R0,R15,SAVETWO  WRITE BUFFER
         LA    R4,BUFFER
         LH    R5,BUFFLEN
         B     PUTCOMM
         SPACE 1
PUTTRANS STM   R0,R15,SAVETWO  WRITE BUFFER
PUTCOMM  AH    R5,RADJ       ALLOW FOR MARGIN                   GP99238
         TM    PARMFLAG,PFNTRAN  INHIBIT TRANSLATE?             GP99238
         BNZ   PUTBCOM       YES; LEAVE IT BEE
         LR    R15,R5        LENGTH
         SH    R15,=H'1'     LESS EX
         BM    PUTBCOM
         EX    R15,PUTBTRAN  TRANSLATE
         B     PUTBCOM
PUTBTRAN TR    0(0,R4),HPTABLE  SANITIZE
         SPACE 1
PUTBIFF  STM   R0,R15,SAVETWO  WRITE RECORD IN R4/R5
         B     PUTBNMGN      SKIP NUMBER ON CONTROL CARD        GP99335
PUTBCOM  TM    PARMFLG2,PFNUM  SEQUENCE THE OUTPUT?             GP99238
         BZ    PUTBNMGN      NO                                 GP99238
         MVC   DB,=X'F020202020202120'                          GP99238
         ED    DB,SEQNUM     PRETTIFY THE SEQUENCE              GP99238
         AP    SEQNUM,=P'1'  SET FOR NEXT TIME                  GP99238
         MVC   0(NUMSIZE,R4),DB+8-NUMSIZE  MOVE SEQUENCE NUMBER GP99238
PUTBNMGN LH    R15,BIXFM     GET RECFM INDEX                    GP99238
*OLD*    B     *+4(R15)      BRANCH BY RECFM INDEX
*OLD*    B     PUTBRECF      F
*OLD*    B     PUTBRECU      U
*NEXT*   B     PUTBRECV      V
PUTBRECV LA    R0,4          RDW SIZE
         SR    R4,R0         SPACE TO RDW
         AR    R5,R0         ADJUST LENGTH
         STH   R5,0(,R4)     MAKE RDW
PUTBRECU STH   R5,SYSUT2-IHADCB+DCBLRECL
PUTBRECF PUT   SYSUT2,(R4)   WRITE THE RECORD
         LA    R0,BUFFRDW    IS THIS THE BUFFER ?
         CR    R0,R4         THAT WE JUST WROTE?
         BNE   PUTBUFCL      NO
         MVC   4(L'BUFFER,R4),SPACES  CLEAR WORK SPACE
         NI    PROFLAGS,255-PFHOLD  RESET IT
PUTBUFCL LM    R0,R15,SAVETWO
         INCH  CURRLINE,WORK=R15
         SH    R15,MAXLINES
         BLR   R9
         STH   R15,CURRLINE  ZERO COUNT AGAIN
         BR    R9            RETURN TO CALLER
         SPACE 1
PUTSEQ   TM    PROFLAGS,PFTREY  TRAY FEED TO BE ADDED ?
         BZ    PUTCON        NO; DO NORMALLY
         STM   R0,R15,SAVETRE
         MVC   CONBUFF,SPACES  CLEAR
         SLR   R5,R5
         IC    R5,0(,R4)
         LR    R8,R4         SAVE CONTROL SEQUENCE
         LA    R4,CONBUFF    POINT TO CONTROL BUFFER
         MVC   0(2,R4),1(R8)  MOVE HP RESET SEQUENCE
         MVC   2(L'LEXTRAY3,R4),LEXTRAY3  ADD TRAY SELECT
         LA    R4,2+L'LEXTRAY3(,R4)  MOVE PAST TRAY
         LA    R8,2(,R8)     ALSO SKIP INIT SEQUENCE
         SH    R5,=H'2'      ALLOW FOR HP RESET
         EX    R5,CONPMVC
         LA    R5,1+2+L'LEXTRAY3(,R5) SET NEW TEXT LENGTH
         LA    R4,CONBUFF    POINT TO CONTROL BUFFER
         BAS   R9,PUTBIFF    WRITE THE BUFFER
         LM    R0,R15,SAVETRE
         BR    R14
         SPACE 1
PUTCON   STM   R0,R15,SAVETRE
         MVC   CONBUFF,SPACES  CLEAR
         SLR   R5,R5
         IC    R5,0(,R4)
         LR    R8,R4         SAVE CONTROL SEQUENCE
         LA    R4,CONBUFF    POINT TO CONTROL BUFFER
         EX    R5,CONPMVC
         LA    R5,1(,R5)     ALLOW FOR EXECUTE
         BAS   R9,PUTBIFF    WRITE THE BUFFER
         LM    R0,R15,SAVETRE
         BR    R14
CONPMVC  MVC   0(0,R4),1(R8)  MOVE TO WORK BUFFER
         SPACE 1
EODUT1   BAS   R9,PUTPREV    WRITE STACKED RECORD, IF ANY
         TM    PARMFLAG,PFPORT+PFLAND  ANY FORMAT SET?
         BZ    EODCLOSE      NO
         LA    R4,HPRESET
         BAS   R14,PUTCON    WRITE PRINTER RESET
EODCLOSE CLOSE MF=(E,OCLIST)  CLOSE THE DCBS
         LH    R9,CONDCODE                                      GP99322
         ENDM  RC=(R9)       AND QUIT WITH CC                   GP99322
         SPACE 1
FAILINOP WTO   'IEBGONER - SYSUT1 FAILED TO OPEN',ROUTCDE=7
         ABEND 2540
         SPACE 1
FAILOUOP WTO   'IEBGONER - SYSUT2 FAILED TO OPEN',ROUTCDE=7
         ABEND 1403
         SPACE 3
         PUSH  USING                                            GP99098
         DROP  ,                                                GP99098
         USING INDCBEX,R15                                      GP99098
         USING IHADCB,R1                                        GP99098
INDCBEX  TM    DCBRECFM,DCBRECF  RECFM=F OR U?                  GP99098
         BNZR  R14           YES; RETURN                        GP99098
         TM    DCBRECFM,DCBRECV+DCBRECSB  RECFM=V(B)S ?         GP99098
         BNOR  R14           NO                                 GP99098
         OI    DCBBFTEK,DCBBFTA  REQUEST LOGICAL RECORD INTERFACE
         BR    R14                                              GP99098
         POP   USING                                            GP99098
         SPACE 1                                                GP99098
         PRINT NOGEN
OCLIST   OPEN  (SYSUT2,OUTPUT,SYSUT1,(INPUT,REREAD)),MF=L
OCINLIST EQU   *-4,4,C'A'    POINT TO INPUT PORTION ONLY
UT1EXLST DC    X'85',AL3(INDCBEX)                               GP99098
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EROPT=ACC,EODAD=EODUT1, *
               EXLST=UT1EXLST                                   GP99098
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EROPT=ACC,              *
               RECFM=VB,LRECL=208,BLKSIZE=8192
SPACER   DC    AL1(0)    1/2 SPACER LINE
SPACES   DC    CL256' '  2/2 SPACES
         SPACE 1
ASAINC   DC    F'1,0,99999999,2,3'  CORRESPONDING SKIP COUNTS
ASATABLE DC    256AL1(0)     TREAT EVERYTHING AS SINGLE SPACE
         TRENT ASATABLE,4,C'+'  OVERPRINT
         TRENT ,8,C'1'       EJECT
         TRENT ,0,C' '       SINGLE SPACE
         TRENT ,12,C'0'      DOUBLE SPACE
         TRENT ,16,C'-'      TRIPLE SPACE
         ORG   ,               END OF TABLE
         SPACE 1
MCCINC   DC    F'0,0,1,2,3,99999999'  CORRESPONDING SKIP COUNTS
MCCTABLE DC    256AL1(8)     TREAT EVERYTHING AS SINGLE SPACE
         TRENT MCCTABLE,0,X'03',X'04',X'73',X'7B'  IGNORE
         TRENT MCCTABLE,4,X'01'  OVERPRINT
         TRENT ,12,X'11',X'13'   DOUBLE SPACE
         TRENT ,16,X'19',X'1B'   TRIPLE SPACE
         TRENT ,20,X'89',X'8B'   EJECT
         ORG   ,               END OF TABLE
         SPACE 1
HPTABLE  DC    256C'/'       SET EVERYTHING UNPRINTABLE
         TRENT HPTABLE,C' ',0   FAKE HEX ZERO AS BLANK
*DEFER*  TRENT ,(*-HPTABLE),X'1B' ALLOW ESCAPE SEQUENCES
         TRENT ,(*-HPTABLE),X'40' BLANK
         TRENT ,(*-HPTABLE),(X'4A',7) CENT THROUGH AMPERSAND
         TRENT ,(*-HPTABLE),(X'5A',8) EXCL THROUGH SLASH
         TRENT ,(*-HPTABLE),(X'6A',6) SPST THROUGH QUEST
         TRENT ,(*-HPTABLE),(X'79',7) LAPO THROUGH QUOTE
         TRENT ,(*-HPTABLE),(X'8B',5) LBRA THROUGH INTSC
         TRENT ,(*-HPTABLE),(X'9B',7) RBRA THROUGH DEGREE
         TRENT ,(*-HPTABLE),(X'AB',15) LBCORN TO EXP 9
         TRENT ,(*-HPTABLE),(X'C0',6) RBCORN TO LBRA
         TRENT ,(*-HPTABLE),X'D0' R BRACE
         TRENT ,(*-HPTABLE),X'E0' REV SLASH
         TRENT ,(*-HPTABLE),(X'81',9)           LOWER A-I
         TRENT ,(*-HPTABLE),(X'91',9)           LOWER J-R
         TRENT ,(*-HPTABLE),(X'A2',8)           LOWER S-Z
         TRENT ,(*-HPTABLE),(X'C1',9)           UPPER A-I
         TRENT ,(*-HPTABLE),(X'D1',9)           UPPER J-R
         TRENT ,(*-HPTABLE),(X'E2',8)           UPPER S-Z
         TRENT ,(*-HPTABLE),(X'F0',10)          DIGIT 0-9
         AIF   ('&PRTSET' NE 'LEXMARK').NOLEX                   GP99320
****** SPECIAL FOR SOFTWORKS LEXMARK SETUP ONLY ******          GP98323
         TRENT ,X'BC',X'5F'  PRINT NOT-SIGN AS SUCH             GP98323
.NOLEX   AIF   ('&PRTSET' NE 'HP8100').NOHP81                   GP99320
****** SPECIAL FOR SOFTWORKS HP 8100 SETUP ONLY ******          GP99320
         TRENT ,X'70',X'4A'  PRINT CENT-SIGN AS SUCH            GP99320
         TRENT ,X'77',X'6A'  ALTERNATIVE FOR BROKEN BAR         GP99320
         TRENT ,X'C0',X'8B'  LEFT BRACE                         GP99320
         TRENT ,X'D0',X'9B'  RIGHT BRACE                        GP99320
         TRENT ,X'BA',X'AD'  LEFT BRACKET                       GP99320
         TRENT ,X'BB',X'BD'  RIGHT BRACE                        GP99320
         TRENT ,X'90',X'B0'  DEGREE                             GP99320
.NOHP81  ORG   ,               END OF TABLE                     GP99320
         SPACE 1
*  THESE SEQUENCES WORK ON AN HP AND A LEXMARK OPTRA S2450
*    STILL RESEARCHING FONT SIZE (PORT132 ESPECIALLY)
HPRESET  DC    AL1(HPL132-*-2),X'1B',C'E'
         DC    X'1B5081F6D3'             LEFT MGN : 6
HPL132   DC    AL1(HPP72-*-2),X'1B',C'E'
         DC    X'1B5093F2C1'                 SIZE : LETTER
         DC    X'1B5093F1D6'               ORIENT : LANDSCAPE
         DC    X'1B4DF1F0E4'                 FONT : 10U
         DC    X'1B4DA2F0D7'                PITCH : FIXED
         DC    X'1B4DA2F1F3C8'                CPI : 13
         AIF   ('&PRTSET' NE 'HP8100').NTHP81                   GP99320
****** SPECIAL FOR SOFTWORKS HP 8100 SETUP ONLY ******          GP98323
         DC    X'1B5093F8C4'                  LPI : 8           GP99355
         DC    X'1B5093F4C5'              TOP MGN : 4           GP99355
         AGO   .CMHP81                                          GP99355
.NTHP81  ANOP  ,                                                GP99355
*2SMALL  DC    X'1B5093F1F2C4'                LPI : 12
         DC    X'1B5093F54BF8C3'              VMI : 5.8
         DC    X'1B5093F6C5'              TOP MGN : 6
.CMHP81  ANOP  ,                                                GP99355
         DC    X'1B5081F2D3'             LEFT MGN : 2
         DC    X'1B5093F6F1C6'         TEXT LINES : 61
         DC    X'1B5093F0C8'           PAGE EJECT : 1
HPP72    DC    AL1(HPP80-*-2),X'1B',C'E'
         DC    X'1B5093F2C1'
         DC    X'1B5093F0D6'
         DC    X'1B5093F3C5'
         DC    X'1B5081F6D3'
*2LARGE  DC    X'1B5093F6C4'
         DC    X'1B5093F74BF9C3'              VMI : 7.9
         DC    X'1B4DF1F0E4'
         DC    X'1B4DA2F0D7'
         DC    X'1B5093F6F1C6'         TEXT LINES : 61
         DC    X'1B4DA2F1F0C8'
HPP80    DC    AL1(HPP132-*-2),X'1B',C'E'
         DC    X'1B5093F2C1'
         DC    X'1B5093F0D6'
         DC    X'1B5093F3C5'
         DC    X'1B5081F6D3'
*2LARGE  DC    X'1B5093F6C4'
         DC    X'1B5093F74BF9C3'              VMI : 7.9
         DC    X'1B4DF1F0E4'
         DC    X'1B4DA2F0D7'
         DC    X'1B5093F6F1C6'         TEXT LINES : 61
         DC    X'1B4DA2F1F2C8'
HPP132   DC    AL1(HPP132B-*-2),X'1B',C'E'
         DC    X'1B5093F2C1'
         DC    X'1B5093F0D6'
         DC    X'1B5093F3C5'
         DC    X'1B5081F5D3'              LFT MGN : 5
*2LARGE  DC    X'1B5093F6C4'
         DC    X'1B5093F74BF9C3'              VMI : 7.9
         DC    X'1B4DF1F0E4'
         DC    X'1B4DA2F0D7'
         DC    X'1B5093F6F1C6'         TEXT LINES : 61
         DC    X'1B4DA2F1F64BF6F6C8'
HPP132B  DC    AL1(HPPEND-*-2),X'1B',C'E'
         DC    X'1B5093F2C1'
         DC    X'1B5093F0D6'
         DC    X'1B5093F3C5'
         DC    X'1B5081F5D3'              LFT MGN : 5
*2LARGE  DC    X'1B5093F6C4'
         DC    X'1B5093F34BF9C3'              VMI : 3.9
         DC    X'1B4DF1F0E4'
         DC    X'1B4DA2F0D7'
         DC    X'1B5093F1F2F5C6'       TEXT LINES : 125
         DC    X'1B4DA2F1F64BF6F6C8'
HPPEND   EQU   *             END OF SEQUENCES
LEXTRAY3 DC    X'1B5093F5C8'                 TRAY : 3
         SPACE 1
SAVE     DSECT ,             SAVE AND WORK AREA
SAVETWO  DS    16A           ANOTHER SAVE AREA
SAVETRE  DS    16A           ANOTHER SAVE AREA
DB       DS    D             WORK AND CONVERSION SPACE
DB2      DS    2D            WORK AND CONVERSION SPACE
BUFFPTR  DS    2A            BUFFER ADDRESS / LENGTH
FORMADR  DS    A             ADDRESS OF PRINTER CONTROL STRING
@TRACE   DS    A             DYNAMIC DEBUG SUPPORT
@DEBUG   DS    A             DYNAMIC DEBUG SUPPORT
BUFFLEN  DS    H             LENGTH OF CURRENT BUFFER (0 WHEN EMPTY)
CURRLINE DS    H             CURRENT LINES PER PAGE
MAXLINES DS    H             MAX NUMBER OF LINES PER PAGE
OFFSET   DS    H             RDW OFFSET OR 0
OFFCC    DS    H             CC LENGTH OR 0
BIXCC    DS    H             BRANCH OFFSET FOR RECORD CONTROL
BIXFM    DS    H             BRANCH OFFSET FOR RECORD FORMAT
RADJ     DS    H             RIGHT-SHIFT VALUE (5-INDENT; 8-NUMBER)
CONDCODE DS    H             PROGRAM RETURN CODE                GP99322
         SPACE 1
PARMFLAG DS    X             PARM OVERRIDE FLAGS
PFNTRAN  EQU   X'80'           INHIBIT TRANSLATION
*        EQU   X'40'             AVAILABLE
PFLAND   EQU   X'20'           OUTPUT FORMAT IS LANDSCAPE
PFPORT   EQU   X'10'           OUTPUT FORMAT IS PORTRAIT
PFW132   EQU   X'08'           WIDE OUTPUT
PFW80    EQU   X'04'           80-90 BYTES
PFW72    EQU   X'02'           72 (MEMO/MANUAL WIDTH)
PFTWO    EQU   X'01'           TWO-UP
PFL132   EQU   PFLAND+PFW132   STANDARD LANDSCAPE
PFP132   EQU   PFPORT+PFW132   SCRUNCHED PORTRAIT
PFP80    EQU   PFPORT+PFW80    LISTINGS
PFP72    EQU   PFPORT+PFW72    MEMO/MANUALS
PFP132B  EQU   PFPORT+PFW132+PFTWO  SQUEEZED
         SPACE 1                                                GP99238
PARMFLG2 DS    X             PARM OVERRIDE FLAGS                GP99238
PFNUM    EQU   X'80'           MAKE SEQUENCE # AND INDENT       GP99238
PFMGN    EQU   X'40'           INDENT FOR LEFT MARGIN           GP99238
         SPACE 1
SEQNUM   DC    PL4'0'        SEQUENCE COUNTER                   GP99238
         SPACE 1                                                GP99238
PROFLAGS DS    X             PROCESSING FLAGS
PFHOLD   EQU   X'80'           BUFFER HAS (PARTIAL) RECORD
PFRDW    EQU   X'04'           BUFFER HAS RDW
PFTREY   EQU   X'02'           LEXMARK TRAY 3 FEED
PFONE    EQU   X'01'           FIRST RECORD PROCESSED
         SPACE 1
CURRCC   DS    C             CURRENT INPUT CONTROL CHARACTER
SSCHAR   DS    C             SINGLE SPACE CONTROL - ASA OR MCC
BUFFRDW  DS    2Y         1/2  RDW (IGNORED UNLESS V FORMAT)
BUFFER   DS    CL204      2/2  BUFFER
CONBRDW  DS    2Y         1/2  RDW (IGNORED UNLESS V FORMAT)
CONBUFF  DS    CL204      2/2  BUFFER FOR CONTROL SEQUENCES
SAVEEND  EQU   *                                                GP12050
         SPACE 1
VERBSECT DSECT ,             MAP OF VERB MACRO EXPANSION
VBLLEN   DS    AL1           LENGTH OF VERB
VBLMINLN DS    X             MINIMUM LENGTH FOR VERB MATCH
VBLFLAG  DS    X             FLAG TO SET ON MATCH
VBLFOFF  DS    X             FLAG BYTE ADDRESS OFFSET
VBLADDR  DS    AL2           OFFSET TO CONTROL STRING
VBLVERB  DS    0C            VERB TO MATCH
VBLSIZE  EQU   *-VERBSECT      ENTRY LENGTH (+VBLLEN)
         SPACE 2
         DCBD  DSORG=PS,DEVD=DA
*SAVEM*  YREGS ,             MNEMONIC REGISTER DEFINITIONS
         END
