SEEKMON TITLE '         U. S. SEC - DASD SEEK ACTIVITY MONITOR'
*          DATA SET ADPSEEKMON AT LEVEL 016 AS OF 03/26/82
*----------------------------------------------------------------------
*   SEEKMON -- U. S. SEC DASD-SEEK ACTIVITY MONITOR
*----------------------------------------------------------------------
*
* STATUS --
*   UPDATED 07JUL76, GENE CZARCINSKI, NASA/GSFC, CODE 531.
*   1.0 ... SEEKMON DEVELOPMENT AT NASA/GSFC ...
*   2.0 ... SEEKMON CHANGED AT U.S. SEC TO RUN ON OS/VS2 MVS SE2
*       ... 23FEB81, ROBERT V HANSEN, U.S. SEC (202) 272-3144
*   2.1 ... 25MAR82, CODE ADDED TO SUPPORT 3375 AND 3380 ALSO TO
*           PRINT CYL ADDRESSES IN HEX INSTEAD OF DECIMAL.
*           OUR DISK MAP PGM PRINTS CYL ADDRESSES IN HEX.
*
*           SEEKMON HAS BEEN TESTED ON THE FOLLOWING CONFIGURATION
*           SOFTWARE  MVS SE2 AND SP1
*           HARDWARE  3330,3330-1,3350
*                                                                93103
*           13NOV92, G. POSTPISCHIL - ADDED SP1 MULTIPLE CPU SUPPORT
*           ADDED ALT CONTROL UNIT TEST (TREAT AS ALT PATH)      93103
*           ADDED SUMMARY BAR CHART AT END                       93103
*           FIXED CODE FOR DASD ON CHANNELS ABOVE 9              93103
*    2.4    SO-SO X/A SUPPORT                                    93197
*
*
*
* THIS PROGRAM IS BASED ON THE 'SEEKMON' PROGRAM .. SOURCE UNKNOWN.
*
* THIS CODE IS NOT REENTRANT OR REUSABLE.  IT HAS BEEN
* DESIGNED TO RUN AS A SYSTEM-JOB OR SYSTEM TASK.   IT PUTS
* NO HOOKS IN THE SYSTEM.  ALL DATA ARE GATHERED ON A SAMPLED
* BASIS.  THE REPORT PORTION OF THIS PROGRAM IS BASED ON THE
* PROCTER & GAMBLE 'TSOPAP' PROGRAM.  THIS PROGRAM IS NOT DEPENDENT
* ON ANY SYSTEM MODIFICATION.
*
*
* THE JCL NECESSARY TO RUN THIS PROGRAM IS ...
*      //SEEKMON EXEC PGM=SEEKMON,DPRTY=(15,15)
*      //STEPLIB  DD DISP=SHR,DSN= (LIB CONTAINING THE LOAD MODULE)
*      //SYSPRINT DD SYSOUT=A
*      //SYSUDUMP DD SYSOUT=A
*
* IN GENERAL, SPECIFY A STEP REGION SIZE THAT IS LARGE ENOUGH
* FOR THE MONITOR PROGRAM PLUS ABOUT 3K FOR EACH LIGHT ACTIVITY
* DEVICE AND ABOUT 10K-12K FOR EACH HIGH ACTIVITY DEVICE.  IF
* YOU ALLOW TOO LITTLE CORE, THE MONITOR WILL LOSE SOME DATA
* BUT WILL INFORM YOU OF THE FACT.  THE MINIMUM SIZE FOR THE
* MONITOR IS ABOUT 30K+(1.2K PER DEVICE).
*
* THE RUN PARAMETERS CAN BE DEFAULTED, SPECIFIED BY PARM= ON THE
* EXEC STATEMENT OR BY USING THE STARTED-TASK PARM SPECIFICATION
* (S  SEEKMON,,,$$$$$$$).   ALL PARM VALUES MUST BE NUMERIC.  IF
* AN 'X' IS SPECIFIED THEN THE HIGHER-ORDER VALUE IS USED.  THE ORDER
* OF PARM MERGE IS .. DEFAULT/EXEC-PARM/STARTED-TASK-PARM
*
* FOR MVS THE FOLLOWING CHANGES WERE MADE:
*     1.  APF AUTHORIZATION IS REQUIRED TO ELIMINATE 0C4S AT TIMES
*     2.  THE LAST SEEK ADDRESS IS OBTAINED FROM THE
*         IOSB<--IOQ<--UCB
*     3.  SIO CPU TREATED AS ALT PATH/ALT CU QUALIFIER           93103
*     4.  TRANSWAP ADDED                                         93103
*     5.  FIXED ERRORS IN DEVICE TABLE SCAN (ONE DEVICE TOO MANY)
*     6.  FIXED ERROR IN PARM SCAN - DUPLICATE ENTRIES           93197
*     7.  CHANGED STAND-ALONE SEEK HISTOGRAM TO ARM TRAVEL       93197
*     8.  CHANGED STORAGE ALLOCATION FOR DEVICES (GETMAINED)     93197
*     9.  ALLOW 'ALL' AS A VALID DEVICE NAME - DOES ALL DASD     93197
*
*
* THE PARM FIELD IS DEFINED AS FOLLOWS ...
*      MMMSSS,LL,FFF,...
*         MMM= SAMPLING PERIOD IN MINUTES
*         SSS= SAMPLING INTERVAL IN 100THS OF SECONDS
*          LL= SYSPRINT LINE COUNT
*         FFF= OPTION SWITCHES (DECIMAL COUNT 0-255)
*         DDD= DEVICE LIST
*              THE DEVICE LIST IS OF THE FORM "230,231" OR
*              "230-9" FOR 230 THRU 239
*              NOTE YOU MAY ALSO USE "230-F,330,332" OR
*                                    "230-F,330-F"
*----------------------------------------------------------------------
  EJECT ,
         MACRO
&L       TABDEF &A
&L       DSECT ,
&L.A     DS    F              SUM
&L.B     DS    F              TOTAL COUNT OF ENTRIES
&L.D     DS    F              MINIMUM VALUE
&L.E     DS    F              MAXIMUM VALUE
&L.C     DS    &A.F           ENTRY COUNTERS
&L.L     EQU   *-&L           LENGTH OF TABLE
         MEND
*
         MACRO
&L       PRTUPD &A,&B
&L       MVI   SPACE,C&A
         LA    R1,&B
         B     PUT
         MEND
*
         MACRO
&A       TESTVAL &B
&A       L     W1,$TABB-$TAB(,W0)   GET TOTAL COUNTS
         LTR   W1,W1                WERE THERE ANY?
         BZ    &B                   NO, SKIP THIS PLOT
         MEND
*
         MACRO
&L       DASHES &BR=,&CHAR=-
&L       MVI   LINE,C'&CHAR'
         MVC   LINE+1(L'LINE-1),LINE
         BAL   LINK,&BR
         MEND
*
         MACRO
&L       PRT2  &A,&B,&C
&L       L     W1,&A
         BAL   LINK,TODCNVTA
         MVC   LINE+&B.(14),=CL14&C
         MVC   LINE+&B.+15(8),TOD
         MEND  ,
*
         MACRO
&L       INC   &A,&B
&L       L     &A,&B
         LA    &A,1(,&A)
         ST    &A,&B
         MEND  ,
*
         MACRO
&L       PERCENT &A,&B,&C,&D,&E
&L       XR    R0,R0
         L     R1,&A
         M     R0,=F'100'    FOR PERCENT
         D     R0,&B
         CVD   R1,WORK
         ED    &C.(4,R14),WORK+6
         MEND  ,
*
         MACRO
&L       DISTRIB &A,&B,&C
&L       L     R1,&A
         L     R15,DEVTBLPT
         LTR   R15,R15   TEST IF TABLE DEFINED
         BZ    A&SYSNDX  NO.
         LA    R15,&B.*$TABL(,R15)
         BAL   LINK,DISTRIB
A&SYSNDX EQU   *
         MEND
*
         MACRO
&L       COUNT &A,&B,&C,&R1=R1,&BR=*+6
&L       TM    &A,&B
         BNO   &BR
         ALR   &C,&R1
         MEND  ,
*
         MACRO
&L       TESTBL &A,&B,&C,&D,&E
&L       CLI   &A,C' '
         BNE   &D
         CLI   &B,C' '
         BNE   &D
         CLI   &C,C' '
         BE    &E
         MEND  ,
*
         MACRO
&L       REPORTC &A
&L       LA    R14,&A
         BAL   LINK,REPORTC
         MEND  ,
*
         MACRO
&L       REPORTD &A,&B
&L       LM    W3,W7,&A
         LA    R14,&B
         BAL   LINK,REPORTD
         STM   W3,W7,&A
         MEND  ,
*
         MACRO
&L       REPORTF &A,&B
&L       L     W6,&A
         LA    R14,&B
         BAL   LINK,REPORTF
         MEND  ,
         SPACE 1                                                 93103
         PUNCH '  ORDER SEEKMON(P) '   EASIER DUMPS             GP05161
         PUNCH '   SETCODE AC(1) '                              GP05161
         SPACE 1                                                 93103
         COPY  OPTIONGB      GET GLOBAL ASSEMBLY OPTIONS         93103
         SPACE 1                                                 93103
         GBLC  &SYSSPLV                                          93103
         SPACE 1                                                 93103
         SYSPARM LIST=YES    SET AND LST OPTIONS                 93103
 EJECT ,
         PRINT &PRTSOR                                           93103
SEEKMON  PGMHEAD ZERO12,BASE=(R11,R12),PARM=R9,BNDRY=PAGE       GP05161
         MODESET KEY=ZERO,MODE=SUP                              GP05161
         SLR   R1,R1         NO ECB                              93103
         SYSEVENT TRANSWAP   ON PROC: HIGH DPRTY AND GOOD PERFORM
         MODESET KEY=NZERO,MODE=PROB                            GP05161
         SPLEVEL SET         SET DEFAULT SP LEVEL                93103
LINK     EQU   R10
W0       EQU   R2
W1       EQU   R3
W2       EQU   R4
W3       EQU   R5
W4       EQU   R6
W5       EQU   R7
W6       EQU   R8
W7       EQU   R9
*----------------------------------------------------------------------
$TAB     TABDEF 40        REFERENCE TABLE DEFINITION
*
DEVICE   DSECT ,      *   DEVICE (UCB) TABLE DEFINITION *
DEVPATH  DS    0F   1/3   CPU/CHANNEL/CONTROLUNIT/DEVICE ADDRESS 93103
DCPU     DC    H'0' 2/3   CPU NUMBER OF LAST SIO                 93103
DCUU     DC    H'0' 3/3   HEX ADDR (RIGHT JUSTIFIED)             93103
DEVDIST  DC    A(0)    ADDR OF CYL/TRK DISTRIB TABLE
CYLENTRY DC    F'0'    POINTER TO FIRST DATA ENTRY
UNITADDR DC    A(0)    ADDR OF UCB FOR THIS DEVICE               84099
DLASTCC  DC    H'0'    LAST HIT ON THIS DEVICE
DEVLOST  DC    H'0'    COUNT OF LOST ENTRIES FOR THIS DEVICE
DEVTBLPT DC    A(0)    POINTER TO ALLOC. TABLES
DEVONLN  DC    F'0'    COUNT OF DEVICE-ONLINE HITS
DEVNOTRD DC    F'0'    DEVICE NOT-READY HITS
DEVALLOC DC    F'0'    DEVICE ALLOCATED HITS
DEVRES   DC    F'0'    DEVICE RESERVED HITS
DEVERR   DC    F'0'    ERROR RECOVERY ACTIVE HITS
DEVNOTRC DC    F'0'    CONTROL UNIT BUSY HITS
DEVBUSY  DC    F'0'    DEVICE BUSY HITS
DEVXFER  DC    F'0'    DATA TRANSFER ACTIVE
DEVSASEK DC    F'0'    S-A SEEK ACTIVE
DEVALT   DC    F'0'    ALT PATH IN USE
DEVCYDIS DC    40F'0'  CYLINDER DISTRIBUTION                     93197
DEVICEL  EQU   *-DEVICE    LENGTH OF THE TABLE
*
*----------------------------------------------------------------------
*----------------------------------------------------------------------
         EJECT ,
SEEKMON  CSECT ,
         L     W0,0(,R9)       SAVE/LOAD PARM LIST POINTER       93103
         OPEN  (SYSPRINT,OUTPUT)            INIT THE OUTPUT FILE
         TM    SYSPRINT+DCBOFLGS-IHADCB,DCBOFOPN  CHECK THE OPEN
         BZ    OPENERR
         TIME  DEC
         ST    R0,WORK
         ED    VERSION4,WORK
         XR    R0,R0
         STM   R0,R1,WORK
         ED    VERSION3(7),WORK+5
         MVC   VERSION2+5(2),VERSION3+1
         CVB   R1,WORK
         D     R0,=F'1000'
         BCTR  R1,0
         LR    R15,R1
         SRL   R15,2
         N     R1,=F'3'
         MH    R15,=H'5'
         AR    R15,R1
         AR    R15,R0
         XR    R14,R14
         D     R14,=F'7'
         MH    R14,=H'3'
         LA    R14,DAYTAB(R14)
         MVC   VERSION1,0(R14)
         IC    R1,FEBTAB(R1)
         STC   R1,FEB+1
         LA    R1,MONTAB-6
DATELOOP LA    R1,6(,R1)
         SH    R0,0(,R1)
         BH    DATELOOP
         AH    R0,0(,R1)
         CVD   R0,WORK
         OI    WORK+7,X'F'
         UNPK  VERSION2(2),WORK
         MVC   VERSION2+2(3),2(R1)
         MVC   TITLE+30(VERSIONL),VERSION
         DASHES BR=PUTSK1
*   MERGE IN THE EXEC PARM
         LH    W1,0(,W0)
         LA    W2,2(,W0)
         LTR   W1,W1
         BZ    INITCIB
INITEXEC BAL   LINK,SCAN
*   INIT CIB PROCESSING
INITCIB  EXTRACT ACSCBCIB,FIELDS=COMM
         L     R1,ACSCBCIB
         MVC   ACSCBECB,0(R1)
         L     W5,4(,R1)
         LTR   W5,W5
         BZ    TESTPARM            NOT STARTED TASK
         USING CIB,W5
         LH    W1,CIBDATLN
         LA    W2,CIBDATA
         DROP  W5
         LTR   W1,W1
         BZ    INITCIBZ
         BAL   LINK,SCAN
INITCIBZ L     W5,ACSCBCIB
         LA    W5,4(,W5)
         QEDIT ORIGIN=(W5)
         QEDIT ORIGIN=(W5),CIBCTR=1
TESTPARM LA    W1,PARM5-PARM1
         LA    W2,PARMDFLT
PARMTEST CLI   0(W2),C'0'
         BNL   *+12
         CLI   0(W2),C','
         BNE   BADPARM
         LA    W2,1(,W2)
         BCT   W1,PARMTEST
LISTPARM MVC   LINE(10),=CL10'RUN PARM -'
         BAL   LINK,PUTSP2
         MVC   LINE+5(L'PARMDFLT),PARMDFLT
         BAL   LINK,PUTSP1
*   PROCESS THE RUN PARMS
         PACK  WORK,PARM1
         CVB   R1,WORK
         MH    R1,=H'6000'         CONVERT MIN. TO 100THS OF SEC
         ST    R1,PERIOD
         PACK  WORK,PARM2
         CVB   R1,WORK
         LTR   R1,R1
         BNZ   *+8
         LA    R1,1            DO NOT PERMIT ZERO
         ST    R1,SECONDS
         PACK  WORK,PARM3
         CVB   R1,WORK
         STH   R1,LINEMAX
         PACK  WORK,PARM4
         CVB   R1,WORK
         STC   R1,OPTIONS
         L     R1,CVTPTR
         TM    CVTDCB-CVTMAP(R1),CVT2SPS
         BZ    *+8
         OI    OPTIONS,OPT2  IF MFT, FORCE NO ATTACH
*
*
         BAL   LINK,PUTSP2
*----------------------------------------------------------------------
*   ALLOCATE THE CORE FOR THE WORKAREAS
         AIF   (NOT &MVSSP).OLDGETM                              93197
         XC    UNITWORK(UNITCLR),UNITWORK  CLEAR WORK AREA       93197
         MVI   UNITCLAS,UCB3DACC  REQUEST DIRECT ACCESS ONLY     93197
         LA    R14,UNITWORK  LOAD WORK AREA                      93197
         LA    R15,UNITCLAS  LOAD CLASS POINTER (=>0)            93197
         LA    R0,UNITPTR    GET UCB ADDRESS POINTER             93197
         STM   R14,R0,UNITPARM  MAKE LIST                        93197
         OI    UNITPARM+8,X'80'  SET END OF LIST                 93197
         L     W0,CVTPTR     GET CVT                             93197
         L     W0,CVTUCBSC-CVTMAP(,W0)  LOAD LOOK-UP ROUTINE ADDR
         SLR   W2,W2         CLEAR COUNTER                       93197
         LA    W1,1          SET INCREMENT                       93197
         SPACE 1                                                 93197
TALLYHO  LA    R1,UNITPARM   GET SEARCH PARAMETER LIST           93197
         LR    R15,W0        COPY LOOK-UP ROUTINE ENTRY          93197
         BALR  R14,R15       LOOK A LITTLE                       93197
         BXH   R15,R15,TALLYDON  NO MORE                         93197
         L     W6,UNITPTR                                        93197
         USING UCBOB,W6      DECLARE IT                          93197
         TM    UCBJBNR,UCBOLDSM  IN USE BY OLTEP ?               93197
         BZ    TALLYGO       NO; USE                             93197
         TM    UCBFL5,UCBNALOC  MY FLAG ?                        93197
         BZ    TALLYGO       NO; USE                             93197
         CLI   UCBTBYT4,UCBDSM  REAL MSS ?                       93197
         BNE   TALLYHO       NO; SKIP THIS                       93197
TALLYGO  AR    W2,W1         BUMP THE COUNTER                    93197
         B     TALLYHO                                           93197
         DROP  W6                                                93197
TALLYDON LR    R0,W2         COPY DASD COUNT                     93197
         MH    R0,=Y(5*$TABL+DEVICEL)  GET SPACE NEEDED          93197
         ST    R0,GOTTENL    SAVE IT                             93197
         GETMAIN RC,LV=(0)   REQUEST SPACE FOR ALL DASD          93197
         BXH   R15,R15,NOCORE                                    93197
         ST    R1,DEVTBL     STASH IN DEVICE TABLE POINTER       93197
         LA    R15,DEVICEL   GET SIZE OF DEVICE ENTRY            93197
         MR    R14,W2        GET SIZE OF DEVICE TABLE PORTION    93197
         LA    R14,0(R15,R1)  POINT TO FIRST COUNTER ENTRY       93197
         ST    R14,GOTTENA    SET START OF COUNTERS              93197
         ST    R14,LASTDEV    POINT PAST LAST DEVICE             93197
         L     R0,GOTTENL    GET TOTAL LENGTH                    93197
         LR    R3,R0         SAVE TOTAL LENGTH                   93197
         SR    R0,R15        LESS LENGTH FOR DEVICES             93197
         ST    R0,GOTTENL    LENGTH FOR COUNTERS                 93197
         L     R2,DEVTBL                                         93197
         AGO   .COMGETM                                          93197
.OLDGETM GETMAIN VU,LA=$SIZE,A=GOTTENA
         L     R1,GOTTENA
         L     W0,GOTTENL
         SH    W0,=Y(4096)      RETURN SOME CORE TO OS
         ST    W0,GOTTENL
         LA    R1,0(W0,R1)
         FREEMAIN R,LV=4096,A=(1)
         SPACE 1                                                 93197
*    CLEAR THE GETMAINED AREA
         LM    R2,R3,GOTTENA  GET ADDRESS/LENGTH OF GOTTEN AREA  93197
.COMGETM CLRL  (R2),(R3)     CLEAR GETMAINED AREA                93197
*----------------------------------------------------------------------
*   INITIALIZE THE TABLES
         PUSH  USING                                            GP05161
         L     R1,GOTTENA
         ST    R1,NEXTFREE
         A     R1,GOTTENL
         ST    R1,TOPCORE
         L     W1,DEVTBL                                         93197
         USING DEVICE,W1
         LA    W4,PARM6
         LA    W5,L'PARMDFLT-(PARM6-PARM1)
INITDEV1 BAL   LINK,FNDUNIT
         B     INITDEV9
         AIF   (NOT &MVSSP).OLDLOOP                              93103
         XC    UNITWORK(UNITCLR),UNITWORK  CLEAR WORK AREA       93103
         MVI   UNITCLAS,UCB3DACC  REQUEST DIRECT ACCESS ONLY     93103
         LA    R14,UNITWORK  LOAD WORK AREA                      93103
         LA    R15,UNITCLAS  LOAD CLASS POINTER (=>0)            93103
         LA    R0,UNITPTR    GET UCB ADDRESS POINTER             93103
         STM   R14,R0,UNITPARM  MAKE LIST                        93103
         OI    UNITPARM+8,X'80'  SET END OF LIST                 93103
         L     W0,CVTPTR     GET CVT                             93103
         L     W0,CVTUCBSC-CVTMAP(,W0)  LOAD LOOK-UP ROUTINE ADDRESS
         SPACE 1                                                 93103
INITDEV2 LA    R1,UNITPARM   GET SEARCH PARAMETER LIST           93103
         LR    R15,W0        COPY LOOK-UP ROUTINE ENTRY          93103
         BALR  R14,R15       LOOK A LITTLE                       93103
         BXH   R15,R15,INITDEV8  NO MORE                         93103
         L     W6,UNITPTR    LOAD THE UCB POINTER                93103
         USING UCBOB,W6                                          93103
         LR    W5,W6         COPY UCB START                      93103
         SH    W5,=H'512'    POINT TO PREFIX                     93103
         USING UCBBGN,W5     DECLARE PREFIX                      93103
         AGO   .COMLOOP                                          93103
.OLDLOOP L     W0,CVTPTR
         L     W0,CVTILK2-CVTMAP(,W0)                            84099
         SH    W0,=H'2'      CHEAT A LITTLE                      84099
INITDEV2 LA    W0,2(,W0)     SKIP TO NEXT DEVICE ADDRESS POINTER 84099
         ICM   W6,3,0(W0)    TEST FOR NULL ENTRY                 84099
         BZ    INITDEV2      FILLER - SKIP                       84099
         N     W6,=X'0000FFFF'  MASK VALID ADDRESS ONLY          84099
         C     W6,=X'0000FFFF'  END OF CHAIN ?                   84099
         BE    INITDEV8      UNIT NOT FOUND                      84099
         USING UCBOB,W6
         CLI   UCBTYP+2,X'20'  TEST FOR DASD
         BNE   INITDEV2                                          84099
.COMLOOP CLC   =C'ALL',UNITNAME  DO ALL DASD ?                   93197
         BNE   INITDEV3      YES                                 93197
         AIF   ('&SYSSPLV' LT '2').ISINIT                        93197
         ICM   R1,15,UCBEXTPT  ANY EXTENSION ?                   93197
         BZ    INITDEV2                                          93197
         ICM   R1,15,UCBCLEXT-UCBCMEXT(R1)  DCE ?                93197
         BZ    INITDEV2                                          93197
         ICM   R0,3,DCEUDCYL-DCE(R1)  ANY SIZE ?                 93197
         BZ    INITDEV2      SKIP DEVICE IF NOT INITIALIZED      93197
.ISINIT  TM    UCBJBNR,UCBOLDSM  IN USE BY OLTEP ?               93197
         BZ    INITDEV4      NO; USE                             93197
         TM    UCBFL5,UCBNALOC  MY FLAG ?                        93197
         BZ    INITDEV4      NO; USE                             93197
         CLI   UCBTBYT4,UCBDSM  REAL MSS ?                       93197
         BNE   INITDEV2      NO; SKIP THIS                       93197
         B     INITDEV4                                          93197
INITDEV3 CLC   UCBNAME,UNITNAME                                  84099
         BNE   INITDEV2                                          84099
INITDEV4 ST    W6,UNITADDR                                       84099
         AIF   ('&SYSSPLV' LT '2').OLDUDAT                       93103
         SLR   R1,R1                                             93103
         ICM   R1,3,UCBSCHNO  GET DEVICE NUMBER                  93103
         AGO   .NOCPU1                                           93103
.OLDUDAT IC    R1,UCBNAME
         N     R1,=X'0000001F'  C1-C9=>01-09  F0-F9=>10-19       93103
         IC    R1,HEXCHTAB(R1)  GET TRUE HEX                     93103
         SLL   R1,8          MAKE ROOM                           93103
         AIF   (&MVSXA).NOCPU1                                   93103
         IC    R1,UCBCHA+1   GET CONTROL UNIT AND DEVICE ADDRESS 93103
         AGO   .NOCPU1                                           93103
.NOCPUX  AIF   (&MVSXA OR NOT &MVSSP).NOCPU1                     93103
         ICM   R1,OIOO,UCBCPU   GET CPU NUMBER                   93103
.NOCPU1  ST    R1,DEVPATH    PRIME CHAN. ID                      93103
*        MVC   DLASTCC,UCBSKA+3    INIT THE SEEK VALUE
         XC    DLASTCC,DLASTCC     INIT THE SEEK VALUE
         L     R1,NEXTFREE
         LR    R15,R1
         A     R1,=A(5*$TABL)
         C     R1,TOPCORE
         BH    NOCORE                                            93197
         ST    R1,NEXTFREE
         ST    R15,DEVTBLPT
         IC    R1,UCBTBYT4
         N     R1,=F'15'
         SLL   R1,2           MPY BY 4
         L     R0,DEVDISTA-4(R1)                                 93103
         ST    R0,DEVDIST
         SPACE 1                                                 93197
         AIF   ('&SYSSPLV' LT '2').NOUSIZ                        93197
         ICM   R1,15,UCBEXTPT  ANY EXTENSION ?                   93197
         BZ    INITNO80                                          93197
         ICM   R1,15,UCBCLEXT-UCBCMEXT(R1)  DCE ?                93197
         BZ    INITNO80                                          93197
         SLR   R0,R0                                             93197
         ICM   R0,3,DCEUDCYL-DCE(R1)  ANY SIZE ?                 93197
         BZ    INITNO80                                          93197
         SRDA  R0,32         PREPARE FOR DIVIDE                  93197
         D     R0,=F'40'     DIVIDE INTO 40 PARTITIONS           93197
         LA    R14,DEVCYDIS  POINT TO TABLE                      93197
         LR    R0,R1         PRESERVE VALUE                      93197
         LA    W7,39                                             93197
INITTILE ST    R1,0(,R14)    SET CURRENT 40TH-TILE               93197
         AR    R1,R0         NEXT TILE                           93197
         LA    R14,4(,R14)   NEXT POSITION                       93197
         BCT   W7,INITTILE                                       93197
         MVC   0(4,R14),=A(HIVALUE)  REST                        93197
         LA    R1,DEVCYDIS                                       93197
         ST    R1,DEVDIST    USE SPECIAL DISTRIBUTION TABLE      93197
.NOUSIZ  USING $TAB,R15
INITNO80 L     R1,=A(HIVALUE)
         LA    R0,5
INITDEV5 ST    R1,$TABD
         LA    R15,$TABL(,R15)
         BCT   R0,INITDEV5
         DROP  R15
INITDEV6 EQU   *
*GYP*    MVC   LINE+5(3),UCBNAME     LIST THE DEVICE
*GYP*    MVC   LINE+10(6),UCBVOLI
*GYP*    BAL   LINK,PUTSP1
         LA    W1,DEVICEL(,W1)    UPDATE TABLE POINTER
         C     W1,LASTDEV         END OF TABLE?
         BH    INITDEV9           YES, NOT MORE SPACE
         CLC   =C'ALL',UNITNAME  DO ALL DASD ?                   93197
         BNE   INITDEV1      NO; EXTRACT NEXT FROM PARM          93197
         B     INITDEV2      YES; GET NEXT IN LOOK-UP TABLE      93197
INITDEV8 CLC   =C'ALL',UNITNAME  END OF GENERAL SEARCH ?         93197
         BE    INITDEV9      YES; PROCEED                        93197
         MVC   LINE+5(3),UNITNAME
         MVC   LINE+10(9),=CL9'NOT FOUND'
         BAL   LINK,PUTSP1
         B     INITDEV1
INITDEV9 C     W1,DEVTBL                                         93197
         BE    BADPARM
         ST    W1,LASTDEV
         POP   USING                                            GP05161
*----------------------------------------------------------------------
         DASHES BR=PUTSP2
         MVC   INITWTO+8+34(3),PARM1
INITWTO  WTO   'SEEKMON: SAMPLING STARTED, PERIOD=XXX **',             +
               ROUTCDE=(1,11)
         AIF   ('&SYSSPLV' LT '2').OLDSPIE                       93197
         ESPIE SET,EXITSPIE,(4)  RECOVER FROM BAD IOSBS          93197
         ST    R1,PREVSPIE                                       93197
         AGO   .COMSPIE                                          93197
.OLDSPIE SPIE  EXITSPIE,(4)  RECOVER FROM DISAPPEARING IOSBS     85203
.COMSPIE TIME  BIN
         MODESET KEY=ZERO
         ST    R0,SAMPLET
         ST    R0,BGNTME
         TM    OPTIONS,OPT2    TEST IF ATTACH USED
         BO    GATHER          NO, SKIP IT
         L     R1,=A(TIMRTASK)
         IDENTIFY EPLOC=TIMRNAME,ENTRY=(1)
         ATTACH   EPLOC=TIMRNAME,ECB=TIMRECB
         ST    R1,TIMRTCB
  EJECT ,
*----------------------------------------------------------------------
*   GATHER THE DATA THROUGH SAMPLING
         SPACE 1
GATHER   L     W1,DEVTBL     SETUP TO SCAN DEVICES               93197
         USING DEVICE,W1
GATHER1  ICM   W0,15,UNITADDR                                    84099
         BZ    GATHER21      SKIP IF NULL ENTRY                  84099
         USING UCBOB,W0                                          84099
         IC    R0,UCBFL1        MOVE DATA TO WORKAREA
         STC   R0,GATHDATA
         AIF   (NOT &MVSXA).NOUCBPX                              93103
         MVI   GATHDATA,0    DON'T CARE ABOUT UCBFLA             93103
*USELESS MODESET MODE=SUP    GET PRIVIED                         93103
         LR    R1,W0         COPY UCB ADDRESS                    93103
         SH    R1,=H'512'    POSITION TO PREFIX                  93103
         USING UCB,R1                                            93103
         ICM   R0,15,UCBIOQF  FIRST IOQ                          93103
         BNZ   FAKEACTV                                          93103
         TM    UCBMIHTI,UCBIOQRP  PENDING I/O ?                  93103
         BZ    *+8           NO                                  93103
FAKEACTV OI    GATHDATA,UCBACTV  FAKE ACTIVE FLAG                93103
*USELESS ICM   R1,3,UCBSCHNO  GET SUBCHANNEL NUMBER              93103
*USELESS ICM   R1,12,=X'0001'   CONVENTION                       93103
*USELESS STSCH SCHIB         STORE SUBCHANNEL INFORMATION        93103
         TM    UCBFLA,UCBSTRT  START SUBCHANNEL ?                93103
         BZ    *+8           NO                                  93103
         OI    GATHDATA,UCBBUSYD  YES; FAKE DEVICE BUSY          93103
         DROP  R1                                                93103
*USELESS MODESET MODE=PROB                                       93103
.NOUCBPX IC    R0,UCBSTAT
         STC   R0,GATHDATA+1
         IC    R0,UCBSQC
         STC   R0,GATHDATA+3
         TM    GATHDATA,UCBACTV+UCBBUSYD  UCB ACTIVE ?           93197
         BNO   GATHER11            NO - SKIP SEEK INFO          MVS
         LA    R1,GATHER11   SET ERROR RECOVERY ADDRESS          85203
         ST    R1,RETSPIE    FOR SPIE INTERCEPT                  85203
         LR    R1,W0               GET UCB ADDRESS              MVS
         S     R1,=F'4'            UCB-4                        MVS
         AM31  WORK=R14      IOSB MAY BE ABOVE THE LINE          93197
         ICM   R1,15,0(R1)         GET IOQ ADDRESS              MVS
         BZ    GATHER11            BR IF NO IOQ                 MVS
         ICM   R1,15,IOQIOSB-IOQ(R1)   IOSB ADDRESS             MVS
         BZ    GATHER11            BR IF NO IOSB                MVS
         MVC   THISCC,IOSSKCC-IOSB(R1)   CURRENT SEEK ADDRESS   MVS
         AM24  ,             GET LOW                             93197
GATHER11 LA    R1,1
         XC    RETSPIE,RETSPIE  CLEAR SPIE INTERCEPT             85203
         LM    W2,W7,DEVONLN     LOAD THE COUNTERS
         COUNT GATHDATA+1,UCBONLI,W2,BR=GATHER21
         COUNT GATHDATA,UCBNOTRD,W3
         COUNT GATHDATA+1,UCBALOC,W4
         TM    GATHDATA+3,X'FF'
         BZ    *+6
         ALR   W5,R1
         COUNT GATHDATA,UCBQISCE,W6
         COUNT GATHDATA,UCBNOTRC,W7
         STM   W2,W7,DEVONLN
         IC    R0,UCBDMCT
         N     R0,=A(UCBDMC)
         DISTRIB =A(DISTCNT),3
         AIF   ('&SYSSPLV' LT '2').OLDUSE                        93197
         ICM   R0,3,UCBUSER  GET USE COUNT                       93197
         AGO   .COMUSE                                           93197
.OLDUSE  IC    R0,UCBUSER
.COMUSE  DISTRIB =A(DISTCNT),4
         TM    GATHDATA,UCBNOTRD    SKIP IF UNIT NOT READY
         BO    GATHER21
         TM    GATHDATA,UCBNOTRC+UCBBUSYD  CU OR DEV BUSY?
         BZ    GATHER14                    NO
         LH    R0,GATHDATA+2               YES, RECORD RESERVES
         DISTRIB =A(DISTCNT),2
GATHER14 TM    GATHDATA,UCBNOTRC
         BO    GATHER21
         LM    W2,W5,DEVBUSY
         LA    R1,1
GATHER16 COUNT GATHDATA,UCBBUSYD,W2,BR=GATHER21
         COUNT GATHDATA,UCBBSY+UCBPST+UCBACTV,W3
         AIF   (&MVSXA).NOXCPU2                                  93103
         ICM   R15,3,UCBCHA  COUNT ALT CHAN AND ALT PATH USAGE   93103
         N     R15,=X'00000FFF'  KILL FLAGS                      93103
         AGO   .NOCPUX2                                          93103
.NOXCPU2 LR    R15,W0        COPY CPU ADDRESS                    93103
         SH    R15,=H'512'                                       93103
         USING UCB,R15       DECLARE PREFIX                      93103
         TM    UCBLPUM,X'80'  PRIMARY PATH USED LAST ?           93103
         BNZ   GATHPRIM      YES                                 93103
         DROP  R15                                               93103
         AGO   .NOCPU3                                           93103
.NOCPUX2 AIF   (&MVSXA OR NOT &MVSSP).NOCPU2                     93103
         ICM   R15,OIOO,UCBCPU  GET CPU OF LAST SIO              93103
.NOCPU2  ANOP  ,                                                 93103
GATHER17 C     R15,DEVPATH                                       93103
         BE    GATHPRIM
         AIF   (&MVSXA OR NOT &MVSSP).NOCPU3                     93103
         BNL   GATHALTP                                          93103
         STCM  R15,3,DCPU   UPDATE WITH LOWER CPU                93103
         B     GATHPRIM                                          93103
.NOCPU3  ANOP  ,                                                 93103
GATHALTP ALR   W5,R1
GATHPRIM DS    0H                                                93197
         AIF   ('&SYSSPLV' LT '2').OLDSEEK                       93197
         TM    GATHDATA,UCBACTV+UCBBUSYD  CYL ADDRESS VALID ?    93197
         BZ    GATHER19      NO                                  93197
         CR    W2,R1         FIRST TIME ?                        93197
         BNH   GATHER19      YES; TRAVEL NOT MEANINGFUL          93197
         AGO   .COMSEEK                                          93197
.OLDSEEK TM    GATHDATA,UCBPSNS
         BO    GATHER19
         TM    GATHDATA,X'04'
         BZ    GATHER19
         TM    GATHDATA,X'02'
         BNO   GATHER18    NOT SEEK, MAYBE XFER ON DRUM
         ALR   W4,R1       SEEK
.COMSEEK LH    R0,THISCC     FOR S-A SEEK HISTOGRAM
         SH    R0,DLASTCC    GET AMOUNT OF ARM TRAVEL            93197
         LPR   R0,R0                                             93197
         DISTRIB DEVDIST,1
         B     GATHER19
GATHER18 ALR   W3,R1    COUNT AS XFER
GATHER19 STM   W2,W5,DEVBUSY
         LH    R0,THISCC     PLOT POSITION WHEN BUSY
         DISTRIB DEVDIST,0
         CLI   UCBTBYT4,X'06'
         BH    GATHER3
         DROP  W0
*
GATHER21 LA    W1,DEVICEL(,W1)
         C     W1,LASTDEV
         BL    GATHER1                                           93197
         B     MAINT
GATHER3  MVC   LASTCC,DLASTCC   LAST SEEK OF THIS DEVICE
         MVC   DLASTCC,THISCC   UPDATE FOR NEXT PASS
         TM    OPTIONS,OPT1     SUPPRESS?
         BZ    GATHER21         YES.
         LR    W4,W1     SET FOR START SCAN
GATHER4  LR    W5,W4     A(PREVIOUS BLOCK)
         L     W4,8(,W5) A(NEXT BLOCK)
         LTR   W4,W4     IS THERE ANY?
         BZ    GATHER51  NO, JUST ADD AN ENTRY
         CLC   LASTCC,0(W4) IS BLOCK SEEK THIS SEEK?
         BL    GATHER53
         BH    GATHER4
         CLC   THISCC,2(W4) IS THE 'TO' CYL THE SAME TOO?
         BL    GATHER53
         BE    GATHER50
         B     GATHER4
GATHER50 INC   R1,4(,W4)
         B     GATHER21
GATHER51 L     R1,NEXTFREE
         LR    W0,R1          SAVE THE POINTER
         LA    R1,12(,R1)
         C     R1,TOPCORE
         BNL   GATHER60       NO MORE SPACE
         ST    R1,NEXTFREE
         ST    W0,8(,W5)    LINK THE ENTRY BLOCKS
         MVC   0(2,W0),LASTCC
         MVC   2(2,W0),THISCC
         LA    R1,1
         ST    R1,4(,W0)
         XC    8(4,W0),8(W0)
         B     GATHER21
GATHER53 L     R1,NEXTFREE     INSERT A ENTRY BLOCK
         LR    W0,R1           SAVE THE POINTER
         LA    R1,12(,R1)
         C     R1,TOPCORE
         BNL   GATHER60      NO MORE SPACE
         ST    R1,NEXTFREE
         MVC   0(2,W0),LASTCC
         MVC   2(2,W0),THISCC
         LA    R0,1
         ST    R0,4(,W0)
         L     R0,8(,W5)      LINK THE NEW BLOCK IN
         ST    R0,8(,W0)
         ST    W0,8(,W5)
         B     GATHER21
*   OUT OF SPACE
GATHER60 OI    FLAGS,GFAIL
         INC   R1,LOSTDATA
         LH    R1,DEVLOST
         LA    R1,1(,R1)
         STH   R1,DEVLOST
         B     GATHER21
         DROP  W1
*
MAINT    STIMER WAIT,BINTVL=SECONDS
         L     R1,SAMPLES
         LA    R1,1(,R1)
         ST    R1,SAMPLES
MAINU    L     R1,ACSCBECB
         TM    0(R1),X'50'
         BO    MAINZ          OPER-STOP WAS ISSUED
         TM    TIMRECB,X'40'
         BO    MAINZ
MAINV    L     R1,CURRENT
         A     R1,SECONDS
         ST    R1,CURRENT
         C     R1,PERIOD
         BL    GATHER
MAINZ    MODESET KEY=NZERO
         WTO   'SEEKMON: SAMPLING TERMINATED **',ROUTCDE=(1,11)
         TIME  BIN
         ST    R0,ENDTME
         S     R0,SAMPLET
         ST    R0,SAMPLET
         TM    OPTIONS,OPT2
         BO    REPORT           ATTACH NOT USED
         TM    TIMRECB,X'40'
         BO    MAINZ1           TASK ALREADY TERMINATED
         POST  TIMRECB2
         WAIT  1,ECB=TIMRECB    WAIT FOR TASK TO TERMINATE
MAINZ1   DETACH TIMRTCB         REMOVE THE TASK
         B     REPORT
         SPACE 2                                                 85203
         PUSH USING                                              85203
         DROP  ,                                                 85203
         USING EXITSPIE,R15                                      85203
EXITSPIE ICM   R2,15,RETSPIE  ANY USER EXIT ?                    85203
         BZR   R14           NO; RETURN                          85203
         AIF   ('&SYSSPLV' LT '2').SPIEOLD                       93197
         ST    R2,EPIEPSW+4-EPIE(,R1)                            93197
         AGO   .SPIECOM                                          93197
.SPIEOLD ST    R2,8(,R1)     SET RECOVERY ADDRESS                85203
.SPIECOM BR    R14                                               85203
RETSPIE  DC    A(0)                                              85203
PREVSPIE DC    A(0)                                              93197
         POP   USING                                             85203
         EJECT
*----------------------------------------------------------------------
*  SUBROUTINES TO PRINT LINES WITH SELECTED CARRIAGE CONTROL.
*        INPUT - 'LINE' SHOULD CONTAIN DESIRED PRINT DATA.
*----------------------------------------------------------------------
PUTSP1   PRTUPD ' ',1        SPACE 1 LINE BEFORE PRINTING
PUTSP2   PRTUPD '0',2        SPACE 2 LINES BEFORE PRINTING
PUTSP3   PRTUPD '-',3        SPACE 3 LINES BEFORE PRINTING
PUTSK1   PRTUPD '1',999      PAGE EJECT BEFORE PRINTING
PUT      AH    R1,LINECNT    UPDATE THE LINE COUNT
         STH   R1,LINECNT
         CH    R1,LINEMAX     END OF A PAGE
         BL    PUT0           BR IF NOT
         LH    R1,PAGECNT
         LA    R1,1(,R1)
         STH   R1,PAGECNT
         CVD   R1,WORK
         OI    WORK+7,X'F'
         UNPK  PAGENO,WORK
         PUT   SYSPRINT,TITLE
         LA    R1,3
         STH   R1,LINECNT
         MVI   SPACE,C'0'    DOUBLE SPACE FROM TOP
PUT0     PUT   SYSPRINT,SPACE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    LINK           RETURN TO CALLER
*
TITLE    DC    CL133'1'
         ORG   TITLE+124
         DC    C'PAGE '
PAGENO   DC    CL4' '
         ORG   ,
PAGECNT  DC    H'0'
LINECNT  DC    H'0'
LINEMAX  DC    H'78'          MAX LINES PER PAGE
*----------------------------------------------------------------------
*  SUBROUTINE TO CONVERT TIMER UNITS TO TOD.
*        INPUT - W1=TOD IN 52 MICROSEC UNITS.
*        OUTPUT - TIME OF DAY IN 'TOD'.
*
*   CONVERT HUNDRETHS OF SEC TO HH.MM.SS
TODCNVTA MVC   TOD,TODZERO
         XC    TODSEC(4),TODSEC
         LTR   W1,W1     SKIP IF ZERO
         BZR   LINK
         XR    W0,W0
         D     W0,=F'100'     CONVERT TO SECONDS
         B     TODCNVT1       CONTINUE WITH OTHER S/R
*   CONVERT TIMER UNITS TO HH.MM.SS
TODCNVT  MVC   TOD,TODZERO    SET DEFAULT TOD
         MVC   TODSEC(4),=F'0'
         LTR   W1,W1          IS VALUE ZERO
         BCR   8,LINK         RETURN IF YES
         SR    W0,W0          ZERO FOR DIVIDE
         D     W0,=F'300'     GET INTO SECONDS
TODCNVT1  ST    W1,TODSEC
         LTR   W1,W1          ANY SECONDS
         BCR   8,LINK         RETURN IF NO TIME
         SR    W0,W0          ZERO FOR DIVIDE
         D     W0,=F'3600'    GET HOURS IN W1
         CVD   W1,WORK
         UNPK  TOD(2),WORK
         OI TOD+1,X'F0'
         LTR   W0,W0          ANY REMAINING SECONDS
         BCR   8,LINK         RETURN IF NO
         LR    W1,W0          GET READY FOR DIVIDE
         SR    W0,W0
         D     W0,=F'60'      GET MINUTES IN W1
         CVD   W1,WORK
         UNPK  TOD+3(2),WORK
         OI    TOD+4,X'F0'
         CVD   W0,WORK        GET REMAINING SECONDS
         UNPK  TOD+6(2),WORK
         OI    TOD+7,X'F0'
         BR    LINK           RETURN TO CALLER
TODZERO  DC    CL8'00.00.00'  DEFAULT TIME VALUE
TOD      DC    CL8'HH.MM.SS'  CONVERTED TIME OF DAY
*----------------------------------------------------------------------
*   SUBROUTINE TO SCAN/MERGE THE PARMS
SCAN     LA    W3,PARMDFLT
         LA    R15,3       FIRST TWO COMMAS
         CH    W1,=Y(L'PARMDFLT)
         BNH   *+8
         LA    W1,L'PARMDFLT
SCAN1    CLI   0(W2),C','
         BE    SCAN2
         CLI   0(W3),C','
         BE    SCAN3
         CLI   0(W2),C'X'
         BE    *+12
         IC    R0,0(,W2)
         STC   R0,0(,W3)
         LA    W2,1(,W2)
         LA    W3,1(,W3)
         BCT   W1,SCAN1
         BR    LINK
SCAN2    LA    W2,1(,W2)     BUMP OVER THE COMMA
SCAN2A   CLI   0(W3),C','    POSITION TO NEXT COMMA
         BE    SCAN2B
         LA    W3,1(,W3)
         B     SCAN2A
SCAN2B   LA    W3,1(,W3)
         BCT   W1,SCAN4
         BR    LINK
SCAN3    LA    W3,1(,W3)     BUMP OVER THE COMMA
SCAN3A   CLI   0(W2),C','    FIND THE OTHER COMMA
         BE    SCAN3B
         LA    W2,1(,W2)
         BCT   W1,SCAN3A
         BR    LINK
SCAN3B   LA    W2,1(,W2)
         BCT   W1,SCAN4
         BR    LINK
SCAN4    BCT   R15,SCAN1    CONTINUE IF ONE OF FIRST TWO
SCAN5    IC    R0,0(,W2)
         STC   R0,0(,W3)
         LA    W2,1(,W2)
         LA    W3,1(,W3)
         BCT   W1,SCAN5
         BR    LINK
*----------------------------------------------------------------------
*   SUBROUTINE TO PROCESS THE UNITNAME PARM SPACIFICATION
FNDUNIT  CH    W5,=H'3'      ANY MORE TO DO ?                    93197
         BNPR  LINK          NO; QUIT                            93197
         CLI   0(W4),C' '    VALID TEXT ?
         BNHR  LINK          PROBABLY NOT                        93197
         CH    W5,=H'6'      LONG ENOUGH FOR DOUBLE ENTRY ?      93197
         BNH   FNDUNIT1                                          93197
         CLI   3(W4),C'-'
         BE    FNDUNIT2      PROCESS RANGE
FNDUNIT1 MVC   UNITNAME,0(W4)
         LA    W4,4(,W4)     SET FOR NEXT TIME
         SH    W5,=H'4'      RESIDUAL LENGTH
         B     4(,LINK)      PROCESS THIS ONE                    93197
FNDUNIT2 CLC   UNITNAME(3),0(W4)  FIRST TIME FOR THIS RANGE ?    93197
         BE    FNDUNIT3      NO; INCREMENT                       93197
         MVC   UNITNAME,0(W4)
         B     4(LINK)
FNDUNIT3 CLC   UNITNAME+2(1),4(W4)  REACHED END OF RANGE ?       93197
         BNE   FNDUNIT4      YES                                 93197
         MVI   UNITNAME,C' '  FORCE MISMATCH ON NEXT             93197
         LA    W4,6(,W4)
         SH    W5,=H'6'
         BP    FNDUNIT       TRY NEXT ENTRY                      93197
         BR    LINK
FNDUNIT4 SLR   R1,R1                                             93197
         IC    R1,2(W4)      GET LAST CHARACTER DONE             93197
         N     R1,=X'0000001F'  MASK                             93197
         IC    R1,NEXTHEX(R1)   GET NEXT CHARACTER               93197
         STC   R1,UNITNAME+2                                     93197
         STC   R1,2(W4)      REMEMBER                            93197
         B     4(,LINK)
*----------------------------------------------------------------------
*       DISTRIBUTION TABLE UPDATE SUBROUTINES
*----------------------------------------------------------------------
*
*   PLACE A VALUE IN A DISTRIBUTION TABLE
*        R0 = ARGUMENT VALUE
*        R1 = A(TABLE OF DISTRIBUTION VALUES)
*        R15 = A(DISTRIBUTION TABLE TO BE UPDATED)
*        R14 = WORK REG
         USING $TAB,R15
DISTRIB  LA    R14,$TABC-$TAB(,R15)
DIST1    CLC   =A(HIVALUE),0(R1)
         BE    DIST2
         C     R0,0(,R1)
         BNH   DIST2
         A     R1,=F'4'
         A     R14,=F'4'
         B     DIST1
DIST2    L     R1,0(,R14)
         LA    R1,1(,R1)       UPDATE COUNTER
         ST    R1,0(,R14)
         L     R1,$TABA-$TAB(,R15)
         AR    R1,R0           UPDATE SUM
         ST    R1,$TABA-$TAB(,R15)
         L     R1,$TABB-$TAB(,R15)
         LA    R1,1(,R1)       UPDATE TOTAL COUNT
         ST    R1,$TABB-$TAB(,R15)
         C     R0,$TABD
         BNL   *+8
         ST    R0,$TABD
         C     R0,$TABE
         BNH   *+8
         ST    R0,$TABE
         BR    LINK
         DROP  R15
         EJECT
*----------------------------------------------------------------------
OPENERR  WTO   'SEEKMON: SYSPRINT OPEN ERROR',ROUTCDE=(1,11)
         ABEND 1
*
NOCORE   WTO   'SEEKMON: REGION TOO SMALL',ROUTCDE=(1,11)
         ABEND 2,DUMP
*
BADPARM  WTO   'SEEKMON: INVALID PARM SPECIFIED',ROUTCDE=(1,11)
         ABEND 3,DUMP
*
RETURN   TM    OPTIONS,X'80'
         BO    RETURNX
         FREEMAIN V,A=GOTTENA      FREE THE GOTTEN CORE
RETURNX  DASHES BR=PUTSP2
         SPIE  0             CANCEL THE SPIE                     85203
         AIF   ('&SYSSPLV' LT '2').NOSPCAN                       93197
         L     R2,PREVSPIE                                       93197
         ESPIE RESET,(R2)    CANCEL ESPIE                        93197
.NOSPCAN MVC   LINE(L'MSGEND),MSGEND
         BAL   LINK,PUTSP2
         L     R1,NEXTFREE
         AIF   ('&SYSSPLV' LT '2').NOGETM                        93197
         S     R1,DEVTBL     DEVICE TABLE ALSO DYNAMIC           93197
         AGO   .CMGETM                                           93197
.NOGETM  S     R1,GOTTENA
.CMGETM  A     R1,=A(PGMSIZE+PGMSIZE0)
         LH    R0,SYSPRINT+DCBBLKSI-IHADCB
         SLL   R0,1
         AR    R1,R0
         LA    R1,2047(,R1)       ROUND-UP THE VALUE
         SRL   R1,11       CONVERT TO K
         SLL   R1,1
         LA    R1,4(,R1)   ADD IN THE 4K FUDGE
         CVD   R1,WORK     NOW FORMAT AND PRINT
         OI    WORK+7,X'F'
         UNPK  LINE+2(3),WORK
         MVC   LINE+5(15),=CL15'K STORAGE USED,'
         L     R1,TOPCORE
         S     R1,NEXTFREE
         SRL   R1,11
         SLL   R1,1
         CVD   R1,WORK
         OI    WORK+7,X'F'
         UNPK  LINE+22(3),WORK
         MVC   LINE+25(12),=CL12'K STILL FREE'
         BAL   LINK,PUTSP1
         L     R1,LOSTDATA
         CVD   R1,WORK
         OI    WORK+7,X'F'
         UNPK  LINE+2(5),WORK
         MVC   LINE+8(17),=CL17'DATA POINTS LOST.'
         BAL   LINK,PUTSP1
         CLOSE SYSPRINT
         TM    OPTIONS,X'80'
         BZ    RETURNZ
         ABEND 999,DUMP
RETURNZ  PGMEXIT  RC=0                                          GP05161
         EJECT
*----------------------------------------------------------------------
*       GENERATE THE ACTIVITY REPORT
*----------------------------------------------------------------------
SEEKMON  CSECT ,
REPORT   PRT2  BGNTME,0,'  START TIME ='
         PRT2  ENDTME,25,'   STOP TIME ='
         L     W1,ENDTME
         S     W1,BGNTME
         ST    W1,WORK
         PRT2  WORK,50,'ELAPSED TIME ='
         BAL   LINK,PUTSP2
*
         MVC   LINE(WR200A),WR200
         L     W2,SAMPLES
         CVD   W2,WORK
         ED    WR200B(L'WR201),WORK+4
         XR    W0,W0
         L     W1,SAMPLET
         D     W0,SECONDS
         CVD   W1,WORK
         ED    WR200C(L'WR202),WORK+4
         BAL   LINK,PUTSP2
*----------------------------------------------------------------------
         USING DEVICE,W1
         L     W1,DEVTBL                                         93197
REPORT1  ICM   W0,15,UNITADDR                                    84099
         BNZ   REPORT11
REPORT10 LA    W1,DEVICEL(,W1)    UPDATE THE POINTER
         C     W1,LASTDEV         ARE WE DONE?
         BL    REPORT1            NO, CONTINUE                   93197
         SPACE 1                                                 93103
         MVI   TITLE+1,C' '                                      93103
         MVC   TITLE+2(21),TITLE+1  CLEAR TITLE                  93103
         MVC   TITLE+1(7),=C'SUMMARY'                            93103
         OI    LINECNT,X'7F'  FORCE EJECT                        93103
         MVC   LINE(10),=C'CUU VOLSER'                           93197
         MVC   LINE+10+6(4),=C'BUSY'                             93197
         MVC   LINE+20+6(4),=C'DATA'                             93197
         MVC   LINE+30+2(8),=C'ALT.PATH'                         93197
         MVI   LINE+49,C'0'                                      93197
         MVC   LINE+50+47(3),=C'100'                             93197
         MVC   LINE+50+22(6),=C'% BUSY'                          93197
         BAL   LINK,PUTSP1   PRINT COLUMN HEADERS                93197
         BAL   LINK,PUTSP1   SPACE TO FIRST ENTRY                93197
         L     W1,DEVTBL     GET DEVICE TABLE BACK               93197
SUMMLOOP ICM   W0,15,UNITADDR  IS THERE A UCB ?                  93103
         BZ    SUMMBUMP      NO; SKIP                            93103
         USING UCBOB,W0      DECLARE UNIT                        93103
         MVC   LINE(3),UCBNAME  IDENTIFY UNIT                    93103
         CLI   UCBVOLI,C'$'  PRINTABLE SERIAL ?                  93103
         BL    SUMMNVOL      NO                                  93103
         CLI   UCBVOLI,C'9'  REALLY ?                            93103
         BH    SUMMNVOL      NO                                  93103
         MVC   LINE+3+1(6),UCBVOLI  COPY SERIAL                  93103
SUMMNVOL MVC   LINE+10(10),WR201  MOVE STANDARD MASK             93103
         L     R0,DEVBUSY    GET BUSY COUNT                      93103
         CVD   R0,DB         CONVERT                             93103
         ED    LINE+10(10),DB+4  EDIT NEATLY                     93103
         MVC   LINE+20(10),WR201                                 93103
         L     R0,DEVXFER    GET TRANSFER                        93103
         CVD   R0,DB                                             93103
         ED    LINE+20(10),DB+4                                  93103
         MVC   LINE+30(10),WR201                                 93103
         L     R0,DEVALT                                         93103
         CVD   R0,DB                                             93103
         ED    LINE+30(10),DB+4  ALTERNATE PATH HITS             93103
         SPACE 1                                                 93103
         ICM   R15,15,DEVBUSY   GET DEVICE BUSY                  93103
         BZ    SUMMPRNT      SKIP OUT                            93103
         MVI   LINE+50,C'-'  SET SYMBOL                          93103
         C     R15,DEVXFER   SAME AS TRANSFER ?                  93103
         BNH   SUMMXFER      YES; DO ONLY ONE                    93103
         M     R14,=F'50'    SCALE TO 50 POINTS                  93103
         D     R14,SAMPLES   SCALE TO SAMPLING                   93103
         LTR   R15,R15       ANY AT ALL ?                        93103
         BZ    SUMMXFER      NO; SKIP                            93103
         BCTR  R15,0                                             93103
         EX    R15,SUMMMOVE  MOVE LINE                           93103
SUMMXFER ICM   R15,15,DEVXFER  ANY TRANSFER ?                    93103
         BZ    SUMMPRNT                                          93103
         MVI   LINE+50,C'+'  SHOW ACTIVE                         93103
         M     R14,=F'50'    SCALE                               93103
         D     R14,SAMPLES                                       93103
         LTR   R15,R15                                           93103
         BZ    SUMMPRNT                                          93103
         BCTR  R15,0                                             93103
         EX    R15,SUMMMOVE                                      93103
SUMMPRNT BAL   LINK,PUTSP1   SINGLE SPACE                        93103
SUMMBUMP LA    W1,DEVICEL(,W1)                                   93103
         C     W1,LASTDEV                                        93103
         BL    SUMMLOOP                                          93103
         B     RETURN
SUMMMOVE MVC   LINE+51(0),LINE+50                                93103
         SPACE 1                                                 93103
         USING UCBOB,W0                                          84099
REPORT11 DASHES BR=PUTSP1
         IC    R1,UCBTBYT4     DEVICE TPYE
         N     R1,=F'15'
         BCTR  R1,0
         SLL   R1,3
         LA    R1,M10(R1)
         MVC   TITLE+1(8),0(R1)
         MVC   TITLE+11(3),UCBNAME
         MVI   TITLE+14,C'/'
         MVC   TITLE+15(6),UCBVOLI
         OC    TITLE+15(6),=CL6' '  BLANK NULLS FOR OFF-LINE    GP06358
         DASHES BR=PUTSK1,CHAR==
         MVC   M01A(3),UCBNAME
         MVC   M01B(6),UCBVOLI
         OC    M01B(6),=CL6' '      BLANK NULLS FOR OFF-LINE    GP06358
         MVC   LINE(M01L),M01
         L     R1,SAMPLES
         LA    R14,LINE+M01F-M01
         BAL   LINK,REPORTA
         LH    R1,DEVLOST
         LA    R14,LINE+M01G-M01
         BAL   LINK,REPORTA
         BAL   LINK,PUTSP1
         DASHES BR=PUTSP1,CHAR==
         BAL   LINK,REPORTG
         MVC   LINE(L'M08),M08
         MVC   LINE+44(L'M08),M08+L'M08
         MVC   LINE+88(L'M08),M08+2*L'M08
         BAL   LINK,REPORTG
         DASHES BR=REPORTG
         REPORTC LINE+44
         REPORTC LINE+88
         BAL   LINK,REPORTG
         LA    W3,M07
         LA    W4,7
         LA    W5,DEVONLN
         L     W6,SAMPLES
         LA    W7,M07CNT-7
         STM   W3,W7,$SAVE3
         L     W7,DEVDIST
         L     W3,DEVTBLPT
         LR    W6,W3
         USING $TAB,W6
         XR    W5,W5
         XR    W4,W4
         LA    W6,$TABC
         STM   W3,W7,$SAVE4
         LA    W3,$TABL(,W3)
         LA    W6,$TABC-$TAB(,W3)
         STM   W3,W7,$SAVE5
*
*   COUNTS PLUS CYL POSITION HISTOGRAMS
*
REPORT2A LM    W3,W7,$SAVE3
         LTR   W4,W4
         BM    REPORT22
REPORT21 MVC   LINE(L'M07),0(W3)
         L     R1,0(,W5)
         LA    R14,LINE+30
         BAL   LINK,REPORTA
         LR    R15,W6
         LA    R14,LINE+20
         BAL   LINK,REPORTB
         LA    W3,L'M07(,W3)
         LA    W5,4(,W5)
         LTR   W4,W4
         BZ    REPORT2B
         L     W6,DEVONLN
         BCT   W4,REPORT22
         L     W6,DEVBUSY
         B     REPORT22
REPORT2B L     W6,DEVBUSY
         BCT   W7,REPORT22
         L     W4,=F'-1'
REPORT22 STM   W3,W7,$SAVE3
         MVI   PRTHEX,C'1'            SET TO PRINT VALUES IN HEX    RVH
         REPORTD $SAVE4,LINE+44
         REPORTD $SAVE5,LINE+88
         MVI   PRTHEX,C'0'            TURN OFF HEX VALUE PRINT      RVH
         TESTBL LINE,LINE+44+20,LINE+88+20,REPORT23,REPORT24
REPORT23 BAL   LINK,REPORTG
         B     REPORT2A
*
REPORT24 BAL   LINK,REPORTG
         MVC   LINE+44(M13L),M13
         MVC   LINE+88(M13L),M13
         BAL   LINK,REPORTG
         REPORTF $SAVE4,LINE+44
         REPORTF $SAVE5,LINE+88
         BAL   LINK,REPORTG
         DASHES BR=REPORTG,CHAR==
*
*   COUNTER HISTOGRAMS
*
         BAL   LINK,REPORTG
         MVC   LINE(L'M09),M09
         MVC   LINE+44(L'M09),M09+L'M09
         MVC   LINE+88(L'M09),M09+2*L'M09
         BAL   LINK,REPORTG
         DASHES BR=REPORTG
         REPORTC LINE
         REPORTC LINE+44
         REPORTC LINE+88
         BAL   LINK,REPORTG
         L     W3,DEVTBLPT
         LA    W3,2*$TABL(,W3)
         XR    W4,W4
         XR    W5,W5
         LA    W6,$TABC-$TAB(,W3)
         L     W7,=A(DISTCNT)
         STM   W3,W7,$SAVE3
         LA    W3,$TABL(,W3)
         LA    W6,$TABC-$TAB(,W3)
         STM   W3,W7,$SAVE4
         LA    W3,$TABL(,W3)
         LA    W6,$TABC-$TAB(,W3)
         STM   W3,W7,$SAVE5
REPORT25 REPORTD $SAVE3,LINE
         REPORTD $SAVE4,LINE+44
         REPORTD $SAVE5,LINE+88
         TESTBL LINE+20,LINE+44+20,LINE+88+20,REPORT26,REPORT27
REPORT26 BAL   LINK,REPORTG
         B     REPORT25
REPORT27 BAL   LINK,REPORTG
         MVC   LINE(M13L),M13
         MVC   LINE+44(M13L),M13
         MVC   LINE+88(M13L),M13
         BAL   LINK,REPORTG
         REPORTF $SAVE3,LINE
         REPORTF $SAVE4,LINE+44
         REPORTF $SAVE5,LINE+88
         BAL   LINK,REPORTG
         DASHES BR=PUTSP1,CHAR==
REPORT29 L     W5,DEVBUSY
         LTR   W5,W5
         BZ    REPORT10
         TM    OPTIONS,OPT1    SKIP IF SUPPRESSED
         BZ    REPORT10
*
*   CYLINDER MOVEMENT REPORTS
*
         MVI   LINE,C'*'
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+50(M12L),M12
         CVD   W5,WORK
         ED    LINE+50+M12A-M12(10),WORK+4
         LA    R15,PUTSK1    ASSUME PAGE EJECT
         LH    R1,LINECNT
         LA    R1,15(,R1)
         CH    R1,LINEMAX
         BNL   *+8
         LA    R15,PUTSP1
         BALR  LINK,R15
         DASHES BR=PUTSP1
         L     W5,CYLENTRY   PRTN TO FIRST BLOCK
         LTR   W5,W5
         BZ    REPORT10      NOTHING TO REPORT
         ST    W5,$SAVE1+8
         LA    W2,REPORT40
         LA    W3,$SAVE1
         LA    W4,1
         STM   W2,W7,$SAVE2
         LA    W3,$SAVE1+2
         BAL   R15,REPORT45
         NOP   0
         STM   W2,W7,$SAVE3
         LA    W3,$SAVE1+4
         BAL   R15,REPORT45
         NOP   0
         STM   W2,W7,$SAVE4
** MOVEMENT CONTROL LOOP
REPORT30 LM    W2,W7,$SAVE2        COL NO. 1
         LA    R14,LINE
         BALR  LINK,W2
         STM   W2,W7,$SAVE2
         LM    W2,W7,$SAVE3        COL NO. 2
         LA    R14,LINE+44
         BALR  LINK,W2
         STM   W2,W7,$SAVE3        COL NO. 3
         LM    W2,W7,$SAVE4
         LA    R14,LINE+88
         BALR  LINK,W2
         STM   W2,W7,$SAVE4        TEST IF DONE
         A     W4,$SAVE2+2*4
         A     W4,$SAVE3+2*4
         LTR   W4,W4
         BZ    REPORT10
         BAL   LINK,REPORTG
         B     REPORT30
** MOVEMENT PROCESSING
REPORT40 XR    W6,W6
         LTR   W5,W5
         BZ    REPORT44
         MVC   0(2,W3),0(W5)
         LR    W7,W5
REPORT41 A     W6,4(,W7)           CALC COUNTS FOR THIS CYL
         L     W7,8(,W7)
         LTR   W7,W7
         BZ    REPORT42
         CLC   0(2,W3),0(W7)
         BE    REPORT41
REPORT42 BALR  W2,LINK
         MVI   0(R14),C'-'
         MVC   1(40,R14),0(R14)
         MVC   10(M02L,R14),M02
         LH    R0,0(,W5)
         CVD   R0,WORK
         ED    10+M02A-M02(4,R14),WORK+6
         BALR  W2,LINK
         MVC   0(M03L,R14),M03
         XR    R0,R0
         LR    R1,W6
         M     R0,=F'100'
         D     R0,DEVBUSY
         CVD   R1,WORK
         ED    0(4,R14),WORK+6
         LR    R1,W6
         LA    R14,M03A-M03(,R14)
         BAL   W2,REPORTA
         MVC   0(L'M04,R14),M04
         BALR  W2,LINK
REPORT43 MVC   0(M05L,R14),M05
         LH    R0,2(,W5)
         CVD   R0,WORK
         ED    M05A-M05(4,R14),WORK+6
         ST    W6,WORK
         PERCENT 4(,W5),WORK,M05B-M05
         PERCENT 4(,W5),DEVBUSY,M05C-M05
         L     R1,4(,W5)
         LA    R14,M05L(,R14)
         BAL   W2,REPORTA
         L     W5,8(,W5)
         LTR   W5,W5
         BZ    REPORT44
         CLC   0(2,W3),0(W5)
         BE    REPORT43
         BAL   R15,REPORT45
         B     REPORT44
         B     REPORT40
** THIS COLUMN IS DONE ... IDLE TIL REST ARE DONE
REPORT44 LA    W4,0
         LA    W2,REPORT44
         BR    LINK
** GET NEXT CYL CHAIN STARTING ADDR
REPORT45 L     W5,$SAVE1+8
         LTR   W5,W5
         BZ    REPORT47
         LR    R1,W5
REPORT46 L     W5,8(,W5)
         LTR   W5,W5
         BZ    REPORT47
         CLC   0(2,R1),0(W5)
         BE    REPORT46
         ST    W5,$SAVE1+8
         B     4(R15)
REPORT47 ST    W5,$SAVE1+8
         BR    R15
   EJECT ,
*----------------------------------------------------------------------
*     REPORT  SUBROUTINES
*----------------------------------------------------------------------
*
*   FORMAT S/R 7 DIGIT VALUE
REPORTA  CVD   R1,WORK
         MVC   0(10,R14),=X'40206B2020206B202120'
         ED    0(10,R14),WORK+4
         BR    LINK
*   FORMAT S/R 2 .. PERCENT
REPORTB  XR    R0,R0
         M     R0,=F'100'   TO GET PERCENT
         LTR   R15,R15
         BZR   LINK
         DR    R0,R15
         CVD   R1,WORK
         MVC   0(5,R14),=X'402021206C'
         ED    0(4,R14),WORK+6
         BR    LINK
*   FORMAT THE DISTRIBUTION PLOT HEADING
REPORTC  MVC   0(10,R14),=CL10'RAW-COUNTS'
         MVC   12(6,R14),=CL6'VALUES'
         MVI   20(R14),C'0'
         MVC   29(2,R14),=C'50'
         MVC   38(3,R14),=C'100'
         BR    LINK
*   FORMAT THE BASIC HISTOGRAM LINE
REPORTD  L     R0,$TABB-$TAB(,W3)
         LTR   R0,R0
         BNZ   REPORTD0
         LTR   W5,W5
         BMR   LINK
         MVC   20(15,R14),=CL15'**NO ACTIVITY**'
         L     W5,=F'-1'
         BR    LINK
REPORTD0 CR    W5,R0
         BNLR  LINK
         LR    R0,W4
         L     R15,0(,W6)
         L     R1,0(,W7)
         LA    W4,1(,R1)
         CVD   R15,WORK
         MVC   0(10,R14),=X'40206B2020206B202120'
         ED    0(10,R14),WORK+4
*                                                                   RVH
*        ROUTINE TO PRINT VALUES (CYL ADDR) IN HEX                  RVH
*                                                                   RVH
         CLI   PRTHEX,C'1'             ARE WE TO PRINT IN HEX       RVH
         BNE   REPORTDB                NO  - SKIP THIS CODE         RVH
         C     R1,=A(HIVALUE)          CHECK FOR MAX VALUE          RVH
         BE    REPORTDA                YES  - SET "MAX" IN LINE     RVH
         ST    R1,WORK                 SAVE VALUE TO BE PRINTED     RVH
         UNPK  HEXAREA(5),WORK+2(3)    GET IN ZONED FORM            RVH
         TR    HEXAREA(4),HEXTBL-240   GET INTO PRINTABLE FORM      RVH
         MVC   15(3,R14),HEXAREA+1     PUT INTO THE PRINT LINE      RVH
         B     *+10                    SKIP NEXT INSTRUCTION        RVH
REPORTDA MVC   15(3,R14),=C'MAX'       SET IN "MAX" FOR VALUE       RVH
         MVI   14(R14),C'-'            PUT IN THE "-"               RVH
         ST    R0,WORK                 SAVE VALUE TO BE PRINTED     RVH
         UNPK  HEXAREA(5),WORK+2(3)    GET IN ZONED FORM            RVH
         TR    HEXAREA(4),HEXTBL-240   GET INTO PRINTABLE FORM      RVH
         MVC   11(3,R14),HEXAREA+1     PUT INTO THE PRINT LINE      RVH
         B     REPORTDC                BRANCH AROUND DATA AREAS     RVH
PRTHEX   DC    C'0'                    VALUE FOR PRT OPTION         RVH
HEXAREA  DC    CL5' '                  WORK AREA                    RVH
REPORTDB DS    0H                      TAG                          RVH
*                                                                   RVH
*        END OF MODIFICATION TO PRINT VALUES IN HEX                 RVH
*                                                                   RVH
         C     R1,=A(HIVALUE)
         BE    REPORTD1
         CVD   R1,WORK
         MVC   14(4,R14),=X'40202120'
         ED    14(4,R14),WORK+6
         B     *+10
REPORTD1 MVC   15(3,R14),=C'MAX'
         MVI   14(R14),C'-'
         CVD   R0,WORK
         MVC   10(4,R14),=X'40202120'
         ED    10(4,R14),WORK+6
REPORTDC DS    0H                      TAG TO BRANCH TO             RVH
REPORTD2 MVI   20(R14),C'.'
         MVI   30(R14),C'.'
         MVI   40(R14),C'.'
         L     R1,0(,W6)
         LTR   R1,R1
         BZ    REPORTD9
         MVI   20(R14),C'+'   AL LEAST ONE TIC MARK
         L     R15,$TABB-$TAB(,W3)
         XR    R0,R0
         M     R0,=F'100'
         LTR   R15,R15
         BZ    REPORTD9
         DR    R0,R15
         CH    R1,=H'100'
         BL    *+8
         LA    R1,100
REPORTD3 MVI   20(R14),C'+'
         LA    R14,1(,R14)
         SH    R1,=H'5'
         BNM   REPORTD3
REPORTD9 A     W5,0(,W6)
         LA    W6,4(,W6)
         LA    W7,4(,W7)
         BR    LINK
*   FORMAT THE OBSERV., AVG, MIN, MAX VALUES
         USING $TAB,W6
REPORTF  ST    LINK,$SAVE1
         L     R1,$TABB
         BAL   LINK,REPORTA
         LTR   R1,R1
         BZ    REPORTF1
         MVC   13(M14L,R14),M14
         XR    R0,R0
         L     R1,$TABA
         D     R0,$TABB
         CVD   R1,WORK
         ED    13(4,R14),WORK+6
         L     R1,$TABD
         CVD   R1,WORK
         ED    18(4,R14),WORK+6
         L     R1,$TABE
         CVD   R1,WORK
         ED    23(4,R14),WORK+6
REPORTF1 L     LINK,$SAVE1
         BR    LINK
         DROP  W6
*   INSERT REPORT DIVIDERS AND PRINT THE LINE
REPORTG  MVI   LINE+42,C'I'
         MVI   LINE+86,C'I'
         B     PUTSP1
         EJECT
*----------------------------------------------------------------------
*   CONSTANTS AND DATA STORAGE AREAS
*----------------------------------------------------------------------
$SAVE1   DC    6F'0'
$SAVE2   DC    6F'0'
$SAVE3   DC    6F'0'
$SAVE4   DC    6F'0'
$SAVE5   DC    6F'0'
         DC    A(DISTXXXX)   FOR UCBTBYT4=0                      93103
DEVDISTA DC    A(DISTXXXX,DISTXXXX,DISTXXXX,DISTXXXX)
         DC    A(DISTXXXX,DISTXXXX,DISTXXXX,DIST2314)
         DC    A(DIST3330,DIST3340,DIST3350,DIST3375)
         DC    A(DIST3331,DIST3380,DIST3390,DISTXXXX)            93103
         SPACE 1
         LTORG
         SPACE 2                                                 93103
VERSION  DC    C'U. S. SEC SEEKMON 2.4 - DASD ACTIVITY MONITOR - '
VERSION1 DC    C'DDD',C' '
VERSION2 DC    C'DDMMMYY',C' '
VERSION3 DC    C'(',X'21204B202020',C')'
VERSION4 DC    X'4021204B20204B2020'
VERSIONL EQU   *-VERSION
*                MMMSSS,LL,FFF,...
PARMDFLT DC    CL120' '
         ORG   PARMDFLT
PARM1    DC    C'005'             SAMPLING PERIOD IN MINUTES
PARM2    DC    C'005',C','        SAMPLING INTERVAL IN 100THS OF SEC
PARM3    DC    C'60',C','         SYSPRINT LINES/PAGE            93103
PARM4    DC    C'000'             DECIMAL NUMBER FOR 'OPTIONS'
PARM5    DC    C','               SEPARATOR
PARM6    EQU   *                  DEVICE ADDRESSES
         ORG   ,
OPTIONS  DC    X'00'
OPT128   EQU   128   TERMINATE WITH A DUMP (FOR DEBUG)
OPT64    EQU   64
OPT32    EQU   32
OPT16    EQU   16
OPT8     EQU   8
OPT4     EQU   4
OPT2     EQU   2      DO *NOT* USE SUBTASK FOR TIMING (FOR MFT)
OPT1     EQU   1      PERFORM ARM-MOVEMENT PROCESSING
HEXCHTAB DC    X'000A0B0C0D0E0F00000000000000000000010203040506070809'
SPACE    DC    C' '       CARRIAGE CONTROL FOR PRINTED LINE
LINE     DC    CL132' '   BUFFER FOR PRINTED LINE
M01      DC    C'DEVICE='
M01A     DC    C'CUU',C', VOL='
M01B     DC    CL6' ',C'  --  '
M01F     DC    CL10' ',C' SAMPLES TAKEN,'
M01G     DC    CL10' ',C' SAMPLES LOST FOR THIS DEVICE'
M01L     EQU   *-M01
M02      DC    C'CYLINDER'
M02A     DC    X'40202120'
M02L     EQU   *-M02
M03      DC    X'40202120',C'% OF ACTIVITY ('
M03A     DC    CL10' ',C' COUNTS)'
M03L     EQU   *-M03
M04      DC    C'TO-CYL   %-CYL    %-DEV    COUNTS'
M05      DC    CL2' '
M05A     DC    X'40202120',CL4' '
M05B     DC    X'40202120',CL5' '
M05C     DC    X'40202120'
M05L     EQU   *-M05
M07      DC    CL20'DEVICE ONLINE'
         DC    CL20'DEVICE NOT-READY'
         DC    CL20'DEVICE ALLOCATED'
         DC    CL20'DEVICE RESERVED'
         DC    CL20'ERR-RECOVERY ACTIVE'
         DC    CL20'CONTROL-UNIT BUSY'
         DC    CL20'DEVICE BUSY'
         DC    CL20'BUSY && DATA XFER '
         DC    CL20'BUSY && S-A SEEK '
         DC    CL20'BUSY && ALT. PATH '
M07CNT   EQU   (*-M07)/20
M08      DC    CL40' '
         ORG   M08
         DC    CL20'DATA DESCRIPTION',CL10' PERCENT',CL10'    COUNTS'
         ORG   ,
         DC    CL40'CYLINDER POSITIONS IN HEX  (WHEN BUSY)  '       RVH
         DC    CL40'CYLINDER TRAVEL (SEEK) IN HEX           '    93197
M09      DC    CL40'SHARED-DASD RESERVE COUNTS (CU/DEV BUSY)'
         DC    CL40'OPEN DCBS              '                    GP06358
         DC    CL40'USE (ALLOCATION) COUNTS'
M10      DC    CL8'UNKNOWN1',CL8'UNKNOWN2',CL8'UNKNOWN3',CL8'UNKNOWN4'
         DC    CL8'UNKNOWN5',CL8'2305-1  ',CL8'2305-2  ',CL8'2314/19 '
         DC    CL8'3330    ',CL8'3340    ',CL8'3350    ',CL8'3375    '
         DC    CL8'3330M11 ',CL8'3380    ',CL8'3390    ',CL8'UNKNOWN '
M12      DC    C'  ARM MOVEMENTS, OBSERVATIONS ='
M12A     DC    X'40206B2020206B202120',C'  '
M12L     EQU   *-M12
M13      DC    CL14'OBSERVATIONS',CL5'AVG',CL5'MIN',CL5'MAX'
M13L     EQU   *-M13
M14      DC    3X'4020212040'
M14L     EQU   *-M14
WR200    DC    C'SAMPLING ='
WR201    DC    X'40206B2020206B202120',C' ACTUAL SAMPLES OUT OF'
WR202    DC    X'40206B2020206B202120'
         DC    C' POSSIBLE SAMPLES FOR TIME PERIOD'
WR200A   EQU   *-WR200
WR200B   EQU   LINE+WR201-WR200
WR200C   EQU   LINE+WR202-WR200
         SPACE 1                                                 93103
WORK     DC    D'0'
TODSEC   DC    F'0'
BGNTME   DC    F'0'
ENDTME   DC    F'0'
$SIZE    DC    A(104*1024,500*1024)  RANGE FOR V-GETMAIN         93197
GOTTENA  DC    A(0)         ADDR OF GETMAINED MEMORY
GOTTENL  DC    A(0)         LENGTH OF GETMAINED MEMORY
LOSTDATA DC    F'0'
NEXTFREE DC    A(0)      POINTER TO NEXT FREE BLOCK
TOPCORE  DC    A(0)      TOP OF GETMAINED AREA
DEVTBL   DC    A(DEVONE)     POINTER TO ASSEMBLED OR GETMAINED TABLE
LASTDEV  DC    A(DEVTBLND)     END OF DEVICE TABLES
THISCC   DC    H'0'
LASTCC   DC    H'0'
UNITNAME DC    CL3' '
TIMRTCB  DC    A(0)
TIMRECB  DC    F'0'
TIMRECB2 DC    F'0'
TIMRNAME DC    CL8'*TIMER'
GATHDATA DC    F'0'
FLAGS    DC    X'00'
GFAIL    EQU   X'80'
         SPACE 1                                                 93103
UNITCLAS DC    AL1(UCB3DACC)  SEARCH DIRECT ACCESS UCBS ONLY     93103
NEXTHEX  DC    C'?BCDEF?????????'  1/2 NEXT HEX CHAR             93197
HEXTBL   DC    C'0123456789ABCDEF'
MSGEND   DC    C'** END OF SEEKMON OUTPUT **'
FEBTAB   DC    AL1(28,28,28,29)
DAYTAB   DC    C'MONTUEWEDTHUFRISATSUN'
MONTAB   DC    H'31',CL4'JAN'
FEB      DC    H'28',CL4'FEB'
         DC    H'31',CL4'MAR'
         DC    H'30',CL4'APR',H'31',CL4'MAY',H'30',CL4'JUN'
         DC    H'31',CL4'JUL',H'31',CL4'AUG',H'30',CL4'SEP'
         DC    H'31',CL4'OCT',H'30',CL4'NOV',H'32767',CL4'DEC'
SAMPLES  DC    F'0'
SAMPLET  DC    F'0'
ACSCBCIB DC    A(0)
ACSCBECB DC    A(0)
SECONDS  DC    F'0'
PERIOD   DC    F'0'
CURRENT  DC    F'0'
SAVEREG  DC    F'0'
SYSPRINT DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,LRECL=133,          +
               RECFM=FBA,EXLST=EXLST,BUFNO=1
PGMSIZE  EQU   *-SEEKMON
         SPACE 1                                                 93103
SAVE     DSECT ,             DYNAMIC SAVE/WORK AREA              93103
DB       DS    D             WORK WORD                           93103
UNITPARM DS    A(UNITWORK,UNITCLAS,UNITPTR)                      93103
UNITWORK DS    XL100         WORK AREA                           93103
UNITPTR  DS    A             RETURNED UCB ADDRESS                93103
UNITCLR  EQU   *-UNITWORK    SIZE TO CLEAR                       93103
SAVEEND  EQU   *             END OF DYNAMIC AREA                GP05161
         EJECT
*----------------------------------------------------------------------
*   THE FOLLOWING AREAS DO NOT HAVE TO BE ADDRESSABLE BY BASE1 OR BASE2
*
SEEKMON0 CSECT ,
*
DEVONE   DC    (16*((DEVICEL+7)/8)*8)A(0)   BASIC DEVICE ENTRIES 93197
DEVTBLND EQU   *
*
*----------------------------------------------------------------------
*  FOLLOWING ARE DISTRIBUTION TABLE VALUES.
*
HIVALUE  EQU   X'7FFFFF'
*
*  EACH TABLE CAN CONSIST OF UP TO 40 VALUES - THE LAST VALUE
*  MUST BE 'HIVALUE'.
*----------------------------------------------------------------------
*
*   FOR COUNT DISTRIBUTIONS
DISTCNT  DC    A(00,01,02,03,04,05,06,07,08,09)
         DC    A(10,11,12,13,14,15,20,25,30,40)
         DC    A(50,60,70,80,90,125,150,175,HIVALUE)
*   DEVICE 'CYL/TRK' DISTRIBUTIONS
DISTXXXX DC    A(0,HIVALUE)    DUMMY TABLE
DIST3330 DC    A(010,020,030,040,050,060,070,080,090,100)
         DC    A(110,120,130,140,150,160,170,180,190,200)
         DC    A(210,220,230,240,250,260,270,280,290,300)
         DC    A(310,320,330,340,350,360,370,380,390,HIVALUE)
DIST3331 DC    A(020,040,060,080,100,120,140,160,180,200)
         DC    A(220,240,260,280,300,320,340,360,380,400)
         DC    A(420,440,460,480,500,520,540,560,580,600)
         DC    A(620,640,660,680,700,720,740,760,780,HIVALUE)
DIST2314 DC    A(005,010,015,020,025,030,035,040,045,050)
         DC    A(055,060,065,070,075,080,085,090,095,100)
         DC    A(105,110,115,120,125,130,135,140,145,150)
         DC    A(155,160,165,170,175,180,185,190,195,HIVALUE)
DIST3350 DC    A(014,028,042,056,070,084,098,112,126,140)
         DC    A(154,168,182,196,210,224,238,252,266,280)
         DC    A(294,308,322,336,350,364,378,392,406,420)
         DC    A(434,448,462,476,490,504,518,532,546,HIVALUE)
DIST3340 DC    A(017,034,051,068,085,102,119,136,153,170)
         DC    A(187,204,221,238,255,272,289,306,323,340)
         DC    A(357,374,391,408,425,442,459,476,493,510)
         DC    A(527,544,561,578,595,612,629,646,663,HIVALUE)
DIST3375 DC    A(024,048,072,096,120,144,168,192,216,240)
         DC    A(264,288,312,336,360,384,408,432,456,480)
         DC    A(504,528,552,576,600,624,648,672,696,720)
         DC    A(744,768,792,816,840,864,888,912,936,HIVALUE)
DIST3380 DC    A(022,044,066,088,110,132,154,176,198,220)
         DC    A(242,264,286,308,330,352,374,396,418,440)
         DC    A(462,484,506,528,550,572,594,616,638,660)
         DC    A(682,704,726,748,770,792,814,836,858,HIVALUE)
DIST3390 DC    A(022,044,066,088,110,132,154,176,198,220)       GP06358
         DC    A(242,264,286,308,330,352,374,396,418,440)       GP06358
         DC    A(462,484,506,528,550,572,594,616,638,660)       GP06358
         DC    A(682,704,726,748,770,792,814,836,858,HIVALUE)   GP06358
DIST2311 EQU   DIST2314
*
*    SYSPRINT DCB EXIT
EXLST    DC    0F'0',X'85',AL3(DCBEXIT)
         USING DCBEXIT,R15
         USING IHADCB,R1
DCBEXIT  LH    R3,DCBBLKSI
         LTR   R3,R3
         BNZ   *+8
         LA    R3,1995       DEFAULT
         XR    R2,R2
         LH    R4,DCBLRECL
         DR    R2,R4
         MH    R3,DCBLRECL
         STH   R3,DCBBLKSI
         BR    R14
         DROP  R1,R15
*
*
*   SUBTASK FOR TIMING SEEKMON EXECUTION PERIOD
TIMRTASK BALR  R2,0
         USING *,R2
         L     R1,TIMRTVL
         STIMER REAL,TIMREXIT,BINTVL=(1)
         WAIT  1,ECBLIST=TIMRWAIT
         TM    TIMRECBX,X'40'
         BO    TIMRDONE
         TTIMER CANCEL
TIMRDONE XR    R15,R15
         SVC   3
TIMREXIT SAVE  (14,12)
         BALR  R3,0
         USING *,R3
         POST  TIMRECBX
         RETURN (14,12),,RC=0
TIMRECBX DC    F'0'
TIMRWAIT DC    A(TIMRECBX),X'80',AL3(TIMRECB2)
TIMRTVL  DC    A(PERIOD)
*
PGMSIZE0 EQU   *-SEEKMON0
  EJECT ,
CIB      DSECT ,
         IEZCIB
CVTDSECT DSECT ,             PRE-SP                              84099
         CVT   DSECT=YES
         IEFUCBOB LIST=YES,PREFIX=YES                            84099
         AIF   ('&SYSSPLV' LT '2').NOXAUCB                       93103
         IHAEPIE ,                                               93197
         IECDDCE ,                                               93197
         PUSH PRINT                                              93103
         PRINT GEN                                               93103
SEEKMON  CSECT ,                                                 93103
         IHASCHIB DSECT=NO                                       93103
         POP   PRINT                                             93103
UCBACTV  EQU   X'02'                                             93103
UCBQISCE EQU   UCBHALT                                           93103
UCBNOTRC EQU   X'00'       ? UCBCUB                              93103
UCBBUSYD EQU   UCBSTRT       UCBBSY                              93103
UCBBSY   EQU   UCBBUSYD                                          93103
UCBPST   EQU   X'20'                                             93103
.NOXAUCB SPACE 2                                                 84099
         IECDIOQ ,                                               84099
         SPACE 2                                                 84099
         IECDIOSB ,                                              84099
         SPACE 2                                                 84099
         PRINT NOGEN
         DCBD  DSORG=(QS),DEVD=(DA)
*
         END   SEEKMON
