LISTVOL  TITLE 'L I S T V O L  ***  DASD SUMMARY / VOLUME LISTER'
         PRINT OFF                                              GP04089
         MACRO
&LBL     $STP  &A,&B
         AIF   (2 EQ N'&A).L2
         AIF   ('&A'(1,1) NE '(').L1
&LBL     ST    &A(1),&B
         MEXIT
.L1      ANOP
&LBL     LA    0,&A
         AGO   .L3
.L2      ANOP
&LBL     L     0,&A(1)
.L3      ANOP
         ST    0,&B
         MEND
         MACRO
&NAME    EXIT  &RC=O,&LV=
&NAME    LR    1,13 .                   GET WORKAREA ADDRESS
         L     13,4(,13) .              RELOAD PREV. SAVE AREA
         FREEMAIN R,LV=&LV,SP=1,A=(1)
         RETURN (14,12),,RC=&RC
         MEND
         MACRO
         TSCPPL
         SPACE 2
***********************************************************************
*    THE COMMAND PROCESSOR PARAMETER LIST (CPPL) IS A LIST OF         *
*    ADDRESSES PASSED FROM THE TMP TO THE CP VIA REGISTER 1           *
***********************************************************************
         SPACE 2
CPPL     DS    0A
CPPLCBUF DS    A        PTR TO COMMAND BUFFER
CPPLUPT  DS    A        PTR TO UPT
CPPLPSCB DS    A        PTR TO PSCB
CPPLECT  DS    A        PTR TO ECT
CPPLL    EQU   *-CPPL
         MEND
         MACRO
         TSCSPL
         SPACE 2
***********************************************************************
*    THE COMMAND SCAN PARAMETER LIST (CSPL) IS A LIST OF ADDRESSES    *
*    PASSED FROM THE INVOKER TO COMMAND SCAN VIA REGISTER 1           *
***********************************************************************
         SPACE 2
CSPL     DS    0A
CSPLUPT  DS    A        PTR TO  UPT
CSPLECT  DS    A        PTR TO  ECT
CSPLECB  DS    A        PTR TO  CP'S ECB
CSPLFLG  DS    A        PTR TO  FLAG WORD CSFLG
*                       BIT 0 SET TO 0= SYNTAX CHECKING OF
*                       COMMAND NAME.
CSPLOA   DS    A        PTR TO OUTPUT AREA (CSOA DSECT)
CSPLCBUF DS    A        PTR TO COMMAND BUFFER
CSPLL    EQU   *-CSPL
CSFLG    DS    F
***********************************************************************
*    THE COMMAND SCAN OUTPUT AREA (CSOA) IS AN AREA POINTED TO        *
*    BY THE CSPL.  IT IS USED BY COMMAND SCAN TO INDICATE ITS         *
*    FINDINGS.  IT IS OBTAINED AND FREED BY THE INVOKER               *
***********************************************************************
CSOA     DS    0A
CSOACNM  DS    A        PTR TO COMMAND NAME-IF 0 INVALID CMD NAME
CSOALNM  DS    H        LENGTH OF CMD NAME
CSOAFLG  DS    X        FLAGS
CSOAVWP  EQU   X'80'    VALID WITH PARAMETERS
CSOAVNP  EQU   X'40'    VALID NO   PARAMS
CSOAQM   EQU   X'20'    QUESTION MARK
CSOANOC  EQU   X'10'    NO COMMAND
CSOABAD  EQU   X'08'    BAD CMD NAME
         DS    CL1      RESERVED
CSOAL    EQU   *-CSOA
         MEND
         MACRO
&LBL     TSDAIR &Z,&DAPB=,&SYNAD=
         GBLB   &TSDAIRE                WAS TSDAIRER ROUTINE GENERATED
&LBL     $STP  &DAPB,DAPLDAPB
         LA    1,DAPL
         LINK  EP=IKJDAIR
         AIF   ('&SYNAD' EQ '').L1
         LTR   15,15
         BZ    TSD&SYSNDX+4
         LA    0,&SYNAD
         L     14,TSD&SYSNDX
         BR    14
         AIF   ('&SYNAD' EQ '').L0
         AIF   (&TSDAIRE).L0
         TSDAIRER
.L0      ANOP
TSD&SYSNDX DC  A(TSDAIRER)
.L1      MEND
         MACRO
         TSDAIRER &Z
         GBLB  &TSDAIRE                 GENERATE ONLY ONCE FLAG
         AIF   (&TSDAIRE).NOGEN
&TSDAIRE SETB  1
         SPACE 2
***********************************************************************
*              DAIR ERROR ANALYSIS SUBROUTINE                         *
***********************************************************************
         SPACE 2
         USING TSDAIRER,14
TSDAIRER STM   15,1,DMPLSAVE            RC, RTN ADRS AND DAPL ADRS
         LTR   15,15                    RETURN CODE FROM DAIR
         BZ    TSD&SYSNDX               ON ZERO RETURN CODE
         ST    1,DMPLDAPL               PTR TO DAPL
         LA    1,DMPLCODE               ADDRESS OF RETURN CODE
         ST    1,DMPLRC                 PTR TO RETURN CODE
         LA    1,TSM&SYSNDX             ADDRESS OF LOADED IKJEFT02 IS 0
         ST    1,DMPLMSG                PTR TO A F'0'
         LA    1,TSC&SYSNDX             ADDRESS OF CALLER NUMBER
         ST    1,DMPLCALL               PTR TO CALLER NUMBER
         LA    1,DMPL                   ADRS OF DAIR MSG PARM LIST
         LINK  EP=IKJEFF18
         LM    15,1,DMPLSAVE            RESTORE REGISTERS
TSD&SYSNDX LR  14,0                     RETURN ADDRESS TO USABLE REG.
         BR    14                       RETURN TO CALLER
         SPACE
TSC&SYSNDX DC  H'1'                     GENERAL CALLER NUMBER
TSM&SYSNDX DC  F'0'                     IKJEFT02 NOT LOADED
         DROP  14                       DROP ADDRESSIBLITY
         AGO   .END
.NOGEN   MNOTE *,'DUPLICATE TSDAIRER MACRO, NOT GENERATED.'
.END     SPACE 2
         MEND
         MACRO
         TSDAPL
         SPACE 2
***********************************************************************
*    THE DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR) PARAMETER LIST   *
*    (DAPL) IS A LIST OF ADDRESSES PASSED FROM THE INVOKER TO DAIR    *
*    VIA REGISTER 1                                                   *
***********************************************************************
         SPACE 2
DAPL     DS    0F
DAPLUPT  DS    A        PTR TO UPT
DAPLECT  DS    A        PTR TO ECT
DAPLECB  DS    A        PTR TO CP'S ECB
DAPLPSCB DS    A        PTR TO PSCB
DAPLDAPB DS    A        PTR TO DAIR PARAMETER BLOCK
DAPLL    EQU   *-DAPL
         MEND
         MACRO
         TSDMPL
         SPACE 2
***********************************************************************
*
* (DMPL)       DAIR MESSAGE PARAMETER LIST
*
* FUNCTION     THE ADDRESS OF THIS PARAMETER LIST IS PASSED IN
*              REGISTER 1 BY THE INVOKER OF IKJEFF18 TO DIAGNOSE DAIR
*              ERRORS AND PRINT APPROPRIATE MESSAGES.
*
***********************************************************************
         SPACE 2
DMPL     DS    0F *                     DAIR MESSAGE PARAMETER LIST
DMPLDAPL DS    A *                      PTR TO THE DAPL ADDRESS
DMPLRC   DS    A *                      PTR TO THE DAIR RETURN CODE
DMPLMSG  DS    A *                      PTR TO A(IKJEFT02) IF LOADED
DMPLCALL DS    A *                      PTR TO THE CALLER NUMBER
DMPLCODE DS    0F *                     R15 SAVE IS DAIR RETURN CODE
DMPLSAVE DS    3F *                     REGISTER SAVEAREA FOR 15-1
DMPLL    EQU   *-DMPL *                 LENGTH OF THE DMPL
         SPACE 2
         MEND
         MACRO
&LBL     TSENTRY &Z,&BASE=12,&SYMREG=YES,&PL=,&GETMAIN=0,&MACRO=,      X
               &DSECT=NO
         GBLB  &GDAIRM   1 TIME FLAG TO AVOID DUPLICATE DSECTS
         LCLA  &A
         LCLB  &C,&P,&D,&I,&M,&DM
TSDSECT  DSECT
TSAVE    DS    18F                      SAVE AREA
         TSCPPL
         AIF   ('&PL' EQ '').L12
TSECB    DS    F                        ECB FOR THE TSO SERVICES
&A       SETA  1
.L1      AIF   ('&PL(&A)' NE 'CSCAN').L2
&C       SETB  1
         AGO   .L7
.L2      AIF   ('&PL(&A)' NE 'PARSE').L3
&P       SETB  1
         AGO   .L7
.L3      AIF   ('&PL(&A)' NE 'DAIR').L4
&D       SETB  1
         AGO   .L7
.L4      AIF   ('&PL(&A)' NE 'IO').L5
&I       SETB  1
         AGO   .L7
.L5      AIF   ('&PL(&A)' NE 'MESSAGE').L6A
&M       SETB  1
         AGO   .L7
.L6A     AIF   ('&PL(&A)' NE 'DAIRM').L6
&D       SETB  1                        DAIR PARAMETER LISTS
&DM      SETB  1                        DAIR MACROS (IE. ALLOC, FREE)
         AGO   .L7
.L6      MNOTE 4,'UNKNOWN PL PARAMETER = &PL(&A)'
.L7      ANOP
&A       SETA  &A+1
         AIF   (&A LE N'&PL).L1
         AIF   (NOT &C).L8
         TSCSPL
.L8      AIF   (NOT &P).L9
         TSPPL
.L9      AIF   (NOT &D).L10
         TSDAPL
         AIF   ( NOT &DM ).L9A
DAPBAREA DS    20F *                    AREA FOR DAIR PARAMETER BLOCK
.L9A     ANOP
         TSDMPL
.L10     AIF   (NOT &I).L11
         TSIOPL
.L11     AIF   (NOT &M).L12
         TSMPL
.L12     ANOP
         AIF   ('&MACRO' NE 'YES').L12A
         TSWORK
.L12A    AIF   ('&GETMAIN' EQ '0').L12B
TSWORK   DS    0D                       POINTER TO USER WORK AREA
.L12B    ANOP
TSDSECTL DS    0D
         AIF   ( NOT &DM).NODM
         AIF   ( &GDAIRM ).NODM
&GDAIRM  SETB  1                        SET 1 TIME FLAG
         EJECT
         IKJDAP04
DAPB04L  EQU   *-DAPB04 *               LENGTH OF DAPB04 BLOCK
         EJECT
         IKJDAP08
DAPB08L  EQU   *-DAPB08 *               LENGTH OF DAPB08 BLOCK
         EJECT
         IKJDAP18
DAPB18L  EQU   *-DAPB18 *               LENGTH OF DAPB18 BLOCK
         SPACE 3
         IKJDAP1C
DAPB1CL  EQU   *-DAPB1C *               LENGTH OF DAPB1C BLOCK
         EJECT
         IKJDAP30
DAPB30L  EQU   *-DAPB30 *               LENGTH OF DAPB30 BLOCK
.NODM    ANOP
         AIF   ('&SYMREG' NE 'YES').L13
         SPACE 2
***********************************************************************
*                                                                     *
*                   DEFINE SYMBOLIC REGISTERS                         *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                        THE SYMBOLIC REGISTERS
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.L13     AIF   ('&DSECT' NE 'NO').L19
         EJECT
&LBL     CSECT
         SAVE  (14,12),,*
         USING &LBL,&BASE
         LR    &BASE,15                 ESTABLISH ADDRESSABILITY
         LR    5,1                      SAVE PTR TO CPPL
         GETMAIN R,LV=TSDSECTL-TSDSECT+&GETMAIN,SP=1
         ST    13,4(1)                  DO SAVE AREA CHAINING
         ST    1,8(13)
         LR    13,1                     ESTABLISH ADDRESSABILITY
         USING TSDSECT,13               FOR THE TSDSECT
         MVC   CPPL(CPPLL),0(5)         COPY CPPL TO TS AREA
         AIF   (NOT(&C OR &P OR &D OR &I OR &M)).L18
         L     1,CPPLUPT                GET PTR TO UPT
         L     2,CPPLECT                GET PTR TO ECT
         LA    3,TSECB                  GET PTR TO ECB
         SR    0,0                      CLEAR ECB
         ST    0,TSECB
         AIF   (NOT &C).L14
         STM   1,3,CSPL                 INITIALIZE CSPL
         ST    0,CSFLG                  ZERO CSFLG
         LA    4,CSFLG
         ST    4,CSPLFLG
         LA    4,CSOA
         ST    4,CSPLOA
.L14     AIF   (NOT &P).L15
         STM   1,3,PPL                  INITIALIZE PPL. UPT,ECT,ECB
         LA    4,TSPARANS               ADRS OF PARSE ANSWER PLACE
         ST    4,PPLANS                 POINTER TO ADRS OF PARSE ANSWER
         ST    13,PPLUWA                PARSE USER WORK AREA POINTER
.L15     AIF   (NOT &D).L16
         STM   1,3,DAPL                 INITIALIZE DAPL
         L     4,CPPLPSCB               GET PTR TO PSCB
         ST    4,DAPLPSCB               SET POINTER TO PSCB
.L16     AIF   (NOT &I).L17
         STM   1,3,IOPL                 INITIALIZE IOPL
.L17     AIF   (NOT &M).L18
         ST    3,MPLECB                 INITIALIZE MPL, PTR TO ECB
         LA    4,CPPL                   ADDRESS OF CPPL
         ST    4,MPLCPPL                PTR TO CPPL
         LA    4,MPLCSECT               PTR TO MESSAGE CSECT
         ST    4,MPLCSECP               PTR TO MESSAGE CSECT ADDRESS
         XC    MPLSW(MPLZL),MPLSW       INITIALIZE REMAINING MPL TO 0
.L18     ANOP
         MNOTE *,'THE FOLLOWING BASES HAVE BEEN ESTABLISHED'
         MNOTE *,'USING   TSDSECT,13'
         MNOTE *,'USING   &LBL,&BASE'
.L19     MEND
         MACRO
         TSIOPL
         SPACE 2
***********************************************************************
*    THE I/O SERVICE ROUTINE PARAMETER LIST (IOPL) IS A LIST OF       *
*    FULLWORD ADDRESSES PASSED BY THE INVOKER OF ANY I/O SERVICE      *
*    ROUTINE TO THE APPROPRIATE SERVICE ROUTINE VIA REGISTER ONE.     *
***********************************************************************
         SPACE 2
IOPL     DS    0A
IOPLUPT  DS    A        PTR TO UPT
IOPLECT  DS    A        PTR TO ECT
IOPLECB  DS    A        PTR TO USER'S ECB
IOPLIOPB DS    A        PTR TO THE I/O SERVICE RTN PARM BLOCK
IOPLL    EQU   *-IOPL
         MEND
         MACRO
         TSMPL &DSECT=
         SPACE 2
***********************************************************************
*        THE MESSAGE PARAMETER LIST (MPL) IS A PARAMETER LIST WHOSE   *
*        ADDRESS IS PASSED BY THE INVOKER OF THE MESSAGE PROCESSING   *
*        ROUTINE (IKJEFF02) VIA REGISTER 1.                           *
***********************************************************************
         SPACE 2
         AIF   ('&DSECT' EQ '').NODSECT
&DSECT   DSECT
.NODSECT ANOP
MPL      DS    0A .                     MESSAGE PARAMETER LIST
MPLCSECP DS    A .                      PTR TO ADRS OF MESSAGE CSECT
MPLCPPL  DS    A .                      PTR TO CPPL
MPLECB   DS    A .                      PTR TO USER'S ECB (TSECB)
MPLCSECT DS    A .                      ADDRESS OF MESSAGE CSECT
MPLSW    DS    X .                      MESSAGE OPTION FLAGS
MPLINFO  EQU   X'80' .                  BIT 0, NO MESSAGE IDENTIFIER
MPLREV   EQU   X'40' .                  BIT 1, MESSAGE REVERSAL
MPLWTO   EQU   X'20' .                  BIT 2, INDICATES WRITE TO OPR
MPLHEX   EQU   X'10' .                  BIT 3, CONVERT NO'S TO HEX
MPLREPLY DS    AL3 .                    ADDRESS OF REPLY MESSAGE
MPLMSGID DS    CL4 .                    4 CHARACTER MESSAGE ID
MPLLEN1  DS    X .                      LENGTH OF VAR TEXT INSERT 1
MPLVAR1  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 1
MPLLEN2  DS    X .                      LENGTH OF VAR TEXT INSERT 2
MPLVAR2  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 2
MPLLEN3  DS    X .                      LENGTH OF VAR TEXT INSERT 3
MPLVAR3  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 3
MPLLEN4  DS    X .                      LENGTH OF VAR TEXT INSERT 4
MPLVAR4  DS    AL3 .                    ADRS OF VARIABLE TEXT INSERT 4
MPLL     EQU   *-MPL .                  LENGTH OF MPL
MPLZL    EQU   *-MPLSW
         MEND
         MACRO
&LABEL   TSMSG &ID,&TYPE=,&CSECT=,&MF=E,&TABLE=
         LCLA  &I
         LCLB  &INFO,&HEX,&WTO,&REV
&LABEL   DS    0H
         AIF   (T'&ID EQ 'O').L5        IF ID PARAMETER OMMITTED  .L5
         AIF   ('&ID'(1,1) EQ '(').IDREG ID IN REGISTER NOTATION .IDREG
         AIF   ('&ID'(1,1) EQ '''').IDQUOTE  QUOTED STRING ?
         MVC   MPLMSGID(4),=CL4'&ID'    SET 4 BYTE MESSAGE ID
         AGO   .L5
.IDREG   ANOP                           ID WAS IN REGISTER NOTATION
         MVC   MPLMSGID(4),0&ID         SET 4 BYTE MESSAGE ID
         AGO   .L5
.IDQUOTE ANOP
         MVC   MPLMSGID(4),=CL4&ID      SET 4 BYTE MESSAGE ID
.L5      ANOP
         AIF   (T'&TYPE EQ 'O').NOTYPE    IF NO TYPE  PARM THEN .NOTYPE
&I       SETA  0                        INITIALIZE I TO 0
&INFO    SETB  0                        DEFAULT TO NOINFO (=PROMPT)
&HEX     SETB  0                        DEFAULT TO NOHEX
&WTO     SETB  0                        DEFAULT TO NOWTO
&REV     SETB  0                        DEFAULT TO NOREV
.NEXTYPE ANOP
&I       SETA  &I+1                     INCREMENT I
         AIF   ('&TYPE(&I)' EQ '').TYPEND  ANY MORE TYPES?
         AIF   ('&TYPE(&I)' EQ 'INFO').INFO
         AIF   ('&TYPE(&I)' EQ 'HEX' ).HEX
         AIF   ('&TYPE(&I)' EQ 'WTO' ).WTO
         AIF   ('&TYPE(&I)' EQ 'REV' ).REV
         AIF   ('&TYPE(&I)' EQ 'PROMPT').NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOINFO').NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOHEX' ).NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOWTO' ).NEXTYPE  DO NOTHING FOR NOTYPE
         AIF   ('&TYPE(&I)' EQ 'NOREV' ).NEXTYPE  DO NOTHING FOR NOTYPE
         MNOTE 4,'UNKNOWN TYPE = &TYPE(&I) IGNORED'
         AGO   .NEXTYPE                 LOOK AT NEXT TYPE PARAMETER
.INFO    ANOP
&INFO    SETB  1                        INFORMATION MESSAGE BIT ON
         AGO   .NEXTYPE
.HEX     ANOP
&HEX     SETB  1                        HEX CONVERSION BIT ON
         AGO   .NEXTYPE
.WTO     ANOP
&WTO     SETB  1                        WRITE TO OPERATOR BIT ON
         AGO   .NEXTYPE
.REV     ANOP
&REV     SETB  1                        MESSAGE REVERSAL BIT ON
         AGO   .NEXTYPE
.TYPEND  ANOP
&I       SETA  128*&INFO+64*&REV+32*&WTO+16*&HEX SET FLAG VALUE
         MVI   MPLSW,&I                 SET MESSAGE OPTIONS BITS
.NOTYPE  ANOP
         AIF   (T'&CSECT EQ 'O').NOCSECT IF NO CSECT PARM THEN .NOCSECT
         AIF   (T'&TABLE EQ 'O').NOTBOTH BOTH CANNOT BE SPECIFIED
   MNOTE 4,'CSECT AND TABLE ARE MUTUALLY EXCLUSIVE.  CSECT IS ASSUMED.'
.NOTBOTH AIF   ('&CSECT'(1,1) EQ '(').CSREG  CSECT IN REGISTER NOTATION
         MVC   MPLCSECT(4),=V(&CSECT)   SET ADRS OF MESSAGE CSECT
         AGO   .L8
.CSREG   ST    &CSECT,MPLCSECT          SET ADRS OF MESSAGE CSECT
         AGO   .L8
.NOCSECT ANOP
         AIF   (T'&TABLE EQ 'O').NOTABLE IF NO TABLE PARM THEN .NOTABLE
         AIF   ('&TABLE'(1,1) EQ '(').TAREG  TABLE IN REGISTER NOTATION
         MVC   MPLCSECT(4),=A(&TABLE)   SET ADRS OF MESSAGE CSECT
         AGO   .L8
.TAREG   ST    &TABLE,MPLCSECT          SET ADRS OF MESSAGE CSECT
         AGO   .L8
.NOTABLE ANOP
.L8      ANOP
         AIF   ('&MF' EQ 'L').END       &MF=L MEANS LIST
         LA    1,MPL                    ADRS OF MESSAGE PARAMETER LIST
         LINK  EP=IKJEFF02              LOAD MESSAGE PROCESSING ROUTINE
         SPACE
* RETURN       IN REGISTER 15 IS FROM PUTLINE OR PUTGET OR
* CODES        0 IF WTO WAS REQUESTED.
         SPACE
.END     MEND
         MACRO
&LBL     TSMSGD &A,&B,&C
&LBL     IKJTSMSG &A,&B,&C
         MEND
         MACRO
         TSPARERR &Z,&NOGEN=NO,&REGEN=NO
         AIF   ('&NOGEN' NE 'YES').G1
         PRINT NOGEN
.G1      ANOP
         USING TSPARERR,14
TSPARERR STM   15,0,MPLLEN3             STORE RETURN ADD & RETURN CODE
         CH    15,TSPARER8              CHECK FOR ATTN INTERUPT
         BE    TSPARERE
         LA    15,TSPARERT-4(15)
         MVC   MPLMSGID(4),0(15)
         TSMSG TYPE=HEX,TABLE=TSPARERC
TSPARERE LM    15,0,MPLLEN3             GET RETURN ADD AND RETURN CODE
         LA    1,PPL                    RESTORE REGISTER 1
         LR    14,0                     MOVE RETURN ADD TO USABLE REG
         BR    14                       RETURN TO CALLER
         AIF   ('&NOGEN' NE 'PART').G2
         PRINT NOGEN
.G2      ANOP
TSPARER8 DC    H'8'
TSPARERT DC    C'TS1     TS2 TS3 TS4 '
TSPARERC TSMSGD ' PARSE ERROR+',TS1,Q1
         TSMSGD ' THE PPL CONTAINS INVALID INFORMATION',Q1
         TSMSGD ' PARSE ERROR+',TS2,Q2
         TSMSGD ' PARAMETERS INCOMPLETE AND COULD NOT PROMPT',Q2
         TSMSGD ' PARSE ERROR+',TS3,Q3
         TSMSGD ' NO SPACE AVAILABLE IN REGION',Q3
         TSMSGD ' PARSE ERROR+',TS4,Q4
         TSMSGD ' A VALIDITY CHECKING ROUTINE REQUESTED TERMINATION',Q4
         TSMSGD
         AIF   ('&REGEN' NE 'YES').G3
         PRINT GEN
.G3      ANOP
         DROP  14
         MEND
         MACRO
&LBL     TSPARSE &Z,&PCL=,&CBUF=,&SYNAD=
&LBL     $STP  &PCL,PPLPCL
         $STP  &CBUF,PPLCBUF
         LA    1,PPL
         LINK  EP=IKJPARS
         AIF   ('&SYNAD' EQ '').L1
         LTR   15,15
         BZ    TSP&SYSNDX+4
         LA    0,&SYNAD
         L     14,TSP&SYSNDX
         BR    14
TSP&SYSNDX DC A(TSPARERR)
.L1      MEND
         MACRO
         TSPPL
         SPACE 2
***********************************************************************
*    THE PARSE PARAMETER LIST (PPL) IS A LIST OF ADDRESSES PASSED     *
*    FROM THE INVOKER TO PARSE VIA REGISTER 1                         *
***********************************************************************
         SPACE 2
PPL      DS    0A
PPLUPT   DS    A        PTR TO UPT
PPLECT   DS    A        PTR TO ECT
PPLECB   DS    A        PTR TO CP'S ECB
PPLPCL   DS    A        PTR TO PCL
PPLANS   DS    A        PTR TO ANS PLACE
PPLCBUF  DS    A        PTR TO CMD BUFFER
PPLUWA   DS    A        PTR TO USER WORK AREA (FOR VALIDITY CK RTNS)
PPLL     EQU   *-PPL
TSPARANS DS    F                        PARSE RETURNS PTR TO PDL HERE
         MEND
         TITLE 'LISTVOL - DYNAMIC STORAGE DEFINITIONS'
         MACRO
         TSWORK
LSPACEL  LSPACE MF=L                    LSPACE PARAMETER LIST
LSPACED  LSPACE MF=(L,DATA)             LSPACE OUTPUT DATA AREA
         UCBSCAN MF=(L,USCNPARM)
PDEPNTR  DS    F
VOLUME   DS    CL6                      SEARCH INDEX
LINE     DS    0C
LNVOL    DS    CL6                      VOLUME ID
         DS    CL1
LNDEV#   DS    CL4                      DEVICE NUMBER
LNCOUNT  DS    CL6                      USAGE COUNT
LNOPNCT  DS    CL4                      OPEN COUNT
         DS    CL1
LNVTOCI  DS    CL6                      VTOC INDEX STATUS
LNFCYLS  DS    CL8                      FREE CYLINDERS
LNFTRKS  DS    CL7                      FREE ADDITIONAL TRACKS
LNFEXTS  DS    CL8                      NUMBER OF FREE EXTENTS
LNFDSCB  DS    CL6                      NUMBER OF FREE DSCBS
LNFVIRS  DS    CL6                      NUMBER OF FREE VTOC INDEX RECS
LNCCYLS  DS    CL8                      NUMBER OF LARGEST CONTIG CYLS
LNCTRKS  DS    CL5                      NUMBER OF LARGEST CONTIG TRKS
LINELEN  EQU   *-LINE                   DISPLAY LINE LENGTH
FLAG     DS    X
*        EQU   X'80'                    FOUND SOME VOLUMES
*        EQU   X'40'                    USING UNITNAME
*        EQU   X'20'                    DONE THE HEADING
*        EQU   X'10'                    USING UCB SERVICES
*        EQU   X'08'                    SPARE
*        EQU   X'04'                    SPARE
*        EQU   X'02'                    SPARE
*        EQU   X'01'                    SPARE
LEN      DS    X
MYECB    DS    F                        USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                       USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                       USED BY PUTLINE ROUTINE
MYOLD    DS    2F                       USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256                 USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                       USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                        ADDRESS OF IKJPUTL
DBLW     DS    4D
USCNWK   DS    XL100                    UCBSCAN WORK AREA
USCNUCB  DS    XL48                     UCBSCAN UCB COPY AREA
USCNCHR  DS    CL4                      UCBSCAN UCB NAME AREA
*
CAM      DS    0D
CAML     DS    4F                       OBTAIN LIST
CAMA     DS    2F                       CCHHR
CAMV     DS    2F                       VOL NAME
         DS    0D
CAMW     DS    350C                     WORK AREA
         MEND
         SPACE 2                                                GP04089
         PRINT ON                                               GP04089
         PUNCH ' ORDER LISTVOL(P) '  MAKE DEBUGGING EASIER      GP04089
         SPACE 1                                                GP04089
         SPACE 1                                                GP04089
         COPY  OPTIONGB                                         GP04089
         SPACE 1                                                GP04089
         SYSPARM LIST=YES                                       GP04089
         TITLE 'LISTVOL - COMMAND PROCESSOR'
*  1995NOV29 - ADD UCBSCAN SUPPORT.
*            - USE NEWER LSPACE INVOCATION TO REPORT FREE DSCBS
*              AND VIRS (DS4DSREC IS NOT ACCURATE FOR SMS VOLUMES)
*              AS WELL AS HANDLE NUMBERS WITH MORE DIGITS.
*            - DISCARD OLD LSPACE CALL AND FORMAT-4 OBTAIN LOGIC.
*  2001APR11 - RESTORE OLD LSPACE CALL AND FORMAT-4 OBTAIN LOGIC
*              TO SUPPORT PRE-ESA SYSTEMS, ESPECIALLY MVS 3.8.
*            - MAKE 'ALL' DEFAULT IF NO OPERANDS.
*  2002APR26 - USE PUTLINE INSTEAD OF TPUT.
*
         PRINT &PRTSOR                                          GP04089
LISTVOL  TSENTRY BASE=12,PL=PARSE,MACRO=YES
         EJECT
*        SET UP IOPL FOR PUTLINE
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                      IOPL
         L     R15,CVTPTR               LOAD CVT POINTER
         USING CVT,R15
         TM    CVTPUTL,X'80'            IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD                  NO - BRANCH TO LOAD
         L     R15,CVTPUTL              YES - USE CVTPUTL
         DROP  R15                      CVT
         B     PUTLOADX                 BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0                   GET ENTRY ADDRESS
PUTLOADX LA    R15,0(,R15)              CLEAR HI BYTE
         ST    R15,MYPUTLEP             SAVE PUTLINE ENTRY ADDRESS
         STLINENO LINE=1          CLEAR SCREEN                  GP04088
         SPACE 2
*        IF NO OPERAND GIVEN DEFAULT TO SHOW ALL VOLUMES
         SPACE
         MVI   FLAG,0                   CLEAR FLAG BYTE
         XC    PDEPNTR,PDEPNTR          CLEAR PDE POINTER
         MVC   VOLUME(6),=CL6' '        CLEAR SEARCH INDEX
         MVI   LEN,5                    AND DEFAULT LENGTH -1
         L     R1,CPPLECT               POINT TO ECT
         TM    ECTSWS-ECT(R1),ECTNOPD   NO OPERAND?
         BO    ISALL                    NO, LEAVE IT BLANK
UNITNO   DS    0H                       HERE IF UNITNAME NOT IN TABLE
         TSPARSE CBUF=(CPPLCBUF,I),PCL=(=V(PCL),I)
         L     R1,TSPARANS              POINT TO DESCRPTER LIST
         LA    R1,VOL-PDL(,R1)          POINT TO VOL DESCRPT
NEXTPDE  ST    R1,PDEPNTR               SAVE CURRENT PDE POINTER
         L     R2,0(,R1)                POINT TO THING
         CLI   5(R1),3                  ALL VOLUMES REQUESTED ?
         BNE   NOTALL                   NO,
         CLC   0(3,R2),=CL3'ALL'        ALL VOLUMES REQUESTED ?
         BNE   NOTALL                   NO,
ISALL    MVI   LEN,255
         B     PUTTOP                   AND GO DO ALL VOLUMES
NOTALL   LH    R1,4(,R1)                AND LENGTH
         LTR   R1,R1                    ANY OPERAND
         BZ    PUTTOP                   NO, GO DEFAULT THE SEARCH INDEX
         BCTR  R1,0                     DECREMENT FOR EXECUTE
         STC   R1,LEN                   SAVE FOR FUTURE COMPARES
         EX    R1,EXMVC                 MOVE TO VOLPREFIX
         B     PUTTOP                   GO SEARCH ON ENTERED INDEX
EXMVC    MVC   VOLUME(0),0(R2)          <<< EXECUTED >>>
         TITLE 'S P A C E -- PRODUCE VOLUME LIST'
PUTTOP   TM    FLAG,X'20'               ALREADY DONE THE HEADING?
         BO    AGAIN                    YES
         OI    FLAG,X'20'               INDICATE HEADING DONE
         L     R1,CVTPTR                GET CVT ADDRESS
         TM    CVTDCB-CVT(R1),X'9B'     MVS/ESA OR LATER?
         BO    PUTTOPXA                 YES
         LA    R1,LVHEAD1
         LA    R0,L'LVHEAD1             RELOAD THE LENGTH
         BAL   R14,PUTMSG               AND DUMP IT
         LA    R1,LVHEAD2
         LA    R0,L'LVHEAD2             RELOAD THE LENGTH
         BAL   R14,PUTMSG               DUMP THE HEADING
         B     AGAIN
PUTTOPXA LA    R1,LVHEADX1
         LA    R0,L'LVHEADX1            RELOAD THE LENGTH
         BAL   R14,PUTMSG               AND DUMP IT
         LA    R1,LVHEADX2
         LA    R0,L'LVHEADX2            RELOAD THE LENGTH
         BAL   R14,PUTMSG               DUMP THE HEADING
         MVC   LSPACEL(LSPACESL),LSPACES     SET LSPACE PARAMETER LIST
         SPACE 3
*        SCAN UCB TABLE
         SPACE 1
AGAIN    L     R1,CVTPTR                GET CVT ADDRESS
         TM    CVTDCB-CVT(R1),X'80'     EXTENDED ARCHITECTURE?
         BZ    NOTMVSXA                 NO, DO STANDARD OS UCB LOOKUP
         TM    CVTDCB-CVT(R1),X'9B'     MVS/ESA?
         BNO   ISMVSXA                  NO, USE XA UCB CHAIN
         TM    CVTOSLVL-CVT(R1),CVTUCBSV    UCB SERVICES AVAILABLE?
         BNO   ISMVSXA                  NO, USE XA UCB CHAIN
         OI    FLAG,X'10'               YES, FLAG USE OF UCB SERVICES
         XC    USCNWK,USCNWK            CLEAR WORK AREA FOR SCAN START
         B     NXTUCB                   GET FIRST UCB
ISMVSXA  L     R8,CVTUCBA-CVT(,R1)      POINT TO FIRST UCB
         B     GOTUCB                   PROCESS IT
NOTMVSXA L     R6,CVTILK2-CVT(,R1)      POINT TO UCB LOOKUP TABLE
         XR    R7,R7                    CLEAR BACK PTR
         XR    R8,R8                    CLEAR FOR ICM
         SPACE 1
LOOP     CLI   0(R6),X'FF'              END OF UCB LOOK-UP TABLE?
         BE    RETURN                   YES, STOP SCANNING
         ICM   R8,3,0(R6)               GET NEXT UCB FROM TABLE & TEST
         BNZ   GOTUCB                   IF NON-ZERO GO ON
         CR    R8,R7                    ALREADY DONE THIS ONE?
         BNH   NEXTUCB                  IF SO SKIP IT NOW
         LR    R7,R8                    SAVE THIS ONE AS DONE
         B     GOTUCB
NEXTUCB  LA    R6,2(,R6)                NEXT ONE
         B     LOOP                     GO ON SCANNING
NXTUCB   TM    FLAG,X'10'               USING UCB SERVICES?
         BO    ESASCAN                  YES
         L     R1,CVTPTR                GET CVT ADDRESS
         TM    CVTDCB-CVT(R1),X'80'     EXTENDED ARCHITECTURE?
         BZ    NEXTUCB                  NO, DO STANDARD OS UCB LOOKUP
         USING UCB,R8
         ICM   R8,15,UCBNXUCB           GET NEXT UCB ADDRESS
         BZ    RETURN                   STOP AT END OF UCB CHAIN
         B     GOTUCB
ESASCAN  UCBSCAN COPY,                  NOT APF AUTHORIZED             +
               WORKAREA=USCNWK,         100-BYTE WORK AREA/SCAN TOKEN  +
               UCBAREA=USCNUCB,         48-BYTE UCB BASE COPY AREA     +
               DEVNCHAR=USCNCHR,        4-BYTE DEVICE NUMBER           +
               DYNAMIC=YES,             INCLUDE DYNAMIC UCBS IN SCAN   +
               RANGE=ALL,               INCLUDE 4-DIGIT NUMBERS        +
               NONBASE=NO,              JUST NEED 1 EXPOSURE PER DISK  +
               DEVCLASS=DASD,           ONLY INTERESTED IN DISKS       +
               MF=(E,USCNPARM)          POINT TO PARAMETER LIST
         LTR   R15,R15                  UCB FOUND?
         BNZ   RETURN                   NO, END OF SCAN
         LA    R8,USCNUCB               YES, POINT TO UCB COPY
         SPACE 1
*        FOR EACH UCB, CHECK FOR DIRECT ACCESS 2314 OR 2301
         SPACE 1
GOTUCB   TM    UCBTBYT3,UCB3DACC        DIRECT ACCESS?
         BZ    NXTUCB                   NO
         TM    SRTESTAT,SRTEONLI        ONLINE?
         BNO   NXTUCB                   NO, IGNORE DEVICE
         CLC   UCBTBYT3(2),=X'2005'     DATA CELL?
         BE    NXTUCB                   IF SO SKIP IT
         TM    SRTEVOLI,X'FF'           ANY NAME?
         BNM   NXTUCB                   NO, IGNORE IT
         CLI   LEN,255                  DO ALL?
         BE    USEUCB                   YES, USE IT
EXCLC    CLC   VOLUME(0),SRTEVOLI       <<< EXECUTED >>>
         XR    R1,R1                    CLEAR FOR IC
         IC    R1,LEN                   GET LENGTH
         EX    R1,EXCLC                 SEE IF THIS IS A MATCH
         BNE   NXTUCB                   IF NOT SKIP IT
         SPACE 1
*        FORMAT UCB INFORMATION FIRST
         SPACE 1
USEUCB   MVI   LINE,C' '                CLEAR THE LINE
         MVC   LINE+1(LINELEN-1),LINE
         MVC   LNVOL,SRTEVOLI           PRINT VOLUME NAME
         MVC   LNDEV#+1(3),UCBNAME      GET UNIT ADDRESS
         CLI   LNDEV#+1,C'U'            'UCB' ACRONYM?
         BNE   UCBNUMOK                 NO, 3-DIGIT DEVICE NUMBER IS OK
         MVC   LNDEV#,USCNCHR           YES, SHOW 4-DIGIT DEVICE NUMBER
UCBNUMOK L     R1,CVTPTR                GET CVT ADDRESS
         TM    CVTDCB-CVT(R1),X'80'     EXTENDED ARCHITECTURE?
         BO    XACOUNT                  YES, COUNT IS HALFWORD
         XR    R1,R1                    CLEAR A REG
         IC    R1,SRTEUSER              GET USE COUNT
         B     GOTCOUNT                 DISPLAY IT
XACOUNT  SLR   R1,R1                    CLEAR FOR INSERT
         ICM   R1,3,SRTEUSER            GET USE COUNT
GOTCOUNT CVD   R1,DBLW                  CONVERT TO PRINT
         MVC   LNCOUNT,ED5              LOAD EDIT MASK
         ED    LNCOUNT,DBLW+5           PLACE IT ON THE LINE
GETOPNCT SLR   R1,R1                    CLEAR FOR INSERT
         IC    R1,UCBDMCT               LOAD UCB OPEN COUNT
         CH    R1,=H'128'               HIGH-ORDER BIT ON?
         BL    SHOWOPEN                 NO, SHOW COUNT
         SH    R1,=H'128'               TURN OFF HIGH-ORDER BIT
SHOWOPEN CVD   R1,DBLW                  CONVERT TO PRINT
         MVC   LNOPNCT,ED3              LOAD EDIT MASK
         ED    LNOPNCT,DBLW+6           PLACE IT ON THE LINE
         SPACE 1
*        GET MORE INFORMATION FROM LSPACE
         SPACE 1
         L     R1,CVTPTR                GET CVT ADDRESS
         TM    CVTDCB-CVT(R1),X'9B'     MVS/ESA?
         BNO   STDLSPC                  NO, USE OLD LSPACE FORM
         LSPACE MF=(E,LSPACEL),DATA=LSPACED,SMF=NONE,UCB=(R8)
         LTR   R15,R15                  DID IT WORK?
         BZ    SPCOK                    YES
VTOCERR  MVC   LNFCYLS(19),=CL19'ERROR IN VTOC - RC='
         CVD   R15,DBLW
         UNPK  LNFCYLS+19(2),DBLW+6(2)
         OI    LNFCYLS+20,X'F0'
PUTIT    LA    R1,LINE                  ADDRESS
         LA    R0,LINELEN               LENGTH
         BAL   R14,PUTMSG               AND PRINT THE LINE
         OI    FLAG,X'80'               SAY WE HAVE DONE SOME
         B     NXTUCB                   NOW GO ON
SPCOK    LA    R7,LSPACED               POINT TO LSPACE RETURN AREA
         USING LSPCRET,R7
         TM    LSPDSTAT,LSPDIXDS        VTOC INDEX EXISTS?
         BZ    IDXOK                    NO
         MVC   LNVTOCI,=C'EXISTS'       YES
         TM    LSPDSTAT,LSPDIXAC        VTOC INDEX ACTIVE?
         BZ    IDXOK                    NO
         MVC   LNVTOCI,=C'ACTIVE'       YES
IDXOK    TM    LSPDRETN,LSPDSPAC        SPACE INFORMATION RETURNED?
         BZ    SPCDN                    NO, LEAVE BLANK
         L     R0,LSPDTTRK              TOTAL ADDITIONAL FREE TRACKS
         CVD   R0,DBLW
         MVC   LNFTRKS-1(8),ED7
         ED    LNFTRKS-1(8),DBLW+4
         L     R0,LSPDTCYL              TOTAL FREE CYLINDERS
         CVD   R0,DBLW
         MVC   LNFCYLS,ED7
         ED    LNFCYLS,DBLW+4
         L     R0,LSPDNEXT              NUMBER OF FREE EXTENTS
         CVD   R0,DBLW
         MVC   LNFEXTS,ED7
         ED    LNFEXTS,DBLW+4
         L     R0,LSPDLTRK              LARGEST ADDITIONAL FREE TRACKS
         CVD   R0,DBLW
         MVC   LNCTRKS-1(6),ED5
         ED    LNCTRKS-1(6),DBLW+5
         L     R0,LSPDLCYL              LARGEST FREE CYLINDERS
         CVD   R0,DBLW
         MVC   LNCCYLS,ED7
         ED    LNCCYLS,DBLW+4
SPCDN    TM    LSPDRETN,LSPDF0CN        FORMAT-0 COUNT RETURNED?
         BZ    F0DN                     NO, LEAVE BLANK
         L     R0,LSPDF0S               NUMBER OF FREE DSCBS
         CVD   R0,DBLW
         MVC   LNFDSCB,ED5
         ED    LNFDSCB,DBLW+5
F0DN     TM    LSPDRETN,LSPDVRCN        FREE VIR COUNT RETURNED?
         BZ    PUTIT                    NO, LEAVE BLANK
         L     R0,LSPDVIRS              NUMBER OF FREE VIRS
         CVD   R0,DBLW
         MVC   LNFVIRS,ED5
         ED    LNFVIRS,DBLW+5
         B     PUTIT                    NOW GO ON
         SPACE 1
*        USE ORIGINAL LSPACE INTERFACE FORMAT
STDLSPC  LR    R0,R8                    POINT TO UCB
         LA    R1,DBLW                  WORKSPACE
         SVC   78     (LSPACE SVC)      GET SPACE INFO
         LTR   R15,R15                  DID IT WORK?
         BNZ   VTOCERR                  NO
         MVC   LNVTOCI(4),DBLW+6        CYL (TOTAL)
         MVC   LNVTOCI+5(4),DBLW+11     TRK (TOTAL)
         MVC   LNVTOCI+10(3),DBLW+17    NUM (OF AREAS)
         MVC   LNVTOCI+19(4),DBLW+21    CYL (LARGEST)
         MVC   LNVTOCI+24(4),DBLW+26    TRK (LARGEST)
         SPACE 1
*        NOW FIND THE NUMBER OF DSCBS LEFT (FMT0 COUNT)
         SPACE 1
         MVC   LNVTOCI+14(4),=C'????'   PREPARE FOR ERROR
         MVC   CAML(4),=AL1(192,128,0,0) MOVE IN OPTIONS
         MVC   CAMV(6),SRTEVOLI         VOLUME NAME
         LA    R0,CAMA                  CCHHR
         LA    R1,CAMV                  VOLUME LIST
         LA    R2,CAMW                  WORKAREA
         STM   R0,R2,CAML+4             SET UP CAMLIST
         XC    CAMW(60),CAMW            CLEAR DEB
         MVI   CAMW+16,X'01'            1 EXTENT
         MVI   CAMW+28,X'04'            16 BYTES PER
         ST    R8,CAMW+32               UCB ADDR TO EXTENT
         MVC   CAMW+42(6),=X'FFFFFFFF7FFF' WHOLE PACK
         STM   R0,R15,CAMW+60           SAVE REGS
         LA    R4,CAMW+60               POINT TO REGS
         LA    R1,CAMW                  DEB LOCATION
         MVC   CAMW(4),SRTEFSCT         ALIGN UCBVTOC
         L     R0,CAMW                  TTR0
         LR    R2,R1                    MBBCCHHR
         L     R15,CVTPTR               POINT TO CVT
         L     R15,CVTPCNVT-CVT(R15)    TTR CONVERT
         BALR  R14,R15                  GO CONVERT IT
         LM    R0,R14,0(R4)             RESTORE REGS
         LTR   R15,R15                  ERROR?
         BNZ   PUTIT                    YES, NO MORE DATA FOR LINE
         MVC   CAMA(5),CAMW+3           CCHHR TO THING
         OBTAIN CAML                    GET FORMAT 4 DSCB
         LTR   R15,R15                  DID IT WORK?
         BNZ   OBTNERR                  THEN GIVE UP
         LH    R1,CAMW+50               GET NUMBER OF FMT0S
         CVD   R1,DBLW                  CONVERT IT
         UNPK  LNVTOCI+13(5),DBLW+5(3)  AND MOVE TO THE LINE
         MVI   LNVTOCI+13,C' '          DON'T NEED HIGH BYTE
         OI    LNVTOCI+17,X'F0'         FIX SIGN
         B     PUTIT                    NOW GO ON
OBTNERR  CVD   R15,DBLW                 SHOW OBTAIN RETURN CODE
         OI    DBLW+7,X'0F'
         UNPK  LNVTOCI+16(2),DBLW+6(2)
         MVC   LNVTOCI+14(2),=C'RC'
         B     PUTIT                    NOW GO ON
         SPACE 1
*        GO AWAY NOW
         SPACE 1
RETURN   TM    FLAG,X'80'               NO VOLUMES FOUND?
         BO    RET77                    THERE WERE SOME
         LA    R1,=CL40'NO VOLUMES FOUND FOR INDEX GIVEN'
         LA    R0,40                    LENGTH
         BAL   R14,PUTMSG               DUMP IT
RET77    NI    FLAG,255-X'80'           RESET FOUND FLAG
         TM    FLAG,X'40'               USING UNIT NAME?
         BO    RET                      YES
         L     R1,PDEPNTR               POINT TO PREVIOUS PDE
         LTR   R1,R1                    VALID POINTER?
         BNP   RET                      NO, PROBABLY NO OPERANDS
         CLI   8(R1),X'FF'              LAST ONE?
         BE    RET                      YES
         L     R1,8(,R1)                NO, POINT TO NEXT PDE
         B     NEXTPDE
         SPACE 2
*ET      XR    R15,R15                  RETURN CODE = 0
*        SVC   3                        RETURN TO TMP
RET      EXIT  RC=0,LV=TSDSECTL-TSDSECT
         SPACE 2
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         EX    R14,PUTMSGMV        MOVE MESSAGE IN
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
PUTMSGMV MVC   0(0,R15),0(R1)      <<< EXECUTED >>>
         TITLE 'LISTVOL   -- CONSTANTS'
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         +
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
LSPACES  LSPACE MF=L                    LSPACE PARAMETER LIST TEMPLATE
LSPACESL EQU   *-LSPACES                LENGTH OF STATIC PARAMETER LIST
LVHEADX1 DC    C'VOLUME  DEV USAGE OPN  VTOC  ---------------FREE------+
               --------- ---CONTIG---'
LVHEADX2 DC    C' NAME  NMBR COUNT CNT INDEX  CYLNDRS TRACKS EXTENTS DS+
               CBS  VIRS CYLNDRS TRKS'
LVHEAD1  DC    C'VOLUME  DEV USAGE OPN ------ FREE ------ --CONTG--'
LVHEAD2  DC    C' NAME  NMBR COUNT CNT CYLS TRKS NUM DSCB CYLS TRKS'
ED3      DC    X'40202120'
ED5      DC    X'402020202120'
ED7      DC    X'4020202020202120'
         LTORG
         PRINT &PRTSYS
PCL      IKJPARM DSECT=PDL
VOL      IKJIDENT 'VOLUME SEARCH INDEX',LIST,MAXLNTH=6,FIRST=ALPHANUM, X
               OTHER=ALPHANUM,PROMPT='VOLUME SEARCH INDEX'
         IKJENDP
         PRINT &PRTSYS
         TITLE 'LISTVOL   -- DSECTS'
CVTILK2  EQU   CVT+40
         CVT   DSECT=YES
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
         IKJPSCB
         EJECT
         IKJECT
         EJECT
         IKJIOPL
         EJECT
LSPCRET  LSPACE MF=(D,DATA)
         END
