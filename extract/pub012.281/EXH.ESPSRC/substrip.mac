SUBSTRIP TITLE 'S U B S T R I P  ***  TEXT STRIPPER'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
***********************************************************************
**                                                                   **
**  SUBSTRIP IS ANALOGOUS TO REXX STRIP:                             **
**    CALL SUBSTRIP,(@TEXT,@LEN,TYPE,CHAR),VL                        **
**      TEXT IS THE ADDRESS OF THE FIRST TEXT BYTE ADDRESS           **
**      LEN  IS THE ADDRESS OF A FULLWORD CONTAINING THE TEXT LENGTH **
**      TYPE IS THE OPTIONAL ADDRESS OF C'B', C'T', OR C'L'          **
**         MISSING OR ERRONEOUS VALUE TREATED AS 'B' W/RETURN CODE 4 **
**      STRIP IS THE OPTIONAL ADDRESS OF THE CHARACTER TO BE REMOVED **
**         MISSING VALUE DEFAULTS TO BLANK                           **
**                                                                   **
**    WHEN FEWER THAN FOUR ADDRESSES ARE PASSED, THE VL OPTION MUST  **
**      BE USED.                                                     **
**                                                                   **
**    UPDATED TEXT ADDRESS AND LENGTH ARE PASSED BACK VIA THE        **
**      PARAMETER LIST (ADDRESS IN PARM LIST; LENGTH IN 'LEN' ADDR)  **
**                                                                   **
***********************************************************************
*                                                                     *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
SUBSTRIP PGMHEAD ZERO,BASE=R12,PARM=R11,AM=31,RM=24 (SAVE AREA)
         L     R9,0(,R11)    GET TEXT ADDRESS
         L     R8,4(,R11)    COPY ADDRESS OF LENGTH
         ICM   R1,15,0(R8)   GET LENGTH
         BNP   NULLSTR       SET NULL STRING
         ICM   R0,15,0(R9)   GET ADDRESS
         BNP   NULLSTR       SET NULL STRING
         MVI   CHAR,C' '     DEFAULT TO BLANK PAD/STRIP
         MVI   FLAGS,FGLEAD+FGTRAIL STRIP BOTH ENDS
         LTR   R8,R8         LAST PARAMETER?
         BM    PREPROC       YES; HAVE ALL I NEED
*---------------------------------------------------------------------*
*  LOOK FOR 0 ADDRESS; OTHERWISE C'B', C'L', OR C'T' (ANY CASE)       *
*---------------------------------------------------------------------*
         L     R2,8(,R11)    LOAD ADDRESS OF TYPE
         L     R3,=X'7FFFFFFF'  MASK FOR VL BIT
         NR    R3,R2         IS THE ADDRESS = 0 ?
         BZ    DONETYPE      YES; USE DEFAULT
         MVC   TRTTABLE(1),0(R2) COPY REQUEST TO WORK AREA
         OI    TRTTABLE,C' ' MAKE UPPER CASE
         LM    R4,R5,=AL1(0,FGLEAD,FGTRAIL,FGLEAD+FGTRAIL,C' ',C'L',C'T*
               ',C'B')
         LA    R3,3
LOOPTYPE CLM   R5,1,TRTTABLE MATCHING BYTE ?
         BE    HAVETYPE      YES; STASH MATCHING FLAG
         SRDL  R4,8          SHIFT OVER
         BCT   R3,LOOPTYPE   TRY AGAIN
         OICC  4,4,RESULT=RETCODE   SET RC AND REASON TO 4
         B     DONETYPE      RETAIN 'B' DEFAULT
HAVETYPE STC   R4,FLAGS      SET FLAG BITS
DONETYPE LTR   R2,R2         LAST PARAMETER?
         BM    PREPROC       YES; HAVE ALL I NEED
*---------------------------------------------------------------------*
*  LOOK FOR 0 ADDRESS; OTHERWISE COPY STRIP BYTE                      *
*---------------------------------------------------------------------*
         L     R2,12(,R11)   LOAD ADDRESS OF STRIP/PAD CHARACTER
         L     R3,=X'7FFFFFFF'  MASK FOR VL BIT
         NR    R3,R2         IS THE ADDRESS = 0 ?
         BZ    PREPROC       YES; USE BLANK DEFAULT
         MVC   CHAR(1),0(R2)  COPY REQUEST TO SAVE AREA
*---------------------------------------------------------------------*
*  PREPARE FOR PROCESSING                                             *
*---------------------------------------------------------------------*
PREPROC  MVI   TRTTABLE,X'FF' MAKE TRT STOPPER
         MVC   TRTTABLE+1(L'TRTTABLE-1),TRTTABLE FILL AREA
         SR    R5,R5
         IC    R5,CHAR       GET PAD CHARACTER
         LA    R5,TRTTABLE(R5) POINT TO ITS SPOT
         MVI   0(R5),0       MAKE TRT IGNORE
*---------------------------------------------------------------------*
*  INVOKE LEADING AND TRAILING STRIP FUNCTIONS                        *
*---------------------------------------------------------------------*
PROCESS  TM    FLAGS,FGLEAD  STRIP LEADING PADS ?
         BZ    PROCEST       NO
         BAS   R14,TRIMMER   GO TRIM FROM FRONT
PROCEST  TM    FLAGS,FGTRAIL STRIP TRAILING PADS ?
         BZ    NULLSTR       NO
         BAS   R14,TRAILER   TRIM FROM BACK
NULLSTR  LTR   R1,R1         CHECK LENGTH
         BP    SAVESTR       OK
         SR    R1,R1         MAKE SURE NON-NEGATIVE
         LA    R0,=C' '      JUST IN CASE
SAVESTR  ST    R0,0(,R9)     RETURN NEW STRING ADDRESS
         ST    R1,0(,R8)     RETURN NEW LENGTH
         PGMEXIT COPYRET=(RETCODE,8)  RETURN RC AND REASON
         SPACE 3
*---------------------------------------------------------------------*
*  TRIMMER - REMOVE LEADING PADS FROM STRING A=R0, L=R1               *
*---------------------------------------------------------------------*
TRIMMER  STM   R2,R5,20(R13)  SAVE A FEW REGISTERS
         LTR   R3,R1         TEST CURRENT LENGTH
         BNP   TRIMMEX       NOTHING TO DO
TRIMMELP LR    R4,R0         COPY STRING START ADDRESS
         LA    R4,0(,R4)     CLEAR HIGH                         GP10169
         LTR   R1,R3         ANYTHING LEFT TO CHECK ?
         BNP   TRIMMEX       NO; DONE
         LA    R1,0(R3,R4)   LAST BYTE + 1
         SR    R2,R2         FOR TEST
         LR    R15,R3
         MIN   (R15),=H'256',TYPE=H  ONE CHUNK AT A TIME
         SH    R15,=H'1'     EXECUTE LENGTH                     GP15094
         BM    TRIMNULL        NOTHING LEFT                     GP15094
         EX    R15,EXTRT     LOOK FOR NON-PAD
         LR    R0,R1         NEW SCAN START
         AR    R3,R4         ADD START ADDRESS
         SR    R3,R1         LESS STOP = REMAINING LENGTH
         LTR   R2,R2         DID WE HIT A STOP CHARACTER ?
         BZ    TRIMMELP      NO; SCAN ANOTHER SEGMENT
TRIMMEST LR    R1,R3         RETURN LENGTH
TRIMMEX  LM    R2,R5,20(R13)  RESTORE REGISTERS
         BR    R14           RETURN TO CALLER
TRIMNULL SLR   R1,R1                                            GP15094
         B     TRIMMEX                                          GP15094
EXTRT    TRT   0(0,R4),TRTTABLE  SCAN FOR PAD CHARACTER
         SPACE 3
*---------------------------------------------------------------------*
*  TRAILER - REMOVE TRAILING PADS FROM STRING A=R0, L=R1              *
*---------------------------------------------------------------------*
TRAILER  STM   R0,R5,20(R13)  SAVE A FEW REGISTERS
         LTR   R3,R1         TEST CURRENT LENGTH
         BNP   TRAILEX       NOTHING TO DO
TRAILEP  LR    R4,R0         COPY TEXT ADDRESS
         AR    R4,R3         ADDRESS OF LAST BYTE + 1
         BCTR  R4,0          END BYTE
         LR    R15,R3
         MIN   R15,=H'256',TYPE=H  ONE CHUNK AT A TIME
         SH    R15,=H'1'     EXECUTE LENGTH                     GP15094
         BM    TRAILNUL        NOTHING LEFT                     GP15094
         EX    R15,EXMVCIN   MOVE INVERSE
         LA    R4,FLIP
         LA    R1,FLIP+1(R3) LOAD END ADDRESS
         SR    R2,R2         FOR TEST
         EX    R15,EXTRT     LOOK FOR NON-PAD
         AR    R3,R4         ADD START ADDRESS
         SR    R3,R1         LESS STOP = REMAINING LENGTH
         BNP   TRAILEST
         LTR   R2,R2         MORE TO DO ?
         BZ    TRAILEP       YES; GO AGAIN
TRAILEST ST    R3,24(,R13)   RETURN LENGTH
TRAILEX  LM    R0,R5,20(R13)  RESTORE REGISTERS
         BR    R14           RETURN TO CALLER
TRAILNUL SLR   R3,R3                                            GP15094
         B     TRAILEST                                         GP15094
EXMVCIN  MVCIN FLIP(0),0(R4)  MOVE AND FLIP INPUT
         SPACE 1
SAVE     DSECT ,
RETCODE  DS    F    1/2      RETURN CODE
RSNCODE  DS    F    2/2      REASON CODE
         SPACE 1
CHAR     DS    C             PADDING CHARACTER
FLAGS    DS    X             PROCESSING FLAGS
FGLEAD   EQU   2               STRIP LEADING BYTES
FGTRAIL  EQU   1               STRIP TRAILING BYTES
TRTTABLE DS    CL256         WORK SPACE FOR TRT
FLIP     DS    CL256         WORK SPACE FOR MVCIN
SAVEEND  EQU   *
         PRINT &PRTSYS
         CVT   DSECT=YES
         IHACDE ,
         END
