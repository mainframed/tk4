@INR     TITLE '@ I N P R E A D  ***  INPUT SERVICES FOR SHORT RECORDS'
         COPY  ASMOPTS                                          GP14237
         SPACE 1
         ASMPARM LIST=YES    MERGE AND SHOW OPTIONS             GP14237
         SPACE 1
         GBLC  &SRVLMOD(20),&SRVLDEL(20)                        GP03150
         GBLA  &SRVNMOD                                         GP03150
&SRVNMOD SETA  1             FAKE OUT SUBCALL                   GP03241
&SRVLMOD(1) SETC 'SUBDSERV'  TO GENERATE L SUBDSERV             GP03241
&SRVLDEL(1) SETC 'SUBDSERV'    INSTEAD OF L =A()                GP03241
@INPREAD CSECT ,
***********************************************************************
*                                                                     *
*                    INSTALLATION DEPENDENT VALUES                    *
*                                                                     *
MAXWIDTH EQU   500           MAX DEVICE WIDTH TO SUPPORT (NIH WYLBUR)
*        THE WIDTH PARAMETER MUST MATCH WIDTH= ON MAPINPWK TO MAKE
*        SURE OTHER USERS GET THE CORRECT WORK AREA SIZE         90261
         SPACE 1
*                                                                     *
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 1981  EXPERT SYSTEM PROGRAMMING INC.               *
*        COPYRIGHT 1998  GERHARD POSTPISCHIL                          *
*                                                                     *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*         UNDER ESA AND OS/390, HAVING BOTH THE DIRECTORY AND A       *
*         MEMBER OPEN RESULTS IN 522 ABENDS (UNPOSTED IOB).           *
*         THE DIRECTORY IS NOW READ INTO STORAGE AND THE DCB CLOSED.  *
*                                                                     *
***********************************************************************
         EJECT ,
*        INPUT SERVICE ROUTINE
*          TO USE WITH MACROS, LOAD EP=@INPREAD / ST R0,@INPREAD
*
*        FUNCTIONS :
*
* &NM    INPWORK  DDNAME,ALTDDNM,WIDTH=80,EODAD=,FILL=,EDIT=     81284
*         DEFINITION OF INPUT WORK AREA. ASSOCIATION BETWEEN A WORK
*         AREA AND A 'DEVICE NUMBER' (1-8) IS MADE AT OPEN TIME.
*         WIDTH SPECIFIES THE MINIMUM REQUIRED WIDTH; MAX IS 500 81284
*         FILL SPECIFIES THE PADDING CHARACTER FOR SHORT RECORDS.
*         EODAD AS FOR DCB.                                      81284
*         EDIT USED FOR WYLBUR LINE NUMBER PROCESSING. IF 0 OR OMITTED,
*         NUMBERS ARE PLACED IN 73/80 IN EDIT FORMAT; X'80' OMITS
*         NUMBERS; ANY OTHER VALUE VALID IN SERVCOMP FG1 MAY BE USED.
*
*         PDS=DIR×<MEM×ALI, UPD>                                 89352
*              DIR REQUESTS READING A PDS DIRECTORY (RECFM=U)    89352
*              MEM REQUESTS READING ALL MEMBERS (EXCEPT ALIAS)   89352
*              ALI REQUESTS READING ALL MEMBERS AND ALIAS ENTRIES
*              UPD REQUESTS ./ ADD BEFORE EACH MEMBER            89352
*              ALL IGNORED FOR SEQUENTIAL OR SPECIAL DATASET     89352
*         PDE=0×AREA  AREA MAPPED BY SERVPDS RETURN=YES          89352
*              CONTAINS UPDATED MEMBER POINTER AND DATA          89352
*
* &NM    INPOPEN  WORK,DEV=N,OPT=(ABEND,NOWTO)   OPENS INPUT FILE 'N'
*
* &NM    INPCLOSE DEV=N OR DEV=ALL  CLOSES FILE 'N' OR ALL FILES
* &NM    INPCLOSE TCLOSE,DEV=N  PDS/SKIP MEMBER   SEQ/NO-OP (RC=4)
*
* &NM    INPGET  DEV=         RETRIEVES THE NEXT RECORD (LOCATE MODE)
*              R0=LENGTH  R1=ADDRESS (+X'80' IF NEW MEMBER)      89352
*
* &NM    INPKEEP  DEV=        KEEPS THE CURRENT RECORD FOR NEXT GET
*
* &NM    INPREAD DEV=         RETURNS THE CURRENT INPUT BLOCK
*                                                                90233
* &NM    INPFEOV DEV=         FORCES EOF ON CURRENT MEMBER       90233
*                                                                90233
* &NM    INPKEEPM DEV=        FORCES EOF AND REREAD OF CURRENT   90233
*                               MEMBER                           90233
*
* &NM    INPFIND @NAME,DEV=   FORCES EOF AND READS A MEMBER     GP02248
*                                                               GP03236
* &NM    INPQMEM @NAME,DEV=   QUERIES FOR MEMBER INFORMATION; LEAVES
*                               STATUS UNCHANGED OTHERWISE      GP03236
***********************************************************************
*  MAINTENANCE:                                                 GP03241
*  2003-08-24  GYP  SUPPORT MEMBER QUERY (INPQMEM)              GP03241
*  2003-08-28  GYP  SUPPORT INPUT FROM A PDS/PDSE CONCATENATION GP03241
*  2014-08-25  GYP  MINOR FIXES; TESTS FOR ESDS/KSDS SUPPORT    GP14237
*                                                               GP03241
***********************************************************************
         PRINT &PRTSOR
*   NOTE:  EODAD IS 24-BIT ADDRESS, HENCE RMODE 24              GP99007
@INPREAD PGMHEAD ZERO,BASE=(R11,R12),PARM=,AM=31,RM=24,SETAM=31 GP99007
         L     R10,SAVE13    RELOAD USER'S SAVE AREA ADDRESS
         LM    R3,R6,SAVE14-SAVE(R10)  RELOAD R14-R1            GP99007
         STM   R5,R6,CALLPARM  SAVE PARAMETERS
         ST    R6,RETR1      PRESET TO RETURN R1 UNCHANGED      GP99007
         MVI   CLAM,CLAM31   SHOW CALLER IN AMODE 31            GP99007
         LTR   R3,R3         IS CALLER IN AMODE 24?             GP99007
         BM    ENTRY31       NO                                 GP99007
         OC    CALLFLG,CALLOFG  COPY OLD BYTE TO NEW            GP99007
         MVI   CALLOFG,0     KILL OLD FLAG BYTES                GP99007
         MVI   CLAM,CLAM24   SHOW CALLER IN AMODE 24            GP99007
ENTRY31  CLI   CALLDEV,0     USER SPECIFIED DEVICE NUMBERS ?    GP99007
         BNE   RECURSED      YES
         MVI   CALLDEV,1     ELSE DEFAULT TO FILE 1
         B     RECURSED      START PROCESSING IT
         SPACE 1
RECURSE  CLI   CALLDEV,0     ALL REQUESTS DONE ?
         BE    EXITSET       YES; QUIT
RECURSED LA    R1,1          SET TM BIT
         LA    R2,8          TEST 8 BITS
LOOPPW   STC   R1,DB         SET MASK BIT
         NC    DB(1),CALLDEV  IN USER'S REQUEST
         BNZ   LOOKPW        ON - FIND ASSOCIATED WORK AREA      81284
BUMPPW   SLL   R1,1          SET NEXT BIT
         BCT   R2,LOOPPW     TRY AGAIN
EXITSET  PGMEXIT COPYRET=(RETCODE,12)  RETURN R15, R0, R1       GP99007
         SPACE 1
EXIT16   MVI   RETCC,16      SET DISASTER
         B     EXITSET       AND QUIT
         SPACE 1
         USING INPTWORK,R8   DECLARE DYNAMIC INPUT WORK AREA
LOOKPW   XI    DB,X'FF'      COMPLEMENT IT                       81284
         NC    CALLDEV,DB      AND COMPLIMENT IT                 81284
         LA    R4,9
         SR    R4,R2         GET RELATIVE DEVICE NUMBER
         O     R4,=C'INP0'   MAKE PW ID FIELD NAME
         LTCB  R3,USE=YES    LOAD AND DECLARE TCB               GP97224
         LR    R9,R3         SAVE TCB ADDRESS FOR OPEN           85160
LOOPTCB  ICM   R8,15,TCBFSA  GET HIGH-LEVEL SAVE AREA           GP98323
         BZ    BUMPTCB       NONE ?  GET NEXT TCB
LOOPPTR  ICM   R8,15,0(R8)   GET FIRST WORD IN SAVE AREA        GP98323
         BZ    BUMPTCB       NONE
         CL    R4,PWID       MATCHING ID FIELD ?
         BNE   LOOPPTR
         ST    R8,CURRPW     SAVE                                85035
         B     BRANCHPW      ELSE PROCESS THIS REQUEST
BUMPTCB  CLM   R3,15,TCBJSTCB  TOP OF TREE ?                    GP98323
         BE    NONEPW        YES; SEE IF OPEN
         ICM   R3,15,TCBOTC  GET PARENT                         GP98323
         BNZ   LOOPTCB       AND TRY IT
NONEPW   SLR   R8,R8         JUST IN CASE
         CLI   CALLFUN,FUNOPEN  OPEN ?                          GP02248
         BE    BRANCHPW      YES; PROCESS
SET8     OI    RETCC,RETC8   SET MINOR ERROR - NOT OPEN
         B     RECURSE       SEE IF MORE
SET4     OI    RETCC,4       SET MINOR ERROR
         B     RECURSE
         DROP  R3
         SPACE 1
BRANCHPW IC    R0,CALLFUN    GET REQUESTED FUNCTION
         BIX   ERR=EXIT16,LOC=(PCLOSE,TCLOSE,POPEN,PGET,PKEEP,PREAD,PFE*
               OV,PKEEPM,PFIND,PQMEM)                           GP03236
FUNCLOSE EQU   0             CLOSE CURRENT DCB                  GP02248
FUNTCLOS EQU   1             TCLOSE REQUEST                     GP02248
FUNOPEN  EQU   2             OPEN REQUESTED INPWORD BLOCK       GP02248
FUNGET   EQU   3             GET REQUEST                        GP02248
FUNKEEP  EQU   4             KEEP REQUEST (NEXT GET/READ GETS SAME)
FUNREAD  EQU   5             READ REQUEST                       GP02248
FUNFEOV  EQU   6             FEOV REQUEST                       GP02248
FUNKEEPM EQU   7             KEEPM REQUEST (NEXT READ/GET SAME MEMBER)
FUNFIND  EQU   8             (RE)POSITION TO A MEMBER NAME      GP02248
FUNQMEM  EQU   9             MEMBER INFORMATION QUERY           GP03236
         SPACE 2                                                 89352
***********************************************************************
**                                                                   **
**  FIND - OPEN MEMBER DCB TO REQUESTED NAME                         **
**    CLOSES CURRENTLY OPEN MEMBER, IF ANY                           **
**                                                                   **
***********************************************************************
PFIND    TM    PWFLAG,PWFEXT   DOING A PDS ?                    GP02248
         BZ    EXIT12        NO; MAJOR BOO-BOO                  GP02248
         TM    PWPFLAG,PWPFPDS DOING A PDS ?                    GP03244
         BZ    EXIT12        NO; MAJOR BOO-BOO                  GP02248
         ICM   R7,15,CALLR1  GET MEMBER NAME ADDRESS            GP02248
         BZ    EXIT12        ALSO A NO-NO                       GP02248
         OI    PWFLAG,PWFEOM  INDICATE (FORCED) END OF MEMBER   GP03245
         TM    PWDCB+DCBOFLGS-IHADCB,DCBOFOPN  DCB OPEN ?       GP02248
         BZ    PFINDNO       NO                                 GP02248
         CLOSE MF=(E,PWDCB@) CLOSE THE MEMBER DCB               GP02248
         LA    R2,PWDCB                                         GP03244
         BAS   R14,FREEPULL  FREE BUFFER POOL, SAFELY           GP03244
PFINDNO  ICM   R1,15,PW@ROOT ARE WE IN STORED MODE?             GP03241
         BZ    PFINDRG       NO; GET ANOTHER BLOCK              GP02248
 SUBCALL SUBDSERV,('POS',PW@ROOT,(R7),8,PW@DBXL),VL,MF=(E,SUBPARM)
         LTR   R5,R15        SMDE RETURNED ?                    GP03241
         CH    R0,=H'4'      EXACT MATCH ?                      GP03245
         BNL   SET8          NO; RETURN MEMBER NOT FOUND        GP03245
*---------------------------------------------------------------------*
*  NOTE THAT THE BXLE IS NOW SET FOR LOOP TO PROCESS THE REQUESTED    *
*  MEMBER, OR THE NEXT ONE IF IT WASN'T FOUND                         *
*---------------------------------------------------------------------*
         B     MEMEODNO      DO THIS MEMBER                     GP02248
         SPACE 2                                                GP02248
*---------------------------------------------------------------------*
*   NO DESERV BUFFERS EXIST. READ DIRECTORY UNTIL MEMBER IS FOUND.    *
*   NOTE THAT THIS WORKS FOR UNCONCATENATED PDS ONLY                  *
*---------------------------------------------------------------------*
PFINDRG  GET   PWPOD         GET ANOTHER DIRECTORY BLOCK        GP02248
         ST    R1,PWPBXLE    SAVE STARTING ADDRESS              GP02248
         LA    R0,2          STE LENGTH OF LENGTH BYTE          GP02248
         AH    R1,0(,R1)     PLUS DATA LENGTH                   GP02248
         SR    R1,R0         LESS TOPPER                        GP02248
         STM   R0,R1,PWPBXLE+4  SAVE INCREMENT AND END          GP02248
         LM    R3,R5,PWPBXLE  GET DIRECTORY BLOCK POINTERS      GP02248
         USING PDS2,R3       (ALMOST) GLOBAL PDS DE MAPPING     GP03241
         BXH   R3,R4,PFINDRG  SKIP LENGTH                       GP02248
         BAS   R14,LOOKMEM   LOOP THROUGH THIS BLOCK            GP02248
           B   PFINDTL       +0 - NO MATCH; CHECK EOF, READ AGAIN
           B   SET8          +4 - NO MATCH; NOT IN DIRECTORY    GP02248
           B   MEMEODEC      +8 - MATCH; PROCESS                GP02248
PFINDTL  ST    R3,PWPBXLE    UPDATE CURRENT MEMBER START        GP02248
*OLD*    CLI   0(R3),X'FF'   PAST LAST MEMBER ?                 GP02248
         CLC   =X'FFFFFFFF',0(R3) PAST LAST MEMBER ?            GP14262
         BE    PODEODAD      YES; TREAT AS END-FILE             GP02248
         B     PFINDRG       ELSE READ ANOTHER BLOCK            GP02248
         SPACE 1                                                GP02248
LOOKMEM  CLC   PDS2NAME,0(R7)  REQUESTED NAME ?                 GP02248
         BE    8(,R14)       YES; GO TO PROCESS IT              GP02248
         BH    4(,R14)       PAST; MEMBER IN PRIOR BLOCK ?      GP02248
         IC    R4,PDS2INDC   GET FLAG/LENGTH                    GP02248
         N     R4,=A(PDS2LUSR)  GET LENGTH ONLY                 GP02248
         LA    R4,12(R4,R4)  GET MEMBER ENTRY LENGTH            GP02248
         BXLE  R3,R4,LOOKMEM   GO TO DECODE                     GP02248
         BR    R14           RETURN NOT FOUND                   GP02248
         SPACE 2                                                 89352
***********************************************************************
**                                                                   **
**  QMEM - QUERY MEMBER INFORMATION (NEEDS IN-STORAGE MEMBER LIST)   **
**                                                                   **
**    KEEPS CURRENT INFORMATION AS UNCHANGED AS POSSIBLE             **
**                                                                   **
***********************************************************************
PQMEM    TM    PWFLAG,PWFEXT   DOING A PDS ?                    GP02248
         BZ    EXIT12        NO; MAJOR BOO-BOO                  GP02248
         TM    PWPFLAG,PWPFPDS DOING A PDS ?                    GP03244
         BZ    EXIT12        NO; MAJOR BOO-BOO                  GP02248
         ICM   R7,15,CALLR1  GET MEMBER NAME ADDRESS            GP03236
         BZ    EXIT12        ALSO A NO-NO                       GP03236
PQMEMRD  ICM   R1,15,PW@ROOT ARE WE IN STORED MODE?             GP03241
         BZ    EXIT12        NO; REJECT                         GP03236
         SUBCALL SUBDSERV,('FIND',PW@ROOT,(R7),8),VL,MF=(E,SUBPARM)
         LTR   R15,R15       SMDE RETURNED ?                    GP03241
         BZ    SET8          NO; RETURN MEMBER NOT FOUND        GP03241
         ST    R15,RETR1     RETURN ADDRESS TO CALLER           GP03241
         B     EXITSET       RETURN R15=0                       GP03236
         EJECT ,                                                GP02248
***********************************************************************
**                                                                   **
**  FEOV:  TERMINATE PROCESSING OF THIS MEMBER                       **
**  KEEPM: REPEAT PROCESSING OF THIS MEMBER                          **
**                                                                   **
***********************************************************************
PFEOV    TM    PWFLAG,PWFEXT  EXTENSION PRESENT ?               GP03253
         BZ    EODAD         NO; TREAT AS END-OF-DATA SET REQUEST
         SPACE 1                                                GP03253
PKEEPM   TM    PWFLAG,PWFEXT  EXTENSION PRESENT ?               GP03253
         BZ    SET8          NO; INVALID CALL                   GP03253
         TM    PWDCB+DCBOFLGS-IHADCB,DCBOFOPN  MEMBER DCB OPEN ? 90233
         BZ    SET8          NO; UNTIMELY CALL                   90233
         SPACE 2                                                 90233
***********************************************************************
**                                                                   **
**  END-OF-MEMBER EXIT FOR PDS PROCESSING                        89352*
**                                                               89352*
***********************************************************************
         PUSH  USING                                            GP03242
MEMEODAD TM    PWDCB+DCBOFLGS-IHADCB,DCBOFOPN  DCB OPEN ?        89352
         BZ    MEMEODNO      NO                                  89352
         CLOSE MF=(E,PWDCB@) CLOSE THE MEMBER DCB                89352
         LA    R2,PWDCB                                         GP03244
         BAS   R14,FREEPULL  FREE BUFFER POOL, SAFELY           GP03244
MEMEODNO LM    R3,R5,PWPBXLE  GET DIRECTORY BLOCK POINTERS       89352
         CLI   CALLFUN,FUNKEEPM  CALLED FOR MEMBER RE-OPEN ?     90233
         BE    MEMEODEC      YES; JUST RE-USE THIS MEMBER        90233
         SPACE 1                                                GP03241
*---------------------------------------------------------------------*
*   IF WE ARE IN MEMORY MODE (DESERV BUFFERS PRESENT), GET NEXT SMDE. *
*   FAKE A PDS DIRECTORY ENTRY FOR COMPATIBILITY WITH OLD PROCESSING  *
*---------------------------------------------------------------------*
         PUSH  USING                                            GP03241
         ICM   R0,15,PW@ROOT ARE WE IN STORED MODE?             GP99007
         BZ    MEMEODDE      NO; GET ANOTHER DE ENTRY           GP99007
         SUBCALL SUBDSERV,('LOOP',PW@ROOT,PW@DBXL),VL,MF=(E,SUBPARM)
         LTR   R5,R15        FOUND AN SMDE ?                    GP03241
         BZ    PODEODAD      LOGICAL END OF DIRECTORY           GP99007
         USING SMDE,R5                                          GP03241
         L     R2,PWPU@      GET USER'S AREA                     89352
         TM    SMFG,SMFGALI  ALIAS ENTRY ?                      GP05013
         BZ    MEMEODFK      NO                                  89352
         TM    PUPDS-USRMAP(R2),PUFPALI  DOES USER WANT ALIAS ENTRIES?
         BZ    MEMEODNO      NO; GET NEXT MEMBER                 89352
MEMEODFK LA    R3,PWPDSDE    POINT TO FAKE ENTRY                GP03241
         LR    R14,R0        COPY ADDRESS OF NAME               GP03241
         MVC   PDS2NAME,0(R14) COPY SHORT PORTION OF NAME       GP03241
         MVC   PDS2TTRP,SMDEMLT COPY TTR                        GP05013
         L     R2,PW@DSAB    GET BASE DSAB                      GP03241
         SR    R7,R7                                            GP03241
         ICM   R7,1,SMDECNCT   GET CONCATENATION NUMBER         GP05013
         LR    R14,R7        COPY FOR BCT LOOP                  GP03244
         USING DSAB,R2                                          GP03242
         BZ    MEMEODSN      YES; GET CORRECT DSN               GP03241
MEMEODAB L     R2,DSABFCHN   NEXT DSAB                          GP03241
         BCT   R14,MEMEODAB  DECREMENT CONCATENATION COUNT      GP03241
*---------------------------------------------------------------------*
*   HAVE DSAB; GET SIOT AND JFCB                                      *
*   NOTE THAT DSABSIOT ADDRESS IS UNRELIABLE AND MAY GIVE 0C4, HENCE  *
*     THE LESS EFFICIENT SWA LOOKUP REQUEST                           *
*---------------------------------------------------------------------*
*FAILS*  L     R4,DSABSIOT   GET STORAGE SIOT ADDRESS           GP03242
MEMEODSN SR    R4,R4         CLEAR FOR INSERT                   GP03242
         ICM   R4,7,DSABSSVA  ELSE GET SIOT TOKEN               GP03242
         BZ    MEMEODNJ      MAJOR ERROR ?                      GP03242
         SERVCALL SWAAD,(R4)  CONVERT TOKEN TO ADDRESS          GP03242
         LTR   R1,R1         TEST RETURN                        GP03242
         BZ    MEMEODNJ      ERROR; RETAIN OLD JFCB             GP03242
MEMEODSA L     R14,SJFCBPTR-INDMSIOT(,R1)   GET STORAGE JFCB    GP03242
         MVC   PWPJFCB(JFCBLGTH),0(R14)  COPY ENTIRE JFCB       GP03242
         OI    PWPJFCB+JFCBTSDM-INFMJFCB,JFCVSL  VOL-SER LIST CHANGED
         CLI   PWPDDNM,C' '  IS THERE A DYNAMIC DD ?            GP03244
         BNH   MEMEODNJ      NO                                 GP03244
         CLM   R7,1,PWCONCT  SAME AS PRIOR CONCATENATION ?      GP03244
         BE    MEMEODNJ      YES; SAFE TO REUSE SAME DD         GP03244
         SERVCALL ALCFD,PWPDDNM  FREE IT (AVOID 413-04 ON FIXED VOLUME)
         XC    PWPDDNM,PWPDDNM  REQUEST NEW NAME                GP03244
         LA    R14,PWPDDNM   RETURNED DD NAME                   GP03243
         LA    R15,PWPJFCB+JFCBDSNM-INFMJFCB  DSN               GP03243
         SR    R0,R0         (NO) MEMBER NAME                   GP03243
         LA    R1,PWPJFCB+JFCBVOLS-INFMJFCB   VOLSER            GP03243
         LA    R2,=X'08'     DISP=SHR                           GP03243
         STM   R14,R2,SUBPARM  MAKE PARM LIST                   GP03243
         SERVCALL ALCDD,SUBPARM  ALLOCATE A DD FOR A SINGLE DS  GP03243
         LTR   R15,R15       DID IT WORK ?                      GP03243
         BNZ   MEMEODNJ      NO; BAD, BAD, BAD                  GP03241
         MVC   PWDCB+DCBDDNAM-IHADCB(L'DCBDDNAM),PWPDDNM  NEWDD GP03244
         STC   R7,PWCONCT    SAVE FOR TRACING                   GP03241
MEMEODNJ LA    R14,PDS2USRD  POINT TO USER DATA                 GP03241
         LA    R15,2*31      MAX USER DATA LENGTH               GP03241
         LH    R0,SMDEUSOF   OFFSET TO USER DATA                GP05013
         LH    R1,SMDEUSLN   USER DATA LENGTH                   GP05013
         MVCL  R14,R0        MOVE USER DATA AND CLEAR REST      GP03241
         LH    R1,SMDEUSLN   USER DATA LENGTH                   GP05013
         LA    R1,1(,R1)     SET TO ROUND                       GP03241
         SRL   R1,1                                             GP03241
         STC   R1,PDS2INDC   SET NUMBER OF LENGTH HALFWORDS     GP03241
         TM    SMFG,SMFGALI  ALIAS ENTRY ?                      GP05013
         BZ    MEMEODEC      NO                                  89352
         OI    PDS2INDC,PDS2ALIS                                GP03241
         B     MEMEODEC      PROCESS NEXT MEMBER                GP03241
         POP   USING                                            GP03241
         SPACE 1                                                GP03241
*---------------------------------------------------------------------*
*   GET NEXT DIRECTORY ENTRY; READ NEXT DIRECTORY BLOCK AS NEEDED.    *
*---------------------------------------------------------------------*
MEMEODDE LM    R3,R5,PWPBXLE  GET DIRECTORY BLOCK POINTERS       89352
         IC    R4,PDS2INDC   GET FLAG/LENGTH                    GP02248
         N     R4,=A(PDS2LUSR)  GET LENGTH ONLY                 GP02248
         LA    R4,12(R4,R4)  GET MEMBER ENTRY LENGTH            GP02248
MEMEODNU BXLE  R3,R4,MEMEODEC  GO TO DECODE                      89352
MEMEODRG GET   PWPOD         GET ANOTHER DIRECTORY BLOCK         89352
MEMEODRB ST    R1,PWPBXLE    SAVE STARTING ADDRESS               89352
         LA    R0,2          STE LENGTH OF LENGTH BYTE           89352
         AH    R1,0(,R1)     PLUS DATA LENGTH                    89352
         SR    R1,R0         LESS TOPPER                         89352
         STM   R0,R1,PWPBXLE+4  SAVE INCREMENT AND END           89352
         LM    R3,R5,PWPBXLE  GET DIRECTORY BLOCK POINTERS      GP02248
         B     MEMEODNU      REDO THIS MEMBER                   GP02248
         SPACE 1                                                GP03241
*---------------------------------------------------------------------*
*   DECODE THIS DIRECTORY ENTRY, BUILD A JFCB, AND OPEN FOR QSAM.     *
*---------------------------------------------------------------------*
MEMEODEC ST    R3,PWPBXLE    UPDATE CURRENT MEMBER START         89352
         CLI   0(R3),X'FF'   PAST LAST MEMBER ?                  89352
         BE    PODEODAD      YES; TREAT AS END-FILE              89352
         SERVCALL PDSDE,PWPBXLE  DECODE THIS ENTRY               89352
         BXH   R15,R15,SETERR  BOOBOO                            89352
         LR    R15,R0        COPY LIST ADDRESS                   89352
         MVC   PERALIS(PERBLNK),0(R15)  COPY EXTENDED ENTRY      89352
         L     R2,PWPU@      GET USER'S AREA                     89352
         CLI   PERALIS,C' '  ALIAS ENTRY ?                       89352
         BE    MEMEODNM      NO                                  89352
         TM    PUPDS-USRMAP(R2),PUFPALI  DOES USER WANT ALIAS ENTRIES?
         BZ    MEMEODNO      NO; GET NEXT MEMBER                 89352
MEMEODNM TM    PUPRFG-USRMAP(R2),PUFGPDE  FEEDBACK REQUESTED ?   89352
         BZ    MEMEODJF      NO                                  89352
         ICM   R1,15,PUPPDE-USRMAP(R2)  ANY ?                    89352
         BNZ   *+12          YES                                 89352
         LA    R1,PWPBXLE    USE OURS                            89352
         ST    R1,PUPPDE-USRMAP(,R2)  PASS IT BACK               89352
         MVC   0(PWPBXLN,R1),PWPBXLE  SHIP THE WHOLE THING       89352
MEMEODJF MVC   PWPJFCB+JFCBELNM-INFMJFCB(L'JFCBELNM),0(R3) RAW NAME
         OI    PWPJFCB+JFCBIND1-INFMJFCB,JFCPDS  SHOW MEMBER PRESENT
         OI    PWPJFCB+JFCBTSDM-INFMJFCB,JFCNWRIT+JFCNDCB        89352
         NI    PWPJFCB+JFCBTSDM-INFMJFCB,255-JFCNDSCB ALLOW MERGE
         NI    PWFLAG,255-PWFEOM-PWFWYL-PWFWIL  RESET            89352
         MVC   PERECFM,PWDCB+DCBRECFM-IHADCB  COPY RECORD FORMAT 89352
         MVI   IXRETCOD,0                                        89352
         LA    R0,PWPJFCB                                       GP03242
         STCM  R0,7,PWPXLST+4+1  SET CORRECT JFCB ADDRESS       GP03242
         OPEN  MF=(E,PWDCB@),TYPE=J  OPEN CAREFULLY              89352
         CLI   IXRETCOD,0    OPEN SUCCESSFUL ?                   89352
         BNE   SETERR        NO                                  89352
         OI    RETR1,X'80'   RETURN R1 NEGATIVE AS SIGNAL        89352
         OI    IXFLAG2,IX2REGET  SET FOR GET REQUIRED            89352
         NI    PWFLAG,255-PWFKEEP-PWFEOF   NO VALID KEEP OR EOF  90257
*NOT*    CLI   CALLFUN,FUNFEOV  CALLED FOR MEMBER SERVICES ?     90233
*NOT*    BE    MEMEODUP      YES; RETURN UPDATE CARD             90233
         CLI   CALLFUN,FUNKEEPM  INPKEEPM ?                      90233
         BE    MEMEODUP      YES; RETURN UPDATE CARD             90233
         CLI   CALLFUN,FUNFIND   INPFIND ?                      GP02248
         BE    MEMEODUP      YES; RETURN UPDATE CARD            GP02248
         TM    PUPDS-USRMAP(R2),PUFPUPA  MAKE UPDATE CARD ?      89352
         BZ    PGET          NO; READ FIRST CARD OF NEW MEMBER   89352
MEMEODUP MVC   PWPCAME,PWPCAME-1  CLEAR INSERTION SPACE          90233
         LA    R1,PWPCAME    POINT TO VARIABLE PORTION OF CARD   89352
         CLI   PERSSI,C' '   ANY SSI ?                           89352
         BE    MEMEODSS      NO                                  89352
         MVC   0(4,R1),=C'SSI='                                  89352
         MVC   4(8,R1),PERSSI   MOVE SSI                         89352
         MVI   12(R1),C','   SEPARATE                            89352
         LA    R1,13(,R1)    ADVANCE                             89352
MEMEODSS MVC   0(5,R1),=C'NAME='                                 89352
         MVC   5(8,R1),PERNAME  MOVE EDITED NAME                 89352
         CLI   PERALIS,C' '  ALIAS ENTRY ?                      GP15039
         BE    *+8           NO                                 GP15039
         MVI   PWPCARD+70,C'A'    FLAG AS ALIAS ENTRY           GP15039
         LA    R0,PWPCARD    POINT TO START                      89352
         LA    R1,80         SET PREFERRED LENGTH               GP10192
         B     PGETCOM       GO TO COMMON RETURN PROCESSING      89352
         POP   USING                                            GP03242
         EJECT ,                                                 90216
***********************************************************************
**                                                                   **
**   READ A BLOCK - TREATED AS GET REQUEST                       90216*
**   1) USER MUST PASS A JFCB ADDRESS AT OPEN TIME. JFCRECFM MUST    **
**      BE FORCED TO 'U'; THE NO MERGE/NO REWRITE BITS MUST BE ON.   **
**   2) ALL INPUT FOR THAT OPEN MUST BE VIA INPREAD; MIXED READS     **
**      AND GETS WILL NOT WORK.                              90257   **
**   3) NO DEBLOCKING, ESPECIALLY NO WYLBUR DEBLOCKING, IS DONE.     **
**                                                               90216*
***********************************************************************
PREAD    DS    0H                                                90216
         SPACE 2                                                GP03244
***********************************************************************
**                                                                   **
**   GET NEXT RECORD                                                 **
**     RETURNS RECORD ADDRESS AND LENGTH                             **
**     IN PDS MODE FOR FIRST RECORD OF A NEW MEMBER, SETS X'80' ON   **
**     IN RECORD ADDRESS (UNLESS DONE ON A GENERATED ./ ADD CARD)    **
**                                                                   **
***********************************************************************
PGET     CLI   CALLDEV,0     MORE THAN ONE DEVICE ?
         BNE   EXIT12        YES; ERROR
         TM    PWFLAG,PWFEOF    PRIOR END-FILE ?
         BNZ   EXIT12        YES; ALSO ERROR
         L     R14,PWPU@     GET USER INPWORK ADDRESS           GP15233
         TM    PUPRFG-USRMAP(R14),PUFGCCR  UNLIKE CONC FEEDBK?  GP15233
         BZ    PGETNCC                       NO                 GP15233
         ZI    PUPRFG-USRMAP(R14),PUFGCCF  RESET CONCT          GP15233
PGETNCC  TM    PWFLAG,PWFEOM  PRIOR END-OF-MEMBER ?              89352
         BO    MEMEODAD      YES; GET ANOTHER                    89352
         L     R3,PWDRECAD   RELOAD RECORD ADDRESS
         LH    R2,PWDRECLN     AND LENGTH
         TM    PWFLAG,PWFKEEP   RETURN SAME RECORD AGAIN ?
         BNZ   PGETEXIT      YES; SET IT
         TM    IXFLAG2,IX2REGET  FIRST TIME ?
         BZ    PGETGET       NO
PGETCONC NI    IXFLAG2,255-IX2REGET  RESET CONCATENATION SWITCH
         L     R14,PWPU@     GET USER INPWORK ADDRESS           GP15233
         TM    PUPRFG-USRMAP(R14),PUFGCCR  UNLIKE CONC FEEDBK?  GP15233
         BZ    PGETCONX                      NO                 GP15233
         OI    PUPRFG-USRMAP(R14),PUFGCCF  SET CONCT FOUND      GP15233
PGETCONX NI    PWFLAG,255-PWFWYL-PWFWIL  CLEAR STACKED WYLBUR REQUEST
         TM    DCBRECFM-IHADCB+PWDCB,DCBRECU  POSSIBLY WYLBUR ?
         BNO   PGETGET       NO; GET A RECORD
         TM    DCBDEVT-IHADCB+PWDCB,UCB3DACC+UCB3TAPE  EDIT SUPPORTED ?
         BNM   PGETGET       NO
         OI    PWFLAG,PWFWYL  SET POSSIBLE WYLBUR RECORD
         LA    R1,1          SET LINE NUMBER INCREMENT
         LNR   R0,R1         AND STARTING NUMBER
         STM   R0,R1,PWDLINEP
         STCM  R1,12,PWDBUFLN  CLEAR BUFFER LENGTH
PGETGET  TM    PWFLAG,PWFWYL+PWFWIL  STACKED WYLBUR REQUEST ?
         BO    PGETWYL       YES; GET IT
         TM    PWFLAG,PWFACB  VSAM MODE ?                        89360
         BZ    PGETDCB       NO                                  89360
         LA    R2,PWRPL      GET RPL ADDRESS                    GP14238
         GET   RPL=(R2)      GET A RECORD                        89360
         BXH   R15,R15,SETERR  FAIL ON ERROR                     89360
         CHECK RPL=(R2)      TAKE APPLICABLE EXITS               89360
         BXH   R15,R15,SETERR   HUH ?                            89360
         L     R1,RPLRLEN-IFGRPL(,R2)  GET RECORD LENGTH         89360
         L     R0,PWDRECAD   LOAD ADDRESS FROM 'AREA'            89360
         B     PGETCOM       JOIN COMMON                         90259
PGETDCB  GET   PWDCB         GET A RECORD
PGETGOT  CLI   IXRETCOD,0    ANY ERROR ENCOUNTERED ?             86272
         BNE   SETERR        YES                                 86272
         TM    IXFLAG2,IX2REGET  CONCATENATION ENCOUNTERED ?
         BNZ   PGETCONC      YES; REDO EVERYTHING
         CLI   CALLFUN,FUNREAD  READ REQUEST ?                   90257
         BE    PGETNWY2      YES; CALLER SET RECFM=U ?           90257
         TM    PWFLAG,PWFWYL  WYLBUR MODE ?
         BZ    PGETNWYL      NO
         ST    R1,PWDBUFAD   SET BUFFER ADDRESS
         LH    R0,DCBLRECL-IHADCB+PWDCB
         MVC   PWDBUFMX,0(R1)  COPY FIRST TWO BYTES
         NI    PWDBUFMX,X'7F'  KILL NIH FLAGS
         CH    R0,PWDBUFMX   POSSIBLE WYLBUR BLOCK ?
         BNL   PGETWYL       YES; DEBLOCK IT
PGETNWYL TM    DCBRECFM-IHADCB+PWDCB,DCBRECF  RECFM=F OR U ?     82032
         BNZ   PGETNWY2      YES; LEAVE AS IS                    82032
         TM    PWFLAG,PWFACB  VSAM ?                             89360
         BNZ   PGETTTSO      YES                                 89360
         LA    R4,8          MAKE A CONSTANT                     83072
         LA    R0,4(,R1)     SET NEW TEXT ADDRESS                82032
         LH    R1,0(,R1)     SET NEW RECORD LENGTH               82032
         SH    R1,=H'4'      ALLOW FOR RDW LENGTH                82032
         BP    PGETTTSO      GO TO CHECK FOR LEFT-ADJUSTED SEQUENCE
         LH    R1,DCBLRECL-IHADCB+PWDCB  ELSE GET LENGTH FROM DCB
         SH    R1,=H'4'                                          82032
PGETTTSO BALS  R14,TRANSLAT  GO TO CODE TRANSLATION              82175
         TM    PWDFG1,PWDF1TSO  LEFT-JUSTIFIED SEQUENCING ?      82175
         BZ    PGETTRIT      NO; CHECK FOR TRAILING SEQUENCE     82116
         CR    R1,R4         LONG ENOUGH FOR SEQUENCE NUMBER ?   82116
         BL    PGETCOM       NO; LET IT FAIL                     82116
         LA    R14,PWVCON    GET THE WORK AREA                   82116
         LA    R15,72        SET MAXIMUM LENGTH TO MOVE/PAD      82116
         LR    R2,R0         SAVE THE SEQUENCE NUMBER ADDRESS    82116
         AR    R0,R4         SET START MOVE ADDRESS              83072
         B     PGETVCOM      GO TO COMMON MOVER                  82116
PGETTRIT TM    PWDFG1,PWDF1EDT+PWDF1INT  NUMBERED ?              82116
         BZ    PGETCOM       NO; NO CHANGE                       82116
         CH    R1,=H'80'     CORRECT LENGTH ?                    82116
         BNL   PGETCOM       OR TOO LONG; LEAVE AS IS            82116
         LA    R14,PWVCON    POINT TO WORK AREA                  82116
         LA    R15,72        SET LENGTH TO MOVE                  82116
         LR    R2,R0         SAVE START ADDRESS                  82116
         AR    R2,R1         LAST BYTE+1                         82116
         SR    R2,R4         -8 = PRESUMED SEQUENCE NUMBER       82116
PGETVCOM SR    R1,R4         SET LENGTH                          83072
         ICM   R1,8,=C' '    BLANK FILL                          83072
         MVCL  R14,R0        MOVE TO WORK AREA                   82116
         MVC   PWVCON+72(8),0(R2)  MOVE PRESUMED SEQUENCE NUMBER 83072
         LA    R0,PWVCON     SET NEW RECORD ADDRESS              82116
         LA    R1,80         SET NEW RECORD LENGTH               82116
         B     PGETCOM                                           82032
PGETNWY2 LR    R0,R1         GET RETURNED RECORD                 82032
         LH    R1,DCBLRECL-IHADCB+PWDCB  GET RECORD SIZE
         BALS  R14,TRANSLAT  GO TO CODE TRANSLATION              82175
PGETCOM  LA    R14,PWVCON    GET MY RECORD AREA
         L     R15,PWPU@     GET USER'S LIST ADDRESS             82032
         LH    R15,PUWIDTH-USRMAP(,R15)  GET USER'S BUFFER SIZE  82032
         LTR   R15,R15                                           82032
         BNP   PGETNMVC      NONE; RETURN RECORD AS IS           82032
         CR    R1,R15        IS RECORD SHORTER THAN USER'S AREA ?
         BL    PGETMVC       YES; MOVE TO WORK AREA
PGETNMVC LR    R3,R0         ELSE USE RETURNED ONE               82032
         LR    R2,R1
         B     PGETEXIT
PGETMVC  LR    R2,R15        SAVE LENGTH
         LR    R3,R14          AND ADDRESS
         ICM   R1,8,PWUFILL   SET THE FILL BYTE                  81200
         MVCL  R14,R0        MOVE TO WORK AREA
PGETEXIT O     R3,RETR1      SET MEMBER CHANGE SIGNAL            89352
         STM   R2,R3,RETR0   RETURN RECORD LENGTH AND ADDRESS
         ST    R3,PWDRECAD   SAVE FOR KEEP OPTION
         STH   R2,PWDRECLN
         NI    PWFLAG,255-PWFKEEP
         B     EXITSET       RETURN OK
         SPACE 1
PGETWYL  XC    PWDRECAD,PWDRECAD  SET LOCATE MODE
         SERVCALL WDCOM,PWWLIST  DECOMPRESS A WYLBUR RECORD
         CH    R15,=H'4'     SEE IF VALID
         BL    PGOTWYL       YES
         BE    PEOBWYL       BLOCK IS EMPTY
         L     R1,PWDBUFAD   GET ADDRESS BACK
         NI    PWFLAG,255-PWFWYL-PWFWIL  RESET WYLBUR FLAGS
         B     PGETNWY2                                          82032
PEOBWYL  NI    PWFLAG,255-PWFWIL  RESET WYLBUR RECORD PRESENT
         STCM  R15,12,PWDBUFLN   RESET RECORD OFFSET
         B     PGETGET       DO ANOTHER GET
PGOTWYL  OI    PWFLAG,PWFWIL  SET WYLBUR RECORD PRESENT
         L     R0,PWDRECAD   GET RECORD ADDRESS
         LH    R1,PWDRECLN   AND CURRENT LENGTH
         B     PGETCOM       AND GO BACK
         SPACE 2                                                GP03253
***********************************************************************
**                                                                   **
**  KEEP:  RETURN THE CURRENT RECORD ON NEXT READ/GET CALL           **
**                                                                   **
***********************************************************************
*FAILS*  TM    IXFLAG2,IX2REGET  FIRST TIME ?
*FAILS*  BNZ   EXIT12        YES; TSK, TSK
PKEEP    TM    PWFLAG,PWFEOF  END-FILE ?                        GP10194
         BNZ   EXIT12        YES; FAIL
         OI    PWFLAG,PWFKEEP   SET TO RETURN SAME RECORD AGAIN
         B     RECURSE       SEE IF MORE
         SPACE 2                                                 82175
*---------------------------------------------------------------------*
*                                                                     *
*    ASCII TO EBCDIC TRANSLATION                                 82175*
*    (OPTIONAL) UPPER CASE TRANSLATE                            GP04114
*                                                                82175*
*---------------------------------------------------------------------*
TRANSLAT LTR   R1,R1         CHECK LENGTH                        82175
         BNPR  R14           NOTHING TO DO; JUST RETURN          82175
         STM   R0,R1,DB      SAVE CALLER'S REGISTERS             82175
         TM    PWFLAG,PWFASCI  ASCII TRANSLATE ?                 82175
         BZ    TRANSUPP      NO; TEST CASE                      GP04114
         TM    DCBOPTCD-IHADCB+PWDCB,DCBOPTQ  TRANSLATE ON IN DCB ?
         BNZ   TRANSUPP      YES; TEST CASE                     GP04114
         LR    R2,R0         COPY RECORD ADDRESS                 82175
         LR    R3,R1         COPY RECORD LENGTH                  82175
         LA    R0,256        MAXIMUM TRANSLATABLE                82175
TRTOLOOP LR    R1,R0         SET LENGTH                          82175
         CR    R1,R3         COMPARE TO RESIDUAL LENGTH          82175
         BNH   *+6           MORE THAN ONE SEGMENT               82175
         LR    R1,R3         PARTIAL SEGMENT LENGTH              82175
         BCTR  R1,0          SET LENGTH FOR EXECUTE              82175
         EX    R1,TRTOTR     TRANSLATE                           82175
         AR    R2,R0         NEXT SEGMENT ADDRESS                82175
         SR    R3,R0         REMAINING LENGTH                    82175
         BP    TRTOLOOP                                          82175
*---------------------------------------------------------------------*
*   CHECK FOR UPPER CASE TRANSLATE                                    *
*---------------------------------------------------------------------*
TRANSUPP ICM   R15,15,PWTRUPP  CASE TRANSLATION ?               GP04114
         BZ    TRANSOUT      NO; EXIT                           GP04114
         LM    R0,R1,DB      RESTORE CALLER'S REGISTERS         GP04114
         LR    R2,R0         COPY RECORD ADDRESS                GP04114
         LR    R3,R1         COPY RECORD LENGTH                 GP04114
         LA    R0,256        MAXIMUM TRANSLATABLE               GP04114
TRUPLOOP LR    R1,R0         SET LENGTH                         GP04114
         CR    R1,R3         COMPARE TO RESIDUAL LENGTH         GP04114
         BNH   *+6           MORE THAN ONE SEGMENT              GP04114
         LR    R1,R3         PARTIAL SEGMENT LENGTH             GP04114
         BCTR  R1,0          SET LENGTH FOR EXECUTE             GP04114
         EX    R1,TRUPTR     TRANSLATE                          GP04114
         AR    R2,R0         NEXT SEGMENT ADDRESS               GP04114
         SR    R3,R0         REMAINING LENGTH                   GP04114
         BP    TRUPLOOP                                         GP04114
TRANSOUT LM    R0,R1,DB      RESTORE CALLER'S REGISTERS         GP04114
         BR    R14           RETURN TO CALLER                    82175
TRTOTR   TR    0(0,R2),TRASTOEB  TRANSLATE TO EBCDIC             82175
TRUPTR   TR    0(0,R2),0(R15)    TRANSLATE TO UPPER CASE         82175
         SPACE 2
SETERR   OI    RETCC,12      SET MAJOR ERROR                     86272
         OI    PWFLAG,PWFEOF  FORCE END-FILE                     89352
***      B     EODAD                                             86272
         SPACE 1                                                 86272
*---------------------------------------------------------------------*
*                                                                     *
*   END OF DATA EXIT: SET FLAGS; INVOKE USER EXIT IF REQUESTED        *
*                                                                     *
*---------------------------------------------------------------------*
PODEODAD DS    0H            END OF DIRECTORY                    89352
EODAD    L     R8,CURRPW     JUST IN CASE (3.8E ERROR)           85035
         OI    PWFLAG,PWFEOF  SET END-FILE ON INPUT
         OI    RETCC,4       SET LEVEL 4 ERROR
         L     R1,PWPU@      GET USER'S PARAMETER LIST
         LA    R1,PUEODAD-USRMAP(,R1)  POINT TO EODAD ADDRESS
         L     R15,0(,R1)    LOAD USER'S EODAD                  GP99007
         TM    CLAM,CLAM31   WAS USER IN AMODE 31?              GP99007
         BZ    EODAD24       NO; KILL HIGH BYTE                 GP99007
         L     R1,=X'80000000'  MAKE AM31 MASK BIT              GP99007
         OR    R1,R15        MAKE 31-BIT                        GP99007
         CL    R1,=X'80000000'  IS IT ZERO?                     GP99007
         BE    EXITSET       YES; SKIP IT                       GP99007
         CL    R1,=X'80000001'  IS IT EMPTY ENTRY?              GP99007
         BNE   EODADCM       NO; TAKE EXIT                      GP99007
         B     EXITSET       YES; SKIP IT                       GP99007
EODAD24  L     R1,=X'00FFFFFF'  MAKE 24-BIT MASK                GP99007
         NR    R1,R15        MASK IT                            GP99007
         BZ    EXITSET       SET RETURN CODE 4 IF NO ADDRESS
         CH    R1,=H'1'      OR IS IT DEFAULT OF 1 ?
         BNH   EXITSET       YES; TAKE RETURN
EODADCM  L     R2,SAVE13     GET USER'S SAVE AREA               GP99007
         ST    R1,SAVE14-SAVE(,R2)  REPLACE RETURN ADDRESS BY EODAD
         B     EXITSET       SET LEVEL 4 ERROR
         SPACE 1                                                 89360
*---------------------------------------------------------------------*
*                                                                     *
*   VSAM LERAD AND SYNAD: SET ERROR CODE AND RETURN                   *
*                                                                     *
*---------------------------------------------------------------------*
VSLERAD  DS    0H                                                89360
VSSYNAD  OI    IXRETCOD,8    SET ERROR CODE                      89360
         LA    R15,8         DITTO                               89360
         BR    R14           RETURN TO VSAM                      89360
         EJECT
***********************************************************************
**                                                                   **
**       OPEN PROCESSING: R1 POINTS TO WORK AREA CREATED INPWORK.    **
**         REGISTER 0 MUST SPECIFY ONE DEVICE NUMBER ONLY.           **
**       RETURN CODES :                                              **
**       R15=0  REQUEST COMPLETED                                    **
**       R15=4  REQUEST COMPLETED, BUT ALTERNATE DDNAME USED         **
**       R15=8  DD DUMMY; ALL CALLS WILL BE IGNORED.                 **
**       R15=10 DSN=PDS(MEMBER), BUT MEMBER DOES NOT EXIST           **
**       R15=12 NO USABLE DD FOUND; CALLS WILL RETURN WITH ERRORS.   **
**                                                                   **
**       WITH R15=8, A WTO INDICATED THE MISSING DDNAME(S) WILL BE   **
**         ISSUED UNLESS THE INPOPEN REQUESTED 'NOWTO'               **
**       IF INPOPEN SPECIFIED 'ABEND', RETURN CODE 12 WILL NOT BE    **
**         ISSUED, INSTEAD AN ABEND 2540 IS TAKEN.                   **
**       IF INPOPEN SPECIFIED ABEND AND NOT 'DUMMY', RETURN CODE 8   **
**         WILL NOT BE ISSUED, BUT AN ABEND IS TAKEN.                **
**                                                                   **
***********************************************************************
POPEN    LTR   R8,R8         WAS THIS OPENED ALREADY ?
         BNZ   EXIT12        YES; SET ERROR
         CLI   CALLDEV,0     MORE THAN ONE DEVICE SPECIFIED ?
         BNE   EXIT12        YES; ALSO ERROR
         ICM   R7,15,CALLR1  ANY WORK AREA ?
         BZ    EXIT12        NO; ERROR
*---------------------------------------------------------------------*
*   OBTAIN AND INITIALIZE STORAGE FOR THE INPUT CONTROL BLOCK  INP#   *
*---------------------------------------------------------------------*
         USING USRMAP,R7     DECLARE MAPPING OF USER AREA
         L     R3,=A(PWWKEND-INPTWORK)  GET LENGTH OF WORK AREA
         SR    R5,R5         SET FOR SHORT AREA                 GP03244
         TM    CALLFLG,CLEXIST  CHECK DSN/MEMBER EXISTENCE ?     93312
         BNZ   POPENLG       YES; USE LONGER GETMAIN             93312
         TM    PUPDS,PUFPMEM+PUFPALI  PROCESS PDS MEMBERS ?      89352
         BZ    POPENLS       NO                                  89352
POPENLG  LA    R3,PWPWKND-PWWKEND(,R3)  EXTEND FOR PDS PROCESSING
         LA    R5,PWFEXT     SET FOR PDS EXTENSION PRESENT      GP03244
POPENLS  LR    R0,R3         SET THE WORK AREA LENGTH
         STORAGE OBTAIN,LENGTH=(0),LOC=BELOW  (DCB, ETC.)
         LR    R8,R1         SAVE THE ADDRESS
         ST    R8,CURRPW     SAVE                                85035
         LR    R0,R1         SET ADDRESS FOR CLEAR
         LR    R1,R3         COPY THE LENGTH
         SLR   R15,R15       FROM LENGTH
         MVCL  R0,R14        CLEAR THE AREA
         ST    R4,PWID       SET THE CONTROL BLOCK ID FIELD
         ST    R9,PWTCB      SAVE OWNING TCB ADDRESS             85160
         ST    R3,PWSPLEN    SET THE SUBPOOL/LENGTH FIELD
         ST    R7,PWPU@      SAVE USER'S LIST ADDRESS
         STC   R5,PWFLAG     SET FLAG W/PDS EXTENSION INDICATOR GP03244
         MVC   PWDCB(PATEND-PATDCB),PATDCB  INITIALIZE DCB
         LA    R1,PWDCB      GET DCB ADDRESS
         ST    R1,PWDCB@     STASH THE ADDRESS
         MVC   PWDCB@(1),CLOSERER  MAKE OPEN/INPUT/REREAD        86113
         LA    R1,PWXLIST
         STCM  R1,7,DCBEXLST+1-IHADCB+PWDCB  SET EXITLIST ADDR
         LA    R0,EODAD      GET END-FILE ADDRESS
         STCM  R0,7,DCBEODAD+1-IHADCB+PWDCB
         TM    CALLFLG,CLFOLD  UPPER CASE TRANSLATE ?           GP04114
         BZ    POPINSVC      NO                                 GP04114
         L     R0,=A(TRUPCASE)  FOLD LOWER TO UPPER CASE        GP04114
         ST    R0,PWTRUPP    SET UPPER CASE TRANSLATE           GP04114
         AIF   (&SVC@SVC NE 0).INI@SRV                          GP06286
POPINSVC LOAD  EP=@SERVICE   LOADSERVICE ROUTIE WITH USE COUNT  GP06286
         ST    R0,@SERVICE   STASH ADDRESS                      GP06286
         COPY  SERVFLAG      BUT EXPAND SERVINIT'S EQUATES      GP06286
         AGO   .COM@SRV                                         GP06286
.INI@SRV ANOP  ,                                                GP06286
POPINSVC SERVINIT MODE=SVC   INITIALIZE SERVICE ROUTINE         GP03234
.COM@SRV LOAD  EP=@DCBEXIT   DCB EXIT PROCESSOR                  81282
         LA    R1,PWVCON     USE THE RECORD AREA FOR JFCB
         LA    R2,PWO2LVL    GET DCBEXIT PARAMETER LIST
         LA    R3,EXITABND   SET ABEND EXIT                      86272
         STM   R0,R3,PWXLIST                                     86272
         MVI   PWXLIST,X'05'  SET AS DCB EXIT
         MVI   PWXLIST+4,X'07'  SET JFCB ADDRESS
         MVI   PWXLIST+8,X'00'  SET EXIT PARM ENTRY              86272
         MVI   PWXLIST+12,X'91'  SET ABEND EXIT / END OF LIST    86272
         MVC   IXDCBXID,=CL8'DCBEXITP' SET DCBEXIT LIST CONSTANT
         MVI   IXFLAG1,255   SET ALL FLAG1 OPTIONS               82018
         MVI   IXFLAG2,IX2CONCT  UNLIKE OK; NO DDR ON TAPE       82018
         MVI   IXFLAG3,IX3BLKTB  USE DEFAULT BLKSIZE TABLE
         MVC   PWUFLAG(2),PUPRFG  MOVE USER'S OPEN LIST OPTIONS  81200
         TM    PUPRFG,PUFG1BUF    FORCE SINGLE BUFFERING?       GP08088
         BZ    *+8           NO                                 GP08088
         MVI   DCBBUFNO-IHADCB+PWDCB,1   SAVE SPACE - 1 BUFFER  GP08088
*---------------------------------------------------------------------*
*   LIMIT THE RECORD AND BLOCK SIZE WE PROCESS                        *
*---------------------------------------------------------------------*
         LH    R1,PUWIDTH    GET USER SPECIFIED WIDTH
         LTR   R1,R1         ANY ?
         BZ    POPWCARD      NO; DEFAULT TO CARD FORMAT
         LA    R14,MAXWIDTH  GET MAXIMUM SUPPORTED
         CR    R1,R14        LONGER ?
         BNH   POPWSTOR      NO; USE IT
         LR    R1,R14        ELSE TRUNCATE TO MAXIMUM
         B     POPWSTOR
POPWCARD SLR   R1,R1         DEFAULT TO @SERVICE DECOMP MAXIMUM  82032
POPWSTOR STH   R1,PWDRECMX   SET MAXIMUM RECORD SIZE
*---------------------------------------------------------------------*
*   CHECK EDIT OPTIONS (USE EDIT=128 TO AVOID ALL EDIT PROCESSING)    *
*---------------------------------------------------------------------*
         CLI   PUEDIT,0      ANY EDIT FLAGS SPECIFIED ?          81284
         BE    POPEDFLT      NO; USE DEFAULT                     81284
         MVC   PWDFG1,PUEDIT   COPY USER'S EDIT REQUEST          81284
         NI    PWDFG1,255-X'80'  TURN 'EDIT FLAGS PRESENT' BIT OFF
         B     POPEDCOM      GO TO COMMON                        81284
POPEDFLT MVI   PWDFG1,PWDF1EDT  RETURN RIGHT-ADJUSTED LINE NUMBERS
POPEDCOM LA    R14,EXITDCB   SET PRE-DCBEXIT EXIT                82178
         LA    R15,DCBEXIT2  SET POST-DCBEXIT EXIT               85157
         STM   R14,R15,IXOPLIST  INTO DCBEXIT OPTION LIST        85157
         MVI   IXOPLIST,IXTPREX  SET PRE-DCBEXIT EXIT FLAG       85157
         MVI   IXOPLIST+4,128+IXTEXITF  SET POST-EXIT, LIST END  85157
*---------------------------------------------------------------------*
*   CHECK PRESENCE AND TYPE OF DD FOR PRIMARY AND ALTERNATE DD NAMES  *
*---------------------------------------------------------------------*
         MVC   PWDCB+DCBDDNAM-IHADCB(8),PUDDNAM  COPY USER'S DDNM
POPDVT   DEVTYPE PWDCB+DCBDDNAM-IHADCB,DB  GET DEVICE TYPE
         BXH   R15,R15,POPDEVAL   FAILED; CHECK FOR ALTERNATE
         CLI   DB+2,0        DD DUMMY ?
         BNE   POPDEVT       NO; USE THIS ONE
         CLI   PUDDALT,C' '  ALTERNATE SUPPLIED ?
         BNH   POPDEVDU      NO; LEAVE DUMMY
         DEVTYPE PUDDALT,DB  CHECK FOR ALTERNATE
         BXH   R15,R15,POPDEVDU  USE FIRST ONE
         CLI   DB+2,0        ALSO DUMMY ?
         BE    POPDEVDU      YES
POPDEVAL OI    RETCC,4       SHOW ALTERNATE USED
         CLI   PUDDALT,C' '  ALTERNATE SUPPLIED ?
         BNH   POPNOP        NO; ERROR
         MVC   PWDCB+DCBDDNAM-IHADCB(8),PUDDALT  SET ALTERNATE
         DEVTYPE PWDCB+DCBDDNAM-IHADCB,DB  GET DEVICE TYPE
         BXH   R15,R15,POPNOP   FAIL IF NEITHER SUPPLIED
         CLI   DB+2,0        ALSO DUMMY ?
         BNE   POPDEVT       NO; GOOD
POPDEVDU MVI   RETCC,8       INDICATE DUMMY DD
*---------------------------------------------------------------------*
*   GET JFCB FOR THE DD FROM USER OR SYSTEM                           *
*---------------------------------------------------------------------*
POPDEVT  TM    CALLFLG,CLJFCB  OPEN TYPE=J REQUESTED ?           82116
         BZ    POPRJFCB      NO; READ JFCB                       82116
         TM    PUPRFG,PUFGJFCB  JFCB IN WORK AREA ?              82116
         BZ    POPRJFCB      NO; READ IT                         82116
         ICM   R1,15,PUJFCB  DID USER SUPPLY THE ADDRESS ?
         BZ    POPRJFCB      NO; READ IT                         82116
         MVC   PWVCON(JFCBLGTH),0(R1)  COPY TO MY WORK AREA      82116
         B     POPHJFCB      HOP FOR THE BEST ?                  82116
POPRJFCB RDJFCB MF=(E,PWDCB@)  GET THE JFCB                      82116
         BXH   R15,R15,POPNOP  FORGET THIS IF BAD
*---------------------------------------------------------------------*
*   GET BASIC JFCB AND DATA SET INFORMATION (DSCB 1 FOR DASD DATA)    *
*---------------------------------------------------------------------*
POPHJFCB LA    R3,PWVCON                                         82116
         USING INFMJFCB,R3   ELSE DECLARE IT
POPDOP1  OI    JFCBTSDM,JFCNWRIT+JFCNDCB  KEEP IT HONEST ?
         NI    JFCBTSDM,255-JFCNDSCB  ALLOW DSCB MERGE           90261
         OC    DB(4),DB      DUMMY ?
         BZ    POPEXIT       YES; LEAVE IT CLOSED
         CLI   DB+2,UCB3DACC  DASD ?                             86272
         BNE   POPDOPN       NO; JUST OPEN                       86272
         SERVCALL DSDJ1,INFMJFCB  GET DSCB 1 FOR DSN             86272
         BXH   R15,R15,POPNOP   NONE SUCH                        86272
         USING DS1FMTID,R1   DECLARE RETURNED AREA               86272
         SPACE 1
*---------------------------------------------------------------------*
*   VSAM:  OPEN ACB; SET RPL FLAGS FOR SEQUENTIAL READING             *
*---------------------------------------------------------------------*
         TM    DS1DSORG+1,DS1ACBM  VSAM ?                        89360
         BZ    POPOPPNV      NO; CHECK SEQUENTIAL               GP14238
         LM    R14,R15,DCBDDNAM-IHADCB+PWDCB  SAVE DDN           89360
         MVC   PWACB(PATACBLN),PATACB  BUILD ACB                 89360
         MVC   PWRPL(PATRPLLN),PATRPL  BUILD RPL                GP14238
         STM   R14,R15,DCBDDNAM-IHADCB+PWDCB  RESTORE DDNAME     89360
         OPEN  MF=(E,PWDCB@) OPEN ACB FOR INPUT                  89360
         TM    DCBOFLGS-IHADCB+PWDCB,DCBOFOPN  OPEN ?            90277
         BZ    POPNOP        NO; TOO BAD                         90277
         LA    R2,PWRPL                                         GP14238
         LA    R3,PWACB                                         GP14238
         MODCB RPL=(R2),ACB=(R3),                                      *
               MF=(G,PWMODCB,PWMODCBL)                          GP10192
         XC    PWRRN,PWRRN   CLEAR, JUST IN CASE                 90201
         OI    PWFLAG,PWFACB  SET VSAM MODE                      89360
         SHOWCB ACB=(R3),AREA=(S,DB),LENGTH=4,FIELDS=KEYLEN,           *
               MF=(G,PWSHOCB,PWSHOCBL)                           90287
         BXH   R15,R15,POPDOPN2  MAY FAIL LATER ?                90277
         ICM   R15,15,DB     TEST KEY LENGTH                     90277
         BNZ   POPDOPN2      PROCEED                             90277
         LA    R4,PWRRN      RECORD INDEX                       GP14238
         MODCB RPL=(R2),OPTCD=(ADR,SEQ,ASY,NUP,LOC),ARG=(R4)           *
               MF=(G,PWMODCB)                                   GP14238
         B     POPDOPN2      PROCEED WITH OPEN                   89360
         SPACE 1
*---------------------------------------------------------------------*
*   PDS: BUILD/OPEN A BPAM DCB UNLESS A MEMBER NAME (WITHOUT VERIFY)  *
*        IS SPECIFIED. WITHOUT MEMBER THE PDS WILL BE READ MEMBER BY  *
*        MEMBER, OR USER MAY USE INPFIND TO POSITION SPECIFICALLY.    *
*        WHEN THE DIR FLAG IS ON, THE DIRECTORY WILL BE READ.         *
*   NOTE THAT DCBS ARE OF UNEQUAL LENGTH; SEQ IS LONGER               *
*---------------------------------------------------------------------*
POPOPPNV TM    DS1DSORG,JFCORGPO  PARTITIONED ?                  89360
         BZ    POPOPPS       NO; CHECK SEQUENTIAL                89360
         TM    CALLFLG,CLEXIST  CHECK DSN/MEMBER EXISTENCE ?     93312
         BNZ   POPPOPM       YES; HAD LONGER GETMAIN             93312
         TM    JFCBIND1,JFCPDS  MEMBER SPECIFIED ?               86272
         BNZ   POPDOPN       YES; PROCEED WITH SEQUENTIAL OPEN   86272
POPPOPM  TM    JFCBIND1,JFCPDS  MEMBER SPECIFIED ?               86272
         BNZ   POPPOPN       YES; OPEN PO AND FIND               93312
         TM    PUPDS,PUFPDIR PROCESS DIRECTORY ?                 89352
         BNZ   POPDOPN       YES; PROCEED WITH OPEN              89352
         TM    PUPDS,PUFPMEM+PUFPALI  PROCESS MULTIPLE MEMBERS ? 89352
         BZ    POPNOP        NO; TOO BAD                         86272
         AIF   (NOT &MVSESA).NODEFG                             GP99007
*---------------------------------------------------------------------*
*   UNDER OS/390 AND LATER SYSTEMS WE USE THE DESERV FACILITY TO GET  *
*   THE PDS DIRECTORY INFORMATION. WITH A LITTLE BIT OF EXTRA CODE    *
*   THIS SUPPORTS CONCATENATED PDS AND PDS/E DATA SETS.               *
*   TO MAKE THIS WORK, WE ALLOCATE A TEMPORARY DD TO USE WITH JFCB    *
*   MODIFICATION TO SPECIFY A SINGLE PDS AND MEMBER NAME EACH OPEN.   *
*---------------------------------------------------------------------*
         OI    PROFLAGS,PFGETDE  SET FOR STORAGE DIRECTORY      GP99007
         OI    PWPFLAG,PWPFDE  ALSO SET PERMANENT FLAG          GP03244
.NODEFG  ANOP  ,                                                GP99007
POPPOPN  LA    R1,PODPAT     BPAM READ DCB                      GP03241
         TM    JFCBIND1,JFCPDS  MEMBER SPECIFIED ?               93319
         BNZ   POPDOPNM      YES; USE BPAM AND FIND             GP03241
         TM    PROFLAGS,PFGETDE  IN-STORAGE DIRECTORY?          GP03241
         BNZ   POPDOPNM      YES; USE BPAM FOR DESERV           GP03241
         LA    R1,PEPAT      SEQUENTIAL DIRECTORY READ DCB      GP03241
POPDOPNM MVC   PWPOD(PEPATLN),0(R1)  MAKE DIRECTORY DCB         GP03241
*---------------------------------------------------------------------*
*   COMPLETE THE DCB EXIT LIST AND EODAD ADDRESSES; INHIBIT MERGE     *
*---------------------------------------------------------------------*
POPDOPNP MVC   DCBDDNAM-IHADCB+PWPOD,DCBDDNAM-IHADCB+PWDCB COPY DD
         LA    R1,PWPOD                                          89352
         ST    R1,PW@POD                                         89352
         MVI   PW@POD,X'80'  MAKE INPUT                          89352
         MVC   PWPJFCB(JFCBLGTH),INFMJFCB  PRESERVE JFCB         89352
         LA    R2,PODEXIT2   GET DCB EXIT                        89352
         STM   R2,R3,PWPXLST   MAKE EXIT/JFCB LIST               89352
         MVI   PWPXLST,X'05'  SET DCB EXIT                       89352
         MVI   PWPXLST+4,X'87'  SET JFCB, LAST                   89352
         LA    R1,PWPXLST                                        93312
         STCM  R1,7,DCBEXLST+1-IHADCB+PWPOD  SET EXITLIST ADDR
         OI    JFCBTSDM,JFCNDSCB  NO MERGE AT ALL                89352
         NI    JFCBIND1,255-JFCPDS  KILL MEMBER                  93312
         TM    PROFLAGS,PFGETDE  SET FOR STORAGE DIRECTORY ?
         BZ    POPPODAD      NO; RETAIN PODEODAD
         LA    R1,POPEODAD   GET MEMBER END-FILE
         STCM  R1,7,DCBEODA-IHADCB+PWPOD  GO TO END-MEMBER
POPPODAD OPEN  MF=(E,PW@POD),TYPE=J  OPEN THE DIRECTORY          93312
POPPODAJ MVC   INFMJFCB(JFCBLGTH),PWPJFCB  RESTORE JFCB          93312
         TM    DCBOFLGS-IHADCB+PWPOD,DCBOFOPN  OPEN ?            93312
         BZ    POPNOP        NO GOOD                             93312
*---------------------------------------------------------------------*
*   PDS(MEMBER): ISSUE A FIND TO VERIFY MEMBER. USE SEQ. DCB TO READ  *
*---------------------------------------------------------------------*
         TM    JFCBIND1,JFCPDS  SPECIFIC MEMBER ?                93312
         BZ    POPPONM       NO; CONTINUE DIRECTORY PROCESSING   93312
         FIND  PWPOD,JFCBELNM-INFMJFCB+PWPJFCB,D  FIND MEMBER    93312
         LR    R2,R15        PRESERVE THE RETURN CODE            93312
         CLOSE MF=(E,PW@POD)  CLOSE THE PDS                      93312
         LTR   R2,R2         CHECK THE RETURN                    93312
         BZ    POPDOPN       PROCEED WITH OPEN                   93312
         MVI   RETCC,10      SET NO MEMBER RETURN CODE           93312
         B     POPNOP10      ELSE FAIL                           93312
*---------------------------------------------------------------------*
*   PDS: (POSSIBLY CONCATENATED)                                      *
*     ISSUE DESERV TO GET MEMBER LIST (USING SUBDSERV SUBROUTINE)     *
*     ADJUST EXIT LIST; SAVE JFCB                                     *
*     GET AND SAVE DSAB ADDRESS FOR DSN LOOK-UP AT MEMEOD             *
*     GET TEMPORARY DD TO USE FOR PDS(MEMBER) SEQUENTIAL READS        *
*---------------------------------------------------------------------*
POPPONM  NI    JFCBTSDM,255-JFCNDSCB  ALLOW DSCB MERGE           90261
         LA    R1,PWPJFCB                                        89352
         STCM  R1,7,PWXLIST+5  BUILD OPEN LIST                   89352
         LA    R1,MEMEODAD   GET MEMBER END-FILE                 89352
         STCM  R1,7,DCBEODA-IHADCB+PWDCB  GO TO END-MEMBER       89352
         ST    R1,PWPBXLE+4  FORCE A READ ON NEXT MEMBER LOOK-UP 89352
         OI    PWFLAG,PWFEOM  PRESET FOR END OF MEMBER           89352
         OI    PWPFLAG,PWPFPDS  INDICATE PDS PROCESSING         GP03244
         TM    PROFLAGS,PFGETDE  STORAGE DIRECTORY?             GP99007
         BZ    POPEXITC      NO; USE GET WHEN NEEDED            GP99007
         LOAD  EPLOC==CL8'SUBDSERV' GET DESERV SERVICE ROUTINE  GP03241
         ST    R0,SUBDSERV   SAVE FOR DURATION                  GP03241
         SUBCALL SUBDSERV,('INIT',PW@ROOT,PWPOD),VL,MF=(E,SUBPARM)
POPEODAD CLOSE MF=(E,PW@POD)  CLOSE THE PDS                      93312
         LA    R2,PWPOD                                         GP03244
         BAS   R14,FREEPULL  FREE BUFFER POOL, SAFELY           GP03244
         SERVCALL DSABD,DCBDDNAM-IHADCB+PWDCB  GET DSAB ADDRESS GP03241
         ST    R1,PW@DSAB    SAVE FOR LATER                     GP03241
         LA    R0,1                                             GP99007
         STCM  R0,7,PWPOD+DCBBUFCA-IHADCB  DE-ACTIVATE BUFFERS  GP99007
         XC    PW@DBXL,PW@DBXL  CLEAR FOR RESTART OF LOOP       GP03241
         ICM   R0,15,PW@ROOT  WAS DESERV SUCCESSFUL ?           GP03241
         BZ    POPNOP        NO; BAD, BAD, BAD                  GP03241
         LA    R14,PWPDDNM   RETURNED DD NAME                   GP03243
         LA    R15,PWPJFCB+JFCBDSNM-INFMJFCB  DSN               GP03243
         SR    R0,R0         (NO) MEMBER NAME                   GP03243
         LA    R1,PWPJFCB+JFCBVOLS-INFMJFCB   VOLSER            GP03243
         LA    R2,=X'08'     DISP=SHR                           GP03243
         STM   R14,R2,SUBPARM  MAKE PARM LIST                   GP03243
         SERVCALL ALCDD,SUBPARM  ALLOCATE A DD FOR A SINGLE DS  GP03243
         LTR   R15,R15       DID IT WORK ?                      GP03243
         BNZ   POPNOP        NO; BAD, BAD, BAD                  GP03241
         MVC   PWDCB+DCBDDNAM-IHADCB(L'DCBDDNAM),PWPDDNM        GP03243
         MVI   PWCONCT,0     REMEMBER FIRST ALLOCATION          GP03244
         B     POPEXITC      LET FIRST GET DO THE MEMBER OPEN    89352
*---------------------------------------------------------------------*
*  SEQUENTIAL - FINAL CHECKS                                          *
*---------------------------------------------------------------------*
POPOPPS  TM    DS1DSORG,JFCORGPS  SEQUENTIAL ?                   86272
         BZ    POPNOP        NO; TOO BAD                         86272
         DROP  R1                                                86272
         TM    JFCBIND1,JFCPDS  MEMBER SPECIFIED ?               86272
         BNZ   POPNOP        YES; TOO BAD                        86272
*        B     POPDOPN                                           86272
*---------------------------------------------------------------------*
*   OPEN SEQUENTIAL DATA SET AND TEST                                 *
*---------------------------------------------------------------------*
POPDOPN  OPEN  MF=(E,PWDCB@),TYPE=J  OPEN CAREFULLY              82175
POPDOPN2 CLI   IXRETCOD,0    WAS OPEN VALID ?                    86272
         BNE   POPNOP        NO; SET CODE 12                     86272
         TM    PWDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN NOW ?
         BZ    POPNOP        NO; TOO BAD
         L     R5,DCBDEBAD-IHADCB+PWDCB   GET DEB ADDRESS        82018
         N     R5,=X'00FFFFFF'  CLEAN IT                        GP99158
         USING DEBBASIC,R5
         ICM   R5,7,DEBSUCBB  LOAD THE PRESUMED UCB ADDRESS     GP98323
         BZ    POPPNUCB      NONE; SKIP                         GP98323
         USING UCBOB,R5      ELSE DECLARE UCB
         DROP  R3,R5
POPPNUCB LH    R1,PWDCB+DCBLRECL-IHADCB  GET NEW RECORD LENGTH
         B     POPEXIT       OK
*---------------------------------------------------------------------*
*   INVALID CONDITIONS, OR OPEN FAILED                                *
*---------------------------------------------------------------------*
POPNOP   MVI   RETCC,12      SHOW UNUSABLE
POPNOP10 OI    CALLFLG,CLABEDU    FIX FOR LATER FLIP
*---------------------------------------------------------------------*
*   COMMON OPEN RETURN:  IF SUCCESSFUL, CHAIN INP# BLOCK FOR USE,     *
*     OTHERWISE ISSUE WTO AND/OR ABEND OR RETURN WITH CONDITION CODE. *
*---------------------------------------------------------------------*
POPEXIT  XI    CALLFLG,CLABEDU+CLNWTO  FLIP FOR FASTER TESTING
         OI    IXFLAG2,IX2REGET  SET FOR INITIALIZATION
         CLI   RETCC,8       MAJOR ERROR ?
         BNL   POPFREE       YES; FREEMAIN AGAIN
         TM    PWDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?
         BNZ   POPEXITC      YES; CHAIN
         MVI   RETCC,8       SET LEVEL 8 ERROR FOR DUMMY
         OI    PWFLAG,PWFEOF  SET FOR FAST EOF
         NI    CALLFLG,255-CLABE  AND FIX FLAG FOR TESTS
         TM    CALLFLG,CLABEDU  ABEND ON DD DUMMY ?
         BNZ   POPFREE       YES
         LA    R0,EODAD      MAKE PHONY GET EXIT ADDRESS
         STCM  R0,7,PWDCB+DCBGET+1-IHADCB  SET PHONY PUT ADDRESS
POPEXITC LTCB  R3,USE=YES                                       GP97224
         ICM   R2,15,TCBFSA  GET SAVE AREA                      GP98323
         DROP  R3
         BZ    EXIT16        SET MAJOR ERROR
POPLOOP  ICM   R1,15,0(R2)   IS LINK POINTER ZERO ?
         BZ    POPLOOS       YES; CHAIN OURS IN
         LR    R2,R1
         B     POPLOOP       TRY AGAIN
POPLOOS  ST    R8,0(,R2)     CHAIN THIS BLOCK IN
         ST    R8,RETR0      RETURN WORK AREA IN R0
         B     EXITSET
         SPACE 1
*---------------------------------------------------------------------*
*   ERROR PROCESSING - FREE RESOURCES                                 *
*---------------------------------------------------------------------*
POPFREE  TM    CALLFLG,CLABE+CLABEDU+CLNWTO  MESSAGE ?
         BZ    POPFREE2      YES
         MVC   PWVCON(POPWTOL),POPWTO  MAKE WTO PATTERN
         MVC   PWVCON+4(8),PUDDNAM   INSERT DD NAME              82116
         WTO   MF=(E,PWVCON)   WRITE THE MESSAGE
         CLI   PUDDALT,C' '  PRINTABLE ALTERNATE ?
         BNH   POPFREE2      NO
         MVC   PWVCON+4(8),PUDDALT  ALSO SHOW ALTERNATE
         WTO   MF=(E,PWVCON)
POPFREE2 DELETEST EP=@DCBEXIT,LEN=3  FREE THE EXIT ROUTINE      GP04119
         DELETEST EP=@SERVICE,LEN=4                              81284
         TM    PWFLAG,PWFEXT  IS EXTENSION PRESENT ?            GP03352
         BZ    POPFREE3      NO; AVOID ERRORS                   GP03253
         DELETEST EP=SUBDSERV,LEN=4                              81284
POPFREE3 L     R0,PWSPLEN    GET GETMAIN PARMS                  GP03253
         FREEMAIN R,LV=(0),A=(R8)  FREEMAIN IT (IT'S BELOW)
         TM    CALLFLG,CLABE+CLABEDU  ABEND ?
         BZ    EXITSET       AND QUIT
         ABEND 2540,DUMP                                         89352
         DROP  R7
         SPACE 1
POPWTO   WTO   'DD-NAME? DD MISSING OR UNUSABLE',MF=L,ROUTCDE=11
POPWTOL  EQU   *-POPWTO
         SPACE 1
EXIT12   MVI   RETCC,12      SET MAJOR ERROR
         B     EXITSET       AND QUIT
         SPACE 2                                                 82178
***********************************************************************
**  DCB OPEN EXIT INVOKED BY PWXLIST PRIOR TO ANY PROCESSING.        **
**  USED TO SET DCBOPTZ AFTER OPEN'S JFCB TO DCB MERGE. ALSO         **
**  USED TO SET/RESET DCBOPTQ FLAG FOR CONCATENATED FILES.       82178*
***********************************************************************
         PUSH  USING                                            GP97202
         DROP  ,                                                GP97217
         USING EXITDCB,R15   DECLARE PASSED BASE                 82178
EXITDCB  N     R1,=X'00FFFFFF'    AMODE 31 SUPPORT              GP14252
         SH    R1,=Y(PWDCB-INPTWORK)  GET WORK AREA ADDRESS BACK 82178
         USING INPTWORK,R1   DECLARE LOCAL WORK AREA             82178
         NI    PWFLAG,255-PWFASCI  RESET ASCII TRANSLATION       82178
         TM    PWDCB+DCBOPTCD-IHADCB,DCBOPTQ   OPTCD=Q ?         82178
         BZ    EXITDCBQ                                          82178
         OI    PWFLAG,PWFASCI   SET MY TRANSLATION               82178
         NI    PWDCB+DCBOPTCD-IHADCB,255-DCBOPTQ  AND RESET IBM'S
EXITDCBQ OI    PWDCB+DCBOPTCD-IHADCB,DCBOPTZ  SET OPTCD=Z FOR TAPE
         BR    R14                                               82178
         POP   USING                                            GP97202
         SPACE 1                                                 85157
***********************************************************************
**  @DCBEXIT POST-PROCESSING EXIT                                85157*
**        THIS MODULE MAY BE CALLED BY ROUTINES IN KEY ZERO.         **
**        AS A RESULT, 30A ABENDS MAY OCCUR IN FREEPOOL WHEN         **
**        GETPOOL IS DONE BY OPEN. IF ALL PARAMETERS ARE         85157*
**        VALID, THIS EXIT WILL DO THE GETPOOL.                  85157*
**  CODE CORRECTED FOR SAM/E (SEE IECQBFG1 IN LPALIB)            85157*
***********************************************************************
         SPACE 1                                                 85157
         PUSH  USING                                             85157
         DROP  ,                                                 85157
         USING PODEXIT2,R15                                     GP14252
PODEXIT2 N     R1,=X'00FFFFFF'    AMODE 31 SUPPORT              GP14252
         LR    R10,R1        COPY DCB                            89352
         LA    R4,PWPOD-INPTWORK  SET OFFSET TO DIRECTORY DCB    89352
         SLR   R10,R4        MAKE WORK AREA                      89352
         BALS  R12,DCBECOM-PODEXIT2(,R15)   JOIN COMMON, WITH BASE SET
         DROP  R15                                              GP14252
         SPACE 1                                                 89352
         USING DCBEXIT2,R15                                     GP14252
         USING IHADCB,R11                                        85157
DCBEXIT2 N     R1,=X'00FFFFFF'    AMODE 31 SUPPORT              GP14252
         LR    R12,R15                                           85157
         DROP  R15                                              GP14252
         USING DCBEXIT2,R12                                      85157
         LR    R10,R1        COPY DCB ADDRESS                    85157
         LA    R4,PWDCB-INPTWORK                                 85157
         SLR   R10,R4                                            85157
         USING INPTWORK,R10                                      85157
DCBECOM  LR    R11,R1        COPY DCB ADDRESS                    85157
         LR    R9,R14        SAVE RETURN ADDRESS                 85157
*        TM    PWFLAG,PWFCON+PWFAKE  NON-I/O ACCESS METHOD ?     85157
*        BNZ   DCBEXITX      YES; SKIP GETPOOL                   85157
         SLR   R5,R5                                             85157
         ICM   R5,3,DCBBUFL  GET BUFFER LENGTH                   85157
         BZ    DEXNBUFL      NONE; TRY BLOCKSIZE                 85157
         CH    R5,DCBBLKSI   NOT SMALLER THAN BLOCKSIZE ?        85157
         BNL   DEXYBUFL      RIGHT; USE LARGER SIZE              85157
DEXNBUFL ICM   R5,3,DCBBLKSI  GET BLOCKSIZE                      85157
         BZ    DCBEXITX      OPEN WILL BOMB                      85157
DEXYBUFL LA    R5,7(,R5)                                         85157
         N     R5,=X'0000FFF8'  ROUND TO DOUBLE-WORD SIZE        85157
         BZ    DCBEXITX      ?                                   85157
         STH   R5,DCBBUFL    SET BUFFER LENGTH BACK              85157
         SLR   R4,R4                                             85157
         ICM   R1,7,DCBBUFCA   HAVE A BUFFER ADDRESS ?           85157
         BZ    DEXNBUFP      NO; PROCEED                         85157
         TM    DCBBUFCA+L'DCBBUFCA-1,1   VALID ADDRESS ?         85157
         BZ    DEXBUFIN      YES; RE-INITIALIZE BUFFERS          85157
DEXNBUFP ICM   R4,1,DCBBUFNO GET NUMBER OF BUFFERS               85157
         BNZ   *+12          OK                                  85157
         LA    R4,5          SET FOR DEFAULT OF 5 BUFFERS       GP99156
         STC   R4,DCBBUFNO   STASH BACK                          85157
         LR    R3,R5         COPY BUFFER SIZE                    85157
         MR    R2,R4         GET SPACE FOR BUFFERS               85157
         LA    R3,16(,R3)    PLUS BUFFER DESCRIPTOR WORD         85157
         L     R14,PWTCB     GET MY TCB ADDRESS BACK             85157
         L     R14,TCBRBP-TCB(,R14)  GET THE RB                  85157
         USING RBBASIC,R14   DECLARE RB                          85157
         TM    RBSTAB2,RBTCBNXT  ONLY RB ?                       85157
         BNZ   DCBEXITX      YES ?                               85157
         L     R14,RBLINK                                        85157
         SLR   R2,R2         SIGNAL UNPRIVILEGED CALLER          85157
         TM    RBOPSW+1,X'F0'  RUNNING IN KEY ZERO ?             85157
         BNZ   DCBEXITX *VIO BUG* WAS B DEXBUFSP      NO         85157
         LA    R2,252        SET FOR SPECIAL SUB-POOL            85157
DEXBUFSP DS    0H                                               GP08089
         DROP  R14                                               85157
         AIF   (NOT &MVS).OLDMAIN                                85157
 STORAGE OBTAIN,LENGTH=(R3),SP=(R2),LOC=BELOW,COND=YES   (TEMP LOC)
         BXH   R15,R15,DCBEXITX  LET OPEN BOMB IF NO SPACE       85157
         STC   R2,PWBUFSP    SAVE FOR FREEPOOL                  GP08089
         AGO   .DOMAIN                                           85157
.OLDMAIN SLL   R2,24         SHIFT SUB-POOL NUMBER               85157
         OR    R3,R2         MAKE SP/LEN                         85157
         GETMAIN R,LV=(R3)   GET STORAGE OR BOMB                 85157
.DOMAIN  LR    R2,R1         COPY NEW ADDRESS                    85160
         CLRL  (R2),(R3)     ZERO ALL OF IT (CLOB. 14-1)         85160
         LR    R1,R2         RESTORE                             85160
         STC   R4,5(,R1)     SET BUFNO                           85157
         MVI   4(R1),X'40'   SET LONG PREFIX (FOR LRI)          GP99158
         STH   R5,6(,R1)     SET BUFSZ                           85157
         STCM  R1,7,DCBBUFCA   SET BUFFER CONTROL BLOCK INTO DCB 85157
         STH   R5,DCBBUFL    UPDATE BUFFER LENGTH                85157
DEXBUFIN LA    R15,8(,R1)    POINT TO FIRST BUFFER               85157
         TM    4(R1),X'40'   CHECK POOL CONTROL LENGTH           85157
         BZ    *+8           NO                                  85157
         LA    R15,16(,R1)   MAKE NEW DOUBLEWORD BOUNDARY       GP99158
         ST    R15,0(,R1)    STASH FIRST ADDRESS                 85160
         ICM   R4,1,5(R1)    LOAD AND TEST BUFNO                 85160
         BNZ   *+12          OK                                  85157
         LA    R4,1          FORCE                               85157
         STC   R4,5(,R1)     STASH IT BACK                       85160
         ICM   R5,3,6(R1)    BUFLEN                              85157
DEXBUFLP LR    R1,R15        GET NEXT BUFFER                     85157
         BCT   R4,DEXBUFST   SET BUFFER LINK POINTER             85157
         ST    R4,0(,R1)     TERMINATE CHAIN                     85157
DCBEXITX MVI   DCBNCP,0      JUST IN CASE                        85157
         LR    R14,R9        RESTORE EXIT ADDRESS                85157
         BR    R14                                               85157
         SPACE 1                                                 85157
DEXBUFST LA    R15,0(R1,R5)   POINT TO NEXT BUFFER               85157
         ST    R15,0(,R1)    STASH NEXT BUFFER ADDRESS           85157
         B     DEXBUFLP      TRY AGAIN                           85157
         POP   USING         RESTORE OLD USINGS                  85157
         LTORG ,                                                GP14252
         EJECT ,
***********************************************************************
**                                                                   **
**  TCLOSE - FOR PDS, SKIPS TO NEXT MEMBER; FOR SEQ, ERROR=4         **
**                                                               89352*
***********************************************************************
TCLOSE   TM    PWFLAG,PWFEXT   DOING A PDS ?                    GP02248
         BZ    TCLOSEQ       RETURN WITH MINOR ERROR             89352
         TM    PWPFLAG,PWPFPDS DOING A PDS ?                    GP03244
         BZ    TCLOSEQ       RETURN WITH MINOR ERROR             89352
         OI    PWFLAG,PWFEOM  FORCE END OF MEMBER                89352
         B     RECURSE       RETURN                              89352
TCLOSEQ  OI    RETCC,4       SET MINOR ERROR                     89352
         B     RECURSE       TEST NEXT                           89352
         SPACE 2                                                 86272
***********************************************************************
**                                                                   **
**  CLOSE PROCESSING - CLOSE DCB(S) AND FREE RESOURCES               **
**                                                                   **
***********************************************************************
         PUSH  USING                                            GP03244
PCLOSE   LTCB  R3            GET CURRENT TCB                    GP03244
         CLM   R3,15,PWTCB   SAME TCB ?                         GP98323
         BNE   SET4          NO; MINOR ERROR
*---------------------------------------------------------------------*
*   COMMON:  CLOSE DCB; FREE VSAM RPL, ETC.; FREE BUFFERS             *
*---------------------------------------------------------------------*
         TM    PWDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?           GP03252
         BZ    PCLOSEXT      NO; UNCHAIN                        GP03252
         LA    R0,3          SET MAXIMUM FOR OPTIONS             86164
         IC    R1,CALLLEN    GET DISPOSITION TYPE                86113
         NR    R1,R0         MASK                                86164
         CR    R1,R0         VALID ?                             86164
         BL    *+6           YES                                 86164
         SLR   R1,R1         ELSE FORCE DEFAULT CLOSE=DISP       86164
         MH    R1,=Y(CLOSERER-CLOSEDSP)  CONVERT INDEX TO OFFSET 86164
         LA    R1,CLOSEDSP(R1)  POINT TO OPTION BYTE             86113
         MVC   PWDCB@(1),0(R1)  MAKE DISP/REREAD/LEAVE OPTION    86113
         CLOSE MF=(E,PWDCB@)                                     86113
         TM    PWFLAG,PWFACB VSAM MODE ?                        GP14238
         BNZ   PCLOSEXT        YES                              GP14238
PCLOSEPS LA    R2,PWDCB                                         GP03244
         BAS   R14,FREEPULL  FREE BUFFER POOL, SAFELY           GP03244
*---------------------------------------------------------------------*
*   PDS EXTENSION:  CLOSE PDS DCB; FREE DESERV BUFFERS; FREE SEQ DD   *
*---------------------------------------------------------------------*
PCLOSEXT TM    PWFLAG,PWFEXT  IS THE PDS EXTENSION PRESENT ?    GP03244
         BZ    PCLCHAIN      NO; PROCEED NORMALLY                89352
         TM    PWPFLAG,PWPFPDS  REALLY PROCESSING A PDS ?       GP03244
         BZ    PCLCHAIN      NO; PROCEED AS FOR QSAM/VSAM       GP03244
         TM    PWPOD+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?            89352
         BZ    PCLOSEF       NO                                 GP99007
         CLOSE MF=(E,PW@POD)  CLOSE                              89352
PCLOSEF  LA    R2,PWPOD                                         GP03244
         BAS   R14,FREEPULL  FREE BUFFER POOL, SAFELY           GP03244
PCLOSEDE TM    PWPFLAG,PWPFDE  STORAGE DIRECTORY ?              GP03243
         BZ    PCLOSENR      NO; NOTHING TO FREE                GP03243
         ICM   R2,15,PW@ROOT  LOOK FOR DESERV BUFFERS           GP03241
         BZ    PCLOSEDT      NO; NOTHING TO FREE                GP99158
         SUBCALL SUBDSERV,('END',PW@ROOT),VL,MF=(E,SUBPARM)     GP03241
PCLOSENR CLI   PWPDDNM,C' '  DYNAMIC DD ALLOCATED ?             GP03244
         BNH   PCLOSEDT      NO                                 GP03244
         SERVCALL ALCFD,PWPDDNM  FREE DDNAME ALLOCATION         GP03245
         XC    PWPDDNM,PWPDDNM                                  GP03245
PCLOSEDT DELETEST EP=SUBDSERV,LEN=4   ALSO FREE SUBROUTINE      GP03241
*---------------------------------------------------------------------*
*  CLOSE: UNCHAIN INP# WORK AREA; DELETE MODULES; FREE WORK AREA      *
*---------------------------------------------------------------------*
         USING TCB,R3
PCLCHAIN L     R2,TCBFSA     GET HIGH-LEVEL SAVE AREA
         DROP  R3
PCLCHAIL CLM   R8,15,0(R2)   THIS ONE ?
         BE    PCLUNCH       YES; UNCHAIN
         ICM   R2,15,0(R2)   GET NEXT
         BNZ   PCLCHAIL      TRY AGAIN
         B     PCLFREEM      ELSE FREE
PCLUNCH  MVC   0(4,R2),PWLINK  UNCHAIN THIS ONE
PCLFREEM DELETEST EP=@DCBEXIT,LEN=3  FREE THE EXIT ROUTINE      GP04119
*0C4*    DELETEST EP=@SERVICE,LEN=4                              81284
         L     R0,PWSPLEN    GET GETMAIN LENGTH/SUBPOOL          81200
         FREEMAIN R,LV=(0),A=(R8)  (IT'S BELOW)
         B     RECURSE       AND DO ANOTHER
         POP   USING                                            GP03244
         SPACE 1                                                GP03244
*---------------------------------------------------------------------*
*   FREEPULL:  FREEPOOL WITHOUT 30A ABENDS, ETC.                      *
*     R2: DCB ADDRESS                                                 *
*---------------------------------------------------------------------*
         PUSH  USING                                            GP03244
         USING IHADCB,R2     DCB ADDRESS PASSED BY CALLER       GP03244
FREEPULL STM   R14,R12,12(R13)  SAVE EVERYTHING                 GP05013
         TM    DCBBUFCA+L'DCBBUFCA-1,1  FREEPOOLED BEFORE?      GP03244
         BNZ   FREEPULX      YES; DON'T DO IT AGAIN              89352
         SLR   R1,R1                                             89352
         ICM   R1,7,DCBBUFCA DIRTY POOL ?                        89352
         BZ    FREEPULX      YES; SKIP FREEPOOL AND 30A ABEND    89352
         SLR   R14,R14                 CLEAR REGISTER            89352
         IC    R14,5(,R1)    GET BUFNO                           89352
         MH    R14,6(,R1)      TIMES BUFLEN                      89352
         LA    R0,8(,R14)    PREFIX                              89352
         TM    4(R1),X'40'   SIXTEEN-BYTE PREFIX ?               89352
         BNO   *+8           NO                                  89352
         LA    R0,16(,R14)   SET LONG PREFIX                     89352
         ICM   R0,8,PWBUFSP  SET SUB-POOL                        89352
         SVC   10            FREE THE BUFFERS                    89352
FREEPULX LA    R0,1                                              89352
         STCM  R0,7,DCBBUFCA DE-ACTIVATE BUFFERS                 89352
         LM    R14,R12,12(R13)  RESTORE ALL                     GP05013
         BR    R14           RETURN                             GP05013
         POP   USING                                            GP03244
         SPACE 2                                                 86272
***********************************************************************
**   DCB ABEND EXIT                                                  **
***********************************************************************
         PUSH  USING                                             86272
         DROP  ,                                                 86272
         USING EXITABND,R15                                      86272
EXITABND TM    3(R1),X'04'   PERMITTED TO IGNORE THE CONDITION ? 86272
         BNZ   EXITABNI      YES                                 86272
         MVI   3(R1),0       TAKE THE ABEND                      86272
         BR    R14                                               86272
EXITABNI L     R2,4(,R1)     LOAD THE DCB ADDRESS                86272
         LA    R3,PWDCB-INPTWORK                                 86272
         SR    R2,R3         GET WORK AREA BASE                  86272
         USING INPTWORK,R2   DECLARE IT                          86272
         MVI   IXRETCOD,12   SET MAJOR ERROR                     86272
         BR    R14           RETURN                              86272
         POP   USING         RESTORE MAPPINGS                    86272
         SPACE 1
*        DATA
*
PATDCB   DCB   DDNAME=ANY,DSORG=PS,MACRF=GL,EROPT=ACC ,OPTCD=Z   82178
PATEND   EQU   *
PEPAT    DCB   DDNAME=ANY,DSORG=PS,MACRF=GL,EODAD=PODEODAD,            *
               RECFM=U,LRECL=256,BLKSIZE=256  DIRECTORY          89352
         DC    CL80'./       ADD   '   PATTERN FOR IEBUPDTE      89352
PEPATLN  EQU   *-PEPAT                                           89352
PODPAT   DCB   DDNAME=ANY,DSORG=PO,MACRF=R,EODAD=PODEODAD        93319
PODPATLN EQU   *-PODPAT                                          93319
PATACB   ACB   DDNAME=SYSUT1,EXLST=EXLSTACB,                           *
               MACRF=(SEQ,IN)                                   GP14252
PATACBLN EQU   *-PATACB                                          89360
PATRPL   RPL   ACB=PATACB,OPTCD=(LOC,ASY)                       GP14252
PATRPLLN EQU   *-PATRPL                                         GP14238
EXLSTACB EXLST AM=VSAM,EODAD=EODAD,LERAD=VSLERAD,SYNAD=VSSYNAD   89360
CLOSEDSP OPEN  (PATDCB,(INPUT,DISP)),MF=L                        86113
         ORG   CLOSEDSP+1                                        86113
CLOSERER OPEN  (PATDCB,(INPUT,REREAD)),MF=L                      86113
         ORG   CLOSERER+1                                        86113
CLOSELIV OPEN  (PATDCB,(INPUT,LEAVE)),MF=L                       86113
         ORG   CLOSELIV+1                                        86113
         EJECT
TRASTOEB TRTAB TYPE=ATOE     ASCII TO EBCDIC (OR ITOE FOR ISCII) 90257
         SPACE 1                                                GP04114
TRUPCASE DC    256AL1(*-TRUPCASE)  AS IS                        GP04114
         TRENT TRUPCASE,(*-TRUPCASE+C' '),(X'81',9), UPPER CASE GP04114
         TRENT TRUPCASE,(*-TRUPCASE+C' '),(X'91',9), UPPER CASE GP04114
         TRENT TRUPCASE,(*-TRUPCASE+C' '),(X'A2',8)  UPPER CASE GP04114
         SPACE 2                                                 82175
         PRINT &PRTMAC
USRMAP   MAPINP PREFIX=PU    MAPPING OF USER'S INPWORK AREA      82116
         SPACE 2
         IEFJFCBN ,          EXPAND JFCB
         SPACE 2
INPTWORK MAPINPWK PREFIX=PW,WIDTH=MAXWIDTH  MAP DCB AND WORK AREA
@SERVICE EQU   PW@SERV,4,C'A'  REDEFINE SERVICE ROUTINE ADDRESS  90261
@DCBEXIT EQU   PWXLIST,4,C'A'  DEFINE DCB EXIT ADDRESS           90261
SUBDSERV EQU   PW@DSRV,4,C'A'  SUBDSERV ADDRESS                 GP03241
         PRINT &PRTSOR                                           89352
         SPACE 1
SAVE     DSECT ,             CONTINUATION OF SAVE AREA IN PGMHEAD
DB       DS    D             WORK AREA
CURRPW   DS    A             CURRENT WORK AREA ADDRESS           85035
RETCODE  DS    0A,XL3        RETURN CODE
RETCC    DS    X               RETURN CODE - BYTE
RETC4    EQU   4                 MINOR ERROR
RETC8    EQU   8                 PROBLEM
RETC12   EQU   12                MAJOR ERROR
RETC16   EQU   16                DISASTER
RETR0    DS    A             RETURN RECORD LENGTH
RETR1    DS    A             RETURN ADDRESS FOR LOCATE MODE
         SPACE 1
CALLPARM DS    0XL8'0'       USER'S PARAMETERS
CALLLEN  DS    X             LENGTH FOR GETF FUNCTION
CALLFLG  DS    X             FLAGS                              GP99007
CLABE    EQU   X'80'         ABEND IF NOT OPENED
CLABEDU  EQU   X'40'         ABEND IF DD DUMMY
CLNWTO   EQU   X'20'         SUPPRESS WTO IF NOT FOUND
CLJFCB   EQU   X'10'         OPEN TYPE=J - REQUIRES JFCB IN INPWORK
CLEXIST  EQU   X'08'         CHECK DSN/MEM EXISTS BEFORE OPEN    93312
CLFOLD   EQU   X'01'         CONVERT INPUT TO UPPER CASE        GP04114
CALLDEV  DS    X               0 OR DEVICE MASKS
CALLFUN  DS    X               REQUESTED FUNCTION
CALLOFG  DS    0X            FLAGS (ONLY WHEN CALLER IN AM24)   GP99007
CALLR1   DS    A             LIST/RECORD ADDRESS OR VALUE
SUBPARM  DS    5A            MF=E AREA FOR SUBROUTINE CALLS     GP03241
PWSHOCB  DS    XL(PWSHOCBL)  SHOWCB WORK AREA                    90287
PWMODCB  DS    XL(PWMODCBL)  MODCB WORK AREA                    GP10192
CLAM     DS    X             CALLER'S MODE FLAG                 GP99007
CLAM31   EQU   X'80'           CALLER IN AMODE 31               GP99007
CLAM24   EQU   X'00'           CALLER IN AMODE 24               GP99007
PROFLAGS DS    X             MISCELLANEOUS PROCESSING FLAGS     GP99007
PFGETDE  EQU   X'80'           DIRECTORY IN STORAGE             GP99007
SAVEEND  DS    0D            END OF GETMAIN                     GP99007
         SPACE 2
         PRINT &PRTSYS                                           81294
         IHAPDS PDSBLDL=NO   EXPAND DIRECTORY MAPPING           GP02248
         SPACE 2                                                GP02248
         DCBD  DSORG=PS      EXPAND IHADCB
         SPACE 2
CVTDSECT DSECT ,
         CVT   DSECT=YES
         SPACE 1
         IHACDE ,
         SPACE 1                                                 85157
         IHARB ,                                                 85157
         SPACE 1
         IKJTCB ,
         SPACE 1
         IEZDEB ,
         SPACE 1
TIODSECT DSECT
         IEFTIOT1 ,          MAP TIOT
         SPACE 1                                                GP03241
DSABSECT DSECT                                                  GP03241
         IHADSAB ,           MAP DSAB                           GP03241
         SPACE 1                                                GP03241
         IEFASIOT ,          MAP SIOT                           GP03241
         SPACE 1                                                 86272
         IECSDSL1 1          DEFINE FORMAT 1 DSCB                86272
         SPACE 1
         IEFUCBOB ,
         SPACE 1                                                 89360
         IFGRPL ,                                                89360
         SPACE 1                                                GP97224
         IHAPSA ,                                               GP97224
         SPACE 1                                                GP97224
         MVSSMDE ,                                              GP03241
         END   ,
