SUBTPUT  TITLE 'S U B T P U T  ***  SIMPLE SIMPLE TPUT REPLACEMENT'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
**                                                                   **
**   SUBTPUT HANDLES REQUESTS GENERATED BY THE #TPUT MACRO           **
**     R1 - MESSAGE ADDRESS                                          **
**     R0 BYTE 3 - MESSAGE LENGTH                                    **
**     R0 BYTE 0-2 - FLAGS                                           **
**                                                                   **
**   THE TPUT REQUEST IS CHANGED TO PUTLINE (FOR TRAPPING, ETC.)     **
**     IF THE REQUEST FAILS, IT IS ISSUED AS A WTO                   **
**                                                                   **
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 2004  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         PRINT &PRTSOR
SUBTPUT  PGMHEAD ZERO12,BASE=R12,PARM=R1,BNDRY=PAGE
         MVC   DYNPUT(PATPUTSZ),PATPUT  MOVE PUTLINE PATTERN
         LR    R4,R1         PRESERVE MESSAGE ADDRESS
         LR    R5,R0         AND MESSAGE FLAGS/LENGTH
         ST    R5,OPTFLAGS   SAVE
         N     R5,=X'000000FF'  ISOLATE LENGTH
         BNZ   HAVELEN       HAVE LENGTH
*---------------------------------------------------------------------*
*   WHEN LENGTH IS ZERO, PROCESS THE FOLLOWING TYPES:                 *
*                                                                     *
*   BCON    AL1(LEN<64),C'TEXT'                                       *
*   HCON    AL1(0,LEN),C'TEXT'                                        *
*   VCON    AL1(0,4+LEN,0,0),C'TEXT'                                  *
*   DCS     C'TEXT',AL1(0)                                            *
*---------------------------------------------------------------------*
         CLI   0(R4),C' '    PRINTABLE CHARACTER ?
         BNL   TRYDCS        POSSIBLY; LOOK FOR NULL TERMINATOR
         CLI   0(R4),0       NULL ?
         BH    TRYBCON       NO
         CLI   2(R4),0       VCON ?
         BE    TRYVCON
         SPACE 1
*   ASSUME HCON
TRYHCON  ICM   R5,1,1(R4)    LOAD LENGTH
         LA    R4,2(,R4)     SKIP LENGTH BYTES
         B     HAVELEN
         SPACE 1
*   ASSUME VCON
TRYVCON  ICM   R5,1,1(R4)    LOAD LENGTH + LENGTH OF LENGTH
         LA    R4,4(,R4)
         SH    R5,=H'4'      FIX UP
         B     HAVELEN
         SPACE 1
*   ASSUME BCON
TRYBCON  IC    R5,0(,R4)     LOAD LENGTH
         LA    R4,1(,R4)     SKIP LENGTH
         B     HAVELEN
         SPACE 1
*   ASSUME DCS
TRYDCS   LOCBYTE (R4),W2=R5,BYTE=X'00',LEN=L'DYNTEXT  LOOK FOR END
         SR    R5,R14
         SPACE 1
HAVELEN  LTR   R5,R5         IS THE LENGTH VALID ?
         BNP   BADLEN        NO
         MIN   R5,=AL2(L'DYNTEXT),TYPE=H  TRUNCATE TO VALID LENGTH
         BCTR  R5,0
         EX    R5,EXMVCTXT   MOVE TEXT TO WORK AREA
EXMVCTXT MVC   DYNTEXT(0),0(R4)  COPY TEXT
         LA    R1,5(,R5)
         STH   R1,DYNRDW
*---------------------------------------------------------------------*
*    1) CHECK FOR TSO - USE WTO IF NOT                                *
*    2) GET THE UPT AND ECT ADDRESSES                                 *
*---------------------------------------------------------------------*
         LTCB  R7,USE=YES
*OBSOLET TM    TCBTSFLG,TCBTSTSK        TSO ?                    *UNG*
*OBSOLET BNO   USEWTO        SORRY, PUTLINE IN BATCH            GP04092
         ICM   R6,15,TCBJSCB  LOOK FOR THE JSCB                 GP04092
         BZ    USEWTO        HUH ?                              GP04092
         USING IEZJSCB,R6                                       GP04092
         ICM   R6,15,JSCBPSCB  PSCB PRESENT ?                   GP04092
         BZ    USEWTO        NO; NOT TSO                        GP04092
         DROP  R6                                               GP04092
         L     R7,TCBFSA     GET FIRST SAVE AREA
         L     R7,SAVE1-SAVE(,R7)   LOAD INVOCATION R1
         USING CPPL,R7       DECLARE IT
         L     R6,CPPLECT
         L     R7,CPPLUPT
         DROP  R7
         PUTLINE PARM=DYNPUT,ECT=(R6),UPT=(R7),ECB=DYNECB,             *
               OUTPUT=(DYNRDW,TERM,SINGLE,DATA),MF=(E,DYNIOPL)
         STM   R15,R0,RETCODE
         B     PGMEXIT
         SPACE 1
*---------------------------------------------------------------------*
*    NOT TSO ENVIRONMENT - ISSUE WTO                                  *
*---------------------------------------------------------------------*
USEWTO   TM    OPTFLAG1,OFASKIP  WHAT TO DO?
         BO    PGMEXIT       NOTHING
         BM    USETEST       TEST FOR WTL VS. PRT
         OI    DYNRDW+2,X'80'   SHOW ROUTCDE SET
         LA    R1,DYNTEXT+1(R5) GET END OF CURRENT TEXT
         MVC   0(4,R1),=X'02000020'  MOVE DESC=7/ROUT=11
         WTO   MF=(E,DYNRDW)
         MVICC 4,4           SHOW WTO ISSUED
         B     PGMEXIT
         SPACE 1
USETEST  TM    OPTFLAG1,OFAPRT  PRINT ?
         BNZ   USEPRT        YES; FIND SYSPRINT
         WTL   MF=(E,DYNRDW)   LOG IT
         B     PGMEXIT
         SPACE 1
*SEPRT   CSVQUERY INEPNAME==CL8'@PRINTER',OUTEPA=@PRINTER,MF=(E,QUERY)
USEPRT   MVSQUERY INEPNM==CL8'@PRINTER',OEPA=@PRINTER,MF=(E,QUERY)
         STM   R15,R0,RETCODE
         BXH   R15,R15,PGMEXIT
         PRTV  DYNRDW,CC=NO
         STM   R15,R0,RETCODE
         SPACE 1
*---------------------------------------------------------------------*
*    FINISHED - EXIT WITH RETURN AND REASON CODES SET                 *
*---------------------------------------------------------------------*
PGMEXIT  PGMEXIT COPYRET=(RETCODE,8)  RETURN R15 AND R0
         SPACE 1
BADLEN   MVICC 8,1           SET LENGTH BAD
         B     PGMEXIT
         SPACE 2
*---------------------------------------------------------------------*
*   PATTERNS                                                          *
*---------------------------------------------------------------------*
PATPUT   PUTLINE MF=L        PATTERN
PATPUTSZ EQU   *-PATPUT      SIZE OF IOPL
PATIOPL  IKJIOPL ,
PATIOPSZ EQU   *-IOPL        SIZE OF IOPL
         SPACE 1
         PRINT &PRTMAC
*---------------------------------------------------------------------*
*   DYNAMIC SAVE AND WORK AREA                                        *
*---------------------------------------------------------------------*
SAVE     DSECT ,
DB       DS    D
         SERVDEFS ,          SERVICE AREA
@PRINTER DS    A
DYNRDW   DS    Y,Y           WTO RDW
DYNTEXT  DS    CL132         USER'S TEXT
DYNROUTE DS    XL4           DESCRIPTOR AND ROUTING CODES
DYNECB   DS    A
DYNIOPL  DS    XL(PATIOPSZ)  RESERVED SPACE FOR IOPL
DYNPUT   PUTLINE MF=L        SPACE FOR PUTLINE RQUEST
         SPACE 1
OPTFLAGS DS    0XL4  A
OPTFLAG1 DS    X     ×1/4    ACTION WHEN NOT TSO ENVIRONMENT
OFAWTO   EQU   0     ×         ISSUE WTP
OFAWTL   EQU   1     ×         ISSUE WTL
OFAPRT   EQU   2     ×         WRITE TO SYSPRINT
OFASKIP  EQU   3     ×         SKIP WTO
         SPACE 1     ×-KEEP TOGETHER
OPTFLAG2 DS    X     ×2/4
         SPACE 1     ×
OPTFLAG3 DS    X     ×3/4
         SPACE 1     ×
OPTLEN   DS    X     V4/4
         SPACE 1
*ESA*    CSVQUERY MF=(L,QUERY)
         MVSQUERY MF=(L,QUERY)
SAVEEND  EQU   *
         SPACE 1
         PRINT &PRTSYS
         IKJPTPB ,           PUTLINE PARAMETER BLOCK
         IKJCPPL ,
         IKJPSCB ,
         IEZJSCB ,
         IKJTCB  ,
         IHAPSA  ,
         END   ,
