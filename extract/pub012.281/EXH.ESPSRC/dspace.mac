***********************************************************************
*
*   DSPACE FROM CBTCOV.FILE065 (with significant changes)
*
*   ALL MACROS (FROM HERE TO TITLE CARD) FROM CBTCOV.FILE063
*
*   HELP IN CBTCOV.FILE061
*
***********************************************************************
         MACRO
&NAYME   TSOENTER &FAKE,&BASE=12,&REGS=YES,&PL=,                       +
               &WORK=0,&DSECT=NO,&SP=0
         GBLC  &R
         LCLA  &A
         LCLC  &NAME                    TO HOLD CSECT NAME    @HMD78174
         LCLB  &OPTS(8),&BIT
         LCLC  &BASEREG
         LCLC  &SECT                    CURRENT CSECT NAME    @HMD78174
&SECT    SETC  '&SYSECT'                SET CONTROL SECT NAME @HMD78174
&NAME    SETC  '&NAYME'                 HOLD CSECT NAME       @HMD78174
TSODSECT DSECT ,                        DEFINE NAME OF DSECT
TSOSAVE  DS    18F .                    FIRST SAVE AREA
         CPPL  DSECT=NO                 PARAMETER LIST
&A       SETA  1
.A1      AIF   (&A GT N'&PL).L1
&OPTS(1) SETB  ((&OPTS(1))OR('&PL(&A)' EQ 'MESSAGE'))
&OPTS(2) SETB  ((&OPTS(2))OR('&PL(&A)' EQ 'PARSE'))
&OPTS(3) SETB  ((&OPTS(3))OR('&PL(&A)' EQ 'IO'))
&OPTS(4) SETB  ((&OPTS(4))OR('&PL(&A)' EQ 'CSCAN'))
&OPTS(5) SETB  ((&OPTS(5))OR('&PL(&A)' EQ 'DAIR'))
&A       SETA  &A+1
         AGO   .A1
.L1      ANOP
TSOECB   DS    F .                      DEFINE COMMAND ECB
.LL1     AIF   (NOT &OPTS(1)).L2
         MNOTE 0,'MESSAGE PARM LIST UNDEFINED'
.L2      AIF   (NOT &OPTS(2)).L3
         PPL   DSECT=NO                 PARSE PARM LIST
.L3      AIF   (NOT &OPTS(3)).L4
         IOPL  DSECT=NO                 I/O PARAMETER LIST
.L4      AIF   (NOT &OPTS(4)).L5
         CSPL  DSECT=NO                 CMD SCAN PARM LIST
.L5      AIF   (NOT &OPTS(5)).L6
         DAPL  DSECT=NO                 DAIR PARM LIST
.L6      ANOP
TSOWORK  DS    0D .                     ALIGN TO DOUBLE-WORD
TSOUSER  EQU   * .                      GIVE ALTERNATE NAME
         AIF   ('&REGS' NE 'YES').NOREGS
         EJECT
         REGS
&R       SETC  'R'
.NOREGS  AIF   ('&DSECT' EQ 'NO').GEN
         MEXIT
.GEN     EJECT                                                @HMD78174
         AIF   ('&NAME' EQ '').NONAME                         @HMD78174
&NAME    CSECT                                                @HMD78174
         AGO   .GEN1                                          @HMD78174
.NONAME  AIF   ('&SECT' NE '').GEN0                           @HMD78174
         MNOTE 16,'CSECT NAME MISSING, GENERATION TERMINATED'
.GEN0    ANOP                                                 @HMD78174
&SECT    CSECT                                                @HMD78174
&NAME    SETC    '&SECT'          SET NAME TO CSECT NAME      @HMD78174
.GEN1    ANOP                                                 @HMD78174
         SAVE  (14,12)                                        @HMD78174
         AIF   (T'&BASE NE 'N').LUSE1
&BASEREG SETC  '&R&BASE'
         AGO   .LUSE2
.LUSE1   ANOP
&BASEREG SETC  '&BASE'
.LUSE2   BALR  &BASEREG,0               ESTABLISH BASE        @HMD78174
         USING *,&BASEREG               TEMPORARY BASE        @HMD78174
         CNOP  0,4                      ALIGN OPERANDS        @HMD78174
         L     &BASEREG,*+8             LOAD BASE ADDRESS     @HMD78174
         DROP  &BASEREG                 DROP TEMP BASE        @HMD78174
         LUSE  &NAME,&BASEREG           PERMANANT BASE        @HMD78174
         B     IHB&SYSNDX               BRANCH AROUND IDS     @HMD78174
         DC    A(&NAME)                 CSECT ADDRESS         @HMD78174
         DC    C'&NAME_&SYSDATE'        PGM ID AND DATE       @HMD78174
IHB&SYSNDX  DS  0H                      POINT TO BRANCH TO    @HMD78174
         LR    &R.2,1 .                 SAVE CPPL POINTER
         CNOP  0,4 .                    PROPER ALIGNMENT
         BAL   &R.1,*+8 .               BRANCH AROUND SP+LV
TSOLEN   DC    0XL4'00' .               DEFINE ACCESS NAME
         DC    AL1(&SP) .               SUBPOOL VALUE
         DC    AL3((((TSOUSER-TSODSECT)+(&WORK)+7)/8)*8) .  AREA LENGTH
         L     0,TSOLEN .               LOAD SP AND LV
         SVC   10 .                     ISSUE REGMAIN SVC
         ST    13,4(,1) .               CHAIN
         ST    1,8(,13) .               SAVE
         LR    &R.13,1 .                AREAS
         LUSE  TSODSECT,&R.13 .         ESTABLISH ADDRESSABILITY
         MVC   CPPL(CPPLLEN),0(&R.2) .  COPY PARM LIST
         AIF   (NOT &OPTS(2)).NPARSE
         MVC   PPLUPT(4),CPPLUPT .      USER PROFILE TAB
         MVC   PPLECT(4),CPPLECT
         MVC   PPLCBUF(4),CPPLCBUF      INIT CMD BUFFER       @HMD78174
         LA    &R.0,PPLRANS .              LOAD ANSWER PLACE
         ST    &R.0,PPLANS
         LA    &R.0,TSOECB
         ST    &R.0,PPLECB
&BIT     SETB  1
.NPARSE  AIF   (NOT &OPTS(3)).NIO
         MVC   IOPLECT(4),CPPLECT
         MVC   IOPLUPT(4),CPPLUPT
         AIF   (&BIT).Q1
         LA    &R.0,TSOECB
.Q1      ST    &R.0,IOPLECB
&BIT     SETB  1
.NIO     AIF   (NOT &OPTS(5)).NDAIR
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         MVC   DAPLPSCB(4),CPPLPSCB
         AIF   (&BIT).Q2
&BIT     SETB  1
         LA    &R.0,TSOECB
.Q2      ST    &R.0,DAPLECB
.NDAIR   AIF   (NOT &OPTS(4)).NCSCAN
         MVC   CSPLUPT(4),CPPLUPT
         MVC   CSPLECT(4),CPPLECT
         MVC   CSPLCBUF(4),CPPLCBUF     INIT CMD BUFFER       @HMD78174
         AIF   (&BIT).Q3
&BIT     SETB  1
         LA    &R.0,TSOECB
.Q3      ST    &R.0,CSPLECB
.NCSCAN  INUSE
         EJECT
.MEND    MEND
         MACRO
&NAME    TSOLEAVE &SPLV=TSOLEN,&ISN=,&RETCODE=0
         GBLC  &R
         LCLB  &RTYPE
.*       TSOLEAVE MACRO                  BRUCE M. DANE
.*       LAST UPDATED:                  06 NOV 1973
.*       MACRO GENERATES RE-ENTRANT CODE
.*
&NAME    LR    1,&R.13 .                LOAD RETURN ADDRESS
         L     &R.13,4(0,&R.13) .       LOAD REGISTER POINTER
         AIF   ('&RETCODE' EQ '').FREE1
         AIF   ('&RETCODE'(1,1) NE '(').FREE1
         ST    &RETCODE(1),16(,&R.13) . SAVE RETURN CODE IN R15 PLACE
&RTYPE   SETB  1
.FREE1   ANOP
*        RETURN DYNAMIC SAVE AREA TO SYSTEM
         L     0,&SPLV .                LOAD SP/LEN TO FREE
         FREEMAIN R,LV=(0),A=(1) .      ISSUE FREEMAIN
.RETTEST AIF   (&RTYPE).R0
         AIF   ('&RETCODE' EQ '').RETEQ0 * MESSAGE, ASSUME ZERO
         AIF   (T'&RETCODE NE 'N').REGLD1 * RETURN NUMBER?
         AIF   (&RETCODE EQ 0).R0       * RETCODE=0
         AGO   .REGLA                   * LOAD ADDRESS ON RETCODE
.RETEQ0  MNOTE *,'*** WARNING *** RETCODE ASSUMED ZERO (0)'
         AGO   .R0
.REGLD1  L     &R.15,&RETCODE .         LOAD SAVED RETURN CODE
         AGO   .BR14
.REGLA   LA    &R.15,&RETCODE .         LOAD REQUESTED RETURN CODE
         AGO   .BR14
.R0      LM    14,12,12(13) .           RELOAD CALLERS' REGS
         AIF   (&RTYPE).R00
         XR    15,15 .                  CLEAR RETURN CODE
.R00     BR    14 .                     RETURN TO CALLER
         AGO   .ISNCHEK
.BR14    LM    0,12,20(13) .            LOAD SAVED REGS
         L     14,12(0,13) .            AND RETURN
         BR    14 .                     RETURN TO CALLER
.ISNCHEK AIF   ('&ISN' EQ '').MEND
         &ISN
.MEND    MEND
         MACRO
&X       CPPL  &Y,&DSECT=NO
***********************************************************************
*                                                                     *
*             COMMAND   PROCESSOR   PARAMETER   LIST                  *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&DSECT' NE 'NO').DSECT
CPPL     DS    0A .                     COMMAND PROC PARM LIST
         AGO   .COM
.DSECT   ANOP
CPPL     DSECT ,                        COMMAND PROC PARM LIST
.COM     ANOP
CPPLCBUF DC    A(0) .                   COMMAND BUFFER ADDR
CPPLUPT  DC    A(0) .                   USER PROF. TAB
CPPLPSCB DC    A(0) .                   PROT STEP CB
CPPLECT  DC    A(0) .                   ENV. CTL TABLE
CPPLLEN  EQU   *-CPPL .                 LENGTH
         SPACE 2
         MEND
         MACRO
&X       PPL   &Y,&DSECT=NO
***********************************************************************
*                                                                     *
*                  PARSE   PARAMETER   LIST                           *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&DSECT' NE 'NO').DSECT
PPL      DS    0A ,                     PARSE PARM LIST
         AGO   .COM
.DSECT   ANOP
PPL      DSECT ,                        PARSE PARM LIST
.COM     ANOP
PPLUPT   DC    A(0) .                   USER PROF. TAB
PPLECT   DC    A(0) .                   ENV. CTL TAB
PPLECB   DC    A(0) .                   ECB ADDRESS
PPLPCL   DC    A(0) .                   PARSE CTL LIST
PPLANS   DC    A(0) .                   ANSWER ADDRESS
PPLCBUF  DC    A(0) .                   COMMAND BUFFER
PPLUWA   DC    A(0) .                   USER WORK AREA
PPLRANS  DC    A(0) .                   RETURNED ANSWER ADDRESS
PPLLEN   EQU   *-PPL .                  LENGTH
         SPACE 2
         MEND
         MACRO
         IOPL     &DSECT=,                                  *HMD 05/78*
         AIF  ('&DSECT' EQ 'NO').NODSECT                    *HMD 05/78*
IOPL     DSECT                                              *HMD 05/78*
         AGO   .DSCT                                        *HMD 05/78*
.NODSECT ANOP                                               *HMD 05/78*
IOPL     DS    0A                                           *HMD 05/78*
.DSCT    ANOP                                               *HMD 05/78*
***********************************************************************
*    THE I/O SERVICE ROUTINE PARAMETER LIST (IOPL) IS A LIST OF       *
*    FULLWORD ADDRESSES PASSED BY THE INVOKER OF ANY I/O SERVICE      *
*    ROUTINE TO THE APPROPRIATE SERVICE ROUTINE VIA REGISTER ONE.     *
***********************************************************************
         SPACE
IOPLUPT  DS    A        PTR TO UPT
IOPLECT  DS    A        PTR TO ECT
IOPLECB  DS    A        PTR TO USER'S ECB
IOPLIOPB DS    A        PTR TO THE I/O SERVICE RTN PARM BLOCK
         MEND
         MACRO
         CSPL  &DSECT=,                                     @HMD78174
         AIF   ('&DSECT' EQ 'NO').DS0A                      @HMD78174
.* RELEASE 20 SUPPORT CODE -- 20035                         @HMD78174
CSPL     DSECT                                              @HMD78174
         AGO    .GEN                                        @HMD78174
.DS0A    ANOP                                               @HMD78174
CSPL     DS      0A           COMMAND SCAN PARAMETER LIST   @HMD78174
.GEN     ANOP
***********************************************************************
*    THE COMMAND SCAN PARAMETER LIST (CSPL) IS A LIST OF ADDRESSES    *
*    PASSED FROM THE INVOKER TO COMMAND SCAN VIA REGISTER 1           *
***********************************************************************
         SPACE
CSPLUPT  DS    A        PTR TO  UPT
CSPLECT  DS    A        PTR TO  ECT
CSPLECB  DS    A        PTR TO  CP'S ECB
CSPLFLG  DS    A        PTR TO  FLAG WORD WHICH IS OBTAINED & FREED
*                       BY CALLER. BIT 0 SET TO 0= SYNTAX CHECKING OF
*                       COMMAND NAME.
CSPLOA   DS    A        PTR TO OUTPUT AREA (CSOA DSECT)
CSPLCBUF DS    A        PTR TO COMMAND BUFFER
         MEND
         MACRO
&X       DAPL  &Y,&DSECT=NO
***********************************************************************
*                                                                     *
*            DYNAMIC   ALLOCATION   PARAMETER   LIST                  *
*                                                                     *
***********************************************************************
         SPACE 1
         AIF   ('&DSECT' NE 'NO').DSECT
DAPL     DS    0A .                     DAIR PARM LIST
         AGO   .COM
.DSECT   ANOP
DAPL     DSECT ,                        DAIR PARM LIST
.COM     ANOP
DAPLUPT  DC    A(0) .                   USER PROF. TAB
DAPLECT  DC    A(0) .                   ENV. CTL TAB
DAPLECB  DC    A(0) .                   ECB
DAPLPSCB DC    A(0) .                   PROT STEP CB
DAPLDAPB DC    A(0) .                   DAIR PARM BLOCK
DAPLLEN  EQU   *-DAPL .                 LENGTH
         SPACE 2
         MEND
         MACRO
&NAME    LUSE  &WHERE,&W1,&W2
         GBLB  &LUSED
         GBLC  &USENM(50),&USEW(25)
         LCLA  &A,&B,&C,&D,&E
         LCLC  &X1,&X2
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H .           DEFINE NAME
.NONAME  AIF   (N'&SYSLIST LE 15).OK1
         MNOTE 16,'OPERAND ERROR - TOO MANY OPERANDS, MACRO ABORTED'
         MEXIT
.OK1     AIF   (N'&SYSLIST LT 2).ERR
&A       SETA  1
&C       SETA  N'&SYSLIST
.OKX     AIF   ('&SYSLIST(&A)' NE '').INCR
         MNOTE 16,'OPERAND ERROR - NULL OPERAND'
         MEXIT
.INCR    AIF   (&A EQ &C).GEN
&A       SETA  &A+1
         AGO   .OKX
.GEN     AIF   (&C NE 2).RECURSE
&A       SETA  1
.FNULL   AIF   ('&USEW(&A)' EQ '').HNULL
&A       SETA  &A+1
         AIF   (&A LE 25).FNULL
         MNOTE 16,'LUSE USER ERROR - TOO MANY LUSE WITHOUT LDROP'
         MEXIT
.HNULL   ANOP
&D       SETA  (&A*2)-1
&E       SETA  K'&WHERE-8
&X1      SETC  '&WHERE'
         AIF   (&E LE 0).COMMON
         AIF   (&E LE 8).SETX2
&E       SETA  8
.SETX2   ANOP
&X2      SETC  '&WHERE'(9,&E)
.COMMON  ANOP
&USENM(&D)     SETC           '&X1'
&USENM(&D+1) SETC '&X2'
&USEW(&A) SETC '&W1'
&E       SETA  1
.MATCH   AIF   (&E GE &A).GENUSE
         AIF   ('&USEW(&E)' EQ '&USEW(&A)').MN0
&E       SETA  &E+1
         AGO   .MATCH
.MN0     MNOTE 0,'** WARNING **  REGISTER '
         MNOTE *,'&USEW(&E) PREVIOUSLY LUSED AS BASE FOR'
&D       SETA  (&E*2)-1
         MNOTE *,'&USENM(&D)&USENM(&D+1) - NEW USING CREATED'
&E       SETA  &E+1
         AGO   .MATCH
.GENUSE  USING &WHERE,&W1 .   GEN USING STMT
         AIF   (&LUSED).MEND
&LUSED   SETB  1
         SPACE 1
         MEXIT
.RECURSE ANOP
&B       SETA  2
.RCU     AIF   (&B GT &C).MEND
         LUSE  &WHERE&X1,&SYSLIST(&B)
&B       SETA  &B+1
&E       SETA  &E+4096
&X1      SETC  '+'.'&E'
         AGO   .RCU
.ERR     MNOTE 16,'OPERAND ERROR - NEED 2 OR MORE OPERANDS, MACRO EXIT'
.MEND    MEND
         MACRO
&NAME    LDROP &W1,&W2
         GBLB  &LUSED
         GBLC  &USENM(50),&USEW(25)
         LCLA  &A,&B,&C,&D,&E
         LCLB  &F
         LCLC  &X1,&X2
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H .                     NAME DEFINED
.NONAME  AIF   (&LUSED).CNTU
         MNOTE 8,'USER ERROR - LUSE HAS NEVER BEEN USED'
         MEXIT
.CNTU    ANOP
&C       SETA  N'&SYSLIST
         AIF   (&C GT 0).OK1
         MNOTE 4,'NO OPERAND(S) ON LDROP, MACRO IGNORED'
         MEXIT
.OK1     AIF   ('&W1' EQ '*').DROPALL
&A       SETA  1
.LOOP    AIF   (&A GT &C).MEND
&X1      SETC  '&SYSLIST(&A)'
&B       SETA  1
&F       SETB  0
.LL1     AIF   ('&USEW(&B)' EQ '&X1').DROPIT
         AIF   ('&USEW(&B)' EQ '').LL1A
&B       SETA  &B+1
         AIF   (&B LE 25).LL1
.LL1A    AIF   (&F).GETNEXT
         MNOTE 8,'USER ERROR - &SYSLIST(&A) NOT LUSED'
.GETNEXT ANOP
&A       SETA  &A+1
         AGO   .LOOP
.DROPIT  ANOP
&D       SETA  (&B*2)-1
         MNOTE *,'&USEW(&B) WAS BASE FOR &USENM(&D)&USENM(&D+1)'
.*       CLEAN UP USEW ARRAY FIRST
&E       SETA  &B                       SET POINTER
.CL1     AIF   (&E EQ 25).NULLAST
&USEW(&E) SETC '&USEW(&E+1)'
&E       SETA  &E+1
         AIF   ('&USEW(&E)' EQ '').CL2
         AGO   .CL1
.NULLAST ANOP
&USEW(25) SETC ''
.*       NOW - THE HARD PART, CLEAN UP USENM
.CL2     AIF   (&D GE 49).NULBOTH
&USENM(&D) SETC '&USENM(&D+2)'
&USENM(&D+1) SETC '&USENM(&D+3)'
&D       SETA  &D+2
         AIF   ('&USENM(&D)' EQ '').GOTO
         AGO   .CL2
.NULBOTH ANOP
&USENM(49) SETC ''
&USENM(50) SETC ''
.GOTO    AIF   (&F).LL1                 TRY AGAIN
         DROP  &SYSLIST(&A) .           GEN DROP STMT
&F       SETB  1                        NO MULTI-DROPS
         AGO   .LL1                     CLEAN ANY REMAINING ENTRIES
.DROPALL MNOTE *,'ALL KNOWN BASE REGISTERS BEING DROPPED'
&B       SETA  1
.DD1     AIF   ('&USEW(&B)' EQ '').DDONE
         MNOTE *,'&USEW(&B) WAS BASE FOR &USENM(&B*2-1)&USENM(&B*2)'
&B       SETA  &B+1
&F       SETB  1
         AGO   .DD1
.DDONE   AIF   (&F).DDTWO
         MNOTE 4,'** NO REGISTERS IN USE TO BE LDROP''ED **'
         MEXIT
.DDTWO   ANOP
&A       SETA  1
.CLEAR   AIF   (&A GT 25).MEND
         AIF   ('&USEW(&A)' EQ '').NODRP
         DROP  &USEW(&A) .                  GENERATE DROP STMT
.NODRP   ANOP
&USEW(&A) SETC ''
&B       SETA  (&A*2)-1
&USENM(&B) SETC ''
&USENM(&B+1) SETC ''
&A       SETA  &A+1
         AGO   .CLEAR
.MEND    MEND
.*.
.*$MACRO=INUSE      DATE=05/10/80       SOURCE=UCLA(JCJ)
.*  THIS IS AN COPY OF OACINUSE, UNDER A DIFFERENT NAME, AND WITH THE
.*       OACGBLS AND OACPRTPM REMOVED/INTEGRATED
.*
.*  THIS MACRO WILL LIST OUT THE USING TABLE WHICH IS MAINTAINED BY
.*       'USNGX' AND 'DROPX'.
.*.
         MACRO
         INUSE &DUMMY,&PRINT=
         GBLC  &USELAB(16),&USEREG(16)  PGM LABELS,REGISTERS USED
         LCLA  &UCNT                    USE INDEX
         LCLB  &GOTREG                  WHETHER WE FOUND REGS IN USE
         AIF   (T'&PRINT EQ 'O').GO#USE SKIP PUSH IF NOT NEEDED
         PUSH  PRINT
         PRINT &PRINT
.GO#USE  SPACE 1
         MNOTE *,'THE FOLLOWING REGISTER(S) ARE IN USE:'
         SPACE 1
.USELOOP ANOP                           USED REGS LOOP
&UCNT    SETA  &UCNT+1                  UP THE USE INDEX
         AIF   ('&USEREG(&UCNT)' EQ '').CHKEND THIS ENTRY IN USE?
         MNOTE *,'       &USELAB(&UCNT),&USEREG(&UCNT)'
&GOTREG  SETB  1                        SAY WE FOUND SOMETHING
.CHKEND  AIF   (&UCNT LT 16).USELOOP    CHECK FOR END OF ARRAY
         AIF   (&GOTREG).FINI           LEAVE IF WE HAD REGS IN USE
         MNOTE *,'       *** NONE ****'
.FINI    SPACE 2
         AIF   (T'&PRINT EQ 'O').EXIT   SKIP POP IF NOT NEEDED
         POP   PRINT
.EXIT    MEND
         MACRO
         REGS
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        FIXED POINT REGISTERS                                        *
*                                                                     *
***********************************************************************
         SPACE 1
R0       EQU   0        *USED BY O.S.
R1       EQU   1        *USED BY O.S. // ADDRESS OF PARAMETER LIST
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13       *USED BY O.S. // SAVE-AREA ADDRESS
R14      EQU   14       *USED BY O.S. // RETURN ADDRESS
R15      EQU   15       *USED BY O.S. // ENTRY-PT ADDR, RETURN CODE
         SPACE 1
***********************************************************************
*                                                                     *
*        FLOATING POINT REGISTERS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
F0       EQU   0
F2       EQU   2
F4       EQU   4
F6       EQU   6
         MEND
DSP      TITLE 'DISPLAY AVAILABLE SPACE ON DISK DRIVE'      *HMD 05/83*
         PUNCH '  ORDER DSPACE(P) '    MAKE DUMPS EASIER        GP09244
***********************************************************************
*                                                                     *
*      PROGRAM TO PRINTOUT AVAILABLE SPACE ON A DISK DRIVE            *
*      USES LSPACE (SVC 78)  FUNCTION                                 *
*                                                                     *
*      ALSO DETERMINES IF PACK HAS INDEXED VTOC                       *
*      USES MVS/XA COMPATIBLE UCB LOOKUP ROUTINE            *HMD 05/83*
*                                                                     *
*      FIXED CODE TO RUN UNDER MVS 3.8 SYSTEM. ADDED SUPPORT FOR      *
*      DEVICE TYPE DISPLAY. MADE CODE SYSTEM INDEPENDENT AT SOURCE    *
*      AND LOAD LEVEL. DID NOT CONVERT TO NEW FORM OF LSPACE, DUE     *
*      TO INABILITY TO TEST.                Sep 2009.  G. POSTPISCHIL *
*                                                                     *
***********************************************************************
DSPACE   CSECT ,                                            *HMD 05/83*
         TSOENTER REGS=YES,PL=(IO,PARSE),WORK=WORKLEN       *HMD 05/83*
         TM    0(R2),X'80'             RUN AS PROGRAM?      *HMD 05/83*
         BO    DONE1                   YES, GET OUT FAST    *HMD 05/83*
         XC    TSOECB,TSOECB           ZERO ECB             *HMD 05/83*
         MVC   PPLPCL,ADDPCL           GET ADD OF PCL
         CALLTSSR EP=IKJPARS,MF=(E,PPL)  CALL IKJPARS       *HMD 05/83*
         LTR   R15,R15                 TEST  RETURN CODE
         BNZ   ERROR                   ERROR GO TELL USER
         XC    VOLLEN,VOLLEN           CLEAR VOLUME LENGTH  *HMD 05/83*
         SLR   R2,R2                   CLEAR RETURN REGISTR *HMD 05/83*
         L     R6,PPLRANS              GET ADDRESS OF ANSWER AREA
         LUSE  IKJPARMD,R6             ADDRESS THE PDE      *HMD 05/83*
         LA    R6,VOL                  PDL  DSECT           *HMD 05/83*
         ST    R6,PDLENTRY             SAVE ENTRY ADDRESS   *HMD 05/83*
         LDROP R6                      DROP REGISTER NOW    *HMD 05/83*
         TM    6(R6),X'80'             IS IT REQUST FOR SPECIFIC
*                                      VOLUME INDEX         *HMD 05/83*
         BZ    GETCVT                  SKIP
         INUSE ,                       CHECK REGISTERS      *HMD 05/83*
         EJECT                                              *HMD 05/83*
**                                                          *HMD 05/83*
** PROCESS VOLSER PARAMETER                                 *HMD 05/83*
**                                                          *HMD 05/83*
GETVOL   MVC   VOLSER,BLANKS     CLEAR VOLSER FIELD QUICK   *HMD 05/83*
         L     R7,0(R6)          GET ADDRESS OF VOLUME
         LH    R8,4(R6)          GET LENGTH OF VOLUME
         STH   R8,VOLLEN         SAVE LENGTH OF VOLUME      *HMD 05/83*
         BCTR  R8,R0             MACHINE LENGTH
         LA    R9,VOLSER         ADDRESS OF MESSAGE
         EX    R8,EXMVC          MOVE VOLUME IN
GETCVT   L     R3,CVTPTR         LOAD CVT ADDRESS           *HMD 05/83*
         LUSE  CVT,R3                                       *HMD 05/83*
         SR    R0,R0         PRESET FOR MVS                     GP09244
         TM    CVTDCB,X'80'  X/A, ESA, OR LATER ?               GP09244
         BZ    DONEVER             NO                           GP09244
         LA    R15,GOHIGH                                       GP09244
         O     R15,=X'80000000'                                 GP09244
         DC    X'0B0F'       BSM 0,15 - AM 31                   GP09244
GOHIGH   LA    R0,2          SET FOR ESA AND LATER              GP09244
         TM    CVTDCB,X'93'  CHECK OS BITS FOR MVS/XA SYSTEM    GP09244
         BNO   DONEVER       NOT XA SO DO MSP/EXA               GP09244
         LA    R0,1          SET FOR XA                         GP09244
DONEVER  STC   R0,SYSLVL          SET SYSTEM LEVEL              GP09244
         SPACE 1                                            *HMD 05/83*
         XC    ADDRUCB,ADDRUCB  CLEAR UCB ADDRESS           *HMD 05/83*
*                               INDICATE DASD DEVICE CLASS  *HMD 05/83*
         MVI   FLAG,X'00'       CLEAR FLAG BYTE             *HMD 05/83*
UCBLOOP  L     R1,ADDRUCB       LOAD LAST UCB ADDRESS           GP09244
         L     R15,=A(SUBUCBLK)   UCB LOOKUP                    GP09244
         BALR  R14,R15          GET NEXT UCB                    GP09244
         ST    R1,ADDRUCB       REMEMBER CURRENT UCB            GP09244
         LTR   R15,R15                                      *HMD 05/83*
         BNZ   UCBEND           END OF UCBS                 *HMD 05/83*
         L     R7,ADDRUCB       GET UCB ADDRESS             *HMD 05/83*
         LUSE  UCBOB,R7                                     *HMD 05/83*
         CLI   UCBID,UCBSTND    IS UCB ADDRESS VALID        *HMD 05/83*
         BNE   UCBLOOP          NO
         TM    UCBSTAT,UCBONLI  IS UCB ONLINE?              *HMD 05/83*
         BNO   UCBLOOP          NO  SKIP                    *HMD 05/83*
         TM    UCBSTAT,UCBCHGS  CHANGING STATUS?            *HMD 05/83*
         BO    UCBLOOP          YES SKIP
         LH    R6,VOLLEN        LOAD LENGTH OF PARM         *HMD 05/83*
         LTR   R6,R6            TEST IF VOLUME PRESENT      *HMD 05/83*
         BZ    ALLVOLS          NO, PROCESS ALL VOLUMES     *HMD 05/83*
         TM    UCBTBYT3,UCB3DACC+UCB3TAPE  SERIAL ALLOWED?      GP09244
         BNM   UCBLOOP          NO;IGNORE                       GP09244
         BCTR  R6,R0            BUMP DOWN FOR EX            *HMD 05/83*
         EX    R6,CLCVOL        COMPARE PARTIAL VOLSER      *HMD 05/83*
         BNE   UCBLOOP          NOT EQUAL - SKIP                GP09244
         CLI   UCBTBYT3,UCB3DACC  DASD VOLUME ?                 GP09244
         BE    ALLVOLS          YES                             GP09244
         MVC   WORKAREA(NDLEN),NOTDAA       MOVE PATTERN        GP09244
         MVC   WORKAREA+29(6),VOLSER        ADD SERIAL TO MSG   GP09244
         LA    R1,WORKAREA                                      GP09244
         MVC   OLD,=F'1'                                        GP09244
         ST    R1,OLD+4                                         GP09244
         XC    TSOECB,TSOECB                                    GP09244
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),      GP09244*
               MF=(E,IOPL)                                      GP09244
         MVI   FLAG,X'FF'       INDICATE UCB FOUND              GP09244
         B     UCBLOOP          NO; IGNORE                      GP09244
ALLVOLS  CLI   UCBTBYT3,UCB3DACC  DASD VOLUME ?                 GP09244
         BNE   UCBLOOP          NO; IGNORE                      GP09244
         CLI   UCBVOLI,C' '       PRINTABLE SERIAL ?            GP09244
         BNH   UCBLOOP            NO; IGNORE                    GP09244
         MVC   UNIT,UCBNAME     MOVE IN NAME                *HMD 05/83*
         MVC   VOLSER,UCBVOLI   MOVE IN VOLSER NAME         *HMD 05/83*
         LR    R0,R7            SAVE UCB ADDRESS            *HMD 05/83*
         LA    R1,WORKA         POINT TO WORK AREA          *HMD 05/83*
         SVC   78               ISSUE LSPACE SVC            *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
         MVC   OUTMESS,VOLMESS
         L     R1,CVTPTR     GET CVT BACK                       GP09244
         TM    CVTDCB-CVTMAP(R1),X'80' X/A OR LATER ?           GP09244
*TEST*   BZ    MVSUNIT       NO; MVS, SVS, OR ?                 GP09244
         TM    CVTDCB-CVTMAP(R1),X'93' X/A ?                    GP09244
*TEST*   BO    MVSUNIT       YES; USE UNIT NAME                 GP09244
         MVC   OUTUNIT,DEVMESS    SAME LENGTH AS UNITMESS       GP09244
         UNPK  OUTUNIT+4(5),UCBCHAN(3)      UNPACK              GP09244
         TR    OUTUNIT+4(4),HEXTRTAB        MAKE PRINTABLE      GP09244
         MVI   OUTUNIT+4+4,C' '             CLEAR CRUD          GP09244
         B     COMUNIT       REJOIN COMMON                      GP09244
MVSUNIT  MVC   OUTUNIT,UNITMESS                                 GP09244
COMUNIT  MVC   OUTTYPE,TYPEMESS                                 GP09244
         LA    R1,DVCTYPMK   GET DEVICE MASK                    GP09244
         N     R1,UCBTBYT1   ISOLATE DASD SUBTYPE               GP09244
         MH    R1,=AL2(L'TYPETAB)  CONVERT INDEX TO OFFSET      GP09244
         LA    R1,TYPETAB(R1)     POINT TO ENTRY                GP09244
         MVC   OUTTYPE+5(6),0(R1)  MOVE TYPE TO MESSAGE         GP09244
         MVC   OUTMESS+4(6),VOLSER
         MVC   OUTMESS+16(3),UNIT
         SPACE 2                                                GP09244
         MVC   VTSTAT,BLANKS                                    GP09244
         MVI   VTSTAT,C'?'             SHOW FAILED              GP09244
         L     R14,PATCAM         BUILD                         GP09244
         LA    R15,FMT4DSN          CAMLST                      GP09244
         LA    R0,VOLSER              FOR                       GP09244
         LA    R1,WORKAREA              FORMAT 4 DSCB           GP09244
         STM   R14,R1,CAMLST              OBTAIN                GP09244
         OBTAIN CAMLST            GET DSCB 4                    GP09244
         LA    R3,WORKAREA        POINT TO RETURN               GP09244
         USING DS4IDFMT,R3        DECLARE IT                    GP09244
         CLI   DS4IDFMT,C'4'      WAS IT READ IN?               GP09244
         BNE   SKIPFMT4           NO                            GP09244
         MVC   VTSTAT(3),=C'dIx'                                GP09244
         TM    DS4VTOCI,X'40' DS4DVTOC  DISABLED INDEX ?        GP09244
         BNZ   SKIPFMT4       YES; TOO BAD - RETURN AS DOS      GP09244
         TM    DS4VTOCI,DS4IVTOC  INDEXED?                      GP09244
         BNZ   *+10          YES                                GP09244
         MVC   VTSTAT+1(2),=C'OS'                               GP09244
         TM    DS4VTOCI,DS4DIRF  VTOC UPDATE INTERRUPTED ?      GP09244
         BZ    NOTDIRF       NO                                 GP09244
         MVI   VTSTAT,C'b'   bIx OR bOS                         GP09244
         TM    DS4VTOCI,DS4DICVT  VTOC UPDATE FIXED ?           GP09244
         BZ    SKIPFMT4       NOT FIXED; MAJOR ERROR            GP09244
NOTDIRF  MVC   VTSTAT(3),=C'Ix '                                GP09244
         TM    DS4VTOCI,DS4DOSBT+DS4IVTOC  GOOD INDEXED VTOC?   GP09244
         BO    SKIPFMT4       YES                               GP09244
         MVC   VTSTAT(3),=C'DOS'   SET DOS CODE                 GP09244
         TM    DS4VTOCI,DS4DSTKP  STACKED DOS ?                 GP09244
         BNZ   SKIPFMT4       YES; TOO BAD - RETURN AS DOS      GP09244
         TM    DS4VTOCI,DS4DOSBT  DOS ONLY ?                    GP09244
         BNZ   SKIPFMT4                                         GP09244
         MVC   VTSTAT(3),=C'OS '                                GP09244
         DROP  R3
         SPACE 2                                            *HMD 05/83*
SKIPFMT4 LA    R1,OUTMESSL          LOAD MESSAGE LENGTH     *HMD 05/83*
         SLL   R1,16                SHIFT TO HIGH ORDER     *HMD 05/83*
         ST    R1,OUTMESSA          SAVE IN LINE DESCRIPTOR *HMD 05/83*
         XC    TSOECB,TSOECB        CLEAR ECB               *HMD 05/83*
         PUTLINE PARM=PTPB,OUTPUT=(OUTMESSA,TERM,SINGLE,DATA),         X
               MF=(E,IOPL)                                  *HMD 05/83*
         MVI   FLAG,X'FF'           INDICATE UCB DISPLAYED  *HMD 05/83*
         SPACE 2                                            *HMD 05/83*
UCBSKP   B     UCBLOOP     CONTINUE SEARCHING UCB TABLE
         SPACE 1                                            *HMD 05/83*
UCBEND   CLI   SYSLVL,0      MVS ?                              GP09244
         BE    UCBENDS       YES                                GP09244
         LA    R15,UCBENDS                                      GP09244
         DC    X'0B0F'       BSM 0,15 AMODE 24                  GP09244
UCBENDS  CLI   FLAG,X'FF'   DID WE FIND A UCB?              *HMD 05/83*
         BE    SECVOL       YES - CHECK FOR ANOTHER PREFIX  *HMD 05/83*
**                                                          *HMD 05/83*
** PROCESS TWO SEGMENT PUTLINE MESSAGE                      *HMD 05/83*
**                                                          *HMD 05/83*
         MVC   OLD2,=F'2'   SAVE NUMBER OF MESSAGE SEGS     *HMD 05/83*
         MVC   SEG1(NVOLEN),NOVOLA                          *HMD 05/83*
*                           MOVE IN FIRST SEGMENT           *HMD 05/83*
         LA    R1,SEG1      GET MESSAGE ADDRESS             *HMD 05/83*
         ST    R1,OLD2+4    SAVE IN O.L.D. NUMBER 2         *HMD 05/83*
         LA    R1,SEG2      POINT TO MESSAGE SEGMENT        *HMD 05/83*
         ST    R1,OLD2+8    SAVE IN O.L.D. NUMBER 2         *HMD 05/83*
         LH    R2,VOLLEN    GET VOLUME PARM LENGTH          *HMD 05/83*
         LTR   R2,R2        DID WE HAVE A PARAMETER         *HMD 05/83*
         BZ    ENDOPUT      NO, JUST GIVE RETURN CODE       *HMD 05/83*
         BCTR  R2,R0        DECREMENT FOR EXECUTE           *HMD 05/83*
         EX    R2,MOVEVOL   MOVE VOLSER SEGMENT TO AREA     *HMD 05/83*
         LA    R1,SEG2VOL   LOAD BEGINNING OF FIELD         *HMD 05/83*
         LA    R1,1(R1,R2)  POINT TO BEGINNING OF FIELD         GP09244
         MVC   0(L'NOVOLE,R1),NOVOLE                        *HMD 05/83*
*                           MOVE IN SECOND PART OF SEGMENT  *HMD 05/83*
         LA    R1,L'NOVOLE(,R1)                             *HMD 05/83*
*                           POINT TO END OF SEGMENT         *HMD 05/83*
         LA    R2,SEG2      GET SEGMENT 2 ADDRESS           *HMD 05/83*
         SR    R1,R2        GET SEGMENT LENGTH              *HMD 05/83*
         STH   R1,SEG2      SAVE SEGMENT LENGTH             *HMD 05/83*
         LA    R1,SEG1LEN   LOAD SEGMENT ONE LENGTH         *HMD 05/83*
         STH   R1,SEG2+2    SAVE OFFSET IN SEGMENT          *HMD 05/83*
         XC    TSOECB,TSOECB                                *HMD 05/83*
*                           CLEAR EVENT CNTL BLOCK          *HMD 05/83*
         PUTLINE PARM=PTPB,OUTPUT=(OLD2,TERM,SINGLE,INFOR), *HMD 05/83*X
               MF=(E,IOPL)                                  *HMD 05/83*
ENDOPUT  LA    R2,8         GET RETURN CODE                 *HMD 05/83*
         SPACE 2                                            *HMD 05/83*
         INUSE ,            CHECK REGISTER USAGE            *HMD 05/83*
         EJECT                                              *HMD 05/83*
*************************************************************HMD 05/83*
**  PROCESS NEXT PARAMETER GIVEN ON INVOCATION OF COMMAND   *HMD 05/83*
*************************************************************HMD 05/83*
SECVOL   L     R6,PDLENTRY
         CLC   =X'FF000000',8(R6)                           *HMD 05/83*
*                             CHAIN WORD PRESENT            *HMD 05/83*
         BE    DONE           NO, END OF LIST               *HMD 05/83*
         L     R6,8(,R6)      GET CHAIN WORD                *HMD 05/83*
         ST    R6,PDLENTRY    SAVE ADDRESS OF PARM          *HMD 05/83*
         B     GETVOL         YES, END OF JOB               *HMD 05/83*
         SPACE 2                                            *HMD 05/83*
DONE     IKJRLSA   PPLRANS       FREE PARSE AREA            *HMD 05/83*
         SLR   R2,R2          CLEAR RETURN CODE             *HMD 05/83*
DONE1    TSOLEAVE ISN=LTORG,RETCODE=(2)                     *HMD 05/83*
         EJECT                                              *HMD 05/83*
*************************************************************HMD 05/83*
**  C O N S T A N T S   A N D   V A R I A B L E S           *HMD 05/83*
*************************************************************HMD 05/83*
EXMVC    MVC   0(0,9),0(7)        << EXECUTED >>            *HMD 05/83*
CLCVOL   CLC   VOLSER(0),UCBVOLI  << EXECUTED >>            *HMD 05/83*
MOVEVOL  MVC   SEG2VOL(0),VOLSER  << EXECUTED >>            *HMD 05/83*
ADDPCL   DC    V(PARSEPCL)        ADDRESS OF PCL            *HMD 05/83*
BLANKS   DC    CL8' '             FOR CLEARING AREAS        *HMD 05/83*
TRTAB    DC    C'0123456789ABCDEF'                              GP09244
HEXTRTAB EQU   TRTAB-C'0',256,C'C'                              GP09244
*************************************************************HMD 05/83*
**  E R R O R    R O U T I N E S                            *HMD 05/83*
*************************************************************HMD 05/83*
         SPACE  2                                           *HMD 05/83*
ERROR    LA    R1,ERRMESSA                                  *HMD 05/83*
         MVC   OLD,=F'1'                                    *HMD 05/83*
         ST    R1,OLD+4                                     *HMD 05/83*
         XC    TSOECB,TSOECB                                *HMD 05/83*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 05/83*X
               MF=(E,IOPL)                                  *HMD 05/83*
         LA    R2,20                                        *HMD 05/83*
         B     DONE1                                        *HMD 05/83*
         SPACE 2                                            *HMD 05/83*
NOTDAA   DC    AL2(NDLEN),AL2(0)                            *HMD 05/83*
NOTDA    DC    C'HMD0235I DSPACE - VOLUME xxxxxx NOT DASDI   '  GP09244
NDLEN    EQU   *-NOTDAA                                     *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
ERRMESSA DC    AL2(EMLEN),AL2(0)                            *HMD 05/83*
ERRMESS  DC    C'HMD0236I DSPACE - PARSE FAILED'            *HMD 05/83*
EMLEN    EQU   *-ERRMESSA                                   *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
VOLMESS  DC    C'Vol VVVVVV '
UNITMESS DC    C'Unit UUU '
DEVMESS  DC    C'Dev xxxx '                                     GP09244
TYPEMESS DC    C'Type ?dasd? '                                  GP09244
         SPACE 1
TYPETAB  DC    CL6' dasd '                                      GP09244
         DC    CL6'2311  '        1                             GP09244
         DC    CL6'2301  '        2                             GP09244
         DC    CL6'2303  '        3                             GP09244
         DC    CL6'9345  '        4    WAS 2302                 GP09244
         DC    CL6'2321  '        5                             GP09244
         DC    CL6'2305A '        6                             GP09244
         DC    CL6'2305B '        7                             GP09244
         DC    CL6'2314  '        8                             GP09244
         DC    CL6'3330  '        9                             GP09244
         DC    CL6'3340  '       10                             GP09244
         DC    CL6'3350  '       11                             GP09244
         DC    CL6'3375  '       12                             GP09244
         DC    CL6'3330-1'       13                             GP09244
         DC    CL6'3380  '       14                             GP09244
         DC    CL6'3390  '       15                             GP09244
         SPACE 1
PATCAM   CAMLST SEARCH,1-1,2-2,3-3   DSN,VOL,WORK               GP09244
         ORG   PATCAM+4           NEED FLAGS ONLY               GP09244
FMT4DSN  DC    44X'04'            FORMAT 4 KEY                  GP09244
         SPACE 1                                            *HMD 05/83*
NOVOLA   DC    AL2(NVOLEN),AL2(0)                           *HMD 05/83*
NOVOL    DC    C'HMD0237I VOLUME(S) WITH PREFIX '           *HMD 05/83*
NVOLEN   EQU   *-NOVOLA                                     *HMD 05/83*
         SPACE  1                                           *HMD 05/83*
NOVOLE   DC    C' NOT FOUND'                                    GP09244
         EJECT                                              *HMD 05/83*
PARSEPCL IKJPARM  DSECT=IKJPARMD
         SPACE 2                                            *HMD 05/83*
VOL      IKJIDENT 'VOLUME PREFIX',UPPERCASE,MAXLNTH=6,FIRST=ALPHANUM,  X
               OTHER=ALPHANUM,LIST                          *HMD 05/83*
         IKJENDP
         EJECT                                              *HMD 05/83*
TSODSECT DSECT          CONTINUE DUMMY SECTION              *HMD 05/83*
*        WORK AREA FOR  DSPACE CP
WORK     DS   0F        NAME FOR USING
VOLLEN   DS   H                                             *HMD 05/83*
ECB      DS   F
PDLENTRY DS   F         ADDRESS OF CURRENT PDL              *HMD 05/83*
PTPB     PUTLINE MF=L                                       *HMD 05/83*
OLD      DS   2F                                            *HMD 05/83*
OLD2     DS   F         NUMBER OF SEGMENTS                  *HMD 05/83*
         DS   F         POINTER TO FIRST  SEGMENT           *HMD 05/83*
         DS   F         POINTER TO SECOND SEGMENT           *HMD 05/83*
         DS   F         POINTER TO THIRD  SEGMENT           *HMD 05/83*
FLAG     DS   X         FLAG TO INDICATE IF UCB DISPLAYED   *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
SEG1     DS    F         SEGMENT NUMBER ONE                 *HMD 05/83*
SEG1TXT  DC    C'HMD0237I VOLUME(S) WITH PREFIX '           *HMD 05/83*
SEG1LEN  EQU   *-SEG1TXT                                    *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
SEG2     DS    F         SEGMENT TWO LENGTH AND OFFSET      *HMD 05/83*
SEG2VOL  DS    CL6       SEGMENT TWO VOLSER PREFIX          *HMD 05/83*
SEG2TXT  DC    C'NOT FOUND'                                 *HMD 05/83*
SEG2VLN  EQU   *-SEG2VOL                                    *HMD 05/83*
SEG2LEN  EQU   *-SEG2                                       *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
OUTMESSA DS   F         LENGTH OF MESSAGE AREA              *HMD 05/83*
OUTMESS  DS   CL(L'VOLMESS)                                     GP09244
OUTUNIT  DS   CL(L'UNITMESS)                                    GP09244
OUTTYPE  DS   CL(L'TYPEMESS)                                    GP09244
VTSTAT   DS   CL5       INDEXED VTOC STATUS                     GP09244
WORKA    DS   CL30      AREA FOR LSPACE RETURN
OUTMESSL EQU  *-OUTMESSA                                    *HMD 05/83*
         SPACE 1                                            *HMD 05/83*
VOLSER   DS   CL6       VOLSER
UNIT     DS   CL3       UNIT
         SPACE 1
SYSLVL   DS    X             0-MVS  1-XA  2-ESA+                GP09244
         SPACE 1                                            *HMD 05/83*
*  UCB LOOKUP WORK AREA AND PARM LIST VARIABLES             *HMD 05/83*
ADDRUCB  DS   A         UCB ADDRESS (FULL WORD IN LENGTH)   *HMD 05/83*
         SPACE 1
CAMLST   DS    F,3A          SEARCH LIST                        GP09244
WORKAREA DS   20D            OBTAIN WORK AREA ++                GP09244
         SPACE 1                                            *HMD 05/83*
WORKLEN  EQU  *-WORK    LENGTH OF WORK AREA                 *HMD 05/83*
         EJECT                                              *HMD 05/83*
         PRINT NOGEN                                            GP09244
         CVT  LIST=YES,DSECT=YES                            *HMD 05/83*
         SPACE 1
         IEFUCBOB LIST=YES                                  *HMD 05/83*
         SPACE 1
         IHADVCT ,                                              GP09244
         SPACE 1
         IECSDSL1 4          FORMAT 4 DSCB MAPPING              GP09244
         TITLE 'S U B U C B L K  ***  LOOP THROUGH UCBS'
DSPACE   CSECT ,                                                GP09244
***********************************************************************
**                                                                   **
**   SUBROUTINE SUBUCBLK LOOPS THROUGH UCBS.                         **
**   INPUT:   R1=0 RETURNS FIRST UCB     R1=@ucb  RETURNS NEXT UCB.  **
**   RETURN:  R1=0,R15=4  END OF LIST    R1=@UCB,R15=0  FOUND UCB    **
**            R1=0,R15=16   INVALID R1 PASSED                        **
**                                                                   **
**   NOTE THAT THE CODE WILL USE THE APPROPRIATE METHOD DEPENDING    **
**   ON THE OPERATING SYSTEM.                                        **
**                                                                   **
**   XA AND ESA CODE ADAPTED FROM MODS TO SHOWDS BY GREG PRICE       **
**   CALLER MUST BE IN AMODE 31 FOR MVS SUCCESSOR SYSTEMS.           **
**                                   AUTHOR: G. POSTPISCHIL          **
***********************************************************************
**
         SPACE 1
         DROP  ,                                         NEW ON GP09198
SUBUCBLK B     BEGIN-SUBUCBLK(,R15)
         DC    AL1(17),CL17'SUBUCBLK &SYSDATE'
BEGIN    STM   R14,R12,12(R13)
         LR    R12,R15       SET NEW BASE
         USING SUBUCBLK,R12
         L     R3,CVTPTR     GET CVT
         USING CVTMAP,R3
         LR    R2,R1         SAVE USER'S REQUEST
         TM    CVTDCB,X'80'  X/A, ESA, OR LATER ?
         BZ    MVS370              NOT XA SO DO OS/370 UCB LOOK UP
         TM    CVTDCB,X'93'        CHECK OS BITS FOR MVS/XA SYSTEM
         BNO   MSPEXA              NOT XA SO DO MSP/EXA UCB LOOK UP
         ICM   R1,15,1252(R3)      FIRST UCB
         B     *+8                 BYPASS CHAIN JUMP
UCBLOOPX ICM   R1,15,8(R1)         POINT TO NEXT UCB            GP09131
         BZ    LASTEXIT            END OF CHAIN REACHED
         LTR   R2,R2         RESTART REQUEST ?
         BZ    GOODEXIT
         CR    R1,R2         HIT RESTART ?
         BNE   UCBLOOPX      NO; TRY AGAIN
         SR    R2,R2         RETURN NEXT ONE
         B     UCBLOOPX        AND FIND IT
         SPACE 1
MSPEXA   L     R15,X'7C'(,R3)      IOS COUMMICATION AREA
         L     R15,X'184'(,R15)    UCB LOOK-UP TABLE
         B     *+8                 BYPASS INCREMENT
UCBLOOPE LA    R15,4(,R15)         POINT TO NEXT UCB POINTER
         ICM   R1,15,0(R15)        POINT TO UCB                 GP09131
         BZ    UCBLOOPE            NULL, IGNORE IT
         BM    LASTEXIT            END OF POINTER LIST
         LTR   R2,R2         RESTART REQUEST ?
         BZ    GOODEXIT
         CR    R1,R2         HIT RESTART ?
         BNE   UCBLOOPE      NO; TRY AGAIN
         SR    R2,R2         RETURN NEXT ONE
         B     UCBLOOPE        AND FIND IT
         SPACE 1
MVS370   L     R15,CVTILK2         UCB HALFWORD ADDRESS TABLE
         B     *+8                 BYPASS INCREMENT
UCBLOOPM LA    R15,2(,R15)         POINT TO NEXT UCB POINTER
         LH    R1,0(,R15)          POINT TO UCB
         N     R1,=X'0000FFFF'     16 BIT ADDRESS
         BZ    UCBLOOPM            NULL, IGNORE IT
         C     R1,=X'0000FFFF'     LAST ENTRY ?
         BE    LASTEXIT            END OF POINTER LIST
         LTR   R2,R2         RESTART REQUEST ?
         BZ    GOODEXIT
         CR    R1,R2         HIT RESTART ?
         BNE   UCBLOOPM      NO; TRY AGAIN
         SR    R2,R2         RETURN NEXT ONE
         B     UCBLOOPM        AND FIND IT
         SPACE 1
FAILEXIT LA    R15,16        BOOBOO
         B     ZEROADDR
LASTEXIT LA    R15,4         SET END-LIST FLAG
ZEROADDR SR    R1,R1         NO MORE UCBS
         B     PGMEXIT
GOODEXIT SR    R15,R15       UCB IN R1
PGMEXIT  LM    R2,R12,28(R13)  RELOAD SOME REGISTERS
         L     R14,12(,R13)  RELOAD RETURN ADDRESS
         BR    R14           RETURN
         LTORG ,
         END  DSPACE
//
)F FUNCTION -
   DSPACE displays the free space available on all, selected (prefix)
          or specific volumes, or a parenthesized list of prefixes
          and serials).
)X SYNTAX -
   DSPACE vol-ser-prefix
   DSPACE (serial prefix prefix serial ...)

   REQUIRED - none
   DEFAULTS - none (all online disk volumes are processed)
   NOTE: free space information is reported in the following format:
              cylinders,tracks,extents/max-cyl,max-trk
         Where:
         CYLINDERS - total number of full cylinders available.
         TRACKS    - total number of tracks available,excluding
                     cylinders counted above.
         EXTENTS   - number of extents of free space.
         MAX-CYL   - maximum single full cylinder space available.
         MAX-TRK   - maximum single track extent available, not included
                     in MAX-CYL.
   NOTE: VTOCI status information is reported as follows:
         dIx       - Indexed VTOC, disabled
         bIx       - Indexed VTOC, update interrupted, unrepaired
         Ix        - Indexed VTOC
         bOS       - OS VTOC, update interrupted, unrepaired
         OS        - OS VTOC
         DOS       - VTOC without valid FMT5 space information
)O OPERANDS -
))VOL-SER-prefix -The volume identification prefix (full or partial
                  volume serial numbers) of the disk(s) to be reported
                  on. It can be a list, enclosed in parens.  Each
                  vol-ser-prefix can be up to six characters in length.
