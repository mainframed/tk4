REMKERM  TITLE 'R E M K E R M  ***  REMOTE <=> LOCAL KERMIT LINK'
***********************************************************************
*     THIS PROGRAM IS LOSELY BASED ON PROGRAM SIMTERM, WRITTEN BY     *
*     ELLIS HOLMAN (IBM), AS DISTRIBUTED ON THE CBT MODS TAPE, ON     *
*     FILE 142.                                                       *
*                                                                     *
*     OUR KERMIT CURRENTLY SUPPORTS ONLY NTO (IBM 3767 CONVERTED      *
*     TTYS, ETC.) MODE, HENCE THE CRT RELATED CODE WAS MODIFIED OR    *
*     DELETED.                                                        *
*                                                                     *
*     LOCAL MACROS AND STUFF WERE ADDED TO FIT LOCAL PREJUDICES.      *
*                                               G.P.             92108
*                                                                     *
*             MODULE NAME IS REMKERM                                  *
*                                                                     *
*             FUNCTION:                                               *
*                ALLOWS ACCESS TO KERMIT APPLICATION ON ANOTHER       *
*                HOST CONCURRENTLY WITH KERMIT ON THE CURRENT HOST;   *
*                RTHIS SUPPORTS FILE TRANSFER, ETC.                   *
*                                                                     *
*  DEPENDENCIES:                                                      *
*    1) TABLE OF ACBS, CALLED APPLTAB, IS USED FOR VIRTUAL TERMINALS. *
*       FIRST FOUR BYTES OF APPLTAB INDICATE THE NUMBER OF ENTRIES    *
*       (AVAILABLE ACB'S).  THIS MUST MATCH THE NUMBER OF ACB NAMES   *
*       IN THE ACB NAME TABLE.                                        *
*    2) PARMS PASSED TO THE PROGRAM IN THE FORM OF:                   *
*          REMKERM APPL(APPLNAME)                                     *
*       SPECIFY THE APPL TO WHICH A SESSION WILL ATTEMPT              *
*       TO BIND TO.  THIS NAME IS MOVED INTO STORAGE AT               *
*       LABEL VIRTLUNM.
*                                                                     *
*   MODIFICATION HISTORY:                                             *
*    4/07/92 - NEWLY CONVERTED FROM SIMTERM                G.Y.P.     *
***********************************************************************
         SPACE 1                                                 92108
         MACRO ,                                                 92108
&NM      XHEAD &SAVE=,&EXH=NO,&RPL=NO,&LTORG=NO,&RENT=4*18,&MODE=,     *
               &SET=                                             92108
         GBLC  &X@SAVE,&X@EXIT,&X@RENT                           92108
         LCLC  &SA                                               92108
         AIF   ('&X@SAVE' EQ '').OLDSAVE                         92108
&X@SAVE  DC    18A(0)        PRIOR XHEAD SAVE AREA               92108
&X@SAVE  SETC  ''                                                92108
.OLDSAVE AIF   ('&LTORG' EQ 'NO').NOLIT                          92108
         LTORG ,                                                 92108
.NOLIT   DROP  ,                                                 92108
&X@EXIT  SETC  '&NM'         EXIT NAME                           92108
&X@RENT  SETC  ''                                                92108
         USING &NM,R12                                           92108
         AIF   ('&MODE' EQ 'OS').DOALL                           92108
&NM      LR    R12,R15       LOAD BASE                           92108
         AGO   .CMALL                                            92108
.DOALL   ANOP  ,                                                 92108
&NM      STM   R14,R12,12(R13)  SAVE IN USER'S SAVE AREA         92108
         AIF   ('&SET' NE 'BASE').LR12                           92108
         BALR  R12,0         MAKE LOCAL BASE                     92108
         LA    R10,6         MAKE DEBUGGING EASIER               92108
         SLR   R12,R10       MAKING BASE=ENTRY                   92108
         AGO   .CMALL                                            92108
.LR12    LR    R12,R15       SET LOCAL BASE                      92108
.CMALL   LM    R10,R11,@RENTWRK   COMMON WORK AREAS              92108
         USING RENTWORK,R11                                      92108
         USING DYNWORK,R10                                       92108
         LR    R6,R1                                             92108
         LR    R5,R0         SAVE R0 IN LERAD/SYNAD              89131
         AIF   ('&RPL' EQ 'NO').NORPL                            92108
         USING IFGRPL,R6                                         92108
         L     R7,RPLUSFLD   GET NIB (STASHED EARLIER)           92108
         USING MTSWORK,R7    MTSWORK BEGINS WITH NIB             92108
&X@SAVE  SETC  ''                                                92108
.NORPL   AIF   ('&SAVE' EQ 'NONE').NOSAVE                        92108
&SA      SETC  '&SAVE'                                           92108
         AIF   ('&SAVE' NE 'RENT').NORENT                        92108
&SA      SETC  ''                                                92108
&X@RENT  SETC  '&RENT'                                           92108
         GETMAIN R,LV=&RENT                                      92108
         STM   R13,R12,0(R1)                                     92108
         LR    R0,R5         RESTORE R0                          89131
         LR    R13,R1                                            92108
.NORENT  AIF   ('&SA' NE '').DFLT                                92108
&SA      SETC  '&NM'.'ZZZZZZZZ'                                  92108
&SA      SETC  '&SA'(1,4).'SAVE'                                 92108
.DFLT    AIF   ('&SAVE' EQ 'RENT').NDFLT                         92108
         STM   R13,R12,&SA   SAVE RETURN INFO IN OUR SAVE AREA   92108
         LA    R13,&SA                                           92108
.NDFLT   ANOP  ,                                                 92108
&X@SAVE  SETC  '&SA'                                             92108
.NOSAVE  ANOP  ,                                                 92108
.MEND    MEND  ,                                                 92108
         SPACE 1                                                 92108
         MACRO ,                                                 92108
&NM      XEXIT &LTORG=,&MODE=OS,&RC=NO                           92108
         GBLC  &X@SAVE,&X@EXIT,&X@RENT                           92108
         LCLC  &XN,&CS                                           92108
         LCLB  &RC1                                              92108
&RC1     SETB  ('&RC' NE 'NO')                                   92108
         AIF   ('&X@SAVE' EQ '').MEND                            92108
&XN      SETC  '&X@EXIT'.'ZZZZZZZZ'                              92108
&XN      SETC  '&XN'(1,4).'EXIT'                                 92108
         AIF   ('&NM' EQ '' OR '&NM' EQ '&XN').NODC              92108
&NM      DS    0H                                                92108
.NODC    AIF   ('&X@RENT' NE '').FRENT                           92108
&XN      LM    R13,R14,&X@SAVE   RESTORE RETURN REGISTERS        92108
         AIF   ('&MODE' NE 'OS').NOS                             92108
         LM    R15+&RC1,R12,&RC1*4+16(R13)  RESTORE ALL REGISTERS
.NOS     BR    R14           RETURN                              92108
&X@SAVE  DC    0A(0),CL72'  &X@SAVE AREA NOT USED'               92108
&X@SAVE  SETC  ''                                                92108
         AGO   .LORG                                             92108
.FRENT   ANOP  ,                                                 92108
&XN      LR    R1,R13                                            92108
         LM    R13,R14,0(R1)                                     92108
         FREEMAIN R,LV=&X@RENT,A=(R1)                            92108
         AIF   ('&MODE' NE 'OS').NOS2                            92108
         LM    R15+&RC1,R12,4*&RC1+16(R13)  RESTORE ALL REGISTERS
.NOS2    BR    R14                                               92108
&CS      SETC  '&SYSECT'                                         92108
&X@SAVE  DSECT ,                                                 92108
         DC    18A(0)                                            92108
&X@SAVE  SETC  ''                                                92108
&CS      CSECT ,                                                 92108
.LORG    AIF   ('&LTORG' EQ 'NO').MEND                           92108
         LTORG ,                                                 92108
.MEND    MEND  ,                                                 92108
         SPACE 1                                                 88348
         COPY  OPTIONGB      COPY GLOBAL OPTIONS                 92108
         GBLB  &INPREAD      SWITCH FOR 'TAKE' COMMAND SUPPORT   92108
         GBLA  &BUFSIZ       DESIRED VTAM BUFFER SIZE            92108
&BUFSIZ  SETA  3000          (ORIGINAL)                          92108
         SPACE 1                                                 92108
         SYSPARM LIST=YES    SET AND DISPLAY ASSEMBLY OPTIONS    92108
         EJECT ,                                                 92108
         PRINT &PRTSOR       SET CONDITIONAL PRINTING - SAVE A TREE
REMKERM  SAVEM ZERO12,BASE=(R12,R11),BNDRY=PAGE,PARM=R9          92108
         LA    R10,DYNWORK   GET COMMON PORTION AFTER S.A. STACK 92108
         DROP  R13                                               92108
         USING DYNWORK,R10                                       92108
         LA    R11,RENTWORK  POINT TO COMMON WORK AREA           92108
         USING RENTWORK,R11  DECLARE IT                          92108
         STM   R10,R13,@RENTWRK  SAVE BASIC REGISTERS            92108
         MVI   BLANKS-1,C' '   PREPARE                           92108
         MVC   BLANKS,BLANKS-1   FOR BLANKING                    92108
         MVC   INPUTRDW(9),=X'00590000C394847A40'  'CMD:'        88150
*---------------------------------------------------------------------*
*  THE FOLLOWING CODE NO LONGER REQUIRES TSO CP MODE; THE PROGRAM     *
*    MAY NOW BE INVOKED VIA BATCH TMP OR IN NON-CP MODE.              *
*  THE INPUT BUFFER MAY NOW BE SUPPLIED IN TSO CP OR OS PARM MODE.    *
*   E.G.:  REMKERM APPL(AID)     OR  REMKERM AID                      *
*  THE USER WILL BE PROMPTED FOR A MISSING PARAMETER                  *
*---------------------------------------------------------------------*
         USING CPPL,R9                                           92108
NOTNET   TM    CPPLCBUF,X'80' INVOKED AS A COMMAND PROCESSOR?    88277
         BZ    DONECHEK      MAYBE                               88277
      WTERM 'MSG514A REMKERM should be invoked as a Command Processor'
         ICM   R1,15,ASCBASXB-ASCB(R2)  GET THE ASXB             88277
         BZ    INITFAIL                                          91290
         ICM   R1,15,ASXBLWA-ASXB(R1)  GET THE LWA               88277
         BZ    INITFAIL                                          91290
         L     R14,CPPLCBUF  LOAD INPUT PARAMETER                88277
         ICM   R0,15,LWAPSCB-LWA(R1)                             88277
         BZ    INITFAIL                                          91290
         LR    R15,R0                                            88277
         ICM   R15,15,PSCBUPT-PSCB(R15)  GET UPT                 88277
         BZ    INITFAIL      TOO BAD                             91290
         ICM   R1,15,LWAPECT-LWA(R1)                             88277
         BZ    INITFAIL      TOO BAD                             91290
         STM   R14,R1,FAKECPPL                                   88277
         LA    R9,FAKECPPL                                       88277
         WTERM 'MSG514B CP interface will be simulated'          92108
DONECHEK ST    R9,@CPPL      SAVE CPPL FOR LATER                 88278
         LA    R2,=CL8'IKJGETL '  GETLINE                        92108
         BAL   R9,LOADLPA    LOCATE IT                           92108
         ST    R0,@GETLINE   SAVE IT                             88150
         LA    R2,=CL8'IKJPUTL '   GET PUTLINE                   92108
         BAL   R9,LOADLPA    LOCATE OR LOAD PUTLINE              92108
         ST    R0,@PUTLINE   SAVE IT                             88150
         L     R9,@CPPL      RESTORE CPPL ADDRESS                92108
         L     R1,CPPLECT    GET THE ECT ADDRESS                 88150
         L     R8,CPPLCBUF   GET THE COMMAND BUFFER ADDRESS      88150
         ST    R1,MYIOPL+IOPLECT-IOPL  INTO THE IOPL             88150
         LA    R1,MYIOPECB   GET DUMMY ECB                       88150
         ST    R1,MYIOPL+IOPLECB-IOPL  DITTO                     88150
         L     R2,CPPLUPT    GET TO UPT                          88150
         ST    R2,MYIOPL+IOPLUPT-IOPL                            88150
         SPACE 1                                                 92108
         LH    R5,0(,R8)     LOAD LENGTH                         92108
         CLI   2(R8),C' '    LOOKING AT OS PARM OR CP CBUF ?     92108
         BL    PARMCP        CP                                  92108
         LA    R4,2(,R8)     POINT TO TEXT                       92108
         B     PARMCOMM                                          92108
PARMCP   LH    R1,2(,R8)     GET LENGTH ALREADY PROCESSED        92108
         LA    R1,4(,R1)     MAKE RELATIVE                       92108
         SR    R5,R1         MAKE UNPROCESSED LENGTH             92108
         LA    R4,0(R1,R8)   POINT TO TEXT START                 92108
PARMCOMM LA    R14,INPUT                                         92108
         LA    R15,L'INPUT                                       92108
         MVCL  R14,R4        MOVE TO COMMAND BUFFER              92108
         TR    INPUT,UPPER   MAKE UPPER CASE                     92108
         LA    R5,INPUT      POINT TO INPUT BUFFER               92108
PARMLOOK BLOOK T=PARMTAB,R=INPUT                                 92108
         CLI   0(R5),C' '    END OF TEXT ?                       92108
         BE    NEEDAPPL      YES; SOLICIT IT                     92108
         MVC   APPLID,0(R5)  MOVE IT                             92108
         B     HAVEAPPL      AND TRY IT FOR SIZE                 92108
         SPACE 1                                                 92108
PARMKEYD MVC   APPLID,BLANKS  CLEAR                              92108
         LA    R3,APPLID                                         92108
         LA    R4,L'APPLID                                       92108
PARMKLUK CLI   0(R6),C' '    END OF PARM ?                       92108
         BE    BADPARM       YES; TOO BAD                        92108
         CLI   0(R5),C')'    ENDING PARENTHESIS                  92108
         BE    HAVEAPPL      YES; SCAN DONE                      92108
         CLI   0(R5),C'$'    BLANK OR OTHER FUNNY ?              92108
         BL    BADPARM       TOO BAD                             92108
         MVC   0(1,R3),0(R5)  MOVE ONE                           92108
         LA    R3,1(,R3)                                         92108
         LA    R5,1(,R5)                                         92108
         BCTR  R6,0          ADJUST INPUT LENGTH                 92108
         BCT   R4,PARMKLUK   TRY AGAIN                           92108
BADPARM  WTERM MSGBDPRM                                          92108
         B     RETCH8        QUIT WITH ERROR                     92108
         SPACE 1                                                 92108
INITFAIL ABEND 3767          INVALID ENVIRONMENT                 92108
         SPACE 1                                                 92108
NEEDAPPL WTERM 'Please specify the remote application id :',MODE=ASIS
         SUBCALL TTGETC      GET TEXT INTO INPUT                 92108
         CH    R15,=H'8'     ATTENTION, DISCONNECT OR WHATEVER ? 92108
         BNL   GETOUT        YES; QUIT                           92108
         LA    R5,INPUT      POINT TO RESPONSE                   92108
         BXLE  R15,R15,PARMLOOK   TRY AGAIN                      92108
         B     INITFAIL                                          92108
         SPACE 1                                                 92108
LOADLPA  LPALOOK EPLOC=(R2),DCB=4  PLPA/FLPA ADDRESS OR DO LOAD GP03262
         BR    R9            RETURN TO CALLER                    92108
         SPACE 1                                                 92108
PARMTAB  BTAB  'REMKERM',PARMLOOK,BASE=*  SKIP SELF-REFERENCE    92108
         BTAB  'APPLID=',PARMLOOK      ALTERNATE FORM            92108
         BTAB  'APPL=',PARMLOOK                                  92108
         BTAB  'APPLID(',PARMKEYD      FUNNY TSO FORM            92108
         BTAB  'APPL(',PARMKEYD        DITTO                     92108
         BTAB  ',',PARMLOOK                                      92108
         BTAB  *END                                              92108
         SPACE 1                                                 92108
*---------------------------------------------------------------------*
*  CHANGE THE NIB TO ACCESS THE REQUESTED APPLICATION                 *
*---------------------------------------------------------------------*
HAVEAPPL DS    0H                                                92108
         MODCB NIB=SIMNIB,                                             X
               AM=VTAM,                                                X
               NAME=(*,APPLID)
         USING IFGRPL,R4                         SET RPL DSECT
*---------------------------------------------------------------------*
*  TURN ON TSO FULL SCREEN MODE AND ACTIVATE TSO ATTENTION EXIT       *
*---------------------------------------------------------------------*
         STTMPMD ON,KEYS=ALL                     SET TERMINAL MOD ON
         STFSMODE ON,                                                  X
               INITIAL=YES,                                            X
               NOEDIT=YES
         LA    R3,STAXLIST                       LOAD ADDR OF STAX PARM
         STAX  ATTNRTNE,MF=(E,(R3))              ISSUE STAX MACRO
*---------------------------------------------------------------------*
*  DO INITIAL CLEAR OF SCREEN AND ATTEMPT OPEN OF ACB                 *
*---------------------------------------------------------------------*
         WTERM CLEAR,LCLEAR,MODE=CONTROL    CLEAR SCREEN         92111
         L     R6,APPLTAB    GET NUMBER OF ENTRIES IN APPLTAB    92108
         LA    R7,APPLTAB+4    POINT TO LIST OF ACB NAMES        92108
*---------------------------------------------------------------------*
*  SCAN ACB TABLE TO FIND AN ACB NOT IN USE, IF UNABLE TO FIND ONE    *
*  THAT IS NOT IN USE SEND A MESSAGE TO THE TERMINAL THAT THE         *
*  REQUESTED SESSION COULD NOT BE ACTIVATED.                          *
*---------------------------------------------------------------------*
FINDACB  DS    0H
         MVC   VIRTLUNM+1(8),0(R7)    MOVE IN FIRST ACB NAME     92108
         OPEN  SIMACB                            OPEN VTAM ACB
         BXLE  R15,R15,ACBOK   WE HAVE A WINNER                  92108
         CLI   ACBERFLG-IFGACB+SIMACB,X'58'   OTHER USER ?       92108
         BNE   BADACB        NO; OTHER PROBLEM - QUIT
         LA    R7,8(,R7)     INDEX TO NEXT NAME                  92108
         BCT   R6,FINDACB    TRY NEXT ENTRY                      92108
BADACB   DS    0H
         STFSMODE OFF                            SET FULL SCRN OFF
         WTERM ACBMSG        SEND ERROR MSG                      92108
         B     GETOUT                            TERMINATE AND EXIT
ACBOK    DS    0H
*---------------------------------------------------------------------*
*  UPON SUCCESSFULLY OPENING AN ACB OBTAIN INPUT BUFFER AREA VIA      *
*  GETMAIN, EXIT IF UNABLE TO GET STORAGE.  OTHERWISE, ISSUE VTAM     *
*  REQUEST SESSION MACRO TO START A SESSION BETWEEN THE REQUESTED     *
*  APPLICATION AND THIS PROGRAM'S ACB                                 *
*---------------------------------------------------------------------*
         GETMAIN R,LV=2*(&BUFSIZ+4)  GET INTERMEDIATE BUFFERS    92108
         LA    R1,4(,R1)     SKIP OVER (POTENTIAL) RDW           92108
         ST    R1,INAREA                         STORE ADDRESS OF AREA
         LA    R1,&BUFSIZ+4(,R1)  SKIP OVER BUFFER AND NEXT RDW  92108
         ST    R1,OUTAREA                        STORE THIS ADR TOO
         SETLOGON RPL=SIMRPL1,                                         X
               OPTCD=(START,SYN)
         LTR   R15,R15                           RC = 0
         BNZ   GETOUT                            NO TERMINATE
         LA    R5,DATAAREA                       GET DATA ADDRESS
         LA    R4,8          SET PRESUMED LENGTH                 92108
         CLC   DATAAREA,BLANKS  ANY DATA ?                       92108
         BNE   HCFREQ        YES, LEAVE LENGTH                   92108
         SLR   R4,R4                             CLEAR AREA LENGTH
HCFREQ   DS    0H                                    *
         REQSESS RPL=SIMRPL1,NIB=SIMNIB,                               X
               OPTCD=(SYN,NQ),                                         X
               RECLEN=(4),                                             X
               AREA=(5)
         LTR   R15,R15                           R C = 0
         BNZ   ERROR                             TERMINATE AND EXIT
         LTR   R0,R0                             REASON CODE = 0
         BZ    DORECV                            TERMINATE AND EXIT
ERROR    DS    0H
         STFSMODE OFF                            SET FULL SCRN OFF
         WTERM EMSG          SEND ERROR MSG                      92108
         B     GETOUT                            TERMINATE AND EXIT
DORECV   DS    0H
*---------------------------------------------------------------------*
* NOW THAT THE SESSION BETWEEN THIS PROGRAM AND THE REQUESTED         *
* APPLICATION IS BOUND, SEND A REQUEST TO THE APPLICATION TO          *
* RECEIVE DATA FROM IT.                                               *
*---------------------------------------------------------------------*
         L     R7,INAREA
         RECEIVE RPL=SIMRPL2,                                          X
               EXIT=RECVEX,                                            X
               AREA=(7),                                               X
               AREALEN=&BUFSIZ,                                        *
               OPTCD=(ASY,ANY,Q,CA)
         WAIT  ECB=WAITECB                       WAIT FOR ECB TO POST
RESET    DS    0H
         MVI   RESETCNT,C'N'                     CLEAR RESET SWITCH
         LA    R8,LOOPVAL1                       WAIT FOR 14 MINS
         MVC   WAITINT,HALFSEC                   IN 1/2 SEC INTERVALS
LOOP     DS    0H
         STIMER WAIT,DINTVL=WAITINT              STIMER WAIT
         CLI   EXIT,C'Y'                         DO WE EXIT
         BE    GETOUT                            YES
         CLI   RESETCNT,C'Y'                     RESET COUNT
         BE    RESET                             YES GO RESET
         L     R7,OUTAREA                        GET IOAREA ADDRESS
*---------------------------------------------------------------------*
*  ATTEMPT TO RECEIVE INPUT FROM THE TERMINAL. RESET WAIT COUNTERS    *
*  IF NO DATA RECEIVED AND CONTINUE TO WAIT FOR TERMINAL INPUT        *
*---------------------------------------------------------------------*
*DEFER*  TGET  (7),&BUFSIZ,ASIS,NOWAIT   GET INPUT FROM TERM     92108
         OI    PTCHFLG,FGTGWAIT  SET NOWAIT MODE                 92108
         SUBCALL TTGET       GET 'ASIS' TEXT                     92108
         C     R15,=F'12'    ANY INPUT ?                         92108
         BL    GOODIN        PROCESS INPUT                       92108
         BH    RETCH8        GET OUT ON ERROR                    92108
         BCT   R8,LOOP                           DECREMENT AND LOOP
         CLC   WAITINT,TWOSEC                    IN 2ND INTERVAL
         BE    GETOUT                            YES, TIMED OUT
         LA    R8,LOOPVAL2                       LOOP FOR 2 SEC
         MVC   WAITINT,TWOSEC                    IN TWO SEC INTERVAL
         B     LOOP                              GO LOOP
GOODIN   DS    0H
         ST    R1,SLENGTH                        GET INPUT LENGTH
         LR    R14,R7        BUFFER START                        92108
         LR    R15,R1          AND LENGTH                        92108
         MVCL  R14,R0        MOVE TO INTERIM BUFFER              92108
         L     R6,CID                            LOAD CID
         L     R5,SLENGTH                        LOAD LENGTH
         L     R7,OUTAREA                        LOAD I/O AREA ADDR
*---------------------------------------------------------------------*
*  AFTER GETTING INPUT FROM THE TERMINAL, FORWARD IT TO THE           *
*  APPLICATION                                                        *
*---------------------------------------------------------------------*
         CLI   BBSW,C'Y'                         BETWEEN BRACKET ?
         BE    BBSEND                            YES - START BRACKET
         SEND  RPL=SIMRPL3,                                            X
               AREA=(7),                                               X
               RECLEN=(5),                                             X
               ARG=(6),                                                X
               OPTCD=SYN,                                              X
               BRACKET=(NBB,NEB),                                      X
               CHNGDIR=(CMD),                                          X
               STYPE=REQ,                                              X
               CONTROL=DATA,                                           X
               RESPOND=(NEX,NFME,NRRN,NQRESP)
         B     LOOP
BBSEND   DS    0H
         SEND  RPL=SIMRPL3,                                            X
               AREA=(7),                                               X
               RECLEN=(5),                                             X
               ARG=(6),                                                X
               OPTCD=SYN,                                              X
               BRACKET=(BB,NEB),                                       X
               STYPE=REQ,                                              X
               CONTROL=DATA,                                           X
               RESPOND=(NEX,NFME,NRRN,NQRESP)
         MVI   BBSW,C'N'                         INDICATE IN BRACKET
         B     LOOP                                  *
         SPACE 1                                                 92108
RETCH8   OI    RETCH+L'RETCH-1,8  SET ERROR CODE                 92108
GETOUT   CLOSE SIMACB                            CLOSE VTAM ACB
         STTMPMD OFF                             SET TERM MODE OFF
         STFSMODE OFF                            SET FULLSCREEN OFF
         LH    R9,RETCH      LOAD RETURN CODE                    92108
         ENDM  RC=(R9)       RETURN WITH CODE                    92108
         SPACE 2                                                 92108
SCIPRTNE XHEAD ,                                                 92108
         L     R4,4(,R6)                         LOAD CID VALUE
         L     R5,16(,R6)                        LOAD RPL ADDRESS
         USING IFGRPL,R5                         MAP RPL
         CLI   RPLCNTDC,RPLTBIND                 IS BIND REQUEST
         BE    BIND                              YES BIND SESSION
         CLI   RPLCNTDC,RPLTUNBD                 IS UNBIND REQUEST
         BE    UNBIND                            YES DROP SESSION
         CLI   RPLCNTSC,RPLCLEAR                 IS CLEAR REQUEST
         BE    DOCLEAR                           YES CLEAR
         CLI   RPLCNTSC,RPLSDT                   IS SDT REQUEST
         BE    DOSDT                             YES DO SDT
         ABEND 2,DUMP                            UNKOWN REQUEST - DUMP
UNBIND   DS    0H
*DEFER*  L     R6,RPLAREA                        GET RU AREA ADDR
*DEFER*  CLC   0(2,R6),=X'3202'                  RETAIN RESOURSES
*DEFER*  BE    HANGON                            YES KEEP THEM
         MVI   EXIT,C'Y'                         SET EXIT SWITCH ON
*FAILS*  TERMSESS  RPL=SIMRPL4,ARG=(R4),OPTCD=(SYN,COND)         92108
HANGON   B     SCIPOUT                                           92108
BIND     DS    0H
         ST    R4,CID                            SAVE CID VALUE
         ST    R4,SIMNIB+4                       SAVE CID IN NIB
         OPNSEC RPL=SIMRPL4,                                           X
               OPTCD=(SYN,CA),                                         X
               NIB=SIMNIB
         C     R15,=F'32'                        SYNAD DETECTED
         BE    SDTEX                             GET OUT WAIT FOR BIND
         BXLE  R15,R15,SCIPWAIT    WAIT FOR TRAFFIC              92108
         ABEND 999,DUMP      TOO BAD                             92108
SCIPWAIT POST  WAITECB                           POST ECB
         B     SCIPOUT       RETURN TO VTAM                      92108
DOCLEAR  DS    0H
         MVI   BBSW,C'Y'                         CLEAR BRACKET SWITCH
DOSDT    DS    0H
SDTEX    DS    0H
CLEAREX  DS    0H
SCIPOUT  XEXIT MODE=VTAM     RETURN TO VTAM                      92108
         SPACE 2                                                 92108
LEREXIT  XHEAD ,             LERAD EXIT                          92108
         LR    R5,R6                             LOAD RPL ADDR
         USING IFGRPL,R5                         MAP RPL
         CLI   RPLFDB2,X'13'                     INVALID CID
         BE    LEROUT        YES; IGNORE ERROR                   92108
         ABEND 4095,DUMP                         ABEND OTHERWISE
LEROUT   XEXIT MODE=VTAM     RETURN TO VTAM                      92108
         SPACE 2                                                 92108
SYNEXIT  XHEAD ,             VTAM SYNAD                          92108
         SWAPR R5,R6         PRESERVE R0 CODE                    92108
         USING IFGRPL,R5                         MAP RPL DSECT
SYNTEST1 DS    0H                                LU NOT ACTIVE
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         CLC   RPLRTNCD(2),=X'1000'
         BNE   SYNTEST2
         LA    R15,10        SET RETURN CODE                     92108
         B     SYNOUT        RETURN TO VTAM                      92108
SYNTEST2 CLC   RPLRTNCD(2),=X'100D'              SESS TERM
         BE    SYNOUT0       RETURN TO VTAM                      92108
         CLC   RPLRTNCD(2),=X'081E'              SESSION REF ERR
         BE    SYNOUT0       RETURN TO VTAM                      92108
         CLC   RPLRTNCD(2),=X'0C0B'              SESSION TERM
         BE    SYNOUT0       RETURN TO VTAM                      92108
         C     R6,=F'16'     CHECK IF R0 SHOWS APPL UNAVAILABLE  92108
         BNE   SYNERR                            IF R0 EQ X'10' THEN
         STFSMODE OFF                            SET FULL SCRN OFF
         WTERM EMSG          SEND ERROR MSG                      92108
         MVI   EXIT,C'Y'                         SET XIT SWITCH
SYNOUT0  SLR   R15,R15       CLEAR RETURN                        92108
SYNOUT   XEXIT MODE=VTAM,RC=YES        RTURN WITH CODE           92108
SYNERR   ABEND 4094,DUMP
         SPACE 2                                                 92108
RECVEX   XHEAD ,             VTAM RECEIVE EXIT                   92108
         CLI   EXIT,C'Y'     FINAL WRITES ?                      92108
         BE    EXITRECV      YES; GET OUT NOW                    92108
         MVI   BBSW,C'N'                         SET BRACKET SW OFF
         MVI   RESPSW,C'N'                       SET RESP SW OFF
         CHECK RPL=(R6)                          CHECK RECV
         LTR   R15,R15                           CHECK OK
         BE    RECOK                             THEN PROCESS
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         B     EXITRECV                          EXIT OUT
RECOK    DS    0H
         LA    R5,0(,R6)                         LOAD RPL ADDRESS
         TM    20(R5),X'02'                      TYPE 1 RESP
         BO    NORESP                            NOT TYPE 1
         TM    20(R5),X'04'                      DEF TYPE 1 RESP
         BO    NORESP                            NOT DEF TYPE 1 RESP
         MVI   RESPSW,C'Y'                       INDICATE RESP NEEDED
NORESP   DS    0H
         TESTCB RPL=(5),                                               X
               AM=VTAM,                                                X
               BRACKET=(BB,EB)
         BNE   BBTEST2                           NO TRY END BRACKET
         MVI   BBSW,C'Y'                         SET BETWEEN BRACKET ??
         B     NOBB                              AND BYPASS
BBTEST2  DS    0H
         TESTCB RPL=(5),                                               X
               AM=VTAM,                                                X
               BRACKET=(NBB,EB)
         BNE   NOBB                              IN BRACKET STATE
         MVI   BBSW,C'Y'                         BETWEEN BRACKETS
NOBB     DS    0H
         L     R7,INAREA                         GET I/O AREA ADDR
         CLI   0(R7),X'F3'                       STRUCTURED FIELD CMDS
         BE    COMMREJ                           NO CAN DO THAT
         SHOWCB RPL=(5),                                               X
               AM=VTAM,                                                X
               FIELDS=(RECLEN),                                        X
               AREA=SLENGTH,                                           X
               LENGTH=4
         L     R6,SLENGTH    GET LENGTH                          92108
         L     R7,INAREA                         GET I/O AREA ADDR
*---------------------------------------------------------------------*
*  THIS CODE IS THE "HEART" OF THIS PROGRAM IT TPUTS DATA TO          *
*  THE TERMINAL, TGET'S ANY RESPONSE, THEN SENDS IT TO THE            *
*  APPLICATION.                                                       *
*---------------------------------------------------------------------*
SCROUT   WTERM (R7),(R6),MODE=CONTROL   WRITE TO TERMINAL        92111
*DEFER*  L     R7,INAREA                         GET I/O AREA ADDR
*DEFER*  TGET  (R7),&BUFSIZ,ASIS,NOWAIT   GET TO UNLOCK KYBD     92108
*DEFER*  OI    PTCHFLG,FGTGWAIT  SET NOWAIT MODE                 92108
*DEFER*  SUBCALL TTGET       GET 'ASIS' TEXT                     92108
*DEFER*  LR    R15,R1        COPY LENGTH                         92108
*DEFER*  LR    R14,R7        GET BUFFER ADDRESS                  92108
*DEFER*  MVCL  R14,R0        MOVE TO INTERIM BUFFER              92108
         CLI   RESPSW,C'Y'                       RESPONSE NEEDED
         BNE   SKIPRESP                          NO SKIP IT
         L     R6,CID                            LOAD CID
         SEND  RPL=(5),                                                X
               ARG=(6),                                                X
               STYPE=RESP,                                             X
               CONTROL=DATA,                                           X
               BRACKET=(NBB,NEB),                                      X
               RESPOND=(NEX,FME,NRRN,NQRESP),                          X
               OPTCD=(SYN,CA)
         B     SKIPRESP
COMMREJ  DS    0H
         L     R6,CID
         SEND  RPL=(5),                                                X
               ARG=(6),                                                X
               STYPE=RESP,                                             X
               CONTROL=DATA,                                           X
               BRACKET=(NBB,NEB),                                      X
               SSENSEO=FI,                                             X
               SSENSMO=03,                                             X
               RESPOND=(EX,FME,NRRN,NQRESP),                           X
               OPTCD=(SYN,CA)
SKIPRESP L     R2,=A(RECVEX)  GET ADDRESS OF RECEIVE EXIT        92108
         L     R6,CID                             LOAD CID
         L     R7,INAREA                          GET I/O AREA ADDR
         RECEIVE RPL=(5),                                              X
               EXIT=(R2),                                              *
               AREA=(7),                                               X
               AREALEN=&BUFSIZ,                                        *
               OPTCD=(ASY,ANY,CA,Q)
         MVI   RESETCNT,C'Y'                      RESET COUNTS
EXITRECV XEXIT MODE=VTAM                                         92108
         SPACE 2                                                 92108
ATTNRTNE XHEAD MODE=OS       TSO ATTENTION EXIT                  92108
         STFSMODE ON,,NOEDIT=YES                  RESTORE FULLSCR MODE
         XEXIT MODE=OS       RETURN TO TSO                       92108
         EJECT ,                                                 88150
***********************************************************************
*                                                                     *
*        GET INPUT FROM TERMINAL (OR BATCH TMP SIMULATION FILE)       *
*           ALSO NOTE THAT INPUT MAY BE FROM 'TAKE' FILE              *
*                                                                     *
*        INPUT ADDRESS RETURNED IN R0; LENGTH IN R1                   *
*           LEADING ZEROES AND BLANKS ARE SKIPPED                     *
*        FOR A TEXT MODE CALL (TTGETC), THE INPUT IS ALSO COPIED TO   *
*        'INPUT', CONVERTED TO UPPER CASE AND PADDED WITH BLANKS.     *
*                                                                     *
***********************************************************************
TTGETC   OI    PTCHFLG,FGTGEXT  GET TEXT (COMMAND)               88150
TTGET    XHEAD MODE=OS,SET=BASE       ENTRY TO GET INPUT BUFFER  92108
*        L     R14,FAKECPPL+8  GET MTS ADDRESS BACK              89337
*        ICM   R15,15,MTSINCT-MTS(R14)  GET OLD TERM INP COUNT   89337
*        AH    R15,=H'1'     ADD 1                               89337
*        STCM  R15,15,MTSINCT-MTS(R14)  SAVE NEW DISK INP COUNT  89337
         AIF   (NOT &INPREAD).NOTAKE3                            91315
TTGETTAK SLR   R2,R2         CLEAR FOR LOAD                      88277
         ICM   R2,1,NUMTAKEN  ANY TAKE FILE IN EFFECT ?          88277
         BZ    TTGETNTK      NO                                  88277
         SLL   R2,2          MAKE INDEX                          88277
         L     R4,MISTAKEN(R2)  LOAD THE WORK AREA               88277
         USING TAWSECT,R4    DECLARE IT                          88277
         INPGET DEV==TAWMASK  GET A RECORD                       88277
         BXH   R15,R15,TTGETTAB  ERROR                           88277
         LR    R2,R1         COPY THE TEXT ADDRESS               88277
         LTR   R3,R0         COPY THE LENGTH                     88277
         BNM   *+6           IF NOT POSITIVE, ENSURE ZERO        88277
         SLR   R3,R3         MAKE NON-NEGATIVE                   91084
         TM    PTCHFLG,FGTGEXT  TEXT REQUEST ?                   91084
         BZ    TTGETFCV      NO; JUST RETURN AS-IS               91084
         IC    R5,PTCHFLG    PRESERVE OPTION (TEXT)              91084
         WTERM (R2),(R3)     ECHO TO USER                        91084
         STC   R5,PTCHFLG    RESTORE OPTION FLAG                 91084
         B     TTGETFCV      JOIN COMMON                         91084
TTGETTAB WTERM  ' TAKE file read error. File ignored.'           88277
TTGETEOF INPCLOSE DEV==TAWMASK  CLOSE THE FILE                   88277
         SUBCALL DDFREE,TAWPTR  FREE THE ALLOCATION              88277
         SLR   R2,R2                                             88277
         IC    R2,NUMTAKEN                                       88277
         BCTR  R2,0          SET NUMBER OF PREVIOUS FILE         88277
         STC   R2,NUMTAKEN                                       88277
         B     TTGETTAK      TRY PREVIOUS FILE                   88277
         DROP  R4                                                88277
TTGETNTK DS    0H            NO TAKE IN EFFECT                   88277
.NOTAKE3 ICM   R1,15,MYGTPB+GTPBIBUF-GTPB  TEST PRIOR BUFFER     88150
         BZ    TTGET0        NONE                                88150
*        TM    MODEFG,FGNET  NETWORK VERSION ?                   89328
*        BNZ   TTGET0        DON'T FREE MTSINBUF                 89328
         LH    R0,0(,R1)     GET BUFFER LENGTH                   88150
         ICM   R0,8,=AL1(1)  SUBPOOL=1                           88150
         FREEMAIN R,LV=(0),A=(1)  FREE THE LINE                  88150
         XC    GTPBIBUF+MYGTPB-GTPB,GTPBIBUF+MYGTPB-GTPB         88150
TTGET0   L     R15,@GETLINE  LOAD THE IKJGETL SERVICE ROUTINE ADDRESS
         LA    R1,MYIOPL     GET MY LIST ADDRESS                 88150
         LA    R0,MYGTPB     GET THE GETLINE PARAMETER BLOCK     88150
         ST    R0,MYIOPL+IOPLIOPB-IOPL  STASH IT IN IOPL         88150
         TM    PTCHFLG,FGTGEXT  GETTING TEXT ?                   88150
         BNZ   TTGETT        YES                                 88150
         TM    PTCHFLG,FGTGWAIT  WAIT MODE ?                     92108
         BZ    TTGETW        YES                                 92108
         GETLINE INPUT=PHYSICAL,TERMGET=(ASIS,NOWAIT),                 *
               ENTRY=(15),MF=(E,(1))   ARE DATA AVAILABLE ?      92108
         B     TTGETR        CHECK RETURN CODE                   92108
TTGETW   GETLINE INPUT=PHYSICAL,TERMGET=ASIS,  GET DATA                *
               ENTRY=(15),MF=(E,(1))                             88150
         B     TTGETR        CHECK RETURN CODE                   88150
TTGETT   GETLINE INPUT=ISTACK,TERMGET=EDIT,    GET TEXT                *
               ENTRY=(15),MF=(E,(1))                             88150
TTGETR   CH    R15,=H'4'     NORMAL RETURN ?                     88150
         BH    TTGETS        NO; HANDLE SPECIAL PROCESSING       88150
         L     R5,MYGTPB+GTPBIBUF-GTPB  GET THE INPUT BUFFER     88150
         LA    R2,4(,R5)     POINT TO THE TEXT                   88150
         LH    R3,0(,R5)     GET THE TEXT LENGTH                 88150
         SH    R3,=H'4'      ALLOW FOR LENGTH OF LENGTH          88150
         BNP   TTGETM0       RETURN AS IS                        88150
TTGETB   TM    0(R2),255-C' '    LEADING BLANK OR NULL ?         88150
         BNZ   TTGETM        NO; DONE                            88150
         LA    R2,1(,R2)     SKIP OVER IT                        88150
         BCT   R3,TTGETB     AGAIN                               88150
TTGETM0  SLR   R3,R3         MAKE NON-NEGATIVE                   88150
         SPACE 1                                                 88204
TTGETM   TM    IOFLAG2,FGCRT  CRT MODE ?                         88278
         BZ    TTGETFCV      NO                                  88278
         TM    PTCHFLG,FGTGEXT  TEXT MODE ?                      88278
         BNZ   TTGETFCV      YES; NO AID, ETC.                   88278
         CLI   0(R2),X'01'   TEST-REQUEST/SYSTEM REQUEST ?       88278
         BNE   TTGETNTR      NO                                  88278
         LA    R2,1(,R2)     LONGER PREFIX                       88278
         BCTR  R3,0                                              88278
TTGETNTR CLI   3(R2),X'11'   FORMATTED SCREEN ?                  88278
         BNE   *+8           NO                                  88278
         LA    R0,6          SET LONGER PREFIX TO DATA           88278
         AR    R2,R0         SKIP OVER CONTROL INFO              88278
         SR    R3,R0         GET RESIDUAL LENGTH                 88278
         BNM   TTGETFCV      OK ?                                88278
         SLR   R3,R3         ELSE NULL INPUT                     88278
TTGETFCV ST    R2,@INCOME    SAVE THE TEXT ADDRESS               88150
         L     R15,0(,R13)   GET THE PREVIOUS SAVE AREA          88150
         STM   R2,R3,20(R15)  RETURN ADDRESS/LENGTH IN R0/R1     88150
         TM    PTCHFLG,FGTGEXT  TEXT MODE ?                      88150
         BZ    TTGETQ        NO                                  88150
         LA    R14,INPUT                                         88150
         LA    R15,L'INPUT                                       88150
         ICM   R3,8,BLANKS   BLANK FILL                          88150
         MVCL  R14,R2        MOVE TEXT TO INPUT BUFFER           88150
         TR    INPUT,UPPER   AND MAKE UPPER-CASE                 88150
         TM    DEBUG+DCBOFLGS-IHADCB,DCBOFOPN  DEBUG OPEN ?      88150
         BZ    TTGETQ        NO                                  88150
         PUT   DEBUG,INPUTRDW  WRITE INPUT LINE                  88150
TTGETQ   SLR   R15,R15       CLEAR THE RETURN                    88150
         B     TTGETEX       AND EXIT                            88150
TTGETS   XC    GTPBIBUF+MYGTPB-GTPB,GTPBIBUF+MYGTPB-GTPB         88150
         CH    R15,=H'12'    NOWAIT WITH NO INPUT ?              92108
         BE    TTGETEX       YES; RETURN SUCH                    92108
         CH    R15,=H'16'    END OF INPUT ?                      92108
         BE    TTGETF        YES                                 88150
         CH    R15,=H'28'    DISCONNECTED ?                      92108
         BE    TTGETF        YES                                 92108
         CH    R15,=H'40'    BARRIER ?                           88150
         BNE   TTGETBD       NO; ERROR                           88150
TTGETF   LA    R2,=C'QUIT '                                      88150
         LA    R3,5          SET FOR END REQUEST                 88150
         B     TTGETM        AND RETURN IT                       88150
TTGETBD  LA    R15,24        SET MAJOR ERROR                     88150
TTGETEX  NI    PTCHFLG,255-FGTGEXT-FGTGWAIT  RESET TEXT MODE FLAG
         L     R1,0(,R13)    GET OLD SAVE AREA                   92108
         ST    R15,16(,R1)   SET RETURN CODE                     92108
         XEXIT MODE=OS       RTURN WITH CODE                     92108
         EJECT ,                                                 88150
***********************************************************************
*                                                                     *
*        PUT OUTPUT ON THE TERMINAL (OR BATCH TMP SIMULATION FILE)    *
*                                                                     *
*        ADDRESS SUPPLIED IN R1; LENGTH IN R0                         *
*                                                                     *
***********************************************************************
TPUTCONT OI    PTCHFLG,FGTCONT  CONTROL MODE                     88150
TPUTASIS OI    PTCHFLG,FGTTEXT  ASIS (PROMPT) MODE               88150
TPUTEDIT XHEAD MODE=OS,SET=BASE   ENTRY TO WRITE LINE TO TERMINAL
         LR    R4,R6         COPY TEXT START                     88150
         SLR   R2,R2                                             91291
*        IC    R2,PROTOCON   GET PROTOCOL CONVERTER INDEX        91291
*        L     R14,FAKECPPL+8  GET MTS ADDRESS BACK              89337
*        ICM   R15,15,MTSOUTCT-MTS(R14)  GET OLD TERM OUT COUNT  89337
*        AH    R15,=H'1'     ADD 1                               89337
*        STCM  R15,15,MTSOUTCT-MTS(R14)  SAVE NEW TERM OUT COUNT 89337
         TM    PTCHFLG,FGTCONT  CONTROL BUFFER ?                 91291
         BNZ   TPUTLONG      YES; SPECIAL HANDLING               91291
         LA    R14,PUTBUFF   GET OUTPUT BUFFER                   88150
         LA    R15,L'PUTBUFF  MAXIMUM LENGTH                     88150
         MIN   R15,(R5)      TRUNCATE TO MINIMUM                 88309
         LA    R0,4(,R15)    LENGTH WITH RDW LENGTH              88309
TPUTNPC  STH   R0,PUTRDW                                         88150
         MVCL  R14,R4        MOVE TEXT TO OUTPUT                 88150
         LA    R4,PUTRDW     RELOAD BUFFER START                 91291
         LH    R5,PUTRDW     AND LENGTH                          91291
         B     TPUTSHRT      BRANCH AROUND                       91291
TPUTLONG LA    R0,4                                              91291
         AR    R5,R0         LENGTH WITH RDW                     91291
         SR    R4,R0         RDW LOCATION                        91291
         STH   R5,0(,R4)     MAKE RDW                            91291
         STCM  R0,IIOO,2(R4)  CLEAR LOW PORTION                  91291
TPUTSHRT L     R15,@PUTLINE  LOAD THE IKJPUTL SERVICE ROUTINE ADDRESS
         LA    R1,MYIOPL     GET MY LIST ADDRESS                 88150
         LA    R0,MYPTPB     GET THE GETLINE PARAMETER BLOCK     88150
         ST    R0,MYIOPL+IOPLIOPB-IOPL  STASH IT IN IOPL         88150
         TM    PTCHFLG,FGTCONT  CONTROL (SEND PACKET) MODE ?     88150
         BZ    TTPUTW        NO; CHECK DEBUG MODE                88150
TTPUTNPC PUTLINE OUTPUT=(0(R4),DATA),TERMPUT=(CONTROL,HOLD),           *
               ENTRY=(15),MF=(E,(1))                             88150
         B     TTPUTR        CHECK RETURN CODE                   88150
TTPUTW   TM    DCBOFLGS+DEBUG-IHADCB,DCBOFOPN  DEBUGGING ?       88150
         BZ    TTPUTWB       NO                                  88150
         STM   R15,R1,DB     SAVE REGISTERS                      88150
         PUT   DEBUG,(R4)    WRITE BUFFER (NO EMBELLISHMENTS)    91291
         LM    R15,R1,DB     RESTORE                             88150
TTPUTWB  TM    PTCHFLG,FGTTEXT  DOING TEXT ?                     88150
         BZ    TTPUTT        YES                                 88150
         PUTLINE OUTPUT=(0(R4),DATA),TERMPUT=ASIS,                     *
               ENTRY=(15),MF=(E,(1))                             88150
         B     TTPUTR        CHECK RETURN CODE                   88150
TTPUTT   PUTLINE OUTPUT=(0(R4),DATA),TERMPUT=EDIT,                     *
               ENTRY=(15),MF=(E,(1))                             88150
TTPUTR   CH    R15,=H'4'     NORMAL RETURN ?                     88150
         BL    TTPUTEX       YES                                 88150
         STM   R15,R0,DB     SAVE FOR DEBUGGING                  88325
         BH    TTPUTAB       NO; TERMINATE WITH PREJUDICE        88150
*LATER DO SOMETHING ABOUT ATTENTIONS ?                           88150
         B     TTPUTEX       IGNORE ATTENTIONS (PASS ERROR CODE) 88325
TTPUTAB  ABEND 2741,DUMP     MY TERMINAL IS BROKEN               88150
TTPUTEX  NI    PTCHFLG,255-FGTTEXT-FGTCONT  RESET MODE FLAGS     88150
         L     R1,0(,R13)    GET OLD SAVE AREA                   92108
         ST    R15,16(,R1)   SET RETURN CODE                     92108
         XEXIT MODE=OS       RTURN WITH CODE                     92108
         SPACE 1                                                 92108
RENTWORK DS    0D            COMMON ADDRESSABILITY               92108
         DROP  ,                                                 92108
         USING RENTWORK,R11                                      92108
         USING DYNWORK,R10                                       92108
LOOPVAL1 EQU   1680                               14 MIN OF HALF SEC
LOOPVAL2 EQU   1                                  2 SEC OF 2 SEC INTV
         DS    0D                                 ALIGN DBL WORD
WAITINT  DS    CL8                                WAIT INTVL FOR STIMER
HALFSEC  DC    C'00000050'                        WAIT A .5 SEC.
TWOSEC   DC    C'00000200'                        WAIT 2 SECONDS
INAREA   DS    F                                  ADDR OF I/O AREA
OUTAREA  DS    F                                  ADDR OF I/O AREA
DATAAREA DC    CL8' '                             AREA FOR REQSESS
SLENGTH  DS    F                                  MSG LENGTH
SADDR    DS    F                                  MSG ADDR
@RENTWRK DC    4A(0)         BASIC BASE ADDRESSES                92108
FULLSCR  DC    X'07'                            TPUT FULL VALUE
ACBMSG   DC    C'ACB FOR REMKERM FAILED TO OPEN' NO SESSION ERR MSG
EMSG     DC    C'SESSION NOT AVAILABLE'         NO SESSION ERR MSG
MSGBDPRM DC    C'INVALID APPLID SPECIFIED'                       92108
QUERYAPL DC    C'PLEASE SPECIFY NAME OF REMOTE APPLICATION :'    92108
APPLID   DC    C'12345678'                      APPLID FOR PLU
VIRTLUNM DC    X'08',CL8'12345678'              APPLID FOR REMKERM
         DC    F'0'    1/2   RDW PREFIX TO CLEAR                 92108
CLEAR    DC    X'F5'                            3270 CLEAR CMD
         DC    X'C1'                            WCC FOR CLEAR
         DC    X'115D7E'
         DC    X'114040'
         DC    X'3C404000'
         DC    X'114040'
         DC    X'13'
LCLEAR   EQU   *-CLEAR                                           92108
STAXLIST STAX  ATTNRTNE,MF=L                     STAX MACRO LIST FORM
         SPACE 1                                                 92108
APPLTAB  DC    F'2'          APPLICATION TABLE HEADER            92108
         DC    CL8'COMTTY01'   LU NAME                           92108
         DC    CL8'COMTTY02'                                     92108
         SPACE 1                                                 92108
         DC    C'REQSESS RPL FOLLOWS:'
SIMRPL1  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL2  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL3  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL4  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMACB   ACB   AM=VTAM,                                                X
               APPLID=VIRTLUNM,                                        *
               MACRF=LOGON,                                            X
               EXLST=SIMEXT
SIMNIB   NIB   NAME=XXXXXXXX,                                          X
               MODE=RECORD,                                            X
               USERFLD=1234,           UNIQUE ?                        *
               LISTEND=YES
SIMEXT   EXLST AM=VTAM,                                                X
               SCIP=SCIPRTNE,                                          X
               SYNAD=SYNEXIT,                                          X
               LERAD=LEREXIT
UPPER    DC    256AL1(*-UPPER)  NO TRANSLATION                   92108
         TRENT UPPER,C' ',0  HEX ZERO TO BLANK                   92108
         TRENT UPPER,*-UPPER+X'40',(X'81',9),(X'91',9),(X'A2',8) 92108
         SPACE 1                                                 92108
         LTORG
         SPACE 1                                                 92108
         IKJIOPL ,           DEFINE LISTS FOR TSO SERVICES       88150
IOPLSIZE EQU   *-IOPL                                            88150
         SPACE 1                                                 88150
         IKJSTPB ,                                               88150
STPBSIZE EQU   *-STPB                                            88150
         SPACE 1                                                 88150
         IKJGTPB ,                                               88150
GTPBSIZE EQU   *-GTPB                                            88150
         SPACE 1                                                 88150
         IKJPTPB ,                                               88150
PTPBSIZE EQU   *-PTPB                                            88150
         SPACE 1                                                 92108
SAVE     DSECT ,             SAVE AND WORK AREA                  92108
         DS    18F           SAVEAREA FOR SCIP                   92108
DYNWORK  DS    0D            COMMON ADDRESSABILITY               92108
DB       DS    2D            WORK WORDS                          92108
WAITECB  DC    F'0'          ECB FOR WAIT/POST                   92108
CID      DC    F'0'          SESSION INDETIFIER                  92108
RETCH    DC    H'0'          RETURN CODE                         92108
RESETCNT DC    C'N'                               RESET LOOP CTRS
EXIT     DC    CL1'N'                           EXIT SWITCH
BBSW     DC    CL1'N'                           BRACKET SWITCH
RESPSW   DC    CL1'N'                           RESP SWITCH
WRKBUFF  DC    CL132' ',CL8' '  DISPLAY BUFFER + OVERFLOW        88150
         ORG   ,                                                 88150
PUTRDW   DC    AL2(0,0)      PUTLINE RDW                         88150
PUTBUFF  DC    CL130' '      PUTLINE DATA                        88150
         DC    C' '          OVERFLOW                            88206
@DEBDCB  DC    A(0)          ADDRESS OF DEBUG DCB                89330
DEBUG  DCB DDNAME=DEBUG,DSORG=PS,MACRF=(PM),LRECL=260,BLKSIZE=2048,    X
               RECFM=VB                                          92108
         SPACE 1                                                 92108
MYIOPL   DC    (IOPLSIZE/4)F'0'  IOPL EXPANSION                  88150
MYIOPECB DC    F'0'          IOPL ECB                            88150
MYSTACK  STACK MF=L          STACK SERVICE                       88150
MYGTPB   GETLINE MF=L        GETLINE SERVICE                     88150
MYPTPB   PUTLINE MF=L        PUTLINE SERVICE                     88150
@INCOME  DC    A(0)          ADDRESS OF GETLINE'S RETURN BUFFER(+4)
@GETLINE DC    A(0)          ADDRESS OF GETLINE ROUTINE          88150
@PUTLINE DC    A(0)          ADDRESS OF PUTLINE ROUTINE          88150
@CPPL    DC    A(0)          ADDRESS OF CPPL                     88278
@IOBUF   DC    A(0)      1/3   I/O BUFFER DATA ADDRESS           88203
@IORDW   DC    A(0,0)    2/3   I/O BUFFER RDW ADDRESS / LENGTH SP88203
FAKECPPL DC    4A(0)         HOME-GROWN CPPL                     88277
MISTAKEN DC    8A(0)          TAKE FILE POINTER STACK            88277
NUMTAKEN DC    AL1(0)         NUMBER OF CURRENT TAKE FILE (0-NONE, 1-7)
INPUTRDW DC    Y(80+4+5,0),C'CMD: '  1/3  INPUT BUFFER PREFIX    88150
INPUT    DC    CL80' '  2/3  COMMAND INPUT BUFFER                88150
BLANKS   DC    CL8' '   3/3  CONSTANT BLANKS                     92108
         SPACE 1                                                 91091
MODEFG   DC    X'00'         RUNNING ENVIRONMENT                 89327
FGNET    EQU   X'01'           NETWORK (MULTI-TASKING) VERSION   89327
FGWYSS   EQU   X'02'           WYLBUR SUBSYSTEM MODE             91267
         SPACE 1                                                 91091
EDFLAGS  DC    X'00'         EDITING CONTROL FLAGS               88307
FGDEBS   EQU   X'40'           DON'T SEND TRAILING BLANK TEXT    88307
FGDEBG   EQU   X'20'           DON'T WRITE (V/U) TRAILING BLANKS 88307
FGEXTAB  EQU   X'08'           EXPAND RECEIVED TABS              91315
FGABIN   EQU   X'02'           BINARY AS PER 'A' PACKET TYPE     91310
FGASIS   EQU   X'01'         TRANSFER FILES 'AS-IS' (NO XLATE) SP88150
         SPACE 1                                                 91091
PROTOCON DC    X'00'         PROTOCOL CONVERTER INDEX            88204
PCCX80   EQU   X'04'           COMMTEX CX-80                     88204
PCC7171  EQU   X'08'           IBM 7171, ETC. (UNTESTED)         90086
         SPACE 1                                                 91091
IOFLAGS  DC    X'00'         MORE FLAGS                          85142
FGALLO   EQU   X'80'           ALLOCATION WAS MADE               85142
FGOPF    EQU   X'40'           OPEN FAILED; BAD DCB PARAMETERS SP88150
FGWYL    EQU   X'20'           WYLBUR COMPRESSION                88312
FGABEND  EQU   X'10'           DCB ABEND EXIT ENTERED            91112
FGDONE   EQU   FGALLO+FGWYL+FGABEND  RESET AT CLOSE/FREE         88312
FGOUT    EQU   X'08'           WRITING OUTPUT                    88150
FGREP    EQU   X'04'           REPLACE PERMITTED                 88150
FGUPD    EQU   X'02'           UPDATE SEQ. DCB PARAMETERS        91084
FGTYPE   EQU   X'01'           SEND X (TYPE) INSTEAD OF F (FILE) 88150
         SPACE 1                                                 91091
IOFLAG2  DC    X'00'         MORE FLAGS                          91084
FGCRT    EQU   X'02'           TERMINAL IS 3270 (OR SIMILAR)     88278
FGVTAM   EQU   X'01'           ON IF VTAM RATHER THAN TCAM       88150
         SPACE 1                                                 91091
PTCHFLG  DC    X'00'         PROCESSING FLAG                     88150
PTCHFIO  EQU   X'80'           RECORD WRITTEN                    88150
PTCHFCR  EQU   X'40'           CARRIAGE RETURN FOUND             88150
PTCHFLF  EQU   X'20'           LINE-FEED FOUND                   88150
FGTGWAIT EQU   X'08'           NEXT TGET IS NO WAIT MODE         92108
FGTGEXT  EQU   X'04'           NEXT TGET IS TEXT MODE            92082
FGTTEXT  EQU   X'02'           NEXT TPUT IN TEXT MODE            92082
FGTCONT  EQU   X'01'           NEXT TPUT IS IN CONTROL MODE      88150
SAVEND   EQU   *             END OF DYNAMIC AREA                 92108
         SPACE 1                                                 92108
         IFGRPL AM=VTAM
         IFGACB AM=VTAM
         IKJCPPL ,                                               92108
         IKJPSCB ,                                               92108
         IKJUPT ,                                                92108
         IHAASCB ,                                               92108
         IHAASXB ,                                               92108
         IKJEFLWA ,                                              92108
         CVT   DSECT=YES,LIST=YES                                92108
         IHACDE ,                                                92108
         DCBD  DSORG=PS,DEVD=DA                                  92108
         SPACE 1                                                 92108
MTS      MAPMTS FLAVOR=KERMIT                                    92108
         AIF   (NOT &INPREAD).BIGEND                             92108
TAWSECT  DSECT ,                                                 92108
TAWDSN   DS    CL44          TAKE FILE NAME                      92108
TAWMEM   DS    CL8           TAKE MEMBER NAME                    92108
TAWPTR   DS    A(TAWDDN),AL1(0,8,128,0)  IKJPARSE-STYLE PTR      92108
TAWDDN   DS    CL(PATDDNLN)  TAKE DDNAME/@INPREAD WORK AREA      92108
TAWNUM   DS    X             TAKE FILE NUMBER                    88277
TAWMASK  DS    X             @INPREAD FILE NUMBER MASK           88277
TAWSIZE  EQU   *-TAWSECT     SIZE OF GETMAIN                     88277
.BIGEND  END   ,                                                 92108
