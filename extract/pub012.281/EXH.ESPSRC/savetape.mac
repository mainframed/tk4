SAVT TITLE 'COPY VARIABLE BLOCKED SPANNED DATASET THAT HAS DATA CHECKS'
         COPY  OPTIONGB                                          81221
         SPACE 1                                                 81221
         SYSPARM LIST=YES                                        81221
         SPACE 2                                                 81221
***********************************************************************
*                                                                     *
*        THE PURPOSE OF THIS PROGRAM IS TO RECONSTRUCT RECORDS        *
*        SEGMENT BY SEGMENT FROM A TAPE THAT HAS DATA CHECKS.         *
*        IT WILL PROCESS VARIABLE BLOCKED OR VARIABLE BLOCKED         *
*        SPANNED RECORDS.                                             *
*        DATA CHECK BLOCKS AND/OR ZERO LENGTH READ BLOCKS WILL BE     *
*        SKIPPED, AND ANY RECORDS FOR WHICH ALL SEGMENTS ARE NOT      *
*        AVAILABLE, WILL BE REJECTED.                                 *
*                                                                     *
*        THIS PROGRAM WRITTEN BY DICK OXLEY                           *
*          AND MODIFIED BY SEYMOUR J. METZ AND G. POSTPISCHIL         *
*                                                                     *
***********************************************************************
         EJECT ,                                                 81221
         PRINT &PRTSOR                                           81221
SAVETAPE PGMHEAD ZERO12,BASE=R12,ENDZERO=INFMJFCB,AM=24,RM=24   GP03029
         DROP  R13                                               81221
         LR    R11,R13       SET IN REGISTER FOR DCB & SYNAD EXITS
         USING SAVE,R11                                          81221
         LA    R1,INFMJFCB                                       81221
         STCM  R1,7,INEXLIST+5                                   81221
         SERVINIT ,          LOAD THE SERVICE ROUTINE            81221
         SERVLOAD @PRINTER   LOAD THE PRINTER ROUTINE           GP06332
         MVI   SYNADBLK,C' '                                     81221
         MVC   SYNADMSG,SYNADBLK  CLEAR SYNAD MESSAGE            81221
         PRTOPEN SYSPRINT,OPT=(DUMMY,NOWTO),DEV=1  DETAIL PRINT  81221
         LR    R7,R15        SAVE RETURN CODE                    81221
         PRTOPEN SUMPRINT,OPT=(DUMMY,NOWTO),DEV=2  SUMMARY PRINT 81221
         MR    R6,R15        AND OF CURRENT+PRIOR RETURN CODES   81221
         LTR   R7,R7         ONE FILE SUPPLIED ?                 81221
         BZ    NOCON         AT LEAST; SKIP CONSOLE MESSAGES     81221
         PRTOPEN CONSOLE,OPT=(DUMMY,NOWTO),DEV=3   WTO MESSAGES  81221
         SPACE 1
NOCON    L     R0,SIZEWORK   GET WORK AREA SIZE                  81221
         A     R0,SIZERECA   ADD SIZE OF RECORD INTERFACE AREA   81221
         GETMAIN R,LV=(0)    RECORD INTERFACE BUFFER (64K)       81221
         LA    R1,0(,R1)          CLEAR HI BYTE
         ST    R1,INBUFF
         A     R1,SIZEWORK   POINT PAST INPUT BUFFER             81221
         ST    R1,OUTBUFF
         DEVTYPE DCBIN+DCBDDNAM-IHADCB,DB   SEE IF SYSUT1 IS PRESENT
         BXH   R15,R15,MSGINMIS   SET SYSUT1 FILE MISSING        81221
         TM    DB+2,UCB3DACC+UCB3TAPE   DISK OR TAPE ?           81221
         BNM   MSGUNSUP      NO; SIGNAL SYSUT1 UNSUPPORTED       81221
         CLI   DB+2,UCB3TAPE   TAPE INPUT ?                      81221
         BNE   *+8           NO                                  81221
         OI    DCBOPTCD-IHADCB+DCBIN,DCBOPTZ  REDUCED ERROR RECOVERY
         RDJFCB (DCBIN)      GET THE JFCB FOR THE INPUT FILE     81221
         BXH   R15,R15,MSGINMIS                                  81221
         PRTLIST TITLE,TITLE=1,DEV=(1,2)                         81221
         OI    JFCBTSDM,JFCNWRIT  DON'T CLOBBER IF DISK FILE     81221
         OPEN  (DCBIN,(INPUT,REREAD)),TYPE=J                     81221
         TM    DCBIN+DCBOFLGS-IHADCB,DCBOFOPN  OPENED OK ?       81221
         BZ    MSGINMIS      SQUAWK IF NOT                       81221
         DEVTYPE DCBOUT+DCBDDNAM-IHADCB,DB  LOOK FOR SYSUT2      81221
         BXH   R15,R15,MSGOUMIS                                  81221
         L     R2,DB+4       GET DEVICE SIZE                    GP06332
         LH    R1,OLDBLKL    GET BLOCKSIZE OF OLD DATA SET       81221
         LTR   R1,R1         ANY ?                               81221
         BP    *+6           YES                                GP06332
         LR    R1,R2         USE SIZE FOR DEVICE                GP06332
         CR    R1,R2         WILL IT FIT ?                      GP06332
         BNH   *+6           YES                                GP06332
         LR    R1,R2         ELSE TRUNCATE                      GP06332
         SR    R0,R0                                            GP06332
         ICM   R0,3,OLDLRECL GET OLD LRECL                       81221
         BM    OPOUTLEN      MINUS - MAY BOMB LATER              81221
         BP    OPOUTLEN      PLUS - ADD 'S' CHECK TO RECFM       81221
         LR    R0,R1         USE BLOCKSIZE                       81221
         SH    R0,=H'4'                                          81221
OPOUTLEN STH   R0,OLDLRECL                                       81221
         STH   R1,OLDBLKL    SET NEW DCB PARMS                   81221
         TM    OLDRECFM,DCBRECLA-DCBRECV  OTHER THAN V ?         81221
         BNZ   OPOUTVBS      YES; FORCE VBS                      81221
         TM    OLDRECFM,DCBRECV   AT LEAST V ?                   81221
         BNZ   OPOUTVUS      YES; LEAVE IT                       81221
OPOUTVBS MVI   OLDRECFM,X'58'   DEFAULT TO VBS                   81221
OPOUTVUS OPEN  (DCBOUT,(OUTPUT))
         LH    R1,DCBLRECL-IHADCB+DCBOUT  GET OUTPUT SIZE        81221
         LTR   R1,R1         NEGATIVE ?                          81221
         BP    *+8           NO                                 GP06332
         L     R1,SIZERECA   USE OUR MAXIMUM SIZE                81221
         C     R1,SIZERECA   WILL IT FIT ?                       81221
         BNH   *+8           YES                                 81221
         L     R1,SIZERECA   ELSE SET TO SPACE GOTTEN            81221
         LH    R14,=H'32760'                                    GP06332
         CR    R1,R14        AVOID X'8000' RDW                   81221
         BNH   *+6                                               81221
         LR    R1,R14                                            81221
         ST    R1,MAXLRECL   SET IT BACK                         81221
         TM    DCBOUT+DCBOFLGS-IHADCB,DCBOFOPN   OPENED OK ?     81221
         BNO   MSGOUMIS           BRANCH IF NOT                  81221
         OI    FLAG,FGWHOLE       SET FOR COMPLETE RECORD        81221
         BAL   R14,CLEARREC  INITIALIZE RECORD INTERFACE         81221
         USING WORKMAP,R9
READ     L     R8,INBUFF          INPUT AREA
         NI    FLAG,255-FGERR   RESET DATA CHECK FLAG            81221
         XC    DECB(4),DECB       CLEAR ECB
         READ  DECB,SF,DCBIN,(R8),32760                          80001
         CHECK DECB
         LA    R0,1                                              81221
         A     R0,NUMBLOCK   COUNT BLOCKS                        81221
         ST    R0,NUMBLOCK                                       81221
         LA    R2,MGSYN      SET FOR SYNAD MESSAGE               81221
         TM    FLAG,FGERR       HAD A DATA CHECK ?               81221
         BO    BADBLOCK      YES; WRITE MESSAGE AND GET ANOTHER  81221
         XR    R3,R3                                             81221
         ICM   R3,3,DCBIN+DCBLRECL-IHADCB  GET BLOCK SIZE FROM LRECL
         BNZ   BLOCKLNZ      NOT ZERO                            81221
         PRTLIST MGBLK0,DEV=(2)  WRITE ERROR MESSAGE             81221
         OICC  4             MAY BE OK ?                        GP06332
         B     BADCOUNT      UP ERROR COUNT, BUT DO NOT RESET    81221
BLOCKLNZ LA    R2,MGBBDW     SET FOR BAD BDW                     81221
         LH    R0,0(,R8)     GET BLOCK'S PURPORTED LENGTH       GP06332
         CH    R0,=H'8'      VALID SIZE ? (NOTE WYLBUR IS -)    GP06332
         BL    BADBLOCK      NO                                  81221
         CR    R3,R0         MIN(BDW,SIZE)                      GP06332
         BE    BDWEXACT      JUST THE WAY I LIKE IT             GP06332
         BL    BDWEXACT      TRUNCATED ON WRITE ?               GP06332
         LR    R3,R0         USE BDW SIZE                       GP06332
BDWEXACT CLM   R3,12,2(R8)   PROPER BDW (ZEROES IN LOW PORTION) ?
         BE    GOODBLOK      YES; NOW CHECK RDW                  81221
         PRTLIST (R2),DEV=(2)   SHOW BAD BDW                    GP06332
         LA    R0,1                                              81221
         A     R0,NUMBADB                                        81221
         ST    R0,NUMBADB    SET BAD BLOCK COUNT                 81221
         OICC  4             MAY BE OK ?                        GP06332
         B     GOODBLOK      BUT IGNORE ERROR                   GP06332
         SPACE 1
BADBLOCK PRTLIST (R2),DEV=(2)   WRITE ERROR MESSAGE              81221
         BAL   R14,RESETREC  RESET STACKED RECORD                81221
BADCOUNT LA    R0,1                                              81221
         A     R0,NUMBADB                                        81221
         ST    R0,NUMBADB    SET BAD BLOCK COUNT                 81221
         OICC  8             SHOW ERROR                         GP06332
         B     READ          READ ANOTHER BLOCK                  81221
         SPACE 1                                                 81221
GOODBLOK AR    R3,R8         ADDRESS OF LAST BYTE +1 IN BUFFER   81221
         ST    R3,BUFEND          SAVE END ADDR.
         LA    R8,4(,R8)          BUMP PAST BDW
LOOPE    CLI   0(R8),X'80'   LOGICAL END OF BLOCK ?             GP06332
         BE    READ          YES; DONE WITH THIS BLOCK          GP06332
         LA    R2,MGBRDW     SET FOR INVALID RDW                 81221
         LH    R0,0(,R8)     GET LENGTH FROM RDW                 81221
         CH    R0,=H'4'      AT LEAST MINIMUM ?                  81221
         BL    BADBLOCK      NO; BAD RECORD OR BAD BLOCK         81221
         C     R0,MAXLRECL   VALID LENGTH ?                      81221
         BH    BADBLOCK      NO                                  81221
         AR    R0,R8         SET ADDRESS OF LAST BYTE +1         81221
         C     R0,BUFEND     WILL IT FIT INTO BUFFER ?           81221
         BH    BADBLOCK      NO; FAIL                            81221
         TM    3(R8),X'FF'   CLEAN RDW ?                         81221
         BNZ   BADBLOCK                                          81221
         TM    FLAG,FGWHOLE       WAS PREVIOUS RECORD DONE ?     81221
         BNO   NOTDONE            NO
         SPACE
DONE     CLI   2(R8),0            IS THIS A COMPLETE RECORD ?
         BE    PUTWHOLE           YES, WRITE IT FROM INPUT BUFFER
         CLI   2(R8),1            IS THIS A FIRST SEGMENT ?
         BE    MOVESEG            YES, MOVE THIS SEGMENT
         XR    R6,R6                                             81221
         ICM   R6,3,0(R8)    GET SDW LENGTH                      81221
         LA    R8,0(R6,R8)        BUMP PAST SDW AND DATA
         LA    R0,1                                              81221
         A     R0,NUMBADS                                        81221
         ST    R0,NUMBADS    ADD TO SEGMENT SKIP COUNTER         81221
         OICC  8             DATA LOST ?                        GP06322
BUFCHK   C     R8,BUFEND          END OF BUFFER ?
         BL    LOOPE              NO - GET NEXT SEGMENT
         B     READ               GET A NEW BLOCK
         SPACE 2
NOTDONE  CLI   2(R8),2            IS THIS THE LAST SEGMENT ?
         BE    PUT                YES, PUT IT OUT
         CLI   2(R8),3            IS THIS A MIDDLE SEGMENT ?
         BE    MOVESEG            YES, MOVE THIS SEGMENT
         OI    FLAG,FGWHOLE       INDICATE RECORD COMPLETE       81221
         BAL   R14,RESETREC  RESET RECORD INTERFACE              81221
         B     DONE               GO CHECK OUT NEW SEGMENT
         SPACE 2
PUT      OI    FLAG,FGWHOLE       INDICATE RECORD COMPLETE       81221
         BAL   R10,SEG            GO MOVE THIS SEGMENT
         L     R9,OUTBUFF         RESET WORK AREA ADDRESS
         STH   R7,RDW             STORE RDW FOR I/O
         C     R7,MAXLRECL   NOT TOO LARGE ?                     81221
         BNH   PUTPUT1       OK; ACCEPT IT                       81221
PUTLARGE LA    R0,1                                              81221
         A     R0,NUMBADS                                        81221
         ST    R0,NUMBADS    ADD TO SEGMENT SKIP COUNTER         81221
         OICC  8                                                GP06322
         BAL   R14,RESETREC  INCREASE OTHER ERROR COUNTS         81221
         PRTLIST MGBLEN,DEV=(2)                                  81221
         B     PUTSKIP       DO NOT PUT                          81221
PUTWHOLE LR    R9,R8         FAKE INTERFACE - MOVE FROM INPUT    81221
         AH    R8,0(,R8)       AND POSITION TO NEXT SEGMENT      81221
PUTPUT1  PUT   DCBOUT,RDW         WRITE OUT NEW RECORD           81221
PUTPUT2  LA    R0,1                                              81221
         A     R0,OUTREC                                         81221
         ST    R0,OUTREC     UPDATE OUTPUT COUNT                 81221
PUTSKIP  BAL   R14,CLEARREC  RESET RECORD INTERFACE              81221
         B     BUFCHK             GET NEXT RECORD SEGMENT
         SPACE 2
MOVESEG  NI    FLAG,255-FGWHOLE   INDICATE NOT DONE              81221
         BAL   R10,SEG            GO MOVE THIS SEGMENT
         B     BUFCHK             GET A NEW RECORD SEGMENT
         SPACE 2
SEG      XR    R6,R6                                             81221
         ICM   R6,3,0(R8)    GET SDW LENGTH                      81221
         LA    R0,4          MAKE A CHEAP CONSTANT               81221
         SR    R6,R0              MINUS LENGTH OF SDW            81221
         AR    R7,R6         GET LENGTH FOR NEW RDW              81221
         C     R7,SIZERECA   WILL IT FIT ?                       81221
         BH    PUTLARGE      NO; TOO LARGE                       81221
         AR    R8,R0              BUMP PAST SDW ON INPUT         81221
         LR    R14,R9        GET OUTPUT ADDRESS                  81221
         LR    R15,R6        AND LENGTH                          81221
         LR    R1,R6                                             81221
         LR    R0,R8         AND INPUT ADDRESS                   81221
         MVCL  R14,R0        MOVE THE SEGMENT                    81221
         AR    R8,R6         SET NEXT INPUT ADDRESS              81221
         AR    R9,R6         AND NEXT AVAILABLE OUTPUT ADDRESS   81221
         LA    R0,1                                              81221
         A     R0,NUMSEG                                         81221
         ST    R0,NUMSEG     ADD TO SEGMENT COUNTER              81221
         BR    R10                RETURN IF DONE
         SPACE 2
SYNAD    SYNADAF ACSMETH=BSAM                                    81221
         MVC   SYNADMSG,68(R1)  COPY LAST PART OF MESSAGE        81221
         SYNADRLS ,          FREE WORK AREA                      81221
         OI    FLAG,FGERR+FGWHOLE   INDICATE DATA CHECK + DONE   81221
RESETREC ICM   R0,15,NUMSEG  GET NUMBER OF SEGMENTS IN RECORD AREA
         BZ    CLEARREC      NONE; DO NOT CHANGE COUNTS          81221
         A     R0,NUMBADS    INCREASE BAD SEGMENT COUNT          81221
         ST    R0,NUMBADS                                        81221
         LA    R0,1                                              81221
         A     R0,NUMBADR                                        81221
         ST    R0,NUMBADR    INCREASE BAD RECORD COUNT           81221
CLEARREC LA    R7,4          MAKE RDW FOR NEXT TIME              81221
         L     R9,OUTBUFF         RESET WORK AREA ADDR.
         STH   R7,RDW        MAKE NEW RDW                        81221
         STCM  R7,12,RDW+2   CLEAR LOW PORTION OF RDW            81221
         LA    R9,WORKBUFF        BUMP PAST RDW ON OUTPUT
         XR    R15,R15
         ST    R15,NUMSEG    RESET SEGMENT COUNTER               81221
         BR    R14
         SPACE 2
EOF      BAL   R14,RESETREC  ADJUST COUNTS IF UNPROCESSED DATA   81221
         CLOSE (DCBIN,DISP,DCBOUT)   CLOSE FILES                 82248
         PRTSPACE 3,DEV=(1,2)   TRIPLE-SPACE                     81221
         PRTROOM 3,DEV=(1,2)                                     81221
         PRTLIST TOTALS,DEV=(1,2,3)  WRITE TOTAL MESSAGE         81221
         SERVTERM ,          CLOSE AND FREE EVERYTHING ELSE      81221
         L     R9,RETCODE    GET RETURN CODE                    GP06332
         PGMEXIT RC=(R9)                                        GP06332
         SPACE 1                                                 81221
MSGINMIS LA    R1,FDINMIS    SET SYSUT1 MISSING                  81221
         B     BOMBMSG                                           81221
MSGOUMIS LA    R1,FDOUMIS    SET SYSUT2 MISSING OR BAD           81221
         B     BOMBMSG                                           81221
MSGUNSUP LA    R1,FDUNSUP                                        81221
         B     BOMBMSG                                           81221
MSGOUDCB LA    R1,FDOUDCB    BAD DCB PARMS ON SYSUT2             81221
         SPACE 1                                                 81221
BOMBMSG  PRTV  (R1),DEV=(1,2,3)                                  81221
BOMB     CLOSE  (DCBIN,DISP,DCBOUT)                              82248
         SERVTERM ,                                              81221
         ABEND 666,DUMP                                          81221
         SPACE 1                                                 81221
         USING IHADCB,R1                                         81221
INEXIT   NI    DCBOPTCD,DCBOPTZ+DCBOPTQ                          81221
         MVC   OLDRECFM,DCBRECFM                                 81221
         MVC   OLDLRECL,DCBLRECL                                 81221
         MVC   OLDBLKL,DCBBLKSI                                  81221
         MVI   DCBRECFM,DCBRECU                                  81221
         MVC   DCBLRECL,MAXOSBLK                                 81221
         MVC   DCBBLKSI,MAXOSBLK                                 81221
         TM    DCBRECFM,DCBRECLA   ANY RECFM ?                   81221
         BNZ   *+8           YES                                 81221
         OI    DCBRECFM,DCBRECU    DEFAULT TO UNDEFINED          81221
         OC    DCBBLKSI,DCBBLKSI   ANY BLOCKSIZE ?               81221
         BNZR  R14           YES; PROCESS                        81221
         MVC   DCBBLKSI,MAXOSBLK   ELSE SET MAXIMUM PROCESSABLE  81221
         BR    R14                                               81221
         SPACE 1                                                 81221
OUTEXIT  XR    R0,R0                                             81221
         CH    R0,DCBBLKSI   ANY BLOCKSIZE ?                     81221
         BNZ   *+10          YES                                 81221
         MVC   DCBBLKSI,OLDBLKL   COPY BLOCKSIZE FROM INPUT      81221
         CH    R0,DCBLRECL   ANY RECORD LENGTH ?                 81221
         BNZ   *+10          YES; USE IT                         81221
         MVC   DCBLRECL,OLDLRECL  USE OLD RECORD LENGTH          81221
         TM    DCBRECFM,DCBRECLA-DCBRECV  OTHER THAN V ?         81221
         BNZ   MSGOUDCB      YES; BOMB                           81221
         TM    DCBRECFM,DCBRECV  AT LEAST V ?                    81221
         BNZR  R14           YES; TAKE IT                        81221
         MVC   DCBRECFM,OLDRECFM  COPY FROM INPUT                81221
         BR    R14                                               81221
         DROP  R1                                                81221
         SPACE 2
*        CONSTANTS AND STUFF
         SPACE 2
SYSPRINT PRTWORK SYSPRINT,SYSOUT,TITLE=3                         81221
SUMPRINT PRTWORK SUMPRINT,TITLE=3                                81221
CONSOLE  PRTWORK *CONSOLE                                        81221
         SPACE 1                                                 81221
DCBIN    DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),EODAD=EOF,             *
               SYNAD=SYNAD,EXLST=INEXLIST                        81221
INEXLIST DC    0A(0),X'05',AL3(INEXIT),X'87',AL3(0)              81221
DCBOUT   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM),EXLST=OUTEXLST  81221
OUTEXLST DC    0A(0),X'85',AL3(OUTEXIT)                          81221
         SPACE 1                                                 81221
SIZEWORK DC    A(32*1024)    SIZE OF INPUT BUFFER                81221
SIZERECA DC    A(32*1024)    SIZE OF RECORD INTERFACE AREA       81221
MAXOSBLK DC    Y(32*1024-8)  MAX OS/VS BLOCKSIZE FOR TAPE        81221
         SPACE 1                                                 81221
TITLE    FDOPT NL,CC=C'#'    AUTOMATIC DATE/TIME/PAGE OPTION     81278
         FDPRT 'SAVETAPE LISTING OF',PADR                        81278
         FDPRT JFCBDSNM,DEB,PADL                                 81221
         FDCLI JFCBELNM,C' ',BL=TITNMEM,BE=TITNMEM               81221
         FDPRT '('                                               81221
         FDPRT JFCBELNM,DEB                                      81221
         FDPRT ')'                                               81221
TITNMEM  FDPRT 'ON',PAD                                          81221
         FDPRT JFCBVOLS,6,DEB                                    81221
         FDPRT *END                                              81221
         SPACE
TOTALS   FDPRT NUMBLOCK,I,RADJ,LEN=11                            81221
         FDPRT 'BLOCKS READ',PAD                                 81221
         FDPRT NUMBADB,I,RADJ,LEN=11                             81221
         FDPRT 'BLOCKS IN ERROR',PAD                             81221
         FDPRT NUMBADS,I,RADJ,LEN=11                             81221
         FDPRT 'SEGMENTS SKIPPED',PAD                            81221
         FDPRT OUTREC,I,RADJ,LEN=11                              81221
         FDPRT 'RECORDS WRITTEN',PADL                            81221
         FDPRT *END                                              81221
         SPACE 1                                                 81221
FDINMIS  VCON  '-SYSUT1 (INPUT FILE) DD MISSING OR UNUSABLE'     81221
FDOUMIS  VCON  '-SYSUT2 (OUTPUT FILE) DD MISSING OR UNUSABLE'    81221
FDUNSUP  VCON  '-ONLY TAPE AND DISK FILES ARE SUPPORTED BY SAVETAPE'
FDOUDCB  VCON  '-UNSUPPORTED DCB PARAMETERS SPECIFIED FOR SYSUT2'
         SPACE 1                                                 81221
MGSYN    FDPRT 'BLOCK',PADR,NL                                   81221
MGSYNC   FDPRT NUMBLOCK,I,PADR                                   81221
         FDPRT 'I/O ERROR',PAD                                   81221
         FDPRT SYNADMSG,DEB                                      81221
         FDPRT *END                                              81221
         SPACE 1                                                 81221
MGBLK0   FDEXEC MGSYN,MGSYNC                                     81221
         FDPRT 'HAS ZERO LENGTH'                                 81221
         FDPRT *END                                              81221
         SPACE 1                                                 81221
MGBBDW   FDEXEC MGSYN,MGSYNC                                     81221
         FDPRT 'HAS INVALID BLOCK DESCRIPTOR WORD'               81221
         FDPRT 0(R8),4,HEX,PAD                                  GP06332
         FDPRT *END                                              81221
         SPACE 1                                                 81221
MGBRDW   FDEXEC MGSYN,MGSYNC                                     81221
         FDPRT 'INVALID RECORD DESCRIPTOR FOUND'                 81221
         FDPRT 0(R8),4,HEX,PAD                                  GP06332
         FDPRT *END                                              81221
         SPACE 1                                                 81221
MGBLEN   FDEXEC MGSYN,MGSYNC                                     81221
         FDPRT 'CUMULATIVE RECORD SIZE EXCEEDS WORK AREA SIZE'   81221
         FDPRT *END                                              81221
         SPACE 2
SAVE     DSECT ,             ADDENDUM TO SAVE AREA               81221
DB       DC    D'0'          WORK AREA                           81221
         SERVDEFS ,          EXPAND SERVICE DATA                GP06332
INBUFF   DC    A(0)          ADDRESS OF INPUT BLOCK              81221
BUFEND   DC    A(0)            LOWEST ADDRESS PAST INPUT BLOCK   81221
OUTBUFF  DC    A(0)          ADDRESS OF RECORD INTERFACE WORK AREA
MAXLRECL DC    A(0)          MAXIMUM RECORD SUPPORTED (<32K)     81221
NUMBLOCK DC    F'0'          NUMBER OF CURRENT BLOCK             81221
NUMREC   DC    F'0'          NUMBER OF CURRENT RECORD            81221
NUMSEG   DC    F'0'          NUMBER OF CURRENT SEGMENT           81221
NUMBADB  DC    F'0'          NUMBER OF BLOCKS IGNORED            81221
NUMBADR  DC    F'0'          NUMBER OF RECORDS IGNORED           81221
NUMBADS  DC    F'0'          NUMBER OF SEGMENTS SKIPPED          81221
OUTREC   DC    F'0'          NUMBER OF RECORDS WRITTEN           81221
OLDBLKL  DC    H'0'          USER'S BLOCKSIZE                    81221
OLDLRECL DC    H'0'          USER'S RECORD LENGTH                81221
OLDRECFM DC    X'00'         USER'S RECFM                        81221
FLAG     DC    AL1(0)
FGWHOLE  EQU   X'80'                                             81221
FGERR    EQU   X'40'                                             81221
SYNADBLK DC    C' '          SYNADMSG-1 FOR BLANKING             81221
SYNADMSG DC    CL53' '       SYNADAF MESSAGE                     81221
         IEFJFCBN ,          LAST IN WORK AREA                   81221
SAVEEND  EQU   *               END OF SAVE/WORK AREA             81221
         SPACE 1                                                 81221
WORKMAP  DSECT
RDW      DS    H
         DC    H'0'
WORKBUFF EQU   *
         SPACE 2                                                 81221
         PRINT &PRTSYS                                           81221
CVTDSECT DSECT ,                                                 81221
         CVT   DSECT=YES                                         81221
         IHACDE ,                                                81221
         IEFUCBOB ,                                              81221
         DCBD  DSORG=PS                                          81221
         END
