CZAP TITLE 'ZAPOSMEM  --  MAIN STORAGE SUPERZAP FOR MVS/ESA AND OS/390'
***********************************************************************
*                                                                     *
*     'INCORZAP' PROGRAM -- FROM CBT TAPE 451, FILE 421, MEM XACORZAP *
*                                                                     *
*         MAIN STORAGE SUPERZAP PROGRAM FOR BOTH MVS/370 AND MVS/XA.  *
*                                                                     *
*         NOTE:  THIS SOURCE PROGRAM USES OS/390 MACROS AND MUST BE   *
*                ASSEMBLED USING AN OS/390 MACLIB.                    *
*                                                                     *
***********************************************************************
*
*      -- MODULE HISTORY:
*
*         1974 - ORIGINAL WRITTEN BY R. BUDGE, IBM CORP.
*         IN PL/S LANGUAGE.
*
*         1979-81 - ASSEMBLER SOURCE GENERATED AND COMMENTED BY
*         BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION), MCLEAN VA,
*         ALSO MADE PARM FIELD INPUT INDEPENDENT OF ENTRY POINT NAME.
*
*         1983 - XA AND SP1.3 CHANGES ADDED, ALONG WITH ADDITIONAL
*         COMMENTS BY R. BUDGE, NAS CORP.
*                                                             12/90 JEB
*         1990 - CHANGED HARD CODED LOAD (SVC 8) TO STANDARD  12/90 JEB
*         MACRO FORM TO SUPPORT LSEARCH=YES SO THAT LPA       12/90 JEB
*         MODULES WILL LOAD WHEN 'LOCAL' IS SPECIFIED.        12/90 JEB
*         THIS CHANGE WORKED ON BOTH SP1.3.5 AND XA2.2.0      12/90 JEB
*         JOHN E. BRYANT, COMPUSOURCE, CARY NC                12/90 JEB
*                                                             12/90 JEB
*         2004 - ADDED MNEMONICS TO DUMPT OUTPUT                GP04126
*         ADDED SUPPORT (MEDDLED) FOR ESA AND OS/390,           GP04126
*         E.G., CHANGED GETMAIN/FREEMAIN TO STORAGE, AMODE 31,  GP04126
*         ADDRESSABILITY, MAINTAINABILITY. DROPPED PRE-XA CODE. GP04126
*         AFTER A SYNTAX OR VERIFY ERROR, PROGRAM NOW CONTINUES GP04129
*           IN ORDER TO CATCH ADDITIONAL ERRORS IN THE SAME RUN GP04129
*         ADDED DIAGNOSTIC INFO TO SOME ERROR MESSAGES          GP04129
*         RENAMED TO ZAPOSMEM TO DISTINGUISH FROM OLD CODE      GP04126
*           (BETTER THAN ZAPMEMOS???)                           GP04126
*         GERHARD POSTPISCHIL, EXPERT SYSTEM PROGRAMMING, BRADFORD, VT
*
*
*
*      -- COMPLETE DOCUMENTATION IS IN A SEPARATE FILE.
*
*      -- BRIEF DOCUMENTATION.
*
*          THIS PROGRAM MODIFIES LOAD MODULES IN THE NUCLEUS OR
*          IN THE LINK PACK AREA.  MODIFIED PAGES IN LPA WILL BE
*          FIXED TO PREVENT PAGE-INS THAT WOULD UN-MODIFY THE
*          MODIFIED PAGE.  CONTROL STATEMENT INPUT IS COMPATIBLE
*          WITH THE 'AMASPZAP' SERVICE AID PROGRAM, EXCEPT THE
*          PRESENCE OF A SLASH ('/') ANYWHERE IN A CARD IS USED
*          AS AN INDICATION OF MULTIPLE STATEMENTS PER CARD.
*          A 'RES' IS LIKE A 'REP' EXCEPT IT FREES A FIXED LPA PAGE.
*
*          DDNAMES USED:
*           SYSPRINT - MESSAGE AND DUMP OUTPUT.
*           SYSLIB   - SYS1.LPALIB FOR LPA ZAPS,
*                      SYS1.NUCLEUS FOR NUCLEUS ZAPS.
*                      OPENED FOR UPDATE, BUT NOT ACTUALLY UPDATED.
*           SYSIN    - CONTROL STATEMENT INPUT.
*
*           IF DDNAMES PROGLIST, PROGLIB, AND PROGIN ARE PRESENT,
*           THEY WILL BE USED INSTEAD OF THE OTHERS.
*
*          CONTROL STATEMENTS MAY OPTIONALLY BE SPECIFIED IN
*          THE PARM FIELD INSTEAD OF SYSIN.
*
*          'VER' 'REP' AND 'RES' COMMANDS MAY USE PROGRAM LABELS
*          INSTEAD OF HEX OFFSETS IF DESIRED.  ANY ENTRY POINT
*          MAY BE USED AS A LABEL. OTHER LABELS CAN BE USED ONLY
*          IF PROGRAM IS COMPILED AND LINKED WITH THE 'TEST'
*          ATTRIBUTE.  (DOES NOT APPLY NUCLEUS MODULES IN MVS/XA.
*          TELL ZAPOSMEM YOU ARE USING A LABEL INSTEAD
*          OF A HEX OFFSET BY ENCLOSING IT IN SINGLE QUOTES.
*
*     THE PROGRAM MUST BE LINK-EDITED AS AUTHORIZED IN ORDER
*     TO MODIFY STORAGE, BUT OTHER FUNCTIONS WILL WORK EVEN
*     IF IT IS NOT AUTHORIZED. ***NO***
*     THE CODE ISSUES A MODESET REGARDLESS, AND BOMBS ON S047
*     WHEN UNAUTHORIZED.
*-------------------------------------------------------------------*
         MACRO ,                                                GP04126
&NM      VERB  &TXT,&ADR                                        GP04126
         AIF   ('&TXT' EQ '').MISST                             GP04126
         AIF   ('&ADR' EQ '').MISSA                             GP04126
         AIF   ('&TXT'(1,1) EQ '''').HAVEQ                      GP04126
&NM      DC    CL3'&TXT ',AL2(&ADR-ZAPOSMEM)                    GP04126
         MEXIT ,                                                GP04126
.HAVEQ   ANOP  ,                                                GP04126
&NM      DC    CL3&TXT,AL2(&ADR-ZAPOSMEM)                       GP04126
         MEXIT ,                                                GP04126
.MISST   MNOTE 8,'VERB: FIRST OPERAND (VERB) REQUIRED'          GP04126
         MEXIT ,                                                GP04126
.MISSA   MNOTE 8,'VERB: SECOND OPERAND (ADDRESS) REQUIRED'      GP04126
         MEND  ,                                                GP04126
         SPACE 1                                                GP04127
         MACRO ,                                                GP04127
&NM      MSG   &TEXT                                            GP04127
         LCLA  &K                                               GP04127
         AIF   ('&TEXT' EQ '').MISST                            GP04127
&K       SETA  K'&TEXT-2     TEXT+2 QUOTES -1 FOR EXEC          GP04127
         AIF   (&K LT 1).MISST                                  GP04127
         AIF   ('&TEXT'(1,1) NE '''').MISST                     GP04127
&NM      DC    AL1(&K-1),CL(&K)&TEXT                            GP04127
         MEXIT ,                                                GP04126
.MISST   MNOTE 8,'MSG: QUOTED TEXT OPERAND REQUIRED'            GP04127
         MEND  ,                                                GP04127
         SPACE 1                                                GP04127
         MACRO ,                                                GP04127
&NM      SENTRY &SAVE=                                          GP04127
         GBLC  &ZZSESAN(64),&ZZSESAV  TOTAL SAVE AREAS REF/CURRENT
         GBLA  &ZZSESA#      SAVE AREA COUNT                    GP04127
         GBLC  &SYSSPLV      RELEASE WERE RUNNING UNDER         GP04127
.*--------------------------------------------------------------------*
.*   SUBROUTINE ENTRY SEQUENCE                                        *
.*   FOR OLD SYSTEM, CREATE A SAVE AREA FOR EACH ROUTINE (UNLESS      *
.*     OVERRIDDEN ON SAVE= OPERAND                                    *
.*   FOR NEW SYSTEM, USE BAKR HERE AND PR IN SEXIT                    *
.*--------------------------------------------------------------------*
         AIF   ('&SYSSPLV' NE '').SETDONE                       GP04127
         SPLEVEL SET         SET SYSTEM DEFAULT                 GP04127
.SETDONE AIF   ('&SYSSPLV' EQ '1' OR '&SYSSPLV' EQ '').OLDMODE  GP04127
&NM      BAKR  R14,0         SAVE EVERYTHING                    GP04127
&ZZSESAV SETC  ''            ENSURE SEXIT KNOWS TO USE PR       GP04127
         MEXIT ,                                                GP04127
.OLDMODE AIF   ('&SAVE' EQ '').GENSAVE  NEED AN AREA            GP04127
&ZZSESAV SETC  '&SAVE'       ENSURE SEXIT KNOWS TO THIS AREA    GP04127
&NM      STM   R14,R12,&ZZSESAV  SAVE ENTRY REGISTERS           GP04127
         MEXIT ,                                                GP04127
.GENSAVE ANOP  ,                                                GP04127
&ZZSESA# SETA  &ZZSESA#+1                                       GP04127
&ZZSESAV SETC  'DYSV'.'&ZZSESA#'                                GP04127
&ZZSESAN(&ZZSESA#) SETC '&ZZSESAV'                              GP04127
&NM      STM   R14,R12,&ZZSESAV  SAVE ENTRY REGISTERS           GP04127
         MEND  ,                                                GP04127
         SPACE 1                                                GP04127
         MACRO ,                                                GP04127
&NM      SEXIT &R15=                                            GP04127
         GBLC  &ZZSESAV      CURRENT SAVE AREA NAME (FROM SENTRY)
.*--------------------------------------------------------------------*
.*   SUBROUTINE EXIT SEQUENCE                                         *
.*   FOR NULL SAVE AREA NAME, USE PR                                  *
.*   OTHERWISE LM AND BR 14                                           *
.*   IF R15 IS USED, IT WILL BE PASSED BACK                           *
.*--------------------------------------------------------------------*
         LCLC  &LBL                                             GP04127
&LBL     SETC  '&NM'                                            GP04127
         AIF   ('&ZZSESAV' NE '').OLDMODE                       GP04127
         AIF   ('&R15' EQ '').PRALL                             GP04127
         AIF   (K'&R15 LT 3).PRABS                              GP04127
         AIF   ('&R15'(1,1) NE '(').PRABS                       GP04127
         AIF   ('&R15'(K'&R15,1) NE ')').PRABS                  GP04127
         AIF   ('&R15'(2,1) EQ '(').PRABS                       GP04127
         AIF   ('&R15'(K'&R15-1,1) EQ ')').PRABS                GP04127
         AIF   ('&R15(1)' EQ 'R15' OR '&R15(1)' EQ 'RF'                *
               OR '&R15(1)' EQ '15').PR0R1                      GP04127
&LBL     LR    R15,&R15(1)                                      GP04127
&LBL     SETC  ''                                               GP04127
         AGO   .PR0R1                                           GP04127
.*                                                              GP04127
.PRABS   ANOP  ,                                                GP04127
&LBL     LA    R15,&R15(1)                                      GP04127
&LBL     SETC  ''                                               GP04127
.*                                                              GP04127
.PR0R1   ANOP  ,                                                GP04127
&LBL     EREG  R0,R1         RESTORE ENTRY REGS                 GP04127
&LBL     SETC  ''                                               GP04127
         AGO  .PRDON                                            GP04127
.*                                                              GP04127
.PRALL   ANOP  ,                                                GP04127
&LBL     EREG  R15,R1        RESTORE ENTRY VALUES               GP04127
&LBL     SETC  ''                                               GP04127
.*                                                              GP04127
.PRDON   ANOP  ,                                                GP04127
&LBL     PR    ,             RESTORE ENTRY CONDITIONS AND RETURN
&LBL     SETC  ''                                               GP04127
         MEXIT ,                                                GP04127
.*                                                              GP04127
.OLDMODE AIF   ('&R15' EQ '').OMALL                             GP04127
         AIF   (K'&R15 LT 3).OMABS                              GP04127
         AIF   ('&R15'(1,1) NE '(').OMABS                       GP04127
         AIF   ('&R15'(K'&R15,1) NE ')').OMABS                  GP04127
         AIF   ('&R15'(2,1) EQ '(').OMABS                       GP04127
         AIF   ('&R15'(K'&R15-1,1) EQ ')').OMABS                GP04127
         AIF   ('&R15(1)' EQ 'R15' OR '&R15(1)' EQ 'RF'                *
               OR '&R15(1)' EQ '15').OM0R1                      GP04127
&LBL     LR    R15,&R15(1)                                      GP04127
&LBL     SETC  ''                                               GP04127
         AGO   .OM0R1                                           GP04127
.*                                                              GP04127
.OMABS   ANOP  ,                                                GP04127
&LBL     LA    R15,&R15(1)                                      GP04127
&LBL     SETC  ''                                               GP04127
.*                                                              GP04127
.OM0R1   ANOP  ,                                                GP04127
&LBL     L     R14,&ZZSESAV  RESTORE RETURN ADDRESS             GP04127
&LBL     SETC  ''                                               GP04127
         LM    R0,R12,8+&ZZSESAV                                GP04127
         AGO  .OMDON                                            GP04127
.*                                                              GP04127
.OMALL   ANOP  ,                                                GP04127
&LBL     LM    R14,R12,&ZZSESAV  RESTORE ALL BUT R13            GP04127
&LBL     SETC  ''                                               GP04127
.*                                                              GP04127
.OMDON   ANOP  ,                                                GP04127
&LBL     BR    R14           RESTORE AND RETURN                 GP04127
         MEND  ,                                                GP04127
         SPACE 1                                                GP04127
         MACRO ,                                                GP04127
         SSAVE ,                                                GP04127
         GBLC  &ZZSESAN(64),&ZZSESAV  TOTAL SAVE AREAS REF/CURRENT
         GBLA  &ZZSESA#      SAVE AREA COUNT                    GP04127
.*--------------------------------------------------------------------*
.*   EXPAND ANY SAVE AREAS REQUESTED BY SENTRY                        *
.*--------------------------------------------------------------------*
         LCLA  &I                                               GP04127
.LOOP    AIF   (&I GE &ZZSESA#).MEND                            GP04127
&I       SETA  &I+1                                             GP04127
&ZZSESAN(&I) DS 15A          SUBROUTINE SAVE AREA               GP04127
         AGO   .LOOP                                            GP04127
.MEND    MEND  ,                                                GP04127
         SPACE 1
         PUNCH ' ORDER ZAPOSMEM(P) '  MAKE DUMPS EASIER         GP04126
         EJECT ,
ZAPOSMEM START 0                                                GP04126
ZAPOSMEM AMODE 31                                               GP04126
ZAPOSMEM RMODE 24            OLD FASHIONED DCBS AND EODAD
         B     START-*(,R15)
         DC    AL1(19)
         DC    C'ZAPOSMEM  &SYSDATE '
START    STM   R14,R12,12(R13)
         LA    R11,0(,R15)   BASE REGISTER CLEARED              GP04126
         LA    R5,2048                                          GP04126
         LA    R12,2048(R5,R11)    SECOND BASE                  GP04126
         USING ZAPOSMEM,R11,R12                                 GP04126
         L     R3,SIZE                                          GP04126
         STORAGE OBTAIN,LENGTH=(R3),LOC=BELOW,BNDRY=PAGE        GP04126
         LR    R10,R1              WORKAREA BASE
         LR    R2,R1         COPY                               GP04126
         SR    R15,R15       ZERO INSERTION                     GP04126
         MVCL  R2,R14        CLEAR IT OUT                       GP04126
         LA    R5,2048(R5,R10)     WORKAREA BASE                GP04129
         USING @DATA,R10,R5                                     GP04129
         ST    R13,4(,R10)         PUT OLD ADDRESS IN NEW SAVEAREA
         LM    R0,R1,20(R13)       RESTORE R0 AND R1
         ST    R10,8(,R13)         PUT NEW ADDRESS IN OLD SAVEAREA
         LR    R13,R10             SWITCH TO NEW SAVEAREA
         MVC   @PARMPTR,0(R1)      SAVE ADDRESS OF PARM FIELD
         BAS   R14,INIT            INITIALIZE                   GP04127
         EJECT ,
*
*   MAINLINE ROUTINE
*
*               DO WHILE XFEOD=0
*                  CALL GETREC
*                  IF XFEOD=0 THEN
*                     CALL PRINTREC
*                     CALL VERBSCN
*                     END
*                  END
*               CLOSE FILES
*               RETURN
*
         SPACE 1
         B     MAINBUMP
MAINLOOP BAS   R14,GETREC          GET A LOGICAL RECORD         GP04127
         TM    XFLAGS,XFEOD
         BNZ   MAINBUMP
         L     R14,XFLDSTRT        POINT TO DATA TO BE MOVED
         L     R6,XENDREC          GET ADDRESS OF END OF DATA   GP04126
         SLR   R6,R14              COMPUTE LENGTH               GP04126
         EX    R6,EXLOGMVC         MOVE R14 TO @LINE01          GP04126
         OI    XFLAGS,XFNOWTO      FOR PRINT BUT NOT FOR XFCON  GP04128
         BAS   R14,PUTLINE         LOG THE STATEMENT            GP04127
         NI    XFLAGS,255-XFNOWTO                               GP04128
         MVC   XEBV,BLANKS      CLEAR IN CASE NULL              GP04129
         BAS   R14,VERBSCN                                      GP04127
MAINBUMP TM    XFLAGS,XFEOD
         BZ    MAINLOOP
         CLOSE ,MF=(E,DYNOPEN)  CLOSE ALL DCBS                  GP04126
         L     R6,XCODE            SAVE RC ACROSS FREEMAIN      GP04126
         L     R13,4(,R13)         SWITCH TO OLD SAVEAREA
         L     R0,SIZE             LENGTH FOR FREEMAIN
         STORAGE RELEASE,LENGTH=(0),ADDR=(R10)                  GP04126
         LR    R15,R6              RETURN CODE                  GP04126
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14                 EXIT PROGRAM
         EJECT ,
*
*   ROUTINE TO DUMP MAIN STORAGE
*
*        INPUT: XCSADDR=ADDRESS OF CSECT TO BE DUMPED
*               XCSLEN = LENGTH TO DUMP
*
         SPACE 1
DUMP     SENTRY ,                                               GP04127
         L     R7,XCSLEN     GET LENGTH                         GP04126
         LA    R7,0(,R7)            AND                         GP04126
         LA    R7,7(,R7)     ROUND UP TO NEXT DOUBLE WORD       GP04126
         N     R7,=X'7FFFFFF8'                                  GP04126
         BZ    DUMPEXIT      SKIP EMPTY                         GP04127
         L     R14,=X'7FFFFFFC'    MASK TO ROUND TO WORD BOUND  GP04126
         L     R6,XCSADDR          GET STARTING ADDRESS         GP04126
         LA    R6,3(,R6)           ADJUST FOR ROUND             GP04126
         ALR   R7,R6               ADD TO START ADDRESS         GP04126
         NR    R7,R14              ROUND DOWN TO MULTIPLE OF 4  GP04126
         OI    XFLAGS,XFNOWTO      DON'T DUMP TO CONSOLE        GP04128
         MVC   XHEXL,=F'4'                                      GP04129
         NR    R6,R14              ROUND TO MULTIPLE OF 4       GP04126
         B     DUMPLOOP                                         GP04126
         SPACE 1                                                GP04126
*---------------------------------------------------------------------*
*   CLEAR THE OUTPUT LINE AND TEXT HOLDER, THEN FORMAT THE ADDRESS    *
*---------------------------------------------------------------------*
DUMPLOOP XC    LOCTEXT,LOCTEXT                                  GP04126
         BAS   R14,MODESET1        GET INTO KEY 0               GP04126
         LR    R4,R7               GET LAST BYTE ADDRESS        GP04126
         SR    R4,R6               BYTES LEFT                   GP04126
         BNP   DUMPLAST            NO MORE                      GP04126
         CH    R4,=AL2(L'DDTEXT)   NOT MORE THAN ONE LINE       GP04126
         BNH   *+8                                              GP04126
         LA    R4,L'DDTEXT         TRUNCATE                     GP04126
         BCTR  R4,0                EXECUTE                      GP04126
         EX    R4,EXMVCLOC                                      GP04126
         BAS   R14,MODESET2        GET BACK TO USER KEY         GP04126
         LR    R0,R6         CURRENT LINE ADDRESS               GP04126
         LA    R15,DDADDR    ADDRESS FIELD                      GP04126
         BAS   R14,HEXCON    CONVERT FROM HEX TO PRINTABLE      GP04126
         CLC   =C'DUMPT',XEBV      IS IT DUMP WITH MNEMONICS ?  GP04126
         BE    DUMPT               YES; DO DIFFERENTLY          GP04126
         SPACE 1                                                GP04126
*---------------------------------------------------------------------*
*   PROCESS DUMP MODE (HEX, TEXT, NO INSTRUCTION CODES)               *
*---------------------------------------------------------------------*
         EX    R4,EXMVCTXT                                      GP04126
         L     R14,=A(EBCDIC)                                   GP04126
         TR    DDTEXT,0(R14)  PRINTABLES ONLY                   GP04126
         MVI   DDLAST,C'*'                                      GP04126
         MVI   DDRAST,C'*'                                      GP04126
         LA    R15,DDHEX1    POINT TO FIRST HEX FIELD           GP04126
         LA    R3,2          TWO GROUPS PER LINE                GP04126
DUMPGRUP LA    R2,4          FOUR WORDS PER GROUP               GP04126
DUMPWORD CR    R6,R7         DONE YET ?                         GP04126
         BNL   DUMPLAST      YES; QUIT NOW                      GP04126
         ICM   R0,15,0(R6)   LOAD VALUE                         GP04126
         BAS   R14,HEXCON    CONVERT TO PRINTABLE               GP04126
         LA    R6,4(,R6)     ADVANCE INPUT                      GP04126
         BCT   R2,DUMPWORD   DO FOUR WORDS PER GROUP            GP04126
         LA    R15,2(,R15)   EXTRA GROUP GAP                    GP04126
         BCT   R3,DUMPGRUP   DUMP NEXT GROUP                    GP04126
DUMPLAST BAS   R14,PUTLINE                                      GP04126
         B     DUMPLING      TEST FOR ANOTHER LINE              GP04126
         SPACE 1                                                GP04126
*---------------------------------------------------------------------*
*   PROCESS DUMPT MODE (HEX, TEXT, INSTRUCTION CODES)                 *
*---------------------------------------------------------------------*
DUMPT    MVC   DLTEXT,LOCTEXT  MOVE TOP HALF                    GP04126
         L     R14,=A(EBCDIC)                                   GP04126
         TR    DLTEXT,0(R14)  PRINTABLES ONLY                   GP04126
         MVI   DLLAST,C'*'                                      GP04126
         MVI   DLRAST,C'*'                                      GP04126
         MVC   D2TEXT,LOCTEXT+L'DLTEXT  BOTTOM HALF             GP04126
         L     R14,=A(EBCDIC)                                   GP04126
         TR    D2TEXT,0(R14)  PRINTABLES ONLY                   GP04126
         MVI   D2LAST,C'*'                                      GP04126
         MVI   D2RAST,C'*'                                      GP04126
         LA    R8,DLHEX1A    POINT TO FIRST HEX FIELD           GP04127
         LA    R4,2          TWO GROUPS                         GP04127
DUMPTGR2 LA    R3,4          FOUR WORDS                         GP04127
DUMPTGR1 LA    R2,2          TWO HALF WORDS                     GP04127
         CR    R6,R7         DONE YET ?                         GP04126
         BNL   DUMPTEND      YES; QUIT NOW                      GP04126
DUMPTWD  LH    R0,0(,R6)     GET VALUE                          GP04127
         LR    R15,R8        POINT TO OUTPUT                    GP04127
         BAS   R14,HEXHALF   CONVERT HALF WORD                  GP04127
         ST    R6,DB         ADDRESS OF TEXT                    GP04127
         LA    R15,XHS       ADEQUATE BUFFER                    GP04127
         ST    R15,DB+4      SET OUTPUT ADDRESS                 GP04127
         OI    DB+4,X'80'    VL BIT                             GP04127
         LA    R1,DB                                            GP04127
         L     R15,=V(SUBINST)  GET INSTRUCTION LOOKUP ROUTINE  GP04127
         BASR  R14,R15       CALL IT                            GP04127
         LTR   R15,R15       VALID ?                            GP04127
         BNZ   DUMPTUP       NO; LEAVE BLANK                    GP04127
         MVC   @LINE2-@LINE(5,R8),XHS+15                        GP04127
DUMPTUP  LA    R8,5(,R8)     UP A HALF WORD                     GP04127
         LA    R6,2(,R6)     DITTO                              GP04127
         BCT   R2,DUMPTWD    COMPLETE WORD                      GP04127
         LA    R8,1(,R8)     EXTRA SPACE AFTER WORD             GP04127
         BCT   R3,DUMPTGR1   COMPLETE PAIR                      GP04127
         LA    R8,3(,R8)     EXTRA SPACE AFTER GROUP            GP04127
         BCT   R4,DUMPTGR2   COMPLETE GROUP                     GP04127
DUMPTEND BAS   R14,PUTLINE   PRINT TOP LINE                     GP04126
         BAS   R14,PUTLINE2  PRINT BOTOM LINE                   GP04126
         SPACE 1                                                GP04126
DUMPLING CR    R6,R7         DONE YET ?                         GP04126
         BL    DUMPLOOP      NO; DO ANOTHER                     GP04126
DUMPEXIT NI    XFLAGS,255-XFNOWTO                               GP04128
         SEXIT ,                                                GP04127
         EJECT ,
*
*   FIND MODULE ON PROGRAM LIBRARY
*
         SPACE 1
FIND     SENTRY ,                                               GP04127
         FIND  DYNDCBLB,XEBLM,D    FIND MEMBER BY NAME          GP04126
         LTR   R15,R15             WAS MEMBER FOUND
         BZ    FINDX               YES, BRANCH                  GP04126
         LA    R14,MSG08           MEMBER NOT FOUND IN LIBRARY
         ST    R14,XMSE
         BAS   R14,GENERR                                       GP04127
         OC    ZFLAGS,SCANFLAG  SET REQUEST SPECIFIC ERROR FLAG GP04129
FINDX    SEXIT ,                                                GP04127
         EJECT ,
*
*   PGFIX/FREE ROUTINE
*
*        INPUT:
*              XZADDR = ADDR OF STORAGE TO BE CHANGED
*              XHL = LENGTH OF STORAGE
*              XEBV = VERB
*
         SPACE 1
FIXER    SENTRY ,                                               GP04127
         L     R14,CVTPTR          CVT ADDRESS                  GP04126
         TM    XFLAGS,XFLOCSW
         BNZ   PAGEX
         CLC   IEANUC,XEBLM        IS THIS A NUCLEUS ZAP        GP04129
         BE    PAGEX               YES, NO NEED TO FIX/FREE
         BAS   R14,MODESET1        SUP STATE, KEY ZERO          GP04127
         AL    R13,=F'12'          CHANGE R13 FOR SETLOCK       GP04129
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,RELATED=X
         SLR   R4,R4               NO TCB - PGFIX NOT TO BE OWNED
         SLR   R14,R14             CLEAR
         ST    R14,XPECB           THE ECB
         LA    R0,XPECB            ECB ADDRESS
         L     R14,XZADDR          GET STARTING ADDRESS
         LR    R1,R14              STARTING ADDRESS
         AL    R14,XHL             COMPUTE ENDING ADDRESS
         LR    R2,R14              ENDING ADDRESS+1
         BCTR  R14,0               ENDING ADDRESS
         CLC   XEBV(3),RESET       IS THIS A RES
         BE    FREEPG              YES, FREE THE PAGE
         L     15,CVTPTR                                        GP04126
         TM    CVTDCB-CVT(R15),CVTMVSE IS THIS MVS/XA
         BZ    PASTFIX1            NO, SKIP XA PGFIX
FIXPAGE  PGSER R,FIX,A=(1),EA=(R14),TCB=0,ECB=(0),LONG=Y,BRANCH=Y, XXXXX
               RELATED=FREEPAGE
         B     SVPSRC
PASTFIX1 DS    0H                                               GP04127
         O     R1,PGFIX            NO, FIX THE PAGE
         B     MVS370BR            SKIP OVER FREE
*
FREEPG   DS    0H                                               GP04127
         L     R15,CVTPTR                                       GP04126
         TM    CVTDCB-CVT(R15),CVTMVSE IS THIS MVS/XA
         BZ    PASTFRE1
FREEPAGE PGSER R,FREE,A=(1),EA=(R14),TCB=0,BRANCH=Y,RELATED=FIXPAGE
         B     SVPSRC
*
PASTFRE1 DS    0H                                               GP04127
         O     R1,PGFREE           FREE THE PAGE
MVS370BR DS    0H                                               GP04127
         L     R6,CVTPTR           CVT ADDRESS                  GP04126
         L     R15,804(,R6)        CVTVPSIB - PAGE SERVICES     GP04126
         BASR  R14,R15             CALL PAGE SERVICES           GP04127
SVPSRC   LR    R8,R15              SAVE RETURN CODE             GP04127
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=X
         SL    R13,=F'12'          PUT R13 BACK TO NORMAL       GP04129
         BAS   R14,MODESET2        PROB STATE, KEY NZERO        GP04127
         C     R8,=F'8'            DID PAGE SERVICES RETURN 8?  GP04129
         BNE   PAGEX               NO, NO NEED TO WAIT
         WAIT  ECB=XPECB
PAGEX    SEXIT ,                                                GP04127
         EJECT ,
*
*   GENERAL ERROR ROUTINE
*
*        INPUT:  XMSE = ADDR OF MESSAGE LIST
*
         SPACE 1
GENERR   SENTRY ,                                               GP04127
         L     R14,XMSE            GET ADDRESS OF MESSAGE
         SR    R6,R6                                            GP04127
         IC    R6,0(,R14)          GET LENGTH OF MESSAGE        GP04126
         EX    R6,EXPUTMVC         MOVE R14+1 TO @LINE01        GP04126
         BAS   R14,PUTLINE         WRITE THE MESSAGE            GP04127
         OI    XCODE+3,12          SET RETURN CODE              GP04128
         OI    ZFLAGS,ZFSERR       CONTINUE IN VER ONLY MODE    GP04128
         SEXIT ,                                                GP04127
         EJECT ,
*
*    FIELD FETCHING ROUTINE
*
*        INPUT:
*              XRCVADDR = ADDR OF RECEIVING FIELD
*              XRCVLEN = LENGTH OF RECEIVING FIELD
*        OUTPUT:
*              XFLDALEN = ACTUAL LENGTH OF FETCHED FIELD
*                  (BLANKS ARE RETURNED IF NO FIELD IS FOUND)
*
         SPACE 1
GETFLD   SENTRY ,                                               GP04127
         L     R3,XFLDSTRT                                      GP04129
         SLR   R14,R14             SET
         ST    R14,XFLDALEN        FIELD LENGTH                 GP04129
*
*   SCAN PAST LEADING DELIMITERS
*
         L     R4,XENDREC          LOAD LAST VALID ADDRESS      GP04129
         BAS   R14,OPSTART         FIND NON-BLANK               GP04129
         ST    R3,XFLDSTRT   UPDATE START                       GP04129
         CR    R3,R4               DID WE ?                     GP04129
         BH    GETFLEND            NO; RETURN ZILCH             GP04129
         LA    R0,C' '       SET BLANK AS STOPPER               GP04129
         CLI   0(R3),C''''   QUOTE ?                            GP04129
         BNE   GETFLBLK                                         GP04129
         LA    R0,C''''      STOP ON APOSTROPHE "QUOTE"         GP04129
         LA    R3,1(,R3)     FIRST SCAN POSITION                GP04129
GETFLBLK LA    R15,1(,R4)    END TEXT + 1                       GP04129
         SRST  R15,R3        LOOK FOR END                       GP04129
         BO    *-4             RUDE INTERRUPTION                GP04129
         BH    GETFLQOD      UNBALANCED QUOTES                  GP04129
         L     R2,XFLDSTRT         INPUT START                  GP04126
         LR    R3,R15        STOP                               GP04129
         ST    R3,XFLDSTRT   NEXT INPUT START                   GP04126
         CLI   0(R3),C''''   END QUOTE ?                        GP04129
         BNE   GETFLMVC                                         GP04129
         LA    R3,1(,R3)     SKIP OVER IT                       GP04129
         ST    R3,XFLDSTRT   NEXT INPUT START                   GP04126
         SH    R3,=H'2'      MOVE WITHOUT QUOTES                GP04129
         LA    R2,1(,R2)     SKIP LEADING QUOTE                 GP04129
*
*   CALCULATE LENGTH AND CHECK FOR A TOO LONG FIELD
*
GETFLMVC SR    R3,R2         COMPUTE LENGTH                     GP04129
         ST    R3,XFLDALEN   SAVE LENGTH                        GP04129
         C     R3,XRCVLEN    WILL IT FIT IN RESULT              GP04129
         BNH   GETFLLOK      YES, BRANCH                        GP04129
         LA    R14,MSG01           FIELD IS TOO LONG
         ST    R14,XMSE
         BAS   R14,SYNERR          SYNTAX ERROR                 GP04127
*
*   MOVE IN FETCHED FIELD (IF ANY)
*
GETFLLOK L     R14,XRCVADDR        GET ADDRESS OF GETFLD RESULT GP04129
         L     R15,XRCVLEN           AND LENGTH                 GP04126
         ICM   R3,8,BLANKS   SET FOR BLANK PADDING              GP04129
         MVCL  R14,R2        MOVE WITH POSSIBLE TRUNCATION      GP04129
         B     GETFLEND                                         GP04129
         SPACE 1                                                GP04129
GETFLQOD LA    R14,MSG13           UNBALANCED QUOTES            GP04127
         ST    R14,XMSE                                         GP04127
         BAS   R14,SYNERR          SYNTAX                       GP04127
GETFLEND SEXIT ,                                                GP04127
         EJECT ,
*
*   HEXADECIMAL FIELD FETCHING ROUTINE
*
*        INPUT:
*              XFLDSTRT = ADDR OF START OF FIELD
*        OUTPUT:
*              XHS = HEX STRING
*              XHSL = LENGTH OF HEX STRING
*
GETHEX   SENTRY ,                                               GP04127
         SLR   R14,R14
         ST    R14,XHL          SET LEN = 0
         L     R3,XFLDSTRT   START WITH FIELD START             GP04127
         L     R4,XENDREC    LAST INPUT BYTE                    GP04127
         LA    R6,XHS        POINT TO OUTPUT FIELD              GP04127
         SR    R7,R7         CURRENT OUTPUT LENGTH              GP04127
         BAS   R14,OPSTART   FIND A NON-BLANK                   GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   CHECK SCAN END; IF NOT, SET UP FOR TRT                            *
*---------------------------------------------------------------------*
GETHXLUP LR    R15,R4        COPY INPUT END                     GP04127
         SR    R15,R3        LESS CURRENT START                 GP04127
         BM    GETHXDON      NO MORE; CHECK FOR SOME DATA       GP04127
         C     R15,=F'8'     DO EIGHT BYTES AT A TIME (FITS DB) GP04127
         BL    *+8           OK                                 GP04127
         LA    R15,7         ELSE TRUNCATE                      GP04127
         LA    R1,1(R15,R3)  SET SCAN STOP ADDRESS              GP04127
         SR    R2,R2         CLEAR FOR BRANCH                   GP04127
         L     R14,=A(HEXTRT)  PARSING TABLE                    GP04127
         EX    R15,EXHEXTRT  CHOP                               GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   CHECK THE RESULT (PARTIAL)                                        *
*---------------------------------------------------------------------*
         CLM   R2,1,1(R14)   INVALID CHARACTER ?                GP04127
         BE    GETHXBAD      YES; QUIT NOW                      GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   PROCESS THE TEXT PRIOR TO THE STOPPER - IGNORE NULL STRING        *
*---------------------------------------------------------------------*
         LR    R8,R1         COPY STOP ADDRESS                  GP04127
         SR    R8,R3         LESS START ADDRESS                 GP04127
         BNP   GETHXJMP      NULL; DO STOPPER                   GP04127
         EX    R8,EXTSTODD   ODD NUMBER OF CHARACTERS?          GP04127
         BNZ   GETHXODD      YES; FAIL                          GP04127
         MVC   DB,0(R3)      MOVE 8 BYTES; ANYWAY               GP04127
         L     R14,=A(HEXTR)                                    GP04127
         TR    DB,0(R14)     CONVERT TO HEX BYTES               GP04127
         PACK  0(5,R6),DB(9)  PACK TO OUTPUT                    GP04127
         AR    R3,R8         ADVANCE INPUT SCANNER              GP04127
         SRL   R8,1          HALVE                              GP04127
         AR    R6,R8         ADVANCE OUTPUT SCANNER             GP04127
         AR    R7,R8         UPDATE OUTPUT LENGTH               GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   PROCESS THE STOP CHARACTER                                        *
*   R2 = 00  ALL SET - DO NEXT CHUNK                                  *
*        04  SKIP OVER COMMA, THEN LOOP                               *
*        08  QUOTE - MOVE UNTIL END QUOTE FOUND                       *
*        12  END                                                      *
*---------------------------------------------------------------------*
GETHXJMP B     *+4(R2)                                          GP04127
           B   GETHXLUP      DO NEXT CHUNK                      GP04127
           B   GETHXCOM      COMMA                              GP04127
           B   GETHXQUO      PROCESS QUOTE                      GP04127
           B   GETHXDON      FINISHED                           GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   COMMA - SKIP OVER                                                 *
*---------------------------------------------------------------------*
GETHXCOM LA    R3,1(,R1)     SKIP COMMA                         GP04127
         B     GETHXLUP      AND SCAN AGAIN                     GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   QUOTE - LOOK FOR MATCHING END QUOTE AND MOVE TEXT                 *
*---------------------------------------------------------------------*
GETHXQUO SR    R0,R0         JUST IN CASE                       GP04127
         IC    R0,0(,R1)     REMEMBER TYPE OF QUOTE             GP04127
         LA    R3,1(,R1)     FIRST SCAN POSITION                GP04127
         LA    R15,1(,R4)    END TEXT + 1                       GP04127
         SRST  R15,R3        LOOK FOR END                       GP04127
         BO    *-4             RUDE INTERRUPTION                GP04127
         BH    GETHXQOD      UNBALANCED QUOTES                  GP04127
         LR    R14,R15       COPY END                           GP04127
         SR    R14,R1        LESS START                         GP04127
         SH    R14,=H'2'     1 FOR QUOTE; 1 FOR EXECUTE         GP04127
         BM    GETHXQNM      NO MOVE                            GP04127
         EX    R14,EXMVCQUO  MOVE QUOTED TEXT                   GP04127
         LA    R3,2(R14,R3)  ADVANCE INPUT                      GP04127
         LA    R6,1(R14,R6)  ADVANCE OUTPUT                     GP04127
         LA    R7,1(R14,R7)  ADJUST OUTPUT LENGTH               GP04127
GETHXQNM CR    R3,R4         INPUT EXHAUSTED ?                  GP04127
         BH    GETHXLUP      (SHOULDN'T HAPPEN)                 GP04127
         CLM   R0,1,1(R3)    DOUBLED QUOTE ?                    GP04127
         BNE   GETHXLUP                                         GP04127
         STC   R0,0(,R6)     OUTPUT AS SINGLE QUOTE             GP04127
         LA    R0,1          QUICK CONSTANT                     GP04127
         AR    R3,R0         ADVANCE INPUT                      GP04127
         AR    R6,R0         ADVANCE OUTPUT                     GP04127
         AR    R7,R0         ADJUST OUTPUT LENGTH               GP04127
         B     GETHXLUP      AND SCAN AGAIN                     GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   INPUT EXHAUSTED - CHECK PRESENCE OF DATA                          *
*---------------------------------------------------------------------*
GETHXDON ST    R7,XHL        SET OUTPUT LENGTH (ERROR FLAG IF 0)
         ST    R3,XFLDSTRT   UPDATE FIELD START                 GP04127
         LTR   R7,R7         ANYTHING TO DO ?                   GP04127
         BNZ   GETHEXIT      YES; RETURN                        GP04127
*NEXT*   B     GETHXNUL      NO; TOO BAD                        GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   ASSORTED ERROR CONDITIONS                                         *
*---------------------------------------------------------------------*
GETHXNUL LA    R14,MSG11           REQUIRED FIELD MISSING       GP04127
         B     GETHXERR                                         GP04127
GETHXBAD SR    R14,R14                                          GP04128
         IC    R14,MSG03     GET MESSAGE LENGTH-1               GP04128
         LA    R14,@LINE01+L'SYNTAX+3(R14) POINT PAST MESSAGES  GP04128
         SR    R4,R1         LOCATION OF BAD CHAR               GP04128
         BM    GETHXBAM      OOPS                               GP04128
         CH    R4,=AL2(8-1)  ONLY DO FIRST 8                    GP04129
         BNH   *+8                                              GP04129
         CH    R4,=AL2(8-1)                                     GP04129
         EX    R4,EXMVUNHX   SHOW BAD CHARACTER(S)              GP04128
GETHXBAM LA    R14,MSG03           INVALID HEX CHARACTER        GP04127
         B     GETHXERR                                         GP04127
GETHXQOD LA    R14,MSG13           UNBALANCED QUOTES            GP04127
         B     GETHXERR                                         GP04127
GETHXODD LA    R14,MSG12           UNEVEN NUMBER OF HEX DIGITS  GP04127
GETHXERR ST    R14,XMSE                                         GP04127
         BAS   R14,SYNERR          SYNTAX                       GP04127
GETHEXIT SEXIT ,                                                GP04127
         EJECT ,
*
*   GET OFFSET ROUTINE
*
*        INPUT:
*              XFLDSTRT
*        OUTPUT:
*              XZADDR = STORAGE ADDR CORRESPONDING TO OFFSET
*
GETOFF   SENTRY ,                                               GP04127
         NI    ZFLAGS,255-ZFSSYN  NO ERROR SO FAR               GP04129
         L     R3,XFLDSTRT                                      GP04129
         L     R4,XENDREC          LOAD LAST VALID ADDRESS      GP04129
*                                                               GP04129
*   SCAN PAST LEADING DELIMITERS                                GP04129
*                                                               GP04129
         BAS   R14,OPSTART         FIND NON-BLANK               GP04129
         ST    R3,XFLDSTRT   UPDATE START                       GP04129
         CR    R3,R4               DID WE ?                     GP04129
         BH    GETOFMIS            NO; RETURN ZILCH             GP04129
*
*   EXAMINE 1ST CHAR OF OFFSET                                  GP04129
*
         CLI   0(R3),X'7D'         QUOTE (LABEL OFFSET)         GP04129
         BE    GETOFNAM            YES, BRANCH                  GP04129
*
*   PROCESS A HEXADECIMAL OFFSET
*
         BAS   R14,GETHEX          GET HEX OFFSET               GP04127
         ICM   R14,15,XHL    LOAD AND TEST LENGTH               GP04129
         BNP   GETOFMIS            YES, BRANCH                  GP04129
         C     R14,=F'4'                                        GP04129
         BNH   GETOFHEX                                         GP04129
         LA    R14,MSG02           OFFSET FIELD IS TOO LONG
         ST    R14,XMSE
         BAS   R14,SYNERR          SYNTAX                       GP04127
         B     GETOFEND                                         GP04129
GETOFHEX LA    R6,FW+4                                          GP04126
         SR    R6,R14        MOVE DESTINATION                   GP04129
         BCTR  R14,0         EXECUTE LENGTH                     GP04129
         XC    FW,FW         CLEAR WORK AREA                    GP04129
         EX    R14,EXREPDAT        MOVE REPDATA TO R6           GP04126
         CLC   XEBV(3),=C'BAS'     IS THIS A BASE STATEMENT
         BNE   GETOFOFF            NO, ITS A VER OR REP, BRANCH GP04129
         MVC   XBASE,FW      STORE BASE OFFSET                  GP04129
         NI    ZFLAGS,255-ZFSBASE  PRESET VALID BASE            GP04129
         TM    ZFLAGS,ZFSNAME+ZFSSYN  BAD NAME CARD ?           GP04129
         BZ    GETOFEND      NO; WE HAVE A WINNER               GP04129
         OI    ZFLAGS,ZFSBASE+ZFSERR  SET FOR BAD NAME CARD     GP04129
         B     GETOFEND                                         GP04129
         SPACE 1                                                GP04129
GETOFOFF L     R14,XCSADDR         GET ADDRESS OF CSECT         GP04129
         AL    R14,FW              ADD OFFSET                   GP04129
         SL    R14,XBASE           SUBTRACT VALUE FROM 'BASE' VERB
         ST    R14,XZADDR          SAVE THIS AS ADDRESS TO ZAP
         B     GETOFEND            GO EXIT                      GP04129
*
*   PROCESS A SYMBOLIC (LABEL) OFFSET
*
GETOFNAM MVC   XEBLBL,BLANKS                                    GP04129
         LA    R14,XEBLBL
         ST    R14,XRCVADDR
         MVC   XRCVLEN,=F'8'                                    GP04129
         BAS   R14,GETFLD         GO GET LABEL                  GP04127
         CLC   XEBLBL,BLANKS                                    GP04129
         BE    GETOFMIS                                         GP04129
         MVI   SCANFLAG,ZFSSYN  FLAG SET ON NOT FOUND           GP04129
         BAS   R14,SCANMOD        GO SCAN MOD FOR VALUE OF LABEL
         L     R14,XLMADDR        GET ADDRESS OF MODULE
         AL    R14,XOFFSET        ADD OFFSET TO CSECT
         ST    R14,XZADDR         STORE ADDR TO ZAP
         ST    R14,XLOC
         TM    ZFLAGS,ZFSNAME+ZFSBASE+ZFSSYN  ANY ERROR ?       GP04129
         BNZ   GETOFEND           BR IF NOT EOD                 GP04129
         BAS   R14,PRADDR         GO PRINT ADDRESS              GP04127
         B     GETOFEND           GO EXIT                       GP04129
GETOFMIS LA    R14,MSG11          REQUIRED FIELD MISSING        GP04129
         ST    R14,XMSE
         BAS   R14,SYNERR         SYNTAX                        GP04127
GETOFEND SEXIT ,                                                GP04127
         EJECT ,
*
*   RECORD FETCHING ROUTINE
*
         SPACE 1
GETREC   SENTRY ,                                               GP04127
         TM    XFLAGS,XFCON       ARE WE IN CONSOLE MODE
         BNO   GETSIN             NO, BRANCH
*
*   CONSOLE INPUT SECTION
*
         BAS   R14,SPLITREC       TRY TO GET A LOGICAL RECORD   GP04127
         B     GETCGO1            DO WHILE LOGICAL REC NOT GOTTEN
*                                 (USE WTOR TO GET ANOTHER PHYS REC)
GETCLP1  SLR   R14,R14
         ST    R14,XWECB          CLEAR ECB
         MVI   XREPLY,C' '        CLEAR WTO AREA                GP04126
         MVC   XREPLY+1(L'XREPLY-1),XREPLY                      GP04126
         WTOR  'ENTER ZAPOSMEM STATEMENTS OR END',XREPLY,L'XREPLY,XWECB*
               ,MF=(E,XWTOR)                                    GP04126
         WAIT  ECB=XWECB                   WAIT                 GP04126
         L     R14,=A(UPPER) UPPER CASE TABLE                   GP04126
         TR    XREPLY(L'XREPLY),0(R14) TRANSLATE TO UPPER CASE  GP04126
         LA    R14,XREPLY
         LR    R6,R14                                           GP04126
         BCTR  R6,R0                                            GP04126
         ST    R6,XENDREC          SET END OF LAST LOGICAL      GP04126
*                                  REC TO BEGINNING OF REPLY AREA - 1
         LA    R14,L'XREPLY-1(,R14)  LAST BYTE                  GP04129
         ST    R14,XPENDREC        SET END OF PHYSICAL RECORD
         BAS   R14,SPLITREC        NOW EXTRACT A LOGICAL REC    GP04127
GETCGO1  CLC   XENDREC,XPENDREC
         BH    GETCLP1             END OF DO LOOP
         B     GETCX
*
*   PROCESS PARM FIELD INPUT
*
GETSIN   TM    XFLAGS,XFMAIN       IS THERE PARM FIELD INPUT
         BNZ   GETCSYIN            NO, BRANCH
         CLC   XENDREC,XPENDREC    MORE IN PARM
         BNH   GETCPARM            YES, BRANCH
         OI    XFLAGS,XFEOD        XFEOD
         B     GETCX
GETCPARM BAS   R14,SPLITREC        EXTRACT LOGICAL REC FROM PARM
         B     GETCX
*
*   INPUT IS FROM SYSIN DD
*
GETCSYIN BAS   R14,SPLITREC        TRY TO GET A LOGICAL RECORD  GP04127
         B     GETCGO2             DO WHILE NO LOGICAL REC GOTTEN
GETCLP2  GET   DYNDCBIN            READ A RECORD                GP04126
         LR    R6,R1         SAVE THE RECORD ADDRESS            GP04129
         LH    R7,DCBLRECL-IHADCB+DYNDCBIN  GET LENGTH OF RECORD
         TM    DCBRECFM-IHADCB+DYNDCBIN,DCBRECF  F OR U ?       GP04129
         BNZ   GETCLP3       YES                                GP04129
         TM    DCBRECFM-IHADCB+DYNDCBIN,DCBRECV+DCBRECD  V OR D ?
         BZ    GETCLP3       NEITHER  (BUT HOW?)                GP04129
         ICM   R7,3,0(R6)    SHOULD BE SAME AS DCBLRECL         GP04129
         SH    R7,=H'4'      DATA LENGTH                        GP04129
         BNP   GETCLP2       IGNORE SHORT RECORD                GP04129
         LA    R6,4(,R6)     POINT TO DATA                      GP04129
GETCLP3  CH    R7,=H'80'     IS DATA LENGTH 80 ?                GP04129
         BNE   GETCLP4       NO                                 GP04129
         L     R14,=A(TRTDIGIT)  VALID BASE 10 DIGITS           GP04129
         TRT   72(8,R6),0(R14)  ALL INTEGER ?                   GP04129
*DEBUG*  BZ    GETCLP4       NO; USE AS IS                      GP04129
         BNZ   GETCLP4       NO; USE AS IS                      GP04129
         LA    R7,72         IGNORE SEQUENCE NUMBER             GP04129
GETCLP4  AR    R7,R6         GET END COLUMN +1                  GP04129
         BCTR  R7,0          END                                GP04129
         ST    R7,XPENDREC   THIS IS END OF PHYSICAL RECORD     GP04129
         BCTR  R6,R0                                            GP04126
         ST    R6,XENDREC    POINT TO BYTE PRECEDING COL 1      GP04129
         BAS   R14,SPLITREC        NOW GO GET LOGICAL RECORD    GP04127
GETCGO2  CLC   XENDREC,XPENDREC    MORE TO DO ?
         BH    GETCLP2             BR IF NOT
*
GETCX    SEXIT ,                                                GP04127
*
*   END-OF-DATA (EODAD) FOR SYSIN
*
CTLEOD   OI    XFLAGS,XFEOD          XFEOD
         B     GETCX
         EJECT ,
*
*    LOGICAL RECORD EXTRACTION ROUTINE (CALLED BY 'GETREC')
*
         SPACE 1
SPLITREC SENTRY ,            SAVE A LITTLE                      GP04127
         L     R3,XENDREC    PRIOR SPLIT OR START OF NEW RECORD GP04129
         L     R4,XPENDREC   END OF PHYSICAL RECORD             GP04129
         LA    R3,1(,R3)     (STUPID) CONVENTION                GP04129
         ST    R3,XENDREC    END POINTER                        GP04129
         BAS   R14,OPSTART   FIND A NON-BLANK                   GP04129
         CR    R3,R4         ANY ?                              GP04129
         BNH   SPLITRED                                         GP04129
         LA    R3,1(,R4)                                        GP04129
         ST    R3,XENDREC                                       GP04129
         ST    R3,XFLDSTRT                                      GP04129
         B     SPLITEND      NO                                 GP04129
SPLITRED ST    R4,XENDREC    END POINTER                        GP04129
         ST    R3,XFLDSTRT   INITIALIZE GETFLD BEGIN ADDRESS    GP04129
         L     R14,=A(TRTSPLIT)  LOAD SPLIT TABLE               GP04129
         MVI   SCANFLAG,0    0-NO QUOTE 4-APOST 8-QUOTE         GP04129
         SPACE 1                                                GP04129
*---------------------------------------------------------------------*
*    FIND END OF LOGICAL RECORD                                       *
*    1) END OF PHYSICAL RECORD BEFORE "/"                             *
*    1) "/" NO INSIDE QUOTED STRING (EITHER ' OR " QUOTES)            *
*---------------------------------------------------------------------*
SPLLOOP  LR    R15,R4        COPY END ADDRESS                   GP04129
         SR    R15,R3        LESS START                         GP04129
         BM    SPLITEND      NO MORE; USE PREV. SETTING         GP04129
         SR    R2,R2         CLEAR FOR TRT INSERT               GP04129
         LA    R1,1(,R4)     SET SCAN STOP                      GP04129
         CH    R15,=H'255'   TOO LONG ?                         GP04129
         BNH   *+8           NO; DOING FINE                     GP04129
         LH    R15,=H'255'   DO ONE SEGMENT AT A TIME           GP04129
         EX    R15,EXTRTSPL  LOOK FOR SPLIT OR QUOTE            GP04129
         BNZ   SPLFAN        FOUND SOMETHING; FIND OUT WHAT     GP04129
         LA    R3,256(,R3)   NOTHING IN THIS CHUNK              GP04129
         CR    R3,R4                                            GP04129
         BNH   SPLLOOP       TRY AGAIN                          GP04129
         B     SPLITEND      ALL DONE                           GP04129
         SPACE 1                                                GP04129
SPLFAN   CLM   R2,1,C'/'(R14)  SEPARATOR? MATCH VALUE IN TABLE  GP04129
         BNE   SPLQUOTE      NO; HIT A QUOTE                    GP04129
         CLI   SCANFLAG,0    IN A QUOTED STRING ?               GP04129
         BNE   SPLIGN        YES; IGNORE                        GP04129
         MVI   0(R1),C' '    CHANGE '/' TO BLANK                GP04129
         ST    R1,XENDREC    SET LOGICAL END OF RECORD          GP04129
         B     SPLITEND      AND RETURN                         GP04129
         SPACE 1                                                GP04129
SPLQUOTE CLI   SCANFLAG,0    START OF QUOTE ?                   GP04129
         BE    SPLSETQO      YES; REMEMBER IT                   GP04129
         CLM   R2,1,SCANFLAG  SAME TYPE AS BEFORE ?             GP04129
         BNE   SPLIGN        NO; IGNORE                         GP04129
         MVI   SCANFLAG,0    TURN IT OFF                        GP04129
         B     SPLIGN        NO; IGNORE                         GP04129
         SPACE 1                                                GP04129
SPLSETQO STC   R2,SCANFLAG   REMEMBER WHICH QUOTE WE HIT        GP04129
         SPACE 1                                                GP04129
SPLIGN   LA    R3,1(,R1)     PASS BY ONE STOPPER                GP04129
         B     SPLLOOP       AND CONTINUE                       GP04129
         SPACE 1                                                GP04129
SPLITEND SEXIT ,                                                GP04127
*PLITEND DBT SPLITEND,REGS=YES,LIST=(XENDREC,XPENDREC,(*XFLDSTRT,32))
*        SEXIT ,                                                GP04129
         EJECT ,
*
*   HEX TO EBCDIC CONVERSION ROUTINE
*
*        INPUT:
*              XHEX = ADDR OF HEX DATA TO BE CONVERTED
*              XHEXL = LENGTH OF HEX DATA
*              XEBAD = ADDR OF TARGET AREA TO RECEIVE EBCDIC DATA
*
         SPACE 1
HEXCV    SENTRY SAVE=12(R13)                                    GP04127
         BAS   R14,MODESET1          GET INTO KEY 0             GP04127
         ICM   R4,15,XHEXL   LOAD AND TEST LENGTH               GP04129
         BNP   HEXCVDON                                         GP04129
         L     R3,XHEX       LOAD START ADDRESS                 GP04129
         L     R6,XEBAD      LOAD OUTPUT ADDRESS                GP04129
HEXCVLUP CH    R4,=H'4'      DOWN TO LAST WORD ?                GP04129
         BNH   HEXCVLST      YES                                GP04129
         MVC   FW,0(R3)      MOVE ONE WORD                      GP04129
         UNPK  DB(9),FW(5)   UNPACK                             GP04129
         TR    DB,HEXTRTAB   MAKE PRINTABLE                     GP04129
         MVC   0(8,R6),DB    MOVE TO OUTPUT                     GP04129
         LA    R6,8(,R6)     ADVANCE POINTER                    GP04129
         LA    R3,4(,R3)     DITTO FOR INPUT                    GP04129
         SH    R4,=H'4'      RESIDUAL LENGTH                    GP04129
         B     HEXCVLUP      DO MORE                            GP04129
         SPACE 1                                                GP04129
HEXCVLST BCTR  R4,0          INPUT EX LENGTH                    GP04129
         EX    R4,EXMVCHEX   MOVE TO FW                         GP04129
         LA    R4,1(R4,R4)   OUTPUT EX LENGTH                   GP04129
         UNPK  DB(9),FW(5)   UNPACK                             GP04129
         TR    DB,HEXTRTAB   MAKE PRINTABLE                     GP04129
         EX    R4,EXHEXMVC   MOVE TO OUTPUT                     GP04129
HEXCVDON BAS   R14,MODESET2          GET BACK TO USER KEY       GP04127
         SEXIT ,                                                GP04127
         SPACE 1                                                GP04126
*---------------------------------------------------------------------*
*   HEXCON - FAST HEX CONVERSION FOR FOUR-BYTE DATUM                  *
*     R0  - VALUE TO BE CONVERTED                                     *
*     R15 - OUTPUT LOCATION                                           *
*---------------------------------------------------------------------*
HEXCON   ST    R0,FW         SAVE WORD TO BE CONVERTED          GP04126
         UNPK  DB(9),FW(5)   UNPACK                             GP04126
         TR    DB,HEXTRTAB   MAKE PRINTABLE                     GP04126
         MVC   0(8,R15),DB   MOVE TO CALLER                     GP04126
         LA    R15,9(,R15)   ADVANCE OUTPUT                     GP04126
         BR    R14           RETURN                             GP04126
         SPACE 1                                                GP04126
*---------------------------------------------------------------------*
*   HEXHALF - FAST HEX CONVERSION FOR TWO-BYTE FIELD                  *
*     R0  - VALUE TO BE CONVERTED                                     *
*     R15 - OUTPUT LOCATION                                           *
*---------------------------------------------------------------------*
HEXHALF  STH   R0,FW         SAVE HALF-WORD TO BE CONVERTED     GP04126
         UNPK  DB(5),FW(3)   UNPACK                             GP04126
         TR    DB,HEXTRTAB   MAKE PRINTABLE                     GP04126
         MVC   0(4,R15),DB   MOVE TO CALLER                     GP04126
         LA    R15,5(,R15)   ADVANCE OUTPUT                     GP04126
         BR    R14           RETURN                             GP04126
         SPACE 1                                                GP04126
*---------------------------------------------------------------------*
*   OPSTRING - FIND FIRST NON-BLANK IN INPUT                          *
*     R3  - START SCAN: RETURNED WITH BYTE, OR SET TO (R4)+1          *
*     R4  - LAST VALID BYTE (WITHIN 255 BYTES OF START)               *
*---------------------------------------------------------------------*
OPSTART  STM   R4,R2,12(R13)   SAVE A LITTLE                    GP04129
         L     R14,=A(TRTNBLNK)  STOPPER TABLE - NON-BLANK      GP04129
         SR    R4,R3         BYTES TO SCAN                      GP04129
         LA    R1,1(R4,R3)   SET STOPPER                        GP04129
         BM    OPSTRINX      PROBLEM                            GP04129
         EX    R4,EXFINDOP   FIND SOMETHING                     GP04129
         LR    R3,R1         RETURN STOP ADDRESS                GP04129
OPSTRINX LM    R4,R2,12(R13)  RESTORE SOME                      GP04129
         BR    R14           RETURN TO CALLER                   GP04129
         EJECT ,
*
*   HOUSEKEEPING ROUTINE (PERFORMS PROGRAM INITIALIZATION)
*
         SPACE 1
INIT     SENTRY ,                                               GP04127
         MVI   ZFLAGS,ZFSNAME  NO NAME CARD, YET                GP04129
         L     R14,@PARMPTR        PARM FIELD                     .PRC.
         LH    R14,0(,R14)         LENGTH OF PARM                 .PRC.
         LTR   R14,R14             IS THERE A PARM                .PRC.
         BNZ   INITOPEN            YES, NO CONTROL XFMAIN         .PRC.
         OI    XFLAGS,XFMAIN         CONTROL XFMAIN
*---------------------------------------------------------------------*
*   OPEN OUTPUT AND INPUT DCBS - PASS PATTERN/O/C LIST                *
*---------------------------------------------------------------------*
INITOPEN L     R14,=A(PATOPEN)      INITIALIZE OPEN/CLOSE LIST  GP04126
         MVC   DYNOPEN(12),0(R14)   INITIALIZE OPEN/CLOSE LIST  GP04126
         MVI   @LINE,C' '    CLEAR PRINT BUFFER BEFORE USE      GP04127
         MVC   @LINE+1(L'@LINE-1),@LINE                         GP04127
         MVC   @LINE2,@LINE  ALSO SECOND LINE                   GP04127
         L     R2,=A(PRTDEF)                                    GP04126
         LA    R3,DYNOPEN+8  OPEN/CLOSE LIST                    GP04126
         LA    R4,DYNDCBPR   NEW DCB                            GP04126
         BAS   R14,OPEN            OPEN PRT                     GP04127
         LTR   R15,R15             WAS OPEN SUCCESSFUL
         BZ    INITLIB                                          GP04126
         OI    DYNOPEN+4,X'80'  REMOVE PRINT DCB FROM OPEN LIST GP04126
         B     INITLIB       AND CONTINUE                       GP04126
INITLIB  L     R2,=A(LIBDEF)                                    GP04126
         LA    R3,DYNOPEN+4  OPEN/CLOSE LIST                    GP04126
         LA    R4,DYNDCBLB   NEW DCB                            GP04126
         BAS   R14,OPEN            OPEN LIB                     GP04127
         LTR   R15,R15
         BZ    INITINP                                          GP04126
         LA    R14,MSG07           DD STATEMENT FOR LIBRARY NOT FOUND
         ST    R14,XMSE
         BAS   R14,GENERR                                       GP04127
         B     INITX
INITINP  TM    XFLAGS,XFMAIN       IS INPUT FROM PARM FIELD     GP04126
         BNO   INITPARM            YES, GO GET PARM FIELD
         L     R2,=A(CTLDEF)                                    GP04126
         LA    R3,DYNOPEN+0  OPEN/CLOSE LIST                    GP04126
         LA    R4,DYNDCBIN   NEW DCB                            GP04126
         BAS   R14,OPEN            OPEN SYSIN                   GP04127
         LTR   R15,R15
         BZ    INIT4
         LA    R14,MSG06           INPUT DD STATEMENT NOT FOUND
         ST    R14,XMSE
         BAS   R14,GENERR                                       GP04127
         B     INITX
INIT4    L     R14,XPENDREC
         ST    R14,XENDREC
         B     INITX
INITPARM L     R6,@PARMPTR                                      GP04126
         LA    R6,0(,R6)     CLEAN IT                           GP04129
         LTR   R6,R6         PARM POINTER ?                     GP04129
         BZ    INITX                                            GP04129
         LH    R7,0(,R6)           GET LENGTH OF PARM           GP04126
         LTR   R7,R7               IS THERE A PARM              GP04129
         BNP   INITX               NO, BRANCH                   GP04129
         LA    R1,1(,R6)     START OF TEXT - 1                  GP04129
         ST    R1,XENDREC    FINAGLE FOR SPLITREC               GP04129
         AR    R1,R7         GET ADDRESS OF LAST CHAR IN PARM   GP04129
         ST    R14,XPENDREC         SAVE IT
INITX    SEXIT ,                                                GP04127
         EJECT ,
*---------------------------------------------------------------------*
*    OPEN ONE PROGRAM FILE (AT A TIME)                                *
*    R2 -> DDNAME,ALTDDN,DCB PATTERN                                  *
*    R3 -> OPEN/CLOSE LIST ENTRY                                      *
*    R4 -> DESTINATION FOR WORKING DCB                                *
*---------------------------------------------------------------------*
*
*   ROUTINE TO OPEN FILES
*
         SPACE 1
         PUSH  USING                                            GP04126
OPEN     SENTRY ,                                               GP04127
         MVC   0(PRTDCBL,R4),16(R2)  MOVE DCB PROTOTYPE         GP04126
         STCM  R4,7,1(R3)    PLACE DCB ADDRESS INTO AM24 FORMAT LIST
         USING IHADCB,R4     DECLARE DCB                        GP04126
         LA    R6,0(,R2)     POINT TO PRIMARY DD NAME           GP04126
         LA    R7,2            TRY PRIMARY, THEN ALTERNATE      GP04126
OPENTYPE DEVTYPE (R6),DB     TRY PRIMARY DDNAME                 GP04126
         LTR   R15,R15                     IS DDNAME PRESENT
         BZ    OPENOKDD      YES; USE EVEN IF DUMMY             GP04126
         LA    R6,8(,R6)     POINT TO ALTERNATE DD NAME         GP04126
         BCT   R7,OPENTYPE                                      GP04126
         B     OPENFAIL      NO GOOD                            GP04126
OPENOKDD MVC   DCBDDNAM,0(R6)  DD NAME TO DCB                   GP04126
         OPEN  ,MF=(E,(R3))  OPEN (IGNORE OTHERS IN LIST - OPEN)
         SR    R15,R15       SET GOOD RETURN CODE               GP04126
         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL ?        GP04126
         BO    OPENRET       YES; RETURN                        GP04126
OPENFAIL LA    R15,4         ELSE SET ERROR                     GP04126
OPENRET  SEXIT R15=(R15)                                        GP04126
         POP   USING                                            GP04126
         EJECT ,
*
*   PRINT ADDRESS OF SYMBOL (CSECT, LABEL, ETC.)
*
*        INPUT:
*              XLOC = FOUR-BYTE ADDRESS TO BE DISPLAYED
*
PRADDR   SENTRY ,                                               GP04127
         MVC   @LINE01(L'WHEREMSG),WHEREMSG                     GP04128
         MVC   @LINE01+L'WHEREMSG+1(L'XEBLBL),XEBLBL            GP04128
         MVC   @LINE01+L'WHEREMSG+10(2),=C'IS'                  GP04129
         LA    R15,@LINE01+L'WHEREMSG+10+2+1                    GP04129
         L     R0,XLOC                                          GP04129
         BAS   R14,HEXCON    CONVERT HEX ADDR TO EBCDIC         GP04127
         BAS   R14,PUTLINE         GO PRINT IT OUT              GP04127
         SEXIT ,                                                GP04127
         EJECT ,
*
*   OUTPUT RECORD PRINTING ROUTINE
*
         SPACE 1
PUTLINE2 SENTRY SAVE=PUTSAVE                                    GP04126
         LA    R2,@LINE2     PRINT SECOND LINE OF PAIR          GP04126
         B     PUTLINEC                                         GP04126
PUTLINE  SENTRY SAVE=PUTSAVE                                    GP04126
         LA    R2,@LINE      PRINT FIRST LINE                   GP04126
PUTLINEC TM    DYNDCBPR+DCBOFLGS-IHADCB,DCBOFOPN  PRT OPEN      GP04126
         BNO   PUTLNOPR                                         GP04127
         TM    XFLAGS,XF1ST                                     GP04128
         BNZ   PUTLNOT1                                         GP04127
         OI    XFLAGS,XF1ST                                     GP04128
         PUT   DYNDCBPR,HEADING                                 GP04126
         MVI   0(R2),C'0'                                       GP04126
PUTLNOT1 PUT   DYNDCBPR,0(R2)                                   GP04126
PUTLNOPR TM    XFLAGS,XFCON  CONSOLE OUTPUT ?                   GP04127
         BNO   PUTLCLR       NO; CLEAR OUTPUT LINE              GP04127
         TM    XFLAGS,XFNOWTO      FOR PRINT ONLY?              GP04127
         BNZ   PUTLCLR             YES, BYPASS WTO              GP04127
         MVC   XWTO(4),=AL2(L'@LINE+4,0)                        GP04126
         WTO   MF=(E,XWTO)
PUTLCLR  MVI   0(R2),C' '                                       GP04127
         MVC   1(L'@LINE-1,R2),0(R2)  CLEAR THIS LINE           GP04127
         SEXIT ,                                                GP04127
         EJECT ,
*
*   READ RECORD FROM LIBRARY
*
         SPACE 1
READLIB  SENTRY ,                                               GP04127
         READ  @DECB,SF,DYNDCBLB,XLREC,L'XLREC,MF=E             GP04126
         SPACE 1
         CHECK @DECB
         SPACE 1
         SEXIT ,                                                GP04127
         EJECT ,
*
*   SCAN LPA/JPA LOOKING FOR LOAD MODULE
*
*        INPUT:
*              XEBLM = NAME OF LOAD MODULE
*        OUTPUT:
*              XLMADDR = ADDR OF LOAD MODULE
*
SCANLPA  SENTRY ,                                               GP04127
         TM    XFLAGS,XFLOCSW      IS IT LOCAL MODE
         BNZ   SCANLPAJ            YES, GO LOOK IN JPA          GP04126
*  NOTE - OUTLENGTH (XCSLEN) ALREADY GOTTEN BY CALLER; DON'T CLOBBER
         CSVQUERY INEPNAME=XEBLM,SEARCH=LPA,                           *
               OUTEPA=XLMEPA,OUTLOADPT=XLMADDR,OUTLENGTH=DB,           *
               MF=(E,DYNQUERY,COMPLETE)  LOOK IN LPA            GP04126
         B     SCANLPAC      GO TO COMMON                       GP04126
SCANLPAJ CSVQUERY INEPNAME=XEBLM,SEARCH=JPA,                           *
               OUTEPA=XLMEPA,OUTLOADPT=XLMADDR,OUTLENGTH=DB,           *
               MF=(E,DYNQUERY,COMPLETE)  LOOK IN JPA            GP04126
SCANLPAC ICM   R0,15,XCSLEN  DOES USER HAVE LENGTH ?            GP04126
         BNZ   SCANLPAL      YES; RETAIN IT                     GP04126
         MVC   XCSLEN,DB     ELSE COPY MODULE LENGTH            GP04126
SCANLPAL CH    R15,=H'4'     DID IT WORK ?                      GP04126
         BL    SCANLPAX      YES; RETURN NON-ZERO ADDRESS       GP04126
         SLR   R14,R14                                          GP04126
         ST    R14,XLMADDR         INDICATE NO CDE FOUND
         LA    R14,MSG04     SHOW NAME NOT FOUND IN STORAGE     GP04129
         ST    R14,XMSE                                         GP04129
         BAS   R14,SYNERR    WRITE NOTE                         GP04129
***********************************************************************
**   CODE TO SEARCH FOR MAJOR NAME'S DATA REMOVED, BECAUSE IT GETS   **
**   INCORRECT OFFSETS FROM ENTRY POINT, AND WE ALREADY HAVE ADR/LEN **
***********************************************************************
SCANLPAX SEXIT ,                                                GP04127
         EJECT ,
*
*   ROUTINE TO CONTROL SCANNING OF A MODULE FOR A DESIRED LABEL
*
*        INPUT:
*              XEBLM = LOAD MODULE TO SCAN
*              XEBLBL = CESD LABEL WHOSE OFFSET IS TO BE RETURNED
*              XEBCS = CSECT WHEREIN THE LABEL RESIDES
*                      (BLANK MEANS FIRST CSECT)
*        OUTPUT:
*              XOFFSET = OFFSET IN LOAD MODULE TO LABEL
*              XCSLEN = LENGTH OF SPECIFIED CSECT
*
SCANMOD  SENTRY ,                                               GP04127
         BAS   R14,FIND           GO FIND MODULE ON LIBRARY     GP04127
         TM    ZFLAGS,ZFSNAME+ZFSSYN  FIND FAILED?              GP04129
         BNZ   SCMEXIT            YES; SKIP THIS                GP04129
         SLR   R14,R14
         BCTR  R14,R0
         ST    R14,XOFFSET        SHOW LABEL REMAINS TO BE FOUND
         ST    R14,XSYMOFF        SHOW SYMBOL REMAINS TO BE FOUND
         SLR   R14,R14
         ST    R14,XCESDN
*
*   PERFORM SPECIAL PROCESSING FOR THE NUCLEUS LOAD MODULE
*
         CLC   XEBLM(6),IEANUC
         BNE   SCMNTNUC                                         GP04129
         L     R14,CVTPTR         GET CVT ADDR                  GP04126
         TM    CVTDCB-CVT(R14),CVTMVSE IS THIS XA
         BZ    PASTXANC           NO, SKIP XA CODE
         CLC   XEBCS,=C'IEAVFX00' IS THIS PSA CSECT
         BNE   PASTCS0            NO, SKIP
         SR    R2,R2              CLEAR REGISTER
         ST    R2,XLMADDR         ADDR IS ZERO
         B     PASTLKU1           SKIP LOOKUP STUFF
*
PASTCS0  DS    0H                                               GP04127
         NUCLKUP BYNAME,NAME='IEAVBK00',ADDR=(R2)  ADDR OF 1ST CSECT
         LA    R2,0(,R2)          CLEAR HI-ORDER BIT
         ST    R2,XLMADDR         SAVE AS ADDR OF LOAD MOD
PASTLKU1 DS    0H                                               GP04127
         NUCLKUP BYNAME,NAME=XEBLBL,ADDR=(R3)  GET ADDR OF LABEL
         LTR   R15,R15
         BNZ   LBLNTFND           BR IF LABEL NOT FOUND
         LA    R3,0(,R3)          CLEAR HI-ORDER BIT
         SLR   R3,R2              GET OFFSET INTO NUC LOAD MOD
         ST    R3,XOFFSET         SAVE THIS OFFSET
         NUCLKUP BYNAME,NAME=XEBCS,ADDR=(R3)  GET LENGTH OF CSECT
         LTR   R15,R15
         BNZ   LBLNTFND           BR IF LABEL NOT FOUND
         ST    R1,XCSLEN          SAVE CSECT LENGTH
         B     SCMEXIT            EXIT THIS ROUTINE
PASTXANC DS    0H                                               GP04127
         OI    YFLAGS,YFSKIP1     SKIP 1ST CESD (IEAVNIP0)      GP04129
         B     A000CBC
SCMNTNUC NI    YFLAGS,255-YFSKIP1                               GP04129
*
*   CLEAR THE CSECT DESCRIPTOR ARRAY
*
A000CBC  SLR   R14,R14
         ST    R14,XSDCNT
         LA    R14,1
         ST    R14,@ESDSUB
A000CCA  LR    R6,R14                                           GP04126
         MH    R6,=H'5'                                         GP04126
         LA    R7,XSDNO(R6)                                     GP04126
         XC    1(4,R7),1(R7)
         MVI   0(R7),X'00'
         LA    R14,1(,R14)                                      GP04129
         ST    R14,@ESDSUB
         CH    R14,=H'400'                                      GP04129
         BNH   A000CCA
*
*   READ AND PROCESS CESD RECORDS
*
         SLR   R14,R14
         ST    R14,XCRSW         CLEAR LOOP SWITCH
         B     A000DF0
A000CF8  BAS   R14,READLIB                                      GP04127
         CLI   XLREC,C' '        SYM RECORD
         BNE   A000D08           NO, BRANCH
         BAS   R14,SYMCHK        GO PROCESS SYM RECORD          GP04127
A000D08  CLI   XLREC,X'20'       CESD RECORD
         BE    A000D1C           YES, BRANCH
         LA    R14,1
         ST    R14,XCRSW
*
*   SCAN CESD ENTRIES ON CESD RECORD
*
         B     A000DF0
A000D1C  LH    R2,XLREC+6        GET LENGTH OF ESD DATA
         SRDA  R2,32
         D     R2,=F'16'         GET NUMBER OF ENTRIES          GP04129
         ST    R3,XNUMCESD
*
         LA    R14,1             START WITH ENTRY NUMBER 1
         B     ESDGO
A000D34  LA    R14,1
         AL    R14,XCESDN
         ST    R14,XCESDN
         TM    YFLAGS,YFSKIP1                                   GP04129
         BNO   A000D50
         NI    YFLAGS,255-YFSKIP1                               GP04129
         B     ESDINCR
A000D50  L     R14,@ESDSUB
         SLA   R14,4             MULTIPLY BY 16
         LA    R6,XLREC(R14)     ACTUALLY XLREC+16-16           GP04126
         TM    0(R6),X'0F'       IS IT AN SD                    GP04126
         BZ    GOTSD             YES, BRANCH
         LA    R6,XLREC(R14)                                    GP04126
         TM    0(R6),X'03'       COULD IT BE AN LR              GP04126
         BNO   ESDINCR           NO, BRANCH
         TM    0(R6),X'0C'       MAYBE, IS IT AN LR             GP04126
         BNZ   ESDINCR           NO, BRANCH
GOTSD    L     R14,@ESDSUB
         ST    R14,XCESDX        SET INDEX TO CESD ENTRY
         BAS   R14,SECTMAP       USE THIS CESD TO MAP LOAD MODULE
         L     R14,@ESDSUB
         SLA   R14,4
         LA    R6,XLREC-8(R14)   ACTUALLY BUFFER+8-16           GP04126
         CLC   0(8,R6),XEBLBL    IS THIS THE RIGHT LABEL        GP04126
         BNE   A000DA6           NO, BRANCH
         L     R14,XLREC(R14)    ACTUALLY BUFFER+16-16
         LA    R14,0(,R14)       ZERO HI ORDER BYTE OF ADDRESS
         ST    R14,XOFFSET       SAVE CSECT ADDRESS
A000DA6  L     R14,@ESDSUB
         SLA   R14,4
         LA    R6,XLREC(R14)     ACTUALLY BUFFER+8-16           GP04126
         TM    0(R6),X'0F'       IS THIS AN SD                  GP04126
         BNZ   ESDINCR           NO, BRANCH
         LA    R6,XLREC-8(R14)                                  GP04126
         CLC   0(8,R6),XEBCS     IS THIS THE REQUESTED CSECT    GP04126
         BNE   ESDINCR           NO, BRANCH
         L     R14,XLREC(R14)    ACTUALLY BUFFER+16-16
         LA    R14,0(,R14)       ZERO HI ORDER BYTE OF ADDRESS
         ST    R14,XCSDADR       SAVE CSECT ADDRESS
         L     R14,XSDX
         ST    R14,XCSECNO
ESDINCR  LA    R14,1             ADD 1 TO
         AL    R14,@ESDSUB       ESD SUBSCRIPT
ESDGO    ST    R14,@ESDSUB
         C     R14,XNUMCESD      HAS SUBSCRIPT HIT SIZE YET
         BNH   A000D34           NO, BRANCH
*
*   CHECK FOR SUCCESSFUL SCAN
*
A000DF0  SLR   R14,R14
         C     R14,XCRSW
         BE    A000CF8
         CLC   XEBCS,BLANKS
         BNE   A000E0E           IF NO CSECT SPECIFIED
         MVC   XCSECNO,=F'1'     USE THE FIRST CSECT            GP04129
         ST    R14,XCSDADR       AND RELATIVE ADDRESS IS 0
A000E0E  L     R14,XSYMOFF
         LTR   R14,R14           WAS LABEL FOUND IN A SYM REC
         BM    A000E20           NO, BR
         AL    R14,XCSDADR       GET POSITION WITHIN LOAD MOD
         ST    R14,XOFFSET       STORE SYM OFFSET + CSECT ADDR
A000E20  SLR   R14,R14
         C     R14,XSDCNT        WAS AT LEAST ONE CSECT FOUND
         BNL   LBLNTFND          BR IF NO
         L     R6,XCSECNO                                       GP04126
         CR    R6,R14            WAS OWNING CSECT FOUND         GP04126
         BNH   LBLNTFND          BR IF NO
         C     R14,XOFFSET       WAS DESIRED LABEL FOUND
         BH    LBLNTFND          BR IF NO
         MH    R6,=H'5'                                         GP04126
         LA    R7,XSDLEN(R6)                                    GP04126
         MVC   XCSLEN+1(3),0(R7) MOVE IN CSECT LENGTH
*
*   SCATTER LOAD PROCESSING FOR NUCLEUS
*
*        GO THROUGH TABLE ADDING UP LENGTH OF EACH CSECT
*        (ROUNDED UP TO NEAREST DOUBLE WORD) PREVIOUS
*        TO DESIRED CSECT.
*
         CLC   XEBLM(6),IEANUC
         BNE   SCMNONUC                                         GP04129
         ST    R14,XACCUM        CLEAR ACCUMULATED LENGTH
         LA    R14,1             SET CSECT COUNTER
         B     A000E8E           GO DO LOOP TEST
A000E60  L     R6,XACCUM         GET ACCUMULATED LENGTH         GP04126
         ST    R6,XSMCSD         SAVE IT                        GP04126
         LR    R7,R14            GET CSECT NUMBER
         MH    R7,=H'5'          GET OFFSET INTO TABLE          GP04129
         SR    R4,R4             CLEAR REG.
         LA    R7,XSDLEN(R7)     POINT AT CSECT LENGTH
         ICM   R4,X'7',0(R7)     LOAD CSECT LENGTH
         LA    R4,7(,R4)         ADD IN ROUNDUP VALUE
         N     R4,=X'FFFFFFF8'   GET DBL WORD ROUNDED UP VALUE  GP04129
         ST    R4,XWORK
         ALR   R6,R4             ADD TO ACCUMULATED VALUE       GP04126
         ST    R6,XACCUM                                        GP04126
         LA    R14,1(,R14)       INCREMENT CSECT COUNTER        GP04129
A000E8E  ST    R14,@ESDSUB
         C     R14,XCSECNO       ALL PREV CSECTS PROCESSED
         BNH   A000E60           NO, BRANCH
         B     A000EA6
*
*   NON-SCATTER-LOAD PROCESSING
*
SCMNONUC L     R14,XCSDADR                                      GP04129
         ST    R14,XSMCSD          DISK ADDR IS SAME AS STORAGE
A000EA6  L     R14,XOFFSET
         SL    R14,XCSDADR         GET OFFSET WITHIN CSECT
         ST    R14,XOFFSET
         AL    R14,XSMCSD          GET OFFSET WITHIN LOAD MOD
         ST    R14,XOFFSET
         B     SCMEXIT
*
LBLNTFND DS    0H                                               GP04127
         LA    R14,MSG09           SYMBOL NOT FOUND IN LOAD MODULE
         ST    R14,XMSE
         BAS   R14,GENERR                                       GP04127
         OC    ZFLAGS,SCANFLAG  SET FLAGS FOR REQUESTOR         GP04129
SCMEXIT  SEXIT ,                                                GP04127
         EJECT ,
*
*   CSECT MAPPING ROUTINE
*
*        INPUT:
*              XCESDX = INDEX INTO ARRAY OF CESD ENTRIES IN A CESD REC
*              XCESDN = CESD NO. OF CURRENT CESD ENTRY
*              CESD = A CESD RECORD
*              XEBLM = LOAD MODULE NAME
*        OUTPUT:
*              XSDNO = ARRAY OF CESD NO.S FRO CSECTS (SD'S) IN LD MOD
*              XSDLEN = ARRAY OF CSECT LENGTHS
*              XSDCNT = COUNT OF CSECTS IN LOAD MODULE (THUS FAR)
*              XSDX = FOR A SD ENTRY, THE RELATIVE CSECT NUMBER
*                     WITHIN THE STORAGE VERSION OF THE LOAD MODULE
*
SECTMAP  SENTRY SAVE=12(R13)                                    GP04127
         L     R14,XCESDX          GET ESD SUBSCRIPT
         SLA   R14,4               MULTIPLY BY 16
         LA    R6,XLREC(R14)       POINT TO ESD ENTRY + 8       GP04126
         TM    0(R6),X'03'         IS IT AN LR                  GP04126
         BNO   A000F70             NO, BRANCH
         TM    0(R6),X'0C'         IS IT AN LR                  GP04126
         BNZ   A000F70             NO, BRANCH
*
*   IF CESD ENTRY IS A LABEL REFERENCE (ENTRY POINT) CHECK FOR
*   SCATTER LOADING (IE. NUCLEUS). SINCE THE SCATTER-LOADED
*   NUCLEUS IS LOADED AS CESD ENTRIES (SD'S OR LR'S) OCCUR IN THE
*   CESD RECORDS, ADD THE CESD NUMBER OF THE LABEL'S CSECT TO
*   THE SD (CSECT) ARRAY
*
         CLC   XEBLM(6),IEANUC   IS THIS A NUCLEUS ZAP
         BNE   A000F70             NO, BRANCH
         MVC   XSDX,=F'1'                                       GP04129
         B     A000F46
A000F04  L     R14,XSDX
         L     R6,XSDCNT                                        GP04126
         CR    R14,R6                                           GP04126
         BNH   A000F3A
         LA    R6,1(,R6)                                        GP04126
         ST    R6,XSDCNT                                        GP04126
         MH    R14,=H'5'                                        GP04129
         L     R6,XCESDX                                        GP04126
         SLA   R6,4                                             GP04126
         LH    R6,XLREC+6(R6)                                   GP04126
         N     R6,=X'0000FFFF'                                  GP04126
         LA    R7,XSDNO(R14)
         STCM  R6,3,0(R7)                                       GP04126
         B     A000F46
A000F3A  LA    R14,1
         AL    R14,XSDX
         ST    R14,XSDX
A000F46  L     R14,XSDX
         MH    R14,=H'5'                                        GP04129
         L     R6,XCESDX                                        GP04126
         SLA   R6,4                                             GP04126
         LH    R6,XLREC+6(R6)                                   GP04126
         N     R6,=X'0000FFFF'                                  GP04126
         LA    R7,XSDNO(R14)
         ICM   R14,12,0(R7)
         SRA   R14,16                                           GP04126
         CR    R6,R14                                           GP04126
         BNE   A000F04
*
*   IF CESD ENTRY IS A SECTION DEFINITION (SD OR CSECT), ADD THE
*   CESD NO. FOR THE CSECT TO THE ARRAY.  IF LOAD MOD IS THE NUCLEUS
*   CHECK FIRST THAT AN ENTRY MIGHT ALREADY BE IN THE ARRAY FOR
*   THIS CESD NO. FROM AN EARLIER 'LR' ENTRY.  ONCE THE PROPER
*   CESD ENTRY HAS BEEN FOUND OR ADDED TO THE ARRAY, PUT IN THE
*   LENGTH OF THIS CSECT.
*
A000F70  L     R14,XCESDX          GET ESD SUBSCRIPT
         SLA   R14,4               MULTIPLY BY 16
         LA    R6,XLREC(R14)       POINT TO ESD ENTRY + 8       GP04126
         TM    0(R6),X'0F'         IS IT AN SD                  GP04126
         BNZ   A00102C             NO, BRANCH
         CLC   XEBLM(6),IEANUC     IS THIS A NUCLEUS ZAP
         BNE   A000FEE             NO, BRANCH
         MVC   XSDX,=F'1'                                       GP04129
         B     A000FCE
A000F98  L     R14,XSDX
         L     R6,XSDCNT                                        GP04126
         CR    R14,R6                                           GP04126
         BNH   A000FC2
         LA    R6,1(,R6)                                        GP04126
         ST    R6,XSDCNT                                        GP04126
         MH    R14,=H'5'                                        GP04129
         L     R6,XCESDN                                        GP04126
         LA    R7,XSDNO(R14)
         STCM  R6,3,0(R7)                                       GP04126
         B     A000FCE
A000FC2  LA    R14,1
         AL    R14,XSDX
         ST    R14,XSDX
A000FCE  L     R14,XSDX
         MH    R14,=H'5'                                        GP04129
         LA    R6,XSDNO(R14)                                    GP04126
         ICM   R14,12,0(R6)                                     GP04126
         SRA   R14,16
         C     R14,XCESDN
         BNE   A000F98
         B     A00100E
A000FEE  LA    R14,1
         AL    R14,XSDCNT
         ST    R14,XSDCNT
         ST    R14,XSDX
         MH    R14,=H'5'                                        GP04129
         L     R6,XCESDN                                        GP04126
         LA    R7,XSDNO(R14)
         STCM  R6,3,0(R7)                                       GP04126
A00100E  L     R14,XSDX
         MH    R14,=H'5'                                        GP04129
         L     R6,XCESDX           GET SUBSCRIPT                GP04126
         SLA   R6,4                MULTIPLY BY 16               GP04126
         LA    R7,XSDLEN(R14)
         LA    R14,XLREC+4+1(R6)                                GP04126
         MVC   0(3,R7),0(R14)
A00102C  SEXIT ,                                                GP04127
         EJECT ,
*
*   SYM REC PROCESSING ROUTINE
*
*        INPUT:
*              XEBCS = CSECT CONTAINING LABEL
*              XEBLBL = LABEL BEING SEARCHED FOR
*              XLREC = FIRST SYMREC
*        OUTPUT:
*              XSYMOFF = OFFSET OF LABEL IN CSECT
*              XLREC = NEXT LIBRARY RECORD AFTER ALL SYMREC'S
*
SYMCHK   SENTRY ,                                               GP04127
         SLR   R14,R14
         ST    R14,XSYMTOTX
         LA    R14,XLREC+4
         ST    R14,XSYMCPT
         OI    YFLAGS,YFSYMSKP+YFSYMGO                          GP04128
         BAS   R14,SYMNEW                                       GP04127
         B     A00118A
A001054  LA    R14,@WAY08
         B     A001068
A00105C  BAS   R14,SYMFETCH                                     GP04127
         LA    R14,1
         AL    R14,XSYMFAD
A001068  ST    R14,XSYMFAD
         LA    R6,@WAY08                                        GP04126
         SL    R6,MINUS003                                      GP04126
         CR    R14,R6                                           GP04126
         BNH   A00105C
         TM    YFLAGS,YFSYMGO                                   GP04129
         BNO   A00118A
         TM    @WAY08,X'88'
         BO    A00113A
         MVC   @WAY08A(8),BLANKS
         LA    R14,@WAY08A
         B     A0010A4
A001098  BAS   R14,SYMFETCH                                     GP04127
         LA    R14,1
         AL    R14,XSYMFAD
A0010A4  ST    R14,XSYMFAD
         LA    R6,@WAY08A                                       GP04126
         LA    R7,7
         SLR   R4,R4
         IC    R4,@WAY08
         NR    R7,R4
         ALR   R6,R7                                            GP04126
         CR    R14,R6                                           GP04126
         BNH   A001098
         TM    YFLAGS,YFSYMSKP                                  GP04128
         BNO   A0010FC
         TM    @WAY08,X'80'
         BNZ   A0010F8
         TM    @WAY08,X'10'
         BNO   A0010F8
         TM    @WAY08,X'60'
         BNZ   A0010F8
         CLC   @WAY08A(8),XEBCS
         BE    A0010F4
         CLC   XEBCS,BLANKS
         BNE   A0010F8
A0010F4  NI    YFLAGS,255-YFSYMSKP                              GP04128
A0010F8  B     A00113A
A0010FC  TM    @WAY08,X'80'
         BNZ   A001126
         TM    @WAY08,X'10'
         BNO   A001126
         TM    @WAY08,X'60'
         BNZ   A001126
         CLC   XEBCS,BLANKS
         BE    A001122
         OI    YFLAGS,YFSYMSKP                                  GP04128
A001122  B     A00113A
A001126  CLC   @WAY08A(8),XEBLBL
         BNE   A00113A
         SLR   R14,R14
         ICM   R14,7,@WAY08Z
         ST    R14,XSYMOFF
A00113A  TM    @WAY08,X'80'
         BNO   A00118A
         LA    R14,@WAY08B
         ST    R14,XSYMFAD
         BAS   R14,SYMFETCH                                     GP04127
         LA    R14,@WAY08C
         ST    R14,XSYMFAD
         BAS   R14,SYMFETCH                                     GP04127
         CLI   @WAY08B,X'10'
         BNL   A001166
         BAS   R14,SYMFETCH                                     GP04127
A001166  TM    @WAY08,X'40'
         BNO   A00117A
         BAS   R14,SYMFETCH                                     GP04127
         BAS   R14,SYMFETCH                                     GP04127
         BAS   R14,SYMFETCH                                     GP04127
A00117A  TM    @WAY08,X'10'
         BNO   A00118A
         BAS   R14,SYMFETCH                                     GP04127
         BAS   R14,SYMFETCH                                     GP04127
A00118A  TM    YFLAGS,YFSYMGO                                   GP04129
         BO    A001054
         SEXIT ,                                                GP04127
         EJECT ,
*
*   CHARACTER FETCHING ROUTINE FOR SYMREC PROCESSING
*
*        INPUT:
*              XSYMFAD = ADDR OF BYTE TO RECEIVE FETCHED CHARACTER.
*        OUTPUT:
*              XSYMFAD->BYTE = FETCHED CHARACTER
*              XSYMFGO = ON IF DATA ARE EXHAUSTED               GP04128
*
SYMFETCH SENTRY ,                                               GP04127
         L     R14,XSYMRECX
         L     R6,XSYMCPT                                       GP04126
         ICM   R6,12,10(R6)                                     GP04126
         SRA   R6,16
         CR    R14,R6                                           GP04126
         BL    A0011B6
         BAS   R14,SYMNEW                                       GP04127
A0011B6  TM    YFLAGS,YFSYMGO                                   GP04129
         BNO   A0011E0
         L     R14,XSYMFAD
         L     R6,XSYMFPT                                       GP04126
         MVC   0(1,R14),0(R6)                                   GP04126
         LA    R14,1
         L     R7,XSYMRECX
         ALR   R7,R14
         ST    R7,XSYMRECX
         ALR   R6,R14                                           GP04126
         ST    R6,XSYMFPT                                       GP04126
A0011E0  SEXIT ,                                                GP04127
         EJECT ,
*
*   ROUTINE TO GET A NEW SYMREC LOGICAL RECORD
*
SYMNEW   SENTRY ,                                               GP04127
         SLR   R14,R14
         ST    R14,XSYMRECX
         ST    R14,XSYMFPT       SET PNTR = 0
         B     A001268           DO WHILE PNTR = 0 AND YFSYMGO ON
A0011F8  L     R14,XSYMTOTX
         CH    R14,XLREC+2
         BL    A001226
         SLR   R14,R14
         ST    R14,XSYMTOTX
         BAS   R14,READLIB                                      GP04127
         CLI   XLREC,C' '        SYM
         BNE   A001222             NO, BRANCH
         LA    R14,XLREC+4
         ST    R14,XSYMCPT
         B     A001226
A001222  NI    YFLAGS,255-YFSYMGO    SET YFSYMGO OFF            GP04129
A001226  L     R14,XSYMTOTX
         LTR   R14,R14
         BZ    A00123C
         LA    R14,80
         AL    R14,XSYMCPT
         ST    R14,XSYMCPT
A00123C  LA    R14,80
         AL    R14,XSYMTOTX
         ST    R14,XSYMTOTX
         L     R14,XSYMCPT
         CLC   1(3,R14),SYM
         BNE   A001268
         L     R6,XSYMOFF                                       GP04126
         LTR   R6,R6                                            GP04126
         BNM   A001268
         LA    R14,16(,R14)
         ST    R14,XSYMFPT
A001268  L     R14,XSYMFPT
         LTR   R14,R14
         BNZ   A00127A
         TM    YFLAGS,YFSYMGO                                   GP04129
         BO    A0011F8
A00127A  SEXIT ,                                                GP04127
         EJECT ,
*
*    SYNTAX ERROR MESSAGE ROUTINE
*
         SPACE 1
SYNERR   SENTRY ,                                               GP04127
         MVC   @LINE01(L'SYNTAX),SYNTAX                         GP04128
         L     R14,XMSE
         SR    R6,R6                                            GP04127
         IC    R6,0(,R14)                                       GP04126
         EX    R6,EXSYNMSG         MOVE 1(R14) TO LINE+16       GP04126
         BAS   R14,PUTLINE                                      GP04127
         OI    XCODE+3,8                                        GP04128
         OI    ZFLAGS,ZFSSYN+ZFSERR FATAL ERR - NO REP NOR RES  GP04128
         SEXIT ,                                                GP04127
         SPACE 1
*
*   ROUTINE TO GAIN SUPERVISOR STATE, KEY ZERO
*
         SPACE 1
MODESET1 STM   R14,R1,MODSAVE                                   GP04127
         MODESET KEY=ZERO,MODE=SUP
         LM    R14,R1,MODSAVE                                   GP04127
         BR    R14
         SPACE 1
*
*   ROUTINE TO RETURN TO PROBLEM STATE AND KEY
*
         SPACE 1
MODESET2 STM   R14,R1,MODSAVE                                   GP04127
         MODESET KEY=NZERO,MODE=PROB
         LM    R14,R1,MODSAVE                                   GP04127
         BR    R14
         EJECT ,
*
*    VERB SCANNING AND ROUTING ROUTINE
*
         SPACE 1
VERBSCN  SENTRY ,                                               GP04127
         LA    R14,XEBV
         ST    R14,XRCVADDR
         MVC   XRCVLEN,=F'8'                                    GP04129
         BAS   R14,GETFLD                                       GP04127
         LA    R6,(OPCODEN-OPCODES)/(OPCODE2-OPCODES) LOOP CNT  GP04129
         L     R7,=A(OPCODES)      OPCODE TABLE                 GP04129
VERBLOOP CLC   XEBV(3),0(R7)       IS THIS THE RIGHT VERB       GP04129
         BNE   VERBBUMP            NO, GO INCREMENT TO NEXT ONE GP04129
         SLR   R15,R15                                          GP04126
         ICM   R15,3,3(R7)   GET ROUTINE OFFSET FROM BASE       GP04126
         LA    R15,ZAPOSMEM(R15) ROUTINE ADDRESS                GP04126
         BASR  R14,R15             CALL THE ROUTINE FOR THIS OPERATION
         B     VERBSCNX                                         GP04129
VERBBUMP LA    R7,OPCODE2-OPCODES(,R7)  NEXT ENTRY              GP04129
         BCT   R6,VERBLOOP         NO, KEEP CHECKING            GP04129
         LA    R14,MSG10           OPERATION REQUESTED IS INVALID
         ST    R14,XMSE
         BAS   R14,SYNERR          SYNTAX                       GP04127
VERBSCNX SEXIT ,                                                GP04127
         EJECT ,
*
*   ROUTINE TO HANDLE COMMENT STATEMENTS
*
         SPACE 1
COMMENT  BR    R14
         SPACE 1
*
*   CONSOLE VERB ROUTINE
*
         SPACE 1
CON      SENTRY SAVE=12(R13)                                    GP04127
         OI    XFLAGS,XFCON
         L     R14,XENDREC
         ST    R14,XCSER
         L     R14,XPENDREC
         ST    R14,XCSPER
         ST    R14,XENDREC
         SEXIT ,                                                GP04127
         SPACE 1
*
*   END VERB ROUTINE
*
         SPACE 1
END      SENTRY SAVE=12(R13)                                    GP04127
         NI    XFLAGS,255-XFCON
         L     R14,XCSER
         ST    R14,XENDREC
         L     R14,XCSPER
         ST    R14,XPENDREC
         SEXIT ,                                                GP04127
         EJECT ,
*
*   DUMP VERB ROUTINE
*
         SPACE 1
DUM      SENTRY ,                                               GP04127
         IC    R3,ZFLAGS     PRESERVE ERROR FLAGS OVER DUMP     GP04129
         MVI   ZFLAGS,0      RESET ALL                          GP04129
         BAS   R14,NAM                                          GP04127
         CLI   ZFLAGS,0      ALL OK ?                           GP04129
         BNE   DUMDUM        NO                                 GP04129
         BAS   R14,DUMP                                         GP04127
DUMDUM   STC   R3,ZFLAGS     RESTORE FLAGS                      GP04129
         SEXIT ,                                                GP04127
         SPACE 1
*
*   GLOBAL VERB ROUTINE
*
         SPACE 1
GLO      NI    XFLAGS,255-XFLOCSW
         BR    R14
         SPACE 1
*
*   LOCAL VERB ROUTINE
*
         SPACE 1
LOC      OI    XFLAGS,XFLOCSW
         BR    R14
         EJECT ,
*
*   NAME VERB ROUTINE
*
         SPACE 1
NAM      SENTRY ,                                               GP04127
         NI    ZFLAGS,ZFNUNAME  RESET MOST FLAGS                GP04129
         OI    ZFLAGS,ZFSNAME  SET FOR NO VALID NAME            GP04129
         SLR   R14,R14
         STCM  R14,7,XCSLEN+1
*
*   GET OPERANDS
*
         ST    R14,XBASE
         MVC   XRCVLEN,=F'8'                                    GP04129
         LA    R14,XEBLM            PUT ADDRESS OF MEMBER
         ST    R14,XRCVADDR          IN GETFLD RESULT POINTER
         B     NAMGO1               DO UNTIL POINTER GT MEMBER+8
NAMLP1   BAS   R14,GETFLD           CALL GETFLD TO GET NEXT OPERAND
         LA    R14,8                ADD 8
         AL    R14,XRCVADDR          TO
         ST    R14,XRCVADDR           GETFLD RESULT ADDRESS
NAMGO1   LA    R6,XEBCS             IF R14 GT MEMBER+8          GP04126
         CR    R14,R6                THEN                       GP04126
         BNH   NAMLP1                 EXIT DO LOOP
*
*   CHECK FOR A GLOBAL MODULE IN LOCAL MODE
*
         TM    XFLAGS,XFLOCSW        LOCAL MODE
         BNO   NAMOK1                NO, BRANCH
         CLC   XEBLM(6),IEANUC       YES, DOES NAME LOOK GLOBAL
         BE    NAMWARN               YES, ISSUE WARNING
         CLC   XEBLM(5),IGC00        DOES NAME LOOK GLOBAL
         BNE   NAMOK1                NO, BRANCH
NAMWARN  MVC   @LINE01(L'WARNMSG),WARNMSG                       GP04127
         BAS   R14,PUTLINE                                      GP04127
*
*   IF A CSECT WAS SPECIFIED, GET THE OFFSET TO THIS CSECT FROM
*   THE BEGINNING OF THE LOAD MODULE
*
NAMOK1   TM    ZFLAGS,ZFSSYN ERROR SO FAR ?                     GP04129
         BNZ   NAMINERR                                         GP04129
         CLC   XEBCS,BLANKS
         BNE   A001456
         SLR   R14,R14               CSECT OMITTED
         ST    R14,XCSOFF            OFFSET ZERO INTO MODULE
         B     NAMINERR                                         GP04129
A001456  MVC   XEBLBL(8),XEBCS       MAKE CSECT THE LABEL TO LOOKUP
         MVC   SCANFLAG,ZFSNAME+ZFSSYN  FLAGS FOR BAD FIND, ETC.
         BAS   R14,SCANMOD           GO SCAN MODULE FOR THIS LABEL
         L     R14,XOFFSET
         ST    R14,XCSOFF            OFFSET INTO MODULE
*
*   GET STORAGE ADDRESS OF LOAD MODULE
*
NAMINERR TM    ZFLAGS,ZFSSYN                                    GP04129
         BNZ   NAMEX
         TM    XFLAGS,XFLOCSW
         BNO   NAMNOLOC              BR IF NOT LOCAL MODE       GP04129
*                                                             12/90 JEB
*   LOAD A COPY FOR LOCAL MODE                                12/90 JEB
*                                                             12/90 JEB
         L     R14,=A(LOADPL)
         MVC   XLOADPL(LOADLEN),0(R14)                        12/90 JEB
         LOAD  EPLOC=XEBLM,DCB=DYNDCBLB,SF=(E,XLOADPL)        12/90 JEB
         BAS   R14,SCANLPA           GO FIND LOADED MODULE IN JPA
         B     NAMEEOD
NAMNOLOC CLC   XEBLM(6),IEANUC                                  GP04129
         BNE   NAMSCNL
         CLC   XEBCS,BLANKS          NUCLEUS, IS CSECT SPECIFIED
         BNE   PASTNCSE              YES, BRANCH
         LA    R14,MSG05             NO, CSECT REQUIRED WITH NUCLEUS
         ST    R14,XMSE
         BAS   R14,GENERR                                       GP04127
         B     NAMEX                 EXIT
*
PASTNCSE DS    0H                                               GP04127
         L     R14,CVTPTR                                       GP04126
         TM    CVTDCB-CVT(R14),CVTMVSE   IS THIS MVS/XA
         BO    NAMEEOD               YES, SKIP SETTING LM ADDR (SET
*                                    BY SCANMOD ROUTINE)
         SLR   R14,R14
         ST    R14,XLMADDR           NUCLEUS LOCATION IS ZERO
         B     NAMEEOD
NAMSCNL  BAS   R14,SCANLPA                                      GP04127
NAMEEOD  TM    ZFLAGS,ZFSSYN LEAVE ZFSNAME ON - NO VALID ADDR   GP04129
         BNZ   NAMEX
         L     R14,XLMADDR
         AL    R14,XCSOFF
         ST    R14,XCSADDR           ADDRESS OF CSECT
         ST    R14,XLOC
         BAS   R14,PRADDR                                       GP04127
         NI    ZFLAGS,255-ZFSNAME  WE HAVE A VALID NAME         GP04129
NAMEX    SEXIT ,                                                GP04127
         EJECT ,
*
*   RETURN CODE ROUTINE
*
         SPACE 1
RC       SENTRY ,                                               GP04127
         MVC   @LINE01(L'EQRC),EQRC = RETURN CODE               GP04128
         MVC   @LINE01+L'EQRC(4),=X'40202120'  EDIT MASK        GP04128
         L     R0,XCODE      GET CURRENT RETURN CODE            GP04128
         CVD   R0,DB         CHANGE TO PACKED                   GP04128
         ED    @LINE01+L'EQRC(4),DB+6  INTEGER RETURN CODE      GP04128
         BAS   R14,PUTLINE                                      GP04127
         SEXIT ,                                                GP04127
         EJECT ,
*
*    REP OR RES OR RESET
*
         SPACE 1
REP      SENTRY ,                                               GP04127
         TM    ZFLAGS,ZFNOGO FATAL ERROR BEFORE ?               GP04128
         BNZ   REPIGN        YES; JUST FLUSH                    GP04128
         CLC   XEBV,RESET          IS IT RESET
         BNE   REPIN               NO, BRANCH IF REP OR RES
         NI    ZFLAGS,255-ZFNOGO   RESET, JUST SET NOGO OFF     GP04129
         B     REPX
REPIN    TM    ZFLAGS,ZFNOGO       IS NOGO SWITCH ON            GP04129
         BZ    REPGO               NO, BRANCH                   GP04129
REPIGN   MVC   @LINE01(L'IGNORED),IGNORED                       GP04128
         BAS   R14,PUTLINE                                      GP04127
         B     REPX
REPGO    BAS   R14,GETOFF                                       GP04127
         BAS   R14,GETHEX                                       GP04127
         TM    ZFLAGS,ZFSNAME+ZFSBASE+ZFSVER+ZFSREP+ZFSSYN+ZFSERR
         BNZ   REPX                SKIP IF ANY ERROR            GP04129
         CLC   XEBV,=CL8'REP'      IS THIS A REP
         BNE   RESTOREX            NO, GO DO RESTORE PROCESSING
         BAS   R14,FIXER           FIX PAGE IF REP              GP04127
         BAS   R14,MODIFY          GO MODIFY STORAGE            GP04127
         B     REPX                SKIP RESTORE PROCESSING
RESTOREX DS    0H                                               GP04127
         BAS   R14,MODIFY          GO MODIFY STORAGE            GP04127
         BAS   R14,FIXER           GO UNFIX STORAGE             GP04127
REPX     SEXIT ,                                                GP04127
         EJECT ,
*
*   VERIFY ROUTINE
*
         SPACE 1
VER      SENTRY ,                                               GP04127
         IC    R3,ZFLAGS     LOAD PROCESSING FLAG               GP04128
         BAS   R14,GETOFF          GO GET VALUE OF OFFSET       GP04127
         BAS   R14,GETHEX          GO GET HEX STRING            GP04127
         TM    ZFLAGS,ZFSNAME+ZFSBASE+ZFSVER+ZFSSYN  NON-VER ?  GP04129
         BNZ   VERX          NO; SKIP                           GP04129
         CLM   R3,1,ZFLAGS   ERROR ON THIS STATEMENT ?          GP04128
         BNE   VERX          YES; DON'T TRY TO VERIFY           GP04128
         SPACE 1                                                GP04128
*---------------------------------------------------------------------*
*    REPLACED THE EFFICIENT EX/CLC CODE WITH CLCL TO GET MISMATCH     *
*    ADDRESS AND RESIDUAL LENGTH IN THE REGISTERS                     *
*    ADDED DIAGNOSTIC PRINTOUT OF THE MISMATCH LOCATION               *
*---------------------------------------------------------------------*
         L     R6,XZADDR     MEMORY                             GP04128
         L     R7,XHL        LENGTH                             GP04128
         LA    R2,XHS        INPUT STRING                       GP04128
         LR    R3,R7         SAME LENGTH                        GP04128
         CLCL  R2,R6                                            GP04128
         BE    VERX                EXIT IF IT VERIFIES OK
         OI    ZFLAGS,ZFSVER+ZFSERR  SET NOGO SWITCH            GP04129
         OI    XCODE+3,4                                        GP04128
         MVC   @LINE01(L'REJECT),REJECT                         GP04128
         BAS   R14,PUTLINE         ISSUE REJECT MESSAGE         GP04127
         MVC   @LINE01+2+3(5),=CL5'FOUND'                       GP04128
         LA    R15,@LINE01+11                                   GP04128
         ICM   R0,15,0(R6)   SHOW DATA                          GP04128
         BAS   R14,HEXCON                                       GP04128
         MVC   @LINE01+20(2),=C'AT'                             GP04129
         LA    R15,@LINE01+20+2+1                               GP04128
         LR    R0,R6         MISMATCH ADDRESS                   GP04128
         BAS   R14,HEXCON    FORMAT IT                          GP04128
         BAS   R14,PUTLINE   PRINT DATA IN MEMORY               GP04127
         MVC   @LINE01+2(8),=CL8'EXPECTED'                      GP04128
         LA    R15,@LINE01+11                                   GP04128
         ICM   R0,15,0(R2)   SHOW DATA FROM VER STATEMENT       GP04128
         BAS   R14,HEXCON                                       GP04128
         BAS   R14,PUTLINE   PRINT DATA IN MEMORY               GP04127
         BAS   R14,DUMP            DUMP THE MODULE              GP04127
VERX     SEXIT ,                                                GP04127
         EJECT ,
*
*   ZERO (AND PGFIX) STORAGE ROUTINE
*
         SPACE 1
ZAP      SENTRY ,                                               GP04127
         BAS   R14,VER                                          GP04127
         TM    ZFLAGS,ZFNOGO ANY INHIBITIONS ?                  GP04128
         BNZ   ZAPX
         BAS   R14,FIXER           FIX PAGE IF LPA              GP04127
         L     R14,XHL
         BCTR  R14,R0              LENGTH MINUS 1 FOR EX
         EX    R14,EXZAPXC         MAKE REP DATA ALL ZEROS
         BAS   R14,MODIFY                                       GP04127
ZAPX     SEXIT ,                                                GP04127
         EJECT ,
*
*   ROUTINE TO MODIFY STORAGE
*
*        INPUT:
*              XHS = HEX STRING
*              XHL = LENGTH OF HEX STRING
*              XZADDR = ADDRESS OF CORE TO BE OVERLAYED
*
MODIFY   SENTRY ,                                               GP04127
         MVC   @LINE01(L'OLDWERE),OLDWERE                       GP04128
         L     R14,XHL            LENGTH OF DATA TO BE MODIFIED
         ST    R14,XHEXL
         L     R14,XZADDR         ADDRESS OF DATA TO BE MODIFIED
         ST    R14,XHEX
         LA    R14,@LINE01+L'OLDWERE+1                          GP04128
         ST    R14,XEBAD          PUT HEX DUMP AT LINE+L'+1     GP04129
         BAS   R14,HEXCV          CONVERT OLD DATA TO HEX       GP04127
         BAS   R14,PUTLINE        DISPLAY OLD DATA              GP04127
         BAS   R14,MODESET1       SUPV STATE KEY ZERO           GP04127
         L     R14,XZADDR         GET ADDRESS TO BE MODIFIED
         L     R6,XHL             GET LENGTH OF DATA            GP04126
         B     MODLPTST           GO DO LOOP TEST
*
MODLOOP  DS    0H                                               GP04127
         LA    R8,0(R6,R14)       POINT AT BYTE TO MOVE         GP04126
         L     R2,PSAAOLD         GET ADDR OF CURRENT ASCB
         N     R8,MASKPAGE        GET LOWER PAGE BOUNDARY
         STCTL 1,1,I              GET SET TABLE ORIGIN
         L     R2,I               GET CONTENTS OF STO REG
         L     R15,CVTPTR         GET ADDR OF CVT               GP04126
         TM    CVTDCB-CVT(R15),CVTMVSE  IS THIS MVS/XA
         BO    MODXA              YES, GO DO XA PROCESSING
*
*   TEMPORARILY TURN OFF SEGMENT PROTECTION
*
         SRL   R8,16              ISOLATE SEG INDEX (SX)
         SLL   R8,2               MULT SX*4 TO GET OFFSET
         N     R2,MASKSTO3        ISOLATE ADDR OF SEG TBL
         BAS   R15,REAL2VIR       CONVERT TO VIRTUAL ADDR       GP04127
         ALR   R2,R8              GET ADDR OF SEG TBL ENTRY
         L     R8,MASKSPBT        GET MASK FOR SEG PROT BIT
         LA    R9,3(,R2)          POINT AT BYTE CONTAINING SP BIT
         N     R8,0(,R2)          ISOLATE SEG PROT BIT
         BZ    MODIT              BR IF NOT PROTECTED
         NI    0(R9),X'FB'        TURN OFF SEG PROT
         B     MODPTLB            SKIP XA PROCESSING
*
*   TURN OFF PAGE PROTECTION FOR XA
*
MODXA    DS    0H                                               GP04127
         SR    R9,R9              CLEAR SECOND REG OF PAIR
         SRDL  R8,20              ISOLATE SX & PUT PX IN R9
         SLL   R8,2               GET SEG TBL OFFSET (SX*4)
         N     R2,MASKSTOX        ISOLATE ADDR OF SEG TABLE
         BAS   R15,REAL2VIR       GET VIRTUAL ADDR              GP04127
         ALR   R2,R8              GET ADDR OF SEG TBL ENTRY
         SRL   R9,22              GET PAGE TABLE OFFSET (PX*2)
         L     R2,0(,R2)          GET CONTENT OF SEG TBL ENTRY
         N     R2,MASKSTE         ISOLATE ADDR OF PAGE TBL ORIGIN
         BAS   R15,REAL2VIR       GET VIRTUAL ADDR              GP04127
         ALR   R9,R2              GET ADDR OF PAGE TBL ENTRY
         L     R8,0(,R9)          GET CONTENTS OF PAGE TABLE ENTRY
         N     R8,MASKPPBT        ISOLATE PAGE PROT BIT
         BZ    MODIT              BR IF NO PAGE PROT
         SRL   R8,8               SHIFT BYTE TO LO-ORDER
         LA    R9,2(,R9)          GET ADDR OF BYTE WITH PP BIT IN IT
         NI    0(R9),X'FD'        TURN OFF PAGE PROT
MODPTLB  DS    0H                                               GP04127
         PTLB  ,                  ELIM PROT BIT FROM TLB
*
*   MODIFY STORAGE A BYTE AT A TIME
*
MODIT    DS    0H                                               GP04127
         IC    R0,XHS(R6)         GET FROM BYTE                 GP04126
         STC   R0,0(R6,R14)       MODIFY STORAGE                GP04126
         EX    R8,EXORPROT        TURN PROT BIT BACK ON
MODLPTST BCTR  R6,0          DECREMENT                          GP04127
         LTR   R6,R6           AND TEST                         GP04126
         BNM   MODLOOP            BRANCH UNTIL DONE
*
         BAS   R14,MODESET2       PROB STATE KEY NZERO          GP04127
         SEXIT ,                                                GP04127
         EJECT ,
*
*   REAL TO VIRTUAL CONVERSION SUBROUTINE
*
*        INPUT
*              R2 - REAL ADDR
*              R15 - RETURN ADDR
*        OUTPUT
*              R1,R3 - ALTERED
*              R2 - CONVERTED VIRTUAL ADDRESS
*
REAL2VIR DS    0H                                               GP04127
         LR    R1,R2              COPY INPUT ADDR
         SRL   R1,12              SHIFT OFF DISPLACEMENT
         L     R3,CVTPTR          GET ADDR OF CVT
         TM    CVTDCB-CVT(R3),CVTMVSE IS THIS MVS/XA
         L     R3,CVTPVTP-CVT(,R3)  GET ADDR OF PVT
         BO    R2VXA              YES, BRANCH
*
         L     R3,PVTPFTP(,R3)    GET ADDR OF PFT
         SLL   R1,4               GET PFT DISPLACEMENT
         AR    R3,R1              GET PFTE ADDR
         SR    R1,R1              CLEAR
         ICM   R1,6,PFTVBN(R3)    GET VIRT BLK NO.
         B     R2VB               SKIP XA PROCESSING
*
R2VXA    DS    0H                                               GP04127
         L     R3,PVTRIT(,R3)     GET ADDR IF RIT
         L     R3,RITPFT(,R3)     GET ADDR OF PFT
         SLL   R1,5               GET PFT DISPLACEMENT
         L     R1,PFTVSA(R1,R3)   GET VIRT PAGE ADDR
*
R2VB     DS    0H                                               GP04127
         N     R2,MASKPGDP        GET PAGE DISPLACEMENT
         OR    R2,R1              COMBINE WITH VIRT PAGE NO.
         BR    R15                RETURN
         EJECT ,
*
*   EXECUTED INSTRUCTIONS
*
         SPACE 1
EXLOGMVC MVC   @LINE01(0),0(R14)                                GP04129
EXPUTMVC MVC   @LINE01(0),1(R14)                                GP04127
EXPARBLK MVC   0(0,R14),BLANKS                                  GP04129
EXPARMVC MVC   0(0,R6),0(R7)                                    GP04126
EXREPDAT MVC   0(0,R6),XHS                                      GP04126
EXSYNMSG MVC   @LINE01+L'SYNTAX+1(0),1(R14)                     GP04128
EXZAPXC  XC    XHS(0),XHS                                       GP04129
EXORPROT OI    0(R9),*-*
EXMVCLOC MVC   LOCTEXT(0),0(R6)    COPY LINE OF TEXT            GP04126
EXMVCTXT MVC   DDTEXT(0),LOCTEXT   COPY LINE OF TEXT            GP04126
EXHEXTRT TRT   0(0,R3),0(R14)  SCAN HEX CHARS AND STOPPER       GP04127
EXTSTODD TM    =X'01',*-*      CHECK FOR ODD DIGIT COUNT        GP04127
EXMVCQUO MVC   0(0,R6),0(R3)   MOVE QUOTED TEXT                 GP04127
EXMVUNHX MVC   0(0,R14),0(R1)  MOVE BAD DATA                    GP04128
EXFINDOP TRT   0(0,R3),0(R14)  LOOK FOR NON-BLANK               GP04129
EXMVCHEX MVC   FW(0),0(R3)   MOVE UP TO ONE WORD                GP04129
EXHEXMVC MVC   0(0,R6),DB    MOVE TO OUTPUT                     GP04129
EXTRTSPL TRT   0(0,R3),0(R14)  FIND A STOPPER                   GP04129
         SPACE 1                                                GP04126
         LTORG ,                                                GP04126
         EJECT ,
***********************************************************************
*                                                                     *
*         CONSTANTS                                                   *
*                                                                     *
***********************************************************************
         SPACE 1
MINUS003 DC    F'-3'
PGFIX    DC    X'42000000'                                      GP04127
PGFREE   DC    X'20000000'                                      GP04127
MASKPAGE DC    X'FFFFF000'           PAGE BOUNDARY MASK
MASKPGDP DC    X'00000FFF'           PAGE DISPLACEMENT MASK
MASKSTO3 DC    X'00FFFFC0'           370-MODE STO REG MASK
MASKSTOX DC    X'7FFFF000'           XZ-MODE STO REG MASK
MASKSPBT DC    X'00000004'           SEG PROT BIT MASK
MASKSTE  DC    X'7FFFFFC0'           SEG TBL ENTRY MASK
MASKPPBT DC    X'00000200'           PAGE PROT BIT MASK
SIZE     DC    A(@DATAL)             LENGTH OF GETMAINED AREA
BLANKS   DC    C'        '
RESET    DC    C'RESET   '
IEANUC   DC    C'IEANUC'
IGC00    DC    C'IGC00'
SYM      DC    C'SYM'
*
*   MESSAGES
*
WHEREMSG DC    C'STORAGE ADDRESS OF SYMBOL'                     GP04129
IGNORED  DC    C'OPERATION IGNORED - NO GO SWITCH SET'          GP04127
REJECT   DC    C'VERIFY REJECT - SET NO GO SWITCH'              GP04127
OLDWERE  DC    C'OLD DATA WERE'                                 GP04127
EQRC     DC    C'RETURN CODE ='                                 GP04128
SYNTAX   DC    C'ERROR -'                                       GP04127
WARNMSG  DC    C'WARNING -- LOCAL MODE IS PROBABLY INVALID FOR THIS MOD*
               ULE'                                             GP04128
HEADING  DC    CL121'1MAIN STORAGE ZAP SERVICE AID PROGRAM'     GP04127
MSG01    MSG   'FIELD IS TOO LONG'                              GP04127
MSG02    MSG   'OFFSET FIELD IS TOO LONG'                       GP04127
MSG03    MSG   'INVALID HEXADECIMAL CHARACTER'                  GP04127
MSG04    MSG   'MODULE NOT FOUND IN MAIN STORAGE'               GP04127
MSG05    MSG   'CSECT MUST BE SUPPLIED FOR NUCLEUS LOAD MODULE' GP04127
MSG06    MSG   'INPUT DD STATEMENT NOT FOUND'                   GP04127
MSG07    MSG   'DD STATEMENT FOR PROGRAM LIBRARY NOT FOUND'     GP04127
MSG08    MSG   'MEMBER NOT FOUND ON PROGRAM LIBRARY'            GP04127
MSG09    MSG   'SYMBOL NOT FOUND IN LOAD MODULE'                GP04127
MSG10    MSG   'OPERATION REQUESTED IS INVALID'                 GP04127
MSG11    MSG   'REQUIRED FIELD MISSING'                         GP04127
MSG12    MSG   'UNEVEN NUMBER OF HEXADECIMAL DIGITS'            GP04127
MSG13    MSG   'UNEVEN NUMBER OF QUOTES'                        GP04127
*
HEXTAB   DC    C'0123456789ABCDEF'  1/2
HEXTRTAB EQU   HEXTAB-C'0'          2/2                         GP04126
         TITLE 'ZAPOSMEM --- UNBASED CONSTANTS'                 GP04126
*---------------------------------------------------------------------*
*   THESE DATA ARE ACCESSED USING ADDRESS CONSTANTS                   *
*---------------------------------------------------------------------*
         SPACE 1
LOADPL   LOAD  EPLOC=0,DCB=0,LSEARCH=YES,SF=L                 12/90 JEB
LOADLEN  EQU   *-LOADPL                                       12/90 JEB
*                                                               GP04126
*   LIBRARY DEFINITION TABLES                                   GP04126
*                                                               GP04126
PATOPEN  OPEN  (CTLDCB,(INPUT,REREAD),LIBDCB,INPUT,PRTDCB,OUTPUT),MF=L
         SPACE 1
PRTDEF   DS    0F                                               GP04126
         DC    C'PROGLIST'         PRIMARY DDNAME               GP04126
         DC    C'SYSPRINT'         SECONDARY DDNAME             GP04126
PRTDCB   DCB   DDNAME=1,DSORG=PS,MACRF=PM,                             +
               RECFM=FA,LRECL=121,BLKSIZE=121
PRTDCBL  EQU   *-PRTDCB
LIBDEF   DS    0F                                               GP04126
         DC    C'PROGLIB '         PRIMARY DDNAME               GP04126
         DC    C'SYSLIB  '         SECONDARY DDNAME             GP04126
LIBDCB   DCB   DDNAME=2,DSORG=PO,MACRF=R                        GP04126
LIBDCBL  EQU   *-LIBDCB                                         GP04126
         SPACE 1
CTLDEF   DS    0F                                               GP04126
         DC    C'PROGIN  '         PRIMARY DDNAME               GP04126
         DC    C'SYSIN   '         SECONDARY DDNAME             GP04126
CTLDCB   DCB   DDNAME=3,DSORG=PS,MACRF=GL,EODAD=CTLEOD,LRECL=80 GP04129
CTLDCBL  EQU   *-CTLDCB
         SPACE 1                                                GP04126
HEXTR    DC    (8*16)X'00'   HEX TRANSLATE TABLE FROM X'80' UP  GP04126
         ORG   HEXTR+X'81'   LOWER CASE A-F                     GP04126
         DC    6AL1(*-HEXTR-X'81'+10)  A-F                      GP04126
         ORG   HEXTR+X'C1'   UPPER CASE A-F                     GP04126
         DC    6AL1(*-HEXTR-X'C1'+10)  A-F                      GP04126
         ORG   HEXTR+X'F0'   DIGITS 0-9                         GP04126
         DC    10AL1(*-HEXTR-X'F0')   0-9                       GP04126
         ORG   ,                                                GP04126
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   HEX TRANSLATE AND TEST TABLE WITH SYNTACTICAL AIDS:               *
*   00  VALID HEX CHARACTER (UPPER OR LOWER CASE)                     *
*   04  COMMA (WILL BE IGNORED                                        *
*   08  QUOTE (EITHER ' OR ")                                         *
*   12  BLANK (END OF STRING)                                         *
*   16  INVALID                                                       *
*---------------------------------------------------------------------*
*                                                               GP04126
*   HEXADECIMAL VALIDATION TRANSLATE TABLE                      GP04126
*                                                               GP04126
HEXTRT   DC    256X'10'      ALL INVALID                        GP04126
         ORG   HEXTRT+X'81'     LOWER CASE A-F                  GP04126
         DC    6X'00'              81-86 (A-F)                  GP04126
         ORG   HEXTRT+X'C1'     UPPER CASE A-F                  GP04126
         DC    6X'00'              81-86 (A-F)                  GP04126
         ORG   HEXTRT+X'F0'     DIGITS 0-9                      GP04126
         DC    10X'00'             F0-F9 (0-9)                  GP04126
         ORG   HEXTRT+C','   COMMA                              GP04126
         DC    X'04'                                            GP04126
         ORG   HEXTRT+C''''  APOSTROPHE (PREFERRED QUOTE)       GP04126
         DC    X'08'                                            GP04126
         ORG   HEXTRT+C'"'   PROPER QUOTE                       GP04126
         DC    X'08'                                            GP04126
         ORG   HEXTRT+C' '   SPACE                              GP04126
         DC    X'0C'           BLANK                            GP04126
         ORG   ,                                                GP04126
         SPACE 2                                                GP04126
*   VERB NAME TABLE                                             GP04126
*                                                               GP04126
OPCODES  VERB  'VER',VER                   01                   GP04126
OPCODE2  VERB  'REP',REP                   02                   GP04126
         VERB  'NAM',NAM                   03                   GP04126
         VERB  'DUM',DUM                   04                   GP04126
         VERB  'RES',REP                   05                   GP04126
         VERB  '   ',COMMENT               06                   GP04126
         VERB  '*  ',COMMENT               07                   GP04126
         VERB  'CON',CON                   08                   GP04126
         VERB  'END',END                   09                   GP04126
         VERB  'RC ',RC                    10                   GP04126
         VERB  'ZAP',ZAP                   11                   GP04126
         VERB  'GLO',GLO                   12                   GP04126
         VERB  'LOC',LOC                   13                   GP04126
         VERB  'BAS',GETOFF                14                   GP04126
         VERB  'IDR',COMMENT               15  IDRDATA          GP04126
         VERB  'SET',COMMENT               16  SETSSI           GP04126
         VERB  'CHE',COMMENT               17  CHECKSUM         GP04126
OPCODEN  EQU   *                                                GP04126
         SPACE 2                                                GP04126
*---------------------------------------------------------------------*
*   EBCDIC TABLE - UNPRINTABLES CHANGED TO BLANK                      *
*---------------------------------------------------------------------*
*                 0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
EBCDIC   DC    X'40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40' 0-
         DC    X'40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40' 1-
         DC    X'40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40' 2-
         DC    X'40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40' 3-
         DC    X'40,40,40,40,40,40,40,40,40,40,4A,4B,4C,4D,4E,4F' 4-
         DC    X'50,40,40,40,40,40,40,40,40,40,5A,5B,5C,5D,5E,5F' 5-
         DC    X'60,61,40,40,40,40,40,40,40,40,6A,6B,6C,6D,6E,6F' 6-
         DC    X'40,40,40,40,40,40,40,40,40,79,7A,7B,7C,7D,7E,7F' 7-
         DC    X'40,81,82,83,84,85,86,87,88,89,40,40,40,40,40,40' 8-
         DC    X'40,91,92,93,94,95,96,97,98,99,40,40,40,40,40,40' 9-
         DC    X'40,A1,A2,A3,A4,A5,A6,A7,A8,A9,40,40,40,40,40,40' A-
         DC    X'B0,40,40,40,40,40,40,40,40,40,BA,BB,40,40,40,40' B-
         DC    X'C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,40,40,40,40,40,40' C-
         DC    X'D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,40,40,40,40,40,40' D-
         DC    X'E0,40,E2,E3,E4,E5,E6,E7,E8,E9,40,40,40,40,40,40' E-
         DC    X'F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,40,40,40,40,40' F-
         SPACE 2                                                GP04126
*---------------------------------------------------------------------*
*    UPPER CASE TRANSLATION (THE FORMAL WAY, INSTEAD OF BLANK 'OR')   *
*---------------------------------------------------------------------*
UPPER    DC    256AL1(*-UPPER)    ALL UNCHANGED                 GP04126
         ORG   UPPER+X'81'                                      GP04126
         DC    C'ABCDEFGHI'                                     GP04126
         ORG   UPPER+X'91'                                      GP04126
         DC    C'JKLMNOPQR'                                     GP04126
         ORG   UPPER+X'A2'                                      GP04126
         DC    C'STUVWXYZ'                                      GP04126
         ORG   ,                                                GP04126
         SPACE 2                                                GP04126
*---------------------------------------------------------------------*
*    SCAN UNTIL NON-BLANK                                             *
*---------------------------------------------------------------------*
TRTNBLNK DC    256AL1(4)     ALL STOP                           GP04126
         ORG   TRTNBLNK+C' '  SKIP BLANKS                       GP04126
         DC    X'00'                                            GP04129
         ORG   ,                                                GP04126
         SPACE 2                                                GP04126
*---------------------------------------------------------------------*
*    SCANNING FOR / TO SPLIT LOGICAL RECORDS                          *
*---------------------------------------------------------------------*
TRTSPLIT DC    256AL1(0)     ALL PASS                           GP04126
         ORG   TRTSPLIT+C'/'  SKIP BLANKS                       GP04126
         DC    X'12'         SPLITTER                           GP04129
         ORG   TRTSPLIT+C''''  TRAP QUOTES                      GP04126
         DC    X'04'                                            GP04129
         ORG   TRTSPLIT+C'"'   TRAP QUOTES                      GP04126
         DC    X'08'                                            GP04129
         ORG   ,                                                GP04126
         SPACE 2                                                GP04126
*---------------------------------------------------------------------*
*    CHECK FOR DIGITS  (IF YOU USE WYLBUR, ADD PERIOD AS NON-STOPPER  *
*---------------------------------------------------------------------*
TRTDIGIT DC    256AL1(4)     ALL STOP                           GP04126
         ORG   TRTDIGIT+C'0'  SKIP DIGITS                       GP04126
         DC    10X'00'                                          GP04129
         ORG   ,                                                GP04126
         SPACE 2                                                GP04126
*                                                               GP04126
*   CONTROL BLOCK MAPPINGS
*
PVTRIT   EQU   X'04'               POINTER TO RIT (XA)
PVTPFTP  EQU   X'0C'               POINTER TO APPARENT PFT (370)
RITPFT   EQU   X'D0'               POINTER TO APPARENT PFT (XA)
PFTVBN   EQU   X'2'                VIRT BLK NUMBER (370)
PFTVSA   EQU   X'14'               VIRT STORAGE ADDR (XA)
CVT      DSECT ,
         CVT   DSECT=YES
*
*        IHAPSA ,
PSA      DSECT ,       WAS FLC     USED BY SETLOCK              GP04126
FLC      EQU   PSA           WHATEVER                           GP04127
PSAAOLD  EQU   X'224'              ADDR OF CURRENT ASCB
PSALITA  EQU   PSA+764             USED BY SETLOCK              GP04126
         EJECT ,
***********************************************************************
*                                                                     *
*         MAP OF GETMAINED WORK AREA                                  *
*                                                                     *
***********************************************************************
         SPACE 1
@DATA    DSECT ,             DYNAMIC SAVE/WORK AREA             GP04127
         DS    18F           PASSED TO CALLED FUNCTIONS         GP04127
DB       DS    2D            WORK AREA                          GP04126
FW       DS    F             WORK AREA                          GP04126
@PARMPTR DS    F
PUTSAVE  DS    15A           PRINT SUBROUTINE SAVE AREAS        GP04127
MODSAVE  DS    5A            MODESET SAVER                      GP04127
         SSAVE ,             CREATE OTHERS AS NEEDED            GP04127
@ESDSUB  DS    0F
I        DS    F                    WORK VARIABLE
XACCUM   DS    F                    ACCUMULATED CSECT LENGTH
XBASE    DS    F                    BASE VALUE FOR OFFSET ADJ
XCESDN   DS    F                    CESD NUMBER
XCSECNO  DS    F                    CSECT NO. FOR 'XEBLBL'
XCESDX   DS    F                    INDEX TO CESD ENTRY
XCRSW    DS    F                    CESD RECORD SCAN SW
XCSADDR  DS    F                    ADDRESS OF CSECT
XCSDADR  DS    F                    REL ADDR OF CSECT ON DISK
XCSER    DS    F                    LENGTH OF CSECT
XCSLEN   DS    F                    MEMBER LENGTH               GP04128
XCSPER   DS    F                    SAVE XPENDREC - CONSOLE MODE
XCSOFF   DS    F                    OFFSET TO CSECT IN LOAD MOD
XCODE    DS    F                    RETURN CODE
XEBAD    DS    F                    ADDR OF EBCDIC DATA
XENDREC  DS    F                    ADDR OF END OF LOGICAL DATA
XRCVADDR DS    F                    ADDR OF RECEIVING FIELD
XFLDALEN DS    F                    ACTUAL FIELD LENGTH
XFLDSTRT DS    F                    START OF FIELD
XGOS     DS    F                    'GET OFFSET' ROUTINE SW
XHEX     DS    F                    ADDR OF HEX DATA
XHEXL    DS    F                    LENGTH OF HEX DATA
XHL      DS    F                    LENGTH OF HEX STRING
XLMADDR  DS    F                    STORAGE ADDR OF LOAD MOD
XLMEPA   DS    A             ENTRY POINT ADDRESS W/AM BIT       GP04126
XLOC     DS    F                    LOCATION TO BE DISPLAYED
XMSE     DS    F                    ADDR OF SYNTAX ERR MSG
XNUMCESD DS    F                    NO. OF ENTRIES IN CESD REC
XOFFSET  DS    F                    OFFSET TO CESD IN LOAD MOD
XPECB    DS    F
XPENDREC DS    F                    POINTER TO END OF PHYSICAL REC
XRCVLEN  DS    F                    RECEIVING FIELD LEN
XSDCNT   DS    F                    COUNT OF CSECTS IN MODULE
XSDX     DS    F                    ARRAY INDEX FOR XSD
XSMCSD   DS    F
XSYMCPT  DS    F
XSYMFAD  DS    F
XSYMFPT  DS    F
XSYMOFF  DS    F
XSYMRECX DS    F
XSYMTOTX DS    F
XWECB    DS    F
XWORK    DS    F
XX       DS    F
XZADDR   DS    F                    STORAGE ADDR
DYNOPEN  OPEN  (CTLDCB,(INPUT,REREAD),LIBDCB,UPDAT,PRTDCB,OUTPUT),MF=L
LOCTEXT  DS    CL(L'DDTEXT)  CURRENT DUMP LINE                  GP04126
DYNDCBLB DS    0A,CL(PRTDCBL)                                   GP04126
DYNDCBPR DS    0A,CL(PRTDCBL)                                   GP04126
DYNDCBIN DS    0A,CL(PRTDCBL)                                   GP04126
         READ  @DECB,SF,MF=L                                    GP04128
         DS    0F                                               GP04126
XLOADPL  DS    (LOADLEN)X                                     12/90 JEB
XEBLM    DS    CL8
XEBCS    DS    CL8
XEBLBL   DS    CL8
XEBV     DS    CL8           CURRENT COMMAND                    GP04126
         SPACE 1                                                GP04128
*   FLAG MAPPINGS                                               GP04128
*                                                               GP04128
XFLAGS   DS    X             IN/OUT/WHERE SWITCHES              GP04126
XFMAIN   EQU   X'80'               INPUT NOT FROM PARM FIELD    GP04128
XFEOD    EQU   X'40'                                            GP04128
XFNOWTO  EQU   X'20'                                            GP04128
XFCON    EQU   X'10'                                            GP04128
XF1ST    EQU   X'08'               1ST TIME SW FOR PRINTING     GP04128
XFSY1ST  EQU   X'04'               1ST TIME SW FOR SYSIN GET    GP04128
XFLOCSW  EQU   X'01'           USE JPA RATHER THAN LPA          GP04128
         SPACE 1                                                GP04128
YFLAGS   DS    X             LOAD-MODULE PROCESSING             GP04128
YFSYMSKP EQU   X'80'               SKIP SYMBOLS (WRONG CSECT)   GP04128
YFSKIP1  EQU   X'02'               SKIP 1ST CESD (NUC MOD)      GP04128
YFSYMGO  EQU   X'01'               SW FOR SYMREC PROCESSING     GP04128
         SPACE 1                                                GP04128
ZFLAGS   DS    X             STATE FLAGS                        GP04129
ZFSNAME  EQU   X'80'           SKIP DUE TO BAD NAME             GP04129
ZFSBASE  EQU   X'40'           SKIP DUE TO BAD BASE             GP04129
ZFSVER   EQU   X'20'           SKIP DUE TO BAD VERIFY           GP04129
ZFSREP   EQU   X'10'           SKIP DUE TO BAD REPLACE          GP04129
ZFSSYN   EQU   X'08'           SKIP DUE TO SYNTAX ERROR         GP04129
ZFSERR   EQU   X'01'           ANY ERROR AT ALL                 GP04128
ZFNOGO   EQU   ZFSVER+ZFSREP  SKIP IN THIS MEMBER               GP04128
ZFNUNAME EQU   ZFSERR        RESET ALL BUT PRIOR                GP04129
SCANFLAG DS    X             PRESET FOR FIND/SCANMOD CALLS      GP04129
         SPACE 1                                                GP04128
XHS      DS    CL66,C        VER/REP STRING +1 FOR PACK         GP04127
         SPACE 1
XWTO     DS    0F,AL2(125,0) REUSE PRINT LINE FOR WTO           GP04126
@LINE    DS    CL121         PRINT LINE WITH CC                 GP04126
         ORG   @LINE
         DS    C
@LINE01  DS    CL8,CL3                                          GP04127
@LINE12  DS    CL2                                              GP04127
@LINE14  DS    C
@LINE15  DS    C
@LINE16  DS    C
@LINE17  DS    C
@LINE18  DS    CL15
@LINE33  DS    C
@LINE34  DS    CL3
@LINE37  DS    C
@LINE38  DS    CL3
@LINE41  DS    CL6
@LINE47  DS    C
@LINE48  DS    CL10
@LINE58  DS    C
@LINE59  DS    CL28
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   DUMP LINE FORMAT                                                  *
*---------------------------------------------------------------------*
         ORG   @LINE                                            GP04126
         DS    C             CARRIAGE CONTROL                   GP04126
DDADDR   DS    CL8,CL3       LINE ADDRESS                       GP04127
DDHEX1   DS    4CL(8+1),CL2  LEFT GROUP                         GP04127
DDHEX2   DS    4CL(8+1),CL1  RIGHT GROUP                        GP04127
DDLAST   DS    C'*'          LEFT FRAME                         GP04127
DDTEXT   DS    CL32          EBCDIC TEXT                        GP04127
DDRAST   DS    C'*'          RIGHT FRAME                        GP04127
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   DUMPT - LINE 1                                                    *
*---------------------------------------------------------------------*
         ORG   @LINE                                            GP04126
         DS    C             CARRIAGE CONTROL                   GP04126
DLADDR   DS    CL8,CL2       DUMP LINE - ADDRESS                GP04126
DLHEX1A  DS    CL4,CL1       FIRST WORD                         GP04126
DLHEX1B  DS    CL4,CL2                                          GP04126
DLHEX2A  DS    CL4,CL1       SECOND WORD                        GP04126
DLHEX2B  DS    CL4,CL2                                          GP04126
DLHEX3A  DS    CL4,CL1       THIRD WORD                         GP04126
DLHEX3B  DS    CL4,CL2                                          GP04126
DLHEX4A  DS    CL4,CL1       FOURTH WORD                        GP04126
DLHEX4B  DS    CL4,CL5                                          GP04126
DLHEX5A  DS    CL4,CL1       FIFTH WORD                         GP04126
DLHEX5B  DS    CL4,CL2                                          GP04126
DLHEX6A  DS    CL4,CL1       SIXTH WORD                         GP04126
DLHEX6B  DS    CL4,CL2                                          GP04126
DLHEX7A  DS    CL4,CL1       SEVENTH WORD                       GP04126
DLHEX7B  DS    CL4,CL2                                          GP04126
DLHEX8A  DS    CL4,CL1       EIGHTH WORD                        GP04126
DLHEX8B  DS    CL4,CL3                                          GP04126
DLLAST   DS    CL1           LEFT ASTERISK                      GP04126
DLTEXT   DS    CL16          TEXT                               GP04126
DLRAST   DS    CL1           RIGHT ASTERISK                     GP04126
         ORG   ,                                                GP04126
         SPACE 1                                                GP04127
*---------------------------------------------------------------------*
*   DUMPT - LINE 2                                                    *
*---------------------------------------------------------------------*
@LINE2   DS    CL(L'@LINE)                                      GP04126
         ORG   @LINE2                                           GP04126
         DS    C             CARRIAGE CONTROL                   GP04126
D2ADDR   DS    CL8,CL2       DUMP LINE - ADDRESS                GP04126
D2INST1A DS    CL5           FIRST WORD                         GP04126
D2INST1B DS    CL5,CL1                                          GP04126
D2INST2A DS    CL5           SECOND WORD                        GP04126
D2INST2B DS    CL5,CL1                                          GP04126
D2INST3A DS    CL5           THIRD WORD                         GP04126
D2INST3B DS    CL5,CL1                                          GP04126
D2INST4A DS    CL5           FOURTH WORD                        GP04126
D2INST4B DS    CL5,CL4                                          GP04126
D2INST5A DS    CL5           FIFTH WORD                         GP04126
D2INST5B DS    CL5,CL1                                          GP04126
D2INST6A DS    CL5           SIXTH WORD                         GP04126
D2INST6B DS    CL5,CL1                                          GP04126
D2INST7A DS    CL5           SEVENTH WORD                       GP04126
D2INST7B DS    CL5,CL1                                          GP04126
D2INST8A DS    CL5           EIGHTH WORD                        GP04126
D2INST8B DS    CL5,CL2                                          GP04126
D2LAST   DS    CL1           LEFT ASTERISK                      GP04126
D2TEXT   DS    CL16          TEXT                               GP04126
D2RAST   DS    CL1           RIGHT ASTERISK                     GP04126
         ORG   ,                                                GP04126
         SPACE 1
         DS    0F            ALIGN FOR REFERENCES               GP04129
XLREC    DS    CL256 (WAS 248 ???)                              GP04129
         SPACE 1                                                GP04126
         CSVQUERY MF=(L,DYNQUERY)                               GP04126
XWTOR    WTOR  'ENTER OSZAPMEM STATEMENTS OR END',MF=L          GP04126
XREPLY   DS    CL130                                            GP04129
@WAY08   DS    CL1
@WAY08Z  DS    CL3
@WAY08A  DS    CL5
*
*   CSECT MAPPING ARRAY (912 ENTRIES)
*
XSDNO    DS    H                     CSECT NUMBER (2 BYTES)     GP04129
XSDLEN   DS    C                     CSECT LENGTH (3 BYTES)
@WAY08B  DS    C
@WAY08C  DS    C
         DS    2000C
         DS    2560C
@DATAL   EQU   *-@DATA
         SPACE 1                                                GP04126
         DCBD  DEVD=DA,DSORG=PS                                 GP04126
         YREGS ,             SYMBOLIC REGISTER DEFINITIONS      GP04126
         END   ,
