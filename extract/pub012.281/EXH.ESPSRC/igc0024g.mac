NOTE     TITLE 'S V C 2 4 7  ***  NOTIFY MILTEN TERMINAL USER'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
*        THIS SVC LOAD WILL INTERFACE WITH MILTEN TO SEND A
*        MESSAGE TO A REMOTE TERMINAL.
*
*  INPUT :
*        REGISTER 0 - ADDRESS OF AN 8 BYTE ACCOUNT NUMBER OR USERID
*             IF ZERO - USE ACCOUNT NUMBER IN THE JMRUSEID FIELD
*        REGISTER 1 - ADDRESS OF A "V FORMAT" MESSAGE
*              IF HIGH-BIT ON - TEXT IS A COMMAND; EITHER A 'TO '
*              COMMAND, OR THE ISSUER MUST BE AUTHORIZED.
*
*  RETURN :
*        REGISTER 15 - COMPLETION CODE
*
*                  0 - GOOD COMPLETION
*                  4 - MILTEN NOT UP OR CIB LIMIT REACHED
*                  8 - PARAMETER ERROR
*
*               HEX VALUE > X'100'  GETMAIN ABEND CODE
*                  ISSUED IF NO SPACE AVAILABLE IN SYSTEM QUEUE AREA
*                  A BRANCH ENTRY IS USED TO AVOID BOMBING HASP
*
*  OUTPUT :
*     SVC WILL LOCATE THE ADDRESS SPACE RUNNING A START JOB WITH THE
*        NAME OF 'WYLBUR  '.
*        THE CSCB IS LOCATED TO CHECK THAT CIBS WILL BE ACCEPTED.
*    THE INPUT TEXT IS THEN PREFIXED BY A 'TO' COMMAND AND IS SENT
*        TO MILTEN IN A CIB.
*        MESSAGES ARE ROUTED TO TERMINALS BY ACCOUNT NUMBER OR USERID
         SPACE 1
IGC0024G START 0
         USING *,R6                                              86117
         USING CVTMAP,R3     SET BY SLIH                         86117
         USING TCB,R4        SAVED FOR RMBRANCH CALL
         SH    R5,=Y(RBPRFXLN)  FESTAE REQUIRES PREFIX           86118
         USING RBPRFX,R5                                         86118
         XC    CLEAR1,CLEAR1 CLEAR RB WORK SPACE                 86117
         XC    CLEAR2,CLEAR2   DITTO                             86117
         ST    R14,WKRETURN  SAVE RETURN ADDRESS                 86117
         STM   R5,R6,WKBASE  SAVE RB AND BASE ADDRESSES          86117
         LA    R2,ABNDEXIT   GET RECOVERY ADDRESS                86117
         FESTAE EXITADR=(R2),RBADDR=(R5),TCBADDR=(R4),ERRET=BADSTAE,   *
               TERM=YES,ASYNCH=YES     SET FAST ESTAE            86117
         OI    WKFLAG,FGESTAE  SIGNAL ESTAE ISSUED               86117
BADSTAE  SLR   R11,R11       CLEAR CONSOLE ID                    86117
         LTR   R1,R1         COMMAND ENTRY ?                     84071
         BNM   STORECID      NO                                  84071
         LTR   R11,R0        COPY CONSOLE ID                     86117
*        NOTE THAT THE CONSOLE ID IS PASSED IN R0 FROM HASPSSSM  86117
*        BNZ   STORECID      OK                                  84071
*        LA    R11,3         USE CURRENT MASTER ID               86117
*        L     R12,CVTCUCB-CVTMAP(,R3)  GET THE UCM              86117
*        SH    R12,=H'4'     SPACE TO PREFIX ENTRY               86117
*        ICM   R12,15,0(R12) GET MCS PREFIX                      86117
*        BZ    STORECID                                          84071
*        ICM   R12,15,UCMMCENT-UCMPRFX(R12)  GET MASTER CONSOLE  86117
*        BZ    STORECID                                          84071
*        IC    R11,UCMID-UCMLIST(,R12)  GET THE ID               86117
STORECID STH   R11,SAVCONID  SAVE THE PRESUMED ID                86117
         LR    R11,R0        SAVE CALLER'S ACCOUNT NUMBER POINTER
         LA    R8,0(,R11)    GET CLEAN ADDRESS FOR CHECKER       86117
         LR    R12,R1        SAVE MESSAGE POINTER                86117
         SLR   R7,R7         CLEAR FOR IC                        84183
         IC    R7,1(,R12)    GET TEXT LENGTH + 4                 86117
         CH    R7,=Y(132+4)  VALID LENGTH ?
         BH    SET8            GIVE INVALID PARAMETER CODE
         SH    R7,SET4+2     ALLOW FOR LENGTH OF LENGTH
         BNP   SET8          NEED AT LEAST ONE BYTE ?
         LTR   R12,R12       COMMAND ENTRY ?                     86117
         BNM   NOTCMND       NO
         TESTAUTH FCTN=1,STATE=YES,KEY=YES,RBLEVEL=2,BRANCH=YES
         L     R3,CVTPTR     RESTORE CVT ADDRESS                 83010
         BXLE  R15,R15,CHECKED8  AUTHORIZED; PROCEED
         CH    R7,=H'12'     LONG ENOUGH FOR 'TO XXX' ?          83010
         BNH   SET4          NO; FAIL
         CLC   TEXTPAT(3),4(R12)  MESSAGE REQUEST ?              86117
         BE    CHECKED8      YES; PERMIT
         B     SET4          ELSE FAIL
         SPACE 1
NOTCMND  LTR   R11,R11    ACCOUNT OR USERID ?                    86117
         BNZ   DOACCT        ACCOUNT OR USER ID
         LAT   R8,TCBTCT,SET8     LOOK FOR TCT
         USING SMFTCT,R8     DECLARE IT
         LAT   R8,TCTJMR,SET8     NOW GET JMR
         USING JMR,R8
         LA    R8,JMRUSEID   POINT TO JMRUSEID, WHICH HAS ACCOUNT #
         DROP  R8
         SPACE 1
DOACCT   LA    R10,8         SET TO USE 8 BYTES
         LR    R9,R10        SET LENGTH TO CHECK
         CLI   7(R8),C' '    SEVEN BYTES ONLY ?                  87228
         BNE   DOACCT8       NO                                  87228
         CLI   0(R8),C'0'    USERID (NON-NUMERIC) ?              87228
         BNL   DOACCT8       NO; ASSUME ACCOUNT                  87228
         BCTR  R9,0          ONLY CHECK 7 (BUT MOVE 8)           87228
DOACCT8  LR    R1,R8         COPY ACCOUNT ADDRESS
         LA    R0,1          MAKE CONSTANT                       81312
BYTE1LP  LA    R15,ALPHAS    GET TABLE OF VALID EBCDIC CODES
         LA    R13,L'ALPHAS  NUMBER TO CHECK
BYTE2    CLC   0(1,R15),0(R1) VALID DIGIT ?
         BE    BYTE3         YES
         AR    R15,R0        TRY NEXT ONE
         BCT   R13,BYTE2
         B     SET8          TOO BAD
BYTE3    AR    R1,R0         TRY NEXT ONE
         BCT   R9,BYTE1LP    CHECK ALL
         SPACE 2
CHECKED8 DS    0H
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE
         USING ASVT,R15
         L     R0,ASVTMAXU   GET HIGHEST VALID ASID
         SLL   R0,2          *4 FOR FAST CHECK
         SLR   R1,R1         SET INDEX FOR NEXT ASID
LOOPASID LA    R1,4(,R1)     GET NEXT ASID INDEX
         CR    R1,R0         VALID ?
         BH    SET4          NO; QUIT
         LA    R11,ASVTFRST(R1)  POINT TO ASCB POINTER           86117
         ICM   R11,15,0(R11)   LOAD AND TEST                     86117
         BNP   LOOPASID      SKIP UNUSED/FREE SLOT
         USING ASCB,R11                                          86117
         ICM   R2,15,ASCBJBNI  JOB CSCB ?
         BNZ   LOOPASID      YES; SKIP
         ICM   R2,15,ASCBCSCB  GET THE CSCB
         BZ    LOOPASID
         USING CHAIN,R2      DECLARE THE CSCB
         CLI   CHVCD,X'04'   START TASK/INIT ?
         BNE   LOOPASID      NO
         CLI   7(R8),C' '    SHORT USER ID ?                     87228
         BNE   ASIDPROD      NO                                  87228
         CLC   =CL8'WYLTEST ',CHCLS  TEST VERSION ?              87228
         B     ASIDCOMM                                          87228
ASIDPROD CLC   =CL8'WYLBUR',CHCLS  MATCHING NAME ?
ASIDCOMM BNE   LOOPASID      NO
         CLC   CHASID,ASCBASID  JUST IN CASE
         BNE   LOOPASID
         TM    CHECB,X'50'   WAS STOP COMMAND GIVEN ?            86117
         BO    SET4          YES; SHOULDN'T USE                  86117
         TM    CHCECB,X'40'  CANCELLED ?                         86117
         BNZ   SET4          YES; DITTO                          86117
         CLI   CHCIBCTR,0    WAS QEDIT INTERFACE STARTED ?       86117
         BE    SET4          NO                                  86117
         DROP  R11                                               86117
USECHAIN SLR   R9,R9
         ICM   R9,7,POOLCIB+1   GET REQUIRED LENGTH
         AR    R9,R7         PLUS USER'S LENGTH
         GETMAIN RC,LV=(R9),SP=245
         BXH   R15,R15,SET4  GETMAIN FAILED
         ICM   R9,8,POOLCIB  SET SUBPOOL FOR FREEMAIN            84078
         ST    R9,WKCIBL     SAVE LENGTH                         86117
         ST    R1,WKCIBA       AND ADDRESS OF GOTTEN STORAGE     86117
         ST    R11,COMPOST+4  SAVE ASCB ADDRESS FOR POST         86117
.COMGET  LA    R3,0(,R1)     SAVE NEW CIB ADDRESS WITH ZERO HIGH BYTE
         LA    R1,0(,R9)     GET TRUE LENGTH BACK
         BCTR  R1,0                DECREMENT FOR EXECUTE
         EX    R1,CLEAR            INITIALIZE CIB
         LA    R1,8(,R1)     SET TO LENGTH + 7 FOR BOUNDARY ALIGN
         USING CIB,R3
         LTR   R12,R12       COMMAND ENTRY ?                     86117
         BNM   NATCMND       NO; MESSAGE
         LTR   R7,R7         ANY TEXT ?
         BP    MVCMND        YES; MOVE IT
         MVI   CIBDATA,C' '  MAKE SINGLE BLANK
         LA    R7,1          SET LENGTH 1
         B     SKIPMVD       STASH LENGTHS; COMPLETE CIB
MVCMND   BCTR  R7,0          MAKE LENGTH FOR EXECUTE
         EX    R7,CMNDMVC    MOVE COMMAND TEXT
         LA    R7,1(,R7)     RESTORE TEXT LENGTH
         B     SKIPMVD       COMPLETE CIB
CMNDMVC  MVC   CIBDATA(0),4(R12)  MOVE USER'S COMMAND            86117
         SPACE 1                                                 83010
NATCMND  MVC   CIBDATA(MILFIXED),TEXTPAT  MOVE FIXED PREFIX
         BCTR  R10,0         GET ACCOUNT/USERID LENGTH FOR MOVE
         EX    R10,ACCTMOVE  MOVE ACCT/USERID
         DROP  R4                                                86117
         LA    R4,SKIPMV     FOR FASTER BRANCHES FROM NOW ON     79149
         LTR   R10,R7        ANY DATA ?                          79149
         BNPR  R4               IF LENGTH WAS ZERO, SKIP MOVE    79149
         BCTR  R7,0          MAKE EXECUTE LENGTH                 81312
         EX    R7,TXTBLANK   MOVE CALLER'S DATA                  79149
         SPACE 1                                                 79149
*        DATA COMPRESSION - BLANK SEQUENCES ARE COMPRESSED TO    79149
*        A MAXIMUM OF TWO BLANKS.                                79149
         LA    R11,CIBDATA+MILFIXED-1  OUTPUT-1                  86117
         LA    R15,4(,R12)   INPUT                               86117
         LA    R0,1           ONE CONSTANT                       79149
MOVENB   LTR   R10,R10       ANY MORE ?                          79149
         BNPR  R4                                                79149
         MVC   1(1,R11),0(R15)  MOVE A BYTE                      86117
         AR    R11,R0        UP OUTPUT ADDRESS                   86117
         AR    R15,R0        UP INPUT                            79149
         BCTR  R10,0         DECREMENT INPUT LENGTH              79149
         CLI   0(R11),C' '   WAS THIS A BLANK ?                  86117
         BNE   MOVENB        NO; MOVE NEXT                       79149
         LTR   R10,R10       ANY MORE ?                          79149
         BNPR  R4                                                79149
         CLI   0(R15),C' '   SECOND BLANK ?                      79149
         BNE   MOVENB        NO; MOVE IT                         79149
         AR    R11,R0                                            86117
         AR    R15,R0                                            79149
         BCTR  R10,0                                             79149
         LTR   R10,R10       ANY MORE ?                          79149
         BNPR  R4                                                79149
SKIPBL   CLI   0(R15),C' '   THIRD OR HIGHER BLANK ?             79149
         BNE   MOVENB        NO; MOVE IT                         79149
         AR    R15,R0        SKIP IT                             79149
         BCT   R10,SKIPBL    ADJUST LENGTH                       79149
         SPACE 3                                                 79149
SKIPMV   LA    R7,MILFIXED+1(,R7)  GET FULL DATA LENGTH
SKIPMVD  STH   R7,CIBDATLN   PUT DATA LENGTH IN CIB
         SRL   R1,3          CONVERT TOTAL CIB LENGTH TO # OF DOUBLEWDS
         STC   R1,CIBLEN           STORE COUNT IN CIB
         MVI   CIBVERB,CIBMODFY   PUT VERB CODE IN CIB
         MVC   CIBCONID,SAVCONID+L'SAVCONID-L'CIBCONID  MOVE ID  86117
         LA    R0,CHCIBP           PTR TO CIB PTR                84071
         OI    WKFLAG,FGNOCIB  LEAVE CIB ALLOCATED ON ABEND      86117
         QEDIT ORIGIN=(0),BLOCK=(R3)
         BXH   R15,R15,ERRORCON   ERROR IF ERROR                 81312
POST     POST  CHECB,0,MF=(E,COMPOST),ERRET=SET4
.POSTPST SPACE 1
*     THAT'S ALL, FOLKS
         SPACE 1
*      RETURN CODES
         SPACE 1
SETGOOD  SLR   R15,R15       GOOD RETURN
         B     CLEANUP       GET OUT                             86117
         SPACE 1
SET8     LA    R15,8         INVALID PARAMETER
         B     CLEANUP                                           86117
         SPACE 1
SETR1    LR    R15,R1        GET ABEND CODE FROM GETMAIN R1 RETURN
         B     CLEANUP                                           86117
         SPACE 1
ERRORCON LR    R0,R9         RELOAD GETMAIN SUBPOOL AND LENGTH
         OI    WKFLAG,FGNOCIB  DON'T FREE MORE THAN ONCE         86117
         FREEMAIN R,LV=(0),A=(R3)  FREE THE CIB STORAGE
*        B     SET4          RETURN 'MILTEN DOWN' OR CHAIN FULL
         SPACE 1
SET4     LA    R15,4         MILTEN NOT ENABLED OR CHAIN FULL
CLEANUP  TM    WKFLAG,FGESTAE  ESTAE ISSUED ?                    86117
         BZ    CLEANDUP      NO                                  84183
         LR    R8,R15        SAVE RETURN CODE                    84183
         NI    WKFLAG,255-FGESTAE  RESET FLAG                    86117
         L     R4,PSATOLD-PSA   RELOAD TCB ADDRESS               86117
         FESTAE 0,TCBADDR=(R4),WRKREG=(R2),ERRET=FAILSTAE        86117
FAILSTAE LR    R15,R8        RESTORE RETURN CODE                 84183
CLEANDUP L     R14,WKRETURN  GET RETURN ADDRESS                  86117
         BR    R14           AND RETURN                          86117
         SPACE 1                                                 84183
         PUSH  USING                                             84183
         DROP  ,                                                 84183
         USING ABNDEXIT,R15                                      84183
ABNDEXIT CH    R0,=H'12'     WORK AREA PRESENT ?                 84183
         BNE   ABNDEXT2      YES                                 84183
ABNDEXT1 SLR   R15,R15                                           84183
         BR    R14           CONTINUE WITH ABEND                 84183
         USING SDWA,R1       DECLARE THE PASSED WORK AREA        84183
ABNDEXT2 STM   R14,R12,12(R13)  JUST IN CASE ...                 84183
         L     R5,SDWAPARM   GET SAVE AREA                       86117
         USING RBFEPARM,R5   DEFAULT PARM AREA                   86117
         LM    R3,R6,WKCIBL  LOAD R3-R6                          86117
         USING RBPRFX,R5     DECLARE RB SAVE AREA                86118
         TM    WKFLAG,FGABEND  RECURSION ?                       86117
         BNZ   ABNDEXT1      YES; ABEND                          84183
         OI    WKFLAG,FGABEND                                    86117
         USING IGC0024G,R6                                       86117
         ST    R4,SDWAGR03   RESTORE CIB ADDRESS                 84183
         ST    R3,SDWAGR09    AND SP/LEN                         84183
         STM   R5,R6,SDWAGR05    AND BASE REGISTERS              86117
         LA    R2,ERRORCON   SET TO FREEMAIN ADDRESS             84183
         LTR   R4,R4         GETMAIN DONE ?                      84183
         BZ    ABNDEXT4      NO; JUST RECOVER AT RETURN CODE     86117
         TM    WKFLAG,FGNOCIB  DON'T FREE CIB ?                  86117
         BZ    ABNDEXTF      DO FREE IT                          86117
ABNDEXT4 LA    R2,SET4       SET FOR ERROR RETURN                86117
ABNDEXTF ST    R2,SDWARTYA   SET RETRY ADDRESS                   86117
         OI    WKFLAG,FGNOCIB  DON'T FREE MORE THAN ONCE         86117
         OI    SDWAACF2,SDWAFREE+SDWAUPRG  RETURN REGS, FREE SDWA
         NI    SDWACMPF,255-SDWAREQ  KILL DUMP                   84183
         MVI   SDWARCDE,4    REQUEST RETRY                       84183
         LM    R14,R12,12(R13)  RELOAD REGISTERS                 84183
         LA    R15,4         SET RETRY                           84183
         BR    R14           RETURN                              84183
         POP   USING         RESTORE MAPPINGS                    84183
         SPACE 1
ZAPPER   DC    8CL4'ZAPS'    ZAP SPACE
         EJECT
POOLCIB  DC    0F'0',AL1(245),AL3(CIBFIXED+MILFIXED) SUBPOOL+OVERHEAD
CLEAR    XC    0(0,R3),0(R3)     ZIP CIB
ACCTMOVE MVC   CIBDATA+3(0),0(R8)  MOVE ACCOUNT FIELD
TXTBLANK MVC   CIBDATA+MILFIXED(0),CIBDATA+MILFIXED-1  BLANK TXT 79149
TEXTPAT  DC    C'TO ACCTXXXX '  FIXED PATTERN
MILFIXED EQU   *-TEXTPAT     MILTEN CIB TEXT OVERHEAD
ALPHAS DC C'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ#$@'  EBCDIC TABLE
         SPACE 3
         LTORG ,
         SPACE 2                                                 86117
         PRINT &PRTSYS                                           86117
         IHARB ,                                                 83010
         SPACE 1                                                 86117
         ORG   RBFEPARM      RECOVERY SAVE AREA                  86117
CLEAR1   DS    0XL24         RB FESTAE WORK AREA                 86117
WKRETURN DS    A             RETURN ADDRESS                      86117
WKCIBL   DS    F             CIB LENGTH                          86117
WKCIBA   DS    A             CIB ADDRESS                         86117
WKBASE   DS    A             RB/PGM BASE ADDRESSES               86117
WKFLAG   DS    X             PROCESSING FLAGS                    86117
FGESTAE  EQU   X'01'           FESTAE ISSUED                     86117
FGNOCIB  EQU   X'02'           DON'T FREE CIB IN STAE EXIT       86117
FGABEND  EQU   X'80'           ABEND RECURSION                   86117
SAVCONID DC    H'0'          SAVE AREA FOR CONSOLE ID            84071
         SPACE 1                                                 86117
         ORG   RBEXSAVE      MORE WORK SPACE                     86117
CLEAR2   DS    0XL48                                             86117
COMPOST  POST  MF=L
         SPACE 2
         PRINT &PRTSYS
         IHAPSA ,                                                86117
         IHAASVT ,
         IHAASCB ,
         IEECUCM ,                                               84071
         IHASDWA ,           ESTAE EXIT WORK AREA                84183
         IHASCB ,                                                86117
         IEFTCT
         IEFJMR ,                                                81312
         IKJTCB
CVT      DSECT ,
         CVT   DSECT=YES
         IHASCVT ,                                               79127
         IEZJSCB
CSCB     DSECT
         IEECHAIN
CIB      DSECT
         IEZCIB
CIBFIXED EQU   CIBDATA-CIBNEXT     LENGTH OF FIXED PART OF CIB
         SPACE 1
         REGEQU ,
         SPACE 1                                                 86117
         END
