XCOMPARE TITLE 'X C O M P A R E  ***  COMPARE TWO SEQUENTIAL FILES'
         MACRO ,
&NM      LIBDEF &N=,&DSECT=
         AIF   ('&DSECT' EQ '').NODS
&DSECT   DSECT ,
.NODS    ANOP  ,
          DS    0D             MALIGN
NAME&N    DS    CL8          FILE NAME
ADDRESS&N DS    A            ADDRESS OF BLOCK
COMPADR&N DS    A    1/2     ADDRESS OF COMPARE (FOR RECORD MODE)
COMPLEN&N DS    F    2/2     LENGTH OF COMPARE
SYSUT&N   DCB   DDNAME=*,DSORG=PS,MACRF=R,EODAD=EODAD          1/2
          READ  DECB&N,SF,SYSUT&N,BUFFER&N-BUFFER&N,'S',MF=L   2/2
BLOCK#&N  DS    F            INPUT BLOCK NUMBER
DSN&N     DS    CL44         DATA SET NAME
VOL&N     DS    CL6          VOLUME SERIAL
PROFLAG&N DS    X            EOF FLAG
FGEOF&N   EQU   X'80'          SET FOR EOF
         MEND  ,
         SPACE 1
         MACRO ,
&NM      FDHEX &VAR
         FD    &VAR,I,PADL,RADJ,LEN=6
         FD    '('
         FD    &VAR,HEX,RADJ,LEN=4
         FD    ')',PADR
         MEND  ,
         SPACE 2
         PUNCH ' ORDER XCOMPARE(P) '   MAKE DUMPS EASIER        GP09208
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=NO
         EJECT ,
***********************************************************************
*                                                                     *
*        PROGRAM: COMPARES TWO SEQUENTIAL FILES. LISTS DIFFERENT      *
*                    BLOCKS SIDE BY SIDE (HEX AND CHARACTER)          *
*                                                                     *
*        //SYSUT1   DD ...              LEFT FILE                     *
*        //SYSUT2   DD ...              RIGHT FILE                    *
*        //SYSPRINT DD SYSOUT=*,...     COMPARE LISTING               *
*                                                                     *
*                                                                     *
* RETURN CODES: 00 - ALL BLOCKS COMPARED SUCCESSFULLY                 *
*               04 - COMPARE FAILED (AT LEAST 1 IF 'ALL)              *
*                                                                     *
***********************************************************************
*                                                                     *
* UPDATES:                                                            *
*                                                                     *
***********************************************************************
         EJECT
         PRINT &PRTSOR
XCOMPARE PGMHEAD ZERO31,BASE=(R12,R11),PARM=R9,BNDRY=PAGE,RM=24
         SERVINIT ,          GET @SERVICE ROUTINES
         SERVLOAD @PRINTER,@INPREAD,@PARSER,SUBVERB  SERVICE CODE
         MVC   REQLIMIT,=X'7FFFFFFF'   NO LIMIT
         SPACE 1
         PRTOPEN SYSPRINT,OPT=(ABEND,WTO)  OPEN PRINTER
         LA    R9,0(,R9)     CLEAR PARM POINTER
         LTR   R9,R9         ANY ?
         BZ    DONEPARM
         L     R9,0(,R9)     GET PARM ADDRESS
         LA    R9,0(,R9)     CLEAR PARM ADDRESS
         LTR   R9,R9         ANY ?
         BZ    DONEPARM
         SR    R8,R8
         ICM   R8,3,0(R9)    ANY TEXT ?
         BNP   DONEPARM      NO; OR GARBAGE
         CH    R8,=H'3'      ENOUGH FOR ME ?
         BL    BADPARM       NO
         LA    R1,=AL1(FGLOTS)   LOTS OF STUFF ?
         CLC   =C'LOT',2(R9)     LOTS?
         BE    SETPARM       YES
         CLC   =C'ALL',2(R9)     LOTS?
         BE    SETPARM       YES
         CLC   =C'FUL',2(R9)     LOTS?
         BE    SETPARM       YES
         LA    R1,=AL1(FGTERSE)  LITTLE STUFF ?
         CLC   =C'TER',2(R9)     TERSE ?
         BE    SETPARM       YES
         CLC   =C'BRI',2(R9)     BRIEF
         BE    SETPARM       YES
         CLC   =C'SHO',2(R9)     SHORT
         BE    SETPARM       YES
         LA    R1,ZEROES
         CLC   =C'NOR',2(R9)     NORMAL?
         BE    SETPARM       YES
         CLC   =C'DEF',2(R9)     DEFAULT?
         BE    SETPARM       YES
BADPARM  PRTDATA '*** PARM field not recognized; using default ***'
         OICC  4
         B     DONEPARM
         SPACE 1
SETPARM  OC    PROFLAGS,0(R1)     SET LOTS, TERSE, OR 0
         SPACE 2
DONEPARM MVC   SYSUT1(PATLEN),PATDCB   COPY DCB AND DECB
         MVC   SYSUT2(PATLEN),PATDCB   COPY DCB AND DECB
         MVI   DCBDDNAM+5-IHADCB+SYSUT2,C'2'   UPDATE DD NAME
         LA    R10,NAME1     POINT TO SYSUT1
         LA    R2,BUFFER1    GET OUTPUT BUFFER
         BAL   R9,INITFILE   INITIALIZE PROCESSING
         LA    R10,NAME2     POINT TO SYSUT1
         AL    R2,=A(BUFFER2-BUFFER1)
         BAL   R9,INITFILE   INITIALIZE PROCESSING
         LA    R1,SYSUT1     INPUT DCB 1
         LA    R2,SYSUT2     INPUT DCB 2
         STM   R1,R2,DCBOLIST           BUILD OPEN LIST
         MVI   DCBOLIST+4,X'80'         SET TWO DCB INPUT OPEN
         MVI   PRELINE,C' '  SET FOR FAST BLANKING OF OUTLINE
         PRTOPEN SUMPRINT,DEV=2,OPT=NOWTO  SUMMARY FILE
         SPACE 1
OPEN     PRTL  '#                  SEQUENTIAL FILE COMPARE',TITLE=1,   *
               DEV=(1,2)     PLACE TITLE ON EACH OUTPUT FILE
         SPACE 2
         PRTLIST TITDSN,TITLE=3   SHOW DS TITLE
         SPACE 2
*---------------------------------------------------------------------*
*   READ A RECORD FROM SYSIN. IGNORE IF NOT AVAILABLE                 *
*---------------------------------------------------------------------*
         INPOPEN SYSIN,OPT=(NOWTO,FOLD,DUMMY)     UPPER-CASE INPUT
         SPACE 2
CARDNEXT INPGET ,            CONTROL CARD LOOP
         BXH   R15,R15,CARDEOD   TREAT ERROR AS EOF
         LR    R7,R0         COPY INPUT LENGTH
         LR    R6,R1         COPY INPUT ADDRESS
         LR    R3,R7         PRESERVE CARD LENGTH
         MINH  R3,=H'72'     IGNORE SEQUENCE NUMBERS
         PRTDATA (' --> ''',NL),(0(R6),(R7)),''''
         MVI   PAR$RQFG,PAR$PARK+PAR$COUQ+PAR$COUP
         PARSE (R6),(R3),OPT=KEYWORD
         LTR   R15,R15
         BNZ   PARSFAIL
         ICM   R3,15,PAR@TABL
         BZ    CARDNEXT      ALL BLANK
         USING PRSDSECT,R3   DECLARE RESULT LIST
         CLI   PRS$TEXT,C'*'  COMMENT CARD ?
         BE    CARDNEXT      YES; JUST GET ANOTHER
         LA    R0,PRS$TEXT   VERB TO BE LOCATED
         CLI   PRSKEYWD,C' '   KEYWORD FORM ?
         BNH   *+8
         LA    R0,PRSKEYWD   LOOK AT NAME INSTEAD
         LA    R1,VERBBXLE   VERB TABLE
         SUBCALL SUBVERB
         LTR   R15,R15       DID IT WORK ?
         BNZR  R1            YES; INVOKE MATCHING ADDRESS
         SPACE 1
PARSBCD  PRTL  ' *** UNRECOGNIZED CONTROL CARD ***'
         OICC  4,4,RESULT=RETCODE
         B     CARDNEXT      GET ANOTHER CARD
         SPACE 1
BADCARD  PRTL  ' *** INVALID NUMERIC VALUE ***'
         OICC  4,4,RESULT=RETCODE
         B     CARDNEXT      GET ANOTHER CARD
         SPACE 1
PARSFAIL OICC  12
         PRTL  '0*** Unexpected PARSER failure ***'
         PRTCLOSE ,          WRITE MESSAGE BEFORE DUMP
         ABEND 666,DUMP
         SPACE 1
VERBBXLE PARKEYBX VERBTAB    DEFINE PARM VALUES
VERBTAB  PARKEYAD 'LIMIT ',SETLIMIT    LIMIT NUMBER OF BLOCKS
VERBTAB2 PARKEYAD 'COUNT ',SETLIMIT
         PARKEYAD 'SKIP  ',SETSKIP     SKI LEADING BLOCKS
         PARKEYAD 'TERSE ',SETTERSE
         PARKEYAD 'BRIEF ',SETTERSE
         PARKEYAD 'SHORT ',SETTERSE
         PARKEYAD 'LOTS  ',SETLOTS
         PARKEYAD 'ALLDATA',SETLOTS
         PARKEYAD 'FULL  ',SETLOTS
         PARKEYAD 'DFLT ',CARDNEXT
         PARKEYAD 'NORMAL ',CARDNEXT
         PARKEYAD 'DEFAULT ',CARDNEXT
         PARKEYAD 'NODEBUG ',SETBUGOF
VERBTABN PARKEYAD 'DEBUG   ',SETBUGON
         SPACE 1
SETTERSE ZI    PROFLAGS,FGLOTS   UNDO LOTS OF OUTPUT
         OI    PROFLAGS,FGTERSE  MAKE BRIEF OUTPUT
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETLOTS  ZI    PROFLAGS,FGTERSE  UNDO BRIEF OUTPUT
         OI    PROFLAGS,FGLOTS   MAKE LOTS OF OUTPUT
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETBUGON OI    PROFLAGS,FGBUG  SET DEBUG MODE ON
         PRTL  ' ***** Debug mode now on *****',MODE=DEBUG
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETBUGOF NI    PROFLAGS,255-FGBUG  SET DEBUG MODE OFF
         PRTL  ' ***** Debug mode now off *****',MODE=DEBUG
         B     CARDNEXT      NEXT CARD
         SPACE 1
SETLIMIT TM    PRSFLAGS,PRSFGINT  HAVE AN INTEGER ?
         BZ    BADCARD       NO
         LM    R0,R1,PRS#TINT     LOAD VALUE
         LTR   R0,R0         TOO HIGH ?
         BNZ   BADCARD
         ST    R1,REQLIMIT   STORE LIMIT COUNT
         PRTDATA '   --- Processing will stop after',(REQLIMIT,I,DEB,PA*
               D),'blocks ---'
         B     CARDNEXT                                         GP09197
         SPACE 1
SETSKIP  TM    PRSFLAGS,PRSFGINT  HAVE AN INTEGER?
         BZ    BADCARD       NO
         LM    R0,R1,PRS#TINT     LOAD VALUE
         LTR   R0,R0         TOO HIGH ?
         BNZ   BADCARD
         ST    R1,REQSKIP    STORE LIMIT COUNT
 PRTDATA '   --- The leading',(REQSKIP,I,DEB,PAD),'blocks will be skipp*
               ed ---'
         B     CARDNEXT                                         GP09197
         SPACE 2
CARDEOD  OPEN  MF=(E,DCBOLIST)    OPEN THE INPUT FILES
         SPACE 2
READLOOP ICM   R0,15,REQLIMIT   HIT INPUT LIMIT ?
         BNP   SHOWLIM
         LA    R10,NAME1     PROCESS SYSUT1
         BAL   R9,GETBLOCK   READ A BLOCK
           OI  PROFLAGS,FGEOD1    SET END-FILE
         L     R15,ADDRESS1  GET ADDRESS
         STM   R15,R0,COMPADR1     UPDATE FOR COMPARE
         SPACE 1
         LA    R10,NAME2     PROCESS SYSUT2
         BAL   R9,GETBLOCK   READ A BLOCK
           OI  PROFLAGS,FGEOD2    SET END-FILE
         L     R15,ADDRESS2  GET ADDRESS
         STM   R15,R0,COMPADR2     UPDATE FOR COMPARE
         SPACE 1
         TM    PROFLAGS,FGEOD1+FGEOD2   BOTH FILES DONE ?
         BO    PGMEXIT              YES; QUIT
         SPACE 1
         ICM   R0,15,REQSKIP    DID WE SATISFY SKIP COUNT ?
         BNP   DONESKIP      YES
         INC   REQSKIP,INC=-1   DECREMENT
         B     READLOOP
         SPACE 1
DONESKIP ICM   R0,15,REQLIMIT     REACHED LIMIT?
         BP    DECLIM        NO; DECREMENT IT
SHOWLIM  PRTL  '0*** Limit count reached ***'
         B     PGMEXIT
         SPACE 1
DECLIM   INC   REQLIMIT,INC=-1,WORK=R15    UPDATE RESIDUAL COUNT
         SPACE 1
         LM    R6,R7,COMPADR1     FIRST BLOCK START/LENGTH
         LM    R8,R9,COMPADR2     SECOND BLOCK START/LENGTH
         ST    R7,LENCLCL1   SAVE DESIRED LENGTH
         ST    R9,LENCLCL2   SAVE DESIRED LENGTH
         SPACE 1
         LR    R0,R7
         SR    R0,R9
         LA    R2,=CL7'longer'
         BP    *+8
         LA    R2,=CL7'shorter'
         MVC   DB2,0(R2)
         LPR   R0,R0
         ST    R0,DIFFLEN
         BZ    COMPARE
         INC   NUMDLEN       COUNT UNEQUAL LENGTH BLOCKS
COMPARE  CLCL  R6,R8         COMPARE THE BLOCKS
         BE    DONECOMP      ALL EQUAL
         PRTLIST MSGUNQAL    HEADER - DIFFERENT
         MVICC 4                        SET COMPARE FAILED RETCODE  004
         INC   NUMDIFF       COUNT UNEQUAL
         TM    PROFLAGS,FGTERSE
         BNZ   READLOOP      HEADER ONLY IF TERSE
         B     PUTBLOCK      PRINT IT
         SPACE 1
DONECOMP INC   NUMSAME       COUNT MATCHING BLOCKS
         ICM   R0,15,DIFFLEN      LENGTH MISMATCH ?
         BNZ   HEADQUAL      YES; PRINT HEADER
         TM    PROFLAGS,FGLOTS    LOTS OF OUTPUT
         BZ    READLOOP      NO; IGNORE MACHING BLOCK
         SPACE 1
HEADQUAL PRTLIST MSGEQUAL    SHOW DATA SAME
         TM    PROFLAGS,FGLOTS    PRINT LOTS OF STUFF ?
         BNZ   PUTBLOCK      YES; PRINT IT
         SPACE 1
PUTBLOCK BAL   R14,COMPDUMP  DUMP TEXT AND COMPARE
         B     READLOOP                 AND READ NEXT
         SPACE 1
PGMEXIT  CLOSE MF=(E,DCBOLIST)          CLOSE ALL FILES OPENED
         PRTLIST RESULTS
         SERVTERM ,
         L     R9,RETCODE
         PGMEXIT RC=(R9)     FREE WORKAREA/SET RC/RETURN 004
         SPACE 1
RESULTS  FDOPT NL,CC=C'0'    DOUBLE SPACE
         FD    'Return code'
         FD    RETCODE,I,DEB,PAD
         FD    BLOCK#1,I,RADJ,NL,LEN=15
         FD    'blocks read from',PAD
         FD    NAME1
         FD    BLOCK#2,I,RADJ,NL,LEN=15
         FD    'blocks read from',PAD
         FD    NAME2
         FD    NUMSAME,I,RADJ,NL,LEN=15
         FD    'blocks matched',PAD
         FD    NUMDIFF,I,RADJ,NL,LEN=15
         FD    'blocks had different content',PAD
         FD    NUMDLEN,I,RADJ,NL,LEN=15
         FD    'blocks had different lengths',PAD
         FD    *END
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*   ROUTINE TO READ THE NEXT BLOCK ON EITHER FILE (--> R10)           *
*     RETURNS 0(R9)  IF END-FILE                                      *
*     RETURNS 4(R9)  NORMAL; R0 HAS BLOCK LENGTH                      *
*                                                                     *
*---------------------------------------------------------------------*
         PUSH  USING
         USING NAME#,R10     DECLARE FILE BLOCK
GETBLOCK SR    R0,R0              NO DATA
         TM    PROFLAG#,FGEOF#    PRIOR EOF ?
         BNZR  R9            YES; RETURN IT AGAIN
         READ  DECB#,SF,MF=E      READ A BLOCK
         CHECK DECB#              WAIT FOR COMPLETION
         INC   BLOCK##            UPDATE BLOCK COUNT
         LH    R0,DCBLRECL-IHADCB+SYSUT#  GET ACTUAL LENGTH
         B     4(,R9)
         SPACE 1
EODAD    SR    R0,R0         JUST IN CASE
         OI    PROFLAG#,FGEOF#    SET EOF
         BR    R9            RETURN TO CALLER
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*   ROUTINE TO INITIALIZE A FILE BLOCK FOR INPUT PROCESSING           *
*     RETURNS 0(R9)                                                   *
*                                                                     *
*---------------------------------------------------------------------*
         PUSH  USING
         USING NAME#,R10     DECLARE FILE BLOCK
INITFILE MVC   NAME#,DCBDDNAM-IHADCB+SYSUT#
         LA    R1,SYSUT#     INPUT DCB
         ST    R1,DECB#+DECDCBAD-DECB
         ST    R2,ADDRESS#   SET INPUT BUFFER ADDRESS
         ST    R2,DECB#+DECAREA-DECB
         SPACE 1
         SERVCALL RJFCB,NAME#   GET JFCB FOR THE FILE
         BXH   R15,R15,INITFBAD      NOT AVAILABLE
         MVC   DSN#,JFCBDSNM-INFMJFCB(R1)    DATA SET NAME
         MVC   VOL#,JFCBVOLS-INFMJFCB(R1)    VOLUME SERIAL
         BR    R9            RETURN TO CALLER
         SPACE 1
INITFBAD PRTDATA '*** File processing for',(NAME#,DEB,PAD),'failed ***'
         MVICC 16
         B     PGMEXIT
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*   COMPDUMP - Dump two blocks side by side, and underline any        *
*   differences in the hex and text fields.                           *
*   Address/Length in COMPADR1/COMPLEN1 and COMPADR2/COMPLEN2         *
*                                                                     *
*---------------------------------------------------------------------*
COMPDUMP STM   R0,R15,SAVESUB     SAVE A FEW REGISTERS
         LM    R4,R5,COMPADR1     LOAD LEFT ADDRESS/LENGTH
         LM    R6,R7,COMPADR2     LOAD RIGHT ADDRESS/LENGTH
COMPNLIN MVC   OUTLINE1,PRELINE   BLANK TOP LINE
         MVC   OUTLINE2,OUTLINE1  AND SECOND LINE
         LTR   R5,R5              LEFT RESIDUAL ?
         BNP   COMPRLIN           NONE; TEST RIGHT SIDE
         LA    R3,L'OUTTXT1       SET MAX ON ONE LINE
         MIN   (R3),(R5)          DO ONLY WHAT'S LEFT
         LR    R15,R3             SHORTCUT FOR TEXT
         BCTR  R15,0                FOR EXECUTE
         EX    R15,EXMVTXT1       MOVE LEFT TEXT
         EX    R15,EXTRTXT1       MAKE PRINTABLE
         MVI   OUTFRM11,C'*'      FRAME TEXT
         MVI   OUTFRM12,C'*'      TEXT FRAME
         LA    R3,3(,R3)          ROUND, JUST IN CASE
         SRA   R3,2               CONVERT LENGTH TO WORD COUNT
         LR    R0,R4              ADDRESS
         S     R0,ADDRESS1        CONVERT TO OFFSET
         STCM  R0,7,DB
         UNPK  WRKWRDS(7),DB(4)   UNPACK
         TR    WRKWRDS(6),TRTABLE-C'0'  MAKE PRINTABLE
         MVC   OUTOFF1,WRKWRDS    MOVE TO OUTPUT LINE
         LA    R15,OUTHEX1        DO HEX WORD 1
         LR    R14,R4             INPUT ADDRESS
COMPLWRD MVC   DB(4),0(R14)       MOVE WORD
         UNPK  WRKWRDS(9),DB(5)   UNPACK
         TR    WRKWRDS(8),TRTABLE-C'0'  MAKE PRINTABLE
         MVC   0(8,R15),WRKWRDS   MOVE TO OUTPUT LINE
         LA    R15,9(,R15)        ADVANCE OUTPUT
         LA    R14,4(,R14)        ADVANCE INPUT
         BCT   R3,COMPLWRD        DO ANOTHER WORD
         LA    R4,L'OUTTXT1(,R4)  ADVANCE INPUT
         SH    R5,=AL2(L'OUTTXT1)   FIX RESIDUAL LENGTH
COMPRLIN LTR   R7,R7              RIGHT RESIDUAL ?
         BNP   COMPBOTH           NONE; COMPARE
         LA    R3,L'OUTTXT1       SET MAX ON ONE LINE
         MIN   (R3),(R7)          DO ONLY WHAT'S LEFT
         LR    R15,R3             SHORTCUT FOR TEXT
         BCTR  R15,0                FOR EXECUTE
         EX    R15,EXMVTXT2       MOVE LEFT TEXT
         EX    R15,EXTRTXT2       MAKE PRINTABLE
         MVI   OUTFRM21,C'*'      FRAME TEXT
         MVI   OUTFRM22,C'*'      TEXT FRAME
         LA    R3,3(,R3)          ROUND, JUST IN CASE
         SRA   R3,2               CONVERT LENGTH TO WORD COUNT
         LR    R0,R6              ADDRESS
         S     R0,ADDRESS2        CONVERT TO OFFSET
         STCM  R0,7,DB
         UNPK  WRKWRDS(7),DB(4)   UNPACK
         TR    WRKWRDS(6),TRTABLE-C'0'  MAKE PRINTABLE
         MVC   OUTOFF2,WRKWRDS    MOVE TO OUTPUT LINE
         LA    R15,OUTHEX2        DO HEX WORD 1
         LR    R14,R6             INPUT ADDRESS
COMPRWRD MVC   DB(4),0(R14)       MOVE WORD
         UNPK  WRKWRDS(9),DB(5)   UNPACK
         TR    WRKWRDS(8),TRTABLE-C'0'  MAKE PRINTABLE
         MVC   0(8,R15),WRKWRDS   MOVE TO OUTPUT LINE
         LA    R15,9(,R15)        ADVANCE OUTPUT
         LA    R14,4(,R14)        ADVANCE INPUT
         BCT   R3,COMPRWRD        DO ANOTHER WORD
         LA    R6,L'OUTTXT1(,R6)  ADVANCE INPUT
         SH    R7,=AL2(L'OUTTXT1)   FIX RESIDUAL LENGTH
COMPBOTH LA    R14,OUTHEX1        ANY LEFT TEXT?
         LA    R15,OUTHEX2        ANY RIGHT TEXT ?
         LA    R0,OUTFRM11-OUTHEX1-2  NUMBER OF FIELDS TO CHECK
         TM    PROFLAGS,FGLOTS    LOTS OF OUTPUT ?
         BNZ   COMPBLUP           YES; PRINT EQUAL LINES, TOO
         CLC   0(36,R14),0(R15)   ENTIRE LINE MATCHES ?
         BE    COMPTEND           YES; SKIP IT
COMPBLUP CLC   0(1,R14),0(R15)    SAME ?
         BE    COMPBBMP           YES; BUMP
         CLI   0(R14),C' '        UNILATERAL BLANK ?
         BE    COMPBBMP           YES; IGNORE
         CLI   0(R15),C' '        UNILATERAL BLANK ?
         BE    COMPBBMP           YES; IGNORE
         MVI   OUTLINE2-OUTLINE1(R14),C'_'
         MVI   OUTLINE2-OUTLINE1(R15),C'_'
         MVI   OUTLINE2,C'+'      SIGNAL OVERPRINT REQUIRED
COMPBBMP LA    R14,1(,R14)        ADVANCE LEFT
         LA    R15,1(,R15)        ADVANCE RIGHT
         BCT   R0,COMPBLUP        TRY AGAIN
         PRTF  OUTLINE1           PRINT FORMATTED LINE
         CLI   OUTLINE2,C'+'      DIFFERENCES?
         BNE   COMPTEND           CHECK FOR END
         PRTF  OUTLINE2           OVERPRINT DIFFERENCES
COMPTEND LTR   R5,R5              LEFT EXHAUSTED?
         BP    COMPNLIN           NO; GO FOR MORE
         LTR   R7,R7              RIGHT EXHAUSTED?
         BP    COMPNLIN           NO; GO FOR MORE
         LM    R0,R15,SAVESUB     RESTORE REGISTERS
         BR    R14                AND RETURN
         SPACE 1
EXMVTXT1 MVC   OUTTXT1(0),0(R4)   MOVE LEFT TEXT
EXTRTXT1 TR    OUTTXT1(0),PRTAB   MAKE PRINTABLE
EXMVTXT2 MVC   OUTTXT2(0),0(R6)   MOVE RIGHT TEXT
EXTRTXT2 TR    OUTTXT2(0),PRTAB   MAKE PRINTABLE
         SPACE 2
         LTORG ,             DON'T WANT THIS AFTER CONSTANTS     87258
         SPACE 1
         PUSH  USING
         USING LIBWORK,R10
TITDSN   FD    NAME1,PAD,LEN=8    DD NAME
         FD    VOL1,PAD,LEN=6     VOLUME SERIAL
         FD    DSN1,PAD,LEN=44    DSNAME
         FDOPT SBA=(*,66)
         FD    NAME2,PAD,LEN=8    DD NAME
         FD    VOL2,PAD,LEN=6     VOLUME SERIAL
         FD    DSN2,PAD,LEN=44    DSNAME
         FD    *END
         POP   USING
         SPACE 1                                                 87258
MSGEQUAL FDOPT NL,CC=C'0'       DOUBLE SPACE
         FDTM  PROFLAGS,FGEOD1,BNZ=MSGEEOF1    LEFT EOF ?
         FD    'Block:',PADR,RADJ,LEN=10
         FD    BLOCK#1,I,PAD,RADJ,LEN=6
         FD    '    length:',PAD
         FDHEX COMPLEN1
MSGEEOF1 FDOPT SBA=(*,43)
         FD    'matches',PAD
         FDCLC DIFFLEN,ZEROES,BE=MSGERITE
         FD    'but',PAD
*TEST    FDHEX DIFFLEN
         FD    DB2,7,PADL
MSGERITE FDOPT SBA=(*,66)
         FDTM  PROFLAGS,FGEOD1,BNZ=MSGEEOF2    RIGHT EOF ?
         FD    'Block:',PAD
         FD    BLOCK#2,I,PAD,RADJ,LEN=6
         FD    '    length:',PAD
         FDHEX COMPLEN2
MSGEEOF2 FD    *END
         SPACE 1                                                 87258
MSGUNQAL FDOPT NL,CC=C'0'       DOUBLE SPACE
         FDTM  PROFLAGS,FGEOD1,BNZ=MSGUEOF1    LEFT EOF ?
         FD    'Block:',PADR,RADJ,LEN=10
         FD    BLOCK#1,I,PAD,RADJ,LEN=6
         FD    '    length:',PAD
         FDHEX COMPLEN1
MSGUEOF1 FDOPT SBA=(*,43)
         FD    'differs',PAD
         FDCLC DIFFLEN,ZEROES,BE=MSGURITE
         FD    'and',PAD
*TEST    FDHEX DIFFLEN
         FD    DB2,7,PADL
MSGURITE FDOPT SBA=(*,66)
         FDTM  PROFLAGS,FGEOD2,BNZ=MSGUEOF2    RIGHT EOF ?
         FD    'Block:',PAD
         FD    BLOCK#2,I,PAD,RADJ,LEN=6
         FD    '    length:',PAD
         FDHEX COMPLEN2
MSGUEOF2 FD    *END
         SPACE 1
         PRINT NOGEN
TRTABLE  DC    C'0123456789ABCDEF'      GUESS WHAT THIS IS FOR
         SPACE 1
         DS    0D            JUST IN CASE
PATDCB   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=RP, INPUT DCB              *
               RECFM=U,BLKSIZE=32760,EODAD=EODAD
         READ  PATDECB,SF,1-1,2-2,'S',MF=L
PATLEN   EQU   *-PATDCB
         SPACE 2
         LTORG
         SPACE 1
SYSPRINT PRTWORK SYSPRINT,TITLE=5      OUTPUT FILE
SUMPRINT PRTWORK SUMPRINT,*USER,TITLE=0     SUMMARY FILE
SYSIN    INPWORK SYSIN,EDIT=128
         SPACE 1
PRTAB    TRTAB CODE=TN,FILL=C'.'
         EJECT ,
         PRINT NOGEN
         SPACE 2
         DCBD  DEVD=(DA,TA),DSORG=PS
         IHADECB ,
         EJECT
SAVE     DSECT               DYNAMIC SAVE AND STORAGE AREA
DB       DS    D             REAL DOUBLE-WORD AREA               87258
DB2      DS    D             REAL DOUBLE-WORD AREA               87258
WRKWRDS  DS    4F                       DOUBLEWORD ALIGNED WORK AREA
ZEROES   DS    XL8                CONSTANT
         SERVDEFS ,          ASSORTED @SERVICE DATA
DCBOLIST OPEN  (SYSUT1,,SYSUT2),MF=L   OPEN/CLOSE PARM LIST
SAVESUB  DS    16F                     SUBROUTINE SAVE AREA
         SPACE 1
         MAPPARSE DSECT=NO   @PARSER INVOCATION ADDRESS
LENCLCL1 DS    F             LOGICAL COMPARE LENGTH 1
LENCLCL2 DS    F             LOGICAL COMPARE LENGTH 2
REQLIMIT DS    F             NUMBER OF BLOCKS TO COMPARE (COUNT/LIMIT)
REQSKIP  DS    F             NUMBER OF BLOCKS TO SKIP FIRST
DIFFLEN  DS    F             SIZE DIFFERENCE BETWEEN BLOCKS
NUMSAME  DS    F             NUMBER OF EQUAL BLOCKS
NUMDIFF  DS    F             NUMBER OF UNEQUAL BLOCKS - SAME LENGTH
NUMDLEN  DS    F             NUMBER OF UNEQUAL LENGTHS
PROFLAGS DS    X             PROCESSING FLAGS
FGEOD1   EQU   X'80'           EOF ON SYSUT1
FGEOD2   EQU   X'40'           EOF ON SYSUT2
FGTERSE  EQU   X'20'           SUPPRESS DETAIL INFO
FGLOTS   EQU   X'10'           PRODUCE ALL POSSIBLE DATA
FGBUG    EQU   X'01'           DEBUG FLAG
         SPACE 1
PRELINE  DC    C' '          BLANK FOR CLEARING LINE
OUTLINE1 DC    CL133' '      CC PLUS PRINT DATA
OUTLINE2 DC    CL133' '      CC PLUS OVERPRINT
         ORG   OUTLINE1+1    DEFINE PRINT STUFF
OUTOFF1  DS    CL6' ',CL2    BLOCK/CSECT OFFSET
OUTHEX1  DS    4CL(8+1)' ',CL2   4 HEX WORDS
OUTFRM11 DS    C'*'          LEFT FRAME
OUTTXT1  DS    CL16' '       PRINTABLE TEXT
OUTFRM12 DS    C'*',CL2      RIGHT FRAME
OUTHEX2  DS    4CL(8+1)' ',CL2   4 HEX WORDS
OUTFRM21 DS    C'*'          LEFT FRAME
OUTTXT2  DS    CL16' '       PRINTABLE TEXT
OUTFRM22 DS    C'*',CL2      RIGHT FRAME
OUTOFF2  DS    CL6' '        BLOCK/CSECT OFFSET
         ORG   ,
         SPACE 2
         PRINT GEN
         LIBDEF N=1          DEFINE FIRST LIBRARY
         SPACE 2
         LIBDEF N=2          DEFINE SECOND LIBRARY
         SPACE 2
         DS    0D                 FOR EASIER DUMP READING
BUFFER1  DS    256XL256      BUFFER FOR INPUT FILE 1
         SPACE 1
BUFFER2  DS    256XL256      BUFFER FOR INPUT FILE 2
         SPACE 1
SAVEEND  EQU   *
         EJECT
         PRINT GEN
         LIBDEF N=#,DSECT=LIBWORK
EODAD#   EQU   *             FOR CLEAN ASSEMBLY ONLY
BUFFER#  EQU   *             FOR CLEAN ASSEMBLY ONLY
         SPACE 2
         PRINT NOGEN
MYJFCB   DSECT ,
         IEFJFCBN ,
         SPACE 1
         MAPPARST ,
         END   ,                                                 87258
