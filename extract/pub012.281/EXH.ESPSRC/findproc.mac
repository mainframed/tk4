*PROCESS RENT                                                   GP04080
FINDPROC TITLE 'F I N D P R O C  *** FIND PROC IN JES2 PROCLIBS'
***********************************************************************
**   FINDS PROC IN THE CURRENT JES2 PROC CONCATENATION               **
**                                                                   **
**   AUTHOR UNKNOWN. OBTAINED FROM CBT TAPE ?                        **
**                                                                   **
**   MINOR CHANGES FOR CLEAN ASSEMBLY AND LOCAL CONVENTIONS          **
***********************************************************************
         SPACE 1                                                GP04079
         MACRO ,                                                GP04079
&NM      MSG   &TEXT                                            GP04079
         GBLA  &ZZMSGNO                                         GP04079
&ZZMSGNO SETA  &ZZMSGNO+1                                       GP04079
&NM      DC    A(MSG&ZZMSGNO,L'MSG&ZZMSGNO)                     GP04079
FINDPROM CSECT ,                                                GP04079
MSG&ZZMSGNO DC C&TEXT                                           GP04079
FINDPROC CSECT ,                                                GP04079
         MEND  ,                                                GP04079
         SPACE 1                                                GP04079
         PUNCH ' ORDER FINDPROC(P) '   MAKE DUMPS EASIER TO READ
         PUNCH ' SETCODE AC(1) '       MAKE IT WORK
         COPY  OPTIONGB                                         GP04079
         SPACE 1                                                GP04079
         SYSPARM LIST=YES                                       GP04079
         SPACE 2                                                GP04079
         PRINT &PRTSOR                                          GP04079
FINDPROC PGMHEAD ZERO31,BASE=R12,PARM=R2,AM=31,RM=24,BNDRY=PAGE GP04079
         MVI   BLANKS,C' '
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
         MVC   PRINTLNE,BLANKS
         MVC   TUPLAL(TUPSIZE),PATPLAL                          GP04080
         LA    R14,TUDSNAL                                      GP04080
         LA    R15,TUSHRAL                                      GP04080
         LA    R0,ARETDDN                                       GP04080
         O     R0,=X'80000000'  SET END OF LIST BIT
         STM   R14,R0,TUPLAL                                    GP04080
         LA    R14,TUDSNUN                                      GP04080
         LA    R15,TUDALUN                                      GP04080
         LA    R0,TUUNAUN                                       GP04080
         O     R0,=X'80000000'  SET END OF LIST BIT
         STM   R14,R0,TUPLUN                                    GP04080
         LA    R0,HOLDTIOT
         ST    R0,HOLDPTR
         MVC   BLDLMEMB,BLANKS
         MVC   SAVECPPL(16),0(R2)      SAVE CP PARM LIST
*--------------------------------------------------------------
*        L'BUFFER;L'COMMAND;COMMAND+1 SPACE; OPERANDS
*--------------------------------------------------------------
         L     R2,CPPLCBUF             GET CBUF PTR
         LH    R3,0(,R2)               L'BUFFER
         LA    R10,0(R2,R3)             END BUFFER
         LA    R9,4(,R2)               SKIP LENGTH FIELDS
         LH    R3,2(,R2)               L'COMMAND
         ALR   R9,R3                   1ST OPERAND POSITION     GP04079
         SR    R10,R9                  L'OPERAND
         LTR   R10,R10
         BZ    NOPARM                                           GP04079
HAVEINPT CH    R10,=H'8'
         BNH   USEASIS
         LA    R10,8
USEASIS  BCTR  R10,0
HAVEMEMB MVC   BLDLMEMB(0),0(R9)
         EX    R10,HAVEMEMB
         OC    BLDLMEMB,BLANKS
         STLINENO LINE=1
         MVC   PRINTLNE,BLANKS
         MVC   PRINTLNE+00(14),=C'SEARCHING FOR:'
         MVC   PRINTLNE+15(11),=C'==========>'
         MVC   PRINTLNE+27(08),BLDLMEMB
         MVC   PRINTLNE+36(11),=C'<=========='
         TPUT  PRINTLNE,L'PRINTLNE-1
         L     R3,16                 GET CVT
         USING CVTMAP,R3
         L     R3,CVTASVT                ASVT
         DROP  R3
         USING ASVT,R3
         LA    R4,ASVTENTY             ASVT ENTRIES
         L     R5,ASVTMAXU           MAXIMUM #
ASVTLOOP ICM   R6,15,0(R4)   GET ASCB POINTER                   GP04079
         BNP   NEXTASCB      OR OUT                             GP04079
         USING ASCB,R6
         ICM   R7,B'1111',ASCBJBNS   START MOUNT LOGON ??
         BZ    NEXTASCB
         ICM   R8,B'1111',ASCBTSB   TSO TASK
         BNZ   NEXTASCB
TESTJOB  CLC   =C'JES2    ',0(R7)
         BE    FOUNDJES
NEXTASCB LA    R4,4(,R4)
         BCT   R5,ASVTLOOP
         MVC   PRINTLNE+00(08),=C'JES2 NOT FOUND'
         TPUT  PRINTLNE,8                                       GP04079
         MVICC 16,16         OOPS                               GP04079
         B     PGMEXIT
FOUNDJES SLR   R0,R0
         MODESET MODE=SUP,KEY=ZERO      MODESET AND SAVE OLD KEY
         AXSET AX=ONE
         SLR   R7,R7
         ICM   R7,B'0011',ASCBASID
         SSAR  R7
         LAM   R6,R6,=F'1'     JSCB/TIOT                        GP04079
         LAM   R8,R8,=F'1'     TCB                              GP04080
         LAM   R9,R9,=F'1'     JFCB                             GP04079
         SAC   512                                              GP04079
         L     R8,ASCBASXB             => ASXB
         USING ASXB,R8
         L     R8,ASXBLTCB             => LAST TCB
         USING TCB,R8
         B     DONTSKIP
LOOPTCB  ICM   R8,B'1111',TCBOTC
         BNZ   DONTSKIP                                         GP04079
         MVICC 12,1                                             GP04079
         B     TESTEND                                          GP04079
DONTSKIP SLR   R6,R6                                            GP04080
         ICM   R6,B'0111',TCBJSCBB                              GP04080
         BZ    LOOPTCB
         USING IEZJSCB,R6                                       GP04080
         MVC   HOLDQMPA,JSCBQMPI
         ICM   R6,B'1111',TCBTIO           GET TIOT ADDRESS     GP04079
         BZ    LOOPTCB
         USING TIOT,R6       TIOT ADDRESSABILITY                GP04079
         DROP  R8
         LA    R6,TIOENTRY         GET FIRST TIOT DD ENTRY      GP04079
         SLR   R7,R7               CLEAR WORK REGISTER
         USING TIOELNGH,R6         TIOE ADDRESSABILITY          GP04079
         MVI   FIRSTFLG,X'FF'    1ST FIND PROC0?
LOOPTIOE ICM   R7,1,TIOELNGH       GET LENGTH OF THIS ENTRY     GP04079
         BZ    TESTEND             EXIT IF END                  GP04079
         TM    TIOESTTA,X'80'      TEST FOR FREE ENTRY
         BNO   GOTDDNM             BRANCH IF NOT FREE           GP04079
NEXTTIOE AR    R6,R7               POINT TO NEXT TIOE           GP04079
         B     LOOPTIOE            GO CHECK NEXT DD ENTRY       GP04079
GOTDDNM  CLI   FIRSTFLG,X'FF'      LOOKING FOR PROC?? DD        GP04079
         BNE   DOCONCAT            NO ALREADY IN CONCAT LIST    GP04079
         CLC   =C'PROC',TIOEDDNM                                GP04079
         BNE   NEXTTIOE                                         GP04079
         MVI   FIRSTFLG,X'00'                                   GP04079
         B     GETJFCB                                          GP04079
DOCONCAT CLC   TIOEDDNM,BLANKS     STILL IN CONCAT LIST ??      GP04079
         BE    GETJFCB                                          GP04079
         MVI   FIRSTFLG,X'FF'                                   GP04079
         B     GOTDDNM                                          GP04079
         SPACE 1                                                GP04079
*---------------------------------------------------------------------*
*   IN OS/390 2.5 THE SWAREQ FAILS ON 0C4. IEFQBSVA DOES NOT SET      *
*   ACCESS REGISTERS, AND REQUIRES 0 IN R4 AND 1 IN R14 (PLUS...)     *
*   SERVICE REPLACED BY LOCAL CODE                                    *
*---------------------------------------------------------------------*
         AGO  .MYCODE                                           GP04079
GETJFCB  LA    R11,EPA                                          GP04079
         ST    R11,SWEPAPTR                                     GP04079
         USING ZB505,R11                                        GP04079
         XC    SWAEPAX,SWAEPAX
         MVC   SWQMPA,HOLDQMPA
         MVC   SWVA,TIOEJFCB
         SWAREQ FCODE=RL,EPA=SWEPAPTR,MF=(E,SWAPARMS),UNAUTH=YES
         ST    R15,RETCODE                                      GP04079
         BNZ   TESTEND                                          GP04079
         L     R9,SWBLKPTR                                      GP04079
         AGO   .COMCODE                                         GP04079
.MYCODE  SPACE 2                                                GP04079
***********************************************************************
*        SWA LOOK-UP ROUTINE                                          *
***********************************************************************
         PUSH  USING                                            GP04079
GETJFCB  ICM   R15,7,TIOEJFCB  GET TOKEN                        GP04079
         EX    R15,EXSWAODD  SEE WHETHER IT'S AN ODD ADDRESS    GP04079
         BZ    LOOKSVA       NO; HAVE ADDRESS                   GP04079
         ICM   R9,15,HOLDQMPA QMAT BASE                         GP04079
         BZ    BADQMPA       NO QMAT, SKIP IT                   GP04079
         SPACE 1                                                GP04079
         USING QMAT,R9                                          GP04079
         LR    R0,R15                                           GP04079
         SRL   R0,16         MOVE EXTENT TO LAST BYTE           GP04079
         N     R15,=XL4'FFFF'  ISOLATE SVA OFFSET               GP04079
         LA    R1,X'FF'      MAX QMAT EXTENTS                   GP04079
         NR    R0,R1         ISOLATE QMAT COUNTER               GP04079
         BZ    LOOKSWAV      ZERO; CHECK QMAT VERSION           GP04079
         SPACE 1                                                GP04079
LOOKSWAP ICM   R9,15,QMATNEXT  NEXT QMAT EXTENT                 GP04079
         BZ    LOOKSWAX      NONE?                              GP04079
         BCT   R0,LOOKSWAP   LOOP TO FIND THE EXTENT            GP04079
         SPACE 1                                                GP04079
LOOKSWAV CLI   QMATVERS,2    IS IT AN ESA4 QMAT?                GP04079
         BL    LOOKSWAX      NO, USE AS IS                      GP04079
         LA    R9,1(,R9)     ALIGN                              GP04079
LOOKSWAX ALR   R9,R15        ADD QMAT BASE                      GP04079
         L     R15,0(,R9)    GET HEADER ADDRESS                 GP04079
LOOKSVA  LA    R9,16(,R15)   SKIP HEADER                        GP04079
         POP   USING                                            GP04079
.COMCODE USING JFCB,R9                                          GP04079
         L     R3,HOLDPTR                                       GP04079
         MVC   00(58,R3),BLANKS                                 GP04079
         MVC   00(08,R3),TIOEDDNM MOVE DDNAME FROM TIOT TO TPUT AREA
         MVC   08(06,R3),JFCBVOLS                               GP04079
         MVC   14(44,R3),JFCBDSNM    DSNAME FROM JFCB TO TPUT AREA
NEXTLINE LA    R3,58(,R3)
         ST    R3,HOLDPTR
NEXTDDNM LTR   R7,R7               TEST FOR LAST TIOE
         BNZ   NEXTTIOE            GO GET NEXT TIOE IF NOT      GP04079
         B     TESTEND             EXIT IF NO MORE              GP04079
EXSWAODD TM    =X'01',*-*    ODD ADDRESS?                       GP04079
         SPACE 1                                                GP04079
BADQMPA  MVICC 12,3                                             GP04079
         B     TESTEND                                          GP04079
ENDSCAN  MVICC 12,2                                             GP04079
         SPACE 2                                                GP04079
TESTEND  EPAR  R7
         SSAR  R7
         SAC   0
         AXSET AX=ZERO
*        MODESET KEYADDR=(2)           MODESET AND RESTORE OLD KEY
         MODESET MODE=PROB,KEY=NZERO ODESET AND RESTORE OLD KEY
         ICM   R15,B'1111',RETCODE    SWAREQ FAILURE ???        GP04079
         BZ    OKFORNOW
         ICM   R0,15,RSNCODE SPECIAL MESSAGE?                   GP04079
         BNZ   INDXMSG       YES                                GP04079
         MVC   PRINTLNE,BLANKS                                  GP04079
         MVC   PRINTLNE+00(08),=C'JES2    '                     GP04079
         MVC   PRINTLNE+10(29),=C'SWAREQ FAILED: R15: 00000000 '
         UNPK  PRINTLNE+30(09),RETCODE(5)                       GP04079
         TR    PRINTLNE+30(08),TRTAB2-240                       GP04079
         MVI   PRINTLNE+38,C' '                                 GP04079
         TPUT  PRINTLNE,38                                      GP04079
         B     PGMEXIT
INDXMSG  BCTR  R1,0          CONVERT INDEX TO OFFSET            GP04079
         SLL   R1,3          CONVERT INDEX TO OFFSET            GP04079
         LM    R2,R3,0(R1)   LOAD ADDREES AND LENGTH            GP04079
         TPUT  (R2),(R3)     ISSUE TPUT                         GP04079
         B     PGMEXIT                                          GP04079
OKFORNOW LA    R10,HOLDTIOT-58
         L     R11,HOLDPTR
PRTLOOP  LA    R10,58(,R10)
         CR    R10,R11
         BNL   PGMEXIT
         MVC   PRINTLNE,BLANKS
         MVC   PRINTLNE+00(08),0(R10)    DDNAME
         CLC   0(8,R10),BLANKS           CONCAT DD ??
         BNE   *+10
         MVC   PRINTLNE+00(08),=C'........'
         MVC   PRINTLNE+09(06),08(R10)   VOLSER
         MVC   PRINTLNE+16(44),14(R10)   DATASET
*
*        DYNAMIC ALLOCATION
*
DYNALOC  LA    R4,RB                   SVC 99 REQUEST BLOCK
         USING S99RB,R4                MAP THE RB
         ST    R4,RBP                  STORE RB ADDRESS IN POINTER LIST
         OI    RBP,X'80'               FLAG LAST POINT
         XC    S99RB(S99RBLEN),S99RB   CLEAR RB
         MVI   S99RBLN,S99RBLEN        STORE LENGTH OF RB
         MVI   S99VERB,S99VRBAL        INDICATE ALLOCATE
         LA    R5,TUPLAL               TEXT UNIT POINTER LIST ADDRESS
         ST    R5,S99TXTPP             STORE IT IN RB
         MVC   ADSNAME,14(R10)         DATASET NAME
         LA    R1,RBP
         DYNALLOC
         LTR   R15,R15
         BZ    GOODA
         CVD   R15,DWORD
         MVI   PRINTLNE+059,C'A'
         MVC   PRINTLNE+61(04),=X'40202120'
         ED    PRINTLNE+61(04),DWORD+6
         UNPK  PRINTLNE+66(5),S99ERROR(3)
         TR    PRINTLNE+66(4),TRTAB2-240
         MVI   PRINTLNE+70,C' '
         MVC   PRINTLNE+71(08),ADDNAME
         TPUT  PRINTLNE,L'PRINTLNE-1
         B     PRTLOOP
*
*        FILL IN DUMMY DCB; ISSUE OPEN; BLDL
*
GOODA    MVC   SYS00001(DYNDCBL),PATDCB  REFRESH THE DCB        GP04080
         MVC   DCBDDNAM-IHADCB+SYS00001(8),ADDNAME              GP04080
         MVC   DELNAME,ADDNAME
         OI    DCBOLIST,X'80'   SET END OF LIST BIT             GP04080
         OPEN  (SYS00001,(INPUT)),MF=(E,DCBOLIST)               GP04080
         MVC   FF(2),=AL2(1)
         MVC   LL(2),=AL2(74)                                   GP04080
         BLDL  SYS00001,FF
         LTR   R15,R15
         BNZ   NOTFOUND
         MVC   PRINTLNE+49(27),=C'********** FOUND **********'
         MVC   DATALINE,BLANKS
         MVC   DATALINE+00(08),BLDLMEMB
         SLR   R0,R0
         IC    R0,UHALF#               FLAGS USER DATALENGTH
         N     R0,=X'0000001F'         RETAIN USER DATA LEN IN HALFWDS
         LTR   R0,R0
         BZ    NODATA                  NO USER DATA
         ICM   R0,B'0011',CLINES        CURRENT SIZE
         CVD   R0,DWORD
         MVC   DATALINE+08(08),=X'4020202020202120'
         ED    DATALINE+08(08),DWORD+4
         ICM   R1,B'1111',CDATE        CREATION DATE
         BAL   R15,YEARCONV
         MVC   DATALINE+17(10),DATE+1
         ICM   R1,B'1111',UDATE        CHANGED DATE
         BAL   R15,YEARCONV
         MVC   DATALINE+28(10),DATE+1
         UNPK  PACKWORK(5),ATIME(3)
         TR    PACKWORK(4),TRTAB2-240
         MVC   DATALINE+39(02),PACKWORK
         MVI   DATALINE+41,C':'
         MVC   DATALINE+42(02),PACKWORK+2
         ICM   R0,B'0011',ILINES        INITIAL SIZE
         CVD   R0,DWORD
         MVC   PACKWORK+00(08),=X'4020202020202120'
         ED    PACKWORK+00(08),DWORD+4
         MVC   DATALINE+45(05),PACKWORK+3       5 PLACES
         SLR   R0,R0
         IC    R0,VER1            MODULE VERSION #
         CVD   R0,DWORD
         MVC   PACKWORK(04),=X'40202120'
         ED    PACKWORK(04),DWORD+6
         MVC   DATALINE+51(02),PACKWORK+2
         MVI   DATALINE+53,C'.'
         IC    R0,REL1            MODULE RELEASE #
         CVD   R0,DWORD
         MVC   PACKWORK(04),=X'40212020'
         ED    PACKWORK(04),DWORD+6
         MVC   DATALINE+54(02),PACKWORK+2
         ICM   R0,B'0011',MOD
         CVD   R0,DWORD
         MVC   PACKWORK(06),=X'402020202120'
         ED    PACKWORK(06),DWORD+5
         MVC   DATALINE+57(04),PACKWORK+2
         MVC   DATALINE+72(08),USERID
         TPUT  PRINTLNE,L'PRINTLNE-1
         TPUT  DATAHEAD,L'DATAHEAD
         TPUT  DATALINE,L'DATALINE
         B     CLOSEPDS
ABEND    EX    R0,*
NODATA   MVC   PRINTLNE+66(12),=C'NO ISPF DATA'
         B     GENTPUT
NOTFOUND MVC   PRINTLNE+49(09),=C'NOT FOUND'
GENTPUT  TPUT  PRINTLNE,L'PRINTLNE-1
*
*        CLOSE DE-ALLOCATE
*
CLOSEPDS CLOSE MF=(E,DCBOLIST)                                  GP04080
DEALOC   XC    S99RB(S99RBLEN),S99RB   CLEAR RB
         MVI   S99RBLN,S99RBLEN        STORE LENGTH OF RB
         MVI   S99VERB,S99VRBUN        INDICATE UNALLOCATE
         LA    R5,TUPLUN               TEXT UNIT POINTER LIST ADDRESS
         ST    R5,S99TXTPP             STORE IT IN RB
         MVC   DDSNAME,14(R10)
         LA    R1,RBP
         DYNALLOC
         LTR   R15,R15
         BZ    PRTLOOP
         CVD   R15,DWORD
         MVI   PRINTLNE+059,C'D'
         MVC   PRINTLNE+61(04),=X'40202120'
         ED    PRINTLNE+61(04),DWORD+6
         UNPK  PRINTLNE+66(5),S99ERROR(3)
         TR    PRINTLNE+66(4),TRTAB2-240
         MVI   PRINTLNE+70,C' '
         MVC   PRINTLNE+71(08),ADDNAME
         TPUT  PRINTLNE,L'PRINTLNE-1
         B     PRTLOOP
NOPARM   MVC   PRINTLNE+10(20),=C'MEMBER NAME REQUIRED'
         TPUT  PRINTLNE,L'PRINTLNE-1
PGMEXIT  PGMEXIT RC=RETCODE                                     GP04079
         TITLE '*** DATE CONVERSION ROUTINE ***'
YEARCONV STM   R2,R11,SAVEARE2
         XC    DWORD,DWORD
         MVC   YEARTABL(72),PATTYEAR
         ST    R1,DWORD+4                STASH DATE YYDDDC
         AP    DWORD+4(4),=P'1900000'
         TM    DWORD+5,X'01'              ADJUST
         BO    NOLEAPYR                 TABLE
         TM    DWORD+5,X'12'                ON
         BM    NOLEAPYR                   LEAP
         MVI   FEBLEAP,29                  YEAR
NOLEAPYR MVC   DATE+00(5),=X'4020212020'
         ED    DATE+00(5),DWORD+4      EDIT YEAR
         XC    DWORD(6),DWORD                CLEAR ALL BUT JULIAN DAY
         SLR   R0,R0
         CVB   R1,DWORD                   CONVERT TO BINARY DAYS
         LA    R14,YEARTABL-6
DATELOOP SLR   R1,R0
         LA    R14,6(,R14)
         IC    R0,0(,R14)
         CLR   R0,R1
         BL    DATELOOP
         CVD   R1,DWORD
         MVI   DATE+5,C'/'
         MVC   DATE+6(2),4(R14)    GET MONTH
         MVI   DATE+8,C'/'
         UNPK  DWORD+0(3),DWORD+6(2)        DAY
         OI    DWORD+2,X'F0'
         MVC   DATE+9(2),DWORD+1
         LM    R2,R11,SAVEARE2
         BR    R15           RETURN TO CALLER **********
DATEEND  EQU   *
         TITLE '*** WORKAREAS, CONSTANTS, AND MAPPING MACROS ***'
         PRINT &PRTSYS                                          GP04079
TRTAB    DC    256AL1(*-TRTAB)
ONE      DC    H'1'
ZERO     DC    H'0'
TRTAB2   DC    C'0123456789ABCDEF'
PATDCB   DCB   DDNAME=SYS00001,MACRF=R,DSORG=PO                 GP04080
DATAHEAD DC    CL80' '
         ORG   DATAHEAD+00
         DC    CL8'MEMBER  '
         ORG   DATAHEAD+12
         DC    CL4'SIZE'
         ORG   DATAHEAD+18
         DC    CL7'CREATED'
         ORG   DATAHEAD+33
         DC    CL7'CHANGED'
         ORG   DATAHEAD+46
         DC    CL4'INIT'
         ORG   DATAHEAD+51
         DC    CL5'VV MM'
         ORG   DATAHEAD+58
         DC    CL3'MOD'
         ORG   DATAHEAD+74
         DC    CL2'ID'
         ORG   ,
         LTORG ,
         SPACE 1                                                GP04079
MSGTABLE MSG   'ERROR FINDING LTCB'  DEFINE TPUT MESSAGE        GP04079
         MSG   'PROC00 DD NOT FOUND IN JES2 ADDRESS SPACE'      GP04079
         MSG   'PROBLEM GETTING JFCB SWA ADDRESS'               GP04079
         SPACE 2
PATPLAL  DC    A(PATDSNAL)                                      GP04080
         DC    X'00',AL3(PATSHRAL)                              GP04080
         DC    X'80',AL3(PATURDDN)                              GP04080
PATDSNAL DC    AL2(DALDSNAM)                                    GP04080
         DC    AL2(1)
         DC    AL2(44)
PATADSN  DC    CL44' '                                          GP04080
PATSHRAL DC    AL2(DALSTATS)                                    GP04080
         DC    AL2(1)
         DC    AL2(1)
         DC    X'08'
PATURDDN DC    AL2(DALRTDDN)                                    GP04080
         DC    AL2(1)
         DC    AL2(8)
PATRDDN  DC    CL8' '                                           GP04080
PATPLUN  DC    A(PATDSNUN)             DEALLOCATE DDNAME        GP04080
         DC    A(PATUNLUN)             DEALLOCATE DDNAME        GP04080
         DC    X'80',AL3(PATUNAUN)     UNALLOCATE ANYWAY        GP04080
PATDSNUN DC    AL2(DALDSNAM)           DDNAME TEXT UNIT         GP04080
         DC    AL2(1)                  PARMS = 1
         DC    AL2(44)                 LENGTH = 8
PATUNDSN DC    CL44' '                 DSNAME                   GP04080
PATUNLUN DC    AL2(DALDDNAM)                                    GP04080
         DC    AL2(1)
         DC    AL2(8)
PATDELDD DC    CL8' '                                           GP04080
PATUNAUN DC    AL2(DUNUNALC)           UNALLOCATE               GP04080
         DC    AL2(0)                  PARMS = 0
         SPACE 2
PATTYEAR DC    AL1(31),C'JAN01'
         DC    AL1(28),C'FEB02'
         DC    AL1(31),C'MAR03'
         DC    AL1(30),C'APR04'
         DC    AL1(31),C'MAY05'
         DC    AL1(30),C'JUN06'
         DC    AL1(31),C'JUL07'
         DC    AL1(31),C'AUG08'
         DC    AL1(30),C'SEP09'
         DC    AL1(31),C'OCT10'
         DC    AL1(30),C'NOV11'
         DC    AL1(255),C'DEC12'
FEBLEAP  EQU   YEARTABL+6              FEBRUARY LEAP YEAR
YEAREND  EQU   *
         SPACE 2
SAVE     DSECT ,                                                GP04079
SAVEAREA DS    18F
SAVEARE2 DS    18F
DWORD    DS    D
WORK     DS    D
         SERVDEFS ,          SERVICE AREA                       GP04079
SAVECPPL DS    0F     ** TSO COMMAND PROCESSOR PARAMETER LIST **
CPPLCBUF DS    A      ADDRESS OF COMMAND INPUT BUFFER
CPPLUPT  DS    A                 USER PROFILE TABLE
CPPLPSCB DS    A                 PROTECTED STEP CONTROL BLOCK
CPPLECT  DS    A                 ENVIRONMENT CONTROL TABLE
HOLDPTR  DS    A
HOLDQMPA DS    A
SWEPAPTR DS    F
EPA      DS    CL28       EXTENDED
FIRSTFLG DS    X
SWAPARMS SWAREQ MF=L
         DS    3A              SOME EXPANSIONS TOO SHORT        GP04079
BLANKS   DS    CL80
PRINTLNE DS    CL80
DATALINE DS    CL80
         SPACE 2
DCBOLIST OPEN  (SYS00001,INPUT),MF=L                            GP04080
SYS00001 DCB   DDNAME=SYS00001,MACRF=R,DSORG=PO                 GP04080
DYNDCBL  EQU   *-SYS00001                                       GP04080
*        BLDL  INPUT/OUTPUT DATA FOR ISPF DATA
         SPACE 2
FF       DS    H                NUMBER OF MEMBERS
LL       DS    H                BLDL LIST LENGTH
BLDLMEMB DS    CL8              MEMBER NAME
TTR      DS    XL3              TTR
         DS    X                CONCATENATION #
         DS    X                INDICATOR BYTE
UHALF#   DS    X                # USER DATA IN HALF WORDS + FLAGS
VER1     DS    X                ISPF VERSION
REL1     DS    X                     RELEASE
         DS    XL2              ???
CDATE    DS    PL4              CREATION DATE CCYYDDDF
UDATE    DS    PL4              LAST CHANGED DATE CCYYDDDF
ATIME    DS    XL2                           TIME HHMM
CLINES   DS    XL2              CURRENT # LINES
ILINES   DS    XL2              INITIAL # LINES
MOD      DS    XL2              MODIFICATION LEVEL
USERID   DS    CL8              USERID
         DS    XL2              ???
         ORG   BLDLMEMB+74      ALLOW FOR EXPANSION OF D.E.     GP04080
         SPACE 2
RBP      DS    A                                                GP04080
RB       DS    CL(S99RBEND-S99RB)
S99RBLEN EQU   S99RBEND-S99RB
         SPACE 2                                                GP04080
TUPLAL   DC    A(TUDSNAL)                                       GP04080
         DC    X'00',AL3(TUSHRAL)                               GP04080
         DC    X'80',AL3(ARETDDN)                               GP04080
TUDSNAL  DC    AL2(DALDSNAM)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(44)                                          GP04080
ADSNAME  DC    CL44' '                                          GP04080
TUSHRAL  DC    AL2(DALSTATS)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(1)                                           GP04080
         DC    X'08'                                            GP04080
ARETDDN  DC    AL2(DALRTDDN)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(8)                                           GP04080
ADDNAME  DC    CL8' '                                           GP04080
TUPLUN   DC    A(TUDSNUN)              DEALLOCATE DDNAME        GP04080
         DC    A(TUDALUN)              DEALLOCATE DDNAME        GP04080
         DC    X'80',AL3(TUUNAUN)      UNALLOCATE ANYWAY        GP04080
TUDSNUN  DC    AL2(DALDSNAM)           DDNAME TEXT UNIT         GP04080
         DC    AL2(1)                  PARMS = 1                GP04080
         DC    AL2(44)                 LENGTH = 8               GP04080
DDSNAME  DC    CL44' '                 DSNAME                   GP04080
TUDALUN  DC    AL2(DALDDNAM)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(8)                                           GP04080
DELNAME  DC    CL8' '                                           GP04080
TUUNAUN  DC    AL2(DUNUNALC)           UNALLOCATE               GP04080
         DC    AL2(0)                  PARMS = 0                GP04080
TUPSIZE  EQU   *-TUPLAL                                         GP04080
         SPACE 2
PACKWORK DS    CL20
DATE     DC    CL11' '       CONVERTED DATE
YEARTABL DS    CL72          YEAR TABLE AREA
         SPACE 2
HOLDTIOT DS    1000CL58
HOLDTEND EQU   *
SAVEEND  EQU   *                                                GP04079
         SPACE 2
         PRINT &PRTSYS                                          GP04079
         CVT   DSECT=YES,PREFIX=YES
         IHAASVT
         IHAASCB LIST=YES
         IHAASXB LIST=YES
         IKJTSB   LIST=YES,EXT=NO
         IKTTSBX
         IKJTCB LIST=YES
         IEZJSCB
         IKJPSCB
         IEFJSSIB                  SSIB DSECT
         IEFAJCTB                  JCT DSECT
         IHAACEE ,
CSCB     DSECT
         IEECHAIN
         IEFJESCT
         IEFZB505 LOCEPAX=YES
TIOT     DSECT
         IEFTIOT1
JFCB     DSECT
      IEFJFCBN LIST=YES
         IHAPDS PDSBLDL=YES
         DCBD  DSORG=PO
         IEFZB4D0
         IEFZB4D2
         IEFQMNGR ,                                             GP04079
         IEFQMAT ,                                              GP04079
         END   FINDPROC
