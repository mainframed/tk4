FRESH    TITLE 'P D S F R E S H  ***  PDS FRESHEN BY DATE'
         PUNCH '  ORDER PDSFRESH(P) '  EASIER DUMPS             GP09246
         PUNCH '  SETCODE AC(1)     '  FOR IEBCOPY INVOCATION   GP09246
***********************************************************************
*                                                                     *
*        PDSFRESH         from CBT 249, file 200 as WHATSNEW          *
*        --------         not RENT, not REFR, maybe REUS. AC=1        *
*                         Two PDS version by Gerhard Postpischil.     *
*    Reads and compares the directories of two partitioned data sets. *
*    For each member, obtain a date:                                  *
*      SYSUT1  later of ZAP or Link date for load module              *
*              change date for non-load entry                         *
*              0 if no other source                                   *
*                                                                     *
*      SYSUT2  uses the Link date for load module                     *
*              change date for non-load entry                         *
*              0 if no other source                                   *
*                                                                     *
*      SYSIN   creates control cards for IEBCOPY                      *
*                                                                     *
*      SYSTERM/SYSPRINT  output listing                               *
*                                                                     *
*   Single load PDS version:                                          *
*        WRITTEN BY   REX WIDMER / PETER FARRELL                      *
*                                                                     *
*        TRANS WORLD AIRLINES INC.                                    *
*        KANSAS CITY ADMINISTRATIVE CENTER                            *
*        11500 AMBASADOR DRIVE                                        *
*        KANSAS CITY, MO 64153                                        *
*                                                                     *
*        816-464-6671                                                 *
*                                                                     *
*        THIS PROGRAM IS DISTRIBUTED WITHOUT CHARGE TO MEMBERS        *
*        OF THE GUIDE COBOL GROUP.  IT IS DISTRIBUTED ON AN AS        *
*        IS, WHERE IS BASIS, WITHOUT EXPRESSED OR IMPLIED WARRANTY    *
*        OF ANY KIND.  IT IS DISTRIBUTED IN HOPE THAT IT MAY SAVE     *
*        OTHER MEMBERS OF THE PROJECT SOME WHEEL RE-INVENTING...      *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*     SAMPLE JCL / JOBSTREAM                                          *
*                                                                     *
*       //FRESHEN PROC NAME=,RGN=256K                                 *
*       //DATER   EXEC PGM=PDSFRESH,REGION=&RGN                       *
*       //SYSTERM   DD SYSOUT=*             PDSFRESH listing          *
*       //SYSPRINT  DD SYSOUT=*             IEBCOPY messages          *
*       //SYSIN     DD SPACE=(TRK,(1,1)),UNIT=SYSDA (optional)        *
*       //SYSUT3    DD UNIT=SYSDA,SPACE=(CYL,10)    (optional)        *
*       //SYSUT4    DD UNIT=SYSDA,SPACE=(CYL,10)    (optional)        *
*       //SYSUT1    DD DISP=SHR,DSN=reference.pds                     *
*       //SYSUT2    DD DISP=OLD,DSN=updated.pds                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                GP09246
         COPY  OPTIONGB                                         GP09246
         SPACE 1                                                GP09246
         SYSPARM LIST=YES                                       GP09246
         EJECT
         PRINT &PRTSOR                                          GP09246
         EXTRN SUBALLOC      ALLOCATION ROUTINE                 GP09246
PDSFRESH PGMHEAD BASE=(R11,R12),PARM=R1                         GP09246
         SPACE  2
         SERVINIT ,                                             GP09246
         SERVLOAD @PRINTER                                      GP09246
         SERVLOAD SUBTREE    REPLACE SORT WITH STORAGE TREE     GP09246
         SUBCALL SUBTREE,('INI',ROOTBALL),VL,MF=(E,CALLPARM)    GP09246
         PRTOPEN SYSPRINT,OPT=(WTO,ABEND)                       GP09246
         SPACE 1
*        GET JOBNAME OF JOB, AND SAVE IT  -
         EXTRACT FIELD1,FIELDS=(TIOT)
         L     R1,FIELD1           POINT TO TIOT
         MVC   JNAME,0(R1)         SAVE JOBNAME
         MVC   SNAME,8(R1)         SAVE STEP NM                 GP09246
         SPACE 2
***********************************************************************
*                                                                     *
*    INITIALIZE - CHECK THAT NEEDED FILES ARE AVAILABLE               *
*                                                                     *
***********************************************************************
         SPACE 1
         DEVTYPE =CL8'SYSIN ',DB                                GP09246
         BXLE  R15,R15,HAVESYN    OK? SHOULD BE DUMMY OR TEMP   GP09246
         MVI   ALLOPARM,C' '    CLEAR ALL                       GP09246
         MVC   ALLOPARM+1(ALLOPLEN-1),ALLOPARM                  GP09246
         MVC   PRMDDNAM,=CL8'SYSIN  '  TEMPORARY DATA SET       GP09246
         MVC   PRMSPC(3),=C'CYL'                                GP09246
         MVI   PRMPRIME+L'PRMPRIME-1,C'1'    ONE CYLINDER ?     GP09246
         LA    R2,MSGAREA                                       GP09246
         SUBCALL SUBALLOC,((R2),ALLOPARM),MF=(E,CALLPARM)       GP09246
HAVESYN  PRTOPEN SYSPUNCH,OPT=(NOWTO),DEV=3                     GP09246
         SPACE 1
         LA    R1,=CL8'SYSUT1'    MASTER FILE
         BAL   R9,INITFILE        GO TO PROCESS
         MVC   UT1DSN,JFCBDSNM
         MVC   UT1VOL,JFCBVOLS
         LA    R1,=CL8'SYSUT2'    UPDATE FILE
         BAL   R9,INITFILE        GO TO PROCESS
         MVC   UT2DSN,JFCBDSNM
         MVC   UT2VOL,JFCBVOLS
         SPACE 1
         PRTF  HEAD01,TITLE=1      HEADING                      GP09246
         PRTDATA JNAME,'                         ',(UT1DSN,PAD),(UT1VOL*
               ,PAD),TITLE=2                                    GP09246
         PRTDATA SNAME,'                         ',(UT2DSN,PAD),(UT2VOL*
               ,PAD),TITLE=3                                    GP09246
         PRTF  HEAD02,CC=NO,TITLE=4                             GP09246
         PRTF  HEAD03,CC=NO,TITLE=5                             GP09246
         PRTF  HEAD04,CC=NO,TITLE=6                             GP09246
         SPACE 2
***********************************************************************
*                                                                     *
*    PREPARE TO PROCESS FILES                                         *
*                                                                     *
***********************************************************************
         SPACE 1
         MVC   DCBDDNAM-IHADCB+MEMDCB,=CL8'SYSUT1'  FILE 1
         MVC   DCBDDNAM-IHADCB+DIRDCB,=CL8'SYSUT1'  FILE 1
         MVI   SOURCE,C'1'        SHOW SOURCE FILE
         SPACE 1
*        GET A BUFFER TO READ THE MEMBERS INTO  -
*FAILS*  MVC   BUFFLEN,MEMDCB+62   GET BLOCKSIZE FROM THE DCB
         MVC   BUFFLEN,=X'7FF8'   USE 32K, SHOUD BE ENOUGH      GP09246
         L     R0,BUFFER           LENGTH + SP I.D. FOR GETMAIN
         GETMAIN R,LV=(0)          ISSUE GETMAIN
         ST    R1,DECB+12          PUT POINTER TO BUFFER IN DECB
         SPACE 1
*        INITIALISE  THE BUFFER TO ZEROS (EASIER DEBUGGING)  -
         LH    R2,BUFFLEN          GET LENGTH OF THE BUFFER
         CLRL  (R1),(R2)           ZERO THE BUFFER              GP09246
         SPACE 1
*
*        GET STORAGE FOR THE CESD TABLE  -
*
*              THIS TABLE WILL BE USED TO CONTAIN SD ENTRIES
*              FROM THE CESD RECORDS.
*              IT IS USED TO RESOLVE ZAP IDRDATA TO THE CORRESPONDING
*              CSECT NAME.
*        TABLE FORMAT IS AS FOLLOWS -
*
*        0 - 3  = POINTER TO THE FIRST SLOT IN TABLE
*        4 - 7  = LENGTH OF EACH TABLE ENTRY  ( 10 BYTES )
*        8 - B  = POINTER TO NEXT AVAIL. SLOT TO ADD AN ENTRY
*        C - F  = POINTER TO THE END OF THE TABLE
*
         L     R0,GETLEN           GET LENGTH AND SUBPOOL I.D.
         GETMAIN R,LV=(0)          GET AREA FOR THE TABLE
         ST    R1,TABLESD          SAVE POINTER TO THE TABLE
         SPACE 1
*        ZERO  THE TABLE  -
         LH    R3,GETLEN+2         GET LENGTH OF THE TABLE
         CLRL  (R1),(R3)           CLEAR IT                     GP09246
         SPACE 1
*        OPEN THE DCBS FOR THE DIRECTORY AND THE MEMBERS  -
FILELOOP OPEN  MF=(E,OCLIST)       ISSUE THE OPEN
         TM    DIRDCB+DCBOFLGS-IHADCB,DCBOFOPN  DIRECTORY OPEN? GP09246
         BZ    ERROR5              NO - BRANCH
         TM    MEMDCB+DCBOFLGS-IHADCB,DCBOFOPN  MEMBERS OPEN?   GP09246
         BZ    ERROR5              NO - BRANCH
         SPACE 1
*        INITIALISE THE TABLE  -
         L     R2,TABLESD          POINT TO THE TABLE
         LH    R3,GETLEN+2         GET LENGTH OF THE TABLE
         AR    R3,R2               POINT TO THE END OF THE TABLE
         ST    R3,12(,R2)          SAVE POINTER TO THE END OF THE TABLE
         LA    R3,16(,R2)          POINTER TO FIRST SLOT IN THE TABLE
         ST    R3,0(,R2)           SAVE POINTER TO FIRST SLOT IN TABLE
         ST    R3,8(,R2)           SAVE POINTER TO NEXT AVAIL. SLOT
         MVI   7(R2),10            LENGTH OF EACH TABLE ENTRY
         SPACE 2
***********************************************************************
*                                                                     *
*    COLLECT DATA                                                     *
*                                                                     *
***********************************************************************
         B     GET                 GO GET THE FIRST MEMBER
         SPACE 2
*
*        GET NEXT MEMBER IN THE PDS  -
*
*        FIRST LOOK FOR A MEMBER IN THE CURRENT DIRECTORY BLOCK -
         USING PDS2,R3            DECLARE THE DIRECTORY ENTRY   GP09246
LOOPDS1  L     R3,DIRPOINT        POINT TO THE NEXT MEMBER
         IC    R2,PDS2INDC        GET LENGTH OF USER DATA       GP09246
         N     R2,=A(PDS2LUSR)    LENGTH IS 5 BITS              GP09246
         SLL   R2,1                X 2 BECAUSE LENGTH IN HALF-WORDS
         LA    R3,PDS2USRD(R2)    ADD FIXED LENGTH              GP09246
         SPACE 1
*        FIND  THE END OF THE DIRECTORY BLOCK  -
         LA    R4,DIRBLOCK         POINT TO THE CURRENT DIRECTORY BLK
         LH    R5,0(,R4)           GET LENGTH USED
         AR    R5,R4               POINT TO END OF THE BLOCK
         CR    R5,R3               HAS THIS BLOCK BEEN EXHAUSTED ?
         BH    GOTNEXT             NO - BRANCH
         SPACE 1
*        READ THE NEXT DIRECTORY BLOCK  -
GET      GET   DIRDCB,DIRBLOCK     READ THE NEXT DIRECTORY BLOCK
         LA    R3,DIRBLOCK+2       POINT TO THE FIRST MEMBER IN BLOCK
GOTNEXT  ST    R3,DIRPOINT         SAVE POINTER TO NEXT MEMBER
         SPACE 1
         XC    CMREC,CMREC         # OF RECORDS READ FOR THIS MEMBER
         MVI   SWITCH,0            INITIALISE SWITCH
         SPACE 1
*        TEST TO SEE IF WE HAVE GOT TO THE END OF THE PDS  -
         CLC   PDS2NAME,LASTMEM    LOOK FOR 8X'FF'              GP09246
         BE    ENDPDS              GOT TO END - BRANCH
         MVC   TTRZ(3),PDS2TTRP    SAVE TTR OF MEMBER           GP09246
         SPACE 1
*        COUNT # OF MEMBERS READ  -
         L     R1,CPMEM            GET # OF MEMBERS READ
         AL    R1,=F'1'            INCREMENT BY 1
         ST    R1,CPMEM            AND SAVE IT
         SPACE 2
*        BUILD FIRST PART OF THE SORT KEY  -
         LA    R10,RECREC          POINT TO AREA TO BUILD SORT RECORD
         USING CELLSECT,R10
         XC    CELLSECT(CELLLEN),CELLSECT   CLEAR               GP09246
         ZAP   SKDATE,=P'0'        DATE OF LAST LINK OR ZAP
         MVC   SKMEM,PDS2NAME      MEMBER NAME                  GP09246
         MVC   SKFILE,SOURCE       SOURCE FILE                  GP09246
         MVC   SKTTRC,PDS2TTRP     TTRC                         GP09246
         ZAP   SKCST,=P'0'         # OF CSECTS
         ZAP   SKZAP,=P'0'         # OF ZAPS
         ZAP   SKDTL,=P'0'         DATE OF LINK-EDIT
         ZAP   SKDTZ,=P'0'         DATE OF MOST RECENT ZAP
         MVI   SKTYPE,C' '         CSECT TYPES FIELD
         MVC   SKTYPE+1(L'SKTYPE-1),SKTYPE
         SPACE 1
*---------------------------------------------------------------------*
*   SIMPLE TEST FOR LOAD-MODULE VS. EVERYTHING ELSE.                  *
*   FOR LOAD MODULE, READ THE CONTROL RECORDS AND EXTRACT DATA.       *
*   FOR OTHERS, CHECK FOR ISPF ENTRY; IF SO, SAVE DATE AND SIZE.      *
*---------------------------------------------------------------------*
         TM    PDS2INDC,PDS2NTTR  TTR COUNT IN UDATA FIELD      GP09246
         BNZ   HAVENOTE           LOAD-MODULE                   GP09246
         IC    R2,PDS2INDC        GET LENGTH AND FLAGS          GP09246
         N     R2,=A(PDS2LUSR)    ISOLATE LENGTH                GP09246
         CH    R2,=AL2(SPFUDLEN)  ISPF ENTRY ?                  GP09246
         BNE   EODAD              NO; RECORD WHAT WE HAVE       GP09246
         TM    SPFCRTDT+L'SPFCRTDT-1,X'0C'     PACKED DATE ?    GP09246
         BNO   EODAD                NO                          GP09246
         TM    SPFMODDT+L'SPFMODDT-1,X'0C'     PACKED ?         GP09246
         BNO   EODAD                NO                          GP09246
         MVC   SKATTR,SPFVERL     COPY VERSION AND MODIFICATION GP09246
         SR    R0,R0                                            GP09246
         ICM   R0,3,SPFCURLN      GET LINE COUNT                GP09246
         STCM  R0,7,SKSIZE        AS SIZE                       GP09246
         ZAP   SKDTL,SPFMODDT     SET MOD DATE                  GP09246
         CP    SKDTL,=P'64000'     WINDOW                       GP09246
         BH    *+4+6               LEAVE 1900                   GP09246
         AP    SKDTL,=P'100000'    SET 2000                     GP09246
         AP    SKDTL,=P'1900000'   SET 19 OR 20                 GP09246
         B     EODAD              RECORD IT                     GP09246
         SPACE 1
*---------------------------------------------------------------------*
*   LOAD MODULE PROCESSING                                            *
*---------------------------------------------------------------------*
HAVENOTE POINT MEMDCB,TTRZ         POINT TO THIS MEMBER
         MVC   SKATTR,PDS2ATR      LINK-EDIT ATTRIBUTES         GP09246
         MVC   SKSIZE,PDS2STOR     SIZE OF MODULE               GP09246
         MVC   SKEP,PDS2EPA        ENTRY POINT                  GP09246
         SPACE 1
*        RE-INITIALISE CESD TABLE  -
         L     R2,TABLESD          POINT TO CESD TABLE
         MVC   8(4,R2),0(R2)       POINTER TO NEXT AVAIL. SLOT
         SPACE 1
*
*        TEST FOR ALIAS  -
*
*LATER?  TM    PDS2INDC,PDS2ALIS   IS THIS ENTRY AN ALIAS  ?    GP09246
*        PROCESS ALIAS THE SAME AS OTHER MEMBERS  -
         SPACE 2
*        DETERMINE IF THE MEMBER WAS CREATED BY THE LINKAGE-EDITOR  -
         IC    R2,PDS2INDC        GET LENGTH OF USER DATA       GP09246
         N     R2,=A(PDS2LUSR)    MASK LENGTH BITS ONLY         GP09246
         C     R2,=F'11'           MUST BE AT LEAST 11 HALF-WORDS
         BL    LOOPDS1             IT WAS NOT LINKED - BRANCH
         EJECT
***********************************************************************
*                                                                     *
*        READ THE MEMBER SEQUENTIALLY, EXTRACTING INFORMATION         *
*        AND WRITING IT TO THE OUTPUT FILE.                           *
*                                                                     *
***********************************************************************
         SPACE 1
GETLOOP  L     R6,DECB+12          POINT TO INPUT AREA
         READ  DECB,SF,MF=E        READ THE NEXT RECORD
         CHECK DECB
         SPACE 1
*        INCREMENT COUNT OF # OF RECORDS READ BY 1  -
         L     R1,CMREC            COUNTS # OF INPUT RECORDS
         AL    R1,=F'1'            INCREMENT
         ST    R1,CMREC            AND SAVE
         SPACE 1
         L     R1,CPREC            COUNTS # OF READS FOR THIS PDS
         AL    R1,=F'1'            BUMP BY 1
         ST    R1,CPREC            AND SAVE
         SPACE 3
*
*        LOOK AT RECORD TYPE, PROCESS ACCORDINGLY  -
*
         TM    0(R6),1             DOES THIS RECORD PRECEDE A TEXT REC.
         BO    EODAD               YES - BRANCH ( WE ARE DONE )
         SPACE 1
         CLI   0(R6),X'20'         IS IT A CESD RECORD  ?
         BE    CESD                YES - BRANCH
         CLI   0(R6),X'80'         IS IT AN IDR DATA RECORD ?
         BE    IDR                 YES - BRANCH
         B     GETLOOP             GO GET ANOTHER RECORD
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE CESD TYPE INPUT RECORD                           *
*                                                                     *
***********************************************************************
         SPACE 1
CESD     LA    R3,8(,R6)           POINT TO 1ST ESD ENTRY
         LH    R4,6(,R6)           GET LENGTH OF ESD DATA
         AR    R4,R3               POINT TO END OF RECORD
         LH    R5,4(,R6)           GET # OF FIRST ESD ENTRY IN THIS REC
         SPACE 1
LOOPESD  CR    R4,R3               HAVE WE GOT TO THE END YET ?
         BNH   GETLOOP             YES - GO GET ANOTHER INPUT RECORD
         SPACE 1
         TM    8(R3),X'0F'         LOOK FOR TYPE SD ENTRIES
         BZ    GOTSD               GOT AN SD ENTRY - BRANCH
         SPACE 1
LOOPESD2 LA    R3,16(,R3)          BUMP TO NEXT ESD ENTRY
         AL    R5,=F'1'            KEEP COUNT OF ESD ENTRY #
         B     LOOPESD             AND LOOK AT IT
         SPACE 2
*
*        WE HAVE AD SD ENTRY, MUST ADD IT TO THE TABLE -
*
GOTSD    L     R2,TABLESD          POINT TO ESD TABLE
         L     R8,8(,R2)           POINT TO NEXT SLOT TO ADD AN ENTRY
         C     R8,12(,R2)          IS THERE ROOM IN THE TABLE  ?
         BNL   ERROR6              NO - BRANCH
         MVC   0(8,R8),0(R3)       MOVE SD NAME INTO THE TABLE
         STH   R5,8(,R8)           PUT ESD # INTO TABLE
         AL    R8,4(,R2)           BUMP BY LENGTH OF A TABLE ENTRY
         ST    R8,8(,R2)           SAVE POINTER TO NEXT AVAIL. SLOT
         SPACE 2
*
*        ACCUMULATE DATA FOR THE SORT RECORD  -
*
         AP    SKCST,=P'1'         # OF CSECTS IN MODULE
         SPACE 1
         CLC   =C'DFS',0(R3)       IS THIS AN IMS MODULE  ?
         BNE   NOTIMS              NO - BRANCH
         MVI   SKTYPE+4,C'I'       SET IMS TYPE
         B     NOTCOBOL
NOTIMS   CLC   =C'ILB',0(R3)       IS THIS A COBOL MODULE ?
         BNE   NOTCOBOL            NO - BRANCH
         MVI   SKTYPE+3,C'C'       SET COBOL TYPE
NOTCOBOL B     LOOPESD2            GO LOOK AT NEXT CSECT
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE IDR DATA TYPE RECORD.                            *
*                                                                     *
***********************************************************************
         SPACE 1
*
*        FIRST TEST FOR TYPE OF IDR RECORD  -
*
IDR      TM    2(R6),1             IS IT AMASPZAP  ?
         BO    IDRZAP              YES - BRANCH
         TM    2(R6),2             IS IT THE LINKAGE EDITOR  ?
         BO    IDRLINK             YES - BRANCH
*        INSERT OTHER TESTS IN HERE  -
         B     GETLOOP             WE DO NOT WANT THIS IDR RECORD
         SPACE 2
*
*        AMASPZAP  - SUPERZAP IDR RECORD  -
*
IDRZAP   CLI   SOURCE,C'1'        PRIMARY INPUT FILE ?          GP09246
         BNE   GETLOOP            NO; ZAP DATE NO MEANINGFUL    GP09246
         LA    R5,4(,R6)           POINT TO FIRST ZAP DATA
         IC    R8,3(,R6)           GET # OF ENTRIES
         N     R8,MASK             GET LAST 6 BITS ONLY
         LTR   R8,R8               ARE THERE ANY ENTRIES  ?
         BNP   GETLOOP             NO - BRANCH
         SPACE 1
ZAPLOOP2 L     R4,TABLESD          POINT TO CESD TABLE
         LM    R1,R3,0(R4)         GET POINTERS TO SLOTS
         SPACE 1
ZAPLOOP  CLC   8(2,R1),0(R5)       TRY TO MATCH ESD # WITH A TABLE ENTR
         BE    PUTZAP              GOT ONE - BRANCH
         BXLE  R1,R2,ZAPLOOP       SCAN THROUGH THE TABLE
         B     ERROR7              TABLE ENTRY NOT FOUND
         SPACE 1
*
*        ACCUMULATE COUNT OF ZAP RECORDS, AND HWM ZAP DATE  -
*
PUTZAP   AP    SKZAP,=P'1'         COUNT # OF ZAPS
         CP    SKDTZ,2(3,R5)       IS THIS A LATER ZAP THAN PREVIOUS ?
         BNL   NOMOREZ             NO - BRANCH
         ZAP   SKDTZ,2(3,R5)       ACCUMULATE HWM OF ZAP DATE
*
*        INDEX THROUGH THE ZAP IDR RECORD  -
*
NOMOREZ  LA    R5,13(,R5)          BUMP TO NEXT ZAP ENTRY
         BCT   R8,ZAPLOOP2         AND WORK ON IT
         B     GETLOOP             GET NEXT INPUT RECORD
         SPACE 3
*
*        GOT LINK-EDIT RECORD,
*        CAN NOW ACCUMULATE THE LINK-EDIT DATE  -
*
IDRLINK  TM    SWITCH,X'80'        HAVE WE ALREADY GOT THE LINK-DATE ?
         BO    ERROR8              YES - BRANCH
         OI    SWITCH,X'80'        SET FLAG 'GOT LINK-DATE'
         ZAP   SKDTL,15(3,R6)      DATE LINKED
         CP    SKDTL,=P'64000'     WINDOW                       GP09246
         BH    *+4+6               LEAVE 1900                   GP09246
         AP    SKDTL,=P'100000'    SET 2000                     GP09246
         AP    SKDTL,=P'1900000'   SET 19 OR 20                 GP09246
         B     GETLOOP             GO GET ANOTHER RECORD
         SPACE 1
*        COUNT # OF RECORDS SORTED  -
EODAD    L     R1,CSREC            COUNT # OF RECORDS
         AL    R1,=F'1'            - PASSED TO THE SORT
         ST    R1,CSREC            -
         SPACE 1
*        SET SORT-KEY DATE TO THE HIGHER OF  -
*              - DATE LINKED
*              - DATE OF LAST ZAP
         ZAP   SKDATE,SKDTL        LINK DATE
         CP    SKDTZ,=P'0'         ANY ZAP ?                    GP09246
         BE    NOZAPS                NO; SKIP                   GP09246
         CP    SKDTZ,=P'64000'     WINDOW                       GP09246
         BH    *+4+6               LEAVE 1900                   GP09246
         AP    SKDTZ,=P'100000'    SET 2000                     GP09246
         AP    SKDTZ,=P'1900000'   SET 19 OR 20                 GP09246
NOZAPS   CP    SKDATE,SKDTZ        IS LATEST ZAP LATER  ?
         BNL   EODAD1              NO - BRANCH
         ZAP   SKDATE,SKDTZ        HWM ZAP DATE
EODAD1   OI    SKDATE+3,X'0F'      ENSURE A GOOD SORT KEY       GP09246
         SUBCALL SUBTREE,('ADD',ROOTBALL),VL,MF=(E,CALLPARM)    GP09246
         B     LOOPDS1             GET NEXT MEMBER              GP09246
         SPACE 2
*        END OF THE PDS - MUST TELL THE SORT NO MORE RECORDS  -
ENDPDS   CLC   CSREC,=F'0'         DO WE HAVE ANY RECORDS TO SORT
         BE    ERROR9              NO - BRANCH
         SPACE 1
*        CLOSE DCBS FOR THE PDS  -
         CLOSE MF=(E,OCLIST)       ISSUE CLOSE                  GP09246
         SPACE 1
*        FREE  THE BUFFERS USED BY THE DIRECTORY DCB  -
         FREEPOOL DIRDCB
         SPACE 1
         CLI   SOURCE,C'2'        SECOND TIME THROUGH?
         BE    PHASE1ND
         MVC   DCBDDNAM-IHADCB+MEMDCB,=CL8'SYSUT2'  FILE 2
         MVC   DCBDDNAM-IHADCB+DIRDCB,=CL8'SYSUT2'  FILE 2
         MVI   SOURCE,C'2'        SHOW SOURCE FILE
         B     FILELOOP           DO SECOND FILE
         SPACE 1
*        FREE THE BUFFER USED TO READ THE MEMBERS  -
PHASE1ND L     R0,BUFFER           GET LENGTH AND S.P.
         L     R1,DECB+12          POINT TO BUFFER
         FREEMAIN R,LV=(0),A=(1)   ISSUE FREEMAIN
         SPACE 1
*        FREE THE CESD TABLE  -
         L     R0,GETLEN           GET LENGTH & SP.
         L     R1,TABLESD          POINT TO TABLE
         FREEMAIN R,LV=(0),A=(1)   ISSUE FREEMAIN
         SPACE 1
         B     PHASE2                                           GP09246
         SPACE 2
***********************************************************************
*                                                                     *
*   VALIDATE PRESENCE AND TYPE OF INPUT FILES                         *
*                                                                     *
***********************************************************************
         SPACE 1
*        READ THE JFCB TO PREPARE FOR AN OBTAIN  -
INITFILE MVC   DCBDDNAM-IHADCB+MEMDCB,0(R1) SET DESIRED DD NAME GP09246
         RDJFCB MEMDCB             READ THE JFCB FOR THE PDS
         CLI   JFCBDSNM,C' '       DID IT DO THAT O.K.  ?       GP09246
         BNH   ERROR2              NO - BRANCH                  GP09246
         MVC   DS1DSNAM,JFCBDSNM   MAKE DUMP PRETTIER           GP09246
         SPACE 1
*        ISSUE  AN OBTAIN, TO SEE IF THE PDS EXISTS -
         OBTAIN CAMLIST            ISSUE OBTAIN
         LTR   R15,R15             DID THE OBTAIN OBTAIN ANYTHING ?
         BNZ   ERROR3              NO - BRANCH
         SPACE 1
*        TEST TO ENSURE THAT THIS DATASET IS A PDS  -
         CLI   DS1DSORG+1,0        TEST FOR FUNNY DSORG         GP09246
         BNE   ERROR4              NOT A PDS - BRANCH           GP09246
         TM    DS1DSORG,DS1DSGPO   TEST FOR 'DSORG=PO' IN FORMAT 1
         BZ    ERROR4              NOT A PDS - BRANCH
         BR    R9
         EJECT
***********************************************************************
*                                                                     *
*        ERROR CONDITIONS                                             *
*                                                                     *
***********************************************************************
         SPACE 1
*        ERROR IN RDJFCB  -
ERROR2   LA    R2,MEMDCB           POINT TO DCB
         PRTDATA '*** RDJFCB failed for DD',(MEMDCB+DCBDDNAM-IHADCB,8,D*
               EB,PAD),'***'                                    GP09246
         SERVTERM ,                                             GP09246
         ABEND 2,DUMP
         SPACE 1
*        ERROR IN OBTAIN  -
ERROR3   LA    R2,CAMLIST          POINT TO CAMLST
         PRTDATA '*** Unable to read DSCB for',(JFCBDSNM,DEB,PAD),(JFCB*
               VOLS,6,DEB,PAD),'***'                            GP09246
         SERVTERM ,                                             GP09246
         ABEND 3,DUMP
         SPACE 1
*        DATASET TO BE PROCESSED IS NOT A PDS  -
ERROR4   LA    R2,AREA             POINT TO FORMAT 1 LABEL
         PRTDATA '*** Data set organization for',(JFCBDSNM,DEB,PAD),(JF*
               CBVOLS,6,DEB,PAD),'is not Partitioned ***'       GP09246
         SERVTERM ,                                             GP09246
         ABEND 4,DUMP
         SPACE 1
*        CANNOT OPEN PDS DCBS  -
ERROR5   LA    R2,DIRDCB           POINT TO DIRECTORY DCB
         LA    R3,MEMDCB           POINT TO MEMBER DCB
         PRTDATA '*** Unable to OPEN DCBs for',(JFCBDSNM,DEB,PAD),(JFCB*
               VOLS,6,DEB,PAD),'***'                            GP09246
         SERVTERM ,                                             GP09246
         ABEND 5,DUMP
         SPACE 1
*
*        CESD TABLE HAS OVERFLOWED -
*              R2 POINTS TO THE TABLE -
ERROR6   PRTL '*** CESD table overflow - contact Systems ***',CC=NO
         SERVTERM ,                                             GP09246
         ABEND 6,DUMP
         SPACE 1
*        WE HAVE A ZAP RECORD, AND NO SD ENTRY WITH A CORRESPONDING
*        ESD # IN A PREVIOUS CESD RECORD.
*
*              R4 = CESD TABLE POINTER
*              R5 = POINTER TO ZAP RECORD WE ARE WORKING ON
*              R6 = POINTER TO IDR DATA RECORD
ERROR7   ABEND 7,DUMP
         SPACE 1
*        MORE THAN 1 LINK-EDIT IDR RECORD  -
*              R6 POINTS TO THE SECOND ONE FOUND
ERROR8   ABEND 8,DUMP
         SPACE 1
*        NO RECORDS FOUND TO PASS TO THE SORT  -
*         THE PDS CONTAINS NO MEMBERS CREATED BY THE LINKAGE-EDITOR
ERROR9   PRTL  '*** No members found to process ***',CC=NO      GP09246
         SERVTERM ,                                             GP09246
         ABEND 9,DUMP
         EJECT
***********************************************************************
*                                                                     *
*    READ SORTED DATA AND PRINT THEM                                  *
*                                                                     *
***********************************************************************
         SPACE 2
*        GET RECORD LEAVING THE SORT, AND TEST FOR EOF  -
PHASE2   XC    LEFTSIDE,LEFTSIDE       CLEAR LEFT ENTRY         GP09246
         XC    RITESIDE,RITESIDE                                GP09246
         SUBCALL SUBTREE,('LIST',ROOTBALL),VL,MF=(E,CALLPARM)   GP09246
         B     GOTREC
GETREC   CLI   LEFTMEM,0          LEFT MEM DATA ?               GP09246
         BNE   GETRECC            NO                            GP09246
         CLI   RITEMEM,0          RIGHT MEM DATA ?              GP09246
         BE    GETRECG            NO                            GP09246
         BAL   R9,UT2EXTRA        YES; UNMATCHED                GP09246
         B     GETRECG            GET ANOTHER                   GP09246
GETRECC  CLI   RITEMEM,0          RIGHT MEM DATA ?              GP09246
         BE    GETRECG            NO                            GP09246
         CLC   LEFTMEM,RITEMEM    CHECK                         GP09246
         BH    GETR2X             EXTRA ON 2                    GP09246
         BL    GETR1X             EXTRA ON 1                    GP09246
         CLC   LEFTSIZE,RITESIZE  SAME SIZE ?                   GP09246
         BNE   GETRCOP                                          GP09246
         CLC   LEFTDATE,RITEDATE  NEED UPDATE ?                 GP09246
         BNH   GETR12             NO                            GP09246
GETRCOP  BAL   R9,MAKECOPY        YES; GENERATE COPY INFO       GP09246
GETR12   XC    LEFTSIDE,LEFTSIDE                                GP09246
         XC    RITESIDE,RITESIDE                                GP09246
         B     GETRECG                                          GP09246
GETR1X   BAL   R9,UT1EXTRA             EXTRA ON 1 AND COPY      GP09246
         B     GETRECG                                          GP09246
GETR2X   BAL   R9,UT2EXTRA             EXTRA ON 2               GP09246
GETRECG  SUBCALL SUBTREE,('NEXT',ROOTBALL),VL,MF=(E,CALLPARM)   GP09246
GOTREC   BXH   R15,R15,FINALE      QUIT IF LIST EXHAUSTED       GP09246
         L     R10,REC@REC         GET NEXT RECORD ADDRESS      GP09246
         USING CELLSECT,R10       FORMAT OF SORTED RECORD
         CLI   SKFILE,C'1'        INPUT FROM 1 ?                GP09246
         BE    CHECK1                                           GP09246
         CLI   RITEMEM,0          PREVIOUS 2                    GP09246
         BE    CHECK2             NO                            GP09246
         BAL   R9,UT2EXTRA                                      GP09246
CHECK2   MVC   RITEMEM,SKMEM                                    GP09246
         MVC   RITEDATE,SKDATE                                  GP09246
         MVC   RITESIZE,SKSIZE                                  GP09246
         B     BUILD                                            GP09246
CHECK1   CLI   LEFTMEM,0          PREVIOUS 1                    GP09246
         BE    CHECK1N            NO                            GP09246
         BAL   R9,UT1EXTRA                                      GP09246
CHECK1N  MVC   LEFTMEM,SKMEM                                    GP09246
         MVC   LEFTDATE,SKDATE                                  GP09246
         MVC   LEFTSIZE,SKSIZE                                  GP09246
*
*        BUILD A PRINT LINE  -
*
BUILD    LA    R3,LINE             R3 WILL POINT TO DETAIL PRINT LINE
         MVC   LINE,LINE-1                                      GP09246
         USING DETLINE,R3          -
         SPACE 1
*        LATEST ZAP DATE  -
         CP    SKZAP,=P'0'         ARE THERE ANY ZAPS ?
         BE    PRINDL              NO - BRANCH
         MVC   DETDTZ-1(9),PAT04                                GP09246
         ED    DETDTZ-1(9),SKDTZ                                GP09246
         SPACE 1
*        DATE LINKED  -
PRINDL   MVC   DETDTL-1(9),PAT04                                GP09246
         ED    DETDTL-1(9),SKDTL                                GP09246
         SPACE 1
*        CSECT TYPES  -
         MVC   DETTYPE,SKTYPE
         SPACE 1
*        NUMBER OF ZAPS  -
         MVC   DETZAP,PAT02
         ED    DETZAP,SKZAP
         SPACE 1
*        NUMBER OF CSECTS  -
         MVC   DETCST,PAT02
         ED    DETCST,SKCST
         SPACE 1
*        MODULE ENTRY POINT  -
         UNPK  DWA(7),SKEP(4)
         MVC   DETEP,DWA
         TR    DETEP,TABLE2
         SPACE 1
*        MODULE SIZE  -
         UNPK  DWA(7),SKSIZE(4)
         MVC   DETSIZE,DWA
         TR    DETSIZE,TABLE2
         SPACE 1
*        MODULE ATTRIBUTES  -
         UNPK  DWA(5),SKATTR(3)
         MVC   DETATTR,DWA
         TR    DETATTR,TABLE2
         SPACE 1
*        TTRC  -
         UNPK  DWA(9),SKTTRC(5)
         MVC   DETTTRC,DWA
         TR    DETTTRC,TABLE2
         SPACE 1
*        MEMBER NAME  -
         MVC   DETMEM,SKMEM
         SPACE 1
         MVC   DETFILE(8),=CL8'SYSUT1'                          GP09246
         MVC   DETFILE+5(1),SKFILE IDENTIFY SOURCE FILE         GP09246
         PRTF  LINE,CC=NO          PRINT IT                     GP09246
         B     GETREC              GET NEXT RECORD              GP09246
         SPACE 2
FINALE   CLI   LEFTMEM,0          LEFT MEM LEFT OVER ?          GP09246
         BE    FINAL2             NO                            GP09246
         BAL   R9,UT1EXTRA        YES; UNMATCHED; COPY          GP09246
FINAL2   CLI   RITEMEM,0          RIGHT MEM DATA ?              GP09246
         BE    PGMEXIT            NO                            GP09246
         BAL   R9,UT2EXTRA        YES; UNMATCHED                GP09246
         SPACE 2
*        RETURN TO O.S.  -
PGMEXIT  CLOSE MF=(E,OCLIST)      CLOSE DCBS                    GP09246
         SUBCALL SUBTREE,('END',ROOTBALL),VL,MF=(E,CALLPARM)    GP09246
         PRTDATA '=== Compare selected',(CSCOP,I,DE,PAD),'records for I*
               EBCOPY'                                          GP09246
         TM    PROFLAGS,FGPUN1    ANY SELECTED ?                GP09246
         BNZ   GOSORT             YES                           GP09246
         MVICC 12                 SET ERROR
         B     PGMFINAL                                         GP09246
         SPACE 1
GOSORT   PRTCLOSE DEV=3      CLOSE SYSIN FOR IEBCOPY READ       GP09246
         DEVTYPE =CL8'SYSUT3 ',DB                               GP09246
         BXLE  R15,R15,HAVEUT3    OK? SHOULD BE TEMP            GP09246
         MVI   ALLOPARM,C' '    CLEAR ALL                       GP09246
         MVC   ALLOPARM+1(ALLOPLEN-1),ALLOPARM                  GP09246
         MVC   PRMDDNAM,=CL8'SYSUT3 '  TEMPORARY DATA SET       GP09246
         MVC   PRMSPC(3),=C'CYL'                                GP09246
         MVI   PRMPRIME+L'PRMPRIME-1,C'9'   NINE CYLINDERS?     GP09246
         LA    R2,MSGAREA                                       GP09246
         SUBCALL SUBALLOC,((R2),ALLOPARM),MF=(E,CALLPARM)       GP09246
         SPACE 1
HAVEUT3  DEVTYPE =CL8'SYSUT4 ',DB                               GP09246
         BXLE  R15,R15,LINKUTIL   OK? SHOULD BE TEMP            GP09246
         MVI   ALLOPARM,C' '    CLEAR ALL                       GP09246
         MVC   ALLOPARM+1(ALLOPLEN-1),ALLOPARM                  GP09246
         MVC   PRMDDNAM,=CL8'SYSUT4 '  TEMPORARY DATA SET       GP09246
         MVC   PRMSPC(3),=C'CYL'                                GP09246
         MVI   PRMPRIME+L'PRMPRIME-1,C'9'   NINE CYLINDERS?     GP09246
         LA    R2,MSGAREA                                       GP09246
         SUBCALL SUBALLOC,((R2),ALLOPARM),MF=(E,CALLPARM)       GP09246
LINKUTIL TESTAUTH FCTN=1                                        GP09246
         BXLE  R15,R15,GOCOPY     OK                            GP09246
         PRTL  '*** IEBCOPY invocation requires authorization ***'
         SERVTERM ,                                             GP09246
         ABEND 47,DUMP                                          GP09246
GOCOPY   LA    R1,NULLPARM   NO PARM                            GP09246
         LINK  EP=IEBCOPY    GO TO COPY                         GP09246
         ST    R15,RETCODE   SAVE RETURN CODE                   GP09246
         PRTDATA '*** IEBCOPY return code :',(RETCODE,I,DEB,PAD),'***'
PGMFINAL SERVTERM ,                CLOSE SYSPRINT               GP09246
         PGMEXIT COPYRET=(RETCODE,4)                            GP09246
         SPACE 2
UT2EXTRA PRTDATA '   ',(RITEMEM,PAD),'not found in SYSUT1'      GP09246
         XC    RITESIDE,RITESIDE  CLEAR                         GP09246
         BR    R9                                               GP09246
UT1EXTRA PRTDATA '   ',(LEFTMEM,PAD),'not found in SYSUT2'      GP09246
         B     MAKEPUN                                          GP09246
MAKECOPY PRTDATA '   ',(LEFTMEM,PAD),'differs - set for COPY'   GP09246
MAKEPUN  TM    PROFLAGS,FGPUN1    FIRST TIME?                   GP09246
         BNZ   MAKECOP2           NO                            GP09246
         OI    PROFLAGS,FGPUN1    SHOW GOT HERE                 GP09246
         PRTL  ' COPY I=((SYSUT1,R)),O=SYSUT2 ',CC=NO,DEV=3     GP09246
MAKECOP2 PRTDATA '   SELECT M=(',(LEFTMEM,DEB),')',DEV=3        GP09246
         INC   CSCOP         UPDATE COPY COUNT                  GP09246
         XC    LEFTSIDE,LEFTSIDE  CLEAR                         GP09246
         XC    RITESIDE,RITESIDE  CLEAR                         GP09246
         BR    R9                                               GP09246
NULLPARM DC    0A(0),X'80',AL3(*+3),AL2(0)
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE RECORD SENT TO THE SORT                        *
*                                                                     *
***********************************************************************
CELLSECT DSECT
SKMEM    DS    CL8 -               MEMBER NAME
SKFILE   DS    C   -               SOURCE FILE                  GP09246
SKDATE   DS    PL4 -               DATE OF LAST LINK OR ZAP     GP09246
CELLKEY  EQU   CELLSECT,*-CELLSECT,C'C'                         GP09246
SKTTRC   DS    XL4 -               TTRC
SKATTR   DS    XL2 -               LINK-EDIT ATTRIBUTES
SKSIZE   DS    XL3 -               SIZE OF MODULE
SKEP     DS    XL3 -               ENTRY POINT OF MODULE
SKCST    DS    PL3 -               COUNT OF # OF CSECTS
SKZAP    DS    PL3 -               COUNT OF # OF ZAPS
SKTYPE   DS    CL5 -               TYPE OF CSECT(S)
SKDTL    DS    PL4 -               DATE OF LINK-EDIT            GP09246
SKDTZ    DS    PL4 -               DATE OF LATEST ZAP           GP09246
SKEND    EQU   *
CELLLEN  EQU   *-CELLSECT
PDSFRESH CSECT ,
         EJECT
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*        C O N S T A N T S                                            *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         SPACE 1
MASK     DC    F'63'               MASK FOR 6 BITS   2 - 7
SWITCH   DC    X'00'               SWITCHES
*        X'80' = THE LINK-EDIT IDR RECORD HAS BEEN READ FOR THIS MEM.
         SPACE 1
*        FIELDS RELATING TO THE PDS  -
TTRZ     DC    F'0'                TTR OF MEMBER I AM PROCESSING
         READ  DECB,SF,MEMDCB,0,32760,MF=L       DECB           GP09246
         SPACE 1
BUFFER   DC    0F'0',X'0200'       LENGTH + SP FOR GETMAIN
BUFFLEN  DC    H'0'                -
GETLEN   DC    0F'0',X'03001000'   SP + LENGTH FOR CESD TABLE
         SPACE 1
CPMEM    DC    F'0'                # OF MEMBERS PROCESSED FROM PDS
CMREC    DC    F'0'                # OF RECORDS READ FOR THIS MEMBER
CPREC    DC    F'0'                # OF READS FOR THE PDS
CSREC    DC    F'0'                # OF RECORDS PASSED TO THE SORT
CSCOP    DC    F'0'                # OF MODULES/ALII TO BE COPIED
         SPACE 1
TABLESD  DC    F'0'                POINTER TO CESD TABLE
DIRPOINT DC    F'0'                POINTER TO CURRENT MEMBER
LASTMEM  DC    8X'FF'              NAME OF LAST MEMBER IN PDS
EXLST    DC    0F'0',X'87',AL3(JFCB)
         SPACE 1
*        TRANSLATE TABLE TO CONVERT TO PRINTABLE HEX  -
HEXTAB   DC    C'0123456789ABCDEF'
TABLE1   EQU   HEXTAB-240,256,C'C'
         SPACE 1
CAMLIST  CAMLST SEARCH,JFCBDSNM,JFCBVOLS,DS1FMTID               GP09246
         SPACE 1
JFCB     DS    0D                  AREA TO READ THE JFCB INTO   GP09246
         IEFJFCBN ,                AREA TO READ THE JFCB INTO   GP09246
AREA     DS    0D                  AREA TO CONTAIN THE FORMAT 1 LABEL
         IECSDSL1 1                                             GP09246
DIRBLOCK DC    32D'0'              CURRENT DIRECTORY BLOCK
         SPACE 1
*        D C B S  -
         PRINT NOGEN
*        MEMBER DCB - USED TO READ EACH MEMBER OF THE PDS  -
MEMDCB   DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=R,RECFM=U,EXLST=EXLST,     X
               EODAD=EODAD
         SPACE 1
*        DIRECTORY DCB - USED TO READ THE DIRECTORY OF THE PDS  -
DIRDCB   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=256,    X
               LRECL=256,BUFNO=2  100                           GP09246
         SPACE 1
OCLIST   OPEN  (DIRDCB,,MEMDCB),MF=L   OPEN/CLOSE LIST
ROOTBALL SERVTREE PFX=REC,KEYLEN=L'CELLKEY,KEYOFF=CELLKEY-CELLSECT,    *
               RECLEN=CELLLEN,RECNUM=(64*1024-48)/CELLLEN  USE 64K
BLANKS   DC    CL16' '                                          GP09246
JNAME    DC    CL8' '              JOBNAME OF THIS JOB
SNAME    DC    CL8' '              STEP    OF THIS JOB          GP09246
FIELD1   DC    F'0'                POINTER TO TIOT
         SPACE
*        DETAIL PRINT LINE  _
CNTL     DC    C' '                CHANGED TO ASA               GP09246
LINE     DC    CL132' '                                         GP09246
         SPACE 1
PAT01    DC    XL7'4021204B202020'
PAT04    DC    XL9'40202021204B202020'                          GP09246
PAT02    DC    XL6'402020202120'
PAT03    DC    XL7'402120204B2020'
         SPACE 1
DWA      DC    2D'0'               WORK SPACE
TIME     DC    F'0'
TIM      DC    X'00000F'
DATE     DC    F'0'
         SPACE 1
HEAD01   DC    C'#T W A             PDS LISTING - LINK/ZAP DATE REPORT'
HEAD02   DC    CL132'        MEMBER             LINK           ENTRY   X
                 CSECT    ZAP    CSECT       DATE     LATEST'   GP09246
HEAD03   DC    CL132'         NAME       TTRC   ATTR  LENGTH   POINT   X
                 COUNT   COUNT   TYPES      LINKED      ZAP'    GP09246
HEAD04   DC    CL132'       --------  --------  ----  ------  ------   X
                 -----   -----   -----    --------  --------'   GP09246
         SPACE 1
         LTORG
         SPACE 1
         ORG   *-240
TABLE2   EQU   *
         ORG
         DC    C'0123456789ABCDEF'
         PRINT NOGEN
SYSPRINT PRTWORK SYSTERM,TITLE=7                                GP09246
SYSPUNCH PUNWORK SYSIN            IEBCOPY SYSIN CARDS           GP09246
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE DETAIL PRINT LINE                              *
*                                                                     *
***********************************************************************
DETLINE  DSECT
         DS    CL7 -
DETMEM   DS    CL8 -               MEMBER NAME
         DS    CL2 -
DETTTRC  DS    XL8 -               TTRC
         DS    CL2 -
DETATTR  DS    XL4 -               MODULE ATTRIBUTES
         DS    CL2 -
DETSIZE  DS    CL6 -               MODULE SIZE
         DS    CL2 -
DETEP    DS    CL6 -               MODULE ENTRY POINT
         DS    CL4 -
DETCST   DS    CL6 -               NUMBER OF CSECTS
         DS    CL2 -
DETZAP   DS    CL6 -               NUMBER OF ZAPS
         DS    CL3 -
DETTYPE  DS    CL5 -               CSECT TYPES
         DS    CL4 -
DETDTL   DS    CL8 -               DATE LINKED                  GP09246
         DS    CL2 -
DETDTZ   DS    CL8 -               DATE OF LATEST ZAP           GP09246
         DS    CL2                                              GP09246
DETFILE  DS    CL8' '             SOURCE FILE                   GP09246
         SPACE 2
SAVE     DSECT ,
WORK     DC    D'0'                WORK AREA
DB       DC    D'0'                WORK AREA                    GP09246
         SERVDEFS ,
UT1DSN   DS    CL44
UT1VOL   DS    CL6
UT2DSN   DS    CL44
UT2VOL   DS    CL6
SOURCE   DS    C
PROFLAGS DS    X                                                GP09246
FGPUN1   EQU   X'80'                MEMBER SELECTED             GP09246
LEFTMEM  DS    CL8                                              GP09246
LEFTDATE DS    XL4                                              GP09246
LEFTSIZE DS    XL3                                              GP09246
LEFTSIDE EQU   LEFTMEM,*-LEFTMEM  CLEAR LEFT                    GP09246
RITEMEM  DS    CL8                                              GP09246
RITEDATE DS    XL4                                              GP09246
RITESIZE DS    XL3                                              GP09246
RITESIDE EQU   RITEMEM,*-RITEMEM  CLEAR RIGHT                   GP09246
         SPACE 1
ALLOPARM MAPSBALL PFX=PRM,DSECT=NO                              GP09246
ALLOPLEN EQU   *-ALLOPARM,,C'C'                                 GP09246
MSGAREA  DS    (16+2560)X    RETURNED MSG AREA (ESA+)           GP09246
SAVEEND  EQU   *                                                GP09246
         SPACE 2
         IHAPDS PDSBLDL=NO                                      GP09246
         MAPPDS ,            EXPAND LOCAL ISPF ENTRY MAPPING    GP09246
         SPACE 1
         PRINT NOGEN                                            GP09246
         DCBD  DEVD=DA,DSORG=PO                                 GP09246
         END   PDSFRESH
