SUBRDR   TITLE 'S U B R D R  ***  INPUT READ ROUTINE'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES    MERGE AND SHOW OPTIONS
         SPACE 1
***********************************************************************
*                                                                     *
*        COPYRIGHT 2006  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
         EJECT ,
*   INPUT SERVICE ROUTINE
*     USE WITH MACROS #RDR TO OPEN/READ/CLOSE, AND #RDRWRK
*
*        FUNCTIONS :
*
* &NM    #RDRWRK  DDNAME=ddname,WIDTH=
*     DEFINITION OF INPUT WORK AREA. ASSOCIATION BETWEEN A WORK
*     AREA AND A 'DEVICE NUMBER' (1-8) IS MADE AT OPEN TIME.
*
*   NOT REENTRANT, NOT REFRESHABLE, BUT REUSABLE
*
***********************************************************************
*  MAINTENANCE:
***********************************************************************
         SPACE 1
         PRINT NOGEN
SUBRDR   START 0
         B     SUBRDRIN-SUBRDR(,R15)
         BCON  'SUBRDR &SYSDATE '
SUBRDRIN STM   R14,R12,12(R13)
         LR    R12,R15
         USING SUBRDR,R12
         LR    R9,R13
         LA    R13,SAVEAREA
         ST    R13,8(,R9)    CHAIN
         ST    R9,4(,R13)    LINK
         STM   R0,R1,CALLR0  SAVE FUNCTION AND READER SELECT BITS
         XC    RETCODE(L'RETCODE+L'RETR0+L'RETR1),RETCODE  CLEAR RETURN
         CLI   CALLDEV,0     ANY CHOSEN ?
         BNE   *+8           YES
         MVI   CALLDEV,1     ELSE DEFAULT TO READER 1
         MVI   RDNEXT,1      SET READER MASK
         LA    R7,@RDRWORK-4
         B     RECURSE
         SPACE 1
* SELECT FIRST/NEXT READER WORK AREA CORRESPONDING TO DEV SELECT
*
RECURSE4 OICC  4             SET MINOR PROBLEM
RECURSE  SLR   R1,R1
         ICM   R1,1,RDNEXT   GET MASK BIT
         BNZ   RDRDMASK
PGMEXIT  L     R13,4(,R13)   RESTORE OLD SAVE AREA
         L     R14,12(,R13)  RESTORE RETURN ADDRESS
         LM    R15,R1,RETCODE  SET RETURN CODES
         LM    R2,R12,28(R13)  RESTORE OTHER REGISTERS
         BR    R14           RETUNR TO CALLER
         SPACE 1
EXIT12   OICC  16            SET VERY MAJOR PROBLEM
         B     PGMEXIT
         SPACE 1
RDRDMASK LA    R7,4(,R7)     POINT TO NEXT READER WORK AREA
         LA    R14,0(R1,R1)  DOUBLE IT FOR NEXT TIME
         STC   R14,RDNEXT
         EX    R1,RDRDTEST   WAS THIS READER SELECTED ?
         BZ    RECURSE       NO
         LA    R15,255       MAKE ALL
         XR    R15,R1        LEAVE UNTESTED BITS
         EX    R15,RDRDREST  TURN OFF CURRENT BIT
         ICM   R8,15,0(R7)   LOAD WORK ADDRESS FOR THIS READER
         BZ    TESTOPEN      NONE; SKIP THIS
         USING RDRWORK,R8    DECLARE IT
         LA    R10,RD#DCB
         USING IHADCB,R10    DECLARE IT
         TM    DCBOFLGS,DCBOFOPN  WAS IT OPENED?
         BNZ   RDBRANCH      YES; BRANCH BY FUNCTION
TESTOPEN CLI   CALLFUN,FUNOPEN  IS THIS AN OPEN CALL ?
         BNE   RECURSE4      NO; REALLY AN ERROR
RDBRANCH IC    R15,CALLFUN   GET THE CALLER'S FUNCTION REQUEST
         CH    R15,=Y(3)     LEGAL VALUE?
         BH    EXIT12        NO; FAIL
         SLL   R15,1         DOUBLE TO MAKE OFFSET
         LH    R15,RDBRANTB(R15)  GET OFFSET TO FUNCTION POINT
         B     SUBRDR(R15)        INVOKE THE REQUESTED FUNCTION GP96068
RDBRANTB DC    Y(SUBREAD-SUBRDR)      0 GET A RECORD
FUNREAD  EQU   (*-RDBRANTB)/2-1
         DC    Y(SUBKEEP-SUBRDR)      1 REPEAT RCD ON NEXT READ
FUNKEEP  EQU   (*-RDBRANTB)/2-1
         DC    Y(SUBOPEN-SUBRDR)      2 OPEN SINGLE RDR WORK AREA 96068
FUNOPEN  EQU   (*-RDBRANTB)/2-1
         DC    Y(SUBCLOSE-SUBRDR)     3 CLOSE ONE OR MORE DDS   GP96068
FUNCLOS  EQU   (*-RDBRANTB)/2-1
         SPACE 1
*   SUBOPEN : R3 => RDRWRK FOR *ONE* DEVICE TO BE OPENED
*
         DROP  R8,R10
SUBOPEN  MVI   RDNEXT,0      FORCE EXIT AFTER CC SETTING
         CLI   CALLDEV,0     MORE THAN ONE DEVICE REQUESTED?
         BNE   EXIT12        YES; FAIL
         L     R8,CALLR1     RESTORE USER'S #RDRWRK PARAMETER
         LA    R8,0(,R8)     CLEAN TO CALLER'S STANDARD (AM 24/31)
         LTR   R8,R8         ANY ADDRESS SUPPLIED?
         BNP   EXIT12        NO; FAIL
         LA    R14,@RDRWORK  POINT TO WORK AREA LISTS
         LA    R15,8         MAX OF EIGHT
OPNDUPCK CL    R8,0(,R14)    DUPLICATE AREA?
         BNE   OPNDUPLP      NO
         CR    R7,R14        CURRENT LOCATION?
         BNE   EXIT12        NO; FAIL
OPNDUPLP LA    R14,4(,R14)   TRY AGAIN
         BCT   R15,OPNDUPCK  FOR ALL 8
         ICM   R14,15,0(R7)  TEST OLD ADDRESS
         BZ    OPNONOPN
         CR    R14,R8        SAME ADDRESS?
         BE    OPNDUPOK      YES; COPACETIC
         TM    DCBOFLGS-IHADCB+RD#DCB-RDRWORK(R14),DCBOFOPN  OLD OPEN?
         BNZ   EXIT12        YES; DON'T CREAM AN OPEN DCB
OPNONOPN ST    R8,0(,R7)     MAKE IT OFFICIAL
         USING RDRWORK,R8    DECLARE IT
OPNDUPOK LA    R10,RD#DCB
         USING IHADCB,R10    DITTO FOR DCB
         TM    DCBOFLGS,DCBOFOPN  ALREADY OPEN?
         BNZ   RECURSE4      YES; THE USER MAY REGRET THIS
         NI    RD#FLAGS,FGNOCC  RESET ERROR/END FLAGS
         OI    RD#FLAGS,FGDGET  SET FIRST TIME DCB EXIT FLAG
         LA    R0,RDREXLST   POINT TO EXIT LIST
         STCM  R0,7,DCBEXLSA  AND FORCE OURS IN
         LA    R0,RDREODAD   POINT TO END FILE EXIT
         STCM  R0,7,DCBEODA   AND FORCE OURS IN
         MVC   BADOPMSG+5(8),DCBDDNAM  PROPAGATE NAME TO MSGS
         DEVTYPE DCBDDNAM,DEVTYPE  DO WE HAVE THE NEEDED DD CARD?
         BXH   R15,R15,BADOPEN   NO; TOO BAD
         OPEN  ((R10)),MF=(E,OPENLIST)    OPEN THE DCB
         TM    DCBOFLGS,DCBOFOPN  FINALLY OPEN?
         BZ    BADOPEN       NO; THE USER MAY REGRET THIS
         TM    RD#FLAGS,FGFERR  ERRIN IN DCB EXIT ?
         BZ    PGMEXIT       NO; GET OUT
BADOPEN  OICC  8             SET OPEN ERROR
         TM    CALLOPT,COFNOWTO  SUPPRESS MESSAGE ?
         BNZ   BADOPEN2      YES
         WTO   MF=(E,BADOPMSG)
BADOPEN2 TM    CALLOPT,COFABEND  DUMP ON ERROR ?
         BZ    PGMEXIT       NO; RETURN ERROR
         ABEND 013,DUMP      NO RETURN - FAIL
BADOPMSG WTO   ' XXXXXXXX DD MISSING OR UNUSABLE',MF=L,ROUTCDE=13
OPENLIST OPEN  (RD#DCB-RD#DCB,(INPUT,REREAD)),MF=L  PATTERN FLAGS
         SPACE 1
*  SUBCLOSE - CLOSE AND FREEPOOL
*
SUBCLOSE CLOSE ((R10)),MF=(E,OPENLIST)    CLOSE IT
         LA    R0,1
         CLM   R0,7,DCBBUFCB  GET BUFFER ADDRESS
         BNL   CLSCLS        NEVER BUFFERED
         FREEPOOL RD#DCB     ELSE FREE IT
CLSCLS   XC    0(4,R7),0(R7)  FREE WORK AREA POINTER
         B     RECURSE
         SPACE 2
***********************************************************************
**                                                                   **
**   GET NEXT RECORD                                                 **
**     RETURNS RECORD ADDRESS AND LENGTH                             **
**                                                                   **
***********************************************************************
SUBREAD  TM    DCBOFLGS-IHADCB+RD#DCB,DCBOFOPN  DCB OPEN?
         BZ    RECURSE4      NO; DON'T ABEND
         TM    RD#FLAGS,FGFEOF    PRIOR END-FILE ?
         BNZ   EXIT12        YES; ALSO ERROR
         TM    RD#FLAGS,FGKEEP   RETURN SAME RECORD AGAIN ?
         BNZ   GETKEPT       YES; SET IT
PGETCONC NI    RD#FLAGS,255-FGRGET  RESET CONCATENATION SWITCH
         GET   RD#DCB        GET A RECORD
PGETGOT  TM    RD#FLAGS,FGRGET  CONCATENATION ENCOUNTERED ?
         BNZ   PGETCONC      YES; REDO EVERYTHING
         LR    R2,R1         SAVE RECORD ADDRESS
         LH    R3,DCBLRECL-IHADCB+RD#DCB  GET LENGTH FROM DCB
         TM    DCBRECFM-IHADCB+RD#DCB,DCBRECF  RECFM=F OR U ?
         BNZ   PGETCOM       YES; LEAVE AS IS
         LA    R2,4(,R1)     SET NEW TEXT ADDRESS
         LH    R0,0(,R1)     SET NEW RECORD LENGTH
         SH    R0,=H'4'      ALLOW FOR RDW LENGTH
         BNP   PGETCOM
         LR    R3,R0         USE RDW LENGTH
PGETCOM  STM   R2,R3,RD#REC@  SAVE ADDRESS/LENGTH OF TEXT
         STM   R2,R3,RETR0   RETURN RECORD LENGTH AND ADDRESS
         NI    RD#FLAGS,255-FGKEEP
         LH    R15,RD#WIDTH  GET USER'S BUFFER SIZE
         LTR   R15,R15
         BNP   RECURSE       NONE; RETURN RECORD AS IS
         LA    R0,4(,R15)    LENGTH WITH RDW
         STH   R0,RD#RDW     BUILD RDW
         LA    R14,RD#TEXT   GET MY RECORD AREA
         STM   R14,R15,RETR0   RETURN RECORD LENGTH AND ADDRESS
         ICM   R15,8,RD#FILL  SET THE FILL BYTE
         MVCL  R14,R2        MOVE TO WORK AREA
         B     RECURSE       RETURN OK
         SPACE 1
GETKEPT  LM    R2,R3,RD#REC@  GET PRIOR ADDRESS/LENGTH OF TEXT
         STM   R2,R3,RETR0   RETURN RECORD LENGTH AND ADDRESS
         NI    RD#FLAGS,255-FGKEEP
         B     RECURSE
         SPACE 2
***********************************************************************
**                                                                   **
**  KEEP:  RETURN THE CURRENT RECORD ON NEXT READ/GET CALL           **
**                                                                   **
***********************************************************************
SUBKEEP  TM    DCBOFLGS-IHADCB+RD#DCB,DCBOFOPN  DCB OPEN?
         BZ    RECURSE4      NO; DON'T ABEND
         TM    RD#FLAGS,FGRGET+FGFEOF  FIRST OR LAST TIME ?
         BNZ   EXIT12        YES; TSK, TSK
         OI    RD#FLAGS,FGKEEP   SET TO RETURN SAME RECORD AGAIN
         B     RECURSE       SEE IF MORE
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*   END OF DATA EXIT: SET FLAGS; INVOKE USER EXIT IF REQUESTED        *
*                                                                     *
*---------------------------------------------------------------------*
RDREODAD OI    RD#FLAGS,FGFEOF  SET END-FILE ON INPUT
         OICC  4             SET LEVEL 4 ERROR
         L     R15,RD#EODAD  LOAD USER'S EODAD
EODAD24  L     R1,=X'00FFFFFF'  MAKE 24-BIT MASK
         NR    R1,R15        MASK IT
         BZ    PGMEXIT       SET RETURN CODE 4 IF NO ADDRESS
         CH    R1,=H'1'      OR IS IT DEFAULT OF 1 ?
         BNH   PGMEXIT       YES; TAKE RETURN
EODADCM  L     R2,SAVEAREA+4  GET USER'S SAVE AREA
         ST    R1,12(,R2)    REPLACE RETURN ADDRESS BY EODAD
         B     PGMEXIT       SET LEVEL 4 ERROR
         SPACE 2
***********************************************************************
**  DCB OPEN EXIT INVOKED BY RDXLIST PRIOR TO ANY PROCESSING.        **
**  USED TO SET DCBOPTZ AFTER OPEN'S JFCB TO DCB MERGE. ALSO         **
**  USED TO SET/RESET DCBOPTQ FLAG FOR CONCATENATED FILES.       *
***********************************************************************
         PUSH  USING
         DROP  ,
         USING RDRDCBEX,R15  DECLARE PASSED BASE
         USING RD#DCB,R1     DECLARE LOCAL WORK AREA
         USING IHADCB,R2     DECLARE DCB
RDRDCBEX LR    R2,R1         NEED BETTER ASSEMBLER ?
         OI    DCBOFLGS,DCBOFPPC  SUPPORT UNLIKE CONCATENATION
         NI    DCBOPTCD,255-DCBOPTZ  RESET OPTCD=Z
         NI    DCBBFALN,255-DCBBFTA  RESET SPANNED VBS
         TM    RD#FLAGS,FGDGET    FIRST TIME IN HERE ?
         BZ    REXONCE       YES
         OI    RD#FLAGS,FGRGET    NEED TO REPEAT GET
REXONCE  NI    RD#FLAGS,255-FGDGET   RESET FIRST ENTRY FLAG
         SR    R9,R9         ZERO FOR BLOCK SIZE CALCULATIONS
         SR    R8,R8         ZERO FOR BLOCK SIZE CALCULATIONS
         SR    R0,R0         ZERO FOR RECORD LENGTH
         SR    R4,R4         ZERO RDW ADJUSTMENT
         TM    DCBRECFM,DCBRECU   OTHER THAN V ?
         BNM   REXNOTV       YES
         TM    DCBRECFM,DCBRECF   IS IT V/D ?
         BZ    REXNOTV       NOT F
         LA    R4,4          SET FOR RDW ADJUSTMENT
REXNOTV  SR    R5,R5
         ICM   R5,3,DCBTIOT  GET OFFSET IN TIOT
         LTCB  R1            GET MY TCB ADDRESS
         AL    R5,TCBTIO-TCB(,R1)  GET TIOT ENTRY
         USING TIOENTRY,R5   DECLARE IT
         TM    TIOELINK,TIOESSDS  SUBSYSTEM DATA SET ?
         BNZ   REXUNIT       TREAT AS UNIT RECORD
         ICM   R3,7,TIOEFSRT GET UCB ADDRESS
         BZ    REXUNIT       DD DUMMY OR PSEUDO DEVICE
         USING UCBOB,R3      DECLARE THE UCB
         CLI   UCBTBYT3,UCB3UREC  UNIT RECORD INPUT ?
         BNE   REXNOUN       NO
REXUNIT  TM    DCBRECFM,DCBRECLA  ANY RECORD FORM ?
         BNZ   *+8           NO
         OI    DCBRECFM,DCBRECF   YES; SET FIXED
         ICM   R0,3,DCBLRECL  ANY RECORD LENGTH ?
         BNZ   REXURECL      YES; KEEP IT
         LA    R0,80         UNIT RECORD SIZE FOR READERS (?)
         AR    R0,R4         ADJUST FOR RDW
         STCM  R0,3,DCBLRECL  STASH IT BACK
REXURECL ICM   R9,3,DCBBLKSI   GET BLOCK SIZE
         BNZ   REXCOMM       JOIN COMMON CODE
         AR    R0,R4         ADD BDW ADJUST
         STCM  R0,3,DCBBLKSI    SET BLOCK SIZE
         SPACE 1
REXNOUN  TM    DCBRECFM,DCBRECLA  ANY RECORD FORM ?
         BNZ   REXNBLOK      NO
         OI    DCBRECFM,DCBRECF   YES; SET FIXED
REXNBLOK OI    DCBRECFM,DCBRECBR  FORCE BLOCKING
         ICM   R0,3,DCBLRECL  ANY RECORD LENGTH ?
         BNZ   REXNRECL      YES; KEEP IT
         LA    R0,80         DEFAULT TO CARD IMAGE
         AR    R0,R4         ADJUST FOR RDW
         STCM  R0,3,DCBLRECL  STASH IT BACK
REXNRECL ICM   R9,3,DCBBLKSI   GET BLOCK SIZE
         BNZ   REXQTAPE      TEST FOR TAPE
         LH    R9,=H'32720'  SET FOR MAX
         LTR   R4,R4         RDW/BDW ?
         BNZ   REXNBLK       YES; USE MAXIMUM
         DR    R8,R0         GET RECORDS PER BLOCK
         MR    R8,R0         GET TRUNCATED BLOCK SIZE
REXNBLK  STCM  R9,3,DCBBLKSI    SET BLOCK SIZE
         SPACE 1
REXQTAPE CLI   UCBTBYT3,UCB3TAPE  TAPE DRIVE ?
         BNE   REXCOMM
         OI    DCBOPTCD,DCBOPTZ  SET OPTCD=Z FOR TAPE
         SPACE 1
REXCOMM  TM    DCBRECFM,DCBRECV+DCBRECBR+DCBRECSB  POSS. VBS ?
         BNO   REXEXIT
         TM    DCBRECFM,DCBRECF+DCBRECD   NON-VBS?
         BNZ   REXEXIT
         OI    DCBBFALN,DCBBFTA   ASSEMBLE SPANNED RECORDS
REXEXIT  BR    R14            RETURN TO OPEN
         POP   USING
         SPACE 2
***********************************************************************
**   DCB ABEND EXIT                                                  **
***********************************************************************
         PUSH  USING
         DROP  ,
         USING EXITABND,R15
EXITABND TM    3(R1),X'04'   PERMITTED TO IGNORE THE CONDITION ?
         BNZ   EXITABNI      YES
         MVI   3(R1),0       TAKE THE ABEND
         BR    R14
EXITABNI L     R2,4(,R1)     LOAD THE DCB ADDRESS
         LA    R3,RD#DCB-RDRWORK
         SR    R2,R3         GET WORK AREA BASE
         USING RDRWORK,R2   DECLARE IT
         MVI   RD#FLAGS,FGFERR  SET MAJOR ERROR
         BR    R14           RETURN
         POP   USING         RESTORE MAPPINGS
         SPACE 1
*        DATA
*
RDRDTEST TM    CALLDEV,0
RDRDREST NI    CALLDEV,0
         SPACE 1
DEVTYPE  DS    D             RESPONSE AREA
CALLPARM DS    0D'0'         USER'S PARAMETERS
CALLR0   DS    0F      R0
CALLOPT  DS    X       0:0   OPTION FLAGS
COFNOCC  EQU   X'80'           SKIP OVER CC IN INPUT
COFABEND EQU   X'40'           ABEND USER 2540 IF NOT OPENED
COFNOWTO EQU   X'01'           SUPPRESS MESSAGE IF OPEN FAILS
CALLFLG  DS    X       0:1   FLAGS
CALLFUN  DS    X       0:2     REQUESTED FUNCTION
CALLDEV  DS    X       0:3     0 OR DEVICE MASKS
CALLR1   DS    A             LIST/RECORD ADDRESS OR VALUE
         SPACE 2
@RDRWORK DC    8A(0)         ARRAY OF OPEN #RDRWORK AREAS
SAVEAREA DC    18A(0)
RETCODE  DS    3F            RETURN CODE
RETC4    EQU   4                 MINOR ERROR
RETC8    EQU   8                 PROBLEM IN OPEN
RETC12   EQU   12                MAJOR ERROR
RETC16   EQU   16                DISASTER
RETR0    EQU   RETCODE+4,4,C'F'  RETURN RECORD LENGTH
RETR1    EQU   RETCODE+8,4,C'A'  RETURN RECORD ADDRESS
RDREXLST DC    0A(0),X'85',AL3(RDRDCBEX)  DCB EXIT
RDNEXT   DC    X'01'         NEXT TEST BIT
         SPACE 2
RDRWORK  DSECT ,             MAP OF READER WORK AREA
         #RDRWRK PFX=RD#     MAP DCB AND WORK AREA
FGFEOF   EQU   X'80'           END FILE ENCOUNTERED
FGFERR   EQU   X'40'           PROCESSING ERROR ENCOUNTERED
FGKEEP   EQU   X'20'           RETURN RECORD AGAIN
FGDGET   EQU   X'04'           UNLIKE CONCATENATION - FIRST TIME
FGRGET   EQU   X'02'           UNLIKE CONCATENATION - DO IT AGAIN
FGNOCC   EQU   X'01'           SKIP MCC/ASA CHARACTER, IF ONE
         SPACE 2
         PRINT NOGEN
         DCBD  DSORG=PS      EXPAND IHADCB
         SPACE 1
MYTIOT   DSECT ,             SOME RELEASE HAVE NO DSECT IN EXPANSION
         IEFTIOT1 ,
         SPACE 1
         IEFUCBOB ,
         SPACE 1
         IKJTCB ,
         SPACE 1
         IHAPSA ,
         SPACE 1
         YREGS ,
         END   ,
