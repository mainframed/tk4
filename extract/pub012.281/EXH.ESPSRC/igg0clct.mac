CLCT     TITLE 'IGG0CLCT - DTS ADDED CATALOG VALIDITY CHECKING'
         COPY  OPTIONS
         SPACE 1
         GBLA  &IEZBITS      FAKE OUT IEFTCT MAPPING
&IEZBITS SETA  1
         EJECT ,
*
*                       DTS VALIDITY CHECKING
*                 1. CHECKS REQUEST TYPE - BYPASS FOR PRIVILEGED CALL
*                 2. CHECKS CVOL - BYPASSES IF NOT DTS OWNED VOLUME
*                 3. ALLOWS ONLY CVOL AND SYS1. ENTRIES ON SYSRES
*                 4. TAPE ENTRIES MUST BE DTS TYPE (OSNNNN/XNNNNN)
*                 5. ALL ENTRIES ON WYL00X MUST START WITH 'WYL.'
*                    OR A PREFIX LISTED IN IGPVOLT (RESIDENT)
*                      AND ARE LIMITED TO 3 OR 4 INDEX LEVELS
*                 6. FAIL 'RECATALOG' FOR 'SYS1.' UNCONDITIONALLY
*
*        THIS MODULE IS INVOKED FROM IGG0CLC2 BY ZAPPING
*        IGG0CLC3 REFERENCES TO IGG0CLCT.
*    RESTRICTION    ALL DIRECT ACCESS STORAGE DEVICES EXCEPT 2321
*       DATA CELL ARE SUPPORTED BY CATALOG MANAGEMENT.
*
*       COMMON TO ALL MODULES OF CATALOG MANAGEMENT ARE
*       R4  BASE REGISTER FOR THE MODULE.
*       R6  BASE REGISTER FOR THE WORKAREA DSECT.
*       R8  BASE REGISTER FOR THE CAMLSTD DSECT.
*
*    ATTRIBUTES = REENTERABLE, READ ONLY, ENABLED, SUPERVISORY MODE
*       EXIT - NORMAL TO IGG0CLC3
*     ERROR EXIT TO IGG0CLC7 (ALL ERRORS FAILED WITH CODE 20 - FULL)
*
*        TO ENABLE THIS MODULE - ZAP :
*          IGG0CLC2  02B5 / F3 / E3      IGG0CLC2 => IGG0CLCT
*
******* WARNING - DO NOT ADD TPUT, NOTIFY OR WTO TO THIS CODE
*        OTHERWISE ERRORS DURING IPL CAN PREVENT MASTER SCHEDULER
*        INITIALIZATION.  WTOS IN THIS CODE ARE ZAPPED IN STORAGE
*        AFTER MODULE IS ADDED TO LPA - NEVER ON DISK.
         EJECT ,
IGG0CLCT CSECT ,                OS/MVT VERSION REDONE FOR SVS ON 79336
BIT0     EQU   128           DEFINED HERE WITH &IEZBITS ON
BIT2     EQU   32            TO PREVENT DUPLICATE ON BIT1
BIT3     EQU   16             AND BIT4 IN WORKAREA
BIT5     EQU   4             EXPANSION
BIT6     EQU   2
BIT7     EQU   1
         BALR  BASE,0        SET BASE FOR MODULE
         USING *,BASE                  ESTABL BASE FOR MODULE
         USING SVRBEXTD,R5    DECLARE IT
         USING WORKAREA,R6             ESTABL BASE FOR WORKAREA
         USING CAMLSTD,R8              ESTABL BASE FOR CAMLST
*
         TM    MODMAP1,X'3F'  UNEXPECTED RECURSION ENTRY ?
         BNZ   GOODEXIT      YES; DON'T CHECK AGAIN
         L     R1,GOODMASK   GET TYPES TO BE CHECKED
         N     R1,CAMOPTN1   MASK AGAINST USER REQUEST
         LTR   R1,R1          JUST IN CASE...
         BZ    GOODEXIT      NOTHING TO CHECK
         L     R1,UCBADDR    GET UCB
UCBVOLI  EQU   28            VOL-SER IN UCB
         CLC   =C'SVS',UCBVOLI(R1)  SYSRES (EITHER SYSTEM) ?
         BE    FULLCHEK      YES
         TM    CAMOPTN1,CAMUNCAT+CAMRECAT  SYSRES CHECK ONLY ?
         BNZ   TAPECHEK      ALLOW
         LA    R1,UCBVOLI(,R1)  POINT TO SYSRES VOLUME
CONNCHEK CLC   =C'WYL0',0(R1)  WYLBUR ?
         BE    WYLNAME       YES
         CLC   =C'LIBPA',0(R1)    LIBPAK ?
         B     TAPECHEK      NO; OK  *****TEMP*****
         CLI   HILVLNAM,C'Z'  ZNNN FORM ?
         BE    LIBLENT       YES
         CLI   HILVLNAM,C'A'  ELSE ANNN-INNN ?
         BL    GETAUTH
         CLI   HILVLNAM,C'I'
         BH    GETAUTH       NO
LIBLENT  CLI   NAMLEN1,3     IS INDEX LENGTH 4 ?
         BNE   GETAUTH
         LA    R14,HILVLNAM+1  START SCANNING REST
         LA    R15,3         THREE NUMERIC
LIBLOOP  CLI   0(R14),C'0'   NUMERIC ?
         BL    GETAUTH       TOO BAD
         LA    R14,1(,R14)   TRY NEXT
         BCT   R15,LIBLOOP
         B     TAPECHEK      OK ?
         SPACE 2
WYLNAME  CLC   =C'WYL ',HILVLNAM  WYLBUR NAME ?
         BE    WYLQUICK      YES; SKIP LOAD
         CLI   HILVLNAM+3,C' '  THREE BYTE INDEX ?
         BNE   GETAUTH       DEFINITELY NOT - CHECK AUTHOR
         LOAD  EPLOC=VOLTNAME  GET IGPVOLT ADDRESS
         LR    R15,R0        SAVE ADDRESS
         XR    R14,R14
         IC    R14,X'5C'(,R15)  GET NUMBER OF ENTRIES
         L     R1,X'5C'(,R15)   GET ADDRESS OF FIRST
WYLQLOOP CLC   HILVLNAM(3),0(R1)   MATCHING NAME ?
         BE    WYLQUACK      YES; CHECK FURTHER
         LA    R1,3(,R1)     TRY NEXT ENTRY
         BCT   R14,WYLQLOOP
         DELETE EPLOC=VOLTNAME  DELETE MODULE
         B     GETAUTH       AND CHECK AUTHORIZATION
WYLQUACK DELETE EPLOC=VOLTNAME  DELETE MODULE AND CONTINUE
WYLQUICK TM    CAMOPTN2,CAMBLDG+CAMBLDA+CAMLNKX  ANY NO-NOS ?
         BNZ   GETAUTH       YES - CHECK
         TM    CAMOPTN1,CAMCAT+CAMRECAT   BASIC CATALOG REQUEST ?
         BNZ   WYLMORE       YES - CHECK NAME
         TM    CAMOPTN2,CAMBLDX  AND/OR INDEX ?
         BZ    TAPECHEK      YES - NO FURTHER CHECKS AT THIS TIME
WYLMORE  L     R1,CAMPTR1    GET DSN POINTER
         XR    R14,R14       CLEAR COUNTER
         LA    R0,1          MAKE INCREMENT
         LA    R15,44        SET MAXIMUM
WYLDSNX  CLI   0(R1),C' '    END OF PARM ?
         BE    WYLDSN#       YES - CHECK COUNT
         CLI   0(R1),C'.'    INDEX LEVEL ?
         BNE   *+6           NO
         AR    R14,R0        UP LEVEL COUNTER
         LA    R1,1(,R1)     POINT TO NEXT INPUT BYTE
         BCT   R15,WYLDSNX   AND DO ALL
WYLDSN#  LA    R1,3          SET BASIC LEVEL NUMBER
         LA    R15,3         VALID LEVELS IF INDEX REQUEST ONLY
         TM    CAMOPTN1,CAMCAT+CAMRECAT  FULL DSN ?
         BZ    *+8           NO
         LA    R15,4         VALID LEVELS IF FULL DSN
         CR    R14,R1        BASIC NAME OK ?
         BE    TAPECHEK      YES; PERMIT
         CR    R14,R15       ALTERNATE LEVEL ?
         BNE   GETAUTH       NO; CHECK REQUESTOR
         B     TAPECHEK      NOTHING ELSE, YET
         SPACE 2
FULLCHEK CLC   =C'SYS1 ',HILVLNAM  SYS1. OPERATION ?
         BE    SYS1CHEK      EXTRA CHECKS FOR SYS1
         TM    CAMOPTN2,CAMLNKX   CONNECT ?
         BZ    FULLTEST      NO; SKIP EXTRA CHECK
         L     R1,CAMPTR3    POINT TO DEVICE TYPE/SERIAL
         LA    R1,4(,R1)     SKIP TYPE; POINT TO VOLSER
         B     CONNCHEK      AND TEST IF DESTINATION IS PRIVILEGED
FULLTEST TM    CAMOPTN1,CAMUNCAT+CAMRECAT  SYSRES CHECK ONLY ?
         BNZ   TAPECHEK
         B     GETAUTH       ELSE CHECK AUTHORIZATION
SYS1CHEK TM    CAMOPTN1,CAMRECAT  RECATALOG ?
         BNZ   BADEXIT       YES; FAIL UNCONDITIONALLY
*        THE ABOVE 'BADEXIT' PERMITS USE OF ALTERNATE SYSTEM
*        PACKS (SYS1. DATASETS) USING AN ALIAS ENTRY AND
*        CATALOG REFERENCE ON THE JCL.  WITHOUT IT, THE INITIATOR
*        RECATALOGS UNDER THE TRUE RATHER THAN ALIAS NAME AND
*        CREAMS THE CATALOG ENTRY FOR THE RUNNING SYSTEM.
         SPACE 1
GETAUTH  L     R1,CVTPTR
         USING CVT,R1
         CLI   CVTUSER,0     USER BITS SET ?
         BNE   GOODEXIT      YES; PERMIT
         L     R1,CVTTCBP
         L     R1,4(,R1)     GET CURRENT TCB
         USING TCB,R1
         TM    TCBUSER,X'80'  PRE-ASSEMBLED TCB ?
         BNZ   GOODEXIT      YES; PERMIT
         LAT   R14,TCBTCT,,GOTTCT  OK IF TCT
         L     R15,TCBRBP    ELSE GET RB
         USING RBSECT,R15
         L     R14,RBGRS11   PROVISIONALLY POINT TO W1AREA IF EXEC
GETRB    TM    RBSTAB2,RBTCBNXT  LAST RB ?
         BNZ   BADEXIT       YES; FAIL
         L     R15,RBLINK    GET NEXT RB
         TM    RBSTAB1,RBFTP   WHAT TYPE ?
         BNZ   GETRB         NOT PRB; SKIP
         LAT   R1,RBCDE,GETRB  SKIP IF NO CDE
         NUSE  CDE,R1
         CLC   =C'EXH',CDENAME  EXHIBIT ?
         BE    TAPECHEK      OK; ALLOW
         CLC   CDENAME(2),=C'WYL0'  WYLBUR/WYPATH ?
         BE    TAPECHEK      WYLBUR IS SUPPOSED TO CHECK
         CLC   =C'EXC',CDENAME  EXECUTOR ?
         BNE   GETRB         NO
         LAT   R14,W1TCTPTR-W1AREA(R14),BADEXIT  SKIP IF NOT EXEC
         SPACE 1
         NUSE  TCT,R14
         DROP  R1
GOTTCT   LAT   R1,TCTJMR,BADEXIT  SKIP IF NO JMR
         USING JMR,R1
         CLC   =C'090',JMRUSEID   SPECIAL ACCOUNT NUMBER ?
         BNE   BADEXIT
         CLI   JMRUSEID+3,C'8'  HIGHEST DTS #
         BH    BADEXIT       TOO HIGH; TOO BAD
         CLI   JMRUSEID+3,C'4'     BUT WHICH ONE ?
         BL    BADEXIT
         BE    TAPECHEK
         CLC   =C'SYS1 ',HILVLNAM  SYS1 REQUEST ?
         BE    TAPECHEK      YES; PERMIT WITH GRAVE DOUBTS
         SPACE 2
BADEXIT  MVI   ERRCATSV,ERROR20        RETURN CODE IS 20
         MVI   ERRLOCSV,0
         MVI   XCTLNUMB,CLC7  SET ERROR CLEAN-UP MODULE
         NOP   BADWTO        ZAP FOR WTO MSG
BADEXRET LA    R1,1          INDICATE ENTRY FROM CATLG, NOT CVOL OPEN
         OI    MODMAP1,MODCLC3  CLC7 FREEMAIN FIX
         B     XCTL          XCTL TO IT
*
TAPECHEK TM    CAMOPTN2,CAMLNKX  CONNECT ?
         BZ    TAPECHEX      NO
         L     R1,CAMPTR3    GET DEVICE TYPE/SERIAL
         CLI   2(R1),X'20'   DISK ?
         BE    GOODEXIT
         B     BADEXIT
TAPECHEX TM    CAMOPTN1,CAMCAT+CAMRECAT  NEW ENTRY ?
         BZ    GOODEXIT
         L     R1,CVTPTR                                         79350
         L     R0,CVTDATE-CVT(,R1)                               79350
         SRL   R0,4                                              79350
         SLDL  R0,28         PUT YDDD IN R0                      79350
         L     R15,UCBADDR    GET UCB BACK
         L     R1,CAMPTR3    GET VOLUME LIST
         CLI   4(R1),X'80'   TAPE ENTRY ?                        79350
         BE    *+8           YES; LEAVE THE FILE NUMBER ALONE    79350
         STCM  R0,3,12(R1)   SET CATALOG DATE                    79350
         CLC   =C'SVS',UCBVOLI(R15)  SYSTEM PACK ?
         BE    TAPECHEZ
         CLC   =C'LIBPA',UCBVOLI(R15)  MAIN CATALOG ?
         BE    TAPECHEZ
         CLC   =C'WYL0',UCBVOLI(R15)  WYLBUR ?
         BNE   GOODEXIT
         CLI   4(R1),X'80'   TAPE ENTRY ?
         BE    BADEXIT       NOT ALLOWED ON WYLBUR
TAPECHEZ LH    R14,0(,R1)    GET NUMBER OF VOLUMES
         LTR   R14,R14                                           79350
         BP    TAPECHOP                                          79350
         LA    R14,1         DON'T LOOP FOREVER                  79350
TAPECHOP CLI   4(R1),X'80'   TAPE ENTRY ?
         BNE   GOODEXIT      NO; HOPE FOR THE BEST
         CLI   6(R1),C'X'    XNNNNN TAPE ?
         BE    TAPECHIP      YES
         CLC   =C'OS',6(R1)  OSNNNN TAPE ?
         BNE   BADEXIT
TAPECHIP LA    R1,12(,R1)    SKIP TO NEXT ENTRY
         SH    R14,=H'1'
         BP    TAPECHOP      TRY AGAIN
         SPACE 1
GOODEXIT MVI   XCTLNUMB,CLC3           SETUP XCTL PARM LIST
         NOP   GOODWTO       ZAP FOR WTO MSG
*
XCTL     XCTL  MF=(E,(1)),SF=(E,XCTLPARM)
*
         SPACE 2
****     CODE USED FOR DEBUGGING ONLY
BADWTO   WTO   'BADEXIT',ROUTCDE=15        **********DEBUG**********
         B     BADEXRET      RETURN FROM WTO
         SPACE 1
GOODWTO  WTO   'GUDEXIT',ROUTCDE=15        **********DEBUG**********
         B     XCTL          TAKE GOOD RETURN
         EJECT
*
*      CONSTANTS
*
GOODMASK DC    0A(0),AL1(CAMCAT+CAMRECAT)  FIRST OPTION BYTE CHECKS
         DC    AL1(CAMBLDX+CAMBLDG+CAMBLDA+CAMLNKX)  SECOND OPTION
         DC    AL1(0,0)      NOTHING CHECKED IN OTHERS
VOLTNAME DC    CL8'IGPVOLT'  NAME OF VOLUME & OTHER DTS INFO
         SPACE 2
         LTORG ,
*
*      CONSTANT EQUATES
*
VICETYP  EQU   5                       VICE TYPE CODE
ICETYP   EQU   3                       ICE TYPE CODE
ILETYP   EQU   0                       ILE TYPE CODE
IPETYP   EQU   0                       IPE TYPE CODE
DSPETYP  EQU   7                       OR MORE, FOR DSPE TYPE CODE
VCBPETYP EQU   1                       VCBPE TYPE CODE
OCVOLTYP EQU   3                       OLD CVOL TYPE CODE
NCVOLTYP EQU   5                       NEW CVOL TYPE CODE
ALIASTYP EQU   4                       ALIAS TYPE CODE
GIPETYP  EQU   2                       GIPE TYPE CODE
ERROR00  EQU   0
ERROR04  EQU   4
ERROR08  EQU   8
ERROR12  EQU   12
ERROR16  EQU   16
ERROR20  EQU   20
ERROR24  EQU   24
ERROR28  EQU   28
ERROR32  EQU   32
ERROR72  EQU   72
***********************************************************************
*      CHARACTER CODE DEPENDENT CONSTANTS
***********************************************************************
CCDBLANK EQU   C' '
CCDRPARN EQU   C')'
CCDMINUS EQU   C'-'
CCDPLUS  EQU   C'+'
CCD0     EQU   C'0'
CCDG     EQU   C'G'
CCDV     EQU   C'V'
CCDPERD  EQU   C'.'
CCDLPARN EQU   C'('
***********************************************************************
CODPERD  EQU   4
CODBLANK EQU   8
CODPARN  EQU   12
CLC2     EQU   C'2'
CLC3     EQU   C'3'
CLC4     EQU   C'4'
CLC5     EQU   C'5'
CLC6     EQU   C'6'
CLC7     EQU   C'7'
EXIT     EQU   3
FREEMAIN EQU   10
OPENEXT  EQU   28
*
D01      EQU   1
D02      EQU   2
D08      EQU   8
D09      EQU   9
D12      EQU   12
D28      EQU   28
D44      EQU   44
X00      EQU   X'00'
X01      EQU   X'01'
X48      EQU   X'48'
X0100    EQU   X'0100'
XF0      EQU   X'F0'
XFF      EQU   X'FF'
         EJECT
***********************************************************************
*                                                                     *
* END OF IGG0CLCT CSECT                                               *
*                                                                     *
CLCTSIZE EQU   *                                                      *
MAXISIZE EQU   IGG0CLCT+X'400'                                        *
AVAILABL EQU   MAXISIZE-CLCTSIZE                                      *
*                                                                     *
         ORG   IGG0CLCT+X'400'                                  PTM2140
***********************************************************************
*
         EJECT
         WORKAREA LIST=,AUX=
         SPACE 3
         PRINT NOGEN
         NEED  CVT,TCB,RB,TCT
IGG0CLCT CSECT ,
         MSECT ,
*
*      REGISTER EQUATES
*
*
BALREG1  EQU   R14
BALREG2  EQU   R12
BASE     EQU   R4
*
BALREG3  EQU   R5
Q        EQU   R9
TRULEN   EQU   R10
POINT    EQU   R10
NEWENTRY EQU   R7
*
         SPACE 2
         IEFJMR ,
         SPACE 2
         COPY  W1AREA
         SPACE 2
         END
