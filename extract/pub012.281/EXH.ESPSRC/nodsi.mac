NODSI    TITLE 'N O D S I *** BYPASS ENQ PROCESSING FOR DATASETS'
         PUNCH ' ORDER NODSI(P) '    MAKE DUMPS EASIER
         PUNCH ' SETCODE AC(1)  '    PRIVILEGED
***********************************************************************
*                                                                     *
* JUSTIFICATION:                                                      *
*   MVS DOES NOT SUPPLY A FUNCTION TO DELETE/RENAME/ALTER DATASETS    *
*   THAT HAVE ENQ'S AGAINST DUPLICATES (SAME DSN, DIFFERENT VOLSER).  *
*   THIS PROGRAM WILL SUPPLY THAT FUNCTION.                           *
*                                                                     *
* FUNCTION:                                                           *
*   THIS PROGRAM WILL PASS CONTROL TO THE PROGRAM NAMED ON THE PARM   *
*   STATEMENT, AND INTERCEPT ALL SYSDSN ENQ'S ISSUED BY THAT PROGRAM  *
*   SO THAT RNAMES ENQUEUED UPON CAN BE PROCESSED AS IF THEY HAD NO   *
*   ACTIVE ENQ AGAINST THEM.                                          *
*   ALL ENQUEUES WITH SCOPE=SYSTEM OR SCOPE=SYSTEMS WILL BE CONVERTED *
*   TO SCOPE=STEP.  THIS SO THAT PROGRAMS ISSUEING THOSE ENQUEUES     *
*   CAN STILL RELY ON VALID RETURNCODES FROM GRS FOR THE ENQUEUES     *
*   AND DEQUEUES DONE.                                                *
*                                                                     *
* EXAMPLE:                                                            *
*   //T2JJA    JOB ,'JAN JAEGER'                                      *
*   //NODSI    EXEC PGM=NODSI,PARM='IEHPROGM,LINECNT=66'              *
*   //VOLDD    DD  UNIT=3380,VOL=SER=STOR01,DISP=OLD                  *
*   //SYSPRINT DD  SYSOUT=*                                           *
*   //SYSIN    DD  *                                                  *
*    SCRATCH DSNAME=T2JJ.ZZ,VOL=3380=STOR01                           *
*   /*                                                                *
*                                                                     *
* LOGIC:                                                              *
*   OBTAIN WORKAREA IN KEY7                                           *
*   EXTRACT PROGRAM NAME FROM PARM= STATEMENT, AND BUILD NEW          *
*    PARAMETER AREA                                                   *
*   ISSUE RACROUTE TO VERIFY USER ACCESS TO THIS FACILITY             *
*   ATTACH PROGRAM WITH RSAPF=YES AND DISP=NO                         *
*   BUILD SVC SCREENING TABLE FOR ENQ/DEQ/RESERVE SVC'S               *
*   SET NEWLY ATTACHED TCB DISPATCHABLE                               *
*   WAIT FOR TCB TO TERMINATE                                         *
*   SAVE RETURNCODE                                                   *
*   RELEASE WORKAREA AND EXIT WITH RC FROM ATTACHED PROGRAM           *
*                                                                     *
* SVC INTERCEPT ROUTINE:                                              *
*   ENTER AMODE AND PSW KEY FROM CALLER                               *
*   CHANGE SVC PARAMTER LIST SO THAT ENQUEUES FOR SYSDSN ARE          *
*   CONVERTED TO SCOPE=STEP                                           *
*   RESET PSW KEY TO ZERO                                             *
*   BRANCH-ENTER ORIGINAL SVC EPA.                                    *
*                                                                     *
* RACF OR ACF2:                                                       *
*   ACCESS(READ) IS REQUIRED TO ENTITY(NODSI) IN CLASS(FACILITY) TO   *
*   USE THIS FACILITY.  ACCESS WILL BE DENIED IF NO PROFILE EXISTS.   *
*                                                                     *
* REGISTER USAGE (MAIN PROGRAM):                                      *
*   R0-R5 WORK                                                        *
*   R6    PROGRAM BASE                                                *
*   R7    ATTACHED PROGRAM PARM AREA                                  *
*   R8    ATTACHED PROGRAM TCB ADDRESS                                *
*   R9    JSCB ADDRESS                                                *
*   R10   APF INDICATOR FROM JSCBOPTS(JSCBPASS)                       *
*   R11   PSW KEY OF CALLER                                           *
*   R12   PROGRAM BASE                                                *
*   R13   KEY7 WORKAREA INCLUDING STANDARD OS SAVEAREA                *
*   R14   RETURN ADDR                                                 *
*   R15   ENTRY POINT ADDRESS + RETURN CODE                           *
* REGISTER USAGE (INTERCEPT ROUTINE):                                 *
*   R6    PROGRAM BASE                                                *
*   R2,R11,R12 WORK                                                   *
*   OTHERS AS DEFINED BY SVC LINKAGE CONVENTIONS                      *
*                                                                     *
* ATTRIBUTES:                                                         *
*   AMODE(31),RMODE(24),REFR,AC(1)                                    *
*                                                                     *
* HISTORY:                                                            *
*   DATE       BY              COMMENTS                               *
*   30/11/94   JAN JAEGER      INITIAL VERSION                        *
*                                                                     *
***********************************************************************
         COPY  OPTIONGB                                         GP04084
         SPACE 1                                                GP04084
         SYSPARM LIST=YES                                       GP04084
         SPACE 2                                                GP04084
         PRINT &PRTSOR                                          GP04084
NODSI    CSECT ,                                                GP04084
NODSI    AMODE 31                                               GP04084
NODSI    RMODE 24                                               GP04084
         B     SKIPHDR-*(,R15)         BRANCH AROUND EYE CATCHER
         DC    AL1(L'EYECATCH)
EYECATCH DC    C'NODSI-J.JAEGER-&SYSDATE.-&SYSTIME.'            GP04084
SKIPHDR  DS    0H
         BAKR  R14,0                   STACK REGISTERS AND SET RETADDR
         BASR  R6,0                    SET BASE REGISTER
         LA    R2,*-NODSI                                       GP04084
         SLR   R6,R2
         USING NODSI,R6                                         GP04084
*
         L     R3,0(,R1)               PARAMETER POINTER
         LA    R3,0(,R3)               ZERO BIT 31
*
         MODESET MODE=SUP
         IPK   ,
         LR    R11,R2                  SAVE PSWKEY
         SPKA  X'70'
*
         STORAGE OBTAIN,               OBTAIN WORKAREA                 X
               LENGTH=WORKLEN,                                         X
               CALLRKY=YES,                                            X
               LOC=BELOW,                                              X
               SP=129
         MVC   4(4,R1),=CL4'F1SA'      INDICATE LINKAGE STACK USED
         LR    R13,R1
         USING WORKAREA,R13
*
         EJECT ,
*
         SPKA  0(R11)
         LH    R4,0(,R3)               PARAMETER LENGTH
         LTR   R4,R4                   NO LENGTH
         BZ    PRMERR
         BCTR  R4,0                    REDUCE TO MACHINE LENGTH
         CH    R4,=H'8'                IF MORE THEN 9
         BNH   NOPRMLIM
         LH    R4,=H'8'                THEN LIMIT TO 9
NOPRMLIM DS    0H
         SLR   R2,R2                   TR BYTE FOUND INDICATOR
         EX    R4,FINDDLM              FIND A DELIMITER
         BC    B'0110',DLMFOUND        FOUND A DELIMITER
         CH    R4,=H'8'                DO WE HAVE MORE THEN 8
         BNE   DLM8                    YES FALL THROUGH
         B     PRMERR
DLMFOUND DS    0H
         SLR   R1,R3                   SUBTRACT START ADDRESS OF PARM
         SH    R1,=H'2'                SUBTRACT LENGTH HW
         LTR   R4,R1
         BZ    PRMERR                  ZERO LENGTH THEN ERROR
         BCTR  R4,0                    SET MACHINE LENGHT
DLM8     DS    0H
         SPKA  X'70'
         XC    EPNAME,EPNAME
         LR    R0,R4                   COPY LENGHT TO R0
         LR    R1,R11                  COPY SOURCE KEY TO R1
         MVCSK EPNAME,2(R3)            COPY EPNAME
         OC    EPNAME,=CL8' '          FORCE UPPERCASE AND BLANKS
         SPKA  0(R11)
         LH    R5,0(,R3)               RELOAD PARM LENGTH
         BCTR  R5,0                    SET MACHINE LENGTH
         LTR   R2,R2                   CHECK FOR DELIMITER
         BZ    NODLM
         BCTR  R5,0                    SUBTRACT DELIMITER
NODLM    DS    0H
         SLR   R5,R4                   SUBTRACT EPNAME LENGTH
         LA    R2,4(R4,R3)             POINT IN ORIGINAL PARM
*
         LA    R10,USERPLEN(,R5)       TOTAL LENGTH OF USERPARM
         STORAGE OBTAIN,               GET STORAGE FOR PARM AREA       X
               LENGTH=(10),                                            X
               CALLRKY=YES,                                            X
               LOC=BELOW,                                              X
               SP=130
         LR    R7,R1
         USING USERPARM,R7
         LA    R1,PARMLEN
         ST    R1,PARMADDR             STORE PARM ADDRESS
         OI    PARMADDR,X'80'          FORCE END-OF-LIST INDICATOR ON
         STH   R5,PARMLEN              STORE PARM LENGTH
         LTR   R5,R5                   IS A PARM SPECIFIED
         BZ    NOUPARM                 NO THEN DO NOT COPY
         BCTR  R5,0
         EX    R5,MVCPRM               COPY INTO NEW PARM AREA
NOUPARM  DS    0H
*
         EJECT ,
*
         SPKA  X'70'
         MVC   RACROUTE,MFLROUTE       INITIALIZE PARMLIST
         RACROUTE REQUEST=AUTH,        REQUEST ACCESS                  X
               RELEASE=1.9,            MINIMUM LVL TO SUPPORT ENTITYX  X
               WORKA=SAFWK,                                            X
               MF=(E,RACROUTE)
         LTR   R8,R15                  CHECK ACCESS
         BNZ   AUTHERR
*
         EJECT ,
*
         L     R9,PSATOLD-PSA(,0)      REMOVE APF AUTHORISATION
         ICM   R9,B'0111',TCBJSCBB-TCB(R9)
         USING IEZJSCB,R9
         SPKA  X'00'
         NI    JSCBOPTS,255-JSCBAUTH
         SPKA  X'70'
*
         EJECT ,
*
         LR    R1,R7                   SET PARM REGISTER FOR ATTACH
         XC    STECB,STECB
         MVC   LATT,LATTI
         ATTACH ECB=STECB,             ATTACH USER PGM                 X
               EPLOC=EPNAME,                                           X
               SF=(E,LATT)
         LTR   R8,R15
         BNZ   ATTERR
         ST    R1,STTCB                STORE TCB ADDRESS
         LR    R8,R1
         USING TCB,R8
*
         SPKA  X'00'
         STORAGE OBTAIN,               OBTAIN STORAGE FOR SCREENING    X
               LENGTH=SVCSCRNL,        TABLE                           X
               SP=254
         LR    R2,R1
         USING SVCSCRN,R2
         MVC   SVCSCHDR,SVCSTHDR       COPY SVC SCREENING HEADER
         MVC   SVCSCTBL,SVCSTTBL       COPY SVC SCREENING TABLE
         ST    R2,TCBSVCA2             STORE SCREENING TABLE IN TCB
         DROP  R2
         OI    TCBFLGS7,TCBSVCS+TCBSVCSP   SET SCREENING ACTIVE
*
         ATTACH DISP=RESET,            KICK OFF USER PGM               X
               TCB=(8)
         WAIT  ECB=STECB               WAIT FOR SUBTASK TO COMPLETE
*
         NI    TCBFLGS7,255-(TCBSVCS+TCBSVCSP)   SET SCREENING INACTIVE
         XC    TCBSVCA2,TCBSVCA2       REMOVE SCREENING TABLE ADDRESS
         STORAGE RELEASE,              RELEASE STORAGE FOR SCREENING   X
               LENGTH=SVCSCRNL,        TABLE                           X
               ADDR=(2),                                               X
               SP=254
         SPKA  X'70'
         DROP  R8
*
         DETACH STTCB                  REMOVE SUBTASK
*
         EJECT ,
*
         SPKA  X'00'
         NI    JSCBOPTS,255-JSCBAUTH   REMOVE APF AUTHORISATION
         DROP  R9
*
         SPKA  0(R11)
         STORAGE RELEASE,              RELEASE PARM DATA AREA          X
               LENGTH=(10),                                            X
               ADDR=(7),                                               X
               CALLRKY=YES,                                            X
               SP=130
         SPKA  X'70'
*
         SLR   R8,R8                   SAVE RETURNCODE
         ICM   R8,B'0111',STECB+1
*
         LR    R1,R13
         STORAGE RELEASE,              WORKAREA                        X
               LENGTH=WORKLEN,                                         X
               ADDR=(1),                                               X
               CALLRKY=YES,                                            X
               SP=129
*
         MODESET MODE=PROB,            BACK TO PROBLEMSTATE USERKEY    X
               KEY=NZERO
*
         LR    R15,R8                  RESTORE RETURNCODE
         PR    ,                       RETURN TO CALLER
*
         EJECT ,
*
SVCROUTR DS    0D                      SVC SCREENING INTERCEPT ADDRESS
         BASR  R6,0                    ESTABLISH PROGRAM BASE
         LA    R2,*-NODSI                                       GP04084
         SLR   R6,R2
*
         L     R2,RBLINK-RBBASIC(,R5)  GO UP ONE RB LEVEL (TYPE 2-4)
*
         IC    R11,RBOPSWB2-RBBASIC(,R2)
         SPKA  0(R11)                  SET PSWKEY OF CALLER
         TM    RBOPSWA-RBBASIC(R2),RBOPSWM
         BO    STAY31
         LA    R12,MODE24              ENTER AMODE OF CALLER
         BSM   0,R12
MODE24   DS    0H
STAY31   DS    0H
         LR    R12,R1
CHECKARG DS    0H
         LR    R11,R12
         TM    2(R12),B'01000000'      IS THIS SCOPE=SYSTEM(S)
         BZ    NOEQDQ
         L     R10,4(,R12)
         CLC   =CL8'SYSDSN',0(R10)     IS THIS QNAME=SYSDSN
         BNE   NOSDQN
         NI    2(R12),B'10110111'      CHANGE TO SCOPE=STEP
NOEQDQ   DS    0H
         TM    2(R12),B'00001000'      WAS THIS A RESERVE
         BZ    NOSDQN
         LA    R12,4(,R12)             SKIP UCB= PARM
NOSDQN   DS    0H
         LA    R12,12(,R12)            ADVANCE TO NEXT ENTRY
         TM    0(R11),B'10000000'      WAS THIS LAST IN LIST
         BZ    CHECKARG                GO PROCESS NEXT ENTRY IN LIST
         L     R12,=A(MODE31+X'80000000')
         BSM   0,R12                   BACK TO AMODE 31
MODE31   DS    0H
         SPKA  X'00'                     AND KEY ZERO
*
         SL    R2,=AL4(RBBASIC-RBPREFIX) BACKUP TO RB PREFIX
         LH    R2,RBINTCOD-RBPREFIX(,R2) LOAD INTERRUPTION CODE
         SLL   R2,3                      MULTIPLY BY 8
         L     R6,CVTABEND-CVT(,R3)      FIND THE SVC TABLE
         L     R6,SCVTSVCT-SCVTSECT(,R6)
         L     R6,SVCEP-SVCENTRY(R2,R6)  USE INTCOD AS INDEX IN TABLE
         BSM   0,R6                    BRANCH TO ORIGINAL SVC ROUTINE
*
         EJECT ,
*
FINDDLM  TRT   2(0,R3),DLMTBL          TR TABLE TO FIND DELIMITER
MVCPRM   MVC   PARMSTR(0),0(R2)        COPY PARAMETER STRING
*
PRMERR   DS    0H                      PARAMETER ERROR
         WTO   MF=(E,PRMERRM)
         ABEND 999,,STEP
*
AUTHERR  DS    0H                      AUTHORISATION ERROR
         WTO   MF=(E,AUTHERRM)
         ABEND 999,REASON=(8),,STEP    RACROUTE RC IS REASON CODE
*
ATTERR   DS    0H                      ATTACH ERROR
         WTO   MF=(E,ATTERRM)
         ABEND 999,REASON=(8),,STEP    ATTACH RC IS REASON CODE
*
MFLROUTE RACROUTE REQUEST=AUTH,        REQUEST ACCESS                  X
               RELEASE=1.9,            MINIMUM LVL TO SUPPORT ENTITYX  X
               CLASS='FACILITY',       RESOURCE CLASS                  X
               ENTITYX=ENTITYX,        PROFILE NAME                    X
               ATTR=READ,              ACCESS(READ)                    X
               RACFIND=YES,            FORCE ICH MSG IF NO PROFILE     X
               MF=L
MFLROUTL EQU   *-MFLROUTE
*
ENTITYX  DC    2AL2(L'PROFNAME)
PROFNAME DC    C'NODSI'                PROFILE NAME
*
LATTI    ATTACH EPLOC=,                                                X
               ECB=,                                                   X
               JSTCB=YES,              IF THIS PROGRAM IS TO BE CALLED X
               RSAPF=YES,              FROM IKJEFT01, THEN JSTCB=NO    X
               DISP=NO,                MUST BE CODED                   X
               SF=L
LATTL    EQU   *-LATTI
*
PRMERRM  WTO   'JJ$001E PARAMETER ERROR',MCSFLAG=HRDCPY,MF=L
AUTHERRM WTO   'JJ$002E AUTHORISATION FAILURE',MCSFLAG=HRDCPY,MF=L
ATTERRM  WTO   'JJ$003E ATTACH FAILED',MCSFLAG=HRDCPY,MF=L
*
         EJECT ,
*
SVCSTHDR DC    0D'0',AL4(SVCROUTR+X'80000000'),AL1(SVCTP34,0,0,0)
SVCSTTBL DC    256X'80'
         ORG   SVCSTTBL+48             ENQ/RESERVE
         DC    X'00'
         ORG   SVCSTTBL+56             DEQ
         DC    X'00'
         ORG   ,
*
DLMTBL   DC    XL256'00'               DELIMITER TABLE
         ORG   DLMTBL+C' '             ONLY
         DC    C' '                      SPACE
         ORG   DLMTBL+C','                 AND
         DC    C','                          COMMA
         ORG   ,                               ARE VALID DELIMITERS
*
         LTORG ,
*
         EJECT ,
*
WORKAREA DSECT ,                       KEY 7 WORKAREA
SAVEAREA DS    18F
STECB    DS    1F                      ECB ADDRESS FOR ATTACH
STTCB    DS    1F                      TCB ADDRESS RETURNED BY ATTACH
EPNAME   DS    CL8                     EPNAME FOR ATTACH EPLOC=
LATT     DS    XL(LATTL)               ATTACH WORK AREA
RACROUTE DS    XL(MFLROUTL)            WORKAREA FOR RACROUTE
SAFWK    DS    XL512                   WORKAREA FOR SAF
WORKLEN  EQU   *-WORKAREA
*
SVCSCRN  DSECT ,                       KEY 0 SCREENING TABLE
SVCSCHDR DS    1D
SVCSCTBL DS    XL256
SVCSCRNL EQU   *-SVCSCRN
*
USERPARM DSECT ,                       USERKEY PARAMETERAREA
PARMADDR DS    1F                      POINTER TO USERPARM
PARMLEN  DS    1H                      LENGTH OF USERPARM
PARMSTR  DS    0C                      USERPARM
USERPLEN EQU   *-USERPARM              USERPARM HEADER LENGTH
*
         EJECT ,
         PRINT &PRTSYS                                          GP04084
         IHAPSA ,
         CVT   DSECT=YES
         IHASCVT ,
         IKJTCB ,
         IKJRB ,
         IHACDE ,
         IHASVC ,
         IEZJSCB ,
         YREGS ,
*
         END   ,
