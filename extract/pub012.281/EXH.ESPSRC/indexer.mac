INDXR    TITLE 'I N D E X E R  ***  BUILD INDEX FROM PRINT DS'
         MACRO ,
&NM      STOP  &ANY
         LCLA  &I,&J
&J       SETA  N'&SYSLIST
.LOOP    AIF   (&I GE &J).MEND
&I       SETA  &I+1
         ORG   TRTSKIP+C'&SYSLIST(&I)'
         DC    X'04'
         AGO   .LOOP
.MEND    MEND  ,
         SPACE 1
         MACRO ,
&NM      WORD  &ANY
         LCLA  &I,&J
&J       SETA  N'&SYSLIST
.LOOP    AIF   (&I GE &J).MEND
&I       SETA  &I+1
         ORG   TRTWORD+C'&SYSLIST(&I)'
         DC    AL1(0)
         AGO   .LOOP
.MEND    MEND  ,
         SPACE 1
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 1986  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
INDEXER  PGMHEAD ZERO12,BASE=R12,PARM=R9,BNDRY=PAGE     ADDED ON 86279
         SPACE 1
*        KEYLEN IS SET TO THE LENGTH OF THE LONGEST WORD TO BE
*        PROCESSED.
KEYLEN   EQU   36
PAGLEN   EQU   5             NUMBER OF DIGITS IN PAGE REFERENCE
         SPACE 1
         SERVINIT ,          LOAD THE @SERVICE ROUTINE
         ST    R13,WKBASE15+4
         ST    R13,WKBASE35+4
         SERVCALL LPALD,=CL8'@PRINTER'  GET THE PRINT ROUTINE
         ST    R0,@PRINTER   SAVE THE ADDRESS
         SERVCALL LPALD,=CL8'@INPREAD'  ALSO THE INPUT READER
         ST    R0,@INPREAD
         SPACE 1
         MVI   FLAGS,FGECHO  DEFAULT - LIST INPUT                86307
         LA    R0,32         SET DEFAULT LEFT MARGIN (FOR PUNK)
         ST    R0,LMARGIN
         LA    R0,80         SET DEFAULT WIDTH
         ST    R0,HSIZE
         LA    R0,7          SET TOP MARGIN
         ST    R0,TMARGIN
         LA    R0,50         VERTICAL RANGE
         ST    R0,VSIZE
         SPACE 1                                                 86307
         LA    R9,0(,R9)     CLEAR PARM POINTER                  86307
         LTR   R9,R9         ANY ?                               86307
         BZ    DONEPARM      NO                                  86307
         ICM   R9,OIII,1(R9) LOAD PARM ADDRESS                   86307
         BZ    DONEPARM                                          86307
         SLR   R8,R8                                             86307
         ICM   R8,OOII,0(R9) LOAD PARM LENGTH                    86307
         BNP   DONEPARM                                          86307
         SPACE 1                                                 86307
         CLC   =C'NOLIST',2(R9)  SUPPRESS PRINT ECHO ?           86307
         BNE   *+8           NO                                  86307
         NI    FLAGS,255-FGLIST  SUPPRESS INPUT ECHO             87231
         SLR   R14,R14                                           87231
         LA    R15,C'0'                                          87231
         LR    R0,R8         COPY RESIDUAL PARM LENGTH           87231
         MIN   R0,=H'8',TYPE=H   BUT NOT TOO LONG                87231
NUMPARM  CLI   2(R9),C'0'    NUMERIC ?                           87231
         BL    NUMXPARM      NO MORE                             87231
         SLDL  R14,8         MAKE ROOM FOR IT                    87231
         IC    R15,2(,R9)    TACK IT ON                          87231
         LA    R9,1(,R9)                                         87231
         BCT   R0,NUMPARM                                        87231
NUMXPARM STM   R14,R15,STRSAVE                                   87231
         PACK  DB,STRSAVE(8)                                     87231
         CVB   R0,DB                                             87231
         LTR   R0,R0                                             87231
         BNP   DONEPARM                                          87231
         ST    R0,PAGEONE                                        87231
         NI    FLAGS,255-FGTRIG  SHOW TRIGGER SEARCH             87231
         SPACE 1
DONEPARM INPOPEN INCLUDE,OPT=(NOWTO),DEV=2  INCLUSION LIST ?
         CH    R15,=H'8'     FOUND ?
         BL    HAVEINC       YES
         INPOPEN EXCLUDE,OPT=(NOWTO),DEV=2  EXCLUSION LIST ?
         CH    R15,=H'8'     FOUND ?
         BNL   NOSELECT      NO
         OI    FLAGS,FGEX    SHOW EXCLUDE PROCESSING
HAVEINC  INPGET DEV=2        GET A CARD
         BXH   R15,R15,EOFDATA
         LR    R5,R1         COPY ADDRESS
         LR    R7,R0         COPY RECORD LENGTH
         ICM   R2,IIII,SOPHIGH DID WE ISSUE A GETMAIN YET ?
         BNZ   HAVESOME      YES
         L     R2,=A(400*1024)  ALLOW FOR 6K OF WORDS
         GETMAIN R,LV=(R2)
         ST    R1,SOPLOW     SET FIRST WORD ADDRESS
         S     R1,=A(INEXSIZE)  BACKSPACE ONE ENTRY
         ST    R1,SOPHIGH    SET FAKE END ADDRESS
         LR    R2,R1         COPY IT OVER
HAVESOME A     R2,=A(INEXSIZE)  SPACE TO NEXT ENTRY
         ST    R2,SOPHIGH    UPDATE TABLE
         USING INEXSECT,R2   DECLARE THE LOOK-UP TABLE
         MVC   INEXKEY,BLANKS   CLEAR
         MIN   R7,=A(KEYLEN)  TRUNCATE
         STC   R7,INEXLEN    SAVE WORD LENGTH
         BCTR  R7,0
         EX    R7,HAVEMVC    MOVE THE KEY
         B     HAVEINC
HAVEMVC  OC    INEXKEY(0),0(R5)  MOVE AND UPPER-CASE THE KEY
         SPACE 1
EOFDATA  OI    SOPHIGH,SOPFAD  INDICATE END-ADDRESS PASSED
         LA    R1,SRTKEY     POINT TO SORT KEY
         ST    R1,SOPLOOK    AND STASH FOR LOOK-UP
         MVI   SOPSEQ,C'A'   ASCENDING SEQUENCE
         MVI   SOPCOO,INEXKEY-INEXSECT  KEY OFFSET
         MVI   SOPCOL,L'INEXKEY         LENGTH OF KEY
         MVI   SOPLEN,INEXSIZE          SIZE OF ONE ENTRY
         INPCLOSE DEV=2      CLOSE AND FREE
         SERVCALL SORTH,SOPLOW  SORT THE LIST
         DROP  R2
         SPACE 1
NOSELECT PRTOPEN SYSPRINT,OPT=ABEND  OPEN OUTPUT FILE
         PRTOPEN SUMPRINT,OPT=(NOWTO),DEV=2  AND SUMMARY FILE
         SPACE 1
         INPOPEN SYSUT1,OPT=ABEND  NEED INPUT OF SOME SORT
         SPACE 1
         LA    R1,=A(SORTPARM)
         LINK  EP=SORT
         LH    R9,RETCH      SET RETURN CODE
         MAX   R9,(R15)      USE LARGER OF OUR AND SORT RETURN
         SERVTERM ,          CLOSE AND FREE EVERYTHING
         PGMEXIT RC=(R9)     RETURN WITH ERROR CODE
         EJECT ,
         DROP  ,
E15      STM   R14,R12,12(R13)
         LR    R12,R15       GET BASE
         USING E15,R12
         LM    R10,R11,WKBASE15   LOAD THE WORK BASE REGISTERS
         USING COMMWORK,R10
         USING SAVE,R11
         LA    R9,SORTSAVE
         ST    R9,8(,R13)
         ST    R13,4(,R9)
         LR    R13,R9
         SPACE 1
         LM    R1,R9,E15PARM  GET PRIOR PARMS
         LTR   R2,R2         ANY ADDRESS ?
         BNZR  R2            YES; RE-ENTER IT
         SPACE 1
E15LOOP  INPGET ,            GET AN INPUT RECORD
         BXH   R15,R15,E15EOF  TREAT ERROR AS EOF
         LR    R5,R1         COPY RECORD ADDRESS
         LR    R7,R0         COPY RECORD LENGTH
         CLI   0(R5),C'1'    PAGE EJECT ?
         BNE   NOTTOP        NO
         TM    FLAGS,FGTRIG  SEARCHING FOR TRIGGER ?             87231
         BNZ   NOECHO0       NO                                  87231
         LA    R0,1          GET INCREMENT                       87231
         A     R0,PAGENOW    TO CURRENT PAGE                     87231
         ST    R0,PAGENOW    STASH IT                            87231
         C     R0,PAGEONE    PASSED REQUIREMENT ?                87231
         BNH   NOECHO0       NO                                  87231
         OI    FLAGS,FGTRIG  ENABLE PRINTING                     87231
NOECHO0  TM    FLAGS,FGECHO  ECHO THE INPUT ?                    86307
         BNO   NOECHO1       NO                                  86307
         PRTF  (R5),(R7),CC=ASA,TITLE=1  FAKE AS TITLE
NOECHO1  LA    R3,1
         ST    R3,VLINE      RESET CURRENT LINE NUMBER
         ICM   R15,IIII,SRTPAGE
         LA    R15,1(,R15)   INCREASE PAGE NUMBER
         STCM  R15,IIII,SRTPAGE
         B     E15LOOP       GET ANOTHER LINE
E15TOPS  A     R3,TMARGIN    GET TITLE LINE NUMBER AGAIN
         TM    FLAGS,FGECHO  ECHO THE INPUT ?                    86307
         BNO   E15LOOP       NO                                  86307
         C     R3,=F'3'      WHICH TITLE LINE IS THIS ?
         BH    E15PRNT       PAST SPECIALS - JUST PRINT
         BE    E15TOP3
         PRTF  (R5),(R7),CC=ASA,TITLE=2  FAKE AS TITLE
         B     E15LOOP       GET ANOTHER
E15TOP3  PRTF  (R5),(R7),CC=ASA,TITLE=3  FAKE AS TITLE
         B     E15LOOP       GET ANOTHER
E15PRNT  TM    FLAGS,FGECHO  ECHO THE INPUT ?                    86307
         BNO   E15LOOP       NO                                  86307
         PRTF  (R5),(R7),CC=ASA
         B     E15LOOP       GET ANOTHER
NOTTOP   CLI   0(R5),C'+'    OVERPRINT ?
         BE    E15PRNT       YES; JUST IGNORE IT
         LA    R3,1          SET FOR SINGLE SPACING
         CLI   0(R5),C' '    SINGLE ?
         BE    E15VSPAC      YES; COUNT
         LA    R3,3          ASSUME TRIPLE-SPACE                 86307
         CLI   0(R5),C'-'    TRIPLE ?                            86307
         BE    E15VSPAC      YES                                 86307
         BCTR  R3,0          SET FOR DOUBLE                      86307
         CLI   0(R5),C'0'    DOUBLE ?
         BE    E15VSPAC      YES
         BCTR  R3,0          ELSE FORCE SINGLE SPACE (WRONG ?)   86307
E15VSPAC A     R3,VLINE      GET CURRENT LINE NUMBER
         ST    R3,VLINE
         S     R3,TMARGIN    DOING TOP TITLES ?
         BNP   E15TOPS       YES; JUST SKIP THIS
         TM    FLAGS,FGECHO  ECHO THE INPUT ?                    86307
         BNO   NOECHO2       NO                                  86307
         PRTF  (R5),(R7),CC=ASA
NOECHO2  C     R3,VSIZE      IN TEXT AREA ?
         BH    E15LOOP       NO; SKIP BOTTOM TITLES
         L     R2,LMARGIN    GET LEFT MARGIN
         SR    R7,R2         ALLOW FOR LEFT MARGIN
         BNP   E15LOOP
         AR    R5,R2         DITTO
         MIN   R7,HSIZE      DON'T GO PAST RIGHT MARGIN
         LA    R6,1          SET BXLE INCREMENT
         AR    R7,R5         MAKE LAST BYTE +1
         SR    R7,R6         POINT TO LAST VALID BYTE
         SPACE 1
E15WORD  LR    R8,R7         GET LAST VALID BYTE
         SR    R8,R5         SUBTRACT START POSITION
         BM    E15LOOP       DONE WITH THIS LINE
         LA    R1,1(,R7)     SET NON-HIT END POSITION
         EX    R8,SKIPTRT    LOOK FOR NEXT BYTE TO PROCESS
         CR    R1,R7         ANYTHING LEFT TO DO ?
         BH    E15LOOP       NO; GET ANOTHER LINE
         LR    R5,R1         SET NEXT SCAN POSITION
         LA    R1,1(,R7)     SET NEW END SCAN ADDRESS            86307
         LR    R8,R7         GET END ADDRESS
         SR    R8,R5         SET RESIDUAL LENGTH-1
         SLR   R2,R2
         CLI   0(R5),C'"'    LEADING QUOTE ?                     86307
         BE    TRYSTRNG      YES; LOOK FOR MATCHING END          86307
         CLI   0(R5),C''''   ALTERNATE ?                         86307
         BNE   UNSTRING      NO; JUST LOOK FOR OTHER END         86307
TRYSTRNG STM   R1,R8,STRSAVE SAVE REGISTERS                      86307
         XC    STRWORK,STRWORK  ALLOW ALL TEXT BYTES             86307
         SLR   R15,R15                                           86307
         IC    R15,0(,R5)    GET KIND OF QUOTE                   86307
         STC   R15,STRWORK(R15)  SET QUOTE'S PLACE               86307
RESTRING LA    R5,1(,R5)     SET SCAN PAST STARTING QUOTE        86307
         LA    R1,0(,R7)     SET NEW END SCAN ADDRESS            86307
         LR    R8,R7         GET END ADDRESS                     86307
         SR    R8,R5         SET RESIDUAL LENGTH-1               86307
         BM    UNSTRUNG      ERROR ?                             86307
         SLR   R2,R2                                             86307
         EX    R8,QUOTETRT                                       86307
         LA    R1,1(,R1)     POINT PAST MATCHING QUOTE           86307
         L     R5,STRSAVE+(5-1)*4  RELOAD SCAN STARTER           86307
         BZ    UNSTRUNG      NO END IN SIGHT                     86307
         BH    HISTRUNG      END ON LAST BYTE OF LINE            86307
         CLI   0(R1),C' '    PROPER END ?                        86307
         BE    HISTRUNG      YES                                 86307
         CLI   0(R1),C'.'    ALTERNATE ?                         86307
         BE    HISTRUNG                                          86307
         CLI   0(R1),C','    OTHER ALTERNATE                     86307
         BE    HISTRUNG                                          86307
         CLI   0(R1),C';'    STILL ANOTHER ?                     86307
         BE    HISTRUNG                                          86307
         CLC   0(1,R1),0(R5)  DOUBLED QUOTE ?                    86307
         BNE   UNSTRUNG      NO                                  86307
         LR    R5,R1         SET RESTART SCAN POINT              86307
         B     RESTRING      AND RESTART                         86307
UNSTRUNG LM    R1,R8,STRSAVE RELOAD REGISTERS                    86307
UNSTRING EX    R8,WORDTRT    GET END OF THIS WORD                86307
HISTRUNG MVC   SRTKEY,BLANKS
         MVC   SRTWORD,BLANKS
         LR    R3,R1         COPY HIT ADDRESS
         SR    R3,R5         GET LENGTH OF WORD
E15EDIT  LA    R14,0(R3,R5)  POINT PAST LAST BYTE                86307
         SH    R14,=H'2'     LAST TWO BYTES                      86307
         CR    R14,R5        TOO SHORT ?                         86307
         BL    CHOPPED       TOO BAD                             86307
         CLC   0(1,R5),1(R14)  FIRST=LAST BYTE ?                 86307
         BNE   NOFRAME       NO                                  86307
         CLI   0(R5),C'"'    QUOTE ?                             86307
         BE    UNQUOTE       YES                                 86307
         CLI   0(R5),C''''   ALTERNATE QUOTE ?                   86307
         BE    UNQUOTE       YES                                 86307
         CLI   0(R5),C'*'    STILL OTHER FORM ?                  86307
         BNE   NOFRAME       NO                                  86307
UNQUOTE  LA    R5,1(,R5)     ADVANCE START                       86307
         SH    R3,=H'2'      FIX LENGTH                          86307
         B     E15EDIT                                           86307
NOFRAME  CLI   1(R14),C's'   ARE WE POSSESSIVE ?                 86307
         BNE   NOTPOSS       NO                                  86307
         CLI   0(R14),C''''  TRULY ?                             86307
         BE    CUTPOSS       YES; CHOP IT                        86307
         CLI   0(R14),C'A'   UPPER CASE/NUMERIC + L.C. S ?       86307
         BL    NOTPOSS       NO                                  86307
         B     CHOP1         JUST DROP THE S                     86307
CUTPOSS  SH    R3,=H'2'      CHOP OFF                            86307
         B     CHOPPED                                           86307
NOTPOSS  CLI   1(R14),C'.'   TRAILING PERIOD ?                   86307
         BE    CHOP1         YES; CLIP IT                        86307
         CLI   1(R14),C''''  TRAILING APOSTROPHE ?               86307
         BNE   CHOPPED       NO; NOTHING ELSE FOR NOW            86307
         CLC   =C'X''',0(R5)   X'....' FORM ?                    86307
         BE    CHOPPED       YES; LEAVE AS IS                    86307
         CLC   =C'x''',0(R5)   LOWER CASE X'...' ?               86307
         BE    CHOPPED       YES; LEAVE                          86307
CHOP1    BCTR  R3,0          ADJUST LENGTH                       86307
CHOPPED  CH    R3,=H'1'      TOO SHORT ?                         86307
         BL    CHOPCHOP      DO ANOTHER                          86307
         BH    HOCHOP                                            86307
         CLI   0(R5),C'A'    SINGLE-BYTE NON-ALPHA ?             86307
         BNL   HOCHOP        NO; KEEP IT                         86307
CHOPCHOP LR    R5,R1         SET SCAN RESTART                    86307
         B     E15WORD       SKIP THIS ONE                       86307
HOCHOP   MIN   R3,=A(KEYLEN)  TRUNCATE TO MAXIMUM
         STC   R3,SRTLEN     SET IN RECORD
         BCTR  R3,0          SET EXECUTE LENGTH
         EX    R3,WORDMVC    MOVE TO SORT RECORD
         OC    SRTKEY,SRTWORD  UPPER CASE FOR SORTING
         LR    R5,R1         SET NEW SCAN POSITION
         ICM   R0,IIII,SOPLOW  ANY SELECTION TO DO ?
         BZ    WORDPUT       NO; JUST PUT IT OUT
         SERVCALL BINLK,SOPLOW  DO BINARY LOOK-UP
         CH    R15,=H'4'     FOUND OR NOT ?
         BL    WORDFUND      FOUND
         BH    WORDPIT       ERROR
         TM    FLAGS,FGEX    NOT FOUND - WAS EXCLUDE REQUESTED ?
         BNZ   WORDPUT       EXCLUDE AND NOT FOUND - PROCESS
         B     E15WORD       ELSE TRY ANOTHER
WORDFUND TM    FLAGS,FGEX    FOUND - WAS EXCLUDE REQUESTED ?
         BZ    WORDPUT       FOUND AND INCLUDE - PROCESS
         B     E15WORD       ELSE TRY ANOTHER
WORDPIT  OI    RETCH+L'RETCH-1,12  SET ERROR
WORDPUT  BAL   R2,E15PUT
         B     E15WORD       LOOK FOR ANOTHER WORD
         SPACE 1
SKIPTRT  TRT   0(0,R5),TRTSKIP
WORDTRT  TRT   0(0,R5),TRTWORD
QUOTETRT TRT   0(0,R5),STRWORK                                   86307
WORDMVC  MVC   SRTWORD(0),0(R5)
         SPACE 1
E15PUT   STM   R1,R9,E15PARM   SAVE FOR RECURSION
         LA    R15,12        SET INSERT CODE
         B     E15PDCOM      RETURN TO CALLER VIA SORT
E15EOF   INPCLOSE ,          FREEMAIN AND CLOSE
         MVI   SRTREC,X'FF'  SET HIGH-VALUE GARBAGE
         MVC   SRTREC(SRTSIZE-1),SRTREC  IN ENTIRE RECORD
         LA    R15,8         FINAL RETURN TO SORT
E15PDCOM LA    R1,SRTREC     GET RECORD TO PASS
         L     R13,4(,R13)
         LM    R2,R12,28(R13)
         L     R14,12(,R13)
         BR    R14           RETURN
         EJECT ,
         DROP  ,
E35      STM   R14,R12,12(R13)
         LR    R12,R15       GET BASE
         USING E35,R12
         LM    R10,R11,WKBASE35  LOAD THE COMMON BASE REGISTERS
         USING COMMWORK,R10
         USING SAVE,R11
         LA    R9,SORTSAVE
         ST    R9,8(,R13)
         ST    R13,4(,R9)
         LR    R13,R9
         ICM   R7,IIII,0(R1)   GET THE NEXT RECORD ADDRESS
         TM    FLAGS,FG35ONE  FIRST TIME EVER ?
         BNZ   RAT35         NO
         OI    FLAGS,FG35ONE
         XC    SRTREC(SRTSIZE),SRTREC  CLEAR 'PREVIOUS' RECORD
         PRTLIST HEADER,TITLE=1
         PRTF  ' ',CC=NO,TITLE=2                                 86307
         PRTF  ' ',CC=NO,TITLE=3                                 86307
         PRTF  ' ',CC=NO,TITLE=4                                 86307
         PRTF  ' ',CC=NO,TITLE=5                                 86307
         PRTF  ' ',CC=NO,TITLE=6                                 86307
         PRTF  ' ',CC=NO,TITLE=7                                 86307
         LTR   R7,R7         GET RECORD ADDRESS
         BZ    E35NULL
         CLI   0(R7),X'FF'   'FINAL' RECORD ?
         BNE   RAT35         NO
E35NULL  PRTF  '0***** NO RECORDS PASSED TO E35 EXIT *****',DEV=(1,2)
         OI    RETCH+L'RETCH-1,8  SET ERROR
         B     E35FINAL
RAT35    LTR   R7,R7         FINAL ENTRY ?
         BZ    E35FINAL      YES; QUIT
         CLC   SRTKEY,SRTKEY-SRTREC(R7)  SAME KEY ?
         BE    SAMEKEY       YES
         MVC   SRTWORD,SRTWORD-SRTREC(R7)  COPY NEW WORD
         LA    R2,SRTWORD+L'SRTWORD-2
         LA    R4,2
         LA    R5,SRTWORD+1
         LNR   R4,R4
DROPDOTS CLC   BLANKS(2),0(R2)  TWO TRAILING BLANKS ?
         BNE   DROPEND       NO
         MVI   1(R2),C'.'    MAKE A DOT
         BXH   R2,R4,DROPDOTS
DROPEND  PRTLIST NEWKEY      PRINT KEY ON NEW LINE
         B     NEWPAGE
SAMEKEY  CLC   SRTPAGE,SRTPAGE-SRTREC(R7)  SAME PAGE AGAIN ?
         BE    SAMEPAGE      YES; NO NEED TO PRINT AGAIN
NEWPAGE  MVC   SRTREC(SRTSIZE),0(R7)  COPY THE RECORD
         PRTLIST REFPAGE     PRINT THE PAGE REFERENCE
SAMEPAGE LA    R15,4         GO FOR MORE
         B     E35BACK
E35FINAL LA    R15,8         SET FINAL RETURN
E35BACK  L     R13,4(,R13)
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE 1
NEWKEY   FDOPT IND=0         RESET INDENT
         FDPRT SRTWORD,KEYLEN,PAD,NL,LEN=KEYLEN+1
         FDPRT *END
REFPAGE  FDOPT IND=PAGLEN+(KEYLEN+2-(KEYLEN+2)/PAGLEN*PAGLEN)    86307
         FDPRT SRTPAGE,I,PAD,LEN=PAGLEN
         FDPRT *END
HEADER   FDOPT NL,CC=C'#'     AUTO PAGE/ETC.
         FDPRT 'INDEX'
         FDPRT *END
         EJECT ,
COMMWORK DS    0D            COMMONLY ADDRESSABLE WORK AREA
WKBASE15 DS    0A
WKBASE35 DC    A(COMMWORK,0)
SUMPRINT PRTWORK SUMPRINT,SYSTERM      DEV=2 SUMMARY FILE
SYSPRINT PRTWORK SYSPRINT,INDEX,TITLE=3   DEV=1 OUTPUT LISTING
SYSUT1   INPWORK SYSUT1,INPUT,WIDTH=0,EDIT=128,EODAD=E15EOF
INCLUDE  INPWORK INCLUDE,SELECT,WIDTH=0,EDIT=128,EODAD=EOFDATA
EXCLUDE  INPWORK EXCLUDE,OMIT,WIDTH=0,EDIT=128,EODAD=EOFDATA
SRTREC   DS    0D
SRTKEY   DS    CL(KEYLEN)
SRTPAGE  DS    FL4           PAGE REFERENCED ON
SRTLEN   DS    X             LENGTH OF WORD
SRTWORD  DS    CL(KEYLEN)    WORD AS FOUND (MINOR EDITING)
SRTSIZE  EQU   *-SRTREC      SIZE OF RECORD
         SPACE 1
         CNOP  2,4           ALIGN FOR OLD OLD SORT
SORTPARM DC    Y(SORTFI-SORTSTAR)
SORTSTAR DC    A(SORTFI,SORTRE,SORTRE,BLANKS,E15,E35)
SORTSIZE DC    A(256*1024)
         DC    X'FF00',C'AP'  MESSAGE DESTINATION - SYSOUT
SORTFI   DC    C' SORT FIELDS=(1,'
         EBCDIG (L'SRTKEY+L'SRTPAGE),3   LENGTH OF KEY
         DC    C',A),FORMAT=CH'
SORTRE   DC    C' RECORD TYPE=F,LENGTH='
         EBCDIG SRTSIZE,4    LENGTH OF ONE SORT RECORD
BLANKS   DC    CL44' '
         SPACE 1
TRTSKIP  DC    256AL1(0)     SKIP EVERYTHING
         STOP  A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z
         STOP  a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
         STOP  0,1,2,3,4,5,6,7,8,9,@,#,$
         ORG   TRTSKIP+C''''
         DC    AL1(4)
         ORG   TRTSKIP+C'"'
         DC    AL1(4)
         ORG   ,
TRTWORD  DC    256AL1(4)     STOP AT EVERYTHING EXCEPT...
         WORD  A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z
         WORD  a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
         WORD  0,1,2,3,4,5,6,7,8,9,@,#,$
         WORD  -,/           PERMIT IF EMBEDDED, NOT LEADING
         WORD  .             KEEP DSNAMES CONTIGUOUS             86307
         ORG   TRTWORD+0     ALLOW HEX ZERO                      86307
         DC    AL1(0)          AS SIGNIFICANT BLANK              86307
         ORG   TRTWORD+C''''
         DC    AL1(0)        I'M POSSESSIVE ABOUT THIS
         ORG   TRTWORD+C'"'  BUT DON'T QUOTE ME ON THAT
         DC    AL1(0)
         ORG   ,
         SPACE 1
INEXSECT DSECT ,
INEXKEY  DS    CL(KEYLEN)
INEXLEN  DS    X             LENGTH OF KEY
INEXSIZE EQU   *-INEXKEY
         SPACE 1
SAVE     DSECT ,             SAVE/WORK AREA
SORTSAVE DS    18A           SECONDARY SAVE AREA
E15PARM  DS    9A            TERTIARY SAVE AREA
DB       DS    D             WORK AREA
@SERVICE DS    A
@PRINTER DS    A
@INPREAD DS    A
PAGEONE  DS    F             TRIGGER PAGE NUMBER                 87231
PAGENOW  DS    F             CURRENT PAGE NUMBER                 87231
STRSAVE  DS    8F            STRING SCAN SAVE AREA               86307
STRWORK  DS    XL256         STRING SCAN TRT AREA                86307
         SERVSORT DSECT=NO,COO=0,COL=KEYLEN,LEN=INEXSIZE
SOPLOOK  DS    A(SRTKEY)     BINARY LOOK-UP REQUEST ADDRESS
LMARGIN  DS    F             LEFT MARGIN
HSIZE    DS    F             HORIZONTAL SIZE (AFTER MARGIN)
TMARGIN  DS    F             TOP MARGIN
VSIZE    DS    F             VERTICAL SIZE (AFTER TOP MARGIN)
VLINE    DS    F             CURRENT LINE NUMBER
RETCH    DS    H             RETURN CODE
FLAGS    DS    X             PROCESSING FLAGS
FGEX     EQU   X'80'           EXCLUSION LIST REQUESTED
FGLIST   EQU   X'20'           LIST REQUESTED                    87231
FGTRIG   EQU   X'10'           LIST TRIGGER PASSED               87231
FGECHO   EQU   X'30'           LIST INPUT IF ON (DFLT)           87231
FG35ONE  EQU   1               FIRST TIME IN EXIT
SAVEEND  EQU   *
         SPACE 1
         PRINT &PRTSYS
CVTDSECT DSECT ,
         CVT   DSECT=YES
         IHACDE ,
         DCBD  DEVD=DA,DSORG=PS
         END   ,
