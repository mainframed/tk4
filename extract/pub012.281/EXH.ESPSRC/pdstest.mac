PDSTEST  TITLE 'P D S T E S T  - TEST FOR PDS ERRORS (BATCH) '
* FROM CBT FILE 316
*-$DOC@---------------------------------------------------------------*
*                                                                     *
*        THIS PROGRAM WILL TEST A LOAD MODULE PDS FOR INTEGRITY.      *
*        IT WILL RUN THE DIRECTORY ISSUING A 'LOAD' AGAINST EACH      *
*        MEMBER AND IF THE LOAD ABENDS, TRAP THE ABEND AND TELL       *
*        YOU ABOUT IT. NICE TO KNOW IF YOU HAVE DAMAGED LOAD MODULES  *
*        IN YOUR PRODUCTION LIBRARIES OR SYSTEM LIBRARIES. WE RUN IT  *
*        ONCE A WEEK ON ALL SYSTEM LIBRARIES. YOU THEN WILL NOT GET   *
*        GET NASTY SURPRISES A MONTH FROM NOW ( S706'S ).  CODE       *
*        WAS ORGINIALLY WRITTEN BY UCLA AND WE HAVE CONVERTED IT      *
*        FROM THE VERSION THAT RAN ON OS/MVT TO MVS ( WHAT LITTLE     *
*        HAD TO BE DONE ).                                            *
*                                                                     *
*        JIM MARSHALL                                                 *
*        AIR FORCE DATA SERVICES CENTER                               *
*        PENTAGON                                                     *
*        IBM OPERATING SYSTEM SUPPORT BRANCH                          *
*        CMIS - ROOM 1C1039                                           *
*        WASHINGTON D.C.  20330                                       *
*        (202) 695-1274                                               *
*                                                                     *
*        2 -3032'S                                                    *
*        MVS/JES2/TSO/SPF/VTAM/TCAM                                   *
*        MSS 3850 - IBM 3800                                          *
*        INQUIRE  ( BOO-HISS )                                        *
*                                                                     *
*  CHANGE LOG:                                                        *
*                                                                     *
*    28 JULY 1981 - CLEANED UP THE CODE FROM UCLA, THEM COLLEGE       *
*                   KIDS LOVE TO CODE THEIR OWN MACROS. WORKS ON      *
*                   MVS NOW.                                          *
*    07 SEPT 1983 - FIX TO CHECK FOR ONLY DD'S PREFIXED WITH @        *
*                   (LIONEL DYCK, ROCKWELL INTERNATIONAL)             *
*                                                                     *
*    29 OCT  1984 - CHECK FOR IEFRDER DD TO SUPPORT STARTED TASK.     *
*                   MOVED IDENTIFY MACRO SECTION BEFORE ATTACH        *
*                   TO PREVENT IEA703I 806-4 LOOP ON ENTRY POINT      *
*                   MEMCHECK.                                         *
*                   ADDED ERRET TO LOAD MACRO TO INTERCEPT ERRORS     *
*                   WITH LESS OVERHEAD AND TO CAPTURE LOAD ABEND      *
*                   AND REASON CODE.                                  *
*                   ADDED TTIMER CANCEL SO THAT THE 15 SECONDS        *
*                   FOR THE STIMER APPLIES TO EACH "LOADED" LOAD      *
*                   MODULE, RATHER THAN THE ENTIRE LIBRARY.           *
*                   (JEFF SILVERSMITH, ROCKWELL INTERNATIONAL)        *
*                                                                     *
*     7 FEB  2010 - MUST BE RUN AUTHORIZED TO AVOID UNNECESSARY       *
*                   ABENDS ON SYSTEM LIBRARIES WITH AUTHORIZED PGMS.  *
*                                                                     *
*     4 DEC  2011 - BYPASS LOAD FOR NON-EXECUTABLE MODULES AND        *
*                   NON-LOAD MEMBERS.               G. POSTPISCHIL    *
*                   MAJOR MODIFICATIONS TO USE LOCAL FACILITIES.      *
*                   SET RETURN CODE ON ALL WARNINGS AND ERRORS.       *
*                   CODE ADDED TO PROCESS NON-LOAD MODULE PARTITIONED *
*                   DATA SETS AND MEMBERS (E.G., SYSCATLG IN NUCLEUS) *
*                                                                     *
*-$DOC$---------------------------------------------------------------*
         COPY  OPTIONGB                                         GP11345
         SPACE 1
         SYSPARM LIST=YES    CUSTOMIZATION                      GP11345
         SPACE 1
         PUNCH '  ORDER PDSTEST(P) '   DUMPS EASIER TO READ     GP11345
         EJECT
**********************************************************************
*                                                                    *
*  PDSTEST                                                           *
*                                                                    *
*  TESTS ALL MEMBERS IN DIRECTORY OF DATASET SPECIFIED BY ANY        *
*  DD CARDS OTHER THAN SYSPRINT FOR ERRORS BY TRYING TO LOAD AND     *
*  DELETE THEM.                                                      *
*  A LIST IS PRINTED OF ALL SUCH BAD MEMBERS, THE ABEND CODE         *
*  RECEIVED DURING THE LOAD/DELETE, AND THE LIBRARY DSN.             *
*                                                                    *
*  TO GET A FULL LISTING OF ALL MEMBERS FOUND IN THE LIBRARY ALONG   *
*  WITH THOSE WITH ERRORS, CODE PARM=LIST OR PARM=L.  TO JUST GET    *
*  A LIST OF THOSE WITH ERRORS, CODE PARM=NOLIST OR PARM=N OR        *
*  LEAVE OUT THE PARM PARAMETER (IE:  PARM=NOLIST IS DEFAULT)        *
*                                                                    *
*  MACROS USED:     SAVE, OPEN, RDJFCB, READ, CHECK, LOAD            *
*                   DELETE, PUT, CLOSE, RETURN, IEFJFCBN,            *
*                   WAIT, POST, ATTACH, DETACH,                      *
*                   STIMER, ABEND, IDENTIFY, IEFTIOT1, IEFUCBOB      *
*                                                                    *
*                                                                    *
*  PROGRAMMER  -  VIC TOLOMEI                                        *
*                                                                    *
*                                                                    *
*  LAST UPDATE - 6/7/73                                              *
*                                                                    *
**********************************************************************
         SPACE 5
PDSTEST  PGMHEAD ZERO31,BASE=R12,AM=31,RM=24,BNDRY=PAGE         GP11345
         LA    R11,SAVEWORK  COMMON WORK AREA                   GP11345
         DROP  R13                                              GP11345
         USING SAVEWORK,R11                                     GP11345
         SPACE 1
*  PICK UP THE PARM
         L     R1,0(,R1)                PICK UP PARMLIST PTR
         OC    0(2,R1),0(R1)            WAS THERE A PARM?
         BZ    NOPARM                   NO - PARM=N THEN
         CLI   2(R1),C'L'               PARM=L?
         BNE   NOPARM                   NO - PARM=N
         OI    PROCFLAG,FGLISTM         YES - MAKE IT PARM=L    GP11345
         SPACE 1
NOPARM   SERVINIT ,          INITIALIZE @SERVICE ROUTINES       GP11345
         SERVLOAD @PRINTER   LOAD PRINTER ROUTINE               GP11345
         PRTOPEN SYSPRINT,OPT=(WTO,ABEND)                       GP11345
         SPACE 1
         MVC   DCBPO(PATDCBLN),PATPO   INITIALIZE DCBS          GP11345
         LA    R1,XJFCB      GET MY JFCB ADDRESS                GP11345
         ST@   R1,EXLST,MVI=X'87'  COMPLETE EXIT LIST           GP11345
         LA    R1,EXLST                                         GP11345
         STCM  R1,7,DCBPS+DCBEXLSA-IHADCB                       GP11345
         LA    R1,DCBPS      GET DIRECTORY DCB                  GP11345
         ST@   R1,OCDIR,MVI=X'80'  OPEN/CLOSE LIST              GP11345
         LA    R1,DCBPO      GET MEMBER DCB                     GP11345
         ST@   R1,OCPO,MVI=X'80'   OPEN/CLOSE LIST              GP11345
         SPACE 1
*---------------------------------------------------------------------*
*   THIS PROGRAM REQUIRES AUTHORIZATION - ENSURE WE HAVE IT           *
*---------------------------------------------------------------------*
         TESTAUTH FCTN=1     AUTHORIZED ?                       GP11345
         BXLE  R15,R15,OPOUT   YES; PROCEED                     GP11345
         PRTDATA 'THIS VERSION OF PDSTEST MUST BE AUTHORIZED'   GP11345
         SERVTERM ,          CLOSE AND FREE                     GP11345
         ABEND 047           ELSE COMPLAIN ABOUT IT             GP11345
         SPACE 1
*  OPEN PRINT FILE
         SPACE 1
OPOUT    PRTF  HEADER1,TITLE=1    IDENTIFY PROGRAM              GP11345
         EJECT
*  THE PRINT FILE IS OPEN.
*  FIND THE TIOT AND GET ALL DDNAMES WHICH ARE NOT SYSPRINT AND
*  OPEN THEM FOR PDSTEST PROCESSING
         SPACE 2
         LA    R6,@TIOT                                         GP11345
         EXTRACT (R6),'S',FIELDS=(TIOT)  RRN/PRC 23OCT79        GP11345
         L     R6,@TIOT                 RRN/PRC 23OCT79         GP11345
         LA    R5,24                    FIRST OFFSET FOR DDNAME
         SPACE 2
*  BRING UP THE SUBTASK WHICH WILL DO ALL THE ACTUAL LOADING/DELETING
*  AND LET IT SIT THERE WHILE I FIND IT A MEMBER TO WORK ON.
         SPACE 2
         IDENTIFY EPLOC=X,ENTRY=MEMCHECK CREATE DUMMY CDE FOR SUBTASK
         SPACE 1
*  SCAN THE TIOT FOR APPLICABLE DDNAMES
         SPACE 1
         USING TIOENTRY,R6   DECLARE THE DD ENTRY               GP11345
DDLOOP   AR    R6,R5              PTR TO DDNAME IN TIOT
         ICM   R5,1,TIOELNGH      GET LENGTH OF DATA FIELD      GP11345
         BZ    GOAWAY                   YES - END PDSTEST PROCESSING
         TM    TIOESTTA,TIOSLTYP  FREED DYNAMIC ENTRY ?         GP11345
         BNZ   DDLOOP               YES; IGNORE                 GP11345
         CLI   TIOEDDNM,C'@'      DDNAME START WITH @ ?     *LBD*
         BE    CANDD               YES - LETS DO IT          *LBD*
         CLC   =CL8'IEFRDER ',TIOEDDNM LOOK FOR IEFRDER DD   *JSS*
         BE    CANDD                    YES - LETS DO IT     *JSS*
         CLC   =C'SYSLIB',TIOEDDNM SYSLIB TYPE ?                 86031
         BE    CANDD         YES; PROCESS                        86031
         CLC   =C'SYSUT',TIOEDDNM  SYSUT TYPE ?                  86031
         BE    CANDD         YES                                 86031
         CLC   =C'PDS',TIOEDDNM    PDS----- ?                    86031
*NEXT*   BE    CANDD                                             86031
         BNE   DDLOOP              NO - KEEP SCANNING        *LBD*
         SPACE 1
CANDD    L     R15,@TIOT     GET TIOT ADDRESS BACK              GP11345
         LA    R15,24(,R15)  FIRST DD ENTRY                     GP11345
CANDDLP  CR    R15,R6        REACHED CURRENT ENTRY ?            GP11345
         BNL   PASSDD          YES; USE IT                      GP11345
         CLC   4(8,R6),4(R15)     DUPLICATE DD NAME ?           GP11345
         BE    DUPDD                                            GP11345
         IC    R5,0(,R15)    POINT TO NEXT                      GP11345
         AR    R15,R5                                           GP11345
         B     CANDDLP       TRY AGAIN                          GP11345
         SPACE 1                                                GP11345
DUPDD    OICC  12            USER ERROR                         GP11345
         MVC   MSGDUPDD,4(R6)  COPY DDN                         GP11345
         PRTF  MSGDUP                                           GP11345
         B     BYEDD                                            GP11345
         SPACE 1
PASSDD   ICM   R3,7,TIOEFSRT      LOOK AT UCB                   GP11345
         BZ    DDNOTDA              NONE - FAIL                 GP11345
         USING UCBOB,R3           DECLARE IT                    GP11345
         CLI   UCBTBYT3,UCB3DACC  DASD ?                        GP11345
         BE    OKDD                 YES; OPEN                   GP11345
DDNOTDA  MVC   MSGNDADD,TIOEDDNM  PROPAGATE DD NAME             GP11345
         PRTF  MSGNDA             TELL USER                     GP11345
         OICC  12            USER ERROR                         GP11345
         B     BYEDD                                            GP11345
         SPACE 1
OKDD     MVC   DCBPS+DCBDDNAM-IHADCB(8),TIOEDDNM MOVE NAME      GP11345
         MVC   DCBPO+DCBDDNAM-IHADCB(8),TIOEDDNM MOVE NAME      GP11345
         ZI    PROCFLAG,FGBDMEM         NO BAD MEMBERS YET      GP11345
         SPACE 1
         OPEN  MF=(E,OCDIR)  OPEN THE PS FILE FOR READING       GP11345
         TM    DCBPS+DCBOFLGS-IHADCB,DCBOFOPN   DID PS OPEN?    GP11345
         BO    PSOPENED                 YES - GO ON
         MVICC 16                       SET MAJOR ERROR         GP11345
         B     PGMEXIT                  EXIT WITH RETURN CODE   GP11345
         DROP  R6                                               GP11345
         SPACE 1
PSOPENED RDJFCB MF=(E,OCDIR)            GET THE JFCB            GP11345
         SPACE 1
         MVC   DSN,JFCBDSNM-JFCB+XJFCB DSN OK - MOVE DSN TO MSG GP11345
         PRTF  STARTMSG      SAY WHAT LIBRARY WE ARE PROCESSING GP11345
         CLI   JFCDSORG-JFCB+XJFCB,JFCORGPO   IS THIS PARTITIONED?
         BNE   DUMBDSN                  NO - HOW CAN I LOAD THAT???
         CLI   JFCRECFM-JFCB+XJFCB,JFCUND  DSORG=PO BUT RECFM=U?
         BE    ITSAPDS                  YES - GO ON
         OI    PROCFLAG,FGLBSAM   USE BSAM ON ALL MEMBERS       GP11345
         B     ITSAPDS       USE BSAM READ IF NOT LOAD MODULE   GP11345
DUMBDSN  PRTF  NOTPO         SAY DATASET IS NOT PO              GP11345
         OICC  8                        SET ERROR CODE          GP11345
         B     BYEDD                    GO GET ANOTHER DD CARD
         SPACE 1
ITSAPDS  BAL   R8,ATTACH                ATTACH THE SUBTASK
         LA    R0,OPENIT                TELL SUBTASK TO OPEN PO DCB
         POST  ECBSS,(0)                POST HIM
         WAIT  ECB=ECBMS                WAIT TILL HE'S DONE
         XC    ECBMS,ECBMS              CLEAR MY ECB FOR NEXT WAIT
         MVI   POSTCODE+3,NORM          NOW SAY JUST LOAD
         XR    R10,R10                  INTIALIZE COUNT OF MEMBERS
         EJECT
*  READ THE DIRECTORY AND LOAD/DELETE ALL GOOD MEMBERS UNTIL THE
*  DIRECTORY IS EXHAUSTED
         SPACE 2
MLOOP    LA    R4,DCBPS      DCB ADDRESS                        GP11345
         LA    R3,DIRBUF     DIRECTORY BLOCK BUFFER             GP11345
         READ  DECB,SF,(R4),(R3),256,MF=E   GET DIRECTORY       GP11345
         CHECK DECB                     DONE?
         LH    R2,0(,R3)                LENGTH OF DIR USED
         LA    R0,2                     BLOCK OVERHEAD
         AR    R3,R0                    PT TO REAL PART OF DIRECTORY
         SR    R2,R0         RESIDUAL LENGTH                    GP11345
         BNP   MLOOP         IGNORE BAD BLOCK (WISE???)         GP11345
         XR    R4,R4                    CLEAR WORK REG (INDICATORS)
         SPACE 1
*  LOOK FOR THE MEMBERS NOW
         SPACE 1
         USING PDS2,R3                                          GP11345
MLOOP2   CLC   =XL8'FFFFFFFFFFFFFFFF',PDS2NAME  DIRECTORY END ? GP11345
         BE    EODAD                    YES - GO AWAY WITH GOOD STUFF
         MVC   MEMBER(8),PDS2NAME       SAVE FOR STAE JUST IN CASE
         LA    R10,1(,R10)              WE HAVE A MEM, UPDATE COUNT
         SPACE 1
*  WE HAVE A MEMBER.  PRINT IT OUT IF NECESSARY (PARM=L) AND THEN
*  GIVE THE SUBTASK A KICK AND GET HIM STARTED ON IT
         SPACE 1
         ZI    PROCFLAG,FGMBSAM   RESET NON-LOAD MODULE         GP11345
         TM    PROCFLAG,FGLISTM         WAS IT PARM=L?          GP11345
         BZ    CHECKMEM                 NO - GET SUBTASK GOING  GP11345
         MVC   TELLMEM,MEMBER           MOVE MEMBER NAME INTO MESSAGE
         PRTF  MEMMSG                   PRINT IT OUT            GP11345
CHECKMEM TM    PDS2INDC,PDS2NTTR  NUMBER OF TTRS IN USER FIELD  GP11345
         BNZ   HAVELOAD             YES; ASSUME LOAD MODULE     GP11345
         OI    PROCFLAG,FGMBSAM   USE BSAM TO READ              GP11345
         B     KICKHIM                                          GP11345
*OLD*    MVC   NLOADRSN,NLOADRNL  NOT LOAD MOD                  GP11345
*OLD*    B     COMMLOAD      SKIP                               GP11345
HAVELOAD TM    PDS2ATR1,PDS2EXEC  EXECUTABLE?                   GP11345
         BNZ   HAVEEXEC             YES                         GP11345
         MVC   NLOADRSN,NLOADRNX  NOT EXECUTABLE                GP11345
COMMLOAD MVC   NLOADMEM,MEMBER                                  GP11345
         PRTF  NLOADMSG                                         GP11345
         OI    PROCFLAG,FGBDMEM   SAY WE FOUND A BADDIE         GP11345
         OICC  4             SET WARNING                        GP11345
         B     MLOOP3        SKIP                               GP11345
         SPACE 1
HAVEEXEC DS    0H        *****OTHER CHECKS LATER*****           GP11345
         SPACE 1
KICKHIM  L     R0,POSTCODE              PICK UP THE POSTCODE
         XC    ECBMS,ECBMS              CLEAR OUT ECB TO PREVENT LOOP
         POST  ECBSS,(0)                KICK (SUBTASK START) WITH CODE
         WAIT  ECB=ECBMS                WAIT FOR HIS OK (MAIN START)
         SPACE 1
*  NOW THAT I HAVE CONTROL BACK, GET ANOTHER MEMBER
         SPACE 1
MLOOP3   IC    R4,PDS2INDC              PICK UP INDICATORS      GP11345
         N     R4,=X'0000001F'          MASK LENGTH             GP11345
         LA    R4,12(R4,R4)             LENGTH OF ENTRY         GP11345
         AR    R3,R4                    UPDATE DIRECTORY PTR
         SR    R2,R4                    DECREMENT AMNT LEFT COUNTER
         MVI   POSTCODE+3,NORM          TELL HIM JUST A LOAD
         BNP   MLOOP                    DONE WITH THIS BLK, GET ANOTHER
         B     MLOOP2                   GO ON SCANNING WITH THIS BLK
         TITLE 'P D S T E S T --- PROGRAM EXIT ROUTINES'
*  NORMAL END OF LIBRARY EXIT (END OF DIRECTORY)
         SPACE 2
EODAD    LA    R0,CLOSEIT               TELL SUBTASK TO CLOSE HIS PO...
         XC    ECBMS,ECBMS              CLEAR OUT ECB FOR WAIT
         POST  ECBSS,(0)                DCB USING THE POSTCODE
         WAIT  1,ECB=ECBMS              WAIT TILL HE IS DONE
         TM    PROCFLAG,FGBDMEM   WAS THERE A BAD MEMBER ?      GP11345
         BO    NASTY                    YES - GO ON
         PRTF  OKMSG                    GIVE THE GOOD NEWS      GP11345
NASTY    CVD   R10,DB                   MAKE NUMBER OF MEMBERS DEC
         MVC   NUMMEMS(5),EDMASK        MOVE EDIT MASK TO MSG
         ED    NUMMEMS-1(6),DB+5        SHOW NUMBER OF MEMBERS  GP11345
         PRTF  NUMMSG                   AND TELL THE MAN        GP11345
BYEDD    PRTF  ENDLMSG                  SAY GOOD-BYE TO THIS LIBRARY
         CLOSE MF=(E,OCDIR)             CLOSE BSAM PS READ DCB  GP11345
         B     DDLOOP                   AND COME BACK TO GET ANOTHER DD
         SPACE 5
*  ACTUAL I/O ERROR IN THE DIRECTORY ITSELF
         SPACE 2
SYNAD    PRTF  IOERMSG1                 SAY WE HAVE AN I/O ERROR
         PRTF  IOERMSG2                 AND SAY THAT WE ARE GIVING UP
         OICC  8                        SET ERROR CODE          GP11345
*  SO GIVE UP BY GOING TO 'GOAWAY'
         SPACE 5
GOAWAY   BAL   R8,DETACH                WE'RE ALL DONE - KILL SUBTASK
         PRTSPACE 2                     SKIP(2)                 GP11345
         ICM   R9,15,RETCODE      DID IT WORK SUCCESSFULLY ?    GP11345
         BZ    NORMEND              YES                         GP11345
         PRTDATA '==========   P D S T E S T   E N D E D   W I T H   R *
               C  ',(RETCODE,I,DEB,PAD),'  ========='           GP11345
         B     PGMEXIT                                          GP11345
NORMEND  PRTF  ENDMSG                   ALL DONE
PGMEXIT  SERVTERM ,          CLOSE AND FREE                     GP11345
         L     R9,RETCODE    GET RETURN CODE                    GP11345
         PGMEXIT RC=(R9)     RETURN TO CALLER                   GP11345
         TITLE 'P D S T E S T --- SUBTASK'
         DS    0D            MAKE IT A LITTLE EASIER *******DEBUG******
**********************************************************************
**********************************************************************
***                                                                ***
***          SUBTASK WHICH DOES THE LOADNG/DELETING                ***
***                                                                ***
**********************************************************************
**********************************************************************
         SPACE 2
         DROP  R12                      (HLASM SUPPORT)         GP11345
         USING MEMCHECK,R15
MEMCHECK L     R12,=A(PDSTEST)          ADDRBLTY
         DROP  R15
         USING PDSTEST,R12              (HLASM SUPPORT)         GP11345
         L     R11,0(,R1)    RESTORE WORK AREA ADDRESS          GP11345
MORESUB  WAIT  ECB=ECBSS                WAIT FOR MAIN'S GO-AHEAD
         MVI   ECBSS,0                  CLEAR ECB
         CLI   ECBSS+3,OPENIT   CHECK REQUEST
         BL    LOADIT        0.....JUST LOAD (FILE OPEN)
         BE    POOPEN        4.....OPEN THE FILE, THEN LOAD
         CLOSE MF=(E,OCPO)   8.....CLOSE THE FILE (PO)          GP11345
         B     POSTMAIN                 ALL DONE - GO BACK TO MAIN
*
POOPEN   OPEN  MF=(E,OCPO)              OPEN PO FOR LOAD        GP11345
         TM    DCBPO+DCBOFLGS-IHADCB,DCBOFOPN   DID IT WORK     GP11345
         BO    CHECKAUT                 YES - ON WITH SUBTASK   GP10038
         EX    0,*                      ABEND WITH 0C3 (WON'T HAPPEN)
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   IF WE ARE AUTHORIZED, NEED TO FIX DEB IN ORDER TO LOAD            *
*                                                                     *
*---------------------------------------------------------------------*
CHECKAUT TESTAUTH FCTN=1                                        GP10038
         BXH   R15,R15,POSTMAN2   NO; MAY FAIL ? 106-C          GP10038
         MODESET KEY=ZERO                                       GP10038
         LA    R1,DCBPO      POINT TO PDS                       GP10038
         USING IHADCB,R1     DECLARE IT                         GP10038
         L     R1,DCBDEBAD   LOAD DEB FOR STEPLIB               GP10038
         N     R1,=X'00FFFFFF'  FIX HIGH BYTE                   GP10038
         USING DEBBASIC,R1                                      GP10038
         OI    DEBFLGS1,DEBAPFIN  TURN ON APF LIBRARY BIT       GP10038
         DROP  R1                                               GP10038
         MODESET KEY=NZERO                                      GP10038
         B     POSTMAN2      CONTINUE                           GP10038
         SPACE 1
LOADIT   STIMER REAL,STIMEXIT,BINTVL==A(15*100)  15 SECS TO LOAD RIGHT
         TM    PROCFLAG,FGLBSAM+FGMBSAM     USE BSAM READ ?     GP11345
         BZ    GOLOAD          NO                               GP11345
         LA    R3,DATBUF     READ A DATA BLOCK                  GP11345
         LA    R4,DCBPO      READ DATA                          GP11345
READBSAM READ  DECB,SF,(R4),(R3),256,MF=E   GET DIRECTORY       GP11345
         CHECK DECB                     DONE?                   GP11345
         B     READBSAM      LOOP                               GP11345
         SPACE 1
* MAIN POSTED ME - TRY THE LOAD
GOLOAD   LOAD  EPLOC=MEMBER,DCB=DCBPO,ERRET=ERRLOAD   *JSS*
         B     DELETE                                 *JSS*
         SPACE 1
SUBEOD   TM    PROCFLAG,FGLBSAM+FGMBSAM     BSAM MODE ?         GP11345
         BNZ   POSTMAIN        YES; GOOD MEMBER READ            GP11345
         LA    R1,3597       SET UNEXPECTED EOD                 GP11345
         SR    R15,R15       DROP THROUGH                       GP11345
         SPACE 1
* REG 1 - ABEND CODE ; REG 15 - REASON CODE           *JSS*
ERRLOAD  ST    R1,LOADR1                              *JSS*
         SLL   R1,8           SET UP FOR UNPK         *JSS*
         ST    R15,LOADR15                            *JSS*
         UNPK  DB(5),LOADR1+2(3)  GET ABEND CODE      *JSS*
         MVC   CODE(3),DB+1   MOVE TO MSG             *JSS*
         MVI   CODE+3,C'-'                            *JSS*     GP11345
         UNPK  DB+1(3),LOADR15+3(2) GET REASON        *JSS*
         MVI   DB,X'F0'                               *JSS*
         TR    DB(3),TRTAB        HEX                 *JSS*
         MVC   CODEX(3),DB        HEX REASON          *JSS*
         PRTF  BADMSG        TELL EVERYONE THE BAD MEMBER *JSS*
         OI    PROCFLAG,FGBDMEM   SAY WE FOUND A BADDIE *JSS*   GP11345
         OICC  4                                                GP11345
DELETE   DS    0H                                     *JSS*
         DELETE EPLOC=MEMBER            IT WORKED - SO GET RID OF IT
POSTMAIN TTIMER CANCEL        CANCEL STIMER           *JSS*     GP11345
POSTMAN2 DS    0H
         POST  ECBMS,0                  DONE - WAKE MAIN TO GET ANOTHER
         B     MORESUB                  START ALL OVER FOR NEW MEMBER
         SPACE 9
*  SUBTASK ABEND EXIT WHEN BAD MEMBER IS FOUND
         SPACE 2
         PUSH  USING                                            GP11345
         DROP  R12                                              GP11345
         USING EXIT,R15
EXIT     L     R12,=A(PDSTEST)          GET ADDRESSABILITY
         POP   USING                                            GP11345
         LR    R9,R14                   SAVE RET ADDR (FOR PUT)
         UNPK  CODE(7),ECBSC+1(4)       GET ABEND CODE FROM ECB
         TR    CODE(6),TRTAB            HEX
         MVI   CODE+6,C' '
         PRTF  BADMSG                   TELL EVERYONE THE BAD MEMBER
         OICC  4                                                GP11345
         OI    PROCFLAG,FGBDMEM   SAY WE FOUND A BADDIE *JSS*   GP11345
*
*  WAKE UP MAIN TASK TO GET ANOTHER MEMBER WHILE WIPED OUT SUBTASK
*  IS BEING DETACHED AND THEN RESTARTED
*
         BAL   R8,DETACH                GET RID OF OLD SUBTASK
         BAL   R8,ATTACH                AND START UP A NEW ONE
         LA    R0,OPENIT                TELL SUBTASK TO OPEN DCB AGAIN
         POST  ECBSS,(0)                BECAUSE ABEND CLOSED IT
         BR    R9                       RETURN TO OS
         SPACE 9
*  SUBTASK STIMER EXIT IF LOAD GOES INTO A LOOP.  STIMER WILL BOMB
*  AFTER 10 REAL TIME SECONDS.  THE SUBTASK WILL THEN ABEND WITH A
*  S322 (WILL BE REFLECTED AS A BAD MODULE WITH CODE 322).
         SPACE 2
         USING STIMEXIT,R15
STIMEXIT L     R12,=A(PDSTEST)          GET ADDRBILITY
         DROP  R15
         L     R1,=X'00322000'          SYSTEM COMP CODE 322    GP11345
         ABEND (1)                      AND LET'S KILL THIS SUBTASK
         TITLE 'P D S T E S T  ---  UTILITY BAL ROUTINES'
**********************************************************************
********************************  ATTACH  ****************************
**********************************************************************
         SPACE 1
ATTACH   ICM   R0,15,SUBTCB       ALREADY ATTACHED ?            GP11345
         BNZR  R8                   YES; JUST RETURN            GP11345
         XC    ECBSC,ECBSC                                      GP11345
         LA    R2,ECBSC                                         GP11345
         ATTACH EPLOC=X,ETXR=EXIT,ECB=(R2),PARAM=((R11))        GP11345
         ST    R1,SUBTCB                SAVE THE SUBTASK TCB PTR
         BR    R8                       RETURN TO CALLER
         SPACE 3
**********************************************************************
********************************  DETACH  ****************************
**********************************************************************
         SPACE 3
DETACH   DETACH SUBTCB,STAE=NO          GOOD BYE SUBTASK
         XC    SUBTCB,SUBTCB      SIGNAL DETACHED               GP11345
         BR    R8                       RET TO CALLER
         SPACE 1
         LTORG ,
         TITLE 'P D S T E S T --- CONSTANTS AND WORKAREAS'
SYSPRINT PRTWORK SYSPRINT,SYSTSPRT,TITLE=3                      GP11345
EDMASK   DC    X'2020202120'            EDIT MASK FOR NUMBER OF MEMS
X        DC    CL8'MEMCHECK'            PHONY CDE NAME
*
BADMSG   DC    C' *****  MEMBER WITH ERROR:    XXXXXXXX   CODE=WWWWWW  X
               *****'                                           GP11345
MEMBER   EQU   BADMSG+30,8,C'C'         WHICH MEMBER            GP11345
CODE     EQU   BADMSG+46,3,C'C'         ABEND CODE              GP11345
CODEX    EQU   BADMSG+50,3,C'C'         REASON CODE             GP11345
NLOADMSG DC    C' *****  MEMBER NOT PROCESSED:                         *
                         *****'                                 GP11345
NLOADMEM EQU   NLOADMSG+30,8,C'C'                               GP11345
NLOADRSN EQU   NLOADMSG+40,24,C'C'                              GP11345
NLOADRNL DC    CL(L'NLOADRSN)'NOT LOAD MODULE'                  GP11345
NLOADRNX DC    CL(L'NLOADRSN)'NOT EXECUTABLE'                   GP11345
HEADER1  DC    C'#==========   PDSTEST --- VALIDITY CHECK MEMBERS OF PA*
               RTITIONED DATA SETS   =========='
MSGDUP   DC    C'0DD NAME XXXXXXXX IS A DUPLICATE - SKIPPED'    GP11345
MSGDUPDD EQU   MSGDUP+9,8,C'C'                                  GP11345
MSGNDA   DC    C'0DD NAME XXXXXXXX IS NOT DASD RESIDENT'        GP11345
MSGNDADD EQU   MSGDUP+9,8,C'C'                                  GP11345
STARTMSG DC    C'0PDSTEST PROCESSING BEGUN ON THE FOLLOWING LIBRARY:   *
               12345678.12345678.12345678.12345678.12345678'    GP11345
DSN      EQU   STARTMSG+54,44,C'C'      WHERE DSN GOES          GP11345
MEMMSG   DC    C'        MEMBER SELECTED:      XXXXXXXX'
TELLMEM  EQU   MEMMSG+30,8,C'C'                                 GP11345
ENDLMSG  DC    C' PDSTEST PROCESSING COMPLETE ON THIS LIBRARY'
NUMMSG   DC    C' NUMBER OF MEMBERS SELECTED:   XXXXX'
NUMMEMS  EQU   NUMMSG+31                WHERE NUMBER OF MEMBERS GOES
ENDMSG   DC    C' ==========   P D S T E S T   N O R M A L   E N D   O X
               F   P R O G R A M   =========='
NOTPO    DC    C' >>>>>>>>>>   DATA SET HAS INVALID STRUCTURE ... IGNORX
               ED   <<<<<<<<<<'
OKMSG    DC    C'        NO MEMBERS WITH ERRORS FOUND'
IOERMSG1 DC    C' **********   UNRECOVERABLE I/O ERROR ENCOUNTERED IN T*
               HE DIRECTORY   **********'
IOERMSG2 DC    C'0PROCESSING WILL TERMINATE'
         DC    C'0123456789ABCDEF'
TRTAB    EQU   *-256                    HEX
         SPACE 2
PATPO    DCB   MACRF=R,DSORG=PO,DDNAME=SYSLIB,RECFM=U,EODAD=SUBEOD
         SPACE 1
PATPS    DCB   MACRF=R,DSORG=PS,DDNAME=X,RECFM=U,EODAD=EODAD,          X
               EXLST=EXLST-EXLST                                GP11345
         READ  PATDECB,SF,3,4,256,MF=L DIRECTORY BLK            GP11345
         READ  PATBSAM,SF,3,4,256,MF=L ARBITRARY BLK            GP11345
PATDCBLN EQU   *-PATPO                                          GP11345
         SPACE 2
SAVE     DSECT ,             SAVE AND WORK AREA                 GP11345
SAVEWORK DS    0D            COMMON ADDRESSABILITY ON R11       GP11345
DB       DS    D             SCRATCH DBLWD                      GP11345
         SERVDEFS ,          STANDARD SERVICE DATA              GP11345
EXLST    DC    0F'0',X'87',AL3(XJFCB)
OCDIR    DC    X'80',AL3(DCBPS)                                 GP11345
OCPO     DC    X'80',AL3(DCBPO)                                 GP11345
@TIOT    DC    A(0)      RRN/PRC 23OCT79 ADDR OF TIOT
SUBTCB   DC    A(0)                     ADDRESS OF SUBTASK'S TCB
         SPACE 1
ECBS     DS    0A
ECBSC    DC    A(0)                     SUBTASK COMPLETION
ECBSS    DC    A(0)                     SUBTASK START
ECBMS    DC    A(0)                     MAIN TASK START
         SPACE 1
LOADR1   DC    F'0'                     REG1 FROM LOAD
LOADR15  DC    F'0'                     REG15 FROM LOAD
POSTCODE DC    F'0'                     POSTCODE COM FROM MAIN TO SUB
NORM     EQU   X'00'                    JUST NORMAL LOAD
OPENIT   EQU   X'04'                    OPEN THE FILE, THEN LOAD
CLOSEIT  EQU   X'08'                    JUST CLOSE THE FILE
         SPACE 1
PROCFLAG DC    X'0'          PROCESSING  FLAGS                  GP11345
FGLISTM  EQU   X'80'           LIST ALL MEMBERS                 GP11345
FGBDMEM  EQU   X'08'           ERROR PROCESSING MEMBER          GP11345
FGLBSAM  EQU   X'02'           NOT LOAD MODULE LIBRARY          GP11345
FGMBSAM  EQU   X'01'           NOT LOAD MODULE - USE BSAM       GP11345
         SPACE 1
*   KEEP DCBS CONTIGUOUS FOR INITIALIZATION MOVE                GP11345
DCBPO    DCB   MACRF=R,DSORG=PO,DDNAME=SYSLIB,RECFM=U,EODAD=SUBEOD
         SPACE 1
DCBPS    DCB   MACRF=R,DSORG=PS,DDNAME=X,RECFM=U,EODAD=EODAD,          X
               EXLST=EXLST
         READ  DECB,SF,3,4,256,MF=L   DIRECTORY BLK             GP11345
         READ  BSAM,SF,3,4,256,MF=L   ARBITRARY BLK             GP11345
         SPACE 1
DIRBUF   DC    0D'0',XL256'0'           DIRECTORY BUFFER        GP11345
DATBUF   DC    XL256'0'      ARBITRARY DATA BUFFER              GP11345
         SPACE 1
XJFCB    EQU   DIRBUF        JFCB (USE UNUSED DIR BUFFER)       GP11345
SAVEEND  EQU   *             END OF DYNAMIC AREA                GP11345
         SPACE 2
JFCB     DSECT ,
         IEFJFCBN
         DCBD  DSORG=PO                                         GP10038
         IEZDEB ,                                               GP10038
         SPACE 2
         IHAPDS PDSBLDL=NO
         SPACE 2
MYTIOT   DSECT ,                                                GP11345
         IEFTIOT1 ,          MAP THE TIOT                       GP11345
         SPACE 2
MYUCB    DSECT ,                                                GP11345
         IEFUCBOB ,          MAP THE UCB                        GP11345
         SPACE 1
         END
