@SPIE    TITLE '@ S P I E D E R  ***  QUICK AND DIRTY DEBUG OUTPUT'
***********************************************************************
*                                                                     *
*                                                                     *
*  THIS ROUTINE, DRIVEN BY THE #TRAP MACRO, PRODUCES A LIST AND DEBUG *
*   OUTPUT FOR ONE OR MORE OF THE OPTIONAL PARAMETERS:                *
*                                                                     *
*   CODE IS EXTREMELY NOT RE-ENTRANT, REUSEABLE, NOR REFRESHABLE.     *
*   CALLER MAY BE AM24 OR 31; ADDRESSES CALCULATED ACCORDINGLY.       *
*   MODULE OPERATES IN AM31.                                          *
*                                                                     *
*   LABEL TRAP list,...,ID=label                                      *
*         "REGS=" PRODUCES REGISTERS 0-15 IN HEX                      *
*         "REGS=NO" PRODUCES NO REGISTERS (DEFAULT)                   *
*         "REGS=SHORT"  PRODUCES REGISTERS 14-1 ONLY                  *
*                                                                     *
*         (OP1,(OP2,LN2),(OP3,,TP3)...)                               *
*             PROCESSES A LIST OF ITEMS. EACH ITEM HAS THREE FIELDS:  *
*             NAME OF ITEM TO BE PROCESSED (NO DEFAULT)               *
*             LENGTH (DEFAULT IS L'NAME EXCEPT PACKED DECIMAL, L=0)   *
*             TYPE: HEX (DEFAULT), TEXT, CTEXT, PACKED                *
*                                                                     *
*   ALL NAME FIELDS, WHETHER IN A KEYWORD OR THE LIST OPERAND, MAY    *
*   BE FULLWORD POINTERS:   /NAME DISPLAYS THE DATA AT THE LOCATION   *
*   FOUND IN FIELD NAME. NOTE THAT THIS FORM REQUIRES A LENGTH.       *
*   THE FORM NAME% CAUSES 24-BIT ADDRESSING RESOLUTION WHEN IN 31-BIT *
*   MODE. BOTH / AND % MAY BE USED FOR THE SAME NAME FIELD.           *
*                                                                     *
*   INPUT:  R15 - BASE ADDRESS            R14 - RETURN ADDRESS        *
*           R0  - WORK AREA IN CALLER'S PROGRAM                       *
*           R1  - CALLER'S REQUEST:   CL8'TAG ' OR BLANKS             *
*     ONE OR MORE REQUEST UNITS OF THREE HALF-WORDS EACH:             *
*    X'000'    R1     R2    DUMP REGISTERS R1 TO R2                   *
*    X'100' S(TEXT) Y(LEN)  TEXT; INPUT "LEN"                         *
*    X'200' S(TEXT) Y(LEN)  CTEXT; TEXT IF PRINTABLE; HEX OTHERWISE   *
*    X'300' S(HEX@) Y(LEN)  HEX; INPUT "LEN"                          *
*    X'400' S(PAK@) Y(LEN)  PACKED DECIMAL; 0<=LEN<16                 *
*                                                                     *
*  X'8000' OR HIGHER - END OF LIST                                    *
*                                                                     *
*   THIS ROUTINE MAY BE CALLED IN 24-BIT AND 31-BIT ADDRESSING MODE,  *
*   AND MAY RESIDE ABOVE THE LINE WHEN LINKED WITH A 31-BIT MODE PGM. *
*   ALL ADDRESS EXPRESSIONS ARE RESOLVED IN THE CALLER'S MODE.        *
*                                                                     *
*                            PRELIMINARY VERSION CONCOCTED FROM       *
*                            ODDS AND ENDS                   GP09277  *
*                                                                     *
***********************************************************************
         MACRO ,                                                 93185
&NM      WHEX  &OUT,&IN,&SEP=C' ',&LEN=8    SPECIAL INHEX       GP98285
&NM      UNPK  &OUT.(1+&LEN),&IN.(1+&LEN/2)                      93185
         TR    &OUT.(&LEN),HEXTAB-C'0'                           93185
         AIF   ('&SEP' EQ '').MEND                               93185
         MVI   &OUT+&LEN,&SEP                                    93185
.MEND    MEND  ,                                                 93185
*DEBUG*  PUNCH ' ORDER @SPIEDER(P) '   *****DEBUG********
         SPACE 1                                                 93185
         COPY  OPTIONGB      DEFINE GLOBALS
         SPACE 1
         SYSPARM LIST=YES    DEFINE GLOBAL SETTINGS
         SPACE 1
         PUSH  USING         JUST IN CASE                        93185
@SPIEDER CSECT ,
         USING @SPIEDER,R15  DECLARE
         B     AROUND        BRANCH AROUND CPR AND ENTRY VECTOR
         DC    AL1(L'OWNTEXT+L'IDTEXT)
IDTEXT   DC    C'@SPIEDER &SYSDATE'
OWNTEXT  DC    C' COPYRIGHT 2009 EXPERT SYSTEM PROGRAMMING'
         ORG   @SPIEDER+64
         DC    A(PR1DCB)     EXTERNAL CLOSE ACCESS              GP09277
AROUND   BSM   R14,0         PRESERVE CALLER'S AMODE            GP99029
         STM   R14,R12,12(R13)                                  GP09277
         LR    R12,R15       LOCAL BASE
         DROP  R15
         USING @SPIEDER,R12
         LA    R9,TRAPWORK
         ST    R9,8(,R13)
         ST    R13,4(,R9)
         LR    R13,R9
         BIX   VAL=(R0),BASE=*,ERR=TRAPEXIT,                           *
               LOC=(SPCLOSE,SETSPIE,SETRAP,RESET,TRPUSH,TRPOP)
         SPACE 1
SPCLOSE  #PRT  TYPE=CLOSE    CLOSE SYSDEBUG IF OPEN
         L     R1,TOKENESP   RESTORE OLD
         ESPIE RESET,(1)
         B     TRAPEXIT
         SPACE 1
TRPUSH   MVC   SPSTACK,SQSPIAD
SETRAP   ST    R1,SQSPIAD
         B     TRAPEXIT
         SPACE 1
RESET    XC    SQSPIAD,SQSPIAD
         B     TRAPEXIT
         SPACE 1
TRPOP    MVC   SQSPIAD,SPSTACK
         B     TRAPEXIT
         SPACE 1
SETSPIE  ESPIE SET,MYSPIE,(1,2,3,4,5,6,7,8,9,10,11,15),                *
               PARAM=(R13)   PASS THE WORK ADDRESS AS A PARAMETER
         ST    R1,TOKENESP   SAVE HIGHER ESPIE, IF ANY          GP02353
*                              NOT INTERESTED IN 12-14           93191
TRAPEXIT L     R13,4(,R13)                                      GP09277
         LM    R14,R12,12(R13)  GET ESSENTIAL REGISTERS         GP09277
         BSM   0,R14         RETURN TO CALLER
         POP   USING                                            GP10054
         EJECT ,
***********************************************************************
*                                                                     *
*   ESPIE EXIT.  CHECK WHETHER THIS IS ANYWHERE IN OUR CODE, AND      *
*   WHETHER THE CURRENT PROGRAM HAS REQUESTED RECOVERY.               *
*                                                                     *
*   RECOVERY CONSISTS OF RELOADING ALL REGISTERS, AND GOING TO USER'S *
*   SPECIFIED RESTART ADDRESS; RESTART REQUEST IS CLEARED.            *
*                                                                     *
***********************************************************************
*                                                                     *
*   NOTE THAT THIS ROUTINE MAY BE USED IN AN MVS/370 AND MVS/380      *
*   ENVIRONMENT, WHERE A BC MODE PSW MAY GIVE FALSE INDICATION        *
*   OF 31-BIT AMODE. WE GET THE PSW FROM THE RB, INSTEAD.             *
*                                                                     *
***********************************************************************
         SPACE 1                                                 93185
         PUSH  USING         JUST IN CASE                        93185
         DROP  ,             DON'T TRUST NOBODY                  93185
         AIF   (&MVSXA).EPREGS                                  GP09052
         USING MYSPIE,R15                                        93185
MYSPIE   N     R14,MASKADDR       MAKE VALID IN AM31            GP09210
         USING PIE,R1             PASSED ON ENTRY               GP10094
         NI    PIE,X'7F'          PERMIT ADDITIONAL ENTRIES     GP10094
         CLC   TRAPWAD,=A(0)      ERROR IN FORMATTING ?         GP10094
         BE    NOTTRAP              NO                          GP10094
         CLC   TRAPWAD,=A(GOBACK)   USER RETURN ?               GP10094
         BE    GOBACK             YES; SPECIAL                  GP10094
         MVC   PIEPSW+5(3),TRAPWAD+1   ROUTE TO RECOVERY        GP10094
         MVC   TRAPWAD,=A(0)      PREVENT LOOP                  GP10094
         BR    R14                RECOVER                       GP10094
NOTTRAP  CLC   SQSPICA,=A(0)      ERROR IN FORMATTING ?         GP10094
         BE    NOTUSER              NO                          GP10094
         MVC   PIEPSW+5(3),SQSPICA+1   ROUTE TO RECOVERY        GP10094
         XC    SQSPICA+4(8),SQSPICA+4  CLEAR CODE AND ADDRESS   GP09052
         BR    R14                RECOVER                       GP10094
         DROP  R1
NOTUSER  STM   R0,R15,SYSREGS   SAVE FOR RETURN                 GP09214
         STM   R0,R15,ERRREGS   SAVE FOR FORMATTING             GP09214
         LR    R12,R15       SET NEW BASE                        93185
         DROP  R15                                              GP09255
         USING MYSPIE,R12    DECLARE BASE                       GP09255
         LR    R6,R1         PRESERVE PIE ADDRESS                93185
         USING PIE,R6        DECLARE IT                          93185
         MVC   ERRREGS(3*4),PIEGR0   MOVE LOW          0-2      GP09052
         MVC   ERRREGS+R14*4(2*4),PIEGR14   MOVE HIGH  E-F      GP09052
         MVC   ERRPSW,PIEPSW      FOR DEBUGGING                 GP09210
         L     R13,EPIEPARM  GET SQSP ADDRESS                   GP09052
         USING TRAPWORK,R13  DECLARE IT                         GP09052
         SPACE 1                                                GP09052
         PUSH  USING                                            GP10054
MVSFAIL  MVC   SPMLNIC(4),=4C'0'       PRESET FOR LENGTH        GP10054
         L     R4,PSATOLD-PSA                                   GP10054
         USING TCB,R4                                           GP10054
         L     R1,TCBRBP     GET FIRST RB                       GP10054
         USING RBBASIC,R1    DECLARE RB MAPPING                 GP10054
MVSRBLP  LR    R4,R1         REMEMBER THE RB                    GP10054
         TM    RBSTAB2,RBTCBNXT   LAST RB ?                     GP10054
         BNZ   ECMODE        YES; HAVE CURRENT                  GP10054
         ICM   R1,7,RBLINKB  GET NEXT RB                        GP10054
         BNZ   MVSRBLP       LOOK FOR ANOTHER                   GP10054
         DROP  R1                                               GP10054
         USING RBBASIC,R4    DECLARE PRIOR RB                   GP10054
ECMODE   MVC   EPIEINT+2(2),PIEPSW+6   INTERRUPT                GP10054
         CLC   PIEPSW+5(3),RBOPSW+5    SAVED ?                  GP10054
         BNE   BCMODE              NO; USE OLD CODE             GP10054
         MVC   PIEPSW(8),RBOPSW    SAVE EC MODE PSW             GP10054
         LR    R1,R4                                            GP10054
         SH    R1,=H'64'                                        GP10054
         MVC   EPIEINT(2),48(R1)  LENGTH AND INT.CODE FROM PFX  GP10054
         LH    R1,EPIEINT                                       GP10054
         B     COMMODE            JOIN COMMON CODE              GP10054
         POP   USING                                            GP10054
         SPACE 1                                                GP09052
BCMODE   SR    R1,R1                                            GP09052
         IC    R1,PIEPSW+4   GET LENGTH BITS                    GP09052
         SRL   R1,6          CONVERT TO 0-3                     GP09052
         STH   R1,EPIEINT    FAKE IT                            GP09277
         MVI   PIEPSW+4,0    MUST BE AMODE 24                   GP10054
COMMODE  STC   R1,SPMLNIC+3  STASH BINARY                       GP09052
         TR    SPMLNIC+3(1),=C'0246'   MAKE READABLE LENGTH     GP09052
         TR    EPIEINT+1(1),=AL1(0,2,4,6)                       GP09052
         WHEX  SPMPSW1,PIEPSW,SEP=C' '     LEFT-HALF PSW        GP09052
         WHEX  SPMPSW2,PIEPSW+4,SEP=C' '   RIGHT HALF           GP09052
*DEFER*  WHEX  SPMLNIC,EPIEINT,SEP=C' '  LENGTH/INTERRUPT CODE  GP09052
         WHEX  SPMLNIC+4,PIEPSW+2,LEN=4,SEP=C' '  INTERUPT CODE GP09052
         AGO   .CMREGS                                          GP09052
.EPREGS  USING MYSPIE,R12                                        93185
MYSPIE   LR    R12,R15       SET NEW BASE                        93185
         AM24  WORK=R15      GET LOW                             93185
         STM   R14,R1,MYREGS  SAVE CONTROL REGISTERS             93185
         LR    R6,R1         PRESERVE EPIE ADDRESS               93185
         USING EPIE,R6       DECLARE IT                          93185
         MVC   ERRREGS(16*4),EPIEGPR   COPY FOR COMMON CODE     GP09052
         L     R13,EPIEPARM  GET SQSP ADDRESS                    93185
         USING TRAPWORK,R13  DECLARE IT                          93185
         ICM   R3,15,SQSPIAD  DID PROGRAM SET A RECOVERY ADDRESS 93185
         BZ    MYSPFAIL      NO; UNEXPECTED ERROR                93185
         SLR   R2,R2                                             93185
         ICM   R2,1,EPIEINT+3  GET INTERRUPT CODE                93185
         BZ    MYSPFAIL      HUH ?                               93185
         CH    R2,=H'15'     LARGER THAN BASE ?                  93185
         BNH   *+8           NO; USE                             93185
         LA    R2,4          ELSE TREAT AS FOUR (ADDRESSING EXCEPT.)
         L     R1,=X'00008000'  SET BIT FOR CODE '0'             93185
         SRL   R1,0(R2)      SHIFT TO PICA POSITION              93185
         ST    R1,LOCDB      STASH                               93185
         NC    LOCDB+2(2),SQSPICA+4  MASK WITH PROGRAM'S BITS    93185
         CL    R1,LOCDB      MATCH ?                             93185
         BNE   MYSPFAIL      NO; COMPLAIN                        93185
         XC    SQSPICA+4(8),SQSPICA+4  CLEAR CODE AND ADDRESS    93185
EXIT2R3  ST    R3,EPIEPSW+4  SET RESTART ADDRESS AND MODE        93185
EXITSPIE LM    R14,R1,MYREGS  JUST IN CASE                       93185
         SLR   R15,R15                                           93185
         BR    R14           RETURN TO RECOVERY VIA SYSTEM       93185
         SPACE 1                                                 93185
MYSPFAIL WHEX  SPMPSW1,EPIEPSW,SEP=C' '    LEFT-HALF PSW         93185
         WHEX  SPMPSW2,EPIEPSW+4,SEP=C' '  RIGHT HALF            93185
         WHEX  SPMLNIC,EPIEINT,SEP=C' '  LENGTH/INTERRUPT CODE   93185
.CMREGS  CLI   SPMLNIC+L'SPMLNIC-1,C'1'     0C1 ?               GP09277
         BNE   NOTSPECL      NO                                 GP09277
         L     R4,EPIEPSW+4  GET PSW                            GP09277
         N     R4,MASKADDR                                      GP09277
         SH    R4,EPIEINT    LESS LENGTH                        GP09277
         CLC   =X'B2FF',0(R4)    TRAP4 ?                        GP09277
         BE    CALLFORM      YES; FORMAT                        GP09277
         CLC   =X'83CD',0(R4)    DIAG ?  (OLD & EXHIBIT)        GP09277
         BNE   NOTSPECL                                         GP09277
CALLFORM LA    R1,FORMPSW    PASS PSW AND REG ADDRESS           GP09277
         MVC   FORMPSW,EPIEPSW                                  GP09277
         MVC   FORMLNIC,EPIEINT                                 GP09277
         MVC   FORMREGS(18*4),ERRREGS                           GP09277
         NI    PIE,X'7F'     ALLOW ANOTHER INTERRUPT            GP10094
         LA    R15,TRAPFORM  MAKE TRACEBACK EASIER TO READ      GP09277
         BASR  R14,R15       FORMAT                             GP09277
         MVC   TRAPWAD,=A(GOBACK)   WILL RETURN TO USER         GP10094
         DC    H'0'          RETURN TO USER                     GP10094
         SPACE 1
         PUSH  USING                                            GP10094
         DROP  ,                                                GP10094
         USING MYSPIE,R15                                       GP10094
         USING PIE,R1                                           GP10094
GOBACK   L     R2,FORMPSW+4  GET PSW                            GP10094
         AL    R2,=F'4'      SET RESTART ADDRESS W/MODE BIT     GP10094
         ST    R2,PIEPSW+4   SET PSW                            GP10094
         MVC   TRAPWAD,=A(0)      PREVENT LOOP                  GP10094
         MVC   PIEGR14(2*4),FORMREGS+14*4   RESTORE   14-15     GP10094
         MVC   PIEGR0(3*4),FORMREGS                    0- 2     GP10094
         LM    R2,R13,FORMREGS+2*4    RELOAD USER'S REGISTERS   GP10094
         BR    R14                                              GP10094
         POP   USING                                            GP10094
         SPACE 1
NOTSPECL L     R5,PSATOLD-PSA  GET THE CURRENT TCB               93185
         USING TCB,R5                                            93185
         LAT   R5,TCBRBP,SPMCRSV  GET RB CHAIN OR OUT            93185
         B     SPMRRB2       LOOK AT IT                          93185
         USING RBSECT,R5                                         93185
SPMRRB1  TM    RBSTAB2,RBTCBNXT  DOES RB POINT TO TCB ?          93185
         BNZ   SPMCRSV       YES - EXIT                          93185
         LAT   R5,RBLINK,SPMCRSV  GET NEXT RB                    93185
SPMRRB2  TM    RBSTAB2,RBTCBNXT  DOES RB POINT TO TCB ?          93185
*DEFER*  BNZ   SPMCRSV       YES - EXIT                          93185
         TM    RBSTAB1,RBFTP   IS THIS A PRB ?                   93185
         BNZ   SPMRRB1       NO; SKIP IT                         93185
         LAT   R1,RBCDE,SPMRRB1  GET CDE OR NEXT                 93185
         USING CDENTRY,R1                                        93185
*DEFER*  CLC   =C'EXH',CDNAME  MY MODULE NAME PREFIX ?           93185
*DEFER*  BNE   SPMRRB1       NO; TRY AGAIN                       93185
         MVC   SPMMSG+4+8(8),CDNAME  MOVE NAME TO MESSAGE        93185
         DROP  R1,R5                                             93185
         NOP   SPMRWHO                                          GP97316
         SPACE 1
*  MODULE/COMMAND NOT FOUND; USE MAJOR NAME OF FAILING ADDRESS
SPMCRSV  DS    0H                                               GP09052
*TEST*   AIF   (NOT &MVSXA).NOQUERY                             GP09052
         ICM   R2,15,EPIEPSW+4  LOAD FAILING ADDRESS            GP99020
*TEST*   BNM   SPMCRSV2                                         GP99020
*TEST*   AM31  ,             USER IN AM31; MATCH IT             GP99020
SPMCRSV2 N     R2,MASKADDR     KILL AMODE BIT                   GP99020
         ST    R2,LOCDB+8    MAKE ARGUMENT
         MVSQUERY INADDR=LOCDB+8,SEARCH=JPALPA,OEPNM=SPMTXT1+4,        *
               OLOADPT=LOCDB,OLEN=LOCDB+4                       GP09277
         BXH   R15,R15,SPMRWHO
         LM    R3,R4,LOCDB   GET START AND LENGTH               GP97316
         AR    R4,R3         GET END ADDRESS + 1                GP97316
         SH    R2,EPIEINT    SUBTRACT INSTRUCTION LENGTH        GP97316
         SH    R2,=H'4'      SUBTRACT ANOTHER 4 FOR GOOD MEASURE
         BNM   *+6                                              GP97316
         SLR   R2,R2         HOW DID WE GET HERE?               GP97316
         MAX   (R2),(R3)     DON'T START BEFORE MODULE          GP97316
         LA    R14,16(,R2)   END MOVE ADDRESS+1                 GP97316
         MIN   (R14),(R4)    CLIP END                           GP97316
         ST    R2,LOCDB                                         GP97316
         WHEX  SPMTXT1A,LOCDB  SHOW START ADDRESS               GP97316
         SR    R14,R2        GET TEXT LENGTH                    GP97316
         SH    R14,=H'1'     CHANGE TO EXECUTE LENGTH           GP97316
         BM    SPMRWHO       OOPS                               GP97316
         XC    LOCTXT,LOCTXT                                    GP97316
         EX    R14,MVCTEXT                                      GP97316
MVCTEXT  MVC   LOCTXT(0),0(R2)   MOVE TEXT                      GP97316
         WHEX  SPMTXT1B+0,LOCTXT                                GP97316
         CH    R14,=H'4'                                        GP97316
         BNH   SPMRWHO                                          GP97316
         WHEX  SPMTXT1B+9,LOCTXT+4                              GP97316
         CH    R14,=H'8'                                        GP97316
         BNH   SPMRWHO                                          GP97316
         WHEX  SPMTXT1B+18,LOCTXT+8                             GP97316
         CH    R14,=H'12'                                       GP97316
         BNH   SPMRWHO                                          GP97316
         WHEX  SPMTXT1B+27,LOCTXT+12                            GP97316
.NOQUERY ANOP  ,                                                GP09052
SPMRWHO  AM24  ,             RESUME OLD MODE                    GP99020
SPMRPUT  OC    SPMWHO,BLANKS  ELIMINATE SOME PROBLEMS            93185
         WTO   MF=(E,SPMMSG)                                    GP09052
         CLI   SPMTXT1A,C' '      TEXT FILL ?                   GP09052
         BE    STABSKIX      NO; SKIP IT                        GP09052
         WTO   MF=(E,SPMTXT1)                                   GP09052
STABSKIX LA    R2,ERRREGS    POINT TO FIRST REGISTER            GP09052
         LA    R3,SPMREG1    FIRST REGISTER MESSAGE              93185
         LA    R5,4          SET FOR TWO LINES                   93185
STABRLP  LA    R4,SPMREG1A-SPMREG1(,R3)  SET FIRST OUTPUT ADDRESS
         LA    R15,4         SET FOR FOUR REGISTERS              93185
STABRLP3 UNPK  0(9,R4),0(5,R2)  UNPACK A REGISTER                93185
         TR    0(8,R4),HEXTAB-C'0'     MAKE EBCDIC               93185
         MVI   8(R4),C' '    SEPARATOR                           93185
         LA    R4,9(,R4)     NEXT OUTPUT ADDRESS                 93185
         LA    R2,4(,R2)     NEXT REGISTER                       93185
         BCT   R15,STABRLP3  DO NEXT REGISTER                    93185
         WTO   MF=(E,(R3))                                      GP09052
         LA    R3,SPMREG2-SPMREG1(,R3)  SET NEXT MESSAGE ADDRESS 93185
         BCT   R5,STABRLP    DO NEXT LINE                        93185
MYSPEXIT OI    SQSPICA,X'80'  SUPPRESS STAE MSGS/DUMP            93185
         AIF   (&MVSXA).XABEND                                  GP09052
*FAILS*  ABEND X'C00',DUMP   TAKE A DUMP                        GP09052
         L     R1,=X'00080C00'  SYSTEM CODE C00 - EVENTUALLY    GP09052
         IC    R1,PIEPSW+3   INDICATE ERROR                     GP09052
         SLL   R1,12         ALIGN                              GP09052
         SVC   13            GUTEN ABEND                        GP09052
         SPACE 1                                                GP09052
EPIEPARM DC    A(TRAPWORK)   (MVS ONLY) ADDRESS OF WORK AREA    GP09052
MASKADDR DC    X'00FFFFFF'   ADDRESS FIX-UP                     GP09277
EPIEINT  DC    H'0,0'        INSTRUCTION LENGTH / INTERRUPT     GP09277
         AGO   .CMBEND                                          GP09052
.XABEND  LH    R2,EPIEINT+2  GET INTERRUPT CODE                  93185
MASKADDR DC    X'7FFFFFFF'   ADDRESS FIX-UP                     GP09277
         ABEND X'C00',DUMP,,SYSTEM,REASON=(R2)  GREETINGS        93185
.CMBEND  SPACE 1                                                 93185
TRAPWORK DS    0D                                               GP09277
         DS    18A                                              GP09277
         DS    18A                                              GP09277
LOCDB    DC    2D'0'                                             93185
LOCTXT   DC    XL16'0'       COPY OF FAILING TEXT
         SPACE 1             NOTE X'80' IN SPICA TO SUPPRESS STAE MSGS
SQSPICA  DC    A(0),X'0E000000'  AL3(SQSPIEX) - PICA             82165
SQSPIAD  DC    A(0)          RESTART ADDRESS - MUST FOLLOW PICA
SPSTACK  DC    A(0)          PREVIOUS RESTART ADDRESS
         DC    A(0)            GUARD
SQSPABC  DC    X'80C00000'   SPIE EXIT ABEND CODE
TOKENESP DC    A(0)          HIGHER PICA                        GP09277
MYREGS   DC    4A(0)         SAVE ENTRY R14-R1                   93185
         DC    C'PSW:'                                          GP09210
ERRPSW   DC    XL8'0'                                           GP09210
         DC    C'RCVR'                                          GP09213
ERRRET   DC    A(0)          RETURN FROM ERROR                  GP09213
ERRPICA  DC    XL8'0'        MASKS, ETC                         GP09213
         DC    C'REGS'                                          GP09210
ERRREGS  DC    16A(0)        (USR) REGISTERS                    GP09052
SYSREGS  DC    16A(0)        (MVS) REGISTERS                    GP09214
FORMPSW  DC    D'0'          FORMAT: PSW                        GP09277
FORMLNIC DC    F'0'          FORMAT: LEN / INT. CODE            GP09277
FORMREGS DC    (18*4)A(0)    FORMAT: REGISTERS                  GP09277
HEXTAB   DC    C'0123456789ABCDEF'                               93185
SPMMSG   VCON  'ESP514E PROGRAM  INTERRUPT; PSW=',END=SPMMSGX    93185
SPMPSW1  DC    CL8' ',C' '   PSW                                 93185
SPMPSW2  DC    CL8' ',C' LN/IC '                                 93185
SPMLNIC  DC    CL8' ',C' '                                       93185
SPMWHO   DC    CL17' '       OPTIONAL DEVICE/USER INFO           93185
SPMMSGX  VCON  ,                                                 93185
         SPACE 1                                                 93185
         AIF   (&MVSXA).XAPIE                                   GP09052
         IHAPIE ,                                               GP09052
EPIEPSW  EQU   PIEPSW,8,C'X'                                    GP09277
         AGO   .CMPIE                                           GP09052
.XAPIE   IHAEPIE ,           MAP EPIE                            93185
.CMPIE   SPACE 1                                                 93185
@SPIEDER CSECT ,                                                GP09277
SPMTXT1  VCON  'XXXXXXXX TEXT @ ',END=SPMTXT1X                  GP97316
SPMTXT1A DC    CL8' ',C' '
SPMTXT1B DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
         SPACE 1                                                 93185
SPMREG1  VCON  '   GPR 0-3  ',END=SPMREG1X                       93185
SPMREG1A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMREG2  VCON  '   GPR 4-7  ',END=SPMREG2X                       93185
SPMREG2A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMREG3  VCON  '   GPR 8-B  ',END=SPMREG3X                       93185
SPMREG3A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMREG4  VCON  '   GPR C-F  ',END=SPMREG4X                       93185
SPMREG4A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
         SPACE 1                                                 *TSM*
         LTORG ,                                                 93221
         EJECT ,
***********************************************************************
*                                                                     *
*   PROCESS A REQUEST LIST TO FORMAT USER DATA                        *
*     B2FFbddd -> calflags; item count (<256)                         *
*      0-255:     type, subtype, bddd, len   (FORMAT ITEM)            *
*                                                                     *
*      either may have flag and CL8 label                             *
*                                                                     *
***********************************************************************
         DROP  ,             KEEP DISTINCT                      GP10092
         ENTRY TRAPFORM
TRAPFORM BSM   R14,0         PRESERVE CALLER'S AMODE            GP09277
         STM   R14,R12,12(R13)                                  GP09277
         LR    R12,R15                                          GP09277
         USING TRAPFORM,R12                                     GP09277
         LA    R9,SUBSAVE    LOCAL SAVE AREA                    GP09277
         ST    R13,4(,R9)                                       GP09277
         ST    R9,8(,R13)                                       GP09277
         LR    R13,R9                                           GP09277
         SR    R15,R15                                          GP99116
         LTR   R14,R14       CALLER IN AM31?                    GP99116
         BNM   SETAMASK      NO                                 GP99116
         LA    R15,X'7F'     MAKE MASK FOR AMODE 31             GP99116
SETAMASK STC   R15,ADDRMASK                                     GP99116
         TM    PROFLAGS,PFCANC  PERMANENT DISABLE?              GP00162
         BNZ   DBTEXITZ      YES; JUST TAKE QUICK RETURN        GP10094
         LA    R6,DBTEXITS   SET FOR QUICK EXIT (LABEL ONLY)
         LR    R10,R1        COPY PARM REGISTER                 GP95235
         N     R10,ADDRMASK  CLEAN PARAMETER POINTER            GP99116
         LA    R8,FORMREGS-FORMPSW(,R10)  POINT TO USER'S REGS  GP09277
         L     R9,4(,R10)    GET IC                             GP09277
         N     R9,ADDRMASK   CLEAN IT TO GET LIST POINTER       GP09277
         ICM   R9,15,0(R9)   LOAD REQUEST LIST                  GP09277
         CLM   R9,12,=X'FFFF'   SL2 FORMAT ?                    GP11351
         BNE   HAVEADDR           NO; IT'S AN ADDRESS           GP11351
         LA    R0,X'FFF'     MAKE DISPLACEMENT MASK             GP11351
         NR    R0,R9         ISOLATE DISPLACEMENT               GP11351
         SRL   R9,12-2       CHANGE REGISTER TO OFFSET          GP11351
         N     R9,=X'0000003C'  CLEAN OFFSET                    GP11351
         L     R9,FORMREGS-FORMPSW(R9,R10)  GET BASE            GP11351
         N     R9,ADDRMASK        CLEAN IT                      GP11351
         AR    R9,R0              GET LIST ADDRESS              GP11351
HAVEADDR N     R9,ADDRMASK   CLEAN IT TO GET LIST ADDRESS       GP09277
         SPACE 1                                                GP99113
         TM    PROFLAGS,PFCANC  DISABLED ?                      GP10159
         BNZ   DBTEXITS      PROD & NO DD - BYPASS              GP10159
         SPACE 1                                                GP99113
         CLI   PROFGMOD,PROF@LCL   IS THIS THE FIRST CALL ?     GP99113
         BNE   DBTNONCE      NO                                 GP99113
         SPACE 1                                                GP00162
         MVI   PROFGMOD,PROF@WTO   FIRST TIME CHECKED; DEFAULT  GP99113
*PRTSUB* DEVTYPE PR1DCB+DCBDDNAM-IHADCB,DB USER SUPPLY SYSDEBUG DD?
*PRTSUB* BXH   R15,R15,DBTBYPED   SEE WHETHER TO BYPASS?        GP99113
*PRTSUB* CLI   DB+2,0        SOMETHING I CAN USE?               GP99113
*PRTSUB* BE    DBTNONCE      NO; USE WTO                        GP99113
         #PRT  PRINTWRK,TYPE=OPEN DEV=1 OPEN IT                 GP10159
         CH    R15,=H'8'     OPEN NOW?                          GP09277
         BNL   DBTBYPED      NO                                 GP09277
         MVI   PROFGMOD,PROF@DCB  SIGNAL OPEN DCB               GP99113
         OI    PROFLAGS,PROFLWID  SET WIDE MODE                 GP99113
         B     DBTNONCE                                         GP99113
DBTBYPED TM    PROFLAGS,PROFLPRO  PRODUCTION MODE?              GP99113
         BZ    DBTGOWTO      NO; USE WTO                        GP10159
         OI    PROFLAGS,PFCANC  DISABLE COMPLETELY              GP00162
         B     DBTEXITS      PROD & NO DD - BYPASS              GP99113
DBTGOWTO OI    PROFLAGS,PROFLWTO  FORCE WTO                     GP10159
DBTNONCE TM    PROFLAGS,PROFLWTO  IS WTO FORCED?                GP99113
         BNZ   INITSHRT      YES; NARROW MODE                   GP99113
         OI    PROFLAGS,PFWIDE  SET WIDE MODE                   GP99113
         LA    R0,MSGRTDS2-MSGRDW  WIDE SIZE                    GP99113
         STH   R0,MSGRDW     SET WIDE                           GP99113
         USING REQWORK,R9    DECLARE MAPPING OF REQUESTS        GP95235
         SPACE 1                                                GP99113
INITSHRT MVC   MSGLABL(MSGRTDS-MSGLABL),MSGLABL-1   BLANK THE LINE
         MVC   MSGHEAD,=CL8'ESP666'  DEBUG HEADER
         SPACE 1                                                GP99113
         XC    REQFLAGS(2),REQFLAGS    INIT FLAGS - NULL REQ.   GP10094
         SR    R1,R1                                            GP09277
         IC    R1,REQTYPE+1       GET ENTRY COUNT               GP10094
         ST    R1,NUMTODO    SAVE IT                            GP09277
         MVC   CURFLAGS,REQTYPE   SAVE FLAGS                    GP10092
         MVC   CALFLAGS,CURFLAGS  SAVE FLAGS                    GP10092
         NI    CURFLAGS,X'3F'     RESET LABEL, PSW              GP10092
         LA    R9,2(,R9)     SKIP FLAGS AND COUNT               GP09277
         TM    CALFLAGS,X'80'  IS THERE A LABEL?                GP02364
         BNZ   DBTLUP        YES; USE IT                        GP02364
         UNPK  MSGLABL+1(7),5(4,R10)                            GP09277
         TR    MSGLABL+1(6),DBTHEXTR  MAKE PRINTABLE            GP09277
         MVI   MSGLABL+7,C' '                                   GP09277
         B     TESTPSW                                          GP09277
DBTLUP   MVC   MSGLABL,REQTYPE   MOVE USER'S LABEL              GP95235
         LA    R9,8(,R9)     BUMP PAST LABEL                    GP95235
TESTPSW  TM    CALFLAGS,X'40'     WANT PSW ?                    GP09277
         BZ    SKIPPSW
         MVC   MSGLABL+20(4),=C'PSW='                           GP09277
         UNPK  MSGLABL+24(9),0(5,R10)                           GP09277
         UNPK  MSGLABL+33(9),4(5,R10)                           GP09277
         TR    MSGLABL+24(8+1+8),DBTHEXTR  MAKE PRINTABLE       GP09277
         MVI   MSGLABL+32,C'-'                                  GP09277
         MVI   MSGLABL+41,C' '                                  GP09277
SKIPPSW  MVC   MSGLABL+50(4),=C'TCB='                           GP09277
         UNPK  MSGLABL+54(9),PSATOLD-PSA(5)                     GP09277
         TR    MSGLABL+54(8),DBTHEXTR                           GP09277
         MVI   MSGLABL+62,C' '                                  GP12327
         TM    CALFLAGS,X'3F'     ANY OTHER REQUESTS?           GP10092
         BNZ   DBTINIT            YES; CONTINUE                 GP10092
         ICM   R0,15,NUMTODO ANY AT ALL ?                       GP10094
         BP    DBTINIT       YES; PROCESS NORMALLY              GP10094
         SR    R3,R3         CLEAR PARTIAL COUNT                GP10094
         OI    REQFLAGS,RQTEOL    INDICATE END OF REQUEST       GP09277
         B     DBTLAST       PRINT IT                           GP09277
         SPACE 1
DBTINIT  LPR   R3,R12        ANY POSITIVE VALUE                 GP09277
         NI    CURFLAGS,X'3F'   RETAIN ONLY UNPROCESSED FLAGS   GP10092
         BAS   R6,DBTLAST    PRINT HEADER LINE                  GP09277
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  LOOP TO PROCESS SPECIAL REQUESTS (CURFLAGS - GPR, FPR,.....)     **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DBTLOOP  OI    CURFLAGS,X'40'     RETURN HERE UNTIL DONE        GP10092
         TM    CURFLAGS,X'20'     FORMAT GENERAL REGISTERS?     GP10092
         BZ    DBTLUP20           NO                            GP10092
         ZI    CURFLAGS,X'20'     RESET IT                      GP10092
         B     DOGPRS             AND FORMAT GENERAL REGISTERS  GP10092
         SPACE 1
DBTLUP20 TM    CURFLAGS,X'10'     FORMAT FLOATING POINT ?       GP10092
         BZ    DBTLUP10           NO                            GP10092
         ZI    CURFLAGS,X'10'     RESET IT                      GP10092
         B     DOFPRS             AND FORMAT FLOATING REGISTERS GP10092
         SPACE 1
DBTLUP10 TM    CURFLAGS,X'08'     FORMAT CONTROL REGISTERS?     GP10092
         MVI   CURFLAGS,0     --- REST NOT IMPLEMENTED ---      GP10092
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  LOOP TO PROCESS CURRENT REQUEST (POINTED TO BY R9)               **
**                                                                   **
***********************************************************************
         SPACE 1
ITEMLOOP INC   NUMTODO,WORK=R1,INC=-1   NUMBER LEFT TO DO       GP09277
         LTR   R1,R1         ANY MORE ?                         GP09277
         BM    DBTEXITZ      NO; QUIT                           GP09277
         MVC   REQFLAGS(2),REQTYPE     MOVE FLAGS AND COUNT     GP02364
         IC    R2,REQTYPE    LOAD NEXT REQUEST                  GP97265
         LA    R0,RQTMSK     LOAD END-LIST MASK                 GP02364
         NR    R2,R0         IGNORE END-LIST BIT                GP02364
         CH    R2,=Y((PROCEND-PROCONE)/(PROCTWO-PROCONE))       GP97265
         BH    DBTLAST       TOO HIGH, TOO BAD                  GP97265
         TM    REQFG,RFNONAM   ANY NAME FIELD ?                 GP09277
         BNZ   SKIPNAME                                         GP09277
         MVC   MSGLABL,REQNAME    SHOW NAME                     GP09277
SKIPNAME SLL   R2,1          MAKE PROCESSOR ROUTINE OFFSET      GP97265
         LA    R0,FORMFAIL   SET RECOVERY ADDRESS               GP10092
         ST    R0,TRAPWAD      INTO SPIE EXIT                   GP10092
         LH    R7,PROCONE(R2)  LOAD PROCESSING ROUTINE          GP97265
         LA    R15,1                                            GP97265
         NR    R15,R7        SEE WHETHER ADDRESS WAS ODD        GP97265
         BZ    TRAPFORM(R7)  NO; INVOKE IT DIRECTLY             GP97265
         SRL   R7,1                                             GP97265
         SLL   R7,1          ELSE MAKE IT EVEN                  GP97265
         B     RESADDR                                          GP97265
         SPACE 1                                                GP97265
PROCONE  DC    Y(DOREGS-TRAPFORM)        REGISTER FORMATTING    GP97265
PROCTWO  DC    Y(FUNFTEXT-TRAPFORM+1)    TEXT                   GP97265
         DC    Y(FUNFCHEX-TRAPFORM+1)    TEXT OR HEX            GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)     HEX                    GP97265
         DC    Y(FUNPACK-TRAPFORM+1)     PACKED                 GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)       SPARE                GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)       SPARE                GP97265
         DC    Y(FUNFHEX-TRAPFORM+1)       SPARE                GP97265
         DC    Y(DBTLIST-TRAPFORM)       LIST FORM              GP97265
PROCEND  EQU   *                                                GP97265
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PROCESS ADDRESS, LENGTH, AND FLAG OPTION FOR COMMON FUNCTIONS    **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
RESADDR  SLR   R2,R2                                            GP97265
         IC    R2,REQADDR    GET S(ADDR)
         SRL   R2,4          DELETE LOW BITS OF OFFSET
         SLA   R2,2          *4 => INDEX INTO ERRREGS
         BZ    *+8           R0 = 0
         L     R2,ERRREGS-ERRREGS(R2,R8)  GET USER'S REGISTER   GP09277
         LA    R0,4095       MAKE MASK
         ICM   R15,3,REQADDR  GET LOW PORTION OF ADDRESS        GP95235
         NR    R0,R15        MASK OFFSET OF ADDRESS             GP95235
         ALR   R2,R0         MAKE EFFECTIVE ADDRESS
         TM    REQFG,RFA24   FORCED 24-BIT ADDRESSING MODE?     GP96101
         BZ    *+8           NO                                 GP96101
         N     R2,=X'00FFFFFF'  FORCE 24-BIT ADDRESS            GP96101
         TM    REQFG,RFA31   FORCED 31-BIT ADDRESSING MODE?     GP99116
         BNZ   NOTBAD31      NO                                 GP99116
         N     R2,ADDRMASK   USE MASK IN USER'S AMODE           GP99116
NOTBAD31 TM    REQFG,RFIAD   INDIRECT ADDRESSING?               GP96101
         BZ    NOTIAD31      NO                                 GP96101
         L     R2,0(,R2)     LOAD ADDRESS FROM POINTER          GP96101
         TM    REQFG,RFA24   FORCED 24-BIT ADDRESSING MODE?     GP96101
         BZ    NOTIAD        NO                                 GP96101
         N     R2,=X'00FFFFFF'  FORCE 24-BIT ADDRESS            GP96101
NOTIAD   TM    REQFG,RFA31   FORCED 31-BIT ADDRESSING MODE?     GP99116
         BNZ   NOTIAD31      NO                                 GP99116
         N     R2,ADDRMASK   USE MASK IN USER'S AMODE           GP99116
NOTIAD31 SLR   R3,R3                                            GP96101
         ICM   R3,3,REQLEN                                      GP09277
         BNM   LENINT                                           GP09277
         LA    R0,15         REGMASK                            GP09277
         NR    R3,R0         REGISTER NUMBER                    GP09277
         SLL   R3,2          MAKE OFFSET                        GP09277
         L     R3,ERRREGS-ERRREGS(R3,R8)  GET USER'S REGISTER   GP09277
         LTR   R3,R3         USABLE ?                           GP09277
         BM    DBTLAST       NO; SKIP THIS                      GP09277
LENINT   ST    R2,@BASE                                         GP09277
         UNPK  MSGHEAD+2(7),@BASE+1(4)                          GP09277
         TR    MSGHEAD+2(6),DBTHEXTR                            GP09277
         MVI   MSGHEAD+8,C' '                                   GP09277
         B     TRAPFORM(R7)  GO TO PROCESSING ROUTINE           GP97265
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  FORMAT ALL GENERAL REGISTERS                                     **
**    REGISTERS ARE IN R8                                            **
**    THEN PROCESSED AS A HEX DISPLAY                                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP10092
DOGPRS   MVC   MSGFLAG(2),=C'r0'  IDENTIFY FIRST REGISTER       GP10092
         LR    R2,R8         POINT TO FIRST REGISTER            GP10092
         ST    R2,@BASE                                         GP10092
         LA    R3,4*16       SET LENGTH                         GP10092
         B     PROFHEX       FORMAT HEX                         GP10092
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  FORMAT FLOATING POINT REGISTERS                                  **
**    REGISTERS ARE MOVED TO REGWORK                                 **
**    THEN PROCESSED AS A HEX DISPLAY                                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP10092
DOFPRS   MVC   MSGFLAG(2),=C'f0'  IDENTIFY FIRST REGISTER       GP10092
         STD   R0,REGWORK    SAVE FIRST ONE                     GP10092
         STD   R2,REGWORK+8                                     GP10092
         STD   R4,REGWORK+16                                    GP10092
         STD   R6,REGWORK+24                                    GP10092
         LA    R2,REGWORK    POINT TO FIRST REGISTER            GP10092
         ST    R2,@BASE                                         GP10092
         LA    R3,4*8        SET LENGTH                         GP10092
         B     PROFHEX       FORMAT HEX                         GP10092
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PROCESS REGISTER REQUESTS                                        **
**    REGISTERS ARE MOVED TO REGWORK (TO HANDLE WRAP-AROUND) AND     **
**    THEN PROCESSED AS A HEX DISPLAY                                **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOREGS   TM    CALFLAGS,X'20'  ALREADY FORMATTED ?              GP10092
         BNZ   DBTLAST       YES; SKIP                          GP10092
         LA    R0,15         MAKE MASK                          GP97261
         LH    R14,REQADDR   GET START REGISTER                 GP97261
         LH    R15,REQLEN    GET END REGISTER                   GP97261
         NR    R14,R0        KEEP ONLY LOW NIBBLE (START REG)   GP96101
         NR    R15,R0          END REGISTER                     GP96101
         LA    R1,DBTHEXTB(R14)  POINT TO PRINTABLE EQUIVALENT  GP97265
         MVC   MSGFLAG+1(1),0(R1)  IDENTIFY IT                  GP97265
         MVI   MSGFLAG,C'R'-X'40'  AS REGISTER                  GP97265
         CR    R14,R15       IS LOW SAME AS HIGH?               GP96101
         BNE   DOREGWRP      NO                                 GP96101
         BCTR  R15,0         MAKE RANGE OF 15 REGISTERS         GP96101
         NR    R15,R0        CLEAN IT UP                        GP96101
DOREGWRP SLDL  R14,2         CONVERT REGISTER NUMBER TO OFFSET  GP96101
         CR    R14,R15       IS LOW LESS THAN HIGH?             GP96101
         BH    DOREGSPL      NO; SPLIT                          GP96101
         LA    R2,0(R14,R8)     POINT TO FIRST CONTIGUOUS REGISTER
         ST    R2,@BASE                                         GP09284
         LR    R3,R15                                           GP96101
         SR    R3,R14                                           GP96101
         LA    R3,4(,R3)     MAKE HEX LENGTH                    GP96101
         B     PROFHEX       FORMAT HEX                         GP96101
DOREGSPL LA    R3,(16+1)*4   MAX LENGTH TO FORMAT + ONE         GP96101
         AR    R3,R15        PLUS END OFFSET                    GP96101
         SR    R3,R14        LESS START OFFSET = REQ. LENGTH    GP96101
         LA    R4,0(R14,R8)     POINT TO FIRST (LOW) SEGMENT    GP96101
         LA    R5,REGWORK    SET DESTINATION ADDRESS            GP96101
         LA    R1,64-1       MAX MOVABLE                        GP96101
         SR    R1,R14        LESS DISPLACEMENT TO LOW           GP96101
         EX    R1,DOREGMVC   MOVE FIRST PORTION                 GP96101
         LR    R4,R8         SET FROM ADDRESS                   GP96101
         LA    R5,REGWORK+1(R1)  OFFSET TO SECOND PART          GP96101
         LA    R1,4-1(,R15)    LENGTH TO MOVE                   GP96101
         EX    R1,DOREGMVC   MOVE SECOND SECTION                GP96101
         LA    R2,REGWORK    POINT TO CONSOLIDATED FIELD        GP96101
         ST    R2,@BASE                                         GP09284
         B     PROFHEX       GO TO FORMAT                       GP96101
DOREGMVC MVC   0(0,R5),0(R4)  MOVE                              GP96101
         SPACE 1                                                GP97265
***********************************************************************
**                                                                   **
**  FOR PACKED DECIMAL, PERFORM VALIDITY CHECK. MAKE SURE LENGTH     **
**   MATCHES USER'S REQUEST IF NON-ZERO                              **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
FUNPACK  MVI   MSGFLAG,C'L'-X'40' PROVISIONALLY FLAG BAD LENGTH GP97265
         LA    R4,16         SET MAXIMUM LENGTH                 GP96081
         CR    R3,R4         IS USER'S LENGTH VALID?            GP96081
         BH    PROFHEX       NO; FORMAT HEX WITH 'L' FLAG       GP96081
         MVI   MSGFLAG,C'P'-X'40' FLAG BAD PACKED (PRELIMINARY) GP97265
         LA    R1,0(,R2)     COPY ADDRESS                       GP96081
         LA    R7,9          CONSTANT                           GP96081
         LA    R0,X'0F'      MASK                               GP96081
         LA    R5,1(,R4)     REMEMBER THE LENGTH                GP96081
         SLR   R14,R14       CLEAR                              GP96081
         LTR   R6,R3         LOAD USER'S LENGTH                 GP96081
         BNZ   DBTPACKL      OK; UP AND AT 'EM                  GP96081
         LR    R6,R4         USE THIS ONE                       GP96081
DBTPACKL IC    R14,0(,R1)    LOAD NEXT BYTE                     GP96081
         LR    R15,R14       COPY                               GP96081
         SRL   R14,4         ISOLATE HIGH NYBBLE                GP96081
         CR    R14,R7        IS IT LEGAL ?                      GP96081
         BH    PROFHEX       NO; DISPLAY AS HEX                 GP96081
         NR    R15,R0        ISOLATE LOW NYBBLE                 GP96081
         CR    R15,R7        IS IT NUMERIC?                     GP96081
         BH    DBTPACKD      NO; SIGN ENDS THE FIELD            GP96081
         LA    R1,1(,R1)     SPACE                              GP96081
         BCT   R6,*+8        OK IF USER'S COUNT NOT EXHAUSTED   GP96081
         B     PROFHEX       ELSE INVALID PACKED                GP96081
         BCT   R4,DBTPACKL   TRY AGAIN                          GP96081
         B     PROFHEX       TOO BAD                            GP96081
         SPACE 1                                                GP96081
*  COPY NUMBER TO MAXIMUM LENGTH PACKED WORK AREA AND CHECK SIGN
*    NOTE THAT SIGN IS STILL IN R15                             GP96081
DBTPACKD SR    R5,R4         INPUT LENGTH                       GP96081
         LTR   R3,R3         DID USER SPECIFY AN INPUT LENGTH?  GP96081
         BZ    DBTPACK0      NO; USE OURS                       GP96081
         MVI   MSGFLAG,C'L'-X'40' PROVISIONALLY FLAG BAD LENGTH AGAIN
         CR    R3,R5         SAME AS USER'S ?                   GP96081
         BNE   PROFHEX       NO; FORMAT AS HEX                  GP96081
DBTPACK0 BCTR  R5,0          EXECUTE LENGTH                     GP96081
         XC    REGWORK(16),REGWORK  USE AS WORK SPACE           GP96081
         LA    R7,REGWORK+16-1                                  GP96081
         SR    R7,R5         LOCATION TO MOVE TO                GP96081
         EX    R5,DBTPACKM   MOVE TO WORK SPACE                 GP96081
         MVC   MSGTEXT-1(37),DBTPAMSK                           GP96081
         LA    R1,MSGTEXT+L'MSGTEXT-1   POINT TO SIGNIFICANCE   GP96081
         EDMK  MSGTEXT+L'MSGTEXT-32(32),REGWORK  FORMAT         GP96081
         BCTR  R1,0          INSIGNIFICANT LOCATION             GP96081
         STC   R15,0(,R1)    STORE HEX SIGN (0A-0F)             GP96081
         TR    0(1,R1),DBTPACKS-X'0A'  MAKE PRINTABLE SIGN      GP96081
         OI    MSGTEXT+L'MSGTEXT-1,C'0'  MAKE F ZONE            GP96081
         CLI   0(R1),C'?'    UNUSUAL SIGN?                      GP96081
         BE    DBTPACKF      NO                                 GP96081
         SLR   R3,R3         NO MORE DATA                       GP96081
         B     DBTLAST       PRINT THIS LINE                    GP96081
DBTPACKM MVC   0(0,R7),0(R2)  RIGHT ADJUST USER'S NUMBER        GP96081
DBTPACKS DC    C'??+-? '     F - BLANK, C - PLUS, D - MINUS     GP96081
DBTPAMSK DC    C' PD   ',30X'20',X'21,20'                       GP96081
DBTPACKF MVI   MSGTEXT-1,C' '                                   GP96081
         MVC   MSGTEXT,MSGTEXT-1  CLEAR TEST PORTION AGAIN      GP96081
         MVI   MSGFLAG,C'S'-X'40' SHOW BAD SIGN AND DO AS HEX   GP97265
         B     PROFHEX                                          GP97266
         SPACE 1
***********************************************************************
**                                                                   **
**  CONDITIONAL TEXT :  COMPARE TEXT TO OUR TRANSLATE TABLE. WHEN    **
**  UNPRINTABLE CHARACTERS OCCUR, FORMAT THE STRING IN HEXADECIMAL,  **
**  OTHERWISE PRINT IT.                                              **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
FUNFCHEX MVI   MSGFLAG,C'C'-X'40'                               GP97266
PROFCHEX LTR   R15,R3        COPY LENGTH                        GP96101
         BNP   FUNFTEXT      INVALID; GET OUT                   GP96101
         BCTR  R15,0         SET FOR EXECUTE                    GP96101
         LR    R4,R2         SAVE                               GP96101
         EX    R15,CHEXTRT   IS THIS A PRINTABLE TEXT STRING?   GP96101
         LR    R2,R4         RESTORE                            GP96101
         BZ    FUNFTEXT      YES; PRINT AS TEXT                 GP96101
         OI    PROFLAGS,PFDUAL  ENABLE DUAL HEX/TEXT DISPLAY    GP00162
         B     FUNFHEX       ELSE FORMAT IN HEX                 GP96101
CHEXTRT  TRT   0(0,R2),TRTCHAR  CHECK FOR PRINTABLES            GP96101
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  HEXADECIMAL FORMATTING                                           **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP96101
FUNFHEX  MVI   MSGFLAG+1,C'H'-X'40'    MAKE LOWER CASE H        GP97266
         OI    PROFLAGS,PFDUAL  ENABLE DUAL HEX/TEXT DISPLAY    GP00162
PROFHEX  BASR  R6,0          SET RETURN ADDRESS                  92271
         LR    R0,R2         NEXT DISPLAY ADDRESS               GP09277
         S     R0,@BASE      LESS START                         GP09277
         BNP   PROFHEX1      SKIP FIRST TIME                    GP09277
         ST    R0,DB         SAVE                               GP09277
         UNPK  MSGLABL+2(7),DB+1(4)                             GP09277
         TR    MSGLABL+2(6),DBTHEXTR                            GP09277
         MVI   MSGLABL+8,C' '                                   GP09277
         MVI   MSGLABL+1,C'+'
PROFHEX1 SLR   R4,R4
         LA    R1,MSGTEXT    POINT TO TEXT
         LA    R5,16         MAX INPUT CHARACTERS ON LINE        92093
         TM    PROFLAGS,PFWIDE  DOING WIDE?                     GP99113
         BZ    PROFHEX3      NO                                 GP99113
         LA    R5,32         PRINT TWO GROUPS                   GP99113
         TM    PROFLAGS,PFDUAL  DUAL MODE REQUEST?              GP00162
         BZ    PROFHEX3      NO                                 GP00162
         LTR   R3,R3         IS LENGTH VALID ?                  GP00162
         BNP   PROFHEX3      NO                                 GP00162
         LA    R15,L'MSGHTEX  MAX LENGTH ON ONE LINE            GP00162
         MIN   (R15),(R3)    USE SHORTER                        GP00162
         BCTR  R15,0         SET FOR EXECUTE                    GP00162
         EX    R15,EXMVCHTX  MOVE TO OUTPUT LINE                GP00162
         EX    R15,EXTRHTX   AND MAKE IT PRINTABLE              GP00162
         MVI   MSGHTEX-1,C'*'  FRAME THE TEXT                   GP00162
         MVI   MSGHTEX+L'MSGHTEX,C'*'                           GP00162
PROFHEX3 LTR   R3,R3         VALID LENGTH?                      GP96081
         BP    PROFHEXL      YES                                GP96081
         MVC   MSGTEXT(3),=C'L=?'   MAKE AN ERROR MESSAGE       GP96081
PROFHEXL LTR   R3,R3         ANY MORE TO DO ?
         BNP   DBTLAST
         MVC   DB(1),0(R2)   MOVE SINGLE BYTE                   GP98222
         UNPK  0(3,R1),DB(2)  UNPACK ONE BYTE (NO 0C4)          GP98222
         TR    0(2,R1),DBTHEXTR   MAKE IT PRINTABLE             GP97265
         MVI   2(R1),C' '    BLANK NEXT
         LA    R2,1(,R2)
         LA    R1,2(,R1)
         BCTR  R3,0          ADJUST RESIDUAL COUNT
         LA    R4,1(,R4)     ADD ONE TO COUNT DONE
         LA    R15,3
         NR    R15,R4        END OF A WORD ?
         BNZ   *+8           NO
         LA    R1,1(,R1)     LEAVE A GAP BETWEEN WORDS
         CR    R4,R5         DONE ONE LINE ?                     92093
         BNL   DBTLAST       YES; PROCESS IT
         CH    R4,=H'16'     DONE ONE GROUP?                    GP99113
         BNE   PROFHEXL      NO; NOT YET, OR NEVER              GP99113
         LA    R1,1(,R1)     LEAVE A LARGER GAP BETWEEN GROUPS  GP99113
         B     PROFHEXL      SEE IF MORE TO DO
EXMVCHTX MVC   MSGHTEX(0),0(R2)  COPY USER'S TEXT               GP00162
EXTRHTX  TR    MSGHTEX(0),TRTABTN   LIMIT TO PRINTABLE STUFF    GP00162
         SPACE 1                                                GP97266
***********************************************************************
**                                                                   **
**  TEXT PRINTING                                                    **
**                                                                   **
***********************************************************************
FUNFTEXT MVI   MSGFLAG+1,C'T'-X'40'  L.C. T                     GP97266
PROFTEXT LA    R4,L'MSGTEXT  SET MAXIMUM TEXT PRINTABLE
         TM    PROFLAGS,PFWIDE  DOING WIDE?                     GP99113
         BZ    PROFTEX3      NO                                 GP99113
         LA    R4,2*(1+L'MSGTEXT)  WIDER IS BETTER?             GP99113
PROFTEX3 LTR   R3,R3         VALID LENGTH?                      GP96081
         BP    PROFTEXL      YES                                GP96081
         MVC   MSGTEXT(3),=C'L=?'   MAKE AN ERROR MESSAGE       GP96081
PROFTEXL BASR  R6,(0)        SET RETURN POINT                    92271
         LTR   R3,R3         ANY MORE ?
         BNP   DBTLAST       NO; EXIT
         LR    R0,R2         NEXT DISPLAY ADDRESS               GP09277
         S     R0,@BASE      LESS START                         GP09277
         BNP   PROFTXT1      SKIP FIRST TIME                    GP09277
         ST    R0,DB         SAVE                               GP09277
         UNPK  MSGLABL+2(7),DB+1(4)                             GP09277
         TR    MSGLABL+2(6),DBTHEXTR                            GP09277
         MVI   MSGLABL+8,C' '                                   GP09277
         MVI   MSGLABL+1,C'+'
PROFTXT1 LR    R15,R4        SET TEXT LENGTH
         CR    R3,R15        IS REQUEST LONGER ?
         BNL   *+6           YES
         LR    R15,R3        ELSE USE SHORTER
         BCTR  R15,0         SET EXECUTE LENGTH
         EX    R15,PROFTMVC  MOVE TO LINE
         EX    R15,PROFTTR   MAKE PRINTABLE                     GP00162
         LA    R1,MSGTEXT+1(R15)  GET END OF LINE+1             GP00162
         MVI   0(R1),C'<'    SHOW WHERE TEXT ENDS               GP00162
         AR    R2,R4         UP TEXT ADDRESS
         SR    R3,R4         SET RESIDUAL PRINT LENGTH
         B     DBTLAST       PRINT IT
PROFTMVC MVC   MSGTEXT(0),0(R2)  MOVE USER'S TEXT
PROFTTR  TR    MSGTEXT(0),TRTABTN  LIMIT TO PRINTABLES          GP00162
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  ADJUST FOR MULTIPLE (LIST) ENTRIES IN PARAMETER LIST             **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DBTLIST  LA    R3,REQSIZE    SET POSITIVE                       GP95235
         BAS   R6,DBTLAST    PRINT PRIOR LINE, IF ANY           GP95235
         ICM   R9,15,2(R9)   LOAD NEW LIST ADDRESS              GP95235
         B     INITSHRT      SHOW NAME                          GP95235
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PROCESS THE CURRENT RECORD PER USER'S REQUEST                    **
**    SKIP COMPLETELY BLANK LINES                                    **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
FORMFAIL MVC   MSGTEXT+20(21),=C' ** PGM EXCEPTION ** '         GP10092
         SR    R3,R3         TERMINATE THE FUNCTION             GP10092
         SPACE 1                                                GP99113
DBTLAST  CLC   MSGLABL(MSGRTDS-MSGLABL),MSGLABL-1  ANYTHING TO PRINT ?
         BE    DONEOUT       NO; SKIP WHEN NO DATA              GP99113
         TM    PROFLAGS,PROFLWTO  USE WTO RATHER THAN PRINT?    GP95240
         BNZ   DOWTO         YES                                GP95240
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  PRINT RECORD TO ANY DCB OPEN FOR QSAM OUTPUT                     **
**    (CURRENTLY DATA MODE IS NOT SUPPORTED)                         **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOPUT    #PRT  MSGRDW,TYPE=VCON  PRINT RECORD                   GP09275
         B     DONEOUT       JOIN COMMON                        GP99113
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  WRITE RECORD WITH WTO                                            **
**    NOTE THAT WE DON'T REMOVE THE CARRIAGE CONTROL CHARACTER       **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DOWTO    MVC   MSGRTDS(4),=X'01000020'   DESCRIPTOR 8; ROUTCDE 11
         WTO   MF=(E,MSGRDW)   WRITE TO CONSOLE                  95067
         SPACE 1                                                GP99113
***********************************************************************
**                                                                   **
**  DONE PRINTING.                                                   **
**                                                                   **
**  1) WHEN R3 IS NON-ZERO (RESIDUAL INPUT LENGTH), CONTINUE PROCESS **
**                                                                   **
**  2) BUMP ITEM POINTER (R9) AND FORMAT IT IF VALID                 **
**                                                                   **
**  OTHERWISE CLEAN UP AND RETURN TO CALLER                          **
**                                                                   **
***********************************************************************
         SPACE 1                                                GP99113
DONEOUT  MVC   MSGLABL(MSGRTDS2-MSGLABL),MSGLABL-1  BLANK IT    GP09277
         MVC   MSGHEAD,MSGLABL  CLEAR MESSAGE NUMBER             93357
*OLD*    MVI   MSGHEAD+5,C'+' INDICATE CONTINUATION              93357
         SPACE 1                                                GP99113
LASTSHRT LTR   R3,R3         ANY MORE TO DO ?                   GP95235
         BPR   R6            RESTART
DBTEXIT  LA    R0,0          RESET RECOVERY ADDRESS             GP10092
         ST    R0,TRAPWAD      INTO SPIE EXIT                   GP10092
         TM    REQFLAGS,RQTEOL  END OF LIST FLAG ?              GP02364
         BNZ   DBTEXITS      YES; STOP NOW                      GP02364
         CLI   CURFLAGS,0    ANY SPECIAL REQUESTS LEFT?         GP10092
         BNE   DBTLOOP       YES; DO THEM NOW                   GP10092
         TM    REQTYPE+1,RFNONAM NAME PRESENT ?                 GP09277
         BNZ   *+8           YES; NORMAL SIZE                   GP09277
         LA    R9,8(,R9)     ALLOW FOR LABEL                    GP09277
         LA    R9,REQSIZE(,R9)    SKIP TO NEXT OPTION ENTRY     GP09277
         B     ITEMLOOP      AND DO IT                          GP10092
DBTEXITS TM    PROFLAGS,PROFLEND  DID WE HAVE A CLOSE CALL ?    GP98222
         BZ    DBTEXITZ      NO                                 GP98222
         #PRT  TYPE=CLOSE,DEV=1 CLOSE DCB                       GP98222
DBTEXITZ L     R13,4(,R13)   LOAD CALLER'S SAVE AREA            GP99043
         LM    R14,R12,12(R13)  RESTORE                         GP99043
         BSM   0,R14         AND RETURN TO USER                 GP99029
         SPACE 1                                                GP99113
         LTORG ,                                                GP99113
         SPACE 1                                                GP96109
DB       DC    D'0'          WORK SPACE
SUBSAVE  DC    18A(0)         SAVE AREA                         GP95235
REGWORK  DC    16A(0)        WORK SPACE FOR REG OPTION          GP96101
TRAPWAD  DC    A(0)          RESTART ADDRESS FOR FORMAT ERROR   GP10092
PRINTWRK #PRTWRK DDNAME=SYSDEBUG,REPCH=C'.'                     GP99113
@HEADERS DC    A(PAGE#,TIT1,X'80000000'+TIT2,0) TITLES          GP09277
TIT1     VCON  '1',END=TIT1END
         DC    CL48' '
         DC    CL73'TRAP - Diagnostic output'
         DC    C'PAGE',C' '
PAGE#    DC    C'0000'       CURRENT PAGE NUMBER
         VCON  *END
TIT2     VCON  '0    '
         SPACE 1                                                GP96109
BLANKS   DC    CL80' '                                          GP09277
NUMTODO  DC    F'0'          NUMBER OF ENTRIES                  GP09277
@BASE    DC    A(0)          START ADDRESS FOR OFFSET CALC      GP09277
ADDRMASK DC    X'00FFFFFF'   ADDRESS MODE MASK                  GP99116
CALFLAGS DC    X'00'         CALL OPTIONS                       GP10092
CURFLAGS DC    X'00'         COPY OF CALFLAGS                   GP10092
REQFLAGS DC    X'0000'       ITEM REQUEST FLAGS                 GP09277
PROFLAGS DC    X'00'         LOCAL PROCESSING FLAGS             GP99113
PFWIDE   EQU   X'80'           PROCESSING WIDE LINES            GP99113
PROFLWID EQU   X'80'           PROCESSING WIDE LINES            GP99113
PFDUAL   EQU   X'40'           SHOW HEX + TEXT                  GP00162
PROFLPRO EQU   X'20'           PRODUCTION MODE                  GP00162
PROFLWTO EQU   X'10'           WTO FORCED                       GP00162
PROFLEND EQU   X'02'           CLOSE CALL                       GP00162
PFCANC   EQU   X'01'           GLOBAL CANCEL OF FUNCTION        GP00162
PFGBL    EQU   (PFCANC)        FLAGS RETAINED GLOBALLY          GP99113
PROFGMOD DC    X'01'                                            GP09277
PROF@LCL EQU   X'01'
PROF@WTO EQU   X'10'
PROF@DCB EQU   X'40'
         POP   USING                                            GP99113
         SPACE 2
DBTHEXTB DC    C'0123456789ABCDEF'   1/2                        GP97265
DBTHEXTR EQU   DBTHEXTB-C'0'         2/2                        GP97265
MSGRDW   DC    Y(MSGRTDS-*),X'8000'   WTO HEADER                GP96081
MSGMAX   DC    CL133' '      ASSURE REQUIRED SPACE              GP99113
         ORG   MSGMAX        REDEFINE                           GP99113
MSGRTDSC DC    C' '          CARRIAGE CONTROL                   GP99113
MSGHEAD  DC    CL8'ESP666',C' '  DEBUG HEADER
MSGLABL  DC    CL8' ',C' '   USER'S LABEL                       GP97265
MSGFLAG  DC    CL2' ',C' '   ANNOTATION/ERROR MSGS              GP97265
MSGTEXT  DC    CL36' '       USER'S HEX OR EBCDIC TEXT          GP97265
         DC    C' '          EXTRA FOR UNPACK                    94011
MSG@TCB  DC    CL8' ',C' '   CURRENT TCB ADDRESS+PADDING FOR UNPK
MSGRTDS  DC    X'01000020'   DESCRIPTOR 8; ROUTCDE 11
         ORG   MSG@TCB         REDEFINE FOR WIDE OPTION         GP99113
         DC    C' '          GROUP SEPARATOR                    GP99113
MSGTEXT2 DC    CL36' '       ANOTHER 4 HEX WORDS                GP99113
         DC    C' '          EXTRA FOR UNPACK                    94011
MSG@TCB2 DC    CL8' ',C' '   CURRENT TCB ADDRESS+PADDING FOR UNPK
         ORG   MSG@TCB2      RE-USE FOR WIDE DUAL OPTION        GP00162
         DC    C' '          LEFT FRAME *                       GP00162
MSGHTEX  DC    CL32' '       TEXT FOR HEX DUAL OPTION           GP00162
         DC    C' '          RIGHT FRAME *                      GP00162
         ORG   ,                                                GP99113
MSGRTDS2 DC    X'01000020'   DESCRIPTOR 8; ROUTCDE 11           GP99113
         SPACE 1
*   THIS TABLE DEFINES ALL TN/T11 CHARACTERS                    GP00162
*                                                               GP96101
TRTCHAR  TRTAB CODE=TN,FILL=X'FF'  0 FOR VALID CHARS            GP00162
TRTABTN  TRTAB CODE=TN,FILL=C'.'   VALID CHARS                  GP09277
         SPACE 1                                                GP95235
REQWORK  DSECT ,             INPUT REQUEST LIST MAPPING         GP95235
REQTYPE  DS    X             REQUEST TYPE                       GP95235
RTREGS   EQU   0               REGISTER LISTING                 GP96101
RTTEXT   EQU   1               TEXT STRING                      GP95235
RTCHEX   EQU   2               PRINTABLE TEXT, ELSE HEX         GP96101
RTHEX    EQU   3               HEXADECIMAL                      GP95235
RTPACK   EQU   4               PACKED DECIMAL                   GP96081
RTVAR    EQU   8               VARIABLE NAME (+ DATA REQUEST)   GP95235
RQTEOL   EQU   X'80'           END OF LIST FLAG                 GP02364
RQTMSK   EQU   X'7F'           END OF LIST MASK                 GP02364
         SPACE 1                                                GP95235
REQFG    DC    AL1(0)        OPTION FLAGS                       GP95235
RFIAD    EQU   1               INDIRECT ADDRESS SUPPLIED        GP96101
RFA24    EQU   2               FORCE 24-BIT MODE ADDRESSING     GP96101
RFA31    EQU   4               FORCE 31-BIT ADDRESSING MODE     GP96101
RFNONAM  EQU   X'80'           NAME FIELD OMITTED               GP09277
         SPACE 1                                                GP95235
REQADDR  DS    S             ADDRESS OF VARIABLE                GP95235
REQLEN   DS    Y             LENGTH OF VARIABLE                 GP95235
REQNAME  DS    0CL8          VARIABLE NAME FOR RTVAR TYPE       GP95235
REQSIZE  EQU   *-REQWORK     LENGTH OF ONE ENTRY (EXC VARIABLE AND TAG)
         PRINT NOGEN                                            GP95235
         YREGS ,                                                GP95235
         IHAPSA ,                                               GP95235
         IKJTCB ,
         IHARB ,
         IHACDE ,
         DCBD  DEVD=DA,DSORG=PS                                 GP95235
         IEFUCBOB ,                                             GP99113
         MAPMTS ,                                                93185
         IHAASCB ,                                               83324
         IEFJESCT ,                                              87280
         IEFJSCVT ,                                              87280
         IEFJSSIB ,                                              87280
         END   ,
