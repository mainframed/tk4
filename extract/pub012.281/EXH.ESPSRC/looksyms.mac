LOOKSYMS TITLE 'L O O K S Y M S  ***  SYMBOLIC MACRO MAPPINGS'
$DECT    OPSYN DSECT
DSECT    OPSYN
$CECT    OPSYN CSECT
CSECT    OPSYN
$C       OPSYN DC
DC       OPSYN
$S       OPSYN DS
DS       OPSYN
         MACRO
&LBL     DSECT
.*
.**      THIS MACRO SAVES THE INDICATOR THAT THE CURRENT SECTION IS A
.**      DSECT
.*
         GBLC  &SECTYP
         GBLC  &BKBASE,&BKNAME
         GBLB  &$1DSECT
         LCLA  &I
         AIF   ('&LBL' EQ '&BKNAME').OK
         AIF   (NOT &$1DSECT).OK
&LBL     BKSEG
&BKBASE  SETC  '&LBL'
.OK      ANOP
&$1DSECT SETB  1
&LBL     $DECT
&SECTYP  SETC  '$DECT'
         MEND
         MACRO
&LBL     CSECT
.*
.**      THIS MACRO SAVES THE INDICATOR THAT THE CURRENT SECTION IS A
.**      CSECT
.*
         GBLC  &SECTYP
&SECTYP  SETC  '$CECT'
&LBL     $CECT
         MEND
         EJECT
         MACRO
&LBL     DC
.*
.**      THIS MACRO GENERATES NECESSARY FIELDS FOR A DC IN A DSECT
.*
         GBLC  &SECTYP,&PRFX,&BKBASE
         GBLC  &$SEGL,&$SEGST,&$SEGO
         GBLA  &$LN,&$CO
         GBLC  &GQ1,&GQ2,&GQ3
         LCLA  &J,&K,&NSYSL,&LN
         LCLA  &OLN,&OCO
         LCLC  &ID,&TY,&C,&D
&NSYSL   SETA  N'&SYSLIST
&LBL     $C    &SYSLIST(1)
&J       SETA  2
.DCLP    AIF   (&J GT &NSYSL).DONE
         $C    &SYSLIST(&J)
&J       SETA  &J+1
         AGO   .DCLP
.DONE    ANOP
.*
.*       GET LABEL IDENTIFIER
.*
&K       SETA  K'&PRFX
&J       SETA  K'&LBL
         AIF   (&J LT &K+1).NOGO
&ID      SETC  '&LBL'(&K+1,&J-&K)
         AIF   ('&ID'(1,2) EQ 'RV').NOGO
         AIF   ('&ID'(1,3) EQ 'RSV').NOGO
         AIF   ('&$SEGO' EQ '').NOSEG
&GQ1     SETC  '&LBL'
&GQ2     SETC  '&BKBASE'
&GQ3     SETC  '&$SEGO'
&$SEGO   SETC  ''
.NOSEG   ANOP
.*
.*       GET OPERAND TYPE
.*
&J       SETA  1
&K       SETA  1
.LP1     ANOP
&C       SETC  '&SYSLIST(&K)'(&J,1)
         AIF   ('&C' EQ '0').SECTYP
         AIF   ('&C' LT '0').HALPHA
&J       SETA  &J+1
         AGO   .LP1
.SECTYP  ANOP
&K       SETA  &K+1
&J       SETA  1
         AIF   (&K LE &NSYSL).LP1
.* CANT FIND TYPE SO QUIT THIS ONE
         AGO   .NOGO
.HALPHA  ANOP
&TY      SETC  '&C'
.*
.*       NOW VALIDATE TYPE OF CONSTANT
.*
         AIF   ('&TY' EQ 'C').GOTLN1
         AIF   ('&TY' EQ 'X').GOTLN1
         AIF   ('&TY' EQ 'B').GOTLN1
         AIF   ('&TY' EQ 'P').GOTLN1
         AIF   ('&TY' EQ 'H').GOTLN2
         AIF   ('&TY' EQ 'S').GOTLN2
         AIF   ('&TY' EQ 'Y').GOTLN2
         AIF   ('&TY' EQ 'F').GOTLN4
         AIF   ('&TY' EQ 'A').GOTLN4
         AIF   ('&TY' EQ 'V').GOTLN4
         AIF   ('&TY' EQ 'E').GOTLN4
         AIF   ('&TY' EQ 'D').GOTLN8
         MNOTE 8,'UNKNOWN TYPE &TY ON LABEL &LBL'
.GOTLN1  ANOP
&LN      SETA  1
         AGO   .GOTLN
.GOTLN2  ANOP
&LN      SETA  2
         AGO   .GOTLN
.GOTLN4  ANOP
&LN      SETA  4
         AGO   .GOTLN
.GOTLN8  ANOP
&LN      SETA  8
         AGO   .GOTLN
.GOTLN   ANOP
&C       SETC  '&SYSLIST(&K)'(&J+1,1)
         AIF   ('&C' NE 'L').HAVELN
&J       SETA  &J+2
&D       SETC  ''
.LP2     ANOP
&C       SETC  '&SYSLIST(&K)'(&J,1)
         AIF   ('&C' LT '0').CVNLN
&D       SETC  '&D'.'&C'
&J       SETA  &J+1
         AGO   .LP2
.CVNLN   ANOP
&LN      SETA  &D
.HAVELN  ANOP
.*LN     SETA  L'&LBL
&OLN     SETA  &$LN
&OCO     SETA  &$CO
&$CO     SETA  &$CO+8+&LN+&LN+2
         AIF   (&$CO LT 81).GOTPOS
&$CO     SETA  1+8+&LN+&LN+2
&$LN     SETA  &$LN+1
&OLN     SETA  &$LN
&OCO     SETA  1
         AIF   (&$LN LT 17).GOTPOS
         BKSEG ,
&OLN     SETA  &$LN
&OCO     SETA  &$CO
&$CO     SETA  1+8+&LN+&LN+2
.GOTPOS  ANOP
CBBKLS   $CECT
         $C    CL8'&ID',CL1'&TY',AL1(&LN),AL2(&LBL-&BKBASE)
         $C    AL2(&OLN,&OCO)
&SYSECT  &SECTYP
         AIF   ('&$SEGST' NE '').NOGO
&$SEGST  SETC  '&LBL'
.NOGO    ANOP
         MEND
         EJECT
         MACRO
&LBL     DS
.*
.**      THIS MACRO GENERATES NECESSARY FIELDS FOR A DS IN A DSECT
.*
         GBLC  &SECTYP,&PRFX,&BKBASE
         GBLC  &$SEGL,&$SEGST,&$SEGO
         GBLA  &$LN,&$CO
         GBLC  &GQ1,&GQ2,&GQ3
         LCLA  &J,&K,&NSYSL,&LN
         LCLA  &OLN,&OCO
         LCLC  &ID,&TY,&C,&D
&NSYSL   SETA  N'&SYSLIST
&LBL     $S    &SYSLIST(1)
&J       SETA  2
.DCLP    AIF   (&J GT &NSYSL).DONE
         $S    &SYSLIST(&J)
&J       SETA  &J+1
         AGO   .DCLP
.DONE    ANOP
.*
.*       GET LABEL IDENTIFIER
.*
&K       SETA  K'&PRFX
&J       SETA  K'&LBL
         AIF   (&J LT &K+1).NOGO
&ID      SETC  '&LBL'(&K+1,&J-&K)
         AIF   ('&ID'(1,2) EQ 'RV').NOGO
         AIF   ('&ID'(1,3) EQ 'RSV').NOGO
         AIF   ('&$SEGO' EQ '').NOSEG
&GQ1     SETC  '&LBL'
&GQ2     SETC  '&BKBASE'
&GQ3     SETC  '&$SEGO'
&$SEGO   SETC  ''
.NOSEG   ANOP
.*
.*       GET OPERAND TYPE
.*
&J       SETA  1
&K       SETA  1
.LP1     ANOP
&C       SETC  '&SYSLIST(&K)'(&J,1)
         AIF   ('&C' EQ '0').SECTYP
         AIF   ('&C' LT '0').HALPHA
&J       SETA  &J+1
         AGO   .LP1
.SECTYP  ANOP
&K       SETA  &K+1
&J       SETA  1
         AIF   (&K LE &NSYSL).LP1
.* CANT FIND TYPE SO QUIT THIS ONE
         AGO   .NOGO
.HALPHA  ANOP
&TY      SETC  '&C'
.*
.*       NOW GET THE LENGTH OF THE SYMBOL
.*
         AIF   ('&TY' EQ 'C').GOTLN1
         AIF   ('&TY' EQ 'X').GOTLN1
         AIF   ('&TY' EQ 'B').GOTLN1
         AIF   ('&TY' EQ 'P').GOTLN1
         AIF   ('&TY' EQ 'H').GOTLN2
         AIF   ('&TY' EQ 'S').GOTLN2
         AIF   ('&TY' EQ 'Y').GOTLN2
         AIF   ('&TY' EQ 'F').GOTLN4
         AIF   ('&TY' EQ 'A').GOTLN4
         AIF   ('&TY' EQ 'V').GOTLN4
         AIF   ('&TY' EQ 'E').GOTLN4
         AIF   ('&TY' EQ 'D').GOTLN8
         MNOTE 8,'UNKNOWN TYPE &TY ON LABEL &LBL'
&LN      SETA  0
.GOTLN1  ANOP
&LN      SETA  1
         AGO   .GOTLN
.GOTLN2  ANOP
&LN      SETA  2
         AGO   .GOTLN
.GOTLN4  ANOP
&LN      SETA  4
         AGO   .GOTLN
.GOTLN8  ANOP
&LN      SETA  8
         AGO   .GOTLN
.GOTLN   ANOP
         AIF   (K'&SYSLIST(&K) LE &J).HAVELN
&C       SETC  '&SYSLIST(&K)'(&J+1,1)
         AIF   ('&C' NE 'L').HAVELN
&J       SETA  &J+2
&D       SETC  ''
.LP2     ANOP
&C       SETC  '&SYSLIST(&K)'(&J,1)
         AIF   ('&C' LT '0').CVNLN
&D       SETC  '&D'.'&C'
&J       SETA  &J+1
         AIF   (K'&SYSLIST(&K) GT &J).LP2
.CVNLN   ANOP
&LN      SETA  &D
.HAVELN  ANOP
.*LN     SETA  L'&LBL
&OLN     SETA  &$LN
&OCO     SETA  &$CO
&$CO     SETA  &$CO+8+&LN+&LN+2
         AIF   (&$CO LT 81).GOTPOS
&$CO     SETA  1+8+&LN+&LN+2
&$LN     SETA  &$LN+1
&OLN     SETA  &$LN
&OCO     SETA  1
         AIF   (&$LN LT 17).GOTPOS
         BKSEG ,
&OLN     SETA  &$LN
&OCO     SETA  &$CO
&$CO     SETA  1+8+&LN+&LN+2
.GOTPOS  ANOP
CBBKLS   $CECT
         $C    CL8'&ID',CL1'&TY',AL1(&LN),AL2(&LBL-&BKBASE)
         $C    AL2(&OLN,&OCO)
&SYSECT  &SECTYP
         AIF   ('&$SEGST' NE '').NOGO
&$SEGST  SETC  '&LBL'
.NOGO    ANOP
         MEND
         EJECT
         MACRO
&LBLP    BKSTR &VAL,&OFF,&BASE,&DSECT,&SLS
         GBLA  &BK
.*   &BK  -  NUMBER OF CURRENT CONTROL BLOCK (USED FOR NAME GEN)
         GBLB  &FRST,&$1DSECT
.*   &FRST  -  TRUE IF NOT FIRST CONTROL BLOCK
.*   &$1DSECT  -  FALSE ON FIRST DESCT IN CB, TRUE FOR SECONDARY DSECTS
         GBLC  &PRFX,&BKBASE,&BKNAME,&ORGBSE
.*   &PRFX  -  PREFIX OF SYMBOLS TO REMOVE
.*   &BKBASE  -  LABEL OF OFFSET 0 IN MAIN CONTROL BLOCK/CURRENT DSECT
.*   &BKNAME  -  DSECT NAME OF MAIN CONTROL BLOCK
.*   &ORGBSE  -  ALWAYS NAME AT OFFSET 0 IN MAIN CONTROL BLOCK
         GBLC  &SECTYP
.*   &SECTYP  -  TYPE OF LAST CONTROL SECTION (DSECT/CSECT)
         GBLC  &#SEGD(10),&#SEGO(10)
.*   &#SEGD  -  DSECT NAMES OF SECONDARY SECTIONS
.*   &#SEGO  -  SYMBOL IN MAIN SECTION WITH ADDRESS OF SECONDARY
         LCLC  &PJ1,&PJ2,&PJ3,&PJ4
         LCLA  &I,&J
.*
.**      BEGINNING OF CONTROL BLOCK MACRO
.**            NEED TO CREATE AREA IN CBMACS TO INDICATE
.**            THE START OF A NEW CONTROL BLOCK, AND ITS
.**            VERIFICATION FIELD
.**            &LBLP  -   NAME OF BLOCK FOR OVERLAY
.**            &VAL   -   VALUE OF VALIDATION FIELD
.**            &OFF   -   LABEL OF FIELD IN DSECT
.**            &BASE  -   LABEL OF START OF MAIN BODY (GIVES OFFSET)
.**            &DSECT -   LABEL OF DSECT OF MAIN BODY
.**            &SLS   -   SUBLIST OF SYMBOLS AND DSECTS FOR SECONDARY
.**                       SECTIONS
.*
&I       SETA  1
.CRLP    ANOP
&#SEGD(&I) SETC ''
&I       SETA  &I+1
         AIF   (&I LE 10).CRLP
&$1DSECT SETB  0
&PRFX    SETC  '&LBLP'
&PJ1     SETC  'XYZ1&SYSNDX'
&PJ2     SETC  'XYZ2&SYSNDX'
&PJ3     SETC  'XYZ3&SYSNDX'
&PJ4     SETC  'XYZ4&SYSNDX'
LOOKSYMS $CECT
         AIF   (NOT &FRST).SKIPNT
         ORG   *-4                     BACK UP OVER PREVIOUS FULL WORD
.SKIPNT  ANOP
&FRST    SETB  1
&BK      SETA  &BK+1
&BKBASE  SETC  '&BASE'
&ORGBSE  SETC  '&BASE'
&BKNAME  SETC  '&DSECT'
         $C    A(&PJ3)                 ADDRESS OF NEXT CONTROL BLOCK
         $C    A(&OFF-&BASE)           OFFSET TO VALIDATION FIELD
         $C    A(&PJ4)                 ADDR OF BLOCK IN CBBLKS
         $C    CL8'&LBLP'              NAME OF BLOCK FOR OVERLAY
         $C    AL1(&PJ2-&PJ1)          LENGTH OF VALIDATION VALUE
&PJ1     $C    &VAL                    VALIDATION VALUE
&PJ2     EQU   *
&PJ3     $C    F'0'                    IF THIS FIELD IS ZERO THEN
*                                      THIS IS LAST BLOCK
CBBKLS   $CECT
&PJ4     $S    0F
&SYSECT  &SECTYP
         AIF   (N'&SLS EQ 0).NOSECS
&I       SETA  1
&J       SETA  1
.SETLP   ANOP
&#SEGO(&J) SETC '&SLS(&I)'
&#SEGD(&J) SETC '&SLS(&I+1)'
&I       SETA  &I+2
&J       SETA  &J+1
         AIF   (&I LT N'&SLS).SETLP
.NOSECS  ANOP
         BKSEG NEW
         MEND
         EJECT
         MACRO
&NBS     BKSEG &TYPE
         GBLA  &NXTSEG,&BK
         GBLA  &$LN,&$CO
         GBLC  &$SEGL,&$SEGST,&$SEGO
         GBLC  &SECTYP
         GBLC  &#SEGD(10),&#SEGO(10)
         GBLC  &BKBASE,&BKNAME,&ORGBSE
         GBLC  &GQ1,&GQ2,&GQ3
         LCLA  &J,&K
         LCLC  &PJ0,&PJ1,&PJ2,&PJ3,&PJ4
         AIF   ('&TYPE' NE 'NEW').NOTNEW
&NXTSEG  SETA  2
&PJ0     SETC  'ZZS1&BK'
&PJ1     SETC  'ZZSZ&BK'
&PJ2     SETC  'ZZS2&BK'
&PJ3     SETC  'ZZP1&BK'
&PJ4     SETC  'ZZQ1&BK'
         AGO   .ALDN
.NOTNEW  ANOP
&GQ3     EQU   &GQ1-&GQ2               OFFSET OF FIRST PIECE OF DATA
&$SEGL   EQU   *-&$SEGST               FINISH OFF PREVIOUS SEGMENT
&J       SETA  &NXTSEG+1               GET NEXT SEGMENT NUMBER
&K       SETA  &NXTSEG-1               GET PREVIOUS SEGMENT NUMBER
&PJ0     SETC  'ZZS&NXTSEG&BK'         CURRENT LABEL
&PJ1     SETC  'ZZS&K&BK'              PREVIOUS LABEL
&PJ2     SETC  'ZZS&J&BK'              NEXT LABEL
&PJ3     SETC  'ZZP&NXTSEG&BK'
&PJ4     SETC  'ZZQ&NXTSEG&BK'
&NXTSEG  SETA  &NXTSEG+1
CBBKLS   $CECT
         $C    XL4'00'                 END PREVIOUS SEGMENT FIELDS
.ALDN    ANOP
&$LN     SETA  1
&$CO     SETA  1
&$SEGST  SETC  ''                      SET SEGMENT START TO NULL
&$SEGL   SETC  '&PJ3'                  SET LABEL FOR EQU
&$SEGO   SETC  '&PJ4'                  SET LABEL FOR EQU
CBBKLS   $CECT
&PJ0     $C    A(&PJ1)                 PREVIOUS SEGMENT ADDR
         $C    A(&PJ2)                 NEXT SEGMENT ADDR
         $C    AL2(&PJ3)               LENGTH OF DATA TO FETCH
         $C    AL2(&PJ4)               OFFSET OF DATA FROM START OF CB
         AIF   ('&NBS' EQ '').SETZERO
&J       SETA  1
.LKLP    ANOP
         AIF   ('&NBS' EQ '&#SEGD(&J)').SETFND SEE IF FOUND SEGMENT
&J       SETA  &J+1
         AIF   (&J LE 10).LKLP         KEEP GOING FOR ALL ENTRIES
         AGO   .SETZERO
.SETFND  $C    AL2(4)
         $C    AL2(&#SEGO(&J)-&ORGBSE)
         AGO   .SETDONE
.SETZERO $C    AL2(0,0)
.SETDONE ANOP
&SYSECT  &SECTYP
         MEND
         EJECT
         MACRO
         BKEND
         GBLC  &SECTYP
         GBLC  &$SEGL,&$SEGST
         GBLA  &NXTSEG,&BK
         GBLC  &GQ1,&GQ2,&GQ3
         LCLA  &J
         LCLC  &PJ1
.*
.**      END OF CONTROL BLOCK MACRO
.*
&GQ3     EQU   &GQ1-&GQ2               OFFSET OF FIRST PIECE OF DATA
&$SEGL   EQU   *-&$SEGST
CBBKLS   $CECT
         $C    XL4'00'                 END PREVIOUS SEGMENT FIELDS
&PJ1     SETC  'ZZS&NXTSEG&BK'
&PJ1     EQU   ZZS1&BK
&J       SETA  &NXTSEG-1
ZZSZ&BK  EQU   ZZS&J&BK
&SYSECT  &SECTYP
         MEND
         SPACE 1                                                GP12047
         COPY  OPTIONGB                                         GP12047
         SPACE 1                                                GP12047
         SYSPARM LIST=YES                                       GP12047
         EJECT
DUMMY    CSECT
DUMMY    AMODE 31
DUMMY    RMODE ANY
CBBKLS   AMODE 31
CBBKLS   RMODE ANY
LOOKSYMS AMODE 31
LOOKSYMS RMODE ANY
         PRINT NOGEN
CVT      BKSTR XL4'0A0307FE',CVTEXIT,CVT,CVT,                          X
               (CVTSMEXT,CVTVSTGX,                                     X
               CVTEXT1,CVTXTNT1,                                       X
               CVTEXT2,CVTXTNT2)
         CVT   DSECT=YES,LIST=YES
         BKEND
         AIF   (&MVSSP).JESID     LATER THA PLAIN MVS ?         GP12047
JES      BKSTR XL4'00000000',JESCT,JESCT,                              *
               (JESCTEXT,JESPEXT)
         AGO   .JESCOM                                          GP12047
.JESID   ANOP  ,                                                GP12047
JES      BKSTR C'JEST',JESCTID,JESCT,JESCT,                            X
               (JESCTEXT,JESPEXT)
.JESCOM  IEFJESCT TYPE=DUM    *** TO FORCE REASONABLE EXPANSION GP12047
         BKEND
SSCT     BKSTR C'SSCT',SSCTID,SSCT,SSCT
         IEFJSCVT ,
         BKEND
ASCB     BKSTR CL4'ASCB',ASCBASCB,ASCB,ASCB
         IHAASCB ,
         BKEND
OUCB     BKSTR CL4'OUCB',OUCBNAME,OUCB,OUCB
         IRAOUCB ,
         BKEND
TCB      BKSTR CL4'TCB ',TCBTCBID,TCBRBP,TCBFIX,                       X
               (TCBEXT2,TCBXTNT2)
         IKJTCB LIST=YES
         BKEND
         END
