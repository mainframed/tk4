STEPLIB  TITLE '*****  S T E P L I B   C O M M A N D   P R O C E S S O X
               R  *****'
*********************************************************************
*                                                                   *
*   THIS IS A TSO COMMAND PROCESSOR THAT WILL ALLOW CONCATENATION   *
*   OF LOAD LIBRARIES AS THE 'STEPLIB' IN A TSO SESSION.            *
*                                                                   *
*   THE PROGRAM MUST RESIDE IN A LINKLIST LIBRARY AND BE LINKED     *
*   AC(1), I.E., AUTHORIZED.                                        *
*                                                                   *
*   THE COMMAND IS EXECUTED AS FOLLOWS :                            *
*     ON THE TSO COMMAND LINE ENTER :                               *
*                                                                   *
*        STEPLIB DA(DSN1,DSN2,DSN3...) SHR/OLD                      *
*    WHERE :                                                        *
*       DSN1/2/3 IS FULLY QUALIFIED AND IN QUOTES IF NOT BELONGING  *
*       TO THE USER WHOSE SESSION IS EXECUTING, E.G.,               *
*                                                                   *
*             STEPLIB ('EXPL.PHASEII') SHR     - OR -               *
*                                                                   *
*       SIMPLY THE 2ND, 3RD, ETC. LEVEL QUALIFIERS IF BELONGING TO  *
*       THE USER WHOSE SESSION IS EXECUTING, E.G.,                  *
*                                                                   *
*             STEPLIB (JOBS.LOAD) SHR                               *
*                                                                   *
*    UP TO SIX 'LOAD' DATA SETS MAY BE INCLUDED IN THE CONCATEN-    *
*    ATION, EACH SEPARATED BY COMMAS. IF THE DISPOSITION IS NOT     *
*    INCLUDED, (I.E., OLD OR SHR), SHR IS ASSUMED.                  *
*                                                                   *
*    AN EXAMPLE OF MULTIPLE D.S. CONCATENATION IS :                 *
*                                                                   *
*         STEPLIB DA('EXPL.PHASEII',JOBS.LOAD,LINK.LOAD) SHR        *
*                                                                   *
*    TO DELETE THE 'STEPLIB' CONCATENATIONS SIMPLY ENTER :          *
*                                                                   *
*         STEPLIB                                                   *
*                                                                   *
*    ON THE COMMAND LINE.                                           *
*                                                                   *
*                                                                   *
*    THIS PROGRAM WAS WRITTEN BY :                                  *
*                                                                   *
*       JIM WHEATON                                                 *
*       EDPC - ROOM 249 SOUTH TOWER                                 *
*       PHONE : 965-7529                                            *
*                                                                   *
*    PLEASE DIRECT ANY COMMENTS, PROBLEMS, ETC. TO JIM.             *
*                                                                   *
*********************************************************************
*                                                                   *
*    NEW GOODIES:                                                   *
*                                                                   *
*      STEPLIB  LIST      WILL LIST CURRENT AND OLD LIBRARIES       *
*                                                                   *
*      STEPLIB (DS...) APF       WILL AUTHORIZE THE NEW             *
*                                CONCATENATION                      *
*                                                                   *
*      STEPLIB (DS...) APPEND    WILL CONCATENATE EXISTING SYSTEM   *
*                                STEPLIB/JOBLIB DATA AFTER USER'S   *
*                                                                   *
*      STEPLIB (DS...) LIST      WILL LIST CURRENT AND OLD ENTRIES  *
*                                AFTER ALLOCATION.                  *
*                                                                   *
*    TO AVOID CONFLICTS WITH THE OLD VERSION OF STEPLIB, THE NEW    *
*    CODE USES A DDNAME PREFIX OF  STEPDYN                          *
*                                                                   *
*    ON SYSTEMS WITH RESOURCE ACCESS CONTROL ACTIVE THE APF OR AUTH *
*    PARAMETER WILL WORK ONLY IF THE USER HAS READ ACCESS TO        *
*    PROFILE STEPAUTH IN THE FACILITY CLASS.                        *
*                                                                   *
*********************************************************************
*                                                                   *
*    MAINTENANCE/MODIFICATIONS:                                     *
*                                                                   *
*    1998/12/10   GYP     MAPPING MACROS, EFFICIENCY CHANGES.       *
*                         SUPPORT FOR EXISTING STEPLIB.             *
*                         UPDATED TO RUN IN 31-BIT SYSTEMS (TIOT    *
*                         ABOVE THE LINE; SWA TOKENS, ETC.)         *
*                         I COULD NOT GET RESET TO FREE THE STEPDYN *
*                         ALLOCATIONS, SO I ADDED EXPLICIT UNALLOC  *
*                         CODE TO THE IRB EXIT.                     *
*                         BASE REGISTERS REARRANGED TO MAKE FOR     *
*    THROUGH 1998-12-16   EASIER MAINTENANCE.                       *
*    1999-01-12   GYP     FIXED ADDRESSING ERROR                    *
*    2006-11-23   GYP     CHANGED TO SUPPORT MVS 3.8J. FOR LATER    *
*                         SYSTEMS, SET GBLB &MVSXA TO 1             *
*    2012-04-04   JW      IF RAC IS ACTIVE CHECK FOR READ ACCESS TO *
*                         PROFILE STEPAUTH IN THE FACILITY CLASS    *
*                         BEFORE ACTING UPON THE APF/AUTH PARAMETER *
*    2015-04-15   GYP     ADDED JUERGEN WINKELMANN'S RAC CHANGES;   *
*                         UPPER CASE TRANSLATION COURTESY OF RFE    *
*********************************************************************
         SPACE 1
         MACRO ,
&NM      WORKAREA &PFX=PAT
.*   THIS AREA IS EXPANDED ONCE INLINE TO PRODUCE DC DATA, AND
.*   ONE MORE TIME IN THE DSECT FOR RE-ENTRANCY
         LCLA  &I,&J                                            GP98348
         LCLC  &P            SHORT NAME FOR PREFIX
         LCLC  &C            CHARACTER                          GP98348
         GBLA  &MAXCAT       MAXIMUM CONCATENATION COUNT        GP98348
&P       SETC  '&PFX'
&NM      DS    0D
&P.STPRQ    DC A(&P.REQCT+X'80000000')
&P.REQCT    DC AL1(S99RBEND-S99RB,S99VRBAL,S99NOMNT,0)          GP98349
&P.STPER    DC F'0'
&P.STPPA    DC A(&P.REQPS)
         DC    2F'0'
         SPACE 1
&P.REQPS    DC A(&P.RQDDN)
&P.REQDA    DC A(&P.RQDSN)
&P.RQDPA    DC A(&P.RQDSP+X'80000000')
         SPACE 1
&P.RQDDN    DC Y(DALDDNAM,1,L'&P.DDNAM)   DDNAME = STEPDYN      GP98349
&P.DDNAM    DC C'STEPDYN '
&P.RQDSN    DC Y(DALDSNAM,1,L'&P.DSNAM)   DSNAME OF STEPDYN     GP98349
&P.DSNAM    DC CL44' '
&P.RQFRE    DC Y(DALCLOSE,0)              CLOSE = FREE          GP98349
&P.RQDSP    DC Y(DALSTATS,1,L'&P.DSPFG)     DISP=SHR            GP98349
&P.DSPFG    DC X'08'                      DISP=SHR              GP98349
         SPACE 1
         DS    0D
&P.CONCT    DC A(&P.CONCL+X'80000000')
&P.CONCL    DC AL1(S99RBEND-S99RB,S99VRBCC,S99NOMNT,0)          GP98349
&P.CNCER    DC F'0'
&P.CNCAT    DC A(&P.CNCPT)
         DC    2F'0'
         SPACE 1
&P.CNCPT    DC A(&P.CNCIT+X'80000000')
         SPACE 1
&P.CNCIT    DC Y(DCCDDNAM)         REQUIRED - DDNAM LIST        GP98349
&P.NUMCT    DC AL2(&MAXCAT)        COUNT OF CONCAT D.S.         GP98348
         DC    AL2(L'&P.BASDD)     LENGTH OF 1ST                GP98345
&P.BASDD    DC CL8'STEPDYN'        1ST CONCATENATION            GP98345
         DC    AL2(L'&P.BASD1)     LENGTH OF 2ND                GP98345
&P.BASD1    DC CL8'STEPDYN1'       2ND CONCATENATION            GP98345
&J       SETA  &MAXCAT                                          GP98348
&I       SETA  2                                                GP98348
.CONLOOP AIF   (&I GE &J).CONDONE                               GP98348
&I       SETA  &I+1                                             GP98348
&C SETC ' 123456789ABCDEFGHIJKLMNOPQRSTUVWZ@#$'(&I,1)           GP98348
         DC    AL2(8),CL8'STEPDYN&C'                            GP98348
         AGO   .CONLOOP                                         GP98348
.CONDONE ANOP  ,                                                GP98348
&P.DATND EQU   *
         MEND  ,
         MACRO ,
&NM      MSGCODE &SAVE=12(R13)                                  GP98344
***********************************************************************
**                                                                   **
**  MAKEMSG :  BUILD WTO MESSAGE TEXT.                               **
**             MSG ADDRESS IN R0 (BUILT BY MSGDEF MACRO)             **
**            NEWWFLAG: NEWWTPUT - ISSUE AS TPUT (IF TS SESSION)     **
**                      NEWWWTO  - ISSUE MESSAGE AS WTO              **
**                      NEWWONCE - DON'T ISUE WTO IF TPUT WAS DONE   **
**                      NEWWONLY - FORMAT WTO TEXT ONLY              **
**                      NEWWHAVE - WRITE (PRE)FORMATTED MESSAGE      **
**                                                                   **
**    RETURN TO R14, WITH 0 (BAD LENGTH) OR NEW MSG TEXT IN R0       **
**                                                                   **
***********************************************************************
         SPACE 1
         PUSH  USING
         AIF   ('&NM' EQ '').NOLBL
&NM      DS    0H
.NOLBL   ANOP  ,
MAKEMSG  STM   R14,R4,&SAVE     PARSIMONY
         TM    NEWWFLAG,NEWWHAVE  REQUEST TO DO PREFORMATTED MESSAGE?
         BNZ   MAKEMUSE      YES
         LR    R4,R0         COPY MESSAGE POINTER
         USING MSGDEFDS,R4   DECLARE MAPPING (I'M LAZY)
         SR    R15,R15       CLEAR FOR IC
         LR    R1,R15        CLEAR FOR MAKEMESS RETURN
         ICM   R15,1,MSDLEN  GET TEXT LENGTH
         BNP   MAKEMESS      NON-POSITIVE - IGNORE REQUEST
         MVC   NEWWTO(4+MSGPFX),MSGPAT MOVE PATTER NTEXT
         LA    R0,L'NEWTXT   GET MAXIMUM LENGTH
         CR    R15,R0        LEGAL?
         BNH   MAKEMSGM
         LR    R15,R0        TRUNCATE TEXT - NO WARNING
MAKEMSGM BCTR  R15,0         MAKE EX LENGTH
         EX    R15,EXMVCWTO  MOVE TEXT
         LA    R15,1+4+MSGPFX(,R15)  TOTAL LENGTH OF WTO
         STH   R15,NEWWTO    STASH IN REQUEST
         LA    R1,NEWWTO(R15) POINT TO FIRST BYTE AFTER
         MVC   0(L'MSGDESC,R1),MSGDESC  MOVE DESCRIPTOR AND ROUTING
         IC    R15,MSDNUM    GET MESSAGE NUMBER
         CVD   R15,NEWDB     CONVERT TO PACKED FORM
         OI    NEWDB+7,X'0F' MAKE POSITIVELY PLUS
         UNPK  NEWHEAD,NEWDB MOVE TO MESSAGE
         MVC   NEWHEAD+L'NEWHEAD(1),MSDFLG  APPEND MESSAGE SEVERITY
*   NOW WE HAVE A WTO FORMAT MESSAGE. SEE WHAT THE USER WANTS TO DO
*     WITH IT.
MAKEMUSE TM    NEWWFLAG,255-NEWWHAVE-NEWWONCE ANY REQUEST FOR OUTPUT?
         BNZ   MAKEMOUT      YES; PROCEED
         MVC   NEWWFLAG,MSGPFLAG  RESTORE DEFAULT FLAGS
MAKEMOUT TM    NEWWFLAG,NEWWTPUT ISSUE TPUT?
         BZ    MAKEMPUT      NO
         L     R15,PSAAOLD-PSA  GET CURRENT ASCB
         ICM   R15,15,ASCBTSB-ASCB(R15)  ANY TSB ?
         BZ    MAKEMPUT      NO
         LH    R2,NEWWTO     RELOAD LENGTH
         SH    R2,=H'4'      ADJUST
         TPUT  NEWWTO+4,(R2) ISSUE
         LTR   R15,R15       SUCCESSFUL ?
         BP    MAKEMPUT      NO ?
         TM    NEWWFLAG,NEWWONCE STOP ON FIRST MESSAGE?
         BNZ   MAKEMEXT
MAKEMPUT TM    NEWWFLAG,NEWWWTO ISSUE WTO ?
         BZ    MAKEMEXT      NO
         WTO   MF=(E,NEWWTO) WRITE TO OPSIE AND JOB LOG
MAKEMEXT LA    R1,NEWWTO     POINT TO NEW MESSAGE
MAKEMESS ST    R1,2*4+&SAVE  RETURN MESSAGE ADDRESS IN R0
         MVC   NEWWFLAG,MSGPFLAG  RESTORE DEFAULT FLAGS
         LM    R14,R4,&SAVE     RELOAD REGISTERS
         BR    R14           RETURN TO CALLER
EXMVCWTO MVC   NEWTXT(0),MSDTXT  MOVE CALLER TEXT
         POP   USING
         MEND  ,
         MACRO ,
&NM      MSGWORK &TYPE,&MOD=HDTXX,&MODNM=' ',&ROUTCDE=7,&DESC=4,&FLAG=(*
               NEWWTPUT+NEWWWTO+NEWWONCE)
.*    DEFINE WORK AREA(S) FOR MSGCODE SUBROUTINE
.*    TYPE FIELD IS ONE OR MORE OF:
.*       PATTERN       EXPAND PATTERN CODE
.*              THIS SHOULD HAVE MOD, MODNM, ETC. KEYWORDS SET
.*       DATA          EXPAND WORK AREA
.*       DSECT         EXPAND MSGDEF MAPPING
.*
.*    ADDED IN SUPPORT OF HDT MESSAGING. ALSO SEE MSGDEF AND MSGCODE
.*    MACROS, AND PROGRAM HDTT085 FOR SAMPLE USE                GP98343
.*
         LCLA  &I,&J,&K
         LCLB  &P1,&D1,&S1
         LCLC  &C,&MB,&STR,&CODE(16)                            GP06327
&I       SETA  1
&K       SETA  N'&SYSLIST
.LOOP    AIF   (&I GT &K).DONE
&C       SETC  '&SYSLIST(&I)'
&I       SETA  &I+1
         AIF   ('&C' EQ 'PATTERN' OR '&C' EQ 'PAT').DOPAT
         AIF   ('&C' EQ 'DATA' OR '&C' EQ 'DAT').DODAT
         AIF   ('&C' EQ 'DSECT' OR '&C' EQ 'DS').DODSECT
 MNOTE 4,'UNRECOGNIZED PARAMETER : &C '
 MNOTE 4,'USE ONE OR MORE OF : PATTERN, DATA, DSECT'
         MEXIT ,
.DOPAT   AIF   (&P1).LOOP
&P1      SETB  1
&MB      SETC  '0000'
         AIF   ('&ROUTCDE' EQ '' AND '&DESC' EQ '').NORTDS
&MB      SETC  '8000'        ROUTING/DESCRIPTOR PRESENT
.NORTDS  ANOP  ,
MSGPAT   DC    AL2(MSGDESC-*),X'&MB'  WTO LEN; ROUT/DESC FG
         AIF   ('&MOD'(1,1) EQ '''').MODSTR
&J       SETA  K'&MOD
MSGPATT  DC    CL(&J)'&MOD '
         AGO   .MODCOM
.MODSTR  ANOP  ,
MSGPATT  DC    C&MOD
.MODCOM  ANOP  ,
MSGPAT#  DC    C'00E'        MESSAGE NUMBER + FLAG
         AIF   ('&MODNM'(1,1) EQ '''').NAMSTR
&J       SETA  K'&MODNM
MSGPATS  DC    CL(&J)'&MODNM '
         AGO   .NAMCOM
.NAMSTR  ANOP  ,
MSGPATS  DC    C&MODNM
.NAMCOM  ANOP  ,
&CODE(1)  SETC  '8000'
&CODE(2)  SETC  '4000'
&CODE(3)  SETC  '2000'
&CODE(4)  SETC  '1000'
&CODE(5)  SETC  '0800'
&CODE(6)  SETC  '0400'
&CODE(7)  SETC  '0200'
&CODE(8)  SETC  '0100'
&CODE(9)  SETC  '0080'
&CODE(10) SETC  '0040'
&CODE(11) SETC  '0020'
&CODE(12) SETC  '0010'
&CODE(13) SETC  '0008'
&CODE(14) SETC  '0004'
&CODE(15) SETC  '0002'
&CODE(16) SETC  '0001'
&MB      SETC  '0000'
&STR     SETC  '0000'
         AIF   ('&DESC' EQ '').NODESC
&MB      SETC  '&CODE(&DESC)'
.NODESC  AIF   ('&ROUTCDE' EQ '').NOROUT
&STR     SETC  '&CODE(&ROUTCDE)'
.NOROUT  ANOP  ,
MSGDESC  DC    X'&STR,&MB'      ROUT/DESC FLAGS
MSGPFX   EQU   MSGDESC-MSGPATT  LENGTH OF HDTT TO : PREFIX
MSG#HD   EQU   MSGPAT#-MSGPATT  LENGTH TO NUMBER
MSGPFLAG DC    AL1(&FLAG)    DEFAULT PROCESSING FLAGS
         AGO   .LOOP
.DODAT   AIF   (&D1).LOOP
&D1      SETB  1
NEWDB    DC    D'0'          WORK
NEWWTO   DC    Y(128-128,0)  1/4   WTO HEADER - LENGTH & MCSFLAGS
NEWPFX   DC    CL(MSGPFX)' ' 2/4   VARIABLE LENGTH TEXT
NEWTXT   DC    CL(128-MSGPFX)' '  3/4   VARIABLE LENGTH TEXT
NEWRTDS  DC    XL4'0'        4/4   VARIABLE INSERTION - DESC/ROUT CODES
NEWHEAD  EQU   NEWPFX+MSG#HD,2,C'C'  MSG NUMBER (XX AFTER HDTT5)
NEWWFLAG DC    AL1(&FLAG)    TPUT/WTO FLAGS
NEWWTPUT EQU   X'80'         ISSUE TPUT IF TS SESSION
NEWWWTO  EQU   X'40'         ISSUE WTO
NEWWHAVE EQU   X'04'         MESSAGE PREFORMATTED (NO R0)
NEWWONLY EQU   X'02'         FORMAT; DO NOT OUTPUT
NEWWONCE EQU   X'01'         ONLY ISSUE MESSAGE TO ONE DESTINATION
         AGO   .LOOP
.DODSECT AIF   (&S1).LOOP
&S1      SETB  1
MSGDEFDS DSECT ,             DEFINE MESSAGE
MSDLEN   DS    X             LENGTH OF USER TEXT
MSDNUM   DS    X             MESSAGE NUMBER
MSDFLG   DS    C             ACTION FLAG (A, D, E, W, I)
MSDTXT   DS    0C            VARIABLE LENGTH TEXT
MSDOFF   EQU   MSDTXT-MSDLEN   OFFSET TO TEXT
         AGO   .LOOP
.DONE    AIF   (&P1 OR &D1 OR &S1).MEND
  MNOTE 0,'NO CODE EXPANDED. ???'
.MEND    MEND  ,
         MACRO ,
&NM      MSGDEF &NUM,&TEXT,&FLAG=E
.*  ADDED FOR DEFINING REPLACEABLE PORTION OF HDT MESSAGE       GP98343
.*  USED WITH MSGWORK AND MSGCODE MACROS (SEE HDTT085 FOR EXAMPLE)
         GBLA  &ZZ@MSG
         LCLA  &NDX
         LCLA  &I,&K,&L,&M
&K       SETA  K'&TEXT
&NDX     SETA  &SYSNDX
         AIF   (T'&NUM EQ 'O').MISSNUM
         AIF   (T'&TEXT NE 'O').HAVETEX
         MNOTE 8,'MESSAGE TEXT IS MISSING'
         MEXIT ,
.MISSNUM MNOTE 4,'MESSAGE NUMBER MISSING; ASSIGNING &ZZ@MSG'
&ZZ@MSG  SETA  &ZZ@MSG+1
.HAVETEX AIF   ('&FLAG' EQ 'E').HAVEFLG
         AIF   ('&FLAG' EQ 'W').HAVEFLG
         AIF   ('&FLAG' EQ 'I').HAVEFLG
         AIF   ('&FLAG' EQ 'A').HAVEFLG
         AIF   ('&FLAG' EQ 'D').HAVEFLG
         MNOTE 4,'FLAG NOT RECOGNIZED; EXPECTING E, W, I, A, OR D'
.HAVEFLG AIF   ('&TEXT'(1,1) EQ '''').QUOTED
&NM      DC    AL1(&K,&NUM),CL1'&FLAG ',CL(&K)'&TEXT '
         MEXIT ,
.QUOTED  ANOP  ,
&K       SETA  &K-2          ALLOW FOR FRAMING QUOTES
&I       SETA  2
&M       SETA  &K            LAST COMPARE POSITION
.QUOLOOP AIF   ('&TEXT'(&I,2) EQ '''''').LESS
         AIF   ('&TEXT'(&I,2) NE '&&').BUMP
.LESS    ANOP  ,
&K       SETA  &K-1
.BUMP    ANOP  ,
&I       SETA  &I+1
         AIF   (&I LE &M).QUOLOOP  LOOK FOR ANOTHER
&NM      DC    AL1(&K,&NUM),CL1'&FLAG ',CL(&K)&TEXT
         MEND  ,
         EJECT ,
         PUNCH ' ORDER STEPLIB(P) '   MAKE DEBUGGING EASIER     GP98348
         PUNCH '  SETCODE AC(1) '    USELESS OTHERWISE          GP04234
         GBLA  &MAXCAT       MAXIMUM DATA SETS TO BE PROCESSED  GP98348
         GBLB  &MVSXA        SET 1 IF XA, ESA, OR LATER SYSTEM  GP06327
&MAXCAT  SETA  6             2-39                               GP98348
         PRINT NOGEN                                            GP98350
         AIF   (&MVSXA).NEWSECT                                 GP06333
STEPLIB  START 0                                                GP06333
         AGO   .COMSECT                                         GP06333
.NEWSECT ANOP  ,                                                GP06333
STEPLIB  RSECT ,             CATCH IBM MACRO (AND MY?) PROBLEMS GP98344
STEPLIB  AMODE 31
STEPLIB  RMODE 24
.COMSECT B     BEGIN-STEPLIB(,R15)     BRANCH AROUND ID         GP06333
         DC    AL1(17),C'STEPLIB  &SYSDATE'                     GP06333
BEGIN    STM   R14,R12,12(R13)
         LA    R10,0(,R15)   COPY AND CLEAR BASE REGISTER       GP98349
         LA    R11,2048(,R10)  MAKE MAINTENACE                  GP98349
         LA    R11,2048(,R11)    A BIT EASIER                   GP98349
         USING STEPLIB,R10,R11                                  GP98349
         LR    R7,R1         PRESERVE THE PARM POINTER          GP98344
         SPACE 1                                                GP98348
***********************************************************************
*                                                                     *
*    THIS SECTION OF CODE DOES THE GETMAIN(IN S.P. 0) FOR THE DATA    *
*    AREA AND INITIALIZES THE POINTERS FOR THE DYNAMIC ALLOCATION.    *
*    ALL OF THIS GARBAGE IS FOR RE-ENTRANCY.                          *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R3,LDWSIZE    LOAD REQUIRED STORAGE SIZE
         GETMAIN  R,LV=(R3)  SUBPOOL 0 (252)
         SR    R5,R5         FROM - USE ZERO FILL
         LR    R2,R1         COPY OVER THE START ADDRESS
         MVCL  R2,R4         CLEAR NEW STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LA    R13,FAKESAVE-LDWDSECT(,R1)  SKIP OVER REAL SAVE  GP06327
         USING FAKESAVE,R13                                     GP06327
         LA    R4,PATTERN    GET PATTERN DATA
         LA    R2,DYNWORK    POINT TO THE DYNAMIC WORK AREA
         LA    R3,DATND-DYNWORK     GET THE LENGTH OF THE AREA
         LR    R5,R3                 .. TWICE ..
         MVCL  R2,R4                 ... MOVE DATA AREA TO GOTTEN AREA
         LA    R2,REQCT            ... SET
         ST    R2,STPRQ            ...  UP                      GP98345
         OI    STPRQ,X'80'                                      GP98345
         LA    R2,REQPS            ...   THE
         ST    R2,STPPA            ...    NEWLY
         LA    R2,RQDDN            ...     GOTTEN
         ST    R2,REQPS            ...      AREA
         LA    R2,RQDSN            ...       WITH
         ST    R2,REQDA            ...        THE
         LA    R2,RQDSP            ...         DYNAMIC
         ST    R2,RQDPA            ...          ALLOC           GP98345
         OI    RQDPA,X'80'                                      GP98345
         LA    R2,CONCL            ...           CALLS
         ST    R2,CONCT            ...       D                  GP98345
         OI    CONCT,X'80'                                      GP98345
         LA    R2,CNCPT            ...        O
         ST    R2,CNCAT            ...         I
         LA    R2,CNCIT            ...          T
         ST    R2,CNCPT            ...                          GP98345
         OI    CNCPT,X'80'                                      GP98345
         MVI   PARMWORD+L'PARMWORD,C' '  MAKE PARSE STOPPER     GP98348
         SPACE 1                                                GP98345
***********************************************************************
*    GET AND SAVE COMMON ADDRESSES                                    *
***********************************************************************
         L     R1,PSATOLD-PSA      ... CVT                      GP98345
         ST    R1,@TCB             ... SAVE MY TCB ADDRESS      GP98345
         L     R2,TCBTIO-TCB(,R1)  ... TIOT POINTER             GP98345
         ST    R2,@TIOT            ... SAVE TIOT ADDRESS        GP98345
         L     R2,TCBJSTCB-TCB(,R1)                             GP98345
         ST    R2,@JSTCB                                        GP98345
         SPACE 2                                                GP98348
***********************************************************************
*    EXAMINE THE INPUT PARAMETER OR COMMAND LINE TEXT                 *
***********************************************************************
         SPACE 1                                                GP98348
         L     R5,0(,R7)           GET THE PARM POINTER         GP98344
         LTR   R5,R5         ONLY PARAMETER IN LIST?            GP98344
         BNM   HAVECMD       NO; ASSUME WE WERE INVOKED AS A COMMAND
         LH    R4,0(,R5)     GET PARM LENGTH                    GP98344
         LTR   R4,R4         ANY ?                              GP98344
         BNP   RESETPAR      NO; RESET REQUEST                  GP98344
         CLI   2(R5),0       IS THIS NEW OR OLD FORMAT TSO?     GP98349
         BE    HAVECMD       NEW; BUFFER SAME AS CMD ENTRY      GP98349
         LA    R15,2(,R5)    POINT TO TEXT                      GP98344
         B     COMPARM                                          GP98344
HAVECMD  LH    R4,0(,R5)           GET PARM LGTH                GP98348
         LA    R15,4(,R5)    POINT TO TEXT                      GP98344
         LH    R3,2(,R5)           GET OFFSET TO REAL DATA      GP98344
         AR    R15,R3        SKIP TO PARM PORTION               GP98344
         SR    R4,R3         ADJUST LENGTH TO MATCH             GP98344
         SH    R4,=H'4'            GET THE MESSAGE LGTH         GP98344
         SPACE 1                                                GP98348
***********************************************************************
*  PARSING:  R15 IS THE CURRENT POINTER                               *
*            R0  IS THE INCREMENT (=1)                                *
*            R1  IS THE LAST VALID CHARACTER                          *
*            R2-R4 ARE AVAILABLE FOR FUN AND GAMES                    *
*            R5  IS THE POINTER TO THE NEXT AVAILABLE DSN SLOT        *
*            R8  USED FOR SUBROUTINE RETURN                           *
***********************************************************************
COMPARM  LA    R0,1          MAKE A CONSTANT FOR BXLE INCREMENT GP98348
         SR    R4,R0         ADJUST FOR EXECUTE AND TEST        GP98344
         BM    RESETPAR      NOTHING - GO TO RESET IT           GP98344
         LA    R1,0(R15,R4)  MAKE BXLE END ADDRESS              GP98348
         XC    NUMCT,NUMCT      CLEAR DATA SET COUNT            GP98348
BEGPARM  BAL   R14,PARSEWRD  LOOK FOR A WORD IN INPUT           GP98348
           B   RESETPAR      ... IF BLANK, IS RESET REQUEST     GP98348
         SPACE 1                                                GP98348
LFTPARM  CLC   =C'LIST ',PARMWORD  IS IT A LIST REQUEST?        GP98348
         BE    LISTER        YES; SHOW SOME FIREWORKS           GP98348
* THE REMAINDER OF PARM SCANNING DEFERRED UNTIL WE ARE AUTHORIZED
         STM   R15,R1,DBLWD  SAVE                               GP98349
         B     SUSPARM                                          GP98349
RESETPAR EX    0,RESETPRM    SET NULL PARM FLAG                 GP98349
         SPACE 1                                                GP98344
***********************************************************************
*    CHECK THAT WE ARE AUTHORIZED TO RUN THIS - I HATE ABENDS         *
***********************************************************************
SUSPARM  TESTAUTH FCTN=1     ARE WE ALLOWED TO DO THIS?         GP98344
         LTR   R15,R15                                          GP98344
         BZ    GETSUP        WOW                                GP98344
         LA    R0,MSGUNAUT   ELSE WRITE A NASTYGRAM             GP98344
         BAL   R14,MAKEMSG                                      GP98344
         B     QUICKOUT      AND LEAVE IN A HUFF                GP98344
GETSUP   MODESET KEY=ZERO,MODE=SUP   STUPIDVISE THE WHOLE DAMN THING
         OI    PROCFLAG,PFSEQSUP+PFSEQZER  REMIND ME TO RESET THIS
         SPACE 1                                                GP98349
***********************************************************************
*  IN ORDER TO ACCOMMODATE BOTH COMMAND ENTRY AND CALL ENTRY, WE GET  *
*   THE UPT, AND THE USER'S PREFIX HERE                               *
***********************************************************************
         PUSH  USING                                            GP98349
         L     R2,@JSTCB     GET A TCB OF OURS                  GP98349
         L     R2,TCBJSCB-TCB(,R2)  GET THE JSCB                GP98349
         USING IEZJSCB,R2                                       GP98349
         ICM   R2,15,JSCBPSCB  IF THIS FAILS, WE'RE IN DEEEEEEEEEEEP SH
         BZ    DONEPFX       SKIP PREFIX CODE                   GP98349
         USING PSCB,R2                                          GP98349
         ICM   R2,15,PSCBUPT  GET THE UPT                       GP98349
         BZ    DONEPFX                                          GP98349
         USING UPT,R2                                           GP98349
         MVC   PREFIX,UPTPREFX  MOVE THE PREFIX                 GP98349
         MVC   PREFLEN,UPTPREFL  AND ITS LENGTH                 GP98349
         POP   USING                                            GP98349
         SPACE 1                                                GP98349
***********************************************************************
*  SCAN DATASET OPERAND(S) AND OPTIONS IN PARM FIELD                  *
***********************************************************************
DONEPFX  LM    R15,R1,DBLWD  RESTORE PARM SCANNING REGISTERS    GP98349
         TM    PROCFLAG,PFRESET  NULL PARM?                     GP98349
         BNZ   DONEPARM      YES; DON'T SCAN ANY MORE           GP98349
         CLC   =C'DATASET ',PARMWORD   NEW STEPLIB REQUEST?     GP98348
         BE    YDATPARM      YES                                GP98348
         CLC   =C'DATA ',PARMWORD  NEW STEPLIB?                 GP98348
         BE    YDATPARM      YES                                GP98348
         CLC   =C'DA ',PARMWORD  REALLY SHORT FORM?             GP98348
         BE    YDATPARM      YES                                GP98348
         CLC   =C'( ',PARMWORD  REALLY, REALLY SHORT FORM?      GP98349
         BE    YLPRPARM                                         GP98349
         B     ERRBDDEL      NO; GET OUT                        GP98348
YDATPARM CLI   0(R15),C'('   MANDATORY CHARACTER?               GP98348
         BNE   ERRBDDEL      NO; FAIL IT                        GP98348
         BXH   R15,R0,ERRBDDEL SET BAD DELIMITER                GP98348
YLPRPARM LA    R5,DSN1       POINT TO FIRST DSN ENTRY           GP98348
GDSNPARM BAL   R14,PARSEWRD  GO FIND NEXT PARM                  GP98348
           B   ERRBDDEL      NONE - MISSING )                   GP98349
         CLC   =C') ',PARMWORD  IS IT END STRING?               GP98349
         BE    GENDPARM      YES; DONE WITH DS NAMES            GP98349
         BAL   R14,PARSEDSN  GO TO PROCESS DATA SET NAME        GP98348
         TRT   0(L'DSN1,R5),TRTDSNAM  VALID NAME?               GP98349
         BNZ   ERRBDDSN      NO; FAIL ON NAME                   GP98349
         LA    R2,DSN1       LOOP THROUGH NAMES FOR DUPLICATE   GP98348
LDUPPARM CR    R2,R5         CURRENT?                           GP98348
         BE    NDUPPARM      YES; NOT A DUPLICATE               GP98348
         CLC   DSN1-DSN1(L'DSN1,R2),DSN1-DSN1(R5)  SAME DATA SET?
         BE    GDSNPARM      YES; IGNORE SECOND COMING          GP98348
         LA    R2,L'DSN1(,R2)                                   GP98348
         B     LDUPPARM                                         GP98348
NDUPPARM LA    R5,L'DSN1(,R5)  POINT TO NEXT SLOT               GP98348
         LA    R3,1                                             GP98348
         AH    R3,NUMCT                                         GP98348
         CH    R3,=Y(&MAXCAT)  NOT TOO MANY?                    GP98349
         BH    ERR2MANY      QUIT BEFORE DOING HARM             GP98349
         STH   R3,NUMCT      COUNT DATA SETS FOUND              GP98348
         B     GDSNPARM      LOOK FOR ANOTHER DATA SET NAME     GP98349
GENDPARM MVI   DSN1-DSN1(R5),C' '  INVALIDATE NEXT DSN FIELD    GP98349
GOLDPARM BAL   R14,PARSEWRD  GET NEXT WORD(S), IF ANY           GP98348
           B   DONEPARM      GET OUT IF NO MORE                 GP98348
         CLC   =C'OLD ',PARMWORD  UNSHARED REQUEST?             GP98348
         BE    DUMBPARM      HOPE THERE'S A GOOOOOOOD REASON    GP98348
         CLC   =C'SHR ',PARMWORD  SHARED REQUEST?               GP04053
         BE    GOLDPARM      YES; IGNORE THE DEFAULT            GP04053
         CLC   =C'APPEND ',PARMWORD  APPEND OLD STEPLIB?        GP98348
         BE    APNDPARM      YES; NOT CODED YET                 GP98348
         CLC   =C'APP ',PARMWORD  SHORT FORM?                   GP98348
         BE    APNDPARM      YES; NOT CODED YET                 GP98348
         CLC   =C'ADD ',PARMWORD  SOME PEOPLE CAN'T READ?       GP04053
         BE    APNDPARM      YES; NOT CODED YET                 GP04053
         CLC   =C'APF ',PARMWORD  SPECIAL?                      GP98349
         BE    AAPFPARM      YES                                GP98350
         CLC   =C'AUTH ',PARMWORD  SPECIAL?                     GP04053
         BE    AAPFPARM      YES                                GP04053
         CLC   =C'LIST ',PARMWORD  LIST AFTER ALLOCATION?       GP98350
         BNE   ERRBDPRM      BR IF NOT                          GP98349
         OI    STEPFLAG,PFLIST   REQUEST LISTING AFTER ALLOC.   GP98349
         B     GOLDPARM      GO FOR MORE                        GP98349
AAPFPARM L     R2,CVTPTR     GET CVT ADDRESS                    JW12095
         ICM   R2,B'1111',CVTSAF(R2) SAFV DEFINED ?             JW12095
         BZ    RACOK         NO RAC, PERMIT APF AUTHORIZATION   JW12095
         USING SAFV,R2       ADDRESSABILITY OF SAFV             JW12095
         CLC   SAFVIDEN(4),SAFVID SAFV INITIALIZED ?            JW12095
         BNE   RACOK         NO RAC, PERMIT APF AUTHORIZATION   JW12095
         DROP  R2            SAFV NO LONGER NEEDED              JW12095
         LR    R2,R0         REMEMBER R0                        JW12095
         LR    R3,R1         REMEMBER R1                        JW12095
         LR    R4,R15        REMEMBER R15                       JW12095
         RACHECK ENTITY=STEPAUTH,CLASS='FACILITY',ATTR=READ     JW12095
         LR    R0,R2         RESTORE R0                         JW12095
         LR    R1,R3         RESTORE R1                         JW12095
         LR    R2,R15        REMEMBER RETURN CODE               JW12095
         LR    R15,R4        RESTORE R15                        JW12095
         LTR   R2,R2         RAC AUTHORIZATION GRANTED?         JW12095
         BNZ   GOLDPARM      IGNORE IF NOT AND GO FOR MORE      JW12095
RACOK    OI    PROCFLAG,PFAPF  REQUEST TO AUTHORIZE STEPLIBS    JW12095
         B     GOLDPARM      GO FOR MORE                        GP98349
APNDPARM OI    PROCFLAG,PFAPPEND  APPEND OLD STEPLIB DATA SETS  GP98348
         B     GOLDPARM      GO FOR MORE                        GP98348
DUMBPARM MVI   DSPFG,X'01'   ELSE SET DISP=OLD                  GP98349
         B     GOLDPARM      GO FOR MORE                        GP98348
         SPACE 1                                                GP98348
RESETPRM OI    PROCFLAG,PFRESET  NULL PARM - RESET FUNCTION     GP98348
DONEPARM DS    0H            FINISHED WITH PARM ANALYSIS        GP98348
         EJECT ,
***********************************************************************
*                                                                     *
*    THIS SECTION RELOCATES TO A GETMAIN(IN S.P. 254) THE IRB EXIT    *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R0,SP1              ... DO THE GETMAIN FOR THE EXIT
         GETMAIN  R,LV=(0)
         LR    R12,R1              ... R12 IS BASE FOR EXIT AREA
         LR    R2,R1               POINT TO GOTTEN STORAGE
         L     R4,=A(STEPLIBX)     POINT TO THE 'CANNED' DATA
         LA    R3,EXITEND-STEPLIBX   GET THE LENGTH OF THE AREA GP98345
         LR    R5,R3                 .. TWICE ..
         MVCL  R2,R4                 ... MOVE DATA AREA TO GOTTEN AREA
         USING STEPLIBX,R12        DECLARE IT
         SPACE 1                                                GP98348
         TM    PROCFLAG,PFRESET  IS THIS CALL A RESET REQUEST?  GP98348
         BNZ   RESET         YES; PERFORM RESET FUNCTION        GP98348
         SPACE 1                                                GP98348
***********************************************************************
*   IF THE USER SPECIFIED APPEND, THEN WE LOOK FOR THE OLD STEPLIB    *
*   OR JOBLIB DD, AND ADD THOSE DATA SET NAMES AT THE END OF THE LIST *
***********************************************************************
         SR    R6,R6                                            GP98349
         ICM   R6,3,NUMCT    GET DATASET COUNT                  GP98349
         BZ    ERRBDPRM      NONE; OOPS                         GP98349
         TM    PROCFLAG,PFAPPEND  COMBINE SYSTEM DATASETS?      GP98349
         BZ    DONEAPP       NO                                 GP98349
         LA    R1,=CL8'STEPLIB '  POINT TO PREFERRED NAME       GP98349
         BAL   R14,LOOKTIOT  IS IT PRESENT?                     GP98349
         LTR   R5,R1                                            GP98349
         BNZ   DOAPPEND                                         GP98349
         LA    R1,=CL8'JOBLIB '                                 GP98349
         BAL   R14,LOOKTIOT  HOW ABOUT ALTERNATE FORM?          GP98349
         LTR   R5,R1         HAVE THAT?                         GP98349
         BZ    NONEAPP       NO; NOTHING TO DO                  GP98349
         PUSH  USING                                            GP98349
DOAPPEND LR    R7,R6         GET DATASET COUNT                  GP98349
         MH    R7,=Y(L'DSN1)  CONVERT TO OFFSET                 GP98349
         LA    R7,DSN1(R7)   POINT TO FIRST UNUSED ENTRY        GP98349
         USING TIOENTRY,R5                                      GP98349
         SR    R4,R4         CLEAR FOR IC                       GP98349
DOAPTIOL ICM   R3,7,TIOEJFCB  GET JFCB TOKEN                    GP98349
         BZ    DOAPTION      HUH?                               GP98349
         BAL   R14,GETSWA    GET JFCB ADDRESS                   GP98349
         USING INFMJFCB,R3                                      GP98349
         LA    R2,DSN1       LOOP THROUGH NAMES FOR DUPLICATE   GP98349
DOAPLOOP CR    R2,R7         CURRENT?                           GP98349
         BE    DOAPMOVE      YES; NOT A DUPLICATE               GP98349
         CLC   DSN1-DSN1(L'DSN1,R2),JFCBDSNM  SAME DATA SET?    GP98349
         BE    DOAPTION      YES; IGNORE SECOND COMING          GP98349
         LA    R2,L'DSN1(,R2)                                   GP98349
         B     DOAPLOOP                                         GP98349
DOAPMOVE CH    R6,=Y(&MAXCAT)  HAD ENOUGH?                      GP98349
         BNL   DOAPFULL      YES; ISSUE WARNING                 GP98349
         MVC   DSN1-DSN1(L'DSN1,R7),JFCBDSNM  MOVE DATA SET NAME
         LA    R6,1(,R6)     SET NEW COUNT                      GP98349
         LA    R7,L'DSN1(,R7)  POINT TO NEXT ENTRY              GP98349
DOAPTION IC    R4,TIOELNGH   GET THIS LENGTH                    GP98349
         AR    R5,R4         SKIP TO NEXT ENTRY                 GP98349
         CLI   TIOELNGH,0    CONCATENATION?                     GP98349
         BE    DONEAPP       NO MORE; RETURN                    GP98349
         CLI   TIOEDDNM,C' '  CONCATENATION ?                   GP98349
         BE    DOAPTIOL      YES; APPEND IT                     GP98349
         B     DONEAPP       ELSE RETURN                        GP98349
         POP   USING                                            GP98349
DOAPFULL LA    R0,MSG2APP    SHOW OVERFLOW                      GP98349
         BAL   R14,MAKEMSG                                      GP98349
DONEAPP  STH   R6,NUMCT      UPDATE DATA SET COUNT              GP98349
         SPACE 2                                                GP98349
***********************************************************************
*   IF THERE IS AN EXISTING STEPDYN ALLOCATION, THERE WAS A PRIOR     *
*   STEPLIB REQUEST THAT NEEDS TO BE FREED.                           *
***********************************************************************
NONEAPP  LA    R1,BASDD      POINT TO COMMON DDNAME             GP98349
         BAL   R14,LOOKTIOT  LOOK FOR IT                        GP98345
         LTR   R1,R1         HAVE WE DONE THIS BEFORE?          GP98345
         BZ    LOADTCB             BR IF 'STEPDYN' NOT FOUND    GP98348
         SPACE 1
TEMPRST  OI    PROCFLAG,PFCYCLE    INDICATE RERUN THIS MESS     GP98345
         B     RESET               AND GO DO RESET
         SPACE 1
***********************************************************************
*   FOR EACH REQUESTED DATA SET, BUILD THE DDNAME (STEPDYNX), AND     *
*   ALLOCATE IT. VERIFY THAT IT OPENS AND IS A PDS OR PDSE.           *
***********************************************************************
LOADTCB  L     R2,@JSTCB     GET JOB STEP TCB                   GP98345
         TM    EXITFLAG,XFMASTER   PRIOR SAVE OF MASTER TCBJLB? GP98345
         BNZ   LOADTCB2      YES                                GP98345
         OI    EXITFLAG,XFMASTER   SET IT                       GP98345
         MVC   MASTLIB,TCBJLB-TCB(R2)  SAVE PROC STEPLIB        GP98345
LOADTCB2 SR    R6,R6               SET A COUNTER                GP98345
         LA    R4,DSN1             POINT TO THE DSN(S)
ALLOLOOP MVC   DSNAM,0(R4)         MOVE IN A DSNAME             GP98345
         STC   R6,DDNAM+7    MAKE DDN SUFFIX                    GP98348
         TR    DDNAM+7(1),SUFFIXES  MAKE PRINTABLE VERSION      GP98348
         LA    R1,STPRQ            POINT TO THE STEPLIB REQ
         SVC   99                  DO THE ALLOCATE
         LA    R2,STPER            POINT TO ERROR CELL          GP98349
         CLC   STPER,=F'0'         TEST FOR ERRORS
         BNZ   ERRALLOC            BR IF ERRORS                 GP98345
         SPACE 1
         MVC   STEPDCB+DCBDDNAM-IHADCB(8),DDNAM  MOVE IN CURRENT DDNAME
         LA    R1,STEPDCB          ... POINT TO THE DCB         GP98345
         ST    R1,@DCB             ... SAVE THE DCB ADDRESS
         OI    @DCB,X'80'    SET END-OF-LIST BIT                GP98345
         OPEN  MF=(E,@DCB)   AND OPEN                           GP98345
         TM    STEPDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPENED?        GP98345
         BNO   DSNOPBAD      NO; WRITE MESSAGE                  GP98345
         LA    R1,DDNAM      POINT TO DD NAME                   GP98345
         BAL   R14,LOOKTIOT  FIND IT                            GP98345
         LTR   R1,R1         FOUND?                             GP98345
         BZ    CLOSE         HUH?                               GP98345
         USING TIOENTRY,R1                                      GP98345
         ICM   R3,7,TIOEJFCB  GET JFCB POINTER OR TOKEN         GP98345
         DROP  R1                                               GP98345
         BAL   R14,GETSWA    GET ADDRESS FROM TOKEN
         USING INFMJFCB,R3                                      GP98345
         TM    JFCDSORG,JFCORGPO   TEST FOR PDS AND PDSE        GP98350
         BO    CLOSE         HAVE PDS OR PDSE                   GP98345
         OI    PROCFLAG,PFERRNPO   ... INDICATE NOT P.O.        GP98345
         DROP  R3                                               GP98345
         SPACE 1                                                GP98345
CLOSE    CLOSE MF=(E,@DCB)         ... AND CLOSE THE DCB        GP98345
         TM    PROCFLAG,PFERRNPO   ... TEST FOR NOT P.O.        GP98345
         BO    DSNOTPO             IF NOT, DESERVES MESSAGE
         SPACE 1                                                GP98345
         LA    R6,1(,R6)     SET CURRENT DS COUNT               GP98348
         LA    R4,L'DSN1(,R4)      POINT TO THE NEXT DSNAME     GP98345
         CLI   0(R4),C' '          SEE IF IT EXISTS             GP98345
         BNH   DSNDONE             BR IF NO MORE DSN(S)         GP98345
         B     ALLOLOOP            THEN LOOP
         SPACE 1
***********************************************************************
*   WHEN MORE THAN ONE DATA SET WAS REQUESTED, CONCATENATE THEM UNDER *
*   THE MAIN STEPDYN DD NAME.                                         *
***********************************************************************
DSNDONE  MVC   STEPDCB+DCBDDNAM-IHADCB(8),BASDD   RESET THE DDNAME
         CH    R6,=H'1'            TEST FOR ONLY ONE DSNAME
         BE    NOCONCAT            IF ONLY ONE, NO CONCATENATION
         OI    EXITFLAG,XFCONCAT   INDICATE CONCATENATION       GP98345
         STH   R6,NUMCT            ELSE SAVE THE NUMBER
         LA    R1,CONCT            POINT TO THE LIST
         SVC   99                  AND CON-CAT-ENATE
         LA    R2,CNCER            POINT TO ERROR CELL          GP98349
         CLC   CNCER,=F'0'         LOOK FOR ERROR
         BNE   ERRALLOC            BR IF ERROR                  GP98345
         SPACE 1                                                GP98350
***********************************************************************
*   NOW FIND THE SIOT ENTRIES FOR THE NEW DD ENTRIES, AND SET THE     *
*   CLOSE=FREE AND JOBLIB FLAGS (FWIW, JOBLIB IS EXTRANEOUS)          *
***********************************************************************
NOCONCAT DS    0H
         L     R2,@TCB             GET MY TCB ADDRESS
         L     R2,TCBJSCB-TCB(,R2)        ... JSCB              GP98345
         L     R3,JSCSCT-IEZJSCB(,R2)     ... SCT HEADER        GP98345
         BAL   R14,GETSWA    GET ADDRESS FROM TOKEN
         ICM   R3,7,SCTFSIOT-INSMSCT(R3)  ... 1ST SIOT          GP98345
SIOTLOOP BAL   R14,GETSWA    GET ADDRESS FROM TOKEN
         USING INDMSIOT,R3                                      GP98345
         CLC   SCTDDNAM(7),BASDD     LOOK FOR MY DDNAMES        GP98345
         BNE   SIOTLP2                                          GP98345
         OI    SCTSBYT2,SIOCLUNL+SCTJOBLB   CLOSE=FREE+JOBLIB FLAGS
SIOTLP2  ICM   R3,7,SCTPSIOT       ... NEXT SIOT HEADER         GP98345
         BNZ   SIOTLOOP            ELSE LOOP 'TIL DONE          GP98345
         SPACE 1
GETLOCK  STM   R0,R10,LOCKSAVE    SAVE REGISTERS OVER CALL      GP06327
         SETLOCK  OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=UNLOCK,        *
               REGS=SAVE      GET LOCAL LOCK; PRESERVE R11-R14  GP06327
         LM    R0,R10,LOCKSAVE    RESTORE REGISTERS EXC. R15    GP06327
         SPACE 1                                                GP98345
         TM    PROCFLAG,PFAPF  AUTHORIZE?                       GP98349
         BZ    *+8           NO                                 GP98349
         OI    EXITFLAG,XFAPF  PROPAGATE REQUEST                GP98349
         SPACE 1                                                GP98345
***********************************************************************
*  IN TSO, WE DO NOT USUALLY RUN UNDER THE JOBSTEP TCB. HOWEVER, TO
*    MAKE THE CODE WORK CORRECTLY, THE DCB MUST BE OWNED BY THE JSTCB.
*    WE SCHEDULE AN IRB TO RUN UNDER THE JSTCB TO OPEN THE DCB THERE.
*                                                               GP98345
***********************************************************************
         L     R4,@JSTCB           LOAD THE JOB STEP TCB FOR CIRB
DOCIRB   CIRB  EP=(R12),WKAREA=50,RETRN=YES,RETIQE=NO,BRANCH=YES,      X
               SVAREA=YES,KEY=SUPR,MODE=SUPR
         USING RBSECT,R1           R1 POINTS TO THE IRB
         ST    R1,IRBADDR          SAVE THE IRB ADDRESS
         L     R3,RBNEXAV          R3 POINTS TO THE IQE
         ST    R3,IQEADDR          SAVE THE IQE ADDRESS
         USING IQESECT,R3
         ST    R1,IQEIRB
***********************************************************************
*   RUN THROUGH THE TCBS, BEGINNING WITH THE JOB-STEP TCB, AND SET    *
*   OUR JOBLIB ADDRESS FOR EITHER A 0 OR OLD STEPLIB VALUE.           *
***********************************************************************
         LA    R4,STEPDCB          GET ADDRESS                  GP98345
         L     R5,MASTLIB    LOAD THE MASTER STEPLIB ADDRESS    GP98345
         L     R2,@JSTCB           GET THE JOB STEP TCB
         ST    R2,IQETCB           SAVE IN IQE
         DROP  R1,R3
         USING TCB,R2                                           GP98345
         NI    STEPFLAG,255-PF@SET-PF@FAIL  RESET CHANGE FLAGS  GP98345
SETLOOP  L     R0,TCBJLB     GET CURRENT STEPLIB ADDRESS        GP98345
         CLR   R5,R0         TEST FOR PREVIOUS STEPLIB          GP98345
         BE    SETMAST       MATCH; REPLACE AND FLAG            GP98345
         CLR   R4,R0         ALREADY SET OURS?                  GP98345
         BE    SETTNEXT      (BUT HOW?)                         GP98345
         OI    STEPFLAG,PF@FAIL  SHOW FOREIGN ADDRESS           GP98345
         B     SETTNEXT      NOW TRY ANOTHER                    GP98345
SETMAST  ST    R4,TCBJLB     SAVE STEPLIB DCB ADDR IN TCBJLB    GP98345
         OI    STEPFLAG,PF@SET   SHOW REPLACEMENT MADE          GP98345
SETTNEXT ICM   R2,15,TCBTCB  LOAD TCBTCB - NEXT TCB ON CHAIN    GP98345
         BNZ   SETLOOP             AND LOOP                     GP98345
         DROP  R2                                               GP98345
         SPACE 1
***********************************************************************
*   OPEN THE NEW STEPLIB DCB UNDER THE JOB-STEP TASK.                 *
***********************************************************************
LASTCB2  BAL   R14,EFFEXIT   SCHEDULE THE IRB                   GP98344
         SPACE 1
UNLOCK   STM   R0,R10,LOCKSAVE    SAVE REGISTERS 0-10           GP06327
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=GETLOCK,REGS=SAVE   GP06327
         LM    R0,R10,LOCKSAVE    RESTORE REGISTERS EXC. R15    GP06327
         TM    STEPFLAG,PF@FAIL   ANY NOT CHANGED?              GP98345
         BZ    NEEDLIST      NOTHING FAILED; JUST EXIT          GP98345
         LA    R0,MSGNOCHG   PRESET FOR NO CHANGE               GP98345
         TM    STEPFLAG,PF@SET  ANY AT ALL CHANGED?             GP98345
         BZ    SETFAIL       NO; WITHDRAW AFTER MESSAGE         GP98345
         LA    R0,MSGSMCHG   SHOW ONE OR MORE NOT CHANGED       GP98345
         BAL   R14,MAKEMSG   AND WRITE IT OUT                   GP98345
NEEDLIST TM    STEPFLAG,PFLIST  DOES USER WANT A LIST?          GP98350
         BNZ   LISTER        YES; PRODUCE ONE                   GP98350
         B     COMEXIT                                          GP98344
SETFAIL  BAL   R14,MAKEMSG   WRITE IT OUT                       GP98345
         B     RESET         WITHDRAW CHANGES                   GP98344
         SPACE 1
         DROP  R12                                              GP98344
         SPACE 1                                                GP98344
MSGEXIT  BAL   R14,MAKEMSG   WRITE THE ERROR MESSAGE            GP98344
ERREXIT  MVI   CONDCODE+L'CONDCODE-1,8  SET ERROR               GP98344
         SPACE 1
COMEXIT  TM    PROCFLAG,PFSEQSUP+PFSEQZER  NEED TO RESET MODE?  GP98345
         BZ    QUICKOUT      NO                                 GP98345
         MODESET  KEY=NZERO,MODE=PROB                           GP98344
QUICKOUT LR    R1,R13                                           GP98344
         LH    R5,CONDCODE   GET RETURN CODE                    GP98344
         LA    R0,LDWSIZE
         SH    R13,=AL2(FAKESAVE-LDWDSECT)  TRUE SAVE AREA      GP06327
         L     R13,4(,R13)
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R5        SET RETURN CODE                    GP98344
         LM    R0,R12,20(R13)                                   GP98344
         L     R14,12(,R13)                                     GP98344
         BR    R14
         EJECT ,
***********************************************************************
*                                                                     *
*    RESET:  RESTORES ALL MODIFIED TCBJLB FIELDS TO THEIR ORIGINAL    *
*            VALUE, AND CLOSES OUR STEPLIB (VIA IRB SCHEDULED AGAINST *
*            THE JOBSTEP TCB). IF THE PFCYCLE FLAG IS ON, RETURNS TO  *
*            CONTINUE THE ALLOCATION REQUEST.                         *
*                                                                     *
***********************************************************************
RESET    L     R2,@TIOT      GET MY TIOT ADDRESS                GP98345
         LA    R2,TIOENTRY-TIOT1(,R2)    ... TIOT ENTRIES       GP98345
         USING TIOENTRY,R2   DECLARE IT                         GP98345
         SR    R3,R3                                            GP98345
RSETTIOT ICM   R3,1,TIOELNGH  ANY MORE?                         GP98345
         BZ    TRYRERUN      NO                                 GP98345
         CLC   4(7,R2),BASDD    LOOK FOR MY LOGO                GP98345
         BE    RSETFTIO             BR IF FOUND                 GP98345
         AR    R2,R3               POINT TO NEXT ENTRY          GP98345
         B     RSETTIOT            ... ELSE LOOP                GP98345
RSETFTIO S     R2,@TIOT            SUBTRACT TO GET TIOT OFFSET  GP98345
         STH   R2,TIOTOFST         SAVE THE TIOT OFFSET
         DROP  R2                                               GP98345
         L     R2,@JSTCB     GET THE JOBSTEP TCB                GP98345
         USING TCB,R2                                           GP98345
RSETLOOK ICM   R3,15,TCBJLB  LOAD TASKLIB DCB ADDR              GP98345
         BNZ   RSETFDCB            BR IF ONE EXISTS             GP98345
         ICM   R2,15,TCBTCB  ELSE LOAD TCBTCB - NEXT TCB ADDR   GP98345
         BNZ   RSETLOOK            AND LOOP                     GP98345
         B     TRYRERUN            GET OUT IF PREVIOUSLY EXITED GP98345
RSETFDCB CLC   DCBTIOT-IHADCB(2,R3),TIOTOFST SEE IF THIS IS OUR STEPLIB
         BNE   NEEDLIST            BR IF PREVIOUSLY EXITED      GP98345
         DROP  R2                                               GP98345
         SPACE 1
***********************************************************************
*    IF WE GET HERE, THE MODULE HAS BEEN PREVIOUSLY ENTERED.          *
*    WE MUST FREE THE S.P. 254 AREA THAT WE JUST GOT AND REUSE        *
*    THE AREA GOTTEN ON THE PREVIOUS ENTRY.                           *
***********************************************************************
         SPACE 1
         L     R0,SP1              GET THE LGTH + S.P.
         LR    R1,R12              POINT TO AREA TO BE FREED
         FREEMAIN R,LV=(0),A=(1)    FREE UP THE S.P. 254 AREA
         LA    R12,0(,R3)    GET CLEAN OLD ADDRESS              GP98349
         LA    R0,STEPDCB-STEPLIBX  OFFSET TO DCB               GP98350
         SR    R12,R0              R12 POINTS AT THE OLD EXIT   GP98350
         USING STEPLIBX,R12                                     GP98344
         OI    EXITFLAG,XFRESET    INDICATE RESET               GP98345
         L     R1,IRBADDR          GET THE IRB ADDRESS
         USING RBSECT,R1           R1 POINTS TO THE IRB
         L     R3,RBNEXAV          R3 POINTS TO THE IQE
         ST    R3,IQEADDR          SAVE THE IQE ADDRESS
         USING IQESECT,R3
         ST    R1,IQEIRB           SAVE IRB ADDRESS IN THE IQE
         LA    R4,STEPDCB          POINT TO OUR STEPLIB DCB     GP98345
         L     R5,MASTLIB    GET PROC STEPLIB BACK              GP98345
         L     R2,@JSTCB           GET THE JOB STEP TCB ADDR
         ST    R2,IQETCB           AND SAVE IN THE IQE
         USING TCB,R2                                           GP98345
RSETLOOP CL    R4,TCBJLB     SEE IF THE STEPLIB IS OURS         GP98345
         BNE   RSETNTCB      AND LOOP A LITTLE                  GP98345
         ST    R5,TCBJLB     CLEAR OUT TCBJLB                   GP98345
RSETNTCB ICM   R2,15,TCBTCB  LOAD TCBTCB                        GP98345
         BNZ   RSETLOOP            ELSE LOOP 'TIL DONE          GP98345
         DROP  R1,R2,R3                                         GP98345
         SPACE 1
LOCKLL2  STM   R0,R10,LOCKSAVE    SAVE REGISTERS 0-10           GP06327
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=UNLOCK2,        *
               REGS=SAVE      GET LOCAL LOCK                    GP06327
         LM    R0,R10,LOCKSAVE    RESTORE REGISTERS EXC. R15    GP06327
         SPACE 1
         BAL   R14,EFFEXIT   SCHEDULE THE IRB                   GP98350
         SPACE 1
UNLOCK2  STM   R0,R10,LOCKSAVE    SAVE REGISTERS 0-10           GP06327
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=LOCKLL2,REGS=SAVE   GP06327
         LM    R0,R10,LOCKSAVE    RESTORE REGISTERS EXC. R15    GP06327
         SPACE 1                                                GP98345
TRYRERUN TM    PROCFLAG,PFCYCLE    SEE IF RERUN REQUESTED       GP98345
         BNO   NEEDLIST      NO; RETURN (VIA OPTIONAL LISTER)   GP98345
         SPACE 1                                                GP98345
         LA    R5,120        WAIT ONE MINUTE, MAX               GP98350
WAITLOOP STIMER  WAIT,BINTVL==A(50)   WAIT HALF SECOND          GP98350
         TM    EXITFLAG,XFRESET  CLOSE AND DECONCAT DONE?       GP98350
         BZ    WAITDONE      YES                                GP98350
         BCT   R5,WAITLOOP   ELSE WAIT A LITTLE LONGER          GP98350
WAITDONE NI    PROCFLAG,255-PFCYCLE  RESET IT                   GP98345
         B     LOADTCB             AND GO RERUN THE ALLOC CODE
         DROP  R12                                              GP98344
         EJECT ,                                                GP98349
***********************************************************************
*                                                                     *
*   LISTER:  DISPLAYS CURRENT STEPLIB ALLOCATION AND ORIGINAL.        *
*      WRITTEN MOSTLY TO DEBUG SUBROUTINES IN UNAUTHORIZED STATE.     *
*                                                                     *
***********************************************************************
         PUSH  USING                                            GP98349
LISTER   NI    STEPFLAG,255-PFLIST  RESET LIST REQUEST          GP98345
         L     R2,@TIOT      GET MY TIOT ADDRESS                GP98345
         LA    R0,MSGLIST    POINT TO LIST MESSAGE              GP98349
         BAL   R14,MAKEMSG   DISPLAY IT                         GP98349
         LA    R1,PATDDNAM   POINT TO OUR NAME                  GP98349
         BAL   R14,LOOKTIOT  IS IT ALLOCATED?                   GP98349
         LTR   R5,R1         TEST RETURN                        GP98349
         BZ    LISTERS       NO; LOOK FOR SYSTEM                GP98349
         BAL   R9,FORMTIOT   PROCESS TIOT ENTRIES               GP98349
LISTERS  LA    R1,=CL8'STEPLIB '  POINT TO STEPLIB NAME         GP98349
         BAL   R14,LOOKTIOT  LOOK FOR IT                        GP98349
         LTR   R5,R1         ANY FOUND?                         GP98349
         BZ    LISTERJ       DO WE CARE?                        GP98349
         BAL   R9,FORMTIOT   PROCESS TIOT ENTRIES               GP98349
LISTERJ  LA    R1,=CL8'JOBLIB '  IS THIS REALLY ALLOCATED?      GP98349
         BAL   R14,LOOKTIOT  LOOK FOR IT                        GP98349
         LTR   R5,R1         ANY FOUND?                         GP98349
         BZ    LISTERO       DO WE CARE?                        GP98349
         BAL   R9,FORMTIOT   PROCESS TIOT ENTRIES               GP98349
LISTERO  LA    R1,=CL8'YOURLIB'  IS THIS REALLY ALLOCATED?      GP98349
         BAL   R14,LOOKTIOT  LOOK FOR IT                        GP98349
         LTR   R5,R1         ANY FOUND?                         GP98349
         BZ    LISTERX       DO WE CARE?                        GP98349
         LA    R0,MSGLISTO   SHOW OLD LIBRARY IN USE            GP98349
         BAL   R14,MAKEMSG   AND WARN USER                      GP98349
         BAL   R9,FORMTIOT   PROCESS TIOT ENTRIES               GP98349
LISTERX  TM    STEPFLAG,PFLIST  DID WE LIST ONE?                GP98349
         BNZ   COMEXIT                                          GP98349
         LA    R0,MSGLIST0   SHOW NOTHING FOUND                 GP98349
         BAL   R14,MAKEMSG   AND WARN USER                      GP98349
         B     COMEXIT                                          GP98349
         SPACE 1                                                GP98349
         USING TIOENTRY,R5                                      GP98349
FORMTIOT MVC   NEWTXT(8+1+44+1+6),BLANKS  CLEAR LINE            GP98349
         SR    R4,R4         CLEAR FOR IC                       GP98349
         LA    R15,4+MSGPFX+8+1+44+1+6  TOTAL LENGTH            GP98349
         STH   R15,NEWWTO                                       GP98349
         LA    R1,NEWWTO(R15)                                   GP98349
         MVC   0(4,R1),MSGDESC  MOVE ROUT/DESC CODES            GP98349
FORMTIOL ICM   R3,7,TIOEJFCB  GET JFCB TOKEN                    GP98349
         BZ    FORMTION      HUH?                               GP98349
         MVC   NEWTXT(L'TIOEDDNM),TIOEDDNM  SHOW DD NAME        GP98349
         BAL   R14,GETSWA    CONVERT TO TRUE ADDRESS            GP98349
         MVC   NEWTXT+8+1(44),JFCBDSNM-INFMJFCB(R3)  MOVE DSN   GP98349
         MVC   NEWTXT+8+1+44+1(6),JFCBVOLS-INFMJFCB(R3)  AND 1ST SER
         MVI   NEWWFLAG,NEWWHAVE  PREFORMATTED MESSAGE          GP98349
         BAL   R14,MAKEMSG   DISPLAY ON DEFAULT                 GP98349
         OI    STEPFLAG,PFLIST  SHOW ENTRY LISTED               GP98349
FORMTION IC    R4,TIOELNGH   GET THIS LENGTH                    GP98349
         AR    R5,R4         SKIP TO NEXT ENTRY                 GP98349
         CLI   TIOELNGH,0    CONCATENATION?                     GP98349
         BER   R9            NO MORE; RETURN                    GP98349
         CLI   TIOEDDNM,C' '  CONCATENATION ?                   GP98349
         BE    FORMTIOL      YES; APPEND IT                     GP98349
         BR    R9            ELSE RETURN                        GP98349
         POP   USING                                            GP98349
         EJECT ,
ERRALLOC LA    R0,MSGBDALL   GET BAD ALLOCATION MESSAGE         GP98344
         MVI   NEWWFLAG,NEWWONLY   FORMAT; DON'T WRITE          GP98344
         BAL   R14,MAKEMSG   PREPARE MESSAGE                    GP98344
         LR    R1,R0         GET MESSAGE ADDRESS                GP98344
         AH    R1,0(,R1)     GET MESSAGE END                    GP10311
         SH    R1,=H'17'     BACK-UP TO FIRST INSERTION         GP10311
         UNPK  DBLWD(5),0(3,R2)  OVERPACK                       GP98344
         TR    DBLWD(4),HEXTRTAB MAKE PRINTABLE HEX             GP98344
         MVC   0(4,R1),DBLWD  MOVE TO MESSAGE                   GP10311
         LH    R2,2(,R2)
         CVD   R2,DBLWD
         OI    DBLWD+7,15
         UNPK  13(4,R1),DBLWD  GET SECOND INSERTION FIELD       GP10311
         MVI   NEWWFLAG,NEWWHAVE  PREFORMATTED                  GP98344
         BAL   R14,MAKEMSG   WRITE IT AS IS                     GP98344
         B     ERREXIT       SET ERROR RETURN                   GP98344
         SPACE 1
ERRBDPRM LA    R0,MSGBDPRM   BAD PARM FIELD ENTRY               GP98348
         B     MSGEXIT       WRITE MESSAGE AND RETURN           GP98348
         SPACE 1                                                GP98349
ERR2MANY LA    R0,MSG2DSN    EXCESSIVE DATA SET NAME COUNT      GP98349
         B     MSGEXIT       WRITE MESSAGE AND RETURN           GP98349
         SPACE 1                                                GP98348
ERRBDDSN LA    R0,MSGBDDSN   INVALID DATA SET NAME              GP98344
         B     MSGEXIT       WRITE MESSAGE AND RETURN           GP98344
         SPACE 1
ERRBDDEL LA    R0,MSGNODEL   NO/BAD DELIMITER                   GP98344
         B     MSGEXIT       WRITE MESSAGE AND RETURN           GP98344
         SPACE 1
DSNOTPO  LA    R0,MSGNOTPO   DATASET NOT A PDS                  GP98344
         B     ERRDSNAM      ISSUE MESSAGE AND APPEND DSN       GP98345
         SPACE 1                                                GP98345
DSNOPBAD LA    R0,MSGNOTOP   SHOW OPEN FAILED                   GP98345
ERRDSNAM BAL   R14,MAKEMSG                                      GP98345
         MVC   NEWTXT(6),=C' DSN: '                             GP98345
         MVC   NEWTXT+6(L'DSNAM),DSNAM   SHOW CURRENT DSN       GP98345
         LA    R1,4+MSGPFX+6+L'DSNAM                            GP98349
         STH   R1,NEWWTO     SET LENGTH                         GP98345
         LA    R1,NEWWTO(R1)  POINT TO END                      GP98345
         MVC   0(4,R1),MSGDESC  UPDATE DESCRIPTORS              GP98345
         MVI   NEWWFLAG,NEWWHAVE  SHOW HAVE MESSAGE             GP98345
         B     MSGEXIT       SET ERROR AND ISSUE MESSAGE        GP98344
         TITLE 'S T E P L I B  ***  SUBROUTINES'                GP98345
         PUSH  PRINT                                            GP98345
         PRINT GEN                                              GP98345
         MSGCODE ,           EXPAND MESSAGE PROCESSING MODULE   GP98345
         POP   PRINT                                            GP98345
         SPACE 2                                                GP98344
********************************************************************
*   GETSWA:  OBTAIN THE (31-BIT) ADDRESS OF AN SQA ENTITY.         *
*          R3 CONTAINS THE TOKEN IN THE LOW THREE BYTES.           *
*      RETURNS 31-BIT ADDRESS IN R3                                *
********************************************************************
         SPACE 1                                                GP98344
GETSWA   ST    R14,DBLWD     SAVE RETURN REGISTER               GP98344
         AIF   (&MVSXA).SWAXA  NEWER SYSTEM                     GP06327
         LA    R3,0(,R3)     CLEAR HIGH BYTE                    GP06327
         LTR   R3,R3         ANY VALUE ?                        GP06327
         BNZ   LOOKSVA       YES; RETURN STORAGE ADDRESS        GP06327
         B     LOOKSWA8      NO; ERROR                          GP06327
         AGO   .NOSVA2                                          GP06327
.SWAXA   XC    LISTSWA(LISTSWAL),LISTSWA  CLEAR IT              GP98344
         ICM   R3,8,LISTSWA  FOR QUICK RETURN, CLEAR HIGH BYTE  GP98344
         STCM  R3,7,LISTSVA+4  PLACE IN SECOND WORD OF LIST     GP98344
         TM    LISTSVA+4+2,1   TOKEN OR ADDRESS ?               GP98344
         BZ    LOOKSVA       ADDRESS; JUST ADJUST AND RETURN    GP98344
         LA    R1,LISTSVA    GET SVA ADDRESS                    GP98344
         ST    R1,LISTEPA    STORE IN POINTER                   GP98344
         MVC   LISTSWA+8,=C'RL'  SET FUNCTION                   GP98344
         LA    R1,LISTSWA+8                                     GP98344
         ST    R1,LISTSWA+4  POINTER TO FUNCTION                GP98344
         SWAREQ EPA=LISTEPA,MF=(E,LISTSWA),UNAUTH=YES           GP98344
         SLR   R3,R3         SIGNAL ERROR                       GP98344
         BXH   R15,R15,LOOKSWA8  UNEXPECTED FAILURE             GP98344
         L     R3,LISTSVA    GET STORAGE ADDRESS OF JFCB        GP98344
         B     LOOKSWA8      COMMON RETURN                      GP98344
.NOSVA2  ANOP  ,                                                GP98344
LOOKSVA  LA    R3,16(,R3)    SPACE TO JFCB PROPER               GP98344
LOOKSWA8 L     R14,DBLWD     RESTORE RETURN ADDRESS             GP98344
         BR    R14           RETURN TO CALLER                   GP98344
         SPACE 2                                                GP98344
********************************************************************
*   EFFEXIT:  INVOKE THE SECOND LEVEL EXIT EFFECTOR TO SCHEDULE    *
*      OUR IRB.  NOTE THAT REGISTERS GET CLOBBERED.                *
*      REQUIRES KEY ZERO, SUPERVISOR MODE                          *
********************************************************************
         PUSH  USING                                            GP98350
         SPACE 1                                                GP98350
EFFEXIT  STM   R14,R12,12(R13)  SAVE EVERYTHING IN CURRENT SET  GP98350
         LR    R9,R13        PRESERVE SAVE AREA, JUST IN CASE   GP98350
         L     R6,CVTPTR           GET THE CVT                  GP98350
         USING CVT,R6                                           GP98350
         USING STEPLIBX,R12                                     GP98350
         L     R1,IQEADDR          GET THE IQE ADDRESS          GP98350
         LCR   R1,R1               GET TWO'S COMPLEMENT OF IQE ADR
         L     R15,CVT0EF00        STAGE 2 EXIT EFFECTOR ADDR   GP98350
         BALR  R14,R15             GO DO IT                     GP98350
         LM    R14,R12,12(R9)  RESTORE ALL REGISTERS            GP98350
         BR    R14           RETURN TO CALLER                   GP98350
         POP   USING                                            GP98350
         SPACE 2                                                GP98344
********************************************************************
*   LOOKTIOT:  LOCATE DDNAME PASSED IN R1                          *
*      RETURNS ENTRY IN R1 IF FOUND, ELSE 0                        *
********************************************************************
         PUSH  USING                                            GP98345
         SPACE 1                                                GP98345
LOOKTIOT STM   R2,R3,DBLWD   SAVE SOME REGISTERS                GP98345
         LR    R3,R1         MOVE USER'S REQUEST TO ANOTHER REG GP98345
         L     R1,@TIOT      GET TIOT ADDRESS                   GP98345
         SR    R2,R2         ENTRY LENGTH                       GP98345
         USING TIOT1,R1                                         GP98345
         LA    R1,TIOENTRY   POINT TO FIRST DD ENTRY            GP98345
         USING TIOENTRY,R1                                      GP98345
LOOKTIOL ICM   R2,1,TIOELNGH   GET THE LENGTH OF THIS ENTRY     GP98345
         BZ    LOOKTION      HUH?                               GP98345
         CLC   TIOEDDNM,0(R3)  MATCH USER'S REQUEST?            GP98345
         BE    LOOKTIOX      FOUND; RETURN IN R1                GP98345
         AR    R1,R2         POINT TO NEXT ENTRY                GP98345
         B     LOOKTIOL      TRY NEXT                           GP98345
LOOKTION SR    R1,R1         SIGNAL NOTHING FOUND               GP98345
LOOKTIOX LM    R2,R3,DBLWD   SAVE SOME REGISTERS                GP98345
         BR    R14           RETURN TO CALLER                   GP98345
         POP   USING                                            GP98345
         SPACE 2                                                GP98349
***********************************************************************
*  PARSEDSN: THIS ROUTINE (INCORRECTLY) PARSES A DATA SET NAME IN THE *
*     EXTRACTED STRING 'PARMWORD'.  PARMWLEN HAS THE STRING LENGTH -1 *
*     UNQUOTED STRINGS ARE PREFIXED                                   *
***********************************************************************
PARSEDSN STM   R0,R8,20(R13)  SAVE USER'S REGISTERS             GP98348
         SR    R4,R4                                            GP98348
         IC    R4,PARMWLEN   GET LENGTH-1 OF DSN                GP98348
         MVC   0(L'DSN1,R5),BLANKS  CLEAR                       GP98348
         LR    R7,R5         SET MOVE DESTINATION               GP98348
         SPACE 1                                                GP98348
         CLI   PARMWORD,C''''  LOOK FOR QUOTES                  GP98348
         BNE   PARSENQU            IF NOT, MUST ADD TSO ID      GP98348
         SH    R4,=H'2'      ALLOW FOR START AND END QUOTE      GP98348
         BM    ERRBDDEL        TOO SHORT; TOO BAD               GP98348
         LA    R2,PARMWORD+2(R4)  POINT TO END OF STRING        GP98348
         CLI   0(R2),C''''   MATCHING END QUOTE?                GP98348
         BNE   ERRBDDEL      NO; TOO BAD                        GP98348
         SR    R3,R3         SET PREFIX LENGTH                  GP98348
         LA    R8,PARMWORD+1 SAVE START MOVE ADDRESS            GP98348
         B     PARSECOM      JOIN COMMON CODE                   GP98348
         SPACE 1                                                GP98348
PARSENQU LA    R8,PARMWORD   SET MOVE SOURCE                    GP98348
PARSEDLP MVC   0(7,R7),PREFIX      MOVE IN THE USER'S PREFIX    GP98348
         SR    R3,R3                                            GP98348
         ICM   R3,1,PREFLEN  GET THE PREFIX LENGTH              GP98349
         BZ    PARSECOM      MOVE AS IS                         GP98349
         AR    R7,R3         SET MOVE DESTINATION               GP98348
         CLI   PARMWORD,C'.'  DID USER START WITH PERIOD?       GP98348
         BE    PARSECOM      ZOUNDS                             GP98348
         MVI   0(R7),C'.'          QUALIFY THE D.S. NAME        GP98348
         AR    R7,R0         SET NEW MOVE DESTINATION           GP98348
         AR    R3,R0         PREFIX LENGTH                      GP98348
PARSECOM AR    R3,R4         COMBINED LENGTH-1                  GP98348
         LA    R2,L'DSN1     AND COMPARE TO LEGAL MAXIMUM       GP98348
         CR    R3,R2                                            GP98348
         BNL   ERRBDDEL      TOO BAD                            GP98348
         EX    R4,EXMVCDSN        AND MOVE IN THE REST          GP98348
         LM    R0,R8,20(R13)  RESTORE USER'S REGISTERS          GP98348
         BR    R14                 AND GO BACK                  GP98348
EXMVCDSN MVC   0(0,R7),0(R8)  MOVE USER'S DSN OR FRAGMENT       GP98348
         SPACE 2                                                GP98348
***********************************************************************
*  PARSEWRD: THIS ROUTINE EXTRACTS AND CONVERTS TO UPPER CASE ONE     *
*     'WORD' OF INPUT TEXT.  RECOGNIZES BLANK, COMMA, AND RIGHT PAR.  *
***********************************************************************
PARSEWRD STM   R0,R8,20(R13)  SAVE USER'S REGISTERS             GP98348
         MVC   PARMWORD,BLANKS  CLEAR                           GP98348
         LR    R8,R1         PRESERVE STOP ADDRESS              GP98348
PARSEWLP LR    R7,R8         GET END ADDRESS                    GP98348
         SR    R7,R15        LESS START                         GP98348
         BM    PARSEWND      NOTHING                            GP98348
         LA    R0,256        SET SEGMENT LENGTH                 GP98348
PARSEWFB EX    R7,EXTRTNB    FIND A NON-BLANK                   GP98348
         BNZ   PARSESTR      HAVE ONE                           GP98348
         AR    R15,R0        POINT TO NEXT SEGMENT              GP98348
         SR    R7,R0         AND TRY AGAIN                      GP98348
         BNM   PARSEWFB      IN NEW SEGMENT                     GP98348
         B     PARSEWND      NO MORE TO DO                      GP98348
PARSESTR LR    R3,R1         PRESERVE START ADDRESS             GP98348
         LR    R7,R8         GET END ADDRESS                    GP98348
         SR    R7,R1         LESS START                         GP98348
         LR    R15,R1        SET START SCAN ADDRESS             GP98348
         LA    R2,L'PARMWORD  SET ANTICIPATED MAXIMUM LENGTH    GP98349
         CR    R7,R2         USE SHORTER OF THE TWO             GP98349
         BL    *+6                                              GP98349
         LR    R7,R2         TRUNCATE                           GP98349
         LA    R1,1(R7,R15)  POINT TO LAST LEGAL ADDRESS +1     GP98349
         SLR   R2,R2                                            GP98348
         TRT   0(1,R15),TRTNBLNK  SEE WHETHER THIS IS A SEPARATOR
         BZ    PARSERST      NO; DO NORMALLY                    GP98349
         LA    R1,1(,R15)    ENSURE LENGTH OF ONE               GP98349
         B     PARSESEP      AND SKIP FULL LOAD                 GP98349
PARSERST EX    R7,EXTRTBL    FIND A BLANK OR SEPARATOR          GP98348
PARSESEP LR    R15,R1        SET RETURN ADDRESS                 GP98348
         SR    R1,R3         LENGTH OF PARSED STRING            GP98348
         BNP   PARSEWLP      NIL - TRY AGAIN                    GP98348
         BCTR  R1,0                                             GP98348
         EX    R1,EXOCPRM    MOVE AND UPPER-CASE PARM WORD      GP98348
         STC   R1,PARMWLEN   SAVE LENGTH(-1)                    GP98348
         LM    R0,R8,20(R13)  RESTORE USER'S REGISTERS          GP98348
         B     4(,R14)              AND GO BACK WITH WORD       GP98348
PARSEWND LM    R0,R8,20(R13)  RESTORE USER'S REGISTERS          GP98348
         BR    R14                 AND GO BACK                  GP98348
EXTRTNB  TRT   0(0,R15),TRTBLANK  LOOK FOR A NON-BLANK          GP98348
EXTRTBL  TRT   0(0,R15),TRTNBLNK  LOOK FOR A BLANK OR SEPARATOR GP98348
EXOCPRM  OC    PARMWORD(0),0(R3)  MOVE INDENTIFIED WORD         GP98348
         TITLE 'S T E P L I B  ***  DATA'                       GP98345
********************************************************************
*        PROGRAM CONSTANTS                                         *
********************************************************************
         SPACE 1
         DS    0D
SP1      DC    AL1(254),AL3(512)
BLANKS   DC    CL80' '       SMALLER LOT OF BLANKS              GP98349
MSGNOCHG MSGDEF 13,'NO TCBS MODIFIED - ALREADY HAD A TASKLIB'   GP98345
MSGSMCHG MSGDEF 14,'AT LEAST ONE TCB NOT UPDATED - ALREADY HAS A TASKLI*
               B',FLAG=W                                        GP98345
MSGBDPRM MSGDEF 17,'SYNTAX ERROR IN REQUEST - NO ACTION TAKEN.' GP98348
MSGNOTOP MSGDEF 19,'DATA SET DID NOT OPEN - NO ACTION.'         GP98345
MSGNOTPO MSGDEF 20,'DATA SET NOT PARTITIONED - NO ACTION.'      GP98345
MSGBDDSN MSGDEF 22,'INVALID DSNAME SPECIFICATION - NO ACTION TAKEN.'
MSGNODEL MSGDEF 40,'REQUIRED DELIMITER NOT FOUND - NO ACTION TAKEN.'
MSGUNAUT MSGDEF 47,'STEPLIB PROGRAM INVOKED UNAUTHORIZED. NO ACTION.'
MSG2DSN  MSGDEF 66,'MORE THAN &MAXCAT DATA SETS REQUESTED. NO ACTION.'
MSG2APP  MSGDEF 67,'&MAXCAT DATA SETS REACHED. APPEND TERMINATED.',FLAG*
               =W            WARNING ONLY                       GP98349
MSGLIST  MSGDEF 88,'STEPLIB(S) IN USE:',FLAG=I                  GP98349
MSGLIST0 MSGDEF 89,'***** NO STEPLIB ENTRY FOUND',FLAG=I        GP98349
MSGLISTO MSGDEF 90,'***** OLD STEPLIB PROGRAM IN USE',FLAG=W    GP98349
MSGBDALL MSGDEF 99,'STEPLIB NOT ALLOCATED; E.C. = XXXX, R.C. = XXXX'
STEPAUTH DC    CL39'STEPAUTH' FACILITY NAME TO AUTHORIZE        JW12095
SAFVID   DC    CL4'SAFV'     SAFV EYE CATCHER                   JW12095
         PUSH  PRINT                                            GP98345
         PRINT GEN                                              GP98345
         MSGWORK PATTERN,MOD=STLB,MODNM=': '  PATTERN MESSAGE DATA
         POP   PRINT                                            GP98345
         SPACE 1
HEXTRTAB EQU   *-C'0'                                           GP98345
         DC    C'0123456789ABCDEF'
         SPACE 1
         LTORG ,
         SPACE 1                                                GP98348
TRTNBLNK DC    256AL1(0)                                        GP98348
         ORG   TRTNBLNK+C' '                                    GP98348
         DC    X'04'                                            GP98348
         ORG   TRTNBLNK+C','                                    GP98348
         DC    X'04'                                            GP98348
         ORG   TRTNBLNK+C'('                                    GP98348
         DC    X'08'                                            GP98348
         ORG   TRTNBLNK+C')'                                    GP98348
         DC    X'0C'                                            GP98348
         ORG   ,                                                GP98348
TRTBLANK DC    256AL1(4)                                        GP98348
         ORG   TRTBLANK+C' '                                    GP98348
         DC    X'00'         SKIP BLANKS                        GP98348
         ORG   TRTBLANK+C','                                    GP98348
         DC    X'00'         SKIP COMMAS                        GP98348
         ORG   ,                                                GP98348
TRTDSNAM DC    256AL1(4)     QUICK AND DIRTY DSN CHECK          GP98349
         ORG   TRTDSNAM+C' '                                    GP98349
         DC    X'00'         ALLOW TRAILING BLANKS              GP98349
         ORG   TRTDSNAM+C'.'                                    GP98349
         DC    X'00'         ALLOW PERIODS                      GP98349
         ORG   TRTDSNAM+C'@'                                    GP98349
         DC    X'00'         ALLOW NATIONAL CHARACTERS          GP98349
         ORG   TRTDSNAM+C'#'                                    GP98349
         DC    X'00'         ALLOW NATIONAL CHARACTERS          GP98349
         ORG   TRTDSNAM+C'$'                                    GP98349
         DC    X'00'         ALLOW NATIONAL CHARACTERS          GP98349
         ORG   TRTDSNAM+C'A'                                    GP98349
         DC    9X'00'        ALLOW A-I                          GP98349
         ORG   TRTDSNAM+C'J'                                    GP98349
         DC    9X'00'        ALLOW J-R                          GP98349
         ORG   TRTDSNAM+C'S'                                    GP98349
         DC    8X'00'        ALLOW S-Z                          GP98349
         ORG   TRTDSNAM+C'0'                                    GP98349
         DC    10X'00'       ALLOW 0-9                          GP98349
         ORG   ,                                                GP98349
         TITLE 'S T E P L I B  ***  CIRB EXIT'                  GP98349
********************************************************************
* THIS IS THE IRB EXIT THAT IS SET UP AND SCHEDULED BY THE CIRB    *
* AND THE CALL TO CVT0EF00 WHICH IS THE STAGE 2 EXIT EFFECTOR.     *
*   R12 POINTS TO THIS AREA AFTER IT IS COPIED TO DYNAMIC STORAGE  *
********************************************************************
         PUSH  USING
         SPACE 1
STEPLIBX CSECT ,             MAINTAIN DISCRETE ADDRESSABILITY
         STM   R14,R12,12(R13)
         LR    R12,R15                                          GP98349
         USING STEPLIBX,R12                                     GP98349
         TM    EXITFLAG,XFRESET    TEST FOR RESET ENTRY         GP98345
         BO    DORESET             BR IF RESET
         LA    R1,STEPDCB          POINT TO THE NEW DCB         GP98345
         ST    R1,DCBLIST          ... SAVE AS POINTER          GP98345
         OI    DCBLIST,X'80' SET END-OF-LIST BIT                GP98345
         OPEN  MF=(E,DCBLIST)  OPEN IT                          GP98345
         TM    EXITFLAG,XFAPF  AUTHORIZE?                       GP98349
         BZ    EXITRET       NO                                 GP98349
         TM    STEPDCB+DCBOFLGS-IHADCB,DCBOFOPN  DID IT OPEN?   GP98349
         BZ    EXITRET       NO; AVOID PROBLEMS                 GP98349
         SR    R1,R1         CLEAR HIGH BYTE                    GP99012
         ICM   R1,7,STEPDCB+DCBDEBA-IHADCB   DEB FOR STEPLIB    GP99012
         USING DEBBASIC,R1                                      GP98349
         OI    DEBFLGS1,DEBAPFIN  TURN ON APF LIBRARY BIT       GP98349
         L     R1,PSATOLD-PSA      GET MY TCB                   GP98351
         L     R1,TCBJSCB-TCB(,R1) GET JSCB                     GP98351
         USING IEZJSCB,R1                                       GP98351
         TM    JSCBSWT1,JSCBPASS  WISE GUY?                     GP98351
         BNZ   EXITRET       YES; NO CHANGE                     GP98351
         OI    JSCBSWT1,JSCBPASS  PERMIT LIBRARY ACCESS          87053
         OI    EXITFLAG,XFPASS   RECORD IT                      GP98351
         B     EXITRET             RETURN TO SYSTEM
         DROP  R1                                               GP98351
         SPACE 1
DORESET  OI    DCBLIST,X'20'       INDICATE CLOSE = FREE        GP98345
         CLOSE MF=(E,DCBLIST)  CLOSE IT                         GP98345
         MVI   DCONCATL+S99VERB-S99RB,S99VRBDC DECONCATENATE    GP98350
         MVI   DECONDD+7,C' '  RESET DD NAME                    GP98350
         LA    R2,DCONCATL         RESET THE
         ST    R2,DCONCAT          ... DECONCATENATION          GP98345
         OI    DCONCAT,X'80'                                    GP98345
         LA    R2,DCATPTR          ... POINTERS
         ST    R2,DCATERR+4        ...
         LA    R2,DECON            ...
         ST    R2,DCATPTR          ...                          GP98345
         OI    DCATPTR,X'80'                                    GP98345
         TM    EXITFLAG,XFCONCAT   TEST FOR DECONCAT NECESSARY  GP98345
         BNO   DORESETU            JUST SKIP DECONCAT IF NOT    GP98350
         LA    R1,DCONCAT          POINT TO THE MESS
         SVC   99                  DE-CON-CAT
********************************************************************
* DURING TESTING WITH ESA 4.3 IT WAS FOUND THAT THE CLOSE=FREE     *
* FLAGS WERE NOT BEING HONORED. THIS CODE DOES AN EXPLICIT UNALLOC *
* FOR EACH POSSIBLE ENTRY.                                         *
********************************************************************
DORESETU MVI   DCONCATL+S99VERB-S99RB,S99VRBUN UN-ALLOCATE      GP98350
         SR    R6,R6                                            GP98350
         LA    R7,&MAXCAT    MAXIMUM NUMBER                     GP98350
DORESETL STC   R6,DECONDD+7                                     GP98350
         TR    DECONDD+7(1),SUFFIXES  MAKE PRINTABLE SUFFIX     GP98350
         LA    R1,DCONCAT    (THIS WORKS BECAUSE DDCDDNAM=DUNDDNAM)
         SVC   99            GET RID OF IT                      GP98350
         LA    R6,1(,R6)     BUMP IT                            GP98350
         CR    R6,R7         DONE YET?                          GP98350
         BL    DORESETL      NO; DO ANOTHER                     GP98350
DORESETX NI    EXITFLAG,255-XFRESET  RESET DONE                 GP98345
         TM    EXITFLAG,XFPASS   DID I TURN IT ON?              GP98351
         BZ    EXITRET       NO; LEAVE IT                       GP98351
         L     R1,PSATOLD-PSA      GET MY TCB                   GP98351
         L     R1,TCBJSCB-TCB(,R1) GET JSCB                     GP98351
         USING IEZJSCB,R1                                       GP98351
         TM    JSCBSWT1,JSCBPASS  WISE GUY?                     GP98351
         BZ    EXITRET       YES; NO CHANGE                     GP98351
         NI    JSCBSWT1,255-JSCBPASS  YES; RESET IT             GP98351
EXITRET  LM    R14,R12,12(R13)
         BR    R14
         SPACE 2
STEPDCB  DCB   DSORG=PO,DDNAME=STEPDYN,MACRF=(R)                GP98345
         SPACE 2
DCBLIST  DC    A(0)                                             GP98345
IRBADDR  DC    A(0)
IQEADDR  DC    A(0)
EXITFLAG DC    X'00'         COMBINED EXIT FLAGS                GP98345
XFMASTER EQU   X'80'           MASTER STEPLIB TESTED/STORED     GP98345
XFAPF    EQU   X'20'           AUTHORIZE DEB                    GP98349
XFPASS   EQU   X'10'           DS ACCESS                        GP98351
XFCONCAT EQU   X'02'           REQUEST IS CONCATENATION         GP98345
XFRESET  EQU   X'01'           REQUEST IS OPEN (0) OR CLOSE (1) GP98345
SUFFIXES DC    C' 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ@#$'       GP98348
MASTLIB  DC    A(0)          ADDRESS OF THE ORIGINAL STEPLIB    GP98345
DCONCAT  DC    A(DCONCATL+X'80000000')
DCONCATL DC    AL1(S99RBEND-S99RB,S99VRBDC,S99NOMNT,0)          GP98349
DCATERR  DC    F'0'
DCATADDR DC    A(DCATPTR)
         DC    2F'0'
         SPACE 1
DCATPTR  DC    A(DECON+X'80000000')
         SPACE 1
DECON    DC    Y(DDCDDNAM,1,L'DECONDD)  DDNAM LIST              GP98349
DECONDD  DC    CL8'STEPDYN'                                     GP98348
         SPACE 1                                                GP98345
         LTORG ,             DON'T TRUST ANYONE                 GP98345
         SPACE 1
EXITEND  DS    0H
         POP   USING
         AIF   (&MVSXA).SECTNEW                                 GP06333
STEPLIB  CSECT ,                                                GP06333
         AGO   .SECTCOM                                         GP06333
.SECTNEW ANOP  ,                                                GP06333
STEPLIB  RSECT ,             RESTORE MAIN PROGRAM SECTION
.SECTCOM SPACE 1
********************************************************************
*              EXIT END                                            *
********************************************************************
         TITLE 'S T E P L I B  ***  DATA'                       GP98345
********************************************************************
*    PROGRAM DATA - RELOCATED TO DYNAMIC STORAGE                   *
********************************************************************
         PRINT GEN           WASTE A BUSH                       GP98344
PATTERN  WORKAREA ,          GENERATE DATA                      GP98344
         SPACE 2
********************************************************************
*        PROGRAM VARIABLES  R13 POINTS TO THIS AREA                *
********************************************************************
         SPACE 1
LDWDSECT DSECT ,             DYNAMIC STORAGE - SP 252
         DS    18A           OS SAVE AREA (ORIGINAL)
FAKESAVE DS    18A           OS SAVE AREA (FOR MVS SETLOCK)     GP06327
LOCKSAVE DS    11A           SAVE AREA OVER STLOCK FOR R0-R10   GP06327
DBLWD    DC    2D'0'                                            GP98349
@TCB     DC    A(0)
@TIOT    DC    A(0)
@JSTCB   DC    A(0)
@DCB     DC    A(0)          OPEN/CLOSE LIST
TIOTOFST DC    H'0'
CONDCODE DC    H'0'          PROGRAM RETURN CODE                GP98344
PROCFLAG DC    X'00'         PROCESSING FLAG                    GP98345
PFSEQSUP EQU   X'80'           CURRENTLY IN SUPERVISOR MODE     GP98345
PFSEQZER EQU   X'40'           KEY ZERO - RESET BEFORE EXIT     GP98345
PFAPF    EQU   X'20'           DEBAPF REQUEST                   GP98349
PFRESET  EQU   X'08'           CALLED TO RESET PRIOR REQUEST    GP98348
PFAPPEND EQU   X'04'           APPEND PRIOR STEPLIB DATA SETS   GP98348
PFERRNPO EQU   X'02'           USER'S DS NOT PARTITIONED        GP98345
PFCYCLE  EQU   X'01'           FREE OLD REQUEST; ALLOCATE NEW   GP98345
STEPFLAG DC    X'00'         PROCESSING FLAG                    GP98345
PF@SET   EQU   X'20'           AT LEAST ONE TCBJLB CHANGED      GP98345
PF@FAIL  EQU   X'10'           AT LEAST ONE ALIEN TCBJLB FOUND  GP98345
PFLIST   EQU   X'01'           LISTER: FOUND ONE                GP98349
PREFLEN  DC    X'00'         LENGTH OF PREFIX (0-7)             GP98348
PREFIX   DC    CL7' '                                           GP98345
PARMWLEN DC    X'00'         LENGTH-1 OF PARSED WORD            GP98348
PARMWORD DC    CL63' ',C' '  UPPER-CASE RETURN FROM PARSER      GP98348
         DS    0D
DSN1     DC    (&MAXCAT)CL44' ',C' '                            GP98348
         SPACE 1
         AIF   (NOT &MVSXA).SKIPSWA                             GP06327
LISTSWA  SWAREQ FCODE=RL,EPA=LISTEPA,MF=L                       GP98344
LISTEPA  DS    A(LISTSVA)                                       GP98344
LISTSVA  DS    7A  REQUEST/RESPONSE LIST (IBM LIES; 4A ^ ENOUGH)  98344
LISTSWAL EQU   *-LISTSWA     LENGTH TO CLEAR                    GP98344
LOOKSWA  DS    0H                                               GP98344
.SKIPSWA SPACE 1                                                GP98344
         MSGWORK DATA        EXPAND MESSAGE WORK AREA           GP98344
         SPACE 1                                                GP98345
DYNWORK  WORKAREA PFX=       EXPAND MAPPING                     GP98345
LDWSIZE  EQU   *-LDWDSECT                                       GP98345
         TITLE 'S T E P L I B  ***  DSECTS'
         PRINT NOGEN         LOOK IT UP, LOOK IT UP
         MSGWORK DSECT       DEFINE MSGDEF EXPANSION            GP98344
         SPACE 1
IQESECT  DSECT
IQELNK   DS    0AL4
IQESTAT1 DS    B
IEQLNKA  DS    AL3
IQEPARAM DS    A
IQEIRB   DS    0AL4
IQEFLAGS DS    B
IQUPURGE EQU   X'80'
IQEIRBA  DS    AL3
IQETCB   DS    0AL4
IQESTAT2 DS    B
IQETCBA  DS    AL3
IQEDCB   DS    A
IQEOUTLM DS    A
IQEEND   DS    0C
IQELEN   EQU   IQEEND-IQESECT
         SPACE 1
         CVT   DSECT=YES
CVTSAF   EQU   248 CVTSAF DOESN'T EXIST BUT IS A RESERVED FIELD IN 3.8J
         ICHSAFV  DSECT=YES  MAP SAFV                           JW12095
         SPACE 1
         IHAASCB ,                                              GP98344
         SPACE 1                                                GP98344
         IEFJESCT ,                                             GP98344
         SPACE 1                                                GP98344
         IKJTCB ,                                               GP98344
         SPACE 1
         IHAPSA ,
         SPACE 1
         DCBD  DEVD=DA,DSORG=PS
         SPACE 1                                                GP98349
         IEZDEB ,                                               GP98349
         SPACE 1
DUMTIOT  DSECT ,             IN SOME VERSIONS OF OS, NO DSECT   GP98345
         IEFTIOT1 ,                                             GP98345
         SPACE 1                                                GP98345
DUMJFCB  DSECT ,             IN SOME VERSIONS OF OS, NO DSECT   GP98345
         IEFJFCBN ,                                             GP98345
         SPACE 1                                                GP98345
DUMSIOT  DSECT ,             IN SOME VERSIONS OF OS, NO DSECT   GP98345
         IEFASIOT ,                                             GP98345
         SPACE 1                                                GP98345
DUMSCT   DSECT ,             IN SOME VERSIONS OF OS, NO DSECT   GP98345
         IEFASCTB ,                                             GP98345
         SPACE 1                                                GP98345
DUMJSCB  DSECT ,             IN SOME VERSIONS OF OS, NO DSECT   GP98345
         IEZJSCB ,                                              GP98345
         SPACE 1                                                GP98345
         IHARB
         SPACE 1
         IEFZB4D0 .          EXPAND SVC 99 REQUESTS             GP98349
         SPACE 1                                                GP98349
         IEFZB4D2 .          EXPAND SVC 99 TU KEYS              GP98349
         SPACE 1                                                GP98349
         IKJPSCB ,                                              GP98349
         SPACE 1                                                GP98349
         IKJUPT ,                                               GP98349
         SPACE 1                                                GP98349
         YREGS ,
         SPACE 1
         END
