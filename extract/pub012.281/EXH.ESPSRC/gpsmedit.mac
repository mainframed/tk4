GPSMEDIT TITLE 'G P S M E D I T  ***  WYLBUR <=> SAM CONVERSION'
         PUNCH ' ORDER GPSMEDIT(P) '  MAKE DUMPS EASIER
         SPACE 1
         COPY OPTIONGB       DEFINE GLOBAL VARIABLES
         SPACE 1
         SYSPARM LIST=YES    SET GLOBAL VARIABLES
         SPACE 2
***********************************************************************
*                                                                     *
*        COPYRIGHT 1986  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2004  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*   This is an untested subsystem module. On a DD for a Wylbur format *
*   data set, the user puts SUBSYS=GPSM, and magically the input will *
*   be in uncompressed format.                                        *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT &PRTSOR
GPSMEDIT PGMHEAD ZERO12,BASE=R12,PARM=R7,AM=31,RM=24,LOC=BELOW
         USING GPSMPARM,R7   DECLARE THE PASSED PARAMETERS
         L     R8,GPSMSSOB   GET THE SSOB
         USING SSOB,R8       DECLARE IT
         CLI   SSOBFUNC+1,SSOBOPEN  OPEN CALL ?
         BNE   REQCLOSE      NO; CLOSE
         L     R5,SSOBINDV
         L     R5,SSDAJFCB-SSOBGN(,R5)  GET THE JFCB
         MVC   JFCBDSNM,JFCBDSNM-INFMJFCB(R5)
         MVC   JFCBVOLS,JFCBVOLS-INFMJFCB(R5)
         MVC   JFCBVLCT,JFCBVLCT-INFMJFCB(R5)
         MVC   JFCBIND1,JFCBIND1-INFMJFCB(R5)
         MVC   JFCBELNM,JFCBELNM-INFMJFCB(R5)
         MVI   JFCBTSDM,JFCNWRIT+JFCNDSCB+JFCNDCB  NO REWRITES
         LA    R3,RAVEND-CRAVE  GET WORK AREA SIZE
         STORAGE OBTAIN,LENGTH=(R3)  GET A WORK AREA
         LR    R6,R1         COPY OVER
         CLRL  (R1),(R3)     CLEAR IT TO NULLS
         USING CRAVE,R6
         MVC   RAVEINIT,INITCODE  MAKE CONTROL CODE
         MVC   MYDCB,PATDCB  BUILD DCB
         MVC   OUTRECFM,JFCRECFM-INFMJFCB(R5)
         SERVINIT ,          LOAD AND INITIALIZE SERVICE ROUTINE
         SERVLOAD @DCBEXIT   LOAD THE DCB EXIT
         LA    R15,MYDCB     INITIALIZE OPEN LIST
         ICM   R15,IOOO,=X'90'  OPEN REREAD, END OF LIST
         ICM   R0,IOOO,=X'05'   1ST LEVEL DCB EXIT
         LA    R1,I2LVL
         ICM   R1,IOOO,=X'80'   NOP FOR DCB EXIT
         STM   R15,R1,INOPL  BUILD OPEN LIST
         ST    R6,GPSMAMEP   SAVE 'ENTRY' POINT
         MVC   IXDCBXID,=CL8'DCBEXITP'  IDENTIFY
         MVI   IXFLAG1,IX1FULLT   FULL/HALF TRACK BLOCKING
         MVI   IXDRECFM,DCBRECU   WYLBUR STANDARD RECFM=U
         MVI   IXOPLIST,X'80'     NOP & LAST
         SPACE 1
*   PROCESS PARM FIELD
*
         MVI   FLAG1,WORD#   INSTALLATION DEFAULT
         ICM   R3,IIII,GPSMMPRM   ANY PARM POINTER ?
         BZ    NOPARM        NO
         SR    R1,R1
         ICM   R1,OOOI,0(R3)      GET LENGTH OF PARM
         BNP   BADDSN        NEED A DDNAME
         LA    R4,1(R1,R3)   SPACE TO NEXT PARM
         MVC   DCBDDNAM-IHADCB+MYDCB,=CL8' '  PREPARE FOR MOVE
         MIN   R1,=AL2(L'DCBDDNAM),TYPE=H   NOT TOO LONG ?
         BCTR  R1,0          LENGTH FOR EX
         EX    R1,EXMVCDDN   COPY DD NAME OF WYLBUR FILE
         LR    R3,R4         SET TO NEXT PARM
NEXTPARM SR    R1,R1
         ICM   R1,OOOI,0(R3) LENGTH OF NEXT PARM
         BNP   NOPARM        NONE - DONE
         LA    R4,1(R1,R3)   SPACE TO NEXT PARM
         CH    R1,=H'3'      LONG ENOUGH ?
         BL    BADPARM       NO
         LA    R14,PARMTAB
         LA    R15,(PARMTABE-PARMTAB)/(PARMTAB2-PARMTAB)
PARMLOOP CLC   2(3,R14),1(R3)  MATCHING PARM ?
         BE    PARMFUND      YES
         LA    R14,(PARMTAB2-PARMTAB)(,R14)  NEXT
         BCT   R15,PARMLOOP  TRY AGAIN
         SPACE 1
BADPARM  MVC   SAWTO(WTOPARML),WTOPARM
         MVC   SAWTO+OFFPMDD(8),GPSMDDN  SHOW WHICH DD
         B     OPNWTO        GO TO COMMON
         SPACE 1
PARMTAB  DC    AL1(0,255-NUMB-INT-LEFT),C'UNN'  UNNUMBERED
PARMTAB2 DC    AL1(NUMB,255),C'NUM'    NUMBERED (NNNN.DDD)
         DC    AL1(NUMB,255),C'EDI'    NUMBERED (NNNN.DDD)
         DC    AL1(INT,255),C'INT'     INTEGER NUMBERS
         DC    AL1(INT+TSO,255),C'TSO' TSO RECFM=V NUMBERS
         DC    AL1(INT+LEFT,255-NUMB),C'LEF'  LEFT-JUSTIFIED
         DC    AL1(0,255-NUMB-INT-LEFT),C'NON'  UNNUMBERED
         DC    AL1(WORD#,255),C'WOR'   FULL-WORD LINE NUMBERS
         DC    AL1(0,255-WORD#),C'HAL'   HALL-WORD LINE NUMBERS
         DC    AL1(DEBUG,255),C'DEB'   DEBUG MODE
PARMTABE EQU   *
         SPACE 1
PARMFUND NC    FLAG1,1(R14)  RESET UNWANTED BITS
         OC    FLAG1,0(R14)  SET WANTED BITS
         LR    R3,R4         NEXT PARM
         B     NEXTPARM      AND TRY AGAIN
EXMVCDDN MVC   DCBDDNAM-IHADCB+MYDCB(0),1(R3)  MOVE DD FROM PARM
         EJECT ,
*   OPEN FILES AND CHECK RECFM
*
NOPARM   TM    FLAG1,NUMB+INT  BOTH WYLBUR AND INTEGER LINE NUMBERS?
         BNO   NOPARM2       NO
         NI    FLAG1,255-NUMB  RESET WYLBUR
NOPARM2  LA    R11,MYDCB
         USING IHADCB,R11
         LA    R0,INEXLST    GET DCB EXIT
         ST    R0,DCBEXLST   AND SET INTO DCB
         OPEN  MF=(E,INOPL)  OPEN THE INPUT DATA SET
         TM    DCBOFLGS,DCBOFOPN  DID IT OPEN ?
         BZ    BADDSN        OOPS
         MVC   INPRECFM,DCBRECFM  SAVE RECFM
         B     ENDOPCLO      GO TO COMMON
         DROP  R6,R11
         SPACE 2
*   CLOSE DATA SET
*
REQCLOSE ICM   R6,IIII,GPSMAMEP  DID WE COMPLETE INITIALIZATION?
         BZ    ENDOPCLO      NO; JUST GET OUT
         CLI   SSOBFUNC+1,SSOBCLOS  CLOSE REQUESTED?
         BNE   ENDOPCLO      NO; NOT SUPPORTED
         USING CRAVE,R6      DECLAREWORK AREA
         CLOSE MF=(E,INOPL)  CLOSE THE DCB
         FREEPOOL MYDCB      RELEASE BUFFERS
         SERVTERM ,          RELEASE RESOURCES
         LA    R0,RAVEND-CRAVE  WORK AREA SIZE
         STORAGE RELEASE,LENGTH=(0),ADDR=(R6)
         XC    GPSMAMEP,GPSMAMEP  CLEAR POINTER
         DROP  R6
ENDOPCLO PGMEXIT RC=0        RETURN OK
         SPACE 1
BADDSN   MVC   SAWTO(WTODSNL),WTODSN
         MVC   SAWTO+OFFDSDD(8),GPSMDDN  SHOW WHICH DD
OPNWTO   WTO   MF=(E,SAWTO)  WRITE ERROR MSG
         ABEND 13,DUMP       QUIT
         SPACE 2
SAVE     DSECT ,
SAWTO    DS    CL132         SPACE FOR WTO
MYJFCB   DS    0F
         IEFJFCBN ,          LOCAL COPY OF JFCB
         SPACE 1
MYDSCB   DS    0F
         IECSDSL1 1          LOCAL COPY OF FMT 1 DSCB
SAVEEND  EQU   *             SAVE AREA END
         SPACE 1
GPSMEDIT CSECT ,
PATDCB   DCB   DDNAME=EDIT,DSORG=PS,EODAD=DSEND,MACRF=(GL),            *
               SYNAD=SYNAD
PATDCBLN EQU   *-PATDCB
         SPACE 1
WTODSN   WTO   'GPSMEDIT - UNABLE TO OPEN DD FOR XXXXXXXX',MF=L,       *
               ROUTCDE=11
OFFDSDD  EQU   37,8,C'C'     DDN INSERTION POINT
WTODSNL  EQU   *-WTODSN
         SPACE 1
WTOPARM  WTO   'GPSMEDIT - INVALID PARM ON DD FOR XXXXXXXX',MF=L,      *
               ROUTCDE=11
OFFPMDD  EQU   38,8,C'C'     DDN INSERTION POINT
WTOPARML EQU   *-WTOPARM
         SPACE 1
*   CODE MOVED TO START OF WORK AREA
*
         DROP  ,
INITCODE BASR  R14,0
         STM   R14,R12,12(R13)
         BASR  R15,0         SET LOCAL BASE
         USING RAVEINIT+(*-INITCODE),R15
INITBASE LA    R14,RAVESAVE  GET LOCAL SAVE AREA
         ST    R13,4(,R14)   LINK
         ST    R14,12(,R13)  CHAIN
         LR    R13,R14       FENCE
         ICM   R12,IIII,INITCADD-INITBASE(R15)
         BR    R12           INVOKE I/O PROCESSING
INITCADD DC    AL4(PUTGET)
INITCLEN EQU   *-INITCODE
         EJECT ,
GPSMEDIT CSECT ,             JUST IN CASE
         DROP  ,
         USING PUTGET,R12    SET BY PROLOG CODE
         USING RAVESAVE,R13    DITTO
PUTGET   LR    R6,R1         COPY RPL ADDRESS
         USING IFGRPL,R6     DECLARE IT
         XC    RPLFDBK,RPLFDBK  CLEAR RETURN
         LTR   R0,R0         GET REQUEST ?
         BNZ   BADIO         NO; UNSUPPORTED OR BAD
         TM    INPRECFM,DCBRECU  READING WYLBUR ?
         BNO   SIMPLE        DEFINITELY NOT
         LM    R2,R5,RESTREGS  RESTORE DEBLOCKING REGISTERS
         L     R9,DONECNT    RELOAD PORTION OF RECORD DONE
         C     R9,TOTALCNT   BLOCK EXHAUSTED A/
         BL    NEXTLINE      NO; RESTART
         SPACE 1
NEXTBUF  GET   MYDCB         GET NEXT BLOCK
         LR    R4,R1         COPY BUFFER POINTER
         TM    FLAG1,SYNADF  WAS THE READ SUCCESSFUL?
         BO    INERR         NO-PRINT ERROR AND QUIT
         TM    0(R4),X'80'   NEW NIH FORMAT ?
         BZ    NEXTBUF1      NO
         OI    FLAG2,NIHNEW  YES; SET IT
         NI    0(R4),X'7F'   RESET FLAG
NEXTBUF1 LH    R0,0(,R4)     LOAD BLOCK LENGTH
         LTR   R0,R0         VALID ?
         BNP   NOTEDIT       NO
         ST    R0,TOTALCNT   SAVE FOR LATER
         SPACE 1
*   REGISTER USE
*     R2  -  RECORD BYTE COUNT FOR VALIDITY CHECK
*     R3  -  IC/ICM FOR LENGTH
*     R5 -> LINE #
*
         LA    R4,2(,R4)     POINT TO LINE NUMBER
         LR    R5,R4         POINTER TO INBUF
         LA    R2,2          SET RECORD BYTE COUNTER
SUMUP    SR    R3,R3         ASSUME 8-BIT LENGTH FIELD
         IC    R3,4(,R5)     LENGTH AFTER LINE NUMBER
         TM    FLAG2,NIHNEW  NEW NIH FORMAT ?
         BZ    SUMUPOLD        NO - CHECK OLD LIMIT
         TM    0(R5),NIHLEN16  YES - 16 BIT LENTGH FIELD ?
         BNZ   SUMUPCOM          NO - ACCEPT LENGTH
         ICM   R3,OOII,4(R5)     YES - GET LONG LENGTH
         CH    R3,=AL2((500/5+1)*16)  IS IT REASONABLE ?
         BH    NOTEDIT       NO; TOO BAD
         TM    0(R5),NIHRAW  NIH UNCOMPRESSED FORM ?
         BZ    SUMUP1          NO - PASSED CHECK
         CH    R3,=H'500'     YES - VALID SIZE ?
         BH    NOTEDIT       NO; ASSUMETHE WORST
SUMUP1   LA    R3,1(,R3)     FUDGE
         B     SUMUPCOM      REJOIN SUMUP MAINLINE
         SPACE 1
SUMUPOLD CH    R3,=AL2((142/15+1)*16)  REASONABLE ?
         BH    NOTEDIT       NO
SUMUPCOM LA    R2,5(R2,R3)   CUMULATIVE SIZE
         LA    R5,5(R5,R3)   BUMP SCAN COUNTER
         C     R2,TOTALCNT   STILL IN BUFFER?
         BH    NOTEDIT       NO
         BL    SUMUP         ADD NEXT LINE
         SPACE 1
*   REGISTER USE FOR DEBLOCKING
*     R1  -  NONBLANK MSK/CNT FOR PREST
*     R2  -  OBUF
*     R3  -  LENGTH
*     R4  -  LINE NUMBER / PREST BYTE / TEXT
*     R5  -  LENGTH FIELD / BLANK COUNT / EX REG
*     R7  -  BYTE COUNT FOR OVERFLOW TEST
*     R9  -  BYTE COUNT FOR EOB TEST
         SPACE 1
         LA    R9,2          RECORD BYTE COUNTER
NEXTLINE MVI   OBUF,C' '     BLANK OUTPUT BUFFER
         MVC   OBUF+1(256),OBUF  PROPAGATE
         MVC   OBUF+257(L'OBUF-257+8),OBUF  TO REST
         MVZ   FLAG2,0(R4)   PRESERE NIH FLAGS
         LA    R2,OBUF       -> OUTPUT
         LA    R15,4         V-FORMAT OVERHEAD
         TM    FLAG1,NUMB+INT  WAS A NUMBER PARM SPECIFIED?
         BZ    NONUM         NO
         MVC   LINE(4),0(R4) YES - SAVE LINE NUMBER
         NI    LINE,X'7F'    STRIP OSI FLAG
         TM    FLAG2,NIHNEW  NEW NIH FORMAT?
         BZ    *+8           NO
         NI    LINE,X'0F'    STRIP NIH FLAGS
         TM    FLAG1,LEFT    LEFT-JUSTIFIED SEQUENCE NUMBERS ?
         BZ    NONUM         NO
         LA    R2,8(,R2)     ALLOW FOR LINE NUMBER
         LA    R2,8(,R15)      DITTO
NONUM    SR    R3,R3         CLEAR FOR IC
         IC    R3,4(,R4)     GET SHORT LENGTH
         TM    FLAG2,NIHNEW  NEW FORMAT ?
         BZ    NOTLEN16      NO
         TM    0(R4),NIHLEN16  LONG ?
         BZ    NOTLEN16      NO
         ICM   R2,OOII,0(R4)  GET LONG LENGTH
         LA    R4,1(,R4)     ALLOW FOR EXTRA LENGTH BYTE
         LA    R9,1(,R9)       DITTO
NOTLEN16 LTR   R5,R3         ANY TEXT ?
         BP    NONUML        YSE
         TM    FLAG1,NUMB+INT  WILL LINE BE EMPTY ?
         BNZ   NONUML        NO
         LA    R15,1(,R15)   CHANGE TO SINGLE BLANK
NONUML   AR    R15,R3        LENGTH WITHOUT NUMBERS
         STH   R15,ORDW      SET NEW V-FORMAT LENGTH
         AR    R9,R3         UPDATE BLOCK COUNT
         SR    R7,R7         ZERO O/P COUNTER
         LA    R4,5(,R4)     -> TEXT / 1ST PREST BYTE
         LA    R9,5(,R9)     BUMP INPUT COUNT
         LTR   R5,R3         ANYTHING TO MOVE ?
         BNP   LINENO        NO - GO WRITE LINE
         TM    FLAG2,NIHRAW+NIHNEW  DECOMPRESSION ?
         BNO   MORE          YES
         MVCL  R2,R4         ELSE MOVE AS IS
         B     LINENO        AND PROCESS LINE #
         SPACE 1
EXMOVER  MVC   0(0,R2),1(R4)  MOVE TEXTICLE
         SPACE 1
MORE     IC    R5,0(,R4)     LOAD PREST BYTE
         LA    R1,15         MASK FOR TEXT LENGTH
         NR    R1,R15        ISOLATE TEXT LENGTH
         SRL   R15,4         ISOLATE BLANK COUNT
         AR    R2,R5         SKIP O/P OVER BLANKS
         AR    R7,R5         BUMP O/P COUNT
         AR    R7,R1         BUMP O/P FOR TEXT
         CH    R7,=AL2(L'OBUF)  WILL IT FIT ?
         BH    NOTEDIT       NO
         SR    R3,R1         REDUCE INPUT COUNT
         BNP   NOTEDIT       MUST BE 1 LEFT FOR PREST BYTE
         LTR   R5,R1         ANY NON-BLANKS ?
         BNP   CHECK         NO - CHECK END OF LINE
         BCTR  R5,0
         EX    R5,EXMOVER    MOVE TEXT
         AR    R2,R1         ADJUST O/P PTR
CHECK    LA    R4,1(R1,R4)   ADJUST I/P POINTER
         BCT   R3,MORE       END OF LINE ?
         SPACE 1
*   FIX RDW IF RECFM=V(B)
*
         LA    R7,4(,R7)     RDW LENGTH INCLUDES LENGTH OF RDW
         STH   R7,ORDW
         SPACE 1
*   PROCESS LINE NUMBER
*
LINENO   TM    FLAG1,NUMB+INT  NEED LINE NUMBER ?
         BZ    WRITE         NO - LINE COMPLETE
         TM    FLAG2,NIHNEW  NIH FORMAT ?
         BO    FULLWORD      YES - FULLWORD
         TM    FLAG2,X'80'   OSI-STYLE FULLWORD ?
         BO    FULLWORD      YES
         TM    FLAG1,WORD#   FULLWORD LINE # ?
         BNZ   FULLWORD      YES
         LA    R14,1000      SET SCALING FACTOR
         LH    R1,LINE       GET INTEGER PORTION
         MR    R0,R14        SCALE
         ICM   R0,OOII,LINE+2  GET DECIMAL
         CR    R0,R14        LEGAL ?
         BNL   NOTHALF       OOPS
         AR    R1,R0         GET TOTAL
         B     COMMWORD
FULLWORD L     R1,LINE       GET LINE NUMBER
COMMWORD CVD   R1,TEMP       PACK IT
         TM    FLAG1,INT     INTEGER NUMBER ?
         BNZ   MAKEINT       YES
         MVC   LINE#-1(9),=X'40202021204B202020'  MAKE EDIT MASK
         ED    LINE#-1(9),TEMP+4  EDIT WITH LEADING BLANKS
         B     MAKEDONE
MAKEINT  UNPK  LINE#,TEMP
         OI    LINE#+L'LINE#-1,C'0'  MAKE GOOD ZONE
MAKEDONE TM    FLAG1,LEFT    LEFT-JUSTIFIED LINE NUMBER?
         BZ    MAKERITE      NO; APPEND
         MVC   OBUF(8),LINE#  PREPEND
         B     MAKEORDW      FIX LENGTH
MAKERITE LA    R15,ORDW      GET OUTPUT BUFFER
         AH    R15,ORDW      PLUS LENGTH TO DATE
         MVC   0(8,R15),LINE#  APPEND LINE NUMBER
MAKEORDW LH    R15,ORDW
         LA    R15,8(,R15)   ADJUST FOR LINE NUMBER LENGTH
         STH   R15,ORDW      SET IT BACK
         B     WRITE         GO TO WRITE RECORD
         SPACE 2
*---------------------------------------------------------------------*
*   NOT WYLBUR FORMAT - LET QSAM DEBLOCK; STRIP RDW, ETC.             *
*---------------------------------------------------------------------*
SIMPLE   GET   MYDCB         GET A RECORD
         TM    FLAG1,SYNADF  SUCCESSFUL?
         BO    INERR         YOO BAD
         LR    R0,R1         COPY THE ADDRESS
         TM    INPRECFM,DCBRECU  RECFM=U OR D ?
         BNM   SIMPLEX       YES; USE DCB LENGTH
         TM    INPRECFM,DCBRECF  RECFM=F ?
         BNZ   SIMPLEX       YES; USE DCB LENGTH
         ICM   R1,OOII,0(R1)  GET RDW LENGTH
         N     R1,=X'0000FFFF'  CLEAN IT
         AH    R0,=H'4'      ADJUST START ADDRESS
         SH    R1,=H'4'      ADJUST LENGTH
         BNP   SIMPLE        SKIP NULL RECORD
         B     WRITECOM      ELSE WRITE R0/R1
SIMPLEX  LH    R1,DCBLRECL-IHADCB+MYDCB  GET LENGTH OF CURRENT RECORD
         B     WRITECOM      AND WRITE IT
         SPACE 1
WRITE    LA    R0,OBUF       POINT TO OUTPUT BLOCK
         LH    R1,ORDW       GET RDW LENGTH
         SH    R1,=H'4'      ADJUST LENGTH
         MVI   LINEOUT,0     CLEAR CC CHAR
         STM   R2,R5,RESTREGS  SAVE OTHERS
         ST    R9,DONECNT    SAVE FOR NEXT RECORD
WRITECOM L     R3,RPLDACB    LOAD FIXED RECORD LENGTH
         LH    R3,ACBLRECL-IFGACB(,R3)  FROM ACB
         L     R2,RPLAREA    GET USER'S RETURN BUFFER
         TM    OUTRECFM,DCBRECV  OUTPUT RECFM=V?
         BZ    WRITENOV      NO
         LR    R3,R1
         MIN   R3,RPLBUFL    TRUNCATE AS NECESSARY
WRITENOV ST    R3,RPLRLEN    RETURN LENGTH
         ICM   R1,IOOO,=C' '  BLANK PADDING
         MVCL  R2,R0         MOVE TO USER'S AREA
COMEXIT  LR    R1,R6         COPY RPL ADDRESS
         L     R15,=V(GPSMEXIT)  GET INTERFACE
         L     R13,4(,R13)   RESTORE SAVE
         BR    R15           RETURN FUNNY
         SPACE 2
*   SYNAD EXIT
*
SYNAD    OI    FLAG1,SYNADF  I'M TOO LAZY FOR SYNADAF
         BR    R14
         SPACE 1
INERR    LA    R14,L'SYNADMSG-1
         LA    R15,SYNADMSG
         B     ERRMSG
         SPACE 1
ERRMSG   MVC   RPLFDBK,=AL1(RPLLOGER,0,RPLINACC)
         B     COMEXIT
         SPACE 1
DSEND    MVC   RPLFDBK,=AL1(RPLLOGER,0,RPLEODER)
         B     COMEXIT
         SPACE 1
BADIO    LA    R14,L'UNSUPIO-1
         LA    R15,UNSUPIO
         B     ERRMSG
         SPACE 1
NOTEDIT  TM    FLAG1,DEBUG   DEBUG OPTION ?
         BZ    *+8           NO
         EX    0,*           TAKE A DIVE AND DUMP
         LA    R14,L'EDITBAD-1
         LA    R15,EDITBAD
         B     ERRMSG
         SPACE 1
NOTHALF  TM    FLAG1,DEBUG   DEBUG OPTION ?
         BZ    *+8           NO
         EX    0,*           TAKE A DIVE AND DUMP
         LA    R14,L'HALFNOT-1
         LA    R15,HALFNOT
         B     ERRMSG
         SPACE 2
*   ERROR MESSAGES AND STUFF
*
UNSUPIO  DC    C'UNSUPPORTED REQUEST - ONLY ''GET'' ALLOWED'
SYNADMSG DC    C'ERROR READING INPUT DATA SET'
EDITBAD  DC    C'THE INPUT DATA SET IS NOT IN EDIT FORMAT'
HALFNOT  DC    C'LINE NUMBER IS NOT IN HALF-WORD FORMAT'
         SPACE 1
         LTORG ,
         EJECT ,
CRAVE    DSECT ,
RAVEINIT DS    CL(INITCLEN)
RAVESAVE DS    18A
TEMP     DS    D
LINE     DS    F
RESTREGS DS    5A
DONECNT  DS    F
TOTALCNT DS    F
         SERVDEFS ,          SERVICE AREA
         DS    C      1/2
LINE#    DS    CL8    2/2    LINE NUMBER WORK AREA
         SPACE 1
INPRECFM DS    X
OUTRECFM DS    X
         SPACE 1
FLAG1    DS    X
NUMB     EQU   X'80'           NUMBERED, NOT INTEGER
INT      EQU   X'40'           INTEGER
TSO      EQU   X'20'           V(B) FORMAT (E.G., CLIST)
LEFT     EQU   X'10'           LEFT-JUSTIFIED LINE #
WORD#    EQU   X'04'           FULL-WORD LINE #
DEBUG    EQU   X'02'           DEBUG - DUMP ON ERROR
SYNADF   EQU   X'01'           I/O ERROR
         SPACE 1
FLAG2    DS    X
NIHRAW   EQU   X'80'           UNCOMPRESSED TEXT LINE
NIHLEN16 EQU   X'40'           16-BIT LENGTH
NIHNOSPC EQU   X'20'           NO SPECIAL CONTROL CHARACTERS
NIHMARK  EQU   X'10'           LINE HAS BEEN CHANGED
NIHNEW   EQU   X'08'           NEW FORMAT
         SPACE 1
MYDCB    DS    0A,XL(PATDCBLN) INPUT DCB
ORDW     DS    0A,AL2(4+L'OBUF,0)  1/3
LINEOUT  EQU   *-1,1,C'C'      VIRTUALCC   2/3
OBUF     DS    CL500           NIH MAX BUFFER  3/3
         DS    CL8               PLUS LINE #   4/3
         SPACE 1
INOPL    OPEN  (MYDCB,(INPUT,REREAD)),MF=L
INEXLST  DC    X'05',AL3(@DCBEXIT)
         DC    X'80',AL3(I2LVL)
         SPACE 1
         PRINT &PRTMAC
I2LVL    DCBEXITD DSECT=NO,PREFIX=IX
         SPACE 1
RAVEND   EQU   *             END OF SAVE/WORK AREA
         EJECT ,
         PRINT &PRTSYS
         DCBD  DSORG=PS
         CVT   DSECT=YES,LIST=NO
         SPACE 1
GPSMPARM DSECT ,
GPSMMPRM DS    A             USER PARM POINTER
GPSMSSOB DS    A             SSOB
GPSMAMEP DS    A             MY WORK AREA ADDRESS
GPSMSAVA DS    A
GPSMDDN  DS    CL8
         SPACE 1
         IDARMRCD ,          RPL RETURN CODES
         SPACE 1
         IEFJSSOB DA
         SPACE 1
         IFGRPL ,
         SPACE 1
         IFGACB ,
         SPACE 1
         END   ,
