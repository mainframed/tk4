ROUTEPGM TITLE 'R O U T E P G M  ***  EDIT MACRO PRINT SUPPORT'
         PUNCH ' ORDER ROUTEPGM(P) '  MAKE DUMPS EASIER
***********************************************************************
*                                                                     *
* MODULE NAME = ROUTEPGM                                              *
*                                                                     *
* DESCRIPTIVE NAME = COPY EDIT DATA TO A QSAM DATA SET                *
*                                                                     *
* FUNCTION = THIS PGM CAN BE INVOKED IN AN EDIT MACRO TO COPY         *
*            THE DATA BEING EDITED TO A SEQUENTIAL DATA SET.          *
*            IT ALSO PROVIDES ADDITIONAL FUNCTIONS SPECIFIC TO        *
*            THE ROUTE EDIT MACRO.                                    *
*                                                                     *
* STATUS = R605                                                       *
*                                                                     *
* AUTHOR = GILBERT SAINT-FLOUR <GSF@POBOX.COM>                        *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = MVS/370, MVS/XA, MVS/ESA, OS/390                  *
*                   ISPF/PDF V2R3 OR ABOVE                            *
*                                                                     *
*    AUTHORIZATION = NONE                                             *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE, (TSO COMMAND PROCESSOR)                    *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 2K                                                 *
*                                                                     *
*    ATTRIBUTES = REENTERABLE, RMODE 24, AMODE 24,                    *
*                 PROBLEM STATE, KEY 8                                *
*                                                                     *
* OPERATION = SEE COMMENTS IN SOURCE CODE                             *
*                                                                     *
* SYNTAX = SEE BELOW                                                  *
*                                                                     *
*           PARM=(&DDNAME,&LINE1,&LINE2,&LINECT,&INITLINE)            *
*                                                                     *
*              &DDNAME       OUTPUT DDNAME                            *
*                            REQUIRED, MUST BE A VALID DDNAME         *
*              &LINE1        FIRST LINE (.ZF)                         *
*                            IF SPECIFIED, MUST BE A 6-DIGIT NUMBER   *
*              &LINE2        LAST LINE (.ZL)                          *
*                            IF SPECIFIED, MUST BE A 6-DIGIT NUMBER   *
*              &LINECT       LINE COUNT (60)                          *
*                            IF SPECIFIED, MUST BE A 3-DIGIT NUMBER   *
*              &INITLINE     LINES ALREADY WRITTEN ON 1ST PAGE        *
*                            IF SPECIFIED, MUST BE A 3-DIGIT NUMBER   *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
*   $603 MAKE MODULE REENTRANT                                        *
*   $604 CONVERT JESJCL FROM RECFM=M TO RECFM=A FOR SDSF 1.4          *
*   $605 ADD SUPPORT FOR RECFM=V AND RECFM=U                          *
*                                                                     *
***********************************************************************
ROUTEPGM CSECT ,
         SAVE  (14,12),,'GSF UTILITIES - ROUTEPGM R605'
         BALR  R11,0
         USING *,R11
         GETMAIN R,LV=DYNAML           GET DYNAMIC STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LM    R13,R1,8(R13)           A(DYNAM)
         USING DYNAM,R13
         MVC   DCB1(DCB1L),DCB1MOD     MOVE MODEL DCB
*---------------------------------------------------------------------*
*                                                                     *
*        PARSE PARM INTO WORKING-STORAGE FIELDS                       *
*                                                                     *
*---------------------------------------------------------------------*
         L     R15,=A(PARSE)           PARM PARSING RTNE
         BALR  R14,R15             <-- PARSE PARM
         DC    S(L'DCB1DDNAM,DCB1DDNAM) OUTPUT DDNAME
         DC    S(L'LINE1,LINE1)        FIRST LINE (.ZF)
         DC    S(L'LINE2,LINE2)        LAST LINE (.ZL)
         DC    S(L'LINECT,LINECT)      LINE COUNT (60)
         DC    S(L'INITLINE,INITLINE)  LINE ALREADY WRITTEN ON 1ST PAGE
*---------------------------------------------------------------------*
*                                                                     *
*        SET-UP CONNECTION WITH ISPF                                  *
*                                                                     *
*---------------------------------------------------------------------*
         LOAD  EP=ROUTEPGM             PIN MYSELF IN MEMORY
*
         LOAD  EP=ISPLINK              ISREDIT/ISPLINK
         ST    R0,ISPLINK@             SAVE THE ADDRESS
*
         LA    R1,=A($CONTROL,$ERRORS,$RETURN+VL)
         L     R15,ISPLINK@            PICK UP ISPF INTERFACE ADDRESS
         BALR  R14,R15                 CALL ISPLINK
*---------------------------------------------------------------------*
*                                                                     *
*        SET UP PARAMETERS                                            *
*                                                                     *
*---------------------------------------------------------------------*
PARM21   CLI   DCB1DDNAM,C' '          DDNAME SPECIFIED?
         LA    R15,12                  PRIME R15 WITH ERROR CODE
         BNH   EXIT15                  NO, QUIT
*
PARM22   PACK  DWD,LINE1               LINE 1?
         OI    DWD+7,X'0F'             PREVENT S0C7 IF NOT SPECIFIED
         CVB   R4,DWD                  LINE COUNTER (.ZF)
         LTR   R4,R4                   ANY VALUE SPECIFIED?
         BZ    PARM23                  NO, JUMP
         BCTR  R4,0                    YES, MAKE IT RELATIVE TO ZERO
*
PARM23   PACK  DWD,LINE2               LINE 2?
         OI    DWD+7,X'0F'             PREVENT S0C7 IF NOT SPECIFIED
         CVB   R5,DWD                  LAST LINE (.ZL)
         LTR   R5,R5                   ANY VALUE SPECIFIED?
         BNZ   PARM24                  YES, JUMP
         BCTR  R5,0                    NO, MAKE IT X'FFFFFFFF'
*
PARM24   PACK  DWD,LINECT              LINE COUNT
         OI    DWD+7,X'0F'             PREVENT S0C7 IF NOT SPECIFIED
         ZAP   LINECT,DWD              LAST COUNT
*
PARM25   PACK  DWD,INITLINE            INITIAL LINES
         OI    DWD+7,X'0F'             PREVENT S0C7 IF NOT SPECIFIED
         ZAP   INITLINE,DWD            INITIAL LINES
*---------------------------------------------------------------------*
*                                                                     *
*        OPEN THE OUTPUT DATA SET                                     *
*                                                                     *
*---------------------------------------------------------------------*
OPEN2    LA    R0,DCB1                 BUILD OPEN LIST
         ST    R0,OPENLIST             BUILD OPEN LIST
         MVI   OPENLIST,X'8F'          BUILD OPEN LIST
         OPEN  MF=(E,OPENLIST)         OPEN (DCB1,OUTPUT)
         LTR   R15,R15
         LA    R15,8                   OPEN FAILED
         BNZ   EXIT15
*---------------------------------------------------------------------*
*                                                                     *
*        ISPLINK VDEFINE (LINE) CHAR                                  *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R0,L'LINE-1             LENGTH
         ST    R0,LINE#LEN             LENGTH
         LA    R14,=C'VDEFINE'         FUNCTION
         LA    R15,=C'LINE '           NAME
         LA    R0,LINE+1               ADDRESS
         LA    R1,=C'CHAR'             TYPE
         LA    R2,LINE#LEN             LENGTH
         STM   R14,R2,SIXWORDS         BUILD PARM LIST
         OI    SIXWORDS+16,X'80'       MARK END OF LIST
         L     R15,ISPLINK@            PICK UP ISPF INTERFACE ADDRESS
         LA    R1,SIXWORDS             PARAM
         BALR  R14,R15                 CALL ISPLINK
         LTR   R15,R15
         LA    R15,1100(,R15)          ISPLINK FAILED
         BNZ   EXIT15
         MVC   COMMAND,=C'(LINE) = LINE 123456'
         MVI   JESJCL,0                INITIALISE SWITCHES
***********************************************************************
*                                                                     *
*        COPY THE DATA LINES TO THE OUTPUT DATA SET                   *
*                                                                     *
***********************************************************************
*LOOP
LOOP2    LA    R4,1(,R4)               NEXT LINE NUMBER
         CVD   R4,DWD                  &I
         OI    DWD+7,X'0F'             SUPPRESS SIGN
         UNPK  COMMAND+14(6),DWD       123456
         LA    R15,=C'ISREDIT '        COMMAND
         LA    R0,=F'20'               LENGTH
         LA    R1,COMMAND              COMMAND
         STM   R15,R1,SIXWORDS         BUILD PARM LIST
         OI    SIXWORDS+8,X'80'        MARK END OF LIST
         L     R15,ISPLINK@            ISPF INTERFACE
         LA    R1,SIXWORDS             PARAM
         BALR  R14,R15                 CALL ISPLINK
         CH    R15,=H'12'              INVALID LINE NUMBER
         BE    EXIT00                  QUIT
         LTR   R15,R15
         LA    R15,1200(,R15)          ISPLINK FAILED
         BNZ   EXIT15
*
         ZAP   LINECT,LINECT           PAGE SKIP REQUIRED?
         BZ    LOOP2JCL                NO, JUMP
         MVC   DWD(4),LINE+1           .SK COMMAND?
         OC    DWD(4),=C'    '         CONVERT TO UPPERCASE
         CLC   DWD(4),=C'.SK '          .SK COMMAND?
         BE    LOOP2SK                 YES, JUMP
         MVI   LINE,C' '               SINGLE SPACE
         CP    INITLINE,LINECT         END-OF-PAGE?
         BL    LOOP2P1                 NO, JUMP
         MVI   LINE,C'1'               NEW PAGE
         SP    INITLINE,INITLINE       RESET CTR
LOOP2P1  LA    R1,LINE                 LINE ADDRESS
         BAL   R14,PUTLINE          <- WRITE LINE
         AP    INITLINE,=P'1'          COUNT LINES
         B     LOOP2NXT                NEXT LINE
*
LOOP2SK  MVI   INITLINE,X'99'          FORCE NEW PAGE NEXT TIME
         B     LOOP2NXT                NEW PAGE
*
*        CHANGE X'09' TO C' ' IN JESJCL
*        FORCE NEW PAGE AT THE BEGINNING OF JESJCL AND JESYSMSG
*
LOOP2JCL TM    DCB1RECFM,DCBRECCA      RECFM=.A?
         BNO   LOOP2J99                NO, EXIT
         CLI   JESJCL,3                JCL PROCESSED ALREADY?
         BE    LOOP2J99                YES, EXIT
         CLI   LINE+1,X'09'            SINGLE SPACE?
         BNE   LOOP2J20                NO, JUMP
LOOP2J05 TM    JESJCL,1                JOB CARD PROCESSED ALREADY?
         BO    LOOP2J40                YES, JUMP
         CLC   =C' 1 //',LINE+1+8      IS THIS A JOB CARD?
         BNE   LOOP2J99                NO, EXIT
         OI    JESJCL,1                JOB CARD SEEN
         MVI   LINE+1,C'1'             NEW PAGE
         B     LOOP2J99                EXIT
LOOP2J20 TM    JESJCL,1                JOB CARD PROCESSED ALREADY?
         BZ    LOOP2J99                NO, EXIT
         OI    JESJCL,2                END OF JESJCL FILE
         CLI   LINE+1,X'40'            SINGLE SPACE?
         BNE   LOOP2J99                NO, EXIT
         MVI   LINE+1,C'1'             START OF SYSTEM MESSAGES
         B     LOOP2J99                EXIT
LOOP2J40 MVI   LINE+1,C' '             SINGLE SPACE (ASA)
LOOP2J99 EQU   *
*
LOOP2P2  LA    R1,LINE+1               LINE ADDRESS
         BAL   R14,PUTLINE          <- WRITE LINE
*
LOOP2NXT CLR   R4,R5                   LAST LINE REACHED?
         BL    LOOP2                   NOT YET, PROCESS NEXT LINE
*ENDLOOP
EXIT00   SLR   R15,R15                 RC=00
***********************************************************************
*                                                                     *
*        RETURN TO CALLER                                             *
*                                                                     *
***********************************************************************
EXIT15   LR    R2,R15                  SAVE RETURN CODE
         TM    DCB1OFLGS,DCBOFOPN      DCB OPEN?
         BZ    EXIT42                  NO, SKIP CLOSE
         CLOSE MF=(E,OPENLIST)         CLOSE DCB
         FREEPOOL DCB1                 FREE BUFFERS
*
EXIT42   LR    R1,R13                  A(DYNAM)
         L     R13,4(,R13)
         FREEMAIN R,LV=DYNAML,A=(1)    FREE DYNAMIC STORAGE
         LR    R15,R2                  PASS RETURN CODE
         RETURN (14,12),RC=(15)        GOBACK TO CALLER WITH RC IN R15
*---------------------------------------------------------------------*
*        WRITE A LINE (RECFM=F/V/U)                                   *
*---------------------------------------------------------------------*
PUTLINE  ST    R14,R14PUTL             SAVE RETURN ADDRESS
         TM    DCB1RECFM,DCBRECV       RECFM=F (NOT V, NOT U) ?
         BZ    PUTLINE8                YES, JUMP
*
*        IF RECFM=V/U, TRUNCATE TRAILING BLANKS
*
         LA    R15,LINE+L'LINE-1       LAST CHAR IN LINE
         LH    R0,=H'-1'               INCREMENT
*LOOP
PUTLINE4 CLI   0(R15),C' '             IS IT A SPACE?
         BNE   PUTLINE5                NO, EXIT
         BXH   R15,R0,PUTLINE4         PREV CHAR
*ENDLOOP
PUTLINE5 LA    R15,1(,R15)             FIRST BLANK
         SLR   R15,R1                  CALC LENGTH
         TM    DCB1RECFM,DCBRECU       RECFM=U?
         BO    PUTLINE7                YES, JUMP
         SH    R1,=H'4'                POINT AT RDW
         LA    R15,4(,R15)             ADD 4 BYTES FOR THE RDW
         SLL   R15,16                  MAKE LENGTH A RDW
         ST    R15,0(,R1)              STORE RDW
         B     PUTLINE8
*
PUTLINE7 STH   R15,DCB1LRECL           PASS LENGTH FOR RECFM=U
*
PUTLINE8 LR    R0,R1                   RECORD ADDRESS
         PUT   DCB1,(R0)               WRITE A FIXED-LENGTH RECORD
         L     R14,R14PUTL             LOAD RETURN ADDRESS
         BR    R14                     GOBACK
         DROP  ,
***********************************************************************
*                                                                     *
*        DATA                                                         *
*                                                                     *
***********************************************************************
DCB1MOD  DCB   DSORG=PS,MACRF=PM,DDNAME=ISREDIT,EXLST=EXL1
$CONTROL DC    C'CONTROL'              FUNCTION
$ERRORS  DC    C'ERRORS'               OPTION
$RETURN  DC    C'RETURN'               OPTION
VL       EQU   X'80000000'             END OF LIST INDICATOR
*
*        OPEN EXIT
*
*        1. SETS DEFAULT ATTRIBUTES: RECFM=FB,LRECL=80
*
*        2. SETS BLKSIZE=0 TO TAKE ADVANTAGE OF SYSTEM-DETERMINED
*           BLKSIZE FOR SPFTEMP% DATA SETS.
*
EXL1     DC    A(OPENEXIT+X'85000000')
         USING OPENEXIT,R15
         USING IHADCB,R1
OPENEXIT CLI   DCBRECFM,0              RECFM SPECIFIED?
         BNZ   OPENEX4                 YES, JUMP
         MVI   DCBRECFM,DCBRECF+DCBRECBR NO, RECFM=FB
OPENEX4  TM    DCBRECFM,DCBRECBR       RECFM=.B ?
         BZR   R14                     NO, EXIT
         XC    DCBBLKSI,DCBBLKSI       BLKSIZE=0
         ICM   R0,B'1100',DCBLRECL     LRECL > 0 ?
         BNZR  R14                     YES, EXIT
         MVI   DCBLRECL+1,80           NO, LRECL=80
         BR    R14
***********************************************************************
*                                                                     *
*        WORKING-STORAGE AREA                                         *
*                                                                     *
***********************************************************************
         DCBD  DSORG=PS                SYS1.MACLIB
DYNAM    DSECT ,
         DS    18F
ISPLINK@ DS    V(ISPLINK)
SIXWORDS DS    6F
R14PUTL  DS    A(R14)
LINE1    DS    Z'123456'               FIRST LINE (.ZF)
LINE2    DS    Z'123456'               LAST LINE (.ZL)
LINECT   DS    Z'123'                  LINE COUNT (60)
INITLINE DS    Z'123'                  LINE ALREADY WRITTEN ON 1ST PAGE
COMMAND  DS    C'(LINE) = LINE 123456'
JESJCL   DS    X                       JESJCL SWITCHES
LINE#LEN DS    A(L'LINE)               LENGTH OF LINE
LINE#RDW DS    Y(L'LINE,0)             RDW FOR RECFM=V
LINE     DS    CL256                   DATA LINE
DWD      DS    D
OPENLIST OPEN  (DCB1,OUTPUT),MF=L
DCB1     DCB   DSORG=PS,MACRF=PM,DDNAME=ISREDIT,EXLST=EXL1
DCB1L    EQU   *-DCB1
DCB1RECFM EQU  DCBRECFM-IHADCB+DCB1    RECFM
DCB1DDNAM EQU  DCBDDNAM-IHADCB+DCB1    DDNAME
DCB1OFLGS EQU  DCBOFLGS-IHADCB+DCB1    OPEN FLAGS
DCB1LRECL EQU  DCBLRECL-IHADCB+DCB1    LRECL
DYNAML   EQU   *-DYNAM
         DROP  ,
***********************************************************************
*                                                                     *
*        PARSE A COMMA-DELIMITED JCL PARM                             *
*                                                                     *
*        L     R15,=V(PARSE)                                          *
*        BALR  R14,R15                                                *
*        DC    S(L'PARM1,PARM1)        LENGTH,ADDR                    *
*        DC    S(L'PARM2,PARM2)        LENGTH,ADDR                    *
*                                                                     *
***********************************************************************
PARSE    CSECT ,
         SAVE  (14,12),,PARSE
         BALR  R11,0
         USING *,R11
**       L     R1,4(,R13)              CALLER'S SAVE AREA
**       L     R1,24(,R1)              R1 ON ENTRY
         L     R2,0(,R1)               JCL PARM
PARSEX40 EQU   *+1,1                   X'40'
         LA    R4,1(,R2)               START OR PARM - 1
         LH    R5,0(,R2)               LENGTH OF PARM
         ALR   R5,R4                   LAST BYTE OF PARM
*LOOP
PARS1    SLR   R0,R0                   R0 = 00000000
         ICM   R0,B'0011',2(R14)       R0 = 0000BDDD
         SRDL  R0,12(0)                R0 = 0000000B, R1= BBB.....
         SRL   R1,20(0)                R1 = 00000DDD DISPLACEMENT
         CLI   2(R14),R13*16           IS R13 THE BASE REG?
         BL    PARS1D                  NO, JUMP
         ALR   R1,R13                  ADD CALLER'S SAVE AREA ADDR
         B     PARS1E
PARS1D   LR    R15,R0                  R15= 0000000B BASE
         SLL   R15,2                   R15= 000000BB BASE * 4
         AL    R1,20(R13,R15)          ADD BASE REG VALUE TO DISPL
PARS1E   LR    R6,R1                   ADDR OF TARGET FIELD
         LH    R7,0(,R14)              LENGTH OF TARGET FIELD
*
         LA    R2,1(,R4)               FIRST BYTE OF CURRENT PARAMETER
*--LOOP
PARS2    LA    R4,1(,R4)               ,
         CLR   R4,R5                   END OF PARM REACHED?
         BH    PARS41                  YES, EXIT LOOP
         CLI   0(R4),C','
         BNE   PARS2
*--ENDLOOP
PARS41   LR    R3,R4                   POSITION OF ','
         SR    R3,R2                   LENGTH OF SOURCE PARAM
         ICM   R3,B'1000',PARSEX40     PADDING
         MVCL  R6,R2                   MOVE SOURCE TO TARGET
PARS44   LA    R14,2+2(,R14)           NEXT TARGET
         CLI   0(R14),0                IS THIS A FIELD DESCRIPTOR?
         BE    PARS1                   YES, PROCESS IT
*ENDLOOP
         RETURN (0,12),T
         PRINT NOGEN
         YREGS ,                       SYS1.MACLIB
         END   ,
