@FDR     TITLE '@ F D R R E A D  ***  SIMULATED DISK READ ROUTINE'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*        COPYRIGHT 1982  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*        COPYRIGHT 2013  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*   Maintenance:                                                      *
*  2013-08-13  GYP  Redid major sections; old version had errors and  *
*                   was debugged only for directory reads.            *
*                                                                     *
***********************************************************************
         EJECT ,
@FDRREAD START 0                       PRELIMINARY VERSION ADDED 82249
         SPACE 1
*---------------------------------------------------------------------*
*        THIS MODULE IS A SPECIAL INTERFACE FOR SUBROUTINES @OBTAINS  *
*        AND @VOLREAD. THE INTENTION IS TO PROVIDE A TRANSPARENT      *
*        INTERFACE TO DISK SERVICE ROUTINES (E.G. VTOC LIST) FOR      *
*        BACKUP TAPES WRITTEN BY FDR.                                 *
*                                                                     *
*        THE USER MUST SUPPLY A DD CARD FOR EACH VOLUME TO BE READ.   *
*        THE DDNAME IS TPVOLSER (OR TAVOLSER); ONE DD CARD PER        *
*        VOLUME DUMPED BY FDR (NORMAL DATASET DD CARD) - ONE OR       *
*        MORE TAPE VOLUMES. THE PROGRAM HAS ONLY BEEN DEBUGGED WITH   *
*        SINGLE-VOLUME TAPES.                                         *
*                                                                     *
*        ATTRIBUTES: RENT,REFR,REUS, AUTHORIZED                       *
*                                                                     *
*        CALLING SEQUENCE :                                           *
*                                                                     *
*        R0=0                          CLOSE/FREEMAIN                 *
*        R0=1                          TCLOSE (CLOSE/NO FREE)         *
*        R0=2     R1=>VOLSER           OPEN/GETMAIN                   *
*                          REQUIRES DD NAME 'TAVOLSER' OR 'TPVOLSER'  *
*        R0=3     R1=CCHHR TO BE READ  READ SPECIFIC BLOCK            *
*                    IF CCHHR NOT FOUND, SET CODE=4 AND RETURNS NEXT  *
*                    IF NO NEXT BLOCK, RETURNS CODE 12                *
*        R0=4     R1=CCHHR LAST READ  READ SUCCESSIVE BLOCK           *
*                    FOR CCHHR=0, RETURNS FORMAT4                     *
*        R0=5     R1=CCHH TO BE READ  READ ENTIRE TRACK               *
*                    IF CCHH NOT FOUND, SET CODE=4 AND RETURNS NEXT   *
*                    IF NO NEXT BLOCK, RETURNS CODE 12                *
*        R0=6     R1=CCHH LAST READ  READ SUCCESSIVE TRACK            *
*                    IF NO NEXT BLOCK, RETURNS CODE 12                *
*                                                                     *
*        RETURN CODE 0 - REQUEST COMPLETED                            *
*                    4 - BLOCK NOT READ; NEXT BLOCK RETURNED          *
*                    8 - I/O ERROR OR END OF TAPE                     *
*                   12 - PROCESSING ERROR                             *
*                   16 - OPEN ERROR, ETC.                             *
*        FOR 0/4 - R1 RETURNED POINTING TO COUNT/KEY/DATA BLOCK       *
*                                                                     *
*---------------------------------------------------------------------*
*    The tape is organized as follows:                                *
*    Block 1 : control header with VTOC address                       *
*    2 - m   : VTOC data; format 1 records only                       *
*    m+1 - n : track data, blocked as fits, with R0 data              *
*              0:1 - length of block                                  *
*              2:3 - length of track + 4                              *
*              4:x - data                                             *
*              next track image has 0 block length, then length + 4   *
*                                                                     *
*    n+1     : end control record                                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         PRINT &PRTSOR
         SPACE 2
         USING @FDRREAD,R15
         B     FDRREAD       SKIP ID
         DC    AL1(L'FDRRID)   LENGTH FOR SNAP
FDRRID   DC    C'@FDRREAD - &SYSDATE'
FDRREAD  BSM   R14,0         PRESERVE CALLER'S AMODE            GP99026
         STM   R14,R12,12(R13)                                  GP99026
         LR    R12,R15
         DROP  R15
         USING @FDRREAD,R12
         AM24  WORK=R15      OLD-FASHIONED                      GP99026
         SPACE 1
*        LOCATE OR ESTABLISH WORK AREA
*
         L     R8,CVTPTR     GET CVT
         L     R8,CVTTCBP-CVTMAP(,R8)  TCB POINTER
         L     R8,4(,R8)     CURRENT TCB
         ICM   R4,15,FDRRID+1  ID FIELD
         L     R7,TCBFSA-TCB(,R8)  POINT TO CHAIN HEAD
         LA    R7,0(,R7)     CLEAR HIGH BITS                    GP13225
SVCINITL ICM   R6,7,1(R7)    LAST ENTRY ON CHAIN ?
         BZ    SVCINGET      YES; GET A WORK AREA
         USING FSAWORK,R6    DECLARE IT
         CL    R4,FSAID      SAME ID ?
         BE    SVCHAVE       YES; USE IT
         LA    R7,0(,R6)     SWAP                               GP13225
         B     SVCINITL      TRY AGAIN
SVCINGET LA    R2,FSALEN     GET LENGTH
         CLM   R0,1,=X'02'   OPEN REQUEST ?
         BNE   SVCFAIL       NO; JUST RETURN
         GETMAIN R,LV=(R2)   GET SPACE FOR PERMANENT WORK AREA
         BXLE  R15,R15,SVCINITW  CLEAR IT
SVCFAIL  LM    R14,R12,12(R13)  ERROR IN PROCESSING OR ENVIRONMENT
         LA    R15,16        SET MAJOR ERROR
         SLR   R0,R0         INDICATE ENVIRONMENT (PGM ERROR)
         BSM   0,R14         RETURN                             GP99026
         DROP  R6
         USING FSAWORK,R7
SVCINITW MVC   FSALINK-FSAWORK(4,R1),FSALINK  CHAIN OLD AREA
         ST    R1,FSALINK    CHAIN THIS AHEAD OF OLD ONE
         DROP  R7
         USING FSAWORK,R6
         LR    R6,R1         COPY THIS ONE TO PERMANENT REGISTER
         LA    R14,4(,R1)    START TO CLEAR AFTER LINK FIELD
         LR    R15,R2        GET LENGTH
         SH    R15,=Y(4)     ADJUST LENGTH
         SLR   R0,R0
         SLR   R1,R1
         MVCL  R14,R0        CLEAR IT
         ST    R4,FSAID      SET ID OF THIS AREA (@SVC)
         ST    R2,FSASPLEN   SAVE GETMAIN LENGTH
         ST    R8,FSATCB     AND TCB
         LM    R0,R1,20(R13)   RELOAD ENTRY PARAMETERS
SVCHAVE  LR    R9,R13        COPY USER'S SAVE AREA ADDRESS
         LA    R13,SAVEAREA   AND ESTABLISH OURS
         USING SAVEAREA,R13
         DROP  R6            FSA HEADER NO LONGER ACCESSIBLE
         ST    R9,4(,R13)    MAKE BACK CHAIN
         ST    R13,8(,R9)      AND FORWARD CHAIN
         XC    RETCODE,RETCODE  CLEAR RETURN CODES              GP13225
         STM   R0,R1,CALLR0  SAVE PARMS FOR QUICK ACCESS
         LA    R7,0(,R1)     SAVE ENTRY PARM
         LA    R8,@FDRDCB    POINT TO INPUT DCB
         USING IHADCB,R8     DECLARE DCB MAPPING
         BIX   ERR=EXIT16,PFX=ENT,                                     *
               LOC=(CLOSE,CLOSE,OPEN,READ,READ,RACK,RACK)
         SPACE 1
EXIT16   MVI   RETCC,16      SET RETURN CODE 16
         B     EXITCLS       AND EXIT WITH ERROR
         SPACE 1
EXIT12   MVI   RETCC,12
EXITCLS  BAL   R10,CLOSET    CLOSE TAPE IF OPEN FAILED
         B     EXIT
         SPACE 1
EXIT8    MVI   RETCC,8       SET RETURN CODE 8
         SPACE 1
EXIT     LM    R15,R1,RETCODE  GET RETURN CODES
         L     R13,4(,R13)
         L     R14,12(,R13)  GET RETURN ADDRESS
         LM    R2,R12,28(R13)  RESTORE OTHERS
         BSM   0,R14         RETURN TO CALLER                   GP99026
         SPACE 1
EXIT4    CLI   CALLMODE,3    READ ENTRY ?
         BNE   EXIT          NO; SET RETURN TO 0
         MVI   RETCC,4       SET WARNING CODE
         B     EXIT          AND RETURN
         SPACE 2
*---------------------------------------------------------------------*
*   Close file, with or without storage release                       *
*---------------------------------------------------------------------*
*        ENTRY CODE 0 - CLOSE AND FREE EVERYTHING
*        MODE=0   FULL CLOSE AND FREEMAIN
*        MODE=1   CLOSE, BUT DO NOT FREEMAIN
         SPACE 1
ENTCLOSE XC    RETCODE,RETCODE  CLEAR RETURN VALUES             GP13225
         BAL   R10,CLOSER    CLOSE DCB
         MVI   FLAGS,0       RESET PROCESSING FLAG
         CLI   CALLMODE,0    FULL CLOSE ?
         BNE   EXIT          NO; RETAIN WORK AREA
         LM    R3,R4,GETMBUFA     SEE IF GETMAIN DONE
         LTR   R3,R3
         BZ    CLOSENF       NO
         LTR   R4,R4
         BZ    CLOSENF
         FREEMAIN R,A=(R3),LV=(R4)
CLOSENF  XC    GETMBUFA(8),GETMBUFA  CLEAR IT
         LR    R6,R13        GET SAVE AREA
         LA    R15,SAVEAREA-FSAWORK  GET HEADER LENGTH
         SR    R6,R15
         DROP  R13
         USING FSAWORK,R6    DECLARE FULL AREA
         LM    R2,R3,FSASPLEN  GET LENGTH AND TCB BACK
         L     R3,TCBFSA-TCB(,R3)  POINT TO CHAIN HEAD
CLOSFLP  CLM   R6,7,1(R3)    POINTER TO OUR AREA ?
         BE    CLOSEFNC      YES; UNCHAIN
         L     R3,0(,R3)     TRY NEXT ONE
         B     CLOSFLP
CLOSEFNC MVC   0(4,R3),FSALINK  UNCHAIN OURS
         L     R13,SAVEAREA+4  GET USER'S SAVE AREA ADDRESS
         FREEMAIN R,LV=(R2),A=(R6)  FREE OUR WORK SPACE
         LM    R14,R12,12(R13)  RELOAD USER'S REGISTERS
         SLR   R15,R15
         SLR   R0,R0         SET RETURN CODES
         BSM   0,R14         RETURN                             GP99026
         DROP  R6
         USING SAVEAREA,R13  RE-ESTABLISH WORK AREA
         SPACE 1
CLOSET   TM    FLAGS,FGOPEN  TAPE OPEN ?
         BNZR  R10           YES; RETURN WITHOUT CLOSE
CLOSER   TM    @FDRDCB+DCBOFLGS-IHADCB,DCBOFOPN  DCB OPEN ?
         BZ    CLOSENOP      NO
         CLOSE MF=(E,OPLST)  CLOSE IT
         XC    RECNUM,RECNUM                                    GP13225
CLOSENOP BR    R10           RETURN
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
ENTOPEN  LTR   R7,R7         VOLSER ADDRESS SUPPLIED ?
         BZ    EXIT16        NO; PARM ERROR
         XC    RETCODE,RETCODE  CLEAR RETURN VALUES             GP13225
         MVC   MODEFG,CALLR1  COPY AND SET MODE FLAGS
         TM    FLAGS,FGOPEN   ALREADY OPEN ?
         BZ    ENTOPENB      NO
         XC    REQCCHHR,REQCCHHR  SET FOR NEXT ADDRESS TO BE READ
         CLC   VOLSER,0(R7)  SAME VOLUME ?
         BE    READINIT      YES; REREAD FORMAT 4
         BAL   R10,CLOSER    CLOSE DCB
         MVI   FLAGS,0       RESET FLAG COMPLETELY
         SPACE 1
ENTOPENB MVC   @FDRDCB(PATDCBLN),PATDCB  MOVE PATTERN DCB
         LA    R1,@FDRDCB
         ST    R1,OPLST      MAKE OPEN LIST
         MVI   OPLST,X'90'   MAKE OPEN REREAD
         MVC   VOLSER,0(R7)  SAVE THE USER'S VOLUME SERIAL
         MVI   @DDNAME+1,C'P'  MAKE DDNAME TPvolser DEFAULT     GP13225
         DEVTYPE @DDNAME,DB  LOOK FOR TPVOLSER
         BXLE  R15,R15,ENTOPENT  CHECK FOR TAPE
         MVI   @DDNAME+1,C'A'  MAKE DDNAME TAvolser ALTERNATE
         DEVTYPE @DDNAME,DB  TRY AGAIN
         BXH   R15,R15,EXIT16  TOO BAD
ENTOPENT CLI   DB+2,UCB3TAPE    INPUT TAPE ?
         BNE   EXIT16        NO; TOO BAD
         MVC   DCBDDNAM-IHADCB+@FDRDCB(8),@DDNAME   SAVE DDNAME
         XC    RECNUM,RECNUM                                    GP13225
         OPEN  MF=(E,OPLST)  OPEN THE TAPE
         TM    DCBOFLGS,DCBOFOPN
         BZ    EXIT16        INDICATE THAT OPEN FAILED
         BAL   R9,FIXDEB     SET DEB FOR EXCP USE
         ICM   R0,7,GETMBUFA+1  PREVIOUSLY GOT STORAGE ?
         BNZ   ENTOPENG      YES; SKIP GETMAIN
         L     R2,=A(64*1024+8)   SET GETMAIN SIZE FOR 64K      GP13225
         GETMAIN R,LV=(R2)   GET STORAGE
         BXH   R15,R15,EXIT16  QUIT IF FAILED
         STM   R1,R2,GETMBUFA  SET ADDRESS AND LENGTH
         LR    R0,R1         COPY ADDRESS
         LR    R1,R2         COPY LENGTH
         SLR   R15,R15       CLEAR FROM LENGTH/INSERT BYTE
         MVCL  R0,R14        CLEAR BUFFER FOR SHORTER DUMPS
ENTOPENG LM    R6,R7,GETMBUFA  GET ADDRESS AND LENGTH BACK
         STCM  R6,7,READCCW+1  SET ADDRESS INTO READ CCW
         LR    R11,R6        GLOBAL ADDRESS
         MIN   R7,=X'0000FFFF'    DON'T EXCEED MAX LENGTH       GP13225
         STH   R7,READCCW+6  SET SIZE
         MVI   READCCW,2     MAKE READ CCW
         MVI   READCCW+4,X'20'   SILLY !
         MVI   REQCCHHR+5,44   DSCB KEY LENGTH                   87177
         MVI   REQCCHHR+7,96   DSCB DATA LENGTH                  87177
         LA    R1,IOB        GET IOB
         STCM  R1,7,DCBIOBAA  SET FOR DUMP FORMATTING
         LA    R1,ECB
         ST    R1,IOBECBPT
         ST    R8,IOBDCBPT   DCB POINTER
         LA    R1,1          POSITION INCREMENT
         STH   R1,IOBINCAM
         BAL   R9,PHYSREAD   READ A BLOCK
          B    EXIT16        QUIT IF ERROR OR EOF
         USING FDRSECT,R11   DECLARE INPUT BUFFER
         CLC   FDRID,IDFDR   IS LENGTH AS EXPECTED ?             89120
         BNE   EXIT16        NO; DISASTER
         CLC   FDRIDT+1(L'FDRIDT-1),IDFDRT+1  FDR TAPE ?         89120
         BNE   EXIT16        NO; DISASTER
         MVC   VTOCSTRT,FDRIVTOC       SAVE VTOC START ADDRESS  GP13225
         BAL   R9,PHYSREAD   READ SECOND BLOCK
          B    EXIT16        QUIT IF ERROR OR EOF
         LA    R1,2
         ST    R1,VTOCBLK1   SET (NOTE) BLOCK ADDRESS
         MVC   VTOCEND,DS4VTOCE+6      SAVE VTOC END ADRESS     GP13225
         MVC   VTOCEND+4(1),DS4DEVDT   DSCBs PER TRACK          GP13225
         MVC   CYLPPAK,DS4DEVSZ   SAVE MAX CYLINDERS            GP13225
         MVC   TRKPCYL,DS4DEVSZ+2   TRK/CYL                     GP13225
         OI    FLAGS,FGOPEN  SET OPEN
         MVC   REQCCHH,VTOCSTRT  SET FMT 4 ADDRESS              GP13225
         MVI   REQCCHHR+4,1  AND SET RECORD NUMBER              GP13225
         B     DSCBFUND      RETURN VTOC TO USER                GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   FIND THE BLOCK WITH REQUESTED (OR NEXT) CKD                       *
*---------------------------------------------------------------------*
ENTREAD  TM    FLAGS,FGOPEN  OPEN ?
         BZ    EXIT16        NO; MAJOR ERROR
         LTR   R7,R7         ANY DISK ADDRESS PASSED ?
         BZ    EXIT12        NO; ERROR
         MVC   REQCCHHR,0(R7)   COPY IT
READINIT L     R11,RECTRACK  GET TRACK ADDRESS BACK             GP13225
         L     R3,CURBLOCK   POINT TO CURRENT COUNT FIELD       GP13225
         BAL   R9,REOPEN     NEED TO RECYCLE?                   GP13225
         CLC   REQCCHHR,ZEROES  SPECIAL FMT4 VTOC REQUEST ?
         BNE   READNFM4      NO
         MVC   REQCCHH,VTOCSTRT  REPLACE BY FORMAT 4 ADDRESS
         MVI   REQCCHHR+4,1  USUAL VTOC POSITION IS RECORD 1    GP13225
READNFM4 CLC   REQCCHH,VTOCEND   REQUEST FOR VTOC/DSCB ?        GP13225
         BH    READDATA        NO                               GP13225
         CLC   REQCCHH,VTOCSTRT  VTOC RECORD ?                  GP13225
         BL    READDATA        NO                               GP13225
         OI    MODEFG,MFDSCB   VTOC REQUEST                     GP13225
         CLI   RECFIND,0     ARE WE IN DSCB AREA?               GP13225
         BE    DSCBBACK        NO; REPOSITION                   GP13225
         CLC   CURCCHHR,REQCCHHR  CURRENT HIGHER THAN REQUEST?  GP13225
         BH    *+8                  YES                         GP13225
         OI    MODEFG,MFBACK        NO; NO NEED TO BACKSPACE    GP13225
         CLI   CALLMODE,3    READ ENTRY ?
         BE    DSCBASIS        YES; USE SUPPLIED ADDRESS        GP13225
DSCBBUMP LA    R1,REQCCHHR                                      GP13225
         BAL   R14,UPREC     GET NEXT RECORD NUMBER             GP13225
DSCBASIS CLC   REQCCHHR+4(1),VTOCEND+4  VALID RECORD NUMBER ?   GP13225
         BL    DSCBTEST        YES; USE IT                      GP13225
         LA    R1,REQCCHHR                                      GP13225
         BAL   R14,UPBLK     SPACE TO NEXT TRACK                GP13225
         CLC   REQCCHH,VTOCEND    STILL IN VTOC ?               GP13225
         BH    EXIT8           NO; RETURN ERROR                 GP13225
DSCBTEST CLC   0(5,R3),REQCCHHR   AT RIGHT SPOT YET ?           GP13225
         BL    DSCBSKIP          NO; TRY NEXT                   GP13225
         BE    DSCBFUND      RETURN FOUND                       GP13225
         TM    MODEFG,MFBACK  IF WE BACKED UP BEFORE, RECORD    GP13225
         BNZ   DSCBHOLE         IS NOT PRESENT - RETURN HOLE    GP13225
DSCBBACK OI    MODEFG,MFBACK                                    GP13225
         CLC   0(4,R3),REQCCHHR   NEED SAME TRACK ?             GP13225
         BNE   DSCBPINT             NO; BACKSPACE               GP13225
         LA    R3,FDMR0      TRY SAME TRACK AGAIN               GP13225
         ST    R3,CURBLOCK      JUST                            GP13225
         MVC   CURCCHHR,0(R3)     IN CASE                       GP13225
         B     DSCBTEST      CHECK AGAIN                        GP13225
DSCBPINT BAL   R9,POINTVTC   SET FOR SECOND TAPE RECORD         GP13225
           B   EXIT12          BACKUP DIDN'T WORK               GP13225
         B     DSCBTEST      CHECK AGAIN                        GP13225
DSCBREAD BAL   R9,NEXTRACK   RESTART DSCB READ                  GP13225
           B   EXIT8           MAJOR ERROR ?                    GP13225
         CLI   RECFIND,1     IN VTOC ?                          GP13225
*NEXT*   BNE   DSCBHOLE        NO; RETURN DUMMY                 GP13225
         BE    DSCBTEST      CHECK AGAIN
         SPACE 1
DSCBHOLE LA    R3,REQCCHHR   **SOME VERSIONS OF FDR DON'T WRITE**
         B     DSCBFYND      **NULL VTOC RECORDS                GP13225
         SPACE 1
DSCBSKIP BAL   R14,RECLEN    GET LENGTH FROM THIS COUNT         GP13225
         AR    R3,R4         POSITION TO NEXT COUNT             GP13225
         ST    R3,CURBLOCK   POINT TO CURRENT COUNT FIELD       GP13225
         C     R3,ENDTRACK   HAVE ANOTHER ?                     GP13225
         BL    DSCBTEST        YES; TEST IT                     GP13225
         B     DSCBREAD                                         GP13225
DSCBFUND ST    R3,CURBLOCK   REMEMBER THE COUNT ADDRESS         GP13225
         MVC   CURCCHHR,0(R3)    AND THE COUNT FIELD            GP13225
DSCBFYND ST    R3,RETR1      RETURN COUNT ADDRESS TO USER IN R1
         BAL   R14,RECLEN    GET LENGTH FROM THIS COUNT         GP13225
         ST    R4,RETR0        AND LENGTH IN R0                 GP13225
         CLC   REQCCHHR,0(R3)  REQUESTED ADDRESS ?
         BE    EXIT          YES; RETURN 0
         B     EXIT4         ELSE RETURN 0 OR 4
         SPACE 1
READDATA CLI   CALLMODE,3    READ ENTRY ?                       GP13225
         BE    DATAASIS        YES; USE SUPPLIED ADDRESS        GP13225
DATABUMP LA    R1,REQCCHHR                                      GP13225
         BAL   R14,UPREC     GET NEXT RECORD NUMBER             GP13225
DATAASIS CLC   REQCCHH(2),CYLPPAK VALID CYLINDER NUMBER ?       GP13225
         BNL   EXIT12          NO; FAIL                         GP13225
         CLC   REQCCHH+2(2),TRKPCYL     TRACK NUMBER ?          GP13225
         BNL   EXIT12          NO; FAIL                         GP13225
DATAPOSD CLI   RECFIND,0     IN VTOC NOW ?                      GP13225
         BE    DATATEST        NO; LOCATE IN DATA AREA          GP13225
         BAL   R9,NEXTRACK   READ A BLOCK                       GP13225
          B    DATAVERR        CHECK ERROR                      GP13225
         B     DATAPOSD      STILL IN VTOC ?                    GP13225
DATAVERR TM    DCBOFLGS,DCBOFOPN  READ PAST EOF ?               GP13225
         BNZ   EXIT12        NO; SOME OTHER ERROR               GP13225
         BAL   R9,REOPEN     FIX IT UP                          GP13225
         B     DATAPOSD        AND STRAT AGAIN                  GP13225
DATATEST L     R3,CURBLOCK   RELOAD BLOCK POINTER               GP13225
         CLC   0(5,R3),REQCCHHR   IN CURRENT BLOCK ?            GP13225
         BH    DATABACK        DEFINITELY NOT                   GP13225
         BE    DATAFUND      GET OUT IF MATCH                   GP13225
DATANEXT BAL   R14,RECLEN    GET LENGTH FROM THIS COUNT         GP13225
         AR    R3,R4         POSITION TO NEXT COUNT             GP13225
         C     R3,ENDTRACK   HAVE ANOTHER ?                     GP13225
         BNL   DATABLOK        NO; GET ANOTHER BLOCK            GP13225
         CLC   REQCCHHR,0(R3)  CCHHR IN THIS SEGMENT ?          GP13225
         BNL   DATAFUND      EQUAL - RETURN FOUND/LOW - NEXT RECORD
         BXLE  R3,R4,DATANEXT  TRY AGAIN                        GP13225
         OI    MODEFG,MFBSP2   SHOW READ ISSUED                 GP13225
         B     DATABLOK                                         GP13225
DATABACK TM    MODEFG,MFBSP1+MFBSP2  SEE-SAW ?
         BO    DATAFUND      YES; ACCEPT FIRST BLOCK
         LA    R1,BSRCCW     BACKSPACE ONE BLOCK                GP13230
         BAL   R14,GOEXCP                                       GP13230
         LA    R1,BSRCCW     BACKSPACE ONE BLOCK                GP13230
         BAL   R14,GOEXCP                                       GP13230
         INC   RECNUM,INC=-2      FIX RECORD COUNT              GP13225
         OI    MODEFG,MFBSP1   SHOW BACKSPACED
         BAL   R9,PHYSREAD   READ A BLOCK                       GP13225
          B    EXIT8         NOT FOUND                          GP13225
         B     DATAPOSD      SEE IF WE BACKED INTO VTOC         GP13225
DATABLOK BAL   R9,NEXTRACK   READ A BLOCK                       GP13225
          B    EXIT8         NOT FOUND
         B     DATAPOSD      SEE IF WE BACKED INTO VTOC         GP13225
DATAFUND ST    R3,RETR1      RETURN COUNT ADDRESS TO USER IN R1 GP13225
         BAL   R14,RECLEN    GET LENGTH FROM THIS COUNT         GP13225
         ST    R4,RETR0        AND LENGTH IN R0                 GP13225
         CLC   REQCCHHR,0(R3)  REQUESTED ADDRESS ?              GP13225
         BE    EXIT          YES; RETURN 0                      GP13225
         B     EXIT4         ELSE RETURN 0 OR 4                 GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   RETURN ENTIRE TRACK IMAGE - LENGTH IN R0, ADDRESS IN R1           *
*---------------------------------------------------------------------*
ENTRACK  TM    FLAGS,FGOPEN  OPEN ?                             GP13225
         BZ    EXIT16        NO; MAJOR ERROR                    GP13225
         LTR   R7,R7         ANY DISK ADDRESS PASSED ?          GP13225
         BZ    EXIT12        NO; ERROR                          GP13225
         MVC   TRKCCHH,0(R7)   COPY IT                          GP13225
ENTRACKI L     R11,RECTRACK  GET TRACK ADDRESS BACK             GP13225
         LA    R3,FDMR0      POINT TO FIRST COUNT               GP13225
         BAL   R9,REOPEN                                        GP13225
RACKNCLS CLI   CALLMODE,5    TRACK ENTRY ?                      GP13225
         BE    RACKNFMT      YES                                GP13225
         LA    R1,TRKCCHHR                                      GP13225
         BAL   R14,UPCCHH    CALCULATE NEXT TRACK ADDRESS       GP13225
RACKNFMT CLI   RECFIND,0     IN DATA SECTION ?                  GP13225
         BE    RACKNNXT        YES; PROCEED                     GP13225
         BAL   R9,PHYSREAD   READ A TRACK PAST VTOC             GP13225
          B    EXIT8         CHECK ERROR                        GP13225
         B     RACKNFMT      LOOK AGAIN                         GP13225
         SPACE 1                                                GP13225
RACKNNXT CLC   0(4,R3),TRKCCHH    REQUESTED TRACK ?             GP13225
         BE    RACKFUND      YES; RETURN IT                     GP13225
         BH    RACKFIND      NO                                 GP13225
         BAL   R9,NEXTRACK   READ A BLOCK                       GP13225
          B    EXIT8         CHECK ERROR                        GP13225
         B     RACKNNXT      LOOK AGAIN                         GP13225
RACKFIND CLC   0(4,R3),TRKCCHH  IN CURRENT BLOCK ?              GP13225
         BH    RACKBACK      DEFINITELY NOT                     GP13225
         BL    RACKAHED                                         GP13225
         B     RACKFUND      EQUAL - RETURN FOUND/LOW - NEXT RECORD
RACKBACK TM    MODEFG,MFBSP1+MFBSP2  SEE-SAW ?                  GP13225
         BO    RACKFUND      YES; ACCEPT FIRST BLOCK            GP13225
*  LATER IMPROVED BY USING BSF IF TOO LARGE A DIFFERENCE ?
*
         LA    R1,BSRCCW     BACKSPACE ONE BLOCK                GP13230
         BAL   R14,GOEXCP                                       GP13230
         LA    R1,BSRCCW     BACKSPACE ONE BLOCK                GP13230
         BAL   R14,GOEXCP                                       GP13230
         INC   RECNUM,INC=-2                                    GP13225
         OI    MODEFG,MFBSP1   SHOW BACKSPACED                  GP13225
         BAL   R9,PHYSREAD   READ A BLOCK                       GP13225
          B    EXIT8         NOT FOUND                          GP13225
         B     RACKNFMT      TRY THIS ONE                       GP13225
RACKAHED BAL   R9,NEXTRACK   READ A BLOCK                       GP13225
          B    EXIT8         NOT FOUND                          GP13225
         B     RACKFIND      TRY THIS ONE                       GP13225
RACKFUND LM    R3,R4,RECSIZE GET LENGTH AND ADDRESS OF TRACK    GP13225
         SH    R3,=H'4'      ADJUST FOR LENGTH OVERHEAD         GP13225
         AH    R4,=H'4'      ADJUST START                       GP13225
         STM   R3,R4,RETR0   NOTE R0-LEN, R1-ADDRESS            GP13225
         ST    R4,CURBLOCK                                      GP13225
         MVC   CURCCHHR,0(R4)                                   GP13225
         CLC   TRKCCHH,0(R4)  REQUESTED ADDRESS ?               GP13225
         BE    EXIT          YES; RETURN 0                      GP13225
         B     EXIT4         ELSE RETURN 0 OR 4                 GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   POSITION TO THE NEXT TRACK (SEGMENT) IN THE CURRENT BUFFER        *
*---------------------------------------------------------------------*
NEXTRACK LM    R14,R1,BEGTRACK    GET TRACK ADDR/SIZE/LEN/ADDR  GP13225
         AR    R1,R0         POINT TO NEXT TRACK IMAGE          GP13225
         C     R1,ENDTRACK   AT OR PAST BUFFER END ?            GP13225
         BNL   PHYSREAD        YES; NEED A NEW READ             GP13225
         ICM   R0,3,2(R1)    GET LENGTH OF THIS TRACK           GP13225
         STM   R14,R1,BEGTRACK    UPDATE                        GP13225
         AR    R0,R1                                            GP13225
         ST    R0,ENDBLOCK                                      GP13225
         LR    R11,R1        UPDATE TRACK ADDRESS               GP13225
         LA    R3,FDMR0      SET FIRST COUNT FIELD              GP13225
         ST    R3,CURBLOCK     AS CURRENT                       GP13225
         B     4(,R9)        TAKE GOOD RETURN                   GP13225
         SPACE 1
*---------------------------------------------------------------------*
*   READ A TAPE RECORD, AND SET POINTERS AND LENGTHS                  *
*---------------------------------------------------------------------*
PHYSREAD MVI   ECB,0         JUST IN CASE
         LA    R1,READCCW
         BAL   R14,GOEXCP                                       GP13230
         BE    READLEN         7F COMPLETION;  GET LENGTH       GP13230
         CLI   ECB,X'41'     END-FILE ?
         BNE   READBAD       NO
         TM    IOBCSW+3,1    EOF ? (UNIT EXCEPTION)
         BZ    READBAD       NO; OTHER ERROR
         L     R0,DCBBLKCT   GET CURRENT BLOCK COUNT
         BCTR  R0,0          SUBTRACT FOR TAPEMARK
         ST    R0,DCBBLKCT
         OI    DCBOFLGS,DCBOFTM  POSITIONED AFTER TAPEMARK
         FEOV  (R8),REWIND   GET NEXT VOLUME OR GO TO EOJ
         NI    DCBOFLGS,255-DCBOFTM  RESET TM JUST IN CASE
         B     PHYSREAD      READ NEXT VOLUME
         SPACE 1
READBAD  LA    R2,SYNADTXT   NO R13 WITHIN SYNAD CODE
         SYNADAF ACSMETH=EXCP,PARM1=IOB  GET SYNAD MSG
         MVC   0(L'SYNADTXT,R2),68(R1)
         SYNADRLS ,
         MVI   ERRWTO+1,L'SYNADTXT+4  SET WTO LENGTH
         WTO   MF=(E,ERRWTO) PRINT ERROR MESSAGE
         BR    R9            RETURN (+0) WITH ERROR
READEOJ  DS    0H            NOT FINISHED YET
*        NI    DCBOFLGS,255-DCBOFTM  JUST IN CASE
*        BSP   @FDRDCB       AND BACKSPACE OVER TAPE MARK
         CLOSE (,REWIND),MF=(E,OPLST)  REWIND
         MVI   OPLST,X'90'   RESET OPEN,REREAD
         XC    RECNUM,RECNUM                                    GP13225
         BR    R9
         SPACE 1
READLEN  LA    R1,READCCW+8  EXPECTED COMPLETION
         CLM   R1,7,IOBCSW   IS IT ?
         BNE   READBAD       NO; ERROR
         SLR   R3,R3
         SLR   R2,R2
         ICM   R3,3,READCCW+6  GET READ LENGTH
         ICM   R2,3,IOBCSW+5  GET RESIDUAL COUNT
         SR    R3,R2         GET LENGTH OF TEXT
         BZ    PHYSREAD      IGNORE ZERO LENGTH RECORDS
         INC   RECNUM,WORK=R2  BUMP RECORD COUNT                GP13225
         L     R14,GETMBUFA  GET RECORD ADDRESS                 GP13225
         LH    R15,0(,R14)   GET BLOCK LENGTH                   GP13225
         LH    R0,2(,R14)    GET TRACK LENGTH                   GP13225
         LA    R1,0(,R14)    GET TRACK ADDRESS W/HEADER         GP13225
         CLC   =C'DUMMYDSF',12(R14)                             GP13225
         BNE   READBK2         NO                               GP13225
         LA    R14,28(,R14)  SKIP FUNNY HEADER                  GP13225
         SH    R15,=H'28'                                       GP13225
         STH   R15,0(,R14)   SET BLOCK LENGTH                   GP13225
         SH    R0,=H'28'                                        GP13225
         STH   R0,2(,R14)    FIX TRACK LENGTH                   GP13225
         LA    R1,0(,R14)    GET TRACK ADDRESS W/HEADER         GP13225
READBK2  STM   R14,R1,BEGTRACK    UPDATE TRACK DATA             GP13225
         AR    R14,R15                                          GP13225
         ST    R14,ENDTRACK                                     GP13225
         AR    R0,R1                                            GP13225
         ST    R0,ENDBLOCK                                      GP13225
         LR    R11,R1        PUT LENGTH IN COMMON REGISTER      GP13225
         LA    R3,FDMR0      POINT TO COUNT FIELD
         MVC   CURCCHHR,0(R3)  COPY TEXT OF (PRESUMED) COUNT
         ST    R3,CURBLOCK   SAVE ADDRESS OF FIRST R1
         TM    FLAGS,FGOPEN  IN OPEN PROCESSING ?
         BZ    4(,R9)        YES; RETURN EXACTLY AS READ
         ICM   R0,3,FDMBLKL1  CHECK TEXT SIZE
         BZ    PHYSREAD      SKIP CONTROL RECORDS
         CLC   =C'TRACKTAB',FDMR1  CONTROL RECORD ?             GP13225
         BE    PHYSREAD      YES; SKIP
         B     4(,R9)        RETURN TO CALLER
         SPACE 2
*---------------------------------------------------------------------*
*   POSITION TO VTOC RECORD(S)                                        *
*---------------------------------------------------------------------*
POINTVTC MVI   ECB,0         JUST IN CASE                       GP13225
         MVC   RECNUM,=F'1'                                     GP13225
         MVC   DCBBLKCT,=F'1'                                   GP13225
         LA    R1,BSFCCW                                        GP13225
         BAL   R14,GOEXCP                                       GP13230
         BNE   ABENDUMP      HOW DOES BSF FAIL ?                GP13230
         LA    R1,READCCW                                       GP13225
         BAL   R14,GOEXCP    READ BLOCK 1                       GP13230
         B     PHYSREAD      THEN READ BLOCK 2 AND PROCESS      GP13225
ABENDUMP ABEND 001,DUMP                                         GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   GOEXCP - PERFORM EXCP;   R1 - FIRST CCW                           *
*---------------------------------------------------------------------*
GOEXCP   ST    R14,SAVEXCP   JUST IN CASE                       GP13230
         ST    R1,IOBSTART
         ST    R1,IOBRESTR   JUST IN CASE
         NI    DCBIFLGS,255-DCBIFEC  RESET ERROR BITS
         MVI   IOBFLAG1,X'40'  RESET RESTART BIT; COMMAND CHAIN
         LA    R1,IOB        GET IOB ADDRESS
         EXCP  (1)           READ A BLOCK
         WAIT  ECB=ECB
         L     R14,SAVEXCP   RESTORE RETURN                     GP13230
         CLI   ECB,X'7F'     SET CC FOR QUICK BRANCH            GP13230
         BR    R14             RETURN TO CALLER                 GP13230
         SPACE 2
*---------------------------------------------------------------------*
*   CALCULATE NEXT CCHHR     R1 - CCHHR FIELD ADDRESS                 *
*---------------------------------------------------------------------*
UPREC    SLR   R15,R15                                          GP13225
         IC    R15,4(,R1)         GET RECORD NUMBER             GP13225
         LA    R15,1(,R15)                                      GP13225
         STC   R15,4(,R1)         SET IT BACK                   GP13225
         SRA   R15,8              TEST IT                       GP13225
         BZR   R14                  LESS THAN 256               GP13225
UPBLK    MVI   4(R1),1            ELSE SET TO 1                 GP13225
UPCCHH   LA    R15,1                                            GP13225
         AH    R15,2(,R1)                                       GP13225
         STH   R15,2(,R1)         AND UPDATE TRACK ADDRESS      GP13225
         CLM   R15,3,TRKPCYL      VALID TRACK NUMBER ?          GP13225
         BLR   R14                  YES                         GP13225
         SR    R15,R15                                          GP13225
         ICM   R15,3,0(R1)                                      GP13225
         LA    R15,1(,R15)        BUMP CYLINDER                 GP13225
         SLL   R15,16             FINAGLE                       GP13225
         STCM  R15,15,0(R1)       SET NEW CYLINDER, BUT TRACK=0 GP13225
         BR    R14                  RETURN TO CALLER            GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   CALCULATE LENGTH OF RECORD; COUNT (R3), RETURN LENGTH IN R4       *
*---------------------------------------------------------------------*
RECLEN   SLR   R15,R15                                          GP13225
         SLR   R4,R4                                            GP13225
         IC    R15,5(,R3)    GET KEY LENGTH                     GP13225
         ICM   R4,3,6(R3)    GET DATA LENGTH                    GP13225
         LA    R4,8(R15,R4)  TOTAL LENGTH                       GP13225
         BR    R14                                              GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   CALCULATE LENGTH OF RECORD; COUNT (R3), RETURN LENGTH IN R4       *
*---------------------------------------------------------------------*
REOPEN   ST    R9,DB                                            GP13225
         NI    MODEFG,MFVTOC   RESET LOCAL FLAGS                GP13225
         TM    DCBOFLGS,DCBOFOPN  EOF ON PRIOR READ ?           GP13225
         BNZR  R9            NO                                 GP13225
         XC    RECNUM,RECNUM                                    GP13225
         OPEN  MF=(E,OPLST)  RE-OPEN                            GP13225
         BAL   R9,FIXDEB     CLOBBER DEB                        GP13225
         BAL   R9,PHYSREAD   SET TO FIRST (VTOC) BLOCK          GP13225
          B    EXIT8         SHOULD NOT HAPPEN ?                GP13225
         BAL   R9,PHYSREAD   SET TO FIRST (VTOC) BLOCK          GP13225
          B    EXIT8         SHOULD NOT HAPPEN ?                GP13225
         L     R9,DB                                            GP13225
         BR    R9            RETURN NORMALLY                    GP13225
         SPACE 2
*---------------------------------------------------------------------*
*   CLOBBER DCB PARAMETERS                                            *
*---------------------------------------------------------------------*
INEXIT   LR    R8,R1         COPY DCB ADDRESS
         MVI   DCBRECFM,DCBRECU   DEFAULT TO UNDEFINED
         OC    DCBBLKSI,DCBBLKSI  ANY BLOCKSIZE ?
         BNZ   *+10          YES
         MVC   DCBBLKSI,=X'7FF8'  USE DEFAULT                   GP13225
         MVC   DCBLRECL,DCBBLKSI   USE DEFAULT
         MVI   DCBOPTCD,DCBOPTZ  SET REDUCED ERROR RECOVERY
         BR    R14           RETURN TO OPEN
         SPACE 1
*---------------------------------------------------------------------*
*   DUMMY OUT ERROR RECOVERY AND OTHER APPENDAGES; ALLOW EXCP         *
*---------------------------------------------------------------------*
FIXDEB   MODESET KEY=ZERO    GET PRIVILEGED
         L     R3,CVTPTR     GET CVT
*        L     R1,CVTTCBP-CVTMAP(,R3)  GET TCB POINTER
*        L     R1,4(,R1)     GET CURRENT TCB
*        L     R1,TCBJSCB-TCB(,R1)  GET JSCB
*        USING IEZJSCB,R1
*        NI    JSCBSWT1,255-JSCBPASS  RESET INPUT PASSWORD BYPASS
         L     R3,CVTXAPG-CVTMAP(,R3)  GET APPENDAGE TABLE
         L     R1,DCBDEBAD   GET DEB
         USING DEBBASIC,R1
         AIF   (NOT &MVS).NOTMVS                                 82195
         OI    DEBFLGS1,DEBEXCPA  ALLOW EXCP                     81245
.NOTMVS  L     R1,DEBAPPAD   GET AVT                             81245
         DROP  R1
         MVC   DEBEOEA-DEBAVT(DEBXCEA+4-DEBAVT,R1),0(R3)  DUMMY OUT
         MODESET KEY=NZERO   RESET PRIVILEGE                     81245
         BR    R9            RETURN TO CALLER
         EJECT ,
*---------------------------------------------------------------------*
*        DATA AND WORK AREAS                                          *
*---------------------------------------------------------------------*
*
ZEROES   DC    D'0'          ZERO CONSTANT
PATDCB   DCB   DSORG=PS,DDNAME=TPVOLSER,MACRF=(RP),EXLST=1,            *
               NCP=1,EODAD=READEOJ
PATDDNM  DC    CL8'TPVOLSER'
PATOPLST DC    0F'0',X'80',AL3(0)
PATEXLST DC    0A(0),X'85',AL3(INEXIT)  DCB EXIT
PATDCBLN EQU   *-PATDCB
BSFCCW   CCW   X'2F',BSFCCW,X'60',1    BACKSPACE FILE; BLOCK 1  GP13225
         CCW   X'03',0,X'20',1           NOP + READ             GP13225
BSRCCW   CCW   X'27',BSRCCW,X'60',1    BACKSPACE RECORD         GP13230
         CCW   X'03',0,X'20',1           NOP                    GP13230
IDFDR    DC    A(24)         FDR TAPE HEADER
IDFDRT   DC    C'YTHATS ALL FOLKS'  FIRST BYTE VERSION DEPENDENT
         SPACE 2
FSAWORK  FSAWORK ,           RESIDENT WORK AREA
SAVEAREA DC    18F'0'
DB       DS    D             WORK AREA
CALLR0   DS    0F            USER'S CALL PARM
         DS    XL3             RESERVED
CALLMODE DS    X               FUNCTION REQUESTED
CALLR1   DS    A             PARAMETER ADDRESS
RETCODE  DS    0XL(3*4)      RETURN CODES (R15/R0/R1)           GP13225
RETR15   DS    0F,XL3        RETURN CODE
RETCC    DS    X
RETR0    DS    F
RETR1    DS    A
GETMBUFA DC    A(0)          1 OF 2
GETMBUFL DC    A(0)          2 OF 2
@FDRDCB  DCB   DSORG=PS,DDNAME=TPVOLSER,MACRF=(R),EXLST=INEXLST,       *
               NCP=1,EODAD=READEOJ
@DDNAME  DC    CL8'TPVOLSER'
VOLSER   EQU   @DDNAME+2,6,C'C'
OPLST    DC    0F'0',X'80',AL3(@FDRDCB)
INEXLST  DC    0A(0),X'85',AL3(INEXIT)  DCB EXIT
         SPACE 1
SAVEXCP  DC    A(0)          EXCP RETURN SAVER                  GP13230
ECB      DC    F'0'          I/O ECB
IOB      DS    0D
IOBFLAG1 DC    X'C0'         DATA/CMD CHAINING
IOBFLAG2 DC    X'00'
IOBSENS0 DC    X'00'
IOBSENS1 DC    X'00'
IOBECBPT DC    A(ECB)
IOBFL3   DC    X'00'
IOBCSW   DC    XL7'00'
IOBSTART DC    A(READCCW)
IOBDCBPT DC    A(@FDRDCB)    DCB
IOBRESTR DC    A(READCCW)
IOBINCAM DC    H'1'
IOBERRCT DC    H'0'
READCCW  CCW   X'02',0,X'20',X'FFFF' 3 READ BIG BLOCKS
ERRWTO   DC    F'0'      1/2 WTO
SYNADTXT DC    CL52' '   2/2 SYNAD MESSAGE
VTOCSTRT DC    XL5'1'        FORMAT 4 ADDRESS
VTOCEND  DC    XL5'0'        VTOC END ADDRESS
CYLPPAK  DC    H'0'          CYLINDERS PER PACK                 GP13225
TRKPCYL  DC    H'0'          TRACKS PER CYLINDER                 89121
VTOCBLK1 DC    F'0'          NOTE OF FIRST VTOC BLOCK (=2?)
CURBLOCK DC    F'0'          ADDRESS OF CURRENT COUNT FIELD
BEGTRACK DC    A(0)    1/4   ADDRESS OF CURRENT TRACK'S LENGTH  GP13225
BEGSIZE  DC    F'0'    2/4   SIZE OF PHYSICAL BLOCK READ        GP13225
RECSIZE  DC    F'0'    3/4   SIZE OF TRACK IMAGE                GP13225
RECTRACK DC    A(0)    4/4   ADDRESS OF CURRENT TRACK           GP13225
ENDTRACK DC    A(0)    5/4   ADDRESS OF CURRENT BLOCK END       GP13225
ENDBLOCK DC    A(0)    6/4   ADDRESS OF CURRENT TRACK END       GP13225
RECNUM   DC    F'0'          CURRENT BLOCK ADDRESS              GP13225
         SPACE 1
FLAGS    DC    X'00'         PROCESSING FLAGS
FGOPEN   EQU   X'80'           VTOC IS OPEN
MODEFG   DC    X'00'         VOLUME PROCESSING MODE
MFVTOC   EQU   X'80'           VTOC ONLY
MFBSP1   EQU   X'08'           TAPE BACKSPACED
MFBSP2   EQU   X'04'           AND READ TWICE
MFBACK   EQU   X'02'           DSCB READ BACKED UP              GP13225
MFDSCB   EQU   X'01'           REQUEST IS FOR A VTOC RECORD      87177
         DS    0H            FOR TRACK ARITHMETIC                87177
REQCCHHR DS    XL5     1/5   CCHHR OF BLOCK TO BE READ
REQCCHH  EQU   REQCCHHR,4,C'X'    CCHH ONLY                     GP13225
         DS    X,XL2   3/5   DUMMY DSCB 0 KEY/DATA LENGTH        87177
         DS    XL44    4/5             -"-                       87177
         DS    XL96    5/5             -"-                       87177
CURCCHHR DS    XL5           FIRST CCHHR IN CURRENT BLOCK
CURCCHH  EQU   CURCCHHR,4,C'X'    CCHH ONLY                     GP13225
         DS    0H
TRKCCHHR DS    XL5           CCHHR OF DESIRED TRACK (R0...)
TRKCCHH  EQU   TRKCCHHR,4,C'X'    CCHH ONLY                     GP13225
SAVEND   EQU   *             END OF GOTTEN WORK AREA
FSALEN   EQU   *-FSAWORK     LENGTH TO GETMAIN
         SPACE 1
FDRSECT  DSECT ,
FDRID    DS    A(24)         FIRST/LAST RECORD HEADER
FDRIDT   DS    C'YTHATS ALL FOLKS'
FDRIVTOC DS    XL4           CCHH OF VTOC (OR TRACK #?)         GP13225
FDRIDLN  EQU   *-FDRID
         SPACE 1
         ORG   FDRSECT
FDMBLKL1 DS    H             BLOCK LENGTH
FDMBLKL2 DS    H             TRACK LENGTH
FDMR0    DS    XL8           CKD OF R0, + KL, DL                GP13225
RECFIND  EQU   FDMR0+4         RECORD ID                        GP13225
FDMID    DC    CL8'DUMMYDSF'   ID
FDMR1    DC    XL5'0'        CKD                                GP13225
         DC    X'00'          KL                                GP13225
FDMKEY   DS    0X            START OF KEY/DATA
         ORG   FDMID                                            GP13225
         DS    XL44          FMT 4 KEY                          GP13225
         IECSDSL1 4          EXPAND FORMAT 4 DSCB               GP13225
         SPACE 1
         ORG   FDRSECT
         DS    256XL256      BIG BUFFER
         DS    256XL256      BIG BUFFER
         SPACE 1
         PRINT &PRTSYS                                           81294
CVT      DSECT ,
         CVT   DSECT=YES
         SPACE 1
         DCBD  DSORG=PS,DEVD=TA
         SPACE 1
         IEZDEB ,
         SPACE 1
         IKJTCB ,
         SPACE 1
         IEZJSCB ,
         SPACE 1
         IEFUCBOB ,
         SPACE 1
         REGEQU ,
         END
