SUBWTO   TITLE 'S U B W T O  ***  WRITE TO OPERATOR SERVICE'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
***********************************************************************
**                                                                   **
**  SUBWTO WRITES MESSAGES TO THE CONSOLE                            **
**    #OPMSG PREFIX,LEN,TYPE=INIT   (COMMON MESSAGE PREFIX (OPTIONAL)**
**    #OPMSG TEXT,LEN                                                **
**    #OPMSG 'LITERAL TEXT'                                          **
**    #OPMSG 'INSERT DSN=×,VOL=SER=×',LIST=(JFCBDNSM,44,JFCBVOLS,6)  **
**    #OPMSG 'INSERT DSN=×,VOLCNT=×',LIST=(JFCBDNSM,44,JFCBNVOL,IOP) **
**    #OPMSG *END                                                    **
**       (LENGTH MAY SPECIFY AN ADDRESS EXPRESSION THAT RESOLVES TO  **
**        A FOUR BYTE SPECIFICATION AS PRODUCED BY #FMT MF=L. THIS   **
**        SUPPORTS HEX, DECIMAL, AND INTEGER CONVERSION, E.G.:       **
**        IOP   #FMT JFCBNVOL,3,TYPE=AINT,MF=L                       **
**                                                                   **
***********************************************************************
**  MAINTENANCE:                                                     **
**  2012-11-17  GYP  CORRECTED ERRORS; LENGTHENED MSG AREA           **
***********************************************************************
**                                                                   **
**  ATTRIBUTES:  RENT, REFR, REUS, AM 31, RM 24                      **
**  EXTERNAL REFERENCE:  SUBSTRIP                                    **
**                                                                   **
**  USES SAVE AREA CHAIN FOR STORAGE; NEEDS CLEAN-UP                 **
**                                                                   **
***********************************************************************
*                                                                     *
*        COPYRIGHT 2003,2012  EXPERT SYSTEM PROGRAMMING               *
*                             176 OLD STAGE COACH ROAD                *
*                             BRADFORD, VT 05033-8844                 *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
         PRINT &PRTSOR
         EJECT ,
SUBWTO   START 0                                                GP03081
SUBWTO   AMODE 31
SUBWTO   RMODE ANY
         SPACE 1
         USING *,R15
         B     SUBWENT       SKIP ID
         DC    AL1(L'SUBWID)   LENGTH FOR SNAP
SUBWID   DC    C'SUBWTO - &SYSDATE'
SUBWENT  BSM   R14,0         PRESERVE CALLER'S AMODE            GP99026
         STM   R14,R12,12(R13)                                  GP99026
         LR    R12,R15
         DROP  R15
         USING SUBWTO,R12
         SPACE 1
*---------------------------------------------------------------------*
*   LOCATE OR ESTABLISH WORK AREA                                     *
*---------------------------------------------------------------------*
         LR    R10,R0        SAVE ENTRY PARAMETER
         LR    R11,R1        SAVE ENTRY PARAMETER
         L     R8,PSATOLD-PSA  GET MY TCB
         ICM   R4,15,SUBWID+3  ID FIELD 'WTO '
         L     R7,TCBFSA-TCB(,R8)  POINT TO CHAIN HEAD
         N     R7,=X'00FFFFFF'  CLEAN IT FOR AM31
         SR    R6,R6         CLEAR HIGH BYTE
WRKINITL ICM   R6,7,1(R7)    LAST ENTRY ON CHAIN ?
         BZ    WRKINGET      YES; GET A WORK AREA
         USING FSAWORK,R6    DECLARE IT
         CL    R4,FSAID      SAME ID ?
         BE    WRKHAVE       YES; USE IT
         LR    R7,R6         SWAP
         B     WRKINITL      TRY AGAIN
WRKINGET LH    R2,=AL2(FSALEN)  GET LENGTH
         SR    R15,R15       PRESET RETURN CODE
         LTR   R11,R11       REQUEST TO TERMINATE ?
         BNZ   WRKINOBT      YES; DON'T GET STORAGE - JUST RETURN
         LTR   R10,R10       REQUEST TO TERMINATE ?
         BZ    EXITCLOS      YES; DON'T GET STORAGE - JUST RETURN
WRKINOBT STORAGE OBTAIN,LENGTH=(R2),COND=YES,LOC=BELOW
         BXLE  R15,R15,WRKINITW  CLEAR IT
WRKFAIL  LM    R14,R12,12(R13)  ERROR IN PROCESSING OR ENVIRONMENT
         LA    R15,16        SET MAJOR ERROR
         SLR   R0,R0         INDICATE ENVIRONMENT (PGM ERROR)
         BSM   0,R14         RETURN                             GP99026
         SPACE 1
         DROP  R6
         USING FSAWORK,R7
WRKINITW MVC   FSALINK-FSAWORK(4,R1),FSALINK  CHAIN OLD AREA
         ST    R1,FSALINK    CHAIN THIS AHEAD OF OLD ONE
         DROP  R7
         USING FSAWORK,R6
         LR    R6,R1         COPY THIS ONE TO PERMANENT REGISTER
         LA    R14,4(,R1)    START TO CLEAR AFTER LINK FIELD
         LR    R15,R2        GET LENGTH
         SH    R15,=Y(4)     ADJUST LENGTH
         SLR   R0,R0
         SLR   R1,R1
         MVCL  R14,R0        CLEAR IT
         ST    R4,FSAID      SET ID OF THIS AREA (WTO )
         ST    R2,FSASPLEN   SAVE GETMAIN LENGTH
         ST    R8,FSATCB     AND TCB
         LA    R0,MSGTEXT
         ST    R0,@HEADER    INITIALIZE HEADER ADDRESS
         ST    R0,@TEXT      AND AS TEXT ADDRESS (NO HEADER)
         MVI   TRTINS+X'4F',X'4F' SOLID BAR                     GP12319
         MVI   TRTINS+X'6A',X'6A' SPLIT BAR                     GP12319
         SPACE 2
*---------------------------------------------------------------------*
*  WE HAVE OUR WORK AREA - CHECK FOR A TERMINATION REQUEST            *
*---------------------------------------------------------------------*
WRKHAVE  LTR   R10,R10       REQUEST TO TERMINATE ?
         BNZ   WRKWHAT       NO; SEE WHAT THERE IS TO DO
         LTR   R11,R11       REQUEST TO TERMINATE ?
         BNZ   WRKWHAT       NO; SEE WHAT THERE IS TO DO
         DELETEST EPLOC==CL8'@FORMATS'                          GP04118
         LM    R2,R3,FSASPLEN  GET LENGTH AND TCB BACK
         L     R3,TCBFSA-TCB(,R3)  POINT TO CHAIN HEAD
CLOSFLP  CLM   R6,7,1(R3)    POINTER TO OUR AREA ?
         BE    CLOSEFNC      YES; UNCHAIN
         ICM   R3,7,1(R3)    GET NEXT ENTRY
         BNZ   CLOSFLP       CHECK IT
         ABEND 222,DUMP      SHOULD NEVER HAPPEN ?
         SPACE 1
CLOSEFNC MVC   0(4,R3),FSALINK  UNCHAIN OURS
         LH    R0,=AL2(FSALEN)  GET LENGTH
         STORAGE RELEASE,ADDR=(R6),LENGTH=(0),COND=YES
         B     EXITCLOS      RETURN
*---------------------------------------------------------------------*
*  MISCELLANEOUS RETURNS                                              *
*---------------------------------------------------------------------*
         SPACE 1
         PUSH  USING
EXIT16   MVICC 16,RESULT=RETCODE   SET RETURN CODE 16
         B     EXIT          AND EXIT WITH ERROR
         SPACE 1
EXIT12   MVICC 12
         B     EXIT
         SPACE 1
EXIT8    MVICC 8             SET RETURN CODE 8
         B     EXIT
         SPACE 1
EXIT4    MVICC 4             SET RETURN CODE 4
         SPACE 1
EXIT     LM    R15,R1,RETCODE  GET RETURN CODES
         L     R13,4(,R13)
EXITCLOS L     R14,12(,R13)  GET RETURN ADDRESS
         LM    R2,R12,28(R13)  RESTORE OTHERS
         BSM   0,R14         RETURN TO CALLER                   GP99026
         POP   USING
         SPACE 2
*---------------------------------------------------------------------*
*  PRELIMINARIES COMPLETE - INITIALIZE FOR PROCESSING                 *
*---------------------------------------------------------------------*
WRKWHAT  LR    R9,R13        COPY USER'S SAVE AREA ADDRESS
         LA    R13,SAVEAREA   AND ESTABLISH OURS
         DROP  R6            FSA HEADER NO LONGER ACCESSIBLE
         USING SAVEAREA,R13
         ST    R9,4(,R13)    MAKE BACK CHAIN
         ST    R13,8(,R9)      AND FORWARD CHAIN
         XC    RETCODE(L'RETCODE+L'RSNCODE),RETCODE  CLEAR RC
         XC    WRKWTO(4),WRKWTO   JUST IN CASE                  GP12319
         LA    R1,WRKWTO                                        GP12319
         ST    R1,RETADDR
         SPACE 1
*---------------------------------------------------------------------*
*  CHECK ENTRY TYPE:                                                  *
*  R0 < 256   R1 = A(MSG TEXT)   NORMAL WTO MODE                      *
*  R0 < 256   R1 < 0  A(MSG LIST,INSERT1,INSERT2,...),VL   MSG INSERT *
*  R1 < 256   R0 = A(MSG TEXT)   ESTABLISH/CANCEL MSG PFX (INIT/NAME) *
*---------------------------------------------------------------------*
         CH    R10,=H'256'   MESSAGE MODE ?
         BL    HAVEMSG         YES
         CH    R11,=H'256'   INIT/NAME MODE ?
         BNL   EXIT16          NO; INVALID CALL
HAVEINIT LR    R1,R11        SET LENGTH
         LR    R0,R10        AND TEXT START
         CH    R1,=H'2'      NO-TEXT FLAG ON ?                  GP12319
         BL    *+4+2+2         NO                               GP12319
         SLR   R0,R0         SIGNAL NO TEXT ADDRESS             GP12319
         SLR   R1,R1           AND NO LENGTH                    GP12319
         NI    PROFLAGS,255-FGLIST                              GP12319
         OI    PROFLAGS,FGINIT  SET INIT MODE
         B     HAVECOM
HAVEMSG  LR    R0,R11        SET TEXT START
         LR    R1,R10        AND LENGTH
         MVC   @APPEND,@TEXT  SET FIRST APPEND ADDRESS
         NI    PROFLAGS,255-FGLIST-FGINIT
         N     R11,=X'7FFFFFFF' REMOVE LIST FLAG
         CR    R0,R11        LIST FORM ?
         BE    HAVECOM       NO
         OI    PROFLAGS,FGLIST  SIGNAL LIST
         EX    R10,EXODD      IS R0 (FLAG) ODD ?
         BZ    HAVEVEN       NO
         OI    PROFLAGS,FGNWTO  ODD - SUPPRESS WTO
HAVEVEN  LM    R0,R1,0(R11)  LOAD TEXT ADDRESS AND LENGTH PTR
         BAS   R14,GETLEN    GET TEXT LENGTH
         LTR   R3,R0         RESTORE ADDRESS
         BZ    EXIT4         ERROR
         LTR   R4,R1         END OF LIST ? (NO INSERTIONS???)
         BP    HAVEINS       NO; SET TO INSERT
         LA    R4,0(,R4)     LOAD LENGTH WITHOUT VL BIT
HAVEIEND SR    R11,R11       SIGNAL NO FURTHER INSERTS
         B     HAVELST
HAVEINS  LA    R11,8(,R11)   POINT TO FIRST INSERTION
HAVELST  LTR   R4,R4         ANY MORE TO DO ?
         BNP   HAVELEAN      NO; QUIT
         LA    R1,0(R4,R3)   SET STOP ADDRESS
         LR    R15,R2        SAVE R2                            GP12319
         SR    R2,R2         JUST IN CASE                       GP12319
         LR    R14,R4        COPY RESIDUAL LENGTH               GP12319
         BCTR  R14,0           LENGTH FOR EXECUTE               GP12319
         EX    R14,EXTRTBAR  LOOK FOR SPLITTER                  GP12319
         LR    R0,R3         COPY START POINT
         LA    R3,1(,R1)     START AFTER SPLIT CHARACTER
         SR    R1,R0         LENGTH OF THIS TEXTICLE
         SR    R4,R1         ADJUST RESIDUAL STRING ADDRESS
         BCTR  R4,0          ALLOW FOR SPLIT CHARACTER
         LTR   R2,R2         DID WE FIND ONE ?                  GP12319
         BZ    HAVESNGL        NO; JUST COPY REMAINING TEXT     GP12325
         LTR   R4,R4         ANY MORE TEXT ?                    GP12325
         BM    HAVESNGL        NO; BYPASS                       GP12325
         CLM   R2,1,0(R3)    DOUBLED STROKE ?                   GP12325
         BNE   HAVESNGL        NO                               GP12325
         LR    R2,R15        RESTORE R2                         GP12325
         L     R1,=X'80000001'   COPY ONE CHARACTER; NO STRIP   GP12322
         BAS   R14,ADDLEN    COPY STROKE                        GP12322
         B     HAVELST         AND CONTINUE                     GP12322
         SPACE 1
HAVESNGL LR    R2,R15        RESTORE R2 FIRST                   GP12319
         O     R1,=X'80000000'  NO STRIP
         BAS   R14,ADDLEN    ADD THIS TEXTICLE
         LTR   R11,R11       ANY INSERTION HERE ?
         BZ    HAVELST       NO; JUST DO NEXT TEXTICLE, IF ANY
         LM    R0,R1,0(R11)  GET NEXT ADDRESS/LENGTH SET
         N     R1,=X'7FFFFFFF' REMOVE LIST FLAG                 GP12319
         SR    R5,R5         CLEAR SPACE FLAG                   GP12319
         L     R14,0(,R1)    #FMT LIST ?                        GP12319
         CH    R14,=H'256'                                      GP12319
         BL    HAVEIGLN        NO                               GP12319
         TM    3(R1),X'20'   IS SPACE=Y SET ?                   GP12319
         BNO   HAVEIGLN        NO                               GP12319
         L     R5,=X'80000000'    INHIBIT STRIPPING OF INSERT   GP12319
HAVEIGLN O     R1,=X'80000000'    INHIBIT STRIPPING OF TEXT     GP12319
         LTR   R0,R0         END OF LIST ?
         BM    HAVELIN       YES
         TM    4(R11),X'80'  OTHER END ?                        GP12319
         BZ    HAVEING       NO; GET LENGTH
HAVELIN  SR    R11,R11       SIGNAL END
HAVEING  N     R0,=X'7FFFFFFF'  KILL VL BIT
         BZ    HAVEIND       NO ADDRESS - SKIP INSERTION
         BAS   R14,GETLEN    GET LENGTH FOR INSERTION
         OR    R1,R5         SET/INHIBIT STRIPPING              GP12319
         BAS   R14,ADDLEN    ADD TO MESSAGE
HAVEIND  LTR   R11,R11       END OF LIST ?
         BZ    HAVELST       YES; PROCESS NEXT TEXTICLE
         ICM   R0,15,4(R11)  LOOK AT NEXT LENGTH                GP12319
         BM    HAVEIEND        END OF LIST                      GP12319
         B     HAVEINS       NO; ADVANCE TO NEXT ADDRESS/LEN PAIR
EXODD    TM    =X'01',*-*    CHECK FOR ODD RECONTENTS
EXTRTBAR TRT   0(*-*,R3),TRTINS   LOOK FOR BARS                 GP12319
         SPACE 1
HAVELEAN LA    R0,MSGTEXT
         LA    R1,L'MSGTEXT
         STM   R0,R1,DB
         SUBCALL SUBSTRIP,(DB,DB+4,'T'),VL,MF=(E,CALLPARM)  CLEAN
         L     R0,DB+4
         AH    R0,=H'4'      FOR WTO PREFIX
         STH   R0,WRKWTO     SET WTO LEN
         B     HAVEWTO
         SPACE 1
HAVECOM  BAS   R14,GETLEN    GET MESSAGE LENGTH IF R1=0
         TM    PROFLAGS,FGINIT  INIT MODE ?
         BZ    HAVETXT       NO; DO MESSAGE
         LA    R14,MSGTEXT
         LA    R15,L'MSGTEXT
         MIN   R1,=H'32',TYPE=H  ARBITRARY MAX HEADER LENGTH
         LR    R2,R1         SAVE LENGTH
         ICM   R1,8,BLANKS   REQUEST BLANK FILL
         MVCL  R14,R0        MOVE HEADER AND BLANK FILL TEXT
         LA    R1,MSGTEXT(R2)  MOVE TO FIRST BYTE PAST PREFIX
         LTR   R2,R2         WAS HEADER CANCELLED ?
         BZ    HAVEHED
         MVI   0(R1),C':'    MAKE SEPARATOR
         LA    R1,2(,R1)     SKIP OVER HEADER AND SEPARATOR
         LA    R2,2(,R2)     SET NEW LENGTH
HAVEHED  ST    R1,@TEXT      NEW TEXT START
         ST    R2,#HEADER    SAVE HEADER LENGTH
         B     EXIT          TAKE NORMAL EXIT
         SPACE 1
HAVETXT  BAS   R14,ADDLEN    APPEND THIS TEXTICLE
         SPACE 1
HAVEWTO  TM    PROFLAGS,FGNWTO  INHIBIT WTO ?
         BNZ   EXIT          YES; JUST RETURN MESSAGE ADDRESS
HAVEWOT  WTO   MF=(E,WRKWTO)                                    GP05013
         B     EXIT          RETURN
         SPACE 2
*---------------------------------------------------------------------*
*  ADDLEN - R0-TEXT ADDRESS  R1-LENGTH                                *
*    IF R1>0, APPEND TEXT AT @APPEND ADDRESS; UPDATE @APPEND          *
*---------------------------------------------------------------------*
ADDLEN   LTR   R1,R1         ANY LENGTH SET ?
         BZR   R14           NO; JUST RETURN
         LTR   R0,R0         ANY ADDRESS SET ?
         BZR   R14           NO; JUST RETURN
         STM   R14,R3,SUBSAVE1  SAVE A BIT
*---------------------------------------------------------------------*
*  REMOVE TRAILING BLANKS FROM INSERTION STRING                       *
*---------------------------------------------------------------------*
         LTR   R3,R1         ANY TEXT ?
         BZ    ADDLENX       NO; IGNORE
         N     R1,=X'7FFFFFFF' REMOVE LIST FLAG                 GP12319
         CR    R3,R1         COMPARE
         BNE   ADDLENNS      SKIP IF LENGTH HAS VL BIT
         STM   R0,R1,DB      ANY TEXT ?
         EXTRN SUBSTRIP
         SUBCALL SUBSTRIP,(DB,DB+4,'T'),VL,MF=(E,CALLPARM)
         LM    R0,R1,DB      GET STRIPPED ADDRESS/LENGTH
         LTR   R1,R1         NULL STRING ?
         BNP   ADDLENX       YES; JUST GET OUT
         SPACE 1
*---------------------------------------------------------------------*
*  APPEND STRING TO END OF CURRENT STRING; TRUNCATE IF TOO LONG       *
*---------------------------------------------------------------------*
ADDLENNS L     R14,@APPEND   GET TEXT START
         LA    R15,L'MSGTEXT+MSGTEXT
         SR    R15,R14       NEW MAX FILL LENGTH
         BNP   ADDLENX       HUH ???                            GP04118
         LA    R2,0(R1,R14)  NEW END
         ST    R2,@APPEND
         LA    R3,MSGTEXT    GET TEXT START
         SR    R2,R3         NEW LENGTH
         MIN   R2,=Y(L'MSGTEXT),TYPE=H  NOT TOO LONG
         AH    R2,=H'4'      FOR WTO PREFIX
         STH   R2,WRKWTO     SET WTO LEN
         ICM   R1,8,BLANKS   REQUEST BLANK FILL
         MVCL  R14,R0        APPEND MESSAGE TEXT
         SPACE 1
ADDLENX  LM    R14,R3,SUBSAVE1  RESTORE
         BR    R14           RETURN
         SPACE 2
*---------------------------------------------------------------------*
*  GETLEN - R0-TEXT ADDRESS  R1-LENGTH                                *
*    WHEN R1=0, DERIVE LENGTH AND ADDRESS FROM TEXT:                  *
*      TEXT(1)<C' ' USE AS LENGTH (BCON)                              *
*      TEXT(1)=0 USE TEXT(2) AS LENGTH (HCON); IF TEXT(3)=0, VCON     *
*                                                                     *
*    WHEN R1>255, IT'S @FORMATS PARAMETER FOR DATA CONVERSION         *
*---------------------------------------------------------------------*
GETLEN   STM   R0,R15,SUBSAVE2  SAVE A BIT                      GP05013
         L     R2,=X'7FFFFF00'  MAKE ALL BUT VL+LEN FLAG        GP04118
         NR    R2,R1         IS 'LENGTH' A #FMT POINTER ?       GP04118
         BNZ   GETCONV       YES; NEED TO CONVERT               GP04118
         LTR   R1,R1         ANY LENGTH SET ?                   GP04118
         BNZ   GETLENX       YES; JUST RETURN                   GP04118
         LTR   R3,R0         ANY TEXT ?
         BZ    GETLENN       NO; IGNORE
         LA    R2,1          SET ADJUSTMENT FOR BCON
         CLI   0(R3),C' '    < 64 ?
         BH    GETLEN0       HIGH; CHECK FOR 0 TERMINATED
         ICM   R1,1,0(R3)    LOAD AND TEST IT
         BZ    GETLENH       TRY AS HCON
         AR    R1,R2         TRUE LENGTH
         AR    R0,R2         SKIP OVER LENGTH BYTE
         B     GETLENX
         SPACE 1
GETLENH  IC    R1,1(,R3)     GET HCON LENGTH
         LA    R2,2          SET ADDRESS ADJUST
         CLI   2(R3),0       POSSIBLE VCON ?
         BE    GETLENV       PERHAPS
         AR    R0,R2         SET TEXT START
         B     GETLENX
         SPACE 1
GETLENV  LA    R2,4
         SR    R1,R2         SET NEW LENGTH
         AR    R0,R2         UPDATE TEXT START
         B     GETLENX       RETURN
         SPACE 1
GETLEN0  LA    R1,L'MSGTEXT(,R3)   SET TEXT END + 1             GP03114
         SR    R0,R0
         SRST  R1,R3         SCAN FOR HEX 0                     GP03114
         BO    *-4           RESTART
         SR    R1,R3         SET NEW LENGTH                     GP03114
         LR    R0,R3         RESTORE ADDRESS                    GP03114
         B     GETLENX       GET BACK                           GP04118
         SPACE 1                                                GP04118
*---------------------------------------------------------------------*
*    INVOKE @FORMATS TO CONVERT ITEM                                  *
*---------------------------------------------------------------------*
GETCONV  LR    R2,R0         PRESERVE ADDRESS                   GP04118
         L     R3,0(,R1)     LOAD FORMATTING LENGTHS/OPTIONS    GP04118
         ICM   R15,15,@FORMATS  PREVIOUSLY LOADED ?             GP04118
         BNZ   GETCONVC      YES; CALL IT                       GP04118
         LOAD  EPLOC==CL8'@FORMATS'  LOAD IT                    GP04118
         ST    R0,@FORMATS   SAVE ADDRESS AND MODE              GP04118
         LR    R15,R0        MOVE TO DESTINATION                GP04118
GETCONVC LR    R1,R2         RESTORE R0 PARM SWAPPED            GP04118
         LR    R0,R3         RESTORE R1 PARM SWAPPED            GP04118
         BASR  R14,R15       INVOKE FORMATTER                   GP04118
         CH    R15,=H'4'     DID IT WORK ?                      GP04118
         BNH   GETLENX       YES                                GP04118
         LA    R0,=C'<FMT-ERR>'                                 GP04118
         LA    R1,9          OOPS                               GP04118
         B     GETLENX
         SPACE 1
GETLENN  SR    R1,R1         NO LENGTH - NO TEXT                GP12319
GETLENX  LM    R2,R14,SUBSAVE2+2*4  RETURN WITH NEW R0, R1      GP05013
         BR    R14                                              GP05013
         SPACE 1
BLANKS   DC    CL8' '
         PRINT &PRTSYS
         FSAWORK ,  1/N      DEFINE WORK AREA HEADER
         SPACE 1
SAVEAREA DS    18F           SAVE AREA
SUBSAVE1 DS    16F           SAVE AREA
SUBSAVE2 DS    16F           SAVE AREA
DB       DS    D             WORK WORD
@FORMATS DS    A             ADDRESS OF FORMATTING SERVICE      GP04118
RETCODE  DS    F    1/2      RETURN CODE
RSNCODE  DS    F    2/2      REASON CODE
RETADDR  DS    F    3/2      RETURN MESSAGE ADDRESS
CALLPARM DS    3AL4          SUBSTRIP CALL PARAMETER LIST
@HEADER  DS    A             ADDRESS OF PREFIX
#HEADER  DS    F             LENGTH OF PREFIX
@TEXT    DS    A             ADDRESS OF MESSAGE
@APPEND  DS    A             ADDRESS OF NEXT TEXTICLE
WRKWTO   DS    H,H           WTO LEN / ZEROES
MSGTEXT  DS    CL132  2/2    MESSAGE TEXT                       GP12322
WRKWTOL  EQU   *-WRKWTO
         DS    XL4           RESERVE FOR DESC/ROUT CODES
         SPACE 1
PROFLAGS DC    X'00'         PROCESSING FLAGS
FGINIT   EQU   X'80'           CALLED FOR INITIALIZATION
FGLIST   EQU   X'40'           CALLED WITH LIST
FGNWTO   EQU   X'01'           INHIBIT WTO
TRTINS   DC    256AL1(0)     PASS ALL                           GP12319
         TRENT TRTINS,4,X'4F',X'6A'    ACCEPT SOLID & SPLIT     GP12319
FSALEN   EQU   *-FSAWORK     GETMAIN SIZE
SAVEEND  EQU   *
         PRINT &PRTSYS
         IHAPSA ,
         CVT   DSECT=YES
         IHACDE ,
         IKJTCB ,
         YREGS ,
         END
