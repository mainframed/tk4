DTP2M    TITLE 'S U B P 2 M   **   DATE FORMATTING SUBROUTINE'
*   THIS SUBROUTINE PROVIDES DATE INFORMATION IN SEVERAL STYLES
*   INPUT R1 = PACKED DATE (00YYDDDS/01YYDDDS OR CCYYDDDS)
*            = 0 : USE CURRENT DATE
*
*   OUTPUT R15 = 0 IF INVALID DATA PASSED
*          R15 = HL2(YYYY)/HL1(MM)/HL1(DD)  YEAR/MONTH/DAY IN BINARY
*           R0 = YYYYMMDD YEAR/MONTH/DAY IN UNSIGNED HEX
*           R1 = ADDRESS OF EBCDIC CL8'YYYYMMDD'
*
SUBP2M   START 0
SUBP2M   AMODE ANY                                              GP00162
SUBP2M   RMODE ANY                                              GP00162
         STM   R14,R12,12(R13)
         LR    R12,R15       AND NEW BASE
         USING SUBP2M,R12
         LTR   R1,R1         DID USER SUPPLY A DATE?
         BNZ   STICKIT       YES; BUT IS IT VALID?
         TIME  TU            GET THE DATE, RAPIDLY
STICKIT  ST    R1,DB+4       STASH THE DATE
         CLI   DB+4,1        DID USER SUPPLY A CENTURY?
         BH    HAVECENT      YES
         AP    DB+4(4),=P'1900000'  ELSE ADD IT IN
HAVECENT MVO   DB2,DB+4(2)   ISOLATE THE YEAR                   GP99167
         XC    DB(6),DB      ISOLATE THE DAYS                   GP99167
         CVB   R1,DB         CONVERT DAYS TO BINARY
         CVB   R2,DB2        CONVERT YEAR TO BINARY             GP99167
         SLR   R0,R0         SET FOR NO LEAP DAY ADJUSTMENT
*  N.B.: THIS WORKS UNTIL 2099 ONLY                             GP99167
         EX    R2,EXISLEAP   TEST FOR MULTIPLE OF FOUR          GP99167
         BNZ   NOTALEAP      BRANCH IF NOT A LEAP YEAR
         CH    R1,=H'60'     IS THIS ON, BEFORE, OR AFTER LEAP DAY?
         BL    NOTALEAP      BEFORE; TREAT NORMALLY
         BH    ONELESS       AFTER; ADJUST DAY
         LA    R0,1          SET LEAP DAY ADJUSTMENT
ONELESS  BCTR  R1,0          ONE LESS TO FIX DAYS AFTER LEAP DAY
NOTALEAP LA    R4,DATETABL   GET TABLE OF CUMULATIVE DAYS
         LR    R5,R4         SAVE
FINDMON  CH    R1,2(,R4)     IN THIS MONTH?
         BNH   FOUNDMON      YES; PROCESS
         LA    R4,2(,R4)     INCREMENT
         B     FINDMON       AND TRY AGAIN
FOUNDMON SH    R1,0(,R4)     SUBTRACT DAYS IN PRIOR MONTHS
         AR    R1,R0         ADJUST 1 IF LEAP DAY
         LA    R4,2(,R4)     FINAGLE TO MAKE MONTH COME OUT RIGHT
         SR    R4,R5         GET OFFSET TO MONTH
         SRL   R4,1          GET MONTH (1-12)
*  WE NOW HAVE FULL YEAR IN R2, MONTH IN R4, AND DAY IN R1
         STCM  R2,3,16(R13)  BUILD YEAR IN BINARY IN R15
         STC   R4,16+2(,R13)   PLUS MONTH
         STC   R1,16+3(,R13)   PLUS DAY
         MH    R2,=H'100'    MULTIPLY YEAR BY 100
         AR    R2,R4         AND ADD IN THE MONTH
         MH    R2,=H'100'    SHIFT ONCE MORE
         AR    R2,R1         AND ADD DAY
         CVD   R2,DB         MAKE PACKED AND SIGNED
         MVC   OUTCHAR,=X'40212020202020202020'  MAKE SIGNIFICANT MASK
         ED    OUTCHAR,DB+3  MAKE DATE EBCDIC
         PACK  20(5,R13),OUTCHAR+2(9)  RETURN UNSIGNED HEX IN R0
         LA    R3,OUTCHAR+2  POINT TO TEXT
         ST    R3,24(,R13)   RETURN TEXT ADDRESS IN R1
EXEUNT   LM    R14,R12,12(R13)  RESTORE ALL REGISTERS
         BR    R14           RETURN TO CALLER
EXISLEAP TM    =X'03',*-*    MULTIPLE OF FOUR?                  GP99167
         SPACE 1
DB       DC    D'0'          DOUBLE-WORD WORK AREA
DB2      DC    0D'0',PL8'0'  DOUBLE-WORD WORK AREA              GP99167
OUTCHAR  DC    CL10' '       WORK AND RESULT AREA
*  TABLE OF DAYS IN PRIOR MONTH
DATETABL DC    H'0,31,59,90,120,151,181,212,243,273,304,334,365'
         PRINT NOGEN
         SPACE 1
         YREGS ,
         END   ,
