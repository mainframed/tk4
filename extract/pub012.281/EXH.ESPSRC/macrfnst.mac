MACR2    TITLE 'MACRO CROSS-REFERENCE SECONDARY MODULE'
MACRFNST CSECT ,
         SPACE 6
***  SECOND MACROREF MODULE WHICH CONTAINS TABLES OF OP-CODES
**       AND PERFORMS VARIOUS FUNCTIONS ON THOSE TABLES AS
*        REQUESTED BY THE MAIN MODULE.
         SPACE 4
***  PARAMETERS PASSED:
*
*     RZ CONTAINS THE FUNCTION CODE:
*        0     CHECK WHETHER 'OP-CODE' IS VALID OR INNER MACRO
*        4     DUMP INNER MACRO NAMES STORED IN TABLE
*        8     PROCESS THE 'OPCODES' PARAMETER LIST
*        12    RESET ALL OPCODES TO ORIGINAL STATE
*        16    DETERMINE IF OP-CODE IS VALID BEFORE VARIABLE SYMBOL
*              DEFINITIONS.
*        20    ENTER MACRO NAME IN TABLE & FLAG AS PROCESSED
*
*     R1 DEPENDS ON THE FUNCTION CODE:
*        RZ=:  R1=:
*        0     ADDR OF 'OP-CODE'
*        4     DCB ADDR FOR BLDL
*        8     ADDR OF OPCODES PARM LIST
*        12    UNDEFINED
*        16    ADDR OF 'OP-CODE'
*        20    ADDR OF MACRO NAME
*
*
*
*
***  RETURN CODE PASSED IN R15 DEPENDING ON FUNCTION:
*      FUNCT:  R15:
*        0     0 IF OP-CODE IS VALID AND CURRENTLY SET TO OPCODE STATUS
*              4 IF OPCODE IS SET TO INNER MACRO STATUS
*              8 IF INNER MACRO
*
*        4     0 IF NO MORE INNER MACRO NAMES IN TABLE
*              ADDR OF BLDL LIST FOR NEXT INNER MACRO NAME
*
*        8     0 IF ALL PARAMETERS WERE PROCESSED CORRECTLY
*              ADDR OF PARAMETER RECORD ERROR DETECTED
*
*        12    ALWAYS 0
*
*        16    0 IF OPCODE IS VALID BEFORE VAR SYM DEFNS
*              4 IF NOT
*        20    SAME AS FUNCT 0
*
         EJECT ,
***  REGISTERS
*
R13      EQU   13
R14      EQU   14
R15      EQU   15
RZ       EQU   0
R1       EQU   1
R2       EQU   2
RACC     EQU   3
RE       EQU   4
RO       EQU   5
RLIST    EQU   6
RX       EQU   7
RWK      EQU   8
REND     EQU   9
RB       EQU   10
         SPACE 6
***  OPCODE TYPE INDICATORS
*
OPMI     EQU   1
OPDEC    EQU   2
OPFP     EQU   4
OPASM    EQU   8
OPASMBM  EQU   OPASM*2
OPMAC    EQU   32
OP370    EQU   64                                                080172
OPINNER  EQU   128                                               080372
         TITLE 'MAINLINE'
         PRINT NOGEN         SAVE A TREE                         90280
       SAVE    (14,RB)
       USING   MACRFNST,RB
         LR    RB,R15
         LR    R2,RZ
         B     *+4(R2)
         B     VALOP          FUNCT=0
         B     ENDMAC              =4
         B     OPLIST              =8
         B     RESETOPS            =12
         B     BEFORMAC            =16
         B     VALOP               =20
         SPACE 8
***  VALIDATE THE OP-CODE
*
VALOP    DS    0H
         NI    COPYSW,X'0F'
         LR    RE,R1
         LA    R1,0(R1)
FNDBLK   DS    0H             FIND FIRST BLANK
         CLI   1(RE),X'40'
         LA    RE,1(RE)
         BNE   FNDBLK
         SR    RE,R1          LENGTH OF OP CODE
         CH    RE,H8          IF L GT 8
         BH    NOACTION           IGNORE
         LTR   R2,RE          IF L EQ 0
         BZ    NOACTION            ERROR
         BCTR  R2,0           L-1
         NOP   MACRO
COPYSW   EQU   *-3
         LR    RWK,R2
         CH    RE,H5          IF L GT 5
         BH    MACRO               NOT OP-CODE
*   LENGTH LE 5
         SLL   RWK,4      *16  SRCH PNTR TABLE GROUP INDEX
         MVC   WKC,0(R1)      FIRST CHAR OF OP
         NI    WKC,X'30'      A-I,J-R,S-Z,0-9
         TM    WKC,X'30'
         BO    NOACTION       IGNORE 0-9
         SR    RO,RO
         IC    RO,WKC
         SRL   RO,2      LO ORD 2 BITS *4 = SUB INDEX
         AR    RWK,RO       A-I=0,J-R=1,S-Z=2
         L     RACC,T(RWK)     START OF SRCH
         L     RO,T+4(RWK)     END OF SRCH +1 ENTRY
         LA    RE,1(RE)            INCLUDE TYPE BYTE IN LENGTH
         SR    RO,RE          END OF SRCH
SEARCH   DS    0H
         EX    R2,CLC         SEARCH
         BE    OPCODE              EXIT IF OPCODE
         BXLE  RACC,RE,SEARCH
*   NOT IN TABLE - ADD TO MACRO LIST
MACRO    DS    0H
         TM    OPCODESW,X'F0'      IF OPCODESW IS ON
         BO    4(R14)              BR AROUND RETURN INST
         L     RACC,MACLSTPT       NEXT AVAIL SLOT
       USING   MACENT,RACC    **********
         CLI   0(RACC),255      Q. END OF TABLE?
         BE    EXITRC4             NO MORE ROOM
         MVC   MACNAME,KBLK8       BLANK OUT THE NAME
         EX    R2,MVC              MOVE TO TABLE
         LR    RO,RACC
         LA    RE,MACENTSZ         SIZE OF ONE ENTRY
         L     R1,MACLSTHD
DUPSRCH  DS    0H             SEARCH FOR DUP ENTRY
         CR    R1,RACC
         BE    INCRPT
         CLC   MACNAME,0(R1)
         BE    DUP
         BXLE  R1,RE,DUPSRCH
INCRPT   DS    0H
         CLI   23(R13),20          CHECK ORIG FUNCT
         BE    INCRPT2             BR IF FUNCT 20
         LH    R2,MACCNT
         LA    R2,1(R2)            INCR MACRO COUNT
         STH   R2,MACCNT
         MVI   MACSTAT,0           STATUS IS 0
INCRPT2  DS    0H
         LA    RACC,MACENTSZ(RACC) INCR TO NEXT ENTRY
         ST    RACC,MACLSTPT
DUP      DS    0H
         LA    R15,8               INNER MACRO
         CLI   23(R13),20
         BNE   *+8
         MVI   MACSTAT,255         FLAG AS PROCESSED FOR FUNCT 20
         B     RETURN
         SPACE 3
CLC      CLC   0(0,R1),1(RACC)
MVC      MVC   MACNAME(0),0(R1)    EX MVC
         SPACE 5
**  OPCODE IS FOUND - IF IT'S 'COPY' PROCESS OPERAND AS A MACRO
*
OPCODE   DS    0H
         NOPR  R14
OPCODESW EQU   *-1
         CLC   KCOPY,0(R1)
         BNE   HAVEOPCD            BR IF NOT 'COPY'
         LA    R1,1(R2,R1)         CHAR AFTER OPCODE
FNDCPYOP DS    0H
         LA    R1,1(R1)
         CLI   0(R1),X'40'
         BE    FNDCPYOP
         ST    R1,24(R13)    SET ADDR OF COPY OPERAND FOR EXIT
         LR    RE,R1
         OI    COPYSW,X'F0'
         B     FNDBLK
         SPACE 6
HAVEOPCD DS    0H
         TM    0(RACC),OPINNER     IS IT FLAGGED AS INNER MACRO?
         BO    EXITRC4             YES - CALL IT INNER MACRO
         TM    0(RACC),OP370   +++ 370 OPCODE BYPASS +++         080372
         BO    MACRO           +++ 370 OPCODE BYPASS +++         080372
         B     NOACTION            BR IF NO
         EJECT ,
*
***  END OF THE OUTER MACRO - DUMP TABLE
*
ENDMAC   DS    0H
         L     R1,24(R13)     RELOAD REG1 IN CASE BLDL FAILED
         LH    R2,MACCNT
         LTR   R2,R2               CHECK IF NO MORE ENTRIES
         BZ    NOMORE
*   FIND LOWEST ONE IN TABLE
         L     RACC,MACLSTHD       FIRST ENTRY
         LA    RE,MACENTSZ         LENGTH OF ENTRY
         LA    R15,DUMMY           FORCE HIGH VALUE FOR LOWEST
         L     RO,MACLSTPT
         SR    RO,RE               LAST ENTRY
         SR    RACC,RE        (FOR BXH BELOW)
*
*    RACC = CURR ENTRY
*    RE   = MACENTSZ
*    RO   = LAST ENTRY
*    R15  = LOWEST ENTRY
*
LOWLP    DS    0H
         BXH   RACC,RE,HAVELOW
         CLC   MACNAME,0(R15)
         BNL   LOWLP
*    SEE IF THIS ENTRY ALREADY PROCESSED
         CLI   MACSTAT,0
         BNE   LOWLP               IF NE 0 ALREADY PROCESSED
         LR    R15,RACC       NEW LOWEST
         B     LOWLP
         SPACE 5
*** R15 HAS LOWEST ENTRY
*
HAVELOW  DS    0H
         LR    RACC,R15            FOR ADDRESSABILITY
         MVC   BLDLNM,MACNAME
         LH    R2,MACCNT
         BCTR  R2,0                DECR MACRO CNT
         STH   R2,MACCNT
         MVI   MACSTAT,255         FLAG AS PROCESSED
       BLDL    (R1),BLDL
         BXH   R15,R15,ENDMAC  NOT FOUND;I/O ERROR;NO SPACE...   91154
         SPACE 3
       DROP    RACC           **********
         SPACE 3
**  EXIT WITH INNER MACRO
*
EXITINNR DS    0H
         LA    R15,BLDLNM          RETURN CODE
         B     RETURN
         SPACE 4
**  EXIT WITH RETURN CODE OF 4
*
EXITRC4  DS    0H
         LA    R15,4
         B     RETURN
         SPACE 6
**  NO INNER MACROS LEFT
*
NOMORE   DS    0H
         MVC   MACLSTPT,MACLSTHD   RESET POINTERS
NOACTION DS    0H
***  TEST WHETHER RETURN IS EXPECTED
         TM    OPCODESW,X'F0'
         BO    4(R14)              BR IF YES - TAKE 'NOT FOUND' EXIT
         SR    R15,R15
RETURN   DS    0H
      RETURN   (14,RB),RC=(15)
         EJECT ,
***  PROCESS 'OPCODES' LIST TO TREAT CERTAIN OPCODES AS MACROS
*
OPLIST   DS    0H
         OI    OPCODESW,X'F0'
         LR    RLIST,R1            ADDR OF LIST AFTER KEYWORD
PRCOPCDL DS    0H
         LR    REND,RLIST          LOAD IN CASE BADLIST
         CLI   0(RLIST),C','
         BE    COMMA
         CLI   0(RLIST),C')'       IF RT PAREN HERE
         BE    BADLIST                IT IS INVALID
         CLI   0(RLIST),C'('
         BE    OCSUBLST            PROCESS SUBLIST
***  NOT SUBLIST -- PROCESS KEYWORDS
         CLI   0(RLIST),C'*'       'RESET' OPERAND?
         BE    RESETOPS            BR IF YES
         CLC   KDEC,0(RLIST)
         BE    DECOPS
         CLC   KFP,0(RLIST)
         BE    FPOPS
         CLC   KASM,0(RLIST)
         BE    ASMOPS
         CLC   KMI,0(RLIST)
         BE    MIOPS
         CLC   KMAC,0(RLIST)
         BE    MACOPS
         CLC   KALL,0(RLIST)
         BE    ALLOPS
         CLC   K370,0(RLIST)                                     080372
         BE    S370OPS                                           080372
         SPACE 2
***  SOMETHING IS WRONG WITH THE PARAMETER LIST
BADLIST  DS    0H
         LR    R15,REND            ADDR OF ERROR
         B     OCEXIT
         SPACE 4
OCEXIT0  DS    0H
         SR    R15,R15
         B     OCEXIT
OCEXIT4  DS    0H
         LA    R15,4
*
OCEXIT   DS    0H
         NI    OPCODESW,X'0F'
         B     RETURN
         SPACE 3
COMMA    DS    0H
         LA    RLIST,1(RLIST)
         B     PRCOPCDL
         EJECT ,
***  RESET ALL OPCODES TO THEIR ORIGINAL STATE
RESETOPS DS    0H
         LA    RLIST,1(RLIST)      BYPASS '*'
         XC    SETRESET(2),KFLIP   CHANGE OI TO NI
         B     ALLOPS2
ALLOPS   DS    0H
         LA    RLIST,L'KALL(RLIST)
ALLOPS2  DS    0H
         LA    R15,X'7F'
         B     MIOPS2
S370OPS  DS    0H                                                080372
         LA    R15,OP370                                         080372
         LA    RLIST,L'K370(RLIST)                               080372
         B     MIOPS2                                            080372
DECOPS   DS    0H
         LA    R15,OPDEC
         LA    RLIST,L'KDEC(RLIST)
         B     MIOPS2
FPOPS    DS    0H
         LA    R15,OPFP
         LA    RLIST,L'KFP(RLIST)
         B     MIOPS2
ASMOPS   DS    0H
         LA    R15,OPASM+OPASMBM
         LA    RLIST,L'KASM(RLIST)
         B     MIOPS2
MACOPS   DS    0H
         LA    R15,OPMAC
         LA    RLIST,L'KMAC(RLIST)
         B     MIOPS2
MIOPS    DS    0H
         LA    R15,OPMI+OPDEC+OPFP+OP370                         080772
         LA    RLIST,L'KMI(RLIST)
MIOPS2   DS    0H
         LA    RWK,5               NUMBER OF TABLES
         LA    R2,16               LENGTH OF ENTRY IN 'T'
         LR    R1,R2               FOR MR
         MR    RZ,RWK              LENGTH OF ALL 'T'S
         LA    R1,T(R1)            END OF 'T'
MILP1    DS    0H
         LA    RE,1(RWK)           LENGTH OF ONE ENTRY
         SR    R1,R2               ENTRY IN 'T'
         L     RACC,0(R1)          START OF OPCODE TABLE
         L     RO,12(R1)           END OF OPCODE TABLE
         SR    RO,RE               LAST ENTRY IN OPCODE TABLE
MILP2    DS    0H
         EX    R15,TM              TEST IF THIS ONE QUALIFIES
         BZ    *+8                 BR IF NO
***  FOLLOWING INSTRUCTION IS SWITCHED BETWEEN 'OI' & 'NI'
SETRESET OI    0(RACC),OPINNER
         BXLE  RACC,RE,MILP2       THROUGH OPCODE TABLE
         BCT   RWK,MILP1           THRU ALL OPCODE TABLES
         CLI   SETRESET+1,OPINNER  TEST IF ORIG INST
         BE    *+10                BR IF YES
         XC    SETRESET(2),KFLIP   RESET IT
         CLI   23(R13),12          TEST RESET REQ DIRECTLY
         BE    OCEXIT0             BR IF YES
         B     MIRET
         SPACE 2
TM       TM    0(RACC),0           *EXECUTED*
         SPACE 5
**  PROCESS THE SUBLIST
OCSUBLST DS    0H
         LA    RX,1(RLIST)
SUBLPROC DS    0H
         LR    REND,RX
SUBLSTLP DS    0H
         CLI   0(REND),C','
         BE    SBLHVCD
         CLI   0(REND),C')'
         BE    SBLHVCD
         CLI   0(REND),C' '
         BE    SBLHVCD
         CLI   0(REND),C'('        IF FOR SOME REASON LEFT PAREN
         BE    SBLHVCD
         LA    REND,1(REND)
         B     SUBLSTLP
         SPACE 2
SBLHVCD  DS    0H
         LR    RWK,REND
         SR    RWK,RX
         BZ    SBLNTFND
         BCTR  RWK,0
         MVC   BLDLNM,KBLK8
         MVC   BLDLNM(0),0(RX)
         EX    RWK,*-6
         LA    R1,BLDLNM
         BAL   R14,VALOP           GO FIND THE OP IN TABLE
         OI    0(RACC),OPINNER     IF FOUND IN TABLE RETURN HERE
*  IF NOT FOUND IN TABLE RETURN HERE
SBLNTFND DS    0H
         CLI   0(REND),C' '
         BE    BADLIST
         CLI   0(REND),C'('
         BE    BADLIST
         CLI   0(REND),C')'
         LA    RX,1(REND)          NEXT CODE IN LIST
         BNE   SUBLPROC            BR IF COMMA ENDED LAST OP
         LR    RLIST,RX            RT PAREN ENDED IT
MIRET    EQU   *
         CLI   0(RLIST),C' '       TEST FOR END OF LIST
         BE    OCEXIT0
         B     PRCOPCDL            RESUME MAIN LIST PROCESSING
         EJECT ,
***  DETERMINE IF OP-CODE IS VALID BEFORE VAR SYM DEFNS
*
BEFORMAC DS    0H
         OI    OPCODESW,X'F0'
         BAL   R14,VALOP
         B     *+8                 OPCODE WAS FOUND
         B     NOTBM               OPCODE WAS NOT FOUND
         MVC   WKC,0(RACC)         GET TYPE INDICATOR
         NI    WKC,X'7F'           REMOVE INNER MACRO FLAG
         CLI   WKC,OPASMBM         IS IT VALID BEFORE DEFNS
         BE    OCEXIT0             BR IF YES
NOTBM    DS    0H
         TM    COPYSW,X'F0'  WAS THIS A COPY REQUEST ?           91154
         BO    OCEXIT0       YES; SOMETIMES VALID BEFORE         91154
         B     OCEXIT4
         TITLE 'MISC CONSTS && STUFF'
MACLSTHD DC    A(MACLST)
MACLSTPT DC    A(MACLST)
MACCNT   DC    H'0'
H8       DC    H'8'
H5       DC    H'5'
BLDL     DC    H'1,14'
BLDLNM   DC    CL8' '
         DS    CL6
WKC      DS    CL1
KBLK8    DC    CL8' '
KCOPY    DC    C'COPY '
KDEC     DC    C'DEC'
KFP      DC    C'FP'
KASM     DC    C'ASM'
KMI      DC    C'MI'
KMAC     DC    C'MAC'
KALL     DC    C'ALL'
K370     DC    C'370'                                            080372
KFLIP    DC    X'02FF'   FLIP OI/NI & REVERSE MASK
         TITLE 'SEARCH TABLES'
*
***  TABLE OF SEARCH POINTERS
*
*        ADDR1 FIRST ENTRY
*        ADDR2 FIRST ENTRY FOR LTRS J-R
*        ADDR3 FIRST ENTRY FOR LTRS S-Z
*        ADDR4 LAST ENTRY
*
T        DS    0F
         DC    A(T1,T1L,T1S,T1END)
         DC    A(T2,T2L,T2S,T2END)
         DC    A(T3,T3L,T3S,T3END)
         DC    A(T4,T4L,T4S,T4END)
         DC    A(T5,T5L,T5S,T5END)
         SPACE 10
*
***  OP-CODE TABLES
*
T1       EQU   *    TABLE OF 1 CHAR OP-CODES
         DC    AL1(OPMI),C'A'
         DC    AL1(OPMI),C'B'
         DC    AL1(OPMI),C'C'
         DC    AL1(OPMI),C'D'
T1L      DC    AL1(OPMI),C'L'
         DC    AL1(OPMI),C'M'
         DC    AL1(OPMI),C'N'
         DC    AL1(OPMI),C'O'
T1S      DC    AL1(OPMI),C'S'
         DC    AL1(OPMI),C'X'
T1END    EQU   *
         SPACE 3
T2       EQU   *    TABLE OF 2 CHAR OP-CODES
         DC    AL1(OPFP),C'AD'
         DC    AL1(OPFP),C'AE'
         DC    AL1(OPMI),C'AH'
         DC    AL1(OPMI),C'AL'
         DC    AL1(OPDEC),C'AP'
         DC    AL1(OPMI),C'AR'
         DC    AL1(OPFP),C'AU'
         DC    AL1(OPFP),C'AW'
         DC    AL1(OPMI),C'BC'
         DC    AL1(OPMI),C'BE'
         DC    AL1(OPMI),C'BH'
         DC    AL1(OPMI),C'BL'
         DC    AL1(OPMI),C'BM'
         DC    AL1(OPMI),C'BO'
         DC    AL1(OPMI),C'BP'
         DC    AL1(OPMI),C'BR'
         DC    AL1(OPMI),C'BZ'
         DC    AL1(OPFP),C'CD'
         DC    AL1(OPFP),C'CE'
         DC    AL1(OPMI),C'CH'
         DC    AL1(OPMI),C'CL'
         DC    AL1(OPDEC),C'CP'
         DC    AL1(OPMI),C'CR'
         DC    AL1(OPASM),C'DC'
         DC    AL1(OPFP),C'DD'
         DC    AL1(OPFP),C'DE'
         DC    AL1(OPDEC),C'DP'
         DC    AL1(OPMI),C'DR'
         DC    AL1(OPASM),C'DS'
         DC    AL1(OPDEC),C'ED'
         DC    AL1(OPMI),C'EX'
         DC    AL1(OPMI),C'IC'
T2L      DC    AL1(OPMI),C'LA'
         DC    AL1(OPFP),C'LD'
         DC    AL1(OPFP),C'LE'
         DC    AL1(OPMI),C'LH'
         DC    AL1(OPMI),C'LM'
         DC    AL1(OPMI),C'LR'
         DC    AL1(OPMI+OP370),C'MC'                             080172
         DC    AL1(OPFP),C'MD'
         DC    AL1(OPFP),C'ME'
         DC    AL1(OPMI),C'MH'
         DC    AL1(OPDEC),C'MP'
         DC    AL1(OPMI),C'MR'
         DC    AL1(OPMI),C'NC'
         DC    AL1(OPMI),C'NI'
         DC    AL1(OPMI),C'NR'
         DC    AL1(OPMI),C'OC'
         DC    AL1(OPMI),C'OI'
         DC    AL1(OPMI),C'OR'
T2S      DC    AL1(OPFP),C'SD'
         DC    AL1(OPFP),C'SE'
         DC    AL1(OPMI),C'SH'
         DC    AL1(OPMI),C'SL'
         DC    AL1(OPDEC),C'SP'
         DC    AL1(OPMI),C'SR'
         DC    AL1(OPMI),C'ST'
         DC    AL1(OPFP),C'SU'
         DC    AL1(OPFP),C'SW'
         DC    AL1(OPMI),C'TM'
         DC    AL1(OPMI),C'TS'
         DC    AL1(OPMI),C'TR'
         DC    AL1(OPMI),C'XC'
         DC    AL1(OPMI),C'XI'
         DC    AL1(OPMI),C'XR'
T2END    EQU   *
         SPACE 3
T3       EQU   *    TABLE OF 3 CHAR OP-CODES
         DC    AL1(OPFP),C'ADR'
         DC    AL1(OPFP),C'AER'
         DC    AL1(OPMAC),C'AGO'
         DC    AL1(OPMAC),C'AIF'
         DC    AL1(OPMI),C'ALR'
         DC    AL1(OPFP),C'AUR'
         DC    AL1(OPFP),C'AWR'
         DC    AL1(OPFP),C'AXR'
         DC    AL1(OPMI),C'BAL'
         DC    AL1(OPMI),C'BCR'
         DC    AL1(OPMI),C'BCT'
         DC    AL1(OPMI),C'BNE'
         DC    AL1(OPMI),C'BNH'
         DC    AL1(OPMI),C'BNL'
         DC    AL1(OPMI),C'BNM'
         DC    AL1(OPMI),C'BNO'
         DC    AL1(OPMI),C'BNP'
         DC    AL1(OPMI),C'BNZ'
         DC    AL1(OPMI),C'BXH'
         DC    AL1(OPASM),C'CCW'
         DC    AL1(OPFP),C'CDR'
         DC    AL1(OPFP),C'CER'
         DC    AL1(OPMI),C'CLC'
         DC    AL1(OPMI),C'CLI'
         DC    AL1(OPMI+OP370),C'CLM'                            080172
         DC    AL1(OPMI),C'CLR'
         DC    AL1(OPASM),C'COM'
         DC    AL1(OPMI),C'CVB'
         DC    AL1(OPMI),C'CVD'
         DC    AL1(OPASM),C'CXD'
         DC    AL1(OPFP),C'DDR'
         DC    AL1(OPFP),C'DER'
         DC    AL1(OPASM),C'DXD'
         DC    AL1(OPASM),C'END'
         DC    AL1(OPASM),C'EQU'
         DC    AL1(OPFP),C'HDR'
         DC    AL1(OPMI+OP370),C'HDV'                            080172
         DC    AL1(OPFP),C'HER'
         DC    AL1(OPMI),C'HIO'
         DC    AL1(OPMI+OP370),C'ICM'                            080172
         DC    AL1(OPMI),C'ISK'
T3L      DC    AL1(OPMI),C'LCR'
         DC    AL1(OPFP),C'LDR'
         DC    AL1(OPFP),C'LER'
         DC    AL1(OPMI),C'LNR'
         DC    AL1(OPMI),C'LPR'
         DC    AL1(OPMI+OP370),C'LRA'                            080372
         DC    AL1(OPMI),C'LTR'
         DC    AL1(OPFP),C'MDR'
         DC    AL1(OPFP),C'MER'
         DC    AL1(OPMI),C'MVC'
         DC    AL1(OPMI),C'MVI'
         DC    AL1(OPMI),C'MVN'
         DC    AL1(OPMI),C'MVO'
         DC    AL1(OPMI),C'MVZ'
         DC    AL1(OPFP),C'MXD'
         DC    AL1(OPFP),C'MXR'
         DC    AL1(OPMI),C'NOP'
         DC    AL1(OPASM),C'ORG'
         DC    AL1(OPMI),C'RDD'
         DC    AL1(OPMI+OP370),C'RRB'                            080372
T3S      DC    AL1(OPMI+OP370),C'SCK'                            080172
         DC    AL1(OPFP),C'SDR'
         DC    AL1(OPFP),C'SER'
         DC    AL1(OPMI),C'SIO'
         DC    AL1(OPMI),C'SLA'
         DC    AL1(OPMI),C'SLL'
         DC    AL1(OPMI),C'SLR'
         DC    AL1(OPMI),C'SPM'
         DC    AL1(OPMI+OP370),C'SPT'                            080372
         DC    AL1(OPMI),C'SRA'
         DC    AL1(OPMI),C'SRL'
         DC    AL1(OPDEC+OP370),C'SRP'                           080772
         DC    AL1(OPMI),C'SSK'
         DC    AL1(OPMI),C'SSM'
         DC    AL1(OPMI),C'STC'
         DC    AL1(OPFP),C'STD'
         DC    AL1(OPFP),C'STE'
         DC    AL1(OPMI),C'STH'
         DC    AL1(OPMI),C'STM'
         DC    AL1(OPFP),C'SUR'
         DC    AL1(OPMI),C'SVC'
         DC    AL1(OPFP),C'SWR'
         DC    AL1(OPFP),C'SXR'
         DC    AL1(OPMI),C'TCH'
         DC    AL1(OPMI),C'TIO'
         DC    AL1(OPMI),C'TRT'
         DC    AL1(OPMI),C'WRD'
         DC    AL1(OPDEC),C'ZAP'
T3END    EQU   *
         SPACE 3
T4       EQU   *    TABLE OF 4 CHAR OP-CODES
         DC    AL1(OPMAC),C'ACTR'
         DC    AL1(OPMAC),C'ANOP'
         DC    AL1(OPMI),C'BALR'
         DC    AL1(OPMI),C'BCTR'
         DC    AL1(OPMI),C'BXLE'
         DC    AL1(OPMI+OP370),C'CLCL'                           080172
         DC    AL1(OPASM),C'CNOP'
         DC    AL1(OPASMBM),C'COPY'      ALLOWED BEFORE GBL/LCL  91153
         DC    AL1(OPASM),C'DROP'
         DC    AL1(OPDEC),C'EDMK'
         DC    AL1(OPMAC),C'GBLA'
         DC    AL1(OPMAC),C'GBLB'
         DC    AL1(OPMAC),C'GBLC'
         DC    AL1(OPASMBM),C'ICTL'
         DC    AL1(OPASMBM),C'ISEQ'
T4L      DC    AL1(OPFP),C'LCDR'
         DC    AL1(OPFP),C'LCER'
         DC    AL1(OPMAC),C'LCLA'
         DC    AL1(OPMAC),C'LCLB'
         DC    AL1(OPMAC),C'LCLC'
         DC    AL1(OPMI+OP370),C'LCTL'                           080172
         DC    AL1(OPFP),C'LNDR'
         DC    AL1(OPFP),C'LNER'
         DC    AL1(OPFP),C'LPDR'
         DC    AL1(OPFP),C'LPER'
         DC    AL1(OPMI),C'LPSW'
         DC    AL1(OPFP),C'LRDR'
         DC    AL1(OPFP),C'LRER'
         DC    AL1(OPFP),C'LTDR'
         DC    AL1(OPFP),C'LTER'
         DC    AL1(OPMAC),C'MEND'
         DC    AL1(OPMI+OP370),C'MVCL'                           080172
         DC    AL1(OPFP),C'MXDR'
         DC    AL1(OPMI),C'NOPR'
         DC    AL1(OPMI),C'PACK'
         DC    AL1(OPMI+OP370),C'PTLB'                           080372
T4S      DC    AL1(OPMI+OP370),C'SCKC'                           080372
         DC    AL1(OPMAC),C'SETA'
         DC    AL1(OPMAC),C'SETB'
         DC    AL1(OPMAC),C'SETC'
         DC    AL1(OPMI+OP370),C'SIOF'                           080172
         DC    AL1(OPMI),C'SLDA'
         DC    AL1(OPMI),C'SLDL'
         DC    AL1(OPMI),C'SRDA'
         DC    AL1(OPMI),C'SRDL'
         DC    AL1(OPMI+OP370),C'STCK'                           080172
         DC    AL1(OPMI+OP370),C'STCM'                           080172
         DC    AL1(OPMI+OP370),C'STPT'                           080372
         DC    AL1(OPMI),C'UNPK'
T4END    EQU   *
         SPACE 3
T5       EQU   *    TABLE OF 5 CHAR OP-CODES
         DC    AL1(OPASM),C'CSECT'
         DC    AL1(OPASM),C'DSECT'
         DC    AL1(OPASMBM),C'EJECT'
         DC    AL1(OPASM),C'ENTRY'
         DC    AL1(OPASM),C'EXTRN'
T5L      DC    AL1(OPASM),C'LTORG'
         DC    AL1(OPMAC),C'MACRO'
         DC    AL1(OPMAC),C'MEXIT'
         DC    AL1(OPMAC),C'MNOTE'
         DC    AL1(OPASM),C'OPSYN'                               080172
         DC    AL1(OPASMBM),C'PRINT'
         DC    AL1(OPASM),C'PUNCH'
         DC    AL1(OPASM),C'REPRO'
T5S      DC    AL1(OPASMBM),C'SPACE'
         DC    AL1(OPASM),C'START'
         DC    AL1(OPMI+OP370),C'STCKC'                          080372
         DC    AL1(OPMI+OP370),C'STCTL'                          080172
         DC    AL1(OPMI+OP370),C'STIDC'                          080172
         DC    AL1(OPMI+OP370),C'STIDP'                          080172
         DC    AL1(OPMI+OP370),C'STNSM'                          080372
         DC    AL1(OPMI+OP370),C'STOSM'                          080372
         DC    AL1(OPASMBM),C'TITLE'
         DC    AL1(OPASM),C'USING'
         DC    AL1(OPASM),C'WXTRN'                               080172
T5END    EQU   *
         SPACE 6
MACENT   DSECT ,
MACNAME  DS    CL8                 MACRO NAME
         DS    CL1
MACSTAT  DS    CL1                 STATUS FLAGS
*                                    00=ENTERED IN PHASE 2
*                                    FF=DUMPED FOR PHASE 3
MACENTSZ EQU   *-MACENT
         SPACE 6
MACRFNST CSECT ,
MACLST   DC    150CL(MACENTSZ)' '
DUMMY    DC    XL1'FF',(MACENTSZ-1)CL1'9'   END OF LIST/HI VALUE
         END   ,
