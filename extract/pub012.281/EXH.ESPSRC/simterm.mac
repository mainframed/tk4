SIMTERM  TITLE  'ACCESS VTAM APPLS WITHOUT LOGGING OFF TSO'
*   (NEEDS ACF/VTAM)                   SIMULATED TERMINALS
***********************************************************************
*             ELLIS HOLMAN --                                         *
*                                                                     *
*             MODULE NAME IS SIMTERM                                  *
*                                                                     *
*             FUNCTION:                                               *
*                ALLOWS ACCESS TO OTHER VTAM APPLICATIONS             *
*                WITHOUT HAVING TO LOG OFF TSO.                       *
*  DEPENDANCIES:                                                      *
*    1) BASE REGISTER IS 12.                                          *
*    2) TABLE AT OF ACBS CALLED APPLTAB IS LOADED AND SCANNED.        *
*    3) FIRST FOUR BYTES OF APPLTAB INDICATE THE NUMBER OF ENTRIES    *
*       (AVAILABLE ACB'S).  THIS MUST MATCH THE NUMBER OF ACB NAMES   *
*       IN THE ACB NAME TABLE.                                        *
*    4) PARMS PASSED TO THE PROGRAMMING IN THE FORM OF:               *
*          SIMTERM APPL(APPLNAME)                                     *
*       SPECIFY THE APPL TO WHICH A SESSION WILL ATTEMPT              *
*       TO BIND TO.  THIS NAME IS MOVED INTO STORAGE AT               *
*       LABEL ECHO1.                                                  *
*                                                                     *
*   MODIFICATION HISTORY:                                             *
*                                                                     *
*  2002/11/22  GYP  CHANGED SLU NAMES FROM TSO0 TO SIT0               *
*                    CHANGED DEFAULT APPLICATION TO EXHI              *
*                                                                     *
***********************************************************************
         SPACE 1                                                 93309
         MACRO
         APPL  &FLD
         LCLA  &LEN                                             GP12045
         GBLA  &NUMAPPL                                          93319
&LEN     SETA  K'&FLD
         AIF   (&LEN GT 8).APPL
         AIF   (&LEN LT 1).APPL                                  93309
&NUMAPPL SETA  &NUMAPPL+1                                        93319
         AIF   (&NUMAPPL GT 1).NOTONE                            93319
APPLTAB  DC    F'1'          PROVISIONAL SIZE                    93319
.NOTONE  DC    CL8'&FLD'
         MEXIT ,                                                 93319
.APPL    MNOTE 8,'APPL NAME MUST NOT EXCEED 8 CHARACTERS'        93309
         MEND
         MACRO
         ENDAPPL
         GBLA  &NUMAPPL                                          93319
         AIF   (&NUMAPPL LT 1).ANOTE                             93319
         ORG   APPLTAB                                           93319
         DC    A(&NUMAPPL)   SET CURRENT COUNT                   93319
         ORG   ,                                                 93319
         MEXIT ,                                                 93319
.ANOTE   MNOTE 0,'APPLS MUST BE DEFINED TO VTAM'
         MEND
         SPACE 2                                                 93309
         PRINT NOGEN         SAVE A TREE
SIMTERM  START 0                                                 93309
         USING SIMTERM,R15                                       93309
BASE     B     BEGIN                                             93309
         DC    AL1(BEGIN-*+1)  LENGTH OF INTRODUCTORY TEXT       93309
         DC    C'SIMTERM ALLOWS ACCESS TO '
         DC    C'VTAM APPLICATIONS WITHOUT '
         DC    C'LOGGING OFF TSO  '
         DC    C'DATE ASSEMBLED='
         DC    C'&SYSDATE'
         DC    C'  '
         DC    C'TIME ASSEMBLED='
         DC    C'&SYSTIME'
BEGIN    SAVE  (14,12)                      SAVE REGISTERS
         DROP  R15                                               93309
         LR    R12,R15       SET BASE                            93309
         USING SIMTERM,R12                                       93309
*---------------------------------------------------------------------*
*  THE FOLLOWING CODE DOES THE STANDARD SAVE AREA                     *
*  ADDRESSING SETUP, INITIALIZES THE ECB ADDRESSES                    *
*  THE TSO COMMAND BUFFER AREA, AND THEN SCANS                        *
*  THE COMMAND BUFFER FOR THE EXPECTED PARMS.                         *
*  IF THE EXPECTED PARMS ARE NOT FOUND (SEE                           *
*  DEPENDANCIES ABOVE FOR COMMAND FORMAT),                            *
*  A DEFAULT APPLICATION OF 'EXHI    ' IS REQUESTED              93315
*  FOR SESSION INITIATION.                                            *
*---------------------------------------------------------------------*
         ST    R12,BASESAVE                 SAVE BASE REG
         ST    R13,SAVEAREA+4               SAVE OLD SAVE AREA
         LA    R13,SAVEAREA                 SET NEW SAVE AREA
         XC    WAITECB,WAITECB              CLEAR WAIT ECB       93319
         USING CPPL,R1                      ESTAB. CPPL MAP
         L     R4,CPPLCBUF                  PICKUP CBUF ADDRESS
         LH    R1,0(,R4)                    LOAD LINE LENGTH TO SCAN
         SH    R1,=H'4'      LESS LENGTH OF LENGTH               93319
         SH    R1,2(,R4)     LESS LENGTH PARSED (COMMAND)        93319
         BNP   DEFAPPL       NONE; USE DEFAULT                   93319
         AH    R4,2(,R4)     SKIP LENGTH SCANNED                 93319
         LR    R15,R1        COPY LENGTH                         93319
         BCTR  R15,0         SET EXECUTE LENGTH                  93319
         EX    R15,EXTRAPPL  UPPER CASE TEXT                     93319
APPLSCAN CLI   4(R4),C' '    LEADING BLANK ?
         BE    APPLCORE                                          93319
         CLC   4(4,R4),=C'APPL'             SEARCH FOR KEY WORD
         BE    SETAPL                       WHEN FOUND SET UP APPLID
         B     SETNAPL       NO APPL=                            93319
APPLCORE LA    R4,1(R4)                     INDEX FOR NEXT BYTE
         BCT   R1,APPLSCAN                  CHECK NEXT POSSIBLE
         B     DEFAPPL                      IF NO APPL KEYWRD=DEFAULT
EXTRAPPL TR    4(0,R4),UPCASE               XLATE CBUF TO UPPER CASE
EXMVAPPL MVC   APPLID(0),4(R4)                                   93319
         SPACE 1                                                 93319
SETAPL   LA    R4,5(,R4)     SKIP APPL=                          93319
         SH    R1,=H'5'      SUBTRACT 'APPL=' LENGTH             93319
SETNAPL  SH    R1,=H'1'      ANYTHING LEFT ?                     93319
         BM    DEFAPPL       NO; USE DEFAULT                     93319
         CH    R1,=H'7'      TOO LONG ?                          93319
         BNH   *+8           NO                                  93319
         LA    R1,L'APPLID-1  NOT TOO MUCH                       93319
         EX    R1,EXMVAPPL   MOVE WHATEVER WE HAVE               93319
         B     CHGNIB                       MODIFY NIB AS NEEDED
         SPACE 1                                                 93319
DEFAPPL  MVC   APPLID,=CL8'EXHI    '        OR USE DEFAULT       93315
*---------------------------------------------------------------------*
*  CHANGE THE NIB TO ACCESS THE REQUESTED APPLICATION                 *
*---------------------------------------------------------------------*
CHGNIB   DS    0H
         MODCB NIB=SIMNIB,                                             X
               AM=VTAM,                                                X
               NAME=(*,APPLID)
         USING IFGRPL,R4                         SET RPL DSECT
*---------------------------------------------------------------------*
*  TURN ON TSO FULL SCREEN MODE AND ACTIVATE TSO ATTENTION EXIT       *
*---------------------------------------------------------------------*
         STTMPMD ON,KEYS=ALL                     SET TERMINAL MOD ON
         STFSMODE ON,                                                  X
               INITIAL=YES,                                            X
               NOEDIT=YES
         LA    R3,STAXLIST                       LOAD ADDR OF STAX PARM
         STAX  ATTNEXIT,MF=(E,(3))               ISSUE STAX MACRO
*---------------------------------------------------------------------*
*  DO INITIAL CLEAR OF SCREEN AND ATTEMPT OPEN OF ACB                 *
*---------------------------------------------------------------------*
         TPUT  CLEAR,CLEARLN,NOEDIT              CLEAR SCREEN    93319
*OBSOLETELOAD  EP=APPLTAB                        LOAD ACB NAME TABLE
*OBSOLETELR    R9,R0                             PICK UP ADDR OF TABLE
         L     R9,=A(APPLTAB)                                    93309
         LA    R10,4(,R9)    POINT TO FIRST ENTRY                93315
         L     R9,0(0,R9)    LOAD SIZE OF TABLE                  93315
         LA    R5,SIMACB
         USING IFGACB,R5
*---------------------------------------------------------------------*
*  SCAN ACB TABLE TO FIND AN ACB NOT IN USE, IF UNABLE TO FIND ONE    *
*  THAT IS NOT IN USE SEND A MESSAGE TO THE TERMINAL THAT THE         *
*  REQUESTED SESSION COULD NOT BE ACTIVATED.                          *
*---------------------------------------------------------------------*
FINDACB  DS    0H
         MVC   ECHO1+1(8),0(R10)                 MOVE IN FIRST ACB NAME
         OPEN  SIMACB                            OPEN VTAM ACB
         LTR   R15,R15                           RC = 0
         BZ    ACBOK                             IF NOT EXIT
         CLI   ACBERFLG,X'58'                    OPEN ALREADY ??
         BNE   BADACB                            IF NOT LEAVE
         LA    R10,8(R10)                        INDEX TO NEXT NAME
         BCT   R9,FINDACB                        LOOP FOR ACB
BADACB   DS    0H
         STFSMODE OFF                            SET FULL SCRN OFF
         MVC   ACBMSGLU,0(R10)  ECHO LU NAME                     93319
         UNPK  ACBMSGCD(3),ACBERFLG(2)  UNPACK ERROR CODE        93319
         TR    ACBMSGCD,HEXTAB-C'0'  MAKE PRINTABLE HEX          93319
         TPUT  ACBMSG,ACBMSGSZ  ALERT USER                       93319
         B     GETOUT                            TERMINATE AND EXIT
ACBOK    DS    0H
*---------------------------------------------------------------------*
*  UPON SUCCESSFULLY OPENING AN ACB OBTAIN INPUT BUFFER AREA VIA      *
*  GETMAIN, EXIT IF UNABLE TO GET STORAGE.  OTHERWISE, ISSUE VTAM     *
*  REQUEST SESSION MACRO TO START A SESSION BETWEEN THE REQUESTED     *
*  APPLICATION AND THIS PROGRAM'S ACB                                 *
*---------------------------------------------------------------------*
         GETMAIN RC,LV=3000                      GET INPUT AREA
         ST    R1,INAREA                         STORE ADDRESS OF AREA
         GETMAIN RC,LV=3000                      GET MORE INPUT AREA
         ST    R1,OUTAREA                        STORE THIS ADR TOO
         SETLOGON RPL=SIMRPL1,                                         X
               OPTCD=(START,SYN)
         LTR   R15,R15                           RC = 0
         BNZ   GETOUT                            NO TERMINATE
         LA    R5,DATAAREA                       GET DATA ADDRESS
         LA    R4,8                              GET LENGTH      93319
         CLC   DATAAREA,=CL8' '                  ANY DATA
         BE    NORMREQ                           NO, CLEAR LENGTH
         B     HCFREQ                            YES, LEAVE LENGTH
NORMREQ  DS    0H                                    *
         SR    R4,R4                             CLEAR AREA LENGTH
HCFREQ   DS    0H                                    *
         REQSESS RPL=SIMRPL1,NIB=SIMNIB,                               X
               OPTCD=(SYN,NQ),                                         X
               RECLEN=(4),                                             X
               AREA=(5)
         LTR   R15,R15                           R C = 0
         BNZ   ERROR                             TERMINATE AND EXIT
         LTR   R0,R0                             REASON CODE = 0
         BZ    DORECV                            TERMINATE AND EXIT
ERROR    DS    0H
         STFSMODE OFF                            SET FULL SCRN OFF
         TPUT  EMSG,EMSGLN                       SEND ERROR MSG  93319
         B     GETOUT                            TERMINATE AND EXIT
DORECV   DS    0H
*---------------------------------------------------------------------*
* NOW THAT THE SESSION BETWEEN THIS PROGRAM AND THE REQUESTED         *
* APPLICATION IS BOUND, SEND A REQUEST TO THE APPLICATION TO          *
* RECEIVE DATA FROM IT.                                               *
*---------------------------------------------------------------------*
         L     R7,INAREA
         RECEIVE RPL=SIMRPL2,                                          X
               EXIT=RECVEX,                                            X
               AREA=(7),                                               X
               AREALEN=3000,                                           X
               OPTCD=(ASY,ANY,Q,CA)
         WAIT  ECB=WAITECB                       WAIT FOR ECB TO POST
RESET    DS    0H
         MVI   RESETCNT,C'N'                     CLEAR RESET SWITCH
         LA    R8,LOOPVAL1                       WAIT FOR 14 MINS
         MVC   WAITINT,HALFSEC                   IN 1/2 SEC INTERVALS
LOOP     DS    0H
         STIMER WAIT,DINTVL=WAITINT              STIMER WAIT
         CLI   EXIT,C'Y'                         DO WE EXIT
         BE    GETOUT                            YES
         CLI   RESETCNT,C'Y'                     RESET COUNT
         BE    RESET                             YES GO RESET
         L     R7,OUTAREA                        GET IOAREA ADDRESS
*---------------------------------------------------------------------*
*  ATTEMPT TO RECEIVE INPUT FROM THE TERMINAL. RESET WAIT COUNTERS    *
*  IF NO DATA RECEIVED AND CONTINUE TO WAIT FOR TERMINAL INPUT        *
*---------------------------------------------------------------------*
         TGET  (7),3000,ASIS,NOWAIT              GET INPUT FROM TERM
         C     R15,=F'4'                         ANY INPUT
         BNE   GOODIN                            PROCESS INPUT
         BCT   R8,LOOP                           DECRIMENT AND LOOP
         CLC   WAITINT,TWOSEC                    IN 2ND INTERVAL
         BE    GETOUT                            YES, TIMED OUT
         LA    R8,LOOPVAL2                       LOOP FOR 2 SEC
         MVC   WAITINT,TWOSEC                    IN TWO SEC INTERVAL
         B     LOOP                              GO LOOP
GOODIN   DS    0H
         ST    R1,SLENGTH                        GET INPUT LENGTH
         L     R6,CID                            LOAD CID
         L     R5,SLENGTH                        LOAD LENGTH
         L     R7,OUTAREA                        LOAD I/O AREA ADDR
*---------------------------------------------------------------------*
*  AFTER GETTING INPUT FROM THE TERMINAL, FORWARD IT TO THE           *
*  APPLICATION                                                        *
*---------------------------------------------------------------------*
         CLI   BBSW,C'Y'                         BETWEEN BRACKET ?
         BE    BBSEND                            YES - START BRACKET
         SEND  RPL=SIMRPL3,                                            X
               AREA=(7),                                               X
               RECLEN=(5),                                             X
               ARG=(6),                                                X
               OPTCD=SYN,                                              X
               BRACKET=(NBB,NEB),                                      X
               CHNGDIR=(CMD),                                          X
               STYPE=REQ,                                              X
               CONTROL=DATA,                                           X
               RESPOND=(NEX,NFME,NRRN,NQRESP)
         B     LOOP
BBSEND   DS    0H
         SEND  RPL=SIMRPL3,                                            X
               AREA=(7),                                               X
               RECLEN=(5),                                             X
               ARG=(6),                                                X
               OPTCD=SYN,                                              X
               BRACKET=(BB,NEB),                                       X
               STYPE=REQ,                                              X
               CONTROL=DATA,                                           X
               RESPOND=(NEX,NFME,NRRN,NQRESP)
         MVI   BBSW,C'N'                         INDICATE IN BRACKET
         B     LOOP                                  *
GETOUT   DS    0H
         CLOSE SIMACB                            CLOSE VTAM ACB
         STTMPMD OFF                             SET TERM MODE OFF
         STFSMODE OFF                            SET FULLSCREEN OFF
         L     R13,SAVEAREA+4                    LOAD OLD SAVEAREA
         RETURN (14,12)                          RETURN TO CALLER
SCIPEXIT DS    0H
         USING *,R15                             ESTAB. BASE REG
         L     R12,BASESAVE                      LOAD OLD BASE REG
         DROP  R15                               DROP REG 15
         USING BASE,R12                          SET REG 12
         LR    R3,R14                            LOAD RETURN ADDR
         LA    R13,SAVE2                         LOAD NEW SAVEAREA
         L     R4,4(,1)                          LOAD CID VALUE
         L     R5,16(,1)                         LOAD RPL ADDRESS
         USING IFGRPL,R5                         MAP RPL
         CLI   RPLCNTDC,RPLTBIND                 IS BIND REQUEST
         BE    BIND                              YES BIND SESSION
         CLI   RPLCNTDC,RPLTUNBD                 IS UNBIND REQUEST
         BE    UNBIND                            YES DROP SESSION
         CLI   RPLCNTSC,RPLCLEAR                 IS CLEAR REQUEST
         BE    DOCLEAR                           YES CLEAR
         CLI   RPLCNTSC,RPLSDT                   IS SDT REQUEST
         BE    DOSDT                             YES DO SDT
         ABEND 2,DUMP                            UNKOWN REQUEST - DUMP
UNBIND   DS    0H
         L     R6,RPLAREA                        GET RU AREA ADDR
         CLC   0(2,R6),=X'3202'                  RETAIN RESOURSES
         BE    HANGON                            YES KEEP THEM
         MVI   EXIT,C'Y'                         SET EXIT SWITCH ON
         TERMSESS  RPL=SIMRPL4,                                        X
               ARG=(4),                                                X
               OPTCD=(SYN,COND)
HANGON   DS    0H
         LR    R14,R3                            GET RETURN ADDR
         BR    R14                               RETURN TO VTAM
BIND     DS    0H
         ST    R4,CID                            SAVE CID VALUE
         ST    R4,SIMNIB+4                       SAVE CID IN NIB
         OPNSEC RPL=SIMRPL4,                                           X
               OPTCD=(SYN,CA),                                         X
               NIB=SIMNIB
         C     R15,=F'32'                        SYNAD DETECTED
         BE    SDTEX                             GET OUT WAIT FOR BIND
         LTR   R15,R15                           R C = 0
         BNZ   GETOUT                            TERMINATE AND EXIT
         POST  WAITECB                           POST ECB
         LR    R14,R3                            RESTORE RETURN ADDR
         BR    R14                               RETURN TO VTAM
DOCLEAR  DS    0H
         MVI   BBSW,C'Y'                         CLEAR BRACKET SWITCH
DOSDT    DS    0H
SDTEX    DS    0H
CLEAREX  DS    0H
         LR    R14,R3                            GET RETURN ADDRESS
         BR    R14                               RETURN TO VTAM
LEREXIT  DS    0H                                VTAM LERAD EXIT
         USING *,R15                             ESTABLISH BASE REG
         L     R12,BASESAVE                      LOAD BASE VALUE
         ST    R14,SAVE3                         SAVE RETURN ADDR.
         DROP  R15                               DROP R15 AS BASE
         USING BASE,12                           ESTAB ADDRESS
         LR    R5,R1                             LOAD RPL ADDR
         LR    R3,R14                            LOAD RTN ADDR
         USING IFGRPL,R5                         MAP RPL
         CLI   RPLFDB2,X'13'                     INVALID CID
         BER   R14                               YES IGNORE ERROR
         CLI   RPLFDB2,X'60'  USER TRIED CLSDST PASS ?           93319
         BER   R14           YES; SUPPORT LATER ?                93319
         ABEND 4095,DUMP                         ABEND OTHERWISE
         BR    R14                               RETURN TO VTAM
SYNEXIT  DS    0H                                SYNAD EXIT
         USING *,R15                             EST. ADDR
         L     R12,BASESAVE                      LOAD OLD BASE
         DROP  R15                               DROP REG 15
         ST    R0,SAVER0
         LR    R5,R1                             GET RPL ADDR
         LR    R3,R14                            LOAD RETURN ADR
         USING IFGRPL,R5                         MAP RPL DSECT
SYNTEST1 DS    0H                                LU NOT ACTIVE
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         CLC   RPLRTNCD(2),=X'1000'
         BNE   SYNTEST2
         LA    R15,10                            SET RC          93319
         BR    R14                               RETURN TO VTAM
SYNTEST2 DS    0H                                SESSION TERMINATED
         CLC   RPLRTNCD(2),=X'100D'              SESS TERM
         BER   R14                               RETURN TO VTAM
         CLC   RPLRTNCD(2),=X'081E'              SESSION REF ERR
         BER   R14                               RETURN TO VTAM
         CLC   RPLRTNCD(2),=X'0C0B'              SESSION TERM
         BNE   SYNDUMP                           RETURN TO VTAM
         BR    R14                               RETURN TO VTAM
SYNDUMP  DS    0H                                DUMP PGM SYN ERR.
         CLC   SAVER0,=F'16'                     CHECK IF R0 SHOWS APPL
*                                                NOT AVAILABLE
         BNE   SYNERR                            IF R0 EQ X'10' THEN
         STFSMODE OFF                            SET FULL SCRN OFF
         TPUT  EMSG,EMSGLN                       SEND ERROR MSG  93319
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         BR    R14                               RETURN TO VTAM
SYNERR   DS    0H
         ABEND 4094,DUMP
         BR    R14
RECVEX   DS    0H                                VTAM RECEIVE EXIT
         USING *,R15                             EST. BASE REG
         L     R12,BASESAVE                      EST. OLD BASE
         DROP  R15                               DROP R15 BASE
         USING BASE,R12                          BASE R12 FOR GLOBAL
         ST    R14,SAVE3                         SAVE RETURN ADDR
         LA    R13,SAVE3A                        LOAD SAVE AREA ADDR
         MVI   BBSW,C'N'                         SET BRACKET SW OFF
         MVI   RESPSW,C'N'                       SET RESP SW OFF
         CHECK RPL=(1)                           CHECK RECV
         LTR   R15,R15                           CHECK OK
         BE    RECOK                             THEN PROCESS
         MVI   EXIT,C'Y'                         SET XIT SWITCH
         B     EXITRECV                          EXIT OUT
RECOK    DS    0H
         LA    R5,0(,R1)                         LOAD RPL ADDRESS
         TM    20(R5),X'02'                      TYPE 1 RESP
         BO    NORESP                            NOT TYPE 1
         TM    20(R5),X'04'                      DEF TYPE 1 RESP
         BO    NORESP                            NOT DEF TYPE 1 RESP
         MVI   RESPSW,C'Y'                       INDICATE RESP NEEDED
NORESP   DS    0H
         TESTCB RPL=(5),                                               X
               AM=VTAM,                                                X
               BRACKET=(BB,EB)
         BNE   BBTEST2                           NO TRY END BRACKET
         MVI   BBSW,C'Y'                         SET BETWEEN BRACKET ??
         B     NOBB                              AND BYPASS
BBTEST2  DS    0H
         TESTCB RPL=(5),                                               X
               AM=VTAM,                                                X
               BRACKET=(NBB,EB)
         BNE   NOBB                              IN BRACKET STATE
         MVI   BBSW,C'Y'                         BETWEEN BRACKETS
NOBB     DS    0H
         L     R7,INAREA                         GET I/O AREA ADDR
         CLI   0(R7),X'F3'                       STRUCTURED FIELD CMDS
         BE    COMMREJ                           NO CAN DO THAT
         SHOWCB RPL=(5),                                               X
               AM=VTAM,                                                X
               FIELDS=(RECLEN),                                        X
               AREA=SLENGTH,                                           X
               LENGTH=4
         L     R2,SLENGTH                        STORE LENGTH
         STH   R2,SCROUT+6                       STORE IN TPUT
         L     R7,INAREA                         GET I/O AREA ADDR
         CNOP  0,4                               ALIGN FULL WORD
*---------------------------------------------------------------------*
*  THIS CODE IS THE "HEART" OF THIS PROGRAM IT TPUTS DATA TO          *
*  THE TERMINAL, TGET'S ANY RESPONSE, THEN SENDS IT TO THE            *
*  APPLICATION.                                                       *
*---------------------------------------------------------------------*
SCROUT   TPUT  (7),1,NOEDIT                      TPUT TO TERMINAL
         L     R7,INAREA                         GET I/O AREA ADDR
         TGET  (7),3000,ASIS,NOWAIT              GET TO UNLOCK KYBD
         CLI   RESPSW,C'Y'                       RESPONSE NEEDED
         BNE   SKIPRESP                          NO SKIP IT
         L     R6,CID                            LOAD CID
         SEND  RPL=(5),                                                X
               ARG=(6),                                                X
               STYPE=RESP,                                             X
               CONTROL=DATA,                                           X
               BRACKET=(NBB,NEB),                                      X
               RESPOND=(NEX,FME,NRRN,NQRESP),                          X
               OPTCD=(SYN,CA)
         B     SKIPRESP
COMMREJ  DS    0H
         L     R6,CID
         SEND  RPL=(5),                                                X
               ARG=(6),                                                X
               STYPE=RESP,                                             X
               CONTROL=DATA,                                           X
               BRACKET=(NBB,NEB),                                      X
               SSENSEO=FI,                                             X
               SSENSMO=03,                                             X
               RESPOND=(EX,FME,NRRN,NQRESP),                           X
               OPTCD=(SYN,CA)
SKIPRESP DS    0H
         L     R6,CID                             LOAD CID
         L     R7,INAREA                          GET I/O AREA ADDR
         RECEIVE RPL=(5),                                              X
               EXIT=RECVEX,                                            X
               AREA=(7),                                               X
               AREALEN=3000,                                           X
               OPTCD=(ASY,ANY,CA,Q)
         MVI   RESETCNT,C'Y'                      RESET COUNTS
EXITRECV DS    0H
         L     R14,SAVE3                          LOAD RETURN ADDR
         BR    R14
ATTNEXIT DS    0H                                 TSO ATTN EXIT
         USING *,R15                              EST ADDR
         L     R12,BASESAVE                       LOAD OLD BASE REG
         DROP  R15                                DROP R15
         USING BASE,R12                           USE R12 AS BASE REG
         STFSMODE ON,,NOEDIT=YES                  RESTORE FULLSCR MODE
         BR    R14                                RETURN TO TSO
         DS    0F
BEGADDR  DS    F
ENDADDR  DS    F
SAVER0   DS    F
SNAP1    DS    0H                                 START SNAP ADDRES
LOOPVAL1 EQU   1680                               14 MIN OF HALF SEC
LOOPVAL2 EQU   1                                  2 SEC OF 2 SEC INTV
RESETCNT DC    C'N'                               RESET LOOP CTRS
         DS    0D                                 ALIGN DBL WORD
WAITINT  DS    CL8                                WAIT INTVL FOR STIMER
HALFSEC  DC    C'00000050'                        WAIT A .5 SEC.
TWOSEC   DC    C'00000200'                        WAIT 2 SECONDS
INAREA   DS    F                                  ADDR OF I/O AREA
OUTAREA  DS    F                                  ADDR OF I/O AREA
DATAAREA DC    CL8' '                             AREA FOR REQSESS
SLENGTH  DS    F                                  MSG LENGTH
SADDR    DS    F                                  MSG ADDR
BASESAVE DS    F                                  SAVE INIT BASE ADDR
CID      DS    F                                  CID VALUE
WAITECB  DS    F'0'                               ECB FOR WAIT/POST
SAVEAREA DS    18F                                PGM SAVE AREA
SAVE2    DS    18F                                SAVEAREA FOR SCIP
SAVE3    DS    F
SAVE31   DS    F
SAVE3A   DS    18F
EXIT     DC    CL1'N'                           EXIT SWITCH
BBSW     DC    CL1'N'                           BRACKET SWITCH
RESPSW   DC    CL1'N'                           RESP SWITCH
FULLSCR  DC    X'07'                            TPUT FULL VALUE
ACBMSG   DC    C'ACB FOR SIMTERM FAILED TO OPEN' NO SESSION ERR MSG
         DC    C' PLU '                                          93319
ACBMSGLU DC    CL8' ',C'  CODE '                                 93319
ACBMSGCD DC    CL2' ',C' '                                       93319
ACBMSGSZ EQU   *-ACBMSG-1    LENGTH OF MESSAGE                   93319
EMSG     DC    C'SESSION NOT AVAILABLE '        NO SESSION ERR MSG
APPLID   DC    CL8'A'        (INIT BLANKS)      APPLID FOR PLU
ECHO1    DC    X'08',CL8'12345678'              APPLID FOR SIMTERM
EMSGLN   EQU   *-EMSG                                            93319
CLEAR    DC    X'F5'                            3270 CLEAR CMD
         DC    X'C1'                            WCC FOR CLEAR
*TCAM*   DC    X'115D7E'
         DC    X'114040'
         DC    X'3C404000'
*WHY?*   DC    X'114040'
         DC    X'13'
CLEARLN  EQU   *-CLEAR                                           93319
STAXLIST STAX  ATTNEXIT,MF=L                     STAX MACRO LIST FORM
         DC    C'REQSESS RPL FOLLOWS:'
SIMRPL1  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL2  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL3  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMRPL4  RPL   ACB=SIMACB,                                             X
               AM=VTAM,                                                X
               NIB=SIMNIB
SIMACB   ACB   AM=VTAM,                                                X
               APPLID=ECHO1,                                           X
               MACRF=LOGON,                                            X
               EXLST=SIMEXT
SIMNIB   NIB   NAME=XXXXXXXX,                                          X
               MODE=RECORD,                                            X
               LISTEND=YES
SIMEXT   EXLST AM=VTAM,                                                X
               SCIP=SCIPEXIT,                                          X
               SYNAD=SYNEXIT,                                          X
               LERAD=LEREXIT
         SPACE 1                                                 93319
HEXTAB   DC    C'0123456789ABCDEF'                               93319
         SPACE 1                                                 93319
UPCASE   DC    X'000102030440060708090A0B0C0D0E0F'  TRANSLATE TABLE
         DC    X'101112131415161718191A1B1C1D1E1F'  FOR INPUT RESPONSE
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         LTORG
         IFGRPL AM=VTAM
         IFGACB AM=VTAM
         IKJCPPL                                 COMMAND PROCESSOR LIST
         YREGS ,                                                 93309
         EJECT ,                                                 93309
SIMTERM  CSECT ,                                                 93309
***********************************************************************
*             ELLIS HOLMAN --                                         *
*                                                                     *
*             MODULE NAME IS APPLTAB                                  *
*                                                                     *
*             FUNCTION:                                               *
*                DESCRIBES THE ACB NAMES USED BY SIMTERM.             *
*                                                                     *
*                                                                     *
*  NOTES:                                                             *
*    1) THE FIRST MACRO IN THIS ASSEMBLY DESCRIBES THE NUMBER OF      *
*       ENTRIES THAT FOLLOW.  THE NUMBER OF ENTRIES MUST MATCH.       *
*                                                                     *
*   MODIFICATION HISTORY:                                             *
*                                                                     *
***********************************************************************
         APPL  SIT0001                                           93319
         APPL  SIT0002                                           93319
         APPL  SIT0003                                           93319
         APPL  SIT0004                                           93319
         APPL  SIT0005                                           93319
         APPL  SIT0006                                           93319
         APPL  SIT0007                                           93319
         APPL  SIT0008                                           93319
         APPL  SIT0009                                           93319
         APPL  SIT0010                                           93319
         APPL  SIT0011                                           93319
         APPL  SIT0012                                           93319
         APPL  SIT0013                                           93319
         APPL  SIT0014                                           93319
         APPL  SIT0015                                           93319
         APPL  SIT0016                                           93319
         APPL  SIT0017                                           93319
         APPL  SIT0018                                           93319
         APPL  SIT0019                                           93319
         APPL  SIT0020                                           93319
         APPL  SIT0021                                           93319
         APPL  SIT0022                                           93319
         APPL  SIT0023                                           93319
         APPL  SIT0024                                           93319
         APPL  SIT0025                                           93319
         ENDAPPL
         END   ,                                                 93309
