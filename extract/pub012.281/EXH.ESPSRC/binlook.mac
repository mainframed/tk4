         SPACE 1
***********************************************************************
**                                                                   **
** BINLOOK - BINARY TABLE LOOKUP - LOOKING FOR MATCH ON R2 ADDRESS   **
**   R1 - POINTER INFO :  A(@FIRST,LEN,@LAST,SIZE),Y(KEYLEN,OFFSET)  **
**   TABLE DEFINED WITH BJTABXX MACRO, DITTO THE POINTERS            **
**                                                                   **
**   VECTORED RETURN:  +0    NO MATCH - RETURN TO R9                 **
**              +4    MATCH - RETURN TO 4(R9), ENTRY ADDRESS IN R14  **
**                                                                   **
***********************************************************************
BINLOOK  MVC   BINLCLC+1(1),16+1(R1)  SET LENGTH OF KEY(-1)
         MVC   BINLCLC+5(1),16+3(R1)  SET KEY OFFSET
*HUGE*   MVN   BINLCLC+4(1),16+2(R1)  SET KEY OFFSET
         LM    R14,R1,0(R1)  LOAD TABLE POINTERS
         EX    0,BINLCLC     LOWER THAN FIRST ENTRY?
         BLR   R9            YES; RETURN NO MATCH
         B     BINLOOP2      CHECK FIRST ENTRY
BINLOOP  AR    R14,R1        ADD INCREMENT TO START ADDRESS
BINLOOP2 CR    R1,R15        ARE WE BELOW ENTRY SIZE ?
         BLR   R9            YES; RETURN NO MATCH
         SRA   R1,1          HALVE THE INCREMENT FOR NEXT TIME
         CR    R14,R0        IS IT INSIDE TABLE?
         BH    BINLSUB       NO; MAKE INCREMENT SMALLER
*  NEXT INSTRUCTION OVERLAID WITH LENGTH AND OFFSET OF KEY
BINLCLC  CLC   0(*-*,R2),*-*(R14)  IS THIS THE ENTRY WE NEED?
         BH    BINLOOP       HIGHER; INCREASE TABLE ENTRY
         BE    4(,R9)        RETURN TO CALLER WITH RESULT IN R14
*NEXT*   BL    BINLSUB       LOWER; NEED SMALLER TABLE ENTRY
BINLSUB  SR    R14,R1        GO DOWN A BIT
         B     BINLOOP2      AND CHECK AGAIN
         SPACE 2
         PUSH  USING
***********************************************************************
**                                                                   **
** BINLOOK - BINARY TABLE LOOKUP - LOOKING FOR MATCH ON R2 -> KEY    **
**   R1 - POINTER INFO :  A(@FIRST,LEN,@LAST,SIZE),Y(KEYLEN,OFFSET)  **
**                                                                   **
**   VECTORED RETURN:  +0    NO MATCH - RETURN TO R9                 **
**              +4    MATCH - RETURN TO 4(R9), ENTRY ADDRESS IN R14  **
**                                                                   **
***********************************************************************
BINLOOK  SUBHEAD BASE=R12
         USING SAVE,R11      PASSED BY CALLER
         MVC   BINDCLC,BINPCLC  REFRESH THE COMPARE INSTRUCTION
         SLR   R0,R0
         IC    R0,16+1(,R1)  GET KEY LENGTH
         BCTR  R0,0          SET EXECUTE LENGTH
         STC   R0,BINDCLC+1  SET LENGTH OF KEY(-1)
         MVC   BINDCLC+5(1),16+3(R1)  SET KEY OFFSET
*HUGE*   MVN   BINDCLC+4(1),16+2(R1)  SET KEY OFFSET
         LM    R14,R1,0(R1)  LOAD TABLE POINTERS
         EX    0,BINDCLC     LOWER THAN FIRST ENTRY?
         BLR   R9            YES; RETURN NO MATCH
         B     BINLOOP2      CHECK FIRST ENTRY
BINLOOP  AR    R14,R1        ADD INCREMENT TO START ADDRESS
BINLOOP2 CR    R1,R15        ARE WE BELOW ENTRY SIZE ?
         BLR   R9            YES; RETURN NO MATCH
         SRA   R1,1          HALVE THE INCREMENT FOR NEXT TIME
         CR    R14,R0        IS IT INSIDE TABLE?
         BH    BINLSUB       NO; MAKE INCREMENT SMALLER
*  NOTE TARGET OF EX OVERLAID WITH LENGTH AND OFFSET OF KEY
BINLCLC  EX    0,BINDCLC     IS THIS THE ENTRY WE NEED?
         BH    BINLOOP       HIGHER; INCREASE TABLE ENTRY
         BE    4(,R9)        RETURN TO CALLER WITH RESULT IN R14
*NEXT*   BL    BINLSUB       LOWER; NEED SMALLER TABLE ENTRY
BINLSUB  SR    R14,R1        GO DOWN A BIT
         B     BINLOOP2      AND CHECK AGAIN
BINPCLC  CLC   0(*-*,R2),*-*(R14)  COMPARE ARGUMENT TO TABLE ENTRY
         POP   USING
