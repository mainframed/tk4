GPDELETE TITLE 'G P D E L E T E  ***  MASKED DATASET DELETION'
***********************************************************************
*                                                                     *
*   THIS MODULE TAKES A PARM, AND INTERPRETS IT AS A MASK.            *
*   IT THEN MATCHES THE MASK AGAINST ALL DATASETS FOR THAT HIGH-      *
*   LEVEL INDEX, AND BUILDS DELETE CARDS IN IDCAMS FORMAT.            *
*                                                                     *
*   A FIRST PARM (SEPARATED BY COMMA OR BLANK) OF DELETE WILL ALSO    *
*   INVOKE IDCAMS TO PERFORM THE DELETION. OTHERWISE THE OUTPUT IS    *
*   WRITTEN TO FILE SYSPUNCH                                          *
*                                                                     *
*   E.G.:   EXEC PGM=GPDELETE,PARM='GP.SF.A**'  WILL CREATE DELETE    *
*                CARDS ON FILE SYSPUNCH, AND CONTROL INFO ON SYSPRINT *
*                                                                     *
*           EXEC PGM=GPDELETE,PARM='DELETE GP.SF.A**' WILL INVOKE     *
*                IDCAMS TO DELETE. RESULTS SHOWN ON SYSPRINT          *
*                                                                     *
*   ADDITIONAL CARDS ARE READ FROM FILE SYSIN, IN ONE OF THREE FORMS: *
*         GPXXX.XXXX   PROCESS WITH PARM OPTION (DELETE OR PUNCH)     *
*         LIST GPXXX.XXXX  PRINT AND PUNCH ONLY, NO DELETE            *
*         DELETE GPXXX.XXXX  PRINT AND DELETE, NO PUNCH OUTPUT        *
*                                                                     *
*   DATASET MASKS ARE PROCESSED AS FOLLOWS:                           *
*                                                                     *
*   1) A NAME WITHOUT WILDCARDS IS PROCESSED AS IS                    *
*                                                                     *
*   2) A ? MATCHES ANY CHARACTER OTHER THAN BLANK AND PERIOD          *
*                                                                     *
*   3) A % MATCHES ANY CHARACTER                                      *
*                                                                     *
*   4) A * MATCHES THE REMAINDER OF THE INDEX LEVEL                   *
*                                                                     *
*   5) A TRAILING ** MATCHES ANY NON-BLANKS                           *
*                                                                     *
*      ABC.DEF                      EXACT NAME; PROCESSED AS IS       *
*      ABC.DE*     MATCHES ABC.DEF, BUT NOT ABC.D OR ABC.DEF.G        *
*      ABC.???     MATCHES ABC.DEF, BUT NOT ABC.DE OR ABC.DEF.G       *
*      ABC.*.*     MATCHES ABC.DEF.G, BUT NOT ABC.DEF                 *
*      ABC.D**     MATCHES ABC.DE, ABC.DEF, ABC.DEF.G                 *
*      ABC.%%%%    MATCHES ABC.DEFG, ABC.DE.F, BUT NOT ABC.DEF.G      *
*      ABC.%%%%*   MATCHES ABC.DEF.G, ABC.DEF.GH, BUT NOT ABC.DEF.G.H *
*                                                                     *
*  DUE TO SYSTEM CONSTRAINTS, THE HIGH-LEVEL INDEX MAY NOT BE MASKED  *
*                                                                     *
***********************************************************************
*                                                                     *
*  ENTRY POINT GPLIST FUNCTIONS AS DESCRIBED ABOVE, BUT DEFAULTS TO   *
*  LIST MODE.                                                         *
*                                                                     *
***********************************************************************
         SPACE 2
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 2
         PRINT NOGEN
GPDELETE PGMHEAD ZERO12,BASE=(R11,R12), BASE, SAVE AREA, ETC.          *
               ENTRY=GPLIST,ENTNO=ENTNO,EID=SHORT,                     *
               CSECT=CSECT,PARM=R9,AM=24,RM=24                  GP99063
         ST    R13,XIDSAVE   PASS SAVE AREA TO EXIT             GP99063
         SERVINIT ,          LOAD AND CALL THE SERVICE ROUTINE
         SERVCALL LPALD,=CL8'@PRINTER'   GET THE PRINTER        GP99063
         ST    R0,@PRINTER
         SERVCALL LPALD,=CL8'@INPREAD'   GET THE CARD READER    GP99063
         ST    R0,@INPREAD
         CLI   ENTNO,1       LIST FUNCTION?                     GP99167
         BNE   NOTLIST                                          GP99167
         NI    OPTFG,255-FGGDEL  RESET DELETE OPTION            GP99167
         OI    OPTFG,FGLIST  SET LOCAL LIST                     GP99167
NOTLIST  LA    R9,0(,R9)     CLEAN PARM POINTER                 GP99167
         LTR   R9,R9         ANY?
         BZ    DOINIT        NO?
         L     R9,0(,R9)     LOAD PARM ADDRESS
         LA    R9,0(,R9)     CLEAN IT
         LTR   R9,R9         LOAD AND TEST PARM ADDRESS
         BZ    DOINIT        NO PARM - ALL INPUT FROM SYSIN
         SLR   R8,R8
         ICM   R8,3,0(R9)    TEST PARM LENGTH
         BNP   DOINIT        NO PARM - ALL INPUT FROM SYSIN
         LA    R9,2(,R9)     POINT TO CURRENT TEXT FOR EASIER LOGIC
         LA    R1,0(R8,R9)   POINT PAST END IF NO SEPARATOR
         TRT   0(R8,R9),SEPTAB  LOOK FOR SEPARATOR
         BNZ   PARMSEP       SEPARATOR; EXAMINE
         CLC   =C'DEL',0(R9)  POSSIBLE REQUEST?
         BNE   PARMISDS      NO; PROCESS AS MASK
PARMSEP  LR    R15,R9        SAVE START OF OPERAND FIELD
         LA    R9,1(,R1)     CONTINUE SCAN AFTER SEPARATOR
         SR    R1,R15        SET LENGTH OF OPERAND TO BE SKIPPED
         SR    R8,R1         SET RESIDUAL LENGTH
         BCTR  R8,0          ALLOW FOR SEPARATOR
         CH    R1,=H'6'      TOO LONG?
         BH    NOPARM        YES; INVALID
         CH    R1,=H'3'      TOO SHORT?
         BL    NOPARM
         BCTR  R1,0
         EX    R1,PARMISDL   CHECK FOR DELETE
         BNE   NOPARM        INVALID
         OI    OPTFG,FGGDEL  SET GLOBAL DELETE OPTION
PARMISDS LA    R0,L'DSMASK   MAX LENGTH
         LTR   R8,R8         ANYTHING LEFT?
         BNP   DOINIT        NO; MUST READ FROM SYSIN
         CR    R8,R0         VALID LENGTH
         BH    NOPARM
         BCTR  R8,0
         EX    R8,MOVEPARM   MOVE PARM
         B     DOINIT
PARMISDL CLC   0(*-*,R15),=C'DELETE'  CHECK FOR DELETE OPTION
MOVEPARM MVC   DSMASK(0),0(R9)  MOVE PARM (=DSMASK)
MOVEMASK MVC   DSLEVEL(0),DSMASK MOVE PRE-MASK PORTION OF NAME
NOPARM   WTO   'GPDELETE - INVALID PARM FIELD',ROUTCDE=13       GP99063
         ABEND 34
         SPACE 1
DOINIT   L     R2,=X'00010000'  GET MAXIMUM HALFWORD AREA + 1
         GETMAIN R,LV=(R2)      UNCONDITIONAL GET
         LR    R14,R1           COPY START OF AREA
         LR    R14,R2           COPY SIZE
         SLR   R5,R5            ZERO OTHER LENGTH
         MVCL  R14,R4           CLEAR AREA TO ZEROES
         ST    R1,@WORK         SAVE AS CIR WORK AREA
         BCTR  R2,0             MAKE MAXIMUM SUPPORTED SIZE
         STH   R2,0(,R1)        SAVE IT
         PRTOPEN PR1WORK     OPEN CONTROL FILE FOR OUTPUT
         BXLE  R15,R15,HAVEOUT  SKIP ERROR IF OK
         MVC   BADOUMSG+4+29(8),PR1WORK                         GP99063
BADOUWTO WTO   MF=(E,BADOUMSG)
         ABEND 1403
BADOUMSG VCON 'UNABLE TO OPEN CONTROLS FILE XXXXXXXX'
         SPACE 1
HAVEOUT  PRTV  (R1),MODE=DEBUG  PRINT MESSAGE: PRT OPEN
         MVC   BADOUMSG+19(8),=C' DELETE '  JUST IN CASE
         MVC   BADOUMSG+4+29(8),PUNWORK                         GP99063
         PRTOPEN PUNWORK,DEV=2  OPEN PUNCH FILE
         BXH   R15,R15,WARNERR
         PRTV  (R1),MODE=DEBUG   PRINT MESSAGE: PUN OPEN
         B     HAVEPUN
WARNERR  WTO   MF=(E,BADOUMSG)                                  GP99063
         OI    CCODE+L'CCODE-1,4  SET MINOR ERROR
HAVEPUN  DEVTYPE SYSIN,NUMVOLS  IS THERE A SYSIN DD ?           GP99063
         BXH   R15,R15,GETMASK  NO; PROCESS PARM ONLY
         INPOPEN SYSIN       OPEN IT
         B     GETMASK       BUT PROCESS THE PARM FIRST
BADMASK  PRTV  BADMKMSG       SHOW ERROR
         OI    CCODE+L'CCODE-1,12  SET MAJOR ERROR
         B     EXITALL       AND QUIT
         SPACE 1
BADMKMSG VCON ' ABOVE REQUEST IS SYNTACTICALLY INVALID'
SYNMOVE  MVC   DSMASK(*-*),0(R4)  SAVE PRESUMED DSN
         SPACE 1
NONBLANK CLI   0(R3),C' '    IS THIS A BLANK?
         BNE   4(R9)         NO; RETURN
         BXLE  R3,R14,NONBLANK  TRY AGAIN
         BR    R9            VECTORED RETURN - NO MATCH
         SPACE 1
NXTBLANK CLI   0(R3),C' '    IS THIS A BLANK?
         BE    4(R9)         YES; RETURN
         BXLE  R3,R14,NXTBLANK  TRY AGAIN
         BR    R9            VECTORED RETURN - NO MATCH
         SPACE 1
GETSYN   PRTROOM 10          MAKE SURE WE HAVE ENOUGH FOR A BIT
         PRTSPACE 3          SPACE A BIT
         MVC   DSNFG,OPTFG   COPY GLOBAL OPTIONS; RESET PRIOR LOCAL
         MVC   DSMASK,DSMASK-1    CLEAR PREVIOUS ENTRY
         MVC   DSLEVEL,DSLEVEL-1  CLEAR PREVIOUS ENTRY
GETSYN2  INPGET ,            GET NEXT CARD
         BXH   R15,R15,EXITALL  QUIT IF DONE                    GP99167
         MVC   CARDIN,0(R1)  MOVE THE RETURN
         PRTV  PRTCARD       ECHO THE CARD IMAGE
         LA    R3,CARDIN
         CLI   0(R3),C'*'    COMMENTS CARD?
         BE    GETSYN2       YES; PRINTED; GET ANOTHER
         LA    R15,71(,R3)   SET END SCAN
         LA    R14,1         SET SCAN INCREMENT
         BAS   R9,NONBLANK   FIND FIRST NON-BLANK
           B   GETSYN2       SKIP IF ALL BLANK
         CLC   =C'LIST ',0(R3)  IS IT A LIST REQUEST?
         BE    GETSYNL       YES; SET IT
         CLC   =C'DEL',0(R3)   IS IT A DELETE REQUEST?
         BE    GETSYND       PERHAPS
         CLC   =C'DEBUG',0(R3)  SET DEBUG MODE ON
         BE    GETSYNB
         CLC   =C'TEST',0(R3)
         BNE   GETSYNM       NO; MOVE AS DS MASK
GETSYNB  OI    OPTFG,FGBUG   SET DEBUG MODE ON
         PRTF  ' ***** DEBUG MODE NOW ON *****',MODE=DEBUG
         B     GETSYN2       NEXT CARD
GETSYND  OI    DSNFG,FGLDEL  SET LOCAL DELETE ON
         B     GETSYNE       GET NEXT OPERAND
GETSYNL  NI    DSNFG,255-FGGDEL  RESET DELETE OPTION
         OI    DSNFG,FGLIST  SET LOCAL LIST
GETSYNE  BAS   R9,NXTBLANK   FIND NEXT BLANK
           B   BADMASK       ERROR
         BAS   R9,NONBLANK   NEXT NON-BLANK
           B   BADMASK       ERROR
GETSYNM  LR    R4,R3         SAVE OPERAND START
         BAS   R9,NXTBLANK   FIND NEXT BLANK
         NOP   0             ACCEPTABLE IF NO MORE
         SR    R3,R4         GET OPERAND LENGTH
         CH    R3,=Y(L'DSMASK)  NOT TOO LONG?
         BH    BADMASK       TOO LONG, TOO BAD
         SH    R3,=H'1'      ADJUST AND TEST
         BM    BADMASK       TOO BAD
         EX    R3,SYNMOVE    MOVE
         SPACE 1
GETMASK  CLI   DSMASK,C' '   NULL OPERAND?
         BE    EXITMSG       YES; SKIP (POSSIBLE NULL PARM)
         LA    R14,DCDELETE                                     GP99167
         TM    OPTFG,FGLIST  LIST ONLY ?                        GP99167
         BZ    MAKEDC                                           GP99167
         LA    R14,DCLIST                                       GP99167
MAKEDC   MVC   DSDELETE,0(R14)  SET ANNOTATION FOR LIST OR DELETE
         L     R8,@WORK      GET WORK AREA BACK
         XC    2(6,R8),2(R8)  CLEAR PARTIAL RETURN
         LA    R15,L'DSMASK  POINT TO FULL MASK
         LA    R14,DSMASK(R15)  POINT PAST NAME
LENCHECK BCTR  R14,0         BACK UP
         CLI   0(R14),C' '   TRAILING BLANK?
         BNE   LENHAVE
         BCT   R15,LENCHECK  TRY AGAIN
LENHAVE  ST    R15,LENMASK   REMEMBER THE MASK LENGTH
         LA    R1,DSMASK+L'DSMASK  SET FOR FULL NAME
         LA    R15,DSMASK+1  SAVE TO GET LENGTH
         SLR   R3,R3         SAVE INDEX POINT
         LA    R14,DSMASK    SET START OF SCAN
GETMASKL SLR   R2,R2         SET FOR TEST
         TRT   0(L'DSMASK+1,R14),MSKTAB   LOOK FOR MASK CHARACTERS
         LTR   R2,R2         DID WE FIND ANYTHING SPECIAL?
         BNZ   SPECEND       YES; EXAMINE IT
         LTR   R1,R3         WAS THERE AN INDEX POINT ?
         BNP   BADMASK       NO; INVALID REQUEST (CIR LIMITATION)
         CLI   1(R1),C' '    WAS IT INDEX + SPACE ?
         BE    SETMSKLN      YES; TREAT AS NORMAL END
         MVI   LENMASK+L'LENMASK-1,44  FORCE FULL COMPARE
         B     SETMSKLN      USE INDEX AS END OF REQUEST
SPECEND  CLM   R2,1,MSKTAB+C'.'  DID WE FIND AN INDEX POINT?
         BNE   SETMSKLN      NO; DETERMINE MASK LENGTH
         LR    R3,R1         SAVE INDEX LOCATION
         LA    R14,1(,R1)    SET NEXT SCAN START
         B     GETMASKL      AND TRY AGAIN
         SPACE 1
SETMSKLN LTR   R1,R3         BACK-UP TO LAST INDEX LEVEL
         BNP   NOMATCH       TOO BAD
         SR    R1,R15        LENGTH TO BE MOVED
         BM    BADMASK       NONE?
         EX    R1,MOVEMASK   MOVE TO MASK FIELD
CALLCIR  L     R15,LENMASK   GET MASK LENGTH
         CVD   R15,NUMVOLS   MAKE PACKED
         MVC   DCMASKLN(4),=X'40202120'
         ED    DCMASKLN(4),NUMVOLS+6  SHOW MASK LENGTH
         ZAP   NUMVOLS,=P'0'  INITIALIZE AS COUNTER
         PRTV  MASKLE,MODE=DEBUG   DISPLAY MASK USED
         PRTV  CIRCA,MODE=DEBUG    SHOW CIR CALL NAME
         LA    R1,CIRPARM    PARM LIST
         CALLTSSR EP=IKJEHCIR
         BXH   R15,R15,SHONOLOC  FAILED
         LA    R8,4(,R8)     GET RETURNED DATA
         TM    0(R8),X'FF'   ANYTHING FILLED IN?
         BNM   EXIT          NO; TOO BAD
         USING ENTDSECT,R8   DECLARE SINGLE DSECT
NEXTDSN  CLI   ENTATTR,X'FF'   END OF LIST?
         BE    EXIT
         CLI   ENTATTR,C'A'  NON-VSAM ENTRY?
         BNE   NONOVSAM      NO; SKIP TO NEXT ENTRY
         BNE   SKIPDSN       NO; SKIP TO NEXT ENTRY
         MVC   SETCLEAR,SETCLEAR-1  CLEAR REST OF LINE
         SLR   R7,R7
         ICM   R7,1,ENTVOLCT LOAD VOLUME COUNT
         BZ    SHONOVOL
         MVC   SETPSER,ENTVOLSR MOVE FIRST SERIAL
         UNPK  SETPTYPE(9),ENTVDEVT(5)
         TR    SETPTYPE,HEXTRTAB  MAKE PRINTABLE
         MVI   SETPTYPE+L'SETPTYPE,C' '
SHONOVOL CVD   R7,NUMVOLS    MAKE PACKED COUNT
         UNPK  SETC3#(3),NUMVOLS
         OI    SETC3#+2,C'0'
         MVC   SETDSN,ENTDSN  MOVE DATASET NAME
         MVC   SETNOSCR,SETNOSCR-1  CLEAR NOSCRATCH FIELD
         SPACE 1
         LA    R0,1          SET INCREMENT
         LA    R1,L'SETDSN-1+SETDSN   SET END OF DSN
         LR    R2,R0         DITTO FOR MASK
         L     R3,LENMASK    GET MASK LENGTH
         LA    R15,SETDSN    POINT TO NAME TO BE CHECKED
         LA    R14,DSMASK    POINT TO MASK
         LA    R3,DSMASK-1(R3)  LAST BYTE OF MASK
COMPMASK CLI   0(R14),C'%'   ACCEPT ANYTHING IN THIS POSITION?
         BE    BOTHUP        YES; INCREMENT MASK AND NAME
         CLC   0(1,R14),0(R15)  MASK AND DSN MATCH?
         BE    BOTHUP        YES; INCREMENT
         CLI   0(R14),C'?'   WITHIN LEVEL MATCH?
         BNE   COMPAST       NO; CHECK FOR ASTERISKS
         CLI   0(R15),C' '   IS THE DSMASK FINISHED?
         BE    NOMATCH       YES; NOT MATCHED
         CLI   0(R15),C'.'   IS THE LEVEL FINISHED?
         BE    NOMATCH       YES; ALSO NO MATCH
         B     BOTHUP        ELSE ACCEPT AND INCREMENT
COMPAST  CLI   0(R14),C'*'   ASTERISK REQUEST?
         BNE   NOMATCH       NO; BYTE IS UNMATCHED
         CLI   1(R14),C'*'   GENERAL MATCH FROM HERE ON?
         BE    ACCEPT        YES; PROCESS
         CLI   1(R14),C' '   LIMIT TO THIS LEVEL?
         BNE   COMPASTL      NO
COMPASTB CLI   0(R15),C'.'   REACHED NEXT INDEX LEVEL?
         BE    NOMATCH       YES; NOT A MATCH
         CLI   0(R15),C' '   REACHED END OF NAME ?
         BE    ACCEPT        YES; FULL MATCH
         BXLE  R15,R0,COMPASTB  SKIP TO NEXT LEVEL
         B     ACCEPT        DSN MISSING LEVEL; ACCEPT
COMPASTL CLI   0(R15),C'.'   REACHED NEXT INDEX LEVEL?
         BE    BACKUP        YES; INCREMENT BOTH
         CLI   0(R15),C' '   REACHED END OF NAME ?
         BE    NOMATCH       YES; NOT A MATCH
         BXLE  R15,R0,COMPASTL  SKIP TO NEXT LEVEL
         B     NOMATCH       DSN MISSING LEVEL; NO ACCEPT
BACKUP   BCTR  R15,0         NEED TO MATCH PERIODS
BOTHUP   BXH   R14,R2,ACCEPT  ACCEPT IF MASK EXHAUSTED
         BXLE  R15,R0,COMPMASK  ELSE TRY AGAIN
         SPACE 1
ACCEPT   CLC   =C'MIGRAT',SETPSER  MIGRATED?
         BE    MIGVOL        YES; DEVTYPE PARTLY VALID          GP99063
         CLI   ENTVDEVT+2,X'80' ALL TAPE ENTRIES?
         BNE   MOVEVOL       NO; SKIP
         SPACE 1
         MVC   SETNOSCR,NOSCR  REQUEST NOSCRATCH OPTION
         MVC   SETC3DN,=CL6'9-TRK '  SET REAL OLDIE
         TM    ENTVDEVT+3,X'80' CARTRIDGE?
         BZ    MOVEVOL       NO; LEAVE 9-TRACK MSG
         MVC   SETC3TK(21),=C'18-TRACK CARTRIDGE(S)'   PRESET
         MVC   SETC3DN,DEN18K
         TM    ENTVDEVT+1,X'04' COMPRESSED?
         BZ    HAVEDEN
         MVC   SETC3DN,DEN18KC  'COMPRESSED'
HAVEDEN  CLI   ENTVDEVT+3,X'80' CART8 ?
         BE    MOVEVOL       YES
         MVC   SETC3TK,=C'36'  ELSE ASSUME 3490
         B     MOVEVOL                                          GP99063
         SPACE 1
MIGVOL   MVI   SETPMIG,C'1'  SET FOR TYPE 1                     GP99063
         CLI   ENTVDEVT+2,X'20'  DASD?                          GP99063
         BE    MOVEVOL       YES                                GP99063
         MVI   SETPMIG,C'2'  SET FOR TYPE 2                     GP99063
         SPACE 1                                                GP99063
MOVEVOL  AP    OUTSEQ,=P'100'
         UNPK  DELETCMD+72(8),OUTSEQ  MAKE OUTPUT SEQUENCE
         OI    DELETCMD+72+7,C'0'
         OI    DSNFG,FGONE   SHOW AT LEAST ONE MATCH FOUND
         PRTV  SETPRINT      PRINT THE CARD IMAGE
         TM    DSNFG,FGGDEL+FGLDEL  GLOBAL OR LOCAL DELETE REQUEST?
         BZ    SKIPDEL       NEITHER; JUST PUNCH
         PRTF  ' INVOKING IDCAMS DELETE',MODE=DEBUG
         ICM   R15,15,@IDCAMS  WAS IT LOADED PREVIOUSLY?
         BNZ   DELETE        YES; INVOKE IT
         LOAD  EPLOC==CL8'IDCAMS'  LOAD IDCAMS
         ST    R0,@IDCAMS    SAVE
         LR    R15,R0        MAKE ENTRY
         SPACE 1
DELETE   NI    EXFLAGS,EXFGLOB  RESET TEMPORARY FLAGS
         LA    R1,AMSPARM    GET PARAMETER LIST
         BASR  R14,R15       INVOKE IDCAMS
         BXLE  R15,R15,SKIPDEL  DELETE WENT OK
         SRL   R15,1
         CH    R15,CCODE     LARGER THAN PRIOR ERROR CODE?
         BNH   EXITALL       NO
         STH   R15,CCODE     ELSE SET IT
         B     EXITALL       AND QUIT
         SPACE 1
SKIPDEL  PRTF  DELETCMD,DEV=2  OUTPUT THE DELETE CARD           GP99063
         SPACE 1
SKIPDSN  SLR   R14,R14       CLEAR FOR IC
         IC    R14,ENTVOLCT  GET NUMBER OF VOLUME ENTRIES
         MH    R14,=Y(ENTVLEN)  LENGTH OF THESE ENTRIES
         LA    R8,ENTLEN(R14,R8)  GO TO NEXT ENTRY
         B     NEXTDSN       TRY NEXT ENTRY
         SPACE 1
NOMATCH  MVC   NOMDSN,SETDSN  COPY ENTRY DSN
         PRTV  NOMPRINT,MODE=DEBUG   PRINT FAILED ENTRY
         B     SKIPDSN       GO TO NEXT ONE
         SPACE 1
NONOVSAM MVC   NOVDSN,ENTDSN
         MVC   NOVTYPE,ENTATTR
         PRTV  NOVPRINT,MODE=DEBUG  SHOW OTHER CATALOG ITEMS
         B     SKIPDSN
         SPACE 1
SHONOLOC UNPK  MSGLOCOD(3),CPLOCRC(2)
         TR    MSGLOCOD,HEXTRTAB
         MVI   MSGLOCOD+L'MSGLOCOD,C' '
         MVC   MSGLOCDS,DSLEVEL SHOW WHAT
         PRTV  MSGLOCPR      PRINT IT
         OI    CCODE+L'CCODE-1,12   SET ERROR CODE
         B     EXITMSG       SKIP 'NO MATCH' MSG
         SPACE 1
EXIT     TM    DSNFG,FGONE   MATCH FOUND?
         BNZ   EXITMSG
         PRTF  ' ***** NO MATCHES FOUND *****'
EXITMSG  B     GETSYN        LOOK FOR ANOTHER
         SPACE 1
EXITALL  ICM   R15,15,@IDCAMS  WAS IT LOADED PREVIOUSLY?
         BZ    EXITDEL       YES; GET RID OF IT
         DELETE  EPLOC==CL8'IDCAMS'  LOAD IDCAMS
EXITDEL  SERVTERM ,          CLOSE AND FREE EVERYTHING
         LH    R15,CCODE     LOAD RETURN CODE
         PGMEXIT RC=(R15)    SET RETURN CODE AND EXIT
         EJECT ,
***************************************************************
* IDCAMS ASYNCHRONOUS EXIT ROUTINE
***************************************************************
         SPACE 1
         PUSH  USING
         DROP  ,
XIDCAMS  STM   R14,R12,12(R13)
         LR    R12,R15
         USING XIDCAMS,R12
         LA    R9,XIDSAVE    SET MY SAVE AREA
         ST    R13,4(,R9)    MAKE BACK LINK
         ST    R9,8(,R13)    MAKE DOWN LINK
         LR    R13,R9        MAKE ACTIVE SAVE AREA
         L     R11,0(,R13)   GET PASSED SAVE AREA ADDRESS       GP99063
         USING SAVE,R11      AND DECLARE IT                     GP99063
         SR    R15,R15                                          GP99063
         LM    R3,R5,0(R1)   LOAD PARM LIST ADDRESSES
         SLR   R14,R14
         IC    R14,0(,R4)    LOAD FUNCTION
         B     *+4(R14)
         B     XEXIT      OPEN           CODE IN R14 = X'00'
         B     XEXIT      CLOSE          CODE IN R14 = X'04'
         B     XGET                      CODE IN R14 = X'08'
         B     XPUT                      CODE IN R14 = X'0C'
         SPACE 1
XGET     TM    EXFLAGS,EXFGET            X'FF' = PRIOR GET ISSUED ?
         BNZ   XGET04                    YES, SET RET CODE = 04
         LA    R1,DELETCMD   GET ADDRESS OF DELETE REQUEST
         LA    R2,L'DELETCMD   AND LENGTH
         STM   R1,R2,0(R5)   PLACE INTO IDCAMS LIST
         OI    EXFLAGS,EXFGET            X'FF' = A GET HAS BEEN ISSUED
         B     XEXIT
         SPACE 1
XGET04   LA    R15,4                     SET REG 15 = X'00000004'
         B     XEXIT
         SPACE 1
XPUT     TM    EXFLAGS,EXFSUPP+EXFSKIP  ANY FORM OF SUPPRESSION?
         BNZ   XEXIT         YES; DON'T BOTHER WITH REST
         LM    R4,R5,0(R5)
         LA    R4,1(,R4)     SKIP CARRIAGE CONTROL CHARACTER    GP95268
         BCTR  R5,0          FIX LENGTH                         GP95268
         ICM   R5,8,=C' '    BLANK FILL                         GP95268
         LA    R14,AMSTEXT
         LA    R15,L'AMSTEXT
         MVCL  R14,R4
         TM    EXFLAGS,EXFMALL  PRINT ALL MESSAGES?
         BNZ   XPUTMALL      YES; PUT THEM ALL OUT
         CLC   =C'IDCAMS ',AMSTEXT  IDCAMS TITLE ?
         BE    XEXIT         YES; SKIP
         CLC   AMSTEXT+1(L'AMSTEXT-1),AMSTEXT  ALL BLANK OR SOMETHING?
         BE    XEXIT         YES; SKIP
         CLC   DELETCMD(8),AMSTEXT  OUR REQUEST?
         BE    XEXIT         YES; SKIP
         CLC   =C'IDC0002I',AMSTEXT  AMS PGM END
         BE    XEXIT         YES; SKIP
*PRINT   CLC   =C'IDC3012I',AMSTEXT   DATASET NOT FOUND?
*ALL     BE    XPUTSKIP      YES; THAT'S JUST FINE AND DANDY
*RESULT  CLC   =C'IDC0550I',AMSTEXT   DATASET DELETED?
*MSGS    BE    XPUTSKIP      YES; THAT'S JUST FINE AND DANDY
XPUTMALL PRTV  AMSPRINT      PRINT MESSAGE                      GP99063
         SR    R15,R15                                          GP99063
         B     XEXIT
XPUTSKIP OI    EXFLAGS,EXFSKIP  SKIP THIS AND REMAINING MESSAGES
         SPACE 2
***************************************************************
* IDCAMS ASYNC EXIT ROUTINE - EXIT, CONSTANTS & WORKAREAS
***************************************************************
         SPACE 1
XEXIT    L     R13,4(,R13)   GET CALLER'S SAVE AREA
         L     R14,12(,R13)
         RETURN (0,12)       RESTORE AND RETURN TO IDCAMS
         POP   USING
         SPACE 1
XIDSAVE  DC    18F'0'                  ASYNC ROUTINES REG SAVEAREA
         SPACE 1
AMSPRINT VCON ' ',END=AMSPRINX
AMSTEXT  DC    CL132' '
         VCON *END
         SPACE 1
AMSPARM  DC    A(HALF00,HALF00,HALF00,X'80000000'+ADDRLIST)
         SPACE 1
ADDRLIST DC    F'2'
         DC    A(DDNAME01)
         DC    A(XIDCAMS)
DELADDR  DC    A(DELETCMD)
         DC    A(DDNAME02)
         DC    A(XIDCAMS)
         DC    A(0)
         SPACE 1
HALF00   DC    H'0'
DDNAME01 DC    CL10'DDSYSIN   '
DDNAME02 DC    CL10'DDSYSPRINT'
         SPACE 1
EXFLAGS  DC    X'08'
EXFGET   EQU   X'01'         PRIOR GET WAS ISSUED
EXFNOM   EQU   X'04'         SUPPRESS ERROR WTOS
EXFRET   EQU   X'08'         NO ABEND; RETURN WITH COND.CODE
EXFMALL  EQU   X'10'         ALWAYS PRINT MESSAGES
EXFSUPP  EQU   X'20'         ALWAYS SUPPRESS MESSAGES
EXFSKIP  EQU   X'40'         SKIP SUBSEQUENT MESSAGES
EXFGLOB  EQU   EXFMALL+EXFSUPP+EXFRET  GLOBAL FLAGS
         SPACE 2
         LTORG ,
         SPACE 1
NUMVOLS  DC    D'0'          PL8
@IDCAMS  DC    A(0)          IDCAMS LOAD ADDRESS
LENMASK  DC    F'0'          LENGTH OF MASK
CCODE    DC    H'0'          PROGRAM RETURN CODE
OUTSEQ   DC    PL4'0'        OUTPUT CARD SEQUENCE
HEXTAB   DC    C'0123456789ABCDEF'     1/2
HEXTRTAB EQU   HEXTAB-C'0'             2/2
         SPACE 1
SYSIN    INPWORK SYSIN,WIDTH=80,EODAD=EXITALL                   GP99063
         SPACE 1
PR1WORK  PRTWORK SYSPRINT,*USER
         SPACE 1
PUNWORK  PUNWORK SYSPUNCH
         SPACE 1
PHD1     VCON   '1G P D E L T R E E  -  REQUESTS AND RESULTS',END=PHD1X
         DC    CL50' '
HEADDATE DC    CL8' ',C'  PAGE' RUN DATE
HEADPAGE DC    CL4' '
         VCON *END
         SPACE 1
PHD2     VCON '0'
         SPACE 1
MSGLOCPR VCON ' *** DSN LOCATE FAILED WITH CODE ',END=MSGLOCPX
MSGLOCOD DC    C'XX',C' (HEX) ***  '
MSGLOCDS DC    CL44' '
         VCON *END
         SPACE 1
MASKLE   VCON ' ',END=MASKLEX
         DC    C'CATALOG PROCESSING WITH'
DCMASKLN DC    X'40202120',C' BYTE MASK : '
DSMASK   DC    CL44' '  1/2  REQUESTED DSN
         VCON *END
         DC    C' '     2/2  FOR OVERSCANNING
CIRCA    VCON   '                    IKJEHCIR CALLED WITH ',END=CIRCAND
DSLEVEL  DC    CL44' '       AS ALTERED FOR CIR LOOKUP
         VCON *END
PRTCARD  VCON ' SYSIN REQUEST : ',END=PRTCARDX
CARDIN   DC    CL80' '       INPUT CARD IMAGE
         VCON *END
NOSCR    DC    C'NOSCRATCH'  BYPASS TAPE MOUNT(S)
SETPRINT VCON '     ',END=SETPRINX
DELETCMD DC    CL80' '
         ORG   DELETCMD+1
DSDELETE DC    C'DELETE',C' '                                   GP99167
SETDSN   DC    CL44' ',C' PURGE '
SETNOSCR DC    CL(L'NOSCR)' '    OPTIONAL NOSCRATCH OPERAND
         ORG   DELETCMD+L'DELETCMD
         DC    C' '          SETCLEAR - 1                 1/2
SETPSER  DC    CL6' '        VOL-SER                            GP99063
SETPMIG  DC    C' ',C' '       MIGRATION TYPE OR BLANK          GP99063
SETPTYPE DC    CL8' ',C' '
SETC3#   DC    CL3' ',C' '
SETC3DN  DC    CL6'9-TRK '
SETC3TK  DC    CL2'  ',C' '       18/36 TRACK
SETC3CT  DC    CL18' '            TRACK CARTRIDGES
SETCLEAR EQU   SETPSER,(*-SETPSER),C'C'                   2/2
         VCON *END
DCDELETE DC    CL(L'DSDELETE)'DELETE'                           GP99167
DCLIST   DC    CL(L'DSDELETE)'  LIST'                           GP99167
NOMPRINT VCON '                      ',END=NOMPRINX
         DC    C'COMPARE FAILED FOR '
NOMDSN   DC    CL44' '
         VCON *END
NOVPRINT VCON ' ',END=NOVPRINX
         DC    CL28' ',C'VSAM TYPE '
NOVTYPE  DC    C' ',C' '
NOVDSN   DC    CL44' '
         VCON *END
DEN18K   DC    CL(L'SETC3DN)'NOCOMP'
DEN18KC  DC    CL(L'SETC3DN)'COMP'
SETERRP  VCON ' ',END=SETERRPX
SETERR   DC    CL80'*****>>>>>'
         VCON *END
         SPACE 1
CIRPARM  DS    0A            IKJEHCIR PARAMETER LIST
         DC    X'06,00,00'   OPTION: DATASET AND VOLUME LOOKUP
CPLOCRC  DC    X'00'         LOCATE ERROR CODE RETURNED
         DC    A(DSLEVEL,0)
@WORK    DC    A(0)          GETMAINED WORK AREA
         DC    A(CIRSAVE,0)
CIRSAVE  DC    18F'0'
         SPACE 1
SEPTAB   DC    256AL1(0)     TABLE OF PARM SEPARATOR CHARACTERS
         ORG   SEPTAB+C' '   SPACE
         DC    C' '
         ORG   SEPTAB+C','   COMMA
         DC    C','
         ORG   SEPTAB+C';'   SEMI-COLON
         DC    C';'
         ORG   ,
         SPACE 1
MSKTAB   DC    256AL1(0)     TABLE OF MASK & END CHARACTER IN DSN
         ORG   MSKTAB+C'.'   INDEX POINT
         DC    C'.'
         ORG   MSKTAB+C'?'   CHARACTER MATCH
         DC    C'?'
         ORG   MSKTAB+C'%'   CHARACTER MATCH
         DC    C'%'
         ORG   MSKTAB+C'*'   LEVEL OR NAME MATCH
         DC    C'*'
         ORG   ,
         SPACE 1
         PRINT NOGEN
ENTDSECT DSECT ,             ONE RETURNED CIR ENTRY
ENTATTR  DS    C             'A' - NON-VSAM   X'FF' - END OF LIST
ENTDSN   DS    CL44          DATASET NAME
ENTVOLCT DS    X             NUMBER OF VOLUME ENTRIES FOLLOWING
ENTVDEVT DS    XL4           DEVICE TYPE
ENTVOLSR DS    CL6           SERIAL
ENTVFILE DS    XL2           FILE NUMBER
ENTVLEN  EQU   *-ENTVDEVT    LENGTH OF ONE VOLUME ENTRY
ENTLEN   EQU   ENTVDEVT-ENTATTR  FIXED LENGTH PER ENTRY
         LTORG ,
         SPACE 1
PATCHER  DC    30S(*)        MINI-PATCH
         SPACE 1
SAVE     DSECT ,
DB       DC    2D'0'         WORK AREA
@SERVICE DC    A(0)
@PRINTER DC    A(0)
@INPREAD DC    A(0)
         SPACE 1
ENTNO    DC    X'00'         0:DELETE  1:LIST                   GP99167
OPTFG    DC    X'00'         PROGRAM RUN OPTIONS
FGGDEL   EQU   X'80'           GLOBAL FILE DELETE
FGBUG    EQU   X'20'           DEBUG FLAG
DSNFG    DC    X'00'         LOCAL (PER MASK) OPTIONS
*GDEL    EQU   X'80'           COPIED GLOBAL FILE DELETE
FGLDEL   EQU   X'40'           LOCAL FILE DELETE
FGONE    EQU   X'10'           LOCAL DSN MATCH FOUND
FGLIST   EQU   X'01'           LOCAL LIST ONLY
SAVEEND  EQU   *
         PRINT NOGEN
         CVT   DSECT=YES
         DCBD  DEVD=DA,DSORG=PS
         IHACDE ,
         IHAPSA ,
         END   ,
