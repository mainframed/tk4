XPDIR    TITLE 'P D S E X P N D  ***  PDS DIRECTORY EXPANSION'
*********************************************************************
*                                                                86042
*                                                                86042
*        CHANGES BY G. POSTPISCHIL, E.S.P.                       86042
*          RENAMED FROM EXPDIR; ALLOW EITHER PDS/SYSLIB DD      GP13007
*                                                                86042
*        LOCAL MACROS USED FOR ENTRY AND EXIT                    86042
*        CODE CORRECTED TO HANDLE CASE WHERE EOF WILL NOT FIT ON 86042
*        SAME TRACK AS LAST DIRECTORY BLOCK                      86042
*
*        REMOVAL OF READ BLOCKSIZE DETERMINATION (USED OLD IOBCSW
*          RESIDUAL COUNT --- NOT AVAILABLE WITH MVS AND SAM/E   86042
*                                                                86042
*        PARM=-NNN  (REMOVE NNN DIRECTORY BLOCKS)                86042
*        PARM==NNN  (NUMBER OF DIRECTORY BLOCKS WANTED)          86042
*        PARM=+NNN  (NUMBER TO BE ADDED; SAME AS PARM=NNN)       86042
*                                                                86042
*        MINOR OTHER CHANGES                                     86042
*                                                                86042
*        FIX FOR MVS ERROR - DS1NOBDB IS NEVER UPDATED, CAUSING  87213
*        REJECTION OF DIRECTORY ADD REQUESTS IN SUBSEQUENT JOBS. 87213
*        VARIOUS ATTEMPTS TO PLAY GAMES WITH THE DCB, JFCB AND   87213
*        OPEN EXITS FAILED. THE CURRENT CODE REQUIRES THIS PROGRAM
*        TO BE AUTHORIZED, AND REWRITES THE DSCB 1 ITSELF.       87213
*                                                                87213
*        TEST FOR PDS/E, WRITE WARNING MESSAGE, BUT EXIT RC=0   GP99335
*
*
*********************************************************************
*   MAINTENANCE:
*  2013-01-07  GYP  ALLOW PDS AND SYSLIB AS DD NAMES; FIX UCB
*********************************************************************
         SPACE 2                                                 86042
*---------------------------------------------------------*LBD 02/84*
*        MODIFIED BY LIONEL DYCK                          *LBD 02/84*
*                    ROCKWELL INTERNATIONAL               *LBD 02/84*
*                    P.O. BOX 2515                        *LBD 02/84*
*                    SEAL BEACH,  CALIF 90740             *LBD 02/84*
*                    MAIL CODE 110-SH28                   *LBD 02/84*
*                    (213) 594-1125                       *LBD 02/84*
*                                                         *LBD 02/84*
*        COMMENTED OUT THE LINK TO AOFF                   *LBD 02/84*
*        MOVED LOCAL MACROS INLINE                        *LBD 02/84*
*        CHANGED DDNAME TO PDS                            *LBD 02/84*
*        CHANGED ROUTCDE=(2,11) TO (11)                   *LBD 02/84*
*        CHANGED CSECT NAME TO EXPDIR                     *LBD 02/84*
*                                                         *LBD 02/84*
*---------------------------------------------------------*LBD 02/84*
         EJECT                                            *LBD 02/84*
***********************************************************************
***********************************************************************
***********************************************************************
**                                                                   **
**    RELEASE:      2.0                                              **
**    DATE:         11/18/82                                         **
**    UPDATED BY:   CBT - LAUREEN BEAUCHAINE                         **
**    CHANGES MADE:-SP3 SUPPORT                                      **
**                 -HARD CODED DSECTS CONVERTED TO IBM DSECTS        **
**                 -THE LEAVE MACRO WAS REPLACED WITH RETURN CODE    **
**                 -CBT SECURITY ROUTINE LINKED TO                   **
**                 -CODE FOR OPERATOR INTERVENTION DELETED           **
**                 -CK FOR 3 CHAR PARM ADDED                         **
**                 -CK IF DATASET IS ALLOCATED TO PDS DDNAME         **
***********************************************************************
***********************************************************************
***********************************************************************
*
**LEVEL 030************************************************************
* PROGRAMMER NAME -                                                 6J5
*      J. NUCKOLLS                                                  6J5
* REQUESTED BY -                                                    6J5
*      BLG                                                          6J5
* EFFECTIVE DATE -                                                  6J5
*                                                                   6J5
* DESCRIPTION -                                                     6J5
*      REPAIR LABEL  OF DIRECTORY READ POINTER                      6J5
**LEVEL 029************************************************************
***********************************************************************
* PROGRAMMER NAME -                                                 BN4
*         GOLDBERG                                                  BN4
* REQUESTED BY -                                                    BN4
*         ME                                                        BN4
* EFFECTIVE DATE -                                                  BN4
*         ASAP                                                      BN4
* DESCRIPTION -                                                     BN4
*         CORRECT RESTART OF TABLE AFTER OVERFLOW                   BN4
***********************************************************************
***********************************************************************
* PROGRAMMER NAME -                                                 BN4
*         GOLDBERG                                                  BN4
* REQUESTED BY -                                                    BN4
*         ME                                                        BN4
* EFFECTIVE DATE -                                                  BN4
*         SOON                                                      BN4
* DESCRIPTION -                                                     BN4
*         DOCUMENTATION                                             BN4
***********************************************************************
         EJECT ,                                                 86042
***********************************************************************
* PROGRAMMER NAME -                                                   *
*         GOLDBERG                                                    *
* REQUESTED BY -                                                      *
*         ME                                                          *
* EFFECTIVE DATE -                                                    *
*         ANY TIME (UTILITY)                                          *
* PARM USAGE -                                                        *
*         THREE BYTE NUMERIC NUMBER OF DIRECTORY BLOCKS               *
*               TO ADD TO THIS PDS                                    *
* INPUT  FILES -                                                      *
*       PDS - FOR DIRECTORY AND MOVED DATA                            *
* OUTPUT FILES -                                                      *
*       PDS - FOR DIRECTORY EXPANSION AND MOVED MEMBERS               *
* MODULES USED -                                                      *
*              IEEPCNVT - RESIDENT CONVERT ROUTINE (TTR/MBBCCHHR)     *
* PROGRAM SWITCHES -                                                  *
*        GOSW - GO/NOGO SWITCH FOR MOVER FUNCTION TO INDICATE         *
*              OPTIONS IN EFFECT AND COMPLETION OF FUNCTIONS.         *
* REGISTER USAGE -                                                    *
*        R1 - INTER ROUTINE PARAMETERS                                *
*        R2 - ALTERNATE TABLE POINTER                                 *
*         R3 R4 R5 BXLE FOR MOVER TABLE                               *
*         R10 BAL REG FOR ALL INTERNAL ROUTINES                       *
*         ALL OTHERS ARE STANDARD AND WORK REGS                       *
* PROGRAM DESCRIPTION -                                               *
*         THIS ROUTINE WILL EXTEND THE NUMBER OF DIRECTORY ENTRIES    *
*               OF A PDS BY THE AMOUNT PASSED IN THE PARM FIELD.      *
*               THE DIRECTORY IS READ TO ESTABLISH CURRENT            *
*               BOUNDARIES AND THEN THE TRACK CONTAINING THE          *
*               NEW EOF MARKER IS CALCULATED.  FROM THIS, WE ARE      *
*               ABLE TO EXAMINE THE DIRECTORY TO DETERMINE IF         *
*               ANY MEMBERS NEED TO BE MOVED IN ORDER TO MAKE         *
*               THE EXTENSION.  IF MEMBERS NEED TO BE MOVED,          *
*               A SET OF INPUT AND OUTPUT PO DCB'S ARE OPENED         *
*               AND THE APPROPRIATE MEMBERS ARE MOVED UNTILL          *
*               THE AREA IS CLEAR.  THE PDS ENTRIES ARE THEN          *
*               ESTABLISHED.                                          *
*                                                                     *
*  ACCESS METHODS -                                                   *
*        EXCP FOR DIRECTORY WORK                                      *
*        BPAM FOR DATA WORK                                           *
*                                                                     *
*  INTERNAL ROUTINES (PHYSICAL ORDER)                                 *
*                                                                     *
*        READDIR -                                                    *
*              PHYSICAL READ OF THE DIRECTORY                         *
*        GETDIR -                                                     *
*              LOGICAL READ OF THE DIRECTORY                          *
*        WRITEDIR -                                                   *
*              PHYSICAL WRITE OF DIRECTORY (COUNT/KEY/DATA)           *
*        WRITEEOF -                                                   *
*              WRITE END OF FILE (DIRECTORY)                          *
*        ADVTTRN -                                                    *
*              ADVANCE TTRN USED FOR DIRECTORY I/O                    *
*        SETNOTE -                                                    *
*              NOTELIST SETUP ROUTINE AND TABLE BUILD                 *
*        UPDNOTE -                                                    *
*              NOTELIST RECORD UPDATE ROUTINE                         *
*        CONVTTR -                                                    *
*              TTR TO MBBCCHHR ROUTINE                                *
*        SETCAM -                                                     *
*              CAMLST SETUP FOR FORMAT 4 READING                      *
*                                                                     *
*  DSECTS USED -                                                      *
*                                                                     *
*        TAB -                                                        *
*              DIRECTORY ENTRY TABLE FOR MOVER ROUTINES               *
*        PDS -                                                        *
*              SIMILAR TO TAB FOR USE AGAINST LOGICAL PDS             *
*              DIRECTORY RECORD                                       *
*        IOB -                                                        *
*              FOR USE BY PHYSICAL I/O ROUTINES TO ADDRESS IOB        *
*              FIELDS REQUIRED FOR I/O AND CHECKING                   *
*        NOTAB -                                                      *
*              NOTE LIST COMPARE AND UPDATE CONTROL TABLE             *
*        DSCB -                                                       *
*              ADDRESS FORMAT 1 AND 4 DSCB FOR VALIDATION             *
*        IHAUCB -                                                     *
*              FOR CHECKING VOLUME/TTR0 IN SETCAM ROUTINE             *
*                                                                     *
***********************************************************************
         EJECT ,                                                 86042
         MACRO
&N       SORT  &TAB,&SEQ=H,&KEY=
         LCLC  &CL1,&CL2,&TL1,&TL2,&DISP
&N       DS    0H
         AIF   ('&TAB'(1,1) EQ '(').REG
&TL1     SETC  'L'''
&TL2     SETC  '&TAB'
         AGO   .LOK
.REG     ANOP
         AIF   (T'&TAB(2) NE 'O').ROK
         MNOTE 0,'NO ENTRY LENGTH / GENERATION TERMINATED'
         MEXIT
.ROK     ANOP
&TL1     SETC  '&TAB(2)'
&TL2     SETC  ''
.LOK     ANOP
         AIF   (T'&KEY EQ 'O').DKEY
&DISP    SETC  '&KEY(1)'
         AIF   (T'&KEY(2) EQ 'O').DLEN
&CL1     SETC  '&KEY(2)'
&CL2     SETC  ''
         AGO   .COK
.DKEY    ANOP
&DISP    SETC  '0'
.DLEN    ANOP
&CL1     SETC  '&TL1'
&CL2     SETC  '&TL2'
.COK     ANOP
*GJS* SORT MACRO   CHANGE LEVEL 0-0
         AIF   (T'&TAB(2) EQ 'O').LA
         AIF   ('&TAB(1)' EQ '1').R1
         LR    1,&TAB(1)
         AGO   .R1
.LA      ANOP
         LA    1,&TAB
.R1      ANOP
ST#1&SYSNDX LR 14,1
         LA    15,&TL1&TL2.(1)
         CLI   0(15),X'FF'
         BE    ST#5&SYSNDX
ST#2&SYSNDX CLC &DISP.(&CL1&CL2,14),&DISP.(15)
         BN&SEQ ST#3&SYSNDX
         LR    14,15
ST#3&SYSNDX LA 15,&TL1&TL2.(15)
         CLI   0(15),X'FF'
         BNE   ST#2&SYSNDX
         CR    14,1
         BNH   ST#4&SYSNDX
         XC    0(&TL1&TL2,1),0(14)
         XC    0(&TL1&TL2,14),0(1)
         EX    0,*-12
ST#4&SYSNDX LA 1,&TL1&TL2.(1)
         B     ST#1&SYSNDX
ST#5&SYSNDX EQU *
         MEND
         EJECT                                            *LBD 02/84*
         MACRO
&NAME    IOBGEN &DCB=,&CCWS=,&ECB=,&FLAGS=
         LCLB  &FLG(3)                  FLAG1 BIT ID
         LCLA  &FCNT,&LCNT
         AIF   (T'&FLAGS EQ 'O').NOFLG
&FCNT    SETA  N'&FLAGS
.LOOP1   ANOP
&LCNT    SETA  1
.LOOP2   AIF   ('&FLAGS(&FCNT)' EQ 'DCCCUN'(&LCNT,2)).SET
.UPLP    ANOP
&LCNT    SETA  &LCNT+2
         AIF   (&LCNT LT 6).LOOP2
&FCNT    SETA  &FCNT-1
         AIF   (&FCNT GT 0).LOOP1
         AGO   .NOFLG
.SET     ANOP
&FLG((&LCNT+1)/2) SETB 1
         AGO   .UPLP
.NOFLG   ANOP
&NAME    DC    0A(0),B'&FLG(1)&FLG(2).0000&FLG(3).0'  FLAG BYTE 1
         DC    AL3(0),A(&ECB,0,0,&CCWS,&DCB,0,0),XL8'0'          86042
         MEND
         SPACE 2                                                 86042
         PUNCH ' ORDER PDSEXPND(P) '   EASIER DEBUGGING         GP13007
         PUNCH ' ALIAS EXPDIR      '   OLD NAME                 GP13007
         PUNCH ' SETCODE AC(1)     '   MAKE IT USEFUL           GP13007
         SPACE 2                                                 86042
         COPY  OPTIONGB      DEFINE GLOBAL SETS                  86042
         SPACE 2                                                 86042
         SYSPARM LIST=YES    SET GLOBAL OPTIONS                  86042
         EJECT ,                                                 86042
         PRINT &PRTSOR                                           86042
PDSEXPND PGMHEAD ZERO12,BASE=(R11,R12),PARM=R9                  GP13007
         LA    R14,MYJFCB                                        86042
         STCM  R14,7,JFCBX+1  SET JFCB ADDRESS                   86042
         LA    R14,NOTETAB                                       86042
         ST    R14,NOTEPTR                                       86042
         SERVINIT ,          LOAD AND INITIALIZE THE SERVICE ROUTINE
         SERVCALL LPALD,=CL8'@PRINTER'  LOAD THE PRINT ROUTINE   86042
         ST    R0,@PRINTER                                       86042
         PRTOPEN SYSPRINT    OPEN THE OUTPUT FILE                86042
         CH    R15,=H'4'     OPENED ?                            86042
         BNH   PRTOP         YES                                 86042
         PRTOPEN CONSOLE     MAKE ALTERNATE PRINT FILE           86042
PRTOP    SERVCALL TIODD,DIRECT+DCBDDNAM-IHADCB  LOCATE PDS DD    86042
         LTR   R4,R0         COPY TIOT ENTRY ADDRESS            GP13007
         BNZ   HAVEDD        HAVE A DD                          GP13007
PRTOPT   CLI   DIRECT+DCBDDNAM-IHADCB,C'S'  SECOND TIME ?       GP13007
         BE    ERR15           YES; FAIL                        GP13007
         MVC   DIRECT+DCBDDNAM-IHADCB(L'DCBDDNAM),=CL8'SYSLIB'  GP13007
         MVC   DATAIN+DCBDDNAM-IHADCB(L'DCBDDNAM),=CL8'SYSLIB'  GP13007
         MVC   DATAOUT+DCBDDNAM-IHADCB(L'DCBDDNAM),=CL8'SYSLIB' GP13007
         B     PRTOP         TRY AGAIN                          GP13007
         SPACE 1
         USING TIOENTRY,R4   MAP IT                              86042
HAVEDD   CLI   TIOELNGH,20   SINGLE UCB ENTRY ?                  86042
         BNE   ERR16         NO                                  86042
         ICM   R3,7,TIOEFSRT  LOAD AND TEST THE UCB ADDRESS      86042
         BZ    ERR16                                             86042
         USING UCBOB,R3      DECLARE IT                          86042
         CLI   UCBTBYT3,UCB3DACC  DASD ?                         86042
         BNE   ERR16         NO; BAD UCB                         86042
         ST    R3,STARUCBA   SET UCB ADDRESS FOR TRKCALC         86042
         MVI   JFCBDSNM,X'04'  MAKE FORMAT 4 DSCB NAME           86042
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM                 86042
         MVC   JFCBVOLS(6),UCBVOLI  SET VOL-SER                  86042
         SERVCALL DSDJ1,MYJFCB  READ THE DSCB4                   86042
         BXH   R15,R15,ERR15 OR SIGNAL OBTAIN ERROR              86042
         USING DS4IDFMT,R1   DECLARE IT                          86042
         MVC   DIRTK+L'DIRTK-1,DS4DEVDB  SET D.E.S PER TRACK     86042
         MVC   DWVTOCX,DS4VTOCE+2  SAVE VTOC EXTENTS             87213
         SERVCALL RJFCB,DIRECT+DCBDDNAM-IHADCB  GET THE JFCB     86042
         BXH   R15,R15,ERR15                                     86042
         MVC   MYJFCB(JFCBLGTH),0(R1)  COPY TO OUR AREA          86042
         CLI   JFCBDSNM,C' '  PRINTABLE DS NAME ?                86042
         BNH   ERR18         NO; SET MESSAGE AND QUIT            86042
         OI    JFCBTSDM,JFCNWRIT        SET NO REWRITE BY OPEN      A04
         SERVCALL DSDJ1,MYJFCB   OBTAIN THE DSCB1                86042
         BXH   R15,R15,ERR15  SIGNAL OBTAIN ERROR                86042
         USING DS1FMTID,R1   DECLARE THE DSCB                    86042
         CLI   DS1DSORG+1,0  FUNNY ORG ?                        GP09186
         BNE   ERR14           YES; NOT PDS                     GP09186
         TM    DS1DSORG,X'02'          PARTITIONED ?             86042
         BZ    ERR14                    NO                       86042
         TM    DS1SMSFG,DS1PDSEX  HFS?                          GP99335
         BO    ERR14                                            GP99335
         TM    DS1SMSFG,DS1PDSE   PDS/E ?                       GP99335
         BNZ   SKIPPDSE      YES; NOTHING TO DO                 GP99335
         MVC   OLDNOBDB,DS1NOBDB  SAVE BYTES IN LAST D.E.        87213
         MVC   DWDSCB,DS1END  SAVE CCHHR OF DSCB1                87213
         DROP  R1                       RELEASE ADDRESSABILITY      BF4
         SPACE 1                                                    BF4
         OPEN  (DIRECT,UPDAT),TYPE=J    SET EXCP FILE OPEN          A94
         TM    DIRECT+DCBOFLGS-IHADCB,DCBOFOPN  OPENED ?         86042
         BZ    ERR20         NO; FAIL                            86042
         MVC   TTRN,BEGINTTR            RESET EXCP POINTER          A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        COUNT DIRECTORY BLOCKS AND NOTE OLD EOF ADDRESS (TTR)        *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
         SLR   R3,R3         ZERO USED COUNT                     86042
         SLR   R4,R4         ZERO ALLOCATED COUNT                86042
READALL  BAL   R10,READDIR   READ A DIRECTORY BLOCK              86042
         B     READL1X       EOF ENCOUNTERED                     86042
         LA    R3,1(,R3)     INCREASE USED COUNT                 86042
         LA    R4,1(,R4)     INCREASE ALLOCATED COUNT            86042
         CLC   =X'FFFFFFFFFFFFFFFF',EXCPKEY  LOGICAL END HIT ?   86042
         BNE   READALL       NO; READ SOME MORE                  86042
         MVC   NOBDB,EXCPDATA+1  COPY # OF BYTES USED IN BLOCK   87213
READL1   BAL   R10,READDIR   READ THE DIRECTORY TO PHYSICAL END  86042
         B     READL1X                  EOF FOUND                   A94
         LA    R4,1(,R4)     ADD TO DIRECTORY COUNT              86042
         B     READL1                   GO FOR MORE                 A94
         SPACE 1                                                 86042
READL1X  STM   R3,R4,DIRUSE  SAVE USED/ALLOCATED COUNT           86042
         MVC   EOF1TTR,TTRN  SAVE CURRENT EOF PTR                86042
         PRTLIST PDSINFO     PRINT BASIC INFORMATION             86042
         LA    R8,0(,R9)     CLEAN AND TEST R8                  GP13007
         LTR   R8,R8         ANY PARM ADDRESS ?                  86042
         BZ    EXIT          NO; QUIT                            86042
         ICM   R8,7,1(R8)    GET PARM ADDRESS                    86042
         BZ    EXIT          NONE ?                              86042
         SLR   R9,R9                                             86042
         ICM   R9,3,0(R8)    TEST PARM LENGTH                    86042
         BZ    EXIT          NORMAL                              86042
         LA    R2,C'+'       DEFAULT TO ADDITION OF BLOCKS       86042
         CLI   2(R8),C'0'    NUMERIC PARM ?                      86042
         BNL   GETNUM        YES ?                               86042
         IC    R2,2(,R8)     LOAD FIRST VALUE                    86042
         CLI   2(R8),C'-'    DECREASE ?                          86042
         BE    GETNUMB       YES                                 86042
         CLI   2(R8),C'+'    INCREASE ?                          86042
         BE    GETNUMB                                           86042
         CLI   2(R8),C'='    SET NEW COUNT ?                     86042
         BNE   ERR17         INVALID PARM                        86042
GETNUMB  LA    R8,1(,R8)     SKIP SIGN                           86042
         BCT   R9,GETNUM     START CONVERSION                    86042
         B     ERR17         ELSE INVALID                        86042
GETNUM   SLR   R14,R14                                           86042
         LA    R15,C'0'                                          86042
         CH    R9,=H'8'      MORE THAN 8 DIGITS ?                86042
         BH    ERR17         YES; DON'T WANT TO HANDLE           86042
GETNUML  CLI   2(R8),C'0'    NUMERIC ?                           86042
         BL    ERR17         NO                                  86042
         CLI   2(R8),C'9'    DITTO ?                             86042
         BH    ERR17         DITTO                               86042
         SLDL  R14,8                                             86042
         IC    R15,2(,R8)    LOAD NEXT DIGIT                     86042
         LA    R8,1(,R8)                                         86042
         BCT   R9,GETNUML                                        86042
         STM   R14,R15,DB2   STASH                               86042
         PACK  DB,DB2        MAKE PACKED DECIMAL                 86042
         CVB   R0,DB         GET BLOCKS                          86042
         STC   R2,PARMOP     SAVE REQUEST TYPE                   86042
         LTR   R0,R0         POSITIVE VALUE ?                    86042
         BP    GOTNUM        YES                                 86042
         CLI   PARMOP,C'='   NEW COUNT ?                         86042
         BNE   EXIT          NO; REQUEST SATISFIED ( +/- 0 )     86042
         B     ERR19         ELSE ERROR                          86042
GOTNUM   CLI   PARMOP,C'='   NEW NUMBER ?                        86042
         BNE   TESTENUF      NO; DO OTHER CHECKS                 86042
         CR    R0,R4         MORE THAN ALLOCATED ?               86042
         BE    EXIT          SAME; NOTHING TO CHANGE             86042
         BL    NOTENUF       NO                                  86042
         SR    R0,R4         BLOCKS TO ADD                       86042
         MVI   PARMOP,C'+'   TREAT AS ADDITION                   86042
         B     TESTENUF                                          86042
NOTENUF  CR    R0,R3         MORE THAN USED ?                    86042
         BL    ERR19         LEAVE FEWER THAN USED ONES ?        86042
TESTENUF CLI   PARMOP,C'-'   REDUCE ?                            86042
         BNE   PARMADD       NO; GO TO ADD                       86042
         LR    R15,R4        GET BLOCKS ALLOCATED                86042
         SR    R15,R0        LESS BLOCKS TO BE REMOVED           86042
         CR    R15,R3        NOT LOWER THAN BLOCKS USED ?        86042
         BL    ERR19         TOO LOW                             86042
         LR    R0,R15        SET BLOCKS WANTED                   86042
         MVI   PARMOP,C'='   SET NUMBER OF BLOCKS                86042
PARMADD  ST    R0,NUMADD     NUMBER OF BLOCKS TO BE SET/ADDED    86042
         CLI   PARMOP,C'+'   ADDITION ?                          86042
         BNE   *+8           NO                                  86042
         A     R0,DIRCNT     ADD CURRENT COUNT ALLOCATED         86042
         ST    R0,DB         SAVE FOR MESSAGE                    86042
         SLR   R1,R1         SET FOR DIVIDE BYPASS               86043
         SH    R0,=H'1'      MAKE DIVIDE COME OUT RIGHT          86042
         BNP   SETSKIP       NO DIVIDE FOR ONE BLOCK             86042
         SRDA  R0,32         PREPARE FOR DIVIDE                  86042
         D     R0,DIRTK      DIVIDE BY BLOCKS PER TRACK          86042
SETSKIP  AH    R0,=H'1'      ADD ONE TO GET CORRECT NUMBER AGAIN 86042
         C     R0,DIRTK      IS THIS TRACK FULL ?                86042
         BE    FULLTRAK      YES; TRACK IS FULL                  86042
         LA    R15,1         EOF IS ON SAME TRACK, BUT WITH      86042
         AR    R15,R0        RECORD NUMBER ONE HIGHER            86042
         B     SETLIM                                            86042
FULLTRAK STH   R1,TTLIM      PROVISIONALLY SET EOF TRACK         86042
         SERVCALC FUNCTN=TRKBAL,UCB=*,MAXSIZE=YES,REGSAVE=YES,         *
               RKDD=DIRTK+L'DIRTK-1,MF=(E,STARLIST)              86042
         L     R15,DIRTK     GET RECORDS PER TRACK               86042
         LA    R15,1(,R15)   MAKE EOF NUMBER                     86042
         LH    R1,TTLIM      GET PRIOR TRACK COUNT               86042
         LTR   R0,R0         WILL EOF FIT ON TRACK ?             86042
         BP    SETLIM        YES                                 86042
         LA    R15,1         EOF WILL BE ON NEXT TRACK           86042
         LA    R1,1(,R1)     NEED ONE MORE TRACK                 86042
SETLIM   CLI   PARMOP,C'+'   ADD ?                               86042
         BE    SETLIMA       YES; CODE OK                        86042
         STC   R15,EOF1TTR+2  SET EOF RECORD NUMBER              86042
         STCM  R1,3,EOF1TTR  SET EOF TRACK                       86042
SETLIMA  STH   R1,TTLIM      THIS IS WHERE EOF WILL GO           86042
         ST    R15,DB+4      SAVE FOR MESSAGE                    86042
         PRTLIST MSGEOFLO                                        86042
         CLC   DB(4),DIRUSE  ARE WE ADDING BLOCKS ?              87213
         BNH   *+8           NO; LEAVE NOBDB ALONE               87213
         MVI   NOBDB,0       LAST DIRECTORY BLOCK WILL BE EMPTY  87213
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        RESET DIRECTORY READING AND FILL TABLE WITH MOVER            *
*              CANDIDATES (TT WITHIN RANGE OF DIRECTORY EXTEND)       *
*                                                                     *
*        REGISTER 1 USED FOR PDS PASSING IN THIS ROUTINE              *
*---------------------------------------------------------------------*
         SPACE 1                                                 86042
         USING PDS,R1                   ADDRESS REAL DIRECTORY      BA4
FILLSET  L     R6,TABAMT                GETMAIN AMOUNT              BL4
         GETMAIN R,LV=(R6)              TABLE                       BL4
         ST    R1,TABPTR                SET BXLE NO 1 (2 SET)       BL4
         LA    R1,0(R1,R6)              END OF TABLE                BL4
         S     R1,TABPTR+4              BACK OFF ONE ELEMENT        BL4
         ST    R1,TABPTR+8              SET BXLE NO 3               BL4
         LM    R3,R5,TABPTR             SET UP TABLES TO CLEAR      A94
*                                       NEW DIRECTORY AREAS         A94
         USING TAB,R3        DECLARE TABLE MAPPING               86042
         MVC   TTRN,BEGINTTR            RESET BOF                   A94
         XC    GETDIRS2,GETDIRS2        RESET DIRECTORY READ POINTER6J5
*                                       TO FORCE PHYSICAL READ IN   BN4
*                                       CASE OF TABLE RESTART       BN4
FILLTAB  BAL   R10,GETDIR               GET A DIRECTORY RECORD      A94
         CLC   =X'FFFFFFFFFFFFFFFF',0(R1)  END OF DIRECTORY ?    86042
         BE    ENDTAB                   YES, CLOSE OFF TABLE        A94
         CLC   PDS2TTRP(2),TTLIM   IN MOVER RANGE ?              86042
         BH    FILLTAB                  NO                       86042
         TM    PDS2INDC,PDS2NOTE        NOTE LIST PRESENT           A04
         BZ    FILLTAB1                 NO                          BA4
         BO    ERR9                     CANNOT HANDLE 3             BA4
         CLI   PDS2ZERO,0               IS FIRST PROPER             BA4
         BNE   ERR9                     CANNOT HANDLE THIS          BA4
         TM    PDS2INDC,X'40'           NOTE LIST PRESENT           BA4
         BZ    FILLTAB1                 NO                          BA4
         CLI   PDS2NL,0                 PROPER NOTE LIST            BA4
         BZ    ERR9                     NO, EMPTY                   BA4
FILLTAB1 MVC   TABNAME(TABLN),0(R1)     MOVE IN THE DIRECTORY       A94
         BXLE  R3,R4,FILLTAB            DO MORE                     A94
         L     R6,TABAMT                SET FOR FREEMAIN, TABLE     BL4
*                                       HAS OVERFLOWED AND WE WILL  BL4
*                                       GET A LARGER AREA           BL4
         L     R1,TABPTR                GET ADDRESS                 BL4
         FREEMAIN R,LV=(R6),A=(1)       FREE TABLE                  BL4
         AR    R6,R6                    DOUBLE AREA                 BL4
         ST    R6,TABAMT                SET NEW AMOUNT              BL4
         B     FILLSET                  TRY AGAIN WITH LARGER TABLE BL4
         SPACE 2                                                    BA4
*---------------------------------------------------------------------*
*        CLOSE OFF TABLE (OR TRUNCATE FOR MULTIPLE PASSES)            *
*---------------------------------------------------------------------*
         SPACE 1                                                    BA4
ENDTAB   MVC   0(8,R3),=X'FFFFFFFFFFFFFFFF'  MAKE TABLE END      86042
         LR    R5,R3                    RESET BXLE CONSTANTS        A94
         BCTR  R5,0                     TO NEW VALUES               A94
         L     R3,TABPTR                RESET TO BEGINNING OF TABLE A94
         CLC   =X'FFFFFFFFFFFFFFFF',0(R3)  EMPTY TABLE ?         86042
         BE    EXTEND                                               A94
         SORT  (R3,TABLN),KEY=(8,3)                                 A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        VALIDATE ALIASES IN TABLE                                    *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
VALIDAT  TM    TABINDC,PDS2ALIA         IS IT AN ALIAS              A04
         BNO   VALIDX                   NO, TRY ANOTHER             A04
         L     R2,TABPTR                SET TO LOOK FOR MEMBER      A04
VALIDA   TM    TABINDC-TAB(R2),PDS2ALIA IS THIS AN ALIAS            A04
         BO    VALIDB                   YES, DONT COMPARE           A04
         CLC   TABTTRP,TABTTRP-TAB(R2)  MATCH ON TTR                A04
         BE    VALIDX                   YES, IT'S OK                A04
VALIDB   BXLE  R2,R4,VALIDA             TRY MORE                    A04
         B     ERR10                    NO MATCH IN TABLE           A04
VALIDX   BXLE  R3,R4,VALIDAT            TRY ANOTHER FOR ALIAS MATCH A04
         L     R3,TABPTR                RESET POINTER, ALL OK       A04
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        INITIALIZE MOVER                                             *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
         TM    DATAIN+DCBOFLGS-IHADCB,DCBOFOPN  FIRST TIME ?     86042
         BNZ   MOVE1         NO; SKIP OPENS AND GETMAINS         86042
         OPEN  (DATAIN,,DATAOUT,OUTPUT) SET PO DCBS FOR MOVER       A94
         TM    DATAIN+DCBOFLGS-IHADCB,DCBOFOPN  INPUT OPEN ?     86042
         BZ    ERR20                                             86042
         TM    DATAOUT+DCBOFLGS-IHADCB,DCBOFOPN  AND OUTPUT ?    86042
         BZ    ERR20                                             86042
         LH    R6,DCBBLKSI-IHADCB+DATAIN  BLOCKSIZE FOR IOAREA   86042
         GETMAIN R,LV=(R6)              GET FOR NOTE LIST           BA4
         ST    R1,IONOTE                SET IN HOLDER               BA4
         GETMAIN R,LV=(R6)              GET FOR NORMAL DATA         BA4
         ST    R1,IOPOINT               SAVE FOR I/O                A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        MOVE MEMBERS HERE (NO ALIASES) AND STOW REPLACE EACH         *
*              ONE.  NOTE - AFTER EACH MOVED, LOOK FOR ASSOCIATED     *
*              ALIASES AND DO STOW REPLACE ON THESE IF THEY           *
*              EXIST.                                                 *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
MOVE1    TM    TABINDC,PDS2ALIA         IS THIS ONE AN ALIAS        A94
         BO    MOVENEXT                 YES, SKIP FOR NOW           A94
         TM    TABINDC,PDS2NOTE         ANY NOTES                   BA4
         BZ    MOVE2                    NO, DONT WORRY HERE         BA4
         SR    R0,R0                                                BF4
         ICM   R0,HIGH3,TABTTRT         SET TTRN                    BF4
         LA    R2,TEXTADR               SET MBBCCHHR RETURN         BF4
         BAL   R10,CONVTTR              CONVERT                     BF4
         OI    GOSW,TEXTGO              INDICATE TEXT LOOK REQ      BA4
         TM    TABINDC,X'40'            ANY NOTE LIST               BA4
         BZ    MOVE2                    NO                          BA4
         BAL   R10,SETNOTE              GO SET UP NOTES AND THE     BA4
*                                       NOTE COMPARE TABLE          BA4
*                                       ROUTINE WILL SET BITS IN    BA4
*                                       GOSW.                       BA4
MOVE2    MVC   FINDTTR,TABTTRP          SET TTR VALUE FOR FIND      A94
         FIND  DATAIN,FINDTTR,C         LOCATE THE MEMBER           A94
MOVERD   L     R6,IOPOINT               GET BUFFER                  A04
         READ  DECB1,SF,DATAIN,(R6),'S' READ THE DATA               A04
         CHECK DECB1                                                A94
         LH    R6,DCBLRECL-IHADCB+DATAIN  BLOCKSIZE FOR RECORD   86042
         STH   R6,DCBBLKSI-IHADCB+DATAOUT  BLOCKSIZE FOR WRITE   86042
         TM    GOSW,NOTEGO1             NOTE FIND IN PROGRESS       BA4
         BZ    MOVERDA                  NO                          BA4
         CLC   NOTEADR,DCBFDAD-IHADCB+DATAIN   SAME RECORD ?     86042
         BNE   MOVERDA                  NO                          BA4
         CH    R6,NOTESIZE              SAME LENGTH                 BA4
         BNE   ERR12                    NO, SOME ERROR              BA4
         TM    GOSW,NOTEGO2             STILL IN PROGRESS           BF4
         BO    ERR13                    YES, ERROR                  BF4
         L     R6,IONOTE                GET ADDRESS OF RECORD       BA4
         B     MOVERDB                  PUT THIS ONE OUT INSTEAD    BA4
MOVERDA  L     R6,IOPOINT               GET BUFFER ADDRESS          A04
MOVERDB  WRITE DECB2,SF,DATAOUT,(R6),'S' WRITE IT OUT               A04
         CHECK DECB2                    OK                          A94
         TM    GOSW,NOTEGO2             NOTES IN PROGRESS           BA4
         BZ    MOVERD1                  NO                          BA4
         BAL   R10,UPDNOTE              GO TRY TO UPDATE NOTE LIST  BA4
MOVERD1  TM    GOSW,NOTEGO1             LOOKING FOR NOTE RECORD     BA4
         BZ    MOVERD2                  NO                          BA4
         CLC   NOTEADR,DCBFDAD-IHADCB+DATAIN   FOUND ?           86042
         BNE   MOVERD2                  NO                          BA4
         NOTE  DATAOUT                  FIND NEW TTR                BA4
         STCM  R1,HIGH3,TABTTRN         SET IN NOTE LIST AREA       BA4
         NI    GOSW,255-NOTEGO1         INDICATE SET                BA4
MOVERD2  TM    GOSW,TEXTGO              TEXT IN PROGRESS            BA4
         BZ    MOVERD                   NO                          BA4
         CLC   TEXTADR,DCBFDAD-IHADCB+DATAIN   COMPARE MBBCCHHR  86042
         BNE   MOVERD                   NOT SAME, CONT              BA4
         NOTE  DATAOUT                  FIND NEW TTR IN OUTPUT      BA4
         STCM  R1,HIGH3,TABTTRT         SET IN DIRECTORY            BA4
         NI    GOSW,255-TEXTGO          TURN OFF, FOUND             BA4
         B     MOVERD                   DO ANOTHER BLOCK            A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        SET MEMBER INTO PDS (STOW)                                   *
*---------------------------------------------------------------------*
         SPACE
MOVESTW  CLI   GOSW,0                   ALL OK                      BA4
         BNE   ERR11                    NO, ERROR IN TEXTREC        BA4
         STOW  DATAOUT,(R3),R           SET NEW ONE                 A94
         BXH   R15,R15,ERR3             NO, LETS GET OUT         86042
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        LOOK FOR ALIASES TO BE MOVED FOR THE MEMBER JUST             *
*              MOVED IN THE PREVIOUS SECTION                          *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
MOVEAL   L     R2,TABPTR                POINT TO TABLE AGAIN        A94
MOVEAL1  CLC   =X'FFFFFFFFFFFFFFFF',0(R3)  END OF TABLE ?        86042
         BE    MOVENEXT                 YES, DO ANOTHER ONE         A94
         CLC   FINDTTR,TABTTRP-TAB(R2)  SAME TTR                    A94
         BNE   MOVEAL3                  NO, NEXT ONE                A94
         TM    TABINDC-TAB(R2),PDS2ALIA ALIAS                       A94
         BNO   ERR4                     NO, THIS IS AN EROR         A94
MOVEAL2  MVC   TABTTRP-TAB(L'TABTTRP,R2),TABTTRP SET SAME TTR       A94
         TM    TABINDC,PDS2NOTE         ANY NOTE                    BA4
         BZ    MOVEAL2A                 NO                          BA4
         MVC   TABTTRT-TAB(L'TABTTRT,R2),TABTTRT SET TEXT ADDR      BA4
         TM    TABINDC,X'40'            ANY NOTE LIST               BA4
         BZ    MOVEAL2A                 NO                          BA4
         MVC   TABTTRN-TAB(L'TABTTRN,R2),TABTTRN SET IN ALIAS       BA4
MOVEAL2A STOW  DATAOUT,(R2),R           DO THIS REPLACE             A94
         BXH   R15,R15,ERR5             NO, GET OUT NOW             A94
MOVEAL3  BXLE  R2,R4,MOVEAL1            ANOTHER                     A94
MOVENEXT BXLE  R3,R4,MOVE1              TRY ANOTHER                 A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        RECHECK THE MOVER TABLE JUST IN CASE ANY OF THE              *
*              MEMBERS WERE MOVED BUT NOT ALL CLEARED THE AREA        *
*              REQUIRED FOR THE NEW DIRECTORY ENTRIES                 *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
         L     R3,TABPTR                SET FOR ANOTHER PASS        A94
RETRY    CLC   TABTTRP(2),TTLIM   CHECK OUT                      86042
         BH    ENDTAB                   ALL OK                   86042
         BXLE  R3,R4,RETRY              AGAIN AND SHRINK LIST       A94
         B     ENDTAB                   CLOSE OFF                   A94
         SPACE 2                                                    A04
*---------------------------------------------------------------------*
*        EXTEND THE DIRECTORY INTO CLEAR SPACE PROVIDED IN THE FRONT  *
*              OF THE PDS BY THE ABOVE ROUTINES                       *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
EXTEND   CLOSE (DATAIN,,DATAOUT)        CLOSE THE DATASETS(NEW TTR) A94
         MVC   TTRN,EOF1TTR             SET FOR WRITE               A94
         CLI   PARMOP,C'+'   ADDING BLOCKS ?                     86042
         BNE   EXTENDF       NO; JUST WRITE NEW EOF              86042
         ICM   R9,15,NUMADD  LOAD NUMBER OF BLOCKS TO BE ADDED   86042
         BZ    EXTENDF       HUH ?                               86042
         SPACE 1                                                 86042
EXTEND1  BAL   R10,WRITEDIR             PUT OUT DIRECTORY           A94
         BCT   R9,EXTEND1    KEEP WRITING                        86042
EXTENDF  BAL   R10,WRITEEOF             DO EOF MARK                 A94
         CLC   TTLIM,TTRN               CHECK OUT TRACK             A94
         BNE   ERR6                     NO GOOD                     A94
         CLC   NOBDB,OLDNOBDB  NEED TO CHANGE LAST D.E. SIZE ?   87213
         BE    EXIT          NO; OK                              87213
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                 87213
         BXLE  R15,R15,FIXDSCB  YES; FINAGLE THE DSCB            87213
         PRTF  '0***** UNABLE TO CORRECT DS1NOBDB - PLEASE RE-ALLOCATE *
               AND USE IEBCOPY *****'                            87213
     PRTF  '         OR HAVE YOUR INSTALLATION AUTHORIZE THIS PROGRAM.'
         OI    CCODE+L'CCODE-1,8  SET MODERATE ERROR             87213
         B     EXIT          QUIT                                87213
FIXDSCB  MODESET KEY=ZERO    GET AUTHORIZED                      87213
         XC    DCBFDAD+DIRECT-IHADCB(8),DCBFDAD+DIRECT-IHADCB    87213
         L     R3,DCBDEBAD-IHADCB+DIRECT  GET DEB                87213
         USING DEBBASIC,R3   DECLARE THE DEB                     87213
         MVC   DEBBASND+6(8),DWVTOCX  MOVE VTOC EXTENTS          87213
         XC    EXCPCNT(8),EXCPCNT  CLEAR ID FIELD                87213
         MVC   EXCPADR,DWDSCB  MOVE DSCB ADDRESS                 87213
         MVC   READIOB+32+3(8),EXCPCNT  MAKE IOBSEEK             87213
         MVC   DSCBCCW(8),DWRDSCB  MAKE DSCB READ CCW            87213
         EXCP  READIOB       REREAD DSCB                         87213
         WAIT  ECB=EXCPECB   WAIT FOR COMPLETION                 87213
         CLI   EXCPECB,X'7F'  NORMAL COMPLETION ?                87213
         BNE   DSCBFAIL      NO; BOO                             87213
         CLC   JFCBDSNM,EXCPDATA  SAME DSCB 1 ?                  87213
         BNE   DSCBFAIL      NO; SKIP UPDATE                     87213
         MVC   DS1NOBDB-DS1DSNAM+EXCPDATA,NOBDB  FIX COUNT       87213
         MVI   DSCBCCW,X'0D' RE-WRITE KEY AND DATA               87213
         MVC   EXCPADR,DWDSCB  HOPE FOR THE BEST                 87213
         EXCP  READIOB       RE-WRITE DSCB 1                     87213
         WAIT  ECB=EXCPECB   WAIT FOR COMPLETION                 87213
         CLI   EXCPECB,X'7F'  GOOD WRITE ?                       87213
         BE    DSCBDONE      YES                                 87213
DSCBFAIL PRTF '0***** DSCB 1 REWRITE FAILED - DS1NOBDB INCORRECT *****'
         OI    CCODE+L'CCODE-1,8   SET ERROR                     87213
DSCBDONE MODESET KEY=NZERO   RESET                               87213
EXIT     CLOSE (DIRECT)                 END EXCP MODE               A94
         SERVTERM ,          CLOSE AND FREE                      86042
         LH    R9,CCODE      LOAD RETURN CODE                    86042
         PGMEXIT RC=(R9)     RETURN WITH ERROR CODE             GP13007
         DROP  R3                       DROP REMAINING REG          BA4
         EJECT
SKIPPDSE PRTF  '0 DATA SET IS IN PDS/E FORMAT; EXPDIR BYPASSED' GP99335
         B     EXIT          AND QUIT NOW                       GP99335
*---------------------------------------------------------------------*
*        ERROR ROUTINES                                               *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
ERR1     LA    R2,EM1                   GET MESSAGE              86042
         B     ERRX                     WRITE AND EXIT              A04
ERR2     LA    R2,EM2                                               A04
         B     ERRX                                                 A04
ERR3     LA    R2,EM3                                               A04
         B     ERRX                                                 A04
ERR4     LA    R2,EM4                                               A04
         B     ERRX                                                 A04
ERR5     LA    R2,EM5                                               A04
         B     ERRX                                                 A04
ERR6     LA    R2,EM6                                               A04
         B     ERRX                                                 A04
ERR7     LA    R2,EM7                                               A04
         B     ERRX                                                 A04
ERR8     LA    R2,EM8                                               A04
         B     ERRX                                                 A04
ERR9     LA    R2,EM9                                               A04
         B     ERRX                                                 A04
ERR10    LA    R2,EM10                                              A04
         B     ERRX                                                 A04
ERR11    LA    R2,EM11                                              BA4
         B     ERRX                                                 BA4
ERR12    LA    R2,EM12                                              BA4
         B     ERRX                                                 BA4
ERR13    LA    R2,EM13                                              BF4
         B     ERRX                                                 BF4
ERR14    LA    R2,EM14                                              BF4
         B     ERRX                                                 BF4
ERR15    LA    R2,EM15                                              BF4
         B     ERRX                                                 BF4
ERR16    LA    R2,EM16                                              BH4
         B     ERRX                                                 BH4
ERR17    LA    R2,EM17                                              BH4
         B     ERRX                                                 BH4
ERR18    LA    R2,EM18                                              BH4
         B     ERRX                                              86042
ERR19    LA    R2,EM19                                           86042
         B     ERRX                                              86042
ERR20    LA    R2,EM20                                           86042
*        B     ERRX                                                 BH4
         SPACE 2                                                    A04
ERRX     SLR   R3,R3                                             86042
         ICM   R3,3,0(R2)    GET MESSAGE LENGTH                  86042
         SH    R3,=H'4'      ALLOW FOR LENGTH LENGTH             86042
         PRTLIST ERRMSG      PRINT ERROR MESSAGE                 86042
         SERVTERM ,          CLOSE AND FREE                      86042
         ABEND 101,DUMP                                             A04
         SPACE 2                                                 86042
ERRMSG   FDPRT 'EXPDIR ERROR -',PADR,NL                          86042
         FDPRT 4(R2),(R3)                                        86042
         FDPRT *END                                              86042
         SPACE 1                                                 86042
MSGEOFLO FDPRT 'THE NEW DIRECTORY WILL HAVE',NL                  86042
         FDPRT DB,4,I,DEB,PAD                                    86042
         FDPRT 'DIRECTORY BLOCKS, AND AN END-FILE AT'            86042
         FDPRT TTLIM,HEX,PADL                                    86042
         FDPRT '.'                                               86042
         FDPRT DB+7,1,HEX                                        86042
         FDPRT *END                                              86042
         EJECT ,
*---------------------------------------------------------------------*
*        ERROR MESSAGES                                               *
*---------------------------------------------------------------------*
         SPACE
EM1      VCON  'JOB TERMINATED BY OPERATOR'                      86042
EM2      VCON  'TABLE OVERFLOW'                                  86042
EM3      VCON  'STOW ERROR ON MEMBER'                            86042
EM4      VCON  'DIRECTORY ERROR/ ALIAS SEARCH'                   86042
EM5      VCON  'STOW ERROR ON ALIAS'                             86042
EM6      VCON  'TRACK MISMATCH AFTER EXTEND'                     86042
EM7      VCON  'DIRECTORY WRITE ERROR'                           86042
EM8      VCON  'DIRECTORY READ ERROR'                            86042
EM9      VCON  'NOTE LIST ENCOUNTERED, CANNOT HANDLE'            86042
EM10     VCON  'ALIAS WITH NO MEMBER FOUND'                      86042
EM11     VCON  'LOAD MODULE NOTE LIST ERROR'                     86042
EM12     VCON  'NOTE LIST RECORD SIZE ERROR'                     86042
EM13     VCON  'NOTE LIST RECORD UPDATE INCOMPLETE'              86042
EM14     VCON  'DS NOT PARTITIONED (PDS)'                       GP13007
EM15     VCON  'OBTAIN ERROR (NEED PDS OR SYSLIB DD)'           GP13007
EM16     VCON  'UCB LOOKUP ERROR'                                86042
EM17     VCON  'PARM MUST BE +/=/- AND 1 TO 8 DIGITS'            86042
EM18     VCON  'DATASET MUST BE ALLOCATED TO PDS'                86042
EM19     VCON  'PARM REQUEST CONFLICTS - DIRECTORY BLOCK IN USE' 86042
EM20     VCON  'DCB OPEN FAILED'                                 86042
         SPACE 1                                                 86042
PDSINFO  FDPRT 'PDS',NL,PADR                                     86042
         FDPRT JFCBDSNM,DEB,PAD                                  86042
         FDPRT 'HAS',PAD                                         86042
         FDPRT DIRUSE,I,DEB,PAD                                  86042
         FDPRT 'OF'                                              86042
         FDPRT DIRCNT,I,DEB,PAD                                  86042
         FDPRT 'DIRECTORY BLOCKS IN USE'                         86042
         FDPRT *END                                              86042
         EJECT
*---------------------------------------------------------------------*
*        MAINLINE CONSTANTS AND WORK AREAS                            *
*---------------------------------------------------------------------*
         SPACE
NOTEADR  DS    CL8                      MBBCCHHR FOR NOTE           BA4
NOTESIZE DS    H                        SIZE OF NOTE RECORD         BA4
IONOTE   DS    F                        NOTE IO WORKAREA            BA4
IOPOINT  DC    A(0)                     I/O HOLDER                  A94
FINDTTR  DC    X'000000',X'00'          TTRN FOR FIND MACRO         A94
TEXTADR  DS    CL8                      MBBCCHHR AREA FOR TEXT REC  BA4
TABPTR   DC    A(0,TABLN,0)             BXLE CONSTANTS              A04
TABAMT   DC    A((8*1024/TABLN)*TABLN)   INITIALLY 8K'S WORTH    86042
NOTEPTR  DC    A(0)          ADDRESS OF NOTE TABLE               86042
NOTEPTRA DC    F'0'                     NOTE LIST POINTER (WORKING) BA4
TTRN     DC    X'000001',X'00'          TTRN FOR WORK               A94
BEGINTTR DC    X'000001'                BOF TTR POINTER             A94
EOF1TTR  DC    XL3'0',X'00'             TTR HOLDER FOR OLD EOF      A94
TTLIM    DC    H'0'                     TT LIMIT VALUE              A94
DIRTK    DC    F'28',X'08',AL2(256)   DE/TRK; KL/DL FOR TRKCALC  86042
NOBDB    DC    X'00'         BYTES USED IN LAST USED DIR. BLK    87213
OLDNOBDB DC    X'00'         DS1NOBDB                            87213
DWSAVC   DC    5F'0'         CONVERT SAVE AREA                   87213
DWPRLTV  DC    A(0)          ABS TO REL TTR CONVERSION ROUTINE   87213
DWVTOCX  DC    XL8'0'        VTOC EXTENTS                        87213
DWDSCB   DC    XL5'0'        DSCB1 CCHHR                         87213
         EJECT
*---------------------------------------------------------------------*
*        READ DIRECTORY (EXCP)                                        *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL READ A PHYSICAL DIRECTORY BLOCK AND        *
*              RETURN ITS ADDRESS IN REGISTER ONE.  NOTE THAT         *
*              REGISTER 2 IS USED AND NOT RESTORED BY THIS ROUTINE.   *
*                                                                     *
*        THERE ARE NO CALLING PARAMETERS TO THIS ROUTINE AND ALL      *
*              AREAS USED ARE ASSUMED TO BE PROPERLY INITIALIZED.     *
*              THE TTRN FIELD WILL BE UPPED IN THIS ROUTINE SO THAT   *
*              THE CALLER NEED NOT BE CONCERNED WITH POSITIONING.     *
*.....................................................................*
         SPACE 2                                                    A04
         USING IOBSTDRD,R1              IOB DSECT
         SPACE 2                                                    A04
READDIR  DS    0H                                                   A04
         ST    R10,READDSV              SAVE LINKAGE                A04
         LA    R1,READIOB               GET THE IOB                 A04
         L     R0,TTRN                  SET TTRN                    BF4
         LA    R2,IOBSEEK               MBBCCHHR AREA               BF4
         BAL   R10,CONVTTR              SET MBBCCHHR                A04
         LA    R1,READIOB
         EXCP  (1)                      DO THE I/O                  A04
         WAIT  ECB=EXCPECB              WAIT FOR COMPLETION         A04
         LA    R1,READIOB               RELOAD                      BF4
         CLI   EXCPECB,X'7F'            ALL OK                      A04
         BE    READDI1                  YES, SIGNAL GOOD            A04
         CLI   EXCPECB,X'41'            NORMAL POST FOR UEX         A04
         BNE   ERR8                     NO, ERROR                   A04
         TM    IOBUSTAT,IOBUEX          EOF                         A04
         BNO   ERR8                     NO, ERROR                   A04
         L     R10,READDSV              GET LINKAGE                 A04
         BR    R10           TAKE EOF RETURN                     86042
READDI1  EQU   *                                                    A04
         BAL   R10,ADVTTRN              UP THE TTRN                 A04
         LA    R1,EXCPDATA              POINT TO DATA AREA          A04
         L     R10,READDSV              RESTORE LINKAGE             A04
         B     4(,R10)       TAKE NORMAL RETURN                  86042
         SPACE 2                                                    A04
         DROP  R1                                                   A04
         SPACE
READDSV  DS    F                        SAVE LINKAGE                A04
         EJECT
*---------------------------------------------------------------------*
*        GET DIRECTORY ENTRY SUBROUTINE                               *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL READ AND RETURN TO THE CALLER A LOGICAL    *
*              RECORD FROM THE DIRECTORY OF THE PDS.  NOTE THAT       *
*              ONLY THE STANDARD WORK REGS ARE USED AND ARE NOT       *
*              RESTORED.  NOTE ALSO THAT NO END OF FILE CHECK IS      *
*              DONE AND THE CALLER SHOULD DETECT LOGICAL END OF FILE  *
*              WHICH WILL OCCUR BEFORE PHYSICAL END OF FILE.          *
*.....................................................................*
         SPACE 2                                                    A04
         USING PDS,R1                   ADDRESSABILITY              A04
         SPACE
GETDIR   DS    0H                       ALIGN                       A94
         ST    R10,GETDIRSV             SAVE LINKAGE                A04
         L     R1,GETDIRS1              GET CURRENT POINTER         A94
         SR    R6,R6                    CLEAR WORK REG              A94
         IC    R6,PDS2INDC              GET USER LENGTH             A94
         N     R6,=F'31'                CLEAR UNWANTED              A94
         SLL   R6,1                     GET BYTES                   A94
         LA    R1,12(R1,R6)             POINT TO NEXT ENTRY         A94
         C     R1,GETDIRS2              OFF THE END                 A94
         BL    GETDIRX                  NO, GIVE IT TO CALLER       A94
         BAL   R10,READDIR              GET PHYSICAL                A94
         NOP   0             SWALLOW EOF RETURN                  86042
         LR    R6,R1                    SET FOR END CALC            A94
         AH    R6,0(R1)                 END POINTER                 A94
         ST    R6,GETDIRS2              SET NEW END                 A94
         LA    R1,2(R1)                 POINT TO ENTRY              A94
GETDIRX  EQU   *                                                    A94
         ST    R1,GETDIRS1              SAVE CURRENT POINTER        A94
         L     R10,GETDIRSV             RESTORE LINKAGE             A04
         BR    R10                      RETURN TO CALLER            A94
         SPACE 2                                                    A04
         DROP  R1                                                   A04
         SPACE 2                                                    A94
GETDIRS1 DC    F'0'                     POINTER TO CURRENT          A94
GETDIRS2 DC    F'0'                     END POINTER                 A94
GETDIRSV DS    F                        LINKAGE SAVE                A94
         EJECT
*---------------------------------------------------------------------*
*        WRITE DIRECTORY ROUTINE                                      *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL WRITE A PHYSICAL BLOCK TO THE PDS.         *
*              NOTE REGISTER 2 USAGE IN THIS ROUTINE.  THE TTRN       *
*              FIELD IS ALSO UPPED HERE TO ALLOW SEQUENTIAL WRITING   *
*              WITH MULTIPLE CALLS.  THE KDD FIELDS OF THE            *
*              COUNT RECORD ARE ASSUMED TO BE SET FOR THIS ROUTINE.   *
*.....................................................................*
         SPACE 2                                                    A04
         USING IOBSTDRD,R1              IOB DSECT
         SPACE
WRITEDIR DS    0H                                                   A94
         ST    R10,WRITDSV              SAVE LINKAGE                A94
         LA    R1,WRITEIOB              GET OUR IOB                 A94
         L     R0,TTRN                  SET FOR CONVERT             BF4
         LA    R2,IOBSEEK               SET RECEIVING AREA          BF4
         BAL   R10,CONVTTR              CONVERT TTR TO MBBCCHHR     A94
         MVC   EXCPADR,IOBCC            GET INTO RECORD             A94
         SR    R6,R6                    CLEAR WORK REG              A94
         IC    R6,IOBR                  GET RECORD NUMBER           A94
         BCTR  R6,0                     REDUCE FOR SEARCH           A94
         STC   R6,IOBR                  RESET IN SEEK               A04
         EXCP  (1)                      DO THE EXCP BIT             A94
         WAIT  ECB=EXCPECB              WAIT FOR COMPLETION         A94
         CLI   EXCPECB,X'7F'            ALL OK                      A94
         BNE   ERR7                     NO, GET OUT                 A94
         BAL   R10,ADVTTRN              ADVANCE THE TTR POINTER     A94
         L     R10,WRITDSV              RESTORE LINKAGE             A94
         BR    R10                      RETURN TO CALLER            A94
         SPACE 2                                                    A04
         DROP  R1                                                   A04
         SPACE
WRITDSV  DS    F                        SAVE LINKAGE                A94
         EJECT
*---------------------------------------------------------------------*
*        WRITE EOF MARK ROUTINE                                       *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WRITES THE EOF RECORD TO THE PDS AND MUST BE    *
*              THE LAST PHYSICAL WRITE GIVEN TO THE FILE.  IT WILL    *
*              SET THE KDD FIELD TO ZERO (EOF) AND CALL NORMAL        *
*              FILE OUTPUT.  NOTE THAT IT WILL ALSO REDUCE THE        *
*              TTRN FIELD SO THAT WE ARE POINTING TO THE EOF          *
*              RECORD.                                                *
*.....................................................................*
         SPACE
WRITEEOF ST    R10,WRITEFSV             SAVE LINKAGE                A04
         XC    EXCPKDD,EXCPKDD          SET KEY AND DATA TO ZERO    A04
         MVC   DB(4),TTRN    SAVE EOF RECORD TTR                 86042
         BAL   R10,WRITEDIR             WRITE IT OUT                A04
         MVC   TTRN,DB       RESTORE EOF RECORD ADDRESS          86042
         L     R10,WRITEFSV             RELOAD LINKAGE              A04
         BR    R10                      RETURN TO CALLER            A04
         SPACE 2                                                    A04
WRITEFSV DS    F                        LINKAGE SAVE                A04
         EJECT
*---------------------------------------------------------------------*
*        ADVANCE THE TTRN FIELD                                       *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL ADVANCE THE TTRN FIELD FOR PHYSICAL        *
*              I/O ROUTINES USING THE VALUE GOTTEN FROM THE           *
*              FORMAT 4 DSCB FOR NUMBER OF PDS BLOCKS PER TRACK.      *
*.....................................................................*
         SPACE 2                                                    A04
ADVTTRN  DS    0H                                                   A04
         ICM   R6,LOW3,TTRN             GET THE TTR                 A04
         LA    R6,1(R6)                 UP R VALUE                  A04
         CLM   R6,LOW1,DIRTK+3          RECORD VALUE EXCEEDED       A04
         BNH   ADVTTRNX                 NO                          A04
         LA    R6,256(,R6)              BUMP TT VALUE               A04
         IC    R6,=AL1(1)               SET R VALUE                 A04
ADVTTRNX EQU   *                                                    A04
         STCM  R6,LOW3,TTRN             RESTORE TTRN FIELD          A04
         BR    R10                      RETURN TO CALLER            A04
         SPACE 2                                                    A04
         EJECT
*---------------------------------------------------------------------*
*        NOTE LIST POINTER AND TABLE BUILD ROUTINE                    *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL CONSTRUCT THE NOTELIST TABLE FROM THE      *
*              NOTE LIST RECORD.  THE ADDRESS OF THE RECORD IS        *
*              OBTAINED FROM THE DIRECTORY ENTRY IN THE MOVER         *
*              TABLE AND CONVERTED TO MBBCCHHR FORM FOR CHECKING      *
*              DURING THE COPYING OF THE MEMBER.  THE NOTE LIST       *
*              IS THEN READ AND TTR INFORMATION IS CONVERTED TO       *
*              MBBCCHHR FORM AND PROPER ADDRESSES ARE PLACED IN       *
*              THE NOTELIST TABLE TO ALLOW A SUBSTITUTE               *
*              RECORD TO BE CREATED AND SUBSEQUENTLY PUT OUT          *
*              DURING THE COPY OPERATION.  NOTE THAT THE WORK         *
*              REGISTERS ARE USED DURING A CALLING SEQUENCE SO        *
*              THE ONLY ROUTINE WHICH COULD BE USED IS THE CONVERT    *
*              TO MBBCCHHR ROUTINE (CONVTTR) SINCE IT SAVES ALL       *
*              REGISTERS.                                             *
*.....................................................................*
         SPACE 2                                                    BA4
         USING TAB,R3                                               BA4
         USING NOTAB,R8                                             BA4
         SPACE 2                                                    BA4
SETNOTE  DS    0H                                                   BA4
         ST    R10,SETNOTSV             SAVE LINKAGE                BA4
         SR    R0,R0                    CLEAR                       BF4
         ICM   R0,HIGH3,TABTTRN         GET TTRN                    BF4
         LA    R2,NOTEADR               MBBCCHHR RETURN             BF4
         BAL   R10,CONVTTR              GO CONVERT                  BF4
         OI    GOSW,NOTEGO1+NOTEGO2     SET ALL NOTE ACTIVE         BA4
         MVC   FINDTTR,TABTTRN          SET FOR POINT TO THE        BA4
*                                       NOTE RECORD                 BA4
         POINT DATAIN,FINDTTR           SET FOR IO                  BA4
         L     R6,IONOTE                GET IO AREA                 BA4
         READ  DECB3,SF,DATAIN,(R6),'S' READ NOTE LIST              BA4
         CHECK DECB3                                                BA4
         LH    R7,DCBLRECL-IHADCB+DATAIN       GET SIZE IN R7    86042
         STH   R7,NOTESIZE              SET SIZE OF RECORD          BA4
         SR    R7,R7                                                BA4
         IC    R7,TABNL                 GET NUMBER OF ENTRIES IN LISBA4
         L     R8,NOTEPTR               POINT TO THE TABLE          BA4
SETNOTE1 EQU   *                                                    BA4
         L     R0,0(R6)                 PICK UP A TTRN              BA4
         LA    R2,NOTABSK               GET SEEK ADDRESS IN TABLE   BA4
         BAL   R10,CONVTTR              CONVERT                     BF4
         ST    R6,NOTABAD               SAVE ADDRESS OF NOTE        BA4
         LA    R8,NOTABLN(R8)           NEXT AREA                   BA4
         LA    R6,4(R6)                 NEXT TTRN                   BA4
         BCT   R7,SETNOTE1              AGAIN                       BA4
         MVC   NOTABSK(8),=X'FFFFFFFFFFFFFFFF'  CLOSE TABLE      86042
         MVC   NOTEPTRA,NOTEPTR         SET NEW WORK POINTER        BA4
         L     R8,NOTEPTR               RELOAD                      BA4
         SORT  (R8,NOTABLN),KEY=(0,8)   SORT JUST IN CASE           BA4
         L     R10,SETNOTSV             RELOAD LINKAGE              BA4
         BR    R10                                                  BA4
         SPACE 2                                                    BA4
         DROP  R3,R8                                                BA4
         SPACE 2                                                    BA4
SETNOTSV DS    F                                                    BA4
         EJECT
*---------------------------------------------------------------------*
*        UPDATE NOTE LIST RECORD                                      *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL CHECK THE NOTELIST TABLE FOR A MATCH       *
*              AGAINST THE RECORD JUST PROCESSED BY READ AND          *
*              WILL UPDATE THE SUBSTITUTE NOTE RECORD                 *
*              ACCORDINGLY.  NOTE THAT ONLY ONE COMPARE TO THE        *
*              FIRST MEMBER OF THE TABLE IS REQUIRED SINCE THE        *
*              TABLE IS IN ASCENDING ORDER.                           *
*.....................................................................*
         SPACE 2                                                    BE4
         USING NOTAB,R6                                             BE4
         SPACE 2                                                    BE4
UPDNOTE  DS    0H                                                   BE4
         ST    R10,UPDNOTSV             SAVE LINKAGE                BE4
         L     R6,NOTEPTRA              GET CURRENT POINTER         BE4
         CLC   NOTABSK,DCBFDAD-IHADCB+DATAIN   IS THIS MATCH ?   86042
         BNE   UPDNOTEX                 NO, EXIT                    BE4
         NOTE  DATAOUT                  GET CORRESPONDING OUTPUT    BE4
         L     R7,NOTABAD               ADDRESS OF THIS POINTER     BE4
         STCM  R1,HIGH3,0(R7)           SET IN OUTPUT RECORD        BE4
         LA    R6,NOTABLN(R6)           NEXT ONE                    BE4
         ST    R6,NOTEPTRA              RESET CURRENT               BE4
         CLC   =X'FFFFFFFFFFFFFFFF',0(R6)  END OF TABLE ?        86042
         BNE   UPDNOTEX                 NO, EXIT                    BE4
         NI    GOSW,255-NOTEGO2         INDICATE COMPLETE           BE4
UPDNOTEX EQU   *                                                    BE4
         L     R10,UPDNOTSV             RELOAD LINKAGE              BE4
         BR    R10                      EXIT TO CALLER              BE4
         SPACE 2                                                    BE4
         DROP  R6                                                   BE4
         SPACE 2                                                    BF4
UPDNOTSV DS    F                                                    BF4
         EJECT
*---------------------------------------------------------------------*
*        CONVERT TTRN TO MBBCCHHR IN IOB SEEK FIELD                   *
*---------------------------------------------------------------------*
*.....................................................................*
*        THIS ROUTINE WILL CALL THE RESIDENT TTRN TO MBBCCHHR         *
*              ROUTINE TO CONVERT FOR PHYSICAL I/O OR                 *
*              DCBFDAD COMPARISON.  REGISTER 0 AND 2 ARE              *
*              ASSUMED TO BE LOADED WITH THE REQUIRED PARAMETERS      *
*              (TTRN AND POINTER TO MBBCCHHR AREA).  NOTE THAT        *
*              SINCE REGISTERS ARE DESTROYED BY THE RESIDENT          *
*              ROUTINE, WE WILL PRESERVE ALL REGS IN THIS ROUTINE.    *
*.....................................................................*
         SPACE 2                                                    A04
CONVTTR  DS    0H                                                   A04
         STM   R1,R13,CONVSAV           SAVE ALL REGS               A04
         L     R1,DCBDEBAD-IHADCB+DIRECT  GET DEBAD FROM DCB     86042
         L     R15,CVTPTR    GET CVT ADDRESS                     86042
         L     R15,CVTPCNVT-CVTMAP(,R15)  RESIDENT CONVERT       86042
         BALR  R14,R15                  GO CONVERT                  A04
         USING *,R14                    ADDRESSABILITY              A04
         LM    R1,R13,CONVSAV           RESTORE REGS                A04
         DROP  R14                                                  A04
         BR    R10                      RETURN TO CALLER            A04
         SPACE 2                                                    A04
CONVSAV  DS    13F                      SAVE AREA FOR REGS          A04
         SPACE 2                                                    BE4
         LTORG ,
         EJECT
*---------------------------------------------------------------------*
*        E X C P   A R E A S                                          *
*---------------------------------------------------------------------*
         SPACE 2                                                    A04
WRITEIOB IOBGEN FLAGS=(UN,CC),ECB=EXCPECB,DCB=DIRECT,                  X
               CCWS=WRITECCW
READIOB  IOBGEN FLAGS=(UN,CC),ECB=EXCPECB,DCB=DIRECT,                  X
               CCWS=READCCW
WRITECCW CCW   SEARCH,WRITEIOB+32+3,X'40',5                         A04
         CCW   TIC,*-8,0,0                                          A04
         CCW   WCKD,EXCPAREA,X'20',8    LET HARDWARE FILL IN ZEROS  A04
READCCW  CCW   SEARCH,READIOB+32+3,X'40',5                          A04
         CCW   TIC,*-8,0,0                                          A04
DSCBCCW  CCW   RKD,EXCPKEY,X'00',256+8  READ KEY AND DATA        86042
DWRDSCB  CCW   X'0E',EXCPDATA,0,140  READ KEY/DATA OF DSCB1      87213
         SPACE 2                                                    A04
EXCPECB  DC    F'0'                     EXCP ECB FOR IOS POSTING    A04
EXCPAREA DS    0D                                                   A04
EXCPCNT  DS    0CL8                     COUNT FIELD                 A04
EXCPADR  DS    CL5                      CCHHR ADDRESS               A04
EXCPKDD  DS    0CL3                     KDD AREA                    A04
         DC    AL1(8),AL2(256)          INITIALIZE FOR WRITE        A04
EXCPKEY  DS    CL8                      KEY AREA                    A04
EXCPDATA DS    CL256                    DIRECTORY DATA AREA         A04
         EJECT
*---------------------------------------------------------------------*
*        D C B S                                                      *
*---------------------------------------------------------------------*
         SPACE 1                                                 86042
SYSPRINT PRTWORK SYSPRINT,SYSTERM,TITLE=3                        86042
CONSOLE  PRTWORK *USER       USER OR CONSOLE WTO IF NOT TSO      86042
         SPACE 2                                                    A94
DIRECT   DCB   DDNAME=PDS,DSORG=PS,MACRF=E,EXLST=JFCBX
         SPACE 2                                                    A94
DATAIN   DCB   DDNAME=PDS,DSORG=PO,MACRF=R,EODAD=MOVESTW,              *
               RECFM=U,EXLST=JFCBX  GET LRECL FILLED IN ON READS 86042
         SPACE 2                                                    A94
DATAOUT  DCB   DDNAME=PDS,DSORG=PO,MACRF=W,EXLST=JFCBX           87213
         SPACE 1                                                 86042
JFCBX    DC    0A(0),X'87',AL3(0) JFCB ADDRESS                   86042
         SPACE 2                                                    BA4
SAVE     DSECT ,             SAVE/WORK AREA                      86042
DB       DS    D                                                 86042
DB2      DS    D                                                 86042
@SERVICE DS    A             ADDRESS OF SERVICE ROUTINE          86042
@PRINTER DS    A             ADDRESS OF PRINTER ROUTINE          86042
DIRUSE   DS    F        1/2  DIRECTORY BLOCKS USED               86042
DIRCNT   DS    F        2/2  BLOCKS ALLOCATED                    86042
NUMADD   DS    F             BLOCKS DESIRED OR TO BE ADDED       86042
STARLIST SERVCALC MF=D                                           86042
CCODE    DS    H             RETURN CODE                         86042
GOSW     DC    AL1(0)                   GO/ NOGO SWITCH             BA4
PARMOP   DS    C             ADD/DEL PARM REQUEST                86042
         SPACE 1                                                    BA4
NOTETAB  DS    256CL12                                              BA4
         SPACE 2                                                    A04
MYJFCB   DS    0D                                                86042
         IEFJFCBN ,                                              86042
SAVEEND  EQU   *                                                GP13007
         SPACE 2
*---------------------------------------------------------------------*
*        MISCELLANEOUS EQUATES                                        *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
HIGH3    EQU   14                                                   BA4
LOW3     EQU   7                                                    A04
LOW2     EQU   3                                                    BH4
LOW1     EQU   1                                                    A04
SEARCH   EQU   X'31'                                                A04
TIC      EQU   X'08'                                                A04
WCKD     EQU   X'1D'                                                A04
RKD      EQU   X'0E'         READ KEY AND DATA                   86042
         SPACE 2                                                    BA4
*---------------------------------------------------------------------*
*        GO/NOGO EQUATES                                              *
*---------------------------------------------------------------------*
         SPACE
TEXTGO   EQU   X'80'                                                BA4
NOTEGO1  EQU   X'40'                                                BA4
NOTEGO2  EQU   X'20'                                                BA4
         SPACE 2
*---------------------------------------------------------------------*
*        DSECTS                                                       *
*---------------------------------------------------------------------*
         SPACE 1                                                    A04
TAB      DSECT
TABNAME  DS    CL8                                                  A94
TABTTRP  DS    CL3                                                  A94
TABINDC  DS    CL1                                                  A94
TABTTRT  DS    CL3                                                  BA4
TABZERO  DS    CL1                                                  BA4
TABTTRN  DS    CL3                                                  BA4
TABNL    DS    CL1                                                  BA4
TABDATA  DS    CL54                                                 BA4
TABLN    EQU   *-TAB                                                A94
         SPACE 2                                                    A04
PDS      DSECT
         DS    CL8                                                  A94
PDS2TTRP DS    CL3                                                  A94
PDS2INDC DS    CL1                                                  A94
PDS2ALIA EQU   X'80'                                                A94
PDS2NOTE EQU   X'60'                                                A94
PDS2TTRT DS    CL3                                                  BA4
PDS2ZERO DS    CL1                                                  BA4
PDS2TTRN DS    CL3                                                  BA4
PDS2NL   DS    CL1                                                  BA4
         SPACE 2                                                    A04
         PRINT &PRTSYS                                           86042
CVTDSECT DSECT ,                                                 86042
         CVT   DSECT=YES                                         86042
         IHACDE ,                                                86042
         IEFTIOT1 ,                                              86042
         DCBD  DEVD=DA,DSORG=PO                                  86042
         IEZDEB ,                                                87213
IOBUEX   EQU   X'01'                                                A04
******** IOB DSECT:
         IEZIOB             IOB DSECT
         SPACE 2                                                    BA4
NOTAB    DSECT
NOTABSK  DS    CL8                                                  BA4
NOTABAD  DS    CL4                                                  BA4
NOTABLN  EQU   *-NOTAB                                              BA4
         SPACE 2                                                    BF4
**********DSCB DSECT:
         IECSDSL1 (1,4)     DSCB FORMAT1 + 4 DSECT
         AIF   (&MVSXA).SYSDEF                                  GP04234
DS1FLAG1 EQU   DS1NOBDB+1,1,C'X'  MORE FLAGS
DS1COMPR EQU   X'80'           COMPRESSABLE EXTENDED IF DS1STRP
DS1CPOIT EQU   X'40'           CHECKPOINTED D S
DS1SMSFG EQU   DS1FLAG1+17,1,C'X'  SMS FLAG
DS1SMSDS EQU   X'80'           SMS D S
DS1SMSUC EQU   X'40'           NO BCS ENTRY
DS1REBLK EQU   X'20'           MAY BE REBLOCKED
DS1CRSDB EQU   X'10'           BLKSZ BY DADSM
DS1PDSE  EQU   X'08'           PDS/E
DS1STRP  EQU   X'04'           EXTENDED FORMAT D S
DS1PDSEX EQU   X'02'           HFS D S
DS1DSAE  EQU   X'01'           EXTENDED ATTRIBUTES EXISY
DS1SCEXT EQU   DS1SMSFG+1,3,C'X'  SECONDARY SPACE EXTENSION
DS1SCXTF EQU   DS1SCEXT,1,C'X'  -"- FLAG
DS1SCAVB EQU   X'80'           SCXTV IS AVG BLOCK LEN
DS1SCMB  EQU   X'40'                 IS IN MEGBYTES
DS1SCKB  EQU   X'20'                 IS IN KILOBYTES
DS1SCUB  EQU   X'10'                 IS IN BYTES
DS1SCCP1 EQU   X'08'           SCXTV COMPACTED BY 256
DS1SCCP2 EQU   X'04'                 COMPACTED BY 65536
DS1SCXTV EQU   DS1SCXTF+1,2,C'X'  SEC SPACE EXTNSION VALUE
DS1ORGAM EQU   DS1ACBM         CONSISTENT NAMING - VSAM D S
DS1RECFF EQU   X'80'           RECFM F
DS1RECFV EQU   X'40'           RECFM V
DS1RECFU EQU   X'C0'           RECFM U
DS1RECFT EQU   X'20'           RECFM T   001X XXXX IS D
DS1RECFB EQU   X'10'           RECFM B
DS1RECFS EQU   X'08'           RECFM S
DS1RECFA EQU   X'04'           RECFM A
DS1RECMC EQU   X'02'           RECFM M
*   OPTCD DEFINITIONS   BDAM    W.EFA..R
*                       ISAM    WUMIY.LR
*             BPAM/BSAM/QSAM    WUCHBZTJ
DS1OPTIC EQU   X'80'  FOR DS1ORGAM - CATLG IN ICF CAT
DS1OPTBC EQU   X'40'           ICF CATALOG
DS1RACDF EQU   DS1IND40
DS1SECTY EQU   DS1IND10
DS1WRSEC EQU   DS1IND04
DS1SCAL1 EQU   DS1SCALO,1,C'X'    SEC. ALLOC FLAGS
DS1DSPAC EQU   X'C0'         SPACE REQUEST MASK
DS1CYL   EQU   X'C0'           CYLINDER BOUND
DS1TRK   EQU   X'80'           TRACK
DS1AVRND EQU   X'41'           AVG BLOCK + ROUND
DS1AVR   EQU   X'40'           AVG BLOCK LEN
DS1MSGP  EQU   X'20'
DS1EXT   EQU   X'10'           SEC. EXTENSION EXISTS
DS1CONTG EQU   X'08'           REQ. CONTIGUOUS
DS1MXIG  EQU   X'04'           MAX
DS1ALX   EQU   X'02'           ALX
DS1DSABS EQU   X'00'           ABSOLUTE TRACK
DS1SCAL3 EQU   DS1SCAL1+1,3,C'X'  SEC ALLOC QUANTITY
.SYSDEF  SPACE 1
**********UCB DSECT:
         IEFUCBOB           UCB DSECT
         END   ,                                                 86042
