FLOWER   TITLE 'F L O W E R   ***   REFLOW TEXT TO ASM DCs'
         PUNCH ' ORDER FLOWER(P) '
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
         PRINT &PRTSOR
***********************************************************************
*                                                                     *
*        COPYRIGHT 2013  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                  gerhard@postpischil.com                            *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*   THIS UTILITY READS A SEQUENTIAL DATA SET AND BREAKS THE INPUT     *
*   INTO BLANK DELINEATED WORDS.                                      *
*   THE WORDS ARE RECONSTITUTED INTO LINES OF A SPECIFIED MAXIMUM     *
*   LENGTH, NORMALLY 80 BYTES, BUT OTHER LENGTHS <256 ARE VALID.      *
*                                                                     *
*   AN INPUT LINE BEGINNING WITH A SPACE FORCES A NEW LINE WITHOUT    *
*   THAT SPACE. MULTIPLE SPACES ARE COLLAPSED TO A SINGLE SPACE, AND  *
*   A REVERSE SLASH IS TRANSLATED TO A SIGNIFICANT SPACE.             *
*   IN SUPPORT OF TSO-STYLE HELP, A RIGHT PARENTHESIS IN COLUMN 1     *
*     STARTS A NEW LINE.                                              *
*   A COMPLETELY BLANK LINE IS PRODUCES THAT WAY                      *
*   FOR ASM AND EXH OPTIONS, QUOTES AND APOSTROPHES ARE DOUBLED.      *
*   FOR EXHIBIT, A REVERSE QUOTE FOLLOWED BY A DIGIT IS CONVERTED TO  *
*   A COLOR ORDER; A DOUBLE QUOTE BECOMES A SINGLE QUOTE; OTHER TEXT  *
*   GETS COPIED AS IS.                                                *
*                                                                     *
*   AN INPUT LINE BEGINNING WITH ./ FORCES A NEW LINE, AND IS COPIED  *
*     AS-IS. THIS SUPPORTS USING A SINGLE FILE TO MAINTAIN A PDS,     *
*     E.G., A HELP FILE.                                              *
*                                                                     *
*   BY DEFAULT, SYSPUNCH IS 80 BYTES WIDE, AND GETS FORMATTED TEXT.   *
*                                                                     *
*   PARM OPTIONS ARE:                                                 *
*     FORMAT (DEFAULT) - output has text only                         *
*     ASM              - output is suitable for assembly inclusion    *
*                        DC CL(max)'...text...' with continuations:   *
*                        as needed. Default LEN is 80.                *
*     EXH              - formatted for Exhibit SCLINE Help screens:   *
*                        FDLINE ,(GR),CL(max)'...text...'             *
*                        Default LEN is 79.                           *
*              ASM/EXH produce card format output (80 bytes, no seq.) *
*     LABEL            - produces sequential labels for ASM and EXH   *
*                        format Ynn                                   *
*     NOLABEL (default)- produce 3 blanks instead of label            *
*                                                                     *
*                                                                     *
*     NOSEQ            - inhibits sequence number checking.           *
*     SEQ (DEFAULT)    - if the first input record has a length of 80 *
*                        and columns 73-80 are numeric, truncates all *
*                        input to length 72.                          *
*                                                                     *
*     LEN=nnn          - specifies a shorter output length than       *
*                        derived from the above.                      *
*                                                                     *
*   INPUT FILE:  SYSIN                                                *
*   OUTPUT FILE: SYSPUNCH                                             *
*     The output data size is the largest acceptable size processed.  *
*                                                                     *
*   OPTIONAL LISTING: SYSPRINT                                        *
*                                                                     *
***********************************************************************
         SPACE 1
FLOWER   PGMHEAD ZERO31,BASE=(R12,R11),PARM=R6,BNDRY=PAGE,AM=24,RM=24
         ZAP   LABSEQ,=P'1'
         SPACE 1
*DEBUG*  BANDAID INIT,SPIE
         SERVINIT ,
         SERVLOAD @INPREAD,@PRINTER,SUBSTRIP
         SPACE 1
         PRTOPEN SYSPRINT,OPT=NOWTO
         PRTOPEN SYSPUNCH,OPT=ABEND,DEV=2  NON-OPTIONAL PUNCH
         LR    R1,R0         COPY RETURN WORK AREA ADDRESS
         USING PWWORK,R1     FEEDBACK WORK AREA IN R0
         LH    R0,PWWIDTH    GET MAXIMUM DATA WIDTH
         MINH  R0,=H'255'    NOT TOO LONG
         ST    R0,OUTLEN     SAVE FOR LENGTH CHECKING
         ST    R0,OUTFIT     SAVE FOR LENGTH CHECKING
         ST    R0,OUTMAX     MAXIMUM CONSTRUCTION LENGTH
         LA    R0,255        TRUNCATE INPUT AS REQUIRED
         ST    R0,INPMAX
         DROP  R1
         LA    R14,OUTBUFF
         ST    R14,@OUTBUF1
         L     R15,=A(L'OUTBUFF+L'OUTHOLD)
         L     R1,=X'40000000'
         MVCL  R14,R0        CLEAR OUTPUT BUFFER
         LA    R1,OUTBUFF
         ST    R1,@OUTBUFF   INIT OUTPUT BUFFER
         PRTL  '#                        TEXT REFORMAT UTILITY',TITLE=1
         INPOPEN SYSIN,OPT=ABEND
         SPACE 1
*---------------------------------------------------------------------*
*   PROCESS THE PARM FIELD (ASM, EXH, LABEL, NOSEQ)                   *
*---------------------------------------------------------------------*
         PARMLOAD R8,PTR=R6
         LTR   R9,R9         ANY ?
         BZ    ENDPARM       NO; ASSUME DEFAULTS
         CH    R9,=Y(L'LINE)  TOO LONG?
         BH    BADPARM       SO SORRY
         LA    R0,LINE       POINT TO PARM LINE
         LA    R1,L'LINE+8   MAX SIZE SUPPORTED
         L     R15,=X'40000000'  SET FOR BLANK FILL
         MVCL  R0,R14        BLANK OUTPUT LINE
         BCTR  R9,0          SET FOR EXECUTE
         EX    R9,MVCLINE    MOVE TO LINE
         PRTDATA '--- PARM is',(LINE,DEB,PAD)
         LA    R5,LINE       POINT TO LINE
         LA    R3,LINE+L'LINE-1  END
PARMLOOK VLOOK T=PARMTAB,R=R3,Y=R3,ABBR=3,FULL==
         CR    R5,R3         BUFFER EXHAUSTED?
         BH    ENDPARM       YES; BEGIN PROCESSING
BADPARM  PRTDATA '*** Invalid PARM field',(0(R5),8,PAD),'****'
EXIT16   MVICC 16            SET ERROR
         B     ENDTERM       AND EXIT
MVCLINE  OC    LINE(0),0(R8)  MOVE AND UPPER-CASE USER'S PARM FIELD
         SPACE 1
PARMTAB  BTAB  'NOSEQUENCE',SETNSEQ,BASE=*
         BTAB  'SEQUENCE',SETSEQ  CHECK FOR SEQUENCE NUMBER IN 73-80
         BTAB  'RAW',SETRAW  PLAIN TEXT ONLY
         BTAB  'TEXT',SETRAW  PLAIN TEXT ONLY
         BTAB  'ASSEMBLER',SETASM
         BTAB  'ASSEMBLY',SETASM
         BTAB  'ASM',SETASM
         BTAB  'EXHIBIT',SETEXH   SET FOR EXHIBIT
         BTAB  'LABEL',SETLAB     ADD LABELS
         BTAB  'NOLABEL',SETNLAB  OFF LABELS
         BTAB  'ALIGN',SETLABA    PUT DC, ETC. IN COLUMN 10
         BTAB  'VERIFY',SETVER    SHOW INPUT
         BTAB  'NOTRIM',SETNTRIM  SUPPRESS TRIMMING
         BTAB  'TRIM',SETTRIM     RESET TRIMMING
         BTAB  'MEMO',SETMEMO     SET LENGTH TO 72              GP13276
         BTAB  'LENGTH=',SETLEN   OVERRIDE (WIDER) OUTPUT LRECL
         BTAB  'LEN=',SETLEN      OVERRIDE (WIDER) OUTPUT LRECL
         BTAB  ',',PARMLOOK  IGNORE BLANKS AND COMMAS
         BTAB  ';',PARMLOOK    AND SEMI-COLONS
         BTAB  *END
         SPACE 1
SETSEQ   ZI    OPTFLAGS,FGNOSEQ   RESET SEQUENCE CHECKING
         B     PARMLOOK
         SPACE 1
SETNSEQ  OI    OPTFLAGS,FGNOSEQ   SET SEQUENCE CHECKING
         B     PARMLOOK
         SPACE 1
SETRAW   ZI    OPTFLAGS,FGASM+FGEXH  NEITHER ASSEMBLER NOR EXH FORMAT
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETASM   OI    OPTFLAGS,FGASM   ASSEMBLER FORMAT
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETEXH   OI    OPTFLAGS,FGEXH   EXHIBIT FORMAT
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETLABA  OI    OPTFLAGS,FGALI   ALIGN
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETLAB   OI    OPTFLAGS,FGLAB   INSERT LABELS
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETNLAB  ZI    OPTFLAGS,FGLAB   SUPPRESS LABELS
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETVER   OI    OPTFLAGS,FGVER   ECHO INPUT
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETNTRIM OI    OPTFLAGS,FGNOTRIM  SUPPRESS TRIMMING
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETTRIM  ZI    OPTFLAGS,FGNOTRIM  RESET TRIMMING
         B     PARMLOOK      GO FOR MORE
         SPACE 1
SETMEMO  LA    R0,72         PREFERRED LENGTH FOR MEMO TYPE     GP13276
         B     SETMLEN         AND SET IT                       GP13276
         SPACE 1
SETLEN   VLOOK R=R3,Y=R3,ABBR=3   SKIP BLANKS
         LA    R1,5(9,R5)    STOPPER
         TRT   0(6,R5),TRTDIG     LOOK FOR NUMERICS
         LR    R15,R1        END ADDRESS
         SR    R15,R5        LESS START
         BNP   PARMLOOK        NULL; CONTINUE PARSING
         BCTR  R15,0         EXECUTE LENGTH
         EX    R15,EXPACK    CONVERT TO PACKED
         CVB   R0,DB         CONVERT TO BINARY
SETMLEN  CL    R0,=A(255)    VALID ?
         BH    BADPARM         NO; REJECT
         ST    R0,USERMAX    SAVE OVERRIDE
         LR    R5,R1         SET NEW SCAN START
         B     PARMLOOK      GO FOR MORE
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK PARM FOR CONFLICTS                                          *
*---------------------------------------------------------------------*
ENDPARM  SR    R9,R9         FORCE INPUT READ
         TM    OPTFLAGS,FGASM+FGEXH
         BZ    ALIPARM
         BM    TOOPARM
         PRTL  ' *** ASM and EXH option mutually exclusive'
         B     EXIT16
ALIPARM  TM    OPTFLAGS,FGALI   RAW ALIGNED?
         BZ    LABPARM            NO
         ZI    OPTFLAGS,FGALI   RESET IT
         PRTL  ' *** ALIGN invalid with RAW text; ignored'
LABPARM  TM    OPTFLAGS,FGLAB   RAW WITH LABEL?
         BZ    VALPARM            NO
         ZI    OPTFLAGS,FGLAB   RESET IT
         PRTL  ' *** LABEL invalid with RAW text; ignored'
         B     VALPARM
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK FOR INPUT; ADJUST MAX LENGTH IF SEQUENCE NUMBERS            *
*---------------------------------------------------------------------*
TOOPARM  XC    OUTFIT(4),OUTFIT        CLEAR FOR FINAGLING
         MVC   OUTFIT+3(1),OPTFLAGS    COPY OPTION FLAGS
         NI    OUTFIT+3,FGALI+FGLAB    KEEP ONLY CRITICAL FLAGS
         LA    R14,CAPTABA        ELSE SET FOR ASSEMBLY
         TM    OPTFLAGS,FGEXH     BUT IS IT ?
         BZ    VALPCOMM             NO
         LA    R14,CAPTABE        SET FOR EXHIBIT
         MVI   TRTASM+C'`',4      CONVERT FDLINE COLOR ORDERS
VALPCOMM SR    R15,R15
         IC    R15,4(,R14)   SET DEFAULT SCREEN WIDTH
         ST    R15,OUTLEN
         ST    R15,OUTMAX
         TR    OUTFIT+3(1),0(R14)      CONVERT TO LENGTH
         SPACE 1
VALPARM  INPGET ,            GET A RECORD
         BXLE  R15,R15,HAVEINP    HAVE DATA
         PRTL  ' *** SYSIN is empty or bad'
         B     EXIT16
         SPACE 1
HAVEINP  LR    R3,R0         COPY LENGTH
         LR    R2,R1         COPY ADDRESS
         INPKEEP ,           REPEAT ON NEXT GET
         TM    OPTFLAGS,FGNOSEQ   USER HAS SEQUENCE NUMBERS ?
         BNZ   SHOWPARM        NO
         CH    R3,=H'80'     CARD FORMAT ?
         BNE   SHOWPARM
         TRT   72(8,R2),TRTDIG    SEQUENCE NUMBER ?
         BNZ   SHOWPARM
         LA    R0,72         TRUNCATE INPUT
         ST    R0,INPMAX
         PRTL  ' *** Input truncated to 72 due to sequence numbers'
         SPACE 1
SHOWPARM PRTLIST MSGOPTS
         B     NOPRMSEQ      SKIP AROUND CONSTANTS
         SPACE 1
MSGOPTS  FDPRT '--- Options now on are : ',NL
         FDCLI  OPTFLAGS,0,BE=MSGOPTS0
         FDFLAG OPTFLAGS,TABLE=OPTSHO,SPACE=2,LEN=100
         FD    *END
MSGOPTS0 FDPRT 'default'
         FD    *END
         SPACE 1
OPTSHO   FLGTAB FGNOSEQ,'Ignore sequence numbers',MLEN=1
         FLGTAB FGALI,'Aligned'
         FLGTAB FGEXH,'Exhibit format'
         FLGTAB FGASM,'ASM format'
         FLGTAB FGLAB,'with labels'
         FLGTAB FGVER,'verify'
         FLGTAB FGNOTRIM,'keep trailing blanks'
         FLGTAB *END
         SPACE 1
NOPRMSEQ SR    R4,R4         OUTPUT BUFFER EMPTY
         ICM   R15,15,USERMAX
         BZ    DEFMAX
         ST    R15,OUTLEN
         ST    R15,OUTMAX
         PRTDATA '--- Width restricted to',(USERMAX,I,DEB,PAD)
DEFMAX   DS    0H
 PRTDATA '--- Max length is',(OUTLEN,I,DEBL,PADL),', text len is',(OUTF*
               IT,I,DEB,PAD)
         PRTL  '  '          SPACER TO PROCESSING MESSAGES
         SPACE 1
*---------------------------------------------------------------------*
*   PROCESS NEXT WORD, IF ANY, ELSE READ NEXT RECORD                  *
*---------------------------------------------------------------------*
GETLOOP  LR    R9,R9         TEST RESIDUAL LENGTH
         BP    GETWORD         MORE IN CURRENT BUFFER
GETREC   INPGET ,            NEW LINE MODE ?
         BXH   R15,R15,EODAD      DONE ?
         LR    R8,R1         TEXT START
         LTR   R9,R0         LENGTH
         BNP   GETREC          IGNORE ZERO LENGTH ???
         INC   NUMREAD       INCREMENT INPUT COUNTER
         MIN   R9,INPMAX     TRUNCATE AS NECESSARY
         SPACE 1
*SUPPORT CLI   0(R8),C' '    POSSIBLE ALL BLANK LINE ?          GP13276
*BOXES   BNE   LINEDATA        NO                               GP13276
         LR    R14,R9        COPY LENGTH                        GP13276
         SH    R14,=H'2'     MAKE EXECUTE LENGTH                GP13276
         EX    R14,EXALLSOM  ENTIRE LINE SAME ?                 GP13276
         BE    LINEMAKE        YES; COPY AS IS                  GP13276
LINEDATA CLI   0(R8),C' '    FORCED NEW LINE ?
         BE    LINEBREK                                         GP13211
         CLI   0(R8),C')'    TSO-HELP STYLE NEW LINE ?          GP13276
         BE    LINEMAKE                                         GP13211
         CLC   =C'./',0(R8)  IEBUPDTE ?                         GP13211
         BE    LINEMAKE                                         GP13276
         CLC   =C'><',0(R8)  IEBUPDTE ?                         GP13276
         BNE   NEWLINE         NO; PROCESS WORDLY               GP13211
LINEMAKE BAL   R14,DOTRIM                                       GP13276
         BAL   R14,PUTREC    PROCESS WHAT WE HAVE               GP13276
         PRTF  0(R8),(R9),CC=NO,DEV=(1,2)  PUNCH IT AS READ     GP13211
         B     GETREC        AND READ ANOTHER                   GP13211
LINEBREK BAL   R14,DOTRIM
         BAL   R14,PUTREC    PROCESS WHAT WE HAVE
         LA    R8,1(,R8)     SKIP ONE BLANK
         BCTR  R9,0            AND ADJUST LENGTH
NEWLINE  TM    OPTFLAGS,FGVER   VERIFY MODE?
         BZ    GETWORD
         PRTF  0(R8),(R9),CC=NO  ECHO THE INPUT
         SPACE 1
*---------------------------------------------------------------------*
*   GET NEXT ACTION CHARACTER; MOVE DATA                              *
*---------------------------------------------------------------------*
GETWORD  LA    R15,256       SET MAX LENGTH IN ONE CHUNK
         MIN   R15,(R9)      GET CHUNK LENGTH
         LA    R1,0(R15,R8)  POINT TO STOPPER IF TRT PASSES
         SH    R15,=H'1'     MAKE EX LENGTH
         BM    GETREC        DONE WITH THIS RECORD
         SR    R2,R2         FOR BLANK TEST
         EX    R15,EXTRTTAB  LOOK FOR WORD OR RECORD END
         LR    R5,R1         SAVE STOP POSITION
         SR    R1,R8         GET NUMBER OF BYTES BEFORE SPACE
         LTR   R15,R1        LENGTH TO ADVANCE
         BNP   DONEWRAP        NOTHING TO MOVE
         BCTR  R1,0
         EX    R1,EXTRNTXT   TRANSLATE IT
         BAL   R14,ADDWORD   MOVE TEXT
DONEWRAP MAXH  R15,=H'1'     INCREASE IF SPACE ONLY
         AR    R8,R15        INCREASE INPUT CURSOR
         SR    R9,R15        FIX INPUT LENGTH
         B     GETLOOP       QUIT IF DONE WITH INPUT RECORD
         SPACE 1
*---------------------------------------------------------------------*
*   MOVE NEXT WORD TO OUTPUT; PROCESS BUFFER IF NO FIT                *
*     WORD STARTS IN R8, LENGTH IN R15, LENGTH-1 IN R1                *
*---------------------------------------------------------------------*
ADDWORD  STM   R0,R15,SUBSAVL2    SAVE REGISTERS
         LTR   R9,R15        VALID LENGTH
         BNP   ADDWORDX        NO; JUST RETURN
         STM   R15,R1,ADDWSAVE    SAVE FOR RECURSION
         C     R9,OUTLEN     VALID LENGTH ?
         BNH   ADDWLOK         YES
         PRTDATA '*** Record starting with',(0(R8),32,PAD),'too long'
         INC   NUMTRUNC
         MIN   R9,OUTLEN     TRUNCATE IF TOO LONG
         ST    R9,ADDWSAVE   FAKE ORIGINAL LENGTH TO TRUNCATED ONE
         LR    R1,R9
         BCTR  R1,0
         ST    R1,ADDWSAVE+2*4    SET NEW EXEC LEN
         LM    R15,R1,ADDWSAVE  RESTORE
ADDWLOK  LR    R4,R9         SAVE LENGTH
         LR    R15,R9        SAVE LENGTH
         LR    R5,R4
         BCTR  R5,0          EXECUTE LENGTH
         STM   R15,R5,ADDWSAVE    SAVE FOR RECURSION
         TM    OPTFLAGS,FGASM+FGEXH    SPECIAL HANDLING ?
         BZ    ADDWNEW                   NO
         EX    R5,EXTRTASM   ANY SPECIAL CHARACTERS?
         BZ    ADDWNEW         NO; MOVE AS IS
         SR    R4,R4
         LA    R3,OUTHOLD
*  ADD CODE TO MOVE TO OUTHOLD AND DOUBLE SPECIAL CHARACTERS
*   R8 - INPUT CURSOR   R9 - RESIDUAL LENGTH
*   R3 - OUTPUT CURSOR  R4 - OUTPUT LENGTH
ADDWLOOP LTR   R14,R9        ANYTHING LEFT TO SCAN ?
         BNP   ADDWLUMP        NO; SET FOR ADD
         BCTR  R14,0         EXECUTE LENGTH
         LA    R1,1(R14,R8)  SCAN STOPPER
         SR    R2,R2           DETECT STOP VALUE
         EX    R14,EXTRTASM  ANYTHING SPECIAL ?
         LR    R15,R1        COPY STOP ADDRESS
         SR    R15,R8        GET LENGTH
         BNP   ADDWLASM        NO TEXT; SPECIAL ONLY
         EX    R15,EXMVCTXT  MOVE PARTIAL TEXT
         AR    R3,R15        NEW DESTINATION
         AR    R4,R15        NEW LENGTH
         AR    R8,R15        NEW SOURCE
         SR    R9,R15        NEW INPUT LENGTH
ADDWLASM CH    R2,=H'4'      SPECIAL CHARACTER ?
         BL    ADDWLOOP        NO; END OF INPUT ?
         BE    ADDWCOL         YES; COLOR ORDER
         STC   R2,0(,R3)     COPY SPECIAL CHARACTER
         STC   R2,1(,R3)     DOUBLE IT
         AH    R3,=H'2'      NEW DESTINATION
         AH    R4,=H'2'      NEW PHYSICAL LENGTH
         AH    R8,=H'1'      NEW SOURCE
         SH    R9,=H'1'      NEW INPUT LENGTH
         B     ADDWLOOP        TRY AGAIN
ADDWCOL  CLI   1(R1),C'1'    VALID COLOR ?
         BL    ADDWCOL2
         CLI   1(R1),C'7'    VALID COLOR ?
         BNH   ADDWCOL#
ADDWCOL2 CLC   0(1,R1),1(R1)      DOUBLED ?
         BE    ADDWCOLX             YES; ESCAPE
         B     ADDWCOLZ             NO; NOT VALID - COPY AS IS
*   FOUND `n  (0-9)     CONVERT TO COLOR REQUEST
ADDWCOL# MVC   0(8,R3),=C''',(GR),'''  MOVE BASIC COLOR ORDER
         SR    R14,R14
         IC    R14,1(,R1)    LOAD COLOR NUMBER
         LA    R15,COLCH1-C'0'(R14)
         MVC   3(1,R3),0(R15)     FIRST LETTER
         MVC   4(1,R3),10(R15)    SECOND LETTER
         AH    R3,=H'8'      NEW DESTINATION
         AH    R4,=H'8'      NEW PHYSICAL LENGTH
         AH    R8,=H'2'      NEW SOURCE
         SH    R9,=H'2'      NEW INPUT LENGTH
         B     ADDWLOOP        TRY AGAIN
COLCH1   DC    C'GBRPGTYWGG'      USE GREEN FOR EXTRAS
COLCH2   DC    C'RLEIRUEHRR'
         SPACE 1
*   FOUND `` - COPY AS SINGLE REVERSE QUOTE
ADDWCOLX AH    R8,=H'2'      NEW SOURCE
         SH    R9,=H'2'      NEW INPUT LENGTH
         MVC   0(1,R3),0(R1) COPY SPECIAL CHARACTER
         AH    R3,=H'1'      NEW DESTINATION
         AH    R4,=H'1'      NEW PHYSICAL LENGTH
         B     ADDWLOOP        TRY AGAIN
*   FOUND `x - COPY AS IS (QUOTE + CHAR)
ADDWCOLZ MVC   0(2,R3),0(R1) COPY SPECIAL CHARACTER
         AH    R3,=H'2'      NEW DESTINATION
         AH    R4,=H'2'      NEW PHYSICAL LENGTH
         AH    R8,=H'2'      NEW SOURCE
         SH    R9,=H'2'      NEW INPUT LENGTH
         B     ADDWLOOP        TRY AGAIN
ADDWLUMP MVI   0(R3),C' '    MAKE TRAILING SPACE, JUST IN CASE
         LA    R8,OUTHOLD    SET NEW SOURCE
         LM    R15,R1,ADDWSAVE    RESTORE FOR RECURSION
         LR    R5,R4
         BCTR  R5,0
         STM   R15,R5,ADDWSAVE    SAVE FOR RECURSION
         SPACE 1
ADDWNEW  L     R2,#LOGLEN    GET CURRENT LOGICAL LENGTH
         LTR   R2,R2         FIRST IN LINE ?
         BNP   ADDWNEWL        YES; NO LEADING BLANK FINAGLE
         LA    R14,1(R15,R2) FITS WITH LEADING SPACE ?
         C     R14,OUTLEN    WILL IT FIT ?
         BH    ADDWNEWU        NO; DO NEW LINE
         INC   #LOGLEN,WORK=R2
         INC   @OUTBUFF,WORK=R14  LEADING BLANK
         INC   #PHYLEN,WORK=R14   LEADING BLANK
ADDWNEWL AR    R2,R15        NEW LENGTH
         C     R2,OUTLEN     WILL IT FIT ?
         BNH   ADDWADD         YES; APPEND
ADDWNEWU BAL   R14,DOTRIM
         BAL   R14,PUTREC    EMPTY CURRENT BUFFER
         LM    R15,R5,ADDWSAVE    RESTORE FOR RECURSION
         SPACE 1
ADDWADD  L     R3,@OUTBUFF   GET CURRENT POSITION
         LA    R14,0(R4,R3)  NEXT ADDRESS
         INC   #PHYLEN,INC=0(R4)   NEW PHYSICAL LENGTH
         ST    R14,@OUTBUFF
         ST    R2,#LOGLEN    NEW LENGTH
         EX    R5,EXMVCTXT   MOVE TEXT
         OI    PROFLAGS,FGDATA  SET DATA PRESENT
ADDWORDX LM    R0,R15,SUBSAVL2  RESTORE REGISTERS
         BR    R14           RETURN
         SPACE 1
*---------------------------------------------------------------------*
*   PRINT/PUNCH CURRENT RECORD; CLEAR BUFFER, RESET ADDRESS & LENGTH  *
*   TEXT STARTS IN OUTBUFF; PHYSICAL LENGTH IS IN #PHYLEN             *
*---------------------------------------------------------------------*
PUTREC   STM   R0,R15,SUBSAVL1
         TM    PROFLAGS,FGDATA    ANYTHING TO DO ?
         BZ    PUTRECX
         L     R3,#PHYLEN
         INC   NUMRITE
         TM    OPTFLAGS,FGASM+FGEXH    POSSIBLE CONTINUATION?
         BZ    PUTPLAIN        NO; WRITE SINGLE RECORD
         SPACE 1
         MVC   LABEL-1(4),=X'F0202020'
         ED    LABEL-1(4),LABSEQ+L'LABSEQ-2
         MVI   LABEL,C'Y'
         AP    LABSEQ,=P'1'
         SPACE 1
         ZI    PROFLAGS,FGCONT    RESET CONTINUATION
*   SPECIAL CODE FOR CARD FORMAT W/CONTINUATION(S)
*     FOR UNCONTINUED CARD, MAXIMUM TEXT LENGTH IS OUTFIT-1 (TO LEAVE
*     SPACE FOR TRAILING QUOTE). DITTO FOR CONTINUATIONS.
*
LENCONT  EQU   80-15-1-8     TEXT LENGTH ON CONTINUATION
         L     R4,OUTFIT     LENGTH ON CARD 1
         L     R3,#PHYLEN    DATA LENGTH
         CR    R3,R4         WILL IT FIT INTO TEXT AREA?
         BL    PUTDRON       YES; SINGLE CARD
         OI    PROFLAGS,FGCONT    SET CONTINUATION
         LR    R3,R4         NO APOSTROPHE ON CARD 1
         PRTLIST PUTDATA,DEV=(1,2)   PROCESS FIRST CARD
         L     R5,#PHYLEN    DATA LENGTH
         SR    R5,R3         AMOUNT ON CARD 2
         LA    R4,OUTBUFF(R3)  POSITION TO CARD 2'S TEXT
PUTCCLUP INC   NUMRITE
         C     R5,=A(LENCONT)   TEXT SIZE
         BL    PUTCCLST
         PRTLIST CARDMID,DEV=(1,2)   PROCESS NEXT CARD
         LA    R4,LENCONT(,R4)  ADVANCE TEXT
         S     R5,=A(LENCONT)   FIX LENGTH
         B     PUTCCLUP
PUTCCLST PRTLIST CARDLAST,DEV=(1,2)  PROCESS LAST CARD
         B     PUTDONE
         SPACE 1
PUTDRON  PRTLIST PUTDATA,DEV=(1,2)
         B     PUTDONE
         SPACE 1
PUTPLAIN PRTF  OUTBUFF,(R3),CC=NO,DEV=(1,2)   PRINT/PUNCH PLAIN OUTPUT
PUTDONE  ZI    PROFLAGS,FGDATA    RESET DATA
         LA    R14,OUTBUFF
         ST    R14,@OUTBUFF
         L     R15,=A(L'OUTBUFF+L'OUTHOLD)
         L     R1,=X'40000000'
         MVCL  R14,R0        CLEAR OUTPUT BUFFER
         XC    #PHYLEN(8),#PHYLEN RESET LENGTHS
         TM    OPTFLAGS,FGVER     IS VERIFY ON ?
         BZ    PUTRECX              NO
         PRTL  '  '               MAKE LISTING NEATER
PUTRECX  LM    R0,R15,SUBSAVL1
         BR    R14
         SPACE 1
*---------------------------------------------------------------------*
*   IF REQUESTED, REMOVE TRAILING BLANKS FROM RECORD                  *
*---------------------------------------------------------------------*
DOTRIM   TM    OPTFLAGS,FGNOTRIM  SUPPRESS TRIMMING ?
         BNZR  R14                  YES; JUST RETURN
         STM   R0,R15,SUBSAVL1
         LM    R4,R5,#PHYLEN      GET PHYSICAL AND LOGICAL LENGTH
         SUBCALL SUBSTRIP,(@OUTBUF1,#PHYLEN,'T'),VL,MF=(E,CALLPARM)
         S     R4,#PHYLEN    CALCULATE LENGTH REMOVED
         SR    R5,R4         ADJUST LOGICAL LENGTH
         ST    R5,#LOGLEN
DOTRIMX  LM    R0,R15,SUBSAVL1
         BR    R14
         SPACE 1
PUTDATA  FDOPT NL
         FDTM  OPTFLAGS,FGLAB,BZ=PUTNLAB    SKIP LABEL?
         FDPRT LABEL         Ynn
         FDGOTO PUTCLAB
PUTNLAB  FDPRT BLANKS,3      BLANK LABEL
PUTCLAB  FDTM  OPTFLAGS,FGALI,BZ=PUTNALI
         FDOPT SBA=(*,9)
PUTNALI  FDTM  OPTFLAGS,FGEXH,BZ=PUTNEXH    SKIP EXHIBIT?
         FDPRT ' FDLINE ,(GR),'''    ,PADL
PUTNEXH  FDTM  OPTFLAGS,FGASM,BZ=PUTTEXT    SKIP ASM?
         FDPRT ' DC'   ,PADL
         FDTM  OPTFLAGS,FGALI,BZ=PUTDCC
         FDOPT SBA=(*,15)    ALIGN
PUTDCC   FDPRT 'C''',PADL
PUTTEXT  FDPRT OUTBUFF,(R3)
         FDTM  OPTFLAGS,FGASM+FGEXH,BZ=PUTDEND
         FDTM  PROFLAGS,FGCONT,BNZ=CARDCOM
         FDPRT ''''
PUTDEND  FDOPT NL
         FDPRT *END
         SPACE 1
CARDMID  FDPRT ' ',NL,LEN=15
         FDPRT 0(R4),LENCONT
CARDCOM  FDPRT '*'
         FDPRT *END
         SPACE 1
CARDLAST FDPRT ' ',NL,LEN=15
         FDPRT 0(R4),(R5)
         FDPRT ''''
CARDEND  FDPRT *END
         SPACE 1
*---------------------------------------------------------------------*
*   FINAL WRITE, EXECUTIONERS, AND DATA                               *
*---------------------------------------------------------------------*
EODAD    BAL   R14,PUTREC    DATA IN BUFFER ?
ENDTERM  PRTLIST MSGSTAT     SHOW STATISTICS
         SERVTERM ,
         PGMEXIT RC=RETCODE  RETURN WITH CONDITION
         SPACE 1
EXALLSOM CLC   1(*-*,R8),2(R8)                                  GP13276
EXTRTTAB TRT   0(*-*,R8),TRTTAB  FIND A SPACER
EXTRTNXT TRT   0(*-*,R8),TRTNXT  FIND A NON-BLANK
EXTRTASM TRT   0(*-*,R8),TRTASM  FIND A SPECIAL CHARACTER
EXMVCTXT MVC   0(*-*,R3),0(R8)    MOVE TO OUTPUT
EXTRNTXT TR    0(*-*,R8),TRNTAB   CONVERT FORCED SPACERS
EXPACK   PACK  DB,0(*-*,R5)  PACK NUMERIC VALUE
         SPACE 1
         LTORG ,
         SPACE 2
SYSPRINT PRTWORK SYSPRINT,TITLE=3
SYSPUNCH PUNWORK SYSPUNCH
SYSIN    INPWORK SYSIN
         SPACE 1
*   FLAGS: 8-EXH 4-ASM 2-ALIGN 1-LAB
CAPTABE  DC    AL1(53,53,48,48,79)     EXH TEXT LENGTH
CAPTABA  DC    AL1(62,62,54,54,80)     ASM TEXT LENGTH
         SPACE 1
MSGSTAT  FDOPT NL,CC=C'0'    DOUBLE-SPACE
         FD    NUMREAD,I,RADJ,LEN=10
         FD    'RECORDS READ',PADL
         FD    NUMRITE,I,RADJ,,NL,LEN=10
         FD    'RECORDS WRITTEN',PADL
         FDCLC NUMTRUNC,ZEROES,BE=MSGSTATX
         FD    NUMTRUNC,I,RADJ,NL,LEN=10
         FD    'RECORDS TRUNCATED',PADL
MSGSTATX FD    *END
         SPACE 1
BLANKS   DC    CL80' '
DCT      DC    C'T'
TRTTAB   DC    256AL1(0)          ALL GARBAGE
         TRENT TRTTAB,8,X'40'     SPACE
         SPACE 1
TRTNXT   DC    256AL1(8)          ALL STOP
         TRENT TRTNXT,0,X'40'     SKIP SPACES
         SPACE 1
TRTASM   DC    256AL1(0)          ALL GARBAGE
         TRENT TRTASM,C'''',C''''    ASM SPECIALS
         TRENT TRTASM,C'&&',C'&&'    ASM SPECIALS
         SPACE 1
TRTDIG   DC    256AL1(8)          ALL GARBAGE
         TRENT TRTDIG,0,(C'0',10)
         SPACE 1
TRNTAB   DC    256AL1(*-TRNTAB)   ALL AS IS
         TRENT TRNTAB,C' ',C'\'   CONVERT TO SPACE
         SPACE 1
SAVE     DSECT ,
DB       DS    D
DB2      DS    D
ZEROES   DS    D
SUBSAVL1 DS    16A           SUBROUTINE SAVER
SUBSAVL2 DS    16A           SUBROUTINE SAVER
SUBSAVL3 DS    16A           SUBROUTINE SAVER
ADDWSAVE DS    7A            SUBROUTINE SAVER
         SERVDEFS ,          SERVICE AREA
OUTLEN   DS    F             MAXIMUM OUTPUT RECORD SIZE
OUTMAX   DS    F             MAXIMUM IN OUTPUT BUFFER
OUTFIT   DS    F             MAXIMUM TEXT ON CARD 1 (ASM, EXH)
@OUTBUFF DS    A             NEXT AVAILABLE OUTPUT POSITION
@OUTBUF1 DS    A             FIRST OUTPUT POSITION
#PHYLEN  DS    F             PHYSICAL OUTPUT RECORD SIZE
#LOGLEN  DS    F             LOGICAL OUTPUT SIZE
INPMAX   DS    F             MAXIMUM IN INPUT RECORD (IF SEQUENCED)
USERMAX  DS    F             (OPTIONAL) USER LENGTH OVERRIDE
NUMTRUNC DS    F             LINES TRUNCATED
NUMREAD  DS    F             LINES READ
NUMRITE  DS    F             LINES WRITTEN
         DS    C        1/2    FOR EDIT
LABEL    DS    CL3'Ynn' 2/2  WRAPS IF MORE THAN 99
LABSEQ   DS    PL3           SEQUENCE COUNTER
OPTFLAGS DS    X
FGNOSEQ  EQU   X'80'           SUPPRESS SEQUENCE CHECKING
FGNOTRIM EQU   X'40'           NO TRAILING BLANK ELIMINATION
FGVER    EQU   X'20'           ECHO INPUT
FGEXH    EQU   X'08'           OUTPUT IN EXHIBIT FORMAT
FGASM    EQU   X'04'           OUTPUT IN ASSEMBLER DC FORMAT
FGALI    EQU   X'02'           USE COLUMN 10 FOR DC, ETC.
FGLAB    EQU   X'01'           PRODUCE ASM/EXH LABELS
PROFLAGS DS    X
FGDATA   EQU   X'20'           DATA IN OUTPUT LINE
FGCONT   EQU   X'04'           CONTINUATION REQUIRED
OUTBUFF  DS    XL260         OUTPUT RECORD
OUTHOLD  DS    XL260         HOLDER FOR AND AND APOSTROPHE EXPANSION
LINE     DS    CL100,CL7     PARM HOLDER + OVERFLOW
SAVEEND  EQU   *
         SPACE 1
         MAPPRTWK ,          MAP PUNCH WORK AREA
         END   ,
