SUBSTCK  TITLE 'S U B S T C K  ***  MVS STCKCONV FACILITY'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
***********************************************************************
*   THIS ROUTINE IS INVOKED BY (LOCAL) MACRO $TCKCONV AND PRODUCES    *
*   THE SAME OUTPUT AS IBM'S STCKCONV ROUTINE UNDER ESA AND LATER.    *
***********************************************************************
SUBSTCK  PGMHEAD ZERO,BASE=R12,PARM=R10
         USING PARMLIST,R10
         SPACE 1
***********************************************************************
*   PROCESS DATE - SHIFT TOD CLOCK AND DIVIDE AS PER PROPS TO GET     *
*   DAYS SINCE BASE, WHICH IS 1900/01/01 FOR MVS & LATER SYSTEMS      *
***********************************************************************
         LM    R2,R3,PLTOD   GET TOD CLOCK VALUE
         TM    DATETYPE,PLFLOCAL  RETURN LOCAL TIME ?
         BZ    USEGMT
         L     R1,CVTPTR
         USING CVT,R1
         TM    CVTDCB,X'80'  MVS OR IS IT LATER ?               GP09136
         BNZ   ADJNEW        OLD; USE TIME ZONE ADJUST          GP09136
         AL    R2,CVTTZ      ADD OLD VERSION OF LOCAL TIME
         B     USEGMT        SKIP AROUND                        GP09136
ADJNEW   L     R1,CVTEXT2    GET CVT EXTENSION                  GP09136
         USING CVTXTNT2,R1   MAP CVT EXTENSION                  GP09136
         AL    R2,X'38'(,R1)    ADD CVTLDTOL  ADD HIGH/LEFT     GP09136
         AL    R3,X'3C'(,R1)    ADD CVTLDTOR  ADD LOW/RIGHT     GP09136
         BNO   USEGMT        NO CARRY                           GP09136
         AL    R2,=F'1'      PROPAGATE CARRY                    GP09136
         DROP  R1
USEGMT   SRDL  R2,24         ADJUST
         D     R2,=X'0141DD76'  GET DAYS SINCE 1900.001 PER PROPS
         ST    R3,DAYS
         ST    R2,MICS
         C     R3,=F'365'    IN FIRST YEAR ?
         BNL   NOTBASE       NO
         MVC   YEAR,=F'1900'
         LA    R3,1(,R3)     FIX UP
         ST    R3,DAY        SET 1900.DDD
         B     MAKEDATE
         SPACE 2
NOTBASE  S     R3,=F'365'    CHANGE BASE TO 1901
         ST    R3,DAYS       SAVE
         SR    R2,R2
         D     R2,=F'1461'   GET NUMBER OF LEAP YEAR EPOCHS
         LR    R7,R3         SAVE NUMBER OF LEAP YEARS
         LR    R6,R2         SAVE NUMBER OF YEARS IN CURR. 4 YEAR CYCLE
         LA    R0,1          DEFAULT FUDGE TO 1
         C     R2,=F'1460'   LAST DAY OF LEAP YEAR ?
         BNE   CALCYR        NO
         BCTR  R2,0
         LR    R6,R2         UPDATE
         LA    R0,2          SET FUDGE TO 2
CALCYR   LR    R3,R6
         SR    R2,R2
         D     R2,=F'365'
         AR    R2,R0         GET JULIAN DAY
         ST    R2,DAY        SAVE IT
         LR    R3,R6
         SR    R2,R2
         D     R2,=F'365'    GET YEARS IN R3
         LR    R2,R7         LEAPS
         SLA   R2,2          *4
         AR    R3,R2         ADD
         A     R3,=F'1901'   ADD BASE
         ST    R3,YEAR
MAKEDATE L     R2,YEAR
         TM    DATETYPE,3    NEED TO CONVERT DAY TO MONTH/DAY ?
         BNZ   MAKEDMON      YES
         MH    R2,=H'1000'
         A     R2,DAY        ADD DAY IN YEAR
         CVD   R2,DB         PACK
         L     R2,DB+4
         SRL   R2,4          REMOVE SIGN
         ST    R2,PLDATE     RETURN DATE
         B     GETTIME
         SPACE 1
MAKEDMON L     R1,DAY        GET BINARY DAY
         SLR   R0,R0         SET FOR NO LEAP DAY ADJUSTMENT
*  N.B.: THIS WORKS UNTIL 2099 ONLY                             GP99167
         EX    R2,EXISLEAP   TEST FOR MULTIPLE OF FOUR          GP99167
         BNZ   NOTALEAP      BRANCH IF NOT A LEAP YEAR
         CH    R1,=H'60'     IS THIS ON, BEFORE, OR AFTER LEAP DAY?
         BL    NOTALEAP      BEFORE; TREAT NORMALLY
         BH    ONELESS       AFTER; ADJUST DAY
         LA    R0,1          SET LEAP DAY ADJUSTMENT
ONELESS  BCTR  R1,0          ONE LESS TO FIX DAYS AFTER LEAP DAY
NOTALEAP LA    R4,DATETABL   GET TABLE OF CUMULATIVE DAYS
         LR    R5,R4         SAVE
FINDMON  CH    R1,2(,R4)     IN THIS MONTH?
         BNH   FOUNDMON      YES; PROCESS
         LA    R4,2(,R4)     INCREMENT
         B     FINDMON       AND TRY AGAIN
FOUNDMON SH    R1,0(,R4)     SUBTRACT DAYS IN PRIOR MONTHS
         AR    R1,R0         ADJUST 1 IF LEAP DAY
         LA    R4,2(,R4)     FINAGLE TO MAKE MONTH COME OUT RIGHT
         SR    R4,R5         GET OFFSET TO MONTH
         SRL   R4,1          GET MONTH (1-12)
*  WE NOW HAVE FULL YEAR IN R2, MONTH IN R4, AND DAY IN R1
         TM    DATETYPE,X'03'   YYYYMMDD ?
         BO    DATEMISO
         TM    DATETYPE,X'01'   MMDDYYYY
         BZ    DATEMDY
         MH    R4,=H'100'
         AR    R4,R1
         B     DATEMCOM
DATEMDY  MH    R1,=H'100'
         AR    R4,R1
DATEMCOM MH    R4,=H'10000'
         AR    R4,R2            MMDDYYYY OR DDMMYYYY
         B     DATEMOUT
DATEMISO MH    R2,=H'100'
         AR    R4,R2            YYYYMM
         MH    R4,=H'100'
         AR    R4,R1            YYYYMMDD
DATEMOUT CVD   R4,DB
         LM    R2,R3,DB
         SRDL  R2,4          REMOVE SIGN
         ST    R3,PLDATE     RETURN DATE
         SPACE 1
***********************************************************************
*   PROCESS TIME - HAVE MICROSECONDS, BUT LOW 12 BITS LOST IN SHIFT   *
*   RESTORE BEFORE DECIDING WHETHER THEY'RE NEEDED                    *
*   BRANCH BY REQUEST TYPE TO APPROPRIATE FORMATTING                  *
***********************************************************************
GETTIME  L     R4,PLTOD+4    GET ORIGINAL LOW TOD VALUE
         SRDL  R4,24         SHIFT TO R5
         SR    R4,R4         CLEAR DAYS, ETC.
         SLDL  R4,12         RESTORE LOST BITS
         L     R3,MICS       GET REMAINDER
         SR    R2,R2         CLEAR FOR DIVIDE
         SLDL  R2,12         REPOSITION
         OR    R3,R4         REGAIN LOST BITS
         LA    R8,PRTIME     FAKE ALIGNMENT
         USING PLTIME,R8
         BIX   VAL=TIMETYPE,PFX=RTIM,ERR=RTIMERR,LOC=(,BIN,DEC,MIC)
         SPACE 1
RTIMDEC  D     R2,=F'1000000'  CONVERT TO SECONDS
         CVD   R2,DB2        FRACTIONS
         SR    R2,R2
         D     R2,=F'60'     GET SECONDS
         ST    R2,SECS
         SR    R2,R2
         D     R2,=F'60'     GET MINUTES
         ST    R2,MINS
         SR    R2,R2
         D     R2,=F'24'
         ST    R2,HOUR
         CVD   R2,PLTIME     MAKE HOUR PACKED
         MP    PLTIME,=P'100'  MAKE ROOM FOR MINUTES
         L     R2,MINS
         CVD   R2,DB
         AP    PLTIME,DB     ADD MINUTES
         MP    PLTIME,=P'100'  MAKE ROOM FOR SECONDS
         L     R2,SECS
         CVD   R2,DB
         AP    PLTIME,DB     ADD SECONDS
         MP    PLTIME,=P'1000000'  ROOM FOR MICROSECONDS
         AP    PLTIME,DB2    ADD THOSE IN
*0C7*    MP    PLTIME,=P'1000'     LEFT-JUSTIFY IN RESPONSE
         LM    R2,R3,PLTIME  LOAD PACKED VALUE
         N     R3,=X'FFFFFFF0'  REMOVE SIGN
         SLDL  R2,3*4        SHIFT THREE DIGITS
         O     R3,=X'0000000C'  RESTORE SIGN
         STM   R2,R3,PLTIME  SAVE PACKED VALUE
         B     PGMEXIT
         SPACE 1
RTIMMIC  SLDL  R2,12         ALIGN MICROSECONDS IN BIT 51
         STM   R2,R3,PLTIME  RETURN IT
         B     PGMEXIT
         SPACE 1
RTIMBIN  D     R2,=F'10000'  CONVERT TO 1/100TH SECOND
         ST    R3,PLTIME     RETURN IT
         B     PGMEXIT
         SPACE 1
RTIMERR  OICC  16            INVALID PARAMETER LIST
         SPACE 1
PGMEXIT  DS    0H
         PGMEXIT COPYRET=(RETCODE,4)
         SPACE 1
EXISLEAP TM    =X'03',*-*    MULTIPLE OF FOUR?                  GP99167
         SPACE 1
*  TABLE OF DAYS IN PRIOR MONTH
DATETABL DC    H'0,31,59,90,120,151,181,212,243,273,304,334,365'
         EJECT ,
PARMLIST DSECT ,
         DS    X               RESERVED
         DS    X               RESERVED
DATETYPE DS    X             DATE TYPE (0-J, 1-MDY, 2-DMY, 3-YMD)
PLFLOCAL EQU   X'40'           IF ON, ADJUST FOR LOCAL VS. GMT
TIMETYPE DS    X             TIME TYPE (1-BIN, 2-DEC, 3-MIC)
PLTOD    DS    XL8           INPUT STCK VALUE
PRTIME   DS    XL8           RETURNED TIME
PLDATE   DS    XL4           RETURNED DATE
         DS    XL4             RESERVED
         SPACE 2
ALIGNSEC DSECT ,
PLTIME   DS    XL8           FAKE FOR ALIGNMENT
         SPACE 2
SAVE     DSECT ,
DB       DS    D             WORK WORDS
DB2      DS    D             WORK WORDS
MICS     DS    F             REMAINDER AFTER DAY DIVISION
DAYS     DS    F             DAYS FROM BASE
YEAR     DS    F             YEAR
DAY      DS    F             DAY IN CURRENT YEAR
HOUR     DS    F             TIME: HOUR
MINS     DS    F             TIME: MINUTES
SECS     DS    F             TIME: SECONDS
         SERVDEFS ,          SERVICE EXPANSIONS
         PRINT ON,GEN,DATA
SAVEEND  EQU   *
         SPACE 1
         PRINT &PRTSYS
         CVT   DSECT=YES
         END   ,
