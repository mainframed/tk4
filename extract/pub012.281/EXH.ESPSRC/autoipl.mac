AUTOIPL  TITLE 'A U T O I P L  ***  AUTOMATIC IPL PROGRAM.'
**  FROM CBT TAPE 429, FILE 369, SUBMITTED BY PRC, INC.           **
         PUNCH '  ORDER AUTOIPL(P) '   MAKE DUMPS EASIER        GP06350
         PUNCH '  SETCODE AC(1)    '   MAKE IT WORK             GP06350
********************************************************************
*                                                                  *
*  FUNCTION -                                                      *
*                                                                  *
*     THIS PROGRAM ISSUES OPERATOR COMMANDS READ FROM AN           *
*     INPUT FILE.  IT ALLOWS CONDITIONAL COMMAND EXECUTION, TIMED  *
*     COMMAND SUBMISSION, AND PROGRAM INVOCATION.  THESE FUNCTIONS *
*     PERMIT THE PROGRAM TO BE USED FOR A FULLY AUTOMATED IPL      *
*     PROCEDURE FOR THE SYSTEM.                                    *
*                                                                  *
*  USAGE -                                                         *
*                                                                  *
*     THE PROGRAM IS USUALLY INVOKED BY A STARTED SYSTEM TASK.     *
*     THE FOLLOWING JCL SHOULD BE PLACED IN SYS1.PROCLIB:          *
*                                                                  *
*     //IPL     PROC   P=AUTOIPL,R=                                *
*     //IEFPROC EXEC   PGM=AUTOIPL,PARM='&R'                       *
*     //IEFRDER DD     DSN=SYS1.PROCLIB(&P),DISP=SHR               *
*                                                                  *
*     A SERIES OF OPERATOR COMMANDS ARE STORED IN THE DATASET      *
*     ALLOCATED TO DDNAME IEFRDER.  ANY DATA IN COLUMNS 73-80 IS   *
*     IGNORED IN THE INPUT DATA.  THE COMMANDS IN THE INPUT DATA   *
*     ARE WRITTEN TO THE SYSTEM MASTER  CONSOLE AS THEY ARE ISSUED.*
*                                                                  *
*     SOME CHARACTERS IN THE INPUT DATA HAVE SPECIAL SIGNIFICANCE: *
*                                                                  *
*     AN ASTERISK (*) IN COLUMN 1 INDICATES THAT THIS LINE IS      *
*     NOT TO BE ISSUED AS A COMMAND.  IT IS DISPLAYED ON THE       *
*     SYSTEM MASTER CONSOLE, HOWEVER.  EXAMPLE:                    *
*                                                                  *
*     * THIS IS A MESSAGE TO THE OPERATOR                          *
*                                                                  *
*     A SEMICOLON (;) SEPARATES TWO COMMANDS ON THE                *
*     SAME LINE.   IN THIS WAY, MULTIPLE COMMANDS PER LINE MAY BE  *
*     ISSUED IF DESIRED.  EXAMPLE:                                 *
*                                                                  *
*     S TCAM; S TSO                                                *
*                                                                  *
*     A SLASH (/) FOLLOWED BY AN INTEGER INDICATES A WALL-CLOCK    *
*     TIME DELAY OF AN INTEGER NUMBER OF SECONDS AFTER ISSUING THE *
*     SPECIFIED OPERATOR COMMAND.  EXAMPLE:                        *
*                                                                  *
*     S TCAM/10                                                    *
*     S TSO                                                        *
*                                                                  *
*     A LABEL PRECEEDING A COLON (:) BEFORE AN OPERATOR COMMAND    *
*     CAN BE USED TO CONDITIONALLY EXECUTE A COMMAND LINE.         *
*     IF THE LABEL NAME IS SPECIFIED IN THE PARM FIELD OF THE EXEC *
*     CARD, ANY COMMAND LINES CONTAINING THAT LABEL FOLLOWED BY A  *
*     COLON WILL NOT BE ISSUED. EXAMPLE:                           *
*                                                                  *
*     S TCAM/10                                                    *
*     S TSO                                                        *
*     NOCICS: S CICS                                               *
*                                                                  *
*     S IPL,R=NOCICS   WILL CAUSE CICS NOT TO BE STARTED           *
*     S IPL            WILL CAUSE CICS TO BE STARTED               *
*                                                                  *
*     A SINGLE QUOTE IN COLUMN 1 INDICATES A PROGRAM CALL          *
*     IS REQUESTED.  THE PROGRAM NAME TO BE LINKED TO IS           *
*     ENCLOSED IN SINGLE QUOTES.  THE PARM FIELD FOR THE PROGRAM   *
*     FOLLOWS THE ENDING QUOTE.  EXAMPLE:                          *
*                                                                  *
*     'MYPGM001'PARM-VALUE                                         *
*                                                                  *
*     A PROGRAM CALLED 'REPLYTO' HAS BEEN WRITTEN TO ISSUE CANNED  *
*     REPLIES TO WTORS.  THE PROGRAM MAY BE INVOKED VIA THE        *
*     PROGRAM CALL FUNCTION OF THIS PROGRAM. EXAMPLE:              *
*                                                                  *
*     S HASP                                                       *
*     'REPLYTO 'HASP,U                                             *
*                                                                  *
*     EXECUTION OF OPERATOR COMMANDS IS DELAYED UNTIL THE INVOKED  *
*     PROGRAM HAS RETURNED CONTROL.                                *
*                                                                  *
*     THE FOLLOWING IS AN EXAMPLE OF A DATA STREAM USING ALL OF    *
*     THE FACILITIES OF THE START PROGRAM:                         *
*                                                                  *
*     * AUTOMATIC IPL IN PROGRESS                                  *
*     S S168/10                                                    *
*     S CLEAN,V=SCR001; S CLEAN,V=SCR002/10                        *
*     S HASP                                                       *
*     'REPLYTO 'HASP,U/10                                          *
*     $PI10;$PI11;$PI12;$PI13;$PI14                                *
*     $PI                                                          *
*     $S                                                           *
*     S TCAM/10                                                    *
*     S TSO/16                                                     *
*     NOLINES: S LINES/4                                           *
*     $SI                                                          *
*                                                                  *
*  ATTRIBUTES -                                                    *
*                                                                  *
*     REENTRANT, MUST BE LINKEDITED INTO LINKLIST WITH AC=1.       *
*                                                                  *
*  ENVIRONMENT -                                                   *
*                                                                  *
*     VS/2 RELEASE 1.7-3.7.                                        *
*                                                                  *
*  LOG -                                                           *
*                                                                  *
*     04/00/85 L01 PTW IMPLEMENTED AT PRC.                         *
*     11/17/86 L02 PTW ADD ENQ/DEQ FOR OPERATOR PROTECTION.        *L02
*     12/03/86 L03 PTW GETMAIN 8192 BYTES FOR LARGER INPUT.        *L03
*     06/09/87 L04 PTW BETTER ENQ/DEQ ERROR MESSAGE.               *L04
*                                                                  *
********************************************************************
AUTOIPL  CSECT
********************************************************************
*                                                                  *
*        I N I T I A L I Z E                                       *
*                                                                  *
********************************************************************
         PRINT NOGEN                                                L02
         BALR  R12,0              SET UP BASE REGISTER
         USING *,R12              DECLARE IT
* NOTE THAT NO SAVE AREA IS USED OR PROVIDED
         L     R10,0(R1)          SAVE INPUT LOCATION
         L     R0,=F'8192'        GET 8K WORK AREA                  L03
         LA    R1,1                FROM
         SLL   R1,24                SUBPOOL
         OR    R0,R1                 ONE
         GETMAIN R,LV=(0)         GET WORK CORE
         LR    R13,R1             ADDRESS GOTTEN
         USING WK,R13             MAP OUT WORK AREA
         XC    WK(WKLEN),WK       CLEAR PART OF THE AREA
         L     R2,PSAAOLD-PSA     ISSUE ENQ WITH MINOR=JOBNAME.     L02
         L     R3,ASCBJBNI-ASCB(,R2)                                L02
         LTR   R3,R3                                                L02
         BNZ   *+8                                                  L02
         L     R3,ASCBJBNS-ASCB(,R2)                                L02
         MVC   ENQ(ENQLEN),XENQ                                     L02
         ENQ   (=CL8'AUTOIPL',(R3)),MF=(E,ENQ)                      L02
         LTR   R15,R15                                              L02
         BNZ   BADENQ                                               L02
         SR    R2,R2              CLEAR STOPPER VALUE
         LH    R1,0(R10)          LENGTH OF FIELD
         LTR   R4,R1              SAVE AND TEST LENGTH
         BZ    *+10               IF NULL BYPASS MOVE
         BCTR  R1,0               MOVE LENGTH FOR EXECUTE
         EX    R1,MOVEPARM        COPY THE PARAMETER FIELD OUT OF SP 0
* SET UP PARAMETER SCAN
         LA    R3,PARMFLD         GET START OF PARAMETER LIST
         AR    R4,R3              COMPUTE END
         ST    R4,SCANEND         SAVE IT
         MVI   0(R4),C';'         ENSURE RESTRICTIONS END HERE
********************************************************************
*                                                                  *
*        M A I N L I N E   P R O C E S S I N G                     *
*                                                                  *
********************************************************************
* READ IEFRDER INPUT IF PRESENT
         L     R1,16              R1,--> CVT
         L     R1,0(R1)           R1 -->--> TCB
         L     R1,0(R1)           R1 --> TCB
         L     R1,12(R1)          R1 --> TIOT
         LA    R1,24(R1)          R1 --> FIRST DD ENTRY
         SR    R0,R0              CLEAR FOR IC
TIOTLOOP IC    R0,0(R1)           GET ENTRY LENGTH
         LTR   R0,R0              TEST ENTRY
         BZ    ENDIO              IF NOT QUIT
         CLC   =C'IEFRDER ',4(R1) IS THIS IT?
         BE    TIOTFND            IF SO GO OPEN IT
         AR    R1,R0              ELSE TRY NEXT
         B     TIOTLOOP            DD ENTRY
* PREPARE FOR INPUT
TIOTFND  MVC   DCB(DCBLEN),DCBMFL  MOVE DCB
         OPEN  (DCB,INPUT),MF=(E,OPEN) OPEN IT
         TM    DCB+48,X'10'       OPEN?
         BZ    ENDIO              IF NOT QUIT
GETLOOP  CLI   0(R4),C';'         SEMICOLON?
         BE    *+12               IF SO SKIP
         LA    R4,1(R4)           ELSE
         MVI   0(R4),C';'         PUT IN ONE
         LA    R4,1(R4)           ADVANCE OVER SEPARATOR
GETLOOP1 GET   DCB,(R4)           READ NEXT RECORD
         LA    R4,71(R4)          POINT TO LAST INPUT
         CLI   0(R4),C' '         IS CHARACTER BLANK?
         BNE   *+8                IF NOT END OF DATA
         BCT   R4,*-8             ELSE BACK UP AND LOOP
         B     GETLOOP            REPEAT THE LOOP
EOF      ST    R4,SCANEND         SET NEW END
         CLOSE (DCB),MF=(E,OPEN)  CLOSE OUT THE FILE
ENDIO    DS    0H                 END OF EXTERNAL INPUT
         LA    R7,RSTRTAB         RESTRICTION TABLE
         MVI   0(R7),X'FF'        SET IT EMPTY
         XC    TABLE(256),TABLE    SET UP TRT TABLE
         MVI   TABLE+C':',4        AND
         MVI   TABLE+C'/',8         INSERT
         MVI   TABLE+C';',12         STOPPER
         MVI   TABLE+C',',4           VALUES
         LA    R1,DWORK           SET UP EXECUTE FORM
         ST    R1,LINK             OF LINK MACRO
GETRESTR DS    0H                 GET RESTRICTIONS SPECIFIED
         BAL   R11,GETPARM        GET NEXT SUBFIELD
         B     *(R2)              BRANCH ON STOPPER
         B     MOVERSTR           :
         B     MOVERSTR           /
         B     MOVERSTR           ;
         B     EXIT               (END)
MOVERSTR LTR   R5,R5              TEST LENGTH
         BM    RSTRTEST           NULL - SKIP MOVE
         EX    R5,MOVE1           MOVE IT
         STC   R5,0(R7)           SAVE LENGTH
         LA    R7,2(R5,R7)        NEXT SLOT
         MVI   0(R7),X'FF'        CLEAR IT
RSTRTEST B     *(R2)              BRANCH ON STOPPER
         B     GETRESTR           :
         B     GETRESTR           /
*        B     GETCMD             ;
         MVI   TABLE+C',',X'00'   DELETE COMMA AS SEPARATOR
GETCMD   DS    0H                 GET THE COMMAND FIELD
         BAL   R11,GETPARM        GET THE NEXT SUBFIELD
         B     *(R2)              BRANCH ON STOPPER
         B     TSTRSTR            :
         B     MOVECMD            /
         B     MOVECMD            ;
*        B     MOVECMD            (END)
MOVECMD  LTR   R5,R5              TEST LENGTH
         BM    TESTCMD            NULL - SKIP MOVE
         EX    R5,MOVE2           MOVE IT
         LA    R0,6(R5)           BUFFER LENGTH
         STH   R0,CMD             SET IT
         LA    R5,COMMAND+1(R5)   END OF COMMAND
         MVI   0(R5),C' '         PUT BLANK THERE
         MODESET KEY=ZERO         GET PK=0
         SR    R0,R0              CLEAR R0
         STH   R0,CMD+2           CLEAR MCS FLAGS
         LA    R1,CMD             POINT TO COMMAND
         CLI   COMMAND,C''''      LINK REQUEST?
         BE    MOVECMD2           IF SO GO LINK
         CLI   COMMAND,C'*'       MESSAGE ONLY?
         BE    MOVECMD1           IF SO BYPASS SVC 34
         SVC   34                 ISSUE COMMAND
         MODESET KEY=NZERO        RESET PROTECTION KEY
MOVECMD1 DS    0H
         LA    R1,CMD             POINT AGAIN
         MVC   1(4,R5),=X'10004000' DESC=1,ROUTCDE=4
         OI    CMD+2,X'80'        SHOW ROUTCDE AND DECR PRESENT
         OI    CMD+3,X'04'        SHOW BYPASS HARDCOPY
         SVC   35                 TELL OPERATOR
         B     TESTCMD            BYPASS LINK CODE
MOVECMD2 MVC   DWORK,COMMAND+1    ASSUMES EXACTLY 8 BYTES IN NAME
         LA    R1,COMMAND+10      FIRST TEXT BYTE
         SR    R5,R1              LENGTH OF TEXT FOR PARM
         LA    R1,COMMAND+8       R1 --> PARAMETERS
         ST    R1,CMD             SET POINTER
         OI    CMD,X'80'          SET END OF LIST
         STH   R5,0(R1)           SAVE IN PARAMETER
         LA    R1,CMD             POINT TO LIST
         LINK  SF=(E,LINK)        LINK TO THE GUY
TESTCMD  B     *-4(R2)            BRANCH ON STOPPER
         B     GETWAIT            /
         B     GETCMD             ;
*        B     EXIT               (END)
********************************************************************
*                                                                  *
*        R E T U R N                                               *
*                                                                  *
********************************************************************
EXIT     DS    0H                                                   L02
         DEQ   RET=NONE,MF=(E,ENQ)     RELEASE ENQ.                 L02
FREEEXIT DS    0H                                                   L02
         FREEMAIN R,SP=1          FREE THE WORK AREA
         SVC   3                   AND GET OUT
GETWAIT  DS    0H                 GET TIME AND WAIT
         BAL   R11,GETPARM        GET THE SUBFIELD
         LTR   R5,R5              TEST LENGTH
         BM    TESTWAIT           NULL - SKIP STIMER
         LA    R5,X'70'(R5)       JIGGLE LENGTH
         EX    R5,PACK1           PACK IT
         CVB   R1,DWORK           AND CONVERT (0C6?)
         MH    R1,=H'100'         COMPUTE HUNDREDTHS
         ST    R1,DWORK           SAVE THE TIME
         STIMER WAIT,BINTVL=DWORK SWEAT IT OUT
         B     TESTWAIT           SHARED CODE
GETSEMI  DS    0H                 RECOVER TO SEMICOLON
         BAL   R11,GETPARM        GET NEXT SUBFIELD
TESTWAIT B     *(R2)              BRANCH ON STOPPER
         B     GETSEMI            :
         B     GETSEMI            /
         B     GETCMD             ;
         B     EXIT               (END)
TSTRSTR  DS    0H                 TEST RESTRICTIONS
         LTR   R5,R5              TEST LENGTH
         BM    GETCMD             NULL - RECYCLE
         LA    R7,RSTRTAB         START OF TABLE
         SR    R1,R1              IC REGISTER
TSTRSTR1 CLI   0(R7),X'FF'        END OF TABLE
         BE    GETCMD             YES - RETURN
         IC    R1,0(R7)           GET TEST LENGTH
         LR    R6,R1              TRY R1 LENGTH
         CR    R1,R5              TEST LENGTHS
         BNH   TSTRSTR2           R1 SHORTER
         LR    R6,R5              USE R5 LENGTH
TSTRSTR2 EX    R6,COMP1           COMPARE FIELDS
         BE    GETSEMI            EQUAL - BYPASS CMD
         LA    R7,2(R1,R7)        GO TO NEXT
         B     TSTRSTR1           AND TEST AGAIN
GETPARM  DS    0H                 GET A PARAMETER SUBFIELD
         LR    R4,R3              START OF SUBFIELD
         CLI   0(R4),C','         LEADING COMMA?
         BNE   *+8                NO - SKIP NEXT
         LA    R4,1(R4)           BYPASS COMMA AS JCL SEPARATOR
         L     R3,SCANEND         END OF SCAN
         SR    R3,R4              ARE WE THERE?
         BNP   GETEND             YES - RETURN END
         CH    R3,*+10            OVER 256 CHARACTERS LEFT?
         BL    *+8                IF NOT SKIP
         LA    R3,255             ELSE REDUCE TO 256
         EX    R3,TRT1            SCAN FOR DELIMITER
         LA    R3,1(R1)           START OF NEXT
         BNZ   GETCNT             FOUND - PROCESS IT
GETEND   L     R3,SCANEND         NOT FOUND - USE END
         LR    R1,R3              CONTINUE THE FAKERY
         LA    R2,16              END CODE
GETCNT   LA    R5,0(R1)           END ADDRESS
         SR    R5,R4              LENGTH
         BNP   GETNULL            TEST FOR NULL
         BCTR  R5,0               LENGTH-1
         BR    R11                RETURN
GETNULL  LA    R5,1               +1
         LNR   R5,R5              -1
         BR    R11                RETURN
DCBEXIT  DC    0F'0',X'85',AL3(DCBEXIT+4)  EXIT LIST FOR DCB
         OC    DCBLRECL,DCBLRECL  LRECL SPECIFIED?
         BNZ   *+8                IF SO LEAVE IT
         MVI   DCBLRECL+1,80      ELSE SET DEFAULT OF 80
         OC    DCBBLKSI,DCBBLKSI  BLKSIZE SPECIFIED?
         BNZR  R14                IF SO RETURN
         MVI   DCBBLKSI+1,80      ELSE SET DEFAULT OF 80
         MVI   DCBRECFM,X'80'     SET RECFM=F
         BR    R14                RETURN
********************************************************************
*                                                                  *
*        E R R O R S                                               *
*                                                                  *
********************************************************************
BADENQ   DS    0H                                                   L04
         BAL   R11,FMTMSG                                           L04
         MVC   MSGTEXT(L'MSGENQ),MSGENQ                             L04
         BAL   R11,DOWTO                                            L04
         B     FREEEXIT                                             L02
********************************************************************L04
*                                                                  *L04
*        F O R M A T   M E S S A G E                               *L04
*                                                                  *L04
********************************************************************L04
FMTMSG   DS    0H                                                   L04
         MVI   MSGAREA,C' '                                         L04
         MVC   MSGAREA+1(L'MSGAREA-1),MSGAREA                       L04
         MVC   MSGJOB,0(R3)        MOVE IN OUR JOBNAME.             L04
         MVI   MSGCOLON,C':'      THEN A COLON.                     L04
         BR    R11                                                  L04
********************************************************************L04
*                                                                  *L04
*        D O   W T O                                               *L04
*                                                                  *L04
********************************************************************L04
DOWTO    DS    0H                                                   L04
         MVC   WTO(WTOL),XWTO     ELSE DO WTO.                      L04
         MVI   WTOMSG,C' '        BLANK MSGTEXT.                    L04
         MVC   WTOMSG+1(L'WTOMSG-1),WTOMSG                          L04
         MVC   WTOMSG(L'MSGAREA),MSGAREA                            L04
         MVI   WTODESC,X'40'                                        L04
         WTO   MF=(E,WTO)                                           L04
         BR    R11                                                  L04
********************************************************************
*                                                                  *
*        S T A T I C   A R E A                                     *
*                                                                  *
********************************************************************
MSGENQ   DC    C'IS ALREADY RUNNING, AN ABEND FOLLOWS.'             L04
MOVEPARM MVC   PARMFLD(*-*),2(R10) MOVE PARAMETER TO SQS
MOVE1    MVC   1(*-*,R7),0(R4)    MOVE RSTR
MOVE2    MVC   COMMAND(*-*),0(R4) MOVE CMD
PACK1    PACK  DWORK,0(*-*,R4)    PACK TIME
COMP1    CLC   1(*-*,R7),0(R4)    COMPARE RSTR
TRT1     TRT   0(*-*,R4),TABLE    SEARCH FOR DELIMITER
DCBMFL   DS    0F                 TRUE START OF DCB CODE
         DCB   DDNAME=IEFRDER,DSORG=PS,MACRF=GM,                       *
               EODAD=EOF,EXLST=DCBEXIT DCB SKELETON
         OPEN  (0,INPUT),MF=L     OPEN SKELETON
XENQ     ENQ   (,,E,8,SYSTEM),RET=USE,MF=L                          L02
ENQLEN   EQU   *-XENQ                                               L02
XWTO     WTO   '                                                       X
                                            ',MF=L,ROUTCDE=11       L04
WTOL     EQU   *-XWTO
         LTORG *
SRCLEVEL DC    C'                                        '          L02
********************************************************************
*                                                                  *
*        D Y N A M I C   A R E A S                                 *
*                                                                  *
********************************************************************
WORKSECT DSECT                    MAPPING OF GOTTEN CORE
WK       DS    0D                 ALIAS FOR WORK AREA
SAVEAREA DS    18F                SAVE AREA FOR LINKED PROGRAMS
DWORK    DS    D                  GENERAL WORK, ALSO LINK NAME
SCANEND  DS    A                  END OF COMMAND STRING
RSTRTAB  DS    25F                COMMAND RESTRICTIONS
LINK     LINK  EP=0,SF=L          PLACE FOR LINK PARAMETER
ENQ      DS    CL(ENQLEN)         PLACE FOR LINK PARAMETER          L02
WKLEN    EQU   *-WK               LENGTH TO CLEAR INITIALLY         L02
TABLE    DS    64F                STOPPER TABLE
         ORG   TABLE              REUSE FOR DCB, ETC.
DCB      DCB   DDNAME=IEFRDER,DSORG=PS,MACRF=GM
OPEN     OPEN  (DCB,INPUT),MF=L
DCBLEN   EQU   *-TABLE            LENGTH TO MOVE FOR DCB
         ORG   DCB+36
DCBRECFM DS    XL1                RECORD FORMAT
         ORG   DCB+62
DCBBLKSI DS    H                  BLOCK SIZE
         ORG   DCB+82
DCBLRECL DS    H                  RECORD LENGTH
         ORG   ,                  BACK TO NORMAL?
CMD      DS    F                  V-FORMAT HEADER
COMMAND  DS    0CL72              COMMAND TO EXECUTE
         DS    CL8                SPACER
PARMFLD  DS    0CL1               INPUT STRING BUILT HERE
WTO      DS    0F,CL(WTOL)                                          L04
WTOMSG   EQU   WTO+4,80                                             L04
WTODESC  EQU   *-4,2                                                L04
MSGAREA  DS    CL80                                                 L04
MSGJOB   EQU   MSGAREA,8                                            L04
MSGCOLON EQU   MSGAREA+8,1                                          L04
MSGTEXT  EQU   MSGAREA+10,70                                        L04
         IHAPSA ,                 PSA                               L02
         IHAASCB ,                ASCB                              L02
         PRINT OFF                                                  L02
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT ON                                                   L02
         END   AUTOIPL
