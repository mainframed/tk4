TAP2     TITLE 'C O P Y T A P E  ***  COPY TAPE FILES'
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*        COPYRIGHT 1981  EXPERT SYSTEM PROGRAMMING, INC.              *
*        COPYRIGHT 2003  EXPERT SYSTEM PROGRAMMING                    *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
         SPACE 1
*        THIS PROGRAM IS BASED ON ONE WRITTEN BY DICK OXLEY, AS
*        DISTRIBUTED BY SHARE, INC.  THIS VERSION WRITTEN FROM SCRATCH
*        FOR VS. EXCP IS USED WITH BSAM OPEN/CLOSE/EOV BECAUSE IT MAKES
*        A FEW THINGS EASIER (READING 64K BLOCKS ON FDR TAPES). EXCP IS
*        NOT USED DUE TO DIFFERENCES IN OPEN/CLOSE PROCESSING (RDJFCB
*        WITH OPENJ WILL NOT QUITE DO THE SAME THING).
*
*        INPUT: TAPE FILE (NORMAL SEQUENTIAL SPECIFICATION) ON SYSUT1
*        OUTPUT: SYSUT2.  DCB ATTRIBUTES COPIED FROM INPUT UNLESS
*              EXPLICITLY SPECIFIED.
*
*        ATTRIBUTES : NOT RE-ENTRANT, NOT REFRESHABLE, NOT INTERESTING.
*        DEPENDENCIES: LOCAL AND OPTIONAL IBM MACRO LIBRARIES
*              EXTERNAL MODULES @PRINTER AND @SERVICE
         EJECT ,
         PRINT &PRTSOR
COPYTAPE SAVEM ZERO12,BASE=(R11,R12),PARM=R9,BNDRY=PAGE ADDED ON 81242
         LR    R10,R13       MAKE WORK AREA ADDRESSABLE IN EXITS
         DROP  R13
         USING SAVE,R10
         SERVINIT ,
         SERVCALL LPALD,=CL8'@PRINTER'
         ST    R0,@PRINTER
         PRTOPEN SYSPRINT,DEV=1,OPT=(DUMMY,NOWTO)
         LR    R7,R15        SAVE RETURN CODE
         PRTOPEN SUMPRINT,DEV=2,OPT=(DUMMY,NOWTO)
         MR    R6,R15        GET COMBINED RETURN CODE
         LTR   R7,R7
         BZ    NOCONSOL      AT LEAST ONE PRINT FILE - NO CONSOLE
         PRTOPEN CONSOLE,DEV=3   USE CONSOLE FILE
NOCONSOL PRTLIST TITLEFD,DEV=(1,2),TITLE=1
         MVI   WORKLINE-1,C' '  INITIALIZE BLANK                 81256
         LA    R7,0(,R9)     CLEAN PARM ADDRESS                  81256
         LTR   R7,R7         ANY PARM ADDRESS ?                  81256
         BZ    PARMDFLT      NO; USE DEFAULTS                    81256
         ICM   R7,7,1(R7)    LOAD AND TEST PARM ADDRESS          81256
         BZ    PARMDFLT      NONE                                81256
         SLR   R9,R9                                             81256
         ICM   R9,3,0(R7)    LOAD AND TEST PARM LENGTH           81256
         BZ    PARMDFLT      NONE                                81256
         LA    R8,100        OS MAXIMUM                          81256
         CR    R9,R8                                             81256
         BNH   *+6           OK                                  81256
         LR    R9,R8         TRUNCATE                            81256
         MVC   WORKLINE,WORKLINE-1  CLEAR WORK AREA              81256
         BCTR  R9,0          SET FOR EXECUTE                     81256
         EX    R9,PARMMOVE   MOVE PARM TO WORK AREA              81256
         LA    R7,WORKLINE+1  POINT TO START OF PARM             81256
         SLR   R8,R8         CLEAR BXLE INCREMENT REGISTER       81256
         AR    R9,R7         SET LAST PARM ADDRESS               81256
         SPACE 1                                                 81256
PARMLOOP LA    R4,PARMTAB    GET VERB TABLE FOR PARMS            81256
PARMVERB ICM   R8,1,0(R4)    INSERT AND TEST LENGTH BYTE         81256
         BM    PARMERR       NO MATCH - DISPLAY BAD DATA         81256
         EX    R8,PARMCLC    MATCH ?                             81256
         BE    PARMGO        YES; GO TO APPROPRIATE ENTRY        81256
         LA    R4,4(R8,R4)   POSITION TO NEXT PARM               81256
         B     PARMVERB      TRY NEXT ONE                        81256
PARMGO   SLR   R15,R15                                           81256
         ICM   R15,3,1(R4)   GET BRANCH OFFSET                   81256
         B     COPYTAPE(R15)  ENTER SUBROUTINE                   81256
PARMMOVE MVC   WORKLINE+1(0),2(R7)  MOVE PARM FIELD              81256
PARMCLC  CLC   0(0,R7),3(R4)        COMPARE VERB                 81256
PARMBADM VCON  ' ***** ERROR IN PARM FIELD *****'                81256
         SPACE 1                                                 81256
PARMTAB  VERBTAB ' ',PARMBUMP,BASE=*,LEN=2    SKIP BLANKS        81256
         VERBTAB ',',PARMBUMP                 SKIP COMMAS        81256
         VERBTAB 'ASCII9',PRMASC9      9-BIT ASCII FIELD DATA    81256
         VERBTAB 'BLOCKID',PRMBLK4     REMOVE LEADING 4 BYTES FROM BLK
         VERBTAB 'REBLOCK',PRMRBLK     REBLOCK IF >32K           88036
         VERBTAB 'NOCRLF',PRMNCRLF                               90358
         VERBTAB 'NOLAB',PRMNLAB REMOVE INVALID LABELS (IN DATA) 88046
         VERBTAB 'UNLAB',PRMNLAB                                 88046
         DC    X'FF'         END OF TABLE                        81256
         SPACE 1                                                 81256
PARMERR  PRTV  PARMBADM,DEV=(1,2,3)    PRINT ERROR IN PARM       81256
         PRTF  WORKLINE,L'WORKLINE,DEV=(1,2)    SHOW FULL PARM   81256
         MVC   WORKLINE,WORKLINE-1  CLEAR PARM FIELD             81256
         MVI   0(R7),C'×'    POINT TO BAD PARAMETER              81256
         PRTF  WORKLINE,L'WORKLINE,DEV=(1,2)  POINT TO ERROR     81256
         SERVTERM ,          CLOSE AND FREE                      81256
         ABEND 100           TERMINATE                           81256
         SPACE 1                                                 81256
PRMASC9  OI    CONFLAG,CFASC9  SET 9-BIT ASCII MODE              81256
         B     PARMBUMP      DO ANOTHER                          81256
         SPACE 1                                                 88046
PRMNLAB  OI    CONFLAG,CFNLAB  REMOVE LABELS WITHIN DATA FILE    88046
         B     PARMBUMP      DO ANOTHER                          88046
         SPACE 1                                                 81256
PRMBLK4  OI    CONFLAG,CFID4  4-BYTE BLOCK NUMBER (TO BE DELETED)
         B     PARMBUMP                                          81256
         SPACE 1                                                 88036
PRMRBLK  OI    CONFLAG,CFRBLK  SET TO REBLOCK                    88036
         B     PARMBUMP      DO ANOTHER                          88036
         SPACE 1                                                 90358
PRMNCRLF OI    CONFLAG,CFNCRLF  STRIP CR/LF/FF FROM TEXT         90358
         B     PARMBUMP      SIMILAR TO REBLOCK(ED) OUTPUT       90358
         SPACE 1                                                 81256
PARMINTG LA    R7,1(R7,R8)   SPACE TO FIRST BYTE                 81256
         BAL   R14,PARMNBLK  GET FIRST NON-BLANK                 81256
         SLR   R0,R0                                             81256
         LA    R1,C'0'                                           82032
         CLI   0(R7),C','    NULL ?                              81256
         BE    PARMINUL      YES                                 81256
         CLI   0(R7),C' '    END OF PARM ?                       81256
         BE    PARMINUL      YES; STOP                           81256
         LA    R8,1          SET INCREMENT FOR LOCAL BXLE        81256
         BCTR  R7,0          BACKSPACE                           81256
         LA    R14,8         MAX INTEGER LENGTH PERMITTED        81256
PARMILOP BXH   R7,R8,PARMIDON  SKIP IF DONE                      81256
         CLI   0(R7),C'0'    NUMERIC ?                           81256
         BL    PARMIDON      NO                                  81256
         CLI   0(R7),C'9'                                        81256
         BH    PARMIDON                                          81256
         SLDL  R0,8                                              81256
         IC    R1,0(,R7)     LOAD NEXT BYTE                      81256
         BCT   R14,PARMILOP  TRY AGAIN                           81256
         B     PARMINUL                                          81256
PARMIDON BCTR  R7,0          BACKSPACE                           81256
PARMINUL SLR   R8,R8         SET LENGTH-1 TO SKIP AFTER          81256
         STM   R0,R1,UPD     STASH VALUE                         81256
         PACK  DB,UPD                                            81256
         CVB   R0,DB                                             81256
         ST    R0,0(,R5)     STASH VALUE                         81256
         B     PARMBUMP      CONTINUE SCAN                       81256
         SPACE 1                                                 81256
PARMNBLK LA    R8,1          SET SKIP LENGTH                     81256
         BCTR  R7,0          BACKUP ONE                          81256
PARMNBLL BXH   R7,R8,0(R14)  RETURN IF END OF FIELD              81256
         CLI   0(R7),C' '    EMBEDDED BLANK ?                    81256
         BNER  R14           NO; RETURN                          81256
         B     PARMNBLL      ELSE TRY AGAIN                      81256
         SPACE 1                                                 81256
PARMBUMP LA    R8,1(,R8)     GET TRUE LENGTH                     81256
         BXLE  R7,R8,PARMLOOP  EXAMINE NEXT PARM                 81256
         SPACE 1                                                 81256
PARMDONE DS    0H                                                81256
PARMDFLT MVC   WORKLINE,WORKLINE-1   BLANK WORK LINE AGAIN       81256
         SPACE 1
         SERVCALL ACGET,DB   GET AUTHORIZATION OF ACCOUNT        81256
         STC   R0,DB                                             81256
         TM    DB,VAASYS+VAASUP  ANY ?                           81256
         BZ    NOAUTH        NO                                  81256
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                 90358
         BXH   R15,R15,NOAUTH  NO; DON'T FAIL                    90358
         MODESET KEY=ZERO                                        81256
         LTCB  R1            GET MY TCB                          90358
         L     R1,TCBJSCB-TCB(,R1)  GET JSCB                     81256
         USING IEZJSCB,R1                                        81256
         OI    JSCBSWT1,JSCBPASS  PERMIT INPUT PASSWORD BYPASS   81256
         DROP  R1                                                81256
         MODESET KEY=NZERO   RESTORE IT                          81256
NOAUTH   LA    R8,SYSUT2     POINT TO OUTPUT DCB                 81256
         USING IHADCB,R8
         DEVTYPE DCBDDNAM,SYSUT2TY  GET OUTPUT DEVICE TYPE       90358
         BXH   R15,R15,MISSDD   NO DD CARD
         TM    SYSUT2TY+2,UCB3TAPE+UCB3DACC  DISK OR TAPE DRIVE ?
         BNM   MISSDD        NO; TOO BAD                         90358
         LA    R8,SYSUT1     POINT TO INPUT DCB
         DEVTYPE DCBDDNAM,SYSUT1TY                               90358
         BXH   R15,R15,MISSDD
         TM    SYSUT1TY+2,UCB3TAPE+UCB3DACC  INPUT TAPE OR DISK ?
         BNM   MISSDD        NO; TOO BAD                         90358
         RDJFCB (SYSUT1)     PREP THE JFCB                       88046
         MVC   SAVEROPT,JFCEROPT-INFMJFCB+MYJFCB  SAVE ERROR OPTION
         OPEN  (SYSUT1,(INPUT,REREAD))
         TM    DCBOFLGS,DCBOFOPN
         BZ    BADOPEN       INDICATE THAT OPEN FAILED
         NI    CONFLAG,255-CFCONC  RESET CONCATENATION BIT       88046
         BAL   R9,FIXDEB     SET DEB FOR EXCP USE
         LA    R8,SYSUT2     BACK TO OUTPUT DCB
         OPEN  (SYSUT2,OUTPUT)
         TM    DCBOFLGS,DCBOFOPN  OUTPUT OPEN ?
         BZ    BADOPEN       NO; TOO BAD
         BAL   R9,FIXDEB     SET DEB FOR EXCP USE
         SPACE 1
         L     R2,=A(32*2*1024)  GET A BIG BUFFER
         TM    CONFLAG,CFRBLK+CFNCRLF  REBLOCKING OR STRIPPING ? 90358
         BZ    *+8           NO                                  88046
         AH    R2,DCBBLKSI+SYSUT2-IHADCB  PLUS STAGING BLOCK     88046
         GETMAIN R,LV=(R2)
         LR    R7,R1         SAVE ADDRESS
         STCM  R7,7,READCCW+1
         STCM  R7,7,RITECCW+1
         LR    R0,R1         COPY ADDRESS
         LR    R1,R2         COPY LENGTH
         SLR   R14,R14
         SLR   R15,R15
         MVCL  R0,R14        CLEAR THE BUFFER
         TM    CONFLAG,CFRBLK+CFNCRLF  REBLOCKING OR STRIPPING ? 90358
         BZ    DONEBUFF      NO                                  88046
         LH    R14,DCBBLKSI+SYSUT2-IHADCB  GET OUTPUT BLOCKSIZE  88046
         LR    R15,R7        GET BUFFER START                    88046
         A     R15,=A(32*2*1024)  SKIP I/O BUFFER                88046
         STM   R14,R15,OBUFSIZE  SAVE FOR REBLOCKING             88046
         SPACE 1
DONEBUFF LA    R8,SYSUT1     POINT TO INPUT DCB
         BAL   R9,GETOPTS    GET AND FORMAT OPTIONS
         USING UCBOB,R3      R3 SET TO UCB IN GETOPTS
         MVC   INVOL,UCBVOLI
         LA    R8,SYSUT2     POINT TO OUTPUT
         BAL   R9,GETOPTS    FORMAT
         MVC   OUTVOL,UCBVOLI
         DROP  R3
         PRTSPACE 2,DEV=(1,2)
         B     READLOOP      START PROCESSING
         SPACE 1
READNEXT L     R1,DCBDEBAD-IHADCB+SYSUT1   GET INPUT DEB
         USING DEBBASIC,R1
         L     R1,DEBBASND   GET UCB
         USING UCBOB,R1
         MVC   INVOL,UCBVOLI  SAVE VOLUME SERIAL
         L     R1,DCBDEBAD-IHADCB+SYSUT2   GET OUTPUT DEB
         USING DEBBASIC,R1
         L     R1,DEBBASND   GET UCB
         USING UCBOB,R1
         MVC   OUTVOL,UCBVOLI  SAVE VOLUME SERIAL
         DROP  R1
         SPACE 1
READLOOP MVI   ECB,0         JUST IN CASE
         LA    R8,SYSUT1     SET FOR INPUT DCB
         STCM  R8,7,IOBDCBPT+1  SET INTO IOB
         LA    R1,READCCW
         ST    R1,IOBSTART
         ST    R1,IOBRESTR   JUST IN CASE
         TM    SYSUT1FG,FGEXCP  USE EXCP ?                       90358
         BNZ   READEXCP      YES                                 90358
         SLR   R2,R2                                             90358
         SLR   R3,R3                                             90358
         ICM   R2,7,READCCW+1  GET INPUT BUFFER ADDRESS          90358
         ICM   R3,3,READCCW+6   AND INPUT LENGTH                 90358
         READ  READECB,SF,SYSUT1,(R2),(R3)  READ A BLOCK         90358
         CHECK READECB                                           90358
         CLI   READECB,X'7F'  GOOD COMPLETION ?                  90358
         BNE   READLOOP      NO; SKIP THIS BLOCK                 90358
         INC   TOTALIN       COUNT BLOCKS READ                   91079
         ICM   R3,3,DCBLRECL LOAD BLOCK SIZE READ FROM DCB       90358
         B     READCOMM      JOIN COMMON CODE                    90358
         SPACE 1                                                 90358
READSYN  SYNADAF ACSMETH=BSAM                                    90358
         MVC   SYNADTXT,68(R1)                                   90358
         SYNADRLS ,                                              90358
         PRTLIST ERRORFD     PRINT ERROR MESSAGE                 90358
         INC   BLOCKBAD      BUMP BAD BLOCK COUNT                90358
         OI    RETCH+L'RETCH-1,4                                 91128
         BR    R14           RETURN TO CALLER                    90358
         SPACE 1                                                 90358
READEXCP NI    DCBIFLGS,255-DCBIFEC  RESET ERROR BITS            90358
         MVI   IOBFLAG1,X'00'  RESET RESTART BIT
         LA    R1,IOB        GET IOB ADDRESS
         STCM  R1,7,DCBIOBAA  SET FOR (POSSIBLE) DUMP FORMATTING
         TM    CONFLAG,CFCONC CONCATENATION ?                    88046
         BNZ   READNEWT      YES; PROCESS                        88046
         EXCP  (1)           READ A BLOCK
         WAIT  ECB=ECB
         CLI   ECB,X'7F'     OK ?
         BE    READLEN       YES; GET LENGTH
         CLI   ECB,X'41'     END-FILE ?
         BNE   READBAD       NO
         TM    IOBCSW+3,1    EOF ? (UNIT EXCEPTION)
         BZ    READBAD       NO; OTHER ERROR
READNEWT L     R0,DCBBLKCT   GET CURRENT BLOCK COUNT
         BCTR  R0,0          SUBTRACT FOR TAPEMARK
         ST    R0,DCBBLKCT
         A     R0,TOTALIN    ADD TO PRIOR INPUT COUNT
         ST    R0,TOTALIN    UPDATE TOTAL BLOCK COUNT
         ST    R8,DB
         MVI   DB,X'80'      MAKE 'OPEN' LIST
         RDJFCB MF=(E,DB)    GET THE CURRENT JFCB
         L     R1,DCBDEBAD   GET THE DEB
         USING DEBBASIC,R1
         L     R3,DEBBASND   GET UCB
         DROP  R1
         PRTLIST INVOLFD,DEV=(1,2)
         OI    DCBOFLGS,DCBOFTM  POSITIONED AFTER TAPEMARK
         FEOV  (R8),REWIND   GET NEXT VOLUME OR GO TO EOJ
         NI    CONFLAG,255-CFCONC  RESET CONCATENATION FOUND     88046
         B     READNEXT      READ NEXT VOLUME
         SPACE 1
READBAD  SYNADAF ACSMETH=EXCP,PARM1=IOB  GET SYNAD MSG
         MVC   SYNADTXT,68(R1)
         SYNADRLS ,
         PRTLIST ERRORFD     PRINT ERROR MESSAGE
         LA    R1,1
         A     R1,BLOCKBAD
         ST    R1,BLOCKBAD
         OI    RETCH+L'RETCH-1,4                                 91128
         TM    DCBEROPT,DCBERABE  ABEND ON ERROR ?               88046
         BNZ   READBEND      YES                                 88046
         TM    DCBEROPT,DCBERSKP  SKIP BAD RECORD ?              88046
         BNZ   READNEXT      YES                                 88046
         LA    R1,READCCW+8  EXPECTED COMPLETION                 88046
         CLM   R1,7,IOBCSW   IS IT ?                             88046
         BNE   READNEXT      NO; ACCEPT CAN'T BE HONORED         88046
         SLR   R3,R3                                             88046
         SLR   R2,R2                                             88046
         ICM   R3,3,READCCW+6  GET READ LENGTH                   88046
         ICM   R2,3,IOBCSW+5  GET RESIDUAL COUNT                 88046
         SR    R3,R2         GET LENGTH OF TEXT                  88046
         ST    R3,LENREAD                                        88046
         BZ    READNEXT      SKIP ZERO LENGTH                    88046
         B     READLEN       ELSE ACCEPT BAD RECORD              88046
         SPACE 1
READZER  LA    R1,1
         A     R1,BLOCKZER
         ST    R1,BLOCKZER   UPDATE ZERO LENGTH BLOCK COUNT
         B     READLOOP      READ AGAIN
         SPACE 1
READLEN  LA    R1,READCCW+8  EXPECTED COMPLETION
         CLM   R1,7,IOBCSW   IS IT ?
         BNE   READBAD       NO; ERROR
         SLR   R3,R3
         SLR   R2,R2
         ICM   R3,3,READCCW+6  GET READ LENGTH
         ICM   R2,3,IOBCSW+5  GET RESIDUAL COUNT
         SR    R3,R2         GET LENGTH OF TEXT
READCOMM ST    R3,LENREAD                                        90358
         BZ    READZER       TOO BAD
         STH   R3,RITECCW+6  SET INTO OUTPUT CCW
         MVC   RITECCW+1(3),READCCW+1  REFRESH BUFFER ADDRESS    81256
         TM    CONFLAG,CFNLAB  DELETE LABELS FROM DATA ?         88046
         BZ    KEEPLAB       NO                                  88046
         CLI   RITECCW+6,0   MORE THAN 255 BYTES ?               88046
         BNE   KEEPLAB       YES; NOT A LABEL                    88046
         L     R2,READCCW    GET BUFFER                          88046
         MVC   DB(4),0(R2)   MOVE START                          88046
         TM    DCBOPTCD,DCBOPTQ  INPUT IN ASCII ?                88046
         BZ    *+10          NO                                  88046
         TR    DB(4),TRASTOEB  MAKE EBCDIC                       88046
         LA    R14,DB+1      POINT TO START OF OLD FORMAT        88046
         CLI   DB,C'0'       NUMERIC FIRST BYTE ?                88046
         BNL   TESTLAB       YES; TRY LABELS                     88046
         CLI   DB+3,C'0'     ELSE FOURTH BYTE NUMERIC ?          88046
         BL    KEEPLAB       NO; NOT LABEL                       88046
         BCTR  R14,0         ELSE TRY FOR FOURTH BYTE NUMERIC    88046
TESTLAB  LA    R1,LABLIST                                        88046
         LA    R0,(LABLEND-LABLIST)/(LABLIS2-LABLIST)            88046
         ICM   R14,IIIO,0(R14)  LOAD LABEL FOR FASTER COMPARES   88046
LOOPLAB  CLM   R14,IIIO,0(R1)  MATCH ?                           88046
         BE    SKIPLAB                                           88046
         LA    R1,LABLIS2-LABLIST(,R1)                           88046
         BCT   R0,LOOPLAB    CONTINUE                            88046
         B     KEEPLAB       NOT A LABEL                         88046
SKIPLAB  INC   TOTALLAB      COUNT SKIPPED LABEL RECORDS         88046
         B     READLOOP      READ ANOTHER                        88046
KEEPLAB  TM    CONFLAG,CFASC9   ANY CONVERSION ?                 81256
         BZ    CONVDONE      NO                                  81256
         SLR   R2,R2         CLEAR FOR DIVIDE                    81256
         SLL   R3,3          MULTIPLY BY 8 TO GET BITS           81256
         D     R2,=F'9'      GET FULL BYTES AFTER CONVERSION     81256
         L     R2,READCCW    GET INPUT ADDRESS                   81256
         STH   R3,RITECCW+6  UPDATE LENGTH OF OUTPUT BLOCK       81256
         LA    R3,0(R2,R3)   GET ADDRESS OF BLOCKEND +1          81256
         BCTR  R3,0          SET NEW END ADDRESS                 81256
         LA    R14,0(,R2)    COPY START ADDRESS                  81256
         LR    R15,R14       COPY START ADDRESS FOR OUTPUT       81256
         LA    R2,1          SET BX INCREMENT                    81256
FIELDGRP LM    R0,R1,0(R14)    LOAD 8 BYTES UNALIGNED            81256
         SLDL  R0,1          DELETE HIGH ORDER BIT               81256
         LA    R4,7          PROCESS SEVEN BYTES                 81256
FIELDBYT STCM  R0,8,0(R15)   STASH A BYTE                        81256
         BXH   R15,R2,NOTFIELD  QUIT IF ALL DONE                 81256
         SLDL  R0,9          POSITION NEXT BYTE                  81256
         BCT   R4,FIELDBYT   DO NEXT BYTE                        81256
         MVC   0(1,R15),8(R14)  DO LAST BYTE OF GROUP            81256
         LA    R14,9(,R14)   POSITION TO NEXT GROUP              81256
         BXLE  R15,R2,FIELDGRP  DO NEXT GROUP                    81256
NOTFIELD SLR   R3,R3                                             81256
         ICM   R3,3,RITECCW+6  RESTORE BUFFER LENGTH             81256
CONVDONE L     R2,READCCW    GET BUFFER ADDRESS                  81256
         CLI   XLATEFG,0     ANY TRANSLATION REQUIRED ?          81256
         BE    TRANDONE      NO; SKIP IT                         81256
         L     R15,XLTRANS   LOAD TRANSLATE TABLE ADDRESS        81256
         BAL   R14,TRANSLAT  GO TO TRANSLATION                   81256
TRANDONE SLR   R0,R0                                             88106
         ICM   R0,1,DCBBUFOF+SYSUT1-IHADCB  ANY OFFSET ?         88106
         BZ    TRANTEST      NO; CHECK 4-BYTE BIT                88106
         TM    CONFLAG,CFRBLK  REBLOCK ?                         88106
         BZ    TRANCHOP      NO; REMOVE NOW                      88106
TRANTEST TM    CONFLAG,CFID4   REMOVE 4-BYTE BLOCK ID ?          88106
         BZ    TRUNDONE      NO                                  81256
         LA    R0,4                                              81256
TRANCHOP CLM   R0,3,RITECCW+6  LONG ENOUGH FOR OVERHEAD ?        88106
         BNL   TRUNDONE      NO; SKIP                            88106
         LM    R2,R3,RITECCW  GET WRITE CCW                      88106
         ALR   R2,R0         SKIP LEADING FOUR BYTES             81256
         SLR   R3,R0         AND ADJUST LENGTH                   81256
         STM   R2,R3,RITECCW                                     81256
TRUNDONE LA    R4,READLOOP   SET NEXT ADDRESS                    88036
         TM    CONFLAG,CFRBLK  REBLOCKING REQUESTED ?            88036
         BNZ   TRUNDONS      YES                                 88046
         SLR   R0,R0                                             90358
         SLR   R1,R1                                             90358
         ICM   R0,7,RITECCW+1  LOAD WRITE ADDRESS                90358
         ICM   R1,3,RITECCW+6  AND LENGTH                        90358
         BAL   R9,PTCHR      CHECK FOR CR/LF/FF REMOVAL          90358
         BAL   R9,WRITECCW   WRITE STANDARD CCW                  88046
         BR    R4            DO NEXT READ                        88046
         SPACE 1                                                 88046
TRUNDONS SLR   R2,R2                                             88046
         SLR   R3,R3                                             88046
         ICM   R2,7,RITECCW+1  GET BUFFER START                  88046
         ICM   R3,3,RITECCW+6  AND BUFFER LENGTH                 88046
         SLR   R15,R15                                           88046
         ICM   R15,1,RECGO   GET PROCESSING OFFSET               88046
         B     *+4(R15)      INVOKE PROPER ROUTINE               88046
         B     REFF          DO RECFM=F                          88046
         B     REFV          DO RECFM=V                          88046
         B     REFD          DO RECFM=D                          88046
         SPACE 1                                                 88046
REFF     SLR   R1,R1                                             88046
         IC    R1,DCBBUFOF+SYSUT1-IHADCB  ANSI TAPE OFFSET       88046
         B     REFF2         SKIP IT                             88046
REFF1    SLR   R1,R1                                             88046
         ICM   R1,3,DCBLRECL+SYSUT2-IHADCB  GET DESIRED RECORD LENGTH
         CR    R1,R3         ROOM FOR ANOTHER RECORD ?           88046
         BHR   R4            NO; GET NEXT INPUT                  88046
         LR    R0,R2         SET NEXT RECORD ADDRESS             88046
         BAL   R9,PTCHR      CHECK FOR CR/LF/FF REMOVAL          90358
         BAL   R9,BUILDER    BUILD NEW BLOCK                     88046
REFF2    AR    R2,R1         SET FOR NEXT TIME                   88046
         SR    R3,R1                                             88046
         B     REFF1         REPEAT FOR NEXT RECORD              88046
         SPACE 1                                                 88046
REFV     LA    R1,4          SKIP BDW                            88046
         SLR   R15,R15                                           88046
         ICM   R15,3,0(R2)   GET 'TRUE' BLOCK LENGTH             88046
         BP    *+8           OK ?                                88046
         BAL   R9,RITEBEND   TAKE A DIVE                         88046
         MIN   (R3),(R15)    USE SMALLER OF HARDWARE AND LOGICAL SIZE
         B     REFV2                                             88046
REFV1    SLR   R1,R1                                             88046
         CLI   0(R2),X'80'   LOGICAL BLOCK END ?                 88046
         BER   R4            YES                                 88046
         ICM   R1,3,0(R2)    GET NEXT RDW                        88046
         LR    R0,R2         COPY ADDRESS                        88046
         BAL   R9,PTCHR      CHECK FOR CR/LF/FF REMOVAL          90358
         BAL   R9,BUILDER    ASSEMBLE A BLOCK                    88046
REFV2    AR    R2,R1                                             88046
         SR    R3,R1                                             88046
         BP    REFV1         DO NEXT RECORD                      88046
         BNPR  R4            ELSE GET ANOTHER BLOCK              88046
         SPACE 1                                                 88046
REFD     SLR   R1,R1                                             88046
         IC    R1,DCBBUFOF+SYSUT1-IHADCB  SKIP INPUT OFFSET      88046
         B     REFD2         SKIP BUFFER OFFSET                  88046
REFD1    CLI   0(R2),X'5E'   LOGICAL END OF BLOCK ?              88046
         BER   R4            YES; IGNORE                         88046
         PACK  DB,0(4,R2)    GET NEXT RECORD LENGTH              88046
         OI    DB+7,X'0F'    MAKE POSITIVE                       88046
         CVB   R1,DB         GET RECORD LENGTH                   88046
         LR    R0,R2         COPY ADDRESS                        88046
         BAL   R9,PTCHR      CHECK FOR CR/LF/FF REMOVAL          90358
         BAL   R9,BUILDER                                        88046
REFD2    AR    R2,R1                                             88046
         SR    R3,R1         GET RESIDUAL LENGTH                 88046
         BP    REFD1         DO NEXT RECORD                      88046
         BR    R4            ELSE READ NEXT BLOCK                88046
         SPACE 2                                                 88046
*        THIS CODE ASSEMBLES A NEW BLOCK FROM INDIVIDUAL RECORDS 88046
*                                                                88046
BUILDER  STM   R0,R9,OBUFSAVE  SAVE REGISTERS                    88046
         LTR   R0,R0         ANY RECORD ADDRESS ?                88046
         BZ    BUILDEOF      NO                                  88046
BUILDREC LTR   R1,R1         VALID RECORD LENGTH ?               88046
         BNP   BUILDRET      NO; JUST RETURN                     88046
         L     R2,OBUFADDR   GET BLOCK START                     88046
         ICM   R15,15,OBUFUSED  BLOCK HEADER DONE ?              88046
         BNZ   BUILDFIT      YES                                 88046
         TM    DCBUSASI+SYSUT2-IHADCB,DCBBLBP  STANDARD BDW (RECFM=D) ?
         BNZ   BUILDBDW                                          88046
         CLI   RECGO,4       RECFM=V ?                           88046
         BNE   BUILDFIT      NO; NO BLOCK HEADER                 88046
BUILDBDW LA    R15,4         SET BUFFER USED                     88046
         XC    0(4,R2),0(R2) AND CLEAR BDW                       88046
BUILDFIT AR    R2,R15        NEXT AVAILABLE ADDRESS              88046
         LR    R3,R1         COPY LENGTH TO MOVE                 88046
         AR    R15,R1        NEW OUTPUT LENGTH                   88046
         C     R15,OBUFSIZE  WILL IT FIT ?                       88046
         BNH   BUILDFIS      YES                                 88046
         ICM   R14,15,OBUFUSED  FIRST TIME ?                     88046
         BZ    RITEBEND      YES; RECORD TOO LARGE               88046
BUILDEOF L     R2,OBUFADDR   GET BUFFER START                    88046
         L     R3,OBUFUSED   GET SIZE FILLED                     88046
         STCM  R2,7,RITECCW+1                                    88046
         STCM  R3,3,RITECCW+6  FILL CCW                          88046
         CLI   RECGO,4                                           88046
         BL    BUILDRIT      RECFM=F                             88046
         BH    BUILDRID      RECFM=D                             88046
         STCM  R3,3,0(R2)    MAKE BDW                            88046
         B     BUILDRIT                                          88046
BUILDRID TM    DCBUSASI+SYSUT2-IHADCB,DCBBLBP  STD BDW FOR RECFM=D ?
         BZ    BUILDRIT                                          88046
         CVD   R3,DB         MAKE PACKED                         88046
         UNPK  WORKLINE(5),DB+5(3)  MAKE EBCDIC                  88046
         OI    WORKLINE+4,C'0'  FORCE ZONE                       88046
         MVC   0(4,R2),WORKLINE+1  MOVE TO BDW                   88046
         TM    DCBOPTCD+SYSUT2-IHADCB,DCBOPTQ  ASCII ?           88046
         BZ    BUILDRIT      NO ???                              88046
         NC    0(4,R2),=4X'3F'  MAKE ASCII 30-39                 88046
BUILDRIT BAL   R9,WRITECCW   WRITE INTERMEDIATE BLOCK            88046
         XC    OBUFUSED,OBUFUSED                                 88046
         LM    R0,R9,OBUFSAVE                                    88046
         B     BUILDREC      RESTART                             88046
         SPACE 1                                                 88046
BUILDFIS ST    R15,OBUFUSED  SET NEW SIZE USED                   88046
         MVCL  R2,R0         MOVE TO STAGING BUFFER              88046
BUILDRET LM    R0,R9,OBUFSAVE                                    88046
         BR    R9            RETURN                              88046
         SPACE 1
WRITECCW LA    R1,RITECCW
WRITEOUT MVI   ECB,0         JUST IN CASE                        88046
         LA    R8,SYSUT2     SET FOR OUTPUT DCB
         INC   BLOCKOUT      INCREASE OUTPUT BLOCK COUNT         90358
         TM    SYSUT2FG,FGEXCP  EXCP MODE ?                      90358
         BNZ   RITEEXCP      YES                                 90358
         SLR   R2,R2                                             90358
         SLR   R3,R3                                             90358
         ICM   R2,7,1(R1)    GET OUTPUT ADDRESS                  90358
         ICM   R3,3,6(R1)    AND OUTPUT LENGTH                   90358
         STH   R3,SYSUT2+DCBBLKSI-IHADCB  TELL ME TWICE ?        91079
         WRITE RITEECB,SF,SYSUT2,(R2),(R3)                       90358
         CHECK RITEECB                                           90358
         BR    R9            RETURN TO CALLER                    90358
         SPACE 1                                                 90358
RITEEXCP STCM  R8,7,IOBDCBPT+1  SET INTO IOB                     90358
         ST    R1,IOBSTART
         ST    R1,IOBRESTR   JUST IN CASE
         NI    DCBIFLGS,255-DCBIFEC  RESET ERROR BITS
         MVI   IOBFLAG1,X'00'  RESET RESTART BIT
         LA    R1,IOB        GET IOB ADDRESS
         STCM  R1,7,DCBIOBAA  SET FOR (POSSIBLE) DUMP FORMATTING
         EXCP  (1)           WRITE A BLOCK
         WAIT  ECB=ECB
         CLI   ECB,X'7F'     OK ?
         BNE   RITEBAD       NO; CHECK SOME MORE
         LA    R1,RITECCW+8  SET EXPECTED CCW
         CLM   R1,7,IOBCSW   CORRECT CCW EXECUTED ?
         BNE   RITEBAD       NO; TOO BAD
         OC    IOBCSW+5(2),IOBCSW+5  ANY RESIDUAL COUNT ?
         BZR   R9            NO; GET ANOTHER BLOCK               88046
RITEBAD  CLI   IOBCSW+3,X'0D'  UNIT EXCEPTION AND NO CHECK ?
         BNE   RITEBEND      NO; TOO BAD
         L     R1,BLOCKOUT   GET OUTPUT COUNT FOR THIS REEL
         A     R1,TOTALOUT
         ST    R1,TOTALOUT
         L     R1,BLOCKBAD   GET ERROR COUNT FOR THIS REEL
         A     R1,TOTALBAD
         ST    R1,TOTALBAD
         L     R1,BLOCKZER   GET ZERO LENGTH BLOCK COUNT FOR THIS REEL
         A     R1,TOTALZER
         ST    R1,TOTALZER
         ST    R8,DB
         MVI   DB,X'80'      MAKE 'OPEN' LIST
         RDJFCB MF=(E,DB)    GET THE CURRENT JFCB
         L     R1,DCBDEBAD   GET THE DEB
         USING DEBBASIC,R1
         L     R3,DEBBASND   GET UCB
         DROP  R1
         PRTLIST OUTVOLFD,DEV=(1,2)  SHOW COUNTS ON CURRENT VOLUME
         XC    BLOCKOUT(12),BLOCKOUT  CLEAR COUNTS ON NEXT VOLUME
         FEOV  (R8),LEAVE    FORCE VOLUME SWITCH
         LA    R4,READNEXT   SET FOR NEXT READ ADDRESS           88036
         BR    R9            CONTINUE                            88046
         SPACE 1                                                 88046
RITESYN  SYNADAF ACSMETH=BSAM                                    90358
         MVC   SYNADTXT,68(R1)                                   90358
         SYNADRLS ,                                              90358
         PRTLIST ERRORFD                                         90358
         B     READBEND      CRASH ON ERROR                      90358
         SPACE 1                                                 90358
RITEBEND SYNADAF ACSMETH=EXCP,PARM1=IOB  GET SYNAD MSG
         MVC   SYNADTXT,68(R1)
         SYNADRLS ,
         PRTLIST ERRORFD     PRINT ERROR MESSAGE
READBEND SERVTERM ,          CLOSE PRINTER
         ABEND 001,DUMP      DON'T KNOW HOW TO RECOVER ?
         EJECT                                                   90358
**********************************************************************
*                                                                    *
*        ROUTINE TO STRIP CR/LF/FF AND BUILD FIXED OR VAR. RECORDS   *
*                                                                    *
**********************************************************************
PTCHR    TM    CONFLAG,CFNCRLF  REMOVE CR/LF/FF FROM TEXT ?      90358
         BZR   R9            NO; DO NORMAL BLOCK OR RECORD WRITE 90358
         STM   R0,R9,IBUFSAVE  SAVE CALLER'S REGISTERS           90358
         LR    R6,R0         POINT TO DATA BUFFER                90358
         LTR   R7,R1         LOAD AND TEST LENGTH                90358
         BNP   PTCHRITE      NULL BUFFER IS SPECIAL CASE (EOJ)   90358
PTCHLOOP ICM   R4,15,IBUFADDR   POINT TO OUTPUT LINE             90358
         BP    PTCHN1ST      NOT FIRST TIME                      90358
         LH    R5,SYSUT2+DCBLRECL-IHADCB  GET OUTPUT RECORD LENGTH
         TM    SYSUT2RC,DCBRECF RECFM=F ?                        90358
         BNZ   *+8           YES                                 90358
         SH    R5,=H'4'      ALLOW FOR RDW                       90358
         ST    R5,IBUFSIZE   SAVE MAXIMUM                        90358
         GETMAIN R,LV=(R5)   GET STORAGE                         90358
         LR    R4,R1         SAVE ADDRESS                        90358
         ST    R4,IBUFADDR                                       90358
         CLRL  (R4),(R5),FILL=C' '  BLANK BUFFER                 90358
         MVI   PTCHFLG,PTCHFIO  INITIALIZE FLAG                  90358
         CLC   =X'0D250D0C',0(R6)  SPECIAL START ?               90358
         BNE   PTCHFRST      NO                                  90358
         LA    R6,4(,R6)                                         90358
         SH    R7,=H'4'                                          90358
         MVI   0(R4),C'1'    BEGIN WITH PAGE EJECT               90358
         OI    PTCHFLG,PTCHFLF+PTCHFCR+PTCHFFF                   90358
PTCHFRST LA    R1,1          SET INITIAL SIZE                    90358
         ST    R1,IBUFUSED                                       90358
         SPACE 1                                                 90358
PTCHN1ST L     R5,IBUFSIZE   GET MAXIMUM MOVABLE                 90358
         L     R3,IBUFUSED   GET AMOUNT ALREADY FILLED           90358
         AR    R4,R3         OFFSET                              90358
         SR    R5,R3         GET REMAINING LENGTH                90358
         BP    PTCHFILL      OK; HAVE SOME                       90358
PTCHRITE LM    R0,R1,IBUFADDR  ADDRESS/LENGTH OF CURRENT RECORD  90358
         LTR   R1,R1         ANYTHING TO DO ?                    90358
         BNP   PTCHRITN      NO                                  90358
         TM    SYSUT2RC,DCBRECF  FIXED LENGTH ?                  90358
         BZ    *+8           NO; USE WHATEVER IT IS              90358
         L     R1,IBUFSIZE   USE FULL SIZE                       90358
         BAL   R9,BUILDER    WRITE AN OUTPUT RECORD              90358
PTCHRITN XC    IBUFUSED,IBUFUSED  CLEAR USED PORTION AGAIN       90358
         ICM   R1,15,IBUFSAVE+4  END-FILE CALL ?                 90358
         BZ    PTCHEXIT      YES                                 90358
         L     R4,IBUFADDR                                       90358
         L     R5,IBUFSIZE   GET MAXIMUM                         90358
         CLRL  (R4),(R5),FILL=C' '  CLEAR THE RECORD             90358
         MVI   0(R4),C'+'    SET DEFAULT CARRIAGE CONTROL        90358
         MVI   IBUFUSED+L'IBUFUSED-1,1  SET LENGTH=1             90358
         OI    PTCHFLG,PTCHFIO  SHOW RECORD WRITTEN              90358
         TM    PTCHFLG,PTCHFLF+PTCHFFF  LF OR FF FOUND ?         90358
         BZ    PTCHLOOP      NOT YET                             90358
         MVI   0(R4),C' '    MAKE SINGLE SPACE                   90358
         BM    PTCHLOOP      LF                                  90358
         MVI   0(R4),C'1'    MAKE PAGE EJECT                     90358
         B     PTCHLOOP      TRY AGAIN                           90358
         SPACE 1                                                 90358
PTCHFILL LA    R3,256        SET MAXIMUM PROCESSABLE IN ONE TRY  90358
         CR    R7,R3         THAT MUCH LEFT ?                    90358
         BNL   *+6           YES                                 90358
         LR    R3,R7         USE ONLY WHAT'S LEFT                90358
         LTR   R3,R3         ANYTHING LEFT TO DO ?               90358
         BNP   PTCHEXIT      DONE WITH THIS PACKET               90358
         CR    R3,R5         MORE THAN WILL FIT IN OUTPUT ?      90358
         BNH   *+6           NO                                  90358
         LR    R3,R5         TEST ONLY WHAT WILL FIT             90358
         BCTR  R3,0          MAKE EXECUTE LENGTH                 90358
         SLR   R2,R2         CLEAR FOR IC                        90358
         LA    R1,1(R3,R6)   POINT TO END (IF NO MATCH)          90358
         EX    R3,PTCHTRT    LOOK FOR CR OR LF                   90358
         LR    R3,R1         GET END LOCATION                    90358
         SR    R3,R6         LESS START LOCATION                 90358
         BNP   PTCHWHAT      NOTHING TO MOVE                     90358
         BCTR  R3,0          LENGTH FOR EXECUTE                  90358
         EX    R3,PTCHMVC    MOVE TO OUTPUT BUFFER               90358
         LA    R3,1(,R3)     RESTORE TRUE LENGTH                 90358
         AR    R6,R3         UPDATE INPUT                        90358
         SR    R7,R3         AND INPUT LENGTH                    90358
         A     R3,IBUFUSED   UPDATE LENGTH USED                  90358
         ST    R3,IBUFUSED   AND STASH BACK                      90358
         MVI   PTCHFLG,0     RESET FLAG                          90358
PTCHWHAT LTR   R2,R2         SPECIAL CONDITION ?                 90358
         BNP   PTCHLOOP      NO; CONTINUE MOVING                 90358
         LA    R6,1(,R6)     ADVANCE OVER CONTROL CHARACTER      90358
         BCTR  R7,0          SET RESIDUAL LENGTH                 90358
         B     *(R2)         BRANCH BY CONDITION                 90358
         B     PTCHCR        CARRIAGE RETURN                     90358
         B     PTCHLF        LINE-FEED                           90358
         B     PTCHFF        FORM-FEED                           90358
         SPACE 1                                                 90358
PTCHCR   TM    PTCHFLG,PTCHFIO PRIOR WRITE ?                     90358
         BZ    PTCHCRW       NO                                  90358
         TM    PTCHFLG,PTCHFCR  PRIOR CR ?                       90358
         BZ    PTCHCR1       NO; JUST SET CR                     90358
PTCHCRW  MVI   PTCHFLG,PTCHFCR+PTCHFIO  YES; SHOW WRITTEN        90358
         B     PTCHRITE      AND GO TO WRITE BUFFER              90358
PTCHCR1  OI    PTCHFLG,PTCHFCR  SHOW CR FOUND                    90358
         B     PTCHLOOP      AND CONTINUE                        90358
         SPACE 1                                                 90358
PTCHLF   TM    PTCHFLG,PTCHFIO PRIOR WRITE ?                     90358
         BZ    PTCHLFW       NO                                  90358
         TM    PTCHFLG,PTCHFLF  PRIOR LF ?                       90358
         BZ    PTCHLF1       NO; JUST SET LF                     90358
PTCHLFW  MVI   PTCHFLG,PTCHFLF+PTCHFIO  YES; SHOW WRITTEN        90358
         B     PTCHRITE      AND GO TO WRITE BUFFER              90358
PTCHLF1  OI    PTCHFLG,PTCHFLF  SHOW LF FOUND                    90358
         L     R4,IBUFADDR   GET BUFFER START                    90358
         MVI   0(R4),C' '    MAKE SINGLE SPACE                   90358
         B     PTCHLOOP      AND CONTINUE                        90358
         SPACE 1                                                 90358
PTCHFF   TM    PTCHFLG,PTCHFIO PRIOR WRITE ?                     90358
         BZ    PTCHFFW       NO                                  90358
         TM    PTCHFLG,PTCHFLF  PRIOR LF ?                       90358
         BZ    PTCHFF1       NO; JUST SET LF                     90358
PTCHFFW  MVI   PTCHFLG,PTCHFLF+PTCHFFF  YES; SHOW WRITTEN        90358
         B     PTCHRITE      AND GO TO WRITE BUFFER              90358
PTCHFF1  OI    PTCHFLG,PTCHFLF+PTCHFFF  SHOW LF FOUND            90358
         L     R4,IBUFADDR   GET BUFFER START                    90358
         MVI   0(R4),C'1'    MAKE PAGE EJECT                     90358
         B     PTCHLOOP      AND CONTINUE                        90358
         SPACE 1                                                 90358
PTCHEXIT LM    R0,R9,IBUFSAVE  RESTORE CALLER'S REGISTERS        90358
         B     4(,R9)        SKIP RETURN TO CALLER               90358
PTCHTRT  TRT   0(0,R6),PTCHTAB  LOOK FOR CR AND LF               90358
PTCHMVC  MVC   0(0,R4),0(R6)  MOVE DATA TO OUTPUT BUFFER         90358
PTCHTAB  DC    256X'0'       TRANSLATE AND TEST TABLE            90358
         ORG   PTCHTAB+X'25'  LINE-FEED                          90358
         DC    AL1(8)                                            90358
         ORG   PTCHTAB+X'0D'  CARRIAGE-RETURN                    90358
         DC    AL1(4)                                            90358
         ORG   PTCHTAB+X'0C'  PAGE EJECT                         90358
         DC    AL1(12)                                           90358
         ORG   ,                                                 90358
         EJECT ,                                                 90358
EOJ      ICM   R0,15,IBUFUSED  ANY MORE TO PROCESS               90358
         BZ    EOJNINP       NO                                  90358
         SLR   R0,R0                                             90358
         SLR   R1,R1         SIGNAL SHUT-DOWN                    90358
         BAL   R9,PTCHR      PROCESS LAST ENTRY                  90358
         NOP   0             CORRECT RETURN SKIPS 4              91079
EOJNINP  ICM   R0,15,OBUFUSED  ANY DATA TO BE WRITTEN OUT ?      90358
         BZ    EOJDONE       NO                                  88046
         SLR   R0,R0                                             88046
         SLR   R1,R1                                             88046
         BAL   R9,BUILDER    SIGNAL EOF PROCESSING/FINAL WRITES  88046
EOJDONE  L     R2,=A(32*2*1024)  GET BUFFER SIZE
         A     R2,OBUFSIZE   PLUS OPTIONAL STAGING BUFFER        88046
         FREEMAIN R,LV=(R2),A=(R7)  FREE IT
         LA    R8,SYSUT2     SET FOR OUTPUT FILE
         ST    R8,DB
         MVI   DB,X'80'      MAKE 'OPEN' LIST
         RDJFCB MF=(E,DB)    GET THE CURRENT JFCB
         L     R1,DCBDEBAD   GET THE DEB
         USING DEBBASIC,R1
         L     R3,DEBBASND   GET UCB
         DROP  R1
         PRTLIST OUTVOLFD,DEV=(1,2)  SHOW COUNTS ON CURRENT VOLUME
         CLOSE (SYSUT1,DISP,SYSUT2,DISP)                         82248
         L     R1,BLOCKOUT   GET OUTPUT COUNT FOR THIS REEL
         A     R1,TOTALOUT
         ST    R1,TOTALOUT
         PRTLIST TOTALS,DEV=(1,2,3)
         SERVTERM ,          CLOSE AND FREE EVERYTHING
         LH    R9,RETCH      GET THE RETURN CODE                 88036
         ENDM  RC=(R9)       AND EXIT                            88036
         SPACE 1
BADOPEN  PRTLIST FAILOPEN,DEV=(1,2,3)
         B     ABND2400
MISSDD   PRTLIST MSGMISDD,DEV=(1,2,3)
ABND2400 SERVTERM ,
         ABEND 2400
         SPACE 1
INEXIT   LR    R8,R1         COPY DCB ADDRESS
         TM    SYSUT1FG-SYSUT1(R8),FGEXCP  BSAM ?                90358
         BNZ   INEXITB       YES; NO CONCATENATION SUPPORT       90358
         OI    CONFLAG,CFCONC  SET CONCATENATION BIT             88046
         OI    DCBOFLGS,DCBOFPPC  UNLIKE CONCATENATION ALLOWED   88046
INEXITB  TM    DCBRECFM,DCBRECLA   ANY RECFM ?
         BNZ   *+8           YES
         OI    DCBRECFM,DCBRECU   DEFAULT TO UNDEFINED
         OC    DCBBLKSI,DCBBLKSI  ANY BLOCKSIZE ?
         BNZ   *+10          YES
         MVC   DCBBLKSI,=H'32760'  USE DEFAULT
         OC    DCBLRECL,DCBLRECL   ANY RECFM ?
         BNZ   *+10          YES
         MVC   DCBLRECL,DCBBLKSI   USE DEFAULT
         MVC   SYSUT1RC-SYSUT1(1,R8),DCBRECFM  SAVE RECFM        90358
         MVI   DCBRECFM,DCBRECU  FORCE 'U' FOR DCBLRECL SET      90358
         TM    CONFLAG,CFASC9   9-BIT ASCII ?                    81256
         BZ    *+8           NO                                  81256
         OI    DCBOPTCD,DCBOPTQ  YES; FORCE TRANSLATION          81256
         NI    DCBOPTCD,DCBOPTQ  REMOVE ALL BUT TRANSLATE
         BZ    INEXITNT      TRANSLATION NOT REQUIRED            81256
         L     R7,DCBDEBAD   GET DEB                             91069
         USING IECDSECT,R7   DECLARE IT                          91069
         TM    JFCBLTYP,JFCBAL   AL, AUL, AL3 OR AU3 ?           91069
         BNZ   INEXITNT      YES; LET IBM TRANSLATE              91069
         DROP  R7                                                91069
         MVC   XLTRANS+1(3),=AL3(TRASTOEB)  SET ASCII TO EBCDIC  81256
         OI    XLATEFG,XLATOE   SET INPUT TRANSLATION
         OI    SYSUT1FG,FGANSI  SET ANSI TRANSLATE               90358
         NI    DCBOPTCD,255-DCBOPTQ  REMOVE TRANSLATE            90358
INEXITNT OI    DCBOPTCD,DCBOPTZ  SET REDUCED ERROR RECOVERY      81256
         OC    DCBEROPT,SAVEROPT  MERGE (OS WON'T)               88046
         TM    DCBEROPT,DCBERACC+DCBERSKP+DCBERABE  ANY OPTION ? 88046
         BNZR  R14           YES                                 88046
         OI    DCBEROPT,DCBERSKP  SET SKIP DEFAULT               88046
         BR    R14           RETURN TO OPEN
         SPACE 1
OUTEXIT  LR    R8,R1         COPY DCB ADDRESS
         NI    DCBEROPT,255-DCBERACC-DCBERSKP                    88046
         OI    DCBEROPT,DCBERABE  FORCE ABEND ON ERROR           88046
         TM    DCBRECFM,DCBRECLA   ANY RECFM ?
         BNZ   *+10          YES
         MVC   DCBRECFM,SYSUT1RC  COPY FROM INPUT                90358
         MVC   SYSUT1RC-SYSUT1(1,R8),DCBRECFM  SAVE RECFM        90358
         OC    DCBBLKSI,DCBBLKSI  ANY BLOCKSIZE ?
         BNZ   *+10          YES
         MVC   DCBBLKSI,DCBBLKSI-IHADCB+SYSUT1  COPY FROM INPUT
         OC    DCBLRECL,DCBLRECL   ANY RECFM ?
         BNZ   OUTEXHLN      YES                                 81278
         CLC   DCBRECFM,SYSUT1RC  SAME AS INPUT ?                91069
         BNE   OUTEXNLN      NO; DEFAULT TO BLOCKSIZE            81278
         MVC   DCBLRECL,DCBLRECL-IHADCB+SYSUT1  COPY FROM INPUT  81278
         B     OUTEXHLN                                          81278
OUTEXNLN MVC   DCBLRECL,DCBBLKSI   USE DEFAULT                   81278
OUTEXHLN NI    DCBOPTCD,DCBOPTQ  RESET ALL BUT TRANSLATION       81278
         BZ    OUTEXOPT      NONE; RESET OPTCD
         L     R7,DCBDEBAD   GET DEB                             91069
         USING IECDSECT,R7   DECLARE IT                          91069
         TM    JFCBLTYP,JFCBAL   AL, AUL, AL3 OR AU3 ?           91069
         BNZ   OUTEXOPT      YES; LET IBM TRANSLATE              91069
         DROP  R7                                                91069
         MVC   XLTRANS+1(3),=AL3(TREBTOAS)  SET EBCDIC TO ASCII  81256
         OI    XLATEFG,XLETOA  SET OUTPUT TRANSLATION
         OI    SYSUT2FG,FGANSI  SET ANSI TRANSLATE               90358
         NI    DCBOPTCD,255-DCBOPTQ  REMOVE TRANSLATE            90358
         TM    XLATEFG,XLETOA+XLATOE  BOTH ?
         BNO   OUTEXOPT      EITHER
         MVI   XLATEFG,0     NO TRANSLATE IF BOTH ON
OUTEXOPT OI    DCBOPTCD,DCBOPTZ  SET REDUCED ERROR RECOVERY
         TM    CONFLAG,CFRBLK+CFNCRLF  STRIP CR/LF OR REBLOCK ?  90358
         BNZ   OUTEXRBK      CHECK REBLOCK OPTIONS               88046
         CLI   DCBBUFOF,0    ANY BUFOFF ?                        88046
         BNE   *+10          YES                                 88046
         MVC   DCBBUFOF,DCBBUFOF+SYSUT1-IHADCB  COPY             88046
         TM    DCBUSASI,DCBBLBP  BDW ?                           88046
         BZ    *+10                                              88046
         MVC   DCBUSASI,DCBUSASI+SYSUT1-IHADCB                   88046
         BR    R14                                               88036
OUTEXRBK TM    DCBRECFM,DCBRECU  UNDEFINED ?                     88046
         BO    OUTRBAD       YES; NOT SUPPORTED                  88046
         BM    OUTEXRT       V OR F                              88046
         TM    DCBRECFM,DCBRECD  ASCII VARIABLE ?                88046
         BZ    OUTRBAD       NO                                  88046
         MVI   RECGO,8       SET RECFM=D BRANCH                  88046
         CLI   DCBBUFOF,4    BUFOFF=4 ?                          88046
         BNE   *+12          NO                                  88046
         MVI   DCBBUFOF,0    RESET                               88046
         OI    DCBUSASI,DCBBLBP  SET FOR STANDARD BDW            88046
         CLI   DCBBUFOF,0    ANY BUFOFF ?                        88046
         BNE   OUTRBAD       YES; UNSUPPORTED                    88046
         TM    DCBUSASI,DCBBLBP  BDW ?                           88046
         BZ    OUTEXCOM      NO                                  88046
         CLC   =H'9999',DCBBLKSI  NOT TOO LARGE ?                88046
         BL    OUTRBAD                                           88046
         B     OUTEXCOM      GO TO COMMON                        88046
OUTEXRT  MVI   RECGO,0       SET FOR FIXED                       88046
         CLI   DCBBUFOF,0    ANY BUFOFF ?                        88046
         BNE   OUTRBAD       YES; NOT SUPPORTED                  88046
         TM    DCBRECFM,DCBRECF  FIXED ?                         88036
         BNZ   OUTEXCOM      YES                                 88046
         TM    DCBRECFM,DCBRECV  OTHER ?                         88036
         BZ    OUTRBAD       YES                                 88046
         MVI   RECGO,4       TAKE RECFM=V BRANCH                 88046
OUTEXCOM TM    CONFLAG,CFNCRLF  STRIP CR/LF MODE ?               90358
         BZ    OUTEXCON                                          90358
         TM    DCBRECFM,DCBRECCC  CONTROL CHARACTERS ?           90358
         BNM   OUTEXCOW      NO; OR INVALID                      90358
         TM    DCBRECFM,DCBRECCA  ASA ?                          90358
         BNZ   OUTEXCON      YES; PROCEED                        90358
OUTEXCOW LR    R2,R14        SAVE RETURN ADDRESS                 90358
         PRTF  '***** SYSUT2 RECFM INVALID; --A REQUIRED *****',       *
               CC=NO,DEV=(1,2)                                   90358
         LR    R14,R2        RESTORE RETURN                      90358
OUTEXCON SLR   R2,R2                                             88046
         SLR   R1,R1                                             88046
         ICM   R2,3,DCBLRECL  ANY RECORD LENGTH ?                88036
         BZ    OUTRBAD       NO                                  88036
         ICM   R1,3,DCBBLKSI  ANY BLOCKSIZE ?                    88036
         BZ    OUTRBAD       NO; FAIL                            88046
         CLI   RECGO,0       RECFM=F ?                           88046
         BNER  R14           NO; ACCEPT                          88046
         CR    R1,R2         BLKSIZE GREATER ?                   88046
         BL    OUTRBAD       NO                                  88046
         SLR   R0,R0                                             88046
         DR    R0,R2         GET RESIDUAL                        88046
         LTR   R0,R0         ANY ?                               88046
         BZR   R14           NONE; RECORD DIVIDES BLOCK SIZE     88046
         TM    CONFLAG,CFNCRLF  STRIP MODE ?                     90358
         BZ    OUTRBAD       NO; FAIL                            90358
         MR    R0,R2         MAKE MULTIPLE AGAIN                 90358
         STH   R1,DCBBLKSI                                       90358
         LTR   R1,R1         ANY AT ALL ?                        90358
         BPR   R14           OK                                  90358
OUTRBAD  LR    R2,R14        SAVE RETURN ADDRESS                 88036
         PRTF  '***** SYSUT2 RECFM, LRECL, BLKSIZE AND BUFOFF INCONSIST*
               ENT FOR REBLOCK OPTION *****',CC=NO,DEV=(1,2)     88046
         NI    CONFLAG,255-CFRBLK  RESET                         88036
         OI    RETCH+L'RETCH-1,8   SET RETURN CODE               88036
         LR    R14,R2                                            88036
         BR    R14           RETURN TO OPEN
         SPACE 1
FIXDEB   TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                 90358
         BXH   R15,R15,0(R9)  RETURN IF NOT                      90358
         MODESET KEY=ZERO    GET PRIVILEGED                      90358
         L     R3,CVTPTR     GET CVT
         L     R1,CVTTCBP-CVTMAP(,R3)  GET TCB POINTER           81256
         L     R1,4(,R1)     GET CURRENT TCB                     81256
         L     R1,TCBJSCB-TCB(,R1)  GET JSCB                     81256
         USING IEZJSCB,R1                                        81256
         NI    JSCBSWT1,255-JSCBPASS  RESET INPUT PASSWORD BYPASS
         L     R3,CVTXAPG-CVTMAP(,R3)  GET APPENDAGE TABLE
         CLI   SYSUT1TY-SYSUT1+2(R8),UCB3TAPE  TAPE DRIVE ?      90358
         BNE   FIXDEBEX      NO; JUST EXIT                       90358
         L     R1,DCBDEBAD   GET DEB
         USING DEBBASIC,R1
         AIF   (NOT &MVS).NOTMVS                                 82195
         OI    DEBFLGS1,DEBEXCPA  ALLOW EXCP                     81245
.NOTMVS  L     R1,DEBAPPAD   GET AVT                             81245
         DROP  R1
         MVC   DEBEOEA-DEBAVT(DEBXCEA+4-DEBAVT,R1),0(R3)  DUMMY OUT
         OI    SYSUT1FG-SYSUT1(R8),FGEXCP  USE EXCP FOR I/O      90358
FIXDEBEX MODESET KEY=NZERO   RESET PRIVILEGE                     90358
         BR    R9            RETURN TO CALLER
         SPACE 1
GETOPTS  ST    R8,DB
         MVI   DB,X'80'      MAKE 'OPEN' LIST
         RDJFCB MF=(E,DB)    GET THE CURRENT JFCB
         L     R1,DCBDEBAD   GET THE DEB
         USING DEBBASIC,R1
         L     R3,DEBBASND   GET UCB
         DROP  R1
         MVC   RECFM,=CL6'?'  PRESET IF NOTHING FOUND
         LA    R4,RECFM      POINT TO OUTPUT
         MVC   DB(6),PATRECFM+4  COPY MINOR OPTIONS
         SLR   R1,R1
         IC    R1,SYSUT1RC-SYSUT1(R8)  GET RECORD FORMAT         90358
         SRA   R1,6          ISOLATE MAJOR TYPE
         BP    DORECFMD      OK
         MVI   DB,C'D'       CHANGE FOR POSSIBLE D FORMAT (?)
         B     DORECFMB
DORECFMD LA    R1,PATRECFM(R1)  POINT TO MAJOR TYPE
         MVC   0(1,R4),0(R1)  MOVE IT
         LA    R4,1(,R4)     UP OUTPUT ADDRESS
DORECFMB IC    R1,SYSUT1RC-SYSUT1(R8)  GET RECORD FORMAT AGAIN   90358
         LA    R2,5          SET FOR 5 ADDITIONAL OPTIONS
         LA    R14,DB        POINT TO ABBREVIATIONS
         SLL   R1,25         ADJUST FOR BXLE
         OR    R1,R2         MAKE LOW NON-ZERO
DORECFML BXH   R1,R1,DORECFMN
         MVC   0(1,R4),0(R14) MOVE ABBREVIATION
         LA    R4,1(,R4)
DORECFMN LA    R14,1(,R14)
         BCT   R2,DORECFML   DO ALL
         PRTLIST OPTFD,DEV=(1,2)  FORMAT THE OPTIONS
         BR    R9            RETURN TO CALLER
PATRECFM DC    C'?VFUTBSAM '
         SPACE 2                                                 81256
*        TRANSLATION ROUTINES                                    81256
*        ENTRY R2 - ADDRESS  R3 - LENGTH  R15 - TRANSLATE TABLE  81256
*        DESTROYS R0-R3;  RETURNS ON R14                         81256
TRANSLAT LTR   R3,R3         CHECK LENGTH                        81256
         BNPR  R14           NOTHING TO DO; RETURN               81256
         LA    R0,256        MAXIMUM TRANSLATABLE                81256
TRTOLOOP LR    R1,R0         SET LENGTH                          81256
         CR    R1,R3         COMPARE TO RESIDUAL LENGTH          81256
         BNH   *+6           MORE THAN ONE SEGMENT               81256
         LR    R1,R3         PARTIAL SEGMENT LENGTH              81256
         BCTR  R1,0          SET LENGTH FOR EXECUTE              81256
         EX    R1,TRTOTR     TRANSLATE                           81256
         AR    R2,R0         NEXT SEGMENT ADDRESS                81256
         SR    R3,R0         REMAINING LENGTH                    81256
         BP    TRTOLOOP                                          81256
         BR    R14           RETURN TO CALLER                    81256
TRTOTR   TR    0(0,R2),0(R15)  TRANSLATE                         81256
         SPACE 2
SYSUT1   DCB   DSORG=PS,DDNAME=SYSUT1,MACRF=(R),EXLST=INEXLST,         *
               NCP=1,EODAD=EOJ,SYNAD=READSYN                     90358
SYSUT1DD DC    CL8'SYSUT1'
SYSUT1TY DC    XL8'0'        DEVICE TYPE                         90358
INEXLST  DC    0A(0),X'05',AL3(INEXIT),X'87',AL3(MYJFCB)         91069
SYSUT1FG DC    X'00'         PROCESSING FLAG                     90358
FGEXCP   EQU   X'80'           USE EXCP FOR THIS DCB             90358
FGANSI   EQU   X'01'           DO ANSI (EBCDIC<=>ISCII) TRANSLATE
SYSUT1RC DC    X'00'         SAVED RECORD FORMAT                 90358
         SPACE 1                                                 90358
SYSUT2   DCB   DSORG=PS,DDNAME=SYSUT2,MACRF=(W),NCP=1,EXLST=OUTEXLST,  *
               SYNAD=RITESYN                                     90358
SYSUT2DD DC    CL8'SYSUT2'
SYSUT2TY DC    XL8'0'        DEVICE TYPE                         90358
OUTEXLST DC    0A(0),X'05',AL3(OUTEXIT),X'87',AL3(MYJFCB)        91069
SYSUT2FG DC    X'00'         PROCESSING FLAG                     90358
SYSUT2RC DC    X'00'         SAVED RECORD FORMAT                 90358
         SPACE 1
ECB      DC    F'0'          I/O ECB
IOB      DS    0D
IOBFLAG1 DC    X'80'         1 RELATED IOB (HAH)
IOBFLAG2 DC    X'00'
IOBSENS0 DC    X'00'
IOBSENS1 DC    X'00'
IOBECBPT DC    A(ECB)
IOBFL3   DC    X'00'
IOBCSW   DC    XL7'00'
IOBSTART DC    A(READCCW)
IOBDCBPT DC    A(SYSUT1)     DCB
IOBRESTR DC    A(READCCW)
IOBINCAM DC    H'1'
IOBERRCT DC    H'0'
READCCW  CCW   X'02',0,X'20',X'FFFF'   READ BIG BLOCKS
RITECCW  CCW   X'01',0,X'20',X'FFFF'   WRITE BIG BUFFER
         SPACE 1
MYJFCB   DS    0A,XL176         EXPAND JFCB IN-LINE              91069
         SPACE 1
SYSPRINT PRTWORK SYSPRINT,TITLE=3
SUMPRINT PRTWORK SUMPRINT,TITLE=3
CONSOLE  PRTWORK *CONSOLE
         SPACE 1                                                 81256
         LTORG ,                                                 81256
         SPACE 1                                                 88046
LABLIST  DC    C'VOL'        VOLUME LABEL                        88046
LABLIS2  DC    C'HDR'        HEADER LABEL                        88046
         DC    C'EOFEOVUHDUTL'  OTHER LABELS                     88046
LABLEND  EQU   *             END OF LIST                         88046
         SPACE 1
TITLEFD  FDOPT NL,CC=C'#'    AUTOMATIC DATE/TIME/PAGE HEADER     81278
         FDPRT '*** COPYTAPE UTILITY PROGRAM ***',RADJ,LEN=45    81278
         FDPRT *END
         SPACE 1
TOTALS   FDOPT NL,CC=C'0'
         FDPRT TOTALIN,I,RADJ,LEN=10
         FDPRT 'BLOCKS READ,',PAD
         FDCLC TOTALBAD,ZEROES,4,BE=TOTFDNBD
         FDPRT TOTALBAD,I,PAD
         FDPRT 'BLOCKS SKIPPED DUE TO ERRORS,'
TOTFDNBD FDCLC TOTALZER,ZEROES,4,BE=TOTFDNZR
         FDPRT TOTALZER,I,PAD
         FDPRT 'ZERO LENGTH BLOCKS SKIPPED.'
TOTFDNZR FDCLC TOTALLAB,ZEROES,4,BE=TOTFDNZL                     88046
         FDPRT TOTALLAB,I,PAD                                    88046
         FDPRT 'LABEL RECORDS SKIPPED.'                          88046
TOTFDNZL FDPRT TOTALOUT,I,RADJ,NL,LEN=10
         FDPRT 'BLOCKS WRITTEN',PADL
         FDPRT *END
         SPACE 1
INVOLFD  FDPRT DCBBLKCT,I,NL,RADJ,LEN=10
         FDPRT 'BLOCKS READ FROM',PAD
         FDEXEC OPTFDCOM,OPTFDEND
         FDCLC BLOCKBAD,ZEROES,4,BE=INVFDNBD
         FDPRT BLOCKBAD,I,PAD,RADJ,LEN=10
         FDPRT 'BLOCKS SKIPPED DUE TO ERRORS'
INVFDNBD FDCLC BLOCKZER,ZEROES,4,BE=INVFDNZR
         FDPRT BLOCKZER,I,PAD,RADJ,LEN=10
         FDPRT 'ZERO LENGTH BLOCKS SKIPPED'
INVFDNZR FDPRT *END
         SPACE 1
OUTVOLFD FDPRT BLOCKOUT,I,NL,RADJ,LEN=10
         FDPRT 'BLOCKS WRITTEN TO',PAD
         FDEXEC OPTFDCOM,OPTFDEND
         FDPRT *END
         SPACE 1
ERRORFD  FDPRT SYSUT1DD-SYSUT1(R8),L'SYSUT1DD,DEB,NL
         FDPRT 'ERROR AT BLOCK',PAD
         FDPRT DCBBLKCT,I
         FDPRT 'ECB=',PADL
         FDPRT ECB,1,HEX
         FDPRT 'FL1/2=',PADL
         FDPRT IOBFLAG1,2,HEX
         FDPRT 'IOBSENS=',PADL
         FDPRT IOBSENS0,2,HEX
         FDPRT 'IOBSTAT=',PADL
         FDPRT IOBCSW+3,2,HEX
         FDPRT 'IOBSTART=',PADL
         FDPRT IOBSTART+1,3,HEX
         FDPRT 'IOBCSW=',PADL
         FDPRT IOBCSW,3,HEX
         FDPRT IOBCSW+3,2,HEX,PADL
         FDPRT IOBCSW+5,2,HEX,PADL
         FDPRT '   SYNAD :',NL,PAD
         FDPRT SYNADTXT,DEB
         FDPRT *END
         SPACE 1
MSGMISDD FDPRT 'DD CARD FOR',NL
         FDPRT SYSUT1DD-SYSUT1(R8),L'SYSUT1DD,DEB,PAD
         FDPRT 'IS MISSING OR IS NOT A TAPE'
         FDPRT *END
         SPACE 1
FAILOPEN FDPRT 'OPEN FAILED FOR',NL
         FDPRT SYSUT1DD-SYSUT1(R8),L'SYSUT1DD,DEB,PADL
         FDPRT *END
         SPACE 1
OPTFD    FDCLC SYSUT1DD-SYSUT1(R8),SYSUT1DD,8,BNE=OPTFDOUT
         FDPRT ' INPUT:',NL,PADR
         FDGOTO OPTFDCOM
OPTFDOUT FDPRT 'OUTPUT:',NL,PADR
OPTFDCOM FDPRT 'VOLUME',PAD
         FDPRT UCBVOLI-UCBOB(R3),6,DEBR
         FDPRT 'DSN=',PADL
         FDPRT JFCBDSNM-INFMJFCB+MYJFCB,L'JFCBDSNM,DEB,PADR      91069
         FDCLI SYSUT1TY+2-SYSUT1(R8),UCB3TAPE,BNE=OPTFDOPT       91079
         FDPRT 'FILE='
OPTFDEND FDPRT UCBFSEQ-UCBOB(R3),2,I
         FDTM  DCBOFLGS,DCBOFLWR,BZ=OPTFDOPT  DEN NOT SET FOR INPUT
         FDPRT 'DEN=',PADL
         FDPRT DCBDEN,HEX,PADR
OPTFDOPT FDOPT IND=15                                            91079
         FDOPT NL                                                91079
         FDTM  DCBOPTCD,DCBOPTQ,BZ=OPTFDEBC
         FDPRT 'OPTCD=Q',PAD
OPTFDEBC FDPRT 'RECFM=',PADL
         FDPRT RECFM,DEB
         FDPRT 'LRECL=',PADL
         FDTM  DCBLRECL,X'80',BZ=OPTFDLEN
         FDPRT 'X'
         FDGOTO OPTFDLEX
OPTFDLEN FDPRT DCBLRECL,I
OPTFDLEX FDPRT 'BLKSIZE=',PADL
         FDPRT DCBBLKSI,I
         FDTM  DCBUSASI,DCBBLBP,BZ=OPTFDLOF                      88046
         FDPRT 'BUFOFF=L',PAD                                    88046
         FDGOTO OPTFDLST                                         88046
OPTFDLOF FDCLI DCBBUFOF,0,BE=OPTFDLST                            88046
         FDPRT 'BUFOFF=',PADL                                    88046
         FDPRT DCBBUFOF,I                                        88046
OPTFDLST FDPRT 'EROPT=',PADL                                     88046
         FDTM  DCBEROPT,DCBERABE,BNZ=OPTFDERA                    88046
         FDTM  DCBEROPT,DCBERSKP,BNZ=OPTFDERS                    88046
         FDPRT 'ACCEPT'                                          88046
         FDGOTO OPTFDERO                                         88046
OPTFDERS FDPRT 'SKIP'                                            88046
         FDGOTO OPTFDERO                                         88046
OPTFDERA FDPRT 'ABEND'                                           88046
OPTFDERO FDPRT *END
         SPACE 1                                                 81256
*        TRANSLATE TABLES FROM AND TO ISCII (ASCII SUPERSET)     90358
TRASTOEB TRTAB TYPE=ITOE     ISCII TO EBCDIC                     90358
         SPACE 1                                                 90358
TREBTOAS TRTAB TYPE=ETOI     EBCDIC TO ISCII                     90358
         SPACE 1
         PRINT &PRTSOR
SAVE     DSECT ,
DB       DS    D             WORK AREA
UPD      DS    D             WORK                                81256
ZEROES   DC    F'0'          CONSTANT
@SERVICE DS    A
@PRINTER DS    A
LENREAD  DS    F             LENGTH OF CURRENT BLOCK
TOTALIN  DC    F'0'          INPUT BLOCK COUNT
TOTALBAD DC    F'0'          BLOCKS IN ERROR
TOTALZER DC    F'0'          SHORT BLOCKS READ
TOTALOUT DC    F'0'          BLOCKS WRITTEN
BLOCKOUT DC    F'0'          OUTPUT BLOCKS ON CURRENT TAPE
BLOCKBAD DC    F'0'          2/3       ERROR COUNT
BLOCKZER DC    F'0'          3/3       ZERO LENGTH BLOCK COUNT
TOTALLAB DC    F'0'                                              88046
XLTRANS  DC    0A(0)         TRANSLATE TABLE ADDRESS AND OPTION  81256
XLATEFG  DC    X'00',XL3'00'  TRANSLATE FLAGS/ADDRESS            81256
XLATOE   EQU   X'40'           INPUT ASCII TO EBCDIC
XLETOA   EQU   X'80'           OUTPUT EBCDIC TO ASCII
CONFLAG  DC    X'00'         CONVERSION FLAG                     81256
CFRBLK   EQU   X'80'           REBLOCK OUTPUT BELOW 32K          88036
CFCONC   EQU   X'40'           INPUT DCB EXIT ENTERED (CONCAT)   88046
CFNLAB   EQU   X'20'           REMOVE LABELS FROM DATA           88046
CFNCRLF  EQU   X'10'           REBLOCK; REMOVING CR/LF/FF        90358
CFID4    EQU   X'02'           REMOVE LEADING 4 BYTES FROM BLOCK 81256
CFASC9   EQU   X'01'           9-BIT ASCII TO 8-BIT              81256
INVOL    DC    CL6' '        INPUT VOLSER
RECGO    DC    X'00'         REBLOCK PROCESSING OFFSET           88046
SAVEROPT DC    X'00'         JFCBEROPT FIELD FROM SYSUT1         88046
PTCHFLG  DC    X'00'         PROCESSING FLAG                     90358
PTCHFIO  EQU   X'80'           RECORD WRITTEN                    90358
PTCHFCR  EQU   X'40'           CARRIAGE RETURN FOUND             90358
PTCHFLF  EQU   X'20'           LINE-FEED FOUND                   90358
PTCHFFF  EQU   X'10'           FORM-FEED FOUND                   90358
RETCH    DC    H'0'          RETURN CODE                         88036
OUTVOL   DC    CL6' '        OUTPUT VOLSER
RECFM    DC    CL6' '        EBCDIC RECFM
SYNADTXT DC    CL52' '       SYNAD MESSAGE
         DC    C' '          WORKLINE-1 BLANK                    81256
WORKLINE DC    CL133' '                                          81256
IBUFSIZE DC    F'0'     1/3  SIZE OF STAGING BUFFER              90358
IBUFADDR DC    F'0'     2/3  ADDRESS OF STAGING BUFFER           90358
IBUFUSED DC    F'0'     3/3  NUMBER OF BYTES IN USE              90358
IBUFSAVE DC    10A(0)        SAVE AREA FOR BUILDER               90358
OBUFSIZE DC    F'0'     1/3  SIZE OF STAGING BUFFER              88046
OBUFADDR DC    F'0'     2/3  ADDRESS OF STAGING BUFFER           88046
OBUFUSED DC    F'0'     3/3  NUMBER OF BYTES IN USE              88046
OBUFSAVE DC    10A(0)        SAVE AREA FOR BUILDER               88046
SAVEND   EQU   *
         SPACE 1
BUFFER   DSECT ,
         DS    256XL256      BIG BUFFER
         SPACE 1
         PRINT &PRTSYS                                           81294
CVT      DSECT ,
         CVT   DSECT=YES
         SPACE 1
         IHACDE ,
         SPACE 1
         DCBD  DSORG=PS,DEVD=TA
         SPACE 1
         IEZDEB ,
         SPACE 1                                                 81256
         IKJTCB ,                                                81256
         SPACE 1                                                 81256
         IEZJSCB ,                                               81256
         SPACE 1
         IEFUCBOB ,
         SPACE 1                                                 90358
         IHAPSA ,                                                90358
         SPACE 1                                                 91069
         IHADSAB ,                                               91069
         SPACE 1                                                 91069
         IEFASIOT ,                                              91069
         SPACE 1                                                 91069
IECDSECT DSECT ,                                                 91069
         IECDSECT IOB=NO                                         91069
         SPACE 1
         END
