FINDPROG TITLE 'F I N D P R O G  *** FIND PROGRAM IN LINKLIST OR APF'
***********************************************************************
**   FINDS PROG IN THE CURRENT LINKLIST OR APF LIBRARIES             **
**                                                                   **
**   REWRITTEN FROM LISTPROC, OBTAINED FROM A CBT TAPE               **
***********************************************************************
         SPACE 1                                                GP04079
         MACRO ,                                                GP04079
&NM      MSG   &TEXT                                            GP04079
         GBLA  &ZZMSGNO                                         GP04079
&ZZMSGNO SETA  &ZZMSGNO+1                                       GP04079
&NM      DC    A(MSG&ZZMSGNO,L'MSG&ZZMSGNO)                     GP04079
FINDPROM CSECT ,                                                GP04079
MSG&ZZMSGNO DC C&TEXT                                           GP04079
FINDPROG CSECT ,                                                GP04079
         MEND  ,                                                GP04079
         SPACE 1                                                GP04079
         PUNCH ' ORDER FINDPROG(P) '   MAKE DUMPS EASIER TO READ
         PUNCH ' SETCODE AC(1) '       MAKE IT WORK
         SPACE 1                                                GP04079
         COPY  OPTIONGB                                         GP04079
         SPACE 1                                                GP04079
         SYSPARM LIST=YES                                       GP04079
         SPACE 2                                                GP04079
         PRINT &PRTSOR                                          GP04079
FINDPROG PGMHEAD ZERO31,BASE=(R11,R12),PARM=R2,AM=31,RM=24,BNDRY=PAGE
*OLD*    MVC   SAVECPPL(16),0(R2)  FAILS NON-CP    SAVE CP PARM LIST
         MVC   SAVECPPL(4),0(R2)  PARM
         MVC   ROOTBALL(ROOTPATL),ROOTPAT  INITIALIZE TREE BASE
*DEBUG*  BANDAID INIT
         SERVINIT ,
         SERVLOAD SUBTPUT,@PRINTER,SUBTREE
         PRTOPEN SYSPRINT,OPT=(NOWTO)
         PRTL  '#              APF AND LINK LIST MEMBER SEARCH',TITLE=1
         SUBCALL SUBTREE,('INIT',ROOTBALL),VL,MF=(E,CALLPARM)
         MVI   BLANKS,C' '
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
         MVC   PRINTLNE,BLANKS
         MVC   TUPLAL(TUPSIZE),PATPLAL                          GP04080
         LA    R14,TUDSNAL                                      GP04080
         LA    R15,TUSHRAL                                      GP04080
         LA    R0,ARETDDN                                       GP04080
         O     R0,=X'80000000'  SET END OF LIST BIT
         STM   R14,R0,TUPLAL                                    GP04080
         LA    R14,TUDSNUN                                      GP04080
         LA    R15,TUDALUN                                      GP04080
         LA    R0,TUUNAUN                                       GP04080
         O     R0,=X'80000000'  SET END OF LIST BIT
         STM   R14,R0,TUPLUN                                    GP04080
         L     R2,=A(DLAAHDR_LEN+256*DLAALS_LEN)  MAX LINKLIST SIZE?
         STORAGE OBTAIN,LENGTH=(R2),LOC=ANY
         STM   R1,R2,@WORKBUF     SAVE FOR LATER
         MVC   DESNVAL,BLANKS
*--------------------------------------------------------------
* EXEC PARM: L'BUFFER;TEXT
*--------------------------------------------------------------
         ICM   R2,15,CPPLCBUF          GET CBUF PTR
         BP    CPINVOKE      INVOKED AS COMMAND PROCESSOR
         LH    R10,0(,R2)
         LA    R9,2(,R2)     SKIP LENGTH
         B     COMTEXT
EXMVCMEM OC    DESNVAL(0),0(R9)
*--------------------------------------------------------------
* CP PARM: L'BUFFER;L'COMMAND;COMMAND+1 SPACE; OPERANDS
*--------------------------------------------------------------
CPINVOKE LH    R3,0(,R2)               L'BUFFER
         LA    R10,0(R2,R3)             END BUFFER
         LA    R9,4(,R2)               SKIP LENGTH FIELDS
         LH    R3,2(,R2)               L'COMMAND
         ALR   R9,R3                   1ST OPERAND POSITION     GP04079
         SR    R10,R9                  L'OPERAND
COMTEXT  LTR   R10,R10
         BNP   NOPARM                                           GP04079
HAVEINPT CH    R10,=H'8'
         BNH   USEASIS
         LA    R10,8
USEASIS  BCTR  R10,0
         EX    R10,EXMVCMEM
         STLINENO LINE=1
         MVC   PRINTLNE,BLANKS
         MVC   PRTCNTRL,=C'LNK#'
         MVC   PRTCNTRA,=C'  APF#'
         MVC   PRTDSNM(20),=C'SEARCHING FOR:  ===>'
         MVC   PRTDSNM+21(08),DESNVAL
         MVC   PRTDSNM+30(4),=C'<==='
         MVC   PRTMAIN,=C'ALIAS OF'
         MVC   PRTTTR,=C'TTTT.RR'
*NO-FUN  MVC   PRTSIZE+L'PRTSIZE-4(4),=C'SIZE'
         MVCIN PRTSIZE+L'PRTSIZE-4(4),=C'EZIS'+3  BECAUSE I CAN
         #TPUT PRINTLNE,L'PRINTLNE-1,NOTSO=PRT
*---------------------------------------------------------------------*
*   GET THE LIST OF LINK LIBRARY NAMES                                *
*---------------------------------------------------------------------*
         PUSH  USING
SWAPLNK  L     R2,@WORKBUF
         LA    R3,#WORKBUF
         CSVDYNL REQUEST=LIST,ANSAREA=(R2),ANSLEN=(R3),                *
               LISTLNKNAME==CL16'CURRENT',                             *
               RETCODE=RETCODE,RSNCODE=RSNCODE,MF=(E,MYDYNL,COMPLETE)
         CH    R15,=AL2(CSVDYNLRC_WARN)  DID IT WORK ?
         BL    BUILDLNK
         BH    QUITMSG
         USING DLAAHDR,R2    DECLARE HEADER MAPPING
         L     R3,DLAAHTLEN  GET LENGTH REQUIRED
         LM    R1,R2,@WORKBUF  GET OLD BUFFER
         STORAGE RELEASE,ADDR=(1),LENGTH=(R2)  FREE OLD
         LR    R2,R3         FOR STM
         STORAGE OBTAIN,LENGTH=(R2),LOC=ANY
         STM   R1,R2,@WORKBUF     SAVE FOR LATER
         B     SWAPLNK
BUILDLNK L     R4,DLAAH#LS   NUMBER OF ENTRIES
         LTR   R4,R4         ANY ?
         BNP   SWAPAPF       NO; SKIP
         L     R5,DLAAHFIRSTLSADDR  POINT TO FIRST ENTRY
         USING DLAALS,R5     DECLARE IT
         LH    R4,DLAALS#DS  GET NUMBER OF DATA SETS
         L     R5,DLAALSFIRSTDSADDR  POINT TO FIRST DS ENTRY
         USING DLAADS,R5     DECLARE ONE ENTRY
         SR    R6,R6         ORDINAL
*---------------------------------------------------------------------*
*   BUILD KEY OF ENTRY (DSN/VOL) AND GET OR BUILD CELL                *
*---------------------------------------------------------------------*
LOOPLNK  LA    R3,TEMPREC    LOCAL DS RECORD
         USING HOLDSECT,R3   AND DECLARE IT
         MVC   HOLDSECT(HOLDSIZE),BLANKS
         LA    R6,1(,R6)
         STH   R6,HOLDCNTL   SET ORDINAL
         XC    HOLDCNTA,HOLDCNTA
         MVC   HOLDFLGL,DLAADSFLAGS  SAVE FLAGS
         MVI   HOLDOWN,C'L'  FROM LINK LIST
         MVI   HOLDOWN+1,C' '  NO APF, YET
         LH    R15,DLAADSNAMELEN  GET LENGTH OF DSN
         BCTR  R15,0
         EX    R15,EXMVCLNK  MOVE DSN
         MVC   HOLDVOLS,DLAADSVOLID  COPY SERIAL
         SUBCALL SUBTREE,('FIND',ROOTBALL,TEMPREC),VL,MF=(E,CALLPARM)
         BXH   R15,R15,MAKELNK  NOT FOUND; BUILD NEW
         LR    R3,R1         WRITE WARNING ABOUT DUPLICATE
         MVC   PRINTLNE,BLANKS
         MVC   PRINTLNE+02(06),HOLDVOLS  VOLSER
         MVC   PRINTLNE+10(44),HOLDDSNM  DATASET
         MVC   PRINTLNE+55(24),=C'*** DUPLICATE LNKLST ***'
         #TPUT PRINTLNE,79,NOTSO=PRT
         MVC   PRINTLNE,BLANKS
         MVC   PRINTLNE+4(7),=C'ENTRY #'
         MVC   PRINTLNE+11(06),=X'402020202120'
         CVD   R6,DB
         ED    PRINTLNE+11(06),DB+5
         MVC   PRINTLNE+18(10),=C'DUPLICATES'
         MVC   PRINTLNE+28(06),=X'402020202120'
         LH    R0,HOLDCNTL
         CVD   R0,DB
         ED    PRINTLNE+28(06),DB+5
         #TPUT PRINTLNE,34,NOTSO=PRT
         OICC  4             SET DUPLICATE WARNING
         B     BUMPLNK
*---------------------------------------------------------------------*
*   GET A NEW CELL AND COMPLETE OTHER DATA                            *
*---------------------------------------------------------------------*
MAKELNK  INC   NUMCELL       COUNT RESULTS
         SUBCALL SUBTREE,('UPD',ROOTBALL,TEMPREC),VL,MF=(E,CALLPARM)
BUMPLNK  L     R5,DLAADSNEXTADDR
         BCT   R4,LOOPLNK    DO NEXT
         B     SWAPAPF
EXMVCLNK MVC   HOLDDSNM(0),DLAADSNAME MOVE DSN
         POP   USING
*---------------------------------------------------------------------*
*   GET THE LIST OF APF LIBRARY NAMES                                 *
*---------------------------------------------------------------------*
         PUSH  USING
SWAPAPF  L     R2,@WORKBUF
         LA    R3,#WORKBUF
         CSVAPF REQUEST=LIST,ANSAREA=(R2),ANSLEN=(R3),                 *
               RETCODE=RETCODE,RSNCODE=RSNCODE,MF=(E,MYAPF,COMPLETE)
         CH    R15,=AL2(CSVAPFRC_WARN)  DID IT WORK ?
         BL    BUILDAPF
         BH    QUITMSG
         USING APFHDR,R2     DECLARE HEADER MAPPING
         L     R3,APFHTLEN   GET LENGTH REQUIRED
         LM    R1,R2,@WORKBUF  GET OLD BUFFER
         STORAGE RELEASE,ADDR=(1),LENGTH=(R2)  FREE OLD
         LR    R2,R3         FOR STM
         STORAGE OBTAIN,LENGTH=(R2),LOC=ANY
         STM   R1,R2,@WORKBUF     SAVE FOR LATER
         B     SWAPAPF
BUILDAPF L     R4,APFH#REC   NUMBER OF ENTRIES
         LTR   R4,R4         ANY ?
         BNP   DONEAPF       NO; SKIP
         L     R5,APFHOFF    OFFSET TO FIRST ENTRY
         LA    R5,APFHDR(R5) FIRST ENTRY
         USING APFE,R5       DECLARE ONE ENTRY
         SR    R6,R6         ORDINAL
*---------------------------------------------------------------------*
*   BUILD KEY OF ENTRY (DSN/VOL) AND GET OR BUILD CELL                *
*---------------------------------------------------------------------*
LOOPAPF  LA    R3,TEMPREC
         USING HOLDSECT,R3   AND DECLARE IT
         MVC   HOLDSECT(HOLDSIZE),BLANKS
         LA    R6,1(,R6)
         STH   R6,HOLDCNTA   SET ORDINAL
         XC    HOLDCNTL,HOLDCNTL
         MVI   HOLDOWN,C' '  NOT FROM LINK LIST
         MVI   HOLDOWN+1,C'A'  FROM APF
         MVC   HOLDFLGA,APFEFLAGS    SAVE FLAGS
         SR    R15,R15
         IC    R15,APFEDSLEN  GET LENGTH OF DSN
         BCTR  R15,0
         EX    R15,EXMVCAPF  MOVE DSN
         MVC   HOLDVOLS,APFEVOLUME   COPY SERIAL
         SUBCALL SUBTREE,('FIND',ROOTBALL,TEMPREC),VL,MF=(E,CALLPARM)
         LTR   R3,R1         COPY RECORD ADDRESS
         BZ    NEEDAPF       NOT FOUND; BUILD NEW
*---------------------------------------------------------------------*
*   ENTRY FOUND; COMPLETE APF DATA OR REJECT DUPLICATE                *
*---------------------------------------------------------------------*
         CLI   HOLDOWN+1,C'A'  DUPLICATE APF ENTRY ?
         BE    DUPLAPF       YES
         MVC   TEMPREC,0(R1)  MOVE TO MY AREA
         LA    R3,TEMPREC
         MVI   HOLDOWN+1,C'A'  SET APF ENTRY
         STH   R6,HOLDCNTA   SET ORDINAL
         MVC   HOLDFLGA,APFEFLAGS    SAVE FLAGS
         B     COMMAPF
         SPACE 1
DUPLAPF  MVC   PRINTLNE,BLANKS
         MVC   PRINTLNE+02(06),HOLDVOLS  VOLSER
         MVC   PRINTLNE+10(44),HOLDDSNM  DATASET
         MVC   PRINTLNE+55(24),=C'*** DUPLICATE APFLST ***'
         #TPUT PRINTLNE,79,NOTSO=PRT
         MVC   PRINTLNE,BLANKS
         MVC   PRINTLNE+4(7),=C'ENTRY #'
         MVC   PRINTLNE+11(06),=X'402020202120'
         CVD   R6,DB
         ED    PRINTLNE+11(06),DB+5
         MVC   PRINTLNE+18(10),=C'DUPLICATES'
         MVC   PRINTLNE+28(06),=X'402020202120'
         LH    R0,HOLDCNTA
         CVD   R0,DB
         ED    PRINTLNE+28(06),DB+5
         #TPUT PRINTLNE,34,NOTSO=PRT
         OICC  4             SET DUPLICATE WARNING
         B     COMMAPF
*---------------------------------------------------------------------*
*   BUILD ENTRY FOR NEW KEY, AND FILL WITH CURRENT DATA               *
*---------------------------------------------------------------------*
NEEDAPF  INC   NUMCELL       UP CELL COUNTER
         SPACE 1
COMMAPF  SUBCALL SUBTREE,('UPD',ROOTBALL,TEMPREC),VL,MF=(E,CALLPARM)
         AH    R5,APFELEN    POINT TO NEXT ENTRY
         BCT   R4,LOOPAPF    DO NEXT
         B     DONEAPF
EXMVCAPF MVC   HOLDDSNM(0),APFEDSNAME MOVE DSN
         POP   USING
*---------------------------------------------------------------------*
*   SAVE THE PDS INFORMATION FOR LATER                                *
*---------------------------------------------------------------------*
DONEAPF  LM    R1,R2,@WORKBUF
         LTR   R1,R1
         BZ    DONEFREE
         STORAGE RELEASE,ADDR=(1),LENGTH=(R2)
         XC    @WORKBUF(8),@WORKBUF
DONEFREE SUBCALL SUBTREE,('LIST',ROOTBALL),VL,MF=(E,CALLPARM)
         BXH   R15,R15,PGMEXIT
         B     PRTLOOP2
PRTLOOP  SUBCALL SUBTREE,('NEXT',ROOTBALL),VL,MF=(E,CALLPARM)
         BXH   R15,R15,PGMEXIT   DO NEXT ENTRY
         USING HOLDSECT,R10
PRTLOOP2 LR    R10,R1        LOAD RECORD ADDRESS
         MVC   PRINTLNE,BLANKS
         CLI   HOLDOWN,C'L'  LNKLST ENTRY ?
         BNE   PRTLOOP3      NO; LEAVE BLANK
         MVC   PRTCNTRL(04),=X'40202120'
         LH    R0,HOLDCNTL
         CVD   R0,DB
         ED    PRTCNTRL(04),DB+6
*DEFER*  MVC   PRTOWNL,HOLDOWN  LNKLIST INDICATOR
PRTLOOP3 CLI   HOLDOWN+1,C'A'  APFLST ENTRY ?
         BNE   PRTLOOP4      NO; LEAVE BLANK
         MVC   PRTCNTRA(06),=X'402020202120'
         LH    R0,HOLDCNTA
         CVD   R0,DB
         ED    PRTCNTRA(06),DB+5
*DEFER*  MVC   PRTOWNA,HOLDOWN+1  APF LIST INDICATOR
PRTLOOP4 MVC   PRTVOLS,HOLDVOLS   VOLSER
         MVC   PRTDSNM,HOLDDSNM   DATASET
*---------------------------------------------------------------------*
*   ALLOCATE THE PDS                                                  *
*---------------------------------------------------------------------*
DYNALOC  LA    R4,RB                   SVC 99 REQUEST BLOCK
         USING S99RB,R4                MAP THE RB
         ST    R4,RBP                  STORE RB ADDRESS IN POINTER LIST
         OI    RBP,X'80'               FLAG LAST POINT
         XC    S99RB(S99RBLEN),S99RB   CLEAR RB
         MVI   S99RBLN,S99RBLEN        STORE LENGTH OF RB
         MVI   S99VERB,S99VRBAL        INDICATE ALLOCATE
         LA    R5,TUPLAL               TEXT UNIT POINTER LIST ADDRESS
         ST    R5,S99TXTPP             STORE IT IN RB
         MVC   ADSNAME,HOLDDSNM        DATASET NAME
         LA    R1,RBP
         DYNALLOC
         LTR   R15,R15
         BZ    GOODA
         CVD   R15,DB
         MVC   PRTMSG(15),=C'DYNALLOC FAILED'
         MVC   PRTMSG+15(04),=X'40202120'
         ED    PRTMSG+15(04),DB+6
         MVI   PRTMSG+19,C'('
         UNPK  PRTMSG+20(5),S99ERROR(3)
         TR    PRTMSG+20(4),HEXTRTAB
         MVI   PRTMSG+24,C')'
         #TPUT PRINTLNE,PRTMSG+25-PRINTLNE,NOTSO=PRT
         CLI   HOLDOWN,C'L'  LNKLIST ENTRY ?
         BNE   PRTLOOP       NO
         OICC  8             YES; ERROR
         B     PRTLOOP
*---------------------------------------------------------------------*
*   BUILD BPAM DCB, OPEN IT, AND USE DESERV FOR MEMBER INFORMATION    *
*---------------------------------------------------------------------*
GOODA    MVC   SYS00001(DYNDCBL),PATDCB  REFRESH THE DCB        GP04080
         MVC   DCBDDNAM-IHADCB+SYS00001(8),ADDNAME              GP04080
         MVC   DELNAME,ADDNAME
         OI    DCBOLIST,X'80'   SET END OF LIST BIT             GP04080
         OPEN  (SYS00001,(INPUT)),MF=(E,DCBOLIST)               GP04080
         TM    DCBOFLGS-IHADCB+SYS00001,DCBOFOPN  DID IT WORK ?
         BZ    OPENFAIL      NO
         XC    MYDESL(MYDESN-MYDESL),MYDESL  CLEAR RETURN CODES
         LA    R2,MYDESL
         USING DESL,R2
         LA    R0,MYDESN     POINT TO NAME LENGTH
         ST    R0,DESL_NAME_PTR  PLACE INTO LIST
         LOCBYTE DESNVAL,8   DETERMINE MEMBER NAME LENGTH
         SR    R15,R14
         STH   R15,MYDESN+DESN_LEN-DESN  SET NAME LENGTH
*        DESERV FUNC=GET,AREA=(DSRVWORK,DSRVWLEN),                     *
               BYPASS_LLA=YES,CONN_INTENT=HOLD,CONN_ID=DB,             *
               DCB=SYS00001,NAME_LIST=(MYDESL,1),                      *
               MF=(E,MYDSERV,COMPLETE)
         PUSH  PRINT
         PRINT OFF
         DESERV FUNC=GET,AREA=(DSRVWORK,DSRVWLEN),                     *
               BYPASS_LLA=YES,CONN_INTENT=HOLD,CONN_ID=DB,             *
               DCB=SYS00001,NAME_LIST=(MYDESL,1),                      *
               MF=(E,MYDSERV,COMPLETE)
         POP   PRINT
         LR    R5,R15
         DESERV FUNC=RELEASE,CONN_ID=DB,                               *
               DCB=SYS00001,MF=(E,MYDSERV,COMPLETE)
         LTR   R5,R5
         BNZ   NOTFOUND
*---------------------------------------------------------------------*
*   FORMAT BASIC MODULE INFORMATION SIZE / TTR / MAIN NAME IF ALIAS   *
*---------------------------------------------------------------------*
         L     R2,DESL_SMDE_PTR
         USING SMDE,R2       DECLARE RESULT HEADER
         TM    SMDE_FLAG,SMDE_FLAG_LMOD  MODULE ?
         BZ    NODATA        OOPS
         LH    R15,SMDE_PMAR_OFF  GET OFFSET TO PMAR
         AR    R15,R2
         USING PMAR,R15
         ICM   R0,15,PMAR_STOR
         CVD   R0,DB
         MVC   PRTSIZE,=X'402020206B2020206B202120'
         ED    PRTSIZE,DB+3
         UNPK  PRTTTR+1(7),SMDE_MLT(4)
         TR    PRTTTR+1(6),HEXTRTAB
         MVI   PRTTTR+L'PRTTTR,C' '
         MVC   PRTTTR(4),PRTTTR+1
         MVI   PRTTTR+4,C'.'      MAKE TTR PRETTY
         TM    SMDE_FLAG,SMDE_FLAG_ALIAS  IS IT AN ALIAS ?
         BZ    GENTPUT       NO; DONE
         SR    R15,R15
         ICM   R15,3,SMDE_PNAME_OFF  PRIMARY NAME POINTER ?
         BZ    WIDOWED
         AR    R15,R2        RELOCATE
         USING SMDE_PNAME,R15
         LH    R14,SMDE_PNAME_LEN
         MIN   R14,=AL2(L'PRTMAIN),TYPE=H
         SH    R14,=H'1'
         BM    WIDOWED       SKIP
         EX    R14,EXMVCMAI  MOVE MAIN NAME
         B     GENTPUT
WIDOWED  MVC   PRTMAIN(11),=C'**WIDOWED**'
         OICC  4             SET WARNING
         B     GENTPUT
EXMVCMAI MVC   PRTMAIN(0),SMDE_PNAME_VAL
         DROP  R2,R15
         SPACE 1
NODATA   MVC   PRTMSG(33),=C'>>> NOT IN LOAD-MODULE FORMAT <<<'
         OICC  8             ERROR
         B     GENTPUT
         SPACE 1
NOTFOUND MVC   PRTMSG(09),=C'NOT FOUND'
         B     GENTPUT
         SPACE 1
OPENFAIL MVC   PRTMSG(11),=C'OPEN FAILED'
         OICC  8
*NEXT*   B     GENTPUT
         SPACE 1
GENTPUT  #TPUT PRINTLNE,L'PRINTLNE-1,NOTSO=PRT
*
*        CLOSE DE-ALLOCATE
*
CLOSEPDS CLOSE MF=(E,DCBOLIST)                                  GP04080
DEALOC   XC    S99RB(S99RBLEN),S99RB   CLEAR RB
         MVI   S99RBLN,S99RBLEN        STORE LENGTH OF RB
         MVI   S99VERB,S99VRBUN        INDICATE UNALLOCATE
         LA    R5,TUPLUN               TEXT UNIT POINTER LIST ADDRESS
         ST    R5,S99TXTPP             STORE IT IN RB
         MVC   DDSNAME,HOLDDSNM
         LA    R1,RBP
         DYNALLOC
         LTR   R15,R15
         BZ    PRTLOOP
         CVD   R15,DB
         MVC   PRTMSG(15),=C'DE-ALLOC FAILED'
         MVC   PRTMSG+15(04),=X'40202120'
         ED    PRTMSG+15(04),DB+6
         MVI   PRTMSG+19,C'('
         UNPK  PRTMSG+20(5),S99ERROR(3)
         TR    PRTMSG+20(4),HEXTRTAB
         MVI   PRTMSG+24,C')'
         #TPUT PRINTLNE,PRTMSG+25-PRINTLNE,NOTSO=PRT
         #TPUT PRINTLNE,L'PRINTLNE-1,NOTSO=PRT
         B     PRTLOOP
         SPACE 1
QUITMSG  MVC   PRINTLNE,BLANKS                                  GP04079
         MVC   PRINTLNE+00(08),=C'CSV CALL'                     GP04079
         MVC   PRINTLNE+10(29),=C'       FAILED: R15: 00000000 '
         UNPK  PRINTLNE+30(09),RETCODE(5)                       GP04079
         TR    PRINTLNE+30(08),HEXTRTAB                         GP04079
         MVI   PRINTLNE+38,C' '                                 GP04079
         #TPUT PRINTLNE,38,NOTSO=PRT                            GP04079
         B     PGMEXIT
         SPACE 1
NOPARM   MVC   PRINTLNE+10(20),=C'MEMBER NAME REQUIRED'
         #TPUT PRINTLNE,L'PRINTLNE-1,NOTSO=PRT
         MVICC 16
         B     PGMEXIT
         SPACE 1
PGMEXIT  LM    R1,R2,@WORKBUF
         LTR   R1,R1
         BZ    PGMEXITD
         STORAGE RELEASE,ADDR=(1),LENGTH=(R2)
PGMEXITD ICM   R15,15,@SUBTREE  WAS TREE ROUTINE LOADED ?
         BZ    PGMEXITX      NO
         SUBCALL (R15),('END',ROOTBALL),VL,MF=(E,CALLPARM)
PGMEXITX SERVTERM ,
         PGMEXIT RC=RETCODE                                     GP04079
         SPACE 2                                                GP04079
         LTORG ,
         TITLE '*** WORKAREAS, CONSTANTS, AND MAPPING MACROS ***'
         PRINT &PRTSYS                                          GP04079
SYSPRINT PRTWORK SYSPRINT,SYSTERM,TITLE=3
HEXTAB   DC    C'0123456789ABCDEF'
HEXTRTAB EQU   HEXTAB-C'0'
PATDCB   DCB   DDNAME=SYS00001,MACRF=R,DSORG=PO                 GP04080
         SPACE 2
PATPLAL  DC    A(PATDSNAL)                                      GP04080
         DC    X'00',AL3(PATSHRAL)                              GP04080
         DC    X'80',AL3(PATURDDN)                              GP04080
PATDSNAL DC    AL2(DALDSNAM)                                    GP04080
         DC    AL2(1)
         DC    AL2(44)
PATADSN  DC    CL44' '                                          GP04080
PATSHRAL DC    AL2(DALSTATS)                                    GP04080
         DC    AL2(1)
         DC    AL2(1)
         DC    X'08'
PATURDDN DC    AL2(DALRTDDN)                                    GP04080
         DC    AL2(1)
         DC    AL2(8)
PATRDDN  DC    CL8' '                                           GP04080
PATPLUN  DC    A(PATDSNUN)             DEALLOCATE DDNAME        GP04080
         DC    A(PATUNLUN)             DEALLOCATE DDNAME        GP04080
         DC    X'80',AL3(PATUNAUN)     UNALLOCATE ANYWAY        GP04080
PATDSNUN DC    AL2(DALDSNAM)           DDNAME TEXT UNIT         GP04080
         DC    AL2(1)                  PARMS = 1
         DC    AL2(44)                 LENGTH = 8
PATUNDSN DC    CL44' '                 DSNAME                   GP04080
PATUNLUN DC    AL2(DALDDNAM)                                    GP04080
         DC    AL2(1)
         DC    AL2(8)
PATDELDD DC    CL8' '                                           GP04080
PATUNAUN DC    AL2(DUNUNALC)           UNALLOCATE               GP04080
         DC    AL2(0)                  PARMS = 0
         SPACE 2
HOLDSECT DSECT ,
HOLDDSNM DC    CL44' '       DATA SET NAME
HOLDVOLS DC    CL6' '        VOLUME SERIAL
HOLDKEY  EQU   HOLDDSNM,*-HOLDDSNM
HOLDCNTL DC    AL2(0)        LNKLIST SEQUENCE COUNTER
HOLDCNTA DC    AL2(0)        APFLIST SEQUENCE COUNTER
HOLDFLGL DC    X'00'         FLAGS FROM LINKLIST
HOLDFLGA DC    X'00'         FLAGS FROM APF LIST
HOLDOWN  DC    CL2'LA'       L - LINKLIST    A - APF LIST
HOLDSIZE EQU   *-HOLDSECT
         SPACE 2
FINDPROG CSECT ,
ROOTPAT  SERVTREE PFX=PATR,KEYLEN=L'HOLDKEY,RECLEN=HOLDSIZE,           *
               RECNUM=500
ROOTPATL EQU   *-ROOTPAT
         SPACE 2
SAVE     DSECT ,                                                GP04079
DB       DS    D
WORK     DS    D
         SERVDEFS ,          SERVICE AREA                       GP04079
SAVECPPL DS    0F     ** TSO COMMAND PROCESSOR PARAMETER LIST **
CPPLCBUF DS    A      ADDRESS OF COMMAND INPUT BUFFER
CPPLUPT  DS    A                 USER PROFILE TABLE
CPPLPSCB DS    A                 PROTECTED STEP CONTROL BLOCK
CPPLECT  DS    A                 ENVIRONMENT CONTROL TABLE
@WORKBUF DS    A             ADDRESS OF WORK BUFFER
#WORKBUF DS    F             SIZE OF WORK BUFFER
NUMCELL  DS    F             CELLS USED
BLANKS   DS    CL132
PRINTLNE DS    CL132
         ORG   PRINTLNE
*RTOWNL  DS    0C            L FOR LINKLIST ENTRY
PRTCNTRL DS    CL4           LNK CONCATENATION COUNTER
*RTOWNA  DS    0C            A FOR APF ENTRY
PRTCNTRA DS    CL6,C         APF CONCATENATION COUNTER
PRTVOLS  DS    CL6,C         VOLUME SERIAL
PRTDSNM  DS    CL44,C        DATA SET NAME
PRTMSG   DS    0C            ASSORTED LENGTHS
PRTTTR   DS    C'TTTT.RR',C  LOCATION
PRTSIZE  DS    C' NNN,NNN,NNN',CL2  SIZE IN BYTES
PRTMAIN  DS    CL8           FOR ALIAS, NAME OF MAIN MEMBER
         ORG   ,
         SPACE 2
DCBOLIST OPEN  (SYS00001,INPUT),MF=L                            GP04080
SYS00001 DCB   DDNAME=SYS00001,MACRF=R,DSORG=PO                 GP04080
DYNDCBL  EQU   *-SYS00001                                       GP04080
         SPACE 2
         CSVDYNL MF=(L,MYDYNL)
         CSVAPF MF=(L,MYAPF)
         SPACE 2
*   DESERV GET INPUT/OUTPUT REQUEST AREA
         DS    0F
MYDESL   DS    XL(DESL_OLD_NAME_PTR+4-DESL)  DESL AREA
MYDESN   DS    H             LENGTH OF MEMBER NAME, FOLLOWED BY
DESNVAL  DS    CL8             MEMBER NAME
         SPACE 2
ROOTBALL SERVTREE PFX=ROOT,KEYLEN=L'HOLDKEY,RECLEN=HOLDSIZE,           *
               RECNUM=500
         SPACE 2
TEMPBALL SERVTREE PFX=TEMP,KEYLEN=L'HOLDKEY,RECLEN=HOLDSIZE,RECNUM=1
         SPACE 2
RBP      DS    A                                                GP04080
RB       DS    CL(S99RBEND-S99RB)
S99RBLEN EQU   S99RBEND-S99RB
         SPACE 2                                                GP04080
TUPLAL   DC    A(TUDSNAL)                                       GP04080
         DC    X'00',AL3(TUSHRAL)                               GP04080
         DC    X'80',AL3(ARETDDN)                               GP04080
TUDSNAL  DC    AL2(DALDSNAM)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(44)                                          GP04080
ADSNAME  DC    CL44' '                                          GP04080
TUSHRAL  DC    AL2(DALSTATS)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(1)                                           GP04080
         DC    X'08'                                            GP04080
ARETDDN  DC    AL2(DALRTDDN)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(8)                                           GP04080
ADDNAME  DC    CL8' '                                           GP04080
TUPLUN   DC    A(TUDSNUN)              DEALLOCATE DDNAME        GP04080
         DC    A(TUDALUN)              DEALLOCATE DDNAME        GP04080
         DC    X'80',AL3(TUUNAUN)      UNALLOCATE ANYWAY        GP04080
TUDSNUN  DC    AL2(DALDSNAM)           DDNAME TEXT UNIT         GP04080
         DC    AL2(1)                  PARMS = 1                GP04080
         DC    AL2(44)                 LENGTH = 8               GP04080
DDSNAME  DC    CL44' '                 DSNAME                   GP04080
TUDALUN  DC    AL2(DALDDNAM)                                    GP04080
         DC    AL2(1)                                           GP04080
         DC    AL2(8)                                           GP04080
DELNAME  DC    CL8' '                                           GP04080
TUUNAUN  DC    AL2(DUNUNALC)           UNALLOCATE               GP04080
         DC    AL2(0)                  PARMS = 0                GP04080
TUPSIZE  EQU   *-TUPLAL                                         GP04080
         SPACE 1
MYDSERV  DESERV FUNC=GET,AREA=(DSRVWORK,DSRVWLEN),MF=L,                *
               BYPASS_LLA=YES,CONN_INTENT=HOLD,CONN_ID=DB,             *
               DCB=SYS00001,NAME_LIST=(MYDESL,1)
         SPACE 2
DSRVWORK DS    XL1024
DSRVWLEN EQU   *-DSRVWORK
SAVEEND  EQU   *                                                GP04079
         SPACE 2
         PRINT &PRTSYS                                          GP04079
         CVT   DSECT=YES,PREFIX=YES
         IHAASVT
         IHAASCB LIST=YES
         IHAASXB LIST=YES
         IKJTSB   LIST=YES,EXT=NO
         IKTTSBX
         IKJTCB LIST=YES
         IEZJSCB
         IKJPSCB
         IEFJSSIB                  SSIB DSECT
         IEFAJCTB                  JCT DSECT
         IHAACEE ,
CSCB     DSECT
         IEECHAIN
         IEFJESCT
         IEFZB505 LOCEPAX=YES
TIOT     DSECT
         IEFTIOT1
JFCB     DSECT
      IEFJFCBN LIST=YES
         IHAPDS PDSBLDL=YES
         DCBD  DSORG=PO
         IEFZB4D0
         IEFZB4D2
         SPACE 2
         PRINT &PRTMAC
         CSVAPFAA ,
         SPACE 2
         CSVDLAA ,
         SPACE 2
         IGWSMDE ,
         END   FINDPROG
