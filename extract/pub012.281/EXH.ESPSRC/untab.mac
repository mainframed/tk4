UNTAB    TITLE 'U N T A B   ***   REMOVE TABS FROM TEXT'
         PUNCH ' ORDER UNTAB(P) '
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         EJECT ,
         PRINT &PRTSOR
***********************************************************************
*                                                                     *
*        COPYRIGHT 2000,2004  EXPERT SYSTEM PROGRAMMING               *
*                        176 OLD STAGE COACH ROAD                     *
*                        BRADFORD, VT 05033-8844                      *
*                  gerhard@postpischil@com                            *
*                                                                     *
*                    ALL RIGHTS RESERVED                              *
*                                                                     *
***********************************************************************
*                                                                     *
*   THIS UTILITY READS A SEQUENTIAL DATA SET AND REPLACES TABS WITH   *
*   THE APPROPRIATE NUMBER OF BLANKS.                                 *
*   (TABS ARE ASSUMED EVERY 8 BYTES)                                  *
*                                                                     *
*   WHEN THE CALLER SPECIFIES THE 'NL' PARM OPTION, THEN THE NEW LINE *
*   SYMBOL (X'25') IS DISCARDED, AND A NEW RECORD IS BEGUN.           *
*                                                                     *
*   RECORDS EXCEEDING THE OUTPUT LENGTH RESULTS IN A USER 123 ABEND,  *
*   UNLESS PARM='WRAP' (MULTI-LINE OUTPUT) OR PARM='TRUNC' IS USED.   *
*                                                                     *
*   INPUT FILE:  SYSIN                                                *
*   OUTPUT FILE: SYSPUNCH                                             *
*     The output data size is the largest acceptable size processed.  *
*     Larger input requires PARM=WRAP (and user finagling of records, *
*     or PARM=TRUNC to truncate records.                              *
*     Input records may be any size when using ASCII NL or LFCR, but  *
*     generally should be < 256.                                      *
*                                                                     *
*   OPTIONAL LISTING: SYSPRINT                                        *
*                                                                     *
***********************************************************************
         SPACE 1
UNTAB    PGMHEAD ZERO31,BASE=R12,PARM=R6,BNDRY=PAGE,AM=24,RM=24
         LA    R1,HOLDBUFF                                      GP04090
         ST    R1,@HOLDBUF   SAVE HOLD BUFFER ADDRESS           GP04090
         ZAP   DECSEQ,=P'0'                                     GP13076
         SPACE 1
*DEBUG*  BANDAID INIT                                           GP04090
         SERVINIT ,
         SERVLOAD @INPREAD,@PRINTER,SUBSTRIP                    GP13076
         SPACE 1
         MVC   TRANTAB,TRANPAT  MAKE TRANSLATION TABLE
         SPACE 1
DEFPARM  PRTOPEN SYSPRINT,OPT=NOWTO
         PRTOPEN SYSPUNCH,OPT=ABEND,DEV=2  OPTIONAL PUNCH
         LR    R1,R0         COPY RETURN WORK AREA ADDRESS      GP04090
         USING PWWORK,R1     FEEDBACK WORK AREA IN R0           GP04090
         LH    R0,PWWIDTH    GET MAXIMUM DATA WIDTH             GP04090
         ST    R0,OUTLEN     SAVE FOR LENGTH CHECKING           GP04090
         L     R0,=A(SOCHECK-OUTLINE-255)                       GP13076
         ST    R0,OUTMAX     MAXIMUM CONSTRUCTION LENGTH        GP13076
         DROP  R1                                               GP04090
         PRTF  '#TAB REPLACEMENT UTILITY',TITLE=1
         INPOPEN SYSIN,OPT=ABEND
         SPACE 1
*---------------------------------------------------------------------*
*   PROCESS THE PARM FIELD (NL, VER, RELAY)                           *
*---------------------------------------------------------------------*
         PARMLOAD R8,PTR=R6                                     GP13076
         LTR   R9,R9         ANY ?
         BZ    ENDPARM       NO; ASSUME DEFAULTS
         CH    R9,=Y(L'LINE)  TOO LONG?
         BH    BADPARM       SO SORRY
         LA    R0,LINE       POINT TO PARM LINE
         LA    R1,L'LINE     MAX SIZE SUPPORTED
         L     R15,=X'40000000'  SET FOR BLANK FILL
         MVCL  R0,R14        BLANK OUTPUT LINE
         BCTR  R9,0          SET FOR EXECUTE                    GP13076
         EX    R9,MVCLINE    MOVE TO LINE                       GP13076
         LA    R5,LINE       POINT TO LINE
         LA    R3,LINE+L'LINE-1  END
PARMLOOK BLOOK T=PARMTAB,R=R3,Y=R3  DO VERB LOOK-UP
         CR    R5,R3         BUFFER EXHAUSTED?
         BH    ENDPARM       YES; BEGIN PROCESSING
BADPARM  PRTF  '**** INVALID PARM FIELD ****',CC=NO
         MVICC 16            SET ERROR                          GP04090
         B     ENDTERM       AND EXIT                           GP04090
MVCLINE  MVC   LINE(0),0(R8)  MOVE USER'S PARM FIELD            GP13076
         SPACE 1
PARMTAB  BTAB  'VERIFY',SETVER,BASE=*   PAIRED INPUT
         BTAB  'VER',SETVER    ALTERNATE FORM
         BTAB  'FOLD',SETFOLD   MAKE UPPER CASE
         BTAB  'UPPER',SETFOLD  MAKE UPPER CASE
         BTAB  'RELAY',SETREL   SET RELAY MODE
         BTAB  'NL',SETNL    RECOMBINE LINES                    GP04090
         BTAB  'NEWLINE',SETNL    RECOMBINE LINES               GP04090
         BTAB  'TRUNCATE',SETRUNC TRUNCATE EXCESSIVE LINES      GP04090
         BTAB  'TRUNC',SETRUNC TRUNCATE EXCESSIVE LINES         GP04090
         BTAB  'WRAP',SETWRAP                                   GP13076
         BTAB  'TRIM',SETTRIM     IGNORE TRAILING BLANKS        GP13076
         BTAB  'STRIP',SETTRIM    IGNORE TRAILING BLANKS        GP13076
         BTAB  'SEQUENCE',SETSEQ  INSERT SEQUENCE NUMBERS       GP13076
         BTAB  'SEQ',SETSEQ       INSERT SEQUENCE NUMBERS       GP13076
         BTAB  ',',PARMLOOK  IGNORE BLANKS AND COMMAS
         BTAB  ';',PARMLOOK    AND SEMI-COLONS
         BTAB  *END
         SPACE 1
SETFOLD  MVC   TRANTAB+X'81'(9),TRANTAB+X'C1'   A-I
         MVC   TRANTAB+X'91'(9),TRANTAB+X'D1'   J-R
         MVC   TRANTAB+X'A2'(8),TRANTAB+X'E2'   S-Z
         OI    PROFG,FGRELAY   REQUEST TRANSLATION
         B     PARMLOOK
         SPACE 1
SETREL   OI    PROFG,FGRELAY   REQUEST TRANSLATION
         LM    R15,R1,=A(TRSUB1,TRSUB2-TRSUB1,TRSUBND)
SETRELLP SR    R2,R2
         IC    R2,1(,R15)    GET SOURCE BYTE
         LA    R2,TRANTAB(R2)  GET TABLE ENTRY
         MVC   0(1,R2),0(R15)  REPLACE IT
         BXLE  R15,R0,SETRELLP  DO ALL
         B     PARMLOOK
         SPACE 1
SETVER   OI    PROFG,FGVER   PRINT INPUT AS WELL AS OUTPUT LINE
         B     PARMLOOK      GO FOR MORE
         SPACE 1                                                GP04090
SETRUNC  OI    PROFG,FGTRUNC  TRUNCATE EXCESSIVE LINES          GP04090
         B     PARMLOOK      GO FOR MORE                        GP04090
         SPACE 1
SETWRAP  OI    PROFG,FGWRAP  WRAP EXCESSIVE LINES               GP13076
         B     PARMLOOK      GO FOR MORE                        GP13076
         SPACE 1
SETTRIM  OI    PROFG,FGTRIM  IGNORE TRAILING BLANKS             GP13076
         B     PARMLOOK      GO FOR MORE                        GP13076
         SPACE 1
SETSEQ   OI    PROFG,FGSEQ   INSERT SEQUENCE NUMBERS            GP13076
         B     PARMLOOK      GO FOR MORE                        GP13076
         SPACE 1                                                GP04090
SETNL    OI    PROFG,FGNL    RECOMBINE SPLIT INPUT AT X'25'     GP04090
         B     PARMLOOK      GO FOR MORE                        GP04090
         SPACE 1
*---------------------------------------------------------------------*
*   OBTAIN INPUT; SPLIT IF NL OPTION USED                             *
*---------------------------------------------------------------------*
ENDPARM  TM    PROFG,FGSEQ   USER WANTS SEQUENCE NUMBERS ?      GP13076
         BZ    SHOWPARM        NO                               GP13076
         CLC   OUTLEN,=F'80' CARD FORMAT ?                      GP13076
         BE    SHOWPARM                                         GP13076
         ZI    PROFG,FGSEQ   RESET SEQUENCE NUMBERS             GP13076
         OICC  4,4           SIGNAL MINOR ERROR                 GP13076
         PRTDATA 'PARM=SEQ canceled - output LRECL not 80'      GP13076
         PRTDATA '  LRECL is',(OUTLEN,I,DEB,PAD)                GP13076
         PRTL  ' '                                              GP13076
SHOWPARM PRTLIST MSGOPTS,TITLE=2                                GP13076
         B     NOPRMSEQ      SKIP AROUND CONSTANTS              GP13076
         SPACE 1
MSGOPTS  FDPRT '      Options now on are : ',NL                 GP13076
         FDCLI  PROFG,0,BE=MSGOPTS0                             GP13076
         FDFLAG PROFG,TABLE=PROSHO,SPACE=2,LEN=80               GP13076
         FD    *END                                             GP13076
MSGOPTS0 FDPRT 'default'                                        GP13076
         FD    *END                                             GP13076
         SPACE 1                                                GP13076
PROSHO   FLGTAB FGTRIM,'Trim',MLEN=1                            GP13076
         FLGTAB FGTRUNC,'Truncate'                              GP13076
         FLGTAB FGWRAP,'Wrap'                                   GP13076
         FLGTAB FGUPCASE,'Upper-case'                           GP13076
         FLGTAB FGNL,'Split at NL'                              GP13076
         FLGTAB FGSEQ,'Sequence'                                GP13076
         FLGTAB FGVER,'Print input'                             GP13076
         FLGTAB FGRELAY,'RTI fix'                               GP13076
         FLGTAB *END                                            GP13076
         SPACE 1
NOPRMSEQ SR    R4,R4         OUTPUT BUFFER EMPTY                GP04090
         LA    R0,OUTLINE    POINT TO OUTPUT LINE               GP04090
         LA    R1,SOCHECK-OUTLINE                               GP04090
         L     R15,=X'40000000'  SET FOR BLANK FILL             GP04090
         MVCL  R0,R14        BLANK OUTPUT LINE                  GP04090
         LA    R3,OUTLINE    POINT TO OUTPUT START              GP04090
         SR    R4,R4         SET OUTPUT LENGTH SO FAR           GP04090
         SPACE 1
GETDATA  TM    PROFG,FGNL    NEW LINE MODE ?                    GP04090
         BZ    INPGET        NO; GET A RECORD                   GP04090
         LM    R6,R7,@HOLDBUF    RESIDUAL BUFFER                GP04090
         LTR   R7,R7         ANY MORE INPUT DATA ?              GP04090
         BNP   INPGET        NO; READ A RECORD                  GP04090
         LOCBYTE (R6),LEN=(R7),BYTE=X'25'  IS THERE A SPLIT ?   GP04090
         BH    NONLSEG       NONE FOUND                         GP04090
         SR    R15,R14       GET SEGMENT LENGTH                 GP04090
         LA    R0,1(,R15)    SET LENGTH TO PROCESS              GP04090
         AR    R6,R0                                            GP04090
         SR    R7,R0         POST-SEGMENT BUFFER                GP04090
         STM   R6,R7,@HOLDBUF  SAVE FOR RETURN                  GP04090
         LR    R6,R14                                           GP04090
         LR    R7,R15        PASS SEGMENT                       GP04090
         B     STRINGER      CONTINUE                           GP04090
         SPACE 1                                                GP04090
NONLSEG  LM    R0,R1,@HOLDBUF  GET CURRENT BUFFER POINTERS      GP04090
         LA    R14,HOLDBUFF  GET START OF BUFFER                GP04090
         ST    R14,@HOLDBUF  UPDATE STARTING ADDRESS            GP04090
         LR    R15,R1        MOVE WITHOUT CHANGE                GP04090
         MVCL  R14,R0        SLIDE TEXT OVER                    GP04090
         SPACE 1                                                GP04090
INPGET   INPGET ,            GET NEXT INPUT LINE                GP04090
         BXLE  R15,R15,INPLOOK                                  GP04090
         LM    R14,R15,@HOLDBUF  LOOK AT INPUT BUFFER           GP04090
         LTR   R15,R15       ANYTHING LEFT TO PROCESS ?         GP04090
         BNP   ENDSYN        NO; DO FINAL RITES                 GP04090
         AR    R14,R15       POINT TO LAST BYTE                 GP04090
         MVI   0(R14),X'25'  MAKE ARTICIAL STOPPER              GP04090
         LA    R15,1(,R15)   FIX UP                             GP04090
         ST    R15,@HOLDBUF+4  UPDATE LENGTH                    GP04090
         B     GETDATA       AND GO AGAIN                       GP04090
         SPACE 1                                                GP04090
INPLOOK  LR    R6,R1         SAVE INPUT RECORD ADDRESS          GP04090
         LTR   R7,R0         AND LENGTH
         BNP   INPGET        SHOULD NOT HAPPEN?
         INC   NUMREAD       INCREMENT INPUT COUNTER            GP04090
         TM    PROFG,FGVER   VERIFY MODE?
         BZ    NOECHO
         PRTF  0(R6),(R7),CC=NO  ECHO THE INPUT
         SPACE 1
NOECHO   TM    PROFG,FGNL    NEW LINE MODE ?                    GP04090
         BZ    BUFASIS       NO; PROCESS AS LINE                GP04090
         LM    R14,R15,@HOLDBUF  GET CURRENT SEGMENT            GP04090
         AR    R14,R15       NEW DESTINATION                    GP04090
         AR    R15,R7        NEXT LENGTH AFTER MOVE             GP04090
         ST    R15,@HOLDBUF+4  UPDATE LENGTH                    GP04090
         LR    R15,R7        SAME LENGTH                        GP04090
         MVCL  R14,R6        APPEND BUFFER                      GP04090
         B     GETDATA       LOOK FOR NEW LINE                  GP04090
BUFASIS  LA    R3,OUTLINE    POINT TO OUTPUT START              GP04090
         SR    R4,R4         SET OUTPUT LENGTH SO FAR
*---------------------------------------------------------------------*
*   GET NEXT ACTION CHARACTER; MOVE DATA                              *
*---------------------------------------------------------------------*
STRINGER LA    R15,256       SET MAX LENGTH IN ONE CHUNK
         MIN   R15,(R7)      GET CHUNK LENGTH
         LA    R1,0(R15,R6)  POINT TO STOPPER IF TRT PASSES
         SH    R15,=H'1'     MAKE EX LENGTH
         BM    PUTOUT        DONE WITH THIS RECORD
         SR    R2,R2         FOR TAB TEST
         EX    R15,EXTRTTAB  LOOK FOR TAB
         LR    R5,R1         SAVE STOP POSITION
         SR    R1,R6         GET NUMBER OF BYTES BEFORE TAB
         BNP   NOMOVE
         LR    R15,R1                                           GP04090
         BCTR  R1,0
         EX    R1,EXMOVTXT   MOVE TEXT
         TM    PROFG,FGRELAY   RELAY TRANSLATE ?
         BZ    NOTRAN
         EX    R1,EXTRNTXT   TRANSLATE IT
NOTRAN   AR    R3,R15        INCREASE OUTPUT CURSOR
         AR    R4,R15        UP OUTPUT LENGTH
DONEWRAP AR    R6,R15        INCREASE INPUT CURSOR
         SR    R7,R15        FIX INPUT LENGTH
         BNP   PUTOUT        QUIT IF DONE (NO ROOM FOR TAB)
         SPACE 1
NOMOVE   LTR   R2,R2         DID WE HIT SOMETHING?
         BNZ   MAKETAB         YES; INSERT TAB SPACES           GP13076
         C     R4,OUTMAX     BUFFER FULL?                       GP13076
         BL    STRINGER        NO; DO MORE                      GP13076
         B     PUTOUT          YES; PROCESS                     GP13076
         SPACE 1
*  THIS CODE SUPPORTS DUMB TABS (ONE EVERY 8 POSITIONS) ONLY.
MAKETAB  LA    R4,8(,R4)     SET (MAX) NEW OUTPUT LENGTH
         N     R4,=X'FFFFFFF8'  KILL UNWANTED BITS
         C     R4,OUTMAX     WILL IT FIT ?                      GP04090
         BNH   TABFITS       YES                                GP04090
         L     R4,OUTMAX     TRUNCATE                           GP04090
         B     PUTOUT          AND PROCESS                      GP13076
TABFITS  LA    R3,OUTLINE(R4)   SET NEW MOVE TO                 GP04090
         LA    R6,1(,R6)     SKIP INPUT TAB
         SH    R7,=H'1'      FIX INPUT LENGTH
         BP    STRINGER      RECURSE IF MORE TO DO
         SPACE 1                                                GP04090
PUTOUT   LA    R5,OUTRDW     INIT FOR WRAP PROCESSING           GP13076
         TM    PROFG,FGTRIM  DELETE TRAILING BLANKS ?           GP13076
         BZ    PUTASIS                                          GP13076
         STM   R4,R5,DB2                                        GP13076
         SUBCALL SUBSTRIP,(DB2+4,DB2,C'T'),VL,MF=(E,CALLPARM)   GP13076
         L     R4,DB2        GET TRIMMED LENGTH                 GP13076
         MAXH  R4,=H'1'      PROCESS COMPLETELY BLANK RECORD    GP13076
PUTASIS  C     R4,OUTLEN     DID THIS FIT ?                     GP04090
         BNH   PUTFIT        YES                                GP04090
         TM    PROFG,FGWRAP  WRAP TO NEW LINE ?                 GP13076
         BZ    CHECKTRN        NO; CHECK FOR TRUNCATE           GP13076
         INC   NUMTRUNC,WORK=R0  INCREMENT TRUNCATION COUNTER   GP13076
         B     PUTFIT        JOIN COMMON (WILL LOOP)            GP13076
         SPACE 1
CHECKTRN TM    PROFG,FGTRUNC  TRUNCATION PERMITTED ?            GP04090
         BNZ   TRUNCOUT      NO; LINE TOO LONG                  GP04090
FAILSIZE PRTDATA 'Record starting with',(OUTLINE,32,PAD),'too long'
         SERVTERM ,                                             GP13076
         ABEND 123,DUMP                                         GP04090
         SPACE 1                                                GP04090
TRUNCOUT INC   NUMTRUNC,WORK=R1  INCREMENT TRUNCATION COUNTER
         L     R4,OUTLEN     TRUNCATE                           GP04090
         SPACE 1                                                GP04090
         USING OUTRDW,R5     CHEAT FOR WRAP LOOPING             GP13076
PUTFIT   LA    R0,4(,R4)     LENGTH FOR RDW                     GP04090
         STH   R0,OUTRDW                                        GP04090
         TM    PROFG,FGSEQ   PRODUCE SEQUENCE NUMBERS ?         GP13076
         BZ    PUTRECV         NO                               GP13076
         AP    DECSEQ,=P'1000'                                  GP13076
         UNPK  OUTLINE+72(8),DECSEQ                             GP13076
         OI    OUTLINE+79,C'0'    MAKE PLUS POSITIVE            GP13076
         LA    R1,80         CARD SIZE                          GP13076
         MAXH  R1,(R4)       MAKE IT LONG ENOUGH                GP13076
         LA    R0,4(,R1)       PLUS RDW                         GP13076
         STH   R0,OUTRDW                                        GP13076
PUTRECV  PRTV  OUTRDW,DEV=(1,2),CC=NO  PRINT AND PUNCH          GP04090
         INC   NUMRITE       INCREMENT OUTPUT COUNTER           GP04090
         S     R4,OUTLEN     ACCOUNT FOR RECORD WRITTEN         GP13076
         BNP   PUTTED          NO WRAP                          GP13076
         AL    R5,OUTLEN     NEXT SEGMENT                       GP13076
         B     PUTFIT                                           GP13076
         DROP  R5                                               GP13076
         SPACE 1
PUTTED   L     R4,=A(SOCHECK-OUTLINE)                           GP13076
         CLRL  OUTLINE,(R4),FILL=C' '                           GP04090
         LA    R3,OUTLINE    RESTORE LINE START                 GP04090
         SR    R4,R4         OUTPUT IS EMPTY                    GP04090
         B     GETDATA       KEEP SCANNING                      GP04090
EXTRTTAB TRT   0(*-*,R6),TRTTAB  FIND A TAB
EXMOVTXT MVC   0(*-*,R3),0(R6)  MOVE TO OUTPUT
EXTRNTXT TR    0(*-*,R3),TRANTAB  CONVERT BOTCHED CHARACTERS
         SPACE 1
ENDSYN   LTR   R4,R4         DATA IN BUFFER ?                   GP04090
         BNP   ENDTERM       NO                                 GP04090
         PRTF  OUTLINE,(R4),DEV=(1,2),CC=NO  PRINT FINAL BUFFER GP04090
         INC   NUMRITE       INCREMENT OUTPUT COUNTER           GP04090
ENDTERM  PRTLIST MSGSTAT     SHOW STATISTICS                    GP04090
         SERVTERM ,                                             GP04090
         PGMEXIT RC=RETCODE  RETURN WITH CONDITION              GP04090
         SPACE 2
SYSPRINT PRTWORK SYSPRINT,TITLE=3
SYSPUNCH PUNWORK SYSPUNCH
SYSIN    INPWORK SYSIN                                          GP04090
         SPACE 1                                                GP04090
MSGSTAT  FDOPT NL,CC=C'0'    DOUBLE-SPACE                       GP04090
         FD    NUMREAD,I,RADJ,LEN=10                            GP04090
         FD    'RECORDS READ',PADL                              GP04090
         FD    NUMRITE,I,RADJ,,NL,LEN=10                        GP04090
         FD    'RECORDS WRITTEN',PADL                           GP04090
         FDCLC NUMTRUNC,ZEROES,BE=MSGSTATX                      GP04090
         FD    NUMTRUNC,I,RADJ,NL,LEN=10                        GP04090
         FD    'RECORDS TRUNCATED OR WRAPPED',PADL              GP13076
MSGSTATX FD    *END                                             GP04090
         SPACE 1
TRTTAB   DC    256AL1(0)        ALL GARBAGE
         TRENT TRTTAB,X'05',X'05'  TAB
         SPACE 1
TRANPAT  DC    256AL1(*-TRANPAT)  NO TRAN TRAN
         TRENT TRANPAT,C' ',X'25'  REPLACE NL BY SPACE          GP04090
         SPACE 1
*  RELAY TRANSLATION :
*               OUT    IN
TRSUB1   DC    X'BA',X'39'  LEFT BRACKET
TRSUB2   DC    X'BB',X'3A'  RIGHT BRACKET
         DC    X'40',X'20'  ?
TRSUBND  DC    X'4F',X'6A'  SOLID STROKE
         ORG   ,
         SPACE 1
SAVE     DSECT ,
DB       DS    D
DB2      DS    D                                                GP13076
ZEROES   DS    D                                                GP04090
         SERVDEFS ,          SERVICE AREA                       GP04090
@HOLDBUF DS    A,F           INTERMEDIATE BUFFER POINTERS       GP04090
OUTLEN   DS    F             MAXIMUM OUTPUT RECORD SIZE         GP04090
OUTMAX   DS    F             MAXIMUM IN OUTPUT BUFFER           GP13076
NUMTRUNC DS    F             LINES TRUNCATED                    GP04090
NUMREAD  DS    F             LINES READ                         GP04090
NUMRITE  DS    F             LINES WRITTEN                      GP04090
DECSEQ   DS    PL5           SEQUENCE COUNTER                   GP13076
PROFG    DS    X
FGUPCASE EQU   X'80'           UPPER-CASE CONVERSION
FGRELAY  EQU   X'40'           FIX RELAY MISTRANSLATIONS
FGTRUNC  EQU   X'20'           TRUNCATE EXCESSIVE LINES         GP04090
FGWRAP   EQU   X'10'           WRAP EXCESSIVE LINES             GP13076
FGTRIM   EQU   X'08'           IGNORE TRAILING BLANKS           GP13076
FGNL     EQU   X'04'           RECOMBINE TEXT INTO LINES        GP04090
FGVER    EQU   X'02'           PRINT INPUT DATA, TOO            GP04090
FGSEQ    EQU   X'01'           SEQUENCE OUTPUT IF LEN=80        GP13076
TRANTAB  DS    CL256         OUTPUT TRANSLATE
OUTRDW   DS    Y,Y      1/2                                     GP04090
OUTLINE  DS    XL1024   2/2  OUTPUT RECORD                      GP04090
SOCHECK  DS    CL8      3/2  FOR OVERRUN (???)                  GP04090
LINE     DS    0CL100        PARM HOLDER                        GP04090
HOLDBUFF DS    2XL1024       INTERMEDIATE BUFFER                GP04090
SAVEEND  EQU   *
         SPACE 1
         CVT   DSECT=YES
         IHACDE ,
         MAPPRTWK ,          MAP PUNCH WORK AREA                GP04090
         END   ,
