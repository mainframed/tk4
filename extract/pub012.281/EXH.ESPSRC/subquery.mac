QUERY    TITLE 'S U B Q U E R Y  ***  MVS 3.8 CSVQUERY ROUTINE'
         COPY  OPTIONGB
         SPACE 2
         SYSPARM LIST=YES
         EJECT
***********************************************************************
**                                                                   **
**   SUBROUTINE SUBQUERY, INVOKED BY THE MVSQUERY MACRO, PROVIDES    **
**   MOST CSVQUERY FUNCTIONS. HOWEVER, TO WORK UNDER ASM XF, ALL     **
**   KEYWORDS WERE SHORTENED TO 7 CHARACTES OR LESS.                 **
**                                                                   **
**   ªOPT.³ TCB= ALLOWS USE FOR OTHER TCB CHAINS IN ADDRESS SPACE    **
**                                                                   **
**   INTENDED TO MAKE PROGRAM MAINTENANCE EASIER, RUNNING CURRENT    **
**   CODE UNDER MVS 3.8 ON HERCULES.                                 **
**                                                                   **
**   ALSO SEE MVSQUERY MACRO IN .ESPMAC                              **
**                                                                   **
**   R15 = 0       REQUEST SATISFIED                                 **
**         4       MODULE FOUND, BUT NOT ALL REQUESTED DATA          **
**         8       NOT FOUND                                         **
**        20       ERROR IN PARM LIST                                **
**                                                                   **
***********************************************************************
         PRINT &PRTSOR
SUBQUERY PGMHEAD ZERO,BASE=R12,PARM=R1,AM=ANY,RM=ANY        NEW GP04234
*   NOTE THAT R7-R9 ARE DESTROYED BY CVT LOOKUP ROUTINES
         LR    R10,R1        COPY PARM                          GP08117
         USING PRMDSECT,R10
         L     R3,CVTPTR     GLOBAL REGISTER
         USING CVT,R3        DECLARE IT
         LTR   R8,R0         COPY TCB ADDRESS OR 0              GP08117
         BNZ   HAVETCB       SO USE IT                          GP08117
         LTCB  R8,HAVE=CVT,USE=YES  LOAD MY TCB ADDRESS
HAVETCB  L     R1,PRM@INRQ   GET REQUEST ADDRESS                GP15196
         N     R1,=X'7FFFFFFF'  MASK POSSIBLE AM BIT            GP15196
         BZ    ERROR20       BAD PARM LIST
         TM    PRMFLAGS,PRMOPNAM  SEARCH BY NAME ?
         BNZ   SETNAME
         MVC   VAL@OEPA,0(R1)  COPY DESIRED ADDRESS
         NI    VAL@OEPA,X'7F'  MASK POSSIBLE AM BIT             GP15196
         B     SETCOMM
SETNAME  MVC   VAL@ONAM,0(R1)  COPY DESIRED MOD NAME
SETCOMM  TM    PRMFLAGS,PRMOPJPA  SEARCH THE JOB PACK AREA ?
         BZ    SKIPJOB
         SPACE 1
***********************************************************************
*                                                                     *
*   SEARCH THE JOB'S PACK AREA (CDE CHAIN) AND THE LOAD LIST FOR THE  *
*   REQUESTED NAME OR ADDRESS                                         *
*                                                                     *
***********************************************************************
         PUSH  USING
         LA    R5,TCBJPQ-CDCHAIN+CDENTRY  POINT TO THE PACK LIST
         MVI   VAL@OAT3,VALF3JPA  SAY FOUND IN JOB PACK
         USING CDENTRY,R5
LOOPJPA  ICM   R5,7,CDCHAIN+1  LOAD CDE
         BZ    DONEJPA       HUH ?
         BAL   R9,QMATCH     DOES IT MATCH THE REQUEST ?
         B     LOOPJPA       TRY AGAIN
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   TRY JOB'S LOAD LIST                                               *
*                                                                     *
*---------------------------------------------------------------------*
DONEJPA  LA    R6,TCBLLS-LLECHN+LLE  POINT TO LOAD LIST
         USING LLE,R6                                            *TSM*
LOOPLLE  ICM   R6,7,LLECHN+1
         BZ    SKIPJOB       DONE
         ICM   R5,7,LLECDPT+1  GET CDE
         BZ    LOOPLLE       HUH?
         BAL   R9,QMATCH     DESIRED ENTRY ?
         B     LOOPLLE       NOPE
         POP   USING
         SPACE 2
***********************************************************************
*                                                                     *
*   SEARCH THE SYSTEMS CHAINS FOR THE REQUESTED ELEMENT               *
*                                                                     *
***********************************************************************
         PUSH  USING
SKIPJOB  TM    PRMFLAGS,PRMOPLPA  SEARCH THE LINK PACK AREA ?   GP12330
         BZ    DONELPDE      NO
         MVI   VAL@OAT3,VALF3MLP  SAY FOUND IN MLPA
         L     R5,CVTQLPAQ
         LA    R5,0(,R5)     POINT TO CDE CHAIN
         USING CDENTRY,R5                                       GP13007
LOOPLPA  ICM   R5,7,CDCHAIN+1  LOAD CDE
         BZ    DONELPA       HUH ?
         BAL   R9,QMATCH     DOES IT MATCH THE REQUEST ?
         B     LOOPLPA       TRY AGAIN
         POP   USING
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   TRY SYSTEM LPDE TABLE                                             *
*                                                                     *
*---------------------------------------------------------------------*
         PUSH  USING
DONELPA  MVI   VAL@OAT3,VALF3PLP  SAY FOUND IN PLPA
         L     R5,CVTLPDIA   LPDE START
         USING LPDE,R5       DECLARE MAPPING
LOOPLPDE TM    LPDENAME,X'FF'  LAST ENTRY (FF) OR EMPTY (00) ?  GP05303
         BO    DONELPDE      YES; TOO BAD                       GP05303
         BZ    BUMPLPDE      EMPTY - SKIP                       GP05303
         O     R5,=X'80000000'  SET LPDE FLAG
         LR    R4,R5         PRESET MAJOR
         TM    LPDEATTR,LPDEMIN  MINOR ?
         BZ    TESTLPDE      NO; TEST IT
         TM    PRMFLAGS,PRMOPMIN  DOES USER WANT MINORS ?
         BZ    BUMPLPDE      OK
TESTLPDE TM    PRMFLAGS,PRMOPNAM  SEARCH BY NAME ?
         BZ    ADDRLPDE      NO; BY ADDRESS
         CLC   VAL@ONAM,LPDENAME  MATCHING NAME ?
         BNE   BUMPLPDE      NO; TRY AGAIN
         TM    LPDEATTR,LPDEMIN  DOING A MINOR ?
         BZ    QMATLPDE      NO; PROCESS THIS ONE
         BAL   R14,GETMAJOR  GET MAJOR ENTRY
           B   BUMPLPDE      OR SKIP MINOR
         B     QMATLPDE      AND PROCESS
         SPACE 1
         PUSH  USING
GETMAJOR ICM   R4,15,LPDEXLP  LOOK FOR MAJOR LPDE ADDRESS
         BNZ   4(,R14)       RETURN MATCHED
         DROP  R5
         L     R4,CVTLPDIA   GET LPDE START BACK
         USING LPDE,R4
GETMAJLP CLI   LPDENAME,X'FF'  LIST END ?
         BER   R14           YES; TAKE BAD RETURN
         CLC   LPDENAME,LPDEMJNM-LPDE(R5)  DESIRED MAJOR ?
         BE    4(,R14)
         LA    R4,LPDELEN(,R4)
         B     GETMAJLP
         POP   USING
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*   SEARCH BY ADDRESS - SCAN ALL ENTRIES TO FIND ONE WITH LEAST       *
*   DISPLACEMENT FROM ENTRY TO SEARCH ADDRESS                         *
*                                                                     *
*---------------------------------------------------------------------*
ADDRLPDE TM    LPDEATTR,LPDEMIN  DOING A MINOR ?
         BZ    AMAJLPDE
         BAL   R14,GETMAJOR  GET MAJOR ENTRY
           B   BUMPLPDE      OR SKIP MINOR
AMAJLPDE TM    LPDEATT2-LPDE(R4),LPDEXLE  HAVE EXTENT INFO ?
         BZ    BUMPLPDE      NO; IGNORE THIS
         LM    R14,R15,LPDEXTLN-LPDE(R4)  GET LENGTH/ADDRESS FROM MAJOR
         N     R14,=X'7FFFFFFF'  KILL UNWANTED BIT
         N     R15,=X'7FFFFFFF'  KILL UNWANTED BIT
         AR    R14,R15       MAKE END ADDRESS
         L     R0,VAL@OEPA
         CR    R0,R15        IN THIS EXTENT
         BL    BUMPLPDE      NO
         CR    R0,R14        NOT TOO HIGH?
         BNL   BUMPLPDE      TOO BAD
         STM   R4,R5,EXTCDE  SAVE FOR NO MATCH ON ENTRY, ONLY EXTENT
         OI    EXTCDE+4,X'80'  SET LPDE FLAG
         L     R14,LPDENTP   GET ENTRY POINT
         N     R14,=X'7FFFFFFF'  KILL UNWANTED BIT
         SR    R0,R14        OFFSET FROM ENTRY POINT
         BM    BUMPLPDE      NEGATIVE - LOOK FOR MORE
         LM    R14,R15,OFFSET  SEE WHETHER
         LTR   R15,R15       WE HAVE A PRIOR ENTRY
         BZ    SAVELPDE      NO; THIS IS NEW
         CR    R0,R14        LOWER OFFSET ?
         BH    BUMPLPDE      NO; IGNORE
         BL    SAVELPDE      YES; STORE
         TM    CDATTR2-CDENTRY(R5),CDXLE  EXTENT LIST ?
         BNZ   SAVELPDE      EQUAL - REPLACE IF EXTENT LIST
         TM    CDATTR-CDENTRY(R5),CDMIN ?
         BNZ   BUMPLPDE      EQUAL - REPLACE IF NOT MINOR
SAVELPDE ST    R0,OFFSET   SAVE DISPLACEMENT
         STM   R4,R5,FITCDE  SAVE CDE ADDRESSES
         OI    FITCDE,X'80'  SET LPDE FLAG
BUMPLPDE LA    R5,LPDELEN(,R5)
         B     LOOPLPDE
         POP   USING
         SPACE 2
***********************************************************************
*                                                                     *
*   ALL QUEUES EXHAUSTED - IF SEARCH BY NAME, RETURN RC=8             *
*   FOR SEARCH BY ADDRESS, SEE WHETHER WE FOUND A MATCH, AND          *
*   ESTABLISH CORRECT CDES                                            *
*                                                                     *
***********************************************************************
DONELPDE TM    PRMFLAGS,PRMOPNAM  SEARCH BY NAME ?
         BNZ   NOTFOUND      YES; NO MATCH
         LM    R4,R5,FITCDE  GET BEST FIT CDE/LPDE ENTRIES
         LTR   R4,R4         IS THERE ONE ?
         BNZ   QMATCHED      YES; PROCESS RETURN DATA
         LM    R4,R5,EXTCDE  GET ANY FIT CDE/LPDE ENTRIES
         LTR   R4,R4         IS THERE ONE ?
         BZ    NOTFOUND      NO; RETURN NOT FOUND
         B     QMATCHED      YES; PROCESS RETURN DATA
         SPACE 2
***********************************************************************
*                                                                     *
*   QMATCH COMPARES A CDE AND AQSSOCIATED EXTENT LIST AGAINST THE     *
*   USER'S REQUESAT - RETURNS ON R9, ONLY IF NOT A MATCH              *
*                                                                     *
*   R5 - CURRENT CDE    R4 - SAME CDE OR ADDRES OF MAJOR CDE          *
*                                                                     *
***********************************************************************
         PUSH  USING
         USING CDENTRY,R5    PASSED BY CALLER
QMATCH   TM    PRMFLAGS,PRMOPNAM  SEARCH BY NAME ?
         BZ    QMATCH@       NO; BY ADDRESS
         CLC   VAL@ONAM,CDNAME  MATCH ?
         BNER  R9            NO; RETURN
         LR    R4,R5         COPY CDE ADDRESS FOR COMPATIBILITY
         TM    CDATTR2,CDXLE  EXTENT LIST IN THIS ENTRY ?
         BNZ   QMATCHED      YES; WE HAVE A WINNER
         TM    CDATTR,CDMIN  IS THIS A MINOR ?
         BZ    QMATCHED      NO; WE HAVE A LOSER - RETURN PARTIALS
         TM    PRMFLAGS,PRMOPMIN  USER WANT MINORS ?
         BZR   R9            NO; CONTINUE SEARCHING  NEEDLESSLY
         ICM   R4,7,CDXLMJP+1  GET MAJOR ENTRY W/XL POINTER
         B     QMATCHED      ELSE PROCESS THIS ENTRY
         SPACE 1
QMATCH@  STM   R14,R4,12(R13)  SAVE A FEW REGISTERS
         LR    R4,R5         COPY CDE ADDRESS
         DROP  R5
         USING CDENTRY,R4
QMATCH@C TM    CDATTR2,CDXLE  EXTENT LIST PRESENT ?
         BNZ   QMATCH@J      YES; USE IT
         TM    CDATTR,CDMIN  IS THIS A MINOR ?
         BZ    QMATCH@R      NO; IGNORE MAJOR SANS EXTENT LIST
         TM    PRMFLAGS,PRMOPMIN  USER WANT MINORS ?
         BZ    QMATCH@R      NO; CONTINUE SEARCHING
         ICM   R4,7,CDXLMJP+1  GET (PRESUMED) MAJOR ADDRESS
         B     QMATCH@C
QMATCH@J L     R2,CDXLMJP    GET EXTNT LIST
         USING XTLST,R2      MAP IT
         L     R1,XTLLNTH    GET TOTAL LENGTH
         SRL   R1,3          CONVERT TO ENTY COUNT (+1)
         SH    R1,=H'1'      ADJUST TO ENTRY COUNT
         BNP   QMATCH@R      RETURN - BAD COUNT
         L     R0,VAL@OEPA   LOAD USER'S ADDRESS
QMATCH@L LA    R2,L'XTLMSBLA+L'XTLMSBAA(,R2)  NEXT ENTRY
         USING XTLMSBLA,R2   DECLARE LENGTH/ADDRESS PORTION
         LM    R14,R15,XTLMSBLA  LOAD LENGTH AND START ADDRESS
         N     R14,=X'7FFFFFFF'  KILL UNWANTED BIT
         N     R15,=X'7FFFFFFF'  KILL UNWANTED BIT
         ALR   R14,R15       MODULE END ADDRESS
         CR    R0,R15        IN MODULE ?
         BL    QMATCH@B
         CR    R0,R14        IN THIS EXTENT ?
         BNL   QMATCH@B      NO
         STM   R4,R5,EXTCDE  SAVE FOR NO MATCH ON ENTRY, ONLY EXTENT
         L     R14,CDENTRY   GET ENTRY POINT ADDRESS
         N     R14,=X'7FFFFFFF'  KILL UNWANTED BIT
         SR    R0,R14        OFFSET FROM ENTRY POINT
         BM    QMATCH@R      NEGATIVE - LOOK FOR MORE
         LM    R14,R15,OFFSET  SEE WHETHER
         LTR   R15,R15       WE HAVE A PRIOR ENTRY
         BZ    QMATCH@N      NO; THIS IS NEW
         CR    R0,R14        LOWER OFFSET ?
         BH    QMATCH@R      NO; IGNORE
         BL    QMATCH@N      YES; STORE
         TM    CDATTR-CDENTRY(R5),CDMIN ?
         BNZ   QMATCH@R      EQUAL - REPLACE IF NOT MINOR
QMATCH@N ST    R0,OFFSET     SAVE DISPLACEMENT
         STM   R4,R5,FITCDE  SAVE CDE ADDRESS
QMATCH@B BCT   R1,QMATCH@L   ADJUST TO ENTRY COUNT
QMATCH@R LM    R14,R4,12(R13)  RELOAD ALL
         BR    R9            KEEP SCANNING
         POP   USING
         SPACE 2
***********************************************************************
*                                                                     *
*   USER'S REQUEST HAS BEEN MATCHED                                   *
*   R5 HAS MATCHING CDE / LPDE                                        *
*   R4 HAS MAJOR CDE / LPDE                                           *
*   FOR LPDE, NEED TO BUILD FAKE EXTENT LIST.                         *
*                                                                     *
*********************************************************************
         PUSH  USING
         USING CDENTRY,R5
QMATCHED L     R6,CDXLMJP-CDCHAIN(,R4)  CDE'S EXTENT LIST
         LTR   R5,R5         PROCESSING A CDE OR AN LPDE ?
         BP    QMATCHCD      CDE; ALL IS WELL
QMATLPDE LA    R6,FAKEXTLS   POINT TO FAKE LIST
         USING XTLST,R6
         MVI   XTLLNTH+3,16  SINGLE EXTENT ENTRY
         MVI   XTLNRFAC+3,1  SINGLE RELOCATION FACTOR
         MVC   XTLMSBLA(L'XTLMSBLA+L'XTLMSBAA),LPDEXTLN-LPDE(R4)
         OI    XTLMSBLA,X'80'  (OLD) END LIST BIT ?
         SPACE 1
QMATCHCD ICM   R1,15,PRM@OLEN  DOES USER WANT LENGTH ?
         BZ    DONLEN        NO
         TM    CDATTR2-CDCHAIN(R4),CDXLE  EXTENT DATA AVAILABLE?
         BNZ   SETLEN        YES
         OICC  4             NOT AVAILABLE
         B     DONLEN        NO GOOD
SETLEN   SR    R0,R0         LENGTH ACCUMULATOR
         LA    R2,XTLMSBLA   POINT TO FIRST LENGTH
         L     R14,XTLLNTH   GET TOTAL LENGTH
         SH    R14,=AL2(XTLMSBLA-XTLLNTH)  LESS OVERHEAD
         SRA   R14,3         CONVERT LENGTH TO COUNT
         BZ    MOVLEN        NONE?
LUPLEN   L     R15,0(,R2)    GET FIRST LENGTH
         N     R15,=X'7FFFFFFF'  CLEAN IT
         AL    R15,=F'7'     ROUND UP TO NEAREST 8
         N     R15,=X'7FFFFFF8'  MULTIPLE OF 8
         AR    R0,R15
         LA    R2,L'XTLMSBLA+L'XTLMSBAA(,R2)  NEXT EXTENT
         BCT   R14,LUPLEN
MOVLEN   ST    R0,0(,R1)     PASS BACK TO USER
         OI    VAL@OVAL,VALVFLEN
         SPACE 1
DONLEN   ICM   R1,15,PRM@OEPA  USER WANTS ENTRY ADDRESS?
         BZ    DONEPA        NO
         MVC   0(4,R1),CDENTPT  COPY ENTRY ADDRESS  (NO AM BIT IN 3.8)
         OI    VAL@OVAL,VALVFEPA
         SPACE 1
DONEPA   ICM   R1,15,PRM@ONAM  MODULE/ENTRY NAME ?
         BZ    DONNAM        NO
         MVC   0(8,R1),CDNAME  COPY NAME
         OI    VAL@OVAL,VALVFENM  SET VALID
         SPACE 1
DONNAM   ICM   R1,15,PRM@OMAJ  MAJOR MODULE NAME ?
         BZ    DONMAJ        NO
         MVC   0(8,R1),CDNAME-CDENTRY(R4)  COPY NAME
         OI    VAL@OVAL,VALVFMNM  SET VALID
         SPACE 1
DONMAJ   ICM   R1,15,PRM@OSP   SUBPOOL ?
         BZ    DONSP
         OICC  4             NOT IMPLEMENTED
         SPACE 1
DONSP    ICM   R1,15,PRM@OAT1  ATTRIBUTE1 ?
         BZ    DONAT1
         MVI   0(R1),0       CLEAR IT
         OI    VAL@OVAL+L'VALVFAT1,VALVFAT1  SHOW VALID
         TM    CDATTR,CDREN  REENTRANT ?
         BZ    *+8           NO
         OI    0(R1),VALF1RNT  YES
         TM    CDATTR,CDSER  REUSABLE ?
         BZ    *+8           NO
         OI    0(R1),VALF1RUS  YES
         TM    CDATTR,CDNLR  NOT LOADABLE ONLY ?
         BZ    *+8           NO
         OI    0(R1),VALF1NOL  YES
         TM    CDATTR,CDMIN  ALIAS?
         BZ    *+8           NO
         OI    0(R1),VALF1ALI  YES
         TM    CDATTR2,CDOLY   OVERLAY?
         BZ    *+8           NO
         OI    0(R1),VALF1OVL  YES
         SPACE 1
DONAT1   ICM   R1,15,PRM@OAT2  ATTRIBUTE2 ?
         BZ    DONAT2
         MVI   0(R1),0       CLEAR IT
         OI    VAL@OVAL+L'VALVFAT2,VALVFAT2  SHOW VALID
         TM    CDATTR2,CDAUTH  APF AUTHORIZED?
         BZ    *+8           NO
         OI    0(R1),VALF2APF  YES
         TM    CDATTR2,CDSYSLIB  AUTHORIZED LIBRARY?
         BZ    *+8           NO
         OI    0(R1),VALF2AUL  YES
         SPACE 1
DONAT2   ICM   R1,15,PRM@OAT3  ATTRIBUTE3 ?
         BZ    DONAT3
         MVC   0(1,R1),VAL@OAT3  COPY JPA/LPA FLAG
         OI    VAL@OVAL+L'VALVFAT3,VALVFAT3  SHOW VALID
         SPACE 1
DONAT3   ICM   R1,15,PRM@OLOD  LOAD POINT OF FIRST EXTENT
         BZ    DONLOD
         TM    CDATTR2-CDCHAIN(R4),CDXLE  EXTENT DATA AVAILABLE?
         BNZ   SETLOD        YES
         OICC  4             NOT AVAILABLE
         B     DONLOD        NO GOOD
SETLOD   MVC   0(4,R1),XTLMSBAA  COPY START ADDRESS OF FIRST EXTENT
         OI    VAL@OVAL+L'VALVFLOD,VALVFLOD  SHOW VALID
         SPACE 1
DONLOD   ICM   R1,15,PRM@OPDA
         BZ    DONPDA
         OICC  4             NOT IMPLEMENTED
         SPACE 1
DONPDA   ICM   R1,15,PRM@OPID
         BZ    DONPID
         OICC  4             NOT IMPLEMENTED
         SPACE 1
DONPID   ICM   R1,15,PRM@OTKN  TOKEN
         BZ    DONTKN
         OICC  4             NOT IMPLEMENTED
         SPACE 1
DONTKN   ICM   R1,15,PRM@OXTL
         BZ    DONXTL
         ICM   R15,15,0(R1)    LOAD NUMBER OF ENTRIES DESIRED
         BNP   ERROR20       BOOBOO
         CH    R15,=H'16'    MORE THAN SIXTEEN ?
         BH    ERROR20       TOO BAD
         TM    CDATTR2-CDCHAIN(R4),CDXLE  EXTENT DATA AVAILABLE?
         BNZ   SETXTL        YES
         OICC  4             NOT AVAILABLE
         B     DONXTL        NO GOOD
SETXTL   L     R5,XTLLNTH    GET EXTENT LENGTH
         LA    R14,8(,R1)    OUTPUT ADDRESS
         SLA   R15,3         CONVERT TO LENGTH
         LA    R4,XTLMSBLA   POINT TO FIRST EXTENT
         SH    R5,=AL2(XTLMSBLA-XTLLNTH)  LESS OVERHEAD
         LR    R0,R5
         SRL   R0,3          CONVET LENGTH TO COUNT
         ST    R0,4(,R1)     RETURN UPDATED COUNT
         MVCL  R14,R4        COPY EXTENT LIST
         OI    VAL@OVAL+L'VALVFXTL,VALVFXTL  SHOW VALID
         SPACE 1
DONXTL   ICM   R1,15,PRM@ODIA
         BZ    MOVVALID      RETURN VALIDITY FLAGS, IF WANTED
         OICC  4             NOT IMPLEMENTED
         SPACE 1
MOVVALID ICM   R1,15,PRM@OVAL  ANY ?
         BZ    QMATCHEX      NO; DONE
         MVC   0(4,R1),VAL@OVAL  RETURN VALIDITY FLAGS
         SPACE 1
QMATCHEX L     R9,RETCODE    LOAD RETURN CODE
PGMRETRC ICM   R1,15,PRM@OCOD  USER WANTS RC ?
         BZ    PGMEXIT
         ST    R9,08(,R1)    PASS RETURN CODE IN STORAGE
PGMEXIT  PGMEXIT RC=(R9)     RETURN WITH CODE
         SPACE 1
ERROR20  LA    R9,20         SET ERROR CODE
         B     PGMEXIT       AND RETURN
         SPACE 1
NOTFOUND LA    R9,8          SET CODE FOR NO MATCH
         B     PGMRETRC      AND RETURN
         POP   USING
         SPACE 2
         LTORG ,
         PATCH ,             KEEP IT SIMPLE                       79078
         SPACE 2
SAVE     DSECT ,
         SERVDEFS ,          @SERVICE RELATED EXPANSION & RETCODE
OFFSET   DC    F'0'          MIN OFFSET SO FAR
FITCDE   DC    2A(0)         CDE WITH BEST FIT
EXTCDE   DC    2A(0)         CDE WITH MATCHING EXTENT (IN CASE NO EP)
FAKEXTLS DS    4A            FAKE EXTENT LIST FOR LPDE
VAL@OLEN DS    A             OUTPUT LENGTH WORD
VAL@OXTL DS    XL(16*8+4)    OUTPUT EXTENT LIST AREA
VAL@OEPA DS    A             OUTPUT ENTRY ADDRESS
VAL@ONAM DS    CL8           OUTPUT ENTRY NAME
VAL@OMAJ DS    CL8           OUTPUT MAJOR NAME
VAL@OLOD DS    A             OUTPUT LOAD ADDRESS
VAL@OSP  DS    X             OUTPUT SUBPOOL
VAL@OAT1 DS    X             OUTPUT ATTRIBUTE ADDRESS
VALF1EOM EQU   X'80'           END OF MEMORY DELETION
VALF1GBL EQU   X'40'           LOAD TO GLOBAL
VALF1RNT EQU   X'20'           REENTRANT
VALF1RUS EQU   X'10'           REUSABLE
VALF1NOL EQU   X'08'           NOT LOADABLE ONLY
VALF1OVL EQU   X'04'           OVERLAY
VALF1ALI EQU   X'02'           ALIAS
VAL@OAT2 DS    X             OUTPUT ATTRIBUTE ADDRESS
VALF2AUL EQU   X'80'           AUTHORIZED LIBRARY
VALF2APF EQU   X'40'           AUTHORIZED PROGRAM
VALF2AAN EQU   X'20'           AMODE ANY
VALF2A31 EQU   X'10'           AMODE 31
VALF2DYL EQU   X'04'           DYNAMIC LPA
VALF2DYF EQU   X'02'           DYNAMIC LPA - FIXED
VALF2DYP EQU   X'01'           DYNAMIC LPA - PAGE PROTECTED
VAL@OAT3 DS    X             OUTPUT ATTRIBUTE ADDRESS
VALF316M EQU   X'80'           LOADED ABOVE 16MB LINE
VALF3JPA EQU   X'40'           JB PACK AREA RESIDENT
VALF3PLP EQU   X'20'           PLPA
VALF3MLP EQU   X'10'           MLPA
VALF3FLP EQU   X'08'           FLPA
VALF3CSA EQU   X'04'           CSA RESIDENT
VAL@OVAL DS    XL4           OUTPUT VALIDITY FLAGS
VALVFLEN EQU   X'80',0
VALVFEPA EQU   X'40',0
VALVFENM EQU   X'20',0
VALVFMNM EQU   X'10',0
VALVFSPL EQU   X'08',0
VALVFAT1 EQU   X'04',0
VALVFAT2 EQU   X'02',0
VALVFAT3 EQU   X'01',0
VALVFLOD EQU   X'80',1
VALVFPDA EQU   X'40',1
VALVFPID EQU   X'20',1
VALVFTKN EQU   X'10',1
VALVFXTL EQU   X'08',1
VALVFDIA EQU   X'04',1
VAL@ODIA DS    XL4           OUTPUT DIAG  - NOT IMPLEMENTED
VAL@OPDA DS    XL16          OUTPUT ?     - NOT IMPLEMENTED
VAL@OPID DS    CL4           OUTPUT ?     - NOT IMPLEMENTED
VAL@OTKN DS    XL8           OUTPUT TOKEN - NOT IMPLEMENTED
SAVEEND  EQU   *             END OF CLEARED DYNAMIC AREA
         SPACE 2
         PRINT &PRTMAC
         MVSQUERY MF=D,PFX=PRM   CALLER'S PARAMETER AREA
         EJECT
         PRINT &PRTSYS
         SPACE 2
         IKJTCB ,
         SPACE 2
         CVT   DSECT=YES,LIST=NO
         SPACE 2
         IHACDE ,
         SPACE 2
         IHALLE ,
         SPACE 2
         IHALPDE ,
LPDELEN  EQU   *-LPDE        SIZE OF ONE ENTRY
         SPACE 2
         IHAXTLST ,
         SPACE 1
         IHAPSA ,
         END   ,
