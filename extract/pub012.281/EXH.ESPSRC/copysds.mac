COPYSDS  TITLE 'C O P Y S D S  ***  TSO SEQUENTIAL DATA SET COPY'
***********************************************************************
*                                                                     *
*        'COPYSDS' TSO COMMAND                                        *
*                                                                     *
***********************************************************************
*   FROM CBTCOV.FILE192
         SPACE
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN, VIRGINIA.
*        DATE WRITTEN. JANUARY 18 1982.
*        DATE UPDATED. JANUARY 27 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND COPIES A SEQUENTIAL DATA SET TO
*         ANOTHER SEQUENTIAL DATA SET.
*
*        LOG OF CHANGES.
*         27JAN82 - ALLOCATE OUTPUT DATA SET DISP=OLD
*                   UNLESS 'SHR' KEYWORD IS SPECIFIED.
*
*        DOCUMENTATION.
*
*         WHEN COPYING A MEMBER OF A PDS TO ANOTHER PDS,
*         THE DIRECTORY INFORMATION IS NOT COPIED.
*         USE COPYPDS IF YOU WANT THE DIRECTORY INFORMATION.
*
*         THIS COMMAND DOES NOT COPY A LOAD MODULE CORRECTLY.
*         NO WARNING MESSAGE IS ISSUED.  USE COPYPDS.
*
*         THE OUTPUT DATA SET MUST ALREADY EXIST.  THIS COMMAND
*         DOES NOT CREATE NEW DATA SETS.
*
*         THIS COMMAND DOES NOT COPY KEYED RECORDS.
*
*         THIS COMMAND CAN CONVERT RECORD FORMATS
*         F-TO-V AND V-TO-F IF BOTH DATA SETS
*         HAVE LRECL 256 OR LESS.
*
*         IF 'NUM' IS SPECIFIED, SEQUENCE NUMBERS ARE ASSUMED
*         TO BE IN THE LAST 8 COLUMNS OF FIXED LENGTH RECORDS
*         AND THE FIRST 8 COLUMNS OF VARIABLE LENGTH RECORDS.
*         'NUM' IS IGNORED UNLESS CONVERTING F-TO-V OR V-TO-F.
*
*         THIS COMMAND DOES NOT CONVERT RECORD FORMATS
*         U-TO-F OR F-TO-U OR U-TO-V OR V-TO-U OR V-TO-F.
*
*         THIS COMMAND IS NOT DESIGNED TO EXPAND A RECORD LENGTH.
*         IF IT HAPPENS BY CHANCE TO WORK, THE CONTENTS OF THE
*         EXPANDED AREA WILL BE UNPREDICTABLE.
*
*         IF AN UNQUALIFIED DATA SET NAME IS ENTERED, THE
*         CATALOG MUST BE READ TWICE, ONCE TO APPEND A
*         TRAILING QUALIFIER IF NECESSARY, AND AGAIN DURING
*         ALLOCATION. THE USER CAN ELIMINATE THE FIRST BY USING
*         THE FULLY QUALIFIED NAME, PREFIX AND ALL, IN QUOTES,
*         OR BY ENTERING ALL BUT THE PREFIX, WITHOUT QUOTES,
*         PLUS THE KEYWORD 'Q'. THE LATTER IS MUCH SIMPLER
*         AND GIVES THE SAME PERFORMANCE IMPROVEMENT AS A
*         FULLY QUALIFIED NAME.
*
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
COPYSDS  START
         USING *,R12,R11
         B     @START-*(,R15)
         DC    AL1(11),CL11'COPYSDS '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@START   STM   14,12,12(13)
         LR    R12,R15             BASE
         LA    R15,1
         LA    R11,4095(R15,R12)   BASE
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         ST    13,4(,1)            CHAIN SAVEAREA
         ST    1,8(,13)            CHAIN SAVEAREA
         LR    13,1                NEW SAVEAREA
         SPACE 1
         MVI   STATUS,0
         XC    LINKAREA(8),LINKAREA
         SLR   R15,R15
         STH   R15,RC              SET RC = 0
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLOADX            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
*        L     R0,=A(COPYSPCL)
         LA    R0,PCLADDR
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS(4),MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         LA    R15,12
         B     EXIT
PARSEOK  EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*         INTERPRET THE 'BYPASS' OPERAND                   *
*                                                          *
************************************************************
         SPACE
         LA    R4,BYP
         TM    6(R4),X'80'         IS BYP PRESENT
         BZ    NOBYP
         LH    R14,4(,R4)          GET LENGTH OF BYP DIGITS
         BCTR  R14,0
         L     R1,0(,R4)           POINT TO BYP DIGITS
         B     *+10
         PACK  DOUBLE(8),0(0,R1)   (EXECUTED)
         EX    R14,*-6
         CVB   R1,DOUBLE
         ST    R1,SKIPCT
NOBYP    EQU   *
         SPACE
************************************************************
*                                                          *
*         INTERPRET THE 'MAXLINES' OPERAND                 *
*                                                          *
************************************************************
         SPACE
         MVI   MAXLINES,X'7F'
         LA    R4,MAX
         TM    6(R4),X'80'         IS IST MAX PRESENT
         BZ    NOMAX
         LH    R14,4(,R4)          GET LENGTH OF MAX DIGITS
         BCTR  R14,0
         L     R1,0(,R4)           POINT TO MAX DIGITS
         B     *+10
         PACK  DOUBLE(8),0(0,R1)   (EXECUTED)
         EX    R14,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1               MAX(0) SPECIFIED
         BP    SETMAX              YES, IGNORE
         LA    R1,1
SETMAX   ST    R1,MAXLINES
NOMAX    EQU   *
         SPACE
************************************************************
*                                                          *
*         GET THE INPUT UNIT NAME IF SPECIFIED             *
*                                                          *
************************************************************
         SPACE
         MVC   UNITNAME(8),=CL8' '
         LA    R4,IUNIT
         TM    6(R4),X'80'         IS UNIT SPECIFIED
         BZ    NOUNITI
         LH    R14,4(,R4)          GET LENGTH OF UNIT
         BCTR  R14,0
         L     R1,0(,R4)           POINT TO UNIT NAME
         B     *+10
         MVC   UNITNAME(0),0(R1)   (EXECUTED)
         EX    R14,*-6
NOUNITI  EQU   *
         SPACE
************************************************************
*                                                          *
*         GET THE INPUT VOLUME IF SPECIFIED                *
*                                                          *
************************************************************
         SPACE
         MVC   VOLUME(6),=CL8' '
         LA    R4,IVOL
         TM    6(R4),X'80'         IS VOLUME SPECIFIED
         BZ    NOVOLI
         LH    R14,4(,R4)          GET LENGTH OF UNIT
         BCTR  R14,0
         L     R1,0(,R4)           POINT TO VOLUME NAME
         B     *+10
         MVC   VOLUME(0),0(R1)     (EXECUTED)
         EX    R14,*-6
NOVOLI   EQU   *
         SPACE
************************************************************
*                                                          *
*        QUALIFY THE INPUT DSNAME IF NECESSARY             *
*                                                          *
************************************************************
         SPACE
         LA    R4,DSNI             POINT TO FIRST DSN PDE
         TM    6(R4),X'80'         IS DATASET NAME SPECIFIED?
         BO    OKDSNI              YES - BRANCH
         LA    R1,MSG05            NO - JUST MEMBER NAME
         LA    R0,L'MSG05
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSNI   EQU   *
         LA    R15,DSNAME+2
         MVI   0(R15),C' '         BLANK THE DSNAME AREA
         MVC   1(43,R15),0(R15)
         SLR   R1,R1
         STH   R1,DSNAME           ZERO DSNAME LENGTH
         TM    6(R4),X'40'         IS DSN QUOTED?
         BO    NOPREFI             YES, SKIP PREFIXING
         CLI   FILEKW+1,1          DSN TO BE TREATED AS DDNAME
         BE    NOPREFI             YES, SKIP PREFIXING
         AIF   (NOT &MVS).SKIPPI   PREFIX WITH PREFIX
         L     R14,CPPLUPT         POINT TO UPT
         USING UPT,R14
         IC    R1,UPTPREFL         GET LENGTH OF PREFIX
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREFI             YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),UPTPREFX
         DROP  R14                 UPT
.SKIPPI  AIF   (&MVS).SKIPUI       PREFIX WITH USERID
         L     R14,CPPLPSCB        POINT TO PSCB
         USING PSCB,R14
         IC    R1,PSCBUSRL         GET LENGTH OF USERID
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREFI             YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),PSCBUSER
         DROP  R14                 PSCB
.SKIPUI  ANOP
         EX    R1,*-6              MOVE USERID TO DSNAME AREA
         LA    R15,0(R1,R15)       POINT PAST USERID
         MVI   0(R15),C'.'         APPEND PERIOD
         LA    R15,1(,R15)         POINT PAST PERIOD
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         STH   R1,DSNAME           STORE LENGTH OF USERID PLUS 1
NOPREFI  EQU   *
         LH    R1,4(,R4)           GET LENGTH
         LR    R0,R1
         AH    R0,DSNAME           ADD LENGTH OF PREFIX OR ZERO
         STH   R0,DSNAME           SET COMBINED LENGTH
         L     R14,0(,R4)          POINT TO DSN VALUE
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   0(0,R15),0(R14)     (EXECUTED)
         EX    R1,*-6              MOVE DSN TO DSNAME (AFTER PREFIX)
         SPACE
************************************************************
*                                                          *
*        IF 'FILE' KEYWORD IS SPECIFIED,                   *
*        GET INPUT DSNAME FROM JFCB USING FILE NAME.       *
*                                                          *
************************************************************
         SPACE
         CLI   FILEKW+1,1          'FILE' SPECIFIED?
         BNE   NOFILEI             NO, BRANCH
         CLI   DSNAME+1,8          IS LENGTH 8 OR LESS
         BH    FILERR1             NO, BRANCH
         DEVTYPE DSNAME+2,DEVDATA  GET DEVICE TYPE
         LTR   R15,R15             WAS FILENAME VALID
         BNZ   FILERR2             NO, BRANCH
         TM    DEVDATA+2,X'20'     DIRECT ACCESS
         BZ    FILERR3             NO, BRANCH
         LA    R6,UT1DCBW
         MVC   0(UT1DCBL,R6),UT1DCB
         LA    R0,JFCB
         LA    R1,UT1EXLST
         ST    R0,0(,R1)
         MVI   0(R1),X'87'
         ST    R1,36(,R6)          DCBEXLST
         MVC   40(8,R6),DSNAME+2   DCBDDNAM
         MVC   DDSAVEI,DSNAME+2
         MVI   OPEND,X'80'
         RDJFCB ((R6)),MF=(E,OPEND)
         MVC   DSNAME+2(44),JFCB
         LA    R1,DSNAME+45        LAST CHAR OF DSNAME
         LA    R0,44               INITIAL LENGTH
FILEA    CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   FILEB               YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,FILEA            DECREMENT LENGTH AND BRANCH
FILEB    STH   R0,DSNAME           STORE LENGTH OF DSNAME
*        MVC   VOLUME(6),JFCB+118 GET VOLUME FROM JFCB
         B     FILESPEC
         SPACE
FILERR1  LA    R0,MSG14A
         B     FILERR
FILERR2  LA    R0,MSG14B
         B     FILERR
FILERR3  LA    R0,MSG14C
FILERR   MVC   MSGWK(L'MSG14),MSG14
         LA    R15,MSGWK+L'MSG14
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG14(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         LR    R14,R0 POINT TO MSG14A, B, OR C
         MVC   0(L'MSG14A,R15),0(R14)
         LA    R0,L'MSG14+L'MSG14A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTD12
         SPACE
************************************************************
*                                                          *
*        FIND THE TRAILING QUALIFIER IN THE CATALOG        *
*        USING THE DEFAULT SERVICE ROUTINE.                *
*                                                          *
************************************************************
         SPACE
NOFILEI  EQU   *
         TM    6(R4),X'40'         IS IT QUOTED?
         BO    DEFIX               YES - SKIP DEFAULT SERVICE
         CLI   QUICKW+1,1          QUICK SPECIFIED
         BE    DEFIX               YES, USER ENTERED ALL BUT PREFIX
         CLI   UNITNAME,C' '       IS UNIT SPECIFIED
         BNE   DEFIX               YES, DONT USE CATALOG
         CLI   VOLUME,C' '         IS VOLUME SPECIFIED
         BNE   DEFIX               YES, DONT USE CATALOG
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         LA    R14,MYDFPB
         ST    R14,IOPLIOPB
         USING DFPB,R14
         XC    0(20,R14),0(R14)
         LA    R0,DSNAME
         ST    R0,DFPBDSN
         OI    DFPBCODE,X'04'      SEARCH CAT AND PROMPT IF MULTI
         MVC   DFPBPSCB,CPPLPSCB
*        MVI   DFPBCNTL,X'20'      PREFIX THE DSNAME
         DROP  R14                 DFPB
         SPACE
         LA    R1,MYIOPL
         SPACE
         LR    R1,R15              POINT TO IOPL
         AIF   (NOT &MVS).SKIP4
         L     R15,16              CVTPTR
         TM    736(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   EHDEFLNK               THEN DO LINK, NOT CALL
         L     R15,736(,R15)       CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     EHDEFEXT            SKIP AROUND LINK
EHDEFLNK EQU   *
.SKIP4   ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
EHDEFEXT EQU   *
         SPACE
         B     DEFCODEI(R15)
DEFCODEI B     DEFI00              SUCCESS
         B     NEXTDSN              MSG ALREADY ISSUED
         B     DEFI08              INVALID NAME GT 44
         B     NEXTDSN              MSG ALREADY ISUED
         B     DEFI16              NOT IN CATALOG
         B     DEFI20              NOT IN CATALOG
         B     DEFI24              IMPOSSIBLE
         B     DEFI28              COMMAND SYSTEM ERROR
         B     DEFI32              IMPOSSIBLE
         B     DEFI36              ?
DEFI08   EQU   *
DEFI16   EQU   *
         B     DEFI24
DEFI20   EQU   *
         MVC   MSGWK(L'MSG02),MSG02
         LA    R15,MSGWK+L'MSG02
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG02(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(L'MSG02A,R15),MSG02A
         LA    R0,L'MSG02+L'MSG02A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTDSN
DEFI24   EQU   *
DEFI28   EQU   *
DEFI32   EQU   *
DEFI36   EQU   *
         LA    R1,MSG03
         LA    R0,L'MSG03
         BAL   R14,PUTMSG
         B     NEXTDSN
         SPACE
DEFI00   EQU   *
DEFIX    EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE DATASET                              *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1                  DAPL
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),=CL8' '
         MVC   DA08UNIT,UNITNAME
         MVC   DA08SER,=CL8' '
         MVC   DA08SER(6),VOLUME
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         TM    14(R4),X'80'        MEMBER SPECIFIED?
         BZ    MEMBXI              NO - BRANCH
         LH    R1,12(,R4)          GET LENGTH OF MEMBER
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,8(,R4)          GET ADDRESS OF MEMBER NAME
         B     *+10
         MVC   DA08MNM(0),0(R14)   MOVE MEMBER NAME
         EX    R1,*-6
MEMBXI   EQU   *
         TM    22(R4),X'80'        PASSWORD SPECIFIED?
         BZ    PASSXI              NO - BRANCH
         LH    R1,20(,R4)          GET LENGTH OF PSWD
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,16(,R4)         GET ADDRESS OF PSWD
         B     *+10
         MVC   DA08PSWD(0),0(R14)  MOVE PSWD
         EX    R1,*-6
PASSXI   EQU   *
         LA    R1,MYDAPL
         SPACE
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BZ    OKDAIRI
         BAL   R14,DAIRFAIL
         LA    R15,12
         B     NEXTDSN
OKDAIRI  EQU   *
         OI    STATUS,STAT1F       TELL CLEANUP TO FREE IT
         LA    R15,MYDAPB
         MVC   DDSAVEI,DA08DDN
         TM    DA08DSO,X'40'       IS DSORG SEQUENTIAL?
         BO    OKDSORG             YES - BRANCH
         TM    DA08DSO,X'02'       IS DSORG PARTITIONED?
         BO    OKDSORGP            YES, BRANCH
*
*              DSORG IS NEITHER PS NOR PO
*              ISAM=X'80' DA=X'20' VSAM=X'00' NONE=X'00'
*
ERRDSORG LA    R1,MSG06
         LA    R0,L'MSG06
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSORGP EQU   *
         CLC   DA08MNM,=CL8' '     WAS MEMBER SPECIFIED?
         BNE   OKDSORG             YES - BRANCH
         LA    R1,MSG07
         LA    R0,L'MSG07
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSORG  EQU   *
         DROP  R15                 DAPB08
         SPACE
************************************************************
*                                                          *
*        CHECK FORMAT-1 DSCB FOR EMPTY DATA SET            *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         LA    R1,24(,R1)          TOIENTRY
DDLOOP   CLI   0(R1),0             END OF TIOT
         BE    NEXTDSN             YES, BRANCH (NEVER HAPPENS)
         CLC   4(8,R1),DDSAVEI     DOES DDNAME MATCH
         BE    DDFOUND
         SLR   R15,R15
         IC    R15,0(,R1)
         LA    R1,0(R15,R1)
         B     DDLOOP
DDFOUND  L     R15,16(,R1)         TIOEFSRT-1
         TM    18(R15),X'20'       DIRECT ACCESS DEVICE?
         BZ    OBTX                NO, BYPASS OBTAIN
         TM    0(R15),X'80'        VIO
         BO    OBTX                YES, BYPASS OBTAIN
         MVC   VOLSER,28(R15)      UCBVOLI
OBTDSCB  LA    R1,OBTAINW
         MVC   0(OBTAINL,R1),OBTAIN
         LA    R0,DSNAME+2         DSN FOR OBTAIN
         ST    R0,4(,R1)
         LA    R0,VOLSER           VOLUME FOR OBTAIN
         ST    R0,8(,R1)
         LA    R0,MYDSCB           ANSWER AREA FOR OBTAIN
         ST    R0,12(,R1)
         OBTAIN (1)
         LTR   R15,R15             WAS OBTAIN SUCCESSFUL
         BZ    OKDSCB              YES, BRANCH
         SPACE
*               OBTAIN HAS FAILED. HOW CAN THAT HAPPEN WHEN
*               DYNAMIC ALLOCATION WAS SUCCESSFUL? ONE WAY IT
*               CAN HAPPEN IS IF THE DSNAME IS AN ALIAS ENTRY
*               IN A VSAM CATALOG.  IF IT IS, A 'LOCATE' WILL
*               PUT THE TRUE NAME IN THE DSNAME FIELD, SO NOW
*               WE ISSUE A LOCATE, AND TRY THE OBTAIN AGAIN.
         SPACE
         TM    STATUS,STATL        HAS LOCATE BEEN TRIED ALREADY?
         BZ    ALIAS               NO, GO TRY IT
ERROBT   LA    R1,MSG09            UNABLE TO OBTAIN DSCB
         LA    R0,L'MSG09
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
ALIAS    OI    STATUS,STATL        TRIP THE SWITCH
         LA    R1,LOCATEW
         MVC   0(LOCATEL,R1),LOCATE
         LA    R0,DSNAME+2         DSNAME FOR LOCATE
         ST    R0,4(,R1)
         LA    R0,LOCBUF           ANSWER AREA FOR LOCATE
         ST    R0,12(,R1)
         LOCATE (1)
         LTR   15,15               WAS LOCATE SUCCESSFUL?
         BZ    OBTDSCB             YES, GO OBTAIN AGAIN
         B     ERROBT              NO, ISSUE MESSAGE
         SPACE
OKDSCB   NI    STATUS,255-STATL    TURN OFF LOCATE SWITCH
         TM    MYDSCB-44+X'52',X'42' DSORG = PS OR PO
         BZ    ERRDSORG
*        TM    MYDSCB-44+X'54',X'C0' RECFM = U
*        BO    ERRRECFM
         CLC   MYDSCB-44+X'62'(3),=X'000000' CHECK DS1LSTAR
         BE    UT1EOD              BRANCH IF EMPTY DATA SET
OBTX     EQU   *
FILESPEC EQU   *
         SPACE
************************************************************
*                                                          *
*         GET THE OUTPUT UNIT NAME IF SPECIFIED            *
*                                                          *
************************************************************
         SPACE
         MVC   UNITNAME(8),=CL8' '
         LA    R4,OUNIT
         TM    6(R4),X'80'         IS UNIT SPECIFIED
         BZ    NOUNITO
         LH    R14,4(,R4)          GET LENGTH OF UNIT
         BCTR  R14,0
         L     R1,0(,R4)           POINT TO UNIT NAME
         B     *+10
         MVC   UNITNAME(0),0(R1)   (EXECUTED)
         EX    R14,*-6
NOUNITO  EQU   *
         SPACE
************************************************************
*                                                          *
*         GET THE OUTPUT VOLUME IF SPECIFIED               *
*                                                          *
************************************************************
         SPACE
         MVC   VOLUME(6),=CL8' '
         LA    R4,OVOL
         TM    6(R4),X'80'         IS VOLUME SPECIFIED
         BZ    NOVOLO
         LH    R14,4(,R4)          GET LENGTH OF UNIT
         BCTR  R14,0
         L     R1,0(,R4)           POINT TO VOLUME NAME
         B     *+10
         MVC   VOLUME(0),0(R1)     (EXECUTED)
         EX    R14,*-6
NOVOLO   EQU   *
         SPACE
************************************************************
*                                                          *
*        QUALIFY THE OUTPUT DSNAME IF NECESSARY            *
*                                                          *
************************************************************
         SPACE
         LA    R4,DSNO             POINT TO FIRST DSN PDE
         TM    6(R4),X'80'         IS DATASET NAME SPECIFIED?
         BO    OKDSNO              YES - BRANCH
         LA    R1,MSG05            NO - JUST MEMBER NAME
         LA    R0,L'MSG05
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSNO   EQU   *
         LA    R15,DSNAME+2
         MVI   0(R15),C' '         BLANK THE DSNAME AREA
         MVC   1(43,R15),0(R15)
         SLR   R1,R1
         STH   R1,DSNAME           ZERO DSNAME LENGTH
         TM    6(R4),X'40'         IS DSN QUOTED?
         BO    NOPREFO             YES, SKIP PREFIXING
         CLI   FILEKW+1,1          DSN TO BE TREATED AS DDNAME
         BE    NOPREFO             YES, SKIP PREFIXING
         AIF   (NOT &MVS).SKIPPO   PREFIX WITH PREFIX
         L     R14,CPPLUPT         POINT TO UPT
         USING UPT,R14
         IC    R1,UPTPREFL         GET LENGTH OF PREFIX
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREFO             YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),UPTPREFX
         DROP  R14                 UPT
.SKIPPO  AIF   (&MVS).SKIPUO       PREFIX WITH USERID
         L     R14,CPPLPSCB        POINT TO PSCB
         USING PSCB,R14
         IC    R1,PSCBUSRL         GET LENGTH OF USERID
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREFO             YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),PSCBUSER
         DROP  R14                 PSCB
.SKIPUO  ANOP
         EX    R1,*-6              MOVE USERID TO DSNAME AREA
         LA    R15,0(R1,R15)       POINT PAST USERID
         MVI   0(R15),C'.'         APPEND PERIOD
         LA    R15,1(,R15)         POINT PAST PERIOD
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         STH   R1,DSNAME           STORE LENGTH OF USERID PLUS 1
NOPREFO  EQU   *
         LH    R1,4(,R4)           GET LENGTH
         LR    R0,R1
         AH    R0,DSNAME           ADD LENGTH OF PREFIX OR ZERO
         STH   R0,DSNAME           SET COMBINED LENGTH
         L     R14,0(,R4)          POINT TO DSN VALUE
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   0(0,R15),0(R14)     (EXECUTED)
         EX    R1,*-6              MOVE DSN TO DSNAME (AFTER PREFIX)
         SPACE
************************************************************
*                                                          *
*        IF 'FILE' KEYWORD IS SPECIFIED,                   *
*        GET OUTPUT DSNAME FROM JFCB USING FILE NAME.      *
*                                                          *
************************************************************
         SPACE
         CLI   FILEKW+1,1          'FILE' SPECIFIED?
         BNE   NOFILEO             NO, BRANCH
         CLI   DSNAME+1,8          IS LENGTH 8 OR LESS
         BH    FILERR1             NO, BRANCH
         DEVTYPE DSNAME+2,DEVDATA  GET DEVICE TYPE
         LTR   R15,R15             WAS FILENAME VALID
         BNZ   FILERR2             NO, BRANCH
         TM    DEVDATA+2,X'20'     DIRECT ACCESS
         BZ    FILERR3             NO, BRANCH
         LA    R6,UT1DCBW
         MVC   0(UT1DCBL,R6),UT1DCB
         LA    R0,JFCB
         LA    R1,UT2EXLST
         ST    R0,0(,R1)
         MVI   0(R1),X'87'
         ST    R1,36(,R6)          DCBEXLST
         MVC   40(8,R6),DSNAME+2   DCBDDNAM
         MVC   DDSAVEO,DSNAME+2
         MVI   OPEND,X'80'
         RDJFCB ((R6)),MF=(E,OPEND)
         MVC   DSNAME+2(44),JFCB
         LA    R1,DSNAME+45        LAST CHAR OF DSNAME
         LA    R0,44               INITIAL LENGTH
FILEOA   CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   FILEOB              YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,FILEOA           DECREMENT LENGTH AND BRANCH
FILEOB   STH   R0,DSNAME           STORE LENGTH OF DSNAME
*        MVC   VOLUME(6),JFCB+118  GET VOLUME FROM JFCB
         B     FILOSPEC
         SPACE
************************************************************
*                                                          *
*        FIND THE TRAILING QUALIFIER IN THE CATALOG        *
*        USING THE DEFAULT SERVICE ROUTINE.                *
*                                                          *
************************************************************
         SPACE
NOFILEO  EQU   *
         TM    6(R4),X'40'         IS IT QUOTED?
         BO    DEFOX               YES - SKIP DEFAULT SERVICE
         CLI   QUICKW+1,1          QUICK SPECIFIED
         BE    DEFOX               YES, USER ENTERED ALL BUT PREFIX
         CLI   UNITNAME,C' '       IS UNIT SPECIFIED
         BNE   DEFOX               YES, DONT USE CATALOG
         CLI   VOLUME,C' '         IS VOLUME SPECIFIED
         BNE   DEFOX               YES, DONT USE CATALOG
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         LA    R14,MYDFPB
         ST    R14,IOPLIOPB
         USING DFPB,R14
         XC    0(20,R14),0(R14)
         LA    R0,DSNAME
         ST    R0,DFPBDSN
         OI    DFPBCODE,X'04'      SEARCH CAT AND PROMPT IF MULTI
         MVC   DFPBPSCB,CPPLPSCB
*        MVI   DFPBCNTL,X'20'      PREFIX THE DSNAME
         DROP  R14                 DFPB
         SPACE
         LA    R1,MYIOPL
         SPACE
         LR    R1,R15              POINT TO IOPL
         AIF   (NOT &MVS).SKIPO4
         L     R15,16              CVTPTR
         TM    736(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   EHDEFLNO               THEN DO LINK, NOT CALL
         L     R15,736(,R15)       CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     EHDEFEXO            SKIP AROUND LINK
EHDEFLNO EQU   *
.SKIPO4  ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
EHDEFEXO EQU   *
         SPACE
         B     DEFCODEO(R15)
DEFCODEO B     DEFO00              SUCCESS
         B     NEXTDSN              MSG ALREADY ISSUED
         B     DEFO08              INVALID NAME GT 44
         B     NEXTDSN              MSG ALREADY ISUED
         B     DEFO16              NOT IN CATALOG
         B     DEFO20              NOT IN CATALOG
         B     DEFO24              IMPOSSIBLE
         B     DEFO28              COMMAND SYSTEM ERROR
         B     DEFO32              IMPOSSIBLE
         B     DEFO36              ?
DEFO08   EQU   *
DEFO16   EQU   *
         B     DEFO24
DEFO20   EQU   *
         MVC   MSGWK(L'MSG02),MSG02
         LA    R15,MSGWK+L'MSG02
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG02(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(L'MSG02A,R15),MSG02A
         LA    R0,L'MSG02+L'MSG02A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTDSN
DEFO24   EQU   *
DEFO28   EQU   *
DEFO32   EQU   *
DEFO36   EQU   *
         LA    R1,MSG03
         LA    R0,L'MSG03
         BAL   R14,PUTMSG
         B     NEXTDSN
         SPACE
DEFO00   EQU   *
DEFOX    EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE DATASET                              *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1                  DAPL
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),=CL8' '
         MVC   DA08UNIT,UNITNAME
         MVC   DA08SER,=CL8' '
         MVC   DA08SER(6),VOLUME
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08OLD
         CLI   SHRKW+1,2           'SHR' SPECIFIED
         BNE   *+8                 NO
         MVI   DA08DSP1,DA08SHR    YES
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         TM    14(R4),X'80'        MEMBER SPECIFIED?
         BZ    MEMBXO              NO - BRANCH
         LH    R1,12(,R4)          GET LENGTH OF MEMBER
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,8(,R4)          GET ADDRESS OF MEMBER NAME
         B     *+10
         MVC   DA08MNM(0),0(R14)   MOVE MEMBER NAME
         EX    R1,*-6
MEMBXO   EQU   *
         TM    22(R4),X'80'        PASSWORD SPECIFIED?
         BZ    PASSXO              NO - BRANCH
         LH    R1,20(,R4)          GET LENGTH OF PSWD
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,16(,R4)         GET ADDRESS OF PSWD
         B     *+10
         MVC   DA08PSWD(0),0(R14)  MOVE PSWD
         EX    R1,*-6
PASSXO   EQU   *
         LA    R1,MYDAPL
         SPACE
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BZ    OKDAIRO
         BAL   R14,DAIRFAIL
         LA    R15,12
         B     NEXTDSN
OKDAIRO  EQU   *
         OI    STATUS,STAT2F       TELL CLEANUP TO FREE IT
         LA    R15,MYDAPB
         MVC   DDSAVEO,DA08DDN
         TM    DA08DSO,X'40'       IS DSORG SEQUENTIAL?
         BO    OKDSOSO             YES - BRANCH
         TM    DA08DSO,X'02'       IS DSORG PARTITIONED?
         BO    OKDSOPO             YES, BRANCH
*
*              DSORG IS NEITHER PS NOR PO
*              ISAM=X'80' DA=X'20' VSAM=X'00' NONE=X'00'
*
         TM    DA08DSO,X'00'       IS DSORG UNKNOWN
         BO    OKDSOSO             YES - BRANCH
         LA    R1,MSG06
         LA    R0,L'MSG06
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSOPO  EQU   *
         CLC   DA08MNM,=CL8' '     WAS MEMBER SPECIFIED?
         BNE   OKDSOSO             YES - BRANCH
         LA    R1,MSG07
         LA    R0,L'MSG07
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSOSO  EQU   *
         DROP  R15                 DAPB08
FILOSPEC EQU   *
         SPACE
************************************************************
*                                                          *
*        SET UP THE INPUT DCB                              *
*                                                          *
************************************************************
         SPACE
         MVC   UT1DCBW(UT1DCBL),UT1DCB
         MVC   UT2DCBW(UT2DCBL),UT2DCB
         LA    R6,UT1DCBW
         LA    R7,UT2DCBW
         USING IHADCB,R6
         MVC   DCBDDNAM,DDSAVEI
         SPACE
         LA    R15,UT1EOD
         IC    R0,DCBEODAD-1
         ST    R15,DCBEODAD-1
         STC   R0,DCBEODAD-1
         SPACE
         LA    R15,DYNSYNAD
         IC    R0,DCBSYNAD-1
         ST    R15,DCBSYNAD-1
         STC   R0,DCBSYNAD-1
         SPACE
         LA    R15,UT1EXLST
         IC    R0,DCBEXLSA-1
         ST    R15,DCBEXLSA-1
         STC   R0,DCBEXLSA-1
         LA    R1,UT1DCBEX
         ST    R1,0(,R15)
         MVI   0(R15),X'05'
         LA    R1,DYNABEND
         ST    R1,4(,R15)
         MVI   4(R15),128+X'11'    OPEN ABEND EXIT (MVS)
         SPACE
         OI    STATUS,STAT1O       TELL CLEANUP TO CLOSE DCB
         MVI   OPEND,X'80'
         SPACE
         OPEN  ((R6),INPUT),MF=(E,OPEND)
         SPACE
         MVC   UT1RECFM,DCBRECFM   COPY RECFM
         MVC   UT1LRECL,DCBLRECL   COPY LRECL
         MVC   UT1BLKSI,DCBBLKSI   COPY BLKSIZE
         TM    DCBOFLGS,X'10'
         BO    OKOPEN
         DROP  R6                  IHADCB
         LA    R1,MSG08
         LA    R0,L'MSG08
         TM    STATUS,STATM        MEMBER NOT FOUND?
         BO    DYNOPENM            YES, BRANCH
         LA    R1,MSG04
         LA    R0,L'MSG04
DYNOPENM BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
         SPACE
UT1DCBEX EQU   *
         USING IHADCB,R1
         TM    DCBRECFM,X'C0'      RECFM U
         BOR   R14                 YES - BRANCH
         TM    DCBRECFM,X'48'      VARIABLE SPANNED
         BNOR  R14                 NO - BRANCH
         OI    DCBBFTEK,X'60'      BFTEK=A
         BR    R14
         DROP  R1
         SPACE
DYNABEND EQU   *
         L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    *+10                YES, BRANCH
         MVI   4(R1),0             ABNORMALLY TERMINATE
         BR    R14
         OI    STATUS,STATM        INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
         SPACE
OKOPEN   EQU   *
         LH    R0,UT1LRECL
         LTR   R0,R0               IS LRECL 0
         BNZ   *+8                 NO
         LH    R0,UT1BLKSI         YES, USE BLKSIZE
         STH   R0,UT1RECLN         INPUT RECORD LENGTH
         SPACE
************************************************************
*                                                          *
*        SET UP THE OUTPUT DCB                             *
*                                                          *
************************************************************
         SPACE
         USING IHADCB,R7
         MVC   DCBDDNAM,DDSAVEO
         SPACE
         LA    R15,DYNSYNAD
         IC    R0,DCBSYNAD-1
         ST    R15,DCBSYNAD-1
         STC   R0,DCBSYNAD-1
         SPACE
         LA    R15,UT2EXLST
         IC    R0,DCBEXLSA-1
         ST    R15,DCBEXLSA-1
         STC   R0,DCBEXLSA-1
         LA    R1,UT2DCBEX
         ST    R1,0(,R15)
         MVI   0(R15),X'85'
         SPACE
         OI    STATUS,STAT2O       TELL CLEANUP TO CLOSE DCB
         MVI   OPEND,X'80'
         SPACE
         OPEN  ((R7),OUTPUT),MF=(E,OPEND)
         SPACE
         MVC   UT2RECFM,DCBRECFM
         MVC   UT2LRECL,DCBLRECL
         MVC   UT2BLKSI,DCBBLKSI
         TM    DCBOFLGS,X'10'
         BO    OKOPENO
         DROP  R7                  IHADCB
         LA    R1,MSG04
         LA    R0,L'MSG04
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
         SPACE
UT2DCBEX EQU   *
         USING IHADCB,R1
         CLI   DCBRECFM,0
         BNE   *+10
         MVC   DCBRECFM(1),DCBRECFM-IHADCB(R6)
         CLC   DCBLRECL,=H'0'
         BNE   *+10
         MVC   DCBLRECL(2),DCBLRECL-IHADCB(R6)
         CLC   DCBBLKSI,=H'0'
         BNE   *+10
         MVC   DCBBLKSI(2),DCBBLKSI-IHADCB(R6)
         BR    R14
         DROP  R1                  IHADCB
         SPACE
OKOPENO  EQU   *
         LH    R0,UT2LRECL
         LTR   R0,R0               IS LRECL 0
         BNZ   *+8                 NO
         LH    R0,UT2BLKSI         YES, USE BLKSIZE
         STH   R0,UT2RECLN         INPUT RECORD LENGTH
         SPACE
************************************************************
*                                                          *
*        PREPARE TO COPY                                   *
*                                                          *
************************************************************
         SPACE
         TM    UT1RECFM,X'C0'      IS RECFM U
         BNO   *+8                 NO
         NI    UT1RECFM,255-X'C0'  YES, SET OFF F AND V BITS
         SPACE
         TM    UT2RECFM,X'C0'      IS RECFM U
         BNO   *+8                 NO
         NI    UT2RECFM,255-X'C0'  YES, SET OFF F AND V BITS
         SPACE
         MVC   TSTRECFM,UT1RECFM
         NI    TSTRECFM,X'F0'      ZERO RIGHT HALF
         SLR   R0,R0
         IC    R0,UT2RECFM
         SRL   R0,4                SHIFT OUTPUT RECFM 4 BITS RIGHT
         STC   R0,DOUBLE
         OC    TSTRECFM,DOUBLE     PUT OUTPUT RECFM IN RIGHT 4 BITS
         SPACE
         LA    R15,4
         TM    TSTRECFM,X'88'      FIXED TO FIXED
         BO    PROCSET
         TM    TSTRECFM,X'44'      VARIABLE TO VARIABLE
         BO    PROCSET
         SPACE
         LA    R15,8
         TM    TSTRECFM,X'CC'      UNDEFINED TO UNDEFINED
         BO    PROCSET
         SPACE
         LA    R15,12
         TM    TSTRECFM,X'84'      FIXED TO VARIABLE
         BO    PROCFV
         SPACE
         LA    R15,20
         TM    TSTRECFM,X'48'      VARIABLE TO FIXED
         BO    PROCVF
         SPACE
         SLR   R15,R15             CANNOT CONVERT
         B     PROCSET
         SPACE
PROCFV   CLI   NUMKW+1,1           NUMBERED
         BNE   PROCFVN             NO, BRANCH
         LH    R1,UT1RECLN         GET INPUT RECORD LENGTH
         CH    R1,=H'264'          CAN WE HANDLE IT
         BH    S0C3                NO
         B     PROCSET
PROCFVN  LA    R15,16
         LH    R1,UT1RECLN         GET INPUT RECORD LENGTH
         CH    R1,=H'256'          CAN WE HANDLE IT
         BH    S0C3                NO
         B     PROCSET
         SPACE
PROCVF   CLI   NUMKW+1,1           NUMBERED
         BNE   PROCVFN             NO, BRANCH
         LH    R1,UT2RECLN         GET OUTPUT RECORD LENGTH
         CH    R1,=H'264'          CAN WE HANDLE IT
         BH    S0C3                NO
         B     PROCSET
PROCVFN  LA    R15,24
         LH    R1,UT2RECLN         GET OUTPUT RECORD LENGTH
         CH    R1,=H'256'          CAN WE HANDLE IT
         BH    S0C3                NO
         B     PROCSET
         SPACE
PROCSET  STH   R15,PROCVAL
         LA    R1,WORKA            MAY REPLACE THIS WITH GETMAIN LATER
         ST    R1,WORKPTR
         SPACE
         L     R0,MAXLINES         INITIAL LOAD MAXLINES
READCT   ST    R0,MAXLINES
READLOOP EQU   *
         MVI   SYNADSW,0           SET SYNAD SWITCH OFF
         SPACE
         GET   (R6)
         SPACE
         CLI   SYNADSW,0           WAS SYNAD EXIT TAKEN?
         BE    OKGET               NO - BRANCH
         LA    R1,SYNADMSG
         LA    R0,78
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKGET    EQU   *
         LR    R5,R1               POINT TO RECORD
         LH    R15,PROCVAL         GET PROCESS VALUE
         L     R14,KOUNT
         A     R14,=F'1'
         ST    R14,KOUNT
         C     R14,SKIPCT
         BH    PROCESS(R15)
         B     READLOOP            SKIP THIS RECORD
         SPACE
PROCESS  EX    R0,*                0    S0C3 ABEND
         B     PUT                 4    F-TO-F  V-TO-V
         B     PUTU                8    U-TO-U
         B     PUTFVS              12   F-TO-V  NUM
         B     PUTFVN              16   F-TO-V  NONUM
         B     PUTVFS              20   F-TO-V  NUM
         B     PUTVFN              24   F-TO-V  NONUM
         SPACE
PUTFVN   L     R8,WORKPTR
         LH    R1,UT1RECLN         GET INPUT RECORD LENGTH
         BCTR  R1,0
         EX    R1,MVCFVN
         LA    R14,04(R1,R8)       POINT TO LAST BYTE
         A     R1,=F'1'            RESTORE LENGTH
PUTFVNL  CLI   0(R14),X'40'        TRAILING BLANK
         BNE   PUTFVNX             NO, GO SET LENGTH
         BCTR  R14,0               YES, BACK UP ANOTHER
         BCT   R1,PUTFVNL          AND LOOP
         LA    R1,1                ALL BLANKS, JUST USE 1
PUTFVNX  A     R1,=F'4'            PLUS RDW
         SLL   R1,16
         ST    R1,0(,R8)           STORE RDW
         LR    R5,R8
         B     PUT
MVCFVN   MVC   04(0,R8),0(R5)      EXECUTED
         SPACE
PUTFVS   L     R8,WORKPTR
         LH    R1,UT1RECLN         GET INPUT RECORD LENGTH
         SH    R1,=H'8'            NUMBERED
         BNP   S0C3                NULL RECORD
         LA    R14,0(R1,R5)        POINT TO SEQUENCE NUMBER
         MVC   4(8,R8),0(R14)      MOVE SEQUENCE NUMBER
         BCTR  R1,0
         EX    R1,MVCFVS
         LA    R14,12(R1,R8)       POINT TO LAST BYTE
         A     R1,=F'1'            RESTORE LENGTH
PUTFVSL  CLI   0(R14),X'40'        TRAILING BLANK
         BNE   PUTFVSX             NO, GO SET LENGTH
         BCTR  R14,0               YES, BACK UP ANOTHER
         BCT   R1,PUTFVSL          AND LOOP
         LA    R1,1                ALL BLANKS, JUST USE 1
PUTFVSX  A     R1,=F'12'           PLUS RDW PLUS SEQUENCE NUMBER
         SLL   R1,16
         ST    R1,0(,R8)           STORE RDW
         LR    R5,R8
         B     PUT
MVCFVS   MVC   12(0,R8),0(R5)      EXECUTED
         SPACE
PUTVFN   L     R8,WORKPTR
         MVI   0(R8),X'40'
         MVC   1(255,R8),0(R8)
         LH    R1,0(,R5)           LENGTH FROM RDW
         SH    R1,=H'5'            LENGTH MINUS 1 OF DATA
         BM    S0C3
         EX    R1,MVCVFN           MOVE DATA
         LR    R5,R8
         B     PUT
MVCVFN   MVC   00(0,R8),04(R5)     EXECUTED
         SPACE
PUTVFS   L     R8,WORKPTR
         MVI   0(R8),X'40'
         MVC   1(255,R8),0(R8)
         LH    R1,0(,R5)           GET LENGTH FROM RDW
         SH    R1,=H'13'           LENGTH MINUS 1 OF DATA
         BM    S0C3
         EX    R1,MVCVFS           MOVE DATA, EXCLUDING SEQUENCE NUM
         LH    R1,UT2RECLN         OUTPUT RECORD LENGTH
         SH    R1,=H'8'            MINUS 8
         LA    R14,0(R1,R8)        POINT TO SEQUENCE NUMBER
         MVC   0(8,R14),4(R5)      MOVE SEQUENCE NUMBER
         LR    R5,R8
         B     PUT
MVCVFS   MVC   00(0,R8),12(R5)     EXECUTED
         SPACE
PUTU     MVC   DCBLRECL-IHADCB(2,R7),DCBLRECL-IHADCB(R6)
         B     PUT
         SPACE
S0C3     EX    R0,*
         SPACE
PUT      EQU   *
         PUT   (R7),(R5)
         L     R0,MAXLINES
         BCT   R0,READCT
         B     UT1EOD              MAXLINES EXCEEDED
         SPACE
UT1EOD   EQU   *
         CLI   COUNTKW+1,1
         BNE   NOCOUNT
         LA    R1,MSGWK
         MVC   0(10,R1),=X'40206B2020206B202120'
         MVC   10(16,R1),=C' RECORDS COPIED '
         CLC   KOUNT,=F'1'
         BNE   *+10
         MVC   17(8,R1),18(R1)  CHANGE 'RECORDS' TO 'RECORD '
         L     R15,KOUNT
         CVD   R15,DOUBLE
         ED    0(10,R1),DOUBLE+4
         SPACE
SHIFLEFT CLI   0(R1),C' '       LEADING BLANK?
         BNE   SHIFTED          NO - READY TO ISSUE
         MVC   0(25,R1),1(R1)   SHIFT LEFT 1
         MVI   25(R1),C' '      BLANK LAST BYTE
         B     SHIFLEFT
SHIFTED  LA    R0,26
         BAL   R14,PUTLINE
NOCOUNT  EQU   *
         LA    R15,0
         B     NEXTDSN
         SPACE
NEXTD12  LA    R15,12
         SPACE
NEXTDSN  CH    R15,RC
         BNH   *+8
         STH   R15,RC              SET HIGHEST RC
         SPACE
         TM    STATUS,STAT1O
         BZ    NOCLOSEI
         TM    DCBOFLGS-IHADCB(R6),X'10' IS IT OPEN
         BZ    NOCLOSEI            NO, BRANCH
         MVI   CLOSED,X'80'
         CLOSE ((R6)),MF=(E,CLOSED)
         FREEPOOL (R6)
         NI    STATUS,255-STAT1O   CLOSED
NOCLOSEI EQU   *
         TM    STATUS,STAT2O
         BZ    NOCLOSEO
         TM    DCBOFLGS-IHADCB(R7),X'10' IS IT OPEN
         BZ    NOCLOSEO            NO, BRANCH
         MVI   CLOSED,X'80'
         CLOSE ((R7)),MF=(E,CLOSED)
         FREEPOOL (R7)
         NI    STATUS,255-STAT2O   CLOSED
NOCLOSEO EQU   *
         TM    STATUS,STAT1F       FREE REQUIRED?
         BZ    NOFREEI
         LA    R1,MYDAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,DDSAVEI
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         BAL   R14,CALLDAIR        UNALLOCATE
         NI    STATUS,255-STAT1F   UNALLOCATED
         DROP  R15                 DAPB18
NOFREEI  EQU   *
         SPACE
         TM    STATUS,STAT2F       FREE REQUIRED?
         BZ    NOFREEO
         LA    R1,MYDAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,DDSAVEO
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         BAL   R14,CALLDAIR        UNALLOCATE
         NI    STATUS,255-STAT2F   UNALLOCATED
         DROP  R15                 DAPB18
NOFREEO  EQU   *
         SPACE
         IKJRLSA MYANS
         SPACE
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
         SPACE
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CALL IKJDAIR SERVICE ROUTINE                     *
*                                                          *
************************************************************
          SPACE
CALLDAIR ST    R14,DAIRREGS
         AIF   (NOT &MVS).SKIP6
         L     R15,16
         TM    X'2DC'(R15),X'80'  CVTDAIR
         BNO   DAIRLINK
         L     R15,X'2DC'(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
.SKIP6   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI L     R14,DAIRREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP7
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         SLR   R15,R15
         ST    R15,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1                  DFDSECTD
.SKIP7   ANOP
         AIF   (&MVS).SKIP8
         LA    R1,MSGDAIR
         LA    R0,L'MSGDAIR
         BAL   R14,PUTMSG
.SKIP8   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE 1
ERRRECFM LA    R1,MSGRECFM
         LA    R0,L'MSGRECFM
         BAL   R14,PUTMSG
         B     NEXTD12
         SPACE
ERRRANGE LA    R1,MSG11
         LA    R0,L'MSG11
         BAL   R14,PUTMSG
         B     NEXTD12
         SPACE
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        SYNAD EXIT                                        *
*                                                          *
************************************************************
         SPACE
*        THIS ROUTINE IS ENTERED DURING THE 'GET' MACRO
*        IF AN I/O ERROR OCCURS.
         SPACE
DYNSYNAD EQU   *
         SYNADAF ACSMETH=QSAM
         MVC   SYNADMSG(78),50(R1)
         MVI   SYNADSW,X'FF'
         SYNADRLS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         PRINT NOGEN
         SPACE
UT1DCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(GL),                       +
               EODAD=0,SYNAD=0,EROPT=ACC
UT1DCBL  EQU   *-UT1DCB
         SPACE
UT2DCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(PM)
UT2DCBL  EQU   *-UT1DCB
         SPACE
         PRINT GEN
         SPACE
OBTAIN   CAMLST SEARCH,2,3,4
OBTAINL  EQU   *-OBTAIN
         SPACE
LOCATE   CAMLST NAME,2,,4
LOCATEL  EQU   *-LOCATE
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MSG01    DC    C'ERROR IN PARSE SERVICE ROUTINE'
MSG02    DC    C'IKJ58503I DATA SET '
MSG02A   DC    C' NOT IN CATALOG'
MSG03    DC    C'ERROR IN DEFAULT SERVICE ROUTINE'
MSG04    DC    C'UNABLE TO OPEN DATASET'
MSG05    DC    C'IKJ58509I DATA SET NAME REQUIRED WHEN MEMBER IS SPECIF+
               IED'
MSG06    DC    C'ORGANIZATION OF DATA SET MUST BE PARTITIONED OR SEQUEN+
               TIAL'
MSG07    DC    C'DATA SET IS PARTITIONED, MEMBER NOT SPECIFIED'
MSG08    DC    C'SPECIFIED MEMBER NOT FOUND IN DATASET'
MSG09    DC    C'UNABLE TO OBTAIN DSCB FOR DATA SET'
MSG10    DC    C'SPECIFIED MEMBER NOT FOUND, ESTAE RECOVERY'
MSG11    DC    C'INVALID RANGE, END COLUMN LESS THAN START COLUMN'
MSG14    DC    C'FILENAME '
MSG14A   DC    C' INVALID, MORE THAN 8 CHARACTERS  '
MSG14B   DC    C' IS NOT CURRENTLY ALLOCATED       '
MSG14C   DC    C' NOT ALLOCATED TO A DASD DATA SET '
MSGNULL  DC    C'(NULL DATA)'
MSGRECFM DC    C'RECORD FORMAT U NOT SUPPORTED'
MSGDAIR  DC    C'UNABLE TO ALLOCATE'
         LTORG
PERIODS  DC    64C'.'                 00-3F    0-63
         DC    X'40'                     40      64
         DC    9C'.'                  41-49   65-73
         DC    X'4A'      CENT           4A      74
         DC    C'.'                      4B      75
         DC    X'4C'     LESS THAN       4C      76
         DC    C'(+'                  4D-4E   77-78
         DC    C'.'                      4F      79
         DC    X'50'                     50      80
         DC    10C'.'                 51-5A   81-90
         DC    C'$*)'                 5B-5D   91-93
         DC    02C'.'                 5E-5F   94-95
         DC    C'-/'                  60-61   96-97
         DC    09C'.'                 62-6A   98-106
         DC    C','                      6B      107
         DC    15C'.'                 6C-7A  108-122
         DC    C'#@',X'7D',C'='       7B-7E  123-126
         DC    2C'.'                  7F-80  127-128
         DC    C'ABCDEFGHI'           81-89  129-137
         DC    7C'.'                  8A-90  138-144
         DC    C'JKLMNOPQR'           91-99
         DC    8C'.'                  9A-A1
         DC    C'STUVWXYZ'            A2-A9
         DC    23C'.'                 AA-C0
         DC    C'ABCDEFGHI'           C1-C9
         DC    7C'.'                  CA-D0
         DC    C'JKLMNOPQR'           D1-D9
         DC    8C'.'                  DA-E1
         DC    C'STUVWXYZ'            E2-E9
         DC    06C'.'                 EA-EF
         DC    C'0123456789'          F0-F9
         DC    6C'.'
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
PCLADDR  DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
COPYSPCL IKJPARM
DSNI     IKJPOSIT DSNAME,PROMPT='INPUT DATA SET NAME'
DSNO     IKJPOSIT DSNAME,PROMPT='OUTPUT DATA SET NAME'
IUNITKW  IKJKEYWD
         IKJNAME 'IUNIT',SUBFLD=IUNITSF
IVOLKW   IKJKEYWD
         IKJNAME 'IVOLUME',SUBFLD=IVOLSF
OUNITKW  IKJKEYWD
         IKJNAME 'OUNIT',SUBFLD=OUNITSF
OVOLKW   IKJKEYWD
         IKJNAME 'OVOLUME',SUBFLD=OVOLSF
SHRKW    IKJKEYWD
         IKJNAME 'OLD'
         IKJNAME 'SHR'
FILEKW   IKJKEYWD
         IKJNAME 'FILE'
NUMKW    IKJKEYWD
         IKJNAME 'NUM'
         IKJNAME 'NONUM'
BYPKW    IKJKEYWD
         IKJNAME 'BYPASS',SUBFLD=BYPSF
MAXKW    IKJKEYWD
         IKJNAME 'MAX',SUBFLD=MAXSF
COUNTKW  IKJKEYWD
         IKJNAME 'COUNT'
QUICKW   IKJKEYWD
         IKJNAME 'Q'
IUNITSF  IKJSUBF
IUNIT    IKJIDENT 'UNIT NAME',                                         +
               FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=8,                     +
               PROMPT='UNIT NAME'
IVOLSF   IKJSUBF
IVOL     IKJIDENT 'VOLUME SERIAL',                                     +
               FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=6,                     +
               PROMPT='VOLUME SERIAL'
OUNITSF  IKJSUBF
OUNIT    IKJIDENT 'UNIT NAME',                                         +
               FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=8,                     +
               PROMPT='UNIT NAME'
OVOLSF   IKJSUBF
OVOL     IKJIDENT 'VOLUME SERIAL',                                     +
               FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=6,                     +
               PROMPT='VOLUME SERIAL'
BYPSF    IKJSUBF
BYP      IKJIDENT 'BYPASS COUNT',                                      +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='NUMBER OF RECORDS TO BYPASS'
MAXSF    IKJSUBF
MAX      IKJIDENT 'MAXIMUM LINES',                                     +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='MAXIMUM NUMBER OF LINES TO LIST'
COLSF    IKJSUBF
COL      IKJIDENT 'COLUMN RANGE',RANGE,                                +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='COLUMN NUMBER'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  ADDRESS OF IKJPUTL
MYSTPB   DS    0F                 5 WORDS USED BY STACK DELETE
MYDAPL   DS    5F
MYDAPB   DS    21F
MYDFPB   DS    5F
DSNAME   DS    H,CL44
VOLSER   DS    CL6                 VOLUME FROM UCB
UNITNAME DS    CL8
VOLUME   DS    CL8                 VOLUME SPECIFIED BY USER
LOCATEW  DS    0F
OBTAINW  DS    4F
LOCBUF   DS    0D                  USES NEXT 265 BYTES
MYDSCB   DS    CL140               96 BYTES OF DSCB, 5 BYTES CCHHR
MSGWK    DS    CL128
STATUS   DS    X
STAT1F   EQU   X'80'               UNALLOCATE THE DATA SET
STAT1O   EQU   X'40'               DCB IS OPEN
STATM    EQU   X'20'               MEMBER NOT FOUND
STATL    EQU   X'10'               LOCATE WAS ISSUED
STAT2F   EQU   X'08'               UNALLOCATE THE DATA SET
STAT2O   EQU   X'04'               DCB IS OPEN
STATN    EQU   X'02'               NONUM
STATS    EQU   X'01'               SNUM
UT1RECFM DS    X                   COPY OF RECFM, MODIFIED IF RECFM U
UT2RECFM DS    X                   COPY OF RECFM, MODIFIED IF RECFM U
TSTRECFM DS    X                   BOTH RECFMS TOGETHER
UT1LRECL DS    H                   INPUT LRECL
UT1BLKSI DS    H                   INPUT BLKSIZE
UT1RECLN DS    H                   INPUT BLKSIZE
UT2LRECL DS    H                   OUTPUT LRECL
UT2BLKSI DS    H                   OUTPUT BLKSIZE
UT2RECLN DS    H                   OUTPUT BLKSIZE
PROCVAL  DS    H                   BRANCH TABLE OFFSET
RC       DS    H
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
HALF     DS    H
DOUBLE   DS    D
DDSAVEI  DS    CL8
DDSAVEO  DS    CL8
DAIRREGS DS    F
OPEND    DS    0F
CLOSED   DS    F
UT1EXLST DS    2F
UT2EXLST DS    2F
KOUNT    DS    F
KOUNTSP  DS    F
UT1DCBW  DS    0D,XL(UT1DCBL)
UT2DCBW  DS    0D,XL(UT2DCBL)
SYNADSW  DS    F
SYNADMSG DS    CL78
SKIPCT   DS    F
MAXLINES DS    F
DEVDATA  DS    2F
JFCB     DS    0F,CL176
WORKPTR  DS    F
WORKA    DS    0F,268C             4+8+256
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
IHADCB   DSECT
         DS    32XL1
DCBBFTEK DS    XL1
DCBEODAD DS    AL3
DCBRECFM DS    X
DCBEXLSA DS    AL3
DCBDDNAM DS    CL8
DCBOFLGS DS    X
         DS    7XL1
         DS    X
DCBSYNAD DS    AL3
DCBBLKSI EQU   IHADCB+62,2
DCBLRECL EQU   IHADCB+82,2
         SPACE
         IKJCPPL
         SPACE 3
         IKJPPL
         SPACE
         IKJDFPB
         SPACE 2
         IKJUPT
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJDAPL
         SPACE 2
         IKJDAP08
         SPACE 2
         IKJDAP18
         SPACE 2
         IKJPSCB
         SPACE 2
         AIF   (NOT &MVS).SKIP12
         IKJEFFDF DFDSECT=YES
.SKIP12  ANOP
         SPACE 2
         YREGS ,
         END
