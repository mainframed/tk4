SUBCOPY  TITLE 'S U B C O P Y  ***  COPY DATA SET OR WRITE SYSOUT'
         MACRO  ,
&NM      MVD   &FLD,&EF      DEFINE FIELD FOR MVC
         LCLC  &HB,&L
&L       SETC  'L'''
         AIF   ('&EF' EQ '').NOTEND
&HB      SETC  '128+'
.NOTEND  ANOP  ,
&NM      DC    AL1(&HB&L&FLD-1),AL2(&FLD-TEXTBASE)
         MEND  ,
         COPY  OPTIONGB
         SPACE 1
         SYSPARM LIST=YES
         SPACE 1
***********************************************************************
*                                                                     *
*   QUICK AND DIRTY SEQUENTIAL COPY ROUTINE ADAPTED FROM ETPSMEMC     *
*   BY BRIAN COOK.        REWRITTEN BY GERHARD POSTPISCHIL 2005-02-24 *
*                                                                     *
***********************************************************************
*                                                                     *
*   INPUT: R1 - ADDRESS LIST DEPENDING ON FUNCTION:                   *
*               'COD'            IN/OUT DSN,MEM,SER,PSWD              *
*               'COM'            IN/OUT DSN,MEM,SER,PSWD              *
*               'COA'            + O/P ALLOCATE:RFRM,RLEN,BLK,SPC,DE  *
*               'CPY'            + O/P ALLOCATE:RFRM,RLEN,BLK,SPC,DE  *
*               'CPW'            + O/P ALLOCATE:RFRM,RLEN,BLK,SPC,DE  *
*               'COO'            IN DSN,MEM,SER,PSWD / SYSOUT CLS,ETC.*
*               'COS'            IN DSN,MEM,SER,PSWD                  *
*               'CMP'            OUT DSN,SER,PSWD (PDS COMPRESS)      *
*         R14 - RETURN                                                *
*                                                                     *
*  OUTPUT R15 - 0  SUCCESSFUL                                         *
*               4  MINOR ERROR (E.G., TRUNCATED RECORDS)              *
*               8  OPEN FAILURE                                       *
*              12  ALLOCATION FAILURE                                 *
*              16  OTHER ERROR                                        *
*                                                                     *
*  FOR ERRORS, R1 WILL POINT TO A BCON-FORMAT ERROR MESSAGE           *
*  FOR RC=0 & 4, R0 HAS THE COPIED RECORD COUNT                       *
*                                                                     *
***********************************************************************
         PRINT &PRTSOR
SUBCOPY  PGMHEAD ZERO,BASE=(R12),AM=31,RM=24,BNDRY=PAGE,PARM=R1
         MVC   OPENLIST(PATDCBLN),PATDCBS  INIT DCBS AND OPEN LIST
         L     R2,0(,R1)     LOOK AT THE FUNCTION CODE
* FUNCTION \ PARM:                 R3  = INPUT DSN
*
*  COD (COPY)   INDSN INMEM INVOL INPSW  OUTDSN OUTMEM OUTVOL OUTPSW
*  COM (APPEND) INDSN INMEM INVOL INPSW  OUTDSN OUTMEM OUTVOL OUTPSW
*  COA (COPY)   INDSN INMEM INVOL INPSW  OUTDSN OUTMEM OUTVOL OUTPSW +
*               RECFM LRECL BLKSZ ALLTYP ALLPRI ALLSEC ALLDIR
*  CPY (IEBCOPY)INDSN INMEM INVOL INPSW  OUTDSN OUTMEM OUTVOL OUTPSW +
*               RECFM LRECL BLKSZ ALLTYP ALLPRI ALLSEC ALLDIR
*  CPW (WYLCOPY)INDSN INMEM INVOL INPSW  OUTDSN OUTMEM OUTVOL OUTPSW +
*               RECFM LRECL BLKSZ ALLTYP ALLPRI ALLSEC ALLDIR
*  COO (PRNT)   INDSN INMEM INVOL INPSW  OUTCLS OUTFRM OUTCOP OUTDEST
*  COS (SUBMIT) INDSN INMEM INVOL INPSW  M
*  CMP (COMPRESS) OUTDSN OUTVOL OUTPSW
*
*  ALO (PRNT)   OUTCLS OUTFRM OUTCOP OUTDEST OUTWTR
*  ALD (DS SHR) OUTDSN OUTMEM OUTVOL OUTPSW
*  ALM (DS MOD) OUTDSN OUTMEM OUTVOL OUTPSW
*  ALA (DS NEW) OUTDSN OUTMEM OUTVOL OUTPSW +
*               RECFM LRECL BLKSZ ALLTYP ALLPRI ALLSEC ALLDIR
*  UNA (UNALL)  OUTDDN
         MVC   INPDDN,BLANKS      CLEAR FOR DUPLICATE CHECK     GP11358
         MVC   INDS,BLANKS                                      GP11358
         MVC   INM,BLANKS                                       GP11358
         MVC   INV,BLANKS                                       GP11358
         MVC   OUTDDN,BLANKS        AND ALLOCATION ERRORS       GP11358
         MVC   CVDSN,BLANKS                                     GP11358
         MVC   CVMEM,BLANKS                                     GP11358
         MVC   CVSER,BLANKS                                     GP11358
         SR    R9,R9         CLEAR REASON CODE
         SR    R10,R10       CLEAR MESSAGE ADDRESS
         CLC   =C'ALO',0(R2)  ALLOCATE SYSOUT ONLY ?
         BE    JUSTOUT       YES; HANDLE DIFFERENTLY
         CLC   =C'ALD',0(R2)  ALLOCATE EXISTING DS ?
         BE    JUSTDSN       YES; HANDLE DIFFERENTLY
         CLC   =C'ALM',0(R2)  ALLOCATE FOR APPEND ?             GP06269
         BE    JUSTDSM       YES; HANDLE DIFFERENTLY            GP06269
         CLC   =C'ALA',0(R2)  ALLOCATE NEW DS ?
         BE    JUSTDSA       YES; HANDLE DIFFERENTLY
         CLC   =C'UNA',0(R2)  UNALLOCATE ONLY ?
         BE    JUSTUNA       YES; HANDLE DIFFERENTLY
         CLC   =C'CMP',0(R2) COMPRESS SINGLE PDS ?              GP13296
         BE    ALLCMP        YES                                GP13296
         SPACE 1
         LA    R3,INPMVC     POINT TO INPUT MOVER
         BAL   R14,MOVEDATA  MOVE INPUT FIELDS
         CLC   =C'COS',0(R2)   SUBMIT REQUEST ?
         BE    ALLSUB        YES
         CLC   =C'COO',0(R2) NORMAL SYSOUT REQUEST?
         BE    ALLOUT        YES
         OI    PROFLAGS,PFCOPY    SHOW SOME TYPE OF COPY        GP11358
         CLC   =C'COD',0(R2) NORMAL COPY REQUEST ?
         BE    ALLCOP        YES
         CLC   =C'COM',0(R2) NORMAL APPEND REQUEST?             GP06269
         BE    ALLCOM        YES                                GP06269
         CLC   =C'COA',0(R2) ALLOCATE AND COPY REQUEST ?
         BE    ALLCOA        YES
         CLC   =C'CPY',0(R2) ALLOCATE AND IEBCOPY REQUEST ?
         BE    ALLCPY        YES
         CLC   =C'CPW',0(R2) ALLOCATE AND WYLCOPY REQUEST ?     GP06269
         BE    ALLCPW        YES                                GP06269
         LA    R8,16         MAJOR BOOBOO
         LA    R10,MSGBDFUN  INVALID FUNCTION
         B     RETERROR      QUIT WITH MAJOR ERROR
         SPACE 1
***********************************************************************
*   SPACE ALLOCATION REQUIRED - FOR SEQUENTIAL DATA SET, INCLUDE      *
*     SPACE AND DCB PARAMETERS IN THE GENERATED TEXT UNITS.           *
*   FOR A PARTITIONED DATA SET, BUILD THE SPACE ALLOCATION AS A       *
*     SEPARATE DYNALLOC CALL; THEN USE MEMBER ALLOCATION NORMALLY.    *
***********************************************************************
JUSTDSA  OI    PROFLAGS,PFOUT  ALLOCATE SYSOUT ONLY; NO COPY
ALLCOA   LA    R3,COAMVC     POINT TO INPUT MOVER
         LR    R7,R1         PRESERVE PARM POINTER OVER SPACE ALLOC
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS
         LA    R14,DALTRK    SET FOR TRACK ALLOCATION
         TM    CVSPTYP,X'C0'   CYLINDER REQUEST?
         BNO   *+8           NO
         LA    R14,DALCYL    SET FOR CYLINDER
         STH   R14,SPCTYPE   SET TEXT APPROPRIATELY
         LA    R5,4          FOUR OPTIONAL PARAMETERS
         LA    R6,COPTU3S    SET SEQUENTIAL ALLOC
         CLI   CVMEM,C' '    MEMBER SPECIFIED?
         BNH   COMALLIN      NO; SEQUENTIAL
         LA    R4,COPTU3M    POINT TO OUTPUT ALLOCATION LIST
         LA    R3,3          SKIP BLANK DSN/VOL/PSWD
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST
         LA    R8,12         PRESET FOR ALLOCATION FAILURE
         LA    R10,MSGALLSP  SPACE ALLOCATION FAILED
         LA    R1,MYRBPTR
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR      RETURN WITH ERROR MESSAGE
         CLI   OUTDDN,C' '   WAS OUTPUT ALLOCATED ?
         BNH   ALLCOAM       NO
         MVC   UNDDNX,OUTDDN   COPY DD NAME
         LA    R4,UNTU1      REQUEST UNALLOCATION (RE-ALL FOR MEMBER)
         BAS   R14,BUILDTUS  BUILD TEXT UNIT CHAIN
         MVI   S99VERB-S99RB+MYRB,S99VRBUN  UNALLOCATE
         LA    R1,MYRBPTR    POINT TO REQUEST POINTER
         DYNALLOC ,          AND FREE; IGNORE RETURN
ALLCOAM  LR    R1,R7         RESTORE PARM POINTER
         B     ALLCOP        DO REST NORMALLY
         SPACE 1
JUSTDSN  OI    PROFLAGS,PFOUT  ALLOCATE DS ONLY; NO COPY
ALLCOP   LA    R3,COPMVC     POINT TO INPUT MOVER
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS
         LA    R6,COPTU2     POINT TO OUTPUT ALLOCATION LIST
         LA    R5,4          FOUR OPTIONAL PARAMETERS
         B     COMALLIN
         SPACE 1                                                GP06269
JUSTDSM  OI    PROFLAGS,PFOUT  ALLOCATE DS ONLY; NO COPY        GP06269
ALLCOM   LA    R3,COPMVC     POINT TO INPUT MOVER               GP06269
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS                 GP06269
         LA    R6,COPTU2A    POINT TO OUTPUT ALLOCATION LIST    GP06269
         LA    R5,4          FOUR OPTIONAL PARAMETERS           GP06269
         B     COMALLIN                                         GP06269
         SPACE 1
ALLSUB   LA    R6,SUBTU2     POINT TO OUTPUT ALLOCATION LIST
         SR    R5,R5         NO OPTIONAL PARAMETERS
         B     COMALLIN
         SPACE 1
JUSTOUT  OI    PROFLAGS,PFOUT  ALLOCATE SYSOUT ONLY; NO COPY
ALLOUT   LA    R3,OUTMVC     POINT TO INPUT MOVER
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS
         SPACE 1
*---------------------------------------------------------------------*
*   REQUEST IS FOR DATA SET COPY                                      *
*   1) CHECK THAT VOL+DSN+MEM ARE UNIQUE                              *
*   2) WHEN DS NAMES ARE THE SAME, NEED TO PLAY GAMES WITH ENQUEUE    *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         TM    PROFLAGS,PFCOPY    SOME TYPE OF COPY ?           GP11358
         BZ    COMOUT2              NO                          GP12297
         CLC   INDS,CVDSN         EQUAL DS NAMES ?              GP11358
         BNE   COMOUT2              NO; JUST ALLOCATE           GP11358
         OI    PROFLAGS,PFINT     NEED TO USE DISP=SHR          GP11358
         CLC   INM,CVMEM          DISTINCT MEMBER ?             GP11358
         BNE   COMOUT2              YES; OK                     GP11358
         CLC   INV,CVSER          DISTINCT VOLUMES ?            GP11358
         BNE   COMOUT2              YES; OK                     GP11358
         LA    R10,MSGBADID  INVALID COPY TO ITSELF             GP11358
         B     RETERROR      QUIT WITH MAJOR ERROR              GP11358
         SPACE 1
COMOUT2  LA    R6,OUTTU2     POINT TO OUTPUT ALLOCATION LIST
         LA    R5,4          FOUR OPTIONAL PARAMETERS
*---------------------------------------------------------------------*
*   BUILD ALLOCATION PARAMETER LIST AND ALLOCATE INPUT                *
*---------------------------------------------------------------------*
COMALLIN TM    PROFLAGS,PFOUT  ALLOC O/P ONLY ?
         BNZ   COMALLOU      YES; SKIP INPUT STUFF
         LA    R4,COPTU1     POINT TO INPUT ALLOCATION LIST
         LA    R3,4          FOUR OPTIONAL PARAMETERS (EXC. DSN)
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST
         LA    R8,12         PRESET FOR ALLOCATION FAILURE
         LA    R10,MSGALLIN  INPUT ALLOCATION FAILED
         LA    R1,MYRBPTR
         ZI    S99FLG22-S99RB+MYRB,S99DYNDI SET DS INTEGRITY    GP11358
         TM    PROFLAGS,PFINT     NEED INTEGRITY ?              GP11358
         BZ    *+8                  YES                         GP11358
         OI    S99FLG22-S99RB+MYRB,S99DYNDI BYPASS INTEGRITY    GP11358
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR      RETURN WITH ERROR MESSAGE
         SPACE 2
*---------------------------------------------------------------------*
*   BUILD ALLOCATION PARAMETER LIST AND ALLOCATE OUTPUT               *
*---------------------------------------------------------------------*
COMALLOU LR    R3,R5         OPTIONAL COUNTER
         LR    R4,R6         PRESENT LIST
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST
         SPACE 1
         LA    R10,MSGALLOU  OUTPUT ALLOCATION FAILED
         LA    R1,MYRBPTR
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR
         CLI   CVMEM,C'*'    REQUEST FOR ENTIRE PDS ?
         BE    USEIEB        YES; CALL IEBCOPY
         SPACE 1
*---------------------------------------------------------------------*
*   COPY DCB AND OPEN LIST PATTERNS AND OPEN                          *
*---------------------------------------------------------------------*
         TM    PROFLAGS,PFOUT  ALLOC O/P ONLY ?
         BNZ   JUSTEXIT      YES; SKIP INPUT STUFF
         MVC   DCBDDNAM-IHADCB+SYSUT1,INPDDN   INPUT DDNAME
         MVC   DCBDDNAM-IHADCB+SYSUT2,OUTDDN  OUTPUT DDNAME
         LA    R14,INPEXIT   GET INPUT EXIT
         ST    R14,INPXLIST
         MVI   INPXLIST,X'85'  DCB EXIT (ONLY)
         L     R14,=V(@DCBEXIT)   DCB EXIT SUBROUTINE
         LA    R15,OUTXSPEC  AND ITS PARAMETER LIST
         STM   R14,R15,OUTXLIST
         MVI   OUTXLIST,X'05'   DCB EXIT
         MVI   OUTXLIST+4,X'80' PARM LIST FOR @DCBEXIT
         LA    R1,OUTXLIST   OUTPUT DCB EXIT LIST
         STCM  R1,7,DCBEXLSA-IHADCB+SYSUT2
         LA    R1,INPXLIST   INPUT DCB EXIT LIST
         STCM  R1,7,DCBEXLSA-IHADCB+SYSUT1
         MVC   OUTXSPEC(PATXSPLN),PATXSPEC  DCB EXIT OPTIONS
         OPEN  (SYSUT1,(INPUT),SYSUT2,(OUTPUT)),MF=(E,OPENLIST)
         LA    R8,8          PRESET ERROR CODE
         LA    R10,MSGOPNIN  INPUT OPEN FAILED
         TM    DCBOFLGS-IHADCB+SYSUT1,DCBOFOPN  TEST FOR GOOD OPEN
         BZ    RETERROR         *  IF NO GOOD, LEAVE
         LA    R10,MSGOPNOU  OUTPUT OPEN FAILED
         TM    DCBOFLGS-IHADCB+SYSUT2,DCBOFOPN  TEST FOR GOOD OPEN
         BZ    RETERROR         *  IF NO GOOD, LEAVE
         SPACE 1
*---------------------------------------------------------------------*
*   CHECK THE INPUT AND OUTPUT CHARACTERISTICS AND SET ADJUSTMENTS    *
*---------------------------------------------------------------------*
         MVI   OUTFREC,X'80' NO RDW ON OUTPUT, RECFM=F
         TM    DCBRECFM-IHADCB+SYSUT1,X'80'   F OR U ?
         BNZ   INNOTV        YES; NEITHER V NOR D
         OI    INADJUST+L'INADJUST-1,4  SKIP RDW ON INPUT
INNOTV   LH    R1,DCBLRECL-IHADCB+SYSUT2  GET MAX OUTPUT LRECL
         TM    DCBRECFM-IHADCB+SYSUT2,X'80'   F OR U ?
         BNZ   OUTNOTV       YES; NEITHER V NOR D
         MVI   OUTFREC,X'40' BUILD RDW ON OUTPUT
         MVI   OUTADJST+L'OUTADJST-1,4  SKIP RDW ON OUTPUT
         B     OUTNOTU
OUTNOTV  TM    DCBRECFM-IHADCB+SYSUT2,X'C0'   U ?
         BNO   OUTNOTU
         LH    R1,DCBBLKSI-IHADCB+SYSUT2  GET MAX OUTPUT LRECL
         MVI   OUTFREC,0     OUTPUT U
OUTNOTU  ST    R1,OUTMAXLN   PRESERVE MAX OUTPUT LRECL
***********************************************************************
*   POSSIBLE CC ADJUSTMENTS:                                          *
*        INPUT     OUTPUT    ACTION                                   *
*         YES       YES      COPY AS IS                               *
*         NO        NO       COPY AS IS                               *
*         YES       NO       IGNORE INPUT CC                          *
*         NO        YES      ADD DEFAULT CC (WRITE+SINGLE SPACE)      *
*   NOTE THAT NO ASA<==>MACHINE CODE CONVERSION DONE                  *
***********************************************************************
         TM    DCBRECFM-IHADCB+SYSUT1,X'06'   ANY CC ?
         BZ    INNOTCC       NO; NO ADJUSTMENT
         TM    DCBRECFM-IHADCB+SYSUT2,X'06'   ANY CC ?
         BNZ   GOLOOP        YES; NO ADJUSTMENT
         LA    R1,1
         A     R1,INADJUST
         ST    R1,INADJUST   SKIP INPUT CARRIAGE CONTROL
         B     GOLOOP
INNOTCC  TM    DCBRECFM-IHADCB+SYSUT2,X'06'   ANY CC ?
         BZ    GOLOOP        NO; NO ADJUSTMENT
         OI    OUTFREC,X'02'  INDICATE CC INSERTION
         LA    R9,C' '       SET ASA SPACE/WRITE
         TM    DCBRECFM-IHADCB+SYSUT2,X'04'   IS IT ASA ?
         BNZ   GOLOOP        YES; DONE HERE
         LA    R9,X'09'      SET MACHINE CODE WRITE/SPACE
         SPACE 1
*---------------------------------------------------------------------*
*   COPY THE FILE; REMOVE/BUILD RDWS AS REQUIRED                      *
*---------------------------------------------------------------------*
GOLOOP   SR    R7,R7            *  CLEAR RECORD COUNTER
         SR    R6,R6         COUNT OF TRUNCATED RECORDS
IOLOOP   GET   SYSUT1
         LR    R2,R1
         LH    R3,DCBLRECL-IHADCB+SYSUT1  GET INPUT LENGTH
         A     R2,INADJUST   SKIP RDW, CC, IF ANY
         S     R3,INADJUST   UPDATE LENGTH
         BNP   IOLOOP        SKIP NULL RECORD
         LR    R5,R3         COPY LENGTH
         A     R5,OUTADJST   MAKE NEW LENGTH
         C     R5,OUTMAXLN   ALLOWED?
         BNH   OUTPUT        YES; LOCATE RECORD AREA
         LA    R6,1(,R6)     INCREASE TRUNCATED COUNT
         L     R5,OUTMAXLN   TRUNCATE
         LA    R10,4         SET MINOR(?) ERROR
OUTPUT   TM    OUTFREC,X'02'  ADD A CC?
         BZ    OUTPUT2       NO
         LA    R5,1(,R5)     ADD EXTRA FOR CC
OUTPUT2  TM    OUTFREC,X'80'   OUTPUT RECFM=F ?                 GP08208
         BZ    OUTPUT3       NO                                 GP08208
         LH    R5,DCBLRECL-IHADCB+SYSUT2   USE FIXED LENGTH     GP08208
OUTPUT3  STH   R5,DCBLRECL-IHADCB+SYSUT2   SET NEW LENGTH       GP08208
         PUT   SYSUT2        GET BUFFER SPACE
         LA    R7,1(,R7)     COUNT RECORDS
         LR    R4,R1         SAVE RECORD ADDRESS
         TM    OUTFREC,X'40'   RDW NEEDED?
         BZ    OUTMOVE       NO; JUST COPY DATA
         STH   R5,0(,R4)     SET RDW LENGTH
         STCM  R5,12,2(R4)   ZERO FLAGS
         A     R4,OUTADJST   SKIP RDW
         S     R5,OUTADJST   MAKE DATA LENGTH
OUTMOVE  TM    OUTFREC,X'02'  ADD A CC?
         BZ    OUTMOVE2      NO
         STC   R9,0(,R4)     BUILD CC
         LA    R4,1(,R4)     ADJUST ADDRESS
         BCTR  R5,0          ADJUST LENGTH
OUTMOVE2 ICM   R3,8,=C' '    BLANK FILL                         GP08208
         MVCL  R4,R2         MOVE INPUT RECORD TO OUTPUT
         B     IOLOOP
         SPACE 1
*---------------------------------------------------------------------*
*   NORMAL TERMINATION, CLEANUP, AND RETURN                           *
*---------------------------------------------------------------------*
INEODAD  ST    R7,RSNCODE    RETURN R15=0, R0=RECORD COUNT
         ST    R10,RR1CODE   SET 0 OR MESSAGE
         SPACE 1
CLOSER   CLOSE MF=(E,OPENLIST)
         LA    R2,SYSUT1
         BAS   R14,FREEPOOL
         LA    R2,SYSUT2
         BAS   R14,FREEPOOL
         B     PGMEXIT                                          GP13296
CMPERROR STM   R8,R10,RETCODE SET ERROR LEVEL AND MESSAGE ADDRESS
PGMEXIT  LA    R5,=A(INPDDN,OUTDDN,WKDD1,WKDD2)  ALLOCATED DDS
         LA    R6,4          CURRENTLY FOUR NAMES MAX
PGMEXILP L     R1,0(,R5)     GET NEXT DD NAME ADDRESS
         CLI   0(R1),C' '    WAS IT ALLOCATED ?
         BNH   PGMEXIBP      NO; BUMP
         MVC   UNDDNX,0(R1)  MOVE TO UNALLOCATE LIST
         LA    R4,UNTU1      POINT TO CHAIN
         BAS   R14,BUILDTUS  BUILD TEXT UNIT CHAIN
         MVI   S99VERB-S99RB+MYRB,S99VRBUN  UNALLOCATE
         LA    R1,MYRBPTR    POINT TO REQUEST POINTER
         DYNALLOC ,          AND FREE; IGNORE RETURN
PGMEXIBP LA    R5,4(,R5)     NEXT DD POINTER
         BCT   R6,PGMEXILP   TRY AGAIN
PGMEXIX  PGMEXIT COPYRET=(RETCODE,12)  RETURN R15 THROUGH R1
         SPACE 1
JUSTEXIT MVC   RETCODE+4(8),OUTDDN  RETURN NEW DD NAME
         B     PGMEXIX       AND SKIP UNALLOCATE
         SPACE 1
JUSTUNA  LA    R3,UNAMVC     POINT TO DDNAME MOVER
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS
         B     PGMEXIT       AND RELEASE DD
         SPACE 1
*---------------------------------------------------------------------*
*   ERROR RETURN AND CLEANUP                                          *
*---------------------------------------------------------------------*
RETERROR STM   R8,R10,RETCODE SET ERROR LEVEL AND MESSAGE ADDRESS
         CH    R8,=H'12'     ALLOCATION FAILURE ?
         BE    PGMEXIT       YES; JUST RETURN
         B     CLOSER        ELSE CLOSE DCBS
         SPACE 1
***********************************************************************
*   ALLOCATE AND INVOKE IEBCOPY                                       *
*     CALLING SEQUENCE SAME AS COP FUNCTION (INDSN...OUTDSN)          *
***********************************************************************
ALLCPY   LA    R3,COAMVC     POINT TO INPUT MOVER
         LR    R7,R1         PRESERVE PARM POINTER OVER SPACE ALLOC
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS
         LA    R14,DALTRK    SET FOR TRACK ALLOCATION
         TM    CVSPTYP,X'C0'   CYLINDER REQUEST?
         BNO   *+8           NO
         LA    R14,DALCYL    SET FOR CYLINDER
         STH   R14,SPCTYPE   SET TEXT APPROPRIATELY
         LA    R4,COPTU3M    POINT TO OUTPUT ALLOCATION LIST
         LA    R3,3          SKIP BLANK DSN/VOL/PSWD
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST
         LA    R8,12         PRESET FOR ALLOCATION FAILURE
         LA    R10,MSGALLSP  SPACE ALLOCATION FAILED
         LA    R1,MYRBPTR
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR      RETURN WITH ERROR MESSAGE
         LR    R1,R7         RESTORE PARM POINTER
         SPACE 1
         LA    R3,COPMVC     POINT TO INPUT MOVER
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS
         LA    R4,COPTU1     POINT TO INPUT ALLOCATION LIST
         LA    R3,4          FOUR OPTIONAL PARAMETERS (EXC. DSN)
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST
         LA    R8,12         PRESET FOR ALLOCATION FAILURE
         LA    R10,MSGALLIN  INPUT ALLOCATION FAILED
         LA    R1,MYRBPTR
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR      RETURN WITH ERROR MESSAGE
         SPACE 1
USEIEB   SR    R3,R3         NO CONDITIONAL TEXT
         LA    R4,TEMPDU1    SYSIN DUMMY
         BAL   R14,BUILDTUS  BUILD TEXT UNITS
         LA    R10,MSGSYSDU  SYSPRINT ALLOCATION FAILED
         LA    R1,MYRBPTR
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR
         SPACE 1
         SR    R3,R3         NO CONDITIONAL TEXT
         LA    R4,TEMPTU2    SYSPRINT TEMP ON SYSDA
         BAL   R14,BUILDTUS  BUILD TEXT UNITS
         LA    R10,MSGPRTOU  SYSPRINT ALLOCATION FAILED
         LA    R1,MYRBPTR
         DYNALLOC ,
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE
         LTR   R15,R15
         BNZ   RETERROR
         SPACE 1
         LA    R0,CPYDDND-CPYDDNM-2  LENGTH OF DDNAME LIST
         STH   R0,CPYDDNM    SET LIST LENGTH
         LA    R14,CPYPARM   GET PARM OPTION LIST
         LA    R15,CPYDDNM   GET DD NAME LIST
         STM   R14,R15,CPY@PARM
         OI    CPY@PARM+4,X'80'  COMPLETE LIST
         MVC   CPYDDUT1,INPDDN  COPY INPUT DDN
         MVC   CPYDDUT2,OUTDDN  SAVE OUTPUT
         MVC   CPYDDIN,WKDD1   AND SYSIN DUMMY
         MVC   CPYDDPR,WKDD2   AND SYSPRINT TEMPORARY
         LTCB  R3,USE=YES                                       GP06343
         LR    R5,R3         SET NON-ZERO FLAG                  GP06343
         TM    TCBPKF,TCBFLAG  NON-ZERO PROTECT KEY ?           GP06343
         BNZ   PKFUSE        YES; USE AS IS                     GP06343
         OI    TCBPKF,X'80'  SET KEY 8                          GP06343
         SR    R5,R5         SET KEY ZERO FLAG                  GP06343
PKFUSE   LA    R8,20         ERROR WITHOUT NORMAL RETURN CODE
         LA    R10,MSGATTCY  IEBCOPY FAILED
         LA    R2,CPYECB
         LA    R1,CPY@PARM   POINT TO PARM LIST
         ATTACH EP=IEBCOPY,ECB=(R2),SZERO=NO  WAIT ON IEBCOPY
         LTR   R5,R5         DID WE CHANGE TCB PROTECT KEY ?    GP06343
         BNZ   PKFDONE       NO                                 GP06343
         NI    TCBPKF,255-TCBFLAG  RESET KEY                    GP06343
         DROP  R3                                               GP06343
PKFDONE  LTR   R9,R15
         BNZ   RETERROR      FAILED ?
         ST    R1,CPYTCB
         WAIT  ECB=(R2)
         LA    R1,CPYTCB     GET TCB POINTER
         DETACH (1)          AND GET RID OF IT
         LA    R10,MSGEXECY  IEBCOPY FAILED
         ICM   R9,7,CPYECB+1  GET RETURN CODE
         BNZ   RETERROR
         B     PGMEXIT       AND RETURN
CPYPARM  HCON  'RC4NOREP'
CPYPARP  HCON  'RC4NOREP,REPLACE'
         SPACE 1                                                GP06269
***********************************************************************
*   ALLOCATE AND INVOKE WYLCOPY                                       *
*     CALLING SEQUENCE SAME AS COP FUNCTION (INDSN...OUTDSN)          *
***********************************************************************
ALLCPW   LA    R3,COAMVC     POINT TO INPUT MOVER               GP06269
         LR    R7,R1         PRESERVE PARM POINTER OVER SPACE ALLOC
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS                 GP06269
         LA    R14,DALTRK    SET FOR TRACK ALLOCATION           GP06269
         TM    CVSPTYP,X'C0'   CYLINDER REQUEST?                GP06269
         BNO   *+8           NO                                 GP06269
         LA    R14,DALCYL    SET FOR CYLINDER                   GP06269
         STH   R14,SPCTYPE   SET TEXT APPROPRIATELY             GP06269
         LA    R4,COPTU3M    POINT TO OUTPUT ALLOCATION LIST    GP06269
         LA    R3,3          SKIP BLANK DSN/VOL/PSWD            GP06269
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST               GP06269
         LA    R8,12         PRESET FOR ALLOCATION FAILURE      GP06269
         LA    R10,MSGALLSP  SPACE ALLOCATION FAILED            GP06269
         LA    R1,MYRBPTR                                       GP06269
         DYNALLOC ,                                             GP06269
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE           GP06269
         LTR   R15,R15                                          GP06269
         BNZ   RETERROR      RETURN WITH ERROR MESSAGE          GP06269
         LR    R1,R7         RESTORE PARM POINTER               GP06269
         SPACE 1                                                GP06269
         LA    R3,COPMVC     POINT TO INPUT MOVER               GP06269
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS                 GP06269
         LA    R4,COPTU1     POINT TO INPUT ALLOCATION LIST     GP06269
         LA    R3,4          FOUR OPTIONAL PARAMETERS (EXC. DSN)GP06269
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST               GP06269
         LA    R8,12         PRESET FOR ALLOCATION FAILURE      GP06269
         LA    R10,MSGALLIN  INPUT ALLOCATION FAILED            GP06269
         LA    R1,MYRBPTR                                       GP06269
         DYNALLOC ,                                             GP06269
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE           GP06269
         LTR   R15,R15                                          GP06269
         BNZ   RETERROR      RETURN WITH ERROR MESSAGE          GP06269
         SPACE 1                                                GP06269
         SR    R3,R3         NO CONDITIONAL TEXT                GP06269
         LA    R4,TEMPTU2    SYSPRINT TEMP ON SYSDA             GP06269
         BAL   R14,BUILDTUS  BUILD TEXT UNITS                   GP06269
         LA    R10,MSGPRTOU  SYSPRINT ALLOCATION FAILED         GP06269
         LA    R1,MYRBPTR                                       GP06269
         DYNALLOC ,                                             GP06269
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE           GP06269
         LTR   R15,R15                                          GP06269
         BNZ   RETERROR                                         GP06269
         SPACE 1                                                GP06269
         LA    R0,CPYDDND-CPYDDNM-2  LENGTH OF DDNAME LIST      GP06269
         STH   R0,CPYDDNM    SET LIST LENGTH                    GP06269
         LA    R14,WYLPARM   GET PARM OPTION LIST               GP06269
         LA    R15,CPYDDNM   GET DD NAME LIST                   GP06269
         STM   R14,R15,CPY@PARM                                 GP06269
         OI    CPY@PARM+4,X'80'  COMPLETE LIST                  GP06269
         MVC   CPYDDUT1,INPDDN  COPY INPUT DDN                  GP06269
         MVC   CPYDDUT2,OUTDDN  SAVE OUTPUT                     GP06269
         XC    CPYDDIN,CPYDDIN  NO SYSIN                        GP06269
         MVC   CPYDDPR,WKDD2   AND SYSPRINT TEMPORARY           GP06269
         LA    R8,20         ERROR WITHOUT NORMAL RETURN CODE   GP06269
         LA    R10,MSGATTCY  IEBCOPY FAILED                     GP06269
         LA    R2,CPYECB                                        GP06269
         LA    R1,CPY@PARM   POINT TO PARM LIST                 GP06269
         ATTACH EP=WYLCOPY,ECB=(R2),SZERO=NO  WAIT ON WYLCOPY   GP06269
         LTR   R9,R15                                           GP06269
         BNZ   RETERROR      FAILED ?                           GP06269
         ST    R1,CPYTCB                                        GP06269
         WAIT  ECB=(R2)                                         GP06269
         LA    R1,CPYTCB     GET TCB POINTER                    GP06269
         DETACH (1)          AND GET RID OF IT                  GP06269
         LA    R10,MSGEXECY  IEBCOPY FAILED                     GP06269
         ICM   R9,7,CPYECB+1  GET RETURN CODE                   GP06269
         BNZ   RETERROR                                         GP06269
         B     PGMEXIT       AND RETURN                         GP06269
WYLPARM  HCON  'DEBUG'                                          GP06269
         SPACE 1
***********************************************************************
*   ALLOCATE AND INVOKE IEBCOPY FOR PDS COMPRESS                      *
*     CALLING SEQUENCE HAS DSN, SER, PSWD                             *
***********************************************************************
         SPACE 1
ALLCMP   LA    R3,CMPMVC     POINT TO PARM MOVER                GP13296
         BAL   R14,MOVEDATA  MOVE OUTPUT FIELDS                 GP13296
         LA    R4,CMPTU2     POINT TO OUTPUT ALLOCATION LIST    GP13296
         LA    R3,3          3 OPTIONAL PARAMETERS (EXC. DSN)   GP13296
         BAL   R14,BUILDTUS  BUILD TEXT UNIT LIST               GP13296
         LA    R8,12         PRESET FOR ALLOCATION FAILURE      GP13296
         LA    R10,MSGALLIN  INPUT ALLOCATION FAILED            GP13296
         LA    R1,MYRBPTR                                       GP13296
         DYNALLOC ,                                             GP13296
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE           GP13296
         LTR   R15,R15                                          GP13296
         BNZ   CMPERROR      RETURN WITH ERROR MESSAGE          GP13296
         SPACE 1                                                GP13296
         SR    R3,R3         NO CONDITIONAL TEXT                GP13296
         LA    R4,TEMPDU1    SYSIN DUMMY                        GP13296
         BAL   R14,BUILDTUS  BUILD TEXT UNITS                   GP13296
         LA    R10,MSGSYSDU  SYSPRINT ALLOCATION FAILED         GP13296
         LA    R1,MYRBPTR                                       GP13296
         DYNALLOC ,                                             GP13296
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE           GP13296
         LTR   R15,R15                                          GP13296
         BNZ   CMPERROR                                         GP13296
         SPACE 1                                                GP13296
         SR    R3,R3         NO CONDITIONAL TEXT                GP13296
         LA    R4,TEMPTU2    SYSPRINT TEMP ON SYSDA             GP13296
         BAL   R14,BUILDTUS  BUILD TEXT UNITS                   GP13296
         LA    R10,MSGPRTOU  SYSPRINT ALLOCATION FAILED         GP13296
         LA    R1,MYRBPTR                                       GP13296
         DYNALLOC ,                                             GP13296
         L     R9,S99RSC-S99RB+MYRB  COPY REASON CODE           GP13296
         LTR   R15,R15                                          GP13296
         BNZ   CMPERROR                                         GP13296
         SPACE 1                                                GP13296
         LA    R0,CPYDDND-CPYDDNM-2  LENGTH OF DDNAME LIST      GP13296
         STH   R0,CPYDDNM    SET LIST LENGTH                    GP13296
         LA    R14,CPYPARM   GET PARM OPTION LIST               GP13296
         LA    R15,CPYDDNM   GET DD NAME LIST                   GP13296
         STM   R14,R15,CPY@PARM                                 GP13296
         OI    CPY@PARM+4,X'80'  COMPLETE LIST                  GP13296
         MVC   CPYDDUT1,OUTDDN  COPY INPUT DDN                  GP13296
         MVC   CPYDDUT2,OUTDDN  SAVE OUTPUT                     GP13296
         MVC   CPYDDIN,WKDD1   AND SYSIN DUMMY                  GP13296
         MVC   CPYDDPR,WKDD2   AND SYSPRINT TEMPORARY           GP13296
         LTCB  R3,USE=YES                                       GP13296
         LR    R5,R3         SET NON-ZERO FLAG                  GP13296
         TM    TCBPKF,TCBFLAG  NON-ZERO PROTECT KEY ?           GP13296
         BNZ   USEPKF        YES; USE AS IS                     GP13296
         OI    TCBPKF,X'80'  SET KEY 8                          GP13296
         SR    R5,R5         SET KEY ZERO FLAG                  GP13296
USEPKF   LA    R8,20         ERROR WITHOUT NORMAL RETURN CODE   GP13296
         LA    R10,MSGATTCY  IEBCOPY FAILED                     GP13296
         LA    R2,CPYECB                                        GP13296
         LA    R1,CPY@PARM   POINT TO PARM LIST                 GP13296
         ATTACH EP=IEBCOPY,ECB=(R2),SZERO=NO  WAIT ON IEBCOPY   GP13296
         LTR   R5,R5         DID WE CHANGE TCB PROTECT KEY ?    GP13296
         BNZ   DONEPKF       NO                                 GP13296
         NI    TCBPKF,255-TCBFLAG  RESET KEY                    GP13296
         DROP  R3                                               GP13296
DONEPKF  LTR   R9,R15                                           GP13296
         BNZ   CMPERROR      FAILED ?                           GP13296
         ST    R1,CPYTCB                                        GP13296
         WAIT  ECB=(R2)                                         GP13296
         LA    R1,CPYTCB     GET TCB POINTER                    GP13296
         DETACH (1)          AND GET RID OF IT                  GP13296
         LA    R10,MSGEXECY  IEBCOPY FAILED                     GP13296
         ICM   R9,7,CPYECB+1  GET RETURN CODE                   GP13296
         BNZ   CMPERROR                                         GP13296
         B     PGMEXIT       AND RETURN                         GP13296
         SPACE 1
*---------------------------------------------------------------------*
*   FREE POOL THE HARD WAY                                            *
*---------------------------------------------------------------------*
         PUSH  USING
         USING IHADCB,R2
FREEPOOL TM    DCBBUFCA+L'DCBBUFCA-1,1  FREEPOOLED ?
         BNZ   FREEPOOP      YES; DON'T DO IT AGAIN
         ICM   R1,7,DCBBUFCA   DIRTY POOL ?
         BZ    FREEPOOP      YES; SKIP FREEPOOL AND 30A ABEND
         N     R1,=X'00FFFFFF' CLEAN IT
         SR    R15,R15                 CLEAR REGISTER
         IC    R15,5(,R1)    GET BUFNO
         MH    R15,6(,R1)      TIMES BUFLEN
         LA    R0,8(,R15)    PREFIX
         TM    4(R1),X'40'   SIXTEEN-BYTE PREFIX ?
         BNO   *+8           NO
         LA    R0,16(,R15)   SET LONG PREFIX
         LTCB  R15,USE=YES   LOAD TCB                           GP06343
         TM    TCBPKF,TCBFLAG  RUNNING IN KEY ZERO ?            GP06343
         BNZ   FREEFREE      NO; NORMAL ?                       GP06343
         ICM   R0,8,=AL1(252)  FUNNY SUBPOOL                    GP06343
         DROP  R15
FREEFREE SVC   10            FREE THE BUFFERS
FREEPOOP LA    R0,1
         STCM  R0,7,DCBBUFCA  DE-ACTIVATE POOL
         BR    R14           RETURN TO CALLER
         POP   USING
         EJECT ,
*---------------------------------------------------------------------*
*   MOVE INPUT DATA TO TEXT UNITS - MVD CHAIN IN R3; PARM IN R1       *
*---------------------------------------------------------------------*
MOVEDATA STM   R14,R12,12(R13)    SAVE FOR DEBUGGING (R14-R1 RETURNED)
         SR    R5,R5         CLEAR FOR IC
MOVEDATL LTR   R1,R1         LAST CALL PARAMETER PROCESSED ?
         BM    MOVEDATX      YES; RETURN
         LA    R1,4(,R1)     ADVANCE TO NEXT ONE
         IC    R5,0(,R3)     GET LENGTH AND FLAG BYTE
         SR    R6,R6
         ICM   R6,3,1(R3)    LOAD DESTINATION DISPLACEMENT
         LA    R6,TEXTBASE(R6)  MAKE ADDRESS
         N     R5,=X'0000007F'  REMOVE END OF LIST BIT
         L     R7,0(,R1)     LOAD USER'S PARAMETER ADDRESS
         LA    R7,0(,R7)     CLEAN FOR TEST
         LTR   R7,R7         ANY ?
         BZ    MOVEDATS      NO; SKIP (OR RETURN ERROR?)
         EX    R5,EXINPMVC   MOVE DATA TO TEXT
MOVEDATS TM    0(R3),X'80'   LAST LIST ENTRY ?
         BNZ   MOVEDATX      YES; RETURN
         LA    R3,3(,R3)     NEXT LIST
         B     MOVEDATL      AND TEST PARM END
MOVEDATX LM    R2,R12,28(R13)  R1 UPDATED
         BR    R14
EXINPMVC MVC   0(0,R6),0(R7)  MOVE DATA TO TEXT
         EJECT
*---------------------------------------------------------------------*
*   BUILD TEXT UNIT POINTERS                                          *
*---------------------------------------------------------------------*
BUILDTUS XC    TUWORK,TUWORK  CLEAR RB AND TEXT UNIT WORK AREA
         LA    R2,MYRB       POINT TO REQUEST BLOCK
         ST    R2,MYRBPTR+S99RBPTR-S99RBP    BUILD POINTER
         OI    MYRBPTR,S99RBPND    END BIT
         USING S99RB,R2      DECLARE BRIEFLY
         MVI   S99RBLN,S99RBEND-S99RB  BLOCK LENGTH
         MVI   S99VERB,S99VRBAL    ALLOCATE
         LA    R1,NEWTUS     TU POINTER START
         ST    R1,S99TXTPP   SET INTO RB
         LA    R1,NEWTUS-4   POINT TO NEW OUTPUT LESS ONE
         DROP  R2
BUILDTUL LH    R2,0(,R4)     GET OFFSET
         N     R2,=X'00007FFF'  KILL END OF LIST BIT
         LA    R2,TEXTBASE(R2)  ADDRESS OF TEXT UNIT
         LTR   R3,R3         NEED TO TEST TEXT PARM ?
         BNP   BUILDTUU      NO; UNCONDITIONAL
         CLI   6(R2),C'*'    PARAMETER MASK (ENTIRE PDS)
         BE    BUILDTUB      YES; BUMP TO NEXT ONE
         CLI   6(R2),C' '    PARAMETER PRESENT ?
         BNH   BUILDTUB      NO; BUMP TO NEXT ONE
BUILDTUU ST    R2,4(,R1)     FINAGLE
         LA    R1,4(,R1)     ADVANCE
BUILDTUB BCTR  R3,0          DECREMENT TEST COUNTER
         TM    0(R4),X'80'   LAST ITEM ?
         LA    R4,2(,R4)     BUMP ANYWAY
         BZ    BUILDTUL      LOOP
         OI    0(R1),X'80'   SET LAST TU
         BR    R14
         SPACE 2
*---------------------------------------------------------------------*
*   INPUT DCB EXIT - COPY DCB PARMS TO OUTPUT DCB                     *
*---------------------------------------------------------------------*
         PUSH  USING
         DROP  ,
         USING INPEXIT,R15
INPEXIT  N     R1,=X'00FFFFFF'  ONCE BURNED.....
         LR    R11,R1        COPY FOR EXTRA USING
         USING IHADCB,R1     BUT REALLY SAME AS R11
         USING SYSUT1,R11
         MVC   DXDRECFM,DCBRECFM  USE SAME RECFM AS INPUT
         TM    DCBRECFM,X'C0'   RECFM=U (OR D)?
         BNM   INPEXITU      YES
         TM    DCBRECFM,X'80'   RECFM=F ?
         BNZ   INPEXITF
INPEXITV LH    R3,DCBLRECL   INPUT LRECL
         LR    R2,R3         COPY FOR F
         SH    R2,=H'4'      AND DECREASE FOR F
         B     INPEXITC
INPEXITF LH    R2,DCBLRECL   INPUT LRECL
         LA    R3,4(,R2)     INCREASE FOR V
INPEXITC STH   R2,DXLRECLF   COPY DEFAULT
         STH   R2,DXLRECLU   COPY DEFAULT
         STH   R3,DXLRECLV   AND SET DEFAULT
         STH   R3,DXLRECLD   DITTO
         BR    R14           RETURN TO CALLER
INPEXITU MVC   DXLRECLU,DCBBLKSI  COPY BLOCK SIZE
         BR    R14           RETURN TO CALLER
         POP   USING
         SPACE 1
BLANKS   DC    CL44' '       CONSTANT                           GP11358
         LTORG ,                                                GP11358
         EJECT
*---------------------------------------------------------------------*
*   ERROR MESSAGES                                                    *
*---------------------------------------------------------------------*
MSGALLIN BCON  'INPUT ALLOCATION FAILED'
MSGALLOU BCON  'OUTPUT ALLOCATION FAILED'
MSGPRTOU BCON  'SYSPRINT TEMP. ALLOCATION FAILED'
MSGSYSDU BCON  'SYSIN DUMMY ALLOCATION FAILED'
MSGALLSP BCON  'SPACE ALLOCATION FAILED'
MSGATTCY BCON  'IEBCOPY ATTACH FAILED'
MSGEXECY BCON  'IEBCOPY FAILED'
MSGOPNIN BCON  'INPUT OPEN FAILED'
MSGOPNOU BCON  'OUTPUT OPEN FAILED'
MSGABEND BCON  'COPY REQUEST ABENDED XXXXX'
MSGBDFUN BCON  'INVALID FUNCTION REQUESTED'
MSGBADID BCON  'COPY TO SAME DATA SET FAILED'                   GP11358
         SPACE 1
*---------------------------------------------------------------------*
*   OPEN LIST AND DCB PATTERNS                                        *
*---------------------------------------------------------------------*
PATDCBS  DS    0F            START OF PATTERN
MFL      OPEN  (UT1,(INPUT),UT2,(OUTPUT)),MF=L
UT1      DCB   DDNAME=SYSUT1,MACRF=(GL),DSORG=PS,EODAD=INEODAD
UT2      DCB   DDNAME=SYSUT2,MACRF=(PL),DSORG=PS
PATDCBLN EQU   *-PATDCBS
PATXSPEC DCBEXITD FLAG1=DX1RCINT+DX1BLOCK+DX1NOFBS+DX1NOPCI+DX1FULLT+DX*
               1TRUNC,FLAG2=DX2CCADJ,FLAG3=DX3BLKTB,PREFIX=DP
PATXSPLN EQU   *-PATXSPEC
         SPACE 1
COPTU1   DC    AL2(INDSNAME-TEXTBASE)
         DC    AL2(INMEM-TEXTBASE)
         DC    AL2(INVOLSER-TEXTBASE)
         DC    AL2(INPASS-TEXTBASE)
         DC    AL2(INDDNAME-TEXTBASE)
         DC    AL2(DISPSHR-TEXTBASE)
         DC    AL2(FREECLOS-TEXTBASE)
         DC    AL2(DISPKEEP+X'8000'-TEXTBASE)
COPTU2   DC    AL2(OUTDSN-TEXTBASE)
         DC    AL2(OUTMEM-TEXTBASE)
         DC    AL2(OUTVOL-TEXTBASE)
         DC    AL2(OUPASS-TEXTBASE)
         DC    AL2(FREECLOS-TEXTBASE)
         DC    AL2(DISPOLD-TEXTBASE)
         DC    AL2(OUDDNAME-TEXTBASE)
         DC    AL2(DISPKEEP+X'8000'-TEXTBASE)
COPTU2A  DC    AL2(OUTDSN-TEXTBASE)                             GP06269
         DC    AL2(OUTMEM-TEXTBASE)                             GP06269
         DC    AL2(OUTVOL-TEXTBASE)                             GP06269
         DC    AL2(OUPASS-TEXTBASE)                             GP06269
         DC    AL2(FREECLOS-TEXTBASE)                           GP06269
         DC    AL2(DISPMOD-TEXTBASE)                            GP06269
         DC    AL2(OUDDNAME-TEXTBASE)                           GP06269
         DC    AL2(DISPKEEP+X'8000'-TEXTBASE)                   GP06269
COPTU3M  DC    AL2(OUTDSN-TEXTBASE)
         DC    AL2(OUTVOL-TEXTBASE)
         DC    AL2(OUPASS-TEXTBASE)
         DC    AL2(OUDDNAME-TEXTBASE)
         DC    AL2(DISPNEW-TEXTBASE)
         DC    AL2(DISPCAT-TEXTBASE)
         DC    AL2(DISPCDEL-TEXTBASE)
         DC    AL2(DSARECFM-TEXTBASE)
         DC    AL2(DSALRECL-TEXTBASE)
         DC    AL2(DSABLKSI-TEXTBASE)
         DC    AL2(SPCTYPE-TEXTBASE)
         DC    AL2(SPCPRIM-TEXTBASE)
         DC    AL2(SPCSEC-TEXTBASE)
         DC    AL2(ORGPO-TEXTBASE)
         DC    AL2(SPCDES+X'8000'-TEXTBASE)
COPTU3S  DC    AL2(OUTDSN-TEXTBASE)
         DC    AL2(OUTMEM-TEXTBASE)         NULL
         DC    AL2(OUTVOL-TEXTBASE)
         DC    AL2(OUPASS-TEXTBASE)
         DC    AL2(OUDDNAME-TEXTBASE)
         DC    AL2(FREECLOS-TEXTBASE)
         DC    AL2(DISPNEW-TEXTBASE)
         DC    AL2(DISPCAT-TEXTBASE)
         DC    AL2(DISPCDEL-TEXTBASE)
         DC    AL2(DSARECFM-TEXTBASE)
         DC    AL2(DSALRECL-TEXTBASE)
         DC    AL2(DSABLKSI-TEXTBASE)
         DC    AL2(SPCTYPE-TEXTBASE)
         DC    AL2(SPCPRIM-TEXTBASE)
         DC    AL2(SPCSEC-TEXTBASE)
         DC    AL2(SPCRELS+X'8000'-TEXTBASE)
CMPTU2   DC    AL2(OUTDSN-TEXTBASE)         COMPRESS LIST       GP13296
         DC    AL2(OUTVOL-TEXTBASE)                             GP13296
         DC    AL2(OUPASS-TEXTBASE)                             GP13296
         DC    AL2(FREECLOS-TEXTBASE)                           GP13296
         DC    AL2(DISPOLD-TEXTBASE)                            GP13296
         DC    AL2(OUDDNAME-TEXTBASE)                           GP13296
         DC    AL2(DISPKEEP+X'8000'-TEXTBASE)                   GP13296
SUBTU2   DC    AL2(SUBOUT-TEXTBASE)
         DC    AL2(SUBRDR-TEXTBASE)
         DC    AL2(OUDDNAME-TEXTBASE)
         DC    AL2(FREECLOS+X'8000'-TEXTBASE)
OUTTU2   DC    AL2(OUTOUT-TEXTBASE)
         DC    AL2(OUTFORM-TEXTBASE)
         DC    AL2(OUTDEST-TEXTBASE)
         DC    AL2(OUTWTR-TEXTBASE)
         DC    AL2(OUTCOP-TEXTBASE)
         DC    AL2(FREECLOS-TEXTBASE)
*DEFER*  DC    AL2(OUTSPIN-TEXTBASE)
         DC    AL2(OUDDNAME+X'8000'-TEXTBASE)
         SPACE 1
TEMPDU1  DC    AL2(WKDDNAM1-TEXTBASE)  ALLOCATE A DUMMY
         DC    AL2(WRKDUMMY-TEXTBASE+X'8000')
         SPACE 1
TEMPTU1  DC    AL2(WKDDNAM1-TEXTBASE)  ALLOCATE A TEMPORARY
         DC    AL2(DISPNEW-TEXTBASE)
         DC    AL2(DISPCDEL-TEXTBASE)
         DC    AL2(SPCTRK-TEXTBASE)
         DC    AL2(SPCTRKS-TEXTBASE)
         DC    AL2(SPCSECS-TEXTBASE+X'8000')
         SPACE 1
TEMPTU2  DC    AL2(WKDDNAM2-TEXTBASE)  ALLOCATE A TEMPORARY
         DC    AL2(DISPNEW-TEXTBASE)
         DC    AL2(DISPCDEL-TEXTBASE)
         DC    AL2(PRTRECFM-TEXTBASE)
         DC    AL2(PRTLRECL-TEXTBASE)
         DC    AL2(PRTBLKSI-TEXTBASE)
         DC    AL2(SPCTRK-TEXTBASE)
         DC    AL2(SPCTRKS-TEXTBASE)
         DC    AL2(SPCSECS-TEXTBASE+X'8000')
         SPACE 1
***********************************************************************
*   MOVE LISTS, IN PARM SEQUENCE                                      *
***********************************************************************
INPMVC   MVD   INDS          INPUT DSN
         MVD   INM                 MEMBER
         MVD   INV                 VOLSER
         MVD   INP,*END            PASSWORD
COPMVC   MVD   CVDSN         OUTPUT DSN
         MVD   CVMEM                MEMBER
         MVD   CVSER                VOLSER
         MVD   CVPSW,*END           PASSWORD
CMPMVC   MVD   CVDSN         OUTPUT DSN                         GP13296
         MVD   CVSER                VOLSER                      GP13296
         MVD   CVPSW,*END           PASSWORD                    GP13296
COAMVC   MVD   CVDSN         OUTPUT DSN
         MVD   CVMEM                MEMBER
         MVD   CVSER                VOLSER
         MVD   CVPSW                PASSWORD
         MVD   CVRECFM              RECORD FORMAT
         MVD   CVLRECL              RECORD LENGTH
         MVD   CVBLKL               BLOCK SIZE (=0 OK)
         MVD   CVSPTYP              SPACE TYPE (FINAGLED)
         MVD   CVSPRIM              PRIMARY QUANTITY
         MVD   CVSPSEC              SECONDARY
         MVD   CVDES,*END           DIRECTORY QUANTITY
OUTMVC   MVD   OVCLS         SYSOUT CLASS
         MVD   OVFRM                FORM
         MVD   OVCOP                COPIES (1-255)
         MVD   OVDEST               DESTINATION
         MVD   OVWTR,*END          OUTPUT WRITER
         SPACE 1
UNAMVC   MVD   OUTDDN,*END   UNALLOCATION DD NAME
         SPACE 1
*---------------------------------------------------------------------*
*   UNALLOCATION LISTS                                                *
*---------------------------------------------------------------------*
UNTU1    DC    AL2(UNDDNM-TEXTBASE)
         DC    AL2(UNHOLD-TEXTBASE)    RELEASE SYSOUT HOLD STATUS
         DC    AL2(UNALL+X'8000'-TEXTBASE)
         SPACE 2
***********************************************************************
*   INPUT TEXT UNITS                                                  *
***********************************************************************
TEXTBASE DS    0H            START OF TEXT UNITS
INDDNAME DC    Y(DALRTDDN,1,8)  RETURN DD NAME
INPDDN   DC    CL8' '        INPUT DD NAME
INDSNAME DC    Y(DALDSNAM,1,44)   INPUT DSN
INDS     DC    CL44' '
INMEM    DC    Y(DALMEMBR,1,8)    INPUT MEMBER
INM      DC    CL8' '
INVOLSER DC    Y(DALVLSER,1,6)    INPUT SERIAL
INV      DC    CL6' '
INPASS   DC    Y(DALPASSW,1,8)    PASSWORD
INP      DC    CL8' '
DISPSHR  DC    Y(DALSTATS,1,1),X'08'   DISP=SHR
DISPOLD  DC    Y(DALSTATS,1,1),X'01'   DISP=OLD
DISPMOD  DC    Y(DALSTATS,1,1),X'02'   DISP=MOD                 GP06269
DISPKEEP DC    Y(DALNDISP,1,1),X'08'   DISP=,KEEP
FREECLOS DC    Y(DALCLOSE,0)      FREE ON CLOSE
         SPACE 1
***********************************************************************
*   OUTPUT DATA SET TEXT UNITS                                        *
***********************************************************************
OUDDNAME DC    Y(DALRTDDN,1,8)  RETURN DD NAME
OUTDDN   DC    CL8' '        RETURNED OUTPUT DD NAME
OUTDSN   DC    Y(DALDSNAM,1,44)   OUTPUT DSN
CVDSN    DC    CL44' '
OUTMEM   DC    Y(DALMEMBR,1,8)    OUTPUT MEMBER
CVMEM    DC    CL8' '
OUTVOL   DC    Y(DALVLSER,1,6)    OUTPUT SERIAL
CVSER    DC    CL6' '
OUPASS   DC    Y(DALPASSW,1,8)    PASSWORD
CVPSW    DC    CL8' '
         SPACE 1
***********************************************************************
*   OUTPUT DATA SET TEXT UNITS WITH SPACE ALLOCATION                  *
***********************************************************************
DISPNEW  DC    Y(DALSTATS,1,1),X'04'  DISP=NEW
DISPCAT  DC    Y(DALNDISP,1,1),X'02'  ,CATLG
DISPCDEL DC    Y(DALCDISP,1,1),X'04'  ,,DELETE
DSARECFM DC    Y(DALRECFM,1,1)
CVRECFM  DC    X'00'
DSALRECL DC    Y(DALLRECL,1,2)
CVLRECL  DC    XL2'00'
DSABLKSI DC    Y(DALBLKSZ,1,2)
CVBLKL   DC    XL2'00'
SPCTYPE  DC    Y(DALTRK,0)  OVERLAYED BY CYL OR TRK
CVSPTYP  DC    X'00'
SPCPRIM  DC    Y(DALPRIME,1,3)
CVSPRIM  DC    XL3'00'
SPCSEC   DC    Y(DALSECND,1,3)
CVSPSEC  DC    XL3'00'
SPCRELS  DC    Y(DALRLSE,0)
SPCDES   DC    Y(DALDIR,1,3)
CVDES    DC    XL3'00'
ORGPO    DC    Y(DALDSORG,1,2),X'0200'  DSORG=PO
         SPACE 1
***********************************************************************
*   TEMPORARY WORK DATA SETS (SYSIN/SYSOUT/etc.)                      *
***********************************************************************
WKDDNAM1 DC    Y(DALRTDDN,1,8)  RETURN DD NAME
WKDD1    DC    CL8' '
SPCTRK   DC    Y(DALTRK,0)
SPCTRKS  DC    Y(DALPRIME,1,3)
         DC    XL3'10'
SPCSECS  DC    Y(DALSECND,1,3)
         DC    XL3'10'
PRTRECFM DC    Y(DALRECFM,1,1),X'94'  FBA
PRTLRECL DC    Y(DALLRECL,1,2,121)    LRECL=79
PRTBLKSI DC    Y(DALBLKSZ,1,2,1210)   BLKSIZE=6162
WKDDNAM2 DC    Y(DALRTDDN,1,8)  RETURN DD NAME
WKDD2    DC    CL8' '
WRKDUMMY DC    Y(DALDUMMY,0)  DD DUMMY
         SPACE 1
***********************************************************************
*   SUBMIT TEXT UNITS                                                 *
***********************************************************************
SUBOUT   DC    Y(DALSYSOU,1,1),C'A'
SUBRDR   DC    Y(DALSPGNM,1,8),CL8'INTRDR'
         SPACE 1
***********************************************************************
*   SYSOUT TEXT UNITS                                                 *
***********************************************************************
OUTOUT   DC    Y(DALSYSOU,1,1)
OVCLS    DC    CL1' '
OUTFORM  DC    Y(DALSFMNO,1,4)
OVFRM    DC    CL4' '
OUTCOP   DC    Y(DALCOPYS,1,1)
OVCOP    DC    AL1(1)        COPY COUNT
OUTDEST  DC    Y(DALSUSER,1,8)
OVDEST   DC    CL8' '
OUTWTR   DC    Y(DALSPGNM,1,8)
OVWTR    DC    CL8' '
*UTSPIN  DC    Y(DALSPIN,1,1),X'80'  IMMEDIATE SPIN
         SPACE 1
***********************************************************************
*   UNALLOCATION (FOR CASES WHERE OPEN FAILS)                         *
***********************************************************************
UNDDNM   DC    Y(DUNDDNAM,1,8)
UNDDNX   DC    CL8' '
UNALL    DC    Y(DUNUNALC,0)
UNHOLD   DC    Y(DUNOVSNH,0)
         EJECT
*---------------------------------------------------------------------*
*   DYNAMIC STORAGE                                                   *
*---------------------------------------------------------------------*
SAVE     DSECT
         SERVDEFS ,          COMMON GOODIES
OPENLIST OPEN  (UT1,(INPUT),UT2,(OUTPUT)),MF=L
SYSUT1   DCB   DDNAME=SYSUT1,MACRF=(GL),DSORG=PS
SYSUT2   DCB   DDNAME=SYSUT2,MACRF=(PL),DSORG=PS
INPXLIST DC    A(0)          INPUT EXIT
OUTXLIST DC    A(0),X'80',AL3(OUTXSPEC)
OUTXSPEC DCBEXITD FLAG1=DX1RCINT+DX1BLOCK+DX1NOFBS+DX1NOPCI+DX1FULLT+DX*
               1TRUNC,FLAG2=DX2CCADJ,FLAG3=DX3BLKTB,PREFIX=DX
         SPACE 1
MYRBPTR  DC    A(0)          RB POINTER
MYRB     DC    5A(0)         REQUEST BLOCK
NEWTUS   DC    32A(0)        TEXT UNIT POINTERS                 GP11358
TUWORK   EQU   MYRBPTR,*-MYRBPTR,C'A'  WORK AREA FOR CLEARING
         SPACE 1
OUTMAXLN DC    F'0'          MAXIMUM OUTPUT LRECL
OUTADJST DC    F'0'          4 FOR V AND D
INADJUST DC    F'0'          0-FF; 4-VF; 1/5 IF CC-> ^CC
OUTFREC  DC    X'00'         80 F; 40 V; 00 U
PROFLAGS DC    X'00'         PROCESSING FLAGS
PFOUT    EQU   X'80'           CALLED FOR O/P ALLOCATION ONLY
PFCOPY   EQU   X'40'           SHOW SOME TYPE OF COPY           GP11358
PFINT    EQU   X'20'           BYPASS INTEGRITY                 GP11358
         SPACE 1
CPYTCB   DS    A             TCB ADDRESS FOR DETACH
CPYECB   DS    A             ECB ADDRESS FOR ATTACH
CPY@PARM DS    A(CPYPARM,CPYDDNM+X'80000000')
CPYDDNM  DS    AL2(CPYDDND-*)
         DS    4XL8'0'       RESERVED
CPYDDIN  DS    CL8'SYSIN'
CPYDDPR  DS    CL8'SYSPRINT'
         DS    1XL8'0'       RESERVED
CPYDDUT1 DS    CL8'SYSUT1'   INPUT PDS
CPYDDUT2 DS    CL8'SYSUT2'   OUTPUT PDS
CPYDDUT3 DS    CL8'SYSUT3'   WORK DS
CPYDDUT4 DS    CL8'SYSUT4'   WORK DS
CPYDDND  EQU   *             END OF DD NAME LIST
         SPACE 1
SAVEEND  EQU   *
         SPACE 1
         DCBD  DEVD=DA,DSORG=PS
         SPACE 1                                                GP06343
         IKJTCB ,                                               GP06343
         SPACE 1                                                GP06343
         IHAPSA ,                                               GP06343
         SPACE 1
         IEFZB4D0 ,          DEFINE REQUEST BLOCK
         IEFZB4D2 ,          DEFINE TEXT UNIT VALUES
         END
