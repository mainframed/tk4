MCC2ASA  TITLE 'MCC2ASA *** CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'
         PUNCH ' ORDER MCC2ASA(P) '   EASIER DUMPS              GP04128
*   FROM CBT 464, FILE 414, MEMBER REWRITE - RENAMED MCC2ASA    GP04128
*---------------------------------------------------------------------*
*---     THIS PROGRAM READS IN A DATASET CONTAINING MACHINE        ---*
*---     CARRIAGE CONTROLS AND WRITES AN EQUIVALENT DATASET        ---*
*---     WITH ANSI CARRIAGE CONTROLS.                              ---*
*---                                                               ---*
*---     INPUT: DDNAME = SYSUT1.  IF SPANNED RECORDS ARE PRESENT   ---*
*---      THE USER MUST SPECIFY BFTEK=A IN THE DCB ATTRIBUTES.     ---*
*---                                                               ---*
*---     OUTPUT: DDNAME = SYSUT2.  ALL CHARACTERISTICS ARE COPIED  ---*
*---     EXCEPT THE CONTROL CHARACTER DESIGNATION, WHICH IS        ---*
*---     SET TO DENOTE ANSI CARRIAGE CONTROLS.                     ---*
*---                                                               ---*
*---     PROGRAM ATTRIBUTES: NON-REENTRANT, NON-REUSABLE,          ---*
*---     PROBLEM PROGRAM.                                          ---*
*---------------------------------------------------------------------*
*---  This program needed revision - the author failed to process  ---*
*---  the 'non-print' bit (x'80'), producing incorrect output.     ---*
*---  Also the output processing and DCB copy has been changed.    ---*
*---  Output is done in locate mode to permit insertion of an RDW  ---*
*---  when the input is F or U, and the output is V or D.          ---*
*---                                                               ---*
*---                                                               ---*
*---                                                               ---*
*---                                                               ---*
*---                                                               ---*
*---                                                               ---*
*---------------------------------------------------------------------*
         PRINT NOGEN                                            GP04128
MCC2ASA  CSECT ,
*--------------------------------------------------------------------*
*---     STANDARD NON-REENTRANT ENTRY LINKAGE.  NOTE THE USE OF   ---*
*---     R13 AS SAVE AREA POINTER AS WELL AS PROGRAM BASE REG.    ---*
*--------------------------------------------------------------------*
         B     12(,R15)            BRANCH AROUND
         DC    AL1(7),CL7'MCC2ASA'
         STM   R14,R12,12(R13)     SAVE ENTRY REGS
         BAL   R2,92(,R15)
         USING *,R13
         DS    18F
         XC    0(72,R2),0(R2)
         ST    R13,4(,R2)
         ST    R2,8(,R13)
         LR    R13,R2              LOAD PROGRAM BASE REGISTER
*--------------------------------------------------------------------*
*---     PREPARE DCBS FOR READING AND WRITING THE APPROPRIATE     ---*
*---     FILES.  IN DCB USES COMPLETION EXIT TO COPY THE          ---*
*---     ATTRIBUTES FROM IN DCB TO THE OUT DCB.                   ---*
*--------------------------------------------------------------------*
         DEVTYPE IN+DCBDDNAM-IHADCB,DB   IS THERE AN INPUT FILE GP13249
         BXH   R15,R15,MISSUT1      NO; FAIL                    GP13249
         DEVTYPE OUT+DCBDDNAM-IHADCB,DB  AND AN OUTPUT FILE?    GP13249
         BXLE  R15,R15,GO2OPEN      YES; PROCEED                GP13249
MISSUT2  WTO   'MCC2ASA: SYSUT2 DD BAD'  COMPLAIN               GP13249
         ABEND 001                                              GP13249
MISSUT1  MVI   MISSUT2+8+14,C'1'  CHANGE TO SYSUT1              GP13249
         B     MISSUT2
         SPACE 1
GO2OPEN  OPEN  ,MF=(E,OCLIST+4)   OPEN IN FIRST                 GP13249
         OPEN  ,MF=(E,OCLIST)                                   GP13249
*--------------------------------------------------------------------*
*---     MAIN PROCESSING LOOP STARTS HERE.                        ---*
*--------------------------------------------------------------------*
GETLOOP  MVC   SAVECC1,SAVECC2     UPDATE MY SAVE-VALUE         GP13249
         GET   IN                  READ A RECORD
         LR    R4,R1               COPY ITS ADDRESS             GP13249
         LR    R3,R4               COPY START                   GP13249
         AH    R3,INOFF            ADJUST FOR RDW, IF ANY       GP13249
         LH    R5,DCBLRECL-IHADCB+IN   SAVE RECORD LENGTH       GP13249
         CALL  CCCNVT,((R3))       CONVERT THE CONTROL
         STC   R0,SAVECC2          SAVE THE RESULT
         STC   R15,SAVECC2+1       SAVE SUPPRESS FLAG           GP13249
         MVC   0(1,R3),SAVECC1     COPY LAST C.C. INTO LINE
         AH    R4,INOFF      ADJUST FOR V/D INPUT FORMAT        GP13249
         SH    R5,INOFF      DITTO FOR LENGTH                   GP13249
         CLI   SAVECC1+1,0         SUPPRESS PRINTING ?          GP13249
         BE    PUTOUT                NO                         GP13249
         CLI   0(R3),C'+'          OVERPRINT ?                  GP13249
         BE    GETLOOP               YES; IGNORE IT             GP13249
         LR    R14,R4        COPY START ADDRESS                 GP13249
         LTR   R15,R5        COPY LENGTH                        GP13249
         BP    PUTFILL         USE IT                           GP13249
         LA    R15,1         WANT AT LEAST ONE BLANK            GP13249
         LA    R5,1          WANT AT LEAST ONE BLANK            GP13249
PUTFILL  L     R1,=X'40000000'    SET FOR BLANK FILL            GP13249
         MVCL  R14,R0        BLANK RECORD AFTER CC CHAR         GP13249
PUTOUT   TM    DCBRECFM-IHADCB+OUT,DCBRECU  RECFM=U?            GP13249
         BNM   PUTUND          YES                              GP13249
         TM    DCBRECFM-IHADCB+OUT,DCBRECF  RECFM=F?            GP13249
         BNZ   PUTFIX          YES                              GP13249
         LA    R2,4(,R5)     RECORD LENGTH WITH RDW             GP13249
         STH   R2,DCBLRECL-IHADCB+OUT  SET IT                   GP13249
         PUT   OUT           GET SPACE                          GP13249
         SLL   R2,16         MAKE LOW ZERO                      GP13249
         STCM  R2,15,0(R1)   STASH RDW                          GP13249
         LA    R1,4(,R1)     POINT AFTER RDW                    GP13249
         B     PUTCOM          JOIN COMMON MOVER                GP13249
PUTUND   STH   R5,DCBLRECL-IHADCB+OUT  SET CORRECT BLOCK LENGTH GP13249
PUTFIX   PUT   OUT           GET A RECORD                       GP13249
         LH    R5,DCBLRECL-IHADCB+OUT  GET FULL LENGTH          GP13249
         O     R5,=X'40000000'           AND PAD WITH BLANKS    GP13249
PUTCOM   LR    R0,R1         COPY RECORD ADDRESS                GP13249
         LR    R1,R5         COPY RECORD LENGTH                 GP13249
         MVCL  R0,R4         MOVE ASA CC AND TEXT               GP13249
         B     GETLOOP         DO NEXT RECORD                   GP13249
*--------------------------------------------------------------------*
*---     MAIN PROCESSING LOOP ENDS HERE.                          ---*
*--------------------------------------------------------------------*
*---     CLEAN UP FILES AND BUFFERS AND EXIT                      ---*
*--------------------------------------------------------------------*
ENDIN    CLOSE ,MF=(E,OCLIST)                                   GP13249
         FREEPOOL IN               RELEASE THE
         FREEPOOL OUT                BUFFER POOLS
         L     R13,4(,R13)         LOAD BACK POINTER
         LM    R14,R12,12(R13)     RESTORE THE REGS
         LA    R15,0               COND CODE ALWAYS ZERO
         BR    R14                 AND RETURN TO CALLER
         SPACE 3
*---------------------------------------------------------------------*
*---     THIS LITTLE ROUTINE COPIES THE IMPORTANT ATTRIBUTES       ---*
*---     FROM THE INPUT DCB TO THE OUTPUT DCB.                     ---*
*---     'PULLING A FAST ONE' CODE REMOVED TO EASE MAINTENANCE  GYP---*
*---------------------------------------------------------------------*
         PUSH  USING                                            GP13249
         DROP  ,                                                GP13249
         USING DCBEXIT,R15                                      GP13249
DCBEXIT  LA    R2,0(,R1)           COPY INPUT DCB ADDRESS
         TM    DCBLRECL-IHADCB(R2),DCBRECF  FIXED INPUT ?       GP13249
         BNZ   *+4+4                 YES; NOT VARIABLE          GP13249
         MVI   INOFF+L'INOFF-1,4   SET RDW OFFSET               GP13249
         LA    R3,OUT              LOAD OUTPUT DCB ADDRESS
         LA    R4,DCBRECFM-IHADCB(,R3)     POINT TO OUTPUT RECFM
         USING IHADCB,R2           DECLARE THE INPUT DCB        GP13249
         ICM   R0,3,DCBLRECL-IHADCB(R3)    PRESET OUTPUT ?      GP13249
         BNZ   OPXHLRE                       YES; DON'T CLOBBER GP13249
         LH    R0,DCBLRECL-IHADCB(,R2)     LOAD INPUT LRECL
         STH   R0,DCBLRECL-IHADCB(,R3)     STORE IN OUTPUT DCB
OPXHLRE  ICM   R0,3,DCBBLKSI-IHADCB(R3)    PRESET OUTPUT ?      GP13249
         BNZ   OPXHBLK                       YES; DON'T CLOBBER GP13249
         LH    R0,DCBBLKSI-IHADCB(,R2)     LOAD INPUT BLKSIZE
         STH   R0,DCBBLKSI-IHADCB(,R3)     STORE IN OUTPUT DCB
OPXHBLK  ICM   R0,1,DCBRECFM-IHADCB(R3)    PRESET OUTPUT ?      GP13249
         BNZ   OPXHFRM                       YES; DON'T CLOBBER GP13249
         IC    R0,DCBRECFM-IHADCB(,R2)     INSERT RECORD FORMAT
         STC   R0,DCBRECFM-IHADCB(,R3)     STORE IN OUTPUT DCB
OPXHFRM  NI    0(R4),255-DCBRECCM  TURN OFF MACHINE CTL BIT
         OI    0(R4),DCBRECCA      TURN ON ANSI-CTL BIT
         BR    R14                 AND RETURN
         POP   USING                                            GP13249
         LTORG ,                   DISPLAY ANY LITERALS
         SPACE 3
DB       DC    D'0'          WORK AREA                          GP13249
OCLIST   OPEN  (OUT,OUTPUT,IN,(INPUT,REREAD)),MF=L              GP13249
IN       DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=ENDIN,            X
               EXLST=EXITS,BFTEK=A
OUT      DCB   DSORG=PS,MACRF=PL,DDNAME=SYSUT2                  GP13249
EXITS    DS    0A
         DC    XL1'85',AL3(DCBEXIT) COMPLETION EXIT TO COPY ATTRIBUTES
INOFF    DC    H'0'          SET TO 4 FOR V/D INPUT             GP13249
SAVECC1  DC    0XL2'0',C'+',X'00'  INITIAL VALUE: OVERPRINT     GP13249
SAVECC2  DC    0XL2'0',C'+',X'00'  INITIAL VALUE: SINGLEISPACE  GP13249
         SPACE 3
         DCBD  DSORG=PS                                         GP13249
         YREGS ,
*NOBATCH END   ,
         TITLE 'CCCNVT - CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'
*CCNVT   TITLE 'CCCNVT - CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'
CCCNVT   CSECT ,
*---------------------------------------------------------------------*
*---     THIS SUBROUTINE TAKES IN A SINGLE-CHARACTER MACHINE-CODE  ---*
*---           CARRIAGE CONTROL AND RETURNS THE ANSI EQUIVALENT    ---*
*---           IN R0.  A RETURN CODE OF 0 DENOTES THAT THE         ---*
*---           LINE, CONTAINING THE MACHINE CODE CONTROL, IS TO    ---*
*---           BE PRINTED AFTER TRANSLATION, WHILE A '4' RETURN    ---*
*---           CODE INDICATES THAT THE CONTROL WAS AN IMMEDIATE    ---*
*---           COMMAND AND THE CONTAINING LINE SHOULD BE           ---*
*---           DISCARDED AFTER CARRIAGE CONTROL EXTRACTION AND     ---*
*---           TRANSLATION.                                        ---*
*---                                                               ---*
*---     ATTRIBUTES: REENTRANT, REUSABLE, REFRESHABLE              ---*
*---           (MAY BE LPALIB RESIDENT) STANDARD LINKAGE           ---*
*---           CONVENTIONS ARE ADHERED TO THROUGHOUT.              ---*
*---                                                               ---*
*---     HERE ARE THE MACHINE-CODE CARRIAGE CONTROLS PROCESSED:    ---*
*---                                                               ---*
*---     01 - WRITE, NO SPACE                                      ---*
*---     09 - WRITE, SPACE 1 LINE                                  ---*
*---     0B - IMMEDIATE SPACE 1 LINE                               ---*
*---     11 - WRITE, SPACE 2 LINES                                 ---*
*---     13 - IMMEDIATE SPACE 2 LINES                              ---*
*---     19 - WRITE, SPACE 3 LINES                                 ---*
*---     1B - IMMEDIATE SPACE 3 LINES                              ---*
*---     89 - WRITE, SKIP TO CHANNEL 1                             ---*
*---     8B - IMMEDIATE SKIP TO CHANNEL 1                          ---*
*---     91 - WRITE, SKIP TO CHANNEL 2                             ---*
*---     93 - IMMEDIATE SKIP TO CHANNEL 2                          ---*
*---     99 - WRITE, SKIP TO CHANNEL 3                             ---*
*---     9B - IMMEDIATE SKIP TO CHANNEL 3                          ---*
*---     A1 - WRITE, SKIP TO CHANNEL 4                             ---*
*---     A3 - IMMEDIATE SKIP TO CHANNEL 4                          ---*
*---     A9 - WRITE, SKIP TO CHANNEL 5                             ---*
*---     AB - IMMEDIATE SKIP TO CHANNEL 5                          ---*
*---     B1 - WRITE, SKIP TO CHANNEL 6                             ---*
*---     B3 - IMMEDIATE SKIP TO CHANNEL 6                          ---*
*---     B9 - WRITE, SKIP TO CHANNEL 7                             ---*
*---     BB - IMMEDIATE SKIP TO CHANNEL 7                          ---*
*---     C1 - WRITE, SKIP TO CHANNEL 8                             ---*
*---     C3 - IMMEDIATE SKIP TO CHANNEL 8                          ---*
*---     C9 - WRITE, SKIP TO CHANNEL 9                             ---*
*---     CB - IMMEDIATE SKIP TO CHANNEL 9                          ---*
*---     D1 - WRITE, SKIP TO CHANNEL 10                            ---*
*---     D3 - IMMEDIATE SKIP TO CHANNEL 10                         ---*
*---     D9 - WRITE, SKIP TO CHANNEL 11                            ---*
*---     DB - IMMEDIATE SKIP TO CHANNEL 11                         ---*
*---     E1 - WRITE, SKIP TO CHANNEL 12                            ---*
*---     E3 - IMMEDIATE SKIP TO CHANNEL 12                         ---*
*---                                                               ---*
*---     ALL OTHERS ARE LEFT AS-IS.                                ---*
*---------------------------------------------------------------------*
         STM   R14,R12,12(R13)     SAVE THE ENTRY REGISTERS
         LR    R12,R15             COPY THE E.P. ADDRESS
         USING CCCNVT,R12          AND DECLARE THE BASE
         L     R2,0(,R1)           LOAD THE CONTROL CHARACTER POINTER
         LA    R3,0                CLEAR A WORK REGISTER
         IC    R3,0(,R2)           AND INSERT THE CHARACTER
         LA    R4,CCTAB(R3)        POINT INTO THE TABLE
         IC    R3,0(,R4)           TRANSLATE IT
         LA    R15,0               ASSUME WE PRINT THIS ONE
         TM    0(R4),X'80'         SUPPRESS CODE ??E
         BZ    *+8                 NOPE ---
         LA    R15,4               YES; SET 4 RETURN CODE
         N     R3,=A(X'7F')        REMOVE SUPPRESS CODE
         CH    R3,=AL2(ANSILEN)    DO WE XLATE ??
         BL    ICANSI              YES ---
         IC    R0,0(,R2)           NOPE; RETURN ORIGINAL CODE
ENDIT    DS    0H
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         BR    R14                 AND RETURN TO CALLER
ICANSI   DS    0H
         IC    R0,ANSITAB(R3)      LOAD THE ANSI EQUIVALENT
         B     ENDIT               AND RETURN TO CALLER
         SPACE 3
*---------------------------------------------------------------------*
*---     THE FOLLOWING TRANSLATE TABLE DESCRIBES THE TRANSLATION   ---*
*---     OF EACH CARRIAGE CONTROL. THE FORMAT OF EACH ENTRY IS     ---*
*---     THIS:                                                     ---*
*---                                                               ---*
*---     B'1... ....'  --- SUPPRESS PRINT OF THIS LINE             ---*
*---                                                               ---*
*---     B'0... ....'  --- PRINT THIS LINE WITH THE TRANSLATED     ---*
*---                       CONTROL FROM THE PREVIOUS LINE          ---*
*---                                                               ---*
*---     B'.XXX XXXX'  --- INDEX INTO ANSITAB FOR THE APPROPRIATE  ---*
*---                       ANSI CARRIAGE CONTROL EQUIVALENT.       ---*
*---                                                               ---*
*---     NOTE THAT ALL NON-PROCESSED CARRIAGE CONTROLS HAVE        ---*
*---     TRANSLATE VALUES OF 7F. THE ALGORITHM CHECKS THAT         ---*
*---     THE TRANSLATED VALUE FALLS WITHIN THE LENGTH OF ANSITAB   ---*
*---     SO THAT AN INVALID CONTROL IS REPLACED WITH ITSELF.       ---*
*---------------------------------------------------------------------*
CCTAB    DC    16X'7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F'
         ORG   CCTAB+X'01'         WRITE WITHOUT SPACING
         DC    AL1(0)
         ORG   CCTAB+X'09'         WRITE AND SPACE 1 LINE
         DC    AL1(1)
         ORG   CCTAB+X'11'         WRITE AND SPACE 2 LINES
         DC    AL1(2)
         ORG   CCTAB+X'19'         WRITE AND SPACE 3 LINES
         DC    AL1(3)
         ORG   CCTAB+X'89'         WRITE AND SKIP TO CHANNEL 1
         DC    AL1(4)
         ORG   CCTAB+X'91'         WRITE AND SKIP TO CHANNEL 2
         DC    AL1(5)
         ORG   CCTAB+X'99'         WRITE AND SKIP TO CHANNEL 3
         DC    AL1(6)
         ORG   CCTAB+X'A1'         WRITE AND SKIP TO CHANNEL 4
         DC    AL1(7)
         ORG   CCTAB+X'A9'         WRITE AND SKIP TO CHANNEL 5
         DC    AL1(8)
         ORG   CCTAB+X'B1'         WRITE AND SKIP TO CHANNEL 6
         DC    AL1(9)
         ORG   CCTAB+X'B9'         WRITE AND SKIP TO CHANNEL 7
         DC    AL1(10)
         ORG   CCTAB+X'C1'         WRITE AND SKIP TO CHANNEL 8
         DC    AL1(11)
         ORG   CCTAB+X'C9'         WRITE AND SKIP TO CHANNEL 9
         DC    AL1(12)
         ORG   CCTAB+X'D1'         WRITE AND SKIP TO CHANNEL 10
         DC    AL1(13)
         ORG   CCTAB+X'D9'         WRITE AND SKIP TO CHANNEL 11
         DC    AL1(14)
         ORG   CCTAB+X'E1'         WRITE AND SKIP TO CHANNEL 12
         DC    AL1(15)
         ORG   CCTAB+X'0B'         IMMEDIATE SPACE 1 LINE
         DC    AL1(128+01)
         ORG   CCTAB+X'13'         IMMEDIATE SPACE 2 LINES
         DC    AL1(128+02)
         ORG   CCTAB+X'1B'         IMMEDIATE SPACE 3 LINES
         DC    AL1(128+03)
         ORG   CCTAB+X'8B'         IMMEDIATE SKIP TO CHANNEL 1
         DC    AL1(128+04)
         ORG   CCTAB+X'93'         IMMEDIATE SKIP TO CHANNEL 2
         DC    AL1(128+05)
         ORG   CCTAB+X'9B'         IMMEDIATE SKIP TO CHANNEL 3
         DC    AL1(128+06)
         ORG   CCTAB+X'A3'         IMMEDIATE SKIP TO CHANNEL 4
         DC    AL1(128+07)
         ORG   CCTAB+X'AB'         IMMEDIATE SKIP TO CHANNEL 5
         DC    AL1(128+08)
         ORG   CCTAB+X'B3'         IMMEDIATE SKIP TO CHANNEL 6
         DC    AL1(128+09)
         ORG   CCTAB+X'BB'         IMMEDIATE SKIP TO CHANNEL 7
         DC    AL1(128+10)
         ORG   CCTAB+X'C3'         IMMEDIATE SKIP TO CHANNEL 8
         DC    AL1(128+11)
         ORG   CCTAB+X'CB'         IMMEDIATE SKIP TO CHANNEL 9
         DC    AL1(128+12)
         ORG   CCTAB+X'D3'         IMMEDIATE SKIP TO CHANNEL 10
         DC    AL1(128+13)
         ORG   CCTAB+X'DB'         IMMEDIATE SKIP TO CHANNEL 11
         DC    AL1(128+14)
         ORG   CCTAB+X'E3'         IMMEDIATE SKIP TO CHANNEL 12
         DC    AL1(128+15)
         ORG   ,                   RE-ESTABLISH ORIGINS
ANSITAB  DC    C'+ 0-123456789ABC'
ANSILEN  EQU   *-ANSITAB
*DUPE*   YREGS ,                                                GP04128
         END   ,
