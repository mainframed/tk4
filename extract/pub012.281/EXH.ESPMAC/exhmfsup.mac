         MACRO ,                                                 89230
&NM      EXHMFSUP &LIST=YES,&UNDEF=C'.'                          89230
         LCLB  &DIR,&VSAM                                        90079
&DIR     SETB  ('&SYSECT' EQ 'EXHCXUPV')                         89230
&VSAM    SETB  ('&SYSECT'(1,7) EQ 'EXHCXVS')                     90079
         PUSH  PRINT                                             89230
         AIF   ('&LIST' NE '' AND '&LIST' NE 'YES').NOLIST       89230
         PRINT GEN                                               89230
.NOLIST  ANOP  ,                                                 89230
*        NOTE - THE CURSOR IS PLACED IN THE COMMAND AREA TO PREVENT
*        INADVERTANT LOSS OF DATA.
         SPACE 1
         L     R7,EXCLODAD   GET LOADED BUFFER
         USING XIOWORK,R7    DECLARE IT
         SLR   R0,R0                                             89230
         ICM   R0,3,DRMLRECL GET RECORD LENGTH                   89230
         BNP   DEFSIZE       NOT USABLE - SET DEFAULT            89230
         CH    R0,LSIZE      MORE THAN ONE DISPLAY LINE ?        89230
         BH    DEFSIZE       YES; USE DISPLAY SIZE               89230
         TM    DRMRECFM,X'80'  RECFM=F ?                         89230
         BZ    DEFSIZE       NO                                  89230
         TM    DRMRECFM,X'40'  RECFM=U OR V ?                    89230
         BZ    SETSIZE       NO; ACCEPT USER'S LENGTH            89230
DEFSIZE  LH    R0,LSIZE      ELSE USE LINE SIZE                  89230
SETSIZE  STH   R0,PFKMOVE                                        89230
         LNR   R1,R0                                             89230
         STH   R1,PFKMOVE+6                                      89230
         MH    R0,=H'3'      THREE LINES                         89230
         STH   R0,PFKMOVE+2                                      89230
         LNR   R1,R0                                             89230
         STH   R1,PFKMOVE+8                                      89230
         LH    R0,PFKMOVE                                        89230
         MH    R0,=H'10'                                         89230
         STH   R0,PFKMOVE+4                                      89230
         LNR   R1,R0                                             89230
         STH   R1,PFKMOVE+10                                     89230
         USING DSPHEAD,R10   DECLARE BUFFER
         LH    R1,LSIZE                                          89230
         LA    R0,DS7INPUT-DS7OFFP-1(,R1)  OFFSET TO COMMAND AREA
         BALS  R14,MAKESBA                                       89230
         MVC   DFLTSBA(3),DB  SET DEFAULT CURSOR ADDRESS         89230
         SLA   R1,1          DOUBLE                              89230
         STH   R1,DC2LINE    SAVE                                89230
         LA    R2,2          SET FLAG FOR LINE FULL              89230
         LH    R1,LSIZE      GET LINE SIZE                       89230
         BCTR  R1,0                                              89230
         CH    R1,DC1LINE    IS RECORD SAME AS LINE SIZE ?       89230
         BL    SETFLAG       YES; NO PADDING                     89230
         LA    R2,1          SET FOR SF ONLY                     89230
         BE    SETFLAG       IF ONE BYTE SHORTER                 89230
         SLR   R2,R2         ELSE SET FOR FULL PAD               89230
SETFLAG  STC   R2,DYNWORK+6  SET PADDING FLAG                    89230
         BALS  R14,BLANKER   JUST IN CASE                        87203
         SPACE 1                                                 87203
MOVENEWC MVC   NEXTCURS,DFLTSBA   DEFAULT CURSOR TO COMMAND AREA
MOVEAGIN L     R10,BUFAD     LOAD BUFFER ADDRESS
         SLR   R1,R1         CLEAR FOR ICM                       87207
         ICM   R1,3,OFFSET   GET OFFSET ADDRESS                  87207
         BALS  R14,NICEOFF   MAKE IT A CARD MULTIPLE
         BALS  R9,CONFORM    CLEAR THE SCREEN
         USING DSPSECT,R10   USE FULL BUFFER
         MVC   DS7MSG,REPLY  COPY MESSAGE
         MVC   REPLY,BLANKS  CLEAR TEMPORARY MESSAGE HOLDER
         MVC   DB+7(1),MODEFG   COPY LOCK BIT                    81323
         NI    DB+7,MODELOCK    CLEAR OTHERS                     81323
         AIF   (&VSAM).VSAM1                                     90079
         LA    R6,BLOCKBUF   GET THE INPUT BUFFER
         SLR   R5,R5         CLEAR FOR ICM                       87207
         ICM   R5,3,DRLEN    GET BLOCK LENGTH                    87207
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   MOVENKEY      YES; LEAVE AS IS
         SH    R5,KL         ALLOW FOR KEY LENGTH
         AH    R6,KL         DITTO WITH START DISPLACEMENT
         AGO   .NSAM1                                            90079
.VSAM1   L     R6,DRSLI-4    LOAD RECORD START                   90079
         L     R5,DRSLI      LOAD RECORD LENGTH                  90079
.NSAM1   SPACE 1                                                 90079
MOVENKEY SLR   R1,R1                                             87207
         ICM   R1,3,OFFNEXT  GET START DISPLAY OFFSET            87207
         AR    R6,R1         GET OFFSET IN BUFFER
         SR    R5,R1         GET RESIDUAL LENGTH
         BP    MOVEN0OF      DISPLAY IF NOT ZERO
         TM    ZAPFG,FZAP    TEXT UPDATED ?
         BZ    MOVEN0OF      NO; LEAVE IT
         CLC   DS7MSG,BLANKS   ANY TEXT ?                        81323
         BNE   MOVEN0OF      NO; SKIP                            81323
         MVC   DS7MSG(L'MSGSUCC),MSGSUCC  SHOW DATA REPLACED     81323
MOVEN0OF LA    R2,DS7TEXT    POINT TO TEXT AREA
         LH    R3,LNO        GET LINES ON SCREEN                 89230
         SH    R3,=H'2'      LESS FIXED LINES ON TOP             89230
         MH    R3,DC1LINE    TIMES SIZE OF ONE LINE              89230
         LH    R4,DC2LINE    SET SCREEN DISPLACEMENT             89230
         LTR   R5,R5         NULL TEXT ?
         BNP   MOVENONE      YES
         CR    R3,R5         USE SMALLER VALUE TO MOVE
         BNH   *+6           MORE DATA THAN FIT
         LR    R3,R5         USE ONLY DATA LENGTH
         LR    R5,R3         SAVE DATA LENGTH
         LH    R14,DC1LINE   DATA ON ONE LINE                    89230
MOVELOOP CR    R14,R3        MORE THAN ONE LINE ?
         BNH   *+6           YES
         LR    R14,R3        ELSE SET TO SHORTER VALUE
         BCTR  R14,0         SET EXECUTE LENGTH
         EX    R14,MOVEMVC   MOVE TEXT
         EX    R14,MOVETR    TRANSLATE IT
         EX    R14,MOVECLC   CHECK FOR UNPRINTABLES              81323
         BE    MOVEPRNT      NONE                                89230
         OI    DB+7,MODELOW  SET LOCAL LOCK BIT                  81323
         CLI   DYNWORK+6,2   FULL-SCREEN MODE ?                  89230
         BE    MOVEPRNT      YES                                 89230
         LR    R15,R2        COPY BUFFER START                   89230
         SH    R15,=H'2'     BACK-UP                             89230
         CLI   0(R15),X'11'  START-FIELD ?                       89230
         BNE   MOVEPRNT      HUH ?                               89230
         MVC   0(2,R15),SFININT  SET INTENSIFIED INPUT           89230
         TM    ZAPFG,FNO     PARTIAL RECORD IN STORAGE ?
         BZ    *+10          NO
         MVC   0(2,R15),SFPROTIN  PROTECT DISPLAY
         AIF   (NOT &DIR).COMNOUT                                89230
         TM    DWFLAG,DWOUTPUT  ALLOWED TO MODIFY ?              87203
         BNZ   MOVEPRNT      YES; LEAVE INTENSE
         MVC   0(2,R15),SFPROT  UNINTENSIFY AND PROTECT
.COMNOUT ANOP  ,                                                 89230
MOVEPRNT LA    R14,1(,R14)   GET TRUE LENGTH BACK                89230
         AR    R6,R14        UPDATE INPUT ADDRESS
         AR    R2,R14        UPDATE OUTPUT ADDRESS
         SR    R3,R14        GET RESIDUAL LENGTH
         BNP   MOVENONE      NO MORE TO DO                       89230
         AH    R4,LSIZE      SPACE TO NEXT LINE                  89230
         CH    R4,BUFSIZ     IS BUFFER FULL ?                    89230
         BNL   MOVENONE      YES; QUIT NOW                       89230
         CLI   DYNWORK+6,1   TEST PADDING ACTION TO BE TAKEN     89230
         BH    MOVELOOP      NO FINAGLING REQUIRED (LRECL=LSIZE) 89230
         BE    MOVESFON      ADD SF (LRECL-1 = LSIZE)            89230
         MVC   0(2,R2),SFPROT  PROTECT                           89230
         LR    R0,R4         GET ADDRESS OF CURRENT LINE         89230
         BCTR  R0,0          BACKSPACE TO LAST ON THIS LINE      89230
         BALS  R14,MAKESBA   CONVERT TO SBA ORDER
         MVC   2(3,R2),DB    INCLUDE SBA                         89230
         LA    R2,5(,R2)     SKIP OVER IT                        89230
         LH    R14,DC1LINE   RESTORE R14                         89230
MOVESFON MVC   0(2,R2),SFEND2  MAKE UNPROTECTED                  89230
         LA    R2,2(,R2)                                         89230
         B     MOVELOOP      DO THE NEXT LINE                    89230
MOVENONE LTR   R1,R5         VALID TEXT LENGTH ?                 89230
         BP    MOVESOME      YES                                 89230
         SLR   R5,R5         ELSE ZERO IT                        89230
         SLR   R1,R1         DITTO                               89230
         B     MOVESTMX      AND SET MAX TEXT OFFSET             89230
MOVESOME LR    R0,R5         COPY DATA LENGTH                    89230
         SRDL  R0,32         SWAP FOR DIVIDE                     89230
         LH    R14,DC1LINE   GET LINE SIZE                       89230
         DR    R0,R14        GET PARTIAL DATA/NUMBER OF LINES    89230
         LTR   R0,R0         PARTIAL LINE ?                      89230
         BP    MOVESUMP      YES                                 89230
         BCTR  R1,0          ELSE MAKE ONE LESS                  89230
         LH    R0,DC1LINE    AND MAKE OFFSET RECORD LENGTH       89230
         BCTR  R0,0            MINUS ONE                         89230
MOVESUMP MH    R1,LSIZE      SCREEN OFFSET TO LAST LINE          89230
         AR    R1,R0         PLUS PARTIAL LINE                   89230
MOVESTMX STH   R1,MAXADD     SET MAXIMUM USED SCREEN ADDRESS(LINE
         MVC   0(LNCURSIC,R2),SFPROT  ADD PROT/CURSOR ORDER      89230
CURSFIX  MVC   DB(3),NEXTCURS  SET NEW CURSOR ADDRESS            89230
         BALS  R14,GETCURS                                       89230
         SH    R0,DC2LINE    SEE IF IN TEXT AREA                 89230
         BM    CURSFIXT      NO; LEAVE IT                        89230
CURSFIXL CH    R0,MAXADD     LONGER THAN TEXT ?                  89230
         BL    CURSFIXT      NO; OK                              89230
         SH    R0,LSIZE      BACKSPACE A LINE                    89230
         BP    CURSFIXL      CHECK IT AGAIN                      89230
         SLR   R0,R0         ELSE MAKE ZERO                      89230
CURSFIXT AH    R0,DC2LINE    RELOCATE TO TEXT AREA               89230
         BALS  R14,MAKESBA   CONVERT TO SBA ORDER                89230
         TM    ZAPFG,FNO     UNZAPPABLE ?                        81323
         BNZ   LOCKMSG       YES; SHOW LOCKED                    81323
         TM    DB+7,MODELOW+MODELOCK  UNPRINTABLE DATA ?         81323
         BNO   LOCKNOMG      NO                                  81323
LOCKMSG  MVC   DS7LOCK,DCLOCK  INDICATE LOCKED                   81323
LOCKNOMG MVC   2(3,R2),DB    MOVE TO BUFFER
         LA    R3,LNCURSIC(,R2)  GET FIRST BYTE AFTER BUFFER     89230
         S     R3,BUFAD      GET TEXT BUFFER SIZE                89230
         BALS  R9,EXCRITE    WRITE THE PAGE BACK
         B     EXITWERR      GO TO WRITE ERROR EXIT
         LR    R2,R10        GET BUFFER ADDRESS BACK
         XC    0(7,R2),0(R2)  CLEAR POTENTIAL CONTROL INFO
         BALS  R9,EXCWAIT    WAIT FOR ATTENTION
         B     EXITNATN      QUIT IF NONE
         LR    R2,R10        GET BUFFER ADDRESS BACK
         LH    R3,BUFSIZ     SET MAXIMUM INPUT LENGTH            89230
         AH    R3,LSIZE      PLUS MESSAGE LINE                   89230
         LA    R0,512        MINIMUM LENGTH FOR FULL-SCREEN READ CODE
         CR    R3,R0         IS IT ?
         BNL   *+6           YES
         LR    R3,R0         ELSE USE MINIMUM
         STM   R2,R3,RDMODCCW   PUT INTO READ CCW                81322
         MVI   RDMODCCW,6    SET READ MODIFIED OPCODE            81322
         MVI   RDMODCCW+4,X'20'  SET THE SILLY BIT               81322
         LNR   R3,R3         BYPASS INPUT PRE-PROCESSING
         LA    R1,RDSELCCW   POINT TO SELECT CCW                 81322
         BALS  R9,EXCIOCOM   READ MODIFIED FOR FULL BUFFER
           B   EXITRERR      ERROR EXIT
         NOP   0             EXPECTED RETURN
*CLOBB   LPR   R3,R3         RESTORE READ LENGTH
         LH    R3,RDMODCCW+6  REGAIN REQUEST LENGTH             GP08318
         SH    R3,SQIOBCSW+6  GET TRUE INPUT LENGTH
         LR    R2,R10        RESTORE BUFFER ADDRESS
         MVC   REPLY,BLANKS  CLEAR INPUT/MESSAGE AREA
         MVC   NEXTCURS,DFLTSBA   DEFAULT CURSOR TO COMMAND AREA
         CLI   0(R2),X'01'   TEST-REQUEST SOH/STX SEQUENCE ?
         BNE   *+8           NO
         MVI   0(R2),X'10'   TEST-REQUEST ?
         TM    0(R2),X'30'   EITHER HEX 10 OR 20 ON ?
         BNZ   NOT24KEY      NO
         TM    0(R2),X'C0'   ALREADY CONVERTED ?
         BZ    NOT24KEY      YES; TOO LATE
         OI    0(R2),X'10'   MAKE PFK13-24 INTO PFK1-12
NOT24KEY NI    0(R2),X'1F'   MASK AID
         CLI   0(R2),X'10'   TEST REQUEST KEY ?
         BNE   NOTTREQ       NO
         CLI   3(R2),X'11'   FIXED BY EXORCIST ?
         BE    NOTTREQ       YES
         MVC   2(2,R2),DFLTSBA+1  DON'T HAVE CURSOR ADDRESS
         MVI   1(R2),X'10'   AND DON'T WANT TO READ AGAIN
         LA    R2,1(,R2)
         BCTR  R3,0          FIX IT
NOTTREQ  LR    R4,R2         SAVE THE AID ADDRESS                81347
         CLI   0(R2),X'1D'   ENTER ?                             81347
         BE    HAVENTRY      YES; CHECK FURTHER
         CLI   0(R2),X'0C'   PA1 ?
         BE    EXITEXIT      YES; QUIT
         CLI   0(R2),X'13'   PFK 3?                             GP08318
         BE    EXITEXIT      YES; QUIT
         CLI   0(R2),X'0E'   CANCEL ?
         BE    EXITEXIT      YES; QUIT
         CLI   0(R2),X'0D'   CLEAR KEY ?
         BE    MOVENEWC      YES; RE-CREATE THE SCREEN
*OLD*    CLI   0(R2),X'10'   TEST-REQUEST ?                     GP08318
         CLI   0(R2),X'15'   PFK 5? LOCATE/FIND                 GP08318
         BE    HAVETEST      YES
         CLI   0(R2),X'1C'   PFK 12 ?
         BE    HAVENTRY      PFK 12 - HOME CURSOR TO COMMAND LINE
         MVC   NEXTCURS,0(R2)  SAVE USER'S CURSOR ADDRESS
         LA    R14,PFKMOVE+06   POINT TO SHIFT AMOUNT           GP08318
         CLI   0(R2),X'1A'   PFK 10 ?                           GP08318
         BE    HAVSHIFT      YES; CHANGE OFFSET                 GP08318
         LA    R14,PFKMOVE+08   POINT TO SHIFT AMOUNT           GP08318
         CLI   0(R2),X'11'   PFK  1 ?                           GP08318
         BE    HAVSHIFT      YES; CHANGE OFFSET                 GP08318
         LA    R14,PFKMOVE+10   POINT TO SHIFT AMOUNT           GP08318
         CLI   0(R2),X'17'   PFK  7 ?                           GP08318
         BE    HAVSHIFT      YES; CHANGE OFFSET                 GP08318
         LA    R14,PFKMOVE+00   POINT TO SHIFT AMOUNT           GP08318
         CLI   0(R2),X'1B'   PFK 11 ?                           GP08318
         BE    HAVSHIFT      YES; CHANGE OFFSET                 GP08318
         LA    R14,PFKMOVE+02   POINT TO SHIFT AMOUNT           GP08318
         CLI   0(R2),X'12'   PFK  2 ?                           GP08318
         BE    HAVSHIFT      YES; CHANGE OFFSET                 GP08318
         LA    R14,PFKMOVE+04   POINT TO SHIFT AMOUNT           GP08318
         CLI   0(R2),X'18'   PFK  8 ?                           GP08318
         BNE   HAVENTRY      NO; NOTHING SPECIAL                GP08318
HAVSHIFT SLR   R1,R1                                             87207
         ICM   R1,3,OFFSET   GET CURRENT OFFSET                  87207
         AH    R1,0(,R14)    APPLY OFFSET INCREMENT            GP08315
         BNM   *+6
         SLR   R1,R1
         STH   R1,OFFSET     SET THE NEW OFFSET
         BALS  R14,NICEOFF   FIX IT UP
         B     HAVENTRY      SEE IF ANYTHING ELSE TO DO
         SPACE 1
MOVEMVC  MVC   0(0,R2),0(R6)  MOVE TEXT TO SCREEN
MOVETR   TR    0(0,R2),TRTAB  MAKE DISPLAYABLE
MOVECLC  CLC   0(0,R2),0(R6)  CHECK FOR UNPRINTABLES             81323
         SPACE 1
*  NEED TO ASSIGN KEYS FOR BACKTAB AND FORWARD TAB
BACKTAB  BALS  R14,GETCURS   CONVERT NEXTCURS TO LOGICAL SCREEN ADDRESS
         LA    R14,10        SET TABBING VALUE
         LR    R1,R0         COPY IT OVER
         SH    R1,DC2LINE    MAKE RELATIVE TO TEXT AREA
         BNM   *+8           OK                                  89230
         LH    R1,MAXADD     ELSE USE END OF SCREEN              89230
         SR    R1,R14        REDUCE
         BNM   COMMTAB       OK
         LH    R1,MAXADD     ELSE USE END OF SCREEN AGAIN        89230
         SR    R1,R14        AND BACK-UP ONE                     81322
         BNM   COMMTAB       OK IF NON-NEGATIVE                  81322
         B     COMMTAB0      START ON FIRST LINE
FORTAB   BALS  R14,GETCURS   GET NEXTCURS AS SCREEN OFFSET
         LA    R14,10        SET LOGICAL TAB SIZE
         LR    R1,R0         COPY IT
         SH    R1,DC2LINE    GET OFFSET IN TEXT AREA
         BNM   *+6           OK
         LNR   R1,R14        ELSE START WITH FIRST TEXT POSITION
         AR    R1,R14        INCREMENT
         CH    R1,MAXADD     GREATER THAN TEXT ?                 89230
         BL    *+6           NO
COMMTAB0 SLR   R1,R1         START ON FIRST LINE
COMMTAB  SLR   R0,R0
         DR    R0,R14
         MR    R0,R14        TRUNCATE TO TAB SPACING
         LR    R0,R1         COPY QUOTIENT                       89230
         AH    R0,DC2LINE    GET SCREEN OFFSET                   89230
         BALS  R14,MAKESBA   PUT SBA ORDER INTO DB
         MVC   NEXTCURS,DB   UPDATE THE ADDRESS
         B     HAVENTRY      SEE IF ANY TEXT TO DO
         SPACE 1
HAVETEST MVI   REPLY,C'L'    TREAT TEST-REQUEST AS 'LOCATE'
         TM    MODEFG,MODELOC   LOCATE COMMAND IN EFFECT ?
         BNZ   HAVENTRY      YES; DO IT
         CH    R3,H3         MORE TEXT FOLLOWING ?               81347
         BH    HAVENTRY      YES; PERMIT IT                     GP08318
CRUDINP  MVC   REPLY(L'BADMSG),BADMSG  INDICATE INVALID REQUEST
         B     MOVEAGIN      RE-CREATE THE ORIGINAL SCREEN
         AIF   (NOT &DIR).COMBADM                                89230
BADMSG   DC    C'Invalid input'                                  87203
.COMBADM SPACE 1                                                 89230
HAVENTRY BALS  R14,UPTHREE   SKIP AID AND CURSOR ADDRESS
HAVENTER CH    R3,H3         LONG ENOUGH FOR MODIFIED FIELD ?
         BNL   HAVFIELD      YES; CHECK WHICH
         CLC   REPLY,BLANKS  ANY INPUT ?
         BNE   HAVCOMAN      YES; SEE WHAT IT IS
         CLI   0(R4),X'1D'   ENTER ?                             81347
         BNE   MOVEAGIN      NO; DON'T CHANGE OFFSET
         AH    R5,OFFSET     GET NEXT DISPLAY OFFSET
         LR    R1,R5         GET PROPOSED NEW OFFSET
         STH   R1,OFFSET     SET IT BACK
         BALS  R14,NICEOFF   CLEAN AND CHECK IT
         SLR   R1,R1                                             87207
         ICM   R1,3,OFFSET   GET TRUE OFFSET                     87207
         CLM   R1,3,DRLEN    BEYOND BUFFER ?                     87207
         BL    MOVEAGIN      NO; GO TO DISPLAY
         TM    ZAPFG,FZAP    ANY UNZAPPED REPLACEMENT DATA ?
         BNZ   MOVESUCC      YES; REPEAT WARNING MESSAGE
         IC    R15,CURTTR+2  GET RECORD NUMBER
         LA    R15,1(,R15)   FINAGLE FOR DECREMENT IN CXUPU
         STC   R15,CURTTR+2  STASH IT BACK
         NI    ZAPFG,255-FRED-FNO-FBAS  RESET RECORD IN STORAGE  81322
GOTOZAU  BALS  R14,BLANKER   CLEAR DISPLAY AND MESSAGE
         XXCTL SUF='U'       GO TO I/O ROUTINE                   88359
         SPACE 1
HAVFIELD CLI   0(R2),X'11'   SBA OF AN ATTRIBUTE BYTE ?
         BNE   CRUDINP       NO; HARDWARE ERROR ?
         MVC   DB(3),0(R2)   MOVE ATTRIBUTE FIELD                89230
         BALS  R14,GETADDR   GET FIELD ADDRESS                   89230
         CH    R0,DC2LINE    IN TEXT AREA ?                      89230
         BNL   HAVSECND      YES; GO TO UPDATE TEXT              89230
         BALS  R14,UPTHREE   SKIP OVER IT
         BNP   HAVENTER      TREAT AS ENTER ONLY
         LR    R14,R2        GET START ADDRESS
         LA    R15,L'REPLY-6   GET COMMAND AREA LENGTH LESS PREFIX
         CR    R15,R3        LONGER THAN AVAILABLE TEXT ?
         BNH   *+6           NO
         LR    R15,R3        ELSE USE ONLY AVAILABLE LENGTH
         LR    R0,R15        SAVE ORIGINAL LENGTH
         LA    R1,REPLY+6    POINT TO COMMAND AREA PLUS PREFIX   81322
         MVC   REPLY+6(L'REPLY-6),BLANKS  CLEAR INPUT AREA       81322
HAVCOMND CLI   0(R14),X'11'  SECOND FIELD PRESENT ?
         BE    HAVCOMNX      YES; GET LENGTH OF COMMAND
         OC    0(1,R1),0(R14)  COPY AND MAKE INPUT UPPER CASE
         LA    R1,1(,R1)
         LA    R14,1(,R14)
         BCT   R15,HAVCOMND  DO AGAIN
         SLR   R15,R15
HAVCOMNX LR    R2,R14        SET NEW ADDRESS
         LA    R3,0(R3,R15)  FINAGLE
         SR    R3,R0         GET RESIDUAL LENGTH
         BP    HAVFIELD      MORE - PROCESS SECOND FIELD
HAVCOMAN BALS  R14,BLANKER   CLEAR BUFFER
         LA    R5,REPLY
LOOKUMS  XLOOK T=FINDTAB     GET INTERNAL COMMAND TABLE
         MVC   REPLY,0(R5)   LEFT ADJUST REMAINING TEXT          81322
         LA    R5,REPLY      ADJUST POINTER                      81322
         CLI   0(R5),C' '    ANYTHING UNPARSED ?
         BE    MOVENEWC      NO; REDISPLAY THE SCREEN
         B     GOTOZAU       GO TO UPDATE PARSE ROUTINE
         SPACE 1
HAVSECND BALS  R14,UPTHREE   SKIP ADDRESS
         BP    HAVSECOK      SOME DATA PRESENT
         MVI   0(R4),0       DO NOT TREAT ERASED FIELD AS ENTER  81347
         B     HAVENTER      GO TO COMMON POST-PROCESSING
HAVSECOK CLI   DYNWORK+6,2   FULL-SCREEN MODE (LSIZE=LRECL) ?    89230
         BE    HAVSECFU      YES                                 89230
         SRDL  R0,32         SWAP REGISTERS FOR DIVIDE           89230
         LH    R14,LSIZE     GET SCREEN SIZE                     89230
         DR    R0,R14        GET OFFSET/LINE                     89230
         SH    R1,=H'2'      ALLOW FOR HEAD LINES                89230
         MH    R1,DC1LINE    GET OFFSET TO START OF DATA         89230
         LR    R6,R1         PASS TO COMMON CODE                 89230
         CLI   0(R2),X'11'   ANOTHER SBA ?                       89230
         BNE   HAVEUPDT      NO; PROCESS DATA                    89230
         MVI   0(R4),0       RE-DISPLAY THIS PAGE                89230
         B     UPDTPOST      GO TO FIELD END CODE                89230
HAVSECFU CR    R3,R5         SAME AS WRITE LENGTH ?              89230
         BNE   CRUDINP       NO; FAIL IT
         OI    DB+7,MODELOV  SHOW REPLACE ATTEMPTED              81323
         SLR   R6,R6         FULL BLOCK PROCESSING               89230
         AIF   (&VSAM).VSAM2                                     90079
HAVEUPDT LA    R6,BLOCKBUF(R6)  GET DISK BUFFER                  89230
         AGO   .NSAM2                                            90079
.VSAM2   ANOP  ,                                                 90079
HAVEUPDT A     R6,DRSLI-4    GET DISK BUFFER                     90079
.NSAM2   AH    R6,OFFNEXT    POSITION TO FIRST SCREEN BYTE       89230
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   UPDTLOOP      YES; ALL SET                        82029
         AH    R6,KL         ALLOW FOR KEY ALSO                  89230
UPDTLOOP CLI   0(R2),X'11'   START OF ANOTHER FIELD ?            89230
         BE    UPDTPOST      YES; PROCESS IT                     89230
         CLI   0(R6),&UNDEF  WAS OLD BYTE SPECIAL ?              89230
         BE    UPDTCLC       YES; TREAT AS NORMAL DATA           81323
         TM    DB+7,MODELOCK+MODELOW  SPECIALS LOCKED ?          81323
         BNO   UPDTCLC       NO; DO NORMALLY                     81323
         MVC   DB(1),0(R6)   GET OLD BYTE                        81323
         TR    DB(1),TRTAB   TRANSLATE IT                        81323
         CLI   DB,&UNDEF     UNPRINTABLE ?                       81323
         BE    UPDTSKIP      YES; NO UPDATE                      81323
UPDTCLC  CLI   0(R2),&UNDEF   NON-DISPLAY CHARACTER ?            81323
         BE    UPDTSKIP      YES; SKIP UPDATE
         CLC   0(1,R6),0(R2)  CHANGED BY USER ?                  89230
         BE    UPDTSKIP      NO; LEAVE IN PROPER CASE
         TM    MODEFG,MODELOW  LOWER CASE ?
         BNZ   UPDTREP       YES; USE AS IS
         OI    0(R2),C' '    ELSE MAKE UPPER CASE
         CLC   0(1,R6),0(R2)   CHANGED ?                         89230
         BE    UPDTSKIP      NO                                  81323
UPDTREP  MVC   0(1,R6),0(R2)  REPLACE BY USER'S BYTE             89230
         OI    DB+7,MODEUPD  SHOW DATA REPLACED                  81323
*        DONE HERE INSTEAD OF AFTER LOOP TO CATCH NON-REPLACEMENT
UPDTSKIP LA    R6,1(,R6)                                         89230
         LA    R2,1(,R2)
         BCT   R3,UPDTLOOP   DO ALL
UPDTPOST LTR   R3,R3         ANY MORE TO DO ?                    89230
         BP    HAVFIELD      YES; DO IT                          89230
         CLC   REPLY,BLANKS  ANY INPUT PROCESSED ?
         BNE   HAVCOMAN      YES; SEE WHAT IT IS
         MVC   REPLY(L'MSGBADIN),MSGBADIN  PROVISIONALLY SET BAD INPUT
         TM    DB+7,MODEUPD+MODELOV  DATA REPLACED ?             81323
         BZ    MOVEAGIN      NO; DISPLAY BAD INPUT               81324
MOVESUCC MVC   REPLY(L'MSGSUCC),MSGSUCC  SHOW DATA REPLACED
         OI    ZAPFG,FZAP    SHOW DATA REPLACED
         B     MOVEAGIN      REDISPLAY THE PAGE
         SPACE 2
SETUPP   NI    MODEFG,255-MODELOW  RESET LOWER CASE INPUT
         B     LOOKUMS       PARSE AGAIN
SETLOW   OI    MODEFG,MODELOW   ENABLE LOWER CASE INPUT
         B     LOOKUMS
SETUNLOK NI    MODEFG,255-MODELOCK  PERMIT REP OF UNPRINTABLES   81323
         B     LOOKUMS       PARSE AGAIN                         81323
SETLOCK  OI    MODEFG,MODELOCK  LOCK UNPRINTABLES                81323
         B     LOOKUMS                                           81323
         AIF   (NOT &DIR).COMXCTL                                89270
SETOFF   NI    MODEFG,255-MODEUPD  RESET UPDATE MODE
         MVC   REPLY,BLANKS  FORCE DISPLAY RATHER THAN PARSE
         TM    MODEFG,MODEHEX  IS EDIT MODE STILL ON ?           87215
         BNZ   GOTOY         YES; INVOKE EDIT                    87215
         XXCTL SUF='W'       GO TO MEMBER SELECTION              89230
         SPACE 1                                                 87215
TESTEDIT CLC   BLANKS,0(R5)  EDIT A SPECIFIC MEMBER ?            87215
         BNE   GOTOZAU       WHATEVER - GO TO SCANNER            87215
         MVC   REPLY,BLANKS  CLEAR INPUT                         87215
         OI    MODEFG,MODEHEX  SET EDIT MODE ON                  87215
GOTOY    XXCTL SUF='Y'       INVOKE EDIT                         87215
.COMXCTL SPACE 1
EXITWERR BALS  R14,BLANKER   CLEAR ORDERS FROM BUFFER
         B     DRWERR        TAKE WRITE ERROR EXIT
EXITRERR BALS  R14,BLANKER   CLEAR ORDERS
         B     DRRERR        TAKE READ ERROR EXIT
EXITNATN BALS  R14,BLANKER   CLEAR ORDERS
         B     DRWAIT        WAIT EXPIRED
EXITEXIT BALS  R14,BLANKER   CLEAR ORDERS
DOXIT    B     DRXIT         END IT ALL
         SPACE 2
*        COMMON BUFFER FORMATTING
         USING DSPSECT,R10
CONFORM  BAL   R14,BLANKER   CLEAR THE SCREEN
         MVC   DS7BUFSF,SFPROT   PROTECTED TOP LINE (DSN/VOL)
         LH    R0,LSIZE      POINT TO SECOND LINE                89219
         BALS  R14,MAKESBA                                       89219
         MVC   DS7AD2,DB     MAKE SBA FOR IT                     89219
         AIF   (&DIR).DIRHEAD                                    89230
         MVC   DSPDSN,DRDSN   MOVE COMMON HEADER                 89230
         AIF   (&VSAM).COMHEAD    NO TTR ?                      GP08318
         INHEX DSPTTR,CURTTR MAKE=OUT   SHOW CURRENT TTR        GP06353
         AGO   .COMHEAD                                          89230
.DIRHEAD MVC   DSPDSN+1,DRDSN   MOVE COMMON HEADER               89230
         INHEX DS7TTR,CURTTR MAKE=OUT   SHOW CURRENT TTR        GP06353
         LA    R1,DSPDSN+1                                       87203
         LA    R0,L'DSPDSN-10+2                                  87203
CONFOLP  CLC   BLANKS(10),0(R1)  ROOM FOR MEMBER ?               87203
         BE    CONFONM       YES; ADD IT                         87203
         LA    R1,1(,R1)                                         87203
         BCT   R0,CONFOLP    TRY AGAIN                           87203
         B     CONFONNM      NO ROOM; SKIP IT                    87203
CONFONM  MVI   0(R1),C'('                                        87203
         MVC   1(8,R1),DIRNAME MOVE MEMBER NAME                  87203
CONFOTR  CLI   2(R1),C' '    END OF NAME ?                       87203
         BE    CONFOTP       YES                                 87203
         LA    R1,1(,R1)                                         87203
         BCT   R0,CONFOTR                                        87203
         B     CONFONNM                                          87203
CONFOTP  MVI   2(R1),C')'                                        87203
.COMHEAD SPACE 1                                                 89230
CONFONNM INHEX DS7OFFS,OFFSET,MAKE=OUTC  DISPLAY OFFSET         GP06353
         MVI   DS7OFFP,C'+'
         MVC   DS7MSGS1,SFPROTIN  INT/PROTECTED MESSAGE FIELD
         MVC   DS7MSGS2,SFPROTIN   PROTECTED UPDATE HEADER       81322
         MVC   DS7IDSF,SFEND2   LINES 2 AND 3-24
         LH    R0,LSIZE                                          89230
         SLA   R0,1          VALUE FOR TWO LINES                 89230
         BCTR  R0,0          LAST BYTE ON SECOND LINE            89230
         BALS  R14,MAKESBA   MAKE ADDRESS                        89230
         MVC   DS7IDSF+2(3),DB  MAKE PROPER SBA                  89230
         TM    ZAPFG,FNO     PARTIAL RECORD IN STORAGE ?
         BZ    CONFORMN      NO; FULL
         MVC   DS7IDSF+L'DS7IDSF-2(2),SFPROTIN  PROTECT DISPLAY
         AIF   (NOT &DIR).COMNINT                                89230
         TM    DWFLAG,DWOUTPUT  ALLOWED TO MODIFY ?              87203
         BNZ   CONFORMN      YES; LEAVE INTENSE                  87203
         MVC   DS7IDSF+L'DS7IDSF-2(2),SFPROT  UNINTENSIFY        87203
.COMNINT ANOP  ,                                                 89230
CONFORMN MVC   DS7HEAD+1(L'DS7HEAD-1),DCKEYMOD
         MVC   DS7UPLOW,DCLOW
         MVC   DS7CMD,DCCOMND
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   *+10          YES; LEAVE KEY
         MVC   DS7HEAD(4),DCDATA    SET DATA MODE
         TM    MODEFG,MODELOW   LOWER CASE MODE ?
         BNZR  R9            YES; RETURN
         OC    DS7CMD,BLANKS     CHANGE TO UPPER CASE
         MVC   DS7UPLOW(5),BTABUPP+4  SET UPPER CASE
         BR    R9            RETURN TO CALLER
         USING DSPHEAD,R10   RESTORE 'NORMAL' BUFFER MAPPING
         SPACE 1
NICEOFF  LTR   R1,R1         CHECK REQUESTED OFFSET
         BNM   *+6           OK
         SLR   R1,R1         ELSE MAKE IT ZERO
         SLR   R0,R0
         LH    R15,DC1LINE   SET FOR CARD DATA                   89230
         DR    R0,R15        GET NUMBER OF LINES IN R1
         MR    R0,R15        GET EQUIVALENT OFFSET IN R1
         CLM   R1,3,DRLEN    GREATER THAN BLOCK LENGTH ?         87207
         BL    NICEOFFR      NO; USE IT
         MVC   OFFSET,DRLEN  FINAGLE IT
         SH    R1,DC3LINE    BACK-SPACE 3 LINES
         B     NICEOFF       TRY IT AGAIN
NICEOFFR STH   R1,OFFNEXT    SET NEW OFFSET
         BR    R14           RETURN TO CALLER
         SPACE 1
MAKESBA  MVI   DB,X'11'      MAKE SBA ORDER                      89230
         CH    R0,=H'4095'   OLD FORMAT OK ?                     89219
         BNH   MAKESBA2      YES; USE ZONES                      89219
         STCM  R0,3,DB+1     USE 14/16 BIT FORMAT                89219
         BR    R14           RETURN TO CALLER                    89230
MAKESBA2 STC   R0,DB+2       SET LOW SIX BITS                    89219
         SRL   R0,6                                              89230
         STC   R0,DB+1       SET HIGH SIX BITS                   89230
         NC    DB+1(2),EXCRMSK+1  KILL ZONE BITS                 89230
         TR    DB+1(2),ZONETR  SET PROPER ZONES                  89230
         BR    R14           RETURN TO CALLER                    89230
         SPACE 1                                                 81324
GETCURS  TM    NEXTCURS+1,X'C0'    12-BIT FORMAT ?               89219
         BNZ   GETCURS2      YES (DON'T SUPPORT 16-BIT)          89219
         SLR   R0,R0                                             89219
         ICM   R0,3,NEXTCURS+1  GET BINARY ADDRESS               89219
         BR    R14           RETURN TO CALLER                    81323
GETCURS2 IC    R0,NEXTCURS+1   GET CURSOR HIGH BITS              89230
         IC    R1,NEXTCURS+2   GET LOW BITS                      89230
         SLL   R1,24+2       LEFT-JUSTIFY LOW SIX BITS           89230
         SLDL  R0,6          MAKE FULL ADDRESS                   89230
         LA    R1,X'FFF'     MAKE ZONE MASK                      89230
         NR    R0,R1         MASK OUT ADDRESS BITS               89230
         BR    R14           RETURN TO CALLER                    89230
         SPACE 1                                                 81324
UPTHREE  LA    R2,3(,R2)     SKIP AID OR ATTR ADDRESS SEQUENCE   81323
         SH    R3,H3         ADJUST LENGTH AND SET CONDITION CODE
         BR    R14           RETURN TO CALLER                    81323
         SPACE 1                                                 89219
GETADDR  TM    DB+1,X'C0'    12-BIT FORMAT ?                     89219
         BNZ   GETADDR2      YES (DON'T SUPPORT 16-BIT)          89219
         SLR   R0,R0                                             89219
         ICM   R0,3,DB+1     GET BINARY ADDRESS                  89219
         BR    R14           AND RETURN                          89219
GETADDR2 IC    R0,DB+1       GET CURSOR HIGH BITS                89219
         IC    R1,DB+2       GET LOW BITS                        89219
         SLL   R1,24+2       LEFT-JUSTIFY LOW SIX BITS           89219
         SLDL  R0,6          MAKE FULL ADDRESS                   89219
         LA    R1,X'FFF'     MAKE ZONE MASK                      89219
         NR    R0,R1         MASK OUT ADDRESS BITS               89219
         BR    R14           RETURN TO CALLER                    89219
         EJECT
RDSELCCW CCW   X'0B',0,X'60',1   SELECT CCW                      81322
RDMODCCW CCW   X'06',*-*,X'20',1   READ MODIFIED CCW             81322
         SPACE 1
*        CURSOR CONTROLLED BUFFER OFFSETS
PFKMOVE  DC    Y(80)         PFK11 - UP ONE LINE
         DC    Y(3*80)       PFK 2 - UP THREE LINES
         DC    Y(10*80)      PFK 8 - UP QUITE A BIT
         DC    Y(0-80)       PFK10 - DOWN ONE LINE
         DC    Y(0-3*80)     PFK 1 - DOWN THREE LINES
         DC    Y(0-10*80)    PFK 7 - DOWN QUITE A BIT
DC1LINE  EQU   PFKMOVE       CONSTANT 80
DC2LINE  DC    H'160'        CONSTANT 160 - RESERVE SCREEN SIZE
DC3LINE  EQU   PFKMOVE+2     CONSTANT 240
MAXADD   DC    H'0'          LARGEST SCREEN DISPLACEMENT USED    89230
         SPACE 1
MSGSUCC  DC    C'Replaced in storage; use ZAP to rewrite'
MSGBADIN DC    C'Bad input character'                            81323
DCKEYMOD DC    C'Key mode'                                       81323
DCDATA   DC    C'Data'                                           81323
DCLOCK   DC    C'Locked'                                         81323
DCLOW    DC    C'Lower case'                                     81323
DCCOMND  DC    C'Command'                                        81323
         SPACE 1
*        3270 ORDER EXPANSIONS
SFPROT   SCRN  SF,(PROT)
DFLTSBA  SCRN  SBA,(2,55),IC
LNCURSIC EQU   *-SFPROT      END PROTECT/INSERT CURSOR
SFPROTIN SCRN  SF,(PROT,INT)   INTENSIFIED, PROTECTED
SFEND2   SCRN  SF,BLANK,SBA,(2,80),SF,BLANK  UNPROTECTED LINES 2,3-24
SFEND2L  EQU   *-SFEND2
SFININT  SCRN  SF,(INT)      SET INTENSIFIED INPUT               89230
NEXTCURS DC    XL3'0'        CURSOR ADDRESS FOR NEXT TIME
         SPACE 1
FINDTAB  BTAB  'UPLOW',SETLOW,BASE=*  SET LOWER CASE
BTABUPP  BTAB  'UPPER',SETUPP  SET UPPER CASE
         BTAB  'LOWER',SETLOW   SET LOWER CASE
         BTAB  'LOCK',SETLOCK   LOCK UNPRINTABLES                81323
         BTAB  'UNLOCK',SETUNLOK  PERMIT REP OF UNPRINTABLES     81323
         AIF   (&DIR).DIRBTAB                                    89270
         BTAB  'OFF',GOTOZAU  GO TO PARSER                       89270
         AGO   .COMBTAB                                          89270
.DIRBTAB BTAB  'OFF',SETOFF  RESET UPDATE MODE
         BTAB  'EDIT ',TESTEDIT                                  87215
         BTAB  'ED ',TESTEDIT                                    87215
         BTAB  'EDI ',TESTEDIT                                   87215
.COMBTAB BTAB  ',',LOOKUMS
         BTAB  *END
         SPACE 2
*        BUFFER ADDRESS TRANSLATION TABLE
ZONETR   DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'   0 - 15
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'  16 - 31
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'  32 - 47
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'  48 - 63
         AIF   (&DIR).COMTRTB                                    89230
         SPACE 1                                                 89230
TRTAB    TRTAB FILL=&UNDEF   TRANSLATE UNPRINTABLES TO SPLIT STROKE
.COMTRTB EJECT ,
*        SPECIAL BUFFER PREFIX FOR 3270 ORDERS
*
DSPSECT  DSECT ,
         AIF   (NOT &DIR).COMDSPH                                89230
DSPHEAD  DS    CL29          DEFINITION FOR GENERAL SCREEN       87203
DSPDSN   DS    CL44          DSN                                 87203
         DS    C                                                 87203
DSPTTR   DS    CL6           TTR                                 87203
DS7TTR   EQU   DSPTTR+1,6,C'C'                                   87203
         ORG   DSPHEAD                                           87203
.COMDSPH SPACE 1                                                 89230
DS7BUFSF DS    XL2           SF/PROTECTED
DS7HEAD  DC    C'DATA MODE'  KEY/DATA MODE
         DC    C' '
DS7UPLOW DC    C'LOWER CASE'  SHOW CASE
         DC    C' '                                              81323
DS7LOCK  DC    C'LOCKED'                                         81323
DS7DSN   DS    CL52          NORMAL DSN/MEM/VOL/TTR HEADER
DS7AD2   DS    XL3           SBA FOR SECOND LINE                 89230
DS7OFFP  DS    C'+'          + FOR OFFSET
DS7OFFS  DS    CL4           OFFSET VALUE
DS7MSGS1 DS    XL2           SF/PROTECTED,INTENSIFIED
DS7MSG   DS    CL39          MESSAGE AREA
DS7MSGS2 DS    XL2           SF/PROTECTED
DS7CMD   DS    C'COMMAND'    INPUT PREFIX
DS7INPUT DS    0XL21         INPUT AREA
DS7IDSF  DS    XL(SFEND2L)   SF/UNP;SBA(2,80)/SF/UNP  LINES 2,3-24
DS7TEXT  DS    22CL80        UNPROTECTED TEXT BUFFER
         ORG   DS7HEAD-1     DEFINE FOR SUBSEQUENT EXPANSION
         POP   PRINT                                             89230
         MEND  ,                                                 89230
