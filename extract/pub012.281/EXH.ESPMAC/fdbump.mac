         MACRO
&NM      FDBUMP &O,&TYPE=H                             ADDED ON 2007006
         GBLA  &FDCNTR
.**********************************************************************
.*   THIS MACRO CAUSES REGISTERS IN AN FD LIST TO BE INCREMENTED      *
.*   SEE LABEL MAKELLUP IN EXHASCRN OR @FORMATS FOR DETAILS           *
.*   X'80' IS END OF OPERAND LIST BIT   X'7x' IS RESET ALL            *
.*   X'0r' ONE BYTE POSITIVE INCREMENT  X'1r' HALF-WORD INCREMENT     *
.*   X'3r' FULLWORD INCREMENT                                         *
.**********************************************************************
         LCLA  &C,&I,&J,&K,&L,&LD,&N,&T,&SA(17)
         LCLC  &O1,&O2,&O3,&RA(17),&VA(17),&FDCHN
&FDCNTR  SETA  &FDCNTR+1
&FDCHN   SETC  'ZFD'.'&FDCNTR'
&C       SETA  &FDCNTR+1
&N       SETA  N'&SYSLIST
&T       SETA  16+9
&LD      SETA  2             DEFAULT INCREMENT LENGTH
         AIF   ('&TYPE' EQ 'H' OR '&TYPE' EQ ' ').HAVELD
&LD      SETA  1             DEFAULT INCREMENT LENGTH
         AIF   ('&TYPE' EQ 'X' OR '&TYPE' EQ 'B').HAVELD
&LD      SETA  4             DEFAULT INCREMENT LENGTH
         AIF   ('&TYPE' EQ 'F' OR '&TYPE' EQ 'H').HAVELD
&LD      SETA  2             DEFAULT INCREMENT LENGTH
.HAVELD  AIF   ('&NM' EQ '').NONAME
&NM      EQU   *
.NONAME  AIF   ('&N' NE 'END' AND '&N' NE '*END').PROCESS
&FDCHN   DC    AL1(0)        END OF FD LIST
         MEXIT ,
.PROCESS AIF   (&N GE 1 AND &N LE 17).DECODE
 MNOTE 8,'FDBUMP: INCORRECT NUMBER OF OPERANDS'
         MEXIT ,
.DECODE  AIF   (&I GE &N).EXPAND
&I       SETA  &I+1
         AIF   ('&SYSLIST(&I)' NE 'RESET').VALUE
&J       SETA  &J+1          COUNT ACCEPTED OPERANDS
&RA(&J)  SETC  '15'
&SA(&J)  SETA  6
         AGO   .DECODE
.VALUE   AIF   (N'&SYSLIST(&I) EQ 2).SPLITT2
         AIF   (N'&SYSLIST(&I) EQ 3).SPLITT3
 MNOTE 8,'FDBUMP: INCORRECT NUMBER OF ARGUMENTS IN OPERAND &I'
         AGO   .DECODE
.SPLITT2 ANOP  ,
&L       SETA  &LD           SET DEFAULT LENGTH
         AGO   .SPLITTR
.SPLITT3 AIF   ('&SYSLIST(&I,3)' EQ '1' OR '&SYSLIST(&I,3)' EQ '2'     *
               OR '&SYSLIST(&I,3)' EQ '4').SPLITL3
         MNOTE 'FDBUMP: LENGTH IN OPERAND &I NOT 1, 2, OR 4'
&L       SETA  4             SHOULD BE VALID ?
         AGO   .SPLITTR
.SPLITL3 ANOP  ,
&L       SETA  &SYSLIST(&I,3)  OVERRIDE LENGTH
.SPLITTR ANOP  ,
&O1      SETC  '&SYSLIST(&I,1)'
&O2      SETC  '&SYSLIST(&I,2)'
         AIF   ('&O1&O2' NE '').STASH
         MNOTE 8,'FDBUMP: OMITTED ARGUMENT IN OPERAND &I'
         AGO   .DECODE
.STASH   ANOP  ,
&J       SETA  &J+1          COUNT ACCEPTED OPERANDS
&RA(&J)  SETC  '&O1'         PRESUMED REGISTER NUMBER
&SA(&J)  SETA  &L-1          CONTROL FUNCTION
&VA(&J)  SETC  '&O2'         INCREMENT
         AGO   .DECODE       DO ANOTHER
.EXPAND  AIF   (&J GT 0).EXPANDS
         MNOTE 8,'FDBUMP: NO VALID ARGUMENTS FOUND'
         MEXIT ,
.EXPANDS ANOP  ,
&FDCHN   DC    AL1(ZFD&C-*,&T)  IDENTIFY AS FDBUMP
&I       SETA  0
.EXPANDL AIF   (&I GE &J).MEND
&I       SETA  &I+1
&L       SETA  128*(&I/&J)   END LIST BIT
         AIF   (&SA(&I) EQ 6).RESET
         DC    AL1(&L+16*&SA(&I)+&RA(&I)),AL(&SA(&I)+1)(&VA(&I))
         AGO   .EXPANDL
.RESET   DC    AL1(&L+127)   RESET ALL REGISTERS
         AGO   .EXPANDL
.MEND    MEND  ,
