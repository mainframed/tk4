         MACRO
&NM      HASPTEST
         GBLA  &HASPSVC      IF NON-ZERO, THN RETURNS HCT ADDRESS
         GBLA  &PITSIZE,&MAXCLAS,&MAXJOBS,&JITSIZE,&QENTSIZ
         GBLA  &MAXPART,&MAXXEQS                                 80149
         GBLC  &HASP,&LOCAL,&VERSION,&SYSTEM,&XBATCHC
         LCLC  &V1
&V1      SETC  '&VERSION'.'    '
&V1      SETC  '&V1'(1,1)    AVOID INCORR. LENGTH ON ABOVE
         AIF   ('&HASP' NE 'YES' AND '&HASP' NE 'SHR').MEX
         AIF   ('&SYSTEM' EQ 'SVS').SYSOK
         AIF   ('&SYSTEM' NE 'MVT' AND '&SYSTEM' NE 'MFT').NOTYET
.SYSOK   AIF   ('&V1' LT '1' OR '&V1' GT '4').BVD
         L     R5,MSGAD      USE MESSAGE AREA AS SAVE
         MVC   8(HASPTABE-HASPHCT,R5),HASPHCT .  SAVE OLD ADDRESSES
         XC    HASPHCT(HASPTABE-HASPHCT),HASPHCT  CLEAR ADDRESSES
         L     R3,CVTPTR .   GET CVT
         NUSE  CVT,R3
         AIF   ('&V1' GT '3').NOSVC
         AIF   (&HASPSVC EQ 0).NOSVC  NEED SCAN TO GET HCT ADDRESS
         SVC   &HASPSVC .    GET HCT ADDRESS FROM MODIFIED HASP SVC
         LTR   R8,R15        IS HASP UP ?
         BZ    HASPSKIP      NO, ZERO HCT ADDRESS SET ALREADY
         AGO   .HASVC
.NOSVC   ANOP
         AIF   ('&V1' LE '3').OLDV3
         AIF   ('&SYSTEM' EQ 'SVS').SSVS
         L     R8,CVTUSER .  RETROFIT CONVENTION
         AIF   ('&LOCAL' NE 'AMS').NOSVS
         NEED  USCVT
         L     R8,UCHJES-USERCVT(,R8) .  AMS CVT EXTENSION
         AGO   .NOSVS
.SSVS    L     R8,CVTHJES .  LOOK FOR HCT ADDRESS
.NOSVS   LA    R8,0(,R8) .   STRIP HIGH BYTE
         LTR   R8,R8 .       ANY ?
         BZ    HASPSKIP .    NO; HASP NOT UP
         CLC   =C' V &V1',0(R8) .  INITIALIZED ?
         BE    HWATSTAT .    YES - BUT UNDOCUMENTED ADDRESS STASHED
         SH    R8,H8 .       ADJUST TO HCTDSECT ADDRESS FROM $HVT
         CLC   =C' V &V1',0(R8) .  INITIALIZED ?
         BNE   HASPSKIP .    NO - SKIP TILL LATER
         AGO   .HASVC
.OLDV3   NEED  WORK,TCB,RB,$HCT
         L     R7,CVTHEAD .   GET FIRST TCB ON READY QUE
         USING TCB,R7
         L     R7,TCBOTC .    GET MASTER SCHEDULER TCB ADDR.
HTCBLOOP LAT   R7,TCBTCB,HASPSKIP GET NEXT TCB OR SKIP HASP
         L     R1,TCBTIO .   GET TIOT
         CLC   0(5,R1),=CL8'HASP '  HASP TCB ?  **ZAP ENTRY**    78317
         BNE   HTCBLOOP .    NO, TRY NEXT ONE
         CLC   =C'STARTING',16(R1)   IS IT START INIT ?
         BE    HTCBLOOP .    YES, SKIP IT
         AIF   ('&SYSTEM' NE 'MFT' AND '&SYSTEM' NE 'MVT').NOVS1
         CLC   TCBGRS11+1(3),CVTMZ00+1 IS REG 11 IN STORAGE ?
         BNL   HFNDRB .      NO CHECK THROUGH RB SAVE REGS
.NOVS1   TM    TCBGRS11+3,3  ON WORD BOUNDARY ?
         BNZ   HFNDRB .      NO, CAN'T BE HASP HCT PTR
         L     R8,TCBGRS11 .  GET HCT ADDR.
         CLC   =C' V &V1',0(R8) . HASP INITIALIZED ?
         BE    HWATSTAT .    CHECK FURTHER
HFNDRB   L     R2,TCBRBP .   GET TOP RB
         USING RBSECT,R2
HNXTRB   TM    RBSTAB1,RBFTP WHAT RB TYPE ?
         BZ    HNXTRBI .     PRB, SKIP
         AIF   ('&SYSTEM' NE 'MFT' AND '&SYSTEM' NE 'VS1').NOF
         TM    RBSTAB1,X'50' .   COULD IT BE AN FRB ?
         BNO   *+12 .        NO, SKIP OTHER TEST
         TM    RBSTAB1,X'A0' .   ANY OTHER BITS ON ?
         BZ    HNXRBI .      NO, IS FRB, SKIP
.NOF     AIF   ('&SYSTEM' NE 'MFT' AND '&SYSTEM' NE 'MVT').NOVS2
         CLC   RBGRS11+1(3),CVTMZ00+1 IN STORAGE ?
         BNL   HNXTRBI .     NO, SKIP
.NOVS2   TM    RBGRS11+3,3   ON WORD BOUNDARY ?
         BNZ   HNXTRBI .     NO, SKIP
         L     R8,RBGRS11    LOAD PRESUMED HCT ADDRESS
         CLC   =C' V &V1',0(R8) . INITIALIZED HASP HCT ?
         BE    HWATSTAT .    CHECK FURTHER
HNXTRBI  TM    RBSTAB2,RBTCBNXT LAST RB ?
         BO    HASPSKIP .    YES, TOO BAD
         L     R2,RBLINK .   NEXT RB
         B     HNXTRB .      CHECK IT
         DROP  R2,R7
.HASVC   ANOP
         NUSE  $HCT,R8
HWATSTAT TM    $STATUS,$SYSEXIT HASP TERMINATING ?
         BNZ   HASPSKIP .    YES, OMIT HASP
         LA    R8,0(,R8) .   JUST IN CASE
         C     R8,8(,R5) .   SAME AS PRIOR HCT ADDRESS ?
         BNE   *+14          NO, SKIP AROUND AND RECALCULATE ADDR
         MVC   HASPHCT(HASPTABE-HASPHCT),8(R5)   SAVE OLD ADDRESSES
         B     HASPSKIP      SKIP AROUND REDOING THINGS
         LAT   R2,$HASPTCB,HASPSKIP  HASP TCB ADDRESS OR ZERO
         NUSE  TCB,R2
         ST    R8,HASPHCT .  SAVE FOR OTHER EXHIBIT PROGRAMS
*        FINAGLE CODE FOR EXHDDQ00 - CODE ASSUMES LABEL '$CYLALLOC'
*        IS PRECEEDED BY 2F SPOOL TRACK COUNTERS
         L     R1,$DISTERR   =>  B $CYLALLOC
         LA    R15,X'FFC' .   DISPLACEMENT MASK FOR WORD BOUNDARY
         NR    R1,R15 .      GET DISPLACEMENT
         SH    R1,H8 .       BUMP BACK TO USED / AVAILABLE TRACK COUNTE
         ST    R1,HASPFULL . STASH FOR DQ ROUTINE
         LR    R1,R8         COPY HCT ADDRESS AGAIN
         AIF   ('&SYSTEM' EQ 'MFT' OR '&SYSTEM' EQ 'VS1').NOXLS
         L     R2,TCBRBP .   GET RB
         NUSE  RB,R2
HPITRBL  TM    RBSTAB2,RBTCBNXT   TOP RB ?
         BNZ   HPITCDE
         L     R2,RBLINK
         B     HPITRBL
HPITCDE  L     R2,RBCDE
         NUSE  CDE,R2
         L     R3,CDXLMJP
         TM    CDATTR2,CDXLE   EXTENT LIST PRESENT ?            GP05303
         BNZ   HPITXLS                                          GP05303
         TM    CDATTR,CDMIN
         LR    R2,R3
         BNZ   HPITCDE+4
HPITXLS  LM    R2,R3,8(R3)   GET LENGTH/ADDRESS FROM XTENT LIST
         LA    R2,0(R2,R3)   ADD AND KILL HIGH BYTE
         AGO   .CMXLS
.NOXLS   L     R2,CVTMZ00    GET TOP OF STORAGE
.CMXLS   DROP  R3
&PITSIZE SETA  8+(&MAXCLAS+1) .  BASIC PIT SIZE
         AIF   ('&XBATCHC' EQ '').NOBTCH  NO BATCHING
&PITSIZE SETA  &PITSIZE+14 .     ALLOW FOR BATCHING INFO
.NOBTCH  ANOP
&PITSIZE SETA  (&PITSIZE+3)/4*4 .  ROUND UP
         AIF   ('&LOCAL' NE 'AMS' OR &JITSIZE NE 17).NONNEW
&JITSIZE SETA  36 .          KLUTZY OLD AMS HASPGEN PARM
.NONNEW  MVI   HASPJITL+1,&JITSIZE .  SET JITSIZE
         MVI   HASPJQEL+1,&QENTSIZ .  SET JQE SIZE
         MVI   HASPPITL+1,&PITSIZE .  SET PIT SIZE
         MVI   HASPJOB#,&MAXJOBS/256 .SAVE # OF JOBS
         MVI   HASPJOB#+1,&MAXJOBS-(&MAXJOBS/256*256) . SAVE #
HPITLOOP EQU   *
         AIF   (&PITSIZE LT 10).NOPIT
         LA    R1,4(,R1) .   TRY MORE
         CR    R1,R2         END OF REGION/MACHINE ?
         BNL   HASPSKIP      NO, TRY AGAIN
         AIF   (&MAXXEQS GE &MAXPART).NOMAXX                     80149
&MAXXEQS SETA  &MAXPART      USE LARGER VALUE                    80149
.NOMAXX  AIF   (&MAXXEQS GT 0).MINMAX                            80149
&MAXXEQS SETA  3             USE DEFAULT                         80149
.MINMAX  CLC   =C'1 ',2(R1) .  LOOKS LIKE FIRST PIT ENTRY ?      80149
         BNE   HPITLOOP      NO, TRY MORE
         AIF   (&MAXXEQS LT 2).PITALL                            80149
         CLC   =C'2 ',&PITSIZE+2(R1) .   IS IT SECOND ENTRY ?
         BNE   HPITLOOP      NO, TRY AGAIN
         AIF   (&MAXXEQS LT 3).PITALL                            80149
         CLC   =C'3 ',2*&PITSIZE+2(R1) .   IS IT THIRD ENTRY ?
         BNE   HPITLOOP      NO, TRY AGAIN
.PITALL  ST    R1,HASPPIT .  STASH PIT ADDRESS                   80149
         AGO   .PITIFUL
.NOPIT   MNOTE *,'PITSIZE=''&PITSIZE''; HASP INIT STATUS NOT AVAILABLE'
.PITIFUL ANOP
HASPSKIP EQU   * .           COMMON EXIT POINT
         DROP  R8
.MEX     MEXIT
.NOTYET  MNOTE 'SYSTEM ''&SYSTEM'' NOT SUPPORTED'
         AIF   ('&V1' GE '3' AND '&V1' LE '4').MEX
.BVD     MNOTE 8,' HASP &&VERSION=''&VERSION'' NOT SUPPORTED'
         AIF   ('&VERSION' NE '').MEX
         MNOTE 8,' ENSURE INCLUSION OF $GLOBAL AND $HASPGEN'
         MEND
