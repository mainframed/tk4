         MACRO ,
         MACBITS &LIST=,&PARM=,&PAX=
         GBLA  &MACPVAL,&MACPCNT
         GBLB  &MACPNUL,&MACPERR
         GBLC  &MACPBIT
.*                                                                    *
.*   THIS MACRO IS USED WITHIN OTHER MACROS TO CONVERT A LIST OF      *
.*   OPTION WORDS INTO A BIT STRING (AND EQUIVALENT INTEGER).         *
.*                                                                    *
.*   PARM(n) and PAX(n) CONTAIN THE KEYWORD AND BIT INDEX, RESPECTIVELY
.*     The PAX bit index starts at 8 for the left-most bit.           *
.*     When a keyword sets multiple bits, specify the bits as a       *
.*     sublist; e.g. SIX (2,3)  (00000110)                            *
.*                                                                    *
.*   Duplicate bits are not processed, and do not cause an error.     *
.*                                                                    *
.*   LIST CONTAINS ONE OR MORE LIST ITEMS TO BE MATCHED               *
.*                                                                    *
.*   SAMPLE: MACBITS LIST=(ONE,TWO,,SIX),PARM=(ONE,TWO,THREE...SIX),  *
.*                                        PAX=(1,2,3...6)             *
.*       &MACPBIT IS SET TO 00100111                                  *
.*       &MACPCNT IS SET TO 3                                         *
.*       &MACPVAL IS SET TO 35                                        *
.*                                                                    *
         LCLC  &C,&D
         LCLB  &B(8)
         LCLA  &I,&J,&K,&M,&N,&O
&MACPCNT SETA  0
&MACPVAL SETA  0
&MACPNUL SETB  1
&MACPERR SETB  1
&MACPBIT SETC  '00000000'
&N       SETA  N'&LIST
         AIF   (&N EQ 0).MEND     RETURN ERROR
         AIF   (N'&PARM NE N'&PAX).BALERR ERROR
&MACPNUL SETB  0
&MACPERR SETB  0
.*
.LISTLUP AIF   (&I GE &N).SETVAL
&I       SETA  &I+1
&C       SETC  '&LIST(&I)'
         AIF   ('&C' EQ '').LISTLUP
.*
&J       SETA  1
.WORDLUP AIF   (&J GT N'&PARM).NOTFUND
         AIF   ('&C' EQ '&PARM(&J)').FOUND
&J       SETA  &J+1
         AGO   .WORDLUP
.* In order to solve the problem of keywords that set multiple bits,
.* I wanted to support PAX parameters as a sublist. However, the XF
.* assembler does not support the N attribute for a sublist item
.* (other than for SYSLIST), so I had to resort to crude code of
.* parsing the sublist myself. The more elegant code is retained
.* as comments.
.* .FOUND   AIF   (N'&PAX(&J) GT 1).MULTI
.* &K       SETA  &PAX(&J)
.*          AIF   (&B(&K)).LISTLUP   SKIP DUPLICATE
.* &MACPCNT SETA  &MACPCNT+1
.* &B(&K)   SETB 1
.*          AGO   .LISTLUP
.*
.* .MULTI   ANOP  ,
.* &O       SETA  0
.* .SUBLIST AIF   (&O GE N'&PAX(&J)).LISTLUP
.* &O       SETA  &O+1
.* &K       SETA  &PAX(&J,&O)
.*          AIF   (&B(&K)).SUBLIST   SKIP DUPLICATE
.* &MACPCNT SETA  &MACPCNT+1
.* &B(&K)   SETB 1
.*          AGO   .SUBLIST
.FOUND   ANOP  ,
&K       SETA  K'&PAX(&J)    GET PAX LENGTH FOR THIS KEYWORD
&M       SETA  0
.BYTENXT ANOP  ,
&D       SETC  ''
.BYTELUP AIF   (&M GE &K).BYTENOT
&M       SETA  &M+1
         AIF   ('&PAX(&J)'(&M,1) LT '0').BYTENOT
         AIF   ('&PAX(&J)'(&M,1) GT '9').BYTENOT
&D       SETC  '&D'.'&PAX(&J)'(&M,1)
         AGO   .BYTELUP
.BYTENOT AIF   ('&D' EQ '').BYTELUP
&O       SETA  &D
         AIF   (&B(&O)).BYTETST   SKIP DUPLICATE
&MACPCNT SETA  &MACPCNT+1
&B(&O)   SETB 1
.BYTETST AIF   (&M LT &K).BYTENXT
         AGO   .LISTLUP
.*
.NOTFUND MNOTE 8,'MACBITS: TERM &C NOT FOUND'
&MACPERR SETB  1
         AGO   .LISTLUP
.BALERR  MNOTE 8,'MACBITS: PARM AND PAX COUNTS DO NOT MATCH'
.SETVAL  ANOP  ,
&MACPBIT SETC  '&B(8)&B(7)&B(6)&B(5)&B(4)&B(3)&B(2)&B(1)'
&MACPVAL SETA  128*&B(8)+64*&B(7)+32*&B(6)+16*&B(5)+8*&B(4)+4*&B(3)+2*&*
               B(2)+&B(1)
.MEND    MEND  ,
