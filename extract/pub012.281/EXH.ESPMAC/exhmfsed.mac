         MACRO ,                                                 89229
&NM      EXHMFSED &LIST=YES,&UNDEF=C'.',&AM=24                   89229
         GBLB  &MVSXA                                            91213
         GBLC  &SYSTEM                                           89265
         LCLA  &LOGOFF                                           93184
         LCLB  &DIR,&REP,&VSAM,&A4                               91213
         LCLC  &XP,&XPX                                          89265
&DIR     SETB  ('&SYSECT' EQ 'EXHCXUPY')                         89229
&REP     SETB  ('&SYSECT'(6,3) EQ 'REP')  EXHCCREP ?             89265
&VSAM    SETB  ('&SYSECT'(1,7) EQ 'EXHCXVS')                     90079
&XP      SETC  'DR'          SET FOR I/O WORK AREA PREFIX        89265
&XPX     SETC  'DRXIT'       EXIT NAME                           93184
&LOGOFF  SETA  3             ICM MASK FOR OFFSET                 93184
         AIF   (NOT &REP).NOTXP                                  89265
&XP      SETC  'EXC'         ELSE USE EXHBCOMM PREFIX            89265
&XPX     SETC  'EXCEXIT'     EXIT NAME                           93184
&LOGOFF  SETA  15            ICM MASK FOR OFFSET                 93184
&A4      SETB  (&MVSXA OR ('&AM' EQ '31'))                       91213
.NOTXP   PUSH  PRINT                                             89229
         AIF   ('&LIST' NE '' AND '&LIST' NE 'YES').NOLIST       89229
         PRINT GEN                                               89229
.NOLIST  ANOP  ,                                                 89229
*        NOTE - THE CURSOR IS PLACED IN THE COMMAND AREA TO PREVENT
*        INADVERTANT LOSS OF DATA.
         SPACE 1
         AIF   (&REP).COMNUSE                                    89265
         L     R7,EXCLODAD   GET LOADED BUFFER
         USING XIOWORK,R7    DECLARE IT
.COMNUSE LH    R1,LSIZE                                          89219
         LA    R2,0(R1,R1)   TWO DISPLAY LINES                   89265
         STH   R2,DC2LINE    SAVE IT                             89265
         LA    R0,DS7INPUT-DS7OFFP-1(,R1)  OFFSET TO COMMAND AREA
         STH   R0,DFLTCUR    SET DEFAULT CURSOR ADDRESS          89265
         XC    FDW(FDWXCLEN),FDW  CLEAR CALL PARAMETER AREA      89265
         LA    R15,16        SET FOR SIXTEEN BYTES PER LINE      89244
         LA    R14,49+8*&REP+2*&A4  BYTES INDENT TO TEXT FRAME   91213
         CLI   LSIZE+1,130   WIDE LINES ?                        89244
         BNH   SETNAROW      NO                                  89244
         LA    R15,32                                            89244
         LA    R14,88-&A4-49(,R14)  BYTES INDENT TO TEXT FRAME   91213
SETNAROW STH   R14,OFFTEXT   SET TEXT OFFSET                     89244
         STH   R15,PFKMOVE   SET INCREMENT                       89244
         LNR   R14,R15       COPY AND NEGATE                     89244
         STH   R14,PFKMOVE+6                                     89244
         SLA   R15,2         FOUR LINES                          89265
         STH   R15,PFKMOVE+2                                     89244
         LNR   R14,R15                                           89244
         STH   R14,PFKMOVE+8                                     89244
         SLA   R15,2         4*4 LINES                           89265
         STH   R15,PFKMOVE+4                                     89244
         LNR   R14,R15                                           89244
         STH   R14,PFKMOVE+10                                    89244
MOVENEWC MVC   NEXTCURS,DFLTCUR   DEFAULT CURSOR TO COMMAND AREA 89265
MOVEAGIN SCINIT FDW          INITIALIZE FULL-SCREEN CODE         89265
         L     R10,BUFAD     LOAD BUFFER ADDRESS
         USING DSPSECT,R10
         AIF   (&REP).REPNICE                                    90002
         SLR   R15,R15       CLEAR FOR ICM                       90002
         ICM   R15,3,DRLEN   GET BLOCK LENGTH                    90002
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   *+8           YES; LEAVE AS IS                    90002
         SH    R15,KL        ALLOW FOR KEY LENGTH                90002
         STH   R15,HEADROOM  SET MAX DISPLAY SIZE                90002
         SLR   R1,R1         CLEAR FOR ICM                       87207
         ICM   R1,3,OFFSET   GET OFFSET ADDRESS                  87207
         BALS  R14,NICEOFF   MAKE IT A LINE MULTIPLE
         AGO   .COMNICE                                          89265
.REPNICE L     R1,STARTAD    GET OFFSET ADDRESS                  89265
         TM    PAGEFG,PFBASE   WAS A BASE VALUE SET ?            89265
         BNZ   *+12          YES                                 89265
         OI    PAGEFG,PFBASE   SHOW BASE VALUE SET               89265
         ST    R1,BASEAD     AND SET THE BASE                    89265
         MVC   LINEMAX+2(2),OFFINC  PROPAGATE LINE MAXIMUM       89265
.COMNICE BALS  R14,BLANKER   CLEAR THE SCREEN BUFFER             89265
         AIF   (NOT &REP).SCHCM1  SKIP SCHEDULE                  89265
         NI    PAGEFG,255-PFIND-PFNEXT  RESET LOCATE REQUESTS    83362
         AIF   ('&SYSTEM' NE 'MVS').SCHNM1                       82221
         BALS  R9,FIXPAGE    CHECK FOR PAGE-FIX REQUEST          83362
         CRMS  SRB,OPT=SPVR  SCHEDULE THE REQUEST                91212
         BXLE  R15,R15,MOVECRMS   SKIP AROUND ERROR CODE         84001
SCHEDERR MVC   REPLY,BLANKS  CLEAR TEMPORARY MESSAGE HOLDER      84001
         MVC   REPLY(L'SCHERMSG),SCHERMSG  LET USER KNOW         84001
         MVC   NEXTCURS,DFLTCUR  FORCE CURSOR TO COMMAND AREA    89265
MOVECRMS DS    0H                                                84001
         AGO   .SCHCM1                                           82221
.SCHNM1  BALS  R14,MEMSERVE  PROCESS MEMORY ACCESS REQUEST       82221
.SCHCM1  MVC   DS7BUFSF,SFPROSKP   PROTECTED TOP TITLE LINE      82221
         MVC   DS7BUFSF+2(3),SAWHITE  WHITE HEADER               89265
         BALS  R14,ADDCOLOR  CONDITIONAL COLOR                   89265
         MVC   DS7BUFSF+L'DS7BUFSF(3),BLANKS  CLEAR IF NO SA     89268
         AIF   (&REP).REPPRFX                                    89265
         TM    MODEFG,MODELOCK  UNPRINTABLES LOCKED ?            89265
         BNZ   CONTLOCK      YES; SAY SO                         89265
         TM    ZAPFG,FNO     ZAPPABLE ?                          89229
         BZ    CONTZAP       YES                                 89229
CONTLOCK MVC   DS7UPLOW(6),=C'Locked'                            89265
         B     CONTZAPX      SKIP AROUND                         89229
CONTZAP  TM    ZAPFG,FRED+FZAP  CHANGED ?                        89229
         BNO   CONTZAPX      NO                                  89229
         MVC   DS7UPLOW(8),=C'ZAPpable'                          89229
CONTZAPX DS    0H                                                89265
         AIF   (&DIR).DIRHEAD                                    89229
         MVC   DSPDSN,DRDSN   MOVE COMMON HEADER                 89229
         AGO   .COMHEAD                                          89229
.DIRHEAD MVC   DSPDSN(L'DWDSN),DWDSN  MOVE UNMODIFIED DSN        89229
         MVC   DSPDSN+L'DWDSN+1(6),DRVOL  AND VOL-SER            89229
         LA    R1,DSPDSN                                         89229
         LA    R0,L'DSPDSN-10+2                                  89229
CONFOLP  CLC   BLANKS(10),0(R1)  ROOM FOR MEMBER ?               89229
         BE    CONFONM       YES; ADD IT                         89229
         LA    R1,1(,R1)                                         89229
         BCT   R0,CONFOLP    TRY AGAIN                           89229
         B     CONFONNM      NO ROOM; SKIP IT                    89229
CONFONM  MVI   0(R1),C'('                                        89229
         MVC   1(8,R1),DIRNAME MOVE MEMBER NAME                  89229
CONFOTR  CLI   2(R1),C' '    END OF NAME ?                       89229
         BE    CONFOTP       YES                                 89229
         LA    R1,1(,R1)                                         89229
         BCT   R0,CONFOTR                                        89229
         B     CONFONNM                                          89229
CONFOTP  MVI   2(R1),C')'                                        89229
.COMHEAD SPACE 1                                                 89229
CONFONNM INHEX DSPTTR,CURTTR,3,MAKE=OUT  SHOW CURRENT TTR       GP10037
         MVC   DS7HEAD+1(L'DS7HEAD-1),DCKEYM
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   *+10          YES; LEAVE KEY
         MVC   DS7HEAD(4),DCDATA  SET DATA MODE
         TM    AUXFG,MODETXT  TEXT MODE ?                        89265
         BZ    *+10          NO                                  89265
         MVC   DS7HEAD+5(4),=C'Text'                             89265
         AGO   .COMPRFX                                          89265
.REPPRFX L     R5,=A(HEADER) GET HEADER ROUTINE                  89265
         BALSR R4,(R5)       BUILD HEADER LINE                   89265
.COMPRFX LH    R0,LSIZE      POINT TO SECOND LINE                89229
         BALS  R14,EXWTOSBA  BUILD SBA ORDER                     89265
         MVC   DS7AD2,DB     MAKE SBA FOR IT                     89229
         MVC   DS7OFFP(3),SAYELLOW  YELLOW OFFSET                89265
         BALS  R14,ADDCOLOR  CONDITIONAL COLOR SET               89265
         AIF   (&REP).REPNEGO                                    89265
         INHEX DS7OFFS,OFFSET,MAKE=OUTC DISPLAY OFFSET           89265
         MVI   DS7OFFP,C'+'
         AGO   .COMNEGO                                          89265
.REPNEGO ICM   R0,&LOGOFF,OFFSET  LOAD OFFSET                    93184
         LPR   R0,R0         MAKE POSITIVE                       89265
         ST    R0,DB+4       STASH FOR CONVERT                   89265
         INHEX DS7OFFS,DB,MAKE=OUTC DISPLAY OFFSET               89265
         MVI   DS7OFFP,C'+'
         TM    OFFSET,X'80'  NEGATIVE OFFSET ?                   89265
         BZ    *+8           NO                                  89265
         MVI   DS7OFFP,C'-'  SHOW SO                             89265
.COMNEGO MVC   DS7MSGS1,SFPRISKP  INT/PROTECTED MESSAGE FIELD
         MVC   DS7MSG(3),SACYAN  LIGHT BLUE MESSAGE              89265
         BALS  R14,ADDCOLOR  CONDITIONAL COLOR                   89265
         MVC   DS7MSG,REPLY  COPY MESSAGE
         MVC   REPLY,BLANKS  CLEAR TEMPORARY MESSAGE HOLDER
         AIF   (&REP).REPMSG1                                    89229
         AIF   (&VSAM).VSAM1                                     90079
         LA    R2,BLOCKBUF   GET THE INPUT BUFFER                89244
         SLR   R5,R5         CLEAR FOR ICM                       87207
         ICM   R5,3,DRLEN    GET BLOCK LENGTH                    87207
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   MOVENKEY      YES; LEAVE AS IS
         SH    R5,KL         ALLOW FOR KEY LENGTH
         AH    R2,KL         DITTO WITH START DISPLACEMENT       89244
MOVENKEY SLR   R6,R6                                             89244
         AGO   .NSAM1                                            90079
.VSAM1   L     R2,DRSLI-4    LOAD RECORD ADDRESS                 90079
         L     R5,DRSLI      LOAD RECORD LENGTH                  90079
         MVC   DL,DRLEN      COPY RECORD LENGTH                  90079
         SLR   R6,R6         CLEAR FOR IC                        90079
.NSAM1   ICM   R6,3,OFFNEXT  GET START DISPLAY OFFSET            89244
         AR    R2,R6         GET BUFFER WITH OFFSET              89244
         SR    R5,R6         GET RESIDUAL LENGTH                 89244
         BP    MOVEN0OF      DISPLAY IF NOT ZERO
         LH    R14,PFKMOVE+2  GET FOUR LINES WORTH               89268
         MIN   R14,(R6)      GET SMALLER OF DECR. OR OFFSET      89268
         SR    R6,R14        FINAGLE TO DISPLAY LAST 4 LINES     89268
         TM    ZAPFG,FZAP    TEXT UPDATED ?
         BZ    MOVEN0OF      NO; JUST SHOW EMPTY SCREEN
         CLC   DS7MSG,BLANKS   IS LINE CLEAR ?
         BNE   MOVEN0OF      NO; DON'T CLOBBER
         MVC   DS7MSG(L'MSGSUCC),MSGSUCC  SHOW UNZAPPED REPLACE
MOVEN0OF CLC   DS7MSG,BLANKS  ANY MESSAGE NOW ?                  89268
         BNE   MOVEN0CH      YES; LEAVE IT                       89268
         TM    ZAPFG,FRED    WAS A RECORD READ ?                 89268
         BZ    MOVEN0CH      NO                                  89268
         MVC   DS7MDCCH,=C'CCHH='                                89268
         MVC   DS7MDDL,=C'DL='                                   89268
         INHEX DS7MCCHH,CCHH,MAKE=OUTC                          GP06353
         INDEC DS7MVDL,DL    SHOW DECIMAL DATA LENGTH            89268
         LADJ  DS7MVDL                                           89268
         MVI   DS7MXDL-1,C'('                                    89268
         INHEX DS7MXDL,DL,MAKE=OUT  (DON'T NEED MVI)             89268
         MVI   DS7MXDL+L'DS7MXDL,C')'                            89268
         LH    R0,KL         GET KEY LENGTH                      89268
         LTR   R0,R0         WAS THERE A KEY ?                   89268
         BZ    MOVEN0CH      NO; SKIP                            89268
         MVC   DS7MDKL,=C'KL='                                   89268
         INDEC DS7MVKL,KL    DECIMAL KEY LENGTH                  89268
         LADJ  DS7MVKL       LEFT-ADJUST                         89268
         MVI   DS7MXKL-1,C'('                                    89268
         INHEX DS7MXKL,KL,MAKE=OUT  HEX KEY LENGTH               89268
         MVI   DS7MXKL+L'DS7MXKL,C')'                            89268
MOVEN0CH DS    0H            BYPASS FOR LENGTH DISPLAY           89268
         AGO   .COMMSG1                                          89265
.REPMSG1 CLC   DS7MSG,BLANKS  ANY MESSAGE ?                      89265
         BNE   MOVEMSGZ      YES; LEAVE IT                       89265
         TM    ZAPFG,FREP    ANYTHING REPLACEABLE ?              89265
         BZ    MOVEMSGZ      NO                                  89265
         L     R14,=A(MSGUNZAP)    ADDRESSABILITY KLUDGE        GP04234
         MVC   DS7MSG(L'MSGUNZAP),0(R14)     REMINDER           GP04234
MOVEMSGZ LA    R3,DS7MSG     SAVE FOR LATER TEST                 89265
.COMMSG1 MVC   DS7MSGS2,SFPRISKP   PROTECTED UPDATE HEADER
         MVC   DS7CMD(3),SAWHITE                                 89265
         BALS  R14,ADDCOLOR  CONDITIONAL WHITE                   89265
         MVC   DS7CMD,DCCOMND
         MVC   DS7IDSF(5),SFINPT   FINISH LINE 2                 89265
         BALS  R14,ADDCOLOR  CONDITIONAL GREEN INPUT             89265
         LH    R0,DC2LINE                                        89265
         BCTR  R0,0          LAST BYTE ON SECOND LINE            89229
         BALS  R14,EXWTOSBA  MAKE ADDRESS                        89265
         MVC   DS7IDSF+2(3),DB  MAKE PROPER SBA                  89229
         MVC   DS7IDSF+5(2),SFPROT  MAKE FIRST SF FOR DATA       89265
         SPACE 1                                                 89229
         AIF   (&REP).REPLINE                                    89265
         LH    R3,LNO        GET NUMBER OF SCREEN LINES
         SH    R3,H2         ALLOW FOR FIXED DISPLAY
         MH    R3,OFFINC     LOGICAL SIZE OF ONE LINE            89265
         LA    R10,DS7TEXT   POINT TO TEXT                       90002
         USING DS7TEXT,R10   DECLARE SCREEN BUFFER               90002
         LTR   R5,R5         ANY TEXT TO DISPLAY ?
         BNP   MOVENONE      NO
         CR    R3,R5         USE SMALLER VALUE FOR DISPLAY
         BNH   *+6           MORE DATA THAN FIT
         LR    R3,R5         ELSE USE ONLY DATA LENGTH
         LR    R5,R3         PRESERVE DATA LENGTH FOR INPUT CODE
         LH    R4,DC2LINE                                        89265
         AGO   .DIOLINE                                          89265
.REPLINE LA    R6,LINEADDR   POINT TO FIRST DISPLAY LINE         89265
         USING LINEADDR,R6   DECLARE IT                          89265
         LH    R4,DC2LINE    CRT ADDRESS OF FIRST DISPLAY LINE   89265
         SLR   R5,R5         SET SCREEN EMPTY                    89265
         LA    R10,DS7TEXT   POINT TO TEXT                       89244
         USING DS7TEXT,R10   DECLARE SCREEN BUFFER               89244
         CLC   SCHERMSG,DS7MSG-DS7MSG(R3)  DID SCHEDULE FAIL ?   89265
         BE    MOVENONE      YES; LEAVE PAGE EMPTY               84001
         SPACE 1                                                 89265
*        THIS CODE PRODUCES ONE LOGICAL TEXT LINE IN LESS THAN ONE
*        PHYSICAL LINE.  RESERVED REGISTERS ARE:                 89265
*        R2 - TEXT POINTER FOR THIS LINE (LINENEW)               89265
*        R3 - LENGTH OF DATA TO FORMAT IN THIS LINE              89265
*        R4 - LOGICAL OFFSET OF LINE ON SCREEN                   89265
*        R5 - WORK REGISTER                                      89265
*        R6 - CURRENT LINE ENTRY IN WORK AREA                    89265
*        R7 - CSA WORK, R8 - COMM, R11 - WORK, R12 - BASE, R13 - SAVE
*        R10 - SCREEN BUFFER (ITEM)                              89265
*                                                                89265
         SPACE 1                                                 89265
MOVELINE L     R5,LINEADDR   REFRESH LINE START                  89265
         AIF   (NOT &REP).NOSPM1                                 94225
         SLR   R15,R15                                           94225
         SPM   R15           KILL SIGNIFICANCE INTERRUPT         94225
.NOSPM1  ST    R5,DB         SAVE START ADDRESS                  89265
         LR    R15,R5        COPY FOR OFFSET CALCULATION         88001
         S     R15,BASEAD    MAKE OFFSET                         89265
         STCM  R15,&LOGOFF,OFFSET    STASH OFFSET                93184
         LPR   R15,R15       MAKE OFFSET PRETTY                  89265
         ST    R15,DB+4      SET OFFSET FOR DISPLAY              89265
         MVC   DS7XLIN(DS7LLEN),BLANKS  CLEAR LINE               93190
         MVC   DS7ADD(3),SAPINK  MAKE ADDRESS PINK               89265
         BALS  R14,ADDCOLOR                                      89265
         UNPK  DS7ADD(L'DS7ADD+1),DB-&A4+1(&A4+4)  START ADDRESS 91213
         TR    DS7ADD,HEXTAB  MAKE EBCDIC                        89265
         MVC   DS7XOFF(3),SAYELLOW  MAKE OFFSET YELLOW           89265
         BALS  R14,ADDCOLOR                                      89265
         MVC   DS7XOFF(3),BLANKS  TRAILING BLANKS                89265
         UNPK  DS7OFF(L'DS7OFF+1),DB-(L'DS7OFF/2)+8(1+L'DS7OFF/2)
         TR    DS7OFF,HEXTAB  MAKE EBCDIC                        89265
         MVC   DS7OFF+L'DS7OFF(3),BLANKS  SPACE                  89265
         LA    R14,DS7SIGN   POINT TO SIGN INSERTION             89265
         LA    R15,L'DS7OFF-1  NUMBER OF DIGITS TO CHECK         89265
MOVEDSGN CLI   1(R14),C'0'   LEADING ZERO ?                      89265
         BNE   MOVEDSGP      NO; PLACE SIGN NOW                  89265
         MVI   0(R14),C' '   BLANK UNUSED POSITION               89265
         LA    R14,1(,R14)   SPACE TO NEXT BYTE                  89265
         BCT   R15,MOVEDSGN  TRY NEXT ONE                        89265
MOVEDSGP MVI   0(R14),C'+'                                       89265
         TM    OFFSET,X'80'  NEGATIVE OFFSET ?                   89265
         BZ    *+8           NO                                  89265
         MVI   0(R14),C'-'   YES                                 89265
         LA    R10,DS7XF1    SPACE TO FIRST HEX FIELD            89265
         USING DS7XF1,R10    DECLARE IT                          89265
         TM    LINEFLG,LFBAD                                     89265
         BZ    MOVEGUDL                                          89265
MOVEBADA AH    R4,LSIZE      SET SCREEN ADDRESS OF NEXT LINE     89265
         MVC   DS7XD1(22),=CL22'<<< Program check >>>'           89265
         TM    LINEFLG,LFOUT   OUT OF STORAGE ?                  89265
         BNO   *+10          NO                                  89265
         MVC   DS7XD1(22),=CL22'<< Address too high >>'          89265
         MVC   DS7XF1,SFPROSKP    PROTECT/SKIP                   89265
         LA    R10,DS7XD1+22  BUMP PAST TEXT JUST ADDED          89265
         B     MOVENULN      REJOIN COMMON                       89265
MOVEGUDL LA    R2,LINENEW    POINT TO NEW TEXT                   89265
         SLR   R3,R3                                             89265
         ICM   R3,1,LINELEN    GET LENGTH OF LINE                92359
         BNP   MOVEBADA      SHOULD NEVER HAPPEN ?               92359
         AGO   .COMMVLN      GO TO COMMON MOVE LINE              89265
.DIOLINE SPACE 1                                                 89244
*        THIS CODE PRODUCES ONE LOGICAL TEXT LINE IN LESS THAN ONE
*        PHYSICAL LINE.  RESERVED REGISTERS ARE:                 89244
*        R2 - BUFFER START ADDRESS FOR THIS LINE                 89244
*        R3 - LENGTH OF DATA LEFT TO FORMAT                      89244
*        R4 - LOGICAL OFFSET OF LINE ON SCREEN                   89244
*        R5 - DATA LENGTH (FOR INPUT CODE)                       89244
*        R6 - OFFSET OF DATA IN INPUT BUFFER FOR THIS LINE       89244
*        R7 - I/O WORK, R8 - COMM, R11 - WORK, R12 - BASE, R13 - SAVE
*        R10 - SCREEN BUFFER (ITEM)                              89244
*                                                                89244
MOVELINE ST    R6,DB         SET DATA OFFSET                     89244
         MVC   DS7XLIN(DS7OFF-DS7XLIN),BLANKS  CLEAR LINE        89268
         MVC   DS7OFF(3),SAYELLOW  MAKE YELLOW OFFSET ADDRESS    89265
         BALS  R14,ADDCOLOR  CONDITIONAL SA                      89265
         UNPK  DS7OFF(L'DS7OFF+1),DB-(L'DS7OFF/2)+4(1+L'DS7OFF/2)
         TR    DS7OFF,HEXTAB  MAKE EBCDIC                        89265
         MVC   DS7OFF+L'DS7OFF(3),BLANKS  SPACE                  89265
.COMMVLN STM   R2,R3,DYNWORK+8   SAVE LINE START                 89244
         LA    R10,DS7XF1    SPACE TO FIRST HEX FIELD            89244
         USING DS7XF1,R10    DECLARE IT                          89244
         LH    R0,OFFINC     GET NUMBER OF BYTES PER LINE        89244
         SRA   R0,2          /4 => WORDS PER LINE                89244
         SPACE 1                                                 89244
*        FORMAT ONE WORD                                         89244
MOVEWORD LA    R1,SFPROSKP   PROTECT/SKIP FIELD                  89265
         TM    AUXFG,MODETXT TEXT AREA UPDATING ?                89265
         BNZ   MOVELINT      YES; LEAVE PROTECTED                89265
         AIF   (NOT &DIR).COMNOUT                                89229
         TM    DWFLAG,DWOUTPUT  WRITABLE ?                       89229
         BNZ   *+8           YES                                 89229
         LA    R1,SFPROT     NO; DON'T INTENSIFY                 89265
.COMNOUT TM    ZAPFG,FNO     IS RECORD ZAPPABLE ?                89229
         BNZ   MOVELINT      NO; LEAVE IT                        89229
         LA    R1,SFINPT     MAKE UNPROTECTED                    89265
         AIF   (NOT &REP).COMNSF                                 89265
         ORG   *-4           OVERLAY UNPROTECT                   89265
         LA    R1,SFPROTIN   PRESET FOR ERROR                    89265
         TM    LINEFLG,LFDIS   DISPLAY ONLY ?                    89265
         BNZ   MOVELINT                                          89265
         LA    R1,SFINPT     MAKE UNPROTECTED                    89265
         CLC   LINEOLD-LINENEW(4,R2),LINENEW-LINENEW(R2) SAME ?  89265
         BE    MOVELINT      YES                                 89265
         LA    R1,SFUNPIN    INTENSIFY IF USER CHANGED           89265
.COMNSF  ANOP  ,                                                 89265
MOVELINT MVC   DS7XF1(2+3),0(R1)  MOVE APPROPRIATE SF AND SA     89265
         BALS  R14,ADDCOLOR  ADJUST FOR SA ORDER                 89265
         LA    R15,4         SET WORD SIZE                       89244
         MIN   R15,(R3)      USE SMALLER                         89244
         LR    R14,R15       SAVE LENGTH WE ARE PROCESSING       89244
         BCTR  R15,0         SET FOR EXECUTE                     89244
         EX    R15,XMVCHEX   MOVE HEX TEXT                       89244
         UNPK  UPD(9),DYNWORK(5)  UNPACK A FULL WORD, ANYWAY     89244
         TR    UPD(8),HEXTAB   MAKE PRINTABLE CHARACTERS         89244
         LA    R15,1(R15,R15)  MAKE NEW LENGTH                   89244
         EX    R15,XMVCHEX2  MOVE UNPACKED DATA TO SCREEN        89244
         SPACE 1                                                 89244
         AR    R2,R14        SET NEXT BUFFER ADDRESS             89244
         LA    R10,DS7XD1(R14)    ADVANCE OUTPUT BUFFER POSITION 89244
         AR    R10,R14       BY TWICE INPUT LENGTH               89244
         SR    R3,R14        LENGTH LEFT TO FORMAT               89244
         BNP   DONEWORD                                          89244
         CH    R0,=H'5'      DONE FIRST GROUP OF FOUR ?          89244
         BNE   DONEGAP       NO; OR NARROW LINE                  89244
         MVC   DS7XF1,SFPROSKP  SET SKIP/PROTECTED               89244
         MVI   DS7XF1+L'DS7XF1,C' '  ENSURE BLANK                93190
         LA    R10,DS7XD1-DS7XF1+1(,R10)  SKIP ONE MORE          89244
DONEGAP  BCT   R0,MOVEWORD   DO ANOTHER WORD                     89244
         B     DONEWORD                                          89244
XMVCHEX  MVC   DYNWORK(0),0(R2)  MOVE TEXT FROM INPUT BUFFER     89244
XMVCHEX2 MVC   DS7XD1(0),UPD   MOVE UNPACKED TEXT TO SCREEN      89244
         SPACE 1                                                 89244
DONEWORD LH    R0,OFFTEXT    GET OFFSET TO TEXT PORTION          89244
         BCTR  R0,0          ALLOW FOR FRAME BYTE                89265
         AR    R0,R4         PLUS LINE OFFSET                    89244
         BALS  R14,EXWTOSBA  BUILD SCREEN ADDRESS                89265
         USING DS7XF5,R10    TEXT PREFIX                         89244
         MVC   DS7XF5(2),SFPROSKP  MAKE SKIP/PROTECTED           89244
         MVC   DS7XF5+2(3),DB  MAKE SBA TO TEXT FRAME            89244
         AH    R4,LSIZE      GET SCREEN OFFSET FOR NEXT LINE     89244
         CH    R4,BUFSIZ     IS SCREEN FULL ?                    89244
         BNL   DONESCRN      YES; USE DIFFERENT SF               89244
         AIF   (&REP).REPSKP1                                    89265
         LTR   R3,R3         ANY MORE DATA ?                     89244
         BP    MOVETEXT      YES; NOT END                        89244
         AGO   .COMSKP1                                          89265
.REPSKP1 C     R6,LASTLINE   LAST LINE YET ?                     89265
         BNL   DONESCRN      YES; NO SKIP                        89265
         TM    LINESIZE+LINEFLG,LFBAD  NEXT LINE IN ERROR ?      89265
         BZ    MOVETEXT      NO; KEEP SKIP                       89265
.COMSKP1 ANOP  ,                                                 89265
DONESCRN MVC   DS7XF5(2),SFPROT  MAKE NON-SKIP/PROTECTED         89244
MOVETEXT MVC   DS7XF5+2+3(3),SAWHITE  MAKE FRAME                 89265
         BALS  R14,ADDCOLOR  CONDITIONAL SA                      89265
         MVI   DS7AS1,C'*'   MAKE TEXT FRAME                     89244
         TM    DRMRECFM,1    ASCII MODE ?                        89265
         BZ    *+8           NO                                  89265
         MVI   DS7AS1,C'>'   USE DIFFERENT FRAME                 89265
         LA    R10,DS7EBC    SKIP SBA AND SF                     89265
         USING DS7EBC,R10                                        89265
         LA    R1,SFPROSKP   SET PROTECTED, SKIP                 89265
         TM    AUXFG,MODETXT TEXT UPDATE MODE ?                  89265
         BZ    MOVETXT2      NO                                  89265
         TM    ZAPFG,FNO     ZAPPABLE ?                          89265
         BNZ   MOVETXT2                                          89265
         LA    R1,SFINPT     PLAIN UNPROTECTED                   89265
         AIF   (NOT &REP).COMNSF2                                89265
         ORG   *-4           OVERLAY UNPROTECT                   89265
         LA    R1,SFPROTIN   PRESET FOR ERROR                    89265
         TM    LINEFLG,LFDIS   DISPLAY ONLY ?                    89265
         BNZ   MOVETXT2                                          89265
         LA    R1,SFINPT     MAKE UNPROTECTED                    89265
         CLC   LINEOLD,LINENEW   SAME ?                          89265
         BE    MOVETXT2      YES                                 89265
         LA    R1,SFUNPIN    INTENSIFY IF USER CHANGED           89265
.COMNSF2 SPACE 1                                                 89265
MOVETXT2 MVC   DS7EBC(5),0(R1)  MOVE SF AND COLOR SEQUENCE       89265
         BALS  R14,ADDCOLOR                                      89265
         LA    R10,2(,R10)   SKIP EXTRA SF                       89265
         LM    R2,R3,DYNWORK+8  RESTORE INPUT ADDRESS/LENGTH     89244
         LH    R15,OFFINC    GET LINE LENGTH                     89244
         MIN   R15,(R3)      USE SHORTER OF SIZE AND DATA        89244
         LR    R14,R15       SAVE                                89244
         BCTR  R15,0         MAKE EXECUTE LENGTH                 89244
         EX    R15,XMVCTEXT  MOVE TEXT                           89244
         TM    DRMRECFM,1    ASCII MODE ?                        89244
         BZ    TRANTEXT      NO                                  89244
         L     R1,EXWFRASC   SET FOR ASCII TRANSLATION           89265
         EX    R15,XTRATEXT  TRANSLATE                           89244
         B     TRANTEXT      BRANCH AROUND                       89244
XMVCTEXT MVC   DS7EBC(0),0(R2)  MOVE USER'S DATA                 89244
XTRATEXT TR    DS7EBC(0),0(R1)  TRANSLATE TEXT                   89244
TRANTEXT ICM   R1,15,SQTRANS   DEVICE DEPENDENT TRANSLATE ?      89244
         BZ    TRANNONE      USE DEFAULT TABLE                   89244
         AH    R1,8(,R1)     GET TERMINAL'S TRANSLATION          89244
         B     TRANSOME      USE IT FOR TRANSLATION              89244
         AIF   (&REP).REPTRAN                                    89265
TRANNONE LA    R1,TRTAB      GET DEFAULT TRANSLATION             89244
         AGO   .COMTRAD                                          89265
.REPTRAN ANOP  ,                                                 89265
TRANNONE L     R1,=A(TRTAB)  GET DEFAULT TRANSLATION             89265
.COMTRAD ANOP  ,                                                 89265
TRANSOME EX    R15,XTRATEXT  TRANSLATE                           89244
         LA    R10,DS7EBC+1(R15)  SPACE TO END FRAME             89265
         USING DS7AS2,R10                                        89244
         MVC   DS7AS2(2),SFPROSKP  MAKE PROTECTED SKIP           89265
         AIF   (&REP).REPSKP2                                    89265
         CH    R3,OFFINC     ANY MORE AFTER THIS LINE ?          89265
         BP    MOVE5SKP      YES; END WITH SKIP                  89265
         AGO   .COMSKP2                                          89265
.REPSKP2 C     R6,LASTLINE   LAST LINE YET ?                     89265
         BNL   MOVE5NSK      YES; NO SKIP                        89265
         TM    LINESIZE+LINEFLG,LFBAD  NEXT LINE IN ERROR ?      89265
         BZ    MOVE5SKP      NO; KEEP SKIP                       89265
.COMSKP2 ANOP  ,                                                 89265
MOVE5NSK MVC   DS7AS2(2),SFPROT  PROTECTED; NO SKIP              89265
MOVE5SKP LA    R10,2(,R10)   SKIP EXTRA SF                       89265
         MVC   DS7AS2(3),SAWHITE  FRAME IS WHITE                 89265
         BALS  R14,ADDCOLOR                                      89265
MOVETXT5 MVI   DS7AS2,C'*'   MAKE END FRAME                      89265
         TM    DRMRECFM,1    ASCII MODE ?                        89265
         BZ    *+8           NO                                  89265
         MVI   DS7AS2,C'<'   USE DIFFERENT FRAME                 89265
         LA    R10,DS7XF6    SPACE TO NEXT FIELD                 89244
         USING DS7XF6,R10    DECLARE IT                          89244
         AIF   (&REP).REPLEND                                    89265
         AH    R6,OFFINC     SET NEXT INPUT OFFSET               89244
         AH    R2,OFFINC     NEXT TEXT ADDRESS                   89244
         SH    R3,OFFINC     NEW RESIDUAL TEXT LENGTH            89244
         BNP   MOVENONE      NO MORE                             89244
         AGO   .COMLEND                                          89265
.REPLEND SPACE 1                                                 89265
MOVENULN LH    R15,LSIZE     GET LINE WIDTH                      89265
         LR    R0,R4         GET NEXT SCREEN LINE ADDRESS        89265
         SRDL  R0,32         FLIP FOR DIVIDE                     89265
         DR    R0,R15        MAKE NUMBER OF LINES                89265
         MH    R1,OFFINC     SIZE PER LINE                       89265
         LR    R5,R1         (PRE)SET SCREEN SIZE FOR MOVENONE   89265
         LA    R6,LINESIZE(,R6)  BUMP TO NEXT LINE ENTRY         89265
         C     R6,LASTLINE   DONE ?                              89265
         BH    MOVENONE      YES                                 89265
         CH    R4,BUFSIZ     SCREEN FULL ?                       89244
         BNL   MOVENONE      YES; TERMINATE THIS SCREEN          89244
         DROP  R6                                                89265
.COMLEND LR    R0,R4         MAKE NEW LINE ADDRESS               89244
         BALS  R14,EXWTOSBA  BUILD SBA ORDER                     89265
         MVC   DS7XF6,DB     PUT IT ON SCREEN                    89244
         LA    R10,L'DS7XF6(,R10)  SKIP PAST IT                  89244
         B     MOVELINE      DO NEXT LINE                        89244
         SPACE 1                                                 89244
MOVENONE LR    R2,R10        SAVE ADDRESS FOR SF/IC              89244
         L     R10,BUFAD     RESTORE BUFFER ADDRESS              89244
         USING DSPSECT,R10   DECLARE FULL BUFFER, AGAIN          89244
         LTR   R5,R5         VALID TEXT LENGTH ?
         BP    *+6           YES
         SLR   R5,R5         ELSE ZERO IT
         MVC   0(2,R2),SFPROT  ADD PROTECT ORDER                 89265
         LA    R3,2(,R2)     GET IC LOCATION                     89265
         S     R3,BUFAD      LESS BUFFER START                   89265
         ST    R3,FDWBOL     MAKE WRITE LENGTH                   89265
CURSFIX  LH    R0,NEXTCURS   SET NEW CURSOR ADDRESS              89265
         SH    R0,DC2LINE    LESS TEXT START                     89265
         BNP   CURSFIXT      NO; LEAVE IT
         LR    R15,R5        COPY SCREEN LENGTH                  89265
         AH    R15,OFFINC                                        89265
         BCTR  R15,0         TRUNCATE                            89265
         SLR   R14,R14                                           89265
         LH    R1,OFFINC                                         89265
         DR    R14,R1        NUMBER OF FULL LINES                89265
         MH    R15,LSIZE     NUMBER OF BYTES                     89229
CURSFIXL CR    R0,R15        LONGER THAN TEXT ?
         BL    CURSFIXT      NO; OK
         SH    R0,LSIZE      BACKSPACE A LINE                    89229
         BP    CURSFIXL      CHECK IT AGAIN
         SLR   R0,R0         ELSE MAKE ZERO
CURSFIXT AH    R0,DC2LINE    RELOCATE TO TEXT AREA               89265
         STH   R0,FDWCUR     SET CURSOR REQUEST                  89265
         MVI   FDWOPT,FDWKEY12  FOLD KEYS 13-24 INTO 1-12        89265
         SCPAGE FDW          WRITE THE PAGE, AWAIT AND READ RESPONSE
         BNM   GOTINPUT      OK IF POSITIVE INPUT LENGTH         89249
         BALS  R14,BLANKER   CLEAR ORDERS FROM BUFFER            89249
         AIF   (NOT &REP).NOONUN   CLEAN-UP FREEMAIN WORK AREA   93185
         BALS  R14,ONUNIT    FORCE CLEAN-UP EXIT NOW             90303
.NOONUN  CLI   FDWIAID,1     CHECK RETURN CONDITION              89249
         AIF   (&DIR OR &VSAM).WAITDR                            90310
         BL    &XPX          NO RESPONSE (OR LOOP MODE?)         90310
         AGO   .WAITCM                                           90310
.WAITDR  BL    &XP.WAIT      NO RESPONSE (OR LOOP MODE?)         89249
.WAITCM  BE    &XP.WERR      WRITE ERROR                         89249
         B     &XP.RERR      READ ERROR                          89249
         SPACE 1                                                 89249
GOTINPUT LM    R2,R3,FDWSCAN  GET INPUT ADDRESS/LENGTH           89249
         ST    R5,FDWBIL     SAVE LOGICAL SCREEN SIZE            89265
         MVC   NEXTCURS,DFLTCUR RESET DEFAULT CURSOR ADDRESS     89249
         MVC   REPLY,BLANKS  CLEAR REPLY                         89249
         MVC   DS7MSG,BLANKS                                     89249
         AIF   (NOT &REP).COMSOBS                                89265
         MVC   OLDBASE(8),BASEAD  SAVE FOR ERROR RECOVERY        89265
.COMSOBS LA    R5,FDWICOD                                        89249
         LR    R6,R5         SET STOP ADDRESS                    89249
         LA    R4,QUICKIES   GET IMMEDIATE COMMANDS              89249
         BALS  R14,VERBLOOK  LOOK FOR MATCH                      89249
           B   *+8                                               89249
         B     0(R12,R15)    EXECUTE THE KEY REQUEST             89249
         MVC   NEXTCURS,FDWICUD  SAVE USER'S CURSOR              89249
         B     HAVENTER      PARSE INPUT                         89249
         SPACE 1                                                 89249
QUICKIES BTAB  *1D,HAVENTID,BASE=*  ENTER KEY                    89265
         BTAB  *PA1,EXITEXIT   PA1 - QUIT                        89249
         BTAB  *PA2,EXITEXIT   PA2 - QUIT                        89249
         BTAB  *CLEAR,HAVCLEAR     CLEAR                         89249
         BTAB  *PF3,EXITEXIT  GET OUT                           GP08313
         BTAB  *PF5,HAVEFIND  FIND REQUEST (CONTINUATION)       GP08313
         BTAB  *PF9,HAVECHIN  CHAIN REQUEST                      89265
         BTAB  *PF12,HAVENTER  P12 - JUST MOVE CURSOR HOME       89249
         BTAB  *END                                              89265
         SPACE 1                                                 89265
HAVCLEAR DS    0H                                                89265
         AIF   (NOT &REP).COMCLIR                                89265
         NI    ZAPFG,255-FRED  RESET DATA IN STORAGE             89265
.COMCLIR B     MOVENEWC      REFRESH SCREEN; CURSOR HOME         89265
         SPACE 1                                                 89265
HAVECHIN MVI   REPLY,C'&&'   TREAT TEST-REQUEST AS CHAIN CHASE   89265
         B     HAVENTER      PROCESS AND MERGE                   89265
         SPACE 1
HAVEFIND MVI   REPLY,C'L'    TREAT TEST-REQUEST AS 'LOCATE'      89265
         TM    MODEFG,MODELOC   LOCATE COMMAND IN EFFECT ?
         BNZ   HAVENTER      YES; PROCESS AND MERGE
         CH    R3,H3         ANY TEXT SUPPLIED ?                 81347
         BH    HAVENTER      YES; PERMIT IT                      81347
CRUDINP  MVC   REPLY,BLANKS                                      89265
         MVC   REPLY(L'BADMSG),BADMSG  INDICATE INVALID REQUEST  89265
         AIF   (NOT &REP).COMCRUD                                89265
         MVC   BASEAD(8),OLDBASE  RESTORE PRIOR BASE AND START   83362
         OI    PAGEFG,PFBASE   SET BASE PRESENT                  82216
         NI    PAGEFG,255-PFFIX-PFIND  RESET FLAGS               84001
         NI    ZAPFG,255-FRED   REFRESH REQUIRED                 84001
.COMCRUD B     MOVEAGIN      RE-CREATE THE ORIGINAL SCREEN
         AIF   (NOT &DIR).COMBADM                                89229
BADMSG   DC    C'Invalid input'                                  89229
.COMBADM SPACE 1                                                 89229
HAVENTID LTR   R3,R3         ANY DATA IN THIS INPUT BUFFER ?     89265
         BP    HAVENTER      YES                                 89265
         LH    R0,FDWICUD    GET CURSOR ADDRESS                  89265
         SRDL  R0,32         SHIFT FOR DIVIDE                    83362
         LH    R14,LSIZE     GET LINE SIZE                       88252
         DR    R0,R14        GET OFFSET/LINE                     83362
         CH    R1,H2         IN COMMAND AREA ?                   83362
         BL    HAVENTER      YES; TREAT AS CURSOR HOME           83362
         CH    R0,DCLLEN     LOWER THAN FIRST WORD ?             83362
         BL    HAVENTER      YES; CURSOR HOME                    83362
         NI    AUXFG,255-MODETXT  RESET TEXT MODE                89265
         CH    R0,OFFTEXT    IN EBCDIC FRAME ?                   89265
         BL    *+8           NO                                  83362
         OI    AUXFG,MODETXT  SET TEXT MODE                      89265
         MVC   NEXTCURS,FDWICUD   SET (SAME) CURSOR ADDRESS      89265
         B     MOVEAGIN      REDO SCREEN                         83362
HAVENTER CH    R3,H3         LONG ENOUGH FOR MODIFIED FIELD ?
         BNL   HAVFIELD      YES; CHECK WHICH
         CLC   REPLY,BLANKS  ANY INPUT ?
         BNE   HAVCOMAN      YES; SEE WHAT IT IS
         AIF   (NOT &REP).DIODONE                                89265
HAVEDONE TM    ZAPFG,FREP    ANY REPLACEMENT DATA ?              89265
         BNZ   MOVEAGIN      YES; INHIBIT MOVEMENT               89265
         SLR   R14,R14                                           89265
         IC    R14,FDWICOD   GET PFK VALUE                       89265
         SH    R14,=AL2(X'11')   AT LEAST PFK 1 ?               GP08313
         BM    MOVEAGIN      NO                                 GP08313
         CH    R14,=H'12'    NO HIGHER THAN PFK 12              GP08313
         BNL   MOVEAGIN      HIGH; SKIP                         GP08313
         SR    R1,R1         CLEAR FOR TEST                     GP08313
         IC    R1,PFMOVINX(R14)   LOAD MOVEMENT INDEX           GP08313
         LTR   R1,R1         ANY ?                              GP08313
         BZ    MOVEAGIN      NO; NOT A MOVEMENT KEY             GP08313
         LH    R1,PFKMOVE-2(R1)  GET MOVEMENT AMOUNT            GP08313
         LTR   R1,R1         FORWARD ?                           89265
         BP    HAVEDONF      YES                                 89265
         A     R1,STARTAD    MAKE NEW DISPLAY ADDRESS            89265
         B     HAVEDONA      FIX START ADDRESS                   89265
HAVEDONF SRL   R1,4          CONVERT INTO NUMBER OF LINES TO SHIFT
         MH    R1,=Y(LINESIZE)  MAKE OFFSET FROM START OF TABLE  89265
         LA    R2,LINEADDR(R1)  POINT TO ENTRY                   89265
         C     R2,LASTLINE   IN TABLE ?                          89265
         BNH   *+8           YES                                 89265
         L     R2,LASTLINE   ELSE USE LAST LINE                  89265
         L     R1,LINEADDR-LINEADDR(,R2)  LOAD ADDRESS           89265
HAVEDONA BALS  R14,NICEOFF   MAKE NICE OFFSET                    89265
         B     MOVENEWC      DISPLAY NEW PAGE                    89265
         AGO   .COMZAX                                           89265
.DIODONE AIF   (&REP).REPNSHF                                    89265
HAVSHIFT SLR   R14,R14                                           89265
         IC    R14,FDWICOD   GET PFK VALUE                       89265
         SH    R14,=AL2(X'11')   AT LEAST PFK 1 ?               GP08313
         BM    HAVNOSHF      NO                                 GP08313
         CH    R14,=H'12'    NO HIGHER THAN PFK 12              GP08313
         BNL   HAVNOSHF      HIGH; SKIP                         GP08313
         SR    R1,R1         CLEAR FOR TEST                     GP08313
         IC    R1,PFMOVINX(R14)   LOAD MOVEMENT INDEX           GP08313
         LTR   R1,R1         ANY ?                              GP08313
         BZ    HAVNOSHF      NO; NOT A MOVEMENT KEY             GP08313
         LH    R14,PFKMOVE-2(R1)  GET MOVEMENT AMOUNT           GP08313
         SLR   R1,R1                                             87207
         ICM   R1,&LOGOFF,OFFSET   GET CURRENT OFFSET            93184
         AR    R1,R14        GET OFFSET INCREMENT               GP08313
         BNM   *+6
         SLR   R1,R1
         STCM  R1,&LOGOFF,OFFSET     SET THE NEW OFFSET          93184
         BALS  R14,NICEOFF   FIX IT UP
         B     MOVEAGIN      SEE IF ANYTHING ELSE TO DO
.REPNSHF SPACE 1                                                 89265
HAVNOSHF CLI   FDWICOD,X'1D' WAS AID AN ENTER ?                  89265
         BNE   MOVEAGIN      NO; DON'T CHANGE OFFSET
         SLR   R1,R1                                             89265
         ICM   R1,3,OFFSET                                       89265
         A     R1,FDWBIL     ADD PRIOR SCREEN CAPACITY           89265
         STH   R1,OFFSET     SET IT BACK
         BALS  R14,NICEOFF   CLEAN AND CHECK IT
         SLR   R1,R1                                             87207
         ICM   R1,3,OFFSET   GET TRUE OFFSET                     87207
         CLM   R1,3,HEADROOM BEYOND BUFFER ?                     90002
         BL    MOVEAGIN      NO; GO TO DISPLAY
         TM    ZAPFG,FZAP    ANY UNZAPPED REPLACEMENT DATA ?
         BNZ   MOVESUCC      YES; REPEAT WARNING MESSAGE
         IC    R15,CURTTR+2  GET RECORD NUMBER
         LA    R15,1(,R15)   FINAGLE FOR DECREMENT IN CXUPR
         STC   R15,CURTTR+2  STASH IT BACK
         NI    ZAPFG,255-FRED-FNO-FBAS  RESET RECORD IN STORAGE
GOTOZAX  BALS  R14,BLANKER   CLEAR DISPLAY AND MESSAGE
         AIF   (&DIR).DIRZAX                                     89229
         XXCTL SUF='X'       GO TO I/O ROUTINE                   89229
         AGO   .COMZAX                                           89229
.DIRZAX  XXCTL SUF='U'       GO TO I/O ROUTINE                   89229
.COMZAX  SPACE 1
HAVFIELD CLI   0(R2),X'11'   SBA OF AN ATTRIBUTE BYTE ?
         BNE   CRUDINP       NO; HARDWARE ERROR ?
         MVC   DB(3),0(R2)   SAVE ATTRIBUTE ADDRESS
         NI    FDWICOD,FZAP  KILL POSSIBLE 'ENTER' AID           89265
         LA    R2,3(,R2)     SKIP OVER AID SEQUENCE
         SH    R3,H3         ADJUST LENGTH AND SET CONDITION CODE
         BNP   HAVENTER      GO TO COMMON POST-PROCESSING
         BALS  R14,EXWFRSBA  GET ATTRIBUTE ADDRESS IN R0         89265
         STH   R0,FDWCUD     SAVE FIELD'S ADDRESS                89265
         SH    R0,DC2LINE    ATTRIBUTE IN TEXT AREA ?
         BP    HAVSECND      YES; GO TO UPDATE TEXT
         LA    R14,0(,R2)    SKIP FIELD ADDR; POINT TO TEXT
         LTR   R3,R3         CHECK RESIDUAL LENGTH              GP08313
         BNP   HAVENTER      EMPTY FIELD                        GP08313
         LA    R15,L'REPLY-6   GET COMMAND AREA LENGTH LESS PREFIX
         CR    R15,R3        LONGER THAN AVAILABLE TEXT ?
         BNH   *+6           NO
         LR    R15,R3        ELSE USE ONLY AVAILABLE LENGTH
         LR    R0,R15        SAVE ORIGINAL LENGTH
         LA    R1,REPLY+6    POINT TO COMMAND AREA PLUS PREFIX
         MVC   REPLY+6(L'REPLY-6),BLANKS  CLEAR INPUT AREA
HAVCOMND CLI   0(R14),X'11'  SECOND FIELD PRESENT ?
         BE    HAVCOMNX      YES; GET LENGTH OF COMMAND
         OC    0(1,R1),0(R14)  COPY AND MAKE INPUT UPPER CASE
         LA    R1,1(,R1)
         LA    R14,1(,R14)
         BCT   R15,HAVCOMND  DO AGAIN
         SLR   R15,R15
HAVCOMNX LR    R2,R14        SET NEW ADDRESS
         AR    R3,R15        ADD CURRENT LENGTH                 GP08313
         SR    R3,R0         LESS BCT LENGTH                    GP08313
         BP    HAVFIELD      MORE - PROCESS SECOND FIELD
HAVCOMAN BALS  R14,BLANKER   CLEAR BUFFER
         AIF   (NOT &REP).REPLOOK                                89265
         NI    PAGEFG,255-PFFIX  RESET PAGE-FIX REQUEST          83362
         BALSR R9,(0)        PARSE RETURN POINT                  89265
.REPLOOK LA    R5,REPLY
         AIF   (&REP).REPSCAN                                    89265
LOOKUMS  XLOOK T=FINDTAB     GET INTERNAL COMMAND TABLE
         MVC   REPLY,0(R5)   LEFT ADJUST REMAINING TEXT
         LA    R5,REPLY      ADJUST POINTER
         CLI   0(R5),C' '    ANYTHING UNPARSED ?
         BE    MOVENEWC      NO; REDISPLAY THE SCREEN
         B     GOTOZAX       GO TO UPDATE PARSE ROUTINE
         AGO   .COMSCAN                                          89265
.REPSCAN ANOP  ,                                                 89268
LOOKLOC  L     R2,CVTPTR     PRESET FOR COMMON FUNCTIONS         89265
         L     R4,=A(POSTCMND)  GET INTERNAL COMMAND TABLE       88252
         XLOOK T=(R4)        AND SCAN...                         88252
         MVC   REPLY,0(R5)   LEFT ADJUST REMAINING TEXT          89265
         LA    R5,REPLY      ADJUST POINTER                      89265
         CLI   0(R5),C' '    ANYTHING UNPARSED ?                 89265
         BE    MOVENEWC      NO; REDISPLAY THE SCREEN            89265
         CLC   =C'AT',0(R5)  @ZAP COMPATIBILITY ?                88019
         BNE   TESTHEX       NO; SEE IF HEX ADDRESS              89265
         LA    R5,2(,R5)     SHIFT OVER                          88019
         B     LOOKLOC       TRY FOR MORE                        88019
.COMSCAN SPACE 1
HAVSECND LH    R14,LSIZE     ASSUMED CRT WIDTH                   89229
         SRDL  R0,32         SHIFT FOR DIVIDE
         DR    R0,R14        R1 HAS LOGICAL LINES TO OFFSET
         AIF   (&REP).REP2AD1                                    89265
         LR    R15,R1        SAVE LINE OFFSET
         MH    R15,OFFINC    GET BYTES FROM START                89244
         SRL   R15,2         NUMBER OF WORDS                     89244
         AGO   .COM2AD1                                          89265
.REP2AD1 LR    R6,R1         SAVE LINE OFFSET                    89265
         MH    R6,=Y(LINESIZE)                                   89265
         LA    R6,LINEADDR(R6)  POINT TO LINE                    89265
         USING LINEADDR,R6                                       89265
.COM2AD1 SRDL  R0,32         SET FOR NEXT DIVIDE
         CH    R1,OFFTEXT    IN TEXT AREA ?                      89265
         BNL   HAVFIFTH      YES; DO TEXT ENTRY                  89265
         SH    R1,DCLLEN     ALLOW FOR OFFSET
         CH    R1,=Y(4*(DS7XF2-DS7XF1-1))  SECOND SET ?          89244
         BNH   HAVLEFT       NO                                  89244
*WHY?    CLI   OFFINC+1,16   SMALL LINE ?                        89244
*WHY?    BE    HAVLEFT       YES                                 89244
         SH    R1,H2         ALLOW FOR PADDING BETWEEN GROUPS    89244
HAVLEFT  LA    R14,DS7XF2-DS7XF1-1   SIZE OF ONE ENTRY
         DR    R0,R14        GET NUMBER OF ENTRIES IN
         AIF   (&REP).REP2AD2                                    89265
         AR    R1,R15        WORDS FROM BUFFER START
         SLL   R1,2          BYTES FROM BUFFER START
         AIF   (&VSAM).VSAM2                                     90079
         LA    R1,BLOCKBUF(R1)  FIND TEXT BLOCK
         TM    ZAPFG,FKEY    KEY MODE ?
         BNZ   *+8           YES
         AH    R1,KL         ELSE ALLOW FOR KEY
         AGO   .NSAM2                                            90079
.VSAM2   A     R1,DRSLI-4    ADD RECORD START                    90079
.NSAM2   SLR   R15,R15                                           89229
         ICM   R15,3,OFFNEXT                                     89229
         AR    R1,R15        AND CURRENT OFFSET                  89229
         AGO   .COM2AD2                                          89265
.REP2AD2 SLL   R1,2          CONVERT FROM WORDS TO BYTES IN      89265
         ST    R1,FDWSCAL    SAVE OFFSET IN SCAN LENGTH          89265
         LA    R1,LINEOLD(R1)  PLACE WITHIN LINE BUFFER          89265
.COM2AD2 LA    R15,8         SET NUMBER OF BYTES NOT MERGED
         MVC   DB+3(4),0(R1)   COPY USER'S DATA
         UNPK  DYNWORK(9),DB+3(5)  UNPACK
         TR    DYNWORK(8),HEXTAB-C'0'  MAKE EBCDIC
         LA    R14,DYNWORK   POINT TO IT
HAVSECBT CLI   0(R2),X'11'   ANOTHER FIELD ?
         BE    HAVSECEX      YES; FINISH THIS ONE
         OI    0(R2),X'40'   MAKE INPUT UPPER CASE
         CLI   0(R2),C'A'    VALID HEX ?
         BL    BADHEX        NO
         CLI   0(R2),C'9'    DITTO ?
         BH    BADHEX        NO
         CLI   0(R2),C'F'
         BNH   HAVSECMV      YES
         CLI   0(R2),C'0'
         BL    BADHEX        NO
HAVSECMV MVC   0(1,R14),0(R2)  SAVE IT
         LA    R14,1(,R14)   SPACE HOLD BUFFER
         LA    R2,1(,R2)     SPACE INPUT
         SH    R3,H1         GET BYTES REMAINING IN INPUT
         BNP   HAVSECEX      NONE; GO TO POST-PROCESS
         BCT   R15,HAVSECBT  CHECK NEXT BYTE
HAVSECEX NC    DYNWORK(8),HEXPACK+8  CLOBBER ZONE BITS
         TR    DYNWORK(8),HEXPACK  MAKE UNPACKED UNZONED
         PACK  DB+3(5),DYNWORK(9)  PACK
         AIF   (&REP).REP2END                                    89265
         CLC   DB+3(4),0(R1)   DATA MODIFIED BY INPUT ?
         BE    HAVSECEZ      NO; SCAN NEXT FIELD
         OI    ZAPFG,FZAP    SHOW MODIFICATION
         OI    FDWICOD,FZAP  SAVE ZAP INDICATION LOCALLY         89265
         MVC   0(4,R1),DB+3  MOVE MODIFIED TEXT
HAVSECEZ LTR   R3,R3         ANY MORE INPUT ?
         BP    HAVENTER      LOOK FOR MORE
         TM    FDWICOD,FZAP  ANYTHING UPDATED ?                  89265
         BZ    MOVEAGIN      NO; RE-DISPLAY SCREEN
MOVESUCC MVC   REPLY(L'MSGSUCC),MSGSUCC  SHOW DATA REPLACED
         B     MOVEAGIN      REDISPLAY THE PAGE
         AGO   .COM2END                                          89265
.REP2END USING LINEADDR,R6                                       89265
         L     R1,FDWSCAL    RESTORE BYTE OFFSET WITHIN LINE     89265
         LA    R9,1                                              89265
         SLL   R9,31                                             89265
         SRL   R9,0(R1)      ADJUST TO WORD                      89265
         LA    R15,LINENEW   POINT TO OLD TEXT                   89265
         AR    R15,R1                                            89265
         LA    R0,4          DO FOR FOUR BYTES                   89265
         LA    R5,DB+3                                           89265
         ICM   R1,15,LINEBITS                                    89265
HAVSECBR SLR   R14,R14                                           89265
         BCTR  R14,0         MAKE ALL ONES                       89265
         XR    R14,R9        BUT FLIP BIT FOR THIS BYTE          89265
         NR    R1,R14        TURN CHANGE BIT OFF                 89265
         MVC   LINENEW-LINENEW(1,R15),0(R5)  REPLACE BY USER'S   89265
         CLC   0(1,R5),LINEOLD-LINENEW(R15)  BYTE TO BE CHANGED ?
         BE    HAVSECBM      NO                                  89265
         OR    R1,R9         SET CHANGE BIT ON                   89265
         OI    ZAPFG,FRED+FREP  SET REPLACE DATA                 89265
HAVSECBM LA    R15,1(,R15)                                       89265
         LA    R5,1(,R5)                                         89265
         SRL   R9,1                                              89265
         BCT   R0,HAVSECBR   TRY FOR ANOTHER                     89265
         STCM  R1,15,LINEBITS   UPDATE CHANGED BYTE BITS         89265
         DROP  R6                                                89265
HAVSECEZ LTR   R3,R3         ANY MORE INPUT ?                    89265
         BP    HAVENTER      LOOK FOR MORE                       89265
         B     HAVEDONE      REDISPLAY THE PAGE                  89265
.COM2END SPACE 1
BADHEX   MVC   REPLY,BLANKS  CLEAR COMMAND/MESSAGE FIELD
         MVC   REPLY(L'MSGINHEX),MSGINHEX  FLAG ERROR
BADCOMON LH    R0,FDWCUD     RETRIEVE SAVED FIELD ADDRESS        89265
*        AH    R0,=H'8'      UP BY MAX LENGTH
*        SR    R0,R15        LESS LENGTH SCANNED
         STH   R0,NEXTCURS   SET IN CURSOR REQUEST               89265
         B     MOVEAGIN      REDISPLAY SCREEN WITH ERROR MESSAGE
         SPACE 2                                                 89265
HAVFIFTH DS    0H            PROCESS TEXT INPUT FIELD            89265
         AIF   (&REP).REP5AD1                                    89265
         SLL   R15,2         CONVERT WORDS TO BYTES              89265
         AIF   (&VSAM).VSAM3                                     90079
         LA    R5,BLOCKBUF(R15)  OFFSET FROM START OF BUFFER     89265
         AGO   .NSAM3                                            90079
.VSAM3   LR    R5,R15        COPY OFFSET                         90079
         A     R5,DRSLI-4    ADD RECORD START                    90079
.NSAM3   ICM   R15,3,OFFNEXT                                     89265
         AR    R5,R15        ADD START OF SCREEN OFFSET          89265
         TM    ZAPFG,FKEY    KEY MODE ?                          89265
         BNZ   *+8           YES                                 89265
         AH    R5,KL         ELSE ALLOW FOR KEY                  89265
         LH    R14,OFFINC    GET MAXIMUM LINE SIZE               89267
         AGO   .COM5AD1                                          89265
.REP5AD1 USING LINEADDR,R6   DECLARE LINE MAPPING                89265
         LA    R5,LINENEW    POINT TO NEW TEXT                   89265
         LA    R9,1                                              89265
         SLL   R9,31         MAKE CHANGE BIT                     89265
         SLR   R1,R1         CLEAR NEW LINE FLAGS                89265
         SLR   R14,R14       CLEAR                               89265
         IC    R14,LINELEN   GET MAX LENGTH OF DATA              89265
.COM5AD1 SPACE 1                                                 89267
HAVFIFLP CLI   0(R2),X'11'   ANOTHER FIELD ?                     89265
         BE    HAV5PAST      YES; STOP NOW                       89265
         CLI   0(R5),&UNDEF  UNPRINTABLE ?                       89265
         BE    HAVFIFCL      YES; COMPARE                        89265
         TM    MODEFG,MODELOCK  UNPRINTABLES LOCKED ?            89265
         BZ    HAVFIFCL      NO; COMPARE                         82221
         MVC   DB+3(1),0(R5) COPY IT                             89265
         AIF   (&REP).REPTRTB                                    89265
         LA    R15,TRTAB                                         89265
         AGO   .COMTRTB                                          89265
.REPTRTB L     R15,=A(TRTAB)                                     89265
.COMTRTB TR    DB+3(1),0(R15) SEE IF PRINTABLE                   82221
         CLI   DB+3,&UNDEF   UNPRINTABLE ?                       89265
         BE    HAVFIFSK      YES; SKIP IT                        89265
HAVFIFCL CLI   0(R2),&UNDEF  UNPRINTABLE ?                       89265
         BE    HAVFIFSK      YES; SKIP                           89265
         CLC   0(1,R2),0(R5) CHANGED ?                           89265
         BE    HAVFIFSK      NO                                  89265
         TM    MODEFG,MODELOW  LOWER CASE ALLOWED ?              89265
         BNZ   HAVFIFRP      YES; GO TO REPLACE                  89265
         OI    0(R2),C' '    MAKE UPPER CASE                     89265
         CLC   0(1,R2),0(R5)  SAME NOW ?                         89265
         BE    HAVFIFSK      YES; SKIP                           89265
HAVFIFRP MVC   0(1,R5),0(R2) MAKE NEW BYTE                       89265
HAVFIFSK DS    0H                                                89265
         AIF   (NOT &REP).DIOLFLG                                89265
         CLC   LINEOLD-LINENEW(1,R5),0(R5) CHANGED ?             89265
         BE    HAVFIFUP      NO                                  89265
         OR    R1,R9         ADD NEW CHANGE FLAG                 89265
         OI    ZAPFG,FREP+FRED  INDICATE CHANGED                 89265
HAVFIFUP SRL   R9,1          MAKE NEW BIT FLAG                   89265
         AGO   .COMLFLG                                          89265
.DIOLFLG OI    ZAPFG,FZAP    SHOW MODIFICATION                   89265
         OI    FDWICOD,FZAP  SHOW MODIFICATION                   89265
.COMLFLG LA    R2,1(,R2)     BUMP INPUT                          89265
         LA    R5,1(,R5)     BUMP WORK AREA                      89265
         BCT   R3,HAV5BUMP   ADJUST RESIDUAL LENGTH              89265
HAV5PAST DS    0H                                                89265
         AIF   (NOT &REP).COM5LBT                                89265
         LTR   R14,R14       ANY UNCOMPARED BYTES ?              89265
         BNP   HAV5POST      NO                                  89265
HAV5PEST CLC   LINEOLD-LINENEW(1,R5),0(R5) CHANGED ?             89265
         BE    HAV5PUP       NO                                  89265
         OR    R1,R9         ADD NEW CHANGE FLAG                 89265
         OI    ZAPFG,FREP+FRED  INDICATE CHANGED                 89265
HAV5PUP  LA    R2,1(,R2)     BUMP INPUT                          89265
         LA    R5,1(,R5)     BUMP WORK AREA                      89265
         BCT   R14,HAV5PEST  ADJUST RESIDUAL LENGTH              89265
.COM5LBT B     HAV5POST      DONE WITH THIS FIELD                89265
HAV5BUMP BCT   R14,HAVFIFLP  DO NEXT BYTE                        83310
HAV5POST DS    0H                                                89265
         AIF   (NOT &REP).COM5POS                                89265
         STCM  R1,15,LINEBITS  SET LINE CHANGE BITS              89265
         DROP  R6                                                89265
.COM5POS B     HAVSECEZ      GO TO COMMON FIELD EXIT             89265
         SPACE 1                                                 89265
BADFIFTH MVC   REPLY,BLANKS                                      89265
         MVC   REPLY(L'MSGINTXT),MSGINTXT  INVALID TEXT          89265
         B     BADCOMON      GO TO COMMON                        89265
         SPACE 1                                                 89244
SETASC   OI    DRMRECFM,1    SET ASCII MODE BIT ON               89244
         B     MOVENEWC      REDISPLAY                           89244
SETEBCD  NI    DRMRECFM,255-1  RESET ASCII MODE                  89244
         B     MOVENEWC      REDISPLAY                           89244
         SPACE 1                                                 89265
ADDCOLOR TM    EXWUMASK+1,X'07'  FOREGROUND COLOR AVAILABLE ?    89265
         BNOR  R14           NO                                  89265
         LA    R10,3(,R10)   KEEP SA ORDER                       89265
         BR    R14                                               89265
         SPACE 1
         AIF   (&REP).REPXCTL                                    89265
SETOFF   NI    MODEFG,255-MODEHEX  RESET UPDATE MODE
         MVC   REPLY,BLANKS  FORCE DISPLAY RATHER THAN PARSE
         AIF   (&DIR).DIRXCTL                                    89229
         XXCTL SUF='Q'       GO TO MESSAGE AND DISPLAY MODULE    89229
         AGO   .DIOXCTL                                          89229
.DIRXCTL TM    MODEFG,MODEUPD  IS UPDATE STILL ON ?              87215
         BNZ   GOTOV         YES; GO THERE INSTEAD               87215
         XXCTL SUF='W'       GO TO MEMBER SELECTION SCREEN       87215
         SPACE 1                                                 87215
TESTUP   CLC   BLANKS,0(R5)  ALL BLANK ?                         87215
         BNE   GOTOZAX       NO; PROCESS INPUT                   87215
         MVC   REPLY,BLANKS  CLEAR IT                            87215
         OI    MODEFG,MODEUPD  SET UPDATE MODE                   87215
GOTOV    XXCTL SUF='V'       UPDATE SCREEN MODE                  87215
.DIOXCTL SPACE 1
EXITEXIT BALS  R14,BLANKER   CLEAR ORDERS
DOXIT    B     DRXIT         END IT ALL
         AGO   .COMXCTL                                          89265
.REPXCTL SPACE 1                                                 89265
EXITEXIT BALS  R14,BLANKER   DELETE ORDERS                       89265
         BALS  R14,ONUNIT    FORCE CLEAN-UP EXIT NOW             90303
         B     EXCYES        SOLICIT INPUT                       89265
.COMXCTL SPACE 1
         AIF   (&REP).REPNICO                                    89265
NICEOFF  SRA   R1,4          ADJUST TO WORD BOUND AND TEST       90002
         BNP   NICEOFF0      SET OFFSET TO ZERO                  90002
         SLA   R1,4          TRUNCATE TO LINE BOUNDARY           90002
         CLM   R1,3,HEADROOM GREATER THAN BLOCK LENGTH ?         90002
         BL    NICEOFFR      NO; USE IT
         MVC   OFFSET,HEADROOM  FINAGLE IT                       90002
         SH    R1,DC4LINE    BACK-SPACE 4 LINES
         B     NICEOFF       TRY IT AGAIN
NICEOFF0 SLR   R0,R0         ZERO OFFSET                         90002
NICEOFFR STH   R1,OFFNEXT    SET NEW OFFSET
         BR    R14           RETURN TO CALLER
.REPNICO EJECT ,
FDW      MAPFDW DSECT=NO     FULL-SCREEN PARAMETER AREA          89265
FDWXCLEN EQU   *-FDW         SIZE TO CLEAR                       89265
NEXTCURS DC    Y(0)          ADDRESS OF NEXT CURSOR              89265
DFLTCUR  DC    Y(0)          COMMAND INPUT FIELD ADDRESS         89265
         SPACE 1
.*  THE ORIGINAL SHIFT SCHEME, FOR A 3277 KEYBOARD, USED PFK 1 FOR
.*  A ONE LINE SHIFT, PFK 2 FOR A FOUR LINE SHIFT, AND PF3 FOR A PAGE.
.*  PFK 4-6 WERE SIMILAR FOR BACKSHIFT.  TO INTRODUCE MORE ISPF-LIKE
.*  BEHAVIOR: PFK 11 - SHIFT ONE LINE, PFK 2 - SHIFT 4 LINES, PFK 8
.*  SHIFT PAGE. DOWN SHIFT IS PFK 10 FOR ONE LINE, AND PFK 7 PAGE.
.*  PFK 3 IS NOW END, AND PFK 5 IS LOCATE/FIND
.*             PFK  1  2  3  4  5  6  7  8  9 10 11 12
PFMOVINX DC    AL1(10,04,00,00,00,00,12,06,00,08,02,00) 0-NO MOVE
         SPACE 1
*        CURSOR CONTROLLED BUFFER OFFSETS
PFKMOVE  DC    Y(16)         PFK11 - UP ONE LINE
         DC    Y(4*16)       PFK 2 - UP FOUR LINES
         DC    Y(16*16)      PFK 8 - UP QUITE A BIT
         DC    Y(0-16)       PFK10 - DOWN ONE LINE
         DC    Y(0-4*16)     PFK 1 - DOWN FOUR LINES
         DC    Y(0-16*16)    PFK 7 - DOWN QUITE A BIT
DC2LINE  DC    Y(2*80)       TWO DISPLAY LINES                   89265
DC4LINE  EQU   PFKMOVE+2     CONSTANT 48
DCLLEN   DC    Y(DS7XF1-DS7XLIN-1)  OFFSET TO FIRST WORD         89265
OFFINC   EQU   PFKMOVE,2,C'H'       16 OR 32 BYTES PER LINE      89244
OFFTEXT  DC    H'49'         OFFSET TO TEXT IS 50 OR 88          89244
AUXFG    DC    X'00'         EXTRA FLAGS                         89265
MODETXT  EQU   X'80'           UNLOCK TEXT; LOCK HEX SIDE        89265
         AIF   (&REP).REPNHED                                    90002
HEADROOM DC    H'16'         SIZE OF CURRENT DISPLAY DATA        90002
.REPNHED SPACE 1
DCCOMND  DC    C'Command'
MSGSUCC  DC    CL(39-&REP*20)'Replaced in storage; use ZAP to rewrite'
MSGINHEX DC    C'Invalid hex byte'
MSGINTXT DC    C'Invalid text change'
         AIF   (&REP).COMNKEY                                    89265
DCKEYM   DC    C'Key mode'
DCDATA   DC    C'Data'
.COMNKEY SPACE 1
*        3270 ORDER EXPANSIONS
SFPROTIN SCRN  SF,(PROT,INT)   INTENSIFIED, PROTECTED
SAPINK   SCRN  SA,COLOR,PINK                                     89265
SFPROSKP SCRN  SF,(SKIP)     PROTECTED, CURSOR SKIP
SACYAN   SCRN  SA,COLOR,CYAN                                     89265
SFPRISKP SCRN  SF,(SKIP,INT) PROTECTED, INTENSE, CURSOR SKIP
         SCRN  SA,COLOR,PINK                                     89265
SFINPT   SCRN  SF,BLANK      UNPROTECTED LINE 2                  89265
SAGREEN  SCRN  SA,COLOR,GREEN                                    89265
SFPROT   SCRN  SF,(PROT)     TRAILER FOR LINE 2
         SCRN  SA,COLOR,CYAN                                     89265
SAWHITE  SCRN  SA,COLOR,WHITE                                    89265
SAYELLOW SCRN  SA,COLOR,YELLOW                                   89265
         SPACE 1
         AIF   (&REP).COMFTAB                                    89265
FINDTAB  BTAB  'OFF',SETOFF,BASE=*  RESET EDIT MODE
         BTAB  ASCII,SETASC                                      89244
         BTAB  ASC,SETASC                                        89244
         BTAB  ANSI,SETASC                                       89244
         BTAB  EBC,SETEBCD                                       89244
         BTAB  TERM,SETEBCD                                      89244
         AIF   (NOT &DIR).COMTEST                                89229
         BTAB  'UPDATE ',TESTUP                                  87215
         BTAB  'UPD ',TESTUP                                     87215
         BTAB  'UP ',TESTUP                                      87215
.COMTEST BTAB  ',',LOOKUMS
         BTAB  *END
.COMFTAB SPACE 1
HEXPACK  DC    X'000A0B0C0D0E0F00'   HEX CONVERSION 00-06
         DC    8X'1F'        UNUSED FOR TR / NC MASK
         DC    X'00010203040506070809'  HEX CONVERSION 10-19
         SPACE 1
         AIF   (&DIR OR &REP).COMTRAN                            89265
TRTAB    TRTAB FILL=&UNDEF   TRANSLATE UNPRINTABLES              89229
.COMTRAN EJECT ,
*        SPECIAL BUFFER PREFIX FOR 3270 ORDERS
*
DSPSECT  DSECT ,
DS7BUFSF DS    XL2           SF/PROTECTED
         AIF   (&REP).REPDS7H                                    89265
DS7HEAD  DC    C'DATA MODE'  KEY/DATA MODE
         DC    C' '
DS7UPLOW DC    C'LOWER CASE'  SHOW CASE
DS7DSN   DS    CL59          NORMAL DSN/MEM/VOL/TTR HEADER
         AGO   .COMDS7H                                          89265
.REPDS7H ANOP  ,                                                 89265
DS7STATS DS    CL20          HEX/TEXT UPDATE MODE/OPTIONS        89265
         DS    CL(17-2*&MVSXA) SPACER                            91213
DS7JBNM  DS    CL8           NAME OF JOB (MVS)                   89265
         DS    C                                                 89265
DS7JBID  DS    CL8           START ID/STEPNAME (MVS)             89265
         DS    C                                                 89265
DS7CASID DS    C'ASID='      (MVS)                               89265
DS7ASID  DS    CL5           ASID (MVS)                          89265
         DS    CL2             SPACER                            89265
DS7CBASE DS    C'BASE'                                           89265
         DS    C                                                 89265
DS7BASE  DS    CL(6+2*&MVSXA)  BASE ADDRESS                      91213
.COMDS7H SPACE 1             SECOND LINE                         89265
DS7AD2   DS    XL3           SBA FOR SECOND LINE                 89229
         AIF   (NOT &DIR).COMNDSN                                89229
DSPDSN   EQU   DS7DSN+1,L'DS7DSN-8,C'C'                          89229
DSPTTR   EQU   DSPDSN+L'DSPDSN+1,6,C'C'                          89229
.COMNDSN ANOP  ,                                                 89229
DS7OFFP  DS    C'+'          + FOR OFFSET
DS7OFFS  DS    CL(4+2*&REP+2*&A4)  OFFSET VALUE                  91213
DS7MSGS1 DS    XL2           SF/PROTECTED,INTENSIFIED
DS7MSG   DS    CL(39-2*&A4)  MESSAGE AREA                        91213
         AIF   (&REP).COMNCH                                     89268
         ORG   DS7MSG                                            89268
DS7MDCCH DS    C'CCHH='                                          89268
DS7MCCHH DS    CL8           CCHH                                89268
         DS    C                                                 89268
DS7MDDL  DS    C'DL='                                            89268
DS7MVDL  DS    CL5                                               89268
         DS    C'('                                              89268
DS7MXDL  DS    CL4           HEX LEN                             89268
         DS    C')'                                              89268
         DS    C                                                 89268
DS7MDKL  DS    C'KL='                                            89268
DS7MVKL  DS    CL3                                               89268
         DS    C'('                                              89268
DS7MXKL  DS    CL2                                               89268
         DS    C')'                                              89268
         ORG   ,                                                 89268
.COMNCH  ANOP  ,                                                 89268
DS7MSGS2 DS    XL2           SF/PROTECTED
DS7CMD   DS    C'COMMAND'    INPUT PREFIX
DS7INPUT DS    0XL21         INPUT AREA
DS7IDSF  DS    XL2,XL3,XL2   SF/UNP;SBA(2,80)/SF/UNP  LINES 2,3-24
DS7TEXT  DS    22CL80        UNPROTECTED TEXT BUFFER
         SPACE 1
         ORG   DS7TEXT       MAPPING OF ONE DISPLAY LINE
DS7XLIN  DS    0C            START OF DISPLAY LINE               89265
         AIF   (NOT &REP).COMDS7L                                89265
DS7ADD8  DS    0CL8          ADDRESS FOR OUT OF STORAGE MSG      89265
DS7ADD   DS    CL(6+2*&A4)   DISPLAY ADDRESS                     91213
.COMDS7L ANOP  ,                                                 89265
DS7XOFF  DS    C             SPACER                              89265
DS7SIGN  DS    C             +/- OFFSET                          89265
DS7OFF   DS    CL(4+2*&REP+2*&A4)  OFFSET                        91213
         DS    CL(2-&A4)       SPACER                            91213
DS7XF1   DS    XL2           SF,UNP OR IF FNO - SF,PRO,INT
DS7XD1   DS    CL8           TEXT
DS7XF2   DS    XL2           SF,UNP
DS7XD2   DS    CL8           TEXT
DS7XF3   DS    XL2
DS7XD3   DS    CL8
DS7XF4   DS    XL2
DS7XD4   DS    CL8
DS7XF5   DS    XL5           SF,SKIP,SBA,(LINE,50)
DS7AS1   DC    C'*'            FRAME
DS7EBC   DC    CL16' '       EBCDIC TEXT
DS7AS2   DC    C'*'            FRAME
DS7XF6   DS    XL3           SBA,(LINE+1,1)
DS7LLEN  EQU   *-DS7XLIN     LENGTH <= 80 (USED FOR EYEBALL CHK ONLY)
         ORG   DS7HEAD-1     MAKE NEXT EXHM---- EXPANSION CORRECT
         POP   PRINT                                             89229
         MEND  ,                                                 89229
