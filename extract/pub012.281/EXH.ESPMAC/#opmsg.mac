         MACRO ,
&NM      #OPMSG &ADDR,&LEN,&TYPE=MSG,  WRITE A MESSAGE (WTO)           *
               &LIST=,&PARM=CALLPARM   MESSAGE WITH TEXT INSERTION
         GBLC  &MACPLAB
         LCLA  &K,&I,&J,&N,&M,&O
         LCLB  &TF
         LCLC  &RA,&RL,&L    DEFINE ADDRESS AND LENGTH REGISTERS
         LCLC  &TEXT         USER SPECIFIED ADDRESS             GP12319
&RA      SETC  'R1'          SET NORMAL USE
&RL      SETC  'R0'
&L       SETC  'L'''
&TEXT    SETC  '&ADDR'                                          GP12319
&MACPLAB SETC  '&NM'         SET NAME FIELD
&N       SETA  N'&LIST
&TF      SETB  ('&TYPE' EQ 'MSG')                               GP12319
.*--------------------------------------------------------------------*
.*                                                                    *
.*  #OPMSG GENERATES A CALL TO THE WTO SUBROUTINE SUBWTO              *
.*                                                                    *
.*  TEXT  SPECIFIES TEXT DATA NOT EXCEEDING 100 BYTES IN LENGTH,      *
.*    A) AS A QUOTED STRING                                           *
.*    B) ADDRESS OF A BCON VARIABLE AL1(LEN-1),C(LEN)'TEXT'           *
.*    C) ADDRESS OF A HCON VARIALBE AL2(LEN),C(LEN)'TEXT'             *
.*    D) ADDRESS OF A VCON VARIALBE AL2(LEN+4,0),C(LEN)'TEXT'         *
.*    E) ADDRESS OF TEXT STRING TERMINATED BY A NULL (X'00')          *
.*    F) ADDRESS OF A TEXT STRING; WITH AN EXPLICIT LENGTH            *
.*         SPECIFIED AS THE NEXT PARAMETER                            *
.*                                                                    *
.*  TYPE=INIT OR TYPE=NAME DEFINES THE TEXT (UP TO 32 BYTES)          *
.*    AS A PREFIX TO SUBSEQUENT MESSAGES                              *
.*                                                                    *
.*  TYPE=END (OR A TEXT SPECIFICATION OF *END) REQUESTS SUBWTO        *
.*    TO CLEAN UP AND RELEASE STORAGE                                 *
.*                                                                    *
.*  TYPE=MSG (DEFAULT) SPECIFIES A MESSAGE TO BE WRITTEN TO THE       *
.*    OPERATOR                                                        *
.*                                                                    *
.*  TYPE=MSG WITH LIST=(A,L,A,L...) SPECIFIES A MESSAGE WITH TEXT     *
.*    INSERTION (THE FIRST OPERAND IS PARSED FOR × SEPARATORS THAT    *
.*    ARE REPLACED BY THE CORRESPONDING A,L VARIABLES.                *
.*    A) THE FIRST OPERAND IS IN THE LIST, UNLESS EXPLICIT TEXT       *
.*       IS SPECIFIED AS THE FIRST POSITIONAL PARAMETER               *
.*    B) "L" MUST BE A SELF-DEFINING OR ABSOLUTE TERM < 256  OR       *
.*       "L" MAY BE THE ADDRESS OF A #FMT MF=L MACRO DEFINING THE     *
.*       INPUT DATA TYPE, LEN, AND CONVERSION/FORMATTING OPTIONS.     *
.*                                                                    *
.*  PARM=CALLPARM DEFINES A REMOTE PARAMETER LIST TO BE USED (NEEDS   *
.*    TWO WORDS PER TEXT AND INSERTION VARIABLE                       *
.*                                                                    *
.*  TYPE=TEXT WITH LIST= BYPASSES THE WTO, BUT RETURNS THE MESSAGE    *
.*    ADDRESS IN R1: H'LEN',CL(LEN)'TEXT'                             *
.*                                                                    *
.*--------------------------------------------------------------------*
         AIF   ('&TEXT' EQ '*END').CLOSE
         AIF   ('&TYPE' EQ 'CLOSE' OR '&TYPE' EQ 'END').CLOSE
         AIF   ('&TYPE' NE 'INIT' AND '&TYPE' NE 'NAME').DOMSG
&RA      SETC  'R0'          EXCHANGE ASSIGNMENTS
&RL      SETC  'R1'
         AIF   (T'&ADDR NE 'O').DOMSG                           GP12319
         MACPARM &RL,2+&TF   SIGNAL NO TEXT PARAMETER           GP12319
         MACPARM &RA,257     MUST BE NON-ZERO; > 255            GP12319
         AGO   .COMBAS                                          GP12319
.DOMSG   AIF   (&N EQ 0).GOMSG
.*--------------------------------------------------------------------*
.*  PROCESS A MESSAGE LIST (TEXT/LEN OPTIONAL IF N'&LIST>2)           *
.*--------------------------------------------------------------------*
&M       SETA    1           OFFSET IN LIST=
         MACPARM R1,&PARM    LOAD PARAMETER LIST
         MACPARM R1,=X'80000000',OP=O  MAKE LIST FLAG
         MACPARM R0,&TF      SET FLAG (0-WTO; 1-NO WTO,RETURN MSG ADD)
.*--------------------------------------------------------------------*
.*  CASE 1A - EXPLICIT TEXT/LEN SUPPLIED - STASH FIRST                *
.*--------------------------------------------------------------------*
         AIF   ('&TEXT' EQ '').LSTADD
         AIF   ('&TEXT'(1,1) EQ '''').LSTRNG
         MACPARM R15,&TEXT,OP=LA LOAD ADDRESS OF NAME OR REGISTER
         MACPARM R15,0(,R1),OP=ST STORE ADDRESS IN CALL LIST
         MACPARM R15,&LEN,NULL=0  SET EXPLICIT LENGTH OR 0
         MACPARM R15,4(,R1),OP=ST STORE LENGTH IN CALL LIST
&O       SETA   &O+8         NEXT AVAILABLE LIST OFFSET
         AGO   .LSTADD
.*--------------------------------------------------------------------*
.*  CASE 1B - EXPLICIT QUOTED TEXT SUPPLIED                           *
.*--------------------------------------------------------------------*
.LSTRNG  ANOP  ,
&K       SETA  K'&TEXT-2     LENGTH OF QUOTED STRING (EXC AMPSND/QOT)
&I       SETA  2             FIRST BYTE TO EXAMINE
&J       SETA  &K            LAST BYTE (PAIR) TO EXAMINE
.LSTLOOP AIF   (&I GT &J).LSTEXP
         AIF   ('&TEXT'(&I,2) EQ '''''' OR '&TEXT'(&I,2) EQ '&&').LSTPR
&I       SETA  &I+1          TRY AGAIN
         AGO   .LSTLOOP
.LSTPR   ANOP  ,
&I       SETA  &I+2          SKIP THE PAIR
&K       SETA  &K-1          AND CORRECT THE LENGTH
         AGO   .LSTLOOP
.LSTEXP  LA    R15,=C&TEXT   LOAD THE STRING ADDRESS
         MACPARM R15,0(,R1),OP=ST STORE ADDRESS IN CALL LIST
         MACPARM R15,&K,OP=LA LOAD THE LENGTH OF THE STRING
         MACPARM R15,4(,R1),OP=ST STORE LENGTH IN CALL LIST
&O       SETA   &O+8         NEXT AVAILABLE LIST OFFSET
.*--------------------------------------------------------------------*
.*  CASE 2  - LOOP THROUGH SUPPLIED ADDRESS/LEN PAIRS AND STASH       *
.*--------------------------------------------------------------------*
.LSTADD  AIF   (&M GT &N).LSTEND  DONE - SET VL BIT IN LIST
&RA      SETC  '&LIST(&M)'
&RL      SETC  '&LIST(&M+1)'
         AIF   ('&RA' NE '').HAVERA
&RA      SETC  '0'           NULL ADDRESS - NO SUBSTITUTION
.HAVERA  AIF   ('&RL' NE '').HAVERL
&RL      SETC  '0'           NULL ADDRESS - NO SUBSTITUTION
.*--------------------------------------------------------------------*
.*  CASE 2A - EXPLICIT TEXT/LEN SUPPLIED                              *
.*--------------------------------------------------------------------*
.HAVERL  AIF   ('&RA'(1,1) EQ '''').ENTRNG
         MACPARM R15,&RA,OP=LA LOAD ADDRESS OF NAME OR REGISTER
         MACPARM R15,&O.(,R1),OP=ST STORE ADDRESS IN CALL LIST
         MACPARM R15,&RL,NULL=0   SET EXPLICIT LENGTH OR 0
         MACPARM R15,&O+4(,R1),OP=ST STORE LENGTH IN CALL LIST
&O       SETA   &O+8         NEXT AVAILABLE LIST OFFSET
&M       SETA   &M+2
         AGO   .LSTADD
.*--------------------------------------------------------------------*
.*  CASE 2B - EXPLICIT QUOTED TEXT SUPPLIED                           *
.*--------------------------------------------------------------------*
.ENTRNG  ANOP  ,
&K       SETA  K'&RA-2       LENGTH OF QUOTED STRING (EXC AMPSND/QOT)
&I       SETA  2             FIRST BYTE TO EXAMINE
&J       SETA  &K            LAST BYTE (PAIR) TO EXAMINE
.ENTLOOP AIF   (&I GT &J).ENTEXP
         AIF   ('&RA'(&I,2) EQ '''''' OR '&RA'(&I,2) EQ '&&').ENDPR
&I       SETA  &I+1          TRY AGAIN
         AGO   .ENTLOOP
.ENDPR   ANOP  ,
&I       SETA  &I+2          SKIP THE PAIR
&K       SETA  &K-1          AND CORRECT THE LENGTH
         AGO   .ENTLOOP
.ENTEXP  LA    R15,=C&RA     LOAD THE STRING ADDRESS
         MACPARM R15,&O.(,R1),OP=ST STORE ADDRESS IN CALL LIST
         MACPARM R15,&K,OP=LA LOAD THE LENGTH OF THE STRING
         MACPARM R15,&O+4(,R1),OP=ST STORE LENGTH IN CALL LIST
&O       SETA   &O+8         NEXT AVAILABLE LIST OFFSET
&M       SETA   &M+2
         AGO   .LSTADD
.LSTEND  ANOP  ,
&O       SETA  &O-4          POSITION TO LAST WORD IN LIST
         MACPARM &O.(R1),X'80',OP=OI
         AGO   .COMBAS  DONE - INVOKE SUBWTO
.*--------------------------------------------------------------------*
.*  PROCESS A NORMAL MESSAGE                                          *
.*--------------------------------------------------------------------*
.GOMSG   AIF   ('&TEXT'(1,1) EQ '''').MSGSTR
         MACPARM &RA,&TEXT,OP=LA LOAD ADDRESS OF NAME OR REGISTER
         AIF   ('&LEN' EQ '').NOLEN
         MACPARM &RL,&LEN    LOAD TEXT LENGTH
         AGO   .COMBAS
.NOLEN   MACPARM &RL,&RL,OP=SLR,OPR=SLR,MODE=EVEN  SIGNAL INIT CALL
         AGO   .COMBAS
.MSGSTR  ANOP  ,
&K       SETA  K'&TEXT-2     LENGTH OF QUOTED STRING (EXC AMPSND/QOT)
&I       SETA  2             FIRST BYTE TO EXAMINE
&J       SETA  &K            LAST BYTE (PAIR) TO EXAMINE
.MSGLOOP AIF   (&I GT &J).MSGEXP
         AIF   ('&TEXT'(&I,2) EQ '''''' OR '&TEXT'(&I,2) EQ '&&').MSGPR
&I       SETA  &I+1          TRY AGAIN
         AGO   .MSGLOOP
.MSGPR   ANOP  ,
&I       SETA  &I+2          SKIP THE PAIR
&K       SETA  &K-1          AND CORRECT THE LENGTH
         AGO   .MSGLOOP
.*--------------------------------------------------------------------*
.*  SET R0=R1=0 TO SIGNAL TERMINATION                                 *
.*--------------------------------------------------------------------*
.CLOSE   MACPARM R0,0        CLEAR R0
         MACPARM R1,0        AND R1
         AGO   .COMBAS       TO SIGNAL END
.*--------------------------------------------------------------------*
.*  LOAD R0 AND R1 APPROPRIATELY; CALL SUBWTO FOR SERVICE             *
.*--------------------------------------------------------------------*
.MSGEXP  MACPARM &RL,&K,OP=LA LOAD THE LENGTH OF THE STRING
         LA    &RA,=C&TEXT   LOAD THE STRING ADDRESS
.COMBAS  MACPARM R15,=V(SUBWTO),OP=L
         BASR  R14,R15       INVOKE IT
         MEND  ,
