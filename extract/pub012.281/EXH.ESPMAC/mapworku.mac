         MACRO ,                                        REVISED GP13011
         MAPWORK &SECT=D
         GBLB  &ZZLABYN      SET EXPANSION FLAG FOR MACAD/MACDC GP09082
         COPY  OPTIONS
         AIF   ('&SECT' EQ 'Z').CODEXP                          GP09082
         AIF   ('&SECT' NE 'D').NOD
&ZZLABYN SETB  0             EXPAND MAPPING
EXHBWORK DSECT ,
         AGO   .NODD
.NOD     AIF   ('&SECT' NE 'C').NAM
EXHBWORK DS    0D            START OF WORK AREA
.CODEXP  ANOP  ,                                                GP09115
&ZZLABYN SETB  1             EXPAND CODE
         AGO   .NODD
.NAM     ANOP  ,
&SECT    DS    0D            START OF EXHIBIT WORK AREA
.NODD    USING EXHBWORK,R11  BASE FOR THIS WORK AREA IN SUBPOOL 252
         USING EXHBWENT,R10  BASE FOR DISPLAY BLDL MAPPING
         USING EXHBSQSP,R13  BASE FOR SUBPOOL 253 MAPPING
         NEED  SQSP
         SPACE
*        STAE EXIT, CLEANS UP UCB PSEUDO GRAPHICS
*
STAEEXIT LR    R11,R15       LOAD BASE REGISTER
         L     R13,SQSP      RELOAD SP 253 BASE REGISTER
         L     R1,SQIQPARM    GET UCB ADDRESS
         AIF   ('&CRT' EQ '3270').NO60
UZBGCB   EQU   27            GCB DISPLACEMENT - AVOID DEB/UCB EXPANSION
UZBGCBLN EQU   5              LENGTH OF GCB + TE
         AGO   .NOUZB
.NO60    ANOP
UZBGCB   EQU   26            UCB CLEAR DISPLACEMENT
UZBGCBLN EQU   14            LENGTH TO CLEAR
.NOUZB   ANOP
UZBNAME  EQU   13            UCB DISP. TO NAME - AVOID MACRO
         XC    UZBGCB(UZBGCBLN,R1),UZBGCB(R1)    CLEAR PSEUDO GAM INFO
         AIF   ('&SYSTEM' NE 'MVS').NOMVSTA                      82199
         LR    R9,R14        SAVE RETURN ADDRESS                 82199
         BAL   R14,EXWCRSFR  FREE CSA SPACE                      82199
         LR    R14,R9        RESTORE RETURN                      82199
.NOMVSTA XR    R15,R15       NO STAE RETRY                       82199
         BR    R14           RELINQUISH CONTROL
         SPACE 2
*        POSTERS
*
         USING STIMEXIT,R15
STIMEXIT LA    R1,TIMECB     STIMER ECB
         BAL   R15,COMPOST   GO TO POST ROUTINE, SET BASE
         USING *,R15
ATTNPOST LA    R1,ATTNECB    ATTENTION ECB
COMPOST  SR    R0,R0         POST THE ECB, CODE = 0
         SVC   2             POST - MACRO WASTES 4 BYTES
         BR    R14           RETURN FROM EXIT ROUTINE
         DROP  R15
         SPACE 2
WRKSYS   DC    X'0'          CVTDCB OPTIONS
WRKUCMID DC    X'0'          UCMID FROM STARTUP
CANECBD  DC    F'0'          DUMMY CAN ECB FOR VS/INIT AWAITS CANCEL
EXRESAD  DC    A(0)           LPA RESIDENT GROUP MODULE          79156
DB       DC    D'0'          CONVERT WORK AREA
DB2      DC    D'0'          CONVERT WORK AREA                  GP04234
DB3      DC    D'0'          CONVERT WORK AREA                  GP04234
MAXMODSZ DC    A((&DESIGN-4)*1024-&FETCH)  MAXIMUM XCTL MODULE SIZE
NEWMODSZ DC    A(0)          NEXT MODULE SIZE                   GP04234
EXWSTGLN DC    0F'0'  1/3    LENGTH OF GETMAINED STORAGE        GP04234
EXWSTGSP DC    X'FC000000'   GETMAIN SUBPOOL 0 (252 IF INPUTR)  GP04234
EXWSTGAD DC    A(0)   3/3    ADDR. OF GOTTEN STORAGE OR 0       GP04234
COMMADDR DC    A(0)          ADDR OF EXHBCOMM IF &INPUTR
ATTNECB  DC    A(0)   1/9    ATTENTION ECB
TIMECB   DC    A(0)   2/9    STIMER EXIT ECB
WAITECBS DS    0F     3/9    ECB LIST FOR DELAY WAIT
MODECBA  DC    A(0)   4/9    ADDR. OF COMMUNICATIONS ECB
ECBLIST  DC    A(ATTNECB)    ADDR. OF ATTENTION ECB
CANECBA  DC    X'80',AL3(0)  ADDR OF CANCEL ECB
TIMECBA  DC    X'80',AL3(TIMECB) STIMER EXIT ECB ADDR.
CRTECB   DC    A(0)   8/ 9   ADDR. OF I/O ECB
CANECBB  DC    X'80',AL3(0)  ADDR OF CANCEL ECB FOR I/O CONTROL UNIT X
EXWMSK24 DC    X'00FFFFFF'   AM24 MASK
DELAY    DC    A(&SEC*100)    PRIMARY SWEEP TIME
USERXSAV DC    A(0)          WORD AVAILABLE FOR USER EXIT ROUTINE
SQSP     DC    A(0)          ADDR OF SUBPOOL 253 AREA
BCCAD    DC    A(0)          ADDR OF FIRST I/O BYTE IN STNDRD BUFFER
BUFAD    DC    A(0)          ADDR OF FIRST BYTE IN DISPLAY BUFFER
MSGAD    DC    A(0)    ADDR OF CL80 MESSAGE AREA CONTIGUOUS TO BUFFER
BUFSIZ   DC    H'0'          NUMBER OF BYTES IN BUFFER
LNO      DC    H'0'          LINES ON CRT (12, 24, 32, 43)       78046
LN24     EQU   X'10'         TM BIT TO DISTINGUISH BETWEEN 12 AND 24
LN32     EQU   X'20'         TM BIT TO DISTINGUISH 24, 32 AND 43 78046
LSIZE    DC    H'0'          NO. OF BYTES PER LINE ( 40 OR 80 )
LS80     EQU   X'40'         TM BIT TO DISTINGUISH BETWEEN 40 AND 80
BUFPFX   DC    H'1'          LENGTH OF CONTROL CHAR. PREFIX I/O
BUFSUF   DC    H'0'          LENGTH OF CONTROL SUFFIX
ZEROES   DS    0F     1/3    FULLWORD OF ZEROES
ZERO     DC    H'0'   2/3    HALFWORD OF ZERO
H0       DC    H'0'   3/3    HALFWORD OF ZERO
F60      DS    0F     1/3
         DC    H'0'   2/3
H60      DC    H'60'  3/3    DECIMAL 60
H1       DC    H'1'
H2       DC    H'2'
H3       DC    H'3'
H4       DC    H'4'
H12      DC    H'12'
H80      DC    H'80'
H100     DC    H'100'
H255     DC    H'255'
SSMON    EQU   *-1           OPERAND FOR SSM ENABLE INTERRUPTS
SSMOFF   EQU   *-2                 OPERAND FOR SSM DISABLE
H256     DC    H'256'
INTVL    DC    AL2(&SEC2)    SECONDARY SWEEP REQUEST
INTVL2   DC    AL2(&SEC3)    TERTIARY SWEEP REQUEST
INTVL3   DC    AL2(&SEC4)    FOURTH LEVEL SWEEP REQUEST
CYC2     DC    H'0'          PRIMARY CYCLE COUNTER
CYC3     DC    H'0'          SECOND LEVEL CYCLE COUNTER
CYC4     DC    H'0'          THIRD LEVEL CYCLE COUNTER
MODOPT   DC    X'03'         FLAGS FOR 'MODS' AND 'TALK' INVOKATION
MODINIT  EQU   X'01'         MODS CALLED FOR START COMMAND OVERRIDE PRO
MODEXEC  EQU   X'02'         MODS CALLED FOR START EXEC CARD PARM PROCE
MODEND   EQU   X'04'         MODS CALLED FOR CANCEL REQUEST
MODMOD   EQU   X'08'         MODS CALLED FOR MODIFY OR STOP PROCESSING
MODMODCR EQU   X'10'         MODS CALLED FOR MODIFY FROM CRT
MODCREND EQU   X'20'         MODS CALLED FROM 'TALK' TO EXIT TO INVOKE
MODUSER  EQU   X'40'         ZZZZ USER EXIT RECURSION BIT
MODTALK  EQU   X'80'         'TALK' CALLED FOR RESIDENT OPTION INITIALI
MODIOERC EQU   X'FE'         I/O ERROR IN CONVERSATIONAL MODE
MODIOERR EQU   X'FF'         MODS CALLED TO DIAGNOSE I/O ERROR & EXIT
OPTS     DC    X'00'         OPTIONS BYTE, SET IN EXHAINIT
OPNID    EQU   X'01'         ID LINE NOT ALLOWED IF OFF
OPNID2   EQU   X'02'         ID LINE IF BIT ON
INPOFF   EQU   X'04'         &INPUT OPTION CANCELLED DYNAMICALLY
USEREXIT EQU   X'08'         OFF IF USER EXIT CANCELLED
OPTNCRT  EQU   X'10'         OUTPUT TO A NON-CRT TERMINAL
OPTSO    EQU   X'20'         THIS IS A TSO TASK                   *TSO*
ENQPRIME EQU   X'40'         PRIMARY EXHIBIT TASK
DEBUG    EQU   X'80'         RUNNING IN PROBLEM PROGRAM MODE FOR DEBUG
LEVEL    DC    X'EF'         DISPLAY MODULE LEVEL SELECTOR & CYCLE TYPE
USERLVL  DC    AL1(&USERLVL)    LEVEL TO INVOKE USER EXIT AT
USERLVL2 DC    AL1(&USERLVL)    ORIGINAL USER LEVEL
RINGMSK  DC    X'0'          RING REQUEST TURNOFF BITS
RINGLVL  DC    AL1(&RINGLVL)     LEVEL FOR RING OPTION INVOKATION
RINGER   DC    X'0'          OPERATOR NOTIFICATION OPTION FLAGS
RINGREQ  EQU   X'80'         OPERATOR REQUESTED RING OPTION
RINGTIM  EQU   X'40'         SET ON TERTIARY CYCLE TO TRIGGER RING
RINGDQ   EQU   X'08'         REQUESTED BY DQ
RINGDR   EQU   X'04'         REQ. BY DR
RINGIR   EQU   X'02'         REQ. BY IR
RINGMR   EQU   X'01'         REQ. BY MR
EXWEXP   DC    C' '          PREF. SIZE INDEX - EXPLICIT PARTS  GP15197
EXWIMP   DC    C'D'          ALT.PREF: Small, Large, Card, Dflt GP15197
         SPACE 2
BLDL     DC    0A(0),AL2(1,64)     BLDL CONTROL BYTES
INVOKE   DC    CL64' '       WORK ENTRY
INVOKED  DC    8CL64' '      DISPLAY ENTRIES (DA,DQ,DR,IR,MR,OF,ON,PA)
INVOKEZ  DC    CL64'EXHDZZZZ'     I/O ENTRY
         SPACE 1
EXWJ2AID DC    F'0'          JES2 ASID                           82199
EXWJ2ASC DC    F'0'          JES2 ASCB                           82199
EXWJ2NAM DC    CL8' JES    ' JES2 START NAME+CL4                 83360
EXWCRMLN DC    F'0'          LENGTH OF CSA GOTTEN                82199
EXWCRMAD DC    F'0'          ADDRESS OF GOTTEN CSA               82199
EXWCRMCD DC    F'0'          ADDRESS OF USER CODE IN CSA         82199
EXWCRMUW DC    F'0'            RESERVED FOR CALLER               82200
EXWCRMID DC    F'0'          DESIRED ASID FOR SCHEDULE           82200
EXWMYSID DC    F'0'          ASID OF THIS TASK                   82200
EXWDUMID DC    F'0'          DUMP ASID                           82199
EXWDUMNM DC    CL8' '        DUMP NAME                           82199
EXWDUMBS DC    F'0'          DUMP BASE ADDRESS                   82199
EXWDUMAD DC    F'0'          DUMP DISPLAY START                  82199
EXWSUBSV EQU   *+00,14*4,C'X'   SUB SAVE R14-R11                GP15098
EXWPARML EQU   *+14*4,10*4,C'X' SUBROUTINE PARAMETER LIST       GP15098
EXWRACWK EQU   *+24*4,16*4,C'X' RE-USE FOR RACF/RAKF WORK AREA  GP15098
EXWDUMWK DC    40F'0'          ADDITIONAL DUMP WORK SPACE        82199
         AIF   ('&SECT' EQ 'C').DOMVS                            82199
         AIF   ('&SECT' NE 'D' AND '&SECT' NE 'Z').DOMVS        GP09115
         SPACE 1                                                 82199
EXWCRSGT MACBL SCHEDGET      GET CSA                            GP09115
EXWCRSIN MACBL SCHEDINT      INIT CSA                           GP09115
EXWCRSCH MACBL SCHEDULE      SCHEDULE                           GP09115
EXWCRSFR MACBL SCHEDELT      FREE CSA SPACE                     GP09115
EXWGETID MACBL GETASID       GET NAME(S) FOR ASID               GP09115
EXWGETAD MACBL GETIDAS       GET ASID FOR NAME(S)               GP09115
EXWGETAS MACBL GETASCB       GET ASCB FOR ID                    GP09115
EXWMVS   MACBL EXTFUNCS      INDEXED MVS FUNCTION CALL          GP09115
EXWFIXIT MACBL PAGEFIXR      PAGE-FIX ENTRY                     GP09115
EXWLOCEX DC    A(0)          LOCATE EXECUTING JOB                83360
EXWAJOBN DC    CL8' '        JOB NUMBER (JOB NNNN/STC NNNN..)    83360
EXWAJOB  DC    CL8' '        JOB NAME                            83360
EXWASTEP DC    CL8' '        STEP NAME                           83360
EXWAPROC DC    CL8' '        PROC NAME                           83360
EXWAPGM  DC    CL8' '        CURRENT PROGRAM                     83360
EXWASTP# DC    H'0'          STEP NUMBER                         83360
EXWAASID DC    H'0'          REQUESTED ASID                      83360
EXWALTLN DC    2F'0'         ALTERNATE (BACKUP) CSA GETMAIN      83360
EXWUMASK DC    X'3C00003C'   CRT CAPABILITY MASKS (SF, COLOR, HI-LITE)
EXWUDFLT DC    X'30000030'   DEFAULT OPTIONS (PROT/SKIP)         86236
EXWAFORM DC    A(0)          ADDRESS OF (LOADED) CONVERSION ROUTINE
EXWASCRN DC    A(0)          ADDRESS OF (LOADED) FULL-SCREEN CODE
EXWUID   DC    XL8'0'        USER'S TSO OR WYLBUR USER-ID        87166
EXWTID   DC    XL8'0'        USER'S TERMINAL ID                 GP13250
EXWACCT  DC    XL8'0',XL6'0'  USER'S ACCOUNT (+SPARE FOR EXPANSION)
EXWHINDL DC    X'00'         SIGNIFICANT LENGTH OF USER-ID       87166
EXWHINDX DC    CL9' '        USER-ID PLUS PERIOD (FOR INDEX CLC) 87166
EXWQYREP MACAD WSFRESP       ADDRESS OF WSF QUERY REPLY         GP09115
EXWCOLMP MACAD COLORMAP      CURRENT COLOR MAPPINGS             GP09115
EXWCOLOR MACAD COLORSET      DEFAULT COLOR MAPPINGS             GP09115
EXWPSIZE DC    X'50'         PRIMARY - COLUMNS                   88243
EXWPNO   DC    X'18'         PRIMARY - LINES                     88243
EXWSSIZE DC    X'50'         SECONDARY - COLUMNS                 88243
EXWSNO   DC    X'2B'         SECONDARY - LINES                   88243
EXWSZFLG DC    X'00'         SIZE FLAG                           88243
EXWSFALT EQU   X'80'           USE ALTERNATE SIZE                88243
EXWSFTWO EQU   X'40'           TWO SIZES AVAILABLE               88243
EXWXPFLG DC    X'00'         EXPLICIT PARTITION FLAG             88243
EXWXPAV  EQU   X'80'           DEVICE SUPPORTS PARTITIONS        88243
EXWXPUS  EQU   X'40'           USE EXPLICIT PARTITION            88243
EXWXPRQ  EQU   X'20'           RE-ISSUE SET PARTITION            88243
EXWXPWSF EQU   X'02'           WSF ISSUED FOR THIS DEVICE        88248
EXWXPWSQ EQU   X'01'           IF ON, NO QUERY RESPONSE GOTTEN   88248
EXWXPNO  DC    X'00'         MAXIMUM PARTITION NUMBER            88243
EXWXPNM  DC    X'00'         CURRENT PARTITION NUMBER            88243
EXWNMOPT DC    CL4' FLT'     SUFFIX OF OPTIONS MODULE            88244
EXWNMGRP DC    CL4' FL3'     SUFFIX OF LPA GROUP MEMBER          88244
EXWNMTRN DC    CL4' 278'     SUFFIX OF TRANSLATE TABLE           88244
EXWXPIOS MACAD XPARTIO       EXPLICIT PARTITION I/O CODE        GP09115
EXWTOSBA MACBL MAKESBA       ADDRESS OF SBA BUILDER             GP09115
EXWFRSBA MACBL GETATB        ADDRESS OF ATB DECODER             GP09115
EXWTOZON MACAD ZONETR        TRANSLATION FOR 6-BIT CODE         GP09115
EXWTOASC MACAD TRTOASC       TRANSLATE FROM EBCDIC TO ASCII     GP09115
EXWFRASC MACAD TRFRASC       TRANSLATE FROM ASCII TO EBCDIC     GP09115
EXWTOISC MACAD TRTOISC       TRANSLATE FROM EBCDIC TO ISCII     GP09115
EXWFRISC MACAD TRFRISC       TRANSLATE FROM ISCII TO EBCDIC     GP09115
EXWUCBLK MACBL LOOKUCB       ADDRESS OF UCB LOOK-UP             GP09115
EXWXPMAX DC    A(24*80)      MAXIMUM EXPLICIT PARTITION BUFFER   93004
EXWSSCT  DC    A(0)          'EXHI' SSCT ADDRESS (OPTIONAL)      93016
EXWSUSE  DC    A(0)          SSCT WORK AREA FOR THIS GROUP       93016
EXWSUS2  DC    A(0)          SSCT RESIDENT MODULE ADDRESS        93016
EXWSSGRP DC    A(0)          SSCT GROUP ADDRESS (MAPEXR)         93016
         DC    A(0)            RESERVED FOR OTHER SSCT FUNCTIONS 93016
EXWGTSTG MACBL GETSTG        SUBROUTINE TO GET STORAGE          GP09115
EXWFRSTG MACBL FREESTG       SUBROUTINE TO FREE STORAGE         GP09115
EXW@RENT DC    A(0)          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
EXW#RENT DC    F'0'          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
EXW@REN2 DC    A(0)          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
EXW#REN2 DC    F'0'          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
SQXINAN  DC    A(0)          MAPCOMM - INPUT ANALYSIS ROUTINE   GP04234
EXW@STOR DC    A(0)          ROOT OF STORAGE CHAIN              GP99100
EXWSRBFG MACAD WEXFLAG       SCHEDULE FLAG BITS                 GP09115
EXWPDTRT MACAD WEXPDTRT      DECIMAL TRT VERIFICATION           GP09115
EXW@DSN  MACAD WEXDODSN      DSNAME PREFIX SERVICE              GP09115
EXW@DSOP DC    A(0)          PREFIX ENTRY SET BY EXHAOPTS       GP08082
EXWSMEND DC    A(0)          END OF XLINE BUFFER                GP13017
EXW@QUE  DC    A(0) WEXQUEUE-STAEEXIT)  QUEUE ROUTINE           GP08082
EXW@OPT  MACAD WEXOPTS       OPTIONS SEARCH/MAINTENANCE         GP09115
EXW@OPTS DC    A(0,0)        FIRST/LAST OPTIONS CHAIN ENTRY     GP08082
EXWLANGM DC    CL8'EXHMGUSE'  MESSAGE MODULE LANGUAGE           GP08082
         MDEFPARM SECT=NO,PFX=EXMG  MESSAGE PARAMETER AREA      GP08082
EXWSPLIN MACAD WEXSPLIN      LINE MODE SUPPORT                  GP09115
EXWSMCUR DC    A(0)          START OF LINE                      GP08164
EXWSMDAT DC    A(0)          START OF DATA LINE                 GP08164
EXWSMROL DC    X'00'         ROLL COUNTER                       GP08288
EXWSMFLG DC    X'00'         ROLL FLAG                          GP08288
EXWSMRMD EQU   X'80'           ROLL MODE IN EFFECT              GP08288
EXWSMFHI EQU   X'08'           HIGH-LIGHTING WAS SET            GP13017
EXWSMMXL DC    H'0'          MAX STRING ALLOWED                 GP08164
EXWSMIND DC    H'0'          INDENT VALUE                       GP08164
EXWSMDAL DC    H'0'          DATA LENGTH                        GP08164
EXW@UNSK DC    A(0)          ADDRESS OF SPARE DEVICE LIST       GP08250
EXW#UNSK DC    F'0'          NUMBER OF ADDRESS RANGES IN LIST   GP08250
EXWSPIEX MACAD MYSPIE        (E)SPIE EXIT                       GP09115
EXWSPIEO DC    A(0)          PREVIOUS (E)SPIE EXIT              GP09115
EXWRANDI MACAD RANDOMIN      RANDOM NUMBER INITIALIZATION       GP13103
EXWRAND  MACAD RANDOMNO      RANDOM NUMBER GENERATOR            GP13103
EXW@RAC  DC    A(0)          POINTER TO RACHECK WHEN RACF ACTIV GP15098
EXWDASD  DC    A(0)          GENERALIZED DASD I/O ROUTINE       GP14279
EXWCLEAN DC    A(0)          TERMINATION CLEAN-UP QUEUE         GP15238
         DC    A(0)            SPARE                            GP13103
         DC    A(0)            SPARE                            GP13103
         DC    A(0)            SPARE                            GP13103
         AIF   ('&SECT' EQ 'Z').EXPCODE                         GP09115
         SPACE 1                                                 82200
EXHBWKEN DS    0D            END OF MODULE                       82199
         AGO   .CMMVS          DEFINE EXHF FIELDS                82200
.DOMVS   SPACE 2                                                 82199
EXWCRSGT B     SCHEDGET      GET CSA                             82200
EXWCRSIN B     SCHEDINT      INIT CSA                            82200
EXWCRSCH B     SCHEDULE      SCHEDULE                            82200
EXWCRSFR B     SCHEDELT      FREE CSA SPACE                      82200
EXWGETID B     GETASID       GET NAME(S) FOR ASID                83360
EXWGETAD B     GETIDAS       GET ASID FOR NAME(S)                83360
EXWGETAS B     GETASCB       GET ASCB FOR ID                     83360
EXWMVS   B     EXTFUNCS      INDEXED MVS FUNCTION CALL           84001
EXWFIXIT B     PAGEFIXR      PAGE-FIX ENTRY                      83360
EXWLOCEX DC    A(0)          LOCATE EXECUTING JOB                83360
EXWAJOBN DC    CL8' '        JOB NUMBER (JOB NNNN/STC NNNN..)    83360
EXWAJOB  DC    CL8' '        JOB NAME                            83360
EXWASTEP DC    CL8' '        STEP NAME                           83360
EXWAPROC DC    CL8' '        PROC NAME                           83360
EXWAPGM  DC    CL8' '        CURRENT PROGRAM                     83360
EXWASTP# DC    H'0'          STEP NUMBER                         83360
EXWAASID DC    H'0'          REQUESTED ASID                      83360
EXWALTLN DC    2F'0'         ALTERNATE (BACKUP) CSA GETMAIN      83360
EXWUMASK DC    X'3C00003C'   CRT CAPABILITY MASKS (SF, COLOR, HI-LITE)
EXWUDFLT DC    X'30000030'   DEFAULT OPTIONS (PROT/SKIP)         86236
EXWAFORM DC    A(0)          ADDRESS OF (LOADED) CONVERSION ROUTINE
EXWASCRN DC    A(0)          ADDRESS OF (LOADED) FULL-SCREEN CODE
EXWUID   DC    XL8'0'        USER'S TSO OR WYLBUR USER-ID        87166
EXWACCT  DC    XL8'0',XL14'0'  USER'S ACCOUNT (+SPARE FOR EXPANSION)
EXWHINDL DC    X'00'         SIGNIFICANT LENGTH OF USER-ID       87166
EXWHINDX DC    CL9' '        USER-ID PLUS PERIOD (FOR INDEX CLC) 87166
EXWQYREP DC    A(WSFRESP-STAEEXIT)    ADDRESS OF WSF QUERY REPLY 87172
EXWCOLMP DC    A(COLORMAP-STAEEXIT)   CURRENT COLOR MAPPINGS     87172
EXWCOLOR DC    A(COLORSET-STAEEXIT)   DEFAULT COLOR MAPPINGS     87172
EXWPSIZE DC    X'50'         PRIMARY - COLUMNS                   88243
EXWPNO   DC    X'18'         PRIMARY - LINES                     88243
EXWSSIZE DC    X'50'         SECONDARY - COLUMNS                 88243
EXWSNO   DC    X'2B'         SECONDARY - LINES                   88243
EXWSZFLG DC    X'00'         SIZE FLAG                           88243
EXWSFALT EQU   X'80'           USE ALTERNATE SIZE                88243
EXWSFTWO EQU   X'40'           TWO SIZES AVAILABLE               88243
EXWXPFLG DC    X'00'         EXPLICIT PARTITION FLAG             88243
EXWXPAV  EQU   X'80'           DEVICE SUPPORTS PARTITIONS        88243
EXWXPUS  EQU   X'40'           USE EXPLICIT PARTITION            88243
EXWXPRQ  EQU   X'20'           RE-ISSUE SET PARTITION            88243
EXWXPWSF EQU   X'02'           WSF ISSUED FOR THIS DEVICE        88248
EXWXPWSQ EQU   X'01'           IF ON, NO QUERY RESPONSE GOTTEN   88248
EXWXPNO  DC    X'00'         MAXIMUM PARTITION NUMBER            88243
EXWXPNM  DC    X'00'         CURRENT PARTITION NUMBER            88243
EXWNMOPT DC    CL4' FLT'     SUFFIX OF OPTIONS MODULE            88244
EXWNMGRP DC    CL4' FL3'     SUFFIX OF LPA GROUP MEMBER          88244
EXWNMTRN DC    CL4' 278'     SUFFIX OF TRANSLATE TABLE           88244
EXWXPIOS DC    A(XPARTIO-STAEEXIT)  EXPLICIT PARTITION I/O CODE  88248
EXWTOSBA B     MAKESBA       ADDRESS OF SBA BUILDER              89253
EXWFRSBA B     GETATB        ADDRESS OF ATB DECODER              89253
EXWTOZON DC    A(ZONETR)     TRANSLATION FOR 6-BIT CODE          89253
EXWTOASC DC    A(TRTOASC)    TRANSLATE FROM EBCDIC TO ASCII      89253
EXWFRASC DC    A(TRFRASC)    TRANSLATE FROM ASCII TO EBCDIC      89253
EXWTOISC DC    A(TRTOISC)    TRANSLATE FROM EBCDIC TO ISCII      91202
EXWFRISC DC    A(TRFRISC)    TRANSLATE FROM ISCII TO EBCDIC      91202
EXWUCBLK B     LOOKUCB       ADDRESS OF UCB LOOK-UP              91202
EXWXPMAX DC    A(24*80)      MAXIMUM EXPLICIT PARTITION BUFFER   93004
EXWSSCT  DC    A(0)          'EXHI' SSCT ADDRESS (OPTIONAL)      93016
EXWSUSE  DC    A(0)          SSCT WORK AREA FOR THIS GROUP       93016
EXWSUS2  DC    A(0)          SSCT RESIDENT MODULE ADDRESS        93016
EXWSSGRP DC    A(0)          SSCT GROUP ADDRESS (MAPEXR)         93016
         DC    A(0)            RESERVED FOR OTHER SSCT FUNCTIONS 93016
EXWGTSTG B     GETSTG        SUBROUTINE TO GET STORAGE          GP99100
EXWFRSTG B     FREESTG       SUBROUTINE TO FREE STORAGE         GP99100
EXW@RENT DC    A(0)          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
EXW#RENT DC    F'0'          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
EXW@REN2 DC    A(0)          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
EXW#REN2 DC    F'0'          (PERM) 4K RE-ENTRANT WORK AREAS    GP04234
SQXINAN  DC    A(0)          MAPCOMM - INPUT ANALYSIS ROUTINE   GP04234
EXW@STOR DC    A(0)          ROOT OF STORAGE CHAIN              GP99100
EXWSRBFG DC    A(WEXFLAG-STAEEXIT)      SCHEDULE FLAG BITS      GP05020
EXWPDTRT DC    A(WEXPDTRT-STAEEXIT) DECIMAL TRT VERIFICATION    GP06277
EXW@DSN  DC    A(WEXDODSN-STAEEXIT)  DSNAME PREFIX SERVICE      GP08082
EXW@DSOP DC    A(0)          PREFIX ENTRY SET BY EXHAOPTS       GP08082
EXWSMEND DC    A(0)          END OF XLINE BUFFER                GP13017
EXW@QUE  DC    A(0) WEXQUEUE-STAEEXIT)  QUEUE ROUTINE           GP08082
EXW@OPT  DC    A(WEXOPTS-STAEEXIT)  OPTIONS SEARCH/MAINTENANCE  GP08082
EXW@OPTS DC    A(0,0)        FIRST/LAST OPTIONS CHAIN ENTRY     GP08082
EXWLANGM DC    CL8'EXHMGUSE'  MESSAGE MODULE LANGUAGE           GP08082
         MDEFPARM SECT=NO,PFX=EXMG  MESSAGE PARAMETER AREA      GP08082
EXWSPLIN DC    A(WEXSPLIN-STAEEXIT) LINE MODE SUPPORT           GP08164
EXWSMCUR DC    A(0)          START OF LINE                      GP08164
EXWSMDAT DC    A(0)          START OF DATA LINE                 GP08164
EXWSMROL DC    X'00'         ROLL COUNTER                       GP08288
EXWSMFLG DC    X'00'         ROLL FLAG                          GP08288
EXWSMRMD EQU   X'80'           ROLL MODE IN EFFECT              GP08288
EXWSMMXL DC    H'0'          MAX STRING ALLOWED                 GP08164
EXWSMIND DC    H'0'          INDENT VALUE                       GP08164
EXWSMDAL DC    H'0'          DATA LENGTH                        GP08164
EXW@UNSK DC    A(0)          ADDRESS OF SPARE DEVICE LIST       GP08250
EXW#UNSK DC    F'0'          NUMBER OF ADDRESS RANGES IN LIST   GP08250
EXWSPIEX DC    A(MYSPIE-STAEEXIT)  (E)SPIE EXIT                 GP09115
EXWSPIEO DC    A(0)          PREVIOUS (E)SPIE EXIT              GP09115
EXWRANDI DC    A(RANDOMIN-STAEEXIT)  RANDOM INIT                GP13103
EXWRAND  DC    A(RANDOMNO-STAEEXIT)  RANDOM NUMBER GENERATOR    GP13103
EXW@RAC  DC    A(0)          POINTER TO RACHECK WHEN RACF ACTIV GP15098
EXWDASD  DC    A(0)          GENERALIZED DASD I/O ROUTINE       GP14279
EXWCLEAN DC    A(0)          TERMINATION CLEAN-UP QUEUE         GP15238
         DC    A(0)            SPARE                            GP13103
         DC    A(0)            SPARE                            GP13103
         DC    A(0)            SPARE                            GP13103
.EXPCODE SPACE 2                                                 82200
*        SUBROUTINE TO BUILD SBA SEQUENCE IN DB(1:3)             89253
*          DESIRED SCREEN ADDRESS IN R0; RETURN BY R14           89253
MAKESBA  MVI   DB,X'11'      MAKE SBA ORDER                      89229
         CH    R0,MAKESLIM   LARGE ?                            GP05005
         BNH   MAKESBA2      NO; USE ZONED FORMAT                89229
         STCM  R0,3,DB+1     STASH IN BINARY FORM                89229
         BR    R14           RETURN                              89229
MAKESBA2 STC   R0,DB+2       SET LOW SIX BITS                    89229
         SRL   R0,6                                              89253
         STC   R0,DB+1       SET HIGH SIX BITS                   89253
         ST    R15,20(,R13)  SAVE                                89253
         NC    DB+1(2),MAKESZON   KILL ZONE BITS                 89253
         L     R15,EXWTOZON  GET ZONE TRANSLATE TABLE            89267
         TR    DB+1(2),0(R15)  SET PROPER ZONES                  89253
         L     R15,20(,R13)  RESTORE                             89253
         BR    R14           RETURN TO CALLER                    89253
MAKESLIM DC    H'4095'       CUT-OFF FOR 14-BIT ADDRESSING      GP05005
MAKESZON DC    X'3F3F'       MASK FOR 14-BIT ADDRESSING         GP05005
         SPACE 1                                                 89253
*        CONVERT ATB ADDRESS IN DB(1:3) TO BINARY IN R0; RETURN BY R14
GETATB   TM    DB+1,X'C0'    ZONED ?                             89229
         BNZ   GETATB2       YES; OLD 12-BIT FORMAT (NO 16-BIT SUPP)
         SLR   R0,R0                                             89229
         ICM   R0,3,DB+1     LOAD 14-BIT ADDRESS                 89229
         BR    R14           RETURN                              89229
GETATB2  IC    R0,DB+1       GET CURSOR HIGH BITS                89229
         IC    R1,DB+2       GET LOW BITS                        89253
         SLL   R1,24+2       LEFT-JUSTIFY LOW SIX BITS           89253
         SLDL  R0,6          MAKE FULL ADDRESS                   89253
         LA    R1,X'FFF'     MAKE ZONE MASK                      89253
         NR    R0,R1         MASK OUT ADDRESS BITS               89253
         BR    R14           RETURN TO CALLER                    89253
         SPACE 2                                                 84001
EXTFUNCS STM   R0,R15,EXTSAVE  SAVE REGISTERS FOR EXTENDED CALL  84001
         CLI   EXTSAVE+3,EXTFUMAX  VALID ?                       84001
         BL    EXTFCALL      YES                                 84001
EXTFERR  LA    R15,8         SET ERROR CODE                      84001
EXTFEXIT AM24  WORK=R1                                          GP97316
         LM    R0,R14,EXTSAVE                                    84001
         BR    R14           RETURN TO CALLER                    84001
EXTFCALL SLR   R12,R12       CLEAR FOR IC                        84001
         IC    R12,EXTSAVE+3   GET FUNCTION CODE                 84001
         SLL   R12,1         CONVERT TO OFFSET                   84001
         LH    R12,EXTABLE(R12)  GET OFFSET TO FUNCTION          84001
         ALR   R12,R11       GET ABSOLUTE ADDRESS                84001
         O     R12,EXT8000                                      GP97316
         BSM   0,R12         ENTER THE FUNCTION IN 31-BIT MODE  GP97316
EXTSAVE  DC    16F'0'                                            84001
EXT8000  DC    X'80000000'                                      GP97316
EXTABLE  DC    Y(EXLOCSVT-EXHBWORK)    LOCATE SUB-SYSTEM         84001
EXTFUMAX EQU   (*-EXTABLE)/2   HIGHEST VALID CALL INDEX+1        84001
         SPACE 2
PAGEFIXR LA    R15,8                                            GP08147
         STM   R0,R15,SUBSAVE  SAVE CALLER'S REGISTERS          GP08147
         LH    R12,=Y(PAGFIXER-EXHBWORK)   OFFSET TO FUNCTION   GP08147
         LA    R12,0(R12,R11)  ADDRESS                          GP08147
         BR    R12           INVOKE IT                          GP08147
         SPACE 1                                                 83360
GETASCB  SLR   R15,R15       CLEAR RETURN ASCB ADDRESS           83360
         STM   R0,R15,SUBSAVE  SAVE OTHER REGISTERS ALSO         83360
         LTR   R1,R0         ANY ID PASSED ?                     83360
         BNZ   *+8           YES                                 83360
         L     R1,EXWMYSID   GET MY ID                           83360
         AM31  WORK=R15      GET HIGH                           GP97316
         L     R3,CVTPTR                                         83360
         NUSE  CVT,R3                                            83360
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           83360
         USING ASVT,R15                                          83360
         C     R1,ASVTMAXU   VALID ?                             83360
         BH    SUBEXITS      NO; BOOBOO                          83360
         SLL   R1,2          CONVERT TO INDEX                    83360
         LA    R5,ASVTFRST(R1)  POINT TO ASCB POINTER            83360
         ICM   R5,15,0(R5)   LOAD AND TEST                       83360
         BNP   SUBEXITS      INVALID - TOO BAD                   83360
         ST    R5,SUBSAVEF   SET RETURN TO USER = ASCB ADDRESS   83360
         B     SUBEXITS      RETURN                              83360
         DROP  R15,R3                                            83360
         SPACE 1                                                 83360
GETASID  SLR   R15,R15       CLEAR RETURN ASCB ADDRESS           83360
         STM   R0,R15,SUBSAVE  SAVE OTHER REGISTERS ALSO         83360
         LTR   R1,R0         ANY ID PASSED ?                     83360
         BNZ   *+8           YES                                 83360
         L     R1,EXWMYSID   GET MY ID                           83360
         AM31  WORK=R15      GET HIGH                           GP97316
         L     R3,CVTPTR                                         83360
         NUSE  CVT,R3                                            83360
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           83360
         USING ASVT,R15                                          83360
         C     R1,ASVTMAXU   VALID ?                             83360
         BH    SUBEXITS      NO; BOOBOO                          83360
         SLL   R1,2          CONVERT TO INDEX                    83360
         LA    R5,ASVTFRST(R1)  POINT TO ASCB POINTER            83360
         ICM   R5,15,0(R5)   LOAD AND TEST                       83360
         BNP   SUBEXITS      INVALID - TOO BAD                   83360
         B     GTCMASCB      GO TO COMMON RETURN                 83360
         DROP  R3,R15                                            83360
         SPACE 1                                                 83360
GETIDAS  SLR   R15,R15       CLEAR ASCB ADDRESS                  83360
         STM   R0,R15,SUBSAVE  AND SAVE OTHER REGISTERS ALSO     83360
         AM31  WORK=R15      GET HIGH                           GP97316
         L     R3,CVTPTR                                         83360
         NUSE  CVT,R3                                            83360
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           83360
         USING ASVT,R15                                          83360
         L     R0,ASVTMAXU   GET HIGHEST VALID ASID              83360
         SLL   R0,2          *4 FOR FAST CHECK                   83360
         SLR   R1,R1         SET INDEX FOR NEXT ASID             83360
GTIAASID LA    R1,4(,R1)     GET NEXT ASID INDEX                 83360
         CR    R1,R0         VALID ?                             83360
         BH    SUBEXITS      NO; QUIT                            83360
GTIAACOM LA    R5,ASVTFRST(R1)  POINT TO ASCB POINTER            83360
         ICM   R5,15,0(R5)   LOAD AND TEST                       83360
         BNP   GTIAASID      SKIP UNUSED/FREE SLOT               83360
         USING ASCB,R5                                           83360
         LA    R14,8         SET DIFFERENTIAL OFFSET - FAKE CSCB 83360
         ICM   R2,15,ASCBJBNI  JOB CSCB ?                       GP97316
         BNZ   GTIAAJOB      YES; SKIP                           83360
         SLR   R14,14        RESET CSCB ORIGIN OFFSET            83360
         ICM   R2,15,ASCBCSCB  GET THE CSCB                      83360
         BZ    GTIAASID                                          83360
         USE   CSCB,R2       DECLARE THE CSCB                    83360
         CLI   CHVCD,X'98'   TS USER ?                           83360
         BNE   GTIANTSO      NO                                  83360
GTIAUTST CLC   CHKEY,EXWAJOB  MATCHING USER ID ?                 83360
         BE    GTIAASTP      YES; SKIP OTHER COMPARES            83360
GTIANTSO CLI   CHVCD,X'04'   START TASK/INIT ?                   83360
         BNE   GTIAASID      NO                                  83360
GTIAAJOB SLR   R2,R14        MAKE FAKE CSCB ORIGIN               83360
         CLC   EXWAJOB,CHCLS  MATCHING NAME ?                    83360
         BNE   GTIAASID      NO                                  83360
         CLI   EXWASTEP,C' '  STEP, ETC. REQUEST ?               83360
         BNH   GTIAASTP      NO                                  83360
         CLC   EXWASTEP(8),CHPROCSN  PROC NAME MATCH ?           83360
         BE    GTIAASTP      YES                                 83360
         CLC   EXWASTEP(8),CHKEY  START ID ?                     83360
         BE    GTIAASTP      NO                                  83360
         CLI   EXWASTEP+4,C' '  THREE BYTE PARM ?                83360
         BNE   GTIAASID      NO                                  83360
         CLC   CHUNIT,EXWASTEP   UCB NAME MATCH ?                83360
         BNE   GTIAASID                                          83360
GTIAASTP CLC   CHASID,ASCBASID  JUST IN CASE                     83360
         BNE   GTIAASID                                          83360
*        B     GTCMASCB      GO TO COMMON RETURN                 83360
         DROP  R2,R3,R15                                         83360
         SPACE 1                                                 83360
GTCMASCB ST    R5,SUBSAVEF   RETURN ASCB ADDRESS                 85002
         LH    R0,ASCBASID   GET THE ASID                        85002
         STH   R0,EXWAASID   RETURN TO CALLER                    83360
         MVC   EXWAJOBN(EXWASTP#-EXWAJOBN),BLANKS  PRE-CLEAR     83360
         ICM   R3,15,ASCBJBNI  INITIATED JOBNAME ?              GP97316
         BZ    GTCMJCSB      NO                                  83360
         AIF   (NOT &MVSESA).NGTCMCS                            GP97322
         ICM   R14,15,8(R3)   GET JOB CSCB                      GP97322
         BZ    GTCMASC0                                         GP97322
         LR    R3,R14                                           GP97322
         B     GTCMHCSB                                         GP97322
GTCMASC0 DS    0H                                               GP97322
.NGTCMCS SH    R3,GTCDCH8    MAKE IT INTO FAKE CSCB             GP05005
         B     GTCMHCSB                                          83360
GTCMJCSB ICM   R3,15,ASCBCSCB  GET THE CSCB                     GP97316
         BZ    SUBEXITS      NONE; SKIP DISPLAY                  83360
         USE   CSCB,R3                                           83360
GTCMHCSB LA    R14,CHCLS     POINT TO PRESUMED JOBNAME           83360
         LA    R15,CHSTEP    AND PRESUMED STEPNAME               83360
         CLI   CHVCD,X'0C'   MOUNT COMMAND ?                     83360
         BNE   GTCMMCSB      NO                                  83360
         LA    R14,GTCDCMNT  MAKE FAKE JOBNAME                  GP05005
         LA    R15,CHKEY     POINT TO ADDRESS FIELD              83360
         B     GTCMVCSB      FORMAT IT                           83360
GTCMMCSB CLI   CHVCD,X'98'   TIME-SHARING TASK ?                 83360
         BNE   GTCMTCSB      NO                                  83360
         LA    R14,CHKEY     POINT TO USER ID                    83360
         TM    0(R14),255-C' '  ANY USERID ?                     83360
         BNZ   *+8           YES                                 83360
         LA    R14,GTCDCLOG  MAKE PLAIN LOGON                   GP05005
         LA    R15,CHCLS     POINT TO PROCNAME                   83360
         B     GTCMVCSB                                          83360
GTCMTCSB TM    CHTRKID,CHINITID  INITIATOR CSCB ?                83360
         BNO   GTCMICSB      NO                                  83360
         LA    R15,BLANKS    NO STEPNAME                         83360
         B     GTCMVCSB      GO TO MOVE NAMES                    83360
GTCMICSB TM    0(R15),255-C' '  ANYTHING IN THE STEPNAME ?       83360
         BNZ   GTCMVCSB      YES; DISPLAY IT                     83360
         LA    R15,CHPROCSN  POINT TO PROCSTEP                   83360
         TM    0(R15),255-C' '  ANYTHING IN IT ?                 83360
         BZ    GTCMPCSB      NO; TRY FOR UNIT                    83360
         CLC   GTCDCPRC,0(R15)  START STEP NAME ?               GP05005
         BNE   GTCMVCSB      NO; DISPLAY IT                      83360
GTCMPCSB LA    R15,BLANKS    POINT TO BLANKS                     83360
         TM    CHUNIT,X'C0'  VALID CONTENTS IN UNIT ?            83360
         BNO   GTCMVCSB      NO; LEAVE BLANK                     83360
         MVC   EXWASTEP(3),CHUNIT  USE UNIT NAME                 83360
GTCMVCSB MVC   EXWAJOB,0(R14)  MOVE PRESUMED JOBNAME             83360
         CLI   0(R14),0      ADDRESS SPACE BUILD ?               83360
         BE    SUBEXITS      YES, OR SIMILAR FUNNY - SKIP CRUD   83360
         TM    0(R15),255-C' '  ANYTHING IN STEPNAME ?           83360
         BZ    *+10          NO; SKIP THE MOVE                   83360
         MVC   EXWASTEP,0(R15)  MOVE THE STEPNAME                83360
*        B     SUBEXITS      RETURN TO USER                      83360
         DROP  R3,R5                                             83360
         SPACE 1                                                 83360
SUBEXITS AM24  ,             GET LOW                            GP97316
         LM    R0,R15,SUBSAVE  RESTORE USER'S REGISTERS          83360
         BR    R14           RETURN TO CALLER                    83360
SUBSAVE  DC    15F'0'        SUBROUTINE SAVE AREA                83360
SUBSAVEF DC    F'0'          -"- AND RETURN CODE AREA            83360
SUBSAVE0 EQU   SUBSAVE+0,4,C'A'  FOR R0 RETURN                  GP08082
SUBSAVE1 EQU   SUBSAVE+4,4,C'A'  FOR R1 RETURN                  GP08082
GTCDCLOG DC    CL8'Logon   '  FAKE FOR WAITING TSO SESSION      GP05005
GTCDCMNT DC    CL8'Mount   '  FAKE FOR VOLUME MOUNT             GP05005
GTCDCPRC DC    CL8'IEFPROC '  STARTING ?                        GP05005
GTCDCH8  DC    H'8'                                             GP05005
         SPACE 1                                                 91202
LOOKUCB  SLR   R15,R15       SET PROVISIONAL GOOD RETURN CODE    91202
         STM   R0,R15,SUBSAVE  SAVE REGISTERS                    91202
         LA    R12,LOOKUCB   GET TEMP BASE                       91202
         LA    R12,LOOKUNIT-LOOKUCB(,R12)  MAKE NEW BASE         91202
         BR    R12           GO TO IT                            91202
         SPACE 2                                                 83360
*   GET STORAGE IF R0>0;  FREE ALL IF R0=0;  FREE R1 IF R0<0    GP10019
*                                                               GP10019
GETSTG   DS    0H                                               GP04234
         AIF   (&REL LT 200).GETSTG                             GP04234
         BSM   R14,0         SAVE AMODE                         GP99100
.GETSTG  LTR   R0,R0         CHECK REQUEST TYPE                 GP10019
         BM    FRESTG1       FREE SINGLE ELEMENT                GP10019
         BZ    FREESTG2      FREE ALL                           GP10019
         SR    R1,R1         ZERO RETURN IN CASE OF ERROR       GP99100
         STM   R0,R15,SUBSAVE                                   GP99100
         AM31  WORK=R14                                         GP99100
         AH    R0,GETSDCH8   ADD OVERHEAD                       GP05005
         LR    R3,R0                                            GP99100
         STORAGE OBTAIN,LENGTH=(0),COND=YES  TRY TO GET STG     GP09361
         LTR   R15,R15       BAD RETURN ?                       GP99100
         BNZ   SUBEXITS      YES; GIVE USER A ZERO              GP99100
         ST    R3,4(,R1)     SET SIZE                           GP99100
         MVC   0(4,R1),EXW@STOR CHAIN IN FRONT                  GP99100
         ST    R1,EXW@STOR   STASH                              GP99100
         LA    R1,8(,R1)     SKIP MY OVERHEAD                   GP99100
         ST    R1,SUBSAVE+4  RETURN IT IN R1                    GP99100
         B     SUBEXITS                                         GP99100
GETSDCH8 DC    H'8'                                             GP05005
         SPACE 2                                                GP10019
*   FREE SINGLE STORAGE ELEMENT                                 GP10019
*                                                               GP10019
FRESTG1  DS    0H                                               GP10019
         AIF   (&REL LT 200).FRESTG1                            GP10019
         BSM   R14,0                                            GP10019
.FRESTG1 ANOP  ,                                                GP10019
         STM   R0,R15,SUBSAVE                                   GP10019
         AM31  WORK=R14                                         GP10019
         LA    R0,8          PREFIX                             GP10019
         SL    R1,R0         BLOCK ADDRESS FOR STORAGE ELEMENT  GP10019
         LA    R2,EXW@STOR   POINT TO FIRST LINK                GP10019
FRESTGL  C     R1,0(,R2)     REQUESTED POINTER?                 GP10019
         BE    FRESTGF       YES                                GP10019
         ICM   R2,15,0(R2)   NEXT ELEMENT                       GP10019
         BNZ   FRESTGL       TRY AGAIN                          GP10019
         ST    R0,SUBSAVE+15*4   SET RC=8                       GP10019
         B     SUBEXITS      AND RETURN                         GP10019
FRESTGF  MVC   0(4,R2),0(R1)    UNCHAIN                         GP10019
         L     R0,4(,R1)     GET SIZE                           GP10019
         STORAGE RELEASE,LENGTH=(0),ADDR=(1)                    GP99100
         ST    R15,SUBSAVE+15*4   SET RC=0                      GP10019
         B     SUBEXITS      AND RETURN                         GP10019
         SPACE 2                                                GP99100
*   FREE ALL STORAGE ELEMENTS                                   GP10019
*                                                               GP10019
FREESTG  DS    0H                                               GP04234
         AIF   (&REL LT 200).FREESTG                            GP04234
         BSM   R14,0                                            GP99100
.FREESTG ANOP  ,                                                GP10019
FREESTG2 STM   R0,R15,SUBSAVE                                   GP10019
         AM31  WORK=R14                                         GP99100
FREESTGL ICM   R1,15,EXW@STOR ANOTHER TO FREE ?                 GP99100
         BZ    SUBEXITS      NO; RETURN                         GP99100
         L     R0,4(,R1)                                        GP99100
         MVC   EXW@STOR,0(R1) UNCHAIN THIS ONE                  GP99100
         STORAGE RELEASE,LENGTH=(0),ADDR=(1)                    GP99100
         B     FREESTGL                                         GP99100
         SPACE 2                                                 83360
         PUSH  USING                                            GP97316
SCHEDELT STM   R0,R14,SCHEDSAV   ***ONEXIT ENTRY FOR CSA FREEMAIN
         MVI   SCHEDENT,4    SET DELETE ENTRY                    82200
         XR    R5,R5         INDICATE FREEMAIN REQUEST           82200
         B     SCHEDCOM      GO TO COMMON CODE                   82200
         SPACE 1                                                 82200
*        ENTRY TO GET CSA R0=LENGTH OF USE PORTION               82200
*                                                                82200
SCHEDGET STM   R0,R14,SCHEDSAV                                   82200
         MVI   SCHEDENT,1    SET GET CSA ENTRY                   82200
         LTR   R5,R0         COPY SIZE TO BE GOTTEN              82200
         BNP   SCHEDR16      MAJOR ERROR                         82200
         B     SCHEDCOM      ELSE HONOR                          82200
         SPACE 1                                                 82200
*        ENTRY TO MOVE USER CODE TO CSA R0=LEN; R1=ADDRESS       82200
*                                                                82200
SCHEDINT STM   R0,R14,SCHEDSAV                                   82200
         MVI   SCHEDENT,2    SET INIT ENTRY                      82200
         ICM   R0,15,EXWCRMLN   ANY CSA GOTTEN ?                 82200
         BZ    SCHEDR16      NO; MAJOR ERROR                     82200
         B     SCHEDCOM                                          82200
         SPACE 1                                                 82200
*        ENTRY TO SCHEDULE AN SRB FOR PREVIOUSLY INITIALIZED CSA CODE
*        IF ASID=CURRENT, OR TASK IS UNPRIVILEGED, WILL RUN DIRECT.
*                                                                82200
SCHEDULE STM   R0,R14,SCHEDSAV   SAVE CALLER'S REGISTERS         82200
         MVI   SCHEDENT,3    SET SRB SCHEDULE ENTRY              82200
SCHEDCOM XC    SCHEDXC(SCHEDXCL),SCHEDXC  CLEAR ALL              82200
         SPACE 1                                                 82200
         TM    WEXFLAG,WEXAUTH  USE SCHEDULE ?                   88084
         BM    SCHREDO       NO; UNPRIVILEGED ACCESS             88084
         USING PSA,R0        LOW STORAGE (PSA) ADDRESSABILITY    82200
*LIST*   MODESET MODE=SUP,KEY=ZERO                               82200
         MODESET MODE=SUP,KEY=ZERO                              GP05020
         SLR   R2,R2         ZERO KEY (?)                        82200
*LIST*   MODESET SAVEKEY=(2),EXTKEY=ZERO  LOAD STORAGE KEY       82200
         MODESET SAVEKEY=(2),EXTKEY=ZERO  LOAD STORAGE KEY       82200
         ST    R2,SCSAVKEY   SAVE FOR EXIT                       82200
         TM    SCHEDFLG,SCHEDEST  ESTAE ALREADY ISSUED ?         82200
         BNZ   SCHREDO       YES; DON'T DO IT AGAIN              82200
         OI    SCHEDFLG,SCHEDEST  SHOW ISSUED                    82200
*LIST* ESTAE STAEEXIT,CT,PARAM=(R13),TERM=YES,BRANCH=YES,SVEAREA=(13)*
*LIST*         ,MF=(E,SCHWSTAE)                                  82200
         ESTAE STAEEXIT,CT,PARAM=(R13),TERM=YES,BRANCH=YES,SVEAREA=(13)*
               ,MF=(E,SCHWSTAE)                                  82200
         BXLE  R15,R15,SCHREDO GO ON IF OK                       82200
SCHEDR16 MVI   SCRETCH+3,16  ELSE SHOW ERROR                     82200
         B     SCHEXIT       EXIT WITH ERROR                     82200
SCHREDO  CLI   SCHEDENT,3    SCHEDULE, FREE OR OTHER ?           90183
         BE    SCHEDSCH      SCHEDULE (MOST FREQUENT)            90183
         BH    SCHFREE       HIGH; REQUEST TO FREE CSA           90183
         CLI   SCHEDENT,1    GET REQUEST ?                       82200
         BH    SCHEDNGT      NO; INITIALIZATION (DATA MOVE)      90183
         LA    R5,CSASIZE(,R5)  ADD FIXED OVERHEAD               82200
         CLM   R5,7,EXWCRMLN+1  CURRENT AREA LARGE ENOUGH ?      82200
         BNH   SCHREDOP      YES; USE IT                         82200
         BAL   R9,SCHFREEP   FREE PROGRAM AREA                   82200
         LR    R6,R5         GET SIZE AGAIN                      82200
         BAL   R9,SCHGREEP   GET PROGRAM AREA                    82200
SCHREDOP LM    R15,R0,EXWCRMLN  GET CSA LENGTH/ADDRESS           82200
         LR    R7,R0         SET CSA BASE                        82200
         LR    R1,R15        MAKE R0/R1 FOR MVCL                 82200
         LH    R14,=AL2(CSACODE-EXHBWORK)                       GP08147
         AR    R14,R11       MAKE FULL ADDRESS                  GP08147
         LA    R15,CSASIZE   GET FIXED LENGTH                    82200
         MVCL  R0,R14        COPY CSA CODE; ZERO UNUSED PORTION  82200
         LA    R1,CSASIZE(,R7)  GET START OF USER'S ENTRY        82200
         ST    R1,EXWCRMCD   SAVE FOR USER                       82200
         B     SCHEXIT       EXIT                                82200
         SPACE 1                                                 82200
SCHEDNGT LM    R0,R1,SCHEDSAV  RELOAD USER'S PARAMETERS          90183
         LTR   R0,R0         VALID ADDRESS ?                     82200
         BZ    SCHEDR16      NO; FAIL                            82200
         LTR   R1,R1         VALID LENGTH ?                      82200
         BNP   SCHEDR16      NO; FAIL                            82200
         LM    R14,R15,EXWCRMLN  GET LENGTH AND ADDRESS          82200
         AR    R15,R14       MAKE LAST BYTE                      82200
         L     R14,EXWCRMCD  GET START OF USER'S CODE            82200
         SR    R15,R14       MAKE LENGTH                         82200
         MVCL  R14,R0        COPY USER'S CODE TO CSA             82200
         B     SCHEXIT       AND EXIT                            82200
         SPACE 1                                                 82200
SCHEDSCH L     R7,EXWCRMAD   GET CSA ADDRESS                     90183
         USING CSACODE,R7    DECLARE CODE AREA                   82200
         SPACE 1                                                 82200
         L     R15,CVTPTR    CVT ADDRESS                         82200
         NUSE  CVT,R15       CVT ADDRESSABILITY                  82200
         L     R14,CVTASVT   ASVT ADDRESS                        82200
         USING ASVT,R14      ASVT ADDRESSABILITY                 82200
         ICM   R10,15,EXWCRMID   GET REQUESTED ASID              82200
         BM    SCHEDR12      INVALID                             82200
         BP    SCHEDSCA      LOOK FOR IT                         82200
         L     R10,EXWMYSID  =0 - REQUEST FOR DEFAULT (THIS ASID)
         ST    R10,EXWCRMID  PASS BACK TO CALLER                 82200
SCHEDSCA C     R10,ASVTMAXU  COMPARE TO MAX                      82200
         BH    SCHEDR12      ERROR                               82200
         SLL   R10,2         CONVERT TO OFFSET                   82200
         LA    R14,ASVTFRST(R10)   ADDRESS SPACE ENTRY           82200
         USING ASVTENTY,R14  ADDRESSABILITY FOR ENTRY            82200
         ICM   R10,15,ASVTENTY   ASCB ADDRESS                    82200
         BP    FOUNDASC      PROCEED IF OK                       82200
         USING ASCB,R10      ASCB ADDRESSABILITY                 82200
SCHEDR12 MVI   SCRETCH+3,12  SET NOT FOUND                       82200
         B     SCHEXIT       AND EXIT                            82200
FOUNDASC TM    ASCBFLG1,ASCBTERM+ASCBABNT  IS IT USABLE ?        82200
         BNZ   SCHEDR12      NO; SET ERROR                       82200
         TM    ASCBDSP1,ASCBFAIL+X'80'  SAFE ?  NOQ              82200
         BNZ   SCHEDR12      NO; FAIL REQUEST                    82200
         DROP  R14,R15                                           82200
         SPACE 1                                                 82200
         LA    R9,CSASRB     ADDR OF AREA TO BUILD SRB           82200
         USING SRB,R9                                            82200
         XC    SRB(SRBSIZE),SRB   CLEAR SRB                      82200
         ST    R10,SRBASCB   SAVE TARGET ASCB ADDRESS            82200
         MVC   SRBID,=CL4'SRB'         CONTROL BLOCK ID          82200
         LR    R14,R7        GET ROUTINE ADDRESS                 82200
         ST    R14,SRBEP     INTO ENTRY POINT                    82200
         LA    R14,CSAQUIT-CSACODE(,R14)  GET ADDRESS OF TERM    82200
         ST    R14,SRBRMTR   INTO SRB                            82200
         AIF   (NOT &MVSXA).NOSRB31                              91224
         TM    SCHEDSAV+4,X'80'  AMODE 31 ?                      91224
         BZ    *+12          NO                                  91224
         OI    SRBEP,X'80'   ENTER IN 31-BIT MODE                91224
         OI    SRBRMTR,X'80'   RECOVER IN 31-BIT MODE            91224
.NOSRB31 L     R0,PSATOLD    GET TCB ADDRESS                     82200
         ST    R0,SRBPTCB    INTO SRB                            82200
         L     R2,PSAAOLD    GET ASCB ADDRESS                   GP08073
         ST    R2,CSAASCB    FOR CROSS-MEMORY POST              GP08073
         USING ASCB,R2                                           82200
         LH    R0,ASCBASID   GET MY ASID                         82200
         STH   R0,SRBPASID                                       82200
         MVC   SRBCPAFF,ASCBAFFN  USE SAME AFFINITY ?            82200
         DROP  R2,R9,R10                                         82200
         ST    R7,CSAPTCOD   STORE CODE POINTER                  82200
         XC    USERSPEX(8),USERSPEX  CLEAR USER RECOVERY REQUEST 82200
         MVI   USERLOOP+2,1  SET LOOP COUNTER                    82200
         TM    WEXFLAG,WEXAUTH  SRB IN DEBUG MODE ?             GP08073
         BNM   SCHEDFLC      NO; DO NORMALLY                    GP08073
         CLC   EXWMYSID,EXWCRMID   SCHEDULE SAME ADRESS SPACE ? GP13057
         BE    SCHEDLCL      YES; DO LOCALLY                     82200
         MVI   SCRETCH+3,8   SET ERROR CODE                     GP08073
         B     SCHEXIT       AND FAIL THE REQUEST               GP08073
SCHEDFLC MVI   CSAECB,0      CLEAR ECB                           82200
         MVI   TIMECB,0      CLEAR STIMER ECB                    82200
         LA    R14,CSAECB    SCHEDULE ECB                        82200
         LA    R15,TIMECB    STIME ECB                           82200
         STM   R14,R15,SCHECBLS  BUILD ECB LIST                  82200
         OI    SCHECBLS+4,X'80'  SET END OF LIST BIT             82200
*LIST*   STIMER REAL,STIMEXIT,BINTVL==A(5*60*100)  5 MINUTE WAIT 85192
         STIMER REAL,STIMEXIT,BINTVL==A(5*60*100)  5 MINUTE WAIT 85192
*LIST*   SCHEDULE SCOPE=GLOBAL,SRB=(R9) CSASRB  HOP FOR THE BEST 84352
         SCHEDULE SCOPE=GLOBAL,SRB=(R9) CSASRB  HOP FOR THE BEST 84352
         SPACE 1                                                 82200
         TM    CSAECB,X'40'  POSTED ?                            82200
         BO    PREPAID       YES                                 82200
*LIST*   WAIT  ECBLIST=SCHECBLS   AWAIT COMPLETION OF SOMETHING  82200
         WAIT  ECBLIST=SCHECBLS   AWAIT COMPLETION OF SOMETHING  82200
PREPAID  TM    TIMECB,X'40'  TIMER FINISHED ?                    82200
         BNZ   PREPAID2      YES                                 82200
*LIST*   TTIMER CANCEL       ELSE CLEAR IT OUT                   82200
         TTIMER CANCEL       ELSE CLEAR IT OUT                   82200
PREPAID2 TM    CSAECB,X'40'  SRB COMPLETION POSTED ?             82200
         BNZ   PREPAID3      YES; OK                             82200
         MVI   SCRETCH+3,4   ELSE SET RETURN CODE 4 - SRB ERROR  82200
PREPAID3 L     R2,SCSAVKEY   GET STORAGE KEY                     82200
*LIST*   MODESET KEYADDR=(2)  RESET STORAGE KEY                  82200
*TEST*   MODESET KEYADDR=(2)  RESET STORAGE KEY                  82200
         B     SCHEXIT       AND EXIT                            82200
         SPACE 1                                                 82200
*        SIMULATE SCHEDULE IF UNPRIVILEGED OR SAME ASID          82200
*                                                                82200
SCHEDLCL MVC   SCHEDONX,SQSPIAD  SAVE USER'S SPIE EXIT ADDRESS   82200
         MVC   SCHEDONX+4(2),SQSPICA+4  SAVE MASK                83335
         ONSPIE SCHEDLEX,X'2F'   RECOVER 0C2, 0C4-0C7            90183
         TM    WEXFLAG,WEXAUTH  DEBUG MODE ?                     88084
         BM    SCHEDLPP      YES                                 88084
         TM    SCHEDSAV+4,X'80'  R1 OPTION BIT ON ?              90177
         BNZ   SCHEDLPP      YES; REMAIN IN SUPERVISOR MODE      90177
*LIST*   MODESET MODE=PROB   MAKE SPIE WORK                      83156
         MODESET MODE=PROB   MAKE SPIE WORK                      83156
SCHEDLPP L     R13,EXWCRMCD  LOAD USER'S CODE ADDRESS            83156
         LA    R15,USERENTY-USERCODE(,R13)  GET ENTRY ADDRESS    82200
         BALR  R14,(R15)     CALL IT                             82200
         BALR  R11,(0)       IN CASE USER CREAMED REGISTERS      83335
         USING SCHEDLPQ,R11  DECLARE TEMPORARY BASE              83335
SCHEDLPQ LA    R0,SCHEDLPQ-EXHBWORK   LOAD OFFSET               GP08073
         SLR   R11,R0        GET TRUE BASE BACK                 GP05005
         USING EXHBWORK,R11                                      83335
         L     R13,SQSP      RESTORE SQSP ADDRESS                82221
         MVC   SQSPIAD,SCHEDONX  RESTORE USER'S SPIE EXIT        82200
         MVC   SQSPICA+4(2),SCHEDONX+4  RESET MASK               83335
         TM    WEXFLAG,WEXAUTH  DEBUG MODE ?                     88084
         BM    SCHEXIT       YES                                 88084
*LIST*   MODESET MODE=SUP,KEY=ZERO  FREEMAIN, ETC.               83156
         MODESET MODE=SUP,KEY=ZERO  FREEMAIN, ETC.               83156
         B     SCHEXIT       AND QUIT                            82200
SCHEDLEX BALR  R11,(0)       MAKE LOCAL BASE                     83156
         LA    R12,SCHEDLEX-EXHBWORK+2  OFFSET TO EXIT           83156
         SLR   R11,R12       GET GLOBAL BASE BACK                83156
         L     R12,EXWCRMCD  LOAD USER'S CODE ADDRESS            83156
         USING USERCODE,R12  DECLARE IT                          83156
         L     R13,SQSP      LOAD SQA CODE                       83156
         ICM   R15,15,USERSPEX  TEST FOR EXIT                    83156
         BZ    SCHEDR4X      NONE; RETURN CODE 4                 83156
         ICM   R0,15,USERLOOP  TEST RETRY COUNTER                83156
         BNP   SCHEDR4X      EXCEEDED                            83156
         BCTR  R0,0                                              82200
         ST    R0,USERLOOP   REPLACE IT                          83156
         XC    USERSPEX(4),USERSPEX  SHOW EXIT TAKEN             83156
*LIST*   ONSPIE SCHEDLEX,X'2F',WORK=R14  RE-INSTATE SPIE EXIT    90183
         ONSPIE SCHEDLEX,X'2F',WORK=R14  RE-INSTATE SPIE EXIT    90183
         LM    R0,R14,USERSAVE   RELOAD USER'S REGISTERS         83156
         BR    R15           GO TO USER EXIT                     82200
         DROP  R12                                               82200
         SPACE 2                                                 82200
SCHEDR4X MVC   SQSPIAD,SCHEDONX   RESTORE USER'S SPIE EXIT       83156
         MVC   SQSPICA+4(2),SCHEDONX+4  RESET MASK               83335
         TM    WEXFLAG,WEXAUTH  DEBUG MODE ?                     88084
         BM    SCHEDR4       YES                                 88084
*LIST*   MODESET MODE=SUP,KEY=ZERO  FREEMAIN, ETC.               83156
         MODESET MODE=SUP,KEY=ZERO  FREEMAIN, ETC.               83156
SCHEDR4  MVI   SCRETCH+3,4   SET RETURN CODE 4                   82200
SCHEXIT  TM    WEXFLAG,WEXAUTH  DEBUG MODE ?                     88084
         BM    SCHEXIT0      YES; SKIP FREE; ETC.                88084
         TM    SCHEDFLG,SCHEDEST  ESTAE ISSUED ?                 82200
         BZ    SCHEXITM      NO; SKIP FREE                       82200
         ICM   R0,15,EXWCRMLN  STORAGE FREED ?                   82200
         BNZ   SCHEXITM      NO; KEEP ESTAE                      82200
*LIST*   ESTAE 0,BRANCH=YES,SVEAREA=(13)  KILL ESTAE             82200
         ESTAE 0,BRANCH=YES,SVEAREA=(13)  KILL ESTAE             82200
         NI    SCHEDFLG,255-SCHEDEST  RESET ESTAE FLAG           88347
SCHEXITM L     R2,SCSAVKEY   GET STORAGE KEY                     82200
*LIST*   MODESET KEYADDR=(2)  RESET STORAGE KEY                  82200
*TEST*   MODESET KEYADDR=(2)  RESET STORAGE KEY                  82200
*LIST*   MODESET MODE=PROB   RESTORE PROBLEM PROGRAM MODE        82200
         MODESET MODE=PROB   RESTORE PROBLEM PROGRAM MODE        82200
SCHEXIT0 LM    R0,R15,SCHEDSAV  RESTORE R0-R14; SET R15 RETURN CODE
         BR    R14           RETURN TO CALLER                    82200
         SPACE 2                                                 82200
SCHFREE  LA    R9,SCHEXIT    SET RETURN ADDRESS FROM SUBROUTINE  82200
         SPACE 1                                                 82200
SCHFREEP LM    R6,R7,EXWCRMLN  LOAD LENGTH/ADDRESS               82200
         XC    EXWCRMLN(8),EXWCRMLN  CLEAR                       82200
         LTR   R6,R6         ANY LENGTH ?                        82200
         BNPR  R9            NO; RETURN                          82200
         TM    WEXFLAG,WEXAUTH  DEBUG MODE ?                     88084
         BM    SCHFREE0      YES                                 88084
*LIST*   SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED='?'
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED='?'
         L     R4,SCSAVKEY   RELOAD CALLER'S KEY                 88084
*LIST* FREEMAIN RU,LV=(R6),A=(R7),SP=228,KEY=(R4),BRANCH=(YES,GLOBAL)
 FREEMAIN RU,LV=(R6),A=(R7),SP=228,KEY=(R4),BRANCH=(YES,GLOBAL) CSA
*LIST*   SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED='?'        82200
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED='?'        82200
         BR    R9            RETURN TO CALLER                    82200
SCHFREE0 FREEMAIN R,LV=(R6),A=(R7)  FREE SP0                     82200
         BR    R9                                                82200
         SPACE 1                                                 82200
SCHGREEP XC    EXWCRMLN(8),EXWCRMLN CLEAR JUST IN CASE           82200
         LTR   R6,R6         VALID LENGTH SPECIFIED ?            82200
         BNP   SCHEDR16      NO                                  82200
         TM    WEXFLAG,WEXAUTH  DEBUG MODE ?                     88084
         BM    SCHGREE0      YES                                 88084
*LIST*   SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED='?'
         SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED='?'
         L     R4,SCSAVKEY   RELOAD CALLER'S KEY                 88084
*LIST*   GETMAIN RC,LV=(R6),SP=228,KEY=(R4),BRANCH=(YES,GLOBAL)  88084
         GETMAIN RC,LV=(R6),SP=228,KEY=(R4),BRANCH=(YES,GLOBAL)  88084
         LR    R5,R15        SAVE RETURN CODE                    82200
         LR    R7,R1         SAVE ADDRESS                        82200
*LIST*   SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED='?'        82200
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED='?'        82200
SCHGREEC BXH   R5,R5,SCHEDR16   FAIL IF GETMAIN FAILED           82200
         STM   R6,R7,EXWCRMLN   SET LENGTH/ADDRESS IN WORK AREA  82200
         BR    R9            RETURN TO CALLER                    82200
SCHGREE0 GETMAIN R,LV=(R6)                                       82200
         SLR   R5,R5         FORCE RETURN CODE                   82200
         LR    R7,R1         COPY RETURN ADDRESS                 82200
         B     SCHGREEC      REJOIN COMMON                       82200
         SPACE 2                                                 82200
         LTORG ,                                                 82200
         SPACE 2                                                 82200
         POP   USING                                            GP97316
SCHEDSAV DC    15F'0'   1/3  SAVE AREA                           82200
SCHEDXC  EQU   *        2/3  AREA TO BE CLEARED WITH XC          82200
SCRETCH  DC    F'0'     3/3  RETURN CODE                         82200
SCSAVKEY DC    F'0'          STORAGE PROTECT KEY                 82200
SCHEDONX DC    A(0)          SAVE AREA FOR USER'S SPIE EXIT ADDRESS
         DC    Y(0)            SPIE MASK BITS                    83335
SCHEDXCL EQU   *-SCHEDXC     LENGTH TO BE CLEARED                82200
SCHECBLS DC    A(0),X'80',AL3(0)  STIMER/SCHEDULE ECB            82200
SCHWSTAE ESTAE STAEEXIT,CT,MF=L                                  82200
SCHEDFLG DC    X'00'         STATUS FLAG                         82200
SCHEDEST EQU   X'80'           ESTAE ISSUED                      82200
SCHEDENT DC    X'00'         ENTRY CODE                          82200
WEXFLAG  DC    X'00'         EXORCIST MODE FLAG                  88084
WEXSRB   EQU   X'80'           USE SRB MODE                      88084
WEXBUG   EQU   X'01'           ON IN DEBUG MODE                  88084
WEXAUTH  EQU   WEXSRB+WEXBUG   USE SCHEDULE IF NOT MIXED         88084
         SPACE 1                                                GP08082
         LTORG ,                                                GP08082
         SPACE 2
*   SUBROUTINE TO MANIPULATE OPTIONS CONTROL BLOCKS             GP08082
*     NOTE THAT INPUT R1 FOR GET AND DEL POINTS TO THE WANTED   GP08082
*     ID, NOT THE BLOCK START.                                  GP08082
*                                                               GP08082
*                                                               GP08082
         PUSH  USING                                            GP08147
WEXOPTS  LA    R15,8         PRESET BAD RETURN CODE             GP08082
         STM   R0,R15,SUBSAVE   AND SAVE FOR RETURN             GP08082
         BALR  R12,0                                            GP08147
         USING *,R12         MAKE LOCAL BASE                    GP08147
WEXOBIX  BIX   BASE=WEXOBIX,ERR=SUBEXITS,PFX=WEXO,              GP08147*
               LOC=(GET,     0 - GET/FIND A BLOCK               GP08082*
               DEL,          1 - FREE                           GP08082*
               ADD,          2 - ADD, BUT NO REPLACE            GP08082*
               REP,          3 - ADD OR REPLACE                 GP08082*
               CHA,          4 - REPLACE ONLY                   GP08082*
               FAL)          5 - FREE ALL ENTRIES               GP08082
         SPACE 1                                                GP08082
WEXOGET  SH    R1,=H'8'      FAKE POINTER ID AT 8(R1)           GP08082
         BAL   R14,WEXOFIND  FIND BLOCK - ID IN 8(R1)           GP08082
           LA  R2,0           ZERO IF NOT FOUND                 GP08171
         ST    R2,SUBSAVE1    RETURN 0 OR BLOCK ADDRESS IN R1   GP08082
         LTR   R2,R2         CHECK RETURN                       GP08171
         BZ    SUBEXITS      NOT FOUND - R15=8                  GP08082
WEXORET0 LA    R15,0                                            GP08082
WEXOCRUD ST    R15,SUBSAVEF              R15 = 0                GP08082
         B     SUBEXITS      RETURN                             GP08082
         SPACE 1                                                GP08082
WEXODEL  SH    R1,=H'8'      FAKE POINTER ID AT 8(R1)           GP08082
         BAL   R14,WEXOFIND  FIND REQUESTED BLOCK               GP08082
           B   WEXORET0      NOT FOUND IS ACCEPTABLE (?)        GP08082
         MVC   0(4,R3),0(R2)  UNCHAIN THIS BLOCK                GP08082
         L     R0,4(,R2)     GET BLOCK LENGTH                   GP08082
         FREEMAIN R,LV=(0),A=(R2)  FREE IT                      GP08082
WEXODLST C     R2,EXW@OPTS+4  LAST IN CHAIN ?                   GP08082
         BNE   WEXORET0      NO; JUST RETURN                    GP08082
         ST    R3,EXW@OPTS+4  UPDATE CHAIN END                  GP08082
         B     WEXORET0      AND RETURN                         GP08082
         SPACE 1                                                GP08082
WEXOADD  BAL   R14,WEXOFIND  FIND THIS ENTRY                    GP08082
           LA  R2,0           NOT FOUND                         GP08171
         ST    R2,SUBSAVE1    RETURN EXISTING ADDRESS IN R1     GP08082
         LTR   R2,R2          SET CC                            GP08171
         BNZ   SUBEXITS      FOUND - R15=8                      GP08082
WEXOGETM LR    R4,R1         SAVE CALLER'S BLOCK ADDRESS        GP08082
         ICM   R5,15,4(R1)   GET PROPOSED LENGTH                GP08082
         LA    R15,24        SET ERROR CODE AND MIN LENGTH      GP08082
         CR    R5,R15        LONG ENOUGH FOR HEADER?            GP08082
         BL    WEXOCRUD      INVALID; FAIL                      GP08082
         GETMAIN R,LV=(R5)   GET ONE                            GP08082
         LR    R14,R1        GET NEW BLOCK ADDRESS              GP08082
         LR    R15,R5        COPY LENGTH                        GP08082
         MVCL  R14,R4        FILL BLOCK                         GP08082
         MVC   0(4,R1),0(R3)  SAVE OLD LINK                     GP08171
         ST    R1,0(,R3)     LINK THIS BLOCK IN                 GP08082
         LR    R2,R3         SET FOR LAST BLOCK CHECK           GP08082
         LR    R3,R1         SET FOR LAST BLOCK CHECK           GP08082
         ST    R1,SUBSAVE1    RETURN NEW ADDRESS IN R1          GP08082
         B     WEXODLST      UPDATE CHAIN END                   GP08082
         SPACE 1                                                GP08082
WEXOREP  BAL   R14,WEXOFIND  FIND THIS ENTRY                    GP08082
           LA  R2,0           NOT FOUND                         GP08171
         ST    R2,SUBSAVE1    RETURN EXISTING ADDRESS IN R1     GP08082
         LTR   R2,R2          HAVE IT ?                         GP08171
         BNZ   WEXORET0      FOUND - R15=0                      GP08082
         B     WEXOGETM      ALLOCATE BLOCK AND COPY            GP08082
         SPACE 1                                                GP08082
WEXOCHA  BAL   R14,WEXOFIND  FIND THIS ENTRY                    GP08082
           LA  R2,0           NOT FOUND                         GP08171
         ST    R2,SUBSAVE1    RETURN EXISTING ADDRESS IN R1     GP08082
         LTR   R2,R2          HAVE IT ?                         GP08171
         BZ    SUBEXITS      NOT FOUND - R15=8                  GP08082
         L     R5,4(,R1)     GET NEW LENGTH                     GP08082
         L     R4,4(,R2)     GET OLD LENGTH                     GP08082
         CR    R5,R4         WILL NEW FIT OVER OLD ?            GP08082
         BH    WEXOCHAN      NO; GET NEW AND REPLACE, FREE OLD  GP08171
         LR    R4,R1         NEW DATA                           GP08082
         MVC   0(8,R1),0(R2)  SAVE OLD LINK/LEN                 GP08082
         MVCL  R2,R4         UPDATE DATA                        GP08082
         B     WEXORET0      SET GOOD RETURN                    GP08082
WEXOCHAN LR    R4,R1         SAVE CALLER'S BLOCK ADDRESS        GP08082
         GETMAIN R,LV=(R5)   GET STORAGE FOR IT                 GP08082
         LR    R14,R1        GET NEW BLOCK ADDRESS              GP08082
         LR    R15,R5        COPY LENGTH                        GP08082
         MVCL  R14,R4        FILL BLOCK                         GP08082
         MVC   0(4,R1),0(R2)  SAVE OLD LINK                     GP08171
         ST    R1,0(,R3)     LINK THIS BLOCK IN                 GP08082
         ST    R1,SUBSAVE1    RETURN NEW ADDRESS IN R1          GP08082
         LR    R3,R1         SAVE NEW ADDRESS                   GP08171
         L     R0,4(,R2)     GET BLOCK LENGTH                   GP08082
         FREEMAIN R,LV=(0),A=(R2)  FREE IT                      GP08082
         B     WEXODLST       LAST IN CHAIN ?                   GP08082
         SPACE 1                                                GP08082
WEXOFAL  LA    R4,EXW@OPTS   POINT TO CHAIN HEAD                GP08082
WEXOFALP ICM   R3,15,0(R4)   ANY MORE TO DO ?                   GP08082
         BZ    WEXOFALD      NO                                 GP08082
         LM    R15,R0,0(R3)  GET LINK AND SIZE                  GP08082
         ST    R15,0(,R4)    UPDATE QUEUE                       GP08082
         FREEMAIN R,LV=(0),A=(R3)  FREE IT                      GP08082
         B     WEXOFALP      DO NEXT                            GP08082
WEXOFALD XC    EXW@OPTS(8),EXW@OPTS                             GP08082
         B     WEXORET0      LATER FREEMAIN                     GP08082
         SPACE 1                                                GP08082
WEXOFIND LA    R3,EXW@OPTS   POINT TO QUEUE HEAD                GP08082
WEXOFILP ICM   R2,15,0(R3)   GET NEXT ELEMENT                   GP08082
         BZR   R14           RETURN +0   - NOT FOUND            GP08082
         CLC   8(8,R2),8(R1) REQUESTED ELEMENT ?                GP08082
         BHR   R14           NO; RETURN +0; INSERT AFTER R3     GP08082
         BE    4(,R14)       RETURN +4   - ENTRY FOUND          GP08082
         LR    R3,R2         SAVE PRIOR ELEMENT                 GP08082
         B     WEXOFILP      NOT REACHED YET                    GP08082
         POP   USING                                            GP08147
         SPACE 2                                                GP08090
*---------------------------------------------------------------------*
*    SUBROUTINE TO MOVE QUOTED DSN AND SUBSTITUTE PREFIX FOR SPECIALS *
*    INPUT ADDRESS/LEN IN R0, R1                                      *
*    OUTPUT ADDRESS/LEN IN R0, R1  WHEN CC >= 0   ERROR CC < 0        *
*---------------------------------------------------------------------*
         PUSH  USING                                            GP08147
WEXDODSN SLR   R15,R15                                          GP08090
         BCTR  R15,0                                            GP08090
         STM   R0,R15,SUBSAVE0    PRESET ERROR RETURN           GP08090
         BALR  R12,0                                            GP08147
         USING *,R12         MAKE LOCAL BASE                    GP08147
         MVC   WENDWK,WENDWK-1   CLEAR RETURN AREA              GP08090
         LTR   R6,R0         STRING START                       GP08090
         BZ    SUBEXITS      RETURN ERROR                       GP08090
         LTR   R7,R1         TEST LENGTH                        GP08090
         BNP   SUBEXITS                                         GP08090
         LA    R0,1            CHEAP CONSTANT                   GP08090
         CLI   0(R6),C''''   QUOTED STRING ?                    GP08090
         BE    WEXDODQS      YES                                GP08090
         CLI   0(R6),C'"'    QUOTED STRING ?                    GP08090
         BNE   WEXDODNQ      NO; CHECK TERMINATION              GP08090
WEXDODQS CH    R7,=H'3'      LONG ENOUGH FOR QUOTING ?          GP08090
         BL    SUBEXITS                                         GP08090
         LR    R5,R6         REMEMBER ADDRESS OF QUOTE          GP08090
         AR    R6,R0         SKIP QUOTE                         GP08090
         SR    R7,R0         ADJUST LENGTH                      GP08090
         BAL   R14,WEXDOPFX  LOOK FOR PREFIX                    GP08090
WEXDODQL CLC   0(1,R6),0(R5)  ANOTHER QUOTE ?                   GP08090
         BNE   WEXDODCP      NO; COPY CHARACTER                 GP08090
         AR    R6,R0                                            GP08090
         AR    R7,R0                                            GP08090
         BNP   WEXDODBK      END OF STRING                      GP08090
         CLC   0(1,R6),0(R5)  ANOTHER QUOTE ?                   GP08090
         BNE   WEXDODBK      NO; END OF STRING                  GP08090
WEXDODCP CLI   0(R6),C'('    MEMBER START ?                     GP08090
         BE    WEXDODBK                                         GP08090
         MVC   0(1,R2),0(R6)  COPY                              GP08090
         AR    R6,R0                                            GP08090
         AR    R2,R0                                            GP08090
         AR    R3,R0                                            GP08090
         CH    R3,=H'44'                                        GP08090
         BNL   WEXDODBK                                         GP08090
         SR    R7,R0                                            GP08090
         BP    WEXDODQL                                         GP08090
         B     WEXDODBK                                         GP08090
WEXDODNQ BAL   R14,WEXDOPFX  LOOK FOR PREFIX                    GP08090
         LTR   R7,R7         ANYTHING LEFT ?                    GP08090
         BNP   WEXDODBK      NO; TOO BAD                        GP08090
WEXDODNL CLI   0(R6),C' '    ENDING BLANK ?                     GP08090
         BE    WEXDODBK                                         GP08090
         CLI   0(R6),C','    ENDING COMMA ?                     GP08090
         BE    WEXDODBK                                         GP08090
         CLI   0(R6),C'('    MEMBER START ?                     GP08090
         BE    WEXDODBK                                         GP08090
         MVC   0(1,R2),0(R6)                                    GP08090
         AR    R2,R0                                            GP08090
         AR    R6,R0                                            GP08090
         AR    R3,R0                                            GP08090
         CH    R3,=H'44'     DONE ?                             GP08090
         BNL   WEXDODBK      YES; QUIT NOW                      GP08090
         SR    R7,R0                                            GP08090
         BP    WEXDODNL      DO ANOTHER                         GP08090
WEXDODBK ST    R3,SUBSAVE1   RETURN STRING LENGTH IN R1         GP08090
         CH    R7,=H'3'      ANY MORE DATA ?                    GP08090
         BL    WEXDOD67      PROVIDE FEEDBACK                   GP08090
         CLI   0(R6),C'('    MEMBER ?                           GP08090
         BNE   WEXDOD67      NO; RETURN                         GP08090
         AR    R6,R0                                            GP08090
         SR    R7,R0                                            GP08090
         LA    R15,8                                            GP08090
         LA    R2,WENDMEM                                       GP08090
WEXDOMLP CLI   0(R6),C')'                                       GP08090
         BE    WEXDOMUP                                         GP08090
         CLI   0(R6),C' '    SHORT SPECIFICATION ?              GP08090
         BE    WEXDOMUP                                         GP08090
         MVC   0(1,R2),0(R6)  MOVE ONE                          GP08090
         AR    R6,R0                                            GP08090
         AR    R2,R0                                            GP08090
         SR    R7,R0                                            GP08090
         BNP   WEXDOMUP      NO TRAILING )                      GP08152
         BCT   R15,WEXDOMLP  NO MORE THAN LEGAL                 GP08090
WEXDOMUP AR    R6,R0                                            GP08090
         SR    R7,R0                                            GP08090
         MVC   DB3,WENDMEM   RETURN MEMBER                      GP08090
WEXDOD67 STM   R6,R7,DB2     UPDATE PARSE POINTERS              GP08090
         B     SUBEXITS                                         GP08090
         SPACE 1                                                GP08090
WEXDOPFX LA    R2,WENDPFX    SET OUTPUT LOCATION                GP08090
         SR    R3,R3         CURRENT OUTPUT LENGTH              GP08090
         STM   R2,R3,SUBSAVE0   RETURN STRING START & LEN IN R0/R1
         ST    R3,SUBSAVEF   NO PREFIX                          GP08090
         ICM   R1,15,EXW@DSOP   IS THERE A PREFIX TABLE ?       GP08090
         BZR   R14           NO; JUST RETURN                    GP08090
         ICM   R15,15,0(R1)    LOAD ENTRY COUNT                 GP08090
         BNPR  R14           MAJOR BOO BOO ?                    GP08090
WEXDOPLP CLC   0(1,R6),4(R1)   USER'S MATCHES PREFIX CHARACTER ?GP08090
         BE    WEXDOPMV      YES; MOVE IT                       GP08090
         LA    R1,32(,R1)    MAPPED BY MAPXOPTS                 GP08090
         BCT   R15,WEXDOPLP  TRY AGAIN                          GP08090
         BR    R14           NO MATCH                           GP08090
WEXDOPMV MVC   0(30,R2),6(R1)  MOVE PREFIX                      GP08090
         IC    R3,5(,R1)     SET PREFIX LENGTH                  GP08090
         AR    R2,R3         POINT PAST PREFIX                  GP08090
         AR    R6,R0         SKIP PREFIX CHAR                   GP08090
         SR    R7,R0         ADJUST LENGTH                      GP08090
         BNP   WEXDOPEX      NOTHING MORE TO DO                 GP08090
         TM    0(R6),X'F0'   NUMERIC FOLLOWS ?                  GP08090
         BO    WEXDOPNU      YES                                GP08090
         CLI   0(R6),C'.'    POSSIBLE DOUBLED INDEX?            GP08090
         BNE   WEXDOPEX      NO; SET LENGTH AND RETURN          GP08090
         LA    R15,WENDPFX-1(R3)  LAST BYTE OF PREFIX           GP08090
         CLI   0(R15),C'.'   ALSO A PERIOD ?                    GP08090
         BNE   WEXDOPEX                                         GP08090
         BCTR  R3,0          USE USER'S INDEX POINT INSTEAD     GP08090
         B     WEXDOPEX                                         GP08090
WEXDOPNU LA    R15,WENDPFX-2(R3)   POINT NEAR PREFIX END        GP08090
         CLI   1(R15),C'.'   TRAILING PERIOD ?                  GP08090
         BE    *+8                                              GP08090
         LA    R15,1(,R15)                                      GP08090
         TM    0(R15),X'F0'  TRAILING DIGIT ?                   GP08090
         BNO   WEXDOPEX      NO                                 GP08090
         MVC   0(1,R15),0(R6)  REPLACE NUMERIC                  GP08090
         AR    R6,R0         ADJUST INPUT                       GP08090
         SR    R7,R0         ADJUST IN LENGTH                   GP08090
WEXDOPEX ST    R3,SUBSAVE1   SHOW PREFIX                        GP08090
         BR    R14           RETURN UPDATED POINTERS            GP08090
         DC    C' '            NEED TO CLEAR                    GP08090
WENDWK   DC    0CL(44+8)' '  DSN CONSTRUCTION WORK AREA         GP08090
WENDPFX  DC    CL44' '                                          GP08090
WENDMEM  DC    CL8' '        MEMBER NAME                        GP08090
         LTORG ,                                                GP08147
         POP   USING                                            GP08147
         SPACE 2                                                 91202
         PUSH  USING                                            GP08147
         USING LOOKUNIT,R12  LOCAL BASE                          91202
         USING EXHBWORK,R11  CALLER SUPPLIED                     91202
         USING EXHBSQSP,R13  CALLER SUPPLIED                     91202
         AIF   (&REL LT 103).OLDUCBS                            GP04234
LOOKUNIT BAL   R9,UNITINIT   INITIALIZE UCB SEARCH               91202
         LTR   R3,R1         ANY UCB ?                           91202
         BNZ   SCANUCB1      YES; CONTINUE                       91209
         XC    UNITWORK(UNITCLR),UNITWORK  CLEAR WORK AREA       91202
         XC    UNITPREV,UNITPREV                                 91209
         LA    R14,UNITWORK  LOAD WORK AREA                      91202
         LA    R15,UNITCLAS  LOAD CLASS POINTER (=>0)            91202
         LA    R0,UNITPTR    GET UCB ADDRESS POINTER             91202
         STM   R14,R0,UNITPARM  MAKE LIST                        91202
         OI    UNITPARM+8,X'80'  SET END OF LIST                 91202
SCANUCB1 BAL   R9,UNITLOOP   FIND UCB ADDRESS IN R3              91202
*DEFER*  USING UCBOB,R3      DECLARE IT                          91202
         MVC   UNITPREV,UZBNAME(R3)  GET EBCDIC UCB NAME         91202
         XC    UNITPREV,UNIT000    PUT INTO SEQUENCE             91202
STOREUCB ST    R3,SUBSAVE+4  SET INTO RETURN R1                  91202
         LTR   R1,R3         ANY ?                               91202
         BNZ   SUBEXITS      RETURN OK                           91202
         MVI   SUBSAVEF+3,8  SET RETURN CODE 8                   91202
         B     SUBEXITS      AND RETURN                          91202
         SPACE 1                                                 91202
UNITINIT L     R4,CVTPTR     GET CVT                             91202
         USING CVTMAP,R4                                         91202
         L     R4,CVTUCBSC   LOAD LOOK-UP ROUTINE ADDRESS        91202
         BR    R9            RETURN                              91202
         SPACE 1                                                 91202
UNITBUMP DS    0H                                                91202
UNITLOOP LA    R1,UNITPARM   GET SEARCH PARAMETER LIST           91202
         LR    R15,R4        COPY LOOK-UP ROUTINE ENTRY          91202
         BALR  R14,(R15)     LOOK A LITTLE                       91202
         BXH   R15,R15,UNITENDS  NO MORE                         91202
         L     R3,UNITPTR    LOAD THE UCB POINTER                91202
*MAP*    TM    UCBWGT,UCBMTPXP  MULTIPLE EXPOSURE DEVICE ?       91202
*MAP*    BZR   R9            NO; RETURN                          91202
*MAP*    CL    R3,UCBBASE    BASE UCB ?                          91202
*MAP*    BNE   UNITLOOP      NO; SKIP THIS ONE                   91202
         BR    R9            RETURN TO CALLER                    91202
UNITENDS SLR   R3,R3         CLEAR POINTER                       91202
         B     STOREUCB      AND QUIT                            91202
         DROP  R4                                                91202
UNIT000  DC    C'000'        XC MASK FOR NUM/ALPHA COLLATING     91202
UNITPREV DC    CL3' '        SAVE CURRENT UCB                    91202
UNITPARM DS    A(UNITWORK,UNITCLAS,UNITPTR)                      91202
UNITWORK DS    XL100         WORK AREA                           91202
UNITPTR  DS    A             RETURNED UCB ADDRESS                91202
UNITCLAS DS    X             REQUESTED DEVICE CLASS OR 0         91202
UNITCLR  EQU   *-UNITWORK    SIZE TO CLEAR                       91202
         AGO   .COMUCBS                                         GP04234
.OLDUCBS ANOP  ,                                                GP04234
LOOKUNIT LA    R5,2          ENTRY SIZE                         GP04234
         LTR   R3,R1         ANY UCB ?                           91202
         BNZ   SCANUCB1      YES; CONTINUE                       91209
         L     R4,CVTPTR     GET CVT                             91202
         USING CVTMAP,R4                                         91202
         L     R4,CVTILK2    LOAD LOOK-UP TABLE                 GP04234
         XC    UNITPREV(UNITCLR),UNITPREV  CLEAR WORK AREA       91202
         B     UNITLOOP      GET FIRST USABLE UCB               GP04234
         DROP  R4                                               GP04234
SCANUCB1 L     R4,UNITPTR+4  REPOSITION                         GP04234
         MVC   UNITPREV,UZBNAME(R3)  PRIOR EBCDIC UCB NAME      GP04234
         XC    UNITPREV,UNIT000  PUT INTO NUMERIC/ALPHA COLLATING SEQ
         SPACE 1                                                 91202
UNITBUMP AR    R4,R5         NEXT ENTRY                         GP08184
UNITLOOP SR    R3,R3         CLEAR FOR ICM                      GP04234
         ICM   R3,3,0(R4)    COPY LOOK-UP ROUTINE ENTRY
         BZ    UNITBUMP      FILLER - SKIP                      GP04234
         CL    R3,UNITMASK   LAST ENTRY ?                       GP08240
         BE    UNITENDS      TOO BAD                            GP04234
         MVC   DB(3),UZBNAME(R3)   COPY EBCDIC UCB NAME
         XC    DB(3),UNIT000  PUT INTO NUMERIC/ALPHA COLLATING SEQ
         CLC   DB(3),UNITPREV   THIS CUU LOWER THAN PREVIOUS ?
         BNH   UNITBUMP      NO, SKIP IT
*MAP*    TM    UCBWGT,UCBMTPXP  MULTIPLE EXPOSURE DEVICE ?       91202
*MAP*    BNZ   UNITBUMP      NO; RETURN                          91202
*MAP*    CL    R3,UCBBASE    BASE UCB ?                          91202
*MAP*    BNE   UNITBUMP      NO; SKIP THIS ONE                   91202
         STM   R3,R4,UNITPTR  SAVE FOR NEXT CALL                GP08184
STOREUCB ST    R3,SUBSAVE+4  SET INTO RETURN R1                  91202
         LTR   R1,R3         ANY ?                               91202
         BNZ   SUBEXITS      RETURN OK                           91202
         MVI   SUBSAVEF+3,8  SET RETURN CODE 8                   91202
         B     SUBEXITS      AND RETURN                          91202
UNITENDS SLR   R3,R3         CLEAR POINTER                       91202
         B     STOREUCB      AND QUIT (NO STORE - PREVENT LOOP)  91202
UNIT000  DC    C'000'        XC MASK FOR NUM/ALPHA COLLATING     91202
UNITPREV DC    CL3' '        SAVE CURRENT UCB                    91202
UNITPTR  DS    A,A           RETURNED UCB ADDRESS & POINTER      91202
UNITCLR  EQU   *-UNITPREV    SIZE TO CLEAR                       91202
UNITMASK DC    X'0000FFFF'   MASK AND END ENTRY                 GP04234
.COMUCBS EJECT ,                                                 84001
*        EXTENDED, MVS DEPENDENT, REQUESTS                       84001
*                                                                84001
         DROP  ,                                                 84001
         USING EXLOCSVT,R12                                      84001
         USING EXHBWORK,R11                                      84001
         USING EXHBSQSP,R13                                      84001
EXLOCSVT XC    HASPHCT(HASPTABE-HASPHCT),HASPHCT  CLEAR PTR      84001
         XC    EXWJ2AID(8),EXWJ2AID  CLEAR RESULT POINTERS       84001
         AIF   (&REL GT 500).DOLATER                            GP97288
         L     R6,CVTPTR     GET THE CVT                         84001
         USING CVTMAP,R6                                         84001
         ICM   R5,15,CVTJESCT  SUBSYSTEM VECTOR TABLE            84001
         BNP   EXTFERR       MAJOR BOOBOO                        84001
         USING JESCT,R5      DECLARE IT                          84001
         CLI   EXWJ2NAM,C' '   SUBSYSTEM DEFAULTED ?             84001
         BH    EXLOCHSY      NO                                  87265
         MVC   EXWJ2NAM(L'JESPJESN),JESPJESN  COPY PRIMARY NAME  84001
         L     R4,PSATOLD-PSA  GET MY TCB BACK                   87265
         L     R4,TCBJSCB-TCB(,R4)  GET THE JSCB                 87265
         ICM   R4,15,JSCBSSIB-IEZJSCB(R4)  TEST S$IB             87265
         BZ    EXLOCHSY      LEAVE PRIMARY                       87265
         CLI   S$IBSSNM-S$IB(R4),C' '  SUBSYSTEM PRESENT ?       87265
         BNH   EXLOCHSY      NO; KEEP PRIMARY                    87265
         CLC   EXLOCNMS,S$IBSSNM-S$IB(R4)  RUNNING ALONE ?       87265
         BE    EXLOCHSY      YES; KEEP PRIMARY                   87265
         MVC   EXWJ2NAM(4),S$IBSSNM-S$IB(R4) USE STARTER'S NAME  87265
         NEED  TCB,JSCB                                          87265
S$IB     EQU   0                                                 87265
S$IBSSNM EQU   8,4,C'C'                                          87265
EXLOCHSY LA    R5,JESSSCT-(SSCTSCTA-SSCT)  CHEAT                 84001
         USING SSCT,R5                                           84001
EXLOCSLP ICM   R5,15,SSCTSCTA   GET NEXT SSCVT                   84001
         BNP   EXTFERR       USER CHOSE BAD NAME ?               84001
         CLC   SSCTSNAM,EXWJ2NAM  DESIRED SUBSYSTEM ?            84001
         BNE   EXLOCSLP      NO                                  84001
         ICM   R4,15,SSCTSSVT  TEST FOR SVT                      84001
         BNP   EXTFERR       NONE ?                              84001
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           84001
         USING ASVT,R15                                          84001
         L     R0,ASVTMAXU   GET HIGHEST VALID ASID              84001
         SLL   R0,2          *4 FOR FAST CHECK                   84001
         SLR   R1,R1         SET INDEX FOR NEXT ASID             84001
EXLOCSAD LA    R1,4(,R1)     GET NEXT ASID INDEX                 84001
         CR    R1,R0         VALID ?                             84001
         BH    EXTFERR       NO; QUIT                            84001
EXLOCSOM LA    R3,ASVTFRST(R1)  POINT TO ASCB POINTER            84001
         ICM   R3,15,0(R3)   LOAD AND TEST                       84001
         BNP   EXLOCSAD      SKIP UNUSED/FREE SLOT               84001
         USING ASCB,R3                                           84001
         ICM   R2,15,ASCBJBNI  JOB CSCB ?                        84001
         BNZ   EXLOCSAD      YES; SKIP                           84001
         ICM   R2,15,ASCBCSCB  GET THE START CSCB                84001
         BZ    EXLOCSAD                                          84001
         USE   CSCB,R2       DECLARE THE CSCB                    84001
         CLI   CHVCD,X'04'   START CODE ?                        84001
         BNE   EXLOCSAD      NO                                  84001
         CLC   CHCLS,EXWJ2NAM   MATCHING ID ?                    84001
         BNE   EXLOCSAD      NO                                  84001
         LH    R0,ASCBASID   GET AS ID                           84001
         CH    R0,CHASID     JUST IN CASE                        84001
         BNE   EXLOCSAD                                          84001
         NEED  $HCT          REQUEST $SVT EXPANSION              84001
         AIF   (NOT &MVS).OLDHCT                                GP04234
         USING SSVT,R4       DECLARE THE $SVT                    84001
         ICM   R2,15,$SVPIT  INITIATOR POINTER ?                 84001
         BZ    EXTFERR       NO ?                                84001
         C     R3,$SVPOSTE+4  SAME ASCB IN $SVT                  84001
         BNE   EXTFERR       NO                                  84001
         AIF   (&REL LT 106).OLDLOKE                             87330
         CLC   SVTSSNM,EXWJ2NAM  CORRECT MAPPING ?               87330
         AGO   .COMLOKE                                          87330
.OLDLOKE CLC   $SVQLOKE,EXWJ2NAM  RIGHT EXPANSION ?              87266
.COMLOKE BNE   EXTFERR       NO; ERROR ?                         84001
         AGO   .COMHCT                                          GP04234
.OLDHCT  USING HCTDSECT,R4                                      GP04234
         L     R2,$PITABLE   PIT POINTER                        GP04234
         C     R3,$HASCB     VERIFY ASCB ADDRESS                GP04234
         BNE   EXTFERR       HUH?                               GP04234
.COMHCT  ST    R2,HASPPIT    SAVE                                84001
         ST    R3,EXWJ2ASC   RETURN ASCB ADDRESS                 84001
         ST    R4,HASPHCT    SAVE SVT ADDRESS                    84001
         ST    R0,EXWJ2AID   SET ASID                            84001
         SLR   R15,R15       SET GOOD RETURN CODE                84001
         B     EXTFEXIT      AND GO BACK                         84001
EXLOCNMS DC    C'MSTR'       NON-JES STARTER                     87265
         AGO   .NOLATER                                         GP97288
.DOLATER B     EXTFERR       NO SVT AT PRESENT                  GP97288
.NOLATER SPACE 1                                                 84001
         POP   USING                                            GP04234
WSFRESP  DC    2XL256'0'     WSF QUERY REPLY                     87166
         SPACE 1                                                 87172
COLORMAP DC    C'46464646232300004646464623230000'  INPUT/NUM.IN 87172
         DC    C'11115555777700001111555577770000'  PROT/P.SKIP  87172
         DC    AL1(0),C'1234567'  SFE COLOR MAPPING              87172
         SPACE 1                                                 87172
COLORSET DC    C'46464646232300004646464623230000'  INPUT/NUM.IN 87172
         DC    C'11115555777700001111555577770000'  PROT/P.SKIP  87172
         DC    AL1(0),C'1234567'  SFE COLOR MAPPING              87172
         SPACE 2                                                 89253
         PUSH  USING                                            GP04234
         USING *,R12                                            GP08147
PAGFIXER TM    OPTS,DEBUG    RUNNING IN DEBUG MODE ?             83360
         BNZ   SUBEXITS      YES; EXIT WITH ERROR CODE           83360
         MVI   SUBSAVEF+3,4  REDUCE ERROR CODE TO 4              83360
         LR    R7,R0         COPY REQUESTED PAGE ADDRESS         83360
         AM31  WORK=R15      JUST IN CASE                       GP97316
         N     R7,PAGFPMSK   CLEAN FOR XA                       GP05005
         ST    R7,DB+4                                           83360
         LR    R14,R11       COPY BASE                          GP08082
         AH    R14,=AL2(PASTFIXS-EXHBWORK)  RELOCATE            GP08082
         LR    R15,R14       SAVE START OF TABLE                 83360
         LA    R0,3          SET INCREMENT                       83360
         LA    R1,PASTFIXX-3-PASTFIXS(R14)  LAST ENTRY           83360
PAGEFIXO CLM   R7,B'1110',0(R14)  DID WE FIX THIS PAGE BEFORE ?  83360
         BNE   PAGEFIXG      TRY AGAIN                           83360
         MVI   SUBSAVEF+3,0  RESET ERROR CODE                    83360
         B     SUBEXITS      RETURN TO USER                      83360
PAGEFIXG BXLE  R14,R0,PAGEFIXO  TRY AGAIN                        83360
         MVC   0(PASTFIXX-PASTFIXS-3,R15),3(R15)  SLIDE DOWN     83360
         STCM  R7,B'1110',PASTFIXX-3-PASTFIXS(R15)  SAVE CURRENT ONE
         AIF   (&REL LT 200).PAGESP1  PRE-XA ?                   91202
*LIST*   MODESET MODE=SUP,KEY=ZERO  SUP NORMAL, K0 FOR DEBUG    GP05020
         MODESET MODE=SUP,KEY=ZERO  SUP NORMAL, K0 FOR DEBUG    GP05020
*L*  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,RELATED=(UNCLE)
     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,RELATED=(UNCLE)
         SLR   R4,R4         NO OWNING TCB                       91202
         N     R7,PAGSTMSK   MAKE PAGE START ADDRESS            GP05005
         LR    R5,R7         COPY START ADDRESS                  91202
         AL    R5,PAGNDMSK   MAKE PAGE END ADDRESS              GP05005
         LA    R2,DB         ECB ADDRESS                         91202
         PGSER R,FIX,A=(R7),EA=(R5),TCB=0,ECB=(R2),LONG=Y,             *
               BRANCH=Y,RELATED=NONE  FIX THE PAGE               91202
         LR    R3,R15        SAVE RETURN CODE                    91202
*LIST*   SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=UNCLE      91203
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=UNCLE      91203
*LIST*   MODESET MODE=PROB   RETAIN KEY ZERO                     91202
         MODESET MODE=PROB   RETAIN KEY ZERO                     91202
         CH    R3,PAGDCH8    NEED TO WAIT                       GP05005
         BNE   PAGEFIXX      NO                                  91202
         WAIT  ECB=DB        WAIT FOR COMPLETION                 91202
         ICM   R3,7,DB+1     LOAD RETURN CODE                    91202
PAGEFIXX ST    R3,SUBSAVEF   RETURN RETURN CODE                  91202
         B     SUBEXITS      RETURN TO CALLER                    91202
         AGO   .PAGESP2                                          91202
.PAGESP1 LA    R4,2          DO PAGE-FIX TWICE                   83360
PAGEFIXL LA    R2,DB                                             83360
         MVI   DB,0          JUST IN CASE                        83360
*LIST*   PGFIX R,A=(R7),ECB=(R2),LONG=Y,RELATED=(AUNT)           83360
         PGFIX R,A=(R7),ECB=(R2),LONG=Y,RELATED=(AUNT)           83360
         LTR   R15,R15       TEST RETURN                         83360
         BZ    PAGEFIXP      CONTINUE                            83360
         CH    R15,PAGDCH8                                      GP05005
         BNE   SUBEXITS      TOO BAD                             83360
         WAIT  ECB=DB        WAIT FOR COMPLETION                 83360
         ICM   R15,7,DB+1    TEST COMPLETION                     83360
         BNZ   SUBEXITS      QUIT WITH ERROR                     83360
PAGEFIXP BCT   R4,PAGEFIXL   FIX IT TWICE                        83360
         L     R4,SQIQTCB    GET MY TCB                          83360
         NUSE  TCB,R4        DECLARE IT                          83360
*LIST*   MODESET MODE=SUP,KEY=ZERO  GET VERY PRIVILEGED         GP05020
         MODESET MODE=SUP,KEY=ZERO  GET VERY PRIVILEGED         GP05020
*SETLOCK OBTAIN,TYPE=SALLOC,REGS=USE,MODE=UNCOND,RELATED=(UNCLE) 83360
 SETLOCK OBTAIN,TYPE=SALLOC,REGS=USE,MODE=UNCOND,RELATED=(UNCLE) 83360
         ICM   R5,7,TCBFOEA  GET THE FOE CHAIN                   83360
         USING FOE,R5        DECLARE IT                          83360
         BZ    PAGEFIXB      NONE ?                              83360
         ICM   R6,3,DB+5     GET ADDRESS FIXED                   83360
         N     R6,PAGFOMSK   CONVERT TO FOE FORMAT              GP05005
PAGEFIXF CLM   R6,3,FOEVINDX  SAME VIRTUAL PAGE ADDRESS ?        83360
         BE    PAGEFIXD      YES                                 83360
         ICM   R5,7,FOEFLINK   GET NEXT                          83360
         BNZ   PAGEFIXF                                          83360
         B     PAGEFIXB      TERMINATE WITH ERROR                83360
PAGEFIXD LH    R2,FOEFXCT    GET FIX COUNT                       83360
         BCTR  R2,0          SET TO LEAVE FIXED                 GP05005
         LTR   R2,R2         CHECK                              GP05005
         BNP   PAGEFIXB      ERROR IF NOT AT LEAST 1             83360
         STH   R2,FOEFXCT    STASH IT BACK                       83360
         MVI   SUBSAVEF+3,0  RESET ERROR FLAG                    83360
PAGEFIXB DS    0H            ERROR AND GOOD TERMINATION          83360
*LIST*   SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=(UNCLE)    83360
         SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=(UNCLE)    83360
*LIST*   MODESET MODE=PROB  RESTORE KEY ZERO ONLY                83360
         MODESET MODE=PROB  RESTORE KEY ZERO ONLY                83360
         CLI   SUBSAVEF+3,0  ANY ERROR ?                         83360
         BNZ   SUBEXITS      YES; RETURN ERROR CODE              83360
         LA    R2,DB                                             83360
*LIST*   PGFREE R,A=(R7),ECB=(R2),RELATED=(AUNT)  ONCE (LEAVE IT FIXED)
         PGFREE R,A=(R7),ECB=(R2),RELATED=(AUNT)  ONCE (LEAVE IT FIXED)
         B     SUBEXITS      GO TO COMMON EXIT                   83360
         LTORG ,                                                GP08164
PAGFOMSK DC    0A(0),X'0000FFF0'   FOE FORMAT MASK              GP05005
.PAGESP2 POP   USING                                            GP04234
PAGSTMSK DC    0A(0),X'7FFFF000'   MAKE PAGE START ADDRESS      GP05005
PAGNDMSK DC    X'00000FFF'   MAKE PAGE END ADDRESS              GP05005
         AIF   (&REL LT 200).PAGEND1                             91203
PAGFPMSK DC    X'7FFFF000'   CLEAN FOR XA                       GP05005
         AGO   .PAGEND2                                          91203
.PAGEND1 ANOP  ,                                                GP05005
PAGFPMSK DC    X'00FFF000'   CLEAN FOR XA                       GP05005
.PAGEND2 ANOP  ,                                                GP05005
PAGDCH8  DC    H'8'                                             GP05005
         SPACE 1                                                 82199
PASTFIXS DC    32XL3'0'      PAGES FIXED BEFORE                  83360
PASTFIXX EQU   *             LAST PAGE ADDRESS+3                 83360
         SPACE 2
*   SUBROUTINE TO HANDLE DISPLAY OUTPUT FOR XLINE MACRO         GP08164
*          THE FIRST BUFFER LINE IS RESERVED FOR A TITLE LINE.  GP08288
*          IN (SC)ROLL MODE, THE BOTTOM LINE IS THE INPUT AREA  GP08288
*                                                               GP08164
         PUSH  USING                                            GP08164
WEXSPLIN STM   R0,R15,SUBSAVE     SAVE EVERYTHING               GP08164
         BALR  R12,0              MAKE LOCAL BASE               GP08164
         USING *,R12              DECLARE IT                    GP08164
WEXSPBAS SRL   R15,8         GET RID OF OPTION BITS             GP08164
         SLL   R15,1         CONVERT ENTRY CODE TO DISPLACEMENT GP08164
         SR    R5,R5              SET FITS/MOVER FLAG TO MOVE   GP08164
         LH    R6,LSIZE           SET LINE SIZE                 GP08164
         LH    R15,WEXSPLOC(R15)  LOAD BRANCH OFFSET            GP08164
         B     0(R15,R12)    INVOKE REQUESTED FUNCTION          GP08164
WEXSPLOC DC    AL2(SPINITA-WEXSPBAS)   0 - KEEP BUFFER AND INIT
         DC    AL2(SPINITB-WEXSPBAS)   1 - BLNK BUFFER AND INIT
         DC    AL2(SPTITLE-WEXSPBAS)   2 - MOVE A TITLE LINE
         DC    AL2(SPCONLN-WEXSPBAS)   3 - ADVANCE A LINE IF USED
         DC    AL2(SPLINUP-WEXSPBAS)   4 - UNCONDITIONAL LINE ADVANCE
         DC    AL2(SPMOVEL-WEXSPBAS)   5 - MOVE R0 LENGTH       GP08306
         DC    AL2(SPMOVEB-WEXSPBAS)   6 - MOVE B-CON LENGTH
         DC    AL2(SPFITTS-WEXSPBAS)   7 - LOCATE - TEST FIT
         DC    AL2(SPUNHEX-WEXSPBAS)   8 - UNPACK HEX TEXT
         DC    AL2(SPROLLS-WEXSPBAS)   9 - ROLL A LINE UP
         DC    AL2(SPUNINT-WEXSPBAS)  10 - FORMAT INTEGER IN R1 GP11221
         DC    AL2(SPINCOL-WEXSPBAS)  11 - SET COLOR            GP13017
         DC    AL2(SPINHIG-WEXSPBAS)  12 - SET HIGH-LIGHTING    GP13017
         SPACE 1
SPINITB  L     R14,BUFAD          CLEAR ENTIRE BUFFER           GP13283
         L     R15,SQ@BUFL                                      GP13283
         SH    R15,=H'32'         JUST IN CASE                  GP13283
         L     R1,=X'40000000'    CLEAR TO BLANKS               GP08164
         MVCL  R14,R0             CLEAR IT                      GP08164
         SPACE 1                                                GP08164
SPINITA  STH   R0,EXWSMIND        SAVE INDENTATION VALUE        GP08164
         LR    R4,R6              GET LINE SIZE                 GP08164
         SR    R4,R0              GET DATA LENGTH               GP08164
         STH   R4,EXWSMDAL        SAVE DATA LENGTH              GP08164
         LA    R3,160             ARBITRARY TEXT MAXIMUM        GP08171
         SR    R2,R2              FOR DIVIDE                    GP08171
         DR    R2,R4              NUMBER OF LINES               GP08171
         SR    R2,R2                                            GP13017
         MR    R2,R4              MAX LENGTH ALLOWED            GP08171
         STH   R3,EXWSMMXL        ALLOW (AND SPLIT) UP TO THIS  GP08171
         MVC   EXWSMCUR,BUFAD     GET TOP OF SCREEN             GP08164
         MVC   EXWSMEND,MSGAD     GET END OF SCREEN             GP13017
         ZI    EXWSMFLG,EXWSMRMD  RESET ROLL MODE               GP08288
         TM    SUBSAVEF+3,X'80'   RUN IN ROLL MODE ?            GP08288
         BZ    SPLINUP            NO; FORCE LINE ADVANCE        GP08288
         OI    EXWSMFLG,EXWSMRMD  RESET ROLL MODE               GP08288
         LH    R3,LNO             GET LINES ON SCREEN           GP08171
         SH    R3,=H'2'           FINAGLE                       GP08171
         STC   R3,EXWSMROL        SET ROLL COUNT                GP08171
         L     R1,EXWSMEND        GET END OF BUFFER             GP13017
         SR    R1,R6              BACK UP ONE LINE              GP08288
         SR    R1,R6              BACK UP ONE LINE              GP08288
         ST    R1,EXWSMCUR        SET AS CURRENT LINE ADDRESS   GP08288
         AH    R1,EXWSMIND        ADD INDENT                    GP08288
         ST    R1,EXWSMDAT        SET DATA START                GP08288
         B     WEXSPEX1           AND RETURN                    GP08288
         SPACE 1                                                GP08164
SPCONLN  L     R1,EXWSMCUR        GET LINE ADDRESS              GP08164
         C     R1,EXWSMEND        SCREEN FULL ?                 GP13017
         BNL   WEXSPEX1           YES; DON'T AGGRAVATE          GP08171
         TM    SUBSAVEF+3,1       SET NEW INDENT ?              GP08164
         BZ    SPCONLNO           NO                            GP08164
         STH   R0,EXWSMIND        UPDATE INDENT                 GP08164
SPCONLNO LR    R15,R6             COPY LINE SIZE                GP08171
         BCTR  R15,0              SET EXECUTE LENGTH            GP08171
         CLI   0(R1),C' '         IS LINE BLANK ?               GP08171
         BNE   SPLINUP            NO; BUMP A LINE               GP08171
         EX    R15,EXSPBCLC       ALL BLANK ?                   GP08171
         BE    SPLINEUS           YES, USE LINE AS IS           GP08164
         SPACE 1                                                GP08164
SPLINUP  L     R1,EXWSMCUR        GET START OF CURRENT LINE     GP08164
         C     R1,EXWSMEND        SCREEN FULL ?                 GP13017
         BNL   WEXSPEX1           YES; DON'T AGGRAVATE          GP08171
         TM    EXWSMFLG,EXWSMRMD  ROLL MODE ?                   GP08288
         BZ    SPLINEUM           NO                            GP08288
         BAL   R14,SPSUBROL       ROLL AND ADJUST               GP08288
         L     R1,EXWSMCUR        RESTORE NEW VALUE             GP08288
         B     SPLINES2                                         GP08288
SPLINEUM AR    R1,R6              GET NEXT LINE ADDRESS         GP08164
         LR    R15,R6             COPY LINE SIZE                GP08171
         BCTR  R15,0              SET EXECUTE LENGTH            GP08171
         BCTR  R15,0              SET EXECUTE LENGTH            GP08171
         MVI   0(R1),C' '         MAKE A BLANK                  GP08171
         EX    R15,EXSPBLNK       BLANK LINE                    GP08171
SPLINEUS MVC   0(80,R1),BLANKS    CLEAR NEW LINE JUST IN CASE   GP08164
SPLINES1 ST    R1,EXWSMCUR        STASH NEW LINE ADDRESS        GP08164
SPLINES2 LR    R0,R1              COPY OVER                     GP08164
         AH    R0,EXWSMIND        GET START OF DATA ON THIS LINEGP08164
         ST    R0,EXWSMDAT        AND SAVE                      GP08164
         B     WEXSPEX1           RETURN WITH CONDITION CODE SETGP08164
         SPACE 1                                                GP08164
SPTITLE  LR    R2,R1              COPY SOURCE ADDRESS           GP08164
         SR    R4,R4              INDENT FOR COLOR              GP13017
         LTR   R3,R0              R0=LEN OR B-CON ?             GP08164
         BP    SPTITL0            R0 HAS LENGTH                 GP08164
         SR    R3,R3                                            GP08164
         IC    R3,0(,R2)          INSERT LENGTH                 GP08164
         LA    R2,1(,R2)          SKIP LENGTH BYTE              GP08164
SPTITL0  MINH  R3,(R6)            NO MORE THAN ONE LINE         GP08164
         LTR   R0,R3                                            GP08164
         BNP   WEXSPEX1           RETURN ERROR                  GP08164
         L     R1,BUFAD           GET TOP OF BUFFER             GP08164
         CLI   0(R1),X'28'        COLOR ?                       GP13017
         BNE   *+8                  NO                          GP13017
         LA    R4,3               SET INDENT FOR COLOR          GP13017
         AR    R1,R6              SPACE TO END                  GP08164
         SR    R1,R3              LESS TEXT LENGTH              GP08164
         CH    R6,=H'80'          STANDARD OR WIDE SCREEN ?     GP08164
         BNH   SPTITLX            NOT WIDE                      GP08164
         L     R1,BUFAD           RESTORE START ADDRESS         GP08164
         AR    R1,R4              ALLOW FOR SA ORDER            GP13017
         LR    R15,R6             GET LINE WIDTH                GP08164
         SR    R15,R3             UNUSED SPACE                  GP08164
         SRA   R15,1              HALVE                         GP08164
         AR    R1,R15             MORE OR LESS CENTER           GP08164
SPTITLX  BCTR  R3,0               SET FOR EXECUTE               GP08164
         AR    R1,R4              ALLOW FOR SA ORDER            GP13017
         EX    R3,EXSPMVC         MOVE TO TOP LINE              GP08164
         INC   EXWSMEND,INC=(R4)  ALSO INCREASE END             GP13017
         L     R1,BUFAD           ALSO                          GP13017
         AR    R1,R4                GET                         GP13017
         AR    R1,R6                  ADDRESS                   GP13017
         B     SPLINES1                 OF NEW LINES            GP13017
         SPACE 1                                                GP08164
SPMOVEB  LA    R2,1(,R1)          PRESERVE USER'S DATA ADDRESS  GP08164
         SR    R0,R0              CLEAR FOR IC                  GP08164
         IC    R0,0(,R1)          LOAD TEXT LENGTH              GP08164
         B     SPMOVELC           JOIN COMMON CODE              GP08164
         SPACE 1                                                GP08306
SPMOVEL  LR    R2,R1         SAVE START TEXT ADDRESS            GP08306
SPMOVELC TM    SUBSAVEF+3,4  TRIM TRAILING BLANKS ?             GP08306
         BZ    SPMOVEC       NO                                 GP08306
         LTR   R0,R0         VALID LENGTH ?                     GP08306
         BNP   SPMOVEC       NO; WILL GET IGNORED               GP08306
         AR    R1,R0         END ADDRESS                        GP08306
SPMOVELT BCTR  R1,0          PRIOR BYTE                         GP08306
         TM    0(R1),255-C' '   NON-BLANK, NON-NULL?            GP08306
         BNZ   SPMOVEC       YES; HAVE LENGTH                   GP08306
         BCT   R0,SPMOVELT   TRY AGAIN                          GP08306
         LA    R0,1          SET FOR LENGTH OF ONE, ANYWAY      GP08306
         B     SPMOVEC            JOIN COMMON CODE              GP08306
         SPACE 1                                                GP08164
SPUNHEX  SLA   R0,1               HEX - DOUBLE INPUT LENGTH     GP08164
         LA    R5,2               SIMILAR TO FITS, BUT LOCAL    GP08164
         B     SPMOVER            JOIN COMMON                   GP08164
         SPACE 1
*---------------------------------------------------------------------*
*   INTEGER PROCESSING       VALUE IN R1, RIGHT ADJUSTED LENGTH IN R0 *
*                            LEN=0 USE SIGNIFICANT LENGTH             *
*                            WHEN LEN TOO SMALL, DISPLAY *?*          *
*---------------------------------------------------------------------*
SPUNINT  LTR   R3,R1         PRESERVE SIGNED VALUE              GP11221
         MVC   SPCONWRK,SPCONPAT  REFRESH CONVERSION AREA       GP11221
         CVD   R1,SPDB       CONVERT TO PACKED                  GP11221
         LA    R1,SPCONWRK+L'SPCONWRK-1  SET EXPECTED STOPPER   GP11221
         EDMK  SPCONWRK,SPDB+2    MAKE PRINTABLE                GP11221
         LTR   R3,R3         WAS IT NEGATIVE ?                  GP11221
         BNM   SPUNINTP        NO                               GP11221
         BCTR  R1,0          BACK UP ONE                        GP11221
         MVI   0(R1),C'-'    AND SET SIGN                       GP11221
SPUNINTP LA    R15,SPCONWRK+L'SPCONWRK                          GP11221
         SR    R15,R1        GET LENGTH                         GP11221
         BP    SPUNINTZ                                         GP11221
         LA    R15,1         SHOULD NEVER HAPPEN ?              GP11221
SPUNINTZ LTR   R0,R0         DID USER SPECIFY A LENGTH ?        GP11221
         BZ    SPUNINTA        NO; USE ACTUAL                   GP11221
         CR    R15,R0        IS REQUIRED LENGTH LARGER ?        GP11221
         BNH   SPUNINTB        NO                               GP11221
         LA    R0,3          SET FOR ERROR                      GP11221
         LA    R1,=C'*?*'    SHOW OVERFLOW                      GP11221
         B     SPMOVER                                          GP11221
SPUNINTA LR    R0,R15        USE ACTUAL LENGTH                  GP11221
SPUNINTB LA    R1,SPCONWRK+L'SPCONWRK                           GP11221
         SR    R1,R0         LEFT-MOST SIGNIFICANT BYTE         GP11221
         B     SPMOVER                                          GP11221
         SPACE 1                                                GP08164
SPFITTS  LA    R5,1               SET FLAG FOR FITS ENTRY       GP08164
         MVC   SUBSAVE+4(4),EXWSMDAT  PROVISIONALLY USE CURRENT GP08164
SPMOVER  LR    R2,R1              PRESERVE USER'S DATA ADDRESS  GP08164
SPMOVEC  L     R1,EXWSMDAT        GET NEXT DATA ADDRESS         GP08164
         C     R1,EXWSMEND        SCREEN FULL ?                 GP13017
         BNL   WEXSPEX1           YES; DON'T AGGRAVATE          GP08171
         MINH  R0,EXWSMMXL        TRUNCATE IF TOO LONG          GP08164
         CH    R5,=H'1'           FITS ?                        GP08171
         BNE   SPMOVLP            NO                            GP08171
         MINH  R0,EXWSMDAL        LIMITED TO ONE LINE           GP08171
*   RESTART FOR LONG TEXT > ONE LINE                            GP08171
SPMOVLP  LTR   R3,R0              ANY AT ALL ?                  GP08164
         BNM   *+6                YES                           GP08164
         SR    R3,R3              DON'T BOMB                    GP08164
         MINH  R3,EXWSMDAL        ONE LINE                      GP08171
         CH    R5,=H'2'           HEX ?                         GP08171
         BNE   SPMOVNH            NO                            GP08171
         SRA   R3,1               HALVE                         GP08171
         SLA   R3,1               USE ONLY EVEN VALUES          GP08171
         ST    R3,SUBSAVE         REMEMBER THE LINE LENGTH      GP08171
SPMOVNH  L     R14,EXWSMCUR       GET LINE START                GP08164
         AR    R14,R6             START OF NEXT LINE            GP08164
         CH    R0,EXWSMDAL        WILL IT EVER FIT ?            GP13017
         BH    SPMOV2S              NO; DO PARTIAL              GP13017
         LA    R15,0(R3,R1)       FITS ON THIS LINE ?           GP08164
         CR    R15,R14            DOES IT FIT ?                 GP08164
         BNH   SPMOVEX              YES; MOVE IT                GP08164
         B     SPMOV2L              NO; START NEW LINE          GP13017
SPMOV2S  LH    R15,EXWSMIND       GET INDENT                    GP13017
         SR    R14,R6             LESS LINE LENGTH              GP08164
         AR    R15,R14            PLUS NEXT LINE START          GP13017
         C     R15,EXWSMDAT       IS IT SAME AS CURRENT START?  GP13017
         BE    SPMOV2T              YES; USE THIS LINE          GP13017
SPMOV2L  LR    R1,R14             USE START OF NEXT LINE        GP08164
         ST    R1,EXWSMCUR        STASH NEW LINE ADDRESS        GP08164
         AH    R1,EXWSMIND        GET START OF DATA ON THIS LINEGP08164
         ST    R1,EXWSMDAT        AND SAVE                      GP08164
SPMOV2T  TM    EXWSMFLG,EXWSMRMD  ROLL MODE ?                   GP08288
         BZ    SPMOV2LR           NO                            GP08288
         BAL   R14,SPSUBROL       ROLL AND ADJUST               GP08288
         L     R1,EXWSMDAT        RESTORE NEW VALUE             GP08288
SPMOV2LR L     R15,EXWSMEND       IS IT END OF SCREEN ?         GP13017
         SR    R15,R1             SET SPACE REMAINING           GP08164
         BNP   WEXSPEX1           NO ROOM TO MOVE - RETURN      GP08164
         CH    R5,=H'1'           FITS ?                        GP08171
         BE    SPFITTS            YES; RESTART                  GP08171
SPMOVEX  CH    R5,=H'1'           WAS THIS MOVE OR FITS ?       GP08164
         BE    SPMOVEFX           FITS; SKIP MOVEMENT           GP08164
         BH    SPMOVEH            HEX                           GP08171
         SH    R3,=H'1'           MAKE EXECUTE LENGTH           GP08164
         BM    WEXSPEX1           NONE; RETURN                  GP08164
         EX    R3,EXSPMVC         MOVE TEXT TO BUFFER           GP08164
         TM    SUBSAVEF+3,X'20'   INHIBIT TRANSLATION ?         GP10245
         BNZ   SPMOVET              YES; SKIP AROUND            GP10245
         ICM   R15,15,SQTRANS TRANSLATE TABLE AVAILABLE ?       GP04234
         BZ    SPMOVET       NO; SKIP                           GP04234
         AH    R15,8(,R15)   ADD OFFSET TO OUTPUT TABLE         GP04234
         EX    R3,EXSPTRN    MAKE PRINTABLE PER TERM TYPE       GP04234
SPMOVET  LA    R1,2(R3,R1)        MAKE NEW ADDRESS              GP08164
         TM    SUBSAVEF+3,2       FORCE NEW LINE ?              GP08164
         BZ    SPMOVET2           NO                            GP08164
         L     R1,EXWSMCUR        GET START OF LINE             GP08164
         AR    R1,R6              AND FORCE NL NEXT TIME        GP08164
         B     SPMOVET4                                         GP08164
SPMOVET2 TM    SUBSAVEF+3,1       SUPPRESS SPACING ?            GP08164
         BZ    SPMOVET4           NO                            GP08164
SPMOVET3 BCTR  R1,0               WILL ABUT NEXT ITEM           GP08164
SPMOVET4 ST    R1,EXWSMDAT        AND STASH IT                  GP08164
         LA    R3,1(,R3)          RESTORE LINE DATA LENGTH      GP13017
         AR    R2,R3              NEXT INPUT BYTE               GP13017
         SR    R0,R3              RESIDUAL LENGTH               GP08171
         BNP   SPMOVET6           GET OUT NOW                   GP13017
         L     R1,EXWSMCUR        GET START OF LINE             GP13017
         AR    R1,R6              SKIP TO NEXT LINE             GP13017
         ST    R1,EXWSMCUR        SET START OF LINE             GP13017
         AH    R1,EXWSMIND                                      GP13017
         ST    R1,EXWSMDAT        START OF NEW DATA             GP13017
         C     R1,EXWSMEND        WILL IT FIT ?                 GP13017
         BL    SPMOVLP            DO NEXT FRAGMENT              GP13017
SPMOVET6 L     R0,EXWSMEND                                      GP13017
         SR    R0,R1                                            GP08164
         BM    WEXSPEST           NO FIT                        GP08164
         O     R1,=X'80000000'    SET DATA MOVED FLAG           GP08164
         B     WEXSPEST                                         GP08288
         SPACE 1                                                GP08171
*   CONVERT TO HEX - R1 IS O/P START                            GP08164
SPMOVEH  LM    R3,R4,SUBSAVE      RESTORE LENGTH & ADDRESS      GP08164
         SRA   R3,1               BACK TO INPUT LENGTH          GP08164
         BNP   SPMOVEFX           DO NOTHING                    GP08164
SPMOVEFL CH    R3,=H'4'           FULL WORD ?                   GP08164
         BL    SPMOVEFB           NO                            GP08164
         MVC   DB(4),0(R4)        MOVE TO SAFE UNPACK AREA      GP08164
         UNPK  DB(9),DB(5)        UNPACK ONE WORD               GP08164
         TR    DB(8),SPHEXTAB-C'0'  MAKE PRINTABLE              GP08164
         MVC   0(8,R1),DB         OUTPUT AREA                   GP08164
         LA    R4,4(,R4)          NEXT INPUT                    GP08164
         LA    R1,8(,R1)          NEXT OUTPUT                   GP08164
         SH    R3,=H'4'           ADJUST                        GP08164
         BP    SPMOVEFL           REPEAT                        GP08164
         B     SPMOVEFU           ELSE EXIT                     GP08164
SPMOVEFB MVC   DB(1),0(R4)        MOVE TO SAFE UNPACK AREA      GP08164
         UNPK  DB(3),DB(2)        UNPACK ONE BYTE               GP08164
         TR    DB(2),SPHEXTAB-C'0'  MAKE PRINTABLE              GP08164
         MVC   0(2,R1),DB         OUTPUT AREA                   GP08164
         LA    R4,1(,R4)          NEXT INPUT                    GP08164
         LA    R1,2(,R1)          NEXT OUTPUT                   GP08164
         BCT   R3,SPMOVEFB        REPEAT                        GP08164
SPMOVEFU ST    R4,SUBSAVE+4       UPDATE INPUT ADDRESS          GP08288
         L     R3,SUBSAVE         RELOAD O/P LENGTH             GP08171
         SR    R0,R3              RESIDUAL LENGTH               GP08171
         SRA   R3,1               UP BY INPUT LENGTH            GP08171
         AR    R2,R3              NEXT MOVE BYTE                GP08171
         LTR   R0,R0              MORE TO DO ?                  GP08171
         BP    SPMOVLP            YES                           GP08171
         ST    R1,EXWSMDAT        HOW FAR WE'VE COME            GP08171
         B     SPMOVEFY           CHECK                         GP08171
         SPACE 1                                                GP08171
SPMOVEFX ST    R15,EXWSMDAT       AND STASH IT                  GP08164
SPMOVEFY L     R0,EXWSMEND                                      GP13017
         SR    R0,R1                                            GP08164
         BM    WEXSPEX1           NO FIT                        GP08164
         O     R1,=X'80000000'    SET DATA MOVED FLAG           GP08164
SPMOVEN  L     R2,EXWSMDAT        NEXT DESTINATION              GP08164
         L     R4,EXWSMCUR        START OF LINE                 GP08164
         AR    R4,R6              NEXT LINE                     GP08164
         TM    SUBSAVEF+3,2       FORCE NEW LINE ?              GP08164
         BO    SPMOVEN2           YES                           GP08164
         TM    SUBSAVEF+3,1       SUPPRESS SPACING ?            GP08164
         BNZ   SPMOVEN1           YES                           GP08164
         LA    R2,1(,R2)          ADD ONE MORE                  GP08171
         ST    R2,EXWSMDAT        NEXT DESTINATION              GP08288
SPMOVEN1 CR    R2,R4              LINE FULL ?                   GP08164
         BL    WEXSPEST           NOT YET                       GP08164
SPMOVEN2 ST    R4,EXWSMDAT        SET NEW START LINE            GP08164
         B     WEXSPEST                                         GP08164
         SPACE 2                                                GP08164
WEXSPEX1 L     R0,EXWSMEND        IS IT END OF SCREEN ?         GP13017
         SR    R0,R1              SET SPACE REMAINING           GP08164
WEXSPEST ST    R0,SUBSAVE         PASS RESIDUAL LENGTH          GP08164
         CH    R5,=H'1'           SPFITS ?                      GP08164
         BE    WEXSPEXT           YES; R1 SET                   GP08164
         ST    R1,SUBSAVE+4       GIVE ADDRESS TO USER          GP08164
WEXSPEXT LM    R0,R15,SUBSAVE          RESTORE CALLER'S REGS    GP08164
         LTR   R0,R0                   SET CONDITION CODE       GP08164
         BR    R14                     RETURN R1 ADDRESS        GP08164
         SPACE 2                                                GP08171
SPROLLS  BAL   R14,SPSUBROL  ROLL A LINE                        GP08288
         L     R1,EXWSMDAT   GET DATA ADDRESS                   GP08288
         B     WEXSPEX1      AND RETURN                         GP08288
         SPACE 1
SPSUBROL STM   R14,R3,SPROLLSV    SAVE A BIT                    GP08288
         L     R2,BUFAD                                         GP08171
         AR    R2,R6         DESTINATION ADDRESS - SECOND LINE  GP08171
         L     R3,EXWSMEND   LAST SOURCE BYTE + 1               GP13017
         SR    R3,R2         LENGTH TO MOVE + CLEAR ONE LINE    GP08171
         LA    R0,0(R6,R2)   SOURCE START                       GP08288
         L     R1,EXWSMEND   END OF  SCREEN                     GP13017
         SR    R1,R0         LENGTH TO MOVE                     GP08288
         ICM   R1,8,BLANKS   BLANK FILL LAST LINE               GP08288
         MVCL  R2,R0         ROLL SCREEN                        GP08288
         ICM   R1,1,EXWSMROL   LOAD AND TEST PRIOR ROLL COUNT   GP08288
         BZ    SPSUBRFL           FULL PAGE DONE                GP08288
         BCTR  R1,0          DECREMENT                          GP08288
         STC   R1,EXWSMROL   UPDATE IT                          GP08288
SPSUBRFL L     R1,EXWSMEND        GET END OF BUFFER             GP13017
         SR    R1,R6              BACK UP ONE LINE              GP08288
         SR    R1,R6              BACK UP ONE LINE              GP08288
         ST    R1,EXWSMCUR        SET AS CURRENT LINE ADDRESS   GP08288
         AH    R1,EXWSMIND        ADD INDENT                    GP08288
         ST    R1,EXWSMDAT        SET DATA START                GP08288
SPSUBREX LM    R14,R3,SPROLLSV    RESTORE                       GP08288
         BR    R14                AND RETURN                    GP08288
         SPACE 1
*---------------------------------------------------------------------*
*   COLOR PROCESSING    VALUE IN R1                                   *
*     IGNORED IF COLOR NOT SUPPORTED                                  *
*     'CHEATS' BY ADVANCING SCREEN END                                *
*---------------------------------------------------------------------*
SPINCOL  TM    SQSIMFG,SQSIF79    COLOR SUPPORTED ?             GP13017
         BZ    WEXSPEX1             NO; IGNORE REQUEST          GP13017
         L     R2,EXWSMDAT        NEXT DESTINATION              GP13017
         MVC   0(2,R2),X2842      MOVE COLOR ORDER              GP13017
         B     SPINCOH            JOIN COMMON                   GP13017
         SPACE 1
*---------------------------------------------------------------------*
*   EXTENDED HIGH-LIGHTING        VALUE IN R1                         *
*     IGNORED IF EXTENDED HIGH-LIGHTING NOT SUPPORTED                 *
*     'CHEATS' BY ADVANCING SCREEN END                                *
*---------------------------------------------------------------------*
SPINHIG  TM    SQSIMFG,SQSIF78    EXTENDED HIGH-LIGHTING ?      GP13017
         BZ    WEXSPEX1             NO; IGNORE REQUEST          GP13017
         L     R2,EXWSMDAT        NEXT DESTINATION              GP13017
         MVC   0(2,R2),X2841      MOVE HIGH-LIGHTING ORDER      GP13017
SPINCOH  STC   R1,2(,R2)          STASH REQUEST                 GP13017
         NI    2(R2),X'07'        CLEAN IT                      GP13017
         OI    2(R2),X'F0'        MAKE LEGAL                    GP13017
         INC   EXWSMCUR,INC=3     BUMP LINE START               GP13017
         INC   EXWSMEND,INC=3     BUMP BUFFER END               GP13017
         INC   EXWSMDAT,INC=3,WORK=R1  NEXT POSITION            GP13017
         B     WEXSPEX1             AND RETURN                  GP13017
         SPACE 2                                                GP08164
EXSPMVC  MVC   0(0,R1),0(R2)      MOVE STUFF TO SCREEN          GP08164
EXSPTRN  TR    0(0,R1),0(R15)     MAKE SURE IT'S PRESENTABLE    GP08164
EXSPBCLC CLC   0(0,R1),1(R1)      IS LINE BLANK ?               GP08171
EXSPBLNK MVC   1(0,R1),0(R1)      MAKE LINE BLANK               GP08171
SPDB     DC    D'0'          WORK AREA                          GP11221
SPROLLSV DC    6A(0)         SUBROUTINE SAVE                    GP08288
SPCONPAT DC    X'402020202020202020202120'                      GP11221
SPCONWRK DC    X'402020202020202020202120'                      GP11221
SPHEXTAB DC    C'0123456789ABCDEF'                              GP08164
X2841    DC    X'2841'       SET ATTRIBUTE HIGH-LIGHTING        GP13017
X2842    DC    X'2842'       SET ATTRIBUTE COLOR                GP13017
         LTORG ,
         POP   USING                                            GP08164
         SPACE 2                                                 88248
*        EXCP I/O FRONT END FOR 3180 EXPLICIT PARTITION I/O      88248
*                                                                88248
         PUSH  USING                                            GP04234
         DROP  ,                                                 88248
XPARTIO  LR    R12,R15       MAKE LOCAL BASE                     88248
         USING XPARTIO,R12   DECLARE IT                          88248
         USING EXHBSQSP,R13  DECLARE SQSP WORK AREA              88248
         USING EXHBWORK,R11  DECLARE WORK AREA                   88248
         TM    EXWXPFLG,EXWXPAV+EXWXPUS  RUNNING EXPLICIT PART?  88248
         BNO   SQDFLIO       NO; JUST EXCP                       88248
         L     R2,SQIOBCCW-SQIOB(,R1)  GET THE CCW               88248
         LM    R4,R5,0(R2)   LOAD THE CCW ADDRESS AND LENGTH     88248
         CLI   0(R2),X'0D'   IS IT AN ERASE/WRITE ALTERNATE ?    88248
         BE    XPARTIOS      YES; CONVERT                        88248
         CLI   0(R2),X'05'   IS IT AN ERASE/WRITE ?              88248
         BE    XPARTIOS      YES; CONVERT                        88248
         CLI   0(R2),X'01'   PLAIN WRITE ?                       88248
         BNE   SQDFLIO       NO; JUST EXCP                       88248
         NI    0(R4),255-X'40'  RESET RESET BIT                  88248
         B     SQDFLIO       AND EXCP                            88248
XPARTIOS NI    0(R4),255-X'40'  RESET THE RESET BIT              88248
         CLM   R4,7,BCCAD+1  WRITE FOR STANDARD BUFFER ?         88248
         BNE   SQDFLIO       NO; CAN'T PREFIX                    88248
         LH    R7,6(,R2)     GET PLAIN LENGTH                    88248
         LA    R6,0(,R4)     GET CLEANED BUFFER ADDRESS          88248
         LA    R15,15        GET LENGTH OF PREFIX                88248
         SR    R6,R15        BACK-UP TO PREFIX                   88248
         LA    R7,5(,R7)     LENGTH + 3270DS PREFIX              88248
         STCM  R7,3,10(R6)   SET DATA LENGTH                     88248
         LA    R7,10(,R7)    LENGTH + EXPLICIT PARTITION         88248
         STCM  R6,7,XPARTCCW+1  SET START ADDRESS                88248
         STH   R7,XPARTCCW+6  AND LENGTH                         88248
         MVC   3(1,R6),EXWXPNM  SET CURENT PARTITION NUMBER      88248
         MVC   6(2,R6),LNO   COPY ROWS                           88248
         MVC   8(2,R6),LSIZE  AND COLUMNS                        88248
         MVI   14(R6),X'7E'  SET FOR ALTERNATE                   88248
         CLI   0(R2),X'05'   BUT WAS IT DEFAULT ?                88248
         BNE   *+8           NO                                  88248
         MVI   14(R6),X'F5'  SET ERASE/WRITE                     88248
         LA    R15,XPARTCCW  POINT TO MY CCW                     88248
         ST    R15,SQIOBCCW-SQIOB(,R1)  STASH IT                 88248
         LR    R3,R1         SAVE IOB ADDRESS                    88248
         EXCP  (1)           ISSUE THE I/O                       88248
         L     R1,SQIOBECB-SQIOB(,R3)  LOAD THE ECB ADDRESS      88248
         WAIT  ECB=(R1)      WAIT FOR COMPLETION                 88248
         ST    R2,SQIOBCCW-SQIOB(,R3) RESTORE THE CCW ADDRESS    88248
         B     SQEXCPX       RELOAD REGISTERS AND RETURN         88248
XPARTCCW CCW   X'11',0,0,0   WSF PATTERN                         88248
         POP   USING                                            GP04234
         SPACE 2
         DS    0H            ALIGN TABLES FOR EXHT3278          GP04234
*        BUFFER ADDRESS TRANSLATION TABLE
ZONETR   DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'   0 - 15
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'  16 - 31
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'  32 - 47
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'  48 - 63
         SPACE 1                                                 82002
TRTOASC  TRTAB TYPE=ETOA     EBCDIC TO ASCII                     91202
TRFRASC  TRTAB TYPE=ATOE     ASCII TO EBCDIC                     91202
TRTOISC  TRTAB TYPE=ETOI     EBCDIC TO ISCII                     91202
TRFRISC  TRTAB TYPE=ITOE     ISCII TO EBCDIC                     91202
***********************************************************************
**   TRANSLATE SERVICE - MUST START AT TRFRISC+256 (EXHAINIT)        **
***********************************************************************
EXHT3278 XTRANHED MOD=WORK                                      GP15263
         SPACE 2
*        TABLE TO CONVERT DATA ONLY TO OUTPUT
*
OUTDATA  DC    256C'.'       UNPRINTABLES SHOWN AS PERIOD       GP08243
         ORG   OUTDATA+C' '
         DC    C' '          BLANK
         ORG   OUTDATA+X'4A'
         DC    X'4A4B4C4D4E4F50' CNT,PER,LESSTH,L.PAR,PLUS,OR,AMP
         ORG   OUTDATA+X'5A'
         DC    X'5A5B5C5D5E5F6061' EXC,DOL,AST,R.PAR,S.COL,NOT,MIN,SL
         ORG   OUTDATA+X'6A'                                     93117
         DC    X'6A6B6C6D6E6F' COM,PERC,UNDER,GREATTH,QUEST      93117
         ORG   OUTDATA+X'7A'
         DC    X'7A7B7C7D7E7F'  COL,POUND,AT,APOST,EQU,QUOTE
         ORG   OUTDATA+X'81'
         DC    X'818283848586878889'  LOW A-I
         ORG   OUTDATA+X'91'
         DC    X'919293949596979899'  LOW J-R
         ORG   OUTDATA+X'A2'
         DC    X'A2A3A4A5A6A7A8A9'    LOW S-Z
         ORG   OUTDATA+X'C1'
         DC    X'C1C2C3C4C5C6C7C8C9'  A-I
         ORG   OUTDATA+X'D1'
         DC    X'D1D2D3D4D5D6D7D8D9'  J-R
         ORG   OUTDATA+X'E2'
         DC    X'E2E3E4E5E6E7E8E9'    S-Z
         ORG   OUTDATA+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9'  0-9
         ORG   OUTDATA+X'8B'
         DC    X'C0'         LEFT-BRACE
         ORG   OUTDATA+X'9B'
         DC    X'D0'         RIGHT-BRACE
         ORG   OUTDATA+X'6A'
         DC    X'6A'         STROKE
         ORG   OUTDATA+X'79'
         DC    X'79'         REV. APOSTROPHE
         ORG   OUTDATA+X'A1'
         DC    X'A1'         SIMILAR
         ORG   OUTDATA+X'BA'                                    GP08107
         DC    X'BABB'       LEFT & RIGHT BRACKET               GP08107
         ORG   OUTDATA+X'B0'                                    GP13007
         DC    X'B0'         CARET                              GP13007
         ORG   OUTDATA+X'C0'                                     93117
         DC    X'C0'         LEFT-BRACE                          93117
         ORG   OUTDATA+X'D0'                                     93117
         DC    X'D0'         RIGHT-BRACE                         93117
         ORG   OUTDATA+X'E0'
         DC    X'E0'         REV. SLASH
         ORG   ,
         SPACE 2
*        TABLE TO TRANSLATE OUTPUT WITH CONTROL SEQUENCES
*
OUTCON   DC    256C'.'       UNPRINTABLES SHOWN AS PERIOD       GP08243
         ORG   OUTCON+C' '
         DC    C' '          BLANK
         ORG   OUTCON+X'4A'
         DC    X'4A4B4C4D4E4F50' CNT,PER,LESSTH,L.PAR,PLUS,OR,AMP
         ORG   OUTCON+X'5A'
         DC    X'5A5B5C5D5E5F6061' EXC,DOL,AST,R.PAR,S.COL,NOT,MIN,SL
         ORG   OUTCON+X'6A'                                      93117
         DC    X'6A6B6C6D6E6F'    COM,PERC,UNDER,GREATTH,QUEST   93117
         ORG   OUTCON+X'7A'
         DC    X'7A7B7C7D7E7F'  COL,POUND,AT,APOST,EQU,QUOTE
         ORG   OUTCON+X'81'
         DC    X'818283848586878889'  LOW A-I
         ORG   OUTCON+X'91'
         DC    X'919293949596979899'  LOW J-R
         ORG   OUTCON+X'A2'
         DC    X'A2A3A4A5A6A7A8A9'    LOW S-Z
         ORG   OUTCON+X'C1'
         DC    X'C1C2C3C4C5C6C7C8C9'  A-I
         ORG   OUTCON+X'D1'
         DC    X'D1D2D3D4D5D6D7D8D9'  J-R
         ORG   OUTCON+X'E2'
         DC    X'E2E3E4E5E6E7E8E9'    S-Z
         ORG   OUTCON+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9'  0-9
         ORG   OUTCON+X'05'
         DC    X'05'         PROG. TAB
         ORG   OUTCON+X'08'
         DC    X'08'         GE
         ORG   OUTCON+X'0C'
         DC    X'0C0D'       PRINTER FF, CR
         ORG   OUTCON+X'11'
         DC    X'111213'     SBA,EUA,IC
         ORG   OUTCON+X'15'
         DC    X'15'         PRINTER NL
         ORG   OUTCON+X'19'
         DC    X'19'         PRINTER EM
         ORG   OUTCON+X'1C'
         DC    X'1C1D1E'     DUP,SF,FM
         ORG   OUTCON+X'3C'
         DC    X'3C'         RA
         ORG   OUTCON+X'8B'
         DC    X'C0'         LEFT-BRACE
         ORG   OUTCON+X'9B'
         DC    X'D0'         RIGHT-BRACE
         ORG   OUTCON+X'6A'
         DC    X'6A'         STROKE
         ORG   OUTCON+X'79'
         DC    X'79'         REV. APOSTROPHE
         ORG   OUTCON+X'A1'
         DC    X'A1'         SIMILAR
         ORG   OUTCON+X'B0'                                     GP13007
         DC    X'B0'         CARET                              GP13007
         ORG   OUTCON+X'BA'                                     GP08107
         DC    X'BABB'       LEFT & RIGHT BRACKET               GP08107
         ORG   OUTCON+X'C0'                                      93117
         DC    X'C0'         LEFT-BRACE                          93117
         ORG   OUTCON+X'C0'                                      93117
         DC    X'D0'         RIGHT-BRACE                         93117
         ORG   OUTCON+X'E0'
         DC    X'E0'         REV. SLASH
         ORG   ,
         SPACE 2
*        TABLE TO CONVERT INPUT DATA
*
INUPLOW  DC    256C'.'       UNPRINTABLES SHOWN AS PERIOD       GP08243
         ORG   INUPLOW
         DC    C' '          TREAT NULL AS BLANK
         ORG   INUPLOW+C' '
         DC    C' '          BLANK
         ORG   INUPLOW+X'4A'
         DC    X'4A4B4C4D4E4F50' CNT,PER,LESSTH,L.PAR,PLUS,OR,AMP
         ORG   INUPLOW+X'5A'
         DC    X'5A5B5C5D5E5F6061' EXC,DOL,AST,R.PAR,S.COL,NOT,MIN,SL
         ORG   INUPLOW+X'6A'                                     93117
         DC    X'6A6B6C6D6E6F'    COM,PERC,UNDER,GREATTH,QUEST   93117
         ORG   INUPLOW+X'7A'
         DC    X'7A7B7C7D7E7F'  COL,POUND,AT,APOST,EQU,QUOTE
         ORG   INUPLOW+X'81'
         DC    X'818283848586878889'  LOW A-I
         ORG   INUPLOW+X'91'
         DC    X'919293949596979899'  LOW J-R
         ORG   INUPLOW+X'A2'
         DC    X'A2A3A4A5A6A7A8A9'    LOW S-Z
         ORG   INUPLOW+X'C1'
         DC    X'C1C2C3C4C5C6C7C8C9'  A-I
         ORG   INUPLOW+X'D1'
         DC    X'D1D2D3D4D5D6D7D8D9'  J-R
         ORG   INUPLOW+X'E2'
         DC    X'E2E3E4E5E6E7E8E9'    S-Z
         ORG   INUPLOW+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9'  0-9
         ORG   INUPLOW+X'C0'
         DC    X'8B'         LEFT-BRACE
         ORG   INUPLOW+X'D0'
         DC    X'9B'         RIGHT-BRACE
         ORG   INUPLOW+X'6A'
         DC    X'6A'         STROKE
         ORG   INUPLOW+X'79'
         DC    X'79'         REV. APOSTROPHE
         ORG   INUPLOW+X'A1'
         DC    X'A1'         SIMILAR
         ORG   INUPLOW+X'B0'                                    GP13007
         DC    X'B0'         CARET                              GP13007
         ORG   INUPLOW+X'BA'                                    GP08107
         DC    X'BABB'       LEFT & RIGHT BRACKET               GP08107
         ORG   INUPLOW+X'E0'
         DC    X'E0'         REV. SLASH
         ORG   ,
         SPACE 2
*        TABLE TO CONVERT INPUT DATA; LOWER CASE FOLDED TO UPPER
*
INUPPER  DC    256C'.'       UNPRINTABLES SHOWN AS PERIOD       GP08243
         ORG   INUPPER
         DC    C' '          TREAT NULL AS BLANK
         ORG   INUPPER+C' '
         DC    C' '          BLANK
         ORG   INUPPER+X'4A'
         DC    X'4A4B4C4D4E4F50' CNT,PER,LESSTH,L.PAR,PLUS,OR,AMP
         ORG   INUPPER+X'5A'
         DC    X'5A5B5C5D5E5F6061' EXC,DOL,AST,R.PAR,S.COL,NOT,MIN,SL
         ORG   INUPPER+X'6A'                                     93117
         DC    X'6A6B6C6D6E6F'    COM,PERC,UNDER,GREATTH,QUEST   93117
         ORG   INUPPER+X'7A'
         DC    X'7A7B7C7D7E7F'  COL,POUND,AT,APOST,EQU,QUOTE
         ORG   INUPPER+X'81'
         DC    X'C1C2C3C4C5C6C7C8C9'  LOW A-I TO UPPER CASE
         ORG   INUPPER+X'91'
         DC    X'D1D2D3D4D5D6D7D8D9'  LOW J-R TO UPPER CASE
         ORG   INUPPER+X'A2'
         DC    X'E2E3E4E5E6E7E8E9'    LOW S-Z TO UPPER
         ORG   INUPPER+X'C1'
         DC    X'C1C2C3C4C5C6C7C8C9'  A-I
         ORG   INUPPER+X'D1'
         DC    X'D1D2D3D4D5D6D7D8D9'  J-R
         ORG   INUPPER+X'E2'
         DC    X'E2E3E4E5E6E7E8E9'    S-Z
         ORG   INUPPER+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9'  0-9
         ORG   INUPPER+X'C0'
         DC    X'8B'         LEFT-BRACE
         ORG   INUPPER+X'D0'
         DC    X'9B'         RIGHT-BRACE
         ORG   INUPPER+X'6A'
         DC    X'6A'         STROKE
         ORG   INUPPER+X'79'
         DC    X'79'         REV. APOSTROPHE
         ORG   INUPPER+X'A1'
         DC    X'A1'         SIMILAR
         ORG   INUPPER+X'B0'                                    GP13007
         DC    X'B0'         CARET                              GP13007
         ORG   INUPPER+X'BA'                                    GP08107
         DC    X'BABB'       LEFT & RIGHT BRACKET               GP08107
         ORG   INUPPER+X'E0'
         DC    X'E0'         REV. SLASH
         ORG   ,
         SPACE 1                                                 87166
*   VALIDITY CHECK FOR PACKED DECIMALS                          GP06277
WEXPDTRT DC    256AL1(8)     ALL INVALID                        GP06277
         TRENT WEXPDTRT,0,(X'00',10),                           GP06277
         TRENT WEXPDTRT,0,(X'10',10),                           GP06277
         TRENT WEXPDTRT,0,(X'20',10),                           GP06277
         TRENT WEXPDTRT,0,(X'30',10),                           GP06277
         TRENT WEXPDTRT,0,(X'40',10),                           GP06277
         TRENT WEXPDTRT,0,(X'50',10),                           GP06277
         TRENT WEXPDTRT,0,(X'60',10),                           GP06277
         TRENT WEXPDTRT,0,(X'70',10),                           GP06277
         TRENT WEXPDTRT,0,(X'80',10),                           GP06277
         TRENT WEXPDTRT,0,(X'90',10),                           GP06277
         TRENT WEXPDTRT,4,X'0C',X'0D',X'0F',                    GP06277
         TRENT WEXPDTRT,4,X'1C',X'1D',X'1F',                    GP06277
         TRENT WEXPDTRT,4,X'2C',X'2D',X'2F',                    GP06277
         TRENT WEXPDTRT,4,X'3C',X'3D',X'3F',                    GP06277
         TRENT WEXPDTRT,4,X'4C',X'4D',X'4F',                    GP06277
         TRENT WEXPDTRT,4,X'5C',X'5D',X'5F',                    GP06277
         TRENT WEXPDTRT,4,X'6C',X'6D',X'6F',                    GP06277
         TRENT WEXPDTRT,4,X'7C',X'7D',X'7F',                    GP06277
         TRENT WEXPDTRT,4,X'8C',X'8D',X'8F',                    GP06277
         TRENT WEXPDTRT,4,X'9C',X'9D',X'9F'                     GP06277
         EJECT ,                                                 93185
***********************************************************************
*                                                                     *
*   ESPIE EXIT.  CHECK WHETHER THIS IS ANYWHERE IN OUR CODE, AND      *
*   WHETHER THE CURRENT PROGRAM HAS REQUESTED RECOVERY.               *
*                                                                     *
*   RECOVERY CONSISTS OF RELOADING ALL REGISTERS, AND GOING TO USER'S *
*   SPECIFIED RESTART ADDRESS; RESTART REQUEST IS CLEARED.            *
*                                                                     *
***********************************************************************
         SPACE 1                                                 93185
         PUSH  USING         JUST IN CASE                        93185
         DROP  ,             DON'T TRUST NOBODY                  93185
         USING MYSPIE,R15                                       GP09115
MYSPIE   STM   R0,R15,MYSPEREG    SAVE ENTRY REGISTERS          GP09115
         LA    R12,0(,R15)   LOAD AND CLEAN BASE                GP09115
         DROP  R15                                              GP09115
         USING MYSPIE,R12                                       GP09115
         AIF   (&MVSXA).EPREGS                                  GP09052
         LR    R6,R1         SAVE EPIE                          GP09052
         USING PIE,R6        DECLARE IT                         GP09052
         LR    R13,R12       COPY BASE                          GP09115
         SH    R13,=AL2(MYSPIE-EXHBWORK)                        GP09115
         L     R13,SQSP-EXHBWORK(,R13)                          GP09115
         USING EXHBSQSP,R13  DECLARE IT                         GP09052
         ICM   R3,15,SQSPIAD  DID PROGRAM SET A RECOVERY ADDR   GP09052
         BZ    MVSFAIL       NO; UNEXPECTED ERROR               GP09052
         XC    SQSPICA+4(8),SQSPICA+4  CLEAR CODE AND ADDRESS   GP09052
         STCM  R3,7,PIEPSW+5   SET RESTART ADDRESS              GP09052
         LM    R0,R15,MYSPEREG    RELOAD EVERYTHING FROM ENTRY  GP09052
         SLR   R15,R15                                          GP09052
         BR    R14           RETURN TO RECOVERY VIA SYSTEM      GP09052
         SPACE 1                                                GP09052
MVSFAIL  B     MVSPONCE      PREVENT SPIE EXIT LOOP             GP09115
         NI    MVSFAIL+1,X'0F'    CHANGE TO NOP                 GP09115
         ABEND 322,DUMP      USER 322 ABEND                     GP09115
MVSPONCE MVC   ERRREGS+R3*4(11*4),MYSPEREG+3*4  COPY R3-R13     GP09052
         MVC   ERRREGS(3*4),PIEGR0   MOVE LOW                   GP09052
         MVC   ERRREGS+R14*4(2*4),PIEGR14   MOVE HIGH           GP09052
         XHEX  SPMPSW1,PIEPSW,SEP=C' '     LEFT-HALF PSW        GP09052
         XHEX  SPMPSW2,PIEPSW+4,SEP=C' '   RIGHT HALF           GP09052
*DEFER*  XHEX  SPMLNIC,EPIEINT,SEP=C' '  LENGTH/INTERRUPT CODE  GP09052
         XHEX  SPMLNIC+4,PIEPSW+2,LEN=4,SEP=C' '  INTERUPT CODE GP09052
         MVC   SPMLNIC(4),=4C'0'       PRESET FOR LENGTH        GP09052
         SR    R1,R1                                            GP09052
         IC    R1,PIEPSW+4   GET LENGTH BITS                    GP09052
         SRL   R1,6          CONVERT TO 0-3                     GP09052
         STC   R1,SPMLNIC+3  STASH BINARY                       GP09052
         TR    SPMLNIC+3(1),=C'0246'   MAKE READABLE LENGTH     GP09052
         AGO   .CMREGS                                          GP09052
.EPREGS  LR    R6,R1         PRESERVE EPIE ADDRESS               93185
         USING EPIE,R6       DECLARE IT                          93185
         AM24  WORK=R15      GET LOW                             93185
         MVC   ERRREGS(16*4),EPIEGPR   COPY FOR COMMON CODE     GP09052
         L     R13,EPIEPARM  GET SQSP ADDRESS                    93185
         USING EXHBSQSP,R13  DECLARE IT                          93185
         ICM   R3,15,SQSPIAD  DID PROGRAM SET A RECOVERY ADDRESS 93185
         BZ    MYSPFAIL      NO; UNEXPECTED ERROR                93185
         SLR   R2,R2                                             93185
         ICM   R2,1,EPIEINT+3  GET INTERRUPT CODE                93185
         BZ    MYSPFAIL      HUH ?                               93185
         CH    R2,=H'15'     LARGER THAN BASE ?                  93185
         BNH   *+8           NO; USE                             93185
         LA    R2,4          ELSE TREAT AS FOUR (ADDRESSING EXCEPT.)
         L     R1,=X'00008000'  SET BIT FOR CODE '0'             93185
         SRL   R1,0(R2)      SHIFT TO PICA POSITION              93185
         ST    R1,LOCDB      STASH                               93185
         NC    LOCDB+2(2),SQSPICA+4  MASK WITH PROGRAM'S BITS    93185
         CL    R1,LOCDB      MATCH ?                             93185
         BNE   MYSPFAIL      NO; COMPLAIN                        93185
         XC    SQSPICA+4(8),SQSPICA+4  CLEAR CODE AND ADDRESS    93185
         ST    R3,EPIEPSW+4  SET RESTART ADDRESS AND MODE        93185
         LM    R0,R15,MYSPEREG    RELOAD EVERYTHING FROM ENTRY  GP09052
         SLR   R15,R15                                           93185
         BR    R14           RETURN TO RECOVERY VIA SYSTEM       93185
         SPACE 1                                                 93185
MYSPFAIL XHEX  SPMPSW1,EPIEPSW,SEP=C' '    LEFT-HALF PSW         93185
         XHEX  SPMPSW2,EPIEPSW+4,SEP=C' '  RIGHT HALF            93185
         XHEX  SPMLNIC,EPIEINT,SEP=C' '  LENGTH/INTERRUPT CODE   93185
.CMREGS  L     R5,PSATOLD-PSA  GET THE CURRENT TCB               93185
         NUSE  TCB,R5                                            93185
         LAT   R5,TCBRBP,SPMCRSV  GET RB CHAIN OR OUT            93185
         B     SPMRRB2       LOOK AT IT                          93185
         NUSE  RB,R5                                             93185
SPMRRB1  TM    RBSTAB2,RBTCBNXT  DOES RB POINT TO TCB ?          93185
         BNZ   SPMCRSV       YES - EXIT (DON'T CARE ABOUT EXHAREST)
         LAT   R5,RBLINK,SPMCRSV  GET NEXT RB                    93185
SPMRRB2  TM    RBSTAB1,RBFTP   IS THIS A PRB ?                   93185
         BNZ   SPMRRB1       NO; SKIP IT                         93185
         LAT   R1,RBCDE,SPMRRB1  GET CDE OR NEXT                 93185
         NUSE  CDE,R1                                            93185
         CLC   =C'EXH',CDNAME  MY MODULE NAME PREFIX ?           93185
         BNE   SPMRRB1       NO; TRY AGAIN                       93185
         MVC   SPMMSG+4+8(8),CDNAME  MOVE NAME TO MESSAGE        93185
         DROP  R1,R5                                             93185
         SPACE 1
*  MODULE/COMMAND NOT FOUND; USE MAJOR NAME OF FAILING ADDRESS
SPMCRSV  ONSPIE SPMRWHO,255  RECOVER FROM ERROR                 GP09115
         AIF   (&MVSXA).XAQUE                                   GP09115
         L     R2,PIEPSW+4   LOAD FAILING ADDRESS               GP09115
         N     R2,=X'00FFFFFF' KILL FLAGS                       GP99020
         ST    R2,LOCDB+8    MAKE ARGUMENT
         MVSQUERY INADDR=LOCDB+8,SEARCH=JPALPA,OEPNM=SPMTXT1+4,        *
               OLOADPT=LOCDB,OLEN=LOCDB+4                       GP09115
         AGO   .CMQUE                                           GP09115
.XAQUE   ICM   R2,15,EPIEPSW+4  LOAD FAILING ADDRESS            GP99020
         BNM   SPMCRSV2                                         GP99020
         AM31  ,             USER IN AM31; MATCH IT             GP99020
SPMCRSV2 N     R2,=X'7FFFFFFF' KILL AMODE BIT                   GP99020
         ST    R2,LOCDB+8    MAKE ARGUMENT
         CSVQUERY INADDR=LOCDB+8,SEARCH=JPALPA,OUTEPNM=SPMTXT1+4,      *
               OUTLOADPT=LOCDB,OUTLENGTH=LOCDB+4,PLISTVER=2
.CMQUE   BXH   R15,R15,SPMRWHO
         LM    R3,R4,LOCDB   GET START AND LENGTH               GP97316
         AR    R4,R3         GET END ADDRESS + 1                GP97316
*XAPLUS  SH    R2,EPIEINT    SUBTRACT INSTRUCTION LENGTH        GP97316
         IC    R0,SPMLNIC+3  GET FORMATTED LENGTH               GP09115
         N     R0,=X'00000007'  MASK                            GP09115
         SR    R2,R0         ADJUST TO START OF INSTRUCTION     GP09115
         SH    R2,=H'4'      SUBTRACT ANOTHER 4 FOR GOOD MEASURE
         BNM   *+6                                              GP97316
         SLR   R2,R2         HOW DID WE GET HERE?               GP97316
         MAX   (R2),(R3)     DON'T START BEFORE MODULE          GP97316
         LA    R14,16(,R2)   END MOVE ADDRESS+1                 GP97316
         MIN   (R14),(R4)    CLIP END                           GP97316
         ST    R2,LOCDB                                         GP97316
         XHEX  SPMTXT1A,LOCDB  SHOW START ADDRESS               GP97316
         SR    R14,R2        GET TEXT LENGTH                    GP97316
         SH    R14,=H'1'     CHANGE TO EXECUTE LENGTH           GP97316
         BM    SPMRWHO       OOPS                               GP97316
         XC    LOCTXT,LOCTXT                                    GP97316
         EX    R14,MVCTEXT                                      GP97316
MVCTEXT  MVC   LOCTXT(0),0(R2)   MOVE TEXT                      GP97316
         XHEX  SPMTXT1B+0,LOCTXT                                GP97316
         CH    R14,=H'4'                                        GP97316
         BNH   SPMRTXT                                          GP97316
         XHEX  SPMTXT1B+9,LOCTXT+4                              GP97316
         CH    R14,=H'8'                                        GP97316
         BNH   SPMRTXT                                          GP97316
         XHEX  SPMTXT1B+18,LOCTXT+8                             GP97316
         CH    R14,=H'12'                                       GP97316
         BNH   SPMRTXT                                          GP97316
         XHEX  SPMTXT1B+27,LOCTXT+12                            GP97316
SPMRTXT  MVC   SCMT1,SPMTXT1+4                                  GP97316
.NOQUERY SPACE 1                                                GP09115
SPMRWHO  ONSPIE 0            NO MORE (E)SPIE RECOVERY           GP09115
         AM24  ,             RESUME OLD MODE                    GP99020
         ICM   R1,15,SQIQPARM  UCB ADDRESS STASHED ?             93185
         BZ    SPMRMTS       NO                                  93185
         MVC   SPMWHO(3),UZBNAME(R1)  MOVE UNIT NAME             93185
SPMRMTS  ICM   R1,15,SQWRKA  EXTENDED WORK ADDRESS ?             93185
         BZ    SPMRPUT       NO                                  93185
         MVC   SPMWHO(8),MTSUID-MTSWORK(R1)                      93185
         MVC   SPMWHO+9(8),MTSNIB-MTSWORK+12(R1)  NIB ID FIELD   93185
SPMRPUT  OC    SPMWHO,BLANKS  ELIMINATE SOME PROBLEMS            93185
         WTO   MF=(E,SPMMSG)                                    GP09052
         CLI   SPMTXT1A,C' '      TEXT FILL ?                   GP09052
         BE    STABSKIX      NO; SKIP IT                        GP09052
         WTO   MF=(E,SPMTXT1)                                   GP09052
STABSKIX LA    R2,ERRREGS    POINT TO FIRST REGISTER            GP09052
         LA    R3,SPMREG1    FIRST REGISTER MESSAGE              93185
         LA    R5,4          SET FOR TWO LINES                   93185
STABRLP  LA    R4,SPMREG1A-SPMREG1(,R3)  SET FIRST OUTPUT ADDRESS
         LA    R15,4         SET FOR FOUR REGISTERS              93185
STABRLP3 UNPK  0(9,R4),0(5,R2)  UNPACK A REGISTER                93185
         TR    0(8,R4),HEXTAB-C'0'     MAKE EBCDIC               93185
         MVI   8(R4),C' '    SEPARATOR                           93185
         LA    R4,9(,R4)     NEXT OUTPUT ADDRESS                 93185
         LA    R2,4(,R2)     NEXT REGISTER                       93185
         BCT   R15,STABRLP3  DO NEXT REGISTER                    93185
         WTO   MF=(E,(R3))                                      GP09052
         LA    R3,SPMREG2-SPMREG1(,R3)  SET NEXT MESSAGE ADDRESS 93185
         BCT   R5,STABRLP    DO NEXT LINE                        93185
         ICM   R11,15,SQ@WORK  IS THE WORK AREA AVAILABLE ?      93185
         BZ    MYSPEXIT      NO; UNSAFE TO TRY I/O               93185
         MVC   SCM1,SPMMSG+4   MOVE TO SCREEN BUFFER             93185
         MVC   SCMR1,SPMREG1+4                                   93185
         MVC   SCMR2,SPMREG2+4                                   93185
         MVC   SCMR3,SPMREG3+4                                   93185
         MVC   SCMR4,SPMREG4+4                                   93185
         USING EXHBWORK,R11  DECLARE WORK SPACE                  93185
         SLR   R8,R8         SIGNAL NO EXHBCOMM ADDRESS          93185
         XC    WECB,WECB     RESET THE WRITE ECB                 93185
         LA    R1,MESSCCW    GET CCW                             93185
         ST    R1,SQIOBCCW   SET REQUEST                         93185
         BAL   R14,SQEXCPS   TRY TO I/O                          93185
         WAIT  ECBLIST=CRTECB  WAIT A BIT                        93185
         STIMER WAIT,BINTVL==A(60*60)  WAIT 60 SECONDS           93185
MYSPEXIT OI    SQSPICA,X'80'  SUPPRESS STAE MSGS/DUMP            93185
         AIF   (&MVSXA).XABEND                                  GP09052
*FAILS*  ABEND X'C00',DUMP   TAKE A DUMP                        GP09052
         L     R1,=X'00080C00'  SYSTEM CODE C00 - EVENTUALLY    GP09052
         IC    R1,PIEPSW+3   INDICATE ERROR                     GP09052
         SLL   R1,12         ALIGN                              GP09052
         SVC   13            GUTEN ABEND                        GP09052
         AGO   .CMBEND                                          GP09052
.XABEND  LH    R2,EPIEINT+2  GET INTERRUPT CODE                  93185
         ABEND X'C00',DUMP,,SYSTEM,REASON=(R2)  GREETINGS        93185
.CMBEND  SPACE 1                                                 93185
LOCDB    DC    2D'0'                                             93185
LOCTXT   DC    XL16'0'       COPY OF FAILING TEXT
MESSCCW  CCW   5,SCMMSG,0,SCMMSGX-SCMMSG  SPIE MESSAGE           93185
MYSPEREG DC    16A(0)        ENTRY SAVER                        GP09115
ERRREGS  DC    16A(0)        (MVS) REGISTERS                    GP09052
HEXTAB   DC    C'0123456789ABCDEF'                               93185
SPMMSG   VCON  'EXH514E EXHIBIT  INTERRUPT; PSW=',END=SPMMSGX    93185
SPMPSW1  DC    CL8' ',C' '   PSW                                 93185
SPMPSW2  DC    CL8' ',C' LN/IC '                                 93185
SPMLNIC  DC    CL8' ',C' '                                       93185
SPMWHO   DC    CL17' '       OPTIONAL DEVICE/USER INFO           93185
SPMMSGX  VCON  ,                                                 93185
         SPACE 1                                                 93185
         POP   USING                                             93185
SPMREG1  VCON  '   GPR 0-3  ',END=SPMREG1X                       93185
SPMREG1A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMREG2  VCON  '   GPR 4-7  ',END=SPMREG2X                       93185
SPMREG2A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMREG3  VCON  '   GPR 8-B  ',END=SPMREG3X                       93185
SPMREG3A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMREG4  VCON  '   GPR C-F  ',END=SPMREG4X                       93185
SPMREG4A DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
SPMTXT1  VCON  'XXXXXXXX TEXT @ ',END=SPMTXT1X                  GP97316
SPMTXT1A DC    CL8' ',C' '
SPMTXT1B DC    4CL(8+1)' '   FOUR REGS + PAD                     93185
         VCON  ,                                                 93185
         SPACE 1                                                 93185
SCMMSG   SCRN  (RESETMDT),SBA,(1,1),SF,(NONE),RA,(11,80),' '    GP09052
         SCRN  SBA,(3,1),SF,(INTENSE)                           GP09052
SCM1     DC    CL(SPMMSGX-SPMMSG-4)' '                           93185
         SCRN  SBA,(5,1)                                         93185
SCMR1    DC    CL(SPMREG1X-SPMREG1-4)' '                         93185
         SCRN  SBA,(6,1)                                         93185
SCMR2    DC    CL(SPMREG1X-SPMREG1-4)' '                         93185
         SCRN  SBA,(7,1)                                         93185
SCMR3    DC    CL(SPMREG1X-SPMREG1-4)' '                         93185
         SCRN  SBA,(8,1)                                         93185
SCMR4    DC    CL(SPMREG1X-SPMREG1-4)' '                         93185
         SCRN  SBA,(10,1)                                        93185
SCMT1    DC    CL(SPMTXT1X-SPMTXT1-4)' '                         93185
     SCRN  SBA,(11,50),'SESSION WILL BE TERMINATED',IC,SF,(NONE) 93185
SCMMSGX  EQU   *                                                 93185
         EJECT ,                                                 82200
*        CODE MOVED TO CSA                                       82200
         DROP  ,                                                 82200
         USING CSACODE,R13                                       82200
         DS    0D            ALIGN FOR LTORG                     82200
CSACODE  LR    R13,R15       SET BASE ADDRESS                    82200
         ST    R14,CSARET    SAVE RETURN ADDRESS                 82200
         SPACE 1                                                 82200
         LA    R12,CSARFRR   ADDRESS OF FRR                      82200
*LIST*   SETFRR A,FRRAD=(R12),WRKREGS=(R10,R8),PARMAD=(R11)      82200
         SETFRR A,FRRAD=(R12),WRKREGS=(R10,R8),PARMAD=(R11)      82200
         USING FRPA,R11      ADDRESS FRR PARM AREA               82200
         ST    R11,FRPCSAWA  PASS CSAWORK ADDRESS TO FRR        GP08073
         LA    R14,CSARETRY  SET RETRY ADDRESS                   82200
         STM   R13,R14,FRPSRBBA    BASE AND RETRY ADDRESS TO FRR 82200
         AIF   (NOT &MVSXA).NOFRR31                              91224
         BALR  R14,0         SET BASE ADDRESS                    91224
         LTR   R14,R14       AMODE 31 ?                          91224
         BNM   *+8           NO                                  91224
         OI    FRPSRBBA+4,X'80'  FRR TO 31-BIT ALSO              91224
.NOFRR31 DROP  R11                                               82200
         L     R14,CSARET    GET RETURN ADDRESS                  85211
         STM   R0,R15,CSABIGSV  SAVE EVERYTHING                  82200
         LA    R13,USERCODE  ADDRESS USER CODE                   82200
         LA    R15,USERENTY-USERCODE(,R13)  SET ENTRY ADDRESS    82200
         BALR  R14,(R15)     INVOKE USER CODE                    82200
         SPACE 1                                                 82200
         BALR  R13,(0)       IN CASE USER LOUSED UP              82200
         USING *,R13         DECLARE IT                          82200
         LM    R0,R14,CSABIGSV  GET REGISTERS BACK               82200
         USING CSACODE,R13   DECLARE RESTORED BASE               82200
         LR    R10,R15       SET CODE FOR SLOW POST              82200
         B     CSAEXIT       GO TO COMMON EXIT                   89092
         SPACE 1                                                 89092
         USING CSACODE,R13         GET BASE ADDRESSABILITY       82200
         USING SDWA,R1             SYSTEM DIAGNOSTIC WORK AREA   82200
CSARFRR  L     R13,CSAPTCOD-CSARFRR(,R15)  GET BASE BACK         82200
         L     R12,SDWAPARM  FRR PARM                            82200
         USING FRPA,R12                                          82200
         ICM   R15,15,USERSPEX  TEST FOR EXIT                    82200
         BZ    CSAFRRX       NONE; RETURN CODE 12                82200
         ICM   R0,15,USERLOOP  TEST RETRY COUNTER                82200
         BNP   CSAFRRX       EXCEEDED                            82200
         BCTR  R0,0                                              82200
         ST    R0,USERLOOP   REPLACE IT                          82200
         LA    R4,CSAUEXIT   SET TO ENTER USER'S CODE            82200
         B     CSAFRRY       GO TO USER EXIT VIA FRR RETRY       82200
CSAFRRX  LA    R4,CSARETRY   SET RETRY                           82200
*LIST*   SETRP RC=4,RETADDR=(R4),RECORD=NO RECPARM=FRRNAMES      82200
CSAFRRY  SETRP RC=4,RETADDR=(R4),RECORD=NO RECPARM=FRRNAMES      82200
         BR    R14                                               82200
         SPACE 1                                                 82200
CSAUEXIT BALR  R13,(0)                                           82200
         USING *,R13                                             82200
         L     R15,USERSPEX                                      82200
         XC    USERSPEX,USERSPEX                                 82200
         LM    R0,R14,USERSAVE                                   82200
         BR    R15           RE-ENTER USER'S CODE                82200
         SPACE 1                                                 82200
FRRNAMES DC    CL8'EXHIBIT'  SET IDENTIFIER                      82200
         DC    CL8'EXHAWORK'   AND CSECT NAME                    82200
         DC    CL8'CSARFRR'    AND FRR                           82200
         DROP  ,                                                 82200
CSARETRY LA    R10,12        SET MAJOR ERROR CODE                89092
CSAEXIT  BALR  R13,(0)       ESTABLISH BASE                      89092
         USING *,R13                                             82200
*LIST*   SETFRR D,WRKREGS=(R2,R3)  DELETE FRR                    82200
         SETFRR D,WRKREGS=(R2,R3)  DELETE FRR                    82200
         B     CSAQUITS      JOIN COMMON POST                    89092
CSAQUIT  LA    R10,12        SET MAJOR ERROR                     89092
CSAQUITS BALR  R13,(0)       ESTABLISH BASE FOR POST CODE        89092
         USING *,R13                                             82200
         L     R9,CSARET     GET RETURN ADDRESS                  85211
         ICM   R0,15,CSAECB  IS CALLER WAITING ON ECB ?          89092
         BM    CSAXPOST      YES; USE CROSS-MEMORY POST          89092
         LR    R1,R10        COPY POST CODE                      89092
         ICM   R1,8,CSADCX40 SET ECB POST CODE                  GP05005
CSARPOST CS    R0,R1,CSAECB  POST THE QUICK WAY                  89092
         BER   R9            AND EXIT                            89092
CSAXPOST LA    R11,CSAECB    GET ECB ADDRESS                     82200
         ICM   R11,8,CSADCX80  SET CROSS-MEMORY POST FLAG       GP05005
         LR    R12,R9        ON ERROR, JUST RETURN               82200
         L     R13,CSAASCB   SET MY ASCB ADDR.                   82200
         L     R1,CVTPTR     SET CVT AGAIN                       82200
         L     R15,CVT0PT01-CVT(,R1)   GET NON-I/O POST ENTRY    82200
         LR    R14,R9        SET RETURN ADDRESS                  89205
         BR    R15           MAIL IT (RETURN TO R14=R9)          89205
CSAPTCOD DC    A(0)          ADDRESS OF THIS AREA                82200
CSAECB   DC    A(0)          COMPLETION ECB                      82200
CSAASCB  DC    A(0)          MY ASCB ADDRESS                     82200
CSARET   DC    A(0)          SRB RETURN ADDRESS                  82200
CSABIGSV DC    16A(0)        BIG SAVE AREA                       82200
CSASRB   DC    6D'0'         SRB                                 82200
CSADCX40 DC    X'40'                                            GP05005
CSADCX80 DC    X'80'                                            GP05005
         SPACE 1                                                 82200
         LTORG ,                                                 82200
         DS    0D                                                82200
CSASIZE  EQU   *-CSACODE     LENGTH OF FIXED PREFIX              82200
USERCODE DS    0D            START OF USER'S CODE                82200
USERSAVE DC    16A(0)        USER'S SAVE AREA                    82200
USERSPEX DC    A(0)          USER'S ONSPIE EXIT ADDRESS          82200
USERLOOP DC    F'4096'       RETRY LIMIT COUNTER                 82200
USERENTY STM   R0,R14,USERSAVE-USERCODE(R13)                     82200
*        ABOVE SEQUENCE IS MANDATORY PREFIX FOR USER CODE        82200
         SPACE 2
         PUSH  USING                                            GP13103
         USING RANDOMNO,R15  SET BY CALLER                      GP13103
.*--------------------------------------------------------------------*
.*   RANDOMNO - GENERATE A PSEUDO-RANDOM DIGIT 0-9 AND 1.0-9.0        *
.*     L    R15,EXWRAND                                               *
.*     BASR R14,R15                                                   *
.*                                                                    *
.*     XC RANDOMIN,RANDOMIN  TO RE-INITIALIZE                         *
.*     RETURN IN GPR 0 INTEGER 0 TO 9, AND FPR 0 1.0-9.0              *
.*--------------------------------------------------------------------*
RANDOMNO STM   R14,R2,RANDSAVD                                  GP13103
         ICM   R1,15,RANDOMIN   CALLED BEFORE ?                 GP13103
         BNZ   RANDOLD                                          GP13103
         LR    R2,R15        SAVE BASE                          GP13103
         TIME  BIN                                              GP13103
         LR    R15,R2        RESTORE BASE                       GP13103
         AR    R1,R0                                            GP13103
         N     R1,RAND3FFF                                      GP13103
         LA    R0,1                                             GP13103
         OR    R1,R0                                            GP13103
RANDOLD  M     R0,RANDQUOT   WAS X'0001000D'                    GP13103
         SRL   R1,8          KILL SIGN AND SOME                 GP13103
         ST    R1,RANDOMIN   TEMP                               GP13103
         ST    R1,RANDSAV0   TEMP                               GP13103
         MVI   RANDSAV0,X'40' SET EXPONENT                      GP13103
         LE    R0,RANDSAV0                                      GP13103
         ME    R0,RANDSCAL   MAKE INTEGER 0-9                   GP13103
         AU    R0,RAND4600   POSITION AS INTEGER                GP13103
         STE   R0,RANDSAV0                                      GP13103
         MVI   RANDSAV0,0    KILL EXPONENT                      GP13103
.OLDRS   LM    R14,R2,RANDSAVD                                  GP13103
         BR    R14           RETURN ANSWER IN GPR0 AND FPR0     GP13103
.COMRS   SPACE 1                                                GP13103
RANDOMIN DC    D'0'                                             GP13103
RANDSAVD DC    F'0'   0/2    SAVE 14                            GP13103
RANDSAVE DC    F'0'   1/2    SAVE 15                            GP13103
RANDSAV0 DC    3F'0'  2/2    SAVE 0,1,2                         GP13103
RAND3FFF DC    X'3FFFFFFF'                                      GP13103
RANDQUOT DC    F'13187'      WAS X'0001000D'                    GP13103
RANDSCAL DC    E'10'         SCALER                             GP13103
RAND4600 DC    X'46000000'   POSITION AS INTEGER                GP13103
         POP   USING                                            GP13103
         SPACE 1                                                 87166
EXHBWKEN DS    0D            END OF MODULE                       82199
         SPACE 1                                                 82200
FRPA     DSECT ,                                                 82200
FRPCSAWA DS    A             CSAWORK ADDRESS                     82200
FRPSRBBA DS    A                                                 82200
FRPSRBRA DS    A                                                 82200
FRPSDVSL EQU   *-FRPA        MINIMUM LENGTH                      82200
         SPACE 2                                                 82200
         PUSH  PRINT                                             82200
         PRINT NOGEN                                             82200
         AIF   (&MVSXA).XAPIE                                   GP09052
         IHAPIE ,                                               GP09052
         AGO   .CMPIE                                           GP09052
.XAPIE   IHAEPIE ,           MAP EPIE                            93185
.CMPIE   SPACE 1                                                 93185
         IHAASCB ,                                               82200
         IHAASVT ,                                               82200
         IHASRB ,                                                82200
         IHASDWA ,                                               82200
         IHAWSAVT CLASS=GLOBAL                                   82200
         IHAFRRS ,                                               82200
         IHAFOE ,                                                83360
         IEFJESCT ,                                              84001
         IEFJSCVT ,                                              84001
CSCB     DSECT ,                                                 83360
         IEECHAIN ,                                              83360
         IHAPSA ,                                                82200
         MAPMTS ,                                               GP09115
         POP   PRINT                                             82200
.CMMVS   SPACE 3                                                 82199
EXHBWENT DSECT ,
EXHFPFX  DS    C'EXHD'       COMMON MODULE NAME PREFIX
EXHFMOD  DS    CL4           MODULE NAME
EXHFTTRR DS    CL3           TTR OF FIRST RECORD
EXHFCONC DS    C             BLDL CONCATENATION LVL
EXHFLIB  DS    C             BLDL LIBRARY INDICATOR
EXHFIND  DS    C             ALIAS FLAG, ENTRY LENGTH
EXHFTTRB DS    CL3           TTR OF FIRST TEXT BLOCK
         DS    C
EXHFTTRN DS    CL3           NOTE / SCATTER TTR
EXHFNTTR DS    C             NO. OF NOTE / SCATTER ENTRIES
EXHFATT1 DS    C             LKED FIRST ATTRIBUTE BYTE
EXHF1ATT EQU   X'02'         MODULE ATTRIBUTES - EXEC            86349
EXHFATT2 DS    C             LKED SECOND ATTRIBUTE BYTE
EXHFSIZ  DS    CL3           MODULE SIZE
EXHFTLEN DS    CL2           LENGTH OF LARGEST TEXT RECORD
EXHFEPAD DS    CL3           ENTRY POINT ADDRESS
EXHFORG  DS    CL3           ORIGIN
         ORG   EXHBWENT+58   ALLOW FOR OTHER BLDL STUFF
EXHFSTRT DS    AL2           DISPLACEMENT TO START OF SCREEN ENTRY
EXHFEND  DS    AL2           DSPL. TO LAST BYTE OF THIS ENTRY
EXHFTIM  DS    X             MODULE INVOKATION FUNCTION LEVEL
EXHFTIM2 DS    X             SAVE BYTE FOR INVOCATION LEVEL
EXHFLEN  EQU   *-EXHBWENT
         MEND
