         MACRO
&NM   EXHMSTAR &SECT=D
         COPY  OPTIONS
         AIF   ('&SECT' EQ 'D').DODSECT
EXHCCSTA CSTART
         AGO   .COMSECT
.DODSECT ANOP
EXHCCSTA DSECT
         USING *,R12
         DC    22H'0' .      LENGTH OF CSTART EXPANSION         GP08276
         NUSE  SQSP,R13
         NUSE  WORK,R11
         NUSE  COMM,R8
.COMSECT ANOP
FR0      EQU   0 .           FLOATING POINT REGISTER 0
FR2      EQU   2 .           FLOATING POINT REGISTER 2
         SPACE
*   BRANCH ENTRY OFFSET DEFINITIONS FOR OVERLAY EXHCSST7
X3670    EQU   4 .           NO KLINGON MESSAGE
X3690    EQU   8 .           KLINGON DESTROYED MESSAGE
X3790    EQU   12 .          DOCKING STATUS/TAKING A HIT
X3920    EQU   16 .          DEAD AND DRIFTING
X3970    EQU   20 .          NO WIN
X4000    EQU   24 .          DESTROYED AND NO WIN
X4020    EQU   28 .          KLINGONS LEFT
X4040    EQU   32 .          FEDERATION SAVED ?
         SPACE
        UNFRAG ,          MAKE ROOM; MAKE ROOM
         SPACE 1
REPEAT   MVI  TEMP1+2,C'H'   INITIALIZATION OVERLAY I (H - HELP 1ST)
         B     OTRANS7       GO TO IT
         SPACE 2
TENLINE  DC    F'800'        SCREEN SPACE FOR TEN LINES         GP08276
*0005 DIM Q$(216),A$(3),C$(16),R$(24),D$(96),C8$(50)
D$       DC    0CL12' ',C'WARP ENGINESS.R. SENSORSL.R. SENSORS'
         DC    C'PHASER CNTRLPHOTON TUBESDAMAGE CNTRLSHIELD CNTRL'
         DC    CL12'COMPUTER   '  DEVICE NAMES
Q9$      DC    C' '          MUST PRECED Q$ FOR BLANKING
Q$       DC    CL216' '      DISPLAY MAP
SYMBASE  DC    C'>!<'        STARBASES
         ORG   *-1           SAVE A BYTE
SYMBENT  DC    C'<+>'        ENTERPRISE
SYMBKLIN DC    C'+++'        NASTY KLINGONS
SYMBSTAR DC    C' * '         STARS
         SPACE 2
INITE    DS    0E .          FLOATING POINT VARIABLES
D        DC    8E'0'         DEVICE STATUS
T        DC    E'0'          CURRENT STARDATE
T0       DC    E'0'          INITIAL STARDATE
T9       DC    E'0'          LENGTH OF GAME IN STARDAYS
X        DC    E'0'
Y        DC    E'0'
S        DC    E'0'          SHIELD ENERGY
W1       DC    E'0'
X1       DC    E'0'
X2       DC    E'0'
INITEND  EQU   *
         SPACE 2
INITF    DS    0F .          INTEGER VARIABLES
Q1       DC    F'0'          QUADRANT X-COORDINATE
Q2       DC    F'0'          QUADRANT Y-COORDINATE
S1       DC    F'0'
S2       DC    F'0'
S3       DC    F'0'
S9       DC    F'0'          NUMBER OF STARBASES LEFT
K9       DC    F'0'          NUMBER OF KLINGONS
K3       DC    F'0'
B3       DC    F'0'
B9       DC    F'0'
I        DC    F'0'          LOOP INDEX
J        DC    F'0'          LOOP INDEX
IR1      DC    F'0'
IR2      DC    F'0'
K        DC    9F'0'         KLINGON SHIPS - COORDINATES, ETC.
N        DC    F'0'
P        DC    F'0'          NUMBER OF PHOTON TORPEDOES
INITFND  EQU   *
         SPACE 2
C        DC    E'0,-1,-1,-1,0,1,1,1,0,1,1,0,-1,-1,-1,0,1,1'
E#@0001  DC    E'0.0001'
E#@01    DC    E'0.01'
E#@2     DC    E'0.2'
E#@1     DC    E'0.1'
E#@25    DC    E'0.25'
E#@5     DC    E'0.5'
E#@8     DC    E'0.8'
E#@95    DC    E'0.95'
E#@96    DC    E'0.96'
E#@98    DC    E'0.98'
E#0      DC    E'0'
E#1      DC    E'1'
E#100    DC    E'100'
E#1000   DC    E'1000'
E#3000   DC    E'3000'
E#1200   DC    E'1200'       INITIAL SHIELD ENERGY
E#2      DC    E'2'
E#30     DC    E'30'
E#300    DC    E'300'
E#5      DC    E'5'
E#8      DC    E'8'
E#9      DC    E'9'
F#1      DC    F'1'
F#10     DC    F'10'
F#2      DC    F'2'
E#200    DC    E'200'
F#3      DC    F'3'
F#8      DC    F'8'
F#9      DC    F'9'
TIMEOUT  DC    F'6000'       RESPONSE WAIT TIME IN 1/100 SECONDS
         SPACE 2
G        DC    128H'0' .     QUADRANT DATA
         ORG   G+2 ,         INTERLEAVED HALFWORD ARRAYS
Z        DC    128H'0' .     QUADRANT HISTORY
         ORG
H10      DC    H'10'
CLEARIT  DS    0F            START OF XC CLEAR
C1       DC    E'0'
E        DC    E'0'
ES1      DC    E'0'
ES2      DC    E'0'
F        DC    E'0'
H        DC    F'0'
PH1      DC    E'0'
COMCOMSV DC    F'0'
IRAND8SV DC    A(0)
LOOPX1   DC    F'0'
LOOPX2   DC    F'0'
RANDESAV DC    7F'0'
SE       DC    E'0'
SQRTV    DC    E'0'
TEMP1    DC    E'0'    ALSO C AND F
TEMP2    DC    E'0'
Z1       DC    F'0'
Z2       DC    F'0'
Z3       DC    F'0'
INTEXT   DC    CL8' '
INI      DC    F'0'
INE      DC    E'0'
CLEAREND EQU   *-CLEARIT     LENGTH TO CLEAR
MSGLINE  DC    A(0)
A3690SV  DC    A(0)
A3790SV  DC    A(0)
A3820SV  DC    A(0)
A4530SV  DC    A(0)
A5380SV  DC    A(0)
PAGESAVE DC    A(0)
MSGSAVE  DC    6F'0'
TINPSAV  DC    9F'0'
         SPACE 2
*0010 ON ESC GOTO 1270
*0011 DIM Q9$(216),Q1$(50),P1$(50),N1$(50),D(8)
*0050 PRINT '************STARTREK***************'
*0060 RANDOMIZE
         EJECT
A1259Z   BALS  R14,BLANKER
         BALS  R14,PAGEHEAD
        OLOAD  1,R7
         BALS  R14,4(,R7)    GO TO COURSE ENTRY
*1260 GOSUB 4120
A1260    BALS  R14,A4120
*1270 REM
*1280 INPUT A
A1270    MVI   TEMP1+2,C'O'  GET AN ORDER
         B     OTRANS7       ANY ORDER
         SPACE 1
A1410    MVI   TEMP1+2,C'1'   GO TO COURSE CHANGE MODULE
         B     OTRANS7
         SPACE 1
A2330    MVI   TEMP1+2,C'3'   GO TO LONG RANGE SENSOR SCAN
         B     OTRANS7
         SPACE 1
A2530    MVI   TEMP1+2,C'4'   PHASER CONTROL
         B     OTRANS7
         SPACE 1
A2800    MVI   TEMP1+2,C'5'   PHOTON TORPEDO CODE
         B     OTRANS7
         SPACE 1
A3460    MVI   TEMP1+2,C'6'   SHIELD CONTROL CODE
         B     OTRANS7
         SPACE 1
A3560    MVI   TEMP1+2,C'7'   STATUS DISPLAY CODE
        SPACE 1
OTRANS7  MVC   TEMP1(2),OBTO  'ST'
        XLOAD  TEMP1,R7
         BR    R7
         SPACE 1
*4111 REM   ***
*4112 REM   *** SHORT RANGE SENSOR SCAN AND STARTING POINT CODE
*4113 REM   ***
*4120 FOR I= S1-1 TO S1+1
A4120    ST    R14,A4530SV
         L     R6,S1
         A     R6,F#1
         ST    R6,LOOPX1
         S     R6,F#2        S1-1
A4120B   ST    R6,I
         C     R6,F#1
         BL    A4210
         C     R6,F#8
         BH    A4310
*4130  FOR J= S2-1 TO S2+1
         L     R5,S2
         A     R5,F#1
         ST    R5,LOOPX2
         S     R5,F#2
A4130B   ST    R5,J
*4140    IF I<1 THEN GOTO 4200
*4141    IF I>8 THEN GOTO 4200
*4142   IF J<1 THEN GOTO 4200
*4143    IF J>8 THEN GOTO 4200
         C     R5,F#1
         BL    A4200
         C     R5,F#8
         BH    A4210
*4150    LET A$='>!<'
         LA    R1,SYMBASE
*4160    LET Z1=I
*4170 LET Z2=J
         MVC   Z1(8),I
*4180    GOSUB 5680
         BALS  R14,A5680
*4190    IF Z3=1  THEN GOTO 4240
         CLC   Z3,F#1
         BE    A4240
*4200 NEXT J
A4200    LA    R5,1(,R5)
         C     R5,LOOPX2
         BNH   A4130B
*4210 NEXT I
A4210    LA    R6,1(,R6)
         C     R6,LOOPX1
         BNH   A4120B
*4220 LET D0=0
*4230 GOTO 4130
         B     A4310
*4240 LET D0=1
*4250 LET C$='DOCKED'
A4240    CLC   C$,DCDOCKED
         BE    A4380         IF DOCKED ALREADY, DON'T RESET SHIELDS
         MVC   C$,DCDOCKED
*4260 LET E=3000
         MVC   E,E#3000
*4270 LET P=10
         MVC   P,F#10
*4280 PRINT 'SHIELDS DROPPED FOR DOCKING PURPOSES'
         TMSG  NSGSHDRO
*4290 LET S=0
         XC    S,S
*4300 GOTO 4380
         B     A4380
*4310 IF K3>0  THEN GOTO 4350
A4310    L     R0,K3
         LTR   R0,R0
         BP    A4350
*4320 IF E<E0*.1 THEN GOTO 4370
         LE    FR0,E
         CE    FR0,E#300
         BL    A4370
*4330 LET C$='GREEN'
         MVC   C$,DCGREEN
*4340 GOTO 4380
         B     A4380
*4350 LET C$='RED'
A4350    MVC   C$,DCRED
*4360 GOTO 4380
         B     A4380
*4370 LET C$='YELLOW'
A4370    MVC   C$,DCYELLOW
*4380 IF D(2)>=0  THEN GOTO 4430
*4390 PRINT
*4400 PRINT '***SHORT RANGE SENSORS ARE OUT***'
*4410 PRINT
*4420 GOTO 4530
*4430 LET Q1$='------------------------------------------'
A4380    MVC   MSGTEMP,BLANKS
         MVI   MSGTEMP+28,C'-'
         MVC   MSGTEMP+29(23),MSGTEMP+28
         MVI   MSGTEMP+27,C'+'
         MVI   MSGTEMP+52,C'+'
*4440 PRINT Q1$
         TM    LNO+1,LN24+LN32    BIG SCREEN ?                   78050
         BZ    A4440         NO
         L     R3,BUFAD      GET BUFFER ADDRESS
         AH    R3,LSIZE      POSITION TO FIRST LINE             GP08276
         MVC   0(80,R3),MSGTEMP  MOVE HEADER
         B     A4440B
A4440    LA    R2,MSGTEMP
         LA    R3,51
         BALS  R14,MSG
*4445 PRINT Q$(1,24)
*4450 PRINT Q$(25,48),'     STARDATE              ',T
*4460 PRINT Q$(49,72),'     CONDITION             ',C$
*4470 PRINT Q$(73,96),'     QUADRANT              ',Q1,',',Q2
*4480 PRINT Q$(97,120),'     SECTOR                ',S1,',',S2
*4490 PRINT Q$(121,144),'     TOTAL ENERGY          ',E
*4500 PRINT Q$(145,168),'     PHOTON TORPEDOES      ',P
*4510 PRINT Q$(169,192),'     SHIELDS               ',S
A4440B   L     R0,Q2
         CVH   (R0),MAT3+17,1
         MVI   MAT3+18,C','
         L     R0,Q1
         CVH   (R0),MAT3+19,1
         L     R0,S2
         CVH   (R0),MAT4+17,1
         MVI   MAT4+18,C','
         L     R0,S1
         CVH   (R0),MAT4+19,1
         LE    FR0,E
         FIX   FR0
         CVH   (R0),MAT5+16,6
         L     R0,P
         CVH   (R0),MAT6+17,3
         LE    FR0,S
         FIX   FR0
         CVH   (R0),MAT7+16,6
         MVC   MSGTEMP,BLANKS
         LA    R4,Q$
         LA    R5,8
         LA    R6,MAT1-22
         MVI   MSGTEMP+27,C'×'
         MVI   MSGTEMP+52,C'×'
         B     MATLOOP1
MATLOOP  MVC   MSGTEMP+58(22),0(R6)
MATLOOP1 TM    D+4,X'80'     SHORT RANGE SENSORS OPERATIONAL ?
         BZ    MATLOOP2      YES
         LA    R4,BLANKS     ELSE LEAVE SCREEN BLANK
         CH    R5,H4         FOURTH LINE ?
         BNE   MATLOOP2      NO
         LA    R4,NSGSHOUT   ELSE PUT OUT NO-OP MSG
MATLOOP2 MVC   MSGTEMP+28(24),0(R4)
         TM    LNO+1,LN24+LN32    BIG SCREEN ?                   78050
         BZ    A4515         NO
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         MVC   0(80,R3),MSGTEMP  MOVE HEADER
         B     A4515B
A4515    TMSG  MSGTEMP
A4515B   LA    R4,24(,R4)
         LA    R6,22(,R6)
         BCT   R5,MATLOOP
*4520 PRINT Q1$
         MVC   MSGTEMP,BLANKS
         MVI   MSGTEMP+28,C'-'
         MVC   MSGTEMP+29(23),MSGTEMP+28
         MVI   MSGTEMP+27,C'+'
         MVI   MSGTEMP+52,C'+'
         TM    LNO+1,LN24+LN32    BIG SCREEN ?                   78050
         BZ    A4520         NO
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         MVC   0(80,R3),MSGTEMP  MOVE HEADER
         SPACE
         L     R3,BUFAD      GET BUFFER ADDRESS BACK
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         MVC   2(22,R3),MSGLRS1  MAKE HEADER                    GP08276
         TM    D+8,X'80'     SENSORS WORKING ?
         BZ    A4521         YES
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         MVC   11(11,R3),MSGLRS2  SHOW OUT                      GP08276
         B     A4530
A4521    L     R0,Q1
         CVH   (R0),MSGLSSQ2
         L     R0,Q2
         CVH   (R0),MSGLSSQ1
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         MVC   5(LSGLSSQ,R3),MSGLSSQ  SHOW FOR WHAT             GP08276
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         MVC   3(L'NSGLRSMN,R3),NSGLRSMN  HEADER                GP08276
         AH    R3,LSIZE      POSITION TO NEXT LINE              GP08276
         L     R6,Q1
         A     R6,F#1
         ST    R6,LOOPX1     SAVE LOOP EXIT VALUE
         S     R6,F#2
A4522B   XC    RANDESAV(12),RANDESAV
         ST    R3,RANDESAV+12  SAVE LINE ADDRESS
         L     R5,Q2
         A     R5,F#1
         ST    R5,LOOPX2
         S     R5,F#2
A4523B   SR    R2,R2
         LA    R3,7(,R5)     GET WRAP-AROUND VALUE FOR Q2
         D     R2,F#8
         LA    R4,1(,R2)     NOW IS IN RANGE 1-8 INCL.
         SLL   R4,3           MAKE INTO SECOND INDEX
         SR    R2,R2
         LA    R3,7(,R6)     NOW GET Q1
         D     R2,F#8
         LA    R4,1(R2,R4)   ADD IT IN
         SLL   R4,2
         LH    R0,G-36(R4)
         LA    R3,2(,R5)
         S     R3,Q2
         SLA   R3,2
         ST    R0,RANDESAV-4(R3)
         TM    D+24,X'80'    COMPUTER UP ?
         BNZ   A4524         NO; CAN'T FEED IT ANY INFO
         LH    R0,G-36(R4)
         STH   R0,Z-36(R4)
A4524    A     R5,F#1
         C     R5,LOOPX2
         BNH   A4523B
         MVC   MSGTEMP(22),BLANKS
         MVI   MSGTEMP+3,C':'
         LA    R4,MSGTEMP+5
         LA    R3,3
         LA    R5,RANDESAV
A4524A   L     R0,0(,R5)
         CVH   (R0),0(R4),3
         OC    0(3,R4),OCMIN3                                    78029
         MVI   4(R4),C':'
         LA    R5,4(,R5)
         LA    R4,6(,R4)
         BCT   R3,A4524A
         L     R3,RANDESAV+12   RESTORE LINE ADDRESS
         MVC   0(22,R3),MSGTEMP
         AH    R3,LSIZE      BUMP A LINE                        GP08276
         MVC   3(L'NSGLRSMN,R3),NSGLRSMN                        GP08276
         AH    R3,LSIZE      BUMP A LINE                        GP08276
         A     R6,F#1
         C     R6,LOOPX1
         BNH   A4522B
         B     A4530
A4520    LA    R2,MSGTEMP
         LA    R3,51
         BALS  R14,MSG
*4521 PRINT
*4530 RETURN
A4530    L     R14,A4530SV
         BR    R14
         EJECT
         SPACE 1
A4630    MVI   TEMP1+2,C'8'   LIBRARY COMPUTER CODE
         B     OTRANS7
         SPACE 1
*5380 LET R1=INT(RND(1)*8+1)
A5380    ST    R14,A5380SV
         LA    R0,800        SET LOOP COUNTER                    78029
A5380A   STH   R0,A5380CT    SAVE IT                             78029
         BALS  R14,IRAND8
         ST    R0,IR1
*5390 LET R2=INT(RND(1)*8+1)
         BALS  R14,IRAND8
         ST    R0,IR2
*5400  LET A$='   '
         LA    R1,BLANKS
*5410 LET Z1=R1
*5420 LET Z2=R2
         MVC   Z1(8),IR1
*5430 GOSUB 5680
         BALS  R14,A5680
*5440 IF Z3=0 THEN GOTO 5380
         L     R14,A5380SV
         CLC   Z3,ZEROES
         BNER  R14           RETURN                              78029
         LH    R0,A5380CT    GET LOOP COUNTER                    78029
         BCT   R0,A5380A     NOT EXCEEDED YET                    78029
         LA    R1,C'7'       REQUEST OVERLAY 7                   78029
         LA    R10,24        A4000 - DEAD                        78029
         B     OBRANCH       TERMINATE                           78029
A5380CT  DC    H'0'          LOOP COUNTER                        78029
*5450 RETURN
*5510 REM   ***
*5511 REM   *** INSERTION IN STRING ARRAY FOR QUADRANT
*5512 REM   ***
*5520 LET S8=Z1*24+Z2*3-26
A5510    L     R15,Z1
         SLA   R15,3
         A     R15,Z2
         MH    R15,H3
         LA    R15,Q$-27(R15)
*5530 LET Q$(S8,S8+2)=A$
         MVC   0(3,R15),0(R1)
*5540 REM    ******* PUT IN STRING ROUTINE ****
*5560 RETURN
         BR    R14
*5610 REM *** PRINTS DEVICE NAME FROM ARRAY
*5620 LET S8=R1*12-11
*5640 PRINT D$(S8,S8+11)
*5650 GOTO 5670
*5670 RETURN
*5680 REM   *** STRING COMPARISON IN QUADRANT ARRAY
*5690 LET S8=Z1*24+Z2*3-26
A5680    XC    Z3,Z3
         L     R15,Z1
         SLA   R15,3
         A     R15,Z2
         MH    R15,H3
         LA    R15,Q$-27(R15)
*5700 LET Z3=0
*5720 IF Q$(S8,S8+2) ^= A$  THEN RETURN
         CLC   0(3,R15),0(R1)
         BNER  R14
*5730 LET Z3=1
         MVI   Z3+3,1
*5740 RETURN
         BR    R14
*6510 END
         SPACE 2
OBRANCH  STC   R1,OBTO+2       SET NAME OF DESTINATION
         MVC   OBRET,EXCINVOK+7   SAVE NAME OF CALLER
         LA    R14,0(,R14)   CLEAN UP
         LA    R7,0(,R7)
         SR    R14,R7        GET RELATIVE RETURN ADDRESS
         ST    R14,OBOFF     AND SAVE IT FOR RETURN
OBRAN1  XLOAD  OBTO,R7
         BALS  R14,0(R7,R10)
         L     R10,OBOFF     GET RETURN OFFSET
         MVC   OBTO+2(1),OBRET   MAKE RETURN NAME
         B     OBRAN1        USE SAME CODE FOR RETURN
         SPACE
OBOFF    DC    A(0)          RELATIVE OFFSET TO CALLER
OBTO     DC    C'ST?'        DESTINATION NAME
OBRET    DC    C'?'          CALLER'S NAME
         EJECT
PAGEHEAD ST    R14,PAGESAVE
         L     R10,BUFAD
         LE    FR0,T
         ME    FR0,RANDE10
         FIX   FR0
         MH    R0,H100       FINAGLE KLUTZY EDIT
         CVD   R0,DB
         MVC   MSGDATEN(7),DCONPAT
         MVI   MSGDATEN+L'MSGDATEN,C'.'
         ED    MSGDATEN(7),DB+4
         MVC   80-LSGDATE(LSGDATE,R10),MSGDATE
         AH    R10,LSIZE     BUMP A LINE                        GP08276
         TM    LNO+1,LN24+LN32    BIG SCREEN ?                   78050
         BZ    *+8           NO
         A     R10,TENLINE   ELSE LEAVE ROOM FOR SENSOR DISPLAY GP08276
         ST    R10,MSGLINE
         L     R14,PAGESAVE
         BR    R14
         SPACE 2
MSG      STM   R14,R3,MSGSAVE
         CH    R3,LSIZE                                         GP08276
         BNH   *+8
         LH    R3,LSIZE                                         GP08276
         L     R10,MSGLINE
         C     R10,MSGAD
         BL    MSGADD
         LA    R1,500        DELAY OF 5 SECONDS
         LA    R2,MSGWAIT
         LA    R3,L'MSGWAIT
         BALS  R14,TINPUT
         NOP   0
         BALS  R14,BLANKER
         BALS  R14,PAGEHEAD
         LM    R14,R3,MSGSAVE
         B     MSG
MSGADD   S     R3,F#1
         BM    MSGADD1
         STC   R3,*+5
         MVC   0(0,R10),0(R2)
         AH    R10,LSIZE                                        GP08276
         ST    R10,MSGLINE
MSGADD1  LM    R14,R3,MSGSAVE
         BR    R14
         SPACE 2
TINPUT   STM   R14,R6,TINPSAV
         TM    LNO+1,LN24+LN32    BIG SCREEN ?                   78050
         LA    R14,TINPUT1   SET SUBROUTINE RETURN ADDRESS
         BZR   R14           NO; LEAVE AS IS
         ST    R14,A4530SV   SET RETURN ADDRESS
         B     A4380         PUT OUT STATUS INFO
TINPUT1  OI    INCOURSE+1,X'F0'
TINPUTP  MVC   INTEXT,BLANKS
         XC    INI(8),INI
         NC    INCOURSE+1(1),COURSCON
         LM    R2,R3,TINPSAV+16
        XPAGE  (R2),(R3)     WRITE THE SCREEN
         LE    FR0,T         GET TIME
         AE    FR0,E#@1      GIVING ORDERS TAKES TIME
         STE   FR0,T         SET NEW TIME
         L     R4,IODELAY    SAVE THE WAIT TIME
         MVC   IODELAY,TINPSAV+12   SET THE REQUESTED INTERVAL
        XWAIT  END=TINPUTN
         ST    R4,IODELAY    RESET NORMAL INTERVAL
        XREAD  ,              GET A REPLY
          B    TINPUTM       RETURN WITH ENTER ONLY
         B     TINPUTA        LOOK AT REPLY
TINPUTN  ST    R4,IODELAY    RESET NORMAL WAIT TIME
         LM    R14,R6,TINPSAV    RESTORE REGS
         MVI   COURSCON,X'FF'
         BR    R14           SHOW TIME EXPIRED
         SPACE
TINPUTA  LA    R5,REPLY
        XLOOK  T=VERBTAB
         AIF   ('&CRT' NE '3270').NOPFK
         CLI   0(R5),X'10'   TEST-REQ = 0
         BL    NOPFK          NO
         CLI   0(R5),X'19'   FINAGLED FUNCTION KEY ?
         BNH   NOPFK1        RANGE 0-9
         CLI   0(R5),X'1C'   RANGE 10-12 ?
         BH    NOPFK         NO
         LA    R14,X'1A'     MAKE SUBTRACT VALUE
         XR    R15,R15
         IC    R15,0(,R5)
         SR    R15,R14
         STC   R15,4(,R5)
         OI    4(R5),C'0'
         MVI   3(R5),C'1'
         MVI   5(R5),C'.'
         LA    R5,3(,R5)
         B     NOPFK
NOPFK1   OI    0(R5),C'0'    MAKE DIGIT
         MVI   5(R5),C'.'    ALLOW TEXT INPUT AS DECIMAL PORTION
         MVC   4(1,R5),0(R5)    SHIFT OVER
         LA    R5,4(,R5)
.NOPFK   ANOP
NOPFK    CLI   0(R5),C' '    ANY INPUT AT ALL ?
         BE    TINPUTM        NO - RETURN ALL ZEROES
         MVC   INTEXT,0(R5)   SAVE THE TEXT
         CLI   0(R5),C'-'    MINUS SIGN ?
         BNE   *+8             NO
         LA    R5,1(,R5)     ELSE SKIP OVER IT
         MVI   TEMP1,C'0'
         MVC   TEMP1+1(7),TEMP1
         LA    R4,8
         LE    FR2,E#0
INPUT1   CLI   0(R5),C' '
         BE    INPUT9
         CLI   0(R5),C'.'
         BNE   INPUT2
         CE    FR2,E#0       SECOND TIME ?
         BNE   TINPUTP        YES - LET HIM TRY AGAIN
         LE    FR2,E#1       ELSE START COUNTING DECIMALS
         B     INPUT4
INPUT2   CLI   0(R5),C'0'
         BL    TINPUTP
         CLI   0(R5),C'9'    HOW ?
         BH    TINPUTP
         MVC   TEMP1(7),TEMP1+1
         MVC   TEMP1+7(1),0(R5)
INCOURSE B     INCOURSN      SKIP IF NO COURSE INPUT
         TR    TEMP1+7(1),TRT1-C'0'  TRANSLATE PFK TO INTERNAL
INCOURSN OI    INCOURSE+1,X'F0'  RESET NOP TO BRANCH
         ME    FR2,RANDE10
INPUT4   LA    R5,1(,R5)
         BCT   R4,INPUT1
         CLI   0(R5),C' '
         BNE   TINPUTP
INPUT9   PACK  DB,TEMP1(8)
         CLI   INTEXT,C'-'    NEGATIVE ?
         BNE   *+8           NO
         OI    DB+7,1         ELSE SET MINUS SIGN
         CVB   R0,DB
         FLOAT (R0)
         CE    FR2,E#@5      WAS A POINT MADE ?
         BL    *+6           NO; SKIP DIVIDE
         DER   FR0,FR2
         STE   FR0,INE
         FIX   FR0
         ST    R0,INI
TINPUTM  LM    R14,R6,TINPSAV
         MVI   COURSCON,X'FF'
         B     4(,R14)
         SPACE 2
FIX      STE   FR0,DB+4
         LPER  FR0,FR0
         AE    FR0,E#@0001   COMPENSATE FOR LOW
         AU    FR0,RANDX46   GIMMICK
         STE   FR0,DB
         MVI   DB,0          CLOBBER EXPONENT
         L     R0,DB
         TM    DB+4,X'80'    NEGATIVE INPUT ?
         BZR   R14            NO - GIVE IT
         LNR   R0,R0         ELSE SET IT
         BR    R14
         SPACE 2
FLOAT    ST    R0,DB+4
         LPR   R0,R0
         O     R0,RANDX46    PUT IN EXPONENT
         ST    R0,DB
         LE    FR0,DB
         ME    FR0,E#1       NORMALIZE
         TM    DB+4,X'80'      NEGATIVE ?
         BZR   R14           NO
         LNER  FR0,FR0
         BR    R14
         SPACE 2
RANDOME  STM   R14,R3,RANDESAV
         BALS  R14,RANDOM
         MVI   RANDAU,X'40'  FINAGLE                            GP08276
         LD    FR0,RANDAU    GET VALUE/2                         78029
         LM    R14,R3,RANDESAV                                   78029
         BR    R14                                               78029
         SPACE 2                                                 78029
         RANDOM ,                                                78029
RANDE10  DC    E'10.0'       NOT IN NEW RANDOM                   78029
RANDX46  DC    X'46000000'   NOT IN NEW RANDOM                  GP04234
RANDE465 DC    E'0.23283065E-9'  SCALE .0-.9                     78029
         SPACE 2
IRAND8   ST    R14,IRAND8SV
         BALS  R14,RANDOME
         ME    FR0,E#8
         AE    FR0,E#1
         FIX   FR0
         L     R14,IRAND8SV
         BR    R14
         SPACE 2
FND      STM   R14,R4,RANDESAV
         L     R2,I
         SLA   R2,2
         LA    R3,S1
         SR    R0,R0
         LA    R4,2
FND1     L     R1,K-4(R2)
         S     R1,0(,R3)
         LR    R15,R1
         MR    R14,R1
         AR    R0,R15
         LA    R2,12(,R2)
         LA    R3,S2
         BCT   R4,FND1
         FLOAT (R0)
         BALS  R14,SQRT
         LM    R14,4,RANDESAV
         BR    R14
         SPACE 2
SQRT     CE    FR0,E#0
         BH    SQRT1
         LE    FR0,E#0
         BR    R14
SQRT1    STE   FR0,SQRTV
         LA    R15,11
         B     SQRT3
SQRT2    LER   FR2,FR0
         LE    FR0,SQRTV
         DER   FR0,FR2
         AER   FR0,FR2
SQRT3    HER   FR0,FR0
         BCT   R15,SQRT2
         BR    R14
         EJECT
YESYES   B     EXCYES           TERMINATION
MSGTEMP  DC    CL80' '
LSGTEMP  EQU   *-MSGTEMP
MSGITDAT DC    C'IT IS '
MSGDATE  DC    C'STARDATE'
MSGDATEN DC    C' 1234'
LSGITDAT EQU   *-MSGITDAT
         DC    C'.5'         HOUR FIELD OF DATE
LSGDATE  EQU   *-MSGDATE
NSGSHDRO DC    C'SHIELDS DROPPED FOR DOCKING PURPOSES'
NSGSHOUT DC    CL24' SHORT RANGE SENSORS OUT'
MAT1     DS    0X .
MAT2     DC    CL16'CONDITION'
C$       DC    CL6' '         ALERT STATUS
MAT3     DC    CL16'QUADRANT',CL6' '
MAT4     DC    CL16'SECTOR',CL6' '
MAT5     DC    CL16'FREE ENERGY',CL6' '
MAT7     DC    CL16'SHIELD ENERGY',CL6' '
MAT6     DC    CL16'PHOTON TORPEDOES',CL6' '
MAT8     DC    CL22' '
         ORG   MAT8
         DC    C'COURSE '
MAT8C    DC    C'X.XX',C'  WARP '
MAT8W    DC    C'X.XX'
         ORG
DCDOCKED DC    C'DOCKED'
DCYELLOW DC    C'YELLOW'
DCGREEN  DC    CL6'GREEN'
DCRED    DC    CL6'*RED*'
MSGWAIT  SMI   'MESSAGE WAITING  '
MSGLRS1  DC    C'LONG RANGE SENSOR SCAN'
MSGLRS2  DC    C'INOPERATIVE'
MSGLSSQ  DC    C'FOR QUADRANT'
MSGLSSQ1 DC    C' 1',C','
MSGLSSQ2 DC    C'2'
LSGLSSQ  EQU   *-MSGLSSQ
NSGLRSMN DC    0CL19' ',19C'-'
OCZER3   DC    C'000'        OR MASK FOR LEADING ZEROES
OCMIN3   DC    C'---'        ALTERNATE OR MASK                   78029
TRT1     DC    C'0432501678'  PFK => INTERNAL
TRT2     DC    C'063214789'   INTERNAL => PFK
COURSCON DC    X'FF'         MASK FOR PFK=>COURSE CONVERSION
         SPACE 2
VERBTAB  BTAB  END,YESYES,BASE=*
         BTAB  CAN,YESYES                                       GP08276
         BTAB  CLEAR,A1270
         BTAB  *CANCEL,YESYES
*NONO    BTAB  *PF3,YESYES                                      GP08276
         BTAB  *PF15,YESYES                                     GP08276
         BTAB  *CLEAR,A1270
         BTAB  *END
         EJECT
         INSECT
         SPACE 2
         LTORG
         SPACE 1
         ORG   EXHCCSTA+4095    FORCE MODULE SIZE TO 4K
         DS    X .           FORCE SIZE
         ORG
         SPACE 2
         AIF   ('&SECT' NE 'D').NOJUNK   AVOID BIG PRINT GEN LISTING
&SYSECT  CSECT
         MSECT
         SPACE 2
.NOJUNK  MEND
