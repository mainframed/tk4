         MACRO ,                                         NEW ON GP09202
&NM      XATTACH &PARM,&VL,&EP=,&EPLOC=,&ECB=WECB,&MF=
         LCLC  &LBL,&M,&LOP
         LCLA  &I,&J,&N
&LBL     SETC  'ZZ'.'&SYSNDX'
&NM      STM   R2,R5,32(R13)
         PUSH  USING
.*--------------------------------------------------------------------*
.*  NON-STANDARD HANDLING OF PARAMETER LIST:                          *
.*                                                                    *
.*  &N IS 1 - GENERATE SIMPLE LA UNLESS PARENTHESIZED (BACKWARD COMP) *
.*  &N IS 2 OR MORE - NORMAL PARAMETER LIST                           *
.*--------------------------------------------------------------------*
&N       SETA  N'&PARM                                          GP03041
         AIF   (&N LT 1).LAPARM                                 GP03041
         AIF   (&N GT 1).NOTONE                                 GP03041
         AIF   ('&PARM'(1,1) EQ '(' AND '&PARM'(1,2) NE '(').NOTONE
         AIF   ('&PARM'(1,2) NE '((' OR                                *
               '&PARM'(K'&PARM-1,2) NE '))').LAPARM             GP03041
.NOTONE  AIF   ('&MF(1)' EQ 'E').NODC                           GP03041
*TEST*   CNOP  0,4           WORD ALIGN FOR PARM LIST           GP03041
         MACPARM *+(&N+1)*4,OP=B,MODE=ONE                       GP03041
&LBL.P   DC    &N.AL4(0)     INLINE, NONREFRESHABLE PARM LIST   GP03041
         AGO   .HAVEDC                                          GP03041
.NODC    ANOP  ,                                                GP03041
&LOP     SETC  '&MF(2)'                                         GP03041
.HAVEDC  MACPARM R1,&LOP     LOAD PARM LIST                     GP03041
&I       SETA  0             JUST IN CASE                       GP03041
         AIF   ((&N+1) EQ K'&PARM).GETADDR  PARM LIST IS NULL   GP03041
&M       SETC  'R1'          ABNORMAL PARM LIST POINTER         GP03041
&J       SETA  0             PARM OFFSET FOR NEXT ITEM          GP03041
.PRMLOOP AIF   (&I GE &N).GETADDR    DONE                       GP03041
&I       SETA  &I+1                                             GP03041
         AIF   ('&PARM(&I)' EQ '').NOLST                        GP03041
         AIF   ('&PARM(&I)'(1,1) NE '''').NOCHAR                GP03041
         MACPARM R0,=C&PARM(&I)                                 GP03041
         AGO   .HAVER0                                          GP03041
.NOCHAR  MACPARM R0,&PARM(&I)  LOAD USER'S ADDRESS              GP03041
.HAVER0  MACPARM R0,&J.(,&M),OP=ST   PLACE INTO PARAMETER LIST  GP03041
.NOLST   AIF   (&I NE &N).PRMBUMP                               GP03041
         AIF   ('&VL' NE 'VL').GETADDR                          GP03041
         OI    &J.(&M),X'80'  END LIST BIT                      GP03041
         AGO   .GETADDR                                         GP03041
.PRMBUMP ANOP  ,                                                GP03041
&J       SETA  &J+4          NEXT LIST OFFSET                   GP03041
         AGO   .PRMLOOP                                         GP03041
.*                                                              GP03041
.LAPARM  MACPARM R1,&PARM,NULL=SKIP                             GP02241
.GETADDR MACPARM R2,&ECB     GET AN ECB
         XC    0(4,R2),0(R2) JUST IN CASE (DONE BY ATTACH?)
         NEED  TCB,CVT
         LTCB  R3,USE=YES
         LR    R5,R3         SET NON-ZERO FLAG
         TM    TCBPKF,TCBFLAG  NON-ZERO PROTECT KEY ?
         BNZ   &LBL.U        YES; USE AS IS
         OI    TCBPKF,X'80'  SET KEY 8
         SR    R5,R5         SET KEY ZERO FLAG
&LBL.U   ATTACH EP=&EP,EPLOC=&EPLOC,ECB=(R2),SZERO=NO  WAIT ON SUBTASK
         LTR   R5,R5         DID WE CHANGE TCB PROTECT KEY ?
         BNZ   &LBL.D        NO
         NI    TCBPKF,255-TCBFLAG  RESET KEY
&LBL.D   LTR   R5,R15
         BNZ   &LBL.F        FAILED ?
         ST    R1,DB3
         WAIT  ECB=(R2)
         DETACH DB3          AND GET RID OF IT
         ICM   R15,7,1(R2)
&LBL.F   STM   R2,R5,32(R13)
         POP   USING
.MEND    MEND  ,
