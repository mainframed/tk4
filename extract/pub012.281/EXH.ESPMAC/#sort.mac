         MACRO
&NAME    #SORT &FIELDS=(1,1,CH,A),&FIRST=,&LAST=,&LENGTH=
         MNOTE *,'       #SORT     VERSION 001 04/29/76  04/29/76  GPW'
.**********************************************************************
.*                                                                    *
.* #SORT                                                              *
.*                                                                    *
.* FUNCTION       GENERATE CODING TO SORT A TABLE IN ASCENDING OR     *
.*                DESCENDING ORDER BASED ON A KEY FIELD IN EACH       *
.*                ENTRY.                                              *
.*                                                                    *
.* DESCRIPTION    A BUBBLE SORT IS PERFORMED.  THE KEYS               *
.*                OF CONSECUTIVE ITEMS ARE COMPARED.  THE ITEMS       *
.*                ARE SWITCHED IF NECESSARY.  PROCESSING PROCEEDS     *
.*                TO THE NEXT PAIR OF ENTRIES.  AT THE END OF ONE     *
.*                PASS, AT LEAST THE HIGHEST KEY IS IN THE PROPER     *
.*                POSITION.  THE LIST IS REDUCED TO A SUBLIST         *
.*                FROM THE FIRST ENTRY TO THE LAST ENTRY WHICH        *
.*                WAS SWITCHED AND THE SUBLIST IS THEN PROCESSED      *
.*                AS WAS THE ORIGINAL LIST.  THIS CONTINUES UNTIL     *
.*                THE ENTIRE LIST HAS BEEN SORTED.  IF AT ANY POINT,  *
.*                PROCESSING THE LIST RESULTS IN NO ENTRIES BEING     *
.*                SWITCHED, THE LIST IS IN ORDER AND PROCESSING       *
.*                IS TERMINATED.                                      *
.*                                                                    *
.*                REGISTERS 0, 1, 14, AND 15 ARE USED BY THE          *
.*                SORT AND MUST NOT BE SPECIFIED AS FIRST OR          *
.*                LAST VALUES.                                        *
.*                                                                    *
.* SYNTAX         NAME     #SORT FIELDS=(KEYPOS,KEYLEN,FMT,ORDER),    *
.*                               FIRST=SYMBOL1,                       *
.*                               LAST=SYMBOL2,                        *
.*                               LENGTH=NUM                           *
.*                                                                    *
.*                NAME   - SPECIFIES THE SYMBOLIC TAG TO BE           *
.*                         ASSIGNED TO THE FIRST INSTRUCTION          *
.*                         GENERATED.  THIS OPERAND IS OPTIONAL.      *
.*                                                                    *
.*                FIELDS - SPECIFIES THE SORT PARAMETERS.             *
.*                         KEYPOS - SPECIFIES THE RELATIVE KEY        *
.*                                  POSITION IN THE RECORD.           *
.*                         KEYLEN - SPECIFIES THE LENGTH OF THE KEY.  *
.*                         FMT    - SPECIFIES THE FORMAT OF THE       *
.*                                  DATA TO BE SORTED.  THE ONLY      *
.*                                  VALID FORMAT IS CHARACTER (CH).   *
.*                         ORDER  - SPECIFIES IF THE LIST IS TO BE    *
.*                                  SORTED IN ASCENDING ORDER (A),    *
.*                                  OR DESCENDING ORDER (D).  THE     *
.*                                  DEFAULT IS A.                     *
.*                                                                    *
.*                FIRST  - SPECIFIES THE SYMBOLIC NAME OF THE FIRST   *
.*                         ENTRY IN THE TABLE OR A REGISTER WHICH     *
.*                         CONTAINS THE ADDRESS OF THE FIRST ENTRY.   *
.*                         IF A SYMBOLIC NAME IS SPECIFIED, IT MUST   *
.*                         BE ADDRESSABLE.  IF A REGISTER IS          *
.*                         SPECIFIED, IT MUST BE ENCLOSED IN          *
.*                         PARENTHESES.  THIS PARAMETER IS REQUIRED.  *
.*                                                                    *
.*                LAST   - SPECIFIES THE SYMBOLIC NAME OF THE LAST    *
.*                         ENTRY IN THE TABLE OR A REGISTER WHICH     *
.*                         CONTAINS THE ADDRESS OF THE LAST ENTRY.    *
.*                         IF A SYMBOLIC NAME IS SPECIFIED, IT MUST   *
.*                         BE ADDRESSABLE.  IF A REGISTER IS          *
.*                         SPECIFIED, IT MUST BE ENCLOSED IN          *
.*                         PARENTHESES.  THIS PARAMETER IS REQUIRED.  *
.*                                                                    *
.*                LENGTH - SPECIFIES THE LENGTH OF THE ENTRIES IN     *
.*                         THE TABLE.  THIS PARAMETER IS REQUIRED.    *
.*                                                                    *
.*       MINOR CHANGES TO ALLOW SYMBOLIC VALUES FOR ALL FIELDS  G.P.  *
.*                                                                    *
.* ERRORS         INVALID NUMBER OF ENTRIES IN FIELDS PARAMETER - 8   *
.*                FORMAT TYPE NOT SUPPORTED                     - 8   *
.*                FIRST VALUE NOT SPECIFIED                     - 8   *
.*                LAST  VALUE NOT SPECIFIED                     - 8   *
.*                LENGTH VALUE NOT SPECIFIED                    - 8   *
.*                                                                    *
.* EXAMPLE        SORT A TABLE OF ENTRIES WHERE THE FIRST 8 BYTES     *
.*                ARE THE KEYS.  THE LENGTH OF EACH ENTRY IS 50       *
.*                BYTES.                                              *
.*                                                                    *
.*                         #SORT FIELDS=(1,8,CH,A),LENGTH=50,         *
.*                               FIRST=BEGIN,LAST=END                 *
.*                                                                    *
.*                BEGIN    DC    CL8'A',CL42'ENTRY 1'                 *
.*                         DC    CL8'D',CL42'ENTRY 2'                 *
.*                         DC    CL8'X',CL42'ENTRY 3'                 *
.*                         DC    CL8'$',CL42'ENTRY 4'                 *
.*                         DC    CL8'Q',CL42'ENTRY 5'                 *
.*                END      DC    CL8'M',CL42'ENTRY 6'                 *
.*                                                                    *
.* GLOBALS                                                            *
.*                                                                    *
.*                NONE                                                *
.*                                                                    *
.* MACROS USED                                                        *
.*                                                                    *
.*                NONE                                                *
.*                                                                    *
.**********************************************************************
.*
         LCLC  &X,&Y,&Z,&LEN,&HI,&I                             GP08303
         LCLA  &N                                               GP08303
.*
&I       SETC  '#SOR'.'&SYSNDX'(2,3)
&N       SETA  N'&FIELDS
&HI      SETC  'H'
         AIF   (&N LT 3 OR &N GT 4).ERR1                        GP08303
         AIF   ('&FIELDS(3)' NE 'CH').ERR2
         AIF   (&N EQ 3).SETREGS                                GP08303
         AIF   ('&FIELDS(&N)' NE 'D').TESTA
&HI      SETC  'L'
         AGO   .SETREGS
.TESTA   AIF   ('&FIELDS(&N)' EQ 'A').SETREGS
         MNOTE *,'*** SORT TYPE NOT A OR D - A ASSUMED'
.SETREGS ANOP
&LEN     SETC  '&LENGTH'                                        GP08303
&X       SETC  '&FIELDS(1)'.'-1'       OFFSET WITHIN RECORD     GP08303
&Y       SETC  '&FIELDS(2)'            LENGTH OF SORT-KEY       GP08303
&Z       SETC  '&X'.'+'.'&LEN'         OFFSET WITHIN NEXT REC.  GP08303
         AIF   ('&FIRST'  EQ '').ERR3
         AIF   ('&LAST'   EQ '').ERR4
         AIF   ('&LENGTH' EQ '').ERR5
.*
&NAME    LA    R0,&LENGTH              LOAD LENGTH OF AN ENTRY
         AIF   ('&LAST'(1,1) EQ '(').RFORM1
         LA    R1,&LAST                LOAD LAST ENTRY ADDRESS
         AGO   .CONT1
.RFORM1  LR    R1,&LAST                LOAD LAST ENTRY ADDRESS
.CONT1   ANOP
&I.A     SR    R14,R14                 CLEAR LAST SWITCH ADDRESS
         AIF   ('&FIRST'(1,1) EQ '(').RFORM2
         LA    R15,&FIRST              LOAD FIRST ENTRY ADDRESS
         AGO   .CONT2
.RFORM2  LR    R15,&FIRST              LOAD FIRST ENTRY ADDRESS
.CONT2   SR    R1,R0                   POINT TO PENULTIMATE
         CR    R15,R1                  TEST AGAINST FIRST ENTRY
         BH    &I.D                    IF HIGH, LIST SORTED
&I.B     CLC   &X.(&Y,R15),&Z.(R15)    COMPARE KEYS
         BN&HI &I.C
         XC    0(&LEN,R15),&LEN.(R15)  SWITCH ENTRIES
         XC    &LEN.(&LEN,R15),0(R15)
         XC    0(&LEN,R15),&LEN.(R15)
         LR    R14,R15                 SAVE ADDRESS OF SWITCHED ENTRY
&I.C     BXLE  R15,R0,&I.B             POINT TO NEXT ENTRY
         LTR   R1,R14                  COPY AND TEST LAST SWITCHED ADDR
         BNZ   &I.A
&I.D     EQU   *
         MEXIT
.ERR1    MNOTE 8,'INVALID NO. OF ENTRIES IN FIELDS PARAMETER'
         MEXIT
.ERR2    MNOTE 8,'FORMAT TYPE IS NOT SUPPORTED'
         MEXIT
.ERR3    MNOTE 8,'FIRST ENTRY ADDRESS NOT SPECIFIED.'
         MEXIT
.ERR4    MNOTE 8,'LAST  ENTRY ADDRESS NOT SPECIFIED.'
         MEXIT
.ERR5    MNOTE 8,'LENGTH NOT SPECIFIED.'
         MEND
