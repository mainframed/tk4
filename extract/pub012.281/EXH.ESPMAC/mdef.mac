         MACRO ,
&NM      MDEF  &LIST,&TYPE=,&PFX=,&SECT=,&WARN=
.*
.*   MDEF IS THE MACRO USED TO DEFINE ONE ERROR MESSAGE.
.*     THIS MACRO IS LIMITED TO MESSAGE TABLE MODULES, STARTED WITH
.*     MDEFHEAD, AND TERMINATED BY MDEFEND. EACH COMBINATION OF
.*     LANGUAGE AND CHARACTER SET IS EXPECTED TO HAVE A SEPARATE TABLE.
.*
.*   &LB      THE NAME FIELD SPECIFIES THE MESSAGE IDENTIFIER
.*   &PFX     SPECIFIES A PREFIX TO THE MESSAGE ID, AND IS A GLOBAL
.*            (ONCE USED IT CAN BE CHANGED, BUT NOT TURNED OFF)
.*
.*   &LIST    ARE THE WORDS OF THE MESSAGE, SEPARATED BY COMMAS.
.*      ENTRIES MAY BE:
.*        1) SIMPLE WORD, E.G.         DSNAME
.*        2) QUOTED STRING, E.G.       'IT''S'
.*        3) HEXADECIMAL TEXT, E.G.    X'070809'
.*        4) REPLACEABLE USER PARAMETER:  *1 - *16
.*        5) A FUNCTION INVOCATION (DEFERRED)
.*
.*   &TYPE    TYPE OF DATA BEING DEFINED. TYPE IS LOCAL, BUT OVERRIDES
.*        ANY TYPE SPECIFIED IN MDEFHEAD.
.*
.*      SUPPORTED ARE:      (DEFAULT IS C IF NOT SPECIFIED ANYWHERE)
.*        C  CHARACTER CONSTANT (USE FOR X', ETC. ANYWAY)
.*        G  DBDC VALUE (NOT SUPPORTED YET)
.*
.*   REQUIRES INNER MACROS MDEFDICT, AND MACQOTER.
.*     RELATED MACROS ARE MDEFHEAD, MDEFEND, AND MDEFGBL.
.*   MUST BE INVOKED IN AN RSECT. CREATES AND USES RSECTS NAMED
.*   MSGDSCT AND MSGSECT.
.*
.*   WHEN SECT=DSECT IS SPECIFIED, MAPPINGS FOR THREE CONTROL BLOCKS
.*   ARE EXPANDED: MTPDSECT - MAP MESSAGE POINTER
.*                 MTMDSECT - MAP MESSAGE DEFINITION AND SPECIALS
.*                 MTDDSECT - MAP DICTIONARY DEFINITION
.*
.*                                      V1 WRITTEN 3/1999 BY GYP
         COPY  MDEFGBL
         GBLC  &MACQSTR
         LCLA  &I,&J,&K,&N,&STRCNT,&STRDC
         LCLC  &CH,&CHIX,&STRING,&LQ,&TCH,&FCODE,&LOTYP,&DCLAB
         LCLC  &QU,&TP,&LB                                      GP03245
&ZZSECT  SETC  '&SYSECT'
         AIF   ('&SECT' EQ 'DSECT').MAPPER
&LB      SETC  '&NM'         SET LABEL TO SUPPLIED VALUE
         AIF   ('&ZZMPFX' EQ '').NMDOPF                         GP08078
&N       SETA  K'&ZZMPFX                                        GP08078
&DCLAB   SETC  '&LB'(1,&N)                                      GP08078
         AIF   ('&ZZMPFX' NE '&DCLAB').NMDOPF                   GP08078
&LB      SETC  '&NM'(&N+1,K'&NM)   REMOVE DUPLICATE PREFIX      GP08078
.NMDOPF  ANOP  ,                                                GP08078
&N       SETA  N'&SYSLIST
&DCLAB   SETC  '&ZZMPFX'.'&LB'  LABEL FOR FIRST/ONLY DEF STRING
.*  STRING ACCUMULATES ENTRIES FOR THE MESSAGE'S DICTIONARY LIST
.*  STRCNT CONTAINS THE NUMBER OF ENTRIES
&STRING  SETC  ''
&STRCNT  SETA  0
.*  PFX OVERRIDES GLOBAL PREFIX, IF ANY, UNTIL CHANGED
         AIF   ('&PFX' EQ '').NONUPFX
&ZZMPFX  SETC  '&PFX'
.NONUPFX AIF   (&N GT 0).NUMGOOD
.*  NOTE THIS MAY APPEAR WHEN USER HAS UNBALANCED APOSTROPHES
         MNOTE 8,'MDEF: NO MESSAGE TEXT PROCESSABLE'
         MEXIT ,
.NUMGOOD AIF   ('&LB' NE '').LABGOOD
         MNOTE 8,'MDEF: MESSAGE ID (NAME FIELD) OMITTED'
         MEXIT ,
.*  MAINTAIN GLOBAL TYPE. NOTE THAT X' IS TREATED AS C WITH X IN DATA
.LABGOOD ANOP  ,
&LOTYP   SETC  'C'
         AIF   ('&ZZMDTYP' EQ '').HAVEGBL
&LOTYP   SETC  '&ZZMDTYP'
.HAVEGBL AIF   ('&TYPE' EQ '').TRYWARN
&LOTYP   SETC  '&TYPE'
.*   CHECK FOR OVERRIDE OF OUT-OF-SEQUENCE WARNING
.*
.TRYWARN AIF   (T'&WARN EQ 'O').GETWORD                         GP13237
&ZZMGWRN SETB  (&ZZMGWRN AND NOT ('&WARN'(1,1) EQ 'N'))         GP13237
&ZZMGWRN SETB  (&ZZMGWRN OR ('&WARN'(1,1) EQ 'Y'))              GP13237
.*
.*  LOOP THROUGH EACH WORD IN THE LIST
.*
.GETWORD AIF   (&K GE &N).PLANT
&K       SETA  &K+1
&CH      SETC  '&SYSLIST(&K)'
&FCODE   SETC  ''            NO SPECIAL CODE
&TCH     SETC  ''            NO SPECIAL TRAILER
&I       SETA  K'&CH         SEE HOW LONG IT IS
         AIF   (&I LT 1).COMMA  TREAT AS COMMA
         AIF   (&I LT 2).WORD   NOTHING SPECIAL?
         AIF   (N'&SYSLIST(&K) LE 1).NOSUB
         AIF   ('&SYSLIST(&K,1)'(1,1) EQ '*').PARM
.NOSUB   AIF   ('&CH'(1,1) EQ '*').PARM
&TCH     SETC  '&CH'(&I,1)
         AIF   ('&TCH' EQ '×').TRSP    ABUTTAL?
         AIF   ('&TCH' EQ '|').TRSP    ABUTTAL?
         AIF   ('&TCH' EQ '-').TRCH
         AIF   ('&TCH' EQ '.').TRCH
         AIF   ('&TCH' EQ ':').TRCH
         AIF   ('&TCH' EQ ';').TRCH
         AIF   ('&TCH' EQ '/').TRCH
         AIF   ('&TCH' EQ '!').TRCH
         AIF   ('&TCH' EQ '?').TRCH
         AIF   ('&TCH' EQ '+').TRCH
         AIF   ('&TCH' EQ '*').TRCH
         AGO   .WORD
.*
.*  PROCESS A PARM REFERENCE
.*    GENERAL FORM IS (*N,TYPE,MOD)
.*    N IS THE PARAMETER NUMBER IN CALL
.*    TYPE IS C (DEFAULT), I, P, ETC.
.*    MOD IS A FORMATTING MODIFIER
.*
.PARM    ANOP  ,             PRELIMINARY
&J       SETA  1
&QU      SETC  '0'
&TP      SETC  'C'
         AIF   (N'&SYSLIST(&K) LT 3).PARM2
&QU      SETC  '&SYSLIST(&K,3)' QUALIFIER, IF ANY
.PARM2   AIF   (N'&SYSLIST(&K) LT 2).PARM1
&TP      SETC  '&SYSLIST(&K,2)' FORMATTING TYPE (C, O, X, P, I)
.PARM1   AIF   ('&TP' NE 'UI' AND '&TP' NE 'IU').PARMTP
&TP      SETC  'U'
.PARMTP  AIF   ('&TP' EQ 'CTAPDIIHXBBXXX'(&J,1)).PARMTPF
&J       SETA  &J+1
         AIF   (&J LE 16).PARMTP
.PARMTPF ANOP  ,
&J       SETA  &J-1
&TP      SETC  '&J'
&CH      SETC  '&SYSLIST(&K,1)'
&TCH     SETC  '&CH'(2,&I-1)  ISOLATE PARM NUMBER
&FCODE   SETC  'X''E000''+('.'&TCH'.'-1)*256+16*'.'&QU'.'+'.'&TP'
         AGO   .CODESTR
.*
.*  NULL PARAMETER - EXPAND A COMMA AND SPACE
.*
.COMMA   ANOP  ,
&CH      SETC  ','
&FCODE   SETC  'X''FD00''+C'','''
         AGO   .CODESTR      ADD JUST A COMMA
.*
.*  ABUTTAL - SEE WHETHER PRECEDING CHARACTER IS ALSO SPECIAL
.*
.TRSP    ANOP  ,             NO TRAILING SPACE
&TCH     SETC  ' '
&FCODE   SETC  'X''FE00''+C'''.'&TCH'.''''  ABUTTAL - NO SPACE
&CH      SETC  '&CH'(1,&I-1)  DROP TRAILER
&I       SETA  K'&CH
&TCH     SETC  '&CH'(&I,1)
         AIF   (&I LT 2).WORD   TOO SHORT -  PROCESS WORD PROPER
         AIF   ('&TCH' EQ '-').NSCH
         AIF   ('&TCH' EQ '.').NSCH
         AIF   ('&TCH' EQ ':').NSCH
         AIF   ('&TCH' EQ ';').NSCH
         AIF   ('&TCH' EQ '/').NSCH
         AIF   ('&TCH' EQ '!').NSCH
         AIF   ('&TCH' EQ '?').NSCH
         AIF   ('&TCH' EQ '+').NSCH
         AIF   ('&TCH' NE '*').WORD
.NSCH    ANOP  ,             SPECIAL CHARACTER + ABUTTAL
&CH      SETC  '&CH'(1,&I-1)  DROP TRAILER
&FCODE   SETC  'X''FD00''+C'''.'&TCH'.''''
         AGO   .WORD         PROCESS REST
.*
.*  SPECIAL CHARACTER - STRIP FROM WORD, AND ADD LEXICAL SUFFIX ENTRY
.*
.TRCH    ANOP  ,
&CH      SETC  '&CH'(1,&I-1)  DROP TRAILER
&FCODE   SETC  'X''FD00''+C'''.'&TCH'.''''
.*
.*  EXTRACT WORD; SEE WHAT IT IS; ADJUST ACCORDINGLY
.*  REGARDLESS OF CURRENT FORM, PUT IT IN QUOTES
.WORD    ANOP  ,
&I       SETA  K'&CH
         AIF   (&I LT 3).WORDQ
         AIF   ('&CH'(1,2) EQ 'X''').WORDH
         AIF   ('&CH'(1,2) EQ 'B''').WORDH
         AIF   ('&CH'(1,2) EQ 'C''').WORDC
         AIF   ('&CH'(1,2) NE 'Z''').WORDQ
.WORDC   ANOP  ,
&CH      SETC  '&CH'(2,&I-1)
         AGO   .WORDQ
.WORDH   ANOP  ,
&MACQSTR SETC  '&CH'
         AGO   .WORDD
.WORDQ   MACQOTER &CH,OPT=QUOTE,NAME=MDEF,TYPE=&LOTYP
.*  ADD THIS WORD TO DICTIONARY, OR GET DICTIONARY INDEX IN ZZDCTRT
.WORDD   MDEFDICT &MACQSTR,TYPE=&LOTYP
&CHIX    SETC  '00000'.'&ZZDCTRT'
&J       SETA  K'&CHIX
&CHIX    SETC  '&CHIX'(&J-4,5)
.*
.*  ADD DICTIONARY OFFSET TO STRING, AND UP COUNTER
.STRINGS AIF   ('&STRING' NE '').APPEND
&STRING  SETC  'DWD&CHIX-MSGDSCT'
         AGO   .APPCNT
.APPEND  ANOP  ,
&STRING  SETC  '&STRING'.','.'DWD&CHIX-MSGDSCT'
.APPCNT  ANOP  ,             COUNT ENTRIES IN STRING
&STRCNT  SETA  &STRCNT+1
.CODESTR AIF   ('&FCODE' EQ '').TESTDC
         AIF   (&ZZDOFLN EQ 4).SCALE4
         AIF   (&ZZDOFLN NE 3).SCALED
&FCODE   SETC  '('.'&FCODE'.')*256'
         AGO   .SCALED
.SCALE4  ANOP  ,
&FCODE   SETC  '('.'&FCODE'.')*65536'
.SCALED  AIF   ('&STRING' NE '').SUFFIX
&STRING  SETC  '&FCODE'
         AGO   .SUFFCNT
.SUFFIX  ANOP  ,
&STRING  SETC  '&STRING'.','.'&FCODE'
.SUFFCNT ANOP  ,
&STRCNT  SETA  &STRCNT+1
.*  WHEN THE STRING HAS AN ARBITRARY NUMBER OF ENTRIES, EXPAND IT
.*    TO AVOID OVERFLOWING LEGAL LENGTHS
.TESTDC  AIF   ((&STRCNT-&STRDC) LE 6).GETWORD                  GP08082
MSGSECT  CSECT ,
&STRDC   SETA  &STRCNT
&DCLAB   DC    AL&ZZDOFLN.(&STRING)
&DCLAB   SETC  ''
&STRING  SETC  ''
         AGO   .GETWORD
.*  LAST WORD PROCESSED. EXPAND MESSAGE DEFINITION
.PLANT   AIF   ('&STRING' EQ '').PLEITE
MSGSECT  CSECT ,
&DCLAB   DC    AL&ZZDOFLN.(&STRING)
.PLEITE  AIF   (&ZZMSGIX NE 1).PLINT
&LQ      SETC  'L'''
LENWDPTR EQU   &LQ&ZZMPFX&LB DEFINE FIELD LENGTH FOR DICT. PTR
.PLINT   ANOP  ,
.*  EXPAND POINTER TO MESSAGE STRING JUST CREATED
&ZZSECT  CSECT ,
&ZZMSGIX SETA  &ZZMSGIX+1
&CHIX    SETC  '00000'.'&ZZMSGIX'
&J       SETA  K'&CHIX
&CHIX    SETC  '&CHIX'(&J-4,5)
MPT&CHIX DC    AL&ZZMOFLN.(&ZZMPFX&LB-MSGSECT),CL&ZZIDLEN'&ZZMPFX&LB',A*
               L2(&STRCNT)
         AIF   (&ZZMSGIX NE 1).NOMPTLN
MPTSIZE  EQU   *-MPT&CHIX    DEFINE ENTRY LENGTH
.NOMPTLN ANOP  ,
&ZZSECT  CSECT ,
&CH      SETC  '&ZZMPFX'.'&LB'  GET MESSAGE ID
         AIF   ('&CH' GE '&ZZMGPRE').SEQOK
&ZZMGSRT SETC  'IS NOT'      MESSAGES NOT IN SEQUENCE
         AIF   (NOT &ZZMGWRN).SEQOK                             GP13237
         MNOTE 0,'MDEF: OUT OF SEQUENCE AT &CH '                GP13237
.SEQOK   AIF   ('&CH' GE '&ZZMGLO').SEQLO
&ZZMGLO  SETC  '&CH'         REMEMBER LOWEST ID
.SEQLO   AIF   ('&CH' LE '&ZZMGHI').SEQHI
&ZZMGHI  SETC  '&CH'         REMEMBER HIGHEST ID
.SEQHI   ANOP  ,
&ZZMGPRE SETC  '&CH'         REMEMBER PREVIOUS ID
.MEXIT   MEXIT ,
.MAPPER  ANOP  ,             ENTRY MAPPING - FIXED NAMES
MTPDSECT DSECT ,             MESSAGE TABLE POINTER ENTRY
MTPMSGOF DS    AL&ZZMOFLN    OFFSET TO MESSAGE DEFINITION
MTPMSGID DS    CL&ZZIDLEN    MESSAGE IDENTIFIER
MTPWDCNT DS    AL&ZZDOFLN    NUMBER OF ENTRIES FOLLOWING
         SPACE 1
MTMDSECT DSECT ,             MESSAGE DEFINITION ENTRY
MTMDICOF DS    AL&ZZDOFLN    ONE OR MORE DICTIONARY OFFSETS OR SPECIALS
MTSPFUN  EQU   X'D0'           FUNCTION INVOCATION
MTSPPRM  EQU   X'E0'           CALL PARAMETER INSERTION
MTSPMETA EQU   X'F0'           SYNTACTICAL FUNCTIONS
         SPACE 1
MTDDSECT DSECT ,             DICTIONARY ENTRY DEFINITION
MTDPHYLN DS    AL1           PHYSICAL ENTRY LENGTH
MTDLOGLN DS    AL1           LOGICAL ENTRY LENGTH
MTDTYPE  DS    C             ENTRY TYPE - C (OR G, LATER)
MTDTEXT  DS    0C            VARIABLE LENGTH TEXT
         MEND  ,
