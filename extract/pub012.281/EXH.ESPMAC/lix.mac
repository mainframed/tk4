         MACRO ,
&NM      LIX   &VAL=(R0),&WK=R15,&W2=R0,&SRL=0,&BHI=,                  *
               &BASE=,&LOC=,&ERRGO=,&PFX=,&ERRLOC=       ADDED  GP03144
.*--------------------------------------------------------------------*
.*                                                                    *
.*  LIX PERFORMS AN INDEXED LOOKUP WITH UP TO 256 TARGETS.            *
.*                                                                    *
.*  &VAL (R0) SPECIFIES THE REGISTER CONTAINING THE BRANCH VALUE      *
.*  &SRL (0)  SPECIFIES A NUMERIC RIGHT SHIFT COUNT                   *
.*  &BHI      LABEL TO GO TO WHEN THE VALUE MATCHES THE MASK          *
.*   MASK (BHI(2)   MASK APPLIED AFTER SHIFTING                       *
.*     { N'&LOC USED TO COMPUTE WHEN NOT SUPPLIED }                   *
.*  &ERRGO    LABEL TO GO TO ON AN INVALID VALUE AFTER SHIFT/MASK     *
.*  &ERRLOC   LABEL TO GO TO ON AN EMPTY TARGET LOCATION              *
.*  &BASE     VALUE SUBTRACTED FROM TARGET LOCATION. CURRENT CSECT IS *
.*              THE DEFAULT                                           *
.*  &LOC      LIST OF VALUES/LOCATIONS, IN ORDER CORRESPONDING TO THE *
.*              VALUE; I.E. FIRST ENTRY FOR 0, SECOND FOR 1, ETC.     *
.*              OMITTED ENTRIES CAUSE A BRANCH TO &ERRLOC             *
.*  &PFX      PREFIX TO PREPEND TO THE LOC LABELS FOR A SHORTER LIST. *
.*              THE PREFIX IS *NOT* APPLIED TO BHI OR ERR NAMES.      *
.*  &WK  (R15)  A WORK REGISTER (ANY BUT 0)                           *
.*  &W2  (R0)   A WORK REGISTER (ANY BUT WORK)                        *
.*                                                                    *
.*  SAMPLE USE:                                                       *
.*                                                                    *
.*       IBMMACRO THAT RETURNS 0, 4, 8, ETC., OR SUBROUTINE CALL      *
.*         LR   R15,R0        COPY VALUE TO WORK REGISTER             *
.*         LIX  VAL=(R15),SRL=2,LOC=(RET0,RET4),ERRGO=MACFAIL         *
.*                                                                    *
.*  NOTE THAT BITS SHIFTED OUT, AND BITS LEFT OF THE MASK ARE NOT     *
.*  TESTED FOR ZERO. THIS IS INTENTIONAL TO PERMIT USE OF LOW FLAG    *
.*  BITS AND OTHER USE OF UNREFERENCED DATA.                          *
.*                                                                    *
.*--------------------------------------------------------------------*
         LCLA  &I,&J,&N
         LCLC  &LB           TABLE BASE
         LCLC  &BH1,&BH2     BHI OPERANDS
         LCLC  &SPACES
         LCLC  &GLBL         GENERATED LABELS
&GLBL    SETC  'ZZLX'.'&SYSNDX'
&LB      SETC  '&SYSECT'
&SPACES  SETC  '    '
         AIF   ('&BASE' EQ '' OR '&BASE' EQ '*').DEFBASE
&LB      SETC  '&BASE'
.DEFBASE AIF   (N'&BHI NE 2).NOTBHI
&BH1     SETC  '&BHI(1)'     FIRST OF TWO ARGUMENTS
&BH2     SETC  '&BHI(2)'     SECOND OF TWO ARGUMENTS
.NOTBHI  AIF   (N'&BHI NE 1).DONBHI
&BH1     SETC  '&BHI'        ONE OF ONE, WITH PARENTHESES
.DONBHI  ANOP  ,
.*--------------------------------------------------------------------*
.*  DETERMINE NUMBER OF ADDRESSES, AND CORRESPONDING MASK             *
.*--------------------------------------------------------------------*
&N       SETA  N'&LOC
&J       SETA  2             SET SMALLEST MASK + 1 (=1 FAILS)
&I       SETA  &N            FOR NON-NUM SIZE, USE COUNT
         AIF   (&N NE 0 AND &N LE 256).GOTSIZE
.BADSIZE MNOTE 8,'LIX: LOC LIST BAD - NEED 1 TO 256 TARGET LABELS'
.GOTSIZE AIF   (&J GE &I).GOTMASK
&J       SETA  &J*&J
         AGO   .GOTSIZE
.GOTMASK ANOP  ,
&I       SETA  &J-1          CONVERT POWER OF TWO TO MASK
.USEMASK ANOP  ,
&NM      MACPARM &WK(1),&VAL,OP=IC,OPR=LR  LOAD INDEX VALUE
         AIF   ('&SRL' EQ '0').NOSHFT
         MACPARM &WK(1),&SRL,OP=SRL,OPR=SRL,MODE=EVEN,NULL=SKIP
.NOSHFT  MACPARM &W2(1),&I,OP=LA,MODE=EVEN LOAD MASK VALUE
         NR    &WK(1),&W2(1) ISOLATE SIGNIFICANT PORTION
         AIF   ('&BH1' EQ '').DOWK2
         MACPARM &W2(1),&BH2,OP=LA,NULL=SKIP  ALLOW OVERRIDE
         CR    &WK(1),&W2(1) EXACTLY MASK MAXIMUM ?
         MACPARM &BH1,OP=BE,OPR=BER,MODE=ONE
.DOWK2   AIF   (T'&ERRGO EQ 'O').NOLIM
         AIF   ('&N' EQ '&BH2').TOOMASK  LIST HIGH SAME AS MAX ?
         CH    &WK(1),=Y(&N) VALID INDEX ?
.TOOMASK MACPARM &ERRGO,OP=BNL,OPR=BNLR,MODE=ONE   NO; TOO HIGH
.NOLIM   SLL   &WK(1),1      CONVERT INDEX TO OFFSET
         LH    &WK(1),*+8(&WK(1)) LOAD LABEL OFFSET FROM BASE
         B     &GLBL.Z       BRANCH AROUND STUFF
&J       SETA  0
.INC     AIF   (&J GE &N).DONE
&J       SETA  &J+1
         AIF   ('&LOC(&J)' EQ '').DFLT
         DC    AL2(&PFX.&LOC(&J)-&LB)&SPACES.&J  BRANCH
         AGO   .INC
.DFLT    DC    AL2(&ERRLOC-&LB)&SPACES.&J ERROR
         AGO   .INC
.DONE    ANOP  ,
&GLBL.Z  DS    0H            END OF EXPANSION
         MEND  ,
