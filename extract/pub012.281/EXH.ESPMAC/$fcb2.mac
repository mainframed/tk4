         MACRO -- $FCB2 -- GENERATE 3211 FORMS CONTROL BLOCK IMAGE
&LABEL   $FCB2 &LPI,&DEFAULT=YES,&INDEX=LEFT,&INDENT=0  ADDED ON 85350
.*
.*       AUTHOR UNKNOWN - OBTAINED FROM OLD SHARE OR CBT TAPE
.*         RENAMED $FCB2 (FROM $FCB) TO ALLOW FOR $FCB3 FOR 3800 93006
.*
         LCLA  &A(180),&LP,&N,&WK,&CC,&LAST,&K,&K1,&LI
         LCLB  &Q,&C,&PASS,&CCH(12),&DFI
         LCLC  &CH,&BLANK,&B,&B1,&IX
&LAST    SETA  N'&SYSLIST          GET NR OF OPERANDS
         AIF   (&LAST LT 3).MACBAD ERROR IF LT 3
.*
.*             STEP 1 - VERIFY LINES-PER-INCH OPERAND
.*
.OP1     AIF   (T'&SYSLIST(1) NE 'N').OP1BAD  OP1 MUST BE NUMERIC
&LI      SETA  6                   ASSUME OP1 SAYS 6 LINES/INCH
         AIF   (&SYSLIST(1) EQ 6).OP2  B IF OP1 IS 6
         AIF   (&SYSLIST(1) NE 8).OP1BAD  ERR IF NOT 6 OR 8
&LI      SETA  8                   SHOW 8 LINES/INCH
.*
.*             STEP 2 - VERIFY LINES-PER-PAGE OPERAND
.*
.OP2     AIF   (T'&SYSLIST(2) NE 'N').OP2BAD  OP2 MUST BE NUMERIC
         AIF   (&SYSLIST(2) LT 2 OR &SYSLIST(2) GT 180).OP2BAD
&LP      SETA  &SYSLIST(2)         SET NR OF LINES PER PAGE
.*
.*             STEP 3 - PROCESS OPERANDS
.*
.OP3     ANOP
&N       SETA  2                   SET OPERAND CTR TO 2
.OPN     ANOP                      START LOOP
&N       SETA  &N+1                ADD 1 TO OPERAND CTR
         AIF   (&N GT &LAST).ENDSCAN  B IF NO MORE OPERANDS
         AIF   (T'&SYSLIST(&N) NE 'N').OPH  B IF NOT NUMERIC OPD
         AIF   (&N EQ 3).OP3BAD    ERROR IF OP3 NOT HYPHENATED
         AIF   (NOT &C).OPN        IGNORE OP IF INVALID &CC
&WK      SETA  &SYSLIST(&N)        SET WORK TO OPERAND VALUE
.OPN1    AIF   (&WK LT 1 OR &WK GT &LP).OPLBAD  B IF BAD LINE NR
         AIF   (&A(&WK) NE 0 AND &A(&WK) NE &CC).DUPBAD  B IF DUP
&A(&WK)  SETA  &CC                 SET &WK-TH LINE TO &CC
         AGO   .OPN                LOOP
.*
.*             STEP 3A - DECODE HYPHENATED OPERAND
.*
.OPH     ANOP                      NON-NUMERIC OPERAND
&K       SETA  K'&SYSLIST(&N)      SET OPERAND CHARACTER COUNT
&K1      SETA  0                   SET CHAR CT TO ZERO
&WK      SETA  0                   SET WORK TO ZERO
&PASS    SETB  0                   SHOW FIRST PASS
.*
.*             1ST PASS - FIND CARRIAGE CHANNEL NUMBER
.*             2ND PASS - FIND FIRST LINE NUMBER
.*
.OPH1    ANOP                      START LOOP
&K1      SETA  &K1+1               ADD 1 TO CHAR CTR
         AIF   (&K1 GT &K).OPH3    B IF END OF STRING
&CH      SETC  '&SYSLIST(&N)'(&K1,1)  GET A CHARACTER
         AIF   ('&CH' LT '0' OR '&CH' GT '9').OPH2  B IF NON-NUM
&WK      SETA  &WK*10+&CH          COMPILE DECIMAL NUMBER
         AGO   .OPH1               LOOP
.*
.*             NON-NUMERIC CHARACTER FOUND.
.*             IF FIRST PASS, EXPECT HYPHEN.
.*             IF SECOND PASS, ERROR.
.*
.OPH2    AIF   (&PASS OR '&CH' NE '-').HYPBAD  B IF ERROR
&CC      SETA  &WK                 SET CARRIAGE CHANNEL
&WK      SETA  0                   ZERO WORK
&PASS    SETB  1                   SHOW SECOND PASS
         AGO   .OPH1               RETURN TO LOOP
.*
.*             END OF CHARACTER STRING.
.*             IF FIRST PASS, LOGIC ERROR.
.*             IF SECOND PASS, VALIDIFY &CC.
.*
.OPH3    AIF   (NOT &PASS).LOGBAD  ERROR IF FIRST PASS
         AIF   (&CC LT 1 OR &CC GT 12).OPCBAD  B IF CC BAD
&CCH(&CC) SETB 1                   SHOW CARRIAGE CHANNEL USED
&C       SETB  1                   SHOW VALID &CC
         AGO   .OPN1               GO CHECK VALID LINE NR
.*
.*             OPERAND SCAN IS ENDED.  TEST ITS SUCCESS.
.*
.ENDSCAN AIF   (&Q).QUITBAD        EXIT IF QUIT SWITCH
         AIF   (K'&LABEL LE 4).LABBAD  B IF LABEL NOT SPECIFIED
         AIF   ('&LABEL'(1,4) NE 'FCB2').LABBAD
&N       SETA  5
&K       SETA  K'&LABEL
.LABLOOP AIF   (&N GT &K).END6
&CH      SETC  '&LABEL'(&N,1)  GET A CHARACTER OF LABEL
&N       SETA  &N+1          SET FOR NEXT TIME
&C       SETB  0
&C       SETB  (&C OR ('&CH' GE '0' AND '&CH' LE '9'))
&C       SETB  (&C OR ('&CH' GE 'A' AND '&CH' LE 'I'))
&C       SETB  (&C OR ('&CH' GE 'J' AND '&CH' LE 'R'))
&C       SETB  (&C OR ('&CH' GE 'S' AND '&CH' LE 'Z'))
         AIF   (NOT &C).LABBAD     B IF NOT NUM OR ALPHA
         AGO   .LABLOOP
.END6    ANOP
&DFI     SETB  1             PROVISIONALLY SET DEFAULT IMAGE
         AIF   ('&DEFAULT' EQ '' OR '&DEFAULT' EQ 'YES').END7
&DFI     SETB  0             SET NO DEFAULT IMAGE AS DEFAULT
         AIF   ('&DEFAULT' NE 'NO').DEFBAD
.END7    ANOP  ,
.*
.*             ENSURE ALL CHANNELS ARE PUNCHED TO PREVENT RUNAWAY
.*
&N       SETA  0                   ZERO CHANNEL COUNTER
&C       SETB  0                   ZERO FIRST-TIME MSG SWITCH
&K       SETA  0                   ZERO TOP-DOWN LINE COUNTER
&K1      SETA  &LP+1               SET BOTTOM-UP LINE CTR TO MAX+1
.END11   ANOP                      START LOOP
&N       SETA  &N+1                ADD ONE TO CHANNEL COUNTER
         AIF   (&N GT 12).END19    B IF DONE WITH ALL CHANNELS
         AIF   (&CCH(&N)).END11    B IF CHANNEL IS ASSIGNED
         AIF   (&C).END12          B IF NOT FIRST TIME
         SPACE 1
         MNOTE *,'THE FOLLOWING ASSIGNMENTS OF UNSPECIFIED '
         MNOTE *,'CARRIAGE CHANNELS PREVENT RUN-AWAY FORMS ---'
&C       SETB  1                   SHOW FIRST-TIME MSG WRITTEN
.END12   AIF   (&N EQ 9 OR &N EQ 12).END14  B IF CH 9 OR 12
.END13   ANOP                      UNASSIGNED CHANNEL FOUND
&K       SETA  &K+1                ADD ONE TO LINE COUNTER
         AIF   (&K GT &LP).END17   B IF ALL LINES HAVE CHANNELS
         AIF   (&A(&K) NE 0).END13 B IF THIS LINE HAS A CHANNEL
&WK      SETA  &K                  SET LINE NUMBER AND
         AGO   .END15              GO ASSIGN CHANNEL TO IT
.END14   ANOP                      UNASSIGNED CHANNEL 9 OR 12
&K1      SETA  &K1-1               LOWER LINE COUNTER BY ONE
         AIF   (&K1 LT 1).END17    B IF ALL LINES HAVE CHANNELS
         AIF   (&A(&K1) NE 0).END14  B IF THIS LINE HAS A CHANNEL
&WK      SETA  &K1                 SET LINE NUMBER
.END15   ANOP                      ASSIGN CHANNEL TO LINE
&BLANK   SETC  ''                  ASSUME CHANNEL 10 OR GREATER
         AIF   (&N GT 9).END16     B IF SO
&BLANK   SETC  ' '                 ADD A BLANK FOR CHAN 9 OR LESS
.END16   MNOTE *,'   CARRIAGE CHANNEL &BLANK.&N IN LINE &WK'
&A(&WK)  SETA  &N                  ASSIGN CHANNEL TO LINE
&CCH(&N) SETB  1                   SHOW CHANNEL ASSIGNED
         AGO   .END11              B TO START OF LOOP
.END17   AIF   (&CCH(1)).END18     GO IF CHANNEL 1 IS ASSIGNED
         MNOTE 4,'ERROR - CARRIAGE CHANNEL 1 IS NOT SPECIFIED AND'
         MNOTE *,'CANNOT BE INSERTED.  CHANNEL 1 PUNCH IS'
         MNOTE *,'REQUIRED FOR 3211 CARRIAGE-RESTORE FUNCTION.'
         AGO   .QUITBAD
.END18   MNOTE 0,'WARNING - UNSPECIFIED CARRIAGE CHANNELS'
         MNOTE 0,'STARTING WITH CHANNEL &N CAN CAUSE'
         MNOTE 0,'RUN-AWAY FORMS.'
.END19   ANOP  ,
&IX      SETC  ''            NO INDEX
         AIF   (T'&INDENT EQ 'O' OR '&INDENT' EQ '0').SKIPIX
         AIF   (T'&INDENT EQ 'N').TESTIND
.BADIND  MNOTE 4,'INDENT MUST BE NUMERIC (0 TO 31)'
         AGO   .QUITBAD
.TESTIND AIF   (&INDENT GT 31).BADIND
&IX      SETC  '10'          SET DEFAULT (LEFT) INDENT
         AIF   (T'&INDEX EQ 'O' OR '&INDEX' EQ 'LEFT').SKIPIX
&IX      SETC  '01'          SET RIGHT
         AIF   ('&INDEX' EQ 'RIGHT').SKIPIX
         MNOTE 4,'INVALID INDEX - SHOULD BE LEFT OR RIGHT'
         AGO   .QUITBAD
.SKIPIX  ANOP  ,
.*
.*             CREATE FORMS CONTROL BUFFER OVERLAY
.*
******************************************************************
*                                                                *
         MNOTE *,'3211 FORMS CONTROL BUFFER LOAD FOR &LABEL'
*                                                                *
******************************************************************
*                                                                *
         SPACE 1
&LABEL   CSECT ,
         SPACE 1
         DC    BL1'&DFI.0000000'  IMAGE TYPE (80=DEFAULT)
         AIF   ('&IX' EQ '').NOIX
         DC    AL1(&LP+1)    LINES PER FORM/IMAGE + INDEX
         DC    BL.2'&IX',BL.1'0',AL.5(&INDENT)    INDENTATION
         AGO   .COMIX
.NOIX    DC    AL1(&LP)      LINES PER FORM/IMAGE
.COMIX   SPACE 1
*                             GENERATE FORMS CONTROL BUFFER
&PASS    SETB  (&LI EQ 8)          &PASS=1 FOR 8 LINES/INCH
&A(1)    SETA  &A(1)+16*&PASS      SET UP FIRST BYTE
&A(&LP)  SETA  &A(&LP)+16          SET UP LAST BYTE
&N       SETA  0                   SET CUR BYTE PTR TO ZERO
&K       SETA  0                   SET PREV NON-0 BYTE PTR TO 0
.DO      ANOP                      BUILD THE FCB
&N       SETA  &N+1                POINT TO THE NEXT BYTE
         AIF   (&A(&N) EQ 0).DO    IF IT'S ZERO, LOOP.
&K       SETA  &N-&K-1             COMPUTE NR OF ZERO BYTES
         AIF   (&K EQ 0).DO1       SKIP DOING THEM IF NONE
         DC    &K.AL1(0)
.DO1     ANOP
.*
.*             SELECT PROPERLY-COMMENTED DC STATEMENT
.*
&WK      SETA  &A(&N)              SET WORK TO BYTE'S VALUE
         AIF   (&WK EQ 16).DO3     B IF ZERO-DIGIT ENTRY
&B       SETC  ''                  SET TWO LCLC VARIABLES
&B1      SETC  ''                  TO NULL STRINGS
         AIF   (&WK GT 9).DO2      B IF ADCON IS TWO DIGITS
&B       SETC  ' '                 ELSE ADD BLANK TO COMMENT
.DO2     ANOP
&WK      SETA  &WK-&WK/16*16       GET CHANNEL NUMBER
         AIF   (&WK GT 9).DO2A     B IF CHANNEL NR IS 2 DIGITS
&B1      SETC  ' '                 ELSE ADD BLANK TO COMMENT
.* ONE- OR TWO-DIGIT ENTRY
.DO2A    DC    AL1(&A(&N)),0C'         &B.CHAN &B1.&WK IS AT LINE &N'
         AGO   .DO4
.* NO-DIGIT ENTRY
.DO3     DC    AL1(&A(&N))
.DO4     AIF   (&N EQ &LP).END     B IF LAST BYTE PROCESSED
&K       SETA  &N                  SET K TO LAST NON-ZERO BYTE
         AGO   .DO                 GO LOOP
.*
.*
.*
.*
.*             DIAGNOSTIC ERROR MESSAGES
.*
.OP1BAD  MNOTE 4,'INVALID OPERAND 1 - &SYSLIST(1) -'
         MNOTE *,'FIRST OPERAND MUST BE EITHER 6 OR 8.'
&Q       SETB  1
         AGO   .OP2
.*
.OP2BAD  MNOTE 4,'INVALID OPERAND 2 - &SYSLIST(2) -'
         MNOTE *,'SECOND OPERAND MUST BE A NUMBER GREATER THAN 1'
         MNOTE *,'AND NOT GREATER THAN 180.'
&Q       SETB  1
         AGO   .OP3
.*
.OP3BAD  MNOTE 4,'INVALID OPERAND 3 - &SYSLIST(3) -'
         MNOTE *,'THIRD OPERAND MUST HAVE A CARRIAGE CHANNEL'
         MNOTE *,'NUMBER, A HYPHEN, AND A LINE NUMBER.'
&Q       SETB  1
         AGO   .OPN
.*
.OPLBAD  AIF   (T'&SYSLIST(&N) NE 'N').OPLBADA
         MNOTE 4,'INVALID OPERAND &N - &SYSLIST(&N) -'
         AGO   .OPLBADB
.OPLBADA MNOTE 4,'INVALID SUBOPERAND &WK OF OPERAND &N - &SYSLIST(&N) -X
               '
.OPLBADB MNOTE *,'LINE NUMBER MUST BE GREATER THAN 1 AND '
         MNOTE *,'NOT GREATER THAN &LP..'
&Q       SETB  1
         AGO   .OPN
.*
.DUPBAD  MNOTE 4,'DUPLICATE SPECIFICATION - OPERAND &N ASSIGNS'
         MNOTE *,'CARRIAGE CHANNEL &CC TO LINE &WK, WHICH WAS'
         MNOTE *,'PREVIOUSLY ASSIGNED CHANNEL &A(&WK)..'
&Q       SETB  1
         AGO   .OPN
.*
.HYPBAD  MNOTE 4,'INVALID OPERAND &N - &SYSLIST(&N) -'
         AIF   (&PASS).HYPBADA
         MNOTE *,'UNRECOGNIZABLE CHARACTER ''&CH'''
         AGO   .HYPBADB
.HYPBADA MNOTE *,'UNRECOGNIZABLE CHARACTER ''&CH'' IN LINE NUMBER.'
.HYPBADB ANOP
&Q       SETB  1
         AGO   .OPN
.*
.OPCBAD  MNOTE 4,'INVALID OPERAND &N - &SYSLIST(&N) -'
         MNOTE *,'CARRIAGE CHANNEL MUST BE GREATER THAN 0'
         MNOTE *,'AND NOT GREATER THAN 12.'
&C       SETB  0                   SHOW INVALID &CC
&Q       SETB  1
         AGO   .OPN
.*
.LOGBAD  MNOTE 4,'INTERNAL LOGIC ERROR AT OPERAND &N'
         AGO   .QUITBAD
.*
.MACBAD  MNOTE 4,'TOO FEW OPERANDS SPECIFIED.  AT LEAST LINES PER'
         MNOTE *,'INCH, LINES PER PAGE, AND ONE CARRIAGE CONTROL'
         MNOTE *,'PUNCH MUST BE SPECIFIED.'
         AIF   (N'&SYSLIST EQ 2).OP1
         AGO   .QUITBAD
.*
.QUITBAD MNOTE *,'FCB WILL NOT BE GENERATED'
         MEXIT
.*
.LABBAD  MNOTE 8,'ERROR - LABEL MISSING OR INCORRECT'
         AGO   .QUITBAD
.*
.DEFBAD  MNOTE 8,'ERROR - DEFAULT OPTION MUST BE ''YES'' OR ''NO'''
         AGO   .QUITBAD
.*
.END     ANOP
         SPACE 2
         MEND
