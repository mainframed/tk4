         MACRO ,                                         NEW ON GP12298
&NM      XXHHEX &LEN=R2,&WK=R3,&W2=R4,&MAXL=,&MAX=,&ERR=
.*   CHECK FOR A VALID HEX CONSTANT IN AN SCLINE/SCPAGE EXIT ROUTINE.
.*   CODE IS FUNNY, BUT DOESN'T NEED A TRT TABLE OR LOOP
.*   TRANSLATES TO HEX AND BACK, THEN COMPARES. CATCHES MOST ERRORS.
.*
         GBLC  &ZZXXHNM
         LCLC  &LER,&LAB
&LER     SETC  '&ERR'
         AIF   ('&LER' NE '').USERR
&LER     SETC  '&ZZXXHNM'.'R'     NORMAL ERROR LABEL
.USERR   ANOP  ,
&LAB     SETC  'ZZX'.'&SYSNDX'
&NM      MVC   DBWK,=8X'F0'  CLEAR OUTPUT
         AIF   ('&MAXL' EQ '').NOLL
         CH    &LEN,=AL2(&MAXL)   VALID LENGTH ?
         MACPARM &LER,OP=BH,OPR=BHR,MODE=ONE
.NOLL    LR    &WK,&LEN      COPY LENGTH
         BCTR  &WK,0         MAKE EXECUTE LENGTH
         LA    &W2,DBWK+8
         SR    &W2,&LEN      LOCATION TO MOVE TO
         EX    &WK,&LAB.M    MOVE TEXT
         NC    DBWK,=8X'1F'  KEEP ONLY SIGNIFICANT BITS
         TR    DBWK,=X'000A0B0C0D0E0F0000000000000000000001020304050607*
               0809000000000000'
         PACK  DB(5),DBWK(L'DBWK+1)
.*  CONVERTED TEXT IN DB(4); NOW DO BACKWADS TO CHECK VALIDITY
         UNPK  DB2(L'DB2+1),DB(5)  REVERSE
         NC    DB2,=8X'0F'
         TR    DB2,=C'0123456789ABCDEF'
         MVC   DBWK,=8X'F0'  CLEAR OUTPUT
         EX    &WK,&LAB.M    MOVE TEXT
         OC    DBWK,=8C' '   UPPER CASE TO ALLOW REVERSE COMPARE
         CLC   DB2,DBWK      SAME BOTH WAYS?
         MACPARM &LER,OP=BNE,OPR=BNER,MODE=ONE
         AIF   ('&MAX' EQ '').NOMAX
         CLC   DB(4),=A(&MAX)   VALID ?
         MACPARM &LER,OP=BH,OPR=BHR,MODE=ONE
.NOMAX   B     *+4+6         CONTINUE PAST EXECUTIONERS
&LAB.M   MVC   0(0,&W2),FIWTEXT
         MEND  ,
