         MACRO ,
&NM      SWATCH &FUN,&CODE,&PFX=STMR,&PAT=STMP,&TIME=,&SAVE=YES
.**                                                                  **
.**********************************************************************
.**                                                                  **
.**  MACRO TO RUN A SIMPLE STOP WATCH PROGRAM  (UPDATED 2013-05-12)  **
.**                                                                  **
.**  NAME SWATCH STARTª,'TEST NAME'³  BEGIN TIMING                   **
.**  NAME SWATCH STOP            STOP TIMING                         **
.**  NAME SWATCH SHOW            CALCULATE INTERVAL, AND SHOW ON WTO **
.**                              (SAVES IF FIRST START/STOP USE)     **
.**  NAME SWATCH SAVE            SAVE FOR LATER COMPARISON           **
.**                                                                  **
.**  NAME SWATCH COMPARE         COMPARE CURRENT (AFTER SHOW) WITH   **
.**                                PREVIOUS RESULT                   **
.**                                                                  **
.**  NAME SWATCH DATA            DEFINE DATA. IF DSECT, MOVE FROM    **
.**                                PATTERN WITH INIT FUNCTION.       **
.**                                                                  **
.**  NAME SWATCH PATTERN         DEFINE WORK AREA PATTERN (PFX STMP) **
.**  NAME SWATCH INIT            MOVES PATTERN TO DATA               **
.**                                                                  **
.**  NAME SWATCH CLEAR           PREPARES DATA AREA WITHOUT PATTERN  **
.**                                OR INIT CALL                      **
.**                                                                  **
.**  NAME SWATCH OVERHEAD        RUNS EMPTY STOP/START TO GET        **
.**                                OVERHEAD TIME WITHOUT A LOOP.     **
.**                                                                  **
.**  TIME= SETS GLOBAL MODE (REMAINS UNTIL RESPECIFIED). VALUE IS:   **
.**    JST or CPU - USE APPLICATION CPU TIME ONLY                    **
.**    SRB        - USE SYSTEM OVERHEAD ONLY                         **
.**    ALL or BOTH- USE SUM OF CPU AND SRB TIME                      **
.**                                                                  **
.**  TO BE LINKED WITH MODULE SUBTIMER, AND ENTRY SUBTIMED.          **
.**                                                                  **
.**********************************************************************
         GBLA  &ZZSWAM       MODE (0-JST, 1-SRB, 2-BOTH)        GP13118
         GBLB  &MVSXA        WHEN DID TIMEUSED APPEAR ?         GP07015
         GBLB  &ZZSWAT         SET IF EQU EXPANDED              GP13111
         GBLC  &MACPLAB                                         GP03245
         LCLC  &P,&LB,&STORE,&LBL                               GP13111
&LB      SETC  'ZZT'.'&SYSNDX'                                  GP13111
&LBL     SETC  '&NM'                                            GP13111
&P       SETC  '&PFX'
         AIF   ('&TIME' EQ '').KEEP                             GP13118
&ZZSWAM  SETA  1                                                GP13118
         AIF   ('&TIME' EQ 'JST' OR '&TIME' EQ 'CPU').KEEP      GP13118
&ZZSWAM  SETA  2                                                GP13118
         AIF   ('&TIME' EQ 'SRB').KEEP                          GP13118
&ZZSWAM  SETA  3                                                GP13118
         AIF   ('&TIME' EQ 'BOTH' OR '&TIME' EQ 'ALL').KEEP     GP13118
         AIF   ('&TIME' EQ 'TOTAL').KEEP                        GP13118
&ZZSWAM  SETA  1                                                GP13118
         MNOTE 4,'SWATCH: TIME=&TIME INVALID. USE JST, SRB, OR ALL'
.KEEP    ANOP  ,                                                GP13118
&STORE   SETC  'STMRSTRT'    PRESET FOR START                   GP13111
         AIF   ('&FUN' EQ 'START').BEGIN
&STORE   SETC  'STMRSTOP'    PRESET FOR STOP                    GP13111
         AIF   ('&FUN' EQ 'STOP').BEGCOM    SAME AS START CODE  GP13111
         AIF   ('&FUN' EQ 'WTO').PRINT
         AIF   ('&FUN' EQ 'SHOW').PRINT
         AIF   ('&FUN' EQ 'PRINT').PRINT
         AIF   ('&FUN' EQ 'COMPARE').COMPARE
         AIF   ('&FUN' EQ 'SAVE').SAVE
         AIF   ('&FUN' EQ 'DATA').DATA
         AIF   ('&FUN' EQ 'PATTERN').PATTERN
         AIF   ('&FUN' EQ 'INIT').INIT
         AIF   ('&FUN' EQ 'CLEAR').CLEAR                        GP13111
         AIF   ('&FUN' EQ 'OVERHEAD').OVERHD                    GP13118
         MNOTE 8,'SWATCH: UNRECOGNIZED FUNCTION &FUN'
         MEXIT ,
.OVERHD  ANOP  ,                                                GP13118
&NM      SWATCH START,'OVERHEAD',SAVE=NO                        GP13118
         SWATCH STOP,SAVE=NO                                    GP13118
         XC    &P.OHD,&P.OHD  *TEST
         LM    R14,R15,&P.STOP                                 GP13118
         SL    R15,&P.STRT+4                                   GP13118
         BC    3,*+4+4                                          GP13118
         S     R14,=F'1'                                        GP13118
         S     R14,&P.STRT                                     GP13118
         BM    *+8           SHOULD NOT BE NEGATIVE ?           GP13118
         STM   R14,R15,&P.OHD                                  GP13118
         SWATCH CLEAR                                           GP13118
         MEXIT ,                                                GP13118
.BEGIN   AIF   ('&CODE' EQ '').NOCODE
         AIF   ('&CODE'(1,1) EQ '''').STRCODE
&NM      MVC   STMRCODE,=CL(16)'&CODE '
&LBL     SETC  ''                                               GP13111
         AGO   .BEGCOM
.STRCODE ANOP  ,
&NM      MVC   STMRCODE,=CL(16)&CODE
&LBL     SETC  ''                                               GP13111
         AGO   .BEGCOM
.NOCODE  ANOP  ,
&NM      MVC   STMRCODE,=CL16' '    NO CODE SPECIFIED
&LBL     SETC  ''                                               GP13111
         MNOTE 0,'SWATCH: TEST NAME NOT SPECIFIED'
.BEGCOM  AIF   (&MVSXA).BEGESA  TIMEUSED AVAILABLE ?            GP07015
         AIF   ('&SAVE' NE 'YES').NOSAV1                        GP13118
&LBL     STM   R14,R1,12(R13)     SAVE A BIT                    GP13118
&LBL     SETC  ''                                               GP13118
.NOSAV1  AIF   (&ZZSWAT).DONEQU                                 GP13111
.*       THIS CODE CALCULATES TOTAL CPU TIME FOR THE CURRENT TCB.     *
.*       FOR TASKS WITH MULTIPLE ACTIVE TCBS/SRBS USE AN SVC INSTEAD: *
.*         SEE IGC251 IN THE ESPSRC PDS.                              *
.*       LCCADTOD HAS THE TIME THE TASK WAS DISPATCHED                *
.*       TIME SINCE LAST DISPATCH IS:                                 *
.*         CURRENT TOD - LCCADTOD                                     *
.*                                                                    *
.*       THIS VALUE IS ADDED TO ASCBESTL (TIME=JST/ALL) OR            *
.*       ASCBSRBT (TIME=SRB/ALL).                                     *
.*                                                                    *
.*       CLOCK UNITS ARE CONVERTED TO MIC UNITS (10**-6 SECS)         *
.*                                                                    *
.*       EQUATES ARE USED TO RELIEVE THE USER FROM INCLUDING ESOTERIC *
.*       MAPPING MACROS (IHALCCA, ETC.). THE FIRST A IN EACH NAME HAS *
.*       BEEN CHANGED TO @.                                           *
.*                                                                    *
&ZZSWAT  SETB  1                                                GP13111
PS@      EQU   0
PS@LCCAV EQU   528                 ADDRESS OF POINTER TO LCC@
PS@AOLD  EQU   548                 CURRENT @SCB POINTER         GP13111
@SCB     EQU   0                                                GP13111
@SCBEJST EQU   64                  ELAPSED JOB-STEP TIMING, TOD CLOCK
.*                                 UNITS (64-BITS)
@SCBSRBT EQU   200                 ELAPSED JOB-STEP TIMING, TOD CLOCK
.*                                 UNITS (64-BITS)
LCC@     EQU   0                                                GP13111
LCC@DTOD EQU   600                OFFSET OF TOD STAMP FROM
.*                                DISPATCH OF TCB
.**  GET TIME FROM @SCBEJST/SRBT, AND SUBTRACT UNUSED TIME FROM LCCA
.DONEQU  ANOP  ,
&LBL     L     R1,PS@AOLD-PS@     GET ASCB ADDRESS              GP13118
         AIF   (&ZZSWAM EQ 2).MVSA2                             GP13118
.MVSA1   LM    R14,R15,@SCBEJST-@SCB(R1)  GET JOB STEP TIME     GP13118
         AIF   (&ZZSWAM EQ 1).MVSAOK                            GP13118
         AL    R15,4+@SCBSRBT-@SCB(,R1)   ADD SRB TIME          GP13118
         BC    12,*+4+4                                         GP13118
         AL    R14,=F'1'                                        GP13118
         AL    R14,@SCBSRBT-@SCB(,R1)                           GP13118
         AGO   .MVSAOK                                          GP13118
.MVSA2   LM    R14,R15,@SCBSRBT-@SCB(R1)  GET SRB TIME          GP13118
.MVSAOK  STCK  &STORE             SAVE TOD CLOCK VALUE        GP13118
         AL    R15,4+&STORE       SUBTRACT TOD                GP13118
         BC    12,*+4+4                                         GP13118
         AL    R14,=F'1'                                        GP13118
         AL    R14,&STORE                                     GP13118
         L     R1,PS@LCCAV-PS@    GET A(LCCA FOR THIS CPU)      GP13118
         SL    R15,4+LCC@DTOD-LCC@(,R1)   ADD REMAINING         GP13118
         BC    3,*+4+4                                          GP13118
         SL    R14,=F'1'                      DISPATCH TIME     GP13118
         SL    R14,LCC@DTOD-LCC@(,R1)                           GP13118
&LB.X    SRDL  R14,12          CHANGE TO MIC                    GP07015
         STM   R14,R15,&STORE  UPDATE CPU TIME                GP07015
         AIF   ('&SAVE' NE 'YES').NOSAV2                        GP13118
         LM    R14,R1,12(R13)  RESTORE WORK REGISTERS           GP13118
.NOSAV2  MEXIT ,                                                GP07015
.BEGESA  AIF   (&ZZSWAM EQ 2).ESASRB                            GP13118
&LBL     TIMEUSED STORADR=&STORE,CPU=MIC,LINKAGE=SYSTEM       GP07015
         AIF   (&ZZSWAM NE 3).MEND                              GP13118
         TIMEUSED STORADR=STMRDB,VECTOR=MIC,LINKAGE=SYSTEM      GP13118
         LM    R14,R15,&STORE                                 GP13118
         AL    R15,STMRDB+4   ADD LOW ORDER                     GP13118
         BC    12,*+4+4                                         GP13118
         A     R14,=F'1'                                        GP13118
         A     R14,STMRDB                                       GP13118
         STM   R14,R15,&STORE  UPDATE CPU TIME                GP13118
         MEXIT ,
.ESASRB  ANOP  ,                                                GP13118
&LBL     TIMEUSED STORADR=&STORE,VECTOR=MIC,LINKAGE=SYSTEM    GP13118
         MEXIT ,
.PRINT   ANOP  ,
&NM      LA    R1,STMRWORK
         L     R15,=V(SUBTIMER)
         BALR  R14,R15
         MEXIT ,
.COMPARE ANOP  ,
&NM      LA    R1,STMRWORK
         L     R15,=V(SUBTIMED)
         BALR  R14,R15
         MEXIT ,
.INIT    ANOP  ,
&NM      MVC   &P.WORK(&PAT.WKLR+L'&PAT.OHD),&PAT.WORK          GP13118
         MEXIT ,
.CLEAR   ANOP  ,
&NM      XC    &P.WORK(&P.WKLR),&P.WORK                         GP13111
         MVI   &P.CODE,C' '                                     GP13111
         MVC   &P.CODE+1(L'&P.CODE-1),&P.CODE                   GP13111
         MVC   &P.COD2,&P.CODE                                  GP13111
         MEXIT ,
.SAVE    ANOP  ,
&NM      MVC   &P.STR2(&P.SVLN),&P.STRT  SAVE THIS TIME'S COUNTERS
         MEXIT ,
.PATTERN AIF   ('&P' NE '' AND '&P' NE 'STMR').DATA
&P       SETC  'STMP'
.DATA    AIF   ('&NM' EQ '').NOEXTRA
&NM      DS    0D
.NOEXTRA ANOP  ,
&P.WORK  DS    0D
&P.SAVE  DC    18A(0)        LOWER SAVE AREA
&P.DB    DC    D'0'          WORK WORDS
&P.ITER  DC    F'0'          ITERATION COUNTER (OPTIONAL)
&P.LTIM  DC    F'0'          TIME FOR ONE ITERATION             GP13118
.*  START OF CURRENT DATA
&P.STRT  DC    D'0'          STOPWATCH START TIME
&P.STOP  DC    D'0'          STOPWATCH STOP TIME
&P.TIME  DC    F'0'          TIME FOR THIS TEST
&P.CODE  DC    CL16' '       USER'S MNEMONIC CODE FOR THIS FUNCTION
&P.SVLN  EQU   *-&P.STRT       LENGTH TO SAVE AFTER WRITE
.*  SAVED RESULT FROM AN EARLIER MEASUREMENT
&P.STR2  DC    2F'0'         PRIOR STOPWATCH START TIME
&P.STO2  DC    2F'0'         PRIOR STOPWATCH STOP TIME
&P.TIM2  DC    F'0'          TIME FOR THIS TEST
&P.COD2  DC    CL16' '       PRIOR CODE
&P.WKLR  EQU   *-&P.WORK       LENGTH TO BE CLEARED             GP13118
.*  OTHER STUFF - NOT CLEARED NOR COPIED                        GP13118
&P.OHD   DC    D'0'          OVERHEAD (OPTIONAL)                GP13118
&P.WTO   DC    XL92'0'       SPACE FOR WTO
&P.WKLN  EQU   *-&P.WORK       LENGTH TO BE MOVED               GP13118
.MEND    MEND  ,
