         MACRO ,
&NM      $TCKCONV &STCKVAL=,&CONVVAL=,&TIMETYP=,&DATETYP=,&MF=S,&ZONE=G*
               MT
.**********************************************************************
.*   THIS MACRO INVOKES LOCAL SUBROUTINE SUBSTCK TO PRODUCE OUTPUT    *
.*   COMPATIBLE WITH THE STCKCONV MACRO IN ESA AND LATER SYSTEMS.     *
.*   FOR USE UNDER THE XF ASSEMBLER, 8-BYTE KEYWORDS WERE SHORTENED   *
.*   TO 7 BYTES. THE ZONE=GMT×LT OPTION WAS ADDED AS IN TIME MACRO.   *
.*   STCKVAL=0 REQUESTS CURRENT TOD CLOCK VALUE.                      *
.**********************************************************************
         GBLC  &MACPLAB
         LCLB  &TB(8),&DB(9)  TIME & DATE FLAG BITS
         LCLC  &TV,&DV,&ERP
&TB(8)   SETB  ('&TIMETYP' EQ 'BIN' OR '&TIMETYP' EQ 'MIC')
&TB(7)   SETB  ('&TIMETYP' EQ 'DEC' OR '&TIMETYP' EQ 'MIC')
&TB(3)   SETB  1             STCKCONV FLAG
&DB(8)   SETB  ('&DATETYP' EQ 'MMDDYYYY' OR '&DATETYP' EQ 'YYYYMMDD')
&DB(7)   SETB  ('&DATETYP' EQ 'DDMMYYYY' OR '&DATETYP' EQ 'YYYYMMDD')
&DB(2)   SETB  ('&ZONE' EQ 'LT')
&DB(9)   SETB  ('&DATETYP' EQ 'YYYYDDD')
         AIF   ('&MF(1)' EQ 'L').LIST
&MACPLAB SETC  '&NM'         DEFERRED INSTRUCTION LABEL
&ERP     SETC  'STCKVAL'
         AIF   ('&STCKVAL' EQ '').MISSING
&ERP     SETC  'CONVVAL'
         AIF   ('&CONVVAL' EQ '').MISSING
&ERP     SETC  'TIMETYP'
         AIF   ('&TIMETYP' EQ '').MISSING
&ERP     SETC  'DATETYP'
         AIF   ('&DATETYP' EQ '').MISSING
         AIF   ('&MF(1)' EQ 'S').INLINE
         AIF   ('&MF(1)' EQ 'E').EXEC
&ERP     SETC  'MF'
.MISSING MNOTE 8,'KEYWORD &ERP MISSING OR INVALID'
         MEXIT ,
.*
.EXEC    MACPARM R1,&MF(2)
         AIF   ('&STCKVAL' NE '0').EXECU
         MACPARM R14,4(,R1)  AVOID ALIGNMENT ERROR ASM MSG
         STCK  0(R14)        GET CURRENT TIME
         AGO   .EXECC
.EXECU   MACPARM R14,&STCKVAL     GET TOD POINTER
         MVC   4(8,R1),0(R14)     COPY USER'S VALUE
.EXECC   XC    12(16,R1),12(R1)   CLEAR RETURN VALUE
&TV      SETC  '32*&TB(3)+2*&TB(7)+&TB(8)'
&DV      SETC  '64*&DB(2)+2*&DB(7)+&DB(8)'
         AIF   ('&DATETYP' EQ '').EXECND
         MVI   2(R1),&DV     SET DATE TYPE FLAGS
.EXECND  AIF   ('&TIMETYP' EQ '').EXECNT
         MVI   3(R1),&TV     SET TIME TYPE FLAGS
.EXECNT  AGO   .COMRET
.*
.INLINE  CNOP  0,4
         MACPARM R1,*+4+28,OP=BAL
         DC    7A(0)
         XC    12(16,R1),12(R1)   CLEAR RETURN VALUE
         AIF   ('&STCKVAL' NE '0').LINEU
         MACPARM R14,4(,R1)  AVOID ALIGNMENT ERROR ASM MSG
         STCK  0(R14)        GET CURRENT TIME
         AGO   .LINEC
.LINEU   MACPARM R14,&STCKVAL     GET TOD POINTER
         MVC   4(8,R1),0(R14)     COPY USER'S VALUE
.LINEC   ANOP  ,
&TV      SETC  '32*&TB(3)+2*&TB(7)+&TB(8)'
&DV      SETC  '64*&DB(2)+2*&DB(7)+&DB(8)'
         MVI   2(R1),&DV     SET DATE TYPE FLAGS
         MVI   3(R1),&TV     SET TIME TYPE FLAGS
.COMRET  L     R15,=V(SUBSTCK)  GET SUBROUTINE ADDRESS
         BALR  R14,R15       CALL SUBROUTINE
         MACPARM R14,&CONVVAL  GET OUTPUT ADDRESS
         MVC   0(16,R14),12(R1)  RETURN RESULT
         MEXIT ,
.*
.LIST    ANOP  ,
&TV      SETC  '32*&TB(3)+2*&TB(7)+&TB(8)'
&DV      SETC  '64*&DB(2)+2*&DB(7)+&DB(8)'
&NM      DC    0A(0),AL1(0,0,&TV,&DV),2A(0),2XL8'0'
.MEND    MEND  ,
