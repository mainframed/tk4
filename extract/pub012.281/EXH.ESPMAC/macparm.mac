         MACRO
&NM    MACPARM &OP1,         FIRST OPERAND (USUALLY R1 FOR LA/LR)      *
               &OP2,         SECOND OPERAND (R2/B2D2 OR R3 IF MODE=3   *
               &OP3,         THIRD OPERAND (B2D2 WHEN MODE=3)          *
               &OP4,         FOURTH OPERAND  (WHEN MODE=4)             *
               &OP=LA,       OPCODE WHEN OP2 IS NOT A REGISTER         *
               &OPM=,        OPCODE WHEN OP2 IS NEGATED AND NOT REG.   *
               &OPR=LR,      OPCODE WHEN OP2 IS REGISTER               *
               &OPMR=LCR,    OPCODE WHEN OP2 IS NEGATED REGISTER       *
               &QUOTE=,      OPCODE FOR QUOTED STRING/EXPLICIT LEN     *
               &MODE=,       ONE/THREE/REV/EQU/EVEN                    *
               &NAME=,       OUTER MACRO FOR MNOTES                    *
               &OMIT=NO,     SKIP COMPLETELY IF BLANK                  *
               &NULL=  SKIP, YES, OR OPERAND TO USE FOR NULL &OP2
.*                                                              GP00196
.*   THIS IS AN INNER MACRO USED TO CONVERT MACRO PARAMETERS TO
.*     INSTRUCTIONS APPROPRIATE TO THE OPERAND TYPE.
.*
.*   THIS MACRO WAS SUGGESTED BY A MUCH OLDER VERSION (LODE/LODESTAR)
.*     BY SEYMOUR (SHMUEL) J. METZ THAT HANDLED TWO OPERANDS ONLY.
.*     NONE OF THE ORIGINAL CODE IS USED HEREIN.
.*
.*   WITH DEFAULTS, IT EXPANDS:
.*    MACPARM R5,WORD      AS   LA R5,WORD
.*    MACPARM R5,(R5)      AS   NOTHING (LABEL IS SAVED IN MACPLAB)
.*    MACPARM R5,(R4)      AS   LR R5,R4
.*
.*   IN ORDER TO BE RECOGNIZED AS MATCHING, REGISTER SPECIFICATIONS
.*    SHOULD BE MADE IN ABSOLUTE FORM (0)-(15), OR MNEMONIC (R0)-(R15).
.*    OP1 NORMALLY DOES NOT NEED THE PARENTHESES.
.*
.*   TO AVOID CONFLICTS WITH REGISTER SPECIFICATIONS, EXPRESSIONS MUST
.*    EITHER BEGIN WITHOUT A PARENTHESIS, OR WITH TWO: ((B-A)/(C-A))
.*
.*    OP2 PARAMETER IS AN EXPRESSION OR (REG)
.*       EITHER FORM MAY BE PREFIXED BY A MINUS SIGN
.*       LA REQUESTS MAY BE PREFIXED BY / TO USE L =A(OP2)
.*       LA REQUESTS MAY BE PREFIXED BY * TO USE L ,OP2
.*       FOR A NEGATED SECOND OPERAND, THE EXPANSION WILL USE
.*       &OPMR FOR REGISTER, &OPM IF SPECIFIED, OR &OP/LNR
.*    MODE=REV      FOR &OPR, REVERSE REGISTERS
.*    MODE=EQU      IF FIRST=SECOND OPERAND, EXPAND ANYWAY
.*    MODE=NONE     EXPAND OP= ONLY; EITHER NO OPERAND OR OPT.  GP03144
.*                    OPERAND. (MAY BE ENCLOSED IN QUOTES)      GP03144
.*    MODE=ONE      SINGLE OPERAND (E.G., BX, BXR TYPE)
.*    MODE=THREE    THREE OPERAND TYPE; EXPANDS &OP &OP1,&OP2,&OP3
.*    MODE=FOUR     FOUR OPERAND TYPE; EXPANDS &OP &OP1,&OP2,&OP3,&OP4
.*    MODE=EVEN     EXPAND (TWO OPERAND FORM) EVEN WHEN SAME    GP01028
.*    MODE=LBL      NO OPERANDS - EXPANDS PENDING LABEL(S)
.*                    OPERAND 1 - OPTIONAL ALIGNMENT (E.G., 0F) GP03144
.*    NULL=         OMITTED PARM CAUSES ASSEMBLY ERROR (?)
.*    NULL=YES      NULL FINAL PARAMETER EXPANDS WITHOUT PARM
.*    NULL=TERM     EXPANSION USES SUPPLIED TERM IF PARM=NULL
.*    NULL=SKIP     NULL FINAL PARAMETER SKIPS EXPANSION
.*    NAME=         (OPTIONAL) NAME OF OUTER MACRO FOR MNOTES
.*
.*    QUOTE=(LA,8)  TURNS  'TEXT' INTO   LA RX,=CL(8)'TEXT' (MODE 2)
.*
         GBLC  &MACPLAB,&MACPSIZ,&MACQSTR                       GP08090
         GBLB  &MACPERR,&MACPNUL,&MVS,&MVSXA,&MVSESA            GP00196
         GBLB  &MACQUOT                                         GP08090
         GBLA  &MACPLEN                                         GP08090
         LCLA  &K,&I,&J                                         GP08090
         LCLB  &MINUS,&MOD0,&MOD1,&MOD3,&MOD4,&MODQ,&MODR,&MODV
         LCLB  &FGR1,&FGR2   ON WITH REGISTER OPERAND
         LCLC  &FD1,&FD2,&FD3,&FD4,&LBL,&OPRR,&MNONM,&OPLA,&L   GP08090
         AIF   ('&OMIT' EQ '').NO  SKIP COMPLETELY IF NULL      GP06277
&MNONM   SETC  'MACPARM:'
&MACPERR SETB  0             RESET RETURN FLAG                  GP00196
&MACPNUL SETB  0             RESET RETURN FLAG                  GP00196
&OPLA    SETC  '&OP'         MAY NEED UPDATING                  GP08090
&MACPSIZ SETC  ''                                               GP08090
         AIF   ('&NM' EQ '').NONAME
&MNONM   SETC  '&NAME'.'/MACPARM:'
.NONAME  ANOP  ,
&MOD0    SETB  ('&MODE' EQ 'NONE' OR '&MODE' EQ '0')            GP03144
&MOD1    SETB  ('&MODE' EQ 'ONE' OR '&MODE' EQ '1')
&MOD3    SETB  ('&MODE' EQ 'THREE' OR '&MODE' EQ '3')
&MOD4    SETB  ('&MODE' EQ 'FOUR' OR '&MODE' EQ '4')            GP00196
&MODQ    SETB  ('&MODE' EQ 'EQU' OR '&MODE' EQ 'EQUAL')
&MODR    SETB  ('&MODE' EQ 'REV' OR '&MODE' EQ 'REVERSE')
&MODV    SETB  ('&MODE' EQ 'EVEN' OR '&MODE' EQ 'SAME')         GP01028
.*
.*  TEST FOR UNUSED LABEL EXPANSION ONLY
.*
&LBL     SETC  '&NM'         INDICATE LOCAL LABEL UNUSED
         AIF   ('&MODE' NE 'LBL' AND '&MODE' NE 'LABEL').NOTLBL
&FD1     SETC  '&OP1(1)'     ALLOW USER TO SPECIFY ALIGNMENT    GP03144
         AIF   ('&FD1' NE '').XAV                               GP03144
&FD1     SETC  '0H'          DEFAULT ALIGNMENT                  GP03144
.XAV     AIF   ('&MACPLAB' EQ '').XNM
         AIF   ('&MACPLAB' EQ '&LBL').X1LBL
&MACPLAB DS    &FD1                                             GP03144
.X1LBL   ANOP  ,
&MACPLAB SETC  ''
.XNM     AIF   ('&LBL' EQ '').XNOP
&NM      DS    &FD1                                             GP03144
&LBL     SETC  ''            LOCAL LABEL EXPANDED
.XNOP    AIF   (T'&OP2 EQ 'O' AND T'&OP3 EQ 'O'                        *
               AND T'&OP4 EQ 'O').MEXIT
         MNOTE 4,'&MNONM POSITIONAL PARAMETERS IGNORED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
.MEXIT   MEXIT ,
.*
.*  TEST FOR CORRECT MODE OPERAND
.*
.NOTLBL  AIF   ('&MODE' EQ '' OR &MOD0 OR &MOD1 OR &MOD3 OR &MODQ      *
               OR &MODR OR &MODV).MODG                          GP03144
         MNOTE 8,'&MNONM INVALID MODE=&MODE '
&MACPERR SETB  1             RETURN ERROR                       GP00196
.*
.*  CHECK LOCAL VS. GLOBAL LABEL, EXPAND GLOBAL AND RELOAD
.*
.MODG    AIF   ('&MACPLAB' EQ '' OR '&LBL' EQ '').N2LBL
&MACPLAB DS    0H
         AGO   .PROPLBL      PROPAGATE LOCAL LABEL
.N2LBL   AIF   ('&MACPLAB' NE '').NOLAB
.PROPLBL ANOP  ,
&MACPLAB SETC  '&LBL'        NO GLOBAL LABEL - USE LOCAL
&LBL     SETC  ''
.*
.*  TEST FOR CORRECT NUMBER OF PARAMETERS, AND SUBSTITUTE &NULL
.*
.NOLAB   AIF   (NOT &MOD0).NOTNONE   OPCODE ONLY ?              GP03144
&FD1     SETC  '&OP1'                                           GP03144
         AIF   ('&FD1' EQ '').DONONE                            GP03144
         AIF   ('&FD1'(1,1) NE '"').DONONE                      GP03144
&FD1     SETC  '&FD1'(2,K'&FD1-2)                               GP03144
.DONONE  ANOP  ,                                                GP03144
&MACPLAB &OP   &FD1                                             GP03144
         AIF   (T'&OP2 EQ 'O' AND T'&OP3 EQ 'O'                        *
               AND T'&OP4 EQ 'O').GO                            GP03144
         MNOTE 4,'&MNONM POSITIONAL PARAMETERS IGNORED'         GP03144
&MACPERR SETB  1             RETURN ERROR                       GP03144
         AGO   .GO                                              GP03144
.NOTNONE ANOP  ,
&FD1     SETC  '&OP1'
&FD2     SETC  '&OP2'
&FD3     SETC  '&OP3'
&FD4     SETC  '&OP4'                                           GP00196
         AIF   (T'&OP1 NE 'O').HAVE1
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   (NOT &MOD1).NOTONE
         AIF   ('&NULL' EQ '').NOTONE
         AIF   ('&NULL' EQ 'YES').HAVE1  NOTHING ELSE TO DO     GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD1     SETC  '&NULL'
         AGO   .HAVE1
.NOTONE  MNOTE 8,'&MNONM FIRST POSITIONAL OPERAND REQUIRED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT
.HAVE1   AIF   (&MOD1).HAVEALL
         AIF   (T'&OP2 NE 'O').HAVE2
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   (&MOD3).NOTTWO
         AIF   ('&NULL' EQ '').NOTTWO
         AIF   ('&NULL' EQ 'YES').HAVE2  NOTHING ELSE TO DO     GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD2     SETC  '&NULL'
         AGO   .HAVE2
.NOTTWO  MNOTE 8,'&MNONM SECOND POSITIONAL OPERAND REQUIRED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT
.HAVE2   AIF   (NOT &MOD3).HAVE3                                GP00196
         AIF   (T'&OP3 NE 'O').HAVE3                            GP00196
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   ('&NULL' EQ '').NOTHREE
         AIF   ('&NULL' EQ 'YES').HAVEALL  NOTHING ELSE TO DO   GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD3     SETC  '&NULL'
         AGO   .HAVEALL
.NOTHREE MNOTE 8,'&MNONM THIRD POSITIONAL OPERAND REQUIRED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT
.HAVE3   AIF   (NOT &MOD4).HAVEALL                              GP00196
         AIF   (T'&OP4 NE 'O').HAVEALL                          GP00196
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   ('&NULL' EQ '').NOFOUR                           GP00196
         AIF   ('&NULL' EQ 'YES').HAVEALL  NOTHING ELSE TO DO   GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD4     SETC  '&NULL'                                          GP00196
         AGO   .HAVEALL                                         GP00196
.NOFOUR  MNOTE 8,'&MNONM FOURTH POSITIONAL OPERAND REQUIRED'    GP03207
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT                                           GP00196
.*
.*  CHANGE OP1 AND OP2 (UNLESS MOD1 OR MOD3) TO PREFERRED FORM
.*    IF MODE 3, GO TO EXPAND IT
.*
.HAVEALL AIF   (&MOD3).DO3   SIMPLE EXPANSION OF THREE OPERANDS
         AIF   (&MOD4).DO4   SIMPLE EXPANSION OF FOUR OPERANDS  GP00196
         AIF   (NOT &MOD1).CLNOP1
&K       SETA  K'&FD1
         AIF   (&K LT 2 OR '&FD1'(1,1) NE '-').CLNOP1
&MINUS   SETB  1
&FD1     SETC  '&FD1'(2,&K-1)
&K       SETA  K'&FD1
.CLNOP1  ANOP  ,
         AIF   (&K LT 3).NORG1
         AIF   ('&FD1'(1,1) NE '(' OR '&FD1'(&K,1) NE ')').NORG1
         AIF   ('&FD1'(2,1) EQ '(').NOSY1        ((EXPRESSION)) ?
&FGR1    SETB  1             FLAG OP1 AS REGISTER EXPRESSION
&FD1     SETC  '&FD1'(2,&K-2)
&K       SETA  K'&FD1
.*  LOOK FOR SINGLE OR DOUBLE DIGIT - PREFIX BY R
.NORG1   AIF   (&K LT 1 OR &K GT 2).NOSY1
         AIF   ('&FD1'(1,1) LT '0').NOSY1  LEAVE IF NOT NUMERIC
&FD1     SETC  'R'.'&FD1'    MAKE SYMBOLIC REGISTER
.*
.*  HAVE OP1 CLEANED FROM (N) TO RN; GO TO EXPAND MODE 1
.*    ELSE TEST AND CLEAN OPERAND 2
.*
.NOSY1   AIF   (&MOD1).DO1
&K       SETA  K'&FD2
&OPRR    SETC  '&OPR'
         AIF   (&K LT 2 OR '&FD2'(1,1) NE '-').NONEG2
&MINUS   SETB  1
&FD2     SETC  '&FD2'(2,&K-1)
&K       SETA  K'&FD2
&OPRR    SETC  '&OPMR'
.NONEG2  AIF   (&K LT 3).NORG2
         AIF   ('&FD2'(1,1) NE '''' OR T'&QUOTE EQ 'O').NOQUO2  GP08090
         AIF   ('&FD2'(&K,1) NE '''').NOQUO2                    GP08090
         MACQOLIT &FD2,LEN=&QUOTE(2)                            GP08090
         AIF   (&MACPERR OR &MACPNUL).NOQUO2                    GP08090
&FD2     SETC  '&MACQSTR'                                       GP08090
&MACPSIZ SETC  '&MACPLEN'    RETURN LENGTH                      GP08090
         AIF   ('&QUOTE(1)' EQ '').LOPP                         GP08090
&OPLA    SETC  '&QUOTE(1)'                                      GP08090
         AGO   .LOPP                                            GP08090
.NOQUO2  AIF   ('&FD2'(1,1) NE '(' OR '&FD2'(&K,1) NE ')').NORG2
         AIF   ('&FD2'(2,1) EQ '(').NORG2        ((EXPRESSION)) ?
&FD2     SETC  '&FD2'(2,&K-2)
&K       SETA  K'&FD2
&FGR2    SETB  1             FLAG OP1 AS REGISTER EXPRESSION
         AIF   ('&FD2'(1,1) LT '0').NOSY2  LEAVE IF NOT NUMERIC
         AIF   (&K LT 1 OR &K GT 2).NOSY2
&FD2     SETC  'R'.'&FD2'    MAKE SYMBOLIC REGISTER
.*
.*  REG: CHECK FOR NEG PREFIX, MODE=EQU, ELSE IF OP1=OP2, NO EXPANSION
.*
.NOSY2   AIF   ('&FD2' NE '&FD1' OR &MINUS OR &MODV).LR         GP01028
         AIF   (NOT &MODQ).NO
.LR      AIF   (NOT &MODR).NOREV
&MACPLAB &OPRR &FD2,&FD1
         AGO   .GO
.*
.*  REG: NORMAL FORM, (EXPANDS MINUS, ALSO - OPR OR OPMR IN OPRR)
.*
.NOREV   ANOP  ,
&MACPLAB &OPRR &FD1,&FD2
         AGO   .GO
.*
.*  NOT REG: CHECK FOR LA AND SPECIAL CASES
.*
.NORG2   ANOP  ,                                                GP08090
&MACPSIZ SETC  '&L'.'&FD2'   RETURN LENGTH FOR USUAL CASE       GP08090
         AIF   ('&OPLA' EQ 'LA' AND '&FD2' EQ '0').SR
         AIF   ('&OPM' NE '' AND &MINUS).OPM
.*
.*  LA OP1,/OP2   GENERATES L OP1,=A(OP2)
.*
         AIF   ('&OPLA' NE 'LA' OR '&FD2'(1,1) NE '/').LOP
&FD2     SETC  '&FD2'(2,K'&FD2-1)
&MACPLAB L     &FD1,=A(&FD2)
         AGO   .LOPCO
.*
.*  LA OP1,*OP2   GENERATES L OP1,OP2
.*
.LOP     AIF   ('&OPLA' NE 'LA' OR '&FD2'(1,1) NE '*').LOPP
         AIF   (K'&FD2 EQ 1).LOPP
&FD2     SETC  '&FD2'(2,K'&FD2-1)
&MACPLAB L     &FD1,&FD2
         AGO   .LOPCO
.LOPP    ANOP  ,
&MACPLAB &OPLA &FD1,&FD2
.LOPCO   AIF   (NOT &MINUS).GO
         &OPMR &FD1,&FD1
         AGO   .GO
.*
.*  USER SPECIFIED OPM AND -OP2
.*
.OPM     ANOP  ,
&MACPLAB &OPM  &FD1,&FD2
         AGO   .GO
.*
.*  SINGLE OPERAND INSTRUCTION - EXPAND, CHECK FOR -OP1
.*
.DO1     AIF   (&FGR1).DO1REG
         AIF   ('&OPM' NE '' AND &MINUS).DO1NEG
&MACPLAB &OP   &FD1
         AIF   (NOT &MINUS).GO
         &OPMR &FD1
         AGO   .GO
.DO1NEG  ANOP  ,
&MACPLAB &OPM  &FD1
         AGO   .GO
.DO1REG  AIF   (&MINUS).DO1MIN
&MACPLAB &OPR  &FD1
         AGO   .GO
.DO1MIN  ANOP  ,
&MACPLAB &OPMR &FD1
         AGO   .GO
.*
.*  EXPAND THREE OPERAND INSTRUCTIONS - NO SPECIAL CHECKING
.*
.DO3     ANOP  ,
&MACPLAB &OPLA &FD1,&FD2,&FD3
         AGO   .GO
.*                                                              GP00196
.*  EXPAND FOUR OPERAND INSTRUCTIONS - NO SPECIAL CHECKING      GP00196
.*                                                              GP00196
.DO4     ANOP  ,                                                GP00196
&MACPLAB &OPLA &FD1,&FD2,&FD3,&FD4                              GP00196
         AGO   .GO                                              GP00196
.*
.*  ON SOME OLD MACHINES LA,0 WAS SLOWER AND LONGER. RETAIN SR ?
.*
.SR      ANOP
&MACPLAB SR    &FD1,&FD1
.*
.*  INSTRUCTION(S) EXPANDED; CLEAR LABEL
.*
.GO      ANOP  ,
&MACPLAB SETC  ''
.*
.*  NOTHING EXPANDED - MAINTAIN LABELS
.*
.NO      MEND  ,
