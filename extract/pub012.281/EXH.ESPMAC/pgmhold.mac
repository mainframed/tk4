         MACRO ,
&L       PGMHEAD &DUMMY,&PFX=SAVE,&END=,&ENDZERO=,&DSECT=,&PARM=R1,    *
               &SAVE=*,                                          81208 *
               &STARTOF=0,     LISTING OFFSET FOR SUBROUTINES   GP02257*
               &BASE=R12,&BASED=*,&BREG=,                       GP02264*
               &EID=SHORT,&ENTRY=,&ENTNO=,                             *
               &RIGHT=,                                                *
               &ID=*,&DATE=,&SP=0,&BNDRY=,&LOC=,                 82002 *
               &CSECT=CSECT,&XOPT=BSM,&AM=31,&RM=24,&SETAM=     GP02285
.*
.*    REWRITTEN FROM MACRO SAVEM, WITH ESA AND OS/390 CHANGES   GP98365
.*             COPYRIGHT 1978 BY SHMUEL (SEYMOUR J.) METZ
.*                        ALL RIGHTS RESERVED.
.*             NEW CODE COPYRIGHT 1998 GERHARD POSTPISCHIL      GP98365
.*                                                              GP98365
.*             THIS MACRO IS NOT TO BE DISTRIBUTED WITHOUT PERMISSION,
.*             AS DESCRIBED IN MEMBER $$RIGHTS.
.*
.*       FOR SIMPLE ENTRIES, PARM=R1 NOW RELOADS R0 AND R1       87223
.*       BASE=(B1,B2,B3,B4) SUPPORT ADDED (EASIER TO USE?)       87223
.*                                                               87223
         COPY  OPTIONGB
         GBLB  &DROP@1                                           81163
         GBLB  &MAPONCE
         GBLB  &AMSET,&RMSET                                    GP98365
         GBLB  &SAV@REG
         GBLB  &SAV@DYN(10)
         GBLC  &SAV@NAM(10)
         GBLC  &SAVTYPE,&SAVNAME                                GP04050
         GBLC  &MACPLAB                                          81154
         GBLC  &SYSSPLV      VERSION OF SP (1, 2...)             93174
         GBLC  &SAVZPRM      PGMHEAD SAVED PARM                 GP09247
         LCLA  &I,&J,&K,&N,&NUMENT                              GP03245
         LCLB  &BWOPT,&Y           BIGWORK  OPTION
         LCLB  &HWOPT              HUGEWORK OPTION ( > 32767 )   84307
         LCLB  &CME                BASED/ENTRY PRESENT           81163
         LCLB  &CPYREGS            CPYREGS  OPTION
         LCLB  &DSOPT              NODSECT  OPTION
         LCLB  &EQUOPT             NOEQU    OPTION
         LCLB  &NOENTRY            NOENTRY  OPTION
         LCLB  &NOREG              NOREG    OPTION - SKIP YREGS GP04115
         LCLB  &NOSAVE             NOSAVE   OPTION
         LCLB  &NWOPT              NOWORK   OPTION
         LCLB  &OLDSAVE            OLDSAVE  OPTION
         LCLB  &BZOPT              ZERO > 256
         LCLB  &NOT1ST             NOT FIRST USE OF &PFX
         LCLB  &ZERO               ZERO     OPTION
         LCLB  &ZERO8              ZERO     <= 256               81202
         LCLB  &ZERO12             ZERO     >  256               81202
         LCLB  &ZERO15             ZERO     > 4095               81208
         LCLB  &ZERO31             ZERO     > 32767              84307
         LCLC  &B@                 GENERATED LABEL FOR B TARGET
         LCLC  &CMB                COMMON BASE NAME              81163
         LCLC  &CMU                BASE REG. STRING FOR USING    81163
         LCLC  &DSVAR              NON-RENT SAVE AREA NAME      GP03033
         LCLC  &DSCTG              DSECT NAME                    81208
         LCLC  &ENDG               END LABEL FOR GETMAINED AREA  81208
         LCLC  &ENDZ               END OF ZEROED AREA            81208
         LCLC  &LAB                LABEL FOR ENTRY POINT
         LCLC  &LQ                 L'
         LCLC  &N@                 GENERATED NAME FOR DC
         LCLC  &SECT               CSECT NAME
         LCLC  &SP@                SUBPOOL FOR GETMAIN
         LCLC  &NAME               NAME FOR CONSTRUCTED ID
         LCLC  &SV                 SAVE AREA PREFIX              81208
         LCLC  &BEGZ         WHERE TO START ZEROING (FWD DEFAULT)
         LCLC  &PARMEXP
         LCLC  &PARMREG
         LCLC  &CASE         FIRST/ONLY BASE REG                GP02264
         LCLC  &C9           TEMP                               GP03245
         LCLC  &YOPT         COPY OF XOPT OR 'STM'              GP04234
       SYSPARM ,                   SET GLOBALS
&SECT    SETC  '&SYSECT'
&SV      SETC  '&PFX'
&SAVNAME SETC  '&PFX'                                           GP04050
&DSCTG   SETC  '&PFX'
&ENDG    SETC  '&PFX'.'END'                                     GP98365
&BEGZ    SETC  '&PFX'.'FWD'        ZERO BEGINNING AT FWD LINK    94272
&SAVTYPE SETC  'DYN'         (AS OPPOSED TO NO OR OLD)          GP04050
.*
&YOPT    SETC  '&XOPT'                                          GP04234
         AIF   ('&YOPT' EQ 'BSM' AND &MVSESA).ASMVS             GP04234
&YOPT    SETC  'STM'                                            GP04234
.*
.ASMVS   AIF   ('&DSECT' EQ '').DSGOK
&DSCTG   SETC  '&DSECT'
.DSGOK   AIF   ('&END' EQ '').ENDGOK
&ENDG    SETC  '&END'
.ENDGOK  ANOP  ,
&DSVAR   SETC  '&DSCTG'      DEFAULT START OF SAVE AREA         GP03033
         AIF   ('&SAVE' EQ '*').ENDGSV                          GP03033
&DSVAR   SETC  '&SAVE'       FOR LENGTH DEFINITION              GP03033
.ENDGSV  ANOP  ,                                                GP03033
.*
&N       SETA  1
.NXTSLOT ANOP  ,
&NOT1ST  SETB  (&NOT1ST OR ('&PFX' EQ '&SAV@NAM(&N)'))
         AIF   (&NOT1ST).FND1ST
         AIF   ('&SAV@NAM(&N)' EQ '').FNDSLOT
&N       SETA  &N+1
         AIF   (&N LE 10).NXTSLOT
         MNOTE 12,'TOO MANY PGMHEAD DSECTS'                     GP98365
         MEXIT ,
.FNDSLOT ANOP  ,
&SAV@NAM(&N) SETC '&PFX'
.*
.FND1ST  AIF   ('&SYSECT' EQ '' AND T'&L EQ 'O').NOL
&I       SETA  1
         AIF   (N'&SYSLIST EQ 0).ENDOPT
.*
.LOOP    AIF   ('&SYSLIST(&I)' EQ 'CPYREGS').CPYREGS
         AIF   ('&SYSLIST(&I)' EQ 'COPYREGS').CPYREGS            81154
         AIF   ('&SYSLIST(&I)' EQ 'COPYREGISTERS').CPYREGS
         AIF   ('&SYSLIST(&I)' EQ 'NODSECT').NODSECT
         AIF   ('&SYSLIST(&I)' EQ 'NOEQU').NOEQU
         AIF   ('&SYSLIST(&I)' EQ 'NOREG').NOREGS               GP04115
         AIF   ('&SYSLIST(&I)' EQ 'NOREGS').NOREGS              GP04115
         AIF   ('&SYSLIST(&I)' EQ 'BIGWORK').BIGWORK
         AIF   ('&SYSLIST(&I)' EQ 'HUGEWORK').HUGWORK            84307
         AIF   ('&SYSLIST(&I)' EQ 'BIGZERO').BIGZERO
         AIF   ('&SYSLIST(&I)' EQ 'HUGEZERO').ZERO31             84307
         AIF   ('&SYSLIST(&I)' EQ 'NOWORK').NOWORK
         AIF   ('&SYSLIST(&I)' EQ 'NOSAVE').NOSAVE1
         AIF   ('&SYSLIST(&I)' EQ 'OLDSAVE').OLDSAVE
         AIF   ('&SYSLIST(&I)' EQ 'NOENTRY').NOENTRY
         AIF   ('&SYSLIST(&I)' EQ 'ZERO').ZERO
         AIF   ('&SYSLIST(&I)' EQ 'ZERO8').ZERO8                 81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO12').ZERO12               81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO15').ZERO15               81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO31').ZERO31               84307
         AIF   ('&SYSLIST(&I)' EQ '').NXTOPT
         MNOTE 4,'''&SYSLIST(&I)'' IS AN INVALID OPTION - IGNORED'
         AGO   .NXTOPT
.*
.NOL     MNOTE 12,'LABEL REQUIRED IF NO CSECT'
         MEXIT ,
.*
.CPYREGS ANOP  ,
&CPYREGS SETB  1
         AGO   .NXTOPT
.NODSECT ANOP  ,
&DSOPT   SETB  1
         AGO   .NXTOPT
.NOEQU   ANOP  ,
&EQUOPT  SETB  1
         AGO   .NXTOPT
.NOREGS  ANOP  ,                                                GP04115
&NOREG   SETB  1                                                GP04115
         AGO   .NXTOPT                                          GP04115
.HUGWORK ANOP  ,                                                 84307
&HWOPT   SETB  1             SET FOR HUGE WORK AREA              84307
.BIGWORK ANOP  ,
&BWOPT   SETB  1
&BZOPT   SETB  1
         AGO   .NXTOPT
.NOWORK  ANOP  ,
&NWOPT   SETB  1
         AGO   .NXTOPT
.NOSAVE1 ANOP  ,
&NOSAVE  SETB  1
&SAVTYPE SETC  'NO'                                             GP04050
         AGO   .NXTOPT
.OLDSAVE ANOP  ,
&OLDSAVE SETB  1
&SAVTYPE SETC  'OLD'                                            GP04050
         AGO   .NXTOPT
.NOENTRY ANOP  ,
&NOENTRY SETB  1
         AGO   .NXTOPT
.*                                                               81208
.ZERO8   ANOP  ,                                                 81208
&ZERO8   SETB  1                                                 81208
         AGO   .ZERO                                             81208
.ZERO12  ANOP  ,                                                 81208
&ZERO12  SETB  1                                                 81218
         AGO   .ZERO                                             81208
.ZERO31  ANOP  ,                                                 84307
&HWOPT   SETB  1             HUGE WORK AREA > 32767              84307
&ZERO31  SETB  1                                                 84307
.ZERO15  ANOP  ,                                                 81208
&ZERO15  SETB  1                                                 81208
&BWOPT   SETB  1                                                 81218
         AGO   .ZERO                                             81208
.BIGZERO ANOP  ,
&BZOPT   SETB  1                                                 81202
.ZERO    ANOP  ,
&ZERO    SETB  1
.NXTOPT  ANOP  ,
&I       SETA  &I+1
         AIF   (&I LE N'&SYSLIST).LOOP
.ENDOPT  AIF   (&ZERO8 OR &ZERO12 OR &ZERO15).GOTZERO            81208
&ZERO31  SETB  (&ZERO AND &HWOPT)                                84307
&ZERO15  SETB  (&ZERO AND &BWOPT)                                81208
&ZERO12  SETB  (&BZOPT AND NOT &ZERO15)                          81208
&ZERO8   SETB  (&ZERO AND NOT &ZERO12 AND NOT &ZERO15)           81202
.GOTZERO AIF   (T'&L EQ 'O').CSECTOK                             81208
         AIF   ('&SYSECT' EQ '' OR '&L' EQ '&SYSECT').LABOK      81202
&LAB     SETC  '&L'
         AIF   (&NOENTRY).LABOK
         SPACE 1                                                GP04050
         ENTRY &L
.LABOK   AIF   ('&SYSECT' NE '').CSECTOK
         AIF   ('&CSECT' EQ 'CSECT').CSECTDO                    GP98322
         AIF   ('&CSECT' EQ 'RSECT').RSECTDO                    GP98322
         AIF   ('&CSECT' EQ 'START').STARTDO                    GP98322
         MNOTE 4,'INVALID CSECT OPERAND; USE CSECT OR RSECT'    GP98322
         AGO   .CSECTDO      TRY TO CONTINUE?                   GP98322
.*                                                              GP98322
.STARTDO ANOP  ,                                                GP98322
&L       START &STARTOF                                         GP04234
         AGO   .CSECTCM                                         GP98322
.*                                                              GP98322
.RSECTDO AIF   (NOT &MVSESA).CSECTDO                            GP04234
&L       RSECT ,                                                GP98322
         AGO   .CSECTCM                                         GP98322
.*                                                              GP98322
.CSECTDO ANOP  ,                                                GP98322
&L       CSECT ,
.CSECTCM ANOP  ,
&SECT    SETC  '&L'
         AIF   ('&AM' EQ '' OR &AMSET).NOAM                     GP98365
         AIF   (NOT &MVSESA).NOAM                               GP04234
&L       AMODE &AM
&AMSET   SETB  1                                                GP98365
.NOAM    AIF   ('&RM' EQ '' OR &RMSET).CSECTOK                  GP98365
         AIF   (NOT &MVSESA).CSECTOK                            GP04234
         AIF   ('&RM' EQ '24' OR '&RM' EQ 'ANY').SETRM          GP99120
         AIF   ('&RM' EQ '31').ANYRM                            GP99120
         MNOTE 4,'INVALID RM=&RM '                              GP99120
.ANYRM   ANOP  ,                                                GP99120
&L       RMODE ANY                                              GP99120
         AGO   .FLGRM                                           GP99120
.SETRM   ANOP  ,                                                GP99120
&L       RMODE &RM                                              GP98365
.FLGRM   ANOP  ,                                                GP99120
&RMSET   SETB  1                                                GP98365
.CSECTOK AIF   (T'&BASED EQ 'O' AND T'&ENTRY EQ 'O').NOCLAB      81163
         AIF   (T'&ENTRY NE 'O').DOCLAB                          81163
         AIF   ('&BASED' EQ '*').NOCLAB                          81163
.DOCLAB  ANOP  ,                                                 81163
&CME     SETB  1             SET SPECIAL BASE PROCESSING         81163
.NOCLAB  AIF   ('&LAB' NE '').OKCLAB                             81163
&LAB     SETC  'A@&SYSNDX'                                       81163
.OKCLAB  ANOP  ,                                                 81163
&CMB     SETC  '&LAB'        DEFAULT BASED VALUE                 81163
         AIF   (T'&BASED EQ 'O').CLABOK                          81163
         AIF   ('&BASED' EQ '*').CLABOK                          81163
         AIF   ('&BASED' NE '*SYSECT').CLABSET                   81163
         AIF   ('&SYSECT' EQ '').CLABOK   BOO                    81163
&CMB     SETC  '&SYSECT'                                         81163
         AGO   .CLABOK                                           81163
.CLABSET ANOP  ,                                                 81163
&CMB     SETC  '&BASED'                                          81163
.CLABOK  ANOP  ,                                                 81163
&CMU     SETC  'R15'         DEFAULT BASE REGISTER ON USING      81163
&SAV@DYN(&N) SETB (NOT &NOSAVE)
&PARMEXP SETC  '(R1)'
&PARMREG SETC  '1'
&SAVZPRM SETC  ''            PASS TO PARMLOAD MACRO             GP10180
         AIF   ('&PARM' EQ '').PARM1
&SAVZPRM SETC  '&PARM(1)'    PASS TO PARMLOAD MACRO             GP10180
         AIF   (N'&PARM LT 2).PARM1
&PARMEXP SETC  '&PARM(2)'
         AIF   (NOT &OLDSAVE).PARM1
&PARMREG SETC  '&PARM(2)'
         AIF   ('&PARMEXP'(1,1) EQ '(').STRIP
         MNOTE 8,'PARM=&PARM INVALID'
         MNOTE 8,'PARM=(&PARM(1),(&PARM(2)) ASSUMED'
         AGO   .STRIPT
.STRIP   AIF   ('&PARMEXP'(K'&PARMEXP,1) EQ ')').STRIP1
         MNOTE 12,'PARM=&PARM INVALID'
         MEXIT ,
.STRIP1  ANOP  ,
&PARMREG SETC  '&PARMREG'(2,K'&PARMREG-2)
.STRIPT  AIF   ('&PARMREG'(1,1) GE '0').PARM1
&PARMREG SETC  '&PARMREG'(2,K'&PARMREG-1)
.PARM1   AIF   (NOT &DROP@1).NODROP                              81163
         DROP  ,                                                 81163
.NODROP  ANOP  ,                                                 81163
&DROP@1  SETB  1                                                 81163
         AIF   (T'&BASE NE 'O').NEWBASE                         GP02264
.NOBASE  AIF   (T'&ENTRY NE 'O').NOBASEU                         81163
         DS    0H
         USING *,R15                                             81163
.NOBASEU ANOP  ,                                                 81163
&CMU     SETC  'R15'                                             81163
&CASE    SETC  'R15'                                             81163
         AGO   .BASED
.NEWBASE ANOP  ,                                                GP02264
&K       SETA  N'&BASE      MAX NUMBER OF BASES SPECIFIED       GP02264
&CMU     SETC  '&BASE(1)'    SET THE FIRST ONE                  GP02264
&CASE    SETC  '&BASE(1)'    SET THE FIRST ONE                  GP02264
.BASED   AIF   (&NOSAVE).BASED2                                 GP04050
         USING &DSCTG,R13
.BASED2  AIF   ('&ID' EQ 'NO').NAMEOK                           GP05017
&B@      SETC  'B@&SYSNDX'
&N@      SETC  'N@&SYSNDX'
&LQ      SETC  'L'''
&LAB     B     &B@-*(,R15)
&LAB     SETC  ''                                               GP05017
         DC    AL1(&LQ&N@)
         AIF   ('&ID' NE '*').USEID
&NAME    SETC  '&L'
         AIF   (T'&L NE 'O').USENAME
&NAME    SETC  '&SYSECT'
.USENAME AIF   ('&RIGHT' EQ '').NORIGHT
&NAME    SETC  '&NAME'.' '.'COPYRIGHT '.'&RIGHT'
.NORIGHT AIF   ('&DATE' EQ 'NO').NODATE
&N@      DC    C'&NAME - &SYSDATE - &SYSTIME'
         AGO   .NAMEOK
.NODATE  ANOP  ,
&N@      DC    C'&NAME'
         AGO   .NAMEOK
.USEID   ANOP  ,
         AIF   ('&ID'(1,1) NE '''').USEIDQ
&N@      DC    C&ID
         AGO   .NAMEOK
.USEIDQ  ANOP  ,
&N@      DC    C'&ID'
.NAMEOK  ANOP  ,                                                GP05017
&LAB     MACPARM MODE=LBL                                       GP05017
         AIF   (T'&ENTRY EQ 'O').NOENTR                          81163
&I       SETA  0                                                 81163
&J       SETA  N'&ENTRY                                          81163
&N@      SETC  ''            SHORT ID                            81163
         AIF   ('&EID' EQ 'SHORT').ENTRSH                        81163
&N@      SETC  ' - '.'&SYSDATE'.' - '.'&SYSTIME'                 81163
.ENTRSH  AIF   (&I GE &J).ENTRDN                                 81163
&I       SETA  &I+1                                              81163
&C9      SETC  '&ENTRY(&I)'                                      81163
         AIF   (&NOENTRY).ENTRNN                                 81347
         SPACE 1                                                GP04051
         ENTRY &C9                                               81163
.ENTRNN  AIF   (T'&ENTNO EQ 'O').ENTRNM                          88255
&NUMENT  SETA  &NUMENT+1     INCREASE ENTRY NUMBER               88255
         DC    Y(&NUMENT)    MAKE ENTRY PREFIX                   88255
.ENTRNM  ANOP  ,                                                 88255
&C9      B     &B@-*(,R15)                                       81163
         AIF   ('&EID' EQ 'NONE').ENTRSH                        GP99055
&N       SETA  K'&N@+K'&C9                                       81163
&N       SETA  ((&N/2)*2)+1  MAKE ODD LENGTH FOR ALIGNMENT       81163
         DC    AL1(&N),CL(&N)'&ENTRY(&I)&N@'                     81163
         AGO   .ENTRSH                                           81163
.ENTRDN  AIF   (T'&ENTNO EQ 'O').ENTRDM                          88255
         DC    Y(0)          SET ENTRY PREFIX =0 (MAIN)          88255
.ENTRDM  AIF   (&NOSAVE).ELDSVAM                                GP04050
.*WHY?   USING &C9,R15                                          GP99158
&B@      SAVEX R14,R12,&SV.14,TYPE=&YOPT,SETAM=&SETAM           GP99018
&B@      SETC  ''                                                81163
.*WHY?   DROP  R15                                              GP99158
         AGO   .ELDSV                                           GP04050
.ELDSVAM AIF   ('&SETAM' EQ '').ELDSV                           GP04050
         AIF   (NOT &MVSESA).ELDSV                              GP04234
         BASR  &CASE,0                                          GP04050
         USING *,&CASE                                          GP04050
         AM&SETAM WORK=&CASE                                    GP04050
         DROP  &CASE                                            GP04050
.ELDSV   AIF   ('&CASE' EQ '').ELDSVLR                           87223
         AIF   ('&BASED' NE '*').ELDSVLR                         81263
&B@      BASR  &CASE,0                                           93006
         LA    R15,*-&CMB                                        81263
         SLR   &CASE,R15                                         87223
         AGO   .COMBAS2                                          81263
.ELDSVLR ANOP  ,                                                 81263
&B@      BASR  R15,0                                             93006
         USING *,R15                                             81163
         AIF   ('&CASE' EQ '').NOBASE2                           87223
         L     &CASE,=A(&CMB)                                    87223
         DROP  R15                                               81163
         AGO   .COMBAS2                                          81163
.NOENTR  AIF   (&NOSAVE).OLDSVAM                                GP04050
.*WHY    USING &LAB,R15                                         GP99158
&B@      SAVEX R14,R12,&SV.14,TYPE=&YOPT,SETAM=&SETAM           GP98322
&B@      SETC  ''
.*WHY    DROP  R15                                              GP99158
         AGO   .OLDSV                                           GP04050
.OLDSVAM AIF   ('&SETAM' EQ '').OLDSV                           GP04050
         AIF   (NOT &MVSESA).OLDSV                              GP04234
         BASR  &CASE,0                                          GP04050
         USING *,&CASE                                          GP04050
         AM&SETAM WORK=&CASE                                    GP04050
         DROP  &CASE                                            GP04050
.OLDSV   AIF   ('&CASE' EQ '').NOBASE2                           87223
         AIF   ('&BREG' NE 'SET').BASREG                        GP05017
&B@      BASR  &CASE,0                                          GP05017
         LA    R15,*-&CMB                                       GP05017
         SLR   &CASE,R15                                        GP05017
         AGO   .COMBAS2                                         GP05017
.BASREG  AIF   (&CME).BASEL                                      81163
&B@      LA    &CASE,0(,R15)  REMOVE AM BIT
         AGO   .COMBAS2                                          81163
.BASEL   USING &LAB,R15                                          81163
&B@      L     &CASE,=A(&CMB)                                    87223
         DROP  R15                                               81163
.COMBAS2 ANOP  ,                                                GP02264
&K       SETA  N'&BASE                                          GP02264
         AIF   (&K LT 2).NOBASE2                                GP02264
&I       SETA  1                                                GP02264
         LA    &BASE(&K),2048                                   GP02264
.NOBASLP AIF   (&I GE &K).NOBASE2                               GP02264
&I       SETA  &I+1                                             GP02264
         AIF   ('&BASE(&I)' EQ '').NOBASLP                      GP02264
         LA    &BASE(&I),2048(&BASE(&K),&BASE(&I-1))            GP02264
&CMU     SETC  '&CMU'.','.'&BASE(&I)'                           GP02264
         AGO   .NOBASLP                                         GP02264
.NOBASE2 AIF   ('&CASE' EQ '').NOUSEB                            87223
         USING &CMB,&CMU                                         81163
.NOUSEB  AIF   (NOT &OLDSAVE).NOLDSV
.*WHY?   L     R15,&SV.13                                       GP04050
.*WHY?   ST    &CASE,&SV.15-&DSCTG.(,R15)                        87223
         AIF   ('&PARM' EQ '').NOLDSV1
         AIF   ('&PARM' EQ 'R1' OR '&PARM' EQ '1').NOLDSV1      GP04052
         AIF   (&NOSAVE).NOLDSV1                                GP04052
         L     &PARM(1),&SV.&PARMREG-&DSCTG.(,R13)              GP04050
         AGO   .NOLDSV1
.NOLDSV  AIF   (&NOSAVE).NOLDSV1
         AIF   ('&PARM' EQ '').NOPARM
         AIF   ('&PARM' EQ '1' OR '&PARM' EQ 'R1').NOPARM        87223
&MACPLAB SETC  ''                                                81154
         MACPARM &PARM(1),&PARMEXP                               81154
.*
.NOPARM  AIF   ('&SAVE' NE '*' AND NOT &ZERO).NOSTO NON-RENT/NO LENGTH
         AIF   (NOT &HWOPT).LYLEN                                84307
         L     R14,=A(&ENDG-&DSVAR)                             GP03033
         AGO   .NOLA                                             84307
.LYLEN   AIF   (NOT &BWOPT).LALEN                                84307
         LH    R14,=Y(&ENDG-&DSVAR)                             GP03033
         AGO   .NOLA
.LALEN   LA    R14,&ENDG-&DSVAR                                 GP03033
.*  NOTE THAT R14-R1 ARE USED BY STORAGE
.NOLA    ST    R14,&SV.FWD   TEMP: LEN INTO OLD SAVE AREA       GP02304
         AIF   ('&SAVE' NE '*').NOSTO                           GP03033
*        STORAGE OBTAIN,LENGTH=(R14),SP=&SP,BNDRY=&BNDRY,LOC=&LOC
         STORAGE OBTAIN,LENGTH=(R14),SP=&SP,BNDRY=&BNDRY,LOC=&LOC
         AGO   .GTSTO                                           GP03033
.NOSTO   LA    R14,&SAVE     LOAD NON-RENT SAVE AREA            GP03033
         AIF   (&ZERO).ZRSTO                                    GP03033
         XC    0(4*18,R14),0(R14)  PREVENT S978 IN EXIT         GP03033
         AGO   .SKPLEN                                          GP03033
.GTSTO   LR    R14,R1        SAVE OVER CLEAR                    GP02264
         AIF   (NOT &ZERO).UNCLEAN                              GP02264
.ZRSTO   SR    R15,R15       ZERO SOURCE LENGTH AND INSERTION   GP02264
         LR    R0,R14        SET CLEAR ADDRESS                  GP02264
         L     R1,&SV.FWD    GET SAVED LENGTH                   GP02304
         MVCL  R0,R14        CLEAR GOTTEN STORAGE               GP02264
         AIF   ('&SAVE' NE '*').SKPLEN  PREVENT S978 IN EXIT    GP03033
.UNCLEAN MVC   &SV.SPLN-&DSCTG.(4,R14),&SV.FWD  SET LENGTH FOR PGMEXIT
.SKPLEN  AIF   ('&SP' EQ '0').NOGM                               82002
         MVI   &SV.SPLN-&DSCTG.(R14),&SP  AND SUBPOOL           GP02264
.NOGM    ST    R14,&SV.FWD   MAKE FOWARD SAVE AREA LINK         GP02264
         ST    R13,&SV.13-&DSCTG.(,R14) MAKE BACKWARD LINK      GP02264
         AIF   (NOT &CPYREGS).LR13
         MVC   &SV.14-&DSCTG.(&SV.12+4-&SV.14,R14),&SV.14        81151
.LR13    LR    R13,R14       ESTABLISH NEW SAVE AREA
         AIF   (T'&ENTRY EQ 'O' OR T'&ENTNO EQ 'O').NOLDENT      88255
         L     R1,&SV.13     GET OLD SAVE AREA BACK              88255
         CLM   &CASE,7,&SV.15+1-&DSCTG.(R1)  MAIN ENTRY ?        88255
         BE    *+16          YES; DON'T MOVE                     88255
         L     R1,&SV.15-&DSCTG.(,R1) GET ENTRY ADDRESS BACK     88255
         BCTR  R1,0          SPACE TO ENTRY COUNTER              88255
         MVC   &ENTNO+L'&ENTNO-1(1),0(R1) COPY COUNT             88255
.NOLDSV1 ANOP  ,       TRY IT HERE                              GP03033
.NOLDENT AIF   ('&PARM' NE '1' AND '&PARM' NE 'R1').NOPARM1      87223
         AIF   (&NOSAVE OR &OLDSAVE).NOPARM1                    GP04052
         L     R1,&SV.13     OLD SAVE AREA                       87223
         LM    R0,R1,&SV.0-&DSCTG.(R1)  RESTORE ENTRY REGISTERS  94272
.NOPARM1 AIF   (&NOT1ST).END
         AIF   (&DSOPT OR &NOSAVE).DSOPT                        GP04050
&DSCTG   DSECT ,                                                GP04051
&SV.SPLN DS    F
&SV.13   DS    F
&SV.FWD  DS    A
&SV.14   DS    A
&SV.15   DS    A
&SV.0    DS    A
&SV.1    DS    A
&SV.2    DS    A
&SV.3    DS    A
&SV.4    DS    A
&SV.5    DS    A
&SV.6    DS    A
&SV.7    DS    A
&SV.8    DS    A
&SV.9    DS    A
&SV.10   DS    A
&SV.11   DS    A
&SV.12   DS    A
&SV.FWK  EQU   *                                                 94272
         AIF   (NOT &NWOPT).NOEND
&ENDG    EQU   *
.NOEND   AIF   ('&CSECT' NE 'RSECT').NOENDC
&SECT    RSECT ,
         AGO   .DSOPT
.NOENDC  ANOP  ,
&SECT    CSECT ,
.DSOPT   AIF   (&EQUOPT OR &MAPONCE OR &SAV@REG).END
&MAPONCE SETB  1
&SAV@REG SETB  1
         AIF   (&NOREG).SKPYREG  AVOID JES2 MAPPING CONFLICT    GP04115
         YREGS ,
.SKPYREG MASKEQU ,                                               87223
.END     AIF   ('&SAVE' EQ '*' OR &NOSAVE).MEND                 GP04051
&SAVTYPE SETC  'OLD'         PREVENT STORAGE RELEASE IN PGMEXIT GP04051
 MNOTE *,'SAVE IS &SAVE'
 MNOTE *,'SAVTYPE IS &SAVTYPE'
.MEND    MEND  ,                                                GP04051
