         MACRO ,                                         NEW ON GP08079
&NM      XMSG  &MID,&TYPE=MSG,   FORMAT A MESSAGE FOR WTO OR PRT       *
               &LIST=,&PARM=,&ERRET=  MSG WITH TEXT INSERTION
         GBLC  &MACPLAB,&ZZXMWRK
         GBLA  &MACP#        NUMBER OF (SUB)LIST ARGUMENTS
         GBLC  &MACP1,&MACP2,&MACP3,&MACP4,&MACP5
         GBLC  &MACP6,&MACP7,&MACP8,&MACP9,&MACP10
         LCLA  &K,&I,&J,&N,&M,&O
         LCLB  &TF
         LCLC  &RA,&RL,&RT,&L  DEFINE ADDRESS AND LENGTH REGISTERS
         LCLC  &TYPA(23),&TYVL(23)
         LCLC  &LIT          SPECIAL HANDLING FOR LITERAL OPERANDS
&RA      SETC  'R1'          SET NORMAL USE
&RL      SETC  'R0'
&L       SETC  'L'''
&MACPLAB SETC  '&NM'         SET NAME FIELD
         AIF   ('&PARM' EQ '').DEFPARM
&ZZXMWRK SETC  '&PARM'       SET NEW WORK AREA
.DEFPARM AIF   ('&ZZXMWRK' NE '').USEPARM
&ZZXMWRK SETC  'XMSGMGPM'    USE DEFAULT MDEFPARM NAME
.USEPARM ANOP  ,
.*--------------------------------------------------------------------*
.*                                                                    *
.*  XMSG GENERATES A CALL TO MESSAGE FORMATTING/DEFINITION PROGRAM    *
.*  EXHMGxxx PREVIOUSLY LOADED AND STORED IN XMSGMGPM(1)              *
.*                                                                    *
.*   name XMSG  modname,LIST=(buffer,buflen),TYPE=INIT                *
.*      LOADS THE MESSAGE MODULE, AND SETS THE BUFFER INFORMATION     *
.*                                                                    *
.*   name XMSG  modname,TYPE=CLOSE                                    *
.*      FREES THE MESSAGE MODULE                                      *
.*                                                                    *
.*   name XMSG  mid,LIST=(addr,'text',(addr,len),(addr,len,type)...)  *
.*                                                                    *
.*  mid  SPECIFIES THE MESSAGE ID:                                    *
.*    A) AS A LITERAL                                                 *
.*    B) ADDRESS OF A TEXT STRING OF LENGTH 8                         *
.*                                                                    *
.*  TYPE=END (OR A TEXT SPECIFICATION OF *END) REQUESTS PROGRAM       *
.*    TO CLEAN UP AND RELEASE STORAGE                                 *
.*                                                                    *
.*  TYPE=TEXT (DEFAULT) BYPASSES THE WTO, BUT RETURNS THE MESSAGE     *
.*    ADDRESS: H'LEN,0',CL(LEN)'TEXT' USABLE IN WTO OR PRTV           *
.*  TYPE=MSG  SPECIFIES A MESSAGE TO BE WRITTEN TO THE OPERATOR       *
.*                                                                    *
.*    LIST OPERANDS SPECIFY TEXT TO BE INSERTED INTO THE MESSAGE      *
.*    AS DEFINED. AN OMITTED LENGTH FIELD (FOR NON-LITERAL) EXPANDS   *
.*    AS L'addr.                                                      *
.*    TYPE OPERANDS DEFAULT TO THOSE IN THE MESSAGE DEFINITION, OR    *
.*      CHARACTER STRING IF NOT DEFINED THERE, EITHER.                *
.*    VALID ARE: C or T FOR CHARACTER TEXT; A FOR ADDRESS (HEX);      *
.*      I or INT FOR INTEGERS; P, D, OR PD FOR PACKED DECIMAL;        *
.*      H, X, or HEX FOR HEXADECIMAL; B or BIN FOR BINARY/BIT         *
.*                                                                    *
.*  PARM=mdefparm DEFINES A REMOTE PARAMETER LIST TO BE USED (SEE     *
.*    EXPANSION OF MDEFPARM FOR FORMAT.                               *
.*                                                                    *
.*                                                                    *
.*--------------------------------------------------------------------*
&N       SETA  N'&LIST
&TYPA(01) SETC 'C'           CHARACTER STRING
&TYPA(02) SETC 'CHAR'
&TYPA(03) SETC 'T'           TEXT STRING
&TYPA(04) SETC 'TEXT'
&TYPA(05) SETC '@'           ADDRESS
&TYPA(06) SETC 'A'
&TYPA(07) SETC 'ADDR'
&TYPA(08) SETC 'P'           PACKED DECIMAL
&TYPA(09) SETC 'D'
&TYPA(10) SETC 'PD'
&TYPA(11) SETC 'DEC'
&TYPA(12) SETC 'UP'          UNSIGNED (ABSOLUTE) PD
&TYPA(13) SETC 'UD'
&TYPA(14) SETC 'UPD'
&TYPA(15) SETC 'I'           INTEGER
&TYPA(16) SETC 'INT'
&TYPA(17) SETC 'UI'          UNSIGNED / ABSOLUTE INT
&TYPA(18) SETC 'AI'
&TYPA(19) SETC 'H'           HEXADECIMAL
&TYPA(20) SETC 'X'
&TYPA(21) SETC 'HEX'
&TYPA(22) SETC 'B'           BIT STRING
&TYPA(23) SETC 'BIN'
&TYVL(01) SETC '1'
&TYVL(02) SETC '1'
&TYVL(03) SETC '1'
&TYVL(04) SETC '1'
&TYVL(05) SETC '2'
&TYVL(06) SETC '2'
&TYVL(07) SETC '2'
&TYVL(08) SETC '3'
&TYVL(09) SETC '3'
&TYVL(10) SETC '3'
&TYVL(11) SETC '3'
&TYVL(12) SETC '4'
&TYVL(13) SETC '4'
&TYVL(14) SETC '4'
&TYVL(15) SETC '5'
&TYVL(16) SETC '5'
&TYVL(17) SETC '6'
&TYVL(18) SETC '6'
&TYVL(19) SETC '8'
&TYVL(20) SETC '8'
&TYVL(21) SETC '8'
&TYVL(22) SETC '9'
&TYVL(23) SETC '9'
         AIF   ('&MID' EQ '*END').CLOSE
         AIF   ('&TYPE' EQ 'CLOSE' OR '&TYPE' EQ 'END').CLOSE
         AIF   ('&TYPE' NE 'INIT' AND '&TYPE' NE 'NAME').DOMSG
         AIF   ('&MID' EQ '').NOMOD  LET IT FAIL
&LIT     SETC  '&MID'
         AIF   ('&MID'(1,1) NE '''').NOMOD
&LIT     SETC  '=CL8'.'&LIT'
         MACPARM R0,&LIT,OP=LA  LOAD ADDRESS OF MODULE NAME
         AGO   .GOMOD
.NOMOD   MACPARM R0,&LIT,OP=LA  LOAD ADDRESS OF MODULE NAME
.GOMOD   ANOP  ,
&MACPLAB LOAD  EPLOC=(0),ERRET=&ERRET  LOAD; OPTIONAL RECOVERY
&MACPLAB SETC  ''
         MACPARM R0,&ZZXMWRK,OP=ST   SAVE THE MODULE ADDRESS
         AIF   (&N EQ 0).DFLTMA                                 GP13237
.USERMA  MACPARM R0,&LIST(1),NULL=XMSGMSG-XMSGADD+&ZZXMWRK      GP13237
         MACPARM R1,&LIST(2),NULL=&L.&LIST(1)                   GP13237
         AGO   .SAVEMA                                          GP13237
.DFLTMA  MACPARM R0,&LIST(1),NULL=XMSGMSG-XMSGADD+&ZZXMWRK
         MACPARM R1,&LIST(2),NULL=&L.XMSGMSG
.SAVEMA  MACPARM R0,R1,XMSGBUF-XMSGADD+&ZZXMWRK,MODE=THREE,OP=STM
.DONEIN  MEXIT ,
.CLOSE   MACPARM &ZZXMWRK.(4),&ZZXMWRK,OP=XC  CLEAR THE ADDRESS
         AIF   ('&MID' EQ '').DONEND
&LIT     SETC  '&MID'
         AIF   ('&MID'(1,1) NE '''').NODEL
&LIT     SETC  '=CL8'.'&LIT'
         MACPARM R0,&LIT,OP=LA  LOAD MESSAGE ADDRESS
         AGO   .GODEL
.NODEL   MACPARM R0,&LIT,OP=LA  LOAD MESSAGE ADDRESS
.GODEL   DELETE EPLOC=(0)    DELETE MESSAGE MODULE
.DONEND  MEXIT ,
.*--------------------------------------------------------------------*
.*  PROCESS A MESSAGE LIST (TEXT/LEN OPTIONAL DEPENDING ON MESSAGE)   *
.*--------------------------------------------------------------------*
.DOMSG   MACPARM R1,&ZZXMWRK LOAD CALLING AREA ADDRESS
         AIF   ('&MID' EQ '').NOMID  LET IT FAIL
&LIT     SETC  '&MID'
         AIF   ('&MID'(1,1) EQ '=').HAVLIT                      GP15347
         AIF   ('&MID'(1,1) NE '''').NOMID
&LIT     SETC  '=CL8'.'&LIT'
.HAVLIT  MACPARM R15,&LIT,OP=LA  LOAD MESSAGE ADDRESS
         AGO   .GOMID
.NOMID   MACPARM R15,&LIT,OP=L   LOAD MESSAGE ADDRESS
.GOMID   MACPARM XMSGMID-XMSGMGPM(L'XMSGMID,R1),0(R15),OP=MVC MOVE TEXT
&TF      SETB   (NOT ('&TYPE' EQ 'MSG'))
         MACPARM R0,&TF      SET FLAG (0-WTO; 1-NO WTO,RETURN MSG ADD)
         AIF   (&N EQ 0).GOMSG
&O       SETA    20          OFFSET IN GENERATED LIST
&M       SETA    1           OFFSET IN LIST=
.*--------------------------------------------------------------------*
.*  CASE 2  - LOOP THROUGH SUPPLIED ADDRESS/LEN PAIRS AND STASH       *
.*--------------------------------------------------------------------*
.LSTADD  AIF   (&M GT &N).LSTEND  DONE - SET VL BIT IN LIST
&K       SETA  0             TYPE NOT NEEDED
         MACLIST &LIST(&M)   GET SUBLIST ITEMS                  GP13237
&RA      SETC  '&MACP1'
&RL      SETC  '&MACP2'
         AIF   ('&RA' NE '').HAVERA
&RA      SETC  '0'           NULL ADDRESS - NO SUBSTITUTION
.HAVERA  AIF   ('&RL' NE '').HAVERL
&RL      SETC  '0'           NULL ADDRESS - NO SUBSTITUTION
.*--------------------------------------------------------------------*
.*  CASE 2A - EXPLICIT TEXT/LEN SUPPLIED                              *
.*--------------------------------------------------------------------*
.HAVERL  AIF   ('&RA'(1,1) EQ '''').ENTRNG
         MACPARM R15,&RA,OP=LA LOAD ADDRESS OF NAME OR REGISTER
         MACPARM R15,&O.(,R1),OP=ST STORE ADDRESS IN CALL LIST
         AIF   ('&MACP2' NE '').GOODRL
         AIF   ('&MACP1' EQ '').GOODRL
         MACPARM R15,&L&MACP1   USE DEFAULT LENGTH
         AGO   .COMMRL
.GOODRL  MACPARM R15,&RL,NULL=0   SET EXPLICIT LENGTH OR 0
.COMMRL  MACPARM R15,&O+4(,R1),OP=STH STORE LENGTH IN CALL LIST
         AIF   ('&MACP3' EQ '').COMMK0
&I       SETA  1
.TYLOOP  AIF   ('&MACP3' EQ '&TYPA(&I)').SETK0
&I       SETA  &I+1
         AIF   (&I LE 23).TYLOOP
 MNOTE 8,'XMSG: TYPE &MACP3 NOT RECOGNIZED, IGNORED'
         AGO   .COMMK0
.SETK0   ANOP  ,
&K       SETA  &TYVL(&I)
         AIF   (&K EQ 0).COMMK0
         MACPARM &O+4(R1),&K,OP=MVI   SET PARM TYPE
.COMMK0  ANOP  ,
&O       SETA   &O+6         NEXT AVAILABLE LIST OFFSET
&M       SETA   &M+1
         AGO   .LSTADD
.*--------------------------------------------------------------------*
.*  CASE 2B - EXPLICIT QUOTED TEXT SUPPLIED                           *
.*--------------------------------------------------------------------*
.ENTRNG  ANOP  ,
&K       SETA  K'&RA-2       LENGTH OF QUOTED STRING (EXC AMPSND/QOT)
&I       SETA  2             FIRST BYTE TO EXAMINE
&J       SETA  &K            LAST BYTE (PAIR) TO EXAMINE
.ENTLOOP AIF   (&I GT &J).ENTEXP
         AIF   ('&RA'(&I,2) EQ '''''' OR '&RA'(&I,2) EQ '&&').ENDPR
&I       SETA  &I+1          TRY AGAIN
         AGO   .ENTLOOP
.ENDPR   ANOP  ,
&I       SETA  &I+2          SKIP THE PAIR
&K       SETA  &K-1          AND CORRECT THE LENGTH
         AGO   .ENTLOOP
.ENTEXP  LA    R15,=C&RA     LOAD THE STRING ADDRESS
         MACPARM R15,&O.(,R1),OP=ST STORE ADDRESS IN CALL LIST
         MACPARM R15,&K+256,OP=LA LOAD THE LENGTH OF THE STRING / TYPE
         MACPARM R15,&O+4(,R1),OP=STH STORE LENGTH IN CALL LIST
&O       SETA   &O+6         NEXT AVAILABLE LIST OFFSET
&M       SETA   &M+1
         AGO   .LSTADD
.LSTEND  ANOP  ,
&O       SETA  &O-6          POSITION TO LAST WORD IN LIST
         MACPARM &O.(R1),X'80',OP=OI
         AGO   .COMBAS  DONE - INVOKE SUBWTO
.GOMSG   MACPARM 20(16,R1),20(R1),OP=XC
         OI    20(R1),X'80'  EMPTY LIST
.*--------------------------------------------------------------------*
.*  LOAD R0 AND R1 APPROPRIATELY; CALL MESSAGE ROUTINE                *
.*--------------------------------------------------------------------*
.COMBAS  MACPARM R15,&ZZXMWRK,OP=L   MODE ADDRESS IN LIST
         BASR  R14,R15       INVOKE IT
         MEND  ,
