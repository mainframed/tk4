         MACRO ,
&L       SAVEM &DUMMY,&PFX=SAVE,&END=,&ENDZERO=,&DSECT=,&PARM=R11,     *
               &SAVE=*,                                          81208 *
               &BASE=R12,&BASE2=,&BASE3=,&BASE4=,&BASED=*,             *
               &EID=SHORT,&ENTRY=,&ENTNO=,                             *
               &RIGHT=,                                                *
               &ID=*,&DATE=,&SP=0,&BNDRY=                        82002
.**********************************************************************
.*
.*             COPYRIGHT 1978 BY SHMUEL (SEYMOUR J.) METZ
.*                        ALL RIGHTS RESERVED.
.*
.*             THIS MACRO IS NOT TO BE DISTRIBUTED WITHOUT PERMISSION,
.*             AS DESCRIBED IN MEMBER $$RIGHTS.
.*
.*       FOR SIMPLE ENTRIES, PARM=R1 NOW RELOADS R0 AND R1       87223
.*       BASE=(B1,B2,B3,B4) SUPPORT ADDED (EASIER TO USE?)       87223
.*                                                               87223
.**********************************************************************
         COPY  OPTIONGB
         GBLB  &DROP@1                                           81163
         GBLB  &MAPONCE
         GBLB  &SAV@REG
         GBLB  &SAV@DYN(10)
         GBLC  &SAV@NAM(10)
         GBLC  &MACPLAB                                          81154
         GBLC  &SYSSPLV      VERSION OF SP (1, 2...)             93174
         LCLA  &I,&J,&N,&NUMENT
         LCLB  &BWOPT,&Y           BIGWORK  OPTION
         LCLB  &HWOPT              HUGEWORK OPTION ( > 32767 )   84307
         LCLB  &CME                BASED/ENTRY PRESENT           81163
         LCLB  &CPYREGS            CPYREGS  OPTION
         LCLB  &DSOPT              NODSECT  OPTION
         LCLB  &EQUOPT             NOEQU    OPTION
         LCLB  &NOENTRY            NOENTRY  OPTION
         LCLB  &NOSAVE             NOSAVE   OPTION
         LCLB  &NWOPT              NOWORK   OPTION
         LCLB  &OLDSAVE            OLDSAVE  OPTION
         LCLB  &BUMASM             ASM DOESN'T SUPPORT LONG SETC
         LCLB  &BZOPT              ZERO > 256
         LCLB  &NOT1ST             NOT FIRST USE OF &PFX
         LCLB  &ZERO               ZERO     OPTION
         LCLB  &ZERO8              ZERO     <= 256               81202
         LCLB  &ZERO12             ZERO     >  256               81202
         LCLB  &ZERO15             ZERO     > 4095               81208
         LCLB  &ZERO31             ZERO     > 32767              84307
         LCLC  &B@                 GENERATED LABEL FOR B TARGET
         LCLC  &CMB                COMMON BASE NAME              81163
         LCLC  &CMU                BASE REG. STRING FOR USING    81163
         LCLC  &C9                 TEST FOR LONG SETC SUPPORT
         LCLC  &DSCTG              DSECT NAME                    81208
         LCLC  &ENDG               END LABEL FOR GETMAINED AREA  81208
         LCLC  &ENDZ               END OF ZEROED AREA            81208
         LCLC  &LAB                LABEL FOR ENTRY POINT
         LCLC  &LQ                 L'
         LCLC  &N@                 GENERATED NAME FOR DC
         LCLC  &SECT               CSECT NAME
         LCLC  &SP@                SUBPOOL FOR GETMAIN
         LCLC  &NAME               NAME FOR CONSTRUCTED ID
         LCLC  &SV                 SAVE AREA PREFIX              81208
         LCLC  &BEGZ         WHERE TO START ZEROING (FWD DEFAULT)
         LCLC  &PARMEXP
         LCLC  &PARMREG
         LCLC  &CASE,&CASE2,&CASE3,&CASE4   LOCAL BASES          87223
       SYSPARM ,                   SET GLOBALS
&C9      SETC  '*********'
&SECT    SETC  '&SYSECT'
&SV      SETC  '&PFX'
&DSCTG   SETC  '&PFX'
&ENDG    SETC  '&PFX'.'ND'
&BEGZ    SETC  '&PFX'.'FWD'        ZERO BEGINNING AT FWD LINK    94272
.*
         AIF   ('&C9' EQ '*********').ASMVS
         MNOTE 4,'USE THE OS/VS-DOS/VS-CMS ASSEMBLER,'
         MNOTE 4,'OR USE ASMG WITH LSETC=80'
&BUMASM  SETB  1
.*
.ASMVS   AIF   ('&DSECT' EQ '').DSGOK
&DSCTG   SETC  '&DSECT'
.DSGOK   AIF   ('&END' EQ '').ENDGOK
&ENDG    SETC  '&END'
.ENDGOK  ANOP
.*
&N       SETA  1
.NXTSLOT ANOP
&NOT1ST  SETB  (&NOT1ST OR ('&PFX' EQ '&SAV@NAM(&N)'))
         AIF   (&NOT1ST).FND1ST
         AIF   ('&SAV@NAM(&N)' EQ '').FNDSLOT
&N       SETA  &N+1
         AIF   (&N LE 10).NXTSLOT
         MNOTE 12,'TOO MANY SAVEM DSECTS'
         MEXIT
.FNDSLOT ANOP
&SAV@NAM(&N) SETC '&PFX'
.*
.FND1ST  AIF   ('&SYSECT' EQ '' AND T'&L EQ 'O').NOL
&I       SETA  1
         AIF   (N'&SYSLIST EQ 0).ENDOPT
.*
.LOOP    AIF   ('&SYSLIST(&I)' EQ 'CPYREGS').CPYREGS
         AIF   ('&SYSLIST(&I)' EQ 'COPYREGS').CPYREGS            81154
         AIF   ('&SYSLIST(&I)' EQ 'COPYREGISTERS').CPYREGS
         AIF   ('&SYSLIST(&I)' EQ 'NODSECT').NODSECT
         AIF   ('&SYSLIST(&I)' EQ 'NOEQU').NOEQU
         AIF   ('&SYSLIST(&I)' EQ 'BIGWORK').BIGWORK
         AIF   ('&SYSLIST(&I)' EQ 'HUGEWORK').HUGWORK            84307
         AIF   ('&SYSLIST(&I)' EQ 'BIGZERO').BIGZERO
         AIF   ('&SYSLIST(&I)' EQ 'HUGEZERO').ZERO31             84307
         AIF   ('&SYSLIST(&I)' EQ 'NOWORK').NOWORK
         AIF   ('&SYSLIST(&I)' EQ 'NOSAVE').NOSAVE1
         AIF   ('&SYSLIST(&I)' EQ 'OLDSAVE').OLDSAVE
         AIF   ('&SYSLIST(&I)' EQ 'NOENTRY').NOENTRY
         AIF   ('&SYSLIST(&I)' EQ 'ZERO').ZERO
         AIF   ('&SYSLIST(&I)' EQ 'ZERO8').ZERO8                 81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO12').ZERO12               81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO15').ZERO15               81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO31').ZERO31               84307
         AIF   ('&SYSLIST(&I)' EQ '').NXTOPT
         MNOTE 4,'''&SYSLIST(&I)'' IS AN INVALID OPTION - IGNORED'
         AGO   .NXTOPT
.*
.NOL     MNOTE 12,'LABEL REQUIRED IF  NO  CSECT'
         MEXIT
.*
.CPYREGS ANOP
&CPYREGS SETB  1
         AGO   .NXTOPT
.NODSECT ANOP
&DSOPT   SETB  1
         AGO   .NXTOPT
.NOEQU   ANOP
&EQUOPT  SETB  1
         AGO   .NXTOPT
.HUGWORK ANOP  ,                                                 84307
&HWOPT   SETB  1             SET FOR HUGE WORK AREA              84307
.BIGWORK ANOP
&BWOPT   SETB  1
&BZOPT   SETB  1
         AGO   .NXTOPT
.NOWORK  ANOP
&NWOPT   SETB  1
         AGO   .NXTOPT
.NOSAVE1 ANOP
&NOSAVE  SETB  1
         AGO   .NXTOPT
.OLDSAVE ANOP
&OLDSAVE SETB  1
         AGO   .NXTOPT
.NOENTRY ANOP
&NOENTRY SETB  1
         AGO   .NXTOPT
.*                                                               81208
.ZERO8   ANOP  ,                                                 81208
&ZERO8   SETB  1                                                 81208
         AGO   .ZERO                                             81208
.ZERO12  ANOP  ,                                                 81208
&ZERO12  SETB  1                                                 81218
         AGO   .ZERO                                             81208
.ZERO31  ANOP  ,                                                 84307
&HWOPT   SETB  1             HUGE WORK AREA > 32767              84307
&ZERO31  SETB  1                                                 84307
.ZERO15  ANOP  ,                                                 81208
&ZERO15  SETB  1                                                 81208
&BWOPT   SETB  1                                                 81218
         AGO   .ZERO                                             81208
.BIGZERO ANOP
&BZOPT   SETB  1                                                 81202
.ZERO    ANOP
&ZERO    SETB  1
.NXTOPT  ANOP
&I       SETA  &I+1
         AIF   (&I LE N'&SYSLIST).LOOP
.ENDOPT  AIF   (&ZERO8 OR &ZERO12 OR &ZERO15).GOTZERO            81208
&ZERO31  SETB  (&ZERO AND &HWOPT)                                84307
&ZERO15  SETB  (&ZERO AND &BWOPT)                                81208
&ZERO12  SETB  (&BZOPT AND NOT &ZERO15)                          81208
&ZERO8   SETB  (&ZERO AND NOT &ZERO12 AND NOT &ZERO15)           81202
.GOTZERO AIF   (T'&L EQ 'O').CSECTOK                             81208
         AIF   ('&SYSECT' EQ '' OR '&L' EQ '&SYSECT').LABOK      81202
&LAB     SETC  '&L'
         AIF   (&NOENTRY).LABOK
         ENTRY &L
.LABOK   AIF   ('&SYSECT' NE '').CSECTOK
.*
&L       CSECT
&SECT    SETC  '&L'
.CSECTOK AIF   (T'&BASED EQ 'O' AND T'&ENTRY EQ 'O').NOCLAB      81163
         AIF   (T'&ENTRY NE 'O').DOCLAB                          81163
         AIF   ('&BASED' EQ '*').NOCLAB                          81163
.DOCLAB  ANOP  ,                                                 81163
&CME     SETB  1             SET SPECIAL BASE PROCESSING         81163
.NOCLAB  AIF   ('&LAB' NE '').OKCLAB                             81163
&LAB     SETC  'A@&SYSNDX'                                       81163
.OKCLAB  ANOP  ,                                                 81163
&CMB     SETC  '&LAB'        DEFAULT BASED VALUE                 81163
         AIF   (T'&BASED EQ 'O').CLABOK                          81163
         AIF   ('&BASED' EQ '*').CLABOK                          81163
         AIF   ('&BASED' NE '*SYSECT').CLABSET                   81163
         AIF   ('&SYSECT' EQ '').CLABOK   BOO                    81163
&CMB     SETC  '&SYSECT'                                         81163
         AGO   .CLABOK                                           81163
.CLABSET ANOP  ,                                                 81163
&CMB     SETC  '&BASED'                                          81163
.CLABOK  ANOP  ,                                                 81163
&CMU     SETC  'R15'         DEFAULT BASE REGISTER ON USING      81163
&SAV@DYN(&N) SETB (NOT &NOSAVE)
&PARMEXP SETC  '(R1)'
&PARMREG SETC  '1'
         AIF   ('&PARM' EQ '').PARM1
         AIF   (N'&PARM LT 2).PARM1
&PARMEXP SETC  '&PARM(2)'
         AIF   (NOT &OLDSAVE).PARM1
&PARMREG SETC  '&PARM(2)'
         AIF   ('&PARMEXP'(1,1) EQ '(').STRIP
         MNOTE 8,'PARM=&PARM INVALID'
         MNOTE 8,'PARM=(&PARM(1),(&PARM(2)) ASSUMED'
         AGO   .STRIPT
.STRIP   AIF   ('&PARMEXP'(K'&PARMEXP,1) EQ ')').STRIP1
         MNOTE 12,'PARM=&PARM INVALID'
         MEXIT ,
.STRIP1  ANOP  ,
&PARMREG SETC  '&PARMREG'(2,K'&PARMREG-2)
.STRIPT  AIF   ('&PARMREG'(1,1) GE '0').PARM1
&PARMREG SETC  '&PARMREG'(2,K'&PARMREG-1)
.PARM1   AIF   (NOT &DROP@1).NODROP                              81163
         DROP  ,                                                 81163
.NODROP  ANOP  ,                                                 81163
&DROP@1  SETB  1                                                 81163
         AIF   (T'&BASE EQ 'O').OLDBASE                          87223
         AIF   (N'&BASE LT 2).OLDBASE                            87223
 AIF (T'&BASE2 EQ 'O' AND T'&BASE3 EQ 'O' AND T'&BASE4 EQ 'O').NEWBASE
         MNOTE 8,'CONFLICTING SPECIFICATION: BASE=(.,.) AND BASEn='
.NEWBASE ANOP  ,                                                 87223
&CASE    SETC  '&BASE(1)'                                        87223
&CASE2   SETC  '&BASE(2)'                                        87223
&CASE3   SETC  '&BASE(3)'                                        87223
&CASE4   SETC  '&BASE(4)'                                        87223
         AIF   (N'&BASE LT 5).COMBASE                            87223
         MNOTE 0,'ONLY FOUR BASES SUPPORTED'                     87223
         AGO   .COMBASE      BOMB ON ADDRESSABILITY ?            87223
.OLDBASE ANOP  ,                                                 87223
&CASE    SETC  '&BASE(1)'                                        87223
&CASE2   SETC  '&BASE2'                                          87223
&CASE3   SETC  '&BASE3'                                          87223
&CASE4   SETC  '&BASE4'                                          87223
.COMBASE AIF   ('&CASE4' NE '').FORBASE                          87223
         AIF   ('&CASE3' NE '').THRBASE                          87223
         AIF   ('&CASE2' NE '').TWOBASE                          87223
         AIF   ('&CASE' NE '').ONEBASE                           87223
.NOBASE  AIF   (T'&ENTRY NE 'O').NOBASEU                         81163
         DS    0H
         USING *,R15                                             81163
.NOBASEU ANOP  ,                                                 81163
&CMU     SETC  'R15'                                             81163
         AGO   .BASED
.FORBASE AIF   ('&CASE3' EQ '').GAP43                            87223
         AIF   ('&CASE2' EQ '').GAP42                            87223
         AIF   ('&CASE' EQ '').GAP41                             87223
&CMU     SETC  '&CASE'.','.'&CASE2'.','.'&CASE3'.','.'&CASE4'    87223
         AGO   .BASED
.GAP43   MNOTE 12,'BASE3 REQUIRED WHEN BASE4 SPECIFIED'
         AIF   ('&CASE2' NE '').GAP41T                           87223
.GAP42   MNOTE 12,'BASE2 REQUIRED WHEN BASE4 SPECIFIED'
.GAP41T  AIF   ('&CASE' NE '').NOBASE                            87223
.GAP41   MNOTE 12,'BASE REQUIRED WHEN BASE4 SPECIFIED'
         AGO   .NOBASE
.THRBASE AIF   ('&CASE2' EQ '').GAP32                            87223
         AIF   ('&CASE' EQ '').GAP31                             87223
&CMU     SETC  '&CASE'.','.'&CASE2'.','.'&CASE3'                 87223
         AGO   .BASED
.GAP32   MNOTE 12,'BASE2 REQUIRED WHEN BASE3 SPECIFIED'
         AIF   ('&CASE' NE '').NOBASE                            87223
.GAP31   MNOTE 12,'BASE REQUIRED WHEN BASE3 SPECIFIED'
         AGO   .NOBASE
.TWOBASE AIF   ('&CASE' EQ '').GAP21                             87223
&CMU     SETC  '&CASE'.','.'&CASE2'                              87223
         AGO   .BASED
.GAP21   MNOTE 12,'BASE REQUIRED WHEN BASE2 SPECIFIED'
         AGO   .NOBASE
.ONEBASE ANOP  ,                                                 81163
&CMU     SETC  '&CASE'                                           87223
.BASED   USING &DSCTG,R13
&B@      SETC  'B@&SYSNDX'
&N@      SETC  'N@&SYSNDX'
&LQ      SETC  'L'''
&LAB     B     &B@-*(,R15)
         DC    AL1(&LQ&N@)
         AIF   ('&ID' NE '*').USEID
&NAME    SETC  '&L'
         AIF   (T'&L NE 'O').USENAME
&NAME    SETC  '&SYSECT'
.USENAME AIF   ('&RIGHT' EQ '').NORIGHT
&NAME    SETC  '&NAME'.' '.'COPYRIGHT '.'&RIGHT'
.NORIGHT AIF   ('&DATE' EQ 'NO' OR &BUMASM).NODATE
&N@      DC    C'&NAME - &SYSDATE - &SYSTIME'
         AGO   .NAMEOK
.NODATE  ANOP
&N@      DC    C'&NAME'
         AGO   .NAMEOK
.USEID   ANOP
         AIF   ('&ID'(1,1) NE '''').USEIDQ
&N@      DC    C&ID
         AGO   .NAMEOK
.USEIDQ  ANOP
&N@      DC    C'&ID'
.NAMEOK  AIF   (T'&ENTRY EQ 'O').NOENTR                          81163
&I       SETA  0                                                 81163
&J       SETA  N'&ENTRY                                          81163
&N@      SETC  ''            SHORT ID                            81163
         AIF   ('&EID' EQ 'SHORT').ENTRSH                        81163
&N@      SETC  ' - '.'&SYSDATE'.' - '.'&SYSTIME'                 81163
.ENTRSH  AIF   (&I GE &J).ENTRDN                                 81163
&I       SETA  &I+1                                              81163
&C9      SETC  '&ENTRY(&I)'                                      81163
         AIF   (&NOENTRY).ENTRNN                                 81347
         ENTRY &C9                                               81163
.ENTRNN  AIF   (T'&ENTNO EQ 'O').ENTRNM                          88255
&NUMENT  SETA  &NUMENT+1     INCREASE ENTRY NUMBER               88255
         DC    Y(&NUMENT)    MAKE ENTRY PREFIX                   88255
.ENTRNM  ANOP  ,                                                 88255
&C9      B     &B@-*(,R15)                                       81163
         AIF   ('&EID' EQ 'NONE' OR '&EID' EQ 'NO').ENTRSH      GP99062
&N       SETA  K'&N@+K'&C9                                       81163
&N       SETA  ((&N/2)*2)+1  MAKE ODD LENGTH FOR ALIGNMENT       81163
         DC    AL1(&N),CL(&N)'&ENTRY(&I)&N@'                     81163
         AGO   .ENTRSH                                           81163
.ENTRDN  AIF   (T'&ENTNO EQ 'O').ENTRDM                          88255
         DC    Y(0)          SET ENTRY PREFIX =0 (MAIN)          88255
.ENTRDM  AIF   (&OLDSAVE).ELDSV                                  81163
&B@      SAVEX R14,R12,&SV.14,TYPE=STM                           81203
&B@      SETC  ''                                                81163
.ELDSV   AIF   ('&CASE' EQ '').ELDSVLR                           87223
         AIF   ('&BASED' NE '*').ELDSVLR                         81263
&B@      BASR  &CASE,0                                           93006
         LA    R15,*-&CMB                                        81263
         SLR   &CASE,R15                                         87223
         AGO   .COMBAS2                                          81263
.ELDSVLR ANOP  ,                                                 81263
&B@      BASR  R15,0                                             93006
         USING *,R15                                             81163
         AIF   ('&CASE' EQ '').NOBASE2                           87223
         L     &CASE,=A(&CMB)                                    87223
         DROP  R15                                               81163
         AGO   .COMBAS2                                          81163
.NOENTR  AIF   (&OLDSAVE).OLDSV                                  81163
&B@      SAVEX R14,R12,&SV.14,TYPE=STM                           81203
&B@      SETC  ''
.OLDSV   AIF   ('&CASE' EQ '').NOBASE2                           87223
         AIF   (&CME).BASEL                                      81163
&B@      LR    &CASE,R15                                         87223
         AGO   .COMBAS2                                          81163
.BASEL   USING &LAB,R15                                          81163
&B@      L     &CASE,=A(&CMB)                                    87223
         DROP  R15                                               81163
.COMBAS2 AIF   ('&CASE2' EQ '').NOBASE2                          87223
         AIF   ('&CASE3' EQ '').NOBASE3                          87223
         AIF   ('&CASE4' EQ '').NOBASE4                          87223
         LA    &CASE4,2048                                       87223
         LA    &CASE2,2048(&CASE4,&CASE)                         87223
         LA    &CASE3,2048(&CASE4,&CASE2)                        87223
         LA    &CASE4,2048(&CASE4,&CASE3)                        87223
         AGO   .NOBASE2
.NOBASE4 LA    &CASE3,2048                                       87223
         LA    &CASE2,2048(&CASE3,&CASE)
         LA    &CASE3,2048(&CASE3,&CASE2)                        87223
         AGO   .NOBASE2
.NOBASE3 LA    &CASE2,4095                                       87223
         LA    &CASE2,1(&CASE2,&CASE)                            87223
.NOBASE2 AIF   (NOT &OLDSAVE).NOLDSV
         L     R15,&SV.13
         ST    &CASE,&SV.15-&DSCTG.(,R15)                        87223
         AIF   ('&PARM' EQ '').NOLDSV1
         L     &PARM(1),&SV.&PARMREG-&DSCTG.(,R15)
         AGO   .NOLDSV1
.NOLDSV  AIF   (&NOSAVE).NOLDSV1
         AIF   ('&PARM' EQ '').NOPARM
         AIF   ('&PARM' EQ '1' OR '&PARM' EQ 'R1').NOPARM        87223
&MACPLAB SETC  ''                                                81154
         MACPARM &PARM(1),&PARMEXP                               81154
.*
.NOPARM  AIF   ('&CASE' EQ '').NOUSEB                            87223
         USING &CMB,&CMU                                         81163
.NOUSEB  AIF   ('&SAVE' NE '*').LA                               81163
         AIF   (NOT &HWOPT).LYLEN                                84307
         L     R14,=A(&ENDG-&DSCTG)                              84307
         AGO   .NOLA                                             84307
.LYLEN   AIF   (NOT &BWOPT).LALEN                                84307
         LH    R14,=Y(&ENDG-&DSCTG)
         AGO   .NOLA
.LA      LA    R1,&SAVE
         SLR   R15,R15
         AGO   .NOGM
.LALEN   LA    R14,&ENDG-&DSCTG
.*             NOTE THAT R15 IS DESTROYED (OS/VS2) BY RMAIN
.NOLA    AIF   (&MVSXA OR '&SYSSPLV' GT '1').DOXA                93174
         AIF   ('&BNDRY' NE 'PAGE').GMDBLWD                      82002
         AIF   (NOT &MVS).SOLA                                   82002
.DOXA    LR    R0,R14        COPY LENGTH                         82002
         SLR   R1,R1         CLEAR FREEMAIN ADDRESS              82002
&Y       SETB  ('&BNDRY' EQ 'PAGE')                              93174
         LA    R15,2+4*&Y    UNCONDITIONAL GETMAIN(PAGE BNDRY)   93174
         AIF   ('&SP' EQ '0').POLA                               82002
         ICM   R15,2,=AL1(&SP)                                   82002
.POLA    SVC   120           GET PAGE ALIGNED STORAGE            82002
         ST    R14,&SV.SPLN-&DSCTG.(R1)                          82002
         AIF   ('&SP' EQ '0').NOGM                               82002
         MVI   &SV.SPLN-&DSCTG.(R1),&SP                          82002
         AGO   .NOGM                                             82002
.*       FOR NON-MVS SYSTEMS, PAGE ALIGNMENT IS ATTEMPTED, BUT   82002
.*       NOT GUARANTEED BY DOING THE GETMAIN IN A 4K CHUNK IN A  82002
.*       NON-ZERO SUB-POOL.  MVT/MFT NOT SUPPORTED.              82002
.SOLA    LA    R14,4095(,R14)                                    82002
         SRL   R14,12                                            82002
         SLL   R14,12                                            82002
         AIF   ('&SP' NE '0').GMDBLWD                            82002
         ICM   R14,8,=AL1(10)                                    82002
         AGO   .GM                                               82002
.GMDBLWD AIF   ('&SP' EQ '0').GM                                 82002
         AIF   ('&MODEL' EQ '360').GM360
.GMICM   ICM   R14,8,=AL1(&SP)                                   82002
.GM    GETMAIN R,LV=(R14)
         AGO   .GMCOM
.GM360 GETMAIN R,SP=(&SP),LV=(R14)
         ST    R14,&SV.SPLN-&DSCTG.(R1)                          82002
         MVI   &SV.SPLN-&DSCTG.(R1),&SP                          82002
         AGO   .NOGM                                             82002
.GMCOM   ST    R14,&SV.SPLN-&DSCTG.(R1)
.NOGM    ST    R1,&SV.FWD
         ST    R13,&SV.13-&DSCTG.(R1)
         AIF   (NOT &CPYREGS).LR13
         MVC   &SV.14-&DSCTG.(&SV.12+4-&SV.14,R1),&SV.14         81151
&BEGZ    SETC  '&PFX'.'FWK'  CLEAR ONLY AFTER REGISTERS          94272
         AIF   (NOT &ZERO).LR13                                  94272
         XC    &SV.FWD-&DSCTG.(&SV.14-&SV.FWD,R1),&SV.FWD-&DSCTG.(R1)
.LR13    LR    R13,R1
&ENDZ    SETC  '&ENDG'             DEFAULT END OF CLEAR          81208
         AIF   (T'&ENDZERO EQ 'O').CLRDFLT                       81209
&ENDZ    SETC  '&ENDZERO'                                        81208
&ZERO    SETB  1                                                 81208
&ZERO15  SETB  (NOT &ZERO8 AND NOT &ZERO12)                      81208
.CLRDFLT AIF   (NOT &ZERO).NOLDSV1                               81208
         AIF   (&ZERO8).XC                                       81202
         AIF   ('&MODEL' NE '360').MVCL
         LA    R0,(&ENDG-&BEGZ)/256-1 ASM ERROR IF LEN<256       94272
         ORG   *-4
         LA    R0,(&ENDG-&BEGZ)/256   NUMBER OF SEGMENTS TO ZERO 94272
         LA    R1,&BEGZ      ZERO WORK AREA                      94272
         LA    R15,&ENDG-&BEGZ-(&ENDG-&BEGZ)/256*256             94272
         XC    0(256,R1),0(R1)          ZERO WORK AREA SEGMENT
         LA    R1,256(,R1)
         BCT   R0,*-10
         SH    R15,=H'1'
         BM    *+14
         EX    R15,*+4                  ZERO PARTIAL SEGMENT
         XC    0(0,R1),0(R1)            EXECUTED TO ZERO WORK AREA
         AGO   .NOLDSV1
.XC      XC    &BEGZ.(&ENDG-&BEGZ),&BEGZ                         94272
         AGO   .NOLDSV1
.MVCL    LA    R0,&BEGZ      ZERO WORK AREA                      94272
         AIF   (NOT &ZERO31).ZEROLY                              84307
         L     R1,=A(&ENDG-&BEGZ)                                94272
         AGO   .XR15                                             84307
.ZEROLY  AIF   (&ZERO12).ZEROLA                                  84307
         LH    R1,=Y(&ENDG-&BEGZ)                                94272
         AGO   .XR15                                             81202
.ZEROLA  LA    R1,&ENDG-&BEGZ                                    94272
.XR15    SLR   R15,R15                                           81202
         MVCL  R0,R14
.NOLDSV1 AIF   (T'&ENTRY EQ 'O' OR T'&ENTNO EQ 'O').NOLDENT      88255
         L     R1,&SV.13     GET OLD SAVE AREA BACK              88255
         CLM   &CASE,7,&SV.15+1-&DSCTG.(R1)  MAIN ENTRY ?        88255
         BE    *+16          YES; DON'T MOVE                     88255
         L     R1,&SV.15-&DSCTG.(,R1) GET ENTRY ADDRESS BACK     88255
         BCTR  R1,0          SPACE TO ENTRY COUNTER              88255
         MVC   &ENTNO+L'&ENTNO-1(1),0(R1) COPY COUNT             88255
.NOLDENT AIF   ('&PARM' NE '1' AND '&PARM' NE 'R1').NOPARM1      87223
         L     R1,&SV.13     OLD SAVE AREA                       87223
         LM    R0,R1,&SV.0-&DSCTG.(R1)  RESTORE ENTRY REGISTERS  94272
.NOPARM1 AIF   (&NOT1ST).END
         AIF   (&DSOPT).DSOPT
&DSCTG   DSECT
&SV.SPLN DS    F
&SV.13   DS    F
&SV.FWD  DS    A
&SV.14   DS    A
&SV.15   DS    A
&SV.0    DS    A
&SV.1    DS    A
&SV.2    DS    A
&SV.3    DS    A
&SV.4    DS    A
&SV.5    DS    A
&SV.6    DS    A
&SV.7    DS    A
&SV.8    DS    A
&SV.9    DS    A
&SV.10   DS    A
&SV.11   DS    A
&SV.12   DS    A
&SV.FWK  EQU   *                                                 94272
         AIF   (NOT &NWOPT).NOEND
&ENDG    EQU   *
.NOEND   ANOP
&SECT   CSECT
.DSOPT   AIF   (&EQUOPT OR &MAPONCE OR &SAV@REG).END
&MAPONCE SETB  1
&SAV@REG SETB  1
         REGEQU ,
         MASKEQU ,                                               87223
.END     MEND  ,
