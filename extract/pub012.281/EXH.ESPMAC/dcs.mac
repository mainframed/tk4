         MACRO
&NAME    DCS
.**********************************************************************
.*                                                                    *
.*        DCS  -  DEFINE CONSTANT FOR SCREEN                          *
.*                                                                    *
.*        WRITTEN BY BILL GODFREY                                     *
.*        PLANNING RESEARCH CORPORATION                               *
.*        PRC COMPUTER CENTER, MCLEAN VA 22101                        *
.*        DATE WRITTEN: JANUARY 8 1981.                               *
.*        DATE UPDATED: MARCH 18 1982. (ROW AND COL IN PARENS)        *
.*        GP@P6          JULY 25 1986. (EXTENDED ATTRS, MEDIUM INTENS)*
.*        GP@P6     SEPTEMBER 23 1986. (ESCAPES, WRITES, RA, MFA, MF) *
.*        GP@P6        AUGUST 24 1987. (EAU, WSF, RB, RM, RMA)        *
.*        GP@P6       OCTOBER 15 1987. (3270 AND GRAPHIC EXTRAS)      *
.*                                                                    *
.*        THIS MACRO IS USED FOR CODING A FULLSCREEN 3270 DISPLAY.    *
.*                                                                    *
.*        SAMPLE                                                      *
.*           DCS    AL1(WCC),SBA,(1,1),RTA,(7,1),X'00',IC             *
.*                                                                    *
.*        IT SIMPLIFIES THE CODING OF A SCREEN IN THE FOLLOWING WAYS. *
.*        .  BUFFER ADDRESSES ARE SPECIFIED AS ROW AND COLUMN NUM-    *
.*           BER.  THE MACRO TRANSLATES THEM INTO THE 3270 CODE.      *
.*        .  ORDERS ARE SPECIFIED BY NAME, SUCH AS 'SBA' AND 'SF',    *
.*           SO YOU DONT HAVE TO KNOW THE HEX CODES FOR THEM,         *
.*        .  COMMONLY USED ATTRIBUTE BYTES ARE SPECIFIED BY NAME      *
.*           (A SET OF RESERVED NAMES) SO YOU DONT HAVE TO KNOW       *
.*           THE HEX CODES FOR THEM.                                  *
.*        .  IT SAVES A LOT OF DOCUMENTATION WORK, AND MAKES          *
.*           THE CODE EASIER FOR OTHERS TO UNDERSTAND.                *
.*                                                                    *
.*        THE USER OF THE MACRO MUST STILL UNDERSTAND HOW A SCREEN    *
.*        IS CONSTRUCTED BEFORE USING IT. THE MACRO MERELY MAKES IT   *
.*        EASIER TO SPECIFY THE VALUES.  IT DOES VERY LITTLE ERROR    *
.*        CHECKING.  FOR INSTANCE, IT DOES NOT CHECK TO SEE IF        *
.*        YOU FOLLOW AN 'SBA' WITH A BUFFER ADDRESS.  IT IS POSSIBLE  *
.*        TO CODE A THOROUGHLY INVALID SCREEN.                        *
.*                                                                    *
.*        THE MACRO MAY HAVE ANY NUMBER OF OPERANDS, CONSISTING OF    *
.*        ANY COMBINATION OF THE FOLLOWING.                           *
.*                                                                    *
.*        .  AN ESCAPE CHARACTER.                                     *
.*           VALID ESCAPE CHARACTERS ARE:                             *
.*           ESC - ESCAPE                                             *
.*           GE  - GRAPHIC ESCAPE                                     *
.*        .  A WRITE COMMAND.                                         *
.*           VALID WRITE COMMANDS ARE:                                *
.*           WR  - WRITE (WRT)                                        *
.*           EW  - ERASE/WRITE                                        *
.*           EWA - ERASE/WRITE ALTERNATE                              *
.*           EAU - ERASE ALL UNPROTECTED                              *
.*           WSF - WRITE STRUCTURED FIELD                             *
.*        .  A READ COMMAND.                                          *
.*           VALID READ COMMANDS ARE:                                 *
.*           RB  - READ BUFFER                                        *
.*           RM  - READ MODIFIED                                      *
.*           RMA - READ MODIFIED ALL                                  *
.*        .  A 3270 ORDER.                                            *
.*           VALID 3270 ORDERS ARE:                                   *
.*           SBA, SF, RA (RTA), IC, PT (HT), EUA, SA, SFE, MF (MFA).  *
.*        .  A BUFFER ADDRESS IN PARENTHESES.                         *
.*           IF AN OPERAND IS IN PARENTHESES, IT IS ASSUMED THAT      *
.*           THE ROW AND COLUMN NUMBER ARE BETWEEN THE PARENS,        *
.*           SEPARATED BY A COMMA.  EXAMPLE: (1,1)                    *
.*           THIS FORM OF BUFFER ADDRESS IS NEW AS OF MARCH 18 1982.  *
.*        .  A ROW OR COLUMN NUMBER OF A BUFFER ADDRESS (OLD FORMAT). *
.*           IF AN OPERAND IS NUMERIC, IT IS ASSUMED TO BE            *
.*           A ROW OR COLUMN NUMBER.  IT TAKES 2 OPERANDS TO          *
.*           SPECIFY THE BUFFER ADDRESS (ROW AND COLUMN) SO NUMERIC   *
.*           OPERANDS MUST ALWAYS BE SPECIFIED IN PAIRS, THE          *
.*           FIRST BEING THE ROW AND THE SECOND BEING THE COLUMN.     *
.*           THIS FORMAT IS SUPPORTED ONLY FOR COMPATIBILITY WITH     *
.*           THE ORIGINAL VERSION OF THIS MACRO.                      *
.*        .  AN ATTRIBUTE BYTE.                                       *
.*           VALID ATTRIBUTE BYTES ARE:                               *
.*           UNPLO  - UNPROTECTED NORMAL INTENSITY                    *
.*           UNPMD  - UNPROTECTED MEDIUM INTENSITY                    *
.*           UNPHI  - UNPROTECTED HIGH INTENSITY                      *
.*           UNPNP  - UNPROTECTED NO-DISPLAY                          *
.*           PROLO  - PROTECTED NORMAL INTENSITY                      *
.*           PROLOS - PROTECTED NORMAL INTENSITY AUTO-SKIP            *
.*           PROMD  - PROTECTED MEDIUM INTENSITY                      *
.*           PROMDS - PROTECTED MEDIUM INTENSITY AUTO-SKIP            *
.*           PROHI  - PROTECTED HIGH INTENSITY                        *
.*           PROHIS - PROTECTED HIGH INTENSITY AUTO-SKIP              *
.*        .  AN EXTENDED ATTRIBUTE TYPE.                              *
.*           VALID ATTRIBUTE TYPES ARE:                               *
.*           FIELD, VALIDN, OUTLIN, HILITE, COLOUR, PGMSYM, BKCOLR    *
.*           AND TRANSP.                                              *
.*        .  AN EXTENDED HIGHLIGHTING SPECIFICATION.                  *
.*           VALID HIGHLIGHTINGS ARE:                                 *
.*           NORMAL, BLINK, REVERSE AND USCORE.                       *
.*        .  AN EXTENDED COLOUR SPECIFICATION.                        *
.*           VALID COLOURS ARE:                                       *
.*           BLUE, RED, PINK, GREEN, TURQ, YELLOW, WHITE AND NORMAL.  *
.*        .  A BACKGROUND TRANSPARENCY SPECIFICATION.                 *
.*           VALID TRANSPARENCIES ARE:                                *
.*           NORMAL (TRANSPARENT) AND OPAQUE (NON-TRANSPARENT).       *
.*        .  A FORMAT CONTROL ORDER.                                  *
.*           VALID FORMAT CONTROL ORDERS ARE:                         *
.*           NUL, SUB, DUP, FM, FF, CR, NL, EM, EO, BYP, RES, SI, SO. *
.*        .  A GRAPHIC ORDER.                                         *
.*           VALID GRAPHIC ORDERS ARE TOO NUMEROUS TO MENTION.        *
.*        .  A HEX, CHARACTER, OR ADDRESS CONSTANT.                   *
.*           FOR EXAMPLE, X'00', OR C'ENTER SIGNON'                   *
.*           THIS CAN BE USED FOR DATA WITHIN FIELDS OR FOR           *
.*           ATTRIBUTE BYTES, ORDERS, THE 'WCC', OR BUFFER            *
.*           ADDRESSES (IF YOU WANT TO FIGURE THEM OUT).              *
.*                                                                    *
.*        IF THE OPERANDS DO NOT ALL FIT ON ONE LINE, YOU CAN         *
.*        EITHER CONTINUE THE LINE IN THE STANDARD ASSEMBLER WAY      *
.*        OR CODE THE MACRO AGAIN ON THE NEXT LINE WITH THE           *
.*        REMAINING OPERANDS.  THE RESULT IS THE SAME EITHER WAY.     *
.*                                                                    *
.*        THE BUFFER ADDRESS CONVERSIONS ARE FOR A                    *
.*        SCREEN SIZE OF 24 ROWS BY 80 COLUMNS. FOR SCREENS           *
.*        OF OTHER DIMENSIONS (43 BY 80, 12 BY 40) THE MACRO          *
.*        NEEDS ONLY A FEW CHANGES.                                   *
.*                                                                    *
.*        WARNING: IF YOU CODE THE MACRO WITH A LABEL IN COLUMN 1,    *
.*        AND YOU LIKE USING LENGTH ATTRIBUTES, BEWARE THAT THE       *
.*        LENGTH ATTRIBUTE OF THE LABEL IS NOT NECESSARILY THE        *
.*        TOTAL LENGTH OF THE DATA GENERATED BY THE MACRO.            *
.*                                                                    *
.*        PROGRAMMING NOTE:                                           *
.*        SA,NORMAL,NORMAL     WILL DO IN THREE BYTES WHAT            *
.*        SA,HILITE,NORMAL,SA,COLOUR,NORMAL,SA,PGMSYM,NORMAL          *
.*                             WILL DO IN NINE BYTES.                 *
.*                                                                    *
.*        TECHNICAL NOTES:                                            *
.*        ATTRIBUTES WITH CODES IN THE RANGE X'00' TO X'7F' HAVE      *
.*        VALUES GIVEN BY A 1-BYTE BINARY NUMBER.  EG. X'42' (COLOUR) *
.*        ATTRIBUTES WITH CODES IN THE RANGE X'C0' TO X'FF' HAVE      *
.*        BIT-ENCODED VALUES.  EG. X'C0' (3270 FIELD ATTRIBUTE)       *
.*        CHARACTER SETS:                                             *
.*        X'00' - DEFAULT               X'40'-X'EF' - LOADABLE LCID   *
.*        X'F0'-X'F7' - NON-LOADABLE LCID   X'F8'-X'FE' - DBCS LCID   *
.*        FIELD VALIDATION:                                           *
.*        SPECIFY A BYTE IN THE RANGE X'00' TO X'07' ON THE BASIS OF  *
.*        X'01' ON FOR TRIGGER, X'02' ON FOR MANDATORY ENTRY AND      *
.*        X'04' ON FOR MANDATORY FILL.                                *
.*        FIELD OUTLINING:                                            *
.*        SPECIFY A BYTE IN THE RANGE X'00' TO X'0F' ON THE BASIS OF  *
.*        X'01' ON FOR UNDERLINE, X'02' ON FOR RIGHT VERTICAL LINE,   *
.*        X'04' ON FOR OVERLINE AND X'08' ON FOR LEFT VERTICAL LINE.  *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &R,&C,&P,&Q
         LCLA  &AN,&AS,&AL
         LCLB  &B,&NUMERIC,&INTEGER
         LCLC  &T(64)
         LCLC  &N,&ROW,&COL
         LCLC  &CS,&STRING
&T(1)    SETC  '40'
&T(2)    SETC  'C1'
&T(3)    SETC  'C2'
&T(4)    SETC  'C3'
&T(5)    SETC  'C4'
&T(6)    SETC  'C5'
&T(7)    SETC  'C6'
&T(8)    SETC  'C7'
&T(9)    SETC  'C8'
&T(10)   SETC  'C9'
&T(11)   SETC  '4A'
&T(12)   SETC  '4B'
&T(13)   SETC  '4C'
&T(14)   SETC  '4D'
&T(15)   SETC  '4E'
&T(16)   SETC  '4F'
.*
&T(17)   SETC  '50'
&T(18)   SETC  'D1'
&T(19)   SETC  'D2'
&T(20)   SETC  'D3'
&T(21)   SETC  'D4'
&T(22)   SETC  'D5'
&T(23)   SETC  'D6'
&T(24)   SETC  'D7'
&T(25)   SETC  'D8'
&T(26)   SETC  'D9'
&T(27)   SETC  '5A'
&T(28)   SETC  '5B'
&T(29)   SETC  '5C'
&T(30)   SETC  '5D'
&T(31)   SETC  '5E'
&T(32)   SETC  '5F'
.*
&T(33)   SETC  '60'
&T(34)   SETC  '61'
&T(35)   SETC  'E2'
&T(36)   SETC  'E3'
&T(37)   SETC  'E4'
&T(38)   SETC  'E5'
&T(39)   SETC  'E6'
&T(40)   SETC  'E7'
&T(41)   SETC  'E8'
&T(42)   SETC  'E9'
&T(43)   SETC  '6A'
&T(44)   SETC  '6B'
&T(45)   SETC  '6C'
&T(46)   SETC  '6D'
&T(47)   SETC  '6E'
&T(48)   SETC  '6F'
.*
&T(49)   SETC  'F0'
&T(50)   SETC  'F1'
&T(51)   SETC  'F2'
&T(52)   SETC  'F3'
&T(53)   SETC  'F4'
&T(54)   SETC  'F5'
&T(55)   SETC  'F6'
&T(56)   SETC  'F7'
&T(57)   SETC  'F8'
&T(58)   SETC  'F9'
&T(59)   SETC  '7A'
&T(60)   SETC  '7B'
&T(61)   SETC  '7C'
&T(62)   SETC  '7D'
&T(63)   SETC  '7E'
&T(64)   SETC  '7F'
.*
&N       SETC  '&NAME'
&AN      SETA  N'&SYSLIST          NUMBER OF OPERANDS
&AS      SETA  0
&B       SETB  0 FALSE
.EACH    AIF   (&AN EQ 0).EPILOG
&AS      SETA  &AS+1
&CS      SETC  '&AS'
&AL      SETA  K'&SYSLIST(&AS)
         AIF   (T'&SYSLIST(&AS) EQ 'O').NEXT
         AIF   ('&SYSLIST(&AS)'(1,1) EQ '(').PAIR
&NUMERIC SETB  (T'&SYSLIST(&AS) EQ 'N')
&INTEGER SETB  ('&SYSLIST(&AS)'(1,1) GE '0')
         AIF   (&NUMERIC AND &INTEGER).ROWCOL
         AIF   (NOT &B).ROWCOLX
         MNOTE 4,'             &CS.) MISSING COLUMN NUMBER'
&B       SETB  0 FALSE
.ROWCOLX ANOP
&STRING  SETC  '&SYSLIST(&AS)'
.*             ESCAPES
         AIF   ('&STRING' EQ 'ESC').ESC
         AIF   ('&STRING' EQ 'GE').GE
.*             WRITES
         AIF   ('&STRING' EQ 'WR').WR
         AIF   ('&STRING' EQ 'WRT').WR
         AIF   ('&STRING' EQ 'EW').EW
         AIF   ('&STRING' EQ 'EWA').EWA
         AIF   ('&STRING' EQ 'EAU').EAU
         AIF   ('&STRING' EQ 'WSF').WSF
.*             READS
         AIF   ('&STRING' EQ 'RB').RB
         AIF   ('&STRING' EQ 'RM').RM
         AIF   ('&STRING' EQ 'RMA').RMA
.*             3270 ORDERS
         AIF   ('&STRING' EQ 'SBA').SBA
         AIF   ('&STRING' EQ 'SF').SF
         AIF   ('&STRING' EQ 'SFE').SFE
         AIF   ('&STRING' EQ 'RA').RA
         AIF   ('&STRING' EQ 'RTA').RA
         AIF   ('&STRING' EQ 'IC').IC
         AIF   ('&STRING' EQ 'PT').PT
         AIF   ('&STRING' EQ 'HT').PT
         AIF   ('&STRING' EQ 'EUA').EUA
         AIF   ('&STRING' EQ 'SA').SA
         AIF   ('&STRING' EQ 'MF').MF
         AIF   ('&STRING' EQ 'MFA').MF
.*             ATTRIBUTES
         AIF   ('&STRING' EQ 'UNPLO').UNPLO
         AIF   ('&STRING' EQ 'UNPMD').UNPMD
         AIF   ('&STRING' EQ 'UNPHI').UNPHI
         AIF   ('&STRING' EQ 'UNPNP').UNPNP
         AIF   ('&STRING' EQ 'PROLO').PROLO
         AIF   ('&STRING' EQ 'PROLOS').PROLOS
         AIF   ('&STRING' EQ 'PROMD').PROMD
         AIF   ('&STRING' EQ 'PROMDS').PROMDS
         AIF   ('&STRING' EQ 'PROHI').PROHI
         AIF   ('&STRING' EQ 'PROHIS').PROHIS
.*             EXTENDED ATTRIBUTE TYPES
         AIF   ('&STRING' EQ 'FIELD').FIELD
         AIF   ('&STRING' EQ 'VALIDN').VALIDN
         AIF   ('&STRING' EQ 'OUTLIN').OUTLIN
         AIF   ('&STRING' EQ 'HILITE').HILITE
         AIF   ('&STRING' EQ 'COLOUR').COLOUR
         AIF   ('&STRING' EQ 'PGMSYM').PGMSYM
         AIF   ('&STRING' EQ 'BKCOLR').BKCOLR
         AIF   ('&STRING' EQ 'TRANSP').TRANSP
.*             HIGHLIGHTING
         AIF   ('&STRING' EQ 'NORMAL').NORMAL
         AIF   ('&STRING' EQ 'BLINK').BLINK
         AIF   ('&STRING' EQ 'REVERSE').REVERSE
         AIF   ('&STRING' EQ 'USCORE').USCORE
.*             COLOURS
         AIF   ('&STRING' EQ 'BLUE').BLUE
         AIF   ('&STRING' EQ 'RED').RED
         AIF   ('&STRING' EQ 'PINK').PINK
         AIF   ('&STRING' EQ 'GREEN').GREEN
         AIF   ('&STRING' EQ 'TURQ').TURQ
         AIF   ('&STRING' EQ 'YELLOW').YELLOW
         AIF   ('&STRING' EQ 'WHITE').WHITE
.*             TRANSPARENCIES
         AIF   ('&STRING' EQ 'OPAQUE').OPAQUE
.*             FORMAT CONTROL ORDERS
         AIF   ('&STRING' EQ 'NUL').NUL
         AIF   ('&STRING' EQ 'SUB').SUB
         AIF   ('&STRING' EQ 'DUP').DUP
         AIF   ('&STRING' EQ 'FM').FM
         AIF   ('&STRING' EQ 'FF').FF
         AIF   ('&STRING' EQ 'CR').CR
         AIF   ('&STRING' EQ 'NL').NL
         AIF   ('&STRING' EQ 'EM').EM
         AIF   ('&STRING' EQ 'EO').EO
         AIF   ('&STRING' EQ 'BYP').BYP
         AIF   ('&STRING' EQ 'RES').RES
         AIF   ('&STRING' EQ 'SI').SI
         AIF   ('&STRING' EQ 'SO').SO
.*             GRAPHIC ORDERS
         AIF   ('&STRING' EQ 'GBAR').GBAR
         AIF   ('&STRING' EQ 'GBIMG').GBIMG
         AIF   ('&STRING' EQ 'GCBIMG').GCBIMG
         AIF   ('&STRING' EQ 'GCHST').GCHST
         AIF   ('&STRING' EQ 'GCCHST').GCCHST
         AIF   ('&STRING' EQ 'GEAR').GEAR
         AIF   ('&STRING' EQ 'GEIMG').GEIMG
         AIF   ('&STRING' EQ 'GFLT').GFLT
         AIF   ('&STRING' EQ 'GCFLT').GCFLT
         AIF   ('&STRING' EQ 'GFARC').GFARC
         AIF   ('&STRING' EQ 'GCFARC').GCFARC
         AIF   ('&STRING' EQ 'GIMD').GIMD
         AIF   ('&STRING' EQ 'GLINE').GLINE
         AIF   ('&STRING' EQ 'GCLINE').GCLINE
         AIF   ('&STRING' EQ 'GMRK').GMRK
         AIF   ('&STRING' EQ 'GRLINE').GRLINE
         AIF   ('&STRING' EQ 'GCRLINE').GCRLINE
         AIF   ('&STRING' EQ 'GSBMX').GSBMX
         AIF   ('&STRING' EQ 'GSCA').GSCA
         AIF   ('&STRING' EQ 'GSCC').GSCC
         AIF   ('&STRING' EQ 'GSCD').GSCD
         AIF   ('&STRING' EQ 'GSCR').GSCR
         AIF   ('&STRING' EQ 'GSCS').GSCS
         AIF   ('&STRING' EQ 'GSCH').GSCH
         AIF   ('&STRING' EQ 'GSCOL').GSCOL
         AIF   ('&STRING' EQ 'GSECOL').GSECOL
         AIF   ('&STRING' EQ 'GSLT').GSLT
         AIF   ('&STRING' EQ 'GSLW').GSLW
         AIF   ('&STRING' EQ 'GSMC').GSMC
         AIF   ('&STRING' EQ 'GSMP').GSMP
         AIF   ('&STRING' EQ 'GSMS').GSMS
         AIF   ('&STRING' EQ 'GSMT').GSMT
         AIF   ('&STRING' EQ 'GSMX').GSMX
         AIF   ('&STRING' EQ 'GSPS').GSPS
         AIF   ('&STRING' EQ 'GSPT').GSPT
         AIF   ('&STRING' EQ 'GCOMT').GCOMT
         AIF   ('&STRING' EQ 'GSAP').GSAP
         AIF   ('&STRING' EQ 'GSCP').GSCP
         AIF   ('&STRING' EQ 'GSGCH').GSGCH
         AIF   ('&STRING' EQ 'GEPROL').GEPROL
         AIF   ('&STRING' EQ 'GESD').GESD
         AIF   ('&STRING' EQ 'GERASE').GERASE
         AIF   ('&STRING' EQ 'GSTOPDR').GSTOPDR
         AIF   ('&STRING' EQ 'GATTCUR').GATTCUR
         AIF   ('&STRING' EQ 'GDETCUR').GDETCUR
         AIF   ('&STRING' EQ 'GSETCUR').GSETCUR
         AIF   ('&STRING' EQ 'GSCUDEF').GSCUDEF
         AIF   ('&STRING' EQ 'GNOP1').GNOP1
.*             CONSTANTS
.*             IF THE OPERAND IS NONE OF THE ABOVE, IT IS
.*             PRESUMED TO BE ANY VALID 'DC' CONSTANT.
.DC      ANOP
&N       DC    &STRING
         AGO   .NEXT
.ESC     ANOP
&N       DC    X'27'               ESCAPE
         AGO   .NEXT
.GE      ANOP
&N       DC    X'08'               GRAPHIC ESCAPE
         AGO   .NEXT
.WR      ANOP
&N       DC    X'F1'               WRITE
         AGO   .NEXT
.EW      ANOP
&N       DC    X'F5'               ERASE/WRITE
         AGO   .NEXT
.EWA     ANOP
&N       DC    X'7E'               ERASE/WRITE ALTERNATE
         AGO   .NEXT
.EAU     ANOP
&N       DC    X'6F'               ERASE ALL UNPROTECTED
         AGO   .NEXT
.WSF     ANOP
&N       DC    X'F3'               WRITE STRUCTURED FIELD
         AGO   .NEXT
.RB      ANOP
&N       DC    X'F2'               READ BUFFER
         AGO   .NEXT
.RM      ANOP
&N       DC    X'F6'               READ MODIFIED
         AGO   .NEXT
.RMA     ANOP
&N       DC    X'6E'               READ MODIFIED ALL
         AGO   .NEXT
.SBA     ANOP
&N       DC    X'11'               SET BUFFER ADDRESS
         AGO   .NEXT
.SF      ANOP
&N       DC    X'1D'               START FIELD
         AGO   .NEXT
.RA      ANOP
&N       DC    X'3C'               REPEAT TO ADDRESS
         AGO   .NEXT
.IC      ANOP
&N       DC    X'13'               INSERT CURSOR
         AGO   .NEXT
.PT      ANOP
&N       DC    X'05'               PROGRAM TAB  (HORIZONTAL TAB)
         AGO   .NEXT
.EUA     ANOP
&N       DC    X'12'               ERASE UNPROTECTED TO ADDRESS
         AGO   .NEXT
.SA      ANOP
&N       DC    X'28'               SET ATTRIBUTE
         AGO   .NEXT
.SFE     ANOP
&N       DC    X'29'               START FIELD EXTENDED
         AGO   .NEXT
.MF      ANOP
&N       DC    X'2C'               MODIFY FIELD ATTRIBUTES
         AGO   .NEXT
.UNPLO   ANOP
&N       DC    X'40'               UNPROTECTED NORMAL INTENSITY
         AGO   .NEXT
.UNPMD   ANOP
&N       DC    X'C4'               UNPROTECTED MEDIUM INTENSITY
         AGO   .NEXT
.UNPHI   ANOP
&N       DC    X'C8'               UNPROTECTED HIGH INTENSITY
         AGO   .NEXT
.UNPNP   ANOP
&N       DC    X'4C'               UNPROTECTED NO-DISPLAY
         AGO   .NEXT
.PROLO   ANOP
&N       DC    X'60'               PROTECTED NORMAL INTENSITY
         AGO   .NEXT
.PROLOS  ANOP
&N       DC    X'F0'               PROTECTED NORMAL INTENSITY SKIP
         AGO   .NEXT
.PROMD   ANOP
&N       DC    X'E4'               PROTECTED MEDIUM INTENSITY
         AGO   .NEXT
.PROMDS  ANOP
&N       DC    X'F4'               PROTECTED MEDIUM INTENSITY SKIP
         AGO   .NEXT
.PROHI   ANOP
&N       DC    X'E8'               PROTECTED HIGH INTENSITY
         AGO   .NEXT
.PROHIS  ANOP
&N       DC    X'F8'               PROTECTED HIGH INTENSITY SKIP
         AGO   .NEXT
.FIELD   ANOP
&N       DC    X'C0'               3270 FIELD ATTRIBUTE
         AGO   .NEXT
.VALIDN  ANOP
&N       DC    X'C1'               FIELD VALIDATION
         AGO   .NEXT
.OUTLIN  ANOP
&N       DC    X'C2'               FIELD OUTLINING
         AGO   .NEXT
.HILITE  ANOP
&N       DC    X'41'               EXTENDED HIGHLIGHTING
         AGO   .NEXT
.COLOUR  ANOP
&N       DC    X'42'               EXTENDED COLOUR
         AGO   .NEXT
.PGMSYM  ANOP
&N       DC    X'43'               PROGRAMMED SYMBOLS
         AGO   .NEXT
.BKCOLR  ANOP
&N       DC    X'45'               BACKGROUND COLOUR
         AGO   .NEXT
.TRANSP  ANOP
&N       DC    X'46'               BACKGROUND TRANSPARENCY
         AGO   .NEXT
.NORMAL  ANOP
&N       DC    X'00'               CHARACTER ATTRIBUTE RESET (DEFAULT)
         AGO   .NEXT
.BLINK   ANOP
&N       DC    X'F1'               BLINK HIGHLIGHTING
         AGO   .NEXT
.REVERSE ANOP
&N       DC    X'F2'               REVERSE VIDEO HIGHLIGHTING
         AGO   .NEXT
.USCORE  ANOP
&N       DC    X'F4'               UNDERSCORE HIGHLIGHTING
         AGO   .NEXT
.BLUE    ANOP
&N       DC    X'F1'               BLUE COLOUR
         AGO   .NEXT
.RED     ANOP
&N       DC    X'F2'               RED COLOUR
         AGO   .NEXT
.PINK    ANOP
&N       DC    X'F3'               PINK COLOUR
         AGO   .NEXT
.GREEN   ANOP
&N       DC    X'F4'               GREEN COLOUR
         AGO   .NEXT
.TURQ    ANOP
&N       DC    X'F5'               TURQUOISE COLOUR
         AGO   .NEXT
.YELLOW  ANOP
&N       DC    X'F6'               YELLOW COLOUR
         AGO   .NEXT
.WHITE   ANOP
&N       DC    X'F7'               WHITE COLOUR
         AGO   .NEXT
.OPAQUE  ANOP
&N       DC    X'FF'               OPAQUE (NON-TRANSPARENT)
         AGO   .NEXT
.NUL     ANOP
&N       DC    X'00'               NULL
         AGO   .NEXT
.SUB     ANOP
&N       DC    X'3F'               SUBSTITUTE
         AGO   .NEXT
.DUP     ANOP
&N       DC    X'1C'               DUPLICATE
         AGO   .NEXT
.FM      ANOP
&N       DC    X'1E'               FIELD MARK
         AGO   .NEXT
.FF      ANOP
&N       DC    X'0C'               FORM FEED
         AGO   .NEXT
.CR      ANOP
&N       DC    X'0D'               CARRIAGE RETURN
         AGO   .NEXT
.NL      ANOP
&N       DC    X'15'               NEW LINE
         AGO   .NEXT
.EM      ANOP
&N       DC    X'19'               END OF MESSAGE
         AGO   .NEXT
.EO      ANOP
&N       DC    X'FF'               EIGHT ONES
         AGO   .NEXT
.BYP     ANOP
&N       DC    X'24'               BYPASS  (INHIBIT PRESENTATION)
         AGO   .NEXT
.RES     ANOP
&N       DC    X'14'               RESTORE  (ENABLE PRESENTATION)
         AGO   .NEXT
.SI      ANOP
&N       DC    X'0F'               SHIFT IN
         AGO   .NEXT
.SO      ANOP
&N       DC    X'0E'               SHIFT OUT
         AGO   .NEXT
.GBAR    ANOP
&N       DC    X'68'               BEGIN AREA
         AGO   .NEXT
.GBIMG   ANOP
&N       DC    X'D1'               BEGIN IMAGE
         AGO   .NEXT
.GCBIMG  ANOP
&N       DC    X'91'               BEGIN IMAGE
         AGO   .NEXT
.GCHST   ANOP
&N       DC    X'C3'               CHARACTER STRING
         AGO   .NEXT
.GCCHST  ANOP
&N       DC    X'83'               CHARACTER STRING
         AGO   .NEXT
.GEAR    ANOP
&N       DC    X'60'               END AREA
         AGO   .NEXT
.GEIMG   ANOP
&N       DC    X'93'               END IMAGE
         AGO   .NEXT
.GFLT    ANOP
&N       DC    X'C5'               FILLET
         AGO   .NEXT
.GCFLT   ANOP
&N       DC    X'85'               FILLET
         AGO   .NEXT
.GFARC   ANOP
&N       DC    X'C7'               FULL ARC
         AGO   .NEXT
.GCFARC  ANOP
&N       DC    X'87'               FULL ARC
         AGO   .NEXT
.GIMD    ANOP
&N       DC    X'92'               IMAGE DATA
         AGO   .NEXT
.GLINE   ANOP
&N       DC    X'C1'               LINE
         AGO   .NEXT
.GCLINE  ANOP
&N       DC    X'81'               LINE
         AGO   .NEXT
.GMRK    ANOP
&N       DC    X'C3'               MARKER
         AGO   .NEXT
.GRLINE  ANOP
&N       DC    X'E1'               RELATIVE LINE
         AGO   .NEXT
.GCRLINE ANOP
&N       DC    X'A1'               RELATIVE LINE
         AGO   .NEXT
.GSBMX   ANOP
&N       DC    X'0D'               SET BACKGROUND MIX
         AGO   .NEXT
.GSCA    ANOP
&N       DC    X'34'               SET CHARACTER ANGLE
         AGO   .NEXT
.GSCC    ANOP
&N       DC    X'33'               SET CHARACTER CELL
         AGO   .NEXT
.GSCD    ANOP
&N       DC    X'3A'               SET CHARACTER DIRECTION
         AGO   .NEXT
.GSCR    ANOP
&N       DC    X'39'               SET CHARACTER PRECISION
         AGO   .NEXT
.GSCS    ANOP
&N       DC    X'38'               SET CHARACTER SET
         AGO   .NEXT
.GSCH    ANOP
&N       DC    X'35'               SET CHARACTER SHEAR
         AGO   .NEXT
.GSCOL   ANOP
&N       DC    X'0A'               SET COLOUR
         AGO   .NEXT
.GSECOL  ANOP
&N       DC    X'26'               SET EXTENDED COLOUR
         AGO   .NEXT
.GSLT    ANOP
&N       DC    X'18'               SET LINE TYPE
         AGO   .NEXT
.GSLW    ANOP
&N       DC    X'19'               SET LINE WIDTH
         AGO   .NEXT
.GSMC    ANOP
&N       DC    X'37'               SET MARKER CELL
         AGO   .NEXT
.GSMP    ANOP
&N       DC    X'3B'               SET MARKER PRECISION
         AGO   .NEXT
.GSMS    ANOP
&N       DC    X'3C'               SET MARKER SET
         AGO   .NEXT
.GSMT    ANOP
&N       DC    X'29'               SET MARKER SYMBOL
         AGO   .NEXT
.GSMX    ANOP
&N       DC    X'0C'               SET MIX
         AGO   .NEXT
.GSPS    ANOP
&N       DC    X'08'               SET PATTERN SET
         AGO   .NEXT
.GSPT    ANOP
&N       DC    X'28'               SET PATTERN SYMBOL
         AGO   .NEXT
.GCOMT   ANOP
&N       DC    X'01'               COMMENT
         AGO   .NEXT
.GSAP    ANOP
&N       DC    X'22'               SET ARC PARAMETERS
         AGO   .NEXT
.GSCP    ANOP
&N       DC    X'21'               SET CURRENT POSITION
         AGO   .NEXT
.GSGCH   ANOP
&N       DC    X'04'               SEGMENT CHARACTERISTICS
         AGO   .NEXT
.GEPROL  ANOP
&N       DC    X'3E'               END PROLOGUE
         AGO   .NEXT
.GESD    ANOP
&N       DC    X'FF'               END OF SYMBOL DEFINITION
         AGO   .NEXT
.GERASE  ANOP
&N       DC    X'0A'               ERASE GRAPHIC PRESENTATION SPACE
         AGO   .NEXT
.GSTOPDR ANOP
&N       DC    X'0F'               STOP DRAW
         AGO   .NEXT
.GATTCUR ANOP
&N       DC    X'08'               ATTACH GRAPHIC CURSOR
         AGO   .NEXT
.GDETCUR ANOP
&N       DC    X'09'               DETACH GRAPHIC CURSOR
         AGO   .NEXT
.GSETCUR ANOP
&N       DC    X'31'               SET GRAPHIC CURSOR POSITION
         AGO   .NEXT
.GSCUDEF ANOP
&N       DC    X'21'               SET CURRENT DEFAULTS
         AGO   .NEXT
.GNOP1   ANOP
&N       DC    X'00'               NO OPERATION
         AGO   .NEXT
.**********************************************************************
.PAIR    ANOP
         AIF   (N'&SYSLIST(&AS) NE 2).PERR1
&NUMERIC SETB  (T'&SYSLIST(&AS,1) EQ 'N')
&INTEGER SETB  ('&SYSLIST(&AS,1)'(1,1) GE '0')
         AIF   (NOT &NUMERIC OR NOT &INTEGER).PERR2
&R       SETA  &SYSLIST(&AS,1)
&NUMERIC SETB  (T'&SYSLIST(&AS,2) EQ 'N')
&INTEGER SETB  ('&SYSLIST(&AS,2)'(1,1) GE '0')
         AIF   (NOT &NUMERIC OR NOT &INTEGER).PERR2
&C       SETA  &SYSLIST(&AS,2)
         AIF   (&R LT 1 OR &R GT 24).ROWERR
         AIF   (&C LT 1 OR &C GT 80).COLERR
&P       SETA  (&R-1)*80+&C-1
&Q       SETA  &P/64               QUOTIENT
&R       SETA  &P-&Q*64+1          REMAINDER+1
&Q       SETA  &Q+1                QUOTIENT+1
&N       DC    X'&T(&Q)&T(&R)'     ROW AND COLUMN
         AGO   .NEXT
.PERR1   MNOTE 4,'             &CS.) PARENS FOUND BUT NOT 2 NUMBERS'
         MEXIT
.PERR2   MNOTE 4,'             &CS.) NON NUMERIC ROW/COLUMN'
         MEXIT
.**********************************************************************
.ROWCOL  ANOP
         AIF   (&B).COL            BRANCH IF ROW HAS BEEN CAPTURED
&R       SETA  &SYSLIST(&AS)
&B       SETB  1 TRUE              SET ROW-HAS-BEEN-CAPTURED
         AGO   .NEXTR
.COL     ANOP
&C       SETA  &SYSLIST(&AS)
&B       SETB  0 FALSE             RESET SWITCH
         AIF   (&R LT 1 OR &R GT 24).ROWERR
         AIF   (&C LT 1 OR &C GT 80).COLERR
&P       SETA  (&R-1)*80+&C-1
&Q       SETA  &P/64               QUOTIENT
&R       SETA  &P-&Q*64+1          REMAINDER+1
&Q       SETA  &Q+1                QUOTIENT+1
&N       DC    X'&T(&Q)&T(&R)'     ROW AND COLUMN
         AGO   .NEXT
.ROWERR  MNOTE 4,'             &CS.) VALUE &R INVALID, MUST BE 1 TO 24'
         AGO   .NEXT
.COLERR  MNOTE 4,'             &CS.) VALUE &C INVALID, MUST BE 1 TO 80'
.NEXT    ANOP
&N       SETC  ''                  TURN OFF NAME
.NEXTR   ANOP
&AN      SETA  &AN-1
         AGO   .EACH
.EPILOG  ANOP
         MEND
