         MACRO ,
&NM      EXHMGTFX &SECT=     EXHIBIT HCT EXPANSION           NEW 78205
         GBLC  &SYSTEM                                           79071
         LCLC  &N
&N       SETC  '&NM'
         AIF   ('&N' NE '').GOTNAME
&N       SETC  'EXHCSHCT'    SET DEFAULT NAME
.GOTNAME AIF   ('&SECT' EQ 'YES' OR '&SECT' EQ 'CSECT').CSECT
         AIF   ('&SECT' EQ '' OR '&SECT' EQ 'DSECT').DSECT
&N       DS    0D ,
         AGO   .STARTS
.CSECT   ANOP  ,
&N       CSECT ,
         AGO   .STARTS
.DSECT   ANOP  ,
&N       DSECT ,
.STARTS  SPACE 1
HCTNHCT  DC    A(0)          POINTER TO NEXT HCT = 0
HCTNDAC  EQU   X'80'         ON FOR INACTIVE HCT
HCTROUT  DC    A(ROUTHCT)    MAIN ENTRY
HCTROUTB DC    A(ROUTBHCT)   BRANCH ENTRY
HCTRCOV  DC    A(RCOVHCT)    ERROR RECOVERY
HCTGTF   DS    0A            FLAGS
HCTGTFST DC    X'0'          FLAG
HCTSTATE EQU   X'80'         ENABLED IF ON
HCTMCTYP EQU   X'08'         370 MODE IF ON; ELSE SIMULATED
HCTFLG1  DC    X'0'          STATUS FLAG
HCTCONST EQU   X'80'         UNDER CONSTRUCTION
HCTTERMD EQU   X'40'         TO BE TERMINATED
HCTACTIV EQU   X'20'         ACTIVATED
HCTINCTL EQU   X'10'         IN CONTROL
HCTTODCK EQU   X'08'         TOD CLOCK IF ON
HCTTMTYP EQU   X'04'         HIGH RESOLUTION TIMER
HCTONEXT EQU   X'01'         SHOW ONUNIT ENTERED                 79075
HCXHOOK  DC    XL2'0'        HOOK VALUE
HCTTCB   DC    A(0)          ADDRESS OF THIS TASK
         SPACE 1
HCXWORK  DC    0D'0'         WORK WORDS
HCXSAVER DC    8D'0'         TEMP SAVE AREA
HCXUSER  DC    D'0'          USER WORK WORDS
HCX@TIME DC    A(0)          ADDRESS OF TIMER ROUTINE
HCX@SVCS DC    A(0)          ADDRESS OF SVC INT REG SAVE AREA
HCX@PISV DC    A(0)          ADDRESS OF PI  INT REG SAVE AREA
HCX@CVT  DC    A(0)          ADDRESS OF CVT
HCXTIME  DC    D'0'          CURRENT TIME
HCXPTCB  DC    A(0)          PREVIOUS TCB
HCXPTIME DC    XL8'0'        PREVIOUS TIME
HCXPSW   DC    XL8'0'        REAL OR FAKE PSW
HCXSAVE  DC    16A(0)        EXIT SAVE AREA
HCXPSWSV DC    2XL8'0'       USER PSW SAVE AREA
HCXPISAV DC    16A(0)        USER P.I. SAVE REGS
HCXSVSAV DC    16A(0)        USER SVC  SAVE REGS
         SPACE 1
EXITONUN SH    R15,EXITONOF-*(,R15)  GET OFFSET
         STM   R0,R14,HCXSAVEX-&N.(R15)  SAVE REGS               79077
         LR    R7,R15        SET BASE
         NUSE  SQSP,R13
         NUSE  COMM,R8       LIE A LITTLE - DON'T NEED IT
         NUSE  WORK,R11       BUT NEED FOR CLEAN ASSEMBLY
         USING &N,R7         DECLARE ENTRY
         MVC   SQTEIR+2(2),EXITTIME  RESTORE LOOP TIME
         NI    HCTGTFST,255-HCTSTATE  TURN ACTIVE FLAG OFF
         AIF ('&SYSTEM' NE 'MVT' AND '&SYSTEM' NE 'MFT').MV1     79077
         BALS  R14,SQSSMOF   DISABLE INTERRUPTS                  79077
         AGO   .MV2                                              79077
.MV1     MODESET MODE=SUP,ENABLE=NO  MAKE SURE                   79077
.MV2     OI    HCTFLG1,HCTONEXT   SHOW ONUNIT ENTERED            79077
         MVC   HCXSAVE(60),HCXSAVEX  MOVE REGISTERS              79077
         B     ROUTQUIT      GO TO COMMON EXIT CODE              79077
HCXSAVEX DC    15A(0)        ON-EXIT REG SAVE                    79077
EXITONOF DC    AL2(EXITONUN-&N)  OFFSET TO ONUNIT
EXITTIME DC    AL2(0)        SAVE AREA FOR DISPLAY TIME
RCOVHCT  LR    R7,R1         LOAD HCT BASE
ROUTQUIT L     R3,HCX@CVT    GET CVTPTR FROM ALTERNATE
         NUSE  CVT,R3
         MVI   CVTGTFST,0    CLEAR GTF FLAGS
         OI    HCTFLG1,HCTTERMD  SET TO TERMINATE
         TM    HCTGTFST,HCTSTATE  ACTIVE ?
         BZ    RCOVHCT1      NO; OR RECURSION
         NI    HCTGTFST,255-HCTSTATE  CLEAR ACTIVE
         L     R0,HCTTCB     GET THIS TCB
         LA    R1,X'800'     SET DUMP FLAG
         SLL   R1,8          MOVE OVER FOR CODE
         IC    R1,X'28'+3    GET PROG INT OLD PSW CODE
         LA    R1,X'C0'(,R1)  CONVERT TO 0CX
         SLL   R1,12         SHIFT TO SYSTEM CODE
         L     R15,CVTBTERM  GET ABTERM
         BALSR R14,R15       CALL IT
         MVC   X'28'(8,0),HCXPSWSV+8  RESTORE PI PSW
         L     R15,HCX@PISV  GET PI SAVE ADDRESS
         MVC   0(64,R15),HCXPISAV  RESTORE REGISTERS
         SPACE 1
RCOVHCT1 L     R2,CVTGTF     GET CMT POINTER
         AIF   ('&SYSTEM' EQ 'SVS').VS1                          79071
         XC    0(6,R2),0(R2)  CLEAR HCT POINTER AND FIRST MASK
         MVI   4(R2),X'07'   MAKE FIRST CLASS MASK A NOPR
         MVC   6(30,R2),4(R2)  RESET REMAINING MASKS
         TM    HCTGTFST,HCTMCTYP  REAL HOOK ?
         BZ    EXITHCT       NO; JUST EXIT
         XC    HCXTIME,HCXTIME  CLEAR WORK WORD
         LCTL  R8,R8,HCXTIME  RESET MASK BITS TO ZERO
         AGO   .VS2                                              79071
.VS1     XC    0(4,R2),0(R2)  CLEAR HCT POINTER                  79071
         MVI   5(R2),X'FE'   DISABLE BRANCH HOOKS                79077
         MVI   CVTGTFST,0    REMOVE GTF                          79071
         NI    CVTCTLFG,255-CVTGTRCE  RE-ENABLE TRACE            79071
         TM    CVTCTLFG,CVTSDTRC  LEAVE TRACE DISABLED ?         79071
         BNZ   *+8           YES                                 79071
         OI    CVTTRACE+1,X'F0'   ENABLE TRACE                   79071
         XC    HCXTIME,HCXTIME  CLEAR WORK WORD                  79071
         LCTL  R8,R8,HCXTIME  RESET MASK BITS TO ZERO            79071
         TM    HCTFLG1,HCTONEXT  CALLED FROM EXIT ?              79075
         BZ    EXITHCT       NO; DO NOT CHANGE MODE              79075
         PGFREE R,A=(R7)     MAKE WORK AREA PAGEABLE             79071
         MODESET MODE=PROB   RESTORE ?                           79071
.VS2     SPACE 1                                                 79071
EXITHCT  NI    HCTFLG1,255-HCTINCTL  TURN OFF CONTROL BIT
         L     R3,HCX@CVT    LOAD CVT - DON'T TRUST ANYONE
         NI    CVTGTFST,255-CVTSTATE  DITTO
         LM    R0,R14,HCXSAVE  RESTORE REGS
         LA    R15,4         RETURN FOR BRANCH HOOK
         BR    R14           RETURN
         SPACE 1
ROUTBHCT LR    R15,R0        GET HCT ADDRESS
         STM   R0,R14,HCXSAVER-&N.(R15)  SAVE REGISTERS
         LR    R7,R15        LOAD TRUE HCT ADDRESS
         TM    HCTFLG1,HCTACTIV  HCT ACTIVE ?
         BNZ   ROUTBHCU      YES; PROCEED
         LM    R0,R14,HCXSAVER  ELSE RESTORE
         LA    R15,4         SET BAD RETURN
         BR    R14           RETURN NOW
ROUTBHCU XC    HCXPSW,HCXPSW  CLEAR PSW
         ST    R1,HCXPSW+4   FAKE PSW
         AIF  ('&SYSTEM' EQ 'MVT' OR '&SYSTEM' EQ 'MFT').NOLOB   79075
         MVC   MCCLS370(1),1(R1)  SET FAKE CLASS CODE            79075
         MVC   MCCOD370+2(2),2(R1)  SET TYPE                     79075
.NOLOB   B     ROUTCHCT      JOIN COMMON CODE                    79075
         SPACE 1
ROUTHCT  STM   R0,R14,HCXSAVER-&N.(R1)  SAVE REGISTERS
         LR    R2,R0         SAVE PARM LIST
         LR    R7,R1         LOAD HCT ADDRESS
         MVC   HCX@TIME(4*4),0(R2)  SAVE PARMS
         MVC   HCXPSW,X'28'  SAVE PSW
ROUTCHCT L     R3,HCX@CVT    LOAD CVT
         TM    HCTFLG1,HCTINCTL  RECURSION ?
         BNZ   ROUTQUIT      YES; QUIT IMMEDIATELY
         MVC   HCXSAVE(64),HCXSAVER  SET RECOVERY REGISTERS
         MVC   HCXPSWSV(16),X'20'   SAVE OLD PSWS
         OI    HCTFLG1,HCTINCTL+HCTACTIV  SHOW CONTROL
         OI    CVTGTFST,CVTSTATE  SHOW IN CONTROL
         LM    R1,R2,HCX@SVCS  GET SVC/PI SAVE AREAS
         MVC   HCXPISAV(64),0(R2)
         MVC   HCXSVSAV(64),0(R1)  MOVE REGS
         TM    HCTGTFST,HCTSTATE  ACTIVE ?
         BZ    EXITHCT       NO; JUST EXIT
         AIF   ('&SYSTEM' NE 'MVT' AND '&SYSTEM' NE 'MFT').SV1   79075
         TM    HCTFLG1,HCTTODCK  REAL TOD CLOCK ?
         BZ    ROUTCTIM      NO
.SV1     STCK  HCXTIME       SET TIME                            79075
         BNH   ROUTCTIX      STORED OK
         XC    HCXTIME,HCXTIME  ELSE ZERO
         AIF   ('&SYSTEM' NE 'MVT' AND '&SYSTEM' NE 'MFT').SV2   79075
         B     ROUTCTIX
ROUTCTIM L     R15,HCX@TIME  GET TIMER ROUTINE ENTRY
         XR    R1,R1         SIGNAL TIMER UNITS
         BALSR R14,R15       GET TIME
ROUTCTIR LA    R7,0(,R14)    LOAD CLEAN ADDRESS
         LA    R14,ROUTCTIR-&N  GET OFFSET
         SLR   R7,R14        GET HCT ADDRESS BACK
         ST    R0,HCXTIME+4  SAVE TIME
ROUTCTIX TM    HCXPSW+3,X'40'  REAL HOOK ?
         BZ    ROUTFAKE
         TM    HCTGTFST,HCTMCTYP  REAL HOOK ?
         BZ    ROUTFAKE      NO
         AGO   .SV3                                              79075
.SV2     ANOP  ,                                                 79075
ROUTCTIX DS    0H ,                                              79075
.SV3     ANOP  ,                                                 79075
MCCLS370 EQU   X'95'
MCCOD370 EQU   X'9C'
         PACK  HCXHOOK(1),MCCLS370
         MVN   HCXHOOK(1),MCCOD370+2
         MVC   HCXHOOK+1(1),MCCOD370+3  PACKED 4 DIGIT CLASS/CODE
         AIF   ('&SYSTEM' NE 'MVT' AND '&SYSTEM' NE 'MFT').SV4   79075
         B     ROUTREAL
ROUTFAKE L     R6,HCXPSW+4   LOAD PSW ADDRESS
         PACK  HCXHOOK(1),1(1,R6)  GET CLASS CODE
         TM    2(R6),X'F0'   ANY BASE ?
         BZ    ROUTFAKM      NO; MOVE AS IS
         XR    R15,R15
         IC    R15,2(,R6)    GET BASE
         SRL   R15,4         ONLY
         SLL   R15,2         *4 FOR OFFSET
         L     R15,HCXSAVE(R15)  GET TRUE VALUE
         ST    R15,HCXWORK   SAVE IT
         LA    R6,HCXWORK    POINT TO IT
ROUTFAKM MVN   HCXHOOK(1),2(R6)
         MVC   HCXHOOK+1(1),3(R6)
ROUTREAL CLI   HCXHOOK,X'1A'  CONTROL HOOK ?
         BNE   ROUTPROG      NO; PROCESS
         TM    HCXPSW+1,X'F0'  KEY ZERO ?
         BNZ   ROUTPROG      NO; NOT CONTROL
         CLI   HCXHOOK+1,X'FC'  WHICH ?
         BL    ROUTPROG      DON'T KNOW
         BE    ROUTQUIT      STOP HOOK
         CLI   HCXHOOK+1,X'FF' INIT/DE-INIT
         BE    ROUTQUIT      SHOULDN'T HAPPEN
         B     ROUTMINE      SEE IF OUR TCB                      79075
ROUTPROG CLI   HCXHOOK,X'DF'  PROGRAM CHECK ?
         BNE   ROUTUSER      NO; DO USER PROCESSING
         CLI   HCXHOOK+1,X'FD'  PROGRAM CHECK ?
         BNE   ROUTUSER      NO
         TM    HCXPSW+3,255-X'40'  INT. OTHER THAN HOOK ?
         BZ    ROUTUSER      NO; CONTINUE
ROUTMINE CLC   HCTTCB+1(3),HCXPISAV+5  OUR TCB ?                 79075
         BE    ROUTQUIT      YES; CHECK PROGRAM
         AGO   .SV5                                              79075
.SV4     CLI   HCXHOOK,X'90'  CONTROL/ABEND HOOK ?               79075
         BNE   ROUTPROG      NO; SEE IF PROG. INTERRUPT          79075
         CLI   HCXHOOK+1,X'02'  ABEND HOOK ?                     79075
         BNE   ROUTQUIT      NO; SHOULD NOT HAVE GOTTEN          79075
         B     ROUTMINE      SEE IF THIS TASK                    79075
ROUTPROG CLI   HCXHOOK,X'51'  PROGRAM INTERRUPT ?                79075
         BNE   ROUTUSER      NO; PROCESS                         79075
         TM    HCXPSW+3,255-X'C0'  OTHER THAN PER/HOOK ?         79075
         BZ    ROUTUSER      NO; PROCEED                         79075
ROUTMINE CLC   HCTTCB+1(3),HCXPISAV+5  OUR TCB ?                 79075
         BE    ROUTQUIT      YES; QUIT                           79075
.SV5     ANOP  ,                                                 79075
ROUTUSER DS    0H            START OF USER CODE
         MEND  ,
