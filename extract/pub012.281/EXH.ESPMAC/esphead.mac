         MACRO
&MODULE ESPHEAD &R0=,&R1=,&HEADER=,&REENT=Y,&BASE=R12,&CLEAR=YES,      *
               &LOC=,&PATCH=,&ENTRY=,&SP=0                     GP00126
         GBLB  &RENTFLG
         GBLC  &CPYWRIT
         GBLC  &VERSION
         GBLC  &MODNAME
         LCLC  &LABEL,&NAME
         LCLC  &PBAS,&CBAS,&FBAS,&LBAS                          GP99357
         LCLB  &FGPATCH,&FGENT,&FGENTB                          GP00126
&FGPATCH SETB  (T'&PATCH EQ 'N')
&FGENT   SETB  (T'&ENTRY NE 'O')                                GP00126
         LCLA  &I,&J,&K                                         GP99357
         SPACE 1
&LABEL   SETC  'ZZM'.'&SYSNDX'    PREFIX FOR GENERATED LABELS
&NAME    SETC  '&MODULE'
&MODNAME SETC  '&MODULE'
&NAME    CSECT ,
&NAME    AMODE 31
&NAME    RMODE 24
         AIF   ('&HEADER' EQ 'TABLE').TABLE1
         SPACE 1
         USING *,R15
         B     &LABEL                  BRANCH AROUND HEADER INFO
.TABLE1  ANOP  ,
         DC    AL1(&LABEL-&NAME)       LENGTH(HEADER TEXT)
         DC    CL9'&NAME'              EYE CATCHER - MODULE NAME
         DC    CL9'&SYSDATE'           EYE CATCHER - ASSEMBLE DATE
         DC    CL6'&VERSION'           ESP VERSION N.NN
         DC    C'&CPYWRIT'             COPYRIGHT INFO
         AIF   ('&HEADER' NE 'TABLE').NOTTAB
&LABEL   DC    0D'0'                   DOUBLEWORD ALIGNMENT FOR TABLE
.MEXIT   MEXIT ,                                                GP00126
.NOTTAB  ANOP  ,
&LABEL   DC    0H'0'                   TAG FOR BRANCH AROUND TEXT
         AIF   ('&HEADER' EQ 'TABLE').MEXIT
         SPACE 1
         STM   R14,R12,12(R13)         SAVE REGISTERS
         AIF   (NOT &FGENT).NOENT                               GP00126
&I       SETA  0                                                GP00126
&K       SETA  N'&ENTRY                                         GP00126
         SR    R2,R2         FLAG MAIN ENTRY                    GP00126
         B     BAS&MODULE-&NAME.(,R15)                          GP00126
.ENTLOOP AIF   (&I GE &K).DONENT                                GP00126
&I       SETA  &I+1                                             GP00126
&PBAS    SETC  '&ENTRY(&I)'                                     GP00126
         AIF   (NOT &FGENTB).NOENB                              GP00126
         B     COM&MODULE-&PBAS.(,R15)                          GP00126
&FGENTB  SETB  0                                                GP00126
.NOENB   AIF   ('&PBAS' EQ '').ENTLOOP                          GP00126
         ENTRY &PBAS                                            GP00126
&PBAS    STM   R14,R12,12(R13)                                  GP00126
         LA    R2,&I                                            GP00126
&FGENTB  SETB  1                                                GP00126
         AGO   .ENTLOOP                                         GP00126
.DONENT  ANOP  ,                                                GP00126
COM&MODULE BASR R15,0                                           GP00126
         LA    R0,*-&NAME                                       GP00126
         SLR   R15,R0                                           GP00126
BAS&MODULE DS  0H                                               GP00126
.NOENT   ANOP  ,                                                GP00126
.*   CODE CHANGED TO ALLOW LIST OF BASE REGISTERS: BASE=(R1,R2...)
&K       SETA  N'&BASE                                          GP99357
&FBAS    SETC  '&BASE(1)'                                       GP99357
         AIF   (&K GE 1).HAVBASE                                GP99357
&FBAS    SETC  'R12'         SET DEFAULT BASE                   GP99357
.HAVBASE AIF   (&K LE 1).OLDBASE                                GP99357
&PBAS    SETC  '&FBAS'                                          GP99357
&I       SETA  1                                                GP99357
&CBAS    SETC  '&FBAS'                                          GP99357
         DROP  R15                                              GP99357
         LR    &FBAS,R15     LOAD FIRST BASE                    GP99357
         LA    &BASE(&K),2048  LOAD INCREMENT                   GP99357
&LBAS    SETC  '&BASE(&K)'                                      GP99357
.BASLOOP AIF   (&I GE &K).USEBASE                               GP99357
&I       SETA  &I+1                                             GP99357
&PBAS    SETC  '&FBAS'                                          GP99357
&FBAS    SETC  '&BASE(&I)'                                      GP99357
&CBAS    SETC  '&CBAS'.','.'&FBAS'                              GP99357
         LA    &FBAS,2048(&LBAS,&PBAS)  SET NEXT BASE           GP99357
         AGO   .BASLOOP                                         GP99357
.USEBASE USING &NAME,&CBAS  DECLARE BASES                       GP99357
         AGO   .COMBASE                                         GP99357
.OLDBASE AIF   ('&FBAS' EQ '15' OR '&FBAS' EQ 'R15').COMBASE    GP99357
         DROP  R15                                              GP99357
         LR    &FBAS,R15               LOAD THE BASE REGISTER   GP99357
         USING &NAME,&FBAS             TELL THE ASSEMBLER       GP99357
.COMBASE AIF   ('&REENT' EQ 'N').NOREENT
&RENTFLG SETB  1                       SET REENT FOR MODEXIT
         L     R0,=A(SAVEEND-SAVE)     SAVE AREA AND ANY WORK AREA
         STORAGE OBTAIN,LENGTH=(0),LOC=&LOC
         AGO   .REENT
         SPACE 1
.NOREENT ANOP  ,
&RENTFLG SETB  0                       SET NON REENT FOR MODEXIT
         LA    R1,SAVE                 A(NON REENT DATA EXPANSION)
.REENT   ANOP  ,
         AIF   (T'&CLEAR EQ 'O').UNCLEAR                        GP00117
         AIF   ('&CLEAR'(1,1) NE 'Y').UNCLEAR                   GP00117
         AIF ('&BASE(1)' EQ 'R15' OR '&BASE(1)' EQ '15').UNCLEAR  99357
         AIF ('&BASE(1)' EQ 'R14' OR '&BASE(1)' EQ '14').UNCLEAR  99357
         AIF ('&BASE(1)' EQ 'R13' OR '&BASE(1)' EQ '13').UNCLEAR  99357
         AIF ('&BASE(1)' EQ 'R1' OR '&BASE(1)' EQ '1').UNCLEAR  GP99357
         AIF   ('&REENT' NE 'N').RENTCLR                        GP99357
         L     R0,=A(SAVEEND-SAVE)     SAVE AREA AND WORK LEN   GP99357
.RENTCLR LR    R14,R1        SAVE SAVE AREA ADDRESS             GP99357
         LR    R1,R0         COPY THE LENGTH                    GP99357
         LR    R0,R14        GET THE ADDRESS BACK               GP99357
         SR    R15,R15       CLEAR FROM LENGTH                  GP99357
         MVCL  R0,R14        CLEAR SAVE/WORK AREA               GP99357
         ST    R13,4(,R14)   STORE FORWARD POINTER              GP99357
         ST    R14,8(,R13)   STORE BACKWARD POINTER             GP99357
         LR    R13,R14       A(NEW SAVEAREA)                    GP99357
         USING SAVE,R13                                         GP99357
         AIF   (K'&R0 EQ 0 AND K'&R1 EQ 0).CMCLEAR              GP99357
         L     R14,4(,R13)   RESTORE OLD SAVE AREA FOR RELOAD   GP99357
         AGO   .CMCLEAR                                         GP99357
.UNCLEAR LR    R14,R13                 SAVE BACKWARD SAVEAREA POINTER
         LR    R13,R1                  A(NEW SAVEAREA)
         USING SAVE,R13
         XC    ESPSAVE(ESPSAVEL),ESPSAVE    CLEAR THE NEW SAVE AREA
         ST    R13,8(,R14)             STORE FORWARD POINTER
         ST    R14,4(,R13)             STORE BACKWARD POINTER
.CMCLEAR AIF   (NOT &FGENT).NOEL                                GP00126
         LR    R15,R2        RETURN ENTRY COUNTER
         L     R2,28(,R14)   RESTORE USER'S R2                  GP00126
.NOEL    AIF   (('&R0' NE '0' AND '&R0' NE 'R0') OR                    *
               ('&R1' NE '1' AND '&R1' NE 'R1')).CMREST         GP99357
         LM    &R0,&R1,20(R14)         RESTORE R0 AND R1 FROM SAVE
         AGO   .NOREST1                                         GP99357
.CMREST  AIF   (K'&R0 EQ 0).NOREST0
         L     &R0,20(,R14)            RESTORE REG 0 FROM SAVEAREA
.NOREST0 ANOP  ,
         AIF   (K'&R1 EQ 0).NOREST1
         L     &R1,24(,R14)            RESTORE REG 1 FROM SAVEAREA
.NOREST1 ANOP  ,
.*
         USING $ESPCVT,R11             $ESPCVT DSECT SETUP
         USING $TSB,R10                $TSB DSECT SETUP
         AIF   (NOT &FGPATCH).MEND                              GP00126
         B     BEG&MODULE                                       GP00126
ESPPATCH DC    &PATCH.S(*)                                      GP00126
BEG&MODULE DS  0H                                               GP00126
.MEND    MEND  ,                                                GP00126
