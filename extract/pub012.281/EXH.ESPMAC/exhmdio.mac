         MACRO ,
&L     EXHMDIO &DUMMY,&FBS=YES
         GBLC  &MODEL
XIOWORK  DS    0D
         USING *,R15
DONEXIT  STM   R14,R2,DSAVC
         LR    R2,R15
         DROP  R15
         USING XIOWORK,R2
*              LEAVE: GP MAY CHANGE HIS MIND (?) AGAIN.
*        LAT   R15,DONUNIT,LA=FW
*        BZ    *+6
*        BALSR R14,R15
         SPACE 1
.*             DO NOT REMOVE DEBUG CODE.
.*             IT WILL BE NECESSARY TO DO A REAL OPEN FOR
.*             NORMAL EXHIBIT IN THE FUTURE.
DCLOSE   CLOSE MF=(E,DOPENL)           CLOSE MOVED IN IF DEBUG OR VIO
         B     DONEXITX                RETURN
         ORG   DCLOSE
DFDEB    LM    R0,R1,DDEBL             GET DEB LENGTH AND ADDRESS
         LTR   R1,R1                   WAS THERE ANY ?
         BZ    DONEXITX                 NO - EXIT
         NUSE  DEB,R1
         L     R15,DEBTCBAD             GET TCB ADDESS
         NUSE  TCB,R15
         LA    R14,TCBDEB-(DEBDEBAD-DEBBASIC)
         USE   DEB,R15
         DROP  R1
DDEBLP   LR    R15,R14                 NON-NULL DEB POINTER ?
         LAT   R14,DEBDEBAD,DFM
         CR    R14,R1                   YES - POINTS TO OUR DEB ?
         BNE   DDEBLP                         NO  - TRY NEXT DEB
         SPACE 1
DUNCHN   MVC   DEBDEBB,DEBDEBB-DEBBASIC(R1)    UNCHAIN IT
*DFM  FREEMAIN R,LV=(0),A=(1)          FREE THE DEB
DFM      SVC   10
DONEXITX LM    R14,R2,DSAVC
         BR    R14
         DROP  R2
         EJECT ,
         USING XIOWORK,R7
         NEED  IOB
         SPACE 1
DREAD    STM   R9,R13,DSAVC            SAVE REGS OVER CONVERT CALL
         L     R1,DTTR                 GET REQUESTED TTR         ?????
         SL    R1,DTTOFF               CONVERT TO RELATIVE       ?????
         ST    R1,DTTRW                STASH FOR CONVERT         ?????
         LM    R15,R2,DCNVT            FOR TTR CONVERT
         NUSE  DEB,R1
         BALSR R14,R15                 INVOKE TTR TO MBBCCHHR CONVERT
         LTR   R15,R15                 TEST RETURN CODE
         LM    R9,R13,DSAVC            RESTORE REGS
         MVI   DIOECB,X'42'            ASSUME EXTENT VIOLATION RC
         BNZR  R9                      IS RETURN CODE OK ?
*                                       YES - SET UP FOR READ
DREAD1   MVI   DIOECB,0                ZERO I/O ECB
         L     R1,DEBSUCBA             GET UCB ADDESS
         NUSE  UCB,R1
         TM    UCBFL1,UCBNOTRD         DEVICE IN NOT READY STATUS ?
         BOR   R9                       YES - SIGNAL ERROR
         CLI   DVOL,C' '               WAS REQUEST WITH VOL-SER ??????
         BNH   DREADON                  NO - CONTINUE            ?????
         CLC   DVOL,UCBVOLI            IS VOLUME STILL MOUNTED ?
         BNER  R9                       NO - SIGNAL ERROR
         DROP  R1
DREADON  MVC   DNCCHOLD(9),DNCCH       COUNT & SECTOR FROM PREV. READ
         TM    DFLAG2,DFL1ST           FIRST I/O AFTER POINT ?
         BZ    DREADON1                 NO
         MVC   DCCWTIC2(4),DNEWTIC2     YES - CHANGE TIC TO READ CT.
         MVI   DSECTOLD,255            DISABLE SET SECTOR
         XR    R0,R0                   CLEAR FOR BCT
         IC    R0,DSEEKR               POINT TO PREVIOUS RECORD
         BCT   R0,*+8                  IS IT RO?
         MVI   DSECTOLD,0               YES - ORIENT TO INDEX MARKER
         STC   R0,DSEEKR               SAVE PREVIOUS R FOR READ COUNT
DREADON1 LA    R1,DIOB                 GET IOB ADDESS
         EXCP  (1)                      READ
         WAIT  ECBLIST=DECBLST         WAIT FOR I/O OR CANCEL
         CLI   DIOECB,X'7F'            NORMAL COMPLETION ?
         BNE   DIBAD                    NO - CHECK FURTHER
         MVC   DSEEKC(5),DNCCH         GET CCHHR OF NEXT RECORD
         NI    DFLAG2,255-DFL1ST       SHOW POINT DONE
         MVC   DCCWTIC2(4),DOLDTIC2    RESTORE 2ND TIC
DTOTTR   STM   R9,R13,DSAVC            SAVE
         LM    R1,R2,DDEB              GET DEB AND MBBCCHHR ADDESS
         L     R15,DPRLTV              GET MBBCCHHR TO TTR CONV. RTN.
         BALSR R14,R15                 CONVERT BACK TO TTR FORMAT
         ST    R0,DTTRW                STASH ACTUAL TTR          ?????
         AL    R0,DTTOFF               CONVERT TO RELATIVE TTR OFFSET?
         ST    R0,DTTR                 SET TTR FOR NEXT TIME     ?????
         LM    R9,R13,DSAVC            GET REGS BACK
         B     8(,R9)                  TAKE NORMAL RETURN
DIBAD    TM    DCSWSTAT,DCSWSUE        WAS THIS AN EOF ?
         BNZ   4(,R9)                   YES - EXIT WITH EOF INDICATION
         CLI   DIOECB,X'42'            END OF EXTENT ERROR ?
         BNER  R9                       NO - REPORT ERROR
         LAT   R1,DCSWNEXT-1,(R9)      I/O ERROR IF NEXT CCW PTR IS 0
         CLI   0(R1),DOPREADS          CCW AFTER READ COUNT MT?
         BNER  R9                       NO  - I/O ERROR
         XC    DNKEYLEN(3),DNKEYLEN     YES - SET WYLBUR FAKE EOF
         B     8(,R9)                  TREAT AS NORMAL COMPLETION
         SPACE 2
DLINE    AH    R10,LSIZE               POSITION TO NEXT LINE     88249
         C     R10,MSGAD               ROOM FOR ANOTHER LINE ?
         BL    4(,R4)                   YES - RETURN FOR MORE STUFF
         SPACE 1
DPAGE    TM    DFLAG1,DFLEND           LAST WRITE REQUEST ?
         BO    EXCYES                   YES - EXIT AFTER RITE
         XPOUT EXMORE
         MVI   REPLY,X'FF'             ENTER ONLY - SET FLAG
         CLC   DDCPRIN,REPLY+L'REPLY-80  IS IT A PRINT REQ. ?    ?????
         BE    DMORE+4                  YES - DON'T BLANK SCREEN BUFF.
DMORE    BALS  R14,BLANKER             CLEAR BUFFER
         L     R10,BUFAD               SET TO FIRST LINE
         BR    R4                      RETURN WITH NEW PAGE INDICATION
         EJECT ,
         CNOP  4,8
DIOECB   DC    F'0'
DIOB     DS    0D
DIOFLAG1 DC    AL1(IOBCMDCH+IOBUNREL)
DIOFLAG2 DC    AL1(0)
DSENSE   DC    XL2'0'
DECBPT   DS    0A
DIOECBCC DC    X'0'
DECBPB   DC    AL3(DIOECB)
DCSW     DS    0D
DIOFLAG3 DC    X'0'
DCSWNEXT DC    AL3(0)                  NEXT CCW FIELD OF CSW
DCSWSTAT DC    XL2'0'
DCSWSATN EQU   X'80'                   ATTENTION
DCSWSSM  EQU   X'40'                   STATUS MODIFIER
DCSWSCUE EQU   X'20'                   CONTROL UNIT END
DCSWSBSY EQU   X'10'                   BUSY
DCSWSCE  EQU   X'08'                   CHANNEL END
DCSWSDE  EQU   X'04'
DCSWSUC  EQU   X'02'                   UNIT CHECK
DCSWSUE  EQU   X'01'                   UNIT EXCEPTION
DCSWRSLN DC    H'0'
DSTART   DS    0F
DIOSIOCC DC    X'00'
DSTRTB   DC    AL3(DCCWSETC)
DDCBPT   DC    0A(0),X'0'
DDCBPB   DC    AL3(DDCB)
DRESTR   DS    0A
DREPOS   DC    X'00'
DRSTRB   DC    AL3(0)
DINCAM   DC    H'0'
DERRCT   DC    H'0'
DSEEK    DS    0D
DSEEKM   DC    X'0'
DSEEKB   DC    XL2'0'
DSEEKC   DC    XL2'0'
DSEEKH   DC    XL2'0'
DSEEKR   DC    XL1'0'
         SPACE 2
DOPWRITE EQU   X'01'                   OPCODES FOR WRITE
DOPREAD  EQU   X'02'                   OPCODES FOR READ
DOPDATA  EQU   X'04'                   OPCODES FOR DATA AREA
DOPKEY   EQU   X'08'                   OPCODES FOR KEY AREA
DOPCOUNT EQU   X'10'                   OPCODES FOR COUNT AREA
DOPID    EQU   X'10'                   OPCODES FOR COUNT AREA (SEARCH)
DOPEQ    EQU   X'20'                   OPCODES FOR SEARCH EQUAL
DOPGT    EQU   X'40'                   OPCODES FOR SEARCH GREATER
DOPMT    EQU   X'80'                   OPCODES FOR MULTI-TRACK
         SPACE 1
DOPSERCH EQU   X'01'                   OPCODES FOR SEARCH/SCAN
         SPACE 1
DOPTIC   EQU   X'08'
DOPSETC  EQU   X'23'                   OPCODE FOR SET SECTOR
DOPSIDE  EQU   DOPSERCH+DOPID+DOPEQ    SEARCH ID EQUAL
DOPRKD   EQU   DOPREAD+DOPKEY+DOPDATA  READ KEY & DATA
DOPRC    EQU   DOPREAD+DOPCOUNT        READ COUNT
DOPREADS EQU   X'22'                   OPCODE FOR READ SECTOR
         SPACE 1
DCCFCD   EQU   X'80'                   CHAIN DATA
DCCFCC   EQU   X'40'                   CHAIN COMMANDS
DCCFSLI  EQU   X'20'                   SUPPRESS LENGTH INDICATION
DCCFSKIP EQU   X'10'                   SKIP DATA TRANSFER
DCCFPCI  EQU   X'08'                   PROGRAM CONTROLLED INTERRUPT
DCCFIDA  EQU   X'04'                   INDIRECT DATA ADDRESS
         SPACE 1
DCCWSETC CCW   DOPSETC,DSECTOLD,DCCFCC,1
DCCWSIDE CCW   DOPSIDE,DSEEKC,DCCFCC,5
         CCW   DOPTIC,*-8,0,1
DCCWTIC2 CCW   DOPTIC,*+8,DCCFCC,8
DCCWDATA CCW   DOPRKD,DBUF,DCCFCC,DBUFN-DBUF
DLEN     EQU   *-2,2,C'H'              REQUESTED I/O LENGTH
DCCWRCT  CCW   DOPRC+DOPMT,DNCCH,DCCFCC,8
DCCWRSEC CCW   DOPREADS,DSECT,0,1
         SPACE 1
DOLDTIC2 DC    AL1(DOPTIC),AL3(DCCWDATA)
DNEWTIC2 DC    AL1(DOPRC),AL3(DNCCHOLD)
         SPACE 1
DNCCHOLD DC    XL8'0'                  CCHHR OF CURRENT RECORD
DSECTOLD DC    X'00'                   SECTOR TO START SEARCH ON
DNCCH    DC    XL5'0'                  CCHHR       OF NEXT RECORD
DNKEYLEN DC    XL1'0'                  KEY  LENGTH OF NEXT RECORD
DNDATLEN DC    H'0'                    DATA LENGTH OF NEXT RECORD
DSECT    DC    X'00'                   SECTOR OF NEXT RECORD
         ORG   ,
         SPACE 1
DOPENL   CLOSE (DDCB),MF=L
DDCB     DCB   DDNAME=DUMMY,DEVD=DA,DSORG=PS,MACRF=(E),EXLST=DEXLST,   *
               EODAD=DIBAD,RECFM=U
         ORG   DDCB+12
         DC    A(DDVTBL)              DEVICE TABLE ADDESS
         ORG   ,
DECBLST  DC    A(DIOECB)               I/O ECB  ADD.
DECBC    DC    A(0)                    CANCEL ECB ADD WITH HIGH X'80'
DEXLST   DC    0A(0),X'87',AL3(DBUF)   BUFFER DOUBLES AS JFCB
DSAVC    DC    5A(0)                   SAVE AREA FOR TTR CONVERT
DPRLTV   DC    A(0)                    MBBCCHHR TO TTR CONV. ROUTINE
DTTR     DC    F'0'                    RELATIVE TTR FOR I/O      ?????
DTTOFF   DC    F'0'                    CONVERSION - HASP ABS. TO  TTR
         SPACE 1
*              PARAMETERS FOR CONVERT ROUTINE:
DCNVT    DC    A(0)                    (15) ADD OF CONVERT ROUTINE
DTTRW    DC    F'0'                    (0)  ACTUAL TTR FOR I/O
DDEB     DC    A(0)                    (1)  DEB ADD
         DC    A(DSEEK)                (2)  MBBCCHHR ADD
         SPACE 1
DDEBL    DC    0A(0),X'F3',AL3(0)      DEB SUBPOOL AND LENGTH
DDEBA    DC    A(0)                    DEB GETMAIN ADDESS
*DONUNIT DC    A(0)                    ADDITIONAL ON UNIT POINTER
DDSORG   DC    X'0000'                 DSORG
DRECFM   DC    X'0'                    RECFM
DKEYLN   DC    X'0'                    KEYLEN
DLRECL   DC    H'0'                    LRECL
DBLKSI   DC    H'0'                    BLKSIZE
DDSN     DC    CL44' '                 DSNAME
DVOL     DC    CL6' '                  VOL-SER
DMEM     DC    CL8' '                  MEMBER NAME FOR SEL. RETRIEVAL
DMAXL    DC    AL2(DBUFN-DBUF)         MAXIMUM LENGTH AVAILABLE
DMAXMSZ  DC    AL2(DBUFN-DBUF)         ASSEMBLED MAX. SIZE AVAILABLE
DMAXR    DC    AL1(255,0)              MAX RECORD NUMBER ON A TRACK
DFLAG1   DC    X'0'                    PROCESSING FLAGS
DFLFIRST EQU   1                       1ST TIME - FOR SYNTAX CHECKING
DFLSECP  EQU   2                       SECOND POS. PARM RECEIVED
DFLHASP  EQU   4                       TTR  IN ABSOLUTE DISPL. (HASP)
DFLABS   EQU   8                       CCHH OPTION USED, VAL. IN DNCCH
DFLPDS   EQU   16                      DATASET IS A PDS
DFLSLOG  EQU   X'20'                   LOG DS / ONE DEB - TWO DATASETS
DFLDEBUG EQU   X'40'                   RUNNING IN DEBUG MODE IF ON
DFLEND   EQU   X'80'                   EOF OR OTHER TERMINATION COND.
DFLAG2   DC    X'0'
DFL1ST   EQU   1                       FIRST TIME AFTER POINT
DFLFBS   EQU   2                       FIXED BLOCK STANDARD
DFLINPUT EQU   4                       INPUT ONLY
DFLRPS   EQU   8                       RPS SUPPORT
DFLUC    EQU   16                      DISPLAY ONLY UPPER CASE DATA
DFLNOSEC EQU   32                      IGNORE PASSWORD PROTECTION
DFLPRMPT EQU   64                      PROMPT USER FOR PROPER PASSWORD
DFLENQ   EQU   128                     ENQ ON SYSDSN
DNAME    DC    CL3' '                  NAME OF I/O FORMATTING ROUTINE
DDCPRIN  DC    C'PRI'                  VERB FOR PRINT FUNCTION   ?????
         DS    0H
DDVTBL   DC    XL12'0'                DEVICE TABLE
DTKCYL   EQU   DDVTBL+2               NO. OF TRACKS / CYLINDER
         SPACE 2
DPARM    DC    23D'0'                  MODULE WORK AREA
         SPACE 2
DBUF     DS    0D            I/O BUFFER, ALSO LOCATE/OBTAIN WORK AREA
         ORG   DBUF+320                FORCE THE MINIMUM
         DC    F'0'                   NECESSARY MODULE SIZE
DBUFN    EQU   *
         ORG   ,
         MEND  ,
