         TITLE '********** IDCTR01-  TRACE FUNCTION SUPPORT ROUTINE  ***
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCTR01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCTR01   77.132'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @11,0                                               0002
@PSTART  LA    @12,4095(,@11)                                      0002
         USING @PSTART,@11                                         0002
         USING @PSTART+4095,@12                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @10,@01                                             0002
         USING @DATD,@10                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @10,8(,@13)                                         0002
         LR    @13,@10                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0302
*/*  *****************************************************   @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*     TRACE MAINLINE ROUTINE                               @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*     MESSAGES ISSUED THIS ROUTINE -                       @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*       IDC0001I - FUNCTION SUCCESSFULLY COMPLETED         @Y30LB01*/
*/*       IDC3003I - FUNCTION FAILED TO COMPLETE             @Y30LB01*/
*/*       IDC3004I - FUNCTION FAILED TO GETMAIN              @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*  *****************************************************   @Y30LB01*/
*                                                                  0302
*                                   /*                       @Y30LB01*/
*   OLDERID2=NEWERID2;                                             0302
         L     @15,@PC00001                                        0302
         L     @14,GDTTR2(,@15)                                    0302
         MVC   @TS00001(95),NEWERID2(@14)                          0302
         MVC   OLDERID2(95,@14),@TS00001                           0302
*   NEWID2='TRAA';                  /* SET TRACE ID          @Y30LB01
*                                                            @Y30LB01*/
         MVC   NEWID2(4,@14),@CC01312                              0303
*   IF GDTDBG=NULLPTR THEN                                         0304
         L     @15,GDTDBG(,@15)                                    0304
         LTR   @15,@15                                             0304
         BZ    @RT00304                                            0304
*     ;                                                            0305
*   ELSE                                                           0306
*     CALL IDCDB010(GDTTBL,'TRAA'); /* DUMP MEMORY           @Y30LB01
*                                                            @Y30LB01*/
         L     @15,@PC00001                                        0306
         ST    @15,@AL00001                                        0306
         LA    @14,@CC01312                                        0306
         ST    @14,@AL00001+4                                      0306
         MVI   @AL00001+4,X'80'                                    0306
         L     @15,GDTDBG(,@15)                                    0306
         LA    @01,@AL00001                                        0306
         BALR  @14,@15                                             0306
*   DDSTRU=ADDR(PRINTTAB);          /* SET UPRINT AREA PTR   @Y30LB01*/
@RT00304 LA    @15,PRINTTAB                                        0307
         ST    @15,DDSTRU                                          0307
*   SWITCHES=''B;                   /* CLEAR INTERNAL SW-S   @Y30LB01*/
*                                                                  0308
         MVI   SWITCHES,X'00'                                      0308
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUEST IS FOR TRACE ON OR TRACE OFF THEN          @Y30LB01*/
*   /* A CALL WILL BE MADE TO TRACESET PROC                  @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0309
*   IF ADDR(ZXON)^=NULLPTR×         /* TRACE ON REQUESTED    @Y30LB01*/
*       ADDR(ZXOFF)^=NULLPTR THEN   /* TRACE OFF REQUESTED   @Y30LB01*/
         SLR   @15,@15                                             0309
         L     @14,@PC00001+4                                      0309
         C     @15,FDTPTR(,@14)                                    0309
         BNE   @RT00309                                            0309
         C     @15,FDTPTR+4(,@14)                                  0309
         BE    @RF00309                                            0309
@RT00309 DS    0H                                                  0310
*     DO;                           /* STOP REQUEST. CALL    @Y30LB01*/
*       CALL TRACESET;              /* TRACESET SUBROUTINE   @Y30LB01*/
         BAL   @14,TRACESET                                        0311
*       RESPECIFY                                                  0312
*         RTNREG RSTD;                                             0312
*       TESTRC=RTNREG;                                             0313
         STH   RTNREG,TESTRC                                       0313
*       RESPECIFY                                                  0314
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01*/
*     END;                          /* END TRACE SET CALL    @Y30LB01*/
*                                                                  0315
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUEST WAS FOR TRACE DUMP THIS CODE WILL BE       @Y30LB01*/
*   /* EXECUTED WHICH MAKES CALL TO TRACEDMP PROC.           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   ELSE                            /* TRACE DUMP            @Y30LB01*/
*     DO;                           /* FUNCTION              @Y30LB01*/
         B     @RC00309                                            0316
@RF00309 DS    0H                                                  0317
*       CALL TRACEDMP;              /* DUMP TRACE SUBROUTINE @Y30LB01*/
         BAL   @14,TRACEDMP                                        0317
*       RESPECIFY                                                  0318
*         RTNREG RSTD;                                             0318
*       TESTRC=RTNREG;                                             0319
         STH   RTNREG,TESTRC                                       0319
*       RESPECIFY                                                  0320
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01*/
*     END;                          /* END TRACE DUMP CALL   @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0321
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP PARAMETERS FOR UPRINT                          @Y30LB01*/
*   /* UPRINT MESSAGE IDC0001I FOR LASTCOND < 12             @Y30LB01*/
*   /* UPRINT MESSAGE IDC3003I FOR LASTCOND >= 12            @Y30LB01*/
*   /* UPRINT MESSAGE IDC3004I FOR GETMAIN FAILURE           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*                                   /*                       @Y30LB01*/
*   DDSTRU=ADDR(PRINTTAB);          /* UPRINT PARM LIST      @Y30LB01*/
@RC00309 LA    @15,PRINTTAB                                        0322
         ST    @15,DDSTRU                                          0322
*   PRINTTAB=''B;                   /* NULL PARM LIST AREA   @Y30LB01*/
*                                                                  0323
         XC    PRINTTAB(20),PRINTTAB                               0323
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A TERMINAL ERROR IS RECEIVED AND THE GET MAIN      @Y30LB01*/
*   /* FAIL SWITCH IS SET THEN UPRINT IDC3004I MSG           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0324
*   IF LASTCOND>=LASTCC12&          /* BAD RETURN            @Y30LB01*/
*       GMAINF=ON THEN              /* GETMAIN FAILURE       @Y30LB01*/
         L     @14,@PC00001+8                                      0324
         LH    @14,LASTCOND(,@14)                                  0324
         C     @14,@CF00567                                        0324
         BL    @RF00324                                            0324
         TM    GMAINF,B'10000000'                                  0324
         BNO   @RF00324                                            0324
*     DARGSENT=MSG3004I;            /* MESSAGE UV04          @Y30LB01*/
*                                                                  0325
         MVI   DARGSENT(@15),X'04'                                 0325
*   /*****************************************************************/
*   /*                                                               */
*   /* TERMINAL ERROR BUT NOT DUE TO GET MAIN FAILURE,       @Y30LB01*/
*   /* THEN UPRINT IDC3003I MSG.                             @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0326
*   ELSE                            /* FUNCTION              @Y30LB01*/
*     IF LASTCOND>=LASTCC12 THEN    /* NON GETMAIN FAILURE   @Y30LB01*/
         B     @RC00324                                            0326
@RF00324 L     @15,@PC00001+8                                      0326
         LH    @15,LASTCOND(,@15)                                  0326
         C     @15,@CF00567                                        0326
         BL    @RF00326                                            0326
*       DARGSENT=MSG3003I;          /* MESSAGE UV03          @Y30LB01*/
*                                                                  0327
         L     @01,DDSTRU                                          0327
         MVI   DARGSENT(@01),X'03'                                 0327
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN NOT TERMINAL THEN UPRINT IDC0001I MSG.         @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0328
*     ELSE                          /* FUNCTION COMPLETED    @Y30LB01*/
*       DARGSENT=MSG0001I;          /* FAILED                @Y30LB01*/
         B     @RC00326                                            0328
@RF00326 L     @01,DDSTRU                                          0328
         MVI   DARGSENT(@01),X'01'                                 0328
*   DARGSMOD=UNIVMSG;               /* MESSAGE MODULE ID     @Y30LB01*/
@RC00326 DS    0H                                                  0329
@RC00324 L     @15,DDSTRU                                          0329
         MVC   DARGSMOD(3,@15),@CC01276                            0329
*   DARGDBP=ADDR(LASTCOND);         /* PTR TO INSERT         @Y30LB01*/
         L     @14,@PC00001+8                                      0330
         ST    @14,DARGDBP(,@15)                                   0330
*   DARGILP=LENGTH(LASTCOND);       /* LENGTH OF INSERT      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0331
         MVC   DARGILP(2,@15),@CH00153                             0331
*   /*****************************************************************/
*   /*                                                               */
*   /* UPRINT CALL TO PRINT MESSAGE                          @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* PRINT MESSAGE    @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0332
         L     @15,@PC00001                                        0332
         ST    @15,@AL00001                                        0332
         LA    @14,@CF00115                                        0332
         ST    @14,@AL00001+4                                      0332
         LA    @14,DDSTRU                                          0332
         ST    @14,@AL00001+8                                      0332
         MVI   @AL00001+8,X'80'                                    0332
         L     @15,GDTPRT(,@15)                                    0332
         LA    @01,@AL00001                                        0332
         BALR  @14,@15                                             0332
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO AMS EXECUTIVE WITH RETURN CODE SET          @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0333
*                                   /*                       @Y30LB01*/
*                                                                  0333
*   /*****************************************************************/
*   /*                                                               */
*   /* UDUMP CALL TO DIAGNOSTIC DUMP REGION                  @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0333
*   IF GDTDBG=NULLPTR THEN                                         0333
         L     @15,@PC00001                                        0333
         L     @15,GDTDBG(,@15)                                    0333
         LTR   @15,@15                                             0333
         BZ    @RT00333                                            0333
*     ;                                                            0334
*   ELSE                                                           0335
*     CALL IDCDB010(GDTTBL,'TRAZ'); /* DUMP MEMORY           @Y30LB01
*                                      AT EXIT               @Y30LB01*/
*                                                                  0335
         L     @15,@PC00001                                        0335
         ST    @15,@AL00001                                        0335
         LA    @14,@CC01316                                        0335
         ST    @14,@AL00001+4                                      0335
         MVI   @AL00001+4,X'80'                                    0335
         L     @15,GDTDBG(,@15)                                    0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*   /*****************************************************************/
*   /*                                                               */
*   /* UEPIL MACRO                                           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0336
*   CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);/* RETURN TO CALLER @Y30LB01*/
@RT00333 L     @15,@PC00001                                        0336
         ST    @15,@AL00001                                        0336
         LA    @14,MODID                                           0336
         ST    @14,@AL00001+4                                      0336
         L     @14,@PC00001+8                                      0336
         ST    @14,@AL00001+8                                      0336
         MVI   @AL00001+8,X'80'                                    0336
         L     @15,GDTEPL(,@15)                                    0336
         LA    @01,@AL00001                                        0336
         BALR  @14,@15                                             0336
*                                                                  0337
*/*******************************************************    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*  PROCEDURE NAME - TRACESET                               @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*  FUNCTION - USES USSC TO ISSUE ICBTRACE MACRO TO         @Y30LB01*/
*/*             ACTIVATE AND DEACTIVATE THE MSC TRACE        @Y30LB01*/
*/*             FACILITY.                                    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*  INPUT - GDTTBL,FDTTBL                                   @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*  OUTPUT - LASTCOND = 0 SUCCESSFUL                        @Y30LB01*/
*/*           LASTCOND = 4 TRACE ALREADY AS REQUESTED        @Y30LB01*/
*/*           LASTCOND = 12 FUNCTION FAILED                  @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*******************************************************    @Y30LB01*/
*                                                                  0337
*                                   /*                       @Y30LB01*/
*TRACESET:                                                         0337
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Y30LB01*/
@EL00001 L     @13,4(,@13)                                         0337
@EF00001 L     @00,@SIZDATD                                        0337
         LR    @01,@10                                             0337
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0337
         BR    @14                                                 0337
TRACESET DS    0H                                                  0338
*                                                                  0338
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE CALLERS RETURN ADDRESS AND SET INTERNAL TRACE    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0338
*   RESPECIFY                                                      0338
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
*   RETADDR=REG14;                  /* SAVE RETURN ADDR      @Y30LB01*/
         ST    REG14,RETADDR                                       0339
*   RESPECIFY                                                      0340
*     REG14 UNRSTD;                 /* RELEASE REG 14        @Y30LB01*/
*   OLDERID2=NEWERID2;                                             0341
         L     @15,@PC00001                                        0341
         L     @14,GDTTR2(,@15)                                    0341
         MVC   @TS00001(95),NEWERID2(@14)                          0341
         MVC   OLDERID2(95,@14),@TS00001                           0341
*   NEWID2='TRAC';                  /* SET TRACE ID          @Y30LB01*/
*                                                                  0342
         MVC   NEWID2(4,@14),@CC01320                              0342
*   /*****************************************************************/
*   /*                                                               */
*   /* GET TIME DATE FOR ICBTRACE MACRO BY UTIME             @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0343
*                                   /*                       @Y30LB01*/
*   CALL IDCSATI0(GDTTBL,TRTIME,TRDATE,HSECOND);/* GET TIME/DATE   0343
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0343
         ST    @15,@AL00001                                        0343
         LA    @14,TRTIME                                          0343
         ST    @14,@AL00001+4                                      0343
         LA    @14,TRDATE                                          0343
         ST    @14,@AL00001+8                                      0343
         LA    @14,HSECOND                                         0343
         ST    @14,@AL00001+12                                     0343
         MVI   @AL00001+12,X'80'                                   0343
         L     @15,GDTTIM(,@15)                                    0343
         LA    @01,@AL00001                                        0343
         BALR  @14,@15                                             0343
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE ICBTRACE PARMS TRACLIST AND DUMP       @Y30LB01*/
*   /* THE PARMS BEFORE ISSUING USSC                         @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0344
*   TRLSTPTR=ADDR(PARMLST);         /* SET PARM PTR          @Y30LB01*/
         LA    @15,PARMLST                                         0344
         ST    @15,TRLSTPTR                                        0344
*   TRACLIST=''B;                   /* CLEAR LIST            @Y30LB01*/
         XC    TRACLIST(16,@15),TRACLIST(@15)                      0345
*   IF ADDR(ZXOFF)=NULLPTR THEN     /* REQUEST IS TRACE ON   @Y30LB01*/
         L     @14,@PC00001+4                                      0346
         L     @14,FDTPTR+4(,@14)                                  0346
         LTR   @14,@14                                             0346
         BNZ   @RF00346                                            0346
*     TRACEON=ON;                   /* SET ON FLAG           @Y30LB01*/
         OI    TRACEON(@15),B'10000000'                            0347
*   TRACTIM=TRDTETME;               /* SET DATE TIME FIELD   @Y30LB01*/
*                                                                  0348
@RF00346 L     @01,TRLSTPTR                                        0348
         MVC   TRACTIM(8,@01),TRDTETME                             0348
*   /*****************************************************************/
*   /*                                                               */
*   /* USING DMPSTART, DMPITEM, DMPEND MACROS, SET UP        @Y30LB01*/
*   /* DUMP PARMS TO DUMP ICBTRACE PARMS.                    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0349
*   IF GDTDBG=NULLPTR THEN                                         0349
         L     @15,@PC00001                                        0349
         L     @15,GDTDBG(,@15)                                    0349
         LTR   @15,@15                                             0349
         BZ    @RT00349                                            0349
*     ;                                                            0350
*   ELSE                                                           0351
*     DO;                                                          0351
*       DMPINDEX=ADDR(DUMPAREA);    /* ESTABLISH DUMP LIST   @Y30LB01*/
         LA    @15,DUMPAREA                                        0352
         ST    @15,DMPINDEX                                        0352
*       DMPITMNM='TRACLIST';                                       0353
         MVC   DMPITMNM(8,@15),@CC01321                            0353
*       DMPITMPT=ADDR(TRACLIST);                                   0354
         L     @14,TRLSTPTR                                        0354
         ST    @14,DMPITMPT(,@15)                                  0354
*       DMPITMLN=LENGTH(TRACLIST);                                 0355
         LA    @14,16                                              0355
         STH   @14,DMPITMLN(,@15)                                  0355
*       DMPITMTP='H';                                              0356
         MVI   DMPITMTP(@15),C'H'                                  0356
*       DMPINDEX=DMPINDEX+DMPELEMT; /* HEX DUMP INDICATOR    @Y30LB01*/
         ALR   @15,@14                                             0357
         ST    @15,DMPINDEX                                        0357
*       DMPTRM=DMPTRMVL;                                           0358
         MVI   DMPTRM(@15),X'FF'                                   0358
*     END;                          /* LIST TERMINATOR       @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0359
*   /*****************************************************************/
*   /*                                                               */
*   /* UDUMP CALL TO DIAGNOSTIC DUMP ICBTRACE PARMS          @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0360
*   IF GDTDBG=NULLPTR THEN                                         0360
@RT00349 L     @15,@PC00001                                        0360
         L     @15,GDTDBG(,@15)                                    0360
         LTR   @15,@15                                             0360
         BZ    @RT00360                                            0360
*     ;                                                            0361
*   ELSE                                                           0362
*     CALL IDCDB010(GDTTBL,'TRAG',ADDR(DUMPAREA));/* DIAG DUMP     0362
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0362
         L     @15,@PC00001                                        0362
         ST    @15,@AL00001                                        0362
         LA    @14,@CC01323                                        0362
         ST    @14,@AL00001+4                                      0362
         LA    @14,DUMPAREA                                        0362
         ST    @14,@AFTEMPS                                        0362
         LA    @14,@AFTEMPS                                        0362
         ST    @14,@AL00001+8                                      0362
         MVI   @AL00001+8,X'80'                                    0362
         L     @15,GDTDBG(,@15)                                    0362
         LA    @01,@AL00001                                        0362
         BALR  @14,@15                                             0362
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE ICBTRACE BY USSC MACRO                          @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0363
*                                   /*                       @Y30LB01*/
*   CALL IDCSASS0(GDTTBL,TRACEQ,TRLSTPTR,REASON);/* EXEC ICBTRACE  0363
*                                                            @Y30LB01*/
@RT00360 L     @15,@PC00001                                        0363
         ST    @15,@AL00001                                        0363
         LA    @14,TRACEQ                                          0363
         ST    @14,@AL00001+4                                      0363
         LA    @14,TRLSTPTR                                        0363
         ST    @14,@AL00001+8                                      0363
         LA    @14,REASON                                          0363
         ST    @14,@AL00001+12                                     0363
         MVI   @AL00001+12,X'80'                                   0363
         L     @15,GDTSSC(,@15)                                    0363
         LA    @01,@AL00001                                        0363
         BALR  @14,@15                                             0363
*   RESPECIFY                                                      0364
*     RTNREG RSTD;                                                 0364
*   TESTRC=RTNREG;                                                 0365
         STH   RTNREG,TESTRC                                       0365
*   RESPECIFY                                                      0366
*     RTNREG UNRSTD;                /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0366
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST RETURN CODE FROM USSC. SET LASTCOND AND IF THE   @Y30LB01*/
*   /* ICBTRACE FAILED CALL SSCMSG TO PRINT COMMON REASON    @Y30LB01*/
*   /* CODE MESSAGE.                                         @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0367
*                                   /*                       @Y30LB01*/
*   IF TESTRC=4 THEN                /* ICBTRACE FAILED       @Y30LB01*/
         LH    @15,TESTRC                                          0367
         LA    @14,4                                               0367
         CR    @15,@14                                             0367
         BNE   @RF00367                                            0367
*     DO;                           /* SET LASTCOND          @Y30LB01*/
*       IF REASID=ASREQ THEN        /* ALREADY AS REQUESTED  @Y30LB01*/
         CLI   REASID,127                                          0369
         BNE   @RF00369                                            0369
*         LASTCOND=LASTCC04;        /* SET LASTCOND TO 4     @Y30LB01*/
         L     @15,@PC00001+8                                      0370
         STH   @14,LASTCOND(,@15)                                  0370
*       ELSE                        /* OTHER FAILURE         @Y30LB01*/
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01
*                                                            @Y30LB01*/
         B     @RC00369                                            0371
@RF00369 L     @15,@PC00001+8                                      0371
         MVC   LASTCOND(2,@15),@CH00567                            0371
*       CALL SSCMSG(REASON);        /* CALL SSCMSG FOR MSG   @Y30LB01*/
@RC00369 LA    @15,REASON                                          0372
         ST    @15,@AL00001                                        0372
         LA    @01,@AL00001                                        0372
         BAL   @14,SSCMSG                                          0372
*     END;                          /*                       @Y30LB01*/
*                                                                  0373
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE REG 14 AND RETURN TO CALLER                   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0374
*   RESPECIFY                                                      0374
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
@RF00367 DS    0H                                                  0375
*   REG14=RETADDR;                  /* RESTORE REG 14        @Y30LB01*/
         L     REG14,RETADDR                                       0375
*   RETURN CODE(LASTCOND);          /* RETURN TO CALLER      @Y30LB01*/
         L     @09,@PC00001+8                                      0376
         LH    @15,LASTCOND(,@09)                                  0376
@EL00002 DS    0H                                                  0376
@EF00002 DS    0H                                                  0376
@ER00002 BR    @14                                                 0376
*   RESPECIFY                                                      0377
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   END TRACESET;                   /* END TRACESET PROC     @Y30LB01*/
*                                                                  0379
*/*******************************************************    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* PROCEDURE NAME - TRACEDMP                                @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* FUNCTION - SETS UP WORK FILE AND OUTPUT FILE FOR IO.     @Y30LB01*/
*/*            USES UEXCP FOR WORK FILE AND UOPEN FOR        @Y30LB01*/
*/*            OUTPUT FILE. USSC IS USED TO ACQUIRE THE      @Y30LB01*/
*/*            WORK DATASET WITH BIND, INHIBIT STAGE AND     @Y30LB01*/
*/*            DELAYED RESPONSE. USSC IS USED TO COPY THE    @Y30LB01*/
*/*            MSC TRACE TABLE DATA AREA(S). UGSPACE IS      @Y30LB01*/
*/*            USED TO GET STORAGE FOR THE INPUT/OUTPUT      @Y30LB01*/
*/*            I/O BUFFERS.                                  @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* INPUTS - FDTTBL,LASTCOND                                 @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* OUTPUTS - LASTCOND = 0 FOR SUCCESSFUL FUNCTION           @Y30LB01*/
*/*           LASTCOND = 4 FOR MAX DUMP WHEN CURR SPECIFIED  @Y30LB01*/
*/*           LASTCOND = 8 FOR PARTIAL DUMP WITH WARNINGS    @Y30LB01*/
*/*           LASTCOND = 12 FOR TERMINAL ERRORS - NO DUMP    @Y30LB01*/
*/*           GMAINF = ON FOR GETMAIN FAILURE                @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*******************************************************    @Y30LB01*/
*                                                                  0379
*TRACEDMP:                                                         0379
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Y30LB01*/
TRACEDMP DS    0H                                                  0380
*                                                                  0380
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE CALLERS RETURN ADDRESS AND SET INTERNAL TRACE    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0380
*   RESPECIFY                                                      0380
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
*   RETADDR=REG14;                  /* SAVE RETURN ADDR      @Y30LB01*/
         ST    REG14,RETADDR                                       0381
*   RESPECIFY                                                      0382
*     REG14 UNRSTD;                 /* RELEASE REG 14        @Y30LB01*/
*   OLDERID2=NEWERID2;                                             0383
         L     @15,@PC00001                                        0383
         L     @15,GDTTR2(,@15)                                    0383
         MVC   @TS00001(95),NEWERID2(@15)                          0383
         MVC   OLDERID2(95,@15),@TS00001                           0383
*   NEWID2='TRAD';                  /* SET TRACE ID          @Y30LB01*/
         MVC   NEWID2(4,@15),@CC01328                              0384
*   IOBPTR=NULLPTR;                 /* NULL UEXCP IO BLK PTR @Y30LB01*/
         SLR   @15,@15                                             0385
         ST    @15,IOBPTR                                          0385
*   IOCSPTR=NULLPTR;                /* NULL UOPEN IO BLK PTR @Y30LB01*/
         ST    @15,IOCSPTR                                         0386
*   INBLKPTR=NULLPTR;               /* NULL IO BUFFER PTR    @Y30LB01*/
         ST    @15,INBLKPTR                                        0387
*   CTMSGPTR=NULLPTR;               /* NULL PTR TO MSG AREA  @Y30LB01*/
*                                                                  0388
         ST    @15,CTMSGPTR                                        0388
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL PROC TRALLOC TO ALLOCATE VIRTUAL UNIT TO         @Y30LB01*/
*   /* WORK FILE AND GET THE WORK VOLUME SERIAL NUMBER.      @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0389
*   RESPECIFY                                                      0389
*     ALLAGL BASED(WALLPTR);        /* SET ALLAGL BASE       @Y30LB01*/
*   WALLPTR=ADDR(WALLOLST);         /* SET ALLAGL AREA PTR   @Y30LB01
*                                                            @Y30LB01*/
         LA    @15,WALLOLST                                        0390
         ST    @15,WALLPTR                                         0390
*   CALL TRALLOC;                   /* TRACE ALLO SUB-RTN    @Y30LB01
*                                                            @Y30LB01*/
         BAL   @14,TRALLOC                                         0391
*                                                                  0392
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE IS TO OPEN WORK DATASET                     @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0392
*   IF LASTCOND=0 THEN              /* IF LASTCOND IS 0      @Y30LB01*/
         L     @15,@PC00001+8                                      0392
         LH    @15,LASTCOND(,@15)                                  0392
         LTR   @15,@15                                             0392
         BNZ   @RF00392                                            0392
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*       WOPENLST=''B;               /* CLEAR EXOARG AREA     @Y30LB01*/
         XC    WOPENLST(34),WOPENLST                               0394
*       WEXOPTR=ADDR(WOPENLST);     /* SET PTR EXOARG AREA   @Y30LB01*/
         LA    @15,WOPENLST                                        0395
         ST    @15,WEXOPTR                                         0395
*       RESPECIFY                                                  0396
*         EXOARG BASED(WEXOPTR);    /* SET BASE              @Y30LB01*/
*                                                                  0396
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE THE UEXCP OPEN ARGUMENT LIST EXOARG    @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0397
*       EXOTAB=ON;                  /* OPEN FOR TABLE READ   @Y30LB01*/
         OI    EXOTAB(@15),B'10000000'                             0397
*       EXOREAD=ON;                 /* OPEN FOR READ         @Y30LB01*/
         OI    EXOREAD(@15),B'10000000'                            0398
*       IF WALLOC^=ON THEN          /* NOT DYNAM ALLOCATED   @Y30LB01*/
         TM    WALLOC,B'01000000'                                  0399
         BO    @RF00399                                            0399
*         EXODDN=ADDR(WFILEVAL);    /* DDN FROM FDT          @Y30LB01*/
         L     @14,@PC00001+4                                      0400
         L     @01,FDTPTR+48(,@14)                                 0400
         LA    @14,WFILEVAL(,@01)                                  0400
         ST    @14,EXODDN(,@15)                                    0400
*       ELSE                                                       0401
*         EXODDN=ADDR(ALLDDN);      /* DDN FROM ALLAGL       @Y30LB01*/
         B     @RC00399                                            0401
@RF00399 L     @01,WALLPTR                                         0401
         LA    @15,ALLDDN(,@01)                                    0401
         L     @14,WEXOPTR                                         0401
         ST    @15,EXODDN(,@14)                                    0401
*       EXOEXT=ADDR(WFEXTENT);      /* RETURN EXTS PTR       @Y30LB01*/
@RC00399 L     @15,WEXOPTR                                         0402
         LA    @14,WFEXTENT                                        0402
         ST    @14,EXOEXT(,@15)                                    0402
*       EXOCTLBK=ADDR(IOBPTR);      /* RETURN IOBLK PTR      @Y30LB01*/
*                                                                  0403
         LA    @14,IOBPTR                                          0403
         ST    @14,EXOCTLBK(,@15)                                  0403
*       /*************************************************************/
*       /*                                                           */
*       /* DIAGNOSTIC DUMP OF REGION                         @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0404
*       IF GDTDBG=NULLPTR THEN                                     0404
         L     @15,@PC00001                                        0404
         L     @15,GDTDBG(,@15)                                    0404
         LTR   @15,@15                                             0404
         BZ    @RT00404                                            0404
*         ;                                                        0405
*       ELSE                                                       0406
*         CALL IDCDB010(GDTTBL,'TRAH');/* DIAG DUMP CALL     @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0406
         L     @15,@PC00001                                        0406
         ST    @15,@AL00001                                        0406
         LA    @14,@CC01332                                        0406
         ST    @14,@AL00001+4                                      0406
         MVI   @AL00001+4,X'80'                                    0406
         L     @15,GDTDBG(,@15)                                    0406
         LA    @01,@AL00001                                        0406
         BALR  @14,@15                                             0406
*       /*************************************************************/
*       /*                                                           */
*       /* UEXCP CALL TO OPEN THE WORK DATASET               @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0407
*       CALL IDCIO050(GDTTBL,OPEN,EXOARG);/* OPEN CALL TO UEXCP    0407
*                                                            @Y30LB01*/
@RT00404 L     @15,@PC00001                                        0407
         ST    @15,@AL00001                                        0407
         LA    @14,OPEN                                            0407
         ST    @14,@AL00001+4                                      0407
         L     @01,WEXOPTR                                         0407
         ST    @01,@AL00001+8                                      0407
         MVI   @AL00001+8,X'80'                                    0407
         L     @15,GDTEXP(,@15)                                    0407
         LA    @01,@AL00001                                        0407
         BALR  @14,@15                                             0407
*       RESPECIFY                                                  0408
*         RTNREG RSTD;                                             0408
*       TESTRC=RTNREG;                                             0409
         STH   RTNREG,TESTRC                                       0409
*       RESPECIFY                                                  0410
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0410
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN CODE FROM UEXCP AND IF FAIL CODE      @Y30LB01*/
*       /* IS SET THEN SET LASTCOND TO 12 FOR TERMINAL ERR.  @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0411
*       IF TESTRC^=0 THEN           /* BAD RETURN FOR OPEN   @Y30LB01*/
         LH    @15,TESTRC                                          0411
         LTR   @15,@15                                             0411
         BZ    @RF00411                                            0411
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0412
         MVC   LASTCOND(2,@15),@CH00567                            0412
*     END;                          /* END WFILE OPEN        @Y30LB01*/
*                                                                  0413
@RF00411 DS    0H                                                  0414
*   /*****************************************************************/
*   /*                                                               */
*   /* *** END WORK DATASET OPEN CODE *********************  @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0414
*                                                                  0414
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE IS TO ACQUIRE WORK DATASET                  @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0414
*   IF LASTCOND=0 THEN              /* IF LASTCOND IS 0      @Y30LB01*/
@RF00392 L     @15,@PC00001+8                                      0414
         LH    @15,LASTCOND(,@15)                                  0414
         LTR   @15,@15                                             0414
         BNZ   @RF00414                                            0414
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*       ACLSTPTR=ADDR(PARMLST);     /* SET ACQLIST AREA PTR  @Y30LB01*/
         LA    @15,PARMLST                                         0416
         ST    @15,ACLSTPTR                                        0416
*       ACQLIST=''B;                /* CLEAR PARM AREA       @ZA17180*/
*                                                                  0417
         XC    ACQLIST(96,@15),ACQLIST(@15)                        0417
*       /*************************************************************/
*       /*                                                           */
*       /* IF NOT ON CYLINDER BOUNDRY THE CC ADDRESS MUST    @ZA17180*/
*       /* BE ROUNDED AT START AND END CCHHR.                @ZA17180*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0418
*       IF WSTRTH2^=F0 THEN         /* NEEDS ROUNDING        @ZA17180*/
         CLI   WSTRTH2,0                                           0418
         BE    @RF00418                                            0418
*         WSTRTCC=WSTRTCC+1;        /* ROUND TO NEXT CYL     @ZM30980*/
         LA    @15,1                                               0419
         AH    @15,WSTRTCC                                         0419
         STH   @15,WSTRTCC                                         0419
*       IF WENDH2^=18 THEN          /* NEEDS ROUNDING        @ZM30980*/
@RF00418 CLI   WENDH2,18                                           0420
         BE    @RF00420                                            0420
*         WENDDCC=WENDDCC-1;        /* ROUND NXT LOWER CYL   @ZM30980*/
*                                                                  0421
         ICM   @15,12,WENDDCC                                      0421
         SRA   @15,16                                              0421
         BCTR  @15,0                                               0421
         STCM  @15,3,WENDDCC                                       0421
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE THE ICBACREL PARMS FOR ACQUIRE         @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0422
*       ARLL=LENGTH(ACQLIST);       /* PARM LENGTH           @Y30LB01*/
@RF00420 L     @15,ACLSTPTR                                        0422
         MVC   ARLL(4,@15),@CF01381                                0422
*       AROP=OPACQ;                 /* ACQ OP HEX 02         @Y30LB01*/
         MVI   AROP(@15),X'02'                                     0423
*       ARBDUBD=ON;                 /* BIND FLAG             @Y30LB01*/
*       ARINH=ON;                   /* INHIBIT STAGE FLAG    @Y30LB01*/
*       ARDRES=ON;                  /* DELAYED RESP FLAG     @Y30LB01*/
         OI    ARBDUBD(@15),B'11100000'                            0426
*       ARNMEXT=F1;                 /* ONE EXTENT            @Y30LB01*/
         MVI   ARNMEXT(@15),X'01'                                  0427
*       ARVOL=TRACVOL;              /* VOLID OF WFILE        @Y30LB01*/
         MVC   ARVOL(6,@15),TRACVOL                                0428
*       ACQCCS=WSTARTCC;            /* CONCAT STRT END CC    @Y30LB01*/
         MVC   ACQCCS(2),WSTARTCC                                  0429
*       ACQCCE=WENDCC;              /* CONCAT STRT END CC    @Y30LB01*/
         MVC   ACQCCE(2),WENDCC                                    0430
*       AREXT(1)=ACQCCCC;           /* START AND END CC      @Y30LB01*/
*                                                                  0431
         MVC   AREXT(4,@15),ACQCCCC                                0431
*       /*************************************************************/
*       /*                                                           */
*       /* USING DMPSTART, DMPITEM, DMPEND MACROS FOR        @Y30LB01*/
*       /* DIAGNOSTIC DUMP ACQUIRE PARAMETERS                @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0432
*       IF GDTDBG=NULLPTR THEN                                     0432
         L     @15,@PC00001                                        0432
         L     @15,GDTDBG(,@15)                                    0432
         LTR   @15,@15                                             0432
         BZ    @RT00432                                            0432
*         ;                                                        0433
*       ELSE                                                       0434
*         DO;                                                      0434
*           DMPINDEX=ADDR(DUMPAREA);/* START DUMP LIST       @Y30LB01*/
         LA    @15,DUMPAREA                                        0435
         ST    @15,DMPINDEX                                        0435
*           DMPITMNM='ACQLIST';                                    0436
         MVI   DMPITMNM+7(@15),C' '                                0436
         MVC   DMPITMNM(7,@15),@CC01334                            0436
*           DMPITMPT=ADDR(ACQLIST);                                0437
         L     @14,ACLSTPTR                                        0437
         ST    @14,DMPITMPT(,@15)                                  0437
*           DMPITMLN=LENGTH(ACQLIST);                              0438
         MVC   DMPITMLN(2,@15),@CH01381                            0438
*           DMPITMTP='H';                                          0439
         MVI   DMPITMTP(@15),C'H'                                  0439
*           DMPINDEX=DMPINDEX+DMPELEMT;/* HEX DUMP           @Y30LB01*/
         AL    @15,@CF00474                                        0440
         ST    @15,DMPINDEX                                        0440
*           DMPTRM=DMPTRMVL;                                       0441
         MVI   DMPTRM(@15),X'FF'                                   0441
*         END;                      /* END DUMP LIST         @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0442
*       /*************************************************************/
*       /*                                                           */
*       /* UDUMP CALL TO DUMP ICBACREL PARMS                 @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0443
*       IF GDTDBG=NULLPTR THEN                                     0443
@RT00432 L     @15,@PC00001                                        0443
         L     @15,GDTDBG(,@15)                                    0443
         LTR   @15,@15                                             0443
         BZ    @RT00443                                            0443
*         ;                                                        0444
*       ELSE                                                       0445
*         CALL IDCDB010(GDTTBL,'TRAI',ADDR(DUMPAREA));/* DIAG DUMP 0445
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0445
         L     @15,@PC00001                                        0445
         ST    @15,@AL00001                                        0445
         LA    @14,@CC01335                                        0445
         ST    @14,@AL00001+4                                      0445
         LA    @14,DUMPAREA                                        0445
         ST    @14,@AFTEMPS+4                                      0445
         LA    @14,@AFTEMPS+4                                      0445
         ST    @14,@AL00001+8                                      0445
         MVI   @AL00001+8,X'80'                                    0445
         L     @15,GDTDBG(,@15)                                    0445
         LA    @01,@AL00001                                        0445
         BALR  @14,@15                                             0445
*       /*************************************************************/
*       /*                                                           */
*       /* USSC CALL TO PERFORM ACQUIRE FUNCTION             @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0446
*       CALL IDCSASS0(GDTTBL,ACQUIRE,ACLSTPTR,REASON,ECBCODE);/*   0446
*                                                            @Y30LB01*/
@RT00443 L     @15,@PC00001                                        0446
         ST    @15,@AL00001                                        0446
         LA    @14,ACQUIRE                                         0446
         ST    @14,@AL00001+4                                      0446
         LA    @14,ACLSTPTR                                        0446
         ST    @14,@AL00001+8                                      0446
         LA    @14,REASON                                          0446
         ST    @14,@AL00001+12                                     0446
         LA    @14,ECBCODE                                         0446
         ST    @14,@AL00001+16                                     0446
         MVI   @AL00001+16,X'80'                                   0446
         L     @15,GDTSSC(,@15)                                    0446
         LA    @01,@AL00001                                        0446
         BALR  @14,@15                                             0446
*       RESPECIFY                                                  0447
*         RTNREG RSTD;                                             0447
*       TESTRC=RTNREG;                                             0448
         STH   RTNREG,TESTRC                                       0448
*       RESPECIFY                                                  0449
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0449
*       /*************************************************************/
*       /*                                                           */
*       /* TEST USSC RETURN AND IF FUNCTION FAILED THEN      @Y30LB01*/
*       /* SET LASTCOND TO TERMINAL ERROR AND CALL           @Y30LB01*/
*       /* SSCMSG TO PRINT MESSAGE                           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0450
*       IF TESTRC^=0 THEN           /* BAD RETURN CODE       @Y30LB01*/
         LH    @15,TESTRC                                          0450
         LTR   @15,@15                                             0450
         BZ    @RF00450                                            0450
*         DO;                       /* ERROR PROCESS         @Y30LB01*/
*           IF TESTRC=4 THEN        /* EXECUTE ICBACREL FAIL @Y30LB01*/
         C     @15,@CF00042                                        0452
         BNE   @RF00452                                            0452
*             CALL SSCMSG(REASON,ECBCODE);/* ISSUE MSG       @Y30LB01*/
         LA    @15,REASON                                          0453
         ST    @15,@AL00001                                        0453
         LA    @15,ECBCODE                                         0453
         ST    @15,@AL00001+4                                      0453
         LA    @01,@AL00001                                        0453
         BAL   @14,SSCMSG                                          0453
*           LASTCOND=LASTCC12;      /* SET LASTCOND TO 12    @Y30LB01*/
@RF00452 L     @15,@PC00001+8                                      0454
         MVC   LASTCOND(2,@15),@CH00567                            0454
*         END;                      /* END ERROR PROCESS     @Y30LB01*/
*       ELSE                                                       0456
*         WACQ=ON;                  /* SET ACQUIRED SWITCH   @Y30LB01*/
         B     @RC00450                                            0456
@RF00450 OI    WACQ,B'00100000'                                    0456
*     END;                          /* END ACQUIRE CODE      @Y30LB01*/
*                                                                  0457
@RC00450 DS    0H                                                  0458
*   /*****************************************************************/
*   /*                                                               */
*   /* *** END WORK DATASET ACQUIRE CODE *****************   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0458
*                                                                  0458
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE IS TO OPEN OUTPUT DATASET                   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0458
*   IF LASTCOND=0 THEN              /* IF LASTCOND IS 0      @Y30LB01*/
@RF00414 SLR   @15,@15                                             0458
         L     @14,@PC00001+8                                      0458
         CH    @15,LASTCOND(,@14)                                  0458
         BNE   @RF00458                                            0458
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*       OOPENLST=''B;               /* CLEAR OPNAGL AREA     @Y30LB01*/
         XC    OOPENLST(48),OOPENLST                               0460
*       OPNPTR=ADDR(OOPENLST);      /* SET OPNAGL PTR        @Y30LB01*/
*                                                                  0461
         LA    @14,OOPENLST                                        0461
         ST    @14,OPNPTR                                          0461
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE UOPEN PARAMETERS                       @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0462
*       OPNOPTOT=ON;                /* OPEN FOR OUTPUT       @Y30LB01*/
*       OPNOPTBK=ON;                /* BLOCKED PROCESSING    @Y30LB01*/
*       OPNOPTCR=ON;                /* SEQUENTIAL PROCESS    @Y30LB01*/
         OI    OPNOPTOT(@14),B'01010100'                           0464
*       OPNRFMFX=ON;                /* FIXED RECORDS         @Y30LB01*/
*       OPNRFMBK=ON;                /* BLOCKED               @Y30LB01*/
         OI    OPNRFMFX(@14),B'10001000'                           0466
*       OPNREC=RECLN;               /* LRECL = 264 BLOCKED   @ZM30718*/
         MVC   OPNREC(4,@14),@CF01258                              0467
*       OPNIOC=ADDR(IOCSPTR);       /* RETURN IOBLK PTR      @Y30LB01*/
         LA    @09,IOCSPTR                                         0468
         ST    @09,OPNIOC(,@14)                                    0468
*       IF ADDR(OFILE)=NULLPTR THEN /* NO DD FOR OFILE       @Y30LB01*/
         L     @09,@PC00001+4                                      0469
         C     @15,FDTPTR+40(,@09)                                 0469
         BNE   @RF00469                                            0469
*         OPNDSN=ADDR(ODSVAL);      /* SET DSNAME            @Y30LB01*/
         L     @01,FDTPTR+44(,@09)                                 0470
         LA    @15,ODSVAL(,@01)                                    0470
         ST    @15,OPNDSN(,@14)                                    0470
*       ELSE                                                       0471
*         OPNDDN=ADDR(OFILEVAL);    /* SET DDNAME            @Y30LB01*/
*                                                                  0471
         B     @RC00469                                            0471
@RF00469 L     @15,@PC00001+4                                      0471
         L     @01,FDTPTR+40(,@15)                                 0471
         LA    @15,OFILEVAL(,@01)                                  0471
         L     @14,OPNPTR                                          0471
         ST    @15,OPNDDN(,@14)                                    0471
*       /*************************************************************/
*       /*                                                           */
*       /* DIAGNOSTIC DUMP OF REGION                         @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0472
*       IF GDTDBG=NULLPTR THEN                                     0472
@RC00469 L     @15,@PC00001                                        0472
         L     @15,GDTDBG(,@15)                                    0472
         LTR   @15,@15                                             0472
         BZ    @RT00472                                            0472
*         ;                                                        0473
*       ELSE                                                       0474
*         CALL IDCDB010(GDTTBL,'TRAJ');/* DIAG DUMP          @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0474
         L     @15,@PC00001                                        0474
         ST    @15,@AL00001                                        0474
         LA    @14,@CC01336                                        0474
         ST    @14,@AL00001+4                                      0474
         MVI   @AL00001+4,X'80'                                    0474
         L     @15,GDTDBG(,@15)                                    0474
         LA    @01,@AL00001                                        0474
         BALR  @14,@15                                             0474
*       /*************************************************************/
*       /*                                                           */
*       /* UOPEN CALL TO OPEN THE OUTPUT DATASET             @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0475
*       CALL IDCIOOP0(GDTTBL,OPNAGL);/* OFILE OPEN CALL      @Y30LB01*/
@RT00472 L     @15,@PC00001                                        0475
         ST    @15,@AL00001                                        0475
         L     @01,OPNPTR                                          0475
         ST    @01,@AL00001+4                                      0475
         MVI   @AL00001+4,X'80'                                    0475
         L     @15,GDTOPN(,@15)                                    0475
         LA    @01,@AL00001                                        0475
         BALR  @14,@15                                             0475
*       RESPECIFY                                                  0476
*         RTNREG RSTD;                                             0476
*       TESTRC=RTNREG;                                             0477
         STH   RTNREG,TESTRC                                       0477
*       RESPECIFY                                                  0478
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0478
*       /*************************************************************/
*       /*                                                           */
*       /* TEST UOPEN RETURN CODE AND IF FAIL CODE THEN      @Y30LB01*/
*       /* SET LASTCOND TO TERMINAL ERROR VALUE              @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0479
*       IF TESTRC^=0 THEN           /* BAD RETURN CODE       @Y30LB01*/
         LH    @15,TESTRC                                          0479
         LTR   @15,@15                                             0479
         BZ    @RF00479                                            0479
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01
*                                                            @ZM30719*/
*                                                                  0480
         L     @15,@PC00001+8                                      0480
         MVC   LASTCOND(2,@15),@CH00567                            0480
*       /*************************************************************/
*       /*                                                           */
*       /* TEST WHETHER BLOCKSIZE RETURNED FROM OPEN IS A    @ZM30719*/
*       /* MULTIPLE OF 264, IF NOT SET LASTCOND TO TERMINAL  @ZM30719*/
*       /* VALUE AND WRITE APPROPRIATE MESSAGE.              @ZM30719*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0481
*       IF IOCTRN//RECLN^=0×        /*                       @ZA13050*/
*           IOCTRN=0 THEN           /*                       @ZA13050*/
@RF00479 SLR   @15,@15                                             0481
         L     @01,IOCSPTR                                         0481
         L     @14,IOCTRN(,@01)                                    0481
         LR    @00,@14                                             0481
         SRDA  @00,32                                              0481
         D     @00,@CF01258                                        0481
         CR    @00,@15                                             0481
         BNE   @RT00481                                            0481
         CR    @14,@15                                             0481
         BNE   @RF00481                                            0481
@RT00481 DS    0H                                                  0482
*         DO;                       /*                       @ZM30719*/
*           LASTCOND=LASTCC12;      /* SET LASTCOND TO 12    @ZM30719*/
         L     @15,@PC00001+8                                      0483
         MVC   LASTCOND(2,@15),@CH00567                            0483
*           PRINTTAB=''B;           /* CLEAR PARM AREA       @ZM30719*/
         XC    PRINTTAB(20),PRINTTAB                               0484
*           DARGSENT=MSG3844I;      /* MESSAGE INDEX         @ZM30719*/
         L     @15,DDSTRU                                          0485
         MVI   DARGSENT(@15),X'05'                                 0485
*           DARGSMOD=TRAMSG;        /* MESSAGE MODULE        @ZM30719
*                                                            @ZM30719*/
*                                                                  0486
         MVC   DARGSMOD(3,@15),@CC01280                            0486
*           /*********************************************************/
*           /*                                                       */
*           /* UPRINT CALL TO PRINT MESSAGE                  @ZM30719*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0487
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* ISSUE UPRINT   0487
*                                                            @ZM30719*/
         L     @15,@PC00001                                        0487
         ST    @15,@AL00001                                        0487
         LA    @14,@CF00115                                        0487
         ST    @14,@AL00001+4                                      0487
         LA    @14,DDSTRU                                          0487
         ST    @14,@AL00001+8                                      0487
         MVI   @AL00001+8,X'80'                                    0487
         L     @15,GDTPRT(,@15)                                    0487
         LA    @01,@AL00001                                        0487
         BALR  @14,@15                                             0487
*         END;                      /* END ERROR PROCESS     @ZM30719*/
*     END;                          /* END OFILE OPEN CODE   @Y30LB01*/
*                                                                  0489
@RF00481 DS    0H                                                  0490
*   /*****************************************************************/
*   /*                                                               */
*   /* *** END OF OUTPUT DATASET OPEN CODE ***************   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0490
*                                                                  0490
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE GETS SPACE FOR INPUT/OUTPUT FILE BUFFERS    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0490
*   IF LASTCOND=0 THEN              /* IF LASTCOND IS 0      @Y30LB01*/
@RF00458 L     @15,@PC00001+8                                      0490
         LH    @15,LASTCOND(,@15)                                  0490
         LTR   @15,@15                                             0490
         BNZ   @RF00490                                            0490
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*       BUFFLN=IOCTRN+LENGTH(INBUF);/* SET SIZE OF AREA      @Y30LB01*/
*                                                                  0492
         L     @15,@CF01246                                        0492
         L     @14,IOCSPTR                                         0492
         AL    @15,IOCTRN(,@14)                                    0492
         ST    @15,BUFFLN                                          0492
*       /*************************************************************/
*       /*                                                           */
*       /* * ISSUE UGSPACE TO OBTAIN BUFFER CORE *           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0493
*                                   /*                       @Y30LB01*/
*       CALL IDCSAGS0(GDTTBL,BUFFLN,INBLKPTR);/*             @Y30LB01*/
         L     @15,@PC00001                                        0493
         ST    @15,@AL00001                                        0493
         LA    @14,BUFFLN                                          0493
         ST    @14,@AL00001+4                                      0493
         LA    @14,INBLKPTR                                        0493
         ST    @14,@AL00001+8                                      0493
         MVI   @AL00001+8,X'80'                                    0493
         L     @15,GDTGSP(,@15)                                    0493
         LA    @01,@AL00001                                        0493
         BALR  @14,@15                                             0493
*       RESPECIFY                                                  0494
*         RTNREG RSTD;                                             0494
*       TESTRC=RTNREG;                                             0495
         STH   RTNREG,TESTRC                                       0495
*       RESPECIFY                                                  0496
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0496
*       /*************************************************************/
*       /*                                                           */
*       /* TEST UGSPACE RETURN CODE AND IF FAIL CODE         @Y30LB01*/
*       /* RETURNED SET GMAINF SWITCH ON AND SET             @Y30LB01*/
*       /* LASTCOND TO TERMINAL ERROR VALUE                  @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0497
*       IF TESTRC^=0 THEN           /* BAD RETURN CODE       @Y30LB01*/
         LH    @15,TESTRC                                          0497
         LTR   @15,@15                                             0497
         BZ    @RF00497                                            0497
*         DO;                       /* ERROR PROCESS         @Y30LB01*/
*           GMAINF=ON;              /* SET GETMAIN FAIL SW   @Y30LB01*/
         OI    GMAINF,B'10000000'                                  0499
*           LASTCOND=LASTCC12;      /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0500
         MVC   LASTCOND(2,@15),@CH00567                            0500
*         END;                      /* END ERROR PROCESS     @Y30LB01*/
*     END;                          /* END GET SPACE CODE    @Y30LB01*/
*                                                                  0502
@RF00497 DS    0H                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* **** END OF UGSPACE CODE FOR INPUT/OUTPUT BUFFER **** @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*                                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE COPIES MSC TRACE TABLES                     @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*   IF LASTCOND=0 THEN              /* NO ERRORS THUS FAR    @Y30LB01*/
@RF00490 SLR   @15,@15                                             0503
         L     @14,@PC00001+8                                      0503
         CH    @15,LASTCOND(,@14)                                  0503
         BNE   @RF00503                                            0503
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*       CTLSTPTR=ADDR(PARMLST);     /* SET PTR FOR COTLIST   @Y30LB01*/
         LA    @14,PARMLST                                         0505
         ST    @14,CTLSTPTR                                        0505
*       COTLIST=''B;                /* CLEAR PARM AREA       @Y30LB01*/
*                                                                  0506
         XC    COTLIST(24,@14),COTLIST(@14)                        0506
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE ICBCOTB PARAMETERS                     @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0507
*       IF ADDR(BOTH)^=NULLPTR THEN /* BOTH AREAS SPECIFIED  @Y30LB01*/
         L     @09,@PC00001+4                                      0507
         C     @15,FDTPTR+20(,@09)                                 0507
         BE    @RF00507                                            0507
*         DO;                       /* SET REQUIRED PARMS    @Y30LB01*/
*           COTBTRX=ON;             /* X COPY FLAG           @Y30LB01*/
*           COTBTRY=ON;             /* Y COPY FLAG           @Y30LB01*/
         OI    COTBTRX(@14),B'11000000'                            0510
*         END;                      /* END BOTH PARMS        @Y30LB01*/
*       ELSE                        /* SINGLE AREA           @Y30LB01*/
*         DO;                       /* PROCESS PARMS         @Y30LB01*/
         B     @RC00507                                            0512
@RF00507 DS    0H                                                  0513
*           IF ADDR(X)^=NULLPTR THEN/* X TO BE COPIED        @Y30LB01*/
         L     @15,@PC00001+4                                      0513
         L     @15,FDTPTR+12(,@15)                                 0513
         LTR   @15,@15                                             0513
         BZ    @RF00513                                            0513
*             COTBTRX=ON;           /* X COPY FLAG           @Y30LB01*/
         L     @01,CTLSTPTR                                        0514
         OI    COTBTRX(@01),B'10000000'                            0514
*           IF ADDR(Y)^=NULLPTR THEN/* Y TO BE COPIED        @Y30LB01*/
@RF00513 L     @15,@PC00001+4                                      0515
         L     @15,FDTPTR+16(,@15)                                 0515
         LTR   @15,@15                                             0515
         BZ    @RF00515                                            0515
*             COTBTRY=ON;           /* Y COPY FLAG           @Y30LB01*/
         L     @01,CTLSTPTR                                        0516
         OI    COTBTRY(@01),B'01000000'                            0516
*           IF ADDR(ACT)^=NULLPTR THEN/* ACTIVE TO BE COPIED @Y30LB01*/
@RF00515 L     @15,@PC00001+4                                      0517
         L     @15,FDTPTR+24(,@15)                                 0517
         LTR   @15,@15                                             0517
         BZ    @RF00517                                            0517
*             COTBTRA=ON;           /* ACTIVE COPY FLAG      @Y30LB01*/
         L     @01,CTLSTPTR                                        0518
         OI    COTBTRA(@01),B'00100000'                            0518
*           IF ADDR(INACT)^=NULLPTR THEN/* INACTIVE COPY     @Y30LB01*/
@RF00517 L     @15,@PC00001+4                                      0519
         L     @15,FDTPTR+28(,@15)                                 0519
         LTR   @15,@15                                             0519
         BZ    @RF00519                                            0519
*             COTBTRI=ON;           /* INACT COPY FLAG       @Y30LB01*/
         L     @01,CTLSTPTR                                        0520
         OI    COTBTRI(@01),B'00010000'                            0520
*         END;                      /* END SINGLE PARMS      @Y30LB01*/
@RF00519 DS    0H                                                  0522
*       COTBEXTS=ACQCCCC;           /* SET EXTENTS USING     @Y30LB01
*                                      THOSE SET UP FOR ACQ  @Y30LB01*/
@RC00507 L     @15,CTLSTPTR                                        0522
         MVC   COTBEXTS(4,@15),ACQCCCC                             0522
*       COTBVOL=TRACVOL;            /* VOLID PARM            @Y30LB01*/
*                                                                  0523
         MVC   COTBVOL(6,@15),TRACVOL                              0523
*       /*************************************************************/
*       /*                                                           */
*       /* USING DMPSTART, DMPITEM, DMPEND MACROS            @Y30LB01*/
*       /* DIAGNOSTIC DUMP COPY TABLES PARAMETERS            @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0524
*       IF GDTDBG=NULLPTR THEN                                     0524
         L     @15,@PC00001                                        0524
         L     @15,GDTDBG(,@15)                                    0524
         LTR   @15,@15                                             0524
         BZ    @RT00524                                            0524
*         ;                                                        0525
*       ELSE                                                       0526
*         DO;                                                      0526
*           DMPINDEX=ADDR(DUMPAREA);/* START DUMP LIST       @Y30LB01*/
         LA    @15,DUMPAREA                                        0527
         ST    @15,DMPINDEX                                        0527
*           DMPITMNM='COTLIST';                                    0528
         MVI   DMPITMNM+7(@15),C' '                                0528
         MVC   DMPITMNM(7,@15),@CC01337                            0528
*           DMPITMPT=ADDR(COTLIST);                                0529
         L     @14,CTLSTPTR                                        0529
         ST    @14,DMPITMPT(,@15)                                  0529
*           DMPITMLN=LENGTH(COTLIST);                              0530
         MVC   DMPITMLN(2,@15),@CH00310                            0530
*           DMPITMTP='H';                                          0531
         MVI   DMPITMTP(@15),C'H'                                  0531
*           DMPINDEX=DMPINDEX+DMPELEMT;/* HEX DUMP           @Y30LB01*/
         AL    @15,@CF00474                                        0532
         ST    @15,DMPINDEX                                        0532
*           DMPTRM=DMPTRMVL;                                       0533
         MVI   DMPTRM(@15),X'FF'                                   0533
*         END;                      /* END DUMP LIST         @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0534
*       /*************************************************************/
*       /*                                                           */
*       /* UDUMP CALL TO DUMP ICBCOTB PARMS                  @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0535
*       IF GDTDBG=NULLPTR THEN                                     0535
@RT00524 L     @15,@PC00001                                        0535
         L     @15,GDTDBG(,@15)                                    0535
         LTR   @15,@15                                             0535
         BZ    @RT00535                                            0535
*         ;                                                        0536
*       ELSE                                                       0537
*         CALL IDCDB010(GDTTBL,'TRAK',ADDR(DUMPAREA));/* DIAG DUMP 0537
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0537
         L     @15,@PC00001                                        0537
         ST    @15,@AL00001                                        0537
         LA    @14,@CC01338                                        0537
         ST    @14,@AL00001+4                                      0537
         LA    @14,DUMPAREA                                        0537
         ST    @14,@AFTEMPS+4                                      0537
         LA    @14,@AFTEMPS+4                                      0537
         ST    @14,@AL00001+8                                      0537
         MVI   @AL00001+8,X'80'                                    0537
         L     @15,GDTDBG(,@15)                                    0537
         LA    @01,@AL00001                                        0537
         BALR  @14,@15                                             0537
*       /*************************************************************/
*       /*                                                           */
*       /* *** ISSUE USSC TO EXECUTE ICBCOTB MACRO *****     @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0538
*       CALL IDCSASS0(GDTTBL,COPYTABL,CTLSTPTR,REASON,/*     @Y30LB01*/
*           ECBCODE,CTMSGPTR);      /*                       @Y30LB01*/
@RT00535 L     @15,@PC00001                                        0538
         ST    @15,@AL00001                                        0538
         LA    @14,COPYTABL                                        0538
         ST    @14,@AL00001+4                                      0538
         LA    @14,CTLSTPTR                                        0538
         ST    @14,@AL00001+8                                      0538
         LA    @14,REASON                                          0538
         ST    @14,@AL00001+12                                     0538
         LA    @14,ECBCODE                                         0538
         ST    @14,@AL00001+16                                     0538
         LA    @14,CTMSGPTR                                        0538
         ST    @14,@AL00001+20                                     0538
         MVI   @AL00001+20,X'80'                                   0538
         L     @15,GDTSSC(,@15)                                    0538
         LA    @01,@AL00001                                        0538
         BALR  @14,@15                                             0538
*       RESPECIFY                                                  0539
*         RTNREG RSTD;                                             0539
*       TESTRC=RTNREG;                                             0540
         STH   RTNREG,TESTRC                                       0540
*       RESPECIFY                                                  0541
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0541
*       /*************************************************************/
*       /*                                                           */
*       /* SET CTMSGPTR TO POINT TO THE MESSAGE TEXT IF      #Y30LB01*/
*       /* THE POINTER IS NON ZERO.                          #Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0542
*       IF CTMSGPTR^=NULLPTR THEN   /* MSG PTR SET BY USSC   @Y30LB01*/
         L     @15,CTMSGPTR                                        0542
         LTR   @15,@15                                             0542
         BZ    @RF00542                                            0542
*         CTMSGPTR=CTMSGPTR+ECBLN;  /* POINT PAST THE ECB    @Y30LB01*/
*                                                                  0543
         AL    @15,@CF00042                                        0543
         ST    @15,CTMSGPTR                                        0543
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN CODE FROM USSC AND IF FAIL CODE       @Y30LB01*/
*       /* RETURNED CALL SSCMSG TO PRINT MESSAGE AND         @Y30LB01*/
*       /* SET LASTCOND TO TERMINAL ERROR VALUE              @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0544
*       IF TESTRC^=0 THEN           /* BAD RETURN            @Y30LB01*/
@RF00542 LH    @15,TESTRC                                          0544
         LTR   @15,@15                                             0544
         BZ    @RF00544                                            0544
*         DO;                       /* ERROR PROCESS         @Y30LB01*/
*           IF TESTRC=4 THEN        /* FUNCTION FAIL CODE    @Y30LB01*/
         C     @15,@CF00042                                        0546
         BNE   @RF00546                                            0546
*             CALL SSCMSG(REASON,ECBCODE);/* WRITE MESSAGE   @Y30LB01*/
         LA    @15,REASON                                          0547
         ST    @15,@AL00001                                        0547
         LA    @15,ECBCODE                                         0547
         ST    @15,@AL00001+4                                      0547
         LA    @01,@AL00001                                        0547
         BAL   @14,SSCMSG                                          0547
*           LASTCOND=LASTCC12;      /* SET LASTCOND TO 12    @Y30LB01*/
@RF00546 L     @15,@PC00001+8                                      0548
         MVC   LASTCOND(2,@15),@CH00567                            0548
*         END;                      /* END ERROR PROCESS     @Y30LB01*/
*                                                                  0549
*       /*************************************************************/
*       /*                                                           */
*       /* IF AQUIRE WAS SUCCESSFUL, ISSUE THE USSC MACRO WITH       */
*       /*                                                   @ZA17180*/
*       /* THE RELINQ OPTION TO RELINQUISH THE DATA SET SPACE SPECIFY*/
*       /* THE UNBIND OPTION.                                @ZA17180*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0550
*       IF WACQ=ON THEN                                            0550
@RF00544 TM    WACQ,B'00100000'                                    0550
         BNO   @RF00550                                            0550
*         DO;                       /*                       @ZA17180*/
*           ACQLIST=ACQLIST&&ACQLIST;/*                      @ZA17180*/
         L     @15,ACLSTPTR                                        0552
         XC    ACQLIST(96,@15),ACQLIST(@15)                        0552
*           ARLL=LENGTH(ACQLIST);   /*                       @ZA17180*/
         MVC   ARLL(4,@15),@CF01381                                0553
*           AROP=OPREL;             /*                       @ZA17180*/
         MVI   AROP(@15),X'04'                                     0554
*           ARBDUBD=ON;             /*                       @ZA17180*/
         OI    ARBDUBD(@15),B'10000000'                            0555
*           ARNMEXT=F1;             /*                       @ZA17180*/
         MVI   ARNMEXT(@15),X'01'                                  0556
*           ARVOL=TRACVOL;          /*                       @ZA17180*/
         MVC   ARVOL(6,@15),TRACVOL                                0557
*           AREXT(1,1:2)=WSTARTCC;  /*                       @ZA17180*/
         MVC   AREXT(2,@15),WSTARTCC                               0558
*           AREXT(1,3:4)=WENDCC;    /*                       @ZA17180*/
         MVC   AREXT+2(2,@15),WENDCC                               0559
*           CALL IDCSASS0(GDTTBL,RELINQ,ACLSTPTR,REASON);/*  @ZA17180*/
         L     @15,@PC00001                                        0560
         ST    @15,@AL00001                                        0560
         LA    @14,RELINQ                                          0560
         ST    @14,@AL00001+4                                      0560
         LA    @14,ACLSTPTR                                        0560
         ST    @14,@AL00001+8                                      0560
         LA    @14,REASON                                          0560
         ST    @14,@AL00001+12                                     0560
         MVI   @AL00001+12,X'80'                                   0560
         L     @15,GDTSSC(,@15)                                    0560
         LA    @01,@AL00001                                        0560
         BALR  @14,@15                                             0560
*           RESPECIFY                                              0561
*             RTNREG RSTD;                                         0561
*           TESTRC=RTNREG;                                         0562
         STH   RTNREG,TESTRC                                       0562
*           RESPECIFY                                              0563
*             RTNREG UNRSTD;        /*                       @ZA17180*/
*           IF TESTRC^=0 THEN                                      0564
         LH    @15,TESTRC                                          0564
         LTR   @15,@15                                             0564
         BZ    @RF00564                                            0564
*             DO;                   /*                       @ZA17180*/
*                                                                  0565
*               /*****************************************************/
*               /*                                                   */
*               /* CALL SSCMSG TO ISSUE A MESSAGE GIVING THE @ZA17180*/
*               /* REASON WHY A NON-ZERO RETURN CODE WAS RETURNED.   */
*               /*                                           @ZA17180*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0566
*               CALL SSCMSG(REASON);/*                       @ZA17180*/
         LA    @15,REASON                                          0566
         ST    @15,@AL00001                                        0566
         LA    @01,@AL00001                                        0566
         BAL   @14,SSCMSG                                          0566
*               LASTCOND=LASTCC04;  /*                       @ZA17180*/
         L     @15,@PC00001+8                                      0567
         MVC   LASTCOND(2,@15),@CH00042                            0567
*             END;                  /*                       @ZA17180*/
*           ELSE                    /*                       @ZA17180*/
*             WACQ=OFF;             /*                       @ZA17180*/
         B     @RC00564                                            0569
@RF00564 NI    WACQ,B'11011111'                                    0569
*         END;                      /*                       @ZA17180*/
@RC00564 DS    0H                                                  0571
*     END;                          /* END COPY CODE         #Y30LB01*/
*                                                                  0571
@RF00550 DS    0H                                                  0572
*   /*****************************************************************/
*   /*                                                               */
*   /* ***** END OF COPY TABLES CODE *****************       @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0572
*                                                                  0572
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE CALLS TRPROCES TO DO THE IO                 @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0572
*   IF LASTCOND=0 THEN              /* NO ERRORS             @Y30LB01*/
@RF00503 L     @15,@PC00001+8                                      0572
         LH    @15,LASTCOND(,@15)                                  0572
         LTR   @15,@15                                             0572
         BNZ   @RF00572                                            0572
*     CALL TRPROCES;                /* IO PROCESS            @Y30LB01*/
*                                                                  0573
         BAL   @14,TRPROCES                                        0573
*   /*****************************************************************/
*   /*                                                               */
*   /* *******END OF CALL TRPROCESS CODE ****************    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0574
*                                   /*                       @Y30LB01*/
*                                                                  0574
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE FREES CTMSG AREA VIA UFSPACE                @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0574
*   IF CTMSGPTR^=NULLPTR THEN       /* SPACE OBTAINED        @Y30LB01*/
@RF00572 L     @15,CTMSGPTR                                        0574
         LTR   @15,@15                                             0574
         BZ    @RF00574                                            0574
*     DO;                           /* FREE IT               @Y30LB01*/
*       CTMSGPTR=CTMSGPTR-ECBLN;    /* INCLUDE ECB AREA      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0576
         SL    @15,@CF00042                                        0576
         ST    @15,CTMSGPTR                                        0576
*       /*************************************************************/
*       /*                                                           */
*       /* UFSPACE CALL TO FREE COPT TABLES MSG AREA         @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0577
*       CALL IDCSAFS0(GDTTBL,CTMSGPTR);/* FREE VIA UFSPACE   @Y30LB01
*                                                            @Y30LB01*/
         L     @15,@PC00001                                        0577
         ST    @15,@AL00001                                        0577
         LA    @14,CTMSGPTR                                        0577
         ST    @14,@AL00001+4                                      0577
         L     @15,GDTFSP(,@15)                                    0577
         LA    @01,@AL00001                                        0577
         BALR  @14,@15                                             0577
*     END;                          /* END UFSPACE CODE      @Y30LB01*/
*                                                                  0578
*   /*****************************************************************/
*   /*                                                               */
*   /* **** END OF UFSPACE CODE TO FREE CTMSG AREA ******    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0579
*                                                                  0579
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE FREES IO BUFFER AREAS IF OBTAINED           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0579
*   IF INBLKPTR^=NULLPTR THEN       /* CORE WAS OBTAINED     @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0579
@RF00574 L     @15,INBLKPTR                                        0579
         LTR   @15,@15                                             0579
         BZ    @RF00579                                            0579
*     /***************************************************************/
*     /*                                                             */
*     /* UFSPACE CALL TO FREE OUTPUT BUFFER AREA             @Y30LB01*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0580
*     CALL IDCSAFS0(GDTTBL,INBLKPTR);/* FREE VIA UFSPACE     @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0580
         L     @15,@PC00001                                        0580
         ST    @15,@AL00001                                        0580
         LA    @14,INBLKPTR                                        0580
         ST    @14,@AL00001+4                                      0580
         L     @15,GDTFSP(,@15)                                    0580
         LA    @01,@AL00001                                        0580
         BALR  @14,@15                                             0580
*   /*****************************************************************/
*   /*                                                               */
*   /* ***** END OF UFSPACE CODE FOR I/O BUFFERS******       @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0581
*                                                                  0581
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE CLOSES OUTFILE IF OPENED                    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0581
*   IF IOCSPTR^=NULLPTR THEN        /* FILE WAS OPENED       @Y30LB01*/
@RF00579 L     @15,IOCSPTR                                         0581
         LTR   @15,@15                                             0581
         BZ    @RF00581                                            0581
*     DO;                           /* CLOSE IT              @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0582
*       /*************************************************************/
*       /*                                                           */
*       /* UCLOSE CALL TO CLOSE OUTPUT DATASET               @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0583
*       CALL IDCIOCL0(GDTTBL,IOCSPTR);/* CLOSE VIA UCLOSE    @Y30LB01*/
         L     @15,@PC00001                                        0583
         ST    @15,@AL00001                                        0583
         LA    @14,IOCSPTR                                         0583
         ST    @14,@AL00001+4                                      0583
         MVI   @AL00001+4,X'80'                                    0583
         L     @15,GDTCLS(,@15)                                    0583
         LA    @01,@AL00001                                        0583
         BALR  @14,@15                                             0583
*       RESPECIFY                                                  0584
*         RTNREG RSTD;                                             0584
*       TESTRC=RTNREG;                                             0585
         STH   RTNREG,TESTRC                                       0585
*       RESPECIFY                                                  0586
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0586
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN FROM UCLOSE AND IF FAIL CODE          @Y30LB01*/
*       /* SET LASTCOND TO MAXIMUM VALUE OF (LASTCOND        @Y30LB01*/
*       /* OR RETURN FROM UCLOSE).                           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0587
*       IF TESTRC^=0 THEN           /* BAD RETURN CODE       @Y30LB01*/
         LH    @15,TESTRC                                          0587
         LTR   @15,@15                                             0587
         BZ    @RF00587                                            0587
*         LASTCOND=MAX(LASTCOND,TESTRC);/* SET LASTCOND      @Y30LB01*/
         L     @14,@PC00001+8                                      0588
         LH    @09,LASTCOND(,@14)                                  0588
         CR    @09,@15                                             0588
         BNL   *+6
         LR    @09,@15                                             0588
         STH   @09,LASTCOND(,@14)                                  0588
*     END;                          /* END CLOSE OUTFILE     @Y30LB01*/
*                                                                  0589
@RF00587 DS    0H                                                  0590
*   /*****************************************************************/
*   /*                                                               */
*   /* ******* END UCLOSE OUTFILE CODE ******************    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*                                                                  0590
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE CLOSES WORKFILE IF OPENED                   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*   IF IOBPTR^=NULLPTR THEN         /* FILE WAS OPENED       @Y30LB01*/
@RF00581 L     @15,IOBPTR                                          0590
         LTR   @15,@15                                             0590
         BZ    @RF00590                                            0590
*     DO;                           /* CLOSE IT              @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0591
*       /*************************************************************/
*       /*                                                           */
*       /* UEXCP CALL TO CLOSE WORK DATASET                  @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0592
*       CALL IDCIO050(GDTTBL,CLOSE,IOBPTR);/* CLOSE VIA UEXCP      0592
*                                                            @Y30LB01*/
         L     @15,@PC00001                                        0592
         ST    @15,@AL00001                                        0592
         LA    @14,CLOSE                                           0592
         ST    @14,@AL00001+4                                      0592
         LA    @14,IOBPTR                                          0592
         ST    @14,@AL00001+8                                      0592
         MVI   @AL00001+8,X'80'                                    0592
         L     @15,GDTEXP(,@15)                                    0592
         LA    @01,@AL00001                                        0592
         BALR  @14,@15                                             0592
*       RESPECIFY                                                  0593
*         RTNREG RSTD;                                             0593
*       TESTRC=RTNREG;                                             0594
         STH   RTNREG,TESTRC                                       0594
*       RESPECIFY                                                  0595
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0595
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN FROM UEXCP AND IF FAIL CODE           @Y30LB01*/
*       /* SET LASTCOND TO MAXIMUM VALUE OF (LASTCOND        @Y30LB01*/
*       /* OR RETURN FROM UEXCP).                            @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0596
*       IF TESTRC^=0 THEN           /* BAD RETURN            @Y30LB01*/
         LH    @15,TESTRC                                          0596
         LTR   @15,@15                                             0596
         BZ    @RF00596                                            0596
*         LASTCOND=MAX(LASTCOND,TESTRC);/* SET LASTCOND      @Y30LB01*/
         L     @14,@PC00001+8                                      0597
         LH    @09,LASTCOND(,@14)                                  0597
         CR    @09,@15                                             0597
         BNL   *+6
         LR    @09,@15                                             0597
         STH   @09,LASTCOND(,@14)                                  0597
*     END;                          /* END CLOSE WORKFILE    @Y30LB01*/
*                                                                  0598
@RF00596 DS    0H                                                  0599
*   /*****************************************************************/
*   /*                                                               */
*   /* ******** END UEXCP WORKFILE CODE *****************    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0599
*                                                                  0599
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE DEALLOCATES WORKFILE IF IT WAS              @Y30LB01*/
*   /* DYNAMICALLY ALLOCATED.                                @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0599
*   IF WALLOC=ON THEN               /* WAS DYNAM ALLOC-D     @Y30LB01*/
@RF00590 TM    WALLOC,B'01000000'                                  0599
         BNO   @RF00599                                            0599
*     DO;                           /* DEALLOCATE IT         @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0600
*       /*************************************************************/
*       /*                                                           */
*       /* UDEALLOC CALL TO DEALLOCATE WORK FILE             @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0601
*       CALL IDCSADL0(GDTTBL,ALLAGL);/* DEALLO VIA UDEALLOC  @Y30LB01*/
         L     @15,@PC00001                                        0601
         ST    @15,@AL00001                                        0601
         L     @01,WALLPTR                                         0601
         ST    @01,@AL00001+4                                      0601
         MVI   @AL00001+4,X'80'                                    0601
         L     @15,GDTDLC(,@15)                                    0601
         LA    @01,@AL00001                                        0601
         BALR  @14,@15                                             0601
*       RESPECIFY                                                  0602
*         RTNREG RSTD;                                             0602
*       TESTRC=RTNREG;                                             0603
         STH   RTNREG,TESTRC                                       0603
*       RESPECIFY                                                  0604
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0604
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN FROM UDEALLOC AND IF FAIL             @Y30LB01*/
*       /* CODE RETURNED SET LASTCOND TO MAXIMUM             @Y30LB01*/
*       /* VALUE(LASTCOND OR RETURN FROM UDEALLOC)           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0605
*       IF TESTRC^=0 THEN           /* ERROR RETURN CODE     @Y30LB01*/
         LH    @15,TESTRC                                          0605
         LTR   @15,@15                                             0605
         BZ    @RF00605                                            0605
*         LASTCOND=MAX(LASTCOND,TESTRC);/* SET LASTCOND      @Y30LB01*/
         L     @14,@PC00001+8                                      0606
         LH    @09,LASTCOND(,@14)                                  0606
         CR    @09,@15                                             0606
         BNL   *+6
         LR    @09,@15                                             0606
         STH   @09,LASTCOND(,@14)                                  0606
*     END;                          /* END DEALLOC CODE      @Y30LB01*/
*                                                                  0607
@RF00605 DS    0H                                                  0608
*   /*****************************************************************/
*   /*                                                               */
*   /* ******END OF UDEALLOC WORKFILE CODE **************    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0608
*                                                                  0608
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE CALLERS RETURN ADDR AND RETURN                @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0608
*   RESPECIFY                                                      0608
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
@RF00599 DS    0H                                                  0609
*   REG14=RETADDR;                  /* RESTORE RETURN ADDR   @Y30LB01*/
         L     REG14,RETADDR                                       0609
*   RETURN CODE(LASTCOND);          /* RETURN TO CALLER      @Y30LB01*/
         L     @09,@PC00001+8                                      0610
         LH    @15,LASTCOND(,@09)                                  0610
@EL00003 DS    0H                                                  0610
@EF00003 DS    0H                                                  0610
@ER00003 BR    @14                                                 0610
*   RESPECIFY                                                      0611
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   END TRACEDMP;                   /*                       @Y30LB01*/
*                                                                  0613
*/*******************************************************    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* PROCEDURE NAME - TRALLOC                                 @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* FUNCTION - TO DYNAMMICALLY ALLOCATE TRACE WORK DATASET   @Y30LB01*/
*/*            IF REQUIRED, TO DETERMINE VOLSER OF WORK      @Y30LB01*/
*/*            DATASET, AND TO VERIFY WORKFILE IS ALLOCATED  @Y30LB01*/
*/*            TO A VIRTUAL UNIT.                            @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* INPUTS - FDTTBL,LASTCOND                                 @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* OUTPUTS - LASTCOND = 0  SUCCESSFUL FUNCTION              @Y30LB01*/
*/*           LASTCOND = 12 TERMINAL ERROR                   @Y30LB01*/
*/*           TRACVOL = VOLID - IF NO ERROR                  @Y30LB01*/
*/*           WALLOC = ON - FLAG TO INDICATE DYNAM ALLOCATED @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*******************************************************    @Y30LB01*/
*                                                                  0613
*TRALLOC:                                                          0613
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Y30LB01*/
TRALLOC  DS    0H                                                  0614
*                                                                  0614
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE CALLERS RETURN ADDRESS AND SET INTERNAL TRACE    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0614
*   RESPECIFY                                                      0614
*     REG14 RSTD;                   /* RESTRICT REG14        @Y30LB01*/
*   RETADDR1=REG14;                 /* SAVE REG 14           @Y30LB01*/
         ST    REG14,RETADDR1                                      0615
*   RESPECIFY                                                      0616
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   OLDERID2=NEWERID2;                                             0617
         L     @15,@PC00001                                        0617
         L     @14,GDTTR2(,@15)                                    0617
         MVC   @TS00001(95),NEWERID2(@14)                          0617
         MVC   OLDERID2(95,@14),@TS00001                           0617
*   NEWID2='TRAE';                  /* SET TRACE ID          @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0618
         MVC   NEWID2(4,@14),@CC01343                              0618
*   /*****************************************************************/
*   /*                                                               */
*   /* IF WORK FILE MUST BE DYNAMMICALLY ALLOCATED, BUILD    @Y30LB01*/
*   /* UALLOC ARGUMENT LIST (ALLAGL), DIAG DUMP ALLAGL,      @Y30LB01*/
*   /* AND ISSUE UALLOC TO ALLOCATE THE WORK FILE.           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0619
*   IF ADDR(WDS)^=0 THEN            /* NEEDS DYNAM ALLOC     @Y30LB01*/
         SLR   @14,@14                                             0619
         L     @09,@PC00001+4                                      0619
         L     @09,FDTPTR+52(,@09)                                 0619
         CR    @09,@14                                             0619
         BE    @RF00619                                            0619
*     DO;                           /* ALLOCATE IT           @Y30LB01*/
*       WALLPTR=ADDR(WALLOLST);     /* SET PTR TO ALLAGL     @Y30LB01*/
         LA    @08,WALLOLST                                        0621
         ST    @08,WALLPTR                                         0621
*       RESPECIFY                                                  0622
*         ALLAGL BASED(WALLPTR);    /* ADDRESS AREA          @Y30LB01*/
*       WALLOLST=''B;               /* CLEAR AREA            @Y30LB01*/
*                                                                  0623
         XC    WALLOLST(31),WALLOLST                               0623
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE UALLOC ARGUMENT LIST                   @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0624
*       ALLDSN=ADDR(WDSVAL);        /* DSNAME PARM           @Y30LB01*/
         LA    @09,WDSVAL(,@09)                                    0624
         ST    @09,ALLDSN(,@08)                                    0624
*       ALLSTSOD=ON;                /* STATUS OLD PARM       @Y30LB01*/
         OI    ALLSTSOD(@08),B'00000001'                           0625
*       ALLDSPKP=ON;                /* DISP KEEP PARM        @Y30LB01*/
         OI    ALLDSPKP(@08),B'00001000'                           0626
*       ALLOPTDS=ON;                /* DS ALLO PARM          @Y30LB01*/
         OI    ALLOPTDS(@08),B'01000000'                           0627
*       WUCNT=WORKUCNT;             /* SET NUM UNITS TO 1    @Y30LB01*/
         MVC   WUCNT(2),@CH00219                                   0628
*       WULN=LENGTH(WORKUNME);      /* SET LENGTH UNIT PARM  @Y30LB01*/
         MVC   WULN(2),@CH00286                                    0629
*       WUNAME=WORKUNME;            /* SET UNIT ESOTER NAME  @Y30LB01*/
         MVI   WUNAME+5,C' '                                       0630
         MVC   WUNAME+6(2),WUNAME+5                                0630
         MVC   WUNAME(5),@CC01299                                  0630
*       ALLULP=ADDR(WORKUNIT);      /* SET PTR TO UNIT LIST  @Y30LB01*/
*                                                                  0631
         LA    @09,WORKUNIT                                        0631
         ST    @09,ALLULP(,@08)                                    0631
*       /*************************************************************/
*       /*                                                           */
*       /* USING DMPSTART, DMPITEM, DMPEND MACROS SET        @Y30LB01*/
*       /* DIAGNOSTIC DUMP ALLOCATION PARAMETERS             @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0632
*       IF GDTDBG=NULLPTR THEN                                     0632
         C     @14,GDTDBG(,@15)                                    0632
         BE    @RT00632                                            0632
*         ;                                                        0633
*       ELSE                                                       0634
*         DO;                                                      0634
*           DMPINDEX=ADDR(DUMPAREA);/* START DUMP LIST       @Y30LB01*/
         LA    @15,DUMPAREA                                        0635
         ST    @15,DMPINDEX                                        0635
*           DMPITMNM='ALLAGL';                                     0636
         MVI   DMPITMNM+6(@15),C' '                                0636
         MVI   DMPITMNM+7(@15),C' '                                0636
         MVC   DMPITMNM(6,@15),@CC01345                            0636
*           DMPITMPT=ADDR(ALLAGL);                                 0637
         L     @14,WALLPTR                                         0637
         ST    @14,DMPITMPT(,@15)                                  0637
*           DMPITMLN=LENGTH(ALLAGL);                               0638
         MVC   DMPITMLN(2,@15),@CH00044                            0638
*           DMPITMTP='H';                                          0639
         MVI   DMPITMTP(@15),C'H'                                  0639
*           DMPINDEX=DMPINDEX+DMPELEMT;/* HEX DUMP           @Y30LB01*/
         AL    @15,@CF00474                                        0640
         ST    @15,DMPINDEX                                        0640
*           DMPTRM=DMPTRMVL;                                       0641
         MVI   DMPTRM(@15),X'FF'                                   0641
*         END;                      /* END DUMP LIST         @Y30LB01*/
*                                                                  0642
*       /*************************************************************/
*       /*                                                           */
*       /* UDUMP CALL TO DIAG DUMP ALLAGL                    @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0643
*       IF GDTDBG=NULLPTR THEN                                     0643
@RT00632 L     @15,@PC00001                                        0643
         L     @15,GDTDBG(,@15)                                    0643
         LTR   @15,@15                                             0643
         BZ    @RT00643                                            0643
*         ;                                                        0644
*       ELSE                                                       0645
*         CALL IDCDB010(GDTTBL,'TRAL',ADDR(DUMPAREA));/* UDUMP ALLAGL
*                                                            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0645
         L     @15,@PC00001                                        0645
         ST    @15,@AL00001                                        0645
         LA    @14,@CC01346                                        0645
         ST    @14,@AL00001+4                                      0645
         LA    @14,DUMPAREA                                        0645
         ST    @14,@AFTEMPS+8                                      0645
         LA    @14,@AFTEMPS+8                                      0645
         ST    @14,@AL00001+8                                      0645
         MVI   @AL00001+8,X'80'                                    0645
         L     @15,GDTDBG(,@15)                                    0645
         LA    @01,@AL00001                                        0645
         BALR  @14,@15                                             0645
*       /*************************************************************/
*       /*                                                           */
*       /* UALLOC CALL TO ALLOCATE WORK FILE                 @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0646
*       CALL IDCSAAL0(GDTTBL,ALLAGL);/* ALLOCATE VIA UALLOC  @Y30LB01*/
@RT00643 L     @15,@PC00001                                        0646
         ST    @15,@AL00001                                        0646
         L     @01,WALLPTR                                         0646
         ST    @01,@AL00001+4                                      0646
         MVI   @AL00001+4,X'80'                                    0646
         L     @15,GDTALC(,@15)                                    0646
         LA    @01,@AL00001                                        0646
         BALR  @14,@15                                             0646
*       RESPECIFY                                                  0647
*         RTNREG RSTD;                                             0647
*       TESTRC=RTNREG;                                             0648
         STH   RTNREG,TESTRC                                       0648
*       RESPECIFY                                                  0649
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0649
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN FROM UALLOC AND IF FAIL CODE          @Y30LB01*/
*       /* RETURNED SET LASTCOND TO TERMINAL VALUE           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0650
*       IF TESTRC^=0 THEN           /* BAD RETURN            @Y30LB01*/
         LH    @15,TESTRC                                          0650
         LTR   @15,@15                                             0650
         BZ    @RF00650                                            0650
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0651
         MVC   LASTCOND(2,@15),@CH00567                            0651
*       ELSE                                                       0652
*         WALLOC=ON;                /* SET DYNAM ALLO SW ON  @Y30LB01*/
         B     @RC00650                                            0652
@RF00650 OI    WALLOC,B'01000000'                                  0652
*     END;                          /* END UALLOC CODE       @Y30LB01*/
*                                                                  0653
@RC00650 DS    0H                                                  0654
*   /*****************************************************************/
*   /*                                                               */
*   /* *********END OF WORKFILE ALLOCATION CODE *********    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0654
*                                                                  0654
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE IS TO GET THE WORK FILE VOLUME SERIAL       @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0654
*   IF LASTCOND=0 THEN              /* NO ERRORS             @Y30LB01*/
@RF00619 L     @15,@PC00001+8                                      0654
         LH    @15,LASTCOND(,@15)                                  0654
         LTR   @15,@15                                             0654
         BNZ   @RF00654                                            0654
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*       TINFOPTR=ADDR(PARMLST);     /* SET PTR TO PARM AREA  @Y30LB01*/
         LA    @15,PARMLST                                         0656
         ST    @15,TINFOPTR                                        0656
*       RESPECIFY                                                  0657
*         IOINFOPT BASED(TINFOPTR); /* SET BASE              @Y30LB01*/
*       IOINFOPT=''B;               /* CLEAR PARM AREA       @Y30LB01*/
*                                                                  0658
         MVI   IOINFOPT(@15),X'00'                                 0658
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE UIOINFO OPTION LIST                    @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0659
*       IOINFVOL=ON;                /* VOLID OPT PARM        @Y30LB01*/
         OI    IOINFVOL(@15),B'01000000'                           0659
*       VOLPTR=ADDR(VOLDATA);       /* SET PTR TO AREA       @Y30LB01*/
         LA    @15,VOLDATA                                         0660
         ST    @15,VOLPTR                                          0660
*       VOLDATA=''B;                /* CLEAR DATA AREA       @Y30LB01*/
         XC    VOLDATA(38),VOLDATA                                 0661
*       HDRLN1=LENGTH(VOLDATA);     /* SET AREA LENGTH       @Y30LB01*/
         MVC   HDRLN1(2),@CH01385                                  0662
*       IF WALLOC=ON THEN           /* IF DYNAM ALLOC D      @Y30LB01*/
         TM    WALLOC,B'01000000'                                  0663
         BNO   @RF00663                                            0663
*         TRACDDN=ALLDDN;           /* DDNAME FROM ALLAGL    @Y30LB01*/
         L     @01,WALLPTR                                         0664
         MVC   TRACDDN(8),ALLDDN(@01)                              0664
*       ELSE                                                       0665
*         TRACDDN=WFILEVAL;         /* DDNAME FROM FDT       @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0665
         B     @RC00663                                            0665
@RF00663 L     @15,@PC00001+4                                      0665
         L     @01,FDTPTR+48(,@15)                                 0665
         MVC   TRACDDN(8),WFILEVAL(@01)                            0665
*       /*************************************************************/
*       /*                                                           */
*       /* UIOINFO CALL TO GET VOLID                         @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0666
*       CALL IDCIOSI0(GDTTBL,IOINFOPT,VOLPTR,TRACDDN);/*     @Y30LB01*/
@RC00663 L     @15,@PC00001                                        0666
         ST    @15,@AL00001                                        0666
         L     @01,TINFOPTR                                        0666
         ST    @01,@AL00001+4                                      0666
         LA    @14,VOLPTR                                          0666
         ST    @14,@AL00001+8                                      0666
         LA    @14,TRACDDN                                         0666
         ST    @14,@AL00001+12                                     0666
         MVI   @AL00001+12,X'80'                                   0666
         L     @15,GDTIFO(,@15)                                    0666
         LA    @01,@AL00001                                        0666
         BALR  @14,@15                                             0666
*       RESPECIFY                                                  0667
*         RTNREG RSTD;                                             0667
*       TESTRC=RTNREG;                                             0668
         STH   RTNREG,TESTRC                                       0668
*       RESPECIFY                                                  0669
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0669
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN FROM UIOINFO AND IF FAIL CODE         @Y30LB01*/
*       /* RETURNED SET LASTCOND TO TERMINAL VALUE           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0670
*       IF TESTRC^=0 THEN           /* BAD RETURN CODE       @Y30LB01*/
         LH    @15,TESTRC                                          0670
         LTR   @15,@15                                             0670
         BZ    @RF00670                                            0670
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0671
         MVC   LASTCOND(2,@15),@CH00567                            0671
*       ELSE                                                       0672
*         VOLPTR=ADDR(TRACVOL);     /* GOOD RETURN THEN SET  @Y30LB01
*                                      VOLPTR TO VOLID FLD   @Y30LB01*/
         B     @RC00670                                            0672
@RF00670 LA    @15,TRACVOL                                         0672
         ST    @15,VOLPTR                                          0672
*     END;                          /* END UIOINFO CODE      @Y30LB01*/
*                                                                  0673
@RC00670 DS    0H                                                  0674
*   /*****************************************************************/
*   /*                                                               */
*   /* *********** END OF UIOINFO CODE TO GET VOLSER *****   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0674
*                                                                  0674
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CODE IS TO VERIFY THAT THE WORK DATASET IS       @Y30LB01*/
*   /* ALLOCATED TO A VIRTUAL UNIT.                          @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0674
*   IF LASTCOND=0 THEN              /* NO ERRORS             @Y30LB01*/
@RF00654 SLR   @15,@15                                             0674
         L     @14,@PC00001+8                                      0674
         CH    @15,LASTCOND(,@14)                                  0674
         BNE   @RF00674                                            0674
*     DO;                           /* VERIFY UNIT           @Y30LB01*/
*       TUMSSPTR=ADDR(PARMLST);     /* SET PTR TO AREA       @Y30LB01*/
         LA    @14,PARMLST                                         0676
         ST    @14,TUMSSPTR                                        0676
*       RESPECIFY                                                  0677
*         CKAGL BASED(TUMSSPTR);    /* SET BASE              @Y30LB01*/
*       CKAGL=''B;                  /* CLEAR PARM AREA       @Y30LB01*/
*                                                                  0678
         XC    CKAGL(29,@14),CKAGL(@14)                            0678
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE UMSSUNIT CHECK PARMS TO TEST FOR       @Y30LB01*/
*       /* VIRTUAL UNIT.                                     @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0679
*       TUCBPTR=NULLPTR;            /* CLEAR UCB PTR FIELD   @Y30LB01*/
         ST    @15,TUCBPTR                                         0679
*       CKUCBPTR=ADDR(TUCBPTR);     /* UCBPTR PARM           @Y30LB01*/
         LA    @15,TUCBPTR                                         0680
         ST    @15,CKUCBPTR(,@14)                                  0680
*       CKDDNAME=TRACDDN;           /* DDN FROM FDTTBL       @Y30LB01*/
         MVC   CKDDNAME(8,@14),TRACDDN                             0681
*       CKTESTVT=ON;                /* VIRTUAL TEST PARM     @Y30LB01*/
         OI    CKTESTVT(@14),B'10000000'                           0682
*       CKLABELP=VOLPTR;            /* VOLID PTR PARM        @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0683
         L     @15,VOLPTR                                          0683
         ST    @15,CKLABELP(,@14)                                  0683
*       /*************************************************************/
*       /*                                                           */
*       /* UMSSUNIT CALL TO TEST IF UNIT VIRTUAL             @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0684
*       CALL IDCSA060(GDTTBL,CHECK,CKAGL);/* CHECK VIA UMSSUNIT    0684
*                                                            @Y30LB01*/
         L     @15,@PC00001                                        0684
         ST    @15,@AL00001                                        0684
         LA    @09,CHECK                                           0684
         ST    @09,@AL00001+4                                      0684
         ST    @14,@AL00001+8                                      0684
         MVI   @AL00001+8,X'80'                                    0684
         L     @15,GDTUNT(,@15)                                    0684
         LA    @01,@AL00001                                        0684
         BALR  @14,@15                                             0684
*       RESPECIFY                                                  0685
*         RTNREG RSTD;                                             0685
*       TESTRC=RTNREG;                                             0686
         STH   RTNREG,TESTRC                                       0686
*       RESPECIFY                                                  0687
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0687
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RETURN FROM UMSSUNIT AND IF FAIL CODE        @Y30LB01*/
*       /* RETURNED SET LASTCOND TO TERMINAL VALUE           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0688
*       IF TESTRC^=0 THEN           /* BAD RETURN CODE       @Y30LB01*/
         LH    @15,TESTRC                                          0688
         LTR   @15,@15                                             0688
         BZ    @RF00688                                            0688
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0689
         MVC   LASTCOND(2,@15),@CH00567                            0689
*     END;                          /* END VIRTUAL TEST      @Y30LB01*/
*                                                                  0690
@RF00688 DS    0H                                                  0691
*   /*****************************************************************/
*   /*                                                               */
*   /* ******* END OF UMSSUNIT CODE TO VERIFY UNIT *******   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0691
*                                                                  0691
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE CALLERS RETURN ADDRESS AND RETURN             @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0691
*   RESPECIFY                                                      0691
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
@RF00674 DS    0H                                                  0692
*   REG14=RETADDR1;                 /* RESTORE REG 14        @Y30LB01*/
         L     REG14,RETADDR1                                      0692
*   RETURN CODE(LASTCOND);          /* RETURN TO CALLER      @Y30LB01*/
         L     @09,@PC00001+8                                      0693
         LH    @15,LASTCOND(,@09)                                  0693
@EL00004 DS    0H                                                  0693
@EF00004 DS    0H                                                  0693
@ER00004 BR    @14                                                 0693
*   RESPECIFY                                                      0694
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   END TRALLOC;                    /* END PROCEDURE         @Y30LB01*/
*                                                                  0696
*/*******************************************************    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* PROCEDURE NAME - TRPROCES                                @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* FUNCTION - TO SET UP NECESSARY SEEK AND SEARCH           @Y30LB01*/
*/*            ARGUMENTS AND ESTABLISH THE LIMIT             @Y30LB01*/
*/*            SEARCH ARGUMENT. IT ALSO DETERMINES WHICH     @Y30LB01*/
*/*            AREA TO DUMP FIRST IF BOTH IS SPECIFIED       @Y30LB01*/
*/*            AND SETS THE SEARCH AND SEEK ARGUMENTS        @Y30LB01*/
*/*            TO DUMP THE CORRECT AREA FIRST.               @Y30LB01*/
*/*            MESSAGES ISSUED - IDC1841I TR02               @Y30LB01*/
*/*                              IDC3842I TR03               @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* INPUTS - FDTTBL,LASTCOND,CTMSG AREA                      @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* OUTPUT - LASTCOND = 0 SUCCESSFUL FUNCTION                @Y30LB01*/
*/*          LASTCOND = 4 WARNING WITH DUMP                  @Y30LB01*/
*/*          LASTCOND = 12 TERMINAL ERROR                    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*******************************************************    @Y30LB01*/
*                                                                  0696
*TRPROCES:                                                         0696
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Y30LB01*/
TRPROCES DS    0H                                                  0697
*                                                                  0697
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE CALLERS RETURN ADDRESS AND SET INTERNAL TRACE    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0697
*   RESPECIFY                                                      0697
*     REG14 RSTD;                   /* RESTRICT REG14        @Y30LB01*/
*   RETADDR1=REG14;                 /* SAVE REG 14           @Y30LB01*/
         ST    REG14,RETADDR1                                      0698
*   RESPECIFY                                                      0699
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   OLDERID2=NEWERID2;                                             0700
         L     @15,@PC00001                                        0700
         L     @14,GDTTR2(,@15)                                    0700
         MVC   @TS00001(95),NEWERID2(@14)                          0700
         MVC   OLDERID2(95,@14),@TS00001                           0700
*   NEWID2='TRAF';                  /* SET TRACE ID          @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0701
         MVC   NEWID2(4,@14),@CC01352                              0701
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE LOOP COUNTER AND IOCS FIELDS           @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0702
*   LOOPCNT=F1;                     /* INITIALIZE LOOP COUNT @Y30LB01*/
         MVC   LOOPCNT(2),@CH00219                                 0702
*   IOCDAD=ADDR(OUTBLK);            /* PTR TO OUTPUT DATA    @Y30LB01*/
         L     @14,IOCSPTR                                         0703
         L     @09,@CF01246                                        0703
         AL    @09,INBLKPTR                                        0703
         ST    @09,IOCDAD(,@14)                                    0703
*   IOCDLN=IOCTRN;                  /* SET O/P DATA LENGTH   @Y30LB01*/
*                                                                  0704
         L     @09,IOCTRN(,@14)                                    0704
         ST    @09,IOCDLN(,@14)                                    0704
*   /*****************************************************************/
*   /*                                                               */
*   /* FOLLOWING ARRAY FIELDS NULLED,USED IN COMPARES ONLY   @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0705
*   CURFILL=''B;                    /* NULL FILL AREA        @Y30LB01*/
         XC    CURFILL(3),CURFILL                                  0705
*   LIMFILL(1)=''B;                 /* NULL FILL AREA        @Y30LB01*/
         XC    LIMFILL(3),LIMFILL                                  0706
*   LIMFILL(2)=''B;                 /* NULL FILL AREA        @Y30LB01*/
         XC    LIMFILL+8(3),LIMFILL+8                              0707
*   SEEKFILL(1)=''B;                /* NULL FILL AREA        @Y30LB01*/
         XC    SEEKFILL(3),SEEKFILL                                0708
*   SEEKFILL(2)=''B;                /* NULL FILL AREA        @Y30LB01*/
         XC    SEEKFILL+8(3),SEEKFILL+8                            0709
*   SRCHFILL(1)=''B;                /* NULL FILL AREA        @Y30LB01*/
         XC    SRCHFILL(3),SRCHFILL                                0710
*   SRCHFILL(2)=''B;                /* NULL FILL AREA        @Y30LB01*/
*                                                                  0711
         XC    SRCHFILL+8(3),SRCHFILL+8                            0711
*   /*****************************************************************/
*   /*                                                               */
*   /* IF BOTH WAS SPECIFIED THEN THE CURRENT DATA           @Y30LB01*/
*   /* MUST BE A VALID VALUE BEFORE A DUMP IS MADE.          @Y30LB01*/
*   /* IF THE CURRENT DATA POINTER IS VALID, THEN            @Y30LB01*/
*   /* DETERMINE WHICH DATA AREA MUST BE DUMPED              @Y30LB01*/
*   /* FIRST AND SET UP THE SEEK AND SEARCH                  @Y30LB01*/
*   /* ARGUMENTS FOR THAT AREA, CALL TRACEIO TO              @Y30LB01*/
*   /* DUMP THAT AREA, THEN SET UP SEEK AND SEARCH           @Y30LB01*/
*   /* ARGUMENTS FOR THE OTHER AREA AND CALL TRACEIO         @Y30LB01*/
*   /* TO DUMP THAT AREA.                                    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0712
*   IF ADDR(BOTH)^=NULLPTR THEN     /* BOTH SPECIFIED        @Y30LB01*/
         L     @14,@PC00001+4                                      0712
         L     @14,FDTPTR+20(,@14)                                 0712
         LTR   @14,@14                                             0712
         BZ    @RF00712                                            0712
*     DO;                           /* PROCESS BOTH AREAS    @Y30LB01*/
*                                                                  0713
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK CURRENT DATA POINTER FIRST. IF ZERO THEN    @Y30LB01*/
*       /* CONSIDER IT TERMINAL ERROR.                       @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0714
*       IF CTTBLCC(5)=F0&           /* CYL 0                 @Y30LB01*/
*           CTTBLHH(5)=F0&          /* TRACK 0               @Y30LB01*/
*           CTTBLRR(5)=F0 THEN      /* RECORD 0              @Y30LB01*/
         L     @14,CTMSGPTR                                        0714
         CLI   CTTBLCC+16(@14),0                                   0714
         BNE   @RF00714                                            0714
         CLI   CTTBLHH+16(@14),0                                   0714
         BNE   @RF00714                                            0714
         CLI   CTTBLRR+16(@14),0                                   0714
         BNE   @RF00714                                            0714
*         DO;                       /* PROCESS AS ERROR      @Y30LB01*/
*                                                                  0715
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP UPRINT ARGUMENTS TO PRINT TRACE        @Y30LB01*/
*           /* MESSAGE IDC3842I AND ISSUE UPRINT             @Y30LB01*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0716
*           PRINTTAB=''B;           /* CLEAR PARM AREA       @Y30LB01*/
         XC    PRINTTAB(20),PRINTTAB                               0716
*           DARGSENT=MSG3842I;      /* MESSAGE INDEX         @Y30LB01*/
         L     @14,DDSTRU                                          0717
         MVI   DARGSENT(@14),X'03'                                 0717
*           DARGSMOD=TRAMSG;        /* MESSAGE MODULE        @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0718
         MVC   DARGSMOD(3,@14),@CC01280                            0718
*           /*********************************************************/
*           /*                                                       */
*           /* UPRINT CALL TO PRINT MESSAGE                  @Y30LB01*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0719
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* ISSUE UPRINT   0719
*                                                            @Y30LB01
*                                                            @Y30LB01*/
         ST    @15,@AL00001                                        0719
         LA    @14,@CF00115                                        0719
         ST    @14,@AL00001+4                                      0719
         LA    @14,DDSTRU                                          0719
         ST    @14,@AL00001+8                                      0719
         MVI   @AL00001+8,X'80'                                    0719
         L     @15,GDTPRT(,@15)                                    0719
         LA    @01,@AL00001                                        0719
         BALR  @14,@15                                             0719
*           LASTCOND=LASTCC12;      /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0720
         MVC   LASTCOND(2,@15),@CH00567                            0720
*         END;                      /* END ERROR PROCESS     @Y30LB01*/
*                                                                  0721
*       /*************************************************************/
*       /*                                                           */
*       /* VALID TWO AREA DUMP SO SET THE LOOPCNT            @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0722
*       LOOPCNT=F2;                 /* SET LOOPCNT TO 2      @Y30LB01*/
*                                                                  0722
@RF00714 MVC   LOOPCNT(2),@CH00153                                 0722
*       /*************************************************************/
*       /*                                                           */
*       /* SEE WHICH AREA TO DUMP FIRST AND SWAP IF          @Y30LB01*/
*       /* NECESSARY. IF THE CURRENT DATA POINTER IN         @Y30LB01*/
*       /* ARRAY ELEMENT 5 FALLS WITHIN THE SECOND           @Y30LB01*/
*       /* TRACE AREA DEFINED BY START ARRAY 3 AND           @Y30LB01*/
*       /* END ARRAY 4 THEN THE ARRAY ELEMENTS MUST          @Y30LB01*/
*       /* BE SWAPPED. THIS PROCEDURE PROCESSES              @Y30LB01*/
*       /* THE TRACE AREAS FROM THE BOTTOM TO THE TOP        @Y30LB01*/
*       /* OF THE ARRAY AND WILL THEREFORE PROCESS AREA      @Y30LB01*/
*       /* ONE ARRAY LAST.                                   @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0723
*       IF LASTCOND=0 THEN          /* NO ERRORS             @Y30LB01*/
         L     @15,@PC00001+8                                      0723
         LH    @15,LASTCOND(,@15)                                  0723
         LTR   @15,@15                                             0723
         BNZ   @RF00723                                            0723
*         DO;                       /* CONTINUE PROCESS      @Y30LB01*/
*           IF TRCCHHR(5)<TRCCHHR(4)&/* AREA Y END           @ZM32883*/
*               TRCCHHR(5)>TRCCHHR(3) THEN/* AREA Y START    @ZM32883*/
         L     @15,CTMSGPTR                                        0725
         CLC   TRCCHHR+16(3,@15),TRCCHHR+12(@15)                   0725
         BNL   @RF00725                                            0725
         CLC   TRCCHHR+16(3,@15),TRCCHHR+8(@15)                    0725
         BNH   @RF00725                                            0725
*             DO;                   /* SWAP NEEDED           @Y30LB01*/
*               CHRSAVE=TRCCHHR(3); /* SAVE ARRAY 3          @ZM32883*/
         MVC   CHRSAVE(3),TRCCHHR+8(@15)                           0727
*               TRCCHHR(3)=TRCCHHR(1);/* SWAP 1 TO 3         @ZM32883*/
         MVC   TRCCHHR+8(3,@15),TRCCHHR(@15)                       0728
*               TRCCHHR(1)=CHRSAVE; /* SWAP 3 TO 1           @ZM32883*/
         MVC   TRCCHHR(3,@15),CHRSAVE                              0729
*               CHRSAVE=TRCCHHR(4); /* SAVE ARRAY 4          @ZM32883*/
         MVC   CHRSAVE(3),TRCCHHR+12(@15)                          0730
*               TRCCHHR(4)=TRCCHHR(2);/* SWAP 2 TO 4         @ZM32883*/
         MVC   TRCCHHR+12(3,@15),TRCCHHR+4(@15)                    0731
*               TRCCHHR(2)=CHRSAVE; /* SWAP 4 TO 2           @ZM32883*/
         MVC   TRCCHHR+4(3,@15),CHRSAVE                            0732
*               TRSWAP=ON;          /* SET SWAP SWITCH       @Y30LB01*/
         OI    TRSWAP,B'00010000'                                  0733
*             END;                  /* END SWAP              @Y30LB01*/
*                                                                  0734
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP SEEK AND SEARCH ARGUMENTS FOR THE      @Y30LB01*/
*           /* FIRST AREA TO BE DUMPED.                      @Y30LB01*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0735
*           IF TRSWAP=ON THEN       /* AREAS SWAPPED         @Y30LB01*/
@RF00725 TM    TRSWAP,B'00010000'                                  0735
         BNO   @RF00735                                            0735
*             SEEKCC(2)=TRREALCC;   /* SEEK PER CTMSG        @ZM32883*/
         L     @01,CTMSGPTR                                        0736
         MVC   SEEKCC+8(2),TRREALCC(@01)                           0736
*           ELSE                                                   0737
*             SEEKCC(2)=TRREALCC+CYLINC;/* 4 CYLS AHEAD      @ZM32883*/
         B     @RC00735                                            0737
@RF00735 LA    @15,4                                               0737
         L     @14,CTMSGPTR                                        0737
         ICM   @14,12,TRREALCC(@14)                                0737
         SRA   @14,16                                              0737
         ALR   @15,@14                                             0737
         STH   @15,SEEKCC+8                                        0737
*           SEEKHH(2)=CTREALH;      /* SET HEAD              @Y30LB01*/
@RC00735 L     @15,CTMSGPTR                                        0738
         SLR   @14,@14                                             0738
         IC    @14,CTREALH(,@15)                                   0738
         STH   @14,SEEKHH+8                                        0738
*           SEEKR(2)=F1;            /* ALWAYS REC 1          @Y30LB01*/
         MVI   SEEKR+8,X'01'                                       0739
*           SRCHCC(2)=CTTBLCC(3);   /* START CYL             @Y30LB01*/
         SLR   @14,@14                                             0740
         IC    @14,CTTBLCC+8(,@15)                                 0740
         STH   @14,SRCHCC+8                                        0740
*           SRCHHH(2)=CTTBLHH(3);   /* START HEAD            @Y30LB01*/
         SLR   @14,@14                                             0741
         IC    @14,CTTBLHH+8(,@15)                                 0741
         STH   @14,SRCHHH+8                                        0741
*           SRCHR(2)=CTTBLRR(3);    /* START RECORD          @Y30LB01*/
         MVC   SRCHR+8(1),CTTBLRR+8(@15)                           0742
*           LIMCC(2)=CTTBLCC(4);    /* END CYL               @Y30LB01*/
         SLR   @14,@14                                             0743
         IC    @14,CTTBLCC+12(,@15)                                0743
         STH   @14,LIMCC+8                                         0743
*           LIMHH(2)=CTTBLHH(4);    /* END TRACK             @Y30LB01*/
         SLR   @14,@14                                             0744
         IC    @14,CTTBLHH+12(,@15)                                0744
         STH   @14,LIMHH+8                                         0744
*           LIMR(2)=CTTBLRR(4);     /* END RECORD            @Y30LB01*/
         MVC   LIMR+8(1),CTTBLRR+12(@15)                           0745
*         END;                      /* END SWAP CODE         @Y30LB01*/
*     END;                          /* END BOTH CODE         @Y30LB01*/
@RF00723 DS    0H                                                  0748
*                                                                  0748
*   /*****************************************************************/
*   /*                                                               */
*   /* REMAINING CODE IS DONE FOR SINGLE AREA OR BOTH        @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0748
*   IF LASTCOND=0 THEN              /* NO ERRORS             @Y30LB01*/
@RF00712 SLR   @15,@15                                             0748
         L     @14,@PC00001+8                                      0748
         CH    @15,LASTCOND(,@14)                                  0748
         BNE   @RF00748                                            0748
*     DO;                           /* CONTINUE PROCESS      @Y30LB01*/
*                                                                  0749
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE CURRENT CCHHR FROM THE PROPER COPY MSG    @Y30LB01*/
*       /* ARRAY ELEMENT. IF TWO AREAS WERE REQUESTED THEN   @Y30LB01*/
*       /* THE CURRENT CCHHR IS TAKEN FROM ARRAY ELEMENT     @Y30LB01*/
*       /* 5. IF ONE AREA REQUESTED THEN ITS FROM ARRAY      @Y30LB01*/
*       /* ELEMENT 3.                                        @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0750
*       IF ADDR(BOTH)^=NULLPTR THEN /* SET CURRENT           @Y30LB01*/
         L     @14,@PC00001+4                                      0750
         C     @15,FDTPTR+20(,@14)                                 0750
         BE    @RF00750                                            0750
*         DO;                       /* PROPER FIELD          @Y30LB01*/
*           CURRCC=CTTBLCC(5);      /* CURRENT CYL           @Y30LB01*/
         L     @15,CTMSGPTR                                        0752
         SLR   @14,@14                                             0752
         IC    @14,CTTBLCC+16(,@15)                                0752
         STH   @14,CURRCC                                          0752
*           CURRHH=CTTBLHH(5);      /* CURRENT TRACK         @Y30LB01*/
         SLR   @14,@14                                             0753
         IC    @14,CTTBLHH+16(,@15)                                0753
         STH   @14,CURRHH                                          0753
*           CURRR=CTTBLRR(5);       /* CURRENT RECORD        @Y30LB01*/
         MVC   CURRR(1),CTTBLRR+16(@15)                            0754
*         END;                      /* END FOR BOTH OPTION   @Y30LB01*/
*                                                                  0755
*       /*************************************************************/
*       /*                                                           */
*       /* SET CURRENT CCHHR FROM ARRAY ELEMENT 3            @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0756
*       ELSE                        /* SINGLE AREA OPTION    @Y30LB01*/
*         DO;                       /* SET FOR SINGLE        @Y30LB01*/
         B     @RC00750                                            0756
@RF00750 DS    0H                                                  0757
*           CURRCC=CTTBLCC(3);      /* CURRENT CYL           @Y30LB01*/
         L     @15,CTMSGPTR                                        0757
         SLR   @14,@14                                             0757
         IC    @14,CTTBLCC+8(,@15)                                 0757
         STH   @14,CURRCC                                          0757
*           CURRHH=CTTBLHH(3);      /* CURRENT TRACK         @Y30LB01*/
         SLR   @14,@14                                             0758
         IC    @14,CTTBLHH+8(,@15)                                 0758
         STH   @14,CURRHH                                          0758
*           CURRR=CTTBLRR(3);       /* CURRENT RECORD        @Y30LB01*/
         MVC   CURRR(1),CTTBLRR+8(@15)                             0759
*         END;                      /* END SINGLE OPTION     @Y30LB01*/
*                                                                  0760
*       /*************************************************************/
*       /*                                                           */
*       /* SET SEEK AND SEARCH ARGUMENTS FOR LAST OR         @Y30LB01*/
*       /* ONLY AREA TO BE DUMPED.                           @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0761
*       IF ADDR(BOTH)^=NULLPTR&     /* TWO AREA SPECIFIED    @Y30LB01*/
*           TRSWAP=ON THEN          /* SWAP MADE             @Y30LB01*/
@RC00750 L     @15,@PC00001+4                                      0761
         L     @15,FDTPTR+20(,@15)                                 0761
         LTR   @15,@15                                             0761
         BZ    @RF00761                                            0761
         TM    TRSWAP,B'00010000'                                  0761
         BNO   @RF00761                                            0761
*         SEEKCC(1)=TRREALCC+CYLINC;/* ADD 4 TO CTMSG REALCC @ZM32883*/
         LA    @15,4                                               0762
         L     @14,CTMSGPTR                                        0762
         ICM   @14,12,TRREALCC(@14)                                0762
         SRA   @14,16                                              0762
         ALR   @15,@14                                             0762
         STH   @15,SEEKCC                                          0762
*       ELSE                                                       0763
*         SEEKCC(1)=TRREALCC;       /* USE CTMSG REALCC AS IS@ZM32883*/
         B     @RC00761                                            0763
@RF00761 L     @01,CTMSGPTR                                        0763
         MVC   SEEKCC(2),TRREALCC(@01)                             0763
*       SEEKHH(1)=CTREALH;          /* SET HEAD              @Y30LB01*/
@RC00761 L     @15,CTMSGPTR                                        0764
         SLR   @14,@14                                             0764
         IC    @14,CTREALH(,@15)                                   0764
         STH   @14,SEEKHH                                          0764
*       SEEKR(1)=F1;                /* ALWAYS REC 1          @Y30LB01*/
         MVI   SEEKR,X'01'                                         0765
*       SRCHCC(1)=CTTBLCC(1);       /* START CYL             @Y30LB01*/
         SLR   @14,@14                                             0766
         IC    @14,CTTBLCC(,@15)                                   0766
         STH   @14,SRCHCC                                          0766
*       SRCHHH(1)=CTTBLHH(1);       /* START HEAD            @Y30LB01*/
         SLR   @14,@14                                             0767
         IC    @14,CTTBLHH(,@15)                                   0767
         STH   @14,SRCHHH                                          0767
*       SRCHR(1)=CTTBLRR(1);        /* START RECORD          @Y30LB01*/
         MVC   SRCHR(1),CTTBLRR(@15)                               0768
*       LIMCC(1)=CTTBLCC(2);        /* END CYL               @Y30LB01*/
         SLR   @14,@14                                             0769
         IC    @14,CTTBLCC+4(,@15)                                 0769
         STH   @14,LIMCC                                           0769
*       LIMHH(1)=CTTBLHH(2);        /* END TRACK             @Y30LB01*/
         SLR   @14,@14                                             0770
         IC    @14,CTTBLHH+4(,@15)                                 0770
         STH   @14,LIMHH                                           0770
*       LIMR(1)=CTTBLRR(2);         /* END RECORD            @Y30LB01*/
         MVC   LIMR(1),CTTBLRR+4(@15)                              0771
*                                                                  0772
*       /*************************************************************/
*       /*                                                           */
*       /* DO LOOP TO DUMP ONE OR TWO AREAS OR UNTIL         @Y30LB01*/
*       /* ERROR CONDITION.                                  @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0772
*       DO UNTIL LOOPCNT=F0×(LASTCOND>LASTCC04);/*           @Y30LB01*/
*                                                                  0772
@DL00772 DS    0H                                                  0773
*         /***********************************************************/
*         /*                                                         */
*         /* IF CURRENT DATA WAS SPECIFIED AND THIS IS       @Y30LB01*/
*         /* THE LAST AREA TO BE DUMPED THEN A LIMIT         @Y30LB01*/
*         /* TO THE DUMP MUST BE ESTABLISHED.                @Y30LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0773
*         IF ADDR(ZXMAX)=NULLPTR&LOOPCNT=F1 THEN/* CURR      @Y30LB01*/
         L     @15,@PC00001+4                                      0773
         L     @15,FDTPTR+36(,@15)                                 0773
         LTR   @15,@15                                             0773
         BNZ   @RF00773                                            0773
         LH    @15,LOOPCNT                                         0773
         LA    @14,1                                               0773
         CR    @15,@14                                             0773
         BNE   @RF00773                                            0773
*           DO;                     /* SEE IF IN AREA        @Y30LB01*/
*                                                                  0774
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP THE LIMITCHR TO EQUAL THE CURRENT    @Y30LB01*/
*             /* DATA RECORD POINTER MINUS ONE IF THE        @Y30LB01*/
*             /* CURRENT RECORD IS IN THE AREA NOW BEING     @Y30LB01*/
*             /* PROCESSED & IS NOT ZERO.                    @Y30LB01*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0775
*             IF CURCHR<=LIMITCHR(LOOPCNT)&/*                @ZM31000*/
*                 CURCHR>SRCHCHR(LOOPCNT) THEN/*             @Y30LB01*/
         SLA   @15,3                                               0775
         LA    @01,LIMITCHR-8(@15)                                 0775
         CLC   CURCHR(8),0(@01)                                    0775
         BH    @RF00775                                            0775
         LA    @01,SRCHCHR-8(@15)                                  0775
         CLC   CURCHR(8),0(@01)                                    0775
         BNH   @RF00775                                            0775
*               DO;                 /* IN CURRENT AREA       @Y30LB01*/
*                 LIMITCHR(LOOPCNT)=CURCHR;/* SET LIMIT      @Y30LB01*/
         LA    @01,LIMITCHR-8(@15)                                 0777
         MVC   0(8,@01),CURCHR                                     0777
*                 IF LIMR(LOOPCNT)>1 THEN/*                  @ZM31000*/
         SLR   @09,@09                                             0778
         IC    @09,LIMR-8(@15)                                     0778
         CR    @09,@14                                             0778
         BNH   @RF00778                                            0778
*                   LIMR(LOOPCNT)=LIMR(LOOPCNT)-1;/*         @ZM31000*/
         BCTR  @09,0                                               0779
         STC   @09,LIMR-8(@15)                                     0779
*                 ELSE              /*                       @ZM31000*/
*                   IF LIMR(LOOPCNT)=1 THEN/*                @ZM31000*/
         B     @RC00778                                            0780
@RF00778 LH    @15,LOOPCNT                                         0780
         SLA   @15,3                                               0780
         SLR   @14,@14                                             0780
         IC    @14,LIMR-8(@15)                                     0780
         C     @14,@CF00219                                        0780
         BNE   @RF00780                                            0780
*                     DO;           /*                       @ZM31000*/
*                       LIMR(LOOPCNT)=32;/*                  @ZM31000*/
         LA    @14,32                                              0782
         STC   @14,LIMR-8(@15)                                     0782
*                       IF LIMHH(LOOPCNT)=0 THEN/*           @ZM31000*/
         LH    @14,LIMHH-8(@15)                                    0783
         LTR   @14,@14                                             0783
         BNZ   @RF00783                                            0783
*                         DO;       /*                       @ZM31000*/
*                           LIMCC(LOOPCNT)=LIMCC(LOOPCNT)-1;       0785
         LH    @14,LIMCC-8(@15)                                    0785
         BCTR  @14,0                                               0785
         STH   @14,LIMCC-8(@15)                                    0785
*                           LIMHH(LOOPCNT)=18;/*             @ZM31000*/
         LA    @14,18                                              0786
         STH   @14,LIMHH-8(@15)                                    0786
*                         END;      /*                       @ZM31000*/
*                       ELSE        /*                       @ZM31000*/
*                         LIMHH(LOOPCNT)=LIMHH(LOOPCNT)-1;         0788
         B     @RC00783                                            0788
@RF00783 LH    @15,LOOPCNT                                         0788
         SLA   @15,3                                               0788
         LH    @14,LIMHH-8(@15)                                    0788
         BCTR  @14,0                                               0788
         STH   @14,LIMHH-8(@15)                                    0788
*                     END;          /*                       @ZM31000*/
*                   ELSE            /*                       @ZM31000*/
*                     LIMR(LOOPCNT)=1;/*                     @ZM31000*/
         B     @RC00780                                            0790
@RF00780 LH    @15,LOOPCNT                                         0790
         SLA   @15,3                                               0790
         LA    @14,1                                               0790
         STC   @14,LIMR-8(@15)                                     0790
*               END;                /* END CURRENT SET       @Y30LB01*/
*                                                                  0791
*             /*******************************************************/
*             /*                                                     */
*             /* THE CURRENT DATA POINTER IS NOT AS          @Y30LB01*/
*             /* EXPECTED. A WARNING MESSAGE MUST BE         @Y30LB01*/
*             /* PRINTED UNLESS THE FOLLOWING CONDITIONS     @Y30LB01*/
*             /* ARE MET:                                    @Y30LB01*/
*             /* A. X OR Y DUMP AND CURRENT DATA PTR ^= 0    @Y30LB01*/
*             /* B. INACTIVE DUMP REQUESTED                  @Y30LB01*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0792
*             ELSE                  /* CHECK FOR ACTIVE REQ  @Y30LB01*/
*               IF ADDR(INACT)=NULLPTR THEN/* INACT NOT SPEC @Y30LB01*/
         B     @RC00775                                            0792
@RF00775 SLR   @15,@15                                             0792
         L     @14,@PC00001+4                                      0792
         C     @15,FDTPTR+28(,@14)                                 0792
         BNE   @RF00792                                            0792
*                 DO;               /* PROCESS ERROR         @Y30LB01*/
*                   IF(ADDR(X)^=NULLPTR×/* X SPECIFIED       @Y30LB01*/
*                       ADDR(Y)^=NULLPTR)&/* Y SPECIFIED     @Y30LB01*/
*                       CURPTR>INVALID THEN                        0794
         C     @15,FDTPTR+12(,@14)                                 0794
         BNE   @GL00010                                            0794
         C     @15,FDTPTR+16(,@14)                                 0794
         BE    @RF00794                                            0794
@GL00010 CLC   CURPTR(5),@CB01295                                  0794
         BH    @RT00794                                            0794
*                     ;             /* VALID CURRENT         @Y30LB01*/
*                   ELSE            /* WARNING MESSAGE       @Y30LB01*/
*                     DO;           /* REQUIRED              @Y30LB01*/
*                                                                  0796
@RF00794 DS    0H                                                  0797
*                       /*********************************************/
*                       /*                                           */
*                       /* SET UP UPRINT ARGS FOR MESSAGE    @Y30LB01*/
*                       /* IDC1841I AND ISSUE UPRINT         @Y30LB01*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0797
*                       PRINTTAB=''B;/* CLEAR AREA           @Y30LB01*/
         XC    PRINTTAB(20),PRINTTAB                               0797
*                       DARGSENT=MSG1841I;/* SET MSG INDEX   @Y30LB01*/
         L     @15,DDSTRU                                          0798
         MVI   DARGSENT(@15),X'02'                                 0798
*                       DARGSMOD=TRAMSG;/* SET MODULE ID     @Y30LB01*/
*                                                                  0799
         MVC   DARGSMOD(3,@15),@CC01280                            0799
*                       /*********************************************/
*                       /*                                           */
*                       /* UPRINT CALL TO PRINT MESSAGE      @Y30LB01*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0800
*                       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*    0800
*                                      UPRINT                @Y30LB01*/
         L     @15,@PC00001                                        0800
         ST    @15,@AL00001                                        0800
         LA    @14,@CF00115                                        0800
         ST    @14,@AL00001+4                                      0800
         LA    @14,DDSTRU                                          0800
         ST    @14,@AL00001+8                                      0800
         MVI   @AL00001+8,X'80'                                    0800
         L     @15,GDTPRT(,@15)                                    0800
         LA    @01,@AL00001                                        0800
         BALR  @14,@15                                             0800
*                       LASTCOND=LASTCC04;/* SET LASTCOND    @Y30LB01*/
         L     @15,@PC00001+8                                      0801
         MVC   LASTCOND(2,@15),@CH00042                            0801
*                     END;          /* END WARNING MSG       @Y30LB01*/
*                 END;              /* END ERROR PROCESS     @Y30LB01*/
@RT00794 DS    0H                                                  0804
*           END;                    /* END SET LIMIT         @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0804
@RF00792 DS    0H                                                  0804
@RC00775 DS    0H                                                  0805
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TRACEIO PROC TO DO THE I/O                 @Y30LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0805
*         CALL TRACEIO;             /* CALL IO ROUTINE       @Y30LB01
*                                                            @Y30LB01*/
@RF00773 BAL   @14,TRACEIO                                         0805
*         LOOPCNT=LOOPCNT-F1;       /* DEC LOOP COUNT        @Y30LB01*/
         LH    @15,LOOPCNT                                         0806
         BCTR  @15,0                                               0806
         STH   @15,LOOPCNT                                         0806
*       END;                        /* END DO UNTIL LOOP     @Y30LB01*/
@DE00772 LH    @15,LOOPCNT                                         0807
         LTR   @15,@15                                             0807
         BZ    @DC00772                                            0807
         L     @15,@PC00001+8                                      0807
         LH    @15,LASTCOND(,@15)                                  0807
         C     @15,@CF00042                                        0807
         BNH   @DL00772                                            0807
@DC00772 DS    0H                                                  0808
*     END;                          /* END IO SETUP          @Y30LB01*/
*                                                                  0809
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE CALLERS RETURN ADDRESS AND RETURN             @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0809
*   RESPECIFY                                                      0809
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
@RF00748 DS    0H                                                  0810
*   REG14=RETADDR1;                 /* RESTORE REG 14        @Y30LB01*/
         L     REG14,RETADDR1                                      0810
*   RETURN CODE(LASTCOND);          /* RETURN TO CALLER      @Y30LB01*/
         L     @09,@PC00001+8                                      0811
         LH    @15,LASTCOND(,@09)                                  0811
@EL00005 DS    0H                                                  0811
@EF00005 DS    0H                                                  0811
@ER00005 BR    @14                                                 0811
*   RESPECIFY                                                      0812
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   END TRPROCES;                   /* END PROCEDURE         @Y30LB01*/
*                                                                  0814
*/*******************************************************    @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* PROCEDURE NAME - TRACEIO                                 @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* FUNCTION - READ THE WORK FILE, VERIFY GOOD DATE,         @Y30LB01*/
*/*            AND WRITE GOOD DATA TO THE OUTPUT             @Y30LB01*/
*/*            FILE FOR ONE COMPLETE TRACE AREA EACH         @Y30LB01*/
*/*            TIME THE PROC IS ENTERED.                     @Y30LB01*/
*/*            MESSAGES ISSUED - IDC1840I TR01               @Y30LB01*/
*/*                              IDC2843I TR04               @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* INPUTS - FDTTBL,LASTCOND,LOOPCNT,                        @Y30LB01*/
*/*          LIMIT-SEEK-SEARCH CCHHR ARRAYS                  @Y30LB01*/
*/*                                                          @Y30LB01*/
*/* OUTPUTS - LASTCOND = 0  FUNCTION SUCCESSFUL              @Y30LB01*/
*/*           LASTCOND = 4  NULL DATA SET - NO DUMP          @Y30LB01*/
*/*           LASTCOND = 8  SOME DATA DUMPED - WITH WARNING  @Y30LB01*/
*/*           LASTCOND = 12 TERMINAL ERROR - NO DATA DUMPED  @Y30LB01*/
*/*                                                          @Y30LB01*/
*/*******************************************************    @Y30LB01*/
*                                                                  0814
*TRACEIO:                                                          0814
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @Y30LB01*/
TRACEIO  DS    0H                                                  0815
*                                                                  0815
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE CALLERS RETURN ADDRESS AND SET INTERNAL TRACE    @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0815
*   RESPECIFY                                                      0815
*     REG14 RSTD;                   /* RESTRICT REG14        @Y30LB01*/
*   RETADDR2=REG14;                 /* SAVE REG 14           @Y30LB01*/
         ST    REG14,RETADDR2                                      0816
*   RESPECIFY                                                      0817
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   OLDERID2=NEWERID2;                                             0818
         L     @15,@PC00001                                        0818
         L     @15,GDTTR2(,@15)                                    0818
         MVC   @TS00001(95),NEWERID2(@15)                          0818
         MVC   OLDERID2(95,@15),@TS00001                           0818
*   NEWID2='TRAM';                  /* SET TRACE ID          @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0819
         MVC   NEWID2(4,@15),@CC01357                              0819
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR AND SET IO COUNTERS AND SET FIXED EXGARG        @Y30LB01*/
*   /* FIELDS.                                               @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0820
*   BUFFUL=IOCTRN/RECLN;            /* SET BUFFER FULL CNT   @Y30LB01*/
*                                                                  0820
         L     @01,IOCSPTR                                         0820
         L     @00,IOCTRN(,@01)                                    0820
         SRDA  @00,32                                              0820
         D     @00,@CF01258                                        0820
         STH   @01,BUFFUL                                          0820
*   /*****************************************************************/
*   /*                                                               */
*   /* IF BOTH SPECIFIED AND THIS IS SECOND AREA THEN DONT   @Y30LB01*/
*   /* RESET THE OUTPUT COUNTER OR BUFFER COUNT              @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0821
*   IF ADDR(BOTH)^=NULLPTR&         /* BOTH SPECIFIED        @Y30LB01*/
*       LOOPCNT=F1 THEN                                            0821
         L     @15,@PC00001+4                                      0821
         L     @00,FDTPTR+20(,@15)                                 0821
         LTR   @00,@00                                             0821
         BZ    @RF00821                                            0821
         CLC   LOOPCNT(2),@CH00219                                 0821
         BE    @RT00821                                            0821
*     ;                             /* LAST AREA TO BE DMPD  @Y30LB01*/
*   ELSE                            /* RESET OUTCNT BUFCNT   @Y30LB01*/
*     DO;                           /* RESET COUNTS          @Y30LB01*/
@RF00821 DS    0H                                                  0824
*       BUFCNT=F0;                  /* BUFFER COUNT          @Y30LB01*/
         SLR   @15,@15                                             0824
         STH   @15,BUFCNT                                          0824
*       OUTCNT=F0;                  /* OUTPUT COUNT          @Y30LB01*/
         STH   @15,OUTCNT                                          0825
*     END;                          /* END RESET             @Y30LB01*/
*   EXITSW=OFF;                     /* DO LOOP EXIT SWITCH   @Y30LB01*/
@RT00821 NI    EXITSW,B'11111011'                                  0827
*   WGETPTR=ADDR(WGETLST);          /* POINTER TO EXGARG     @Y30LB01*/
         LA    @00,WGETLST                                         0828
         ST    @00,WGETPTR                                         0828
*   RESPECIFY                                                      0829
*     EXGARG BASED(WGETPTR);        /* EXGARG BASE           @Y30LB01*/
*                                                                  0829
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE UEXCP GET ARGUMENTS                        @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0830
*   EXGARG=''B;                     /* CLEAR EXGARG AREA     @Y30LB01*/
         LR    @15,@00                                             0830
         XC    EXGARG(32,@15),EXGARG(@15)                          0830
*   EXGRECNO=TRKLN;                 /* NUM RECS TO GET       @Y30LB01*/
         LR    @15,@00                                             0831
         MVC   EXGRECNO(4,@15),@CF00221                            0831
*   EXGDATAP=ADDR(INBUF);           /* PTR TO INPUT BUFFER   @Y30LB01*/
         L     @15,INBLKPTR                                        0832
         LR    @14,@00                                             0832
         ST    @15,EXGDATAP(,@14)                                  0832
*   EXGKEYLN=F0;                    /* ZERO KEY LENGTH       @Y30LB01*/
         LR    @15,@00                                             0833
         MVI   EXGKEYLN(@15),X'00'                                 0833
*   EXGDATAL=RECLN;                 /* RECORD LENGTH         @Y30LB01*/
         LR    @15,@00                                             0834
         MVC   EXGDATAL(2,@15),@CH01258                            0834
*   EXGCTLBK=IOBPTR;                /* IO BLOCK POINTER      @Y30LB01*/
*                                                                  0835
         L     @15,IOBPTR                                          0835
         LR    @14,@00                                             0835
         ST    @15,EXGCTLBK(,@14)                                  0835
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP DO LOOP TO READ ALL TRACKS OF A TRACE AREA.    @Y30LB01*/
*   /* 4 CYLS, 19 TRACKS PER CYL, 76 TRACKS TOTAL.           @Y30LB01*/
*   /* READ LOOP ENDS ON IO ERROR, NULL AREA ENCOUNTERED,    @Y30LB01*/
*   /* OR THE CURRENT DATA POINTER IS EXCEEDED.              @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0836
*   DO READCNT=1 TO(CYLINC*CYLLN) WHILE EXITSW=OFF;/*        @Y30LB01*/
         LA    @00,1                                               0836
         STH   @00,READCNT                                         0836
@DL00836 TM    EXITSW,B'00000100'                                  0836
         BNZ   @DC00836                                            0836
*     IF LIMITCHR(LOOPCNT)>         /* SETS READ             @Y30LB01*/
*         SRCHCHR(LOOPCNT) THEN     /* LIMIT FOR             @Y30LB01*/
         LH    @15,LOOPCNT                                         0837
         SLA   @15,3                                               0837
         LA    @14,LIMITCHR-8(@15)                                 0837
         LA    @09,SRCHCHR-8(@15)                                  0837
         CLC   0(8,@14),0(@09)                                     0837
         BNH   @RF00837                                            0837
*       DO;                         /* CURRENT SPECIFIED     @Y30LB01*/
*         EXGCCHH1=ADDR(SEEKCHR(LOOPCNT));/* SET SEEK PTR    @Y30LB01*/
         L     @14,WGETPTR                                         0839
         LA    @00,SEEKCHR-8(@15)                                  0839
         ST    @00,EXGCCHH1(,@14)                                  0839
*         EXGCCHH2=ADDR(SRCHCHR(LOOPCNT));/* SET SEARCH PTR  @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0840
         LA    @15,SRCHCHR-8(@15)                                  0840
         ST    @15,EXGCCHH2(,@14)                                  0840
*         /***********************************************************/
*         /*                                                         */
*         /* UEXCP CALL TO READ WORK FILE TRACK              @Y30LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0841
*         CALL IDCIO050(GDTTBL,GET,EXGARG);/* UEXCP CALL     @Y30LB01*/
         L     @15,@PC00001                                        0841
         ST    @15,@AL00001                                        0841
         LA    @00,GET                                             0841
         ST    @00,@AL00001+4                                      0841
         ST    @14,@AL00001+8                                      0841
         MVI   @AL00001+8,X'80'                                    0841
         L     @15,GDTEXP(,@15)                                    0841
         LA    @01,@AL00001                                        0841
         BALR  @14,@15                                             0841
*         RESPECIFY                                                0842
*           RTNREG RSTD;                                           0842
*         TESTRC=RTNREG;                                           0843
         STH   RTNREG,TESTRC                                       0843
*         RESPECIFY                                                0844
*           RTNREG UNRSTD;          /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0844
*         /***********************************************************/
*         /*                                                         */
*         /* TEST RETURN FROM UEXCP AND IF FAIL CODE         @Y30LB01*/
*         /* RETURNED SET SWITCH TO EXIT LOOP                @Y30LB01*/
*         /* AND SET LASTCOND TO TERMINAL VALUE              @Y30LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0845
*         IF TESTRC^=0 THEN         /* BAD RETURN            @Y30LB01*/
         LH    @15,TESTRC                                          0845
         LTR   @15,@15                                             0845
         BZ    @RF00845                                            0845
*           DO;                     /* ERROR PROCESS         @Y30LB01*/
*             EXITSW=ON;            /* SET LOOP EXIT SW      @Y30LB01*/
         OI    EXITSW,B'00000100'                                  0847
*             LASTCOND=LASTCC12;    /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0848
         MVC   LASTCOND(2,@15),@CH00567                            0848
*           END;                    /* END ERROR PROCESS     @Y30LB01*/
*                                                                  0849
*         /***********************************************************/
*         /*                                                         */
*         /* ON GOOD UEXCP RETURN, CHECK THE DATA            @Y30LB01*/
*         /* READ FOR A NULL FILE IF THIS READ               @Y30LB01*/
*         /* WAS FOR THE FIRST TRACK OF AN AREA.             @Y30LB01*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0850
*         ELSE                      /* PROCESS THE INPUT     @Y30LB01*/
*           DO;                     /* DATA                  @Y30LB01*/
*                                                                  0850
         B     @RC00845                                            0850
@RF00845 DS    0H                                                  0851
*             /*******************************************************/
*             /*                                                     */
*             /* IF THE DATA AREA IS NULL THEN SET           @Y30LB01*/
*             /* SWITCH TO EXIT THE LOOP AND SET             @Y30LB01*/
*             /* LASTCOND TO WARNING VALUE                   @Y30LB01*/
*             /* FIRST, TEST FOR TRACK OF AREA BEING READ    @Y30LB01*/
*             /* AND BOTH AREAS SPECIFIED.                   @Y30LB01*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0851
*             IF READCNT=F1&        /* FIRST TRACK OF AREA   @Y30LB01*/
*                 ADDR(BOTH)^=NULLPTR THEN/* TWO AREA DUMP   @Y30LB01*/
         CLC   READCNT(2),@CH00219                                 0851
         BNE   @RF00851                                            0851
         L     @15,@PC00001+4                                      0851
         L     @00,FDTPTR+20(,@15)                                 0851
         LTR   @00,@00                                             0851
         BZ    @RF00851                                            0851
*               DO;                 /* JUST READ IN          @Y30LB01*/
*                                                                  0852
*                 /***************************************************/
*                 /*                                                 */
*                 /* NEXT TEST THE SECOND RECORD OF THE      @Y30LB01*/
*                 /* AREA TO SEE IF IT IS NULL.              @Y30LB01*/
*                 /* IF THIS AREA IS NULL SET FLAG TO        @Y30LB01*/
*                 /* INDICATE THE FIRST AREA IN A TWO        @Y30LB01*/
*                 /* AREA DUMP IS NULL.                      @Y30LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0853
*                 IF LOOPCNT=F2&    /* FIRST OF TWO AREAS    @Y30LB01*/
*                     DATACNT(2)=F0 THEN/* 1ST DATA REC NULL @Y30LB01*/
         CLC   LOOPCNT(2),@CH00153                                 0853
         BNE   @RF00853                                            0853
         L     @15,INBLKPTR                                        0853
         CLI   DATACNT+264(@15),0                                  0853
         BNE   @RF00853                                            0853
*                   DO;             /* SET UP FOR EXIT       @Y30LB01*/
*                     EXITSW=ON;    /* SET EXIT SWITCH ON    @Y30LB01*/
*                     TRNULL=ON;    /* SET NULL DATA SWITCH  @Y30LB01*/
         OI    EXITSW,B'00001100'                                  0856
*                   END;            /* END NULL EXIT CODE    @Y30LB01*/
*                                                                  0857
*                 /***************************************************/
*                 /*                                                 */
*                 /* FOR THE SECOND AREA OF A TWO AREA       @Y30LB01*/
*                 /* DUMP, TEST THE SECOND RECORD FOR        @Y30LB01*/
*                 /* NULL AND IF THE FIRST AREA WAS ALSO     @Y30LB01*/
*                 /* NULL, THEN SET THE LASTCOND TO A        @Y30LB01*/
*                 /* VALUE OF 4 AND SET THE EXIT SWITCH      @Y30LB01*/
*                 /* ON.                                     @Y30LB01*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0858
*                 ELSE              /* LAST OF TWO AREAS     @Y30LB01*/
*                   IF LOOPCNT=F1&  /* FIRST OF TWO AREAS    @Y30LB01*/
*                       DATACNT(2)=F0&/* 1ST DATA REC NULL   @Y30LB01*/
*                       TRNULL=ON THEN/* OTHER AREA ALSO NULL      0858
*                                                            @Y30LB01*/
         B     @RC00853                                            0858
@RF00853 CLC   LOOPCNT(2),@CH00219                                 0858
         BNE   @RF00858                                            0858
         L     @15,INBLKPTR                                        0858
         CLI   DATACNT+264(@15),0                                  0858
         BNE   @RF00858                                            0858
         TM    TRNULL,B'00001000'                                  0858
         BNO   @RF00858                                            0858
*                     DO;           /* SET UP FOR ERROR      @Y30LB01*/
*                       EXITSW=ON;  /* SET SW TO EXIT LOOP   @Y30LB01*/
         OI    EXITSW,B'00000100'                                  0860
*                       LASTCOND=LASTCC04;/* SET LASTCOND    @Y30LB01*/
         L     @15,@PC00001+8                                      0861
         MVC   LASTCOND(2,@15),@CH00042                            0861
*                     END;          /* END ERROR PROCESS     @Y30LB01*/
*               END;                /* END NULL CHECK        @Y30LB01*/
*                                                                  0863
@RF00858 DS    0H                                                  0863
@RC00853 DS    0H                                                  0864
*             /*******************************************************/
*             /*                                                     */
*             /* IF THIS IS A SINGLE AREA DUMP THEN TEST     @Y30LB01*/
*             /* THE SECOND RECORD OF THE AREA FOR NULL      @Y30LB01*/
*             /* IF IT IS NULL, SET SWITCH TO EXIT AND       @Y30LB01*/
*             /* SET LASTCOND TO VALUE OF 4.                 @Y30LB01*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0864
*             IF READCNT=F1&        /* ONE AREA DUMP         @Y30LB01*/
*                 ADDR(BOTH)=NULLPTR&/* SINGLE AREA REQUEST  @Y30LB01*/
*                 DATACNT(2)=F0 THEN/* AREA IS NULL          @Y30LB01*/
@RF00851 CLC   READCNT(2),@CH00219                                 0864
         BNE   @RF00864                                            0864
         L     @15,@PC00001+4                                      0864
         L     @00,FDTPTR+20(,@15)                                 0864
         LTR   @00,@00                                             0864
         BNZ   @RF00864                                            0864
         L     @15,INBLKPTR                                        0864
         CLI   DATACNT+264(@15),0                                  0864
         BNE   @RF00864                                            0864
*               DO;                 /* SET UP FOR ERROR      @Y30LB01*/
*                 TRNULL=ON;        /* SET NULL DATA SWITCH  @Y30LB01*/
*                 EXITSW=ON;        /* SET SW TO EXIT LOOP   @Y30LB01*/
         OI    TRNULL,B'00001100'                                  0867
*                 LASTCOND=LASTCC04;/* SET LASTCOND          @Y30LB01*/
         L     @15,@PC00001+8                                      0868
         MVC   LASTCOND(2,@15),@CH00042                            0868
*               END;                /* END ERROR PROCESS     @Y30LB01*/
*                                                                  0870
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP LOOP TO PROCESS THE 32 WORK          @Y30LB01*/
*             /* RECORDS FROM THE INPUT BUFFER TO THE        @Y30LB01*/
*             /* OUTPUT BUFFER. IF THE OUTPUT BUFFER GETS    @Y30LB01*/
*             /* FULL, WRITE IT TO THE OUTPUT FILE USING     @Y30LB01*/
*             /* UPUT FACILITIES. THE RECORD PROCESSING LOOP @Y30LB01*/
*             /* IS ENDED ON AN IO ERROR, THE LAST CURRENT   @Y30LB01*/
*             /* DATA RECORD PROCESSED, OR A TRACE TRAILER   @Y30LB01*/
*             /* RECORD IS PROCESSED AND MAX NOT SPECIFIED.  @Y30LB01*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0870
*             DO MOVECNT=1 TO TRKLN WHILE EXITSW=OFF;/*      @Y30LB01*/
@RF00864 LA    @00,1                                               0870
         STH   @00,MOVECNT                                         0870
@DL00870 TM    EXITSW,B'00000100'                                  0870
         BNZ   @DC00870                                            0870
*               SRCHR(LOOPCNT)=MOVECNT;/* TO TEST LAST REC   @Y30LB01*/
         LH    @15,LOOPCNT                                         0871
         SLA   @15,3                                               0871
         STC   @00,SRCHR-8(@15)                                    0871
*               IF(SRCHCHR(LOOPCNT)>/* SEARCH CHR >          @Y30LB01*/
*                   LIMITCHR(LOOPCNT))×/* LIMIT CHR          @Y30LB01*/
*                   (ADDR(ZXMAX)=NULLPTR&/* CURRENT DATA ONLY      0872
*                                                            @Y30LB01*/
*                   RECTYPE(MOVECNT)=TRLRCODE) THEN/* TRA TRLR     0872
*                                                            @Y30LB01*/
         LA    @14,SRCHCHR-8(@15)                                  0872
         LA    @09,LIMITCHR-8(@15)                                 0872
         CLC   0(8,@14),0(@09)                                     0872
         BH    @RT00872                                            0872
         L     @15,@PC00001+4                                      0872
         L     @15,FDTPTR+36(,@15)                                 0872
         LTR   @15,@15                                             0872
         BNZ   @RF00872                                            0872
         MH    @00,@CH01258                                        0872
         L     @15,INBLKPTR                                        0872
         LR    @14,@00                                             0872
         AL    @15,@CF01405                                        0872
         SLR   @00,@00                                             0872
         IC    @00,RECTYPE-10(@14,@15)                             0872
         C     @00,@CF00548                                        0872
         BNE   @RF00872                                            0872
@RT00872 DS    0H                                                  0873
*                 EXITSW=ON;        /* SET EXIT SWITCH ON    @Y30LB01*/
         OI    EXITSW,B'00000100'                                  0873
*               ELSE                /* MOVE RECORD           @Y30LB01*/
*                 DO;               /* TO OUTPUT             @Y30LB01*/
         B     @RC00872                                            0874
@RF00872 DS    0H                                                  0875
*                   BUFCNT=BUFCNT+1;/* INCREMENT COUNT       @Y30LB01*/
         LA    @00,1                                               0875
         AH    @00,BUFCNT                                          0875
         STH   @00,BUFCNT                                          0875
*                   OUTPREF(BUFCNT)=PREFIX(MOVECNT);/* MVC   @Y30LB01*/
         LA    @15,264                                             0876
         LR    @03,@00                                             0876
         MR    @02,@15                                             0876
         L     @02,INBLKPTR                                        0876
         L     @14,@CF01246                                        0876
         ALR   @14,@02                                             0876
         ST    @03,@TF00001                                        0876
         ALR   @03,@14                                             0876
         AL    @03,@CF01406                                        0876
         MH    @15,MOVECNT                                         0876
         ST    @15,@TF00002                                        0876
         ALR   @15,@02                                             0876
         AL    @15,@CF01406                                        0876
         MVC   OUTPREF(8,@03),PREFIX(@15)                          0876
*                   OUTDATA(BUFCNT)=TRACDATA(MOVECNT);/* MVC @Y30LB01*/
*                                                                  0877
         LR    @15,@14                                             0877
         AL    @15,@TF00001                                        0877
         AL    @15,@CF01407                                        0877
         AL    @02,@TF00002                                        0877
         AL    @02,@CF01407                                        0877
         MVC   OUTDATA-8(256,@15),TRACDATA-8(@02)                  0877
*                   /*************************************************/
*                   /*                                               */
*                   /* TEST FOR FULL BUFFER AND IF FULL THEN @Y30LB01*/
*                   /* WRITE THE FULL BUFFER TO OUTPUT FILE. @Y30LB01*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0878
*                   IF BUFCNT>=BUFFUL THEN/* WRITE OUT BUFFER      0878
*                                                            @Y30LB01*/
         CH    @00,BUFFUL                                          0878
         BL    @RF00878                                            0878
*                     DO;           /* TO OUTPUT DATASET     @Y30LB01*/
*                                                                  0879
*                       /*********************************************/
*                       /*                                           */
*                       /* UPUT CALL TO WRITE OUTPUT BUFFER  @Y30LB01*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0880
*                       IOCDAD=ADDR(OUTBLK);/*               @ZM30736*/
         L     @15,IOCSPTR                                         0880
         ST    @14,IOCDAD(,@15)                                    0880
*                       IOCDLN=IOCTRN;/*                     @ZM30736*/
         L     @14,IOCTRN(,@15)                                    0881
         ST    @14,IOCDLN(,@15)                                    0881
*                       CALL IDCIOPT0(GDTTBL,IOCSPTR);/* UPUT CALL 0882
*                                                            @Y30LB01*/
         L     @00,@PC00001                                        0882
         LR    @15,@00                                             0882
         ST    @15,@AL00001                                        0882
         LA    @15,IOCSPTR                                         0882
         ST    @15,@AL00001+4                                      0882
         MVI   @AL00001+4,X'80'                                    0882
         LR    @14,@00                                             0882
         L     @15,GDTPUT(,@14)                                    0882
         LA    @01,@AL00001                                        0882
         BALR  @14,@15                                             0882
*                       RESPECIFY                                  0883
*                         RTNREG RSTD;                             0883
*                       TESTRC=RTNREG;                             0884
         STH   RTNREG,TESTRC                                       0884
*                       RESPECIFY                                  0885
*                         RTNREG UNRSTD;/* SAVE RETURN CODE  @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0885
*                       /*********************************************/
*                       /*                                           */
*                       /* TEST UPUT RETURN AND IF FAIL CODE @Y30LB01*/
*                       /* SET EXIT SWITCH AND SET LASTCOND  @Y30LB01*/
*                       /* TO TERMINAL VALUE                 @Y30LB01*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0886
*                       IF TESTRC^=0 THEN/* BAD RETURN CODE  @Y30LB01*/
         LH    @15,TESTRC                                          0886
         LTR   @15,@15                                             0886
         BZ    @RF00886                                            0886
*                         DO;       /* ERROR PROCESS         @Y30LB01*/
*                           EXITSW=ON;/* SET LOOP EXIT SW    @Y30LB01*/
         OI    EXITSW,B'00000100'                                  0888
*                           LASTCOND=LASTCC12;/* SET LASTCOND      0889
*                                                            @Y30LB01*/
         L     @15,@PC00001+8                                      0889
         MVC   LASTCOND(2,@15),@CH00567                            0889
*                         END;      /* END ERROR PROCESS     @Y30LB01*/
*                                                                  0890
*                       /*********************************************/
*                       /*                                           */
*                       /* GOOD UPUT THEN RESET THE BUFFER   @Y30LB01*/
*                       /* COUNT AND UPDATE THE OUTPUT       @Y30LB01*/
*                       /* TOTAL RECS WRITTEN COUNT          @Y30LB01*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0891
*                       ELSE        /* GOOD WRITE            @Y30LB01*/
*                         DO;       /* PROCESS               @Y30LB01*/
         B     @RC00886                                            0891
@RF00886 DS    0H                                                  0892
*                           OUTCNT=OUTCNT+BUFFUL;/* KEEP COUNT     0892
*                                                            @Y30LB01*/
         LH    @00,OUTCNT                                          0892
         AH    @00,BUFFUL                                          0892
         STH   @00,OUTCNT                                          0892
*                         END;      /* END GOOD PROCESS      @Y30LB01*/
*                       BUFCNT=F0;  /* RESET BUFFER COUNT    @ZA17170*/
@RC00886 SLR   @00,@00                                             0894
         STH   @00,BUFCNT                                          0894
*                     END;          /* END OF WRITE CODE     @Y30LB01*/
*                 END;              /* END OF MVC CODE       @Y30LB01*/
@RF00878 DS    0H                                                  0897
*             END;                  /* END OF MOVE LOGIC     @Y30LB01*/
@RC00872 LA    @00,1                                               0897
         AH    @00,MOVECNT                                         0897
         STH   @00,MOVECNT                                         0897
         C     @00,@CF00221                                        0897
         BNH   @DL00870                                            0897
@DC00870 DS    0H                                                  0898
*           END;                    /* END GOOD READ         @Y30LB01*/
*       END;                        /* END VALID READS       @Y30LB01*/
*                                                                  0899
*     /***************************************************************/
*     /*                                                             */
*     /* REACHED LIMIT OF VALID TRACKS TO READ               @Y30LB01*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0900
*     ELSE                          /* END OF VALID TRACKS   @Y30LB01*/
*       EXITSW=ON;                  /* SET EXIT SWITCH       @Y30LB01*/
*                                                                  0900
         B     @RC00837                                            0900
@RF00837 OI    EXITSW,B'00000100'                                  0900
*     /***************************************************************/
*     /*                                                             */
*     /* INCREMENT SEEK AND SEARCH POINTERS TO NEXT TRACK    @Y30LB01*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0901
*     SRCHR(LOOPCNT)=F1;            /* RESET RECORD NUM      @Y30LB01*/
@RC00837 LA    @15,1                                               0901
         LH    @14,LOOPCNT                                         0901
         SLA   @14,3                                               0901
         STC   @15,SRCHR-8(@14)                                    0901
*     SRCHHH(LOOPCNT)=SRCHHH(LOOPCNT)+F1;/* SRCH TRACK       @Y30LB01*/
         LH    @00,SRCHHH-8(@14)                                   0902
         ALR   @00,@15                                             0902
         STH   @00,SRCHHH-8(@14)                                   0902
*     SEEKHH(LOOPCNT)=SEEKHH(LOOPCNT)+F1;/* SEEK TRACK       @Y30LB01*/
         LH    @09,SEEKHH-8(@14)                                   0903
         ALR   @09,@15                                             0903
         STH   @09,SEEKHH-8(@14)                                   0903
*     IF SRCHHH(LOOPCNT)>=CYLLN THEN/* GO TO NEXT CYLINDER   @Y30LB35*/
         C     @00,@CF01292                                        0904
         BL    @RF00904                                            0904
*       DO;                         /* NEXT CYLINDER         @Y30LB01*/
*         SRCHCC(LOOPCNT)=SRCHCC(LOOPCNT)+F1;/* SRCH CYL     @Y30LB01*/
         LH    @00,SRCHCC-8(@14)                                   0906
         ALR   @00,@15                                             0906
         STH   @00,SRCHCC-8(@14)                                   0906
*         SRCHHH(LOOPCNT)=F0;       /* RESET TO FIRST SRCH   @ZM31000*/
         SLR   @09,@09                                             0907
         STH   @09,SRCHHH-8(@14)                                   0907
*         SEEKCC(LOOPCNT)=SEEKCC(LOOPCNT)+F1;/* SEEK CYL     @Y30LB01*/
         AH    @15,SEEKCC-8(@14)                                   0908
         STH   @15,SEEKCC-8(@14)                                   0908
*         SEEKHH(LOOPCNT)=F0;       /* RESET TO FIRST SEEK   @ZM31000*/
         STH   @09,SEEKHH-8(@14)                                   0909
*       END;                        /* END CYL UPDATE        @Y30LB01*/
*   END;                            /* END I/O PROCESS LOOP  @Y30LB01*/
@RF00904 LA    @00,1                                               0911
         AH    @00,READCNT                                         0911
         STH   @00,READCNT                                         0911
         C     @00,@CF01387                                        0911
         BNH   @DL00836                                            0911
@DC00836 DS    0H                                                  0912
*                                                                  0912
*   /*****************************************************************/
*   /*                                                               */
*   /* ZERO REMAINING RECORDS IN OUTPUT BUFFER AND WRITE     @Y30LB01*/
*   /* FINAL OUTPUT BLOCK IF THIS IS LAST AREA TO BE         @Y30LB01*/
*   /* DUMPED AND THERE IS RESIDULE RECORDS.                 @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0912
*   IF BUFCNT>F0&LOOPCNT=F1 THEN    /* CLEANUP RESIDUAL      @Y30LB01*/
         LH    @15,BUFCNT                                          0912
         LTR   @15,@15                                             0912
         BNP   @RF00912                                            0912
         CLC   LOOPCNT(2),@CH00219                                 0912
         BNE   @RF00912                                            0912
*     DO;                           /* OUTPUT RECORDS        @Y30LB01*/
*       OUTCNT=OUTCNT+BUFCNT;       /* COUNT RESIDUAL RECS   @Y30LB01*/
         AH    @15,OUTCNT                                          0914
         STH   @15,OUTCNT                                          0914
*       DO UNTIL BUFCNT>=BUFFUL;    /* ZERO NON VALID RECS   @Y30LB01*/
@DL00915 DS    0H                                                  0916
*         OUTPREF(BUFCNT+1)=''B;    /* NULLIFY RECORD        @Y30LB01*/
         LH    @15,BUFCNT                                          0916
         LR    @14,@15                                             0916
         MH    @14,@CH01258                                        0916
         L     @09,@CF01246                                        0916
         AL    @09,INBLKPTR                                        0916
         ST    @14,@TF00001                                        0916
         ALR   @14,@09                                             0916
         XC    OUTPREF(8,@14),OUTPREF(@14)                         0916
*         OUTDATA(BUFCNT+1)=''B;    /* NULLIFY RECORD        @Y30LB01*/
         AL    @09,@TF00001                                        0917
         XC    OUTDATA(256,@09),OUTDATA(@09)                       0917
*         BUFCNT=BUFCNT+1;          /* INC REC POINTER       @Y30LB01*/
         AL    @15,@CF00219                                        0918
         STH   @15,BUFCNT                                          0918
*       END;                        /* END REC NULL CODE     @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0919
@DE00915 LH    @00,BUFCNT                                          0919
         CH    @00,BUFFUL                                          0919
         BL    @DL00915                                            0919
*       /*************************************************************/
*       /*                                                           */
*       /* UPUT CALL TO WRITE OUTPUT BLOCK                   @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0920
*       IOCDAD=ADDR(OUTBLK);        /* PTR TO OUTPUT DATA    @ZM30736*/
         L     @15,IOCSPTR                                         0920
         L     @14,@CF01246                                        0920
         AL    @14,INBLKPTR                                        0920
         ST    @14,IOCDAD(,@15)                                    0920
*       IOCDLN=IOCTRN;              /* SET O/P DATA LENGTH   @ZM30736*/
         L     @14,IOCTRN(,@15)                                    0921
         ST    @14,IOCDLN(,@15)                                    0921
*       CALL IDCIOPT0(GDTTBL,IOCSPTR);/* UPUT CALL           @Y30LB01*/
         L     @00,@PC00001                                        0922
         LR    @15,@00                                             0922
         ST    @15,@AL00001                                        0922
         LA    @15,IOCSPTR                                         0922
         ST    @15,@AL00001+4                                      0922
         MVI   @AL00001+4,X'80'                                    0922
         LR    @14,@00                                             0922
         L     @15,GDTPUT(,@14)                                    0922
         LA    @01,@AL00001                                        0922
         BALR  @14,@15                                             0922
*       RESPECIFY                                                  0923
*         RTNREG RSTD;                                             0923
*       TESTRC=RTNREG;                                             0924
         STH   RTNREG,TESTRC                                       0924
*       RESPECIFY                                                  0925
*         RTNREG UNRSTD;            /* SAVE RETURN CODE      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0925
*       /*************************************************************/
*       /*                                                           */
*       /* TEST UPUT RETURN AND IF FAIL CODE THEN SET        @Y30LB01*/
*       /* LASTCOND TO TERMINAL VALUE.                       @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0926
*       IF TESTRC^=0 THEN           /* BAD RETURN            @Y30LB01*/
         LH    @15,TESTRC                                          0926
         LTR   @15,@15                                             0926
         BZ    @RF00926                                            0926
*         LASTCOND=LASTCC12;        /* SET LASTCOND TO 12    @Y30LB01*/
         L     @15,@PC00001+8                                      0927
         MVC   LASTCOND(2,@15),@CH00567                            0927
*     END;                          /* END OF CLEANUP        @Y30LB01*/
@RF00926 DS    0H                                                  0929
*                                                                  0929
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE WAS AN I/O ERROR THE LASTCOND FIELD          @Y30LB01*/
*   /* WAS SET TO 12. IF THERE WAS RECORDS WRITTEN           @Y30LB01*/
*   /* TO THE OUTPUT FILE AND AN ERROR WAS ENCOUNTERED       @Y30LB01*/
*   /* IN I/O THEN A MESSAGE WITH THE ACTUAL OUTPUT          @Y30LB01*/
*   /* RECORD COUNT IS WRITTEN                               @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0929
*   IF LASTCOND=LASTCC12&OUTCNT>F0 THEN/* I/O ERROR          @Y30LB01*/
@RF00912 L     @15,@PC00001+8                                      0929
         CLC   LASTCOND(2,@15),@CH00567                            0929
         BNE   @RF00929                                            0929
         LH    @00,OUTCNT                                          0929
         LTR   @00,@00                                             0929
         BNP   @RF00929                                            0929
*     DO;                           /* PROCESS MESSAGE       @Y30LB01*/
*       PRINTTAB=''B;               /* CLEAR PRINT AREA      @Y30LB01*/
*                                                                  0931
         XC    PRINTTAB(20),PRINTTAB                               0931
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE UPRINT PARAMETERS                      @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0932
*       DARGSENT=MSG2843I;          /* SET MSG ID            @Y30LB01*/
         L     @15,DDSTRU                                          0932
         MVI   DARGSENT(@15),X'04'                                 0932
*       DARGSMOD=TRAMSG;            /* SET MSG MOD           @Y30LB01*/
         MVC   DARGSMOD(3,@15),@CC01280                            0933
*       DARGDBP=ADDR(OUTCNT);       /* PTR TO INSERT         @Y30LB01*/
         LA    @14,OUTCNT                                          0934
         ST    @14,DARGDBP(,@15)                                   0934
*       DARGILP=LENGTH(OUTCNT);     /* LENGTH OF INSERT      @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0935
         MVC   DARGILP(2,@15),@CH00153                             0935
*       /*************************************************************/
*       /*                                                           */
*       /* UPRINT CALL TO PRINT MESSAGE                      @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0936
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* UPRINT CALL  @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0936
         L     @00,@PC00001                                        0936
         LR    @15,@00                                             0936
         ST    @15,@AL00001                                        0936
         LA    @15,@CF00115                                        0936
         ST    @15,@AL00001+4                                      0936
         LA    @15,DDSTRU                                          0936
         ST    @15,@AL00001+8                                      0936
         MVI   @AL00001+8,X'80'                                    0936
         LR    @14,@00                                             0936
         L     @15,GDTPRT(,@14)                                    0936
         LA    @01,@AL00001                                        0936
         BALR  @14,@15                                             0936
*       /*************************************************************/
*       /*                                                           */
*       /* LASTCOND IS SET TO 8 INDICATING SOME OUTPUT WAS   @Y30LB01*/
*       /* WRITTEN BUT AN IO ERROR WAS ENCOUNTERED.          @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0937
*       LASTCOND=LASTCC08;          /* SET LASTCOND TO 8     @Y30LB01*/
         L     @15,@PC00001+8                                      0937
         MVC   LASTCOND(2,@15),@CH00179                            0937
*     END;                          /* END I/O ERROR         @Y30LB01*/
*                                                                  0939
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE TRACE AREA(S) WAS NULL, NO DUMP IS MADE AND    @Y30LB01*/
*   /* A WARNING MESSAGE IS PRINTED.                         @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0939
*   IF LASTCOND=LASTCC04&           /* TEST FOR              @Y30LB01*/
*       TRNULL=ON THEN              /* NULL FILE FOUND       @Y30LB01*/
@RF00929 L     @15,@PC00001+8                                      0939
         CLC   LASTCOND(2,@15),@CH00042                            0939
         BNE   @RF00939                                            0939
         TM    TRNULL,B'00001000'                                  0939
         BNO   @RF00939                                            0939
*     DO;                           /* PROCESS MSG           @Y30LB01*/
*       PRINTTAB=''B;               /* CLEAR PRINT AREA      @Y30LB01*/
*                                                                  0941
         XC    PRINTTAB(20),PRINTTAB                               0941
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE UPRINT PARAMETERS                      @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0942
*       DARGSENT=MSG1840I;          /* MESSAGE ID            @Y30LB01*/
         L     @15,DDSTRU                                          0942
         MVI   DARGSENT(@15),X'01'                                 0942
*       DARGSMOD=TRAMSG;            /* SET MOD ID            @Y30LB01
*                                                            @Y30LB01*/
*                                                                  0943
         MVC   DARGSMOD(3,@15),@CC01280                            0943
*       /*************************************************************/
*       /*                                                           */
*       /* UPRINT CALL TO PRINT MESSAGE                      @Y30LB01*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0944
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/* UPRINT CALL  @Y30LB01
*                                                            @Y30LB01*/
         L     @00,@PC00001                                        0944
         LR    @15,@00                                             0944
         ST    @15,@AL00001                                        0944
         LA    @15,@CF00115                                        0944
         ST    @15,@AL00001+4                                      0944
         LA    @15,DDSTRU                                          0944
         ST    @15,@AL00001+8                                      0944
         MVI   @AL00001+8,X'80'                                    0944
         LR    @14,@00                                             0944
         L     @15,GDTPRT(,@14)                                    0944
         LA    @01,@AL00001                                        0944
         BALR  @14,@15                                             0944
*     END;                          /* END NULL FILE CODE    @Y30LB01*/
*                                                                  0946
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE CALLERS RETURN ADDRESS AND RETURN             @Y30LB01*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0946
*   RESPECIFY                                                      0946
*     REG14 RSTD;                   /* RESTRICT REG 14       @Y30LB01*/
@RF00939 DS    0H                                                  0947
*   REG14=RETADDR2;                 /* RESTORE REG 14        @Y30LB01*/
         L     REG14,RETADDR2                                      0947
*   RETURN CODE(LASTCOND);          /* RETURN TO CALLER      @Y30LB01*/
         L     @09,@PC00001+8                                      0948
         LH    @15,LASTCOND(,@09)                                  0948
@EL00006 DS    0H                                                  0948
@EF00006 DS    0H                                                  0948
@ER00006 BR    @14                                                 0948
*   RESPECIFY                                                      0949
*     REG14 UNRSTD;                 /* FREE REG 14           @Y30LB01*/
*   END TRACEIO;                    /* END PROCEDURE         @Y30LB01*/
*                                                                  0951
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  0951
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           0951
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
SSCMSG   STM   @14,@12,@SA00007                                    0951
         MVC   @PC00007(8),0(@01)                                  0951
*                                   /*                       @Y30LB39*/
*                                                                  0952
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0952
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0952
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0952
*                                   /*                       @Y30LB39*/
*   DCL                                                            0952
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            0953
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0953
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0954
*                                   /*                       @Y30LB39*/
*   DCL                                                            0954
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            0955
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0955
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0956
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0956
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0956
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0957
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0957
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0957
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0958
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0958
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0958
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0959
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0959
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0959
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0960
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0960
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  0961
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0961
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             0961
         L     @15,@PC00001                                        0961
         L     @14,GDTTR2(,@15)                                    0961
         MVC   @TS00001(95),NEWERID2(@14)                          0961
         MVC   OLDERID2(95,@14),@TS00001                           0961
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0962
         MVC   NEWID2(4,@14),@CC01379                              0962
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0963
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0963
         LA    @14,SSDRGLT                                         0963
         ST    @14,SSDLPTR                                         0963
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0964
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              0964
         L     @09,@PC00007                                        0964
         L     @00,SSRCODE(,@09)                                   0964
         LTR   @00,@00                                             0964
         BNP   @RF00964                                            0964
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0965
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0966
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0966
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @00,SSINXLST                                        0967
         ST    @00,DARGRETP(,@14)                                  0967
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@14),SSMODSS0                            0968
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@14),X'01'                                 0969
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0970
         MVC   DARGRETL(2,@14),@CH01388                            0970
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0971
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0971
         ST    @15,@AL00001                                        0971
         LA    @14,@CF00115                                        0971
         ST    @14,@AL00001+4                                      0971
         LA    @14,SSDLPTR                                         0971
         ST    @14,@AL00001+8                                      0971
         MVI   @AL00001+8,X'80'                                    0971
         L     @15,GDTPRT(,@15)                                    0971
         LA    @01,@AL00001                                        0971
         BALR  @14,@15                                             0971
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0972
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         MVI   ENTRYNUM,X'01'                                      0972
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   0973
@DL00973 DS    0H                                                  0974
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         LA    @00,1                                               0974
         SLR   @15,@15                                             0974
         IC    @15,ENTRYNUM                                        0974
         ALR   @00,@15                                             0974
         STC   @00,ENTRYNUM                                        0974
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0975
@DE00973 L     @15,@PC00007                                        0975
         SLR   @14,@14                                             0975
         IC    @14,ENTRYNUM                                        0975
         LR    @09,@14                                             0975
         ALR   @09,@09                                             0975
         LH    @09,SSARRAY-2(@09)                                  0975
         CH    @09,SSRHALF(,@15)                                   0975
         BE    @DC00973                                            0975
         SLR   @08,@08                                             0975
         CR    @09,@08                                             0975
         BNE   @DL00973                                            0975
@DC00973 DS    0H                                                  0976
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0976
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0976
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @07,SSDLPTR                                         0977
         MVC   DARGSMOD(3,@07),SSMODSS0                            0977
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   @14,DARGSENT(,@07)                                  0978
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         CR    @09,@08                                             0979
         BNE   @RF00979                                            0979
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         ST    @15,DARGDBP(,@07)                                   0981
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@07),@CH00042                             0982
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  0985
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0985
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC00964                                            0985
@RF00964 DS    0H                                                  0986
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0986
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @15,SSDLPTR                                         0987
         MVC   DARGSMOD(3,@15),SSMODCM0                            0987
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         MVC   DARGSENT(1,@15),SSMSGNUM                            0988
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @14,@PC00007+4                                      0989
         ST    @14,DARGDBP(,@15)                                   0989
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@15),@CH00219                             0990
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0991
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0992
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0992
@RC00964 L     @00,@PC00001                                        0992
         LR    @15,@00                                             0992
         ST    @15,@AL00001                                        0992
         LA    @15,@CF00115                                        0992
         ST    @15,@AL00001+4                                      0992
         LA    @15,SSDLPTR                                         0992
         ST    @15,@AL00001+8                                      0992
         MVI   @AL00001+8,X'80'                                    0992
         LR    @14,@00                                             0992
         L     @15,GDTPRT(,@14)                                    0992
         LA    @01,@AL00001                                        0992
         BALR  @14,@15                                             0992
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0993
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             0993
         L     @14,@SA00007                                        0993
         LM    @00,@12,@SA00007+8                                  0993
         BR    @14                                                 0993
*   END SSCMSG;                     /*                       @Y30LB39*/
*   END IDCTR01                     /* END OF PROCEDURE      @Y30LB01*/
*                                                                  0995
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCCSTR )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*                                                                  0995
*       ;                                                          0995
@DATA    DS    0H
@CH00153 DC    H'2'
@CH00286 DC    H'5'
@CH00179 DC    H'8'
@CH00310 DC    H'24'
@CH00044 DC    H'31'
@CH01385 DC    H'38'
@CH01388 DC    H'120'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00007 DS    15F
@PC00007 DS    2F
@AL00001 DS    6A
@TF00001 DS    F
@TF00002 DS    F
@AFTEMPS DS    3F
IDCTR01  CSECT
         DS    0F
@CF00115 DC    F'0'
@CF00219 DC    F'1'
@CH00219 EQU   @CF00219+2
@CF00042 DC    F'4'
@CH00042 EQU   @CF00042+2
@CF00567 DC    F'12'
@CH00567 EQU   @CF00567+2
@CF00474 DC    F'16'
@CF01292 DC    F'19'
@CF00221 DC    F'32'
@CF01387 DC    F'76'
@CF01381 DC    F'96'
@CH01381 EQU   @CF01381+2
@CF01258 DC    F'264'
@CH01258 EQU   @CF01258+2
@CF01246 DC    F'8448'
@CF01406 DC    F'-264'
@CF01407 DC    F'-256'
@CF01405 DC    F'-254'
@CF00548 DC    XL4'FF'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
TRLSTPTR DS    A
CTLSTPTR DS    A
ACLSTPTR DS    A
INBLKPTR DS    A
VOLPTR   DS    A
WEXOPTR  DS    A
WGETPTR  DS    A
IOBPTR   DS    A
TUCBPTR  DS    A
TUMSSPTR DS    A
TINFOPTR DS    A
WALLPTR  DS    A
RETADDR  DS    A
RETADDR1 DS    A
RETADDR2 DS    A
BUFFLN   DS    F
REASON   DS    FL4
         ORG   REASON
@NM00105 DS    CL3
REASID   DS    AL1
         ORG   REASON+4
SSDLPTR  DS    A
LISTPTR  DS    A
TESTRC   DS    H
LOOPCNT  DS    H
OUTCNT   DS    H
READCNT  DS    H
BUFCNT   DS    H
BUFFUL   DS    H
MOVECNT  DS    H
SETRC    DS    H
ECBCODE  DS    FL1
ENTRYNUM DS    FL1
LISTLN   DS    FL1
@TS00001 DS    CL95
         DS    CL2
TRDTETME DS    CL8
         ORG   TRDTETME
TRDATE   DS    CL4
TRTIME   DS    FL4
         ORG   TRDTETME+8
CURCHR   DS    CL8
         ORG   CURCHR
CURPTR   DS    CL5
         ORG   CURPTR
CURRCC   DS    FL2
CURRHH   DS    FL2
CURRR    DS    FL1
         ORG   CURCHR+5
CURFILL  DS    CL3
         ORG   CURCHR+8
ACQCCCC  DS    CL4
         ORG   ACQCCCC
ACQCCS   DS    CL2
ACQCCE   DS    CL2
         ORG   ACQCCCC+4
WORKUNIT DS    CL12
         ORG   WORKUNIT
WUCNT    DS    FL2
WULN     DS    FL2
WUNAME   DS    CL8
         ORG   WORKUNIT+12
CHRSAVE  DS    CL3
         DS    CL1
WFEXTENT DS    CL10
         ORG   WFEXTENT
WSTARTCC DS    CL2
         ORG   WSTARTCC
WSTRTCC  DS    AL2
         ORG   WFEXTENT+2
WSTARTHH DS    CL2
         ORG   WSTARTHH
WSTRTH1  DS    AL1
WSTRTH2  DS    AL1
         ORG   WFEXTENT+4
WSTARTRR DS    CL1
WENDCC   DS    CL2
         ORG   WENDCC
WENDDCC  DS    AL2
         ORG   WFEXTENT+7
WENDHH   DS    CL2
         ORG   WENDHH
WENDH1   DS    AL1
WENDH2   DS    AL1
         ORG   WFEXTENT+9
WENDRR   DS    CL1
         ORG   WFEXTENT+10
         DS    CL2
VOLDATA  DS    CL38
         ORG   VOLDATA
HDRLN1   DS    FL2
HDRLN2   DS    FL2
DATACODE DS    FL2
DATALN   DS    FL2
TRACVOL  DS    CL6
@NM00103 DS    CL24
         ORG   VOLDATA+38
TRACDDN  DS    CL8
         DS    CL2
WGETLST  DS    CL32
WALLOLST DS    CL31
         DS    CL1
WOPENLST DS    CL34
         DS    CL2
OOPENLST DS    BL48
PARMLST  DS    CL96
DUMPAREA DS    CL17
SWITCHES DS    CL1
         ORG   SWITCHES
GMAINF   DS    BL1
WALLOC   EQU   SWITCHES+0
WACQ     EQU   SWITCHES+0
TRSWAP   EQU   SWITCHES+0
TRNULL   EQU   SWITCHES+0
EXITSW   EQU   SWITCHES+0
         ORG   SWITCHES+1
         DS    CL2
PRINTTAB DS    CL20
SSDRGLT  DS    CL20
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
LIMITCHR DS    CL8
         ORG   LIMITCHR+0
LIMCC    DS    FL2
LIMHH    DS    FL2
LIMR     DS    FL1
LIMFILL  DS    CL3
         ORG   LIMITCHR+16
SEEKCHR  DS    CL8
         ORG   SEEKCHR+0
SEEKCC   DS    FL2
SEEKHH   DS    FL2
SEEKR    DS    AL1
SEEKFILL DS    CL3
         ORG   SEEKCHR+16
SRCHCHR  DS    CL8
         ORG   SRCHCHR+0
SRCHCC   DS    FL2
SRCHHH   DS    FL2
SRCHR    DS    AL1
SRCHFILL DS    CL3
         ORG   SRCHCHR+16
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCTR01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SSMSGNUM DC    AL1(56)
@CC01321 DC    C'TRACLIST'
@CC01334 DC    C'ACQLIST'
@CC01337 DC    C'COTLIST'
@CC01345 DC    C'ALLAGL'
@CC01299 DC    C'SDG00'
@CC01312 DC    C'TRAA'
@CC01316 DC    C'TRAZ'
@CC01320 EQU   @CC01321
@CC01323 DC    C'TRAG'
@CC01328 DC    C'TRAD'
@CC01332 DC    C'TRAH'
@CC01335 DC    C'TRAI'
@CC01336 DC    C'TRAJ'
@CC01338 DC    C'TRAK'
@CC01343 DC    C'TRAE'
@CC01346 DC    C'TRAL'
@CC01352 DC    C'TRAF'
@CC01357 DC    C'TRAM'
@CC01379 DC    C'SSAA'
@CC01276 DC    C'UV0'
@CC01280 DC    C'TR0'
@CB01295 DC    X'0000000000'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
RVOPENR  DC    CL8'OPENR   '
RVRDCNT  DC    CL8'READCNT '
RVREADKD DC    CL8'READKD  '
RVSPACCR DC    CL8'SPACCR  '
RVFWRITE DC    CL8'FWRITE  '
RVWRITER DC    CL8'WRITEREC'
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODID    DC    CL4'TR01'
FIXAREA  DS    CL600
         ORG   FIXAREA
@NM00106 DC    600X'00'
         ORG   FIXAREA+600
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
RTNREG   EQU   @15
REG14    EQU   @14
ARR1     EQU   @01
COTBR1   EQU   @01
REG0     EQU   @00
REG1     EQU   @01
REG13    EQU   @13
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
TRACR1   EQU   @01
IDCSAEP0 EQU   0
IDCSAGS0 EQU   0
IDCSAFS0 EQU   0
IDCSATI0 EQU   0
IDCSAAL0 EQU   0
IDCSADL0 EQU   0
IDCSASS0 EQU   0
IDCSA060 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLDSN   EQU   ALLAGL
ALLDDN   EQU   ALLAGL+4
ALLULP   EQU   ALLAGL+12
ALLSTS   EQU   ALLAGL+24
ALLSTSOD EQU   ALLSTS
ALLDSP   EQU   ALLAGL+25
ALLDSPKP EQU   ALLDSP
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
ALLOPTDS EQU   ALLOPT
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIO050 EQU   0
IOCSTR   EQU   0
IOCDAD   EQU   IOCSTR
IOCDLN   EQU   IOCSTR+4
IOCTRN   EQU   IOCSTR+8
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNRFMFX EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNDSN   EQU   OPNAGL+16
OPNDEV   EQU   OPNAGL+24
OPNREC   EQU   OPNAGL+32
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
IOINFVOL EQU   IOINFOPT
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
ZXON     EQU   0
ZXOFF    EQU   0
X        EQU   0
Y        EQU   0
BOTH     EQU   0
ACT      EQU   0
INACT    EQU   0
ZXMAX    EQU   0
OFILE    EQU   0
OFILEVAL EQU   OFILE+1
ODS      EQU   0
ODSFLG   EQU   ODS+10
ODSVAL   EQU   ODS+21
WFILE    EQU   0
WFILEVAL EQU   WFILE+1
WDS      EQU   0
WDSFLG   EQU   WDS+10
WDSVAL   EQU   WDS+21
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTREALH  EQU   CTMSG+3
CTARRAY  EQU   CTMSG+4
CTTBLCC  EQU   CTARRAY+1
CTTBLHH  EQU   CTARRAY+2
CTTBLRR  EQU   CTARRAY+3
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKUCBPTR EQU   CKAGL+8
CKDDNAME EQU   CKAGL+12
CKLABELP EQU   CKAGL+24
CKFLAGS  EQU   CKAGL+28
CKTESTVT EQU   CKFLAGS
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXODDN   EQU   EXOARG+8
EXOEXT   EQU   EXOARG+24
EXOCTLBK EQU   EXOARG+28
EXOPT    EQU   EXOARG+32
EXOTAB   EQU   EXOPT
EXFLG    EQU   EXOARG+33
EXOREAD  EQU   EXFLG
EXGARG   EQU   0
EXGCTLBK EQU   EXGARG+8
EXGCCHH1 EQU   EXGARG+12
EXGCCHH2 EQU   EXGARG+16
EXGRECNO EQU   EXGARG+20
EXGDATAP EQU   EXGARG+24
EXGKEYLN EQU   EXGARG+28
EXGDATAL EQU   EXGARG+30
EXWRARG  EQU   0
EXRWCHR  EQU   EXWRARG+26
EXSPACE  EQU   EXWRARG+36
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
SV82LIST EQU   0
@NM00072 EQU   SV82LIST+4
SV82DCBP EQU   @NM00072
@NM00073 EQU   SV82LIST+12
SV82WRKP EQU   @NM00073
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
TRACLIST EQU   0
TRACFLG  EQU   TRACLIST+6
TRACEON  EQU   TRACFLG
TRACTIM  EQU   TRACLIST+8
COTLIST  EQU   0
COTBFLG  EQU   COTLIST+6
COTBTRX  EQU   COTBFLG+1
COTBTRY  EQU   COTBFLG+1
COTBTRA  EQU   COTBFLG+1
COTBTRI  EQU   COTBFLG+1
COTBEXTS EQU   COTLIST+8
COTBVOL  EQU   COTLIST+12
ACQLIST  EQU   0
ARLL     EQU   ACQLIST
AROP     EQU   ACQLIST+4
ARFLG    EQU   ACQLIST+6
ARBDUBD  EQU   ARFLG
ARDRES   EQU   ARFLG
ARINH    EQU   ARFLG
ARNMEXT  EQU   ACQLIST+7
ARVOL    EQU   ACQLIST+8
AREXT    EQU   ACQLIST+28
CTMSGDEF EQU   0
TRREALCC EQU   CTMSGDEF+1
TRARRAY  EQU   CTMSGDEF+4
TRCCHHR  EQU   TRARRAY+1
INBUF    EQU   0
INREC    EQU   INBUF
PREFIX   EQU   INREC
TRACDATA EQU   INREC+8
DATACNT  EQU   TRACDATA
RECTYPE  EQU   TRACDATA+2
OUTBLK   EQU   0
OUTREC   EQU   OUTBLK
OUTPREF  EQU   OUTREC
OUTDATA  EQU   OUTREC+8
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
CURR     EQU   0
DUMP     EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAGP0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSAST0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00107 EQU   SSRCODE
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
@NM00104 EQU   TRACDATA+1
@NM00102 EQU   TRARRAY
@NM00101 EQU   CTMSGDEF+3
@NM00100 EQU   CTMSGDEF
ARNEDB   EQU   ACQLIST+92
@NM00099 EQU   AREXT
ARCOMPC  EQU   ACQLIST+26
@NM00098 EQU   ACQLIST+25
ARHOST   EQU   ACQLIST+20
ARECB    EQU   ACQLIST+16
ARASID   EQU   ACQLIST+14
@NM00097 EQU   ARFLG
ARSEC    EQU   ARFLG
@NM00096 EQU   ACQLIST+5
COTBECB  EQU   COTLIST+20
COTBASID EQU   COTLIST+18
@NM00095 EQU   COTBFLG+1
@NM00094 EQU   COTBFLG
COTBTID  EQU   COTBFLG
@NM00093 EQU   COTLIST+5
COTBOP   EQU   COTLIST+4
COTBLL   EQU   COTLIST
@NM00092 EQU   TRACFLG
@NM00091 EQU   TRACLIST+5
TRACOPC  EQU   TRACLIST+4
TRACLEN  EQU   TRACLIST
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00090 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00089 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00088 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00087 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00086 EQU   VSDSCR+5
@NM00085 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00084 EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00083 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00082 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00081 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00080 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00079 EQU   VSDVTOC
@NM00078 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00077 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00076 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00075 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00074 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLVTOC  EQU   VOLLABEL+15
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
VOLKEY   EQU   VOLLABEL
STAVTTR  EQU   STAEPARM+54
@NM00071 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00070 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00069 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00068 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00067 EQU   RCTAGL+10
@NM00066 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00065 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00064 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00063 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00062 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00061 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00060 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00059 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00058 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00057 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00056 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
EXRWFUN  EQU   EXWRARG+46
@NM00055 EQU   EXSPACE+8
@NM00054 EQU   EXSPACE+6
@NM00053 EQU   EXSPACE+4
@NM00052 EQU   EXSPACE+1
@NM00051 EQU   EXSPACE
EXRWKDLN EQU   EXWRARG+32
@NM00050 EQU   EXWRARG+31
EXRECNUM EQU   EXRWCHR+4
EXHH     EQU   EXRWCHR+2
EXCC     EQU   EXRWCHR
EXCCWCNT EQU   EXWRARG+24
EXLOCPTR EQU   EXWRARG+20
EXRWDARE EQU   EXWRARG+16
EXRWIOAR EQU   EXWRARG+12
EXRWCTBL EQU   EXWRARG+8
EXRWRES  EQU   EXWRARG
@NM00049 EQU   EXGARG+29
EXGHEAD  EQU   EXGARG
EXOVTH   EQU   EXFLG
EXORVT   EQU   EXFLG
EXORDS   EQU   EXFLG
EXOSPK   EQU   EXFLG
EXORVS   EQU   EXFLG
@NM00048 EQU   EXFLG
@NM00047 EQU   EXOPT
EXOREP   EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXONEW   EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOUCB   EQU   EXOARG+20
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXOHEAD  EQU   EXOARG
@NM00046 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00045 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKDATYPE EQU   CKAGL+20
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00044 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLID  EQU   CTARRAY
CTREALCC EQU   CTMSG+1
@NM00043 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00042 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00041 EQU   CMMSG+7
@NM00040 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00039 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00038 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
WDSLEN   EQU   WDS+20
WDSMEM   EQU   WDS+12
WDSMLN   EQU   WDS+11
WDSFUQ   EQU   WDSFLG
WDSPOS   EQU   WDS+9
WDSPAS   EQU   WDS+1
WDSPLN   EQU   WDS
WFILELEN EQU   WFILE
ODSLEN   EQU   ODS+20
ODSMEM   EQU   ODS+12
ODSMLN   EQU   ODS+11
ODSFUQ   EQU   ODSFLG
ODSPOS   EQU   ODS+9
ODSPAS   EQU   ODS+1
ODSPLN   EQU   ODS
OFILELEN EQU   OFILE
@NM00037 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00036 EQU   DMPITM+15
@NM00035 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00034 EQU   ERCNVTAB+4
@NM00033 EQU   ERCNVTAB+3
@NM00032 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGCNT  EQU   DARGLIST+14
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNPWA   EQU   OPNAGL+12
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
UNITUCB  EQU   UNITABL
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00780 EQU   @RC00775
@RC00778 EQU   @RC00775
@RC00845 EQU   @RC00837
@RF00979 EQU   @RC00964
@PB00007 EQU   @EL00001
@RC00783 EQU   @RC00780
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCTR01,(C'PLS2247',0603,77132)
