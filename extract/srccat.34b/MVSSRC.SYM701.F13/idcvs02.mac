         TITLE '******** IDCVS02:  VOLUME SERVICE ROUTINE ********     *
                        '
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCVS02  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCVS02   76.245'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  LA    @02,4095(,@12)                                      0002
         USING @PSTART,@12                                         0002
         USING @PSTART+4095,@02                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                            @Y30LB35*/
*   OLDERID2=NEWERID2;                                             0258
         L     @10,@PC00001                                        0258
         L     @03,GDTTR2(,@10)                                    0258
         MVC   @TS00001(95),NEWERID2(@03)                          0258
         MVC   OLDERID2(95,@03),@TS00001                           0258
*   NEWID2='VSMN';                  /*                       @Y30LB35
*                                                            @Y30LB35*/
         MVC   NEWID2(4,@03),@CC01139                              0259
*   IF GDTDBG=NULLPTR THEN                                         0260
         L     @10,GDTDBG(,@10)                                    0260
         LTR   @10,@10                                             0260
         BZ    @RT00260                                            0260
*     ;                                                            0261
*   ELSE                                                           0262
*     CALL IDCDB010(GDTTBL,'VSBG'); /*                       @Y30LB35
*                                                            @Y30LB35*/
         L     @10,@PC00001                                        0262
         ST    @10,@AL00001                                        0262
         LA    @03,@CC01140                                        0262
         ST    @03,@AL00001+4                                      0262
         MVI   @AL00001+4,X'80'                                    0262
         L     @15,GDTDBG(,@10)                                    0262
         LA    @01,@AL00001                                        0262
         BALR  @14,@15                                             0262
*   DDSTRU=ADDR(PRINTARG);          /*                       @Y30LB35
*                                                            @Y30LB35*/
@RT00260 LA    @10,PRINTARG                                        0263
         ST    @10,DDSTRU                                          0263
*   TESTRC=0;                       /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0264
         SLR   @10,@10                                             0264
         STH   @10,TESTRC                                          0264
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE REQUEST NAME INTO CALLER'S PARMLIST              @Y30LB35*/
*   /* THIS WILL AID TO DETERMINE IF LIST WAS PASSED         @Y30LB35*/
*   /* IF A DUMP IS BEING READ.                              @Y30LB35*/
*   /* IF THE FIRST 8 CHAR CONTAIN THE REQUEST NAME          @Y30LB35*/
*   /* WHICH ARE "INITVOL", "PUTLABEL", OR "GETLABEL" IT SHOULD      */
*   /* INDICATE THAT THIS MODULE WAS CALLED.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0265
*   VS2HEAD=REQUEST;                /*                       @Y30LB35
*                                                            @Y30LB35*/
         L     @10,@PC00001+8                                      0265
         L     @03,@PC00001+4                                      0265
         MVC   VS2HEAD(8,@10),REQUEST(@03)                         0265
*                                                                  0266
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PORTION OF THE MODULE IS CONSIDERED              @Y30LB35*/
*   /* THE CONTROLLER AND DETERMINES WHICH SERVICE           @Y30LB35*/
*   /* AND DIRECTS CONTROL TO PROPER SUBROUTINE.             @Y30LB35*/
*   /* IF THE REQUEST IS INVALID, UABORT IS ISSUED           @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0266
*   IF REQUEST=INITVOL              /*                       @Y30LB35*/
*     THEN                                                         0266
         CLC   REQUEST(8,@03),INITVOL                              0266
         BNE   @RF00266                                            0266
*     CALL INITVOLM;                /*                       @Y30LB35
*                                                            @Y30LB35*/
         BAL   @14,INITVOLM                                        0267
*   ELSE                            /*                       @Y30LB35*/
*     IF REQUEST=GETLABEL           /*                       @Y30LB35*/
*       THEN                                                       0268
         B     @RC00266                                            0268
@RF00266 L     @10,@PC00001+4                                      0268
         CLC   REQUEST(8,@10),GETLABEL                             0268
         BNE   @RF00268                                            0268
*       CALL GETLAB;                /*                       @Y30LB35
*                                                            @Y30LB35*/
         BAL   @14,GETLAB                                          0269
*     ELSE                          /*                       @Y30LB35*/
*       IF REQUEST=PUTLABEL         /*                       @Y30LB35*/
*         THEN                                                     0270
         B     @RC00268                                            0270
@RF00268 L     @10,@PC00001+4                                      0270
         CLC   REQUEST(8,@10),PUTLABEL                             0270
         BNE   @RF00270                                            0270
*         CALL PUTLAB;              /*                       @Y30LB35
*                                                            @Y30LB35*/
         BAL   @14,PUTLAB                                          0271
*       ELSE                        /*                       @Y30LB35*/
*         DO;                                                      0272
         B     @RC00270                                            0272
@RF00270 DS    0H                                                  0273
*           RESPECIFY                                              0273
*            (REG13,                                               0273
*             REG14,                                               0273
*             REG15) RSTD;                                         0273
*           REG15=40;                                              0274
         LA    REG15,40                                            0274
*           REG14=GDTABT;                                          0275
         L     @10,@PC00001                                        0275
         L     REG14,GDTABT(,@10)                                  0275
*           REG13=GDTABH;                                          0276
         L     REG13,GDTABH(,@10)                                  0276
*           GEN(BR    REG14);                                      0277
         BR    REG14
*           RESPECIFY                                              0278
*            (REG13,                                               0278
*             REG14,                                               0278
*             REG15) UNRSTD;                                       0278
*         END;                      /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0279
*   /*****************************************************************/
*   /*                                                               */
*   /* HERE IDCVS02 WILL EXIT. BEFORE EXIT, THE              @Y30LB35*/
*   /* DUMP POINT FOR A FULL REGION DUMP OF 'VSOT'           @Y30LB35*/
*   /* CAN BE ISSUED.                                        @Y30LB35*/
*   /* THE RETURN CODE SAVED IN TESTRC IS RETURNED.          @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0280
*   IF GDTDBG=NULLPTR THEN                                         0280
@RC00270 DS    0H                                                  0280
@RC00268 DS    0H                                                  0280
@RC00266 L     @10,@PC00001                                        0280
         L     @10,GDTDBG(,@10)                                    0280
         LTR   @10,@10                                             0280
         BZ    @RT00280                                            0280
*     ;                                                            0281
*   ELSE                                                           0282
*     CALL IDCDB010(GDTTBL,'VSOT'); /*                       @Y30LB35*/
         L     @10,@PC00001                                        0282
         ST    @10,@AL00001                                        0282
         LA    @03,@CC01144                                        0282
         ST    @03,@AL00001+4                                      0282
         MVI   @AL00001+4,X'80'                                    0282
         L     @15,GDTDBG(,@10)                                    0282
         LA    @01,@AL00001                                        0282
         BALR  @14,@15                                             0282
*   CALL IDCSAEP0(GDTTBL,MODID,TESTRC);/*                    @Y30LB35*/
@RT00280 L     @10,@PC00001                                        0283
         ST    @10,@AL00001                                        0283
         LA    @03,MODID                                           0283
         ST    @03,@AL00001+4                                      0283
         LA    @03,TESTRC                                          0283
         ST    @03,@AL00001+8                                      0283
         MVI   @AL00001+8,X'80'                                    0283
         L     @15,GDTEPL(,@10)                                    0283
         LA    @01,@AL00001                                        0283
         BALR  @14,@15                                             0283
*                                                                  0284
*/********************************************************************/
*/*                                                          @Y30LB35*/
*/* PROCEDURE NAME - INITVOLM                                @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* FUNCTION -  ISSUE APPROPRIATE EXCP I/O MACROS OF UEXCP   @Y30LB35*/
*/*             (OPEN AND PUT) TO INITIALIZE THE NEW 3330V   @Y30LB35*/
*/*             VOLUME, CALLS THE SUBORDINATE ROUTINES OF    @Y30LB35*/
*/*             FMTTRK0 AND FMTTRK1 AND FINALLY RETURN TO    @Y30LB35*/
*/*             MAIN ROUTINE.                                @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* INPUT -     VS2AGL (ARGUMENTS PASSED AS INPUT)           @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* OUTPUT -    USERIOXP,                                    @Y30LB35*/
*/*             REGISTER 15 = 0, SUCCESSFUL                  @Y30LB35*/
*/*                           4, ERROR DURING OPEN (UEXCP)   @Y30LB35*/
*/*                           4, ERROR DURING PUT  (UEXCP)   @Y30LB35*/
*/*                                                          @Y30LB35*/
*/********************************************************************/
*                                                                  0284
*                                   /*                       @Y30LB35*/
*INITVOLM:                                                         0284
*   PROC;                           /*                       @Y30LB35*/
*                                                                  0284
@EL00001 L     @13,4(,@13)                                         0284
@EF00001 L     @00,@SIZDATD                                        0284
         LR    @01,@11                                             0284
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0284
         BR    @14                                                 0284
INITVOLM STM   @14,@12,@SA00002                                    0284
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TRACE POINT 'VSIN' IN TRACE TABLE              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0285
*   OLDERID2=NEWERID2;                                             0285
         L     @10,@PC00001                                        0285
         L     @03,GDTTR2(,@10)                                    0285
         MVC   @TS00001(95),NEWERID2(@03)                          0285
         MVC   OLDERID2(95,@03),@TS00001                           0285
*   NEWID2='VSIN';                  /*                       @Y30LB35*/
*                                                                  0286
         MVC   NEWID2(4,@03),@CC01148                              0286
*   /*****************************************************************/
*   /*                                                               */
*   /* EXOARG LIST IS INITIALIZED - UEXCP (OPEN)             @Y30LB35*/
*   /* THIS WILL BE USED TO OPEN THE NEW VOLUME FOR          @Y30LB35*/
*   /* INITIALIZATION.                                       @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*   EXOARG=''B;                     /*                       @Y30LB35*/
         LA    @03,EXOPARM                                         0287
         XC    EXOARG(34,@03),EXOARG(@03)                          0287
*   EXODDN=ADDR(VSDDNAME);          /*                       @Y30LB35*/
         L     @15,@PC00001+8                                      0288
         LA    @14,VSDDNAME(,@15)                                  0288
         ST    @14,EXODDN(,@03)                                    0288
*   EXOUCB=USERUCB;                 /*                       @Y30LB35*/
         L     @01,VSUCBPTR(,@15)                                  0289
         L     @15,USERUCB(,@01)                                   0289
         ST    @15,EXOUCB(,@03)                                    0289
*   IOXPTR=''B;                     /*                       @Y30LB35*/
         SLR   @15,@15                                             0290
         ST    @15,IOXPTR                                          0290
*   EXOCTLBK=ADDR(IOXPTR);          /*                       @Y30LB35*/
         LA    @15,IOXPTR                                          0291
         ST    @15,EXOCTLBK(,@03)                                  0291
*   EXONEW=ON;                      /*                       @Y30LB35*/
         OI    EXONEW(@03),B'00010000'                             0292
*   CALL IDCIO050(GDTTBL,OPEN,EXOARG);/*                     @Y30LB35*/
         ST    @10,@AL00001                                        0293
         LA    @15,OPEN                                            0293
         ST    @15,@AL00001+4                                      0293
         ST    @03,@AL00001+8                                      0293
         MVI   @AL00001+8,X'80'                                    0293
         L     @15,GDTEXP(,@10)                                    0293
         LA    @01,@AL00001                                        0293
         BALR  @14,@15                                             0293
*   RESPECIFY                                                      0294
*     RTNREG RSTD;                                                 0294
*   TESTRC=RTNREG;                                                 0295
         STH   RTNREG,TESTRC                                       0295
*   RESPECIFY                                                      0296
*     RTNREG UNRSTD;                /*                       @Y30LB35*/
*                                                                  0296
*   /*****************************************************************/
*   /*                                                               */
*   /* HERE THE RETURN CODE IS TESTED TO DETERMINE           @Y30LB35*/
*   /* IF OPEN FAILED.                                       @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*   IF TESTRC^=0                    /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
*                                                                  0297
         LH    @10,TESTRC                                          0297
         SLR   @03,@03                                             0297
         CR    @10,@03                                             0297
         BE    @RF00297                                            0297
*     /***************************************************************/
*     /*                                                             */
*     /* IF OPEN FAILED, IT MUST BE DETERMINED               @Y30LB35*/
*     /* IF UEXCP RETURNED THE IOCTLBK PTR. THE CLOSE        @Y30LB35*/
*     /* MUST BE PERFORMED FOR CLEAN UP.                     @Y30LB35*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0298
*     IF IOXPTR^=NULLPTR            /*                       @Y30LB35*/
*       THEN                        /*                       @Y30LB35*/
         C     @03,IOXPTR                                          0298
         BE    @RF00298                                            0298
*       CALL IDCIO050(GDTTBL,CLOSE,IOXPTR);/*                @Y30LB35*/
         L     @10,@PC00001                                        0299
         ST    @10,@AL00001                                        0299
         LA    @03,CLOSE                                           0299
         ST    @03,@AL00001+4                                      0299
         LA    @03,IOXPTR                                          0299
         ST    @03,@AL00001+8                                      0299
         MVI   @AL00001+8,X'80'                                    0299
         L     @15,GDTEXP(,@10)                                    0299
         LA    @01,@AL00001                                        0299
         BALR  @14,@15                                             0299
*                                                                  0300
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF THE VTOC IS TO BE REBUILT                    @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0300
*   IF VSNOVTOC=OFF THEN                                           0300
@RF00298 DS    0H                                                  0300
@RF00297 L     @10,@PC00001+8                                      0300
         TM    VSNOVTOC(@10),B'00100000'                           0300
         BNZ   @RF00300                                            0300
*     DO;                           /*                       @ZDR2057*/
*                                                                  0301
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE OPEN WAS SUCCESSFUL, THE EXPAGL IS         @Y30LB35*/
*       /* INITIALIZED AND THE SUB ROUTINE FMTTRK1 IS        @Y30LB35*/
*       /* CALLED TO PREPARE TO WRITE THE FIRST TRACK        @Y30LB35*/
*       /* IN THE NEW VTOC.                                  @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0302
*       IF TESTRC=0                 /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         LH    @03,TESTRC                                          0302
         LTR   @03,@03                                             0302
         BNZ   @RF00302                                            0302
*         DO;                       /*                       @Y30LB35*/
*           USERIOXP=IOXPTR;        /*                       @Y30LB35*/
         L     @03,IOXPTR                                          0304
         L     @10,VSIOBKPT(,@10)                                  0304
         ST    @03,USERIOXP(,@10)                                  0304
*           EXPARG=''B;             /*                       @Y30LB35*/
         LA    @10,EXPPARM                                         0305
         XC    EXPARG(20,@10),EXPARG(@10)                          0305
*           EXPDATA=ADDR(EXDATA);   /*                       @Y30LB35*/
         LA    @15,EXDATA                                          0306
         ST    @15,EXPDATA(,@10)                                   0306
*           EXPCTLBK=IOXPTR;        /*                       @Y30LB35*/
         ST    @03,EXPCTLBK(,@10)                                  0307
*           EXPCCHHR=ADDR(CCHH1);   /*                       @Y30LB35*/
         LA    @03,CCHH1                                           0308
         ST    @03,EXPCCHHR(,@10)                                  0308
*           EXPRECNO=VTOCREC;       /*                       @Y30LB35*/
         LH    @10,VTOCREC                                         0309
         ST    @10,EXPRECNO(,@15)                                  0309
*           CALL FMTTRK1;           /*                       @Y30LB35*/
         BAL   @14,FMTTRK1                                         0310
*           RESPECIFY                                              0311
*             RTNREG RSTD;                                         0311
*           TESTRC=RTNREG;                                         0312
         STH   RTNREG,TESTRC                                       0312
*           RESPECIFY                                              0313
*             RTNREG UNRSTD;        /*                       @Y30LB35*/
*                                                                  0313
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE FMTTRK1 WAS SUCCESSFUL, THE UEXCP      @Y30LB35*/
*           /* IS ISSUED WRITING THE CYLINDER 0 TRACK 1      @Y30LB35*/
*           /* OF THE VTOC (1 FMT4, 1 FMT5 & 37 FMT0 DSCBS)  @Y30LB35*/
*           /* IT SHOULD BE NOTED THAT CYLINDER 0 TRACK 0    @Y30LB35*/
*           /* WILL BE WRITTEN LAST IN THE INIALIZATION.     @Y30LB35*/
*           /* THIS IS BEING DONE IN CASE OF AN I/O ERROR    @Y30LB35*/
*           /* OR CANCELLATION BEFORE THE PACK HAS BEEN      @Y30LB35*/
*           /* FULLY INITALIZED. THE PACK CAN NOT BE         @Y30LB35*/
*           /* USED UNTIL THE LABEL RECORD IS WRITTEN        @Y30LB35*/
*           /* ONTO CYLINDER 0 TRACK 0 RECORD 3.             @Y30LB35*/
*           /* IT SHOULD ALSO BE NOTED THAT ENTIRE TRACKS    @Y30LB35*/
*           /* WILL BE WRITTEN DURING THE INITIALIZATION.    @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0314
*           IF TESTRC=0             /*                       @Y30LB35*/
*             THEN                  /*                       @Y30LB35*/
         LH    @10,TESTRC                                          0314
         LTR   @10,@10                                             0314
         BNZ   @RF00314                                            0314
*             DO;                   /*                       @Y30LB35*/
*               CALL IDCIO050(GDTTBL,PUT,EXPARG);/*          @Y30LB35*/
         L     @10,@PC00001                                        0316
         ST    @10,@AL00001                                        0316
         LA    @03,PUT                                             0316
         ST    @03,@AL00001+4                                      0316
         LA    @03,EXPPARM                                         0316
         ST    @03,@AL00001+8                                      0316
         MVI   @AL00001+8,X'80'                                    0316
         L     @15,GDTEXP(,@10)                                    0316
         LA    @01,@AL00001                                        0316
         BALR  @14,@15                                             0316
*               RESPECIFY                                          0317
*                 RTNREG RSTD;                                     0317
*               TESTRC=RTNREG;                                     0318
         STH   RTNREG,TESTRC                                       0318
*               RESPECIFY                                          0319
*                 RTNREG UNRSTD;    /*                       @Y30LB35*/
*             END;                  /*                       @Y30LB35*/
*         END;                      /*                       @Y30LB35
*                                                            @Y30LB35*/
@RF00314 DS    0H                                                  0322
*                                                                  0322
*       /*************************************************************/
*       /*                                                           */
*       /* PROVIDING THAT NO ERRORS HAVE OCCURRED            @Y30LB35*/
*       /* THUS FAR, THE REST OF THE VTOC IS INITALIZED.     @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0322
*       IF TESTRC=0                 /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
@RF00302 LH    @10,TESTRC                                          0322
         LTR   @10,@10                                             0322
         BNZ   @RF00322                                            0322
*         DO;                       /*                       @Y30LB35*/
*                                                                  0323
*           /*********************************************************/
*           /*                                                       */
*           /* PASS THE CCHHR OF CYL 0 TRACK 2 WHICH IS      @Y30LB35*/
*           /* THE VOLUME ADDRESS OF THE SECOND VTOC TRACK   @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0324
*           EXPCCHHR=ADDR(CCHHR);   /*                       @Y30LB35*/
         LA    @10,EXPPARM                                         0324
         LA    @03,CCHHR                                           0324
         ST    @03,EXPCCHHR(,@10)                                  0324
*           CCHHR=CCHH2;            /*                       @Y30LB35*/
*                                                                  0325
         MVC   CCHHR(5),CCHH2                                      0325
*           /*********************************************************/
*           /*                                                       */
*           /* LOOP 39 TIMES TO BUILD THE FMT0 RECORDS       @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0326
*           DO COUNTER=1 TO VTOCREC;/*                       @Y30LB35*/
         LA    COUNTER,1                                           0326
         B     @DE00326                                            0326
@DL00326 DS    0H                                                  0327
*             EXPDATAP(COUNTER)=ADDR(DSCBFMT0);/*            @Y30LB35*/
         LR    @10,COUNTER                                         0327
         SLA   @10,3                                               0327
         LA    @05,EXPPARM                                         0327
         L     @05,EXPDATA(,@05)                                   0327
         LA    @03,DSCBFMT0                                        0327
         LA    @01,0(@10,@05)                                      0327
         AL    @01,@CF01353                                        0327
         ST    @03,EXPDATAP-4(,@01)                                0327
*             EXPKEYLN(COUNTER)=DSCBKYLN;/*                  @Y30LB35*/
         LH    @03,DSCBKYLN                                        0328
         STC   @03,EXPKEYLN-8(@10,@05)                             0328
*             EXPDATAL(COUNTER)=DSCBDALN;/*                  @Y30LB35*/
         LH    @03,DSCBDALN                                        0329
         STH   @03,EXPDATAL-8(@10,@05)                             0329
*           END;                    /*                       @Y30LB35*/
         AL    COUNTER,@CF00217                                    0330
@DE00326 CH    COUNTER,VTOCREC                                     0330
         BNH   @DL00326                                            0330
*         END;                      /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0331
*       /*************************************************************/
*       /*                                                           */
*       /* PROVIDING MORE THAN ONE TRACK IS REQUESTED        @Y30LB35*/
*       /* THE UEXCP MACRO IS ISSUED OVER AND OVER           @Y30LB35*/
*       /* UNTIL ALL VTOC TRACKS ARE WRITTEN.                @Y30LB35*/
*       /* OF COURSE IF AN ERROR LIKE AN I/O ERROR           @Y30LB35*/
*       /* OCCURS AND A BAD RETURN CODE IS RETURNED.         @Y30LB35*/
*       /* THE PROCESSING WILL STOP AND TERMINATION          @Y30LB35*/
*       /* WILL TAKE PLACE.                                  @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0332
*       IF TESTRC=0&VSVTOCSZ>MINSIZE/*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
@RF00322 LH    @10,TESTRC                                          0332
         LTR   @10,@10                                             0332
         BNZ   @RF00332                                            0332
         L     @10,@PC00001+8                                      0332
         L     @10,VSVTOCSZ(,@10)                                  0332
         CH    @10,MINSIZE                                         0332
         BNH   @RF00332                                            0332
*         DO VTOCNUM=TRACKTWO TO VSVTOCSZ WHILE TESTRC=0;/*  @Y30LB35*/
         LH    VTOCNUM,TRACKTWO                                    0333
         B     @DE00333                                            0333
@DL00333 LH    @10,TESTRC                                          0333
         LTR   @10,@10                                             0333
         BNZ   @DC00333                                            0333
*           EXPHEAD=''B;            /*                       @Y30LB35*/
         LA    @10,EXPPARM                                         0334
         XC    EXPHEAD(8,@10),EXPHEAD(@10)                         0334
*           CALL IDCIO050(GDTTBL,PUT,EXPARG);/*              @Y30LB35*/
         L     @05,@PC00001                                        0335
         ST    @05,@AL00001                                        0335
         LA    @03,PUT                                             0335
         ST    @03,@AL00001+4                                      0335
         ST    @10,@AL00001+8                                      0335
         MVI   @AL00001+8,X'80'                                    0335
         L     @15,GDTEXP(,@05)                                    0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*           RESPECIFY                                              0336
*             RTNREG RSTD;                                         0336
*           TESTRC=RTNREG;                                         0337
         STH   RTNREG,TESTRC                                       0337
*           RESPECIFY                                              0338
*             RTNREG UNRSTD;        /*                       @Y30LB35*/
*                                                                  0338
*           /*********************************************************/
*           /*                                                       */
*           /* HERE THE CCHHR IS ADVANCED AFTER EACH WRITE   @Y30LB35*/
*           /* IN PREPARATION OF THE NEXT WRITE.             @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0339
*           IF HH=MAXTRKS           /*                       @ZA05121*/
*             THEN                  /*                       @Y30LB35*/
         CLC   HH(2),MAXTRKS                                       0339
         BNE   @RF00339                                            0339
*             DO;                   /*                       @Y30LB35*/
*               HH=ZERO;            /*                       @Y30LB35*/
         LH    @10,ZERO                                            0341
         STH   @10,HH                                              0341
*               CC=CC+ONE;          /*                       @Y30LB35*/
         LH    @10,CC                                              0342
         AH    @10,ONE                                             0342
         STH   @10,CC                                              0342
*             END;                  /*                       @Y30LB35*/
*           ELSE                    /*                       @Y30LB35*/
*             HH=HH+ONE;            /*                       @Y30LB35*/
         B     @RC00339                                            0344
@RF00339 LH    @10,HH                                              0344
         AH    @10,ONE                                             0344
         STH   @10,HH                                              0344
*         END;                      /*                       @Y30LB35*/
@RC00339 AL    VTOCNUM,@CF00217                                    0345
@DE00333 L     @10,@PC00001+8                                      0345
         C     VTOCNUM,VSVTOCSZ(,@10)                              0345
         BNH   @DL00333                                            0345
@DC00333 DS    0H                                                  0346
*     END;                          /*                       @ZDR2057*/
*                                                                  0346
*   /*****************************************************************/
*   /*                                                               */
*   /* REBUILD A VOLUME LABEL                                @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0347
*   ELSE                                                           0347
*     USERIOXP=IOXPTR;              /*                       @ZDR2057*/
*                                                                  0347
         B     @RC00300                                            0347
@RF00300 L     @10,@PC00001+8                                      0347
         L     @10,VSIOBKPT(,@10)                                  0347
         L     @03,IOXPTR                                          0347
         ST    @03,USERIOXP(,@10)                                  0347
*   /*****************************************************************/
*   /*                                                               */
*   /* IF EVERYTHING THUS FAR IS OK, THEN PREPAR-            @Y30LB35*/
*   /* ATIONS ARE MADE TO WRITE THE LAST TRACK - 0.          @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RC00300 LH    @10,TESTRC                                          0348
         LTR   @10,@10                                             0348
         BNZ   @RF00348                                            0348
*     DO;                           /*                       @Y30LB35*/
*                                                                  0349
*       /*************************************************************/
*       /*                                                           */
*       /* THE SUB PROC FMTTRK0 BUILDS THE THREE             @Y30LB35*/
*       /* RECORDS CONTAINED ON TRACK ZERO                   @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0350
*       CALL FMTTRK0;               /*                       @Y30LB35*/
         BAL   @14,FMTTRK0                                         0350
*       RESPECIFY                                                  0351
*         RTNREG RSTD;                                             0351
*       TESTRC=RTNREG;                                             0352
         STH   RTNREG,TESTRC                                       0352
*       RESPECIFY                                                  0353
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*                                                                  0353
*       /*************************************************************/
*       /*                                                           */
*       /* PROVIDED FMTTRK0 WAS SUCCESSFUL, THE LAST         @Y30LB35*/
*       /* WILL BE WRITTEN.                                  @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0354
*       IF TESTRC=0                 /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         LH    @10,TESTRC                                          0354
         LTR   @10,@10                                             0354
         BNZ   @RF00354                                            0354
*         DO;                       /*                       @Y30LB35*/
*                                                                  0355
*           /*********************************************************/
*           /*                                                       */
*           /* CALL IDCIO05 TO WRITE LAST TRACK.             @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0356
*           CALL IDCIO050(GDTTBL,PUT,EXPARG);/*              @Y30LB35*/
         L     @10,@PC00001                                        0356
         ST    @10,@AL00001                                        0356
         LA    @03,PUT                                             0356
         ST    @03,@AL00001+4                                      0356
         LA    @03,EXPPARM                                         0356
         ST    @03,@AL00001+8                                      0356
         MVI   @AL00001+8,X'80'                                    0356
         L     @15,GDTEXP(,@10)                                    0356
         LA    @01,@AL00001                                        0356
         BALR  @14,@15                                             0356
*           RESPECIFY                                              0357
*             RTNREG RSTD;                                         0357
*           TESTRC=RTNREG;                                         0358
         STH   RTNREG,TESTRC                                       0358
*           RESPECIFY                                              0359
*             RTNREG UNRSTD;        /*                       @Y30LB35*/
*         END;                      /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0361
@RF00354 DS    0H                                                  0362
*   /*****************************************************************/
*   /*                                                               */
*   /* HERE CONTROL IS RETURNED TO IDCVS02 WITH              @Y30LB35*/
*   /* THE RETURN CODE IN REGISTER 15.                       @Y30LB35*/
*   /* IT SHOULD BE NOTED THAT THE CLOSE WILL BE             @Y30LB35*/
*   /* DONE BY THE CALLER - (IDCCV01).                       @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0362
*   RETURN CODE(TESTRC);            /*                       @Y30LB35*/
@RF00348 LH    @15,TESTRC                                          0362
         L     @14,@SA00002                                        0362
         LM    @00,@12,@SA00002+8                                  0362
         BR    @14                                                 0362
*   END INITVOLM;                   /*                       @Y30LB35*/
*                                                                  0364
*/********************************************************************/
*/*                                                          @Y30LB35*/
*/* PROCEDURE NAME - GETLAB                                  @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* FUNCTION -  OPEN THE VTOC, READ THE LABEL, RETURN        @Y30LB35*/
*/*             INFORMATION REQUESTED BY THE CALLER, AND     @Y30LB35*/
*/*             CLOSE THE VTOC.                              @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* INPUT -     VS2AGL (ARGUMENTS PASSED AS INPUT)           @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* OUTPUT -    USERLAB (THE VOLUME LABEL)                   @Y30LB35*/
*/*             USEROWN (THE VOLUME OWNER NAME)              @Y30LB35*/
*/*             REGISTER 15 = 0, SUCCESSFUL                  @Y30LB35*/
*/*                           4, ERROR DURING USYSINFO CALL  @Y30LB35*/
*/*                           4, ERROR DURING URESERV CALL   @Y30LB35*/
*/*                           4, ERROR DURING GET (UEXCP)    @Y30LB35*/
*/*                           8, SUCCESSFUL BUT CLOSE FAILED @Y30LB35*/
*/*                                                          @Y30LB35*/
*/********************************************************************/
*                                                                  0364
*                                   /*                       @Y30LB35*/
*GETLAB:                                                           0364
*   PROC;                           /*                       @Y30LB35*/
*                                                                  0364
GETLAB   STM   @14,@12,@SA00003                                    0364
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TRACE POINT 'VSGL' IN TRACE TABLE              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0365
*   OLDERID2=NEWERID2;                                             0365
         L     @10,@PC00001                                        0365
         L     @03,GDTTR2(,@10)                                    0365
         MVC   @TS00001(95),NEWERID2(@03)                          0365
         MVC   OLDERID2(95,@03),@TS00001                           0365
*   NEWID2='VSGL';                  /*                       @Y30LB35*/
*                                                                  0366
         MVC   NEWID2(4,@03),@CC01155                              0366
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR THE UEXCP (OPEN) ARG LIST FOR SET UP            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0367
*   EXOARG=''B;                     /*                       @Y30LB35*/
*                                                                  0367
         LA    @03,EXOPARM                                         0367
         XC    EXOARG(34,@03),EXOARG(@03)                          0367
*   /*****************************************************************/
*   /*                                                               */
*   /* PROVIDED THE CALLER HAS PROVIDED RETURN AREA          @Y30LB35*/
*   /* FOR THE UCB ADDRESS, THE USYSINFO FUNCTION            @Y30LB35*/
*   /* WILL BE UTILIZED TO OBTAIN THE ADDRESS.               @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0368
*   IF VSUCBPTR^=NULLPTR            /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
         SLR   @03,@03                                             0368
         L     @15,@PC00001+8                                      0368
         L     @14,VSUCBPTR(,@15)                                  0368
         CR    @14,@03                                             0368
         BE    @RF00368                                            0368
*     DO;                           /*                       @Y30LB35*/
*                                                                  0369
*       /*************************************************************/
*       /*                                                           */
*       /* OF COURSE IF THE CALLER ALREADY HAS THE UCB       @Y30LB35*/
*       /* POINTER THE USYSINFO WILL NOT BE NEEDED.          @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0370
*       IF USERUCB=NULLPTR          /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         C     @03,USERUCB(,@14)                                   0370
         BNE   @RF00370                                            0370
*         DO;                       /*                       @Y30LB35*/
*                                                                  0371
*           /*********************************************************/
*           /*                                                       */
*           /* HERE THE USYSINFO WILL BE INVOKED WITH THE    @Y30LB35*/
*           /* UNIT REQUEST OPTION.                          @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0372
*           UNITABLP=ADDR(UNITABL); /*                       @Y30LB35*/
         LA    @03,RTNUNIT                                         0372
         ST    @03,UNITABLP                                        0372
*           UNITABL=''B;            /*                       @Y30LB35*/
         XC    UNITABL(11,@03),UNITABL(@03)                        0373
*           CALL IDCSASI0(GDTTBL,UNIT,UNITABLP,VSDDNAME);          0374
         ST    @10,@AL00001                                        0374
         LA    @03,UNIT                                            0374
         ST    @03,@AL00001+4                                      0374
         LA    @03,UNITABLP                                        0374
         ST    @03,@AL00001+8                                      0374
         LA    @03,VSDDNAME(,@15)                                  0374
         ST    @03,@AL00001+12                                     0374
         MVI   @AL00001+12,X'80'                                   0374
         L     @15,GDTSFO(,@10)                                    0374
         LA    @01,@AL00001                                        0374
         BALR  @14,@15                                             0374
*           RESPECIFY                                              0375
*             RTNREG RSTD;                                         0375
*           TESTRC=RTNREG;                                         0376
         STH   RTNREG,TESTRC                                       0376
*           RESPECIFY                                              0377
*             RTNREG UNRSTD;        /*                       @Y30LB35*/
*                                                                  0377
*           /*********************************************************/
*           /*                                                       */
*           /* MOVE THE UCB ADDRESS INTO THE CALLERS 4 BYTE  @Y30LB35*/
*           /* AREA.                                         @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0378
*           USERUCB=UNITUCB;        /*                       @Y30LB35*/
         L     @10,@PC00001+8                                      0378
         L     @10,VSUCBPTR(,@10)                                  0378
         LA    @03,RTNUNIT                                         0378
         L     @03,UNITUCB(,@03)                                   0378
         ST    @03,USERUCB(,@10)                                   0378
*         END;                      /*                       @Y30LB35*/
*                                                                  0379
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP ADDRESS INTO UEXCP (OPEN) ARG LIST         @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0380
*       EXOUCB=USERUCB;             /*                       @Y30LB35*/
@RF00370 LA    @10,EXOPARM                                         0380
         L     @03,@PC00001+8                                      0380
         L     @03,VSUCBPTR(,@03)                                  0380
         L     @03,USERUCB(,@03)                                   0380
         ST    @03,EXOUCB(,@10)                                    0380
*     END;                          /*                       @Y30LB35*/
*                                                                  0382
*   /*****************************************************************/
*   /*                                                               */
*   /* IF USYSINFO WAS SUCCESSFULLY PERFORMED, THE           @Y30LB35*/
*   /* COMPLETION OF UEXCP (OPEN) ARGLIST IS DONE            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0382
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00368 LH    @10,TESTRC                                          0382
         LTR   @10,@10                                             0382
         BNZ   @RF00382                                            0382
*     DO;                           /*                       @Y30LB35*/
*       IOXPTR=''B;                 /*                       @Y30LB35*/
         SLR   @10,@10                                             0384
         ST    @10,IOXPTR                                          0384
*       EXODDN=ADDR(VSDDNAME);      /*                       @Y30LB35*/
         LA    @10,EXOPARM                                         0385
         L     @03,@PC00001+8                                      0385
         LA    @15,VSDDNAME(,@03)                                  0385
         ST    @15,EXODDN(,@10)                                    0385
*       EXOCTLBK=ADDR(IOXPTR);      /*                       @Y30LB35*/
         LA    @15,IOXPTR                                          0386
         ST    @15,EXOCTLBK(,@10)                                  0386
*       EXOLAB=ON;                  /*                       @Y30LB35*/
         OI    EXOLAB(@10),B'01000000'                             0387
*       EXOREAD=ON;                 /*                       @Y30LB35*/
*                                                                  0388
         OI    EXOREAD(@10),B'10000000'                            0388
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE CALLER HAS SUPPLIED THE VOL SER,           @Y30LB35*/
*       /* IT WILL BE PASSED TO UEXCP TO USE IN AN           @Y30LB35*/
*       /* OPEN TYPE=J.                                      @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0389
*       IF VSVOLUME^=NULLVAL        /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         CLC   VSVOLUME(6,@03),NULLVAL                             0389
         BE    @RF00389                                            0389
*         EXOVSN=ADDR(VSVOLUME);    /*                       @Y30LB35*/
*                                                                  0390
         LA    @03,VSVOLUME(,@03)                                  0390
         ST    @03,EXOVSN(,@10)                                    0390
*       /*************************************************************/
*       /*                                                           */
*       /* CALL IDCIO05 TO PERFORM AN OPEN ON THE VTOC.      @Y30LB35*/
*       /* IT SHOULD BE NOTED THAT THE MODESET FUNCTION      @Y30LB35*/
*       /* WILL BE USED BY IDCIO05 TO MODIFY THE DEB TO      @Y30LB35*/
*       /* ALLOW ACCESS TO THE CYL 0 TRACK 0 RECORD 3.       @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0391
*       CALL IDCIO050(GDTTBL,OPEN,EXOARG);/*                 @Y30LB35*/
@RF00389 L     @10,@PC00001                                        0391
         ST    @10,@AL00001                                        0391
         LA    @03,OPEN                                            0391
         ST    @03,@AL00001+4                                      0391
         LA    @03,EXOPARM                                         0391
         ST    @03,@AL00001+8                                      0391
         MVI   @AL00001+8,X'80'                                    0391
         L     @15,GDTEXP(,@10)                                    0391
         LA    @01,@AL00001                                        0391
         BALR  @14,@15                                             0391
*       RESPECIFY                                                  0392
*         RTNREG RSTD;                                             0392
*       TESTRC=RTNREG;                                             0393
         STH   RTNREG,TESTRC                                       0393
*       RESPECIFY                                                  0394
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0396
*   /*****************************************************************/
*   /*                                                               */
*   /* AFTER THE OPEN HAS BEEN PERFORMED, A RESERVE          @Y30LB35*/
*   /* CAN NOW BE PERFORMED ALLOWING EXCLUSIVE USE           @Y30LB35*/
*   /* OF THE VOLUME PROVIDED THE CALLER HAS                 @Y30LB35*/
*   /* REQUESTED IT.                                         @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0396
*   IF VS2RES=ON&TESTRC=0           /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00382 L     @10,@PC00001+8                                      0396
         TM    VS2RES(@10),B'10000000'                             0396
         BNO   @RF00396                                            0396
         SLR   @03,@03                                             0396
         CH    @03,TESTRC                                          0396
         BNE   @RF00396                                            0396
*     DO;                           /*                       @Y30LB35*/
*                                                                  0397
*       /*************************************************************/
*       /*                                                           */
*       /* BECAUSE THE UCB ADDRESS IS REQUIRED TO ISSUE      @Y30LB35*/
*       /* URESERVE, PROCESSING CANNOT CONTINUE BECAUSE      @Y30LB35*/
*       /* THE CALLER HAS INJECTED A PROGRAMMING ERROR       @Y30LB35*/
*       /* BY NOT PROVIDING A FOUR BYTE AREA.                @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0398
*       IF VSUCBPTR=NULLPTR         /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         C     @03,VSUCBPTR(,@10)                                  0398
         BNE   @RF00398                                            0398
*         DO;                                                      0399
*           RESPECIFY                                              0400
*            (REG13,                                               0400
*             REG14,                                               0400
*             REG15) RSTD;                                         0400
*           REG15=40;                                              0401
         LA    REG15,40                                            0401
*           REG14=GDTABT;                                          0402
         L     @10,@PC00001                                        0402
         L     REG14,GDTABT(,@10)                                  0402
*           REG13=GDTABH;                                          0403
         L     REG13,GDTABH(,@10)                                  0403
*           GEN(BR    REG14);                                      0404
         BR    REG14
*           RESPECIFY                                              0405
*            (REG13,                                               0405
*             REG14,                                               0405
*             REG15) UNRSTD;                                       0405
*         END;                      /*                       @Y30LB35*/
*                                                                  0406
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE URESERVE PARMLIST                      @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0407
*       UCBADDR=USERUCB;            /*                       @Y30LB35*/
@RF00398 L     @10,@PC00001+8                                      0407
         L     @03,VSUCBPTR(,@10)                                  0407
         L     @03,USERUCB(,@03)                                   0407
         ST    @03,UCBADDR                                         0407
*       QNAME=AMSQNAME;             /*                       @Y30LB35*/
         MVC   QNAME(8),AMSQNAME                                   0408
*       RVOLSER=VSVOLUME;           /*                       @Y30LB35*/
         MVC   RVOLSER(6),VSVOLUME(@10)                            0409
*       RLENGTH=LENGTH(RVOLSER)+LENGTH(RQUAL);/*             @ZA13060*/
*                                                                  0410
         MVI   RLENGTH,X'16'                                       0410
*       /*************************************************************/
*       /*                                                           */
*       /* DEPENDING ON PHYSICAL 3330 OR NOT THE RNAME       @Y30LB35*/
*       /* QUALIFIED .REAL.RESERVE OR .VIRTUAL.RESERVE       @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0411
*       IF VS2REAL=ON               /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         TM    VS2REAL(@10),B'01000000'                            0411
         BNO   @RF00411                                            0411
*         RQUAL=REALQUAL;           /*                       @Y30LB35*/
         MVC   RQUAL(16),REALQUAL                                  0412
*       ELSE                        /*                       @Y30LB35*/
*         RQUAL=VIRTQUAL;           /*                       @Y30LB35*/
*                                                                  0413
         B     @RC00411                                            0413
@RF00411 MVC   RQUAL(16),VIRTQUAL                                  0413
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE THE URESERVE REQUEST AND SET WAIT           @ZA05121*/
*       /* OPTION BECAUSE THERE SHOULD NOT BE ANOTHER        @Y30LB35*/
*       /* TASK REQUIRING THE RESOURCE.                      @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0414
*       CALL IDCSARV0(GDTTBL,EXCL,WAIT,UCBADDR,QNAME,RNAME);/*     0414
*                                                            @ZA05121*/
@RC00411 L     @10,@PC00001                                        0414
         ST    @10,@AL00001                                        0414
         LA    @03,EXCL                                            0414
         ST    @03,@AL00001+4                                      0414
         LA    @03,WAIT                                            0414
         ST    @03,@AL00001+8                                      0414
         LA    @03,UCBADDR                                         0414
         ST    @03,@AL00001+12                                     0414
         LA    @03,QNAME                                           0414
         ST    @03,@AL00001+16                                     0414
         LA    @03,RNAME                                           0414
         ST    @03,@AL00001+20                                     0414
         MVI   @AL00001+20,X'80'                                   0414
         L     @15,GDTRSV(,@10)                                    0414
         LA    @01,@AL00001                                        0414
         BALR  @14,@15                                             0414
*       RESPECIFY                                                  0415
*         RTNREG RSTD;                                             0415
*       TESTRC=RTNREG;                                             0416
         STH   RTNREG,TESTRC                                       0416
*       RESPECIFY                                                  0417
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0418
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW ALL PREPARATIONS HAVE BEEN MADE, THE GET          @Y30LB35*/
*   /* CAN BE REQUESTED OF IDCIO05 VIA UEXCP MACRO.          @Y30LB35*/
*   /* THE RETURN CODE MAY NOT BE ZERO IF OPEN,              @Y30LB35*/
*   /* USYSINFO, OR URESERVE WAS UNSUCCESSFUL.               @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0419
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00396 LH    @10,TESTRC                                          0419
         LTR   @10,@10                                             0419
         BNZ   @RF00419                                            0419
*     DO;                           /*                       @Y30LB35*/
*                                                                  0420
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE THE UEXCP (GET) PARMS (EXGARG)         @Y30LB35*/
*       /* TO READ KEY AND DATA OF CYL 0 TRK 0 RECORD 3      @Y30LB35*/
*       /* WHICH IS THE VOLUME LABEL RECORD                  @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0421
*       EXGARG=''B;                 /*                       @Y30LB35*/
         LA    @10,EXGPARM                                         0421
         XC    EXGARG(32,@10),EXGARG(@10)                          0421
*       EXGCTLBK=IOXPTR;            /*                       @Y30LB35*/
         L     @03,IOXPTR                                          0422
         ST    @03,EXGCTLBK(,@10)                                  0422
*       EXGCCHH2=ADDR(VOLCCHHR);    /*                       @Y30LB35*/
         LA    @03,VOLCCHHR                                        0423
         ST    @03,EXGCCHH2(,@10)                                  0423
*       EXGRECNO=ONE;               /*                       @Y30LB35*/
         LH    @03,ONE                                             0424
         ST    @03,EXGRECNO(,@10)                                  0424
*       EXGDATAP=ADDR(VOLLABEL);    /*                       @Y30LB35*/
         LA    @03,LABELREC                                        0425
         ST    @03,EXGDATAP(,@10)                                  0425
*       EXGKEYLN=LENGTH(VOLKEY);    /*                       @Y30LB35*/
         MVI   EXGKEYLN(@10),X'04'                                 0426
*       EXGDATAL=LENGTH(VOLLABEL)-LENGTH(VOLKEY);                  0427
*                                                                  0427
         MVC   EXGDATAL(2,@10),@CH01346                            0427
*       /*************************************************************/
*       /*                                                           */
*       /* CALL IDCIO05 TO READ LABEL RECORD                 @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0428
*       CALL IDCIO050(GDTTBL,GET,EXGARG);/*                  @Y30LB35*/
         L     @03,@PC00001                                        0428
         ST    @03,@AL00001                                        0428
         LA    @15,GET                                             0428
         ST    @15,@AL00001+4                                      0428
         ST    @10,@AL00001+8                                      0428
         MVI   @AL00001+8,X'80'                                    0428
         L     @15,GDTEXP(,@03)                                    0428
         LA    @01,@AL00001                                        0428
         BALR  @14,@15                                             0428
*       RESPECIFY                                                  0429
*         RTNREG RSTD;                                             0429
*       TESTRC=RTNREG;                                             0430
         STH   RTNREG,TESTRC                                       0430
*       RESPECIFY                                                  0431
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0433
*   /*****************************************************************/
*   /*                                                               */
*   /* PROVIDED THE READ OF THE VOLUME RECORD WAS            @Y30LB35*/
*   /* SUCCESSFUL, THE REQUESTED FIELDS CAN NOW              @Y30LB35*/
*   /* BE RETURNED TO THE CALLER.                            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0433
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00419 LH    @10,TESTRC                                          0433
         LTR   @10,@10                                             0433
         BNZ   @RF00433                                            0433
*     DO;                           /*                       @Y30LB35*/
*                                                                  0434
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE CALLER DESIRED THE 6 BYTE LABEL,           @Y30LB35*/
*       /* IT IS COPIED INTO CALLER'S CORE WHICH WAS         @Y30LB35*/
*       /* POINTED TO BY VSVOLPTR INPUT FIELD.               @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0435
*       IF VSVOLSER=ON              /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         L     @10,@PC00001+8                                      0435
         TM    VSVOLSER(@10),B'01000000'                           0435
         BNO   @RF00435                                            0435
*         USERLAB=VOLSERNO;         /*                       @Y30LB35*/
*                                                                  0436
         L     @10,VSVOLPTR(,@10)                                  0436
         LA    @03,LABELREC                                        0436
         MVC   USERLAB(6,@10),VOLSERNO(@03)                        0436
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE CALLER DESIRED THE 10 BYTE OWNER,          @Y30LB35*/
*       /* IT IS COPIED INTO CALLER'S CORE WHICH WAS         @Y30LB35*/
*       /* POINTED TO BY VSOWNPTR INPUT FIELD.               @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0437
*       IF VSOWNER=ON               /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
@RF00435 L     @10,@PC00001+8                                      0437
         TM    VSOWNER(@10),B'10000000'                            0437
         BNO   @RF00437                                            0437
*         USEROWN=VOLOWNER;         /*                       @Y30LB35*/
         L     @10,VSOWNPTR(,@10)                                  0438
         LA    @03,LABELREC                                        0438
         MVC   USEROWN(10,@10),VOLOWNER(@03)                       0438
*     END;                          /*                       @Y30LB35*/
@RF00437 DS    0H                                                  0440
*                                                                  0440
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CLEAN UP BEGINS. THE IOCTLBK POINTER              @Y30LB35*/
*   /* FIELD IS TESTED TO DETERMINE WHETHER THE              @Y30LB35*/
*   /* UEXCP (CLOSE) REQUEST IS NEEDED.                      @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0440
*   IF IOXPTR^=NULLPTR              /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00433 L     @10,IOXPTR                                          0440
         LTR   @10,@10                                             0440
         BZ    @RF00440                                            0440
*     DO;                           /*                       @Y30LB35*/
*       RESPECIFY                                                  0442
*         RTNREG RSTD;              /*                       @Y30LB35*/
*                                                                  0442
*       /*************************************************************/
*       /*                                                           */
*       /* THE ONLY PARMETER REQUIRED IS THE IOCTLBK         @Y30LB35*/
*       /* POINTER AS ALL NECESSARY INFORMATION NEEDED       @Y30LB35*/
*       /* TO PERFORM THE CLOSE IS IN THE IOCTLBK.           @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0443
*       CALL IDCIO050(GDTTBL,CLOSE,IOXPTR);/*                @Y30LB35*/
*                                                                  0443
         L     @14,@PC00001                                        0443
         ST    @14,@AL00001                                        0443
         LA    @10,CLOSE                                           0443
         ST    @10,@AL00001+4                                      0443
         LA    @10,IOXPTR                                          0443
         ST    @10,@AL00001+8                                      0443
         MVI   @AL00001+8,X'80'                                    0443
         L     @15,GDTEXP(,@14)                                    0443
         LA    @01,@AL00001                                        0443
         BALR  @14,@15                                             0443
*       /*************************************************************/
*       /*                                                           */
*       /* AT THIS POINT THE DETERMINATION IS MADE AS        @Y30LB35*/
*       /* TO WHAT RETURN CODE IS IN ORDER.                  @Y30LB35*/
*       /* IF THE SAVED RETURN CODE THAT HAD BEEN SAVED      @Y30LB35*/
*       /* BEFORE THE CLOSE IS NON-ZERO THEN THE RCFAIL      @Y30LB35*/
*       /* IS RETURNED BECAUSE THIS MEANS FOR SOME           @Y30LB35*/
*       /* REASON THE REQUESTED INFORMATION CAN NOT BE       @Y30LB35*/
*       /* OBTAINED FOR CALLER. IF THE RETURN CODE IS        @Y30LB35*/
*       /* ZERO BUT RETURN CODE FROM UEXCP (CLOSE) IS        @Y30LB35*/
*       /* NOT ZERO THE ERROR CODE CLOSEBAD(8) BECAUSE       @Y30LB35*/
*       /* THE REQUESTED INFORMATION IS BEING RETURNED       @Y30LB35*/
*       /* BUT THERE WAS A PROBLEM ENCOUNTED DURING          @Y30LB35*/
*       /* CLOSE. IF BOTH ARE ZERO THEN RCOK (0) IS          @Y30LB35*/
*       /* RETURNED.                                         @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0444
*       IF TESTRC^=0                /*                       @Y30LB35*/
*         THEN                                                     0444
         LH    @14,TESTRC                                          0444
         LTR   @14,@14                                             0444
         BZ    @RF00444                                            0444
*         TESTRC=4;                 /*                       @Y30LB35*/
         MVC   TESTRC(2),@CH00041                                  0445
*       ELSE                        /*                       @Y30LB35*/
*         IF RTNREG^=0              /*                       @Y30LB35*/
*           THEN                    /*                       @Y30LB35*/
         B     @RC00444                                            0446
@RF00444 LTR   RTNREG,RTNREG                                       0446
         BZ    @RF00446                                            0446
*           TESTRC=CLOSEBAD;        /*                       @Y30LB35*/
         LH    @14,CLOSEBAD                                        0447
         STH   @14,TESTRC                                          0447
*         ELSE                                                     0448
*           TESTRC=0;               /*                       @Y30LB35*/
         B     @RC00446                                            0448
@RF00446 SLR   @14,@14                                             0448
         STH   @14,TESTRC                                          0448
*       RESPECIFY                                                  0449
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
@RC00446 DS    0H                                                  0449
@RC00444 DS    0H                                                  0450
*     END;                          /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0450
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE IOCTLBK POINTER IS NULL THERE IS               @Y30LB35*/
*   /* NO WAY THE INFORMATION CAN BE RETURNED AND            @Y30LB35*/
*   /* ERROR CODE RCFAIL (4) IS RETURNED.                    @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0451
*   ELSE                                                           0451
*     TESTRC=4;                     /*                       @Y30LB35*/
         B     @RC00440                                            0451
@RF00440 MVC   TESTRC(2),@CH00041                                  0451
*   RETURN CODE(TESTRC);            /*                       @Y30LB35*/
@RC00440 LH    @15,TESTRC                                          0452
         L     @14,@SA00003                                        0452
         LM    @00,@12,@SA00003+8                                  0452
         BR    @14                                                 0452
*   END GETLAB;                     /*                       @Y30LB35*/
*                                                                  0454
*/********************************************************************/
*/*                                                          @Y30LB35*/
*/* PROCEDURE NAME - PUTLAB                                  @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* FUNCTION -  OPEN THE VTOC, READ THE LABEL, UPDATE THE    @Y30LB35*/
*/*             LABEL WITH INFORMATION SUPPLIED BY CALLER    @Y30LB35*/
*/*             AND CLOSE THE VTOC.                          @Y30LB35*/
*/*                                                          @Y30LB35*/
*/*             IDC3070I ISSUED IF UNABLE TO UPDATE LABEL    @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* INPUT -     VS2AGL (ARGUMENTS PASSED AS INPUT)           @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* OUTPUT -    REGISTER 15 = 0, SUCCESSFUL                  @Y30LB35*/
*/*                           4, ERROR DURING USYSINFO CALL  @Y30LB35*/
*/*                           4, ERROR DURING URESERV CALL   @Y30LB35*/
*/*                           4, ERROR DURING GET (UEXCP)    @Y30LB35*/
*/*                           4, ERROR DURING PUT (UEXCP)    @Y30LB35*/
*/*                           8, SUCCESSFUL BUT CLOSE FAILED @Y30LB35*/
*/*                                                          @Y30LB35*/
*/********************************************************************/
*                                                                  0454
*                                   /*                       @Y30LB35*/
*PUTLAB:                                                           0454
*   PROC;                           /*                       @Y30LB35*/
*                                                                  0454
PUTLAB   STM   @14,@12,@SA00004                                    0454
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TRACE POINT 'VSPL' IN TRACE TABLE              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0455
*   OLDERID2=NEWERID2;                                             0455
         L     @10,@PC00001                                        0455
         L     @03,GDTTR2(,@10)                                    0455
         MVC   @TS00001(95),NEWERID2(@03)                          0455
         MVC   OLDERID2(95,@03),@TS00001                           0455
*   NEWID2='VSPL';                  /*                       @Y30LB35*/
*                                                                  0456
         MVC   NEWID2(4,@03),@CC01159                              0456
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR THE UEXCP (OPEN) ARG LIST FOR SET UP            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0457
*   EXOARG=''B;                     /*                       @Y30LB35*/
*                                                                  0457
         LA    @03,EXOPARM                                         0457
         XC    EXOARG(34,@03),EXOARG(@03)                          0457
*   /*****************************************************************/
*   /*                                                               */
*   /* MAKE SURE CALLER HAS PROVIDED THE FOUR                @Y30LB35*/
*   /* BYTE AREA FOR THE UCB ADDRESS.                        @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0458
*   IF VSUCBPTR^=NULLPTR            /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
         SLR   @03,@03                                             0458
         L     @15,@PC00001+8                                      0458
         L     @14,VSUCBPTR(,@15)                                  0458
         CR    @14,@03                                             0458
         BE    @RF00458                                            0458
*     DO;                           /*                       @Y30LB35*/
*                                                                  0459
*       /*************************************************************/
*       /*                                                           */
*       /* OF COURSE IF THE CALLER ALREADY HAS THE UCB       @Y30LB35*/
*       /* POINTER THE USYSINFO WILL NOT BE NEEDED.          @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0460
*       IF USERUCB=NULLPTR          /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         C     @03,USERUCB(,@14)                                   0460
         BNE   @RF00460                                            0460
*         DO;                       /*                       @Y30LB35*/
*                                                                  0461
*           /*********************************************************/
*           /*                                                       */
*           /* HERE THE USYSINFO WILL BE INVOKED WITH THE    @Y30LB35*/
*           /* UNIT REQUEST OPTION.                          @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0462
*           UNITABLP=ADDR(UNITABL); /*                       @Y30LB35*/
         LA    @03,RTNUNIT                                         0462
         ST    @03,UNITABLP                                        0462
*           UNITABL=''B;            /*                       @Y30LB35*/
*                                                                  0463
         XC    UNITABL(11,@03),UNITABL(@03)                        0463
*           /*********************************************************/
*           /*                                                       */
*           /* CALL IDCSASI FOR UCB ADDRESS                  @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0464
*           CALL IDCSASI0(GDTTBL,UNIT,UNITABLP,VSDDNAME);          0464
         ST    @10,@AL00001                                        0464
         LA    @03,UNIT                                            0464
         ST    @03,@AL00001+4                                      0464
         LA    @03,UNITABLP                                        0464
         ST    @03,@AL00001+8                                      0464
         LA    @03,VSDDNAME(,@15)                                  0464
         ST    @03,@AL00001+12                                     0464
         MVI   @AL00001+12,X'80'                                   0464
         L     @15,GDTSFO(,@10)                                    0464
         LA    @01,@AL00001                                        0464
         BALR  @14,@15                                             0464
*           RESPECIFY                                              0465
*             RTNREG RSTD;                                         0465
*           TESTRC=RTNREG;                                         0466
         STH   RTNREG,TESTRC                                       0466
*           RESPECIFY                                              0467
*             RTNREG UNRSTD;        /*                       @Y30LB35*/
*                                                                  0467
*           /*********************************************************/
*           /*                                                       */
*           /* MOVE THE UCB ADDRESS INTO THE CALLERS 4 BYTE  @Y30LB35*/
*           /* AREA.                                         @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0468
*           USERUCB=UNITUCB;        /*                       @Y30LB35*/
         L     @10,@PC00001+8                                      0468
         L     @10,VSUCBPTR(,@10)                                  0468
         LA    @03,RTNUNIT                                         0468
         L     @03,UNITUCB(,@03)                                   0468
         ST    @03,USERUCB(,@10)                                   0468
*         END;                      /*                       @Y30LB35*/
*                                                                  0469
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP ADDRESS INTO UEXCP (OPEN) ARG LIST         @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0470
*       EXOUCB=USERUCB;             /*                       @Y30LB35*/
@RF00460 LA    @10,EXOPARM                                         0470
         L     @03,@PC00001+8                                      0470
         L     @03,VSUCBPTR(,@03)                                  0470
         L     @03,USERUCB(,@03)                                   0470
         ST    @03,EXOUCB(,@10)                                    0470
*     END;                          /*                       @Y30LB35*/
*                                                                  0471
*   /*****************************************************************/
*   /*                                                               */
*   /* IF USYSINFO WAS SUCCESSFULLY PERFORMED, THE           @Y30LB35*/
*   /* COMPLETION OF UEXCP (OPEN) ARGLIST IS DONE            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0472
*                                   /*                       @Y30LB35*/
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00458 LH    @10,TESTRC                                          0472
         LTR   @10,@10                                             0472
         BNZ   @RF00472                                            0472
*     DO;                           /*                       @Y30LB35*/
*       IOXPTR=''B;                 /*                       @Y30LB35*/
         SLR   @10,@10                                             0474
         ST    @10,IOXPTR                                          0474
*       EXODDN=ADDR(VSDDNAME);      /*                       @Y30LB35*/
         LA    @10,EXOPARM                                         0475
         L     @03,@PC00001+8                                      0475
         LA    @15,VSDDNAME(,@03)                                  0475
         ST    @15,EXODDN(,@10)                                    0475
*       EXOCTLBK=ADDR(IOXPTR);      /*                       @Y30LB35*/
         LA    @15,IOXPTR                                          0476
         ST    @15,EXOCTLBK(,@10)                                  0476
*       EXOLAB=ON;                  /*                       @Y30LB35*/
*                                                                  0477
         OI    EXOLAB(@10),B'01000000'                             0477
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE CALLER HAS SUPPLIED THE VOL SER,           @Y30LB35*/
*       /* IT WILL BE PASSED TO UEXCP TO USE IN AN           @Y30LB35*/
*       /* OPEN TYPE=J.                                      @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0478
*       IF VSVOLUME^=NULLVAL        /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         CLC   VSVOLUME(6,@03),NULLVAL                             0478
         BE    @RF00478                                            0478
*         EXOVSN=ADDR(VSVOLUME);    /*                       @Y30LB35*/
*                                                                  0479
         LA    @03,VSVOLUME(,@03)                                  0479
         ST    @03,EXOVSN(,@10)                                    0479
*       /*************************************************************/
*       /*                                                           */
*       /* CALL IDCIO05 TO PERFORM AN OPEN ON THE VTOC.      @Y30LB35*/
*       /* IT SHOULD BE NOTED THAT THE MODESET FUNCTION      @Y30LB35*/
*       /* WILL BE USED BY IDCIO05 TO MODIFY THE DEB TO      @Y30LB35*/
*       /* ALLOW ACCESS TO THE CYL 0 TRACK 0 RECORD 3.       @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0480
*       CALL IDCIO050(GDTTBL,OPEN,EXOARG);/*                 @Y30LB35*/
@RF00478 L     @10,@PC00001                                        0480
         ST    @10,@AL00001                                        0480
         LA    @03,OPEN                                            0480
         ST    @03,@AL00001+4                                      0480
         LA    @03,EXOPARM                                         0480
         ST    @03,@AL00001+8                                      0480
         MVI   @AL00001+8,X'80'                                    0480
         L     @15,GDTEXP(,@10)                                    0480
         LA    @01,@AL00001                                        0480
         BALR  @14,@15                                             0480
*       RESPECIFY                                                  0481
*         RTNREG RSTD;                                             0481
*       TESTRC=RTNREG;                                             0482
         STH   RTNREG,TESTRC                                       0482
*       RESPECIFY                                                  0483
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0484
*   /*****************************************************************/
*   /*                                                               */
*   /* AFTER THE OPEN HAS BEEN PERFORMED, A RESERVE          @Y30LB35*/
*   /* CAN NOW BE PERFORMED ALLOWING EXCLUSIVE USE           @Y30LB35*/
*   /* OF THE VOLUME PROVIDED THE CALLER HAS                 @Y30LB35*/
*   /* REQUESTED IT.                                         @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*   IF VS2RES=ON&TESTRC=0           /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00472 L     @10,@PC00001+8                                      0485
         TM    VS2RES(@10),B'10000000'                             0485
         BNO   @RF00485                                            0485
         SLR   @03,@03                                             0485
         CH    @03,TESTRC                                          0485
         BNE   @RF00485                                            0485
*     DO;                           /*                       @Y30LB35*/
*                                                                  0486
*       /*************************************************************/
*       /*                                                           */
*       /* BECAUSE THE UCB ADDRESS IS REQUIRED TO ISSUE      @Y30LB35*/
*       /* URESERVE, PROCESSING CANNOT CONTINUE BECAUSE      @Y30LB35*/
*       /* CALLER HAS INJECTED A PROGRAMMING ERROR BY        @Y30LB35*/
*       /* NOT PROVIDING FOUR BYTE AREA FOR THE RETURN       @Y30LB35*/
*       /* OF THE UCB POINTER.                               @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0487
*       IF VSUCBPTR=NULLPTR         /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         C     @03,VSUCBPTR(,@10)                                  0487
         BNE   @RF00487                                            0487
*         DO;                                                      0488
*           RESPECIFY                                              0489
*            (REG13,                                               0489
*             REG14,                                               0489
*             REG15) RSTD;                                         0489
*           REG15=40;                                              0490
         LA    REG15,40                                            0490
*           REG14=GDTABT;                                          0491
         L     @10,@PC00001                                        0491
         L     REG14,GDTABT(,@10)                                  0491
*           REG13=GDTABH;                                          0492
         L     REG13,GDTABH(,@10)                                  0492
*           GEN(BR    REG14);                                      0493
         BR    REG14
*           RESPECIFY                                              0494
*            (REG13,                                               0494
*             REG14,                                               0494
*             REG15) UNRSTD;                                       0494
*         END;                      /*                       @Y30LB35*/
*                                                                  0495
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE URESERVE PARMLIST                      @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0496
*       UCBADDR=USERUCB;            /*                       @Y30LB35*/
@RF00487 L     @10,@PC00001+8                                      0496
         L     @03,VSUCBPTR(,@10)                                  0496
         L     @03,USERUCB(,@03)                                   0496
         ST    @03,UCBADDR                                         0496
*       QNAME=AMSQNAME;             /*                       @Y30LB35*/
         MVC   QNAME(8),AMSQNAME                                   0497
*       RVOLSER=VSVOLUME;           /*                       @Y30LB35*/
         MVC   RVOLSER(6),VSVOLUME(@10)                            0498
*       RLENGTH=LENGTH(RVOLSER)+LENGTH(RQUAL);/*             @ZA13060*/
*                                                                  0499
         MVI   RLENGTH,X'16'                                       0499
*       /*************************************************************/
*       /*                                                           */
*       /* DEPENDING ON THE VOLUME BEING A PHYSICAL          @Y30LB35*/
*       /* 3330 OR NOT THE RNAME WILL BE                     @Y30LB35*/
*       /* QUALIFIED .REAL.RESERVE OR .VIRTUAL.RESERVE       @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0500
*       IF VS2REAL=ON               /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         TM    VS2REAL(@10),B'01000000'                            0500
         BNO   @RF00500                                            0500
*         RQUAL=REALQUAL;           /*                       @Y30LB35*/
         MVC   RQUAL(16),REALQUAL                                  0501
*       ELSE                        /*                       @Y30LB35*/
*         RQUAL=VIRTQUAL;           /*                       @Y30LB35*/
*                                                                  0502
         B     @RC00500                                            0502
@RF00500 MVC   RQUAL(16),VIRTQUAL                                  0502
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE THE URESERVE REQUEST AND SET WAIT           @ZA05121*/
*       /* OPTION BECAUSE THERE SHOULD NOT BE ANOTHER        @Y30LB35*/
*       /* TASK REQUIRING THE RESOURCE.                      @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0503
*       CALL IDCSARV0(GDTTBL,EXCL,WAIT,UCBADDR,QNAME,RNAME);/*     0503
*                                                            @ZA05121*/
@RC00500 L     @10,@PC00001                                        0503
         ST    @10,@AL00001                                        0503
         LA    @03,EXCL                                            0503
         ST    @03,@AL00001+4                                      0503
         LA    @03,WAIT                                            0503
         ST    @03,@AL00001+8                                      0503
         LA    @03,UCBADDR                                         0503
         ST    @03,@AL00001+12                                     0503
         LA    @03,QNAME                                           0503
         ST    @03,@AL00001+16                                     0503
         LA    @03,RNAME                                           0503
         ST    @03,@AL00001+20                                     0503
         MVI   @AL00001+20,X'80'                                   0503
         L     @15,GDTRSV(,@10)                                    0503
         LA    @01,@AL00001                                        0503
         BALR  @14,@15                                             0503
*       RESPECIFY                                                  0504
*         RTNREG RSTD;                                             0504
*       TESTRC=RTNREG;                                             0505
         STH   RTNREG,TESTRC                                       0505
*       RESPECIFY                                                  0506
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0508
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW ALL PREPARATIONS HAVE BEEN MADE, THE GET          @Y30LB35*/
*   /* CAN BE REQUESTED OF IDCIO05 VIA UEXCP MACRO.          @Y30LB35*/
*   /* THE RETURN CODE MAY NOT BE ZERO IF OPEN,              @Y30LB35*/
*   /* USYSINFO, OR URESERVE WAS UNSUCCESSFUL.               @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0508
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00485 LH    @10,TESTRC                                          0508
         LTR   @10,@10                                             0508
         BNZ   @RF00508                                            0508
*     DO;                           /*                       @Y30LB35*/
*                                                                  0509
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE THE UEXCP (GET) PARMS (EXGARG)         @Y30LB35*/
*       /* TO READ KEY AND DATA OF CYL 0 TRK 0 RECORD 3      @Y30LB35*/
*       /* WHICH IS THE VOLUME LABEL RECORD                  @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0510
*       EXGARG=''B;                 /*                       @Y30LB35*/
         LA    @10,EXGPARM                                         0510
         XC    EXGARG(32,@10),EXGARG(@10)                          0510
*       EXGCTLBK=IOXPTR;            /*                       @Y30LB35*/
         L     @03,IOXPTR                                          0511
         ST    @03,EXGCTLBK(,@10)                                  0511
*       EXGCCHH2=ADDR(VOLCCHHR);    /*                       @Y30LB35*/
         LA    @03,VOLCCHHR                                        0512
         ST    @03,EXGCCHH2(,@10)                                  0512
*       EXGRECNO=ONE;               /*                       @Y30LB35*/
         LH    @03,ONE                                             0513
         ST    @03,EXGRECNO(,@10)                                  0513
*       EXGDATAP=ADDR(VOLLABEL);    /*                       @Y30LB35*/
         LA    @03,LABELREC                                        0514
         ST    @03,EXGDATAP(,@10)                                  0514
*       EXGKEYLN=LENGTH(VOLKEY);    /*                       @Y30LB35*/
         MVI   EXGKEYLN(@10),X'04'                                 0515
*       EXGDATAL=LENGTH(VOLLABEL)-LENGTH(VOLKEY);                  0516
         MVC   EXGDATAL(2,@10),@CH01346                            0516
*       CALL IDCIO050(GDTTBL,GET,EXGARG);/*                  @Y30LB35*/
         L     @03,@PC00001                                        0517
         ST    @03,@AL00001                                        0517
         LA    @15,GET                                             0517
         ST    @15,@AL00001+4                                      0517
         ST    @10,@AL00001+8                                      0517
         MVI   @AL00001+8,X'80'                                    0517
         L     @15,GDTEXP(,@03)                                    0517
         LA    @01,@AL00001                                        0517
         BALR  @14,@15                                             0517
*       RESPECIFY                                                  0518
*         RTNREG RSTD;                                             0518
*       TESTRC=RTNREG;                                             0519
         STH   RTNREG,TESTRC                                       0519
*       RESPECIFY                                                  0520
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0522
*   /*****************************************************************/
*   /*                                                               */
*   /* PROVIDED THE READ OF THE VOLUME RECORD WAS            @Y30LB35*/
*   /* SUCCESSFUL, THE REQUESTED FIELDS CAN NOW              @Y30LB35*/
*   /* BE UPDATED FOR THE WRITE BACK OPERATION               @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0522
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00508 LH    @10,TESTRC                                          0522
         LTR   @10,@10                                             0522
         BNZ   @RF00522                                            0522
*     DO;                           /*                       @Y30LB35*/
*                                                                  0523
*       /*************************************************************/
*       /*                                                           */
*       /* IF CALLER WANTS VOLSER, IT IS MOVED IN.           @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0524
*       IF VSVOLSER=ON              /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         L     @10,@PC00001+8                                      0524
         TM    VSVOLSER(@10),B'01000000'                           0524
         BNO   @RF00524                                            0524
*         VOLSERNO=USERLAB;         /*                       @Y30LB35*/
*                                                                  0525
         LA    @03,LABELREC                                        0525
         L     @10,VSVOLPTR(,@10)                                  0525
         MVC   VOLSERNO(6,@03),USERLAB(@10)                        0525
*       /*************************************************************/
*       /*                                                           */
*       /* IF CALLER WANTS OWNER, IT IS MOVED IN.            @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0526
*       IF VSOWNER=ON               /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
@RF00524 L     @10,@PC00001+8                                      0526
         TM    VSOWNER(@10),B'10000000'                            0526
         BNO   @RF00526                                            0526
*         VOLOWNER=USEROWN;         /*                       @Y30LB35*/
         LA    @03,LABELREC                                        0527
         L     @10,VSOWNPTR(,@10)                                  0527
         MVC   VOLOWNER(10,@03),USEROWN(@10)                       0527
*     END;                          /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0528
@RF00526 DS    0H                                                  0529
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE UEXCP (PUT) PARMS (EXPARG)             @Y30LB35*/
*   /* TO WRITE KEY & DATA OF CYL 0 TRK 0 RECORD 3           @Y30LB35*/
*   /* WHICH IS THE VOLUME LABEL RECORD                      @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0529
*   IF TESTRC=0                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00522 LH    @10,TESTRC                                          0529
         LTR   @10,@10                                             0529
         BNZ   @RF00529                                            0529
*     DO;                           /*                       @Y30LB35*/
*       EXPARG=''B;                 /*                       @Y30LB35*/
         LA    @10,EXPPARM                                         0531
         XC    EXPARG(20,@10),EXPARG(@10)                          0531
*       EXPCTLBK=IOXPTR;            /*                       @Y30LB35*/
         L     @03,IOXPTR                                          0532
         ST    @03,EXPCTLBK(,@10)                                  0532
*       EXPCCHHR=ADDR(VOLCCHHR);    /*                       @Y30LB35*/
         LA    @03,VOLCCHHR                                        0533
         ST    @03,EXPCCHHR(,@10)                                  0533
*       EXPDATA=ADDR(EXDATA);       /*                       @Y30LB35*/
         LA    @03,EXDATA                                          0534
         ST    @03,EXPDATA(,@10)                                   0534
*       EXPRECNO=ONE;               /*                       @Y30LB35*/
         LH    @15,ONE                                             0535
         ST    @15,EXPRECNO(,@03)                                  0535
*       EXPDATAP(1)=ADDR(VOLLABEL); /*                       @Y30LB35*/
         LA    @15,LABELREC                                        0536
         ST    @15,EXPDATAP(,@03)                                  0536
*       EXPKEYLN(1)=LENGTH(VOLKEY); /*                       @Y30LB35*/
         MVI   EXPKEYLN(@03),X'04'                                 0537
*       EXPDATAL(1)=LENGTH(VOLLABEL)-LENGTH(VOLKEY);               0538
         MVC   EXPDATAL(2,@03),@CH01346                            0538
*       CALL IDCIO050(GDTTBL,PUT,EXPARG);/*                  @Y30LB35*/
         L     @03,@PC00001                                        0539
         ST    @03,@AL00001                                        0539
         LA    @15,PUT                                             0539
         ST    @15,@AL00001+4                                      0539
         ST    @10,@AL00001+8                                      0539
         MVI   @AL00001+8,X'80'                                    0539
         L     @15,GDTEXP(,@03)                                    0539
         LA    @01,@AL00001                                        0539
         BALR  @14,@15                                             0539
*       RESPECIFY                                                  0540
*         RTNREG RSTD;                                             0540
*       TESTRC=RTNREG;                                             0541
         STH   RTNREG,TESTRC                                       0541
*       RESPECIFY                                                  0542
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
*     END;                          /*                       @Y30LB35*/
*                                                                  0544
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW CLEAN UP BEGINS. THE IOCTLBK POINTER              @Y30LB35*/
*   /* FIELD IS TESTED TO DETERMINE WHETHER THE              @Y30LB35*/
*   /* UEXCP (CLOSE) REQUEST IS NEEDED.                      @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0544
*   IF IOXPTR^=NULLPTR              /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RF00529 L     @10,IOXPTR                                          0544
         LTR   @10,@10                                             0544
         BZ    @RF00544                                            0544
*     DO;                           /*                       @Y30LB35*/
*                                                                  0545
*       /*************************************************************/
*       /*                                                           */
*       /* THE ONLY PARMETER REQUIRED IS THE IOCTLBK         @Y30LB35*/
*       /* POINTER AS ALL NECESSARY INFORMATION NEEDED       @Y30LB35*/
*       /* TO PERFORM THE CLOSE IS IN THE IOCTLBK.           @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0546
*       CALL IDCIO050(GDTTBL,CLOSE,IOXPTR);/*                @Y30LB35*/
*                                                                  0546
         L     @10,@PC00001                                        0546
         ST    @10,@AL00001                                        0546
         LA    @03,CLOSE                                           0546
         ST    @03,@AL00001+4                                      0546
         LA    @03,IOXPTR                                          0546
         ST    @03,@AL00001+8                                      0546
         MVI   @AL00001+8,X'80'                                    0546
         L     @15,GDTEXP(,@10)                                    0546
         LA    @01,@AL00001                                        0546
         BALR  @14,@15                                             0546
*       /*************************************************************/
*       /*                                                           */
*       /* AT THIS POINT THE DETERMINATION IS MADE AS        @Y30LB35*/
*       /* TO WHAT RETURN CODE IS IN ORDER.                  @Y30LB35*/
*       /* IF THE SAVED RETURN CODE THAT HAD BEEN SAVED      @Y30LB35*/
*       /* BEFORE THE CLOSE IS NON-ZERO THEN THE RCFAIL      @Y30LB35*/
*       /* IS RETURNED BECAUSE THIS MEANS FOR SOME           @Y30LB35*/
*       /* REASON THE REQUESTED INFORMATION CAN NOT BE       @Y30LB35*/
*       /* UPDATED FOR CALLER. IF THE RETURN CODE IS 0       @Y30LB35*/
*       /* BUT THE RETURN CODE FROM UEXCP (CLOSE) IS         @Y30LB35*/
*       /* NOT ZERO, THE ERROR CODE CLOSEBAD(8) BECAUSE      @Y30LB35*/
*       /* THE REQUESTED INFORMATION IS BEING UPDATED        @Y30LB35*/
*       /* BUT THERE WAS A PROBLEM ENCOUNTED DURING          @Y30LB35*/
*       /* CLOSE. IF BOTH ARE ZERO, RCOK (0) IS              @Y30LB35*/
*       /* RETURNED.                                         @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0547
*       RESPECIFY                                                  0547
*         RTNREG RSTD;              /*                       @Y30LB35*/
*       IF TESTRC^=0                /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         LH    @14,TESTRC                                          0548
         LTR   @14,@14                                             0548
         BZ    @RF00548                                            0548
*         TESTRC=4;                 /*                       @Y30LB35*/
         MVC   TESTRC(2),@CH00041                                  0549
*       ELSE                        /*                       @Y30LB35*/
*         IF RTNREG^=0              /*                       @Y30LB35*/
*           THEN                    /*                       @Y30LB35*/
         B     @RC00548                                            0550
@RF00548 LTR   RTNREG,RTNREG                                       0550
         BZ    @RF00550                                            0550
*           TESTRC=CLOSEBAD;        /*                       @Y30LB35*/
         LH    @14,CLOSEBAD                                        0551
         STH   @14,TESTRC                                          0551
*       RESPECIFY                                                  0552
*         RTNREG UNRSTD;            /*                       @Y30LB35*/
@RF00550 DS    0H                                                  0552
@RC00548 DS    0H                                                  0553
*     END;                          /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0553
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE IOCTLBK POINTER IS NULL, THERE IS              @Y30LB35*/
*   /* NO WAY THE INFORMATION CAN BE RETURNED AND            @Y30LB35*/
*   /* ERROR CODE RCFAIL (4) IS RETURNED.                    @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*   ELSE                            /*                       @Y30LB35*/
*     TESTRC=4;                     /*                       @Y30LB35*/
         B     @RC00544                                            0554
@RF00544 MVC   TESTRC(2),@CH00041                                  0554
*                                                                  0555
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW COMES THE TIME TO DETERMINE IF AN MSG             @Y30LB35*/
*   /* IS IN ORDER. IF THE RETURN CODE HAS BEEN SET          @Y30LB35*/
*   /* TO RCFAIL(4), THE PROPER MESSAGE MUST NOW             @Y30LB35*/
*   /* BE ISSUED TO THE USERS SYSPRINT LISTING.              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0555
*   IF TESTRC=4                     /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
@RC00544 CLC   TESTRC(2),@CH00041                                  0555
         BNE   @RF00555                                            0555
*     DO;                           /*                       @Y30LB35*/
*                                                                  0556
*       /*************************************************************/
*       /*                                                           */
*       /* SETUP THE COMMON PART OF DARGLIST FOR ANY         @Y30LB35*/
*       /* MESSAGE.                                          @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0557
*       DARGLIST=''B;               /*                       @Y30LB35*/
         L     @10,DDSTRU                                          0557
         XC    DARGLIST(20,@10),DARGLIST(@10)                      0557
*       DARGSMOD=COMMSGS;           /*                       @Y30LB35*/
         MVC   DARGSMOD(3,@10),@CC01039                            0558
*       DARGDBP=ADDR(VSVOLUME);     /*                       @Y30LB35*/
         L     @03,@PC00001+8                                      0559
         LA    @15,VSVOLUME(,@03)                                  0559
         ST    @15,DARGDBP(,@10)                                   0559
*       DARGILP=LENGTH(VSVOLUME);   /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0560
         MVC   DARGILP(2,@10),@CH00154                             0560
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF BOTH VOLSER FIELD AND OWNER          @Y30LB35*/
*       /* FIELD WAS REQUESTED TO BE UPDATED.                @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0561
*       IF VSVOLSER=ON&VSOWNER=ON   /*                       @Y30LB35*/
*         THEN                      /*                       @Y30LB35*/
         TM    VSVOLSER(@03),B'11000000'                           0561
         BNO   @RF00561                                            0561
*         DO;                       /*                       @Y30LB35*/
*                                                                  0562
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE IF CALLER WAS WORKING ON            @Y30LB35*/
*           /* "TO VOLUME".                                  @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0563
*           IF VS2TOV=ON            /*                       @Y30LB35*/
*             THEN                  /*                       @Y30LB35*/
*                                                                  0563
         TM    VS2TOV(@03),B'10000000'                             0563
         BNO   @RF00563                                            0563
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP TO ISSUE IDC3070I STATING:           @Y30LB35*/
*             /* "IDC3070I ** SERIAL,OWNER NOT UPDATED IN    @Y30LB35*/
*             /* VOLUME LABEL TO VOLUME"                     @Y30LB35*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0564
*             DARGSENT=MSG3070F;    /*                       @Y30LB35*/
         MVI   DARGSENT(@10),X'35'                                 0564
*           ELSE                    /*                       @Y30LB35*/
*                                                                  0565
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP TO ISSUE IDC3070I STATING:           @Y30LB35*/
*             /* "IDC3070I ** SERIAL,OWNER NOT UPDATED IN    @Y30LB35*/
*             /* VOLUME LABEL"                               @Y30LB35*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0565
*             DARGSENT=MSG3070E;    /*                       @Y30LB35*/
         B     @RC00563                                            0565
@RF00563 L     @10,DDSTRU                                          0565
         MVI   DARGSENT(@10),X'34'                                 0565
*         END;                      /*                       @Y30LB35*/
*                                                                  0566
*       /*************************************************************/
*       /*                                                           */
*       /* IF BOTH VOLSER AND OWNER HAVE NOT BEEN            @Y30LB35*/
*       /* REQUESTED, THEN ONE OR THE OTHER WAS              @Y30LB35*/
*       /* SPECIFIED AND A DETERMINATION IS NOW MADE.        @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0567
*       ELSE                        /*                       @Y30LB35*/
*                                                                  0567
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE VSVOLSER BIT IS SET, THEN                @Y30LB35*/
*         /* THE VSOWNER MUST BE OFF.                        @Y30LB35*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0567
*         IF VSVOLSER=ON            /*                       @Y30LB35*/
*           THEN                    /*                       @Y30LB35*/
         B     @RC00561                                            0567
@RF00561 L     @10,@PC00001+8                                      0567
         TM    VSVOLSER(@10),B'01000000'                           0567
         BNO   @RF00567                                            0567
*           DO;                     /*                       @Y30LB35*/
*                                                                  0568
*             /*******************************************************/
*             /*                                                     */
*             /* NOW A DETERMINATION WHETHER CALLER IS       @Y30LB35*/
*             /* WORKING ON THE TO VOLUME IS MADE.           @Y30LB35*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0569
*             IF VS2TOV=ON          /*                       @Y30LB35*/
*               THEN                /*                       @Y30LB35*/
*                                                                  0569
         TM    VS2TOV(@10),B'10000000'                             0569
         BNO   @RF00569                                            0569
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP TO ISSUE IDC3070I STATING:         @Y30LB35*/
*               /* "IDC3070I ** SERIAL NOT UPDATED IN VOLUME @Y30LB35*/
*               /* LABEL TO VOLUME"                          @Y30LB35*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0570
*               DARGSENT=MSG3070B;  /*                       @Y30LB35*/
         L     @10,DDSTRU                                          0570
         MVI   DARGSENT(@10),X'25'                                 0570
*             ELSE                  /*                       @Y30LB35*/
*                                                                  0571
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP TO ISSUE IDC3070I STATING:         @Y30LB35*/
*               /* "IDC3070I ** SERIAL NOT UPDATED IN VOLUME @Y30LB35*/
*               /* LABEL"                                    @Y30LB35*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0571
*               DARGSENT=MSG3070A;  /*                       @Y30LB35*/
         B     @RC00569                                            0571
@RF00569 L     @10,DDSTRU                                          0571
         MVI   DARGSENT(@10),X'24'                                 0571
*           END;                    /*                       @Y30LB35*/
*                                                                  0573
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE REACH HERE WITHOUT FINDING BOTH OR          @Y30LB35*/
*       /* VSVOLSER SET THEN VSOWNER IS THE ONLY BIT         @Y30LB35*/
*       /* REMAINING.                                        @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0573
*         ELSE                      /*                       @Y30LB35*/
*                                                                  0573
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE VSVOLSER BIT IS OFF, THEN              @Y30LB35*/
*           /* THE VSOWNER MUST BE ON.                       @Y30LB35*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0573
*           IF VSVOLSER=OFF         /*                       @Y30LB35*/
*             THEN                  /*                       @Y30LB35*/
         B     @RC00567                                            0573
@RF00567 L     @10,@PC00001+8                                      0573
         TM    VSVOLSER(@10),B'01000000'                           0573
         BNZ   @RF00573                                            0573
*             DO;                   /*                       @Y30LB35*/
*                                                                  0574
*               /*****************************************************/
*               /*                                                   */
*               /* WE DETERMINE IF THE TO VOLUME IS BEING    @Y30LB35*/
*               /* WORKED ON.                                @Y30LB35*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0575
*               IF VS2TOV=ON        /*                       @Y30LB35*/
*                 THEN              /*                       @Y30LB35*/
*                                                                  0575
         TM    VS2TOV(@10),B'10000000'                             0575
         BNO   @RF00575                                            0575
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET UP TO ISSUE IDC3070I STATING:       @Y30LB35*/
*                 /* "IDC3070I ** OWNER NOT UPDATED IN VOLUME        */
*                 /*                                         @Y30LB35*/
*                 /* LABEL TO VOLUME"                        @Y30LB35*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0576
*                 DARGSENT=MSG3070D;/*                       @Y30LB35*/
         L     @10,DDSTRU                                          0576
         MVI   DARGSENT(@10),X'27'                                 0576
*               ELSE                /*                       @Y30LB35*/
*                                                                  0577
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET UP TO ISSUE IDC3070I STATING:       @Y30LB35*/
*                 /* "IDC3070I ** OWNER NOT UPDATED IN VOLUME        */
*                 /*                                         @Y30LB35*/
*                 /* LABEL"                                  @Y30LB35*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0577
*                 DARGSENT=MSG3070C;/*                       @Y30LB35*/
         B     @RC00575                                            0577
@RF00575 L     @10,DDSTRU                                          0577
         MVI   DARGSENT(@10),X'26'                                 0577
*             END;                  /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0578
@RC00575 DS    0H                                                  0579
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE ERROR MESSAGE TO USERS SYSPRINT             @Y30LB35*/
*       /* LISTING BY CALLING AMSTP01.                       @Y30LB35*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0579
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB35
*                                                            @Y30LB35*/
@RF00573 DS    0H                                                  0579
@RC00567 DS    0H                                                  0579
@RC00561 L     @10,@PC00001                                        0579
         ST    @10,@AL00001                                        0579
         LA    @03,@CF00114                                        0579
         ST    @03,@AL00001+4                                      0579
         LA    @03,DDSTRU                                          0579
         ST    @03,@AL00001+8                                      0579
         MVI   @AL00001+8,X'80'                                    0579
         L     @15,GDTPRT(,@10)                                    0579
         LA    @01,@AL00001                                        0579
         BALR  @14,@15                                             0579
*     END;                          /*                       @Y30LB35
*                                                            @Y30LB35*/
*   RETURN CODE(TESTRC);            /*                       @Y30LB35
*                                                            @Y30LB35
*                                                            @Y30LB35*/
@RF00555 LH    @15,TESTRC                                          0581
         L     @14,@SA00004                                        0581
         LM    @00,@12,@SA00004+8                                  0581
         BR    @14                                                 0581
*   END PUTLAB;                     /*                       @Y30LB35*/
*                                                                  0583
*/********************************************************************/
*/*                                                          @Y30LB35*/
*/* PROCEDURE NAME - FMTTRK0                                 @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* FUNCTION -  THIS ROUTINE PREPARES THE THREE RECORDS THAT @Y30LB35*/
*/*             ARE WRITTEN TO CYL 0 TRK 0.                  @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* INPUT -     VS2AGL (ARGUMENTS PASSED AS INPUT)           @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* OUTPUT -    REGISTER 15 = 0, SUCCESSFUL                  @Y30LB35*/
*/*                                                          @Y30LB35*/
*/********************************************************************/
*                                                                  0583
*                                   /*                       @Y30LB35*/
*FMTTRK0:                                                          0583
*   PROC;                           /*                       @Y30LB35*/
*                                                                  0583
FMTTRK0  STM   @14,@12,12(@13)                                     0583
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARES                                        @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0584
*                                   /*                        Y30LB35*/
*                                                                  0584
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DCL STRUCTURE IS THE STATIC             @Y30LB35*/
*   /* IPL RECORD ONE WHICH WILL BE WRITTEN TO               @Y30LB35*/
*   /* TO CYL 0 TRACK 0 RECORD 1.                            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0584
*   DCL                                                            0584
*     1 RECORD1 STATIC BDY(WORD),   /*                       @Y30LB35*/
*      2 REC1KEY CHAR(4) INIT('IPL1'),/*                     @Y30LB35
*                                      KEY VALUE IPL REC 1   @Y30LB35*/
*      2 * CHAR(8) INIT('000600000000000F'X),/*              @Y30LB35
*                                      WAIT STATE PSW        @Y30LB35*/
*      2 * CHAR(8) INIT('0300000000000001'X),/*              @Y30LB35
*                                      NOP CCW               @Y30LB35*/
*      2 * CHAR(8) INIT('0000000000000000'X);/*              @Y30LB35
*                                      DUMMY CCW             @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0584
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DCL STRUCTURE IS THE STATIC             @Y30LB35*/
*   /* IPL RECORD TWO WHICH WILL BE WRITTEN TO               @Y30LB35*/
*   /* TO CYL 0 TRACK 0 RECORD 2.                            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0585
*   DCL                                                            0585
*     1 RECORD2 STATIC BDY(WORD),   /*                       @Y30LB35*/
*      2 REC2KEY CHAR(4) INIT('IPL2'),/*                     @Y30LB35
*                                      KEY VALUE IPL REC 2   @Y30LB35*/
*      2 * CHAR(8) INIT('07003AB840000006'X),/*              @Y30LB35
*                                      SEEK TO IPL TRACK     @Y30LB35*/
*      2 * CHAR(8) INIT('31003ABE40000005'X),/*              @Y30LB35
*                                      SEARCH FOR IPL REC    @Y30LB35*/
*      2 * CHAR(8) INIT('08003AA000000001'X),/*              @Y30LB35
*                                      TIC BACK TO SEARCH    @Y30LB35*/
*      2 * CHAR(8) INIT('0600000020000E29'X),/*              @Y30LB35
*                                      READ IPL REC 3        @Y30LB35*/
*      2 * CHAR(112),               /*                       @Y30LB35*/
*       3 *(112) CHAR(1) INIT((112)'00'X);/*                 @Y30LB35
*                                      DUMMY FILLERS         @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0585
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DCL STRUCTURE IS THE STATIC             @Y30LB35*/
*   /* LABEL RECORD WHICH WILL BE WRITTEN TO                 @Y30LB35*/
*   /* TO CYL 0 TRACK 0 RECORD 3.                            @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0586
*   DCL                                                            0586
*     1 RECORD3 STATIC BDY(WORD),   /*                       @Y30LB35*/
*      2 * CHAR(4) INIT('VOL1'),    /*                       @Y30LB35
*                                      KEY VALUE OF RECORD   @Y30LB35*/
*      2 * CHAR(3) INIT('VOL'),     /*                       @Y30LB35
*                                      VOL LABEL ID          @Y30LB35*/
*      2 * CHAR(1) INIT('1'),       /*                       @Y30LB35
*                                      VOL NUMBER ALWAYS 1   @Y30LB35*/
*      2 * CHAR(6),                 /*                       @Y30LB35
*                                      VOLSER FIELD          @Y30LB35*/
*      2 * CHAR(1) INIT('0'),       /*                       @Y30LB35
*                                      VOL SECURITY          @Y30LB35*/
*      2 * CHAR(5),                 /* TTR0 VTOC             @ZDR2057*/
*      2 * CHAR(25) INIT('                         '),/*     @Y30LB35
*                                      RESERVED              @Y30LB35*/
*      2 * CHAR(10),                /*                       @Y30LB35
*                                      OWNER FIELD           @Y30LB35*/
*      2 * CHAR(29),                /*                       @Y30LB35*/
*       3 *(29) CHAR(1) INIT((29)' ');/*                     @Y30LB35
*                                      RESERVED              @Y30LB35
*                                                            @Y30LB35*/
*   DCL                                                            0587
*     VOLSER CHAR(6) BASED(VSVOLPTR);/*                      @Y30LB35
*                                      DEF USER VOLSER FIELD @Y30LB35*/
*   DCL                                                            0588
*     OWNER CHAR(10) BASED(VSOWNPTR);/*                      @Y30LB35
*                                      DEF USERS OWNER FIELD @Y30LB35*/
*   DCL                                                            0589
*     VTOCADDR CHAR(5) BASED(VSVTOCPT);/* USER SUPPLIED VTOC @ZDR2057*/
*   DCL                                                            0590
*     TTR0 CHAR(5) INIT('0000000101'X);/* DEFAULT TTR0 VTOC  @ZDR2057*/
*                                   /*                       @Y30LB35*/
*                                                                  0591
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TRACE POINT 'VSF0' IN TRACE TABLE              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0591
*   OLDERID2=NEWERID2;                                             0591
         L     @10,@PC00001                                        0591
         L     @10,GDTTR2(,@10)                                    0591
         MVC   @TS00001(95),NEWERID2(@10)                          0591
         MVC   OLDERID2(95,@10),@TS00001                           0591
*   NEWID2='VSF0';                  /*                       @Y30LB35*/
*                                                                  0592
         MVC   NEWID2(4,@10),@CC01218                              0592
*   /*****************************************************************/
*   /*                                                               */
*   /* INITALIZE UEXCP (PUT) ARGUMENT LIST (EXPARG)          @Y30LB35*/
*   /* TO WRITE THREE RECORDS ONTO CYL 0 TRACK 0             @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0593
*   EXPARG=''B;                     /*                       @Y30LB35*/
         LA    @10,EXPPARM                                         0593
         XC    EXPARG(20,@10),EXPARG(@10)                          0593
*   EXPCTLBK=IOXPTR;                /*                       @Y30LB35*/
         L     @03,IOXPTR                                          0594
         ST    @03,EXPCTLBK(,@10)                                  0594
*   EXPDATA=ADDR(EXDATA);           /*                       @Y30LB35*/
         LA    @03,EXDATA                                          0595
         ST    @03,EXPDATA(,@10)                                   0595
*   EXPRECNO=THREE;                 /*                       @Y30LB35*/
         LH    @15,THREE                                           0596
         ST    @15,EXPRECNO(,@03)                                  0596
*   EXPCCHHR=ADDR(CCHH0);           /*                       @Y30LB35*/
*                                                                  0597
         LA    @15,CCHH0                                           0597
         ST    @15,EXPCCHHR(,@10)                                  0597
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP EXPDATAB ARRAY FOR UEXCP (PUT)                 @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0598
*   EXPDATAP(1)=ADDR(RECORD1);      /*                       @Y30LB35*/
         LA    @10,RECORD1                                         0598
         ST    @10,EXPDATAP(,@03)                                  0598
*   EXPKEYLN(1)=LENGTH(REC1KEY);    /*                       @Y30LB35*/
         MVI   EXPKEYLN(@03),X'04'                                 0599
*   EXPDATAL(1)=LENGTH(RECORD1)-LENGTH(REC1KEY);/*           @Y30LB35*/
         MVC   EXPDATAL(2,@03),@CH00308                            0600
*   EXPDATAP(2)=ADDR(RECORD2);      /*                       @Y30LB35*/
         LA    @10,RECORD2                                         0601
         ST    @10,EXPDATAP+8(,@03)                                0601
*   EXPKEYLN(2)=LENGTH(REC2KEY);    /*                       @Y30LB35*/
         MVI   EXPKEYLN+8(@03),X'04'                               0602
*   EXPDATAL(2)=LENGTH(RECORD2)-LENGTH(REC2KEY);/*           @Y30LB35*/
         MVC   EXPDATAL+8(2,@03),@CH01349                          0603
*   EXPDATAP(3)=ADDR(LABELREC);     /*                       @Y30LB35*/
         LA    @10,LABELREC                                        0604
         ST    @10,EXPDATAP+16(,@03)                               0604
*   EXPKEYLN(3)=LENGTH(VOLKEY);     /*                       @Y30LB35*/
         MVI   EXPKEYLN+16(@03),X'04'                              0605
*   EXPDATAL(3)=LENGTH(LABELREC)-LENGTH(VOLKEY);/*           @Y30LB35*/
*                                                                  0606
         MVC   EXPDATAL+16(2,@03),@CH01346                         0606
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE IN STATIC LABEL RECORD INTO DYNAMIC              @Y30LB35*/
*   /* STORAGE.                                              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0607
*   LABELREC=RECORD3;               /*                       @Y30LB35*/
*                                                                  0607
         MVC   LABELREC(84),RECORD3                                0607
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE IN THE CALLERS VOLSER.                           @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0608
*   VOLSERNO=VOLSER;                /*                       @ZDR2057*/
*                                                                  0608
         LA    @10,LABELREC                                        0608
         L     @03,@PC00001+8                                      0608
         L     @01,VSVOLPTR(,@03)                                  0608
         MVC   VOLSERNO(6,@10),VOLSER(@01)                         0608
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE IN THE CALLERS SUPPLIED OWNER ID.                @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*   VOLOWNER=OWNER;                 /*                       @ZDR2057*/
*                                                                  0609
         L     @01,VSOWNPTR(,@03)                                  0609
         MVC   VOLOWNER(10,@10),OWNER(@01)                         0609
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR REBUILDING THE VOLUME LABEL SET THE               @ZDR2057*/
*   /* USER SUPPLIED VTOC ADDRESS.                           @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0610
*   IF VSNOVTOC=ON THEN                                            0610
         TM    VSNOVTOC(@03),B'00100000'                           0610
         BNO   @RF00610                                            0610
*     VOLVTOC=VTOCADDR;             /*                       @ZDR2057*/
*                                                                  0611
         L     @03,VSVTOCPT(,@03)                                  0611
         MVC   VOLVTOC(5,@10),VTOCADDR(@03)                        0611
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE DEFAULT VTOC ADDRESS.                      @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0612
*   ELSE                                                           0612
*     VOLVTOC=TTR0;                 /*                       @ZDR2057*/
*                                                                  0612
         B     @RC00610                                            0612
@RF00610 LA    @10,LABELREC                                        0612
         MVC   VOLVTOC(5,@10),TTR0                                 0612
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTROL IS RETURNED TO INITVOLM WITH ZERO             @Y30LB35*/
*   /* RETURN CODE IN REGISTER 15.                           @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0613
*   RETURN CODE(0);                 /*                       @Y30LB35*/
@RC00610 SLR   @15,@15                                             0613
         L     @14,12(,@13)                                        0613
         LM    @00,@12,20(@13)                                     0613
         BR    @14                                                 0613
*   END FMTTRK0;                    /*                       @Y30LB35*/
*                                                                  0615
*/********************************************************************/
*/*                                                          @Y30LB35*/
*/* PROCEDURE NAME - FMTTRK1                                 @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* FUNCTION -  THIS ROUTINE PREPARES THE 39 RECORDS THAT    @Y30LB35*/
*/*             THAT ARE WRITTEN TO CYL 0 TRK 1.             @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* INPUT -     VS2AGL (ARGUMENTS PASSED AS INPUT)           @Y30LB35*/
*/*                                                          @Y30LB35*/
*/* OUTPUT -    REGISTER 15 = 0, SUCCESSFUL                  @Y30LB35*/
*/*                                                          @Y30LB35*/
*/********************************************************************/
*                                                                  0615
*                                   /*                       @Y30LB35*/
*FMTTRK1:                                                          0615
*   PROC;                           /*                       @Y30LB35*/
*                                                                  0615
FMTTRK1  STM   @14,@12,12(@13)                                     0615
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DCL STRUCTURES ARE THE DSCBS            @Y30LB35*/
*   /* USED TO CREATE THE VTOC.                              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0616
*/*      %INCLUDE SYSLIB(IECSDSL1)                                   */
*                                                                  0616
*   DCL                                                            0616
*     1 IECSDSF4 BASED(F4PTR),      /* FORMAT 4 DSCB - DESCRIBED     */
*      2 * CHAR(96);                /* IN THE FOLLOWING STRUCTURE    */
*   DCL                                                            0617
*     1 IECSDSL4 BASED(ADDR(IECSDSF4)),/* START OF THE FORMAT 4 DSCB */
*      2 DS4IDFMT CHAR(1),          /* FORMAT IDENTIFIER             */
*      2 DS4HPCHR CHAR(5),          /* HIGHEST ADDRESS OF A FORMAT 1
*                                      DSCB                          */
*      2 DS4DSREC CHAR(2),          /* NUMBER OF AVAILABLE DSCB'S    */
*      2 DS4HCCHH CHAR(4),          /* CCHH OF NEXT AVAILABLE      0617
*                                      ALTERNATE TRACK               */
*      2 DS4NOATK CHAR(2),          /* NUMBER OF REMAINING ALTERNATE
*                                      TRACKS                        */
*      2 DS4VTOCI CHAR(1),          /* VTOC INDICATORS               */
*      2 DS4NOEXT CHAR(1),          /* NUMBER OF EXTENTS IN VTOC     */
*      2 * CHAR(2),                 /* RESERVED                      */
*      2 DS4DEVCT CHAR(14),         /* DEVICE CONSTANTS              */
*       3 DS4DEVSZ CHAR(4),         /* DEVICE SIZE                   */
*       3 DS4DEVTK CHAR(2),         /* DEVICE TRACK LENGTH           */
*       3 DS4DEVOV CHAR(2),         /* KEYED RECORD OVERHEAD         */
*        4 DS4DEVI CHAR(1),         /* - NON-LAST KEYED RECORD     0617
*                                      OVERHEAD                      */
*        4 DS4DEVL CHAR(1),         /* - LAST KEYED RECORD OVERHEAD  */
*       3 DS4DEVK CHAR(1),          /* NON-KEYED RECORD OVERHEAD   0617
*                                      DIFFERENTIAL                  */
*       3 DS4DEVFG CHAR(1),         /* FLAG BYTE                     */
*       3 DS4DEVTL CHAR(2),         /* DEVICE TOLERANCE              */
*       3 DS4DEVDT CHAR(1),         /* NUMBER OF DSCB'S PER TRACK    */
*       3 DS4DEVDB CHAR(1),         /* NUMBER OF DIRECTORY BLOCKS PER
*                                      TRACK                         */
*      2 DS4AMTIM CHAR(8),          /* VSAM TIME STAMP               */
*      2 DS4AMCAT CHAR(3),          /* VSAM CATALOG INDICATOR        */
*       3 DS4VSIND BIT(8),          /* VSAM INDICATORS               */
*        4 DS4VSREF BIT(1),         /* A VSAM CATALOG REFERENCES THIS
*                                      VOLUME                        */
*        4 DS4VSBAD BIT(1),         /* VSAM DATA SETS ON VOLUME ARE
*                                      UNUSABLE                      */
*        4 * BIT(6),                /* RESERVED                      */
*       3 DS4VSCRA PTR(16) BDY(BYTE),/* RELATIVE TRACK LOCATION OF 0617
*                                      THE CRA                       */
*      2 DS4R2TIM CHAR(8),          /* VSAM VOLUME/CATALOG MATCH TIME
*                                      STAMP                         */
*      2 * CHAR(5),                 /* RESERVED                      */
*      2 DS4F6PTR CHAR(5),          /* POINTER TO FIRST FORMAT 6 DSCB*/
*      2 DS4VTOCE CHAR(10),         /* VTOC EXTENT DESCRIPTION       */
*      2 * CHAR(25),                /* RESERVED                      */
*      2 DS4END CHAR(0);            /* END OF THE FORMAT 4 DSCB      */
*   DCL                                                            0618
*     1 IECSDSF5 BASED(F5PTR),      /* FORMAT 5 DSCB - DESCRIBED     */
*      2 * CHAR(140);               /* IN THE FOLLOWING STRUCTURE    */
*   DCL                                                            0619
*     1 IECSDSL5 BASED(ADDR(IECSDSF5)),/* START OF THE FORMAT 5 DSCB */
*      2 DS5KEYID CHAR(4),          /* KEY IDENTIFIER                */
*      2 DS5AVEXT CHAR(5),          /* AVAILABLE EXTENT BYTES 1 - 2
*                                      RELATIVE TRACK ADDRESS OF THE
*                                      FIRST TRACK IN THE EXTENT   0619
*                                      BYTES 3 - 4 NUMBER OF UNUSED
*                                      CYLINDERS IN THE EXTENT BYTE 5
*                                      NUMBER OF ADDITIONAL UNUSED 0619
*                                      TRACKS                        */
*      2 DS5EXTAV CHAR(35),         /* SEVEN AVAILABLE EXTENTS       */
*      2 DS5FMTID CHAR(1),          /* FORMAT IDENTIFIER             */
*      2 DS5MAVET CHAR(90),         /* EIGHTEEN AVAILABLE EXTENTS    */
*      2 DS5PTRDS CHAR(5),          /* POINTER TO NEXT FORMAT 5 DSCB */
*      2 DS5END CHAR(0);            /* END OF THE FORMAT 5 DSCB      */
*   DCL                                                            0620
*     F5PTR PTR(31) BDY(WORD);      /* POINTER TO FMT 5 DSCB @Y30LB35*/
*   DCL                                                            0621
*     F4PTR PTR(31) BDY(WORD);      /* POINTER TO FMT 4 DSCB @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0621
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE STATIC PORTION OF THE                     @Y30LB35*/
*   /* FORMAT 4 DSCB.                                        @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*   DCL                                                            0622
*     1 FMT4 STATIC BDY(WORD),      /*                       @Y30LB35*/
*      2 * CHAR(44),                /*                       @Y30LB35*/
*       3 *(44) CHAR(1) INIT((44)'04'X),/*                   @Y30LB35
*                                      KEY FOR FMT 4 DSCB    @Y30LB35*/
*      2 * CHAR(1) INIT('F4'X),     /*                       @Y30LB35
*                                      ID OF FMT 4 DSCB      @Y30LB35*/
*      2 * CHAR(5) INIT('0000000103'X),/*                    @Y30LB35
*                                      LAST USED DSCB        @Y30LB35*/
*      2 * FIXED(15),               /*                       @Y30LB35
*                                      NUMBER DSCB           @Y30LB35*/
*      2 * CHAR(4) INIT('01940000'X),/*                      @Y30LB35
*                                      CCHH OF NEXT ALT TRK  @Y30LB35*/
*      2 * CHAR(2) INIT('0085'X),   /*                       @Y30LB35
*                                      NUMBER OF REMAIN ALT  @Y30LB35*/
*      2 * CHAR(1) INIT('00'X),     /*                       @Y30LB35
*                                      VTOC INDICATOR        @Y30LB35*/
*      2 * CHAR(1) INIT('01'X),     /*                       @Y30LB35
*                                      NUMBER EXT IN VTOC    @Y30LB35*/
*      2 * CHAR(2) INIT('0000'X),   /*                       @Y30LB35
*                                      RESERVED              @Y30LB35*/
*      2 * CHAR(4) INIT('019B0013'X),/*                      @Y30LB35
*                                      CCHH OF NEXT ALT      @Y30LB35*/
*      2 * CHAR(2) INIT('336D'X),   /*                       @ZM01003
*                                      KEYED REC OVERHEAD    @Y30LB35*/
*      2 * CHAR(1) INIT('C1'X),     /*                       @Y30LB35
*                                      NON-LAST KEYED REC    @Y30LB35*/
*      2 * CHAR(1) INIT('C1'X),     /*                       @Y30LB35
*                                      LAST KEYED OVERHEAD   @Y30LB35*/
*      2 * CHAR(1) INIT('3A'X),     /*                       @Y30LB35
*                                      NON-LAST KEYED O.H.   @Y30LB35*/
*      2 * CHAR(1) INIT('01'X),     /*                       @Y30LB35
*                                      TOLANCE LAST RECD     @Y30LB35*/
*      2 * CHAR(2) INIT('0200'X),   /*                       @Y30LB35
*                                      DEVICE TOLANCE        @Y30LB35
*                                      512 BYTES             @Y30LB35*/
*      2 * CHAR(1) INIT('27'X),     /*                       @Y30LB35
*                                      NUMBER DSCB/TRK (39)  @Y30LB35*/
*      2 * CHAR(1) INIT('1C'X),     /*                       @Y30LB35
*                                      NUM PDS DIR BLK/TRK   @Y30LB35*/
*      2 * CHAR(8) INIT('0000000000000000'X),/*              @Y30LB35
*                                      VSAM TIME STAMP       @Y30LB35*/
*      2 * CHAR(3) INIT('000000'X), /*                       @Y30LB35
*                                      VSAM CATLG INDICATOR  @Y30LB35*/
*      2 *(13) CHAR(1) INIT((13)'00'X),/*                    @Y30LB35
*                                      RESERVED              @Y30LB35*/
*      2 * CHAR(5) INIT('0000000000'X),/*                    @Y30LB35
*                                      PTR 1ST FMT 6 DSCB    @Y30LB35*/
*      2 * CHAR(10),                /*                       @Y30LB35*/
*       3 * CHAR(6) INIT('010000000001'X),/*                 @Y30LB35*/
*       3 * CHAR(4),                /*                       @Y30LB35
*                                      VTOC EXT.             @Y30LB35*/
*      2 *(25) CHAR(1) INIT((25)'00'X);/*                    @Y30LB35
*                                      RESERVED              @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0622
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DCL DEFINES DYNAMIC STORAGE             @Y30LB35*/
*   /* STORAGE FOR THE FORMAT 4 DSCB.                        @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0623
*   DCL                                                            0623
*     1 DSCBFMT4 BDY(WORD),         /*                       @Y30LB35*/
*      2 * CHAR(44),                /*                       @Y30LB35*/
*      2 DS4DATA CHAR(96);          /*                       @Y30LB35
*                                      DATA PORTION OF REC   @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0623
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DCL REDEFINES THE DS4VTOCE              @Y30LB35*/
*   /* FIELD IN THE FMT4 DSCB DCL STRUCTURE                  @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   DCL                                                            0624
*     1 VTOCE BASED(ADDR(DS4VTOCE)),/*                       @Y30LB35*/
*      2 VTOCE1 CHAR(6),            /*                       @Y30LB35
*                                      NUMBER OF VTOC EXT    @Y30LB35
*                                      & VTOC CCHH OF BEG    @Y30LB35*/
*      2 VTOCE2 CHAR(4);            /*                       @Y30LB35
*                                      VTOC CCHH OF END      @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0624
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE STATIC PORTION OF THE                     @Y30LB35*/
*   /* FORMAT 5 DSCB.                                        @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0625
*   DCL                                                            0625
*     1 FMT5 STATIC BDY(WORD),      /*                       @Y30LB35*/
*      2 * CHAR(4) INIT('05050505'X),/*                      @Y30LB35
*                                      KEY FOR FMT 5 DSCB    @Y30LB35*/
*      2 * CHAR(5),                 /*                       @Y30LB35
*                                      1ST NON-USED TRACK    @Y30LB35*/
*      2 * CHAR(35),                /*                       @Y30LB35*/
*       3 *(35) CHAR(1) INIT((35)'00'X),/*                   @Y30LB35
*                                      7 EXT INIT ZEROS      @Y30LB35*/
*      2 * CHAR(1) INIT('F5'X),     /*                       @Y30LB35
*                                      FMT 5 I.D.            @Y30LB35*/
*      2 * CHAR(90),                /*                       @Y30LB35*/
*       3 *(90) CHAR(1) INIT((90)'00'X),/*                   @Y30LB35
*                                      18 EXT INIT TO ZERO   @Y30LB35*/
*      2 * CHAR(5) INIT('0000000000'X);/*                    @Y30LB35
*                                      NEXT DSCB FMT 5       @Y30LB35
*                                                            @Y30LB35*/
*   DCL                                                            0626
*     DSCBFMT5 BDY(WORD) CHAR(140); /*                       @Y30LB35
*                                      DEF STORAGE FMT 5     @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0626
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING STRUCTURE DEFINES THE                   @Y30LB35*/
*   /* DS5AVEXT FIELD FOR ASSIGNMENT.                        @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0627
*   DCL                                                            0627
*     1 AVEXT BASED(ADDR(DS5AVEXT)),/*                       @Y30LB35*/
*      2 DS5RELTK FIXED(15),        /*                       @Y30LB35
*                                      TTR OF 1ST NON-USED   @Y30LB35
*                                      TRACK ON PACK.        @Y30LB35*/
*      2 DS5CYLNO FIXED(15),        /*                       @Y30LB35
*                                      NUMBER OF UNUSED CYL  @Y30LB35*/
*      2 DS5TRKNO FIXED(8);         /*                       @Y30LB35
*                                      NUMBER OF UNUSED TRK  @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0627
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS FIELD WILL BE USED TO CALCULATE THE              @Y30LB35*/
*   /* ENDING CCHH OF THE VTOC.                              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0628
*   DCL                                                            0628
*     1 VTOCCCHH CHAR(4) BDY(WORD), /*                       @Y30LB35*/
*      2 VTOCCC FIXED(15),          /*                       @Y30LB35
*                                      CYLINDER VALUE        @Y30LB35*/
*      2 VTOCHH FIXED(15);          /*                       @Y30LB35
*                                      HEAD(TRACK) VALUE     @Y30LB35*/
*                                   /*                       @Y30LB35*/
*                                                                  0629
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TRACE POINT 'VSF1' IN TRACE TABLE              @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0629
*   OLDERID2=NEWERID2;                                             0629
         L     @10,@PC00001                                        0629
         L     @10,GDTTR2(,@10)                                    0629
         MVC   @TS00001(95),NEWERID2(@10)                          0629
         MVC   OLDERID2(95,@10),@TS00001                           0629
*   NEWID2='VSF1';                  /*                       @Y30LB35*/
*                                                                  0630
         MVC   NEWID2(4,@10),@CC01343                              0630
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE STATIC PORTION OF THE DSCB FORMAT                @Y30LB35*/
*   /* FOUR AND FIVE TO DYNAMIC STORAGE.                     @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0631
*   F4PTR=ADDR(DS4DATA);            /*                       @Y30LB35*/
         LA    F4PTR,DS4DATA                                       0631
*   F5PTR=ADDR(DSCBFMT5);           /*                       @Y30LB35*/
         LA    F5PTR,DSCBFMT5                                      0632
*   DSCBFMT4=FMT4;                  /*                       @Y30LB35*/
         MVC   DSCBFMT4(140),FMT4                                  0633
*   DSCBFMT5=FMT5;                  /*                       @Y30LB35*/
*                                                                  0634
         MVC   DSCBFMT5(140),FMT5                                  0634
*   /*****************************************************************/
*   /*                                                               */
*   /* INITALIZE THE UEXCP (PUT) EXPDATAB ARRAY.             @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0635
*   EXPDATAP(1)=ADDR(DSCBFMT4);     /*                       @Y30LB35*/
         LA    @10,EXPPARM                                         0635
         L     @10,EXPDATA(,@10)                                   0635
         LA    @07,DSCBFMT4                                        0635
         ST    @07,EXPDATAP(,@10)                                  0635
*   EXPKEYLN(1)=DSCBKYLN;           /*                       @Y30LB35*/
         LH    @07,DSCBKYLN                                        0636
         STC   @07,EXPKEYLN(,@10)                                  0636
*   EXPDATAL(1)=DSCBDALN;           /*                       @Y30LB35*/
         LH    @04,DSCBDALN                                        0637
         STH   @04,EXPDATAL(,@10)                                  0637
*   EXPDATAP(2)=ADDR(DSCBFMT5);     /*                       @Y30LB35*/
         LA    @03,DSCBFMT5                                        0638
         ST    @03,EXPDATAP+8(,@10)                                0638
*   EXPKEYLN(2)=DSCBKYLN;           /*                       @Y30LB35*/
         STC   @07,EXPKEYLN+8(,@10)                                0639
*   EXPDATAL(2)=DSCBDALN;           /*                       @Y30LB35*/
         STH   @04,EXPDATAL+8(,@10)                                0640
*                                                                  0641
*   /*****************************************************************/
*   /*                                                               */
*   /* HERE LOOPING IS DONE UNTIL THE 37 FORMAT              @Y30LB35*/
*   /* DSCB ARE INITALIZE INTO THE EXPDATAB ARRAY.           @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0641
*   DO COUNTER=3 TO VTOCREC;        /*                       @Y30LB35*/
         LA    COUNTER,3                                           0641
         B     @DE00641                                            0641
@DL00641 DS    0H                                                  0642
*     EXPDATAP(COUNTER)=ADDR(DSCBFMT0);/*                    @Y30LB35*/
         LR    @10,COUNTER                                         0642
         SLA   @10,3                                               0642
         LA    @07,EXPPARM                                         0642
         L     @07,EXPDATA(,@07)                                   0642
         LA    @03,DSCBFMT0                                        0642
         LA    @01,0(@10,@07)                                      0642
         AL    @01,@CF01353                                        0642
         ST    @03,EXPDATAP-4(,@01)                                0642
*     EXPKEYLN(COUNTER)=DSCBKYLN;   /*                       @Y30LB35*/
         LH    @03,DSCBKYLN                                        0643
         STC   @03,EXPKEYLN-8(@10,@07)                             0643
*     EXPDATAL(COUNTER)=DSCBDALN;   /*                       @Y30LB35*/
         LH    @03,DSCBDALN                                        0644
         STH   @03,EXPDATAL-8(@10,@07)                             0644
*   END;                            /*                       @Y30LB35
*                                                            @Y30LB35*/
*                                                                  0645
         AL    COUNTER,@CF00217                                    0645
@DE00641 CH    COUNTER,VTOCREC                                     0645
         BNH   @DL00641                                            0645
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE DS4DSREC. THIS IS DONE BY               @Y30LB35*/
*   /* MULTIPLING THE CALLER NUMBER OF VTOC TRACKS           @Y30LB35*/
*   /* THAT HAS BEEN REQUESTED BY 39 THE NUMBER OF           @Y30LB35*/
*   /* DSCBS THAT WILL FIT ON ONE 3330 TRACK.                @Y30LB35*/
*   /* NOW THE DSCBS USED FOR FORMAT 4 AND 5 ARE             @Y30LB35*/
*   /* SUBTRACTED YIELDING NUMBER OF FREE DSCBS.             @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0646
*   DS4DSREC=VSVTOCSZ*VTOCREC-TWO;  /*                       @Y30LB35*/
*                                                                  0646
         L     @10,@PC00001+8                                      0646
         L     @10,VSVTOCSZ(,@10)                                  0646
         LR    @07,@10                                             0646
         MH    @07,VTOCREC                                         0646
         SH    @07,TWO                                             0646
         STCM  @07,3,DS4DSREC(F4PTR)                               0646
*   /*****************************************************************/
*   /*                                                               */
*   /* THE ENDING VTOC CCHH IS CALCULATED AND                @Y30LB35*/
*   /* MOVED INTO THE DS4VTOCE FIELD OF FMT4 DSCB.           @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0647
*   VTOCCC=VSVTOCSZ/TRACKSIZ;       /*                       @Y30LB35*/
         LH    @07,TRACKSIZ                                        0647
         LR    @00,@10                                             0647
         SRDA  @00,32                                              0647
         DR    @00,@07                                             0647
         STH   @01,VTOCCC                                          0647
*   VTOCHH=VSVTOCSZ-(VTOCCC*TRACKSIZ);/*                     @Y30LB35*/
         MR    @00,@07                                             0648
         LCR   @01,@01                                             0648
         ALR   @01,@10                                             0648
         STH   @01,VTOCHH                                          0648
*   VTOCE2=VTOCCCHH;                /*                       @Y30LB35*/
*                                                                  0649
         MVC   VTOCE2+61(4,F4PTR),VTOCCCHH                         0649
*   /*****************************************************************/
*   /*                                                               */
*   /* THE DS5AVEXT FIELD IS CALCULATED AND MOVED            @Y30LB35*/
*   /* INTO THE FORMAT 5 DSCB.                               @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0650
*   DS5RELTK=VSVTOCSZ+ONE;          /*                       @Y30LB35*/
         LA    @04,4                                               0650
         ALR   @04,F5PTR                                           0650
         LH    @03,ONE                                             0650
         ALR   @03,@10                                             0650
         STH   @03,DS5RELTK(,@04)                                  0650
*   DS5CYLNO=PACKSIZE-(VSVTOCSZ/TRACKSIZ);/*                 @Y30LB35*/
         LR    @08,@10                                             0651
         SRDA  @08,32                                              0651
         DR    @08,@07                                             0651
         LCR   @09,@09                                             0651
         AH    @09,PACKSIZE                                        0651
         STH   @09,DS5CYLNO(,@04)                                  0651
*                                                                  0652
*   /*****************************************************************/
*   /*                                                               */
*   /* BASED ON WHETHER THE VTOC ENDS ON A CYLINDER          @Y30LB35*/
*   /* BOUNDRY THE DS5RELTK IS SET TO ZERO.                  @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0652
*   IF VTOCHH<LASTTRK               /*                       @Y30LB35*/
*     THEN                          /*                       @Y30LB35*/
         LH    @10,LASTTRK                                         0652
         CR    @01,@10                                             0652
         BNL   @RF00652                                            0652
*     DS5TRKNO=LASTTRK-VTOCHH;      /*                       @Y30LB35*/
         SLR   @10,@01                                             0653
         STC   @10,DS5TRKNO(,@04)                                  0653
*   ELSE                            /*                       @Y30LB35*/
*     DS5TRKNO=ZERO;                /*                       @Y30LB35*/
*                                                                  0654
         B     @RC00652                                            0654
@RF00652 MVC   DS5TRKNO+4(1,F5PTR),ZERO+1                          0654
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTROL IS RETURNED TO INITVOLM WHICH WILL            @Y30LB35*/
*   /* ISSUE UEXCP MACRO WRITING THE CYL 0 TRK 1             @Y30LB35*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0655
*   RETURN CODE(0);                 /*                       @Y30LB35*/
@RC00652 SLR   @15,@15                                             0655
         L     @14,12(,@13)                                        0655
         LM    @00,@12,20(@13)                                     0655
         BR    @14                                                 0655
*   END FMTTRK1;                    /*                       @Y30LB35*/
*   END IDCVS02                     /*                       @Y30LB35*/
*                                                                  0657
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IECSDSL1)                                       */
*                                                                  0657
*       ;                                                          0657
@DATA    DS    0H
@CH00041 DC    H'4'
@CH00154 DC    H'6'
@CH00308 DC    H'24'
@CH01346 DC    H'80'
@CH01349 DC    H'144'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@AL00001 DS    6A
IDCVS02  CSECT
         DS    0F
@CF00114 DC    F'0'
@CF00217 DC    F'1'
@CF01353 DC    F'-4'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
IOXPTR   DS    A
UCBADDR  DS    A
UNITABLP DS    A
LISTPTR  DS    A
TESTRC   DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
PRINTARG DS    CL20
EXOPARM  DS    CL34
         DS    CL2
EXGPARM  DS    CL32
EXPPARM  DS    CL20
EXDATA   DS    CL320
LABELREC DS    CL84
RTNUNIT  DS    CL11
         DS    CL1
QRNAMES  DS    CL31
         ORG   QRNAMES
QNAME    DS    CL8
RNAME    DS    CL23
         ORG   RNAME
RLENGTH  DS    FL1
RVOLSER  DS    CL6
RQUAL    DS    CL16
         ORG   QRNAMES+31
         DS    CL1
CCHHR    DS    CL5
         ORG   CCHHR
CC       DS    FL2
HH       DS    FL2
R        DS    FL1
         ORG   CCHHR+5
         DS    CL3
DSCBFMT4 DS    CL140
         ORG   DSCBFMT4
@NM00140 DS    CL44
DS4DATA  DS    CL96
         ORG   DSCBFMT4+140
DSCBFMT5 DS    CL140
VTOCCCHH DS    CL4
         ORG   VTOCCCHH
VTOCCC   DS    FL2
VTOCHH   DS    FL2
         ORG   VTOCCCHH+4
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCVS02  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ZERO     DC    H'0'
ONE      DC    H'1'
TWO      DC    H'2'
THREE    DC    H'3'
MINVTOC  DC    H'1'
MAXTRKS  DC    H'18'
TRACKTWO DC    H'2'
TRACKSIZ DC    H'19'
MINSIZE  DC    H'1'
LASTTRK  DC    H'18'
PACKSIZE DC    H'403'
CLOSEBAD DC    H'8'
VTOCREC  DC    H'39'
DSCBKYLN DC    H'44'
DSCBDALN DC    H'96'
@CC01139 DC    C'VSMN'
@CC01140 DC    C'VSBG'
@CC01144 DC    C'VSOT'
@CC01148 DC    C'VSIN'
@CC01155 DC    C'VSGL'
@CC01159 DC    C'VSPL'
@CC01218 DC    C'VSF0'
@CC01343 DC    C'VSF1'
@CC01039 DC    C'CM0'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODID    DC    CL4'VS02'
FIXAREA  DS    CL256
         ORG   FIXAREA
@NM00085 DC    256X'00'
         ORG   FIXAREA+256
AMSQNAME DC    CL8'SYSZAMS'
REALQUAL DC    CL16'.REAL.RESERVE   '
VIRTQUAL DC    CL16'.VIRTUAL.RESERVE'
CCHH0    DC    X'0000000000'
CCHH1    DC    X'0000000100'
CCHH2    DC    X'0000000200'
CCHH3    DC    X'0000000300'
NULLVAL  DC    X'000000000000'
VOLCCHHR DC    X'0000000003'
         DS    CL1
DSCBFMT0 DS    CL140
         ORG   DSCBFMT0
@NM00086 DS    CL140
         ORG   @NM00086
@NM00087 DC    140X'00'
         ORG   DSCBFMT0+140
RECORD1  DS    CL28
         ORG   RECORD1
REC1KEY  DC    CL4'IPL1'
@NM00088 DC    X'000600000000000F'
@NM00089 DC    X'0300000000000001'
@NM00090 DC    X'0000000000000000'
         ORG   RECORD1+28
RECORD2  DS    CL148
         ORG   RECORD2
REC2KEY  DC    CL4'IPL2'
@NM00091 DC    X'07003AB840000006'
@NM00092 DC    X'31003ABE40000005'
@NM00093 DC    X'08003AA000000001'
@NM00094 DC    X'0600000020000E29'
@NM00095 DS    CL112
         ORG   @NM00095
@NM00096 DC    112X'00'
         ORG   RECORD2+148
RECORD3  DS    CL84
         ORG   RECORD3
@NM00097 DC    CL4'VOL1'
@NM00098 DC    CL3'VOL'
@NM00099 DC    CL1'1'
@NM00100 DS    CL6
@NM00101 DC    CL1'0'
@NM00102 DS    CL5
@NM00103 DC    CL25'                         '
@NM00104 DS    CL10
@NM00105 DS    CL29
         ORG   @NM00105
@NM00106 DC    29CL1' '
         ORG   RECORD3+84
TTR0     DC    X'0000000101'
         DS    CL3
FMT4     DS    CL140
         ORG   FMT4
@NM00113 DS    CL44
         ORG   @NM00113
@NM00114 DC    44X'04'
         ORG   FMT4+44
@NM00115 DC    X'F4'
@NM00116 DC    X'0000000103'
@NM00117 DS    FL2
@NM00118 DC    X'01940000'
@NM00119 DC    X'0085'
@NM00120 DC    X'00'
@NM00121 DC    X'01'
@NM00122 DC    X'0000'
@NM00123 DC    X'019B0013'
@NM00124 DC    X'336D'
@NM00125 DC    X'C1'
@NM00126 DC    X'C1'
@NM00127 DC    X'3A'
@NM00128 DC    X'01'
@NM00129 DC    X'0200'
@NM00130 DC    X'27'
@NM00131 DC    X'1C'
@NM00132 DC    X'0000000000000000'
@NM00133 DC    X'000000'
@NM00134 DC    13X'00'
@NM00135 DC    X'0000000000'
@NM00136 DS    CL10
         ORG   @NM00136
@NM00137 DC    X'010000000001'
@NM00138 DS    CL4
         ORG   FMT4+115
@NM00139 DC    25X'00'
         ORG   FMT4+140
FMT5     DS    CL140
         ORG   FMT5
@NM00141 DC    X'05050505'
@NM00142 DS    CL5
@NM00143 DS    CL35
         ORG   @NM00143
@NM00144 DC    35X'00'
         ORG   FMT5+44
@NM00145 DC    X'F5'
@NM00146 DS    CL90
         ORG   @NM00146
@NM00147 DC    90X'00'
         ORG   FMT5+135
@NM00148 DC    X'0000000000'
         ORG   FMT5+140
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
F5PTR    EQU   @05
F4PTR    EQU   @06
VTOCNUM  EQU   @04
COUNTER  EQU   @04
RTNREG   EQU   @15
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSARV0 EQU   0
IDCSASI0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITUCB  EQU   UNITABL
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIO050 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTARRAY  EQU   CTMSG+4
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKFLAGS  EQU   CKAGL+28
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXODDN   EQU   EXOARG+8
EXOVSN   EQU   EXOARG+16
EXOUCB   EQU   EXOARG+20
EXOCTLBK EQU   EXOARG+28
EXOPT    EQU   EXOARG+32
EXOLAB   EQU   EXOPT
EXONEW   EQU   EXOPT
EXFLG    EQU   EXOARG+33
EXOREAD  EQU   EXFLG
EXGARG   EQU   0
EXGCTLBK EQU   EXGARG+8
EXGCCHH2 EQU   EXGARG+16
EXGRECNO EQU   EXGARG+20
EXGDATAP EQU   EXGARG+24
EXGKEYLN EQU   EXGARG+28
EXGDATAL EQU   EXGARG+30
EXPARG   EQU   0
EXPHEAD  EQU   EXPARG
EXPCTLBK EQU   EXPARG+8
EXPDATA  EQU   EXPARG+12
EXPCCHHR EQU   EXPARG+16
EXPDATAB EQU   0
EXPRECNO EQU   EXPDATAB
EXPARRAY EQU   EXPDATAB+4
EXPDATAP EQU   EXPARRAY
EXPKEYLN EQU   EXPARRAY+4
EXPDATAL EQU   EXPARRAY+6
VS2AGL   EQU   0
VS2HEAD  EQU   VS2AGL
VSUCBPTR EQU   VS2AGL+8
VSVTOCSZ EQU   VS2AGL+12
VSOWNPTR EQU   VS2AGL+16
VSVOLPTR EQU   VS2AGL+20
VSIOBKPT EQU   VS2AGL+24
VSLABOPT EQU   VS2AGL+28
VSOWNER  EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLUME EQU   VS2AGL+29
VS2MSG   EQU   VS2AGL+35
VS2TOV   EQU   VS2MSG
VS2RESOP EQU   VS2AGL+36
VS2RES   EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VSDDNAME EQU   VS2AGL+37
VSVTOCPT EQU   VS2AGL+48
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
VOLKEY   EQU   VOLLABEL
VOLSERNO EQU   VOLLABEL+8
VOLVTOC  EQU   VOLLABEL+15
VOLOWNER EQU   VOLLABEL+45
SV82LIST EQU   0
@NM00066 EQU   SV82LIST+4
SV82DCBP EQU   @NM00066
@NM00067 EQU   SV82LIST+12
SV82WRKP EQU   @NM00067
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
USERUCB  EQU   0
USEROWN  EQU   0
USERLAB  EQU   0
USERIOXP EQU   0
VOLSER   EQU   0
OWNER    EQU   0
VTOCADDR EQU   0
IECSDSF4 EQU   0
IECSDSL4 EQU   0
DS4DSREC EQU   IECSDSL4+6
DS4DEVCT EQU   IECSDSL4+18
DS4DEVOV EQU   DS4DEVCT+6
DS4AMCAT EQU   IECSDSL4+40
DS4VSIND EQU   DS4AMCAT
DS4VTOCE EQU   IECSDSL4+61
IECSDSF5 EQU   0
IECSDSL5 EQU   0
DS5AVEXT EQU   IECSDSL5+4
VTOCE    EQU   0
VTOCE2   EQU   VTOCE+6
AVEXT    EQU   0
DS5RELTK EQU   AVEXT
DS5CYLNO EQU   AVEXT+2
DS5TRKNO EQU   AVEXT+4
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSASC0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTABT   EQU   GDTTBL+152
GDTABH   EQU   GDTTBL+156
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
REQUEST  EQU   0
ARGLIST  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
VTOCE1   EQU   VTOCE
DS5END   EQU   IECSDSL5+140
DS5PTRDS EQU   IECSDSL5+135
DS5MAVET EQU   IECSDSL5+45
DS5FMTID EQU   IECSDSL5+44
DS5EXTAV EQU   IECSDSL5+9
DS5KEYID EQU   IECSDSL5
@NM00112 EQU   IECSDSF5
DS4END   EQU   IECSDSL4+96
@NM00111 EQU   IECSDSL4+71
DS4F6PTR EQU   IECSDSL4+56
@NM00110 EQU   IECSDSL4+51
DS4R2TIM EQU   IECSDSL4+43
DS4VSCRA EQU   DS4AMCAT+1
@NM00109 EQU   DS4VSIND
DS4VSBAD EQU   DS4VSIND
DS4VSREF EQU   DS4VSIND
DS4AMTIM EQU   IECSDSL4+32
DS4DEVDB EQU   DS4DEVCT+13
DS4DEVDT EQU   DS4DEVCT+12
DS4DEVTL EQU   DS4DEVCT+10
DS4DEVFG EQU   DS4DEVCT+9
DS4DEVK  EQU   DS4DEVCT+8
DS4DEVL  EQU   DS4DEVOV+1
DS4DEVI  EQU   DS4DEVOV
DS4DEVTK EQU   DS4DEVCT+4
DS4DEVSZ EQU   DS4DEVCT
@NM00108 EQU   IECSDSL4+16
DS4NOEXT EQU   IECSDSL4+15
DS4VTOCI EQU   IECSDSL4+14
DS4NOATK EQU   IECSDSL4+12
DS4HCCHH EQU   IECSDSL4+8
DS4HPCHR EQU   IECSDSL4+1
DS4IDFMT EQU   IECSDSL4
@NM00107 EQU   IECSDSF4
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00084 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00083 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00082 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00081 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00080 EQU   VSDSCR+5
@NM00079 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00078 EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00077 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00076 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00075 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00074 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00073 EQU   VSDVTOC
@NM00072 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00071 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00070 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00069 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00068 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLRESV1 EQU   VOLLABEL+20
VOLSECTY EQU   VOLLABEL+14
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
STAVTTR  EQU   STAEPARM+54
@NM00065 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00064 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00063 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00062 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00061 EQU   RCTAGL+10
@NM00060 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00059 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00058 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00057 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00056 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00055 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
@NM00054 EQU   VS2AGL+45
@NM00053 EQU   VS2RESOP
@NM00052 EQU   VS2MSG
@NM00051 EQU   VSLABOPT
@NM00050 EQU   EXPARRAY+5
@NM00049 EQU   EXGARG+29
EXGCCHH1 EQU   EXGARG+12
EXGHEAD  EQU   EXGARG
@NM00048 EQU   EXFLG
@NM00047 EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOTAB   EQU   EXOPT
EXOEXT   EQU   EXOARG+24
EXODSN   EQU   EXOARG+12
EXOHEAD  EQU   EXOARG
@NM00046 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00045 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKTESTVT EQU   CKFLAGS
CKLABELP EQU   CKAGL+24
CKDATYPE EQU   CKAGL+20
CKDDNAME EQU   CKAGL+12
CKUCBPTR EQU   CKAGL+8
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00044 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLRR  EQU   CTARRAY+3
CTTBLHH  EQU   CTARRAY+2
CTTBLCC  EQU   CTARRAY+1
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
CTREALCC EQU   CTMSG+1
@NM00043 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00042 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00041 EQU   CMMSG+7
@NM00040 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00039 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00038 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
@NM00037 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00036 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00035 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00034 EQU   ERCNVTAB+4
@NM00033 EQU   ERCNVTAB+3
@NM00032 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGRETP EQU   DARGLIST+4
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00332 EQU   @RC00300
@RC00563 EQU   @RC00561
@RC00569 EQU   @RC00567
@PB00006 EQU   @EL00001
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCVS02,(C'PLS2235',0603,76245)
