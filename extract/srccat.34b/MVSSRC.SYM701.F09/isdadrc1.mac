         TITLE 'DRC EQUIPMENT CHECKS REPORT                            *
                        '
ISDADRC1 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(8)                                           01S0001
         DC    C'ISDADRC1'                                      01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         ISDAGSPC R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
*                                                            @ZM02889*/
*                                                               01S0048
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF DECLARES FOR ISDADRC1                          @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0049
*   CVTPTR=WORKPTR;                 /* SAVE CALLING PARAMETER-PTR TO
*                                      SDACVT                @Y30LB50*/
         L     @15,@PC00001                                     01S0049
         L     CVTPTR,WORKPTR(,@15)                             01S0049
*   DRCPTR=DRC00PTR;                /* SET LOCAL POINTER TO DRC WORK
*                                      AREA                  @Y30LB50*/
         L     DRCPTR,DRC00PTR(,CVTPTR)                         01S0050
*   RETRNREG=NODATA;                /* SET RETURN CODE FOR NO DATA
*                                      ENCOUNTERED - WILL BE RESET
*                                      WHEN DATA IS ENCOUNTERED 01S0051
*                                                            @Y30LB50*/
         LA    RETRNREG,8                                       01S0051
*   RFY                                                         01S0052
*     OPTR RSTD;                    /*                       @Y30LB50*/
*   OPTR=ADDR(OUTLINE);             /* POINT TO OUTPUT LINE IN SDACVT
*                                                            @Y30LB50*/
         LA    OPTR,OUTLINE(,CVTPTR)                            01S0053
*   RFY                                                         01S0054
*     OUTPTR RSTD;                  /*                       @Y30LB50*/
*   DO I=1 TO MAXCS;                /* PROCESS ALL CS ACCUMULATORS
*                                                            @Y30LB50*/
         LA    @07,1                                            01S0055
         STH   @07,I(,DRCPTR)                                   01S0055
@DL00055 DS    0H                                               01S0056
*     IF CSPTRS(I)^=0 THEN          /* IF ACCUMULATOR WAS OBTAINED
*                                                            @Y30LB50*/
         SLR   @07,@07                                          01S0056
         LH    @04,I(,DRCPTR)                                   01S0056
         LR    @03,@04                                          01S0056
         SLA   @03,2                                            01S0056
         AL    @03,@CF00376                                     01S0056
         L     @03,CSPTRS(@03,DRCPTR)                           01S0056
         CR    @03,@07                                          01S0056
         BE    @RF00056                                         01S0056
*                                                               02S0057
*   /*****************************************************************/
*   /*                                                               */
*   /* DRCRPPT IS USED TO FORMAT AND PRINT THE DRC CHECKS REPORT FOR */
*   /* EACH ACCUMULATOR USED                                 @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0057
*   DO;                             /*                       @Y30LB50*/
*     RETRNREG=0;                   /* SET RETURN CODE TO 0  @Y30LB50*/
         LR    RETRNREG,@07                                     02S0058
*     CSPTR=CSPTRS(I);              /* INITIALIZE POINTER TO    02S0059
*                                      CARTRIDGE STORE ACCUMULATOR
*                                      BLOCK BEING PROCESSED @Y30LB50*/
         LR    CSPTR,@03                                        02S0059
*     OUTPUT=DRCHEAD;               /* SET MAIN HEADING INTO OUTPUT
*                                      LINE                  @Y30LB50*/
         MVI   OUTPUT+129(OPTR),C' '                            02S0060
         MVC   OUTPUT+130(3,OPTR),OUTPUT+129(OPTR)              02S0060
         MVC   OUTPUT(129,OPTR),@CC00162                        02S0060
*     HOLD=I-1;                     /* SET CARTRIDGE STORE ID INTO
*                                      OUTPUT LINE           @Y30LB50*/
         BCTR  @04,0                                            02S0061
         ST    @04,HOLD(,DRCPTR)                                02S0061
*     HOLD(4)=HOLD(4)×'0';          /*                       @Y30LB50*/
         OI    HOLD+3(DRCPTR),C'0'                              02S0062
*     CSNO=HOLD(4);                 /*                       @Y30LB50*/
         MVC   CSNO(1,OPTR),HOLD+3(DRCPTR)                      02S0063
*     RFY                                                       02S0064
*       R1 RSTD;                    /*                       @Y30LB50*/
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             02S0065
*     CALL ISDAPRT0;                /* PRINT MAIN HEADING    @Y30LB50*/
         L     @15,@CV00151                                     02S0066
         BALR  @14,@15                                          02S0066
*     OUTPUT=' ';                   /* CLEAR OUTPUT LINE     @Y30LB50*/
         MVI   OUTPUT+1(OPTR),C' '                              02S0067
         MVC   OUTPUT+2(131,OPTR),OUTPUT+1(OPTR)                02S0067
         MVI   OUTPUT(OPTR),C' '                                02S0067
*     CNTRL=SKIP;                   /* ADD CONTROL CHARACTER FOR
*                                      SUBHEADING            @Y30LB50*/
         MVI   CNTRL(OPTR),C'0'                                 02S0068
*     SSIDHEAD=DRCID;               /* ADD SUBHEADING        @Y30LB50*/
         MVC   SSIDHEAD(8,OPTR),@CC00191                        02S0069
*     CALL ISDAPRT0;                /* PRINT FIRST SUBHEADING   02S0070
*                                                            @Y30LB50*/
         L     @15,@CV00151                                     02S0070
         BALR  @14,@15                                          02S0070
*     CNTRL=SKIP1;                  /* ADD CONTROL CHARACTER FOR
*                                      SECOND LINE           @Y30LB50*/
         MVI   CNTRL(OPTR),C' '                                 02S0071
*     DIVLINES=DRCSUB1;             /* ADD SUBHEADING FOR COLUMNS
*                                                            @Y30LB50*/
         MVC   DIVLINES(46,OPTR),@CC00186                       02S0072
*     SSID0=HOLD(4);                /* ADD CS ID TO SSIDS    @Y30LB50*/
         MVC   SSID0(1,OPTR),HOLD+3(DRCPTR)                     02S0073
*     SSID1=HOLD(4);                /*                       @Y30LB50*/
         MVC   SSID1(1,OPTR),HOLD+3(DRCPTR)                     02S0074
*     SSID2=HOLD(4);                /*                       @Y30LB50*/
         MVC   SSID2(1,OPTR),HOLD+3(DRCPTR)                     02S0075
*     SSID3=HOLD(4);                /*                       @Y30LB50*/
         MVC   SSID3(1,OPTR),HOLD+3(DRCPTR)                     02S0076
*     CALL ISDAPRT0;                /* PRINT SUBHEADING      @Y30LB50*/
         L     @15,@CV00151                                     02S0077
         BALR  @14,@15                                          02S0077
*     OUTPUT=DRCSUB3;               /* DIVIDING LINE ACROSS TOP 02S0078
*                                                            @Y30LB50*/
         MVI   OUTPUT+83(OPTR),C' '                             02S0078
         MVC   OUTPUT+84(49,OPTR),OUTPUT+83(OPTR)               02S0078
         MVC   OUTPUT(83,OPTR),@CC00173                         02S0078
*     CALL ISDAPRT0;                /*                       @Y30LB50*/
         L     @15,@CV00151                                     02S0079
         BALR  @14,@15                                          02S0079
*     RFY                                                       02S0080
*       R1 UNRSTD;                  /*                       @Y30LB50*/
*     RFY                                                       02S0081
*       LINEPTR RSTD;               /*                       @Y30LB50*/
*     LINEPTR=ADDR(LINETITL);       /* SET POINTER TO BIT       02S0082
*                                      DESCRIPTIONS TO BE PRINTED
*                                      WITH THE BIT COUNTS   @Y30LB50*/
         LA    LINEPTR,LINETITL                                 02S0082
*                                                               03S0083
*   /*****************************************************************/
*   /*                                                               */
*   /* DRCCVRT IS USED TO FORMAT AND PRINT ONE LINE OF OUTPUT FOR    */
*   /* EACH BIT COUNT ACCUMULATED. THE OUTPUT LINE INCLUDES ONE COUNT*/
*   /* PER DRC AND ONE COUNT PER ALL DRCS.                   @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0083
*   DO K=1 TO MAXBYTE;              /* PROCESS BITS IN DRC BYTES
*                                                            @Y30LB50*/
         LA    @04,1                                            03S0083
         STH   @04,K(,DRCPTR)                                   03S0083
@DL00083 DS    0H                                               03S0084
*     OUTPUT=LINE0;                 /* PRINT MAIN HEADING FOR THIS
*                                      BYTE                  @Y30LB50*/
         MVI   OUTPUT+37(OPTR),C' '                             03S0084
         MVC   OUTPUT+38(95,OPTR),OUTPUT+37(OPTR)               03S0084
         MVC   OUTPUT(37,OPTR),LINE0(LINEPTR)                   03S0084
*     DIVLINES=DRCSUB4;             /* ADD DIVIDING LINES FOR COUNTS
*                                                            @Y30LB50*/
         MVC   DIVLINES(46,OPTR),@CC00181                       03S0085
*     RFY                                                       03S0086
*       R1 RSTD;                    /*                       @Y30LB50*/
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             03S0087
*     CALL ISDAPRT0;                /*                       @Y30LB50*/
         L     @15,@CV00151                                     03S0088
         BALR  @14,@15                                          03S0088
*     RFY                                                       03S0089
*       R1 UNRSTD;                  /*                       @Y30LB50*/
*     LINEPTR=LINEPTR+LENGTH(LINE0);/* UP PTR FOR BIT DESCRIPTION
*                                                            @Y30LB50*/
         AH    LINEPTR,@CH00211                                 03S0090
*     DO J=1 TO BITCNT;             /* PROCESS BITS IN BYTE  @Y30LB50*/
         LA    @04,1                                            03S0091
         STH   @04,J(,DRCPTR)                                   03S0091
@DL00091 DS    0H                                               03S0092
*       OUTPUT=' ';                 /* PREPARE BIT DESCRIPTOR LINE OF
*                                      OUTPUT                @Y30LB50*/
         MVI   OUTPUT+1(OPTR),C' '                              03S0092
         MVC   OUTPUT+2(131,OPTR),OUTPUT+1(OPTR)                03S0092
         MVI   OUTPUT(OPTR),C' '                                03S0092
*       BITBEG='×BIT';              /*                       @Y30LB50*/
         MVC   BITBEG(4,OPTR),@CC00371                          03S0093
*       HOLD=J-1;                   /* ISOLATE BIT NUMBER    @Y30LB50*/
         LH    @04,J(,DRCPTR)                                   03S0094
         BCTR  @04,0                                            03S0094
         ST    @04,HOLD(,DRCPTR)                                03S0094
*       BITNUMB=HOLD(4)×'0';        /*                       @Y30LB50*/
         MVC   BITNUMB(1,OPTR),HOLD+3(DRCPTR)                   03S0095
         OI    BITNUMB(OPTR),C'0'                               03S0095
*       BITDESC=LINE1;              /* BIT DESCRIPTOR        @Y30LB50*/
         MVC   BITDESC(27,OPTR),LINE1(LINEPTR)                  03S0096
*       DIVLINES=DRCSUB4;           /* ADD DIVIDING LINES    @Y30LB50*/
         MVC   DIVLINES(46,OPTR),@CC00181                       03S0097
*       TSUM=0;                     /* SET TOTAL FOR ALL DRCS TO 0
*                                                            @Y30LB50*/
         SLR   @04,@04                                          03S0098
         ST    @04,TSUM(,DRCPTR)                                03S0098
*       OUTPTR=ADDR(CNTSECT);       /* POINT TO COUNT SECTION OF
*                                      OUTPUT                @Y30LB50*/
         LA    OUTPTR,CNTSECT(,OPTR)                            03S0099
*                                                               04S0100
*   /*****************************************************************/
*   /*                                                               */
*   /* DRC1CNT IS USED TO CONVERT THE COUNTS (ONE PER DRC) FOR EACH  */
*   /* BIT , MAINTAIN THE RUNNING TOTAL FOR ALL BITS FOR EACH DRC,   */
*   /* COMPUTE A TOTAL COUNT FOR ALL DRCS FOR EACH BIT AND FORMAT THE*/
*   /* BIT COUNTS PER DRC AND PER ALL DRCS INTO THE OUTPUT LINE.     */
*   /*                                                       @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               04S0100
*   DO L=1 TO MAXDRC;               /* PROCESS EACH DRC COUNT   04S0100
*                                                            @Y30LB50*/
         LA    @04,1                                            04S0100
         STH   @04,L(,DRCPTR)                                   04S0100
@DL00100 DS    0H                                               04S0101
*     OCOUNT=PATT2;                 /* SET EDIT PATTERN INTO OUTPUT
*                                                            @Y30LB50*/
         MVC   OCOUNT(6,OUTPTR),PATT2                           04S0101
*     CVD(BYTEBIT,HOLDDBL);         /* CONVERT COUNT         @Y30LB50*/
         LH    @04,BYTEBIT(,CSPTR)                              04S0102
         CVD   @04,HOLDDBL(,DRCPTR)                             04S0102
*     ED(OCOUNT,HOLD1);             /*                       @Y30LB50*/
         ED    OCOUNT(6,OUTPTR),HOLD1(DRCPTR)                   04S0103
*     TSUM=TSUM+BYTEBIT;            /* ADD COUNT TO TOTAL FOR ALL
*                                      DRCS                  @Y30LB50*/
         AL    @04,TSUM(,DRCPTR)                                04S0104
         ST    @04,TSUM(,DRCPTR)                                04S0104
*     CSPTR=CSPTR+LENGTH(BYTEBIT);  /* UP PTR TO NEXT COUNT  @Y30LB50*/
         AH    CSPTR,@CH00119                                   04S0105
*     OUTPTR=OUTPTR+LENGTH(OUTCNTS);/* UP POINTER IN OUTPUT LINE FOR
*                                      NEXT COUNT            @Y30LB50*/
         AH    OUTPTR,@CH00374                                  04S0106
*   END;                            /*                       @Y30LB50*/
         LA    @04,1                                            04S0107
         AH    @04,L(,DRCPTR)                                   04S0107
         STH   @04,L(,DRCPTR)                                   04S0107
         CH    @04,@CH00101                                     04S0107
         BNH   @DL00100                                         04S0107
*   TCOUNT=PATT2;                   /* EDIT PATTERN FOR TOTAL COUNT
*                                                            @Y30LB50*/
         MVC   TCOUNT(6,OUTPTR),PATT2                           04S0108
*   CVD(TSUM,HOLDDBL);              /* CONVERT TOTAL FOR ALL DRCS
*                                                            @Y30LB50*/
         L     @04,TSUM(,DRCPTR)                                04S0109
         CVD   @04,HOLDDBL(,DRCPTR)                             04S0109
*   ED(TCOUNT,HOLD1);               /*                       @Y30LB50*/
         ED    TCOUNT(6,OUTPTR),HOLD1(DRCPTR)                   04S0110
*   LINEPTR=LINEPTR+LENGTH(LINE1);  /* POINT TO NEXT BIT DESCRIPTION
*                                                            @Y30LB50*/
         AH    LINEPTR,@CH00213                                 04S0111
*       RFY                                                     03S0112
*         R1 RSTD;                  /*                       @Y30LB50*/
*       R1=ADDR(WORKCALL);          /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             03S0113
*       CALL ISDAPRT0;              /* PRINT BIT LINE OF OUTPUT 03S0114
*                                                            @Y30LB50*/
         L     @15,@CV00151                                     03S0114
         BALR  @14,@15                                          03S0114
*       RFY                                                     03S0115
*         R1 UNRSTD;                /*                       @Y30LB50*/
*     END;                          /*                       @Y30LB50*/
         LA    @04,1                                            03S0116
         AH    @04,J(,DRCPTR)                                   03S0116
         STH   @04,J(,DRCPTR)                                   03S0116
         CH    @04,@CH00070                                     03S0116
         BNH   @DL00091                                         03S0116
*     OUTPUT=DRCSUB3;               /* LINE TO SEPARATE OUTPUT FOR
*                                      ONE BYTE              @Y30LB50*/
         MVI   OUTPUT+83(OPTR),C' '                             03S0117
         MVC   OUTPUT+84(49,OPTR),OUTPUT+83(OPTR)               03S0117
         MVC   OUTPUT(83,OPTR),@CC00173                         03S0117
*     RFY                                                       03S0118
*       R1 RSTD;                    /*                       @Y30LB50*/
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             03S0119
*     CALL ISDAPRT0;                /*                       @Y30LB50*/
         L     @15,@CV00151                                     03S0120
         BALR  @14,@15                                          03S0120
*     RFY                                                       03S0121
*       R1 UNRSTD;                  /*                       @Y30LB50*/
*   END;                            /*                       @Y30LB50*/
         LA    @04,1                                            03S0122
         AH    @04,K(,DRCPTR)                                   03S0122
         STH   @04,K(,DRCPTR)                                   03S0122
         CH    @04,@CH00101                                     03S0122
         BNH   @DL00083                                         03S0122
*     COREADDR=CSPTRS(I);           /* POINT TO BLOCK FOR RELEASING
*                                                            @Y30LB50*/
         LH    @04,I(,DRCPTR)                                   02S0123
         SLA   @04,2                                            02S0123
         AL    @04,@CF00376                                     02S0123
         L     @04,CSPTRS(@04,DRCPTR)                           02S0123
         ST    @04,COREADDR(,CVTPTR)                            02S0123
*     SPNO=DRCSPNO;                 /* SUBPOOL NUMBER FOR DRC   02S0124
*                                      ACCUMULATOR           @Y30LB50*/
         MVC   SPNO(1,CVTPTR),DRCSPNO                           02S0124
*     CORELEN=LENGTH(DRCACCM);      /* LENGTH TO RELEASE     @Y30LB50*/
         MVC   CORELEN(3,CVTPTR),@CF00375+1                     02S0125
*     RFY                                                       02S0126
*       R1 RSTD;                    /*                       @Y30LB50*/
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             02S0127
*     CALL ISDAFREE;                /* FREE ACCUMULATOR BLOCK   02S0128
*                                                            @Y30LB50*/
         L     @15,@CV00150                                     02S0128
         BALR  @14,@15                                          02S0128
*     RFY                                                       02S0129
*      (R1,                                                     02S0129
*       LINEPTR) UNRSTD;            /*                       @Y30LB50*/
*   END;                            /*                       @Y30LB50*/
*     ELSE                                                      01S0131
*       ;                           /*                       @Y30LB50*/
@RF00056 DS    0H                                               01S0132
*   END;                            /*                       @Y30LB50*/
         LA    @07,1                                            01S0132
         AH    @07,I(,DRCPTR)                                   01S0132
         STH   @07,I(,DRCPTR)                                   01S0132
         CH    @07,@CH00101                                     01S0132
         BNH   @DL00055                                         01S0132
*   RFY                                                         01S0133
*     R1 RSTD;                      /*                       @Y30LB50*/
*   R1=ADDR(WORKCALL);              /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             01S0134
*   CORELEN=LENGTH(DRCWORK);        /* LENGTH OF WORKAREA    @Y30LB50*/
         MVC   CORELEN(3,CVTPTR),@CF00097+1                     01S0135
*   SPNO=DRCSPNO;                   /* SUBPOOL NUMBER OF WORKAREA
*                                                            @Y30LB50*/
         MVC   SPNO(1,CVTPTR),DRCSPNO                           01S0136
*   COREADDR=DRCPTR;                /* ADDRESS OF WORKAREA   @Y30LB50*/
         ST    DRCPTR,COREADDR(,CVTPTR)                         01S0137
*   CALL ISDAFREE;                  /* FREE WORKAREA         @Y30LB50*/
         L     @15,@CV00150                                     01S0138
         BALR  @14,@15                                          01S0138
*   DRC00PTR=0;                     /* ZERO WORKAREA PTR     @Y30LB50*/
         SLR   @07,@07                                          01S0139
         ST    @07,DRC00PTR(,CVTPTR)                            01S0139
*   RFY                                                         01S0140
*     R1 UNRSTD;                    /*                       @Y30LB50*/
*   RETURN CODE(RETRNREG);          /*                       @Y30LB50*/
         L     @13,4(,@13)                                      01S0141
         L     @00,@SIZDATD                                     01S0141
         LR    @01,@11                                          01S0141
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@09                                          01S0141
         L     @14,12(,@13)                                     01S0141
         LM    @00,@12,20(@13)                                  01S0141
         BR    @14                                              01S0141
*   END ISDADRC1                    /*                       @Y30LB50*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ISDACVT )                                        *
*/*%INCLUDE SYSLIB  (ISDADRC5)                                        *
*/*%INCLUDE SYSUT5  (DRC1CNST)                                        *
*/*%INCLUDE SYSUT5  (DRCTITLS)                                        *
*/*%INCLUDE SYSUT5  (DRCFMTS )                                        *
*/*%INCLUDE SYSUT5  (DRCRPPT )                                        *
*/*%INCLUDE SYSUT5  (DRCCVRT )                                        *
*/*%INCLUDE SYSUT5  (DRC1CNT )                                        *
*;                                                              01S0142
@DATA    DS    0H
@CH00119 DC    H'2'
@CH00101 DC    H'4'
@CH00070 DC    H'8'
@CH00374 DC    H'9'
@CH00213 DC    H'27'
@CH00211 DC    H'37'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
ISDADRC1 CSECT
         DS    0F
@CF00097 DC    F'40'
@CF00375 DC    F'256'
@CF00376 DC    F'-4'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDADRC1 CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00150 DC    V(ISDAFREE)
@CV00151 DC    V(ISDAPRT0)
         DS    0D
@CC00162 DC    C'1REPORT 10 - DRC DEVICE CHECK SUMMARY                 C
                       MSF                           (DATA FROM MSS FORC
               MAT 4, SA FORMAT E)'
@CC00173 DC    C' ×-----------------------------------×--------×-------C
               -×--------×--------×--------×'
@CC00181 DC    C'×        ×        ×        ×        ×        ×'
@CC00186 DC    C'×    400 ×    401 ×    402 ×    403 ×  TOTAL ×'
@CC00191 DC    C'DRC SSID'
@CC00371 DC    C'×BIT'
DRCSPNO  DC    X'00'
PATCH    DS    CL50
         ORG   PATCH
@NM00001 DC    50X'00'
         ORG   PATCH+50
PATT2    DC    X'402020202120'
LINETITL DS    CL1012
         ORG   LINETITL
LINEA    DC    CL37' ×SA SENSE BYTE 0 - MSS BYTE 4       '
LINE2    DC    CL27'COMMAND REJECT             '
LINE3    DC    CL27'INTERVENTION REQUIRED      '
LINEB    DC    CL27'BUS OUT PARITY             '
LINE4    DC    CL27'EQUIPMENT CHECK            '
LINE6    DC    CL27'DATA CHECK                 '
LINE7    DC    CL27'OVERRUN (NOT USED)         '
LINE8    DC    CL27'NOT USED                   '
LINE9    DC    CL27'ENVIRONMENTAL DATA         '
LINE10   DC    CL37' ×DRC SENSE BYTE 2 - MSS BYTE 20     '
LINE11   DC    CL27'TAG BUS ERROR CTL-I IN     '
LINE12   DC    CL27'BUS OUT ERROR CTL-I IN     '
LINE13   DC    CL27'1 OF 4 OR ADDRESS CHECK    '
LINE14   DC    CL27'DEV-I BUS IN ERROR         '
LINE15   DC    CL27'HOT TAG CHECK              '
LINE16   DC    CL27'TAG BUS PARITY ERROR DEV-I '
LINE17   DC    CL27'BUS OUT PARITY ERROR DEV-I '
LINE18   DC    CL27'OV/UV CHECK                '
LINE19   DC    CL37' ×DRC SENSE BYTE 3 - MSS BYTE 21     '
LINE20   DC    CL27'BUS OUT PARITY CHECK(WRITE)'
LINE21   DC    CL27'WRITE REG PARITY CHECK     '
LINE32   DC    CL27'EGCR ERROR                 '
LINE33   DC    CL27'NOT USED                   '
LINE34   DC    CL27'BUFF PARITY CHECK          '
LINE35   DC    CL27'READ BIT COUNTER CHECK     '
LINE36   DC    CL27'NOT USED                   '
LINE37   DC    CL27'NOT USED                   '
LINE22   DC    CL37' ×DRC SENSE BYTE 4 - MSS BYTE 22     '
LINE23   DC    CL27'ID COMPARE CHECK ID FIELD  '
LINE24   DC    CL27'ID COMPARE CHECK DATA FIELD'
LINE25   DC    CL27'ID FIELD MARK CHECK        '
LINE26   DC    CL27'READ ID INDEX CHECK        '
LINE27   DC    CL27'DATA FIELD MARK CHECK      '
LINE28   DC    CL27'NO DATA FOUND              '
LINE29   DC    CL27'DATA GATE CHECK            '
LINE30   DC    CL27'NO ID FOUND                '
         ORG   LINETITL+1012
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CVTPTR   EQU   @02
DRCPTR   EQU   @10
CSPTR    EQU   @08
RETRNREG EQU   @09
R1       EQU   @01
OUTPTR   EQU   @05
OPTR     EQU   @06
LINEPTR  EQU   @07
R0       EQU   @00
R15      EQU   @15
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
DRC00PTR EQU   CVTPTRS0+76
WORKCALL EQU   CVTPTRS0+96
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
DRCWORK  EQU   0
CSPTRS   EQU   DRCWORK
TSUM     EQU   DRCWORK+16
WORK1    EQU   DRCWORK+20
WORK2    EQU   WORK1
I        EQU   DRCWORK+24
J        EQU   DRCWORK+26
K        EQU   DRCWORK+28
L        EQU   DRCWORK+30
HOLDDBL  EQU   DRCWORK+32
HOLD     EQU   HOLDDBL+4
HOLD1    EQU   HOLD+1
DRCACCM  EQU   0
BYTEBIT  EQU   DRCACCM
BYTE0    EQU   DRCACCM+8
OUTCNTS  EQU   0
OCOUNT   EQU   OUTCNTS+1
TOUTCNTS EQU   0
TCOUNT   EQU   TOUTCNTS+1
OUTPUT   EQU   0
CNTRL    EQU   OUTPUT
HEADING  EQU   OUTPUT+1
CSNO     EQU   HEADING+65
LINE0    EQU   0
LINE1    EQU   0
WORKPTR  EQU   0
DIVLINES EQU   OUTPUT+37
BITDESC  EQU   OUTPUT+9
BITNUMB  EQU   OUTPUT+6
BITBEG   EQU   OUTPUT+1
SSID0    EQU   OUTPUT+43
SSID1    EQU   OUTPUT+52
SSID2    EQU   OUTPUT+61
SSID3    EQU   OUTPUT+70
CNTSECT  EQU   OUTPUT+38
SSIDHEAD EQU   OUTPUT+53
*                                      START UNREFERENCED COMPONENTS
TEXT2    EQU   HEADING+66
TEXT     EQU   HEADING
TSLASH   EQU   TOUTCNTS+8
TSPARE1  EQU   TOUTCNTS+7
@NM00002 EQU   TOUTCNTS
OSLASH   EQU   OUTCNTS+8
OSPARE1  EQU   OUTCNTS+7
OSPARE   EQU   OUTCNTS
BYTE3    EQU   DRCACCM+192
BYTE2    EQU   DRCACCM+128
BYTE1    EQU   DRCACCM+64
BITS1TO7 EQU   BYTE0+8
BIT0     EQU   BYTE0
BYTEBIT3 EQU   DRCACCM+2
XXX      EQU   HOLD1+2
CSNUMB   EQU   HOLD1
HOLD2    EQU   HOLD
HOLD0    EQU   HOLDDBL
WORK3    EQU   WORK1+1
RESTBITS EQU   WORK2
CURRBIT  EQU   WORK2
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
SDARPTID EQU   PRT0CALL+133
LINE     EQU   OUTLINE+1
ANSI     EQU   OUTLINE
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
DCK00PTR EQU   CVTPTRS0+64
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
PARMPTR  EQU   CVTPTRS0+8
SDATAPTR EQU   CVTPTRS0+4
DATAPTR  EQU   CVTPTRS0
*                                      END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ISDADRC1,(C'PLS0122',0603,75313)
