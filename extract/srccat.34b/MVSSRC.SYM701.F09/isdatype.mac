         TITLE 'SDA PRINT ROUTINE FOR SYSTERM                          *
                        '
ISDATYPE CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(8)                                              0001
         DC    C'ISDATYPE'                                         0001
ISDATYPC DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00072-ISDATYPC)
         ENTRY ISDATYPC
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         ISDAPSPC R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 MVC   @PC00001(4),0(@01)                                  0001
*/* RETCODE=0 = OPEN AND WRITE SUCCESSFUL                    @Y30LB55*/
*/* RETCODE=4 = OPEN FAILED. MISSING DD CARD                 @Y30LB55*/
*/* RETCODE=12 = WRITE ERROR ON OUTPUT                       @Y30LB55*/
*/* RETCODE=24 = NO SPACE FOR ISDATYPE WORKAREA              @Y30LB55*/
*                                                                  0011
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO ISDACVT    0011
*                                                            @Y30LB55*/
         L     @10,@PC00001                                        0011
         L     CVTPTR,WORKPTR(,@10)                                0011
*   RETCODE=0;                                             /*@Y30LB55*/
         SLR   @10,@10                                             0012
         LR    RETCODE,@10                                         0012
*                                                                  0013
*   /*****************************************************************/
*   /*                                                               */
*   /* GET CORE FOR ISDATYPE WORKAREA                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0013
*   IF TYPE0PTR=0 THEN              /* NO WORKAREA           @Y30LB55*/
         C     @10,TYPE0PTR(,CVTPTR)                               0013
         BNE   @RF00013                                            0013
*     DO;                           /* NONE, GET IT          @Y30LB55*/
*       CORELEN=LENGTH(TYPEWORK);   /* SET AREA LENGTH       @Y30LB55*/
         MVC   CORELEN(3,CVTPTR),@CF00155+1                        0015
*       SPNO=TYPESPNO;              /* SET SUBPOOL NUMBER    @Y30LB55*/
         MVC   SPNO(1,CVTPTR),TYPESPNO                             0016
*       RFY                                                        0017
*         R1 RSTD;                                         /*@Y30LB55*/
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/
         LA    R1,WORKCALL(,CVTPTR)                                0018
*       CALL ISDAGET1;              /* GET CORE              @Y30LB55*/
         L     @15,@CV00110                                        0019
         BALR  @14,@15                                             0019
*       RFY                                                        0020
*         R15 RSTD;                                        /*@Y30LB55*/
*       RETCODE=R15;                /* SAVE GET1 RETURN CODE @Y30LB55*/
         LR    RETCODE,R15                                         0021
*       RFY                                                        0022
*        (R1,                                                      0022
*         R15) UNRSTD;              /* RELEASE REGS          @Y30LB55*/
*       TYPE0PTR=COREADDR;          /* STORE ADDR IN ISDACVT @Y30LB55*/
         L     @10,COREADDR(,CVTPTR)                               0023
         ST    @10,TYPE0PTR(,CVTPTR)                               0023
*       TYPWKPTR=TYPE0PTR;          /* SET LOCAL PTR TO TYPEWORK   0024
*                                                            @Y30LB55*/
         LR    TYPWKPTR,@10                                        0024
*       IF RETCODE=0 THEN           /* GOT CORE              @Y30LB55*/
         LTR   RETCODE,RETCODE                                     0025
         BNZ   @RF00025                                            0025
*         DO;                       /* YES, INITIALIZE TYPEWORK    0026
*                                                            @Y30LB55*/
*           PRINTDCB=DCBSTAT;       /* MOVE DCB INTO WORKAREA@Y30LB55*/
         MVC   PRINTDCB(96,TYPWKPTR),DCBSTAT                       0027
*           OPENLIST=OPENSTAT;      /* MOVE OPEN LIST INTO WORKAREA
*                                                            @Y30LB55*/
         MVC   OPENLIST(4,TYPWKPTR),OPENSTAT                       0028
*           CLOSLIST=CLOSSTAT;      /* MOVE CLOSE LIST INTO WORKAREA
*                                                            @Y30LB55*/
         MVC   CLOSLIST(4,TYPWKPTR),CLOSSTAT                       0029
*           RETCODEP=0;             /* INIT RETCODEP         @Y30LB55*/
         MVI   RETCODEP(TYPWKPTR),X'00'                            0030
*         END;                      /* END INITIALIZE        @Y30LB55*/
*       ELSE                        /* BAD RETURN FROM ISDAGET1    0032
*                                                            @Y30LB55*/
*         RETCODE=24;               /* SET RETURN CODE TO NO CORE  0032
*                                                            @Y30LB55*/
         B     @RC00025                                            0032
@RF00025 LA    RETCODE,24                                          0032
*     END;                          /* END GET CORE SECTION  @Y30LB55*/
*   ELSE                            /* YES, HAVE WORKAREA    @Y30LB55*/
*    DO;                            /* NOT FIRST CALL        @Y30LB55*/
         B     @RC00013                                            0034
@RF00013 DS    0H                                                  0035
*     TYPWKPTR=TYPE0PTR;            /* SET LOCAL PTR TO TYPEWORK   0035
*                                                            @Y30LB55*/
         L     TYPWKPTR,TYPE0PTR(,CVTPTR)                          0035
*     RETCODE=RETCODEP;             /* RESET TO LAST RETCODE @Y30LB55*/
         SLR   RETCODE,RETCODE                                     0036
         IC    RETCODE,RETCODEP(,TYPWKPTR)                         0036
*    END;                           /* END NOT FIRST CALL    @Y30LB55*/
*                                                                  0038
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO PRINT A LINE ON SYSTERM                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0038
*   IF RETCODE=0 THEN               /* HAVE WORKAREA         @Y30LB55*/
@RC00013 LTR   RETCODE,RETCODE                                     0038
         BNZ   @RF00038                                            0038
*     DO;                           /* YES                   @Y30LB55*/
*       IF OFLAGS(4)^='1'B THEN     /* IS DCB OPEN           @Y30LB55*/
         TM    OFLAGS(TYPWKPTR),B'00010000'                        0040
         BO    @RF00040                                            0040
*         DO;                       /* NO, OPEN IT           @Y30LB55*/
*           RFY                                                    0042
*            (R1,                                                  0042
*             R6) RSTD;                                    /*@Y30LB55*/
*           R1=ADDR(OPENLIST);      /* R1 -> OPENLIST        @Y30LB55*/
         LR    R1,TYPWKPTR                                         0043
*           R6=ADDR(PRINTDCB);      /* R6 -> DCB             @Y30LB55*/
         LA    R6,PRINTDCB(,TYPWKPTR)                              0044
*           GEN( OPEN  ((R6),OUTPUT),MF=(E,(R1)))                  0045
*           FLOWS(BLOCKFIX,EOD);                           /*@Y30LB55*/
          OPEN  ((R6),OUTPUT),MF=(E,(R1))
*           RFY                                                    0046
*            (R1,                                                  0046
*             R6) UNRSTD;                                  /*@Y30LB55*/
*           IF OFLAGS(4)='1'B THEN  /* OPEN                  @Y30LB55*/
         TM    OFLAGS(TYPWKPTR),B'00010000'                        0047
         BNO   @RF00047                                            0047
*             RETCODE=0;            /* YES, SET GOOD RETURN  @Y30LB55*/
         SLR   RETCODE,RETCODE                                     0048
*           ELSE                    /* NO, BAD OPEN          @Y30LB55*/
*             RETCODE=4;            /* MISSING DD CARD       @Y30LB55*/
         B     @RC00047                                            0049
@RF00047 LA    RETCODE,4                                           0049
*         END;                      /* END OPEN CODE         @Y30LB55*/
*       ELSE                        /* PRINTDCB ALREADY OPEN @Y30LB55*/
*         RETCODE=0;                /* SET GOOD RETURN       @Y30LB55*/
         B     @RC00040                                            0051
@RF00040 SLR   RETCODE,RETCODE                                     0051
*       IF RETCODE=0 THEN           /* ANY ERRORS YET        @Y30LB55*/
@RC00040 LTR   RETCODE,RETCODE                                     0052
         BNZ   @RF00052                                            0052
*         DO;                       /* NO, PRINT OUTLINE     @Y30LB55*/
*           RFY                                                    0054
*            (R6,                                                  0054
*             R7) RSTD;                                    /*@Y30LB55*/
*           R6=ADDR(PRINTDCB);      /* SET R6=ADDR DCB       @Y30LB55*/
         LA    R6,PRINTDCB(,TYPWKPTR)                              0055
*           R7=ADDR(OUTLINE);       /* SET R7 = ADDR OF OUTLINE    0056
*                                                            @Y30LB55*/
         LA    R7,OUTLINE(,CVTPTR)                                 0056
*           GEN(PUT   (R6),(R7))                                   0057
*           FLOWS(EOD);                                    /*@Y30LB55*/
         PUT   (R6),(R7)
*           RFY                                                    0058
*            (R6,                                                  0058
*             R7) UNRSTD;                                  /*@Y30LB55*/
*         END;                      /* END PRINT CODE        @Y30LB55*/
*       ELSE                        /* BAD RETURN FROM OPEN  @Y30LB55*/
*         RETCODEP=RETCODE;         /* SAVE BAD RETURN CODE  @Y30LB55*/
         B     @RC00052                                            0060
@RF00052 STC   RETCODE,RETCODEP(,TYPWKPTR)                         0060
*     END;                          /* END OPEN AND PUT CODE @Y30LB55*/
*   ELSE                                                           0062
*     ;                             /* BAD RETURN FROM ISDAGET1    0062
*                                                            @Y30LB55*/
@RF00038 DS    0H                                                  0063
*   RETURN CODE(RETCODE);           /* RETURN WITH CONDCODE  @Y30LB55*/
@RC00038 L     @13,4(,@13)                                         0063
         L     @00,@SIZDATD                                        0063
         LR    @01,@11                                             0063
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0063
         L     @14,12(,@13)                                        0063
         LM    @00,@12,20(@13)                                     0063
         BR    @14                                                 0063
*                                                                  0064
*   /*****************************************************************/
*   /*                                                               */
*   /* EOD - SYNAD RETURN FROM PUT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0064
*EOD:                                                              0064
*   RETCODE=12;                     /* SET SYNAD RETURN CODE @Y30LB55*/
EOD      LA    RETCODE,12                                          0064
*   RETCODEP=RETCODE;               /* SAVE BAD RETURN CODE  @Y30LB55*/
         STC   RETCODE,RETCODEP(,TYPWKPTR)                         0065
*   RETURN CODE(RETCODE);                                  /*@Y30LB55*/
*                                                                  0066
         L     @13,4(,@13)                                         0066
         L     @00,@SIZDATD                                        0066
         LR    @01,@11                                             0066
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0066
         L     @14,12(,@13)                                        0066
         LM    @00,@12,20(@13)                                     0066
         BR    @14                                                 0066
*   /*****************************************************************/
*   /*                                                               */
*   /* BLOCKFIX - EXITLIST PROC TO ADD DEFAULT BLKSIZE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0067
*BLOCKFIX:                                                         0067
*   PROC OPTIONS(NOSAVE);           /* EXITLIST PROC         @Y30LB55*/
BLOCKFIX DS    0H                                                  0068
*   IF DCBBLKSI=ZERO2 THEN          /* WAS BLKSIZE SUPPLIED IN DD  0068
*                                      STATEMENT             @Y30LB55*/
         CLC   DCBBLKSI(2,TYPWKPTR),@CB00134                       0068
         BNE   @RF00068                                            0068
*     DCBBLKSI=BLKSIZED;            /* NO, MOVE IN DEFAULT   @Y30LB55*/
         MVC   DCBBLKSI(2,TYPWKPTR),@CH00131                       0069
*   ELSE                                                           0070
*     ;                             /* YES, BLKSIZE OK       @Y30LB55*/
@RF00068 DS    0H                                                  0071
*   END BLOCKFIX;                   /* RETURN TO OPEN        @Y30LB55*/
@EL00002 DS    0H                                                  0071
@EF00002 DS    0H                                                  0071
@ER00002 BR    @14                                                 0071
*   /*****************************************************************/
*   /*                                                               */
*   /* ISDATYPC - ENTRY TO CLOSE SYSTERM AND FREE TYPEWORK           */
*   /*                                                               */
*   /*****************************************************************/
*ISDATYPC:                                                         0072
*   ENTRY(WORKPTR);                 /* ENTRY TO CLOSE SYSTERM@Y30LB55*/
@EP00072 MVC   @PC00001(4),0(@01)                                  0072
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO ISDACVT    0073
*                                                            @Y30LB55*/
         L     @10,@PC00001                                        0073
         L     CVTPTR,WORKPTR(,@10)                                0073
*   IF TYPE0PTR^=0 THEN             /* HAVE WORKAREA         @Y30LB55*/
         L     @10,TYPE0PTR(,CVTPTR)                               0074
         LTR   @10,@10                                             0074
         BZ    @RF00074                                            0074
*     DO;                           /* YES, FREE IT          @Y30LB55*/
*                                                                  0075
*       /*************************************************************/
*       /*                                                           */
*       /* CLOSE SYSTERM                                             */
*       /*                                                           */
*       /*************************************************************/
*       TYPWKPTR=TYPE0PTR;          /* SET LOCAL WORK PTR    @Y30LB55*/
         LR    TYPWKPTR,@10                                        0076
*       IF OFLAGS(4)='1'B THEN      /* DCB OPEN              @Y30LB55*/
         TM    OFLAGS(TYPWKPTR),B'00010000'                        0077
         BNO   @RF00077                                            0077
*         DO;                       /* YES, CLOSE IT         @Y30LB55*/
*           RFY                                                    0079
*            (R1,                                                  0079
*             R6) RSTD;                                    /*@Y30LB55*/
*           R1=ADDR(CLOSLIST);      /* R1 -> CLOSLIST        @Y30LB55*/
         LA    R1,CLOSLIST(,TYPWKPTR)                              0080
*           R6=ADDR(PRINTDCB);      /* R6 -> DCB             @Y30LB55*/
         LA    R6,PRINTDCB(,TYPWKPTR)                              0081
*           GEN( CLOSE ((R6)),MF=(E,(R1)));                /*@Y30LB55*/
          CLOSE ((R6)),MF=(E,(R1))
*           RFY                                                    0083
*            (R1,                                                  0083
*             R6) UNRSTD;                                  /*@Y30LB55*/
*         END;                      /* END CLOSE DCB         @Y30LB55*/
*       ELSE                                                       0085
*         ;                         /* DCB NOT OPEN          @Y30LB55*/
*                                                                  0085
@RF00077 DS    0H                                                  0086
*       /*************************************************************/
*       /*                                                           */
*       /* FREE TYPEWORK                                             */
*       /*                                                           */
*       /*************************************************************/
*       CORELEN=LENGTH(TYPEWORK);   /* MOVE LENGTH OF TYPEWORK     0086
*                                                            @Y30LB55*/
         MVC   CORELEN(3,CVTPTR),@CF00155+1                        0086
*       SPNO=TYPESPNO;              /* MOVE SUBPOOL NUMBER   @Y30LB55*/
         MVC   SPNO(1,CVTPTR),TYPESPNO                             0087
*       COREADDR=TYPE0PTR;          /* MOVE ADDRESS OF AREA  @Y30LB55*/
         MVC   COREADDR(4,CVTPTR),TYPE0PTR(CVTPTR)                 0088
*       RFY                                                        0089
*         R1 RSTD;                                         /*@Y30LB55*/
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/
         LA    R1,WORKCALL(,CVTPTR)                                0090
*       CALL ISDAFREE;              /* FREE TYPEWORK         @Y30LB55*/
         L     @15,@CV00111                                        0091
         BALR  @14,@15                                             0091
*       RFY                                                        0092
*         R1 UNRSTD;                                       /*@Y30LB55*/
*       TYPE0PTR=0;                 /* ZERO TYPE0PTR IN ISDACVT    0093
*                                                            @Y30LB55*/
         SLR   @10,@10                                             0093
         ST    @10,TYPE0PTR(,CVTPTR)                               0093
*     END;                          /* END CLOSE AND FREE    @Y30LB55*/
*   ELSE                                                           0095
*     ;                             /* NO WORK AREA          @Y30LB55*/
@RF00074 DS    0H                                                  0096
*   RETURN;                         /* RETURN TO ISDASDA0    @Y30LB55*/
@EL00001 L     @13,4(,@13)                                         0096
@EF00001 L     @00,@SIZDATD                                        0096
         LR    @01,@11                                             0096
         ISDAFSPC R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0096
         BR    @14                                                 0096
*                                                                  0097
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERATE DATA                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0097
*   GENERATE DATA DEFS(DCBSTAT,OPENSTAT,CLOSSTAT,EXITLIST);/*@Y30LB55*/
*   END ISDATYPE                                           /*@Y30LB55*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ISDACVT )                                        *
*;                                                                 0098
         B     @EL00001                                            0098
@DATA    DS    0H
@CH00131 DC    H'1197'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
ISDATYPE CSECT
         DS    0F
@CF00155 DC    F'105'
@DATD    DSECT
         DS    0D
ISDATYPE CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00110 DC    V(ISDAGET1)
@CV00111 DC    V(ISDAFREE)
@CV00109 DC    V(ISDAGET0)
         DS    0D
@CB00134 DC    X'0000'
TYPESPNO DC    X'00'
PATCH    DC    50X'00'
ISDATYPE CSECT
DCBSTAT  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSTERM,SYNAD=EOD,LRECL=133,  XX
               RECFM=FBA,EXLST=EXITLIST
OPENSTAT OPEN  (0,OUTPUT),MF=L
CLOSSTAT CLOSE (0),MF=L
         DS    0F
EXITLIST DC    XL1'85'                 FLAG FOR DCB  EXIT
         DC    AL3(BLOCKFIX)           ADDR OF BLOCKFIX ENTRY
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDATYPE CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCODE  EQU   @04
TYPWKPTR EQU   @03
CVTPTR   EQU   @02
R1       EQU   @01
R6       EQU   @06
R7       EQU   @07
R15      EQU   @15
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
TYPE0PTR EQU   CVTPTRS0+20
WORKCALL EQU   CVTPTRS0+96
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
TYPEWORK EQU   0
OPENLIST EQU   TYPEWORK
CLOSLIST EQU   TYPEWORK+4
PRINTDCB EQU   TYPEWORK+8
OFLAGS   EQU   PRINTDCB+48
DCBBLKSI EQU   PRINTDCB+62
RETCODEP EQU   TYPEWORK+104
WORKPTR  EQU   0
*                                      START UNREFERENCED COMPONENTS
@NM00003 EQU   PRINTDCB+49
@NM00002 EQU   PRINTDCB
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
@NM00001 EQU   PRT0CALL+133
LINE     EQU   OUTLINE+1
ANSI     EQU   OUTLINE
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DRC00PTR EQU   CVTPTRS0+76
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
DCK00PTR EQU   CVTPTRS0+64
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
PARMPTR  EQU   CVTPTRS0+8
SDATAPTR EQU   CVTPTRS0+4
DATAPTR  EQU   CVTPTRS0
*                                      END UNREFERENCED COMPONENTS
@RC00025 EQU   @RC00013
@RC00047 EQU   @RC00040
@RC00052 EQU   @RC00038
@ENDDATA EQU   *
         END   ISDATYPE,(C'PLS1552',0603,74253)
