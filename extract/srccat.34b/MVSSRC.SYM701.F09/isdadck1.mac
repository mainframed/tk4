         TITLE 'ISDADCK1 PRINT ROUTINE FOR DCK TLX                     *
                        '
ISDADCK1 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(8)                                              0001
         DC    C'ISDADCK1'                                         0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  LA    @12,4095(,@11)                                      0001
         USING @PSTART,@11                                         0001
         USING @PSTART+4095,@12                                    0001
         L     @00,@SIZDATD                                        0001
         ISDAGSPC R,LV=(0)
         LR    @10,@01                                             0001
         USING @DATD,@10                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @10,8(,@13)                                         0001
         LR    @13,@10                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0028
*      /* HOUSEKEEPING                                       @Y30LB54*/
*                                                                  0028
*   CVTPTR=WORKPTR;                 /*                       @Y30LB54*/
         L     @15,@PC00001                                        0028
         L     CVTPTR,WORKPTR(,@15)                                0028
*   LPARMPTR=PARMPTR;               /* BASE FOR PARMS        @Y30LB54*/
         L     LPARMPTR,PARMPTR(,CVTPTR)                           0029
*   DCKWKPTR=DCK00PTR;              /* SET LOCAL PTR TO WORK @ZM30975*/
         L     DCKWKPTR,DCK00PTR(,CVTPTR)                          0030
*   RETCODE=0;                      /*                       @Y30LB54*/
*                                                                  0031
         SLR   @15,@15                                             0031
         LR    RETCODE,@15                                         0031
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST TO DETERMINE IF WE PRODUCE THIS REPORT                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0032
*   IF COUNTRP8=0 THEN                                             0032
         C     @15,COUNTRP8(,DCKWKPTR)                             0032
         BE    @RT00032                                            0032
*     ;                             /*                       @Y30LB54*/
*   ELSE                                                           0034
*                                                                  0034
*     /***************************************************************/
*     /*                                                             */
*     /* DCK MAIN PROCESSOR                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0034
*     DO LIBCTR=1 TO 4 BY 1;        /* PROCESS 4 LIBRARIES   @Y30LB54*/
         LA    @15,1                                               0034
         ST    @15,LIBCTR(,DCKWKPTR)                               0034
@DL00034 DS    0H                                                  0035
*       BITHDCTR=0;                 /* RESET BIT HEADER COUNT@Y30LB54*/
         SLR   @15,@15                                             0035
         ST    @15,BITHDCTR(,DCKWKPTR)                             0035
*       IF LIBPTR(LIBCTR)^=0 THEN   /* NO REPORT NEEDED FOR THIS CS
*                                                            @Y30LB54*/
         L     @15,LIBCTR(,DCKWKPTR)                               0036
         SLA   @15,2                                               0036
         L     @15,LIBPTR-5(@15,DCKWKPTR)                          0036
         LA    @15,0(,@15)                                         0036
         LTR   @15,@15                                             0036
         BZ    @RF00036                                            0036
*         DO;                       /*                       @Y30LB54*/
*           CALL RPT8HDR;           /* GET THE HEADER PORTION OF THE
*                                      REPORT                @Y30LB54*/
         BAL   @14,RPT8HDR                                         0038
*           DO BYTECTR=1 TO 4 BY 1; /* WE WILL DISPLAY 4 BYTES WORTH
*                                      OF DATA               @Y30LB54*/
         LA    @15,1                                               0039
         ST    @15,BYTECTR(,DCKWKPTR)                              0039
@DL00039 DS    0H                                                  0040
*             CALL RPT8BYTE;        /*                       @Y30LB54*/
         BAL   @14,RPT8BYTE                                        0040
*             DO BITCTR=1 TO 8 BY 1;/* WE WILL DISPLAY 8 BITS PER  0041
*                                      BYTE                  @Y30LB54*/
         LA    @15,1                                               0041
         ST    @15,BITCTR(,DCKWKPTR)                               0041
@DL00041 DS    0H                                                  0042
*               CALL RPT8BIT;       /*                       @Y30LB54*/
         BAL   @14,RPT8BIT                                         0042
*             END;                  /*                       @Y30LB54*/
         LA    @15,1                                               0043
         AL    @15,BITCTR(,DCKWKPTR)                               0043
         ST    @15,BITCTR(,DCKWKPTR)                               0043
         CH    @15,@CH00071                                        0043
         BNH   @DL00041                                            0043
*           END;                    /*                       @Y30LB54*/
         LA    @15,1                                               0044
         AL    @15,BYTECTR(,DCKWKPTR)                              0044
         ST    @15,BYTECTR(,DCKWKPTR)                              0044
         CH    @15,@CH00051                                        0044
         BNH   @DL00039                                            0044
*           LINE(1:30)='×-----------------------------';/*   @Y30LB54*/
         MVC   LINE(30,CVTPTR),@CC00246                            0045
*           LINE(30:84)=                                           0046
*'×-----×-----×-----×-----×-----×-----×-----×-----×-----×';/*@Y30LB54*/
         MVC   LINE+29(55,CVTPTR),@CC00250                         0046
*           CALL ISDAPRT0(WORKPTR); /*                       @Y30LB54*/
         L     @15,@PC00001                                        0047
         ST    @15,@AL00001                                        0047
         L     @15,@CV00042                                        0047
         LA    @01,@AL00001                                        0047
         BALR  @14,@15                                             0047
*         END;                      /*                       @Y30LB54*/
*       ELSE                                                       0049
*         ;                         /*                       @Y30LB54*/
@RF00036 DS    0H                                                  0050
*     END;                          /*                       @Y30LB54*/
         LA    @15,1                                               0050
         AL    @15,LIBCTR(,DCKWKPTR)                               0050
         ST    @15,LIBCTR(,DCKWKPTR)                               0050
         CH    @15,@CH00051                                        0050
         BNH   @DL00034                                            0050
*                                                                  0051
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST TO DETERMINE IF WE PRODUCE THIS REPORT                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0051
*   IF COUNTRP9=0 THEN                                             0051
@RT00032 ICM   @15,15,COUNTRP9(DCKWKPTR)                           0051
         BZ    @RT00051                                            0051
*     ;                             /*                       @Y30LB54*/
*   ELSE                                                           0053
*                                                                  0053
*     /***************************************************************/
*     /*                                                             */
*     /* TLX MAIN PROCESSOR                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0053
*     DO;                           /*                       @Y30LB54*/
*       DO LIBCTR=1 TO 4 BY 1;      /* PROCESS 4 LIBRARIES   @Y30LB54*/
         LA    @15,1                                               0054
         ST    @15,LIBCTR(,DCKWKPTR)                               0054
@DL00054 DS    0H                                                  0055
*         BITHDCTR=0;               /* RESET BIT HEADER COUNT@Y30LB54*/
         SLR   @15,@15                                             0055
         ST    @15,BITHDCTR(,DCKWKPTR)                             0055
*         IF LIBPTR(LIBCTR)^=0 THEN                                0056
         L     @15,LIBCTR(,DCKWKPTR)                               0056
         SLA   @15,2                                               0056
         L     @15,LIBPTR-5(@15,DCKWKPTR)                          0056
         LA    @15,0(,@15)                                         0056
         LTR   @15,@15                                             0056
         BZ    @RF00056                                            0056
*           DO;                     /*                       @Y30LB54*/
*             CALL RPT9HDR;         /*                       @Y30LB54*/
         BAL   @14,RPT9HDR                                         0058
*             DO VALCTR=0 TO 31 BY 1;/* PROCESS 31LINES      @Y30LB54*/
         SLR   @15,@15                                             0059
         ST    @15,VALCTR(,DCKWKPTR)                               0059
@DL00059 DS    0H                                                  0060
*               CALL RPT9DATA;      /*                       @Y30LB54*/
         BAL   @14,RPT9DATA                                        0060
*             END;                  /*                       @Y30LB54*/
         LA    @15,1                                               0061
         AL    @15,VALCTR(,DCKWKPTR)                               0061
         ST    @15,VALCTR(,DCKWKPTR)                               0061
         CH    @15,@CH00040                                        0061
         BNH   @DL00059                                            0061
*             LINE=' ----------------------------------------';    0062
         MVI   LINE+41(CVTPTR),C' '                                0062
         MVC   LINE+42(90,CVTPTR),LINE+41(CVTPTR)                  0062
         MVC   LINE(41,CVTPTR),@CC00256                            0062
*             LINE(42:81)='---------------------    ---------------';
         MVC   LINE+41(40,CVTPTR),@CC00262                         0063
*             LINE(82:123)='------------------------------------------'
*                 ;                 /*                       @ZA00691*/
         MVC   LINE+81(42,CVTPTR),@CC00267                         0064
*             LINE(124:127)='----'; /*                       @ZA00691*/
         MVC   LINE+123(4,CVTPTR),@CC00273                         0065
*             CALL ISDAPRT0(WORKPTR);/*                      @Y30LB54*/
         L     @15,@PC00001                                        0066
         ST    @15,@AL00001                                        0066
         L     @15,@CV00042                                        0066
         LA    @01,@AL00001                                        0066
         BALR  @14,@15                                             0066
*             ANSI='0';             /* DOUBLE SPACE OUTPUT   @Y30LB54*/
         MVI   ANSI(CVTPTR),C'0'                                   0067
*             LINE=' INDEX PGM IS MSS BYTE 22(BITS 0-4)';  /*@ZM30975*/
         MVI   LINE+35(CVTPTR),C' '                                0068
         MVC   LINE+36(96,CVTPTR),LINE+35(CVTPTR)                  0068
         MVC   LINE(35,CVTPTR),@CC00274                            0068
*             LINE(67:101)='THREAD PGM IS MSS BYTE 31(BITS 0-4)'; /*
*                                                            @ZA00691*/
         MVC   LINE+66(35,CVTPTR),@CC00279                         0069
*             CALL ISDAPRT0(WORKPTR);/*                      @Y30LB54*/
         L     @15,@PC00001                                        0070
         ST    @15,@AL00001                                        0070
         L     @15,@CV00042                                        0070
         LA    @01,@AL00001                                        0070
         BALR  @14,@15                                             0070
*             LINE=' U = NORMAL INDEXER PROGRAM STEP AT END OF UNLOAD';
         MVI   LINE+49(CVTPTR),C' '                                0071
         MVC   LINE+50(82,CVTPTR),LINE+49(CVTPTR)                  0071
         MVC   LINE(49,CVTPTR),@CC00282                            0071
*             LINE(67:113)='U = NORMAL THREAD PROGRAM STEP AT END OF UN
*OAD';                              /* PRINT U MESSAGE       @ZA00691*/
         MVC   LINE+66(47,CVTPTR),@CC00287                         0072
*             CALL ISDAPRT0(WORKPTR);/* PRINT IT             @ZA00691*/
         L     @15,@PC00001                                        0073
         ST    @15,@AL00001                                        0073
         L     @15,@CV00042                                        0073
         LA    @01,@AL00001                                        0073
         BALR  @14,@15                                             0073
*             LINE=' L = NORMAL INDEXER PROGRAM STEP AT END OF LOAD';
         MVI   LINE+47(CVTPTR),C' '                                0074
         MVC   LINE+48(84,CVTPTR),LINE+47(CVTPTR)                  0074
         MVC   LINE(47,CVTPTR),@CC00291                            0074
*             LINE(67:111)='L = NORMAL THREAD PROGRAM STEP AT END OF LO
*D';                                /* PRINT L MESSAGE       @ZA00691*/
         MVC   LINE+66(45,CVTPTR),@CC00296                         0075
*             CALL ISDAPRT0(WORKPTR);/* PRINT IT             @ZA00691*/
         L     @15,@PC00001                                        0076
         ST    @15,@AL00001                                        0076
         L     @15,@CV00042                                        0076
         LA    @01,@AL00001                                        0076
         BALR  @14,@15                                             0076
*           END;                    /*                       @Y30LB54*/
*         ELSE                                                     0078
*           ;                       /*                       @Y30LB54*/
@RF00056 DS    0H                                                  0079
*       END;                        /*                       @Y30LB54*/
         LA    @15,1                                               0079
         AL    @15,LIBCTR(,DCKWKPTR)                               0079
         ST    @15,LIBCTR(,DCKWKPTR)                               0079
         CH    @15,@CH00051                                        0079
         BNH   @DL00054                                            0079
*     END;                          /*                       @Y30LB54*/
*                                                                  0081
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL REPORTS PRODUCED AT THIS POINT                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0081
*   IF COUNTRP8=0&COUNTRP9=0 THEN                                  0081
@RT00051 SLR   @15,@15                                             0081
         C     @15,COUNTRP8(,DCKWKPTR)                             0081
         BNE   @RF00081                                            0081
         C     @15,COUNTRP9(,DCKWKPTR)                             0081
         BNE   @RF00081                                            0081
*     RETCODE=8;                    /* NO INPUT TO BE PROCESSED    0082
*                                                            @Y30LB54*/
         LA    RETCODE,8                                           0082
*   ELSE                                                           0083
*     IF COUNTRP9=0&CDCKTLX='03'X THEN /* DCK,TLX REQUESTED  @ZM30975*/
         B     @RC00081                                            0083
@RF00081 ICM   @15,15,COUNTRP9(DCKWKPTR)                           0083
         BNZ   @RF00083                                            0083
         CLI   CDCKTLX(LPARMPTR),X'03'                             0083
         BNE   @RF00083                                            0083
*       RETCODE=16;                 /* NO DATA FOR TLX       @ZM30975*/
         LA    RETCODE,16                                          0084
*     ELSE;                         /* RETCODE OK            @ZM30975*/
*                                                                  0085
@RF00083 DS    0H                                                  0086
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0086
*   CALL FREECORE;                  /* FREE ALL CORE         @Y30LB54*/
@RC00081 BAL   @14,FREECORE                                        0086
*   RETURN CODE(RETCODE);           /*                       @Y30LB54*/
         L     @13,4(,@13)                                         0087
         L     @00,@SIZDATD                                        0087
         LR    @01,@10                                             0087
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0087
         L     @14,12(,@13)                                        0087
         LM    @00,@12,20(@13)                                     0087
         BR    @14                                                 0087
*                                                                  0088
*   /*****************************************************************/
*   /*                                                               */
*   /* PRODUCE DCK MAIN HEADERS                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0088
*RPT8HDR:                                                          0088
*   PROC;                           /*                       @Y30LB54*/
RPT8HDR  STM   @14,@12,@SA00002                                    0088
*   LINE=' ';                       /* CLEAR LINE            @Y30LB54*/
         MVI   LINE+1(CVTPTR),C' '                                 0089
         MVC   LINE+2(130,CVTPTR),LINE+1(CVTPTR)                   0089
         MVI   LINE(CVTPTR),C' '                                   0089
*   LINE(53:55)='MSF';              /*                       @Y30LB54*/
         MVC   LINE+52(3,CVTPTR),@CC00308                          0090
*   LINE(1:35)='REPORT 8 - DRD DEVICE CHECK SUMMARY';/*      @ZM30730*/
         MVC   LINE(35,CVTPTR),@CC00310                            0091
*   LINE(78:114)='(DATA FROM MSS FORMAT 4, SA FORMAT 9)';/*  @Y30LB54*/
         MVC   LINE+77(37,CVTPTR),@CC00315                         0092
*   ANSI='1';                       /* EJECT                 @Y30LB54*/
         MVI   ANSI(CVTPTR),C'1'                                   0093
*   FULLWD1=57;                     /* POSITION TO PUT CONVERTED DATA
*                                                            @Y30LB54*/
         LA    @05,57                                              0094
         ST    @05,FULLWD1(,DCKWKPTR)                              0094
*   KICKPTR=LIBPTR(LIBCTR);         /* ESTABLISH COUNTER BASE@Y30LB54*/
         L     @15,LIBCTR(,DCKWKPTR)                               0095
         SLA   @15,2                                               0095
         L     @14,LIBPTR-5(@15,DCKWKPTR)                          0095
         LA    @14,0(,@14)                                         0095
         ST    @14,KICKPTR(,DCKWKPTR)                              0095
*   LIBNO(LIBCTR)=LIBNO(LIBCTR)-1;  /* ADJUST FOR TRUE READOUT     0096
*                                                            @Y30LB54*/
         SLR   @14,@14                                             0096
         IC    @14,LIBNO-4(@15,DCKWKPTR)                           0096
         BCTR  @14,0                                               0096
         STC   @14,LIBNO-4(@15,DCKWKPTR)                           0096
*   FOURBITS=LIBNO(LIBCTR)&'0F'X;   /* PICK OFF BOTTOM HALF  @Y30LB54*/
         ST    @15,@TF00001                                        0097
         ALR   @15,DCKWKPTR                                        0097
         MVC   FOURBITS(1,DCKWKPTR),LIBNO-4(@15)                   0097
         NI    FOURBITS(DCKWKPTR),X'0F'                            0097
*   FOURBITS=FOURBITS+1;            /*                       @Y30LB54*/
         LA    @15,1                                               0098
         SLR   @09,@09                                             0098
         IC    @09,FOURBITS(,DCKWKPTR)                             0098
         ALR   @09,@15                                             0098
         STC   @09,FOURBITS(,DCKWKPTR)                             0098
*   LINE(FULLWD1:FULLWD1)=HEXREP(FOURBITS);/*                @Y30LB54*/
         ALR   @05,CVTPTR                                          0099
         LA    @08,HEXREP-1(@09)                                   0099
         MVC   LINE-1(1,@05),0(@08)                                0099
*   LIBNO(LIBCTR)=LIBNO(LIBCTR)+1;  /* ALLOW FOR START AT 0  @Y30LB54*/
         ALR   @14,@15                                             0100
         L     @05,@TF00001                                        0100
         STC   @14,LIBNO-4(@05,DCKWKPTR)                           0100
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0101
         ST    @05,@AL00001                                        0101
         L     @15,@CV00042                                        0101
         LA    @01,@AL00001                                        0101
         BALR  @14,@15                                             0101
*   ANSI='0';                       /* DOUBLE SPACE          @Y30LB54*/
         MVI   ANSI(CVTPTR),C'0'                                   0102
*   LINE = ' ';                     /*BLANK LINE             @ZM02889*/
         MVI   LINE+1(CVTPTR),C' '                                 0103
         MVC   LINE+2(130,CVTPTR),LINE+1(CVTPTR)                   0103
         MVI   LINE(CVTPTR),C' '                                   0103
*   CALL ISDAPRT0(WORKPTR);         /*PRINT IT               @ZM02889*/
         L     @05,@PC00001                                        0104
         ST    @05,@AL00001                                        0104
         L     @15,@CV00042                                        0104
         LA    @01,@AL00001                                        0104
         BALR  @14,@15                                             0104
*   LINE(47:54) = 'DRD SSID';       /*SUB HEADING            @ZM02889*/
         MVC   LINE+46(8,CVTPTR),@CC00322                          0105
*   ANSI = ' ';                     /*SINGLE SPACE           @ZM02889*/
         MVI   ANSI(CVTPTR),C' '                                   0106
*   CALL ISDAPRT0(WORKPTR);         /*PRINT IT               @ZM02889*/
         L     @05,@PC00001                                        0107
         ST    @05,@AL00001                                        0107
         L     @15,@CV00042                                        0107
         LA    @01,@AL00001                                        0107
         BALR  @14,@15                                             0107
*   LINE='×             ';          /*                       @Y30LB54*/
         MVI   LINE+14(CVTPTR),C' '                                0108
         MVC   LINE+15(117,CVTPTR),LINE+14(CVTPTR)                 0108
         MVC   LINE(14,CVTPTR),@CC00323                            0108
*   LINE(30:84)=                                                   0109
*       '×  200×  201×  202×  203×  204×  205×  206×  207×TOTAL×'; 0109
         MVC   LINE+29(55,CVTPTR),@CC00325                         0109
*   DO CTR=34 TO 76 BY 6;           /* INSERT MSF NUMBERS IN SSID  0110
*                                                            @Y30LB54*/
         LA    @05,34                                              0110
         ST    @05,CTR(,DCKWKPTR)                                  0110
@DL00110 DS    0H                                                  0111
*     LINE(CTR)=HEXREP(FOURBITS);   /*                       @Y30LB54*/
         L     @05,CTR(,DCKWKPTR)                                  0111
         ALR   @05,CVTPTR                                          0111
         SLR   @01,@01                                             0111
         IC    @01,FOURBITS(,DCKWKPTR)                             0111
         LA    @15,HEXREP-1(@01)                                   0111
         MVC   LINE-1(1,@05),0(@15)                                0111
*   END;                                                   /*@Y30LB54*/
         LA    @05,6                                               0112
         AL    @05,CTR(,DCKWKPTR)                                  0112
         ST    @05,CTR(,DCKWKPTR)                                  0112
         CH    @05,@CH00330                                        0112
         BNH   @DL00110                                            0112
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0113
         ST    @05,@AL00001                                        0113
         L     @15,@CV00042                                        0113
         LA    @01,@AL00001                                        0113
         BALR  @14,@15                                             0113
*   RETURN CODE(RETCODE);           /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0114
         L     @14,@SA00002                                        0114
         LM    @00,@12,@SA00002+8                                  0114
         BR    @14                                                 0114
*   END RPT8HDR;                    /*                       @Y30LB54*/
*                                                                  0116
*   /*****************************************************************/
*   /*                                                               */
*   /* PRODUCE BYTE HEADER                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0116
*RPT8BYTE:                                                         0116
*   PROC;                           /*                       @Y30LB54*/
RPT8BYTE STM   @14,@12,@SA00003                                    0116
*   DCL                                                            0117
*     1 BYTEHDR8(4) STATIC LOCAL,                                  0117
*      2 * CHAR(13) INIT('1 MSS BYTE 18','2 MSS BYTE 19','3 MSS BYTE 20
*            );                     /* HEADERS FOR REPORT    @Y30LB54*/
*   LINE(1:30)='×-----------------------------';/*           @Y30LB54*/
         MVC   LINE(30,CVTPTR),@CC00246                            0118
*   LINE(30:84)=                                                   0119
*       '×-----×-----×-----×-----×-----×-----×-----×-----×-----×'; 0119
         MVC   LINE+29(55,CVTPTR),@CC00250                         0119
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0120
         ST    @05,@AL00001                                        0120
         L     @15,@CV00042                                        0120
         LA    @01,@AL00001                                        0120
         BALR  @14,@15                                             0120
*   LINE='×              ';         /*                       @Y30LB54*/
         MVI   LINE+15(CVTPTR),C' '                                0121
         MVC   LINE+16(116,CVTPTR),LINE+15(CVTPTR)                 0121
         MVC   LINE(15,CVTPTR),@CC00343                            0121
*   LINE(30:84)=                                                   0122
*       '×     ×     ×     ×     ×     ×     ×     ×     ×     ×'; 0122
         MVC   LINE+29(55,CVTPTR),@CC00345                         0122
*   IF BYTECTR=1 THEN                                              0123
         CLC   BYTECTR(4,DCKWKPTR),@CF00048                        0123
         BNE   @RF00123                                            0123
*     LINE(1:27)='×SA SENSE BYTE 0 MSS BYTE 4';/*            @YE0LB54
*                                                            @Y30LB54*/
         MVC   LINE(27,CVTPTR),@CC00350                            0124
*   ELSE                                                           0125
*     DO;                                                  /*@Y30LB54*/
         B     @RC00123                                            0125
@RF00123 DS    0H                                                  0126
*       LINE(2:15)='DRD SENSE BYTE';/* @Y300LB54             @Y30LB54*/
         MVC   LINE+1(14,CVTPTR),@CC00353                          0126
*       LINE(17:29)=BYTEHDR8(BYTECTR-1);/*                   @Y30LB54*/
         L     @05,BYTECTR(,DCKWKPTR)                              0127
         MH    @05,@CH00336                                        0127
         LA    @01,BYTEHDR8-26(@05)                                0127
         MVC   LINE+16(13,CVTPTR),0(@01)                           0127
*     END;                          /*                       @Y30LB54*/
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
@RC00123 L     @05,@PC00001                                        0129
         ST    @05,@AL00001                                        0129
         L     @15,@CV00042                                        0129
         LA    @01,@AL00001                                        0129
         BALR  @14,@15                                             0129
*   RETURN CODE(RETCODE);           /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0130
         L     @14,@SA00003                                        0130
         LM    @00,@12,@SA00003+8                                  0130
         BR    @14                                                 0130
*   END RPT8BYTE;                   /*                       @Y30LB54*/
*                                                                  0132
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS BITS FOR DCK REPORT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0132
*RPT8BIT:                                                          0132
*   PROC;                           /*                       @Y30LB54*/
*                                                                  0132
RPT8BIT  STM   @14,@12,@SA00004                                    0132
*   /*****************************************************************/
*   /*                                                               */
*   /* DCK BIT HEADERS                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*   DCL                                                            0133
*     BIT8HDR(8) CHAR(27) BASED(TEMPPTR);/*                  @Y30LB54*/
*   DCL                                                            0134
*     1 BITHDR8 STATIC LOCAL,                                      0134
*      2 BIT80(8) CHAR(27) INIT('BIT 0 COMMAND REJECT',            0134
*            'BIT 1 INTERVENTION REQUIRED','BIT 2 BUS OUT PARITY', 0134
*            'BIT 3 EQUIPMENT CHECK','BIT 4 DATA CHECK',           0134
*            'BIT 5 OVERRUN (NOT USED)','BIT 6 NOT USED',          0134
*            'BIT 7 ENVIRONMENTAL DATA'),                          0134
*      2 BIT8A(8) CHAR(27) INIT('BIT 0 ERROR TIMEOUT',             0134
*            'BIT 1 SERVO CHECK','BIT 2 CABLE CHECK',              0134
*            'BIT 3 WRITE DISABLE','BIT 4 OV/UV CHECK',            0134
*            'BIT 5 VACUUM CHECK','BIT 6 PNEUMATIC CHECK',         0134
*            'BIT 7 WRITE DRIVER CHECK'),                          0134
*      2 BIT8B(8) CHAR(27) INIT('BIT 0 CARTRIDGE ENTRY',           0134
*            'BIT 1 CARTRIDGE EXIT','BIT 2 SEARCH CHECK',          0134
*            'BIT 3 INDEXER CHECK',                        /*@ZM31107*/
*            'BIT 4 THREAD/LOAD CHECK','BIT 5 UNLOAD CHECK',       0134
*            'BIT 6 B/O PARITY CHECK','BIT 7 TAG BUS PARITY CHECK'),
*      2 BIT8C(8) CHAR(27) INIT('BIT 0 NOT USED',          /*@ZM31107*/
*            'BIT 1 SPOOL OVERCURRENT','BIT 2 SPOOL RUNAWAY/TACH', 0134
*            'BIT 3 DGC CHECK','BIT 4 ROTOR/TACH CHECK',           0134
*            'BIT 5 IHC/LIFTER CHECK','BIT 6 CAPSTAN CURRENT/TACH',
*            'BIT 7 CAPSTAN RUNAWAY/TACH');                /*@ZM31107*/
*   B8HDR(1)=ADDR(BIT80);           /*                       @Y30LB54*/
         LA    @05,BIT80                                           0135
         ST    @05,B8HDR(,DCKWKPTR)                                0135
*   B8HDR(2)=ADDR(BIT8A);           /*                       @Y30LB54*/
         LA    @05,BIT8A                                           0136
         ST    @05,B8HDR+4(,DCKWKPTR)                              0136
*   B8HDR(3)=ADDR(BIT8B);           /*                       @Y30LB54*/
         LA    @05,BIT8B                                           0137
         ST    @05,B8HDR+8(,DCKWKPTR)                              0137
*   B8HDR(4)=ADDR(BIT8C);           /*                       @Y30LB54*/
         LA    @05,BIT8C                                           0138
         ST    @05,B8HDR+12(,DCKWKPTR)                             0138
*   TOTROW=0;                       /* RESET ROW COUNTERS    @Y30LB54*/
         SLR   @05,@05                                             0139
         STH   @05,TOTROW(,DCKWKPTR)                               0139
*   LINE=' ';                       /*                       @Y30LB54*/
         MVI   LINE+1(CVTPTR),C' '                                 0140
         MVC   LINE+2(130,CVTPTR),LINE+1(CVTPTR)                   0140
         MVI   LINE(CVTPTR),C' '                                   0140
*   LINE(30:84)=                                                   0141
*       '×     ×     ×     ×     ×     ×     ×     ×     ×     ×'; 0141
         MVC   LINE+29(55,CVTPTR),@CC00345                         0141
*   TEMPPTR=B8HDR(BYTECTR);         /*                       @Y30LB54*/
         L     @05,BYTECTR(,DCKWKPTR)                              0142
         SLA   @05,2                                               0142
         L     @05,B8HDR-4(@05,DCKWKPTR)                           0142
         ST    @05,TEMPPTR(,DCKWKPTR)                              0142
*   LINE(1:1)='×';                  /*                       @Y30LB54*/
         MVI   LINE(CVTPTR),C'×'                                   0143
*   LINE(3:29)=BIT8HDR(BITCTR);     /*                       @Y30LB54*/
         L     @15,BITCTR(,DCKWKPTR)                               0144
         MH    @15,@CH00349                                        0144
         ALR   @05,@15                                             0144
         AL    @05,@CF00509                                        0144
         MVC   LINE+2(27,CVTPTR),BIT8HDR(@05)                      0144
*   CTR1=31;                        /* REPORT POSITION OF FIRST    0145
*                                      COUNTER               @Y30LB54*/
         MVC   CTR1(4,DCKWKPTR),@CF00040                           0145
*   DO CTR=1 TO 8 BY 1;             /*                       @Y30LB54*/
         LA    @05,1                                               0146
         ST    @05,CTR(,DCKWKPTR)                                  0146
@DL00146 DS    0H                                                  0147
*/*KICKPTR WAS SET UP BY RPT8HDR                             @Y30LB54*/
*                                                                  0147
*     EDREC=EDPAT;                  /* MOVE IN PATTERN       @Y30LB54*/
         MVC   EDREC(8,DCKWKPTR),EDPAT                             0147
*     TOTROW=TOTROW+COUNTER(CTR);   /* INCREMENT ROW COUNTERS@Y30LB54*/
         L     @05,CTR(,DCKWKPTR)                                  0148
         ALR   @05,@05                                             0148
         L     @01,KICKPTR(,DCKWKPTR)                              0148
         AL    @01,@CF00510                                        0148
         LH    @15,COUNTER(@05,@01)                                0148
         LH    @14,TOTROW(,DCKWKPTR)                               0148
         ALR   @14,@15                                             0148
         STH   @14,TOTROW(,DCKWKPTR)                               0148
*     TOTFINL(CTR)=TOTFINL(CTR)+COUNTER(CTR);/*              @Y30LB54*/
         LH    @14,TOTFINL-2(@05,DCKWKPTR)                         0149
         ALR   @14,@15                                             0149
         STH   @14,TOTFINL-2(@05,DCKWKPTR)                         0149
*     TOTGRND=TOTGRND+COUNTER(CTR); /* INCREMENT GRAND TOTAL COUNTER
*                                                            @Y30LB54*/
         LH    @05,TOTGRND(,DCKWKPTR)                              0150
         ALR   @05,@15                                             0150
         STH   @05,TOTGRND(,DCKWKPTR)                              0150
*     CVD(COUNTER(CTR),CHAR4);      /*                       @Y30LB54*/
         CVD   @15,@TS00001                                        0151
         MVC   CHAR4(4,DCKWKPTR),@TS00001+4                        0151
*     CHAR4(4)=CHAR4(4)×'0F'X;      /* PROTECT US FROM JUNK  @Y30LB54*/
         OI    CHAR4+3(DCKWKPTR),X'0F'                             0152
*     ED(EDREC,CHAR4);              /* FORMAT OUTPUT         @Y30LB54*/
         ED    EDREC(8,DCKWKPTR),CHAR4(DCKWKPTR)                   0153
*     LINE(CTR1:CTR1+4)=EDREC(4:8); /* MOVE FORMATTED OUPUT TO LINE
*                                                            @Y30LB54*/
         L     @05,CTR1(,DCKWKPTR)                                 0154
         ALR   @05,CVTPTR                                          0154
         MVC   LINE-1(5,@05),EDREC+3(DCKWKPTR)                     0154
*     CTR1=CTR1+6;                  /* NEXT PRINT POSITION   @Y30LB54*/
         L     @05,CTR1(,DCKWKPTR)                                 0155
         AH    @05,@CH00141                                        0155
         ST    @05,CTR1(,DCKWKPTR)                                 0155
*   END;                            /*                       @Y30LB54*/
         LA    @05,1                                               0156
         AL    @05,CTR(,DCKWKPTR)                                  0156
         ST    @05,CTR(,DCKWKPTR)                                  0156
         CH    @05,@CH00071                                        0156
         BNH   @DL00146                                            0156
*   EDREC=EDPAT;                    /* MOVE IN EDIT PATTERN  @Y30LB54*/
         MVC   EDREC(8,DCKWKPTR),EDPAT                             0157
*   CVD(TOTROW,CHAR4);              /* MAKE IT PRINTABLE     @Y30LB54*/
         LH    @05,TOTROW(,DCKWKPTR)                               0158
         CVD   @05,@TS00001                                        0158
         MVC   CHAR4(4,DCKWKPTR),@TS00001+4                        0158
*   CHAR4(4)=CHAR4(4)×'0F'X;        /* PROTECT SIGN          @Y30LB54*/
         OI    CHAR4+3(DCKWKPTR),X'0F'                             0159
*   ED(EDREC,CHAR4);                /*                       @Y30LB54*/
         ED    EDREC(8,DCKWKPTR),CHAR4(DCKWKPTR)                   0160
*   LINE(CTR1:CTR1+4)=EDREC(4:8);   /*                       @Y30LB54*/
         L     @05,CTR1(,DCKWKPTR)                                 0161
         ALR   @05,CVTPTR                                          0161
         MVC   LINE-1(5,@05),EDREC+3(DCKWKPTR)                     0161
*   KICKPTR=KICKPTR+16;             /* SET NEW BASE FOR NEXT COUNTER
*                                                            @Y30LB54*/
         LA    @05,16                                              0162
         AL    @05,KICKPTR(,DCKWKPTR)                              0162
         ST    @05,KICKPTR(,DCKWKPTR)                              0162
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0163
         ST    @05,@AL00001                                        0163
         L     @15,@CV00042                                        0163
         LA    @01,@AL00001                                        0163
         BALR  @14,@15                                             0163
*   RETURN CODE(RETCODE);           /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0164
         L     @14,@SA00004                                        0164
         LM    @00,@12,@SA00004+8                                  0164
         BR    @14                                                 0164
*   END RPT8BIT;                    /*                       @Y30LB54*/
*                                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* PRODUCE TLX MAIN HEADERS                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*RPT9HDR:                                                          0166
*   PROC;                           /*                       @Y30LB54*/
RPT9HDR  STM   @14,@12,@SA00005                                    0166
*   TOTGRND=0;                      /* RESET GRAND TOTAL     @Y30LB54*/
         SLR   @05,@05                                             0167
         STH   @05,TOTGRND(,DCKWKPTR)                              0167
*   SDARPTID=TLXID;                 /* MOVE REPORT 2 ID      @ZM30730*/
         MVC   SDARPTID(3,CVTPTR),@CC00149                         0168
*   LINE=' ';                       /* CLEAR LINE            @Y30LB54*/
         MVI   LINE+1(CVTPTR),C' '                                 0169
         MVC   LINE+2(130,CVTPTR),LINE+1(CVTPTR)                   0169
         MVI   LINE(CVTPTR),C' '                                   0169
*   LINE(65:67)='MSF';              /*                       @ZM30730*/
         MVC   LINE+64(3,CVTPTR),@CC00308                          0170
*LINE(1:55)='REPORT 9 - DRD INDEX PGM AND THREAD PGM COUNTER SUMMARY';
         MVC   LINE(55,CVTPTR),@CC00442                            0171
*   LINE(81:117)='(DATA FROM MSS FORMAT 4, SA FORMAT 9)';/*  @ZM30730*/
         MVC   LINE+80(37,CVTPTR),@CC00315                         0172
*   ANSI='1';                       /* EJECT LINE            @Y30LB54*/
         MVI   ANSI(CVTPTR),C'1'                                   0173
*   FULLWD1=69;                     /* POSITION TO PUT CONVERSION  0174
*                                      INTO                  @ZM30730*/
         LA    @05,69                                              0174
         ST    @05,FULLWD1(,DCKWKPTR)                              0174
*   KICKPTR=LIBPTR(LIBCTR);         /* BASE FOR COUNTERS     @Y30LB54*/
         L     @15,LIBCTR(,DCKWKPTR)                               0175
         SLA   @15,2                                               0175
         L     @14,LIBPTR-5(@15,DCKWKPTR)                          0175
         LA    @14,0(,@14)                                         0175
         ST    @14,KICKPTR(,DCKWKPTR)                              0175
*   KICKPTR=KICKPTR+512;            /* OFFSET FOR SECOND SET OF    0176
*                                      REPORTS               @Y30LB54*/
         AH    @14,@CH00448                                        0176
         ST    @14,KICKPTR(,DCKWKPTR)                              0176
*   LIBNO(LIBCTR)=LIBNO(LIBCTR)-1;  /* ADJUST TO SHOW READL NO     0177
*                                                            @Y30LB54*/
         SLR   @14,@14                                             0177
         IC    @14,LIBNO-4(@15,DCKWKPTR)                           0177
         BCTR  @14,0                                               0177
         STC   @14,LIBNO-4(@15,DCKWKPTR)                           0177
*   FOURBITS=LIBNO(LIBCTR)&'0F'X;   /* PICK OFF BOTTOM HALF  @Y30LB54*/
         ST    @15,@TF00001                                        0178
         ALR   @15,DCKWKPTR                                        0178
         MVC   FOURBITS(1,DCKWKPTR),LIBNO-4(@15)                   0178
         NI    FOURBITS(DCKWKPTR),X'0F'                            0178
*   FOURBITS=FOURBITS+1;            /*                       @Y30LB54*/
         LA    @15,1                                               0179
         SLR   @09,@09                                             0179
         IC    @09,FOURBITS(,DCKWKPTR)                             0179
         ALR   @09,@15                                             0179
         STC   @09,FOURBITS(,DCKWKPTR)                             0179
*   LINE(FULLWD1:FULLWD1)=HEXREP(FOURBITS);/*                @Y30LB54*/
         ALR   @05,CVTPTR                                          0180
         LA    @08,HEXREP-1(@09)                                   0180
         MVC   LINE-1(1,@05),0(@08)                                0180
*   LIBNO(LIBCTR)=LIBNO(LIBCTR)+1;  /* ALLOW FOR 0 START     @Y30LB54*/
         ALR   @14,@15                                             0181
         L     @05,@TF00001                                        0181
         STC   @14,LIBNO-4(@05,DCKWKPTR)                           0181
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0182
         ST    @05,@AL00001                                        0182
         L     @15,@CV00042                                        0182
         LA    @01,@AL00001                                        0182
         BALR  @14,@15                                             0182
*   ANSI='0';                       /* DOUBLE SPACE OUTPUT   @Y30LB54*/
         MVI   ANSI(CVTPTR),C'0'                                   0183
*   LINE='  INDEX             DRD SSID';        /*           @ZA00691*/
         MVI   LINE+28(CVTPTR),C' '                                0184
         MVC   LINE+29(103,CVTPTR),LINE+28(CVTPTR)                 0184
         MVC   LINE(28,CVTPTR),@CC00449                            0184
*   LINE(67:93)=' THREAD            DRD SSID'; /*            @ZA00691*/
         MVC   LINE+66(27,CVTPTR),@CC00453                         0185
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0186
         ST    @05,@AL00001                                        0186
         L     @15,@CV00042                                        0186
         LA    @01,@AL00001                                        0186
         BALR  @14,@15                                             0186
*   ANSI=' ';                       /* SINGLE SPACE OUTPUT   @Y30LB54*/
         MVI   ANSI(CVTPTR),C' '                                   0187
*   LINE=' ×PGM  ×  200×  201×  202×  203×  204×  205×  206×  207×TOTAL
*';                                 /*                       @ZA00691*/
         MVI   LINE+62(CVTPTR),C' '                                0188
         MVC   LINE+63(69,CVTPTR),LINE+62(CVTPTR)                  0188
         MVC   LINE(62,CVTPTR),@CC00456                            0188
*   LINE(67:127)=                                                  0189
*       '×PGM  ×  200×  201×  202×  203×  204×  205×  206×  207×TOTAL×'
*       ;                           /*                       @ZA00691*/
         MVC   LINE+66(61,CVTPTR),@CC00461                         0189
*   DO CTR=12 TO 58 BY 6;           /* INSERT MSF NUMBER IN SSID   0190
*                                                            @ZA00691*/
         LA    @05,12                                              0190
         ST    @05,CTR(,DCKWKPTR)                                  0190
@DL00190 DS    0H                                                  0191
*     LINE(CTR)=HEXREP(FOURBITS);   /*                       @Y30LB54*/
         L     @05,CTR(,DCKWKPTR)                                  0191
         ALR   @05,CVTPTR                                          0191
         SLR   @01,@01                                             0191
         IC    @01,FOURBITS(,DCKWKPTR)                             0191
         LA    @15,HEXREP-1(@01)                                   0191
         MVC   LINE-1(1,@05),0(@15)                                0191
*   END;                                                   /*@Y30LB54*/
         LA    @05,6                                               0192
         AL    @05,CTR(,DCKWKPTR)                                  0192
         ST    @05,CTR(,DCKWKPTR)                                  0192
         CH    @05,@CH00466                                        0192
         BNH   @DL00190                                            0192
*   DO CTR=77 TO 120 BY 6;          /* INSERT MSF NUMBER IN SSID   0193
*                                                            @ZA00691*/
         LA    @05,77                                              0193
         ST    @05,CTR(,DCKWKPTR)                                  0193
@DL00193 DS    0H                                                  0194
*     LINE(CTR)=HEXREP(FOURBITS);   /*                       @Y30LB54*/
         L     @05,CTR(,DCKWKPTR)                                  0194
         ALR   @05,CVTPTR                                          0194
         SLR   @01,@01                                             0194
         IC    @01,FOURBITS(,DCKWKPTR)                             0194
         LA    @15,HEXREP-1(@01)                                   0194
         MVC   LINE-1(1,@05),0(@15)                                0194
*   END;                            /*                       @Y30LB54*/
         LA    @05,6                                               0195
         AL    @05,CTR(,DCKWKPTR)                                  0195
         ST    @05,CTR(,DCKWKPTR)                                  0195
         CH    @05,@CH00468                                        0195
         BNH   @DL00193                                            0195
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0196
         ST    @05,@AL00001                                        0196
         L     @15,@CV00042                                        0196
         LA    @01,@AL00001                                        0196
         BALR  @14,@15                                             0196
*   LINE=' ×-----×-----×-----×-----×-----×-----×-----×-----×-----×-----
*';                                 /*                       @ZA00691*/
         MVI   LINE+62(CVTPTR),C' '                                0197
         MVC   LINE+63(69,CVTPTR),LINE+62(CVTPTR)                  0197
         MVC   LINE(62,CVTPTR),@CC00469                            0197
*   LINE(67:127)=                                                  0198
*       '×-----×-----×-----×-----×-----×-----×-----×-----×-----×-----×'
*       ;                           /*                       @ZA00691*/
         MVC   LINE+66(61,CVTPTR),@CC00474                         0198
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @05,@PC00001                                        0199
         ST    @05,@AL00001                                        0199
         L     @15,@CV00042                                        0199
         LA    @01,@AL00001                                        0199
         BALR  @14,@15                                             0199
*   RETURN CODE(RETCODE);           /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0200
         L     @14,@SA00005                                        0200
         LM    @00,@12,@SA00005+8                                  0200
         BR    @14                                                 0200
*   END RPT9HDR;                    /*                       @Y30LB54*/
*                                                                  0202
*   /*****************************************************************/
*   /*                                                               */
*   /* TLX DATA LINES                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0202
*RPT9DATA:                                                         0202
*   PROC;                           /*                       @Y30LB54*/
RPT9DATA STM   @14,@12,@SA00006                                    0202
*   CHAR4=VALCTR;                   /* PICK UP VALUE WORKING ON    0203
*                                                            @Y30LB54*/
         MVC   CHAR4(4,DCKWKPTR),VALCTR(DCKWKPTR)                  0203
*   LINE=' ×';                      /*                       @ZA00691*/
         MVI   LINE+2(CVTPTR),C' '                                 0204
         MVC   LINE+3(129,CVTPTR),LINE+2(CVTPTR)                   0204
         MVC   LINE(2,CVTPTR),@CC00482                             0204
*   LINE(8:62)='×     ×     ×     ×     ×     ×     ×     ×     ×     ×
*       ;                           /*                       @ZA00691*/
         MVC   LINE+7(55,CVTPTR),@CC00345                          0205
*   LINE(67:127)=                                                  0206
*       '×     ×     ×     ×     ×     ×     ×     ×     ×     ×     ×'
*        ;                                /*                 @ZA00691*/
         MVC   LINE+66(61,CVTPTR),@CC00484                         0206
*   FIVEBITS=CHAR4(4);              /* MOVE COUNTER          @ZMTPM01*/
         MVC   FIVEBITS(1,DCKWKPTR),CHAR4+3(DCKWKPTR)              0207
*   INDEXPGM=ZERO5;                 /* INIT TO ALL ZEROS     @ZM30975*/
         MVC   INDEXPGM(5,CVTPTR),@CC00155                         0208
*   IF FIVEBITS(4)='1'B THEN        /* IS BIT ON             @ZM30975*/
         TM    FIVEBITS(DCKWKPTR),B'00010000'                      0209
         BNO   @RF00209                                            0209
*     INDEXPGM(1)=CHAR1;            /* YES, SET TO ONE       @ZMTPM01*/
         MVI   INDEXPGM(CVTPTR),C'1'                               0210
*   ELSE;                           /* NO, LEAVE AS ZERO     @ZM30975*/
@RF00209 DS    0H                                                  0212
*   IF FIVEBITS(5)='1'B THEN        /* IS BIT ON             @ZM30975*/
         TM    FIVEBITS(DCKWKPTR),B'00001000'                      0212
         BNO   @RF00212                                            0212
*     INDEXPGM(2)=CHAR1;            /* YES, SET TO ONE       @ZMTPM01*/
         MVI   INDEXPGM+1(CVTPTR),C'1'                             0213
*   ELSE;                           /* NO, LEAVE AS ZERO     @ZM30975*/
@RF00212 DS    0H                                                  0215
*   IF FIVEBITS(6)='1'B THEN        /* IS BIT ON             @ZM30975*/
         TM    FIVEBITS(DCKWKPTR),B'00000100'                      0215
         BNO   @RF00215                                            0215
*     INDEXPGM(3)=CHAR1;            /* YES, SET TO ONE       @ZMTPM01*/
         MVI   INDEXPGM+2(CVTPTR),C'1'                             0216
*   ELSE;                           /* NO, LEAVE AS ZERO     @ZM30975*/
@RF00215 DS    0H                                                  0218
*   IF FIVEBITS(7)='1'B THEN        /* IS BIT ON             @ZM30975*/
         TM    FIVEBITS(DCKWKPTR),B'00000010'                      0218
         BNO   @RF00218                                            0218
*     INDEXPGM(4)=CHAR1;            /* YES, SET TO ONE       @ZMTPM01*/
         MVI   INDEXPGM+3(CVTPTR),C'1'                             0219
*   ELSE;                           /* NO, LEAVE AS ZERO     @ZM30975*/
@RF00218 DS    0H                                                  0221
*   IF FIVEBITS(8)='1'B THEN        /* IS BIT ON             @ZM30975*/
         TM    FIVEBITS(DCKWKPTR),B'00000001'                      0221
         BNO   @RF00221                                            0221
*     INDEXPGM(5)=CHAR1;            /* YES, SET TO ONE       @ZMTPM01*/
         MVI   INDEXPGM+4(CVTPTR),C'1'                             0222
*   ELSE;                           /* NO, LEAVE AS ZERO     @ZM30975*/
@RF00221 DS    0H                                                  0224
*   THREDPGM=INDEXPGM;              /* SET THREAD PGM COUNT  @ZM30975*/
         MVC   THREDPGM(5,CVTPTR),INDEXPGM(CVTPTR)                 0224
*   IF INDEXPGM=IUNORM THEN         /* NORMAL UNLOAD INDEX   @ZA00691*/
         CLC   INDEXPGM(5,CVTPTR),@CC00163                         0225
         BNE   @RF00225                                            0225
*     ULI=UNLOAD;                   /* YES, MOVE U           @ZA00691*/
         MVI   ULI(CVTPTR),C'U'                                    0226
*   ELSE                                                           0227
*     IF INDEXPGM=ILNORM THEN       /* NORMAL LOAD INDEX     @ZA00691*/
         B     @RC00225                                            0227
@RF00225 CLC   INDEXPGM(5,CVTPTR),@CC00165                         0227
         BNE   @RF00227                                            0227
*       ULI=LOAD;                   /* YES, MOVE L           @ZA00691*/
         MVI   ULI(CVTPTR),C'L'                                    0228
*     ELSE;                         /* ABNORMAL INDEX STEP   @ZA00691*/
@RF00227 DS    0H                                                  0230
*   IF THREDPGM=TUNORM THEN         /* NORMAL UNLOAD THREAD  @ZA00691*/
@RC00225 CLC   THREDPGM(5,CVTPTR),@CC00155                         0230
         BNE   @RF00230                                            0230
*     ULT=UNLOAD;                   /* MOVE U                @ZA00691*/
         MVI   ULT(CVTPTR),C'U'                                    0231
*   ELSE                                                           0232
*     IF THREDPGM=TLNORM THEN       /* NORMAL LOAD THREAD    @ZA00691*/
         B     @RC00230                                            0232
@RF00230 CLC   THREDPGM(5,CVTPTR),@CC00168                         0232
         BNE   @RF00232                                            0232
*       ULT=LOAD;                   /* YES, MOVE L           @ZA00691*/
         MVI   ULT(CVTPTR),C'L'                                    0233
*     ELSE;                         /* ABNORMAL THREAD STEP  @ZA00691*/
@RF00232 DS    0H                                                  0235
*   FULLWD1=9;                      /* STARTING LOCATION OF PRINT  0235
*                                      COUNTER               @ZA00691*/
@RC00230 MVC   FULLWD1(4,DCKWKPTR),@CF00491                        0235
*   DO CTR1=1 TO 2 BY 1;            /*                       @Y30LB54*/
         LA    @15,1                                               0236
         ST    @15,CTR1(,DCKWKPTR)                                 0236
@DL00236 DS    0H                                                  0237
*     TOTROW=0;                     /* ZERO ROW COUNTERS     @Y30LB54*/
         SLR   @15,@15                                             0237
         STH   @15,TOTROW(,DCKWKPTR)                               0237
*     DO CTR=1 TO 8 BY 1;           /*                       @Y30LB54*/
*                                                                  0238
         LA    @15,1                                               0238
         ST    @15,CTR(,DCKWKPTR)                                  0238
@DL00238 DS    0H                                                  0239
*       /*************************************************************/
*       /*                                                           */
*       /* KICKPTR WAS SET UP BY RPT8HDR AND MODIFIED BY RPT8BIT     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0239
*       EDREC=EDPAT;                /* MOVE IN PATTERN       @Y30LB54*/
         MVC   EDREC(8,DCKWKPTR),EDPAT                             0239
*       TOTROW=TOTROW+COUNTER(CTR); /* INCREMENT ROW COUNTER @Y30LB54*/
         L     @15,CTR(,DCKWKPTR)                                  0240
         ALR   @15,@15                                             0240
         L     @01,KICKPTR(,DCKWKPTR)                              0240
         AL    @01,@CF00510                                        0240
         LH    @15,COUNTER(@15,@01)                                0240
         LH    @14,TOTROW(,DCKWKPTR)                               0240
         ALR   @14,@15                                             0240
         STH   @14,TOTROW(,DCKWKPTR)                               0240
*       CVD(COUNTER(CTR),CHAR4);    /* CONVERT COUNTER INTO PACKED 0241
*                                      DEC                   @Y30LB54*/
         CVD   @15,@TS00001                                        0241
         MVC   CHAR4(4,DCKWKPTR),@TS00001+4                        0241
*       CHAR4(4)=CHAR4(4)×'0F'X;    /* PROTECT US FROM JUNK  @Y30LB54*/
         OI    CHAR4+3(DCKWKPTR),X'0F'                             0242
*       ED(EDREC,CHAR4);            /* FORMAT OUTPUT         @Y30LB54*/
         ED    EDREC(8,DCKWKPTR),CHAR4(DCKWKPTR)                   0243
*       LINE(FULLWD1:FULLWD1+4)=EDREC(4:8);/* MOVE DATA TO PRINT AREA
*                                                            @Y30LB54*/
         L     @15,FULLWD1(,DCKWKPTR)                              0244
         ALR   @15,CVTPTR                                          0244
         MVC   LINE-1(5,@15),EDREC+3(DCKWKPTR)                     0244
*       FULLWD1=FULLWD1+6;          /* NEXT PRINT POSITION   @Y30LB54*/
         L     @15,FULLWD1(,DCKWKPTR)                              0245
         AH    @15,@CH00141                                        0245
         ST    @15,FULLWD1(,DCKWKPTR)                              0245
*     END;                          /*                       @Y30LB54*/
         LA    @15,1                                               0246
         AL    @15,CTR(,DCKWKPTR)                                  0246
         ST    @15,CTR(,DCKWKPTR)                                  0246
         CH    @15,@CH00071                                        0246
         BNH   @DL00238                                            0246
*     EDREC=EDPAT;                  /* MOVE IN EDIT PATTERN  @Y30LB54*/
         MVC   EDREC(8,DCKWKPTR),EDPAT                             0247
*     CVD(TOTROW,CHAR4);            /* MAKE IT PRINTABLE     @Y30LB54*/
         LH    @15,TOTROW(,DCKWKPTR)                               0248
         CVD   @15,@TS00001                                        0248
         MVC   CHAR4(4,DCKWKPTR),@TS00001+4                        0248
*     CHAR4(4)=CHAR4(4)×'0F'X;      /*                       @Y30LB54*/
         OI    CHAR4+3(DCKWKPTR),X'0F'                             0249
*     ED(EDREC,CHAR4);              /*                       @Y30LB54*/
         ED    EDREC(8,DCKWKPTR),CHAR4(DCKWKPTR)                   0250
*     LINE(FULLWD1:FULLWD1+4)=EDREC(4:8);/*                  @Y30LB54*/
         L     @15,FULLWD1(,DCKWKPTR)                              0251
         ALR   @15,CVTPTR                                          0251
         MVC   LINE-1(5,@15),EDREC+3(DCKWKPTR)                     0251
*     FULLWD1=FULLWD1+17;           /* SKIP OVER PGM NO      @ZA00691*/
         L     @15,FULLWD1(,DCKWKPTR)                              0252
         AH    @15,@CH00355                                        0252
         ST    @15,FULLWD1(,DCKWKPTR)                              0252
*     KICKPTR=KICKPTR+16;           /* SET NEW BASE FOR COUNTERS   0253
*                                                            @Y30LB54*/
         LA    @15,16                                              0253
         AL    @15,KICKPTR(,DCKWKPTR)                              0253
         ST    @15,KICKPTR(,DCKWKPTR)                              0253
*   END;                            /*                       @Y30LB54*/
         LA    @15,1                                               0254
         AL    @15,CTR1(,DCKWKPTR)                                 0254
         ST    @15,CTR1(,DCKWKPTR)                                 0254
         CH    @15,@CH00046                                        0254
         BNH   @DL00236                                            0254
*   CALL ISDAPRT0(WORKPTR);         /*                       @Y30LB54*/
         L     @15,@PC00001                                        0255
         ST    @15,@AL00001                                        0255
         L     @15,@CV00042                                        0255
         LA    @01,@AL00001                                        0255
         BALR  @14,@15                                             0255
*   END RPT9DATA;                   /*                       @Y30LB54*/
@EL00006 DS    0H                                                  0256
@EF00006 DS    0H                                                  0256
@ER00006 LM    @14,@12,@SA00006                                    0256
         BR    @14                                                 0256
*                                                                  0257
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE ALL OUTSTANDING CORE                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0257
*FREECORE:                                                         0257
*   PROC;                                                  /*@Y30LB54*/
FREECORE STM   @14,@12,@SA00007                                    0257
*   DO CTR1=1 TO 4 BY 1;            /*                       @Y30LB54*/
         LA    @15,1                                               0258
         ST    @15,CTR1(,DCKWKPTR)                                 0258
@DL00258 DS    0H                                                  0259
*     IF LIBPTR(CTR1)^=0 THEN       /* FREE ALL CORE ALREADY OBTAINED
*                                                            @Y30LB54*/
         L     @15,CTR1(,DCKWKPTR)                                 0259
         SLA   @15,2                                               0259
         L     @15,LIBPTR-5(@15,DCKWKPTR)                          0259
         LA    @15,0(,@15)                                         0259
         LTR   @15,@15                                             0259
         BZ    @RF00259                                            0259
*       DO;                         /*                       @Y30LB54*/
*         SPNO=0;                   /*                       @Y30LB54*/
         MVI   SPNO(CVTPTR),X'00'                                  0261
*         CORELEN=512+1024;         /* FILL IN LENGTH OF AREA@Y30LB54*/
         MVC   CORELEN(3,CVTPTR),@CF00507+1                        0262
*         COREADDR=LIBPTR(CTR1);    /* FILL IN ADDRESS OF AREA     0263
*                                                            @Y30LB54*/
         ST    @15,COREADDR(,CVTPTR)                               0263
*         CALL ISDAFREE(WORKPTR);   /*                       @Y30LB54*/
         L     @15,@PC00001                                        0264
         ST    @15,@AL00001                                        0264
         L     @15,@CV00041                                        0264
         LA    @01,@AL00001                                        0264
         BALR  @14,@15                                             0264
*         LIBPTR(CTR1)=0;           /* DELETE GOTTEN CORE PTR@Y30LB54*/
         L     @15,CTR1(,DCKWKPTR)                                 0265
         SLA   @15,2                                               0265
         ALR   @15,DCKWKPTR                                        0265
         SLR   @14,@14                                             0265
         STCM  @14,7,LIBPTR-4(@15)                                 0265
*       END;                        /*                       @Y30LB54*/
*     ELSE                                                         0267
*       ;                           /*                       @Y30LB54*/
@RF00259 DS    0H                                                  0268
*   END;                            /*                       @Y30LB54*/
         LA    @15,1                                               0268
         AL    @15,CTR1(,DCKWKPTR)                                 0268
         ST    @15,CTR1(,DCKWKPTR)                                 0268
         CH    @15,@CH00051                                        0268
         BNH   @DL00258                                            0268
*   SPNO=0;                         /* FREE WORKING CORE ALSO@Y30LB54*/
         MVI   SPNO(CVTPTR),X'00'                                  0269
*   CORELEN=LENGTH(WORKCORE);       /* FILL IN LENGTH OF AREA@Y30LB54*/
         MVC   CORELEN(3,CVTPTR),@CF00508+1                        0270
*   COREADDR=DCK00PTR;              /* FILL IN LOCATION ADDRESS    0271
*                                                            @Y30LB54*/
         MVC   COREADDR(4,CVTPTR),DCK00PTR(CVTPTR)                 0271
*   CALL ISDAFREE(WORKPTR);         /*                       @Y30LB54*/
         L     @03,@PC00001                                        0272
         ST    @03,@AL00001                                        0272
         L     @15,@CV00041                                        0272
         LA    @01,@AL00001                                        0272
         BALR  @14,@15                                             0272
*   DCK00PTR=0;                     /* TELL THE WORLD WE QUIT@Y30LB54*/
         SLR   @03,@03                                             0273
         ST    @03,DCK00PTR(,CVTPTR)                               0273
*   END FREECORE;                                          /*@Y30LB54*/
@EL00007 DS    0H                                                  0274
@EF00007 DS    0H                                                  0274
@ER00007 LM    @14,@12,@SA00007                                    0274
         BR    @14                                                 0274
*   END ISDADCK1                    /*                       @Y30LB54*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                        *
*/*%INCLUDE SYSLIB  (ISDACVT )                                        *
*;                                                                 0275
@DATA    DS    0H
@CH00046 DC    H'2'
@CH00051 DC    H'4'
@CH00141 DC    H'6'
@CH00071 DC    H'8'
@CH00336 DC    H'13'
@CH00355 DC    H'17'
@CH00349 DC    H'27'
@CH00466 DC    H'58'
@CH00330 DC    H'76'
@CH00468 DC    H'120'
@CH00448 DC    H'512'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00007 DS    0F
@SA00006 DS    0F
@SA00005 DS    0F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
@TF00001 DS    F
ISDADCK1 CSECT
         DS    0F
@CF00048 DC    F'1'
@CF00491 DC    F'9'
@CF00040 DC    F'31'
@CH00040 EQU   @CF00040+2
@CF00508 DC    F'149'
@CF00507 DC    F'1536'
@CF00509 DC    F'-27'
@CF00510 DC    F'-2'
@DATD    DSECT
         DS    0D
         DS    0D
@TS00001 DS    CL8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDADCK1 CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00041 DC    V(ISDAFREE)
@CV00042 DC    V(ISDAPRT0)
         DS    0D
@CC00456 DC    C' ×PGM  ×  200×  201×  202×  203×  204×  205×  206×  20C
               7×TOTAL×'
@CC00469 DC    C' ×-----×-----×-----×-----×-----×-----×-----×-----×----C
               -×-----×'
@CC00461 DC    C'×PGM  ×  200×  201×  202×  203×  204×  205×  206×  207C
               ×TOTAL×'
@CC00474 DC    C'×-----×-----×-----×-----×-----×-----×-----×-----×-----C
               ×-----×'
@CC00484 DC    C'×     ×     ×     ×     ×     ×     ×     ×     ×     C
               ×     ×'
@CC00250 EQU   @CC00474
@CC00325 DC    C'×  200×  201×  202×  203×  204×  205×  206×  207×TOTALC
               ×'
@CC00345 EQU   @CC00484
@CC00442 DC    C'REPORT 9 - DRD INDEX PGM AND THREAD PGM COUNTER SUMMARC
               Y'
@CC00282 DC    C' U = NORMAL INDEXER PROGRAM STEP AT END OF UNLOAD'
@CC00287 DC    C'U = NORMAL THREAD PROGRAM STEP AT END OF UNLOAD'
@CC00291 DC    C' L = NORMAL INDEXER PROGRAM STEP AT END OF LOAD'
@CC00296 DC    C'L = NORMAL THREAD PROGRAM STEP AT END OF LOAD'
@CC00267 DC    C'------------------------------------------'
@CC00256 DC    C' ----------------------------------------'
@CC00262 DC    C'---------------------    ---------------'
@CC00315 DC    C'(DATA FROM MSS FORMAT 4, SA FORMAT 9)'
@CC00274 DC    C' INDEX PGM IS MSS BYTE 22(BITS 0-4)'
@CC00279 DC    C'THREAD PGM IS MSS BYTE 31(BITS 0-4)'
@CC00310 DC    C'REPORT 8 - DRD DEVICE CHECK SUMMARY'
@CC00246 DC    C'×-----------------------------'
@CC00449 DC    C'  INDEX             DRD SSID'
@CC00350 DC    C'×SA SENSE BYTE 0 MSS BYTE 4'
@CC00453 DC    C' THREAD            DRD SSID'
@CC00343 DC    C'×              '
@CC00323 EQU   @CC00343
@CC00353 DC    C'DRD SENSE BYTE'
@CC00322 DC    C'DRD SSID'
@CC00155 DC    C'00000'
@CC00163 DC    C'10011'
@CC00165 DC    C'11100'
@CC00168 DC    C'10001'
@CC00273 EQU   @CC00267
@CC00149 DC    C'TLX'
@CC00308 DC    C'MSF'
@CC00482 EQU   @CC00456
EDPAT    DC    X'4020202020202120'
BITHDR8  DS    CL864
         ORG   BITHDR8
BIT80    DC    CL27'BIT 0 COMMAND REJECT'
         DC    CL27'BIT 1 INTERVENTION REQUIRED'
         DC    CL27'BIT 2 BUS OUT PARITY'
         DC    CL27'BIT 3 EQUIPMENT CHECK'
         DC    CL27'BIT 4 DATA CHECK'
         DC    CL27'BIT 5 OVERRUN (NOT USED)'
         DC    CL27'BIT 6 NOT USED'
         DC    CL27'BIT 7 ENVIRONMENTAL DATA'
BIT8A    DC    CL27'BIT 0 ERROR TIMEOUT'
         DC    CL27'BIT 1 SERVO CHECK'
         DC    CL27'BIT 2 CABLE CHECK'
         DC    CL27'BIT 3 WRITE DISABLE'
         DC    CL27'BIT 4 OV/UV CHECK'
         DC    CL27'BIT 5 VACUUM CHECK'
         DC    CL27'BIT 6 PNEUMATIC CHECK'
         DC    CL27'BIT 7 WRITE DRIVER CHECK'
BIT8B    DC    CL27'BIT 0 CARTRIDGE ENTRY'
         DC    CL27'BIT 1 CARTRIDGE EXIT'
         DC    CL27'BIT 2 SEARCH CHECK'
         DC    CL27'BIT 3 INDEXER CHECK'
         DC    CL27'BIT 4 THREAD/LOAD CHECK'
         DC    CL27'BIT 5 UNLOAD CHECK'
         DC    CL27'BIT 6 B/O PARITY CHECK'
         DC    CL27'BIT 7 TAG BUS PARITY CHECK'
BIT8C    DC    CL27'BIT 0 NOT USED'
         DC    CL27'BIT 1 SPOOL OVERCURRENT'
         DC    CL27'BIT 2 SPOOL RUNAWAY/TACH'
         DC    CL27'BIT 3 DGC CHECK'
         DC    CL27'BIT 4 ROTOR/TACH CHECK'
         DC    CL27'BIT 5 IHC/LIFTER CHECK'
         DC    CL27'BIT 6 CAPSTAN CURRENT/TACH'
         DC    CL27'BIT 7 CAPSTAN RUNAWAY/TACH'
         ORG   BITHDR8+864
PATCH    DC    50X'00'
HEXREP   DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
BYTEHDR8 DS    CL13
         ORG   BYTEHDR8+0
@NM00003 DC    CL13'1 MSS BYTE 18'
         ORG   BYTEHDR8+13
         ORG   BYTEHDR8+13
         DC    CL13'2 MSS BYTE 19'
         ORG   BYTEHDR8+26
         ORG   BYTEHDR8+26
         DC    CL13'3 MSS BYTE 20'
         ORG   BYTEHDR8+52
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DCKWKPTR EQU   @03
RETCODE  EQU   @04
LPARMPTR EQU   @05
CVTPTR   EQU   @02
R0       EQU   @00
R1       EQU   @00
R15      EQU   @15
ISDAPRMS EQU   0
CINPUT   EQU   ISDAPRMS
CSTART   EQU   ISDAPRMS+2
CEND     EQU   ISDAPRMS+6
CFSCONLY EQU   ISDAPRMS+13
CSSIDF   EQU   ISDAPRMS+17
CSERIAL  EQU   ISDAPRMS+21
CREPORTS EQU   ISDAPRMS+33
CDCKTLX  EQU   CREPORTS+6
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
PARMPTR  EQU   CVTPTRS0+8
DCK00PTR EQU   CVTPTRS0+64
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
ANSI     EQU   OUTLINE
LINE     EQU   OUTLINE+1
SDARPTID EQU   PRT0CALL+133
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
COUNTER  EQU   0
WORKCORE EQU   0
LIBTAB   EQU   WORKCORE+4
LIBNO    EQU   LIBTAB
LIBPTR   EQU   LIBTAB+1
FULLWD1  EQU   WORKCORE+20
KICKPTR  EQU   WORKCORE+32
CTR      EQU   WORKCORE+52
CTR1     EQU   WORKCORE+56
CHAR4    EQU   WORKCORE+60
COUNTRP8 EQU   WORKCORE+64
COUNTRP9 EQU   WORKCORE+68
LIBCTR   EQU   WORKCORE+72
BYTECTR  EQU   WORKCORE+76
BITCTR   EQU   WORKCORE+80
BITHDCTR EQU   WORKCORE+84
TEMPPTR  EQU   WORKCORE+88
VALCTR   EQU   WORKCORE+92
B8HDR    EQU   WORKCORE+96
TOTFINL  EQU   WORKCORE+112
TOTROW   EQU   WORKCORE+128
TOTGRND  EQU   WORKCORE+130
FOURBITS EQU   WORKCORE+132
FIVEBITS EQU   FOURBITS
EDREC    EQU   WORKCORE+140
BIT8HDR  EQU   0
WORKPTR  EQU   0
INDEXPGM EQU   LINE+2
THREDPGM EQU   LINE+67
ULI      EQU   LINE
ULT      EQU   LINE+65
*                                      START UNREFERENCED COMPONENTS
ENDAREA  EQU   WORKCORE+148
DATAWORK EQU   WORKCORE+139
DATA09   EQU   WORKCORE+137
DATA08   EQU   WORKCORE+133
PTRBYTE  EQU   WORKCORE+48
PTRSSID  EQU   WORKCORE+44
PTRLIB   EQU   WORKCORE+40
PTRRPT   EQU   WORKCORE+36
DATALIB  EQU   WORKCORE+28
DATASSID EQU   WORKCORE+24
LOGPTR   EQU   WORKCORE
COUNT    EQU   COUNTER
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
WORKCALL EQU   CVTPTRS0+96
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DRC00PTR EQU   CVTPTRS0+76
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
SDATAPTR EQU   CVTPTRS0+4
DATAPTR  EQU   CVTPTRS0
CTRACE   EQU   ISDAPRMS+48
CGEN     EQU   ISDAPRMS+47
CDETAIL  EQU   ISDAPRMS+46
CPERIOD  EQU   ISDAPRMS+45
CPWR     EQU   CREPORTS+11
CAPRSUU  EQU   CREPORTS+10
CDRC     EQU   CREPORTS+9
CDAT     EQU   CREPORTS+8
CCSBCSF  EQU   CREPORTS+7
CEQC     EQU   CREPORTS+5
CFSC     EQU   CREPORTS+4
CDHEDHU  EQU   CREPORTS+3
CSUM     EQU   CREPORTS+2
CPAD     EQU   CREPORTS+1
CDCS     EQU   CREPORTS
CSERNO   EQU   CSERIAL+4
@NM00002 EQU   CSERIAL+3
CIBM     EQU   CSERIAL
CRATIO   EQU   ISDAPRMS+19
CSSID    EQU   CSSIDF
@NM00001 EQU   CSSIDF
CFSC34   EQU   CFSCONLY+2
CFSC12   EQU   CFSCONLY
CTYPE    EQU   ISDAPRMS+11
CSUMMARY EQU   ISDAPRMS+10
CENDDAY  EQU   CEND+2
CENDYEAR EQU   CEND
CSTDAY   EQU   CSTART+2
CSTYEAR  EQU   CSTART
CHISTIN  EQU   CINPUT+1
CLOGIN   EQU   CINPUT
*                                      END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ISDADCK1,(C'PLS2103',0603,75267)
