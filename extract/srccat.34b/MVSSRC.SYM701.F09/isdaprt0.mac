         TITLE 'SDA PRINT ROUTINE FOR SYSPRINT                         *
                        '
ISDAPRT0 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(8)                                              0001
         DC    C'ISDAPRT0'                                         0001
ISDAPRTO DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00056-ISDAPRTO)
         ENTRY ISDAPRTO
ISDAPRTC DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00105-ISDAPRTC)
         ENTRY ISDAPRTC
ISDAPRTH DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00130-ISDAPRTH)
         ENTRY ISDAPRTH
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         ISDAPSPC R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 MVC   @PC00001(4),0(@01)                                  0001
*/* RETCODE=0 = OPEN AND WRITE SUCCESSFUL                    @Y30LB55*/
*/* RETCODE=4 = OPEN FAILED. MISSING DD CARD                 @Y30LB55*/
*/* RETCODE=24 = NO SPACE FOR WORKAREA                       @Y30LB55*/
*/* USER ABEND 112 = WRITE ERROR ON OUTPUT                   @Y30LB55*/
*                                                                  0011
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO CVT  @Y30LB55*/
         L     @10,@PC00001                                        0011
         L     CVTPTR,WORKPTR(,@10)                                0011
*   RETCODE=0;                      /* INIT RETCODE          @Y30LB55*/
         SLR   @10,@10                                             0012
         LR    RETCODE,@10                                         0012
*   PRTWKPTR=PRT00PTR;              /* SET LOCAL PTR TO PRTWORK    0013
*                                                            @Y30LB55*/
         L     PRTWKPTR,PRT00PTR(,CVTPTR)                          0013
*   IF PRTWKPTR^=0 THEN             /* HAVE WORKAREA         @Y30LB55*/
         CR    PRTWKPTR,@10                                        0014
         BE    @RF00014                                            0014
*     DO;                           /* YES                   @Y30LB55*/
*                                                                  0015
*       /*************************************************************/
*       /*                                                           */
*       /* ROUTINE TO PRINT A LINE ON SYSPRINT                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0016
*       ANSISAVE=ANSI;              /* SAVE PRINT CONTROL    @Y30LB55*/
         MVC   ANSISAVE(1,PRTWKPTR),ANSI(CVTPTR)                   0016
*       IF ANSI=PSKIP×LINENO>PGSKIP THEN/* PAGE SKIP OR MAX LINE   0017
*                                      COUNT                 @Y30LB55*/
         CLI   ANSI(CVTPTR),C'1'                                   0017
         BE    @RT00017                                            0017
         LH    @10,LINENO(,PRTWKPTR)                               0017
         CH    @10,@CH00164                                        0017
         BNH   @RF00017                                            0017
@RT00017 DS    0H                                                  0018
*         DO;                       /* YES, PRINT SDA TOP TITLE    0018
*                                                            @Y30LB55*/
*                                                                  0018
*           /*********************************************************/
*           /*                                                       */
*           /* PRINT TOP TITLE                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0019
*           LINENO=1;               /* RESET LINE COUNT      @Y30LB55*/
         LA    @10,1                                               0019
         STH   @10,LINENO(,PRTWKPTR)                               0019
*           PAGENO=PAGENO+1;        /* INCREMENT PAGE COUNT  @Y30LB55*/
         AH    @10,PAGENO(,PRTWKPTR)                               0020
         STH   @10,PAGENO(,PRTWKPTR)                               0020
*           ANSI=LSKIP2;            /* SET SKIP 1 LINE       @Y30LB55*/
         MVI   ANSI(CVTPTR),C'0'                                   0021
*           CVD(PAGENO,TEMP8);      /* CONVERT PAGE NUMBER   @Y30LB55*/
         CVD   @10,TEMP8(,PRTWKPTR)                                0022
*           PAGEC=EDPAT3;           /* MOVE EDIT PATTERN     @Y30LB55*/
         MVC   PAGEC(4,PRTWKPTR),EDPAT3                            0023
*           ED(PAGEC,TEMP78);       /* EDIT PAGE NUMBER      @Y30LB55*/
         ED    PAGEC(4,PRTWKPTR),TEMP78(PRTWKPTR)                  0024
*           IF SDARPTID^=ZEROID THEN /* REPORT ID TO MOVE    @ZM30730*/
         CLC   SDARPTID(3,CVTPTR),@CB00150                         0025
         BE    @RF00025                                            0025
*             HEADERID=SDARPTID;    /* YES, MOVE REPORT ID   @ZM30730*/
         MVC   HEADERID(3,PRTWKPTR),SDARPTID(CVTPTR)               0026
*           ELSE;                   /* NO, NOTHING TO MOVE   @ZM30730*/
@RF00025 DS    0H                                                  0028
*           RFY                                                    0028
*            (R6,                                                  0028
*             R7) RSTD;                                    /*@Y30LB55*/
*           R6=ADDR(PRINTDCB);      /* SET ADDR DCB          @Y30LB55*/
         LA    R6,PRINTDCB(,PRTWKPTR)                              0029
*           R7=ADDR(HEADER);        /* SET ADDR OF LINE      @Y30LB55*/
         LA    R7,HEADER(,PRTWKPTR)                                0030
*           GEN(PUT (R6),(R7) )                                    0031
*           FLOWS(EOD);                                    /*@Y30LB55*/
         PUT (R6),(R7)
*           RFY                                                    0032
*            (R6,                                                  0032
*             R7) UNRSTD;                                  /*@Y30LB55*/
*         END;                      /* END PUT TITLE CODE    @Y30LB55*/
*       ELSE                                                       0034
*         ;                         /* NO TITLE YET          @Y30LB55*/
@RF00017 DS    0H                                                  0035
*                                                                  0035
*       /*************************************************************/
*       /*                                                           */
*       /* PRINT OUTPUT LINE                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0035
*       I=0;                        /* SET LINE INC TO 0     @Y30LB55*/
         SLR   I,I                                                 0035
*       IF ANSI=LSKIP1 THEN         /* 1 LINE SKIP           @Y30LB55*/
         CLI   ANSI(CVTPTR),C' '                                   0036
         BNE   @RF00036                                            0036
*         I=1;                      /* INC LINE COUNT BY 1   @Y30LB55*/
         LA    I,1                                                 0037
*       ELSE                        /* NO, CHECK FOR 2       @Y30LB55*/
*         IF ANSI=LSKIP2 THEN       /* 2 LINE SKIP           @Y30LB55*/
         B     @RC00036                                            0038
@RF00036 CLI   ANSI(CVTPTR),C'0'                                   0038
         BNE   @RF00038                                            0038
*           I=2;                    /* INC LINE COUNT BY 2   @Y30LB55*/
         LA    I,2                                                 0039
*         ELSE                      /* NO, CHECK 3           @Y30LB55*/
*           IF ANSI=LSKIP3 THEN     /* 3 LINE SKIP           @Y30LB55*/
         B     @RC00038                                            0040
@RF00038 CLI   ANSI(CVTPTR),C'-'                                   0040
         BNE   @RF00040                                            0040
*             I=3;                  /* INC LINE COUNT BY 3   @Y30LB55*/
         LA    I,3                                                 0041
*           ELSE                                                   0042
*             ;                     /* NO LINE COUNT INCREMENT     0042
*                                                            @Y30LB55*/
@RF00040 DS    0H                                                  0043
*       LINENO=LINENO+I;            /* INCREMENT LINE COUNT  @Y30LB55*/
@RC00038 DS    0H                                                  0043
@RC00036 LR    @10,I                                               0043
         AH    @10,LINENO(,PRTWKPTR)                               0043
         STH   @10,LINENO(,PRTWKPTR)                               0043
*       RFY                                                        0044
*        (R6,                                                      0044
*         R7) RSTD;                                        /*@Y30LB55*/
*       R6=ADDR(PRINTDCB);          /* SET ADDR OF DCB       @Y30LB55*/
         LA    R6,PRINTDCB(,PRTWKPTR)                              0045
*       R7=ADDR(OUTLINE);           /* SET ADDR OF OUTLINE   @Y30LB55*/
         LA    R7,OUTLINE(,CVTPTR)                                 0046
*       GEN(PUT   (R6),(R7) )                                      0047
*       FLOWS(EOD);                                        /*@Y30LB55*/
         PUT   (R6),(R7)
*       RFY                                                        0048
*        (R6,                                                      0048
*         R7) UNRSTD;                                      /*@Y30LB55*/
*       ANSI=ANSISAVE;              /* RESTORE PRINT CONTROL @Y30LB55*/
         MVC   ANSI(1,CVTPTR),ANSISAVE(PRTWKPTR)                   0049
*     END;                          /* END PRINT CODE        @Y30LB55*/
*   ELSE                            /* NO WORKAREA           @Y30LB55*/
*     RETCODE=24;                   /* SET NO SPACE RETURN   @Y30LB55*/
         B     @RC00014                                            0051
@RF00014 LA    RETCODE,24                                          0051
*   RETURN CODE(RETCODE);           /* RETURN WITH CONDCODE  @Y30LB55*/
*                                                                  0052
@RC00014 L     @13,4(,@13)                                         0052
         L     @00,@SIZDATD                                        0052
         LR    @01,@11                                             0052
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0052
         L     @14,12(,@13)                                        0052
         LM    @00,@12,20(@13)                                     0052
         BR    @14                                                 0052
*   /*****************************************************************/
*   /*                                                               */
*   /* EOD - SYNAD RETURN FROM PUT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0053
*EOD:                                                              0053
*   RETCODE=12;                     /* SET SYNAD RETURN CODE @Y30LB55*/
EOD      LA    RETCODE,12                                          0053
*   GEN( ABEND  112,DUMP);          /* ABEND WITH USER CODE 112    0054
*                                                            @Y30LB55*/
          ABEND  112,DUMP
*   RETURN CODE(RETCODE);           /* RETURN BAD CONDCODE   @Y30LB55*/
         L     @13,4(,@13)                                         0055
         L     @00,@SIZDATD                                        0055
         LR    @01,@11                                             0055
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0055
         L     @14,12(,@13)                                        0055
         LM    @00,@12,20(@13)                                     0055
         BR    @14                                                 0055
*                                                                  0056
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY TO OPEN SYSPRINT                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0056
*ISDAPRTO:                                                         0056
*   ENTRY(WORKPTR);                 /* ENTRY TO OPEN SYSPRINT@Y30LB55*/
@EP00056 MVC   @PC00001(4),0(@01)                                  0056
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO CVT  @Y30LB55*/
         L     @10,@PC00001                                        0057
         L     CVTPTR,WORKPTR(,@10)                                0057
*   RETCODE=0;                      /* INIT RETCODE          @Y30LB55*/
*                                                                  0058
         SLR   @10,@10                                             0058
         LR    RETCODE,@10                                         0058
*   /*****************************************************************/
*   /*                                                               */
*   /* GET CORE FOR ISDAPRT0 WORKAREA                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0059
*   IF PRT00PTR=0 THEN              /* NO WORKAREA           @Y30LB55*/
         C     @10,PRT00PTR(,CVTPTR)                               0059
         BNE   @RF00059                                            0059
*     DO;                           /* NONE, GET IT          @Y30LB55*/
*       CORELEN=LENGTH(PRTWORK);    /* SET AREA LENGTH       @Y30LB55*/
         MVC   CORELEN(3,CVTPTR),@CF00201+1                        0061
*       SPNO=PRTSPNO;               /* SET SUBPOOL NUMBER    @Y30LB55*/
         MVI   SPNO(CVTPTR),X'00'                                  0062
*       RFY                                                        0063
*         R1 RSTD;                                         /*@Y30LB55*/
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/
         LA    R1,WORKCALL(,CVTPTR)                                0064
*       CALL ISDAGET1;              /* GET CORE              @Y30LB55*/
         L     @15,@CV00111                                        0065
         BALR  @14,@15                                             0065
*       RFY                                                        0066
*         R15 RSTD;                                        /*@Y30LB55*/
*       RETCODE=R15;                /* SAVE GET1 RETURN CODE @Y30LB55*/
         LR    RETCODE,R15                                         0067
*       RFY                                                        0068
*        (R1,                                                      0068
*         R15) UNRSTD;              /* RELEASE REGS          @Y30LB55*/
*       PRT00PTR=COREADDR;          /* STORE ADDR IN ISDACVT @Y30LB55*/
         L     @10,COREADDR(,CVTPTR)                               0069
         ST    @10,PRT00PTR(,CVTPTR)                               0069
*       PRTWKPTR=PRT00PTR;          /* SET LOCAL PTR TO PRTWORK    0070
*                                                            @Y30LB55*/
         LR    PRTWKPTR,@10                                        0070
*       IF RETCODE=0 THEN           /* GOT CORE              @Y30LB55*/
         LTR   RETCODE,RETCODE                                     0071
         BNZ   @RF00071                                            0071
*         DO;                       /* YES, INITIALIZE PRTWORK     0072
*                                                            @Y30LB55*/
*           PRINTDCB=DCBSTAT;       /* MOVE DCB INTO WORKAREA@Y30LB55*/
         MVC   PRINTDCB(96,PRTWKPTR),DCBSTAT                       0073
*           OPENLIST=OPENSTAT;      /* MOVE OPEN LIST INTO WORKAREA
*                                                            @Y30LB55*/
         MVC   OPENLIST(4,PRTWKPTR),OPENSTAT                       0074
*           CLOSLIST=CLOSSTAT;      /* MOVE CLOSE LIST INTO WORKAREA
*                                                            @Y30LB55*/
         MVC   CLOSLIST(4,PRTWKPTR),CLOSSTAT                       0075
*           HEADER(1)=PSKIP;        /* SET HEADER ANSI TO PAGE SKIP
*                                                            @Y30LB55*/
         MVI   HEADER(PRTWKPTR),C'1'                               0076
*         END;                      /* END INITIALIZE        @Y30LB55*/
*       ELSE                        /* BAD RETURN FROM ISDAGET1    0078
*                                                            @Y30LB55*/
*         RETCODE=24;               /* SET RETURN CODE TO NO CORE  0078
*                                                            @Y30LB55*/
         B     @RC00071                                            0078
@RF00071 LA    RETCODE,24                                          0078
*     END;                          /* END GET CORE SECTION  @Y30LB55*/
*   ELSE                            /* YES, HAVE WORKAREA    @Y30LB55*/
*     PRTWKPTR=PRT00PTR;            /* SET LOCAL PTR TO PRTWORK    0080
*                                                            @Y30LB55*/
         B     @RC00059                                            0080
@RF00059 L     PRTWKPTR,PRT00PTR(,CVTPTR)                          0080
*   IF RETCODE=0 THEN               /* HAVE WORKAREA         @Y30LB55*/
@RC00059 SLR   @10,@10                                             0081
         CR    RETCODE,@10                                         0081
         BNE   @RF00081                                            0081
*     DO;                           /* YES                   @Y30LB55*/
*                                                                  0082
*       /*************************************************************/
*       /*                                                           */
*       /* OPEN SYSPRINT                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0083
*       IF OFLAGS(4)^='1'B THEN     /* IS DCB OPEN           @Y30LB55*/
         TM    OFLAGS(PRTWKPTR),B'00010000'                        0083
         BO    @RF00083                                            0083
*         DO;                       /* NO, OPEN SYSPRINT     @Y30LB55*/
*           PAGENO=1;               /* INIT PAGE COUNT       @Y30LB55*/
         MVC   PAGENO(2,PRTWKPTR),@CH00082                         0085
*           LINENO=0;               /* INIT LINE COUNT       @Y30LB55*/
         STH   @10,LINENO(,PRTWKPTR)                               0086
*           RFY                                                    0087
*            (R1,                                                  0087
*             R6) RSTD;                                    /*@Y30LB55*/
*           R1=ADDR(OPENLIST);      /* R1 -> OPENLIST        @Y30LB55*/
         LA    R1,OPENLIST(,PRTWKPTR)                              0088
*           R6=ADDR(PRINTDCB);      /* R6 -> DCB             @Y30LB55*/
         LA    R6,PRINTDCB(,PRTWKPTR)                              0089
*           GEN( OPEN  ((R6),OUTPUT),MF=(E,(R1)))                  0090
*           FLOWS(BLOCKFIX,EOD);                           /*@Y30LB55*/
          OPEN  ((R6),OUTPUT),MF=(E,(R1))
*           RFY                                                    0091
*            (R1,                                                  0091
*             R6) UNRSTD;                                  /*@Y30LB55*/
*           IF OFLAGS(4)='1'B THEN  /* DID SYSPRINT OPEN     @Y30LB55*/
         TM    OFLAGS(PRTWKPTR),B'00010000'                        0092
         BNO   @RF00092                                            0092
*             RETCODE=0;            /* OPEN OK               @Y30LB55*/
         SLR   RETCODE,RETCODE                                     0093
*           ELSE                    /* NO, SYSPRINT DID NOT OPEN   0094
*                                                            @Y30LB55*/
*             RETCODE=4;            /* MISSING DD CARD       @Y30LB55*/
         B     @RC00092                                            0094
@RF00092 LA    RETCODE,4                                           0094
*         END;                      /* END OPEN CODE         @Y30LB55*/
*       ELSE                        /* YES, SYSPRINT OPEN    @Y30LB55*/
*         RETCODE=0;                /* SYSPRINT ALREADY OPEN @Y30LB55*/
         B     @RC00083                                            0096
@RF00083 SLR   RETCODE,RETCODE                                     0096
*     END;                          /* END OPEN CODE         @Y30LB55*/
*   ELSE                                                           0098
*     ;                             /* NO WORKAREA           @Y30LB55*/
@RF00081 DS    0H                                                  0099
*   RETURN CODE(RETCODE);           /* RETURN TO ISDASDA0    @Y30LB55*/
*                                                                  0099
@RC00081 L     @13,4(,@13)                                         0099
         L     @00,@SIZDATD                                        0099
         LR    @01,@11                                             0099
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0099
         L     @14,12(,@13)                                        0099
         LM    @00,@12,20(@13)                                     0099
         BR    @14                                                 0099
*   /*****************************************************************/
*   /*                                                               */
*   /* BLOCKFIX - EXITLIST PROC TO ADD DEFAULT BLKSIZE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0100
*BLOCKFIX:                                                         0100
*   PROC OPTIONS(NOSAVE);           /* EXITLIST PROC         @Y30LB55*/
BLOCKFIX DS    0H                                                  0101
*   IF DCBBLKSI=ZERO2 THEN          /* WAS BLKSIZE SUPPLIED IN DD  0101
*                                      STATEMENT             @Y30LB55*/
         CLC   DCBBLKSI(2,PRTWKPTR),@CB00148                       0101
         BNE   @RF00101                                            0101
*     DCBBLKSI=BLKSIZED;            /* NO, MOVE IN DEFAULT   @Y30LB55*/
         MVC   DCBBLKSI(2,PRTWKPTR),@CH00152                       0102
*   ELSE                                                           0103
*     ;                             /* YES, BLKSIZE OK       @Y30LB55*/
@RF00101 DS    0H                                                  0104
*   END BLOCKFIX;                   /* RETURN TO OPEN        @Y30LB55*/
@EL00002 DS    0H                                                  0104
@EF00002 DS    0H                                                  0104
@ER00002 BR    @14                                                 0104
*   /*****************************************************************/
*   /*                                                               */
*   /* ISDAPRTC - ENTRY TO CLOSE SYSPRINT                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0105
*ISDAPRTC:                                                         0105
*   ENTRY(WORKPTR);                 /* ENTRY TO CLOSE SYSPRINT     0105
*                                                            @Y30LB55*/
@EP00105 MVC   @PC00001(4),0(@01)                                  0105
*   CVTPTR=WORKPTR;                 /* SET PTR TO ISDACVT    @Y30LB55*/
         L     @10,@PC00001                                        0106
         L     CVTPTR,WORKPTR(,@10)                                0106
*   IF PRT00PTR^=0 THEN             /* HAVE WORKAREA         @Y30LB55*/
         L     @10,PRT00PTR(,CVTPTR)                               0107
         LTR   @10,@10                                             0107
         BZ    @RF00107                                            0107
*     DO;                           /* YES, FREE IT          @Y30LB55*/
*                                                                  0108
*       /*************************************************************/
*       /*                                                           */
*       /* CLOSE SYSTERM                                             */
*       /*                                                           */
*       /*************************************************************/
*       PRTWKPTR=PRT00PTR;          /* SET LOCAL WORK PTR    @Y30LB55*/
         LR    PRTWKPTR,@10                                        0109
*       IF OFLAGS(4)='1'B THEN      /* DCB OPEN              @Y30LB55*/
         TM    OFLAGS(PRTWKPTR),B'00010000'                        0110
         BNO   @RF00110                                            0110
*         DO;                       /* YES, CLOSE IT         @Y30LB55*/
*           RFY                                                    0112
*            (R1,                                                  0112
*             R6) RSTD;                                    /*@Y30LB55*/
*           R1=ADDR(CLOSLIST);      /* R1 -> CLOSLIST        @Y30LB55*/
         LA    R1,CLOSLIST(,PRTWKPTR)                              0113
*           R6=ADDR(PRINTDCB);      /* R6 -> DCB             @Y30LB55*/
         LA    R6,PRINTDCB(,PRTWKPTR)                              0114
*           GEN( CLOSE ((R6)),MF=(E,(R1)));                /*@Y30LB55*/
          CLOSE ((R6)),MF=(E,(R1))
*           RFY                                                    0116
*            (R1,                                                  0116
*             R6) UNRSTD;                                  /*@Y30LB55*/
*         END;                      /* END CLOSE DCB         @Y30LB55*/
*       ELSE                                                       0118
*         ;                         /* DCB NOT OPEN          @Y30LB55*/
*                                                                  0118
@RF00110 DS    0H                                                  0119
*       /*************************************************************/
*       /*                                                           */
*       /* FREE PRTWORK                                              */
*       /*                                                           */
*       /*************************************************************/
*       CORELEN=LENGTH(PRTWORK);    /* MOVE LENGTH OF PRTWORK@Y30LB55*/
         MVC   CORELEN(3,CVTPTR),@CF00201+1                        0119
*       SPNO=PRTSPNO;               /* MOVE SUBPOOL NUMBER   @Y30LB55*/
         MVI   SPNO(CVTPTR),X'00'                                  0120
*       COREADDR=PRT00PTR;          /* MOVE ADDRESS OF AREA  @Y30LB55*/
         MVC   COREADDR(4,CVTPTR),PRT00PTR(CVTPTR)                 0121
*       RFY                                                        0122
*         R1 RSTD;                                         /*@Y30LB55*/
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/
         LA    R1,WORKCALL(,CVTPTR)                                0123
*       CALL ISDAFREE;              /* FREE PRTWORK          @Y30LB55*/
         L     @15,@CV00112                                        0124
         BALR  @14,@15                                             0124
*       RFY                                                        0125
*         R1 UNRSTD;                                       /*@Y30LB55*/
*       PRT00PTR=0;                 /* ZERO PRT00PTR IN ISDACVT    0126
*                                                            @Y30LB55*/
         SLR   @10,@10                                             0126
         ST    @10,PRT00PTR(,CVTPTR)                               0126
*     END;                          /* END CLOSE AND FREE    @Y30LB55*/
*   ELSE                                                           0128
*     ;                             /* NO WORK AREA          @Y30LB55*/
@RF00107 DS    0H                                                  0129
*   RETURN;                         /* RETURN TO ISDASDA0    @Y30LB55*/
@EL00001 L     @13,4(,@13)                                         0129
@EF00001 L     @00,@SIZDATD                                        0129
         LR    @01,@11                                             0129
         ISDAFSPC R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0129
         BR    @14                                                 0129
*                                                                  0130
*   /*****************************************************************/
*   /*                                                               */
*   /* ISDAPRTH - ENTRY TO SAVE SDA HEADER                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0130
*ISDAPRTH:                                                         0130
*   ENTRY(WORKPTR);                 /* SAVE HEADER ENTRY     @Y30LB55*/
@EP00130 MVC   @PC00001(4),0(@01)                                  0130
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO CVT  @Y30LB55*/
         L     @10,@PC00001                                        0131
         L     CVTPTR,WORKPTR(,@10)                                0131
*   RETCODE=0;                      /* THIS ENTRY HAS NO ERROR CODES
*                                                            @Y30LB55*/
         SLR   @10,@10                                             0132
         LR    RETCODE,@10                                         0132
*   PRTWKPTR=PRT00PTR;              /* SET LOCAL PTR TO PRTWORK    0133
*                                                            @Y30LB55*/
         L     PRTWKPTR,PRT00PTR(,CVTPTR)                          0133
*   IF PRTWKPTR^=0 THEN             /* HAVE WORKAREA         @Y30LB55*/
         CR    PRTWKPTR,@10                                        0134
         BE    @RF00134                                            0134
*     HEADER(2:133)=LINE;           /* YES, MOVE HEADER LINE @Y30LB55*/
         MVC   HEADER+1(132,PRTWKPTR),LINE(CVTPTR)                 0135
*   ELSE                            /* NO WORKAREA           @Y30LB55*/
*     RETCODE=24;                   /* SET NO CORE RETURN    @Y30LB55*/
         B     @RC00134                                            0136
@RF00134 LA    RETCODE,24                                          0136
*   RETURN CODE(RETCODE);           /* RETURN TO ISDASDA0    @Y30LB55*/
*                                                                  0137
@RC00134 L     @13,4(,@13)                                         0137
         L     @00,@SIZDATD                                        0137
         LR    @01,@11                                             0137
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0137
         L     @14,12(,@13)                                        0137
         LM    @00,@12,20(@13)                                     0137
         BR    @14                                                 0137
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERATE DATA                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*   GENERATE DATA DEFS(DCBSTAT,OPENSTAT,CLOSSTAT,EXITLIST);/*@Y30LB55*/
*   END ISDAPRT0                                           /*@Y30LB55*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ISDACVT )                                        *
*;                                                                 0139
         B     @EL00001                                            0139
@DATA    DS    0H
@CH00082 DC    H'1'
@CH00164 DC    H'58'
@CH00152 DC    H'1197'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
ISDAPRT0 CSECT
         DS    0F
@CF00201 DC    F'250'
@DATD    DSECT
         DS    0D
ISDAPRT0 CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00111 DC    V(ISDAGET1)
@CV00112 DC    V(ISDAFREE)
@CV00110 DC    V(ISDAGET0)
         DS    0D
@CB00150 DC    X'000000'
@CB00148 EQU   @CB00150
EDPAT3   DC    X'40202120'
PATCH    DC    50X'00'
ISDAPRT0 CSECT
DCBSTAT  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,SYNAD=EOD,LRECL=133, XX
               RECFM=FBA,EXLST=EXITLIST
OPENSTAT OPEN  (0,OUTPUT),MF=L
CLOSSTAT CLOSE (0),MF=L
         DS    0F
EXITLIST DC    XL1'85'                 FLAG FOR DCB  EXIT
         DC    AL3(BLOCKFIX)           ADDR OF BLOCKFIX ENTRY
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDAPRT0 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCODE  EQU   @04
I        EQU   @05
PRTWKPTR EQU   @03
CVTPTR   EQU   @02
R1       EQU   @01
R6       EQU   @06
R7       EQU   @07
R15      EQU   @15
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
PRT00PTR EQU   CVTPTRS0+28
WORKCALL EQU   CVTPTRS0+96
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
ANSI     EQU   OUTLINE
LINE     EQU   OUTLINE+1
SDARPTID EQU   PRT0CALL+133
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
PRTWORK  EQU   0
TEMP8    EQU   PRTWORK
TEMP68   EQU   TEMP8+5
TEMP78   EQU   TEMP68+1
OPENLIST EQU   PRTWORK+8
CLOSLIST EQU   PRTWORK+12
PAGENO   EQU   PRTWORK+16
LINENO   EQU   PRTWORK+18
PRINTDCB EQU   PRTWORK+20
OFLAGS   EQU   PRINTDCB+48
DCBBLKSI EQU   PRINTDCB+62
HEADER   EQU   PRTWORK+116
HEADERID EQU   HEADER+1
ANSISAVE EQU   PRTWORK+249
WORKPTR  EQU   0
PAGEC    EQU   HEADER+124
*                                      START UNREFERENCED COMPONENTS
@NM00005 EQU   HEADER+4
@NM00004 EQU   HEADER
@NM00003 EQU   PRINTDCB+64
@NM00002 EQU   PRINTDCB+49
@NM00001 EQU   PRINTDCB
TEMP1    EQU   TEMP68
TEMP5    EQU   TEMP8
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DRC00PTR EQU   CVTPTRS0+76
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
DCK00PTR EQU   CVTPTRS0+64
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
PARMPTR  EQU   CVTPTRS0+8
SDATAPTR EQU   CVTPTRS0+4
DATAPTR  EQU   CVTPTRS0
*                                      END UNREFERENCED COMPONENTS
@RC00071 EQU   @RC00059
@RC00083 EQU   @RC00081
@RC00092 EQU   @RC00083
@ENDDATA EQU   *
         END   ISDAPRT0,(C'PLS0141',0603,75313)
