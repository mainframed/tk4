         TITLE 'ISDADCK0 ACCUMULATOR FOR DCK TLX                       *
                        '
ISDADCK0 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(8)                                              0001
         DC    C'ISDADCK0'                                         0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         ISDAGSPC R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0029
*   /*****************************************************************/
*   /*                                                               */
*   /* HOUSEKEEPING                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0029
*   CVTPTR=WORKPTR;                 /*                       @Y30LB54*/
         L     @10,@PC00001                                        0029
         L     CVTPTR,WORKPTR(,@10)                                0029
*   RETCODE=0;                      /* SET RETURN CODE ZERO  @ZMTPM01*/
         SLR   @07,@07                                             0030
         LR    RETCODE,@07                                         0030
*   DCKWKPTR=DCK00PTR;              /* SET LOCAL WORK PTR    @ZM30975*/
         L     @15,DCK00PTR(,CVTPTR)                               0031
         LR    DCKWKPTR,@15                                        0031
*   SENSEPTR=SDATAPTR;              /* SET LOCAL SENSE PTR   @ZM30975*/
         L     SENSEPTR,SDATAPTR(,CVTPTR)                          0032
*   LPARMPTR=PARMPTR;               /* SET LOCAL PARM PTR    @ZM30975*/
         L     LPARMPTR,PARMPTR(,CVTPTR)                           0033
*   IF DCK00PTR=0 THEN              /* FIRST TIME SWITCH     @Y30LB54*/
         CR    @15,@07                                             0034
         BNE   @RF00034                                            0034
*     DO;                           /*                       @Y30LB54*/
*       SPNO=0;                     /* WANT SUBPOOL ZERO     @Y30LB54*/
         MVI   SPNO(CVTPTR),X'00'                                  0036
*       CORELEN=LENGTH(WORKCORE);   /*                       @Y30LB54*/
         MVC   CORELEN(3,CVTPTR),@CF00340+1                        0037
*       CALL ISDAGET1(WORKPTR);     /*                       @Y30LB54*/
         ST    @10,@AL00001                                        0038
         L     @15,@CV00040                                        0038
         LA    @01,@AL00001                                        0038
         BALR  @14,@15                                             0038
*       RFY                                                        0039
*         R15 RSTD;                 /*                       @Y30LB54*/
*       RETCODE=R15;                /*                       @Y30LB54*/
         LR    RETCODE,R15                                         0040
*       RFY                                                        0041
*         R15 UNRSTD;               /*                       @Y30LB54*/
*       IF RETCODE=0 THEN                                          0042
         LTR   RETCODE,RETCODE                                     0042
         BNZ   @RF00042                                            0042
*         DO;                       /*                       @Y30LB54*/
*           DCK00PTR=COREADDR;      /*                       @Y30LB54*/
         L     @10,COREADDR(,CVTPTR)                               0044
         ST    @10,DCK00PTR(,CVTPTR)                               0044
*           DCKWKPTR=COREADDR;      /* SET LOCAL WORK PTR    @ZM30975*/
         LR    DCKWKPTR,@10                                        0045
*         END;                      /*                       @Y30LB54*/
*       ELSE                                                       0047
*         DO;                       /*                       @Y30LB54*/
         B     @RC00042                                            0047
@RF00042 DS    0H                                                  0048
*           RETCODE=4;              /*                       @Y30LB54*/
         LA    RETCODE,4                                           0048
*           CDCKTLX='00'X;          /* TURN OFF CALL PARM    @ZM30975*/
         MVI   CDCKTLX(LPARMPTR),X'00'                             0049
*           RETURN CODE(RETCODE);   /*                       @Y30LB54*/
         L     @13,4(,@13)                                         0050
         L     @00,@SIZDATD                                        0050
         LR    @01,@12                                             0050
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0050
         L     @14,12(,@13)                                        0050
         LM    @00,@12,20(@13)                                     0050
         BR    @14                                                 0050
*         END;                      /*                       @Y30LB54*/
*       COUNTRP8=0;                 /* NUMBER OF TIMES RPT 8 COUNTERS
*                                      ADDED TO              @Y30LB54*/
@RC00042 SLR   @10,@10                                             0052
         ST    @10,COUNTRP8(,DCKWKPTR)                             0052
*       COUNTRP9=0;                 /* NUMBER OF TIMES RPT 9 COUNTERS
*                                      ADDED TO              @Y30LB54*/
         ST    @10,COUNTRP9(,DCKWKPTR)                             0053
*       LIBTAB(1)=0;                /* RESET LIBRARY POINTERS TO 0 0054
*                                                            @Y30LB54*/
         ST    @10,LIBTAB(,DCKWKPTR)                               0054
*       LIBTAB(2)=0;                /*                       @Y30LB54*/
         ST    @10,LIBTAB+4(,DCKWKPTR)                             0055
*       LIBTAB(3)=0;                /*                       @Y30LB54*/
         ST    @10,LIBTAB+8(,DCKWKPTR)                             0056
*       LIBTAB(4)=0;                /*                       @Y30LB54*/
         ST    @10,LIBTAB+12(,DCKWKPTR)                            0057
*       LIBNO(1)='01'X;             /* SET UP LIBRARY COUNTER TABLE
*                                                            @Y30LB54*/
         MVI   LIBNO(DCKWKPTR),X'01'                               0058
*       LIBNO(2)='02'X;             /*                       @Y30LB54*/
         MVI   LIBNO+4(DCKWKPTR),X'02'                             0059
*       LIBNO(3)='03'X;             /*                       @Y30LB54*/
         MVI   LIBNO+8(DCKWKPTR),X'03'                             0060
*       LIBNO(4)='04'X;             /*                       @Y30LB54*/
         MVI   LIBNO+12(DCKWKPTR),X'04'                            0061
*     END;                          /*                       @Y30LB54*/
*   ELSE                                                           0063
*     ;                             /*                       @Y30LB54*/
@RF00034 DS    0H                                                  0064
*   LOGPTR=DATAPTR;                 /*                       @Y30LB54*/
         MVC   LOGPTR(4,DCKWKPTR),DATAPTR(CVTPTR)                  0064
*                                                                  0065
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN LOGIC PULL ALL DATA TOGETHER AS NEEDED                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0065
*   DATA08=TRPAT08;                 /* SET UP TRANSLATE TABLE@Y30LB54*/
         MVC   DATA08(4,DCKWKPTR),TRPAT08                          0065
*   DATA09=TRPAT09;                 /* SET UP TRANSLATE TABLE@Y30LB54*/
         MVC   DATA09(2,DCKWKPTR),TRPAT09                          0066
*   TR(DATA08,ISDAMSCS);            /* REACH INTO DATA AND PULL    0067
*                                      TOGETHER FIELDS       @Y30LB54*/
         TR    DATA08(4,DCKWKPTR),ISDAMSCS(SENSEPTR)               0067
*   TR(DATA09,ISDAMSCS);            /* REACH INTO DATA AND PULL    0068
*                                      TOGETHER FIELDS       @Y30LB54*/
         TR    DATA09(2,DCKWKPTR),ISDAMSCS(SENSEPTR)               0068
*   FULLWD1=SUBSYSID;               /* GET SSID AND LIBRARY NO     0069
*                                                            @Y30LB54*/
         SLR   @10,@10                                             0069
         ICM   @10,3,SUBSYSID(SENSEPTR)                            0069
         ST    @10,FULLWD1(,DCKWKPTR)                              0069
*   DATASSID=FULLWD1&'0000000F'X;   /* STRIP OFF SSID        @Y30LB54*/
         N     @10,@CF00316                                        0070
         ST    @10,DATASSID(,DCKWKPTR)                             0070
*   IF DATASSID>7 THEN              /* VALIDATE SSID         @Y30LB54*/
         CH    @10,@CH00317                                        0071
         BNH   @RF00071                                            0071
*     DO;                           /*                       @Y30LB54*/
*       RETCODE=8;                  /*                       @Y30LB54*/
         LA    RETCODE,8                                           0073
*       RETURN CODE(RETCODE);       /*                       @Y30LB54*/
         L     @13,4(,@13)                                         0074
         L     @00,@SIZDATD                                        0074
         LR    @01,@12                                             0074
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0074
         L     @14,12(,@13)                                        0074
         LM    @00,@12,20(@13)                                     0074
         BR    @14                                                 0074
*     END;                          /*                       @Y30LB54*/
*   ELSE                                                           0076
*     IF SSIDTYPE(3)^='1'B THEN                                    0076
@RF00071 TM    SSIDTYPE(SENSEPTR),B'00000010'                      0076
         BO    @RF00076                                            0076
*       DO;                         /*                       @Y30LB54*/
*         RETCODE=0;                /* DO NOT FLAG DRC SSID  @ZM02889*/
         SLR   RETCODE,RETCODE                                     0078
*         RETURN CODE(RETCODE);     /*                       @Y301B54*/
         L     @13,4(,@13)                                         0079
         L     @00,@SIZDATD                                        0079
         LR    @01,@12                                             0079
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0079
         L     @14,12(,@13)                                        0079
         LM    @00,@12,20(@13)                                     0079
         BR    @14                                                 0079
*       END;                        /*                       @Y30LB54*/
*     ELSE                                                         0081
*       ;                           /*                       @Y301B54*/
@RF00076 DS    0H                                                  0082
*   DATALIB=FULLWD1&'000000F0'X;    /* STRIP OFF LIBRARY NO  @Y30LB54*/
         L     @10,FULLWD1(,DCKWKPTR)                              0082
         N     @10,@CF00319                                        0082
         ST    @10,DATALIB(,DCKWKPTR)                              0082
*   SRL(DATALIB,4);                 /* SHIFT IT TO UNITS POSITION  0083
*                                                            @Y30LB54*/
         L     @10,DATALIB(,DCKWKPTR)                              0083
         SRL   @10,4                                               0083
         ST    @10,DATALIB(,DCKWKPTR)                              0083
*   DATALIB=DATALIB+1;              /* ALLOW FOR STARTING AT LIBRARY
*                                      0                     @Y30LB54*/
*                                                                  0084
         LA    @10,1                                               0084
         AL    @10,DATALIB(,DCKWKPTR)                              0084
         ST    @10,DATALIB(,DCKWKPTR)                              0084
*   /*****************************************************************/
*   /*                                                               */
*   /* DISPATCHER                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0085
*   CALL LIBMATCH;                  /* DETERMINE IF WE HAD LIBRARY 0085
*                                      BEFORE                @Y30LB54*/
         BAL   @14,LIBMATCH                                        0085
*   IF RETCODE^=0 THEN              /* MUST HAVE HAD CORE PROBLEMS OR
*                                      INPUT ERROR           @Y30LB54*/
         LTR   RETCODE,RETCODE                                     0086
         BZ    @RF00086                                            0086
*     RETURN CODE(RETCODE);         /*                       @Y30LB54*/
         L     @13,4(,@13)                                         0087
         L     @00,@SIZDATD                                        0087
         LR    @01,@12                                             0087
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0087
         L     @14,12(,@13)                                        0087
         LM    @00,@12,20(@13)                                     0087
         BR    @14                                                 0087
*   ELSE                                                           0088
*     ;                             /*                       @Y30LB54*/
*                                                                  0088
@RF00086 DS    0H                                                  0089
*   /*****************************************************************/
*   /*                                                               */
*   /* OUTPUT OF THIS IS PTRLIB HAS POINTER TO COUNTERS              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0089
*   PTRSSID=DATASSID*2;             /* TWO BYTE COUNTERS TIMES SSID
*                                      NO                    @Y30LB54*/
*                                                                  0089
         L     @10,DATASSID(,DCKWKPTR)                             0089
         ALR   @10,@10                                             0089
         ST    @10,PTRSSID(,DCKWKPTR)                              0089
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPUTE DISPLACEMENTS AND ADD ONE TO COUNTERS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0090
*   CHAR4(1:1)=CDCKTLX&'01'X;       /* CONVERT TO LOOK AT DCK ONLY 0090
*                                                            @Y30LB54*/
         MVC   CHAR4(1,DCKWKPTR),CDCKTLX(LPARMPTR)                 0090
         NI    CHAR4(DCKWKPTR),X'01'                               0090
*   IF CHAR4(1:1)='01'X THEN                                       0091
         CLI   CHAR4(DCKWKPTR),X'01'                               0091
         BNE   @RF00091                                            0091
*     DO;                           /*                       @Y30LB54*/
*       CALL RPT8FILL;              /* DO DCK COUNTERS       @Y30LB54*/
         BAL   @14,RPT8FILL                                        0093
*       IF RETCODE^=0 THEN          /* ERROR ON INPUT        @Y30LB54*/
         LTR   RETCODE,RETCODE                                     0094
         BZ    @RF00094                                            0094
*         RETURN CODE(RETCODE);     /*                       @Y30LB54*/
         L     @13,4(,@13)                                         0095
         L     @00,@SIZDATD                                        0095
         LR    @01,@12                                             0095
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0095
         L     @14,12(,@13)                                        0095
         LM    @00,@12,20(@13)                                     0095
         BR    @14                                                 0095
*     END;                          /*                       @Y30LB54*/
*   ELSE                                                           0097
*     ;                             /*                       @Y30LB54*/
@RF00091 DS    0H                                                  0098
*   CHAR4(1:1)=CDCKTLX&'02'X;       /* CONVERT TO LOOK ONLY AT TLX 0098
*                                                            @Y30LB54*/
@RC00091 MVC   CHAR4(1,DCKWKPTR),CDCKTLX(LPARMPTR)                 0098
         NI    CHAR4(DCKWKPTR),X'02'                               0098
*   IF CHAR4(1:1)='02'X THEN                                       0099
         CLI   CHAR4(DCKWKPTR),X'02'                               0099
         BNE   @RF00099                                            0099
*     DO;                           /*                       @Y30LB54*/
*       CALL RPT9FILL;              /* DO TLX COUNTERS       @Y30LB54*/
         BAL   @14,RPT9FILL                                        0101
*       IF RETCODE^=0 THEN          /* MUST HAVE HAD ERROR ON INPUT
*                                                            @Y30LB54*/
         LTR   RETCODE,RETCODE                                     0102
         BZ    @RF00102                                            0102
*         RETURN CODE(RETCODE);     /*                       @Y30LB54*/
         L     @13,4(,@13)                                         0103
         L     @00,@SIZDATD                                        0103
         LR    @01,@12                                             0103
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0103
         L     @14,12(,@13)                                        0103
         LM    @00,@12,20(@13)                                     0103
         BR    @14                                                 0103
*     END;                          /*                       @Y30LB54*/
*   ELSE                                                           0105
*     ;                             /*                       @Y30LB54*/
*                                                                  0105
@RF00099 DS    0H                                                  0106
*   /*****************************************************************/
*   /*                                                               */
*   /* THATS IT FOR THIS RECORD                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0106
*/*ADDRESS STOP AT THIS POINT                                @Y30LB54
*                                                            @Y30LB54*/
*                                                                  0106
*   RETURN CODE(RETCODE);           /* FINAL EXIT FROM ACCUMULATOR 0106
*                                      PORTION               @Y30LB54*/
@RC00099 L     @13,4(,@13)                                         0106
         L     @00,@SIZDATD                                        0106
         LR    @01,@12                                             0106
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0106
         L     @14,12(,@13)                                        0106
         LM    @00,@12,20(@13)                                     0106
         BR    @14                                                 0106
*                                                                  0107
*   /*****************************************************************/
*   /*                                                               */
*   /* DID WE HAVE THIS LIBRARY BEFORE IF NOT GET CTRS               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0107
*LIBMATCH:                                                         0107
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB54*/
LIBMATCH ST    @14,@SA00002                                        0107
*   PTRLIB=0;                       /* FORCE IT TO FILL IN CORRECT 0108
*                                      ADDRESS               @Y30LB54*/
         SLR   @10,@10                                             0108
         ST    @10,PTRLIB(,DCKWKPTR)                               0108
*   CHAR4=DATALIB;                  /* NEED TO MOVE IT TO CHAR AREA
*                                      FOR SUBSCRIPTING      @Y30LB54*/
         MVC   CHAR4(4,DCKWKPTR),DATALIB(DCKWKPTR)                 0109
*   DO CTR=1 TO 4 BY 1;             /* FOUR LIBRARY REPORTS POSSIBLE
*                                                            @Y30LB54*/
         LA    @10,1                                               0110
         ST    @10,CTR(,DCKWKPTR)                                  0110
@DL00110 DS    0H                                                  0111
*     IF CHAR4(4)=LIBNO(CTR) THEN   /* DO WE HAVE A VALID LIBRARY  0111
*                                                            @Y30LB54*/
         L     @10,CTR(,DCKWKPTR)                                  0111
         SLA   @10,2                                               0111
         ST    @10,@TF00001                                        0111
         ALR   @10,DCKWKPTR                                        0111
         CLC   CHAR4+3(1,DCKWKPTR),LIBNO-4(@10)                    0111
         BNE   @RF00111                                            0111
*       DO;                         /*                       @Y30LB54*/
*         IF LIBPTR(CTR)=0 THEN     /* DID WE HAVE ONE BEFORE@Y30LB54*/
         L     @10,@TF00001                                        0113
         L     @10,LIBPTR-5(@10,DCKWKPTR)                          0113
         LA    @10,0(,@10)                                         0113
         LTR   @10,@10                                             0113
         BNZ   @RF00113                                            0113
*           DO;                     /*                       @Y30LB54*/
*             SPNO=0;               /* INSERT SUBPULL ID WE WANT   0115
*                                                            @Y30LB54*/
         MVI   SPNO(CVTPTR),X'00'                                  0115
*/*EACH LIBRARY HAS SET OF COUNTERS                          @Y30LB54*/
*/* DCK      HAS 256 COUNTERS OF 2 BYTES FOR 512 BYTES       @Y30LB54*/
*/* TLX      HAS 512 COUNTERS OF 2 BYTES FOR 1024 BYTES      @Y30LB54*/
*/* TOTAL NUMBER OF COUNTERS = 768                           @Y30LB54*/
*                                                                  0116
*             CORELEN=512+1024;     /* LENGTH OF COUNTERS    @Y30LB54*/
         MVC   CORELEN(3,CVTPTR),@CF00341+1                        0116
*             CALL ISDAGET1(WORKPTR);/* GET THE CORE         @Y30LB54*/
         L     @10,@PC00001                                        0117
         ST    @10,@AL00001                                        0117
         L     @15,@CV00040                                        0117
         LA    @01,@AL00001                                        0117
         BALR  @14,@15                                             0117
*             RFY                                                  0118
*               R15 RSTD;           /*                       @Y30LB54*/
*             RETCODE=R15;          /* SAVE RETURN CODE FROM GETMAIN
*                                                            @Y30LB54*/
         LR    RETCODE,R15                                         0119
*             RFY                                                  0120
*               R15 UNRSTD;         /* RELEASE REG 15 FOR OTHER USE
*                                                            @Y30LB54*/
*             IF RETCODE=0 THEN                                    0121
         LTR   RETCODE,RETCODE                                     0121
         BNZ   @RF00121                                            0121
*               DO;                 /*                       @Y30LB54*/
*                 PTRLIB=COREADDR;  /* POINT TO MY COUNTERS  @Y30LB54*/
         L     @10,COREADDR(,CVTPTR)                               0123
         ST    @10,PTRLIB(,DCKWKPTR)                               0123
*                 LIBPTR(CTR)=PTRLIB;/*                      @Y30LB54*/
         L     @07,CTR(,DCKWKPTR)                                  0124
         SLA   @07,2                                               0124
         ALR   @07,DCKWKPTR                                        0124
         STCM  @10,7,LIBPTR-4(@07)                                 0124
*                 CTR=100;          /* TERMINATE THE LOOP    @Y30LB54*/
         MVC   CTR(4,DCKWKPTR),@CF00330                            0125
*                 KICKPTR=PTRLIB;   /* ZERO OUT THE GETMAIN CORE   0126
*                                                            @Y30LB54*/
         ST    @10,KICKPTR(,DCKWKPTR)                              0126
*                 DO CTR1=1 TO 768 BY 1;/* THEY MAY CONTAIN JUNK   0127
*                                                            @Y30LB54*/
         LA    @10,1                                               0127
         ST    @10,CTR1(,DCKWKPTR)                                 0127
@DL00127 DS    0H                                                  0128
*                   COUNTER(CTR1)=0;/*                       @Y30LB54*/
         L     @10,CTR1(,DCKWKPTR)                                 0128
         ALR   @10,@10                                             0128
         L     @07,KICKPTR(,DCKWKPTR)                              0128
         SLR   @15,@15                                             0128
         AL    @07,@CF00343                                        0128
         STH   @15,COUNTER(@10,@07)                                0128
*                 END;              /*                       @Y30LB54*/
         LA    @10,1                                               0129
         AL    @10,CTR1(,DCKWKPTR)                                 0129
         ST    @10,CTR1(,DCKWKPTR)                                 0129
         CH    @10,@CH00311                                        0129
         BNH   @DL00127                                            0129
*               END;                /*                       @Y30LB54*/
*             ELSE                  /* NO CORE AVAILABLE     @Y30LB54*/
*               DO;                 /*                       @Y30LB54*/
         B     @RC00121                                            0131
@RF00121 DS    0H                                                  0132
*                 DO CTR1=1 TO 4 BY 1;/*                     @Y30LB54*/
         LA    @10,1                                               0132
         ST    @10,CTR1(,DCKWKPTR)                                 0132
@DL00132 DS    0H                                                  0133
*                   IF LIBPTR(CTR1)^=0 THEN/* FREE ALL CORE ALREADY
*                                      OBTAINED              @Y30LB54*/
         L     @10,CTR1(,DCKWKPTR)                                 0133
         SLA   @10,2                                               0133
         L     @10,LIBPTR-5(@10,DCKWKPTR)                          0133
         LA    @10,0(,@10)                                         0133
         LTR   @10,@10                                             0133
         BZ    @RF00133                                            0133
*                     DO;           /*                       @Y30LB54*/
*                       SPNO=0;     /*                       @Y30LB54*/
         MVI   SPNO(CVTPTR),X'00'                                  0135
*                       CORELEN=512+1024;/* FILL IN LENGTH OF AREA 0136
*                                                            @Y30LB54*/
         MVC   CORELEN(3,CVTPTR),@CF00341+1                        0136
*                       COREADDR=LIBPTR(CTR1);/* FILL IN ADDRESS OF
*                                      AREA                  @Y30LB54*/
         ST    @10,COREADDR(,CVTPTR)                               0137
*                       CALL ISDAFREE(WORKPTR);/*            @Y30LB54*/
         L     @10,@PC00001                                        0138
         ST    @10,@AL00001                                        0138
         L     @15,@CV00041                                        0138
         LA    @01,@AL00001                                        0138
         BALR  @14,@15                                             0138
*                       LIBPTR(CTR1)=0;/* DELETE GOTTEN CORE PTR   0139
*                                                            @Y30LB54*/
         L     @10,CTR1(,DCKWKPTR)                                 0139
         SLA   @10,2                                               0139
         ALR   @10,DCKWKPTR                                        0139
         SLR   @07,@07                                             0139
         STCM  @07,7,LIBPTR-4(@10)                                 0139
*                     END;          /*                       @Y30LB54*/
*                   ELSE                                           0141
*                     ;             /*                       @Y30LB54*/
@RF00133 DS    0H                                                  0142
*                 END;              /*                       @Y30LB54*/
         LA    @10,1                                               0142
         AL    @10,CTR1(,DCKWKPTR)                                 0142
         ST    @10,CTR1(,DCKWKPTR)                                 0142
         CH    @10,@CH00050                                        0142
         BNH   @DL00132                                            0142
*                 CDCKTLX='00'X;    /* DONT LET CONTROL COME TO US 0143
*                                      AGAIN                 @Y30LB54*/
         MVI   CDCKTLX(LPARMPTR),X'00'                             0143
*                 RETCODE=4;        /* TELL CONTROL WHY WE QUIT    0144
*                                                            @Y30LB54*/
         LA    RETCODE,4                                           0144
*                 SPNO=0;           /* FREE WORKING CORE ALSO@Y30LB54*/
         MVI   SPNO(CVTPTR),X'00'                                  0145
*                 CORELEN=LENGTH(WORKCORE);/* FILL IN LENGTH OF AREA
*                                                            @Y30LB54*/
         MVC   CORELEN(3,CVTPTR),@CF00340+1                        0146
*                 COREADDR=DCK00PTR;/* FILL IN LOCATION ADDRESS    0147
*                                                            @Y30LB54*/
         MVC   COREADDR(4,CVTPTR),DCK00PTR(CVTPTR)                 0147
*                 CALL ISDAFREE(WORKPTR);/*                  @Y30LB54*/
         L     @10,@PC00001                                        0148
         ST    @10,@AL00001                                        0148
         L     @15,@CV00041                                        0148
         LA    @01,@AL00001                                        0148
         BALR  @14,@15                                             0148
*                 DCK00PTR=0;       /* TELL THE WORLD WE QUIT@Y30LB54*/
         SLR   @10,@10                                             0149
         ST    @10,DCK00PTR(,CVTPTR)                               0149
*                 RETURN CODE(RETCODE);/*                    @Y30LB54*/
         LR    @15,RETCODE                                         0150
@EL00002 DS    0H                                                  0150
@EF00002 DS    0H                                                  0150
@ER00002 L     @14,@SA00002                                        0150
         BR    @14                                                 0150
*               END;                /*                       @Y30LB54*/
*           END;                    /*                       @Y30LB54*/
*         ELSE                                                     0153
*           DO;                     /*                       @Y30LB54*/
         B     @RC00113                                            0153
@RF00113 DS    0H                                                  0154
*             PTRLIB=LIBPTR(CTR);   /* USE OLD ONE           @Y30LB54*/
         L     @10,CTR(,DCKWKPTR)                                  0154
         SLA   @10,2                                               0154
         L     @10,LIBPTR-5(@10,DCKWKPTR)                          0154
         LA    @10,0(,@10)                                         0154
         ST    @10,PTRLIB(,DCKWKPTR)                               0154
*             CTR=100;              /*                       @Y30LB54*/
         MVC   CTR(4,DCKWKPTR),@CF00330                            0155
*           END;                    /*                       @Y30LB54*/
*       END;                        /*                       @Y30LB54*/
*     ELSE                                                         0158
*       ;                           /*                       @Y30LB54*/
@RF00111 DS    0H                                                  0159
*   END;                            /*                       @Y30LB54*/
@RC00111 LA    @10,1                                               0159
         AL    @10,CTR(,DCKWKPTR)                                  0159
         ST    @10,CTR(,DCKWKPTR)                                  0159
         CH    @10,@CH00050                                        0159
         BNH   @DL00110                                            0159
*   IF CTR^>99 THEN                                                0160
         L     @10,CTR(,DCKWKPTR)                                  0160
         CH    @10,@CH00331                                        0160
         BH    @RF00160                                            0160
*     DO;                           /*                       @Y30LB54*/
*       RETCODE=8;                  /* INVALID LIBRARY NO ON INPUT 0162
*                                                            @Y30LB54*/
         LA    RETCODE,8                                           0162
*       RETURN CODE(RETCODE);       /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0163
         L     @14,@SA00002                                        0163
         BR    @14                                                 0163
*     END;                          /*                       @Y30LB54*/
*   ELSE                                                           0165
*     ;                             /*                       @Y30LB54*/
@RF00160 DS    0H                                                  0166
*   END LIBMATCH;                   /*                       @Y30LB54*/
         B     @EL00002                                            0166
*                                                                  0167
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL THE DCK COUNTERS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0167
*RPT8FILL:                                                         0167
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB54*/
RPT8FILL ST    @14,12(,@13)                                        0167
*   PTRRPT=0;                       /* REPORT OFFSET INTO COUNTERS 0168
*                                                            @Y30LB54*/
         SLR   @10,@10                                             0168
         ST    @10,PTRRPT(,DCKWKPTR)                               0168
*   DO CTR=1 TO 4 BY 1;             /* GOING TO PROCESS 4 BYTES OF 0169
*                                      DATA                  @Y30LB54*/
         LA    @10,1                                               0169
         ST    @10,CTR(,DCKWKPTR)                                  0169
@DL00169 DS    0H                                                  0170
*     PTRBYTE=(CTR-1)*(64*2);       /* 64 COUNTERS OF 2 BYTES EACH 0170
*                                                            @Y30LB54*/
         L     @10,CTR(,DCKWKPTR)                                  0170
         BCTR  @10,0                                               0170
         SLA   @10,7                                               0170
         ST    @10,PTRBYTE(,DCKWKPTR)                              0170
*     DO CTR1=1 TO 8 BY 1;          /* EACH BYTE HAS 8 COMBINATION 0171
*                                                            @Y30LB54*/
         LA    @10,1                                               0171
         ST    @10,CTR1(,DCKWKPTR)                                 0171
@DL00171 DS    0H                                                  0172
*       DATAWORK=DATA08(CTR)&MASKARG(CTR1);/* CONTENTS OF BYTE     0172
*                                                            @Y30LB54*/
         L     @10,CTR(,DCKWKPTR)                                  0172
         L     @07,CTR1(,DCKWKPTR)                                 0172
         SLA   @07,2                                               0172
         ALR   @10,DCKWKPTR                                        0172
         MVC   DATAWORK(1,DCKWKPTR),DATA08-1(@10)                  0172
         LA    @10,MASKARG-4(@07)                                  0172
         NC    DATAWORK(1,DCKWKPTR),0(@10)                         0172
*       IF DATAWORK^=0 THEN                                        0173
         CLI   DATAWORK(DCKWKPTR),0                                0173
         BE    @RF00173                                            0173
*         DO;                       /*                       @Y30LB54*/
*           KICKPTR=PTRRPT+PTRLIB+PTRBYTE+PTRSSID+MASKDISP(CTR1);  0175
         L     @10,PTRRPT(,DCKWKPTR)                               0175
         AL    @10,PTRLIB(,DCKWKPTR)                               0175
         AL    @10,PTRBYTE(,DCKWKPTR)                              0175
         AL    @10,PTRSSID(,DCKWKPTR)                              0175
         L     @07,MASKDISP-5(@07)                                 0175
         LA    @07,0(,@07)                                         0175
         ALR   @10,@07                                             0175
         ST    @10,KICKPTR(,DCKWKPTR)                              0175
*           COUNTER(1)=COUNTER(1)+1;/* KICK COUNTER BY 1     @Y30LB54*/
         LA    @07,1                                               0176
         LH    @15,COUNTER(,@10)                                   0176
         ALR   @15,@07                                             0176
         STH   @15,COUNTER(,@10)                                   0176
*           COUNTRP8=COUNTRP8+1;    /* TOTAL OF COUNTERS ADDED TO  0177
*                                                            @Y30LB54*/
         AL    @07,COUNTRP8(,DCKWKPTR)                             0177
         ST    @07,COUNTRP8(,DCKWKPTR)                             0177
*         END;                      /*                       @Y30LB54*/
*       ELSE                                                       0179
*         ;                         /*                       @Y30LB54*/
@RF00173 DS    0H                                                  0180
*     END;                          /*                       @Y30LB54*/
         LA    @10,1                                               0180
         AL    @10,CTR1(,DCKWKPTR)                                 0180
         ST    @10,CTR1(,DCKWKPTR)                                 0180
         CH    @10,@CH00071                                        0180
         BNH   @DL00171                                            0180
*   END;                            /*                       @Y30LB54*/
         LA    @10,1                                               0181
         AL    @10,CTR(,DCKWKPTR)                                  0181
         ST    @10,CTR(,DCKWKPTR)                                  0181
         CH    @10,@CH00050                                        0181
         BNH   @DL00169                                            0181
*   RETURN CODE(RETCODE);           /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0182
@EL00003 DS    0H                                                  0182
@EF00003 DS    0H                                                  0182
@ER00003 L     @14,12(,@13)                                        0182
         BR    @14                                                 0182
*   END RPT8FILL;                   /*                       @Y30LB54*/
*                                                                  0184
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL THE TLX COUNTERS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0184
*RPT9FILL:                                                         0184
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB54*/
RPT9FILL ST    @14,12(,@13)                                        0184
*   PTRRPT=512;                     /* GO TO TLX COUNTERS    @Y30LB54*/
         MVC   PTRRPT(4,DCKWKPTR),@CF00328                         0185
*   IF BYTE13F4(7)='0'B THEN        /* VALID INDEX PGM       @ZM30975*/
         TM    BYTE13F4(SENSEPTR),B'00000010'                      0186
         BNZ   @RF00186                                            0186
*     I=1;                          /* SAVE INDEX PROGRAM    @ZM30975*/
         LA    I,1                                                 0187
*   ELSE                            /* NO, DO NOT SAVE       @ZM30975*/
*     I=2;                          /* SAVE THREAD ONLY      @ZM30975*/
         B     @RC00186                                            0188
@RF00186 LA    I,2                                                 0188
*   J=2;                            /* SAVE THREAD PGM       @ZM30975*/
@RC00186 LA    J,2                                                 0189
*   DO CTR=I TO J BY 1;             /* 2 BYTES OF INPUT DATA @ZM30975*/
         LR    @10,I                                               0190
         ST    @10,CTR(,DCKWKPTR)                                  0190
         B     @DE00190                                            0190
@DL00190 DS    0H                                                  0191
*     PTRBYTE=(CTR-1)*(8*2);        /*                       @Y30LB54*/
         L     @10,CTR(,DCKWKPTR)                                  0191
         LR    @07,@10                                             0191
         BCTR  @07,0                                               0191
         SLA   @07,4                                               0191
         ST    @07,PTRBYTE(,DCKWKPTR)                              0191
*     DATAWORK=DATA09(CTR);         /*                       @Y30LB54*/
         ALR   @10,DCKWKPTR                                        0192
         MVC   DATAWORK(1,DCKWKPTR),DATA09-1(@10)                  0192
*     FULLWD1=DATAWORK;             /* MAKE ADJUSTMENT       @Y30LB54*/
         SLR   @10,@10                                             0193
         IC    @10,DATAWORK(,DCKWKPTR)                             0193
         ST    @10,FULLWD1(,DCKWKPTR)                              0193
*     SRL(FULLWD1,3);               /* MAKE IT A COMPUTABLE NUMBER 0194
*                                                            @Y30LB54*/
         L     @10,FULLWD1(,DCKWKPTR)                              0194
         SRL   @10,3                                               0194
         ST    @10,FULLWD1(,DCKWKPTR)                              0194
*     IF FULLWD1<'00'X THEN                                        0195
         ICM   @10,15,FULLWD1(DCKWKPTR)                            0195
         BNM   @RF00195                                            0195
*       DO;                         /*                       @Y30LB54*/
*         RETCODE=8;                /*                       @Y30LB54*/
         LA    RETCODE,8                                           0197
*         RETURN CODE(RETCODE);     /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0198
@EL00004 DS    0H                                                  0198
@EF00004 DS    0H                                                  0198
@ER00004 L     @14,12(,@13)                                        0198
         BR    @14                                                 0198
*       END;                        /*                       @Y30LB54*/
*     ELSE                                                         0200
*       IF FULLWD1>'1F'X THEN                                      0200
@RF00195 L     @10,FULLWD1(,DCKWKPTR)                              0200
         CH    @10,@CH00339                                        0200
         BNH   @RF00200                                            0200
*         DO;                       /*                       @Y30LB54*/
*           RETCODE=8;              /*                       @Y30LB54*/
         LA    RETCODE,8                                           0202
*           RETURN CODE(RETCODE);   /*                       @Y30LB54*/
         LR    @15,RETCODE                                         0203
         L     @14,12(,@13)                                        0203
         BR    @14                                                 0203
*         END;                      /*                       @Y30LB54*/
*       ELSE                                                       0205
*         ;                         /*                       @Y30LB54*/
@RF00200 DS    0H                                                  0206
*     FULLWD1=FULLWD1*32;           /* COMPUTE CONTENTS OFFSET     0206
*                                                            @Y30LB54*/
         L     @10,FULLWD1(,DCKWKPTR)                              0206
         SLA   @10,5                                               0206
         ST    @10,FULLWD1(,DCKWKPTR)                              0206
*     KICKPTR=PTRRPT+PTRLIB+PTRBYTE+PTRSSID+FULLWD1;/*       @Y30LB54*/
         L     @07,PTRRPT(,DCKWKPTR)                               0207
         AL    @07,PTRLIB(,DCKWKPTR)                               0207
         AL    @07,PTRBYTE(,DCKWKPTR)                              0207
         AL    @07,PTRSSID(,DCKWKPTR)                              0207
         ALR   @07,@10                                             0207
         ST    @07,KICKPTR(,DCKWKPTR)                              0207
*     COUNTER(1)=COUNTER(1)+1;      /*                       @Y30LB54*/
         LA    @10,1                                               0208
         LH    @15,COUNTER(,@07)                                   0208
         ALR   @15,@10                                             0208
         STH   @15,COUNTER(,@07)                                   0208
*     COUNTRP9=COUNTRP9+1;          /* TOTAL OF COUNTERS ADDED TO  0209
*                                                            @Y30LB54*/
         AL    @10,COUNTRP9(,DCKWKPTR)                             0209
         ST    @10,COUNTRP9(,DCKWKPTR)                             0209
*   END;                            /*                       @Y30LB54*/
         LA    @10,1                                               0210
         AL    @10,CTR(,DCKWKPTR)                                  0210
         ST    @10,CTR(,DCKWKPTR)                                  0210
@DE00190 CR    @10,J                                               0210
         BNH   @DL00190                                            0210
*   END RPT9FILL;                   /*                       @Y30LB54*/
         B     @EL00004                                            0211
*   END ISDADCK0                    /*                       @Y30LB54*/
*                                                                  0212
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                       */
*/*%INCLUDE SYSLIB  (ISDACVT )                                       */
*/*%INCLUDE SYSLIB  (ISDASOBR)                                       */
*/*%INCLUDE SYSLIB  (ISDAMSCS)                                       */
*/*%INCLUDE SYSLIB  (ISDAMSC4)                                       */
*                                                                  0212
*       ;                                                          0212
@DATA    DS    0H
@CH00050 DC    H'4'
@CH00317 DC    H'7'
@CH00071 DC    H'8'
@CH00331 DC    H'99'
@CH00311 DC    H'768'
@CH00339 DC    XL2'1F'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    0F
         DS    1F
@AL00001 DS    1A
@TF00001 DS    F
ISDADCK0 CSECT
         DS    0F
@CF00330 DC    F'100'
@CF00340 DC    F'145'
@CF00328 DC    F'512'
@CF00341 DC    F'1536'
@CF00343 DC    F'-2'
@CF00316 DC    XL4'0000000F'
@CF00319 DC    XL4'000000F0'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDADCK0 CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00040 DC    V(ISDAGET1)
@CV00041 DC    V(ISDAFREE)
         DS    0D
TRPAT08  DC    X'04121314'
TRPAT09  DC    X'161F'
PATCH    DC    50X'00'
MASKTBL  DS    CL4
         ORG   MASKTBL+0
MASKARG  DC    X'80'
MASKDISP DC    AL3(0)
         ORG   MASKTBL+4
         ORG   MASKTBL+4
         DC    X'40'
         DC    AL3(16)
         ORG   MASKTBL+8
         ORG   MASKTBL+8
         DC    X'20'
         DC    AL3(32)
         ORG   MASKTBL+12
         ORG   MASKTBL+12
         DC    X'10'
         DC    AL3(48)
         ORG   MASKTBL+16
         ORG   MASKTBL+16
         DC    X'08'
         DC    AL3(64)
         ORG   MASKTBL+20
         ORG   MASKTBL+20
         DC    X'04'
         DC    AL3(80)
         ORG   MASKTBL+24
         ORG   MASKTBL+24
         DC    X'02'
         DC    AL3(96)
         ORG   MASKTBL+28
         ORG   MASKTBL+28
         DC    X'01'
         DC    AL3(112)
         ORG   MASKTBL+32
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
J        EQU   @06
I        EQU   @05
RETCODE  EQU   @04
DCKWKPTR EQU   @03
SENSEPTR EQU   @05
LPARMPTR EQU   @06
CVTPTR   EQU   @02
R15      EQU   @15
R0       EQU   @00
R1       EQU   @01
ISDAPRMS EQU   0
CINPUT   EQU   ISDAPRMS
CSTART   EQU   ISDAPRMS+2
CEND     EQU   ISDAPRMS+6
CFSCONLY EQU   ISDAPRMS+13
CSSIDF   EQU   ISDAPRMS+17
CSERIAL  EQU   ISDAPRMS+21
CREPORTS EQU   ISDAPRMS+33
CDCKTLX  EQU   CREPORTS+6
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
DATAPTR  EQU   CVTPTRS0
SDATAPTR EQU   CVTPTRS0+4
PARMPTR  EQU   CVTPTRS0+8
DCK00PTR EQU   CVTPTRS0+64
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
OBRMDR   EQU   0
SCW      EQU   OBRMDR
SWITCHES EQU   OBRMDR+6
DATETIME EQU   OBRMDR+12
DATE     EQU   DATETIME
TIME     EQU   DATETIME+4
CPUSERID EQU   OBRMDR+21
ISDAMSCS EQU   0
SUBSYSID EQU   ISDAMSCS+1
SSID     EQU   SUBSYSID
SSIDTYPE EQU   SSID
SUBSENSE EQU   ISDAMSCS+4
SUBFMTMG EQU   SUBSENSE+7
ISDAMSC4 EQU   4
FMTMSG4  EQU   ISDAMSC4+7
SASENSE  EQU   ISDAMSC4+8
BYTE13F4 EQU   SASENSE+5
WORKCORE EQU   0
LOGPTR   EQU   WORKCORE
LIBTAB   EQU   WORKCORE+4
LIBNO    EQU   LIBTAB
LIBPTR   EQU   LIBTAB+1
FULLWD1  EQU   WORKCORE+20
DATASSID EQU   WORKCORE+24
DATALIB  EQU   WORKCORE+28
KICKPTR  EQU   WORKCORE+32
PTRRPT   EQU   WORKCORE+36
PTRLIB   EQU   WORKCORE+40
PTRSSID  EQU   WORKCORE+44
PTRBYTE  EQU   WORKCORE+48
CTR      EQU   WORKCORE+52
CTR1     EQU   WORKCORE+56
CHAR4    EQU   WORKCORE+60
COUNTRP8 EQU   WORKCORE+64
COUNTRP9 EQU   WORKCORE+68
FOURBITS EQU   WORKCORE+128
DATA08   EQU   WORKCORE+129
DATA09   EQU   WORKCORE+133
DATAWORK EQU   WORKCORE+135
COUNTER  EQU   0
WORKPTR  EQU   0
*                                      START UNREFERENCED COMPONENTS
COUNT    EQU   COUNTER
ENDAREA  EQU   WORKCORE+144
EDREC    EQU   WORKCORE+136
FIVEBITS EQU   FOURBITS
TOTGRND  EQU   WORKCORE+126
TOTROW   EQU   WORKCORE+124
TOTFINL  EQU   WORKCORE+108
B8HDR    EQU   WORKCORE+96
VALCTR   EQU   WORKCORE+92
TEMPPTR  EQU   WORKCORE+88
BITHDCTR EQU   WORKCORE+84
BITCTR   EQU   WORKCORE+80
BYTECTR  EQU   WORKCORE+76
LIBCTR   EQU   WORKCORE+72
BYTE27F4 EQU   SASENSE+19
BYTE26F4 EQU   SASENSE+18
BYTE25F4 EQU   SASENSE+17
BYTE24F4 EQU   SASENSE+16
FSCFMT4  EQU   SASENSE+14
BYTE21F4 EQU   SASENSE+13
BYTE20F4 EQU   SASENSE+12
BYTE19F4 EQU   SASENSE+11
BYTE18F4 EQU   SASENSE+10
BYTE17F4 EQU   SASENSE+9
BYTE16F4 EQU   SASENSE+8
BYTE15F4 EQU   SASENSE+7
BYTE14F4 EQU   SASENSE+6
BYTE12F4 EQU   SASENSE+4
BYTE11F4 EQU   SASENSE+3
BYTE10F4 EQU   SASENSE+2
BYTE9F4  EQU   SASENSE+1
BYTE8F4  EQU   SASENSE
MSGCODE4 EQU   FMTMSG4
SUBFMTN4 EQU   FMTMSG4
LOWADDF4 EQU   ISDAMSC4+6
RETRYF4  EQU   ISDAMSC4+5
@NM00007 EQU   ISDAMSC4+4
CMDERRF4 EQU   ISDAMSC4+3
CHADDRF4 EQU   ISDAMSC4+2
STATUS24 EQU   ISDAMSC4+1
STATUS14 EQU   ISDAMSC4
SANOMSCD EQU   SUBSENSE+27
RCYLMSCD EQU   SUBSENSE+25
RUAMSCD  EQU   SUBSENSE+24
MSCFSC   EQU   SUBSENSE+22
@NM00006 EQU   SUBSENSE+21
RUADASD  EQU   SUBSENSE+20
DASDFSC  EQU   SUBSENSE+18
@NM00005 EQU   SUBSENSE+8
MSGCODEN EQU   SUBFMTMG
SUBFMTNO EQU   SUBFMTMG
SALOWAD2 EQU   SUBSENSE+6
SARETRY  EQU   SUBSENSE+5
@NM00004 EQU   SUBSENSE+4
DASDFMTN EQU   SUBSENSE+3
SALOWADD EQU   SUBSENSE+2
SUBSTAT5 EQU   SUBSENSE+1
SUBSTAT4 EQU   SUBSENSE
FORMATNO EQU   ISDAMSCS+3
SSIDDEVT EQU   SSID+1
SSIDLIBN EQU   SSID+1
SSIDFLAG EQU   SUBSYSID
STATUS   EQU   ISDAMSCS
CPUID    EQU   CPUSERID+3
CPUSER   EQU   CPUSERID
VERNO    EQU   OBRMDR+20
TENSHUND EQU   TIME+3
SECOND   EQU   TIME+2
MINUTE   EQU   TIME+1
HOUR     EQU   TIME
DAY      EQU   DATE+2
YEAR     EQU   DATE
RECENTRY EQU   OBRMDR+11
RCDCNT   EQU   OBRMDR+10
SWITCH3  EQU   SWITCHES+3
SWITCH2  EQU   SWITCHES+2
SWITCH1  EQU   SWITCHES+1
SWITCH0  EQU   SWITCHES
SYSREL   EQU   OBRMDR+5
CLASRC   EQU   OBRMDR+4
@NM00003 EQU   SCW+3
SCODE    EQU   SCW+2
SLENGTH  EQU   SCW
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
SDARPTID EQU   PRT0CALL+133
LINE     EQU   OUTLINE+1
ANSI     EQU   OUTLINE
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
WORKCALL EQU   CVTPTRS0+96
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DRC00PTR EQU   CVTPTRS0+76
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
CTRACE   EQU   ISDAPRMS+48
CGEN     EQU   ISDAPRMS+47
CDETAIL  EQU   ISDAPRMS+46
CPERIOD  EQU   ISDAPRMS+45
CPWR     EQU   CREPORTS+11
CAPRSUU  EQU   CREPORTS+10
CDRC     EQU   CREPORTS+9
CDAT     EQU   CREPORTS+8
CCSBCSF  EQU   CREPORTS+7
CEQC     EQU   CREPORTS+5
CFSC     EQU   CREPORTS+4
CDHEDHU  EQU   CREPORTS+3
CSUM     EQU   CREPORTS+2
CPAD     EQU   CREPORTS+1
CDCS     EQU   CREPORTS
CSERNO   EQU   CSERIAL+4
@NM00002 EQU   CSERIAL+3
CIBM     EQU   CSERIAL
CRATIO   EQU   ISDAPRMS+19
CSSID    EQU   CSSIDF
@NM00001 EQU   CSSIDF
CFSC34   EQU   CFSCONLY+2
CFSC12   EQU   CFSCONLY
CTYPE    EQU   ISDAPRMS+11
CSUMMARY EQU   ISDAPRMS+10
CENDDAY  EQU   CEND+2
CENDYEAR EQU   CEND
CSTDAY   EQU   CSTART+2
CSTYEAR  EQU   CSTART
CHISTIN  EQU   CINPUT+1
CLOGIN   EQU   CINPUT
*                                      END UNREFERENCED COMPONENTS
@RF00094 EQU   @RC00091
@RF00102 EQU   @RC00099
@RC00113 EQU   @RC00111
@RC00121 EQU   @RC00113
@ENDDATA EQU   *
         END   ISDADCK0,(C'PLS2232',0603,75312)
