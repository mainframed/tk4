         TITLE 'DRC EQUIPMENT CHECKS ACCUMULATOR                       *
                        '
ISDADRC0 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(8)                                           01S0001
         DC    C'ISDADRC0'                                      01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         ISDAGSPC R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
*                                                               01S0026
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF ISDADRC0 DECLARES                              @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0027
*                                                               01S0027
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF ISDADRC0 MAIN PROGRAM                        @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0027
*   CVTPTR=WORKPTR;                 /* SAVE CALLING PARAMETER-PTR TO
*                                      SDACVT                @Y30LB50*/
         L     @05,@PC00001                                     01S0027
         L     CVTPTR,WORKPTR(,@05)                             01S0027
*   LPARMPTR=PARMPTR;               /* SET PTR TO SDA PARMS  @ZM30983*/
         L     LPARMPTR,PARMPTR(,CVTPTR)                        01S0028
*   RETRNREG=0;                     /* SET RETURN CODE REGISTER TO 0
*                                                            @Y30LB50*/
         SLR   @05,@05                                          01S0029
         LR    RETRNREG,@05                                     01S0029
*   IF DRC00PTR=0 THEN              /* IF DRC WORK POINTER IF SDACVT
*                                      IS 0, THIS IS THE INITIAL CALL
*                                                            @Y30LB50*/
         C     @05,DRC00PTR(,CVTPTR)                            01S0030
         BNE   @RF00030                                         01S0030
*                                                               02S0031
*   /*****************************************************************/
*   /*                                                               */
*   /* DRCINIT IS USED TO OBTAIN AND INITIALIZE A WORKAREA FOR DRC   */
*   /* PROCESSING                                            @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0031
*   DO;                             /*                       @Y30LB50*/
*     RFY                                                       02S0032
*      (R0,                                                     02S0032
*       R1) RSTD;                   /*                       @Y30LB50*/
*     SPNO=DRCSPNO;                 /* SUBPOOL NUMBER FOR DRC   02S0033
*                                      WORKAREA REQUEST      @Y30LB50*/
         MVC   SPNO(1,CVTPTR),DRCSPNO                           02S0033
*     CORELEN=LENGTH(DRCWORK);      /* LENGTH OF WORKAREA FOR DRC
*                                      PROCESSING            @Y30LB50*/
         MVC   CORELEN(3,CVTPTR),@CF00097+1                     02S0034
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             02S0035
*     CALL ISDAGET1;                /* REQUEST WORKAREA      @Y30LB50*/
         L     @15,@CV00252                                     02S0036
         BALR  @14,@15                                          02S0036
*     RFY                                                       02S0037
*       R15 RSTD;                   /*                       @Y30LB50*/
*     RETRNREG=R15;                 /* SAVE RETURN REGISTER  @Y30LB50*/
         LR    RETRNREG,R15                                     02S0038
*     RFY                                                       02S0039
*      (R1,                                                     02S0039
*       R15) UNRSTD;                /*                       @Y30LB50*/
*     IF RETRNREG=0 THEN                                        02S0040
         LTR   RETRNREG,RETRNREG                                02S0040
         BNZ   @RF00040                                         02S0040
*       DO;                         /* CONTINUE IF WORKAREA OBTAINED
*                                                            @Y30LB50*/
*         DRC00PTR=COREADDR;        /* SET DRC WORK AREA PTR INTO
*                                      SDACVT                @Y30LB50*/
         L     @05,COREADDR(,CVTPTR)                            02S0042
         ST    @05,DRC00PTR(,CVTPTR)                            02S0042
*         DRCPTR=COREADDR;          /* SET LOCAL POINTER TO DRC WORK
*                                      AREA                  @Y30LB50*/
         LR    DRCPTR,@05                                       02S0043
*         DRCWORK=''B;              /* ZERO THE WORKAREA     @Y30LB50*/
         XC    DRCWORK(40,DRCPTR),DRCWORK(DRCPTR)               02S0044
*       END;                        /*                       @Y30LB50*/
*     ELSE                          /* BAD RETURN FROM GET1  @ZM30983*/
*       CDRC='00'X;                 /* SET NO CALL FLAG      @ZM30983*/
         B     @RC00040                                         02S0046
@RF00040 MVI   CDRC(LPARMPTR),X'00'                             02S0046
*   END;                            /*                       @Y30LB50*/
*   ELSE                                                        01S0048
*     ;                             /*                       @Y30LB50*/
@RF00030 DS    0H                                               01S0049
*   IF RETRNREG=0 THEN                                          01S0049
@RC00030 SLR   @05,@05                                          01S0049
         CR    RETRNREG,@05                                     01S0049
         BNE   @RF00049                                         01S0049
*     DO;                           /* IF WORKAREA WAS OBTAINED 01S0050
*                                                            @Y30LB50*/
*       DRCPTR=DRC00PTR;            /* SET LOCAL POINTER TO DRC 01S0051
*                                      WORKAREA              @Y30LB50*/
         L     DRCPTR,DRC00PTR(,CVTPTR)                         01S0051
*       SENSEPTR=SDATAPTR;          /* SAVE PTR TO FMT4 SENSE DATA
*                                      INPUT                 @Y30LB50*/
         L     SENSEPTR,SDATAPTR(,CVTPTR)                       01S0052
*       IF SSIDTYPE=DRCSSID THEN                                01S0053
         TM    SSIDTYPE(SENSEPTR),B'00000100'                   01S0053
         BNO   @RF00053                                         01S0053
         TM    SSIDTYPE(SENSEPTR),B'00001011'                   01S0053
         BNZ   @RF00053                                         01S0053
*         DO;                       /* PROCESS DRC SSID ONLY @Y30LB50*/
*                                                               02S0055
*   /*****************************************************************/
*   /*                                                               */
*   /* DRCCSCHK IS CALLED TO INITIALIZE THE POINTER TO THE           */
*   /* ACCUMULATOR BLOCK FOR THE CARTRIDGE STORE OF THE CURRENT      */
*   /* INPUT. IT WILL ALSO CALL ISDAGET1 TO OBTAIN THE ACCUMULATOR   */
*   /* BLOCK THE FIRST TIME A CARTRIDGE STORE IS ENCOUNTERED @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0055
*   CSNUMB=SUBSYSID;                /* ISOLATE CARTRIDGE STORE OF
*                                      INPUT                 @Y30LB50*/
         MVC   CSNUMB(2,DRCPTR),SUBSYSID(SENSEPTR)              02S0055
*   CSNUMB=CSNUMB&'00F0'X;          /*                       @Y30LB50*/
         NC    CSNUMB(2,DRCPTR),@CB00264                        02S0056
*   SRA(CSNUMB(2),4);               /*                       @Y30LB50*/
         SLR   @01,@01                                          02S0057
         IC    @01,CSNUMB+1(,DRCPTR)                            02S0057
         SRA   @01,4                                            02S0057
         STC   @01,CSNUMB+1(,DRCPTR)                            02S0057
*   CSNUMB=CSNUMB+1;                /* CONVERT TO INDEX OF 1 TO 4
*                                                            @Y30LB50*/
         LA    @01,1                                            02S0058
         SLR   @15,@15                                          02S0058
         ICM   @15,3,CSNUMB(DRCPTR)                             02S0058
         ALR   @01,@15                                          02S0058
         STH   @01,CSNUMB(,DRCPTR)                              02S0058
*   CSPTR=CSPTRS(CSNUMB);           /* PICK UP ACCUMULATOR ADDRESS
*                                      FOR THIS CS           @Y30LB50*/
         SLA   @01,2                                            02S0059
         AL    @01,@CF00269                                     02S0059
         L     CSPTR,CSPTRS(@01,DRCPTR)                         02S0059
*   IF CSPTR=0 THEN                                             02S0060
         CR    CSPTR,@05                                        02S0060
         BNE   @RF00060                                         02S0060
*     DO;                           /* IF ADDRESS IS 0 , NO     02S0061
*                                      ACCUMULATOR HAS BEEN OBTAINED
*                                      FOR THIS CS PREVIOUSLY   02S0061
*                                                            @Y30LB50*/
*       SPNO=DRCSPNO;               /* SUBPOOL NUMBER FOR DRC   02S0062
*                                      ACCUMULATOR BLK       @Y30LB50*/
         MVC   SPNO(1,CVTPTR),DRCSPNO                           02S0062
*       CORELEN=LENGTH(DRCACCM);    /* LENGTH OF BLOCK NEEDED   02S0063
*                                                            @Y30LB50*/
         MVC   CORELEN(3,CVTPTR),@CF00268+1                     02S0063
*       RFY                                                     02S0064
*         R1 RSTD;                  /*                       @Y30LB50*/
*       R1=ADDR(WORKCALL);          /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             02S0065
*       CALL ISDAGET1;              /* REQUEST ACCUMULATOR BLOCK
*                                                            @Y30LB50*/
         L     @15,@CV00252                                     02S0066
         BALR  @14,@15                                          02S0066
*       RFY                                                     02S0067
*         R1 UNRSTD;                /*                       @Y30LB50*/
*       RFY                                                     02S0068
*         R15 RSTD;                 /*                       @Y30LB50*/
*       RETRNREG=R15;               /* SAVE RETURN CODE FROM ISDAGET1
*                                                            @Y30LB50*/
         LR    RETRNREG,R15                                     02S0069
*       RFY                                                     02S0070
*         R15 UNRSTD;               /*                       @Y30LB50*/
*       IF RETRNREG=0 THEN                                      02S0071
         LTR   RETRNREG,RETRNREG                                02S0071
         BNZ   @RF00071                                         02S0071
*         DO;                       /* CONTINUE ONLY IF BLOCK   02S0072
*                                      OBTAINED              @Y30LB50*/
*           CSPTR=COREADDR;         /* SAVE PTR TO ACCUMULATOR IN
*                                      WORK AREA             @Y30LB50*/
         L     CSPTR,COREADDR(,CVTPTR)                          02S0073
*           CSPTRS(CSNUMB)=CSPTR;   /*                       @Y30LB50*/
         SLR   @05,@05                                          02S0074
         ICM   @05,3,CSNUMB(DRCPTR)                             02S0074
         SLA   @05,2                                            02S0074
         AL    @05,@CF00269                                     02S0074
         ST    CSPTR,CSPTRS(@05,DRCPTR)                         02S0074
*           DRCACCM=''B;            /* ZERO THE ACCUMULATOR  @Y30LB50*/
         XC    DRCACCM(256,CSPTR),DRCACCM(CSPTR)                02S0075
*         END;                      /*                       @Y30LB50*/
*       ELSE                                                    02S0077
*         ;                         /*                       @Y30LB50*/
@RF00071 DS    0H                                               02S0078
*     END;                          /*                       @Y30LB50*/
*   ELSE                                                        02S0079
*     ;                             /*                       @Y30LB50*/
@RF00060 DS    0H                                               02S0080
*           IF RETRNREG=0 THEN      /* IF REQUESTED ACCUMULATOR COULD
*                                      NOT BE OBTAINED, DO NOT  01S0080
*                                      PROCESS FURTHUR       @Y30LB50*/
         LTR   RETRNREG,RETRNREG                                01S0080
         BNZ   @RF00080                                         01S0080
*                                                               02S0081
*   /*****************************************************************/
*   /*                                                               */
*   /* DRCCNTS IS USED TO MAINTAIN RUNNING COUNTS OF HOW MANY TIMES  */
*   /* BITS IN MSC FORMAT 4 SENSE BYTES 4, 20, 21 AND 22 ARE         */
*   /* ENCOUNTERED SET                                       @Y30LB50*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0081
*   DO;                             /*                       @Y30LB50*/
*     CSNUMB=SUBSYSID;              /* ISOLATE THE DRC ID    @Y30LB50*/
         MVC   CSNUMB(2,DRCPTR),SUBSYSID(SENSEPTR)              02S0082
*     CSNUMB=CSNUMB&'000F'X;        /*                       @Y30LB50*/
         NC    CSNUMB(2,DRCPTR),@CB00266                        02S0083
*     CSPTR=CSPTR+(CSNUMB*2);       /* SPACE UP IN ACCUMULATOR FOR
*                                      THIS DRC--NOTE EACH DRC HAS A
*                                      2-BYTE COUNT PER BIT  @Y30LB50*/
         SLR   @01,@01                                          02S0084
         ICM   @01,3,CSNUMB(DRCPTR)                             02S0084
         ALR   @01,@01                                          02S0084
         ALR   CSPTR,@01                                        02S0084
*     WORK1(1)=STATUS14;            /* COMPACT SENSE BYTES TO BE
*                                      EXAMINED              @Y30LB50*/
         MVC   WORK1(1,DRCPTR),STATUS14(SENSEPTR)               02S0085
*     WORK1(2)=BYTE16F4;            /*                       @Y30LB50*/
         MVC   WORK1+1(1,DRCPTR),BYTE16F4(SENSEPTR)             02S0086
*     WORK1(3)=BYTE17F4;            /*                       @Y30LB50*/
         MVC   WORK1+2(1,DRCPTR),BYTE17F4(SENSEPTR)             02S0087
*     WORK1(4)=BYTE18F4;            /*                       @Y30LB50*/
         MVC   WORK1+3(1,DRCPTR),BYTE18F4(SENSEPTR)             02S0088
*     DO I=1 TO MAXBITS;            /* EXAMINE EACH BIT OF THE DRC
*                                      BYTES                 @Y30LB50*/
         LA    @03,1                                            02S0089
         STH   @03,I(,DRCPTR)                                   02S0089
@DL00089 DS    0H                                               02S0090
*       IF CURRBIT=ON THEN                                      02S0090
         TM    CURRBIT(DRCPTR),B'10000000'                      02S0090
         BNO   @RF00090                                         02S0090
*         BYTEBIT=BYTEBIT+1;        /* IF BIT IS SET, INCREMENT THE
*                                      BIT COUNT FOR THIS DRC   02S0091
*                                                            @Y30LB50*/
         LA    @03,1                                            02S0091
         AH    @03,BYTEBIT(,CSPTR)                              02S0091
         STH   @03,BYTEBIT(,CSPTR)                              02S0091
*       ELSE                                                    02S0092
*         ;                         /*                       @Y30LB50*/
@RF00090 DS    0H                                               02S0093
*       SLL(WORK1,1);               /* POSITION NEXT BIT     @Y30LB50*/
         L     @03,WORK1(,DRCPTR)                               02S0093
         SLL   @03,1                                            02S0093
         ST    @03,WORK1(,DRCPTR)                               02S0093
*       CSPTR=CSPTR+LENGTH(BIT0);   /* UP POINTER TO BIT COUNT FOR
*                                      NEXT BIT FOR THIS DRC @Y30LB50*/
         AH    CSPTR,@CH00070                                   02S0094
*     END;                          /*                       @Y30LB50*/
         LA    @03,1                                            02S0095
         AH    @03,I(,DRCPTR)                                   02S0095
         STH   @03,I(,DRCPTR)                                   02S0095
         CH    @03,@CH00257                                     02S0095
         BNH   @DL00089                                         02S0095
*   END;                            /*                       @Y30LB50*/
*           ELSE                                                01S0097
*                                                               02S0097
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL RELEASE ALL WORKING STORAGE VIA THE ISDAFREE*/
*   /* ROUTINE.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0097
*   DO;                             /*                       @Y30LB50*/
         B     @RC00080                                         02S0097
@RF00080 DS    0H                                               02S0098
*   RFY                                                         02S0098
*     R1 RSTD;                      /*                       @Y30LB50*/
*     DO I=1 TO MAXCS;              /* RELEASE BLOCKS FOR ALL CS
*                                                            @Y30LB50*/
         LA    @05,1                                            02S0099
         STH   @05,I(,DRCPTR)                                   02S0099
@DL00099 DS    0H                                               02S0100
*       COREADDR=CSPTRS(I);         /* ADDR OF ACCUM FOR THIS CS
*                                                            @Y30LB50*/
         LH    @05,I(,DRCPTR)                                   02S0100
         SLA   @05,2                                            02S0100
         AL    @05,@CF00269                                     02S0100
         L     @05,CSPTRS(@05,DRCPTR)                           02S0100
         ST    @05,COREADDR(,CVTPTR)                            02S0100
*       IF COREADDR^=0 THEN                                     02S0101
         LTR   @05,@05                                          02S0101
         BZ    @RF00101                                         02S0101
*         DO;                       /* RELEASE PROCESSING IF ACCUM
*                                      OBTAINED              @Y30LB50*/
*           SPNO=DRCSPNO;           /* SUBPOOL NUMBER OF DRC ACCUM
*                                                            @Y30LB50*/
         MVC   SPNO(1,CVTPTR),DRCSPNO                           02S0103
*           CORELEN=LENGTH(DRCACCM);/* LENGTH OF DRC ACCUM   @Y30LB50*/
         MVC   CORELEN(3,CVTPTR),@CF00268+1                     02S0104
*           R1=ADDR(WORKCALL);      /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             02S0105
*           CALL ISDAFREE;          /* FREE ACCUM BLOCK      @Y30LB50*/
         L     @15,@CV00253                                     02S0106
         BALR  @14,@15                                          02S0106
*         END;                      /*                       @Y30LB50*/
*           ELSE                                                02S0108
*             ;                     /*                       @Y30LB50*/
@RF00101 DS    0H                                               02S0109
*         END;                      /*                       @Y30LB50*/
         LA    @05,1                                            02S0109
         AH    @05,I(,DRCPTR)                                   02S0109
         STH   @05,I(,DRCPTR)                                   02S0109
         CH    @05,@CH00104                                     02S0109
         BNH   @DL00099                                         02S0109
*       CDRC='00'X;                 /* SHUT OFF DRC REPORT CONTROL
*                                      FLAG                  @Y30LB50*/
         MVI   CDRC(LPARMPTR),X'00'                             02S0110
*       R1=ADDR(WORKCALL);          /*                       @Y30LB50*/
         LA    R1,WORKCALL(,CVTPTR)                             02S0111
*       CORELEN=LENGTH(DRCWORK);    /* LENGTH OF WORKAREA    @Y30LB50*/
         MVC   CORELEN(3,CVTPTR),@CF00097+1                     02S0112
*       SPNO=DRCSPNO;               /* SUBPOOL NUMBER OF WORKAREA
*                                                            @Y30LB50*/
         MVC   SPNO(1,CVTPTR),DRCSPNO                           02S0113
*       COREADDR=DRCPTR;            /* ADDR OF WORKAREA      @Y30LB50*/
         ST    DRCPTR,COREADDR(,CVTPTR)                         02S0114
*       CALL ISDAFREE;              /* FREE DRC WORKAREA     @Y30LB50*/
         L     @15,@CV00253                                     02S0115
         BALR  @14,@15                                          02S0115
*       DRC00PTR=0;                 /* SET WORK PTR TO 0 FOR ISDASDA0
*                                                            @Y30LB50*/
         SLR   @03,@03                                          02S0116
         ST    @03,DRC00PTR(,CVTPTR)                            02S0116
*       RFY                                                     02S0117
*         R1 UNRSTD;                /*                       @Y30LB50*/
*     END;                          /*                       @Y30LB50*/
*         END;                      /*                       @Y30LB50*/
*       ELSE                                                    01S0120
*         RETRNREG=0;               /* DO NOT FLAG DRD SSID INVLAID
*                                                            @ZM02889*/
         B     @RC00053                                         01S0120
@RF00053 SLR   RETRNREG,RETRNREG                                01S0120
*     END;                          /*                       @Y30LB50*/
*   ELSE                                                        01S0122
*     ;                             /*                       @Y30LB50*/
@RF00049 DS    0H                                               01S0123
*   RETURN CODE(RETRNREG);          /*                       @Y30LB50*/
@RC00049 L     @13,4(,@13)                                      01S0123
         L     @00,@SIZDATD                                     01S0123
         LR    @01,@11                                          01S0123
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@09                                          01S0123
         L     @14,12(,@13)                                     01S0123
         LM    @00,@12,20(@13)                                  01S0123
         BR    @14                                              01S0123
*   END ISDADRC0                    /*                       @Y30LB50*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ISDACVT )                                        *
*/*%INCLUDE SYSLIB  (ISDAMSCS)                                        *
*/*%INCLUDE SYSLIB  (ISDAMSC4)                                        *
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                        *
*/*%INCLUDE SYSLIB  (ISDADRC5)                                        *
*/*%INCLUDE SYSUT5  (DRC0CNST)                                        *
*/*%INCLUDE SYSUT5  (DRCINIT )                                        *
*/*%INCLUDE SYSUT5  (DRCCSCHK)                                        *
*/*%INCLUDE SYSUT5  (DRCCNTS )                                        *
*/*%INCLUDE SYSUT5  (FREEBLKS)                                        *
*;                                                              01S0124
@DATA    DS    0H
@CH00104 DC    H'4'
@CH00070 DC    H'8'
@CH00257 DC    H'32'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
ISDADRC0 CSECT
         DS    0F
@CF00097 DC    F'40'
@CF00268 DC    F'256'
@CF00269 DC    F'-4'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDADRC0 CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00252 DC    V(ISDAGET1)
@CV00253 DC    V(ISDAFREE)
         DS    0D
@CB00264 DC    X'00F0'
@CB00266 DC    X'000F'
DRCSPNO  DC    X'00'
PATCH    DS    CL50
         ORG   PATCH
@NM00007 DC    50X'00'
         ORG   PATCH+50
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LPARMPTR EQU   @04
SENSEPTR EQU   @03
CVTPTR   EQU   @02
DRCPTR   EQU   @10
CSPTR    EQU   @08
RETRNREG EQU   @09
R1       EQU   @01
R0       EQU   @00
R15      EQU   @15
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
SDATAPTR EQU   CVTPTRS0+4
PARMPTR  EQU   CVTPTRS0+8
DRC00PTR EQU   CVTPTRS0+76
WORKCALL EQU   CVTPTRS0+96
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
ISDAMSCS EQU   0
SUBSYSID EQU   ISDAMSCS+1
SSID     EQU   SUBSYSID
SSIDTYPE EQU   SSID
SUBSENSE EQU   ISDAMSCS+4
SUBFMTMG EQU   SUBSENSE+7
ISDAMSC4 EQU   4
STATUS14 EQU   ISDAMSC4
FMTMSG4  EQU   ISDAMSC4+7
SASENSE  EQU   ISDAMSC4+8
BYTE16F4 EQU   SASENSE+8
BYTE17F4 EQU   SASENSE+9
BYTE18F4 EQU   SASENSE+10
ISDAPRMS EQU   0
CINPUT   EQU   ISDAPRMS
CSTART   EQU   ISDAPRMS+2
CEND     EQU   ISDAPRMS+6
CFSCONLY EQU   ISDAPRMS+13
CSSIDF   EQU   ISDAPRMS+17
CSERIAL  EQU   ISDAPRMS+21
CREPORTS EQU   ISDAPRMS+33
CDRC     EQU   CREPORTS+9
DRCWORK  EQU   0
CSPTRS   EQU   DRCWORK
WORK1    EQU   DRCWORK+20
WORK2    EQU   WORK1
CURRBIT  EQU   WORK2
I        EQU   DRCWORK+24
HOLDDBL  EQU   DRCWORK+32
HOLD     EQU   HOLDDBL+4
HOLD1    EQU   HOLD+1
CSNUMB   EQU   HOLD1
DRCACCM  EQU   0
BYTEBIT  EQU   DRCACCM
BYTE0    EQU   DRCACCM+8
BIT0     EQU   BYTE0
WORKPTR  EQU   0
*                                      START UNREFERENCED COMPONENTS
BYTE3    EQU   DRCACCM+192
BYTE2    EQU   DRCACCM+128
BYTE1    EQU   DRCACCM+64
BITS1TO7 EQU   BYTE0+8
BYTEBIT3 EQU   DRCACCM+2
XXX      EQU   HOLD1+2
HOLD2    EQU   HOLD
HOLD0    EQU   HOLDDBL
L        EQU   DRCWORK+30
K        EQU   DRCWORK+28
J        EQU   DRCWORK+26
WORK3    EQU   WORK1+1
RESTBITS EQU   WORK2
TSUM     EQU   DRCWORK+16
CTRACE   EQU   ISDAPRMS+48
CGEN     EQU   ISDAPRMS+47
CDETAIL  EQU   ISDAPRMS+46
CPERIOD  EQU   ISDAPRMS+45
CPWR     EQU   CREPORTS+11
CAPRSUU  EQU   CREPORTS+10
CDAT     EQU   CREPORTS+8
CCSBCSF  EQU   CREPORTS+7
CDCKTLX  EQU   CREPORTS+6
CEQC     EQU   CREPORTS+5
CFSC     EQU   CREPORTS+4
CDHEDHU  EQU   CREPORTS+3
CSUM     EQU   CREPORTS+2
CPAD     EQU   CREPORTS+1
CDCS     EQU   CREPORTS
CSERNO   EQU   CSERIAL+4
@NM00006 EQU   CSERIAL+3
CIBM     EQU   CSERIAL
CRATIO   EQU   ISDAPRMS+19
CSSID    EQU   CSSIDF
@NM00005 EQU   CSSIDF
CFSC34   EQU   CFSCONLY+2
CFSC12   EQU   CFSCONLY
CTYPE    EQU   ISDAPRMS+11
CSUMMARY EQU   ISDAPRMS+10
CENDDAY  EQU   CEND+2
CENDYEAR EQU   CEND
CSTDAY   EQU   CSTART+2
CSTYEAR  EQU   CSTART
CHISTIN  EQU   CINPUT+1
CLOGIN   EQU   CINPUT
BYTE27F4 EQU   SASENSE+19
BYTE26F4 EQU   SASENSE+18
BYTE25F4 EQU   SASENSE+17
BYTE24F4 EQU   SASENSE+16
FSCFMT4  EQU   SASENSE+14
BYTE21F4 EQU   SASENSE+13
BYTE20F4 EQU   SASENSE+12
BYTE19F4 EQU   SASENSE+11
BYTE15F4 EQU   SASENSE+7
BYTE14F4 EQU   SASENSE+6
BYTE13F4 EQU   SASENSE+5
BYTE12F4 EQU   SASENSE+4
BYTE11F4 EQU   SASENSE+3
BYTE10F4 EQU   SASENSE+2
BYTE9F4  EQU   SASENSE+1
BYTE8F4  EQU   SASENSE
MSGCODE4 EQU   FMTMSG4
SUBFMTN4 EQU   FMTMSG4
LOWADDF4 EQU   ISDAMSC4+6
RETRYF4  EQU   ISDAMSC4+5
@NM00004 EQU   ISDAMSC4+4
CMDERRF4 EQU   ISDAMSC4+3
CHADDRF4 EQU   ISDAMSC4+2
STATUS24 EQU   ISDAMSC4+1
SANOMSCD EQU   SUBSENSE+27
RCYLMSCD EQU   SUBSENSE+25
RUAMSCD  EQU   SUBSENSE+24
MSCFSC   EQU   SUBSENSE+22
@NM00003 EQU   SUBSENSE+21
RUADASD  EQU   SUBSENSE+20
DASDFSC  EQU   SUBSENSE+18
@NM00002 EQU   SUBSENSE+8
MSGCODEN EQU   SUBFMTMG
SUBFMTNO EQU   SUBFMTMG
SALOWAD2 EQU   SUBSENSE+6
SARETRY  EQU   SUBSENSE+5
@NM00001 EQU   SUBSENSE+4
DASDFMTN EQU   SUBSENSE+3
SALOWADD EQU   SUBSENSE+2
SUBSTAT5 EQU   SUBSENSE+1
SUBSTAT4 EQU   SUBSENSE
FORMATNO EQU   ISDAMSCS+3
SSIDDEVT EQU   SSID+1
SSIDLIBN EQU   SSID+1
SSIDFLAG EQU   SUBSYSID
STATUS   EQU   ISDAMSCS
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
SDARPTID EQU   PRT0CALL+133
LINE     EQU   OUTLINE+1
ANSI     EQU   OUTLINE
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
DCK00PTR EQU   CVTPTRS0+64
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
DATAPTR  EQU   CVTPTRS0
*                                      END UNREFERENCED COMPONENTS
@RC00040 EQU   @RC00030
@RC00053 EQU   @RC00049
@RC00080 EQU   @RC00053
@ENDDATA EQU   *
         END   ISDADRC0,(C'PLS0120',0603,75313)
