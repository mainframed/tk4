         TITLE 'SDA ROUTINE TO READ EREP HISTORY TAPES                 *
                        '
ISDAHIST CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISDAHIST  76.317'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         ISDAGSPC R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*/* RETCODE=0 = OPEN AND READ SUCCESSFUL                     @Y30LB55*/
*/* RETCODE=4 = OPEN FAILED. MISSING DD CARD                 @Y30LB55*/
*/* RETCODE=8 = END OF FILE READ IN INPUT                    @Y30LB55*/
*/* RETCODE=12 = READ ERROR ON INPUT                         @Y30LB55*/
*/* RETCODE=24 = NO SPACE FOR ISDAHIST WORKAREA              @Y30LB55*/
*                                                                  0011
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO CVT  @Y30LB55*/
         L     @10,@PC00001                                        0011
         L     CVTPTR,WORKPTR(,@10)                                0011
*   RETCODE=0;                      /* INITIALIZE RETURN CODE@Y30LB55*/
         SLR   @10,@10                                             0012
         LR    RETCODE,@10                                         0012
*                                                                  0013
*   /*****************************************************************/
*   /*                                                               */
*   /* GET CORE FOR ISDAHIST WORKAREA                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0013
*   IF HIST0PTR=0 THEN              /* NO WORKAREA           @Y30LB55*/
         C     @10,HIST0PTR(,CVTPTR)                               0013
         BNE   @RF00013                                            0013
*     DO;                           /* NONE, GET IT          @Y30LB55*/
*       CORELEN=LENGTH(HISTWORK);   /* SET AREA LENGTH       @Y30LB55*/
         MVC   CORELEN(3,CVTPTR),@CF00112+1                        0015
*       SPNO=HISTSPNO;              /* SET SUBPOOL NUMBER    @Y30LB55*/
         MVC   SPNO(1,CVTPTR),HISTSPNO                             0016
*       RFY                                                        0017
*         R1 RSTD;                                         /*@Y30LB55*/
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/
         LA    R1,WORKCALL(,CVTPTR)                                0018
*       CALL ISDAGET1;              /* GET CORE              @Y30LB55*/
         L     @15,@CV00108                                        0019
         BALR  @14,@15                                             0019
*       RFY                                                        0020
*         R15 RSTD;                                        /*@Y30LB55*/
*       RETCODE=R15;                /* SAVE GET1 RETURN CODE @Y30LB55*/
         LR    RETCODE,R15                                         0021
*       RFY                                                        0022
*        (R1,                                                      0022
*         R15) UNRSTD;              /* RELEASE REGS          @Y30LB55*/
*       HIST0PTR=COREADDR;          /* STORE ADDR IN ISDACVT @Y30LB55*/
         L     @10,COREADDR(,CVTPTR)                               0023
         ST    @10,HIST0PTR(,CVTPTR)                               0023
*       HISWKPTR=HIST0PTR;          /* SET LOCAL PTR TO HISTWORK   0024
*                                                            @Y30LB55*/
         LR    HISWKPTR,@10                                        0024
*       IF RETCODE=0 THEN           /* GOT CORE              @Y30LB55*/
         LTR   RETCODE,RETCODE                                     0025
         BNZ   @RF00025                                            0025
*         SDAHISIN=DCBSTAT;         /* MOVE DCB INTO WORKAREA@Y30LB55*/
         MVC   SDAHISIN(96,HISWKPTR),DCBSTAT                       0026
*       ELSE                        /* BAD RETURN FROM ISDAGET1    0027
*                                                            @Y30LB55*/
*         RETCODE=24;               /* SET RETURN CODE TO NO CORE  0027
*                                                            @Y30LB55*/
         B     @RC00025                                            0027
@RF00025 LA    RETCODE,24                                          0027
*     END;                          /* END GET CORE SECTION  @Y30LB55*/
*   ELSE                            /* YES, HAVE WORKAREA    @Y30LB55*/
*     HISWKPTR=HIST0PTR;            /* SET LOCAL PTR TO HISTWORK   0029
*                                                            @Y30LB55*/
         B     @RC00013                                            0029
@RF00013 L     HISWKPTR,HIST0PTR(,CVTPTR)                          0029
*                                                                  0030
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO READ DATA FROM EREP HISTORY TAPES                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0030
*   IF RETCODE=0 THEN               /* HAVE WORKAREA         @Y30LB55*/
@RC00013 LTR   RETCODE,RETCODE                                     0030
         BNZ   @RF00030                                            0030
*     DO;                           /* YES                   @Y30LB55*/
*       IF OFLAGS(4)^='1'B THEN     /* DCB OPEN YET          @Y30LB55*/
         TM    OFLAGS(HISWKPTR),B'00010000'                        0032
         BO    @RF00032                                            0032
*         DO;                       /* NO, OPEN SDAHISIN     @Y30LB55*/
*           RFY                                                    0034
*             R6 RSTD;                                     /*@Y30LB55*/
*           R6=ADDR(SDAHISIN);      /* R6 -> DCB             @Y30LB55*/
         LR    R6,HISWKPTR                                         0035
*           GEN( OPEN  ((R6),INPUT))                               0036
*           FLOWS(BLOCKFIX,EOD,EOF);                       /*@ZA14730*/
          OPEN  ((R6),INPUT)
*           RFY                                                    0037
*             R6 UNRSTD;                                   /*@Y30LB55*/
*           OFLAGS(5)='1'B;         /* SET UNLIKE BIT ON     @Y30LB55*/
         OI    OFLAGS(HISWKPTR),B'00001000'                        0038
*           IF OFLAGS(4)='1'B THEN  /* OPEN                  @Y30LB55*/
         TM    OFLAGS(HISWKPTR),B'00010000'                        0039
         BNO   @RF00039                                            0039
*             RETCODE=0;            /* YES, DCB IS OPEN      @Y30LB55*/
         SLR   RETCODE,RETCODE                                     0040
*           ELSE                    /* NO, DCB DID NOT OPEN  @Y30LB55*/
*             RETCODE=4;            /* MISSING DD CARD       @Y30LB55*/
         B     @RC00039                                            0041
@RF00039 LA    RETCODE,4                                           0041
*         END;                      /* END OPEN CODE         @Y30LB55*/
*       ELSE                        /* DCB ALREADY OPEN      @Y30LB55*/
*         RETCODE=0;                /* NOT FIRST CALL        @Y30LB55*/
         B     @RC00032                                            0043
@RF00032 SLR   RETCODE,RETCODE                                     0043
*       IF RETCODE=0 THEN           /* OPEN OK               @Y30LB55*/
@RC00032 LTR   RETCODE,RETCODE                                     0044
         BNZ   @RF00044                                            0044
*         DO;                       /* YES, READ RECORD      @Y30LB55*/
*           RFY                                                    0046
*            (R1,                                                  0046
*             R6) RSTD;                                    /*@Y30LB55*/
*           R6=ADDR(SDAHISIN);      /* R6 -> DCB             @Y30LB55*/
         LR    R6,HISWKPTR                                         0047
*           GEN( GET   (R6) )                                      0048
*           FLOWS(EOF,EOD);                                /*@Y30LB55*/
          GET   (R6)
*           DATAPTR=R1;             /* PUT PTR TO RECORD IN ISDACVT
*                                                            @Y30LB55*/
         ST    R1,DATAPTR(,CVTPTR)                                 0049
*           RFY                                                    0050
*            (R1,                                                  0050
*             R6) UNRSTD;                                  /*@Y30LB55*/
*         END;                      /* END READ RECORD       @Y30LB55*/
*       ELSE                        /* BAD RETURN FROM OPEN  @Y30LB55*/
*         CALL HISTFREE;            /* FREE WORKAREA         @Y30LB55*/
         B     @RC00044                                            0052
@RF00044 BAL   @14,HISTFREE                                        0052
*     END;                          /* END OPEN AND READ SECTION   0053
*                                                            @Y30LB55*/
*   ELSE                                                           0054
*     ;                             /* BAD RETURN FROM ISDAGET1    0054
*                                                            @Y30LB55*/
@RF00030 DS    0H                                                  0055
*   RETURN CODE(RETCODE);           /* RETURN WITH CONDCODE  @Y30LB55*/
@RC00030 L     @13,4(,@13)                                         0055
         L     @00,@SIZDATD                                        0055
         LR    @01,@11                                             0055
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0055
         L     @14,12(,@13)                                        0055
         LM    @00,@12,20(@13)                                     0055
         BR    @14                                                 0055
*                                                                  0056
*   /*****************************************************************/
*   /*                                                               */
*   /* EOF - ENTRY FOR END OF FILE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0056
*EOF:                                                              0056
*   RETCODE=8;                      /* SET END OF FILE RETURN CODE 0056
*                                                            @Y30LB55*/
EOF      LA    RETCODE,8                                           0056
*   HISWKPTR=HIST0PTR;              /* SET -> TO HISTWORK    @Y30LB55*/
         L     HISWKPTR,HIST0PTR(,CVTPTR)                          0057
*   CALL HISTFREE;                  /* FREE DCB AND WORK AREA@Y30LB55*/
         BAL   @14,HISTFREE                                        0058
*   RETURN CODE(RETCODE);                                  /*@Y30LB55*/
*                                                                  0059
         L     @13,4(,@13)                                         0059
         L     @00,@SIZDATD                                        0059
         LR    @01,@11                                             0059
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0059
         L     @14,12(,@13)                                        0059
         LM    @00,@12,20(@13)                                     0059
         BR    @14                                                 0059
*   /*****************************************************************/
*   /*                                                               */
*   /* EOD - ENTRY FOR SYNAD, READ ERROR                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0060
*EOD:                                                              0060
*   RETCODE=12;                     /* SET SYNAD RETURN CODE @Y30LB55*/
EOD      LA    RETCODE,12                                          0060
*   HISWKPTR=HIST0PTR;              /* SET -> TO HISTWORK    @Y30LB55*/
         L     HISWKPTR,HIST0PTR(,CVTPTR)                          0061
*   CALL HISTFREE;                  /* FREE DCB AND WORK AREA@Y30LB55*/
         BAL   @14,HISTFREE                                        0062
*   RETURN CODE(RETCODE);                                  /*@Y30LB55*/
         L     @13,4(,@13)                                         0063
         L     @00,@SIZDATD                                        0063
         LR    @01,@11                                             0063
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@04                                             0063
         L     @14,12(,@13)                                        0063
         LM    @00,@12,20(@13)                                     0063
         BR    @14                                                 0063
*                                                                  0064
*   /*****************************************************************/
*   /*                                                               */
*   /* BLOCKFIX - EXITLIST PROC TO ADD DEFAULT BLOCKSIZE AND LRECL   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0064
*BLOCKFIX:                                                         0064
*   PROC OPTIONS(NOSAVE);           /* EXITLIST PROC         @ZA14730*/
BLOCKFIX DS    0H                                                  0065
*   IF DCBBLKSI=ZERO2 THEN          /* BLOCKSIZE SUPPLIED    @ZA14730*/
         CLC   DCBBLKSI(2,HISWKPTR),@CB00130                       0065
         BNE   @RF00065                                            0065
*     DCBBLKSI=BLKSIZED;            /* NO, MOVE DEFAULT      @ZA14730*/
         MVC   DCBBLKSI(2,HISWKPTR),@CH00127                       0066
*   ELSE;                           /* YES, BLOCKSIZE OK     @ZA14730*/
@RF00065 DS    0H                                                  0068
*   IF LRECL=ZERO2 THEN             /* LRECL SUPPLIED        @ZA14730*/
         CLC   LRECL(2,HISWKPTR),@CB00130                          0068
         BNE   @RF00068                                            0068
*     LRECL=LRECLD;                 /* NO, MOVE DEFAULT      @ZA14730*/
         MVC   LRECL(2,HISWKPTR),@CH00125                          0069
*   ELSE;                           /* YES, LRECL OK         @ZA14730*/
@RF00068 DS    0H                                                  0071
*   END BLOCKFIX;                   /* RETURN TO OPEN        @ZA14730*/
@EL00002 DS    0H                                                  0071
@EF00002 DS    0H                                                  0071
@ER00002 BR    @14                                                 0071
*                                                                  0072
*   /*****************************************************************/
*   /*                                                               */
*   /* HISTFREE - PROC TO CLOSE SDAHISIN AND FREE HISTWORK           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0072
*HISTFREE:                                                         0072
*   PROC;                           /* CLOSE SDAHISIN AND FREE     0072
*                                      HISTWORK              @Y30LB55*/
HISTFREE STM   @14,@12,@SA00003                                    0072
*   DATAPTR=0;                      /* ZERO DATA PTR IN ISDACVT    0073
*                                                            @Y30LB55*/
         SLR   @10,@10                                             0073
         ST    @10,DATAPTR(,CVTPTR)                                0073
*   IF OFLAGS(4)='1'B THEN          /* DCB OPEN              @Y30LB55*/
         TM    OFLAGS(HISWKPTR),B'00010000'                        0074
         BNO   @RF00074                                            0074
*     DO;                           /* YES, CLOSE IT         @Y30LB55*/
*       RFY                                                        0076
*         R6 RSTD;                                         /*@Y30LB55*/
*       R6=ADDR(SDAHISIN);          /* R6 -> DCB             @Y30LB55*/
         LR    R6,HISWKPTR                                         0077
*       GEN( CLOSE ((R6)));                                /*@Y30LB55*/
          CLOSE ((R6))
*       RFY                                                        0079
*         R6 UNRSTD;                                       /*@Y30LB55*/
*     END;                          /* END CLOSE DCB         @Y30LB55*/
*   ELSE                                                           0081
*     ;                             /* DCB NOT OPEN          @Y30LB55*/
@RF00074 DS    0H                                                  0082
*   CORELEN=LENGTH(HISTWORK);       /* MOVE LENGTH OF HISTWORK     0082
*                                                            @Y30LB55*/
         MVC   CORELEN(3,CVTPTR),@CF00112+1                        0082
*   SPNO=HISTSPNO;                  /* MOVE SUBPOOL NUMBER   @Y30LB55*/
         MVC   SPNO(1,CVTPTR),HISTSPNO                             0083
*   COREADDR=HIST0PTR;              /* MOVE ADDRESS OF AREA  @Y30LB55*/
         MVC   COREADDR(4,CVTPTR),HIST0PTR(CVTPTR)                 0084
*   RFY                                                            0085
*     R1 RSTD;                                             /*@Y30LB55*/
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @Y30LB55*/
         LA    R1,WORKCALL(,CVTPTR)                                0086
*   CALL ISDAFREE;                  /* FREE HISTWORK         @Y30LB55*/
         L     @15,@CV00109                                        0087
         BALR  @14,@15                                             0087
*   RFY                                                            0088
*     R1 UNRSTD;                                           /*@Y30LB55*/
*   HIST0PTR=0;                     /* ZERO HIST0PTR IN ISDACVT    0089
*                                                            @Y30LB55*/
         SLR   @10,@10                                             0089
         ST    @10,HIST0PTR(,CVTPTR)                               0089
*   END HISTFREE;                   /* RETURN                @Y30LB55*/
@EL00003 DS    0H                                                  0090
@EF00003 DS    0H                                                  0090
@ER00003 LM    @14,@12,@SA00003                                    0090
         BR    @14                                                 0090
*                                                                  0091
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERATE DATA FOR DCB, OPEN, AND CLOSE                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0091
*   GENERATE DATA DEFS(DCBSTAT,EXITLIST);                  /*@ZA14730*/
*   END ISDAHIST                                           /*@Y30LB55*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ISDACVT )                                        *
*;                                                                 0092
@EL00001 L     @13,4(,@13)                                         0092
@EF00001 L     @00,@SIZDATD                                        0092
         LR    @01,@11                                             0092
         ISDAFSPC R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0092
         BR    @14                                                 0092
@DATA    DS    0H
@CH00125 DC    H'1900'
@CH00127 DC    H'1904'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    15F
ISDAHIST CSECT
         DS    0F
@CF00112 DC    F'96'
@DATD    DSECT
         DS    0D
ISDAHIST CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00108 DC    V(ISDAGET1)
@CV00109 DC    V(ISDAFREE)
@CV00107 DC    V(ISDAGET0)
         DS    0D
@CB00130 DC    X'0000'
HISTSPNO DC    X'00'
PATCH    DC    50X'00'
ISDAHIST CSECT
DCBSTAT  DCB   DSORG=PS,MACRF=GL,DDNAME=SDAHISIN,SYNAD=EOD,EODAD=EOF, XX
               RECFM=V,EXLST=EXITLIST
         DS    0F
EXITLIST DC    XL1'85'           FLAG FOR DCB EXIT
         DC    AL3(BLOCKFIX)     ADDR OF BLOCKFIX ENTRY
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDAHIST CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCODE  EQU   @04
HISWKPTR EQU   @03
CVTPTR   EQU   @02
R1       EQU   @01
R6       EQU   @06
R15      EQU   @15
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
DATAPTR  EQU   CVTPTRS0
HIST0PTR EQU   CVTPTRS0+32
WORKCALL EQU   CVTPTRS0+96
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
HISTWORK EQU   0
SDAHISIN EQU   HISTWORK
OFLAGS   EQU   SDAHISIN+48
DCBBLKSI EQU   SDAHISIN+62
LRECL    EQU   SDAHISIN+82
WORKPTR  EQU   0
*                                      START UNREFERENCED COMPONENTS
@NM00003 EQU   SDAHISIN+64
@NM00002 EQU   SDAHISIN+49
@NM00001 EQU   SDAHISIN
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
SDARPTID EQU   PRT0CALL+133
LINE     EQU   OUTLINE+1
ANSI     EQU   OUTLINE
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DRC00PTR EQU   CVTPTRS0+76
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
DCK00PTR EQU   CVTPTRS0+64
EQC00PTR EQU   CVTPTRS0+60
FSC00PTR EQU   CVTPTRS0+56
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
PARMPTR  EQU   CVTPTRS0+8
SDATAPTR EQU   CVTPTRS0+4
*                                      END UNREFERENCED COMPONENTS
@RC00025 EQU   @RC00013
@RC00039 EQU   @RC00032
@RC00044 EQU   @RC00030
@ENDDATA EQU   *
         END   ISDAHIST,(C'PLS1653',0603,76317)
