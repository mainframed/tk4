         TITLE 'FAULT SYMPTOM CODE REPORT INFORMATION ROUTINE          *
                        '
ISDAFSC2 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(8)                                              0001
         DC    C'ISDAFSC2'                                         0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         ISDAGSPC R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0016
*   /*****************************************************************/
*   /*                                                               */
*   /* PROGRAM START.                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0016
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO SDACVT.    0016
*                                                            @Y30LB51*/
         L     @10,@PC00001                                        0016
         L     CVTPTR,WORKPTR(,@10)                                0016
*   LPARMPTR=PARMPTR;               /* SET LOCAL PTR TO SDAPARMS.  0017
*                                                            @Y30LB51*/
         L     LPARMPTR,PARMPTR(,CVTPTR)                           0017
*   FSCRETCD=0;                     /* INITIALIZE THE RETURN CODE. 0018
*                                                            @Y30LB51*/
         SLR   @10,@10                                             0018
         LR    FSCRETCD,@10                                        0018
*   FSCWKPTR=FSC00PTR;              /* SET PTR TO WORK AREA. @Y30LB51*/
         L     FSCWKPTR,FSC00PTR(,CVTPTR)                          0019
*   IF FSCWKPTR^=0 THEN             /* IF WORK AREA PRESENT  @Y30LB51*/
         CR    FSCWKPTR,@10                                        0020
         BE    @RF00020                                            0020
*     DO;                           /* CHECK FOR DATA IN FSC TABLE.
*                                                            @Y30LB51*/
*       CHNPTR=CHAINTBL;            /* SET PTR TO CHAIN TABLE.     0022
*                                                            @Y30LB51*/
         L     CHNPTR,CHAINTBL(,FSCWKPTR)                          0022
*       IF CHNPTR^=0 THEN           /* IF CHAIN TABLE PRESENT      0023
*                                                            @Y30LB51*/
         CR    CHNPTR,@10                                          0023
         BE    @RF00023                                            0023
*         DO;                       /* PROCESS THE DATA.     @Y30LB51*/
*           CALL GETTBLS;           /* GET SPACE FOR TABLES. @Y30LB51*/
         BAL   @14,GETTBLS                                         0025
*           IF FSCRETCD=0 THEN      /* IF SPACE SECURED      @Y30LB51*/
         LTR   FSCRETCD,FSCRETCD                                   0026
         BNZ   @RF00026                                            0026
*             DO;                   /* PROCESS THE DATA.     @Y30LB51*/
*               GET0PTR=FSCPTR;     /* SET PTR TO FIRST FSC TABLE. 0028
*                                                            @Y30LB51*/
         L     @10,FSCPTR(,FSCWKPTR)                               0028
         ST    @10,GET0PTR(,FSCWKPTR)                              0028
*               TBLPTR=STARTPTR;    /* SET PTR TO FIRST ELEMENT.   0029
*                                                            @Y30LB51*/
         L     TBLPTR,STARTPTR(,@10)                               0029
*               CHNPTR=CHAINTBL;    /* SET PTR TO CHAIN TABLE.     0030
*                                                            @Y30LB51*/
         L     CHNPTR,CHAINTBL(,FSCWKPTR)                          0030
*               CALL COMPSUM;       /* COMPUTE TOTAL RECORDS PER   0031
*                                      SSID.                 @Y30LB51*/
         BAL   @14,COMPSUM                                         0031
*               CALL COMPPCT;       /* COMPUTE PER CENT RECORDS PER
*                                      FSC.                  @Y30LB51*/
         BAL   @14,COMPPCT                                         0032
*               CALL PREPPRNT;      /* PREPARE THE PRINT TABLE.    0033
*                                                            @Y30LB51*/
         BAL   @14,PREPPRNT                                        0033
*             END;                  /*                       @Y30LB51*/
*           ELSE                    /* PRINT TABLE AND SUM TABLE   0035
*                                      SPACE NOT AVAILBLE    @Y30LB51*/
*             CALL FREECORE;        /* FREE ALL DYNAMIC STORAGE.   0035
*                                                            @Y30LB51*/
         B     @RC00026                                            0035
@RF00026 BAL   @14,FREECORE                                        0035
*         END;                      /*                       @Y30LB51*/
*       ELSE                        /* NO DATA IN FSC TABLE. @Y30LB51*/
*         DO;                       /* FREE DYNAMIC STORAGE. @Y30LB51*/
         B     @RC00023                                            0037
@RF00023 DS    0H                                                  0038
*           CALL FREECORE;          /* GO FREE STORAGE.      @Y30LB51*/
         BAL   @14,FREECORE                                        0038
*           FSCRETCD=NODATA;        /* SET RETURN CODE.      @Y30LB51*/
         LA    FSCRETCD,8                                          0039
*         END;                      /* Y30LB51                       */
*     END;                          /*                       @Y30LB51*/
*   ELSE                            /* NO WORK AREA PRESENT. @Y30LB51*/
*     DO;                           /*                       @Y30LB51*/
         B     @RC00020                                            0042
@RF00020 DS    0H                                                  0043
*       CFSC='00'X;                 /* SET 'DO NOT CALL' SWITCH.   0043
*                                                            @Y30LB51*/
         MVI   CFSC(LPARMPTR),X'00'                                0043
*       FSCRETCD=NODATA;            /*                       @Y30LB51*/
         LA    FSCRETCD,8                                          0044
*     END;                          /*                       @Y30LB51*/
*   RETURN CODE(FSCRETCD);          /*                       @Y30LB51*/
@RC00020 L     @13,4(,@13)                                         0046
         L     @00,@SIZDATD                                        0046
         LR    @01,@11                                             0046
         ISDAFSPC R,LV=(0),A=(1)
         LR    @15,@07                                             0046
         L     @14,12(,@13)                                        0046
         LM    @00,@12,20(@13)                                     0046
         BR    @14                                                 0046
*GETTBLS:                                                          0047
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/
*                                                                  0047
@EL00001 L     @13,4(,@13)                                         0047
@EF00001 L     @00,@SIZDATD                                        0047
         LR    @01,@11                                             0047
         ISDAFSPC R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0047
         BR    @14                                                 0047
GETTBLS  ST    @14,@SA00002                                        0047
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL OBTAIN SPACE - VIA THE GETMAIN MACRO - FOR  */
*   /* THE SUM TABLE AND PRINT TABLE. SSIDCTR CONTAINS THE COUNT OF  */
*   /* SSIDS IN THE CHAIN TABLE. THE SUMTABLE WILL HAVE ONE ENTRY FOR*/
*   /* EACH SSID IN THE CHAIN TABLE PLUS ONE. TBLELMCT CONTAINS THE  */
*   /* COUNT OF ENTRIES IN THE FSC TABLE. THE PRINT TABLE WILL HAVE  */
*   /* ONE ENTRY FOR EACH ENTRY IN THE FSC TABLE.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0048
*   SSIDCTR=SSIDCTR+1;              /*                       @Y30LB51*/
         LA    @10,1                                               0048
         LH    @06,SSIDCTR(,FSCWKPTR)                              0048
         ALR   @06,@10                                             0048
         STH   @06,SSIDCTR(,FSCWKPTR)                              0048
*   TBLELMCT=TBLELMCT+1;            /*                       @Y30LB51*/
         AH    @10,TBLELMCT(,FSCWKPTR)                             0049
         STH   @10,TBLELMCT(,FSCWKPTR)                             0049
*   SPNO='04'X;                     /* SPECIFY SUBPOOL NUMBER.     0050
*                                                            @Y30LB51*/
         MVI   SPNO(CVTPTR),X'04'                                  0050
*   CORELEN=LENGTH(SUMTBL)*SSIDCTR; /* GET SUM TABLE LENGTH. @Y30LB51*/
         SLA   @06,4                                               0051
         STCM  @06,7,CORELEN(CVTPTR)                               0051
*   CALL ISDAGET1(WORKPTR);         /* GET SPACE FOR SUM TABLE.    0052
*                                                            @Y30LB51*/
         L     @10,@PC00001                                        0052
         ST    @10,@AL00001                                        0052
         L     @15,@CV00288                                        0052
         LA    @01,@AL00001                                        0052
         BALR  @14,@15                                             0052
*   RFY                                                            0053
*     RF RSTD;                      /*                       @Y30LB51*/
*   FSCRETCD=RF;                    /* SAVE RETURN CODE.     @Y30LB51*/
         LR    FSCRETCD,RF                                         0054
*   RFY                                                            0055
*     RF UNRSTD;                    /*                       @Y30LB51*/
*   IF FSCRETCD=0 THEN              /* IF SUM TABLE SPACE OBTAINED 0056
*                                                            @Y30LB51*/
         LTR   FSCRETCD,FSCRETCD                                   0056
         BNZ   @RF00056                                            0056
*     DO;                           /* GET SPACE FOR PRINT TABLE.  0057
*                                                            @Y30LB51*/
*       SUMTABLE=COREADDR;          /* SAVE ADDRESS OF SUM TABLE.  0058
*                                                            @Y30LB51*/
         L     @10,COREADDR(,CVTPTR)                               0058
         ST    @10,SUMTABLE(,FSCWKPTR)                             0058
*       FREEPTR=COREADDR;           /* SET PTR TO SUM TABLE START. 0059
*                                                            @Y30LB51*/
         ST    @10,FREEPTR(,FSCWKPTR)                              0059
*       SUMPTR=COREADDR;            /* SET PTR TO SUM TABLE. @Y30LB51*/
         LR    SUMPTR,@10                                          0060
*       DO I=1 TO SSIDCTR;          /* ZERO OUT THE SUM TABLE.     0061
*                                                            @Y30LB51*/
         LA    @10,1                                               0061
         B     @DE00061                                            0061
@DL00061 DS    0H                                                  0062
*         SUMTBL=''B;               /*                       @Y30LB51*/
         XC    SUMTBL(16,SUMPTR),SUMTBL(SUMPTR)                    0062
*         SUMPTR=SUMPTR+LENGTH(SUMTBL);/*                    @Y30LB51*/
         AH    SUMPTR,@CH00172                                     0063
*       END;                        /*                       @Y30LB51*/
         LA    @10,1                                               0064
         AH    @10,I(,FSCWKPTR)                                    0064
@DE00061 STH   @10,I(,FSCWKPTR)                                    0064
         CH    @10,SSIDCTR(,FSCWKPTR)                              0064
         BNH   @DL00061                                            0064
*       CORELEN=LENGTH(PRTTBL)*TBLELMCT;/* GET PRINT TABLE LENGTH. 0065
*                                                            @Y30LB51*/
         LH    @10,TBLELMCT(,FSCWKPTR)                             0065
         SLA   @10,2                                               0065
         STCM  @10,7,CORELEN(CVTPTR)                               0065
*       CALL ISDAGET1(WORKPTR);     /* GET SPACE FOR PRINT TABLE.  0066
*                                                            @Y30LB51*/
         L     @10,@PC00001                                        0066
         ST    @10,@AL00001                                        0066
         L     @15,@CV00288                                        0066
         LA    @01,@AL00001                                        0066
         BALR  @14,@15                                             0066
*       RFY                                                        0067
*         RF RSTD;                  /*                       @Y30LB51*/
*       FSCRETCD=RF;                /* SAVE RETURN CODE.     @Y30LB51*/
         LR    FSCRETCD,RF                                         0068
*       RFY                                                        0069
*         RF UNRSTD;                /*                       @Y30LB51*/
*       IF FSCRETCD=0 THEN          /* IF PRINT ABLE SPACE OBTAINED
*                                                            @Y30LB51*/
         LTR   FSCRETCD,FSCRETCD                                   0070
         BNZ   @RF00070                                            0070
*         DO;                       /* INITIALIZE THE PRINT TABLE. 0071
*                                                            @Y30LB51*/
*           PRINTTBL=COREADDR;      /* SAVE PRINT TABLE ADDRESS.   0072
*                                                            @Y30LB51*/
         L     @10,COREADDR(,CVTPTR)                               0072
         ST    @10,PRINTTBL(,FSCWKPTR)                             0072
*           PRTPTR=COREADDR;        /* SET PTR TO PRINT TABLE.     0073
*                                                            @Y30LB51*/
         LR    PRTPTR,@10                                          0073
*           DO I=1 TO TBLELMCT;     /* ZERO OUT THE PRINT TABLE.   0074
*                                                            @Y30LB51*/
         LA    @10,1                                               0074
         B     @DE00074                                            0074
@DL00074 DS    0H                                                  0075
*             PRTTBL=''B;           /*                       @Y30LB51*/
         XC    PRTTBL(4,PRTPTR),PRTTBL(PRTPTR)                     0075
*             PRTPTR=PRTPTR+LENGTH(PRTTBL);/*                @Y30LB51*/
         AH    PRTPTR,@CH00105                                     0076
*           END;                    /*                       @Y30LB51*/
         LA    @10,1                                               0077
         AH    @10,I(,FSCWKPTR)                                    0077
@DE00074 STH   @10,I(,FSCWKPTR)                                    0077
         CH    @10,TBLELMCT(,FSCWKPTR)                             0077
         BNH   @DL00074                                            0077
*         END;                      /*                       @Y30LB51*/
*       ELSE                        /* PRINT TABLE SPACE NOT       0079
*                                      OBTAINED.             @Y30LB51*/
*         FSCRETCD=NOSPACE;         /*                       @Y30LB51*/
         B     @RC00070                                            0079
@RF00070 LA    FSCRETCD,4                                          0079
*     END;                          /*                       @Y30LB51*/
*   ELSE                            /* SUM TABLE SPACE NOT OBTAINED.
*                                                            @Y30LB51*/
*     FSCRETCD=NOSPACE;             /*                       @Y30LB51*/
         B     @RC00056                                            0081
@RF00056 LA    FSCRETCD,4                                          0081
*   END GETTBLS;                                                   0082
@EL00002 DS    0H                                                  0082
@EF00002 DS    0H                                                  0082
@ER00002 L     @14,@SA00002                                        0082
         BR    @14                                                 0082
*COMPSUM:                                                          0083
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/
*                                                                  0083
COMPSUM  ST    @14,@SA00003                                        0083
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL COMPUTE THE TOTAL NUMBER OF RECORDS COUNTED */
*   /* FOR EACH SSID.                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0084
*   DO WHILE CHNPTR^=0;             /*                       @Y30LB51*/
         B     @DE00084                                            0084
@DL00084 DS    0H                                                  0085
*     SUMPTR=FREEPTR;               /* SET PTR TO EMPTY SUM TABLE  0085
*                                      SPACE.                @Y30LB51*/
         L     SUMPTR,FREEPTR(,FSCWKPTR)                           0085
*     SUMSSID=CHNSSIDF;             /* PUT SSID IN TABLE.    @Y30LB51*/
         MVC   SUMSSID(2,SUMPTR),CHNSSIDF(CHNPTR)                  0086
*     SUMFPTR=FSCTPTR;              /* PUT SSID CHAIN ADDRESS IN   0087
*                                      TABLE.                @Y30LB51*/
         L     @10,FSCTPTR(,CHNPTR)                                0087
         ST    @10,SUMFPTR(,SUMPTR)                                0087
*     TBLPTR=FSCTPTR;               /* SET PTR TO SSID CHAIN.      0088
*                                                            @Y30LB51*/
         LR    TBLPTR,@10                                          0088
*     DO WHILE TBLPTR^=0;           /*                       @Y30LB51*/
         B     @DE00089                                            0089
@DL00089 DS    0H                                                  0090
*       SUMBUILD=SUMBUILD+FSCCTR;   /* ADD FSC COUNT.        @Y30LB51*/
         LH    @10,SUMBUILD(,FSCWKPTR)                             0090
         AH    @10,FSCCTR(,TBLPTR)                                 0090
         STH   @10,SUMBUILD(,FSCWKPTR)                             0090
*       SUMSCTR=SUMSCTR+1;          /* COUNT SSIDS ON CHAIN. @Y30LB51*/
         LA    @10,1                                               0091
         AH    @10,SUMSCTR(,SUMPTR)                                0091
         STH   @10,SUMSCTR(,SUMPTR)                                0091
*       TBLPTR=FSCSPTR;             /* SET PTR TO NEXT SSID CHAIN  0092
*                                      ENTRY.                @Y30LB51*/
         L     TBLPTR,FSCSPTR(,TBLPTR)                             0092
*     END;                          /*                       @Y30LB51*/
@DE00089 SLR   @10,@10                                             0093
         CR    TBLPTR,@10                                          0093
         BNE   @DL00089                                            0093
*     SUMTOTAL=SUMBUILD;            /* PUT TOTAL IN SUM TABLE.     0094
*                                                            @Y30LB51*/
         MVC   SUMTOTAL(2,SUMPTR),SUMBUILD(FSCWKPTR)               0094
*     SUMBUILD=0;                   /* RESET SUM WORK AREA.  @Y30LB51*/
         STH   @10,SUMBUILD(,FSCWKPTR)                             0095
*     TBLPTR=FSCTPTR;               /* SET PTR TO SSID CHAIN.      0096
*                                                            @Y30LB51*/
         L     TBLPTR,FSCTPTR(,CHNPTR)                             0096
*     DO WHILE TBLPTR^=0;           /*                       @Y30LB51*/
         B     @DE00097                                            0097
@DL00097 DS    0H                                                  0098
*       FSCSUM=SUMTOTAL;            /* PUT SUM IN FSC TABLE. @Y30LB51*/
         MVC   FSCSUM(2,TBLPTR),SUMTOTAL(SUMPTR)                   0098
*       TBLPTR=FSCSPTR;             /* SET PTR TO NEXT SSID CHAIN  0099
*                                      ENTRY.                @Y30LB51*/
         L     TBLPTR,FSCSPTR(,TBLPTR)                             0099
*     END;                          /*                       @Y30LB51*/
@DE00097 LTR   TBLPTR,TBLPTR                                       0100
         BNZ   @DL00097                                            0100
*     CALL SUMSORT;                 /* CHAIN SUM TABLE ENTRY.      0101
*                                                            @Y30LB51*/
         BAL   @14,SUMSORT                                         0101
*     CHNPTR=CHNTPTR;               /* SET PTR TO NEXT CHAIN TABLE 0102
*                                      ENTRY.                @Y30LB51*/
         L     CHNPTR,CHNTPTR(,CHNPTR)                             0102
*     FREEPTR=FREEPTR+LENGTH(SUMTBL);/* SET PTR TO NEXT FREE ENTRY.
*                                                            @Y30LB51*/
         LA    @10,16                                              0103
         AL    @10,FREEPTR(,FSCWKPTR)                              0103
         ST    @10,FREEPTR(,FSCWKPTR)                              0103
*   END;                            /*                       @Y30LB51*/
@DE00084 LTR   CHNPTR,CHNPTR                                       0104
         BNZ   @DL00084                                            0104
*   END COMPSUM;                    /*                       @Y30LB51*/
@EL00003 DS    0H                                                  0105
@EF00003 DS    0H                                                  0105
@ER00003 L     @14,@SA00003                                        0105
         BR    @14                                                 0105
*SUMSORT:                                                          0106
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/
*                                                                  0106
SUMSORT  ST    @14,12(,@13)                                        0106
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL ADD EACH NEW SUM TABLE ENTRY TO THE SUM     */
*   /* CHAIN IN DECENDING ORDER OF MAGNITUDE OF THE CONTENTS OF THE  */
*   /* SUMTOTAL FIELD.                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0107
*   IF FREEPTR=SUMTABLE THEN        /* IF FIRST ENTRY        @Y30LB51*/
         L     @10,FREEPTR(,FSCWKPTR)                              0107
         C     @10,SUMTABLE(,FSCWKPTR)                             0107
         BNE   @RF00107                                            0107
*     SUMSTART=FREEPTR;             /* SET START OF SUM CHAIN PTR. 0108
*                                                            @Y30LB51*/
         ST    @10,SUMSTART(,FSCWKPTR)                             0108
*   ELSE                            /* NOT FIRST ENTRY.      @Y30LB51*/
*     DO;                           /*                       @Y30LB51*/
         B     @RC00107                                            0109
@RF00107 DS    0H                                                  0110
*       SUMPTR=SUMSTART;            /* SET PTR TO SUM CHAIN START. 0110
*                                                            @Y30LB51*/
         L     SUMPTR,SUMSTART(,FSCWKPTR)                          0110
*       DO WHILE(SUMPTR^=0)&(FREEPTR->SUMTOTAL<SUMTOTAL);/* SEARCH 0111
*                                      FOR PLACE IN CHAIN OR END OF
*                                      CHAIN.                @Y30LB51*/
         B     @DE00111                                            0111
@DL00111 DS    0H                                                  0112
*         TBLPTRSV=SUMPTR;          /* SAVE ADDRESS CURRENT ENTRY. 0112
*                                                            @Y30LB51*/
         ST    SUMPTR,TBLPTRSV(,FSCWKPTR)                          0112
*         SUMPTR=SUMTPTR;           /* SET PTR TO NEXT CHAIN ENTRY.
*                                                            @Y30LB51*/
         L     SUMPTR,SUMTPTR(,SUMPTR)                             0113
*       END;                        /*                       @Y30LB51*/
@DE00111 LTR   SUMPTR,SUMPTR                                       0114
         BZ    @DC00111                                            0114
         L     @10,FREEPTR(,FSCWKPTR)                              0114
         LH    @10,SUMTOTAL(,@10)                                  0114
         CH    @10,SUMTOTAL(,SUMPTR)                               0114
         BL    @DL00111                                            0114
@DC00111 DS    0H                                                  0115
*       IF SUMPTR^=0 THEN           /* POSITION FOUND IN CHAIN,    0115
*                                                            @Y30LB51*/
         LTR   SUMPTR,SUMPTR                                       0115
         BZ    @RF00115                                            0115
*         DO;                       /* ADD NEW ENTRY.        @Y30LB51*/
*           FREEPTR->SUMTPTR=SUMPTR;/* POINT NEW ENTRY TO OLD ENTRY.
*                                                            @Y30LB51*/
         L     @10,FREEPTR(,FSCWKPTR)                              0117
         ST    SUMPTR,SUMTPTR(,@10)                                0117
*           IF FREEPTR->SUMTOTAL>=SUMSTART->SUMTOTAL THEN/* IF NEW 0118
*                                      ENTRY NOW GREATEST    @Y30LB51*/
         L     @01,SUMSTART(,FSCWKPTR)                             0118
         LH    @00,SUMTOTAL(,@10)                                  0118
         CH    @00,SUMTOTAL(,@01)                                  0118
         BL    @RF00118                                            0118
*             SUMSTART=FREEPTR;     /* SET NEW START OF SUM CHAIN. 0119
*                                                            @Y30LB51*/
         ST    @10,SUMSTART(,FSCWKPTR)                             0119
*           ELSE                    /* NEW ENTRY NOT GREATEST.     0120
*                                                            @Y30LB51*/
*             TBLPTRSV->SUMTPTR=FREEPTR;/* POINT OLD ENTRY TO NEW  0120
*                                      ENTRY.                @Y30LB51*/
         B     @RC00118                                            0120
@RF00118 L     @10,TBLPTRSV(,FSCWKPTR)                             0120
         MVC   SUMTPTR(4,@10),FREEPTR(FSCWKPTR)                    0120
*         END;                      /*                       @Y30LB51*/
*       ELSE                        /* AT END OF CHAIN.      @Y30LB51*/
*         TBLPTRSV->SUMTPTR=FREEPTR;/* ADD NEW ENTRY TO CHAIN.     0122
*                                                            @Y30LB51*/
         B     @RC00115                                            0122
@RF00115 L     @10,TBLPTRSV(,FSCWKPTR)                             0122
         MVC   SUMTPTR(4,@10),FREEPTR(FSCWKPTR)                    0122
*     END;                          /*                       @Y30LB51*/
*   END SUMSORT;                    /*                       @Y30LB51*/
@EL00004 DS    0H                                                  0124
@EF00004 DS    0H                                                  0124
@ER00004 L     @14,12(,@13)                                        0124
         BR    @14                                                 0124
*COMPPCT:                                                          0125
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/
*                                                                  0125
COMPPCT  ST    @14,12(,@13)                                        0125
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL COMPUTE THE PERCENTAGE OF RECORDS COUNTED   */
*   /* FOR EACH SSID BY EACH FSC COUNTED WITH THE SSID.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0126
*   CHNPTR=CHAINTBL;                /* SET PTR TO CHAIN TABLE.     0126
*                                                            @Y30LB51*/
         L     CHNPTR,CHAINTBL(,FSCWKPTR)                          0126
*   DO WHILE CHNPTR^=0;             /*                       @Y30LB51*/
         B     @DE00127                                            0127
@DL00127 DS    0H                                                  0128
*     TBLPTR=FSCTPTR;               /* SET PTR TO SSID CHAIN.      0128
*                                                            @Y30LB51*/
         L     TBLPTR,FSCTPTR(,CHNPTR)                             0128
*     DO WHILE TBLPTR^=0;           /*                       @Y30LB51*/
         B     @DE00129                                            0129
@DL00129 DS    0H                                                  0130
*       FSCPCT=(FSCCTR*1000)/FSCSUM;/* COMPUT PERCENTAGE.    @Y30LB51*/
         LH    @10,FSCCTR(,TBLPTR)                                 0130
         MH    @10,@CH00313                                        0130
         LR    @00,@10                                             0130
         SRDA  @00,32                                              0130
         LH    @10,FSCSUM(,TBLPTR)                                 0130
         DR    @00,@10                                             0130
         STH   @01,FSCPCT(,TBLPTR)                                 0130
*       TBLPTR=FSCSPTR;             /* SET PTR TO NEXT SSID CHAIN  0131
*                                      ENTRY.                @Y30LB51*/
         L     TBLPTR,FSCSPTR(,TBLPTR)                             0131
*     END;                          /*                       @Y30LB51*/
@DE00129 LTR   TBLPTR,TBLPTR                                       0132
         BNZ   @DL00129                                            0132
*     CHNPTR=CHNTPTR;               /* SET PTR TO NEXT CHAIN TABLE 0133
*                                      ENTRY.                @Y30LB51*/
         L     CHNPTR,CHNTPTR(,CHNPTR)                             0133
*   END;                            /*                       @Y30LB51*/
@DE00127 LTR   CHNPTR,CHNPTR                                       0134
         BNZ   @DL00127                                            0134
*   END COMPPCT;                    /*                       @Y30LB51*/
@EL00005 DS    0H                                                  0135
@EF00005 DS    0H                                                  0135
@ER00005 L     @14,12(,@13)                                        0135
         BR    @14                                                 0135
*PREPPRNT:                                                         0136
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/
*                                                                  0136
PREPPRNT ST    @14,12(,@13)                                        0136
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL PREPARE THE PRINT TABLE.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0137
*   PRTPTR=PRINTTBL;                /* SET PTR TO PRINT TABLE.     0137
*                                                            @Y30LB51*/
         L     PRTPTR,PRINTTBL(,FSCWKPTR)                          0137
*   SUMPTR=SUMSTART;                /* SET PTR TO SUM CHAIN. @Y30LB51*/
         L     SUMPTR,SUMSTART(,FSCWKPTR)                          0138
*   DO WHILE SUMPTR^=0;             /*                       @Y30LB51*/
         B     @DE00139                                            0139
@DL00139 DS    0H                                                  0140
*     TBLPTR=SUMFPTR;               /* SET PTR TO SSID CHAIN START.
*                                                            @Y30LB51*/
         L     TBLPTR,SUMFPTR(,SUMPTR)                             0140
*     DO WHILE SUMPCTR<SUMSCTR;     /*                       @Y30LB51*/
         B     @DE00141                                            0141
@DL00141 DS    0H                                                  0142
*       FREEPTR=FSCSPTR;            /* SET PTR TO NEXT CHAIN ENTRY.
*                                                            @Y30LB51*/
         MVC   FREEPTR(4,FSCWKPTR),FSCSPTR(TBLPTR)                 0142
*       DO WHILE FREEPTR^=0;        /*                       @Y30LB51*/
         B     @DE00143                                            0143
@DL00143 DS    0H                                                  0144
*         IF FREEPTR->INPRTTBL='0'B THEN/* IF ENTRY NOT IN TABLE   0144
*                                                            @Y30LB51*/
         L     @10,FREEPTR(,FSCWKPTR)                              0144
         TM    INPRTTBL(@10),B'00000001'                           0144
         BNZ   @RF00144                                            0144
*           DO;                     /* CHECK FOR GREATER ENTRY.    0145
*                                                            @Y30LB51*/
*             IF FREEPTR->FSCCTR>TBLPTR->FSCCTR THEN/* IF THIS ENTRY
*                                      GREATER               @Y30LB51*/
         LH    @15,FSCCTR(,@10)                                    0146
         CH    @15,FSCCTR(,TBLPTR)                                 0146
         BNH   @RF00146                                            0146
*               TBLPTR=FREEPTR;     /* SET PTR TO IT.        @Y30LB51*/
         LR    TBLPTR,@10                                          0147
*             ELSE                                                 0148
*               ;                   /* NOT GREATER.          @Y30LB51*/
@RF00146 DS    0H                                                  0149
*           END;                    /*                       @Y30LB51*/
*         ELSE                                                     0150
*           ;                       /* ENTRY ALREADY IN PRINT TABLE.
*                                                            @Y30LB51*/
@RF00144 DS    0H                                                  0151
*         FREEPTR=FREEPTR->FSCSPTR; /* SET WORK POINTER TO NEXT SSID
*                                      CHAIN ENTRY.          @Y30LB51*/
         L     @10,FREEPTR(,FSCWKPTR)                              0151
         L     @10,FSCSPTR(,@10)                                   0151
         ST    @10,FREEPTR(,FSCWKPTR)                              0151
*       END;                        /*                       @Y30LB51*/
@DE00143 ICM   @10,15,FREEPTR(FSCWKPTR)                            0152
         BNZ   @DL00143                                            0152
*       PRTTPTR=TBLPTR;             /* PUT FSC TABLE ENTRY ADDRESS IN
*                                      PRINT TABLE.          @Y30LB51*/
         ST    TBLPTR,PRTTPTR(,PRTPTR)                             0153
*       PRTPTR=PRTPTR+4;            /* SET PTR TO NEXT ENTRY.      0154
*                                                            @Y30LB51*/
         AH    PRTPTR,@CH00105                                     0154
*       SUMPCTR=SUMPCTR+1;          /* COUNT ENTRIES PROCESSED.    0155
*                                                            @Y30LB51*/
         LA    @10,1                                               0155
         AH    @10,SUMPCTR(,SUMPTR)                                0155
         STH   @10,SUMPCTR(,SUMPTR)                                0155
*       TBLPTR->INPRTTBL='1'B;      /* SET 'IN TABLE' FLAG.  @Y30LB51*/
         OI    INPRTTBL(TBLPTR),B'00000001'                        0156
*       TBLPTR=SUMFPTR;             /* SET PTR TO SSID CHAIN.      0157
*                                                            @Y30LB51*/
         L     TBLPTR,SUMFPTR(,SUMPTR)                             0157
*       DO WHILE INPRTTBL='1'B&TBLPTR^=0;/* SEARCH FOR UNPROCESSED 0158
*                                      SSID CHAIN ENTRY, IF ANY.   0158
*                                                            @ZA00693*/
         B     @DE00158                                            0158
@DL00158 DS    0H                                                  0159
*         TBLPTR=FSCSPTR;           /* SET PTR TO NEXT SSID CHAIN  0159
*                                      ENTRY.                @Y30LB51*/
         L     TBLPTR,FSCSPTR(,TBLPTR)                             0159
*       END;                        /*                       @Y30LB51*/
@DE00158 TM    INPRTTBL(TBLPTR),B'00000001'                        0160
         BNO   @DC00158                                            0160
         LTR   TBLPTR,TBLPTR                                       0160
         BNZ   @DL00158                                            0160
@DC00158 DS    0H                                                  0161
*     END;                          /*                       @Y30LB51*/
@DE00141 LH    @10,SUMPCTR(,SUMPTR)                                0161
         CH    @10,SUMSCTR(,SUMPTR)                                0161
         BL    @DL00141                                            0161
*     SUMPTR=SUMTPTR;               /* SET PTR TO NEXT SUM CHAIN   0162
*                                      ENTRY.                @Y30LB51*/
         L     SUMPTR,SUMTPTR(,SUMPTR)                             0162
*   END;                            /*                       @Y30LB51*/
@DE00139 LTR   SUMPTR,SUMPTR                                       0163
         BNZ   @DL00139                                            0163
*   END PREPPRNT;                   /*                       @Y30LB51*/
@EL00006 DS    0H                                                  0164
@EF00006 DS    0H                                                  0164
@ER00006 L     @14,12(,@13)                                        0164
         BR    @14                                                 0164
*FREECORE:                                                         0165
*   PROC OPTIONS(SAVE(14));         /* Y30LB51                       */
*                                                                  0165
FREECORE ST    @14,@SA00007                                        0165
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL FREE ALL GOTTEN CORE VIA THE ISDAFREE       */
*   /* ROUTINE.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*   SPNO='04'X;                     /* GET THE SUBPOOL NUMBER.     0166
*                                                            @YM32169*/
         MVI   SPNO(CVTPTR),X'04'                                  0166
*   IF PRINTTBL^=0 THEN             /* IF PRINT TABLE EXISTS @Y30LB51*/
         L     @10,PRINTTBL(,FSCWKPTR)                             0167
         LTR   @10,@10                                             0167
         BZ    @RF00167                                            0167
*     DO;                           /* FREE IT.              @Y30LB51*/
*       CORELEN=LENGTH(PRTTBL)*TBLELMCT;/* GET PRINT TABLE LENGTH  0169
*                                                            @Y30LB51*/
         LH    @06,TBLELMCT(,FSCWKPTR)                             0169
         SLA   @06,2                                               0169
         STCM  @06,7,CORELEN(CVTPTR)                               0169
*       COREADDR=PRINTTBL;          /* AND ADDRESS           @Y30LB51*/
         ST    @10,COREADDR(,CVTPTR)                               0170
*       CALL ISDAFREE(WORKPTR);     /* AND FREE IT.          @Y30LB51*/
         L     @10,@PC00001                                        0171
         ST    @10,@AL00001                                        0171
         L     @15,@CV00289                                        0171
         LA    @01,@AL00001                                        0171
         BALR  @14,@15                                             0171
*     END;                          /*                       @Y30LB51*/
*   ELSE                                                           0173
*     ;                             /* PRINT TABLE DOES NOT EXIST. 0173
*                                                            @Y30LB51*/
@RF00167 DS    0H                                                  0174
*   IF SUMTABLE^=0 THEN             /* IF SUM TABLE EXISTS   @Y30LB51*/
         L     @10,SUMTABLE(,FSCWKPTR)                             0174
         LTR   @10,@10                                             0174
         BZ    @RF00174                                            0174
*     DO;                           /* FREE IT.              @Y30LB51*/
*       CORELEN=LENGTH(SUMTBL)*SSIDCTR;/* GET SUM TABLE LENGTH     0176
*                                                            @Y30LB51*/
         LH    @06,SSIDCTR(,FSCWKPTR)                              0176
         SLA   @06,4                                               0176
         STCM  @06,7,CORELEN(CVTPTR)                               0176
*       COREADDR=SUMTABLE;          /* AND ADDRESS           @Y30LB51*/
         ST    @10,COREADDR(,CVTPTR)                               0177
*       CALL ISDAFREE(WORKPTR);     /* AND FREE IT.          @Y30LB51*/
         L     @10,@PC00001                                        0178
         ST    @10,@AL00001                                        0178
         L     @15,@CV00289                                        0178
         LA    @01,@AL00001                                        0178
         BALR  @14,@15                                             0178
*     END;                          /*                       @Y30LB51*/
*   ELSE                                                           0180
*     ;                             /* SUM TABLE DOES NOT EXIST.   0180
*                                                            @Y30LB51*/
@RF00174 DS    0H                                                  0181
*   DO WHILE GET0PTR^=0;            /* FREE EXISTING FSC TABLES.   0181
*                                                            @Y30LB51*/
         B     @DE00181                                            0181
@DL00181 DS    0H                                                  0182
*     SPNOLEN=GET0SPLN;             /* GET FSC TABLE LENGTH. @Y30LB51*/
         L     @10,GET0PTR(,FSCWKPTR)                              0182
         MVC   SPNOLEN(4,CVTPTR),GET0SPLN(@10)                     0182
*     COREADDR=GET0PTR;             /* GET ADDRESS OF LAST TABLE ON
*                                      CHAIN.                @Y30LB51*/
         ST    @10,COREADDR(,CVTPTR)                               0183
*     GET0PTR=LASTPTR;              /* GET ADDRESS PRECEDING FSC   0184
*                                      TABLE.                @Y30LB51*/
         L     @10,LASTPTR(,@10)                                   0184
         ST    @10,GET0PTR(,FSCWKPTR)                              0184
*     CALL ISDAFREE(WORKPTR);       /* FREE LAST FSC TABLE.  @Y30LB51*/
         L     @10,@PC00001                                        0185
         ST    @10,@AL00001                                        0185
         L     @15,@CV00289                                        0185
         LA    @01,@AL00001                                        0185
         BALR  @14,@15                                             0185
*   END;                            /*                       @YE0LB51*/
@DE00181 SLR   @10,@10                                             0186
         C     @10,GET0PTR(,FSCWKPTR)                              0186
         BNE   @DL00181                                            0186
*   IF CHAINTBL^=0 THEN             /* IF CHAIN TABLE EXISTS @Y30LB51*/
         L     @06,CHAINTBL(,FSCWKPTR)                             0187
         CR    @06,@10                                             0187
         BE    @RF00187                                            0187
*     DO;                           /* FREE IT.              @Y30LB51*/
*       CORELEN=LENGTH(CHNTBL)*SSIDCT;/* GET CHAIN TABLE LENGTH    0189
*                                                            @Y30LB51*/
         LH    @10,SSIDCT(,FSCWKPTR)                               0189
         MH    @10,@CH00119                                        0189
         STCM  @10,7,CORELEN(CVTPTR)                               0189
*       COREADDR=CHAINTBL;          /* AND ADDRESS           @Y30LB51*/
         ST    @06,COREADDR(,CVTPTR)                               0190
*       CALL ISDAFREE(WORKPTR);     /* AND FREE IT.          @Y30LB51*/
         L     @10,@PC00001                                        0191
         ST    @10,@AL00001                                        0191
         L     @15,@CV00289                                        0191
         LA    @01,@AL00001                                        0191
         BALR  @14,@15                                             0191
*     END;                          /*                       @Y30LB51*/
*   ELSE                                                           0193
*     ;                             /* CHAIN TABLE DOES NOT EXIST. 0193
*                                                            @Y30LB51*/
@RF00187 DS    0H                                                  0194
*   IF FSC00PTR^=0 THEN             /* IF WORK AREA EXISTS   @Y30LB51*/
         L     @10,FSC00PTR(,CVTPTR)                               0194
         LTR   @10,@10                                             0194
         BZ    @RF00194                                            0194
*     DO;                           /* FREE IT.              @Y30LB51*/
*       CORELEN=LENGTH(FSCWORK);    /* GET WORK AREA LENGTH  @Y30LB51*/
         MVC   CORELEN(3,CVTPTR),@CF00322+1                        0196
*       COREADDR=FSC00PTR;          /* AND ADDRESS           @Y30LB51*/
         ST    @10,COREADDR(,CVTPTR)                               0197
*       CALL ISDAFREE(WORKPTR);     /* AND FREE IT.          @Y30LB51*/
         L     @10,@PC00001                                        0198
         ST    @10,@AL00001                                        0198
         L     @15,@CV00289                                        0198
         LA    @01,@AL00001                                        0198
         BALR  @14,@15                                             0198
*     END;                          /* Y30LB51                       */
*   ELSE                                                           0200
*     ;                             /* WORK AREA DOES NOT EXIST.   0200
*                                                            @Y30LB51*/
@RF00194 DS    0H                                                  0201
*   CFSC='00'X;                     /* SET 'DO NOT CALL' SWITCH.   0201
*                                                            @Y30LB51*/
         MVI   CFSC(LPARMPTR),X'00'                                0201
*   FSC00PTR=0;                     /* ZERO WORK AREA ADDRESS.     0202
*                                                            @Y30LB51*/
         SLR   @10,@10                                             0202
         ST    @10,FSC00PTR(,CVTPTR)                               0202
*   END FREECORE;                   /*                       @Y30LB51*/
@EL00007 DS    0H                                                  0203
@EF00007 DS    0H                                                  0203
@ER00007 L     @14,@SA00007                                        0203
         BR    @14                                                 0203
*   END ISDAFSC2                    /*                       @Y30LB51*/
*                                                                  0204
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ISDACVT )                                       */
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                       */
*/*%INCLUDE SYSLIB  (ISDAGHDR)                                       */
*/*%INCLUDE SYSLIB  (ISDAFSC5)                                       */
*                                                                  0204
*       ;                                                          0204
@DATA    DS    0H
@CH00105 DC    H'4'
@CH00119 DC    H'12'
@CH00172 DC    H'16'
@CH00313 DC    H'1000'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    1F
@SA00007 DS    0F
@SA00002 DS    0F
         DS    1F
@AL00001 DS    1A
ISDAFSC2 CSECT
         DS    0F
@CF00322 DC    F'84'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISDAFSC2 CSECT
         NOPR  ((@ENDDATD-@DATD)/161*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00288 DC    V(ISDAGET1)
@CV00289 DC    V(ISDAFREE)
@CV00287 DC    V(ISDAGET0)
         DS    0D
PATCH    DS    CL50
         ORG   PATCH
@NM00010 DC    50X'00'
         ORG   PATCH+50
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FSCRETCD EQU   @07
PRTPTR   EQU   @06
SUMPTR   EQU   @05
CHNPTR   EQU   @06
TBLPTR   EQU   @04
FSCWKPTR EQU   @03
LPARMPTR EQU   @04
CVTPTR   EQU   @02
RF       EQU   @15
ISDACVT  EQU   0
CVTPTRS0 EQU   ISDACVT
PARMPTR  EQU   CVTPTRS0+8
FSC00PTR EQU   CVTPTRS0+56
GET0CALL EQU   ISDACVT+100
SPNOLEN  EQU   GET0CALL
SPNO     EQU   SPNOLEN
CORELEN  EQU   SPNOLEN+1
COREADDR EQU   GET0CALL+4
HEXPCALL EQU   ISDACVT+108
PRT0CALL EQU   ISDACVT+120
OUTLINE  EQU   PRT0CALL
SDADATD  EQU   ISDACVT+256
PRTDATD  EQU   ISDACVT+416
ISDAPRMS EQU   0
CINPUT   EQU   ISDAPRMS
CSTART   EQU   ISDAPRMS+2
CEND     EQU   ISDAPRMS+6
CFSCONLY EQU   ISDAPRMS+13
CSSIDF   EQU   ISDAPRMS+17
CSERIAL  EQU   ISDAPRMS+21
CREPORTS EQU   ISDAPRMS+33
CFSC     EQU   CREPORTS+4
ISDAGHDR EQU   0
STARTPTR EQU   ISDAGHDR
GET0SPLN EQU   ISDAGHDR+8
LASTPTR  EQU   ISDAGHDR+16
FSCWORK  EQU   0
GET0PTR  EQU   FSCWORK
FSCPTR   EQU   FSCWORK+8
FREEPTR  EQU   FSCWORK+20
SUMTABLE EQU   FSCWORK+24
SUMSTART EQU   FSCWORK+28
CHAINTBL EQU   FSCWORK+32
PRINTTBL EQU   FSCWORK+36
TBLPTRSV EQU   FSCWORK+40
SSIDCT   EQU   FSCWORK+46
SSIDCTR  EQU   FSCWORK+48
TBLELMCT EQU   FSCWORK+50
I        EQU   FSCWORK+52
WORKFLGS EQU   FSCWORK+54
SSIDSAVE EQU   FSCWORK+66
SUMBUILD EQU   FSCWORK+78
DEVBYTES EQU   FSCWORK+82
FSCTBL   EQU   0
FSCSPTR  EQU   FSCTBL
FSCSSID  EQU   FSCTBL+4
FSCFSC   EQU   FSCTBL+8
FSCDT    EQU   FSCTBL+12
FSCDATE  EQU   FSCDT
FSCTIME  EQU   FSCDT+4
FSCCTR   EQU   FSCTBL+20
FSCSUM   EQU   FSCTBL+22
FSCPCT   EQU   FSCTBL+24
FSCFLAGS EQU   FSCTBL+26
INPRTTBL EQU   FSCFLAGS+1
FSCDEVS  EQU   FSCTBL+28
CHNTBL   EQU   0
CHNTPTR  EQU   CHNTBL
CHNSSIDF EQU   CHNTBL+4
FSCTPTR  EQU   CHNTBL+8
SUMTBL   EQU   0
SUMTPTR  EQU   SUMTBL
SUMSSID  EQU   SUMTBL+4
SUMTOTAL EQU   SUMTBL+6
SUMFPTR  EQU   SUMTBL+8
SUMSCTR  EQU   SUMTBL+12
SUMPCTR  EQU   SUMTBL+14
PRTTBL   EQU   0
PRTTPTR  EQU   PRTTBL
WORKPTR  EQU   0
*                                      START UNREFERENCED COMPONENTS
@NM00009 EQU   CHNTBL+6
CHNSSID  EQU   CHNSSIDF
SSIDFLGS EQU   CHNSSIDF
DEVHCTR  EQU   FSCDEVS+14
DEVGCTR  EQU   FSCDEVS+12
DEVFCTR  EQU   FSCDEVS+10
DEVECTR  EQU   FSCDEVS+8
DEVDCTR  EQU   FSCDEVS+6
DEVCCTR  EQU   FSCDEVS+4
DEVBCTR  EQU   FSCDEVS+2
DEVACTR  EQU   FSCDEVS
@NM00008 EQU   FSCFLAGS+1
FSCAPR   EQU   FSCFLAGS+1
FAKEFSC  EQU   FSCFLAGS+1
VIRTDASD EQU   FSCFLAGS+1
REALDASD EQU   FSCFLAGS+1
DASDFLAG EQU   FSCFLAGS
DAFLAG   EQU   FSCFLAGS
DIRFLAG  EQU   FSCFLAGS
CSFLAG   EQU   FSCFLAGS
DRDFLAG  EQU   FSCFLAGS
DRCFLAG  EQU   FSCFLAGS
SAFLAG   EQU   FSCFLAGS
MSCFLAG  EQU   FSCFLAGS
FSCHSEC  EQU   FSCTIME+3
FSCSEC   EQU   FSCTIME+2
FSCMIN   EQU   FSCTIME+1
FSCHR    EQU   FSCTIME
FSCDAY   EQU   FSCDATE+2
FSCYR    EQU   FSCDATE
CNTLUNIT EQU   FSCFSC+3
@NM00007 EQU   FSCFSC+2
FSCSYS   EQU   FSCFSC
@NM00006 EQU   FSCSSID+2
UNITCHAR EQU   FSCSSID+1
DEVCHAR  EQU   FSCSSID
DEVBYTEB EQU   DEVBYTES+1
DEVBYTEA EQU   DEVBYTES
LINECT   EQU   FSCWORK+80
FSCSAVE2 EQU   FSCWORK+74
FSCSAVE1 EQU   FSCWORK+70
FSCSYSSV EQU   FSCWORK+68
@NM00005 EQU   SSIDSAVE+1
SSIDDEV  EQU   SSIDSAVE
CUAFLAG  EQU   SSIDSAVE
LTYPE    EQU   FSCWORK+64
LFSCSYS  EQU   FSCWORK+62
LFSC     EQU   FSCWORK+58
LSSID    EQU   FSCWORK+56
ADDCORE  EQU   WORKFLGS+1
@NM00004 EQU   WORKFLGS+1
WORKAPR  EQU   WORKFLGS+1
FSCCOUNT EQU   WORKFLGS+1
FMT3ACC2 EQU   WORKFLGS+1
FMT3ACC1 EQU   WORKFLGS+1
DASDREC  EQU   WORKFLGS
DAREC    EQU   WORKFLGS
DIRREC   EQU   WORKFLGS
CSREC    EQU   WORKFLGS
DRDREC   EQU   WORKFLGS
DRCREC   EQU   WORKFLGS
SAREC    EQU   WORKFLGS
MSCREC   EQU   WORKFLGS
FSCTBLCT EQU   FSCWORK+44
SENSEPTR EQU   FSCWORK+16
LOGPTR   EQU   FSCWORK+12
PTRSAVE  EQU   FSCWORK+4
@NM00003 EQU   ISDAGHDR+26
BLOCKCNT EQU   ISDAGHDR+24
BLOCKID  EQU   ISDAGHDR+20
NEXTPTR  EQU   ISDAGHDR+12
GET0LEN  EQU   GET0SPLN+1
GET0SPNO EQU   GET0SPLN
ENDPTR   EQU   ISDAGHDR+4
CTRACE   EQU   ISDAPRMS+48
CGEN     EQU   ISDAPRMS+47
CDETAIL  EQU   ISDAPRMS+46
CPERIOD  EQU   ISDAPRMS+45
CPWR     EQU   CREPORTS+11
CAPRSUU  EQU   CREPORTS+10
CDRC     EQU   CREPORTS+9
CDAT     EQU   CREPORTS+8
CCSBCSF  EQU   CREPORTS+7
CDCKTLX  EQU   CREPORTS+6
CEQC     EQU   CREPORTS+5
CDHEDHU  EQU   CREPORTS+3
CSUM     EQU   CREPORTS+2
CPAD     EQU   CREPORTS+1
CDCS     EQU   CREPORTS
CSERNO   EQU   CSERIAL+4
@NM00002 EQU   CSERIAL+3
CIBM     EQU   CSERIAL
CRATIO   EQU   ISDAPRMS+19
CSSID    EQU   CSSIDF
@NM00001 EQU   CSSIDF
CFSC34   EQU   CFSCONLY+2
CFSC12   EQU   CFSCONLY
CTYPE    EQU   ISDAPRMS+11
CSUMMARY EQU   ISDAPRMS+10
CENDDAY  EQU   CEND+2
CENDYEAR EQU   CEND
CSTDAY   EQU   CSTART+2
CSTYEAR  EQU   CSTART
CHISTIN  EQU   CINPUT+1
CLOGIN   EQU   CINPUT
PRTSA001 EQU   PRTDATD
SDATEMPS EQU   SDADATD+136
SDASA002 EQU   SDADATD+76
SDAPC001 EQU   SDADATD+72
SDASA001 EQU   SDADATD
SDARPTID EQU   PRT0CALL+133
LINE     EQU   OUTLINE+1
ANSI     EQU   OUTLINE
DUMPIDNO EQU   HEXPCALL+8
DUMPLEN  EQU   HEXPCALL+4
DUMPADDR EQU   HEXPCALL
WORKCALL EQU   CVTPTRS0+96
GEN00PTR EQU   CVTPTRS0+92
CNFG0PTR EQU   CVTPTRS0+88
PWR00PTR EQU   CVTPTRS0+84
APR00PTR EQU   CVTPTRS0+80
DRC00PTR EQU   CVTPTRS0+76
DAT00PTR EQU   CVTPTRS0+72
CSB00PTR EQU   CVTPTRS0+68
DCK00PTR EQU   CVTPTRS0+64
EQC00PTR EQU   CVTPTRS0+60
DHE00PTR EQU   CVTPTRS0+52
SUM00PTR EQU   CVTPTRS0+48
PAD00PTR EQU   CVTPTRS0+44
DCS00PTR EQU   CVTPTRS0+40
LOG00PTR EQU   CVTPTRS0+36
HIST0PTR EQU   CVTPTRS0+32
PRT00PTR EQU   CVTPTRS0+28
GET00PTR EQU   CVTPTRS0+24
TYPE0PTR EQU   CVTPTRS0+20
PARM0PTR EQU   CVTPTRS0+16
SDA00PTR EQU   CVTPTRS0+12
SDATAPTR EQU   CVTPTRS0+4
DATAPTR  EQU   CVTPTRS0
*                                      END UNREFERENCED COMPONENTS
@RC00023 EQU   @RC00020
@RC00056 EQU   @EL00002
@RC00107 EQU   @EL00004
@RC00115 EQU   @EL00004
@RC00026 EQU   @RC00023
@RC00070 EQU   @RC00056
@RC00118 EQU   @RC00115
@ENDDATA EQU   *
         END   ISDAFSC2,(C'PLS2115',0603,75267)
