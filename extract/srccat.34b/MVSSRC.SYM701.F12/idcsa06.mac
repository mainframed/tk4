SA06     TITLE '**********  IDCSA06:  UMSSUNIT SYSTEM ADAPTER  *********
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCSA06  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCSA06   76.231'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @09,0                                               0002
@PSTART  LA    @10,4095(,@09)                                      0002
         LA    @12,4095(,@10)                                      0002
         USING @PSTART,@09                                         0002
         USING @PSTART+4095,@10                                    0002
         USING @PSTART+8190,@12                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*   OLDERID2=NEWERID2;                                             0307
         L     @08,@PC00001                                        0307
         L     @04,GDTTR2(,@08)                                    0307
         MVC   @TS00001(95),NEWERID2(@04)                          0307
         MVC   OLDERID2(95,@04),@TS00001                           0307
*   NEWID2='SA06';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@04),@CC02523                              0308
*   IF GDTDBG=NULLPTR THEN                                         0309
         L     @08,GDTDBG(,@08)                                    0309
         LTR   @08,@08                                             0309
         BZ    @RT00309                                            0309
*     ;                                                            0310
*   ELSE                                                           0311
*     CALL IDCDB010(GDTTBL,'SAIN'); /*                       #Y30LB37*/
         L     @08,@PC00001                                        0311
         ST    @08,@AL00001                                        0311
         LA    @04,@CC02620                                        0311
         ST    @04,@AL00001+4                                      0311
         MVI   @AL00001+4,X'80'                                    0311
         L     @15,GDTDBG(,@08)                                    0311
         LA    @01,@AL00001                                        0311
         BALR  @14,@15                                             0311
*   RETCODE=0;                      /* INITIALIZE RETURN CODE      0312
*                                                            #Y30LB37*/
@RT00309 SLR   @08,@08                                             0312
         STH   @08,RETCODE                                         0312
*   DDSTRU=ADDR(PRINTARG);          /* INIT UPRINT ARGLPTR   #Y30LB37*/
         LA    @08,PRINTARG                                        0313
         ST    @08,DDSTRU                                          0313
*   PRINTARG=''B;                   /* CLEAR PRINTARG BLOCK  #Y30LB37*/
         XC    PRINTARG(52),PRINTARG                               0314
*   UNITPTR=ADDR(UNITAREA);         /* INIT UNITABL PTR      #Y30LB37*/
         LA    @08,UNITAREA                                        0315
         ST    @08,UNITPTR                                         0315
*   UNITABL=''B;                    /* CLEAR UNITABL OUTPUT  #Y30LB37*/
         XC    UNITABL(11,@08),UNITABL(@08)                        0316
*   MNTSTATS=''B;                   /* CLEAR MOUNT STATUS    #Y30LB37*/
         XC    MNTSTATS(8),MNTSTATS                                0317
*   SA06SWS=''B;                    /* CLEAR PROGRAM SWITCHES      0318
*                                                            @YD00175*/
*                                                                  0318
         MVI   SA06SWS,X'00'                                       0318
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT THE ADDRESS OF THE CALLER'S ARGUMENT LIST INTO    #Y30LB37*/
*   /* ARGLPTR AND MOVE THE CALLER'S REQUEST KEYWORD INTO    #Y30LB37*/
*   /* THE FIRST 8 BYTES OF THE ARGUMENT LIST AS A HEADER.   #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0319
*   ARGLPTR=ADDR(ARGLIST);          /* INIT ARGLIST PTR      #Y30LB37*/
         L     @08,@PC00001+8                                      0319
         ST    @08,ARGLPTR                                         0319
*   ARGNAME=REQUEST;                /* MOVE IN REQUEST       #Y30LB37*/
         L     @04,@PC00001+4                                      0320
         MVC   ARGNAME(8,@08),REQUEST(@04)                         0320
*                                                                  0321
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF A USYSINFO MACRO SHOULD BE ISSUED        #Y30LB37*/
*   /* BY INTERROGATING THE UCB POINTER OF THE ARGLIST.      #Y30LB37*/
*   /* IF ZEROS ISSUE USYSINFO TO GET UCB POINTER AND PUT    #Y30LB37*/
*   /* THE UCB ADDRESS INTO THE CALLER'S UCB ADDRESS AREA.   #Y30LB37*/
*   /* IF THE REQUEST IS CHECK AND NO FLAGS ARE SET THEN     #Y30LB37*/
*   /* SET AN INVALID REQUEST TO CAUSE A UABORT IN THE NEXT  #Y30LB37*/
*   /* STEP WHERE THE REQUEST IS CHECKED TO BE VALID.        #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0321
*   IF REQUEST=MOUNT×REQUEST=DEMOUNT THEN                          0321
         CLC   REQUEST(8,@04),MOUNT                                0321
         BE    @RT00321                                            0321
         CLC   REQUEST(8,@04),DEMOUNT                              0321
         BNE   @RF00321                                            0321
@RT00321 DS    0H                                                  0322
*     DO;                           /*                       #Y30LB37*/
*       RFY                                                        0323
*         MDAGL BASED(ARGLPTR);     /*                       #Y30LB37*/
*       IF MDUCBADR=NULLPTR THEN                                   0324
         L     @08,ARGLPTR                                         0324
         L     @04,MDUCBPTR(,@08)                                  0324
         L     @04,MDUCBADR(,@04)                                  0324
         LTR   @04,@04                                             0324
         BNZ   @RF00324                                            0324
*         DO;                       /*                       #Y30LB37*/
*           CALL IDCSASI0(GDTTBL,UNIT,UNITPTR,MDDDNAME);/*   #Y30LB37*/
         L     @04,@PC00001                                        0326
         ST    @04,@AL00001                                        0326
         LA    @03,UNIT                                            0326
         ST    @03,@AL00001+4                                      0326
         LA    @03,UNITPTR                                         0326
         ST    @03,@AL00001+8                                      0326
         LA    @08,MDDDNAME(,@08)                                  0326
         ST    @08,@AL00001+12                                     0326
         MVI   @AL00001+12,X'80'                                   0326
         L     @15,GDTSFO(,@04)                                    0326
         LA    @01,@AL00001                                        0326
         BALR  @14,@15                                             0326
*           RESPECIFY                                              0327
*             RTNREG RSTD;                                         0327
*           TESTRC=RTNREG;                                         0328
         LR    TESTRC,RTNREG                                       0328
*           RESPECIFY                                              0329
*             RTNREG UNRSTD;        /*                       #Y30LB37*/
*           RETCODE=TESTRC;         /*                       #Y30LB37*/
         STH   TESTRC,RETCODE                                      0330
*           IF RETCODE=0 THEN                                      0331
         LH    @08,RETCODE                                         0331
         LTR   @08,@08                                             0331
         BNZ   @RF00331                                            0331
*             MDUCBADR=UNITUCB;     /*                       #Y30LB37*/
         L     @08,ARGLPTR                                         0332
         L     @08,MDUCBPTR(,@08)                                  0332
         L     @04,UNITPTR                                         0332
         L     @04,UNITUCB(,@04)                                   0332
         ST    @04,MDUCBADR(,@08)                                  0332
*         END;                      /*                       #Y30LB37*/
*     END;                          /*                       #Y30LB37*/
*   ELSE                                                           0335
*     IF REQUEST=CHECK THEN                                        0335
         B     @RC00321                                            0335
@RF00321 L     @08,@PC00001+4                                      0335
         CLC   REQUEST(8,@08),CHECK                                0335
         BNE   @RF00335                                            0335
*       DO;                         /*                       #Y30LB37*/
*         RFY                                                      0337
*           CKAGL BASED(ARGLPTR);   /*                       #Y30LB37*/
*         IF CKRETTYP=OFF&CKTESTVT=OFF&CKDMTABL=OFF THEN           0338
         L     @08,ARGLPTR                                         0338
         TM    CKRETTYP(@08),B'11100000'                           0338
         BNZ   @RF00338                                            0338
*           CKHEAD=CHKERROR;        /*                       #Y30LB37*/
         MVC   CKHEAD(8,@08),CHKERROR                              0339
*         IF CKUCBADR=NULLPTR THEN                                 0340
@RF00338 L     @08,ARGLPTR                                         0340
         L     @04,CKUCBPTR(,@08)                                  0340
         L     @04,CKUCBADR(,@04)                                  0340
         LTR   @04,@04                                             0340
         BNZ   @RF00340                                            0340
*           DO;                     /*                       #Y30LB37*/
*             CALL IDCSASI0(GDTTBL,UNIT,UNITPTR,CKDDNAME);/* #Y30LB37*/
         L     @04,@PC00001                                        0342
         ST    @04,@AL00001                                        0342
         LA    @03,UNIT                                            0342
         ST    @03,@AL00001+4                                      0342
         LA    @03,UNITPTR                                         0342
         ST    @03,@AL00001+8                                      0342
         LA    @08,CKDDNAME(,@08)                                  0342
         ST    @08,@AL00001+12                                     0342
         MVI   @AL00001+12,X'80'                                   0342
         L     @15,GDTSFO(,@04)                                    0342
         LA    @01,@AL00001                                        0342
         BALR  @14,@15                                             0342
*             RESPECIFY                                            0343
*               RTNREG RSTD;                                       0343
*             TESTRC=RTNREG;                                       0344
         LR    TESTRC,RTNREG                                       0344
*             RESPECIFY                                            0345
*               RTNREG UNRSTD;      /*                       #Y30LB37*/
*             RETCODE=TESTRC;       /*                       #Y30LB37*/
         STH   TESTRC,RETCODE                                      0346
*             IF RETCODE=0 THEN                                    0347
         LH    @08,RETCODE                                         0347
         LTR   @08,@08                                             0347
         BNZ   @RF00347                                            0347
*               CKUCBADR=UNITUCB;   /*                       #Y30LB37*/
         L     @08,ARGLPTR                                         0348
         L     @08,CKUCBPTR(,@08)                                  0348
         L     @04,UNITPTR                                         0348
         L     @04,UNITUCB(,@04)                                   0348
         ST    @04,CKUCBADR(,@08)                                  0348
*           END;                    /*                       #Y30LB37*/
*       END;                        /*                       #Y30LB37*/
*                                                                  0351
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF A USYSINFO MACRO SHOULD BE ISSUED        @YD00175*/
*   /* BY INTERROGATING THE UCB POINTER OF THE EXCLAGL.      @YD00175*/
*   /* IF ZEROS ISSUE USYSINFO TO GET UCB POINTER AND PUT    @YD00175*/
*   /* THE UCB ADDRESS INTO THE CALLER'S UCB ADDRESS AREA.   @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0351
*     ELSE                                                         0351
*       IF REQUEST=CHANGEX THEN                                    0351
         B     @RC00335                                            0351
@RF00335 L     @08,@PC00001+4                                      0351
         CLC   REQUEST(8,@08),CHANGEX                              0351
         BNE   @RF00351                                            0351
*         DO;                       /*                       @YD00175*/
*           RFY                                                    0353
*             EXCLAGL BASED(ARGLPTR);/*                      @YD00175*/
*           IF EXUCBADR=NULLPTR THEN                               0354
         L     @08,ARGLPTR                                         0354
         L     @04,EXCLUCBP(,@08)                                  0354
         L     @04,EXUCBADR(,@04)                                  0354
         LTR   @04,@04                                             0354
         BNZ   @RF00354                                            0354
*             DO;                   /*                       @YD00175*/
*               CALL IDCSASI0(GDTTBL,UNIT,UNITPTR,EXDDNAME);/*     0356
*                                                            @YD00175*/
         L     @04,@PC00001                                        0356
         ST    @04,@AL00001                                        0356
         LA    @03,UNIT                                            0356
         ST    @03,@AL00001+4                                      0356
         LA    @03,UNITPTR                                         0356
         ST    @03,@AL00001+8                                      0356
         L     @08,EXCLDDP(,@08)                                   0356
         ST    @08,@AL00001+12                                     0356
         MVI   @AL00001+12,X'80'                                   0356
         L     @15,GDTSFO(,@04)                                    0356
         LA    @01,@AL00001                                        0356
         BALR  @14,@15                                             0356
*               RESPECIFY                                          0357
*                 RTNREG RSTD;                                     0357
*               TESTRC=RTNREG;                                     0358
         LR    TESTRC,RTNREG                                       0358
*               RESPECIFY                                          0359
*                 RTNREG UNRSTD;    /*                       @YD00175*/
*               RETCODE=TESTRC;     /*                       @YD00175*/
         STH   TESTRC,RETCODE                                      0360
*               IF RETCODE=0 THEN                                  0361
         LH    @08,RETCODE                                         0361
         LTR   @08,@08                                             0361
         BNZ   @RF00361                                            0361
*                 EXUCBADR=UNITUCB; /*                       @YD00175*/
         L     @08,ARGLPTR                                         0362
         L     @08,EXCLUCBP(,@08)                                  0362
         L     @04,UNITPTR                                         0362
         L     @04,UNITUCB(,@04)                                   0362
         ST    @04,EXUCBADR(,@08)                                  0362
*             END;                  /*                       @YD00175*/
@RF00361 DS    0H                                                  0364
*         END;                      /*                       @YD00175*/
@RF00354 DS    0H                                                  0365
*                                                                  0365
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE REQUEST PASSED BY THE CALLER AND CALL THE   #Y30LB37*/
*   /* APPROPRIATE ROUTINE TO PROCESS THE REQUEST OR UABORT  #Y30LB37*/
*   /* IF AN INVALID REQUEST OR CKECK FLAGS NOT SPECIFIED.   #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0365
*   IF RETCODE=0 THEN               /* WAS USYSINFO GOOD - 0 #Y30LB37*/
@RF00351 DS    0H                                                  0365
@RC00335 DS    0H                                                  0365
@RC00321 LH    @08,RETCODE                                         0365
         LTR   @08,@08                                             0365
         BNZ   @RF00365                                            0365
*     DO;                           /*                       #Y30LB37*/
*       IF REQUEST=CHECK&CKHEAD^=CHKERROR THEN                     0367
         L     @08,@PC00001+4                                      0367
         CLC   REQUEST(8,@08),CHECK                                0367
         BNE   @RF00367                                            0367
         L     @08,ARGLPTR                                         0367
         CLC   CKHEAD(8,@08),CHKERROR                              0367
         BE    @RF00367                                            0367
*         CALL UCBCHECK(ARGLPTR);   /*                       #Y30LB37*/
         LA    @08,ARGLPTR                                         0368
         ST    @08,@AL00001                                        0368
         LA    @01,@AL00001                                        0368
         BAL   @14,UCBCHECK                                        0368
*       ELSE                                                       0369
*         IF REQUEST=POSTUCB THEN                                  0369
         B     @RC00367                                            0369
@RF00367 L     @08,@PC00001+4                                      0369
         CLC   REQUEST(8,@08),POSTUCB                              0369
         BNE   @RF00369                                            0369
*           CALL UCBPOST(POST,ARGLPTR);/*                    #Y30LB37*/
         LA    @08,POST                                            0370
         ST    @08,@AL00001                                        0370
         LA    @08,ARGLPTR                                         0370
         ST    @08,@AL00001+4                                      0370
         LA    @01,@AL00001                                        0370
         BAL   @14,UCBPOST                                         0370
*         ELSE                                                     0371
*           IF REQUEST=MOUNT×REQUEST=DEMOUNT THEN                  0371
         B     @RC00369                                            0371
@RF00369 L     @08,@PC00001+4                                      0371
         CLC   REQUEST(8,@08),MOUNT                                0371
         BE    @RT00371                                            0371
         CLC   REQUEST(8,@08),DEMOUNT                              0371
         BNE   @RF00371                                            0371
@RT00371 DS    0H                                                  0372
*             CALL MDSETUP(ARGLPTR);/*                       #Y30LB37*/
         LA    @08,ARGLPTR                                         0372
         ST    @08,@AL00001                                        0372
         LA    @01,@AL00001                                        0372
         BAL   @14,MDSETUP                                         0372
*           ELSE                                                   0373
*             IF REQUEST=SELECTX THEN                              0373
         B     @RC00371                                            0373
@RF00371 L     @08,@PC00001+4                                      0373
         CLC   REQUEST(8,@08),SELECTX                              0373
         BNE   @RF00373                                            0373
*               CALL FINDEXCL(ARGLPTR);/*                    @YD00175*/
         LA    @08,ARGLPTR                                         0374
         ST    @08,@AL00001                                        0374
         LA    @01,@AL00001                                        0374
         BAL   @14,FINDEXCL                                        0374
*             ELSE                                                 0375
*               IF REQUEST=CHANGEX THEN                            0375
         B     @RC00373                                            0375
@RF00373 L     @08,@PC00001+4                                      0375
         CLC   REQUEST(8,@08),CHANGEX                              0375
         BNE   @RF00375                                            0375
*                 CALL GETEXCL(ARGLPTR);/*                   @YD00175*/
         LA    @08,ARGLPTR                                         0376
         ST    @08,@AL00001                                        0376
         LA    @01,@AL00001                                        0376
         BAL   @14,GETEXCL                                         0376
*               ELSE                                               0377
*                 IF REQUEST=SELECTDD THEN                         0377
         B     @RC00375                                            0377
@RF00375 L     @08,@PC00001+4                                      0377
         CLC   REQUEST(8,@08),SELECTDD                             0377
         BNE   @RF00377                                            0377
*                   CALL SELECTD(ARGLPTR);/*                 @Z40LB37*/
         LA    @08,ARGLPTR                                         0378
         ST    @08,@AL00001                                        0378
         LA    @01,@AL00001                                        0378
         BAL   @14,SELECTD                                         0378
*                 ELSE                                             0379
*                   DO;                                            0379
         B     @RC00377                                            0379
@RF00377 DS    0H                                                  0380
*                     RESPECIFY                                    0380
*                      (REG13,                                     0380
*                       REG14,                                     0380
*                       REG15) RSTD;                               0380
*                     REG15=40;                                    0381
         LA    REG15,40                                            0381
*                     REG14=GDTABT;                                0382
         L     @08,@PC00001                                        0382
         L     REG14,GDTABT(,@08)                                  0382
*                     REG13=GDTABH;                                0383
         L     REG13,GDTABH(,@08)                                  0383
*                     GEN(BR    REG14);                            0384
         BR    REG14
*                     RESPECIFY                                    0385
*                      (REG13,                                     0385
*                       REG14,                                     0385
*                       REG15) UNRSTD;                             0385
*                   END;            /* ISSUE UABORT FOR BAD  @YD00175
*                                      ARGUMENT LIST         #Y30LB37*/
*       RESPECIFY                                                  0387
*         RTNREG RSTD;                                             0387
@RC00377 DS    0H                                                  0387
@RC00375 DS    0H                                                  0387
@RC00373 DS    0H                                                  0387
@RC00371 DS    0H                                                  0387
@RC00369 DS    0H                                                  0387
@RC00367 DS    0H                                                  0388
*       TESTRC=RTNREG;                                             0388
         LR    TESTRC,RTNREG                                       0388
*       RESPECIFY                                                  0389
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*       IF TESTRC^=LASTCC00 THEN                                   0390
         LTR   TESTRC,TESTRC                                       0390
         BZ    @RF00390                                            0390
*         RETCODE=TESTRC;           /*                       #Y30LB37*/
         STH   TESTRC,RETCODE                                      0391
*     END;                          /*                       #Y30LB37*/
@RF00390 DS    0H                                                  0393
*                                                                  0393
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE CALLER OF THIS SYSTEM ADAPTER           #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0393
*   IF GDTDBG=NULLPTR THEN                                         0393
@RF00365 L     @08,@PC00001                                        0393
         L     @08,GDTDBG(,@08)                                    0393
         LTR   @08,@08                                             0393
         BZ    @RT00393                                            0393
*     ;                                                            0394
*   ELSE                                                           0395
*     CALL IDCDB010(GDTTBL,'SAEX'); /* UDUMP EXIT            #Y30LB37*/
         L     @08,@PC00001                                        0395
         ST    @08,@AL00001                                        0395
         LA    @15,@CC02632                                        0395
         ST    @15,@AL00001+4                                      0395
         MVI   @AL00001+4,X'80'                                    0395
         L     @15,GDTDBG(,@08)                                    0395
         LA    @01,@AL00001                                        0395
         BALR  @14,@15                                             0395
*   CALL IDCSAEP0(GDTTBL,MODID,RETCODE);/* RETURN            #Y30LB37*/
@RT00393 L     @08,@PC00001                                        0396
         ST    @08,@AL00001                                        0396
         LA    @15,MODID                                           0396
         ST    @15,@AL00001+4                                      0396
         LA    @15,RETCODE                                         0396
         ST    @15,@AL00001+8                                      0396
         MVI   @AL00001+8,X'80'                                    0396
         L     @15,GDTEPL(,@08)                                    0396
         LA    @01,@AL00001                                        0396
         BALR  @14,@15                                             0396
*                                                                  0397
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - UCBCHECK                               #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  FUNCTION - THIS PROCEDURE CHECKS THE UCB INFORMATION    #Y30LB37*/
*/*             TO DETERMINE IF THE UCB IS REAL OR VIRT-     #Y30LB37*/
*/*             UAL OR THE UCB IS DEMOUNTABLE.  UCBCHECK     @Z40LB37*/
*/*             ISSUES ERROR MESSAGES IDC3380I, IDC3383I     @Z40LB37*/
*/*             AND IDC3384I FOR NEGATIVE RESULTS.           @YD00175*/
*/*                                                          #Y30LB37*/
*/*  INPUT - THE INFORMATION RETRIEVED IF A USYSINFO WAS     #Y30LB37*/
*/*          ISSUED AND THE UCBCHECK ARGUMENT LIST WITH      #Y30LB37*/
*/*          THE UCB INFORMATION AND REQUEST FLAGS.          #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  OUTPUT- THE INFORMATION RETURNED IS EITHER A ZERO       #Y30LB37*/
*/*          OR FOUR ERROR CODE AND/OR RETURNED INFORMA-     #Y30LB37*/
*/*          TION ABOUT THE UCB ACCORDING TO THE INPUT       #Y30LB37*/
*/*          REQUEST FLAGS.  IF CKRETTYP IS ON THEN RETURN   #Y30LB37*/
*/*          EITHER 'REAL' OR 'VIRT' TO THE CALLER DEPENDING #Y30LB37*/
*/*          ON THE DEVICE TYPE.  RETURN CODES IN REG15 ARE: #Y30LB37*/
*/*          0 - SUCCESSFUL                                  #Y30LB37*/
*/*          4 - CHECK REQUESTED WAS UNSUCCESSFUL            #Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0397
*UCBCHECK:                                                         0397
*   PROCEDURE(CKAGLPTR);            /*                       #Y30LB37*/
*                                                                  0397
@EL00001 L     @13,4(,@13)                                         0397
@EF00001 L     @00,@SIZDATD                                        0397
         LR    @01,@11                                             0397
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0397
         BR    @14                                                 0397
UCBCHECK STM   @14,@12,@SA00002                                    0397
         MVC   @PC00002(4),0(@01)                                  0397
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR UCBCHECK                       #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0398
*   DCL                                                            0398
*     CHECKRC FIXED(15);            /* UCBCHECK RETURN CODE  #Y30LB37*/
*   DCL                                                            0399
*     CKAGLPTR PTR(31);             /* PTR TO CKAGL          #Y30LB37*/
*   DCL                                                            0400
*     CKRVAREA CHAR(4) BASED(CKDATYPE);/* REAL / VIRTUAL AREA      0400
*                                                            #Y30LB37*/
*   DCL                                                            0401
*     UNIT3330 CHAR(1) STATIC INIT('09'X);/* 3330 MODEL 1 DEVICE   0401
*                                                            #Y30LB37*/
*   DCL                                                            0402
*     1 CHECKSWS,                   /* TEST SWITCHES         #Y30LB37*/
*      2 NOTDASW BIT(1),            /* NOT DIRECT ACCESS     #Y30LB37*/
*      2 NOTVTSW BIT(1),            /* NOT VIRTUAL UNIT      #Y30LB37*/
*      2 NOTDMNT BIT(1),            /* NOT DEMOUNTABLE       @Z40LB37*/
*      2 * BIT(5);                  /* RESERVED              @Z40LB37*/
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE UCBPTR, SET CHECK SWITCHES TO ZEROS AFTER  #Y30LB37*/
*   /* ISSUING UTRACE MACRO                                  #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*   RFY                                                            0403
*     CKAGL BASED(CKAGLPTR);        /* BASE CKAGL ON PARM    #Y30LB37*/
*   OLDERID2=NEWERID2;                                             0404
         L     @08,@PC00001                                        0404
         L     @08,GDTTR2(,@08)                                    0404
         MVC   @TS00001(95),NEWERID2(@08)                          0404
         MVC   OLDERID2(95,@08),@TS00001                           0404
*   NEWID2='SACK';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@08),@CC02648                              0405
*   UCBPTR=CKUCBADR;                /* INITIALIZE UCB PTR    #Y30LB37*/
         L     @08,@PC00002                                        0406
         L     @08,CKAGLPTR(,@08)                                  0406
         L     @08,CKUCBPTR(,@08)                                  0406
         L     UCBPTR,CKUCBADR(,@08)                               0406
*   CHECKSWS=OFF;                   /* INITIALIZE CHECK SWS  #Y30LB37*/
         MVI   CHECKSWS,B'00000000'                                0407
*   CHECKRC=0;                      /* INITIALIZE RETURN CODE      0408
*                                                            #Y30LB37*/
*                                                                  0408
         SLR   CHECKRC,CHECKRC                                     0408
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE UCB FOR DIRECT ACCESS AND 3330 DEVICE TYPE.  #Y30LB37*/
*   /* SET THE NOTDASW ON IF EITHER THE UNIT IS NOT DIRECT   #Y30LB37*/
*   /* ACCESS OR IS NOT A 3330 DEVICE TYPE.                  #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0409
*   IF UCB3DACC=ON THEN                                            0409
         TM    UCB3DACC(UCBPTR),B'00100000'                        0409
         BNO   @RF00409                                            0409
*     IF UCBUNTYP^=UNIT3330 THEN                                   0410
         CLC   UCBUNTYP(1,UCBPTR),UNIT3330                         0410
         BE    @RF00410                                            0410
*       NOTDASW=ON;                 /*                       #Y30LB37*/
         OI    NOTDASW,B'10000000'                                 0411
*     ELSE                                                         0412
*       ;                           /*                       @Y30LB37*/
@RF00410 DS    0H                                                  0413
*   ELSE                                                           0413
*     NOTDASW=ON;                   /*                       @Y30LB37*/
*                                                                  0413
         B     @RC00409                                            0413
@RF00409 OI    NOTDASW,B'10000000'                                 0413
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE UCB FOR VIRTUAL (3330V) TYPE. SET THE NOT    @Y30LB37*/
*   /* VIRTUAL SWITCH ON IF EITHER THE UNIT IS NOT DIRECT    @Y30LB37*/
*   /* ACCESS OR NOT 3330 OR NOT A 3330V.                    @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0414
*   IF CKTESTVT=ON THEN                                            0414
@RC00409 L     @08,@PC00002                                        0414
         L     @08,CKAGLPTR(,@08)                                  0414
         TM    CKTESTVT(@08),B'10000000'                           0414
         BNO   @RF00414                                            0414
*     IF NOTDASW=ON THEN                                           0415
         TM    NOTDASW,B'10000000'                                 0415
         BNO   @RF00415                                            0415
*       NOTVTSW=ON;                 /*                       @Y30LB37*/
         OI    NOTVTSW,B'01000000'                                 0416
*     ELSE                                                         0417
*       IF UCBRVDEV=OFF THEN                                       0417
         B     @RC00415                                            0417
@RF00415 TM    UCBRVDEV(UCBPTR),B'00001000'                        0417
         BNZ   @RF00417                                            0417
*         NOTVTSW=ON;               /*                       @Y30LB37*/
         OI    NOTVTSW,B'01000000'                                 0418
*                                                                  0419
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR RETURN THE REAL OR VIRTUAL (3330V) TYPE.     @Y30LB37*/
*   /* IF REQUESTED, RETURN IN THE CALLER'S AREA, THE        @Y30LB37*/
*   /* CHARACTERS VIRT IF THE UNIT IS A 3330V OR THE         @Y30LB37*/
*   /* CHARACTERS REAL IF THE UNIT IS A 3330.                @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0419
*   IF CKRETTYP=ON THEN                                            0419
@RF00417 DS    0H                                                  0419
@RC00415 DS    0H                                                  0419
@RF00414 L     @08,@PC00002                                        0419
         L     @08,CKAGLPTR(,@08)                                  0419
         TM    CKRETTYP(@08),B'01000000'                           0419
         BNO   @RF00419                                            0419
*     IF UCBRVDEV=ON THEN                                          0420
         TM    UCBRVDEV(UCBPTR),B'00001000'                        0420
         BNO   @RF00420                                            0420
*       CKRVAREA='VIRT';            /*                       @Y30LB37*/
         L     @08,CKDATYPE(,@08)                                  0421
         MVC   CKRVAREA(4,@08),@CC02649                            0421
*     ELSE                                                         0422
*       CKRVAREA='REAL';            /*                       @Y30LB37*/
*                                                                  0422
         B     @RC00420                                            0422
@RF00420 L     @08,@PC00002                                        0422
         L     @08,CKAGLPTR(,@08)                                  0422
         L     @08,CKDATYPE(,@08)                                  0422
         MVC   CKRVAREA(4,@08),@CC02650                            0422
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF THE CKDMTABL FLAG IS ON. IF SO, CHECK         @Z40LB37*/
*   /* IF THE UCB IS DEMOUNTABLE. IF THE UCB IS NOT          @Z40LB37*/
*   /* DEMOUNTABLE THEN SET THE NOTDMNT FLAG ON, ELSE        @Z40LB37*/
*   /* SET THE NOTDMNT FLAG OFF.                             @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0423
*   IF CKDMTABL=ON THEN                                            0423
@RC00420 DS    0H                                                  0423
@RF00419 L     @08,@PC00002                                        0423
         L     @08,CKAGLPTR(,@08)                                  0423
         TM    CKDMTABL(@08),B'00100000'                           0423
         BNO   @RF00423                                            0423
*     DO;                           /*                       @Z40LB37*/
*                                                                  0424
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR A DEMOUNTABLE UCB.                      @Z40LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0425
*       IF UCBBSVL=ON&UCBPRES=OFF&UCBRESV=OFF&UCBDMCT=ZERODMC THEN 0425
         TM    UCBBSVL(UCBPTR),B'10000000'                         0425
         BNO   @RF00425                                            0425
         TM    UCBPRES(UCBPTR),B'00100100'                         0425
         BNZ   @RF00425                                            0425
         CLC   UCBDMCT(1,UCBPTR),ZERODMC                           0425
         BNE   @RF00425                                            0425
*         NOTDMNT=OFF;              /*                       @Z40LB37*/
         NI    NOTDMNT,B'11011111'                                 0426
*       ELSE                                                       0427
*         NOTDMNT=ON;               /*                       @Z40LB37*/
         B     @RC00425                                            0427
@RF00425 OI    NOTDMNT,B'00100000'                                 0427
*     END;                          /*                       @Z40LB37*/
@RC00425 DS    0H                                                  0429
*                                                                  0429
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF RETURN TYPE WAS SPECIFIED AND UCB WAS NOT     #Y30LB37*/
*   /* DIRECT ACCESS AND ISSUE ERROR MESSAGE IDC3384I.       #Y30LB37*/
*   /* SET RETURN CODE TO INDICATE FAILURE.                  #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0429
*   IF NOTDASW=ON&CKRETTYP=ON THEN                                 0429
@RF00423 TM    NOTDASW,B'10000000'                                 0429
         BNO   @RF00429                                            0429
         L     @08,@PC00002                                        0429
         L     @08,CKAGLPTR(,@08)                                  0429
         TM    CKRETTYP(@08),B'01000000'                           0429
         BNO   @RF00429                                            0429
*     DO;                           /*                       #Y30LB37*/
*       CHECKRC=LASTCC04;           /*                       #Y30LB37*/
         LA    CHECKRC,4                                           0431
*       DARGSMOD=MSGMODID;          /*                       #Y30LB37*/
         L     @03,DDSTRU                                          0432
         MVC   DARGSMOD(3,@03),@CC02595                            0432
*       DARGSENT=MSG3384I;          /*                       #Y30LB37*/
         MVI   DARGSENT(@03),X'04'                                 0433
*       DARGDBP=ADDR(CKDDNAME);     /*                       #Y30LB37*/
         LA    @08,CKDDNAME(,@08)                                  0434
         ST    @08,DARGDBP(,@03)                                   0434
*       DARGILP=LENGTH(CKDDNAME);   /*                       #Y30LB37*/
         MVC   DARGILP(2,@03),@CH00179                             0435
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB37*/
         L     @08,@PC00001                                        0436
         ST    @08,@AL00001                                        0436
         LA    @03,@CF00115                                        0436
         ST    @03,@AL00001+4                                      0436
         LA    @03,DDSTRU                                          0436
         ST    @03,@AL00001+8                                      0436
         MVI   @AL00001+8,X'80'                                    0436
         L     @15,GDTPRT(,@08)                                    0436
         LA    @01,@AL00001                                        0436
         BALR  @14,@15                                             0436
*     END;                          /*                       @Y30LB37*/
*                                                                  0437
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF CHECK VIRTUAL WAS SPECIFIED AND DEVICE IS     @Y30LB37*/
*   /* NOT VIRTUAL AND ISSUE ERROR MESSAGE IDC3383I.         @Y30LB37*/
*   /* SET RETURN CODE TO INDICATE FAILURE.                  @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0438
*   IF NOTVTSW=ON&CKTESTVT=ON THEN                                 0438
@RF00429 TM    NOTVTSW,B'01000000'                                 0438
         BNO   @RF00438                                            0438
         L     @08,@PC00002                                        0438
         L     @08,CKAGLPTR(,@08)                                  0438
         TM    CKTESTVT(@08),B'10000000'                           0438
         BNO   @RF00438                                            0438
*     DO;                           /*                       @Y30LB37*/
*       CHECKRC=LASTCC04;           /*                       @Y30LB37*/
         LA    CHECKRC,4                                           0440
*       DARGSMOD=MSGMODID;          /*                       @Y30LB37*/
         L     @03,DDSTRU                                          0441
         MVC   DARGSMOD(3,@03),@CC02595                            0441
*       DARGSENT=MSG3383I;          /*                       @Y30LB37*/
         MVI   DARGSENT(@03),X'03'                                 0442
*       DARGDBP=ADDR(CKDDNAME);     /*                       @Y30LB37*/
         LA    @08,CKDDNAME(,@08)                                  0443
         ST    @08,DARGDBP(,@03)                                   0443
*       DARGILP=LENGTH(CKDDNAME);   /*                       @Y30LB37*/
         MVC   DARGILP(2,@03),@CH00179                             0444
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB37*/
         L     @08,@PC00001                                        0445
         ST    @08,@AL00001                                        0445
         LA    @03,@CF00115                                        0445
         ST    @03,@AL00001+4                                      0445
         LA    @03,DDSTRU                                          0445
         ST    @03,@AL00001+8                                      0445
         MVI   @AL00001+8,X'80'                                    0445
         L     @15,GDTPRT(,@08)                                    0445
         LA    @01,@AL00001                                        0445
         BALR  @14,@15                                             0445
*     END;                          /*                       @Y30LB37*/
*                                                                  0447
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF CHECK DEMOUNTABLE WAS SPECIFIED AND DEVICE    @Z40LB37*/
*   /* IS NOT DEMOUNTABLE AND ISSUE ERROR MESSAGE IDC3380I.  @Z40LB37*/
*   /* SET RETURN CODE TO INDICATE FAILURE.                  @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0447
*   IF NOTDMNT=ON&CKDMTABL=ON THEN                                 0447
@RF00438 TM    NOTDMNT,B'00100000'                                 0447
         BNO   @RF00447                                            0447
         L     @08,@PC00002                                        0447
         L     @08,CKAGLPTR(,@08)                                  0447
         TM    CKDMTABL(@08),B'00100000'                           0447
         BNO   @RF00447                                            0447
*     DO;                           /*                       @Z40LB37*/
*       CHECKRC=LASTCC04;           /*                       @Z40LB37*/
         LA    CHECKRC,4                                           0449
*       DARGSMOD=MSGMODID;          /*                       @Z40LB37*/
         L     @03,DDSTRU                                          0450
         MVC   DARGSMOD(3,@03),@CC02595                            0450
*       DARGSENT=MSG3380I;          /*                       @Z40LB37*/
         MVI   DARGSENT(@03),X'0D'                                 0451
*       DARGDBP=ADDR(CKDDNAME);     /*                       @Z40LB37*/
         LA    @08,CKDDNAME(,@08)                                  0452
         ST    @08,DARGDBP(,@03)                                   0452
*       DARGILP=LENGTH(CKDDNAME);   /*                       @Z40LB37*/
         MVC   DARGILP(2,@03),@CH00179                             0453
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Z40LB37*/
         L     @08,@PC00001                                        0454
         ST    @08,@AL00001                                        0454
         LA    @03,@CF00115                                        0454
         ST    @03,@AL00001+4                                      0454
         LA    @03,DDSTRU                                          0454
         ST    @03,@AL00001+8                                      0454
         MVI   @AL00001+8,X'80'                                    0454
         L     @15,GDTPRT(,@08)                                    0454
         LA    @01,@AL00001                                        0454
         BALR  @14,@15                                             0454
*     END;                          /*                       @Z40LB37*/
*                                                                  0455
*   /*****************************************************************/
*   /*                                                               */
*   /* SET RETURN CODE AND RETURN TO THE MAIN PROCEDURE.     #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0456
*   RETURN CODE(CHECKRC);           /* RETURN TO MAIN ROUTINE      0456
*                                                            #Y30LB37*/
@RF00447 LR    @15,CHECKRC                                         0456
         L     @14,@SA00002                                        0456
         LM    @00,@12,@SA00002+8                                  0456
         BR    @14                                                 0456
*   END UCBCHECK;                   /* END OF UCBCHECK PROC  @Y30LB37*/
*                                                                  0458
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - UCBPOST                                @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  FUNCTION - THIS ROUTINE WILL BUILD THE PARAMETER        @Y30LB37*/
*/*             LIST REQUIRED AND ISSUE SVC 82 (DASDR)       @Y30LB37*/
*/*             TO POST THE UCB WITH THE VOLUME LABEL        @Y30LB37*/
*/*             AND TTR TO THE VTOC. THIS ROUTINE ON A       @Y30LB37*/
*/*             CLEAR REQUEST WILL CLEAR THE VOLSER AND      @Y30LB37*/
*/*             TTR TO THE VTOC FROM THE UCB AND             @Y30LB37*/
*/*             PASS THE CLEARED INFORMATION BACK            @Y30LB37*/
*/*             TO THE CALLER FOR POSTING BACK THE UCB       @Y30LB37*/
*/*             AT END OF CALLERS JOB.  IF A DUPLICATE       @Y30LB37*/
*/*             VOLSER IS IN THE SYSTEM ISSUE MESSAGE        @Y30LB37*/
*/*             IDC2381I VIA UPRINT.                         @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  INPUT - INPUT INFORMATION TO THIS ROUTINE IS IN THE     @Y30LB37*/
*/*          FORM OF A PUAGL ARGUMENT LIST WITH THE UCB      @Y30LB37*/
*/*          INFORMATION TO POST THE VOLUME LABEL AND THE    @Y30LB37*/
*/*          TTR INTO THE UCB.  ALSO KEYWORD OF EITHER       @Y30LB37*/
*/*          'POST' OR 'CLEAR'.                              @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  OUTPUT- IF THE REQUEST IS A POST REQUEST THE            @Y30LB37*/
*/*          CLEARED INFORMATION IS RETURNED IN AREAS        @Y30LB37*/
*/*          POINTED TO OUT OF THE PULABELP AND PUTTRPTR     @Y30LB37*/
*/*          FIELDS OF THE PUAGL.  RETURN CODES IN           @Y30LB37*/
*/*          REGISTER 15 ARE:                                @Y30LB37*/
*/*          0 - SUCCESSFUL                                  @Y30LB37*/
*/*          4 - DUPLICATE VOLUME SERIAL IN SYSTEM ON A      @Y30LB37*/
*/*              POST REQUEST                                @Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0458
*UCBPOST:                                                          0458
*   PROCEDURE(COMMAND,PUAGLPTR);    /*                       @Y30LB37*/
UCBPOST  STM   @14,@12,@SA00003                                    0458
         MVC   @PC00003(8),0(@01)                                  0458
*                                                                  0459
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR UCBPOST                        @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0459
*   DCL                                                            0459
*     UPOSTRC FIXED(15);            /* UCBPOST RETURN CODE   @Y30LB37*/
*   DCL                                                            0460
*     COMMAND CHAR(8);              /* POST OR CLEAR COMMAND @Y30LB37*/
*   DCL                                                            0461
*     PUAGLPTR PTR(31);             /* PTR TO PUAGL          @Y30LB37*/
*   DCL                                                            0462
*     PURETVOL CHAR(6) BASED(PULABELP);/* RETURNED VOLSER    @Y30LB37*/
*   DCL                                                            0463
*     PURETTTR CHAR(4) BASED(PUTTRPTR);/* RETURNED TTR VTOC  @Y30LB37*/
*   DCL                                                            0464
*     CLEARCD BIT(8) STATIC INIT('22'X);/* CLEAR OPERATION   @Y30LB37*/
*   DCL                                                            0465
*     POSTCD BIT(8) STATIC INIT('23'X);/* POST OPERATION     @Y30LB37*/
*   DCL                                                            0466
*     1 RETAREA BDY(WORD),          /* RETURN AREA FOR SVC82 @Y30LB37*/
*      2 RETVOLSR CHAR(6),          /* RETURNED VOLSER       @Y30LB37*/
*      2 RETTTR CHAR(4);            /* RETURNED TTR TO VTOC  @Y30LB37*/
*   DCL                                                            0467
*     SV82CORE CHAR(LENGTH(SV82LIST))/* SVC 82 ARGUMENT LIST @Y30LB37*/
*         BDY(WORD);                /* GETMAINED CORE        @Y30LB37*/
*                                                                  0468
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY PUAGL BASED ON PARAMETER BEFORE             @Y30LB37*/
*   /* ISSUING UTRACE MACRO AND RESPECIFY SV82LIST.          @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0468
*   RFY                                                            0468
*     PUAGL BASED(PUAGLPTR);        /*                       @Y30LB37*/
*   RFY                                                            0469
*     SV82LIST BASED(ADDR(SV82CORE));/*                      @Y30LB37*/
*   OLDERID2=NEWERID2;                                             0470
         L     @08,@PC00001                                        0470
         L     @08,GDTTR2(,@08)                                    0470
         MVC   @TS00001(95),NEWERID2(@08)                          0470
         MVC   OLDERID2(95,@08),@TS00001                           0470
*   NEWID2='SAPU';                  /*                       @Y30LB37*/
         MVC   NEWID2(4,@08),@CC02672                              0471
*   UPOSTRC=0;                      /* INITIALIZE RETURN CODE      0472
*                                                            @Y30LB37*/
*                                                                  0472
         SLR   @08,@08                                             0472
         LR    UPOSTRC,@08                                         0472
*   /*****************************************************************/
*   /*                                                               */
*   /* IF COMMAND IS TO CLEAR THE UCB THEN SET UP THE SVC    @Y30LB37*/
*   /* 82 PARAMETER LIST AND ISSUE SVC 82 TO CLEAR THE       @Y30LB37*/
*   /* UCB. RETURN THE VOLUME SERIAL NUMBER AND THE TTR TO   @Y30LB37*/
*   /* THE VTOC CLEARED FROM THE UCB TO THE CALLER.          @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0473
*   IF COMMAND=CLEAR THEN                                          0473
         L     @05,@PC00003                                        0473
         CLC   COMMAND(8,@05),CLEAR                                0473
         BNE   @RF00473                                            0473
*     DO;                           /*                       @Y30LB37*/
*       SV82CODE=CLEARCD;           /*                       @Y30LB37*/
         LA    @05,SV82CORE                                        0475
         MVC   SV82CODE(1,@05),CLEARCD                             0475
*       SV82UCBP=PUUCBADR;          /*                       @Y30LB37*/
         L     @15,@PC00003+4                                      0476
         L     @01,PUAGLPTR(,@15)                                  0476
         L     @01,PUUCBPTR(,@01)                                  0476
         MVC   SV82UCBP(3,@05),PUUCBADR+1(@01)                     0476
*       SV82VOLP=NULLPTR;           /*                       @Y30LB37*/
         ST    @08,SV82VOLP(,@05)                                  0477
*       SV82TTRP=NULLPTR;           /*                       @Y30LB37*/
         ST    @08,SV82TTRP(,@05)                                  0478
*       SV82WRKP=ADDR(RETAREA);     /*                       @Y30LB37*/
         LA    @08,RETAREA                                         0479
         ST    @08,SV82WRKP(,@05)                                  0479
*       RFY                                                        0480
*         REG1 RESTRICTED;          /*                       @Y30LB37*/
*       REG1=ADDR(SV82LIST);        /*                       @Y30LB37*/
         LR    REG1,@05                                            0481
*       RFY                                                        0482
*         REG1 UNRESTRICTED;        /*                       @Y30LB37*/
*L82SVC1:                                                          0483
*       SVC(82);                    /*                       @Y30LB37*/
L82SVC1  SVC   82                                                  0483
*       PURETTTR=RETTTR;            /*                       @Y30LB37*/
         L     @08,@PC00003+4                                      0484
         L     @08,PUAGLPTR(,@08)                                  0484
         L     @05,PUTTRPTR(,@08)                                  0484
         MVC   PURETTTR(4,@05),RETTTR                              0484
*       PURETVOL=RETVOLSR;          /*                       @Y30LB37*/
         L     @08,PULABELP(,@08)                                  0485
         MVC   PURETVOL(6,@08),RETVOLSR                            0485
*     END;                          /*                       @Y30LB37*/
*                                                                  0487
*   /*****************************************************************/
*   /*                                                               */
*   /* IF COMMAND IS TO POST THE UCB AND THE RETURN INFORM-  @Y30LB37*/
*   /* ATION TO BE POSTED IS NOT ZEROS THEN SET UP THE SVC   @Y30LB37*/
*   /* 82 PARAMETER LIST AND ISSUE SVC 82 TO POST THE        @Y30LB37*/
*   /* UCB WITH THE CALLER'S INFORMATION FROM THE PUAGL.     @Y30LB37*/
*   /* POSTING ZERO INFORMATION IS NOT CONSIDERED AN ERROR   @Y30LB37*/
*   /* BECAUSE DURING A MOUNT WITH THE CLEAR UCB FUNCTION    @Y30LB37*/
*   /* COULD HAVE CLEARED ZEROS FROM THE REAL UCB, WHICH AT  @Y30LB37*/
*   /* AT THIS TIME IS POSTING BACK THAT INFORMATION.        @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*   IF COMMAND=POST&PURETVOL^=ZEROVOL THEN                         0487
@RF00473 L     @08,@PC00003                                        0487
         CLC   COMMAND(8,@08),POST                                 0487
         BNE   @RF00487                                            0487
         L     @08,@PC00003+4                                      0487
         L     @08,PUAGLPTR(,@08)                                  0487
         L     @05,PULABELP(,@08)                                  0487
         CLC   PURETVOL(6,@05),ZEROVOL                             0487
         BE    @RF00487                                            0487
*     DO;                           /*                       @Y30LB37*/
*       SV82CODE=POSTCD;            /*                       @Y30LB37*/
         LA    @04,SV82CORE                                        0489
         MVC   SV82CODE(1,@04),POSTCD                              0489
*       SV82UCBP=PUUCBADR;          /*                       @Y30LB37*/
         L     @01,PUUCBPTR(,@08)                                  0490
         MVC   SV82UCBP(3,@04),PUUCBADR+1(@01)                     0490
*       SV82VOLP=PULABELP;          /*                       @Y30LB37*/
         ST    @05,SV82VOLP(,@04)                                  0491
*       SV82TTRP=PUTTRPTR;          /*                       @Y30LB37*/
         L     @08,PUTTRPTR(,@08)                                  0492
         ST    @08,SV82TTRP(,@04)                                  0492
*       SV82WRKP=NULLPTR;           /*                       @Y30LB37*/
         SLR   @08,@08                                             0493
         ST    @08,SV82WRKP(,@04)                                  0493
*       RFY                                                        0494
*         REG1 RESTRICTED;          /*                       @Y30LB37*/
*       REG1=ADDR(SV82LIST);        /*                       @Y30LB37*/
         LR    REG1,@04                                            0495
*       RFY                                                        0496
*         REG1 UNRESTRICTED;        /*                       @Y30LB37*/
*L82SVC2:                                                          0497
*       SVC(82);                    /*                       @Y30LB37*/
L82SVC2  SVC   82                                                  0497
*       RESPECIFY                                                  0498
*         RTNREG RSTD;                                             0498
*       TESTRC=RTNREG;                                             0499
         LR    TESTRC,RTNREG                                       0499
*       RESPECIFY                                                  0500
*         RTNREG UNRSTD;            /*                       @Y30LB37*/
*       IF TESTRC=0 THEN                                           0501
         LTR   TESTRC,TESTRC                                       0501
         BNZ   @RF00501                                            0501
*         UPOSTRC=TESTRC;           /*                       @Y30LB37*/
         LR    UPOSTRC,TESTRC                                      0502
*       ELSE                                                       0503
*         UPOSTRC=4;                /*                       @Y30LB37*/
         B     @RC00501                                            0503
@RF00501 LA    UPOSTRC,4                                           0503
*     END;                          /*                       @Y30LB37*/
@RC00501 DS    0H                                                  0505
*                                                                  0505
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE POST UCB FAILED, SET UP AND ISSUE THE          @Y30LB37*/
*   /* UPRINT MACRO AND ISSUE ERROR MESSAGE IDC2381I, TO     @Y30LB37*/
*   /* INDICATE A DUPLICATE VOLSER WAS FOUND. SET RETURN     @Y30LB37*/
*   /* CODE TO INDICATE THERE WAS A FAILURE.                 @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0505
*   IF UPOSTRC^=0 THEN                                             0505
@RF00487 LTR   UPOSTRC,UPOSTRC                                     0505
         BZ    @RF00505                                            0505
*     DO;                           /*                       @Y30LB37*/
*       DARGSMOD=MSGMODID;          /*                       @Y30LB37*/
         L     @08,DDSTRU                                          0507
         MVC   DARGSMOD(3,@08),@CC02595                            0507
*       DARGSENT=MSG2381I;          /*                       @Y30LB37*/
         MVI   DARGSENT(@08),X'01'                                 0508
*       DARGDBP=PULABELP;           /*                       @Y30LB37*/
         L     @05,@PC00003+4                                      0509
         L     @05,PUAGLPTR(,@05)                                  0509
         L     @05,PULABELP(,@05)                                  0509
         ST    @05,DARGDBP(,@08)                                   0509
*       DARGILP=VOLSERLN;           /*                       @Y30LB37*/
         MVC   DARGILP(2,@08),@CH00156                             0510
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB37*/
         L     @08,@PC00001                                        0511
         ST    @08,@AL00001                                        0511
         LA    @05,@CF00115                                        0511
         ST    @05,@AL00001+4                                      0511
         LA    @05,DDSTRU                                          0511
         ST    @05,@AL00001+8                                      0511
         MVI   @AL00001+8,X'80'                                    0511
         L     @15,GDTPRT(,@08)                                    0511
         LA    @01,@AL00001                                        0511
         BALR  @14,@15                                             0511
*     END;                          /*                       @Y30LB37*/
*                                                                  0512
*   /*****************************************************************/
*   /*                                                               */
*   /* SET RETURN CODE AND RETURN TO THE MAIN PROCEDURE.     @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0513
*   RETURN CODE(UPOSTRC);           /* RETURN TO MAIN ROUTINE      0513
*                                                            @Y30LB37*/
@RF00505 LR    @15,UPOSTRC                                         0513
         L     @14,@SA00003                                        0513
         LM    @00,@12,@SA00003+8                                  0513
         BR    @14                                                 0513
*   END UCBPOST;                    /* END OF UCBPOST PROC   @Y30LB37*/
*                                                                  0515
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - MDSETUP                                @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  FUNCTION - THIS IS THE PREPARATION ROUTINE FOR A        @Y30LB37*/
*/*             MOUNT OR A DEMOUNT REQUEST. THIS ROUTINE     @Y30LB37*/
*/*             ISSUES THE USTAE MACRO WHO IN TURN           @Y30LB37*/
*/*             INITIALIZES THE ESTAE(VS-2) OR STAE(VS-1)    @Y30LB37*/
*/*             PARAMETER LIST. MDSETUP ISSUES THE APPRO-    @Y30LB37*/
*/*             PRIATE CALL TO INVOKE EITHER MOUNTCTL OR     @Y30LB37*/
*/*             DEMNTVOL DEPENDANT UPON THE MDAGL INPUT.     @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        @Y30LB37*/
*/*          DETERMINE THE TYPE REQUEST. IF THE STAE PARM    @Y30LB37*/
*/*          LIST POINTER SAHSTA IS ZERO, THEN MDSETUP WILL  @Y30LB37*/
*/*          ISSUE THE USTAE MACRO.                          @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A COMPLETED MOUNT OR DE-      @Y30LB37*/
*/*          MOUNT REQUEST AND AN INITIALIZED PARAMETER      @Y30LB37*/
*/*          LIST FOR STAE/ESTAE RECOVERY.                   @Y30LB37*/
*/*          0 - SUCCESSFUL                                  @Y30LB37*/
*/*          4 - USTAE MACRO WAS UNSUCCESSFUL                @Y30LB37*/
*/*              MOUNT WAS UNSUCCESSFUL                      @Y30LB37*/
*/*              DEMOUNT WAS UNSUCCESSFUL                    @Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0515
*MDSETUP:                                                          0515
*   PROCEDURE(MDAGLPTR);            /*                       @Y30LB37*/
*                                                                  0515
MDSETUP  STM   @14,@12,@SA00004                                    0515
         MVC   @PC00004(4),0(@01)                                  0515
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR MDSETUP                        @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0516
*   DCL                                                            0516
*     MDSETRC FIXED(15);            /* MDSETUP RETURN CODE   @Y30LB37*/
*   DCL                                                            0517
*     MDAGLPTR PTR(31);             /* PTR TO MDAGL          @Y30LB37*/
*   DCL                                                            0518
*     RCUSFAIL FIXED(15) CONSTANT(8);/* USTAE FAILED RETCODE @Y30LB37*/
*                                                                  0519
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE MAIN CONTROLLING ROUTINE FOR ALL MOUNT    @Y30LB37*/
*   /* AND DEMOUNT FUNCTIONS. IT CONTROLS THE USTAE MACRO    @Y30LB37*/
*   /* RECOVERY BY SETTING AND CANCELLING IT AS NEEDED.      @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0519
*   RFY                                                            0519
*     MDAGL BASED(MDAGLPTR);        /*                       @Y30LB37*/
*   OLDERID2=NEWERID2;                                             0520
         L     @08,@PC00001                                        0520
         L     @03,GDTTR2(,@08)                                    0520
         MVC   @TS00001(95),NEWERID2(@03)                          0520
         MVC   OLDERID2(95,@03),@TS00001                           0520
*   NEWID2='SAPR';                  /*                       @Y30LB37*/
         MVC   NEWID2(4,@03),@CC02687                              0521
*   MDSETRC=0;                      /*                       @Y30LB37*/
         SLR   @03,@03                                             0522
         LR    MDSETRC,@03                                         0522
*   UCBPTR=MDUCBADR;                /*                       @Y30LB37*/
*                                                                  0523
         L     @15,@PC00004                                        0523
         L     @01,MDAGLPTR(,@15)                                  0523
         L     @01,MDUCBPTR(,@01)                                  0523
         L     UCBPTR,MDUCBADR(,@01)                               0523
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPUTE THE CURRENT TCB ADDRESS FOR ENQDEQ.           @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0524
*   TCBPTR=CURTCBP;                 /*                       @Y30LB37*/
         L     @01,CVTPTR                                          0524
         L     @01,TCBWDSP(,@01)                                   0524
         L     TCBPTR,CURTCBP(,@01)                                0524
*   TCBP=JSCBTCBP;                  /*                       @Y30LB37*/
*                                                                  0525
         L     @01,TCBJSCB(,TCBPTR)                                0525
         L     @15,JSCBTCBP(,@01)                                  0525
         ST    @15,TCBP                                            0525
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE USTAE MACRO AND SET MDSETRC IF UNSUCCESSFUL.    @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0526
*   IF SAHSTA=NULLPTR THEN                                         0526
         L     @01,GDTSAH(,@08)                                    0526
         C     @03,SAHSTA(,@01)                                    0526
         BNE   @RF00526                                            0526
*     DO;                           /*                       @Y30LB37*/
*       CALL IDCSAST0(GDTTBL,SET);  /* ISSUE USTAE TO RECOVER      0528
*                                                            @Y30LB37*/
         ST    @08,@AL00001                                        0528
         LA    @03,SET                                             0528
         ST    @03,@AL00001+4                                      0528
         MVI   @AL00001+4,X'80'                                    0528
         L     @15,GDTSTA(,@08)                                    0528
         LA    @01,@AL00001                                        0528
         BALR  @14,@15                                             0528
*       RESPECIFY                                                  0529
*         RTNREG RSTD;                                             0529
*       TESTRC=RTNREG;                                             0530
         LR    TESTRC,RTNREG                                       0530
*       RESPECIFY                                                  0531
*         RTNREG UNRSTD;            /* GET RETURN CODE       @Y30LB37*/
*       IF TESTRC^=0 THEN                                          0532
         LTR   TESTRC,TESTRC                                       0532
         BZ    @RF00532                                            0532
*         MDSETRC=RCUSFAIL;         /* SET RETURN CODE TO 8  @Y30LB37*/
         LA    MDSETRC,8                                           0533
*     END;                          /*                       @Y30LB37*/
@RF00532 DS    0H                                                  0535
*                                                                  0535
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL MOUNTCTL OR DEMNTVOL DEPENDING ON MDAGL HEADING  @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0535
*   IF MDSETRC=0 THEN                                              0535
@RF00526 LTR   MDSETRC,MDSETRC                                     0535
         BNZ   @RF00535                                            0535
*     DO;                           /*                       @Y30LB37*/
*       IF MDHEAD=MOUNT THEN                                       0537
         L     @08,@PC00004                                        0537
         L     @04,MDAGLPTR(,@08)                                  0537
         CLC   MDHEAD(8,@04),MOUNT                                 0537
         BNE   @RF00537                                            0537
*         CALL MOUNTCTL(MDAGLPTR);  /*                       @Y30LB37*/
         ST    @08,@AL00001                                        0538
         LA    @01,@AL00001                                        0538
         BAL   @14,MOUNTCTL                                        0538
*       ELSE                                                       0539
*         IF MDHEAD=DEMOUNT THEN                                   0539
         B     @RC00537                                            0539
@RF00537 L     @08,@PC00004                                        0539
         L     @04,MDAGLPTR(,@08)                                  0539
         CLC   MDHEAD(8,@04),DEMOUNT                               0539
         BNE   @RF00539                                            0539
*           CALL DEMNTVOL(MDAGLPTR);/*                       @Y30LB37*/
         ST    @08,@AL00001                                        0540
         LA    @01,@AL00001                                        0540
         BAL   @14,DEMNTVOL                                        0540
*       RESPECIFY                                                  0541
*         RTNREG RSTD;                                             0541
@RF00539 DS    0H                                                  0541
@RC00537 DS    0H                                                  0542
*       TESTRC=RTNREG;                                             0542
         LR    TESTRC,RTNREG                                       0542
*       RESPECIFY                                                  0543
*         RTNREG UNRSTD;            /*                       @Y30LB37*/
*       MDSETRC=TESTRC;             /*                       @Y30LB37*/
         LR    MDSETRC,TESTRC                                      0544
*     END;                          /*                       @Y30LB37*/
*                                                                  0545
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE USTAE MACRO TO CANCEL USTAE IF SUCCESSFUL.      @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0546
*   IF MDSETRC^=RCUSFAIL THEN                                      0546
@RF00535 C     MDSETRC,@CF00179                                    0546
         BE    @RF00546                                            0546
*     IF STACLEAR=OFF THEN                                         0547
         L     @08,@PC00001                                        0547
         L     @05,GDTSAH(,@08)                                    0547
         L     @05,SAHSTA(,@05)                                    0547
         TM    STACLEAR(@05),B'00001000'                           0547
         BNZ   @RF00547                                            0547
*       CALL IDCSAST0(GDTTBL,CANCEL);/* ISSUE USTAE TO CANCEL      0548
*                                                            @Y30LB37*/
         ST    @08,@AL00001                                        0548
         LA    @05,CANCEL                                          0548
         ST    @05,@AL00001+4                                      0548
         MVI   @AL00001+4,X'80'                                    0548
         L     @15,GDTSTA(,@08)                                    0548
         LA    @01,@AL00001                                        0548
         BALR  @14,@15                                             0548
*   IF MDSETRC=RCUSFAIL THEN                                       0549
@RF00547 DS    0H                                                  0549
@RF00546 C     MDSETRC,@CF00179                                    0549
         BNE   @RF00549                                            0549
*     MDSETRC=4;                    /*                       @Y30LB37*/
         LA    MDSETRC,4                                           0550
*   RETURN CODE(MDSETRC);           /* RETURN TO MAIN ROUTINE      0551
*                                                            @Y30LB37*/
@RF00549 LR    @15,MDSETRC                                         0551
         L     @14,@SA00004                                        0551
         LM    @00,@12,@SA00004+8                                  0551
         BR    @14                                                 0551
*   END MDSETUP;                    /* END OF MDSETUP TO MOUNT OR  0552
*                                      DEMOUNT PROCEDURE     @Y30LB37*/
*                                                                  0553
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - MOUNTCTL                               @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  FUNCTION - THIS IS THE MOUNT CONTROLLING ROUTINE FOR    @Y30LB37*/
*/*             THE MOUNTING OF A 3330V VIRTUAL VOLUME.      @Y30LB37*/
*/*             IT PERFORMS THE SETUP AND CHECK TO SEE IF    @Y30LB37*/
*/*             THE VOLUME IS ALREADY MOUNTED OR IF          @Y30LB37*/
*/*             ANOTHER VOLUME IS ALREADY MOUNTED AND        @Y30LB37*/
*/*             MUST BE DEMOUNTED FIRST.  MOUNTCTL USES      @Y30LB37*/
*/*             SUBORDINATE FUNCTIONS MOUNTVOL, DEMNTVOL     @Y30LB37*/
*/*             AND UCBPOST TO ACHIEVE THE MOUNTING 0F A     @Y30LB37*/
*/*             3330V VOLUME. IT ALSO CLEARS A UCB PRIOR     @Y30LB37*/
*/*             TO MOUNTING THE VIRTUAL VOLUME IF THE        @Y30LB37*/
*/*             CLEAR OPTION WAS SPECIFIED.                  @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        @Y30LB37*/
*/*          SET UP THE MOUNT REQUEST. THE UCB IS POINTED    @Y30LB37*/
*/*          TO OUT OF THE MDAGL AND IS USED TO CHECK THE    @Y30LB37*/
*/*          VOLUME SERIAL MOUNTED.                          @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A COMPLETED MOUNT REQUEST     @Y30LB37*/
*/*          AND A CLEARED UCB IF SPECIFIED WITH THE         @Y30LB37*/
*/*          CLEAR OPTION ALONG WITH THE MOUNT.   RETURN     @Y30LB37*/
*/*          CODES ARE AS FOLLOWS:                           @Y30LB37*/
*/*          0 - SUCCESSFUL                                  @Y30LB37*/
*/*          4 - MOUNT WAS UNSUCCESSFUL                      @Y30LB37*/
*/*            - DEMOUNT OF PREVIOUS VOLUME WAS UNSUCCESSFUL @Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0553
*MOUNTCTL:                                                         0553
*   PROCEDURE(MTAGLPTR);            /*                       @Y30LB37*/
*                                                                  0553
MOUNTCTL STM   @14,@12,@SA00005                                    0553
         MVC   @PC00005(4),0(@01)                                  0553
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR MOUNTCTL                       @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*   DCL                                                            0554
*     MTCTLRC FIXED(15);            /* MOUNTCTL RETURN CODE  @Y30LB37*/
*   DCL                                                            0555
*     MTAGLPTR PTR(31);             /* PTR TO MDAGL          @Y30LB37*/
*   DCL                                                            0556
*     MYAGLPTR PTR(31);             /* PTR TO SA6'S MDAGL    @Y30LB37*/
*   DCL                                                            0557
*     SA6MDAGL BDY(WORD)            /* SA6'S SKELETON        @Y30LB37*/
*         CHAR(LENGTH(MDAGL));      /* MDAGL ARGLIST         @Y30LB37*/
*   DCL                                                            0558
*     PUVOLRET CHAR(6) BASED(PULABELP);/* RETURNED VOLSER    @Y30LB37*/
*   DCL                                                            0559
*     PUTTRRET CHAR(4) BASED(PUTTRPTR);/* RETURNED TTR VTOC  @Y30LB37*/
*                                                                  0560
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY MDAGL BASED ON PARAMETER BEFORE             @Y30LB37*/
*   /* ISSUING UTRACE MACRO.                                 @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0560
*   RFY                                                            0560
*     MDAGL BASED(MTAGLPTR);        /*                       @Y30LB37*/
*   OLDERID2=NEWERID2;                                             0561
         L     @08,@PC00001                                        0561
         L     @08,GDTTR2(,@08)                                    0561
         MVC   @TS00001(95),NEWERID2(@08)                          0561
         MVC   OLDERID2(95,@08),@TS00001                           0561
*   NEWID2='SAMC';                  /*                       @Y30LB37*/
         MVC   NEWID2(4,@08),@CC02701                              0562
*   MTCTLRC=0;                      /*                       @Y30LB37*/
*                                                                  0563
         SLR   @08,@08                                             0563
         LR    MTCTLRC,@08                                         0563
*   /*****************************************************************/
*   /*                                                               */
*   /* THE UCB IS INTERROGATED TO DETERMINE IF THE UNIT IS   @Y30LB37*/
*   /* READY AND A VOLUME SERIAL NUMBER IS IN THE UCB,       @Y30LB37*/
*   /* INDICATING A VOLUME IS ALREADY MOUNTED ON THAT        @Y30LB37*/
*   /* UNIT. IF SO, THEN THE VOLUME SERIAL FIELD             @Y30LB37*/
*   /* (UCBVOLI) WILL BE COMPARED TO DETERMINE IF THE        @Y30LB37*/
*   /* VOLUME TO BE MOUNTED IS THE ONE MOUNTED. IF           @Y30LB37*/
*   /* A DIFFERENT SERIAL NUMBER, OTHER THAN ZEROS, THEN     @Y30LB37*/
*   /* BUILD A MDAGL AND CALL DEMNTVOL WITH THE INTERNALLY   @Y30LB37*/
*   /* BUILT SA6MDAGL. IF EQUAL THEN SET RETURN CODE 8 TO    @Y30LB37*/
*   /* INDICATE THE VOLUME DOES NOT NEED MOUNTING AGAIN.     @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0564
*   IF UCBNOTRD=OFF&UCBVOLI^=ZEROVOL THEN                          0564
         TM    UCBNOTRD(UCBPTR),B'01000000'                        0564
         BNZ   @RF00564                                            0564
         CLC   UCBVOLI(6,UCBPTR),ZEROVOL                           0564
         BE    @RF00564                                            0564
*     IF UCBVOLI^=MDLABEL THEN                                     0565
         L     @15,@PC00005                                        0565
         L     @15,MTAGLPTR(,@15)                                  0565
         CLC   UCBVOLI(6,UCBPTR),MDLABEL(@15)                      0565
         BE    @RF00565                                            0565
*       DO;                         /*                       @Y30LB37*/
*         SA6MDAGL=''B;             /*                       @Y30LB37*/
         XC    SA6MDAGL(37),SA6MDAGL                               0567
*         MYAGLPTR=ADDR(SA6MDAGL);  /*                       @Y30LB37*/
         LA    @14,SA6MDAGL                                        0568
         ST    @14,MYAGLPTR                                        0568
*         MYAGLPTR->MDHEAD=DEMOUNT; /*                       @Y30LB37*/
         MVC   MDHEAD(8,@14),DEMOUNT                               0569
*         MYAGLPTR->MDUCBPTR=MTAGLPTR->MDUCBPTR;/*           @Y30LB37*/
         L     @07,MDUCBPTR(,@15)                                  0570
         ST    @07,MDUCBPTR(,@14)                                  0570
*         MYAGLPTR->MDDDNAME=MTAGLPTR->MDDDNAME;/*           @Y30LB37*/
         MVC   MDDDNAME(8,@14),MDDDNAME(@15)                       0571
*         MYAGLPTR->MDPUAGL=NULLPTR;/*                       @Y30LB37*/
         ST    @08,MDPUAGL(,@14)                                   0572
*         MYAGLPTR->MDLABEL=UCBVOLI;/*                       @Y30LB37*/
         MVC   MDLABEL(6,@14),UCBVOLI(UCBPTR)                      0573
*         CALL DEMNTVOL(MYAGLPTR);  /*                       @Y30LB37*/
         LA    @08,MYAGLPTR                                        0574
         ST    @08,@AL00001                                        0574
         LA    @01,@AL00001                                        0574
         BAL   @14,DEMNTVOL                                        0574
*         RESPECIFY                                                0575
*           RTNREG RSTD;                                           0575
*         TESTRC=RTNREG;                                           0576
         LR    TESTRC,RTNREG                                       0576
*         RESPECIFY                                                0577
*           RTNREG UNRSTD;          /*                       @Y30LB37*/
*         IF TESTRC^=0 THEN                                        0578
         LTR   TESTRC,TESTRC                                       0578
         BZ    @RF00578                                            0578
*           MTCTLRC=RCDMFAIL;       /*                       @Y30LB37*/
         LA    MTCTLRC,16                                          0579
*       END;                        /*                       @Y30LB37*/
*     ELSE                                                         0581
*       MTCTLRC=RCMONTED;           /*                       @Y30LB37*/
         B     @RC00565                                            0581
@RF00565 LA    MTCTLRC,8                                           0581
*                                                                  0582
*   /*****************************************************************/
*   /*                                                               */
*   /* THE MOUNT FUNCTION WILL BE TERMINATED ABNORMALLY IF   @Y30LB37*/
*   /* A RETURN CODE OF 16 FROM DEMNTVOL. MESSAGE IDC2386I   @Y30LB37*/
*   /* WILL BE SENT TO SYSPRINT TO INDICATE THE UNIT COULD   @Y30LB37*/
*   /* NOT BE READIED FOR MOUNTING.                          @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0582
*   IF MTCTLRC=RCDMFAIL THEN                                       0582
@RC00565 DS    0H                                                  0582
@RF00564 C     MTCTLRC,@CF00473                                    0582
         BNE   @RF00582                                            0582
*     DO;                           /*                       @Y30LB37*/
*       DARGSMOD=MSGMODID;          /*                       @Y30LB37*/
         L     @08,DDSTRU                                          0584
         MVC   DARGSMOD(3,@08),@CC02595                            0584
*       DARGSENT=MSG2386I;          /*                       @Y30LB37*/
         MVI   DARGSENT(@08),X'06'                                 0585
*       DARGDBP=ADDR(MDDDNAME);     /*                       @Y30LB37*/
         L     @15,@PC00005                                        0586
         L     @01,MTAGLPTR(,@15)                                  0586
         LA    @15,MDDDNAME(,@01)                                  0586
         ST    @15,DARGDBP(,@08)                                   0586
*       DARGILP=LENGTH(MDDDNAME);   /*                       @Y30LB37*/
         MVC   DARGILP(2,@08),@CH00179                             0587
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB37*/
         L     @08,@PC00001                                        0588
         ST    @08,@AL00001                                        0588
         LA    @15,@CF00115                                        0588
         ST    @15,@AL00001+4                                      0588
         LA    @15,DDSTRU                                          0588
         ST    @15,@AL00001+8                                      0588
         MVI   @AL00001+8,X'80'                                    0588
         L     @15,GDTPRT(,@08)                                    0588
         LA    @01,@AL00001                                        0588
         BALR  @14,@15                                             0588
*     END;                          /*                       @Y30LB37*/
*                                                                  0589
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO FAILURE HAS OCCURRED AND THE CALLER REQUESTED   @Y30LB37*/
*   /* A UCB TO BE CLEARED PRIOR TO MOUNT AND THE MDCLEAR    @Y30LB37*/
*   /* FLAG IS ON, THEN CALL UCBPOST TO RETURN THE PRESENT   @Y30LB37*/
*   /* TTR AND THE VOLUME SERIAL, TO THE CALLER'S PRE-SET    @Y30LB37*/
*   /* PUAGL POINTED TO OUT OF THE MDPUAGL FIELD.            @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*   IF MTCTLRC^=RCDMFAIL&MDCLEAR=ON THEN                           0590
@RF00582 C     MTCTLRC,@CF00473                                    0590
         BE    @RF00590                                            0590
         L     @08,@PC00005                                        0590
         L     @08,MTAGLPTR(,@08)                                  0590
         TM    MDCLEAR(@08),B'01000000'                            0590
         BNO   @RF00590                                            0590
*     DO;                           /*                       @Y30LB37*/
*       RFY                                                        0592
*         PUAGL BASED(MDPUAGL);     /*                       @Y30LB37*/
*       CALL UCBPOST(CLEAR,MDPUAGL);/*                       @Y30LB37*/
         LA    @15,CLEAR                                           0593
         ST    @15,@AL00001                                        0593
         LA    @08,MDPUAGL(,@08)                                   0593
         ST    @08,@AL00001+4                                      0593
         LA    @01,@AL00001                                        0593
         BAL   @14,UCBPOST                                         0593
*       IF PUVOLRET^=ZEROVOL THEN                                  0594
         L     @08,@PC00005                                        0594
         L     @08,MTAGLPTR(,@08)                                  0594
         L     @08,MDPUAGL(,@08)                                   0594
         L     @15,PULABELP(,@08)                                  0594
         CLC   PUVOLRET(6,@15),ZEROVOL                             0594
         BE    @RF00594                                            0594
*         DO;                       /*                       @Y30LB37*/
*           STARUCB=PUUCBADR;       /* INITIALIZE REAL UCB   @Y30LB37*/
         L     @14,@PC00001                                        0596
         L     @01,GDTSAH(,@14)                                    0596
         L     @14,SAHSTA(,@01)                                    0596
         L     @01,PUUCBPTR(,@08)                                  0596
         L     @07,PUUCBADR(,@01)                                  0596
         ST    @07,STARUCB(,@14)                                   0596
*           STARVOL=PUVOLRET;       /* INIT RETURNED VOLSER  @Y30LB37*/
         MVC   STARVOL(6,@14),PUVOLRET(@15)                        0597
*           STARTTR=PUTTRRET;       /* INIT RETURNED TTR     @Y30LB37*/
         L     @08,PUTTRPTR(,@08)                                  0598
         MVC   STARTTR(4,@14),PUTTRRET(@08)                        0598
*           STACLEAR=ON;            /* TURN ON CLEARED FLAG  @Y30LB37*/
         OI    STACLEAR(@14),B'00001000'                           0599
*         END;                      /*                       @Y30LB37*/
*     END;                          /*                       @Y30LB37*/
@RF00594 DS    0H                                                  0602
*                                                                  0602
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE IS ZERO THEN CALL MOUNTVOL TO MOUNT    @Y30LB37*/
*   /* AND READ THE LABEL OF THE 3330V VOLUME. IF AN ERROR   @Y30LB37*/
*   /* OCCURRS FROM MOUNTVOL THEN PRINT MSG IDC2387I TO      @Y30LB37*/
*   /* SYSPRINT TO INDICATE THE VOL COULD NOT BE MOUNTED.    @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0602
*   IF MTCTLRC=0 THEN                                              0602
@RF00590 LTR   MTCTLRC,MTCTLRC                                     0602
         BNZ   @RF00602                                            0602
*     DO;                           /*                       @Y30LB37*/
*       CALL MOUNTVOL(MTAGLPTR);    /*                       @Y30LB37*/
         L     @08,@PC00005                                        0604
         ST    @08,@AL00001                                        0604
         LA    @01,@AL00001                                        0604
         BAL   @14,MOUNTVOL                                        0604
*       RESPECIFY                                                  0605
*         RTNREG RSTD;                                             0605
*       TESTRC=RTNREG;                                             0606
         LR    TESTRC,RTNREG                                       0606
*       RESPECIFY                                                  0607
*         RTNREG UNRSTD;            /*                       @Y30LB37*/
*       IF TESTRC^=0 THEN                                          0608
         LTR   TESTRC,TESTRC                                       0608
         BZ    @RF00608                                            0608
*         DO;                       /*                       @Y30LB37*/
*           MTCTLRC=TESTRC;         /*                       @Y30LB37*/
         LR    MTCTLRC,TESTRC                                      0610
*           DARGSMOD=MSGMODID;      /*                       @Y30LB37*/
         L     @08,DDSTRU                                          0611
         MVC   DARGSMOD(3,@08),@CC02595                            0611
*           DARGSENT=MSG2387I;      /*                       @Y30LB37*/
         MVI   DARGSENT(@08),X'07'                                 0612
*           DARGDBP=ADDR(MDLABEL);  /*                       @Y30LB37*/
         L     @15,@PC00005                                        0613
         L     @01,MTAGLPTR(,@15)                                  0613
         LA    @15,MDLABEL(,@01)                                   0613
         ST    @15,DARGDBP(,@08)                                   0613
*           DARGILP=VOLSERLN;       /*                       @Y30LB37*/
         MVC   DARGILP(2,@08),@CH00156                             0614
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Y30LB37*/
         L     @08,@PC00001                                        0615
         ST    @08,@AL00001                                        0615
         LA    @15,@CF00115                                        0615
         ST    @15,@AL00001+4                                      0615
         LA    @15,DDSTRU                                          0615
         ST    @15,@AL00001+8                                      0615
         MVI   @AL00001+8,X'80'                                    0615
         L     @15,GDTPRT(,@08)                                    0615
         LA    @01,@AL00001                                        0615
         BALR  @14,@15                                             0615
*         END;                      /*                       @Y30LB37*/
*     END;                          /*                       @Y30LB37*/
*                                                                  0617
@RF00608 DS    0H                                                  0618
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE IS FOUR THEN MOUNT FAILED AND THE      @Y30LB37*/
*   /* REAL UCB HAS TO BE POSTED BACK WITH THE CLEARED       @Y30LB37*/
*   /* INFORMATION. SET THE CLEAR SWITCH OFF IN STAEPARM.    @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0618
*   IF MTCTLRC=4&STACLEAR=ON THEN                                  0618
@RF00602 C     MTCTLRC,@CF00042                                    0618
         BNE   @RF00618                                            0618
         L     @08,@PC00001                                        0618
         L     @08,GDTSAH(,@08)                                    0618
         L     @08,SAHSTA(,@08)                                    0618
         TM    STACLEAR(@08),B'00001000'                           0618
         BNO   @RF00618                                            0618
*     DO;                           /*                       @Y30LB37*/
*       RFY                                                        0620
*         PUAGL BASED(MDPUAGL);     /*                       @Y30LB37*/
*       CALL UCBPOST(POST,MDPUAGL); /*                       @Y30LB37*/
         LA    @08,POST                                            0621
         ST    @08,@AL00001                                        0621
         L     @08,@PC00005                                        0621
         L     @08,MTAGLPTR(,@08)                                  0621
         LA    @08,MDPUAGL(,@08)                                   0621
         ST    @08,@AL00001+4                                      0621
         LA    @01,@AL00001                                        0621
         BAL   @14,UCBPOST                                         0621
*       STACLEAR=OFF;               /* TURN OFF CLEAR SW     @Y30LB37*/
         L     @08,@PC00001                                        0622
         L     @08,GDTSAH(,@08)                                    0622
         L     @08,SAHSTA(,@08)                                    0622
         NI    STACLEAR(@08),B'11110111'                           0622
*     END;                          /*                       @Y30LB37*/
*                                                                  0624
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE POST OF THE VIRTUAL UCB FAILED BUT MOUNT       @Y30LB37*/
*   /* WAS SUCCESSFUL (RETURN CODE 12), THEN SETUP A NEW     @Y30LB37*/
*   /* MDAGL TO DEMOUNT THE MOUNTED VOLUME. IF THE MDCLEAR   @Y30LB37*/
*   /* FLAG IS ON, THEN SET THE MDPOST FLAG ON AND USE THE   @Y30LB37*/
*   /* CALLER'S PUAGL TO CLEAR FOR THE POSTING BACK OF THE   @Y30LB37*/
*   /* CLEARED INFORMATION.                                  @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   IF MTCTLRC=RCNOPOST THEN                                       0624
@RF00618 C     MTCTLRC,@CF00037                                    0624
         BNE   @RF00624                                            0624
*     DO;                           /*                       @Y30LB37*/
*       MNTSTATS=MNTERROR;          /*                       @Y30LB37*/
         MVC   MNTSTATS(8),MNTERROR                                0626
*       SA6MDAGL=''B;               /*                       @Y30LB37*/
         XC    SA6MDAGL(37),SA6MDAGL                               0627
*       MYAGLPTR=ADDR(SA6MDAGL);    /*                       @Y30LB37*/
         LA    @08,SA6MDAGL                                        0628
         ST    @08,MYAGLPTR                                        0628
*       MYAGLPTR->MDHEAD=DEMOUNT;   /*                       @Y30LB37*/
         MVC   MDHEAD(8,@08),DEMOUNT                               0629
*       MYAGLPTR->MDUCBPTR=MTAGLPTR->MDUCBPTR;/*             @Y30LB37*/
         L     @15,@PC00005                                        0630
         L     @15,MTAGLPTR(,@15)                                  0630
         L     @14,MDUCBPTR(,@15)                                  0630
         ST    @14,MDUCBPTR(,@08)                                  0630
*       MYAGLPTR->MDDDNAME=MTAGLPTR->MDDDNAME;/*             @Y30LB37*/
         MVC   MDDDNAME(8,@08),MDDDNAME(@15)                       0631
*       MYAGLPTR->MDLABEL=MTAGLPTR->MDLABEL;/*               @Y30LB37*/
         MVC   MDLABEL(6,@08),MDLABEL(@15)                         0632
*       MYAGLPTR->MDPUAGL=NULLPTR;  /*                       @Y30LB37*/
         SLR   @14,@14                                             0633
         ST    @14,MDPUAGL(,@08)                                   0633
*       MYAGLPTR->MDWAIT=ON;        /*                       @YM04317*/
         OI    MDWAIT(@08),B'00010000'                             0634
*       IF MTAGLPTR->MDENQ=ON THEN                                 0635
         TM    MDENQ(@15),B'00001000'                              0635
         BNO   @RF00635                                            0635
*         MYAGLPTR->MDENQ=ON;       /*                       @Y30LB37*/
         OI    MDENQ(@08),B'00001000'                              0636
*       IF STACLEAR=ON THEN                                        0637
@RF00635 L     @08,@PC00001                                        0637
         L     @08,GDTSAH(,@08)                                    0637
         L     @08,SAHSTA(,@08)                                    0637
         TM    STACLEAR(@08),B'00001000'                           0637
         BNO   @RF00637                                            0637
*         DO;                       /*                       @Y30LB37*/
*           MYAGLPTR->MDPOST=ON;    /*                       @Y30LB37*/
         L     @08,MYAGLPTR                                        0639
         OI    MDPOST(@08),B'00100000'                             0639
*           MYAGLPTR->MDPUAGL=MTAGLPTR->MDPUAGL;/*           @Y30LB37*/
         L     @15,@PC00005                                        0640
         L     @01,MTAGLPTR(,@15)                                  0640
         L     @15,MDPUAGL(,@01)                                   0640
         ST    @15,MDPUAGL(,@08)                                   0640
*         END;                      /*                       @Y30LB37*/
*       CALL DEMNTVOL(MYAGLPTR);    /*                       @Y30LB37*/
@RF00637 LA    @08,MYAGLPTR                                        0642
         ST    @08,@AL00001                                        0642
         LA    @01,@AL00001                                        0642
         BAL   @14,DEMNTVOL                                        0642
*     END;                          /*                       @Y30LB37*/
*                                                                  0644
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN CODE OF EIGHT WILL BE TRANSLATED TO A ZERO     @Y30LB37*/
*   /* MEANING VOLUME ALREADY MOUNTED. RETURN CODE OF        @Y30LB37*/
*   /* TWELVE WILL BE TRANSLATED TO A FOUR MEANING MOUNT     @Y30LB37*/
*   /* FAILED.                                               @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0644
*   IF MTCTLRC=RCMONTED THEN                                       0644
@RF00624 C     MTCTLRC,@CF00179                                    0644
         BNE   @RF00644                                            0644
*     MTCTLRC=0;                    /*                       @Y30LB37*/
         SLR   MTCTLRC,MTCTLRC                                     0645
*   ELSE                                                           0646
*     IF MTCTLRC=RCNOPOST×MTCTLRC=RCDMFAIL THEN                    0646
         B     @RC00644                                            0646
@RF00644 C     MTCTLRC,@CF00037                                    0646
         BE    @RT00646                                            0646
         C     MTCTLRC,@CF00473                                    0646
         BNE   @RF00646                                            0646
@RT00646 DS    0H                                                  0647
*       MTCTLRC=4;                  /*                       @Y30LB37*/
         LA    MTCTLRC,4                                           0647
*   RETURN CODE(MTCTLRC);           /* RETURN TO MAIN ROUTINE      0648
*                                                            @Y30LB37*/
@RF00646 DS    0H                                                  0648
@RC00644 LR    @15,MTCTLRC                                         0648
         L     @14,@SA00005                                        0648
         LM    @00,@12,@SA00005+8                                  0648
         BR    @14                                                 0648
*   END MOUNTCTL;                   /* END OF MOUNTCTL TO MOUNT A  0649
*                                      VIRTUAL VOLUME        @Y30LB37*/
*                                                                  0650
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - MOUNTVOL                               @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  FUNCTION - THIS IS THE SECOND CONTROLLING ROUTINE       @Y30LB37*/
*/*             FOR THE MOUNTING OF A 3330V VIRTUAL          @Y30LB37*/
*/*             VOLUME. IT WILL PERFORM THE SETUP TO CALL    @Y30LB37*/
*/*             SUBORDINATE FUNCTIONS ISSUEMNT, RDLABEL      @Y30LB37*/
*/*             AND ENQDEQ TO ACHIEVE THE MOUNTING 0F A      @Y30LB37*/
*/*             3330V VOLUME. IT ALSO, POSTS A UCB AFTER     @Y30LB37*/
*/*             THE MOUNTING THE VIRTUAL VOLUME.             @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        @Y30LB37*/
*/*          SET UP THE MOUNT REQUEST. THE UCB IS POINTED    @Y30LB37*/
*/*          TO OUT OF THE MDAGL AND IS USED TO READ THE     @Y30LB37*/
*/*          VOLUME SERIAL MOUNTED.                          @Y30LB37*/
*/*                                                          @Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A COMPLETED MOUNT REQUEST     @Y30LB37*/
*/*          AND A POSTED UCB IF THE MOUNT WAS SUCCESSFUL.   @Y30LB37*/
*/*          RETURN CODES IN REG15 ARE AS FOLLOWS:           @Y30LB37*/
*/*          0 - SUCCESSFUL                                  @Y30LB37*/
*/*          4 - VOLUME NOT MOUNTED                          @Y30LB37*/
*/*         12 - VOLUME MOUNTED BUT NOT POSTED               @Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0650
*MOUNTVOL:                                                         0650
*   PROCEDURE(MTMDAGLP);            /*                       @Y30LB37*/
*                                                                  0650
MOUNTVOL STM   @14,@12,@SA00006                                    0650
         MVC   @PC00006(4),0(@01)                                  0650
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR MOUNTVOL                       @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0651
*   DCL                                                            0651
*     MTVOLRC FIXED(15);            /* MOUNTVOL RETURN CODE  @Y30LB37*/
*   DCL                                                            0652
*     MTMDAGLP PTR(31);             /* PTR TO MDAGL          @Y30LB37*/
*   DCL                                                            0653
*     MTPUAGL BDY(WORD)             /* PUAGL FOR POSTING     @Y30LB37*/
*         CHAR(LENGTH(PUAGL));      /* A UCB                 @Y30LB37*/
*   DCL                                                            0654
*     MTPUAGLP PTR(31);             /* PTR TO THE MTPUAGL    @Y30LB37*/
*                                                                  0655
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY MDAGL BASED ON PARAMETER BEFORE ISSUING     @Y30LB37*/
*   /* UTRACE MACRO.                                         @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0655
*   RFY                                                            0655
*     MDAGL BASED(MTMDAGLP);        /*                       @Y30LB37*/
*   OLDERID2=NEWERID2;                                             0656
         L     @08,@PC00001                                        0656
         L     @08,GDTTR2(,@08)                                    0656
         MVC   @TS00001(95),NEWERID2(@08)                          0656
         MVC   OLDERID2(95,@08),@TS00001                           0656
*   NEWID2='SAMT';                  /*                       @Y30LB37*/
*                                                                  0657
         MVC   NEWID2(4,@08),@CC02714                              0657
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQDEQ IS CALLED TO DETERMINE IF AN ENQUEUE IS        @Y30LB37*/
*   /* REQUIRED ON THE VOLUME SERIAL.                        @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0658
*   CALL ENQDEQ(ENQCMD,MTMDAGLP);   /*                       @Y30LB37*/
         LA    @08,ENQCMD                                          0658
         ST    @08,@AL00001                                        0658
         L     @08,@PC00006                                        0658
         ST    @08,@AL00001+4                                      0658
         LA    @01,@AL00001                                        0658
         BAL   @14,ENQDEQ                                          0658
*   RESPECIFY                                                      0659
*     RTNREG RSTD;                                                 0659
*   TESTRC=RTNREG;                                                 0660
         LR    TESTRC,RTNREG                                       0660
*   RESPECIFY                                                      0661
*     RTNREG UNRSTD;                /*                       @Y30LB37*/
*   MTVOLRC=TESTRC;                 /*                       @Y30LB37*/
*                                                                  0662
         LR    MTVOLRC,TESTRC                                      0662
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE RETURN CODE IS ZERO THEN CALL ISSUEMNT TO      @Y30LB37*/
*   /* COMPLETE THE MOUNT REQUEST. IF MOUNT FAILS THEN       @Y30LB37*/
*   /* ISSUE A DEQ REQUEST TO ENQDEQ TO DEQUEUE THE VOLSER.  @Y30LB37*/
*   /* IF MOUNT IS OK, BUT ACQUIRE FAILS THEN DON'T DEQ.     @Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0663
*   IF MTVOLRC=0 THEN                                              0663
         LTR   MTVOLRC,MTVOLRC                                     0663
         BNZ   @RF00663                                            0663
*     DO;                           /*                       @Y30LB37*/
*       CALL ISSUEMNT(MTMDAGLP);    /*                       @Y30LB37*/
         L     @08,@PC00006                                        0665
         ST    @08,@AL00001                                        0665
         LA    @01,@AL00001                                        0665
         BAL   @14,ISSUEMNT                                        0665
*       RESPECIFY                                                  0666
*         RTNREG RSTD;                                             0666
*       TESTRC=RTNREG;                                             0667
         LR    TESTRC,RTNREG                                       0667
*       RESPECIFY                                                  0668
*         RTNREG UNRSTD;            /*                       @Y30LB37*/
*       MTVOLRC=TESTRC;             /*                       @Y30LB37*/
         LR    MTVOLRC,TESTRC                                      0669
*       IF MTVOLRC=4&MDENQ=ON THEN                                 0670
         C     MTVOLRC,@CF00042                                    0670
         BNE   @RF00670                                            0670
         L     @08,@PC00006                                        0670
         L     @05,MTMDAGLP(,@08)                                  0670
         TM    MDENQ(@05),B'00001000'                              0670
         BNO   @RF00670                                            0670
*         CALL ENQDEQ(DEQCMD,MTMDAGLP);/*                    @Y30LB37*/
         LA    @05,DEQCMD                                          0671
         ST    @05,@AL00001                                        0671
         ST    @08,@AL00001+4                                      0671
         LA    @01,@AL00001                                        0671
         BAL   @14,ENQDEQ                                          0671
*     END;                          /*                       @Y30LB37*/
@RF00670 DS    0H                                                  0673
*                                                                  0673
*   /*****************************************************************/
*   /*                                                               */
*   /* TO DETERMINE WHERE THE VTOC IS LOCATED ON THE VOLUME  @Y30LB37*/
*   /* THE LABEL IS READ BY CALLING RDLABEL. IF THE VOLUME   @ZA05112*/
*   /* JUST MOUNTED IS NOT NEW (MDNEWVOL IS OFF), STAVTTR    @ZA05112*/
*   /* IS FILLED FROM THE LABEL. IF RDLABEL IS NOT           @ZA05112*/
*   /* SUCCESSFUL, THEN SET THE RETURN CODE TO 12            @ZA05112*/
*   /* TO INDICATE THAT THE VOLUME WAS MOUNTED BUT WAS       @ZA05112*/
*   /* NOT POSTED.                                           @ZA05112*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0673
*   IF MTVOLRC=0 THEN                                              0673
@RF00663 LTR   MTVOLRC,MTVOLRC                                     0673
         BNZ   @RF00673                                            0673
*     IF MDNEWVOL=OFF THEN                                         0674
         L     @08,@PC00006                                        0674
         L     @05,MTMDAGLP(,@08)                                  0674
         TM    MDNEWVOL(@05),B'10000000'                           0674
         BNZ   @RF00674                                            0674
*       DO;                         /*                       #Y30LB37*/
*         CALL RDLABEL(MTMDAGLP);   /*                       #Y30LB37*/
         ST    @08,@AL00001                                        0676
         LA    @01,@AL00001                                        0676
         BAL   @14,RDLABEL                                         0676
*         RESPECIFY                                                0677
*           RTNREG RSTD;                                           0677
*         TESTRC=RTNREG;                                           0678
         LR    TESTRC,RTNREG                                       0678
*         RESPECIFY                                                0679
*           RTNREG UNRSTD;          /*                       #Y30LB37*/
*         IF TESTRC^=0 THEN                                        0680
         LTR   TESTRC,TESTRC                                       0680
         BZ    @RF00680                                            0680
*           MTVOLRC=RCNOPOST;       /*                       #Y30LB37*/
         LA    MTVOLRC,12                                          0681
*         ELSE                                                     0682
*           STAVTTR=TTRWORK;        /*                       @ZA05112*/
         B     @RC00680                                            0682
@RF00680 L     @08,@PC00001                                        0682
         L     @08,GDTSAH(,@08)                                    0682
         L     @08,SAHSTA(,@08)                                    0682
         MVC   STAVTTR(4,@08),TTRWORK                              0682
*       END;                        /*                       #Y30LB37*/
@RC00680 DS    0H                                                  0684
*                                                                  0684
*   /*****************************************************************/
*   /*                                                               */
*   /* THE UCBPOST ROUTINE IS CALLED TO HAVE THE VOLUME      #Y30LB37*/
*   /* LABEL AND TTR TO THE VTOC POSTED IN THE VIRTUAL UCB.  #Y30LB37*/
*   /* TURN ON POST TRACKING FLAG STAVPOST IF SUCCESSFUL.    #Y30LB37*/
*   /* IF AN ERROR IN POST THEN SET RETURN CODE TO 12.       #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0684
*   IF MTVOLRC=0 THEN                                              0684
@RF00674 DS    0H                                                  0684
@RF00673 LTR   MTVOLRC,MTVOLRC                                     0684
         BNZ   @RF00684                                            0684
*     DO;                           /*                       #Y30LB37*/
*       MTPUAGLP=ADDR(MTPUAGL);     /*                       #Y30LB37*/
         LA    @08,MTPUAGL                                         0686
         ST    @08,MTPUAGLP                                        0686
*       MTPUAGLP->PUHEAD=POST;      /*                       #Y30LB37*/
         MVC   PUHEAD(8,@08),POST                                  0687
*       MTPUAGLP->PUUCBPTR=MDUCBPTR;/*                       #Y30LB37*/
         L     @05,@PC00006                                        0688
         L     @05,MTMDAGLP(,@05)                                  0688
         L     @15,MDUCBPTR(,@05)                                  0688
         ST    @15,PUUCBPTR(,@08)                                  0688
*       MTPUAGLP->PUTTRPTR=ADDR(TTRWORK);/*                  #Y30LB37*/
         LA    @15,TTRWORK                                         0689
         ST    @15,PUTTRPTR(,@08)                                  0689
*       MTPUAGLP->PULABELP=ADDR(MDLABEL);/*                  #Y30LB37*/
         LA    @05,MDLABEL(,@05)                                   0690
         ST    @05,PULABELP(,@08)                                  0690
*       CALL UCBPOST(POST,MTPUAGLP);/*                       #Y30LB37*/
         LA    @08,POST                                            0691
         ST    @08,@AL00001                                        0691
         LA    @08,MTPUAGLP                                        0691
         ST    @08,@AL00001+4                                      0691
         LA    @01,@AL00001                                        0691
         BAL   @14,UCBPOST                                         0691
*       RESPECIFY                                                  0692
*         RTNREG RSTD;                                             0692
*       TESTRC=RTNREG;                                             0693
         LR    TESTRC,RTNREG                                       0693
*       RESPECIFY                                                  0694
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*       IF TESTRC^=0 THEN                                          0695
         LTR   TESTRC,TESTRC                                       0695
         BZ    @RF00695                                            0695
*         MTVOLRC=RCNOPOST;         /*                       #Y30LB37*/
         LA    MTVOLRC,12                                          0696
*       ELSE                                                       0697
*         STAVPOST=ON;              /* TURN ON POST TRACKING #Y30LB37*/
         B     @RC00695                                            0697
@RF00695 L     @08,@PC00001                                        0697
         L     @08,GDTSAH(,@08)                                    0697
         L     @08,SAHSTA(,@08)                                    0697
         OI    STAVPOST(@08),B'00010000'                           0697
*     END;                          /*                       #Y30LB37*/
@RC00695 DS    0H                                                  0699
*   RETURN CODE(MTVOLRC);           /* RETURN TO MAIN ROUTINE      0699
*                                                            #Y30LB37*/
@RF00684 LR    @15,MTVOLRC                                         0699
         L     @14,@SA00006                                        0699
         LM    @00,@12,@SA00006+8                                  0699
         BR    @14                                                 0699
*   END MOUNTVOL;                   /* END OF MOUNTVOL TO MOUNT A  0700
*                                      VIRTUAL VOLUME        #Y30LB37*/
*                                                                  0701
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - ISSUEMNT                               #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  FUNCTION - THIS ROUTINE WILL PREPARE AND ISSUE THE      #Y30LB37*/
*/*             USSC MACRO TO MOUNT A 3330V VIRTUAL          #Y30LB37*/
*/*             VOLUME. IF THE MOUNT IS SUCCESSFUL IT        #Y30LB37*/
*/*             THEN ISSUES AN ACQUIRE USSC MACRO TO         #Y30LB37*/
*/*             ACQUIRE THE CYLINDER ZERO OF THE VOLUME.     #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        #Y30LB37*/
*/*          SET UP THE USSC MACRO. THE UCB IS POINTED       #Y30LB37*/
*/*          TO OUT OF THE MDAGL AND IS USED TO GET          #Y30LB37*/
*/*          THE UCB'S UNIT ADDRESS.                         #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A COMPLETED MOUNT AND A       #Y30LB37*/
*/*          ACQUIRED CYL 0 IF THE MOUNT WAS SUCCESSFUL.     #Y30LB37*/
*/*          RETURN CODES ARE AS FOLLOWS:                    #Y30LB37*/
*/*          0 - SUCCESSFUL                                  #Y30LB37*/
*/*          4 - USSC MOUNT FAILED                           #Y30LB37*/
*/*         12 - ACQUIRE FAILED                              #Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0701
*ISSUEMNT:                                                         0701
*   PROCEDURE(IMMDAGLP);            /*                       #Y30LB37*/
*                                                                  0701
ISSUEMNT STM   @14,@12,@SA00007                                    0701
         MVC   @PC00007(4),0(@01)                                  0701
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR ISSUEMNT                       #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0702
*   DCL                                                            0702
*     ISUEMRC FIXED(15);            /* ISSUEMNT RETURN CODE  #Y30LB37*/
*   DCL                                                            0703
*     IMMDAGLP PTR(31);             /* PTR TO MDAGL          #Y30LB37*/
*   DCL                                                            0704
*     MNTLPTR PTR(31);              /* PTR TO THE MNTLIST    #Y30LB37*/
*   DCL                                                            0705
*     ACQLPTR PTR(31);              /* PTR TO THE ACQLIST    @Y30LB37*/
*   DCL                                                            0706
*     ACQOP FIXED(8) STATIC         /* ACQUIRE OPERATION     @Y30LB37*/
*         INIT('02'X);              /* CODE                  #Y30LB37*/
*   DCL                                                            0707
*     DEFALTTR CHAR(4) STATIC       /* DEFAULT TTR TO        @ZA05112*/
*         INIT('00010100'X);        /* THE VTOC              @ZA05112*/
*   DCL                                                            0708
*     DEFTTR CHAR(2) INIT('0100'X); /* DEFAULT VTOC HH       @ZDR2057*/
*   DCL                                                            0709
*     MDREG1 REG(1) PTR;            /* ADDRESS OF REQUEST BLOCK    0709
*                                                            @Y30LB02*/
*                                                                  0709
*   /*****************************************************************/
*   /*                                                               */
*   /* ********************************************************      */
*   /*                                                       @Y30LB02*/
*   /* MACMEAN MSSC MOUNT MACRO                              @Y30LB02*/
*   /* VS2-3 VERSION--02/06/76                               @G18MB04*/
*   /* THIS IS THE UNINITIALIZED LIST FORM                   @Y30LB02*/
*   /* ********************************************************      */
*   /*                                                       @Y30LB02*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0710
*   DCL                                                            0710
*     1 MNTLIST BASED(MNTLPTR),     /* MOUNT REQUEST BLOCK   @Y30LB02*/
*      2 MDLEN FIXED(31),           /* LENGTH OF BLOCK = 1C HEX BYTES
*                                                            @Y30LB02*/
*      2 MDOPCD FIXED(8),           /* MOUNT OPCODE = 08 HEX @Y30LB02*/
*      2 * CHAR(1),                 /* ONE BYTE OF ZERO      @Y30LB02*/
*      2 MDFLG BIT(16),             /* FLAGS AREA            @Y30LB02*/
*       3 * BIT(1),                 /* RESERVED              @YD00125*/
*       3 MDVISMNT BIT(1),          /* MSVC ISSUING THE MOUNT      0710
*                                                            @Y30LB02*/
*       3 MDVSVRQ BIT(1),           /* MSVC SECONDARY VOLUME REQUEST
*                                                            @Y30LB02*/
*       3 MDSRTCH BIT(1),           /* SCRATCH               @Y30LB02*/
*       3 MDMEXT BIT(1),            /* MOUNT EXTENSION       @G18MB04*/
*       3 * BIT(11),                /* RESERVED BITS         @YD00125*/
*      2 MDVOL CHAR(6),             /* VOLID                 @Y30LB02*/
*      2 MDVUA FIXED(15),           /* VIRTUAL UNIT ADDRESS  @Y30LB02*/
*      2 MDHOST CHAR(5),            /* 5-BYTES HOSTID AREA   @Y30LB02*/
*      2 * CHAR(3),                 /* RESERVED              @Y30LB02*/
*      2 MNTEXTP PTR(31),           /* ADDRESS OF MOUNT LIST       0710
*                                      EXTENSION             @G18MB04*/
*       3 MDJFCB FIXED(31);         /* ADDRESS OF JFCB       @G18MB04
*                                      MNT                   #Y30LB37*/
*                                                                  0711
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTINUED LOCAL DECLARATIONS FOR ISSUEMNT             #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0711
*   DCL                                                            0711
*     ARR1 REG(1) PTR;              /* WILL CONTAIN LIST ADDRESS   0711
*                                                            @Y30LB02*/
*                                                                  0711
*   /*****************************************************************/
*   /*                                                               */
*   /* *******************************************************       */
*   /*                                                       @Y30LB02*/
*   /* MACMEAN MSSC ACQUIRE/RELINQUISH MACRO                 @Y30LB02*/
*   /* VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00                @Y30LB02*/
*   /* THIS IS THE UNINITIALIZED LIST FORM                   @Y30LB02*/
*   /* *******************************************************       */
*   /*                                                       @Y30LB02*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0712
*   DCL                                                            0712
*     1 ACQLIST BASED(ACQLPTR),                                    0712
*      2 ARLL FIXED(31),            /* LENGTH=96 BYTES       @Y30LB02*/
*      2 AROP FIXED(8),             /* OPCODE=02             @Y30LB02*/
*      2 * CHAR(1),                 /* RESERVED AREA         @Y30LB02*/
*      2 ARFLG BIT(8),              /* FLAGS                 @Y30LB02*/
*       3 ARBDUBD BIT(1),           /* BIND/UNBIND BIT       @Y30LB02*/
*       3 ARDRES BIT(1),            /* DELAYED RESPONSE BIT  @Y30LB02*/
*       3 ARINH BIT(1),             /* INHIBIT (DE)STAGE BIT @Y30LB02*/
*       3 * BIT(5),                 /* THESE BITS ALWAYS ZEROES    0712
*                                                            @Y30LB02*/
*      2 ARNMEXT FIXED(8),          /* #EXTS                 @Y30LB02*/
*      2 ARVOL CHAR(6),             /* VOLID                 @Y30LB02*/
*      2 ARASID CHAR(2),            /* ASID FIELD            @Y30LB02*/
*      2 ARECB FIXED(31),           /* ADDR OF ECB           @Y30LB02*/
*      2 ARHOST CHAR(5),            /* HOSTID                @Y30LB02*/
*      2 * CHAR(1),                 /* ZEROES                @Y30LB02*/
*      2 ARCOMPC CHAR(2),           /* COMP CODE             @Y30LB02*/
*      2 AREXT(16),                 /* EXTENTS               @Y30LB02*/
*       3 * CHAR(4),                /* ELEMENT OF EXTS ARRAY @Y30LB02*/
*      2 ARNEDB FIXED(31);          /* ADDR OF NEDB          @Y30LB02
*                                      ACQ                   #Y30LB37*/
*                                                                  0713
*   /*****************************************************************/
*   /*                                                               */
*   /* STORAGE AREAS FOR MOUNT AND ACQUIRE ARGUMENT LISTS.   #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0713
*   DCL                                                            0713
*     MNTLST CHAR(LENGTH(MNTLIST))  /* STORAGE AREA FOR      #Y30LB37*/
*         BDY(WORD);                /* MOUNT ARGUMENT LIST   #Y30LB37*/
*   DCL                                                            0714
*     ACQLST CHAR(LENGTH(ACQLIST))  /* STORAGE AREA FOR      #Y30LB37*/
*         BDY(WORD);                /* ACQUIRE ARGUMENT LIST #Y30LB37*/
*                                                                  0715
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY MDAGL ON INPUT PARAMETER AND INITIALIZE     #Y30LB37*/
*   /* RETURN CODE AREA AND ISSUE UTRACE MACRO.              #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0715
*   RFY                                                            0715
*     MDAGL BASED(IMMDAGLP);        /*                       #Y30LB37*/
*   OLDERID2=NEWERID2;                                             0716
         L     @08,@PC00001                                        0716
         L     @04,GDTTR2(,@08)                                    0716
         MVC   @TS00001(95),NEWERID2(@04)                          0716
         MVC   OLDERID2(95,@04),@TS00001                           0716
*   NEWID2='SAIM';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@04),@CC02773                              0717
*   MNTLPTR=ADDR(MNTLST);           /* INIT ARGUMENT LIST PTR      0718
*                                                            #Y30LB37*/
         LA    @04,MNTLST                                          0718
         ST    @04,MNTLPTR                                         0718
*   MNTLST=''B;                     /* CLEAR THE MOUNT LIST  #Y30LB37*/
         XC    MNTLST(28),MNTLST                                   0719
*   ACQLPTR=ADDR(ACQLST);           /* INIT ARGUMENT LIST PTR      0720
*                                                            #Y30LB37*/
         LA    @04,ACQLST                                          0720
         ST    @04,ACQLPTR                                         0720
*   ACQLST=''B;                     /* CLEAR THE ACQUIRE LIST      0721
*                                                            #Y30LB37*/
*                                                                  0721
         XC    ACQLST(96),ACQLST                                   0721
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE AND SET ON STAEPARM TRACKING AREAS.        #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0722
*   STAVVOL=MDLABEL;                /* INITIALIZE VOLSER     #Y30LB37*/
         L     @08,GDTSAH(,@08)                                    0722
         L     @08,SAHSTA(,@08)                                    0722
         L     @04,@PC00007                                        0722
         L     @04,IMMDAGLP(,@04)                                  0722
         MVC   STAVVOL(6,@08),MDLABEL(@04)                         0722
*   STAVUCB=MDUCBADR;               /* INITIALIZE UCB ADDRESS      0723
*                                                            #Y30LB37*/
*                                                                  0723
         L     @01,MDUCBPTR(,@04)                                  0723
         L     @15,MDUCBADR(,@01)                                  0723
         ST    @15,STAVUCB(,@08)                                   0723
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR USER SUPPLIED CCHH OR TO USE THE DEFAULT.   @ZDR2057*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0724
*   IF MDVTOCTR=ON THEN                                            0724
         TM    MDVTOCTR(@04),B'00000001'                           0724
         BNO   @RF00724                                            0724
*     DO;                           /*                       @ZDR2057*/
*       CCWORK=(19*MDCC)+MDHH;      /*                       @ZDR2057*/
         LH    @08,MDCC(,@04)                                      0726
         MH    @08,@CH02774                                        0726
         AH    @08,MDHH(,@04)                                      0726
         STH   @08,CCWORK                                          0726
*       HHWORK=DEFTTR;              /*                       @ZDR2057*/
         MVC   HHWORK(2),DEFTTR                                    0727
*     END;                          /*                       @ZDR2057*/
*   ELSE                                                           0729
*     TTRWORK=DEFALTTR;             /* INITIALIZE TO DEFAULT @ZA05112*/
         B     @RC00724                                            0729
@RF00724 MVC   TTRWORK(4),DEFALTTR                                 0729
*   STAVTTR=TTRWORK;                /* STORE DEFAULT TTR     @ZA05112*/
@RC00724 L     @08,@PC00001                                        0730
         L     @03,GDTSAH(,@08)                                    0730
         L     @03,SAHSTA(,@03)                                    0730
         MVC   STAVTTR(4,@03),TTRWORK                              0730
*   STAVMNT=ON;                     /* TURN ON MOUNT FLAG    #Y30LB37*/
         OI    STAVMNT(@03),B'10000000'                            0731
*                                                                  0732
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE USSC MACRO TO HAVE VOLUME MOUNTED BY THE MSC.   #Y30LB37*/
*   /* THE FOLLOWING SSC MACRO FIELDS ARE SET: MDVOL         #Y30LB37*/
*   /* AND MDVUA.                                            #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0732
*   MDVUA=UCBCHAN;                  /*                       #Y30LB37*/
         L     @03,MNTLPTR                                         0732
         LH    @15,UCBCHAN(,UCBPTR)                                0732
         N     @15,@CF03052                                        0732
         STH   @15,MDVUA(,@03)                                     0732
*   MDVOL=MDLABEL;                  /*                       #Y30LB37*/
         L     @05,@PC00007                                        0733
         L     @05,IMMDAGLP(,@05)                                  0733
         MVC   MDVOL(6,@03),MDLABEL(@05)                           0733
*   CALL IDCSASS0(GDTTBL,MOUNT,MNTLPTR,REASONCD);/*          #Y30LB37*/
         ST    @08,@AL00001                                        0734
         LA    @05,MOUNT                                           0734
         ST    @05,@AL00001+4                                      0734
         LA    @05,MNTLPTR                                         0734
         ST    @05,@AL00001+8                                      0734
         LA    @05,REASONCD                                        0734
         ST    @05,@AL00001+12                                     0734
         MVI   @AL00001+12,X'80'                                   0734
         L     @15,GDTSSC(,@08)                                    0734
         LA    @01,@AL00001                                        0734
         BALR  @14,@15                                             0734
*   RESPECIFY                                                      0735
*     RTNREG RSTD;                                                 0735
*   TESTRC=RTNREG;                                                 0736
         LR    TESTRC,RTNREG                                       0736
*   RESPECIFY                                                      0737
*     RTNREG UNRSTD;                /*                       #Y30LB37*/
*   ISUEMRC=TESTRC;                 /*                       #Y30LB37*/
*                                                                  0738
         LR    ISUEMRC,TESTRC                                      0738
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A ERROR OCCURS IN MOUNT SET STAEVMNT OFF AND SET   #Y30LB37*/
*   /* RETURN CODE TO 4. CALL SSCMSG TO PRINT COMMON         #Y30LB37*/
*   /* MESSAGE.                                              #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0739
*   IF ISUEMRC^=0 THEN                                             0739
         LTR   ISUEMRC,ISUEMRC                                     0739
         BZ    @RF00739                                            0739
*     DO;                           /*                       #Y30LB37*/
*       STAVMNT=OFF;                /*                       #Y30LB37*/
         L     @08,@PC00001                                        0741
         L     @08,GDTSAH(,@08)                                    0741
         L     @08,SAHSTA(,@08)                                    0741
         NI    STAVMNT(@08),B'01111111'                            0741
*       CALL SSCMSG(REASONCD);      /*                       #Y30LB37*/
         LA    @08,REASONCD                                        0742
         ST    @08,@AL00001                                        0742
         LA    @01,@AL00001                                        0742
         BAL   @14,SSCMSG                                          0742
*     END;                          /*                       #Y30LB37*/
*                                                                  0744
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE RETURN CODE IS ZERO, THEN ISSUE THE USSC       #Y30LB37*/
*   /* MACRO TO ACQUIRE THE FIRST CYLINDER OF THE VOLUME     #Y30LB37*/
*   /* MOUNTED AND WAIT ON THE ACQUIRE.                      #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0744
*   IF ISUEMRC=0 THEN                                              0744
@RF00739 SLR   @08,@08                                             0744
         CR    ISUEMRC,@08                                         0744
         BNE   @RF00744                                            0744
*     DO;                           /*                       #Y30LB37*/
*       ARLL=LENGTH(ACQLIST);       /*                       #Y30LB37*/
         L     @05,ACQLPTR                                         0746
         MVC   ARLL(4,@05),@CF02065                                0746
*       AROP=ACQOP;                 /*                       #Y30LB37*/
         MVC   AROP(1,@05),ACQOP                                   0747
*       ARDRES=ON;                  /*                       #Y30LB37*/
         OI    ARDRES(@05),B'01000000'                             0748
*       ARNMEXT=ONE;                /*                       #Y30LB37*/
         MVI   ARNMEXT(@05),X'01'                                  0749
*       ARVOL=MDLABEL;              /*                       #Y30LB37*/
         L     @03,@PC00007                                        0750
         L     @03,IMMDAGLP(,@03)                                  0750
         MVC   ARVOL(6,@05),MDLABEL(@03)                           0750
*       AREXT(1)=''B;               /*                       #Y30LB37*/
         XC    AREXT(4,@05),AREXT(@05)                             0751
*       ARNEDB=NULLPTR;             /*                       #Y30LB37*/
         ST    @08,ARNEDB(,@05)                                    0752
*       CALL IDCSASS0(GDTTBL,ACQUIRE,ACQLPTR,REASONCD,ECBCODE);/*  0753
*                                                            #Y30LB37*/
         L     @08,@PC00001                                        0753
         ST    @08,@AL00001                                        0753
         LA    @05,ACQUIRE                                         0753
         ST    @05,@AL00001+4                                      0753
         LA    @05,ACQLPTR                                         0753
         ST    @05,@AL00001+8                                      0753
         LA    @05,REASONCD                                        0753
         ST    @05,@AL00001+12                                     0753
         LA    @05,ECBCODE                                         0753
         ST    @05,@AL00001+16                                     0753
         MVI   @AL00001+16,X'80'                                   0753
         L     @15,GDTSSC(,@08)                                    0753
         LA    @01,@AL00001                                        0753
         BALR  @14,@15                                             0753
*       RESPECIFY                                                  0754
*         RTNREG RSTD;                                             0754
*       TESTRC=RTNREG;                                             0755
         LR    TESTRC,RTNREG                                       0755
*       RESPECIFY                                                  0756
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*                                                                  0756
*       /*************************************************************/
*       /*                                                           */
*       /* IF AN ERROR OCCURRED IN THE SSC ACQUIRE, THEN     #Y30LB37*/
*       /* CALL THE SSCMSG ROUTINE TO PRINT OUT THE COMMON   #Y30LB37*/
*       /* ERROR MESSAGE.                                    #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0757
*       IF TESTRC^=0 THEN                                          0757
         LTR   TESTRC,TESTRC                                       0757
         BZ    @RF00757                                            0757
*         DO;                       /*                       #Y30LB37*/
*           ISUEMRC=RCNOPOST;       /*                       #Y30LB37*/
         LA    ISUEMRC,12                                          0759
*           CALL SSCMSG(REASONCD,ECBCODE);/*                 #Y30LB37*/
         LA    @08,REASONCD                                        0760
         ST    @08,@AL00001                                        0760
         LA    @08,ECBCODE                                         0760
         ST    @08,@AL00001+4                                      0760
         LA    @01,@AL00001                                        0760
         BAL   @14,SSCMSG                                          0760
*         END;                      /*                       #Y30LB37*/
*     END;                          /*                       #Y30LB37*/
@RF00757 DS    0H                                                  0763
*   RETURN CODE(ISUEMRC);           /* RETURN TO MAIN ROUTINE      0763
*                                                            #Y30LB37*/
@RF00744 LR    @15,ISUEMRC                                         0763
         L     @14,@SA00007                                        0763
         LM    @00,@12,@SA00007+8                                  0763
         BR    @14                                                 0763
*   END ISSUEMNT;                   /* END OF ISSUEMNT TO MOUNT A  0764
*                                      VIRTUAL VOLUME        #Y30LB37*/
*                                                                  0765
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - RDLABEL                                #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  FUNCTION - THIS ROUTINE WILL PERFORM THE EXCP STEPS     #Y30LB37*/
*/*             TO OPEN, READ AND CLOSE THE VOLUME VIA       #Y30LB37*/
*/*             THE UEXCP MACRO.  RDLABEL MUST ALSO          #Y30LB37*/
*/*             CONVERT THE CCHHR TO A VALID TTR PTR TO      #Y30LB37*/
*/*             THE VTOC AND INSERT IN TTRWORK, FOR          #Y30LB37*/
*/*             MOUNTVOL TO USE WHEN POSTING THE UCB.        #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        #Y30LB37*/
*/*          SET UP THE UEXCP MACRO.                         #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A COMPLETED READ AND A        #Y30LB37*/
*/*          CONVERTED CCHHR IF THE READ WAS SUCCESSFUL.     #Y30LB37*/
*/*          RETURN CODES IN REG15 ARE AS FOLLOWS:           #Y30LB37*/
*/*          0 - SUCCESSFUL                                  #Y30LB37*/
*/*          4 - UNSUCCESSFUL                                #Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0765
*RDLABEL:                                                          0765
*   PROCEDURE(RDMDAGLP);            /*                       #Y30LB37*/
RDLABEL  STM   @14,@12,@SA00008                                    0765
         MVC   @PC00008(4),0(@01)                                  0765
*                                                                  0766
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR RDLABEL                        #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0766
*   DCL                                                            0766
*     RDLABRC FIXED(15);            /* RDLABEL RETURN CODE   #Y30LB37*/
*   DCL                                                            0767
*     RDMDAGLP PTR(31);             /* PTR TO MDAGL          #Y30LB37*/
*   DCL                                                            0768
*     SEARCHCC CHAR(5) STATIC       /* SEARCH FOR RECORD     #Y30LB37*/
*         INIT('0000000003'X);      /* VOLUME LABEL 3        #Y30LB37*/
*   DCL                                                            0769
*     EXT3330 FIXED(8) CONSTANT(19);/* EXTENTS FOR 3330      #Y30LB37*/
*   DCL                                                            0770
*     RTNAREA PTR(31) BDY(WORD);    /* UEXCP PARM AREA       #Y30LB37*/
*   DCL                                                            0771
*     EXOLIST CHAR(LENGTH(EXOARG))  /* EXCP OPEN ARGUMENT    #Y30LB37*/
*         BDY(WORD);                /* LIST                  #Y30LB37*/
*   DCL                                                            0772
*     EXGLIST CHAR(LENGTH(EXGARG))  /* EXCP GET ARGUMENT     #Y30LB37*/
*         BDY(WORD);                /* LIST                  #Y30LB37*/
*   DCL                                                            0773
*     1 RECAREA BDY(WORD),          /* VOLUME LABEL 3 AREA   #Y30LB37*/
*      2 * CHAR(LENGTH(VOLLABEL));  /* LENGTH OF VOLLABEL    #Y30LB37*/
*   DCL                                                            0774
*     1 CCHHRWK CHAR(5) BDY(WORD),  /* CONVERSION WORK AREA  #Y30LB37*/
*      2 CC FIXED(15),              /* CYLINDER              #Y30LB37*/
*      2 HH FIXED(15),              /* HEAD                  #Y30LB37*/
*      2 R FIXED(8);                /* RECORD                #Y30LB37*/
*                                                                  0775
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE OPEN ARGUMENT LIST AND ISSUE THE OPEN  #Y30LB37*/
*   /* MACRO VIA THE UEXCP MACRO.                            #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0775
*   RFY                                                            0775
*     MDAGL BASED(RDMDAGLP);        /*                       #Y30LB37*/
*   RFY                                                            0776
*     EXOARG BASED(ADDR(EXOLIST));  /*                       #Y30LB37*/
*   RFY                                                            0777
*     EXGARG BASED(ADDR(EXGLIST));  /*                       #Y30LB37*/
*   RFY                                                            0778
*     VOLLABEL BASED(ADDR(RECAREA));/*                       #Y30LB37*/
*   OLDERID2=NEWERID2;                                             0779
         L     @08,@PC00001                                        0779
         L     @03,GDTTR2(,@08)                                    0779
         MVC   @TS00001(95),NEWERID2(@03)                          0779
         MVC   OLDERID2(95,@03),@TS00001                           0779
*   NEWID2='SARD';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@03),@CC02802                              0780
*   RTNAREA=NULLPTR;                /*                       #Y30LB37*/
         SLR   @03,@03                                             0781
         ST    @03,RTNAREA                                         0781
*   EXOARG=''B;                     /*                       #Y30LB37*/
         LA    @03,EXOLIST                                         0782
         XC    EXOARG(34,@03),EXOARG(@03)                          0782
*   EXODDN=ADDR(MDDDNAME);          /*                       #Y30LB37*/
         L     @15,@PC00008                                        0783
         L     @15,RDMDAGLP(,@15)                                  0783
         LA    @14,MDDDNAME(,@15)                                  0783
         ST    @14,EXODDN(,@03)                                    0783
*   EXOUCB=MDUCBADR;                /*                       #Y30LB37*/
         L     @01,MDUCBPTR(,@15)                                  0784
         L     @15,MDUCBADR(,@01)                                  0784
         ST    @15,EXOUCB(,@03)                                    0784
*   EXOCTLBK=ADDR(RTNAREA);         /*                       #Y30LB37*/
         LA    @15,RTNAREA                                         0785
         ST    @15,EXOCTLBK(,@03)                                  0785
*   EXONEW=ON;                      /*                       #Y30LB37*/
         OI    EXONEW(@03),B'00010000'                             0786
*   CALL IDCIO050(GDTTBL,OPEN,EXOARG);/*                     #Y30LB37*/
         ST    @08,@AL00001                                        0787
         LA    @15,OPEN                                            0787
         ST    @15,@AL00001+4                                      0787
         ST    @03,@AL00001+8                                      0787
         MVI   @AL00001+8,X'80'                                    0787
         L     @15,GDTEXP(,@08)                                    0787
         LA    @01,@AL00001                                        0787
         BALR  @14,@15                                             0787
*   RESPECIFY                                                      0788
*     RTNREG RSTD;                                                 0788
*   TESTRC=RTNREG;                                                 0789
         LR    TESTRC,RTNREG                                       0789
*   RESPECIFY                                                      0790
*     RTNREG UNRSTD;                /*                       #Y30LB37*/
*                                                                  0791
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE GET ARGUMENT LIST AND ISSUE THE GET    #Y30LB37*/
*   /* MACRO VIA THE UEXCP MACRO.                            #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0791
*   IF TESTRC=0 THEN                                               0791
         LTR   TESTRC,TESTRC                                       0791
         BNZ   @RF00791                                            0791
*     DO;                           /*                       #Y30LB37*/
*       EXGARG=''B;                 /*                       #Y30LB37*/
         LA    @08,EXGLIST                                         0793
         XC    EXGARG(32,@08),EXGARG(@08)                          0793
*       VOLLABEL=''B;               /*                       #Y30LB37*/
         LA    @03,RECAREA                                         0794
         XC    VOLLABEL(84,@03),VOLLABEL(@03)                      0794
*       EXGCTLBK=RTNAREA;           /*                       #Y30LB37*/
         L     @15,RTNAREA                                         0795
         ST    @15,EXGCTLBK(,@08)                                  0795
*       EXGCCHH2=ADDR(SEARCHCC);    /*                       #Y30LB37*/
         LA    @15,SEARCHCC                                        0796
         ST    @15,EXGCCHH2(,@08)                                  0796
*       EXGRECNO=ONE;               /*                       #Y30LB37*/
         MVC   EXGRECNO(4,@08),@CF00219                            0797
*       EXGDATAP=ADDR(VOLLABEL);    /*                       #Y30LB37*/
         ST    @03,EXGDATAP(,@08)                                  0798
*       EXGKEYLN=LENGTH(VOLKEY);    /*                       #Y30LB37*/
         MVI   EXGKEYLN(@08),X'04'                                 0799
*       EXGDATAL=LENGTH(VOLLABEL)-LENGTH(VOLKEY);/*          #Y30LB37*/
         MVC   EXGDATAL(2,@08),@CH03033                            0800
*       CALL IDCIO050(GDTTBL,GET,EXGARG);/*                  #Y30LB37*/
         L     @03,@PC00001                                        0801
         ST    @03,@AL00001                                        0801
         LA    @15,GET                                             0801
         ST    @15,@AL00001+4                                      0801
         ST    @08,@AL00001+8                                      0801
         MVI   @AL00001+8,X'80'                                    0801
         L     @15,GDTEXP(,@03)                                    0801
         LA    @01,@AL00001                                        0801
         BALR  @14,@15                                             0801
*       RESPECIFY                                                  0802
*         RTNREG RSTD;                                             0802
*       TESTRC=RTNREG;                                             0803
         LR    TESTRC,RTNREG                                       0803
*       RESPECIFY                                                  0804
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*                                                                  0804
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE UEXCP GET IS SUCCESSFUL, THEN CONVERT THE  #Y30LB37*/
*       /* CCHHR FIELD OF RECORD THREE TO A TTR AND PUT THE  #Y30LB37*/
*       /* CONVERTED CCHHR INTO THE TTR WORK FIELD FOR LATER #Y30LB37*/
*       /* USE BY THE MOUNTVOL ROUTINE FOR POSTING.          #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0805
*       IF TESTRC=0 THEN                                           0805
         LTR   TESTRC,TESTRC                                       0805
         BNZ   @RF00805                                            0805
*         DO;                       /*                       #Y30LB37*/
*           CCHHRWK=VOLVTOC;        /*                       #Y30LB37*/
         LA    @08,RECAREA                                         0807
         MVC   CCHHRWK(5),VOLVTOC(@08)                             0807
*           CCWORK=(CC*EXT3330)+HH; /*                       #Y30LB37*/
         LH    @08,CC                                              0808
         MH    @08,@CH02774                                        0808
         AH    @08,HH                                              0808
         STH   @08,CCWORK                                          0808
*           HHWORK='0100'X;         /*                       #Y30LB37*/
         MVC   HHWORK(2),@CH02731                                  0809
*         END;                      /*                       #Y30LB37*/
*     END;                          /*                       #Y30LB37*/
@RF00805 DS    0H                                                  0812
*                                                                  0812
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE OPEN WAS SUCCESSFUL THEN ISSUE THE CLOSE       #Y30LB37*/
*   /* MACRO VIA THE UEXCP MACRO.                            #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0812
*   IF RTNAREA^=NULLPTR THEN                                       0812
@RF00791 L     @08,RTNAREA                                         0812
         LTR   @08,@08                                             0812
         BZ    @RF00812                                            0812
*     CALL IDCIO050(GDTTBL,CLOSE,RTNAREA);/*                 #Y30LB37*/
*                                                                  0813
         L     @08,@PC00001                                        0813
         ST    @08,@AL00001                                        0813
         LA    @03,CLOSE                                           0813
         ST    @03,@AL00001+4                                      0813
         LA    @03,RTNAREA                                         0813
         ST    @03,@AL00001+8                                      0813
         MVI   @AL00001+8,X'80'                                    0813
         L     @15,GDTEXP(,@08)                                    0813
         LA    @01,@AL00001                                        0813
         BALR  @14,@15                                             0813
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER WITH A RETURN CODE OF FOUR IF AN     #Y30LB37*/
*   /* ERROR OCCURRED OR ZERO IF SUCCESSFUL.                 #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0814
*   IF TESTRC^=0 THEN                                              0814
@RF00812 LTR   TESTRC,TESTRC                                       0814
         BZ    @RF00814                                            0814
*     RDLABRC=4;                    /*                       #Y30LB37*/
         LA    RDLABRC,4                                           0815
*   ELSE                                                           0816
*     RDLABRC=0;                    /*                       #Y30LB37*/
         B     @RC00814                                            0816
@RF00814 SLR   RDLABRC,RDLABRC                                     0816
*   RETURN CODE(RDLABRC);           /* RETURN TO MAIN ROUTINE      0817
*                                                            #Y30LB37*/
@RC00814 LR    @15,RDLABRC                                         0817
         L     @14,@SA00008                                        0817
         LM    @00,@12,@SA00008+8                                  0817
         BR    @14                                                 0817
*   END RDLABEL;                    /* END OF RDLABEL TO READ A    0818
*                                      VIRTUAL VOLUME        #Y30LB37*/
*                                                                  0819
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - DEMNTVOL                               #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  FUNCTION - THIS IS THE CONTROLLING ROUTINE FOR          #Y30LB37*/
*/*             THE DEMOUNTING OF A 3330V VIRTUAL VOLUME.    #Y30LB37*/
*/*             IT PERFORMS THE SETUP AND CHECK TO SEE IF    #Y30LB37*/
*/*             THE VOLUME IS THE ONE TO BE DEMOUNTED AND    #Y30LB37*/
*/*             RETURNS IF IT IS NOT.  DEMNTVOL USES         #Y30LB37*/
*/*             SUBORDINATE FUNCTIONS ISSUEDMT, ENQDEQ       #Y30LB37*/
*/*             AND UCBPOST TO ACHIEVE THE DEMOUNTING 0F     #Y30LB37*/
*/*             A 3330V VOLUME.  IT ALSO, POSTS A UCB        #Y30LB37*/
*/*             AFTER THE DEMOUNTING OF THE VIRTUAL          #Y30LB37*/
*/*             VOLUME IF THE POST OPTION WAS SPECIFIED.     #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        #Y30LB37*/
*/*          SET UP THE DEMOUNT REQUEST. THE UCB IS          #Y30LB37*/
*/*          POINTED TO OUT OF THE MDAGL AND IS USED TO      #Y30LB37*/
*/*          CHECK THE VOLUME SERIAL MOUNTED.                #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A COMPLETED DEMOUNT           #Y30LB37*/
*/*          REQUEST AND A POSTED UCB IF SPECIFIED WITH      #Y30LB37*/
*/*          THE POST OPTION ALONG WITH THE DEMOUNT.         #Y30LB37*/
*/*          RETURN CODES IN REG 15 ARE AS FOLLOWS:          #Y30LB37*/
*/*          0 - SUCCESSFUL                                  #Y30LB37*/
*/*          4 - DEMOUNT WAS UNSUCCESSFUL                    #Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0819
*DEMNTVOL:                                                         0819
*   PROCEDURE(DMAGLPTR);            /*                       #Y30LB37*/
DEMNTVOL STM   @14,@12,@SA00009                                    0819
         MVC   @PC00009(4),0(@01)                                  0819
*                                                                  0820
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR DEMNTVOL                       #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0820
*   DCL                                                            0820
*     DEMNTRC FIXED(15);            /* DEMNTVOL RETURN CODE  #Y30LB37*/
*   DCL                                                            0821
*     DMAGLPTR PTR(31);             /* PTR TO MDAGL          #Y30LB37*/
*   DCL                                                            0822
*     MDPUAGLP PTR(31);             /* DEMOUNT PUAGL PTR     #Y30LB37*/
*   DCL                                                            0823
*     PUVOLSER CHAR(6) BASED(PULABELP);/* VOLSER IF MDPOST ON      0823
*                                                            #Y30LB37*/
*   DCL                                                            0824
*     SA6PUAGL BDY(WORD)            /* SA06'S SKELETON PUAGL #Y30LB37*/
*         CHAR(LENGTH(PUAGL));      /* FOR POSTING           #Y30LB37*/
*   DCL                                                            0825
*     SA6PUVOL CHAR(6);             /* VOLUME SERIAL NUMBER  #Y30LB37*/
*   DCL                                                            0826
*     SA6PUTTR CHAR(4);             /* TTR TO THE VTOC       #Y30LB37*/
*   DCL                                                            0827
*     WTOPTR POINTER(31);           /* WTO MSG POINTER       @ZA00698*/
*   DCL                                                            0828
*     WTOLEN FIXED(15);             /* LENGTH OF WTO MSG     @ZA00698*/
*   DCL                                                            0829
*     WTOMSG CHAR(72);              /* UWTO MESSAGE AREA     @ZA00698*/
*                                                                  0830
*   /*****************************************************************/
*   /*                                                               */
*   /* THE UCB IS INTERROGATED TO DETERMINE IF THE UNIT      #Y30LB37*/
*   /* IS READY (INDICATING A VOLUME IS MOUNTED) AND THE     #Y30LB37*/
*   /* VOLUME IS THE VOLUME TO BE DEMOUNTED. IF SO DEMOUNT   #Y30LB37*/
*   /* THE VOLUME.                                           #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0830
*   RFY                                                            0830
*     MDAGL BASED(DMAGLPTR);        /*                       #Y30LB37*/
*   OLDERID2=NEWERID2;                                             0831
         L     @08,@PC00001                                        0831
         L     @08,GDTTR2(,@08)                                    0831
         MVC   @TS00001(95),NEWERID2(@08)                          0831
         MVC   OLDERID2(95,@08),@TS00001                           0831
*   NEWID2='SADM';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@08),@CC02819                              0832
*   DEMNTRC=0;                      /*                       #Y30LB37*/
         SLR   DEMNTRC,DEMNTRC                                     0833
*   IF(UCBNOTRD=OFF&UCBVOLI=MDLABEL)×/*                      @ZA00678*/
*       MNTSTATS=MNTERROR×          /*                       @ZA09522*/
*       MDFORCE=ON THEN             /*                       @ZA09522*/
         TM    UCBNOTRD(UCBPTR),B'01000000'                        0834
         BNZ   @GL00016                                            0834
         L     @08,@PC00009                                        0834
         L     @08,DMAGLPTR(,@08)                                  0834
         CLC   UCBVOLI(6,UCBPTR),MDLABEL(@08)                      0834
         BE    @RT00834                                            0834
@GL00016 CLC   MNTSTATS(8),MNTERROR                                0834
         BE    @RT00834                                            0834
         L     @08,@PC00009                                        0834
         L     @08,DMAGLPTR(,@08)                                  0834
         TM    MDFORCE(@08),B'00000010'                            0834
         BNO   @RF00834                                            0834
@RT00834 DS    0H                                                  0835
*     DO;                           /*                       #Y30LB37*/
*       CALL ISSUEDMT(DMAGLPTR);    /*                       #Y30LB37*/
         L     @08,@PC00009                                        0836
         ST    @08,@AL00001                                        0836
         LA    @01,@AL00001                                        0836
         BAL   @14,ISSUEDMT                                        0836
*       RESPECIFY                                                  0837
*         RTNREG RSTD;                                             0837
*       TESTRC=RTNREG;                                             0838
         LR    TESTRC,RTNREG                                       0838
*       RESPECIFY                                                  0839
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*                                                                  0839
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE ERROR MESSAGE IDC2388I OR IDC2389I IF       #Y30LB37*/
*       /* A DEMOUNT OR DESTAGING FAILURE RESPECTIVELY.      #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0840
*       IF TESTRC^=0 THEN                                          0840
         LTR   TESTRC,TESTRC                                       0840
         BZ    @RF00840                                            0840
*         DO;                       /*                       #Y30LB37*/
*           IF TESTRC=4×TESTRC=8 THEN/*                      @ZA00698*/
         C     TESTRC,@CF00042                                     0842
         BE    @RT00842                                            0842
         C     TESTRC,@CF00179                                     0842
         BNE   @RF00842                                            0842
@RT00842 DS    0H                                                  0843
*             DARGSENT=MSG2388I;    /*                       #Y30LB37*/
         L     @08,DDSTRU                                          0843
         MVI   DARGSENT(@08),X'08'                                 0843
*           ELSE                                                   0844
*             DARGSENT=MSG2389I;    /*                       #Y30LB37*/
         B     @RC00842                                            0844
@RF00842 L     @08,DDSTRU                                          0844
         MVI   DARGSENT(@08),X'09'                                 0844
*           DARGSMOD=MSGMODID;      /*                       #Y30LB37*/
@RC00842 L     @08,DDSTRU                                          0845
         MVC   DARGSMOD(3,@08),@CC02595                            0845
*           DARGDBP=ADDR(MDLABEL);  /*                       #Y30LB37*/
         L     @03,@PC00009                                        0846
         L     @03,DMAGLPTR(,@03)                                  0846
         LA    @03,MDLABEL(,@03)                                   0846
         ST    @03,DARGDBP(,@08)                                   0846
*           DARGILP=VOLSERLN;       /*                       #Y30LB37*/
         MVC   DARGILP(2,@08),@CH00156                             0847
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          #Y30LB37*/
         L     @08,@PC00001                                        0848
         ST    @08,@AL00001                                        0848
         LA    @03,@CF00115                                        0848
         ST    @03,@AL00001+4                                      0848
         LA    @03,DDSTRU                                          0848
         ST    @03,@AL00001+8                                      0848
         MVI   @AL00001+8,X'80'                                    0848
         L     @15,GDTPRT(,@08)                                    0848
         LA    @01,@AL00001                                        0848
         BALR  @14,@15                                             0848
*           DEMNTRC=4;              /*                       #Y30LB37*/
         LA    DEMNTRC,4                                           0849
*         END;                      /*                       #Y30LB37*/
*                                                                  0851
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE RETURN CODE FROM ISSUEDMT IS 8, THE        @ZA00698*/
*       /* DEMOUNT WAS NOT PERFORMED, THEREFORE NOTHING      @ZA00698*/
*       /* MORE IS REQUIRED.                                 @ZA00698*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0851
*       IF TESTRC=8 THEN            /*                       @ZA00698*/
@RF00840 C     TESTRC,@CF00179                                     0851
         BE    @RT00851                                            0851
*         ;                         /*                       @ZA00698*/
*       ELSE                        /*                       @ZA00698*/
*                                                                  0853
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE DEMOUNT FAILED, ISSUE USYSINFO AND UWTO  @ZA00698*/
*         /* TO SEND THE OPERATOR MESSAGE IDC394I.           @ZA00698*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0853
*         IF TESTRC=4 THEN                                         0853
         C     TESTRC,@CF00042                                     0853
         BNE   @RF00853                                            0853
*           DO;                     /*                       @ZA00698*/
*             WTOPTR=ADDR(WTOMSG);  /*                       @ZA00698*/
*                                                                  0855
         LA    @08,WTOMSG                                          0855
         ST    @08,WTOPTR                                          0855
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE USYSINFO MACRO TO OBTAIN JOBNAME AND  @ZA00698*/
*             /* STEPNAME TO BE USED IN MESSAGE IDC394I.     @ZA00698*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0856
*             CALL IDCSASI0(GDTTBL,NAMES,ADDR(SYSIN));/*     @ZA00698*/
*                                                                  0856
         L     @08,@PC00001                                        0856
         ST    @08,@AL00001                                        0856
         LA    @15,NAMES                                           0856
         ST    @15,@AL00001+4                                      0856
         LA    @15,SYSIN                                           0856
         ST    @15,@AFTEMPS                                        0856
         LA    @15,@AFTEMPS                                        0856
         ST    @15,@AL00001+8                                      0856
         MVI   @AL00001+8,X'80'                                    0856
         L     @15,GDTSFO(,@08)                                    0856
         LA    @01,@AL00001                                        0856
         BALR  @14,@15                                             0856
*             /*******************************************************/
*             /*                                                     */
*             /* INITIIALIZE DARGLIST WITH MULTIPLE INSERTS  @ZA00698*/
*             /* FOR MESSAGE IDC394I.                        @ZA00698*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0857
*             DARGSMOD=MSGMODID;    /*                       @ZA00698*/
         L     @08,DDSTRU                                          0857
         MVC   DARGSMOD(3,@08),@CC02595                            0857
*             DARGSENT=MSG394I;     /*                       @ZA00698*/
         MVI   DARGSENT(@08),X'0E'                                 0858
*             DARGDBP=ADDR(JOBNAM); /*                       @ZA00698*/
         LA    @15,JOBNAM                                          0859
         ST    @15,DARGDBP(,@08)                                   0859
*             DARGILP=LENGTH(JOBNAM);/*                      @ZA00698*/
         LA    @15,8                                               0860
         STH   @15,DARGILP(,@08)                                   0860
*             DARGRETP=WTOPTR;      /*                       @ZA00698*/
         L     @14,WTOPTR                                          0861
         ST    @14,DARGRETP(,@08)                                  0861
*             DARGRETL=LENGTH(WTOMSG);/*                     @ZA00698*/
         MVC   DARGRETL(2,@08),@CH02817                            0862
*                                                                  0863
*             /*******************************************************/
*             /*                                                     */
*             /* MESSAGE IDC394I IS WRITTEN WITH 1 DATA      @ZA00698*/
*             /* BLOCK AND FOUR INSERTS. THE DATA BLOCK WILL @ZA00698*/
*             /* BE THE JOB NAME. THE FOUR INSERTS ARE:      @ZA00698*/
*             /* STEP NAME, UCB ADDRESS, VOLUME SERIAL       @ZA00698*/
*             /* AND REASON CODE.                            @ZA00698*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0863
*             DARGCNT='4'X;         /*                       @ZA00698*/
         LA    @14,4                                               0863
         STH   @14,DARGCNT(,@08)                                   0863
*             DARGINS(1)='1'X;      /*                       @ZA00698*/
         LA    @07,1                                               0864
         STH   @07,DARGINS(,@08)                                   0864
*             DARGINL(1)=LENGTH(STEPNM);/*                   @ZA00698*/
         STH   @15,DARGINL(,@08)                                   0865
*             DARGDTM(1)=ADDR(STEPNM);/*                     @ZA00698*/
         LA    @15,STEPNM                                          0866
         ST    @15,DARGDTM(,@08)                                   0866
*             DARGINS(2)='2'X;      /*                       @ZA00698*/
         LA    @15,2                                               0867
         STH   @15,DARGINS+8(,@08)                                 0867
*             DARGINL(2)=VOLSERLN;  /*                       @ZA00698*/
         MVC   DARGINL+8(2,@08),@CH00156                           0868
*             DARGDTM(2)=ADDR(MDLABEL);/*                    @ZA00698*/
         L     @15,@PC00009                                        0869
         L     @01,DMAGLPTR(,@15)                                  0869
         LA    @15,MDLABEL(,@01)                                   0869
         ST    @15,DARGDTM+8(,@08)                                 0869
*             DARGINS(3)='3'X;      /*                       @ZA00698*/
         LA    @15,3                                               0870
         STH   @15,DARGINS+16(,@08)                                0870
*             DARGINL(3)=LENGTH(UCBNAME);/*                  @ZA00698*/
         MVC   DARGINL+16(2,@08),@CH00162                          0871
*             DARGDTM(3)=ADDR(UCBNAME);/*                    @ZA00698*/
         LA    @15,UCBNAME(,UCBPTR)                                0872
         ST    @15,DARGDTM+16(,@08)                                0872
*             DARGINS(4)='4'X;      /*                       @ZA00698*/
         STH   @14,DARGINS+24(,@08)                                0873
*             DARGINL(4)=LENGTH(REASON);/*                   @ZA00698*/
         MVC   DARGINL+24(2,@08),@CH00153                          0874
*             DARGDTM(4)=ADDR(REASON);/*                     @ZA00698*/
*                                                                  0875
         LA    @15,REASON                                          0875
         ST    @15,DARGDTM+24(,@08)                                0875
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE UPRINT TO PUT MSG INTO MESSAGE AREA   @ZA00698*/
*             /* FOR UWTO.                                   @ZA00698*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0876
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @ZA00698*/
*                                                                  0876
         L     @08,@PC00001                                        0876
         ST    @08,@AL00001                                        0876
         LA    @15,@CF00115                                        0876
         ST    @15,@AL00001+4                                      0876
         LA    @15,DDSTRU                                          0876
         ST    @15,@AL00001+8                                      0876
         MVI   @AL00001+8,X'80'                                    0876
         L     @15,GDTPRT(,@08)                                    0876
         LA    @01,@AL00001                                        0876
         BALR  @14,@15                                             0876
*             /*******************************************************/
*             /*                                                     */
*             /* SET MESSAGE LENGTH AND ROUTING AND DES-     @ZA00698*/
*             /* CRIPTOR CODES FOR UWTO MACRO. ISSUE UWTO    @ZA00698*/
*             /* MACRO TO WRITE MESSAGE IDC394I TO THE       @ZA00698*/
*             /* SYSTEM OPERATOR.                            @ZA00698*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0877
*             WTOLEN=LENGTH(WTOMSG);/*                       @ZA00698*/
         MVC   WTOLEN(2),@CH02817                                  0877
*             ROUTCD=''B;           /*                       @ZA00698*/
         XC    ROUTCD(2),ROUTCD                                    0878
*             CD1=ON;               /*                       @ZA00698*/
         OI    CD1,B'10000000'                                     0879
*             DESCCD=''B;           /*                       @ZA00698*/
         XC    DESCCD(2),DESCCD                                    0880
*             DESC4=ON;             /*                       @ZA00698*/
         OI    DESC4,B'00010000'                                   0881
*             CALL IDCSAWO0(GDTTBL,WTOLEN,WTOPTR,ROUTCD,DESCCD);/* 0882
*                                                            @ZA00698*/
         L     @08,@PC00001                                        0882
         ST    @08,@AL00001                                        0882
         LA    @15,WTOLEN                                          0882
         ST    @15,@AL00001+4                                      0882
         LA    @15,WTOPTR                                          0882
         ST    @15,@AL00001+8                                      0882
         LA    @15,ROUTCD                                          0882
         ST    @15,@AL00001+12                                     0882
         LA    @15,DESCCD                                          0882
         ST    @15,@AL00001+16                                     0882
         MVI   @AL00001+16,X'80'                                   0882
         L     @15,GDTWTO(,@08)                                    0882
         LA    @01,@AL00001                                        0882
         BALR  @14,@15                                             0882
*           END;                    /*                       @ZA00698*/
*         ELSE                      /*                       @ZA00698*/
*                                                                  0884
*           /*********************************************************/
*           /*                                                       */
*           /* THIS PORTION OF THE CODE IS EXECUTED IF THE   @ZA00698*/
*           /* DEMOUNT(ISSUEDMT) WAS SUCCESSFUL OR IF A      @ZA00698*/
*           /* DESTAGE ERROR OCCURS.                         @ZA00698*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0884
*           DO;                     /*                       @ZA00698*/
*                                                                  0884
         B     @RC00853                                            0884
@RF00853 DS    0H                                                  0885
*             /*******************************************************/
*             /*                                                     */
*             /* CALL UCBPOST TO CLEAR THE VIRTUAL UCB TO    #Y30LB37*/
*             /* ZEROS UNLESS AN ERROR OCCURRED. THEN TURN   @ZA00698*/
*             /* OFF THE BIT IN THE STAE PARM LIST THAT      #Y30LB37*/
*             /* INDICATES A VOLUME IS DEMOUNTED BUT THE UCB #Y30LB37*/
*             /* IS NOT CLEARED.                             #Y30LB37*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0885
*             MDPUAGLP=ADDR(SA6PUAGL);/*                     #Y30LB37*/
         LA    @08,SA6PUAGL                                        0885
         ST    @08,MDPUAGLP                                        0885
*             MDPUAGLP->PUHEAD=CLEAR;/*                      #Y30LB37*/
         MVC   PUHEAD(8,@08),CLEAR                                 0886
*             MDPUAGLP->PUUCBPTR=MDUCBPTR;/*                 #Y30LB37*/
         L     @15,@PC00009                                        0887
         L     @01,DMAGLPTR(,@15)                                  0887
         L     @15,MDUCBPTR(,@01)                                  0887
         ST    @15,PUUCBPTR(,@08)                                  0887
*             MDPUAGLP->PUTTRPTR=ADDR(SA6PUTTR);/*           #Y30LB37*/
         LA    @15,SA6PUTTR                                        0888
         ST    @15,PUTTRPTR(,@08)                                  0888
*             MDPUAGLP->PULABELP=ADDR(SA6PUVOL);/*           #Y30LB37*/
         LA    @15,SA6PUVOL                                        0889
         ST    @15,PULABELP(,@08)                                  0889
*             CALL UCBPOST(CLEAR,MDPUAGLP);/*                #Y30LB37*/
         LA    @08,CLEAR                                           0890
         ST    @08,@AL00001                                        0890
         LA    @08,MDPUAGLP                                        0890
         ST    @08,@AL00001+4                                      0890
         LA    @01,@AL00001                                        0890
         BAL   @14,UCBPOST                                         0890
*             RESPECIFY                                            0891
*               RTNREG RSTD;                                       0891
*             TESTRC=RTNREG;                                       0892
         LR    TESTRC,RTNREG                                       0892
*             RESPECIFY                                            0893
*               RTNREG UNRSTD;      /*                       #Y30LB37*/
*             STAVDMNT=OFF;         /* TURN OFF DMNT RECOVERY      0894
*                                                            #Y30LB37*/
*                                                                  0894
         L     @08,@PC00001                                        0894
         L     @08,GDTSAH(,@08)                                    0894
         L     @08,SAHSTA(,@08)                                    0894
         NI    STAVDMNT(@08),B'10111111'                           0894
*             /*******************************************************/
*             /*                                                     */
*             /* DEQ IF MDENQ AND MDDEQ FLAGS ARE ON         @YD00175*/
*             /* INDICATING AN ENQUEUE WAS DONE DURING THE   @YD00175*/
*             /* PREVIOUS MOUNT AND THIS IS THE FINAL        @YD00175*/
*             /* DEMOUNT OF THE VOLUME.                      @YD00175*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0895
*             IF MDENQ=ON&MDDEQ=ON THEN                            0895
         L     @08,@PC00009                                        0895
         L     @01,DMAGLPTR(,@08)                                  0895
         TM    MDENQ(@01),B'00001100'                              0895
         BNO   @RF00895                                            0895
*               CALL ENQDEQ(DEQCMD,DMAGLPTR);/*              #Y30LB37*/
         LA    @15,DEQCMD                                          0896
         ST    @15,@AL00001                                        0896
         ST    @08,@AL00001+4                                      0896
         LA    @01,@AL00001                                        0896
         BAL   @14,ENQDEQ                                          0896
*           END;                    /*                       #Y30LB37*/
@RF00895 DS    0H                                                  0898
*     END;                          /*                       @ZA00698*/
@RC00853 DS    0H                                                  0898
@RT00851 DS    0H                                                  0899
*                                                                  0899
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THIS IS A POST WITH DEMOUNT OPTION CALL            #Y30LB37*/
*   /* UCBPOST TO POST THE REAL UCB.                         #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0899
*   IF MDPOST=ON THEN                                              0899
@RF00834 L     @08,@PC00009                                        0899
         L     @08,DMAGLPTR(,@08)                                  0899
         TM    MDPOST(@08),B'00100000'                             0899
         BNO   @RF00899                                            0899
*     DO;                           /*                       #Y30LB37*/
*       MDPUAGLP=MDPUAGL;           /*                       #Y30LB37*/
         L     @08,MDPUAGL(,@08)                                   0901
         ST    @08,MDPUAGLP                                        0901
*       CALL UCBPOST(POST,MDPUAGLP);/*                       #Y30LB37*/
         LA    @08,POST                                            0902
         ST    @08,@AL00001                                        0902
         LA    @08,MDPUAGLP                                        0902
         ST    @08,@AL00001+4                                      0902
         LA    @01,@AL00001                                        0902
         BAL   @14,UCBPOST                                         0902
*       RESPECIFY                                                  0903
*         RTNREG RSTD;                                             0903
*       TESTRC=RTNREG;                                             0904
         LR    TESTRC,RTNREG                                       0904
*       RESPECIFY                                                  0905
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*       STACLEAR=OFF;               /* TURN OFF RECOVERY     #Y30LB37*/
         L     @08,@PC00001                                        0906
         L     @08,GDTSAH(,@08)                                    0906
         L     @08,SAHSTA(,@08)                                    0906
         NI    STACLEAR(@08),B'11110111'                           0906
*     END;                          /*                       #Y30LB37*/
*   RETURN CODE(DEMNTRC);           /* RETURN TO MAIN ROUTINE      0908
*                                                            #Y30LB37*/
@RF00899 LR    @15,DEMNTRC                                         0908
         L     @14,@SA00009                                        0908
         LM    @00,@12,@SA00009+8                                  0908
         BR    @14                                                 0908
*   END DEMNTVOL;                   /* END OF DEMNTVOL TO DEMOUNT A
*                                      VIRTUAL VOLUME        #Y30LB37*/
*                                                                  0910
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - ISSUEDMT                               #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  FUNCTION - THIS IS THE ROUTINE THAT ISSUES THE          #Y30LB37*/
*/*             USSC MACRO WITH DELAYED RESPONSE IF THE      #Y30LB37*/
*/*             CALLER SPECIFIES IT, OR THE NORMAL USSC      #Y30LB37*/
*/*             DEMOUNT MACRO WITHOUT DELAYED RESPONSE FOR   #Y30LB37*/
*/*             THE DEMOUNTING OF A 3330V VIRTUAL VOLUME.    #Y30LB37*/
*/*             IT ALSO CALLS SSCMSG IF AN ERROR OCCURS      #Y30LB37*/
*/*             DURING THE DEMOUNTING OF THE VIRTUAL         #Y30LB37*/
*/*             VOLUME.                                      #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        #Y30LB37*/
*/*          ISSUE THE DEMOUNT MACRO.  THE MDWAIT FLAG       #Y30LB37*/
*/*          SET BY THE CALLER IN THE MDAGL IS USED TO       #Y30LB37*/
*/*          DETERMINE IF DELAYED RESPONSE IS REQUIRED.      #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A ISSUED DEMOUNT MACRO        #Y30LB37*/
*/*          AND USSC ERROR MESSAGES PRINTED IF AN ERROR     #Y30LB37*/
*/*          OCCURRED DURING THE DEMOUNT.                    #Y30LB37*/
*/*          RETURN CODES ARE AS FOLLOWS:                    #Y30LB37*/
*/*          0 - SUCCESSFUL                                  #Y30LB37*/
*/*          4 - DEMOUNT WAS UNSUCCESSFUL                    #Y30LB37*/
*/*          8 - DEMOUNT NOT DONE - NO CORE(USSC)            @ZA00698*/
*/*          12 - DESTAGING WAS UNSUCCESSFUL                 #Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0910
*ISSUEDMT:                                                         0910
*   PROCEDURE(IDMDAGLP);            /*                       #Y30LB37*/
*                                                                  0910
ISSUEDMT STM   @14,@12,@SA00010                                    0910
         MVC   @PC00010(4),0(@01)                                  0910
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR ISSUEDMT                       #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0911
*   DCL                                                            0911
*     ISUEDRC FIXED(15);            /* ISSUEDMT RETURN CODE  #Y30LB37*/
*   DCL                                                            0912
*     IDMDAGLP PTR(31);             /* PTR TO MDAGL          #Y30LB37*/
*   DCL                                                            0913
*     DMNTLPTR PTR(31);             /* PTR TO THE DMNTLIST   #Y30LB37*/
*                                                                  0914
*   /*****************************************************************/
*   /*                                                               */
*   /* ********************************************************      */
*   /*                                                       @Y30LB02*/
*   /* MACMEAN MSSC DEMOUNT MACRO                            @Y30LB02*/
*   /* VS1-4/VS2-3 VERSION--01/19/76 LEVEL 00                @ZDR2048*/
*   /* THIS IS THE UNINITIALIZED LIST FORM                   @Y30LB02*/
*   /* ********************************************************      */
*   /*                                                       @Y30LB02*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0914
*   DCL                                                            0914
*     1 DMNTLIST BASED(DMNTLPTR),   /* DEMOUNT REQUEST BLOCK @Y30LB02*/
*      2 DMLEN FIXED(31),           /* LENGTH OF DEMOUNT REQ BLK = 1C
*                                      HEX BYTES             @Y30LB02*/
*      2 DMOPCD FIXED(8),           /* DEMOUNT OPCODE = 06 HEX     0914
*                                                            @Y30LB02*/
*      2 DMNTRES1 CHAR(1),          /* RESERVED              @Y30LB02*/
*      2 DMNTFLAG BIT(16),          /* FLAGS AREA            @Y30LB02*/
*       3 DMBITRE1 BIT(1),          /* ONE RESERVED BIT      @YM02186*/
*       3 DMDELRSP BIT(1),          /* DEMOUNT DELAYED RESPONSE    0914
*                                      ATTRIBUTE             @YM02186*/
*       3 DMVUAVAL BIT(1),          /* DEMOUNT VUA VALID ATTRIBUTE 0914
*                                                            @ZDR2048*/
*       3 DMBITRES BIT(13),         /* THIRTEEN RESERVED BITS      0914
*                                                            @ZDR2048*/
*      2 DMVOL CHAR(6),             /* VOLID FIELD           @Y30LB02*/
*      2 DMNTASID CHAR(2),          /* ASID AREA             @Y30LB02*/
*      2 DMNTECB FIXED(31),         /* DEMOUNT EVENT CONTROL BLOCK 0914
*                                                            @Y30LB02*/
*      2 DMHOST CHAR(5),            /* 5-BYTE HOSTID AREA    @Y30LB02*/
*      2 DMNTRES2 CHAR(1),          /* RESERVED              @ZDR2048*/
*      2 DMNTVUA FIXED(15);         /* VIRTUAL UNIT ADDRESS  @ZDR2048
*                                                            #Y30LB37*/
*                                                                  0914
*   /*****************************************************************/
*   /*                                                               */
*   /* STORAGE AREA FOR DEMOUNT ARGUMENT LIST                #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0915
*   DCL                                                            0915
*     DEMNTLST CHAR(LENGTH(DMNTLIST))/* STORAGE AREA FOR     #Y30LB37*/
*         BDY(WORD);                /* DEMOUNT ARGUMENT LIST #Y30LB37*/
*                                                                  0916
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY MDAGL ON INPUT PARAMETER AND INITIALIZE     #Y30LB37*/
*   /* RETURN CODE AREA AND ISSUE UTRACE MACRO.              #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0916
*   RFY                                                            0916
*     MDAGL BASED(IDMDAGLP);        /*                       #Y30LB37*/
*   OLDERID2=NEWERID2;                                             0917
         L     @08,@PC00001                                        0917
         L     @05,GDTTR2(,@08)                                    0917
         MVC   @TS00001(95),NEWERID2(@05)                          0917
         MVC   OLDERID2(95,@05),@TS00001                           0917
*   NEWID2='SAID';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@05),@CC02849                              0918
*   DMNTLPTR=ADDR(DEMNTLST);        /* INIT ARGUMENT LIST PTR      0919
*                                                            #Y30LB37*/
         LA    @05,DEMNTLST                                        0919
         ST    @05,DMNTLPTR                                        0919
*   DEMNTLST=''B;                   /* CLEAR THE DEMOUNT LIST      0920
*                                                            #Y30LB37*/
         XC    DEMNTLST(28),DEMNTLST                               0920
*   ISUEDRC=0;                      /*                       #Y30LB37*/
         SLR   ISUEDRC,ISUEDRC                                     0921
*                                                                  0922
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE TYPE OF DEMOUNT THAT IS REQUESTED BY    #Y30LB37*/
*   /* CHECKING THE MDAGL MDWAIT FLAG TO DETERMINE IF THE    #Y30LB37*/
*   /* CALLER WISHES DELAYED RESPONSE ON THE DEMOUNT. IF     #Y30LB37*/
*   /* THE MDWAIT FLAG IS ON THIS INDICATES DELAYED          #Y30LB37*/
*   /* RESPONSE ON THE DEMOUNT.                              #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0922
*   IF MDWAIT=ON THEN                                              0922
         L     @15,@PC00010                                        0922
         L     @15,IDMDAGLP(,@15)                                  0922
         TM    MDWAIT(@15),B'00010000'                             0922
         BNO   @RF00922                                            0922
*     DO;                           /*                       #Y30LB37*/
*       DMDELRSP=ON;                /*                       #Y30LB37*/
         OI    DMDELRSP(@05),B'01000000'                           0924
*       DMVOL=MDLABEL;              /*                       #Y30LB37*/
*                                                                  0925
         MVC   DMVOL(6,@05),MDLABEL(@15)                           0925
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE USSC MACRO TO DEMOUNT THE VOLUME.           #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0926
*       CALL IDCSASS0(GDTTBL,DEMOUNT,DMNTLPTR,REASONCD,ECBCODE);/* 0926
*                                                            #Y30LB37*/
         ST    @08,@AL00001                                        0926
         LA    @05,DEMOUNT                                         0926
         ST    @05,@AL00001+4                                      0926
         LA    @05,DMNTLPTR                                        0926
         ST    @05,@AL00001+8                                      0926
         LA    @05,REASONCD                                        0926
         ST    @05,@AL00001+12                                     0926
         LA    @05,ECBCODE                                         0926
         ST    @05,@AL00001+16                                     0926
         MVI   @AL00001+16,X'80'                                   0926
         L     @15,GDTSSC(,@08)                                    0926
         LA    @01,@AL00001                                        0926
         BALR  @14,@15                                             0926
*       RESPECIFY                                                  0927
*         RTNREG RSTD;                                             0927
*       TESTRC=RTNREG;                                             0928
         LR    TESTRC,RTNREG                                       0928
*       RESPECIFY                                                  0929
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*                                                                  0929
*       /*************************************************************/
*       /*                                                           */
*       /* CALL SSCMSG TO PRINT AN ERROR MESSAGE IF RETURN   @ZA00698*/
*       /* CODE IS 4 ELSE SET RETURN CODE TO 8 IF USSC       @ZA00698*/
*       /* RETURN CODE IS 8 INDICATING NO CORE.              #Y30LB37*/
*       /* IF RETURN CODE IS 4 BUT REASON CODE IS VOLUME     @ZA00698*/
*       /* NOT MOUNTED (RC=57), LEAVE RETURN CODE 0.         @ZA00698*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0930
*       IF TESTRC=4&REASONCD='57'X THEN/*                    @ZA00698*/
         C     TESTRC,@CF00042                                     0930
         BNE   @RF00930                                            0930
         CLC   REASONCD(4),@CF02850                                0930
         BE    @RT00930                                            0930
*         ;                         /*                       @ZA00698*/
*       ELSE                        /*                       @ZA00698*/
*         IF TESTRC=4 THEN                                         0932
@RF00930 C     TESTRC,@CF00042                                     0932
         BNE   @RF00932                                            0932
*           DO;                     /*                       #Y30LB37*/
*             IF ECBCODE^=ECBZERO THEN                             0934
         CLC   ECBCODE(1),ECBZERO                                  0934
         BE    @RF00934                                            0934
*               ISUEDRC=RCNODSTG;   /*                       #Y30LB37*/
         LA    ISUEDRC,12                                          0935
*             ELSE                                                 0936
*               ISUEDRC=TESTRC;     /*                       #Y30LB37*/
         B     @RC00934                                            0936
@RF00934 LR    ISUEDRC,TESTRC                                      0936
*             CALL SSCMSG(REASONCD,ECBCODE);/*               #Y30LB37*/
@RC00934 LA    @08,REASONCD                                        0937
         ST    @08,@AL00001                                        0937
         LA    @08,ECBCODE                                         0937
         ST    @08,@AL00001+4                                      0937
         LA    @01,@AL00001                                        0937
         BAL   @14,SSCMSG                                          0937
*           END;                    /*                       #Y30LB37*/
*         ELSE                                                     0939
*           IF TESTRC=8 THEN                                       0939
         B     @RC00932                                            0939
@RF00932 C     TESTRC,@CF00179                                     0939
         BNE   @RF00939                                            0939
*             ISUEDRC=TESTRC;       /*                       @ZA00698*/
         LR    ISUEDRC,TESTRC                                      0940
*     END;                          /*                       #Y30LB37*/
*   ELSE                                                           0942
*     DO;                           /*                       #Y30LB37*/
         B     @RC00922                                            0942
@RF00922 DS    0H                                                  0943
*       DMVOL=MDLABEL;              /*                       #Y30LB37*/
*                                                                  0943
         L     @08,DMNTLPTR                                        0943
         L     @03,@PC00010                                        0943
         L     @03,IDMDAGLP(,@03)                                  0943
         MVC   DMVOL(6,@08),MDLABEL(@03)                           0943
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE USSC MACRO TO DEMOUNT THE VOLUME.           #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0944
*       CALL IDCSASS0(GDTTBL,DEMOUNT,DMNTLPTR,REASONCD);/*   #Y30LB37*/
         L     @08,@PC00001                                        0944
         ST    @08,@AL00001                                        0944
         LA    @03,DEMOUNT                                         0944
         ST    @03,@AL00001+4                                      0944
         LA    @03,DMNTLPTR                                        0944
         ST    @03,@AL00001+8                                      0944
         LA    @03,REASONCD                                        0944
         ST    @03,@AL00001+12                                     0944
         MVI   @AL00001+12,X'80'                                   0944
         L     @15,GDTSSC(,@08)                                    0944
         LA    @01,@AL00001                                        0944
         BALR  @14,@15                                             0944
*       RESPECIFY                                                  0945
*         RTNREG RSTD;                                             0945
*       TESTRC=RTNREG;                                             0946
         LR    TESTRC,RTNREG                                       0946
*       RESPECIFY                                                  0947
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*                                                                  0947
*       /*************************************************************/
*       /*                                                           */
*       /* CALL SSCMSG TO PRINT A ERROR MESSAGE IF FAILED.   #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0948
*       IF TESTRC=4 THEN                                           0948
         C     TESTRC,@CF00042                                     0948
         BNE   @RF00948                                            0948
*         CALL SSCMSG(REASONCD);    /*                       #Y30LB37*/
         LA    @08,REASONCD                                        0949
         ST    @08,@AL00001                                        0949
         LA    @01,@AL00001                                        0949
         BAL   @14,SSCMSG                                          0949
*       ISUEDRC=TESTRC;             /*                       #Y30LB37*/
@RF00948 LR    ISUEDRC,TESTRC                                      0950
*     END;                          /*                       #Y30LB37*/
*                                                                  0952
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE AND SET OFF STAEPARM TRACKING AREAS.       #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0952
*   STAVMNT=OFF;                    /* TURN OFF MOUNT BIT    #Y30LB37*/
@RC00922 DS    0H                                                  0953
*   STAVPOST=OFF;                   /* TURN OFF POST TRACKING      0953
*                                                            #Y30LB37*/
         L     @08,@PC00001                                        0953
         L     @08,GDTSAH(,@08)                                    0953
         L     @08,SAHSTA(,@08)                                    0953
         NI    STAVMNT(@08),B'01101111'                            0953
*   STAVVOL=MDLABEL;                /* INITIALIZE VOLSER     #Y30LB37*/
         L     @05,@PC00010                                        0954
         L     @05,IDMDAGLP(,@05)                                  0954
         MVC   STAVVOL(6,@08),MDLABEL(@05)                         0954
*   STAVUCB=MDUCBADR;               /* INITIALIZE UCB ADDRESS      0955
*                                                            #Y30LB37*/
*                                                                  0955
         L     @05,MDUCBPTR(,@05)                                  0955
         L     @05,MDUCBADR(,@05)                                  0955
         ST    @05,STAVUCB(,@08)                                   0955
*   /*****************************************************************/
*   /*                                                               */
*   /* IF DEMOUNT ORDER WAS ACCEPTED, SET FLAG.              @ZA00698*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0956
*   IF TESTRC=0×TESTRC=RCNODSTG THEN                               0956
         LTR   TESTRC,TESTRC                                       0956
         BZ    @RT00956                                            0956
         C     TESTRC,@CF00037                                     0956
         BNE   @RF00956                                            0956
@RT00956 DS    0H                                                  0957
*     STAVDMNT=ON;                  /* TURN ON DEMOUNT FLAG  @ZA00698*/
         L     @08,@PC00001                                        0957
         L     @08,GDTSAH(,@08)                                    0957
         L     @08,SAHSTA(,@08)                                    0957
         OI    STAVDMNT(@08),B'01000000'                           0957
*   IF MDENQ=ON THEN                                               0958
@RF00956 L     @08,@PC00010                                        0958
         L     @08,IDMDAGLP(,@08)                                  0958
         TM    MDENQ(@08),B'00001000'                              0958
         BNO   @RF00958                                            0958
*     DO;                           /*                       #Y30LB37*/
*       STATCB=TCBP;                /*                       #Y30LB37*/
         L     @08,@PC00001                                        0960
         L     @08,GDTSAH(,@08)                                    0960
         L     @08,SAHSTA(,@08)                                    0960
         L     @05,TCBP                                            0960
         ST    @05,STATCB(,@08)                                    0960
*       STAVENQ=ON;                 /*                       #Y30LB37*/
         OI    STAVENQ(@08),B'00100000'                            0961
*     END;                          /*                       #Y30LB37*/
*   RETURN CODE(ISUEDRC);           /* RETURN TO MAIN ROUTINE      0963
*                                                            #Y30LB37*/
@RF00958 LR    @15,ISUEDRC                                         0963
         L     @14,@SA00010                                        0963
         LM    @00,@12,@SA00010+8                                  0963
         BR    @14                                                 0963
*   END ISSUEDMT;                   /* END OF ISSUEDMT TO DEMOUNT A
*                                      VIRTUAL VOLUME        #Y30LB37*/
*                                                                  0965
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - ENQDEQ                                 #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  FUNCTION - THIS IS THE ROUTINE THAT ISSUES THE          #Y30LB37*/
*/*             DEQ MACRO IF THE REQUEST IS A DEQ, OR THE    #Y30LB37*/
*/*             ENQ MACRO IF CALLER SPECIFIED A ENQ REQUEST. #Y30LB37*/
*/*             THE ENQ MACRO IS ISSUED TO EXCLUSIVELY       #Y30LB37*/
*/*             CONTROL THE VOLUME SERIAL RESOURCE.          #Y30LB37*/
*/*             IT ALSO ISSUES MESSAGE IDC2390I IF AN        #Y30LB37*/
*/*             ERROR OCCURS ON THE ENQUEUE OF THE           #Y30LB37*/
*/*             VIRTUAL VOLUME.                              #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST MDAGL IS USED TO        #Y30LB37*/
*/*          ISSUE THE ENQ/DEQ MACRO.                        #Y30LB37*/
*/*                                                          #Y30LB37*/
*/*  OUTPUT- IS IN THE FORM OF A ISSUED ENQ/DEQ MACRO.       #Y30LB37*/
*/*          THE MDENQ FLAG IS SET ON IN THE MDAGL IF        #Y30LB37*/
*/*          AN ENQUEUE WAS PERFORMED: THE MDENQ FLAG IS     #Y30LB37*/
*/*          SET OFF IF A DEQUEUE WAS PERFORMED.             #Y30LB37*/
*/*          RETURN CODES ARE AS FOLLOWS:                    #Y30LB37*/
*/*          0 - SUCCESSFUL                                  #Y30LB37*/
*/*          4 - ENQ/DEQ WAS UNSUCCESSFUL                    #Y30LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0965
*ENQDEQ:                                                           0965
*   PROCEDURE(ORDER,EDAGLPTR);      /*                       #Y30LB37*/
ENQDEQ   STM   @14,@12,@SA00011                                    0965
         MVC   @PC00011(8),0(@01)                                  0965
*                                                                  0966
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR ENQDEQ                         #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0966
*   DCL                                                            0966
*     ENQDQRC FIXED(15);            /* ENQDEQ RETURN CODE    #Y30LB37*/
*   DCL                                                            0967
*     ORDER CHAR(8);                /* ENQDEQ REQUEST CODE   #Y30LB37*/
*   DCL                                                            0968
*     EDAGLPTR PTR(31);             /* ENQDEQ MDAGL PTR      #Y30LB37*/
*   DCL                                                            0969
*     ENQBEGIN CHAR(*) GEND;        /* ENQ LIST BEGINNING    #Y30LB37*/
*   DCL                                                            0970
*     DEQBEGIN CHAR(*) GEND;        /* DEQ LIST BEGINNING    #Y30LB37*/
*   DCL                                                            0971
*     TENQBEGN CHAR(*) GEND;        /* ENQ LIST BEGINNING    #Y30LB37*/
*   DCL                                                            0972
*     ENQLIST CHAR(*) GEND;         /* ENQUEUE GETMAINED     #Y30LB37*/
*   DCL                                                            0973
*     DEQLIST CHAR(*) GEND;         /* DEQUEUE GETMAINED     #Y30LB37*/
*   DCL                                                            0974
*     TENQLIST CHAR(*) GEND;        /* ENQUEUE GETMAINED     #Y30LB37*/
*   DCL                                                            0975
*     MAJNAME CHAR(8) STATIC        /* MAJOR ENQ / DEQ       #Y30LB37*/
*         INIT('SYSZVOLS');         /* RESOURCE NAME         #Y30LB37*/
*   DCL                                                            0976
*     VOLSER CHAR(6) BDY(WORD);     /* VOLSER FIELD FOR ENQ  #Y30LB37*/
*                                                                  0977
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTINUED LOCAL DECLARATIONS FOR ENQDEQ               #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0977
*   DCL                                                            0977
*     ENQCORE CHAR(*) STATIC LOCAL GEND;/* GEND CORE DECLARE #Y30LB37*/
*   DCL                                                            0978
*     DEQCORE CHAR(*) STATIC LOCAL GEND;/* GEND CORE DECLARE #Y30LB37*/
*   DCL                                                            0979
*     TENQCORE CHAR(*) STATIC LOCAL GEND;/* GEND CORE DECLARE      0979
*                                                            #Y30LB37*/
*   DCL                                                            0980
*     TENQLEN FIXED(31) STATIC LOCAL GEND;/* GEND LENGTH DCL #Y30LB37*/
*   DCL                                                            0981
*     ENQLEN FIXED(31) STATIC LOCAL GEND;/* GEND LENGTH DCL  #Y30LB37*/
*   DCL                                                            0982
*     DEQLEN FIXED(31) STATIC LOCAL GEND;/* GEND LENGTH DCL  #Y30LB37*/
*   GENERATE DATA DEFS(ENQCORE,DEQCORE,TENQCORE,TENQLEN,ENQLEN,DEQLEN)
*       REFS(MAJNAME);                                             0983
*   GENERATE DATA DEFS(ENQLIST,DEQLIST,TENQLIST,ENQBEGIN,DEQBEGIN, 0984
*       TENQBEGN) REFS(MAJNAME);                                   0984
*                                                                  0985
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY MDAGL ON INPUT PARAMETER AND INITIALIZE     #Y30LB37*/
*   /* RETURN CODE AREA AND ISSUE UTRACE MACRO.              #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0985
*   RFY                                                            0985
*     MDAGL BASED(EDAGLPTR);        /*                       #Y30LB37*/
*   OLDERID2=NEWERID2;                                             0986
         L     @08,@PC00001                                        0986
         L     @05,GDTTR2(,@08)                                    0986
         MVC   @TS00001(95),NEWERID2(@05)                          0986
         MVC   OLDERID2(95,@05),@TS00001                           0986
*   NEWID2='SAED';                  /*                       #Y30LB37*/
         MVC   NEWID2(4,@05),@CC02887                              0987
*   ENQDQRC=0;                      /*                       #Y30LB37*/
         SLR   ENQDQRC,ENQDQRC                                     0988
*                                                                  0989
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE ORDER KEYWORD FOR A ENQ COMMAND. IF AN      #Y30LB37*/
*   /* ENQ THEN ISSUE THE DIRECTED ENQUE TO THE INITIATOR'S  #Y30LB37*/
*   /* TCB. IF DEQ COMMAND THEN DO THE ELSE STEP.            #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0989
*   IF ORDER=ENQCMD THEN                                           0989
         L     @05,@PC00011                                        0989
         CLC   ORDER(8,@05),ENQCMD                                 0989
         BNE   @RF00989                                            0989
*     DO;                           /*                       #Y30LB37*/
*       VOLSER=MDLABEL;             /*                       #Y30LB37*/
         L     @15,@PC00011+4                                      0991
         L     @15,EDAGLPTR(,@15)                                  0991
         MVC   VOLSER(6),MDLABEL(@15)                              0991
*       ENQBEGIN(1:ENQLEN)=ENQCORE(1:ENQLEN);/*              #Y30LB37*/
         L     @14,ENQLEN                                          0992
         BCTR  @14,0                                               0992
         EX    @14,@SM03055                                        0992
*       STAVVOL=MDLABEL;            /*                       #Y30LB37*/
         L     @08,GDTSAH(,@08)                                    0993
         L     @08,SAHSTA(,@08)                                    0993
         MVC   STAVVOL(6,@08),MDLABEL(@15)                         0993
*       STATCB=TCBP;                /*                       #Y30LB37*/
         L     @15,TCBP                                            0994
         ST    @15,STATCB(,@08)                                    0994
*       STAVENQ=ON;                 /*                       #Y30LB37*/
         OI    STAVENQ(@08),B'00100000'                            0995
*LENQ1:                                                            0996
*       GENERATE REFS(MAJNAME,VOLSER,ENQLIST,TCBP);                0996
LENQ1    DS    0H                                                  0996
*                                                         /*#Y30LB37*/
         ENQ   (MAJNAME,VOLSER,E,6,SYSTEM),RET=USE,MF=(E,ENQLIST),    **
               TCB=TCBP            DIRECTED ENQUEUE
*       RESPECIFY                                                  0997
*         RTNREG RSTD;                                             0997
*       TESTRC=RTNREG;                                             0998
         LR    TESTRC,RTNREG                                       0998
*       RESPECIFY                                                  0999
*         RTNREG UNRSTD;            /*                       #Y30LB37*/
*       ENQDQRC=TESTRC;             /*                       #Y30LB37*/
*                                                                  1000
         LR    ENQDQRC,TESTRC                                      1000
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE ENQ WAS SUCCESSFUL, SET THE ENQ BIT IN     #Y30LB37*/
*       /* THE STAE PARAMETER LIST AND IN THE MDAGL.         #Y30LB37*/
*       /* IF THE ENQ WAS NOT SUCCESSFUL, SET THE ENQ        #Y30LB37*/
*       /* BIT OFF IN THE MDAGL AND THE STAEPARM.            #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1001
*       IF ENQDQRC=0 THEN                                          1001
         LTR   ENQDQRC,ENQDQRC                                     1001
         BNZ   @RF01001                                            1001
*         MDENQ=ON;                 /*                       #Y30LB37*/
         L     @08,@PC00011+4                                      1002
         L     @08,EDAGLPTR(,@08)                                  1002
         OI    MDENQ(@08),B'00001000'                              1002
*       ELSE                                                       1003
*         DO;                       /*                       #Y30LB37*/
         B     @RC01001                                            1003
@RF01001 DS    0H                                                  1004
*           MDENQ=OFF;              /*                       #Y30LB37*/
         L     @08,@PC00011+4                                      1004
         L     @08,EDAGLPTR(,@08)                                  1004
         NI    MDENQ(@08),B'11110111'                              1004
*           STAVENQ=OFF;            /*                       #Y30LB37*/
         L     @08,@PC00001                                        1005
         L     @08,GDTSAH(,@08)                                    1005
         L     @08,SAHSTA(,@08)                                    1005
         NI    STAVENQ(@08),B'11011111'                            1005
*         END;                      /*                       #Y30LB37*/
*                                                                  1007
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK THE RETURN CODE TO SEE IF ENQ WAS           #Y30LB37*/
*       /* SUCCESSFUL OR NOT. IF THE ENQ FAILED, THEN ISSUE  #Y30LB37*/
*       /* A ENQ TO CHECK IF THE VOLUME CAN BE SHARED.       #Y30LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1007
*       IF ENQDQRC^=0 THEN                                         1007
@RC01001 LTR   ENQDQRC,ENQDQRC                                     1007
         BZ    @RF01007                                            1007
*         DO;                       /*                       #Y30LB37*/
*           TENQBEGN(1:TENQLEN)=TENQCORE(1:TENQLEN);/*       #Y30LB37*/
         L     @08,TENQLEN                                         1009
         BCTR  @08,0                                               1009
         EX    @08,@SM03057                                        1009
*LENQ2:                                                            1010
*           GENERATE REFS(MAJNAME,VOLSER,TENQLIST,TCBP);           1010
LENQ2    DS    0H                                                  1010
*                                                         /*#Y30LB37*/
           ENQ (MAJNAME,VOLSER,S,6,SYSTEM),RET=TEST,MF=(E,TENQLIST),  **
               TCB=TCBP            ENQ FOR SHARED
*           RESPECIFY                                              1011
*             RTNREG RSTD;                                         1011
*           TESTRC=RTNREG;                                         1012
         LR    TESTRC,RTNREG                                       1012
*           RESPECIFY                                              1013
*             RTNREG UNRSTD;        /*                       #Y30LB37*/
*                                                                  1013
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK THE RETURN CODE TO SEE IF ENQ WAS       #Y30LB37*/
*           /* SUCCESSFUL OR NOT. IF THE ENQ WAS SUCCESSFUL  #Y30LB37*/
*           /* MEANS IT IS ENQUEUED FOR EXCL USE SO, THEN    #Y30LB37*/
*           /* ISSUE ERROR MESSAGE IDC2390I.                 #Y30LB37*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1014
*           IF TESTRC=0 THEN                                       1014
         LTR   TESTRC,TESTRC                                       1014
         BNZ   @RF01014                                            1014
*             DO;                   /*                       #Y30LB37*/
*               ENQDQRC=4;          /*                       #Y30LB37*/
         LA    ENQDQRC,4                                           1016
*               DARGSMOD=MSGMODID;  /*                       #Y30LB37*/
         L     @08,DDSTRU                                          1017
         MVC   DARGSMOD(3,@08),@CC02595                            1017
*               DARGSENT=MSG2390I;  /*                       #Y30LB37*/
         MVI   DARGSENT(@08),X'0A'                                 1018
*               DARGDBP=ADDR(MDLABEL);/*                     #Y30LB37*/
         L     @05,@PC00011+4                                      1019
         L     @05,EDAGLPTR(,@05)                                  1019
         LA    @05,MDLABEL(,@05)                                   1019
         ST    @05,DARGDBP(,@08)                                   1019
*               DARGILP=VOLSERLN;   /*                       #Y30LB37*/
         MVC   DARGILP(2,@08),@CH00156                             1020
*               CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*      #Y30LB37*/
         L     @08,@PC00001                                        1021
         ST    @08,@AL00001                                        1021
         LA    @05,@CF00115                                        1021
         ST    @05,@AL00001+4                                      1021
         LA    @05,DDSTRU                                          1021
         ST    @05,@AL00001+8                                      1021
         MVI   @AL00001+8,X'80'                                    1021
         L     @15,GDTPRT(,@08)                                    1021
         LA    @01,@AL00001                                        1021
         BALR  @14,@15                                             1021
*             END;                  /*                       #Y30LB37*/
*           ELSE                                                   1023
*             ENQDQRC=0;            /*                       #Y30LB37*/
         B     @RC01014                                            1023
@RF01014 SLR   ENQDQRC,ENQDQRC                                     1023
*         END;                      /*                       #Y30LB37*/
*     END;                          /*                       #Y30LB37*/
*                                                                  1026
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE ORDER KEYWORD FOR A DEQ COMMAND. IF AN      #Y30LB37*/
*   /* DEQ THEN ISSUE THE DEQUEUE TO THE INITIATOR'S         #Y30LB37*/
*   /* TCB. IF NOT A DEQUEUE THEN NO FUNCTION IS PERFORMED.  #Y30LB37*/
*   /* SET THE ENQ BIT OFF IN THE STAE PARAMETER LIST AND    #Y30LB37*/
*   /* IN THE MDAGL.                                         #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1026
*   ELSE                                                           1026
*     IF ORDER=DEQCMD THEN                                         1026
         B     @RC00989                                            1026
@RF00989 L     @08,@PC00011                                        1026
         CLC   ORDER(8,@08),DEQCMD                                 1026
         BNE   @RF01026                                            1026
*       DO;                         /*                       #Y30LB37*/
*         VOLSER=MDLABEL;           /*                       #Y30LB37*/
         L     @08,@PC00011+4                                      1028
         L     @08,EDAGLPTR(,@08)                                  1028
         MVC   VOLSER(6),MDLABEL(@08)                              1028
*         DEQBEGIN(1:DEQLEN)=DEQCORE(1:DEQLEN);/*            #Y30LB37*/
         L     @08,DEQLEN                                          1029
         BCTR  @08,0                                               1029
         EX    @08,@SM03059                                        1029
*LDEQ1:                                                            1030
*         GENERATE REFS(MAJNAME,VOLSER,TCBP,DEQLIST);              1030
LDEQ1    DS    0H                                                  1030
*                                                         /*#Y30LB37*/
         DEQ   (MAJNAME,VOLSER,6,SYSTEM),RET=HAVE,MF=(E,DEQLIST),     **
               TCB=TCBP            DEQ WITH HAVE OPTION
*         STAVENQ=OFF;              /*                       #Y30LB37*/
         L     @08,@PC00001                                        1031
         L     @08,GDTSAH(,@08)                                    1031
         L     @08,SAHSTA(,@08)                                    1031
         NI    STAVENQ(@08),B'11011111'                            1031
*         MDENQ=OFF;                /*                       #Y30LB37*/
         L     @08,@PC00011+4                                      1032
         L     @08,EDAGLPTR(,@08)                                  1032
         NI    MDENQ(@08),B'11110111'                              1032
*       END;                        /*                       #Y30LB37*/
*                                                                  1033
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO MAIN PROCEDURE.                             #Y30LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1034
*   RETURN CODE(ENQDQRC);           /* RETURN TO MAIN ROUTINE      1034
*                                                            #Y30LB37*/
@RF01026 DS    0H                                                  1034
@RC00989 LR    @15,ENQDQRC                                         1034
         L     @14,@SA00011                                        1034
         LM    @00,@12,@SA00011+8                                  1034
         BR    @14                                                 1034
*   END ENQDEQ;                     /* END OF ENQDEQ TO ENQ / DEQ A
*                                      VIRTUAL VOLUME        @Y30LB37*/
*                                                                  1036
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - FINDEXCL                               @YD00175*/
*/*                                                          @YD00175*/
*/*  FUNCTION - THIS ROUTINE DETERMINES IF THE VOLUME IS     @YD00175*/
*/*             ALLOCATED EXCLUSIVELY.  IF SO, RETURNS THE   @YD00175*/
*/*             UCB ADDRESS AND THE DDNAME FOR THE VOLUME    @YD00175*/
*/*             TO THE CALLER.  ISSUES ERROR MESSAGE         @YD00175*/
*/*             IDC3392I IF AN ERROR OCCURRS.                @YD00175*/
*/*                                                          @YD00175*/
*/*  INPUT - THE INPUT ARGUMENT LIST EXCLAGL IS USED TO      @YD00175*/
*/*          COMPARE VOLSER TO THE UCBVOLI FIELD.  THE UCB   @YD00175*/
*/*          ADDRESS IN THE EXCLAGL IS USED TO FIND THE UCB. @YD00175*/
*/*                                                          @YD00175*/
*/*  OUTPUT- ISSUE ERROR MESSAGE AND RETURN TO CALLER WITH   @YD00175*/
*/*          RETURN CODE IN REGISTER 15 AS FOLLOWS:          @YD00175*/
*/*          0 - SUCCESSFUL, DDNAME TO USE WAS FOUND, OR     @YD00175*/
*/*              THE VOLUME CAN BE DYNAMICALLY ALLOCATED.    @YD00175*/
*/*          4 - THE VOLUME IS ALLOCATED EXCLUSIVELY TO THIS @YD00175*/
*/*              JOB STEP BUT THERE IS NO UNIT AVAILABLE.    @YD00175*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1036
*FINDEXCL:                                                         1036
*   PROCEDURE(EXAGLPTR);            /*                       @YD00175*/
FINDEXCL STM   @14,@12,@SA00012                                    1036
         MVC   @PC00012(4),0(@01)                                  1036
*                                                                  1037
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR FINDEXCL                       @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1037
*   DCL                                                            1037
*     1 TCODE BASED(TESTRC),        /*                       @ZA11676*/
*      2 * CHAR(3),                 /*                       @ZA13046*/
*      2 TESTCODE FIXED(8);         /* RET CODE FROM ENQ     @ZA13046*/
*   DCL                                                            1038
*     ENQRC08 FIXED(8) CONSTANT(8); /* ENQ CODE 8            @ZA13046*/
*   DCL                                                            1039
*     FINDXRC FIXED(15);            /* FINDEXCL RETURN CODE  @YD00175*/
*   DCL                                                            1040
*     EXAGLPTR PTR(31);             /* FINDEXCL EXCLAGL PTR  @YD00175*/
*   DCL                                                            1041
*     MAJRNAM CHAR(8) STATIC        /* MAJOR ENQUEUE NAME    @YD00175*/
*         BDY(WORD) INIT('SYSZTIOT');/* INITIALIZED          @YD00175*/
*   DCL                                                            1042
*     1 MINRNAME,                   /* MINOR ENQUEUE NAME    @YD00175*/
*      2 MINRLEN FIXED(8),          /* LENGTH OF MINOR NAME  @YD00175*/
*      2 MINRASID CHAR(2),          /* ASID OF THIS JOB STEP @YD00175*/
*      2 MINRQDB CHAR(4);           /* QDB ADDRESS           @YD00175*/
*   DCL                                                            1043
*     ENQBEGN3 CHAR(*) GEND;        /* ENQ LIST BEGINNING    @YD00175*/
*   DCL                                                            1044
*     ENQLIST3 CHAR(*) GEND;        /* ENQUEUE GETMAINED     @YD00175*/
*   DCL                                                            1045
*     MAJNAME3 CHAR(8) STATIC       /* MAJOR ENQ / DEQ       @YD00175*/
*         INIT('SYSZVOLS');         /* RESOURCE NAME         @YD00175*/
*   DCL                                                            1046
*     VOLSER3 CHAR(6) BDY(WORD);    /* VOLSER FIELD FOR ENQ  @YD00175*/
*   DCL                                                            1047
*     ENQCORE3 CHAR(*) STATIC LOCAL GEND;/* GEND CORE DECLARE      1047
*                                                            @YD00175*/
*   DCL                                                            1048
*     ENQLEN3 FIXED(31) STATIC LOCAL GEND;/* GEND LENGTH DCL @YD00175*/
*   GENERATE DATA DEFS(ENQCORE3,ENQLEN3) REFS(MAJNAME3);           1049
*   GENERATE DATA DEFS(ENQLIST3,ENQBEGN3) REFS(MAJNAME3);          1050
*                                                                  1051
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY EXCLAGL ON INPUT PARAMETER AND INITIALIZE   @YD00175*/
*   /* RETURN CODE AREA AND ISSUE UTRACE MACRO.              @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1051
*   RFY                                                            1051
*     EXCLAGL BASED(EXAGLPTR);      /*                       @YD00175*/
*   OLDERID2=NEWERID2;                                             1052
         L     @08,@PC00001                                        1052
         L     @15,GDTTR2(,@08)                                    1052
         MVC   @TS00001(95),NEWERID2(@15)                          1052
         MVC   OLDERID2(95,@15),@TS00001                           1052
*   NEWID2='SAFE';                  /*                       @YD00175*/
         MVC   NEWID2(4,@15),@CC02921                              1053
*   FINDXRC=0;                      /*                       @YD00175*/
*                                                                  1054
         SLR   FINDXRC,FINDXRC                                     1054
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE POINTERS TO THE TCB, ASCB, QDB, AND DSAB.  @YD00175*/
*   /* SET MINOR LENGTH FOR UENQ MACRO.                      @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1055
*   ASCBPTR=PSAAOLD;                /*                       @YD00175*/
         L     ASCBPTR,PSAAOLD                                     1055
*   MINRASID=ASCBASID;              /*                       @YD00175*/
         MVC   MINRASID(2),ASCBASID(ASCBPTR)                       1056
*   TCBPTR=CURTCBP;                 /*                       @YD00175*/
         L     @01,CVTPTR                                          1057
         L     @01,TCBWDSP(,@01)                                   1057
         L     TCBPTR,CURTCBP(,@01)                                1057
*   TCBP=JSCBTCBP;                  /*                       @YD00175*/
         L     @15,TCBJSCB(,TCBPTR)                                1058
         L     @14,JSCBTCBP(,@15)                                  1058
         ST    @14,TCBP                                            1058
*   QDBPTR=JSCDSABQ;                /*                       @YD00175*/
         L     QDBPTR,JSCDSABQ(,@15)                               1059
*   DSABPTR=QDBFELMP;               /*                       @YD00175*/
         L     DSABPTR,QDBFELMP(,QDBPTR)                           1060
*   MINRQDB=QDBPTR;                 /*                       @YD00175*/
         STCM  QDBPTR,15,MINRQDB                                   1061
*   MINRLEN=LENGTH(MINRASID)+LENGTH(MINRQDB);/*              @YD00175*/
         MVI   MINRLEN,X'06'                                       1062
*                                                                  1063
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UENQ MACRO TO ENQUEUE ON THE TIOT AND WAIT.     @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1063
*   CALL IDCSANQ0(GDTTBL,SHR,WAIT,MAJRNAM,MINRNAME);/*       @YD00175*/
*                                                                  1063
         MVC   @AL00001+4(12),@AL01063                             1063
         ST    @08,@AL00001                                        1063
         LA    @15,MINRNAME                                        1063
         ST    @15,@AL00001+16                                     1063
         MVI   @AL00001+16,X'80'                                   1063
         L     @15,GDTENQ(,@08)                                    1063
         LA    @01,@AL00001                                        1063
         BALR  @14,@15                                             1063
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL SCANTIOT IF DSAB POINTER IS NOT ZEROS.           @YD00175*/
*   /* IF THERE ARE NO DD ENTRIES THEN RETURN TO CALLER      @YD00175*/
*   /* AFTER SETTING ON FOUNDVOL FLAG AND CLEARING ARGLIST.  @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1064
*   IF DSABPTR^=NULLPTR THEN                                       1064
         LTR   DSABPTR,DSABPTR                                     1064
         BZ    @RF01064                                            1064
*     CALL SCANTIOT(EXAGLPTR);      /*                       @YD00175*/
         L     @08,@PC00012                                        1065
         ST    @08,@AL00001                                        1065
         LA    @01,@AL00001                                        1065
         BAL   @14,SCANTIOT                                        1065
*   ELSE                                                           1066
*     DO;                           /*                       @YD00175*/
         B     @RC01064                                            1066
@RF01064 DS    0H                                                  1067
*       FOUNDVOL=ON;                /*                       @YD00175*/
         OI    FOUNDVOL,B'10000000'                                1067
*       EXDDNAME=''B;               /*                       @YD00175*/
         L     @08,@PC00012                                        1068
         L     @08,EXAGLPTR(,@08)                                  1068
         L     @05,EXCLDDP(,@08)                                   1068
         XC    EXDDNAME(8,@05),EXDDNAME(@05)                       1068
*       EXUCBADR=''B;               /*                       @YD00175*/
         L     @08,EXCLUCBP(,@08)                                  1069
         SLR   @05,@05                                             1069
         ST    @05,EXUCBADR(,@08)                                  1069
*     END;                          /*                       @YD00175*/
*                                                                  1071
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE THE TEST ENQUEUE TO THE INITIATOR'S TCB IF      @YD00175*/
*   /* THE CALLERS VOLSER WAS NOT FOUND.                     @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1071
*   IF FOUNDVOL=OFF THEN                                           1071
@RC01064 TM    FOUNDVOL,B'10000000'                                1071
         BNZ   @RF01071                                            1071
*     DO;                           /*                       @YD00175*/
*       VOLSER3=EXCLVOL;            /*                       @YD00175*/
         L     @08,@PC00012                                        1073
         L     @08,EXAGLPTR(,@08)                                  1073
         MVC   VOLSER3(6),EXCLVOL(@08)                             1073
*       ENQBEGN3(1:ENQLEN3)=ENQCORE3(1:ENQLEN3);/*           @YD00175*/
         L     @08,ENQLEN3                                         1074
         BCTR  @08,0                                               1074
         EX    @08,@SM03061                                        1074
*LENQ3:                                                            1075
*       GENERATE REFS(MAJNAME3,VOLSER3,ENQLIST3,TCBP);             1075
LENQ3    DS    0H                                                  1075
*                                                         /*@YD00175*/
         ENQ   (MAJNAME3,VOLSER3,E,6,SYSTEM),RET=TEST,                **
               MF=(E,ENQLIST3),TCB=TCBP  TEST ENQUEUE         @YD00175
*       RESPECIFY                                                  1076
*         RTNREG RSTD;                                             1076
*       TESTRC=RTNREG;                                             1077
         LR    TESTRC,RTNREG                                       1077
*       RESPECIFY                                                  1078
*         RTNREG UNRSTD;            /*                       @YD00175*/
*                                                                  1078
*       /*************************************************************/
*       /*                                                           */
*       /* IF RETURN CODE IS 8, OUR TASK HAS CONTROL OF THE  @YD00175*/
*       /* RESOURCE. THEREFORE, HAVE WE FOUND A NON-SHAR-    @YD00175*/
*       /* ABLE AND NON-CATALOG DD THAT WE CAN USE. IF       @YD00175*/
*       /* NOT ISSUE ERROR MESSAGE IDC3392I.                 @YD00175*/
*       /* NOTE THAT REG 15 CONTAINS THE ADDRESS OF THE      @ZA11676*/
*       /* REASON CODE RETURNED - NOT THE CODE ITSELF.       @ZA11676*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1079
*       IF TESTRC^=0 THEN           /*                       @ZA11676*/
         LTR   TESTRC,TESTRC                                       1079
         BZ    @RF01079                                            1079
*         IF TESTCODE=ENQRC08 THEN  /*                       @ZA13046*/
         CLI   TESTCODE(TESTRC),8                                  1080
         BNE   @RF01080                                            1080
*           DO;                     /*                       @YD00175*/
*             IF FOUNDADD=OFF THEN                                 1082
         TM    FOUNDADD,B'01000000'                                1082
         BNZ   @RF01082                                            1082
*               DO;                 /*                       @YD00175*/
*                 FINDXRC=LASTCC04; /*                       @YD00175*/
         LA    FINDXRC,4                                           1084
*                 EXDDNAME=''B;     /*                       @YD00175*/
         L     @08,@PC00012                                        1085
         L     @08,EXAGLPTR(,@08)                                  1085
         L     @05,EXCLDDP(,@08)                                   1085
         XC    EXDDNAME(8,@05),EXDDNAME(@05)                       1085
*                 EXUCBADR=''B;     /*                       @YD00175*/
         L     @05,EXCLUCBP(,@08)                                  1086
         SLR   @15,@15                                             1086
         ST    @15,EXUCBADR(,@05)                                  1086
*                 DARGSMOD=MSGMODID;/*                       @YD00175*/
         L     @05,DDSTRU                                          1087
         MVC   DARGSMOD(3,@05),@CC02595                            1087
*                 DARGSENT=MSG3392I;/*                       @YD00175*/
         MVI   DARGSENT(@05),X'0C'                                 1088
*                 DARGDBP=ADDR(EXCLVOL);/*                   @YD00175*/
         LA    @08,EXCLVOL(,@08)                                   1089
         ST    @08,DARGDBP(,@05)                                   1089
*                 DARGILP=VOLSERLN; /*                       @YD00175*/
         MVC   DARGILP(2,@05),@CH00156                             1090
*                 CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*    @YD00175*/
         L     @08,@PC00001                                        1091
         ST    @08,@AL00001                                        1091
         LA    @05,@CF00115                                        1091
         ST    @05,@AL00001+4                                      1091
         LA    @05,DDSTRU                                          1091
         ST    @05,@AL00001+8                                      1091
         MVI   @AL00001+8,X'80'                                    1091
         L     @15,GDTPRT(,@08)                                    1091
         LA    @01,@AL00001                                        1091
         BALR  @14,@15                                             1091
*               END;                /*                       @YD00175*/
*           END;                    /*                       @YD00175*/
*                                                                  1094
*       /*************************************************************/
*       /*                                                           */
*       /* IF RETURN CODE IS OTHER THAN 8 THEN RETURN A      @YD00175*/
*       /* CLEARED ARGLIST TO THE CALLER.                    @YD00175*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1094
*         ELSE                                                     1094
*           DO;                     /*                       @YD00175*/
         B     @RC01080                                            1094
@RF01080 DS    0H                                                  1095
*             EXDDNAME=''B;         /*                       @YD00175*/
         L     @08,@PC00012                                        1095
         L     @08,EXAGLPTR(,@08)                                  1095
         L     @05,EXCLDDP(,@08)                                   1095
         XC    EXDDNAME(8,@05),EXDDNAME(@05)                       1095
*             EXUCBADR=''B;         /*                       @YD00175*/
         L     @08,EXCLUCBP(,@08)                                  1096
         SLR   @05,@05                                             1096
         ST    @05,EXUCBADR(,@08)                                  1096
*           END;                    /*                       @YD00175*/
*       ELSE                                                       1098
*         DO;                       /*                       @ZA13046*/
         B     @RC01079                                            1098
@RF01079 DS    0H                                                  1099
*           EXDDNAME=''B;           /*                       @ZA13046*/
         L     @08,@PC00012                                        1099
         L     @08,EXAGLPTR(,@08)                                  1099
         L     @05,EXCLDDP(,@08)                                   1099
         XC    EXDDNAME(8,@05),EXDDNAME(@05)                       1099
*           EXUCBADR=''B;           /*                       @ZA13046*/
         L     @08,EXCLUCBP(,@08)                                  1100
         SLR   @05,@05                                             1100
         ST    @05,EXUCBADR(,@08)                                  1100
*         END;                      /*                       @ZA13046*/
*     END;                          /*                       @YD00175*/
*                                                                  1102
@RC01079 DS    0H                                                  1103
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UDEQ MACRO TO DEQUEUE ON THE TIOT AND RETURN.   @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1103
*   CALL IDCSADQ0(GDTTBL,MAJRNAM,MINRNAME);/*                @YD00175*/
@RF01071 L     @08,@PC00001                                        1103
         ST    @08,@AL00001                                        1103
         LA    @05,MAJRNAM                                         1103
         ST    @05,@AL00001+4                                      1103
         LA    @05,MINRNAME                                        1103
         ST    @05,@AL00001+8                                      1103
         MVI   @AL00001+8,X'80'                                    1103
         L     @15,GDTDEQ(,@08)                                    1103
         LA    @01,@AL00001                                        1103
         BALR  @14,@15                                             1103
*   RETURN CODE(FINDXRC);           /* RETURN TO MAIN ROUTINE      1104
*                                                            @YD00175*/
         LR    @15,FINDXRC                                         1104
         L     @14,@SA00012                                        1104
         LM    @00,@12,@SA00012+8                                  1104
         BR    @14                                                 1104
*   END FINDEXCL;                   /* END OF FINDEXCL TO LOCATE AN
*                                      EXCLUSIVE VOLUME      @YD00175*/
*                                                                  1106
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - SCANTIOT                               @YD00175*/
*/*                                                          @YD00175*/
*/*  FUNCTION - THIS ROUTINE SCANS THE TIOT TO (1) FIND IF   @YD00175*/
*/*             THE VOLUME IS MOUNTED OR IN THE JFCB, OR TO  @YD00175*/
*/*             (2) FIND A NON-SHARABLE UCB AND DD THAT      @YD00175*/
*/*             CAN BE USED FOR THE VOLUME TO BE MOUNTED IF  @YD00175*/
*/*             THE VOLUME IS NOT MOUNTED OR IN THE JFCB,    @YD00175*/
*/*             BUT IS ALLOCATED EXCLUSIVELY TO THIS JOB     @YD00175*/
*/*             STEP.                                        @YD00175*/
*/*                                                          @YD00175*/
*/*  INPUT - THE INPUT ARGUMENT LIST EXCLAGL IS USED TO      @YD00175*/
*/*          COMPARE VOLSER TO THE UCBVOLI FIELD.  THE UCB   @YD00175*/
*/*          ADDRESS IN THE EXCLAGL IS USED TO FIND THE UCB. @YD00175*/
*/*                                                          @YD00175*/
*/*  OUTPUT- INFORMATION RETURNED IN THE EXCLAGL AND BIT     @YD00175*/
*/*          SWITCHES AS FOLLOWS:                            @YD00175*/
*/*          FOUNDVOL = ON -                                 @YD00175*/
*/*            FOUNDVOL BIT ON IF THE CALLER'S VOLSER WAS    @YD00175*/
*/*            FOUND IN THE UCB OR JFCB.  THE CALLER'S AREAS @YD00175*/
*/*            WILL BE SET WITH (1) DDNAME AND UCB ADDRESS   @YD00175*/
*/*            IF THE UCB IS EXCLUSIVE AND VIRTUAL OR (2)    @YD00175*/
*/*            ZERO IF UCB IS NOT EXCLUSIVE OR NOT VIRTUAL.  @YD00175*/
*/*          FOUNDVOL = OFF & FOUNDADD = ON -                @YD00175*/
*/*            FOUNDVOL IS OFF AND FOUNDADD IS ON IF THE     @YD00175*/
*/*            CALLER'S VOLSER WAS NOT FOUND BUT A VIRTUAL,  @YD00175*/
*/*            NON-SHARABLE, NON-CATALOG DD HAS BEEN FOUND.  @YD00175*/
*/*            CALLER'S AREAS CONTAIN DDNAME AND UCB         @YD00175*/
*/*            ADDRESS.                                      @YD00175*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1106
*SCANTIOT:                                                         1106
*   PROCEDURE(SCAGLPTR);            /*                       @YD00175*/
SCANTIOT STM   @14,@12,@SA00013                                    1106
         MVC   @PC00013(4),0(@01)                                  1106
*                                                                  1107
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR SCANTIOT                       @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1107
*   DCL                                                            1107
*     SCAGLPTR PTR(31);             /* SCANTIOT EXCLAGL PTR  @YD00175*/
*   DCL                                                            1108
*     OPTINFO CHAR(LENGTH(IOINFOPT));/* UIOINFO OPTION FLAGS @YD00175*/
*   DCL                                                            1109
*     VOLSPTR PTR(31);              /* PTR TO UIOINFO AREA   @YD00175*/
*   DCL                                                            1110
*     1 INFOAREA BDY(WORD),         /* IOINFO RETURN AREA    @YD00175*/
*      2 INFOHEAD,                  /* HEADER INFORMATION    @YD00175*/
*       3 INWKLEN FIXED(15),        /* AREA LENGTH           @YD00175*/
*       3 RETNLEN FIXED(15),        /* RETURN AREA LENGTH    @YD00175*/
*      2 INFOTYPE FIXED(15),        /* DATA TYPE             @YD00175*/
*      2 DATALEN FIXED(15),         /* DATA LENGTH           @YD00175*/
*      2 VOLAREA(5) CHAR(6);        /* RETURNED VOLSERS      @YD00175*/
*                                                                  1110
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY EXCLAGL ON INPUT PARAMETER AND ISSUE        @YD00175*/
*   /* UTRACE MACRO.                                         @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1111
*   RFY                                                            1111
*     EXCLAGL BASED(SCAGLPTR);      /*                       @YD00175*/
*   RFY                                                            1112
*     IOINFOPT BASED(ADDR(OPTINFO));/*                       @YD00175*/
*   OLDERID2=NEWERID2;                                             1113
         L     @08,@PC00001                                        1113
         L     @08,GDTTR2(,@08)                                    1113
         MVC   @TS00001(95),NEWERID2(@08)                          1113
         MVC   OLDERID2(95,@08),@TS00001                           1113
*   NEWID2='SAST';                  /*                       @YD00175*/
         MVC   NEWID2(4,@08),@CC02942                              1114
*                                                                  1115
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE TIOT DSAB CHAIN FOR (1) A VOLSER IN THE UCB  @YD00175*/
*   /* OR IN THE JFCB THAT MATCHES THE CALLERS VOLSER OR     @YD00175*/
*   /* (2) A ZERO VOLSER THAT CAN BE USED FOR THE MOUNTING   @YD00175*/
*   /* OF A VOLUME.                                          @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1115
*SCANVOL:                                                          1115
*   DO WHILE FOUNDVOL=OFF&DSABPTR^=NULLPTR;/*                @YD00175*/
SCANVOL  B     @DE01115                                            1115
@DL01115 DS    0H                                                  1116
*     UCBPTR=TIOEFSRT;              /*                       @YD00175*/
         L     @08,DSABTIOT(,DSABPTR)                              1116
         L     UCBPTR,TIOEFSRT-1(,@08)                             1116
         LA    UCBPTR,0(,UCBPTR)                                   1116
*     IF UCBVOLI=EXCLVOL THEN                                      1117
         L     @08,@PC00013                                        1117
         L     @08,SCAGLPTR(,@08)                                  1117
         CLC   UCBVOLI(6,UCBPTR),EXCLVOL(@08)                      1117
         BNE   @RF01117                                            1117
*       FOUNDVOL=ON;                /*                       @YD00175*/
*                                                                  1118
         OI    FOUNDVOL,B'10000000'                                1118
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE UIOINFO MACRO FOR ZERO VOLSER VIRTUAL UCB     @YD00175*/
*     /* TO SEE IF IT IS THE CALLER'S VOLSER IN THE JFCB.    @YD00175*/
*     /* IGNORE DDNAMES THAT ARE BLANK.                      @ZM00733*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1119
*     IF UCBVOLI=ZEROVOL&UCBRVDEV=ON&TIOEDDNM^=BLANKDDN THEN       1119
@RF01117 CLC   UCBVOLI(6,UCBPTR),ZEROVOL                           1119
         BNE   @RF01119                                            1119
         TM    UCBRVDEV(UCBPTR),B'00001000'                        1119
         BNO   @RF01119                                            1119
         L     @08,DSABTIOT(,DSABPTR)                              1119
         CLC   TIOEDDNM(8,@08),BLANKDDN                            1119
         BE    @RF01119                                            1119
*       DO;                         /*                       @ZM00733*/
*         INFOAREA=''B;             /*                       @YD00175*/
         XC    INFOAREA(38),INFOAREA                               1121
*         IOINFOPT=''B;             /*                       @YD00175*/
         LA    @04,OPTINFO                                         1122
         MVI   IOINFOPT(@04),X'00'                                 1122
*         VOLSPTR=ADDR(INFOAREA);   /*                       @YD00175*/
         LA    @15,INFOAREA                                        1123
         ST    @15,VOLSPTR                                         1123
*         INWKLEN=LENGTH(INFOAREA); /*                       @YD00175*/
         MVC   INWKLEN(2),@CH03034                                 1124
*         IOINFVOL=ON;              /*                       @YD00175*/
         OI    IOINFVOL(@04),B'01000000'                           1125
*         CALL IDCIOSI0(GDTTBL,IOINFOPT,VOLSPTR,TIOEDDNM);/* @YD00175*/
         L     @15,@PC00001                                        1126
         ST    @15,@AL00001                                        1126
         ST    @04,@AL00001+4                                      1126
         LA    @04,VOLSPTR                                         1126
         ST    @04,@AL00001+8                                      1126
         LA    @08,TIOEDDNM(,@08)                                  1126
         ST    @08,@AL00001+12                                     1126
         MVI   @AL00001+12,X'80'                                   1126
         L     @15,GDTIFO(,@15)                                    1126
         LA    @01,@AL00001                                        1126
         BALR  @14,@15                                             1126
*                                                                  1127
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE CALLER'S VOLSER IS IN THE JFCB, SET      @YD00175*/
*         /* SWITCH TO INDICATE VOLUME FOUND. IF             @YD00175*/
*         /* CALLER'S VOLSER IS NOT IN JFCB, SET SWITCH      @YD00175*/
*         /* TO INDICATE A UCB WITH ZEROS IN THE VOLSER      @YD00175*/
*         /* HAS BEEN FOUND AND RETURN UCB ADDRESS AND       @YD00175*/
*         /* DDNAME TO CALLER IN THE EXCLAGL.                @YD00175*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1127
*         IF VOLAREA(1)=EXCLVOL THEN                               1127
         L     @08,@PC00013                                        1127
         L     @08,SCAGLPTR(,@08)                                  1127
         CLC   VOLAREA(6),EXCLVOL(@08)                             1127
         BNE   @RF01127                                            1127
*           FOUNDVOL=ON;            /*                       @YD00175*/
         OI    FOUNDVOL,B'10000000'                                1128
*         ELSE                                                     1129
*           IF FOUNDADD=OFF THEN                                   1129
         B     @RC01127                                            1129
@RF01127 TM    FOUNDADD,B'01000000'                                1129
         BNZ   @RF01129                                            1129
*             DO;                   /*                       @YD00175*/
*               FOUNDADD=ON;        /*                       @YD00175*/
         OI    FOUNDADD,B'01000000'                                1131
*               EXDDNAME=TIOEDDNM;  /*                       @YD00175*/
         L     @08,@PC00013                                        1132
         L     @08,SCAGLPTR(,@08)                                  1132
         L     @04,EXCLDDP(,@08)                                   1132
         L     @15,DSABTIOT(,DSABPTR)                              1132
         MVC   EXDDNAME(8,@04),TIOEDDNM(@15)                       1132
*               EXUCBADR=TIOEFSRT;  /*                       @YD00175*/
         L     @08,EXCLUCBP(,@08)                                  1133
         L     @04,TIOEFSRT-1(,@15)                                1133
         LA    @04,0(,@04)                                         1133
         ST    @04,EXUCBADR(,@08)                                  1133
*             END;                  /*                       @YD00175*/
*       END;                        /*                       @YD00175*/
@RF01129 DS    0H                                                  1135
@RC01127 DS    0H                                                  1136
*     IF FOUNDVOL^=ON THEN                                         1136
@RF01119 TM    FOUNDVOL,B'10000000'                                1136
         BO    @RF01136                                            1136
*       DSABPTR=DSABFCHN;           /*                       @YD00175*/
         L     DSABPTR,DSABFCHN(,DSABPTR)                          1137
*   END SCANVOL;                    /*                       @YD00175*/
*                                                                  1138
@RF01136 DS    0H                                                  1138
@DE01115 TM    FOUNDVOL,B'10000000'                                1138
         BNZ   @DC01115                                            1138
         LTR   DSABPTR,DSABPTR                                     1138
         BNZ   @DL01115                                            1138
@DC01115 DS    0H                                                  1139
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A DD HAS BEEN FOUND WITH THE CALLER'S VOLSER       @YD00175*/
*   /* THEN CHECK THE UCBBSVL BIT TO BE SURE THAT IT IS      @YD00175*/
*   /* EXCLUSIVE AND CHECK THE UCBRVDEV BIT TO SEE IF IT     @YD00175*/
*   /* IS VIRTUAL. IF IT IS, RETURN IT TO THE CALLER.        @YD00175*/
*   /* IF NOT, ZERO OUT THE CALLER'S EXCLAGL.                @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1139
*   IF FOUNDVOL=ON THEN                                            1139
         TM    FOUNDVOL,B'10000000'                                1139
         BNO   @RF01139                                            1139
*     IF UCBBSVL=ON&UCBRVDEV=ON THEN                               1140
         TM    UCBBSVL(UCBPTR),B'10000000'                         1140
         BNO   @RF01140                                            1140
         TM    UCBRVDEV(UCBPTR),B'00001000'                        1140
         BNO   @RF01140                                            1140
*       DO;                         /*                       @YD00175*/
*         EXDDNAME=TIOEDDNM;        /*                       @YD00175*/
         L     @08,@PC00013                                        1142
         L     @08,SCAGLPTR(,@08)                                  1142
         L     @01,EXCLDDP(,@08)                                   1142
         L     @15,DSABTIOT(,DSABPTR)                              1142
         MVC   EXDDNAME(8,@01),TIOEDDNM(@15)                       1142
*         EXUCBADR=TIOEFSRT;        /*                       @YD00175*/
         L     @08,EXCLUCBP(,@08)                                  1143
         L     @15,TIOEFSRT-1(,@15)                                1143
         LA    @15,0(,@15)                                         1143
         ST    @15,EXUCBADR(,@08)                                  1143
*       END;                        /*                       @YD00175*/
*     ELSE                                                         1145
*       DO;                         /*                       @YD00175*/
         B     @RC01140                                            1145
@RF01140 DS    0H                                                  1146
*         EXDDNAME=''B;             /*                       @YD00175*/
         L     @08,@PC00013                                        1146
         L     @08,SCAGLPTR(,@08)                                  1146
         L     @02,EXCLDDP(,@08)                                   1146
         XC    EXDDNAME(8,@02),EXDDNAME(@02)                       1146
*         EXUCBADR=''B;             /*                       @YD00175*/
         L     @08,EXCLUCBP(,@08)                                  1147
         SLR   @02,@02                                             1147
         ST    @02,EXUCBADR(,@08)                                  1147
*       END;                        /*                       @YD00175*/
*                                                                  1149
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A DD HASN'T BEEN FOUND THAT CAN BE USED THEN       @YD00175*/
*   /* SEARCH THE DSAB ENTRIES FOR A USABLE UCB FOR          @YD00175*/
*   /* MOUNTING THE VOLUME AND INDICATE ACCORDINGLY.         @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1149
*   IF FOUNDVOL=OFF&FOUNDADD=OFF THEN                              1149
@RC01140 DS    0H                                                  1149
@RF01139 TM    FOUNDVOL,B'11000000'                                1149
         BNZ   @RF01149                                            1149
*     DO;                           /*                       @YD00175*/
*       DSABPTR=QDBFELMP;           /*                       @YD00175*/
         L     DSABPTR,QDBFELMP(,QDBPTR)                           1151
*       VOLWORK=''B;                /*                       @YD00175*/
         XC    VOLWORK(6),VOLWORK                                  1152
*       SAVEDSAB=''B;               /*                       @YD00175*/
*                                                                  1153
         SLR   SAVEDSAB,SAVEDSAB                                   1153
*       /*************************************************************/
*       /*                                                           */
*       /* SEARCH THE DSAB ENTRIES FOR AN EXCLUSIVE, VIRT-   @YD00175*/
*       /* UAL UCB THAT DOES NOT HAVE THE DSABCATL FLAG      @YD00175*/
*       /* ON IN THE DSAB. IGNORE DDNAMES THAT ARE BLANK.    @ZM00733*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1154
*SCANDD:                                                           1154
*       DO WHILE DSABPTR^=NULLPTR&FOUNDADD=OFF;/*            @YD00175*/
SCANDD   B     @DE01154                                            1154
@DL01154 DS    0H                                                  1155
*         UCBPTR=TIOEFSRT;          /*                       @YD00175*/
         L     @08,DSABTIOT(,DSABPTR)                              1155
         L     UCBPTR,TIOEFSRT-1(,@08)                             1155
         LA    UCBPTR,0(,UCBPTR)                                   1155
*         IF DSABCATL=OFF&UCBBSVL=ON&UCBRVDEV=ON&TIOEDDNM^=BLANKDDN
*           THEN                                                   1156
         TM    DSABCATL(DSABPTR),B'00001000'                       1156
         BNZ   @RF01156                                            1156
         TM    UCBBSVL(UCBPTR),B'10000000'                         1156
         BNO   @RF01156                                            1156
         TM    UCBRVDEV(UCBPTR),B'00001000'                        1156
         BNO   @RF01156                                            1156
         CLC   TIOEDDNM(8,@08),BLANKDDN                            1156
         BE    @RF01156                                            1156
*           DO;                     /*                       @ZM00733*/
*                                                                  1157
*             /*******************************************************/
*             /*                                                     */
*             /* IF A DD HAS BEEN FOUND THAT CAN BE USED     @YD00175*/
*             /* THEN SEARCH THE ENTIRE DSAB CHAIN TO        @YD00175*/
*             /* BESURE THERE IS NO CATALOG DATA SET DDNAME  @YD00175*/
*             /* WITH THE SAME VOLSER IN THE UCB VOLSER      @YD00175*/
*             /* FIELD. INDICATE ACCORDINGLY.                @YD00175*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1158
*             VOLWORK=UCBVOLI;      /*                       @YD00175*/
         MVC   VOLWORK(6),UCBVOLI(UCBPTR)                          1158
*             SAVEDSAB=DSABPTR;     /*                       @YD00175*/
         LR    SAVEDSAB,DSABPTR                                    1159
*             DSABPTR=QDBFELMP;     /*                       @YD00175*/
         L     DSABPTR,QDBFELMP(,QDBPTR)                           1160
*             FOUNDCAT=OFF;         /*                       @YD00175*/
         NI    FOUNDCAT,B'11011111'                                1161
*SCANCAT:                                                          1162
*             DO WHILE DSABPTR^=NULLPTR&FOUNDCAT=OFF;/*      @YD00175*/
SCANCAT  B     @DE01162                                            1162
@DL01162 DS    0H                                                  1163
*               UCBPTR=TIOEFSRT;    /*                       @YD00175*/
         L     @08,DSABTIOT(,DSABPTR)                              1163
         L     UCBPTR,TIOEFSRT-1(,@08)                             1163
         LA    UCBPTR,0(,UCBPTR)                                   1163
*                                                                  1164
*               /*****************************************************/
*               /*                                                   */
*               /* IF A CATALOG DDNAME, THEN IF VOLSERS      @YD00175*/
*               /* MATCH THEN INDICATE VOLSER IS FOR A       @YD00175*/
*               /* CATALOG VOLUME, IT CANNOT BE USED.        @YD00175*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1164
*               IF DSABCATL=ON THEN                                1164
         TM    DSABCATL(DSABPTR),B'00001000'                       1164
         BNO   @RF01164                                            1164
*                 IF VOLWORK=UCBVOLI THEN                          1165
         CLC   VOLWORK(6),UCBVOLI(UCBPTR)                          1165
         BNE   @RF01165                                            1165
*                   FOUNDCAT=ON;    /*                       @YD00175*/
         OI    FOUNDCAT,B'00100000'                                1166
*               DSABPTR=DSABFCHN;   /*                       @YD00175*/
@RF01165 DS    0H                                                  1167
@RF01164 L     DSABPTR,DSABFCHN(,DSABPTR)                          1167
*             END SCANCAT;          /*                       @YD00175*/
*                                                                  1168
@DE01162 LTR   DSABPTR,DSABPTR                                     1168
         BZ    @DC01162                                            1168
         TM    FOUNDCAT,B'00100000'                                1168
         BZ    @DL01162                                            1168
@DC01162 DS    0H                                                  1169
*             /*******************************************************/
*             /*                                                     */
*             /* RESTORE SAVED DSAB POINTER & RESET UCBPTR.  @YD00175*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1169
*             DSABPTR=SAVEDSAB;     /*                       @YD00175*/
         LR    DSABPTR,SAVEDSAB                                    1169
*             UCBPTR=TIOEFSRT;      /*                       @YD00175*/
*                                                                  1170
         L     @08,DSABTIOT(,DSABPTR)                              1170
         L     @15,TIOEFSRT-1(,@08)                                1170
         LA    @15,0(,@15)                                         1170
         LR    UCBPTR,@15                                          1170
*             /*******************************************************/
*             /*                                                     */
*             /* IF NO CATALOG DD'S HAVE BEEN FOUND, THEN    @YD00175*/
*             /* RETURN THE DDNAME AND UCB ADDRESS TO THE    @YD00175*/
*             /* CALLER. SET THE SWITCH TO INDICATE A NON-   @YD00175*/
*             /* CATALOG DD HAS BEEN FOUND.                  @YD00175*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1171
*             IF FOUNDCAT=OFF THEN                                 1171
         TM    FOUNDCAT,B'00100000'                                1171
         BNZ   @RF01171                                            1171
*               DO;                 /*                       @YD00175*/
*                 FOUNDADD=ON;      /*                       @YD00175*/
         OI    FOUNDADD,B'01000000'                                1173
*                 EXDDNAME=TIOEDDNM;/*                       @YD00175*/
         L     @14,@PC00013                                        1174
         L     @14,SCAGLPTR(,@14)                                  1174
         L     @01,EXCLDDP(,@14)                                   1174
         MVC   EXDDNAME(8,@01),TIOEDDNM(@08)                       1174
*                 EXUCBADR=TIOEFSRT;/*                       @YD00175*/
         L     @08,EXCLUCBP(,@14)                                  1175
         ST    @15,EXUCBADR(,@08)                                  1175
*               END;                /*                       @YD00175*/
*           END;                    /*                       @YD00175*/
*                                                                  1177
@RF01171 DS    0H                                                  1178
*         /***********************************************************/
*         /*                                                         */
*         /* INCREMENT TO NEXT DSAB VIA FORWARD CHAIN PTR.   @YD00175*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1178
*         DSABPTR=DSABFCHN;         /*                       @YD00175*/
@RF01156 L     DSABPTR,DSABFCHN(,DSABPTR)                          1178
*       END SCANDD;                 /*                       @YD00175*/
@DE01154 LTR   DSABPTR,DSABPTR                                     1179
         BZ    @DC01154                                            1179
         TM    FOUNDADD,B'01000000'                                1179
         BZ    @DL01154                                            1179
@DC01154 DS    0H                                                  1180
*     END;                          /*                       @YD00175*/
*                                                                  1181
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER.                                     @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1181
*   RETURN;                         /* RETURN TO MAIN ROUTINE      1181
*                                                            @YD00175*/
@EL00013 DS    0H                                                  1181
@EF00013 DS    0H                                                  1181
@ER00013 LM    @14,@12,@SA00013                                    1181
         BR    @14                                                 1181
*   END SCANTIOT;                   /* END OF SCANTIOT TO LOCATE AN
*                                      EXCLUSIVE VOLUME      @YD00175*/
         B     @EL00013                                            1182
*                                                                  1183
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - GETEXCL                                @YD00175*/
*/*                                                          @YD00175*/
*/*  FUNCTION - THIS ROUTINE DETERMINES IF ALLOCATION OF     @YD00175*/
*/*             THE UNIT CAN BE CHANGED TO EXCLUSIVE.  IF    @YD00175*/
*/*             SO, CALLS SETEXCL PROCEDURE.  IF NOT ISSUES  @YD00175*/
*/*             ERROR MESSAGE IDC3385I.                      @YD00175*/
*/*                                                          @YD00175*/
*/*  INPUT - THE INPUT ARGUMENT LIST EXCLAGL IS USED TO      @YD00175*/
*/*          COMPARE VOLSER TO THE UCBVOLI FIELD.  THE UCB   @YD00175*/
*/*          ADDRESS IN THE EXCLAGL IS USED TO FIND THE UCB. @YD00175*/
*/*                                                          @YD00175*/
*/*  OUTPUT- ISSUE ERROR MESSAGES AND RETURN TO CALLER WITH  @YD00175*/
*/*          RETURN CODE IN REGISTER 15 AS FOLLOWS:          @YD00175*/
*/*          0 - SUCCESSFUL, UCB IS MARKED EXCLUSIVE OR      @YD00175*/
*/*              SPECIFIED VOLUME WAS NOT MOUNTED.           @YD00175*/
*/*          4 - VOLUME IS RESIDENT OR PERMANENTLY RESERVED, @YD00175*/
*/*              OR UCB IS ALLOCATED TO ANOTHER JOB.         @YD00175*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1183
*GETEXCL:                                                          1183
*   PROCEDURE(GXAGLPTR);            /*                       @YD00175*/
*                                                                  1183
GETEXCL  STM   @14,@12,@SA00014                                    1183
         MVC   @PC00014(4),0(@01)                                  1183
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR GETEXCL                        @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1184
*   DCL                                                            1184
*     GETEXRC FIXED(15);            /* GETEXCL RETURN CODE   @YD00175*/
*   DCL                                                            1185
*     GXAGLPTR PTR(31);             /* GETEXCL EXCLAGL PTR   @YD00175*/
*                                                                  1186
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY EXCLAGL ON INPUT PARAMETER AND INITIALIZE   @YD00175*/
*   /* RETURN CODE AREA AND ISSUE UTRACE MACRO.              @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1186
*   RFY                                                            1186
*     EXCLAGL BASED(GXAGLPTR);      /*                       @YD00175*/
*   OLDERID2=NEWERID2;                                             1187
         L     @08,@PC00001                                        1187
         L     @15,GDTTR2(,@08)                                    1187
         MVC   @TS00001(95),NEWERID2(@15)                          1187
         MVC   OLDERID2(95,@15),@TS00001                           1187
*   NEWID2='SAGE';                  /*                       @YD00175*/
         MVC   NEWID2(4,@15),@CC02956                              1188
*   GETEXRC=0;                      /*                       @YD00175*/
*                                                                  1189
         SLR   GETEXRC,GETEXRC                                     1189
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF UCB IS RESERVED OR RESIDENT AND THEREFORE     @YD00175*/
*   /* CANNOT BE ALLOCATED EXCLUSIVELY. IF VOLUME IS         @YD00175*/
*   /* RESIDENT OR RESERVED THEN ISSUE MESSAGE IDC3385I      @YD00175*/
*   /* SET RETURN CODE TO INDICATE FAILURE.                  @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1190
*   UCBPTR=EXUCBADR;                /*                       @YD00175*/
         L     @15,@PC00014                                        1190
         L     @01,GXAGLPTR(,@15)                                  1190
         L     @01,EXCLUCBP(,@01)                                  1190
         L     UCBPTR,EXUCBADR(,@01)                               1190
*   IF UCBRESV=ON×UCBPRES=ON THEN                                  1191
         TM    UCBRESV(UCBPTR),B'00100100'                         1191
         BZ    @RF01191                                            1191
*     DO;                           /*                       @YD00175*/
*       GETEXRC=LASTCC04;           /*                       @YD00175*/
         LA    GETEXRC,4                                           1193
*       DARGSENT=MSG3385I;          /*                       @YD00175*/
         L     @15,DDSTRU                                          1194
         MVI   DARGSENT(@15),X'05'                                 1194
*       DARGDBP=ADDR(UCBVOLI);      /*                       @YD00175*/
         LA    @14,UCBVOLI(,UCBPTR)                                1195
         ST    @14,DARGDBP(,@15)                                   1195
*       DARGILP=VOLSERLN;           /*                       @YD00175*/
         MVC   DARGILP(2,@15),@CH00156                             1196
*       DARGSMOD=MSGMODID;          /*                       @YD00175*/
         MVC   DARGSMOD(3,@15),@CC02595                            1197
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @YD00175*/
         ST    @08,@AL00001                                        1198
         LA    @05,@CF00115                                        1198
         ST    @05,@AL00001+4                                      1198
         LA    @05,DDSTRU                                          1198
         ST    @05,@AL00001+8                                      1198
         MVI   @AL00001+8,X'80'                                    1198
         L     @15,GDTPRT(,@08)                                    1198
         LA    @01,@AL00001                                        1198
         BALR  @14,@15                                             1198
*     END;                          /*                       @YD00175*/
*                                                                  1200
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF UCB IS ALREADY EXCLUSIVE BY CHECKING THE      @YD00175*/
*   /* UCBBSVL BIT TO BE SET ON. IF IT IS OFF THEN TEST      @YD00175*/
*   /* THE EXCLMNT FLAG. IF EXCLMNT IS OFF THE CALLER        @YD00175*/
*   /* REQUIRES EXCLUSIVE CONTROL NO MATTER WHICH VOLUME     @YD00175*/
*   /* IS MOUNTED ON THE UNIT SO CALL SETEXCL. IF EXCLMNT    @YD00175*/
*   /* IS ON, THE CALLER REQUIRES EXCLUSIVE CONTROL ONLY     @YD00175*/
*   /* IF THE VOLUME IN THE EXCLAGL IS MOUNTED, SO CALL      @YD00175*/
*   /* SETEXCL ONLY IF THE VOLSER IN THE UCB IS THE SAME     @YD00175*/
*   /* AS IN THE EXCLAGL. IF AN ERROR OCCURS, SET RETURN     @YD00175*/
*   /* CODE TO INDICATE FAILURE.                             @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1200
*   ELSE                                                           1200
*     IF UCBBSVL=OFF THEN                                          1200
         B     @RC01191                                            1200
@RF01191 TM    UCBBSVL(UCBPTR),B'10000000'                         1200
         BNZ   @RF01200                                            1200
*       IF EXCLMNT=OFF×EXCLMNT=ON&EXCLVOL=UCBVOLI THEN             1201
         L     @08,@PC00014                                        1201
         L     @08,GXAGLPTR(,@08)                                  1201
         TM    EXCLMNT(@08),B'10000000'                            1201
         BZ    @RT01201                                            1201
         TM    EXCLMNT(@08),B'10000000'                            1201
         BNO   @RF01201                                            1201
         CLC   EXCLVOL(6,@08),UCBVOLI(UCBPTR)                      1201
         BNE   @RF01201                                            1201
@RT01201 DS    0H                                                  1202
*         DO;                       /*                       @YD00175*/
*           CALL SETEXCL(GXAGLPTR); /*                       @YD00175*/
         L     @08,@PC00014                                        1203
         ST    @08,@AL00001                                        1203
         LA    @01,@AL00001                                        1203
         BAL   @14,SETEXCL                                         1203
*           RESPECIFY                                              1204
*             RTNREG RSTD;                                         1204
*           TESTRC=RTNREG;                                         1205
         LR    TESTRC,RTNREG                                       1205
*           RESPECIFY                                              1206
*             RTNREG UNRSTD;        /*                       @YD00175*/
*           IF TESTRC^=0 THEN                                      1207
         LTR   TESTRC,TESTRC                                       1207
         BZ    @RF01207                                            1207
*             GETEXRC=TESTRC;       /*                       @YD00175*/
         LR    GETEXRC,TESTRC                                      1208
*         END;                      /*                       @YD00175*/
@RF01207 DS    0H                                                  1210
*   RETURN CODE(GETEXRC);           /* RETURN TO MAIN ROUTINE      1210
*                                                            @YD00175*/
@RF01201 DS    0H                                                  1210
@RF01200 DS    0H                                                  1210
@RC01191 LR    @15,GETEXRC                                         1210
         L     @14,@SA00014                                        1210
         LM    @00,@12,@SA00014+8                                  1210
         BR    @14                                                 1210
*   END GETEXCL;                    /* END OF GETEXCL TO CHANGE TO AN
*                                      EXCLUSIVE VOLUME      @YD00175*/
*                                                                  1212
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - SETEXCL                                @YD00175*/
*/*                                                          @YD00175*/
*/*  FUNCTION - THIS ROUTINE CHANGES THE ENQUEUE OF THE      @YD00175*/
*/*             VOLUME SERIAL TO EXCLUSIVE AND MARKS THE     @YD00175*/
*/*             THE UCB NON-SHARABLE.  IF AN ERROR OCCURRS   @YD00175*/
*/*             THEN PRINT MESSAGE IDC2390I.                 @YD00175*/
*/*                                                          @YD00175*/
*/*  INPUT - THE INPUT ARGUMENT LIST EXCLAGL IS USED TO      @YD00175*/
*/*          ENQUEUE THE VOLSER EXCLUSIVELY.  THE UCB        @YD00175*/
*/*          ADDRESS IN THE EXCLAGL IS USED TO FIND THE UCB. @YD00175*/
*/*                                                          @YD00175*/
*/*  OUTPUT- ISSUE ERROR MESSAGES AND RETURN TO CALLER WITH  @YD00175*/
*/*          RETURN CODE IN REGISTER 15 AS FOLLOWS:          @YD00175*/
*/*          0 - SUCCESSFUL, UCB IS MARKED EXCLUSIVE         @YD00175*/
*/*          4 - UCB IS ALLOCATED TO ANOTHER JOB.            @YD00175*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1212
*SETEXCL:                                                          1212
*   PROCEDURE(SXAGLPTR);            /*                       @YD00175*/
SETEXCL  STM   @14,@12,@SA00015                                    1212
         MVC   @PC00015(4),0(@01)                                  1212
*                                                                  1213
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR SETEXCL                        @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1213
*   DCL                                                            1213
*     SXAGLPTR PTR(31);             /* SETEXCL EXCLAGL PTR   @YD00175*/
*   DCL                                                            1214
*     SETEXRC FIXED(15);            /* SETEXCL RETURN CODE   @YD00175*/
*   DCL                                                            1215
*     ENQBEGN1 CHAR(*) GEND;        /* ENQ LIST BEGINNING    @YD00175*/
*   DCL                                                            1216
*     ENQLIST1 CHAR(*) GEND;        /* ENQUEUE GETMAINED     @YD00175*/
*   DCL                                                            1217
*     MAJNAME1 CHAR(8) STATIC       /* MAJOR ENQ / DEQ       @YD00175*/
*         INIT('SYSZVOLS');         /* RESOURCE NAME         @YD00175*/
*   DCL                                                            1218
*     VOLSER1 CHAR(6) BDY(WORD);    /* VOLSER FIELD FOR ENQ  @YD00175*/
*   DCL                                                            1219
*     ENQCORE1 CHAR(*) STATIC LOCAL GEND;/* GEND CORE DECLARE      1219
*                                                            @YD00175*/
*   DCL                                                            1220
*     ENQLEN1 FIXED(31) STATIC LOCAL GEND;/* GEND LENGTH DCL @YD00175*/
*   GENERATE DATA DEFS(ENQCORE1,ENQLEN1) REFS(MAJNAME1);           1221
*   GENERATE DATA DEFS(ENQLIST1,ENQBEGN1) REFS(MAJNAME1);          1222
*                                                                  1223
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY EXCLAGL ON INPUT PARAMETER LIST AND INIT-   @YD00175*/
*   /* IALIZE RETURN CODE AREA AND ISSUE UTRACE MACRO.       @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1223
*   RFY                                                            1223
*     EXCLAGL BASED(SXAGLPTR);      /*                       @YD00175*/
*   OLDERID2=NEWERID2;                                             1224
         L     @08,@PC00001                                        1224
         L     @08,GDTTR2(,@08)                                    1224
         MVC   @TS00001(95),NEWERID2(@08)                          1224
         MVC   OLDERID2(95,@08),@TS00001                           1224
*   NEWID2='SASE';                  /*                       @YD00175*/
         MVC   NEWID2(4,@08),@CC02975                              1225
*   SETEXRC=0;                      /*                       @YD00175*/
*                                                                  1226
         SLR   SETEXRC,SETEXRC                                     1226
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPUTE THE CURRENT TCB ADDRESS FOR SETEXCL.          @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1227
*   TCBPTR=CURTCBP;                 /*                       @Y30LB37*/
         L     @08,CVTPTR                                          1227
         L     @08,TCBWDSP(,@08)                                   1227
         L     TCBPTR,CURTCBP(,@08)                                1227
*   TCBP=JSCBTCBP;                  /*                       @Y30LB37*/
         L     @08,TCBJSCB(,TCBPTR)                                1228
         L     @08,JSCBTCBP(,@08)                                  1228
         ST    @08,TCBP                                            1228
*                                                                  1229
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE THE DIRECTED ENQUEUE TO THE INITIATOR'S         @YD00175*/
*   /* TCB TO CHANGE THE ENQUEUE ON THE VOLUME FROM          @YD00175*/
*   /* SHARED TO EXCLUSIVE.                                  @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1229
*   VOLSER1=UCBVOLI;                /*                       @YD00175*/
         MVC   VOLSER1(6),UCBVOLI(UCBPTR)                          1229
*   ENQBEGN1(1:ENQLEN1)=ENQCORE1(1:ENQLEN1);/*               @YD00175*/
         L     @08,ENQLEN1                                         1230
         BCTR  @08,0                                               1230
         EX    @08,@SM03063                                        1230
*LENQ4:                                                            1231
*   GENERATE REFS(MAJNAME1,VOLSER1,ENQLIST1,TCBP);                 1231
LENQ4    DS    0H                                                  1231
*                                                         /*@YD00175*/
         ENQ   (MAJNAME1,VOLSER1,E,6,SYSTEM),RET=CHNG,                **
               MF=(E,ENQLIST1),TCB=TCBP  DIRECTED ENQUEUE     @YD00175
*   RESPECIFY                                                      1232
*     RTNREG RSTD;                                                 1232
*   TESTRC=RTNREG;                                                 1233
         LR    TESTRC,RTNREG                                       1233
*   RESPECIFY                                                      1234
*     RTNREG UNRSTD;                /*                       @YD00175*/
*                                                                  1234
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ENQUEUE IS SUCCESSFUL THEN ISSUE MODESET MACRO     @YD00175*/
*   /* FOR KEY ZERO AUTHORITY, AND SET THE UCB BIT THAT      @YD00175*/
*   /* INDICATES EXCLUSIVE CONTROL. RESET MODESET TO         @YD00175*/
*   /* PROBLEM STATE.                                        @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1235
*   IF TESTRC=0 THEN                                               1235
         LTR   TESTRC,TESTRC                                       1235
         BNZ   @RF01235                                            1235
*     DO;                           /*                       @YD00175*/
*LMODE1:                                                           1237
*       GENERATE(MODESET KEY=ZERO,MODE=SUP);/*               @YD00175*/
LMODE1   MODESET KEY=ZERO,MODE=SUP
*       UCBBSVL=ON;                 /*                       @YD00175*/
         OI    UCBBSVL(UCBPTR),B'10000000'                         1238
*LMODE2:                                                           1239
*       GENERATE(MODESET KEY=NZERO,MODE=PROB);/*             @YD00175*/
LMODE2   MODESET KEY=NZERO,MODE=PROB
*     END;                          /*                       @YD00175*/
*                                                                  1241
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ENQUEUE FAILED, THEN PRINT ERROR MESSAGE           @YD00175*/
*   /* IDC2390I AND RETURN CODE FOUR.                        @YD00175*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1241
*   ELSE                                                           1241
*     DO;                           /*                       @YD00175*/
         B     @RC01235                                            1241
@RF01235 DS    0H                                                  1242
*       SETEXRC=LASTCC04;           /*                       @YD00175*/
         LA    SETEXRC,4                                           1242
*       DARGSENT=MSG2390I;          /*                       @YD00175*/
         L     @08,DDSTRU                                          1243
         MVI   DARGSENT(@08),X'0A'                                 1243
*       DARGDBP=ADDR(UCBVOLI);      /*                       @YD00175*/
         LA    @15,UCBVOLI(,UCBPTR)                                1244
         ST    @15,DARGDBP(,@08)                                   1244
*       DARGILP=VOLSERLN;           /*                       @YD00175*/
         MVC   DARGILP(2,@08),@CH00156                             1245
*       DARGSMOD=MSGMODID;          /*                       @YD00175*/
         MVC   DARGSMOD(3,@08),@CC02595                            1246
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @YD00175*/
         L     @08,@PC00001                                        1247
         ST    @08,@AL00001                                        1247
         LA    @05,@CF00115                                        1247
         ST    @05,@AL00001+4                                      1247
         LA    @05,DDSTRU                                          1247
         ST    @05,@AL00001+8                                      1247
         MVI   @AL00001+8,X'80'                                    1247
         L     @15,GDTPRT(,@08)                                    1247
         LA    @01,@AL00001                                        1247
         BALR  @14,@15                                             1247
*     END;                          /*                       @YD00175*/
*   RETURN CODE(SETEXRC);           /* RETURN TO MAIN ROUTINE      1249
*                                                            @YD00175*/
@RC01235 LR    @15,SETEXRC                                         1249
         L     @14,@SA00015                                        1249
         LM    @00,@12,@SA00015+8                                  1249
         BR    @14                                                 1249
*   END SETEXCL;                    /* END OF SETEXCL TO CHANGE TO AN
*                                      EXCLUSIVE VOLUME      @YD00175*/
*                                                                  1251
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - SELECTD                                @Z40LB37*/
*/*                                                          @Z40LB37*/
*/*  FUNCTION - THIS ROUTINE DETERMINES IF THE VOLUME IS     @Z40LB37*/
*/*             MOUNTED TO THIS JOB STEP.  IF SO, RETURNS    @Z40LB37*/
*/*             THE UCB ADDRESS AND THE DDNAME FOR THE       @Z40LB37*/
*/*             VOLUME TO THE CALLER.                        @Z40LB37*/
*/*                                                          @Z40LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST SELAGL IS USED TO       @Z40LB37*/
*/*          COMPARE VOLSER TO THE UCBVOLI FIELD.            @Z40LB37*/
*/*                                                          @Z40LB37*/
*/*  OUTPUT- RETURN TO CALLER WITH RETURN CODE IN REGISTER   @Z40LB37*/
*/*          15 AS FOLLOWS:                                  @Z40LB37*/
*/*          0 - SUCCESSFUL, THE VOLUME IS MOUNTED TO THIS   @Z40LB37*/
*/*              JOB STEP.                                   @Z40LB37*/
*/*          4 - THE VOLUME IS NOT MOUNTED TO THIS JOB       @Z40LB37*/
*/*              STEP.                                       @Z40LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1251
*SELECTD:                                                          1251
*   PROCEDURE(SLAGLPTR);            /*                       @Z40LB37*/
*                                                                  1251
SELECTD  STM   @14,@12,@SA00016                                    1251
         MVC   @PC00016(4),0(@01)                                  1251
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR SELECTD                        @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1252
*   DCL                                                            1252
*     SELEDRC FIXED(15);            /* SELECTD RETURN CODE   @Z40LB37*/
*   DCL                                                            1253
*     SLAGLPTR PTR(31);             /* SELECTD SELAGL PTR    @Z40LB37*/
*   DCL                                                            1254
*     SMJRNAM CHAR(8) STATIC        /* MAJOR ENQUEUE NAME    @Z40LB37*/
*         BDY(WORD) INIT('SYSZTIOT');/* INITIALIZED          @Z40LB37*/
*   DCL                                                            1255
*     1 SMNRNAME,                   /* MINOR ENQUEUE NAME    @Z40LB37*/
*      2 SMNRLEN FIXED(8),          /* LENGTH OF MINOR NAME  @Z40LB37*/
*      2 SMNRASID CHAR(2),          /* ASID OF THIS JOB STEP @Z40LB37*/
*      2 SMNRQDB CHAR(4);           /* QDB ADDRESS           @Z40LB37*/
*                                                                  1256
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY SELAGL ON INPUT PARAMETER AND INITIALIZE    @Z40LB37*/
*   /* RETURN CODE AREA AND ISSUE UTRACE MACRO.              @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1256
*   RFY                                                            1256
*     SELAGL BASED(SLAGLPTR);       /*                       @Z40LB37*/
*   OLDERID2=NEWERID2;                                             1257
         L     @08,@PC00001                                        1257
         L     @05,GDTTR2(,@08)                                    1257
         MVC   @TS00001(95),NEWERID2(@05)                          1257
         MVC   OLDERID2(95,@05),@TS00001                           1257
*   NEWID2='SASD';                  /*                       @Z40LB37*/
         MVC   NEWID2(4,@05),@CC02994                              1258
*   SELEDRC=0;                      /*                       @Z40LB37*/
*                                                                  1259
         SLR   SELEDRC,SELEDRC                                     1259
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE POINTERS TO THE TCB, ASCB, QDB, AND DSAB.  @Z40LB37*/
*   /* SET MINOR LENGTH FOR UENQ MACRO.                      @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1260
*   ASCBPTR=PSAAOLD;                /*                       @Z40LB37*/
         L     ASCBPTR,PSAAOLD                                     1260
*   SMNRASID=ASCBASID;              /*                       @Z40LB37*/
         MVC   SMNRASID(2),ASCBASID(ASCBPTR)                       1261
*   TCBPTR=CURTCBP;                 /*                       @Z40LB37*/
         L     @05,CVTPTR                                          1262
         L     @05,TCBWDSP(,@05)                                   1262
         L     TCBPTR,CURTCBP(,@05)                                1262
*   TCBP=JSCBTCBP;                  /*                       @Z40LB37*/
         L     @05,TCBJSCB(,TCBPTR)                                1263
         L     @15,JSCBTCBP(,@05)                                  1263
         ST    @15,TCBP                                            1263
*   QDBPTR=JSCDSABQ;                /*                       @Z40LB37*/
         L     QDBPTR,JSCDSABQ(,@05)                               1264
*   DSABPTR=QDBFELMP;               /*                       @Z40LB37*/
         L     DSABPTR,QDBFELMP(,QDBPTR)                           1265
*   SMNRQDB=QDBPTR;                 /*                       @Z40LB37*/
         STCM  QDBPTR,15,SMNRQDB                                   1266
*   SMNRLEN=LENGTH(SMNRASID)+LENGTH(SMNRQDB);/*              @Z40LB37*/
*                                                                  1267
         MVI   SMNRLEN,X'06'                                       1267
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UENQ MACRO TO ENQUEUE ON THE TIOT AND WAIT.     @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1268
*   CALL IDCSANQ0(GDTTBL,SHR,WAIT,SMJRNAM,SMNRNAME);/*       @Z40LB37*/
         MVC   @AL00001+4(12),@AL01268                             1268
         ST    @08,@AL00001                                        1268
         LA    @05,SMNRNAME                                        1268
         ST    @05,@AL00001+16                                     1268
         MVI   @AL00001+16,X'80'                                   1268
         L     @15,GDTENQ(,@08)                                    1268
         LA    @01,@AL00001                                        1268
         BALR  @14,@15                                             1268
*                                                                  1269
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL SELESCAN IF DSAB POINTER IS NOT ZEROS. IF        @Z40LB37*/
*   /* THERE ARE NO DD ENTRIES THEN SET VOLFOUND FLAG TO     @Z40LB37*/
*   /* OFF.                                                  @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1269
*   IF DSABPTR^=NULLPTR THEN                                       1269
         LTR   DSABPTR,DSABPTR                                     1269
         BZ    @RF01269                                            1269
*     CALL SELESCAN(SLAGLPTR);      /*                       @Z40LB37*/
         L     @08,@PC00016                                        1270
         ST    @08,@AL00001                                        1270
         LA    @01,@AL00001                                        1270
         BAL   @14,SELESCAN                                        1270
*   ELSE                                                           1271
*     VOLFOUND=OFF;                 /*                       @Z40LB37*/
*                                                                  1271
         B     @RC01269                                            1271
@RF01269 NI    VOLFOUND,B'11101111'                                1271
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE VOLFOUND FLAG IS OFF, THEN THE CALLERS         @Z40LB37*/
*   /* VOLSER WAS NOT FOUND, SO SET THE RETURN CODE          @Z40LB37*/
*   /* TO FOUR AND CLEAR THE ARGLIST.                        @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1272
*   IF VOLFOUND=OFF THEN                                           1272
@RC01269 TM    VOLFOUND,B'00010000'                                1272
         BNZ   @RF01272                                            1272
*     DO;                           /*                       @Z40LB37*/
*       SLDDNAME=''B;               /*                       @Z40LB37*/
         L     @08,@PC00016                                        1274
         L     @08,SLAGLPTR(,@08)                                  1274
         L     @05,SELDDNP(,@08)                                   1274
         XC    SLDDNAME(8,@05),SLDDNAME(@05)                       1274
*       SLUCBADR=''B;               /*                       @Z40LB37*/
         L     @08,SELUCBP(,@08)                                   1275
         SLR   @05,@05                                             1275
         ST    @05,SLUCBADR(,@08)                                  1275
*       SELEDRC=4;                  /*                       @Z40LB37*/
         LA    SELEDRC,4                                           1276
*     END;                          /*                       @Z40LB37*/
*                                                                  1277
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UDEQ MACRO TO DEQUEUE ON THE TIOT AND RETURN.   @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1278
*   CALL IDCSADQ0(GDTTBL,SMJRNAM,SMNRNAME);/*                @Z40LB37*/
@RF01272 L     @08,@PC00001                                        1278
         ST    @08,@AL00001                                        1278
         LA    @05,SMJRNAM                                         1278
         ST    @05,@AL00001+4                                      1278
         LA    @05,SMNRNAME                                        1278
         ST    @05,@AL00001+8                                      1278
         MVI   @AL00001+8,X'80'                                    1278
         L     @15,GDTDEQ(,@08)                                    1278
         LA    @01,@AL00001                                        1278
         BALR  @14,@15                                             1278
*   RETURN CODE(SELEDRC);           /* RETURN TO MAIN ROUTINE      1279
*                                                            @Z40LB37*/
         LR    @15,SELEDRC                                         1279
         L     @14,@SA00016                                        1279
         LM    @00,@12,@SA00016+8                                  1279
         BR    @14                                                 1279
*   END SELECTD;                    /* END OF SELECTD TO LOCATE A  1280
*                                      MOUNTED VOLUME        @Z40LB37*/
*                                                                  1281
*/********************************************************************/
*/*                                                                  */
*/*  PROCEDURE NAME - SELESCAN                               @Z40LB37*/
*/*                                                          @Z40LB37*/
*/*  FUNCTION - THIS ROUTINE SCANS THE TIOT TO FIND IF       @Z40LB37*/
*/*             THE VOLUME IS ALREADY MOUNTED.               @Z40LB37*/
*/*                                                          @Z40LB37*/
*/*  INPUT - THE INPUT ARGUMENT LIST SELAGL IS USED TO       @Z40LB37*/
*/*          COMPARE VOLSER TO THE UCBVOLI FIELD.            @Z40LB37*/
*/*                                                          @Z40LB37*/
*/*  OUTPUT- INFORMATION RETURNED IN THE SELAGL AND BIT      @Z40LB37*/
*/*          SWITCH AS FOLLOWS:                              @Z40LB37*/
*/*          VOLFOUND = ON -                                 @Z40LB37*/
*/*            VOLFOUND BIT ON IF THE CALLER'S VOLSER WAS    @Z40LB37*/
*/*            FOUND IN THE UCB.  THE CALLER'S AREAS WILL    @Z40LB37*/
*/*            BE SET WITH THE DDNAME AND UCB ADDRESS OF     @Z40LB37*/
*/*            THE VOLUME.                                   @Z40LB37*/
*/*          VOLFOUND = OFF -                                @Z40LB37*/
*/*            VOLFOUND IS OFF IF THE CALLER'S VOLSER WAS    @Z40LB37*/
*/*            NOT FOUND.  THE CALLER'S AREAS DO NOT         @Z40LB37*/
*/*            CONTAIN THE DDNAME AND UCB ADDRESS.           @Z40LB37*/
*/*                                                                  */
*/********************************************************************/
*                                                                  1281
*SELESCAN:                                                         1281
*   PROCEDURE(SSAGLPTR);            /*                       @Z40LB37*/
*                                                                  1281
SELESCAN STM   @14,@12,12(@13)                                     1281
         MVC   @PC00017(4),0(@01)                                  1281
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARATIONS FOR SELESCAN                       @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1282
*   DCL                                                            1282
*     SSAGLPTR PTR(31);             /* SELESCAN SELAGL PTR   @Z40LB37*/
*   DCL                                                            1283
*     TOTENTRY FIXED(31);           /* TOTAL DEVICE ENTRIES  @Z40LB37*/
*   DCL                                                            1284
*     COUNTI FIXED(31);             /* DEVICE ENTRY COUNTER  @Z40LB37*/
*   DCL                                                            1285
*     JOBCAT CHAR(8) STATIC         /* JOBCAT STATIC         @ZM41117*/
*         INIT('JOBCAT  ');         /* CONSTANT              @ZM41117*/
*   DCL                                                            1286
*     STEPCAT CHAR(8) STATIC        /* STEPCAT STATIC        @ZM41117*/
*         INIT('STEPCAT ');         /* CONSTANT              @ZM41117*/
*                                                                  1287
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFY SELAGL ON INPUT PARAMETER AND ISSUE         @Z40LB37*/
*   /* UTRACE MACRO.                                         @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1287
*   RFY                                                            1287
*     SELAGL BASED(SSAGLPTR);       /*                       @Z40LB37*/
*   OLDERID2=NEWERID2;                                             1288
         L     @08,@PC00001                                        1288
         L     @08,GDTTR2(,@08)                                    1288
         MVC   @TS00001(95),NEWERID2(@08)                          1288
         MVC   OLDERID2(95,@08),@TS00001                           1288
*   NEWID2='SASC';                  /*                       @Z40LB37*/
*                                                                  1289
         MVC   NEWID2(4,@08),@CC03008                              1289
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE TIOT DSAB CHAIN FOR A VOLSER IN THE UCB      @Z40LB37*/
*   /* THAT MATCHES THE CALLERS VOLSER.                      @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1290
*SSCANVOL:                                                         1290
*   DO WHILE VOLFOUND=OFF&DSABPTR^=NULLPTR;/*                @Z40LB37*/
*                                                                  1290
SSCANVOL B     @DE01290                                            1290
@DL01290 DS    0H                                                  1291
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK IF THE DSAB IS FOR A CONCATINATION MEMBER,    @Z40LB37*/
*     /* AND THE TIOT DDNAME IS NOT EQUAL TO BLANKS,         @ZM41117*/
*     /* IF IT IS NOT THEN CONTINUE.                         @Z40LB37*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1291
*     IF TIOEDDNM^=BLANKDDN&((DSABCATL=OFF)×/*               @ZM41117*/
*         (DSABCATL=ON&DSABJSCT=OFF)×/*                      @ZM41117*/
*         (DSABCATL=ON&DSABJSCT=ON& /*                       @ZM41117*/
*         (TIOEDDNM=JOBCAT×TIOEDDNM=STEPCAT))) THEN/*        @ZM41117*/
         L     @08,DSABTIOT(,DSABPTR)                              1291
         CLC   TIOEDDNM(8,@08),BLANKDDN                            1291
         BE    @RF01291                                            1291
         TM    DSABCATL(DSABPTR),B'00001000'                       1291
         BZ    @RT01291                                            1291
         TM    DSABCATL(DSABPTR),B'00001000'                       1291
         BNO   @GL00033                                            1291
         TM    DSABJSCT(DSABPTR),B'00000100'                       1291
         BZ    @RT01291                                            1291
@GL00033 TM    DSABCATL(DSABPTR),B'00001100'                       1291
         BNO   @RF01291                                            1291
         L     @08,DSABTIOT(,DSABPTR)                              1291
         CLC   TIOEDDNM(8,@08),JOBCAT                              1291
         BE    @RT01291                                            1291
         CLC   TIOEDDNM(8,@08),STEPCAT                             1291
         BNE   @RF01291                                            1291
@RT01291 DS    0H                                                  1292
*       DO;                         /*                       @Z40LB37*/
*                                                                  1292
*         /***********************************************************/
*         /*                                                         */
*         /* DETERMINE THE NUMBER OF DEVICE ENTRIES IN THE   @Z40LB37*/
*         /* TIOT AND SET TOTENTRY.                          @Z40LB37*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1293
*         TOTENTRY=ONE;             /*                       @Z40LB37*/
         LA    @08,1                                               1293
         LR    TOTENTRY,@08                                        1293
*         IF TIOELNGH>(LENGTH(TIOENTRY)-LENGTH(POOLSTAR)) THEN     1294
         L     @05,DSABTIOT(,DSABPTR)                              1294
         CLI   TIOELNGH(@05),20                                    1294
         BNH   @RF01294                                            1294
*           TOTENTRY=((TIOELNGH-(LENGTH(TIOENTRY)-LENGTH(POOLSTAR)))/
*               LENGTH(TIOEDEVE))+1;/*                       @Z40LB37*/
         SLR   @00,@00                                             1295
         IC    @00,TIOELNGH(,@05)                                  1295
         SL    @00,@CF03035                                        1295
         SRDA  @00,32                                              1295
         D     @00,@CF00042                                        1295
         ALR   @01,@08                                             1295
         LR    TOTENTRY,@01                                        1295
*                                                                  1296
*         /***********************************************************/
*         /*                                                         */
*         /* SCAN THE DEVICE ENTRIES FOR THE CALLER'S        @Z40LB37*/
*         /* VOLUME SERIAL TO SEE IF IT IS IN ONE OF THE     @Z40LB37*/
*         /* UCBS FOR THIS TIOT ENTRY.                       @Z40LB37*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1296
*         DO COUNTI=1 TO TOTENTRY WHILE VOLFOUND=OFF;/*      @Z40LB37*/
*                                                                  1296
@RF01294 LA    COUNTI,1                                            1296
         B     @DE01296                                            1296
@DL01296 TM    VOLFOUND,B'00010000'                                1296
         BNZ   @DC01296                                            1296
*           /*********************************************************/
*           /*                                                       */
*           /* SET THE UCBPTR TO THE CURRENT DEVICE ENTRY.   @Z40LB37*/
*           /* IF CALLER'S VOLSER IS IN THE UCB THEN SET     @Z40LB37*/
*           /* THE CALLER'S SELAGL WITH THE TIOT DDNAME      @Z40LB37*/
*           /* AND THE UCB ADDRESS.                          @Z40LB37*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1297
*           UCBPTR=TIOUCBP(COUNTI); /*                       @Z40LB37*/
         LR    @08,COUNTI                                          1297
         SLA   @08,2                                               1297
         L     @15,DSABTIOT(,DSABPTR)                              1297
         L     @08,TIOUCBP-5(@08,@15)                              1297
         LA    @08,0(,@08)                                         1297
         LR    UCBPTR,@08                                          1297
*           IF UCBVOLI=SELVOL THEN                                 1298
         L     @14,@PC00017                                        1298
         L     @14,SSAGLPTR(,@14)                                  1298
         CLC   UCBVOLI(6,UCBPTR),SELVOL(@14)                       1298
         BNE   @RF01298                                            1298
*             DO;                   /*                       @Z40LB37*/
*                                                                  1299
*               /*****************************************************/
*               /*                                                   */
*               /* SET THE SELAGL WITH THE TIOT DDNAME AND   @Z40LB37*/
*               /* THE UCB ADDRESS OF THE CURRENT DEVICE     @Z40LB37*/
*               /* ENTRY. SET THE VOLFOUND FLAG ON.          @Z40LB37*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1300
*               SLDDNAME=TIOEDDNM;  /*                       @Z40LB37*/
         L     @05,SELDDNP(,@14)                                   1300
         MVC   SLDDNAME(8,@05),TIOEDDNM(@15)                       1300
*               SLUCBADR=TIOUCBP(COUNTI);/*                  @Z40LB37*/
         L     @05,SELUCBP(,@14)                                   1301
         ST    @08,SLUCBADR(,@05)                                  1301
*               VOLFOUND=ON;        /*                       @Z40LB37*/
         OI    VOLFOUND,B'00010000'                                1302
*             END;                  /*                       @Z40LB37*/
*         END;                      /*                       @Z40LB37*/
@RF01298 AL    COUNTI,@CF00219                                     1304
@DE01296 CR    COUNTI,TOTENTRY                                     1304
         BNH   @DL01296                                            1304
@DC01296 DS    0H                                                  1305
*       END;                        /*                       @Z40LB37*/
*                                                                  1305
*     /***************************************************************/
*     /*                                                             */
*     /* IF THE CALLER'S VOLSER IS NOT FOUND THEN GO TO      @Z40LB37*/
*     /* THE NEXT DSAB ON THE CHAIN.                         @Z40LB37*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1306
*     IF VOLFOUND^=ON THEN                                         1306
@RF01291 TM    VOLFOUND,B'00010000'                                1306
         BO    @RF01306                                            1306
*       DSABPTR=DSABFCHN;           /*                       @Z40LB37*/
         L     DSABPTR,DSABFCHN(,DSABPTR)                          1307
*   END SSCANVOL;                   /*                       @Z40LB37*/
@RF01306 DS    0H                                                  1308
@DE01290 TM    VOLFOUND,B'00010000'                                1308
         BNZ   @DC01290                                            1308
         LTR   DSABPTR,DSABPTR                                     1308
         BNZ   @DL01290                                            1308
@DC01290 DS    0H                                                  1309
*                                                                  1309
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER.                                     @Z40LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1309
*   RETURN;                         /* RETURN TO MAIN ROUTINE      1309
*                                                            @Z40LB37*/
@EL00017 DS    0H                                                  1309
@EF00017 DS    0H                                                  1309
@ER00017 LM    @14,@12,12(@13)                                     1309
         BR    @14                                                 1309
*   END SELESCAN;                   /* END OF SELESCAN TO LOCATE A 1310
*                                      MOUNTED VOLUME        @Z40LB37*/
*                                                                  1311
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  1311
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           1311
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
SSCMSG   STM   @14,@12,@SA00018                                    1311
         MVC   @PC00018(8),0(@01)                                  1311
*                                   /*                       @Y30LB39*/
*                                                                  1312
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1312
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1312
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1312
*                                   /*                       @Y30LB39*/
*   DCL                                                            1312
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            1313
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1313
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1314
*                                   /*                       @Y30LB39*/
*   DCL                                                            1314
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            1315
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1315
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1316
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1316
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1316
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1317
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1317
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1317
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1318
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1318
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1318
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1319
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1319
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1319
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1320
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1320
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  1321
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1321
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             1321
         L     @08,@PC00001                                        1321
         L     @15,GDTTR2(,@08)                                    1321
         MVC   @TS00001(95),NEWERID2(@15)                          1321
         MVC   OLDERID2(95,@15),@TS00001                           1321
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1322
         MVC   NEWID2(4,@15),@CC03031                              1322
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1323
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1323
         LA    @15,SSDRGLT                                         1323
         ST    @15,SSDLPTR                                         1323
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1324
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              1324
         L     @14,@PC00018                                        1324
         L     @14,SSRCODE(,@14)                                   1324
         LTR   @14,@14                                             1324
         BNP   @RF01324                                            1324
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1325
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1326
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1326
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @03,SSINXLST                                        1327
         ST    @03,DARGRETP(,@15)                                  1327
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@15),SSMODSS0                            1328
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@15),X'01'                                 1329
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1330
         MVC   DARGRETL(2,@15),@CH03036                            1330
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1331
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1331
         ST    @08,@AL00001                                        1331
         LA    @03,@CF00115                                        1331
         ST    @03,@AL00001+4                                      1331
         LA    @03,SSDLPTR                                         1331
         ST    @03,@AL00001+8                                      1331
         MVI   @AL00001+8,X'80'                                    1331
         L     @15,GDTPRT(,@08)                                    1331
         LA    @01,@AL00001                                        1331
         BALR  @14,@15                                             1331
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1332
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         LA    ENTRYNUM,1                                          1332
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   1333
@DL01333 DS    0H                                                  1334
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         AL    ENTRYNUM,@CF00219                                   1334
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1335
@DE01333 L     @08,@PC00018                                        1335
         LR    @03,ENTRYNUM                                        1335
         ALR   @03,@03                                             1335
         LH    @03,SSARRAY-2(@03)                                  1335
         CH    @03,SSRHALF(,@08)                                   1335
         BE    @DC01333                                            1335
         SLR   @15,@15                                             1335
         CR    @03,@15                                             1335
         BNE   @DL01333                                            1335
@DC01333 DS    0H                                                  1336
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1336
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1336
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @14,SSDLPTR                                         1337
         MVC   DARGSMOD(3,@14),SSMODSS0                            1337
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   ENTRYNUM,DARGSENT(,@14)                             1338
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         CR    @03,@15                                             1339
         BNE   @RF01339                                            1339
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         ST    @08,DARGDBP(,@14)                                   1341
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@14),@CH00042                             1342
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  1345
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1345
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC01324                                            1345
@RF01324 DS    0H                                                  1346
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1346
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @08,SSDLPTR                                         1347
         MVC   DARGSMOD(3,@08),SSMODCM0                            1347
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         MVC   DARGSENT(1,@08),SSMSGNUM                            1348
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @15,@PC00018+4                                      1349
         ST    @15,DARGDBP(,@08)                                   1349
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@08),@CH00219                             1350
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1351
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1352
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1352
@RC01324 L     @08,@PC00001                                        1352
         ST    @08,@AL00001                                        1352
         LA    @15,@CF00115                                        1352
         ST    @15,@AL00001+4                                      1352
         LA    @15,SSDLPTR                                         1352
         ST    @15,@AL00001+8                                      1352
         MVI   @AL00001+8,X'80'                                    1352
         L     @15,GDTPRT(,@08)                                    1352
         LA    @01,@AL00001                                        1352
         BALR  @14,@15                                             1352
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1353
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             1353
         L     @14,@SA00018                                        1353
         LM    @00,@12,@SA00018+8                                  1353
         BR    @14                                                 1353
*   END SSCMSG;                     /*                       @Y30LB39*/
*   END IDCSA06                     /* END OF MSS SYSTEM ADAPTER - 1355
*                                      IDCSA06               @Y30LB37*/
*                                                                  1355
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF09 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHADSAB )                                       */
*/*%INCLUDE SYSLIB  (IHAQDB  )                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*                                                                  1355
*       ;                                                          1355
@DATA    DS    0H
@CH00153 DC    H'2'
@CH00162 DC    H'3'
@CH00156 DC    H'6'
@CH02774 DC    H'19'
@CH03034 DC    H'38'
@CH02817 DC    H'72'
@CH03033 DC    H'80'
@CH03036 DC    H'120'
@CH02731 DC    XL2'0100'
@SM03055 MVC   ENQBEGIN(0),ENQCORE
@SM03057 MVC   TENQBEGN(0),TENQCORE
@SM03059 MVC   DEQBEGIN(0),DEQCORE
@SM03061 MVC   ENQBEGN3(0),ENQCORE3
@SM03063 MVC   ENQBEGN1(0),ENQCORE1
         DS    0F
@AL01063 DC    A(SHR)                  LIST WITH   3 ARGUMENT(S)
         DC    A(WAIT)
         DC    A(MAJRNAM)
@AL01268 DC    A(SHR)                  LIST WITH   3 ARGUMENT(S)
         DC    A(WAIT)
         DC    A(SMJRNAM)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    15F
@PC00002 DS    1F
@SA00003 DS    15F
@PC00003 DS    2F
@SA00004 DS    15F
@PC00004 DS    1F
@SA00012 DS    15F
@PC00012 DS    1F
@SA00014 DS    15F
@PC00014 DS    1F
@SA00016 DS    15F
@PC00016 DS    1F
@SA00005 DS    15F
@PC00005 DS    1F
@SA00009 DS    15F
@PC00009 DS    1F
@SA00006 DS    15F
@PC00006 DS    1F
@SA00011 DS    15F
@PC00011 DS    2F
@SA00007 DS    15F
@PC00007 DS    1F
@SA00008 DS    15F
@PC00008 DS    1F
@SA00018 DS    15F
@PC00018 DS    2F
@SA00010 DS    15F
@PC00010 DS    1F
@SA00013 DS    15F
@PC00013 DS    1F
@SA00015 DS    15F
@PC00015 DS    1F
@PC00017 DS    1F
@AL00001 DS    5A
@AFTEMPS DS    1F
IDCSA06  CSECT
         DS    0F
@CF00115 DC    F'0'
@CF00219 DC    F'1'
@CH00219 EQU   @CF00219+2
@CF00042 DC    F'4'
@CH00042 EQU   @CF00042+2
@CF00179 DC    F'8'
@CH00179 EQU   @CF00179+2
@CF00037 DC    F'12'
@CF00473 DC    F'16'
@CF03035 DC    F'20'
@CF02065 DC    F'96'
@CF03052 DC    XL4'0000FFFF'
@CF02850 DC    XL4'57'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
DMPINDEX DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
TIOTPTR  DS    A
ARGLPTR  DS    A
TCBP     DS    A
REASONCD DS    FL4
         ORG   REASONCD
@NM00133 DS    FL2
REASON   DS    FL2
         ORG   REASONCD+4
UNITPTR  DS    A
MYAGLPTR DS    A
MTPUAGLP DS    A
MNTLPTR  DS    A
ACQLPTR  DS    A
RTNAREA  DS    A
MDPUAGLP DS    A
WTOPTR   DS    A
DMNTLPTR DS    A
VOLSPTR  DS    A
SSDLPTR  DS    A
LISTPTR  DS    A
RETCODE  DS    H
WTOLEN   DS    H
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
         DS    CL2
TTRWORK  DS    CL4
         ORG   TTRWORK
CCWORK   DS    FL2
HHWORK   DS    FL2
         ORG   TTRWORK+4
SYSIN    DS    CL16
         ORG   SYSIN
JOBNAM   DS    CL8
STEPNM   DS    CL8
         ORG   SYSIN+16
ROUTCD   DS    BL2
         ORG   ROUTCD
CD1      DS    BL1
@NM00129 EQU   ROUTCD+0
         ORG   ROUTCD+2
DESCCD   DS    BL2
         ORG   DESCCD
@NM00130 DS    BL1
DESC4    EQU   DESCCD+0
@NM00131 EQU   DESCCD+0
         ORG   DESCCD+2
SA06SWS  DS    CL1
         ORG   SA06SWS
FOUNDVOL DS    BL1
FOUNDADD EQU   SA06SWS+0
FOUNDCAT EQU   SA06SWS+0
VOLFOUND EQU   SA06SWS+0
@NM00132 EQU   SA06SWS+0
         ORG   SA06SWS+1
MNTSTATS DS    CL8
ECBCODE  DS    CL1
VOLWORK  DS    CL6
PRINTARG DS    CL52
UNITAREA DS    CL11
CHECKSWS DS    CL1
         ORG   CHECKSWS
NOTDASW  DS    BL1
NOTVTSW  EQU   CHECKSWS+0
NOTDMNT  EQU   CHECKSWS+0
@NM00134 EQU   CHECKSWS+0
         ORG   CHECKSWS+1
RETAREA  DS    CL10
         ORG   RETAREA
RETVOLSR DS    CL6
RETTTR   DS    CL4
         ORG   RETAREA+10
         DS    CL2
SV82CORE DS    CL16
SA6MDAGL DS    CL37
         DS    CL3
MTPUAGL  DS    CL20
MNTLST   DS    CL28
ACQLST   DS    CL96
EXOLIST  DS    CL34
         DS    CL2
EXGLIST  DS    CL32
RECAREA  DS    CL84
         ORG   RECAREA
@NM00143 DS    CL84
         ORG   RECAREA+84
CCHHRWK  DS    CL5
         ORG   CCHHRWK
CC       DS    FL2
HH       DS    FL2
R        DS    FL1
         ORG   CCHHRWK+5
         DS    CL3
SA6PUAGL DS    CL20
SA6PUVOL DS    CL6
SA6PUTTR DS    CL4
WTOMSG   DS    CL72
         DS    CL2
DEMNTLST DS    CL28
VOLSER   DS    CL6
MINRNAME DS    CL7
         ORG   MINRNAME
MINRLEN  DS    FL1
MINRASID DS    CL2
MINRQDB  DS    CL4
         ORG   MINRNAME+7
         DS    CL3
VOLSER3  DS    CL6
OPTINFO  DS    CL1
         DS    CL1
INFOAREA DS    CL38
         ORG   INFOAREA
INFOHEAD DS    CL4
         ORG   INFOHEAD
INWKLEN  DS    FL2
RETNLEN  DS    FL2
         ORG   INFOAREA+4
INFOTYPE DS    FL2
DATALEN  DS    FL2
VOLAREA  DS    5CL6
         ORG   INFOAREA+38
         DS    CL2
VOLSER1  DS    CL6
SMNRNAME DS    CL7
         ORG   SMNRNAME
SMNRLEN  DS    FL1
SMNRASID DS    CL2
SMNRQDB  DS    CL4
         ORG   SMNRNAME+7
SSDRGLT  DS    CL20
         DS    CL3
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
IDCSA06  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ACQOP    DC    XL1'02'
SSMSGNUM DC    AL1(56)
@CC02523 DC    C'SA06'
@CC02620 DC    C'SAIN'
@CC02632 DC    C'SAEX'
@CC02648 DC    C'SACK'
@CC02649 DC    C'VIRT'
@CC02650 DC    C'REAL'
@CC02672 DC    C'SAPU'
@CC02687 DC    C'SAPR'
@CC02701 DC    C'SAMC'
@CC02714 DC    C'SAMT'
@CC02773 DC    C'SAIM'
@CC02802 DC    C'SARD'
@CC02819 DC    C'SADM'
@CC02849 DC    C'SAID'
@CC02887 DC    C'SAED'
@CC02921 DC    C'SAFE'
@CC02942 DC    C'SAST'
@CC02956 DC    C'SAGE'
@CC02975 DC    C'SASE'
@CC02994 DC    C'SASD'
@CC03008 DC    C'SASC'
@CC03031 DC    C'SSAA'
@CC02595 DC    C'SA6'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODID    DC    CL4'SA06'
POST     DC    CL8'POST    '
CLEAR    DC    CL8'CLEAR   '
ENQCMD   DC    CL8'ENQ     '
DEQCMD   DC    CL8'DEQ     '
ZEROVOL  DC    X'000000000000'
BLANKDDN DC    CL8'        '
ECBZERO  DC    X'00'
ZEROBITS DS    CL1
         ORG   ZEROBITS
ZERODMC  DC    B'00000000'
         ORG   ZEROBITS+1
CHKERROR DC    CL8'CHECKERR'
MNTERROR DC    CL8'MOUNTERR'
FIXAREA  DS    CL400
         ORG   FIXAREA
ZAPAREA  DC    400X'00'
         ORG   FIXAREA+400
UNIT3330 DC    X'09'
CLEARCD  DC    X'22'
POSTCD   DC    X'23'
DEFALTTR DC    X'00010100'
DEFTTR   DC    X'0100'
SEARCHCC DC    X'0000000003'
MAJNAME  DC    CL8'SYSZVOLS'
         DS    CL2
MAJRNAM  DC    CL8'SYSZTIOT'
MAJNAME3 DC    CL8'SYSZVOLS'
MAJNAME1 DC    CL8'SYSZVOLS'
SMJRNAM  DC    CL8'SYSZTIOT'
JOBCAT   DC    CL8'JOBCAT  '
STEPCAT  DC    CL8'STEPCAT '
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
@DATD    DSECT
*                                                         /*#Y30LB37*/
*
IDCSA06  CSECT
         ENTRY IDCSAS6
IDCSAS6  DC    A(@SIZDATD)
IDCSA06  CSECT
*                                                         /*#Y30LB37*/
ENQCORE  DS   0F
         ENQ  (MAJNAME,,E,6,SYSTEM),RET=USE,MF=L,TCB=0  USE VOL ENQ
ENQLEN   DC   A(*-ENQCORE)                                    @Y30LB37
DEQCORE  DS   0F
         DEQ  (MAJNAME,,6,SYSTEM),RET=HAVE,MF=L,TCB=0   HAVE VOL DEQ
DEQLEN   DC   A(*-DEQCORE)                                    @Y30LB37
TENQCORE DS   0F
         ENQ  (MAJNAME,,S,6,SYSTEM),RET=TEST,MF=L,TCB=0 SHARE VOL ENQ
TENQLEN  DC   A(*-TENQCORE)                                   @Y30LB37
@DATD    DSECT
*                                                         /*#Y30LB37*/
ENQBEGIN DS   0F                                              #Y30LB37
ENQLIST  ENQ  (MAJNAME,,E,6,SYSTEM),RET=USE,MF=L,TCB=0  USE VOL ENQ
DEQBEGIN DS   0F                                              #Y30LB37
DEQLIST  DEQ  (MAJNAME,,6,SYSTEM),RET=HAVE,MF=L,TCB=0   HAVE VOL DEQ
TENQBEGN DS   0F                                              #Y30LB37
TENQLIST ENQ  (MAJNAME,,S,6,SYSTEM),RET=TEST,MF=L,TCB=0 SHARE VOL ENQ
IDCSA06  CSECT
*                                                         /*@YD00175*/
ENQCORE3 DS   0F
         ENQ  (MAJNAME3,,E,6,SYSTEM),RET=TEST,MF=L,TCB=0  TEST VOL ENQ
ENQLEN3  DC   A(*-ENQCORE3)                                   @YD00175
@DATD    DSECT
*                                                         /*@YD00175*/
ENQBEGN3 DS   0F                                              @YD00175
ENQLIST3 ENQ  (MAJNAME3,,E,6,SYSTEM),RET=TEST,MF=L,TCB=0  TEST VOL ENQ
IDCSA06  CSECT
*                                                         /*@YD00175*/
ENQCORE1 DS   0F
         ENQ  (MAJNAME1,,E,6,SYSTEM),RET=CHNG,MF=L,TCB=0  CHNG VOL ENQ
ENQLEN1  DC   A(*-ENQCORE1)                                   @YD00175
@DATD    DSECT
*                                                         /*@YD00175*/
ENQBEGN1 DS   0F                                              @YD00175
ENQLIST1 ENQ  (MAJNAME1,,E,6,SYSTEM),RET=CHNG,MF=L,TCB=0  CHNG VOL ENQ
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCSA06  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTRYNUM EQU   @02
COUNTI   EQU   @03
TOTENTRY EQU   @04
SELEDRC  EQU   @04
SETEXRC  EQU   @04
GETEXRC  EQU   @04
FINDXRC  EQU   @04
ENQDQRC  EQU   @04
ISUEDRC  EQU   @04
DEMNTRC  EQU   @04
RDLABRC  EQU   @02
ISUEMRC  EQU   @04
MTVOLRC  EQU   @04
MTCTLRC  EQU   @04
MDSETRC  EQU   @04
UPOSTRC  EQU   @04
CHECKRC  EQU   @02
SAVEDSAB EQU   @04
QDBPTR   EQU   @03
DSABPTR  EQU   @02
ASCBPTR  EQU   @02
TCBPTR   EQU   @02
UCBPTR   EQU   @05
TESTRC   EQU   @02
RTNREG   EQU   @15
REG1     EQU   @01
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
ARR1     EQU   @01
MDREG1   EQU   @01
REG0     EQU   @00
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CVTPTR   EQU   16
IDCSAEP0 EQU   0
IDCSASS0 EQU   0
IDCSANQ0 EQU   0
IDCSADQ0 EQU   0
IDCSASI0 EQU   0
IDCSAWO0 EQU   0
IDCSAST0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
UNITABL  EQU   0
UNITUCB  EQU   UNITABL
UNITADR  EQU   UNITABL+4
@NM00010 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOSI0 EQU   0
IDCIO050 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
IOINFVOL EQU   IOINFOPT
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGCNT  EQU   DARGLIST+14
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
DARGDTM  EQU   DARGARY+4
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
IDCDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
SAHIST   EQU   0
AUTOPTR  EQU   SAHIST+8
SAHSTA   EQU   SAHIST+12
AUTOTBL  EQU   0
AUTOARAY EQU   AUTOTBL
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTARRAY  EQU   CTMSG+4
MDAGL    EQU   0
MDHEAD   EQU   MDAGL
MDUCBPTR EQU   MDAGL+8
MDDDNAME EQU   MDAGL+12
MDPUAGL  EQU   MDAGL+20
MDLABEL  EQU   MDAGL+24
MDFLAGS  EQU   MDAGL+30
MDNEWVOL EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDVTOCTR EQU   MDFLAGS
MDVTOC   EQU   MDAGL+32
MDCC     EQU   MDVTOC
MDHH     EQU   MDVTOC+2
PUAGL    EQU   0
PUHEAD   EQU   PUAGL
PUUCBPTR EQU   PUAGL+8
PUTTRPTR EQU   PUAGL+12
PULABELP EQU   PUAGL+16
CKAGL    EQU   0
CKHEAD   EQU   CKAGL
CKUCBPTR EQU   CKAGL+8
CKDDNAME EQU   CKAGL+12
CKDATYPE EQU   CKAGL+20
CKFLAGS  EQU   CKAGL+28
CKTESTVT EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
EXCLAGL  EQU   0
EXCLUCBP EQU   EXCLAGL+8
EXCLDDP  EQU   EXCLAGL+12
EXCLVOL  EQU   EXCLAGL+16
EXCLFLAG EQU   EXCLAGL+22
EXCLMNT  EQU   EXCLFLAG
EXOARG   EQU   0
EXODDN   EQU   EXOARG+8
EXOUCB   EQU   EXOARG+20
EXOCTLBK EQU   EXOARG+28
EXOPT    EQU   EXOARG+32
EXONEW   EQU   EXOPT
EXFLG    EQU   EXOARG+33
EXGARG   EQU   0
EXGCTLBK EQU   EXGARG+8
EXGCCHH2 EQU   EXGARG+16
EXGRECNO EQU   EXGARG+20
EXGDATAP EQU   EXGARG+24
EXGKEYLN EQU   EXGARG+28
EXGDATAL EQU   EXGARG+30
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STAVUCB  EQU   STAEPARM+8
STAVVOL  EQU   STAEPARM+12
STARUCB  EQU   STAEPARM+20
STARVOL  EQU   STAEPARM+24
STARTTR  EQU   STAEPARM+32
STATCB   EQU   STAEPARM+48
STARCVY  EQU   STAEPARM+52
STAVMNT  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVPOST EQU   STARCVY
STACLEAR EQU   STARCVY
STARETRY EQU   STAEPARM+53
STAVTTR  EQU   STAEPARM+54
VOLLABEL EQU   0
VOLKEY   EQU   VOLLABEL
VOLVTOC  EQU   VOLLABEL+15
SV82LIST EQU   0
SV82CODE EQU   SV82LIST
SV82UCBP EQU   SV82LIST+1
@NM00066 EQU   SV82LIST+4
SV82DCBP EQU   @NM00066
SV82VOLP EQU   SV82DCBP
SV82TTRP EQU   SV82LIST+8
@NM00067 EQU   SV82LIST+12
SV82WRKP EQU   @NM00067
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELUCBP  EQU   SELAGL+8
SELDDNP  EQU   SELAGL+12
SELVOL   EQU   SELAGL+16
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBRESV  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBNOTRD EQU   UCBNRY
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCBRVDEV EQU   UCBRWTAU
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBUNTYP EQU   UCBTBYT4
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00088 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBTCBP EQU   JSCBSEC1+20
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
ASCB     EQU   0
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
DSAB     EQU   0
DSABFCHN EQU   DSAB+4
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABCATL EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABFLG4 EQU   DSAB+37
DSABANMI EQU   0
DSABGIDL EQU   0
QDB      EQU   0
QDBFELMP EQU   QDB+12
TIOT1    EQU   0
TIOENTRY EQU   0
TIOELNGH EQU   TIOENTRY
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
TIOEFSRT EQU   TIOENTRY+17
POOLSTAR EQU   TIOENTRY+20
MDUCBADR EQU   0
CKUCBADR EQU   0
PUUCBADR EQU   0
EXUCBADR EQU   0
EXDDNAME EQU   0
SLUCBADR EQU   0
SLDDNAME EQU   0
TCBWDSP  EQU   0
TCBWORDS EQU   0
CURTCBP  EQU   TCBWORDS+4
CKRVAREA EQU   0
PURETVOL EQU   0
PURETTTR EQU   0
PUVOLRET EQU   0
PUTTRRET EQU   0
MNTLIST  EQU   0
MDFLG    EQU   MNTLIST+6
MDVOL    EQU   MNTLIST+8
MDVUA    EQU   MNTLIST+14
MNTEXTP  EQU   MNTLIST+24
ACQLIST  EQU   0
ARLL     EQU   ACQLIST
AROP     EQU   ACQLIST+4
ARFLG    EQU   ACQLIST+6
ARDRES   EQU   ARFLG
ARNMEXT  EQU   ACQLIST+7
ARVOL    EQU   ACQLIST+8
AREXT    EQU   ACQLIST+28
ARNEDB   EQU   ACQLIST+92
DMNTLIST EQU   0
DMNTFLAG EQU   DMNTLIST+6
DMDELRSP EQU   DMNTFLAG
DMVOL    EQU   DMNTLIST+8
TCODE    EQU   0
TESTCODE EQU   TCODE+3
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
DMPTRM   EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASN0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
PUVOLSER EQU   0
UCBBGN   EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTSAH   EQU   GDTTBL+32
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTABT   EQU   GDTTBL+152
GDTABH   EQU   GDTTBL+156
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
REQUEST  EQU   0
ARGLIST  EQU   0
ARGNAME  EQU   ARGLIST
CKAGLPTR EQU   0
COMMAND  EQU   0
PUAGLPTR EQU   0
MDAGLPTR EQU   0
MTAGLPTR EQU   0
MTMDAGLP EQU   0
IMMDAGLP EQU   0
RDMDAGLP EQU   0
DMAGLPTR EQU   0
IDMDAGLP EQU   0
ORDER    EQU   0
EDAGLPTR EQU   0
EXAGLPTR EQU   0
SCAGLPTR EQU   0
GXAGLPTR EQU   0
SXAGLPTR EQU   0
SLAGLPTR EQU   0
SSAGLPTR EQU   0
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
UCBOBS01 EQU   UCBDEV
UCBVOLI  EQU   UCBOBS01+4
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00087 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCDSABQ EQU   JSCBSEC3+60
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
PSARSVTE EQU   PSARSVT
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
TIOUCBP  EQU   TIOEDEVE+1
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00096 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00095 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00087
UCBSKPFG EQU   @NM00087
UCBRIPND EQU   @NM00087
UCBRTIAC EQU   @NM00087
UCBRSV79 EQU   @NM00087
UCBRSV78 EQU   @NM00087
UCBRSV77 EQU   @NM00087
UCBOLTEP EQU   @NM00087
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00086 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVTOC  EQU   UCBOBS01
@NM00145 EQU   SSRCODE
@NM00128 EQU   ARGLIST+8
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
@NM00144 EQU   TCODE
DMNTVUA  EQU   DMNTLIST+26
DMNTRES2 EQU   DMNTLIST+25
DMHOST   EQU   DMNTLIST+20
DMNTECB  EQU   DMNTLIST+16
DMNTASID EQU   DMNTLIST+14
DMBITRES EQU   DMNTFLAG
DMVUAVAL EQU   DMNTFLAG
DMBITRE1 EQU   DMNTFLAG
DMNTRES1 EQU   DMNTLIST+5
DMOPCD   EQU   DMNTLIST+4
DMLEN    EQU   DMNTLIST
@NM00142 EQU   AREXT
ARCOMPC  EQU   ACQLIST+26
@NM00141 EQU   ACQLIST+25
ARHOST   EQU   ACQLIST+20
ARECB    EQU   ACQLIST+16
ARASID   EQU   ACQLIST+14
@NM00140 EQU   ARFLG
ARINH    EQU   ARFLG
ARBDUBD  EQU   ARFLG
@NM00139 EQU   ACQLIST+5
MDJFCB   EQU   MNTEXTP
@NM00138 EQU   MNTLIST+21
MDHOST   EQU   MNTLIST+16
@NM00137 EQU   MDFLG
MDMEXT   EQU   MDFLG
MDSRTCH  EQU   MDFLG
MDVSVRQ  EQU   MDFLG
MDVISMNT EQU   MDFLG
@NM00136 EQU   MDFLG
@NM00135 EQU   MNTLIST+5
MDOPCD   EQU   MNTLIST+4
MDLEN    EQU   MNTLIST
OLDTCBP  EQU   TCBWORDS
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00127 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00126 EQU   POOLSTAR
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
QDBRV002 EQU   QDB+28
QDBPRDS  EQU   QDB+26
QDBPRSZ  EQU   QDB+24
QDBBPTDS EQU   QDB+22
QDBFPTDS EQU   QDB+20
QDBLELMP EQU   QDB+16
QDBNELMS EQU   QDB+8
QDBRV001 EQU   QDB+6
QDBATTR  EQU   QDB+4
QDBQDB   EQU   QDB
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABSIOT EQU   DSAB+64
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABPTTR EQU   DSAB+44
DSABTCBP EQU   DSAB+40
DSABRS02 EQU   DSAB+38
@NM00125 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00124 EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00123 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABNUSE EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABDCAT EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABPALC EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00122 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00121 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABOPCT EQU   DSAB+14
DSABLNTH EQU   DSAB+12
DSABBCHN EQU   DSAB+8
DSABID   EQU   DSAB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00094 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00093 EQU   IEZJSCB
@NM00092 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00091 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00090 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00089 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00088
UCBHALI  EQU   @NM00088
UCBRSV09 EQU   @NM00088
UCBRSV08 EQU   @NM00088
UCBRSV07 EQU   @NM00088
UCBRSV06 EQU   @NM00088
UCBRSV05 EQU   @NM00088
UCBRSV04 EQU   @NM00088
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00085 EQU   UCB
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00084 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00083 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00082 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00081 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00080 EQU   VSDSCR+5
@NM00079 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00078 EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00077 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00076 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00075 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00074 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00073 EQU   VSDVTOC
@NM00072 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00071 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00070 EQU   SELFLAGS
SELHEAD  EQU   SELAGL
@NM00069 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00068 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
@NM00065 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00064 EQU   STARCVY
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
@NM00063 EQU   STAEPARM+30
@NM00062 EQU   STAEPARM+18
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00061 EQU   RCTAGL+10
@NM00060 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00059 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00058 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00057 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00056 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00055 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00054 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00053 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00052 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00051 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00050 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
@NM00049 EQU   EXGARG+29
EXGCCHH1 EQU   EXGARG+12
EXGHEAD  EQU   EXGARG
@NM00048 EQU   EXFLG
EXOREAD  EQU   EXFLG
@NM00047 EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOTAB   EQU   EXOPT
EXOEXT   EQU   EXOARG+24
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXOHEAD  EQU   EXOARG
@NM00046 EQU   EXCLFLAG
EXCLHEAD EQU   EXCLAGL
@NM00045 EQU   CKFLAGS
CKLABELP EQU   CKAGL+24
MDR      EQU   MDVTOC+4
@NM00044 EQU   MDAGL+31
CTTBLRR  EQU   CTARRAY+3
CTTBLHH  EQU   CTARRAY+2
CTTBLCC  EQU   CTARRAY+1
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
CTREALCC EQU   CTMSG+1
@NM00043 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00042 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00041 EQU   CMMSG+7
@NM00040 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00039 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00038 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
PTR1     EQU   AUTOARAY+8
ASIZE    EQU   AUTOARAY+6
STATUS   EQU   AUTOARAY+4
AREAID   EQU   AUTOARAY
GPLAST   EQU   SAHIST+4
GPFIRST  EQU   SAHIST
@NM00037 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00036 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00035 EQU   ERCNVTAB+24
ERCPLPT  EQU   ERCNVTAB+20
ERCATRC  EQU   ERCNVTAB+16
ERDSNM   EQU   ERCNVTAB+12
@NM00034 EQU   ERCNVTAB+4
@NM00033 EQU   ERCNVTAB+3
@NM00032 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00031 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00030 EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00029 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00028 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00027 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00026 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00025 EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
@NM00024 EQU   OPNAGL+43
@NM00023 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00022 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00021 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
@NM00020 EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00019 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCREL   EQU   IOCSTR+60
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00018 EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
@NM00017 EQU   IOCMSG
IOCCHPSY EQU   IOCCHP
IOCCHPAS EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
@NM00016 EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
@NM00015 EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00014 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00013 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00012 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00011 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00010+1
UNITCHA  EQU   @NM00010
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
@NM00120 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00119 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00118 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00117 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00116 EQU   FLCFSA
@NM00115 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00114 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00113 EQU   FLCIOA
@NM00112 EQU   FLCMCLA+15
@NM00111 EQU   FLCMCLA+14
@NM00110 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00109 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00108 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00107 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00106 EQU   FLCPER
@NM00105 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00104 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00103 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00102 EQU   FLCPIILC
@NM00101 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00100 EQU   FLCSVILC
@NM00099 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00098 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00097 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RF00324 EQU   @RC00321
@RF00331 EQU   @RC00321
@RF00340 EQU   @RC00335
@RF00347 EQU   @RC00335
@RF00578 EQU   @RC00565
@RF00939 EQU   @RC00922
@RC00932 EQU   @RC00922
@RT00930 EQU   @RC00922
@RF01007 EQU   @RC00989
@RC01014 EQU   @RC00989
@RC01080 EQU   @RC01079
@RF01149 EQU   @EL00013
@RF01339 EQU   @RC01324
@PB00018 EQU   @EL00001
@RF01082 EQU   @RC01080
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCSA06,(C'PLS0913',0603,76231)
