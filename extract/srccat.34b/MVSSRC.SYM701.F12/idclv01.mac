         TITLE '**************** IDCLV01: LISTMSVI FSR *************** *
                        '
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCLV01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCLV01   77.354'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @08,0                                               0002
@PSTART  LA    @09,4095(,@08)                                      0002
         LA    @10,4095(,@09)                                      0002
         LA    @12,4095(,@10)                                      0002
         USING @PSTART,@08                                         0002
         USING @PSTART+4095,@09                                    0002
         USING @PSTART+8190,@10                                    0002
         USING @PSTART+12285,@12                                   0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                                                  0303
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE MAIN PROCEDURE.                           @Y30LB33*/
*   /* IT OPENS AND CLOSES THE OUTPUT DATA SET               @Y30LB33*/
*   /* WHEN REQUESTED BY THE USER.                           @Y30LB33*/
*   /* IT INITIALIZES PORTIONS OF MAIN STORAGE. IT           @Y30LB33*/
*   /* CALLS ON THE REPORT SELECTER ROUTINE TO PRODUCE       @Y30LB33*/
*   /* THE REPORT. IT ISSUES THE FINAL COMPLETION MESSAGE.   @Y30LB33*/
*   /* THE EXIT FROM THE PROGRAM IS FROM HERE.               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0303
*   OLDERID2=NEWERID2;                                             0303
         L     @07,@PC00001                                        0303
         L     @15,GDTTR2(,@07)                                    0303
         MVC   @TS00001(95),NEWERID2(@15)                          0303
         MVC   OLDERID2(95,@15),@TS00001                           0303
*   NEWID2='LVAA';                  /* INITIAL TRACE POINT   @Y30LB33*/
         MVC   NEWID2(4,@15),@CC02417                              0304
*   TESTRC=0;                       /* INITIALIZE CODE HOLD  @Y30LB33*/
         SLR   TESTRC,TESTRC                                       0305
*   IF GDTDBG=NULLPTR THEN                                         0306
         L     @15,GDTDBG(,@07)                                    0306
         LTR   @15,@15                                             0306
         BZ    @RT00306                                            0306
*     ;                                                            0307
*   ELSE                                                           0308
*     CALL IDCDB010(GDTTBL,'LVAA'); /* COMPLETE DUMP         @Y30LB33*/
*                                                                  0308
         L     @15,@PC00001                                        0308
         ST    @15,@AL00001                                        0308
         LA    @14,@CC02417                                        0308
         ST    @14,@AL00001+4                                      0308
         MVI   @AL00001+4,X'80'                                    0308
         L     @15,GDTDBG(,@15)                                    0308
         LA    @01,@AL00001                                        0308
         BALR  @14,@15                                             0308
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE WORK AREAS AND POINTERS                    @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0309
*   DUMPADDR=ADDR(DUMPAREA);        /* INITIALIZE THE        @Y30LB33
*                                      POINTER FOR SYMBOLIC  @Y30LB33
*                                      DUMPS                 @Y30LB33*/
@RT00306 LA    @06,DUMPAREA                                        0309
         ST    @06,DUMPADDR                                        0309
*   PRINTME=NULLPTR;                /* CLEAR THE PRINT IOCS  @Y30LB33
*                                      POINTER               @Y30LB33*/
         SLR   @06,@06                                             0310
         ST    @06,PRINTME                                         0310
*   SETRC=0;                        /* INITIALIZE RETURN CODE HOLDER
*                                                            @Y30LB33*/
         STH   @06,SETRC                                           0311
*   SWCHBITS=SWCHBITS&&SWCHBITS;    /*                       @Y30LB33*/
         XC    SWCHBITS(1),SWCHBITS                                0312
*   SUMTBL=SUMTBL&&SUMTBL;          /* CLEAR SUMMARY TABLE   @Y30LB33*/
         XC    SUMTBL(48),SUMTBL                                   0313
*   DDSTRU=ADDR(LVDRGLST);          /* INITIALIZE THE DARGLIST     0314
*                                                            @Y30LB33
*                                      POINTER TO POINT AT MY PRINT
*                                      ARGUMENT LIST AREA    @Y30LB33*/
*                                                                  0314
         LA    @03,LVDRGLST                                        0314
         ST    @03,DDSTRU                                          0314
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE MAPPING MACRO BASES                    @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0315
*   BASEVPTR=ADDR(VOLRCDBF);        /* BASE VOLUME MAP       @Y30LB33*/
         LA    @15,VOLRCDBF                                        0315
         LR    BASEVPTR,@15                                        0315
*   BCDVPTR=ADDR(VOLRCDBF);         /* BASE VOLUME AREA      @Y30LB33*/
         ST    @15,BCDVPTR                                         0316
*   DUPVPTR=ADDR(VOLRCDBF);         /* DUPLICATE VOLUME MAP  @Y30LB33*/
         ST    @15,DUPVPTR                                         0317
*   GROUPPTR=ADDR(GRPRCDBF);        /* GROUP RECORD MAP      @Y30LB33*/
         LA    GROUPPTR,GRPRCDBF                                   0318
*   COPYVPTR=ADDR(CPYRCDBF);        /* COPY RECORD MAP       @Y30LB33*/
         LA    @03,CPYRCDBF                                        0319
         ST    @03,COPYVPTR                                        0319
*                                                                  0320
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE OUTPUT FILE FDTTBL ENTRIES. IF ONE           @Y30LB33*/
*   /* IS DEFINED, BUILD THE OPEN ARGUMENT LIST AND          @Y30LB33*/
*   /* OPEN THE DATA SET                                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*   IF ADDR(ODS)>0×ADDR(OFILE)>0 THEN                              0320
         L     @03,@PC00001+4                                      0320
         C     @06,FDTPTR+44(,@03)                                 0320
         BL    @RT00320                                            0320
         C     @06,FDTPTR+40(,@03)                                 0320
         BNL   @RF00320                                            0320
@RT00320 DS    0H                                                  0321
*     DO;                           /*                       @Y30LB33*/
*       LVOPNAGL=LVOPNAGL&&LVOPNAGL;/* NULL ARG LIST         @Y30LB33*/
         XC    LVOPNAGL(48),LVOPNAGL                               0322
*       OPNPTR=ADDR(LVOPNAGL);      /* GET ADDRESS           @Y30LB33*/
         LA    OPNPTR,LVOPNAGL                                     0323
*       OPNOPTOT=ON;                /* OPEN FOR OUTPUT       @Y30LB33*/
         OI    OPNOPTOT(OPNPTR),B'01000000'                        0324
*       OPNIOC=ADDR(PRINTME);       /* SET IOCS POINTER      @Y30LB33*/
         LA    @06,PRINTME                                         0325
         ST    @06,OPNIOC(,OPNPTR)                                 0325
*       OPNMODAC=ON;                /* ASA CARRIAGE CONTROL  @Y30LB33*/
         OI    OPNMODAC(OPNPTR),B'01000000'                        0326
*       IF ADDR(ODS)=0 THEN         /*                       @Y30LB33*/
         L     @06,@PC00001+4                                      0327
         L     @15,FDTPTR+44(,@06)                                 0327
         LTR   @15,@15                                             0327
         BNZ   @RF00327                                            0327
*         OPNDDN=ADDR(OFILEVAL);    /*                       @Y30LB33*/
         L     @06,FDTPTR+40(,@06)                                 0328
         LA    @06,OFILEVAL(,@06)                                  0328
         ST    @06,OPNDDN(,OPNPTR)                                 0328
*       ELSE                                                       0329
*         OPNDSN=ADDR(ODSVAL);      /*                       @Y30LB33*/
         B     @RC00327                                            0329
@RF00327 L     @06,@PC00001+4                                      0329
         L     @06,FDTPTR+44(,@06)                                 0329
         LA    @06,ODSVAL(,@06)                                    0329
         ST    @06,OPNDSN(,OPNPTR)                                 0329
*       CALL IDCIOOP0(GDTTBL,LVOPNAGL);/*                    @Y30LB33*/
@RC00327 L     @03,@PC00001                                        0330
         ST    @03,@AL00001                                        0330
         LA    @15,LVOPNAGL                                        0330
         ST    @15,@AL00001+4                                      0330
         MVI   @AL00001+4,X'80'                                    0330
         L     @15,GDTOPN(,@03)                                    0330
         LA    @01,@AL00001                                        0330
         BALR  @14,@15                                             0330
*       RESPECIFY                                                  0331
*         RTNREG RSTD;                                             0331
*       TESTRC=RTNREG;                                             0332
         LR    TESTRC,RTNREG                                       0332
*       RESPECIFY                                                  0333
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*                                                                  0333
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE RETURN CODE FROM THE OPEN IS NOT OK,       @Y30LB33*/
*       /* THEN SET LASTCOND TO 8                            @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0334
*       IF TESTRC=4 THEN                                           0334
         C     TESTRC,@CF00043                                     0334
         BNE   @RF00334                                            0334
*         LASTCOND=LASTCC08;        /*                       @Y30LB33*/
         L     @06,@PC00001+8                                      0335
         MVC   LASTCOND(2,@06),@CH00035                            0335
*     END;                          /*                       @Y30LB33*/
@RF00334 DS    0H                                                  0337
*                                                                  0337
*   /*****************************************************************/
*   /*                                                               */
*   /* READ IN THE REPORT CONSTANTS FROM THE                 @Y30LB33*/
*   /* STATIC TEXT TO RPTCONS SO THEY CAN BE USED IN THE     @Y30LB33*/
*   /* REPORTS                                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0337
*   IF LASTCOND=LASTCC00 THEN                                      0337
@RF00320 L     @06,@PC00001+8                                      0337
         LH    @06,LASTCOND(,@06)                                  0337
         LTR   @06,@06                                             0337
         BNZ   @RF00337                                            0337
*     DO;                           /*                       @Y30LB33*/
*       DARGLIST=DARGLIST&&DARGLIST;/* NULL ARG LIST         @Y30LB33*/
         L     @06,DDSTRU                                          0339
         XC    DARGLIST(20,@06),DARGLIST(@06)                      0339
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@06),@CC02396                            0340
*       DARGSENT=MISCTEXT;          /*                       @Y30LB33*/
         MVI   DARGSENT(@06),X'05'                                 0341
*       DARGRETP=ADDR(PRNTCONS);    /*                       @Y30LB33*/
         LA    @03,PRNTCONS                                        0342
         ST    @03,DARGRETP(,@06)                                  0342
*       DARGRETL=LENGTH(PRNTCONS);  /*                       @Y30LB33*/
         MVC   DARGRETL(2,@06),@CH02613                            0343
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB33*/
*                                                                  0344
         L     @06,@PC00001                                        0344
         ST    @06,@AL00001                                        0344
         LA    @03,@CF00117                                        0344
         ST    @03,@AL00001+4                                      0344
         LA    @03,DDSTRU                                          0344
         ST    @03,@AL00001+8                                      0344
         MVI   @AL00001+8,X'80'                                    0344
         L     @15,GDTPRT(,@06)                                    0344
         LA    @01,@AL00001                                        0344
         BALR  @14,@15                                             0344
*       /*************************************************************/
*       /*                                                           */
*       /* READ IN THE MAIN TITLE LINE.                      @Z40LB66*/
*       /* NOTE THAT A STATUS TITLE IS ALWAYS USED           @Z40LB66*/
*       /* FOR CARTRIDGE REPORTS.                            @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0345
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @06,DDSTRU                                          0345
         XC    DARGLIST(20,@06),DARGLIST(@06)                      0345
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@06),@CC02396                            0346
*       IF ADDR(STAT)>0×ADDR(ALLC)>0/*                       @Z40LB66*/
*           ×ADDR(CTGSCNT)>0        /*                       @Z40LB66*/
*         THEN                                                     0347
         SLR   @06,@06                                             0347
         L     @03,@PC00001+4                                      0347
         C     @06,FDTPTR+52(,@03)                                 0347
         BL    @RT00347                                            0347
         C     @06,FDTPTR+88(,@03)                                 0347
         BL    @RT00347                                            0347
         C     @06,FDTPTR+84(,@03)                                 0347
         BNL   @RF00347                                            0347
@RT00347 DS    0H                                                  0348
*         DARGSENT=STATTITL;        /*                       @Z40LB66*/
         L     @06,DDSTRU                                          0348
         MVI   DARGSENT(@06),X'07'                                 0348
*       ELSE                                                       0349
*         DARGSENT=USAGTITL;        /*                       @Y30LB33*/
         B     @RC00347                                            0349
@RF00347 L     @06,DDSTRU                                          0349
         MVI   DARGSENT(@06),X'06'                                 0349
*       DARGRETP=ADDR(MAINTITL);    /*                       @Y30LB33*/
@RC00347 L     @06,DDSTRU                                          0350
         LA    @03,MAINTITL                                        0350
         ST    @03,DARGRETP(,@06)                                  0350
*       DARGRETL=LENGTH(MAINTITL);  /*                       @Y30LB33*/
         MVC   DARGRETL(2,@06),@CH02378                            0351
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB33*/
*                                                                  0352
         L     @06,@PC00001                                        0352
         ST    @06,@AL00001                                        0352
         LA    @03,@CF00117                                        0352
         ST    @03,@AL00001+4                                      0352
         LA    @03,DDSTRU                                          0352
         ST    @03,@AL00001+8                                      0352
         MVI   @AL00001+8,X'80'                                    0352
         L     @15,GDTPRT(,@06)                                    0352
         LA    @01,@AL00001                                        0352
         BALR  @14,@15                                             0352
*       /*************************************************************/
*       /*                                                           */
*       /* ESTABLISH THE MAIN TITLE LINE                     @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0353
*       PCARG=PCARG&&PCARG;         /*                       @Y30LB33*/
         XC    PCARG(33),PCARG                                     0353
*       PCMTLP=ADDR(MAINTITL);      /*                       @Y30LB33*/
         LA    @06,MAINTITL                                        0354
         ST    @06,PCMTLP                                          0354
*       PCMTLC=1;                   /*                       @Y30LB33*/
         MVC   PCMTLC(2),@CH00221                                  0355
*       PCPNL=107;                  /*                       @Y30LB33*/
         MVC   PCPNL(2),@CH02418                                   0356
*       PCPTL=73;                   /*                       @Y30LB33*/
         MVC   PCPTL(2),@CH02419                                   0357
*       PCPDL=89;                   /*                       @Y30LB33*/
         MVC   PCPDL(2),@CH02420                                   0358
*       CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*               @Y30LB33*/
         L     @06,@PC00001                                        0359
         ST    @06,@AL00001                                        0359
         LA    @03,PRINTME                                         0359
         ST    @03,@AL00001+4                                      0359
         LA    @03,PCARG                                           0359
         ST    @03,@AL00001+8                                      0359
         L     @15,GDTESA(,@06)                                    0359
         LA    @01,@AL00001                                        0359
         BALR  @14,@15                                             0359
*                                                                  0360
*       /*************************************************************/
*       /*                                                           */
*       /* CALL THE REPORT SELECTER TO PRINT THE REPORTS     #Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0360
*       CALL SELRPT;                /*                       @Y30LB33*/
         BAL   @14,SELRPT                                          0360
*     END;                          /*                       @Y30LB33*/
*                                                                  0361
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE TITLES AND SUBTITLES                        @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0362
*   CALL AMSTP044(GDTTBL,PRINTME);  /*                       @Y30LB33*/
@RF00337 L     @15,@PC00001                                        0362
         ST    @15,@AL00001                                        0362
         LA    @14,PRINTME                                         0362
         ST    @14,@AL00001+4                                      0362
         MVI   @AL00001+4,X'80'                                    0362
         L     @15,GDTRES(,@15)                                    0362
         LA    @01,@AL00001                                        0362
         BALR  @14,@15                                             0362
*                                                                  0363
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE ARE NO BASE VOLUME RECORDS, DUPLICATE VOLUME RECORDS,*/
*   /* PLACE HOLDER OR CARTRIDGE INDEX RECORDS IN THE INVENTORY,     */
*   /* PRINT THE APPROPRIATE IDC0832I MSG.                   @ZA11679*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0363
*   IF MAINCTR=0&ADDR(NGRPD)=NULLPTR THEN                          0363
         SLR   @15,@15                                             0363
         C     @15,MAINCTR                                         0363
         BNE   @RF00363                                            0363
         L     @14,@PC00001+4                                      0363
         C     @15,FDTPTR+16(,@14)                                 0363
         BNE   @RF00363                                            0363
*     DO;                           /*                       @ZA11679*/
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @ZA11679*/
         L     @07,DDSTRU                                          0365
         XC    DARGLIST(20,@07),DARGLIST(@07)                      0365
*       DARGSMOD=MODLV0;            /*                       @ZA11679*/
         MVC   DARGSMOD(3,@07),@CC02396                            0366
*       IF ADDR(CTGSCNT)>0×ADDR(ALLC)>NULLPTR THEN                 0367
         C     @15,FDTPTR+84(,@14)                                 0367
         BL    @RT00367                                            0367
         C     @15,FDTPTR+88(,@14)                                 0367
         BNL   @RF00367                                            0367
@RT00367 DS    0H                                                  0368
*         DARGSENT=MSG832CI;        /*                       @ZA11679*/
         L     @01,DDSTRU                                          0368
         MVI   DARGSENT(@01),X'2A'                                 0368
*       ELSE                                                       0369
*         IF ADDR(DUP)>NULLPTR THEN                                0369
         B     @RC00367                                            0369
@RF00367 L     @15,@PC00001+4                                      0369
         L     @15,FDTPTR+32(,@15)                                 0369
         LTR   @15,@15                                             0369
         BNP   @RF00369                                            0369
*           DARGSENT=MSG832DV;      /*                       @ZA11679*/
         L     @01,DDSTRU                                          0370
         MVI   DARGSENT(@01),X'27'                                 0370
*         ELSE                                                     0371
*           IF ADDR(PLHD)>NULLPTR THEN                             0371
         B     @RC00369                                            0371
@RF00369 L     @15,@PC00001+4                                      0371
         L     @15,FDTPTR+92(,@15)                                 0371
         LTR   @15,@15                                             0371
         BNP   @RF00371                                            0371
*             DARGSENT=MSG832PH;    /*                       @ZA11679*/
         L     @01,DDSTRU                                          0372
         MVI   DARGSENT(@01),X'29'                                 0372
*       IF(ADDR(VOLSCNT)>0×ADDR(ALLV)>NULLPTR)&DARGSENT=0 THEN     0373
@RF00371 DS    0H                                                  0373
@RC00369 DS    0H                                                  0373
@RC00367 SLR   @15,@15                                             0373
         L     @14,@PC00001+4                                      0373
         C     @15,FDTPTR(,@14)                                    0373
         BL    @GL00006                                            0373
         C     @15,FDTPTR+4(,@14)                                  0373
         BNL   @RF00373                                            0373
@GL00006 L     @15,DDSTRU                                          0373
         CLI   DARGSENT(@15),0                                     0373
         BNE   @RF00373                                            0373
*         DARGSENT=MSG832BV;        /*                       @ZA11679*/
         MVI   DARGSENT(@15),X'28'                                 0374
*       IF DARGSENT>0 THEN                                         0375
@RF00373 L     @01,DDSTRU                                          0375
         CLI   DARGSENT(@01),0                                     0375
         BNH   @RF00375                                            0375
*         CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*            @ZA11679*/
         L     @15,@PC00001                                        0376
         ST    @15,@AL00001                                        0376
         LA    @14,@CF00117                                        0376
         ST    @14,@AL00001+4                                      0376
         LA    @14,DDSTRU                                          0376
         ST    @14,@AL00001+8                                      0376
         MVI   @AL00001+8,X'80'                                    0376
         L     @15,GDTPRT(,@15)                                    0376
         LA    @01,@AL00001                                        0376
         BALR  @14,@15                                             0376
*     END;                          /*                       @ZA11679*/
@RF00375 DS    0H                                                  0378
*                                                                  0378
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE LASTCOND IS 8, THERE WAS AN ERROR,             #Y30LB33*/
*   /* SO TEST THE MAINCTR TO SEE IF THERE WERE ANY          #Y30LB33*/
*   /* REPORT LINES PRINTED. IF THERE WAS NOT, THEN          #Y30LB33*/
*   /* SET THE LASTCOND TO 12 TO INDICATE A COMPLETE         #Y30LB33*/
*   /* FAILURE OF THE FUNCTION REQUESTED                     #Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   IF LASTCOND=LASTCC08&MAINCTR=0 THEN/*                    #Y30LB33*/
@RF00363 L     @15,@PC00001+8                                      0378
         CLC   LASTCOND(2,@15),@CH00035                            0378
         BNE   @RF00378                                            0378
         L     @14,MAINCTR                                         0378
         LTR   @14,@14                                             0378
         BNZ   @RF00378                                            0378
*     LASTCOND=LASTCC12;            /*                       #Y30LB33*/
         MVC   LASTCOND(2,@15),@CH00038                            0379
*                                                                  0380
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE THE FINAL COMPLETION MESSAGE IDC0001I           @Y30LB33*/
*   /* OR IDC0003I BASED ON LASTCOND                         @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0380
*   DARGLIST=DARGLIST&&DARGLIST;    /* NULL ARG LIST         @Y30LB33*/
@RF00378 L     @15,DDSTRU                                          0380
         XC    DARGLIST(20,@15),DARGLIST(@15)                      0380
*   DARGSMOD=MODUNIV;               /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@15),@CC02394                            0381
*   DARGDBP=ADDR(LASTCOND);         /*                       @Y30LB33*/
         L     @14,@PC00001+8                                      0382
         ST    @14,DARGDBP(,@15)                                   0382
*   DARGILP=2;                      /*                       @Y30LB33*/
         MVC   DARGILP(2,@15),@CH00156                             0383
*   IF LASTCOND<LASTCC12 THEN                                      0384
         LH    @14,LASTCOND(,@14)                                  0384
         C     @14,@CF00038                                        0384
         BNL   @RF00384                                            0384
*     DARGSENT=MSG0001I;            /*                       @Y30LB33*/
         MVI   DARGSENT(@15),X'01'                                 0385
*   ELSE                                                           0386
*     DARGSENT=MSG3003I;            /*                       @Y30LB33*/
         B     @RC00384                                            0386
@RF00384 L     @01,DDSTRU                                          0386
         MVI   DARGSENT(@01),X'03'                                 0386
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Y30LB33*/
@RC00384 L     @15,@PC00001                                        0387
         ST    @15,@AL00001                                        0387
         LA    @14,@CF00117                                        0387
         ST    @14,@AL00001+4                                      0387
         LA    @14,DDSTRU                                          0387
         ST    @14,@AL00001+8                                      0387
         MVI   @AL00001+8,X'80'                                    0387
         L     @15,GDTPRT(,@15)                                    0387
         LA    @01,@AL00001                                        0387
         BALR  @14,@15                                             0387
*                                                                  0388
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE OUTPUT DATA SET WAS OPENED, CLOSE IT.          @ZM00727*/
*   /* IF CLOSE FAILS, SET LASTCOND TO 4                     @ZM00727*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   IF PRINTME>0 THEN                                              0388
         L     @15,PRINTME                                         0388
         LTR   @15,@15                                             0388
         BNP   @RF00388                                            0388
*     DO;                           /*                       @ZM00727*/
*       CALL IDCIOCL0(GDTTBL,PRINTME);/*                     @ZM00727*/
         L     @07,@PC00001                                        0390
         ST    @07,@AL00001                                        0390
         LA    @15,PRINTME                                         0390
         ST    @15,@AL00001+4                                      0390
         MVI   @AL00001+4,X'80'                                    0390
         L     @15,GDTCLS(,@07)                                    0390
         LA    @01,@AL00001                                        0390
         BALR  @14,@15                                             0390
*       RESPECIFY                                                  0391
*         RTNREG RSTD;                                             0391
*       TESTRC=RTNREG;                                             0392
         LR    TESTRC,RTNREG                                       0392
*       RESPECIFY                                                  0393
*         RTNREG UNRSTD;            /*                       @ZM00727*/
*                                                                  0393
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE RETURN CODE IS NOT ZERO, SET               @ZM00727*/
*       /* LASTCOND TO 4                                     @ZM00727*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0394
*       IF TESTRC^=0 THEN           /*                       @ZM00727*/
         LTR   TESTRC,TESTRC                                       0394
         BZ    @RF00394                                            0394
*         LASTCOND=MAX(LASTCOND,LASTCC04);/*                 @ZM00727*/
         L     @15,@PC00001+8                                      0395
         LH    @14,LASTCOND(,@15)                                  0395
         LA    @07,4                                               0395
         CR    @14,@07                                             0395
         BNL   *+6
         LR    @14,@07                                             0395
         STH   @14,LASTCOND(,@15)                                  0395
*     END;                          /*                       @ZM00727*/
*                                                                  0396
@RF00394 DS    0H                                                  0397
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO AMS EXECUTIVE                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0397
*   IF GDTDBG=NULLPTR THEN                                         0397
@RF00388 L     @15,@PC00001                                        0397
         L     @15,GDTDBG(,@15)                                    0397
         LTR   @15,@15                                             0397
         BZ    @RT00397                                            0397
*     ;                                                            0398
*   ELSE                                                           0399
*     CALL IDCDB010(GDTTBL,'LVAE'); /*                       @Y30LB33*/
         L     @15,@PC00001                                        0399
         ST    @15,@AL00001                                        0399
         LA    @14,@CC02422                                        0399
         ST    @14,@AL00001+4                                      0399
         MVI   @AL00001+4,X'80'                                    0399
         L     @15,GDTDBG(,@15)                                    0399
         LA    @01,@AL00001                                        0399
         BALR  @14,@15                                             0399
*   OLDERID2=NEWERID2;                                             0400
@RT00397 L     @15,@PC00001                                        0400
         L     @14,GDTTR2(,@15)                                    0400
         MVC   @TS00001(95),NEWERID2(@14)                          0400
         MVC   OLDERID2(95,@14),@TS00001                           0400
*   NEWID2='LVAE';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@14),@CC02422                              0401
*   CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);                          0402
*                                                                  0402
         ST    @15,@AL00001                                        0402
         LA    @14,MODID                                           0402
         ST    @14,@AL00001+4                                      0402
         L     @14,@PC00001+8                                      0402
         ST    @14,@AL00001+8                                      0402
         MVI   @AL00001+8,X'80'                                    0402
         L     @15,GDTEPL(,@15)                                    0402
         LA    @01,@AL00001                                        0402
         BALR  @14,@15                                             0402
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - SELRPT                               @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - SELECTS THE ROUTINES TO PRINT THE          @Y30LB33*/
*   /* REPORT REQUESTED.                                     @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - THE FDTTBL                                    @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - IF AN ERROR OCCURS, THE RETURN CODE          @Y30LB33*/
*   /* IS SET TO 16 AND LASTCOND IS SET TO EITHER            @Y30LB33*/
*   /* 8, IF PART OF THE REPORT WAS PRODUCED, OR             @Y30LB33*/
*   /* 12, IF NONE OF THE REPORT WAS PRODUCED.               @Y30LB33*/
*   /* OTHERWISE, BOTH CODES ARE ZERO.                       @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*SELRPT:                                                           0403
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
*                                                                  0403
@EL00001 L     @13,4(,@13)                                         0403
@EF00001 L     @00,@SIZDATD                                        0403
         LR    @01,@11                                             0403
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0403
         BR    @14                                                 0403
SELRPT   ST    @14,@SA00002                                        0403
*   /*****************************************************************/
*   /*                                                               */
*   /* HERE IS THE LIST FORM OF THE MODESET INSTRUCTIONS     @ZA27752*/
*   /* MODESET MF(L,MOD1) MODE(SUP)                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*   DCL                                                            0404
*     1 MOD1 STATIC BDY(WORD),      /* DEFINE LIST                   */
*      2 MOD101 BIT(8) INIT('00000000'B),/* OR MASK                  */
*      2 MOD102 BIT(8) INIT('00000000'B),/* AND MASK                 */
*      2 MOD103 BIT(8) INIT('00000000'B),/* RESERVED                 */
*      2 MOD104 BIT(8) INIT('00001100'B);/*                  @ZA27752*/
*                                                                  0404
*   /*****************************************************************/
*   /*                                                               */
*   /* MODESET MF(L,MOD2) KEY(NZERO) MODE(PROB)                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0405
*   DCL                                                            0405
*     1 MOD2 STATIC BDY(WORD),      /* DEFINE LIST                   */
*      2 MOD201 BIT(8) INIT('00000000'B),/* OR MASK                  */
*      2 MOD202 BIT(8) INIT('00000000'B),/* AND MASK                 */
*      2 MOD203 BIT(8) INIT('00000000'B),/* RESERVED                 */
*      2 MOD204 BIT(8) INIT('00100100'B);/*                  @ZA27752*/
*   OLDERID2=NEWERID2;                                             0406
         L     @03,@PC00001                                        0406
         L     @03,GDTTR2(,@03)                                    0406
         MVC   @TS00001(95),NEWERID2(@03)                          0406
         MVC   OLDERID2(95,@03),@TS00001                           0406
*   NEWID2='LVBA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02439                              0407
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0408
         SLR   TESTRC,TESTRC                                       0408
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIATE THE MODESET TO ALLOW THE USE                 @ZA27752*/
*   /* OF PRIVILEGED INSTRUCTIONS.                           @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0409
*   RESPECIFY                                                      0409
*     REG1 RESTRICTED;              /*                       @ZA27752*/
*   REG1=MOD1;                      /*                       @ZA27752*/
         L     REG1,MOD1                                           0410
*LMODE1:                                                           0411
*   DO;                             /* MODESET MF(E,REG1)            */
LMODE1   DS    0H                                                  0412
*     RESPECIFY                                                    0412
*       GPR01F RESTRICTED;                                         0412
*     GPR01F=REG1;                  /* MODESET PARMLIST              */
*     SVC(107);                     /* ISSUE MODESET SVC             */
         SVC   107                                                 0414
*     RESPECIFY                                                    0415
*      (GPR01F) UNRESTRICTED;                                      0415
*   END;                            /* MODESET MF(E,REG1)    @ZA27752*/
*   RESPECIFY                                                      0417
*     REG1 UNRESTRICTED;            /*                       @ZA27752*/
*                                                                  0417
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE ALLVOLUME SEQUENCER IF ALLVOLUMES          @Y30LB33*/
*   /* IS REQUESTED IN THE FDTTBL                            @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0418
*   IF ADDR(ALLV)>0 THEN                                           0418
         L     @06,@PC00001+4                                      0418
         L     @06,FDTPTR+4(,@06)                                  0418
         LTR   @06,@06                                             0418
         BNP   @RF00418                                            0418
*     CALL ALLVSEQ;                 /*                       @Y30LB33*/
         BAL   @14,ALLVSEQ                                         0419
*   RESPECIFY                                                      0420
*     RTNREG RSTD;                                                 0420
@RF00418 DS    0H                                                  0421
*   TESTRC=RTNREG;                                                 0421
         LR    TESTRC,RTNREG                                       0421
*   RESPECIFY                                                      0422
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  0422
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE VOLUME SEQUENCER IF VOLUMES IS             @Y30LB33*/
*   /* REQUESTED IN THE FDTTBL                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0423
*   IF ADDR(VOLSCNT)>0 THEN                                        0423
         L     @06,@PC00001+4                                      0423
         L     @06,FDTPTR(,@06)                                    0423
         LTR   @06,@06                                             0423
         BNP   @RF00423                                            0423
*     CALL VOLSEQ;                  /*                       @Y30LB33*/
         BAL   @14,VOLSEQ                                          0424
*   RESPECIFY                                                      0425
*     RTNREG RSTD;                                                 0425
@RF00423 DS    0H                                                  0426
*   TESTRC=RTNREG;                                                 0426
         LR    TESTRC,RTNREG                                       0426
*   RESPECIFY                                                      0427
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  0428
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE GROUP SEQUENCER IF GROUPS IS               @Y30LB33*/
*   /* REQUESTED                                             @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0428
*   IF ADDR(GRPCNT)>0 THEN                                         0428
         L     @06,@PC00001+4                                      0428
         L     @06,FDTPTR+8(,@06)                                  0428
         LTR   @06,@06                                             0428
         BNP   @RF00428                                            0428
*     CALL GRPSEQ;                  /*                       @Y30LB33*/
         BAL   @14,GRPSEQ                                          0429
*   RESPECIFY                                                      0430
*     RTNREG RSTD;                                                 0430
@RF00428 DS    0H                                                  0431
*   TESTRC=RTNREG;                                                 0431
         LR    TESTRC,RTNREG                                       0431
*   RESPECIFY                                                      0432
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  0432
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE ALLGROUPS SEQUENCER IF ALLGROUPS           @Y30LB33*/
*   /* IS SPECIFIED IN THE FDTTBL                            @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0433
*   IF ADDR(AGRP)>0 THEN                                           0433
         L     @06,@PC00001+4                                      0433
         L     @06,FDTPTR+12(,@06)                                 0433
         LTR   @06,@06                                             0433
         BNP   @RF00433                                            0433
*     CALL ALLGSEQ;                 /*                       @Y30LB33*/
         BAL   @14,ALLGSEQ                                         0434
*   RESPECIFY                                                      0435
*     RTNREG RSTD;                                                 0435
@RF00433 DS    0H                                                  0436
*   TESTRC=RTNREG;                                                 0436
         LR    TESTRC,RTNREG                                       0436
*   RESPECIFY                                                      0437
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  0437
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE CARTRIDGE SEQUENCER IF CARTRIDGES IS       @Z40LB66*/
*   /* REQUESTED                                             @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0438
*   IF ADDR(CTGSCNT)>0 THEN                                        0438
         L     @03,@PC00001+4                                      0438
         L     @03,FDTPTR+84(,@03)                                 0438
         LTR   @03,@03                                             0438
         BNP   @RF00438                                            0438
*     CALL CTGSEQ;                  /*                       @Z40LB66*/
         BAL   @14,CTGSEQ                                          0439
*   RESPECIFY                                                      0440
*     RTNREG RSTD;                                                 0440
@RF00438 DS    0H                                                  0441
*   TESTRC=RTNREG;                                                 0441
         LR    TESTRC,RTNREG                                       0441
*   RESPECIFY                                                      0442
*     RTNREG UNRSTD;                /*                       @Z40LB66*/
*                                                                  0442
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE ALLCARTRIDGE SEQUENCER IF                  @Z40LB66*/
*   /* ALLCARTRIDGES IS SPECIFIED IN THE FDTTBL              @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0443
*   IF ADDR(ALLC)>0 THEN                                           0443
         L     @03,@PC00001+4                                      0443
         L     @03,FDTPTR+88(,@03)                                 0443
         LTR   @03,@03                                             0443
         BNP   @RF00443                                            0443
*     CALL ALLCSEQ;                 /*                       @Z40LB66*/
         BAL   @14,ALLCSEQ                                         0444
*   RESPECIFY                                                      0445
*     RTNREG RSTD;                                                 0445
@RF00443 DS    0H                                                  0446
*   TESTRC=RTNREG;                                                 0446
         LR    TESTRC,RTNREG                                       0446
*   RESPECIFY                                                      0447
*     RTNREG UNRSTD;                /*                       @Z40LB66*/
*                                                                  0448
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT THE LEGEND FOR THE REPORT IF ANY                #Y30LB33*/
*   /* REPORTING WAS DONE, AS INDICATED BY MAINCTR.          @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0448
*   IF MAINCTR>0&ADDR(LED)>0 THEN                                  0448
         SLR   @07,@07                                             0448
         C     @07,MAINCTR                                         0448
         BNL   @RF00448                                            0448
         L     @15,@PC00001+4                                      0448
         C     @07,FDTPTR+60(,@15)                                 0448
         BNL   @RF00448                                            0448
*     DO;                           /*                       @F30LB33*/
*       DARGLIST=DARGLIST&&DARGLIST;/* NULL ARG LIST         @Y30LB33*/
         L     @07,DDSTRU                                          0450
         XC    DARGLIST(20,@07),DARGLIST(@07)                      0450
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@07),@CC02396                            0451
*       CALL AMSTP044(GDTTBL,PRINTME);/*                     @Y30LB33*/
*                                                                  0452
         L     @07,@PC00001                                        0452
         ST    @07,@AL00001                                        0452
         LA    @15,PRINTME                                         0452
         ST    @15,@AL00001+4                                      0452
         MVI   @AL00001+4,X'80'                                    0452
         L     @15,GDTRES(,@07)                                    0452
         LA    @01,@AL00001                                        0452
         BALR  @14,@15                                             0452
*       /*************************************************************/
*       /*                                                           */
*       /* RE-ESTABLISH THE MAIN TITLE LINE                  @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0453
*       PCSTLP=0;                   /*                       @Y30LB33*/
         SLR   @07,@07                                             0453
         ST    @07,PCSTLP                                          0453
*       PCSTLC=0;                   /*                       @Y30LB33*/
         STH   @07,PCSTLC                                          0454
*       CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*               @Y30LB33*/
         L     @07,@PC00001                                        0455
         ST    @07,@AL00001                                        0455
         LA    @15,PRINTME                                         0455
         ST    @15,@AL00001+4                                      0455
         LA    @15,PCARG                                           0455
         ST    @15,@AL00001+8                                      0455
         L     @15,GDTESA(,@07)                                    0455
         LA    @01,@AL00001                                        0455
         BALR  @14,@15                                             0455
*       IF ADDR(ALLC)>0×ADDR(CTGSCNT)>0 THEN                       0456
         SLR   @07,@07                                             0456
         L     @15,@PC00001+4                                      0456
         C     @07,FDTPTR+88(,@15)                                 0456
         BL    @RT00456                                            0456
         C     @07,FDTPTR+84(,@15)                                 0456
         BNL   @RF00456                                            0456
@RT00456 DS    0H                                                  0457
*         DARGSENT=CTGSLEG;         /*                       @Z40LB66*/
         L     @07,DDSTRU                                          0457
         MVI   DARGSENT(@07),X'25'                                 0457
*       ELSE                                                       0458
*         IF ADDR(STAT)>0 THEN                                     0458
         B     @RC00456                                            0458
@RF00456 L     @07,@PC00001+4                                      0458
         L     @07,FDTPTR+52(,@07)                                 0458
         LTR   @07,@07                                             0458
         BNP   @RF00458                                            0458
*           DARGSENT=STATLEG;       /*                       @Z40LB66*/
         L     @07,DDSTRU                                          0459
         MVI   DARGSENT(@07),X'09'                                 0459
*         ELSE                                                     0460
*           DARGSENT=USAGELEG;      /*                       @Y30LB33*/
         B     @RC00458                                            0460
@RF00458 L     @07,DDSTRU                                          0460
         MVI   DARGSENT(@07),X'0D'                                 0460
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
@RC00458 DS    0H                                                  0461
@RC00456 L     @07,@PC00001                                        0461
         ST    @07,@AL00001                                        0461
         LA    @15,PRINTME                                         0461
         ST    @15,@AL00001+4                                      0461
         LA    @15,DDSTRU                                          0461
         ST    @15,@AL00001+8                                      0461
         MVI   @AL00001+8,X'80'                                    0461
         L     @15,GDTPRT(,@07)                                    0461
         LA    @01,@AL00001                                        0461
         BALR  @14,@15                                             0461
*     END;                          /*                       @Y30LB33*/
*                                                                  0463
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIATE THE MODESET TO DISALLOW THE USE OF PRIVI-    @ZA27752*/
*   /* LEGED INSTRUCTIONS AND RESTORE PROBLEM PROGRAM STATE. @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0463
*   RESPECIFY                                                      0463
*     REG1 RESTRICTED;              /*                       @ZA27752*/
@RF00448 DS    0H                                                  0464
*   REG1=MOD2;                      /*                       @ZA27752*/
         L     REG1,MOD2                                           0464
*LMODE2:                                                           0465
*   DO;                             /* MODESET MF(E,REG1)            */
LMODE2   DS    0H                                                  0466
*     RESPECIFY                                                    0466
*       GPR01F RESTRICTED;                                         0466
*     GPR01F=REG1;                  /* MODESET PARMLIST              */
*     SVC(107);                     /* ISSUE MODESET SVC             */
         SVC   107                                                 0468
*     RESPECIFY                                                    0469
*      (GPR01F) UNRESTRICTED;                                      0469
*   END;                            /* MODESET MF(E,REG1)    @ZA27752*/
*   RESPECIFY                                                      0471
*     REG1 UNRESTRICTED;            /*                       @ZA27752*/
*                                                                  0471
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH THE CODE RETURNED FROM THE SELECTED       @Y30LB33*/
*   /* SEQUENCER                                             @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0472
*   RETURN CODE(TESTRC);            /*                       @Y30LB33*/
         LR    @15,TESTRC                                          0472
@EL00002 DS    0H                                                  0472
@EF00002 DS    0H                                                  0472
@ER00002 L     @14,@SA00002                                        0472
         BR    @14                                                 0472
*   END SELRPT;                     /*                       @Y30LB33*/
*                                                                  0474
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VOLSEQ                               @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - ESTABLISH SUBTITLES AND CONTROLS           @Y30LB33*/
*   /* PROCESSING OF THE VOLUME SERIALS IN THE               @Y30LB33*/
*   /* VOLUME PARAMETER AND THE VOLUME SUMMARIES             @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - FDTTBL                                        @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF 16 AND LASTCOND OF 8          @Y30LB33*/
*   /* IF THE REPORT DOES NOT COMPLETE SUCCESSFULLY.         @Y30LB33*/
*   /* OTHERWISE, BOTH CODES ARE ZERO.                       @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0474
*VOLSEQ:                                                           0474
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
VOLSEQ   ST    @14,@SA00003                                        0474
*   OLDERID2=NEWERID2;                                             0475
         L     @03,@PC00001                                        0475
         L     @03,GDTTR2(,@03)                                    0475
         MVC   @TS00001(95),NEWERID2(@03)                          0475
         MVC   OLDERID2(95,@03),@TS00001                           0475
*   NEWID2='LVCA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02454                              0476
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0477
         SLR   TESTRC,TESTRC                                       0477
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE SUBTITLE LINES BASED ON THE REPORT      @Y30LB33*/
*   /* TYPE                                                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0478
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Y30LB33*/
         L     @03,DDSTRU                                          0478
         XC    DARGLIST(20,@03),DARGLIST(@03)                      0478
*   DARGRETP=ADDR(TITLSPCE);        /*                       @Y30LB33*/
         LA    @15,TITLSPCE                                        0479
         ST    @15,DARGRETP(,@03)                                  0479
*   DARGRETL=LENGTH(TITLSPCE);      /*                       @Y30LB33*/
         MVC   DARGRETL(2,@03),@CH02376                            0480
*   DARGSMOD=MODLV0;                /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@03),@CC02396                            0481
*   IF ADDR(STAT)>0 THEN                                           0482
         L     @15,@PC00001+4                                      0482
         L     @15,FDTPTR+52(,@15)                                 0482
         LTR   @15,@15                                             0482
         BNP   @RF00482                                            0482
*     DARGSENT=VOLSTLE;             /*                       @Y30LB33*/
         MVI   DARGSENT(@03),X'1B'                                 0483
*   ELSE                                                           0484
*     DARGSENT=VOLUTLE;             /*                       @Y30LB33*/
*                                                                  0484
         B     @RC00482                                            0484
@RF00482 L     @03,DDSTRU                                          0484
         MVI   DARGSENT(@03),X'12'                                 0484
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UPRINT TOE READ IN THE SUBTITLES                @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Y30LB33*/
*                                                                  0485
@RC00482 L     @03,@PC00001                                        0485
         ST    @03,@AL00001                                        0485
         LA    @15,@CF00117                                        0485
         ST    @15,@AL00001+4                                      0485
         LA    @15,DDSTRU                                          0485
         ST    @15,@AL00001+8                                      0485
         MVI   @AL00001+8,X'80'                                    0485
         L     @15,GDTPRT(,@03)                                    0485
         LA    @01,@AL00001                                        0485
         BALR  @14,@15                                             0485
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE MAIN TITLE ESTABLISHED BEFORE               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0486
*   CALL AMSTP044(GDTTBL,PRINTME);  /*                       @Y30LB33*/
*                                                                  0486
         L     @03,@PC00001                                        0486
         ST    @03,@AL00001                                        0486
         LA    @15,PRINTME                                         0486
         ST    @15,@AL00001+4                                      0486
         MVI   @AL00001+4,X'80'                                    0486
         L     @15,GDTRES(,@03)                                    0486
         LA    @01,@AL00001                                        0486
         BALR  @14,@15                                             0486
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE NEW MAIN TITLE AND SUBTITLES            @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*   PCSTLP=ADDR(TITLSPCE);          /*                       @Y30LB33*/
         LA    @03,TITLSPCE                                        0487
         ST    @03,PCSTLP                                          0487
*   IF ADDR(STAT)>0 THEN                                           0488
         L     @03,@PC00001+4                                      0488
         L     @03,FDTPTR+52(,@03)                                 0488
         LTR   @03,@03                                             0488
         BNP   @RF00488                                            0488
*     PCSTLC=2;                     /*                       @Y30LB33*/
         MVC   PCSTLC(2),@CH00156                                  0489
*   ELSE                                                           0490
*     PCSTLC=3;                     /*                       @Y30LB33*/
         B     @RC00488                                            0490
@RF00488 MVC   PCSTLC(2),@CH00165                                  0490
*   CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*                   @Y30LB33*/
@RC00488 L     @04,@PC00001                                        0491
         ST    @04,@AL00001                                        0491
         LA    @03,PRINTME                                         0491
         ST    @03,@AL00001+4                                      0491
         LA    @03,PCARG                                           0491
         ST    @03,@AL00001+8                                      0491
         L     @15,GDTESA(,@04)                                    0491
         LA    @01,@AL00001                                        0491
         BALR  @14,@15                                             0491
*                                                                  0492
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE REQUEST BLOCK TO PROCESS VOLUMES           @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0492
*   VOLRVVI=VOLRVVI&&VOLRVVI;       /* NULL REQ ARG LIST     @Y30LB33*/
         XC    VOLRVVI(68),VOLRVVI                                 0492
*   RVVIPTR=ADDR(VOLRVVI);          /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0493
*   RVVLNGTH=RVVLEN;                /*                       @Y30LB33*/
         LH    @04,RVVLEN                                          0494
         ST    @04,RVVLNGTH(,RVVIPTR)                              0494
*   RVVCODE=RVVOP;                  /*                       @Y30LB33*/
         MVI   RVVCODE(RVVIPTR),X'87'                              0495
*   RVVRDR=ON;                      /*                       @Y30LB33*/
         OI    RVVRDR(RVVIPTR),B'10000000'                         0496
*   RVVBVRCD=ON;                    /*                       @Y30LB33*/
         OI    RVVBVRCD(RVVIPTR),B'10000000'                       0497
*   RVVRTBUF=ADDR(VOLRCDBF);        /*                       @Y30LB33*/
         LA    @04,VOLRCDBF                                        0498
         ST    @04,RVVRTBUF(,RVVIPTR)                              0498
*   RVVBUFLN=LENGTH(BASEV);         /*                       @Y30LB33*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02618                        0499
*   RVVSVOL=ON;                     /*                       @Y30LB33*/
         OI    RVVSVOL(RVVIPTR),B'00000001'                        0500
*                                                                  0501
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE REQUEST BLOCK TO THE VOLUME PROCESSOR        @Y30LB33*/
*   /* FOR EVERY VOLUME IN THE VOLUME PARAMETER LIST.        @Y30LB33*/
*   /* IF THE RETURN CODE IS 16, END EXECUTION.              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0501
*   DO RPTLOOP=1 BY 1 TO VOLSCNT    /*                       @Y30LB33*/
*         WHILE(TESTRC<16);         /*                       @Y30LB33*/
         LA    @03,1                                               0501
         STH   @03,RPTLOOP                                         0501
         B     @DE00501                                            0501
@DL00501 C     TESTRC,@CF00507                                     0501
         BNL   @DC00501                                            0501
*     RVVIPTR=ADDR(VOLRVVI);        /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0502
*     RVVOLUME=VOLSVAL(RPTLOOP);    /*                       @Y30LB33*/
         SLA   @03,3                                               0503
         L     @06,@PC00001+4                                      0503
         L     @06,FDTPTR(,@06)                                    0503
         ALR   @06,@03                                             0503
         AL    @06,@CF02637                                        0503
         MVC   RVVOLUME(6,RVVIPTR),VOLSVAL-3(@06)                  0503
*     CALL VOLPROC;                 /*                       @Y30LB33*/
         BAL   @14,VOLPROC                                         0504
*     RESPECIFY                                                    0505
*       RTNREG RSTD;                                               0505
*     TESTRC=RTNREG;                                               0506
         LR    TESTRC,RTNREG                                       0506
*     RESPECIFY                                                    0507
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*   END;                            /*                       @Y30LB33*/
         LA    @03,1                                               0508
         AH    @03,RPTLOOP                                         0508
         STH   @03,RPTLOOP                                         0508
@DE00501 L     @15,@PC00001+4                                      0508
         L     @01,FDTPTR(,@15)                                    0508
         CH    @03,VOLSCNT(,@01)                                   0508
         BNH   @DL00501                                            0508
@DC00501 DS    0H                                                  0509
*                                                                  0509
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS THE VOLUME LIST FOR DUPLICATES                @Y30LB33*/
*   /* IF WE ARE DOING A STATUS-TYPE REPORT                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0509
*   IF TESTRC^=16&ADDR(STAT)>0 THEN                                0509
         C     TESTRC,@CF00507                                     0509
         BE    @RF00509                                            0509
         L     @03,@PC00001+4                                      0509
         L     @03,FDTPTR+52(,@03)                                 0509
         LTR   @03,@03                                             0509
         BNP   @RF00509                                            0509
*     DO;                           /*                       @Y30LB33*/
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0511
*       RVVBVRCD=OFF;               /*                       @Y30LB33*/
*       RVVDUPRC=ON;                /*                       @Y30LB33*/
         OI    RVVDUPRC(RVVIPTR),B'00010000'                       0513
         NI    RVVBVRCD(RVVIPTR),B'01111111'                       0513
*       RVVDUPID=0;                 /*                       @Y30LB33*/
         MVI   RVVDUPID(RVVIPTR),X'00'                             0514
*       RVVSDUP=ON;                 /*                       @Y30LB33*/
         OI    RVVSDUP(RVVIPTR),B'00000010'                        0515
*       RVVDVOL=ON;                 /*                       @Y30LB33*/
         OI    RVVDVOL(RVVIPTR),B'00000010'                        0516
*       RVVSVOL=ON;                 /*                       @Y30LB33*/
         OI    RVVSVOL(RVVIPTR),B'00000001'                        0517
*       FRSTDUP=ON;                 /* INDICATE FIRST DUPLICATE    0518
*                                                            @ZA00676*/
*                                                                  0518
         OI    FRSTDUP,B'10000000'                                 0518
*       /*************************************************************/
*       /*                                                           */
*       /* PASS THE REQUEST BLOCK TO THE                     @Y30LB33*/
*       /* DUPLICATE PROCESSOR FOR EVERY VOLUME IN           @Y30LB33*/
*       /* THE VOLUME PARAMETER LIST. IF THE RETURN          @Y30LB33*/
*       /* CODE FROM THE DUPLICATE PROCESSOR IS 16,          @Y30LB33*/
*       /* END EXECUTION                                     @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0519
*       DO RPTLOOP=1 BY 1 TO VOLSCNT/*                       @Y30LB33*/
*             WHILE(TESTRC<16);     /*                       @Y30LB33*/
         LA    @04,1                                               0519
         STH   @04,RPTLOOP                                         0519
         B     @DE00519                                            0519
@DL00519 C     TESTRC,@CF00507                                     0519
         BNL   @DC00519                                            0519
*         RVVOLUME=VOLSVAL(RPTLOOP);/*                       @Y30LB33*/
         SLA   @04,3                                               0520
         L     @06,@PC00001+4                                      0520
         L     @06,FDTPTR(,@06)                                    0520
         ALR   @06,@04                                             0520
         AL    @06,@CF02637                                        0520
         MVC   RVVOLUME(6,RVVIPTR),VOLSVAL-3(@06)                  0520
*         CALL DUPPROC;             /*                       @Y30LB33*/
         BAL   @14,DUPPROC                                         0521
*         RESPECIFY                                                0522
*           RTNREG RSTD;                                           0522
*         TESTRC=RTNREG;                                           0523
         LR    TESTRC,RTNREG                                       0523
*         RESPECIFY                                                0524
*           RTNREG UNRSTD;          /*                       @Y30LB33*/
*       END;                        /*                       @Y30LB33*/
         LA    @04,1                                               0525
         AH    @04,RPTLOOP                                         0525
         STH   @04,RPTLOOP                                         0525
@DE00519 L     @03,@PC00001+4                                      0525
         L     @03,FDTPTR(,@03)                                    0525
         CH    @04,VOLSCNT(,@03)                                   0525
         BNH   @DL00519                                            0525
@DC00519 DS    0H                                                  0526
*     END;                          /*                       @Y30LB33*/
*   MYCODE=TESTRC;                  /* SAVE THE RETURN CODE  @Y30LB33*/
@RF00509 LR    MYCODE,TESTRC                                       0527
*                                                                  0528
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE SUMMARY REQUEST INDICATOR TO SUMRY           @Y30LB33*/
*   /* TO PRINT A VOLUME SUMMARY                             @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0528
*   SUMMASK=VOLSUMM;                /*                       @Y30LB33*/
         SLR   SUMMASK,SUMMASK                                     0528
*   CALL SUMRY;                     /*                       @Y30LB33*/
*                                                                  0529
         BAL   @14,SUMRY                                           0529
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH A CODE OF ZERO OR 16 AS RETURNED          @Y30LB33*/
*   /* TO THIS ROUTINE FROM CALLED PROCEDURES                @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0530
*   IF MYCODE=4 THEN                                               0530
         C     MYCODE,@CF00043                                     0530
         BNE   @RF00530                                            0530
*     MYCODE=0;                     /*                       @Y30LB33*/
         SLR   MYCODE,MYCODE                                       0531
*   RETURN CODE(MYCODE);            /*                       @Y30LB33*/
@RF00530 LR    @15,MYCODE                                          0532
@EL00003 DS    0H                                                  0532
@EF00003 DS    0H                                                  0532
@ER00003 L     @14,@SA00003                                        0532
         BR    @14                                                 0532
*   END VOLSEQ;                     /*                       @Y30LB33*/
*                                                                  0534
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - GRPSEQ                               @Y30LB33*/
*   /* FUNCTION - ESTABLISH SUBTITLES AND CONTROL            @Y30LB33*/
*   /* PROCESSING OF THE GROUP NAMES IN THE                  @Y30LB33*/
*   /* GROUP PARAMETER IN THE FDTTBL.                        @Y30LB33*/
*   /* ALSO CONTROLS PRINTING OF SUMMARIES.                  @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - FDTTBL                                        @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO AND A LASTCOND OF        @Y30LB33*/
*   /* ZERO TO INDICATE ALL PROCESSING COMPLETED             @Y30LB33*/
*   /* WITHOUT ERROR. RETURN CODE OF ZERO AND A              @Y30LB33*/
*   /* LASTCOND OF 8 TO INDICATE THAT PROCESSING             @Y30LB33*/
*   /* WAS COMPLETED BUT A NON-TERMINATING ERROR             @Y30LB33*/
*   /* OCCURRED. RETURN CODE OF 16 AND LASTCOND              @Y30LB33*/
*   /* OF 8 TO INDICATE A TERMINATING ERROR.                 @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0534
*GRPSEQ:                                                           0534
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
GRPSEQ   ST    @14,@SA00004                                        0534
*   OLDERID2=NEWERID2;                                             0535
         L     @03,@PC00001                                        0535
         L     @03,GDTTR2(,@03)                                    0535
         MVC   @TS00001(95),NEWERID2(@03)                          0535
         MVC   OLDERID2(95,@03),@TS00001                           0535
*   NEWID2='LVDA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02461                              0536
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0537
         SLR   TESTRC,TESTRC                                       0537
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE SUBTITLE LINES IF NO VOLUME LIST        @Y30LB33*/
*   /* IS REQUESTED                                          @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0538
*   IF ADDR(VOLST)=0 THEN                                          0538
         SLR   @03,@03                                             0538
         L     @15,@PC00001+4                                      0538
         C     @03,FDTPTR+24(,@15)                                 0538
         BNE   @RF00538                                            0538
*     DO;                           /*                       @Y30LB33*/
*                                                                  0539
*       /*************************************************************/
*       /*                                                           */
*       /* READ IN THE SUBTITLES USING UPRINT                @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0540
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @14,DDSTRU                                          0540
         XC    DARGLIST(20,@14),DARGLIST(@14)                      0540
*       DARGRETP=ADDR(TITLSPCE);    /*                       @Y30LB33*/
         LA    @05,TITLSPCE                                        0541
         ST    @05,DARGRETP(,@14)                                  0541
*       DARGRETL=LENGTH(TITLSPCE);  /*                       @Y30LB33*/
         MVC   DARGRETL(2,@14),@CH02376                            0542
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@14),@CC02396                            0543
*       IF ADDR(STAT)>0 THEN                                       0544
         C     @03,FDTPTR+52(,@15)                                 0544
         BNL   @RF00544                                            0544
*         DARGSENT=GRPSTLE;         /*                       @Y30LB33*/
         MVI   DARGSENT(@14),X'19'                                 0545
*       ELSE                                                       0546
*         DARGSENT=GRPUTLE;         /*                       @Y30LB33*/
         B     @RC00544                                            0546
@RF00544 L     @03,DDSTRU                                          0546
         MVI   DARGSENT(@03),X'17'                                 0546
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB33*/
*                                                                  0547
@RC00544 L     @03,@PC00001                                        0547
         ST    @03,@AL00001                                        0547
         LA    @15,@CF00117                                        0547
         ST    @15,@AL00001+4                                      0547
         LA    @15,DDSTRU                                          0547
         ST    @15,@AL00001+8                                      0547
         MVI   @AL00001+8,X'80'                                    0547
         L     @15,GDTPRT(,@03)                                    0547
         LA    @01,@AL00001                                        0547
         BALR  @14,@15                                             0547
*       /*************************************************************/
*       /*                                                           */
*       /* RESET THE MAIN TITLE LINE ESTABLISHED             @Y30LB33*/
*       /* BEFORE                                            @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0548
*       CALL AMSTP044(GDTTBL,PRINTME);/*                     @Y30LB33*/
*                                                                  0548
         L     @03,@PC00001                                        0548
         ST    @03,@AL00001                                        0548
         LA    @15,PRINTME                                         0548
         ST    @15,@AL00001+4                                      0548
         MVI   @AL00001+4,X'80'                                    0548
         L     @15,GDTRES(,@03)                                    0548
         LA    @01,@AL00001                                        0548
         BALR  @14,@15                                             0548
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP THE ESTABLISH ARGUMENT LIST AND            #Y30LB33*/
*       /* ISSUE THE ESTABLISH MACRO                         #Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0549
*       PCSTLP=ADDR(TITLSPCE);      /*                       #Y30LB33*/
         LA    @03,TITLSPCE                                        0549
         ST    @03,PCSTLP                                          0549
*       PCSTLC=3;                   /*                       #Y30LB33*/
         MVC   PCSTLC(2),@CH00165                                  0550
*       CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*               #Y30LB33*/
         L     @03,@PC00001                                        0551
         ST    @03,@AL00001                                        0551
         LA    @15,PRINTME                                         0551
         ST    @15,@AL00001+4                                      0551
         LA    @15,PCARG                                           0551
         ST    @15,@AL00001+8                                      0551
         L     @15,GDTESA(,@03)                                    0551
         LA    @01,@AL00001                                        0551
         BALR  @14,@15                                             0551
*     END;                          /*                       @Y30LB33*/
*                                                                  0553
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP REQUEST BLOCK TO READ GROUPS                   @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0553
*   GRPRVVI=GRPRVVI&&GRPRVVI;       /* NULL ARG LIST         @Y30LB33*/
@RF00538 XC    GRPRVVI(68),GRPRVVI                                 0553
*   RVVIPTR=ADDR(GRPRVVI);          /*                       @Y30LB33*/
         LA    RVVIPTR,GRPRVVI                                     0554
*   RVVLNGTH=RVVLEN;                /*                       @Y30LB33*/
         LH    @04,RVVLEN                                          0555
         ST    @04,RVVLNGTH(,RVVIPTR)                              0555
*   RVVCODE=RVVOP;                  /*                       @Y30LB33*/
         MVI   RVVCODE(RVVIPTR),X'87'                              0556
*   RVVRDR=ON;                      /*                       @Y30LB33*/
         OI    RVVRDR(RVVIPTR),B'10000000'                         0557
*   RVVGRPRC=ON;                    /*                       @Y30LB33*/
         OI    RVVGRPRC(RVVIPTR),B'01000000'                       0558
*   RVVSGRP=ON;                     /*                       @Y30LB33*/
         OI    RVVSGRP(RVVIPTR),B'10000000'                        0559
*   RVVBUFLN=LENGTH(GROUP);         /*                       @Y30LB33*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02619                        0560
*   RVVRTBUF=ADDR(GRPRCDBF);        /*                       @Y30LB33*/
*                                                                  0561
         LA    @04,GRPRCDBF                                        0561
         ST    @04,RVVRTBUF(,RVVIPTR)                              0561
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE REQUEST BLOCK TO THE GROUP READER,           @Y30LB33*/
*   /* AND THE RECORD TO THE GROUP PRINTER AND CHAIN         @Y30LB33*/
*   /* SELECTER FOR EVERY GROUP IN THE GROUP PARAMETER       @Y30LB33*/
*   /* LIST. IF THE RETURN CODE FROM THE PROCESS IS 16,      @Y30LB33*/
*   /* END PROCESSING.                                       @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
*   DO RPTLOOP=1 BY 1 TO GRPCNT     /*                       @Y30LB33*/
*         WHILE(TESTRC^=16);        /*                       @Y30LB33*/
         LA    @04,1                                               0562
         STH   @04,RPTLOOP                                         0562
         B     @DE00562                                            0562
@DL00562 C     TESTRC,@CF00507                                     0562
         BE    @DC00562                                            0562
*     RVVGROUP=GRPVAL(RPTLOOP);     /*                       @Y30LB33*/
         MH    @04,@CH00037                                        0563
         L     @06,@PC00001+4                                      0563
         L     @06,FDTPTR+8(,@06)                                  0563
         ALR   @06,@04                                             0563
         AL    @06,@CF02639                                        0563
         MVC   RVVGROUP(8,RVVIPTR),GRPVAL-3(@06)                   0563
*     CALL GRPRDR;                  /*                       @Y30LB33*/
         BAL   @14,GRPRDR                                          0564
*     RESPECIFY                                                    0565
*       RTNREG RSTD;                                               0565
*     TESTRC=RTNREG;                                               0566
         LR    TESTRC,RTNREG                                       0566
*     RESPECIFY                                                    0567
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  0568
*     /***************************************************************/
*     /*                                                             */
*     /* IF THE RETURN CODE IS OK, CALL THE                  @Y30LB33*/
*     /* GROUP PRINTER TO PRINT THE GROUP RECORD             @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0568
*     IF TESTRC=0 THEN                                             0568
         LTR   TESTRC,TESTRC                                       0568
         BNZ   @RF00568                                            0568
*       CALL GRPPRNT;               /*                       @Y30LB33*/
*                                                                  0569
         BAL   @14,GRPPRNT                                         0569
*     /***************************************************************/
*     /*                                                             */
*     /* IF THE RETURN CODE IS OK, AND A VOLUME              @Y30LB33*/
*     /* LIST IS REQUESTED, CALL THE CHAIN SELECTER          @Y30LB33*/
*     /* TO PRINT THE VOLUMES                                @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0570
*     IF ADDR(VOLST)>0&TESTRC=0 THEN/*                       @Y30LB33*/
@RF00568 SLR   @03,@03                                             0570
         L     @15,@PC00001+4                                      0570
         C     @03,FDTPTR+24(,@15)                                 0570
         BNL   @RF00570                                            0570
         CR    TESTRC,@03                                          0570
         BNE   @RF00570                                            0570
*       CALL CHNSEL;                /*                       @Y30LB33*/
         BAL   @14,CHNSEL                                          0571
*     RVVIPTR=ADDR(GRPRVVI);        /*                       @Y30LB33*/
@RF00570 LA    RVVIPTR,GRPRVVI                                     0572
*   END;                            /*                       @Y30LB33*/
         LA    @04,1                                               0573
         AH    @04,RPTLOOP                                         0573
         STH   @04,RPTLOOP                                         0573
@DE00562 L     @03,@PC00001+4                                      0573
         L     @03,FDTPTR+8(,@03)                                  0573
         CH    @04,GRPCNT(,@03)                                    0573
         BNH   @DL00562                                            0573
@DC00562 DS    0H                                                  0574
*   MYCODE=TESTRC;                  /* SAVE RETURN CODE      @Y30LB33*/
         LR    MYCODE,TESTRC                                       0574
*                                                                  0575
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE SUMMARY REQUEST INDICATOR TO SUMRY TO        @Y30LB33*/
*   /* PRINT A GROUP TOTAL                                   @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0575
*   SUMMASK=GRPSUMM;                /*                       @Y30LB33*/
         LA    SUMMASK,1                                           0575
*   CALL SUMRY;                     /*                       @Y30LB33*/
*                                                                  0576
         BAL   @14,SUMRY                                           0576
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH A CODE OF ZERO OR 16, AS WAS              @Y30LB33*/
*   /* RETURNED TO THIS ROUTINE FROM CALLED PROCEDURES       @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0577
*   IF MYCODE^=16 THEN                                             0577
         C     MYCODE,@CF00507                                     0577
         BE    @RF00577                                            0577
*     MYCODE=0;                     /*                       @Y30LB33*/
         SLR   MYCODE,MYCODE                                       0578
*   RETURN CODE(MYCODE);            /*                       @Y30LB33*/
@RF00577 LR    @15,MYCODE                                          0579
@EL00004 DS    0H                                                  0579
@EF00004 DS    0H                                                  0579
@ER00004 L     @14,@SA00004                                        0579
         BR    @14                                                 0579
*   END GRPSEQ;                     /*                       @Y30LB33*/
*                                                                  0581
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - ALLGSEQ                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - PROCESS ALLGROUP REQUESTS                  @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - FDTTBL                                        @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE AND LASTCOND OF ZERO TO          @Y30LB33*/
*   /* INDICATE NO ERRORS. RETURN CODE OF ZERO AND           @Y30LB33*/
*   /* LASTCOND OF 8 TO INDICATE PARTIAL                     @Y30LB33*/
*   /* COMPLETION. RETURN CODE OF 16 AND LASTCOND            @Y30LB33*/
*   /* OF 8 IF TERMINATING ERROR.                            @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0581
*ALLGSEQ:                                                          0581
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
ALLGSEQ  ST    @14,@SA00005                                        0581
*   OLDERID2=NEWERID2;                                             0582
         L     @03,@PC00001                                        0582
         L     @03,GDTTR2(,@03)                                    0582
         MVC   @TS00001(95),NEWERID2(@03)                          0582
         MVC   OLDERID2(95,@03),@TS00001                           0582
*   NEWID2='LVEA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02468                              0583
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0584
         SLR   TESTRC,TESTRC                                       0584
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH SUBTITLE LINES IF THE VLIST PARAMETER       @Y30LB33*/
*   /* IS NOT DEFINED. USE THE SUBTITLE REQUIRED             @Y30LB33*/
*   /* BY THE REPORT PARAMETER                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0585
*   IF ADDR(VOLST)=0 THEN                                          0585
         SLR   @03,@03                                             0585
         L     @15,@PC00001+4                                      0585
         C     @03,FDTPTR+24(,@15)                                 0585
         BNE   @RF00585                                            0585
*     DO;                           /*                       @Y30LB33*/
*                                                                  0586
*       /*************************************************************/
*       /*                                                           */
*       /* READ IN THE SUBTITLE USING UPRINT                 @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0587
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @14,DDSTRU                                          0587
         XC    DARGLIST(20,@14),DARGLIST(@14)                      0587
*       DARGRETP=ADDR(TITLSPCE);    /*                       @Y30LB33*/
         LA    @05,TITLSPCE                                        0588
         ST    @05,DARGRETP(,@14)                                  0588
*       DARGRETL=LENGTH(TITLSPCE);  /*                       @Y30LB33*/
         MVC   DARGRETL(2,@14),@CH02376                            0589
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@14),@CC02396                            0590
*       IF ADDR(STAT)>0 THEN                                       0591
         C     @03,FDTPTR+52(,@15)                                 0591
         BNL   @RF00591                                            0591
*         DARGSENT=GRPSTLE;         /*                       @Y30LB33*/
         MVI   DARGSENT(@14),X'19'                                 0592
*       ELSE                                                       0593
*         DARGSENT=GRPUTLE;         /*                       @Y30LB33*/
         B     @RC00591                                            0593
@RF00591 L     @03,DDSTRU                                          0593
         MVI   DARGSENT(@03),X'17'                                 0593
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB33*/
*                                                                  0594
@RC00591 L     @03,@PC00001                                        0594
         ST    @03,@AL00001                                        0594
         LA    @15,@CF00117                                        0594
         ST    @15,@AL00001+4                                      0594
         LA    @15,DDSTRU                                          0594
         ST    @15,@AL00001+8                                      0594
         MVI   @AL00001+8,X'80'                                    0594
         L     @15,GDTPRT(,@03)                                    0594
         LA    @01,@AL00001                                        0594
         BALR  @14,@15                                             0594
*       /*************************************************************/
*       /*                                                           */
*       /* RESET THE MAIN TITLE LINE ESTABLISHED             @Y30LB33*/
*       /* BEFORE                                            @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0595
*       CALL AMSTP044(GDTTBL,PRINTME);/*                     @Y30LB33*/
*                                                                  0595
         L     @03,@PC00001                                        0595
         ST    @03,@AL00001                                        0595
         LA    @15,PRINTME                                         0595
         ST    @15,@AL00001+4                                      0595
         MVI   @AL00001+4,X'80'                                    0595
         L     @15,GDTRES(,@03)                                    0595
         LA    @01,@AL00001                                        0595
         BALR  @14,@15                                             0595
*       /*************************************************************/
*       /*                                                           */
*       /* ESTABLISH THE SUBTITLES USING UESTA               @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0596
*       PCSTLP=ADDR(TITLSPCE);      /*                       @Y30LB33*/
         LA    @03,TITLSPCE                                        0596
         ST    @03,PCSTLP                                          0596
*       PCSTLC=3;                   /*                       @Y30LB33*/
         MVC   PCSTLC(2),@CH00165                                  0597
*       CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*               @Y30LB33*/
         L     @03,@PC00001                                        0598
         ST    @03,@AL00001                                        0598
         LA    @15,PRINTME                                         0598
         ST    @15,@AL00001+4                                      0598
         LA    @15,PCARG                                           0598
         ST    @15,@AL00001+8                                      0598
         L     @15,GDTESA(,@03)                                    0598
         LA    @01,@AL00001                                        0598
         BALR  @14,@15                                             0598
*     END;                          /*                       @Y30LB33*/
*                                                                  0600
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP READ REQUEST BLOCK TO READ GROUPS              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0600
*   GRPRVVI=GRPRVVI&&GRPRVVI;       /*                       @Y30LB33*/
@RF00585 XC    GRPRVVI(68),GRPRVVI                                 0600
*   RVVIPTR=ADDR(GRPRVVI);          /*                       @Y30LB33*/
         LA    RVVIPTR,GRPRVVI                                     0601
*   RVVLNGTH=RVVLEN;                /*                       @Y30LB33*/
         LH    @04,RVVLEN                                          0602
         ST    @04,RVVLNGTH(,RVVIPTR)                              0602
*   RVVCODE=RVVOP;                  /*                       @Y30LB33*/
         MVI   RVVCODE(RVVIPTR),X'87'                              0603
*   RVVRDNR=ON;                     /*                       @Y30LB33*/
         OI    RVVRDNR(RVVIPTR),B'01000000'                        0604
*   RVVGRPRC=ON;                    /*                       @Y30LB33*/
         OI    RVVGRPRC(RVVIPTR),B'01000000'                       0605
*   RVVBUFLN=LENGTH(GROUP);         /*                       @Y30LB33*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02619                        0606
*   RVVRTBUF=ADDR(GRPRCDBF);        /*                       @Y30LB33*/
         LA    @04,GRPRCDBF                                        0607
         ST    @04,RVVRTBUF(,RVVIPTR)                              0607
*                                                                  0608
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE REQUEST BLOCK TO THE GROUP READER,           @Y30LB33*/
*   /* AND THE GROUP RECORD TO THE GROUP PRINTER AND         @Y30LB33*/
*   /* CHAIN SELECTER FOR EVERY GROUP FOUND. IF THE          @Y30LB33*/
*   /* RETURN CODE FROM THE PROCESS IS NOT ZERO, END         @Y30LB33*/
*   /* PROCESSING.                                           @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0608
*   DO WHILE(TESTRC=0);             /*                       @Y30LB33*/
         B     @DE00608                                            0608
@DL00608 DS    0H                                                  0609
*     CALL GRPRDR;                  /*                       @Y30LB33*/
         BAL   @14,GRPRDR                                          0609
*     RESPECIFY                                                    0610
*       RTNREG RSTD;                                               0610
*     TESTRC=RTNREG;                                               0611
         LR    TESTRC,RTNREG                                       0611
*     RESPECIFY                                                    0612
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  0612
*     /***************************************************************/
*     /*                                                             */
*     /* IF NO ERRORS, PRINT THE GROUP                       @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0613
*     IF TESTRC=0 THEN                                             0613
         LTR   TESTRC,TESTRC                                       0613
         BNZ   @RF00613                                            0613
*       CALL GRPPRNT;               /*                       @Y30LB33*/
*                                                                  0614
         BAL   @14,GRPPRNT                                         0614
*     /***************************************************************/
*     /*                                                             */
*     /* IF NO ERRORS AND VLIST REQUESTED, PRINT             @Y30LB33*/
*     /* THE CHAIN AND GET THE NEXT GROUP NAME               @Y30LB33*/
*     /* FROM THE GROUP RECORD                               @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0615
*     IF TESTRC=0&ADDR(VOLST)>0     /*                       @Y30LB33*/
*       THEN                                                       0615
@RF00613 SLR   @03,@03                                             0615
         CR    TESTRC,@03                                          0615
         BNE   @RF00615                                            0615
         L     @15,@PC00001+4                                      0615
         C     @03,FDTPTR+24(,@15)                                 0615
         BNL   @RF00615                                            0615
*       CALL CHNSEL;                /*                       @Y30LB33*/
         BAL   @14,CHNSEL                                          0616
*     RVVIPTR=ADDR(GRPRVVI);        /*                       @Y30LB33*/
@RF00615 LA    RVVIPTR,GRPRVVI                                     0617
*     RVVSGRP=ON;                   /*                       @Y30LB33*/
         OI    RVVSGRP(RVVIPTR),B'10000000'                        0618
*     RVVGROUP=GROVVGRP;            /*                       @Y30LB33*/
         MVC   RVVGROUP(8,RVVIPTR),GROVVGRP(GROUPPTR)              0619
*   END;                            /*                       @Y30LB33*/
@DE00608 LTR   TESTRC,TESTRC                                       0620
         BZ    @DL00608                                            0620
*   MYCODE=TESTRC;                  /* SAVE RETURN CODE      @Y30LB33*/
         LR    MYCODE,TESTRC                                       0621
*                                                                  0622
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE SUMMARY REQUEST INDICATOR TO SUMRY           @Y30LB33*/
*   /* TO PRINT A GROUP TOTAL                                @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*   SUMMASK=GRPSUMM;                /*                       @Y30LB33*/
         LA    SUMMASK,1                                           0622
*   CALL SUMRY;                     /*                       @Y30LB33*/
*                                                                  0623
         BAL   @14,SUMRY                                           0623
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH ZERO, FOR NO ERRORS, OR 16                @Y30LB33*/
*   /* FOR TERMINATING ERROR                                 @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   IF MYCODE<16 THEN                                              0624
         C     MYCODE,@CF00507                                     0624
         BNL   @RF00624                                            0624
*     MYCODE=0;                     /*                       @Y30LB33*/
         SLR   MYCODE,MYCODE                                       0625
*   RETURN CODE(MYCODE);            /*                       @Y30LB33*/
@RF00624 LR    @15,MYCODE                                          0626
@EL00005 DS    0H                                                  0626
@EF00005 DS    0H                                                  0626
@ER00005 L     @14,@SA00005                                        0626
         BR    @14                                                 0626
*   END ALLGSEQ;                    /*                       @Y30LB33*/
*                                                                  0628
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - ALLVSEQ                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - TO PROCESS ALLVOLUME REQUESTS,             @Y30LB33*/
*   /* ESTABLISH THE SUBTITLES FOR THE REPORT,               @Y30LB33*/
*   /* AND CONTROL THE PRINTING OF THE SUMMARY.              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - FDTTBL                                        @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE AND LASTCOND OF ZERO IF          @Y30LB33*/
*   /* PROCESSING COMPLETED WITH NO ERRORS.                  @Y30LB33*/
*   /* RETURN CODE OF ZERO AND LASTCOND OF 8 IF              @Y30LB33*/
*   /* PROCESSING COMPLETED WITH ERRORS. RETURN              @Y30LB33*/
*   /* CODE OF 16 AND LASTCOND OF 8 FOR PROCESSING           @Y30LB33*/
*   /* TERMINATION                                           @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0628
*ALLVSEQ:                                                          0628
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
ALLVSEQ  ST    @14,@SA00006                                        0628
*   OLDERID2=NEWERID2;                                             0629
         L     @03,@PC00001                                        0629
         L     @03,GDTTR2(,@03)                                    0629
         MVC   @TS00001(95),NEWERID2(@03)                          0629
         MVC   OLDERID2(95,@03),@TS00001                           0629
*   NEWID2='LVFA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02472                              0630
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0631
         SLR   TESTRC,TESTRC                                       0631
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE REPORT SUBTITLE LINES                   @Y30LB33*/
*   /* FIRST READ IN THE SUBTITLES USING UPRINT              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0632
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Y30LB33*/
         L     @03,DDSTRU                                          0632
         XC    DARGLIST(20,@03),DARGLIST(@03)                      0632
*   DARGRETP=ADDR(TITLSPCE);        /*                       @Y30LB33*/
         LA    @15,TITLSPCE                                        0633
         ST    @15,DARGRETP(,@03)                                  0633
*   DARGRETL=LENGTH(TITLSPCE);      /*                       @Y30LB33*/
         MVC   DARGRETL(2,@03),@CH02376                            0634
*   DARGSMOD=MODLV0;                /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@03),@CC02396                            0635
*   IF ADDR(STAT)>0 THEN                                           0636
         L     @15,@PC00001+4                                      0636
         L     @15,FDTPTR+52(,@15)                                 0636
         LTR   @15,@15                                             0636
         BNP   @RF00636                                            0636
*     DARGSENT=VOLSTLE;             /*                       @Y30LB33*/
         MVI   DARGSENT(@03),X'1B'                                 0637
*   ELSE                                                           0638
*     DARGSENT=VOLUTLE;             /*                       @Y30LB33*/
         B     @RC00636                                            0638
@RF00636 L     @03,DDSTRU                                          0638
         MVI   DARGSENT(@03),X'12'                                 0638
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Y30LB33*/
*                                                                  0639
@RC00636 L     @03,@PC00001                                        0639
         ST    @03,@AL00001                                        0639
         LA    @15,@CF00117                                        0639
         ST    @15,@AL00001+4                                      0639
         LA    @15,DDSTRU                                          0639
         ST    @15,@AL00001+8                                      0639
         MVI   @AL00001+8,X'80'                                    0639
         L     @15,GDTPRT(,@03)                                    0639
         LA    @01,@AL00001                                        0639
         BALR  @14,@15                                             0639
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE MAIN TITLE LINE ESTABLISHED BEFORE          @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0640
*   CALL AMSTP044(GDTTBL,PRINTME);  /*                       @Y30LB33*/
*                                                                  0640
         L     @03,@PC00001                                        0640
         ST    @03,@AL00001                                        0640
         LA    @15,PRINTME                                         0640
         ST    @15,@AL00001+4                                      0640
         MVI   @AL00001+4,X'80'                                    0640
         L     @15,GDTRES(,@03)                                    0640
         LA    @01,@AL00001                                        0640
         BALR  @14,@15                                             0640
*   /*****************************************************************/
*   /*                                                               */
*   /* THEN ESTABLISH THE SUBTITLES USING UESTA              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0641
*   PCSTLP=ADDR(TITLSPCE);          /*                       @Y30LB33*/
         LA    @03,TITLSPCE                                        0641
         ST    @03,PCSTLP                                          0641
*   IF ADDR(STAT)>0 THEN                                           0642
         L     @03,@PC00001+4                                      0642
         L     @03,FDTPTR+52(,@03)                                 0642
         LTR   @03,@03                                             0642
         BNP   @RF00642                                            0642
*     PCSTLC=2;                     /*                       @Y30LB33*/
         MVC   PCSTLC(2),@CH00156                                  0643
*   ELSE                                                           0644
*     PCSTLC=3;                     /*                       @Y30LB33*/
         B     @RC00642                                            0644
@RF00642 MVC   PCSTLC(2),@CH00165                                  0644
*   CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*                   @Y30LB33*/
@RC00642 L     @04,@PC00001                                        0645
         ST    @04,@AL00001                                        0645
         LA    @03,PRINTME                                         0645
         ST    @03,@AL00001+4                                      0645
         LA    @03,PCARG                                           0645
         ST    @03,@AL00001+8                                      0645
         L     @15,GDTESA(,@04)                                    0645
         LA    @01,@AL00001                                        0645
         BALR  @14,@15                                             0645
*                                                                  0646
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE READ-REQUEST PARAMETER LIST            @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0646
*   VOLRVVI=VOLRVVI&&VOLRVVI;       /*                       @Y30LB33*/
         XC    VOLRVVI(68),VOLRVVI                                 0646
*   RVVIPTR=ADDR(VOLRVVI);          /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0647
*   RVVLNGTH=RVVLEN;                /*                       @Y30LB33*/
         LH    @04,RVVLEN                                          0648
         ST    @04,RVVLNGTH(,RVVIPTR)                              0648
*   RVVCODE=RVVOP;                  /*                       @Y30LB33*/
         MVI   RVVCODE(RVVIPTR),X'87'                              0649
*   RVVRDNR=ON;                     /*                       @Y30LB33*/
         OI    RVVRDNR(RVVIPTR),B'01000000'                        0650
*   RVVBVRCD=ON;                    /*                       @Y30LB33*/
         OI    RVVBVRCD(RVVIPTR),B'10000000'                       0651
*   RVVBUFLN=LENGTH(BASEV);         /*                       @Y30LB33*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02618                        0652
*   RVVRTBUF=ADDR(VOLRCDBF);        /*                       @Y30LB33*/
         LA    @04,VOLRCDBF                                        0653
         ST    @04,RVVRTBUF(,RVVIPTR)                              0653
*                                                                  0654
*   /*****************************************************************/
*   /*                                                               */
*   /* PRODUCE A NON-GROUPED LISTING IF                      @Y30LB33*/
*   /* REQUESTED IN THE FDTTBL                               @Y30LB33*/
*   /* CAN BE STATUS OR USAGE                                @ZDR2056*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0654
*   IF ADDR(NGRPD)>0 THEN                                          0654
         L     @04,@PC00001+4                                      0654
         L     @04,FDTPTR+16(,@04)                                 0654
         LTR   @04,@04                                             0654
         BNP   @RF00654                                            0654
*     DO;                           /*                       @Y30LB33*/
*       RVVNGVOL=ON;                /*                       @Y30LB33*/
         OI    RVVNGVOL(RVVIPTR),B'01000000'                       0656
*       RVVRDNR=OFF;                /*                       @ZM34321*/
*       RVVRDCH=ON;                 /*                       @ZM34321*/
         OI    RVVRDCH(RVVIPTR),B'00100000'                        0658
         NI    RVVRDNR(RVVIPTR),B'10111111'                        0658
*       CALL VOLCHNR;               /*                       @Y30LB33*/
         BAL   @14,VOLCHNR                                         0659
*     END;                          /*                       @Y30LB33*/
*                                                                  0661
*   /*****************************************************************/
*   /*                                                               */
*   /* PRODUCE AN ALL-VOLUME REPORT IF NON-GROUPED,          @ZDR2056*/
*   /* DUPLICATES OR PLACE HOLDERS ARE NOT REQUESTED.        @ZDR2056*/
*   /* PRODUCE A PLACE HOLDER REPORT IF ONLY PLACE           @ZDR2056*/
*   /* HOLDERS IS REQUESTED.                                 @ZDR2056*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0661
*   IF(ADDR(NGRPD)=0&ADDR(DUP)=0&ADDR(PLHD)=0)×ADDR(PLHD)^=0 THEN  0661
@RF00654 SLR   @04,@04                                             0661
         L     @03,@PC00001+4                                      0661
         C     @04,FDTPTR+16(,@03)                                 0661
         BNE   @GL00014                                            0661
         C     @04,FDTPTR+32(,@03)                                 0661
         BNE   @GL00014                                            0661
         C     @04,FDTPTR+92(,@03)                                 0661
         BE    @RT00661                                            0661
@GL00014 L     @04,@PC00001+4                                      0661
         L     @04,FDTPTR+92(,@04)                                 0661
         LTR   @04,@04                                             0661
         BZ    @RF00661                                            0661
@RT00661 DS    0H                                                  0662
*     DO;                           /*                       @ZDR2056*/
*                                                                  0662
*       /*************************************************************/
*       /*                                                           */
*       /* INDICATE VOLPROC CALLED BY THIS PROCEDURE         @ZDR2056*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0663
*       ALLVCALL=ON;                /*                       @ZDR2056*/
*                                                                  0663
         OI    ALLVCALL,B'00100000'                                0663
*       /*************************************************************/
*       /*                                                           */
*       /* RETURN ALL RECORDS                                @ZDR2056*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0664
*       RVVALL=ON;                  /*                       @ZDR2056*/
*                                                                  0664
         OI    RVVALL(RVVIPTR),B'00000001'                         0664
*       /*************************************************************/
*       /*                                                           */
*       /* CALL THE VOLUME PROCESSOR TO READ AND             @Y30LB33*/
*       /* PRINT THE VOLUME AND ITS COPIES                   @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0665
*       CALL VOLPROC;               /*                       @Y30LB33*/
         BAL   @14,VOLPROC                                         0665
*       RESPECIFY                                                  0666
*         RTNREG RSTD;                                             0666
*       TESTRC=RTNREG;                                             0667
         LR    TESTRC,RTNREG                                       0667
*       RESPECIFY                                                  0668
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
*                                                                  0669
         LA    RVVIPTR,VOLRVVI                                     0669
*       /*************************************************************/
*       /*                                                           */
*       /* KEEP CALLING THE VOLUME PROCESSOR                 @Y30LB33*/
*       /* UNTIL IT GETS AN ERROR OR END-OF-FILE             @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0670
*       IF TESTRC=0 THEN            /*                       @Y30LB33*/
         LTR   TESTRC,TESTRC                                       0670
         BNZ   @RF00670                                            0670
*         DO WHILE(TESTRC=0);       /*                       @Y30LB33*/
         B     @DE00671                                            0671
@DL00671 DS    0H                                                  0672
*           RVVIPTR=ADDR(VOLRVVI);  /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0672
*           RVVOLUME=BASSERNO;      /*                       @Y30LB33*/
         MVC   RVVOLUME(6,RVVIPTR),BASSERNO(BASEVPTR)              0673
*           RVVSVOL=ON;             /*                       @Y30LB33*/
         OI    RVVSVOL(RVVIPTR),B'00000001'                        0674
*           CALL VOLPROC;           /*                       @Y30LB33*/
         BAL   @14,VOLPROC                                         0675
*           RESPECIFY                                              0676
*             RTNREG RSTD;                                         0676
*           TESTRC=RTNREG;                                         0677
         LR    TESTRC,RTNREG                                       0677
*           RESPECIFY                                              0678
*             RTNREG UNRSTD;        /*                       @Y30LB33*/
*         END;                      /*                       @Y30LB33*/
@DE00671 LTR   TESTRC,TESTRC                                       0679
         BZ    @DL00671                                            0679
*       ALLVCALL=OFF;               /*                       @ZDR2056*/
@RF00670 NI    ALLVCALL,B'11011111'                                0680
*       RVVALL=OFF;                 /*                       @ZDR2056*/
         NI    RVVALL(RVVIPTR),B'11111110'                         0681
*     END;                          /*                       @Y30LB33*/
*                                                                  0683
*   /*****************************************************************/
*   /*                                                               */
*   /* PRODUCE A DUPLICATE VOLUME REPORT IF NON-             @Y30LB33*/
*   /* GROUPED OR PLACE HOLDER IS NOT DEFINED AND WE ARE DOING A     */
*   /* STATUS REPORT AND NO ERRORS SO FAR                    @ZDR2056*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0683
*   IF(ADDR(NGRPD)=0&ADDR(PLHD)=0)&TESTRC^=16/*              @ZDR2056*/
*       &ADDR(STAT)>0 THEN                                         0683
@RF00661 SLR   @03,@03                                             0683
         L     @15,@PC00001+4                                      0683
         C     @03,FDTPTR+16(,@15)                                 0683
         BNE   @RF00683                                            0683
         C     @03,FDTPTR+92(,@15)                                 0683
         BNE   @RF00683                                            0683
         C     TESTRC,@CF00507                                     0683
         BE    @RF00683                                            0683
         C     @03,FDTPTR+52(,@15)                                 0683
         BNL   @RF00683                                            0683
*     DO;                           /*                       @Y30LB33*/
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0685
*       RVVBVRCD=OFF;               /*                       @Y30LB33*/
*       RVVDUPRC=ON;                /*                       @Y30LB33*/
         OI    RVVDUPRC(RVVIPTR),B'00010000'                       0687
         NI    RVVBVRCD(RVVIPTR),B'01111111'                       0687
*       RVVSVOL=OFF;                /*                       @Y30LB33*/
         NI    RVVSVOL(RVVIPTR),B'11111110'                        0688
*       FRSTDUP=ON;                 /* INDICATE FIRST DUPLICATE    0689
*                                                            @ZA00676*/
         OI    FRSTDUP,B'10000000'                                 0689
*       CALL DUPPROC;               /*                       @Y30LB33*/
         BAL   @14,DUPPROC                                         0690
*       RESPECIFY                                                  0691
*         RTNREG RSTD;                                             0691
*       TESTRC=RTNREG;                                             0692
         LR    TESTRC,RTNREG                                       0692
*       RESPECIFY                                                  0693
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*     END;                          /*                       @Y30LB33*/
*   MYCODE=TESTRC;                  /* SAVE RETURN CODE      @Y30LB33*/
@RF00683 LR    MYCODE,TESTRC                                       0695
*                                                                  0696
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT A VOLUME SUMMARY BY PASSING THE SUMMARY         @Y30LB33*/
*   /* MASK TO THE SUMMARIZER                                @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0696
*   SUMMASK=VOLSUMM;                /*                       @Y30LB33*/
         SLR   SUMMASK,SUMMASK                                     0696
*   CALL SUMRY;                     /*                       @Y30LB33*/
*                                                                  0697
         BAL   @14,SUMRY                                           0697
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN A CODE OF ZERO OR 16                           @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0698
*   IF MYCODE<16 THEN                                              0698
         C     MYCODE,@CF00507                                     0698
         BNL   @RF00698                                            0698
*     MYCODE=0;                     /*                       @Y30LB33*/
         SLR   MYCODE,MYCODE                                       0699
*   RETURN CODE(MYCODE);            /*                       @Y30LB33*/
@RF00698 LR    @15,MYCODE                                          0700
@EL00006 DS    0H                                                  0700
@EF00006 DS    0H                                                  0700
@ER00006 L     @14,@SA00006                                        0700
         BR    @14                                                 0700
*   END ALLVSEQ;                    /*                       @Y30LB33*/
*                                                                  0702
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CHNSEL                               @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - SELECT VOLUME TYPES FROM CHAINS IN         @Y30LB33*/
*   /* GROUPS                                                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - GROUP RECORD AND THE FDTTBL                   @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO AND LASTCOND OF ZERO     @Y30LB33*/
*   /* IF ALL PROCESSING WAS COMPLETED WITHOUT               @Y30LB33*/
*   /* ERROR. RETURN CODE OF 16 AND LASTCOND OF 8            @Y30LB33*/
*   /* IF PROCESSING TERMINATED WITH AN ERROR.               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0702
*CHNSEL:                                                           0702
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
CHNSEL   ST    @14,@SA00007                                        0702
*   OLDERID2=NEWERID2;                                             0703
         L     @04,@PC00001                                        0703
         L     @04,GDTTR2(,@04)                                    0703
         MVC   @TS00001(95),NEWERID2(@04)                          0703
         MVC   OLDERID2(95,@04),@TS00001                           0703
*   NEWID2='LVGA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02477                              0704
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0705
         SLR   TESTRC,TESTRC                                       0705
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE READ REQUEST BLOCK TO START                @Y30LB33*/
*   /* READING A CHAIN                                       @Y30LB33*/
*   /* GET THE FIRST VOLUME SERIAL FROM THE                  @Y30LB33*/
*   /* GROUP RECORD                                          @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0706
*   VOLRVVI=VOLRVVI&&VOLRVVI;       /*                       @Y30LB33*/
         XC    VOLRVVI(68),VOLRVVI                                 0706
*   RVVIPTR=ADDR(VOLRVVI);          /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0707
*   RVVLNGTH=RVVLEN;                /*                       @Y30LB33*/
         LH    @04,RVVLEN                                          0708
         ST    @04,RVVLNGTH(,RVVIPTR)                              0708
*   RVVCODE=RVVOP;                  /*                       @Y30LB33*/
         MVI   RVVCODE(RVVIPTR),X'87'                              0709
*   RVVRDCH=ON;                     /*                       @Y30LB33*/
         OI    RVVRDCH(RVVIPTR),B'00100000'                        0710
*   RVVBVRCD=ON;                    /*                       @Y30LB33*/
         OI    RVVBVRCD(RVVIPTR),B'10000000'                       0711
*   RVVRTBUF=ADDR(VOLRCDBF);        /*                       @Y30LB33*/
         LA    @04,VOLRCDBF                                        0712
         ST    @04,RVVRTBUF(,RVVIPTR)                              0712
*   RVVBUFLN=LENGTH(BASEV);         /*                       @Y30LB33*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02618                        0713
*   RVVSVOL=ON;                     /*                       @Y30LB33*/
         OI    RVVSVOL(RVVIPTR),B'00000001'                        0714
*   GROUPPTR=ADDR(GRPRCDBF);        /*                       @Y30LB33*/
         LA    GROUPPTR,GRPRCDBF                                   0715
*   RVVGPVOL=ON;                    /*                       @Y30LB33*/
         OI    RVVGPVOL(RVVIPTR),B'10000000'                       0716
*   RVVOLUME=GROFSN;                /*                       @Y30LB33*/
         MVC   RVVOLUME(6,RVVIPTR),GROFSN(GROUPPTR)                0717
*   RVVGROUP=GROVVGRP;              /*                       @Y30LB33*/
         MVC   RVVGROUP(8,RVVIPTR),GROVVGRP(GROUPPTR)              0718
*   RVVSGRP=ON;                     /*                       @Y30LB33*/
         OI    RVVSGRP(RVVIPTR),B'10000000'                        0719
*                                                                  0720
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE GENERAL VOLUMES IF GENERAL,                @Y30LB33*/
*   /* ACTIVE, OR ALL ARE REQUESTED IN THE FDTTBL,           @Y30LB33*/
*   /* AND IF GROUP HAS GENERAL VOLUMES                      @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0720
*   IF(ADDR(GNRL)>0×ADDR(AL)>0×     /*                       @Y30LB33*/
*       ADDR(ACT)>0)&GRONGEN>0 THEN                                0720
         SLR   @04,@04                                             0720
         L     @03,@PC00001+4                                      0720
         C     @04,FDTPTR+76(,@03)                                 0720
         BL    @GL00020                                            0720
         C     @04,FDTPTR+36(,@03)                                 0720
         BL    @GL00020                                            0720
         C     @04,FDTPTR+68(,@03)                                 0720
         BNL   @RF00720                                            0720
@GL00020 LH    @04,GRONGEN(,GROUPPTR)                              0720
         LTR   @04,@04                                             0720
         BNP   @RF00720                                            0720
*     DO;                           /*                       @Y30LB33*/
*                                                                  0721
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP GENERAL VOLUME HEADER LINE                 @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0722
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @04,DDSTRU                                          0722
         XC    DARGLIST(20,@04),DARGLIST(@04)                      0722
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@04),@CC02396                            0723
*       DARGSENT=ACTGEN;            /*                       @Y30LB33*/
*                                                                  0724
         MVI   DARGSENT(@04),X'0E'                                 0724
*       /*************************************************************/
*       /*                                                           */
*       /* PRINT THE GENERAL HEADING                         @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0725
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
         L     @04,@PC00001                                        0725
         ST    @04,@AL00001                                        0725
         LA    @03,PRINTME                                         0725
         ST    @03,@AL00001+4                                      0725
         LA    @03,DDSTRU                                          0725
         ST    @03,@AL00001+8                                      0725
         MVI   @AL00001+8,X'80'                                    0725
         L     @15,GDTPRT(,@04)                                    0725
         LA    @01,@AL00001                                        0725
         BALR  @14,@15                                             0725
*                                                                  0726
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS ACTIVE GENERAL VOLUMES                    @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0726
*       RVVACTV=ON;                 /* READ ACTIVE VOLS      @Y30LB33*/
*       RVVGSVOL=ON;                /* REQUEST GENERAL       @Y30LB33*/
         OI    RVVACTV(RVVIPTR),B'00100100'                        0727
*       CALL VOLCHNR;               /* READ THE CHAIN        @Y30LB33*/
         BAL   @14,VOLCHNR                                         0728
*       RESPECIFY                                                  0729
*         RTNREG RSTD;                                             0729
*       TESTRC=RTNREG;                                             0730
         LR    TESTRC,RTNREG                                       0730
*       RESPECIFY                                                  0731
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*       RVVACTV=OFF;                /* RESET REQUEST BLOCK   @Y30LB33*/
*       RVVGSVOL=OFF;               /*                       @Y30LB33*/
         NI    RVVACTV(RVVIPTR),B'11011011'                        0733
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0734
*     END;                          /*                       @Y30LB33*/
*                                                                  0736
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT ACTIVE RESTRICTED VOLUMES IF                   @Y30LB33*/
*   /* RESTRICTED, ALL OR ACTIVE ARE REQUESTED               @Y30LB33*/
*   /* IN THE FDTTBL AND IF THE GROUP HAS                    @Y30LB33*/
*   /* RESTRICTED VOLUMES                                    @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0736
*   IF(TESTRC<16&GRONRSTD>0)&       /*                       @Y30LB33*/
*       (ADDR(RSTR)>0×ADDR(AL)>0×   /*                       @Y30LB33*/
*       ADDR(ACT)>0) THEN                                          0736
@RF00720 C     TESTRC,@CF00507                                     0736
         BNL   @RF00736                                            0736
         SLR   @04,@04                                             0736
         CH    @04,GRONRSTD(,GROUPPTR)                             0736
         BNL   @RF00736                                            0736
         L     @03,@PC00001+4                                      0736
         C     @04,FDTPTR+80(,@03)                                 0736
         BL    @RT00736                                            0736
         C     @04,FDTPTR+36(,@03)                                 0736
         BL    @RT00736                                            0736
         C     @04,FDTPTR+68(,@03)                                 0736
         BNL   @RF00736                                            0736
@RT00736 DS    0H                                                  0737
*     DO;                           /*                       @Y30LB33*/
*                                                                  0737
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP RESTRICTED VOLUME                          @Y30LB33*/
*       /* HEADER LINE                                       @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0738
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @04,DDSTRU                                          0738
         XC    DARGLIST(20,@04),DARGLIST(@04)                      0738
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@04),@CC02396                            0739
*       DARGSENT=ACTRSTR;           /*                       @Y30LB33*/
*                                                                  0740
         MVI   DARGSENT(@04),X'0F'                                 0740
*       /*************************************************************/
*       /*                                                           */
*       /* PRINT THE RESTRICTED HEADING                      @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0741
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
         L     @04,@PC00001                                        0741
         ST    @04,@AL00001                                        0741
         LA    @03,PRINTME                                         0741
         ST    @03,@AL00001+4                                      0741
         LA    @03,DDSTRU                                          0741
         ST    @03,@AL00001+8                                      0741
         MVI   @AL00001+8,X'80'                                    0741
         L     @15,GDTPRT(,@04)                                    0741
         LA    @01,@AL00001                                        0741
         BALR  @14,@15                                             0741
*                                                                  0742
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS RESTRICTED VOLUMES                        @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0742
*       RVVACTV=ON;                 /* READ ACTIVE VOLS      @Y30LB33*/
*       RVVRSTD=ON;                 /*                       @Y30LB33*/
         OI    RVVACTV(RVVIPTR),B'00010100'                        0743
*       CALL VOLCHNR;               /* READ THE CHAIN        @Y30LB33*/
         BAL   @14,VOLCHNR                                         0744
*       RESPECIFY                                                  0745
*         RTNREG RSTD;                                             0745
*       TESTRC=RTNREG;                                             0746
         LR    TESTRC,RTNREG                                       0746
*       RESPECIFY                                                  0747
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*       RVVACTV=OFF;                /* RESET REQUEST BLOCK   @Y30LB33*/
*       RVVRSTD=OFF;                /*                       @Y30LB33*/
         NI    RVVACTV(RVVIPTR),B'11101011'                        0749
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0750
*     END;                          /*                       @Y30LB33*/
*                                                                  0752
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE INACTIVE VOLUMES IF INACTIVE               @Y30LB33*/
*   /* OR ALL ARE SPECIFIED IN THE FDTTBL AND IF             @Y30LB33*/
*   /* THE GROUP HAS INACTIVE VOLUMES                        @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0752
*   IF TESTRC<16&GRONINAC>0&(ADDR(AL)>0×/*                   @Y30LB33*/
*       ADDR(INACT)>0)              /*                       @Y30LB33*/
*     THEN                                                         0752
@RF00736 C     TESTRC,@CF00507                                     0752
         BNL   @RF00752                                            0752
         SLR   @04,@04                                             0752
         CH    @04,GRONINAC(,GROUPPTR)                             0752
         BNL   @RF00752                                            0752
         L     @03,@PC00001+4                                      0752
         C     @04,FDTPTR+36(,@03)                                 0752
         BL    @RT00752                                            0752
         C     @04,FDTPTR+72(,@03)                                 0752
         BNL   @RF00752                                            0752
@RT00752 DS    0H                                                  0753
*     DO;                           /*                       @Y30LB33*/
*                                                                  0753
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP INACTIVE VOLUME HEADER LINE                @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0754
*       DARGLIST=''B;               /*                       @Y30LB33*/
         L     @04,DDSTRU                                          0754
         XC    DARGLIST(20,@04),DARGLIST(@04)                      0754
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@04),@CC02396                            0755
*       DARGSENT=INACTMSG;          /*                       @Y30LB33*/
         MVI   DARGSENT(@04),X'10'                                 0756
*                                                                  0757
*       /*************************************************************/
*       /*                                                           */
*       /* PRINT THE INACTIVE HEADING                        @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0757
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
*                                                                  0757
         L     @04,@PC00001                                        0757
         ST    @04,@AL00001                                        0757
         LA    @03,PRINTME                                         0757
         ST    @03,@AL00001+4                                      0757
         LA    @03,DDSTRU                                          0757
         ST    @03,@AL00001+8                                      0757
         MVI   @AL00001+8,X'80'                                    0757
         L     @15,GDTPRT(,@04)                                    0757
         LA    @01,@AL00001                                        0757
         BALR  @14,@15                                             0757
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS INACTIVE VOLUMES                          @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0758
*       RVVINACT=ON;                /* SELECT INACTIVE VOLS  @Y30LB33*/
         OI    RVVINACT(RVVIPTR),B'00001000'                       0758
*       CALL VOLCHNR;               /* PROCESS THE CHAIN     @Y30LB33*/
         BAL   @14,VOLCHNR                                         0759
*       RESPECIFY                                                  0760
*         RTNREG RSTD;                                             0760
*       TESTRC=RTNREG;                                             0761
         LR    TESTRC,RTNREG                                       0761
*       RESPECIFY                                                  0762
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*       RVVINACT=OFF;               /* RESET REQUEST BLOCK   @Y30LB33*/
         NI    RVVINACT(RVVIPTR),B'11110111'                       0763
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0764
*     END;                          /*                       @Y30LB33*/
*                                                                  0766
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT THE VOLUMES THAT WILL EXPIRE AFTER             @Y30LB33*/
*   /* THE SPECIFIED NUMBER OF DAYS IF THE                   @Y30LB33*/
*   /* EXPIRATION PARAMETER WAS SPECIFIED, IF THE            @Y30LB33*/
*   /* GROUP HAS A RETENTION PERIOD, AND IF THE              @Y30LB33*/
*   /* GROUP HAS GENERAL VOLUMES                             @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0766
*   IF TESTRC<16&GRORETN=ON&GRONGEN>0/*                      @Y30LB33*/
*       &ADDR(EXPIR)>0 THEN                                        0766
@RF00752 C     TESTRC,@CF00507                                     0766
         BNL   @RF00766                                            0766
         TM    GRORETN(GROUPPTR),B'00000100'                       0766
         BNO   @RF00766                                            0766
         SLR   @04,@04                                             0766
         CH    @04,GRONGEN(,GROUPPTR)                              0766
         BNL   @RF00766                                            0766
         L     @03,@PC00001+4                                      0766
         L     @03,FDTPTR+28(,@03)                                 0766
         CR    @03,@04                                             0766
         BNH   @RF00766                                            0766
*     DO;                           /*                       @Y30LB33*/
*       RVVEXPIR=EXPIRVAL;          /* SET EXPIR DATE        @Y30LB33*/
         L     @04,EXPIRVAL(,@03)                                  0768
         STH   @04,RVVEXPIR(,RVVIPTR)                              0768
*       RVVSEXP=ON;                 /*                       @Y30LB33*/
         OI    RVVSEXP(RVVIPTR),B'01000000'                        0769
*       RVVACTV=ON;                 /*                       @Y30LB33*/
*       RVVGSVOL=ON;                /*                       @Y30LB33*/
*       RVVEXPDT=ON;                /*                       @Y30LB33*/
         OI    RVVACTV(RVVIPTR),B'10100100'                        0772
*       CALL VOLCHNR;               /* PROCESS THE CHAIN     @Y30LB33*/
         BAL   @14,VOLCHNR                                         0773
*       RESPECIFY                                                  0774
*         RTNREG RSTD;                                             0774
*       TESTRC=RTNREG;                                             0775
         LR    TESTRC,RTNREG                                       0775
*       RESPECIFY                                                  0776
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*       RVVIPTR=ADDR(VOLRVVI);      /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0777
*     END;                          /*                       @Y30LB33*/
*   MYCODE=TESTRC;                  /* SAVE RETURN CODE      @Y30LB33*/
@RF00766 LR    MYCODE,TESTRC                                       0779
*                                                                  0780
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT THE SUMMARY OF THE VOLUMES IN THE               @Y30LB33*/
*   /* GROUP BY PASSING THE VOLUME TOTAL INDICATOR           @Y30LB33*/
*   /* TO THE SUMMARIZER                                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0780
*   SUMMASK=GRPVOLSM;               /*                       @Y30LB33*/
         LA    SUMMASK,2                                           0780
*   CALL SUMRY;                     /*                       @Y30LB33*/
*                                                                  0781
         BAL   @14,SUMRY                                           0781
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH A CODE OF 16 OR ZERO                      @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0782
*   IF MYCODE<16 THEN                                              0782
         C     MYCODE,@CF00507                                     0782
         BNL   @RF00782                                            0782
*     MYCODE=0;                     /*                       @Y30LB33*/
         SLR   MYCODE,MYCODE                                       0783
*   RETURN CODE(MYCODE);            /*                       @Y30LB33*/
@RF00782 LR    @15,MYCODE                                          0784
@EL00007 DS    0H                                                  0784
@EF00007 DS    0H                                                  0784
@ER00007 L     @14,@SA00007                                        0784
         BR    @14                                                 0784
*   END CHNSEL;                     /*                       @Y30LB33*/
*                                                                  0786
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VOLCHNR                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - THIS ROUTINE PASSES TO THE VOLUME          @Y30LB33*/
*   /* PROCESSOR THE REQUEST BLOCK TO READ VOLUMES           @Y30LB33*/
*   /* IN A CHAIN. THE REQUEST BLOCK CONTAINS THE            @Y30LB33*/
*   /* FIRST VOLUME TO READ. AFTER THE FIRST                 @Y30LB33*/
*   /* READ, THIS ROUTINE PLACES IN THE REQUEST              @Y30LB33*/
*   /* BLOCK THE NEXT VOLUME SERIAL IN THE CHAIN             @Y30LB33*/
*   /* THAT IS RETRIEVED FROM THE LAST RECORD                @Y30LB33*/
*   /* THAT WAS READ                                         @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - READ REQUEST BLOCK                            @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE AND LASTCOND OF ZERO FOR         @Y30LB33*/
*   /* NORMAL PROCESSING. RETURN CODE OF 16 AND              @Y30LB33*/
*   /* LASTCOND OF 8 FOR TERMINATION ERROR.                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0786
*VOLCHNR:                                                          0786
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
VOLCHNR  ST    @14,@SA00008                                        0786
*   OLDERID2=NEWERID2;                                             0787
         L     @04,@PC00001                                        0787
         L     @04,GDTTR2(,@04)                                    0787
         MVC   @TS00001(95),NEWERID2(@04)                          0787
         MVC   OLDERID2(95,@04),@TS00001                           0787
*   NEWID2='LVHA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02482                              0788
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0789
         SLR   TESTRC,TESTRC                                       0789
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS THE CHAIN UNTIL THE END OF THE CHAIN          @Y30LB33*/
*   /* OR AN ERROR OCCURS READING A RECORD.                  @Y30LB33*/
*   /* EACH CALL TO THE VOLUME PROCESSOR IS MADE WITH THE    @Y30LB33*/
*   /* READ REQUEST BLOCK AND A NEW VOLUME SERIAL.           @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0790
*   DO WHILE(TESTRC=0);             /*                       @Y30LB33*/
         B     @DE00790                                            0790
@DL00790 DS    0H                                                  0791
*     CALL VOLPROC;                 /*                       @Y30LB33*/
         BAL   @14,VOLPROC                                         0791
*     RESPECIFY                                                    0792
*       RTNREG RSTD;                                               0792
*     TESTRC=RTNREG;                                               0793
         LR    TESTRC,RTNREG                                       0793
*     RESPECIFY                                                    0794
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  0794
*     /***************************************************************/
*     /*                                                             */
*     /* GET THE NEXT VOLUME                                 @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0795
*     RVVIPTR=ADDR(VOLRVVI);        /*                       @Y30LB33*/
         LA    RVVIPTR,VOLRVVI                                     0795
*     RVVOLUME=BASNEXTV;            /*                       @Y30LB33*/
         MVC   RVVOLUME(6,RVVIPTR),BASNEXTV(BASEVPTR)              0796
*     RVVSVOL=ON;                   /*                       @Y30LB33*/
*                                                                  0797
         OI    RVVSVOL(RVVIPTR),B'00000001'                        0797
*     /***************************************************************/
*     /*                                                             */
*     /* TEST FOR LAST VOLUME IN CHAIN AND END               @Y30LB33*/
*     /* THE LOOP IF IT IS THE LAST                          @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0798
*     IF BASLAST=ON THEN                                           0798
         TM    BASLAST(BASEVPTR),B'00001000'                       0798
         BNO   @RF00798                                            0798
*       TESTRC=MAX(TESTRC,2);       /*                       @Y30LB33*/
         LA    @04,2                                               0799
         CR    TESTRC,@04                                          0799
         BNL   *+6
         LR    TESTRC,@04                                          0799
*   END;                            /*                       @Y30LB33*/
*                                                                  0800
@RF00798 DS    0H                                                  0800
@DE00790 LTR   TESTRC,TESTRC                                       0800
         BZ    @DL00790                                            0800
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FOR NEXT CHAIN READ SEQUENCE                   @YM02864*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0801
*   RVVOLUME=GROFSN;                /*                       @YM02864*/
*                                                                  0801
         MVC   RVVOLUME(6,RVVIPTR),GROFSN(GROUPPTR)                0801
*   /*****************************************************************/
*   /*                                                               */
*   /* SET RETURN CODE TO ZERO OR 16                         @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0802
*   IF TESTRC<16 THEN                                              0802
         C     TESTRC,@CF00507                                     0802
         BNL   @RF00802                                            0802
*     TESTRC=0;                     /*                       @Y30LB33*/
         SLR   TESTRC,TESTRC                                       0803
*   RETURN CODE(TESTRC);            /*                       @Y30LB33*/
@RF00802 LR    @15,TESTRC                                          0804
@EL00008 DS    0H                                                  0804
@EF00008 DS    0H                                                  0804
@ER00008 L     @14,@SA00008                                        0804
         BR    @14                                                 0804
*   END VOLCHNR;                    /*                       @Y30LB33*/
*                                                                  0806
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VOLPROC                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - CONTROLS READING AND PRINTING OF A         @Y30LB33*/
*   /* VOLUME AND ITS COPIES                                 @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - READ REQUEST BLOCK AND THE FDTTBL             @Y30LB33*/
*   /* READVVI FLAGS - RVVALL OR RVVBPLHD                    @ZDR2056*/
*   /* SET IN ALLSEQ                                         @ZDR2056*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE AND LASTCOND OF ZERO FOR         @Y30LB33*/
*   /* NORMAL PROCESSING. RETURN CODE OF 4 AND               @Y30LB33*/
*   /* LASTCOND OF ZERO FOR END OF RECORD CHAIN              @Y30LB33*/
*   /* OR RECORD NOT FOUND. RETURN CODE OF 16 AND            @Y30LB33*/
*   /* LASTCOND OF 8 FOR A TERMINATION ERROR                 @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0806
*VOLPROC:                                                          0806
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
VOLPROC  ST    @14,@SA00009                                        0806
*   OLDERID2=NEWERID2;                                             0807
         L     @04,@PC00001                                        0807
         L     @04,GDTTR2(,@04)                                    0807
         MVC   @TS00001(95),NEWERID2(@04)                          0807
         MVC   OLDERID2(95,@04),@TS00001                           0807
*   NEWID2='LVIA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02486                              0808
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0809
         SLR   TESTRC,TESTRC                                       0809
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE VOLUME READER TO READ THE VOLUME RECORD      @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0810
*   CALL VOLRDR;                    /*                       @Y30LB33*/
         BAL   @14,VOLRDR                                          0810
*   RESPECIFY                                                      0811
*     RTNREG RSTD;                                                 0811
*   TESTRC=RTNREG;                                                 0812
         LR    TESTRC,RTNREG                                       0812
*   RESPECIFY                                                      0813
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  0813
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE RECORD WAS READ WITHOUT ERROR, CALL THE        @Y30LB33*/
*   /* VOLUME FORMATTER TO SET UP THE RECORD FIELDS FOR PRINTING AND */
*   /* CALL THE PRINTER TO PRINT THE RECORD.                 @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0814
*   IF TESTRC=0 THEN                /*                       @ZDR2056*/
*                                                                  0814
         SLR   @04,@04                                             0814
         CR    TESTRC,@04                                          0814
         BNE   @RF00814                                            0814
*     /***************************************************************/
*     /*                                                             */
*     /* IF CALLED FROM ALLVPROC AND THIS IS A               @ZDR2056*/
*     /* BASE VOLUME RECORD WHEN ONLY                        @ZDR2056*/
*     /* PLACE HOLDER RECORDS ARE TO BE PRINTED,             @ZDR2056*/
*     /* THEN DO NOT FORMAT AND PRINT THE RECORD.            @ZDR2056*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0815
*     IF ALLVCALL=ON&BASHOLD=OFF&ADDR(PLHD)^=NULLPTR/*       @ZDR2056*/
*       THEN                                                       0815
         TM    ALLVCALL,B'00100000'                                0815
         BNO   @RF00815                                            0815
         TM    BASHOLD(BASEVPTR),B'10000000'                       0815
         BNZ   @RF00815                                            0815
         L     @03,@PC00001+4                                      0815
         C     @04,FDTPTR+92(,@03)                                 0815
         BNE   @RT00815                                            0815
*       ;                           /*                       @ZDR2056*/
*     ELSE                          /*                       @ZDR2056*/
*       DO;                         /*                       @ZDR2056*/
@RF00815 DS    0H                                                  0818
*         CALL VOLFMTR;             /* FORMAT THE DATA       @Y30LB33*/
         BAL   @14,VOLFMTR                                         0818
*         CALL VOLPRNT;             /* PRINT THE VOLUME      @Y30LB33*/
*                                                                  0819
         BAL   @14,VOLPRNT                                         0819
*         /***********************************************************/
*         /*                                                         */
*         /* TESTRC IS NOW ZERO                              @ZDR2056*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0820
*       END;                        /*                       @ZDR2056*/
*                                                                  0820
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A STATUS REPORT IS REQUESTED WITH A VALID          @ZDR2056*/
*   /* RETURN CODE, CALL THE COPY PROCESSOR TO               @ZDR2056*/
*   /* READ AND PRINT COPY AND/OR COPY PLACE HOLDER          @ZDR2056*/
*   /* VOLUME RECORDS, IF ANY.                               @ZDR2056*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0821
*   IF ADDR(STAT)>0&TESTRC=0 THEN   /*                       @ZDR2056*/
@RT00815 DS    0H                                                  0821
@RF00814 SLR   @04,@04                                             0821
         L     @03,@PC00001+4                                      0821
         C     @04,FDTPTR+52(,@03)                                 0821
         BNL   @RF00821                                            0821
         CR    TESTRC,@04                                          0821
         BNE   @RF00821                                            0821
*     DO;                           /*                       @ZDR2056*/
*       CALL CPYPROC;               /*                       @Y30LB33*/
         BAL   @14,CPYPROC                                         0823
*       RESPECIFY                                                  0824
*         RTNREG RSTD;                                             0824
*       TESTRC=RTNREG;                                             0825
         LR    TESTRC,RTNREG                                       0825
*       RESPECIFY                                                  0826
*         RTNREG UNRSTD;            /*                       @Y30LB33*/
*     END;                          /*                       @Y30LB33*/
*                                                                  0828
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH THE CODE FROM THE CALLED PROCEDURES       @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0828
*   RETURN CODE(TESTRC);            /*                       @Y30LB33*/
@RF00821 LR    @15,TESTRC                                          0828
@EL00009 DS    0H                                                  0828
@EF00009 DS    0H                                                  0828
@ER00009 L     @14,@SA00009                                        0828
         BR    @14                                                 0828
*   END VOLPROC;                    /*                       @Y30LB33*/
*                                                                  0830
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VOLPRNT                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - TO PRINT A VOLUME RECORD WITH RECOVERY     @Y30LB33*/
*   /* BIT STATUS MESSAGES AND THE DUPLICATES                @Y30LB33*/
*   /* HEADING LINE, IF NEEDED.                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - THE FDTTBL, THE SUMMARY TABLE, THE            @Y30LB33*/
*   /* VOLUME RECORD, AND THE PRINT ARGUMENT LIST            @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO, AND AN UPDATED          @Y30LB33*/
*   /* SUMMARY TABLE                                         @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0830
*VOLPRNT:                                                          0830
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
*                                                                  0830
VOLPRNT  ST    @14,@SA00010                                        0830
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL WORK AREAS                                      @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0831
*   DCL                                                            0831
*     LVMYDRG CHAR(20);             /* INTERNAL DARGLIST     @Y30LB33*/
*   OLDERID2=NEWERID2;                                             0832
         L     @04,@PC00001                                        0832
         L     @03,GDTTR2(,@04)                                    0832
         MVC   @TS00001(95),NEWERID2(@03)                          0832
         MVC   OLDERID2(95,@03),@TS00001                           0832
*   NEWID2='LVJA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02495                              0833
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0834
         SLR   TESTRC,TESTRC                                       0834
*   /*****************************************************************/
*   /*                                                               */
*   /* IF WE HAVE A DUPLICATE VOLUME RECORD AND THE          @Y30LB33*/
*   /* DUPLICATE KEYWORD IS UNDEFINED IN THE FDTTBL,         @Y30LB33*/
*   /* AND THIS IS THE FIRST DUPLICATE BEING PROCESSED       @Y30LB33*/
*   /* PRINT THE DUPLICATES HEADING LINE                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0835
*   IF BCDDUP=ON&ADDR(DUP)=0&FRSTDUP=ON/*                    @Y30LB33*/
*     THEN                                                         0835
         L     @03,BCDVPTR                                         0835
         TM    BCDDUP(@03),B'00000100'                             0835
         BNO   @RF00835                                            0835
         L     @03,@PC00001+4                                      0835
         L     @03,FDTPTR+32(,@03)                                 0835
         LTR   @03,@03                                             0835
         BNZ   @RF00835                                            0835
         TM    FRSTDUP,B'10000000'                                 0835
         BNO   @RF00835                                            0835
*     DO;                           /*                       @Y30LB33*/
*       DARGSENT=DUPSLINE;          /*                       @Y30LB33*/
         L     @03,DDSTRU                                          0837
         MVI   DARGSENT(@03),X'01'                                 0837
*       DDSTRU=ADDR(LVMYDRG);       /* BASE INTERNAL         @Y30LB33
*                                      DARGLIST              @Y30LB33*/
         LA    @03,LVMYDRG                                         0838
         ST    @03,DDSTRU                                          0838
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         XC    DARGLIST(20,@03),DARGLIST(@03)                      0839
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@03),@CC02396                            0840
*       DARGSENT=DUPMSGLN;          /*                       @Y30LB33*/
         MVI   DARGSENT(@03),X'11'                                 0841
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
         ST    @04,@AL00001                                        0842
         LA    @03,PRINTME                                         0842
         ST    @03,@AL00001+4                                      0842
         LA    @03,DDSTRU                                          0842
         ST    @03,@AL00001+8                                      0842
         MVI   @AL00001+8,X'80'                                    0842
         L     @15,GDTPRT(,@04)                                    0842
         LA    @01,@AL00001                                        0842
         BALR  @14,@15                                             0842
*     END;                          /*                       @Y30LB33*/
*   DDSTRU=ADDR(LVDRGLST);          /* RESTORE THE DARGLIST  @Y30LB33
*                                      POINTER               @Y30LB33*/
@RF00835 LA    @04,LVDRGLST                                        0844
         ST    @04,DDSTRU                                          0844
*   FRSTDUP=OFF;                    /* TURN OFF FIRST DUP SWITCH   0845
*                                                            @Y30LB33*/
         NI    FRSTDUP,B'01111111'                                 0845
*                                                                  0846
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE THE PRINT COMMAND TO PRINT THE VOLUME           @Y30LB33*/
*   /* DATA                                                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0846
*   CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*                  @Y30LB33*/
         L     @04,@PC00001                                        0846
         ST    @04,@AL00001                                        0846
         LA    @03,PRINTME                                         0846
         ST    @03,@AL00001+4                                      0846
         LA    @03,DDSTRU                                          0846
         ST    @03,@AL00001+8                                      0846
         MVI   @AL00001+8,X'80'                                    0846
         L     @15,GDTPRT(,@04)                                    0846
         LA    @01,@AL00001                                        0846
         BALR  @14,@15                                             0846
*                                                                  0847
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR AN INCOMPLETE COPY, INCOMPLETE               @Y30LB33*/
*   /* CREATE, OR LABEL MISMATCH, AND PRINT APPROPRIATE      @Y30LB33*/
*   /* DATA LINES IF THE FLAGS ARE ON                        @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0847
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Y30LB33*/
         L     @04,DDSTRU                                          0847
         XC    DARGLIST(20,@04),DARGLIST(@04)                      0847
*   DARGSMOD=MODLV0;                /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@04),@CC02396                            0848
*   IF BASIVCRE=ON THEN                                            0849
         TM    BASIVCRE(BASEVPTR),B'10000000'                      0849
         BNO   @RF00849                                            0849
*     DO;                           /* INCOMPLETE CREATE     @Y30LB33*/
*       DARGSENT=INCREMSG;          /*                       @Y30LB33*/
         MVI   DARGSENT(@04),X'0B'                                 0851
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
         L     @04,@PC00001                                        0852
         ST    @04,@AL00001                                        0852
         LA    @03,PRINTME                                         0852
         ST    @03,@AL00001+4                                      0852
         LA    @03,DDSTRU                                          0852
         ST    @03,@AL00001+8                                      0852
         MVI   @AL00001+8,X'80'                                    0852
         L     @15,GDTPRT(,@04)                                    0852
         LA    @01,@AL00001                                        0852
         BALR  @14,@15                                             0852
*     END;                          /*                       @Y30LB33*/
*   IF BASIVCPY=ON THEN                                            0854
@RF00849 TM    BASIVCPY(BASEVPTR),B'01000000'                      0854
         BNO   @RF00854                                            0854
*     DO;                           /* INCOMPLETE COPY       @Y30LB33*/
*       DARGSENT=INCPYMSG;          /*                       @Y30LB33*/
         L     @04,DDSTRU                                          0856
         MVI   DARGSENT(@04),X'0A'                                 0856
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
         L     @04,@PC00001                                        0857
         ST    @04,@AL00001                                        0857
         LA    @03,PRINTME                                         0857
         ST    @03,@AL00001+4                                      0857
         LA    @03,DDSTRU                                          0857
         ST    @03,@AL00001+8                                      0857
         MVI   @AL00001+8,X'80'                                    0857
         L     @15,GDTPRT(,@04)                                    0857
         LA    @01,@AL00001                                        0857
         BALR  @14,@15                                             0857
*     END;                          /*                       @Y30LB33*/
*   IF BASVSMIS=ON THEN                                            0859
@RF00854 TM    BASVSMIS(BASEVPTR),B'00100000'                      0859
         BNO   @RF00859                                            0859
*     DO;                           /* LABEL MISMATCH        @Y30LB33*/
*       DARGSENT=LBMISMSG;          /*                       @Y30LB33*/
         L     @04,DDSTRU                                          0861
         MVI   DARGSENT(@04),X'0C'                                 0861
*       DARGDBP=ADDR(BASRECOV);     /*                       @Y30LB33*/
         LA    @03,BASRECOV(,BASEVPTR)                             0862
         ST    @03,DARGDBP(,@04)                                   0862
*       DARGILP=6;                  /*                       @Y30LB33*/
         MVC   DARGILP(2,@04),@CH00159                             0863
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
         L     @04,@PC00001                                        0864
         ST    @04,@AL00001                                        0864
         LA    @03,PRINTME                                         0864
         ST    @03,@AL00001+4                                      0864
         LA    @03,DDSTRU                                          0864
         ST    @03,@AL00001+8                                      0864
         MVI   @AL00001+8,X'80'                                    0864
         L     @15,GDTPRT(,@04)                                    0864
         LA    @01,@AL00001                                        0864
         BALR  @14,@15                                             0864
*     END;                          /*                       @Y30LB33*/
*                                                                  0866
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR VOLUME TYPE AND ADD TO THE PROPER FIELD      @Y30LB33*/
*   /* IN THE SUMMARY TABLE                                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0866
*   IF BCDDUP=ON THEN                                              0866
@RF00859 L     @04,BCDVPTR                                         0866
         TM    BCDDUP(@04),B'00000100'                             0866
         BNO   @RF00866                                            0866
*     SUMDUP=SUMDUP+1;              /*                       @Y30LB33*/
         LA    @04,1                                               0867
         AL    @04,SUMDUP                                          0867
         ST    @04,SUMDUP                                          0867
*   ELSE                                                           0868
*     DO;                           /*                       @Y30LB33*/
         B     @RC00866                                            0868
@RF00866 DS    0H                                                  0869
*       IF BASHOLD=OFF THEN         /*                       @ZDR2056*/
         TM    BASHOLD(BASEVPTR),B'10000000'                       0869
         BNZ   @RF00869                                            0869
*         SUMVOL=SUMVOL+1;          /* BUMP VOLUME COUNT     @YM04312*/
         LA    @04,1                                               0870
         AL    @04,SUMVOL                                          0870
         ST    @04,SUMVOL                                          0870
*       IF BASINAC=ON THEN                                         0871
@RF00869 TM    BASINAC(BASEVPTR),B'00000100'                       0871
         BNO   @RF00871                                            0871
*         SUMIVOL=SUMIVOL+1;        /*                       @Y30LB33*/
         LA    @04,1                                               0872
         AL    @04,SUMIVOL                                         0872
         ST    @04,SUMIVOL                                         0872
*       ELSE                                                       0873
*         DO;                       /*                       @Y30LB33*/
         B     @RC00871                                            0873
@RF00871 DS    0H                                                  0874
*           IF BASGENUS=ON THEN                                    0874
         TM    BASGENUS(BASEVPTR),B'00010000'                      0874
         BNO   @RF00874                                            0874
*             SUMGVOL=SUMGVOL+1;    /*                       @Y30LB33*/
         LA    @04,1                                               0875
         AL    @04,SUMGVOL                                         0875
         ST    @04,SUMGVOL                                         0875
*           IF BASRSTD=ON THEN                                     0876
@RF00874 TM    BASRSTD(BASEVPTR),B'00001000'                       0876
         BNO   @RF00876                                            0876
*             SUMRVOL=SUMRVOL+1;    /*                       @Y30LB33*/
         LA    @04,1                                               0877
         AL    @04,SUMRVOL                                         0877
         ST    @04,SUMRVOL                                         0877
*         END;                      /*                       @Y30LB33*/
@RF00876 DS    0H                                                  0879
*     END;                          /*                       @Y30LB33*/
@RC00871 DS    0H                                                  0880
*   MAINCTR=MAINCTR+1;              /*                       @Y30LB33*/
*                                                                  0880
@RC00866 LA    @04,1                                               0880
         AL    @04,MAINCTR                                         0880
         ST    @04,MAINCTR                                         0880
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH A ZERO CODE                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0881
*   RETURN CODE(0);                 /*                       @Y30LB33*/
         SLR   @15,@15                                             0881
@EL00010 DS    0H                                                  0881
@EF00010 DS    0H                                                  0881
@ER00010 L     @14,@SA00010                                        0881
         BR    @14                                                 0881
*   END VOLPRNT;                    /*                       @Y30LB33*/
*                                                                  0883
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VOLRDR                               @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - TO CALL DIRECTRD TO READ A VOLUME OR A     @ZA27752*/
*   /* DUPLICATE VOLUME RECORD USING THE REQUEST             @Y30LB33*/
*   /* BLOCK PASSED AS INPUT, AND TEST FOR ERRORS            @Y30LB33*/
*   /* FROM THE READ. IF ERRORS OCCUR, PRINT THE             @Y30LB33*/
*   /* APPROPRIATE MESSAGES AND SET THE RETURN               @Y30LB33*/
*   /* AND CONDITION CODES TO INDICATE THE                   @Y30LB33*/
*   /* SEVERITY OF THE ERROR.                                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - COMPLETED REQUEST BLOCK TO READ THE RECORD    @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO AND LASTCOND OF ZERO     @Y30LB33*/
*   /* FOR NORMAL PROCESSING. RETURN CODE OF 4 AND           @Y30LB33*/
*   /* LASTCOND OF 8 FOR VOLUME-NOT-FOUND ON A               @Y30LB33*/
*   /* READ-DIRECT. RETURN CODE OF 4 AND LASTCOND            @Y30LB33*/
*   /* OF ZERO FOR END-OF-RECORDS OR                         @Y30LB33*/
*   /* END-OF-CHAIN. RETURN CODE OF 16 AND LASTCOND          @Y30LB33*/
*   /* OF 8 FOR TERMINATING ERROR.                           @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0883
*VOLRDR:                                                           0883
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
VOLRDR   ST    @14,@SA00011                                        0883
*   OLDERID2=NEWERID2;                                             0884
         L     @04,@PC00001                                        0884
         L     @03,GDTTR2(,@04)                                    0884
         MVC   @TS00001(95),NEWERID2(@03)                          0884
         MVC   OLDERID2(95,@03),@TS00001                           0884
*   NEWID2='LVKA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@03),@CC02499                              0885
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  0886
         SLR   TESTRC,TESTRC                                       0886
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL DIRECTRD WITH THE IEZRVVI REQUEST BLOCK TO       @ZA27752*/
*   /* READ THE VOLUME RECORD. THE REQUEST BLOCK HAS         @Y30LB33*/
*   /* BEEN FILLED IN BY PREVIOUS PROCEDURES                 @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0887
*   IF GDTDBG=NULLPTR THEN                                         0887
         L     @06,GDTDBG(,@04)                                    0887
         LTR   @06,@06                                             0887
         BZ    @RT00887                                            0887
*     ;                                                            0888
*   ELSE                                                           0889
*     DO;                                                          0889
*       DMPINDEX=ADDR(DUMPAREA);    /*                       @Y30LB33*/
         LA    DMPINDEX,DUMPAREA                                   0890
*       DMPITMNM='RVVI';                                           0891
         MVI   DMPITMNM+4(DMPINDEX),C' '                           0891
         MVC   DMPITMNM+5(3,DMPINDEX),DMPITMNM+4(DMPINDEX)         0891
         MVC   DMPITMNM(4,DMPINDEX),@CC02500                       0891
*       DMPITMPT=ADDR(RVVI);                                       0892
         ST    RVVIPTR,DMPITMPT(,DMPINDEX)                         0892
*       DMPITMLN=RVVLEN;                                           0893
         LH    @06,RVVLEN                                          0893
         STH   @06,DMPITMLN(,DMPINDEX)                             0893
*       DMPITMTP='H';                                              0894
         MVI   DMPITMTP(DMPINDEX),C'H'                             0894
*       DMPINDEX=DMPINDEX+DMPELEMT;                                0895
*                                                                  0895
         AL    DMPINDEX,@CF00507                                   0895
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0896
*       DMPTRM=DMPTRMVL;                                           0896
         MVI   DMPTRM(DMPINDEX),X'FF'                              0896
*     END;                          /*                       @Y30LB33*/
*   IF GDTDBG=NULLPTR THEN                                         0898
@RT00887 L     @06,@PC00001                                        0898
         L     @06,GDTDBG(,@06)                                    0898
         LTR   @06,@06                                             0898
         BZ    @RT00898                                            0898
*     ;                                                            0899
*   ELSE                                                           0900
*     CALL IDCDB010(GDTTBL,'LVKB',DUMPADDR);/*               @Y30LB33*/
         L     @06,@PC00001                                        0900
         ST    @06,@AL00001                                        0900
         LA    @04,@CC02502                                        0900
         ST    @04,@AL00001+4                                      0900
         LA    @04,DUMPADDR                                        0900
         ST    @04,@AL00001+8                                      0900
         MVI   @AL00001+8,X'80'                                    0900
         L     @15,GDTDBG(,@06)                                    0900
         LA    @01,@AL00001                                        0900
         BALR  @14,@15                                             0900
*   CALL DIRECTRD;                  /*                       @ZA27752*/
@RT00898 BAL   @14,DIRECTRD                                        0901
*   RESPECIFY                                                      0902
*     RTNREG RSTD;                                                 0902
*   TESTRC=RTNREG;                                                 0903
         LR    TESTRC,RTNREG                                       0903
*   RESPECIFY                                                      0904
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  0905
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE RETURN CODE AND RETURN REASONS               @Y30LB33*/
*   /* AND PRINT APPROPRIATE MESSAGES                        @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0905
*   SETRC=0;                        /* INITIALIZE THE CODE HOLD AREA
*                                                            @Y30LB33*/
         SLR   @04,@04                                             0905
         STH   @04,SETRC                                           0905
*   IF TESTRC=4 THEN                                               0906
         C     TESTRC,@CF00043                                     0906
         BNE   @RF00906                                            0906
*     DO;                           /* TEST FOR PROBLEM      @Y30LB33*/
*                                                                  0907
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE ARE READING DIRECT AND NOT READING A        @Y30LB33*/
*       /* DUPLICATE AND WE GET A NOT-FOUND CONDITION, CALL  @Y30LB33*/
*       /* SSCMSG TO PRINT THE REASON , PRINT IDC2080I TO    @Y30LB33*/
*       /* INDICATE VOLUME-NOT-FOUND, SET THE RETURN         @Y30LB33*/
*       /* CODE TO 4 AND LASTCOND TO 8                       @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0908
*       IF RVVRDR=ON&REASON=NOTFOUND/*                       @Y30LB33*/
*           &RVVDUPRC=OFF THEN                                     0908
         TM    RVVRDR(RVVIPTR),B'10000000'                         0908
         BNO   @RF00908                                            0908
         CLC   REASON(4),@CF02312                                  0908
         BNE   @RF00908                                            0908
         TM    RVVDUPRC(RVVIPTR),B'00010000'                       0908
         BNZ   @RF00908                                            0908
*         DO;                       /*                       @Y30LB33*/
*           CALL SSCMSG(REASON);    /*                       @Y30LB33*/
         LA    @06,REASON                                          0910
         ST    @06,@AL00001                                        0910
         LA    @01,@AL00001                                        0910
         BAL   @14,SSCMSG                                          0910
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @Y30LB33*/
         L     @06,DDSTRU                                          0911
         XC    DARGLIST(20,@06),DARGLIST(@06)                      0911
*           DARGDBP=ADDR(RVVOLUME); /*                       @Y30LB33*/
         LA    @04,RVVOLUME(,RVVIPTR)                              0912
         ST    @04,DARGDBP(,@06)                                   0912
*           DARGILP=LENGTH(RVVOLUME);/*                      @Y30LB33*/
         MVC   DARGILP(2,@06),@CH00159                             0913
*           DARGSMOD=MODCMN;        /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@06),@CC02400                            0914
*           DARGSENT=MSG2080I;      /*                       @Y30LB33*/
         MVI   DARGSENT(@06),X'1A'                                 0915
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Y30LB33*/
         L     @06,@PC00001                                        0916
         ST    @06,@AL00001                                        0916
         LA    @04,@CF00117                                        0916
         ST    @04,@AL00001+4                                      0916
         LA    @04,DDSTRU                                          0916
         ST    @04,@AL00001+8                                      0916
         MVI   @AL00001+8,X'80'                                    0916
         L     @15,GDTPRT(,@06)                                    0916
         LA    @01,@AL00001                                        0916
         BALR  @14,@15                                             0916
*           SETRC=4;                /*                       @Y30LB33*/
         MVC   SETRC(2),@CH00043                                   0917
*           LASTCOND=LASTCC08;      /*                       @Y30LB33*/
         L     @06,@PC00001+8                                      0918
         MVC   LASTCOND(2,@06),@CH00035                            0918
*         END;                      /*                       @Y30LB33*/
*                                                                  0919
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE ARE READING DIRECT AND READING              @Y30LB33*/
*       /* DUPLICATES AND WE GET A NOT-FOUND                 @Y30LB33*/
*       /* CONDITION, SET THE RETURN CODE TO 4               @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0920
*       IF RVVRDR=ON&RVVDUPRC=ON&   /*                       @Y30LB33*/
*           REASON=NOTFOUND THEN                                   0920
@RF00908 TM    RVVRDR(RVVIPTR),B'10000000'                         0920
         BNO   @RF00920                                            0920
         TM    RVVDUPRC(RVVIPTR),B'00010000'                       0920
         BNO   @RF00920                                            0920
         CLC   REASON(4),@CF02312                                  0920
         BNE   @RF00920                                            0920
*         SETRC=4;                  /*                       @Y30LB33*/
*                                                                  0921
         MVC   SETRC(2),@CH00043                                   0921
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE READ WAS READ-DIRECT AND THE REASON        @Y30LB33*/
*       /* IS DOESN'T-MEET-TESTS, THEN SET RETURN CODE       @Y30LB33*/
*       /* TO 4                                              @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0922
*       IF RVVRDR=ON&REASON=TSTNOTMT THEN/*                  @Y30LB33*/
@RF00920 TM    RVVRDR(RVVIPTR),B'10000000'                         0922
         BNO   @RF00922                                            0922
         CLC   REASON(4),@CF02314                                  0922
         BNE   @RF00922                                            0922
*         SETRC=4;                  /*                       @Y30LB33*/
*                                                                  0923
         MVC   SETRC(2),@CH00043                                   0923
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE READ WAS READ-NEXT AND THE REASON WAS      @Y30LB33*/
*       /* DOESN'T-MEET-TESTS OR NOT-FOUND, THEN SET         @Y30LB33*/
*       /* RETURN CODE TO 4                                  @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0924
*       IF RVVRDNR=ON&(REASON=TSTNOTMT×/*                    @Y30LB33*/
*           REASON=NOTFOUND) THEN                                  0924
@RF00922 TM    RVVRDNR(RVVIPTR),B'01000000'                        0924
         BNO   @RF00924                                            0924
         L     @06,REASON                                          0924
         C     @06,@CF02314                                        0924
         BE    @RT00924                                            0924
         C     @06,@CF02312                                        0924
         BNE   @RF00924                                            0924
@RT00924 DS    0H                                                  0925
*         SETRC=4;                  /*                       @Y30LB33*/
*                                                                  0925
         MVC   SETRC(2),@CH00043                                   0925
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE READ WAS READ-CHAIN AND THE REASON         @Y30LB33*/
*       /* WAS DIDN'T-FIND-CHAIN-ENTRY OR BREAK-IN-CHAIN     @Y30LB33*/
*       /* AND THIS WAS NOT THE FIRST VOLUME READ,           @ZA00683*/
*       /* THEN CALL SSCMSG TO PRINT THE REASON,             @ZA00683*/
*       /* PRINT THE CHAIN-BREAK MESSAGE, SET RETURN         @ZA00683*/
*       /* CODE TO 4 AND THE LASTCOND TO 8.                  @ZA00683*/
*       /* IF THE FIRST VOLUME IS NOT FOUND, IT IS SIMPLY    @ZA00683*/
*       /* THE CASE THAT NO NON-GROUPED VOLUMES EXIST        @ZA00683*/
*       /* SO WE PRINT MESSAGE IDC0832I.                     @ZA00683*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0926
*       IF RVVRDCH=ON&(REASON=NOTFOUND×/*                    #Y30LB33*/
*           REASON=BADCHAIN) THEN   /*                       @ZA00683*/
@RF00924 TM    RVVRDCH(RVVIPTR),B'00100000'                        0926
         BNO   @RF00926                                            0926
         L     @06,REASON                                          0926
         C     @06,@CF02312                                        0926
         BE    @RT00926                                            0926
         C     @06,@CF02316                                        0926
         BNE   @RF00926                                            0926
@RT00926 DS    0H                                                  0927
*         DO;                       /*                       @ZA00683*/
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @ZA00683*/
         L     @06,DDSTRU                                          0928
         XC    DARGLIST(20,@06),DARGLIST(@06)                      0928
*           DARGSMOD=MODLV0;        /*                       @ZA00683*/
         MVC   DARGSMOD(3,@06),@CC02396                            0929
*           IF RVVSVOL=ON THEN                                     0930
         TM    RVVSVOL(RVVIPTR),B'00000001'                        0930
         BNO   @RF00930                                            0930
*             DO;                   /*                       @ZA00683*/
*               CALL SSCMSG(REASON);/*                       @ZA00683*/
         LA    @06,REASON                                          0932
         ST    @06,@AL00001                                        0932
         LA    @01,@AL00001                                        0932
         BAL   @14,SSCMSG                                          0932
*               DARGSENT=MSG2831I;  /*                       @ZA00683*/
         L     @06,DDSTRU                                          0933
         MVI   DARGSENT(@06),X'1F'                                 0933
*               LASTCOND=LASTCC08;  /*                       @ZA00683*/
         L     @06,@PC00001+8                                      0934
         MVC   LASTCOND(2,@06),@CH00035                            0934
*             END;                  /*                       @ZA00683*/
*           ELSE                                                   0936
*             DARGSENT=MSG0832I;    /*                       @ZA00683*/
         B     @RC00930                                            0936
@RF00930 L     @06,DDSTRU                                          0936
         MVI   DARGSENT(@06),X'20'                                 0936
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          #Y30LB33*/
@RC00930 L     @06,@PC00001                                        0937
         ST    @06,@AL00001                                        0937
         LA    @04,@CF00117                                        0937
         ST    @04,@AL00001+4                                      0937
         LA    @04,DDSTRU                                          0937
         ST    @04,@AL00001+8                                      0937
         MVI   @AL00001+8,X'80'                                    0937
         L     @15,GDTPRT(,@06)                                    0937
         LA    @01,@AL00001                                        0937
         BALR  @14,@15                                             0937
*           SETRC=4;                /*                       #Y30LB33*/
         MVC   SETRC(2),@CH00043                                   0938
*         END;                      /*                       #Y30LB33*/
*                                                                  0939
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE READ WAS READ-CHAIN AND THE REASON WAS     #Y30LB33*/
*       /* DOESN'T-MEET-TESTS THEN SET RETURN CODE TO 4      #Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0940
*       IF RVVRDCH=ON&REASON=TSTNOTMT THEN/*                 #Y30LB33*/
@RF00926 TM    RVVRDCH(RVVIPTR),B'00100000'                        0940
         BNO   @RF00940                                            0940
         CLC   REASON(4),@CF02314                                  0940
         BNE   @RF00940                                            0940
*         SETRC=4;                  /*                       #Y30LB33*/
*                                                                  0941
         MVC   SETRC(2),@CH00043                                   0941
*       /*************************************************************/
*       /*                                                           */
*       /* OTHERWISE, CALL SSCMSG TO PRINT THE               #Y30LB33*/
*       /* REASON RETURNED AND THEN                          #Y30LB33*/
*       /* SET THE RETURN CODE TO 16 TO INDICATE             #Y30LB33*/
*       /* A TERMINATION ERROR                               #Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0942
*       IF SETRC=0 THEN                                            0942
@RF00940 LH    @06,SETRC                                           0942
         LTR   @06,@06                                             0942
         BNZ   @RF00942                                            0942
*         DO;                       /*                       #Y30LB33*/
*           LASTCOND=LASTCC08;      /*                       #Y30LB33*/
         L     @06,@PC00001+8                                      0944
         MVC   LASTCOND(2,@06),@CH00035                            0944
*           SETRC=16;               /*                       #Y30LB33*/
         MVC   SETRC(2),@CH00507                                   0945
*           CALL SSCMSG(REASON);    /*                       #Y30LB33*/
         LA    @06,REASON                                          0946
         ST    @06,@AL00001                                        0946
         LA    @01,@AL00001                                        0946
         BAL   @14,SSCMSG                                          0946
*         END;                      /*                       #Y30LB33*/
*     END;                          /*                       #Y30LB33*/
*                                                                  0948
@RF00942 DS    0H                                                  0949
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH THE CODE SET ABOVE                        #Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0949
*   RETURN CODE(SETRC);             /*                       @Y30LB33*/
@RF00906 LH    @15,SETRC                                           0949
@EL00011 DS    0H                                                  0949
@EF00011 DS    0H                                                  0949
@ER00011 L     @14,@SA00011                                        0949
         BR    @14                                                 0949
*   END VOLRDR;                     /*                       @Y30LB33*/
*                                                                  0951
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CPYPROC                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - READ AND PRINT COPIES OF A VOLUME          @Y30LB33*/
*   /* TEST FOR ERRORS FROM THE READ, AND CALL               @Y30LB33*/
*   /* SSCMSG TO PRINT THE REASON FOR THE                    @Y30LB33*/
*   /* ERRORS                                                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - THE VOLUME RECORD                             @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE AND LAST COND OF ZERO FOR        @Y30LB33*/
*   /* NORMAL PROCESSING. RETURN CODE OF 16 AND              @Y30LB33*/
*   /* LASTCOND OF 8 FOR A TERMINATION ERROR                 @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0951
*CPYPROC:                                                          0951
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
*                                                                  0951
CPYPROC  ST    @14,@SA00012                                        0951
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL WORK AREAS                                      @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0952
*   DCL                                                            0952
*     VOLRPTR PTR(31);              /* REQ BLOCK ADDR HOLDER @Y30LB33*/
*   OLDERID2=NEWERID2;                                             0953
         L     @04,@PC00001                                        0953
         L     @04,GDTTR2(,@04)                                    0953
         MVC   @TS00001(95),NEWERID2(@04)                          0953
         MVC   OLDERID2(95,@04),@TS00001                           0953
*   NEWID2='LVLA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02509                              0954
*   TESTRC=0;                       /*                       @Y30LB33*/
         SLR   TESTRC,TESTRC                                       0955
*   SETRC=0;                        /*                       @Y30LB33*/
*                                                                  0956
         SLR   @04,@04                                             0956
         STH   @04,SETRC                                           0956
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN THE COPY RECORD READ REQUEST BLOCK            @Y30LB33*/
*   /* USING THE DATA IN THE VOLUME REQUEST BLOCK            @Y30LB33*/
*   /* AND SET UP TO READ THE FIRST COPY                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0957
*   CPYTRNSQ=1;                     /* SET THE COPY SEQUENCE NUMBER
*                                                            @Y30LB33*/
         MVC   CPYTRNSQ(2),@CH00221                                0957
*   CPYTRNDT=CPYTRNDT&&CPYTRNDT;    /* CLEAR DATE            @Y30LB33*/
         XC    CPYTRNDT(4),CPYTRNDT                                0958
*   VOLRPTR=RVVIPTR;                /*                       @Y30LB33*/
         LR    VOLRPTR,RVVIPTR                                     0959
*   RVVIPTR=ADDR(CPYRVVI);          /*                       @Y30LB33*/
         LA    RVVIPTR,CPYRVVI                                     0960
*   CPYRVVI=''B;                    /*                       @Y30LB33*/
         XC    CPYRVVI(68),CPYRVVI                                 0961
*   RVVLNGTH=RVVLEN;                /*                       @Y30LB33*/
         LH    @03,RVVLEN                                          0962
         ST    @03,RVVLNGTH(,RVVIPTR)                              0962
*   RVVCODE=RVVOP;                  /*                       @Y30LB33*/
         MVI   RVVCODE(RVVIPTR),X'87'                              0963
*   RVVRTBUF=ADDR(CPYRCDBF);        /*                       @Y30LB33*/
         LA    @03,CPYRCDBF                                        0964
         ST    @03,RVVRTBUF(,RVVIPTR)                              0964
*   RVVBUFLN=LENGTH(COPYV);         /*                       @Y30LB33*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02619                        0965
*   RVVOLUME=BASSERNO;              /*                       @ZM01007*/
         MVC   RVVOLUME(6,RVVIPTR),BASSERNO(BASEVPTR)              0966
*   RVVSVOL=ON;                     /*                       @Y30LB33*/
         OI    RVVSVOL(RVVIPTR),B'00000001'                        0967
*   RVVCPYID=0;                     /*                       @Y30LB33*/
         MVI   RVVCPYID(RVVIPTR),X'00'                             0968
*   RVVRDNR=ON;                     /*                       @Y30LB33*/
         OI    RVVRDNR(RVVIPTR),B'01000000'                        0969
*   RVVCPYRC=ON;                    /*                       @Y30LB33*/
         OI    RVVCPYRC(RVVIPTR),B'00100000'                       0970
*   RVVSCPY=ON;                     /*                       @Y30LB33*/
*                                                                  0971
         OI    RVVSCPY(RVVIPTR),B'00000100'                        0971
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR PLACE HOLDERS                               @ZDR2056*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0972
*   IF ADDR(PLHD)^=NULLPTR THEN     /*                       @ZDR2056*/
         L     @03,@PC00001+4                                      0972
         C     @04,FDTPTR+92(,@03)                                 0972
         BE    @RF00972                                            0972
*     RVVCPLHD=ON;                  /*                       @ZDR2056*/
         OI    RVVCPLHD(RVVIPTR),B'00010000'                       0973
*   ELSE                                                           0974
*                                                                  0974
*     /***************************************************************/
*     /*                                                             */
*     /* RETURN ALL RECORDS                                  @ZDR2056*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0974
*     RVVALL=ON;                    /*                       @ZDR2056*/
         B     @RC00972                                            0974
@RF00972 OI    RVVALL(RVVIPTR),B'00000001'                         0974
*                                                                  0975
*   /*****************************************************************/
*   /*                                                               */
*   /* DO THE FOLLOWING READ AND PRINT OPERATIONS UNTIL      @Y30LB33*/
*   /* AN ERROR OCCURS OR THE MSVC RETURNS WITH              @Y30LB33*/
*   /* END-OF-COPIES                                         @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0975
*   DO WHILE(TESTRC=0);             /*                       @Y30LB33*/
*                                                                  0975
@RC00972 B     @DE00975                                            0975
@DL00975 DS    0H                                                  0976
*     /***************************************************************/
*     /*                                                             */
*     /* SYMBOLIC DUMP LVLB TO LIST RVVI                     @ZA27752*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0976
*     IF GDTDBG=NULLPTR THEN                                       0976
         L     @06,@PC00001                                        0976
         L     @06,GDTDBG(,@06)                                    0976
         LTR   @06,@06                                             0976
         BZ    @RT00976                                            0976
*       ;                                                          0977
*     ELSE                                                         0978
*       DO;                                                        0978
*         DMPINDEX=ADDR(DUMPAREA);  /*                       @Y30LB33*/
         LA    DMPINDEX,DUMPAREA                                   0979
*         DMPITMNM='RVVI';                                         0980
         MVI   DMPITMNM+4(DMPINDEX),C' '                           0980
         MVC   DMPITMNM+5(3,DMPINDEX),DMPITMNM+4(DMPINDEX)         0980
         MVC   DMPITMNM(4,DMPINDEX),@CC02500                       0980
*         DMPITMPT=ADDR(RVVI);                                     0981
         ST    RVVIPTR,DMPITMPT(,DMPINDEX)                         0981
*         DMPITMLN=LENGTH(RVVI);                                   0982
         MVC   DMPITMLN(2,DMPINDEX),@CH02621                       0982
*         DMPITMTP='H';                                            0983
         MVI   DMPITMTP(DMPINDEX),C'H'                             0983
*         DMPINDEX=DMPINDEX+DMPELEMT;                              0984
*                                                                  0984
         AL    DMPINDEX,@CF00507                                   0984
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 @Y30LB33*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0985
*         DMPTRM=DMPTRMVL;                                         0985
         MVI   DMPTRM(DMPINDEX),X'FF'                              0985
*       END;                        /*                       @Y30LB33*/
*     IF GDTDBG=NULLPTR THEN                                       0987
@RT00976 L     @06,@PC00001                                        0987
         L     @06,GDTDBG(,@06)                                    0987
         LTR   @06,@06                                             0987
         BZ    @RT00987                                            0987
*       ;                                                          0988
*     ELSE                                                         0989
*       CALL IDCDB010(GDTTBL,'LVLB',DUMPADDR);/*             @Y30LB33*/
*                                                                  0989
         L     @06,@PC00001                                        0989
         ST    @06,@AL00001                                        0989
         LA    @04,@CC02510                                        0989
         ST    @04,@AL00001+4                                      0989
         LA    @04,DUMPADDR                                        0989
         ST    @04,@AL00001+8                                      0989
         MVI   @AL00001+8,X'80'                                    0989
         L     @15,GDTDBG(,@06)                                    0989
         LA    @01,@AL00001                                        0989
         BALR  @14,@15                                             0989
*     /***************************************************************/
*     /*                                                             */
*     /* CALL DIRECTRD TO READ COPY RECORD                   @ZA27752*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0990
*     CALL DIRECTRD;                /*                       @ZA27752*/
@RT00987 BAL   @14,DIRECTRD                                        0990
*     RESPECIFY                                                    0991
*       RTNREG RSTD;                                               0991
*     TESTRC=RTNREG;                                               0992
         LR    TESTRC,RTNREG                                       0992
*     RESPECIFY                                                    0993
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  0993
*     /***************************************************************/
*     /*                                                             */
*     /* TEST THE RETURN CODE FOR AN ERROR AND               @Y30LB33*/
*     /* CALL SSCMSG IF ONE OCCURS                           @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0994
*     IF TESTRC=4 THEN                                             0994
         C     TESTRC,@CF00043                                     0994
         BNE   @RF00994                                            0994
*       DO;                         /*                       @Y30LB33*/
*         IF REASON^=NOTFOUND THEN                                 0996
         CLC   REASON(4),@CF02312                                  0996
         BE    @RF00996                                            0996
*           DO;                     /*                       @Y30LB33*/
*             CALL SSCMSG(REASON);  /*                       @Y30LB33*/
*                                                                  0998
         LA    @04,REASON                                          0998
         ST    @04,@AL00001                                        0998
         LA    @01,@AL00001                                        0998
         BAL   @14,SSCMSG                                          0998
*             /*******************************************************/
*             /*                                                     */
*             /* PRINT THE MESSAGE IDC2078I IF THE           @YM04304*/
*             /* COPY RECORD IS NOT READ AS EXPECTED         @YM04304*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0999
*             DARGLIST=DARGLIST&&DARGLIST;/*                 @YM04304*/
         L     @04,DDSTRU                                          0999
         XC    DARGLIST(20,@04),DARGLIST(@04)                      0999
*             DARGDBP=ADDR(RVVOLUME);/*                      @YM04304*/
         LA    @03,RVVOLUME(,RVVIPTR)                              1000
         ST    @03,DARGDBP(,@04)                                   1000
*             DARGILP=LENGTH(RVVOLUME);/*                    @YM04304*/
         MVC   DARGILP(2,@04),@CH00159                             1001
*             DARGSMOD=MODCMN;      /*                       @YM04304*/
         MVC   DARGSMOD(3,@04),@CC02400                            1002
*             DARGSENT=MSG2078I;    /*                       @YM04304*/
         MVI   DARGSENT(@04),X'1C'                                 1003
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @YM04304*/
         L     @04,@PC00001                                        1004
         ST    @04,@AL00001                                        1004
         LA    @03,@CF00117                                        1004
         ST    @03,@AL00001+4                                      1004
         LA    @03,DDSTRU                                          1004
         ST    @03,@AL00001+8                                      1004
         MVI   @AL00001+8,X'80'                                    1004
         L     @15,GDTPRT(,@04)                                    1004
         LA    @01,@AL00001                                        1004
         BALR  @14,@15                                             1004
*             SETRC=16;             /*                       @Y30LB33*/
         MVC   SETRC(2),@CH00507                                   1005
*             LASTCOND=LASTCC08;    /*                       @Y30LB33*/
         L     @04,@PC00001+8                                      1006
         MVC   LASTCOND(2,@04),@CH00035                            1006
*           END;                    /*                       @Y30LB33*/
*       END;                        /*                       @Y30LB33*/
@RF00996 DS    0H                                                  1009
*                                                                  1009
*     /***************************************************************/
*     /*                                                             */
*     /* IF NO ERROR AND NOT END-OF-FILE, SET UP             @ZDR2056*/
*     /* THE PRINT BUFFER FOR THE COPY RECORD PRINT          @ZDR2056*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1009
*     IF TESTRC=0 THEN                                             1009
@RF00994 LTR   TESTRC,TESTRC                                       1009
         BNZ   @RF01009                                            1009
*       DO;                         /*                       @Y30LB33*/
*                                                                  1010
*         /***********************************************************/
*         /*                                                         */
*         /* SET UP SEQUENCE NUMBER BY BUMPING               @Y30LB33*/
*         /* THE COUNTER BY ONE IF THE DATE IS THE           @Y30LB33*/
*         /* SAME AS THE LAST ONE READ. SET THE              @Y30LB33*/
*         /* COUNTER TO ZERO IF THE DATE IS                  @Y30LB33*/
*         /* DIFFERENT FROM THE LAST                         @Y30LB33*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1011
*         IF COPDATE=CPYTRNDT       /*                       @Y30LB33*/
*           THEN                    /*                       @Y30LB33*/
         L     @04,COPYVPTR                                        1011
         CLC   COPDATE(4,@04),CPYTRNDT                             1011
         BNE   @RF01011                                            1011
*           CPYTRNSQ=CPYTRNSQ+1;    /*                       @Y30LB33*/
         LH    @04,CPYTRNSQ                                        1012
         LA    @04,1(,@04)                                         1012
         STH   @04,CPYTRNSQ                                        1012
*         ELSE                                                     1013
*           CPYTRNSQ=1;             /*                       @Y30LB33*/
         B     @RC01011                                            1013
@RF01011 MVC   CPYTRNSQ(2),@CH00221                                1013
*         CPYTRNDT=COPDATE;         /*                       @Y30LB33*/
@RC01011 L     @04,COPYVPTR                                        1014
         MVC   CPYTRNDT(4),COPDATE(@04)                            1014
*         CPYTRNST=BLANKS;          /*                       @ZDR2056*/
         MVC   CPYTRNST(5),BLANKS                                  1015
*         DARGLIST=DARGLIST&&DARGLIST;/*                     @Y30LB33*/
         L     @03,DDSTRU                                          1016
         XC    DARGLIST(20,@03),DARGLIST(@03)                      1016
*         DARGDBP=ADDR(CPYAREA);    /*                       @Y30LB33*/
         LA    @15,CPYAREA                                         1017
         ST    @15,DARGDBP(,@03)                                   1017
*         DARGILP=LENGTH(CPYAREA);  /*                       @Y30LB33*/
         MVC   DARGILP(2,@03),@CH02623                             1018
*         DARGSMOD=MODLV0;          /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@03),@CC02396                            1019
*         DARGSENT=CPYLINE;         /*                       @Y30LB33*/
         MVI   DARGSENT(@03),X'08'                                 1020
*         IF COPBKUP=ON THEN        /*                       @Y30LB33*/
         TM    COPBKUP(@04),B'00001000'                            1021
         BNO   @RF01021                                            1021
*           CPYTRNTY=BKUPCHAR;      /*                       @Y30LB33*/
         MVC   CPYTRNTY(4),BKUPCHAR                                1022
*         ELSE                                                     1023
*           CPYTRNTY=COPYCHAR;      /*                       @Y30LB33*/
*                                                                  1023
         B     @RC01021                                            1023
@RF01021 MVC   CPYTRNTY(4),COPYCHAR                                1023
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK FOR A COPY PLACE HOLDER                   @ZDR2056*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1024
*         IF COPHOLD=OFF THEN                                      1024
@RC01021 L     @04,COPYVPTR                                        1024
         TM    COPHOLD(@04),B'10000000'                            1024
         BNZ   @RF01024                                            1024
*           DO;                     /*                       @ZDR2056*/
*                                                                  1025
*             /*******************************************************/
*             /*                                                     */
*             /* PRINT VOLID FOR PLACEHOLDERS KEYWORD        @ZDR2056*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1026
*             COPSERNO=BLANK;       /*                       @ZDR2056*/
*                                                                  1026
         MVI   COPSERNO+1(@04),C' '                                1026
         MVC   COPSERNO+2(4,@04),COPSERNO+1(@04)                   1026
         MVI   COPSERNO(@04),C' '                                  1026
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP INSERTS FOR THE LOCATION AND         @Y30LB33*/
*             /* EJECT DATE FIELDS. IF THE EJECT DATE        @Y30LB33*/
*             /* IS NOT NULL, PRINT THE LOCATION             @Y30LB33*/
*             /* FIELD OF THE COPY. IF THE EJECT DATE        @Y30LB33*/
*             /* IS NULL, PRINT THE MSF ID OF THE            @Y30LB33*/
*             /* CARTRIDGE.                                  @Y30LB33*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1027
*             IF COPDTREM^='    ' THEN                             1027
         CLC   COPDTREM(4,@04),@CC02511                            1027
         BE    @RF01027                                            1027
*               DO;                 /*                       @Y30LB33*/
*                 DARGCNT=DARGCNT+1;/*                       @Y30LB33*/
         L     @03,DDSTRU                                          1029
         LA    @15,1                                               1029
         LH    @14,DARGCNT(,@03)                                   1029
         ALR   @14,@15                                             1029
         STH   @14,DARGCNT(,@03)                                   1029
*                 DARGINS(DARGCNT)=1;/*                      @Y30LB33*/
         SLA   @14,3                                               1030
         STH   @15,DARGINS-8(@14,@03)                              1030
*                 DARGINL(DARGCNT)=4;/*                      @Y30LB33*/
         LA    @15,4                                               1031
         STH   @15,DARGINL-8(@14,@03)                              1031
*                 DARGDTM(DARGCNT)=ADDR(COPDTREM);/*         @Y30LB33*/
         LA    @04,COPDTREM(,@04)                                  1032
         ST    @04,DARGDTM-8(@14,@03)                              1032
*               END;                /*                       @Y30LB33*/
*                                                                  1033
*             /*******************************************************/
*             /*                                                     */
*             /* IF THE COPY IS NOT EJECTED, SET UP          @Y30LB33*/
*             /* THE MSF IDS IN THE DESTINATION FIELD        @Y30LB33*/
*             /* IN THE RECORD                               @Y30LB33*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1034
*             ELSE                                                 1034
*               DO;                 /*                       @Y30LB33*/
         B     @RC01027                                            1034
@RF01027 DS    0H                                                  1035
*                 IF COPLIB1=NULLFFS THEN/*                  @ZM01010*/
         L     @04,COPYVPTR                                        1035
         CLC   COPLIB1(1,@04),NULLFFS                              1035
         BNE   @RF01035                                            1035
*                   COPDEST(1:15)=UNKCHAR;/*                 @ZM01010*/
         MVC   COPDEST(15,@04),UNKCHAR                             1036
*                 ELSE                                             1037
*                   DO;             /*                       @ZM01010*/
         B     @RC01035                                            1037
@RF01035 DS    0H                                                  1038
*                     IF COPLIB1=0 THEN/*                    @Y30LB33*/
         L     @04,COPYVPTR                                        1038
         CLI   COPLIB1(@04),0                                      1038
         BNE   @RF01038                                            1038
*                       COPDEST(1:15)=MSF0CHAR;/*            @Y30LB33*/
         MVC   COPDEST(15,@04),MSF0CHAR                            1039
*                     IF COPLIB1=1 THEN/*                    @Y30LB33*/
@RF01038 L     @04,COPYVPTR                                        1040
         CLI   COPLIB1(@04),1                                      1040
         BNE   @RF01040                                            1040
*                       COPDEST(1:15)=MSF1CHAR;/*            @Y30LB33*/
         MVC   COPDEST(15,@04),MSF1CHAR                            1041
*                   END;            /*                       @ZM01010*/
@RF01040 DS    0H                                                  1043
*                 IF COPLIB2=NULLFFS THEN/*                  @ZM01010*/
@RC01035 L     @04,COPYVPTR                                        1043
         CLC   COPLIB2(1,@04),NULLFFS                              1043
         BNE   @RF01043                                            1043
*                   COPDEST(16:30)=UNKCHAR;/*                @ZM01010*/
         MVC   COPDEST+15(15,@04),UNKCHAR                          1044
*                 ELSE                                             1045
*                   DO;             /*                       @ZM01010*/
         B     @RC01043                                            1045
@RF01043 DS    0H                                                  1046
*                     IF COPLIB2=0 THEN/*                    @Y30LB33*/
         L     @04,COPYVPTR                                        1046
         CLI   COPLIB2(@04),0                                      1046
         BNE   @RF01046                                            1046
*                       COPDEST(16:30)=MSF0CHAR;/*           @Y30LB33*/
         MVC   COPDEST+15(15,@04),MSF0CHAR                         1047
*                     IF COPLIB2=1 THEN/*                    @Y30LB33*/
@RF01046 L     @04,COPYVPTR                                        1048
         CLI   COPLIB2(@04),1                                      1048
         BNE   @RF01048                                            1048
*                       COPDEST(16:30)=MSF1CHAR;/*           @Y30LB33*/
         MVC   COPDEST+15(15,@04),MSF1CHAR                         1049
*                   END;            /*                       @ZM01010*/
*               END;                /*                       @Y30LB33*/
*           END;                    /*                       @ZDR2056*/
*                                                                  1052
*         /***********************************************************/
*         /*                                                         */
*         /* INIT PLACE HOLDER FIELDS                        @ZDR2056*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1053
*         ELSE                                                     1053
*           DO;                     /*                       @ZDR2056*/
         B     @RC01024                                            1053
@RF01024 DS    0H                                                  1054
*             CPYTRNST=PHOLDER;     /*                       @ZDR2056*/
         MVC   CPYTRNST(5),PHOLDER                                 1054
*             COPLIB1=BLANK;        /*                       @ZDR2056*/
         L     @04,COPYVPTR                                        1055
         MVI   COPLIB1(@04),X'40'                                  1055
*             COPLIB2=BLANK;        /*                       @ZDR2056*/
         MVI   COPLIB2(@04),X'40'                                  1056
*             COPCSN1=BLANK;        /*                       @ZDR2056*/
         MVI   COPCSN1+1(@04),C' '                                 1057
         MVC   COPCSN1+2(10,@04),COPCSN1+1(@04)                    1057
         MVI   COPCSN1(@04),C' '                                   1057
*             COPCSN2=BLANK;        /*                       @ZDR2056*/
         MVI   COPCSN2+1(@04),C' '                                 1058
         MVC   COPCSN2+2(10,@04),COPCSN2+1(@04)                    1058
         MVI   COPCSN2(@04),C' '                                   1058
*             COPDEST=BLANK;        /*                       @ZDR2056*/
*                                                                  1059
         MVI   COPDEST+1(@04),C' '                                 1059
         MVC   COPDEST+2(28,@04),COPDEST+1(@04)                    1059
         MVI   COPDEST(@04),C' '                                   1059
*             /*******************************************************/
*             /*                                                     */
*             /* PRINT VOLID FOR PLACEHOLDERS KEYWORD        @ZDR2056*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  1060
*             IF ADDR(PLHD)=NULLPTR THEN                           1060
         L     @03,@PC00001+4                                      1060
         L     @03,FDTPTR+92(,@03)                                 1060
         LTR   @03,@03                                             1060
         BNZ   @RF01060                                            1060
*               COPSERNO=BLANK;     /*                       @ZDR2056*/
         MVI   COPSERNO+1(@04),C' '                                1061
         MVC   COPSERNO+2(4,@04),COPSERNO+1(@04)                   1061
         MVI   COPSERNO(@04),C' '                                  1061
*           END;                    /*                       @ZDR2056*/
*                                                                  1062
@RF01060 DS    0H                                                  1063
*         /***********************************************************/
*         /*                                                         */
*         /* PRINT THE COPY DATA LINES                       @Y30LB33*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1063
*         CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*            @Y30LB33*/
@RC01024 L     @04,@PC00001                                        1063
         ST    @04,@AL00001                                        1063
         LA    @03,PRINTME                                         1063
         ST    @03,@AL00001+4                                      1063
         LA    @03,DDSTRU                                          1063
         ST    @03,@AL00001+8                                      1063
         MVI   @AL00001+8,X'80'                                    1063
         L     @15,GDTPRT(,@04)                                    1063
         LA    @01,@AL00001                                        1063
         BALR  @14,@15                                             1063
*                                                                  1064
*         /***********************************************************/
*         /*                                                         */
*         /* NOW TEST THE RECOVERY FLAGS AND                 @Y30LB33*/
*         /* PRINT THE APPROPRIATE MESSAGES                  @Y30LB33*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1064
*         DARGLIST=DARGLIST&&DARGLIST;/*                     @Y30LB33*/
         L     @04,DDSTRU                                          1064
         XC    DARGLIST(20,@04),DARGLIST(@04)                      1064
*         DARGSMOD=MODLV0;          /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@04),@CC02396                            1065
*         IF COPIVCPY=ON THEN                                      1066
         L     @03,COPYVPTR                                        1066
         TM    COPIVCPY(@03),B'01000000'                           1066
         BNO   @RF01066                                            1066
*           DO;                     /* INCOMPLETE            @Y30LB33
*                                      COPY                  @Y30LB33*/
*             DARGSENT=INCPYCPY;    /*                       @Y30LB33*/
         MVI   DARGSENT(@04),X'03'                                 1068
*             CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*        @Y30LB33*/
         L     @04,@PC00001                                        1069
         ST    @04,@AL00001                                        1069
         LA    @03,PRINTME                                         1069
         ST    @03,@AL00001+4                                      1069
         LA    @03,DDSTRU                                          1069
         ST    @03,@AL00001+8                                      1069
         MVI   @AL00001+8,X'80'                                    1069
         L     @15,GDTPRT(,@04)                                    1069
         LA    @01,@AL00001                                        1069
         BALR  @14,@15                                             1069
*           END;                    /*                       @Y30LB33*/
*                                                                  1071
*         /***********************************************************/
*         /*                                                         */
*         /* ADD TO THE PRINT COUNTERS                       @Y30LB33*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1071
*         MAINCTR=MAINCTR+1;        /*                       @Y30LB33*/
@RF01066 LA    @04,1                                               1071
         L     @03,MAINCTR                                         1071
         ALR   @03,@04                                             1071
         ST    @03,MAINCTR                                         1071
*         IF COPHOLD=OFF THEN       /*                       @ZDR2056*/
         L     @03,COPYVPTR                                        1072
         TM    COPHOLD(@03),B'10000000'                            1072
         BNZ   @RF01072                                            1072
*           SUMCPY=SUMCPY+1;        /*                       @Y30LB33*/
*                                                                  1073
         AL    @04,SUMCPY                                          1073
         ST    @04,SUMCPY                                          1073
*         /***********************************************************/
*         /*                                                         */
*         /* NOW GET THE COPY ID OF THE RECORD               @Y30LB33*/
*         /* JUST PROCESSED AND PUT IT IN THE                @Y30LB33*/
*         /* REQUEST BLOCK SO THAT THE READ                  @Y30LB33*/
*         /* REQUEST FINDS THE NEXT RECORD                   @Y30LB33*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1074
*         RVVCPYID=COPNO;           /*                       @Y30LB33*/
@RF01072 L     @04,COPYVPTR                                        1074
         IC    @03,COPNO(,@04)                                     1074
         STC   @03,RVVCPYID(,RVVIPTR)                              1074
*       END;                        /*                       @Y30LB33*/
*   END;                            /* END OF THE READ AND PRINT   1076
*                                                            @Y30LB33*/
@RF01009 DS    0H                                                  1076
@DE00975 LTR   TESTRC,TESTRC                                       1076
         BZ    @DL00975                                            1076
*   CPYTRNDT=' ';                   /*                       @Y30LB33*/
         MVI   CPYTRNDT+1,C' '                                     1077
         MVC   CPYTRNDT+2(2),CPYTRNDT+1                            1077
         MVI   CPYTRNDT,C' '                                       1077
*   RETURN CODE(SETRC);             /*                       @Y30LB33*/
         LH    @15,SETRC                                           1078
@EL00012 DS    0H                                                  1078
@EF00012 DS    0H                                                  1078
@ER00012 L     @14,@SA00012                                        1078
         BR    @14                                                 1078
*   END CPYPROC;                    /*                       @Y30LB33*/
*                                                                  1080
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - SUMRY                                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - PRINT THE SUMMARY REQUESTED                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - SUMMASK AND THE FDTTBL                        @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO                          @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1080
*SUMRY:                                                            1080
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
SUMRY    ST    @14,@SA00013                                        1080
*   OLDERID2=NEWERID2;                                             1081
         L     @05,@PC00001                                        1081
         L     @05,GDTTR2(,@05)                                    1081
         MVC   @TS00001(95),NEWERID2(@05)                          1081
         MVC   OLDERID2(95,@05),@TS00001                           1081
*   NEWID2='LVMA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@05),@CC02515                              1082
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  1083
         SLR   TESTRC,TESTRC                                       1083
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE MAIN COUNTER TO SEE IF THERE IS              @Y30LB33*/
*   /* ANYTHING TO PRINT                                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1084
*   IF MAINCTR>0 THEN                                              1084
         L     @05,MAINCTR                                         1084
         LTR   @05,@05                                             1084
         BNP   @RF01084                                            1084
*     DO;                           /*                       @Y30LB33*/
*                                                                  1085
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP THE DARGLIST TO DO THE PRINTING            @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1086
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @05,DDSTRU                                          1086
         XC    DARGLIST(20,@05),DARGLIST(@05)                      1086
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@05),@CC02396                            1087
*       DARGDBP=ADDR(SUMTBL);       /*                       @Y30LB33*/
         LA    @15,SUMTBL                                          1088
         ST    @15,DARGDBP(,@05)                                   1088
*       DARGILP=LENGTH(SUMTBL);     /*                       @Y30LB33*/
*                                                                  1089
         MVC   DARGILP(2,@05),@CH02164                             1089
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR AND SET UP A GROUP SUMMARY               @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1090
*       IF SUMMASK=GRPSUMM THEN                                    1090
         C     SUMMASK,@CF00221                                    1090
         BNE   @RF01090                                            1090
*         DO;                       /*                       @Y30LB33*/
*           DARGSENT=GRPSUMLN;      /*                       @Y30LB33*/
         MVI   DARGSENT(@05),X'15'                                 1092
*         END;                      /*                       @Y30LB33*/
*                                                                  1093
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR AND SET UP A VOLUME SUMMARY              @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1094
*       IF SUMMASK=VOLSUMM THEN     /*                       @Y30LB33*/
@RF01090 C     SUMMASK,@CF00117                                    1094
         BNE   @RF01094                                            1094
*         DARGSENT=VOLSUMLN;        /*                       @Y30LB33*/
*                                                                  1095
         L     @05,DDSTRU                                          1095
         MVI   DARGSENT(@05),X'16'                                 1095
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR A GROUP AND VOLUME SUMMARY AND           @Y30LB33*/
*       /* SET IT UP                                         @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1096
*       IF SUMMASK=GRPVOLSM THEN    /*                       @Y30LB33*/
@RF01094 C     SUMMASK,@CF00156                                    1096
         BNE   @RF01096                                            1096
*         DARGSENT=GVSUMLN;         /*                       @Y30LB33*/
*                                                                  1097
         L     @05,DDSTRU                                          1097
         MVI   DARGSENT(@05),X'14'                                 1097
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR AND SET UP A CARTRIDGE SUMMARY           @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1098
*       IF SUMMASK=CTGSUMM THEN     /*                       @Z40LB66*/
@RF01096 C     SUMMASK,@CF00165                                    1098
         BNE   @RF01098                                            1098
*         DARGSENT=CTGSUMLN;        /*                       @Z40LB66*/
*                                                                  1099
         L     @05,DDSTRU                                          1099
         MVI   DARGSENT(@05),X'22'                                 1099
*       /*************************************************************/
*       /*                                                           */
*       /* PRINT THE SUMMARY LINES                           @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1100
*       CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*              @Y30LB33*/
*                                                                  1100
@RF01098 L     @05,@PC00001                                        1100
         ST    @05,@AL00001                                        1100
         LA    @15,PRINTME                                         1100
         ST    @15,@AL00001+4                                      1100
         LA    @15,DDSTRU                                          1100
         ST    @15,@AL00001+8                                      1100
         MVI   @AL00001+8,X'80'                                    1100
         L     @15,GDTPRT(,@05)                                    1100
         LA    @01,@AL00001                                        1100
         BALR  @14,@15                                             1100
*       /*************************************************************/
*       /*                                                           */
*       /* TEST THE SUMMARY TYPE AND REPORT TYPE             @Y30LB33*/
*       /* AND SEE IF WE NEED TO PRINT THE COPY              @Y30LB33*/
*       /* RECORD SUMMARY                                    @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1101
*       IF(SUMMASK=VOLSUMM×SUMMASK=GRPVOLSM)/*               @Y30LB33*/
*           &ADDR(STAT)>0 THEN                                     1101
         C     SUMMASK,@CF00117                                    1101
         BE    @GL00048                                            1101
         C     SUMMASK,@CF00156                                    1101
         BNE   @RF01101                                            1101
@GL00048 L     @05,@PC00001+4                                      1101
         L     @05,FDTPTR+52(,@05)                                 1101
         LTR   @05,@05                                             1101
         BNP   @RF01101                                            1101
*         DO;                       /*                       @Y30LB33*/
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @Y30LB33*/
         L     @05,DDSTRU                                          1103
         XC    DARGLIST(20,@05),DARGLIST(@05)                      1103
*           DARGSMOD=MODLV0;        /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@05),@CC02396                            1104
*           DARGILP=LENGTH(SUMTBL); /*                       @Y30LB33*/
         MVC   DARGILP(2,@05),@CH02164                             1105
*           DARGDBP=ADDR(SUMCPY);   /*                       @Y30LB33*/
         LA    @15,SUMCPY                                          1106
         ST    @15,DARGDBP(,@05)                                   1106
*           DARGSENT=CPYSUMLN;      /*                       @Y30LB33*/
         MVI   DARGSENT(@05),X'1E'                                 1107
*           CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*          @Y30LB33*/
         L     @05,@PC00001                                        1108
         ST    @05,@AL00001                                        1108
         LA    @15,PRINTME                                         1108
         ST    @15,@AL00001+4                                      1108
         LA    @15,DDSTRU                                          1108
         ST    @15,@AL00001+8                                      1108
         MVI   @AL00001+8,X'80'                                    1108
         L     @15,GDTPRT(,@05)                                    1108
         LA    @01,@AL00001                                        1108
         BALR  @14,@15                                             1108
*         END;                      /*                       @Y30LB33*/
*                                                                  1109
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE ARE PRODUCING A VOLUME REPORT               @Y30LB33*/
*       /* AND A STATUS REPORT, PRINT THE                    @Y30LB33*/
*       /* DUPLICATE SERIAL NUMBER TOTAL                     @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1110
*       IF ADDR(STAT)>0&            /*                       @Y30LB33*/
*           (ADDR(ALLV)>0×ADDR(VOLSCNT)>0)/*                 @Y30LB33*/
*         THEN                                                     1110
@RF01101 SLR   @05,@05                                             1110
         L     @15,@PC00001+4                                      1110
         C     @05,FDTPTR+52(,@15)                                 1110
         BNL   @RF01110                                            1110
         C     @05,FDTPTR+4(,@15)                                  1110
         BL    @RT01110                                            1110
         C     @05,FDTPTR(,@15)                                    1110
         BNL   @RF01110                                            1110
@RT01110 DS    0H                                                  1111
*         DO;                       /*                       @Y30LB33*/
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @Y30LB33*/
         L     @05,DDSTRU                                          1112
         XC    DARGLIST(20,@05),DARGLIST(@05)                      1112
*           DARGSMOD=MODLV0;        /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@05),@CC02396                            1113
*           DARGILP=LENGTH(SUMTBL); /*                       @Y30LB33*/
         MVC   DARGILP(2,@05),@CH02164                             1114
*           DARGDBP=ADDR(SUMTBL);   /*                       @Y30LB33*/
         LA    @15,SUMTBL                                          1115
         ST    @15,DARGDBP(,@05)                                   1115
*           DARGSENT=DUPSUMLN;      /*                       @Y30LB33*/
         MVI   DARGSENT(@05),X'02'                                 1116
*           CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*          @Y30LB33*/
         L     @05,@PC00001                                        1117
         ST    @05,@AL00001                                        1117
         LA    @15,PRINTME                                         1117
         ST    @15,@AL00001+4                                      1117
         LA    @15,DDSTRU                                          1117
         ST    @15,@AL00001+8                                      1117
         MVI   @AL00001+8,X'80'                                    1117
         L     @15,GDTPRT(,@05)                                    1117
         LA    @01,@AL00001                                        1117
         BALR  @14,@15                                             1117
*         END;                      /*                       @Y30LB33*/
*                                                                  1119
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR THE SUMMARY TYPE AND ZERO                @Y30LB33*/
*       /* THE COUNTERS                                      @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1119
*       IF SUMMASK=GRPSUMM THEN                                    1119
@RF01110 C     SUMMASK,@CF00221                                    1119
         BNE   @RF01119                                            1119
*         SUMGPS=0;                 /*                       @Y30LB33*/
         SLR   @15,@15                                             1120
         ST    @15,SUMGPS                                          1120
*       SUMCPY=0;                   /*                       @Y30LB33*/
@RF01119 SLR   @15,@15                                             1121
         ST    @15,SUMCPY                                          1121
*       SUMDUP=0;                   /*                       @Y30LB33*/
         ST    @15,SUMDUP                                          1122
*       SUMVOL=0;                   /*                       @Y30LB33*/
         ST    @15,SUMVOL                                          1123
*       SUMGVOL=0;                  /*                       @Y30LB33*/
         ST    @15,SUMGVOL                                         1124
*       SUMRVOL=0;                  /*                       @Y30LB33*/
         ST    @15,SUMRVOL                                         1125
*       SUMIVOL=0;                  /*                       @Y30LB33*/
         ST    @15,SUMIVOL                                         1126
*     END;                          /*                       @Y30LB33*/
*   RETURN CODE(TESTRC);            /*                       @Y30LB33*/
@RF01084 LR    @15,TESTRC                                          1128
@EL00013 DS    0H                                                  1128
@EF00013 DS    0H                                                  1128
@ER00013 L     @14,@SA00013                                        1128
         BR    @14                                                 1128
*   END SUMRY;                      /*                       @Y30LB33*/
*                                                                  1130
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - GRPPRNT                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - TO SET UP THE TEXT PROCESSOR               @Y30LB33*/
*   /* ARGUMENT LIST AND PRINT THE GROUP DATA                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - THE FDTTBL, SUMTBL, AND THE GROUP RECORD      @Y30LB33*/
*   /* TO BE PRINTED                                         @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - UPDATED SUMTBL AND A RETURN CODE OF          @Y30LB33*/
*   /* ZERO                                                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1130
*GRPPRNT:                                                          1130
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
GRPPRNT  ST    @14,@SA00014                                        1130
*   OLDERID2=NEWERID2;                                             1131
         L     @03,@PC00001                                        1131
         L     @15,GDTTR2(,@03)                                    1131
         MVC   @TS00001(95),NEWERID2(@15)                          1131
         MVC   OLDERID2(95,@15),@TS00001                           1131
*   NEWID2='LVNA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@15),@CC02519                              1132
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  1133
         SLR   TESTRC,TESTRC                                       1133
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF A VOLUME LIST WAS REQUESTED, AND IF SO        @Y30LB33*/
*   /* SO, RESET THE SUBTITLES SO THAT THE GROUP             @Y30LB33*/
*   /* DATA HEADING DOES NOT GO UNDER A VOLUME               @Y30LB33*/
*   /* SUBTITLE                                              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1134
*   IF ADDR(VOLST)>0 THEN                                          1134
         L     @15,@PC00001+4                                      1134
         L     @15,FDTPTR+24(,@15)                                 1134
         LTR   @15,@15                                             1134
         BNP   @RF01134                                            1134
*     DO;                           /*                       @Y30LB33*/
*                                                                  1135
*       /*************************************************************/
*       /*                                                           */
*       /* RESET THE SUBTITLES AND MAIN TITLE                @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1136
*       CALL AMSTP044(GDTTBL,PRINTME);/*                     #Y30LB33*/
*                                                                  1136
         ST    @03,@AL00001                                        1136
         LA    @15,PRINTME                                         1136
         ST    @15,@AL00001+4                                      1136
         MVI   @AL00001+4,X'80'                                    1136
         L     @15,GDTRES(,@03)                                    1136
         LA    @01,@AL00001                                        1136
         BALR  @14,@15                                             1136
*       /*************************************************************/
*       /*                                                           */
*       /* RE-ESTABLISH THE MAIN TITLE LINE                  @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1137
*       PCARG=PCARG&&PCARG;         /*                       @Y30LB33*/
         XC    PCARG(33),PCARG                                     1137
*       PCMTLP=ADDR(MAINTITL);      /*                       @Y30LB33*/
         LA    @03,MAINTITL                                        1138
         ST    @03,PCMTLP                                          1138
*       PCSTLC=1;                   /*                       @YM02855*/
         MVC   PCSTLC(2),@CH00221                                  1139
*       PCPNL=107;                  /*                       @Y30LB33*/
         MVC   PCPNL(2),@CH02418                                   1140
*       PCPTL=73;                   /*                       @Y30LB33*/
         MVC   PCPTL(2),@CH02419                                   1141
*       PCPDL=89;                   /*                       @Y30LB33*/
         MVC   PCPDL(2),@CH02420                                   1142
*       CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*               @Y30LB33*/
         L     @03,@PC00001                                        1143
         ST    @03,@AL00001                                        1143
         LA    @15,PRINTME                                         1143
         ST    @15,@AL00001+4                                      1143
         LA    @15,PCARG                                           1143
         ST    @15,@AL00001+8                                      1143
         L     @15,GDTESA(,@03)                                    1143
         LA    @01,@AL00001                                        1143
         BALR  @14,@15                                             1143
*     END;                          /*                       #Y30LB33*/
*                                                                  1144
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE DARGLIST FOR A STATUS OR USAGE             #Y30LB33*/
*   /* REPORT WITH INITIAL VALUES                            @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1145
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Y30LB33*/
@RF01134 L     @03,DDSTRU                                          1145
         XC    DARGLIST(20,@03),DARGLIST(@03)                      1145
*   DARGSMOD=MODLV0;                /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@03),@CC02396                            1146
*   DARGDBP=ADDR(GRPAREA);          /*                       @Y30LB33*/
         LA    @15,GRPAREA                                         1147
         ST    @15,DARGDBP(,@03)                                   1147
*   DARGILP=LENGTH(GRPAREA);        /*                       @Y30LB33*/
*                                                                  1148
         MVC   DARGILP(2,@03),@CH02624                             1148
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP SPACE DISPOSITION FIELD                        @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1149
*   IF GRORLSE=ON THEN                                             1149
         TM    GRORLSE(GROUPPTR),B'00001000'                       1149
         BNO   @RF01149                                            1149
*     GRPTRNRL=RLSCHAR;             /*                       @Y30LB33*/
         MVC   GRPTRNRL(5),RLSCHAR                                 1150
*   ELSE                                                           1151
*     GRPTRNRL=NRLCHAR;             /*                       @Y30LB33*/
*                                                                  1151
         B     @RC01149                                            1151
@RF01149 MVC   GRPTRNRL(5),NRLCHAR                                 1151
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ARGUMENT LIST FOR A STATUS REPORT              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1152
*   IF ADDR(STAT)>0 THEN                                           1152
@RC01149 L     @03,@PC00001+4                                      1152
         L     @03,FDTPTR+52(,@03)                                 1152
         LTR   @03,@03                                             1152
         BNP   @RF01152                                            1152
*     DO;                           /*                       @Y30LB33*/
*                                                                  1153
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP ATTRIBUTES                                 @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1154
*       GRPTRNAT='    ';            /*                       @Y30LB33*/
         MVC   GRPTRNAT(4),@CC02511                                1154
*       IF GROBIND=ON THEN                                         1155
         TM    GROBIND(GROUPPTR),B'10000000'                       1155
         BNO   @RF01155                                            1155
*         GRPTRNAT(1)=BCHAR;        /*                       @Y30LB33*/
         MVC   GRPTRNAT(1),BCHAR                                   1156
*       IF GRORONLY=ON THEN                                        1157
@RF01155 TM    GRORONLY(GROUPPTR),B'00010000'                      1157
         BNO   @RF01157                                            1157
*         GRPTRNAT(2)=RCHAR;        /*                       @Y30LB33*/
         MVC   GRPTRNAT+1(1),RCHAR                                 1158
*       IF GRODAERA=ON THEN                                        1159
@RF01157 TM    GRODAERA(GROUPPTR),B'00100000'                      1159
         BNO   @RF01159                                            1159
*         GRPTRNAT(3)=DCHAR;        /*                       @Y30LB33*/
         MVC   GRPTRNAT+2(1),DCHAR                                 1160
*       IF GROEXCL=ON THEN                                         1161
@RF01159 TM    GROEXCL(GROUPPTR),B'01000000'                       1161
         BNO   @RF01161                                            1161
*         GRPTRNAT(4)=ECHAR;        /*                       @Y30LB33*/
*                                                                  1162
         MVC   GRPTRNAT+3(1),ECHAR                                 1162
*       /*************************************************************/
*       /*                                                           */
*       /* DON'T PRINT RETENTION PERIOD IF THERE IS          @Y30LB33*/
*       /* NONE. ZERO IS THE NULL VALUE                      @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1163
*       IF GRORETPD>0&GRORETN=ON THEN                              1163
@RF01161 L     @03,GRORETPD(,GROUPPTR)                             1163
         LTR   @03,@03                                             1163
         BNP   @RF01163                                            1163
         TM    GRORETN(GROUPPTR),B'00000100'                       1163
         BNO   @RF01163                                            1163
*         DO;                       /*                       @ZA16116*/
*           DARGCNT=DARGCNT+1;      /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1165
         LA    @15,1                                               1165
         AH    @15,DARGCNT(,@03)                                   1165
         STH   @15,DARGCNT(,@03)                                   1165
*           DARGINS(DARGCNT)=2;     /*                       @ZA16116*/
         SLA   @15,3                                               1166
         LA    @14,2                                               1166
         STH   @14,DARGINS-8(@15,@03)                              1166
*           DARGINL(DARGCNT)=4;     /*                       @Y30LB33*/
         LA    @14,4                                               1167
         STH   @14,DARGINL-8(@15,@03)                              1167
*           DARGDTM(DARGCNT)=ADDR(GRORETPD);/*               @Y30LB33*/
         LA    @14,GRORETPD(,GROUPPTR)                             1168
         ST    @14,DARGDTM-8(@15,@03)                              1168
*         END;                      /*                       @Y30LB33*/
*                                                                  1169
*       /*************************************************************/
*       /*                                                           */
*       /* SELECT THE STATIC TEXT ENTRY BASED ON             @Y30LB33*/
*       /* THE REPORT PARAMETER                              @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1170
*       IF ADDR(VOLST)>0 THEN                                      1170
@RF01163 L     @03,@PC00001+4                                      1170
         L     @03,FDTPTR+24(,@03)                                 1170
         LTR   @03,@03                                             1170
         BNP   @RF01170                                            1170
*         DARGSENT=SVGRPHD;         /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1171
         MVI   DARGSENT(@03),X'1D'                                 1171
*       ELSE                                                       1172
*         DARGSENT=GRPSLINE;        /*                       @Y30LB33*/
         B     @RC01170                                            1172
@RF01170 L     @03,DDSTRU                                          1172
         MVI   DARGSENT(@03),X'1A'                                 1172
*     END;                          /*                       @Y30LB33*/
*                                                                  1173
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ARGUMENT LIST FOR A USAGE REPORT               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1174
*   ELSE                                                           1174
*     DO;                           /*                       @Y30LB33*/
*                                                                  1174
         B     @RC01152                                            1174
@RF01152 DS    0H                                                  1175
*       /*************************************************************/
*       /*                                                           */
*       /* FIRST CALCULATE THE AVERAGE SIZE OF A FREE        @Y30LB33*/
*       /* EXTENT                                            @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1175
*       IF GROFRESP>0&GROFREXT>0 THEN                              1175
         SLR   @03,@03                                             1175
         L     @15,GROFRESP(,GROUPPTR)                             1175
         CR    @15,@03                                             1175
         BNH   @RF01175                                            1175
         L     @14,GROFREXT(,GROUPPTR)                             1175
         CR    @14,@03                                             1175
         BNH   @RF01175                                            1175
*         DO;                       /*                       @Y30LB33*/
*           GRPAVGFD=GROFRESP/GROFREXT;/*                    @Y30LB33*/
         LR    @00,@15                                             1177
         SRDA  @00,32                                              1177
         DR    @00,@14                                             1177
         ST    @01,GRPAVGFD                                        1177
*           DARGCNT=DARGCNT+1;      /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1178
         LA    @15,1                                               1178
         AH    @15,DARGCNT(,@03)                                   1178
         STH   @15,DARGCNT(,@03)                                   1178
*           DARGINS(DARGCNT)=3;     /*                       @ZA16116*/
         SLA   @15,3                                               1179
         LA    @14,3                                               1179
         STH   @14,DARGINS-8(@15,@03)                              1179
*           DARGINL(DARGCNT)=4;     /*                       @Y30LB33*/
         LA    @14,4                                               1180
         STH   @14,DARGINL-8(@15,@03)                              1180
*           DARGDTM(DARGCNT)=ADDR(GRPAVGFD);/*               @Y30LB33*/
         LA    @14,GRPAVGFD                                        1181
         ST    @14,DARGDTM-8(@15,@03)                              1181
*         END;                      /*                       @Y30LB33*/
*                                                                  1182
*       /*************************************************************/
*       /*                                                           */
*       /* FIRST SET THE TOTAL SPACE PRINT FIELD             @YM02860*/
*       /* TO ZERO                                           @YM02860*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1183
*       GRPTRNTS=0;                 /*                       @YM02860*/
*                                                                  1183
@RF01175 SLR   @03,@03                                             1183
         ST    @03,GRPTRNTS                                        1183
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE GROUP HAS GENERAL VOLUMES,                 @YM02860*/
*       /* SET UP THE TOTAL SPACE BY ADDING THE              @Y30LB33*/
*       /* NUMBER OF ACTIVE GENERAL VOLUMES IN               @Y30LB33*/
*       /* THE GROUP AND MULTIPLYING BY 404                  @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1184
*       IF GRONGEN>0 THEN           /*                       @Y30LB33*/
         LH    @15,GRONGEN(,GROUPPTR)                              1184
         CR    @15,@03                                             1184
         BNH   @RF01184                                            1184
*         GRPTRNTS=404*GRONGEN;     /*                       @Y30LB33*/
*                                                                  1185
         MH    @15,@CH02520                                        1185
         ST    @15,GRPTRNTS                                        1185
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP RETENTION PERIOD IF NOT                    @Y30LB33*/
*       /* NULL. NULL IS ZERO                                @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1186
*       IF GRORETPD>0&GRORETN=ON THEN                              1186
@RF01184 L     @03,GRORETPD(,GROUPPTR)                             1186
         LTR   @03,@03                                             1186
         BNP   @RF01186                                            1186
         TM    GRORETN(GROUPPTR),B'00000100'                       1186
         BNO   @RF01186                                            1186
*         DO;                       /*                       @Y30LB33*/
*           DARGCNT=DARGCNT+1;      /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1188
         LA    @15,1                                               1188
         AH    @15,DARGCNT(,@03)                                   1188
         STH   @15,DARGCNT(,@03)                                   1188
*           DARGINS(DARGCNT)=2;     /*                       @Y30LB33*/
         SLA   @15,3                                               1189
         LA    @14,2                                               1189
         STH   @14,DARGINS-8(@15,@03)                              1189
*           DARGINL(DARGCNT)=4;     /*                       @Y30LB33*/
         LA    @14,4                                               1190
         STH   @14,DARGINL-8(@15,@03)                              1190
*           DARGDTM(DARGCNT)=ADDR(GRORETPD);/*               @Y30LB33*/
         LA    @14,GRORETPD(,GROUPPTR)                             1191
         ST    @14,DARGDTM-8(@15,@03)                              1191
*         END;                      /*                       @Y30LB33*/
*                                                                  1192
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP PROPER TEXT ENTRY NUMBER                   @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1193
*       IF ADDR(VOLST)>0 THEN                                      1193
@RF01186 L     @03,@PC00001+4                                      1193
         L     @03,FDTPTR+24(,@03)                                 1193
         LTR   @03,@03                                             1193
         BNP   @RF01193                                            1193
*         DARGSENT=UVGRPHD;         /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1194
         MVI   DARGSENT(@03),X'04'                                 1194
*       ELSE                                                       1195
*         DARGSENT=GRPULINE;        /*                       @Y30LB33*/
         B     @RC01193                                            1195
@RF01193 L     @03,DDSTRU                                          1195
         MVI   DARGSENT(@03),X'18'                                 1195
*     END;                          /*                       @Y30LB33*/
*                                                                  1196
@RC01193 DS    0H                                                  1197
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE GROUP THRESHOLD PERCENT IS GREATER THAN ZERO,  @Y30LB33*/
*   /* SET UP THE INSERT TO PRINT IT.                        @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1197
*   IF GROPCENT>0 THEN                                             1197
@RC01152 CLI   GROPCENT(GROUPPTR),0                                1197
         BNH   @RF01197                                            1197
*     DO;                           /*                       @Y30LB33*/
*       DARGCNT=DARGCNT+1;          /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1199
         LA    @15,1                                               1199
         LH    @14,DARGCNT(,@03)                                   1199
         ALR   @14,@15                                             1199
         STH   @14,DARGCNT(,@03)                                   1199
*       DARGINS(DARGCNT)=1;         /*                       @ZA16116*/
         SLA   @14,3                                               1200
         STH   @15,DARGINS-8(@14,@03)                              1200
*       DARGINL(DARGCNT)=1;         /*                       @Y30LB33*/
         STH   @15,DARGINL-8(@14,@03)                              1201
*       DARGDTM(DARGCNT)=ADDR(GROPCENT);/*                   @Y30LB33*/
         LA    @15,GROPCENT(,GROUPPTR)                             1202
         ST    @15,DARGDTM-8(@14,@03)                              1202
*     END;                          /*                       @Y30LB33*/
*                                                                  1203
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT THE GROUP                                       #Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1204
*   CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*                  @Y30LB33*/
*                                                                  1204
@RF01197 L     @03,@PC00001                                        1204
         ST    @03,@AL00001                                        1204
         LA    @15,PRINTME                                         1204
         ST    @15,@AL00001+4                                      1204
         LA    @15,DDSTRU                                          1204
         ST    @15,@AL00001+8                                      1204
         MVI   @AL00001+8,X'80'                                    1204
         L     @15,GDTPRT(,@03)                                    1204
         LA    @01,@AL00001                                        1204
         BALR  @14,@15                                             1204
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE THE SUMMARY TABLE                              @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1205
*   MAINCTR=MAINCTR+1;              /*                       @Y30LB33*/
         LA    @03,1                                               1205
         L     @15,MAINCTR                                         1205
         ALR   @15,@03                                             1205
         ST    @15,MAINCTR                                         1205
*   SUMGPS=SUMGPS+1;                /*                       @Y30LB33*/
         AL    @03,SUMGPS                                          1206
         ST    @03,SUMGPS                                          1206
*                                                                  1207
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH HEADERS FOR THE VOLUME LIST, IF             @Y30LB33*/
*   /* A LIST IS REQUESTED                                   @Y30LB33*/
*   /* AND THE GROUP HAS VOLUMES TO LIST                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1207
*   IF ADDR(VOLST)>0&((ADDR(GNRL)>0&GRONGEN>0)×/*            @Y30LB33*/
*       (ADDR(RSTR)>0&GRONRSTD>0)×  /*                       @Y30LB33*/
*       (ADDR(EXPIR)>0&GRONGEN>0&GRORETN=ON)×/*              @YM02881*/
*       (ADDR(INACT)>0&GRONINAC>0)× /*                       @Y30LB33*/
*       (ADDR(AL)>0&                /*                       @Y30LB33*/
*       (GRONGEN>0×GRONRSTD>0×GRONINAC>0))×/*                @Y30LB33*/
*       (ADDR(ACT)>0&(GRONGEN>0×GRONRSTD>0)))/*              @Y30LB33*/
*     THEN                                                         1207
         SLR   @03,@03                                             1207
         L     @15,@PC00001+4                                      1207
         C     @03,FDTPTR+24(,@15)                                 1207
         BNL   @RF01207                                            1207
         C     @03,FDTPTR+76(,@15)                                 1207
         BNL   @GL00060                                            1207
         CH    @03,GRONGEN(,GROUPPTR)                              1207
         BL    @RT01207                                            1207
@GL00060 SLR   @03,@03                                             1207
         L     @15,@PC00001+4                                      1207
         C     @03,FDTPTR+80(,@15)                                 1207
         BNL   @GL00059                                            1207
         CH    @03,GRONRSTD(,GROUPPTR)                             1207
         BL    @RT01207                                            1207
@GL00059 SLR   @03,@03                                             1207
         L     @15,@PC00001+4                                      1207
         C     @03,FDTPTR+28(,@15)                                 1207
         BNL   @GL00058                                            1207
         CH    @03,GRONGEN(,GROUPPTR)                              1207
         BNL   @GL00058                                            1207
         TM    GRORETN(GROUPPTR),B'00000100'                       1207
         BO    @RT01207                                            1207
@GL00058 SLR   @03,@03                                             1207
         L     @15,@PC00001+4                                      1207
         C     @03,FDTPTR+72(,@15)                                 1207
         BNL   @GL00057                                            1207
         CH    @03,GRONINAC(,GROUPPTR)                             1207
         BL    @RT01207                                            1207
@GL00057 SLR   @03,@03                                             1207
         L     @15,@PC00001+4                                      1207
         C     @03,FDTPTR+36(,@15)                                 1207
         BNL   @GL00056                                            1207
         CH    @03,GRONGEN(,GROUPPTR)                              1207
         BL    @RT01207                                            1207
         CH    @03,GRONRSTD(,GROUPPTR)                             1207
         BL    @RT01207                                            1207
         CH    @03,GRONINAC(,GROUPPTR)                             1207
         BL    @RT01207                                            1207
@GL00056 SLR   @03,@03                                             1207
         L     @15,@PC00001+4                                      1207
         C     @03,FDTPTR+68(,@15)                                 1207
         BNL   @RF01207                                            1207
         CH    @03,GRONGEN(,GROUPPTR)                              1207
         BL    @RT01207                                            1207
         CH    @03,GRONRSTD(,GROUPPTR)                             1207
         BNL   @RF01207                                            1207
@RT01207 DS    0H                                                  1208
*     DO;                           /*                       @Y30LB33*/
*                                                                  1208
*       /*************************************************************/
*       /*                                                           */
*       /* READ IN THE SUBTITLES USING UPRINT                @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1209
*       DARGLIST=DARGLIST&&DARGLIST;/*                       @Y30LB33*/
         L     @03,DDSTRU                                          1209
         XC    DARGLIST(20,@03),DARGLIST(@03)                      1209
*       DARGRETP=ADDR(TITLSPCE);    /*                       @Y30LB33*/
         LA    @15,TITLSPCE                                        1210
         ST    @15,DARGRETP(,@03)                                  1210
*       DARGSMOD=MODLV0;            /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@03),@CC02396                            1211
*       DARGRETL=LENGTH(TITLSPCE);  /*                       @Y30LB33*/
         MVC   DARGRETL(2,@03),@CH02376                            1212
*       IF ADDR(STAT)>0 THEN                                       1213
         L     @15,@PC00001+4                                      1213
         L     @15,FDTPTR+52(,@15)                                 1213
         LTR   @15,@15                                             1213
         BNP   @RF01213                                            1213
*         DARGSENT=VOLSTLE;         /*                       @Y30LB33*/
         MVI   DARGSENT(@03),X'1B'                                 1214
*       ELSE                                                       1215
*         DARGSENT=VOLUTLE;         /*                       @Y30LB33*/
         B     @RC01213                                            1215
@RF01213 L     @03,DDSTRU                                          1215
         MVI   DARGSENT(@03),X'12'                                 1215
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB33*/
*                                                                  1216
@RC01213 L     @03,@PC00001                                        1216
         ST    @03,@AL00001                                        1216
         LA    @15,@CF00117                                        1216
         ST    @15,@AL00001+4                                      1216
         LA    @15,DDSTRU                                          1216
         ST    @15,@AL00001+8                                      1216
         MVI   @AL00001+8,X'80'                                    1216
         L     @15,GDTPRT(,@03)                                    1216
         LA    @01,@AL00001                                        1216
         BALR  @14,@15                                             1216
*       /*************************************************************/
*       /*                                                           */
*       /* RESET THE SUBTITLES AND MAIN TITLE                @Y30LB33*/
*       /* THAT HAVE BEEN ESTABLISHED ALREADY                @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1217
*       CALL AMSTP044(GDTTBL,PRINTME);/*                     @Y30LB33*/
*                                                                  1217
         L     @03,@PC00001                                        1217
         ST    @03,@AL00001                                        1217
         LA    @15,PRINTME                                         1217
         ST    @15,@AL00001+4                                      1217
         MVI   @AL00001+4,X'80'                                    1217
         L     @15,GDTRES(,@03)                                    1217
         LA    @01,@AL00001                                        1217
         BALR  @14,@15                                             1217
*       /*************************************************************/
*       /*                                                           */
*       /* THEN ESTABLISH THE NEW ONES USING                 @Y30LB33*/
*       /* UESTA                                             @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1218
*       PCSTLP=ADDR(TITLSPCE);      /*                       @Y30LB33*/
         LA    @03,TITLSPCE                                        1218
         ST    @03,PCSTLP                                          1218
*       IF ADDR(STAT)>0 THEN                                       1219
         L     @03,@PC00001+4                                      1219
         L     @03,FDTPTR+52(,@03)                                 1219
         LTR   @03,@03                                             1219
         BNP   @RF01219                                            1219
*         PCSTLC=2;                 /*                       @Y30LB33*/
         MVC   PCSTLC(2),@CH00156                                  1220
*       ELSE                                                       1221
*         PCSTLC=3;                 /*                       @Y30LB33*/
         B     @RC01219                                            1221
@RF01219 MVC   PCSTLC(2),@CH00165                                  1221
*       CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*               @Y30LB33*/
@RC01219 L     @03,@PC00001                                        1222
         ST    @03,@AL00001                                        1222
         LA    @15,PRINTME                                         1222
         ST    @15,@AL00001+4                                      1222
         LA    @15,PCARG                                           1222
         ST    @15,@AL00001+8                                      1222
         L     @15,GDTESA(,@03)                                    1222
         LA    @01,@AL00001                                        1222
         BALR  @14,@15                                             1222
*     END;                          /*                       @Y30LB33*/
*   RETURN CODE(0);                 /*                       @Y30LB33*/
@RF01207 SLR   @15,@15                                             1224
@EL00014 DS    0H                                                  1224
@EF00014 DS    0H                                                  1224
@ER00014 L     @14,@SA00014                                        1224
         BR    @14                                                 1224
*   END GRPPRNT;                    /*                       @Y30LB33*/
*                                                                  1226
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - GRPRDR                               @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - READ A GROUP RECORD. DETERMINE IF          @Y30LB33*/
*   /* END-OF-FILE HAS OCCURRED OR IF A                      @Y30LB33*/
*   /* SPECIFIC GROUP WAS REQUESTED. IF END-OF               @Y30LB33*/
*   /* -FILE OCCURRED SEARCHING FOR A SPECIFIC               @Y30LB33*/
*   /* GROUP, ISSUE ERROR MESSAGE IDC2079I AND               @Y30LB33*/
*   /* RETURN WITH A CODE OF 4. IF END-OF-FILE               @Y30LB33*/
*   /* OCCURRED WHILE READING THROUGH THE                    @Y30LB33*/
*   /* GROUPS, SIMPLY SET THE CODE TO INDICATE               @Y30LB33*/
*   /* END OF GROUPS. EITHER ERROR ALLOWS FOR                @Y30LB33*/
*   /* CONTINUATION OF THE LISTMSVI PROCESSING.              @Y30LB33*/
*   /* ANY OTHER ERROR RESULTS IN TERMINATION                @Y30LB33*/
*   /* OF LISTMSVI                                           @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - READ REQUEST BLOCK                            @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO AND LASTCOND OF          @Y30LB33*/
*   /* ZERO FOR NORMAL PROCESSING. RETURN CODE               @Y30LB33*/
*   /* OF 4 AND LASTCOND OF ZERO FOR                         @Y30LB33*/
*   /* END-OF-GROUPS ON A READ-NEXT REQUEST.                 @Y30LB33*/
*   /* RETURN CODE OF 4 AND LASTCOND OF 8                    @Y30LB33*/
*   /* FOR A GROUP NOT FOUND ON A READ-DIRECT                @Y30LB33*/
*   /* RETURN CODE OF 16 AND LASTCOND OF 8                   @Y30LB33*/
*   /* FOR A TERMINATION ERROR                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1226
*GRPRDR:                                                           1226
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
GRPRDR   ST    @14,@SA00015                                        1226
*   OLDERID2=NEWERID2;                                             1227
         L     @04,@PC00001                                        1227
         L     @04,GDTTR2(,@04)                                    1227
         MVC   @TS00001(95),NEWERID2(@04)                          1227
         MVC   OLDERID2(95,@04),@TS00001                           1227
*   NEWID2='LVOA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02524                              1228
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  1229
         SLR   TESTRC,TESTRC                                       1229
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE USER REQUESTED PASTHRESHOLD, PUT IT            @Y30LB33*/
*   /* IN THE REQUEST BLOCK TO SELECT ONLY THOSE             @Y30LB33*/
*   /* GROUPS THAT ARE PAST THEIR THRESHOLD                  @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1230
*   IF ADDR(PT)>0 THEN                                             1230
         L     @06,@PC00001+4                                      1230
         L     @06,FDTPTR+20(,@06)                                 1230
         LTR   @06,@06                                             1230
         BNP   @RF01230                                            1230
*     RVVTHOLD=ON;                  /*                       @Y30LB33*/
*                                                                  1231
         OI    RVVTHOLD(RVVIPTR),B'01000000'                       1231
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL DIRECTRD WITH THE INPUT REQUEST BLOCK            @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1232
*   SETRC=0;                        /*                       @Y30LB33*/
@RF01230 SLR   @06,@06                                             1232
         STH   @06,SETRC                                           1232
*   IF GDTDBG=NULLPTR THEN                                         1233
         L     @04,@PC00001                                        1233
         C     @06,GDTDBG(,@04)                                    1233
         BE    @RT01233                                            1233
*     ;                                                            1234
*   ELSE                                                           1235
*     DO;                                                          1235
*       DMPINDEX=ADDR(DUMPAREA);    /*                       @Y30LB33*/
         LA    DMPINDEX,DUMPAREA                                   1236
*       DMPITMNM='RVVI';                                           1237
         MVI   DMPITMNM+4(DMPINDEX),C' '                           1237
         MVC   DMPITMNM+5(3,DMPINDEX),DMPITMNM+4(DMPINDEX)         1237
         MVC   DMPITMNM(4,DMPINDEX),@CC02500                       1237
*       DMPITMPT=ADDR(RVVI);                                       1238
         ST    RVVIPTR,DMPITMPT(,DMPINDEX)                         1238
*       DMPITMLN=LENGTH(RVVI);                                     1239
         MVC   DMPITMLN(2,DMPINDEX),@CH02621                       1239
*       DMPITMTP='H';                                              1240
         MVI   DMPITMTP(DMPINDEX),C'H'                             1240
*       DMPINDEX=DMPINDEX+DMPELEMT; /*                       @Y30LB33*/
         AL    DMPINDEX,@CF00507                                   1241
*       DMPTRM=DMPTRMVL;                                           1242
         MVI   DMPTRM(DMPINDEX),X'FF'                              1242
*     END;                          /*                       @Y30LB33*/
*   IF GDTDBG=NULLPTR THEN                                         1244
@RT01233 L     @06,@PC00001                                        1244
         L     @06,GDTDBG(,@06)                                    1244
         LTR   @06,@06                                             1244
         BZ    @RT01244                                            1244
*     ;                                                            1245
*   ELSE                                                           1246
*     CALL IDCDB010(GDTTBL,'LVOB',DUMPADDR);/*               @Y30LB33*/
         L     @06,@PC00001                                        1246
         ST    @06,@AL00001                                        1246
         LA    @04,@CC02525                                        1246
         ST    @04,@AL00001+4                                      1246
         LA    @04,DUMPADDR                                        1246
         ST    @04,@AL00001+8                                      1246
         MVI   @AL00001+8,X'80'                                    1246
         L     @15,GDTDBG(,@06)                                    1246
         LA    @01,@AL00001                                        1246
         BALR  @14,@15                                             1246
*   CALL DIRECTRD;                  /*                       @ZA27752*/
@RT01244 BAL   @14,DIRECTRD                                        1247
*   RESPECIFY                                                      1248
*     RTNREG RSTD;                                                 1248
*   TESTRC=RTNREG;                                                 1249
         LR    TESTRC,RTNREG                                       1249
*   RESPECIFY                                                      1250
*     RTNREG UNRSTD;                /*                       @Y30LB33*/
*                                                                  1251
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR AN ERROR                                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1251
*   IF TESTRC=4 THEN                                               1251
         C     TESTRC,@CF00043                                     1251
         BNE   @RF01251                                            1251
*     DO;                           /*                       @Y30LB33*/
*                                                                  1252
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE ARE READING DIRECT, AND WE GET A            @Y30LB33*/
*       /* NOT-FOUND, CALL SSCMSG TO PRINT THE REASON        @Y30LB33*/
*       /* THEN PRINT MESSAGE IDC2079I                       @Y30LB33*/
*       /* AND SET THE RETURN CODE TO 4 AND LASTCOND         @Y30LB33*/
*       /* TO 8                                              @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1253
*       IF RVVRDR=ON&REASON=NOTFOUND THEN                          1253
         TM    RVVRDR(RVVIPTR),B'10000000'                         1253
         BNO   @RF01253                                            1253
         CLC   REASON(4),@CF02312                                  1253
         BNE   @RF01253                                            1253
*         DO;                       /*                       @Y30LB33*/
*           CALL SSCMSG(REASON);    /*                       @Y30LB33*/
         LA    @06,REASON                                          1255
         ST    @06,@AL00001                                        1255
         LA    @01,@AL00001                                        1255
         BAL   @14,SSCMSG                                          1255
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @Y30LB33*/
         L     @06,DDSTRU                                          1256
         XC    DARGLIST(20,@06),DARGLIST(@06)                      1256
*           DARGSMOD=MODCMN;        /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@06),@CC02400                            1257
*           DARGSENT=MSG2079I;      /*                       @Y30LB33*/
         MVI   DARGSENT(@06),X'1B'                                 1258
*           DARGDBP=ADDR(RVVGROUP); /*                       @Y30LB33*/
         LA    @04,RVVGROUP(,RVVIPTR)                              1259
         ST    @04,DARGDBP(,@06)                                   1259
*           DARGILP=8;              /*                       @Y30LB33*/
         MVC   DARGILP(2,@06),@CH00035                             1260
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Y30LB33*/
         L     @06,@PC00001                                        1261
         ST    @06,@AL00001                                        1261
         LA    @04,@CF00117                                        1261
         ST    @04,@AL00001+4                                      1261
         LA    @04,DDSTRU                                          1261
         ST    @04,@AL00001+8                                      1261
         MVI   @AL00001+8,X'80'                                    1261
         L     @15,GDTPRT(,@06)                                    1261
         LA    @01,@AL00001                                        1261
         BALR  @14,@15                                             1261
*           LASTCOND=LASTCC08;      /*                       @Y30LB33*/
         L     @06,@PC00001+8                                      1262
         MVC   LASTCOND(2,@06),@CH00035                            1262
*           SETRC=04;               /*                       @Y30LB33*/
         MVC   SETRC(2),@CH00043                                   1263
*         END;                      /*                       @Y30LB33*/
*                                                                  1264
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE GET A DOESN'T-MEET-TESTS, SET               @Y30LB33*/
*       /* RETURN CODE TO 4                                  @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1265
*       IF REASON=TSTNOTMT THEN                                    1265
@RF01253 CLC   REASON(4),@CF02314                                  1265
         BNE   @RF01265                                            1265
*         SETRC=4;                  /*                       @Y30LB33*/
*                                                                  1266
         MVC   SETRC(2),@CH00043                                   1266
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE WERE READING NEXT AND GOT                   @Y30LB33*/
*       /* END-OF-GROUPS, SET RETURN CODE TO 4               @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1267
*       IF RVVRDNR=ON&REASON=NOTFOUND/*                      @Y30LB33*/
*         THEN                                                     1267
@RF01265 TM    RVVRDNR(RVVIPTR),B'01000000'                        1267
         BNO   @RF01267                                            1267
         CLC   REASON(4),@CF02312                                  1267
         BNE   @RF01267                                            1267
*         SETRC=4;                  /*                       @Y30LB33*/
*                                                                  1268
         MVC   SETRC(2),@CH00043                                   1268
*       /*************************************************************/
*       /*                                                           */
*       /* BUT IF NONE OF THE ABOVE, THEN WE HAVE            @Y30LB33*/
*       /* AN ERROR, SO CALL SSCMSG TO PRINT THE             @Y30LB33*/
*       /* REASON AND SET THE RETURN CODES                   @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1269
*       IF REASON^=NOTFOUND&        /*                       @ZA26069*/
*           REASON^=TSTNOTMT THEN   /*                       @ZA26069*/
@RF01267 L     @06,REASON                                          1269
         C     @06,@CF02312                                        1269
         BE    @RF01269                                            1269
         C     @06,@CF02314                                        1269
         BE    @RF01269                                            1269
*         DO;                       /*                       @ZA26069*/
*           SETRC=16;               /*                       @Y30LB33*/
         MVC   SETRC(2),@CH00507                                   1271
*           LASTCOND=LASTCC08;      /*                       @Y30LB33*/
         L     @06,@PC00001+8                                      1272
         MVC   LASTCOND(2,@06),@CH00035                            1272
*           CALL SSCMSG(REASON);    /*                       @Y30LB33*/
         LA    @06,REASON                                          1273
         ST    @06,@AL00001                                        1273
         LA    @01,@AL00001                                        1273
         BAL   @14,SSCMSG                                          1273
*         END;                      /*                       @Y30LB33*/
*     END;                          /*                       @Y30LB33*/
@RF01269 DS    0H                                                  1276
*   RETURN CODE(SETRC);             /*                       @Y30LB33*/
@RF01251 LH    @15,SETRC                                           1276
@EL00015 DS    0H                                                  1276
@EF00015 DS    0H                                                  1276
@ER00015 L     @14,@SA00015                                        1276
         BR    @14                                                 1276
*   END GRPRDR;                     /*                       @Y30LB33*/
*                                                                  1278
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - DUPPROC                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - TO READ AND PRINT DUPLICATE VOLUME         @ZA00676*/
*   /* RECORDS. THE RECORDS ARE READ UNTIL A                 @ZA00676*/
*   /* RETURN CODE OF 4 (END OF VOLUME), OR                  @ZA00676*/
*   /* AN ERROR RETURN CODE. IF THE INPUT READ               @ZA00676*/
*   /* REQUEST BLOCK HAS THE RVVDVOL FLAG ON,                @ZA00676*/
*   /* END-OF-FILE WILL BE RETURNED AFTER ALL                @ZA00676*/
*   /* RECORDS OF ONE VOLUME ARE PROCESSED. IF               @ZA00676*/
*   /* THAT FLAG IS OFF, THE END-OF-FILE WILL                @ZA00676*/
*   /* BE RETURNED AFTER ALL DUPLICATE RECORDS               @ZA00676*/
*   /* HAVE BEEN PROCESSED.                                  @ZA00676*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - LASTCOND, READ REQUEST BLOCK, AND THE         @Y30LB33*/
*   /* FDTTBL                                                @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE AND LASTCOND OF ZERO             @Y30LB33*/
*   /* FOR NORMAL PROCESSING, RETURN CODE                    @Y30LB33*/
*   /* OF 4 AND LASTCOND OF ZERO FOR END                     @Y30LB33*/
*   /* OF FILE. RETURN CODE OF 16 AND                        @Y30LB33*/
*   /* LASTCOND OF 8 FOR A TERMINATION ERROR.                @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1278
*DUPPROC:                                                          1278
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
DUPPROC  ST    @14,@SA00016                                        1278
*   OLDERID2=NEWERID2;                                             1279
         L     @04,@PC00001                                        1279
         L     @04,GDTTR2(,@04)                                    1279
         MVC   @TS00001(95),NEWERID2(@04)                          1279
         MVC   OLDERID2(95,@04),@TS00001                           1279
*   NEWID2='LVPA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02529                              1280
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  1281
         SLR   TESTRC,TESTRC                                       1281
*   /*****************************************************************/
*   /*                                                               */
*   /* READ DUPLICATE VOLUME RECORDS AND PRINT               @Y30LB33*/
*   /* EACH ONE UNTIL AN END-OF-FILE OR RECORD-              @Y30LB33*/
*   /* NOT FOUND, OR ERROR CONDITION                         @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1282
*   DO WHILE(TESTRC=0);             /*                       @Y30LB33*/
*                                                                  1282
         B     @DE01282                                            1282
@DL01282 DS    0H                                                  1283
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE VOLUME READER TO READ THE RECORD           @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1283
*     CALL VOLRDR;                  /*                       @Y30LB33*/
         BAL   @14,VOLRDR                                          1283
*     RESPECIFY                                                    1284
*       RTNREG RSTD;                                               1284
*     TESTRC=RTNREG;                                               1285
         LR    TESTRC,RTNREG                                       1285
*     RESPECIFY                                                    1286
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  1286
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE VOLUME FORMATTER TO CONVERT THE            @Y30LB33*/
*     /* RECORD FOR PRINTING                                 @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1287
*     IF TESTRC=0 THEN                                             1287
         LTR   TESTRC,TESTRC                                       1287
         BNZ   @RF01287                                            1287
*       CALL VOLFMTR;               /*                       @Y30LB33*/
         BAL   @14,VOLFMTR                                         1288
*     RESPECIFY                                                    1289
*       RTNREG RSTD;                                               1289
@RF01287 DS    0H                                                  1290
*     TESTRC=RTNREG;                                               1290
         LR    TESTRC,RTNREG                                       1290
*     RESPECIFY                                                    1291
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  1291
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE VOLUME PRINTER TO PRINT THE                @Y30LB33*/
*     /* RECORD                                              @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1292
*     IF TESTRC=0 THEN                                             1292
         LTR   TESTRC,TESTRC                                       1292
         BNZ   @RF01292                                            1292
*       CALL VOLPRNT;               /*                       @Y30LB33*/
         BAL   @14,VOLPRNT                                         1293
*     RESPECIFY                                                    1294
*       RTNREG RSTD;                                               1294
@RF01292 DS    0H                                                  1295
*     TESTRC=RTNREG;                                               1295
         LR    TESTRC,RTNREG                                       1295
*     RESPECIFY                                                    1296
*       RTNREG UNRSTD;              /*                       @Y30LB33*/
*                                                                  1296
*     /***************************************************************/
*     /*                                                             */
*     /* SET UP THE REQUEST BLOCK TO READ THE NEXT           @Y30LB33*/
*     /* RECORD. EVEN THOUGH WE ARE PRINTING ONLY            @Y30LB33*/
*     /* ONE VOLUME'S DUPLICATES, WE MUST READ               @Y30LB33*/
*     /* UNTIL END-OF-FILE SINCE THERE CAN BE MORE           @Y30LB33*/
*     /* THAN ONE DUPLICATE OF A VOLUME                      @Y30LB33*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1297
*     IF TESTRC=0 THEN                                             1297
         LTR   TESTRC,TESTRC                                       1297
         BNZ   @RF01297                                            1297
*       DO;                         /*                       @Y30LB33*/
*         RVVSVOL=ON;               /*                       @Y30LB33*/
         OI    RVVSVOL(RVVIPTR),B'00000001'                        1299
*         RVVRDR=OFF;               /*                       @Y30LB33*/
*         RVVRDNR=ON;               /*                       @Y30LB33*/
         OI    RVVRDNR(RVVIPTR),B'01000000'                        1301
         NI    RVVRDR(RVVIPTR),B'01111111'                         1301
*         RVVSDUP=ON;               /*                       @Y30LB33*/
         OI    RVVSDUP(RVVIPTR),B'00000010'                        1302
*         RVVOLUME=DUPSERNO;        /*                       @Y30LB33*/
         L     @04,DUPVPTR                                         1303
         MVC   RVVOLUME(6,RVVIPTR),DUPSERNO(@04)                   1303
*         RVVDUPID=DUPID;           /*                       @Y30LB33*/
         MVC   RVVDUPID(1,RVVIPTR),DUPID+1(@04)                    1304
*       END;                        /*                       @Y30LB33*/
*   END;                            /*                       @Y30LB33*/
@RF01297 DS    0H                                                  1306
@DE01282 LTR   TESTRC,TESTRC                                       1306
         BZ    @DL01282                                            1306
*   RETURN CODE(TESTRC);            /*                       @Y30LB33*/
         LR    @15,TESTRC                                          1307
@EL00016 DS    0H                                                  1307
@EF00016 DS    0H                                                  1307
@ER00016 L     @14,@SA00016                                        1307
         BR    @14                                                 1307
*   END DUPPROC;                    /*                       @Y30LB33*/
*                                                                  1309
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - VOLFMTR                              @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* FUNCTION - TO PREPARE THE VOLUME DATA FOR             @Y30LB33*/
*   /* PRINTING BY CREATING A TEXT PROCESSOR                 @Y30LB33*/
*   /* ARGUMENT LIST AND CONVERTING BIT                      @Y30LB33*/
*   /* PATTERNS TO PRINTABLE FIELDS                          @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* INPUT - VOLUME OR DUPLICATE VOLUME RECORD             @Y30LB33*/
*   /* AND THE FDTTBL                                        @Y30LB33*/
*   /*                                                       @Y30LB33*/
*   /* OUTPUT - RETURN CODE OF ZERO                          @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1309
*VOLFMTR:                                                          1309
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
VOLFMTR  ST    @14,12(,@13)                                        1309
*   OLDERID2=NEWERID2;                                             1310
         L     @04,@PC00001                                        1310
         L     @04,GDTTR2(,@04)                                    1310
         MVC   @TS00001(95),NEWERID2(@04)                          1310
         MVC   OLDERID2(95,@04),@TS00001                           1310
*   NEWID2='LVRA';                  /*                       @Y30LB33*/
         MVC   NEWID2(4,@04),@CC02533                              1311
*   TESTRC=0;                       /*                       @Y30LB33*/
*                                                                  1312
         SLR   TESTRC,TESTRC                                       1312
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE DARGLIST                               @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1313
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1313
         XC    DARGLIST(20,@06),DARGLIST(@06)                      1313
*   DARGSMOD=MODLV0;                /*                       @Y30LB33*/
         MVC   DARGSMOD(3,@06),@CC02396                            1314
*   DARGDBP=ADDR(VOLAREA);          /*                       @Y30LB33*/
         LA    @04,VOLAREA                                         1315
         ST    @04,DARGDBP(,@06)                                   1315
*   DARGILP=LENGTH(VOLAREA);        /*                       @Y30LB33*/
*                                                                  1316
         MVC   DARGILP(2,@06),@CH02625                             1316
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR A BASE VOLUME OR BASE                        @ZDR2056*/
*   /* VOLUME PLACE HOLDER                                   @ZDR2056*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1317
*   IF BCDBASE=ON×BASHOLD=ON THEN                                  1317
         L     @06,BCDVPTR                                         1317
         TM    BCDBASE(@06),B'00100000'                            1317
         BO    @RT01317                                            1317
         TM    BASHOLD(BASEVPTR),B'10000000'                       1317
         BNO   @RF01317                                            1317
@RT01317 DS    0H                                                  1318
*     DO;                           /*                       @ZDR2056*/
*                                                                  1319
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP A USAGE REPORT                             @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1319
*       IF ADDR(USAGE)>0 THEN                                      1319
         L     @06,@PC00001+4                                      1319
         L     @06,FDTPTR+56(,@06)                                 1319
         LTR   @06,@06                                             1319
         BNP   @RF01319                                            1319
*         DO;                       /*                       @Y30LB33*/
*           DARGSENT=VOLULINE;      /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1321
         MVI   DARGSENT(@06),X'13'                                 1321
*           COUNTER=0;              /*                       @G24LB37*/
*                                                                  1322
         SLR   COUNTER,COUNTER                                     1322
*           /*********************************************************/
*           /*                                                       */
*           /* IF SPACE-DOWN-LEVEL FLAG IS ON,               @Y30LB33*/
*           /* PUT YES INTO PRINT FIELD, ELSE BLANK          @G24LB37*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1323
*           IF BASDLSF=ON THEN                                     1323
         TM    BASDLSF(BASEVPTR),B'10000000'                       1323
         BNO   @RF01323                                            1323
*             VOLTRNS1=YESCHAR;     /*                       @G24LB37*/
         MVC   VOLTRNS1(3),YESCHAR                                 1324
*           ELSE                                                   1325
*             VOLTRNS1='   ';       /*                       @G24LB37*/
*                                                                  1325
         B     @RC01323                                            1325
@RF01323 MVC   VOLTRNS1(3),@CC02534                                1325
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE VOLUME IS MOUNTED THEN COUNT           @G24LB37*/
*           /* THE NUMBER OF CPU'S TO WHICH THE              @G24LB37*/
*           /* VOLUME IS MOUNTED TO PRINT IT                 @G24LB37*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1326
*           IF BASCPUID>0 THEN                                     1326
@RC01323 CLC   BASCPUID(2,BASEVPTR),@CH00117                       1326
         BNH   @RF01326                                            1326
*             DO;                   /*                       @G24LB37*/
*               DO X=1 TO 8;        /*                       @G24LB37*/
         LA    X,1                                                 1328
@DL01328 DS    0H                                                  1329
*                 IF(BITMASK(X)&CPUID1)^='00'X THEN                1329
         LA    @06,BITMASK-1(X)                                    1329
         MVC   @TS00001(1),0(@06)                                  1329
         NC    @TS00001(1),CPUID1(BASEVPTR)                        1329
         CLI   @TS00001,X'00'                                      1329
         BE    @RF01329                                            1329
*                   COUNTER=COUNTER+1;/*                     @G24LB37*/
         AL    COUNTER,@CF00221                                    1330
*               END;                /*                       @G24LB37*/
@RF01329 AL    X,@CF00221                                          1331
         C     X,@CF00035                                          1331
         BNH   @DL01328                                            1331
*               DO X=1 TO 8;        /*                       @G24LB37*/
         LA    X,1                                                 1332
@DL01332 DS    0H                                                  1333
*                 IF(BITMASK(X)&CPUID2)^='00'X THEN                1333
         LA    @06,BITMASK-1(X)                                    1333
         MVC   @TS00001(1),0(@06)                                  1333
         NC    @TS00001(1),CPUID2(BASEVPTR)                        1333
         CLI   @TS00001,X'00'                                      1333
         BE    @RF01333                                            1333
*                   COUNTER=COUNTER+1;/*                     @G24LB37*/
         AL    COUNTER,@CF00221                                    1334
*               END;                /*                       @G24LB37*/
@RF01333 AL    X,@CF00221                                          1335
         C     X,@CF00035                                          1335
         BNH   @DL01332                                            1335
*               VOLTRNS2=COUNTER;   /*                       @G24LB37*/
         STCM  COUNTER,3,VOLTRNS2                                  1336
*             END;                  /*                       @G24LB37*/
*           ELSE                                                   1338
*             VOLTRNS2='0000'X;     /*                       @G24LB37*/
         B     @RC01326                                            1338
@RF01326 MVC   VOLTRNS2(2),@CB02535                                1338
*                                                                  1339
*           /*********************************************************/
*           /*                                                       */
*           /* INSERT FREE SPACE FIELD IF NOT NULL           #Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1339
*           IF BASFRESP^='FFFF'X THEN                              1339
@RC01326 CLC   BASFRESP(2,BASEVPTR),@CH02536                       1339
         BE    @RF01339                                            1339
*             DO;                   /*                       @Y30LB33*/
*               DARGCNT=DARGCNT+1;  /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1341
         LA    @04,1                                               1341
         LH    @03,DARGCNT(,@06)                                   1341
         ALR   @03,@04                                             1341
         STH   @03,DARGCNT(,@06)                                   1341
*               DARGINS(DARGCNT)=1; /*                       @Y30LB33*/
         SLA   @03,3                                               1342
         STH   @04,DARGINS-8(@03,@06)                              1342
*               DARGINL(DARGCNT)=2; /*                       @Y30LB33*/
         LA    @04,2                                               1343
         STH   @04,DARGINL-8(@03,@06)                              1343
*               DARGDTM(DARGCNT)=ADDR(BASFRESP);/*           @Y30LB33*/
         LA    @04,BASFRESP(,BASEVPTR)                             1344
         ST    @04,DARGDTM-8(@03,@06)                              1344
*             END;                  /*                       @Y30LB33*/
*                                                                  1345
*           /*********************************************************/
*           /*                                                       */
*           /* INSERT LARGEST FREE EXTENT IF                 @Y30LB33*/
*           /* NOT NULL                                      @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1346
*           IF BASLEXT^='FFFF'X THEN                               1346
@RF01339 CLC   BASLEXT(2,BASEVPTR),@CH02536                        1346
         BE    @RF01346                                            1346
*             DO;                   /*                       @Y30LB33*/
*               DARGCNT=DARGCNT+1;  /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1348
         LA    @04,1                                               1348
         AH    @04,DARGCNT(,@06)                                   1348
         STH   @04,DARGCNT(,@06)                                   1348
*               DARGINS(DARGCNT)=2; /*                       @Y30LB33*/
         LA    @03,2                                               1349
         SLA   @04,3                                               1349
         STH   @03,DARGINS-8(@04,@06)                              1349
*               DARGINL(DARGCNT)=2; /*                       @Y30LB33*/
         STH   @03,DARGINL-8(@04,@06)                              1350
*               DARGDTM(DARGCNT)=ADDR(BASLEXT);/*            @Y30LB33*/
         LA    @03,BASLEXT(,BASEVPTR)                              1351
         ST    @03,DARGDTM-8(@04,@06)                              1351
*             END;                  /*                       @Y30LB33*/
*                                                                  1352
*           /*********************************************************/
*           /*                                                       */
*           /* INSERT NUMBER OF FREE EXTENTS IF              @Y30LB33*/
*           /* NOT NULL                                      @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1353
*           IF BASFREXT^='FFFF'X THEN                              1353
@RF01346 CLC   BASFREXT(4,BASEVPTR),@CF02536                       1353
         BE    @RF01353                                            1353
*             DO;                   /*                       @Y30LB33*/
*               DARGCNT=DARGCNT+1;  /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1355
         LA    @04,1                                               1355
         AH    @04,DARGCNT(,@06)                                   1355
         STH   @04,DARGCNT(,@06)                                   1355
*               DARGINS(DARGCNT)=3; /*                       @Y30LB33*/
         SLA   @04,3                                               1356
         LA    @03,3                                               1356
         STH   @03,DARGINS-8(@04,@06)                              1356
*               DARGINL(DARGCNT)=4; /*                       @Y30LB33*/
         LA    @03,4                                               1357
         STH   @03,DARGINL-8(@04,@06)                              1357
*               DARGDTM(DARGCNT)=ADDR(BASFREXT);/*           @Y30LB33*/
         LA    @03,BASFREXT(,BASEVPTR)                             1358
         ST    @03,DARGDTM-8(@04,@06)                              1358
*             END;                  /*                       @Y30LB33*/
*                                                                  1359
*           /*********************************************************/
*           /*                                                       */
*           /* CALCULATE AND INSERT THE AVERAGE FREE         @Y30LB33*/
*           /* EXTENT IF THE NUMBER OF FREE EXTENTS          @Y30LB33*/
*           /* AND AMOUNT OF FREE SPACE IS NOT NULL          @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1360
*           IF BASFREXT>0&BASFRESP^='FFFF'X&BASFREXT^='FFFF'X THEN 1360
@RF01353 L     @06,BASFREXT(,BASEVPTR)                             1360
         CL    @06,@CF00117                                        1360
         BNH   @RF01360                                            1360
         LH    @04,BASFRESP(,BASEVPTR)                             1360
         N     @04,@CF02648                                        1360
         C     @04,@CF02536                                        1360
         BE    @RF01360                                            1360
         CL    @06,@CF02536                                        1360
         BE    @RF01360                                            1360
*             DO;                   /*                       @Y30LB33*/
*               DARGCNT=DARGCNT+1;  /*                       @Y30LB33*/
         L     @03,DDSTRU                                          1362
         LA    @15,1                                               1362
         AH    @15,DARGCNT(,@03)                                   1362
         STH   @15,DARGCNT(,@03)                                   1362
*               DARGINS(DARGCNT)=4; /*                       @Y30LB33*/
         LA    @14,4                                               1363
         SLA   @15,3                                               1363
         STH   @14,DARGINS-8(@15,@03)                              1363
*               DARGINL(DARGCNT)=4; /*                       @Y30LB33*/
         STH   @14,DARGINL-8(@15,@03)                              1364
*               DARGDTM(DARGCNT)=ADDR(VOLAVGFD);/*           @Y30LB33*/
         LA    @14,VOLAVGFD                                        1365
         ST    @14,DARGDTM-8(@15,@03)                              1365
*               VOLAVGFD=BASFRESP/BASFREXT;/*                @Y30LB33*/
         LR    @01,@04                                             1366
         SLR   @00,@00                                             1366
         DR    @00,@06                                             1366
         ST    @01,VOLAVGFD                                        1366
*             END;                  /*                       @Y30LB33*/
*                                                                  1367
*           /*********************************************************/
*           /*                                                       */
*           /* INSERT THE LAST MOUNT DATE IF NOT             @Y30LB33*/
*           /* NULL                                          @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1368
*           IF BASDLMTD^='    ' THEN                               1368
@RF01360 CLC   BASDLMTD(4,BASEVPTR),@CC02511                       1368
         BE    @RF01368                                            1368
*             DO;                   /*                       @Y30LB33*/
*               DARGCNT=DARGCNT+1;  /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1370
         LA    @04,1                                               1370
         AH    @04,DARGCNT(,@06)                                   1370
         STH   @04,DARGCNT(,@06)                                   1370
*               DARGINS(DARGCNT)=5; /*                       @Y30LB33*/
         SLA   @04,3                                               1371
         LA    @03,5                                               1371
         STH   @03,DARGINS-8(@04,@06)                              1371
*               DARGINL(DARGCNT)=4; /*                       @Y30LB33*/
         LA    @03,4                                               1372
         STH   @03,DARGINL-8(@04,@06)                              1372
*               DARGDTM(DARGCNT)=ADDR(BASDLMTD);/*           @Y30LB33*/
         LA    @03,BASDLMTD(,BASEVPTR)                             1373
         ST    @03,DARGDTM-8(@04,@06)                              1373
*             END;                  /*                       @Y30LB33*/
*                                                                  1374
*           /*********************************************************/
*           /*                                                       */
*           /* INSERT THE EXPIRATION DATE IF NOT             @Y30LB33*/
*           /* NULL                                          @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1375
*           IF BASEXPDT^='FFFFFFFF'X THEN                          1375
@RF01368 CLC   BASEXPDT(4,BASEVPTR),@CB02537                       1375
         BE    @RF01375                                            1375
*             DO;                   /*                       @Y30LB33*/
*               DARGCNT=DARGCNT+1;  /*                       @Y30LB33*/
         L     @06,DDSTRU                                          1377
         LA    @04,1                                               1377
         AH    @04,DARGCNT(,@06)                                   1377
         STH   @04,DARGCNT(,@06)                                   1377
*               DARGINS(DARGCNT)=6; /*                       @Y30LB33*/
         SLA   @04,3                                               1378
         LA    @03,6                                               1378
         STH   @03,DARGINS-8(@04,@06)                              1378
*               DARGINL(DARGCNT)=4; /*                       @Y30LB33*/
         LA    @03,4                                               1379
         STH   @03,DARGINL-8(@04,@06)                              1379
*               DARGDTM(DARGCNT)=ADDR(BASEXPDT);/*           @Y30LB33*/
         LA    @03,BASEXPDT(,BASEVPTR)                             1380
         ST    @03,DARGDTM-8(@04,@06)                              1380
*             END;                  /*                       @Y30LB33*/
*         END;                      /* END OF USAGE REPORT         1382
*                                      PREPARATION           @Y30LB33*/
*                                                                  1383
*       /*************************************************************/
*       /*                                                           */
*       /* IF NOT A USAGE REPORT, PREPARE A STATUS           @Y30LB33*/
*       /* REPORT                                            @Y30LB33*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1383
*       ELSE                                                       1383
*         DO;                       /*                       @Y30LB33*/
         B     @RC01319                                            1383
@RF01319 DS    0H                                                  1384
*           DARGSENT=VOLSLINE;      /*                       @Y30LB33*/
*                                                                  1384
         L     @06,DDSTRU                                          1384
         MVI   DARGSENT(@06),X'1C'                                 1384
*           /*********************************************************/
*           /*                                                       */
*           /* TRANSLATE THE STATE FIELD                     @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1385
*           VOLTRNST='     ';       /*                       @Y30LB33*/
         MVC   VOLTRNST(5),@CC02538                                1385
*           IF BASHOLD=OFF THEN                                    1386
         TM    BASHOLD(BASEVPTR),B'10000000'                       1386
         BNZ   @RF01386                                            1386
*             DO;                   /*                       @ZDR2056*/
*               IF BASINAC=ON THEN  /*                       @Y30LB33*/
         TM    BASINAC(BASEVPTR),B'00000100'                       1388
         BNO   @RF01388                                            1388
*                 VOLTRNST=INACHAR; /*                       @Y30LB33*/
         MVC   VOLTRNST(5),INACHAR                                 1389
*               ELSE                                               1390
*                 VOLTRNST=ACTCHAR; /*                       @Y30LB33*/
         B     @RC01388                                            1390
@RF01388 MVC   VOLTRNST(5),ACTCHAR                                 1390
*             END;                  /*                       @ZDR2056*/
*           ELSE                                                   1392
*             VOLTRNST=PHOLDER;     /*                       @ZDR2056*/
*                                                                  1392
         B     @RC01386                                            1392
@RF01386 MVC   VOLTRNST(5),PHOLDER                                 1392
*           /*********************************************************/
*           /*                                                       */
*           /* TRANSLATE THE TYPE FIELD                      @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1393
*           VOLTRNTY='    ';        /*                       @Y30LB33*/
@RC01386 MVC   VOLTRNTY(4),@CC02511                                1393
*           IF BASHOLD=OFF THEN                                    1394
         TM    BASHOLD(BASEVPTR),B'10000000'                       1394
         BNZ   @RF01394                                            1394
*             DO;                   /*                       @ZDR2056*/
*               IF BASGENUS=ON THEN /*                       @Y30LB33*/
         TM    BASGENUS(BASEVPTR),B'00010000'                      1396
         BNO   @RF01396                                            1396
*                 VOLTRNTY=GENCHAR; /*                       @Y30LB33*/
         MVC   VOLTRNTY(4),GENCHAR                                 1397
*               IF BASRSTD=ON THEN  /*                       @Y30LB33*/
@RF01396 TM    BASRSTD(BASEVPTR),B'00001000'                       1398
         BNO   @RF01398                                            1398
*                 VOLTRNTY=RSTRCHAR;/*                       @Y30LB33*/
         MVC   VOLTRNTY(4),RSTRCHAR                                1399
*             END;                  /*                       @ZDR2056*/
*           ELSE                                                   1401
*             VOLTRNTY=BASECHAR;    /*                       @ZDR2056*/
*                                                                  1401
         B     @RC01394                                            1401
@RF01394 MVC   VOLTRNTY(4),BASECHAR                                1401
*           /*********************************************************/
*           /*                                                       */
*           /* TRANSLATE THE ATTRIBUTE FIELD                 @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1402
*           VOLTRNAT='    ';        /*                       @Y30LB33*/
@RC01394 MVC   VOLTRNAT(4),@CC02511                                1402
*           IF BASHOLD=OFF THEN                                    1403
         TM    BASHOLD(BASEVPTR),B'10000000'                       1403
         BNZ   @RF01403                                            1403
*             DO;                   /*                       @ZDR2056*/
*               IF BASBIND=ON THEN  /*                       @Y30LB33*/
         TM    BASBIND(BASEVPTR),B'00000010'                       1405
         BNO   @RF01405                                            1405
*                 VOLTRNAT(1)=BCHAR;/*                       @Y30LB33*/
         MVC   VOLTRNAT(1),BCHAR                                   1406
*               IF BASRONLY=ON THEN /*                       @Y30LB33*/
@RF01405 TM    BASRONLY(BASEVPTR),B'01000000'                      1407
         BNO   @RF01407                                            1407
*                 VOLTRNAT(2)=RCHAR;/*                       @Y30LB33*/
         MVC   VOLTRNAT+1(1),RCHAR                                 1408
*               IF BASDAERA=ON THEN /*                       @Y30LB33*/
@RF01407 TM    BASDAERA(BASEVPTR),B'10000000'                      1409
         BNO   @RF01409                                            1409
*                 VOLTRNAT(3)=DCHAR;/*                       @Y30LB33*/
         MVC   VOLTRNAT+2(1),DCHAR                                 1410
*               IF BASEXCL=ON THEN  /*                       @Y30LB33*/
@RF01409 TM    BASEXCL(BASEVPTR),B'00000001'                       1411
         BNO   @RF01411                                            1411
*                 VOLTRNAT(4)=ECHAR;/*                       @Y30LB33*/
         MVC   VOLTRNAT+3(1),ECHAR                                 1412
*             END;                  /*                       @ZDR2056*/
@RF01411 DS    0H                                                  1414
*                                                                  1414
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP INSERTS FOR THE LOCATION AND           @Y30LB33*/
*           /* EJECT DATE FIELDS. IF THE CARTRIDGES          @Y30LB33*/
*           /* HAVE BEEN REASSIGNED, PRINT NO EJECT          @Y30LB33*/
*           /* DATE AND PRINT 'REASSIGNED' IN THE            @Y30LB33*/
*           /* LOCATION FIELDS. IF THE CARTRIDGES            @Y30LB33*/
*           /* HAVE NOT BEEN REASSIGNED, TEST THE            @Y30LB33*/
*           /* EJECT DATE. IF THE DATE IS THERE,             @Y30LB33*/
*           /* PRINT THE DESTINATION IN THE                  @Y30LB33*/
*           /* LOCATION FIELD AND ALSO THE EJECT             @Y30LB33*/
*           /* DATE. IF THE EJECT DATE IS NULL, TEST         @Y30LB33*/
*           /* THE MSF FIELDS FOR EACH CARTRIDGE. IF         @Y30LB33*/
*           /* THE MSF NUMBER IS VALID, PUT THE MSF          @Y30LB33*/
*           /* IN THE DESTINATION FIELD. IF AN MSF           @Y30LB33*/
*           /* IS NOT VALID, PUT 'NOT IN MSF' IN THE         @Y30LB33*/
*           /* DESTINATION FIELD.                            @Y30LB33*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1414
*           IF BASHOLD=OFF THEN                                    1414
@RF01403 TM    BASHOLD(BASEVPTR),B'10000000'                       1414
         BNZ   @RF01414                                            1414
*             DO;                   /*                       @ZDR2056*/
*               IF BASREASS=ON      /* TEST REASSIGNED       @Y30LB33*/
*                 THEN                                             1416
         TM    BASREASS(BASEVPTR),B'00100000'                      1416
         BNO   @RF01416                                            1416
*                 DO;               /*                       @Y30LB33*/
*                                                                  1417
*                   /*************************************************/
*                   /*                                               */
*                   /* SET UP DESTINATION FIELD              @Y30LB33*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  1418
*                   BASDEST(1:15)=REASCHAR;/*                @Y30LB33*/
         MVC   BASDEST(15,BASEVPTR),REASCHAR                       1418
*                   BASDEST(16:30)=REASCHAR;/*               @Y30LB33*/
         MVC   BASDEST+15(15,BASEVPTR),REASCHAR                    1419
*                 END;              /*                       @Y30LB33*/
*                                                                  1420
*               /*****************************************************/
*               /*                                                   */
*               /* IF THE VOLUME HAS BEEN EJECTED,           @Y30LB33*/
*               /* SET UP THE EJECT DATE INSERT              @Y30LB33*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1421
*               ELSE                                               1421
*                 DO;               /*                       @Y30LB33*/
         B     @RC01416                                            1421
@RF01416 DS    0H                                                  1422
*                   IF BASDTREM^='    '/*                    @Y30LB33*/
*                     THEN                                         1422
         CLC   BASDTREM(4,BASEVPTR),@CC02511                       1422
         BE    @RF01422                                            1422
*                     DO;           /*                       @Y30LB33*/
*                                                                  1423
*                       /*********************************************/
*                       /*                                           */
*                       /* SET UP DATE INSERT                @Y30LB33*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  1424
*                       DARGCNT=DARGCNT+1;/*                 @Y30LB33*/
         L     @06,DDSTRU                                          1424
         LA    @04,1                                               1424
         LH    @03,DARGCNT(,@06)                                   1424
         ALR   @03,@04                                             1424
         STH   @03,DARGCNT(,@06)                                   1424
*                       DARGINS(DARGCNT)=1;/*                @Y30LB33*/
         SLA   @03,3                                               1425
         STH   @04,DARGINS-8(@03,@06)                              1425
*                       DARGINL(DARGCNT)=4;/*                @Y30LB33*/
         LA    @04,4                                               1426
         STH   @04,DARGINL-8(@03,@06)                              1426
*                       DARGDTM(DARGCNT)=ADDR(BASDTREM);/*   @Y30LB33*/
         LA    @04,BASDTREM(,BASEVPTR)                             1427
         ST    @04,DARGDTM-8(@03,@06)                              1427
*                     END;          /*                       @Y30LB33*/
*                                                                  1428
*                   /*************************************************/
*                   /*                                               */
*                   /* NO EJECT DATE                         @Y30LB33*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  1429
*                   ELSE                                           1429
*                     DO;           /*                       @Y30LB33*/
         B     @RC01422                                            1429
@RF01422 DS    0H                                                  1430
*                       BASDEST=' ';/*                       @Y30LB33*/
         MVI   BASDEST+1(BASEVPTR),C' '                            1430
         MVC   BASDEST+2(28,BASEVPTR),BASDEST+1(BASEVPTR)          1430
         MVI   BASDEST(BASEVPTR),C' '                              1430
*                       IF BASLIB1=NULLFFS THEN/*            @ZM01010*/
         CLC   BASLIB1(1,BASEVPTR),NULLFFS                         1431
         BNE   @RF01431                                            1431
*                         BASDEST(1:15)=UNKCHAR;/*           @ZM01010*/
         MVC   BASDEST(15,BASEVPTR),UNKCHAR                        1432
*                       ELSE                                       1433
*                         DO;       /*                       @ZM01010*/
         B     @RC01431                                            1433
@RF01431 DS    0H                                                  1434
*                           IF BASLIB1=0/*                   @Y30LB33*/
*                             THEN                                 1434
         CLI   BASLIB1(BASEVPTR),0                                 1434
         BNE   @RF01434                                            1434
*                             BASDEST(1:15)=MSF0CHAR;/*      @Y30LB33*/
         MVC   BASDEST(15,BASEVPTR),MSF0CHAR                       1435
*                           IF BASLIB1=1/*                   @Y30LB33*/
*                             THEN                                 1436
@RF01434 CLI   BASLIB1(BASEVPTR),1                                 1436
         BNE   @RF01436                                            1436
*                             BASDEST(1:15)=MSF1CHAR;/*      @Y30LB33*/
         MVC   BASDEST(15,BASEVPTR),MSF1CHAR                       1437
*                         END;      /*                       @ZM01010*/
@RF01436 DS    0H                                                  1439
*                       IF BASLIB2=NULLFFS THEN/*            @ZM01010*/
@RC01431 CLC   BASLIB2(1,BASEVPTR),NULLFFS                         1439
         BNE   @RF01439                                            1439
*                         BASDEST(16:30)=UNKCHAR;/*          @ZM01010*/
         MVC   BASDEST+15(15,BASEVPTR),UNKCHAR                     1440
*                       ELSE                                       1441
*                         DO;       /*                       @ZM01010*/
         B     @RC01439                                            1441
@RF01439 DS    0H                                                  1442
*                           IF BASLIB2=0/*                   @Y30LB33*/
*                             THEN                                 1442
         CLI   BASLIB2(BASEVPTR),0                                 1442
         BNE   @RF01442                                            1442
*                             BASDEST(16:30)=MSF0CHAR;/*     @Y30LB33*/
         MVC   BASDEST+15(15,BASEVPTR),MSF0CHAR                    1443
*                           IF BASLIB2=1/*                   @Y30LB33*/
*                             THEN                                 1444
@RF01442 CLI   BASLIB2(BASEVPTR),1                                 1444
         BNE   @RF01444                                            1444
*                             BASDEST(16:30)=MSF1CHAR;/*     @Y30LB33*/
         MVC   BASDEST+15(15,BASEVPTR),MSF1CHAR                    1445
*                         END;      /*                       @ZM01010*/
*                     END;          /*                       @Y30LB33*/
*                 END;              /*                       @Y30LB33*/
*             END;                  /*                       @ZDR2056*/
*           ELSE                                                   1450
*             DO;                   /*                       @ZDR2056*/
         B     @RC01414                                            1450
@RF01414 DS    0H                                                  1451
*               BASGROUP=BLANK;     /*                       @ZDR2056*/
         MVI   BASGROUP+1(BASEVPTR),C' '                           1451
         MVC   BASGROUP+2(6,BASEVPTR),BASGROUP+1(BASEVPTR)         1451
         MVI   BASGROUP(BASEVPTR),C' '                             1451
*               BASDEST=BLANK;      /*                       @ZDR2056*/
         MVI   BASDEST+1(BASEVPTR),C' '                            1452
         MVC   BASDEST+2(28,BASEVPTR),BASDEST+1(BASEVPTR)          1452
         MVI   BASDEST(BASEVPTR),C' '                              1452
*               BASOWNER=BLANK;     /*                       @ZDR2056*/
         MVI   BASOWNER+1(BASEVPTR),C' '                           1453
         MVC   BASOWNER+2(8,BASEVPTR),BASOWNER+1(BASEVPTR)         1453
         MVI   BASOWNER(BASEVPTR),C' '                             1453
*               BASDESCR=BLANK;     /*                       @ZDR2056*/
         MVI   BASDESCR+1(BASEVPTR),C' '                           1454
         MVC   BASDESCR+2(28,BASEVPTR),BASDESCR+1(BASEVPTR)        1454
         MVI   BASDESCR(BASEVPTR),C' '                             1454
*               BASCSN1=BLANK;      /*                       @ZDR2056*/
         MVI   BASCSN1+1(BASEVPTR),C' '                            1455
         MVC   BASCSN1+2(10,BASEVPTR),BASCSN1+1(BASEVPTR)          1455
         MVI   BASCSN1(BASEVPTR),C' '                              1455
*               BASCSN2=BLANK;      /*                       @ZDR2056*/
         MVI   BASCSN2+1(BASEVPTR),C' '                            1456
         MVC   BASCSN2+2(10,BASEVPTR),BASCSN2+1(BASEVPTR)          1456
         MVI   BASCSN2(BASEVPTR),C' '                              1456
*               BASLIB1=BLANK;      /*                       @ZDR2056*/
         MVI   BASLIB1(BASEVPTR),X'40'                             1457
*               BASLIB2=BLANK;      /*                       @ZDR2056*/
         MVI   BASLIB2(BASEVPTR),X'40'                             1458
*             END;                  /*                       @ZDR2056*/
*         END;                      /*                       @Y30LB33*/
*     END;                          /*                       @Y30LB33*/
*                                                                  1462
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS A DUPLICATE VOLUME RECORD                     @Y30LB33*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1462
*   ELSE                                                           1462
*     DO;                           /*                       @Y30LB33*/
         B     @RC01317                                            1462
@RF01317 DS    0H                                                  1463
*       BASDEST=' ';                /*                       @Y30LB33*/
         MVI   BASDEST+1(BASEVPTR),C' '                            1463
         MVC   BASDEST+2(28,BASEVPTR),BASDEST+1(BASEVPTR)          1463
         MVI   BASDEST(BASEVPTR),C' '                              1463
*       DARGSENT=DUPSLINE;          /*                       @ZA14736*/
         L     @06,DDSTRU                                          1464
         MVI   DARGSENT(@06),X'01'                                 1464
*       IF BASLIB1=NULLFFS THEN     /*                       @ZM01010*/
         CLC   BASLIB1(1,BASEVPTR),NULLFFS                         1465
         BNE   @RF01465                                            1465
*         BASDEST(1:15)=UNKCHAR;    /*                       @ZM01010*/
         MVC   BASDEST(15,BASEVPTR),UNKCHAR                        1466
*       ELSE                                                       1467
*         DO;                       /*                       @ZM01010*/
         B     @RC01465                                            1467
@RF01465 DS    0H                                                  1468
*           IF BASLIB1=0            /*                       @Y30LB33*/
*             THEN                                                 1468
         CLI   BASLIB1(BASEVPTR),0                                 1468
         BNE   @RF01468                                            1468
*             BASDEST(1:15)=MSF0CHAR;/*                      @Y30LB33*/
         MVC   BASDEST(15,BASEVPTR),MSF0CHAR                       1469
*           IF BASLIB1=1            /*                       @Y30LB33*/
*             THEN                                                 1470
@RF01468 CLI   BASLIB1(BASEVPTR),1                                 1470
         BNE   @RF01470                                            1470
*             BASDEST(1:15)=MSF1CHAR;/*                      @Y30LB33*/
         MVC   BASDEST(15,BASEVPTR),MSF1CHAR                       1471
*         END;                      /*                       @ZM01010*/
@RF01470 DS    0H                                                  1473
*       IF BASLIB2=NULLFFS THEN     /*                       @ZM01010*/
@RC01465 CLC   BASLIB2(1,BASEVPTR),NULLFFS                         1473
         BNE   @RF01473                                            1473
*         BASDEST(16:30)=UNKCHAR;   /*                       @ZM01010*/
         MVC   BASDEST+15(15,BASEVPTR),UNKCHAR                     1474
*       ELSE                                                       1475
*         DO;                       /*                       @ZM01010*/
         B     @RC01473                                            1475
@RF01473 DS    0H                                                  1476
*           IF BASLIB2=0            /*                       #Y30LB33*/
*             THEN                                                 1476
         CLI   BASLIB2(BASEVPTR),0                                 1476
         BNE   @RF01476                                            1476
*             BASDEST(16:30)=MSF0CHAR;/*                     #Y30LB33*/
         MVC   BASDEST+15(15,BASEVPTR),MSF0CHAR                    1477
*           IF BASLIB2=1            /*                       #Y30LB33*/
*             THEN                                                 1478
@RF01476 CLI   BASLIB2(BASEVPTR),1                                 1478
         BNE   @RF01478                                            1478
*             BASDEST(16:30)=MSF1CHAR;/*                     #Y30LB33*/
         MVC   BASDEST+15(15,BASEVPTR),MSF1CHAR                    1479
*         END;                      /*                       @ZM01010*/
@RF01478 DS    0H                                                  1481
*     END;                          /*                       #Y30LB33*/
@RC01473 DS    0H                                                  1482
*   RETURN CODE(0);                 /*                       @Y30LB33*/
@RC01317 SLR   @15,@15                                             1482
@EL00017 DS    0H                                                  1482
@EF00017 DS    0H                                                  1482
@ER00017 L     @14,12(,@13)                                        1482
         BR    @14                                                 1482
*   END VOLFMTR;                    /*                       @Y30LB33*/
*                                                                  1484
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CTGSEQ                               @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* FUNCTION - ESTABLISH SUBTITLES AND CONTROL            @Z40LB66*/
*   /* PROCESSING OF THE CARTRIDGE SERIALS IN                @Z40LB66*/
*   /* THE CARTRIDGES PARAMETER AND THE                      @Z40LB66*/
*   /* CARTRIDGE SUMMARY                                     @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* INPUT - FDTTBL                                        @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* OUTPUT - RETURN CODE OF 16 AND LASTCOND OF 8 IF       @Z40LB66*/
*   /* THE REPORT DOES NOT COMPLETE SUCCESSFULLY             @Z40LB66*/
*   /* OTHERWISE, BOTH CODES ARE ZERO.                       @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1484
*CTGSEQ:                                                           1484
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
CTGSEQ   ST    @14,@SA00018                                        1484
*   OLDERID2=NEWERID2;                                             1485
         L     @07,@PC00001                                        1485
         L     @04,GDTTR2(,@07)                                    1485
         MVC   @TS00001(95),NEWERID2(@04)                          1485
         MVC   OLDERID2(95,@04),@TS00001                           1485
*   NEWID2='LVSA';                  /*                       @Z40LB66*/
         MVC   NEWID2(4,@04),@CC02542                              1486
*   TESTRC=0;                       /*                       @Z40LB66*/
*                                                                  1487
         SLR   TESTRC,TESTRC                                       1487
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE SUBTITLE LINES.                         @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1488
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Z40LB66*/
         L     @04,DDSTRU                                          1488
         XC    DARGLIST(20,@04),DARGLIST(@04)                      1488
*   DARGRETP=ADDR(TITLSPCE);        /*                       @Z40LB66*/
         LA    @03,TITLSPCE                                        1489
         ST    @03,DARGRETP(,@04)                                  1489
*   DARGRETL=LENGTH(TITLSPCE);      /*                       @Z40LB66*/
         MVC   DARGRETL(2,@04),@CH02376                            1490
*   DARGSMOD=MODLV0;                /*                       @Z40LB66*/
         MVC   DARGSMOD(3,@04),@CC02396                            1491
*   DARGSENT=CTGSTLE;               /*                       @Z40LB66*/
*                                                                  1492
         MVI   DARGSENT(@04),X'26'                                 1492
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN SUBTITLE FROM STATIC TEXT MODULE               @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1493
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Z40LB66*/
*                                                                  1493
         ST    @07,@AL00001                                        1493
         LA    @04,@CF00117                                        1493
         ST    @04,@AL00001+4                                      1493
         LA    @04,DDSTRU                                          1493
         ST    @04,@AL00001+8                                      1493
         MVI   @AL00001+8,X'80'                                    1493
         L     @15,GDTPRT(,@07)                                    1493
         LA    @01,@AL00001                                        1493
         BALR  @14,@15                                             1493
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE MAIN TITLE ESTABLISHED BEFORE               @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1494
*   CALL AMSTP044(GDTTBL,PRINTME);  /*                       @Z40LB66*/
*                                                                  1494
         L     @07,@PC00001                                        1494
         ST    @07,@AL00001                                        1494
         LA    @04,PRINTME                                         1494
         ST    @04,@AL00001+4                                      1494
         MVI   @AL00001+4,X'80'                                    1494
         L     @15,GDTRES(,@07)                                    1494
         LA    @01,@AL00001                                        1494
         BALR  @14,@15                                             1494
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE NEW SUBTITLE                            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1495
*   PCSTLP=ADDR(TITLSPCE);          /*                       @Z40LB66*/
         LA    @07,TITLSPCE                                        1495
         ST    @07,PCSTLP                                          1495
*   PCSTLC=2;                       /* SET LINE COUNT        @Z40LB66*/
         MVC   PCSTLC(2),@CH00156                                  1496
*   CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*                   @Z40LB66*/
         L     @07,@PC00001                                        1497
         ST    @07,@AL00001                                        1497
         LA    @04,PRINTME                                         1497
         ST    @04,@AL00001+4                                      1497
         LA    @04,PCARG                                           1497
         ST    @04,@AL00001+8                                      1497
         L     @15,GDTESA(,@07)                                    1497
         LA    @01,@AL00001                                        1497
         BALR  @14,@15                                             1497
*                                                                  1498
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP REQUEST BLOCK TO READ CARTRIDGE                @Z40LB66*/
*   /* INDEX RECORD AND ASSOCIATED VOLUME RECORD             @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1498
*   VOLRVVI=VOLRVVI&&VOLRVVI;       /*                       @Z40LB66*/
         XC    VOLRVVI(68),VOLRVVI                                 1498
*   RVVIPTR=ADDR(VOLRVVI);          /*                       @Z40LB66*/
         LA    RVVIPTR,VOLRVVI                                     1499
*   RVVLNGTH=RVVLEN;                /*                       @Z40LB66*/
         LH    @07,RVVLEN                                          1500
         ST    @07,RVVLNGTH(,RVVIPTR)                              1500
*   RVVCODE=RVVOP;                  /*                       @Z40LB66*/
         MVI   RVVCODE(RVVIPTR),X'87'                              1501
*   RVVRDR=ON;                      /*                       @Z40LB66*/
         OI    RVVRDR(RVVIPTR),B'10000000'                         1502
*   RVVCIRCD=ON;                    /*                       @Z40LB66*/
         OI    RVVCIRCD(RVVIPTR),B'00000100'                       1503
*   RVVRTBUF=ADDR(VOLRCDBF);        /*                       @Z40LB66*/
         LA    @07,VOLRCDBF                                        1504
         ST    @07,RVVRTBUF(,RVVIPTR)                              1504
*   RVVBUFLN=LENGTH(BASEV);         /*                       @Z40LB66*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02618                        1505
*   RVVSCSN=ON;                     /*                       @Z40LB66*/
*                                                                  1506
         OI    RVVSCSN(RVVIPTR),B'00001000'                        1506
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE REQUEST BLOCK TO THE CARTRIDGE               @Z40LB66*/
*   /* PROCESSOR FOR EVERY CARTRIDGE IN THE CARTRIDGES       @Z40LB66*/
*   /* PARAMETER LIST. IF THE RETURN CODE IS 16, END         @Z40LB66*/
*   /* EXECUTION.                                            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1507
*   DO RPTLOOP=1 TO CTGSCNT WHILE TESTRC<16;/*               @Z40LB66*/
         LA    @07,1                                               1507
         B     @DE01507                                            1507
@DL01507 C     TESTRC,@CF00507                                     1507
         BNL   @DC01507                                            1507
*     RVVRDCSN=CTGSVAL(RPTLOOP);    /*                       @Z40LB66*/
         MH    @07,@CH00650                                        1508
         L     @04,@PC00001+4                                      1508
         L     @04,FDTPTR+84(,@04)                                 1508
         ST    @07,@TF00001                                        1508
         ALR   @07,@04                                             1508
         AL    @07,@CF02649                                        1508
         MVC   RVVRDCSN(12,RVVIPTR),CTGSVAL-3(@07)                 1508
*     CALL CKCSNLEN(RVVRDCSN,CTGSLEN(RPTLOOP));/*            @Z40LB66*/
         LA    @03,RVVRDCSN(,RVVIPTR)                              1509
         ST    @03,@AL00001                                        1509
         L     @03,@TF00001                                        1509
         AL    @04,@CF02650                                        1509
         LA    @04,CTGSLEN-2(@03,@04)                              1509
         ST    @04,@AL00001+4                                      1509
         LA    @01,@AL00001                                        1509
         BAL   @14,CKCSNLEN                                        1509
*     RESPECIFY                                                    1510
*       RTNREG RSTD;                                               1510
*     TESTRC=RTNREG;                                               1511
         LR    TESTRC,RTNREG                                       1511
*     RESPECIFY                                                    1512
*       RTNREG UNRSTD;              /*                       @Z40LB66*/
*     IF TESTRC=0 THEN                                             1513
         LTR   TESTRC,TESTRC                                       1513
         BNZ   @RF01513                                            1513
*       DO;                         /* TEST IF CSN VALID     @Z40LB66*/
*         CALL CTGPROC;             /*                       @Z40LB66*/
         BAL   @14,CTGPROC                                         1515
*         RESPECIFY                                                1516
*           RTNREG RSTD;                                           1516
*         TESTRC=RTNREG;                                           1517
         LR    TESTRC,RTNREG                                       1517
*         RESPECIFY                                                1518
*           RTNREG UNRSTD;          /*                       @Z40LB66*/
*       END;                        /*                       @Z40LB66*/
*     ELSE                                                         1520
*       LASTCOND=LASTCC08;          /*                       @VS41109*/
         B     @RC01513                                            1520
@RF01513 L     @07,@PC00001+8                                      1520
         MVC   LASTCOND(2,@07),@CH00035                            1520
*   END;                            /*                       @Z40LB66*/
@RC01513 LA    @07,1                                               1521
         AH    @07,RPTLOOP                                         1521
@DE01507 STH   @07,RPTLOOP                                         1521
         L     @04,@PC00001+4                                      1521
         L     @04,FDTPTR+84(,@04)                                 1521
         CH    @07,CTGSCNT(,@04)                                   1521
         BNH   @DL01507                                            1521
@DC01507 DS    0H                                                  1522
*   MYCODE=TESTRC;                  /* SAVE RETURN CODE      @Z40LB66*/
*                                                                  1522
         LR    MYCODE,TESTRC                                       1522
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE SUMMARY REQUEST INDICATOR TO                 @Z40LB66*/
*   /* SUMRY TO PRINT A CARTRIDGE SUMMARY.                   @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1523
*   SUMMASK=CTGSUMM;                /*                       @Z40LB66*/
         LA    SUMMASK,3                                           1523
*   CALL SUMRY;                     /*                       @Z40LB66*/
*                                                                  1524
         BAL   @14,SUMRY                                           1524
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH A CODE OF ZERO OR 16 AS                   @Z40LB66*/
*   /* RETURNED FROM CALLED PROCEDURES.                      @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1525
*   IF MYCODE<16 THEN                                              1525
         C     MYCODE,@CF00507                                     1525
         BNL   @RF01525                                            1525
*     MYCODE=0;                     /*                       @Z40LB66*/
         SLR   MYCODE,MYCODE                                       1526
*   RETURN CODE(MYCODE);            /*                       @Z40LB66*/
@RF01525 LR    @15,MYCODE                                          1527
@EL00018 DS    0H                                                  1527
@EF00018 DS    0H                                                  1527
@ER00018 L     @14,@SA00018                                        1527
         BR    @14                                                 1527
*   END CTGSEQ;                     /*                       @Z40LB66*/
*                                                                  1529
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - ALLCSEQ                              @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* FUNCTION - TO PROCESS ALLCARTRIDGE REQUESTS.          @Z40LB66*/
*   /* ESTABLISH THE SUBTITLES FOR THE REPORT,               @Z40LB66*/
*   /* AND CONTROL THE PRINTING OF THE SUMMARY.              @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* INPUT - FDTTBL                                        @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* OUTPUT - RETURN CODE OF ZERO AND LASTCOND OF          @Z40LB66*/
*   /* ZERO IF PROCESSING COMPLETES WITH NO                  @Z40LB66*/
*   /* ERRORS. RETURN CODE OF ZERO AND LASTCOND              @Z40LB66*/
*   /* OF 8 IF PROCESSING COMPLETED WITH ERRORS.             @Z40LB66*/
*   /* RETURN CODE OF 16 AND LASTCOND OF 8 FOR               @Z40LB66*/
*   /* TERMINATION OF PROCESSING.                            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1529
*ALLCSEQ:                                                          1529
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
ALLCSEQ  ST    @14,@SA00019                                        1529
*   OLDERID2=NEWERID2;                                             1530
         L     @07,@PC00001                                        1530
         L     @04,GDTTR2(,@07)                                    1530
         MVC   @TS00001(95),NEWERID2(@04)                          1530
         MVC   OLDERID2(95,@04),@TS00001                           1530
*   NEWID2='LVTA';                  /*                       @Z40LB66*/
         MVC   NEWID2(4,@04),@CC02548                              1531
*   TESTRC=0;                       /*                       @Z40LB66*/
*                                                                  1532
         SLR   TESTRC,TESTRC                                       1532
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE REPORT SUBTITLE LINES                   @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1533
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Z40LB66*/
         L     @04,DDSTRU                                          1533
         XC    DARGLIST(20,@04),DARGLIST(@04)                      1533
*   DARGRETP=ADDR(TITLSPCE);        /*                       @Z40LB66*/
         LA    @03,TITLSPCE                                        1534
         ST    @03,DARGRETP(,@04)                                  1534
*   DARGRETL=LENGTH(TITLSPCE);      /*                       @Z40LB66*/
         MVC   DARGRETL(2,@04),@CH02376                            1535
*   DARGSMOD=MODLV0;                /*                       @Z40LB66*/
         MVC   DARGSMOD(3,@04),@CC02396                            1536
*   DARGSENT=CTGSTLE;               /*                       @Z40LB66*/
*                                                                  1537
         MVI   DARGSENT(@04),X'26'                                 1537
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN SUBTITLE FROM STATIC TEXT MODULE               @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1538
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Z40LB66*/
*                                                                  1538
         ST    @07,@AL00001                                        1538
         LA    @04,@CF00117                                        1538
         ST    @04,@AL00001+4                                      1538
         LA    @04,DDSTRU                                          1538
         ST    @04,@AL00001+8                                      1538
         MVI   @AL00001+8,X'80'                                    1538
         L     @15,GDTPRT(,@07)                                    1538
         LA    @01,@AL00001                                        1538
         BALR  @14,@15                                             1538
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE MAIN TITLE ESTABLISHED BEFORE               @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1539
*   CALL AMSTP044(GDTTBL,PRINTME);  /*                       @Z40LB66*/
*                                                                  1539
         L     @07,@PC00001                                        1539
         ST    @07,@AL00001                                        1539
         LA    @04,PRINTME                                         1539
         ST    @04,@AL00001+4                                      1539
         MVI   @AL00001+4,X'80'                                    1539
         L     @15,GDTRES(,@07)                                    1539
         LA    @01,@AL00001                                        1539
         BALR  @14,@15                                             1539
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH THE NEW SUBTITLE                            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1540
*   PCSTLP=ADDR(TITLSPCE);          /*                       @Z40LB66*/
         LA    @07,TITLSPCE                                        1540
         ST    @07,PCSTLP                                          1540
*   PCSTLC=2;                       /* SET LINE COUNT        @Z40LB66*/
         MVC   PCSTLC(2),@CH00156                                  1541
*   CALL AMSTP042(GDTTBL,PRINTME,PCARG);/*                   @Z40LB66*/
         L     @07,@PC00001                                        1542
         ST    @07,@AL00001                                        1542
         LA    @04,PRINTME                                         1542
         ST    @04,@AL00001+4                                      1542
         LA    @04,PCARG                                           1542
         ST    @04,@AL00001+8                                      1542
         L     @15,GDTESA(,@07)                                    1542
         LA    @01,@AL00001                                        1542
         BALR  @14,@15                                             1542
*                                                                  1543
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE READ REQUEST PARAMETER LIST            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1543
*   VOLRVVI=VOLRVVI&&VOLRVVI;       /*                       @Z40LB66*/
         XC    VOLRVVI(68),VOLRVVI                                 1543
*   RVVIPTR=ADDR(VOLRVVI);          /*                       @Z40LB66*/
         LA    RVVIPTR,VOLRVVI                                     1544
*   RVVLNGTH=RVVLEN;                /*                       @Z40LB66*/
         LH    @07,RVVLEN                                          1545
         ST    @07,RVVLNGTH(,RVVIPTR)                              1545
*   RVVCODE=RVVOP;                  /*                       @Z40LB66*/
         MVI   RVVCODE(RVVIPTR),X'87'                              1546
*   RVVRDNR=ON;                     /*                       @Z40LB66*/
         OI    RVVRDNR(RVVIPTR),B'01000000'                        1547
*   RVVCIRCD=ON;                    /*                       @Z40LB66*/
         OI    RVVCIRCD(RVVIPTR),B'00000100'                       1548
*   RVVBUFLN=LENGTH(BASEV);         /*                       @Z40LB66*/
         MVC   RVVBUFLN(2,RVVIPTR),@CH02618                        1549
*   RVVRTBUF=ADDR(VOLRCDBF);        /*                       @Z40LB66*/
*                                                                  1550
         LA    @07,VOLRCDBF                                        1550
         ST    @07,RVVRTBUF(,RVVIPTR)                              1550
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE CARTRIDGE PROCESSOR REPETITIVELY TO          @Z40LB66*/
*   /* READ AND PRINT THE CARTRIDGE RECORDS UNTIL            @Z40LB66*/
*   /* IT GETS AN ERROR OR END-OF-FILE.                      @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1551
*   PREVCSN=PREVCSN&&PREVCSN;       /* INIT. FOR COMPARE     @Z40LB66*/
         XC    PREVCSN(12),PREVCSN                                 1551
*   DO WHILE TESTRC<8;              /*                       @Z40LB66*/
         B     @DE01552                                            1552
@DL01552 DS    0H                                                  1553
*     CALL CTGPROC;                 /*                       @Z40LB66*/
         BAL   @14,CTGPROC                                         1553
*     RESPECIFY                                                    1554
*       RTNREG RSTD;                                               1554
*     TESTRC=RTNREG;                                               1555
         LR    TESTRC,RTNREG                                       1555
*     RESPECIFY                                                    1556
*       RTNREG UNRSTD;              /*                       @Z40LB66*/
*     RVVRDCSN=PREVCSN;             /* SAVE CSN FOR NEXT     @Z40LB66*/
         MVC   RVVRDCSN(12,RVVIPTR),PREVCSN                        1557
*     RVVSCSN=ON;                   /*                       @Z40LB66*/
         OI    RVVSCSN(RVVIPTR),B'00001000'                        1558
*   END;                            /*                       @Z40LB66*/
@DE01552 C     TESTRC,@CF00035                                     1559
         BL    @DL01552                                            1559
*   MYCODE=TESTRC;                  /* SAVE RETURN CODE      @Z40LB66*/
*                                                                  1560
         LR    MYCODE,TESTRC                                       1560
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT THE CARTRIDGE SUMMARY                           @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1561
*   SUMMASK=CTGSUMM;                /*                       @Z40LB66*/
         LA    SUMMASK,3                                           1561
*   CALL SUMRY;                     /*                       @Z40LB66*/
*                                                                  1562
         BAL   @14,SUMRY                                           1562
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN A CODE OF ZERO OR 16                           @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1563
*   IF MYCODE<16 THEN                                              1563
         C     MYCODE,@CF00507                                     1563
         BNL   @RF01563                                            1563
*     MYCODE=0;                     /*                       @Z40LB66*/
         SLR   MYCODE,MYCODE                                       1564
*   RETURN CODE(MYCODE);            /*                       @Z40LB66*/
@RF01563 LR    @15,MYCODE                                          1565
@EL00019 DS    0H                                                  1565
@EF00019 DS    0H                                                  1565
@ER00019 L     @14,@SA00019                                        1565
         BR    @14                                                 1565
*   END ALLCSEQ;                    /*                       @Z40LB66*/
*                                                                  1567
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CTGPROC                              @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* FUNCTION - CONTROL READING AND PRINTING OF A          @Z40LB66*/
*   /* CARTRIDGE AND ASSOCIATED VOLUME RECORD.               @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* INPUT - READ REQUEST BLOCK AND THE FDTTBL             @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* OUTPUT - RETURN CODE AND LASTCOND OF ZERO FOR         @Z40LB66*/
*   /* NORMAL PROCESSING. RETURN CODE OF 4 AND               @Z40LB66*/
*   /* LASTCOND OF 8 IF CARTRIDGE OR ASSOCIATED              @Z40LB66*/
*   /* VOLUME RECORD NOT FOUND. RETURN CODE OF 8             @Z40LB66*/
*   /* AND LASTCOND OF 0 FOR END-OF-FILE. RETURN             @Z40LB66*/
*   /* CODE OF 16 AND LASTCOND OF 8 FOR                      @Z40LB66*/
*   /* TERMINATING ERROR.                                    @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1567
*CTGPROC:                                                          1567
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
CTGPROC  ST    @14,@SA00020                                        1567
*   OLDERID2=NEWERID2;                                             1568
         L     @07,@PC00001                                        1568
         L     @07,GDTTR2(,@07)                                    1568
         MVC   @TS00001(95),NEWERID2(@07)                          1568
         MVC   OLDERID2(95,@07),@TS00001                           1568
*   NEWID2='LVUA';                  /*                       @Z40LB66*/
         MVC   NEWID2(4,@07),@CC02552                              1569
*   TESTRC=0;                       /*                       @Z40LB66*/
*                                                                  1570
         SLR   TESTRC,TESTRC                                       1570
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE CARTRIDGE READER TO READ THE                 @Z40LB66*/
*   /* CARTRIDGE INDEX RECORD AND THE CORRESPONDING          @Z40LB66*/
*   /* VOLUME RECORD.                                        @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1571
*   CALL CTGRDR;                    /*                       @Z40LB66*/
         BAL   @14,CTGRDR                                          1571
*   RESPECIFY                                                      1572
*     RTNREG RSTD;                                                 1572
*   TESTRC=RTNREG;                                                 1573
         LR    TESTRC,RTNREG                                       1573
*   RESPECIFY                                                      1574
*     RTNREG UNRSTD;                /*                       @Z40LB66*/
*                                                                  1574
*   /*****************************************************************/
*   /*                                                               */
*   /* IF BOTH RECORDS ARE READ WITHOUT ERROR, PRINT         @Z40LB66*/
*   /* THE CARTRIDGE INFORMATION.                            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1575
*   IF TESTRC=0 THEN                                               1575
         LTR   TESTRC,TESTRC                                       1575
         BNZ   @RF01575                                            1575
*     DO;                           /*                       @Z40LB66*/
*       CALL CTGFMTR;               /*                       @Z40LB66*/
         BAL   @14,CTGFMTR                                         1577
*       CALL CTGPRNT;               /*                       @Z40LB66*/
         BAL   @14,CTGPRNT                                         1578
*       IF MSVIERR=ON THEN          /*                       @ZA13476*/
         TM    MSVIERR,B'00010000'                                 1579
         BNO   @RF01579                                            1579
*         DO;                       /*                       @ZA13476*/
*           TESTRC=16;              /*                       @ZA13476*/
         LA    TESTRC,16                                           1581
*           LASTCOND=LASTCC08;      /*                       @ZA13476*/
         L     @07,@PC00001+8                                      1582
         MVC   LASTCOND(2,@07),@CH00035                            1582
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @ZA13476*/
         L     @07,DDSTRU                                          1583
         XC    DARGLIST(20,@07),DARGLIST(@07)                      1583
*           DARGSMOD=MODLV0;        /*                       @ZA13476*/
         MVC   DARGSMOD(3,@07),@CC02396                            1584
*           DARGSENT=MSG3835I;      /*                       @ZA13476*/
         MVI   DARGSENT(@07),X'2B'                                 1585
*           DARGILP=LENGTH(SAVECSN);/*                       @ZA13476*/
         MVC   DARGILP(2,@07),@CH00038                             1586
*           DARGDBP=ADDR(SAVECSN);  /*                       @ZA13476*/
         LA    @04,SAVECSN                                         1587
         ST    @04,DARGDBP(,@07)                                   1587
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @ZA13476*/
         L     @07,@PC00001                                        1588
         ST    @07,@AL00001                                        1588
         LA    @04,@CF00117                                        1588
         ST    @04,@AL00001+4                                      1588
         LA    @04,DDSTRU                                          1588
         ST    @04,@AL00001+8                                      1588
         MVI   @AL00001+8,X'80'                                    1588
         L     @15,GDTPRT(,@07)                                    1588
         LA    @01,@AL00001                                        1588
         BALR  @14,@15                                             1588
*         END;                      /*                       @ZA13476*/
*     END;                          /*                       @Z40LB66*/
*                                                                  1590
@RF01579 DS    0H                                                  1591
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH THE CODE FROM THE CALLED PROCEDURES       @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1591
*   RETURN CODE(TESTRC);            /*                       @Z40LB66*/
@RF01575 LR    @15,TESTRC                                          1591
@EL00020 DS    0H                                                  1591
@EF00020 DS    0H                                                  1591
@ER00020 L     @14,@SA00020                                        1591
         BR    @14                                                 1591
*   END CTGPROC;                    /*                       @Z40LB66*/
*                                                                  1593
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CTGRDR                               @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* FUNCTION - TO CALL DIRECTRD TO READ A CARTRIDGE       @ZA27752*/
*   /* INDEX RECORD AND THE ASSOCIATED VOLUME                @Z40LB66*/
*   /* RECORD USING THE REQUEST BLOCK PASSED AS              @Z40LB66*/
*   /* INPUT AND TEST FOR ERRORS FROM THE READ.              @Z40LB66*/
*   /* IF AN ERROR OCCURS, PRINT THE APPROPRIATE             @Z40LB66*/
*   /* MESSAGE AND SET THE RETURN AND CONDITION              @Z40LB66*/
*   /* CODES.                                                @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* INPUT - COMPLETED READ REQUEST BLOCK                  @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* OUTPUT - RETURN CODE OF ZERO AND LASTCOND OF          @Z40LB66*/
*   /* ZERO FOR NORMAL PROCESSING. RETURN CODE               @Z40LB66*/
*   /* OF 4 AND LASTCOND OF 8 FOR CARTRIDGE-NOT-             @Z40LB66*/
*   /* FOUND OR FOR CARTRIDGE-VOLUME-NOT-FOUND.              @Z40LB66*/
*   /* RETURN CODE OF 16 AND LASTCOND OF 8 FOR               @Z40LB66*/
*   /* TERMINATING ERROR.                                    @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1593
*CTGRDR:                                                           1593
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
CTGRDR   ST    @14,@SA00021                                        1593
*   OLDERID2=NEWERID2;                                             1594
         L     @07,@PC00001                                        1594
         L     @04,GDTTR2(,@07)                                    1594
         MVC   @TS00001(95),NEWERID2(@04)                          1594
         MVC   OLDERID2(95,@04),@TS00001                           1594
*   NEWID2='LVVA';                  /*                       @Z40LB66*/
         MVC   NEWID2(4,@04),@CC02559                              1595
*   TESTRC=0;                       /*                       @Z40LB66*/
         SLR   TESTRC,TESTRC                                       1596
*   SETRC=0;                        /*                       @Z40LB66*/
*                                                                  1597
         SLR   @04,@04                                             1597
         STH   @04,SETRC                                           1597
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL DIRECTRD WITH THE IEZRVVI REQUEST BLOCK          @ZA27752*/
*   /* TO READ THE CARTRIDGE INDEX RECORD. THE REQUEST       @Z40LB66*/
*   /* BLOCK HAS BEEN FILLED IN BY THE CALLER.               @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1598
*   IF GDTDBG=NULLPTR THEN                                         1598
         C     @04,GDTDBG(,@07)                                    1598
         BE    @RT01598                                            1598
*     ;                                                            1599
*   ELSE                                                           1600
*     DO;                                                          1600
*       DMPINDEX=ADDR(DUMPAREA);    /*                       @Z40LB66*/
         LA    DMPINDEX,DUMPAREA                                   1601
*       DMPITMNM='RVVI';                                           1602
         MVI   DMPITMNM+4(DMPINDEX),C' '                           1602
         MVC   DMPITMNM+5(3,DMPINDEX),DMPITMNM+4(DMPINDEX)         1602
         MVC   DMPITMNM(4,DMPINDEX),@CC02500                       1602
*       DMPITMPT=ADDR(RVVI);                                       1603
         ST    RVVIPTR,DMPITMPT(,DMPINDEX)                         1603
*       DMPITMLN=RVVLEN;                                           1604
         LH    @04,RVVLEN                                          1604
         STH   @04,DMPITMLN(,DMPINDEX)                             1604
*       DMPITMTP='H';                                              1605
         MVI   DMPITMTP(DMPINDEX),C'H'                             1605
*       DMPINDEX=DMPINDEX+DMPELEMT;                                1606
*                                                                  1606
         AL    DMPINDEX,@CF00507                                   1606
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1607
*       DMPTRM=DMPTRMVL;                                           1607
         MVI   DMPTRM(DMPINDEX),X'FF'                              1607
*     END;                          /*                       @Z40LB66*/
*   IF GDTDBG=NULLPTR THEN                                         1609
@RT01598 L     @04,@PC00001                                        1609
         L     @04,GDTDBG(,@04)                                    1609
         LTR   @04,@04                                             1609
         BZ    @RT01609                                            1609
*     ;                                                            1610
*   ELSE                                                           1611
*     CALL IDCDB010(GDTTBL,'LVVB',DUMPADDR);/*               @Z40LB66*/
         L     @04,@PC00001                                        1611
         ST    @04,@AL00001                                        1611
         LA    @03,@CC02560                                        1611
         ST    @03,@AL00001+4                                      1611
         LA    @03,DUMPADDR                                        1611
         ST    @03,@AL00001+8                                      1611
         MVI   @AL00001+8,X'80'                                    1611
         L     @15,GDTDBG(,@04)                                    1611
         LA    @01,@AL00001                                        1611
         BALR  @14,@15                                             1611
*   CALL DIRECTRD;                  /*                       @ZA27752*/
@RT01609 BAL   @14,DIRECTRD                                        1612
*   RESPECIFY                                                      1613
*     RTNREG RSTD;                                                 1613
*   TESTRC=RTNREG;                                                 1614
         LR    TESTRC,RTNREG                                       1614
*   RESPECIFY                                                      1615
*     RTNREG UNRSTD;                /*                       @Z40LB66*/
*                                                                  1616
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE RETURN AND REASON CODES AND                  @Z40LB66*/
*   /* PRINT APPROPRIATE MESSAGES                            @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1616
*   IF TESTRC=4 THEN                                               1616
         C     TESTRC,@CF00043                                     1616
         BNE   @RF01616                                            1616
*     DO;                           /*                       @Z40LB66*/
*                                                                  1617
*       /*************************************************************/
*       /*                                                           */
*       /* IF WE ARE READING DIRECT AND GET A                @Z40LB66*/
*       /* NOT-FOUND CONDITION, CALL SSCMSG TO PRINT         @Z40LB66*/
*       /* THE REASON, PRINT IDC2833I TO INDICATE            @Z40LB66*/
*       /* CARTRIDGE-NOT-FOUND, AND SET THE RETURN           @Z40LB66*/
*       /* CODE TO 4 AND LASTCOND TO 8.                      @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1618
*       IF RVVRDR=ON&REASON=NOTFOUND THEN                          1618
         TM    RVVRDR(RVVIPTR),B'10000000'                         1618
         BNO   @RF01618                                            1618
         CLC   REASON(4),@CF02312                                  1618
         BNE   @RF01618                                            1618
*         DO;                       /*                       @Z40LB66*/
*           CALL SSCMSG(REASON);    /*                       @Z40LB66*/
         LA    @04,REASON                                          1620
         ST    @04,@AL00001                                        1620
         LA    @01,@AL00001                                        1620
         BAL   @14,SSCMSG                                          1620
*           DARGLIST=DARGLIST&&DARGLIST;/*                   @Z40LB66*/
         L     @04,DDSTRU                                          1621
         XC    DARGLIST(20,@04),DARGLIST(@04)                      1621
*           DARGDBP=ADDR(RVVRDCSN); /*                       @Z40LB66*/
         LA    @03,RVVRDCSN(,RVVIPTR)                              1622
         ST    @03,DARGDBP(,@04)                                   1622
*           DARGILP=LENGTH(RVVRDCSN);/*                      @Z40LB66*/
         MVC   DARGILP(2,@04),@CH00038                             1623
*           DARGSMOD=MODLV0;        /*                       @Z40LB66*/
         MVC   DARGSMOD(3,@04),@CC02396                            1624
*           DARGSENT=MSG2833I;      /*                       @Z40LB66*/
         MVI   DARGSENT(@04),X'23'                                 1625
*           CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*          @Z40LB66*/
         L     @04,@PC00001                                        1626
         ST    @04,@AL00001                                        1626
         LA    @03,@CF00117                                        1626
         ST    @03,@AL00001+4                                      1626
         LA    @03,DDSTRU                                          1626
         ST    @03,@AL00001+8                                      1626
         MVI   @AL00001+8,X'80'                                    1626
         L     @15,GDTPRT(,@04)                                    1626
         LA    @01,@AL00001                                        1626
         BALR  @14,@15                                             1626
*           SETRC=4;                /*                       @Z40LB66*/
         MVC   SETRC(2),@CH00043                                   1627
*           LASTCOND=LASTCC08;      /*                       @Z40LB66*/
         L     @04,@PC00001+8                                      1628
         MVC   LASTCOND(2,@04),@CH00035                            1628
*         END;                      /*                       @Z40LB66*/
*                                                                  1629
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE REASON IS CARTRIDGE-VOLUME-NOT-            @Z40LB66*/
*       /* FOUND, PRINT IDC2834I TO INDICATE THE ERROR       @Z40LB66*/
*       /* AND SET THE RETURN CODE TO 4 AND LASTCOND TO 8    @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1630
*       ELSE                                                       1630
*         IF REASON=NOCTGVOL THEN                                  1630
         B     @RC01618                                            1630
@RF01618 CLC   REASON(4),@CF02318                                  1630
         BNE   @RF01630                                            1630
*           DO;                     /*                       @Z40LB66*/
*             INDEXPTR=ADDR(VOLRCDBF);/*                     @Z40LB66*/
         LA    INDEXPTR,VOLRCDBF                                   1632
*             DARGLIST=DARGLIST&&DARGLIST;/*                 @Z40LB66*/
         L     @04,DDSTRU                                          1633
         XC    DARGLIST(20,@04),DARGLIST(@04)                      1633
*             DARGDBP=ADDR(INDEX);  /*                       @Z40LB66*/
         ST    INDEXPTR,DARGDBP(,@04)                              1634
*             DARGILP=LENGTH(INDEX);/*                       @Z40LB66*/
         MVC   DARGILP(2,@04),@CH02362                             1635
*             DARGSMOD=MODLV0;      /*                       @Z40LB66*/
         MVC   DARGSMOD(3,@04),@CC02396                            1636
*             DARGSENT=MSG2834I;    /*                       @Z40LB66*/
         MVI   DARGSENT(@04),X'24'                                 1637
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @Z40LB66*/
         L     @04,@PC00001                                        1638
         ST    @04,@AL00001                                        1638
         LA    @15,@CF00117                                        1638
         ST    @15,@AL00001+4                                      1638
         LA    @15,DDSTRU                                          1638
         ST    @15,@AL00001+8                                      1638
         MVI   @AL00001+8,X'80'                                    1638
         L     @15,GDTPRT(,@04)                                    1638
         LA    @01,@AL00001                                        1638
         BALR  @14,@15                                             1638
*             PREVCSN=INDSERNO;     /* SET FOR NEXT READ     @Z40LB66*/
         MVC   PREVCSN(12),INDSERNO(INDEXPTR)                      1639
*             SETRC=4;              /*                       @Z40LB66*/
         MVC   SETRC(2),@CH00043                                   1640
*             LASTCOND=LASTCC08;    /*                       @Z40LB66*/
         L     @04,@PC00001+8                                      1641
         MVC   LASTCOND(2,@04),@CH00035                            1641
*           END;                    /*                       @Z40LB66*/
*                                                                  1642
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE READ WAS READ-NEXT AND THE REASON          @Z40LB66*/
*       /* WAS NOT-FOUND, THEN SET RETURN CODE TO 8 TO       @Z40LB66*/
*       /* INDICATE END-OF-FILE                              @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1643
*         ELSE                                                     1643
*           IF RVVRDNR=ON&REASON=NOTFOUND THEN                     1643
         B     @RC01630                                            1643
@RF01630 TM    RVVRDNR(RVVIPTR),B'01000000'                        1643
         BNO   @RF01643                                            1643
         CLC   REASON(4),@CF02312                                  1643
         BNE   @RF01643                                            1643
*             DO;                   /*                       @Z40LB66*/
*               SETRC=8;            /*                       @Z40LB66*/
         LA    @07,8                                               1645
         STH   @07,SETRC                                           1645
*               TESTRC=8;           /*                       @Z40LB66*/
         LR    TESTRC,@07                                          1646
*             END;                  /*                       @Z40LB66*/
*                                                                  1647
*       /*************************************************************/
*       /*                                                           */
*       /* IF ANY OTHER REASON CODE IS RETURNED,             @Z40LB66*/
*       /* CALL SSCMSG TO PRINT THE ERROR MESSAGE            @Z40LB66*/
*       /* AND SET RC TO 16 AND LASTCOND TO 8                @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1648
*           ELSE                                                   1648
*             DO;                   /*                       @Z40LB66*/
         B     @RC01643                                            1648
@RF01643 DS    0H                                                  1649
*               CALL SSCMSG(REASON);/*                       @Z40LB66*/
         LA    @04,REASON                                          1649
         ST    @04,@AL00001                                        1649
         LA    @01,@AL00001                                        1649
         BAL   @14,SSCMSG                                          1649
*               SETRC=16;           /*                       @Z40LB66*/
         MVC   SETRC(2),@CH00507                                   1650
*               LASTCOND=LASTCC08;  /*                       @Z40LB66*/
         L     @04,@PC00001+8                                      1651
         MVC   LASTCOND(2,@04),@CH00035                            1651
*             END;                  /*                       @Z40LB66*/
*     END;                          /*                       @Z40LB66*/
*                                                                  1653
@RC01643 DS    0H                                                  1653
@RC01630 DS    0H                                                  1653
@RC01618 DS    0H                                                  1654
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH THE RETURN CODE SET ABOVE                 @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1654
*   RETURN CODE(SETRC);             /*                       @Z40LB66*/
@RF01616 LH    @15,SETRC                                           1654
@EL00021 DS    0H                                                  1654
@EF00021 DS    0H                                                  1654
@ER00021 L     @14,@SA00021                                        1654
         BR    @14                                                 1654
*   END CTGRDR;                     /*                       @Z40LB66*/
*                                                                  1656
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CTGFMTR                              @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* FUNCTION - TO PREPARE THE CARTRIDGE DATA FOR          @Z40LB66*/
*   /* PRINTING BY CREATING A TEXT PROCESSOR                 @Z40LB66*/
*   /* ARGUMENT LIST AND CONVERTING BIT                      @Z40LB66*/
*   /* PATTERNS TO PRINTABLE FIELDS                          @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* INPUT - VOLUME RECORD, THE FDTTBL, AND THE            @Z40LB66*/
*   /* PREVIOUS CARTRIDGE SERIAL                             @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* OUTPUT - RETURN CODE OF ZERO AND TEXT                 @Z40LB66*/
*   /* PROCESSOR ARGUMENT LIST                               @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1656
*CTGFMTR:                                                          1656
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
CTGFMTR  ST    @14,12(,@13)                                        1656
*   OLDERID2=NEWERID2;                                             1657
         L     @07,@PC00001                                        1657
         L     @07,GDTTR2(,@07)                                    1657
         MVC   @TS00001(95),NEWERID2(@07)                          1657
         MVC   OLDERID2(95,@07),@TS00001                           1657
*   NEWID2='LVWA';                  /*                       @Z40LB66*/
         MVC   NEWID2(4,@07),@CC02564                              1658
*   TESTRC=0;                       /*                       @Z40LB66*/
*                                                                  1659
         SLR   TESTRC,TESTRC                                       1659
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE PRINT PARAMETERS                       @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1660
*   DARGLIST=DARGLIST&&DARGLIST;    /*                       @Z40LB66*/
         L     @04,DDSTRU                                          1660
         XC    DARGLIST(20,@04),DARGLIST(@04)                      1660
*   DARGSMOD=MODLV0;                /*                       @Z40LB66*/
         MVC   DARGSMOD(3,@04),@CC02396                            1661
*   DARGDBP=ADDR(VOLAREA);          /*                       @Z40LB66*/
         LA    @03,VOLAREA                                         1662
         ST    @03,DARGDBP(,@04)                                   1662
*   DARGILP=LENGTH(VOLAREA);        /*                       @Z40LB66*/
         MVC   DARGILP(2,@04),@CH02625                             1663
*   DARGSENT=CTGSLINE;              /*                       @Z40LB66*/
         MVI   DARGSENT(@04),X'21'                                 1664
*   VOLAREA(1:13)=' ';              /*                       @Z40LB66*/
         MVI   VOLAREA+1,C' '                                      1665
         MVC   VOLAREA+2(11),VOLAREA+1                             1665
         MVI   VOLAREA,C' '                                        1665
*   BASDEST(1:5)=' ';               /*                       @Z40LB66*/
*                                                                  1666
         MVI   BASDEST+1(BASEVPTR),C' '                            1666
         MVC   BASDEST+2(3,BASEVPTR),BASDEST+1(BASEVPTR)           1666
         MVI   BASDEST(BASEVPTR),C' '                              1666
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN THE REPORT DATA FROM THE VOLUME RECORD         @Z40LB66*/
*   /* ACCORDING TO THE VOLUME TYPE                          @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1667
*   VOLTRNST=INACHAR;               /* INIT. INACTIVE        @Z40LB66*/
         MVC   VOLTRNST(5),INACHAR                                 1667
*   IF BCDDUP=ON THEN                                              1668
         L     @04,BCDVPTR                                         1668
         TM    BCDDUP(@04),B'00000100'                             1668
         BNO   @RF01668                                            1668
*     DO;                           /* DUPLICATE VOLUME ?    @Z40LB66*/
*       VOLTRNTY=DUPCHAR;           /*                       @Z40LB66*/
         MVI   VOLTRNTY+3,C' '                                     1670
         MVC   VOLTRNTY(3),DUPCHAR                                 1670
*       BASOWNER=' ';               /*                       @Z40LB66*/
         MVI   BASOWNER+1(BASEVPTR),C' '                           1671
         MVC   BASOWNER+2(8,BASEVPTR),BASOWNER+1(BASEVPTR)         1671
         MVI   BASOWNER(BASEVPTR),C' '                             1671
*     END;                          /*                       @Z40LB66*/
*   ELSE                                                           1673
*     DO;                           /*                       @Z40LB66*/
         B     @RC01668                                            1673
@RF01668 DS    0H                                                  1674
*       IF BCDBASE=ON THEN                                         1674
         L     @04,BCDVPTR                                         1674
         TM    BCDBASE(@04),B'00100000'                            1674
         BNO   @RF01674                                            1674
*         DO;                       /*                       @Z40LB66*/
*                                                                  1675
*           /*********************************************************/
*           /*                                                       */
*           /* FOR BASE VOLUMES, SET THE STATE,              @Z40LB66*/
*           /* TYPE AND ATTRIBUTES                           @Z40LB66*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1676
*           IF BASINAC=OFF THEN     /* ACTIVE ?              @Z40LB66*/
         TM    BASINAC(BASEVPTR),B'00000100'                       1676
         BNZ   @RF01676                                            1676
*             VOLTRNST=ACTCHAR;     /*                       @Z40LB66*/
         MVC   VOLTRNST(5),ACTCHAR                                 1677
*           IF BASGENUS=ON THEN     /* GENERAL USE ?         @Z40LB66*/
@RF01676 TM    BASGENUS(BASEVPTR),B'00010000'                      1678
         BNO   @RF01678                                            1678
*             VOLTRNTY=GENCHAR;     /*                       @Z40LB66*/
         MVC   VOLTRNTY(4),GENCHAR                                 1679
*           IF BASRSTD=ON THEN      /* RESTRICTED USE ?      @Z40LB66*/
@RF01678 TM    BASRSTD(BASEVPTR),B'00001000'                       1680
         BNO   @RF01680                                            1680
*             VOLTRNTY=RSTRCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNTY(4),RSTRCHAR                                1681
*           IF BASBIND=ON THEN                                     1682
@RF01680 TM    BASBIND(BASEVPTR),B'00000010'                       1682
         BNO   @RF01682                                            1682
*             VOLTRNAT(1)=BCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT(1),BCHAR                                   1683
*           IF BASRONLY=ON THEN                                    1684
@RF01682 TM    BASRONLY(BASEVPTR),B'01000000'                      1684
         BNO   @RF01684                                            1684
*             VOLTRNAT(2)=RCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT+1(1),RCHAR                                 1685
*           IF BASDAERA=ON THEN                                    1686
@RF01684 TM    BASDAERA(BASEVPTR),B'10000000'                      1686
         BNO   @RF01686                                            1686
*             VOLTRNAT(3)=DCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT+2(1),DCHAR                                 1687
*           IF BASEXCL=ON THEN                                     1688
@RF01686 TM    BASEXCL(BASEVPTR),B'00000001'                       1688
         BNO   @RF01688                                            1688
*             VOLTRNAT(4)=ECHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT+3(1),ECHAR                                 1689
*         END;                      /*                       @Z40LB66*/
*       ELSE                                                       1691
*         DO;                       /*                       @Z40LB66*/
*                                                                  1691
         B     @RC01674                                            1691
@RF01674 DS    0H                                                  1692
*           /*********************************************************/
*           /*                                                       */
*           /* SET TYPE AND ATTRIBUTE FIELDS FOR             @Z40LB66*/
*           /* COPY VOLUMES                                  @Z40LB66*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1692
*           COPYVPTR=ADDR(VOLRCDBF);/*                       @Z40LB66*/
         LA    @04,VOLRCDBF                                        1692
         ST    @04,COPYVPTR                                        1692
*           IF COPBKUP=ON THEN      /* BACKUP COPY ?         @Z40LB66*/
         TM    COPBKUP(@04),B'00001000'                            1693
         BNO   @RF01693                                            1693
*             VOLTRNTY=BKUPCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNTY(4),BKUPCHAR                                1694
*           ELSE                                                   1695
*             VOLTRNTY=COPYCHAR;    /*                       @Z40LB66*/
         B     @RC01693                                            1695
@RF01693 MVC   VOLTRNTY(4),COPYCHAR                                1695
*           IF COPBIND=ON THEN                                     1696
@RC01693 L     @04,COPYVPTR                                        1696
         TM    COPBIND(@04),B'00000100'                            1696
         BNO   @RF01696                                            1696
*             VOLTRNAT(1)=BCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT(1),BCHAR                                   1697
*           IF COPRONLY=ON THEN                                    1698
@RF01696 L     @04,COPYVPTR                                        1698
         TM    COPRONLY(@04),B'10000000'                           1698
         BNO   @RF01698                                            1698
*             VOLTRNAT(2)=RCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT+1(1),RCHAR                                 1699
*           IF COPDAERA=ON THEN                                    1700
@RF01698 L     @04,COPYVPTR                                        1700
         TM    COPDAERA(@04),B'00000001'                           1700
         BNO   @RF01700                                            1700
*             VOLTRNAT(3)=DCHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT+2(1),DCHAR                                 1701
*           IF COPEXCL=ON THEN                                     1702
@RF01700 L     @04,COPYVPTR                                        1702
         TM    COPEXCL(@04),B'00000010'                            1702
         BNO   @RF01702                                            1702
*             VOLTRNAT(4)=ECHAR;    /*                       @Z40LB66*/
         MVC   VOLTRNAT+3(1),ECHAR                                 1703
*           BASOWNER=COPOWNER;      /*                       @Z40LB66*/
@RF01702 L     @04,COPYVPTR                                        1704
         MVC   BASOWNER(10,BASEVPTR),COPOWNER(@04)                 1704
*         END;                      /*                       @Z40LB66*/
*     END;                          /*                       @Z40LB66*/
@RC01674 DS    0H                                                  1707
*                                                                  1707
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE CARTRIDGE SERIAL NUMBERS AND THE MSFID        @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1707
*   IF ADDR(ALLC)>0 THEN                                           1707
@RC01668 L     @04,@PC00001+4                                      1707
         L     @04,FDTPTR+88(,@04)                                 1707
         LTR   @04,@04                                             1707
         BNP   @RF01707                                            1707
*     DO;                           /*                       @Z40LB66*/
*                                                                  1708
*       /*************************************************************/
*       /*                                                           */
*       /* IF THERE IS AN INCONSISTENCY BETWEEN THE CARTRIDGE INDEX  */
*       /* RECORDS AND THE BASE VOLUME RECORDS IN THE MSVI, THEN WE  */
*       /* MUST LET THE USER KNOW ABOUT IT AND TERMINATE THE LIST TO */
*       /* PREVENT LOOPING.                                  @ZA13476*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1709
*       SAVECSN=PREVCSN;            /*                       @ZA13476*/
         MVC   SAVECSN(12),PREVCSN                                 1709
*       IF(PREVCSN>=BCDCSN1&PREVCSN>=BCDCSN2)×/*             @ZA13476*/
*           BCDCSN1=ZEROCSN×BCDCSN2=ZEROCSN THEN/*           @ZA13476*/
         L     @04,BCDVPTR                                         1710
         CLC   PREVCSN(12),BCDCSN1(@04)                            1710
         BL    @GL00080                                            1710
         CLC   PREVCSN(12),BCDCSN2(@04)                            1710
         BNL   @RT01710                                            1710
@GL00080 L     @04,BCDVPTR                                         1710
         CLC   BCDCSN1(12,@04),ZEROCSN                             1710
         BE    @RT01710                                            1710
         CLC   BCDCSN2(12,@04),ZEROCSN                             1710
         BNE   @RF01710                                            1710
@RT01710 DS    0H                                                  1711
*         MSVIERR=ON;               /*                       @ZA13476*/
*                                                                  1711
         OI    MSVIERR,B'00010000'                                 1711
*       /*************************************************************/
*       /*                                                           */
*       /* WHEN PROCESSING ALL CARTRIDGES, THE               @Z40LB66*/
*       /* CURRENT CART. IS DETERMINED BY COMPARING THE      @Z40LB66*/
*       /* TWO CSN VALUES AND THE PREVIOUS ONE (CTGSERNO)    @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1712
*       IF(BCDCSN1>BCDCSN2&BCDCSN2^>PREVCSN)/*               @Z40LB66*/
*           ×(BCDCSN1<BCDCSN2&BCDCSN1>PREVCSN)/*             @Z40LB66*/
*         THEN                                                     1712
@RF01710 L     @04,BCDVPTR                                         1712
         CLC   BCDCSN1(12,@04),BCDCSN2(@04)                        1712
         BNH   @GL00082                                            1712
         CLC   BCDCSN2(12,@04),PREVCSN                             1712
         BNH   @RT01712                                            1712
@GL00082 L     @04,BCDVPTR                                         1712
         CLC   BCDCSN1(12,@04),BCDCSN2(@04)                        1712
         BNL   @RF01712                                            1712
         CLC   BCDCSN1(12,@04),PREVCSN                             1712
         BNH   @RF01712                                            1712
@RT01712 DS    0H                                                  1713
*         DO;                       /*                       @Z40LB66*/
*           PREVCSN=BCDCSN1;        /*                       @Z40LB66*/
         L     @04,BCDVPTR                                         1714
         MVC   PREVCSN(12),BCDCSN1(@04)                            1714
*           IF BCDLIB1=0 THEN                                      1715
         CLI   BCDLIB1(@04),0                                      1715
         BNE   @RF01715                                            1715
*             BASDEST(1:5)=MSF0CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF0CHAR                        1716
*           IF BCDLIB1=1 THEN                                      1717
@RF01715 L     @04,BCDVPTR                                         1717
         CLI   BCDLIB1(@04),1                                      1717
         BNE   @RF01717                                            1717
*             BASDEST(1:5)=MSF1CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF1CHAR                        1718
*         END;                      /*                       @Z40LB66*/
*       ELSE                                                       1720
*         DO;                       /*                       @Z40LB66*/
         B     @RC01712                                            1720
@RF01712 DS    0H                                                  1721
*           PREVCSN=BCDCSN2;        /*                       @Z40LB66*/
         L     @04,BCDVPTR                                         1721
         MVC   PREVCSN(12),BCDCSN2(@04)                            1721
*           BCDCSN2=BCDCSN1;        /*                       @Z40LB66*/
         MVC   BCDCSN2(12,@04),BCDCSN1(@04)                        1722
*           BCDCSN1=PREVCSN;        /*                       @Z40LB66*/
         MVC   BCDCSN1(12,@04),PREVCSN                             1723
*           IF BCDLIB2=0 THEN                                      1724
         CLI   BCDLIB2(@04),0                                      1724
         BNE   @RF01724                                            1724
*             BASDEST(1:5)=MSF0CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF0CHAR                        1725
*           IF BCDLIB2=1 THEN                                      1726
@RF01724 L     @04,BCDVPTR                                         1726
         CLI   BCDLIB2(@04),1                                      1726
         BNE   @RF01726                                            1726
*             BASDEST(1:5)=MSF1CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF1CHAR                        1727
*         END;                      /*                       @Z40LB66*/
*     END;                          /*                       @Z40LB66*/
*   ELSE                                                           1730
*     DO;                           /*                       @Z40LB66*/
*                                                                  1730
         B     @RC01707                                            1730
@RF01707 DS    0H                                                  1731
*       /*************************************************************/
*       /*                                                           */
*       /* WHEN PROCESSING ONLY SPECIFIED CARTRIDGES,        @Z40LB66*/
*       /* THE CSN IS IN THE READVVI PARAMETER LIST          @Z40LB66*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1731
*       IF RVVRDCSN=BCDCSN1 THEN                                   1731
         L     @04,BCDVPTR                                         1731
         CLC   RVVRDCSN(12,RVVIPTR),BCDCSN1(@04)                   1731
         BNE   @RF01731                                            1731
*         DO;                       /*                       @Z40LB66*/
*           PREVCSN=BCDCSN1;        /*                       @Z40LB66*/
         MVC   PREVCSN(12),BCDCSN1(@04)                            1733
*           IF BCDLIB1=0 THEN                                      1734
         CLI   BCDLIB1(@04),0                                      1734
         BNE   @RF01734                                            1734
*             BASDEST(1:5)=MSF0CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF0CHAR                        1735
*           IF BCDLIB1=1 THEN                                      1736
@RF01734 L     @04,BCDVPTR                                         1736
         CLI   BCDLIB1(@04),1                                      1736
         BNE   @RF01736                                            1736
*             BASDEST(1:5)=MSF1CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF1CHAR                        1737
*         END;                      /*                       @Z40LB66*/
*       ELSE                                                       1739
*         DO;                       /*                       @Z40LB66*/
         B     @RC01731                                            1739
@RF01731 DS    0H                                                  1740
*           PREVCSN=BCDCSN2;        /*                       @Z40LB66*/
         L     @04,BCDVPTR                                         1740
         MVC   PREVCSN(12),BCDCSN2(@04)                            1740
*           BCDCSN2=BCDCSN1;        /*                       @Z40LB66*/
         MVC   BCDCSN2(12,@04),BCDCSN1(@04)                        1741
*           BCDCSN1=PREVCSN;        /*                       @Z40LB66*/
         MVC   BCDCSN1(12,@04),PREVCSN                             1742
*           IF BCDLIB2=0 THEN                                      1743
         CLI   BCDLIB2(@04),0                                      1743
         BNE   @RF01743                                            1743
*             BASDEST(1:5)=MSF0CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF0CHAR                        1744
*           IF BCDLIB2=1 THEN                                      1745
@RF01743 L     @04,BCDVPTR                                         1745
         CLI   BCDLIB2(@04),1                                      1745
         BNE   @RF01745                                            1745
*             BASDEST(1:5)=MSF1CHAR;/*                       @Z40LB66*/
         MVC   BASDEST(5,BASEVPTR),MSF1CHAR                        1746
*         END;                      /*                       @Z40LB66*/
@RF01745 DS    0H                                                  1748
*     END;                          /*                       @Z40LB66*/
@RC01731 DS    0H                                                  1749
*   RETURN CODE(0);                 /*                       @Z40LB66*/
@RC01707 SLR   @15,@15                                             1749
@EL00022 DS    0H                                                  1749
@EF00022 DS    0H                                                  1749
@ER00022 L     @14,12(,@13)                                        1749
         BR    @14                                                 1749
*   END CTGFMTR;                    /*                       @Z40LB66*/
*                                                                  1751
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE NAME - CTGPRNT                              @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* FUNCTION - TO PRINT DATA FOR A SINGLE CARTRIDGE       @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* INPUT - THE PRINT ARGUMENT LIST AND THE MSF           @Z40LB66*/
*   /* IDENTIFIER IN THE VOLUME RECORD                       @Z40LB66*/
*   /*                                                       @Z40LB66*/
*   /* OUTPUT - RETURN CODE OF ZERO AND UPDATED              @Z40LB66*/
*   /* SUMMARY TABLE                                         @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1751
*CTGPRNT:                                                          1751
*   PROC OPTIONS(SAVE(REG14));      /*                       @ZDR2056*/
CTGPRNT  ST    @14,@SA00023                                        1751
*   OLDERID2=NEWERID2;                                             1752
         L     @07,@PC00001                                        1752
         L     @04,GDTTR2(,@07)                                    1752
         MVC   @TS00001(95),NEWERID2(@04)                          1752
         MVC   OLDERID2(95,@04),@TS00001                           1752
*   NEWID2='LVXA';                  /*                       @Z40LB66*/
         MVC   NEWID2(4,@04),@CC02568                              1753
*   TESTRC=0;                       /*                       @Z40LB66*/
*                                                                  1754
         SLR   TESTRC,TESTRC                                       1754
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT THE CARTRIDGE DATA                              @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1755
*   CALL AMSTP011(GDTTBL,PRINTME,DDSTRU);/*                  @Z40LB66*/
*                                                                  1755
         ST    @07,@AL00001                                        1755
         LA    @04,PRINTME                                         1755
         ST    @04,@AL00001+4                                      1755
         LA    @04,DDSTRU                                          1755
         ST    @04,@AL00001+8                                      1755
         MVI   @AL00001+8,X'80'                                    1755
         L     @15,GDTPRT(,@07)                                    1755
         LA    @01,@AL00001                                        1755
         BALR  @14,@15                                             1755
*   /*****************************************************************/
*   /*                                                               */
*   /* INCREMENT THE PROPER COUNTS IN THE SUMMARY TABLE      @Z40LB66*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1756
*   MAINCTR=MAINCTR+1;              /*                       @Z40LB66*/
         LA    @07,1                                               1756
         L     @04,MAINCTR                                         1756
         ALR   @04,@07                                             1756
         ST    @04,MAINCTR                                         1756
*   SUMCTG=SUMCTG+1;                /*                       @Z40LB66*/
         L     @04,SUMCTG                                          1757
         ALR   @04,@07                                             1757
         ST    @04,SUMCTG                                          1757
*   IF BASDEST(1:5)=MSF0CHAR(1:5) THEN                             1758
         CLC   BASDEST(5,BASEVPTR),MSF0CHAR                        1758
         BNE   @RF01758                                            1758
*     SUMMSF0=SUMMSF0+1;            /*                       @Z40LB66*/
         AL    @07,SUMMSF0                                         1759
         ST    @07,SUMMSF0                                         1759
*   ELSE                                                           1760
*     IF BASDEST(1:5)=MSF1CHAR(1:5) THEN                           1760
         B     @RC01758                                            1760
@RF01758 CLC   BASDEST(5,BASEVPTR),MSF1CHAR                        1760
         BNE   @RF01760                                            1760
*       SUMMSF1=SUMMSF1+1;          /*                       @Z40LB66*/
         LA    @07,1                                               1761
         AL    @07,SUMMSF1                                         1761
         ST    @07,SUMMSF1                                         1761
*     ELSE                                                         1762
*       SUMEJECT=SUMEJECT+1;        /*                       @Z40LB66*/
         B     @RC01760                                            1762
@RF01760 LA    @07,1                                               1762
         AL    @07,SUMEJECT                                        1762
         ST    @07,SUMEJECT                                        1762
*   RETURN CODE(0);                 /*                       @Z40LB66*/
@RC01760 DS    0H                                                  1763
@RC01758 SLR   @15,@15                                             1763
@EL00023 DS    0H                                                  1763
@EF00023 DS    0H                                                  1763
@ER00023 L     @14,@SA00023                                        1763
         BR    @14                                                 1763
*   END CTGPRNT;                    /*                       @Z40LB66*/
*                                                                  1765
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @ZA27752*/
*   /* PROCEDURE NAME - DIRECTRD                             @ZA27752*/
*   /*                                                       @ZA27752*/
*   /* FUNCTION - THE PRIMARY FUNCTION OF THIS ROUTINE IS    @ZA27752*/
*   /* TO SET THE PROGRAM KEY TO 0 IN ORDER TO               @ZA27752*/
*   /* ALLOW SPECIAL PRIVILEGED INSTRUCTIONS AND             @ZA27752*/
*   /* TO CALL (VIA BALR) THE MSVI QUEUE MANAGER             @ZA27752*/
*   /* (ICBVQM00) TO DIRECTLY READ RECORDS SPEC-             @ZA27752*/
*   /* IFIED BY OTHER PROCEDURES WITHIN LISTMSVI             @ZA27752*/
*   /* WITHOUT USING SVC126 WHEREBY REDUCING I/O             @ZA27752*/
*   /* OVERHEAD. THIS FUNCTION THEN ENHANCES                 @ZA27752*/
*   /* PERFORMANCE OF THIS FREQUENTLY USED MSS               @ZA27752*/
*   /* UTILITY.                                              @ZA27752*/
*   /*                                                       @ZA27752*/
*   /* INPUT - THE RVVI CONTROL BLOCK MUST HAVE BEEN         @ZA27752*/
*   /* PREVIOUSLY INITIALIZED FOR THE CALLERS                @ZA27752*/
*   /* SPECIAL REQUEST (SEE CALLING PROCEDURE).              @ZA27752*/
*   /* THE MSVC CONTROL BLOCK (IEZSSC) MUST BE               @ZA27752*/
*   /* MADE AVAILABLE TO MSS.                                @ZA27752*/
*   /*                                                       @ZA27752*/
*   /* OUTPUT - REGISTER 15 - 0 = SUCCESSFUL                 @ZA27752*/
*   /* 4 = ICBVQM00 FAILED                                   @ZA27752*/
*   /*                                                       @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1765
*DIRECTRD:                                                         1765
*   PROCEDURE;                      /*                       @ZA27752*/
DIRECTRD STM   @14,@12,@SA00024                                    1765
*   OLDERID2=NEWERID2;                                             1766
         L     @07,@PC00001                                        1766
         L     @07,GDTTR2(,@07)                                    1766
         MVC   @TS00001(95),NEWERID2(@07)                          1766
         MVC   OLDERID2(95,@07),@TS00001                           1766
*   NEWID2='LVDR';                  /*                       @ZA27752*/
         MVC   NEWID2(4,@07),@CC02572                              1767
*   TESTRC=0;                       /*                       @ZA27752*/
*                                                                  1768
         SLR   TESTRC,TESTRC                                       1768
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSABILITY TO THE QUEUE MANAGER WITH THE   @ZA27752*/
*   /* REGISTER 0 SET TO ZERO AND REGISTER 1 POINTING TO THE @ZA27752*/
*   /* RVVI CONTROL BLOCK. SAVE THE KEY OF THE CALLER'S      @ZA27752*/
*   /* TCB IN ORDER TO RESTORE IT AFTER RETURNING FROM VQM.  @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1769
*   RESPECIFY                                                      1769
*    (REG0,                                                        1769
*     REG1,                                                        1769
*     REG2,                                                        1769
*     REG15) RESTRICTED;            /*                       @ZA27752*/
*   REG15=ICBVVIC;                  /*                       @ZA27752*/
         L     @07,CVTPTR                                          1770
         L     @07,CVTEXT2(,@07)                                   1770
         L     @07,CVTICB(,@07)                                    1770
         L     REG15,ICBVVIC(,@07)                                 1770
*   REG1=RVVIPTR;                   /*                       @ZA27752*/
         LR    REG1,RVVIPTR                                        1771
*   REG0=NULLPTR;                   /*                       @ZA27752*/
         SLR   REG0,REG0                                           1772
*   REG2=NULLPTR;                   /*                       @ZA27752*/
         SLR   REG2,REG2                                           1773
*   IPK;                            /*                       @ZA27752*/
*                                                                  1774
         IPK                                                       1774
*   /*****************************************************************/
*   /*                                                               */
*   /* THE SPKA INSTRUCTION PUTS US IN KEY 0. SINCE THERE    @ZA27752*/
*   /* IS POTENTIAL EXPOSURE TO UNINTENTIONAL MISUSE OF      @ZA27752*/
*   /* PRIVILEGED INSTRUCTIONS OR POSSIBLE OVER-WRITING OF   @ZA27752*/
*   /* LOW CORE, CARE SHOULD BE TAKEN WITH ISSUING ANY       @ZA27752*/
*   /* INTERVENING INSTRUCTIONS.                             @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1775
*   GENERATE;                                                      1775
*                                                                  1775
*                                                         /*@ZA27752*/
        SPKA 0(0)
        BALR 14,15
        SPKA 0(2)
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW WE HAVE RETURNED TO THE KEY OF OUR CALLERS TCB.   @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1776
*   RESPECIFY                                                      1776
*     RTNREG RSTD;                                                 1776
*   TESTRC=RTNREG;                                                 1777
         LR    TESTRC,RTNREG                                       1777
*   RESPECIFY                                                      1778
*     RTNREG UNRSTD;                /*                       @ZA27752*/
*   IF TESTRC=0 THEN                /*                       @ZA27752*/
         LTR   TESTRC,TESTRC                                       1779
         BNZ   @RF01779                                            1779
*     REASON=REASON&&REASON;        /*                       @ZA27752*/
         L     @14,REASON                                          1780
         LR    @07,@14                                             1780
         XR    @07,@14                                             1780
         ST    @07,REASON                                          1780
*   ELSE                            /*                       @ZA27752*/
*     REASON=REG0;                  /*                       @ZA27752*/
         B     @RC01779                                            1781
@RF01779 ST    REG0,REASON                                         1781
*   RESPECIFY                                                      1782
*    (REG0,                                                        1782
*     REG1,                                                        1782
*     REG2,                                                        1782
*     REG15) UNRESTRICTED;          /*                       @ZA27752*/
*                                                                  1782
@RC01779 DS    0H                                                  1783
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER WITH PROPER RETURN CODE              @ZA27752*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1783
*   RETURN CODE(TESTRC);            /*                       @ZA27752*/
         LR    @15,TESTRC                                          1783
         L     @14,@SA00024                                        1783
         LM    @00,@12,@SA00024+8                                  1783
         BR    @14                                                 1783
*   END DIRECTRD;                   /*                       @ZA27752*/
*                                                                  1785
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  1785
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           1785
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
SSCMSG   STM   @14,@12,@SA00025                                    1785
         MVC   @PC00025(8),0(@01)                                  1785
*                                   /*                       @Y30LB39*/
*                                                                  1786
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1786
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1786
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1786
*                                   /*                       @Y30LB39*/
*   DCL                                                            1786
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            1787
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1787
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1788
*                                   /*                       @Y30LB39*/
*   DCL                                                            1788
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            1789
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1789
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1790
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1790
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1790
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1791
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1791
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1791
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1792
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1792
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1792
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1793
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1793
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1793
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1794
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        1794
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  1795
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1795
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             1795
         L     @15,@PC00001                                        1795
         L     @14,GDTTR2(,@15)                                    1795
         MVC   @TS00001(95),NEWERID2(@14)                          1795
         MVC   OLDERID2(95,@14),@TS00001                           1795
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1796
         MVC   NEWID2(4,@14),@CC02594                              1796
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1797
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1797
         LA    @14,SSDRGLT                                         1797
         ST    @14,SSDLPTR                                         1797
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1798
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              1798
         L     @07,@PC00025                                        1798
         L     @07,SSRCODE(,@07)                                   1798
         LTR   @07,@07                                             1798
         BNP   @RF01798                                            1798
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1799
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1800
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1800
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @03,SSINXLST                                        1801
         ST    @03,DARGRETP(,@14)                                  1801
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@14),SSMODSS0                            1802
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@14),X'01'                                 1803
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1804
         MVC   DARGRETL(2,@14),@CH02613                            1804
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1805
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1805
         ST    @15,@AL00001                                        1805
         LA    @03,@CF00117                                        1805
         ST    @03,@AL00001+4                                      1805
         LA    @03,SSDLPTR                                         1805
         ST    @03,@AL00001+8                                      1805
         MVI   @AL00001+8,X'80'                                    1805
         L     @15,GDTPRT(,@15)                                    1805
         LA    @01,@AL00001                                        1805
         BALR  @14,@15                                             1805
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1806
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         LA    ENTRYNUM,1                                          1806
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   1807
@DL01807 DS    0H                                                  1808
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         LA    ENTRYNUM,1(,ENTRYNUM)                               1808
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1809
@DE01807 L     @03,@PC00025                                        1809
         LR    @15,ENTRYNUM                                        1809
         ALR   @15,@15                                             1809
         LH    @15,SSARRAY-2(@15)                                  1809
         CH    @15,SSRHALF(,@03)                                   1809
         BE    @DC01807                                            1809
         LTR   @15,@15                                             1809
         BNZ   @DL01807                                            1809
@DC01807 DS    0H                                                  1810
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1810
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1810
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @03,SSDLPTR                                         1811
         MVC   DARGSMOD(3,@03),SSMODSS0                            1811
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   ENTRYNUM,DARGSENT(,@03)                             1812
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         LR    @15,ENTRYNUM                                        1813
         ALR   @15,@15                                             1813
         LH    @15,SSARRAY-2(@15)                                  1813
         LTR   @15,@15                                             1813
         BNZ   @RF01813                                            1813
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         L     @02,@PC00025                                        1815
         ST    @02,DARGDBP(,@03)                                   1815
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@03),@CH00043                             1816
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  1819
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1819
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC01798                                            1819
@RF01798 DS    0H                                                  1820
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 1820
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @15,SSDLPTR                                         1821
         MVC   DARGSMOD(3,@15),SSMODCM0                            1821
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         IC    @14,SSMSGNUM                                        1822
         STC   @14,DARGSENT(,@15)                                  1822
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @14,@PC00025+4                                      1823
         ST    @14,DARGDBP(,@15)                                   1823
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@15),@CH00221                             1824
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1825
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1826
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  1826
@RC01798 L     @15,@PC00001                                        1826
         ST    @15,@AL00001                                        1826
         LA    @14,@CF00117                                        1826
         ST    @14,@AL00001+4                                      1826
         LA    @14,SSDLPTR                                         1826
         ST    @14,@AL00001+8                                      1826
         MVI   @AL00001+8,X'80'                                    1826
         L     @15,GDTPRT(,@15)                                    1826
         LA    @01,@AL00001                                        1826
         BALR  @14,@15                                             1826
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1827
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             1827
         L     @14,@SA00025                                        1827
         LM    @00,@12,@SA00025+8                                  1827
         BR    @14                                                 1827
*   END SSCMSG;                     /*                       @Y30LB39*/
*                                                                  1829
*/****************************************************************** */
*/*                                                          @Y30LB32*/
*/*  PROCEDURE NAME - CKCSNLEN (FSR SUBROUTINE)              @Y30LB32*/
*/*                                                          @Y30LB32*/
*/*  FUNCTION - CHECKS LENGTH OF CARTRIDGE SERIAL NUMBER     @Y30LB32*/
*/*             IF THE LENGTH OF THE CSN IS LESS THEN ELEVEN,@Y30LB32*/
*/*             ISSUES MESSAGE IDC2099I, IF CSN IS ELEVEN    @Y30LB32*/
*/*             A BLANK CHARACTER IS INSERTED AS THE FOURTH  @Y30LB32*/
*/*             CHARACTER                                    @Y30LB32*/
*/*                                                          @Y30LB32*/
*/*  INPUT - CSN, LENGTH OF CSN                              @Y30LB32*/
*/*                                                          @Y30LB32*/
*/*  OUTPUT - CSN, RETURN CODE IN REGISTER 15(RETURN CODE    @Y30LB32*/
*/*           ZERO IF CSN VALID AND FOUR IF CSN INVALID)     @Y30LB32*/
*/*                                                          @Y30LB32*/
*/********************************************************************/
*                                                                  1829
*CKCSNLEN:                          /*                       @Y30LB32*/
*   PROCEDURE(CKCSNVAL,             /* CSN VALUE             @Y30LB32*/
*       CKLENGTH)                   /* LENGTH OF CSN         @Y30LB32*/
*       OPTIONS(NOSAVE,NOSAVEAREA); /*                       @Y30LB32*/
*                                                                  1829
CKCSNLEN MVC   @PC00026(8),0(@01)                                  1829
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARATIONS FOR CKCSNLEN SUBROUTINE                  @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1830
*   DCL                                                            1830
*     CKCSNVAL CHAR(12);            /* CSN VALUE             @Y30LB32*/
*   DCL                                                            1831
*     CKCSNADJ CHAR(12);            /* FOR ADJUSTED CSN      @Y30LB32*/
*   DCL                                                            1832
*     CKLENGTH FIXED(8);            /* LENGTH OF CSN         @Y30LB32*/
*   DCL                                                            1833
*     CKRETPTR PTR(31);             /* SAVE RETURN ADDR      @Y30LB32*/
*   DCL                                                            1834
*     CKSAVPTR PTR(31);             /* TO SAVE POINTER       @Y30LB32*/
*   DCL                                                            1835
*     CKPRTTAB CHAR(20) BDY(WORD);  /* PRINT TABLE AREA      @Y30LB32*/
*   DCL                                                            1836
*     CKCOND FIXED(15);                                            1836
*                                                                  1836
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARATIONS OF CONSTANTS                             @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1837
*   DCL                                                            1837
*     CKBLANK CHAR(1) CONSTANT(' ');/* BLANK TO INSERT IN    @Y30LB32
*                                      CSN                   @Y30LB32*/
*   DCL                                                            1838
*     CKELEVEN BIT(8) CONSTANT('0B'X);/* TO CHECK LENGTH     @Y30LB32
*                                      OF CSN AGAINST        @Y30LB32*/
*   DCL                                                            1839
*     CKMSGID CHAR(3) CONSTANT('CM0');/* MODULE MESSAGE ID   @Y30LB32*/
*   DCL                                                            1840
*     MSG2099I PTR(8) CONSTANT(1);  /* INVALID CSN MSG       @Y30LB32*/
*                                                                  1841
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE START OF THE CHECK CSN SUBROUTINE         @Y30LB32*/
*   /* THE CALLERS RETURN ADDRESS IS SAVED                   @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1841
*   CKRETPTR=REG14;                 /*                       @Y30LB32*/
         LR    CKRETPTR,REG14                                      1841
*   OLDERID2=NEWERID2;                                             1842
         L     @04,@PC00001                                        1842
         L     @04,GDTTR2(,@04)                                    1842
         MVC   @TS00001(95),NEWERID2(@04)                          1842
         MVC   OLDERID2(95,@04),@TS00001                           1842
*   NEWID2='CKLN';                  /*                       @Y30LB32*/
*                                                                  1843
         MVC   NEWID2(4,@04),@CC02612                              1843
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE POINTER TO CALLERS PRINT TABLE,                  @Y30LB32*/
*   /* INITIALIZE THE PRINT ARGUMENT LIST                    @Y30LB32*/
*   /* AND CONDITION CODE TO ZEROES                          @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1844
*   CKSAVPTR=DDSTRU;                /*                       @Y30LB32*/
         L     CKSAVPTR,DDSTRU                                     1844
*   DDSTRU=ADDR(CKPRTTAB);          /*                       @Y30LB32*/
         LA    @04,CKPRTTAB                                        1845
         ST    @04,DDSTRU                                          1845
*   CKPRTTAB=''B;                   /*                       @Y30LB32*/
         XC    CKPRTTAB(20),CKPRTTAB                               1846
*   CKCOND=''B;                     /*                       @Y30LB32*/
*                                                                  1847
         SLR   CKCOND,CKCOND                                       1847
*   /*****************************************************************/
*   /*                                                               */
*   /* CSN IS CHECKED FOR LENGTH OF ELEVEN CHARACTERS        @Y30LB32*/
*   /* OR MORE                                               @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1848
*   IF CKLENGTH>=CKELEVEN THEN      /*                       @Y30LB32*/
*                                                                  1848
         L     @04,@PC00026+4                                      1848
         CLI   CKLENGTH(@04),11                                    1848
         BL    @RF01848                                            1848
*     /***************************************************************/
*     /*                                                             */
*     /* CSN IS CHECKED FOR LENGTH OF ELEVEN AND IF IT IS    @Y30LB32*/
*     /* ELEVEN A BLANK CHARACTER IS INSERTED AS FOURTH      @Y30LB32*/
*     /* CHARACTER                                           @Y30LB32*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  1849
*     IF CKLENGTH=CKELEVEN THEN     /*                       @Y30LB32*/
         CLI   CKLENGTH(@04),11                                    1849
         BNE   @RF01849                                            1849
*       DO;                         /*                       @Y30LB32*/
*         CKCSNADJ(4:4)=CKBLANK;    /*                       @Y30LB32*/
         MVI   CKCSNADJ+3,C' '                                     1851
*         CKCSNADJ(5:12)=CKCSNVAL(4:11);/*                   @Y30LB32*/
         L     @04,@PC00026                                        1852
         MVC   CKCSNADJ+4(8),CKCSNVAL+3(@04)                       1852
*         CKCSNVAL(4:12)=CKCSNADJ(4:12);/*                   @Y30LB32*/
         MVC   CKCSNVAL+3(9,@04),CKCSNADJ+3                        1853
*       END;                        /*                       @Y30LB32*/
*     ELSE                                                         1855
*       ;                           /*                       @Y30LB32*/
*                                                                  1855
@RF01849 DS    0H                                                  1856
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CSN IS LESS THEN ELEVEN CHARACTERS ERROR           @Y30LB32*/
*   /* MESSAGE IDC2099I IS WRITTEN AND CONDITION CODE SET    @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1856
*   ELSE                            /*                       @Y30LB32*/
*     DO;                           /*                       @Y30LB32*/
         B     @RC01848                                            1856
@RF01848 DS    0H                                                  1857
*       DARGSMOD=CKMSGID;           /*                       @Y30LB32*/
         L     @04,DDSTRU                                          1857
         MVC   DARGSMOD(3,@04),@CC02400                            1857
*       DARGSENT=MSG2099I;          /*                       @Y30LB32*/
         MVI   DARGSENT(@04),X'01'                                 1858
*       DARGDBP=ADDR(CKCSNVAL);     /*                       @Y30LB32*/
         L     @15,@PC00026                                        1859
         ST    @15,DARGDBP(,@04)                                   1859
*       DARGILP=LENGTH(CKCSNVAL);   /*                       @Y30LB32*/
         MVC   DARGILP(2,@04),@CH00038                             1860
*       DARGRETP=''B;               /*                       @Y30LB32*/
         SLR   @15,@15                                             1861
         ST    @15,DARGRETP(,@04)                                  1861
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB32*/
         L     @04,@PC00001                                        1862
         ST    @04,@AL00001                                        1862
         LA    @15,@CF00117                                        1862
         ST    @15,@AL00001+4                                      1862
         LA    @15,DDSTRU                                          1862
         ST    @15,@AL00001+8                                      1862
         MVI   @AL00001+8,X'80'                                    1862
         L     @15,GDTPRT(,@04)                                    1862
         LA    @01,@AL00001                                        1862
         BALR  @14,@15                                             1862
*       CKCOND=4;                   /*                       @Y30LB32*/
         LA    CKCOND,4                                            1863
*     END;                          /*                       @Y30LB32*/
*                                                                  1864
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE PRINT AREA POINTER AND RETURN ADDRESS AND     @Y30LB32*/
*   /* RETURN CONTROL TO CALLING FSR                         @Y30LB32*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1865
*   DDSTRU=CKSAVPTR;                /*                       @Y30LB32*/
@RC01848 ST    CKSAVPTR,DDSTRU                                     1865
*   REG14=CKRETPTR;                 /*                       @Y30LB32*/
         LR    REG14,CKRETPTR                                      1866
*   RETURN CODE(CKCOND);            /*                       @Y30LB32*/
         LR    @15,CKCOND                                          1867
@EL00026 DS    0H                                                  1867
@EF00026 DS    0H                                                  1867
@ER00026 BR    @14                                                 1867
*   END CKCSNLEN;                   /*                       @Y30LB32*/
*   END IDCLV01                     /*                       @Y30LB33*/
*                                                                  1869
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IDCCSLV )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (IEZBASEV)                                       */
*/*%INCLUDE SYSLIB  (IEZBCDV )                                       */
*/*%INCLUDE SYSLIB  (IEZCOPYV)                                       */
*/*%INCLUDE SYSLIB  (IEZDUPV )                                       */
*/*%INCLUDE SYSLIB  (IEZGROUP)                                       */
*/*%INCLUDE SYSLIB  (IEZINDEX)                                       */
*/*%INCLUDE SYSLIB  (IEZRVVI )                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF50 )                                       */
*                                                                  1869
*       ;                                                          1869
@DATA    DS    0H
@CH00159 DC    H'6'
@CH00037 DC    H'10'
@CH00650 DC    H'14'
@CH02362 DC    H'36'
@CH02164 DC    H'48'
@CH02621 DC    H'68'
@CH02419 DC    H'73'
@CH02420 DC    H'89'
@CH02418 DC    H'107'
@CH02613 DC    H'120'
@CH02378 DC    H'121'
@CH02619 DC    H'164'
@CH02623 DC    H'182'
@CH02624 DC    H'184'
@CH02618 DC    H'224'
@CH02625 DC    H'244'
@CH02520 DC    H'404'
@CH02376 DC    H'484'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    1F
@SA00006 DS    1F
@SA00003 DS    1F
@SA00004 DS    1F
@SA00005 DS    1F
@SA00018 DS    1F
@SA00019 DS    1F
@SA00009 DS    1F
@SA00016 DS    1F
@SA00013 DS    1F
@SA00015 DS    1F
@SA00014 DS    1F
@SA00007 DS    1F
@SA00008 DS    1F
@SA00011 DS    1F
@SA00010 DS    1F
@SA00012 DS    1F
@SA00024 DS    15F
@SA00025 DS    15F
@PC00025 DS    2F
@PC00026 DS    2F
@SA00020 DS    1F
@SA00021 DS    1F
@SA00023 DS    1F
@AL00001 DS    3A
@TF00001 DS    F
IDCLV01  CSECT
         DS    0F
@CF00117 DC    F'0'
@CH00117 EQU   @CF00117+2
@CF00221 DC    F'1'
@CH00221 EQU   @CF00221+2
@CF00156 DC    F'2'
@CH00156 EQU   @CF00156+2
@CF00165 DC    F'3'
@CH00165 EQU   @CF00165+2
@CF00043 DC    F'4'
@CH00043 EQU   @CF00043+2
@CF00035 DC    F'8'
@CH00035 EQU   @CF00035+2
@CF00038 DC    F'12'
@CH00038 EQU   @CF00038+2
@CF00507 DC    F'16'
@CH00507 EQU   @CF00507+2
@CF02312 DC    F'520'
@CF02314 DC    F'547'
@CF02316 DC    F'548'
@CF02318 DC    F'572'
@CF02650 DC    F'-12'
@CF02649 DC    F'-11'
@CF02639 DC    F'-7'
@CF02637 DC    F'-5'
@CF02648 DC    XL4'0000FFFF'
@CF02536 DC    XL4'FFFF'
@CH02536 EQU   @CF02536+2
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
BCDVPTR  DS    A
COPYVPTR DS    A
DUPVPTR  DS    A
PRINTME  DS    A
REASON   DS    F
DUMPADDR DS    A
SSDLPTR  DS    A
LISTPTR  DS    A
SETRC    DS    H
RPTLOOP  DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
PRNTCONS DS    CL120
         ORG   PRNTCONS
BCHAR    DS    CL1
RCHAR    DS    CL1
DCHAR    DS    CL1
ECHAR    DS    CL1
UNKCHAR  DS    CL15
REASCHAR DS    CL15
MSF0CHAR DS    CL15
MSF1CHAR DS    CL15
NRLCHAR  DS    CL5
RLSCHAR  DS    CL5
ACTCHAR  DS    CL5
INACHAR  DS    CL5
PHOLDER  DS    CL5
BLANKS   DS    CL5
GENCHAR  DS    CL4
RSTRCHAR DS    CL4
COPYCHAR DS    CL4
BKUPCHAR DS    CL4
BASECHAR DS    CL4
YESCHAR  DS    CL3
DUPCHAR  DS    CL3
         ORG   PRNTCONS+120
LVOPNAGL DS    BL48
LVDRGLST DS    CL80
SUMTBL   DS    CL48
         ORG   SUMTBL
SUMGVOL  DS    FL4
SUMRVOL  DS    FL4
SUMIVOL  DS    FL4
SUMCPY   DS    FL4
SUMGPS   DS    FL4
SUMDUP   DS    FL4
SUMVOL   DS    FL4
MAINCTR  DS    FL4
SUMCTG   DS    FL4
SUMMSF0  DS    FL4
SUMMSF1  DS    FL4
SUMEJECT DS    FL4
         ORG   SUMTBL+48
VOLAREA  DS    CL244
         ORG   VOLAREA
VOLTRNST DS    CL5
         ORG   VOLTRNST
VOLTRNS1 DS    CL3
VOLTRNS2 DS    CL2
         ORG   VOLAREA+5
VOLTRNAT DS    CL4
VOLTRNTY DS    CL4
@NM00118 DS    CL3
VOLAVGFD DS    FL4
VOLRCDBF DS    CL224
         ORG   VOLAREA+244
CPYAREA  DS    CL182
         ORG   CPYAREA
CPYTRNST DS    CL5
CPYTRNDT DS    CL4
CPYTRNTY DS    CL4
@NM00119 DS    CL3
CPYTRNSQ DS    FL2
CPYRCDBF DS    CL164
         ORG   CPYAREA+182
         DS    CL2
GRPAREA  DS    CL184
         ORG   GRPAREA
GRPTRNAT DS    CL4
GRPTRNRL DS    CL5
@NM00120 DS    CL3
GRPTRNTS DS    FL4
GRPAVGFD DS    FL4
GRPRCDBF DS    CL164
         ORG   GRPAREA+184
VOLRVVI  DS    CL68
GRPRVVI  DS    CL68
CPYRVVI  DS    CL68
PREVCSN  DS    CL12
SAVECSN  DS    CL12
SWCHBITS DS    CL1
         ORG   SWCHBITS
FRSTDUP  DS    BL1
LISTGO   EQU   SWCHBITS+0
ALLVCALL EQU   SWCHBITS+0
MSVIERR  EQU   SWCHBITS+0
@NM00122 EQU   SWCHBITS+0
         ORG   SWCHBITS+1
TITLSPCE DS    CL484
MAINTITL DS    CL121
         DS    CL2
PCARG    DS    CL33
         ORG   PCARG
PCMTLP   DS    AL4
PCSTLP   DS    AL4
PCFLP    DS    AL4
PCPCP    DS    AL4
PCPNL    DS    FL2
PCPTL    DS    FL2
PCPDL    DS    FL2
PCMTLC   DS    FL2
PCSTLC   DS    FL2
PCFLC    DS    FL2
PCLW     DS    FL2
PCPD     DS    FL2
PCDSC    DS    AL1
         ORG   PCARG+33
         DS    CL3
DUMPAREA DS    CL17
LVMYDRG  DS    CL20
SSDRGLT  DS    CL20
         DS    CL3
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
CKCSNADJ DS    CL12
CKPRTTAB DS    CL20
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCLV01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
RVVLEN   DC    AL2(68)
SSMSGNUM DC    AL1(56)
@CC02538 DC    C'     '
@CC02417 DC    C'LVAA'
@CC02422 DC    C'LVAE'
@CC02439 DC    C'LVBA'
@CC02454 DC    C'LVCA'
@CC02461 DC    C'LVDA'
@CC02468 DC    C'LVEA'
@CC02472 DC    C'LVFA'
@CC02477 DC    C'LVGA'
@CC02482 DC    C'LVHA'
@CC02486 DC    C'LVIA'
@CC02495 DC    C'LVJA'
@CC02499 DC    C'LVKA'
@CC02500 DC    C'RVVI'
@CC02502 DC    C'LVKB'
@CC02509 DC    C'LVLA'
@CC02510 DC    C'LVLB'
@CC02511 EQU   @CC02538
@CC02515 DC    C'LVMA'
@CC02519 DC    C'LVNA'
@CC02524 DC    C'LVOA'
@CC02525 DC    C'LVOB'
@CC02529 DC    C'LVPA'
@CC02533 DC    C'LVRA'
@CC02542 DC    C'LVSA'
@CC02548 DC    C'LVTA'
@CC02552 DC    C'LVUA'
@CC02559 DC    C'LVVA'
@CC02560 DC    C'LVVB'
@CC02564 DC    C'LVWA'
@CC02568 DC    C'LVXA'
@CC02572 DC    C'LVDR'
@CC02594 DC    C'SSAA'
@CC02612 DC    C'CKLN'
@CC02394 DC    C'UV0'
@CC02396 DC    C'LV0'
@CC02400 DC    C'CM0'
@CC02534 EQU   @CC02538
@CB02537 DC    X'FFFFFFFF'
@CB02535 DC    X'0000'
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
RVOPENR  DC    CL8'OPENR   '
RVRDCNT  DC    CL8'READCNT '
RVREADKD DC    CL8'READKD  '
RVSPACCR DC    CL8'SPACCR  '
RVFWRITE DC    CL8'FWRITE  '
RVWRITER DC    CL8'WRITEREC'
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODIFYC  DC    CL8'MODIFYC '
MODID    DC    CL4'LV01'
         DS    CL2
ZEROCSN  DS    CL12
         ORG   ZEROCSN
@NM00121 DC    12X'00'
         ORG   ZEROCSN+12
NULLFFS  DC    X'FF'
         DS    CL3
FIXAREA  DS    CL642
         ORG   FIXAREA
@NM00123 DS    CL642
         ORG   @NM00123
@NM00124 DC    214X'00'
@NM00125 DC    214X'00'
@NM00126 DC    214X'00'
         ORG   FIXAREA+642
         DS    CL2
MOD1     DS    CL4
         ORG   MOD1
MOD101   DC    B'00000000'
MOD102   DC    B'00000000'
MOD103   DC    B'00000000'
MOD104   DC    B'00001100'
         ORG   MOD1+4
MOD2     DS    CL4
         ORG   MOD2
MOD201   DC    B'00000000'
MOD202   DC    B'00000000'
MOD203   DC    B'00000000'
MOD204   DC    B'00100100'
         ORG   MOD2+4
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
BITMASK  DC    X'80'
         DC    X'40'
         DC    X'20'
         DC    X'10'
         DC    X'08'
         DC    X'04'
         DC    X'02'
         DC    X'01'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CKCOND   EQU   @03
CKSAVPTR EQU   @07
CKRETPTR EQU   @06
ENTRYNUM EQU   @02
VOLRPTR  EQU   @03
X        EQU   @03
COUNTER  EQU   @04
MYCODE   EQU   @03
SUMMASK  EQU   @04
RVVIPTR  EQU   @05
INDEXPTR EQU   @03
GROUPPTR EQU   @07
BASEVPTR EQU   @02
DMPINDEX EQU   @03
OPNPTR   EQU   @03
TESTRC   EQU   @06
RTNREG   EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG14    EQU   @14
REG15    EQU   @15
GPR01F   EQU   @01
GPR00P   EQU   @00
GPR01P   EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
CVTPTR   EQU   16
IDCSAEP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
RACFAGL  EQU   0
RACFFLG1 EQU   RACFAGL
RACFFLG2 EQU   RACFAGL+1
RACFFLG3 EQU   RACFAGL+2
RACFFLG4 EQU   RACFAGL+3
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00017 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IDCIOOP0 EQU   0
IDCIOCL0 EQU   0
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNOPTOT EQU   OPNOPT
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNMODAC EQU   OPNMOD
OPNIOC   EQU   OPNAGL+4
OPNDDN   EQU   OPNAGL+8
OPNDSN   EQU   OPNAGL+16
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
AMSTP042 EQU   0
AMSTP044 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGCNT  EQU   DARGLIST+14
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
DARGDTM  EQU   DARGARY+4
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTARRAY  EQU   CTMSG+4
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKFLAGS  EQU   CKAGL+28
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXOPT    EQU   EXOARG+32
EXFLG    EQU   EXOARG+33
EXGARG   EQU   0
EXWRARG  EQU   0
EXRWCHR  EQU   EXWRARG+26
EXSPACE  EQU   EXWRARG+36
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
SV82LIST EQU   0
@NM00073 EQU   SV82LIST+4
SV82DCBP EQU   @NM00073
@NM00074 EQU   SV82LIST+12
SV82WRKP EQU   @NM00074
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
VOLS     EQU   0
VOLSCNT  EQU   VOLS
@NM00093 EQU   VOLS+2
VOLSVAL  EQU   @NM00093+1
ALLV     EQU   0
GRP      EQU   0
GRPCNT   EQU   GRP
@NM00094 EQU   GRP+2
GRPVAL   EQU   @NM00094+1
AGRP     EQU   0
NGRPD    EQU   0
PT       EQU   0
VOLST    EQU   0
EXPIR    EQU   0
EXPIRVAL EQU   EXPIR
AL       EQU   0
OFILE    EQU   0
OFILEVAL EQU   OFILE+1
ODS      EQU   0
ODSFLG   EQU   ODS+10
ODSVAL   EQU   ODS+21
STAT     EQU   0
USAGE    EQU   0
LED      EQU   0
ACT      EQU   0
INACT    EQU   0
GNRL     EQU   0
RSTR     EQU   0
CTGS     EQU   0
CTGSCNT  EQU   CTGS
@NM00095 EQU   CTGS+2
CTGSLEN  EQU   @NM00095
CTGSVAL  EQU   @NM00095+1
ALLC     EQU   0
DUP      EQU   0
PLHD     EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ICB2SSCB EQU   0
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBVVIC  EQU   ICB2SSCB+72
ICBTRACE EQU   ICB2SSCB+148
BASEV    EQU   0
BASNAME  EQU   BASEV
BASSERNO EQU   BASNAME+5
BASID    EQU   BASNAME+11
BASFLAGA EQU   BASEV+14
BASTYPE  EQU   BASFLAGA
BASDLSF  EQU   BASFLAGA+2
BASGENUS EQU   BASFLAGA+2
BASRSTD  EQU   BASFLAGA+2
BASINAC  EQU   BASFLAGA+2
BASBIND  EQU   BASFLAGA+2
BASEXCL  EQU   BASFLAGA+2
BASDAERA EQU   BASFLAGA+3
BASRONLY EQU   BASFLAGA+3
BASREASS EQU   BASFLAGA+3
BASLAST  EQU   BASFLAGA+3
BASCPUID EQU   BASEV+18
BASRCVYF EQU   BASEV+20
BASSATIA EQU   BASRCVYF
BASIVCRE EQU   BASSATIA
BASIVCPY EQU   BASSATIA
BASVSMIS EQU   BASSATIA
BASMISCF EQU   BASRCVYF+2
BASHOLD  EQU   BASMISCF
BASCSN1  EQU   BASEV+24
BASLIB1  EQU   BASEV+36
BASLID1  EQU   BASLIB1
BASCSN2  EQU   BASEV+37
BASLIB2  EQU   BASEV+49
BASLID2  EQU   BASLIB2
BASNEXTV EQU   BASEV+56
BASFRESP EQU   BASEV+68
BASLEXT  EQU   BASEV+70
BASFREXT EQU   BASEV+72
BASKLCPY EQU   BASEV+76
BASCOPID EQU   BASKLCPY+11
BASDLMTD EQU   BASEV+92
BASEXPDT EQU   BASEV+96
BASDTREM EQU   BASEV+100
BASDESCR EQU   BASEV+104
BASOWNER EQU   BASEV+134
BASDEST  EQU   BASEV+144
BASRECOV EQU   BASEV+174
BASGROUP EQU   BASEV+180
BCDV     EQU   0
BCDNAME  EQU   BCDV
BCDPREFX EQU   BCDNAME
BCDID    EQU   BCDNAME+11
BCDFLAGA EQU   BCDV+14
BCDTYPE  EQU   BCDFLAGA
BCDBASE  EQU   BCDTYPE
BCDDUP   EQU   BCDTYPE
BCDFLAGB EQU   BCDFLAGA+2
BCDRCVYF EQU   BCDV+20
BCDSATIA EQU   BCDRCVYF
BCDMISCF EQU   BCDRCVYF+2
BCDCSN1  EQU   BCDV+24
BCDLIB1  EQU   BCDV+36
BCDLID1  EQU   BCDLIB1
BCDCSN2  EQU   BCDV+37
BCDLIB2  EQU   BCDV+49
BCDLID2  EQU   BCDLIB2
COPYV    EQU   0
COPNAME  EQU   COPYV
COPSERNO EQU   COPNAME+5
COPID    EQU   COPNAME+11
COPNO    EQU   COPID+1
COPFLAGA EQU   COPYV+14
COPTYPE  EQU   COPFLAGA
COPBKUP  EQU   COPFLAGA+2
COPBIND  EQU   COPFLAGA+2
COPEXCL  EQU   COPFLAGA+2
COPDAERA EQU   COPFLAGA+2
COPRONLY EQU   COPFLAGA+3
COPRCVYF EQU   COPYV+20
COPSATIA EQU   COPRCVYF
COPIVCPY EQU   COPSATIA
COPMISCF EQU   COPRCVYF+2
COPHOLD  EQU   COPMISCF
COPCSN1  EQU   COPYV+24
COPLIB1  EQU   COPYV+36
COPLID1  EQU   COPLIB1
COPCSN2  EQU   COPYV+37
COPLIB2  EQU   COPYV+49
COPLID2  EQU   COPLIB2
COPDATE  EQU   COPYV+50
COPDTREM EQU   COPYV+54
COPDEST  EQU   COPYV+88
COPOWNER EQU   COPYV+118
DUPV     EQU   0
DUPNAME  EQU   DUPV
DUPSERNO EQU   DUPNAME+5
DUPID    EQU   DUPNAME+11
DUPFLAGA EQU   DUPV+14
DUPTYPE  EQU   DUPFLAGA
DUPRCVYF EQU   DUPV+20
DUPLIB1  EQU   DUPV+36
DUPLID1  EQU   DUPLIB1
DUPLIB2  EQU   DUPV+49
DUPLID2  EQU   DUPLIB2
GROUP    EQU   0
GRONAME  EQU   GROUP
GROVVGRP EQU   GRONAME+3
GROID    EQU   GRONAME+11
GROFLAGA EQU   GROUP+13
GROTYPE  EQU   GROFLAGA
GROBIND  EQU   GROFLAGA+2
GROEXCL  EQU   GROFLAGA+2
GRODAERA EQU   GROFLAGA+2
GRORONLY EQU   GROFLAGA+2
GRORLSE  EQU   GROFLAGA+2
GRORETN  EQU   GROFLAGA+2
GROFSN   EQU   GROUP+17
GROPCENT EQU   GROUP+29
GRONGEN  EQU   GROUP+30
GRONRSTD EQU   GROUP+32
GRONINAC EQU   GROUP+34
GROFRESP EQU   GROUP+44
GROFREXT EQU   GROUP+48
GRORETPD EQU   GROUP+52
GROERRTS EQU   GROUP+56
INDEX    EQU   0
INDNAME  EQU   INDEX
INDSERNO EQU   INDNAME+1
INDTYPE  EQU   INDEX+13
INDRECKY EQU   INDEX+15
INDPREFX EQU   INDRECKY
INDRECID EQU   INDRECKY+11
RVVI     EQU   0
RVVLNGTH EQU   RVVI
RVVOPCOD EQU   RVVI+4
RVVCODE  EQU   RVVOPCOD
RVVOLUME EQU   RVVI+8
RVVGROUP EQU   RVVI+14
RVVBUFLN EQU   RVVI+30
RVVRTBUF EQU   RVVI+32
RVVEXPIR EQU   RVVI+36
RVVRDCSN EQU   RVVI+44
RVVCPYID EQU   RVVI+56
RVVDUPID EQU   RVVI+57
RVVFLAGA EQU   RVVI+58
RVVRMODE EQU   RVVFLAGA
RVVRDR   EQU   RVVRMODE
RVVRDNR  EQU   RVVRMODE
RVVRDCH  EQU   RVVRMODE
RVVCHAIN EQU   RVVFLAGA+1
RVVGPVOL EQU   RVVCHAIN
RVVNGVOL EQU   RVVCHAIN
RVVRDRCD EQU   RVVFLAGA+2
RVVBVRCD EQU   RVVRDRCD
RVVGRPRC EQU   RVVRDRCD
RVVCPYRC EQU   RVVRDRCD
RVVDUPRC EQU   RVVRDRCD
RVVCIRCD EQU   RVVRDRCD
RVVALL   EQU   RVVRDRCD
RVVRTEST EQU   RVVFLAGA+3
RVVEXPDT EQU   RVVRTEST
RVVTHOLD EQU   RVVRTEST
RVVGSVOL EQU   RVVRTEST
RVVRSTD  EQU   RVVRTEST
RVVINACT EQU   RVVRTEST
RVVACTV  EQU   RVVRTEST
RVVDVOL  EQU   RVVRTEST
RVVCPYTP EQU   RVVFLAGA+4
RVVCPLHD EQU   RVVCPYTP
RVVSPEC  EQU   RVVFLAGA+5
RVVSGRP  EQU   RVVSPEC
RVVSEXP  EQU   RVVSPEC
RVVSCSN  EQU   RVVSPEC
RVVSCPY  EQU   RVVSPEC
RVVSDUP  EQU   RVVSPEC
RVVSVOL  EQU   RVVSPEC
AMSTP041 EQU   0
AMSTP043 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARK0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSASS0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
NLED     EQU   0
RPT      EQU   0
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
GDTRCK   EQU   GDTTBL+284
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
CKCSNVAL EQU   0
CKLENGTH EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
MYCPUID  EQU   BASCPUID
CPUID1   EQU   MYCPUID
CPUID2   EQU   MYCPUID+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00127 EQU   SSRCODE
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
@NM00117 EQU   RVVI+64
RVVSSEQ  EQU   RVVSPEC
RVVSDTE  EQU   RVVSPEC
@NM00116 EQU   RVVCPYTP
RVVLCOPY EQU   RVVCPYTP
RVVOBKUP EQU   RVVCPYTP
RVVLBKUP EQU   RVVCPYTP
RVVBPLHD EQU   RVVRTEST
RVVCPURC EQU   RVVRDRCD
RVVRUNKN EQU   RVVRDRCD
@NM00115 EQU   RVVCHAIN
@NM00114 EQU   RVVRMODE
RVVRDSEQ EQU   RVVI+43
RVVBLNK1 EQU   RVVI+42
RVVCDATE EQU   RVVI+38
@NM00113 EQU   RVVI+28
RVVAREA  EQU   RVVI+24
RVVARLN  EQU   RVVI+22
@NM00112 EQU   RVVOPCOD+1
@NM00111 EQU   INDEX+28
INDEXREC EQU   INDRECID+1
INDBLNK2 EQU   INDRECID
INDVSRNO EQU   INDRECKY+5
INDBLNK1 EQU   INDPREFX+1
INDALPHA EQU   INDPREFX
INDRES2  EQU   INDTYPE
INDINDEX EQU   INDTYPE
INDRES1  EQU   INDTYPE
INDI     EQU   INDNAME
@NM00110 EQU   GROUP+136
GROADDR  EQU   GROUP+106
GROOWNER EQU   GROUP+96
GRORESSP EQU   GROUP+95
GROCONUS EQU   GROUP+94
GRODESCR EQU   GROUP+64
GROERRTM EQU   GROERRTS+4
GROERRDT EQU   GROERRTS
GROSTRSH EQU   GROUP+40
GROSSPD  EQU   GROUP+38
GROPSPD  EQU   GROUP+36
GROLSN   EQU   GROUP+23
@NM00109 EQU   GROFLAGA+2
GROMSG1  EQU   GROFLAGA+2
GRORES1  EQU   GROTYPE
GROGVR   EQU   GROTYPE
GROZERO  EQU   GROID+1
GROBLANK EQU   GROID
GROG     EQU   GRONAME
@NM00108 EQU   DUPV+50
DUP2BIT2 EQU   DUPLID2
DUP2BIT1 EQU   DUPLID2
DUPRES4  EQU   DUPLIB2
DUPCSN2  EQU   DUPV+37
DUP1BIT2 EQU   DUPLID1
DUP1BIT1 EQU   DUPLID1
DUPRES3  EQU   DUPLIB1
DUPCSN1  EQU   DUPV+24
DUPMISCF EQU   DUPRCVYF+2
DUPSATIA EQU   DUPRCVYF
@NM00107 EQU   DUPV+18
@NM00106 EQU   DUPFLAGA+2
DUPRES2  EQU   DUPTYPE
DUPDUPLR EQU   DUPTYPE
DUPRES1  EQU   DUPTYPE
DUPRES5  EQU   DUPV+13
DUPNO    EQU   DUPID+1
DUPBLANK EQU   DUPID
DUPD     EQU   DUPNAME
@NM00105 EQU   COPYV+136
COPFREXT EQU   COPYV+132
COPLEXT  EQU   COPYV+130
COPFRESP EQU   COPYV+128
COPDESCR EQU   COPYV+58
COP2BIT2 EQU   COPLID2
COP2BIT1 EQU   COPLID2
COPRES5  EQU   COPLIB2
COP1BIT2 EQU   COPLID1
COP1BIT1 EQU   COPLID1
COPRES4  EQU   COPLIB1
@NM00104 EQU   COPMISCF
COPRES3  EQU   COPSATIA
COPVSMIS EQU   COPSATIA
COPIVCRE EQU   COPSATIA
@NM00103 EQU   COPYV+18
@NM00102 EQU   COPFLAGA+3
COPDLSPF EQU   COPFLAGA+3
COPRSTD  EQU   COPFLAGA+2
COPGENUS EQU   COPFLAGA+2
COPVSAM  EQU   COPFLAGA+2
COPGROUP EQU   COPFLAGA+2
COPRES2  EQU   COPTYPE
COPCOPYV EQU   COPTYPE
COPRES1  EQU   COPTYPE
COPRES6  EQU   COPYV+13
COPBLANK EQU   COPID
COPV     EQU   COPNAME
BCD2BIT2 EQU   BCDLID2
BCD2BIT1 EQU   BCDLID2
BCDRES8  EQU   BCDLIB2
BCD1BIT2 EQU   BCDLID1
BCD1BIT1 EQU   BCDLID1
BCDRE10  EQU   BCDLIB1
BCDRES7A EQU   BCDMISCF
BCDHOLD  EQU   BCDMISCF
BCDRES7  EQU   BCDSATIA
BCDVSMIS EQU   BCDSATIA
BCDIVCPY EQU   BCDSATIA
BCDIVCRE EQU   BCDSATIA
BCDCPUID EQU   BCDV+18
BCDRES5  EQU   BCDFLAGB+1
BCDREASS EQU   BCDFLAGB+1
BCDRES4  EQU   BCDFLAGB
BCDRES3  EQU   BCDTYPE
BCDRES2  EQU   BCDTYPE
BCDCOPY  EQU   BCDTYPE
BCDRES1  EQU   BCDTYPE
BCDRES9  EQU   BCDV+13
BCDINDEX EQU   BCDID+1
BCDBLNK2 EQU   BCDID
BCDSERNO EQU   BCDNAME+5
BCDBLNK1 EQU   BCDPREFX+1
BCDALPHA EQU   BCDPREFX
@NM00101 EQU   BASEV+192
BASXPDT2 EQU   BASEV+188
BASRES6  EQU   BASEV+89
BASCOPNO EQU   BASCOPID+1
BASCOPBK EQU   BASCOPID
BASCOPSN EQU   BASKLCPY+5
BASCOPV  EQU   BASKLCPY
@NM00100 EQU   BASEV+65
BASBKLMT EQU   BASEV+64
BASNBKUP EQU   BASEV+63
BASNCOPY EQU   BASEV+62
BASPREV  EQU   BASEV+50
BAS2BIT2 EQU   BASLID2
BAS2BIT1 EQU   BASLID2
BASRES5  EQU   BASLIB2
BAS1BIT2 EQU   BASLID1
BAS1BIT1 EQU   BASLID1
BASRES4  EQU   BASLIB1
BASRES3  EQU   BASMISCF
BASRES8  EQU   BASSATIA
@NM00099 EQU   BASFLAGA+3
BASFIRST EQU   BASFLAGA+3
BASGRPV  EQU   BASFLAGA+2
BASNOCPY EQU   BASFLAGA+2
BASRES2  EQU   BASTYPE
BASBASVR EQU   BASTYPE
BASRES1  EQU   BASTYPE
BASRES7  EQU   BASEV+13
BASZERO  EQU   BASID+1
BASBLANK EQU   BASID
BASEVKEY EQU   BASNAME
ICBLORD  EQU   ICBTRACE+256
ICBOTRC  EQU   ICBTRACE
ICBRESV  EQU   ICB2SSCB+128
ICBVOLST EQU   ICB2SSCB+124
ICBVSCRA EQU   ICB2SSCB+120
ICBSAMP  EQU   ICB2SSCB+118
ICBRESVD EQU   ICB2SSCB+117
ICBCPUID EQU   ICB2SSCB+112
ICBFAB   EQU   ICB2SSCB+108
ICBMSSC  EQU   ICB2SSCB+104
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBVVICB EQU   ICB2SSCB+76
ICBSIOP  EQU   ICB2SSCB+68
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBFG3   EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00098 EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBI     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBQHEAD EQU   ICB2SSCB+36
ICBAUCB  EQU   ICB2SSCB+32
ICBPUCB  EQU   ICB2SSCB+28
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00097 EQU   CVTFIX+248
@NM00096 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ODSLEN   EQU   ODS+20
ODSMEM   EQU   ODS+12
ODSMLN   EQU   ODS+11
ODSFUQ   EQU   ODSFLG
ODSPOS   EQU   ODS+9
ODSPAS   EQU   ODS+1
ODSPLN   EQU   ODS
OFILELEN EQU   OFILE
GRPLEN   EQU   @NM00094
VOLSLEN  EQU   @NM00093
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00092 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00091 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00090 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00089 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00088 EQU   VSDSCR+5
@NM00087 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
@NM00086 EQU   VSDSTAT+29
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00085 EQU   VSDFLG2
VSDRACF  EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00084 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00083 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00082 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00081 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00080 EQU   VSDVTOC
@NM00079 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00078 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00077 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00076 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00075 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLVTOC  EQU   VOLLABEL+15
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
VOLKEY   EQU   VOLLABEL
STAVTTR  EQU   STAEPARM+54
@NM00072 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00071 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00070 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00069 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00068 EQU   RCTAGL+10
@NM00067 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00066 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00065 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00064 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00063 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00062 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00061 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00060 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00059 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00058 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00057 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
EXRWFUN  EQU   EXWRARG+46
@NM00056 EQU   EXSPACE+8
@NM00055 EQU   EXSPACE+6
@NM00054 EQU   EXSPACE+4
@NM00053 EQU   EXSPACE+1
@NM00052 EQU   EXSPACE
EXRWKDLN EQU   EXWRARG+32
@NM00051 EQU   EXWRARG+31
EXRECNUM EQU   EXRWCHR+4
EXHH     EQU   EXRWCHR+2
EXCC     EQU   EXRWCHR
EXCCWCNT EQU   EXWRARG+24
EXLOCPTR EQU   EXWRARG+20
EXRWDARE EQU   EXWRARG+16
EXRWIOAR EQU   EXWRARG+12
EXRWCTBL EQU   EXWRARG+8
EXRWRES  EQU   EXWRARG
EXGDATAL EQU   EXGARG+30
@NM00050 EQU   EXGARG+29
EXGKEYLN EQU   EXGARG+28
EXGDATAP EQU   EXGARG+24
EXGRECNO EQU   EXGARG+20
EXGCCHH2 EQU   EXGARG+16
EXGCCHH1 EQU   EXGARG+12
EXGCTLBK EQU   EXGARG+8
EXGHEAD  EQU   EXGARG
EXOVTH   EQU   EXFLG
EXORVT   EQU   EXFLG
EXORDS   EQU   EXFLG
EXOSPK   EQU   EXFLG
EXORVS   EQU   EXFLG
@NM00049 EQU   EXFLG
EXOREAD  EQU   EXFLG
@NM00048 EQU   EXOPT
EXOREP   EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXONEW   EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOTAB   EQU   EXOPT
EXOCTLBK EQU   EXOARG+28
EXOEXT   EQU   EXOARG+24
EXOUCB   EQU   EXOARG+20
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXODDN   EQU   EXOARG+8
EXOHEAD  EQU   EXOARG
@NM00047 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00046 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKTESTVT EQU   CKFLAGS
CKLABELP EQU   CKAGL+24
CKDATYPE EQU   CKAGL+20
CKDDNAME EQU   CKAGL+12
CKUCBPTR EQU   CKAGL+8
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00045 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLRR  EQU   CTARRAY+3
CTTBLHH  EQU   CTARRAY+2
CTTBLCC  EQU   CTARRAY+1
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
CTREALCC EQU   CTMSG+1
@NM00044 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00043 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00042 EQU   CMMSG+7
@NM00041 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00040 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00039 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
@NM00038 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00037 EQU   DMPITM+15
@NM00036 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00035 EQU   ERCNVTAB+4
@NM00034 EQU   ERCNVTAB+3
@NM00033 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00032 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00031 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00030 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00029 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00028 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00027 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00026 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00025 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
OPNOPTNM EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00024 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNPWA   EQU   OPNAGL+12
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00023 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00022 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00021 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00020 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00019 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00018 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00017+1
UNITCHA  EQU   @NM00017
UNITUCB  EQU   UNITABL
RACFVOLS EQU   RACFAGL+16
RACFCLN  EQU   RACFAGL+12
RACFPROF EQU   RACFAGL+8
RACFENT  EQU   RACFAGL+4
@NM00016 EQU   RACFFLG4
@NM00015 EQU   RACFFLG3
RACFPRF  EQU   RACFFLG3
@NM00014 EQU   RACFFLG3
@NM00013 EQU   RACFFLG2
RACFTRD  EQU   RACFFLG2
RACFTUPD EQU   RACFFLG2
RACFTCTL EQU   RACFFLG2
@NM00012 EQU   RACFFLG2
RACFTALT EQU   RACFFLG2
RACFCSA  EQU   RACFFLG1
RACFLOGN EQU   RACFFLG1
RACFLOGF EQU   RACFFLG1
@NM00011 EQU   RACFFLG1
RACFDSTV EQU   RACFFLG1
@NM00010 EQU   RACFFLG1
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC01027 EQU   @RC01024
@RC01043 EQU   @RC01024
@RF01048 EQU   @RC01024
@RC01170 EQU   @RC01152
@RC01388 EQU   @RC01386
@RF01398 EQU   @RC01394
@RC01319 EQU   @RC01317
@RC01414 EQU   @RC01317
@RF01688 EQU   @RC01674
@RC01712 EQU   @RC01707
@RF01726 EQU   @RC01707
@RF01736 EQU   @RC01731
@RF01813 EQU   @RC01798
@PB00026 EQU   @EL00001
@RF01375 EQU   @RC01319
@RC01416 EQU   @RC01414
@RC01422 EQU   @RC01414
@RC01439 EQU   @RC01414
@RF01444 EQU   @RC01414
@RF01717 EQU   @RC01712
@PB00025 EQU   @PB00026
@PB00024 EQU   @PB00025
@PB00023 EQU   @PB00024
@PB00022 EQU   @PB00023
@PB00021 EQU   @PB00022
@PB00020 EQU   @PB00021
@PB00019 EQU   @PB00020
@PB00018 EQU   @PB00019
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCLV01,(C'PLS1930',0701,77354)
