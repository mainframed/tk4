         TITLE '********** IDCMG01:  MODIFYG FUNCTION SUPPORT ROUTINE **
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
IDCMG01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'IDCMG01   76.320'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @10,0                                               0002
@PSTART  LA    @12,4095(,@10)                                      0002
         USING @PSTART,@10                                         0002
         USING @PSTART+4095,@12                                    0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*                                      MGP MSG NMBR          @Y30LB36
*                                      ATTRIBUTE CHG FAIL    @Y30LB36
*                                      THIS VOLUME ONLY      @Y30LB36*/
*                                                                  0279
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE MAINLINE SECTION OF THE MODIFYG FSR       @Y30LB36*/
*   /* THIS SECTION ROUTES CONTROL AMONG THE SUB-            @Y30LB36*/
*   /* PROCEDURES. EXIT FROM THE MODIFYG FSR WILL            @Y30LB36*/
*   /* OCCUR FROM HERE.                                      @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0279
*   OLDERID2=NEWERID2;                                             0279
         L     @15,@PC00001                                        0279
         L     @14,GDTTR2(,@15)                                    0279
         MVC   @TS00001(95),NEWERID2(@14)                          0279
         MVC   OLDERID2(95,@14),@TS00001                           0279
*   NEWID2='MGBT';                  /*                       @Y30LB36*/
         MVC   NEWID2(4,@14),@CC01485                              0280
*   IF GDTDBG=NULLPTR THEN                                         0281
         L     @15,GDTDBG(,@15)                                    0281
         LTR   @15,@15                                             0281
         BZ    @RT00281                                            0281
*     ;                                                            0282
*   ELSE                                                           0283
*     CALL IDCDB010(GDTTBL,'MGBG'); /*                       @Y30LB36*/
*                                                                  0283
         L     @15,@PC00001                                        0283
         ST    @15,@AL00001                                        0283
         LA    @14,@CC01486                                        0283
         ST    @14,@AL00001+4                                      0283
         MVI   @AL00001+4,X'80'                                    0283
         L     @15,GDTDBG(,@15)                                    0283
         LA    @01,@AL00001                                        0283
         BALR  @14,@15                                             0283
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE RVVI AND THE PRINT ARGUMENT            @Y30LB36*/
*   /* PARAMETER LISTS. ESTABLISH THE POINTERS               @Y30LB36*/
*   /* TO THE PARAMETER LIST FIELDS                          @Y30LB36*/
*   /* ZERO THE FLAGBYTE INDICATORS                          @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0284
*   MODCC=LASTCC00;                 /*                       @Y30LB36*/
@RT00281 SLR   MODCC,MODCC                                         0284
*   FLAGBYTE=''B;                   /*                       @Y30LB36*/
         MVI   FLAGBYTE,X'00'                                      0285
*   DDSTRU=ADDR(PRTARGS);           /*                       @Y30LB36*/
         LA    @07,PRTARGS                                         0286
         ST    @07,DDSTRU                                          0286
*   PRTARGS=''B;                    /*                       @Y30LB36*/
         XC    PRTARGS(20),PRTARGS                                 0287
*   MGPPTR=ADDR(MGRFIELD);          /*                       @Y30LB36*/
         LA    @07,MGRFIELD                                        0288
         ST    @07,MGPPTR                                          0288
*   RVVIPTR=ADDR(RDVFIELD);         /*                       @Y30LB36*/
         LA    @07,RDVFIELD                                        0289
         ST    @07,RVVIPTR                                         0289
*   BASEVPTR=ADDR(BSVFIELD);        /*                       @Y30LB36*/
         LA    BASEVPTR,BSVFIELD                                   0290
*   GROUPPTR=ADDR(GRPFIELD);        /*                       @Y30LB36*/
         LA    GROUPPTR,GRPFIELD                                   0291
*   DPLINPTR=ADDR(DPLFIELD);        /*                       @Y30LB36*/
         LA    @07,DPLFIELD                                        0292
         ST    @07,DPLINPTR                                        0292
*   RDVFIELD=''B;                   /*                       @Y30LB36*/
*                                                                  0293
         XC    RDVFIELD(68),RDVFIELD                               0293
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL THE MODGRP PROCEDURE TO BUILD THE                @Y30LB36*/
*   /* PARAMETER LIST TO MODIFY THE GROUP RECORD             @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0294
*   CALL MODGRP;                    /*                       @Y30LB36*/
         BAL   @14,MODGRP                                          0294
*                                                                  0295
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST RETURN CODE FROM THE MODGRP SUBROUTINE           @Y30LB36*/
*   /* IF 0, LOOK FOR ANY ATTRIBUTE CHANGES. IF              @Y30LB36*/
*   /* THERE ARE NONE, ISSUE NORMAL ENDING MSG (UV0-1)       @Y30LB36*/
*   /* ELSE, CALL ROUTINES TO UPDATE THE BASE VOLUME         @Y30LB36*/
*   /* RECORD. IF RETURN CODE = 12, ISSUE TERMINATING        @Y30LB36*/
*   /* MSG (UV0-3)                                           @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0295
*   IF MODCC=0 THEN                 /*                       @Y30LB11*/
*                                                                  0295
         SLR   @07,@07                                             0295
         CR    MODCC,@07                                           0295
         BNE   @RF00295                                            0295
*     /***************************************************************/
*     /*                                                             */
*     /* TEST IF ANY ATTRIBUTES ARE TO BE UPDATED            @Y30LB36*/
*     /* IF THEY ARE, BEGIN BASE VOLUME RECORD               @Y30LB36*/
*     /* UPDATING. PROCESSING WILL CONTINUE                  @Y30LB36*/
*     /* UNTIL END OF FILE IS REACHED OR A                   @Y30LB36*/
*     /* SEVERE ERROR IS INCURRED                            @Y30LB36*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0296
*     IF ADDR(BIND)^=NULLPTR×ADDR(NBIND)^=NULLPTR×/*         @Y30LB36*/
*         ADDR(EXC)^=NULLPTR×ADDR(SHRD)^=NULLPTR×/*          @Y30LB36*/
*         ADDR(DERAS)^=NULLPTR×ADDR(NDERA)^=NULLPTR×/*       @Y30LB36*/
*         ADDR(RONLY)^=NULLPTR×ADDR(RW)^=NULLPTR THEN/*      @Y30LB36*/
         L     @05,@PC00001+4                                      0296
         C     @07,FDTPTR+64(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+68(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+72(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+76(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+80(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+84(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+88(,@05)                                 0296
         BNE   @RT00296                                            0296
         C     @07,FDTPTR+92(,@05)                                 0296
         BE    @RF00296                                            0296
@RT00296 DS    0H                                                  0297
*                                                                  0297
*       /*************************************************************/
*       /*                                                           */
*       /* THE GROUP RECORD MUST BE READ IN ORDER THAT VOLUME RECORDS*/
*       /* HAVE THEIR ATTRIBUTE FLAGS SET EXACTLY AS THE GROUP RECORD*/
*       /* FLAGS: UNLESS THERE ARE NO VOLUME RECORDS ASSOCIATED WITH */
*       /* THE GROUP. IF THE GROUP RECORD IS READ SUCCESSIVELY AND   */
*       /* THERE ARE ANY GENERAL USE TYPE VOLUMES ASSOCIATED WITH THE*/
*       /* GROUP, THEN EACH BASE VOLUME RECORD IS UPDATED.   @G24LB37*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0297
*       DO;                                                        0297
*         CALL READREC;             /*                       @Y30LB11*/
         BAL   @14,READREC                                         0298
*         IF MODCC=0&GRONGEN>0 THEN /*                       @Y30LB11*/
         SLR   @07,@07                                             0299
         CR    MODCC,@07                                           0299
         BNE   @RF00299                                            0299
         CH    @07,GRONGEN(,GROUPPTR)                              0299
         BNL   @RF00299                                            0299
*           DO WHILE(MODCC<4);      /*                       @Y30LB36*/
         B     @DE00300                                            0300
@DL00300 DS    0H                                                  0301
*             CALL READREC;         /*                       @Y30LB36*/
*                                                                  0301
         BAL   @14,READREC                                         0301
*             /*******************************************************/
*             /*                                                     */
*             /* WHEN THE BASE VOL RECORD HAS BEEN SUCCESSFULLY      */
*             /*                                             @Y30LB36*/
*             /* RETRIEVED BY THE READREC PROCEDURE, THE MODVOL      */
*             /*                                             @Y30LB36*/
*             /* PROCEDURE WILL BE CALLED TO MODIFY THE VOLUMES      */
*             /*                                             @Y30LB36*/
*             /* IN THE GROUP                                @Y30LB36*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0302
*             IF MODCC=LASTCC00&BSVRFLAG=ON THEN/*           @Y30LB36*/
         LTR   MODCC,MODCC                                         0302
         BNZ   @RF00302                                            0302
         TM    BSVRFLAG,B'00010000'                                0302
         BNO   @RF00302                                            0302
*               CALL MODVOL;        /*                       @Y30LB36*/
         BAL   @14,MODVOL                                          0303
*           END;                    /*                       @Y30LB36*/
@RF00302 DS    0H                                                  0304
@DE00300 C     MODCC,@CF00041                                      0304
         BL    @DL00300                                            0304
*       END;                        /*                       @Y30LB36*/
@RF00299 DS    0H                                                  0306
*                                                                  0306
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE FINAL CONDITION CODE DETERMINED BY           @Y30LB36*/
*   /* THE MODIFYG FSR. IF COND CODE IS 0,4, OR 8            @Y30LB36*/
*   /* ISSUE COMPLETION MSG (UV0-1). IF COND CODE            @Y30LB36*/
*   /* IS 12, ISSUE TERMINATION MSG (UV0-3)                  @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*   IF LASTCOND=LASTCC12 THEN       /*                       @Y30LB36*/
@RF00296 DS    0H                                                  0306
@RF00295 L     @15,@PC00001+8                                      0306
         CLC   LASTCOND(2,@15),@CH00036                            0306
         BNE   @RF00306                                            0306
*     DARGSENT=TERMMSG;             /*                       @Y30LB36*/
         L     @01,DDSTRU                                          0307
         MVI   DARGSENT(@01),X'03'                                 0307
*   ELSE                            /*                       @Y30LB36*/
*     DARGSENT=ENDMSG;              /*                       @Y30LB36*/
         B     @RC00306                                            0308
@RF00306 L     @01,DDSTRU                                          0308
         MVI   DARGSENT(@01),X'01'                                 0308
*   DARGSMOD=UNIVMSG;               /*                       @Y30LB36*/
@RC00306 L     @15,DDSTRU                                          0309
         MVC   DARGSMOD(3,@15),@CC01470                            0309
*   DARGDBP=ADDR(LASTCOND);         /*                       @Y30LB36*/
         L     @14,@PC00001+8                                      0310
         ST    @14,DARGDBP(,@15)                                   0310
*   DARGILP=LENGTH(LASTCOND);       /*                       @Y30LB36*/
         MVC   DARGILP(2,@15),@CH00154                             0311
*   CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*                  @Y30LB36*/
*                                                                  0312
         L     @15,@PC00001                                        0312
         ST    @15,@AL00001                                        0312
         LA    @14,@CF00115                                        0312
         ST    @14,@AL00001+4                                      0312
         LA    @14,DDSTRU                                          0312
         ST    @14,@AL00001+8                                      0312
         MVI   @AL00001+8,X'80'                                    0312
         L     @15,GDTPRT(,@15)                                    0312
         LA    @01,@AL00001                                        0312
         BALR  @14,@15                                             0312
*   /*****************************************************************/
*   /*                                                               */
*   /* GET A FULL REGION DUMP, THEN                          @Y30LB36*/
*   /* EXIT TO THE AMS EXECUTIVE                             @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*   IF GDTDBG=NULLPTR THEN                                         0313
         L     @15,@PC00001                                        0313
         L     @15,GDTDBG(,@15)                                    0313
         LTR   @15,@15                                             0313
         BZ    @RT00313                                            0313
*     ;                                                            0314
*   ELSE                                                           0315
*     CALL IDCDB010(GDTTBL,'MGND'); /*                       @Y30LB36*/
         L     @15,@PC00001                                        0315
         ST    @15,@AL00001                                        0315
         LA    @14,@CC01491                                        0315
         ST    @14,@AL00001+4                                      0315
         MVI   @AL00001+4,X'80'                                    0315
         L     @15,GDTDBG(,@15)                                    0315
         LA    @01,@AL00001                                        0315
         BALR  @14,@15                                             0315
*   CALL IDCSAEP0(GDTTBL,MODID,LASTCOND);/*                  @G24LB37*/
@RT00313 L     @15,@PC00001                                        0316
         ST    @15,@AL00001                                        0316
         LA    @14,MODID                                           0316
         ST    @14,@AL00001+4                                      0316
         L     @14,@PC00001+8                                      0316
         ST    @14,@AL00001+8                                      0316
         MVI   @AL00001+8,X'80'                                    0316
         L     @15,GDTEPL(,@15)                                    0316
         LA    @01,@AL00001                                        0316
         BALR  @14,@15                                             0316
*                                                                  0317
*/********************************************************************/
*/*                                                          @Y30LB36*/
*/*  PROCEDURE NAME - MODGRP                                 @G24LB37*/
*/*                                                          @Y30LB36*/
*/*  FUNCTION - BUILD THE MODIFY GROUP RECORD PARAMETER LIST @Y30LB36*/
*/*            AND ISSUE USSC TO MODIFY THE RECORD           @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  INPUT - FUNCTION DEFINITION TABLE                       @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  OUTPUT - GROUP RECORD                                   @Y30LB36*/
*/*          MODCC                                           @Y30LB36*/
*/*             0 = RECORD SUCCESSFULLY MODIFIED             @Y30LB36*/
*/*            12 = RECORD NOT MODIFIED                      @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*          LASTCOND                                        @Y30LB36*/
*/*             0 = RECORD MODIFIED SUCCESSFULLY             @Y30LB36*/
*/*             4 = USSC FAILED TO MODIFY THE GROUP RECORD   @Y30LB36*/
*/*            12 = RECORD SUCCESSFULLY MODIFIED, BUT        @Y30LB36*/
*/*                 I/O ERROR OCCURRED UPDATING MSVI         @Y30LB36*/
*/*                                                          @Y30LB36*/
*/********************************************************************/
*                                                                  0317
*MODGRP:                                                           0317
*   PROCEDURE;                      /*                       @Y30LB36*/
@EL00001 L     @13,4(,@13)                                         0317
@EF00001 L     @00,@SIZDATD                                        0317
         LR    @01,@11                                             0317
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0317
         BR    @14                                                 0317
MODGRP   STM   @14,@02,@SA00002                                    0317
         STM   @04,@12,@SA00002+20                                 0317
*   OLDERID2=NEWERID2;                                             0318
         L     @15,@PC00001                                        0318
         L     @15,GDTTR2(,@15)                                    0318
         MVC   @TS00001(95),NEWERID2(@15)                          0318
         MVC   OLDERID2(95,@15),@TS00001                           0318
*   NEWID2='MGPB';                  /*                       @Y30LB36*/
*                                                                  0319
         MVC   NEWID2(4,@15),@CC01495                              0319
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE PARAMETER LIST TO ZEROS, THEN          @Y30LB36*/
*   /* ENTER THE GROUP NAME, FIELD LENGTH, AND THE           @Y30LB36*/
*   /* OPCODE                                                @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*   MGP=''B;                        /*                       @Y30LB36*/
         L     @15,MGPPTR                                          0320
         XC    MGP(104,@15),MGP(@15)                               0320
*   MGPLNGTH=MGPLEN;                /*                       @Y30LB36*/
         LH    @14,MGPLEN                                          0321
         ST    @14,MGPLNGTH(,@15)                                  0321
*   MGPCODE=MGPMGOP;                /*                       @Y30LB36*/
         XC    MGPCODE+1(3,@15),MGPCODE+1(@15)                     0322
         MVI   MGPCODE(@15),X'83'                                  0322
*   MGPGROUP=GRPVAL;                /*                       @Y30LB36*/
         L     @14,@PC00001+4                                      0323
         L     @01,FDTPTR(,@14)                                    0323
         MVC   MGPGROUP(8,@15),GRPVAL(@01)                         0323
*   MGPFLGRO=ON;                    /*                       @Y30LB36*/
         OI    MGPFLGRO(@15),B'00100000'                           0324
*                                                                  0325
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DATA, IF SPECIFIED BY THE USER,         @Y30LB36*/
*   /* WILL BE ENTERED INTO THE PARAMETER LIST. THE          @Y30LB36*/
*   /* DATA FIELDS ARE, PRIMARY SPACE, SECONDARY SPACE       @Y30LB36*/
*   /* THRESHOLD, DESCRIPTION, OWNERS NAME, OWNERS           @Y30LB36*/
*   /* ADDRESS, RETENTION PERIOD, CONCURRENT USERS,          @G24LB37*/
*   /* AND RESERVED SPACE.                                   @G24LB37*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*   IF ADDR(PRI)^=NULLPTR THEN      /*                       @Y30LB36*/
         L     @14,FDTPTR+4(,@14)                                  0325
         LTR   @14,@14                                             0325
         BZ    @RF00325                                            0325
*     DO;                           /*                       @Y30LB36*/
*       MGPRI=PRIVAL;               /*                       @Y30LB36*/
         L     @14,PRIVAL(,@14)                                    0327
         STH   @14,MGPRI(,@15)                                     0327
*       MGPFLPRI=ON;                /*                       @Y30LB36*/
         OI    MGPFLPRI(@15),B'00001000'                           0328
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(SEC)^=NULLPTR THEN      /*                       @Y30LB36*/
@RF00325 L     @15,@PC00001+4                                      0330
         L     @15,FDTPTR+8(,@15)                                  0330
         LTR   @15,@15                                             0330
         BZ    @RF00330                                            0330
*     DO;                           /*                       @Y30LB36*/
*       MGPSEC=SECVAL;              /*                       @Y30LB36*/
         L     @14,MGPPTR                                          0332
         L     @15,SECVAL(,@15)                                    0332
         STH   @15,MGPSEC(,@14)                                    0332
*       MGPFLSEC=ON;                /*                       @Y30LB36*/
         OI    MGPFLSEC(@14),B'00000100'                           0333
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(THOLD)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00330 L     @15,@PC00001+4                                      0335
         L     @15,FDTPTR+12(,@15)                                 0335
         LTR   @15,@15                                             0335
         BZ    @RF00335                                            0335
*     DO;                           /*                       @Y30LB36*/
*       MGPTHOLD=THOLDVAL;          /*                       @Y30LB36*/
         L     @14,MGPPTR                                          0337
         MVC   MGPTHOLD(1,@14),THOLDVAL+3(@15)                     0337
*       MGPFLTHO=ON;                /*                       @Y30LB36*/
         OI    MGPFLTHO(@14),B'00000010'                           0338
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(DESCR)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00335 L     @15,@PC00001+4                                      0340
         L     @15,FDTPTR+16(,@15)                                 0340
         LTR   @15,@15                                             0340
         BZ    @RF00340                                            0340
*     DO;                           /*                       @Y30LB36*/
*       MGPDESCR=DESCRVAL;          /*                       @Y30LB36*/
         L     @14,MGPPTR                                          0342
         MVC   MGPDESCR(30,@14),DESCRVAL(@15)                      0342
*       MGPFLDES=ON;                /*                       @Y30LB36*/
         OI    MGPFLDES(@14),B'10000000'                           0343
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(OWNER)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00340 L     @15,@PC00001+4                                      0345
         L     @15,FDTPTR+20(,@15)                                 0345
         LTR   @15,@15                                             0345
         BZ    @RF00345                                            0345
*     DO;                           /*                       @Y30LB36*/
*       MGPOWNER=OWNERVAL;          /*                       @Y30LB36*/
         L     @14,MGPPTR                                          0347
         MVC   MGPOWNER(10,@14),OWNERVAL(@15)                      0347
*       MGPFLOWN=ON;                /*                       @Y30LB36*/
         OI    MGPFLOWN(@14),B'00010000'                           0348
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(ADD)^=NULLPTR THEN      /*                       @Y30LB36*/
@RF00345 L     @15,@PC00001+4                                      0350
         L     @15,FDTPTR+24(,@15)                                 0350
         LTR   @15,@15                                             0350
         BZ    @RF00350                                            0350
*     DO;                           /*                       @Y30LB36*/
*       MGPADDR=ADDVAL;             /*                       @Y30LB36*/
         L     @14,MGPPTR                                          0352
         MVC   MGPADDR(30,@14),ADDVAL(@15)                         0352
*       MGPFLADD=ON;                /*                       @Y30LB36*/
         OI    MGPFLADD(@14),B'01000000'                           0353
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(RETPD)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00350 L     @15,@PC00001+4                                      0355
         L     @15,FDTPTR+28(,@15)                                 0355
         LTR   @15,@15                                             0355
         BZ    @RF00355                                            0355
*     DO;                           /*                       @Y30LB36*/
*       MGPRETPD=RETPDVAL;          /*                       @Y30LB36*/
         L     @14,MGPPTR                                          0357
         L     @15,RETPDVAL(,@15)                                  0357
         STH   @15,MGPRETPD(,@14)                                  0357
*       MGPFLRET=ON;                /*                       @Y30LB36*/
         OI    MGPFLRET(@14),B'00000001'                           0358
*     END;                          /*                       @Y30LB36*/
*   IF ADDR(CONUS)^=NULLPTR THEN    /*                       @G24LB37*/
@RF00355 L     @15,@PC00001+4                                      0360
         L     @15,FDTPTR+96(,@15)                                 0360
         LTR   @15,@15                                             0360
         BZ    @RF00360                                            0360
*     DO;                           /*                       @G24LB37*/
*       MGPCONUS=CONUSVAL;          /*                       @G24LB37*/
         L     @14,MGPPTR                                          0362
         MVC   MGPCONUS(1,@14),CONUSVAL+3(@15)                     0362
*       MGPFLCON=ON;                /*                       @G24LB37*/
         OI    MGPFLCON(@14),B'00000001'                           0363
*     END;                          /*                       @G24LB37*/
*   IF ADDR(RSVDS)^=NULLPTR THEN    /*                       @G24LB37*/
@RF00360 L     @15,@PC00001+4                                      0365
         L     @15,FDTPTR+100(,@15)                                0365
         LTR   @15,@15                                             0365
         BZ    @RF00365                                            0365
*     DO;                           /*                       @G24LB37*/
*       MGPRESSP=RSVDSVAL;          /*                       @G24LB37*/
         L     @14,MGPPTR                                          0367
         MVC   MGPRESSP(1,@14),RSVDSVAL+3(@15)                     0367
*       MGPFLRES=ON;                /*                       @G24LB37*/
         OI    MGPFLRES(@14),B'10000000'                           0368
*     END;                          /*                       @G24LB37*/
*                                                                  0370
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE NULLIFY KEYWORD WAS SPECIFIED, THE             @Y30LB36*/
*   /* FOLLOWING FIELDS WILL BE NULLIFIED, IF                @Y30LB36*/
*   /* SPECIFIED BY THE USER: THRESHOLD, DESCRIPTION         @Y30LB36*/
*   /* OWNERS NAME, OWNERS ADDRESS AND RETENTIONPERIOD       @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0370
*   IF ADDR(NULLF)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00365 SLR   @15,@15                                             0370
         L     @14,@PC00001+4                                      0370
         C     @15,FDTPTR+32(,@14)                                 0370
         BE    @RF00370                                            0370
*     DO;                           /*                       @Y30LB36*/
*       IF ADDR(NTHOL)^=NULLPTR THEN/*                       @Y30LB36*/
         C     @15,FDTPTR+36(,@14)                                 0372
         BE    @RF00372                                            0372
*         MGPNTHLD=ON;              /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0373
         OI    MGPNTHLD(@01),B'00100000'                           0373
*       IF ADDR(NDESC)^=NULLPTR THEN/*                       @Y30LB36*/
@RF00372 L     @15,@PC00001+4                                      0374
         L     @15,FDTPTR+40(,@15)                                 0374
         LTR   @15,@15                                             0374
         BZ    @RF00374                                            0374
*         MGPNDESC=ON;              /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0375
         OI    MGPNDESC(@01),B'00000100'                           0375
*       IF ADDR(NOWN)^=NULLPTR THEN /*                       @Y30LB36*/
@RF00374 L     @15,@PC00001+4                                      0376
         L     @15,FDTPTR+44(,@15)                                 0376
         LTR   @15,@15                                             0376
         BZ    @RF00376                                            0376
*         MGPNOWNR=ON;              /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0377
         OI    MGPNOWNR(@01),B'00010000'                           0377
*       IF ADDR(NADDR)^=NULLPTR THEN/*                       @Y30LB36*/
@RF00376 L     @15,@PC00001+4                                      0378
         L     @15,FDTPTR+48(,@15)                                 0378
         LTR   @15,@15                                             0378
         BZ    @RF00378                                            0378
*         MGPNADDR=ON;              /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0379
         OI    MGPNADDR(@01),B'00000010'                           0379
*       IF ADDR(NRTPD)^=NULLPTR THEN/*                       @Y30LB36*/
@RF00378 L     @15,@PC00001+4                                      0380
         L     @15,FDTPTR+52(,@15)                                 0380
         LTR   @15,@15                                             0380
         BZ    @RF00380                                            0380
*         MGPNRETP=ON;              /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0381
         OI    MGPNRETP(@01),B'00001000'                           0381
*     END;                          /*                       @Y30LB36*/
@RF00380 DS    0H                                                  0383
*                                                                  0383
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING DATA, IF SPECIFIED BY THE USER,         @Y30LB36*/
*   /* WILL CAUSE THE SPECIFIED ATTRIBUTE TO BE              @Y30LB36*/
*   /* CHANGED. THE CHANGEABLE ATTRIBUTES ARE,               @Y30LB36*/
*   /* BIND, NOBIND, EXCLUSIVE, SHARED, DASDERASE,           @Y30LB36*/
*   /* NODASDERASE, READ ONLY, READ/WRITE, RLSE              @Y30LB11*/
*   /* AND NRLSE.                                            @Y30LB11*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0383
*   IF ADDR(BIND)^=NULLPTR THEN     /*                       @Y30LB36*/
@RF00370 L     @15,@PC00001+4                                      0383
         L     @15,FDTPTR+64(,@15)                                 0383
         LTR   @15,@15                                             0383
         BZ    @RF00383                                            0383
*     MGPBIND=ON;                   /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0384
         OI    MGPBIND(@01),B'00100000'                            0384
*   IF ADDR(NBIND)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00383 L     @15,@PC00001+4                                      0385
         L     @15,FDTPTR+68(,@15)                                 0385
         LTR   @15,@15                                             0385
         BZ    @RF00385                                            0385
*     MGPNBIND=ON;                  /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0386
         OI    MGPNBIND(@01),B'00010000'                           0386
*   IF ADDR(EXC)^=NULLPTR THEN      /*                       @Y30LB36*/
@RF00385 L     @15,@PC00001+4                                      0387
         L     @15,FDTPTR+72(,@15)                                 0387
         LTR   @15,@15                                             0387
         BZ    @RF00387                                            0387
*     MGPEXCL=ON;                   /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0388
         OI    MGPEXCL(@01),B'00001000'                            0388
*   IF ADDR(SHRD)^=NULLPTR THEN     /*                       @Y30LB36*/
@RF00387 L     @15,@PC00001+4                                      0389
         L     @15,FDTPTR+76(,@15)                                 0389
         LTR   @15,@15                                             0389
         BZ    @RF00389                                            0389
*     MGPSHARE=ON;                  /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0390
         OI    MGPSHARE(@01),B'00000100'                           0390
*   IF ADDR(DERAS)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00389 L     @15,@PC00001+4                                      0391
         L     @15,FDTPTR+80(,@15)                                 0391
         LTR   @15,@15                                             0391
         BZ    @RF00391                                            0391
*     MGPDERAS=ON;                  /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0392
         OI    MGPDERAS(@01),B'10000000'                           0392
*   IF ADDR(NDERA)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00391 L     @15,@PC00001+4                                      0393
         L     @15,FDTPTR+84(,@15)                                 0393
         LTR   @15,@15                                             0393
         BZ    @RF00393                                            0393
*     MGPNDERA=ON;                  /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0394
         OI    MGPNDERA(@01),B'01000000'                           0394
*   IF ADDR(RONLY)^=NULLPTR THEN    /*                       @Y30LB36*/
@RF00393 L     @15,@PC00001+4                                      0395
         L     @15,FDTPTR+88(,@15)                                 0395
         LTR   @15,@15                                             0395
         BZ    @RF00395                                            0395
*     MGPRONLY=ON;                  /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0396
         OI    MGPRONLY(@01),B'00000010'                           0396
*   IF ADDR(RW)^=NULLPTR THEN       /*                       @Y30LB36*/
@RF00395 L     @15,@PC00001+4                                      0397
         L     @15,FDTPTR+92(,@15)                                 0397
         LTR   @15,@15                                             0397
         BZ    @RF00397                                            0397
*     MGPRW=ON;                     /*                       @Y30LB36*/
         L     @01,MGPPTR                                          0398
         OI    MGPRW(@01),B'00000001'                              0398
*   IF ADDR(RLSE)^=NULLPTR THEN     /*                       @Y30LB11*/
@RF00397 L     @15,@PC00001+4                                      0399
         L     @15,FDTPTR+56(,@15)                                 0399
         LTR   @15,@15                                             0399
         BZ    @RF00399                                            0399
*     MGPRLSE=ON;                   /*                       @Y30LB11*/
         L     @01,MGPPTR                                          0400
         OI    MGPRLSE(@01),B'10000000'                            0400
*   IF ADDR(NRLSE)^=NULLPTR THEN    /*                       @Y30LB11*/
@RF00399 L     @15,@PC00001+4                                      0401
         L     @15,FDTPTR+60(,@15)                                 0401
         LTR   @15,@15                                             0401
         BZ    @RF00401                                            0401
*     MGPNRLSE=ON;                  /*                       @Y30LB11*/
         L     @01,MGPPTR                                          0402
         OI    MGPNRLSE(@01),B'01000000'                           0402
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP THE MGP ARGUMENT LIST                            @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*   IF GDTDBG=NULLPTR THEN                                         0403
@RF00401 L     @15,@PC00001                                        0403
         L     @15,GDTDBG(,@15)                                    0403
         LTR   @15,@15                                             0403
         BZ    @RT00403                                            0403
*     ;                                                            0404
*   ELSE                                                           0405
*     DO;                                                          0405
*       DMPINDEX=ADDR(LISTAREA);    /*                       @Y30LB36*/
         LA    DMPINDEX,LISTAREA                                   0406
*       DMPITMNM='MGP';                                            0407
         MVI   DMPITMNM+3(DMPINDEX),C' '                           0407
         MVC   DMPITMNM+4(4,DMPINDEX),DMPITMNM+3(DMPINDEX)         0407
         MVC   DMPITMNM(3,DMPINDEX),@CC01496                       0407
*       DMPITMPT=ADDR(MGP);                                        0408
         L     @03,MGPPTR                                          0408
         ST    @03,DMPITMPT(,DMPINDEX)                             0408
*       DMPITMLN=LENGTH(MGP);                                      0409
         MVC   DMPITMLN(2,DMPINDEX),@CH01549                       0409
*       DMPITMTP='H';                                              0410
         MVI   DMPITMTP(DMPINDEX),C'H'                             0410
*       DMPINDEX=DMPINDEX+DMPELEMT; /*                       @Y30LB36*/
         AL    DMPINDEX,@CF00506                                   0411
*       DMPTRM=DMPTRMVL;                                           0412
         MVI   DMPTRM(DMPINDEX),X'FF'                              0412
*     END;                          /*                       @Y30LB36*/
*   IF GDTDBG=NULLPTR THEN                                         0414
@RT00403 L     @15,@PC00001                                        0414
         L     @15,GDTDBG(,@15)                                    0414
         LTR   @15,@15                                             0414
         BZ    @RT00414                                            0414
*     ;                                                            0415
*   ELSE                                                           0416
*     CALL IDCDB010(GDTTBL,'MGPM',ADDR(LISTAREA));/*         @Y30LB36*/
*                                                                  0416
         L     @15,@PC00001                                        0416
         ST    @15,@AL00001                                        0416
         LA    @14,@CC01498                                        0416
         ST    @14,@AL00001+4                                      0416
         LA    @14,LISTAREA                                        0416
         ST    @14,@AFTEMPS                                        0416
         LA    @14,@AFTEMPS                                        0416
         ST    @14,@AL00001+8                                      0416
         MVI   @AL00001+8,X'80'                                    0416
         L     @15,GDTDBG(,@15)                                    0416
         LA    @01,@AL00001                                        0416
         BALR  @14,@15                                             0416
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE USSC MACRO TO MODIFY THE GROUP RECORD           @Y30LB36*/
*   /* AND REWRITE IT IN THE MASS STORAGE VOLUME             @Y30LB36*/
*   /* INVENTORY                                             @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0417
*   CALL IDCSASS0(GDTTBL,VVIC,MGPPTR,RSNCD);/*               @Y30LB36*/
@RT00414 L     @04,@PC00001                                        0417
         ST    @04,@AL00001                                        0417
         LA    @15,VVIC                                            0417
         ST    @15,@AL00001+4                                      0417
         LA    @15,MGPPTR                                          0417
         ST    @15,@AL00001+8                                      0417
         LA    @15,RSNCD                                           0417
         ST    @15,@AL00001+12                                     0417
         MVI   @AL00001+12,X'80'                                   0417
         L     @15,GDTSSC(,@04)                                    0417
         LA    @01,@AL00001                                        0417
         BALR  @14,@15                                             0417
*   OLDERID2=NEWERID2;                                             0418
         L     @04,@PC00001                                        0418
         L     @04,GDTTR2(,@04)                                    0418
         MVC   @TS00001(95),NEWERID2(@04)                          0418
         MVC   OLDERID2(95,@04),@TS00001                           0418
*   NEWID2='MGUS';                  /*                       @Y30LB36*/
*                                                                  0419
         MVC   NEWID2(4,@04),@CC01499                              0419
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE AND TEST THE RETURN CODE FROM USSC.              @Y30LB36*/
*   /* IF MODIFICATION OF GROUP RECORD WAS SUCCESSFUL        @Y30LB36*/
*   /* (CC=0), SET CONDITION CODE FOR FSR TO 0.              @Y30LB36*/
*   /* IF MODIFICATION WAS SUCCESSFUL, BUT AN I/O ERROR      @Y30LB36*/
*   /* OCCURRED UPDATING MSVI (CC=12), SET CONDITION         @Y30LB36*/
*   /* CODE FOR FSR TO 4.                                    @Y30LB36*/
*   /* IF MODIFICATION FAILED, CALL SSCMSG TO ISSUE          @Y30LB36*/
*   /* REASON CODE MESSAGE BASED ON THE REASON CODE          @Y30LB36*/
*   /* RETURNED FROM USSC. SET CONDITION CODE FOR            @Y30LB36*/
*   /* FSR TO 12                                             @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0420
*   RESPECIFY                                                      0420
*     RTNREG RSTD;                                                 0420
*   TESTRC=RTNREG;                                                 0421
         LR    TESTRC,RTNREG                                       0421
*   RESPECIFY                                                      0422
*     RTNREG UNRSTD;                /*                       @Y30LB36*/
*   IF TESTRC=0 THEN                /*                       @Y30LB36*/
         SLR   @04,@04                                             0423
         CR    TESTRC,@04                                          0423
         BNE   @RF00423                                            0423
*     DO;                           /*                       @Y30LB36*/
*       MODCC=LASTCC00;             /*                       @Y30LB36*/
         LR    MODCC,@04                                           0425
*     END;                          /*                       @Y30LB36*/
*   ELSE                            /*                       @Y30LB36*/
*     IF TESTRC=4 THEN              /*                       @Y30LB36*/
         B     @RC00423                                            0427
@RF00423 C     TESTRC,@CF00041                                     0427
         BNE   @RF00427                                            0427
*       DO;                         /*                       @Y30LB36*/
*         LASTCOND=LASTCC12;        /*                       @Y30LB36*/
         LA    @02,12                                              0429
         L     @15,@PC00001+8                                      0429
         STH   @02,LASTCOND(,@15)                                  0429
*         MODCC=LASTCC12;           /*                       @Y30LB36*/
         LR    MODCC,@02                                           0430
*         CALL SSCMSG(RSNCD);       /*                       @Y30LB36*/
         LA    @02,RSNCD                                           0431
         ST    @02,@AL00001                                        0431
         LA    @01,@AL00001                                        0431
         BAL   @14,SSCMSG                                          0431
*       END;                        /*                       @Y30LB36*/
*     ELSE                          /*                       @Y30LB36*/
*       DO;                         /*                       @Y30LB36*/
         B     @RC00427                                            0433
@RF00427 DS    0H                                                  0434
*         LASTCOND=LASTCC04;        /*                       @Y30LB36*/
         L     @02,@PC00001+8                                      0434
         MVC   LASTCOND(2,@02),@CH00041                            0434
*         MODCC=LASTCC00;           /*                       @Y30LB36*/
         SLR   MODCC,MODCC                                         0435
*       END;                        /*                       @Y30LB36*/
*   RETURN;                         /*                       @Y30LB36*/
@EL00002 DS    0H                                                  0437
@EF00002 DS    0H                                                  0437
@ER00002 LM    @14,@02,@SA00002                                    0437
         LM    @04,@12,@SA00002+20                                 0437
         BR    @14                                                 0437
*   END MODGRP;                     /*                       @Y30LB36*/
         B     @EL00002                                            0438
*                                                                  0439
*/********************************************************************/
*/*                                                          @Y30LB36*/
*/*  PROCEDURE NAME - READREC                                @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  FUNCTION - READ A GROUP RECORD OR A BASE VOLUME RECORD  @Y30LB36*/
*/*            FROM THE MASS STORAGE VOLUME INVENTORY.  ON   @Y30LB36*/
*/*            ANY FAILING CONDITION, IE RETURN CODE OF 4    @Y30LB36*/
*/*            OR 8 FROM USSC, ISSUE EXPLANATORY MESSAGES    @Y30LB36*/
*/*            IDC2079I (FOR FAILING ON A GROUP RECORD)      @Y30LB36*/
*/*            OR IDC2980I AND SECONDARY MESSAGE IDC2801I    @Y30LB36*/
*/*            FOR BASE VOLUME RECORDS.                      @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  INPUT - FUNCTION DEFINITION TABLE                       @Y30LB36*/
*/*         GROUP RECORD                                     @Y30LB36*/
*/*         BASE VOLUME RECORD                               @Y30LB36*/
*/*         GRPFLAG - SET OFF IF A GROUP RECORD IS TO BE     @Y30LB36*/
*/*                   READ, AND ON IF A BASE VOLUME RECORD   @Y30LB36*/
*/*                   IS TO BE READ.                         @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  OUTPUT - GRPFLAG SET ON AFTER SET UP TO READ A GROUP    @Y30LB36*/
*/*          RECORD HAS BEEN ACCOMPLISHED.                   @Y30LB36*/
*/*          RDVFLAG SET ON AFTER THE RVVI PARAMETER LIST    @Y30LB36*/
*/*          HAS ONCE BEEN INITIALIZED, AND THE FIRST BASE   @Y30LB36*/
*/*          VOLUME RECORD HAS BEEN READ.                    @Y30LB36*/
*/*          BSVRFLAG SET OFF INDICATES TO OBTAIN VOLUME     @Y30LB36*/
*/*          SERIAL FROM THE GROUP RECORD, SET ON,           @Y30LB36*/
*/*          INDICATES TO OBTAIN VOLUME SERIAL NUMBER        @Y30LB36*/
*/*          FROM THE BASE VOLUME RECORD                     @Y30LB36*/
*/*                                                          @Y30LB36*/
*/********************************************************************/
*                                                                  0439
*READREC:                                                          0439
*   PROCEDURE;                      /*                       @Y30LB36*/
READREC  STM   @14,@02,@SA00003                                    0439
         ST    @04,@SA00003+20                                     0439
         STM   @06,@12,@SA00003+24                                 0439
*   OLDERID2=NEWERID2;                                             0440
         L     @07,@PC00001                                        0440
         L     @07,GDTTR2(,@07)                                    0440
         MVC   @TS00001(95),NEWERID2(@07)                          0440
         MVC   OLDERID2(95,@07),@TS00001                           0440
*   NEWID2='MGRR';                  /*                       @Y30LB36*/
*                                                                  0441
         MVC   NEWID2(4,@07),@CC01504                              0441
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHICH RECORD TYPE IS TO BE READ,            @Y30LB36*/
*   /* GROUP OR BASE VOLUME RECORD. IF BASE VOLUME           @Y30LB36*/
*   /* BASE RECORD, DETERMINE IF THE PARAMETER LIST          @Y30LB36*/
*   /* IS ALREADY INITIALIZED. IF IT IS, ONLY ENTER          @Y30LB36*/
*   /* THE VOLUME SERIAL OF THE NEXT BASE VOLUME RECORD      @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0442
*   IF GRPFLAG=OFF THEN             /*                       @Y30LB36*/
*                                                                  0442
         TM    GRPFLAG,B'10000000'                                 0442
         BNZ   @RF00442                                            0442
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD PARAMETER LIST TO READ A GROUP RECORD         @Y30LB36*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0443
*     DO;                           /*                       @Y30LB36*/
*       RVVLNGTH=RVVLEN;            /*                       @Y30LB36*/
         L     @07,RVVIPTR                                         0444
         LH    @05,RVVLEN                                          0444
         ST    @05,RVVLNGTH(,@07)                                  0444
*       RVVCODE=RVVOP;              /*                       @Y30LB36*/
         MVI   RVVCODE(@07),X'87'                                  0445
*       RVVGROUP=GRPVAL;            /*                       @Y30LB36*/
         L     @05,@PC00001+4                                      0446
         L     @05,FDTPTR(,@05)                                    0446
         MVC   RVVGROUP(8,@07),GRPVAL(@05)                         0446
*       RVVSGRP=ON;                 /*                       @Y30LB36*/
         OI    RVVSGRP(@07),B'10000000'                            0447
*       RVVRTBUF=ADDR(GRPFIELD);    /*                       @Y30LB36*/
         LA    @05,GRPFIELD                                        0448
         ST    @05,RVVRTBUF(,@07)                                  0448
*       RVVBUFLN=LENGTH(GRPFIELD);  /*                       @Y30LB36*/
*                                                                  0449
         MVC   RVVBUFLN(2,@07),@CH01550                            0449
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE FLAGS INDICATING A GROUP RECORD           @Y30LB36*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0450
*       RVVRDR=ON;                  /*                       @Y30LB36*/
         OI    RVVRDR(@07),B'10000000'                             0450
*       RVVGRPRC=ON;                /*                       @Y30LB36*/
*                                                                  0451
         OI    RVVGRPRC(@07),B'01000000'                           0451
*       /*************************************************************/
*       /*                                                           */
*       /* SET FLAG TO INDICATE THAT THE GROUP RECORD HAS    @Y30LB36*/
*       /* ALREADY BEEN READ                                 @Y30LB36*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0452
*       GRPFLAG=ON;                 /*                       @Y30LB36*/
         OI    GRPFLAG,B'10000000'                                 0452
*     END;                          /*                       @Y30LB36*/
*   ELSE                            /*                       @Y30LB36*/
*                                                                  0454
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD PARAMETER LIST TO READ A BASE VOL RECORD      @Y30LB36*/
*     /* IF IT IS NOT ALREADY INITIALIZED. PICK UP VOLUME    @Y30LB36*/
*     /* SERIAL OF FIRST VOLUME IN CHAIN FROM GROUP RECORD@Y30LB36   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0454
*     IF RDVFLAG=OFF THEN           /*                       @Y30LB36*/
         B     @RC00442                                            0454
@RF00442 TM    RDVFLAG,B'00100000'                                 0454
         BNZ   @RF00454                                            0454
*       DO;                         /*                       @Y30LB36*/
*         RVVOLUME=GROFSN;          /*                       @Y30LB36*/
         L     @07,RVVIPTR                                         0456
         MVC   RVVOLUME(6,@07),GROFSN(GROUPPTR)                    0456
*         RVVRTBUF=ADDR(BSVFIELD);  /*                       @Y30LB36*/
         LA    @05,BSVFIELD                                        0457
         ST    @05,RVVRTBUF(,@07)                                  0457
*         RVVBUFLN=LENGTH(BSVFIELD);/*                       @Y30LB36*/
*                                                                  0458
         MVC   RVVBUFLN(2,@07),@CH01551                            0458
*         /***********************************************************/
*         /*                                                         */
*         /* SET FLAGS INDICATING A BASE VOL RECORD THAT IS  @Y30LB36*/
*         /* ACTIVE, GENERAL, AND BELONGS TO THE GROUP       @Y30LB36*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0459
*         RVVRDCH=ON;               /*                       @Y30LB36*/
*         RVVRDR=OFF;               /*                       @Y30LB36*/
         OI    RVVRDCH(@07),B'00100000'                            0460
         NI    RVVRDR(@07),B'01111111'                             0460
*         RVVGPVOL=ON;              /*                       @Y30LB36*/
         OI    RVVGPVOL(@07),B'10000000'                           0461
*         RVVBVRCD=ON;              /*                       @Y30LB36*/
*         RVVGRPRC=OFF;             /*                       @Y30LB36*/
         OI    RVVBVRCD(@07),B'10000000'                           0463
         NI    RVVGRPRC(@07),B'10111111'                           0463
*         RVVGSVOL=ON;              /*                       @Y30LB36*/
*         RVVACTV=ON;               /*                       @Y30LB36*/
         OI    RVVGSVOL(@07),B'00100100'                           0465
*         RVVSVOL=ON;               /*                       @Y30LB36*/
*                                                                  0466
         OI    RVVSVOL(@07),B'00000001'                            0466
*         /***********************************************************/
*         /*                                                         */
*         /* AFTER INITIALIZATION OF THE RVVI PARAMETER LIST,        */
*         /*                                                 @Y30LB36*/
*         /* SET RDVFLAG TO INDICATE ONLY ADDITIONAL DATA    @Y30LB36*/
*         /* REQUIRED IS THE VOLUME SERIAL.                  @Y30LB36*/
*         /* SET THE BSVRFLAG TO INDICATE THAT THE VOLUME    @Y30LB36*/
*         /* SERIAL NUMBER TO BE OBTAINED FROM THE BASE      @Y30LB36*/
*         /* VOLUME RECORD                                   @Y30LB36*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0467
*         RDVFLAG=ON;               /*                       @Y30LB36*/
*         BSVRFLAG=ON;              /*                       @Y30LB36*/
         OI    RDVFLAG,B'00110000'                                 0468
*       END;                        /*                       @Y30LB36*/
*     ELSE                          /*                       @Y30LB36*/
*       RVVOLUME=BASNEXTV;          /*                       @Y30LB36*/
         B     @RC00454                                            0470
@RF00454 L     @07,RVVIPTR                                         0470
         MVC   RVVOLUME(6,@07),BASNEXTV(BASEVPTR)                  0470
*                                                                  0471
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP THE RVVI PARAMETER LIST                          @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0471
*   IF GDTDBG=NULLPTR THEN                                         0471
@RC00454 DS    0H                                                  0471
@RC00442 L     @07,@PC00001                                        0471
         L     @07,GDTDBG(,@07)                                    0471
         LTR   @07,@07                                             0471
         BZ    @RT00471                                            0471
*     ;                                                            0472
*   ELSE                                                           0473
*     DO;                                                          0473
*       DMPINDEX=ADDR(LISTAREA);    /*                       @Y30LB36*/
         LA    DMPINDEX,LISTAREA                                   0474
*       DMPITMNM='RVVI';                                           0475
         MVI   DMPITMNM+4(DMPINDEX),C' '                           0475
         MVC   DMPITMNM+5(3,DMPINDEX),DMPITMNM+4(DMPINDEX)         0475
         MVC   DMPITMNM(4,DMPINDEX),@CC01505                       0475
*       DMPITMPT=ADDR(RVVI);                                       0476
         L     @07,RVVIPTR                                         0476
         ST    @07,DMPITMPT(,DMPINDEX)                             0476
*       DMPITMLN=LENGTH(RVVI);                                     0477
         MVC   DMPITMLN(2,DMPINDEX),@CH01539                       0477
*       DMPITMTP='H';                                              0478
         MVI   DMPITMTP(DMPINDEX),C'H'                             0478
*       DMPINDEX=DMPINDEX+DMPELEMT; /*                       @Y30LB36*/
         AL    DMPINDEX,@CF00506                                   0479
*       DMPTRM=DMPTRMVL;                                           0480
         MVI   DMPTRM(DMPINDEX),X'FF'                              0480
*     END;                          /*                       @Y30LB36*/
*   IF GDTDBG=NULLPTR THEN                                         0482
@RT00471 L     @07,@PC00001                                        0482
         L     @07,GDTDBG(,@07)                                    0482
         LTR   @07,@07                                             0482
         BZ    @RT00482                                            0482
*     ;                                                            0483
*   ELSE                                                           0484
*     CALL IDCDB010(GDTTBL,'MGRV',ADDR(LISTAREA));/*         @Y30LB36*/
*                                                                  0484
         L     @07,@PC00001                                        0484
         ST    @07,@AL00001                                        0484
         LA    @05,@CC01506                                        0484
         ST    @05,@AL00001+4                                      0484
         LA    @05,LISTAREA                                        0484
         ST    @05,@AFTEMPS+4                                      0484
         LA    @05,@AFTEMPS+4                                      0484
         ST    @05,@AL00001+8                                      0484
         MVI   @AL00001+8,X'80'                                    0484
         L     @15,GDTDBG(,@07)                                    0484
         LA    @01,@AL00001                                        0484
         BALR  @14,@15                                             0484
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE THE USSC MACRO TO READ THE RECORD               @Y30LB36*/
*   /* REQUESTED INTO THE BUFFER. THE GROUP RECORD           @Y30LB36*/
*   /* INTO GRPFIELD, AND THE BASE RECORD INTO               @Y30LB36*/
*   /* BSVFIELD                                              @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*   CALL IDCSASS0(GDTTBL,VVIC,RVVIPTR,RSNCD);/*              @Y30LB36*/
@RT00482 L     @07,@PC00001                                        0485
         ST    @07,@AL00001                                        0485
         LA    @15,VVIC                                            0485
         ST    @15,@AL00001+4                                      0485
         LA    @15,RVVIPTR                                         0485
         ST    @15,@AL00001+8                                      0485
         LA    @15,RSNCD                                           0485
         ST    @15,@AL00001+12                                     0485
         MVI   @AL00001+12,X'80'                                   0485
         L     @15,GDTSSC(,@07)                                    0485
         LA    @01,@AL00001                                        0485
         BALR  @14,@15                                             0485
*   OLDERID2=NEWERID2;                                             0486
         L     @07,@PC00001                                        0486
         L     @07,GDTTR2(,@07)                                    0486
         MVC   @TS00001(95),NEWERID2(@07)                          0486
         MVC   OLDERID2(95,@07),@TS00001                           0486
*   NEWID2='MGRU';                  /*                       @Y30LB36*/
         MVC   NEWID2(4,@07),@CC01507                              0487
*                                                                  0488
*   /*****************************************************************/
*   /*                                                               */
*   /* THE RETURN CODE FROM USSC INDICATES ITS SUCCESS       @Y30LB36*/
*   /* OR FAILURE TO READ THE RECORD. IF THE RETURN          @Y30LB36*/
*   /* CODE IS 4, FIRST TEST TO DETERMINE IF WE HAVE         @Y30LB36*/
*   /* REACHED THE END-OF-FILE, IDENTIFIED WITH X'223'       @Y30LB36*/
*   /* IN THE REASON CODE FIELD (RSNCD). IF SO,              @Y30LB36*/
*   /* INDICATE THE END OF FILE TO IDCMG01 BY ENTERING       @Y30LB36*/
*   /* A RETURN CODE OF 4 IN MODCC AND RETURNING TO          @Y30LB36*/
*   /* IDCMG01.                                              @Y30LB36*/
*   /* IF THE RETURN CODE IS 4, NOT END OF FILE, SET A       @Y30LB36*/
*   /* POINTER TO THE REASON CODE (RSNCD) AND ISSUE THE      @Y30LB36*/
*   /* REASON CODE MESSAGE GENERATOR (SSCMSG)                @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0488
*   RESPECIFY                                                      0488
*     RTNREG RSTD;                                                 0488
*   TESTRC=RTNREG;                                                 0489
         LR    TESTRC,RTNREG                                       0489
*   RESPECIFY                                                      0490
*     RTNREG UNRSTD;                /*                       @Y30LB36*/
*   IF TESTRC=0 THEN                /*                       @Y30LB36*/
         SLR   @07,@07                                             0491
         CR    TESTRC,@07                                          0491
         BNE   @RF00491                                            0491
*     MODCC=LASTCC00;               /*                       @Y30LB36*/
         LR    MODCC,@07                                           0492
*   ELSE                            /*                       @Y30LB36*/
*     IF RSNCD=EOFRSNCD THEN        /*                       @Y30LB36*/
         B     @RC00491                                            0493
@RF00491 CLC   RSNCD(4),EOFRSNCD                                   0493
         BNE   @RF00493                                            0493
*       MODCC=LASTCC04;             /*                       @Y30LB36*/
         LA    MODCC,4                                             0494
*     ELSE                          /*                       @Y30LB36*/
*       DO;                         /*                       @Y30LB36*/
         B     @RC00493                                            0495
@RF00493 DS    0H                                                  0496
*         MODCC=LASTCC12;           /*                       @Y30LB36*/
         LA    MODCC,12                                            0496
*         LASTCOND=LASTCC08;        /*                       @Y30LB36*/
*                                                                  0497
         L     @07,@PC00001+8                                      0497
         MVC   LASTCOND(2,@07),@CH00180                            0497
*         /***********************************************************/
*         /*                                                         */
*         /* IF REASON CODE IS NOT '223'X (END OF FILE),     @Y30LB36*/
*         /* CALL REASON CODE MESSAGE GENERATOR (SSCMSG)     @Y30LB36*/
*         /* TO ISSUE MESSAGE INDICATED BY REASON CODE       @Y30LB36*/
*         /* RETURNED BY USSC                                @Y30LB36*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0498
*         CALL SSCMSG(RSNCD);       /*                       @Y30LB36*/
         LA    @07,RSNCD                                           0498
         ST    @07,@AL00001                                        0498
         LA    @01,@AL00001                                        0498
         BAL   @14,SSCMSG                                          0498
*                                                                  0499
*         /***********************************************************/
*         /*                                                         */
*         /* THE READ WAS FOR A VOLUME RECORD, PRINT APPROPRIATE MES-*/
*         /* SAGE.                                           @Y30LB11*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0499
*         IF BSVRFLAG=ON THEN       /*                       @Y30LB36*/
         TM    BSVRFLAG,B'00010000'                                0499
         BNO   @RF00499                                            0499
*           DO;                     /*                       @Y30LB36*/
*                                                                  0500
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE IDC2080I INDICATING INABILITY @Y30LB36*/
*             /* TO READ BASE VOLUME RECORD FOR THIS VOLUME  @Y30LB36*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0501
*             DARGSENT=MSG2080I;    /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0501
         MVI   DARGSENT(@07),X'1A'                                 0501
*             DARGSMOD=CMNMSG;      /*                       @Y30LB36*/
         MVC   DARGSMOD(3,@07),@CC01474                            0502
*             DARGDBP=ADDR(RVVOLUME);/*                      @Y30LB11*/
         L     @02,RVVIPTR                                         0503
         LA    @02,RVVOLUME(,@02)                                  0503
         ST    @02,DARGDBP(,@07)                                   0503
*             DARGILP=LENGTH(RVVOLUME);/*                    @Y30LB11*/
         MVC   DARGILP(2,@07),@CH00157                             0504
*             CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*        @Y30LB36*/
*                                                                  0505
         L     @07,@PC00001                                        0505
         ST    @07,@AL00001                                        0505
         LA    @02,@CF00115                                        0505
         ST    @02,@AL00001+4                                      0505
         LA    @02,DDSTRU                                          0505
         ST    @02,@AL00001+8                                      0505
         MVI   @AL00001+8,X'80'                                    0505
         L     @15,GDTPRT(,@07)                                    0505
         LA    @01,@AL00001                                        0505
         BALR  @14,@15                                             0505
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE IDC2800I INDICATING REMAINING @Y30LB36*/
*             /* VOLUMES CANNOT BE UPDATED                   @Y30LB36*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0506
*             DARGSENT=MSG2800I;    /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0506
         MVI   DARGSENT(@07),X'01'                                 0506
*             DARGSMOD=MGRMSG;      /*                       @Y30LB36*/
         MVC   DARGSMOD(3,@07),@CC01482                            0507
*             DARGDBP=NULLPTR;      /*                       @Y30LB36*/
         SLR   @02,@02                                             0508
         ST    @02,DARGDBP(,@07)                                   0508
*             DARGILP=0;            /*                       @Y30LB36*/
         STH   @02,DARGILP(,@07)                                   0509
*           END;                    /*                       @Y30LB36*/
*                                                                  0510
*         /***********************************************************/
*         /*                                                         */
*         /* IF READ WAS FOR A GROUP RECORD, PRINT APPROPRIATE MES-  */
*         /* SAGE.                                           @Y30LB11*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0511
*         ELSE                      /*                       @Y30LB36*/
*           DO;                     /*                       @Y30LB36*/
*                                                                  0511
         B     @RC00499                                            0511
@RF00499 DS    0H                                                  0512
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE MESSAGE IDC2079I INDICATING INABILITY @Y30LB36*/
*             /* TO READ THE GROUP RECORD                    @Y30LB36*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0512
*             DARGSENT=MSG2079I;    /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0512
         MVI   DARGSENT(@07),X'1B'                                 0512
*             DARGSMOD=CMNMSG;      /*                       @Y30LB36*/
         MVC   DARGSMOD(3,@07),@CC01474                            0513
*             DARGDBP=ADDR(RVVGROUP);/*                      @Y30LB36*/
         L     @02,RVVIPTR                                         0514
         LA    @02,RVVGROUP(,@02)                                  0514
         ST    @02,DARGDBP(,@07)                                   0514
*             DARGILP=LENGTH(RVVGROUP);/*                    @Y30LB36*/
         MVC   DARGILP(2,@07),@CH00180                             0515
*           END;                    /*                       @Y30LB36*/
*         CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*            @Y30LB36*/
@RC00499 L     @07,@PC00001                                        0517
         ST    @07,@AL00001                                        0517
         LA    @02,@CF00115                                        0517
         ST    @02,@AL00001+4                                      0517
         LA    @02,DDSTRU                                          0517
         ST    @02,@AL00001+8                                      0517
         MVI   @AL00001+8,X'80'                                    0517
         L     @15,GDTPRT(,@07)                                    0517
         LA    @01,@AL00001                                        0517
         BALR  @14,@15                                             0517
*       END;                        /*                       @Y30LB36*/
*                                                                  0519
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE RECORD READ AND DUMP SAME                   @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0519
*   IF BSVRFLAG=ON THEN             /*                       @Y30LB36*/
@RC00493 DS    0H                                                  0519
@RC00491 TM    BSVRFLAG,B'00010000'                                0519
         BNO   @RF00519                                            0519
*     DO;                           /*                       @Y30LB36*/
*       IF GDTDBG=NULLPTR THEN                                     0521
         L     @07,@PC00001                                        0521
         L     @07,GDTDBG(,@07)                                    0521
         LTR   @07,@07                                             0521
         BZ    @RT00521                                            0521
*         ;                                                        0522
*       ELSE                                                       0523
*         DO;                                                      0523
*           DMPINDEX=ADDR(LISTAREA);/*                       @Y30LB36*/
         LA    DMPINDEX,LISTAREA                                   0524
*           DMPITMNM='BASEV';                                      0525
         MVI   DMPITMNM+5(DMPINDEX),C' '                           0525
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         0525
         MVC   DMPITMNM(5,DMPINDEX),@CC01508                       0525
*           DMPITMPT=ADDR(BASEV);                                  0526
         ST    BASEVPTR,DMPITMPT(,DMPINDEX)                        0526
*           DMPITMLN=LENGTH(BASEV);                                0527
         MVC   DMPITMLN(2,DMPINDEX),@CH01551                       0527
*           DMPITMTP='H';                                          0528
         MVI   DMPITMTP(DMPINDEX),C'H'                             0528
*           DMPINDEX=DMPINDEX+DMPELEMT;/*                    @Y30LB36*/
         AL    DMPINDEX,@CF00506                                   0529
*           DMPTRM=DMPTRMVL;                                       0530
         MVI   DMPTRM(DMPINDEX),X'FF'                              0530
*         END;                      /*                       @Y30LB36*/
*     END;                          /*                       @Y30LB36*/
*   ELSE                            /*                       @Y30LB36*/
*     DO;                           /*                       @Y30LB36*/
         B     @RC00519                                            0533
@RF00519 DS    0H                                                  0534
*       IF GDTDBG=NULLPTR THEN                                     0534
         L     @07,@PC00001                                        0534
         L     @07,GDTDBG(,@07)                                    0534
         LTR   @07,@07                                             0534
         BZ    @RT00534                                            0534
*         ;                                                        0535
*       ELSE                                                       0536
*         DO;                                                      0536
*           DMPINDEX=ADDR(LISTAREA);/*                       @Y30LB36*/
         LA    DMPINDEX,LISTAREA                                   0537
*           DMPITMNM='GROUP';                                      0538
         MVI   DMPITMNM+5(DMPINDEX),C' '                           0538
         MVC   DMPITMNM+6(2,DMPINDEX),DMPITMNM+5(DMPINDEX)         0538
         MVC   DMPITMNM(5,DMPINDEX),@CC01509                       0538
*           DMPITMPT=ADDR(GROUP);                                  0539
         ST    GROUPPTR,DMPITMPT(,DMPINDEX)                        0539
*           DMPITMLN=LENGTH(GROUP);                                0540
         MVC   DMPITMLN(2,DMPINDEX),@CH01550                       0540
*           DMPITMTP='H';                                          0541
         MVI   DMPITMTP(DMPINDEX),C'H'                             0541
*           DMPINDEX=DMPINDEX+DMPELEMT;/*                    @Y30LB36*/
         AL    DMPINDEX,@CF00506                                   0542
*           DMPTRM=DMPTRMVL;                                       0543
         MVI   DMPTRM(DMPINDEX),X'FF'                              0543
*         END;                      /*                       @Y30LB36*/
*     END;                          /*                       @Y30LB36*/
@RT00534 DS    0H                                                  0546
*   IF GDTDBG=NULLPTR THEN                                         0546
@RC00519 L     @07,@PC00001                                        0546
         L     @07,GDTDBG(,@07)                                    0546
         LTR   @07,@07                                             0546
         BZ    @RT00546                                            0546
*     ;                                                            0547
*   ELSE                                                           0548
*     CALL IDCDB010(GDTTBL,'MGRC',ADDR(LISTAREA));/*         @Y30LB36*/
         L     @07,@PC00001                                        0548
         ST    @07,@AL00001                                        0548
         LA    @02,@CC01510                                        0548
         ST    @02,@AL00001+4                                      0548
         LA    @02,LISTAREA                                        0548
         ST    @02,@AFTEMPS+4                                      0548
         LA    @02,@AFTEMPS+4                                      0548
         ST    @02,@AL00001+8                                      0548
         MVI   @AL00001+8,X'80'                                    0548
         L     @15,GDTDBG(,@07)                                    0548
         LA    @01,@AL00001                                        0548
         BALR  @14,@15                                             0548
*   RETURN;                         /*                       @Y30LB36*/
@EL00003 DS    0H                                                  0549
@EF00003 DS    0H                                                  0549
@ER00003 LM    @14,@02,@SA00003                                    0549
         L     @04,@SA00003+20                                     0549
         LM    @06,@12,@SA00003+24                                 0549
         BR    @14                                                 0549
*   END READREC;                    /*                       @Y30LB36*/
         B     @EL00003                                            0550
*                                                                  0551
*/********************************************************************/
*/*                                                          @Y30LB36*/
*/*  PROCEDURE NAME - MODVOL                                 @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  FUNCTION - ESTABLISH THE DEFINEV PARAMETER LIST TO      @Y30LB36*/
*/*             CHANGE ANY REQUESTED ATTRIBUTES ON BASE      @Y30LB36*/
*/*             VOLUME RECORDS.                              @Y30LB36*/
*/*             IF ANY OF THE RECOVERY FLAGS ARE ON, THUS    @Y30LB36*/
*/*             PREVENTING UPDATE OF THE VOLUME, ISSUE THE   @Y30LB36*/
*/*             APPROPRIATE MESSAGE, IE, IDC3097I, IDC3096I, @Y30LB36*/
*/*             OR IDC3095I AND SECONDARY MESSAGE IDC2801I   @Y30LB36*/
*/*             TO INDICATE WHICH VOLUME CANNOT BE UPDATED   @Y30LB36*/
*/*             IF THE FSR IS UNABLE TO CONTINUE, IT WILL    @Y30LB36*/
*/*             ISSUE MESSAGE IDC2800I INDICATING SAME       @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  INPUT - FUNCTION DEFINITION TABLE                       @Y30LB36*/
*/*          BASE VOLUME RECORD                              @Y30LB36*/
*/*          DPLFLAG SET ON TO INDICATE THE DEFLIST IS       @Y30LB36*/
*/*          ALREADY INITIALIZED AND REQUIRES ONLY THE       @Y30LB36*/
*/*          VOLUME SERIAL NUMBER                            @Y30LB36*/
*/*                                                          @Y30LB36*/
*/*  OUTPUT - CONDITION CODES (MODCC/LASTCOND) INDICATING    @Y30LB36*/
*/*          SUCCESS OR FAILURE OF THE SUBROUTINE.           @Y30LB36*/
*/*          LASTCOND IS SET TO                              @Y30LB36*/
*/*            0 IF UPDATE WAS SUCCESSFUL                    @Y30LB36*/
*/*            4 IF UPDATE WAS SUCCESSFUL, BUT AN I/O ERROR  @Y30LB36*/
*/*              OCCURRED IN MSVI UPDATE                     @Y30LB36*/
*/*            8 IF USSC FAILED TO UPDATE THE VOLUME         @Y30LB36*/
*/*              OR WAS UNABLE TO OBTAIN CORE                @Y30LB36*/
*/*          MODCC IS SET TO                                 @Y30LB36*/
*/*            0 IF PROCESSING IS TO CONTINUE                @Y30LB36*/
*/*            4 IF LAST RECORD HAS BEEN PROCESSED           @Y30LB36*/
*/*           12 IF AN ERROR HAS OCCURRED WHICH PREVENTS     @Y30LB36*/
*/*              ANY FURTHER PROCESSING                      @Y30LB36*/
*/*                                                          @Y30LB36*/
*/********************************************************************/
*                                                                  0551
*MODVOL:                                                           0551
*   PROCEDURE;                      /*                       @Y30LB36*/
MODVOL   STM   @14,@02,@SA00004                                    0551
         STM   @04,@12,@SA00004+20                                 0551
*   OLDERID2=NEWERID2;                                             0552
         L     @07,@PC00001                                        0552
         L     @07,GDTTR2(,@07)                                    0552
         MVC   @TS00001(95),NEWERID2(@07)                          0552
         MVC   OLDERID2(95,@07),@TS00001                           0552
*   NEWID2='MGMV';                  /*                       @Y30LB36*/
*                                                                  0553
         MVC   NEWID2(4,@07),@CC01514                              0553
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST RECOVERY FLAGS IN THE BASE VOLUME RECORD         @Y30LB36*/
*   /* IF THEY ARE OFF, TEST THE DPLFLAG. IF IT IS           @Y30LB36*/
*   /* OFF, INITIALIZE THE PARAMETER LIST TO CHANGE          @Y30LB36*/
*   /* THE REQUESTED ATTRIBUTES                              @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*   IF(BASIVCRE=OFF)&(BASIVCPY=OFF)&(BASVSMIS=OFF) THEN/*    @Y30LB36*/
         TM    BASIVCRE(BASEVPTR),B'11100000'                      0554
         BNZ   @RF00554                                            0554
*     DO;                           /*                       @Y30LB36*/
*       IF DPLFLAG=OFF THEN         /*                       @Y30LB36*/
         TM    DPLFLAG,B'01000000'                                 0556
         BNZ   @RF00556                                            0556
*         DO;                       /*                       @Y30LB36*/
*           DPLFLAG=ON;             /*                       @Y30LB11*/
         OI    DPLFLAG,B'01000000'                                 0558
*           DPLFIELD=''B;           /*                       @Y30LB11*/
         XC    DPLFIELD(132),DPLFIELD                              0559
*           DEFVREP=ON;             /*                       @Y30LB36*/
         L     @07,DPLINPTR                                        0560
         OI    DEFVREP(@07),B'00010000'                            0560
*           DEFVOLD=BASSERNO;       /*                       @Y30LB36*/
*                                                                  0561
         MVC   DEFVOLD(6,@07),BASSERNO(BASEVPTR)                   0561
*           /*********************************************************/
*           /*                                                       */
*           /* SET ALL ATTRIBUTE FLAGS AS THEY EXIST IN THE  @Y30LB36*/
*           /* MODIFIED GROUP RECORD                         @Y30LB36*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0562
*           IF GRODAERA=ON THEN     /*                       @Y30LB36*/
         TM    GRODAERA(GROUPPTR),B'00100000'                      0562
         BNO   @RF00562                                            0562
*             DEFVSEC=ON;           /*                       @Y30LB36*/
         OI    DEFVSEC(@07),B'00100000'                            0563
*           ELSE                    /*                       @Y30LB36*/
*             DEFVSEC=OFF;          /*                       @Y30LB36*/
         B     @RC00562                                            0564
@RF00562 L     @07,DPLINPTR                                        0564
         NI    DEFVSEC(@07),B'11011111'                            0564
*           IF GROEXCL=ON THEN      /*                       @Y30LB36*/
@RC00562 TM    GROEXCL(GROUPPTR),B'01000000'                       0565
         BNO   @RF00565                                            0565
*             DEFVEXCL=ON;          /*                       @Y30LB36*/
         L     @07,DPLINPTR                                        0566
         OI    DEFVEXCL(@07),B'00010000'                           0566
*           ELSE                    /*                       @Y30LB36*/
*             DEFVEXCL=OFF;         /*                       @Y30LB36*/
         B     @RC00565                                            0567
@RF00565 L     @07,DPLINPTR                                        0567
         NI    DEFVEXCL(@07),B'11101111'                           0567
*           IF GROBIND=ON THEN      /*                       @Y30LB36*/
@RC00565 TM    GROBIND(GROUPPTR),B'10000000'                       0568
         BNO   @RF00568                                            0568
*             DEFVBIND=ON;          /*                       @Y30LB36*/
         L     @07,DPLINPTR                                        0569
         OI    DEFVBIND(@07),B'00000100'                           0569
*           ELSE                    /*                       @Y30LB36*/
*             DEFVBIND=OFF;         /*                       @Y30LB36*/
         B     @RC00568                                            0570
@RF00568 L     @07,DPLINPTR                                        0570
         NI    DEFVBIND(@07),B'11111011'                           0570
*           IF GRORONLY=ON THEN     /*                       @Y30LB36*/
@RC00568 TM    GRORONLY(GROUPPTR),B'00010000'                      0571
         BNO   @RF00571                                            0571
*             DEFVWINH=ON;          /*                       @Y30LB36*/
         L     @07,DPLINPTR                                        0572
         OI    DEFVWINH(@07),B'00000010'                           0572
*           ELSE                    /*                       @Y30LB36*/
*             DEFVWINH=OFF;         /*                       @Y30LB36*/
         B     @RC00571                                            0573
@RF00571 L     @07,DPLINPTR                                        0573
         NI    DEFVWINH(@07),B'11111101'                           0573
*         END;                      /*                       @Y30LB36*/
*                                                                  0575
*       /*************************************************************/
*       /*                                                           */
*       /* IF PARAMETER LIST HAS BEEN INITIALIZED (DPLFLAG   @Y30LB36*/
*       /* IS ON), ENTER ONLY THE VOLUME SERIAL NUMBER INTO  @Y30LB36*/
*       /* THE PARAMETER LIST FROM THE BASE VOLUME RECORD    @Y30LB36*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0575
*       ELSE                        /*                       @Y30LB36*/
*         DEFVOLD=BASSERNO;         /*                       @Y30LB36*/
*                                                                  0575
         B     @RC00556                                            0575
@RF00556 L     @07,DPLINPTR                                        0575
         MVC   DEFVOLD(6,@07),BASSERNO(BASEVPTR)                   0575
*       /*************************************************************/
*       /*                                                           */
*       /* DUMP THE DEFINE VOLUME PARAMETER LIST             @Y30LB36*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0576
*       IF GDTDBG=NULLPTR THEN                                     0576
@RC00556 L     @07,@PC00001                                        0576
         L     @07,GDTDBG(,@07)                                    0576
         LTR   @07,@07                                             0576
         BZ    @RT00576                                            0576
*         ;                                                        0577
*       ELSE                                                       0578
*         DO;                                                      0578
*           DMPINDEX=ADDR(LISTAREA);/*                       @Y30LB36*/
         LA    DMPINDEX,LISTAREA                                   0579
*           DMPITMNM='DEFLIST';                                    0580
         MVI   DMPITMNM+7(DMPINDEX),C' '                           0580
         MVC   DMPITMNM(7,DMPINDEX),@CC01515                       0580
*           DMPITMPT=ADDR(DEFLIST);                                0581
         L     @07,DPLINPTR                                        0581
         ST    @07,DMPITMPT(,DMPINDEX)                             0581
*           DMPITMLN=LENGTH(DEFLIST);                              0582
         MVC   DMPITMLN(2,DMPINDEX),@CH01552                       0582
*           DMPITMTP='H';                                          0583
         MVI   DMPITMTP(DMPINDEX),C'H'                             0583
*           DMPINDEX=DMPINDEX+DMPELEMT;                            0584
         AL    DMPINDEX,@CF00506                                   0584
*           DMPTRM=DMPTRMVL;                                       0585
         MVI   DMPTRM(DMPINDEX),X'FF'                              0585
*         END;                      /*                       @Y30LB36*/
*       IF GDTDBG=NULLPTR THEN                                     0587
@RT00576 L     @07,@PC00001                                        0587
         L     @07,GDTDBG(,@07)                                    0587
         LTR   @07,@07                                             0587
         BZ    @RT00587                                            0587
*         ;                                                        0588
*       ELSE                                                       0589
*         CALL IDCDB010(GDTTBL,'MGMD',ADDR(LISTAREA));/*     @Y30LB36*/
*                                                                  0589
         L     @07,@PC00001                                        0589
         ST    @07,@AL00001                                        0589
         LA    @05,@CC01516                                        0589
         ST    @05,@AL00001+4                                      0589
         LA    @05,LISTAREA                                        0589
         ST    @05,@AFTEMPS+8                                      0589
         LA    @05,@AFTEMPS+8                                      0589
         ST    @05,@AL00001+8                                      0589
         MVI   @AL00001+8,X'80'                                    0589
         L     @15,GDTDBG(,@07)                                    0589
         LA    @01,@AL00001                                        0589
         BALR  @14,@15                                             0589
*       /*************************************************************/
*       /*                                                           */
*       /* CALL USSC MACRO TO UPDATE THE SS/1 MOUNTING       @Y30LB36*/
*       /* ATTRIBUTES AS INDICATED IN THE DEFLIST            @Y30LB36*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0590
*       CALL IDCSASS0(GDTTBL,DEFINE,DPLINPTR,RSNCD,MGRECB);/*      0590
*                                                            @Y30LB36*/
@RT00587 L     @07,@PC00001                                        0590
         ST    @07,@AL00001                                        0590
         LA    @15,DEFINE                                          0590
         ST    @15,@AL00001+4                                      0590
         LA    @15,DPLINPTR                                        0590
         ST    @15,@AL00001+8                                      0590
         LA    @15,RSNCD                                           0590
         ST    @15,@AL00001+12                                     0590
         LA    @15,MGRECB                                          0590
         ST    @15,@AL00001+16                                     0590
         MVI   @AL00001+16,X'80'                                   0590
         L     @15,GDTSSC(,@07)                                    0590
         LA    @01,@AL00001                                        0590
         BALR  @14,@15                                             0590
*       RESPECIFY                                                  0591
*         RTNREG RSTD;                                             0591
*       TESTRC=RTNREG;                                             0592
         LR    TESTRC,RTNREG                                       0592
*       RESPECIFY                                                  0593
*         RTNREG UNRSTD;            /*                       @Y30LB36*/
*     END;                          /*                       @Y30LB36*/
*   ELSE                            /*                       @Y30LB36*/
*     DO;                           /*                       @Y30LB36*/
*                                                                  0595
         B     @RC00554                                            0595
@RF00554 DS    0H                                                  0596
*       /*************************************************************/
*       /*                                                           */
*       /* TEST RECOVERY FLAGS TO DETERMINE WHICH FLAG       @Y30LB36*/
*       /* WAS SET.                                          @Y30LB36*/
*       /* IF BASIVCRE WAS SET, ISSUE MESSAGE IDC3097I       @Y30LB36*/
*       /* IF BASIVCPY WAS SET, ISSUE MESSAGE IDC3096I       @Y30LB36*/
*       /* IF BASVSMIS WAS SET, ISSUE MESSAGE IDC3095I       @Y30LB36*/
*       /* THEN ISSUE SECONDARY MESSAGE IDC2801I TO          @Y30LB36*/
*       /* INDICATE ATTRIBUTES WERE NOT CHANGED FOR          @Y30LB36*/
*       /* THAT VOLUME.                                      @Y30LB36*/
*       /* SET LASTCOND TO 8                                 @Y30LB36*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0596
*       IF BASIVCRE=ON THEN         /*                       @Y30LB36*/
         TM    BASIVCRE(BASEVPTR),B'10000000'                      0596
         BNO   @RF00596                                            0596
*         DARGSENT=MSG3097I;        /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0597
         MVI   DARGSENT(@07),X'03'                                 0597
*       ELSE                        /*                       @Y30LB36*/
*         DO;                       /*                       @Y30LB36*/
         B     @RC00596                                            0598
@RF00596 DS    0H                                                  0599
*           IF BASIVCPY=ON THEN     /*                       @Y30LB36*/
         TM    BASIVCPY(BASEVPTR),B'01000000'                      0599
         BNO   @RF00599                                            0599
*             DARGSENT=MSG3096I;    /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0600
         MVI   DARGSENT(@07),X'06'                                 0600
*           ELSE                    /*                       @Y30LB36*/
*             DARGSENT=MSG3095I;    /*                       @Y30LB36*/
         B     @RC00599                                            0601
@RF00599 L     @07,DDSTRU                                          0601
         MVI   DARGSENT(@07),X'09'                                 0601
*         END;                      /*                       @Y30LB36*/
@RC00599 DS    0H                                                  0603
*       DARGSMOD=CMNMSG;            /*                       @Y30LB36*/
@RC00596 L     @07,DDSTRU                                          0603
         MVC   DARGSMOD(3,@07),@CC01474                            0603
*       DARGDBP=ADDR(BASSERNO);     /*                       @Y30LB36*/
         LA    @15,BASSERNO(,BASEVPTR)                             0604
         ST    @15,DARGDBP(,@07)                                   0604
*       DARGILP=LENGTH(BASSERNO);   /*                       @Y30LB36*/
         MVC   DARGILP(2,@07),@CH00157                             0605
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB36*/
         L     @07,@PC00001                                        0606
         ST    @07,@AL00001                                        0606
         LA    @15,@CF00115                                        0606
         ST    @15,@AL00001+4                                      0606
         LA    @15,DDSTRU                                          0606
         ST    @15,@AL00001+8                                      0606
         MVI   @AL00001+8,X'80'                                    0606
         L     @15,GDTPRT(,@07)                                    0606
         LA    @01,@AL00001                                        0606
         BALR  @14,@15                                             0606
*       DARGSENT=MSG2801I;          /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0607
         MVI   DARGSENT(@07),X'02'                                 0607
*       DARGSMOD=MGRMSG;            /*                       @Y30LB36*/
         MVC   DARGSMOD(3,@07),@CC01482                            0608
*       DARGDBP=ADDR(BASSERNO);     /*                       @Y30LB36*/
         LA    @15,BASSERNO(,BASEVPTR)                             0609
         ST    @15,DARGDBP(,@07)                                   0609
*       DARGILP=LENGTH(BASSERNO);   /*                       @Y30LB36*/
         MVC   DARGILP(2,@07),@CH00157                             0610
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB36*/
         L     @07,@PC00001                                        0611
         ST    @07,@AL00001                                        0611
         LA    @15,@CF00115                                        0611
         ST    @15,@AL00001+4                                      0611
         LA    @15,DDSTRU                                          0611
         ST    @15,@AL00001+8                                      0611
         MVI   @AL00001+8,X'80'                                    0611
         L     @15,GDTPRT(,@07)                                    0611
         LA    @01,@AL00001                                        0611
         BALR  @14,@15                                             0611
*       LASTCOND=LASTCC08;          /*                       @Y30LB36*/
         L     @07,@PC00001+8                                      0612
         MVC   LASTCOND(2,@07),@CH00180                            0612
*     END;                          /*                       @Y30LB36*/
*                                                                  0614
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE FROM USSC IS 8,                        @Y30LB36*/
*   /* SET LASTCOND = 8                                      @Y30LB36*/
*   /* INDICATING GROUP RECORD WAS MODIFIED,                 @Y30LB36*/
*   /* BUT ONE OR MORE OF THE BASE VOLUME                    @Y30LB36*/
*   /* RECORDS WERE NOT.                                     @Y30LB36*/
*   /* SET MODCC = 12                                        @Y30LB36*/
*   /* INDICATES STOP FURTHER PROCESSING                     @Y30LB36*/
*   /* ISSUE MESSAGE IDC2800I INDICATING SOME                @Y30LB36*/
*   /* VOLUMES ATTRIBUTES WERE NOT CHANGED                   @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0614
*   IF TESTRC=8 THEN                /*                       @Y30LB36*/
@RC00554 LA    @07,8                                               0614
         CR    TESTRC,@07                                          0614
         BNE   @RF00614                                            0614
*     DO;                           /*                       @Y30LB36*/
*       LASTCOND=LASTCC08;          /*                       @Y30LB36*/
         L     @02,@PC00001+8                                      0616
         STH   @07,LASTCOND(,@02)                                  0616
*       MODCC=LASTCC12;             /*                       @Y30LB36*/
         LA    MODCC,12                                            0617
*       DARGSENT=MSG2800I;          /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0618
         MVI   DARGSENT(@07),X'01'                                 0618
*       DARGSMOD=MGRMSG;            /*                       @Y30LB36*/
         MVC   DARGSMOD(3,@07),@CC01482                            0619
*       DARGDBP=NULLPTR;            /*                       @Y30LB36*/
         SLR   @02,@02                                             0620
         ST    @02,DARGDBP(,@07)                                   0620
*       DARGILP=0;                  /*                       @Y30LB36*/
         STH   @02,DARGILP(,@07)                                   0621
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB36*/
         L     @07,@PC00001                                        0622
         ST    @07,@AL00001                                        0622
         LA    @02,@CF00115                                        0622
         ST    @02,@AL00001+4                                      0622
         LA    @02,DDSTRU                                          0622
         ST    @02,@AL00001+8                                      0622
         MVI   @AL00001+8,X'80'                                    0622
         L     @15,GDTPRT(,@07)                                    0622
         LA    @01,@AL00001                                        0622
         BALR  @14,@15                                             0622
*     END;                          /*                       @Y30LB36*/
*                                                                  0623
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE DOES NOT = 8,                          @Y30LB36*/
*   /* TEST BASLAST FLAG IN BASEV TO DETERMINE IF THIS       @Y30LB36*/
*   /* IS THE LAST RECORD. IF IT IS, SET MODCC TO            @Y30LB36*/
*   /* 4 TO INDICATE LAST RECORD TO IDCMG01                  @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   ELSE                            /*                       @Y30LB36*/
*     DO;                           /*                       @Y30LB36*/
         B     @RC00614                                            0624
@RF00614 DS    0H                                                  0625
*       IF BASLAST=ON THEN          /*                       @Y30LB36*/
         TM    BASLAST(BASEVPTR),B'00001000'                       0625
         BNO   @RF00625                                            0625
*         MODCC=LASTCC04;           /*                       @Y30LB36*/
         LA    MODCC,4                                             0626
*       ELSE                        /*                       @Y30LB36*/
*         MODCC=LASTCC00;           /*                       @Y30LB36*/
         B     @RC00625                                            0627
@RF00625 SLR   MODCC,MODCC                                         0627
*     END;                          /*                       @Y30LB36*/
@RC00625 DS    0H                                                  0629
*                                                                  0629
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE FROM USSC IS 4,                        @Y30LB36*/
*   /* SET LASTCOND = 8, TO INDICATE USSC FAILED             @Y30LB36*/
*   /* TO UPDATE THE ATTRIBUTES FOR THE VOLUME.              @Y30LB36*/
*   /* SET MODCC = 0 TO CONTINUE PROCESSING THE              @Y30LB36*/
*   /* NEXT VOLUME.                                          @Y30LB36*/
*   /* ISSUE MESSAGE IDC2801I INDICATING THAT VOLUME         @Y30LB36*/
*   /* ATTRIBUTES HAVE NOT BEEN UPDATED                      @Y30LB36*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0629
*   IF TESTRC=4 THEN                /*                       @Y30LB36*/
@RC00614 C     TESTRC,@CF00041                                     0629
         BNE   @RF00629                                            0629
*     DO;                           /*                       @Y30LB36*/
*       CALL SSCMSG(RSNCD);         /*                       @Y30LB36*/
         LA    @07,RSNCD                                           0631
         ST    @07,@AL00001                                        0631
         LA    @01,@AL00001                                        0631
         BAL   @14,SSCMSG                                          0631
*       LASTCOND=LASTCC08;          /*                       @Y30LB36*/
         L     @07,@PC00001+8                                      0632
         MVC   LASTCOND(2,@07),@CH00180                            0632
*       DARGSENT=MSG2801I;          /*                       @Y30LB36*/
         L     @07,DDSTRU                                          0633
         MVI   DARGSENT(@07),X'02'                                 0633
*       DARGSMOD=MGRMSG;            /*                       @Y30LB36*/
         MVC   DARGSMOD(3,@07),@CC01482                            0634
*       DARGDBP=ADDR(BASSERNO);     /*                       @Y30LB36*/
         LA    @02,BASSERNO(,BASEVPTR)                             0635
         ST    @02,DARGDBP(,@07)                                   0635
*       DARGILP=LENGTH(BASSERNO);   /*                       @Y30LB36*/
         MVC   DARGILP(2,@07),@CH00157                             0636
*       CALL AMSTP011(GDTTBL,PRTFILE,DDSTRU);/*              @Y30LB36*/
         L     @07,@PC00001                                        0637
         ST    @07,@AL00001                                        0637
         LA    @02,@CF00115                                        0637
         ST    @02,@AL00001+4                                      0637
         LA    @02,DDSTRU                                          0637
         ST    @02,@AL00001+8                                      0637
         MVI   @AL00001+8,X'80'                                    0637
         L     @15,GDTPRT(,@07)                                    0637
         LA    @01,@AL00001                                        0637
         BALR  @14,@15                                             0637
*     END;                          /*                       @Y30LB36*/
*   IF TESTRC=12&LASTCOND<LASTCC04 THEN/*                    @Y30LB36*/
@RF00629 C     TESTRC,@CF00036                                     0639
         BNE   @RF00639                                            0639
         LA    @07,4                                               0639
         L     @02,@PC00001+8                                      0639
         CH    @07,LASTCOND(,@02)                                  0639
         BNH   @RF00639                                            0639
*     LASTCOND=LASTCC04;            /*                       @Y30LB36*/
         STH   @07,LASTCOND(,@02)                                  0640
*   RETURN;                         /*                       @Y30LB36*/
@EL00004 DS    0H                                                  0641
@EF00004 DS    0H                                                  0641
@ER00004 LM    @14,@02,@SA00004                                    0641
         LM    @04,@12,@SA00004+20                                 0641
         BR    @14                                                 0641
*   END MODVOL;                     /*                       @Y30LB36*/
         B     @EL00004                                            0642
*                                                                  0643
*/***********************************************************@Y30LB39*/
*/* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/
*/*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/
*/*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/
*/*   INPUT ARGUMENTS.                                       @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/
*/*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/
*/*   IN SSECBCD.                                            @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/
*/*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/
*/*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/
*/*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/
*/*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/
*/*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/
*/*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/
*/*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/
*/*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/
*/*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/
*/*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/
*/*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/
*/*                                                          @Y30LB39*/
*/*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/
*/*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/
*/*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/
*/*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/
*/*                                                          @Y30LB39*/
*/* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/
*/*                                                          @Y30LB39*/
*/***********************************************************@Y30LB39*/
*                                                                  0643
*                                   /*                       @Y30LB39*/
*SSCMSG:                                                           0643
*   PROCEDURE(SSRCODE,              /* SSC RETURN CODE       @Y30LB39*/
*       SSECBCD);                   /* ECB POST CODE         @Y30LB39
*                                                            @Y30LB39*/
SSCMSG   STM   @14,@12,@SA00005                                    0643
         MVC   @PC00005(8),0(@01)                                  0643
*                                   /*                       @Y30LB39*/
*                                                                  0644
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARATIONS FOR THE SSCMSG PROCEDURE                 @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0644
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0644
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT TWO DECLARES ARE FOR THE TWO INPUT           @Y30LB39*/
*   /* ARGUMENTS. 1ST - MSSC REASON CODE OR                  @Y30LB39*/
*   /* 2ND - MSSC POST CODE                                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0644
*                                   /*                       @Y30LB39*/
*   DCL                                                            0644
*     1 SSRCODE FIXED(31),          /*                       @Y30LB39*/
*       3 * FIXED(15),              /*                       @Y30LB39*/
*       3 SSRHALF FIXED(15);        /* 1ST ARG REASON CODE   @Y30LB39*/
*   DCL                                                            0645
*     SSECBCD PTR(8);               /* 2ND ARG POST CODE     @Y30LB39
*                                                            @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0645
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND       @Y30LB39*/
*   /* CONTAIN THE "LOCAL" PRINT ARGUMENT LIST               @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0646
*                                   /*                       @Y30LB39*/
*   DCL                                                            0646
*     SSDLPTR PTR(31);              /*                       @Y30LB39*/
*   DCL                                                            0647
*     SSDRGLT CHAR(LENGTH(DARGLIST));/*                      @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0647
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE INDEX WHICH IS            @Y30LB39*/
*   /* INCREMENTED WHILE SEARCHING THE ARRAY OF              @Y30LB39*/
*   /* REASON CODES AND, UPON FINDING THE CORRECT            @Y30LB39*/
*   /* REASON CODE, IS PASSED TO PRINT MODULE AS THE         @Y30LB39*/
*   /* INDEX OF THE MESSAGE NUMBER TO BE PRINTED.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0648
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0648
*     ENTRYNUM FIXED(8) UNSIGNED;   /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0648
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE COMMON MESSAGE            @Y30LB39*/
*   /* NUMBER TO IDENTIFY THE ECB POST CODE                  @Y30LB39*/
*   /* MESSAGE CONTAINED IN STATIC TEXT MODULE               @Y30LB39*/
*   /* IDCTSCM0.                                             @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0649
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0649
*     SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0649
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARE IS FOR THE ARRAY WHICH IS            @Y30LB39*/
*   /* SEARCHED FOR THE REASON CODE CORRESPONDING            @Y30LB39*/
*   /* TO THE MESSAGE INDEX AND ULTIMATELY, THE              @Y30LB39*/
*   /* MESSAGE TEXT TO BE PRINTED TO THE USER TELLING        @Y30LB39*/
*   /* HIM OF THE EXACT REASON FOR THE MSSC FAILURE.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0650
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0650
*     1 SSINXLST BDY(WORD),         /*                       @Y30LB39*/
*       3 SSARRAY(60) FIXED(15);    /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0650
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSSS0.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0651
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0651
*     SSMODSS0 CHAR(3) STATIC INIT('SS0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0651
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE NEXT DECLARATION IS FOR THE MESSAGE ID            @Y30LB39*/
*   /* USED BY THE STATIC TEXT MODULE - IDCTSCMO.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0652
*                                   /*                       @Y30LB39*/
*   DECLARE                                                        0652
*     SSMODCM0 CHAR(3) STATIC INIT('CM0');/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  0653
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW         @Y30LB39*/
*   /* ON CONTROL WITHIN THE SSMSG MODULE.                   @Y30LB39*/
*   /* THIS WILL PLACE THE IDENTIFIER SPECIFIED IN           @Y30LB39*/
*   /* A SEPARATE INTRA-MODULE TRACE TABLE.                  @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0653
*                                   /*                       @Y30LB39*/
*   OLDERID2=NEWERID2;                                             0653
         L     @15,@PC00001                                        0653
         L     @14,GDTTR2(,@15)                                    0653
         MVC   @TS00001(95),NEWERID2(@14)                          0653
         MVC   OLDERID2(95,@14),@TS00001                           0653
*   NEWID2='SSAA';                  /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0654
         MVC   NEWID2(4,@14),@CC01537                              0654
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ESTABLISH ADDRESSABILITY TO THE DYNAMIC               @Y30LB39*/
*   /* ARGUMENT LIST.                                        @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0655
*                                   /*                       @Y30LB39*/
*   SSDLPTR=ADDR(SSDRGLT);          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0655
         LA    @14,SSDRGLT                                         0655
         ST    @14,SSDLPTR                                         0655
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* IF THE REASON CODE IS NOT ZERO, READ IN THE           @Y30LB39*/
*   /* ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.         @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0656
*                                   /*                       @Y30LB39*/
*   IF SSRCODE>0 THEN                                              0656
         L     @09,@PC00005                                        0656
         L     @09,SSRCODE(,@09)                                   0656
         LTR   @09,@09                                             0656
         BNP   @RF00656                                            0656
*     DO;                           /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0657
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND               @Y30LB39*/
*       /* INITIALIZE THE PRINT ARGUMENT LIST TO READ        @Y30LB39*/
*       /* IN THE ARRAY WHICH CONTAINS THE MSSC REASON       @Y30LB39*/
*       /* CODES.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0658
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0658
*       SSDLPTR->DARGRETP=ADDR(SSINXLST);/*                  @Y30LB39*/
         LA    @03,SSINXLST                                        0659
         ST    @03,DARGRETP(,@14)                                  0659
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         MVC   DARGSMOD(3,@14),SSMODSS0                            0660
*       SSDLPTR->DARGSENT=1;        /*                       @Y30LB39*/
         MVI   DARGSENT(@14),X'01'                                 0661
*       SSDLPTR->DARGRETL=LENGTH(SSINXLST);/*                @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0662
         MVC   DARGRETL(2,@14),@CH01553                            0662
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* ISSUE UPRINT MACRO TO READ IN THE SEARCH          @Y30LB39*/
*       /* ARRAY.                                            @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0663
*                                   /*                       @Y30LB39*/
*       CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*             @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0663
         ST    @15,@AL00001                                        0663
         LA    @03,@CF00115                                        0663
         ST    @03,@AL00001+4                                      0663
         LA    @03,SSDLPTR                                         0663
         ST    @03,@AL00001+8                                      0663
         MVI   @AL00001+8,X'80'                                    0663
         L     @15,GDTPRT(,@15)                                    0663
         LA    @01,@AL00001                                        0663
         BALR  @14,@15                                             0663
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* BEGIN DO LOOP TO SEARCH FOR THE MESSAGE           @Y30LB39*/
*       /* INDEX CORRESPONDING TO THE REASON CODE            @Y30LB39*/
*       /* PASSED AS THE FIRST ARGUMENT.                     @Y30LB39*/
*       /* THE DO LOOP BEGINS WITH THE SECOND ARRAY          @Y30LB39*/
*       /* ENTRY SINCE THE FIRST IS REQUIRED BY THE          @Y30LB39*/
*       /* SEARCH ARRAY ITSELF.                              @Y30LB39*/
*       /* THE SEARCH CONTINUES UNTIL THE REASON CODE        @Y30LB39*/
*       /* IS FOUND, AT WHICH TIME THE SEARCH INDEX          @Y30LB39*/
*       /* IS PASSED TO THE PRINT MODULE TO PRINT            @Y30LB39*/
*       /* THE MESSAGE ASSOCIATED WITH THAT PARTICULAR       @Y30LB39*/
*       /* REASON CODE.                                      @Y30LB39*/
*       /* IF THERE IS NO MATCH FOUND IN THE ARRAY,          @Y30LB39*/
*       /* THEN THE INDEX WILL BE THE LAST POSITION IN       @Y30LB39*/
*       /* ARRAY. THIS WILL BE THE INDICATION THAT           @Y30LB39*/
*       /* THE REASON CODE ITSELF SHOULD BE PRINTED.         @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0664
*                                   /*                       @Y30LB39*/
*       ENTRYNUM=1;                 /*                       @Y30LB39*/
         LA    ENTRYNUM,1                                          0664
*       DO UNTIL(SSRHALF=SSARRAY(ENTRYNUM)×SSARRAY(ENTRYNUM)=0);   0665
@DL00665 DS    0H                                                  0666
*         ENTRYNUM=ENTRYNUM+1;      /*                       @Y30LB39*/
         AL    ENTRYNUM,@CF00220                                   0666
*       END;                        /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0667
@DE00665 L     @03,@PC00005                                        0667
         LR    @15,ENTRYNUM                                        0667
         ALR   @15,@15                                             0667
         LH    @15,SSARRAY-2(@15)                                  0667
         CH    @15,SSRHALF(,@03)                                   0667
         BE    @DC00665                                            0667
         SLR   @14,@14                                             0667
         CR    @15,@14                                             0667
         BNE   @DL00665                                            0667
@DC00665 DS    0H                                                  0668
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB39*/
*       /* THE CORRECT INDEX HAS BEEN FOUND                  @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /* CLEAR THE DYNAMIC ARGUMENT LIST AND FILL          @Y30LB39*/
*       /* OUT THE PRINT ARGUMENT FIELDS WITH EITHER:        @Y30LB39*/
*       /* 1) THE INDEX CORRESPONDING TO THE REASON          @Y30LB39*/
*       /* CODE OR                                           @Y30LB39*/
*       /* 2) THE LAST INDEX AND THE REASON CODE             @Y30LB39*/
*       /* ITSELF AS A STATIC TEXT INSERT.                   @Y30LB39*/
*       /*                                                   @Y30LB39*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0668
*                                   /*                       @Y30LB39*/
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0668
*       SSDLPTR->DARGSMOD=SSMODSS0; /*                       @Y30LB39*/
         L     @09,SSDLPTR                                         0669
         MVC   DARGSMOD(3,@09),SSMODSS0                            0669
*       SSDLPTR->DARGSENT=ENTRYNUM; /*                       @Y30LB39*/
         STC   ENTRYNUM,DARGSENT(,@09)                             0670
*       IF SSARRAY(ENTRYNUM)=0 THEN /*                       @Y30LB39*/
         CR    @15,@14                                             0671
         BNE   @RF00671                                            0671
*         DO;                       /*                       @Y30LB39*/
*           SSDLPTR->DARGDBP=ADDR(SSRCODE);/*                @Y30LB39*/
         ST    @03,DARGDBP(,@09)                                   0673
*           SSDLPTR->DARGILP=LENGTH(SSRCODE);/*              @Y30LB39*/
         MVC   DARGILP(2,@09),@CH00041                             0674
*         END;                      /*                       @Y30LB39*/
*     END;                          /*                       @Y30LB39*/
*                                   /*                       @Y30LB39*/
*                                                                  0677
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* THE FIRST ARGUMENT WAS ZERO, INDICATING THAT          @Y30LB39*/
*   /* THIS ROUTINE IS TO PRINT OUT THE ECB POST             @Y30LB39*/
*   /* CODE. THEREFORE, CLEAR THE DYNAMIC ARGUMENT           @Y30LB39*/
*   /* LIST AND FILL OUT THE PRINT ARGUMENT FIELDS           @Y30LB39*/
*   /* SO THE STATIC TEXT MODULE, IDCTSCM0, WILL             @Y30LB39*/
*   /* PRINT OUT THE MESSAGE ASSOCIATED WITH THE             @Y30LB39*/
*   /* POST CODE.                                            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0677
*                                   /*                       @Y30LB39*/
*   ELSE                            /*                       @Y30LB39*/
*     DO;                           /*                       @Y30LB39*/
         B     @RC00656                                            0677
@RF00656 DS    0H                                                  0678
*       SSDRGLT=''B;                /*                       @Y30LB39*/
         XC    SSDRGLT(20),SSDRGLT                                 0678
*       SSDLPTR->DARGSMOD=SSMODCM0; /*                       @Y30LB39*/
         L     @15,SSDLPTR                                         0679
         MVC   DARGSMOD(3,@15),SSMODCM0                            0679
*       SSDLPTR->DARGSENT=SSMSGNUM; /*                       @Y30LB39*/
         MVC   DARGSENT(1,@15),SSMSGNUM                            0680
*       SSDLPTR->DARGDBP=ADDR(SSECBCD);/*                    @Y30LB39*/
         L     @14,@PC00005+4                                      0681
         ST    @14,DARGDBP(,@15)                                   0681
*       SSDLPTR->DARGILP=LENGTH(SSECBCD);/*                  @Y30LB39*/
         MVC   DARGILP(2,@15),@CH00220                             0682
*     END;                          /*                       @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0683
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* ISSUE UPRINT MACRO TO PRINT THE REASON                @Y30LB39*/
*   /* CODE MESSAGE OR THE ECB POST CODE MESSAGE.            @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0684
*                                   /*                       @Y30LB39*/
*   CALL AMSTP011(GDTTBL,PRTFILE,SSDLPTR);/*                 @Y30LB39
*                                                            @Y30LB39*/
*                                                                  0684
@RC00656 L     @15,@PC00001                                        0684
         ST    @15,@AL00001                                        0684
         LA    @14,@CF00115                                        0684
         ST    @14,@AL00001+4                                      0684
         LA    @14,SSDLPTR                                         0684
         ST    @14,@AL00001+8                                      0684
         MVI   @AL00001+8,X'80'                                    0684
         L     @15,GDTPRT(,@15)                                    0684
         LA    @01,@AL00001                                        0684
         BALR  @14,@15                                             0684
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB39*/
*   /* RETURN TO CALLER WITH A RETURN CODE OF ZERO           @Y30LB39*/
*   /*                                                       @Y30LB39*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0685
*                                   /*                       @Y30LB39
*                                                            @Y30LB39*/
*   RETURN CODE(0);                 /*                       @Y30LB39
*                                                            @Y30LB39*/
         SLR   @15,@15                                             0685
         L     @14,@SA00005                                        0685
         LM    @00,@12,@SA00005+8                                  0685
         BR    @14                                                 0685
*   END SSCMSG;                     /*                       @Y30LB39*/
*   END IDCMG01                     /*                       @Y30LB36*/
*                                                                  0687
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMSDF01 )                                       */
*/*%INCLUDE SYSLIB  (AMSDF00 )                                       */
*/*@INCLUDE SYSLIB  (AMSDF02 )                                       */
*/*%INCLUDE SYSLIB  (IDCDF04 )                                       */
*/*%INCLUDE SYSLIB  (IDCCSMG )                                       */
*/*%INCLUDE SYSLIB  (IEZMGP  )                                       */
*/*%INCLUDE SYSLIB  (IEZRVVI )                                       */
*/*%INCLUDE SYSLIB  (IEZBASEV)                                       */
*/*%INCLUDE SYSLIB  (IEZGROUP)                                       */
*/*%INCLUDE SYSLIB  (IDCDF52 )                                       */
*                                                                  0687
*       ;                                                          0687
@DATA    DS    0H
@CH00154 DC    H'2'
@CH00157 DC    H'6'
@CH00180 DC    H'8'
@CH01539 DC    H'68'
@CH01549 DC    H'104'
@CH01553 DC    H'120'
@CH01552 DC    H'132'
@CH01550 DC    H'164'
@CH01551 DC    H'224'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00002 DS    14F
@SA00003 DS    13F
@SA00004 DS    14F
@SA00005 DS    15F
@PC00005 DS    2F
@AL00001 DS    5A
@AFTEMPS DS    3F
IDCMG01  CSECT
         DS    0F
@CF00115 DC    F'0'
@CF00220 DC    F'1'
@CH00220 EQU   @CF00220+2
@CF00041 DC    F'4'
@CH00041 EQU   @CF00041+2
@CF00036 DC    F'12'
@CH00036 EQU   @CF00036+2
@CF00506 DC    F'16'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
ERCNVADR DS    A
CCMSGPTR DS    A
CMMSGPTR DS    A
CTMSGPTR DS    A
ELEMENT  DS    F
MGPPTR   DS    A
RVVIPTR  DS    A
DPLINPTR DS    A
RSNCD    DS    F
SSDLPTR  DS    A
LISTPTR  DS    A
SETRC    DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
FLAGBYTE DS    BL1
         ORG   FLAGBYTE
GRPFLAG  DS    BL1
DPLFLAG  EQU   FLAGBYTE+0
RDVFLAG  EQU   FLAGBYTE+0
BSVRFLAG EQU   FLAGBYTE+0
RESTFLAG EQU   FLAGBYTE+0
         ORG   FLAGBYTE+1
MGRECB   DS    CL1
PRTARGS  DS    CL20
MGRFIELD DS    CL104
RDVFIELD DS    CL68
BSVFIELD DS    CL224
GRPFIELD DS    CL164
DPLFIELD DS    CL132
LISTAREA DS    CL17
SSDRGLT  DS    CL20
         DS    CL3
SSINXLST DS    CL120
         ORG   SSINXLST
SSARRAY  DS    60H
         ORG   SSINXLST+120
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDCMG01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
EOFRSNCD DC    XL4'223'
MGPLEN   DC    AL2(104)
RVVLEN   DC    AL2(68)
SSMSGNUM DC    AL1(56)
@CC01515 DC    C'DEFLIST'
@CC01508 DC    C'BASEV'
@CC01509 DC    C'GROUP'
@CC01485 DC    C'MGBT'
@CC01486 DC    C'MGBG'
@CC01491 DC    C'MGND'
@CC01495 DC    C'MGPB'
@CC01498 DC    C'MGPM'
@CC01499 DC    C'MGUS'
@CC01504 DC    C'MGRR'
@CC01505 DC    C'RVVI'
@CC01506 DC    C'MGRV'
@CC01507 DC    C'MGRU'
@CC01510 DC    C'MGRC'
@CC01514 DC    C'MGMV'
@CC01516 DC    C'MGMD'
@CC01537 DC    C'SSAA'
@CC01470 DC    C'UV0'
@CC01474 DC    C'CM0'
@CC01482 DC    C'MG0'
@CC01496 EQU   @CC01495
ALL      DC    CL3'ALL'
FORMAT   DC    CL4'FORM'
HSECOND  DC    CL4'HSEC'
CLOCK    DC    CL4'KLOK'
SETZERO  DC    CL4'ZERO'
SETBLANK DC    CL4'BLNK'
NOSET    DC    CL4'NSET'
OVERRIDE DC    CL4'OVRD'
ACQUIRE  DC    CL8'ACQUIRE '
RELINQ   DC    CL8'RELINQ  '
MOUNT    DC    CL8'MOUNT   '
DEMOUNT  DC    CL8'DEMOUNT '
DEFINE   DC    CL8'DEFINE  '
MOVE     DC    CL8'MOVE    '
TRACEQ   DC    CL8'TRACEQ  '
COPYTABL DC    CL8'COPYTABL'
COPYCRTG DC    CL8'COPYCRTG'
COPYVOL  DC    CL8'COPYVOL '
VVIC     DC    CL8'VVIC    '
TUNE     DC    CL8'TUNE    '
NAMES    DC    CL4'NAME'
UNIT     DC    CL4'UNIT'
SHR      DC    CL4'SHR '
EXCL     DC    CL4'EXCL'
NOWAIT   DC    CL4'NWAI'
WAIT     DC    CL4'WAIT'
SECCHECK DC    CL8'SECCHECK'
SCRVTOC  DC    CL8'SCRVTOC '
GETVTOC  DC    CL8'GETVTOC '
PUTVTOC  DC    CL8'PUTVTOC '
RECATLG  DC    CL8'RECATLG '
INITVOL  DC    CL8'INITVOL '
CHECK    DC    CL8'CHECK   '
POSTUCB  DC    CL8'POSTUCB '
GET      DC    CL8'GET     '
PUT      DC    CL8'PUT     '
CLOSE    DC    CL8'CLOSE   '
OPEN     DC    CL8'OPEN    '
RVOPENR  DC    CL8'OPENR   '
RVRDCNT  DC    CL8'READCNT '
RVREADKD DC    CL8'READKD  '
RVSPACCR DC    CL8'SPACCR  '
RVFWRITE DC    CL8'FWRITE  '
RVWRITER DC    CL8'WRITEREC'
PUTLABEL DC    CL8'PUTLABEL'
GETLABEL DC    CL8'GETLABEL'
CANCEL   DC    CL8'CANCEL  '
SET      DC    CL8'SET     '
SELECTX  DC    CL8'SELECTX '
CHANGEX  DC    CL8'CHANGEX '
SELECTDD DC    CL8'SELECTDD'
SELECTDS DC    CL8'SELECTDS'
TBLREST  DC    CL8'TBLREST '
NULLIFYC DC    CL8'NULLIFYC'
RDMSC    DC    CL8'RDMSC   '
RDMSCTBL DC    CL8'RDMSCTBL'
RDCARTLB DC    CL8'RDCARTLB'
AUDITCEL DC    CL8'AUDITCEL'
RDSTGAD  DC    CL8'RDSTGAD '
MODIFYC  DC    CL8'MODIFYC '
MODID    DC    CL4'MG01'
FIXAREA  DS    CL200
         ORG   FIXAREA
@NM00117 DC    200X'00'
         ORG   FIXAREA+200
SSMODSS0 DC    CL3'SS0'
SSMODCM0 DC    CL3'CM0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTRYNUM EQU   @02
MODCC    EQU   @03
GROUPPTR EQU   @06
BASEVPTR EQU   @04
DMPINDEX EQU   @02
TESTRC   EQU   @05
RTNREG   EQU   @15
DEFVR1   EQU   @01
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
IDCSAEP0 EQU   0
IDCSASS0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
CIRAGL   EQU   0
CIRTYPE  EQU   CIRAGL
ALLAGL   EQU   0
ALLSTS   EQU   ALLAGL+24
ALLDSP   EQU   ALLAGL+25
ALLORG   EQU   ALLAGL+26
ALLOPT   EQU   ALLAGL+28
RACFAGL  EQU   0
RACFFLG1 EQU   RACFAGL
RACFFLG2 EQU   RACFAGL+1
RACFFLG3 EQU   RACFAGL+2
RACFFLG4 EQU   RACFAGL+3
UNITABL  EQU   0
UNITADR  EQU   UNITABL+4
@NM00017 EQU   UNITADR
UNITSTAT EQU   UNITABL+6
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+16
IOCRFM   EQU   IOCSTR+17
IOCMAC   EQU   IOCSTR+18
IOCMAC2  EQU   IOCSTR+19
IOCCHP   EQU   IOCSTR+20
IOCMSG   EQU   IOCSTR+21
IOCRBA   EQU   IOCSTR+40
IOCTTR   EQU   IOCRBA
IOCMEM   EQU   IOCSTR+44
IOCNWM   EQU   IOCSTR+48
IOCREL   EQU   IOCSTR+60
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
OPNDEV   EQU   OPNAGL+24
OPNDSO   EQU   OPNAGL+41
OPNOPT2  EQU   OPNAGL+42
IOINFOPT EQU   0
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
AMSTP011 EQU   0
DARGLIST EQU   0
DARGDBP  EQU   DARGLIST
DARGRETP EQU   DARGLIST+4
DARGSTID EQU   DARGLIST+8
DARGSMOD EQU   DARGSTID
DARGSENT EQU   DARGSTID+3
DARGILP  EQU   DARGLIST+12
DARGRETL EQU   DARGLIST+16
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ERCNVTAB EQU   0
ERTYPE   EQU   ERCNVTAB
EROPER   EQU   ERCNVTAB+1
EROSOPER EQU   ERCNVTAB+2
ERCATRC  EQU   ERCNVTAB+16
ERCPLPT  EQU   ERCNVTAB+20
IDCDB010 EQU   0
DMPITM   EQU   0
DMPITMNM EQU   DMPITM
DMPITMPT EQU   DMPITM+8
DMPITMLN EQU   DMPITM+12
DMPITMTP EQU   DMPITM+14
DMPARY   EQU   0
DMPTRM   EQU   0
CCMSG    EQU   0
CMMSG    EQU   0
CMVOLFLG EQU   CMMSG+6
CTMSG    EQU   0
CTARRAY  EQU   CTMSG+4
MDAGL    EQU   0
MDFLAGS  EQU   MDAGL+30
MDVTOC   EQU   MDAGL+32
PUAGL    EQU   0
CKAGL    EQU   0
CKFLAGS  EQU   CKAGL+28
EXCLAGL  EQU   0
EXCLFLAG EQU   EXCLAGL+22
EXOARG   EQU   0
EXOPT    EQU   EXOARG+32
EXFLG    EQU   EXOARG+33
EXGARG   EQU   0
EXWRARG  EQU   0
EXRWCHR  EQU   EXWRARG+26
EXSPACE  EQU   EXWRARG+36
EXPARG   EQU   0
EXPDATA  EQU   EXPARG+12
EXPDATAB EQU   0
EXPARRAY EQU   EXPDATAB+4
VS2AGL   EQU   0
VSLABOPT EQU   VS2AGL+28
VS2MSG   EQU   VS2AGL+35
VS2RESOP EQU   VS2AGL+36
VS1AGL   EQU   0
VSSECOPT EQU   VS1AGL+68
VSVTOPT  EQU   VS1AGL+69
VSCATOPT EQU   VS1AGL+70
VSRETURN EQU   VS1AGL+71
VSMSG    EQU   VS1AGL+72
VSRESOPT EQU   VS1AGL+73
RCTAGL   EQU   0
RCTOPT   EQU   RCTAGL+8
STAEPARM EQU   0
STARCVY  EQU   STAEPARM+52
STARETRY EQU   STAEPARM+53
VOLLABEL EQU   0
SV82LIST EQU   0
@NM00074 EQU   SV82LIST+4
SV82DCBP EQU   @NM00074
@NM00075 EQU   SV82LIST+12
SV82WRKP EQU   @NM00075
SRTAGL   EQU   0
LCTINFO  EQU   0
LCTFLAGS EQU   LCTINFO+32
UCTAGL   EQU   0
UCTFLAGS EQU   UCTAGL+68
SELAGL   EQU   0
SELFLAGS EQU   SELAGL+22
DATESAGL EQU   0
DATESOPT EQU   DATESAGL+20
VS3AGL   EQU   0
VS3FLAGS EQU   VS3AGL+58
VSDVTOC  EQU   0
VSDSTAT  EQU   0
VSDSFLG1 EQU   VSDSTAT+16
VSDFLG2  EQU   VSDSTAT+17
VSDSCR   EQU   0
VSDSCRFL EQU   VSDSCR+4
VSDUSAGE EQU   0
VSDDORG  EQU   VSDUSAGE+9
VSDALLOC EQU   VSDUSAGE+10
VSDUSEF  EQU   VSDUSAGE+11
VSDDSORG EQU   VSDUSAGE+16
VSDBLOCK EQU   0
VSDSPACE EQU   VSDBLOCK+12
VSDARRAY EQU   VSDBLOCK+16
VSDVARY  EQU   VSDARRAY+48
GRP      EQU   0
GRPVAL   EQU   GRP+1
PRI      EQU   0
PRIVAL   EQU   PRI
SEC      EQU   0
SECVAL   EQU   SEC
THOLD    EQU   0
THOLDVAL EQU   THOLD
DESCR    EQU   0
DESCRVAL EQU   DESCR+1
OWNER    EQU   0
OWNERVAL EQU   OWNER+1
ADD      EQU   0
ADDVAL   EQU   ADD+1
RETPD    EQU   0
RETPDVAL EQU   RETPD
NULLF    EQU   0
NTHOL    EQU   0
NDESC    EQU   0
NOWN     EQU   0
NADDR    EQU   0
NRTPD    EQU   0
RLSE     EQU   0
NRLSE    EQU   0
BIND     EQU   0
NBIND    EQU   0
EXC      EQU   0
SHRD     EQU   0
DERAS    EQU   0
NDERA    EQU   0
RONLY    EQU   0
RW       EQU   0
CONUS    EQU   0
CONUSVAL EQU   CONUS
RSVDS    EQU   0
RSVDSVAL EQU   RSVDS
MGP      EQU   0
MGPLNGTH EQU   MGP
MGPCODE  EQU   MGP+4
MGPGROUP EQU   MGP+8
MGPOWNER EQU   MGP+16
MGPRI    EQU   MGP+26
MGPSEC   EQU   MGP+28
MGPRETPD EQU   MGP+30
MGPTHOLD EQU   MGP+32
MGPCONUS EQU   MGP+33
MGPRESSP EQU   MGP+34
MGPDESCR EQU   MGP+36
MGPADDR  EQU   MGP+66
MGPFLAGA EQU   MGP+96
MGPRLSE  EQU   MGPFLAGA
MGPNRLSE EQU   MGPFLAGA
MGPBIND  EQU   MGPFLAGA
MGPNBIND EQU   MGPFLAGA
MGPEXCL  EQU   MGPFLAGA
MGPSHARE EQU   MGPFLAGA
MGPRONLY EQU   MGPFLAGA
MGPRW    EQU   MGPFLAGA
MGPDERAS EQU   MGPFLAGA+1
MGPNDERA EQU   MGPFLAGA+1
MGPFLGRO EQU   MGPFLAGA+1
MGPFLOWN EQU   MGPFLAGA+1
MGPFLPRI EQU   MGPFLAGA+1
MGPFLSEC EQU   MGPFLAGA+1
MGPFLTHO EQU   MGPFLAGA+1
MGPFLRET EQU   MGPFLAGA+1
MGPFLDES EQU   MGPFLAGA+2
MGPFLADD EQU   MGPFLAGA+2
MGPNTHLD EQU   MGPFLAGA+2
MGPNOWNR EQU   MGPFLAGA+2
MGPNRETP EQU   MGPFLAGA+2
MGPNDESC EQU   MGPFLAGA+2
MGPNADDR EQU   MGPFLAGA+2
MGPFLCON EQU   MGPFLAGA+2
MGPFLRES EQU   MGPFLAGA+3
RVVI     EQU   0
RVVLNGTH EQU   RVVI
RVVOPCOD EQU   RVVI+4
RVVCODE  EQU   RVVOPCOD
RVVOLUME EQU   RVVI+8
RVVGROUP EQU   RVVI+14
RVVBUFLN EQU   RVVI+30
RVVRTBUF EQU   RVVI+32
RVVFLAGA EQU   RVVI+58
RVVRMODE EQU   RVVFLAGA
RVVRDR   EQU   RVVRMODE
RVVRDCH  EQU   RVVRMODE
RVVCHAIN EQU   RVVFLAGA+1
RVVGPVOL EQU   RVVCHAIN
RVVRDRCD EQU   RVVFLAGA+2
RVVBVRCD EQU   RVVRDRCD
RVVGRPRC EQU   RVVRDRCD
RVVRTEST EQU   RVVFLAGA+3
RVVGSVOL EQU   RVVRTEST
RVVACTV  EQU   RVVRTEST
RVVCPYTP EQU   RVVFLAGA+4
RVVSPEC  EQU   RVVFLAGA+5
RVVSGRP  EQU   RVVSPEC
RVVSVOL  EQU   RVVSPEC
BASEV    EQU   0
BASNAME  EQU   BASEV
BASSERNO EQU   BASNAME+5
BASID    EQU   BASNAME+11
BASFLAGA EQU   BASEV+14
BASTYPE  EQU   BASFLAGA
BASLAST  EQU   BASFLAGA+3
BASRCVYF EQU   BASEV+20
BASSATIA EQU   BASRCVYF
BASIVCRE EQU   BASSATIA
BASIVCPY EQU   BASSATIA
BASVSMIS EQU   BASSATIA
BASMISCF EQU   BASRCVYF+2
BASLIB1  EQU   BASEV+36
BASLID1  EQU   BASLIB1
BASLIB2  EQU   BASEV+49
BASLID2  EQU   BASLIB2
BASNEXTV EQU   BASEV+56
BASKLCPY EQU   BASEV+76
BASCOPID EQU   BASKLCPY+11
GROUP    EQU   0
GRONAME  EQU   GROUP
GROID    EQU   GRONAME+11
GROFLAGA EQU   GROUP+13
GROTYPE  EQU   GROFLAGA
GROBIND  EQU   GROFLAGA+2
GROEXCL  EQU   GROFLAGA+2
GRODAERA EQU   GROFLAGA+2
GRORONLY EQU   GROFLAGA+2
GROFSN   EQU   GROUP+17
GRONGEN  EQU   GROUP+30
GROERRTS EQU   GROUP+56
DEFLIST  EQU   0
DEFVFLG  EQU   DEFLIST+6
DEFVREP  EQU   DEFVFLG
DEFVLIB  EQU   DEFLIST+7
DEFVOLD  EQU   DEFLIST+8
DEFVVFLG EQU   DEFLIST+14
DEFVSEC  EQU   DEFVVFLG
DEFVEXCL EQU   DEFVVFLG
DEFVBIND EQU   DEFVVFLG
DEFVWINH EQU   DEFVVFLG
DEFVDATA EQU   DEFLIST+56
AMSTP041 EQU   0
AMSTP042 EQU   0
AMSTP043 EQU   0
AMSTP044 EQU   0
IDCIOCL0 EQU   0
IDCIOCO0 EQU   0
IDCIOGT0 EQU   0
IDCIOIT0 EQU   0
IDCIOOP0 EQU   0
IDCIOPO0 EQU   0
IDCIOPT0 EQU   0
IDCIOSI0 EQU   0
IDCIOST0 EQU   0
IDCIOTM0 EQU   0
IDCIOVY0 EQU   0
IDCIO050 EQU   0
IDCSAAL0 EQU   0
IDCSACA0 EQU   0
IDCSACL0 EQU   0
IDCSACR0 EQU   0
IDCSADE0 EQU   0
IDCSADL0 EQU   0
IDCSADQ0 EQU   0
IDCSAFP0 EQU   0
IDCSAFS0 EQU   0
IDCSAGP0 EQU   0
IDCSAGS0 EQU   0
IDCSAID0 EQU   0
IDCSALC0 EQU   0
IDCSALD0 EQU   0
IDCSALK0 EQU   0
IDCSANQ0 EQU   0
IDCSAPR0 EQU   0
IDCSAPT0 EQU   0
IDCSAQL0 EQU   0
IDCSARC0 EQU   0
IDCSARK0 EQU   0
IDCSARV0 EQU   0
IDCSASC0 EQU   0
IDCSASI0 EQU   0
IDCSASN0 EQU   0
IDCSAST0 EQU   0
IDCSATI0 EQU   0
IDCSAUC0 EQU   0
IDCSAWO0 EQU   0
IDCSA060 EQU   0
IDCST010 EQU   0
IDCTPER0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDBG   EQU   GDTTBL+40
GDTSTC   EQU   GDTTBL+44
GDTPRT   EQU   GDTTBL+48
GDTESS   EQU   GDTTBL+52
GDTESA   EQU   GDTTBL+56
GDTRST   EQU   GDTTBL+60
GDTRES   EQU   GDTTBL+64
GDTCAL   EQU   GDTTBL+68
GDTGSP   EQU   GDTTBL+72
GDTFSP   EQU   GDTTBL+76
GDTGPL   EQU   GDTTBL+80
GDTFPL   EQU   GDTTBL+84
GDTLOD   EQU   GDTTBL+88
GDTDEL   EQU   GDTTBL+92
GDTPRL   EQU   GDTTBL+96
GDTEPL   EQU   GDTTBL+100
GDTTIM   EQU   GDTTBL+104
GDTIIO   EQU   GDTTBL+108
GDTTIO   EQU   GDTTBL+112
GDTOPN   EQU   GDTTBL+124
GDTCLS   EQU   GDTTBL+128
GDTGET   EQU   GDTTBL+132
GDTPUT   EQU   GDTTBL+136
GDTPOS   EQU   GDTTBL+140
GDTCPY   EQU   GDTTBL+144
GDTCAT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+164
GDTVFY   EQU   GDTTBL+172
GDTUID   EQU   GDTTBL+192
GDTPMT   EQU   GDTTBL+196
GDTCIR   EQU   GDTTBL+200
GDTLNK   EQU   GDTTBL+204
GDTALC   EQU   GDTTBL+208
GDTDLC   EQU   GDTTBL+212
GDTQAL   EQU   GDTTBL+216
GDTSTW   EQU   GDTTBL+220
GDTSSC   EQU   GDTTBL+224
GDTENQ   EQU   GDTTBL+228
GDTRSV   EQU   GDTTBL+232
GDTDEQ   EQU   GDTTBL+236
GDTSFO   EQU   GDTTBL+240
GDTWTO   EQU   GDTTBL+244
GDTSCR   EQU   GDTTBL+248
GDTUNT   EQU   GDTTBL+252
GDTRCT   EQU   GDTTBL+256
GDTIFO   EQU   GDTTBL+260
GDTEXP   EQU   GDTTBL+264
GDTSTA   EQU   GDTTBL+268
GDTERR   EQU   GDTTBL+272
GDTUNC   EQU   GDTTBL+276
GDTLOC   EQU   GDTTBL+280
GDTRCK   EQU   GDTTBL+284
FDTTBL   EQU   0
FDTPTR   EQU   FDTTBL+8
LASTCOND EQU   0
SSRCODE  EQU   0
SSRHALF  EQU   SSRCODE+2
SSECBCD  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00118 EQU   SSRCODE
FDTVERB  EQU   FDTTBL
GDTECT   EQU   GDTTBL+188
GDTPSB   EQU   GDTTBL+184
GDTUPT   EQU   GDTTBL+180
GDTCMB   EQU   GDTTBL+176
GDTSPR   EQU   GDTTBL+168
@NM00001 EQU   GDTTBL+160
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+120
GDTRIP   EQU   GDTTBL+116
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
DEFVVEXT EQU   DEFLIST+128
DEFTLAB  EQU   DEFVDATA+71
DEFR60   EQU   DEFVDATA+43
DEFOWNID EQU   DEFVDATA+29
DEFR55   EQU   DEFVDATA+3
DEFACSEC EQU   DEFVDATA+2
DEFR50   EQU   DEFVDATA
DEFVECB  EQU   DEFLIST+52
DEFVASID EQU   DEFLIST+50
@NM00116 EQU   DEFLIST+48
DEFVCSN2 EQU   DEFLIST+36
DEFVCSN1 EQU   DEFLIST+24
@NM00115 EQU   DEFLIST+22
DEFVNVOL EQU   DEFLIST+16
@NM00114 EQU   DEFLIST+15
@NM00113 EQU   DEFVVFLG
@NM00112 EQU   DEFVVFLG
@NM00111 EQU   DEFVVFLG
DEFVCECT EQU   DEFVVFLG
DEFVLID  EQU   DEFVLIB
@NM00110 EQU   DEFVLIB
DEFVDACT EQU   DEFVFLG
DEFVACT  EQU   DEFVFLG
DEFVRNTR EQU   DEFVFLG
DEFVELTR EQU   DEFVFLG
DEFVRNM  EQU   DEFVFLG
DEFVELM  EQU   DEFVFLG
DEFVCR   EQU   DEFVFLG
@NM00109 EQU   DEFLIST+5
DEFVOPCD EQU   DEFLIST+4
DEFVLEN  EQU   DEFLIST
@NM00108 EQU   GROUP+136
GROADDR  EQU   GROUP+106
GROOWNER EQU   GROUP+96
GRORESSP EQU   GROUP+95
GROCONUS EQU   GROUP+94
GRODESCR EQU   GROUP+64
GROERRTM EQU   GROERRTS+4
GROERRDT EQU   GROERRTS
GRORETPD EQU   GROUP+52
GROFREXT EQU   GROUP+48
GROFRESP EQU   GROUP+44
GROSTRSH EQU   GROUP+40
GROSSPD  EQU   GROUP+38
GROPSPD  EQU   GROUP+36
GRONINAC EQU   GROUP+34
GRONRSTD EQU   GROUP+32
GROPCENT EQU   GROUP+29
GROLSN   EQU   GROUP+23
@NM00107 EQU   GROFLAGA+2
GROMSG1  EQU   GROFLAGA+2
GRORETN  EQU   GROFLAGA+2
GRORLSE  EQU   GROFLAGA+2
GRORES1  EQU   GROTYPE
GROGVR   EQU   GROTYPE
GROZERO  EQU   GROID+1
GROBLANK EQU   GROID
GROVVGRP EQU   GRONAME+3
GROG     EQU   GRONAME
@NM00106 EQU   BASEV+192
BASXPDT2 EQU   BASEV+188
BASGROUP EQU   BASEV+180
BASRECOV EQU   BASEV+174
BASDEST  EQU   BASEV+144
BASOWNER EQU   BASEV+134
BASDESCR EQU   BASEV+104
BASDTREM EQU   BASEV+100
BASEXPDT EQU   BASEV+96
BASDLMTD EQU   BASEV+92
BASRES6  EQU   BASEV+89
BASCOPNO EQU   BASCOPID+1
BASCOPBK EQU   BASCOPID
BASCOPSN EQU   BASKLCPY+5
BASCOPV  EQU   BASKLCPY
BASFREXT EQU   BASEV+72
BASLEXT  EQU   BASEV+70
BASFRESP EQU   BASEV+68
@NM00105 EQU   BASEV+65
BASBKLMT EQU   BASEV+64
BASNBKUP EQU   BASEV+63
BASNCOPY EQU   BASEV+62
BASPREV  EQU   BASEV+50
BAS2BIT2 EQU   BASLID2
BAS2BIT1 EQU   BASLID2
BASRES5  EQU   BASLIB2
BASCSN2  EQU   BASEV+37
BAS1BIT2 EQU   BASLID1
BAS1BIT1 EQU   BASLID1
BASRES4  EQU   BASLIB1
BASCSN1  EQU   BASEV+24
BASRES3  EQU   BASMISCF
BASHOLD  EQU   BASMISCF
BASRES8  EQU   BASSATIA
BASCPUID EQU   BASEV+18
@NM00104 EQU   BASFLAGA+3
BASFIRST EQU   BASFLAGA+3
BASREASS EQU   BASFLAGA+3
BASRONLY EQU   BASFLAGA+3
BASDAERA EQU   BASFLAGA+3
BASEXCL  EQU   BASFLAGA+2
BASBIND  EQU   BASFLAGA+2
BASINAC  EQU   BASFLAGA+2
BASRSTD  EQU   BASFLAGA+2
BASGENUS EQU   BASFLAGA+2
BASGRPV  EQU   BASFLAGA+2
BASNOCPY EQU   BASFLAGA+2
BASDLSF  EQU   BASFLAGA+2
BASRES2  EQU   BASTYPE
BASBASVR EQU   BASTYPE
BASRES1  EQU   BASTYPE
BASRES7  EQU   BASEV+13
BASZERO  EQU   BASID+1
BASBLANK EQU   BASID
BASEVKEY EQU   BASNAME
@NM00103 EQU   RVVI+64
RVVSDUP  EQU   RVVSPEC
RVVSCPY  EQU   RVVSPEC
RVVSCSN  EQU   RVVSPEC
RVVSSEQ  EQU   RVVSPEC
RVVSDTE  EQU   RVVSPEC
RVVSEXP  EQU   RVVSPEC
@NM00102 EQU   RVVCPYTP
RVVCPLHD EQU   RVVCPYTP
RVVLCOPY EQU   RVVCPYTP
RVVOBKUP EQU   RVVCPYTP
RVVLBKUP EQU   RVVCPYTP
RVVBPLHD EQU   RVVRTEST
RVVDVOL  EQU   RVVRTEST
RVVINACT EQU   RVVRTEST
RVVRSTD  EQU   RVVRTEST
RVVTHOLD EQU   RVVRTEST
RVVEXPDT EQU   RVVRTEST
RVVALL   EQU   RVVRDRCD
RVVCPURC EQU   RVVRDRCD
RVVCIRCD EQU   RVVRDRCD
RVVRUNKN EQU   RVVRDRCD
RVVDUPRC EQU   RVVRDRCD
RVVCPYRC EQU   RVVRDRCD
@NM00101 EQU   RVVCHAIN
RVVNGVOL EQU   RVVCHAIN
@NM00100 EQU   RVVRMODE
RVVRDNR  EQU   RVVRMODE
RVVDUPID EQU   RVVI+57
RVVCPYID EQU   RVVI+56
RVVRDCSN EQU   RVVI+44
RVVRDSEQ EQU   RVVI+43
RVVBLNK1 EQU   RVVI+42
RVVCDATE EQU   RVVI+38
RVVEXPIR EQU   RVVI+36
@NM00099 EQU   RVVI+28
RVVAREA  EQU   RVVI+24
RVVARLN  EQU   RVVI+22
@NM00098 EQU   RVVOPCOD+1
@NM00097 EQU   MGP+100
@NM00096 EQU   MGPFLAGA+3
@NM00095 EQU   MGP+35
@NM00094 EQU   MGPCODE+1
MGPOPCD  EQU   MGPCODE
ADDLEN   EQU   ADD
OWNERLEN EQU   OWNER
DESCRLEN EQU   DESCR
GRPLEN   EQU   GRP
VSDDSN   EQU   VSDARRAY+4
VSDVOLCT EQU   VSDARRAY
VSDFMT0  EQU   VSDBLOCK+8
VSDVTOCS EQU   VSDBLOCK+4
VSDELEM  EQU   VSDBLOCK
VSDFREE  EQU   VSDUSAGE+24
VSDALLC  EQU   VSDUSAGE+19
VSDDSOR3 EQU   VSDDSORG+2
@NM00093 EQU   VSDDSORG
VSDSCAL  EQU   VSDUSAGE+12
@NM00092 EQU   VSDUSEF
VSDCALFR EQU   VSDUSEF
@NM00091 EQU   VSDALLOC
VSDABSTR EQU   VSDALLOC
VSDABLK  EQU   VSDALLOC
VSDATRK  EQU   VSDALLOC
VSDACYL  EQU   VSDALLOC
@NM00090 EQU   VSDDORG
VSDOU    EQU   VSDDORG
VSDOIS   EQU   VSDDORG
VSDODA   EQU   VSDDORG
VSDOUN   EQU   VSDDORG
VSDOPS   EQU   VSDDORG
VSDOPO   EQU   VSDDORG
VSDEXTS  EQU   VSDUSAGE+8
VSDSECAL EQU   VSDUSAGE+4
VSDFTRK  EQU   VSDUSAGE+2
VSDTRKS  EQU   VSDUSAGE
@NM00089 EQU   VSDSCR+5
@NM00088 EQU   VSDSCRFL
VSDVSAM  EQU   VSDSCRFL
VSDCATLC EQU   VSDSCRFL
VSDACBPT EQU   VSDSCR
@NM00087 EQU   VSDSTAT+29
VSDPRTC  EQU   VSDSTAT+25
VSDCAT   EQU   VSDSTAT+22
VSDEXP   EQU   VSDSTAT+20
VSDCRE   EQU   VSDSTAT+18
@NM00086 EQU   VSDFLG2
VSDRACF  EQU   VSDFLG2
VSDERROR EQU   VSDFLG2
VSDPROT  EQU   VSDFLG2
VSDPWW   EQU   VSDFLG2
VSDPWR   EQU   VSDFLG2
@NM00085 EQU   VSDSFLG1
VSDCVSAM EQU   VSDSFLG1
VSDCATLG EQU   VSDSFLG1
VSDVSAME EQU   VSDSFLG1
VSDVSAMC EQU   VSDSFLG1
VSDVTOCE EQU   VSDSFLG1
VSDVTOCC EQU   VSDSFLG1
VSDOWNER EQU   VSDSTAT+8
VSDEXPIR EQU   VSDSTAT+4
VSDCREAT EQU   VSDSTAT
VSDFRCCL EQU   VSDVTOC+21
@NM00084 EQU   VSDVTOC+20
VSDFREXT EQU   VSDVTOC+16
@NM00083 EQU   VSDVTOC+15
VSDFRTRK EQU   VSDVTOC+11
@NM00082 EQU   VSDVTOC+10
VSDFRCYL EQU   VSDVTOC+6
@NM00081 EQU   VSDVTOC
@NM00080 EQU   VS3FLAGS
VS3SYSNM EQU   VS3FLAGS
VS3UNCAT EQU   VS3FLAGS
VS3SCR   EQU   VS3FLAGS
VS3USAGE EQU   VS3FLAGS
VS3STAT  EQU   VS3FLAGS
VS3DD    EQU   VS3AGL+50
VS3VOL   EQU   VS3AGL+44
VS3POOL  EQU   VS3AGL+40
VS3DEV   EQU   VS3AGL+36
VS3UCBP  EQU   VS3AGL+32
VS3CREAT EQU   VS3AGL+28
VS3EXPIR EQU   VS3AGL+24
VS3AST   EQU   VS3AGL+22
VS3LEVLN EQU   VS3AGL+20
VS3LEVP  EQU   VS3AGL+16
VS3EXDSP EQU   VS3AGL+12
VS3LISTP EQU   VS3AGL+8
VS3HEAD  EQU   VS3AGL
@NM00079 EQU   DATESOPT
DATDAYOP EQU   DATESOPT
DATDTEOP EQU   DATESOPT
DATSUB   EQU   DATESOPT
DATADD   EQU   DATESOPT
DATRETRN EQU   DATESAGL+16
DATDAYS  EQU   DATESAGL+12
DATDATE  EQU   DATESAGL+8
DATHEAD  EQU   DATESAGL
@NM00078 EQU   SELFLAGS
SELVOL   EQU   SELAGL+16
SELDDNP  EQU   SELAGL+12
SELUCBP  EQU   SELAGL+8
SELHEAD  EQU   SELAGL
@NM00077 EQU   UCTFLAGS
UCTVSCAT EQU   UCTFLAGS
UCTDD    EQU   UCTAGL+60
UCTVOLP  EQU   UCTAGL+56
UCTACBP  EQU   UCTAGL+52
UCTDSN   EQU   UCTAGL+8
UCTHEAD  EQU   UCTAGL
@NM00076 EQU   LCTFLAGS
LCTVSCAT EQU   LCTFLAGS
LCTOWNER EQU   LCTINFO+24
LCTEXPIR EQU   LCTINFO+20
LCTCREAT EQU   LCTINFO+16
LCTACBP  EQU   LCTINFO+12
LCTMULVC EQU   LCTINFO+8
LCTHEAD  EQU   LCTINFO
SRTWORKP EQU   SRTAGL+28
SRTFLDLN EQU   SRTAGL+24
SRTPOSIT EQU   SRTAGL+20
SRTLEN   EQU   SRTAGL+16
SRTNUM   EQU   SRTAGL+12
SRTADDR  EQU   SRTAGL+8
SRTHEAD  EQU   SRTAGL
SV82DEBP EQU   SV82WRKP
SV82TTRP EQU   SV82LIST+8
SV82VOLP EQU   SV82DCBP
SV82UCBP EQU   SV82LIST+1
SV82CODE EQU   SV82LIST
VOLRESV3 EQU   VOLLABEL+55
VOLOWNER EQU   VOLLABEL+45
VOLRESV1 EQU   VOLLABEL+20
VOLVTOC  EQU   VOLLABEL+15
VOLSECTY EQU   VOLLABEL+14
VOLSERNO EQU   VOLLABEL+8
VOLNO    EQU   VOLLABEL+7
VOLLABI  EQU   VOLLABEL+4
VOLKEY   EQU   VOLLABEL
STAVTTR  EQU   STAEPARM+54
@NM00073 EQU   STARETRY
STAVTOC  EQU   STARETRY
STAOFF   EQU   STARETRY
STAIO05  EQU   STARETRY
@NM00072 EQU   STARCVY
STACLEAR EQU   STARCVY
STAVPOST EQU   STARCVY
STAVENQ  EQU   STARCVY
STAVDMNT EQU   STARCVY
STAVMNT  EQU   STARCVY
STATCB   EQU   STAEPARM+48
STARTADD EQU   STAEPARM+44
STAEXSAV EQU   STAEPARM+40
STARTSAV EQU   STAEPARM+36
STARTTR  EQU   STAEPARM+32
@NM00071 EQU   STAEPARM+30
STARVOL  EQU   STAEPARM+24
STARUCB  EQU   STAEPARM+20
@NM00070 EQU   STAEPARM+18
STAVVOL  EQU   STAEPARM+12
STAVUCB  EQU   STAEPARM+8
STAHEAD  EQU   STAEPARM
RCTDSET  EQU   RCTAGL+32
RCTNVOL  EQU   RCTAGL+26
RCTOVOL  EQU   RCTAGL+20
RCTNDEV  EQU   RCTAGL+16
RCTODEV  EQU   RCTAGL+12
@NM00069 EQU   RCTAGL+10
@NM00068 EQU   RCTOPT
RCTVOL   EQU   RCTOPT
RCTDEV   EQU   RCTOPT
RCTHEAD  EQU   RCTAGL
@NM00067 EQU   VSRESOPT
VSREAL   EQU   VSRESOPT
VSRES    EQU   VSRESOPT
@NM00066 EQU   VSMSG
VSTOV    EQU   VSMSG
VSFROMV  EQU   VSMSG
@NM00065 EQU   VSRETURN
VSUCAT   EQU   VSRETURN
VSVSAM   EQU   VSRETURN
@NM00064 EQU   VSCATOPT
VSLIST   EQU   VSCATOPT
VSSERIAL EQU   VSCATOPT
VSDEVICE EQU   VSCATOPT
@NM00063 EQU   VSVTOPT
VSVSFLAG EQU   VSVTOPT
VSALTTRK EQU   VSVTOPT
VSTIME   EQU   VSVTOPT
VSUCMAST EQU   VSSECOPT
VSOPCAT  EQU   VSSECOPT
VSUCTEST EQU   VSSECOPT
VSWRITE  EQU   VSSECOPT
VSREAD   EQU   VSSECOPT
VSNONONV EQU   VSSECOPT
VSMASTER EQU   VSSECOPT
VSNOVSAM EQU   VSSECOPT
VSODEVP  EQU   VS1AGL+64
VSOSERP  EQU   VS1AGL+60
VSDEVP   EQU   VS1AGL+56
VSSERP   EQU   VS1AGL+52
VSPFILEP EQU   VS1AGL+48
VSPSWDP  EQU   VS1AGL+44
VSCATDDP EQU   VS1AGL+40
VSACBP   EQU   VS1AGL+36
VSCATP   EQU   VS1AGL+32
VSNXTATP EQU   VS1AGL+28
VSNUMATP EQU   VS1AGL+24
VSIOP    EQU   VS1AGL+20
VSFILEP  EQU   VS1AGL+16
VSVOLP   EQU   VS1AGL+12
VSUCBP   EQU   VS1AGL+8
VSHEAD   EQU   VS1AGL
VSVTOCPT EQU   VS2AGL+48
@NM00062 EQU   VS2AGL+45
VSDDNAME EQU   VS2AGL+37
@NM00061 EQU   VS2RESOP
VS2REAL  EQU   VS2RESOP
VS2RES   EQU   VS2RESOP
@NM00060 EQU   VS2MSG
VS2TOV   EQU   VS2MSG
VSVOLUME EQU   VS2AGL+29
@NM00059 EQU   VSLABOPT
VSNOVTOC EQU   VSLABOPT
VSVOLSER EQU   VSLABOPT
VSOWNER  EQU   VSLABOPT
VSIOBKPT EQU   VS2AGL+24
VSVOLPTR EQU   VS2AGL+20
VSOWNPTR EQU   VS2AGL+16
VSVTOCSZ EQU   VS2AGL+12
VSUCBPTR EQU   VS2AGL+8
VS2HEAD  EQU   VS2AGL
EXPDATAL EQU   EXPARRAY+6
@NM00058 EQU   EXPARRAY+5
EXPKEYLN EQU   EXPARRAY+4
EXPDATAP EQU   EXPARRAY
EXPRECNO EQU   EXPDATAB
EXPCCHHR EQU   EXPARG+16
EXPCTLBK EQU   EXPARG+8
EXPHEAD  EQU   EXPARG
EXRWFUN  EQU   EXWRARG+46
@NM00057 EQU   EXSPACE+8
@NM00056 EQU   EXSPACE+6
@NM00055 EQU   EXSPACE+4
@NM00054 EQU   EXSPACE+1
@NM00053 EQU   EXSPACE
EXRWKDLN EQU   EXWRARG+32
@NM00052 EQU   EXWRARG+31
EXRECNUM EQU   EXRWCHR+4
EXHH     EQU   EXRWCHR+2
EXCC     EQU   EXRWCHR
EXCCWCNT EQU   EXWRARG+24
EXLOCPTR EQU   EXWRARG+20
EXRWDARE EQU   EXWRARG+16
EXRWIOAR EQU   EXWRARG+12
EXRWCTBL EQU   EXWRARG+8
EXRWRES  EQU   EXWRARG
EXGDATAL EQU   EXGARG+30
@NM00051 EQU   EXGARG+29
EXGKEYLN EQU   EXGARG+28
EXGDATAP EQU   EXGARG+24
EXGRECNO EQU   EXGARG+20
EXGCCHH2 EQU   EXGARG+16
EXGCCHH1 EQU   EXGARG+12
EXGCTLBK EQU   EXGARG+8
EXGHEAD  EQU   EXGARG
EXOVTH   EQU   EXFLG
EXORVT   EQU   EXFLG
EXORDS   EQU   EXFLG
EXOSPK   EQU   EXFLG
EXORVS   EQU   EXFLG
@NM00050 EQU   EXFLG
EXOREAD  EQU   EXFLG
@NM00049 EQU   EXOPT
EXOREP   EQU   EXOPT
EXOVTOC  EQU   EXOPT
EXONEW   EQU   EXOPT
EXOPASS  EQU   EXOPT
EXOLAB   EQU   EXOPT
EXOTAB   EQU   EXOPT
EXOCTLBK EQU   EXOARG+28
EXOEXT   EQU   EXOARG+24
EXOUCB   EQU   EXOARG+20
EXOVSN   EQU   EXOARG+16
EXODSN   EQU   EXOARG+12
EXODDN   EQU   EXOARG+8
EXOHEAD  EQU   EXOARG
@NM00048 EQU   EXCLFLAG
EXCLMNT  EQU   EXCLFLAG
EXCLVOL  EQU   EXCLAGL+16
EXCLDDP  EQU   EXCLAGL+12
EXCLUCBP EQU   EXCLAGL+8
EXCLHEAD EQU   EXCLAGL
@NM00047 EQU   CKFLAGS
CKDMTABL EQU   CKFLAGS
CKRETTYP EQU   CKFLAGS
CKTESTVT EQU   CKFLAGS
CKLABELP EQU   CKAGL+24
CKDATYPE EQU   CKAGL+20
CKDDNAME EQU   CKAGL+12
CKUCBPTR EQU   CKAGL+8
CKHEAD   EQU   CKAGL
PULABELP EQU   PUAGL+16
PUTTRPTR EQU   PUAGL+12
PUUCBPTR EQU   PUAGL+8
PUHEAD   EQU   PUAGL
MDR      EQU   MDVTOC+4
MDHH     EQU   MDVTOC+2
MDCC     EQU   MDVTOC
@NM00046 EQU   MDAGL+31
MDVTOCTR EQU   MDFLAGS
MDFORCE  EQU   MDFLAGS
MDDEQ    EQU   MDFLAGS
MDENQ    EQU   MDFLAGS
MDWAIT   EQU   MDFLAGS
MDPOST   EQU   MDFLAGS
MDCLEAR  EQU   MDFLAGS
MDNEWVOL EQU   MDFLAGS
MDLABEL  EQU   MDAGL+24
MDPUAGL  EQU   MDAGL+20
MDDDNAME EQU   MDAGL+12
MDUCBPTR EQU   MDAGL+8
MDHEAD   EQU   MDAGL
CTTBLRR  EQU   CTARRAY+3
CTTBLHH  EQU   CTARRAY+2
CTTBLCC  EQU   CTARRAY+1
CTTBLID  EQU   CTARRAY
CTREALH  EQU   CTMSG+3
CTREALCC EQU   CTMSG+1
@NM00045 EQU   CTMSG
CMCSN2   EQU   CMMSG+28
CMCSN1   EQU   CMMSG+16
CMNUMCRT EQU   CMMSG+15
@NM00044 EQU   CMMSG+14
CMNEWVOL EQU   CMMSG+8
@NM00043 EQU   CMMSG+7
@NM00042 EQU   CMVOLFLG
CMRONLY  EQU   CMVOLFLG
CMBIND   EQU   CMVOLFLG
CMSCRCRT EQU   CMVOLFLG
CMEXCL   EQU   CMVOLFLG
CMDERAS  EQU   CMVOLFLG
CMSCRVOL EQU   CMVOLFLG
CMCECART EQU   CMVOLFLG
CMOLDVOL EQU   CMMSG
CCOLDCSN EQU   CCMSG+24
CCNEWCSN EQU   CCMSG+12
@NM00041 EQU   CCMSG+10
CCVOL    EQU   CCMSG+4
@NM00040 EQU   CCMSG+2
CCEJCODE EQU   CCMSG+1
CCPSTCDE EQU   CCMSG
@NM00039 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00038 EQU   DMPITM+15
@NM00037 EQU   ERCNVTAB+24
ERDARBPT EQU   ERCPLPT
ERDYNRC  EQU   ERCATRC
ERDSNM   EQU   ERCNVTAB+12
@NM00036 EQU   ERCNVTAB+4
@NM00035 EQU   ERCNVTAB+3
@NM00034 EQU   EROSOPER
EROSUCDX EQU   EROSOPER
EROSCATL EQU   EROSOPER
@NM00033 EQU   EROPER
ERCATAL  EQU   EROPER
ERCATDL  EQU   EROPER
ERCATDE  EQU   EROPER
ERCATLC  EQU   EROPER
@NM00032 EQU   ERTYPE
ERDYNAL  EQU   ERTYPE
EROSCAT  EQU   ERTYPE
ERCATLG  EQU   ERTYPE
@NM00031 EQU   FMTCNVF+1
FMTAR    EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00030 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00029 EQU   FMTFLGS+1
FMTSMSG  EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00028 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGCNT  EQU   DARGLIST+14
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
@NM00027 EQU   IOINFOPT
IOINFLUB EQU   IOINFOPT
IOINFTMS EQU   IOINFOPT
IOINFSUP EQU   IOINFOPT
IOINFDSN EQU   IOINFOPT
IOINFVOL EQU   IOINFOPT
IOINFDVT EQU   IOINFOPT
OPNVOL   EQU   OPNAGL+44
OPNSTRNO EQU   OPNAGL+43
@NM00026 EQU   OPNOPT2
OPNOPTJM EQU   OPNOPT2
@NM00025 EQU   OPNOPT2
OPNOPTAS EQU   OPNOPT2
@NM00024 EQU   OPNDSO
OPNDSOPO EQU   OPNDSO
OPNDSOIS EQU   OPNDSO
OPNDSOPS EQU   OPNDSO
OPNDSOAM EQU   OPNDSO
OPNKYL   EQU   OPNAGL+40
OPNBLK   EQU   OPNAGL+36
OPNREC   EQU   OPNAGL+32
OPNDEVIX EQU   OPNDEV+4
OPNDEVDT EQU   OPNDEV
OPNCBP   EQU   OPNAGL+20
OPNDSN   EQU   OPNAGL+16
OPNPWA   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
OPNMODRP EQU   OPNMOD
OPNMODUB EQU   OPNMOD
OPNMODRS EQU   OPNMOD
OPNMODAX EQU   OPNMOD
OPNMODRR EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
OPNMODPD EQU   OPNMOD
OPNTYPSY EQU   OPNTYP
OPNTYPRV EQU   OPNTYP
OPNTYPEX EQU   OPNTYP
OPNTYPRA EQU   OPNTYP
OPNTYPXM EQU   OPNTYP
OPNTYPCI EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00023 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
OPNOPTSK EQU   OPNOPT
OPNOPTDR EQU   OPNOPT
OPNOPTCR EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+64
IOCTSML  EQU   IOCREL+2
IOCTPML  EQU   IOCREL
IOCWORK  EQU   IOCSTR+56
IOCRRN   EQU   IOCSTR+52
IOCPNM   EQU   IOCNWM+2
IOCPTL   EQU   IOCNWM
IOCKYA   EQU   IOCMEM
IOCVRC   EQU   IOCTTR
IOCCBP   EQU   IOCSTR+36
IOCDSN   EQU   IOCSTR+32
IOCHURBA EQU   IOCSTR+28
IOCVOLSR EQU   IOCSTR+22
@NM00022 EQU   IOCMSG
IOCMSGSM EQU   IOCMSG
IOCMSGAE EQU   IOCMSG
IOCMSGCE EQU   IOCMSG
IOCMSGOE EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCCHPKG EQU   IOCMSG
IOCCHPKE EQU   IOCMSG
IOCCHPNU EQU   IOCCHP
IOCCHPUP EQU   IOCCHP
IOCCHPBK EQU   IOCCHP
IOCCHPCR EQU   IOCCHP
IOCCHPKS EQU   IOCCHP
IOCCHPSK EQU   IOCCHP
IOCCHPDR EQU   IOCCHP
IOCCHPSQ EQU   IOCCHP
IOCMACNT EQU   IOCMAC2
IOCMACER EQU   IOCMAC2
IOCMACPA EQU   IOCMAC2
IOCMACEN EQU   IOCMAC2
IOCMACCP EQU   IOCMAC2
IOCMACRR EQU   IOCMAC2
IOCMACAS EQU   IOCMAC2
IOCMACSK EQU   IOCMAC2
@NM00021 EQU   IOCMAC
IOCMACCC EQU   IOCMAC
IOCMACDR EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACCR EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00020 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00019 EQU   IOCDSO
IOCDSOPO EQU   IOCDSO
IOCDSOIS EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCDSOAM EQU   IOCDSO
IOCRKP   EQU   IOCSTR+13
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
UNITVTOC EQU   UNITABL+7
@NM00018 EQU   UNITSTAT
UNITUSHR EQU   UNITSTAT
UNITXSHR EQU   UNITSTAT
UNITISHR EQU   UNITSTAT
UNITUA   EQU   @NM00017+1
UNITCHA  EQU   @NM00017
UNITUCB  EQU   UNITABL
RACFVOLS EQU   RACFAGL+16
RACFCLN  EQU   RACFAGL+12
RACFPROF EQU   RACFAGL+8
RACFENT  EQU   RACFAGL+4
@NM00016 EQU   RACFFLG4
@NM00015 EQU   RACFFLG3
RACFPRF  EQU   RACFFLG3
@NM00014 EQU   RACFFLG3
@NM00013 EQU   RACFFLG2
RACFTRD  EQU   RACFFLG2
RACFTUPD EQU   RACFFLG2
RACFTCTL EQU   RACFFLG2
@NM00012 EQU   RACFFLG2
RACFTALT EQU   RACFFLG2
RACFCSA  EQU   RACFFLG1
RACFLOGN EQU   RACFFLG1
RACFLOGF EQU   RACFFLG1
@NM00011 EQU   RACFFLG1
RACFDSTV EQU   RACFFLG1
@NM00010 EQU   RACFFLG1
ALLUNCNT EQU   ALLAGL+30
ALLVLCNT EQU   ALLAGL+29
@NM00009 EQU   ALLOPT
ALLOPTUN EQU   ALLOPT
ALLOPTPV EQU   ALLOPT
ALLOPTDS EQU   ALLOPT
ALLOPTVL EQU   ALLOPT
@NM00008 EQU   ALLORG+1
ALLORGVS EQU   ALLORG+1
@NM00007 EQU   ALLORG+1
ALLORGGS EQU   ALLORG+1
ALLORGUN EQU   ALLORG
ALLORGPO EQU   ALLORG
ALLORGMQ EQU   ALLORG
ALLORGCQ EQU   ALLORG
ALLORGCX EQU   ALLORG
ALLORGDA EQU   ALLORG
ALLORGPS EQU   ALLORG
ALLORGIS EQU   ALLORG
ALLDSPUN EQU   ALLDSP
ALLDSPCG EQU   ALLDSP
ALLDSPDE EQU   ALLDSP
ALLDSPKP EQU   ALLDSP
@NM00006 EQU   ALLDSP
ALLSTSOD EQU   ALLSTS
ALLSTSMD EQU   ALLSTS
ALLSTSNW EQU   ALLSTS
ALLSTSSR EQU   ALLSTS
@NM00005 EQU   ALLSTS
ALLPWD   EQU   ALLAGL+20
ALLVLP   EQU   ALLAGL+16
ALLULP   EQU   ALLAGL+12
ALLDDN   EQU   ALLAGL+4
ALLDSN   EQU   ALLAGL
CIRPID   EQU   CIRAGL+28
CIRPWD   EQU   CIRAGL+24
CIRCAT   EQU   CIRAGL+20
CIRWKP   EQU   CIRAGL+16
CIRTLR   EQU   CIRAGL+12
CIRHDR   EQU   CIRAGL+8
CIRTLN   EQU   CIRAGL+6
CIRHLN   EQU   CIRAGL+4
@NM00004 EQU   CIRAGL+1
@NM00003 EQU   CIRTYPE
CIRTYPAQ EQU   CIRTYPE
CIRTYP1Q EQU   CIRTYPE
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00002 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00427 EQU   @EL00002
@RC00423 EQU   @EL00002
@RT00521 EQU   @RC00519
@RT00546 EQU   @EL00003
@RC00571 EQU   @RC00556
@RF00639 EQU   @EL00004
@RF00671 EQU   @RC00656
@PB00005 EQU   @EL00001
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IDCMG01,(C'PLS1945',0603,76320)
