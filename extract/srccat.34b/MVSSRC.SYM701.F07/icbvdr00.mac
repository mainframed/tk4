         TITLE 'ICBVDR00 MSVC ENABLE/DISABLE UTILITY (JULY 19, 1974) V1*
               1.0      '
ICBVDR00 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICBVDR00  76.320'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                                            @Y30LB24*/
*                                                                  0079
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSABILITY AND INITIALIZE VARIABLES        @Y30LB24*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0079
*   PARMPTR=LISTPTR;                /* SET EXEC PARM PTR     @Y30LB24*/
         L     PARMPTR,LISTPTR(,REG1)                              0079
*   INITPTR=ADDR(REQLIST1);         /* BASE REQUEST LIST     @Y30LB24*/
         LA    INITPTR,REQLIST1                                    0080
*   RPLVPTR=ADDR(REQLIST2);         /* BASE REQUEST LIST     @Y30LB24*/
         LA    RPLVPTR,REQLIST2                                    0081
*   REPLY='';                       /* BLANK WORK AREA       @Y30LB24*/
         MVI   REPLY,C' '                                          0082
         MVC   REPLY+1(99),REPLY                                   0082
*   VVIPTR=ICBVVICB;                /* INITIALIZE MSVC CB PTR      0083
*                                                            @Y30LB24*/
         L     @14,CVTPTR                                          0083
         L     @14,CVTEXT2(,@14)                                   0083
         L     @14,CVTICB(,@14)                                    0083
         L     @06,ICBVVICB(,@14)                                  0083
         LR    VVIPTR,@06                                          0083
*   FAILCODE=RCON0;                 /* INITIALIZE FAIL CODE  @Y30LB24*/
         SLR   @05,@05                                             0084
         LR    FAILCODE,@05                                        0084
*   RSAVE=ZERO;                     /* INIT REASON CODE      @Y30LB24*/
         ST    @05,RSAVE                                           0085
*   RETSAVE=ZERO;                   /* INIT RETURN CODE      @Y30LB24*/
         LR    RETSAVE,@05                                         0086
*   CPUSTAT=ZERO;                   /* INITIALIZE SWITCH     @Y30LB24*/
         LR    CPUSTAT,@05                                         0087
*                                                                  0088
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF MSVC IS GENERATED IN SYSTEM           @Y30LB24*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0088
*   IF CVTICB=ZERO×                 /* MSSC CB PTR ZERO?     @Y30LB24*/
*       ICBVVICB=ZERO THEN          /* MSVC CB PTR ZERO?     @Y30LB24*/
         CR    @14,@05                                             0088
         BE    @RT00088                                            0088
         CR    @06,@05                                             0088
         BNE   @RF00088                                            0088
@RT00088 DS    0H                                                  0089
*     DO;                           /* YES                   @Y30LB24*/
*       FAILCODE=ONE;               /* SET FAIL CODE         @Y30LB24*/
         LA    FAILCODE,1                                          0090
*       CALL VDRNOTOP;              /* CALL MESSAGE ROUTINE  @Y30LB24*/
         BAL   @14,VDRNOTOP                                        0091
*       RSAVE=RCON3;                /* SET REASON CODE       @Y30LB24*/
         MVC   RSAVE(4),@CF00074                                   0092
*       RETSAVE=FOUR;               /* SET RETURN CODE       @Y30LB24*/
         LA    RETSAVE,4                                           0093
*       RETURN CODE(RETSAVE);       /* RETURN TO INITIATOR   @Y30LB24*/
         LR    @15,RETSAVE                                         0094
         L     @13,4(,@13)                                         0094
         L     @14,12(,@13)                                        0094
         LM    @00,@12,20(@13)                                     0094
         BR    @14                                                 0094
*     END;                          /*                       @Y30LB24*/
*   IF PLENGTH^=ZERO THEN           /* EXEC PARM FIELD?      @Y30LB24*/
@RF00088 LH    @14,PLENGTH(,PARMPTR)                               0096
         LTR   @14,@14                                             0096
         BZ    @RF00096                                            0096
*     DO;                           /* YES                   @Y30LB24*/
*       REPLY=PARMS(1:PLENGTH);     /* MOVE EXEC PARMS       @Y30LB24*/
         MVI   REPLY+1,C' '                                        0098
         MVC   REPLY+2(98),REPLY+1                                 0098
         BCTR  @14,0                                               0098
         EX    @14,@SM01028                                        0098
*     END;                          /*                       @Y30LB24*/
*   ELSE                                                           0100
*     DO;                           /* NO PARM FIELD         @Y30LB24*/
         B     @RC00096                                            0100
@RF00096 DS    0H                                                  0101
*       CALL VDRCWTOR;              /* CALL WTOR ROUTINE     @Y30LB24*/
         BAL   @14,VDRCWTOR                                        0101
*     END;                          /*                       @Y30LB24*/
*   CALL VDRFTYPE;                  /* CALL TYPE ROUTINE     @Y30LB24*/
@RC00096 BAL   @14,VDRFTYPE                                        0103
*   DO WHILE FAILCODE=THREE;        /* GOOD REPLY?           @Y30LB24*/
         B     @DE00104                                            0104
@DL00104 DS    0H                                                  0105
*     CALL VDRNOTOP;                /* CALL MESSAGE ROUTINE  @Y30LB24*/
         BAL   @14,VDRNOTOP                                        0105
*     CALL VDRCWTOR;                /* CALL WTOR ROUTINE     @Y30LB24*/
         BAL   @14,VDRCWTOR                                        0106
*     CALL VDRFTYPE;                /* CALL TYPE ROUTINE     @Y30LB24*/
         BAL   @14,VDRFTYPE                                        0107
*   END;                            /*                       @Y30LB24*/
@DE00104 C     FAILCODE,@CF00080                                   0108
         BE    @DL00104                                            0108
*   RSAVE=ZERO;                     /* INIT REASON CODE      @Y30LB24*/
         SLR   @14,@14                                             0109
         ST    @14,RSAVE                                           0109
*   RETSAVE=ZERO;                   /* INIT RETURN CODE      @Y30LB24*/
         LR    RETSAVE,@14                                         0110
*   REG1=INITPTR;                   /* SET PARM REG          @Y30LB24*/
         LR    REG1,INITPTR                                        0111
*LMSSC1:                                                           0112
*   SVC(126);                       /* INVOKE SVC 126 ISSUE SVC MACRO
*                                                            @Y30LB24*/
LMSSC1   SVC   126                                                 0112
*   IF REG15^=ZERO THEN             /* FUNCTION SUCCESSFUL?  @Y30LB24*/
         LTR   REG15,REG15                                         0113
         BZ    @RF00113                                            0113
*     DO;                           /* NO                    @Y30LB24*/
*       RSAVE=REG0;                 /* SAVE REASON CODE      @Y30LB24*/
         ST    REG0,RSAVE                                          0115
*       FAILCODE=TWO;               /* SET FAIL CODE         @Y30LB24*/
         LA    FAILCODE,2                                          0116
*       CALL VDRNOTOP;              /* CALL MESSAGE ROUTINE  @Y30LB24*/
         BAL   @14,VDRNOTOP                                        0117
*       RETSAVE=FOUR;               /* SET RETURN CODE       @Y30LB24*/
         LA    RETSAVE,4                                           0118
*       RETURN CODE(RETSAVE);       /* RETURN TO INITIATOR   @Y30LB24*/
         LR    @15,RETSAVE                                         0119
         L     @13,4(,@13)                                         0119
         L     @14,12(,@13)                                        0119
         LM    @00,@12,20(@13)                                     0119
         BR    @14                                                 0119
*     END;                          /*                       @Y30LB24*/
*   IF CPUSTAT=ZERO THEN            /* CPU ASSOC REQ?        @Y30LB24*/
@RF00113 LTR   CPUSTAT,CPUSTAT                                     0121
         BNZ   @RF00121                                            0121
*     DO;                           /* NO                    @Y30LB24*/
*       RETURN CODE(RETSAVE);       /* RETURN TO INITIATOR   @Y30LB24*/
         LR    @15,RETSAVE                                         0123
         L     @13,4(,@13)                                         0123
         L     @14,12(,@13)                                        0123
         LM    @00,@12,20(@13)                                     0123
         BR    @14                                                 0123
*     END;                          /*                       @Y30LB24*/
*   RSAVE=ZERO;                     /* INIT REASON CODE      @Y30LB24*/
@RF00121 SLR   @14,@14                                             0125
         ST    @14,RSAVE                                           0125
*   RETSAVE=ZERO;                   /* INIT RETURN CODE      @Y30LB24*/
         LR    RETSAVE,@14                                         0126
*   REG1=RPLVPTR;                   /* SET PARM REG          @Y30LB24*/
         LR    REG1,RPLVPTR                                        0127
*LMSSC2:                                                           0128
*   SVC(126);                       /* INVOKE SVC 126 ISSUE SVC MACRO
*                                                            @Y30LB24*/
LMSSC2   SVC   126                                                 0128
*   IF REG15^=ZERO THEN             /* FUNCTION SUCCESSFUL?  @Y30LB24*/
         LTR   REG15,REG15                                         0129
         BZ    @RF00129                                            0129
*     DO;                           /* NO                    @Y30LB24*/
*       RSAVE=REG0;                 /* SAVE REASON CODE      @Y30LB24*/
         ST    REG0,RSAVE                                          0131
*       FAILCODE=TWO;               /* SET FAIL CODE         @Y30LB24*/
         LA    FAILCODE,2                                          0132
*       CALL VDRNOTOP;              /* CALL MESSAGE ROUTINE  @Y30LB24*/
         BAL   @14,VDRNOTOP                                        0133
*       RETSAVE=FOUR;               /* SET RETURN CODE       @Y30LB24*/
         LA    RETSAVE,4                                           0134
*     END;                          /*                       @Y30LB24*/
*   RETURN CODE(RETSAVE);           /* RETURN TO INITIATOR   @Y30LB24*/
@RF00129 LR    @15,RETSAVE                                         0136
         L     @13,4(,@13)                                         0136
         L     @14,12(,@13)                                        0136
         LM    @00,@12,20(@13)                                     0136
         BR    @14                                                 0136
*                                                                  0137
*/* ******************************************************************
*                                                                  0137
*     NAME = VDRCWTOR,  WRITE TO OPERATOR FOR PARMS.           @Y30LB24
*                                                                  0137
*     INPUT = NONE.                                            @Y30LB24
*                                                                  0137
*     PROCESS = THIS SUBROUTINE IS CALLED WHEN PARMS HAVE NOT      0137
*     BEEN SPECIFIED ON THE EXEC JCL OR THE PARMS SPECIFIED        0137
*     ARE IN ERROR.                                            @Y30LB24
*                                                                  0137
*     OUTPUT = PARMS ARE READ VIA A WTOR COMMAND.              @Y30LB24
*                                                                  0137
******************************************************************** */
*/*VDRCWTOR: CHART                                                   */
*/*HEADER                                                          0137
*/*JULY 19, 1974                                ICBVDR00 - SEGMENT 0137
*/*VDRCWTOR - WTOR FOR PARMS                                         */
*/*          E                    VDRCWTOR                           */
*/*          P                    CLEAR REPLY AREA                   */
*/*          P                    CLEAR ECB                          */
*/*          L                    ISSUE WTOR                         */
*/*%END:     R                    RETURN TO CALLER                   */
*/*VDRCWTOR: END                                                     */
*                                                                  0137
*VDRCWTOR:                                                         0137
*   PROCEDURE OPTIONS(SAVEAREA);                                   0137
@EL00001 L     @13,4(,@13)                                         0137
@EF00001 DS    0H                                                  0137
@ER00001 LM    @14,@12,12(@13)                                     0137
         BR    @14                                                 0137
VDRCWTOR STM   @14,@12,12(@13)                                     0137
         ST    @13,@SA00002+4                                      0137
         LA    @14,@SA00002                                        0137
         ST    @14,8(,@13)                                         0137
         LR    @13,@14                                             0137
*   REPLY='';                       /* BLANK WORK AREA       @Y30LB24*/
         MVI   REPLY,C' '                                          0138
         MVC   REPLY+1(99),REPLY                                   0138
*   WTORECB=ZERO;                   /* CLEAR THE WTOR ECB    @Y30LB24*/
         SLR   @14,@14                                             0139
         ST    @14,WTORECB                                         0139
*   REG2=ADDR(REPLY);               /* SET REPLY ADDR        @Y30LB24*/
         LA    REG2,REPLY                                          0140
*   REG3=ADDR(WTORECB);             /* SET ECB ADDRESS       @Y30LB24*/
         LA    REG3,WTORECB                                        0141
*LWTOR1:                                                           0142
*   GEN REFS(REG2,REG3);                                           0142
LWTOR1   DS    0H                                                  0142
*                                         /* WTOR FOR PARMS   @Y30LB24*
         WTOR 'ICB435D REPLY(ENABLE,DISABLE,DISABLEJ),HOSTID=(ONLINE,OF*
               FLINE),RESTORED',(REG2),N25,(REG3)              @G24LB23
         WAIT ECB=WTORECB
*   RETURN;                         /* RETURN TO CALLER      @Y30LB24*/
@EL00002 L     @13,4(,@13)                                         0143
@EF00002 DS    0H                                                  0143
@ER00002 LM    @14,@12,12(@13)                                     0143
         BR    @14                                                 0143
*   END VDRCWTOR;                   /* END WTOR PARMS        @Y30LB24*/
*                                                                  0145
*/* ******************************************************************
*                                                                  0145
*     NAME = VDRFTYPE,  DETERMINE TYPE OF ENABLE/DISABLE REQUESTED.
*                                                              @Y30LB24
*                                                                  0145
*     INPUT = POINTER TO WORK AREA FOR THE MSVC REQUEST.       @Y30LB24
*                                                                  0145
*     PROCESS = THIS SUBROUTINE IS CALLED WHEN THE TYPE OF         0145
*     ENABLE/DISABLE MUST BE DETERMINED FOR ICBVDR00.          @Y30LB24
*                                                                  0145
*     OUTPUT = MSVC REQUEST LIST BUILT AND/OR WORK FLAG TO INDICATE
*     THE SUCCESS OF THE SUBROUTINE.                           @Y30LB24
*                                                                  0145
******************************************************************** */
*/*VDRFTYPE: CHART                                                   */
*/*HEADER                                                          0145
*/*JULY 19, 1974                                ICBVDR00 - SEGMENT 0145
*/*VDRFTYPE - DETERMINE ENABLE/DISABLE TYPE                          */
*/*          E                    VDRFTYPE                           */
*/*          M INITIALIZE VARIABLES                                  */
*/*          M INITIALIZE CONSTANTS                                  */
*/*          P SET PARMS UPPER CASE                                  */
*/*          D (YES,,NO,%ENCK) DISABLE REQUESTED?                    */
*/*          D (YES,,NO,%ERR) PARMS VALID?                           */
*/*          M (,%END) PREPARE MSVC DISABLE REQUEST                  */
*/*%ENCK:    D (YES,,NO,%ERR) ENABLE REQUESTED?                      */
*/*          D (YES,,NO,%ERR) PARMS VALID?                           */
*/*          M PREPARE MSVC ENABLE REQUEST                           */
*/*          D (YES,,NO,%END) ENABLE MSVC                            */
*/*          D (YES,,NO,%END) CPU ASSOC REQ?                         */
*/*          D (YES,,NO,%ERR) CPU ASSOC PARMS VALID?                 */
*/*          M (,%END) PREPARE CPU ASSOC REQUEST                     */
*/*%ERR:     M SET INVALID PARM CODE                                 */
*/*%END:     R                    RETURN TO CALLER                   */
*/*VDRFTYPE: END                                                     */
*                                                                  0145
*VDRFTYPE:                                                         0145
*   PROCEDURE OPTIONS(SAVEAREA);                                   0145
VDRFTYPE STM   @14,@06,12(@13)                                     0145
         STM   @08,@10,52(@13)                                     0145
         ST    @12,68(,@13)                                        0145
         ST    @13,@SA00003+4                                      0145
         LA    @14,@SA00003                                        0145
         ST    @14,8(,@13)                                         0145
         LR    @13,@14                                             0145
*   REQLIST1=''B;                   /* ZERO LIST1            @Y30LB24*/
         XC    REQLIST1(40),REQLIST1                               0146
*   REQLIST2=''B;                   /* ZERO LIST2            @Y30LB24*/
         XC    REQLIST2(200),REQLIST2                              0147
*   INILNGTH=INILEN;                /* SET REQUEST LENGTH    @Y30LB24*/
         LH    @14,INILEN                                          0148
         ST    @14,INILNGTH(,INITPTR)                              0148
*   INITOPCD=INICODE;               /* SET OP CODE           @Y30LB24*/
         MVI   INITOPCD(INITPTR),X'88'                             0149
*   DO I=1 TO 34;                   /* UPPER CASE LOOP       @G24LB23*/
         LA    I,1                                                 0150
@DL00150 DS    0H                                                  0151
*     CAPS(I)=CAPS(I)×BLANK;        /* SET UPPER CASE        @Y30LB24*/
         LA    @14,CAPS-1(I)                                       0151
         OC    0(1,@14),BLANK                                      0151
*   END;                            /*                       @Y30LB24*/
         AL    I,@CF00059                                          0152
         C     I,@CF00142                                          0152
         BNH   @DL00150                                            0152
*   FAILCODE=THREE;                 /* INITIALIZE REASON CODE      0153
*                                                            @Y30LB24*/
         LA    FAILCODE,3                                          0153
*   CPUSTAT=ZERO;                   /* INITIALIZE SWITCH     @Y30LB24*/
         SLR   @14,@14                                             0154
         LR    CPUSTAT,@14                                         0154
*   IF REPLY(1:8)='DISABLEJ' THEN   /* DISABLE JOURNAL?      @Y30LB24*/
         CLC   REPLY(8),@CC00995                                   0155
         BNE   @RF00155                                            0155
*     DO;                           /* YES                   @Y30LB24*/
*       INIDISAB=ON;                /* SET DISABLE FLAG      @Y30LB24*/
         OI    INIDISAB(INITPTR),B'00100000'                       0157
*       INIJRNL=ON;                 /* SET JOURNAL FLAG      @Y30LB24*/
         OI    INIJRNL(INITPTR),B'01000000'                        0158
*       IF REPLY(9:9)=BLANK THEN    /* NO MORE PARMS         @Y30LB24*/
         CLC   REPLY+8(1),BLANK                                    0159
         BNE   @RF00159                                            0159
*         FAILCODE=ZERO;            /* SET VALID PARMS       @Y30LB24*/
         LR    FAILCODE,@14                                        0160
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
@EL00003 L     @13,4(,@13)                                         0161
@EF00003 DS    0H                                                  0161
@ER00003 LM    @14,@06,12(@13)                                     0161
         LM    @08,@10,52(@13)                                     0161
         L     @12,68(,@13)                                        0161
         BR    @14                                                 0161
*     END;                          /*                       @Y30LB24*/
*   IF REPLY(1:7)='DISABLE' THEN    /* DISABLE MSVC          @Y30LB24*/
@RF00155 CLC   REPLY(7),@CC00996                                   0163
         BNE   @RF00163                                            0163
*     DO;                           /* YES                   @Y30LB24*/
*       INIDISAB=ON;                /* SET DISABLE FLAG      @Y30LB24*/
         OI    INIDISAB(INITPTR),B'00100000'                       0165
*       INIABLE=ON;                 /* SET MSVI FLAG         @Y30LB24*/
*       INIJRNL=ON;                 /* SET JOURNAL FLAG      @Y30LB24*/
         OI    INIABLE(INITPTR),B'01100000'                        0167
*       IF REPLY(8:8)=BLANK THEN    /* NO MORE PARMS         @Y30LB24*/
         CLC   REPLY+7(1),BLANK                                    0168
         BNE   @RF00168                                            0168
*         FAILCODE=ZERO;            /* SET VALID PARMS       @Y30LB24*/
         SLR   FAILCODE,FAILCODE                                   0169
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00003                                            0170
*     END;                          /*                       @Y30LB24*/
*   IF REPLY(1:6)='ENABLE' THEN     /* ENABLE MSVC           @Y30LB24*/
@RF00163 CLC   REPLY(6),@CC00997                                   0172
         BNE   @RF00172                                            0172
*     DO;                           /* YES                   @Y30LB24*/
*       INIENABL=ON;                /* SET ENABLE FLAG       @Y30LB24*/
         OI    INIENABL(INITPTR),B'01000000'                       0174
*       INIVERFY=ON;                /* SET VERIFY FLAG       @Y30LB24*/
         OI    INIVERFY(INITPTR),B'10000000'                       0175
*       INIUCAT='';                 /* BLANK UCAT NAME       @Y30LB24*/
         MVI   INIUCAT(INITPTR),C' '                               0176
         MVC   INIUCAT+1(7,INITPTR),INIUCAT(INITPTR)               0176
*       FAILCODE=ZERO;              /* CLEAR REASON CODE     @Y30LB24*/
         SLR   FAILCODE,FAILCODE                                   0177
*       IF REPLY(7:7)=BLANK THEN    /* NO MORE PARMS         @Y30LB24*/
         CLC   REPLY+6(1),BLANK                                    0178
         BE    @RT00178                                            0178
*         RETURN;                   /* RETURN TO CALLER      @Y30LB24*/
*     END;                          /*                       @Y30LB24*/
*   IF FAILCODE=THREE THEN          /* NO VALID PARMS        @Y30LB24*/
@RF00172 C     FAILCODE,@CF00080                                   0181
         BNE   @RF00181                                            0181
*     DO;                           /* YES                   @Y30LB24*/
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00003                                            0183
*     END;                          /*                       @Y30LB24*/
*   IF REPLY(7:7)^=COMMA×           /* COMMA NEXT PARM?      @Y30LB24*/
*       (REPLY(18:18)^=EQUALS&REPLY(8:8)^=COMMA) THEN/* EQSGN NEXT 0185
*                                      PARM?                 @G24LB23*/
@RF00181 CLC   REPLY+6(1),COMMA                                    0185
         BNE   @RT00185                                            0185
         CLC   REPLY+17(1),EQUALS                                  0185
         BE    @RF00185                                            0185
         CLC   REPLY+7(1),COMMA                                    0185
         BE    @RF00185                                            0185
@RT00185 DS    0H                                                  0186
*     DO;                           /* NO                    @Y30LB24*/
*       FAILCODE=THREE;             /* SET INVALID PARM      @Y30LB24*/
         LA    FAILCODE,3                                          0187
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00003                                            0188
*     END;                          /*                       @Y30LB24*/
*   IF REPLY(8:8)^=COMMA THEN                                      0190
@RF00185 CLC   REPLY+7(1),COMMA                                    0190
         BE    @RF00190                                            0190
*     DO;                           /* HOSTID SPECIFIED?     @G24LB23*/
*       HOSTID=REPLY(8:18);         /* SAVE NEXT PARM        @Y30LB24*/
         MVC   HOSTID(11),REPLY+7                                  0192
*       HOSTID(11:11)='F0';         /* SET LAST BYTE         @Y30LB24*/
         MVI   HOSTID+10,C'F'                                      0193
*       IF HOSTID(1:10)=ZEROS×      /* INVALID HOSTID        @Y30LB24*/
*           HOSTID(1:10)=CPUBK THEN /* INVALID HOSTID        @Y30LB24*/
         CLC   HOSTID(10),ZEROS                                    0194
         BE    @RT00194                                            0194
         CLC   HOSTID(10),CPUBK                                    0194
         BNE   @RF00194                                            0194
@RT00194 DS    0H                                                  0195
*         DO;                       /* YES                   @Y30LB24*/
*           FAILCODE=THREE;         /* SET INVALID PARM      @Y30LB24*/
         LA    FAILCODE,3                                          0196
*           RETURN;                 /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00003                                            0197
*         END;                      /*                       @Y30LB24*/
*       DO I=1 TO 10;               /* VALIDATION LOOP       @Y30LB24*/
@RF00194 LA    I,1                                                 0199
@DL00199 DS    0H                                                  0200
*         IF HCHAR(I)<'F0'X×        /* PARM < ZERO           @Y30LB24*/
*             HCHAR(I)>'F9'X THEN   /* PARM > NINE           @Y30LB24*/
         LA    @14,HCHAR-1(I)                                      0200
         CLI   0(@14),X'F0'                                        0200
         BL    @RT00200                                            0200
         LA    @14,HCHAR-1(I)                                      0200
         CLI   0(@14),X'F9'                                        0200
         BNH   @RF00200                                            0200
@RT00200 DS    0H                                                  0201
*           DO;                     /* YES                   @Y30LB24*/
*             FAILCODE=THREE;       /* SET INVALID PARM      @Y30LB24*/
         LA    FAILCODE,3                                          0202
*             RETURN;               /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00003                                            0203
*           END;                    /*                       @Y30LB24*/
*       END;                        /*                       @Y30LB24*/
@RF00200 AL    I,@CF00059                                          0205
         C     I,@CF00125                                          0205
         BNH   @DL00199                                            0205
*       REG3=LENGTH(RPLV);          /* SET RPLV LENGTH       @Y30LB24*/
         LA    @14,132                                             0206
         LR    REG3,@14                                            0206
*       REG3=REG3+LENGTH(ICBADLST); /* SET TOTAL LEN         @Y30LB24*/
         LA    @10,16                                              0207
         ALR   REG3,@10                                            0207
*       RECPLEN=REG3;               /* SET PARM LENGTH       @Y30LB24*/
         ST    REG3,RECPLEN(,RPLVPTR)                              0208
*       RPLJRCVY=ON;                /* SET RECOVERY FLG      @VS32198*/
*       RPLFTIME=ON;                /* INDICATE SECOND ENTRY @Y30LB24*/
         OI    RPLJRCVY(RPLVPTR),B'10000010'                       0210
*       ROPCODE='8F'X;              /* SET REC OPCODE        @Y30LB24*/
         MVI   ROPCODE(RPLVPTR),X'8F'                              0211
*       RPLVTLEN=REG3;              /* SET RPLVTLEN          @Y30LB24*/
         STH   REG3,RPLVTLEN(,RPLVPTR)                             0212
*       ASDALEN=LENGTH(ICBADLST);   /* SET ASDA LENGTH       @Y30LB24*/
         ALR   @14,RPLVPTR                                         0213
         ST    @10,ASDALEN(,@14)                                   0213
*       ASDAOPC='2C'X;              /* SET ASD OPCODE        @Y30LB24*/
         MVI   ASDAOPC(@14),X'2C'                                  0214
*       GEN(PACK  WORK1(N6),HOSTID(N11));/* PACK HOSTID      @Y30LB24*/
         PACK  WORK1(N6),HOSTID(N11)
*       ASDACPU=WORK1(1:5);         /* MOVE CPU ASSOC        @Y30LB24*/
         LA    @14,132                                             0216
         ALR   @14,RPLVPTR                                         0216
         MVC   ASDACPU(5,@14),WORK1                                0216
*       IF REPLY(19:24)='ONLINE' THEN/* CPU ONLINE?          @Y30LB24*/
         CLC   REPLY+18(6),@CC01004                                0217
         BNE   @RF00217                                            0217
*         DO;                       /* YES                   @Y30LB24*/
*           ASASSOC=ON;             /* SET ASSOC FLAG        @Y30LB24*/
         OI    ASASSOC(@14),B'10000000'                            0219
*           CPUSTAT=ONE;            /* SET CPU ASSOC SW      @Y30LB24*/
         LA    CPUSTAT,1                                           0220
*           IF REPLY(25)=BLANK      /* NO MORE PARMS         @G24LB23*/
*             THEN                                                 0221
         CLC   REPLY+24(1),BLANK                                   0221
         BE    @RT00221                                            0221
*             RETURN;               /* RETURN TO CALLER      @Y30LB24*/
*           IF REPLY(25)=COMMA&REPLY(26:33)='RESTORED'&REPLY(34)=BLANK
*                                   /* RESTORED SPECIFIED    @G24LB23*/
*             THEN                                                 0223
         CLC   REPLY+24(1),COMMA                                   0223
         BNE   @RF00223                                            0223
         CLC   REPLY+25(8),@CC01008                                0223
         BNE   @RF00223                                            0223
         CLC   REPLY+33(1),BLANK                                   0223
         BNE   @RF00223                                            0223
*             INIRESTR=ON;          /* SPECIFY RESTORED      @G24LB23*/
         OI    INIRESTR(INITPTR),B'00010000'                       0224
*           ELSE                                                   0225
*             FAILCODE=THREE;       /* SET INVALID PARM      @G24LB23*/
         B     @RC00223                                            0225
@RF00223 LA    FAILCODE,3                                          0225
*           RETURN;                 /* RETURN TO CALLER      @G24LB23*/
         B     @EL00003                                            0226
*         END;                      /*                       @Y30LB24*/
*       IF REPLY(19:25)='OFFLINE' THEN/* CPU OFFLINE?        @Y30LB24*/
@RF00217 CLC   REPLY+18(7),@CC01009                                0228
         BNE   @RF00228                                            0228
*         DO;                       /* YES                   @Y30LB24*/
*           ASDASSOC=ON;            /* SET ASSOC FLAG        @Y30LB24*/
         OI    ASDASSOC+132(RPLVPTR),B'01000000'                   0230
*           CPUSTAT=ONE;            /* SET CPU ASSOC SW      @Y30LB24*/
         LA    CPUSTAT,1                                           0231
*           IF REPLY(26)=BLANK THEN /* NO MORE PARMS         @G24LB23*/
         CLC   REPLY+25(1),BLANK                                   0232
         BE    @RT00232                                            0232
*             RETURN;               /* RETURN TO CALLER      @Y30LB24*/
*           IF REPLY(26)=COMMA&REPLY(27:34)='RESTORED'&REPLY(35)=BLANK
*                                   /* RESTORED SPECIFIED            */
*             THEN                                                 0234
         CLC   REPLY+25(1),COMMA                                   0234
         BNE   @RF00234                                            0234
         CLC   REPLY+26(8),@CC01008                                0234
         BNE   @RF00234                                            0234
         CLC   REPLY+34(1),BLANK                                   0234
         BNE   @RF00234                                            0234
*             INIRESTR=ON;          /* SPECIFY RESTORED      @G24LB23*/
         OI    INIRESTR(INITPTR),B'00010000'                       0235
*           ELSE                                                   0236
*             FAILCODE=THREE;       /* SET INVALID PARM      @G24LB23*/
         B     @RC00234                                            0236
@RF00234 LA    FAILCODE,3                                          0236
*           RETURN;                 /* RETURN TO CALLER      @G24LB23*/
         B     @EL00003                                            0237
*         END;                      /*                       @Y30LB24*/
*       FAILCODE=THREE;             /* SET INVALID PARM      @Y30LB24*/
@RF00228 LA    FAILCODE,3                                          0239
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00003                                            0240
*     END;                          /*                       @G24LB23*/
*   ELSE                                                           0242
*     DO;                           /*                       @G24LB23*/
@RF00190 DS    0H                                                  0243
*       IF REPLY(9:16)='RESTORED'&REPLY(17)=BLANK THEN/* RESTORED  0243
*                                      SPECIFIED                     */
         CLC   REPLY+8(8),@CC01008                                 0243
         BNE   @RF00243                                            0243
         CLC   REPLY+16(1),BLANK                                   0243
         BNE   @RF00243                                            0243
*         INIRESTR=ON;              /* SPECIFY RESTORED      @G24LB23*/
         OI    INIRESTR(INITPTR),B'00010000'                       0244
*       ELSE                                                       0245
*         FAILCODE=THREE;           /* SET INVALID PARM      @G24LB23*/
         B     @RC00243                                            0245
@RF00243 LA    FAILCODE,3                                          0245
*       RETURN;                     /* RETURN TO CALLER      @G24LB23*/
         B     @EL00003                                            0246
*     END;                          /*                       @G24LB23*/
*   END VDRFTYPE;                   /* END DETERMINE TYPE    @Y30LB24*/
         B     @EL00003                                            0248
*                                                                  0249
*/* ******************************************************************
*                                                                  0249
*     NAME = VDRNOTOP, SYSTEM OPERATOR COMMUNICATION           @Y30LB24
*                                                                  0249
*     INPUT = INTERNAL WORK FLAG INDICATING THE TYPE OF PROCESSING 0249
*     ERROR THAT HAS OCCURRED.                                 @Y30LB24
*                                                                  0249
*     PROCESS = INFORM SYSTEM OPERATOR OF THE TYPE OF PROCESSING ERROR.
*                                                              @Y30LB24
*                                                                  0249
*     OUTPUT = INFORMATIONAL MESSAGE TO BE CONVEYED TO THE OPERATOR.
*                                                              @Y30LB24
*                                                                  0249
******************************************************************** */
*/*VDRNOTOP: CHART                                                   */
*/*          E                    VDRNOTOP                           */
*/*          P                    RETRIEVE MESSAGE                   */
*/*          I                    ISSUE WTO WITH ERROR MESSAGE       */
*/*%END:     R                    RETURN TO CALLER                   */
*/*VDRNOTOP: END                                                     */
*                                                                  0249
*VDRNOTOP:                                                         0249
*   PROCEDURE OPTIONS(SAVEAREA);                                   0249
VDRNOTOP STM   @14,@12,12(@13)                                     0249
         ST    @13,@SA00004+4                                      0249
         LA    @14,@SA00004                                        0249
         ST    @14,8(,@13)                                         0249
         LR    @13,@14                                             0249
*   IF FAILCODE=ONE THEN            /* MESSAGE ONE?          @Y30LB24*/
         C     FAILCODE,@CF00059                                   0250
         BNE   @RF00250                                            0250
*     DO;                           /* YES                   @Y30LB24*/
*       REG1=ADDR(MSG1);            /* SET UP REG 1          @Y30LB24*/
         LA    REG1,MSG1                                           0252
*LWTO1:                                                            0253
*       GEN(WTO MF=(E,(REG1)));     /* SEND ERROR MSG1       @Y30LB24*/
LWTO1    WTO MF=(E,(REG1))
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
@EL00004 L     @13,4(,@13)                                         0254
@EF00004 DS    0H                                                  0254
@ER00004 LM    @14,@12,12(@13)                                     0254
         BR    @14                                                 0254
*     END;                          /*                       @Y30LB24*/
*   IF FAILCODE=TWO THEN            /* MESSAGE TWO?          @Y30LB24*/
@RF00250 C     FAILCODE,@CF00078                                   0256
         BNE   @RF00256                                            0256
*     DO;                           /* YES                   @Y30LB24*/
*       WORK2(1:4)=RCHAR;           /* MOVE REASON CODE      @Y30LB24*/
         MVC   WORK2(4),RCHAR                                      0258
*       WORK2(5:5)=SIGN;            /* MOVE PACK SIGN        @Y30LB24*/
         MVC   WORK2+4(1),SIGN                                     0259
*       GEN(UNPK  WORK1(N5),WORK2+N2(N3));/* UNPK            @Y30LB24*/
         UNPK  WORK1(N5),WORK2+N2(N3)
*       GEN(TR    WORK1(N4),TRANS-N240);/* TRANSLATE         @Y30LB24*/
         TR    WORK1(N4),TRANS-N240
*       MSG2(52:55)=WORK1(1:4);     /* MOVE CODE             @Y30LB24*/
         MVC   MSG2+51(4),WORK1                                    0262
*       REG1=ADDR(MSG2);            /* SET UP REG 1          @Y30LB24*/
         LA    REG1,MSG2                                           0263
*LWTO2:                                                            0264
*       GEN(WTO MF=(E,(REG1)));     /* SEND ERROR MSG2       @Y30LB24*/
LWTO2    WTO MF=(E,(REG1))
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00004                                            0265
*     END;                          /*                       @Y30LB24*/
*   IF FAILCODE=THREE THEN          /* MESSAGE THREE?        @Y30LB24*/
@RF00256 C     FAILCODE,@CF00080                                   0267
         BNE   @RF00267                                            0267
*     DO;                           /* YES                   @Y30LB24*/
*       REG1=ADDR(MSG3);            /* SET UP REG 1          @Y30LB24*/
         LA    REG1,MSG3                                           0269
*LWTO3:                                                            0270
*       GEN(WTO MF=(E,(REG1)));     /* SEND ERROR MSG3       @Y30LB24*/
LWTO3    WTO MF=(E,(REG1))
*       RETURN;                     /* RETURN TO CALLER      @Y30LB24*/
         B     @EL00004                                            0271
*     END;                          /*                       @Y30LB24*/
*   END VDRNOTOP;                   /* END OPER COMM.        @Y30LB24*/
         B     @EL00004                                            0273
*   END ICBVDR00                    /* END ICBVDR00          @Y30LB24*/
*                                                                  0274
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (IEZVVICB)                                       */
*/*%INCLUDE SYSLIB  (IEZRPLV )                                       */
*/*%INCLUDE SYSLIB  (IEZINIT )                                       */
*                                                                  0274
*       ;                                                          0274
@DATA    DS    0H
@SM01028 MVC   REPLY(0),PARMS(PARMPTR)
         DS    0F
@SA00001 DS    18F
@SA00004 DS    18F
@SA00002 DS    18F
@SA00003 DS    18F
         DS    0F
@CF00059 DC    F'1'
@CF00078 DC    F'2'
@CF00080 DC    F'3'
@CF00125 DC    F'10'
@CF00142 DC    F'34'
@CF00074 DC    F'571'
         DS    0D
WTORECB  DS    F
RSAVE    DS    F
INILEN   DC    AL2(20)
@CC00995 DC    C'DISABLEJ'
@CC01008 DC    C'RESTORED'
@CC00996 EQU   @CC00995
@CC01009 DC    C'OFFLINE'
@CC00997 DC    C'ENABLE'
@CC01004 DC    C'ONLINE'
         DS    CL3
WORK1    DS    CL8
WORK2    DS    CL5
HOSTID   DS    CL11
REQLIST1 DS    CL40
REQLIST2 DS    CL200
BLANKS   DC    CL6' '
BLANK    DC    CL1' '
ZEROS    DC    CL10'0000000000'
CPUBK    DC    CL10'          '
COMMA    DC    CL1','
EQUALS   DC    CL1'='
SIGN     DC    X'0F'
OPCODE   DC    X'8F'
REPLY    DS    CL100
TRANS    DC    CL16'0123456789ABCDEF'
VDRPATCH DS    CL200
         ORG   VDRPATCH
@NM00002 DC    CL20'ICBVDR00 PATCH AREA '
@NM00003 DC    XL180'0'
         ORG   VDRPATCH+200
ICBVDR00 CSECT
M0       EQU   0
M8       EQU   8
N2       EQU   2
N3       EQU   3
N4       EQU   4
N5       EQU   5
N6       EQU   6
N11      EQU   11
N25      EQU   25
N240     EQU   240
ICBVDR00 CSECT
*                                                         /*  @Y30LB24*
MSG1     WTO   'ICB416I ICBVVICB NOT INITIALIZED',                     *
               ROUTCDE=(2,11),DESC=6,MF=L
MSG2     WTO   'ICB437I ICBVDR00 ERROR SUBTASK PROCESSING CODE=XXXX',  *
               ROUTCDE=(2,11),DESC=6,MF=L
MSG3     WTO   'ICB457I PARAMETER SPECIFICATION ERROR',                *
               ROUTCDE=(2,11),DESC=6,MF=L
ICBVDR00 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @10
CPUSTAT  EQU   @11
RETSAVE  EQU   @07
PARMPTR  EQU   @10
FAILCODE EQU   @07
RPLVPTR  EQU   @09
INITPTR  EQU   @08
VVIPTR   EQU   @07
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
REG15    EQU   @15
ASDAR1   EQU   @01
CVTPTR   EQU   16
PARMLIST EQU   0
PLENGTH  EQU   PARMLIST
PARMS    EQU   PARMLIST+2
PARMLST  EQU   0
LISTPTR  EQU   PARMLST
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ICB2SSCB EQU   0
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBVVICB EQU   ICB2SSCB+76
ICBTRACE EQU   ICB2SSCB+112
VVICB    EQU   0
VVIFLGA  EQU   VVICB+15
RPLV     EQU   0
RPLVQPTR EQU   RPLV
RPLVECB  EQU   RPLV+4
RPLTCBPR EQU   RPLV+8
RPLFLAGA EQU   RPLV+28
RPLFTIME EQU   RPLFLAGA
RPLJRCVY EQU   RPLFLAGA
RPLVTLEN EQU   RPLV+30
RPLVSAM  EQU   RPLV+56
RPLVOPT  EQU   RPLVSAM+40
RPLVUTIL EQU   RPLV+132
INITVVI  EQU   0
INILNGTH EQU   INITVVI
INITOPCD EQU   INITVVI+4
INIFLAGA EQU   INITVVI+5
INIENABL EQU   INIFLAGA
INIDISAB EQU   INIFLAGA
INIFLAGB EQU   INITVVI+6
INIVERFY EQU   INIFLAGB
INIJRNL  EQU   INIFLAGB
INIABLE  EQU   INIFLAGB
INIRESTR EQU   INIFLAGB
INIUCAT  EQU   INITVVI+8
ICBADLST EQU   0
ASDALEN  EQU   ICBADLST
ASDAOPC  EQU   ICBADLST+4
ASDAFLG  EQU   ICBADLST+6
ASASSOC  EQU   ASDAFLG
ASDASSOC EQU   ASDAFLG
ASDACPU  EQU   ICBADLST+8
RCHAR    EQU   RSAVE
HCHAR    EQU   HOSTID
RECPLEN  EQU   RPLVQPTR
RECCODE  EQU   RPLVECB
ROPCODE  EQU   RECCODE
CAPS     EQU   REPLY
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
ICBPTR   EQU   CVTICB
VALID    EQU   TRANS
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00001 EQU   RECCODE+1
ASDA002  EQU   ICBADLST+13
@NM00018 EQU   ASDAFLG
ASDMNT   EQU   ASDAFLG
ASDEINT  EQU   ASDAFLG
@NM00017 EQU   ASDAFLG
ASDA001  EQU   ICBADLST+5
@NM00016 EQU   INITVVI+16
INIVCODE EQU   INITVVI+7
@NM00015 EQU   INIFLAGB
@NM00014 EQU   INIFLAGA
ININIT   EQU   INIFLAGA
RPLVBLN  EQU   RPLVSAM+52
RPLVRLN  EQU   RPLVSAM+48
@NM00013 EQU   RPLVSAM+44
RPLVUPD  EQU   RPLVOPT+1
@NM00012 EQU   RPLVOPT
RPLVKGE  EQU   RPLVOPT
@NM00011 EQU   RPLVOPT
RPLVNEXT EQU   RPLVOPT
RPLVDIR  EQU   RPLVOPT
RPLVLOC  EQU   RPLVOPT
RPLVKEY  EQU   RPLVSAM+36
RPLVBUF  EQU   RPLVSAM+32
@NM00010 EQU   RPLVSAM+28
RPLVACB  EQU   RPLVSAM+24
@NM00009 EQU   RPLVSAM+3
RPLVTYP  EQU   RPLVSAM+2
@NM00008 EQU   RPLVSAM
@NM00007 EQU   RPLV+42
RPLVDATE EQU   RPLV+38
RPLRMSCC EQU   RPLV+36
RPLVRETC EQU   RPLV+34
RPLRCODE EQU   RPLV+32
RPLVRES1 EQU   RPLFLAGA+1
RPLVJRNL EQU   RPLFLAGA
RPLVVOP  EQU   RPLFLAGA
RPLVVIN  EQU   RPLFLAGA
RPLVCOMP EQU   RPLFLAGA
RPLVPROG EQU   RPLFLAGA
RPLVPOST EQU   RPLFLAGA
RPLVRSV3 EQU   RPLV+24
RPLVRSV2 EQU   RPLV+20
RPLVRSV1 EQU   RPLV+16
RPLVVICB EQU   RPLV+12
RPLASCBP EQU   RPLTCBPR
VVIUNUSD EQU   VVICB+116
VVINUSDC EQU   VVICB+112
VVITPFCH EQU   VVICB+108
VVIDVMEL EQU   VVICB+104
VVIVBSTF EQU   VVICB+100
VVISSOBA EQU   VVICB+96
VVIVSCRA EQU   VVICB+92
VVISTPTB EQU   VVICB+88
VVIDVMTA EQU   VVICB+84
VVIJUCB  EQU   VVICB+80
VVIIUCB  EQU   VVICB+76
VVIRES6  EQU   VVICB+72
VVIRES5  EQU   VVICB+68
VVIRES4  EQU   VVICB+64
VVIUCB   EQU   VVICB+60
VVIVJL   EQU   VVICB+56
VVIVRR   EQU   VVICB+52
VVIQLSPL EQU   VVICB+48
VVIQRPL2 EQU   VVICB+44
VVIQRPL1 EQU   VVICB+40
VVIRES3  EQU   VVICB+36
VVIVQMP  EQU   VVICB+32
VVIECB1  EQU   VVICB+28
VVICATAD EQU   VVICB+24
VVIDCBAD EQU   VVICB+20
VVIACBAD EQU   VVICB+16
VVIFLG7  EQU   VVIFLGA
VVIFLG6  EQU   VVIFLGA
VVIFLG5  EQU   VVIFLGA
VVIFLG4  EQU   VVIFLGA
VVIFLG3  EQU   VVIFLGA
VVIFLG2  EQU   VVIFLGA
VVIFLG1  EQU   VVIFLGA
VVIFLG0  EQU   VVIFLGA
VVIALCON EQU   VVICB+14
VVICPUID EQU   VVICB+12
VVIUCAT  EQU   VVICB+4
VVICID   EQU   VVICB
ICBCPUID EQU   ICB2SSCB+496
ICBLORD  EQU   ICBTRACE+256
ICBOTRC  EQU   ICBTRACE
ICBFAB   EQU   ICB2SSCB+108
ICBMSSC  EQU   ICB2SSCB+104
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBVVIC  EQU   ICB2SSCB+72
ICBSIOP  EQU   ICB2SSCB+68
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBSAMP  EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00006 EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBI     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBQHEAD EQU   ICB2SSCB+36
ICBAUCB  EQU   ICB2SSCB+32
ICBPUCB  EQU   ICB2SSCB+28
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00005 EQU   CVTFIX+248
@NM00004 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00159 EQU   @EL00003
@RF00168 EQU   @EL00003
@RT00178 EQU   @EL00003
@RT00221 EQU   @EL00003
@RC00223 EQU   @EL00003
@RT00232 EQU   @EL00003
@RC00234 EQU   @EL00003
@RC00243 EQU   @EL00003
@RF00267 EQU   @EL00004
@ENDDATA EQU   *
         END   ICBVDR00,(C'PLS1752',0603,76320)
