         TITLE 'ICBVIO00 MSVC I/O PROCESSOR MODULE (JUNE 14, 1974) MVS *
                        '
ICBVIO00 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICBVIO00  76.279'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*   RPLVPTR=REG1;                   /*                       #Y30LB23*/
         LR    RPLVPTR,REG1                                        0065
*   RESPECIFY                                                      0066
*     REG1 UNRSTD;                  /*                       #Y30LB23*/
*                                                                  0066
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* ESTABLISH ADDRESSABILITY TO THE VSAM RPL              #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0067
*   RESPECIFY                                                      0067
*     IFGRPL BASED(ADDR(RPLVSAM));  /*                       #Y30LB23
*                                                            @ZM31134*/
*                                                                  0067
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH ACB ADDRESSABILITY                          @ZM31134*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0068
*                                   /*                       @ZM31134*/
*   RESPECIFY                                                      0068
*     IFGACB BASED(VVIACBAD);       /*                       @ZM31134
*                                      EST ADDRESABILITY     @ZM31134
*                                                            @ZM31134*/
*                                                                  0068
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* ESTABLISH ADDRESSABILITY TO THE ICBVVICB CONTROL BLOCK        */
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0069
*   VVIPTR=RPLVVICB;                /*                       #Y30LB23*/
*                                                                  0069
         L     VVIPTR,RPLVVICB(,RPLVPTR)                           0069
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* ZERO THE RETURN AND REASON CODES CONTAINED            #Y30LB23*/
*   /* IN THE MSVC RPLV                                      #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0070
*   RPLVRETC=ZERO;                  /*                       #Y30LB23*/
         MVC   RPLVRETC(2,RPLVPTR),@CB00774                        0070
*   RPLRCODE=ZERO;                  /*                       #Y30LB23
*                                                            @ZM31134*/
*                                                                  0071
         MVC   RPLRCODE(2,RPLVPTR),@CB00774                        0071
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF THE INVENTORY AND JOURNAL ARE DISABLED       @ZM31134*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0072
*                                   /*                       @ZM31134*/
*   IF(VVIACBAD=ZERO)×(ACBOPEN=OFF)×(VVIFLG1=ON) THEN/*      @ZM31134*/
         L     @05,VVIACBAD(,VVIPTR)                               0072
         LTR   @05,@05                                             0072
         BZ    @RT00072                                            0072
         TM    ACBOPEN(@05),B'00010000'                            0072
         BZ    @RT00072                                            0072
         TM    VVIFLG1(VVIPTR),B'01000000'                         0072
         BNO   @RF00072                                            0072
@RT00072 DS    0H                                                  0073
*     DO;                           /* YES                   @ZM31134*/
*       RPLVRETC=FOUR;              /* SET RETURN CODE       @ZM31134*/
         MVC   RPLVRETC(2,RPLVPTR),@CB00778                        0074
*       RPLRCODE=DISABL;            /* SET REASON CODE       @ZM31134*/
         MVC   RPLRCODE(2,RPLVPTR),@CB00765                        0075
*       RETURN;                     /* RETURN TO CALLER      @ZM31134*/
@EL00001 L     @13,4(,@13)                                         0076
@EF00001 DS    0H                                                  0076
@ER00001 LM    @14,@12,12(@13)                                     0076
         BR    @14                                                 0076
*     END;                          /* INV AND JRNL DISABLED @ZM31134*/
*                                                                  0077
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* DETERMINE IF VSAM RPL MUST BE INITIALIZED             #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0078
*   IF RPLDACB=0 THEN                                              0078
*                                                                  0078
@RF00072 LA    @05,56                                              0078
         ALR   @05,RPLVPTR                                         0078
         L     @02,RPLDACB(,@05)                                   0078
         LTR   @02,@02                                             0078
         BNZ   @RF00078                                            0078
*     /***************************************************************/
*     /*                                                             */
*     /*                                                     #Y30LB23*/
*     /* VSAM RPL MUST BE INITIALIZED                        #Y30LB23*/
*     /*                                                     #Y30LB23*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0079
*     DO;                           /*                       @Y30LB23*/
*       RPLDACB=VVIACBAD;           /* ACB ADDRESS           @Y30LB23*/
         L     @02,VVIACBAD(,VVIPTR)                               0080
         ST    @02,RPLDACB(,@05)                                   0080
*       RPLLEN=RPLLN;               /* RPL LENGTH            @Y30LB23*/
         MVI   RPLLEN(@05),X'4C'                                   0081
*       RPLNEXIT=ON;                /* NO EXIT SPECIFIED     @Y30LB23*/
         OI    RPLNEXIT(@05),B'01000000'                           0082
*       RPLEMLEN=MSGLN;             /* SYNAD MESS BUFF LN    @Y30LB23*/
         MVC   RPLEMLEN(2,@05),@CH00752                            0083
*       RPLERMSA=ADDR(PHYERMSG);    /*                       @Y30LB23
*                                      SYNAD MESS BUFF       @Y30LB23
*                                      AREA                  @Y30LB23*/
         LA    @02,PHYERMSG                                        0084
         ST    @02,RPLERMSA(,@05)                                  0084
*       RPLKEY=ON;                  /* KEYED ACCESS          @Y30LB23*/
         OI    RPLKEY(@05),B'10000000'                             0085
*     END;                          /*                       @Y30LB23*/
*                                                                  0086
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* DETERMINE REQUEST TYPE AND CALL CORRESPONDING         @Y30LB23*/
*   /* INNER PROCEDURE TO PROCESS THE REQUEST                @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0087
*   IF RPLVTYP=RPLVREAD THEN                                       0087
@RF00078 CLI   RPLVTYP(RPLVPTR),0                                  0087
         BNE   @RF00087                                            0087
*     DO;                           /*                       @Y30LB23*/
*                                                                  0088
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* READ RECORD REQUEST                               @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0089
*       CALL VIOREAD;               /*                       @Y30LB23*/
         BAL   @14,VIOREAD                                         0089
*       RETURN;                     /*                       @Y30LB23*/
         B     @EL00001                                            0090
*     END;                          /*                       @Y30LB23*/
*   IF RPLVTYP=RPLVPUT THEN                                        0092
@RF00087 CLI   RPLVTYP(RPLVPTR),1                                  0092
         BNE   @RF00092                                            0092
*     DO;                           /*                       @Y30LB23*/
*                                                                  0093
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* PUT RECORD REQUEST                                @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0094
*       CALL VIOPUT;                /*                       @Y30LB23*/
         BAL   @14,VIOPUT                                          0094
*       RETURN;                     /*                       @Y30LB23*/
         B     @EL00001                                            0095
*     END;                          /*                       @Y30LB23*/
*   IF RPLVTYP=RPLVDEL THEN                                        0097
@RF00092 CLI   RPLVTYP(RPLVPTR),5                                  0097
         BNE   @RF00097                                            0097
*     DO;                           /*                       @Y30LB23*/
*                                                                  0098
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* DELETE RECORD REQUEST                             @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0099
*       CALL VIODEL;                /*                       @Y30LB23*/
         BAL   @14,VIODEL                                          0099
*       RETURN;                     /*                       @Y30LB23*/
         B     @EL00001                                            0100
*     END;                          /*                       @Y30LB23*/
*   IF RPLVTYP=RPLVENDR THEN                                       0102
@RF00097 CLI   RPLVTYP(RPLVPTR),4                                  0102
         BNE   @RF00102                                            0102
*     DO;                                                          0103
*                                                                  0103
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* ENDREQ REQUEST                                    @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0104
*       CALL VIOENDR;               /*                       @Y30LB23*/
         BAL   @14,VIOENDR                                         0104
*       RETURN;                     /*                       @Y30LB23*/
         B     @EL00001                                            0105
*     END;                          /*                       @Y30LB23*/
*                                                                  0106
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* ERROR - REQUEST TYPE CAN NOT BE DETERMINED.           @Y30LB23*/
*   /* WRITE A MESSAGE AND RETURN WITH INDICATIVE            @Y30LB23*/
*   /* RETURN AND REASON CODES.                              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0107
*   MSGRQ=MSGRQ&&MSGRQ;             /*                       @Y30LB23*/
@RF00102 XC    MSGRQ(32),MSGRQ                                     0107
*   MSGID=INVRQST;                  /*                       @Y30LB23*/
         MVC   MSGID(4),@CF00768                                   0108
*   MSGRPLV=RPLVPTR;                /*                       @Y30LB23*/
         ST    RPLVPTR,MSGRPLV                                     0109
*   RESPECIFY                                                      0110
*     REG1 RSTD;                    /*                       @Y30LB23*/
*   REG1=ADDR(MSGRQ);               /*                       @Y30LB23*/
         LA    REG1,MSGRQ                                          0111
*   CALL ICBVOP00;                  /*                       @Y30LB23*/
         L     @15,@CV00783                                        0112
         BALR  @14,@15                                             0112
*   RESPECIFY                                                      0113
*     REG1 UNRSTD;                  /*                       @Y30LB23*/
*   RPLVRETC=FOUR;                  /*                       #Y30LB23*/
         MVC   RPLVRETC(2,RPLVPTR),@CB00778                        0114
*   RPLRCODE=PLERR;                 /*                       #Y30LB23*/
         MVC   RPLRCODE(2,RPLVPTR),@CB00761                        0115
*   RETURN;                         /*                       #Y30LB23*/
         B     @EL00001                                            0116
*                                                                  0117
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* PROCEDURE NAME - VIOREAD                              #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /* FUNCTION - PROCESS A READ RECORD REQUEST              #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /* INPUT - NONE                                          #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /* OUTPUT - REASON AND RETURN CODES                      #Y30LB23*/
*   /* THE REQUESTED RECORD                                  #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0117
*VIOREAD:                                                          0117
*   PROCEDURE OPTIONS(SAVE,SAVEAREA);/*                      #Y30LB23*/
*                                                                  0117
VIOREAD  STM   @14,@12,12(@13)                                     0117
         ST    @13,@SA00002+4                                      0117
         LA    @14,@SA00002                                        0117
         ST    @14,8(,@13)                                         0117
         LR    @13,@14                                             0117
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* IF A READ IN THE LOCATE MODE IS REQUESTED, THEN       #Y30LB23*/
*   /* SET UP AN AREA WHERE VSAM WILL RETURN THE             #Y30LB23*/
*   /* ADDRESS OF THE LOCATED RECORD.                        #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0118
*   IF RPLVLOC=ON THEN                                             0118
         TM    RPLVLOC(RPLVPTR),B'10000000'                        0118
         BNO   @RF00118                                            0118
*     DO;                           /*                       #Y30LB23*/
*       RPLVBUF=ADDR(RECADDR);      /*                       @Y30LB23*/
         LA    @02,RECADDR                                         0120
         ST    @02,RPLVBUF(,RPLVPTR)                               0120
*       RPLVBLN=4;                  /*                       @Y30LB23*/
         MVC   RPLVBLN(4,RPLVPTR),@CF00089                         0121
*     END;                          /*                       #Y30LB23*/
*                                                                  0122
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* ISSUE THE GET MACRO WITH REGISTER ONE                 #Y30LB23*/
*   /* POINTING TO THE VSAM RPL                              #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0123
*   RESPECIFY                                                      0123
*     REG1 RSTD;                    /*                       #Y30LB23*/
@RF00118 DS    0H                                                  0124
*   REG1=ADDR(RPLVSAM);             /*                       #Y30LB23*/
         LA    REG1,RPLVSAM(,RPLVPTR)                              0124
*LGET1:                                                            0125
*   GEN(GET RPL=(REG1));            /*                       #Y30LB23*/
LGET1    GET RPL=(REG1)
*   RESPECIFY                                                      0126
*     REG1 UNRSTD;                  /*                       #Y30LB23*/
*                                                                  0126
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* CHECK FOR NON-ZERO RETURN CODE FROM VSAM              #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*   RESPECIFY                                                      0127
*     REG15 RSTD;                   /*                       #Y30LB23*/
*   IF REG15^=0 THEN                                               0128
         LTR   REG15,REG15                                         0128
         BZ    @RF00128                                            0128
*     DO;                           /*                       #Y30LB23*/
*                                                                  0129
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   #Y30LB23*/
*       /* DETERMINE IF CONDITION IS A LOCICAL               @Y30LB23*/
*       /* 'RECORD NOT FOUND' OR 'END OF DATA'               @Y30LB23*/
*       /*                                                   #Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0130
*       IF REG15=8&(RPLERRCD=FBNOFIND×RPLERRCD=FBEOD) THEN         0130
*                                                                  0130
         C     REG15,@CF00036                                      0130
         BNE   @RF00130                                            0130
         LA    @14,56                                              0130
         ALR   @14,RPLVPTR                                         0130
         CLI   RPLERRCD(@14),16                                    0130
         BE    @RT00130                                            0130
         CLI   RPLERRCD(@14),4                                     0130
         BNE   @RF00130                                            0130
@RT00130 DS    0H                                                  0131
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 #Y30LB23*/
*         /* 'RECORD NOT FOUND' OR 'END OF DATA'             #Y30LB23*/
*         /* LOGICAL CONDITION                               @Y30LB23*/
*         /*                                                 #Y30LB23*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0131
*         DO;                       /*                       #Y30LB23*/
*           RPLVRETC=FOUR;          /*                       #Y30LB23*/
         MVC   RPLVRETC(2,RPLVPTR),@CB00778                        0132
*           IF RPLERRCD=FBNOFIND THEN                              0133
*                                                                  0133
         CLI   RPLERRCD+56(RPLVPTR),16                             0133
         BNE   @RF00133                                            0133
*             /*******************************************************/
*             /*                                                     */
*             /*                                             #Y30LB23*/
*             /* 'RECORD NOT FOUND'                          #Y30LB23*/
*             /*                                             #Y30LB23*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0134
*             RPLRCODE=NOFIND;      /*                       #Y30LB23*/
         MVC   RPLRCODE(2,RPLVPTR),@CB00763                        0134
*           ELSE                                                   0135
*                                                                  0135
*             /*******************************************************/
*             /*                                                     */
*             /*                                             #Y30LB23*/
*             /* 'END OF DATA'                               #Y30LB23*/
*             /*                                             #Y30LB23*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0135
*             RPLRCODE=EOD;         /*                       #Y30LB23*/
         B     @RC00133                                            0135
@RF00133 MVC   RPLRCODE(2,RPLVPTR),@CB00755                        0135
*           RETURN;                 /*                       #Y30LB23*/
@EL00002 L     @13,4(,@13)                                         0136
@EF00002 DS    0H                                                  0136
@ER00002 LM    @14,@12,12(@13)                                     0136
         BR    @14                                                 0136
*           RESPECIFY                                              0137
*             REG15 UNRSTD;         /*                       @Y30LB23*/
*         END;                      /*                       #Y30LB23*/
*       ELSE                                                       0139
*                                                                  0139
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 #Y30LB23*/
*         /* A CONDITION REQUIRING AN ERROR                  #Y30LB23*/
*         /* MESSAGE EXISTS--CALL VIOMSG                     @Y30LB23*/
*         /*                                                 #Y30LB23*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0139
*         DO;                       /*                       #Y30LB23*/
@RF00130 DS    0H                                                  0140
*           CALL VIOMSG;            /*                       #Y30LB23*/
         BAL   @14,VIOMSG                                          0140
*           RETURN;                 /*                       #Y30LB23*/
         B     @EL00002                                            0141
*         END;                      /*                       #Y30LB23*/
*     END;                          /*                       #Y30LB23*/
*                                                                  0143
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* IF THE REQUEST IS FOR A READ IN THE LOCATE MODE,      #Y30LB23*/
*   /* THEN INSERT THE ADDRESS OF THE LOCATED RECORD         #Y30LB23*/
*   /* INTO RPLVBUF.                                         #Y30LB23*/
*   /*                                                       #Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0144
*   IF RPLVLOC=ON THEN                                             0144
@RF00128 TM    RPLVLOC(RPLVPTR),B'10000000'                        0144
         BNO   @RF00144                                            0144
*     RPLVBUF=RECADDR;              /*                       #Y30LB23*/
         L     @02,RECADDR                                         0145
         ST    @02,RPLVBUF(,RPLVPTR)                               0145
*   END VIOREAD;                    /*                       @Y30LB23*/
         B     @EL00002                                            0146
*                                                                  0147
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* PROCEDURE NAME - VIOPUT                               @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* FUNCTION - PROCESS A PUT RECORD REQUEST               @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* INPUT - NONE                                          @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* OUTPUT - REASON AND RETURN CODES                      @Y30LB23*/
*   /* THE WRITTEN RECORD                                    @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*VIOPUT:                                                           0147
*   PROCEDURE OPTIONS(SAVE,SAVEAREA);/*                      @Y30LB23*/
*                                                                  0147
VIOPUT   STM   @14,@12,12(@13)                                     0147
         ST    @13,@SA00003+4                                      0147
         LA    @14,@SA00003                                        0147
         ST    @14,8(,@13)                                         0147
         LR    @13,@14                                             0147
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* ISSUE THE PUT MACRO WITH REGISTER ONE                 @Y30LB23*/
*   /* POINTING TO THE VSAM RPL                              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   RESPECIFY                                                      0148
*     REG1 RSTD;                    /*                       @Y30LB23*/
*   REG1=ADDR(RPLVSAM);             /*                       @Y30LB23*/
         LA    REG1,RPLVSAM(,RPLVPTR)                              0149
*LPUT1:                                                            0150
*   GEN(PUT RPL=(REG1));            /*                       @Y30LB23*/
LPUT1    PUT RPL=(REG1)
*   RESPECIFY                                                      0151
*     REG1 UNRSTD;                  /*                       @Y30LB23*/
*                                                                  0151
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* CHECK FOR NON-ZERO RETURN CODE FROM VSAM              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0152
*   RESPECIFY                                                      0152
*     REG15 RSTD;                   /*                       @Y30LB23*/
*   IF REG15^=0 THEN                                               0153
         LTR   REG15,REG15                                         0153
         BZ    @RF00153                                            0153
*     DO;                           /*                       @Y30LB23*/
*                                                                  0154
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* DETERMINE IF CONDITION IS A LOGICAL               @Y30LB23*/
*       /* 'RECORD ALREADY EXISTS'                           @Y30LB23*/
*       /*                                                   #Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0155
*       IF REG15=8&RPLERRCD=FBDUP THEN                             0155
*                                                                  0155
         C     REG15,@CF00036                                      0155
         BNE   @RF00155                                            0155
         CLI   RPLERRCD+56(RPLVPTR),8                              0155
         BNE   @RF00155                                            0155
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 #Y30LB23*/
*         /* 'RECORD ALREADY EXISTS' LOGICAL                 @Y30LB23*/
*         /* CONDITION                                       @Y30LB23*/
*         /*                                                 #Y30LB23*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0156
*         DO;                       /*                       #Y30LB23*/
*           RPLVRETC=FOUR;          /*                       #Y30LB23*/
         MVC   RPLVRETC(2,RPLVPTR),@CB00778                        0157
*           RPLRCODE=DUP;           /*                       #Y30LB23*/
         MVC   RPLRCODE(2,RPLVPTR),@CB00758                        0158
*           RETURN;                 /*                       #Y30LB23*/
@EL00003 L     @13,4(,@13)                                         0159
@EF00003 DS    0H                                                  0159
@ER00003 LM    @14,@12,12(@13)                                     0159
         BR    @14                                                 0159
*           RESPECIFY                                              0160
*             REG15 UNRSTD;         /*                       @Y30LB23*/
*         END;                      /*                       #Y30LB23*/
*       ELSE                                                       0162
*                                                                  0162
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 #Y30LB23*/
*         /* A CONDITION REQUIRING AN ERROR                  #Y30LB23*/
*         /* MESSAGE EXISTS--CALL VIOMSG                     @Y30LB23*/
*         /*                                                 #Y30LB23*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0162
*         DO;                       /*                       #Y30LB23*/
@RF00155 DS    0H                                                  0163
*           CALL VIOMSG;            /*                       #Y30LB23*/
         BAL   @14,VIOMSG                                          0163
*           RETURN;                 /*                       #Y30LB23*/
         B     @EL00003                                            0164
*         END;                      /*                       #Y30LB23*/
*     END;                          /*                       #Y30LB23*/
*   END VIOPUT;                     /*                       @Y30LB23*/
         B     @EL00003                                            0167
*                                                                  0168
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* PROCEDURE NAME - VIODEL                               @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* FUNCTION - PROCESS A DELETE RECORD REQUEST            @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* INPUT - NONE                                          @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* OUTPUT - REASON AND RETURN CODES                      @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0168
*VIODEL:                                                           0168
*   PROCEDURE OPTIONS(SAVE,SAVEAREA);/*                      @Y30LB23*/
*                                                                  0168
VIODEL   STM   @14,@12,12(@13)                                     0168
         ST    @13,@SA00004+4                                      0168
         LA    @14,@SA00004                                        0168
         ST    @14,8(,@13)                                         0168
         LR    @13,@14                                             0168
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* ISSUE THE ERASE MACRO WITH REGISTER ONE               @Y30LB23*/
*   /* POINTING TO THE VSAM RPL                              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0169
*   RESPECIFY                                                      0169
*     REG1 RSTD;                    /*                       @Y30LB23*/
*   REG1=ADDR(RPLVSAM);             /*                       @Y30LB23*/
         LA    REG1,RPLVSAM(,RPLVPTR)                              0170
*LERASE1:                                                          0171
*   GEN(ERASE RPL=(REG1));          /*                       @Y30LB23*/
LERASE1  ERASE RPL=(REG1)
*   RESPECIFY                                                      0172
*     REG1 UNRSTD;                  /*                       @Y30LB23*/
*                                                                  0172
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* CHECK FOR NON-ZERO RETURN CODE FROM VSAM              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   RESPECIFY                                                      0173
*     REG15 RSTD;                   /*                       @Y30LB23*/
*   IF REG15^=0 THEN                                               0174
         LTR   REG15,REG15                                         0174
         BZ    @RF00174                                            0174
*     DO;                           /*                       @Y30LB23*/
*                                                                  0175
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* A CONDITION REQUIRING AN ERROR MESSAGE            @Y30LB23*/
*       /* EXISTS--CALL VIOMSG                               @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0176
*       RESPECIFY                                                  0176
*         REG15 UNRSTD;             /*                       @Y30LB23*/
*       CALL VIOMSG;                /*                       @Y30LB23*/
         BAL   @14,VIOMSG                                          0177
*       RETURN;                     /*                       @Y30LB23*/
@EL00004 L     @13,4(,@13)                                         0178
@EF00004 DS    0H                                                  0178
@ER00004 LM    @14,@12,12(@13)                                     0178
         BR    @14                                                 0178
*     END;                          /*                       @Y30LB23*/
*   END VIODEL;                     /*                       @Y30LB23*/
         B     @EL00004                                            0180
*                                                                  0181
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* PROCEDURE NAME - VIOENDR                              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* FUNCTION - PROCESS AN END RECORD PROCESSING           @Y30LB23*/
*   /* REQUEST                                               @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* INPUT - NONE                                          @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* OUTPUT - ZERO REASON AND RETURN CODES                 @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*VIOENDR:                                                          0181
*   PROCEDURE OPTIONS(SAVE,SAVEAREA);/*                      @Y30LB23*/
*                                                                  0181
VIOENDR  STM   @14,@12,12(@13)                                     0181
         ST    @13,@SA00005+4                                      0181
         LA    @14,@SA00005                                        0181
         ST    @14,8(,@13)                                         0181
         LR    @13,@14                                             0181
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* ZERO THE RPLVTYP FIELD AS VSAM ISN'T EXPECTING        @Y30LB23*/
*   /* A NON-ZERO VALUE ON ENTRY TO ENDREQ                   @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0182
*   RPLVTYP=0;                      /*                       @Y30LB23*/
*                                                                  0182
         MVI   RPLVTYP(RPLVPTR),X'00'                              0182
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* ISSUE THE ENDREQ MACRO WITH REGISTER ONE              @Y30LB23*/
*   /* POINTING TO THE VSAM RPL                              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   RESPECIFY                                                      0183
*     REG1 RSTD;                    /*                       @Y30LB23*/
*   REG1=ADDR(RPLVSAM);             /*                       @Y30LB23*/
         LA    REG1,RPLVSAM(,RPLVPTR)                              0184
*LENDREQ1:                                                         0185
*   GEN(ENDREQ RPL=(REG1));         /*                       @Y30LB23*/
LENDREQ1 ENDREQ RPL=(REG1)
*   RESPECIFY                                                      0186
*     REG1 UNRSTD;                  /*                       @Y30LB23*/
*                                                                  0186
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* CHECK FOR NON-ZERO RETURN CODE FROM VSAM              @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0187
*   RESPECIFY                                                      0187
*     REG15 RSTD;                   /*                       @Y30LB23*/
*   IF REG15^=0 THEN                                               0188
         LTR   REG15,REG15                                         0188
         BZ    @RF00188                                            0188
*     DO;                           /*                       @Y30LB23*/
*                                                                  0189
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* A CONDITION REQUIRING AN ERROR MESSAGE            @Y30LB23*/
*       /* EXISTS                                            @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0190
*       RESPECIFY                                                  0190
*         REG15 UNRSTD;             /*                       @Y30LB23*/
*       CALL VIOMSG;                /*                       @Y30LB23*/
         BAL   @14,VIOMSG                                          0191
*       RPLVRETC=ZERO;              /*                       @Y30LB23*/
         MVC   RPLVRETC(2,RPLVPTR),@CB00774                        0192
*       RPLRCODE=ZERO;              /*                       @Y30LB23*/
         MVC   RPLRCODE(2,RPLVPTR),@CB00774                        0193
*       RETURN;                     /*                       @Y30LB23*/
@EL00005 L     @13,4(,@13)                                         0194
@EF00005 DS    0H                                                  0194
@ER00005 LM    @14,@12,12(@13)                                     0194
         BR    @14                                                 0194
*     END;                          /*                       @Y30LB23*/
*   END VIOENDR;                    /*                       @Y30LB23*/
         B     @EL00005                                            0196
*                                                                  0197
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* PROCEDURE NAME - VIOMSG                               @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* FUNCTION - PRINT A MESSAGE CONTAINING THE VSAM        @Y30LB23*/
*   /* RETURN CODE AND FEEDBACK CODE. IF A                   @Y30LB23*/
*   /* PHYSICAL I/O ERROR HAS OCCURRED,                      @Y30LB23*/
*   /* PRINT THE PERTINENT PARTS OF                          @Y30LB23*/
*   /* THE VSAM FORMATTED PHYSICAL I/O                       @Y30LB23*/
*   /* ERROR MESSAGE                                         @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* INPUT - NONE                                          @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /* OUTPUT - ERROR MESSAGES                               @Y30LB23*/
*   /* REASON AND RETURN CODES                               @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*VIOMSG:                                                           0197
*   PROCEDURE OPTIONS(SAVE,SAVEAREA);/*                      @Y30LB23*/
*                                                                  0197
VIOMSG   STM   @14,@12,12(@13)                                     0197
         ST    @13,@SA00006+4                                      0197
         LA    @14,@SA00006                                        0197
         ST    @14,8(,@13)                                         0197
         LR    @13,@14                                             0197
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* CONVERT THE VSAM RETURN CODE TO CHARACTER FORM        @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0198
*   CVD(RPLRTNCD,DBLWORD);          /*                       @Y30LB23*/
         LA    @02,56                                              0198
         ALR   @02,RPLVPTR                                         0198
         SLR   @15,@15                                             0198
         IC    @15,RPLRTNCD(,@02)                                  0198
         CVD   @15,DBLWORD                                         0198
*   UNPK(DBLWORD(1:2),DBLWORD(7:8));/*                       @Y30LB23*/
         UNPK  DBLWORD(2),DBLWORD+6(2)                             0199
*   MVZ(DBLWORD(2),DBLWORD(1));     /*                       @Y30LB23*/
*                                                                  0200
         MVZ   DBLWORD+1(1),DBLWORD                                0200
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* CONVERT THE VSAM FEEDBACK CODE TO CHARACTER FORM      @ZA05095*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0201
*   CVD(RPLERRCD,DBLWORD2);         /*                       @ZA05095*/
         SLR   @15,@15                                             0201
         IC    @15,RPLERRCD(,@02)                                  0201
         CVD   @15,DBLWORD2                                        0201
*   UNPK(DBLWORD2(1:3),DBLWORD2(7:8));/*                     @ZA09533*/
         UNPK  DBLWORD2(3),DBLWORD2+6(2)                           0202
*   MVZ(DBLWORD2(3),DBLWORD2(1));   /*                       @ZA09533*/
*                                                                  0203
         MVZ   DBLWORD2+2(1),DBLWORD2                              0203
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       #Y30LB23*/
*   /* PRINT A MESSAGE CONTAINING THE VSAM RETURN AND        @Y30LB23*/
*   /* FEEDBACK CODES                                        @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0204
*   MSGRQ=MSGRQ&&MSGRQ;             /*                       @Y30LB23*/
         XC    MSGRQ(32),MSGRQ                                     0204
*   MSGID=RQSTCOD;                  /*                       @Y30LB23*/
         MVC   MSGID(4),@CF00770                                   0205
*   MSGRPLV=RPLVPTR;                /*                       @Y30LB23*/
         ST    RPLVPTR,MSGRPLV                                     0206
*   MSGLEN1=2;                      /*                       @Y30LB23*/
         MVI   MSGLEN1,X'02'                                       0207
*   MSGTEXT1=ADDR(DBLWORD);         /*                       @Y30LB23*/
         LA    @02,DBLWORD                                         0208
         STCM  @02,7,MSGTEXT1                                      0208
*   MSGLEN2=3;                      /*                       @ZA09533*/
         MVI   MSGLEN2,X'03'                                       0209
*   MSGTEXT2=ADDR(DBLWORD2);        /*                       @ZA05095*/
         LA    @02,DBLWORD2                                        0210
         STCM  @02,7,MSGTEXT2                                      0210
*   RESPECIFY                                                      0211
*     REG1 RSTD;                    /*                       @Y30LB23*/
*   REG1=ADDR(MSGRQ);               /*                       @Y30LB23*/
         LA    REG1,MSGRQ                                          0212
*   CALL ICBVOP00;                  /*                       @Y30LB23*/
         L     @15,@CV00783                                        0213
         BALR  @14,@15                                             0213
*   RESPECIFY                                                      0214
*     REG1 UNRSTD;                  /*                       @Y30LB23*/
*                                                                  0214
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30LB23*/
*   /* IF A PHYSICAL I/O ERROR HAS OCCURRED, PRINT THE       @Y30LB23*/
*   /* PERTINENT PARTS OF THE VSAM FORMATTED                 @Y30LB23*/
*   /* PHYSICAL I/O ERROR MESSAGE                            @Y30LB23*/
*   /*                                                       @Y30LB23*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0215
*   IF RPLRTNCD=12 THEN                                            0215
         CLI   RPLRTNCD+56(RPLVPTR),12                             0215
         BNE   @RF00215                                            0215
*     DO;                           /*                       @Y30LB23*/
*       MSGRQ=MSGRQ&&MSGRQ;         /*                       @Y30LB23*/
         XC    MSGRQ(32),MSGRQ                                     0217
*       MSGID=IOERR;                /*                       @Y30LB23*/
         MVC   MSGID(4),@CF00772                                   0218
*       MSGRPLV=RPLVPTR;            /*                       @Y30LB23*/
         ST    RPLVPTR,MSGRPLV                                     0219
*       MSGLEN1=36;                 /*                       @Y30LB23*/
         MVI   MSGLEN1,X'24'                                       0220
*       MSGTEXT1=ADDR(MSGBUFF);     /*                       @Y30LB23*/
*                                                                  0221
         LA    @02,MSGBUFF                                         0221
         STCM  @02,7,MSGTEXT1                                      0221
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* COMPLETION INFORMATION FOR THE FIRST              @Y30LB23*/
*       /* MESSAGE PRINTING INCLUDING RBA OF RECORD          @Y30LB23*/
*       /* IN ERROR, 'DATA' OR 'INDEX' INDICATOR,            @Y30LB23*/
*       /* VOLUME SERIAL NUMBER, CUU, DEVICE TYPE,           @Y30LB23*/
*       /* AND CHANNEL COMMAND.                              @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0222
*       MSGBUFF(1:23)=PHYERMSG(28:50);/*                     @Y30LB23*/
         MVC   MSGBUFF(23),PHYERMSG+27                             0222
*       MSGBUFF(24:30)=PHYERMSG(69:75);/*                    @Y30LB23*/
         MVC   MSGBUFF+23(7),PHYERMSG+68                           0223
*       MSGBUFF(31:36)=PHYERMSG(85:90);/*                    @Y30LB23*/
         MVC   MSGBUFF+30(6),PHYERMSG+84                           0224
*       RESPECIFY                                                  0225
*         REG1 RSTD;                /*                       @Y30LB23*/
*       REG1=ADDR(MSGRQ);           /*                       @Y30LB23*/
         LA    REG1,MSGRQ                                          0226
*       CALL ICBVOP00;              /*                       @Y30LB23*/
         L     @15,@CV00783                                        0227
         BALR  @14,@15                                             0227
*       RESPECIFY                                                  0228
*         REG1 UNRSTD;              /*                       @Y30LB23*/
*       MSGLEN1=30;                 /*                       @Y30LB23*/
*                                                                  0229
         MVI   MSGLEN1,X'1E'                                       0229
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @Y30LB23*/
*       /* COMPLETION INFORMATION FOR THE SECOND             @Y30LB23*/
*       /* MESSAGE PRINTING INCLUDING EITHER 'UNIT           @Y30LB23*/
*       /* CHECK' OR THE TYPE OF UNIT CHECK, AND             @Y30LB23*/
*       /* THE BBCCHHR.                                      @Y30LB23*/
*       /*                                                   @Y30LB23*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0230
*       MSGBUFF(1:30)=PHYERMSG(92:121);/*                    @Y30LB23*/
         MVC   MSGBUFF(30),PHYERMSG+91                             0230
*       RESPECIFY                                                  0231
*         REG1 RSTD;                /*                       @Y30LB23*/
*       CALL ICBVOP00;              /*                       @Y30LB23*/
         L     @15,@CV00783                                        0232
         BALR  @14,@15                                             0232
*       RESPECIFY                                                  0233
*         REG1 UNRSTD;              /*                       @Y30LB23*/
*     END;                          /*                       @Y30LB23*/
*   RPLVRETC=FOUR;                  /*                       #Y30LB23*/
@RF00215 MVC   RPLVRETC(2,RPLVPTR),@CB00778                        0235
*   RPLRCODE=PLERR;                 /*                       #Y30LB23*/
         MVC   RPLRCODE(2,RPLVPTR),@CB00761                        0236
*   END VIOMSG;                     /*                       @Y30LB23*/
@EL00006 L     @13,4(,@13)                                         0237
@EF00006 DS    0H                                                  0237
@ER00006 LM    @14,@12,12(@13)                                     0237
         BR    @14                                                 0237
*   END ICBVIO00                    /*                       @Y30LB23*/
*                                                                  0238
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IEZNGVR )                                       */
*/*%INCLUDE SYSLIB  (IEZGROUP)                                       */
*/*%INCLUDE SYSLIB  (IEZGVSNE)                                       */
*/*%INCLUDE SYSLIB  (IEZBASEV)                                       */
*/*%INCLUDE SYSLIB  (IEZCOPYV)                                       */
*/*%INCLUDE SYSLIB  (IEZDUPV )                                       */
*/*%INCLUDE SYSLIB  (IEZBCDV )                                       */
*/*%INCLUDE SYSLIB  (IEZINDEX)                                       */
*/*%INCLUDE SYSLIB  (IEZCPUID)                                       */
*/*%INCLUDE SYSLIB  (IEZVVICB)                                       */
*/*%INCLUDE SYSLIB  (IEZRPLV )                                       */
*/*%INCLUDE SYSLIB  (IEZMSGRQ)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*                                                                  0238
*       ;                                                          0238
@DATA    DS    0H
@CH00752 DC    H'128'
         DS    0F
@SA00001 DS    18F
@SA00002 DS    18F
@SA00003 DS    18F
@SA00004 DS    18F
@SA00005 DS    18F
@SA00006 DS    18F
         DS    0F
@CF00089 DC    F'4'
@CF00036 DC    F'8'
@CF00772 DC    F'405'
@CF00768 DC    F'413'
@CF00770 DC    F'414'
@CV00783 DC    V(ICBVOP00)
         DS    0D
NGVRPTR  DS    A
GROUPPTR DS    A
GVSNEPTR DS    A
BASEVPTR DS    A
COPYVPTR DS    A
DUPVPTR  DS    A
BCDVPTR  DS    A
INDEXPTR DS    A
CPUIDPTR DS    A
RECADDR  DS    A
@CB00755 DC    X'020B'
@CB00758 DC    X'020A'
@CB00761 DC    X'0209'
@CB00763 DC    X'0208'
@CB00765 DC    X'0213'
@CB00774 DC    X'0000'
@CB00778 DC    X'0004'
         DS    CL2
MSGRQ    DS    CL32
         ORG   MSGRQ
MSGID    DS    FL4
MSGRPLV  DS    AL4
MSGRLEN  DS    BL1
MSGREPLY DS    AL3
MSGLEN1  DS    BL1
MSGTEXT1 DS    AL3
MSGLEN2  DS    BL1
MSGTEXT2 DS    AL3
MSGLEN3  DS    BL1
MSGTEXT3 DS    AL3
MSGLEN4  DS    BL1
MSGTEXT4 DS    AL3
MSGLEN5  DS    BL1
MSGTEXT5 DS    AL3
         ORG   MSGRQ+32
PHYERMSG DS    CL128
DBLWORD  DS    CL8
DBLWORD2 DS    CL8
MSGBUFF  DS    CL36
VIOPATCH DS    CL100
         ORG   VIOPATCH
@NM00047 DC    100X'00'
         ORG   VIOPATCH+100
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPLVPTR  EQU   @03
VVIPTR   EQU   @04
REG1     EQU   @01
REG15    EQU   @15
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBOPEN  EQU   ACBOFLGS
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
NGVR     EQU   0
NGVRTYPE EQU   NGVR+13
GROUP    EQU   0
GRONAME  EQU   GROUP
GROID    EQU   GRONAME+11
GROFLAGA EQU   GROUP+13
GROTYPE  EQU   GROFLAGA
GROERRTS EQU   GROUP+56
GVSNE    EQU   0
GVSHDR   EQU   GVSNE
GVSNAME  EQU   GVSHDR
GVSID    EQU   GVSNAME+11
GVSFLAGA EQU   GVSHDR+13
GVSTYPE  EQU   GVSFLAGA
GVSSLOTS EQU   GVSNE+28
GVSVOLFL EQU   GVSSLOTS+6
BASEV    EQU   0
BASNAME  EQU   BASEV
BASID    EQU   BASNAME+11
BASFLAGA EQU   BASEV+14
BASTYPE  EQU   BASFLAGA
BASRCVYF EQU   BASEV+20
BASSATIA EQU   BASRCVYF
BASMISCF EQU   BASRCVYF+2
BASLIB1  EQU   BASEV+36
BASLID1  EQU   BASLIB1
BASLIB2  EQU   BASEV+49
BASLID2  EQU   BASLIB2
BASKLCPY EQU   BASEV+76
BASCOPID EQU   BASKLCPY+11
COPYV    EQU   0
COPNAME  EQU   COPYV
COPID    EQU   COPNAME+11
COPFLAGA EQU   COPYV+14
COPTYPE  EQU   COPFLAGA
COPRCVYF EQU   COPYV+20
COPSATIA EQU   COPRCVYF
COPMISCF EQU   COPRCVYF+2
COPLIB1  EQU   COPYV+36
COPLID1  EQU   COPLIB1
COPLIB2  EQU   COPYV+49
COPLID2  EQU   COPLIB2
DUPV     EQU   0
DUPNAME  EQU   DUPV
DUPID    EQU   DUPNAME+11
DUPFLAGA EQU   DUPV+14
DUPTYPE  EQU   DUPFLAGA
DUPRCVYF EQU   DUPV+20
DUPLIB1  EQU   DUPV+36
DUPLID1  EQU   DUPLIB1
DUPLIB2  EQU   DUPV+49
DUPLID2  EQU   DUPLIB2
BCDV     EQU   0
BCDNAME  EQU   BCDV
BCDPREFX EQU   BCDNAME
BCDID    EQU   BCDNAME+11
BCDFLAGA EQU   BCDV+14
BCDTYPE  EQU   BCDFLAGA
BCDFLAGB EQU   BCDFLAGA+2
BCDRCVYF EQU   BCDV+20
BCDSATIA EQU   BCDRCVYF
BCDMISCF EQU   BCDRCVYF+2
BCDLIB1  EQU   BCDV+36
BCDLID1  EQU   BCDLIB1
BCDLIB2  EQU   BCDV+49
BCDLID2  EQU   BCDLIB2
INDEX    EQU   0
INDNAME  EQU   INDEX
INDTYPE  EQU   INDEX+13
INDRECKY EQU   INDEX+15
INDPREFX EQU   INDRECKY
INDRECID EQU   INDRECKY+11
CPUID    EQU   0
CPUTYPE  EQU   CPUID+18
CPUMAP   EQU   CPUID+20
VVICB    EQU   0
VVIFLGA  EQU   VVICB+15
VVIFLG1  EQU   VVIFLGA
VVIACBAD EQU   VVICB+16
RPLV     EQU   0
RPLTCBPR EQU   RPLV+8
RPLVVICB EQU   RPLV+12
RPLFLAGA EQU   RPLV+28
RPLRCODE EQU   RPLV+32
RPLVRETC EQU   RPLV+34
RPLVSAM  EQU   RPLV+56
RPLVTYP  EQU   RPLVSAM+2
RPLVBUF  EQU   RPLVSAM+32
RPLVOPT  EQU   RPLVSAM+40
RPLVLOC  EQU   RPLVOPT
RPLVBLN  EQU   RPLVSAM+52
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLKEY   EQU   RPLOPT2
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLNEXIT EQU   RPLEXTD1
RPLEMLEN EQU   RPLCOMN+70
RPLERMSA EQU   RPLCOMN+72
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00046 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00045 EQU   RPLRBAR+3
@NM00044 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00043 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
RPLVUTIL EQU   RPLV+132
RPLVRLN  EQU   RPLVSAM+48
@NM00042 EQU   RPLVSAM+44
RPLVUPD  EQU   RPLVOPT+1
@NM00041 EQU   RPLVOPT
RPLVKGE  EQU   RPLVOPT
@NM00040 EQU   RPLVOPT
RPLVNEXT EQU   RPLVOPT
RPLVDIR  EQU   RPLVOPT
RPLVKEY  EQU   RPLVSAM+36
@NM00039 EQU   RPLVSAM+28
RPLVACB  EQU   RPLVSAM+24
@NM00038 EQU   RPLVSAM+3
@NM00037 EQU   RPLVSAM
@NM00036 EQU   RPLV+38
RPLRMSCC EQU   RPLV+36
RPLVTLEN EQU   RPLV+30
RPLVRES1 EQU   RPLFLAGA+1
RPLVJRNL EQU   RPLFLAGA
RPLJRCVY EQU   RPLFLAGA
RPLVVOP  EQU   RPLFLAGA
RPLVVIN  EQU   RPLFLAGA
RPLVCOMP EQU   RPLFLAGA
RPLVPROG EQU   RPLFLAGA
RPLVPOST EQU   RPLFLAGA
RPLFTIME EQU   RPLFLAGA
RPLVRSV3 EQU   RPLV+24
RPLVRSV2 EQU   RPLV+20
RPLVRSV1 EQU   RPLV+16
RPLASCBP EQU   RPLTCBPR
RPLVECB  EQU   RPLV+4
RPLVQPTR EQU   RPLV
VVIUNUSD EQU   VVICB+116
VVINUSDC EQU   VVICB+112
VVITPFCH EQU   VVICB+108
VVIDVMEL EQU   VVICB+104
VVIVBSTF EQU   VVICB+100
VVISSOBA EQU   VVICB+96
VVIVSCRA EQU   VVICB+92
VVISTPTB EQU   VVICB+88
VVIDVMTA EQU   VVICB+84
VVIJUCB  EQU   VVICB+80
VVIIUCB  EQU   VVICB+76
VVIRES6  EQU   VVICB+72
VVIRES5  EQU   VVICB+68
VVIRES4  EQU   VVICB+64
VVIUCB   EQU   VVICB+60
VVIVJL   EQU   VVICB+56
VVIVRR   EQU   VVICB+52
VVIQLSPL EQU   VVICB+48
VVIQRPL2 EQU   VVICB+44
VVIQRPL1 EQU   VVICB+40
VVIRES3  EQU   VVICB+36
VVIVQMP  EQU   VVICB+32
VVIECB1  EQU   VVICB+28
VVICATAD EQU   VVICB+24
VVIDCBAD EQU   VVICB+20
VVIFLG7  EQU   VVIFLGA
VVIFLG6  EQU   VVIFLGA
VVIFLG5  EQU   VVIFLGA
VVIFLG4  EQU   VVIFLGA
VVIFLG3  EQU   VVIFLGA
VVIFLG2  EQU   VVIFLGA
VVIFLG0  EQU   VVIFLGA
VVIALCON EQU   VVICB+14
VVICPUID EQU   VVICB+12
VVIUCAT  EQU   VVICB+4
VVICID   EQU   VVICB
@NM00035 EQU   CPUID+150
CPUPURGE EQU   CPUID+148
CPUMASK  EQU   CPUMAP+6
@NM00034 EQU   CPUMAP+5
CPUIDREC EQU   CPUMAP
CPURES2  EQU   CPUTYPE
CPUASSOC EQU   CPUTYPE
CPURES1  EQU   CPUTYPE
CPUDNEXT EQU   CPUID+16
CPUINEXT EQU   CPUID+14
@NM00033 EQU   CPUID+13
CPUNAME  EQU   CPUID
@NM00032 EQU   INDEX+28
INDEXREC EQU   INDRECID+1
INDBLNK2 EQU   INDRECID
INDVSRNO EQU   INDRECKY+5
INDBLNK1 EQU   INDPREFX+1
INDALPHA EQU   INDPREFX
INDRES2  EQU   INDTYPE
INDINDEX EQU   INDTYPE
INDRES1  EQU   INDTYPE
INDSERNO EQU   INDNAME+1
INDI     EQU   INDNAME
BCD2BIT2 EQU   BCDLID2
BCD2BIT1 EQU   BCDLID2
BCDRES8  EQU   BCDLIB2
BCDCSN2  EQU   BCDV+37
BCD1BIT2 EQU   BCDLID1
BCD1BIT1 EQU   BCDLID1
BCDRE10  EQU   BCDLIB1
BCDCSN1  EQU   BCDV+24
BCDRES7A EQU   BCDMISCF
BCDHOLD  EQU   BCDMISCF
BCDRES7  EQU   BCDSATIA
BCDVSMIS EQU   BCDSATIA
BCDIVCPY EQU   BCDSATIA
BCDIVCRE EQU   BCDSATIA
BCDCPUID EQU   BCDV+18
BCDRES5  EQU   BCDFLAGB+1
BCDREASS EQU   BCDFLAGB+1
BCDRES4  EQU   BCDFLAGB
BCDRES3  EQU   BCDTYPE
BCDDUP   EQU   BCDTYPE
BCDRES2  EQU   BCDTYPE
BCDCOPY  EQU   BCDTYPE
BCDBASE  EQU   BCDTYPE
BCDRES1  EQU   BCDTYPE
BCDRES9  EQU   BCDV+13
BCDINDEX EQU   BCDID+1
BCDBLNK2 EQU   BCDID
BCDSERNO EQU   BCDNAME+5
BCDBLNK1 EQU   BCDPREFX+1
BCDALPHA EQU   BCDPREFX
@NM00031 EQU   DUPV+50
DUP2BIT2 EQU   DUPLID2
DUP2BIT1 EQU   DUPLID2
DUPRES4  EQU   DUPLIB2
DUPCSN2  EQU   DUPV+37
DUP1BIT2 EQU   DUPLID1
DUP1BIT1 EQU   DUPLID1
DUPRES3  EQU   DUPLIB1
DUPCSN1  EQU   DUPV+24
DUPMISCF EQU   DUPRCVYF+2
DUPSATIA EQU   DUPRCVYF
@NM00030 EQU   DUPV+18
@NM00029 EQU   DUPFLAGA+2
DUPRES2  EQU   DUPTYPE
DUPDUPLR EQU   DUPTYPE
DUPRES1  EQU   DUPTYPE
DUPRES5  EQU   DUPV+13
DUPNO    EQU   DUPID+1
DUPBLANK EQU   DUPID
DUPSERNO EQU   DUPNAME+5
DUPD     EQU   DUPNAME
@NM00028 EQU   COPYV+136
COPFREXT EQU   COPYV+132
COPLEXT  EQU   COPYV+130
COPFRESP EQU   COPYV+128
COPOWNER EQU   COPYV+118
COPDEST  EQU   COPYV+88
COPDESCR EQU   COPYV+58
COPDTREM EQU   COPYV+54
COPDATE  EQU   COPYV+50
COP2BIT2 EQU   COPLID2
COP2BIT1 EQU   COPLID2
COPRES5  EQU   COPLIB2
COPCSN2  EQU   COPYV+37
COP1BIT2 EQU   COPLID1
COP1BIT1 EQU   COPLID1
COPRES4  EQU   COPLIB1
COPCSN1  EQU   COPYV+24
@NM00027 EQU   COPMISCF
COPHOLD  EQU   COPMISCF
COPRES3  EQU   COPSATIA
COPVSMIS EQU   COPSATIA
COPIVCPY EQU   COPSATIA
COPIVCRE EQU   COPSATIA
@NM00026 EQU   COPYV+18
@NM00025 EQU   COPFLAGA+3
COPDLSPF EQU   COPFLAGA+3
COPRONLY EQU   COPFLAGA+3
COPDAERA EQU   COPFLAGA+2
COPEXCL  EQU   COPFLAGA+2
COPBIND  EQU   COPFLAGA+2
COPBKUP  EQU   COPFLAGA+2
COPRSTD  EQU   COPFLAGA+2
COPGENUS EQU   COPFLAGA+2
COPVSAM  EQU   COPFLAGA+2
COPGROUP EQU   COPFLAGA+2
COPRES2  EQU   COPTYPE
COPCOPYV EQU   COPTYPE
COPRES1  EQU   COPTYPE
COPRES6  EQU   COPYV+13
COPNO    EQU   COPID+1
COPBLANK EQU   COPID
COPSERNO EQU   COPNAME+5
COPV     EQU   COPNAME
@NM00024 EQU   BASEV+192
BASXPDT2 EQU   BASEV+188
BASGROUP EQU   BASEV+180
BASRECOV EQU   BASEV+174
BASDEST  EQU   BASEV+144
BASOWNER EQU   BASEV+134
BASDESCR EQU   BASEV+104
BASDTREM EQU   BASEV+100
BASEXPDT EQU   BASEV+96
BASDLMTD EQU   BASEV+92
BASRES6  EQU   BASEV+89
BASCOPNO EQU   BASCOPID+1
BASCOPBK EQU   BASCOPID
BASCOPSN EQU   BASKLCPY+5
BASCOPV  EQU   BASKLCPY
BASFREXT EQU   BASEV+72
BASLEXT  EQU   BASEV+70
BASFRESP EQU   BASEV+68
@NM00023 EQU   BASEV+65
BASBKLMT EQU   BASEV+64
BASNBKUP EQU   BASEV+63
BASNCOPY EQU   BASEV+62
BASNEXTV EQU   BASEV+56
BASPREV  EQU   BASEV+50
BAS2BIT2 EQU   BASLID2
BAS2BIT1 EQU   BASLID2
BASRES5  EQU   BASLIB2
BASCSN2  EQU   BASEV+37
BAS1BIT2 EQU   BASLID1
BAS1BIT1 EQU   BASLID1
BASRES4  EQU   BASLIB1
BASCSN1  EQU   BASEV+24
BASRES3  EQU   BASMISCF
BASHOLD  EQU   BASMISCF
BASRES8  EQU   BASSATIA
BASVSMIS EQU   BASSATIA
BASIVCPY EQU   BASSATIA
BASIVCRE EQU   BASSATIA
BASCPUID EQU   BASEV+18
@NM00022 EQU   BASFLAGA+3
BASLAST  EQU   BASFLAGA+3
BASFIRST EQU   BASFLAGA+3
BASREASS EQU   BASFLAGA+3
BASRONLY EQU   BASFLAGA+3
BASDAERA EQU   BASFLAGA+3
BASEXCL  EQU   BASFLAGA+2
BASBIND  EQU   BASFLAGA+2
BASINAC  EQU   BASFLAGA+2
BASRSTD  EQU   BASFLAGA+2
BASGENUS EQU   BASFLAGA+2
BASGRPV  EQU   BASFLAGA+2
BASNOCPY EQU   BASFLAGA+2
BASDLSF  EQU   BASFLAGA+2
BASRES2  EQU   BASTYPE
BASBASVR EQU   BASTYPE
BASRES1  EQU   BASTYPE
BASRES7  EQU   BASEV+13
BASZERO  EQU   BASID+1
BASBLANK EQU   BASID
BASSERNO EQU   BASNAME+5
BASEVKEY EQU   BASNAME
GVSMTDSP EQU   GVSSLOTS+18
GVSEXPDT EQU   GVSSLOTS+14
GVSLEXT  EQU   GVSSLOTS+12
GVSFRESP EQU   GVSSLOTS+10
@NM00021 EQU   GVSVOLFL+2
GVSMTNSH EQU   GVSVOLFL+2
GVSRCFSI EQU   GVSVOLFL+2
GVSCPUBM EQU   GVSVOLFL
GVSVOLID EQU   GVSSLOTS
@NM00020 EQU   GVSHDR+20
GVSESIND EQU   GVSHDR+18
@NM00019 EQU   GVSHDR+17
@NM00018 EQU   GVSFLAGA+2
GVSEX    EQU   GVSFLAGA+2
@NM00017 EQU   GVSTYPE
GVSGVSEX EQU   GVSTYPE
@NM00016 EQU   GVSTYPE
GVSNO    EQU   GVSID+1
GVSRES1  EQU   GVSID
GVSVVGRP EQU   GVSNAME+3
GVSG     EQU   GVSNAME
@NM00015 EQU   GROUP+136
GROADDR  EQU   GROUP+106
GROOWNER EQU   GROUP+96
GRORESSP EQU   GROUP+95
GROCONUS EQU   GROUP+94
GRODESCR EQU   GROUP+64
GROERRTM EQU   GROERRTS+4
GROERRDT EQU   GROERRTS
GRORETPD EQU   GROUP+52
GROFREXT EQU   GROUP+48
GROFRESP EQU   GROUP+44
GROSTRSH EQU   GROUP+40
GROSSPD  EQU   GROUP+38
GROPSPD  EQU   GROUP+36
GRONINAC EQU   GROUP+34
GRONRSTD EQU   GROUP+32
GRONGEN  EQU   GROUP+30
GROPCENT EQU   GROUP+29
GROLSN   EQU   GROUP+23
GROFSN   EQU   GROUP+17
@NM00014 EQU   GROFLAGA+2
GROMSG1  EQU   GROFLAGA+2
GRORETN  EQU   GROFLAGA+2
GRORLSE  EQU   GROFLAGA+2
GRORONLY EQU   GROFLAGA+2
GRODAERA EQU   GROFLAGA+2
GROEXCL  EQU   GROFLAGA+2
GROBIND  EQU   GROFLAGA+2
GRORES1  EQU   GROTYPE
GROGVR   EQU   GROTYPE
GROZERO  EQU   GROID+1
GROBLANK EQU   GROID
GROVVGRP EQU   GRONAME+3
GROG     EQU   GRONAME
@NM00013 EQU   NGVR+32
NGVNOVOL EQU   NGVR+30
@NM00012 EQU   NGVR+29
NGVLVOL  EQU   NGVR+23
NGVFVOL  EQU   NGVR+17
@NM00011 EQU   NGVR+15
NGVRES2  EQU   NGVRTYPE+1
NGVHDR   EQU   NGVRTYPE
NGVRES1  EQU   NGVRTYPE
NGVNAME  EQU   NGVR
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00010 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00009 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00008 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00007 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00006 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00005 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00004 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00003 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00002 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00001 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00133 EQU   @EL00002
@RF00144 EQU   @EL00002
@RF00153 EQU   @EL00003
@RF00174 EQU   @EL00004
@RF00188 EQU   @EL00005
@ENDDATA EQU   *
         END   ICBVIO00,(C'PLS1834',0603,76279)
