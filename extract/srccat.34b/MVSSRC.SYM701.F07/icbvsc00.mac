         TITLE '************ ICBVSC00 - MSVC SCREENING MODULE **********
               ****     '
ICBVSC00 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ICBVSC00  77.355'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*   PARMPTR=REG1;                   /* SAVE PARM LIST ADDR   @G24LB18*/
         LR    PARMPTR,REG1                                        0118
*   VVIPTR=ICBVVICB;                /* SET UP MSVC CB PTR    @G24LB18*/
         L     @10,CVTPTR                                          0119
         L     @10,CVTEXT2(,@10)                                   0119
         L     @10,CVTICB(,@10)                                    0119
         L     @10,ICBVVICB(,@10)                                  0119
         ST    @10,VVIPTR                                          0119
*   RFY                                                            0120
*     REG1 UNRSTD;                  /* UNRESTRICT REG 1      @G24LB18*/
*   RFY                                                            0121
*     UNITP BASED(ADDR(UNITRPL));   /* BASE UNITP PARM LIST  @G24LB18*/
*   RFY                                                            0122
*     TABP BASED(ADDR(TABPRPL));    /* BASE TABP PARM LIST   @G24LB18*/
*   RFY                                                            0123
*     SELRB BASED(PARMPTR);         /* BASE SELECT REQ BLK   @G24LB18*/
*   RFY                                                            0124
*     TRMRB BASED(PARMPTR);         /* BASE TERMINATE REQ BK @G24LB18*/
*                                                                  0125
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE RETURN AND REASON CODES                    @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0125
*   RETURNCD=ZERO;                  /* SET RETURN CODE=0     @G24LB18*/
         SLR   @10,@10                                             0125
         ST    @10,RETURNCD                                        0125
*   REASONCD=SUCCESS;               /* SET REASON CODE=0     @G24LB18*/
         ST    @10,REASONCD                                        0126
*                                                                  0127
*   /*****************************************************************/
*   /*                                                               */
*   /* SHIFT THE ENTRY INDICATORS PASSED IN THE HIGH ORDER   @G24LB18*/
*   /* BYTE OF REG 0 TO THE LOW ORDER BYTE OF REG 3 AND TEST @G24LB18*/
*   /* FOR SECOND ENTRY ON THIS REQUEST. IF SO, RETURN TO    @G24LB18*/
*   /* MSSC SVC.                                             @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*   REG3=REG0;                      /* GET ENTRY INDICATORS  @G24LB18*/
         LR    REG3,REG0                                           0127
*   GEN(SRL REG3,M24);              /* SHIFT TO LOW ORD BYTE @G24LB18*/
         SRL REG3,M24
*   IF REG3=SECENTRY THEN           /* IS IT SECOND ENTRY?   @G24LB18*/
         SLR   @10,@10                                             0129
         IC    @10,SECENTRY                                        0129
         CR    REG3,@10                                            0129
         BE    @RT00129                                            0129
*     GO TO EXIT;                   /* YES - EXIT            @G24LB18*/
*                                                                  0131
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE OPCODE OF THE PASSED REQUEST AND CALL THE   @G24LB18*/
*   /* APPROPRIATE PROCEDURE TO PROCESS IT.                  @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0131
*                                                                  0131
*   /*****************************************************************/
*   /*                                                               */
*   /* EOV ACQUIRE REQUEST                                   @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0131
*   IF OPCODE=ACQUIRE THEN          /* IS THIS AN ACQUIRE?   @G24LB18*/
         CLI   OPCODE(PARMPTR),X'02'                               0131
         BNE   @RF00131                                            0131
*     DO;                           /* YES                   @G24LB18*/
*       CALL EOVACQRE;              /* CALL EOV ACQUIRE RTN  @G24LB18*/
         BAL   @14,EOVACQRE                                        0133
*       GO TO EXIT;                 /* EXIT                  @G24LB18*/
         B     EXIT                                                0134
*     END;                          /* WITH RETURN CODE =0   @G24LB18*/
*                                                                  0135
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATION TERMINATE REQUEST                          @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*   IF OPCODE=TERMINAT THEN         /* IS IT A TERMINATE REQ?@G24LB18*/
@RF00131 CLI   OPCODE(PARMPTR),X'8A'                               0136
         BNE   @RF00136                                            0136
*     DO;                           /* YES                   @G24LB18*/
*       CALL ALLOCTRM;              /* CALL TERMINATE RTN    @G24LB18*/
         BAL   @14,ALLOCTRM                                        0138
*       GO TO EXIT;                 /* EXIT                  @G24LB18*/
         B     EXIT                                                0139
*     END;                          /* WITH RETURN CODE =0   @G24LB18*/
*                                                                  0140
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATION SELECT REQUEST                             @G24LB18*/
*   /*                                                       @G24LB18*/
*   /* IF THIS IS AN ABNORMAL TERMINATION CALL ON A SELECT   @G24LB18*/
*   /* REQUEST, RETURN TO MSSC SVC WITHOUT PROCESSING THE    @G24LB18*/
*   /* REQUEST. OTHERWISE, PROCESS IT NORMALLY.              @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*   IF OPCODE=SELECT THEN           /* IS IT A SELECT REQ    @G24LB18*/
@RF00136 CLI   OPCODE(PARMPTR),X'89'                               0141
         BNE   @RF00141                                            0141
*     DO;                           /* YES                   @G24LB18*/
*       IF REG3=ABTRMIO×            /* ABNORMAL TERMINATION? @G24LB18*/
*           REG3=ABTRMNIO THEN      /*                       @G24LB18*/
         SLR   @10,@10                                             0143
         IC    @10,ABTRMIO                                         0143
         CR    REG3,@10                                            0143
         BE    @RT00143                                            0143
         SLR   @10,@10                                             0143
         IC    @10,ABTRMNIO                                        0143
         CR    REG3,@10                                            0143
         BE    @RT00143                                            0143
*         GO TO EXIT;               /* YES - EXIT            @G24LB18*/
*       CALL ALLOCSEL;              /* CALL SELECT RTN       @G24LB18*/
         BAL   @14,ALLOCSEL                                        0145
*       GO TO EXIT;                 /* EXIT                  @G24LB18*/
         B     EXIT                                                0146
*     END;                          /* WITH RETURN CODE      @G24LB18*/
*                                                                  0148
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE OPCODE PASSED IN THE PARAMETER LIST IS         @G24LB18*/
*   /* UNDEFINED (NOT ONE OF THE EXPECTED OPCODES),          @G24LB18*/
*   /* RETURN TO THE MSSC SVC WITH A RETURN CODE OF 4 AND A  @G24LB18*/
*   /* REASON CODE OF 217 (INVALID REQUEST OPCODE).          @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   REASONCD=INVALOP;               /* SET REASON CODE=217   @G24LB18*/
@RF00141 MVC   REASONCD(4),@CF00065                                0148
*   RETURNCD=FOUR;                  /* SET RETURN CODE=4     @G24LB18*/
*                                                                  0149
         MVC   RETURNCD(4),@CF00109                                0149
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE MSSC SVC WITH RETURN CODE IN REG 15 AND @G24LB18*/
*   /* REASON CODE IN REG 0.                                 @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*EXIT:                                                             0150
*   RFY                                                            0150
*     REG2 RSTD;                    /* RESTRICT REG 2        @G24LB18*/
EXIT     DS    0H                                                  0151
*   REG2=REASONCD;                  /* SAVE REASON CODE      @G24LB18*/
         L     REG2,REASONCD                                       0151
*   REG3=RETURNCD;                  /* SAVE RETURN CODE      @G24LB18*/
         L     REG3,RETURNCD                                       0152
*   RFY                                                            0153
*     REG2 UNRSTD;                  /* UNRESTRICT REG 2      @G24LB18*/
*   GENERATE;                                                      0154
*                                                                  0154
*                                                          /*@G24LB18*/
* FREE AUTOMATIC STORAGE
         L     @13,4(,@13)             GET SAVEAREA ADDR       @G24LB18
         L     @00,@SIZDATD            GET STORAGE SIZE        @G24LB18
         LR    @01,@11                 GET STORAGE ADDR        @G24LB18
         FREEMAIN R,LV=(0),A=(1)
* RESTORE REGISTERS
         LR    @15,@03                 RESTORE RETURN CODE     @G24LB18
         LR    @00,@02                 RESTORE REASON CODE     @G24LB18
         L     @14,12(@13)             RESTORE RETURN ADDR     @G24LB18
         LM    @01,@12,24(@13)         RESTORE CALLER'S REGS   @G24LB18
* RETURN TO MSSC SVC
         BR    @14                     RETURN TO MSSC SVC      @G24LB18
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF MAINLINE PROCESSING FOR ICBVSC00. THE          @G24LB18*/
*   /* REMAINDER OF THE MODULE CONSISTS OF INTERNAL          @G24LB18*/
*   /* PROCEDURES FOR ICBVSC00.                              @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0155
*                                                                  0155
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME  - EOVACQRE                               @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS ROUTINE IS CALLED ON EOV ACQUIRE         @G24LB18*/
*/*            REQUESTS FOR NEWLY ALLOCATED SECONDARY        @G24LB18*/
*/*            EXTENTS. IT DETERMINES WHETHER THE VOLUME     @G24LB18*/
*/*            BEING ALLOCATED TO IS MOUNTED PRIVATE         @G24LB18*/
*/*            RESERVED OR PRIVATE REMOVABLE, AND IF SO,     @G24LB18*/
*/*            QUEUES THE REQUEST UP TO THE MSVC SUBTASK     @G24LB18*/
*/*            TO HAVE THE AVAILABLE SPACE COUNT UPDATED     @G24LB18*/
*/*            FOR THE VOLUME, AND RETURNS TO THE MAINLINE   @G24LB18*/
*/*            PROCEDURE WITHOUT WAITING ON SUBTASK          @G24LB18*/
*/*            COMPLETION.                                   @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - MSSC SVC REQUEST PARAMETER LIST (ACQUIRE LIST)   @G24LB18*/
*/*         AND VVICB.                                       @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - FOR APPLICABLE REQUESTS (SEE FUNCTION), AN RPLV @G24LB18*/
*/*          CONTAINING THE PASSED ACQUIRE LIST IS BUILT AND @G24LB18*/
*/*          ADDED TO THE MSVC SUBTASK QUEUE.                @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0155
*EOVACQRE:                          /*                       @G24LB18*/
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
*                                                                  0155
EOVACQRE DS    0H                                                  0156
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVC IS DISABLED, RETURN TO MAINLINE ICBVSC00      @G24LB18*/
*   /* WITHOUT PROCESSING THE EOV ACQUIRE REQUEST.           @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0156
*   IF VVIFLG0=ON THEN              /* IS MSVC DISABLED      @G24LB18*/
         L     @10,VVIPTR                                          0156
         TM    VVIFLG0(@10),B'10000000'                            0156
         BO    @RT00156                                            0156
*     RETURN;                       /* YES - RETURN TO       @G24LB18
*                                      ICBVSC00              @G24LB18*/
*                                                                  0157
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE VOL SER FROM THE ACQUIRE LIST TO THE UNIT    @G24LB18*/
*   /* PROCESSOR (ICBVUP01) TO DETERMINE THE UCB ON WHICH    @G24LB18*/
*   /* THE REQUESTED VOLUME IS MOUNTED. IF RETURN CODE = 4   @G24LB18*/
*   /* FROM THE UNIT PROCESSOR (VOLUME NOT FOUND MOUNTED),   @G24LB18*/
*   /* RETURN TO MAINLINE ICBVSC00 WITHOUT QUEUING UP THE    @G24LB18*/
*   /* EOV ACQUIRE REQUEST.                                  @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   SAVERET1=REG14;                 /* SAVE RETURN ADDRESS   @G24LB18*/
         ST    REG14,SAVERET1                                      0158
*   UNITP=''B;                      /* CLEAR UNITP PARM LIST @G24LB18*/
         LA    @02,UNITRPL                                         0159
         XC    UNITP(17,@02),UNITP(@02)                            0159
*   UNIFMTD=ON;                     /* SET FUNCTION FLAG     @G24LB18*/
         OI    UNIFMTD(@02),B'10000000'                            0160
*   UNIVOL=ARVOL;                   /* MOVE IN VOL SER       @G24LB18*/
         MVC   UNIVOL(6,@02),ARVOL(PARMPTR)                        0161
*   CALL ICBVUP01(UNITP,VVICB);     /* CALL UNIT PROCESSOR   @G24LB18*/
         ST    @02,@AL00001                                        0162
         ST    @10,@AL00001+4                                      0162
         L     @15,@CV00055                                        0162
         LA    @01,@AL00001                                        0162
         BALR  @14,@15                                             0162
*   REG14=SAVERET1;                 /* SAVE RETURN ADDR      @G24LB18*/
         L     REG14,SAVERET1                                      0163
*   IF RETCODE=FOUR THEN            /* RETURN CODE = 4?      @G24LB18*/
         C     RETCODE,@CF00109                                    0164
         BE    @RT00164                                            0164
*     RETURN;                       /* YES - RETURN TO       @G24LB18
*                                      ICBVSC00              @G24LB18*/
*                                                                  0165
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE MOUNT AND USE ATTRIBUTES IN THE UCB RETURNED @G24LB18*/
*   /* BY THE UNIT PROCESSOR FOR THE REQUESTED VOLUME. IF    @G24LB18*/
*   /* THE VOLUME IS NOT MOUNTED PRIVATE RESERVED OR PRIVATE @G24LB18*/
*   /* REMOVABLE, RETURN TO MAINLINE ICBVSC00 WITHOUT        @G24LB18*/
*   /* QUEUING UP THE EOV ACQUIRE REQUEST.                   @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*   UCBPTR=UNIUCBP;                 /* GET UCB ADDRESS       @G24LB18*/
         LA    @10,UNITRPL                                         0166
         L     UCBPTR,UNIUCBP(,@10)                                0166
*   IF UCBBPRV=OFF×                 /* VOL NOT PRIVATE OR    @G24LB18*/
*       UCBPRES=ON THEN             /* VOL PERM RESIDENT?    @G24LB18*/
         TM    UCBBPRV(UCBPTR),B'00010000'                         0167
         BZ    @RT00167                                            0167
         TM    UCBPRES(UCBPTR),B'00000100'                         0167
         BO    @RT00167                                            0167
*     RETURN;                       /* YES - RETURN TO       @G24LB18
*                                      ICBVSC00              @G24LB18*/
*                                                                  0168
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE VOLUME IS MOUNTED PRIVATE RESERVED OR PRIVATE  @G24LB18*/
*   /* REMOVABLE, CALL PROCEDURE GETRPLV TO GETMAIN AN RPLV. @G24LB18*/
*   /* IF THE GETMAIN FAILS, RETURN TO MAINLINE ICBVSC00     @G24LB18*/
*   /* WITHOUT QUEUING UP THE EOV ACQUIRE REQUEST.           @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0169
*   GETLEN=LENGTH(RPLV);            /* SET RPLV BASE LENGTH  @G24LB18*/
         LA    GETLEN,132                                          0169
*   GETLEN=GETLEN+RLENGTH;          /* ADD REQUEST LENGTH    @G24LB18*/
         ICM   @02,15,RLENGTH(PARMPTR)                             0170
         ALR   GETLEN,@02                                          0170
*   CALL GETRPLV;                   /* CALL GETMAIN RTN      @G24LB18*/
         BAL   @14,GETRPLV                                         0171
*   IF RETCODE^=ZERO THEN           /* STORAGE GOTTEN?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0172
         BZ    @RF00172                                            0172
*     DO;                           /* NO                    @G24LB18*/
*       REG14=SAVERET1;             /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0174
*       RETURN;                     /* RETURN TO ICBVSC00    @G24LB18*/
@EL00002 DS    0H                                                  0175
@EF00002 DS    0H                                                  0175
@ER00002 BR    @14                                                 0175
*     END;                          /*                       @G24LB18*/
*                                                                  0176
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE ACQUIRE REQUEST INTO THE RPLV, INDICATE NO   @G24LB18*/
*   /* WAIT FOR SUBTASK COMPLETION, CALL PROCEDURE QUERPLV   @G24LB18*/
*   /* TO ADD THE RPLV TO THE MSVC SUBTASK HIGH PRIORITY     @G24LB18*/
*   /* QUEUE, AND RETURN TO MAINLINE ICBVSC00.               @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0177
*   REG3=RLENGTH;                   /* SET REQUEST LENGTH    @G24LB18*/
@RF00172 ICM   REG3,15,RLENGTH(PARMPTR)                            0177
*   RPLVUTIL(1:REG3)=PARMLIST;      /* COPY REQUEST TO RPLV  @G24LB18*/
         LR    @10,REG3                                            0178
         BCTR  @10,0                                               0178
         EX    @10,@SM01855                                        0178
*   RPLVPOST=OFF;                   /* INDICATE NO WAIT      @G24LB18*/
         NI    RPLVPOST(RPLVPTR),B'10111111'                       0179
*   CALL QUERPLV;                   /* CALL QUEUING RTN      @G24LB18*/
         BAL   @14,QUERPLV                                         0180
*   REG14=SAVERET1;                 /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0181
*   RETURN;                         /* RETURN TO ICBVSC00    @G24LB18*/
         B     @EL00002                                            0182
*   END EOVACQRE;                   /* END EOV ACQUIRE RTN   @G24LB18*/
         B     @EL00002                                            0183
*                                                                  0184
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - ALLOCTRM                                @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS ROUTINE IS CALLED ON ALLOCATION          @G24LB18*/
*/*            TERMINATE REQUESTS. ON A SUCCESSFUL           @G24LB18*/
*/*            TERMINATION, IT CALLS THE TABLE PROCESSOR     @G24LB18*/
*/*            (ICBVTP01) TO FREE THE REQUESTED STEP TABLE   @G24LB18*/
*/*            AND THEN RETURNS TO MAINLINE ICBVSC00. ON AN  @G24LB18*/
*/*            UNSUCCESSFUL TERMINATION, IT CALLS THE TABLE  @G24LB18*/
*/*            PROCESSOR TO MARK THE REQUESTED STEP TABLE    @G24LB18*/
*/*            INVALID, QUEUES THE REQUEST UP TO THE MSVC    @G24LB18*/
*/*            SUBTASK TO HAVE THE AVAILABLE SPACE COUNTS    @G24LB18*/
*/*            UPDATED, AND RETURNS TO MAINLINE ICBVSC00     @G24LB18*/
*/*            WITHOUT WAITING ON SUBTASK COMPLETION.        @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - MSSC SVC REQUEST PARAMETER LIST (TERMINATE       @G24LB18*/
*/*         REQUEST BLOCK) AND VVICB.                        @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - FOR UNSUCCESSFUL TERMINATION REQUESTS, AN RPLV  @G24LB18*/
*/*          CONTAINING THE TERMINATE REQUEST BLOCK IS BUILT @G24LB18*/
*/*          AND ADDED TO THE MSVC SUBTASK QUEUE.            @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0184
*ALLOCTRM:                                                         0184
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
*                                                                  0184
ALLOCTRM DS    0H                                                  0185
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE REQUEST IS FOR AN UNSUCCESSFUL TERMINATION AND @G24LB18*/
*   /* MSVC IS NOT DISABLED, PASS THE JOBID FROM THE         @G24LB18*/
*   /* TERMINATION REQUEST BLOCK TO THE TABLE PROCESSOR      @G24LB18*/
*   /* (ICBVTP01) TO FIND THE REQUESTED STEP TABLE AND TURN  @G24LB18*/
*   /* ON THE INVALID AND 'DON'T FREE' INDICATORS IN THE     @G24LB18*/
*   /* STEP TABLE HEADER.                                    @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*   SAVERET1=REG14;                 /* SAVE RETURN ADDRESS   @G24LB18*/
         ST    REG14,SAVERET1                                      0185
*   IF TRMALLOK=OFF&                /* UNSUCCESSFUL TERM     @G24LB18*/
*       VVIFLG0=OFF THEN            /* WITH MSVC ENABLED?    @G24LB18*/
         TM    TRMALLOK(PARMPTR),B'10000000'                       0186
         BNZ   @RF00186                                            0186
         L     @10,VVIPTR                                          0186
         TM    VVIFLG0(@10),B'10000000'                            0186
         BNZ   @RF00186                                            0186
*     DO;                           /* YES                   @G24LB18*/
*       TABP=''B;                   /* CLEAR TABP PARM LIST  @G24LB18*/
         LA    @10,TABPRPL                                         0188
         XC    TABP(12,@10),TABP(@10)                              0188
*       TABFUTRM=ON;                /* SET FUNCTION FLAG     @G24LB18*/
         OI    TABFUTRM(@10),B'00001000'                           0189
*       TABJOBID=TRMJOBID;          /* MOVE IN JOBID         @G24LB18*/
         L     @02,TRMJOBID(,PARMPTR)                              0190
         ST    @02,TABJOBID(,@10)                                  0190
*       CALL ICBVTP01(TABP);        /* CALL TABLE PROCESSOR  @G24LB18*/
         ST    @10,@AL00001                                        0191
         L     @15,@CV00056                                        0191
         LA    @01,@AL00001                                        0191
         BALR  @14,@15                                             0191
*       REG14=SAVERET1;             /* RESTORE RETURN ADDR   @G24LB18*/
*                                                                  0192
         L     REG14,SAVERET1                                      0192
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE RETURN CODE = 4 FROM THE TABLE PROCESSOR   @G24LB18*/
*       /* (STEP TABLE NOT FOUND), RETURN TO MAINLINE        @G24LB18*/
*       /* ICBVSC00 WITHOUT QUEUING UP THE UNSUCCESSFUL      @G24LB18*/
*       /* TERMINATION REQUEST.                              @G24LB18*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0193
*       IF RETCODE=FOUR THEN        /* RETURN CODE = 4?      @G24LB18*/
         C     RETCODE,@CF00109                                    0193
         BE    @RT00193                                            0193
*         RETURN;                   /* YES - RETURN TO       @G24LB18
*                                      ICBVSC00              @G24LB18*/
*                                                                  0195
*       /*************************************************************/
*       /*                                                           */
*       /* STORE THE ADDRESS OF THE STEP TABLE HEADER        @G24LB18*/
*       /* RETURNED BY THE TABLE PROCESSOR INTO THE          @G24LB18*/
*       /* TERMINATE REQUEST BLOCK. CALL PROCEDURE GETRPLV   @G24LB18*/
*       /* TO GETMAIN AN RPLV.                               @G24LB18*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0195
*       TRMSTHDR=TABHDRET;          /* STORE HEADER ADDR     @G24LB18*/
         LA    @02,TABPRPL                                         0195
         L     @02,TABHDRET(,@02)                                  0195
         ST    @02,TRMSTHDR(,PARMPTR)                              0195
*       GETLEN=LENGTH(RPLV);        /* SET RPLV BASE LENGTH  @G24LB18*/
         LA    GETLEN,132                                          0196
*       GETLEN=GETLEN+RLENGTH;      /* ADD REQUEST LENGTH    @G24LB18*/
         ICM   @02,15,RLENGTH(PARMPTR)                             0197
         ALR   GETLEN,@02                                          0197
*       CALL GETRPLV;               /* CALL GETMAIN RTN      @G24LB18*/
         BAL   @14,GETRPLV                                         0198
*                                                                  0199
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE GETMAIN IS SUCCESSFUL, COPY THE TERMINATE  @G24LB18*/
*       /* REQUEST BLOCK INTO THE RPLV, INDICATE NO WAIT FOR @G24LB18*/
*       /* SUBTASK COMPLETION, CALL PROCEDURE QUERPLV TO ADD @G24LB18*/
*       /* THE RPLV TO THE MSVC SUBTASK HIGH PRIORITY QUEUE, @G24LB18*/
*       /* AND RETURN TO MAINLINE ICBVSC00.                  @G24LB18*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0199
*       IF RETCODE=ZERO THEN        /* STORAGE GOTTEN?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0199
         BNZ   @RF00199                                            0199
*         DO;                       /* YES                   @G24LB18*/
*           REG3=RLENGTH;           /* SET REQUEST LENGTH    @G24LB18*/
         ICM   REG3,15,RLENGTH(PARMPTR)                            0201
*           RPLVUTIL(1:REG3)=PARMLIST;/* COPY REQ TO RPLV    @G24LB18*/
         LR    @10,REG3                                            0202
         BCTR  @10,0                                               0202
         EX    @10,@SM01855                                        0202
*           RPLVPOST=OFF;           /* INDICATE NO WAIT      @G24LB18*/
         NI    RPLVPOST(RPLVPTR),B'10111111'                       0203
*           CALL QUERPLV;           /* CALL QUEUING RTN      @G24LB18*/
         BAL   @14,QUERPLV                                         0204
*           REG14=SAVERET1;         /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0205
*           RETURN;                 /* RETURN TO ICBVSC00    @G24LB18*/
@EL00003 DS    0H                                                  0206
@EF00003 DS    0H                                                  0206
@ER00003 BR    @14                                                 0206
*         END;                      /*                       @G24LB18*/
*                                                                  0208
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE GETMAIN FAILS, TURN OFF THE 'DON'T FREE'   @G24LB18*/
*       /* INDICATOR IN THE STEP TABLE HEADER AND FREE THE   @G24LB18*/
*       /* STEP TABLE (SEE NEXT BLOCK).                      @G24LB18*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0208
*       RFY                                                        0208
*         STPTB BASED(TABHDRET);    /* BASE STEP TABLE HDR   @G24LB18*/
@RF00199 DS    0H                                                  0209
*       STPNOFRE=OFF;               /* TURN OFF DON'T FREE   @G24LB18*/
         LA    @10,TABPRPL                                         0209
         L     @01,TABHDRET(,@10)                                  0209
         NI    STPNOFRE(@01),B'10111111'                           0209
*     END;                          /*                       @G24LB18*/
*                                                                  0211
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR SUCCESSFUL TERMINATION REQUESTS AND FOR           @G24LB18*/
*   /* UNSUCCESSFUL TERMINATION REQUESTS WITH                @G24LB18*/
*   /* MSVC DISABLED OR GETMAIN FAILURE, PASS THE            @G24LB18*/
*   /* JOBID FROM THE TERMINATE REQUEST BLOCK TO THE TABLE   @G24LB18*/
*   /* PROCESSOR TO FREE THE REQUESTED STEP TABLE, AND       @G24LB18*/
*   /* RETURN TO MAINLINE ICBVSC00.                          @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0211
*   TABP=''B;                       /* CLEAR TABP PARM LIST  @G24LB18*/
@RF00186 LA    @10,TABPRPL                                         0211
         XC    TABP(12,@10),TABP(@10)                              0211
*   TABFFREE=ON;                    /* SET FUNCTION FLAG     @G24LB18*/
         OI    TABFFREE(@10),B'00000100'                           0212
*   TABJOBID=TRMJOBID;              /* MOVE IN JOBID         @G24LB18*/
         L     @08,TRMJOBID(,PARMPTR)                              0213
         ST    @08,TABJOBID(,@10)                                  0213
*   CALL ICBVTP01(TABP);            /* CALL TABLE PROCESSOR  @G24LB18*/
         ST    @10,@AL00001                                        0214
         L     @15,@CV00056                                        0214
         LA    @01,@AL00001                                        0214
         BALR  @14,@15                                             0214
*   REG14=SAVERET1;                 /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0215
*   RETURN;                         /* RETURN TO ICBVSC00    @G24LB18*/
         B     @EL00003                                            0216
*   END ALLOCTRM;                   /* END TERMINATE RTN     @G24LB18*/
         B     @EL00003                                            0217
*                                                                  0218
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - ALLOCSEL                                @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS ROUTINE IS CALLED ON ALLOCATION SELECT   @G24LB18*/
*/*            REQUESTS. IT PROCESSES THESE REQUESTS AS      @G24LB18*/
*/*            DESCRIBED IN THE MAIN PROLOGUE (UNDER         @G24LB18*/
*/*            FUNCTION).                                    @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - MSSC SVC REQUEST PARAMETER LIST (SELECT REQUEST  @G24LB18*/
*/*            BLOCK).                                       @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - IF NO VOLUMES WERE SELECTED FOR THE REQUEST,    @G24LB18*/
*/*          THE 'NO VOLUMES SELECTED' INDICATOR IN THE      @G24LB18*/
*/*          SELECT REQUEST BLOCK IS TURNED ON.              @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0218
*ALLOCSEL:                                                         0218
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
ALLOCSEL DS    0H                                                  0219
*   JFCBPTR=SELJFCBA;               /* SET UP JFCB PTR       @G24LB18*/
         L     @10,SELJFCBA(,PARMPTR)                              0219
         ST    @10,JFCBPTR                                         0219
*   SAVERET1=REG14;                 /* SAVE RETURN ADDRESS   @G24LB18*/
*                                                                  0220
         ST    REG14,SAVERET1                                      0220
*   /*****************************************************************/
*   /*                                                               */
*   /* PASS THE INTERNAL DEVICE TYPE FROM THE SELECT REQUEST @G24LB18*/
*   /* BLOCK TO THE UNIT PROCESSOR (ICBVUP01) TO DETERMINE   @G24LB18*/
*   /* WHETHER THE REQUEST IS FOR A MIXED ESOTERIC. IF THE   @G24LB18*/
*   /* RETURN CODE = 8 FROM THE UNIT PROCESSOR (REQUEST IS   @G24LB18*/
*   /* FOR A MIXED ESOTERIC), SET THE MIXED ESOTERIC         @G24LB18*/
*   /* INDICATOR IN THE SELECT REQUEST BLOCK.                @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   IF SELUCBAD=ZERO THEN           /* SPECIFIC UNIT ADDR    @G24LB18*/
         L     @10,SELUCBAD(,PARMPTR)                              0221
         LTR   @10,@10                                             0221
         BNZ   @RF00221                                            0221
*     DO;                           /* REQUESTED? - NO,      @G24LB18*/
*       UNITP=''B;                  /* CLEAR UNITP PARM LIST @G24LB18*/
         LA    @10,UNITRPL                                         0223
         XC    UNITP(17,@10),UNITP(@10)                            0223
*       UNIFALLV=ON;                /* SET FUNCTION FLAG     @G24LB18*/
         OI    UNIFALLV(@10),B'00100000'                           0224
*       UNIDEVTP=SELDEVTP;          /* MOVE IN DEVICE TYPE   @G24LB18*/
         MVC   UNIDEVTP(4,@10),SELDEVTP(PARMPTR)                   0225
*       CALL ICBVUP01(UNITP,VVICB); /* CALL UNIT PROCESSOR   @G24LB18*/
         ST    @10,@AL00001                                        0226
         L     @10,VVIPTR                                          0226
         ST    @10,@AL00001+4                                      0226
         L     @15,@CV00055                                        0226
         LA    @01,@AL00001                                        0226
         BALR  @14,@15                                             0226
*       IF RETCODE=EIGHT THEN       /* RETURN CODE = 8?      @G24LB18*/
         C     RETCODE,@CF00069                                    0227
         BNE   @RF00227                                            0227
*         SELMXESO=ON;              /* YES - SET MIXED       @G24LB18
*                                      ESOTERIC FLAG         @G24LB18*/
         OI    SELMXESO(PARMPTR),B'00000001'                       0228
*     END;                          /*                       @G24LB18*/
@RF00227 DS    0H                                                  0230
*                                                                  0230
*   /*****************************************************************/
*   /*                                                               */
*   /* NEW NON-SPECIFIC REQUESTS                             @G24LB18*/
*   /*                                                       @G24LB18*/
*   /* FOR NEW, NON-SPECIFIC REQUESTS, IF MSVGP IS CODED     @G24LB18*/
*   /* BUT NOT EQUAL TO SYSGROUP, AND VOL=REF AND UNIT=AFF   @G24LB18*/
*   /* ARE NOT CODED, AND IT IS NOT A MIXED ESOTERIC         @G24LB18*/
*   /* REQUEST, THEN CALL PROCEDURE VOLSEL TO QUEUE THE      @G24LB18*/
*   /* REQUEST UP FOR VOLUME SELECTION AND RETURN TO MAIN-   @G24LB18*/
*   /* LINE ICBVSC00. OTHERWISE, SET 'NO VOLUMES SELECTED'   @G24LB18*/
*   /* INDICATOR IN THE SELECT REQUEST BLOCK AND RETURN TO   @G24LB18*/
*   /* MAINLINE ICBVSC00.                                    @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0230
*   IF JFCBNVOL=ZERO THEN           /* NON-SPECIFIC REQ?     @G24LB18*/
@RF00221 L     @10,JFCBPTR                                         0230
         CLI   JFCBNVOL(@10),0                                     0230
         BNE   @RF00230                                            0230
*     DO;                           /* YES                   @G24LB18*/
*       IF JFCBMSGP=ON&             /* MSVGP CODED AND       @G24LB18*/
*           JFCMSVGP^=SYSGROUP&     /* NOT = 'SYSGROUP' &    @G24LB18*/
*           SELVOLRF=OFF&           /* VOL=REF NOT CODED &   @G24LB18*/
*           JFCBUAFF=OFF&           /* UNIT=AFF NOT CODED &  @G24LB18*/
*           SELMXESO=OFF THEN       /* NO MIXED ESOTERIC?    @G24LB18*/
         TM    JFCBMSGP(@10),B'00100000'                           0232
         BNO   @RF00232                                            0232
         CLC   JFCMSVGP(8,@10),SYSGROUP                            0232
         BE    @RF00232                                            0232
         TM    SELVOLRF(PARMPTR),B'00001000'                       0232
         BNZ   @RF00232                                            0232
         TM    JFCBUAFF(@10),B'00000001'                           0232
         BNZ   @RF00232                                            0232
         TM    SELMXESO(PARMPTR),B'00000001'                       0232
         BNZ   @RF00232                                            0232
*         DO;                       /* YES                   @G24LB18*/
*           CALL VOLSEL;            /* CALL VOL SELECT RTN   @G24LB18*/
         BAL   @14,VOLSEL                                          0234
*           REG14=SAVERET1;         /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0235
*           RETURN;                 /* RETURN TO ICBVSC00    @G24LB18*/
@EL00004 DS    0H                                                  0236
@EF00004 DS    0H                                                  0236
@ER00004 BR    @14                                                 0236
*         END;                      /*                       @G24LB18*/
*       SELNOVSL=ON;                /* SET NO VOLS SELECTED  @G24LB18*/
@RF00232 OI    SELNOVSL(PARMPTR),B'00000001'                       0238
*       REG14=SAVERET1;             /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0239
*       RETURN;                     /* RETURN TO ICBVSC00    @G24LB18*/
         B     @EL00004                                            0240
*     END;                          /*                       @G24LB18*/
*                                                                  0242
*   /*****************************************************************/
*   /*                                                               */
*   /* NEW SPECIFIC REQUESTS AND OLD REQUESTS                @G24LB18*/
*   /*                                                       @G24LB18*/
*   /* FOR ALL REQUESTS EXCEPT VOL=REF REQUESTS WHICH ARE    @G24LB18*/
*   /* NOT MIXED ESOTERICS AND WHICH REFER TO MSVGP DDS,     @G24LB18*/
*   /* PASS THE SELECT REQUEST BLOCK TO THE TABLE PROCESSOR  @G24LB18*/
*   /* (ICBVTP01) TO BUILD A DD ENTRY FOR THE REQUEST AND    @G24LB18*/
*   /* ADD IT TO THE CURRENT STEP TABLE.                     @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0242
*   IF SELMXESO=ON×                 /* MIXED ESOTERIC OR     @G24LB18*/
*       SELVRGRP=OFF THEN           /* NOT VOL=REF TO MSVGP? @G24LB18*/
@RF00230 TM    SELMXESO(PARMPTR),B'00000001'                       0242
         BNZ   @RT00242                                            0242
         TM    SELVRGRP(PARMPTR),B'00000010'                       0242
         BO    @RF00242                                            0242
@RT00242 DS    0H                                                  0243
*     DO;                           /* YES                   @G24LB18*/
*       TABP=''B;                   /* CLEAR TABP PARM LIST  @G24LB18*/
         LA    @10,TABPRPL                                         0244
         XC    TABP(12,@10),TABP(@10)                              0244
*       TABFBLDE=ON;                /* SET FUNCTION FLAG     @G24LB18*/
         OI    TABFBLDE(@10),B'10000000'                           0245
*       TABSELRB=PARMPTR;           /* MOVE IN SEL REQ ADDR  @G24LB18*/
         ST    PARMPTR,TABSELRB(,@10)                              0246
*       CALL ICBVTP01(TABP);        /* CALL TABLE PROCESSOR  @G24LB18*/
         ST    @10,@AL00001                                        0247
         L     @15,@CV00056                                        0247
         LA    @01,@AL00001                                        0247
         BALR  @14,@15                                             0247
*     END;                          /*                       @G24LB18*/
*                                                                  0249
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR OLD REQUESTS AND VOL=REF REQUESTS WHICH REFER TO  @G24LB18*/
*   /* MSVGP DDS, EXCLUDING MIXED ESOTERIC REQUESTS, CALL    @G24LB18*/
*   /* PROCEDURE SETPRIV TO DETERMINE WHETHER OR NOT         @G24LB18*/
*   /* ALLOCATION SHOULD MARK THE REQUEST PRIVATE.           @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*   IF(JFCDISP^='11'B×              /* DISP = OLD OR         @G24LB18*/
*       SELVRGRP=ON)&               /* VOL=REF TO MSVGP AND  @G24LB18*/
*       SELMXESO=OFF THEN           /* NOT MIXED ESOTERIC?   @G24LB18*/
@RF00242 L     @10,JFCBPTR                                         0249
         TM    JFCDISP(@10),B'11000000'                            0249
         BNO   @GL00008                                            0249
         TM    SELVRGRP(PARMPTR),B'00000010'                       0249
         BNO   @RF00249                                            0249
@GL00008 TM    SELMXESO(PARMPTR),B'00000001'                       0249
         BNZ   @RF00249                                            0249
*     DO;                           /*                       @G24LB18*/
*       CALL SETPRIV;               /* CALL SET PRIVATE RTN  @G24LB18*/
*                                                                  0251
         BAL   @14,SETPRIV                                         0251
*       /*************************************************************/
*       /*                                                           */
*       /* FOR VOL=REF REQUESTS WHICH REFER TO MSVGP DDS,    @G24LB18*/
*       /* CALL PROCEDURE SPACEACC TO QUEUE THE REQUEST UP   @G24LB18*/
*       /* FOR SPACE ACCOUNTING.                             @G24LB18*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0252
*       IF SELVRGRP=ON THEN         /* VOL=REF TO MSVGP DD?  @G24LB18*/
         TM    SELVRGRP(PARMPTR),B'00000010'                       0252
         BNO   @RF00252                                            0252
*         CALL SPACEACC;            /* YES - CALL SPACE      @G24LB18
*                                      ACCOUNTING RTN        @G24LB18*/
         BAL   @14,SPACEACC                                        0253
*     END;                          /*                       @G24LB18*/
@RF00252 DS    0H                                                  0255
*                                                                  0255
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE 'NO VOLUMES SELECTED' INDICATOR IN THE        @G24LB18*/
*   /* SELECT REQUEST BLOCK AND RETURN TO MAINLINE ICBVSC00. @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0255
*   SELNOVSL=ON;                    /* SET NO VOLS SELECTED  @G24LB18*/
@RF00249 OI    SELNOVSL(PARMPTR),B'00000001'                       0255
*   REG14=SAVERET1;                 /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET1                                      0256
*   RETURN;                         /* RETURN TO ICBVSC00    @G24LB18*/
         B     @EL00004                                            0257
*   END ALLOCSEL;                   /* END SELECT ROUTINE    @G24LB18*/
*                                                                  0259
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - VOLSEL                                  @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS ROUTINE IS CALLED ON ALLOCATION SELECT   @G24LB18*/
*/*            REQUESTS WHICH REQUIRE VOLUME SELECTION. IT   @G24LB18*/
*/*            QUEUES THE REQUEST UP TO THE MSVC SUBTASK FOR @G24LB18*/
*/*            VOLUME SELECTION AND WAITS FOR SUBTASK        @G24LB18*/
*/*            COMPLETION. WHEN THE WAIT IS SATISFIED, IT    @G24LB18*/
*/*            MOVES THE SELECTED VOL SERS INTO ALLOCATION'S @G24LB18*/
*/*            VOL SER RETURN AREA, UPDATES THE SPACE        @G24LB18*/
*/*            PARAMETERS IN THE JFCB IF SPACE WAS DEFAULTED,@G24LB18*/
*/*            AND RETURNS TO ALLOCSEL.                      @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - SELECT REQUEST BLOCK, VOL SER RETURN AREA, AND   @G24LB18*/
*/*         VVICB.                                           @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - AN RPLV CONTAINING THE SELECT REQUEST BLOCK,    @G24LB18*/
*/*          JFCB, AND AREAS FOR GROUP PARAMETERS AND VOL    @G24LB18*/
*/*          SERS IS BUILT AND ADDED TO THE MSVC SUBTASK     @G24LB18*/
*/*          QUEUE. UPON RETURN, THE RETURN AND REASON CODE  @G24LB18*/
*/*          FIELDS ARE SET FROM THE RPLV. IF VOLUMES WERE   @G24LB18*/
*/*          SELECTED, THE VOL SERS ARE MOVED INTO THE VOL   @G24LB18*/
*/*          SER RETURN AREA. IF NO VOLUMES WERE SELECTED,   @G24LB18*/
*/*          THE 'NO VOLUMES SELECTED' INDICATOR IS SET IN   @G24LB18*/
*/*          THE SELECT REQUEST BLOCK. IF SPACE WAS          @G24LB18*/
*/*          DEFAULTED, THE GROUP SPACE PARAMETERS ARE MOVED @G24LB18*/
*/*          INTO THE JFCB.                                  @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0259
*VOLSEL:                                                           0259
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
VOLSEL   DS    0H                                                  0260
*                                                                  0260
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVC IS DISABLED, SET RETURN CODE = 4 AND REASON   @G24LB18*/
*   /* CODE = 213 (MSVC IS DISABLED) AND RETURN TO ALLOCSEL  @G24LB18*/
*   /* WITHOUT QUEUING UP THE REQUEST.                       @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0260
*   IF VVIFLG0=ON THEN              /* IS MSVC DISABLED?     @G24LB18*/
         L     @10,VVIPTR                                          0260
         TM    VVIFLG0(@10),B'10000000'                            0260
         BNO   @RF00260                                            0260
*     DO;                           /* YES                   @G24LB18*/
*       RETURNCD=FOUR;              /* SET RETURN CODE = 4   @G24LB18*/
         MVC   RETURNCD(4),@CF00109                                0262
*       REASONCD=MSVCDIS;           /* SET REASON CODE = 213 @G24LB18*/
         MVC   REASONCD(4),@CF00063                                0263
*       RETURN;                     /* RETURN TO ALLOCSEL    @G24LB18*/
@EL00005 DS    0H                                                  0264
@EF00005 DS    0H                                                  0264
@ER00005 BR    @14                                                 0264
*     END;                          /*                       @G24LB18*/
*                                                                  0266
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE LENGTH OF THE RPLV AND CALL PROCEDURE   @G24LB18*/
*   /* GETRPLV TO GETMAIN AN RPLV. IF THE GETMAIN FAILS, SET @G24LB18*/
*   /* RETURN CODE = 4 AND REASON CODE = 22A (GETMAIN        @G24LB18*/
*   /* FAILURE), AND RETURN TO ALLOCSEL WITHOUT QUEUING UP   @G24LB18*/
*   /* THE REQUEST.                                          @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0266
*   GETLEN=LENGTH(RPLV);            /* SET RPLV BASE LENGTH  @G24LB18*/
@RF00260 LA    GETLEN,132                                          0266
*   GETLEN=GETLEN+RLENGTH;          /* ADD REQUEST LENGTH    @G24LB18*/
         ICM   @02,15,RLENGTH(PARMPTR)                             0267
         ALR   GETLEN,@02                                          0267
*   GETLEN=GETLEN+LJFCBOX;          /* ADD JFCB LENGTH       @G24LB18*/
         AL    GETLEN,@CF00120                                     0268
*   GETLEN=GETLEN+LENGTH(GRPPR);    /* ADD GROUP PARM LENGTH @G24LB18*/
         AL    GETLEN,@CF01851                                     0269
*   GETLEN=GETLEN+VOLLEN;           /* ADD VOL RET AREA LEN  @G24LB18*/
         L     @01,SELVLRET(,PARMPTR)                              0270
         AH    GETLEN,VOLLEN(,@01)                                 0270
*   SAVERET2=REG14;                 /* SAVE RETURN ADDRESS   @G24LB18*/
         ST    REG14,SAVERET2                                      0271
*   CALL GETRPLV;                   /* CALL GETMAIN RTN      @G24LB18*/
         BAL   @14,GETRPLV                                         0272
*   IF RETCODE^=ZERO THEN           /* STORAGE GOTTEN?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0273
         BZ    @RF00273                                            0273
*     DO;                           /* NO                    @G24LB18*/
*       RETURNCD=FOUR;              /* SET RETURN CODE = 4   @G24LB18*/
         MVC   RETURNCD(4),@CF00109                                0275
*       REASONCD=GETFAIL;           /* SET REASON CODE = 22A @G24LB18*/
         MVC   REASONCD(4),@CF00067                                0276
*       REG14=SAVERET2;             /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0277
*       RETURN;                     /* RETURN TO ALLOCSEL    @G24LB18*/
         B     @EL00005                                            0278
*     END;                          /*                       @G24LB18*/
*                                                                  0280
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE THE SELECT REQUEST BLOCK AND THE JFCB INTO THE   @G24LB18*/
*   /* RPLV AND CHAIN THE JFCB, GROUP PARAMETER AREA, AND    @G24LB18*/
*   /* VOL SER RETURN AREA IN THE RPLV TO THE SELECT REQUEST @G24LB18*/
*   /* BLOCK IN THE RPLV. SET THE LENGTH IN THE VOL SER      @G24LB18*/
*   /* RETURN AREA IN THE RPLV.                              @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0280
*   GETLEN=VOLLEN;                  /* SAVE VOL RET AREA LEN @G24LB18*/
@RF00273 L     @01,SELVLRET(,PARMPTR)                              0280
         LH    GETLEN,VOLLEN(,@01)                                 0280
*   REG3=RLENGTH;                   /* SET REQUEST LENGTH    @G24LB18*/
         ICM   @01,15,RLENGTH(PARMPTR)                             0281
         LR    REG3,@01                                            0281
*   RPLVUTIL(1:REG3)=PARMLIST;      /* COPY REQUEST TO RPLV  @G24LB18*/
         LR    @07,REG3                                            0282
         BCTR  @07,0                                               0282
         EX    @07,@SM01855                                        0282
*   MOVEPTR=ADDR(RPLVUTIL);         /* SET RPLV REQ ADDR     @G24LB18*/
         LA    MOVEPTR,RPLVUTIL(,RPLVPTR)                          0283
*   MOVEPTR=MOVEPTR+RLENGTH;        /* ADD REQUEST LENGTH    @G24LB18*/
         ALR   MOVEPTR,@01                                         0284
*   REG3=LJFCBOX;                   /* SET JFCB LENGTH       @G24LB18*/
         LA    @01,176                                             0285
         LR    REG3,@01                                            0285
*   MOVELST(1:REG3)=INFMJFCB;       /* COPY JFCB INTO RPLV   @G24LB18*/
         LR    @07,REG3                                            0286
         BCTR  @07,0                                               0286
         L     @06,JFCBPTR                                         0286
         EX    @07,@SM01862                                        0286
*   RFY                                                            0287
*     SELRB BASED(ADDR(RPLVUTIL));  /* BASE SELRB IN RPLV    @G24LB18*/
*   SELJFCBA=MOVEPTR;               /* SET JFCB ADDR         @G24LB18*/
         LA    @07,132                                             0288
         ALR   @07,RPLVPTR                                         0288
         ST    MOVEPTR,SELJFCBA(,@07)                              0288
*   MOVEPTR=MOVEPTR+LJFCBOX;        /* ADD JFCB LENGTH       @G24LB18*/
         ALR   MOVEPTR,@01                                         0289
*   SELGRPPR=MOVEPTR;               /* SET GROUP PARMS ADDR  @G24LB18*/
         ST    MOVEPTR,SELGRPPR(,@07)                              0290
*   MOVEPTR=MOVEPTR+LENGTH(GRPPR);  /* ADD GROUP PARMS LEN   @G24LB18*/
         AL    MOVEPTR,@CF01851                                    0291
*   SELVLRET=MOVEPTR;               /* SET VOL RET ADDR      @G24LB18*/
         ST    MOVEPTR,SELVLRET(,@07)                              0292
*   VOLLEN=GETLEN;                  /* SET VOL RET LENGTH    @G24LB18*/
         L     @02,SELVLRET+132(,RPLVPTR)                          0293
         STH   GETLEN,VOLLEN(,@02)                                 0293
*   VOLNUM=ZERO;                    /* INIT NO. VOLS = 0     @G24LB18*/
         SLR   @10,@10                                             0294
         STH   @10,VOLNUM(,@02)                                    0294
*   RFY                                                            0295
*     REG1 RSTD;                    /* RESTRICT REG 1        @G24LB18*/
*                                                                  0296
*   /*****************************************************************/
*   /*                                                               */
*   /* INDICATE WAIT ON MSVC SUBTASK COMPLETION AND CALL     @G24LB18*/
*   /* PROCEDURE QUERPLV TO ADD THE RPLV TO THE MSVC SUBTASK @G24LB18*/
*   /* HIGH PRIORITY QUEUE AND WAIT FOR SUBTASK COMPLETION.  @G24LB18*/
*   /* ON RETURN, SET THE RETURN AND REASON CODE FIELDS FROM @G24LB18*/
*   /* THOSE IN THE RPLV.                                    @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0296
*   RPLVPOST=ON;                    /* INDICATE WAIT         @G24LB18*/
         OI    RPLVPOST(RPLVPTR),B'01000000'                       0296
*   CALL QUERPLV;                   /* CALL QUEUING RTN      @G24LB18*/
         BAL   @14,QUERPLV                                         0297
*   RETURNCD=RPLVRETC;              /* COPY RETURN CODE      @G24LB18*/
         LH    @10,RPLVRETC(,RPLVPTR)                              0298
         N     @10,@CF01865                                        0298
         ST    @10,RETURNCD                                        0298
*   REASONCD=RPLRCODE;              /* COPY REASON CODE      @G24LB18*/
*                                                                  0299
         LH    @02,RPLRCODE(,RPLVPTR)                              0299
         N     @02,@CF01865                                        0299
         ST    @02,REASONCD                                        0299
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE = 0 IN THE RPLV AND VOLUMES WERE       @G24LB18*/
*   /* SELECTED, MOVE THE SELECTED VOL SERS FROM THE RPLV    @G24LB18*/
*   /* INTO ALLOCATION'S VOL SER RETURN AREA.                @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0300
*   IF RPLVRETC=ZERO THEN           /* RETURN CODE = 0?      @G24LB18*/
         LTR   @10,@10                                             0300
         BNZ   @RF00300                                            0300
*     DO;                           /* YES                   @G24LB18*/
*       IF VOLNUM^=ZERO THEN        /* WERE VOLS SELECTED?   @G24LB18*/
         L     @10,SELVLRET+132(,RPLVPTR)                          0302
         LH    @02,VOLNUM(,@10)                                    0302
         LTR   @02,@02                                             0302
         BZ    @RF00302                                            0302
*         DO;                       /* YES                   @G24LB18*/
*           RFY                                                    0304
*             REG2 RSTD;            /* RESTRICT REG 2        @G24LB18*/
*           REG2=SELVLRET;          /* GET RPLV VOL RET ADDR @G24LB18*/
         LR    REG2,@10                                            0305
*           REG1=VOLLEN;            /* GET VOL RET LENGTH    @G24LB18*/
         LH    REG1,VOLLEN(,@10)                                   0306
*           REG3=REG1;              /* GET MOVE LENGTH       @G24LB18*/
         LR    REG3,REG1                                           0307
*           RFY                                                    0308
*             SELRB BASED(PARMPTR); /* BASE SEL REQ BLK      @G24LB18*/
*           REG0=SELVLRET;          /* GET ALLOC VOL RET ADD @G24LB18*/
         L     REG0,SELVLRET(,PARMPTR)                             0309
*           GEN(MVCL REG0,REG2);    /* COPY BACK VOL RET AREA@G24LB18*/
         MVCL REG0,REG2
*           RFY                                                    0311
*             REG2 UNRSTD;          /* UNRESTRICT REG 2      @G24LB18*/
*                                                                  0311
*           /*********************************************************/
*           /*                                                       */
*           /* IF SPACE WAS DEFAULTED IN THE REQUEST, COPY   @G24LB18*/
*           /* THE JFCB WITH THE UPDATED SPACE PARAMETERS    @G24LB18*/
*           /* FROM THE RPLV INTO THE REAL JFCB.             @G24LB18*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0312
*           IF JFCBPQTY=ZERO&       /* WAS SPACE DEFAULTED?  @G24LB18*/
*               JFCBSQTY=ZERO THEN  /*                       @G24LB18*/
         SLR   @10,@10                                             0312
         L     @02,JFCBPTR                                         0312
         SLR   @07,@07                                             0312
         ICM   @07,7,JFCBPQTY(@02)                                 0312
         CR    @10,@07                                             0312
         BNE   @RF00312                                            0312
         SLR   @07,@07                                             0312
         ICM   @07,7,JFCBSQTY(@02)                                 0312
         CR    @10,@07                                             0312
         BNE   @RF00312                                            0312
*             DO;                   /* YES                   @G24LB18*/
*               MOVEPTR=ADDR(RPLVUTIL);/* SET RPLV ADDR      @G24LB18*/
         LA    MOVEPTR,RPLVUTIL(,RPLVPTR)                          0314
*               MOVEPTR=MOVEPTR+RLENGTH;/* POINT TO JFCB     @G24LB18*/
         ICM   @10,15,RLENGTH(PARMPTR)                             0315
         ALR   MOVEPTR,@10                                         0315
*               REG3=LJFCBOX;       /* SET JFCB LENGTH       @G24LB18*/
         LA    REG3,176                                            0316
*               INFMJFCB=MOVELST(1:REG3);/* COPY JFCB BACK   @G24LB18*/
         L     @10,JFCBPTR                                         0317
         MVI   INFMJFCB+1(@10),C' '                                0317
         MVC   INFMJFCB+2(92,@10),INFMJFCB+1(@10)                  0317
         LR    @07,REG3                                            0317
         BCTR  @07,0                                               0317
         EX    @07,@SM01866                                        0317
*             END;                  /*                       @G24LB18*/
*         END;                      /*                       @G24LB18*/
*                                                                  0319
*       /*************************************************************/
*       /*                                                           */
*       /* IF NO VOLUMES WERE SELECTED, SET THE 'NO VOLUMES  @G24LB18*/
*       /* SELECTED' INDICATOR IN THE SELECT REQUEST BLOCK.  @G24LB18*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0320
*       ELSE                        /*                       @G24LB18*/
*         DO;                       /*                       @G24LB18*/
         B     @RC00302                                            0320
@RF00302 DS    0H                                                  0321
*           RFY                                                    0321
*             SELRB BASED(PARMPTR); /* BASE SEL REQ BLK      @G24LB18*/
*           SELNOVSL=ON;            /* SET NO VOLS SELECTED  @G24LB18*/
         OI    SELNOVSL(PARMPTR),B'00000001'                       0322
*         END;                      /*                       @G24LB18*/
*     END;                          /*                       @G24LB18*/
@RC00302 DS    0H                                                  0325
*                                                                  0325
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAIN THE RPLV AND RETURN TO ALLOCSEL.             @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*   REG0=RPLVTLEN;                  /* SET FREEMAIN LENGTH   @G24LB18*/
@RF00300 LH    REG0,RPLVTLEN(,RPLVPTR)                             0325
*   REG1=RPLVPTR;                   /* SET FREEMAIN ADDRESS  @G24LB18*/
         LR    REG1,RPLVPTR                                        0326
*LFREM1:                                                           0327
*   GEN(FREEMAIN RC,LV=(0),A=(1),SP=241);/* FREEMAIN RPLV    @G24LB18*/
LFREM1   FREEMAIN RC,LV=(0),A=(1),SP=241
*   REG14=SAVERET2;                 /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0328
*   RFY                                                            0329
*     REG1 UNRSTD;                  /* UNRESTRICT REG 1      @G24LB18*/
*   RETURN;                         /* RETURN TO ALLOCSEL    @G24LB18*/
         B     @EL00005                                            0330
*   END VOLSEL;                     /* END VOL SELECT RTN    @G24LB18*/
*                                                                  0332
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - SETPRIV                                 @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS ROUTINE IS CALLED ON ALLOCATION SELECT   @G24LB18*/
*/*            REQUESTS WHICH ARE DISP=OLD REQUESTS OR       @G24LB18*/
*/*            VOL=REF REQUESTS TO MSVGP DDS. IT DETERMINES  @G24LB18*/
*/*            THE MOUNT AND USE ATTRIBUTES OF THE REQUESTED @G24LB18*/
*/*            VOLUMES, AND IF NONE OF THE VOLUMES ARE       @G24LB18*/
*/*            MOUNTED PUBLIC REMOVABLE, IT SETS AN          @G24LB18*/
*/*            INDICATOR IN THE SELECT REQUEST BLOCK WHICH   @G24LB18*/
*/*            TELLS ALLOCATION TO MARK THE REQUEST PRIVATE. @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - SELECT REQUEST BLOCK, JFCB, AND JFCB EXTENSIONS  @G24LB18*/
*/*         (IF ANY).                                        @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - IF NONE OF THE REQUESTED VOLUMES ARE MOUNTED    @G24LB18*/
*/*          PUBLIC REMOVABLE, THE 'MARK REQUEST PRIVATE'    @G24LB18*/
*/*          INDICATOR IN THE SELECT REQUEST BLOCK IS        @G24LB18*/
*/*          TURNED ON.                                      @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0332
*SETPRIV:                                                          0332
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
SETPRIV  DS    0H                                                  0333
*                                                                  0333
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE NUMBER OF VOL SERS IN THE JFCB. PASS    @G24LB18*/
*   /* EACH VOL SER TO THE UNIT PROCESSOR (ICBVUP01) TO      @G24LB18*/
*   /* DETERMINE WHICH UCB IT IS MOUNTED ON.                 @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0333
*   SAVERET2=REG14;                 /* SAVE RETURN ADDR      @G24LB18*/
         ST    REG14,SAVERET2                                      0333
*   NVOL=JFCBNVOL;                  /* GET NO. OF VOL SERS   @G24LB18*/
         L     @10,JFCBPTR                                         0334
         SLR   NVOL,NVOL                                           0334
         IC    NVOL,JFCBNVOL(,@10)                                 0334
*   IF NVOL>FIVE THEN               /* IF MORE THAN 5,       @G24LB18*/
         LA    @10,5                                               0335
         CR    NVOL,@10                                            0335
         BNH   @RF00335                                            0335
*     NVOL=FIVE;                    /* SET NO. OF VOLSERS=5  @G24LB18*/
         LR    NVOL,@10                                            0336
*   UNITP=''B;                      /* CLEAR UNITP PARM LIST @G24LB18*/
@RF00335 LA    @10,UNITRPL                                         0337
         XC    UNITP(17,@10),UNITP(@10)                            0337
*   UNIFMTD=ON;                     /* SET FUNCTION FLAG     @G24LB18*/
         OI    UNIFMTD(@10),B'10000000'                            0338
*   INDEX=ONE;                      /* INITIALIZE INDEX=1    @G24LB18*/
         MVI   INDEX,X'01'                                         0339
*   DO WHILE NVOL>ZERO;             /* DO FOR EACH VOL SER   @G24LB18*/
         B     @DE00340                                            0340
@DL00340 DS    0H                                                  0341
*     UNIVOL=JFCAVOLS(INDEX);       /* MOVE IN VOL SER       @G24LB18*/
         LA    @10,UNITRPL                                         0341
         SLR   @01,@01                                             0341
         IC    @01,INDEX                                           0341
         MH    @01,@CH01185                                        0341
         L     @07,JFCBPTR                                         0341
         ALR   @07,@01                                             0341
         MVC   UNIVOL(6,@10),JFCAVOLS-6(@07)                       0341
*     CALL ICBVUP01(UNITP,VVICB);   /* CALL UNIT PROCESSOR   @G24LB18*/
*                                                                  0342
         ST    @10,@AL00001                                        0342
         L     @10,VVIPTR                                          0342
         ST    @10,@AL00001+4                                      0342
         L     @15,@CV00055                                        0342
         LA    @01,@AL00001                                        0342
         BALR  @14,@15                                             0342
*     /***************************************************************/
*     /*                                                             */
*     /* IF THE RETURN CODE = 0 FROM THE UNIT PROCESSOR      @G24LB18*/
*     /* (VOL SER FOUND MOUNTED), TEST THE MOUNT AND USE     @G24LB18*/
*     /* ATTRIBUTES IN THE UCB RETURNED BY THE UNIT          @G24LB18*/
*     /* PROCESSOR. IF THE VOLUME IS MOUNTED PUBLIC          @G24LB18*/
*     /* REMOVABLE, RETURN TO ALLOCSEL WITHOUT SETTING THE   @G24LB18*/
*     /* PRIVATE REQUEST INDICATOR.                          @G24LB18*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0343
*     IF RETCODE=ZERO THEN          /* VOLUME MOUNTED?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0343
         BNZ   @RF00343                                            0343
*       DO;                         /* YES                   @G24LB18*/
*         UCBPTR=UNIUCBP;           /* GET UCB ADDRESS       @G24LB18*/
         LA    @10,UNITRPL                                         0345
         L     UCBPTR,UNIUCBP(,@10)                                0345
*         IF UCBBPUB=ON&            /* IS VOLUME PUBLIC      @G24LB18*/
*             (UCBPRES=OFF&         /* AND REMOVABLE?        @G24LB18*/
*             UCBRESV=OFF) THEN     /* YES -                 @G24LB18*/
         TM    UCBBPUB(UCBPTR),B'00001000'                         0346
         BNO   @RF00346                                            0346
         TM    UCBPRES(UCBPTR),B'00100100'                         0346
         BNZ   @RF00346                                            0346
*           DO;                     /*                       @G24LB18*/
*             REG14=SAVERET2;       /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0348
*             RETURN;               /* RETURN TO ALLOCSEL    @G24LB18*/
@EL00006 DS    0H                                                  0349
@EF00006 DS    0H                                                  0349
@ER00006 BR    @14                                                 0349
*           END;                    /*                       @G24LB18*/
*       END;                        /*                       @G24LB18*/
@RF00346 DS    0H                                                  0352
*     INDEX=INDEX+ONE;              /* INCREMENT INDEX BY 1  @G24LB18*/
@RF00343 IC    @01,INDEX                                           0352
         LA    @01,1(,@01)                                         0352
         STC   @01,INDEX                                           0352
*     NVOL=NVOL-ONE;                /* DECREMENT NO OF VOLS  @G24LB18*/
         BCTR  NVOL,0                                              0353
*   END;                            /*                       @G24LB18*/
*                                                                  0354
@DE00340 SLR   @10,@10                                             0354
         CR    NVOL,@10                                            0354
         BH    @DL00340                                            0354
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE ARE ANY JFCB EXTENSIONS, PASS EACH VOL SER   @G24LB18*/
*   /* IN THE EXTENSIONS TO THE UNIT PROCESSOR TO DETERMINE  @G24LB18*/
*   /* WHICH UCB IT IS MOUNTED ON.                           @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0355
*   IF SELJFCBX^=ZERO THEN          /* ANY JFCB EXTENSIONS?  @G24LB18*/
         L     @02,SELJFCBX(,PARMPTR)                              0355
         CR    @02,@10                                             0355
         BE    @RF00355                                            0355
*     DO;                           /* YES                   @G24LB18*/
*       XVOL=JFCBNVOL-FIVE;         /* GET TOTAL NO. OF VOLS @G24LB18*/
         L     @01,JFCBPTR                                         0357
         SLR   @07,@07                                             0357
         IC    @07,JFCBNVOL(,@01)                                  0357
         SL    @07,@CF00111                                        0357
         STC   @07,XVOL                                            0357
*       JFCBXPTR=SELJFCBX;          /* GET ADDR OF 1ST EXTN  @G24LB18*/
         LR    JFCBXPTR,@02                                        0358
*       DO WHILE JFCBXPTR^=ZERO;    /* DO FOR EACH EXTENSION @G24LB18*/
         B     @DE00359                                            0359
@DL00359 DS    0H                                                  0360
*         IF JFCBXNXT=ZERO THEN     /* NEXT EXTN PTR = 0?    @G24LB18*/
         L     @02,JFCBXNXT(,JFCBXPTR)                             0360
         LTR   @02,@02                                             0360
         BNZ   @RF00360                                            0360
*           NVOL=XVOL;              /* YES-SET NO. VOLS =    @G24LB18*/
         SLR   NVOL,NVOL                                           0361
         IC    NVOL,XVOL                                           0361
*         ELSE                      /* TOTAL REMAINING       @G24LB18*/
*           NVOL=FIFTEEN;           /* NO-SET NO. VOLS = 15  @G24LB18*/
         B     @RC00360                                            0362
@RF00360 LA    NVOL,15                                             0362
*         INDEX=ONE;                /* INITIALIZE INDEX = 1  @G24LB18*/
@RC00360 MVI   INDEX,X'01'                                         0363
*         DO WHILE NVOL>ZERO;       /* DO FOR EACH VOL SER   @G24LB18*/
         B     @DE00364                                            0364
@DL00364 DS    0H                                                  0365
*           UNIVOL=JFCBXVOL(INDEX); /* MOVE IN VOL SER       @G24LB18*/
         LA    @01,UNITRPL                                         0365
         SLR   @07,@07                                             0365
         IC    @07,INDEX                                           0365
         MH    @07,@CH01185                                        0365
         ALR   @07,JFCBXPTR                                        0365
         BCTR  @07,0                                               0365
         BCTR  @07,0                                               0365
         MVC   UNIVOL(6,@01),JFCBXVOL-4(@07)                       0365
*           CALL ICBVUP01(UNITP,VVICB);/* CALL UNIT PROC     @G24LB18*/
*                                                                  0366
         ST    @01,@AL00001                                        0366
         L     @01,VVIPTR                                          0366
         ST    @01,@AL00001+4                                      0366
         L     @15,@CV00055                                        0366
         LA    @01,@AL00001                                        0366
         BALR  @14,@15                                             0366
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE RETURN CODE = 0 FROM THE UNIT          @G24LB18*/
*           /* PROCESSOR (VOL SER FOUND MOUNTED), TEST THE   @G24LB18*/
*           /* MOUNT AND USE ATTRIBUTES IN THE UCB RETURNED  @G24LB18*/
*           /* BY THE UNIT PROCESSOR. IF THE VOLUME IS       @G24LB18*/
*           /* MOUNTED PUBLIC REMOVABLE, RETURN TO ALLOCSEL  @G24LB18*/
*           /* WITHOUT SETTING THE PRIVATE REQUEST INDICATOR.@G24LB18*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0367
*           IF RETCODE=ZERO THEN    /* VOLUME MOUNTED?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0367
         BNZ   @RF00367                                            0367
*             DO;                   /* YES                   @G24LB18*/
*               UCBPTR=UNIUCBP;     /* GET UCB ADDRESS       @G24LB18*/
         LA    @01,UNITRPL                                         0369
         L     UCBPTR,UNIUCBP(,@01)                                0369
*               IF UCBBPUB=ON&      /* IS VOLUME PUBLIC      @G24LB18*/
*                   (UCBPRES=OFF&   /* AND REMOVABLE?        @G24LB18*/
*                   UCBRESV=OFF) THEN/* YES -                @G24LB18*/
         TM    UCBBPUB(UCBPTR),B'00001000'                         0370
         BNO   @RF00370                                            0370
         TM    UCBPRES(UCBPTR),B'00100100'                         0370
         BNZ   @RF00370                                            0370
*                 DO;               /*                       @G24LB18*/
*                   REG14=SAVERET2; /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0372
*                   RETURN;         /* RETURN TO ALLOCSEL    @G24LB18*/
         B     @EL00006                                            0373
*                 END;              /*                       @G24LB18*/
*             END;                  /*                       @G24LB18*/
@RF00370 DS    0H                                                  0376
*           INDEX=INDEX+ONE;        /* INCREMENT INDEX BY 1  @G24LB18*/
@RF00367 IC    @01,INDEX                                           0376
         LA    @01,1(,@01)                                         0376
         STC   @01,INDEX                                           0376
*           NVOL=NVOL-ONE;          /* DECREMENT NO. OF VOLS @G24LB18*/
         BCTR  NVOL,0                                              0377
*         END;                      /*                       @G24LB18*/
@DE00364 C     NVOL,@CF00061                                       0378
         BH    @DL00364                                            0378
*         JFCBXPTR=JFCBXNXT;        /* POINT TO NEXT EXTN    @G24LB18*/
         L     JFCBXPTR,JFCBXNXT(,JFCBXPTR)                        0379
*         XVOL=XVOL-FIFTEEN;        /* DECREMENT XVOL BY 15  @G24LB18*/
         SLR   @02,@02                                             0380
         IC    @02,XVOL                                            0380
         SL    @02,@CF00060                                        0380
         STC   @02,XVOL                                            0380
*       END;                        /* ALL EXTNS PROCESSED   @G24LB18*/
@DE00359 LTR   JFCBXPTR,JFCBXPTR                                   0381
         BNZ   @DL00359                                            0381
*     END;                          /*                       @G24LB18*/
*                                                                  0382
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE 'MARK REQUEST PRIVATE' INDICATOR IN THE       @G24LB18*/
*   /* SELECT REQUEST BLOCK AND RETURN TO ALLOCSEL.          @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0383
*   SELRPRIV=ON;                    /* SET PRIVATE INDICATOR @G24LB18*/
@RF00355 OI    SELRPRIV(PARMPTR),B'00000010'                       0383
*   REG14=SAVERET2;                 /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0384
*   RETURN;                         /* RETURN TO ALLOCSEL    @G24LB18*/
         B     @EL00006                                            0385
*   END SETPRIV;                    /* END SET PRIVATE RTN   @G24LB18*/
*                                                                  0387
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - SPACEACC                                @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS ROUTINE IS CALLED ON ALLOCATION SELECT   @G24LB18*/
*/*            REQUESTS WHICH ARE VOL=REFS TO MSVGP DDS.     @G24LB18*/
*/*            IT QUEUES THE REQUESTS UP TO THE MSVC SUBTASK @G24LB18*/
*/*            TO HAVE THE AVAILABLE SPACE COUNTS UPDATED    @G24LB18*/
*/*            FOR THE REQUESTED VOLUMES, WAITS FOR SUBTASK  @G24LB18*/
*/*            COMPLETION, AND RETURNS TO ALLOCSEL.          @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - SELECT REQUEST BLOCK, JFCB, JFCB EXTENSIONS (IF  @G24LB18*/
*/*         ANY), AND VVICB.                                 @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - AN RPLV CONTAINING THE SELECT REQUEST BLOCK,    @G24LB18*/
*/*          JFCB, JFCB EXTENSIONS, AND GROUP PARAMETERS     @G24LB18*/
*/*          AREA IS BUILT AND ADDED TO THE MSVC SUBTASK     @G24LB18*/
*/*          QUEUE.                                          @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0387
*SPACEACC:                                                         0387
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
*                                                                  0387
SPACEACC DS    0H                                                  0388
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MSVC IS DISABLED, RETURN TO ALLOCSEL WITHOUT       @G24LB18*/
*   /* QUEUING UP THE REQUEST.                               @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   IF VVIFLG0=ON THEN              /* IS MSVC DISABLED?     @G24LB18*/
         L     @10,VVIPTR                                          0388
         TM    VVIFLG0(@10),B'10000000'                            0388
         BO    @RT00388                                            0388
*     RETURN;                       /* YES - RETURN TO       @G24LB18
*                                      ALLOCSEL              @G24LB18*/
*                                                                  0389
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE LENGTH OF THE RPLV AND CALL PROCEDURE   @G24LB18*/
*   /* GETRPLV TO GETMAIN THE RPLV. IF THE GETMAIN FAILS,    @G24LB18*/
*   /* RETURN TO ALLOCSEL WITHOUT QUEUING UP THE REQUEST.    @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*   GETLEN=LENGTH(RPLV);            /* SET RPLV BASE LENGTH  @G24LB18*/
         LA    GETLEN,132                                          0390
*   GETLEN=GETLEN+RLENGTH;          /* ADD REQUEST LENGTH    @G24LB18*/
         ICM   @02,15,RLENGTH(PARMPTR)                             0391
         ALR   GETLEN,@02                                          0391
*   GETLEN=GETLEN+LJFCBOX;          /* ADD JFCB LENGTH       @G24LB18*/
         AL    GETLEN,@CF00120                                     0392
*   GETLEN=GETLEN+LENGTH(GRPPR);    /* ADD GROUP PARM LENGTH @G24LB18*/
         AL    GETLEN,@CF01851                                     0393
*   IF SELJFCBX^=ZERO THEN          /* ANY JFCB EXTENSIONS?  @G24LB18*/
         SLR   @02,@02                                             0394
         C     @02,SELJFCBX(,PARMPTR)                              0394
         BE    @RF00394                                            0394
*     DO;                           /* YES                   @G24LB18*/
*       NJFCBEXT=(JFCBNVOL-FIVE)/FIFTEEN;/* GET NO. OF EXTS  @G24LB18*/
         LA    @01,15                                              0396
         L     @07,JFCBPTR                                         0396
         SLR   @06,@06                                             0396
         IC    @06,JFCBNVOL(,@07)                                  0396
         SL    @06,@CF00111                                        0396
         LR    @04,@06                                             0396
         SRDA  @04,32                                              0396
         DR    @04,@01                                             0396
         STC   @05,NJFCBEXT                                        0396
*       IF(JFCBNVOL-FIVE)//FIFTEEN^=ZERO THEN/* REMAINDER?   @G24LB18*/
         SRDA  @06,32                                              0397
         DR    @06,@01                                             0397
         CR    @06,@02                                             0397
         BE    @RF00397                                            0397
*         NJFCBEXT=NJFCBEXT+ONE;    /* YES-ADD 1 TO NO. EXTS @G24LB18*/
         LA    @05,1(,@05)                                         0398
         STC   @05,NJFCBEXT                                        0398
*       GETLEN=GETLEN+NJFCBEXT*LJFCBOX;/* ADD LENGTH OF      @G24LB18*/
@RF00397 SLR   @02,@02                                             0399
         IC    @02,NJFCBEXT                                        0399
         MH    @02,@CH00120                                        0399
         ALR   GETLEN,@02                                          0399
*     END;                          /* EXTENSIONS TO RPLV    @G24LB18*/
*   SAVERET2=REG14;                 /* SAVE RETURN ADDRESS   @G24LB18*/
@RF00394 ST    REG14,SAVERET2                                      0401
*   CALL GETRPLV;                   /* CALL GETMAIN RTN      @G24LB18*/
         BAL   @14,GETRPLV                                         0402
*   IF RETCODE^=ZERO THEN           /* STORAGE GOTTEN?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0403
         BZ    @RF00403                                            0403
*     DO;                           /* NO                    @G24LB18*/
*       REG14=SAVERET2;             /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0405
*       RETURN;                     /* RETURN TO ALLOCSEL    @G24LB18*/
@EL00007 DS    0H                                                  0406
@EF00007 DS    0H                                                  0406
@ER00007 BR    @14                                                 0406
*     END;                          /*                       @G24LB18*/
*                                                                  0408
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE THE SELECT REQUEST BLOCK AND THE JFCB INTO THE   @G24LB18*/
*   /* RPLV AND CHAIN THE JFCB AND THE GROUP PARAMETER AREA  @G24LB18*/
*   /* IN THE RPLV TO THE SELECT REQUEST BLOCK IN THE RPLV.  @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0408
*   REG3=RLENGTH;                   /* SET REQUEST LENGTH    @G24LB18*/
@RF00403 ICM   @10,15,RLENGTH(PARMPTR)                             0408
         LR    REG3,@10                                            0408
*   RPLVUTIL(1:REG3)=PARMLIST;      /* COPY REQUEST TO RPLV  @G24LB18*/
         LR    @01,REG3                                            0409
         BCTR  @01,0                                               0409
         EX    @01,@SM01855                                        0409
*   MOVEPTR=ADDR(RPLVUTIL);         /* SET RPLV REQ ADDR     @G24LB18*/
         LA    MOVEPTR,RPLVUTIL(,RPLVPTR)                          0410
*   MOVEPTR=MOVEPTR+RLENGTH;        /* ADD REQUEST LENGTH    @G24LB18*/
         ALR   MOVEPTR,@10                                         0411
*   REG3=LJFCBOX;                   /* SET JFCB LENGTH       @G24LB18*/
         LA    @10,176                                             0412
         LR    REG3,@10                                            0412
*   MOVELST(1:REG3)=INFMJFCB;       /* COPY JFCB INTO RPLV   @G24LB18*/
         LR    @01,REG3                                            0413
         BCTR  @01,0                                               0413
         L     @07,JFCBPTR                                         0413
         EX    @01,@SM01869                                        0413
*   RFY                                                            0414
*     SELRB BASED(ADDR(RPLVUTIL));  /* BASE SELRB IN RPLV    @G24LB18*/
*   SELJFCBA=MOVEPTR;               /* SET JFCB ADDR         @G24LB18*/
         LA    @01,132                                             0415
         ALR   @01,RPLVPTR                                         0415
         ST    MOVEPTR,SELJFCBA(,@01)                              0415
*   MOVEPTR=MOVEPTR+LJFCBOX;        /* ADD JFCB LENGTH       @G24LB18*/
         ALR   MOVEPTR,@10                                         0416
*   SELGRPPR=MOVEPTR;               /* SET GROUP PARMS ADDR  @G24LB18*/
         ST    MOVEPTR,SELGRPPR(,@01)                              0417
*                                                                  0418
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE ARE ANY JFCB EXTENSIONS, MOVE THEM INTO THE  @G24LB18*/
*   /* RPLV AND CHAIN THEM TOGETHER. ZERO THE 'NEXT          @G24LB18*/
*   /* EXTENSION' POINTER IN THE LAST EXTENSION IN THE RPLV  @G24LB18*/
*   /* AND CHAIN THE FIRST EXTENSION IN THE RPLV TO THE      @G24LB18*/
*   /* SELECT REQUEST BLOCK IN THE RPLV.                     @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0418
*   IF SELJFCBX^=ZERO THEN          /* ANY JFCB EXTENSIONS?  @G24LB18*/
         L     @10,SELJFCBX(,@01)                                  0418
         LTR   @10,@10                                             0418
         BZ    @RF00418                                            0418
*     DO;                           /* YES                   @G24LB18*/
         ST    @10,@TF00001                                        0419
*       MOVEPTR=MOVEPTR+LENGTH(GRPPR);/* SET RPLV EXTN ADDR  @G24LB18*/
         AL    MOVEPTR,@CF01851                                    0420
*       JFCBXPTR=SELJFCBX;          /* GET 1ST JFCB EXTN     @G24LB18*/
         L     JFCBXPTR,@TF00001                                   0421
*       SELJFCBX=MOVEPTR;           /* SET 1ST RPLV EXTN PTR @G24LB18*/
         ST    MOVEPTR,SELJFCBX(,@01)                              0422
*       DO WHILE NJFCBEXT>ZERO;     /* DO FOR EACH EXTENSION @G24LB18*/
         B     @DE00423                                            0423
@DL00423 DS    0H                                                  0424
*         MOVELST(1:REG3)=JFCBX;    /* COPY EXTN INTO RPLV   @G24LB18*/
         LR    @01,REG3                                            0424
         BCTR  @01,0                                               0424
         EX    @01,@SM01871                                        0424
*         JFCBXPTR=JFCBXNXT;        /* GET PTR TO NEXT EXTN  @G24LB18*/
         L     JFCBXPTR,JFCBXNXT(,JFCBXPTR)                        0425
*         MOVEPTR->JFCBXNXT=MOVEPTR+LJFCBOX;/* CHAIN EXTN    @G24LB18*/
         LA    @01,176                                             0426
         LR    @07,MOVEPTR                                         0426
         ALR   @07,@01                                             0426
         ST    @07,JFCBXNXT(,MOVEPTR)                              0426
*         MOVEPTR=MOVEPTR+LJFCBOX;  /* INCREMENT RPLV PTR    @G24LB18*/
         ALR   MOVEPTR,@01                                         0427
*         NJFCBEXT=NJFCBEXT-ONE;    /* DECREMENT NO. OF EXTS @G24LB18*/
         SLR   @01,@01                                             0428
         IC    @01,NJFCBEXT                                        0428
         BCTR  @01,0                                               0428
         STC   @01,NJFCBEXT                                        0428
*       END;                        /*                       @G24LB18*/
@DE00423 CLI   NJFCBEXT,0                                          0429
         BH    @DL00423                                            0429
*       MOVEPTR=MOVEPTR-LJFCBOX;    /* GET LAST EXTN IN RPLV @G24LB18*/
         SL    MOVEPTR,@CF00120                                    0430
*       MOVEPTR->JFCBXNXT=ZERO;     /* ZERO NEXT EXTN PTR    @G24LB18*/
         SLR   @10,@10                                             0431
         ST    @10,JFCBXNXT(,MOVEPTR)                              0431
*     END;                          /*                       @G24LB18*/
*                                                                  0433
*   /*****************************************************************/
*   /*                                                               */
*   /* INDICATE WAIT ON MSVC SUBTASK COMPLETION AND CALL     @G24LB18*/
*   /* PROCEDURE QUERPLV TO ADD THE RPLV TO THE MSVC SUBTASK @G24LB18*/
*   /* HIGH PRIORITY QUEUE AND WAIT FOR SUBTASK COMPLETION.  @G24LB18*/
*   /* ON RETURN, FREEMAIN THE RPLV AND RETURN TO ALLOCSEL.  @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0433
*   RFY                                                            0433
*     REG1 RSTD;                    /* RESTRICT REG 1        @G24LB18*/
@RF00418 DS    0H                                                  0434
*   RPLVPOST=ON;                    /* INDICATE WAIT         @G24LB18*/
         OI    RPLVPOST(RPLVPTR),B'01000000'                       0434
*   CALL QUERPLV;                   /* CALL QUEUING RTN      @G24LB18*/
         BAL   @14,QUERPLV                                         0435
*   REG0=RPLVTLEN;                  /* SET FREEMAIN LENGTH   @G24LB18*/
         LH    REG0,RPLVTLEN(,RPLVPTR)                             0436
*   REG1=RPLVPTR;                   /* SET FREEMAIN ADDRESS  @G24LB18*/
         LR    REG1,RPLVPTR                                        0437
*LFREM2:                                                           0438
*   GEN(FREEMAIN RC,LV=(0),A=(1),SP=241);/* FREEMAIN RPLV    @G24LB18*/
LFREM2   FREEMAIN RC,LV=(0),A=(1),SP=241
*   REG14=SAVERET2;                 /* RESTORE RETURN ADDR   @G24LB18*/
         L     REG14,SAVERET2                                      0439
*   RFY                                                            0440
*     REG1 UNRSTD;                  /* UNRESTRICT REG 1      @G24LB18*/
*   RETURN;                         /* RETURN TO ALLOCSEL    @G24LB18*/
         B     @EL00007                                            0441
*   END SPACEACC;                   /* END SPACE ACCOUNT RTN @G24LB18*/
         B     @EL00007                                            0442
*                                                                  0443
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - GETRPLV                                 @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS SUBROUTINE IS CALLED WHEN STORAGE IS     @G24LB18*/
*/*            REQUIRED FOR AN RPLV. IT GETMAINS STORAGE     @G24LB18*/
*/*            FOR THE RPLV, SETS UP ADDRESSABILITY TO IT,   @G24LB18*/
*/*            CLEARS IT, AND INITIALIZES THE COMMON FIELDS. @G24LB18*/
*/*            IF THE GETMAIN FAILS, THE ROUTINE ISSUES A    @G24LB18*/
*/*            CONSOLE ERROR MESSAGE AND RETURNS A RETURN    @G24LB18*/
*/*            CODE OF 4.                                    @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - LENGTH OF STORAGE NEEDED IN FIELD GETLEN AND     @G24LB18*/
*/*         ASCB ADDRESS IN REG 7.                           @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - IF GETMAIN IS SUCCESSFUL, AN INITIALIZED RPLV   @G24LB18*/
*/*          POINTED TO BY RPLVPTR IS RETURNED ALONG WITH    @G24LB18*/
*/*          A ZERO RETURN CODE IN REG 15.                   @G24LB18*/
*/*                                                          @G24LB18*/
*/*          IF GETMAIN FAILS, CONSOLE ERROR MESSAGE ICB409I @G24LB18*/
*/*          'NO STORAGE AVAILABLE' IS ISSUED AND RETURN     @G24LB18*/
*/*          CODE = 4 IS RETURNED IN REG 15.                 @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0443
*GETRPLV:                                                          0443
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
*                                                                  0443
GETRPLV  DS    0H                                                  0444
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE GETMAIN FROM SUBPOOL 241 FOR THE RPLV. IF THE   @G24LB18*/
*   /* GETMAIN FAILS, ISSUE CONSOLE ERROR MESSAGE ICB409I    @G24LB18*/
*   /* 'NO STORAGE AVAILABLE', SET RETURN CODE               @G24LB18*/
*   /* OF 4 IN REG 15, AND RETURN TO CALLER.                 @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0444
*   RFY                                                            0444
*     REG1 RSTD;                    /* RESTRICT REG 1        @G24LB18*/
*   REG0=GETLEN;                    /* SET GETMAIN LENGTH    @G24LB18*/
         LR    REG0,GETLEN                                         0445
*LGET1:                                                            0446
*   GEN(GETMAIN RC,LV=(0),SP=241);  /* GETMAIN RPLV          @G24LB18*/
LGET1    GETMAIN RC,LV=(0),SP=241
*   IF RETCODE^=ZERO THEN           /* STORAGE GOTTEN?       @G24LB18*/
         LTR   RETCODE,RETCODE                                     0447
         BZ    @RF00447                                            0447
*     DO;                           /* NO                    @G24LB18*/
*       REG1=ADDR(MSG1);            /* POINT TO ERROR MSG    @G24LB18*/
         LA    REG1,MSG1                                           0449
*LWTO2:                                                            0450
*       GEN(WTO MF=(E,(REG1)));     /* SEND ERROR MESSAGE    @G24LB18*/
LWTO2    WTO MF=(E,(REG1))
*       RETCODE=FOUR;               /* SET RETURN CODE = 4   @G24LB18*/
         LA    RETCODE,4                                           0451
*       RETURN;                     /* RETURN TO CALLER      @G24LB18*/
@EL00008 DS    0H                                                  0452
@EF00008 DS    0H                                                  0452
@ER00008 BR    @14                                                 0452
*     END;                          /*                       @G24LB18*/
*                                                                  0454
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSABILITY TO THE RPLV, CLEAR IT, AND      @G24LB18*/
*   /* INITIALIZE THE COMMON FIELDS IN IT. SET RETURN CODE   @G24LB18*/
*   /* OF 0 IN REG 15 AND RETURN TO CALLER.                  @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0454
*   RPLVPTR=REG1;                   /* BASE RPLV             @G24LB18*/
@RF00447 LR    RPLVPTR,REG1                                        0454
*   RPLV=RPLV&&RPLV;                /* CLEAR RPLV BASE       @G24LB18*/
         XC    RPLV(132,RPLVPTR),RPLV(RPLVPTR)                     0455
*   RPLVTLEN=GETLEN;                /* SET RPLV LENGTH       @G24LB18*/
         STH   GETLEN,RPLVTLEN(,RPLVPTR)                           0456
*   RPLASCBP=ASCBSAVE;              /* SET ASCB ADDRESS      @G24LB18*/
         L     @10,CVTPTR                                          0457
         L     @10,CVTTCBP(,@10)                                   0457
         L     @10,ASCBSAVE(,@10)                                  0457
         ST    @10,RPLASCBP(,RPLVPTR)                              0457
*   RETCODE=ZERO;                   /* SET RETURN CODE = 0   @G24LB18*/
         SLR   RETCODE,RETCODE                                     0458
*   RFY                                                            0459
*     REG1 UNRSTD;                  /* UNRESTRICT REG 1      @G24LB18*/
*   RETURN;                         /* RETURN TO CALLER      @G24LB18*/
         B     @EL00008                                            0460
*   END GETRPLV;                    /* END GETMAIN RTN       @G24LB18*/
*                                                                  0462
*/*********************************************************  @G24LB18*/
*/*                                                          @G24LB18*/
*/* PROCEDURE NAME - QUERPLV                                 @G24LB18*/
*/*                                                          @G24LB18*/
*/* FUNCTION - THIS SUBROUTINE IS CALLED WHEN A REQUEST IS   @G24LB18*/
*/*            TO BE ADDED TO THE MSVC SUBTASK QUEUES SO     @G24LB18*/
*/*            THAT THE REQUESTED FUNCTION CAN BE COMPLETED  @G24LB18*/
*/*            BY THE MSVC SUBTASK. THE ROUTINE ADDS THE     @G24LB18*/
*/*            RPLV TO THE MSVC HIGH PRIORITY QUEUE, WAITS   @G24LB18*/
*/*            ON SUBTASK COMPLETION IF REQUESTED, AND       @G24LB18*/
*/*            RETURNS TO THE CALLER.                        @G24LB18*/
*/*                                                          @G24LB18*/
*/* INPUT - THE RPLV AND THE VVICB.                          @G24LB18*/
*/*                                                          @G24LB18*/
*/* OUTPUT - THE RPLV IS ADDED TO THE MSVC SUBTASK HIGH      @G24LB18*/
*/*          PRIORITY QUEUE.                                 @G24LB18*/
*/*                                                          @G24LB18*/
*/*********************************************************  @G24LB18*/
*                                                                  0462
*QUERPLV:                                                          0462
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @G24LB18*/
QUERPLV  DS    0H                                                  0463
*                                                                  0463
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE THE 'WAIT' OR 'NO WAIT' INDICATOR FROM THE RPLV. @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0463
*   REG3=ONE;                       /* SET 'NO WAIT'         @G24LB18*/
         LA    REG3,1                                              0463
*   IF RPLVPOST=ON THEN             /* IS WAIT REQUESTED?    @G24LB18*/
         TM    RPLVPOST(RPLVPTR),B'01000000'                       0464
         BNO   @RF00464                                            0464
*     REG3=ZERO;                    /* YES - SET 'WAIT'      @G24LB18*/
         SLR   REG3,REG3                                           0465
*                                                                  0466
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE HIGH PRIORITY QUEUE POINTER FROM THE VVICB    @G24LB18*/
*   /* AND CHAIN THE RPLV TO THE HEAD OF THE QUEUE USING     @G24LB18*/
*   /* COMPARE AND SWAP.                                     @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0466
*   RFY                                                            0466
*     REG1 RSTD;                    /* RESTRICT REG 1        @G24LB18*/
@RF00464 DS    0H                                                  0467
*   RFY                                                            0467
*     REG2 RSTD;                    /* RESTRICT REG 2        @G24LB18*/
*ADDRA:                                                            0468
*   REG2=ADDR(VVIQRPL1);            /* POINT TO QUEUE HEAD   @G24LB18*/
ADDRA    L     @10,VVIPTR                                          0468
         LA    REG2,VVIQRPL1(,@10)                                 0468
*   REG1=VVIQRPL1;                  /* POINT TO 1ST RPLV     @G24LB18*/
         L     REG1,VVIQRPL1(,@10)                                 0469
*   RPLVQPTR=REG1;                  /* SET FORWARD CHAIN PTR @G24LB18*/
         ST    REG1,RPLVQPTR(,RPLVPTR)                             0470
*   GEN(CS    REG1,RPLVPTR,M0(REG2));/* COMPARE AND SWAP     @G24LB18*/
         CS    REG1,RPLVPTR,M0(REG2)
*   BC(FOUR,ADDRA);                 /* IF FAIL, REPEAT       @G24LB18*/
         BC    4,ADDRA                                             0472
*                                                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE VVICB FOR A CROSS MEMORY POST.         @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0473
*   VVIRES4=ADDR(VVIECB1);          /* SET PARM LIST ECB     @G24LB18*/
         L     @10,VVIPTR                                          0473
         LA    @07,VVIECB1(,@10)                                   0473
         ST    @07,VVIRES4(,@10)                                   0473
*   VVIRES5=ASVTENTY(ONE);          /* SET PARM LIST ASCB    @G24LB18*/
         L     @07,CVTPTR                                          0474
         L     @06,ASVTPTR(,@07)                                   0474
         L     @06,ASVTENTY(,@06)                                  0474
         ST    @06,VVIRES5(,@10)                                   0474
*   VVIRES6=ADDR(CVTBRET);          /* SET PARM LIST ERRADDR @ZA28148*/
         LA    @07,CVTBRET(,@07)                                   0475
         ST    @07,VVIRES6(,@10)                                   0475
*   REG1=ADDR(VVIRES4);             /* SET PARM REG          @G24LB18*/
         LA    REG1,VVIRES4(,@10)                                  0476
*   GEN(ICM   REG1,M8,EID);         /* INDICATE PARM LIST    @G24LB18*/
         ICM   REG1,M8,EID
*   REG0=ZERO;                      /* SET POST CODE         @G24LB18*/
*                                                                  0478
         SLR   REG0,REG0                                           0478
*   /*****************************************************************/
*   /*                                                               */
*   /* POST SUBTASK ECB IF REQUIRED.                         @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0479
*   IF VVIECB1^=PZERO THEN          /* IS POST REQUIRED?     @G24LB18*/
         L     @10,VVIPTR                                          0479
         CLC   VVIECB1(4,@10),PZERO                                0479
         BE    @RF00479                                            0479
*     DO;                           /* YES                   @G24LB18*/
*LPOST1:                                                           0481
*       GEN(SVC   POST);            /* POST SUBTASK          @G24LB18*/
LPOST1   SVC   POST
*     END;                          /*                       @G24LB18*/
*                                                                  0482
*   /*****************************************************************/
*   /*                                                               */
*   /* WAIT ON SUBTASK COMPLETION IF REQUESTED.              @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0483
*   IF REG3=ZERO THEN               /* IS WAIT REQUESTED?    @G24LB18*/
@RF00479 LTR   REG3,REG3                                           0483
         BNZ   @RF00483                                            0483
*     DO;                           /* YES                   @G24LB18*/
*       REG1=ADDR(RPLVECB);         /* SET ECB ADDR          @G24LB18*/
         LA    REG1,RPLVECB(,RPLVPTR)                              0485
*LWAIT1:                                                           0486
*       GEN(WAIT  1,ECB=(REG1));    /* WAIT FOR COMPLETION   @G24LB18*/
LWAIT1   WAIT  1,ECB=(REG1)
*     END;                          /*                       @G24LB18*/
*   RFY                                                            0488
*     REG1 UNRSTD;                  /* UNRESTRICT REG 1      @G24LB18*/
*   RFY                                                            0489
*     REG2 UNRSTD;                  /* UNRESTRICT REG 2      @G24LB18*/
*                                                                  0489
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE CALLER.                                 @G24LB18*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0490
*   RETURN;                         /* RETURN TO CALLER      @G24LB18*/
@EL00009 DS    0H                                                  0490
@EF00009 DS    0H                                                  0490
@ER00009 BR    @14                                                 0490
*   END QUERPLV;                    /* END QUEUING RTN       @G24LB18*/
         B     @EL00009                                            0491
@PB00009 DS    0H                                                  0491
*   END ICBVSC00                    /* END MSVC SCREENER     @G24LB18*/
*                                                                  0492
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZSSC  )                                       */
*/*%INCLUDE SYSLIB  (IEZVVICB)                                       */
*/*%INCLUDE SYSLIB  (IEZRPLV )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IEZUNITP)                                       */
*/*%INCLUDE SYSLIB  (IEZTABP )                                       */
*/*%INCLUDE SYSLIB  (IEZSTPTB)                                       */
*/*%INCLUDE SYSLIB  (IEZVOLRT)                                       */
*/*%INCLUDE SYSLIB  (IEZGRPPR)                                       */
*                                                                  0492
*       ;                                                          0492
@DATA    DS    0H
@CH01185 DC    H'6'
@SM01855 MVC   RPLVUTIL(0,RPLVPTR),PARMLIST(PARMPTR)
@SM01862 MVC   MOVELST(0,MOVEPTR),INFMJFCB(@06)
@SM01866 MVC   INFMJFCB(0,@10),MOVELST(MOVEPTR)
@SM01869 MVC   MOVELST(0,MOVEPTR),INFMJFCB(@07)
@SM01871 MVC   MOVELST(0,MOVEPTR),JFCBX(JFCBXPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    2A
@TF00001 DS    F
ICBVSC00 CSECT
         DS    0F
@CF00061 DC    F'0'
@CF00109 DC    F'4'
@CF00111 DC    F'5'
@CF00069 DC    F'8'
@CF01851 DC    F'12'
@CF00060 DC    F'15'
@CF00120 DC    F'176'
@CH00120 EQU   @CF00120+2
@CF00063 DC    F'531'
@CF00065 DC    F'535'
@CF00067 DC    F'554'
@CF01865 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
VVIPTR   DS    A
JFCBPTR  DS    A
RETURNCD DS    F
REASONCD DS    F
SAVERET1 DS    F
SAVERET2 DS    F
NJFCBEXT DS    FL1
INDEX    DS    FL1
XVOL     DS    FL1
         DS    CL1
UNITRPL  DS    CL17
         DS    CL3
TABPRPL  DS    CL12
ICBVSC00 CSECT
         DS    0F
@SIZDATD DC    AL1(252)
         DC    AL3(@ENDDATD-@DATD)
@CV00055 DC    V(ICBVUP01)
@CV00056 DC    V(ICBVTP01)
         DS    0D
PZERO    DC    XL4'40000000'
EID      DC    XL1'80'
SECENTRY DC    XL1'80'
ABTRMIO  DC    XL1'40'
ABTRMNIO DC    XL1'20'
VSCPATCH DS    CL200
         ORG   VSCPATCH
@NM00001 DC    CL20'ICBVSC00 PATCH AREA '
@NM00002 DC    XL180'0'
         ORG   VSCPATCH+200
SYSGROUP DC    CL8'SYSGROUP'
ICBVSC00 CSECT
*                                                          /*@G24LB18*/
MSG1     WTO   'ICB409I NO STORAGE AVAILABLE',                         *
               ROUTCDE=(2,11),DESC=6,MF=L
ICBVSC00 CSECT
*                                                          /*@G24LB18*/
M0       EQU   0                     ZERO DISPLACEMENT       @G24LB18
M8       EQU   8                     HIGH ORDER BYTE MASK    @G24LB18
M24      EQU   24                    3 BYTE SHIFT MASK       @G24LB18
POST     EQU   2                     POST SVC MASK           @G24LB18
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICBVSC00 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
NVOL     EQU   @02
GETLEN   EQU   @10
MOVEPTR  EQU   @02
UCBPTR   EQU   @06
RPLVPTR  EQU   @08
JFCBXPTR EQU   @10
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
PARMPTR  EQU   @09
REG13    EQU   @13
REG14    EQU   @14
RETCODE  EQU   @15
ARR1     EQU   @01
CVTPTR   EQU   16
TCBCHAN  EQU   0
ASCBSAVE EQU   TCBCHAN+12
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ICB2SSCB EQU   0
ICBOPT   EQU   ICB2SSCB+48
ICBFLG   EQU   ICB2SSCB+52
ICBFG1   EQU   ICBFLG
ICBVVICB EQU   ICB2SSCB+76
ICBTRACE EQU   ICB2SSCB+148
VVICB    EQU   0
VVIFLGA  EQU   VVICB+15
VVIFLG0  EQU   VVIFLGA
VVIECB1  EQU   VVICB+28
VVIQRPL1 EQU   VVICB+40
VVIRES4  EQU   VVICB+64
VVIRES5  EQU   VVICB+68
VVIRES6  EQU   VVICB+72
RPLV     EQU   0
RPLVQPTR EQU   RPLV
RPLVECB  EQU   RPLV+4
RPLTCBPR EQU   RPLV+8
RPLASCBP EQU   RPLTCBPR
RPLFLAGA EQU   RPLV+28
RPLVPOST EQU   RPLFLAGA
RPLVTLEN EQU   RPLV+30
RPLRCODE EQU   RPLV+32
RPLVRETC EQU   RPLV+34
RPLVSAM  EQU   RPLV+56
RPLVOPT  EQU   RPLVSAM+40
RPLVUTIL EQU   RPLV+132
ASVT     EQU   0
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCDISP  EQU   JFCBIND2
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
JFCBX    EQU   0
JFCBXVOL EQU   JFCBX+4
JFCBXNXT EQU   JFCBX+172
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBRESV  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00026 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
UNITP    EQU   0
UNIDEVTP EQU   UNITP
UNIVOL   EQU   UNITP+4
UNIUCBP  EQU   UNITP+12
UNIFLAGS EQU   UNITP+16
UNIFMTD  EQU   UNIFLAGS
UNIFALLV EQU   UNIFLAGS
TABP     EQU   0
TABFLAGS EQU   TABP
TABFBLDE EQU   TABFLAGS
TABFUTRM EQU   TABFLAGS
TABFFREE EQU   TABFLAGS
TABVOLID EQU   TABP+2
TABSELRB EQU   TABVOLID+2
TABJOBID EQU   TABSELRB
TABDDRET EQU   TABP+8
TABHDRET EQU   TABDDRET
STPTB    EQU   0
STPFLAGS EQU   STPTB+14
STPNOFRE EQU   STPFLAGS
STPDDENT EQU   0
STPDDFLG EQU   STPDDENT+24
VOLRT    EQU   0
VOLLEN   EQU   VOLRT
VOLNUM   EQU   VOLRT+2
GRPPR    EQU   0
ARLIST   EQU   0
ARFLG    EQU   ARLIST+6
ARVOL    EQU   ARLIST+8
AREXT    EQU   ARLIST+28
TRMRB    EQU   0
TRMFLAGS EQU   TRMRB+5
TRMALLOK EQU   TRMFLAGS
TRMJOBID EQU   TRMRB+8
TRMSTHDR EQU   TRMRB+12
SELRB    EQU   0
SELFLGS1 EQU   SELRB+5
SELVOLRF EQU   SELFLGS1
SELVRGRP EQU   SELFLGS1
SELMXESO EQU   SELFLGS1
SELFLGS2 EQU   SELRB+6
SELRPRIV EQU   SELFLGS2
SELNOVSL EQU   SELFLGS2
SELJFCBA EQU   SELRB+12
SELDEVTP EQU   SELRB+16
SELUCBAD EQU   SELRB+20
SELJFCBX EQU   SELRB+52
SELVLRET EQU   SELRB+56
SELGRPPR EQU   SELRB+60
PARMLIST EQU   0
REQUEST  EQU   PARMLIST
RLENGTH  EQU   REQUEST
OPCODE   EQU   REQUEST+4
MOVELIST EQU   0
MOVELST  EQU   MOVELIST
UCBBGN   EQU   0
UCBDCPTR EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
ASVTPTR  EQU   CVTASVT
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBNVOL EQU   JFCUCSEG+9
JFCBVOLS EQU   JFCUCSEG+10
JFCAVOLS EQU   JFCBVOLS
JFCBS001 EQU   JFCBVOLS
JFCMSVGP EQU   JFCBS001+22
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBMSGP EQU   JFCBCTRI
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
JFCBUAFF EQU   JFCFLGS1
JFCBSPNM EQU   JFCBS001+45
JFCBFLG3 EQU   JFCBSPNM
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00025 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
ICBPTR   EQU   CVTICB
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00025
UCBSKPFG EQU   @NM00025
UCBRIPND EQU   @NM00025
UCBRTIAC EQU   @NM00025
UCBRSV79 EQU   @NM00025
UCBRSV78 EQU   @NM00025
UCBRSV77 EQU   @NM00025
UCBOLTEP EQU   @NM00025
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00024 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBRV08 EQU   JFCBSPNM+1
JFCBRV07 EQU   JFCBFLG3
JFCBRV06 EQU   JFCBFLG3
JFCBRV05 EQU   JFCBFLG3
JFCBRV04 EQU   JFCBFLG3
JFCBRV03 EQU   JFCBFLG3
JFCBRV02 EQU   JFCBFLG3
JFCBRV01 EQU   JFCBFLG3
JFCDQDSP EQU   JFCBFLG3
JFCBDQTY EQU   JFCBS001+42
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
@NM00019 EQU   JFCBS001
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00018 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCORGAM EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00017 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
SELUNUSE EQU   SELRB+64
SELUNUS2 EQU   SELRB+48
SELRFDDN EQU   SELRB+46
SELDDNUM EQU   SELRB+44
SELDDCAT EQU   SELRB+42
SELUNUS1 EQU   SELRB+41
SELSTNUM EQU   SELRB+40
SELDDNAM EQU   SELRB+32
SELJOBNM EQU   SELRB+24
SELJOBID EQU   SELRB+8
SELUNCNT EQU   SELRB+7
SELINITC EQU   SELFLGS2
SELCNTWT EQU   SELFLGS2
SELUNSEP EQU   SELFLGS2
SELSUBAL EQU   SELFLGS2
SELSCSPL EQU   SELFLGS2
SELPRSPL EQU   SELFLGS2
SELVRNEW EQU   SELFLGS1
SELVENQV EQU   SELFLGS1
SELSEPVL EQU   SELFLGS1
SELDEFER EQU   SELFLGS1
SELPARMT EQU   SELFLGS1
SELRBOPC EQU   SELRB+4
SELRBLEN EQU   SELRB
@NM00039 EQU   TRMRB+6
@NM00038 EQU   TRMFLAGS
TRMSCHAB EQU   TRMFLAGS
TRMRBOPC EQU   TRMRB+4
TRMRBLEN EQU   TRMRB
ARNEDB   EQU   ARLIST+92
@NM00037 EQU   AREXT
ARCOMPC  EQU   ARLIST+26
@NM00036 EQU   ARLIST+25
ARHOST   EQU   ARLIST+20
ARECB    EQU   ARLIST+16
ARASID   EQU   ARLIST+14
ARNMEXT  EQU   ARLIST+7
@NM00035 EQU   ARFLG
ARSEC    EQU   ARFLG
ARINH    EQU   ARFLG
ARDRES   EQU   ARFLG
ARBDUBD  EQU   ARFLG
@NM00034 EQU   ARLIST+5
AROP     EQU   ARLIST+4
ARLL     EQU   ARLIST
GRPPRMSP EQU   GRPPR+10
GRPSLOTN EQU   GRPPR+9
GRPEXTIN EQU   GRPPR+8
GRPNAME  EQU   GRPPR
VOLSER   EQU   VOLRT+4
STPDDVOL EQU   STPDDENT+26
STPDDNVL EQU   STPDDENT+25
@NM00033 EQU   STPDDFLG
STPDDSPL EQU   STPDDFLG
STPDDEXC EQU   STPDDFLG
STPDDPRM EQU   STPDDENT+22
STPDDGPS EQU   STPDDENT+21
STPDDGPI EQU   STPDDENT+20
STPDDGPN EQU   STPDDENT+12
STPDDDVT EQU   STPDDENT+8
STPDDNUM EQU   STPDDENT+6
STPDDLEN EQU   STPDDENT+4
STPDDNXT EQU   STPDDENT
STPDDPTR EQU   STPTB+16
STPICCTR EQU   STPTB+15
@NM00032 EQU   STPFLAGS
STPINVAL EQU   STPFLAGS
STPHDRLN EQU   STPTB+12
STPJOBID EQU   STPTB+8
STPPRVTB EQU   STPTB+4
STPNXTTB EQU   STPTB
@NM00031 EQU   TABHDRET+2
TABSPRET EQU   TABHDRET
TABBFTBL EQU   TABJOBID
TABDDNUM EQU   TABVOLID
@NM00030 EQU   TABP+1
@NM00029 EQU   TABFLAGS
TABFTSPC EQU   TABFLAGS
TABFBFIT EQU   TABFLAGS
TABFSRCD EQU   TABFLAGS
@NM00028 EQU   UNIFLAGS
UNIFINCL EQU   UNIFLAGS
@NM00027 EQU   UNITP+10
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00026
UCBHALI  EQU   @NM00026
UCBRSV09 EQU   @NM00026
UCBRSV08 EQU   @NM00026
UCBRSV07 EQU   @NM00026
UCBRSV06 EQU   @NM00026
UCBRSV05 EQU   @NM00026
UCBRSV04 EQU   @NM00026
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00023 EQU   UCB
@NM00022 EQU   JFCBX+144
JFCBXDEV EQU   JFCBX+140
JFCBXNAM EQU   JFCBX+96
@NM00021 EQU   JFCBX+94
@NM00020 EQU   JFCBX+3
JFCBXTTR EQU   JFCBX
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00016 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
ASVTEND  EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTMAXU EQU   ASVT+516
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00015 EQU   ASVT
RPLVBLN  EQU   RPLVSAM+52
RPLVRLN  EQU   RPLVSAM+48
@NM00014 EQU   RPLVSAM+44
RPLVUPD  EQU   RPLVOPT+1
@NM00013 EQU   RPLVOPT
RPLVKGE  EQU   RPLVOPT
@NM00012 EQU   RPLVOPT
RPLVNEXT EQU   RPLVOPT
RPLVDIR  EQU   RPLVOPT
RPLVLOC  EQU   RPLVOPT
RPLVKEY  EQU   RPLVSAM+36
RPLVBUF  EQU   RPLVSAM+32
@NM00011 EQU   RPLVSAM+28
RPLVACB  EQU   RPLVSAM+24
@NM00010 EQU   RPLVSAM+3
RPLVTYP  EQU   RPLVSAM+2
@NM00009 EQU   RPLVSAM
@NM00008 EQU   RPLV+42
RPLVDATE EQU   RPLV+38
RPLRMSCC EQU   RPLV+36
RPLVRES1 EQU   RPLFLAGA+1
RPLVJRNL EQU   RPLFLAGA
RPLJRCVY EQU   RPLFLAGA
RPLVVOP  EQU   RPLFLAGA
RPLVVIN  EQU   RPLFLAGA
RPLVCOMP EQU   RPLFLAGA
RPLVPROG EQU   RPLFLAGA
RPLFTIME EQU   RPLFLAGA
RPLVRSV3 EQU   RPLV+24
RPLVRSV2 EQU   RPLV+20
RPLVRSV1 EQU   RPLV+16
RPLVVICB EQU   RPLV+12
VVIUNUSD EQU   VVICB+116
VVINUSDC EQU   VVICB+112
VVITPFCH EQU   VVICB+108
VVIDVMEL EQU   VVICB+104
VVIVBSTF EQU   VVICB+100
VVISSOBA EQU   VVICB+96
VVIVSCRA EQU   VVICB+92
VVISTPTB EQU   VVICB+88
VVIDVMTA EQU   VVICB+84
VVIJUCB  EQU   VVICB+80
VVIIUCB  EQU   VVICB+76
VVIUCB   EQU   VVICB+60
VVIVJL   EQU   VVICB+56
VVIVRR   EQU   VVICB+52
VVIQLSPL EQU   VVICB+48
VVIQRPL2 EQU   VVICB+44
VVIVTRK  EQU   VVICB+37
VVIOPCD  EQU   VVICB+36
VVIVQMP  EQU   VVICB+32
VVICATAD EQU   VVICB+24
VVIDCBAD EQU   VVICB+20
VVIACBAD EQU   VVICB+16
VVIFLG7  EQU   VVIFLGA
VVIFLG6  EQU   VVIFLGA
VVIFLG5  EQU   VVIFLGA
VVIFLG4  EQU   VVIFLGA
VVIFLG3  EQU   VVIFLGA
VVIFLG2  EQU   VVIFLGA
VVIFLG1  EQU   VVIFLGA
VVIALCON EQU   VVICB+14
VVICPUID EQU   VVICB+12
VVIUCAT  EQU   VVICB+4
VVICID   EQU   VVICB
ICBLORD  EQU   ICBTRACE+256
ICBOTRC  EQU   ICBTRACE
ICBRESV  EQU   ICB2SSCB+128
ICBVOLST EQU   ICB2SSCB+124
ICBVSCRA EQU   ICB2SSCB+120
ICBSAMP  EQU   ICB2SSCB+118
ICBRESVD EQU   ICB2SSCB+117
ICBCPUID EQU   ICB2SSCB+112
ICBFAB   EQU   ICB2SSCB+108
ICBMSSC  EQU   ICB2SSCB+104
ICBRSVP  EQU   ICB2SSCB+100
ICBAEAP  EQU   ICB2SSCB+96
ICBSIOBP EQU   ICB2SSCB+92
ICBIATNA EQU   ICB2SSCB+88
ICBIPRGA EQU   ICB2SSCB+84
ICBSRBP  EQU   ICB2SSCB+80
ICBVVIC  EQU   ICB2SSCB+72
ICBSIOP  EQU   ICB2SSCB+68
ICBMEP   EQU   ICB2SSCB+64
ICBIORCI EQU   ICB2SSCB+60
ICB2ACTP EQU   ICB2SSCB+56
ICBFG3   EQU   ICBFLG+2
ICBFG2   EQU   ICBFLG+1
@NM00007 EQU   ICBFG1
ICBMSCA  EQU   ICBFG1
ICBMSCMP EQU   ICBFG1
ICBS     EQU   ICBFG1
ICBB     EQU   ICBFG1
ICBV     EQU   ICBFG1
ICBR     EQU   ICBFG1
ICBI     EQU   ICBFG1
ICBNVT   EQU   ICBOPT
ICBVN02P EQU   ICB2SSCB+44
ICBTCB   EQU   ICB2SSCB+40
ICBQHEAD EQU   ICB2SSCB+36
ICBAUCB  EQU   ICB2SSCB+32
ICBPUCB  EQU   ICB2SSCB+28
ICBCOMQ  EQU   ICB2SSCB+24
ICBIOR   EQU   ICB2SSCB+20
ICBCOM   EQU   ICB2SSCB+16
ICBACTV  EQU   ICB2SSCB+12
ICBECB   EQU   ICB2SSCB+8
ICBSSNAM EQU   ICB2SSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00006 EQU   CVTFIX+248
@NM00005 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
@NM00004 EQU   TCBCHAN+8
TCBSAVE  EQU   TCBCHAN+4
@NM00003 EQU   TCBCHAN
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00129 EQU   EXIT
@RT00143 EQU   EXIT
@RT00156 EQU   @EL00002
@RT00164 EQU   @EL00002
@RT00167 EQU   @EL00002
@RT00193 EQU   @EL00003
@RF00312 EQU   @RC00302
@RT00388 EQU   @EL00007
@PB00008 EQU   @PB00009
@RF00483 EQU   @EL00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   ICBVSC00,(C'PLS1701',0701,77355)
